
1633a8fcb49648dba0793808a77716df91001d05d45cc139fcfb3703616d453b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	call   0x401460
  401008:	mov    eax,ds:0x427e60
  40100d:	push   eax
  40100e:	call   0x401040
  401013:	add    esp,0x4
  401016:	mov    ds:0x427e64,eax
  40101b:	pop    ebp
  40101c:	ret    
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	call   0x401000
  401028:	mov    eax,ds:0x427e64
  40102d:	push   eax
  40102e:	call   0x401fb0
  401033:	add    esp,0x4
  401036:	mov    ds:0x427e68,eax
  40103b:	pop    ebp
  40103c:	ret    
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	mov    eax,DWORD PTR [ebp+0x8]
  401046:	mov    eax,DWORD PTR [eax-0x4]
  401049:	pop    ebp
  40104a:	ret    
  40104b:	int3   
  40104c:	int3   
  40104d:	int3   
  40104e:	int3   
  40104f:	int3   
  401050:	push   ebp
  401051:	mov    ebp,esp
  401053:	mov    eax,ds:0x427d84
  401058:	mov    ds:0x427e6c,eax
  40105d:	push   0x41e000
  401062:	push   0x41e00c
  401067:	call   DWORD PTR ds:0x427d88
  40106d:	push   eax
  40106e:	call   DWORD PTR ds:0x427d8c
  401074:	mov    ds:0x427e70,eax
  401079:	pop    ebp
  40107a:	ret    
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	sub    esp,0x2cc
  401089:	push   ebx
  40108a:	push   esi
  40108b:	push   edi
  40108c:	mov    DWORD PTR [ebp-0x290],0x402060
  401096:	mov    DWORD PTR ds:0x427e74,ebp
  40109c:	pusha  
  40109d:	mov    DWORD PTR [ebp-0x294],0x0
  4010a7:	mov    DWORD PTR [ebp-0x2a4],0x80000002
  4010b1:	call   0x401360
  4010b6:	test   eax,eax
  4010b8:	je     0x4010f2
  4010ba:	call   0x401430
  4010bf:	mov    eax,ds:0x427e60
  4010c4:	push   eax
  4010c5:	call   0x401040
  4010ca:	add    esp,0x4
  4010cd:	mov    ds:0x427e64,eax
  4010d2:	mov    ecx,DWORD PTR ds:0x427e64
  4010d8:	push   ecx
  4010d9:	call   0x401fb0
  4010de:	add    esp,0x4
  4010e1:	mov    ds:0x427e78,eax
  4010e6:	mov    edx,DWORD PTR ds:0x427e64
  4010ec:	mov    DWORD PTR [ebp-0x29c],edx
  4010f2:	mov    DWORD PTR [ebp-0x288],0x64
  4010fc:	mov    DWORD PTR [ebp-0x224],0x1
  401106:	mov    DWORD PTR [ebp-0x294],0x0
  401110:	mov    DWORD PTR [ebp-0x258],0x0
  40111a:	mov    DWORD PTR [ebp-0x284],0x1
  401124:	mov    DWORD PTR [ebp-0x21c],0x0
  40112e:	mov    eax,DWORD PTR [ebp-0x294]
  401134:	cmp    eax,DWORD PTR ds:0x427e64
  40113a:	jae    0x4011c6
  401140:	mov    ecx,DWORD PTR [ebp-0x29c]
  401146:	push   ecx
  401147:	mov    edx,DWORD PTR [ebp-0x288]
  40114d:	push   edx
  40114e:	call   0x402100
  401153:	add    esp,0x8
  401156:	mov    DWORD PTR [ebp-0x2a0],eax
  40115c:	mov    eax,DWORD PTR [ebp-0x2a0]
  401162:	push   eax
  401163:	mov    ecx,DWORD PTR ds:0x427e60
  401169:	add    ecx,DWORD PTR [ebp-0x258]
  40116f:	push   ecx
  401170:	mov    edx,DWORD PTR ds:0x427e78
  401176:	add    edx,DWORD PTR [ebp-0x294]
  40117c:	push   edx
  40117d:	call   0x401e10
  401182:	add    esp,0xc
  401185:	mov    eax,DWORD PTR [ebp-0x224]
  40118b:	add    eax,DWORD PTR [ebp-0x288]
  401191:	add    eax,DWORD PTR [ebp-0x258]
  401197:	mov    DWORD PTR [ebp-0x258],eax
  40119d:	mov    ecx,DWORD PTR [ebp-0x294]
  4011a3:	add    ecx,DWORD PTR [ebp-0x288]
  4011a9:	mov    DWORD PTR [ebp-0x294],ecx
  4011af:	mov    edx,DWORD PTR [ebp-0x29c]
  4011b5:	sub    edx,DWORD PTR [ebp-0x2a0]
  4011bb:	mov    DWORD PTR [ebp-0x29c],edx
  4011c1:	jmp    0x40112e
  4011c6:	mov    eax,ds:0x427e64
  4011cb:	push   eax
  4011cc:	mov    ecx,DWORD PTR ds:0x427e78
  4011d2:	push   ecx
  4011d3:	call   0x402180
  4011d8:	add    esp,0x8
  4011db:	mov    DWORD PTR [ebp-0x258],0x0
  4011e5:	mov    DWORD PTR [ebp-0x2c0],0x0
  4011ef:	mov    edx,DWORD PTR ds:0x427e64
  4011f5:	push   edx
  4011f6:	push   0x0
  4011f8:	mov    eax,ds:0x427e68
  4011fd:	push   eax
  4011fe:	call   0x401020
  401203:	add    esp,0xc
  401206:	mov    ecx,DWORD PTR ds:0x427e64
  40120c:	mov    DWORD PTR [ebp-0x2c8],ecx
  401212:	mov    edx,DWORD PTR [ebp-0x2c0]
  401218:	cmp    edx,DWORD PTR ds:0x427e64
  40121e:	jae    0x4012a9
  401224:	mov    eax,DWORD PTR [ebp-0x2c8]
  40122a:	push   eax
  40122b:	mov    ecx,DWORD PTR [ebp-0x288]
  401231:	push   ecx
  401232:	call   0x402100
  401237:	add    esp,0x8
  40123a:	mov    DWORD PTR [ebp-0x2cc],eax
  401240:	mov    edx,DWORD PTR [ebp-0x2cc]
  401246:	push   edx
  401247:	mov    eax,ds:0x427e60
  40124c:	add    eax,DWORD PTR [ebp-0x258]
  401252:	push   eax
  401253:	mov    ecx,DWORD PTR ds:0x427e68
  401259:	add    ecx,DWORD PTR [ebp-0x2c0]
  40125f:	push   ecx
  401260:	call   0x401e10
  401265:	add    esp,0xc
  401268:	mov    edx,DWORD PTR [ebp-0x224]
  40126e:	add    edx,DWORD PTR [ebp-0x288]
  401274:	add    edx,DWORD PTR [ebp-0x258]
  40127a:	mov    DWORD PTR [ebp-0x258],edx
  401280:	mov    eax,DWORD PTR [ebp-0x2c0]
  401286:	add    eax,DWORD PTR [ebp-0x288]
  40128c:	mov    DWORD PTR [ebp-0x2c0],eax
  401292:	mov    ecx,DWORD PTR [ebp-0x2c8]
  401298:	sub    ecx,DWORD PTR [ebp-0x2cc]
  40129e:	mov    DWORD PTR [ebp-0x2c8],ecx
  4012a4:	jmp    0x401212
  4012a9:	mov    edx,DWORD PTR ds:0x427e64
  4012af:	push   edx
  4012b0:	mov    eax,ds:0x427e68
  4012b5:	push   eax
  4012b6:	call   0x402180
  4012bb:	add    esp,0x8
  4012be:	mov    DWORD PTR [ebp-0x290],0x402060
  4012c8:	mov    ecx,DWORD PTR ds:0x427e78
  4012ce:	mov    edx,DWORD PTR ds:0x427e68
  4012d4:	mov    DWORD PTR [ecx],edx
  4012d6:	push   0x19000
  4012db:	call   0x401fb0
  4012e0:	add    esp,0x4
  4012e3:	mov    ds:0x427e7c,eax
  4012e8:	mov    eax,ds:0x427e7c
  4012ed:	add    eax,0x200
  4012f2:	mov    ds:0x427e80,eax
  4012f7:	push   0x17700
  4012fc:	mov    ecx,DWORD PTR ds:0x427e78
  401302:	push   ecx
  401303:	mov    edx,DWORD PTR ds:0x427e80
  401309:	push   edx
  40130a:	call   0x401e10
  40130f:	add    esp,0xc
  401312:	mov    eax,ds:0x427e7c
  401317:	add    eax,0x17590
  40131c:	mov    ds:0x427e84,eax
  401321:	mov    ecx,ecx
  401323:	mov    ecx,ecx
  401325:	mov    ecx,ecx
  401327:	popa   
  401328:	mov    ecx,ecx
  40132a:	mov    ecx,ecx
  40132c:	mov    ecx,ecx
  40132e:	mov    ecx,ecx
  401330:	push   0x37
  401332:	mov    eax,DWORD PTR [ebp-0x290]
  401338:	mov    ecx,ecx
  40133a:	mov    ecx,ecx
  40133c:	mov    ecx,esp
  40133e:	sub    ecx,0x22
  401341:	mov    edx,0x1e
  401346:	mov    edx,edx
  401348:	mov    DWORD PTR [ecx+edx*1+0x4],eax
  40134c:	mov    edx,edx
  40134e:	ret    
  40134f:	mov    edx,edx
  401351:	xor    eax,eax
  401353:	pop    edi
  401354:	pop    esi
  401355:	pop    ebx
  401356:	mov    esp,ebp
  401358:	pop    ebp
  401359:	ret    
  40135a:	int3   
  40135b:	int3   
  40135c:	int3   
  40135d:	int3   
  40135e:	int3   
  40135f:	int3   
  401360:	push   ebp
  401361:	mov    ebp,esp
  401363:	sub    esp,0x14
  401366:	mov    eax,ds:0x427d90
  40136b:	mov    DWORD PTR [ebp-0x10],eax
  40136e:	mov    DWORD PTR [ebp-0xc],0x41e028
  401375:	mov    DWORD PTR [ebp-0x4],0x41e088
  40137c:	mov    ecx,DWORD PTR ds:0x427da4
  401382:	mov    DWORD PTR [ebp-0x8],ecx
  401385:	lea    edx,[ebp-0x14]
  401388:	push   edx
  401389:	mov    eax,DWORD PTR [ebp-0xc]
  40138c:	push   eax
  40138d:	push   0x80000002
  401392:	call   DWORD PTR [ebp-0x8]
  401395:	test   eax,eax
  401397:	jne    0x4013a2
  401399:	mov    eax,0x1
  40139e:	jmp    0x4013d4
  4013a0:	jmp    0x4013ab
  4013a2:	call   0x401360
  4013a7:	xor    eax,eax
  4013a9:	jmp    0x4013d4
  4013ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4013ae:	movzx  edx,BYTE PTR [ecx]
  4013b1:	cmp    edx,0x55
  4013b4:	je     0x4013d4
  4013b6:	mov    eax,DWORD PTR [ebp-0x10]
  4013b9:	movzx  ecx,BYTE PTR [eax]
  4013bc:	cmp    ecx,0x8b
  4013c2:	je     0x4013d4
  4013c4:	mov    edx,DWORD PTR [ebp-0x10]
  4013c7:	movzx  eax,BYTE PTR [edx]
  4013ca:	cmp    eax,0x6a
  4013cd:	je     0x4013d4
  4013cf:	call   0x4013e0
  4013d4:	mov    esp,ebp
  4013d6:	pop    ebp
  4013d7:	ret    
  4013d8:	int3   
  4013d9:	int3   
  4013da:	int3   
  4013db:	int3   
  4013dc:	int3   
  4013dd:	int3   
  4013de:	int3   
  4013df:	int3   
  4013e0:	push   ebp
  4013e1:	mov    ebp,esp
  4013e3:	call   0x401080
  4013e8:	pop    ebp
  4013e9:	ret    
  4013ea:	int3   
  4013eb:	int3   
  4013ec:	int3   
  4013ed:	int3   
  4013ee:	int3   
  4013ef:	int3   
  4013f0:	push   ebp
  4013f1:	mov    ebp,esp
  4013f3:	mov    eax,ds:0x427e88
  4013f8:	sub    eax,0x8
  4013fb:	shr    eax,1
  4013fd:	mov    ds:0x427e88,eax
  401402:	pop    ebp
  401403:	ret    
  401404:	int3   
  401405:	int3   
  401406:	int3   
  401407:	int3   
  401408:	int3   
  401409:	int3   
  40140a:	int3   
  40140b:	int3   
  40140c:	int3   
  40140d:	int3   
  40140e:	int3   
  40140f:	int3   
  401410:	push   ebp
  401411:	mov    ebp,esp
  401413:	pop    ebp
  401414:	ret    0x10
  401417:	int3   
  401418:	int3   
  401419:	int3   
  40141a:	int3   
  40141b:	int3   
  40141c:	int3   
  40141d:	int3   
  40141e:	int3   
  40141f:	int3   
  401420:	push   ebp
  401421:	mov    ebp,esp
  401423:	pop    ebp
  401424:	ret    0x10
  401427:	int3   
  401428:	int3   
  401429:	int3   
  40142a:	int3   
  40142b:	int3   
  40142c:	int3   
  40142d:	int3   
  40142e:	int3   
  40142f:	int3   
  401430:	push   ebp
  401431:	mov    ebp,esp
  401433:	sub    esp,0x10
  401436:	mov    DWORD PTR [ebp-0x10],0x405f51
  40143d:	mov    DWORD PTR [ebp-0x4],0x4
  401444:	mov    eax,DWORD PTR [ebp-0x10]
  401447:	add    eax,DWORD PTR [ebp-0x4]
  40144a:	mov    DWORD PTR [ebp-0xc],eax
  40144d:	mov    ecx,DWORD PTR [ebp-0xc]
  401450:	mov    DWORD PTR [ebp-0x8],ecx
  401453:	mov    edx,DWORD PTR [ebp-0x8]
  401456:	mov    DWORD PTR ds:0x427e60,edx
  40145c:	mov    esp,ebp
  40145e:	pop    ebp
  40145f:	ret    
  401460:	push   ebp
  401461:	mov    ebp,esp
  401463:	sub    esp,0x8
  401466:	mov    DWORD PTR [ebp-0x4],0x4
  40146d:	mov    eax,DWORD PTR [ebp-0x4]
  401470:	add    eax,0x405d48
  401475:	mov    ds:0x427e60,eax
  40147a:	mov    ecx,DWORD PTR ds:0x427da8
  401480:	mov    DWORD PTR [ebp-0x8],ecx
  401483:	mov    esp,ebp
  401485:	pop    ebp
  401486:	ret    
  401487:	int3   
  401488:	int3   
  401489:	int3   
  40148a:	int3   
  40148b:	int3   
  40148c:	int3   
  40148d:	int3   
  40148e:	int3   
  40148f:	int3   
  401490:	push   ebp
  401491:	mov    ebp,esp
  401493:	sub    esp,0x8
  401496:	mov    DWORD PTR [ebp-0x4],0x86de
  40149d:	mov    DWORD PTR [ebp-0x4],0x86de
  4014a4:	mov    DWORD PTR [ebp-0x4],0x86de
  4014ab:	mov    DWORD PTR [ebp-0x4],0x86de
  4014b2:	mov    DWORD PTR [ebp-0x4],0x86de
  4014b9:	mov    DWORD PTR [ebp-0x4],0x86de
  4014c0:	mov    DWORD PTR [ebp-0x4],0x86de
  4014c7:	mov    DWORD PTR [ebp-0x4],0x86de
  4014ce:	mov    DWORD PTR [ebp-0x4],0x86de
  4014d5:	mov    DWORD PTR [ebp-0x4],0x86de
  4014dc:	mov    DWORD PTR [ebp-0x4],0x86de
  4014e3:	mov    DWORD PTR [ebp-0x4],0x86de
  4014ea:	mov    DWORD PTR [ebp-0x4],0x86de
  4014f1:	mov    DWORD PTR [ebp-0x4],0x86de
  4014f8:	mov    DWORD PTR [ebp-0x4],0x86de
  4014ff:	mov    DWORD PTR [ebp-0x4],0x86de
  401506:	mov    DWORD PTR [ebp-0x4],0x86de
  40150d:	mov    DWORD PTR [ebp-0x4],0x86de
  401514:	mov    DWORD PTR [ebp-0x4],0x86de
  40151b:	mov    DWORD PTR [ebp-0x4],0x86de
  401522:	mov    DWORD PTR [ebp-0x4],0x86de
  401529:	mov    DWORD PTR [ebp-0x4],0x86de
  401530:	mov    DWORD PTR [ebp-0x4],0x86de
  401537:	mov    DWORD PTR [ebp-0x4],0x86de
  40153e:	mov    DWORD PTR [ebp-0x4],0x86de
  401545:	mov    DWORD PTR [ebp-0x4],0x86de
  40154c:	mov    DWORD PTR [ebp-0x4],0x86de
  401553:	mov    DWORD PTR [ebp-0x4],0x86de
  40155a:	mov    DWORD PTR [ebp-0x4],0x86de
  401561:	mov    DWORD PTR [ebp-0x4],0x86de
  401568:	mov    DWORD PTR [ebp-0x4],0x86de
  40156f:	mov    DWORD PTR [ebp-0x4],0x86de
  401576:	mov    DWORD PTR [ebp-0x4],0x86de
  40157d:	mov    DWORD PTR [ebp-0x4],0x86de
  401584:	mov    DWORD PTR [ebp-0x4],0x86de
  40158b:	mov    DWORD PTR [ebp-0x4],0x86de
  401592:	mov    DWORD PTR [ebp-0x4],0x86de
  401599:	mov    DWORD PTR [ebp-0x4],0x86de
  4015a0:	mov    DWORD PTR [ebp-0x4],0x86de
  4015a7:	mov    DWORD PTR [ebp-0x4],0x86de
  4015ae:	mov    DWORD PTR [ebp-0x4],0x86de
  4015b5:	mov    DWORD PTR [ebp-0x4],0x86de
  4015bc:	mov    DWORD PTR [ebp-0x4],0x86de
  4015c3:	mov    DWORD PTR [ebp-0x4],0x86de
  4015ca:	mov    DWORD PTR [ebp-0x4],0x86de
  4015d1:	mov    DWORD PTR [ebp-0x4],0x86de
  4015d8:	mov    DWORD PTR [ebp-0x4],0x86de
  4015df:	mov    DWORD PTR [ebp-0x4],0x86de
  4015e6:	mov    DWORD PTR [ebp-0x4],0x86de
  4015ed:	mov    DWORD PTR [ebp-0x4],0x86de
  4015f4:	mov    DWORD PTR [ebp-0x4],0x86de
  4015fb:	mov    DWORD PTR [ebp-0x4],0x86de
  401602:	mov    DWORD PTR [ebp-0x4],0x86de
  401609:	mov    DWORD PTR [ebp-0x4],0x86de
  401610:	mov    DWORD PTR [ebp-0x4],0x86de
  401617:	mov    DWORD PTR [ebp-0x4],0x86de
  40161e:	mov    DWORD PTR [ebp-0x4],0x86de
  401625:	mov    DWORD PTR [ebp-0x4],0x86de
  40162c:	mov    DWORD PTR [ebp-0x4],0x86de
  401633:	mov    DWORD PTR [ebp-0x4],0x86de
  40163a:	mov    DWORD PTR [ebp-0x4],0x86de
  401641:	mov    DWORD PTR [ebp-0x4],0x86de
  401648:	mov    DWORD PTR [ebp-0x4],0x86de
  40164f:	mov    DWORD PTR [ebp-0x4],0x86de
  401656:	mov    DWORD PTR [ebp-0x4],0x86de
  40165d:	mov    DWORD PTR [ebp-0x4],0x86de
  401664:	mov    DWORD PTR [ebp-0x4],0x86de
  40166b:	mov    DWORD PTR [ebp-0x4],0x86de
  401672:	mov    DWORD PTR [ebp-0x4],0x86de
  401679:	mov    DWORD PTR [ebp-0x4],0x86de
  401680:	mov    DWORD PTR [ebp-0x4],0x86de
  401687:	mov    DWORD PTR [ebp-0x4],0x86de
  40168e:	mov    DWORD PTR [ebp-0x4],0x86de
  401695:	mov    DWORD PTR [ebp-0x4],0x86de
  40169c:	mov    DWORD PTR [ebp-0x4],0x86de
  4016a3:	mov    DWORD PTR [ebp-0x4],0x86de
  4016aa:	mov    DWORD PTR [ebp-0x4],0x86de
  4016b1:	mov    DWORD PTR [ebp-0x4],0x86de
  4016b8:	mov    DWORD PTR [ebp-0x4],0x86de
  4016bf:	mov    DWORD PTR [ebp-0x4],0x86de
  4016c6:	mov    DWORD PTR [ebp-0x4],0x86de
  4016cd:	mov    DWORD PTR [ebp-0x4],0x86de
  4016d4:	mov    DWORD PTR [ebp-0x4],0x86de
  4016db:	mov    DWORD PTR [ebp-0x4],0x86de
  4016e2:	mov    DWORD PTR [ebp-0x4],0x86de
  4016e9:	mov    DWORD PTR [ebp-0x4],0x86de
  4016f0:	mov    DWORD PTR [ebp-0x4],0x86de
  4016f7:	mov    DWORD PTR [ebp-0x4],0x86de
  4016fe:	mov    DWORD PTR [ebp-0x4],0x86de
  401705:	mov    DWORD PTR [ebp-0x4],0x86de
  40170c:	mov    DWORD PTR [ebp-0x4],0x86de
  401713:	mov    DWORD PTR [ebp-0x4],0x86de
  40171a:	mov    DWORD PTR [ebp-0x4],0x86de
  401721:	mov    DWORD PTR [ebp-0x4],0x86de
  401728:	mov    DWORD PTR [ebp-0x4],0x86de
  40172f:	mov    DWORD PTR [ebp-0x4],0x86de
  401736:	mov    DWORD PTR [ebp-0x4],0x86de
  40173d:	mov    DWORD PTR [ebp-0x4],0x86de
  401744:	mov    DWORD PTR [ebp-0x4],0x86de
  40174b:	mov    DWORD PTR [ebp-0x4],0x86de
  401752:	mov    DWORD PTR [ebp-0x4],0x86de
  401759:	mov    DWORD PTR [ebp-0x4],0x86de
  401760:	mov    DWORD PTR [ebp-0x4],0x86de
  401767:	mov    DWORD PTR [ebp-0x4],0x86de
  40176e:	mov    DWORD PTR [ebp-0x4],0x86de
  401775:	mov    DWORD PTR [ebp-0x4],0x86de
  40177c:	mov    DWORD PTR [ebp-0x4],0x86de
  401783:	mov    DWORD PTR [ebp-0x4],0x86de
  40178a:	mov    DWORD PTR [ebp-0x4],0x86de
  401791:	mov    DWORD PTR [ebp-0x4],0x86de
  401798:	mov    DWORD PTR [ebp-0x4],0x86de
  40179f:	mov    DWORD PTR [ebp-0x4],0x86de
  4017a6:	mov    DWORD PTR [ebp-0x4],0x86de
  4017ad:	mov    DWORD PTR [ebp-0x4],0x86de
  4017b4:	mov    DWORD PTR [ebp-0x4],0x86de
  4017bb:	mov    DWORD PTR [ebp-0x4],0x86de
  4017c2:	mov    DWORD PTR [ebp-0x4],0x86de
  4017c9:	mov    DWORD PTR [ebp-0x4],0x86de
  4017d0:	mov    DWORD PTR [ebp-0x4],0x86de
  4017d7:	mov    DWORD PTR [ebp-0x4],0x86de
  4017de:	mov    DWORD PTR [ebp-0x4],0x86de
  4017e5:	mov    DWORD PTR [ebp-0x4],0x86de
  4017ec:	mov    DWORD PTR [ebp-0x4],0x86de
  4017f3:	mov    DWORD PTR [ebp-0x4],0x86de
  4017fa:	mov    DWORD PTR [ebp-0x4],0x86de
  401801:	mov    DWORD PTR [ebp-0x4],0x86de
  401808:	mov    DWORD PTR [ebp-0x4],0x86de
  40180f:	mov    DWORD PTR [ebp-0x4],0x86de
  401816:	mov    DWORD PTR [ebp-0x4],0x86de
  40181d:	mov    DWORD PTR [ebp-0x4],0x86de
  401824:	mov    DWORD PTR [ebp-0x4],0x86de
  40182b:	mov    DWORD PTR [ebp-0x4],0x86de
  401832:	mov    DWORD PTR [ebp-0x4],0x86de
  401839:	mov    DWORD PTR [ebp-0x4],0x86de
  401840:	mov    DWORD PTR [ebp-0x4],0x86de
  401847:	mov    DWORD PTR [ebp-0x4],0x86de
  40184e:	mov    DWORD PTR [ebp-0x4],0x86de
  401855:	mov    DWORD PTR [ebp-0x4],0x86de
  40185c:	mov    DWORD PTR [ebp-0x4],0x86de
  401863:	mov    DWORD PTR [ebp-0x4],0x86de
  40186a:	mov    DWORD PTR [ebp-0x4],0x86de
  401871:	mov    DWORD PTR [ebp-0x4],0x86de
  401878:	mov    DWORD PTR [ebp-0x4],0x86de
  40187f:	mov    DWORD PTR [ebp-0x4],0x86de
  401886:	mov    DWORD PTR [ebp-0x4],0x86de
  40188d:	mov    DWORD PTR [ebp-0x4],0x86de
  401894:	mov    DWORD PTR [ebp-0x4],0x86de
  40189b:	mov    DWORD PTR [ebp-0x4],0x86de
  4018a2:	mov    DWORD PTR [ebp-0x4],0x86de
  4018a9:	mov    DWORD PTR [ebp-0x4],0x86de
  4018b0:	mov    DWORD PTR [ebp-0x4],0x86de
  4018b7:	mov    DWORD PTR [ebp-0x4],0x86de
  4018be:	mov    DWORD PTR [ebp-0x4],0x86de
  4018c5:	mov    DWORD PTR [ebp-0x4],0x86de
  4018cc:	mov    DWORD PTR [ebp-0x4],0x86de
  4018d3:	mov    DWORD PTR [ebp-0x4],0x86de
  4018da:	mov    DWORD PTR [ebp-0x4],0x86de
  4018e1:	mov    DWORD PTR [ebp-0x4],0x86de
  4018e8:	mov    DWORD PTR [ebp-0x4],0x86de
  4018ef:	mov    DWORD PTR [ebp-0x4],0x86de
  4018f6:	mov    DWORD PTR [ebp-0x4],0x86de
  4018fd:	mov    DWORD PTR [ebp-0x4],0x86de
  401904:	mov    DWORD PTR [ebp-0x4],0x86de
  40190b:	mov    DWORD PTR [ebp-0x4],0x86de
  401912:	mov    DWORD PTR [ebp-0x4],0x86de
  401919:	mov    DWORD PTR [ebp-0x4],0x86de
  401920:	mov    DWORD PTR [ebp-0x4],0x86de
  401927:	mov    DWORD PTR [ebp-0x4],0x86de
  40192e:	mov    DWORD PTR [ebp-0x4],0x86de
  401935:	mov    DWORD PTR [ebp-0x4],0x86de
  40193c:	mov    DWORD PTR [ebp-0x4],0x86de
  401943:	mov    DWORD PTR [ebp-0x4],0x86de
  40194a:	mov    DWORD PTR [ebp-0x4],0x86de
  401951:	mov    DWORD PTR [ebp-0x4],0x86de
  401958:	mov    DWORD PTR [ebp-0x4],0x86de
  40195f:	mov    DWORD PTR [ebp-0x4],0x86de
  401966:	mov    DWORD PTR [ebp-0x4],0x86de
  40196d:	mov    DWORD PTR [ebp-0x4],0x86de
  401974:	mov    DWORD PTR [ebp-0x4],0x86de
  40197b:	mov    DWORD PTR [ebp-0x4],0x86de
  401982:	mov    DWORD PTR [ebp-0x4],0x86de
  401989:	mov    DWORD PTR [ebp-0x4],0x86de
  401990:	mov    DWORD PTR [ebp-0x4],0x86de
  401997:	mov    DWORD PTR [ebp-0x4],0x86de
  40199e:	mov    DWORD PTR [ebp-0x4],0x86de
  4019a5:	mov    DWORD PTR [ebp-0x4],0x86de
  4019ac:	mov    DWORD PTR [ebp-0x4],0x86de
  4019b3:	mov    DWORD PTR [ebp-0x4],0x86de
  4019ba:	mov    DWORD PTR [ebp-0x4],0x86de
  4019c1:	mov    DWORD PTR [ebp-0x4],0x86de
  4019c8:	mov    DWORD PTR [ebp-0x4],0x86de
  4019cf:	mov    DWORD PTR [ebp-0x4],0x86de
  4019d6:	mov    DWORD PTR [ebp-0x4],0x86de
  4019dd:	mov    DWORD PTR [ebp-0x4],0x86de
  4019e4:	mov    DWORD PTR [ebp-0x4],0x86de
  4019eb:	mov    DWORD PTR [ebp-0x4],0x86de
  4019f2:	mov    DWORD PTR [ebp-0x4],0x86de
  4019f9:	mov    DWORD PTR [ebp-0x4],0x86de
  401a00:	mov    DWORD PTR [ebp-0x4],0x86de
  401a07:	mov    DWORD PTR [ebp-0x4],0x86de
  401a0e:	mov    DWORD PTR [ebp-0x4],0x86de
  401a15:	mov    DWORD PTR [ebp-0x4],0x86de
  401a1c:	mov    DWORD PTR [ebp-0x4],0x86de
  401a23:	mov    DWORD PTR [ebp-0x4],0x86de
  401a2a:	mov    DWORD PTR [ebp-0x4],0x86de
  401a31:	mov    DWORD PTR [ebp-0x4],0x86de
  401a38:	mov    DWORD PTR [ebp-0x4],0x86de
  401a3f:	mov    DWORD PTR [ebp-0x4],0x86de
  401a46:	mov    DWORD PTR [ebp-0x4],0x86de
  401a4d:	mov    DWORD PTR [ebp-0x4],0x86de
  401a54:	mov    DWORD PTR [ebp-0x4],0x86de
  401a5b:	mov    DWORD PTR [ebp-0x4],0x86de
  401a62:	mov    DWORD PTR [ebp-0x4],0x86de
  401a69:	mov    DWORD PTR [ebp-0x4],0x86de
  401a70:	mov    DWORD PTR [ebp-0x4],0x86de
  401a77:	mov    DWORD PTR [ebp-0x4],0x86de
  401a7e:	mov    DWORD PTR [ebp-0x4],0x86de
  401a85:	mov    DWORD PTR [ebp-0x4],0x86de
  401a8c:	mov    DWORD PTR [ebp-0x4],0x86de
  401a93:	mov    DWORD PTR [ebp-0x4],0x86de
  401a9a:	mov    DWORD PTR [ebp-0x4],0x86de
  401aa1:	mov    DWORD PTR [ebp-0x4],0x86de
  401aa8:	mov    DWORD PTR [ebp-0x4],0x86de
  401aaf:	mov    DWORD PTR [ebp-0x4],0x86de
  401ab6:	mov    DWORD PTR [ebp-0x4],0x86de
  401abd:	mov    DWORD PTR [ebp-0x4],0x86de
  401ac4:	mov    DWORD PTR [ebp-0x4],0x86de
  401acb:	mov    DWORD PTR [ebp-0x4],0x86de
  401ad2:	mov    DWORD PTR [ebp-0x4],0x86de
  401ad9:	mov    DWORD PTR [ebp-0x4],0x86de
  401ae0:	mov    DWORD PTR [ebp-0x4],0x86de
  401ae7:	mov    DWORD PTR [ebp-0x4],0x86de
  401aee:	mov    DWORD PTR [ebp-0x4],0x86de
  401af5:	mov    DWORD PTR [ebp-0x4],0x86de
  401afc:	mov    DWORD PTR [ebp-0x4],0x86de
  401b03:	mov    DWORD PTR [ebp-0x4],0x86de
  401b0a:	mov    DWORD PTR [ebp-0x4],0x86de
  401b11:	mov    DWORD PTR [ebp-0x4],0x86de
  401b18:	mov    DWORD PTR [ebp-0x4],0x86de
  401b1f:	mov    DWORD PTR [ebp-0x4],0x86de
  401b26:	mov    DWORD PTR [ebp-0x4],0x86de
  401b2d:	mov    DWORD PTR [ebp-0x4],0x86de
  401b34:	mov    DWORD PTR [ebp-0x4],0x86de
  401b3b:	mov    DWORD PTR [ebp-0x4],0x86de
  401b42:	mov    DWORD PTR [ebp-0x4],0x86de
  401b49:	mov    DWORD PTR [ebp-0x4],0x86de
  401b50:	mov    DWORD PTR [ebp-0x4],0x86de
  401b57:	mov    DWORD PTR [ebp-0x4],0x86de
  401b5e:	mov    DWORD PTR [ebp-0x4],0x86de
  401b65:	mov    DWORD PTR [ebp-0x4],0x86de
  401b6c:	mov    DWORD PTR [ebp-0x4],0x86de
  401b73:	mov    DWORD PTR [ebp-0x4],0x86de
  401b7a:	mov    DWORD PTR [ebp-0x4],0x86de
  401b81:	mov    DWORD PTR [ebp-0x4],0x86de
  401b88:	mov    DWORD PTR [ebp-0x4],0x86de
  401b8f:	mov    DWORD PTR [ebp-0x4],0x86de
  401b96:	mov    DWORD PTR [ebp-0x4],0x86de
  401b9d:	mov    DWORD PTR [ebp-0x4],0x86de
  401ba4:	mov    DWORD PTR [ebp-0x4],0x86de
  401bab:	mov    DWORD PTR [ebp-0x4],0x86de
  401bb2:	mov    DWORD PTR [ebp-0x4],0x86de
  401bb9:	mov    DWORD PTR [ebp-0x4],0x86de
  401bc0:	mov    DWORD PTR [ebp-0x4],0x86de
  401bc7:	mov    DWORD PTR [ebp-0x4],0x86de
  401bce:	mov    DWORD PTR [ebp-0x4],0x86de
  401bd5:	mov    DWORD PTR [ebp-0x4],0x86de
  401bdc:	mov    DWORD PTR [ebp-0x4],0x86de
  401be3:	mov    DWORD PTR [ebp-0x4],0x86de
  401bea:	mov    DWORD PTR [ebp-0x4],0x86de
  401bf1:	mov    DWORD PTR [ebp-0x4],0x86de
  401bf8:	mov    DWORD PTR [ebp-0x4],0x86de
  401bff:	mov    DWORD PTR [ebp-0x4],0x86de
  401c06:	mov    DWORD PTR [ebp-0x4],0x86de
  401c0d:	mov    DWORD PTR [ebp-0x4],0x86de
  401c14:	mov    DWORD PTR [ebp-0x4],0x86de
  401c1b:	mov    DWORD PTR [ebp-0x4],0x86de
  401c22:	mov    DWORD PTR [ebp-0x4],0x86de
  401c29:	mov    DWORD PTR [ebp-0x4],0x86de
  401c30:	mov    DWORD PTR [ebp-0x4],0x86de
  401c37:	mov    DWORD PTR [ebp-0x4],0x86de
  401c3e:	mov    DWORD PTR [ebp-0x4],0x86de
  401c45:	mov    DWORD PTR [ebp-0x4],0x86de
  401c4c:	mov    DWORD PTR [ebp-0x4],0x86de
  401c53:	mov    DWORD PTR [ebp-0x4],0x86de
  401c5a:	mov    DWORD PTR [ebp-0x4],0x86de
  401c61:	mov    DWORD PTR [ebp-0x4],0x86de
  401c68:	mov    DWORD PTR [ebp-0x4],0x86de
  401c6f:	mov    DWORD PTR [ebp-0x4],0x86de
  401c76:	mov    DWORD PTR [ebp-0x4],0x86de
  401c7d:	mov    DWORD PTR [ebp-0x4],0x86de
  401c84:	mov    DWORD PTR [ebp-0x4],0x86de
  401c8b:	mov    DWORD PTR [ebp-0x4],0x86de
  401c92:	mov    DWORD PTR [ebp-0x4],0x86de
  401c99:	mov    DWORD PTR [ebp-0x4],0x86de
  401ca0:	mov    DWORD PTR [ebp-0x4],0x86de
  401ca7:	mov    DWORD PTR [ebp-0x4],0x86de
  401cae:	mov    DWORD PTR [ebp-0x4],0x86de
  401cb5:	mov    DWORD PTR [ebp-0x4],0x86de
  401cbc:	mov    DWORD PTR [ebp-0x4],0x86de
  401cc3:	mov    DWORD PTR [ebp-0x4],0x86de
  401cca:	mov    DWORD PTR [ebp-0x4],0x86de
  401cd1:	mov    DWORD PTR [ebp-0x4],0x86de
  401cd8:	mov    DWORD PTR [ebp-0x4],0x86de
  401cdf:	mov    DWORD PTR [ebp-0x4],0x86de
  401ce6:	mov    DWORD PTR [ebp-0x4],0x86de
  401ced:	mov    DWORD PTR [ebp-0x4],0x86de
  401cf4:	mov    DWORD PTR [ebp-0x4],0x86de
  401cfb:	mov    DWORD PTR [ebp-0x4],0x86de
  401d02:	mov    DWORD PTR [ebp-0x4],0x86de
  401d09:	mov    DWORD PTR [ebp-0x4],0x86de
  401d10:	mov    DWORD PTR [ebp-0x4],0x86de
  401d17:	mov    DWORD PTR [ebp-0x4],0x86de
  401d1e:	mov    DWORD PTR [ebp-0x4],0x86de
  401d25:	mov    DWORD PTR [ebp-0x4],0x86de
  401d2c:	mov    DWORD PTR [ebp-0x4],0x86de
  401d33:	mov    DWORD PTR [ebp-0x4],0x86de
  401d3a:	mov    DWORD PTR [ebp-0x4],0x86de
  401d41:	mov    DWORD PTR [ebp-0x4],0x86de
  401d48:	mov    DWORD PTR [ebp-0x4],0x86de
  401d4f:	mov    DWORD PTR [ebp-0x4],0x86de
  401d56:	mov    DWORD PTR [ebp-0x4],0x86de
  401d5d:	mov    DWORD PTR [ebp-0x4],0x86de
  401d64:	mov    DWORD PTR [ebp-0x4],0x86de
  401d6b:	mov    DWORD PTR [ebp-0x4],0x86de
  401d72:	mov    DWORD PTR [ebp-0x4],0x86de
  401d79:	mov    DWORD PTR [ebp-0x4],0x86de
  401d80:	mov    DWORD PTR [ebp-0x4],0x86de
  401d87:	mov    DWORD PTR [ebp-0x4],0x0
  401d8e:	jmp    0x401d99
  401d90:	mov    eax,DWORD PTR [ebp-0x4]
  401d93:	add    eax,0x1
  401d96:	mov    DWORD PTR [ebp-0x4],eax
  401d99:	mov    ecx,DWORD PTR [ebp-0x4]
  401d9c:	cmp    ecx,DWORD PTR ds:0x427e88
  401da2:	jae    0x401e07
  401da4:	mov    edx,DWORD PTR [ebp-0x4]
  401da7:	push   edx
  401da8:	mov    eax,ds:0x427e8c
  401dad:	push   eax
  401dae:	call   0x4020a0
  401db3:	add    esp,0x8
  401db6:	sar    eax,0xc
  401db9:	cmp    eax,0x3
  401dbc:	jne    0x401e05
  401dbe:	mov    ecx,DWORD PTR [ebp-0x4]
  401dc1:	push   ecx
  401dc2:	mov    edx,DWORD PTR ds:0x427e8c
  401dc8:	push   edx
  401dc9:	call   0x4020a0
  401dce:	add    esp,0x8
  401dd1:	and    eax,0xfff
  401dd6:	add    eax,0x907
  401ddb:	mov    DWORD PTR [ebp-0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp+0x8]
  401de1:	mov    ecx,DWORD PTR [ebp+0xc]
  401de4:	add    ecx,DWORD PTR [eax]
  401de6:	mov    edx,DWORD PTR [ebp-0x8]
  401de9:	mov    eax,DWORD PTR [ecx+edx*1-0x907]
  401df0:	add    eax,DWORD PTR [ebp+0x10]
  401df3:	mov    ecx,DWORD PTR [ebp+0x8]
  401df6:	mov    edx,DWORD PTR [ebp+0xc]
  401df9:	add    edx,DWORD PTR [ecx]
  401dfb:	mov    ecx,DWORD PTR [ebp-0x8]
  401dfe:	mov    DWORD PTR [edx+ecx*1-0x907],eax
  401e05:	jmp    0x401d90
  401e07:	mov    esp,ebp
  401e09:	pop    ebp
  401e0a:	ret    
  401e0b:	int3   
  401e0c:	int3   
  401e0d:	int3   
  401e0e:	int3   
  401e0f:	int3   
  401e10:	push   ebp
  401e11:	mov    ebp,esp
  401e13:	sub    esp,0x214
  401e19:	push   0x104
  401e1e:	lea    eax,[ebp-0x208]
  401e24:	push   eax
  401e25:	call   DWORD PTR ds:0x427e90
  401e2b:	mov    DWORD PTR [ebp-0x210],0x0
  401e35:	jmp    0x401e46
  401e37:	mov    ecx,DWORD PTR [ebp-0x210]
  401e3d:	add    ecx,0x1
  401e40:	mov    DWORD PTR [ebp-0x210],ecx
  401e46:	mov    edx,DWORD PTR [ebp-0x210]
  401e4c:	cmp    edx,DWORD PTR [ebp+0x10]
  401e4f:	jge    0x401f6f
  401e55:	cmp    DWORD PTR [ebp-0x210],0x0
  401e5c:	jne    0x401f15
  401e62:	mov    DWORD PTR [ebp-0x214],0x41e0a8
  401e6c:	mov    eax,0x5c
  401e71:	mov    ecx,DWORD PTR [ebp-0x214]
  401e77:	mov    WORD PTR [ecx],ax
  401e7a:	mov    edx,0x73
  401e7f:	mov    eax,DWORD PTR [ebp-0x214]
  401e85:	mov    WORD PTR [eax+0x2],dx
  401e89:	mov    ecx,0x79
  401e8e:	mov    edx,DWORD PTR [ebp-0x214]
  401e94:	mov    WORD PTR [edx+0x4],cx
  401e98:	mov    eax,0x65
  401e9d:	mov    ecx,DWORD PTR [ebp-0x214]
  401ea3:	mov    WORD PTR [ecx+0xa],ax
  401ea7:	mov    edx,0x6d
  401eac:	mov    eax,DWORD PTR [ebp-0x214]
  401eb2:	mov    WORD PTR [eax+0xc],dx
  401eb6:	mov    ecx,0x33
  401ebb:	mov    edx,DWORD PTR [ebp-0x214]
  401ec1:	mov    WORD PTR [edx+0xe],cx
  401ec5:	mov    eax,0x32
  401eca:	mov    ecx,DWORD PTR [ebp-0x214]
  401ed0:	mov    WORD PTR [ecx+0x10],ax
  401ed4:	mov    edx,0x5c
  401ed9:	mov    eax,DWORD PTR [ebp-0x214]
  401edf:	mov    WORD PTR [eax+0x12],dx
  401ee3:	mov    ecx,0x73
  401ee8:	mov    edx,DWORD PTR [ebp-0x214]
  401eee:	mov    WORD PTR [edx+0x16],cx
  401ef2:	mov    eax,0x65
  401ef7:	mov    ecx,DWORD PTR [ebp-0x214]
  401efd:	mov    WORD PTR [ecx+0x24],ax
  401f01:	mov    edx,DWORD PTR [ebp-0x214]
  401f07:	push   edx
  401f08:	lea    eax,[ebp-0x208]
  401f0e:	push   eax
  401f0f:	call   DWORD PTR ds:0x427e6c
  401f15:	mov    ecx,DWORD PTR [ebp+0x8]
  401f18:	add    ecx,DWORD PTR [ebp-0x210]
  401f1e:	mov    edx,DWORD PTR [ebp+0xc]
  401f21:	add    edx,DWORD PTR [ebp-0x210]
  401f27:	mov    al,BYTE PTR [edx]
  401f29:	mov    BYTE PTR [ecx],al
  401f2b:	cmp    DWORD PTR [ebp-0x210],0x0
  401f32:	jne    0x401f6a
  401f34:	push   0x0
  401f36:	push   0x80
  401f3b:	push   0x3
  401f3d:	push   0x0
  401f3f:	push   0x3
  401f41:	push   0x1
  401f43:	lea    ecx,[ebp-0x208]
  401f49:	push   ecx
  401f4a:	call   DWORD PTR ds:0x427e70
  401f50:	mov    DWORD PTR [ebp-0x20c],eax
  401f56:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  401f5d:	je     0x401f68
  401f5f:	cmp    DWORD PTR [ebp-0x20c],0x0
  401f66:	jne    0x401f6a
  401f68:	jmp    0x401f9b
  401f6a:	jmp    0x401e37
  401f6f:	mov    edx,DWORD PTR [ebp+0x8]
  401f72:	cmp    edx,DWORD PTR ds:0x427e80
  401f78:	jne    0x401f9b
  401f7a:	mov    eax,ds:0x427e7c
  401f7f:	sub    eax,0x400000
  401f84:	push   eax
  401f85:	mov    ecx,DWORD PTR ds:0x427e7c
  401f8b:	push   ecx
  401f8c:	mov    edx,DWORD PTR ds:0x427e68
  401f92:	push   edx
  401f93:	call   0x402260
  401f98:	add    esp,0xc
  401f9b:	mov    esp,ebp
  401f9d:	pop    ebp
  401f9e:	ret    
  401f9f:	int3   
  401fa0:	push   ebp
  401fa1:	mov    ebp,esp
  401fa3:	mov    eax,DWORD PTR [ebp+0x8]
  401fa6:	mov    ecx,DWORD PTR [ebp+0x8]
  401fa9:	add    ecx,DWORD PTR [eax+0x4]
  401fac:	mov    eax,ecx
  401fae:	pop    ebp
  401faf:	ret    
  401fb0:	push   ebp
  401fb1:	mov    ebp,esp
  401fb3:	sub    esp,0x220
  401fb9:	mov    DWORD PTR [ebp-0x8],0x307c
  401fc0:	mov    DWORD PTR [ebp-0x220],0x3000
  401fca:	mov    DWORD PTR [ebp-0x4],0x40
  401fd1:	mov    DWORD PTR [ebp-0x214],0x0
  401fdb:	mov    DWORD PTR [ebp-0x218],0x0
  401fe5:	mov    DWORD PTR [ebp-0x8],0x307c
  401fec:	mov    DWORD PTR [ebp-0x8],0x307c
  401ff3:	mov    DWORD PTR [ebp-0x8],0x307c
  401ffa:	mov    eax,ds:0x427d84
  401fff:	mov    ds:0x427e6c,eax
  402004:	mov    DWORD PTR [ebp-0x8],0x307c
  40200b:	mov    ecx,DWORD PTR ds:0x427d94
  402011:	mov    DWORD PTR ds:0x427e70,ecx
  402017:	mov    edx,DWORD PTR ds:0x427d98
  40201d:	mov    DWORD PTR ds:0x427e90,edx
  402023:	push   0x104
  402028:	lea    eax,[ebp-0x210]
  40202e:	push   eax
  40202f:	call   DWORD PTR ds:0x427e90
  402035:	mov    ecx,DWORD PTR [ebp-0x4]
  402038:	push   ecx
  402039:	mov    edx,DWORD PTR [ebp-0x220]
  40203f:	push   edx
  402040:	mov    eax,DWORD PTR [ebp+0x8]
  402043:	push   eax
  402044:	mov    ecx,DWORD PTR [ebp-0x214]
  40204a:	push   ecx
  40204b:	push   0xffffffff
  40204d:	call   DWORD PTR ds:0x427d9c
  402053:	mov    esp,ebp
  402055:	pop    ebp
  402056:	ret    
  402057:	int3   
  402058:	int3   
  402059:	int3   
  40205a:	int3   
  40205b:	int3   
  40205c:	int3   
  40205d:	int3   
  40205e:	int3   
  40205f:	int3   
  402060:	push   ebp
  402061:	mov    ebp,esp
  402063:	push   ecx
  402064:	mov    DWORD PTR [ebp-0x4],0x5e3d
  40206b:	mov    ecx,ecx
  40206d:	mov    ecx,ecx
  40206f:	mov    ecx,ecx
  402071:	mov    ecx,ecx
  402073:	mov    edx,edx
  402075:	mov    edx,edx
  402077:	mov    edx,edx
  402079:	mov    ecx,ecx
  40207b:	mov    esp,DWORD PTR ds:0x427e74
  402081:	mov    ecx,ecx
  402083:	mov    edx,edx
  402085:	mov    ecx,ecx
  402087:	mov    edx,edx
  402089:	add    esp,0x4
  40208c:	mov    edx,edx
  40208e:	mov    ecx,ecx
  402090:	mov    edx,edx
  402092:	mov    edx,edx
  402094:	jmp    DWORD PTR ds:0x427e84
  40209a:	mov    esp,ebp
  40209c:	pop    ebp
  40209d:	ret    
  40209e:	int3   
  40209f:	int3   
  4020a0:	push   ebp
  4020a1:	mov    ebp,esp
  4020a3:	sub    esp,0x18
  4020a6:	mov    eax,DWORD PTR [ebp+0x8]
  4020a9:	mov    DWORD PTR [ebp-0x8],eax
  4020ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4020af:	mov    DWORD PTR [ebp-0x4],ecx
  4020b2:	mov    DWORD PTR [ebp-0x10],0x19c
  4020b9:	mov    edx,DWORD PTR [ebp-0x8]
  4020bc:	mov    DWORD PTR ds:0x427e94,edx
  4020c2:	mov    eax,DWORD PTR [ebp-0x4]
  4020c5:	mov    ds:0x427e98,eax
  4020ca:	mov    ecx,DWORD PTR ds:0x427e94
  4020d0:	mov    DWORD PTR [ebp-0x14],ecx
  4020d3:	mov    edx,DWORD PTR ds:0x427e98
  4020d9:	mov    DWORD PTR [ebp-0xc],edx
  4020dc:	mov    eax,DWORD PTR [ebp-0xc]
  4020df:	mov    ecx,DWORD PTR [ebp-0x14]
  4020e2:	lea    edx,[ecx+eax*2]
  4020e5:	mov    DWORD PTR [ebp-0x18],edx
  4020e8:	mov    eax,DWORD PTR [ebp-0x18]
  4020eb:	mov    DWORD PTR [ebp-0x14],eax
  4020ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4020f1:	movzx  edx,WORD PTR [ecx]
  4020f4:	mov    DWORD PTR [ebp-0xc],edx
  4020f7:	mov    eax,DWORD PTR [ebp-0xc]
  4020fa:	mov    esp,ebp
  4020fc:	pop    ebp
  4020fd:	ret    
  4020fe:	int3   
  4020ff:	int3   
  402100:	push   ebp
  402101:	mov    ebp,esp
  402103:	sub    esp,0xc
  402106:	mov    eax,DWORD PTR [ebp+0x8]
  402109:	mov    DWORD PTR [ebp-0x8],eax
  40210c:	mov    ecx,DWORD PTR [ebp+0xc]
  40210f:	mov    DWORD PTR [ebp-0xc],ecx
  402112:	mov    DWORD PTR [ebp-0x4],0x22b
  402119:	mov    edx,DWORD PTR [ebp-0x8]
  40211c:	cmp    edx,DWORD PTR [ebp-0xc]
  40211f:	jae    0x40212f
  402121:	mov    DWORD PTR [ebp-0x4],0x22b
  402128:	mov    eax,DWORD PTR [ebp-0x8]
  40212b:	jmp    0x402139
  40212d:	jmp    0x402139
  40212f:	mov    DWORD PTR [ebp-0x4],0x22b
  402136:	mov    eax,DWORD PTR [ebp-0xc]
  402139:	mov    esp,ebp
  40213b:	pop    ebp
  40213c:	ret    
  40213d:	int3   
  40213e:	int3   
  40213f:	int3   
  402140:	push   ebp
  402141:	mov    ebp,esp
  402143:	cmp    DWORD PTR [ebp+0x8],0x1
  402147:	jne    0x402151
  402149:	mov    eax,ds:0x427e9c
  40214e:	mov    DWORD PTR [ebp+0x8],eax
  402151:	mov    ecx,DWORD PTR [ebp+0x10]
  402154:	push   ecx
  402155:	mov    edx,DWORD PTR [ebp+0xc]
  402158:	push   edx
  402159:	mov    eax,DWORD PTR [ebp+0x8]
  40215c:	push   eax
  40215d:	call   0x401490
  402162:	add    esp,0xc
  402165:	mov    ecx,DWORD PTR [ebp+0x8]
  402168:	push   ecx
  402169:	call   0x401fa0
  40216e:	add    esp,0x4
  402171:	mov    DWORD PTR [ebp+0x8],eax
  402174:	mov    eax,DWORD PTR [ebp+0x8]
  402177:	pop    ebp
  402178:	ret    
  402179:	int3   
  40217a:	int3   
  40217b:	int3   
  40217c:	int3   
  40217d:	int3   
  40217e:	int3   
  40217f:	int3   
  402180:	push   ebp
  402181:	mov    ebp,esp
  402183:	sub    esp,0x228
  402189:	mov    DWORD PTR [ebp-0x218],0x0
  402193:	mov    DWORD PTR [ebp-0x214],0x41e0d4
  40219d:	mov    DWORD PTR [ebp-0x4],0x22b
  4021a4:	mov    DWORD PTR [ebp-0x4],0x22b
  4021ab:	mov    DWORD PTR [ebp-0x220],0x0
  4021b5:	jmp    0x4021c6
  4021b7:	mov    eax,DWORD PTR [ebp-0x220]
  4021bd:	add    eax,0x4
  4021c0:	mov    DWORD PTR [ebp-0x220],eax
  4021c6:	mov    ecx,DWORD PTR [ebp-0x220]
  4021cc:	cmp    ecx,DWORD PTR [ebp+0xc]
  4021cf:	jae    0x402256
  4021d5:	mov    DWORD PTR [ebp-0x4],0x22b
  4021dc:	mov    edx,DWORD PTR [ebp-0x220]
  4021e2:	add    edx,0x931
  4021e8:	mov    DWORD PTR ds:0x427ea0,edx
  4021ee:	mov    eax,DWORD PTR [ebp+0x8]
  4021f1:	add    eax,DWORD PTR [ebp-0x220]
  4021f7:	mov    DWORD PTR [ebp-0x228],eax
  4021fd:	mov    DWORD PTR [ebp-0x4],0x22b
  402204:	mov    ecx,DWORD PTR [ebp-0x228]
  40220a:	mov    edx,DWORD PTR [ecx]
  40220c:	add    edx,DWORD PTR [ebp-0x220]
  402212:	mov    eax,DWORD PTR [ebp-0x228]
  402218:	mov    DWORD PTR [eax],edx
  40221a:	mov    ecx,DWORD PTR [ebp-0x228]
  402220:	mov    DWORD PTR [ebp-0x224],ecx
  402226:	mov    edx,DWORD PTR ds:0x427ea0
  40222c:	mov    DWORD PTR [ebp-0x4],edx
  40222f:	mov    eax,DWORD PTR [ebp-0x224]
  402235:	mov    ecx,DWORD PTR [eax]
  402237:	mov    DWORD PTR [ebp-0x4],ecx
  40223a:	mov    edx,DWORD PTR [ebp-0x4]
  40223d:	xor    edx,DWORD PTR ds:0x427ea0
  402243:	mov    DWORD PTR [ebp-0x4],edx
  402246:	mov    eax,DWORD PTR [ebp-0x224]
  40224c:	mov    ecx,DWORD PTR [ebp-0x4]
  40224f:	mov    DWORD PTR [eax],ecx
  402251:	jmp    0x4021b7
  402256:	mov    esp,ebp
  402258:	pop    ebp
  402259:	ret    
  40225a:	int3   
  40225b:	int3   
  40225c:	int3   
  40225d:	int3   
  40225e:	int3   
  40225f:	int3   
  402260:	push   ebp
  402261:	mov    ebp,esp
  402263:	sub    esp,0x8
  402266:	mov    eax,DWORD PTR [ebp+0x8]
  402269:	cmp    DWORD PTR [eax+0x4],0x0
  40226d:	je     0x4022ab
  40226f:	mov    ecx,DWORD PTR [ebp+0x8]
  402272:	add    ecx,0x8
  402275:	mov    DWORD PTR ds:0x427e8c,ecx
  40227b:	mov    edx,DWORD PTR [ebp+0x8]
  40227e:	mov    eax,DWORD PTR [edx+0x4]
  402281:	mov    ds:0x427e88,eax
  402286:	call   0x4013f0
  40228b:	mov    ecx,DWORD PTR [ebp+0x8]
  40228e:	mov    DWORD PTR ds:0x427e9c,ecx
  402294:	mov    edx,DWORD PTR [ebp+0x10]
  402297:	push   edx
  402298:	mov    eax,DWORD PTR [ebp+0xc]
  40229b:	push   eax
  40229c:	push   0x1
  40229e:	call   0x402140
  4022a3:	add    esp,0xc
  4022a6:	mov    DWORD PTR [ebp+0x8],eax
  4022a9:	jmp    0x402266
  4022ab:	mov    esp,ebp
  4022ad:	pop    ebp
  4022ae:	ret    
  4022af:	int3   
	...
  405d48:	add    BYTE PTR [edx],al
  405d4a:	add    BYTE PTR [eax],al
  405d4c:	xor    DWORD PTR [ecx],ecx
  405d4e:	add    BYTE PTR [eax],al
  405d50:	sub    DWORD PTR [ecx],ecx
  405d52:	add    BYTE PTR [eax],al
  405d54:	lods   eax,DWORD PTR ds:[esi]
  405d55:	cmp    edx,DWORD PTR [eax-0x67c462ce]
  405d5b:	xor    cl,ch
  405d5d:	cmp    esp,DWORD PTR [eax-0x57c432ce]
  405d63:	xor    dh,BYTE PTR [ecx]
  405d65:	imul   eax,DWORD PTR [ecx],0x94500
  405d6b:	add    BYTE PTR [edx+0x34],dl
  405d6e:	mov    edi,DWORD PTR ds:0x3d9a34a1
  405d74:	sahf   
  405d75:	xor    al,0xa8
  405d77:	cmp    eax,0x3dd334c7
  405d7c:	(bad)  
  405d7d:	xor    al,0xe8
  405d7f:	cmp    eax,0x3e2d372d
  405d84:	jmp    0xdd36:0xf83e5136
  405d8b:	ds push ebp
  405d8d:	add    BYTE PTR ss:[eax],al
  405d90:	xor    DWORD PTR [ecx+0x1],edi
  405d93:	add    BYTE PTR [ecx+0x9],bl
  405d96:	add    BYTE PTR [eax],al
  405d98:	outs   dx,BYTE PTR ds:[esi]
  405d99:	cmp    ebp,ecx
  405d9b:	xor    BYTE PTR [ecx+edi*1],al
  405d9e:	add    al,0x31
  405da0:	xor    al,0x38
  405da2:	daa    
  405da3:	xor    edi,ebx
  405da5:	aaa    
  405da6:	ret    
  405da7:	xor    edx,edi
  405da9:	aaa    
  405daa:	jmp    0xff787be0
  405daf:	xor    DWORD PTR [eax],eax
  405db1:	xor    eax,0x5732123b
  405db6:	cmp    esi,DWORD PTR [ecx]
  405db8:	xor    bh,BYTE PTR [eax]
  405dba:	cmp    edi,DWORD PTR [edi]
  405dbc:	xor    dh,BYTE PTR [ebx+edi*1+0x58]
  405dc0:	xor    dh,al
  405dc2:	cmp    al,bh
  405dc4:	xor    dh,BYTE PTR [edi-0x4bcc74c7]
  405dca:	cmp    DWORD PTR [esi-0x32c67ecd],esp
  405dd0:	xor    ecx,ebp
  405dd2:	cmp    edx,ebp
  405dd4:	xor    esi,DWORD PTR [ebx]
  405dd6:	cmp    eax,0x3d673421
  405ddb:	push   edi
  405ddc:	xor    al,0xd
  405dde:	cmp    eax,0x3d283463
  405de3:	xor    BYTE PTR [ecx+ebp*4],0x3c
  405de7:	xchg   ecx,eax
  405de8:	xor    al,0xbe
  405dea:	cmp    al,0x9e
  405dec:	xor    al,0xdc
  405dee:	cmp    al,0xbd
  405df0:	xor    al,0x73
  405df2:	cmp    al,0xd4
  405df4:	xor    al,0x5c
  405df6:	cmp    al,0xe7
  405df8:	xor    al,0x7f
  405dfa:	cmp    al,0x2
  405dfc:	xor    eax,0x35483c41
  405e01:	idiv   DWORD PTR [ebx]
  405e03:	push   esp
  405e04:	xor    eax,0x356a3bd4
  405e09:	mov    bl,0x3b
  405e0b:	mov    esi,0xd53b7935
  405e10:	xor    eax,0x35eb3b50
  405e15:	add    BYTE PTR [ebp+0x3b],al
  405e18:	(bad)  
  405e19:	xor    eax,0x360e3f28
  405e1e:	inc    ebp
  405e1f:	cmp    ebx,DWORD PTR ds:0x343b5636
  405e25:	ss pop ebx
  405e27:	cmp    edi,DWORD PTR [edi]
  405e29:	ss ins BYTE PTR es:[edi],dx
  405e2b:	cmp    ecx,DWORD PTR [ecx+0x36]
  405e2e:	jg     0x405e6b
  405e30:	push   esp
  405e31:	ss xchg ebx,eax
  405e33:	cmp    ebp,DWORD PTR [eax+0x36]
  405e36:	mov    WORD PTR [ebx],?
  405e38:	jb     0x405e70
  405e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e3b:	cmp    ebx,DWORD PTR [edx-0x33c408ca]
  405e41:	add    edi,DWORD PTR ss:[esp+ebx*8]
  405e45:	ss aaa 
  405e47:	cmp    al,0x2b
  405e49:	aaa    
  405e4a:	sbb    DWORD PTR [esp+ecx*2],edi
  405e4d:	aaa    
  405e4e:	addr16 cmp al,0x63
  405e51:	aaa    
  405e52:	pop    eax
  405e53:	cmp    al,0x71
  405e55:	aaa    
  405e56:	cmp    BYTE PTR [esp+eax*4],bh
  405e59:	aaa    
  405e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e5b:	cmp    al,0x9d
  405e5d:	aaa    
  405e5e:	sar    DWORD PTR [ecx+esi*4],cl
  405e61:	aaa    
  405e62:	ins    BYTE PTR es:[edi],dx
  405e63:	cmp    al,0xce
  405e65:	aaa    
  405e66:	xchg   DWORD PTR [eiz*8+0x93137],edi
  405e6d:	add    BYTE PTR [ecx],dh
  405e6f:	or     DWORD PTR [eax],eax
  405e71:	add    BYTE PTR [ecx],dh
  405e73:	or     DWORD PTR [eax],eax
  405e75:	add    BYTE PTR [ecx],dh
  405e77:	or     DWORD PTR [eax],eax
  405e79:	add    BYTE PTR [eax],al
  405e7b:	xor    DWORD PTR [ecx],ecx
  405e7d:	add    BYTE PTR [eax],al
  405e7f:	xor    DWORD PTR [ecx],ecx
  405e81:	add    BYTE PTR [eax],al
  405e83:	xor    DWORD PTR [ecx],ecx
  405e85:	add    BYTE PTR [eax],al
  405e87:	xor    DWORD PTR [ecx],ecx
  405e89:	add    BYTE PTR [eax],al
  405e8b:	xor    DWORD PTR [ecx],ecx
  405e8d:	add    BYTE PTR [eax],al
  405e8f:	xor    DWORD PTR [ecx],ecx
  405e91:	add    BYTE PTR [eax],al
  405e93:	xor    DWORD PTR [ecx],ecx
  405e95:	add    BYTE PTR [eax],al
  405e97:	xor    DWORD PTR [ecx],ecx
  405e99:	add    BYTE PTR [eax],al
  405e9b:	xor    DWORD PTR [ecx],ecx
  405e9d:	add    BYTE PTR [eax],al
  405e9f:	xor    DWORD PTR [ecx],ecx
  405ea1:	add    BYTE PTR [eax],al
  405ea3:	xor    DWORD PTR [ecx],ecx
  405ea5:	add    BYTE PTR [eax],al
  405ea7:	xor    DWORD PTR [ecx],ecx
  405ea9:	add    BYTE PTR [eax],al
  405eab:	xor    DWORD PTR [ecx],ecx
  405ead:	add    BYTE PTR [eax],al
  405eaf:	xor    DWORD PTR [ecx],ecx
  405eb1:	add    BYTE PTR [eax],al
  405eb3:	xor    DWORD PTR [ecx],ecx
  405eb5:	add    BYTE PTR [eax],al
  405eb7:	xor    DWORD PTR [ecx],ecx
  405eb9:	add    BYTE PTR [eax],al
  405ebb:	xor    DWORD PTR [ecx],ecx
  405ebd:	add    BYTE PTR [eax],al
  405ebf:	xor    DWORD PTR [ecx],ecx
  405ec1:	add    BYTE PTR [eax],al
  405ec3:	xor    DWORD PTR [ecx],ecx
  405ec5:	add    BYTE PTR [eax],al
  405ec7:	xor    DWORD PTR [ecx],ecx
  405ec9:	add    BYTE PTR [eax],al
  405ecb:	xor    DWORD PTR [ecx],ecx
  405ecd:	add    BYTE PTR [eax],al
  405ecf:	xor    DWORD PTR [ecx],ecx
  405ed1:	add    BYTE PTR [eax],al
  405ed3:	xor    DWORD PTR [ecx],ecx
  405ed5:	add    BYTE PTR [eax],al
  405ed7:	xor    DWORD PTR [ecx],ecx
  405ed9:	add    BYTE PTR [eax],al
  405edb:	xor    DWORD PTR [ecx],ecx
  405edd:	add    BYTE PTR [eax],al
  405edf:	add    BYTE PTR [ecx],dh
  405ee1:	or     DWORD PTR [eax],eax
  405ee3:	add    BYTE PTR [ecx],dh
  405ee5:	or     DWORD PTR [eax],eax
  405ee7:	add    BYTE PTR [ecx],dh
  405ee9:	or     DWORD PTR [eax],eax
  405eeb:	add    BYTE PTR [ecx],dh
  405eed:	or     DWORD PTR [eax],eax
  405eef:	add    BYTE PTR [ecx],dh
  405ef1:	or     DWORD PTR [eax],eax
  405ef3:	add    BYTE PTR [ecx],dh
  405ef5:	or     DWORD PTR [eax],eax
  405ef7:	add    BYTE PTR [ecx],dh
  405ef9:	or     DWORD PTR [eax],eax
  405efb:	add    BYTE PTR [ecx],dh
  405efd:	or     DWORD PTR [eax],eax
  405eff:	add    BYTE PTR [ecx],dh
  405f01:	or     DWORD PTR [eax],eax
  405f03:	add    BYTE PTR [ecx],dh
  405f05:	or     DWORD PTR [eax],eax
  405f07:	add    BYTE PTR [ecx],dh
  405f09:	or     DWORD PTR [eax],eax
  405f0b:	add    BYTE PTR [ecx],dh
  405f0d:	or     DWORD PTR [eax],eax
  405f0f:	add    BYTE PTR [ecx],dh
  405f11:	or     DWORD PTR [eax],eax
  405f13:	add    BYTE PTR [ecx],dh
  405f15:	or     DWORD PTR [eax],eax
  405f17:	add    BYTE PTR [ecx],dh
  405f19:	or     DWORD PTR [eax],eax
  405f1b:	add    BYTE PTR [ecx],dh
  405f1d:	or     DWORD PTR [eax],eax
  405f1f:	add    BYTE PTR [ecx],dh
  405f21:	or     DWORD PTR [eax],eax
  405f23:	add    BYTE PTR [ecx],dh
  405f25:	or     DWORD PTR [eax],eax
  405f27:	add    BYTE PTR [ecx],dh
  405f29:	or     DWORD PTR [eax],eax
  405f2b:	add    BYTE PTR [ecx],dh
  405f2d:	or     DWORD PTR [eax],eax
  405f2f:	add    BYTE PTR [ecx],dh
  405f31:	or     DWORD PTR [eax],eax
  405f33:	add    BYTE PTR [ecx],dh
  405f35:	or     DWORD PTR [eax],eax
  405f37:	add    BYTE PTR [ecx],dh
  405f39:	or     DWORD PTR [eax],eax
  405f3b:	add    BYTE PTR [ecx],dh
  405f3d:	or     DWORD PTR [eax],eax
  405f3f:	add    BYTE PTR [ecx],dh
  405f41:	or     DWORD PTR [eax],eax
  405f43:	add    BYTE PTR [eax],al
  405f45:	xor    DWORD PTR [ecx],ecx
  405f47:	add    BYTE PTR [eax],al
  405f49:	xor    DWORD PTR [ecx],ecx
  405f4b:	add    BYTE PTR [eax],al
  405f4d:	xor    DWORD PTR [ecx],ecx
  405f4f:	add    BYTE PTR [eax],al
  405f51:	add    BYTE PTR [edi+0x1],dh
  405f54:	add    BYTE PTR [ecx],dh
  405f56:	jo     0x405f99
  405f58:	add    BYTE PTR [esi+0x6c],ch
  405f5b:	je     0x405fad
  405f5d:	inc    ebx
  405f5e:	data16 arpl WORD PTR [ecx+0x4d],ax
  405f62:	ins    DWORD PTR es:[edi],dx
  405f63:	jb     0x405fca
  405f65:	and    bh,BYTE PTR [edx+0x0]
  405f68:	add    ch,dh
  405f6a:	gs popa 
  405f6c:	fs in  eax,dx
  405f6e:	pop    edi
  405f6f:	bound  esi,QWORD PTR [edx+0x10]
  405f72:	jnp    0x405fed
  405f74:	inc    ebp
  405f75:	or     DWORD PTR [eax+0x0],ecx
  405f78:	add    ch,dh
  405f7a:	gs popa 
  405f7c:	fs in  eax,dx
  405f7e:	pop    edi
  405f7f:	bound  esi,QWORD PTR [edx+0x10]
  405f82:	jnp    0x405ffd
  405f84:	inc    ebp
  405f85:	jmp    0xee405fe7
  405f8a:	imul   esi,DWORD PTR [ebp+ecx*2-0x32],0x6c
  405f8f:	jne    0x405ffd
  405f91:	int3   
  405f92:	inc    eax
  405f93:	popa   
  405f94:	outs   dx,BYTE PTR ds:[esi]
  405f95:	aad    0x64
  405f97:	gs inc ecx
  405f99:	xor    DWORD PTR [ecx],ecx
  405f9b:	add    BYTE PTR [eax],al
  405f9d:	bnd jp 0x406005
  405fa0:	popa   
  405fa1:	mov    ebp,0x9d69466b
  405fa6:	ins    BYTE PTR es:[edi],dx
  405fa7:	inc    ecx
  405fa8:	add    BYTE PTR [ebp-0x6d8d8b86],dl
  405fae:	push   0x9314174
  405fb3:	add    BYTE PTR [eax],al
  405fb5:	jbe    0x406023
  405fb7:	je     0x406010
  405fb9:	add    BYTE PTR [eax-0x79909b99],bl
  405fbf:	jp     0x406005
  405fc1:	imul   eax,DWORD PTR [ebx+0x5e74636c],0x3141797b
  405fcb:	or     DWORD PTR [eax],eax
  405fcd:	add    BYTE PTR [esi+0x6c],dh
  405fd0:	je     0x40601f
  405fd2:	inc    esi
  405fd3:	ins    DWORD PTR es:[edi],dx
  405fd4:	jne    0x406042
  405fd6:	push   esp
  405fd7:	inc    ecx
  405fd8:	popa   
  405fd9:	outs   dx,BYTE PTR ds:[esi]
  405fda:	dec    ebp
  405fdb:	gs gs push edi
  405fde:	xor    DWORD PTR [ecx],ecx
  405fe0:	add    BYTE PTR [eax],al
  405fe2:	sub    eax,0x4500400b
  405fe7:	or     eax,DWORD PTR [eax+0x0]
  405fea:	dec    ebp
  405feb:	or     eax,DWORD PTR [eax+0x0]
  405fee:	or     eax,DWORD PTR gs:[eax+0x0]
  405ff2:	jmp    0xe540a001
  405ff7:	or     al,BYTE PTR [eax+0x0]
  405ffa:	adc    DWORD PTR [ebx],ecx
  405ffc:	inc    eax
  405ffd:	add    cl,bh
  405fff:	or     al,BYTE PTR [eax+0x0]
  406002:	out    dx,al
  406003:	imul   esi,DWORD PTR [eax+edx*2-0x1d],0x65
  406008:	arpl   WORD PTR [ecx-0x33],ax
  40600b:	ins    BYTE PTR es:[edi],dx
  40600c:	jb     0x406073
  40600e:	loop   0x406089
  406010:	add    BYTE PTR [eax],al
  406012:	in     eax,0x65
  406014:	popa   
  406015:	fs std 
  406017:	pop    edi
  406018:	bound  esi,QWORD PTR [edx-0x30]
  40601b:	jp     0x406096
  40601d:	inc    ebp
  40601e:	add    BYTE PTR [ecx-0x35ffffb9],bh
  406024:	imul   esi,DWORD PTR [edx+0x6e],0xffffff94
  406028:	xor    esi,DWORD PTR gs:[edx]
  40602b:	push   edi
  40602c:	ins    DWORD PTR es:[edi],dx
  40602d:	ins    BYTE PTR es:[edi],dx
  40602e:	ins    BYTE PTR es:[edi],dx
  40602f:	xor    DWORD PTR [ecx],ecx
  406031:	add    BYTE PTR [eax],al
  406033:	test   BYTE PTR [eax+0x76],bh
  406036:	arpl   WORD PTR [ebx-0x6a9bd183],ax
  40603c:	add    BYTE PTR gs:[eax],al
  40603f:	mov    WORD PTR [esi+0x6d],gs
  406042:	jae    0x405fd0
  406044:	jge    0x406046
  406046:	add    BYTE PTR [eax+edi*2+0x76],bl
  40604a:	arpl   WORD PTR [ebx+0x7d],sp
  40604d:	cs fs dec ebp
  406050:	add    BYTE PTR gs:[eax],al
  406053:	inc    esp
  406054:	outs   dx,BYTE PTR ds:[esi]
  406055:	ins    DWORD PTR es:[edi],dx
  406056:	arpl   WORD PTR [ecx+0x72],ax
  406059:	add    BYTE PTR [eax],al
  40605b:	pop    edi
  40605c:	bound  esi,QWORD PTR [edx+0x74]
  40605f:	inc    esp
  406060:	push   0x6c
  406062:	inc    ecx
  406063:	inc    ebp
  406064:	outs   dx,DWORD PTR gs:[esi]
  406066:	arpl   WORD PTR [ecx],si
  406068:	or     DWORD PTR [eax],eax
  40606a:	add    bh,bh
  40606c:	popa   
  40606d:	jb     0x4060e3
  40606f:	and    al,0x6a
  406071:	ins    BYTE PTR es:[edi],dx
  406072:	inc    ecx
  406073:	add    eax,0x31636f65
  406078:	or     DWORD PTR [eax],eax
  40607a:	add    ah,bl
  40607c:	bound  ebp,QWORD PTR [ebp+0x61]
  40607f:	add    DWORD PTR [ebx+0x69],ebx
  406082:	gs add dh,bh
  406085:	inc    ebx
  406086:	inc    si
  406088:	fsub   DWORD PTR [ebp+eiz*2+0x0]
  40608c:	jmp    DWORD PTR [ecx+0x72]
  40608f:	je     0x406075
  406091:	imul   ebp,DWORD PTR [eax+edx*2-0x1d],0xd2657463
  406099:	jl     0x40609b
  40609b:	add    cl,bh
  40609d:	ins    DWORD PTR es:[edi],dx
  40609e:	popa   
  40609f:	jo     0x406091
  4060a1:	fs ins BYTE PTR es:[edi],dx
  4060a3:	outs   dx,DWORD PTR ds:[esi]
  4060a4:	ror    BYTE PTR [eax],cl
  4060a6:	add    BYTE PTR [eax],al
  4060a8:	call   0x3365:0x8c6e726e
  4060af:	xor    cl,BYTE PTR [edi+0x6d]
  4060b2:	ins    BYTE PTR es:[edi],dx
  4060b3:	ins    BYTE PTR es:[edi],dx
  4060b4:	xor    DWORD PTR [ecx],ecx
  4060b6:	add    BYTE PTR [eax],al
  4060b8:	jbe    0x406128
  4060ba:	je     0x40610c
  4060bc:	and    DWORD PTR [ebx+eiz*2+0x65],0xffffff82
  4060c1:	js     0x40610b
  4060c3:	gs nop
  4060c5:	jns    0x4060c7
  4060c7:	add    BYTE PTR [ecx],dh
  4060c9:	or     DWORD PTR [esi+0x1],esp
  4060cc:	xor    DWORD PTR [ebp-0x20ce6fa7],ebp
  4060d2:	add    eax,DWORD PTR [eax]
  4060d4:	xor    esi,esp
  4060d6:	add    eax,DWORD PTR [eax]
  4060d8:	xor    ebx,esi
  4060da:	sti    
  4060db:	add    BYTE PTR [ecx],dh
  4060dd:	cmp    al,BYTE PTR [ebx]
  4060df:	add    BYTE PTR [ecx],dh
  4060e1:	loop   0x4060e6
  4060e3:	add    BYTE PTR [ecx],dh
  4060e5:	and    al,BYTE PTR [eax+eax*1]
  4060e8:	add    BYTE PTR [ecx],dh
  4060ea:	loop   0x4060ef
  4060ec:	add    BYTE PTR [ecx],dh
  4060ee:	loop   0x4060f3
  4060f0:	add    BYTE PTR [ecx],dh
  4060f2:	loop   0x4060f7
  4060f4:	add    BYTE PTR [ecx],dh
  4060f6:	loop   0x4060fb
  4060f8:	add    BYTE PTR [ecx],dh
  4060fa:	loop   0x4060ff
  4060fc:	add    BYTE PTR [ecx],dh
  4060fe:	loop   0x406103
  406100:	add    BYTE PTR [ecx],dh
  406102:	loop   0x406107
  406104:	add    BYTE PTR [ecx],dh
  406106:	loop   0x40610b
  406108:	add    BYTE PTR [ecx],dh
  40610a:	bound  eax,QWORD PTR [eax+eax*1]
  40610d:	xor    esp,ebp
  40610f:	sbb    bh,BYTE PTR [edx+0x9afe22f]
  406115:	sar    BYTE PTR fs:[ebx+0x25a4fd01],0x54
  40611d:	(bad)  [eax]
  40611f:	ja     0x406141
  406121:	shr    edi,0x6a
  406124:	addr16 ret 
  406126:	shr    BYTE PTR [eax+0x20],0x92
  40612a:	shr    DWORD PTR [ecx+0x6e],0x96
  40612e:	aam    0x23
  406130:	bound  edx,QWORD PTR [eax+eax*1+0x877576]
  406137:	ins    DWORD PTR es:[edi],dx
  406138:	outs   dx,BYTE PTR ds:[esi]
  406139:	push   ecx
  40613a:	lods   al,BYTE PTR ds:[esi]
  40613b:	dec    edx
  40613c:	push   ebx
  40613d:	push   ecx
  40613e:	int    0x6a
  406140:	fs xchg esp,eax
  406142:	repnz or BYTE PTR ds:0x3cd092b,cl
  406149:	xor    DWORD PTR [ecx],ecx
  40614b:	jmp    0x9716153
  406150:	mov    ecx,0x9d093140
  406155:	add    al,0x32
  406157:	or     DWORD PTR [ebx-0x3c],esi
  40615a:	cmp    DWORD PTR [ecx-0x17],ebx
  40615d:	add    esi,DWORD PTR [ecx]
  40615f:	or     ecx,ebp
  406161:	add    esi,DWORD PTR [ecx]
  406163:	or     DWORD PTR [ecx],ecx
  406165:	add    al,0x26
  406167:	or     dl,dh
  406169:	add    al,0x33
  40616b:	aaa    
  40616c:	jmp    0xe949918c
  406171:	push   ebp
  406172:	xor    DWORD PTR [ecx],ecx
  406174:	jmp    0x1049927c
  406179:	pop    es
  40617a:	xor    BYTE PTR [ecx],cl
  40617c:	jmp    0xe9499294
  406181:	xor    esi,DWORD PTR [eax]
  406183:	or     ecx,ebp
  406185:	add    esi,ecx
  406187:	or     cl,ch
  406189:	adc    esi,DWORD PTR [ecx]
  40618b:	or     ecx,ebp
  40618d:	add    eax,0x3ed0931
  406192:	xor    DWORD PTR [ecx],ecx
  406194:	jmp    0xed49929c
  406199:	add    esi,DWORD PTR [ecx]
  40619b:	or     ecx,ebp
  40619d:	add    esi,DWORD PTR [ecx]
  40619f:	or     ecx,ebp
  4061a1:	xchg   ebx,eax
  4061a2:	xor    BYTE PTR [ecx],cl
  4061a4:	jmp    0x124992ae
  4061a9:	loopne 0x4061db
  4061ab:	or     ebx,ebp
  4061ad:	add    esi,DWORD PTR [ecx]
  4061af:	or     ecx,ebp
  4061b1:	add    eax,DWORD PTR [eax]
  4061b3:	inc    ecx
  4061b4:	or     ecx,ebp
  4061b6:	adc    esi,DWORD PTR [ecx]
  4061b8:	or     ecx,ebp
  4061ba:	add    esp,DWORD PTR [ecx]
  4061bc:	or     ecx,ebp
  4061be:	adc    esi,DWORD PTR [ecx]
  4061c0:	or     DWORD PTR [eax],eax
  4061c2:	jmp    0xd9406af9
  4061c7:	xor    cl,BYTE PTR [ecx]
  4061c9:	add    cl,ch
  4061cb:	xor    cl,BYTE PTR [ecx]
  4061cd:	add    cl,ch
  4061cf:	xor    cl,BYTE PTR [ecx]
  4061d1:	add    BYTE PTR [ecx],cl
  4061d3:	pop    eax
  4061d4:	or     BYTE PTR [eax],al
  4061d6:	and    DWORD PTR [edx],esi
  4061d8:	or     DWORD PTR [eax],eax
  4061da:	jmp    0xe9406b11
  4061df:	xor    cl,BYTE PTR [ecx]
  4061e1:	add    cl,ch
  4061e3:	xor    cl,BYTE PTR [ecx]
  4061e5:	add    cl,ch
  4061e7:	xor    cl,BYTE PTR [ecx]
  4061e9:	add    cl,ch
  4061eb:	xor    cl,BYTE PTR [ecx]
  4061ed:	add    cl,ch
  4061ef:	xor    cl,BYTE PTR [ecx]
  4061f1:	add    cl,ch
  4061f3:	xor    cl,BYTE PTR [ecx]
  4061f5:	add    cl,ch
  4061f7:	xor    cl,BYTE PTR [ecx]
  4061f9:	add    cl,ch
  4061fb:	xor    cl,BYTE PTR [ecx]
  4061fd:	add    cl,ch
  4061ff:	xor    cl,BYTE PTR [ecx]
  406201:	add    cl,ch
  406203:	xor    cl,BYTE PTR [ecx]
  406205:	add    cl,ch
  406207:	xor    cl,BYTE PTR [ecx]
  406209:	add    cl,ch
  40620b:	xor    cl,BYTE PTR [ecx]
  40620d:	add    cl,ch
  40620f:	xor    cl,BYTE PTR [ecx]
  406211:	add    cl,ch
  406213:	xor    cl,BYTE PTR [ecx]
  406215:	add    cl,ch
  406217:	add    BYTE PTR [edx],dh
  406219:	or     DWORD PTR [eax],eax
  40621b:	jmp    0xe9406b52
  406220:	xor    cl,BYTE PTR [ecx]
  406222:	add    cl,ch
  406224:	xor    cl,BYTE PTR [ecx]
  406226:	add    cl,ch
  406228:	xor    cl,BYTE PTR [ecx]
  40622a:	add    BYTE PTR [ecx],ah
  40622c:	mov    dl,0xa
  40622e:	add    BYTE PTR [ecx+0x32],bh
  406231:	or     DWORD PTR [eax],eax
  406233:	jmp    0xe9406b6a
  406238:	xor    cl,BYTE PTR [ecx]
  40623a:	add    BYTE PTR [eax],al
  40623c:	sbb    BYTE PTR ds:0xd180000,cl
  406242:	add    BYTE PTR [eax],al
  406244:	or     BYTE PTR ds:0xd080000,cl
  40624a:	add    BYTE PTR [eax],al
  40624c:	push   es
  40624d:	popa   
  40624e:	gs js  0x40620d
  406251:	or     al,0x0
  406253:	add    BYTE PTR [ebx-0x37fffee7],dl
  406259:	sbb    al,0x0
  40625b:	add    al,bl
  40625d:	adc    al,0x1
  40625f:	add    al,bl
  406261:	push   es
  406262:	add    BYTE PTR [eax],al
  406264:	enter  0xc,0x0
  406268:	enter  0xc,0x0
  40626c:	cwde   
  40626d:	or     al,0x0
  40626f:	add    BYTE PTR [eax],bh
  406271:	add    eax,0x77366000
  406276:	fs popa 
  406278:	cld    
  406279:	imul   eax,DWORD PTR [eax],0x0
  40627c:	add    BYTE PTR [eax-0x67fffff5],bl
  406282:	cmp    al,0x1
  406284:	add    BYTE PTR [eax-0x77fffffa],cl
  40628a:	push   cs
  40628b:	add    DWORD PTR [eax],eax
  40628d:	pop    eax
  40628e:	or     al,0x0
  406290:	add    BYTE PTR [eax+0xc],bl
  406293:	add    BYTE PTR [eax],al
  406295:	dec    eax
  406296:	or     al,0x0
  406298:	add    BYTE PTR [eax],cl
  40629a:	add    eax,0x50664000
  40629f:	popa   
  4062a0:	je     0x4062db
  4062a2:	add    eax,0x41e00000
  4062a7:	add    BYTE PTR [eax],al
  4062a9:	dec    eax
  4062aa:	dec    esp
  4062ab:	add    DWORD PTR [eax],eax
  4062ad:	sbb    BYTE PTR [esi],bh
  4062af:	add    BYTE PTR [eax],al
  4062b1:	sbb    BYTE PTR [eax],bl
  4062b3:	add    DWORD PTR [eax],eax
  4062b5:	xor    edx,esp
  4062b7:	add    eax,DWORD PTR [eax]
  4062b9:	xor    edx,esp
  4062bb:	add    eax,DWORD PTR [eax]
  4062bd:	xor    edx,esp
  4062bf:	add    eax,DWORD PTR [eax]
  4062c1:	xor    DWORD PTR [edx-0x1e0efffd],esp
  4062c7:	add    eax,DWORD PTR [eax]
  4062c9:	xor    edx,esp
  4062cb:	add    eax,DWORD PTR [eax]
  4062cd:	xor    edx,esp
  4062cf:	add    eax,DWORD PTR [eax]
  4062d1:	xor    edx,esp
  4062d3:	add    eax,DWORD PTR [eax]
  4062d5:	xor    DWORD PTR [ebp-0x457e1374],ebp
  4062db:	imul   ecx,DWORD PTR [edi],0x21
  4062de:	mov    ds:0x4300f803,al
  4062e3:	loope  0x4062a9
  4062e5:	(bad)  
  4062e6:	mov    esi,0x306a0b6c
  4062eb:	mov    WORD PTR [ebx],es
  4062ed:	call   0x45311c
  4062f2:	js     0x406297
  4062f4:	add    BYTE PTR [eax],al
  4062f6:	add    al,0x6b
  4062f8:	call   0x268a5c4d
  4062fd:	adc    cl,dh
  4062ff:	loope  0x4062fc
  406301:	jb     0x406333
  406303:	mov    ds:0xe9fc83f7,eax
  406308:	add    esi,DWORD PTR [edx+ebp*1+0x6b]
  40630c:	push   ecx
  40630d:	or     BYTE PTR [edx+0x3975f6f3],bh
  406313:	(bad)  
  406314:	push   edx
  406315:	or     BYTE PTR [eax-0x5d],ch
  406318:	add    BYTE PTR [eax],al
  40631a:	cld    
  40631b:	push   0xffffffe8
  40631d:	xor    DWORD PTR [ebp-0x77],0x54
  406321:	pop    eax
  406322:	fst    DWORD PTR [esp+edx*1]
  406325:	inc    eax
  406326:	xor    DWORD PTR [edx+0x72],edi
  406329:	add    DWORD PTR [edx+0x5e],esi
  40632c:	div    DWORD PTR [ebp+0x3d]
  40632f:	or     DWORD PTR [esi+0x41],esi
  406332:	sub    edi,eax
  406334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406335:	div    DWORD PTR [ecx]
  406337:	or     ecx,ebp
  406339:	add    ebp,DWORD PTR [edx+0x238ae154]
  40633f:	arpl   cx,bp
  406341:	idiv   BYTE PTR [ecx+ebx*1+0x3e]
  406345:	jno    0x406347
  406347:	std    
  406348:	out    dx,al
  406349:	mov    esp,0xe174f6fb
  40634e:	test   BYTE PTR [ebx+0x35c23015],0x9
  406355:	mov    ah,0x8a
  406357:	int    0x8a
  406359:	sub    eax,0x815181fc
  40635e:	test   DWORD PTR [ecx],esp
  406360:	dec    ecx
  406361:	jmp    0x2a48a761
  406366:	div    esi
  406368:	inc    esp
  406369:	icebp  
  40636a:	add    esi,DWORD PTR [ecx]
  40636c:	or     ecx,ebp
  40636e:	mov    esi,0x3e9ecf4
  406373:	xor    DWORD PTR [ecx],ecx
  406375:	jb     0x4063c7
  406377:	sub    DWORD PTR [edx-0xf137705],eax
  40637d:	cmp    DWORD PTR [edx+0x33],ebp
  406380:	out    dx,al
  406381:	cmp    al,0xf8
  406383:	xchg   BYTE PTR [ecx+eax*8-0xa],dh
  406387:	add    al,0x1
  406389:	mov    dh,0x51
  40638b:	sbb    eax,0x78fc2482
  406390:	retf   
  406391:	in     eax,dx
  406392:	add    edi,esp
  406394:	or     DWORD PTR [ebp+0x39f17582],0xf9bcc95c
  40639e:	inc    ebx
  40639f:	xor    ecx,esi
  4063a1:	sti    
  4063a2:	add    al,0x72
  4063a4:	out    dx,al
  4063a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063a6:	inc    eax
  4063a7:	cmp    DWORD PTR [ecx],ecx
  4063a9:	add    cl,ch
  4063ab:	add    BYTE PTR [edx],dh
  4063ad:	or     edi,eax
  4063af:	and    al,0x29
  4063b1:	or     DWORD PTR [eax],eax
  4063b3:	jmp    0xf195e5ea
  4063b8:	stos   DWORD PTR es:[edi],eax
  4063b9:	sbb    cl,BYTE PTR [ebp+0x6a591aac]
  4063bf:	call   0x473cd7cb
  4063c4:	xor    ecx,0xee2ab4ff
  4063ca:	push   edx
  4063cb:	(bad)  
  4063cd:	jae    0x4063d7
  4063cf:	inc    ecx
  4063d0:	mov    bl,0xed
  4063d2:	jmp    DWORD PTR [esi]
  4063d4:	add    BYTE PTR [edx+0x1aabf155],0x6a
  4063db:	jmp    0x953f6d28
  4063e0:	(bad)  
  4063e1:	in     eax,dx
  4063e2:	jne    0x4063e5
  4063e4:	mov    edi,0x61fe0873
  4063e9:	adc    eax,0xf1616258
  4063ee:	add    edx,DWORD PTR [esi+esi*1-0x58a02fce]
  4063f5:	and    al,al
  4063f7:	mov    al,0x73
  4063f9:	add    BYTE PTR [eax],al
  4063fb:	xchg   ecx,eax
  4063fc:	xor    cl,BYTE PTR [ecx]
  4063fe:	add    cl,ch
  406400:	jnp    0x4063cc
  406402:	or     cl,ch
  406404:	test   DWORD PTR [ecx-0x138e9514],0x32051150
  40640e:	adc    DWORD PTR [ecx],ebp
  406410:	add    BYTE PTR ds:0x71e872f1,dh
  406416:	in     eax,dx
  406417:	call   DWORD PTR [eax*2+0x4ae175ee]
  40641e:	je     0x40641f
  406420:	mov    es,WORD PTR [ecx+eax*1-0x40]
  406424:	add    BYTE PTR [ebp-0x13],al
  406427:	enter  0x4cc2,0x9
  40642b:	mov    edx,DWORD PTR [ebp+0x50]
  40642e:	adc    BYTE PTR [edx],0x8d
  406431:	push   ebp
  406432:	icebp  
  406433:	push   eax
  406434:	inc    DWORD PTR ds:0xc75ff19
  40643a:	div    BYTE PTR [ebp+0x8]
  40643d:	jg     0x406496
  40643f:	or     al,0x85
  406441:	pop    eax
  406442:	ins    DWORD PTR es:[edi],dx
  406443:	adc    ecx,DWORD PTR [ebx+0x453bf4d5]
  406449:	fcomp  DWORD PTR [ebx+0x7]
  40644c:	mov    eax,0x909
  406451:	jae    0x40643e
  406453:	sub    al,al
  406455:	inc    ebx
  406456:	pop    es
  406457:	sub    eax,eax
  406459:	and    edi,eax
  40645b:	or     al,0x0
  40645d:	xchg   ebp,eax
  40645e:	sub    esp,0x56f11483
  406464:	push   eax
  406465:	nop
  406466:	pusha  
  406467:	xchg   ebx,eax
  406468:	adc    DWORD PTR [eax-0x368d07f8],ecx
  40646e:	leave  
  40646f:	inc    DWORD PTR [ebx+0x7400041d]
  406475:	add    BYTE PTR [esi-0x77f78277],dl
  40647b:	pop    ebx
  40647c:	pop    es
  40647d:	sub    ecx,eax
  40647f:	push   esi
  406480:	leave  
  406481:	ret    0x86c
  406484:	cmp    DWORD PTR [ebp+0x68],0x8
  406488:	jne    0x406494
  40648a:	mov    al,0x7
  40648c:	add    BYTE PTR [eax],al
  40648e:	mov    BYTE PTR [esi-0x37],dl
  406491:	ret    0x88c
  406494:	mov    esi,DWORD PTR [ebp+0x5c]
  406497:	lods   eax,DWORD PTR ds:[esi]
  406498:	inc    ebp
  406499:	cld    
  40649a:	dec    eax
  40649b:	or     BYTE PTR [eax],al
  40649d:	add    BYTE PTR [ecx],dh
  40649f:	addr16 dec esi
  4064a1:	or     BYTE PTR [edx+0x454586f0],bh
  4064a7:	adc    dh,ch
  4064a9:	jne    0x4064cc
  4064ab:	adc    al,0xf5
  4064ad:	jne    0x4064d8
  4064af:	jae    0x406502
  4064b1:	adc    BYTE PTR [ecx+eiz*4+0x225a077a],dh
  4064b8:	push   ebp
  4064b9:	leave  
  4064ba:	repz fld QWORD PTR [ebx]
  4064bd:	adc    DWORD PTR [esi+edx*2+0x7367503],0xffffffc4
  4064c5:	pop    esi
  4064c6:	clc    
  4064c7:	pop    ds
  4064c8:	pop    es
  4064c9:	add    BYTE PTR [edx+0x103f7a4],ch
  4064cf:	or     DWORD PTR [edi],edi
  4064d1:	adc    BYTE PTR [esi+eiz*1-0x45],ah
  4064d5:	add    DWORD PTR [ecx],esi
  4064d7:	loop   0x4064dc
  4064d9:	pop    esi
  4064da:	add    al,ch
  4064dc:	pop    ds
  4064dd:	pop    es
  4064de:	add    BYTE PTR [edi+eiz*2-0x19],bh
  4064e2:	xor    ebp,0xc6ffe419
  4064e8:	xchg   ecx,eax
  4064e9:	pop    ebx
  4064ea:	push   0x43d025
  4064ef:	mov    ecx,0xaec3026f
  4064f4:	xchg   DWORD PTR [ebx],eax
  4064f6:	push   0x31
  4064f8:	pop    eax
  4064f9:	pop    es
  4064fa:	push   0x31
  4064fc:	pop    eax
  4064fd:	pop    es
  4064fe:	push   0x8003e231
  406503:	mov    ss,WORD PTR [esp+edi*8-0x19]
  406507:	inc    edx
  406508:	mov    cl,0x4
  40650a:	add    BYTE PTR [eax-0x3bf0fdc],ch
  406510:	fnstsw WORD PTR [edx+eax*8+0x5de239]
  406517:	mov    ah,0x8
  406519:	sub    al,0xec
  40651b:	add    DWORD PTR [ecx-0x17],esp
  40651e:	adc    esi,DWORD PTR [ecx]
  406520:	or     DWORD PTR [ecx+ecx*4+0x49],esp
  406524:	fisttp DWORD PTR [esi-0x3141e0d]
  40652a:	out    dx,eax
  40652b:	dec    ecx
  40652c:	adc    eax,0x310478
  406531:	test   eax,0xf4ea3f79
  406536:	out    dx,eax
  406537:	sbb    ebx,edi
  406539:	push   edi
  40653a:	add    al,0x31
  40653c:	push   ds
  40653d:	sub    DWORD PTR [ebp-0x16fe0d00],edi
  406543:	repnz test cl,dh
  406546:	pop    esp
  406547:	mov    DWORD PTR [ecx],ecx
  406549:	fild   DWORD PTR [esi-0xd]
  40654c:	popa   
  40654d:	jmp    0xf335:0xfd0effb4
  406554:	out    dx,al
  406555:	xchg   BYTE PTR [ebx+ebp*8-0xc9a8bcf],ch
  40655c:	fs in  eax,dx
  40655e:	adc    ebp,ebx
  406560:	loope  0x40656b
  406562:	jmp    0xe9499612
  406567:	add    edi,eax
  406569:	(bad)  
  40656a:	icebp  
  40656b:	add    esp,DWORD PTR [esi+edi*2+0xd]
  40656f:	push   esp
  406570:	pop    ecx
  406571:	popa   
  406572:	push   eax
  406573:	push   ss
  406574:	icebp  
  406575:	or     cl,dh
  406577:	jne    0x4065a9
  406579:	(bad)  
  40657a:	out    0x5d,al
  40657c:	xor    ebx,DWORD PTR [edi-0x17]
  40657f:	repnz sbb al,0x1
  406582:	rcl    DWORD PTR [ecx-0x43311574],0x73
  406589:	add    eax,0xddaa58e9
  40658e:	sbb    DWORD PTR [ecx+ecx*1-0x4f],ecx
  406592:	add    bl,bl
  406594:	repnz or al,bh
  406597:	cmp    ebp,DWORD PTR [esi+eax*8]
  40659a:	call   DWORD PTR [ebx]
  40659c:	xor    eax,0xd99e005f
  4065a1:	add    al,ch
  4065a3:	push   ss
  4065a4:	add    BYTE PTR [eax-0x16],al
  4065a7:	jmp    DWORD PTR [eax+0x1c00056c]
  4065ad:	mov    esi,0x4aa583dc
  4065b2:	pop    ecx
  4065b3:	pop    eax
  4065b4:	add    edi,edi
  4065b6:	push   ss
  4065b7:	inc    eax
  4065b8:	jmp    0x2a41dcd7
  4065bd:	and    ebp,edx
  4065bf:	jne    0x4065ae
  4065c1:	mov    bl,0x43
  4065c3:	clc    
  4065c4:	cs jns 0x4065b4
  4065c7:	add    cl,ch
  4065c9:	xor    cl,BYTE PTR [ecx]
  4065cb:	push   0xffffffe9
  4065cd:	add    esi,DWORD PTR [esp+ecx*1+0x3e]
  4065d1:	jns    0x4065d4
  4065d3:	call   0x2a477e
  4065d8:	bound  ecx,QWORD PTR [ecx-0x1c0474ff]
  4065de:	jae    0x4065dc
  4065e0:	push   ds
  4065e1:	pop    ecx
  4065e2:	icebp  
  4065e3:	call   FWORD PTR [edx+ecx*8-0x7a0ead16]
  4065ea:	(bad)  
  4065eb:	or     cl,ch
  4065ed:	pop    ecx
  4065ee:	jle    0x4065dc
  4065f0:	cdq    
  4065f1:	push   0x61
  4065f3:	sbb    dl,bl
  4065f5:	repnz or al,bh
  4065f8:	jnp    0x406627
  4065fa:	(bad)  
  4065fb:	call   DWORD PTR [ebx+0x35]
  4065fe:	jmp    0xd6ff:0xa27af175
  406605:	cmp    BYTE PTR [edi+0x3200e5c2],0x54
  40660c:	mov    eax,DWORD PTR [eax]
  40660e:	imul   edx,DWORD PTR fs:[ebp+0x14],0xb
  406613:	sbb    eax,DWORD PTR [eax]
  406615:	jne    0x406673
  406617:	scas   al,BYTE PTR es:[edi]
  406618:	ret    0x5810
  40661b:	clc    
  40661c:	jne    0x40662e
  40661e:	xchg   edi,eax
  40661f:	jno    0x40662d
  406621:	(bad)  
  406622:	cmp    eax,0xa5e6e7ed
  406627:	idiv   edi
  406629:	mov    edi,ebp
  40662b:	adc    BYTE PTR [ecx],ah
  40662d:	add    al,BYTE PTR [ecx+0x1d0010c2]
  406633:	ins    BYTE PTR es:[edi],dx
  406634:	in     al,dx
  406635:	sbb    esp,0xffffffd9
  406638:	push   DWORD PTR [ebp+0x4]
  40663b:	inc    edi
  40663c:	add    al,0x8d
  40663e:	int    0xf8
  406640:	push   eax
  406641:	(bad)  
  406642:	std    
  406643:	in     al,0xe7
  406645:	ret    
  406646:	addr16 (bad) 
  406649:	mov    ecx,ebp
  40664b:	call   0x61489ed2
  406650:	pop    es
  406651:	mov    ecx,ebp
  406653:	clc    
  406654:	bswap  eax
  406656:	jae    0x406667
  406658:	sub    eax,eax
  40665a:	adc    edi,ecx
  40665c:	or     BYTE PTR [eax],al
  40665e:	popf   
  40665f:	gs in  al,dx
  406661:	or     DWORD PTR [ecx+ebx*8],0xffffffff
  406665:	jne    0x40663b
  406667:	inc    esi
  406668:	add    cl,BYTE PTR [ebp-0xaf2573]
  40666e:	add    BYTE PTR ds:0xb797e7e4,bh
  406674:	fcos   
  406676:	mov    ebx,ebp
  406678:	call   0x60d89eff
  40667d:	or     BYTE PTR [edi],cl
  40667f:	mov    edi,0xcc86fe4f
  406684:	lds    eax,FWORD PTR [edx]
  406686:	sub    esi,DWORD PTR [ecx]
  406688:	mov    dl,0xba
  40668a:	ret    0xf239
  40668d:	push   esi
  40668e:	mov    ecx,DWORD PTR [ebp+0x76fcc773]
  406694:	sbb    eax,0x6d306a00
  406699:	inc    esi
  40669a:	inc    DWORD PTR [ecx]
  40669c:	mov    bh,0x76
  40669e:	or     BYTE PTR [ecx-0x4],cl
  4066a1:	lock call DWORD PTR [esi+0x5b]
  4066a5:	inc    esi
  4066a6:	or     al,0xb2
  4066a8:	mov    edx,0xc72f7403
  4066ad:	mov    ecx,0x57b3e45
  4066b2:	sub    esi,DWORD PTR [ecx-0x67]
  4066b5:	lds    ecx,FWORD PTR [eax]
  4066b7:	xor    DWORD PTR ds:0xfcbaec7d,eax
  4066bd:	adc    eax,DWORD PTR [ebx+0x476f25b]
  4066c3:	call   0x104065fb
  4066c8:	(bad)  
  4066cb:	jl     0x4066b7
  4066cd:	fcmovnbe st,st(0)
  4066cf:	std    
  4066d0:	dec    esi
  4066d1:	lock or eax,DWORD PTR [eax]
  4066d4:	icebp  
  4066d5:	pushf  
  4066d6:	cld    
  4066d7:	mov    al,BYTE PTR [edx+eax*8-0xdcefd38]
  4066de:	add    eax,DWORD PTR [eax]
  4066e0:	retf   0x5ddc
  4066e3:	add    esi,edx
  4066e5:	jl     0x4066e6
  4066e7:	inc    BYTE PTR [edx+ebp*8-0x25]
  4066eb:	cmp    eax,0xc9f016c5
  4066f0:	repz fld QWORD PTR [ebx]
  4066f3:	push   ebp
  4066f4:	stos   BYTE PTR es:[edi],al
  4066f5:	adc    eax,0x87adc484
  4066fa:	jl     0x406771
  4066fc:	xor    eax,0xf48d038c
  406701:	or     ch,ah
  406703:	push   esp
  406704:	xchg   esi,eax
  406705:	pop    ebp
  406706:	stc    
  406707:	push   ebp
  406708:	mov    ds,WORD PTR [ebp-0x1f]
  40670b:	(bad)  
  40670d:	imul   ecx
  40670f:	add    ebp,DWORD PTR [edx]
  406711:	leave  
  406712:	cmp    eax,0xbd65b206
  406717:	add    al,0xe4
  406719:	lar    eax,sp
  40671c:	pop    es
  40671d:	shr    BYTE PTR [ebx+0x2c943100],cl
  406723:	lock xor bl,cl
  406726:	ror    BYTE PTR [eax+0x21],1
  406729:	pop    esi
  40672a:	mov    edx,0xe90930ac
  40672f:	add    ebx,edi
  406731:	shr    DWORD PTR [ebx+0x723e3100],1
  406737:	loopne 0x406739
  406739:	mov    al,0xcd
  40673b:	icebp  
  40673c:	out    dx,al
  40673d:	es out 0x1a,eax
  406740:	sbb    edi,edx
  406742:	jae    0x40672d
  406744:	pop    ecx
  406745:	xor    DWORD PTR [ebx-0x15],esi
  406748:	pop    ecx
  406749:	xor    DWORD PTR [ebx-0x16],esi
  40674c:	pop    ebx
  40674d:	xor    DWORD PTR [ecx],ecx
  40674f:	jmp    0xf59d6617
  406754:	fild   DWORD PTR [ecx]
  406756:	clc    
  406757:	jmp    0x358d1f5f
  40675c:	inc    esp
  40675d:	pop    ebp
  40675e:	cmp    ch,BYTE PTR [esi]
  406760:	jns    0x40678b
  406762:	icebp  
  406763:	aam    0xed
  406765:	(bad)  
  406766:	out    0x26,al
  406768:	dec    ecx
  406769:	leave  
  40676a:	or     ecx,ebp
  40676c:	add    esi,DWORD PTR [ecx]
  40676e:	xchg   edx,eax
  40676f:	mov    ah,0xfb
  406771:	stos   DWORD PTR es:[edi],eax
  406772:	sti    
  406773:	jae    0x4067be
  406775:	mov    ecx,0x31839139
  40677a:	or     DWORD PTR [eax],eax
  40677c:	jmp    0xeeb8f432
  406781:	(bad)  
  406782:	out    0x50,al
  406784:	out    0x19,al
  406786:	adc    edi,edi
  406788:	cmp    esi,DWORD PTR [ecx]
  40678a:	mov    bh,BYTE PTR [ebp-0x2f]
  40678d:	xor    bl,BYTE PTR [ebx+eax*1+0x2a]
  406791:	pop    edx
  406792:	add    edi,edi
  406794:	cmp    al,0x85
  406796:	xchg   esp,eax
  406797:	test   DWORD PTR [ecx+0x5e],eax
  40679a:	out    0xff,al
  40679c:	sbb    DWORD PTR [eax],eax
  40679e:	push   esi
  40679f:	pop    esp
  4067a0:	cld    
  4067a1:	rol    DWORD PTR ds:0x5ba6ffe6,0xa6
  4067a8:	je     0x406795
  4067aa:	imul   esp,DWORD PTR [edi+edi*8-0x5c0ebee4],0x7f
  4067b2:	xor    cl,BYTE PTR [ecx]
  4067b4:	mov    ebp,DWORD PTR [edx-0xe3d3015]
  4067ba:	xor    bh,BYTE PTR [ebx+ecx*4]
  4067bd:	test   DWORD PTR [ebx-0x66910734],esi
  4067c3:	adc    eax,0xe60b89e8
  4067c8:	push   DWORD PTR [eax+0x79]
  4067cb:	loope  0x406794
  4067cd:	lods   al,BYTE PTR ds:[esi]
  4067ce:	push   ss
  4067cf:	or     DWORD PTR [eax],eax
  4067d1:	jmp    0xf5b64e08
  4067d6:	fisub  DWORD PTR [ecx-0x6e20c103]
  4067dc:	push   ebp
  4067dd:	in     eax,0x6b
  4067df:	sti    
  4067e0:	imul   ebp,ecx,0x9cff0978
  4067e6:	(bad)  
  4067e7:	in     eax,0x75
  4067e9:	and    edi,ebx
  4067eb:	pop    ebx
  4067ec:	or     BYTE PTR [esi],dl
  4067ee:	dec    ecx
  4067ef:	adc    eax,0xd02ebbff
  4067f4:	ret    0xc000
  4067f7:	or     DWORD PTR [ebp-0x75],edx
  4067fa:	cmp    al,0x8b
  4067fc:	(bad)  
  4067fd:	clc    
  4067fe:	push   edi
  4067ff:	push   ecx
  406800:	clc    
  406801:	add    BYTE PTR [eax],al
  406803:	mov    BYTE PTR [ecx],cl
  406805:	add    bh,al
  406807:	inc    ebp
  406808:	fld    DWORD PTR [eax]
  40680a:	add    BYTE PTR [eax-0x6faa74f7],bl
  406810:	pusha  
  406811:	adc    cl,BYTE PTR [ebp+0x6a50f555]
  406817:	mov    esp,esi
  406819:	jne    0x406817
  40681b:	scas   eax,DWORD PTR es:[edi]
  40681c:	pop    ebp
  40681d:	clc    
  40681e:	jmp    DWORD PTR ds:0x8452fee5
  406824:	pusha  
  406825:	inc    ebp
  406826:	clc    
  406827:	mov    eax,ds:0x50004ca
  40682c:	pusha  
  40682d:	in     al,dx
  40682e:	push   0x59
  406830:	inc    bp
  406832:	or     al,0xf8
  406834:	repz jne 0x40683f
  406837:	mov    al,ds:0xaffffc17
  40683c:	mov    al,ds:0x3c1808c2
  406841:	mov    ebp,esp
  406843:	xor    dl,BYTE PTR [ecx]
  406845:	lea    eax,[ebp+0x1c]
  406848:	cmp    edi,edi
  40684a:	jne    0x40684c
  40684c:	rcr    DWORD PTR [esi],0xfc
  40684f:	pop    edi
  406850:	test   cl,0xc2
  406853:	adc    BYTE PTR [ecx],cl
  406855:	push   ebp
  406856:	mov    ebx,DWORD PTR [edx+ecx*4+0x7d]
  40685a:	or     al,0xd8
  40685c:	pop    esp
  40685d:	adc    al,0x83
  40685f:	popf   
  406860:	clc    
  406861:	push   DWORD PTR [ebx-0x2]
  406864:	cmc    
  406865:	jne    0x406877
  406867:	add    BYTE PTR [edi],cl
  406869:	pop    esp
  40686a:	or     al,0xff
  40686c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40686d:	loopne 0x406856
  40686f:	std    
  406870:	xor    edi,esi
  406872:	in     al,dx
  406873:	(bad)  
  406874:	call   0x5c4068a9
  406879:	push   edi
  40687a:	loopne 0x40687b
  40687c:	and    al,0xc2
  40687e:	in     al,dx
  40687f:	jne    0x4068ba
  406881:	or     dh,BYTE PTR [eax-0x7f0c6101]
  406887:	jge    0x4068ca
  406889:	bnd ja 0x4068a0
  40688c:	mov    dl,0x45
  40688e:	add    BYTE PTR [eax],al
  406890:	std    
  406891:	jmp    0x40687f
  406893:	jne    0x4068b6
  406895:	shl    DWORD PTR [esi+0xc],cl
  406898:	jbe    0x4068bf
  40689a:	cld    
  40689b:	out    0xa6,eax
  40689d:	mov    ds:0xb078ffec,eax
  4068a2:	(bad)  
  4068a3:	inc    DWORD PTR ds:0xd483df67
  4068a9:	fld    QWORD PTR [ebx]
  4068ab:	je     0x4068e8
  4068ad:	xor    DWORD PTR [esi+0xc],0x59
  4068b1:	inc    eax
  4068b2:	fiadd  WORD PTR [eax]
  4068b4:	xor    DWORD PTR [edi+0x2712b01],eax
  4068ba:	in     eax,dx
  4068bb:	jne    0x4068fa
  4068bd:	arpl   WORD PTR [esi+0x8],si
  4068c0:	sbb    DWORD PTR [edi],ebx
  4068c2:	in     al,dx
  4068c3:	call   FWORD PTR [esi]
  4068c5:	test   eax,0xa53108c1
  4068ca:	js     0x4068b8
  4068cc:	add    BYTE PTR [esi],cl
  4068ce:	mov    ebp,0x3b4ee7fb
  4068d3:	in     al,dx
  4068d4:	jmp    DWORD PTR [ecx-0x38]
  4068d7:	sti    
  4068d8:	cmp    bl,BYTE PTR [bp+si+0x42]
  4068dd:	out    dx,al
  4068de:	pushf  
  4068df:	sti    
  4068e0:	out    0x62,eax
  4068e2:	sbb    ebp,esp
  4068e4:	dec    DWORD PTR [ebx-0xe]
  4068e7:	in     al,dx
  4068e8:	jne    0x406913
  4068ea:	or     DWORD PTR [ecx],edx
  4068ec:	push   edi
  4068ed:	into   
  4068ee:	jecxz  0x40690e
  4068f0:	pop    ecx
  4068f1:	xor    edx,DWORD PTR [esi-0x1b910054]
  4068f7:	xchg   esp,eax
  4068f8:	sti    
  4068f9:	into   
  4068fa:	aas    
  4068fb:	push   es
  4068fc:	in     al,dx
  4068fd:	scas   al,BYTE PTR es:[edi]
  4068fe:	outs   dx,BYTE PTR ds:[esi]
  4068ff:	jmp    0x40697f
  406901:	in     al,dx
  406902:	clc    
  406903:	cwde   
  406904:	in     al,dx
  406905:	and    al,0x11
  406907:	add    DWORD PTR [esi],edi
  406909:	xchg   esi,eax
  40690a:	jecxz  0x4068f2
  40690c:	dec    esp
  40690d:	js     0x4068d5
  40690f:	in     eax,dx
  406910:	add    ebx,esp
  406912:	pop    ebp
  406914:	xchg   DWORD PTR [ebp-0x1c],esi
  406917:	into   
  406918:	jno    0x406943
  40691a:	icebp  
  40691b:	sbb    esi,ebp
  40691d:	outs   dx,BYTE PTR ds:[esi]
  40691e:	jecxz  0x406932
  406920:	inc    ecx
  406921:	xor    eax,0xb2e82c92
  406926:	dec    ebp
  406927:	(bad)  
  406929:	enter  0xa608,0x71
  40692d:	cmp    eax,0xfc14e4
  406932:	dec    esi
  406933:	or     BYTE PTR [ebx+0x14e33eeb],dl
  406939:	call   0xdc31c674
  40693e:	xor    ah,dl
  406940:	jle    0x40692d
  406942:	es pop ebp
  406944:	loope  0x406921
  406946:	gs in  eax,0x6e
  406949:	jmp    0x4068f5
  40694b:	dec    esp
  40694c:	gs mov ebp,0x50e911f3
  406952:	mov    edx,0x5c06af5
  406957:	retf   
  406958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406959:	out    dx,eax
  40695a:	xor    DWORD PTR [ecx],ecx
  40695c:	jmp    0x3d8d2564
  406961:	push   esp
  406962:	out    0x5c,al
  406964:	add    cl,ah
  406966:	cli    
  406967:	sub    ebp,esi
  406969:	jmp    0xa200f5a0
  40696e:	sub    edx,esp
  406970:	jne    0x406963
  406972:	jmp    0x4590:0xca16f9df
  406979:	adc    edx,ecx
  40697b:	pop    esp
  40697c:	cld    
  40697d:	adc    DWORD PTR [edx-0x5816ff0b],ecx
  406983:	mov    ds:0x5c8bdf74,al
  406988:	clc    
  406989:	cdq    
  40698a:	hlt    
  40698b:	or     al,ch
  40698d:	pop    eax
  40698e:	xor    BYTE PTR [ecx],cl
  406990:	add    BYTE PTR [eax-0xf],dh
  406993:	fdiv   st(7),st
  406995:	pop    esp
  406996:	add    BYTE PTR [ecx+0x32bddbf1],cl
  40699c:	or     edi,edi
  40699e:	cmp    al,0x6d
  4069a0:	jmp    0x2c8b:0xe25bc2db
  4069a7:	popa   
  4069a8:	adc    cl,al
  4069aa:	mov    dh,0x82
  4069ac:	cmp    edi,edi
  4069ae:	sbb    al,0x4d
  4069b0:	jmp    0xabc9:0xe25b9f92
  4069b7:	ds loop 0x406a0e
  4069ba:	bound  ebx,QWORD PTR [esi-0x7a]
  4069bd:	les    edi,FWORD PTR [ecx-0xd]
  4069c0:	dec    ebx
  4069c1:	hlt    
  4069c2:	jmp    0x644072f9
  4069c7:	jno    0x4069ae
  4069c9:	push   eax
  4069ca:	outs   dx,BYTE PTR ds:[esi]
  4069cb:	mov    eax,ds:0xe929e811
  4069d0:	or     BYTE PTR [eax],al
  4069d2:	fs repnz pusha 
  4069d5:	dec    ebp
  4069d6:	push   esi
  4069d7:	adc    DWORD PTR [ecx],0xe20575e8
  4069dd:	inc    DWORD PTR [eax]
  4069df:	popa   
  4069e0:	dec    ecx
  4069e1:	clc    
  4069e2:	and    DWORD PTR [ebp+0x347204ed],0xffffff8a
  4069e9:	ins    DWORD PTR es:[edi],dx
  4069ea:	clc    
  4069eb:	int3   
  4069ec:	out    dx,al
  4069ed:	jne    0x4069eb
  4069ef:	and    BYTE PTR [edi-0x14],ch
  4069f2:	add    al,bl
  4069f4:	loop   0x4069b5
  4069f6:	je     0x4069d2
  4069f8:	out    dx,al
  4069f9:	jne    0x4069f3
  4069fb:	add    BYTE PTR [eax+0x43],bh
  4069fe:	add    al,ch
  406a00:	cdq    
  406a01:	or     BYTE PTR [eax],al
  406a03:	add    BYTE PTR [edi+0x11d0f79d],dl
  406a09:	dec    ecx
  406a0a:	hlt    
  406a0b:	call   FWORD PTR ds:0x6467e8ea
  406a11:	or     al,0x0
  406a13:	jmp    0x406a93
  406a15:	lock jne 0x406a20
  406a18:	jo     0x406a5b
  406a1a:	sti    
  406a1b:	jmp    DWORD PTR [edi+0x3]
  406a1e:	ror    cl,0x9a
  406a21:	or     BYTE PTR [eax],al
  406a23:	jmp    0x406a73
  406a25:	add    al,0xc0
  406a27:	leave  
  406a28:	mov    cl,BYTE PTR [eax]
  406a2a:	add    BYTE PTR [edx+0x4a],ch
  406a2d:	inc    ebx
  406a2e:	cld    
  406a2f:	jmp    FWORD PTR ds:0x9104e7e5
  406a35:	out    dx,eax
  406a36:	inc    edi
  406a38:	or     eax,0x480001dd
  406a3d:	add    eax,0x35a8458d
  406a42:	push   DWORD PTR [ebp+0x20]
  406a45:	(bad)  
  406a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a49:	repnz cmp DWORD PTR [ebp-0x68],0x5
  406a4e:	je     0x406a62
  406a50:	pop    es
  406a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a52:	cmp    eax,DWORD PTR [ebp+0x5c]
  406a55:	jo     0x406a5e
  406a57:	mov    eax,0x3f131
  406a5c:	xor    DWORD PTR [ebx+0x2],ecx
  406a5f:	sub    eax,DWORD PTR [eax]
  406a61:	icebp  
  406a62:	cmp    eax,DWORD PTR [esi]
  406a64:	sub    esi,ecx
  406a66:	sbb    esi,eax
  406a68:	add    al,0x31
  406a6a:	jge    0x406ae8
  406a6c:	in     al,dx
  406a6d:	mov    dl,0x26
  406a6f:	in     al,dx
  406a70:	lea    esi,[esi+eiz*1+0x54]
  406a74:	(bad)  
  406a75:	cmp    al,0xda
  406a77:	fistp  DWORD PTR [edx]
  406a79:	int3   
  406a7a:	repnz add eax,DWORD PTR [ebp-0xe3850f]
  406a81:	and    al,0xda
  406a83:	fucomi st,st(6)
  406a85:	test   eax,0xf489e8df
  406a8a:	fld1   
  406a8c:	jne    0x406a23
  406a8e:	or     ah,ch
  406a90:	jmp    0x406ac3
  406a92:	repnz cld 
  406a94:	mov    edi,0x75e8d5fd
  406a99:	sub    eax,0xe1f86eb7
  406a9e:	leave  
  406a9f:	or     esi,DWORD PTR cs:[ecx]
  406aa2:	bnd call 0xd2fad01d
  406aa8:	jmp    0x406adb
  406aaa:	bnd call 0xd30a9425
  406ab0:	cli    
  406ab1:	dec    esi
  406ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ab3:	mov    edx,0x4ef239c2
  406ab8:	mov    ecx,DWORD PTR [ebp+0x73]
  406abb:	mov    edi,0xcccae2e8
  406ac0:	lea    esi,[esi+eax*4+0x53]
  406ac4:	inc    DWORD PTR [eax]
  406ac6:	pushf  
  406ac7:	fcmovu st,st(3)
  406ac9:	retf   0xf20d
  406acc:	add    eax,DWORD PTR [ebp-0x4884410f]
  406ad2:	xor    DWORD PTR [ecx],ecx
  406ad4:	jmp    0xf19670dc
  406ad9:	fistp  DWORD PTR [ebx-0x5717a920]
  406adf:	inc    ebp
  406ae0:	push   ebp
  406ae1:	call   0x7892484a
  406ae6:	fimul  DWORD PTR [eax]
  406ae8:	jmp    0x6d5009e9
  406aed:	xchg   DWORD PTR [ecx],esi
  406aef:	or     ecx,ebp
  406af1:	jp     0x406b67
  406af3:	fldenv [esi]
  406af5:	outs   dx,BYTE PTR ds:[esi]
  406af6:	mov    ebp,0x30047bf0
  406afb:	or     DWORD PTR [edx-0x41],ebp
  406afe:	sub    eax,0x103e906
  406b03:	or     DWORD PTR [ecx-0x16f72725],ebx
  406b09:	add    ebp,DWORD PTR [eax+0x1ce80545]
  406b0f:	aad    0x1
  406b11:	push   0x82e90a32
  406b16:	ins    DWORD PTR es:[edi],dx
  406b17:	add    al,0xe4
  406b19:	add    esi,DWORD PTR [ecx]
  406b1b:	stc    
  406b1c:	call   0xe9b8f474
  406b21:	add    esi,DWORD PTR [ecx]
  406b23:	xchg   edx,eax
  406b24:	sub    al,0xdc
  406b26:	fisttp DWORD PTR [eax]
  406b28:	mov    esi,0xdf4d0071
  406b2d:	cmp    al,0xf0
  406b2f:	push   esi
  406b30:	push   ebp
  406b31:	shl    edi,0xc4
  406b34:	fcom   DWORD PTR [ecx-0x16f5cda3]
  406b3a:	xor    BYTE PTR [ebp-0xc],0x5f
  406b3e:	inc    ecx
  406b3f:	cmp    edi,ebx
  406b41:	adc    al,0xe8
  406b43:	sbb    DWORD PTR [edi],edx
  406b45:	xchg   edx,eax
  406b46:	add    al,0x31
  406b48:	fdivrp st(4),st
  406b4a:	sti    
  406b4b:	push   ss
  406b4c:	cwde   
  406b4d:	add    BYTE PTR [ebx+0xe],dh
  406b50:	fild   QWORD PTR [edx-0x1f]
  406b53:	push   0xfffffffc
  406b55:	inc    edi
  406b56:	test   al,0x32
  406b58:	fidiv  WORD PTR [ebp-0xf]
  406b5b:	fiadd  DWORD PTR ds:0x130e56fd
  406b61:	fmul   DWORD PTR [esi+0x60]
  406b64:	aad    0xff
  406b66:	mov    esp,0x3de2e6ea
  406b6b:	(bad)  
  406b6c:	fisub  WORD PTR [ebx]
  406b6e:	adc    esi,ecx
  406b70:	push   esp
  406b71:	clc    
  406b72:	cs inc eax
  406b74:	icebp  
  406b75:	call   FWORD PTR [edx+ecx*8-0x29e3f71a]
  406b7c:	fisub  WORD PTR [ebx]
  406b7e:	xor    esi,ecx
  406b80:	push   esp
  406b81:	in     al,dx
  406b82:	add    DWORD PTR [esi],edi
  406b84:	or     DWORD PTR [eax],eax
  406b86:	jmp    0x1228c01a
  406b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b8c:	fdivp  st(7),st
  406b8e:	jmp    0x894fa93
  406b93:	add    DWORD PTR [eax+eiz*8-0x35f41901],eax
  406b9a:	pop    ebx
  406b9b:	mov    al,0x70
  406b9d:	add    eax,0xecfa3c00
  406ba2:	or     DWORD PTR [ebp+ebp*2-0x22],0x73
  406ba7:	icebp  
  406ba8:	dec    edi
  406ba9:	push   esp
  406baa:	or     cl,dl
  406bac:	outs   dx,DWORD PTR ds:[esi]
  406bad:	repz add cl,ch
  406bb0:	cmp    ecx,ecx
  406bb2:	leave  
  406bb3:	stos   DWORD PTR es:[edi],eax
  406bb4:	dec    esi
  406bb5:	ficom  WORD PTR [edx+esi*2+0x5e]
  406bb9:	xchg   edx,eax
  406bba:	inc    ebp
  406bbb:	icebp  
  406bbc:	xor    DWORD PTR [ecx+0x3932e900],ecx
  406bc2:	push   0x29
  406bc4:	or     eax,0x1800eac5
  406bc9:	or     cl,cl
  406bcb:	ret    0xa14
  406bce:	push   ebp
  406bcf:	mov    ebp,DWORD PTR [esi+ecx*2-0x1de27404]
  406bd6:	mov    cl,BYTE PTR [ebp-0x4]
  406bd9:	jmp    0x2b02:0xbd49510e
  406be0:	dec    eax
  406be1:	fld    TBYTE PTR [ebx+0x3e55b59]
  406be7:	repz ret 0xc946
  406beb:	ret    0x9e0
  406bee:	push   ebp
  406bef:	mov    ebp,DWORD PTR [esp+ecx*2+0x57]
  406bf3:	mov    eax,DWORD PTR [eax]
  406bf5:	popf   
  406bf6:	aad    0xfb
  406bf8:	mov    esp,DWORD PTR [ebp-0x47b2751f]
  406bfe:	jmp    0xc95e:0x4764f302
  406c05:	pop    edx
  406c06:	(bad)  
  406c07:	call   DWORD PTR [ebx+eiz*1-0x4a]
  406c0b:	push   esi
  406c0c:	push   edi
  406c0d:	and    ebx,DWORD PTR [ecx+0x8]
  406c10:	cld    
  406c11:	adc    esp,DWORD PTR [ecx]
  406c13:	adc    BYTE PTR [ebx],ch
  406c15:	pop    eax
  406c16:	arpl   WORD PTR [ebp+0xc],di
  406c19:	jnp    0x406c25
  406c1b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c1d:	and    DWORD PTR [edx+0x44480175],0x5e
  406c24:	leave  
  406c25:	call   0x83c0:0xe354ffe0
  406c2c:	les    ebx,FWORD PTR [esi+ecx*2+0xaf05357]
  406c33:	add    DWORD PTR [eax],eax
  406c35:	pop    eax
  406c36:	in     al,0x75
  406c38:	or     BYTE PTR [eax-0x60000087],ah
  406c3e:	pop    edi
  406c3f:	jge    0x406c49
  406c41:	xor    DWORD PTR [edi],ebp
  406c43:	cmp    eax,0x43a032b
  406c48:	add    DWORD PTR [ecx],esi
  406c4a:	bnd jnp 0x406c61
  406c4d:	pop    ebx
  406c4e:	pop    esp
  406c4f:	ret    0x18e2
  406c52:	push   0x23760867
  406c57:	jns    0x406cce
  406c59:	add    BYTE PTR ds:0x31fe3f2c,dh
  406c5f:	idiv   DWORD PTR [edx+0x68da2b]
  406c65:	cmp    edi,DWORD PTR [ecx+0x6c00e4a5]
  406c6b:	inc    esp
  406c6c:	jp     0x406c72
  406c6e:	and    dl,dh
  406c70:	ds (bad) 
  406c72:	es pop esp
  406c74:	dec    edi
  406c75:	(bad)  
  406c76:	mov    ebx,0x2d8829e6
  406c7b:	out    0x79,eax
  406c7d:	inc    ebp
  406c7e:	mov    esi,0x703a005a
  406c83:	mov    bh,0x36
  406c85:	adc    BYTE PTR [ebx],ah
  406c87:	lock sbb cl,cl
  406c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c8b:	das    
  406c8c:	outs   dx,DWORD PTR ds:[esi]
  406c8d:	aad    0xfa
  406c8f:	jp     0x406cd6
  406c91:	leave  
  406c92:	jae    0x406c7a
  406c94:	add    edx,DWORD PTR [ebp-0x46]
  406c97:	fiadd  WORD PTR [eax+0x4e1f89c4]
  406c9d:	push   edi
  406c9e:	jle    0x406cd5
  406ca0:	cld    
  406ca1:	pop    edx
  406ca2:	stos   DWORD PTR es:[edi],eax
  406ca3:	out    dx,eax
  406ca4:	jnp    0x406ceb
  406ca6:	ins    BYTE PTR es:[edi],dx
  406ca7:	push   0x2db90140
  406cac:	call   0x3d63c73c
  406cb1:	mov    ebx,esp
  406cb3:	in     eax,0xbc
  406cb5:	inc    ebp
  406cb6:	dec    ecx
  406cb7:	repnz add eax,DWORD PTR [eax]
  406cba:	xor    DWORD PTR [ecx],ecx
  406cbc:	jb     0x406cf4
  406cbe:	add    BYTE PTR [ecx],ah
  406cc0:	call   0xde2d52ee
  406cc5:	out    0xad,al
  406cc7:	je     0x406ca7
  406cc9:	fisubr WORD PTR [ebp+0x4e71213d]
  406ccf:	push   ds
  406cd0:	or     DWORD PTR [eax+ebp*8],edx
  406cd3:	es xchg ebx,eax
  406cd5:	sub    al,0xe8
  406cd7:	mov    ebx,0x5c7bb0f4
  406cdc:	fcomi  st,st(6)
  406cde:	lods   eax,DWORD PTR ds:[esi]
  406cdf:	je     0x406cbf
  406ce1:	jno    0x406cf2
  406ce3:	cmp    DWORD PTR [edi+ebx*4],ecx
  406ce6:	ds in  eax,dx
  406ce8:	mov    ?,WORD PTR [esp+eiz*8+0x7a00f4b9]
  406cef:	test   ah,bl
  406cf1:	jmp    0x406d41
  406cf3:	xlat   BYTE PTR ds:[ebx]
  406cf4:	mov    ds,ebp
  406cf6:	sub    DWORD PTR [edx+0x1d333145],edi
  406cfc:	sbb    DWORD PTR [esi],esp
  406cfe:	ds mov ecx,0x6c7929e6
  406d04:	fisub  WORD PTR [ecx+0x0]
  406d07:	mov    ebx,0xf27b0d45
  406d0c:	or     DWORD PTR [esi+0x2bd1fa45],esp
  406d12:	not    DWORD PTR [esi-0x4f289dcc]
  406d18:	(bad)  
  406d19:	std    
  406d1a:	in     al,0x86
  406d1c:	fstp   TBYTE PTR [edx]
  406d1e:	das    
  406d1f:	pop    edx
  406d20:	lea    esp,[eax+eiz*8]
  406d23:	add    cl,ah
  406d25:	fistp  DWORD PTR [esp+ecx*1+0x59]
  406d29:	push   ebp
  406d2a:	ret    
  406d2b:	add    al,0x31
  406d2d:	xchg   BYTE PTR [ecx-0x168d56ed],ch
  406d33:	add    esi,DWORD PTR [ecx]
  406d35:	fadd   QWORD PTR [eax]
  406d37:	cmp    al,0x3d
  406d39:	icebp  
  406d3a:	inc    ebp
  406d3b:	mov    bh,0x52
  406d3d:	fisttp DWORD PTR [ecx+0x75db592c]
  406d43:	popf   
  406d44:	inc    ebp
  406d45:	push   ds
  406d46:	jmp    0xc04ea034
  406d4b:	adc    eax,0x79459092
  406d50:	adc    dl,BYTE PTR [ebp-0xc]
  406d53:	xchg   ecx,eax
  406d54:	mov    ebx,ebx
  406d56:	push   DWORD PTR [esi-0x44]
  406d59:	inc    esp
  406d5a:	clc    
  406d5b:	outs   dx,BYTE PTR ds:[esi]
  406d5c:	push   0xdadcffd5
  406d61:	fidiv  DWORD PTR [ebp+0x59]
  406d64:	add    eax,0xd256fe8e
  406d69:	fidiv  DWORD PTR [ebp+0x4d]
  406d6c:	aad    0x1
  406d6e:	jmp    0x761aa05c
  406d73:	in     eax,dx
  406d74:	retf   0xe905
  406d77:	jmp    0xb53fa6ae
  406d7c:	mov    WORD PTR ss:[ebp-0x252ce9],es
  406d83:	mov    ecx,0x16fea4ca
  406d88:	add    BYTE PTR [edx-0x6dea8a26],dl
  406d8e:	push   esp
  406d8f:	clc    
  406d90:	je     0x406d3a
  406d92:	jmp    0x406d92
  406d94:	(bad)  
  406d95:	xchg   ebx,eax
  406d96:	cmp    eax,ebp
  406d98:	not    DWORD PTR [eax-0x16110026]
  406d9e:	adc    al,ch
  406da0:	push   esp
  406da1:	pop    ebp
  406da2:	(bad)  
  406da4:	push   ebx
  406da5:	and    eax,0xf4212871
  406daa:	or     bh,bh
  406dac:	push   esp
  406dad:	xor    eax,0x7200bbf1
  406db2:	out    0xff,eax
  406db4:	or     edx,DWORD PTR [eax-0x780b8a19]
  406dba:	inc    ecx
  406dbb:	clc    
  406dbc:	(bad)  
  406dbd:	std    
  406dbe:	or     al,0xe8
  406dc0:	stos   DWORD PTR es:[edi],eax
  406dc1:	xchg   edx,eax
  406dc2:	out    0xff,eax
  406dc4:	and    esi,DWORD PTR [eax-0x19]
  406dc7:	jne    0x406dc1
  406dc9:	mov    al,0x9a
  406dcb:	std    
  406dcc:	push   DWORD PTR [edi-0x3ff78a1a]
  406dd2:	test   al,0xf7
  406dd4:	call   DWORD PTR [edi-0x2ea43c75]
  406dda:	ret    
  406ddb:	or     BYTE PTR [eax],al
  406ddd:	sbb    eax,0x4c83ec8a
  406de2:	mov    dl,0x57
  406de4:	mov    ecx,ebp
  406de6:	ror    DWORD PTR [edx],1
  406de8:	ror    BYTE PTR [eax+edx*1],0xc7
  406dec:	add    BYTE PTR [eax],al
  406dee:	fadd   DWORD PTR ds:0xe6430000
  406df4:	cmp    DWORD PTR [ebp-0x30],0x4
  406df8:	jne    0x406e01
  406dfa:	inc    edx
  406dfb:	push   es
  406dfc:	add    al,BYTE PTR [eax]
  406dfe:	fsubr  st,st(2)
  406e00:	jae    0x75424b9b
  406e06:	iret   
  406e07:	jnp    0x406e09
  406e09:	add    DWORD PTR [eax+0x7302eb05],ebx
  406e0f:	xchg   ebx,eax
  406e10:	or     edx,0x20591
  406e16:	add    eax,0xaa50fc51
  406e1b:	imul   eax,DWORD PTR [eax],0xffffffff
  406e1e:	std    
  406e1f:	or     edi,edi
  406e21:	jne    0x406da3
  406e23:	in     eax,dx
  406e24:	mov    ds:0xb0588e9,al
  406e29:	shl    BYTE PTR [ecx],0x3d
  406e2c:	jno    0x406dbb
  406e2e:	in     al,dx
  406e2f:	mov    bh,0x34
  406e31:	push   0x31
  406e33:	push   ebp
  406e34:	inc    edi
  406e35:	hlt    
  406e36:	add    DWORD PTR [esi],esi
  406e38:	add    al,0xff
  406e3a:	les    edi,FWORD PTR [edi-0x38ba8a20]
  406e40:	(bad)
  406e44:	or     al,0xc0
  406e46:	mov    esp,0x297d852b
  406e4b:	jecxz  0x406ea4
  406e4d:	inc    esi
  406e4e:	mov    dl,0x5
  406e50:	fadd   DWORD PTR [ecx]
  406e52:	add    BYTE PTR [eax+ebp*8-0x1de6827c],ah
  406e59:	push   edi
  406e5a:	cmp    bh,BYTE PTR [edx+0x6140dc25]
  406e60:	mov    al,BYTE PTR [edx-0x3]
  406e63:	(bad)  
  406e64:	outs   dx,DWORD PTR ds:[esi]
  406e65:	(bad)  
  406e66:	clc    
  406e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e68:	lods   eax,DWORD PTR ds:[esi]
  406e69:	fist   DWORD PTR [eax-0x7a]
  406e6c:	int3   
  406e6d:	add    ebp,DWORD PTR [edx+0x31]
  406e70:	inc    edi
  406e71:	push   edi
  406e72:	adc    dh,bl
  406e74:	xchg   ebp,eax
  406e75:	fucomip st,st(0)
  406e77:	jle    0x406eb2
  406e79:	add    al,0x0
  406e7b:	cmp    ah,BYTE PTR [edx]
  406e7d:	pop    eax
  406e7e:	or     bl,BYTE PTR [esi+0x4a]
  406e81:	sub    ebp,edi
  406e83:	mov    esi,0xcaff2d2f
  406e88:	out    0x8c,al
  406e8a:	inc    ebp
  406e8b:	inc    ebp
  406e8c:	jmp    0x406e51
  406e8e:	je     0x406ebc
  406e90:	pop    es
  406e91:	push   edi
  406e92:	clc    
  406e93:	scas   al,BYTE PTR es:[edi]
  406e94:	loop   0x406e76
  406e96:	jne    0x406e2d
  406e98:	cli    
  406e99:	sbb    al,0xe9
  406e9b:	xor    edx,esp
  406e9d:	mov    edi,es
  406e9f:	cmp    ah,BYTE PTR [edx]
  406ea1:	push   edi
  406ea2:	sbb    al,0xb2
  406ea4:	or     DWORD PTR [esp+edi*8+0x30],esp
  406ea8:	pop    esp
  406ea9:	test   DWORD PTR [esp+esi*8+0x663428f0],0xe4e0f55e
  406eb4:	clc    
  406eb5:	lds    edx,FWORD PTR [esi+0x0]
  406eb8:	and    eax,0x590c34d8
  406ebd:	sub    dh,BYTE PTR [esi-0x5fc7b920]
  406ec3:	lds    esp,FWORD PTR ds:0x458d3c09
  406ec9:	mov    bl,BYTE PTR [esp+ecx*1]
  406ecc:	xor    BYTE PTR [ecx],cl
  406ece:	jmp    0x8e430b56
  406ed3:	push   ss
  406ed4:	fiadd  WORD PTR [eax+0x28]
  406ed7:	add    al,0xa6
  406ed9:	dec    ebp
  406eda:	icebp  
  406edb:	ins    DWORD PTR es:[edi],dx
  406edc:	xor    eax,ebx
  406ede:	cld    
  406edf:	test   DWORD PTR [edi],0x84e0d95e
  406ee5:	add    eax,0xe1295666
  406eea:	push   ebp
  406eeb:	loope  0x406edb
  406eed:	xlat   BYTE PTR ds:[ebx]
  406eee:	and    ch,al
  406ef0:	inc    ecx
  406ef1:	or     DWORD PTR [edx],eax
  406ef3:	les    ebp,FWORD PTR [edx-0x671ae748]
  406ef9:	add    ecx,ebp
  406efb:	add    esi,DWORD PTR [ecx]
  406efd:	mov    edx,0x8a355443
  406f02:	cmp    edx,DWORD PTR [edx]
  406f04:	mov    ds:0xc38225a1,eax
  406f09:	stc    
  406f0a:	div    edx
  406f0c:	inc    ecx
  406f0d:	jmp    0x406f16
  406f0f:	mov    bh,BYTE PTR ds:0xf08ad98e
  406f15:	or     BYTE PTR [edi],al
  406f17:	ret    
  406f18:	sbb    al,0xb3
  406f1a:	sub    dh,BYTE PTR [esi]
  406f1c:	add    BYTE PTR [edx-0x4a61ff1c],bh
  406f22:	dec    ebp
  406f23:	or     dh,dh
  406f25:	ret    
  406f26:	cmp    DWORD PTR [ebp-0xb],0xffffffab
  406f2a:	inc    ebp
  406f2b:	adc    dl,dh
  406f2d:	jge    0x406f8b
  406f2f:	sbb    BYTE PTR [edx-0x63],ah
  406f32:	leave  
  406f33:	jmp    0x2dc6:0x251040e1
  406f3a:	or     DWORD PTR [eax],eax
  406f3c:	jb     0x406f77
  406f3e:	mov    ?,WORD PTR [eax]
  406f40:	pusha  
  406f41:	in     al,dx
  406f42:	or     BYTE PTR [ebx],dh
  406f44:	stos   DWORD PTR es:[edi],eax
  406f45:	imul   dl
  406f47:	call   0xc977ecea
  406f4c:	stos   DWORD PTR es:[edi],eax
  406f4d:	inc    ecx
  406f4e:	or     DWORD PTR [ebp+0x62],edx
  406f51:	and    DWORD PTR [ebx],edi
  406f53:	or     DWORD PTR [ebp*1-0x10118af7],0x4c
  406f5b:	or     BYTE PTR [ebp+edi*2+0x48],bl
  406f5f:	add    BYTE PTR [edx-0x70],ch
  406f62:	add    eax,0xce37f400
  406f67:	inc    ebp
  406f68:	cmc    
  406f69:	mov    cl,0x41
  406f6b:	inc    ecx
  406f6c:	jmp    0x4148cc80
  406f71:	fsub   st(7),st
  406f73:	add    cl,ch
  406f75:	stos   DWORD PTR es:[edi],eax
  406f76:	mov    cl,0xff
  406f78:	mov    esp,0x4607e126
  406f7d:	xor    eax,0x110309
  406f82:	jb     0x406fbe
  406f84:	call   0x174e77
  406f89:	jb     0x407000
  406f8b:	(bad)  
  406f8c:	jne    0x406f7f
  406f8e:	arpl   cx,sp
  406f90:	adc    DWORD PTR [esi],ecx
  406f92:	sub    eax,0x2e94ff09
  406f97:	cmp    ch,al
  406f99:	add    BYTE PTR [esi+0x30000ef],bl
  406f9f:	retf   0xc95b
  406fa2:	pop    edx
  406fa3:	add    eax,0xd9135500
  406fa8:	push   ebx
  406fa9:	or     DWORD PTR ds:0x57750005,0xffffffcf
  406fb0:	inc    ebp
  406fb1:	or     ch,bl
  406fb3:	inc    ecx
  406fb4:	inc    ecx
  406fb5:	add    bl,cl
  406fb7:	push   0xe15000c
  406fbc:	mov    DWORD PTR [ebp+0x5c],0x58414889
  406fc3:	mov    bh,0x75
  406fc5:	or     BYTE PTR [eax-0x57],dh
  406fc8:	out    0x0,al
  406fca:	dec    eax
  406fcb:	sbb    eax,0xffffffff
  406fce:	inc    ebp
  406fcf:	stc    
  406fd0:	out    0xb3,eax
  406fd2:	mov    dh,0x9
  406fd4:	add    BYTE PTR [ebx],al
  406fd6:	loopne 0x407022
  406fd8:	push   ebx
  406fd9:	call   0x4022a1
  406fde:	adc    DWORD PTR [edx+0x1b1075ff],0xffffffe8
  406fe5:	mov    ebp,0x9b600
  406fea:	call   ebp
  406fec:	add    eax,0xeb92e853
  406ff1:	add    BYTE PTR [eax],al
  406ff3:	pop    ecx
  406ff4:	imul   ecx,DWORD PTR [eax],0x4c909d
  406ffa:	je     0x406fdc
  406ffc:	mov    dh,0x75
  406ffe:	or     BYTE PTR [eax-0x59],ah
  407001:	sti    
  407002:	(bad)  
  407003:	inc    DWORD PTR [edx-0x37eea43d]
  407009:	or     BYTE PTR [eax],al
  40700b:	jne    0x406f8f
  40700d:	in     al,dx
  40700e:	adc    DWORD PTR [esi+esi*4+0x57],0x68
  407013:	xor    ebp,esp
  407015:	add    al,0x0
  407017:	xor    DWORD PTR [eax],ecx
  407019:	lods   eax,DWORD PTR ds:[esi]
  40701a:	sti    
  40701b:	xchg   esi,eax
  40701c:	push   cs
  40701d:	mov    WORD PTR [ebp-0x73],es
  407020:	bound  esp,QWORD PTR [eax]
  407022:	sar    edx,cl
  407024:	mov    al,ds:0xe2040003
  407029:	jmp    0x316a:0xe0347616
  407030:	cmp    al,BYTE PTR [edi+edi*8]
  407033:	fsubr  st(7),st
  407035:	imul   eax,DWORD PTR [eax],0x4bb0dc5e
  40703b:	lock fild WORD PTR [esi-0x22e83740]
  407042:	jne    0x407089
  407044:	(bad)  
  407045:	imul   edi,ebx,0x45c5a63e
  40704b:	add    BYTE PTR ds:0x310003df,dh
  407051:	xor    esi,DWORD PTR [ebp-0x171d8fb5]
  407057:	sub    eax,0x4588dbaa
  40705c:	sub    ebp,eax
  40705e:	fdivr  QWORD PTR [edi+0xe]
  407061:	push   esp
  407062:	sbb    eax,DWORD PTR [edx+0x2d]
  407065:	aad    0xf8
  407067:	imul   esi,DWORD PTR [ecx],0x61084235
  40706d:	mov    edx,0xe2704d20
  407072:	fdiv   QWORD PTR [edx]
  407074:	fst    DWORD PTR [esi-0x18210023]
  40707a:	ret    
  40707b:	je     0x4070a9
  40707d:	pop    ecx
  40707e:	inc    edi
  40707f:	cld    
  407080:	fcmovu st,st(2)
  407082:	add    bh,0x2d
  407085:	pop    edi
  407086:	sbb    eax,0x88f44400
  40708b:	inc    ebp
  40708c:	mov    ch,0x9
  40708e:	(bad)  
  40708f:	retf   0xd73
  407092:	jmp    0xbb262acd
  407097:	mov    ah,dh
  407099:	add    dl,ah
  40709b:	ret    
  40709c:	sbb    eax,0x311c690e
  4070a1:	pop    esi
  4070a2:	repz fwait
  4070a4:	xor    DWORD PTR [ecx],ecx
  4070a6:	jmp    0x2c024aae
  4070ab:	or     BYTE PTR [ecx],dh
  4070ad:	pop    edi
  4070ae:	jmp    0x5f71711c
  4070b3:	jmp    0xb16b:0xe95f3169
  4070ba:	or     ecx,ebp
  4070bc:	add    edx,DWORD PTR [esi+0x5e]
  4070bf:	icebp  
  4070c0:	jmp    0x407043
  4070c2:	out    dx,al
  4070c3:	jmp    0x2f22acb
  4070c8:	(bad)  
  4070c9:	repnz pop esp
  4070cb:	loop   0x4070fd
  4070cd:	dec    ecx
  4070ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070cf:	mov    WORD PTR [ebx],es
  4070d1:	xor    DWORD PTR [ecx+0x93103e8],edx
  4070d7:	xor    cl,bl
  4070d9:	repz or al,0xe9
  4070dc:	ss stos BYTE PTR es:[edi],al
  4070de:	in     al,0x72
  4070e0:	inc    esi
  4070e1:	cmp    DWORD PTR [eax],eax
  4070e3:	test   eax,0xb1892c57
  4070e8:	add    eax,DWORD PTR [edx+eax*1+0x9310331]
  4070ef:	jmp    0xe94d64be
  4070f4:	fcomp  QWORD PTR [ecx+eax*1+0x41]
  4070f8:	cwde   
  4070f9:	aam    0x8
  4070fb:	jmp    0xbe144a80
  407100:	push   cs
  407101:	cwde   
  407102:	clc    
  407103:	call   0x44a20b
  407108:	pop    esp
  407109:	repnz add esi,DWORD PTR [esi-0x47f236d7]
  407110:	jmp    0x30407a47
  407115:	add    BYTE PTR [eax+0xc],dh
  407118:	add    BYTE PTR [ecx+ebp*4+0x762583e4],bh
  40711f:	pop    esi
  407120:	add    BYTE PTR [ebx-0xe8a2bce],dl
  407126:	call   0xc000:0x32e9e57c
  40712d:	jne    0x407177
  40712f:	cmp    DWORD PTR [eax-0x2f],edx
  407132:	out    dx,eax
  407133:	into   
  407134:	(bad)  
  407135:	fidiv  WORD PTR [ebp+ecx*2-0x2bdace04]
  40713c:	jne    0x40710b
  40713e:	jp     0x40719d
  407140:	or     cl,dl
  407142:	in     al,dx
  407143:	in     eax,dx
  407144:	add    cl,ch
  407146:	aaa    
  407147:	leave  
  407148:	jne    0x40712f
  40714a:	pop    ebx
  40714b:	pop    ebp
  40714c:	cld    
  40714d:	rcl    edx,0xce
  407150:	jmp    DWORD PTR [esi-0x151436a2]
  407156:	mov    bh,0x4c
  407158:	cld    
  407159:	mov    al,ds:0x34000df7
  40715e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40715f:	in     eax,0x53
  407161:	jb     0x4071ab
  407163:	add    eax,0xe13fd96a
  407168:	jnp    0x4071dd
  40716a:	fcmovbe st,st(2)
  40716c:	push   0xffffffe9
  40716e:	test   BYTE PTR [ecx],cl
  407170:	push   0xffffffea
  407172:	pop    esp
  407173:	or     DWORD PTR [edx-0x16],ebp
  407176:	pop    edx
  407177:	or     DWORD PTR [eax],eax
  407179:	jmp    0x7613237e
  40717e:	loope  0x40714a
  407180:	fucom  st(4)
  407182:	add    al,bl
  407184:	push   es
  407185:	mov    DWORD PTR [ebx],eax
  407187:	cwde   
  407188:	inc    edx
  407189:	pop    esp
  40718a:	push   0xffffffc8
  40718c:	push   ss
  40718d:	call   0x4ddec7
  407192:	mov    ebx,ebx
  407194:	or     ch,BYTE PTR [edx+0x0]
  407197:	ret    0x6a06
  40719a:	add    BYTE PTR [edx+0x27006a0c],dh
  4071a0:	cli    
  4071a1:	out    0x27,eax
  4071a3:	cmp    eax,0x580b000d
  4071a8:	cmp    DWORD PTR [edi],ebp
  4071aa:	mov    ebx,ecx
  4071ac:	shr    BYTE PTR [ecx+0x0],cl
  4071af:	mov    dl,0x6
  4071b1:	push   0x0
  4071b3:	add    cl,BYTE PTR [ecx]
  4071b5:	push   eax
  4071b6:	call   0x4159eb
  4071bb:	ror    DWORD PTR [edx+0x8],1
  4071be:	or     ecx,DWORD PTR [eax+0xbff2439]
  4071c4:	or     eax,ebp
  4071c6:	mov    ebx,0xff00066c
  4071cb:	cmp    ebx,esi
  4071cd:	mov    ah,0xe4
  4071cf:	dec    eax
  4071d0:	push   es
  4071d1:	mov    DWORD PTR [ebx],0xffffaed7
  4071d7:	ret    
  4071d8:	add    bh,bh
  4071da:	xor    esi,DWORD PTR [eax+0xe4a8]
  4071e0:	or     bh,al
  4071e2:	add    edi,edi
  4071e4:	mov    bh,0xae
  4071e6:	jmp    FWORD PTR [ebx]
  4071e8:	fdiv   st,st(4)
  4071ea:	inc    edx
  4071eb:	or     BYTE PTR [edi],dl
  4071ed:	pop    ecx
  4071ee:	rcr    BYTE PTR [ebx-0x2f],0xcb
  4071f2:	or     BYTE PTR [eax],al
  4071f4:	lods   eax,DWORD PTR ds:[esi]
  4071f5:	sub    ah,0x53
  4071f8:	arpl   WORD PTR [ecx],dx
  4071fa:	or     BYTE PTR [ebx+0x74daf731],al
  407200:	ds inc ebx
  407202:	push   esi
  407203:	or     cl,bl
  407205:	in     eax,dx
  407206:	fiadd  WORD PTR [eax]
  407208:	xor    DWORD PTR [ebx],edx
  40720a:	push   esi
  40720b:	add    al,0xc9
  40720d:	xchg   ecx,eax
  40720e:	fild   WORD PTR [eax]
  407210:	xor    DWORD PTR [ebx],esp
  407212:	push   ss
  407213:	call   0x437636
  407218:	or     bl,BYTE PTR [ecx]
  40721a:	lds    eax,FWORD PTR [ecx+esi*1]
  40721d:	xchg   ebp,eax
  40721e:	mov    gs,esp
  407220:	mov    al,0x2b
  407222:	jecxz  0x407213
  407224:	mov    cs,WORD PTR [edx]
  407226:	xor    DWORD PTR [edi-0x4e],edx
  407229:	xchg   esp,eax
  40722a:	inc    esi
  40722b:	dec    eax
  40722c:	lock fild WORD PTR [ebx]
  40722f:	je     0x40724d
  407231:	jecxz  0x407242
  407233:	inc    ebx
  407234:	stc    
  407235:	and    BYTE PTR [eax+ebp*8],al
  407238:	mov    al,0xe8
  40723a:	fcos   
  40723c:	jbe    0x407222
  40723e:	inc    esp
  40723f:	dec    eax
  407240:	lock fild WORD PTR [ebx]
  407243:	add    BYTE PTR [eax],al
  407245:	xor    eax,esp
  407247:	test   BYTE PTR ds:0x4317ee,bh
  40724d:	xor    DWORD PTR [edi+ebp*8],edx
  407250:	(bad)  
  407251:	cld    
  407252:	sub    cl,BYTE PTR [ecx+eax*2+0x31]
  407256:	jp     0x4072bd
  407258:	stc    
  407259:	es jo  0x40721d
  40725c:	add    eax,0x432a76
  407261:	xor    edx,esp
  407263:	add    eax,DWORD PTR [eax]
  407265:	mov    esp,0x6efd45d
  40726a:	push   eax
  40726b:	xor    al,0xe8
  40726d:	int3   
  40726e:	push   edx
  40726f:	fcos   
  407271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407272:	gs call 0x664a6167
  407278:	xor    al,0xd9
  40727a:	stos   BYTE PTR es:[edi],al
  40727b:	pop    ecx
  40727c:	(bad)  
  40727e:	jle    0x40722c
  407280:	xlat   BYTE PTR ds:[ebx]
  407281:	and    DWORD PTR [ecx-0x5e],0xd109704b
  407288:	add    eax,0xec690931
  40728d:	push   ecx
  40728e:	out    0xe9,al
  407290:	add    ebp,DWORD PTR [edx]
  407292:	leave  
  407293:	fidivr WORD PTR [esi+0xa]
  407296:	or     ch,cl
  407298:	add    ebp,DWORD PTR [esi-0x7a]
  40729b:	adc    eax,0xe9d09ee9
  4072a0:	add    esi,DWORD PTR [ecx]
  4072a2:	or     DWORD PTR [esi],esp
  4072a4:	jg     0x40722f
  4072a6:	loopne 0x4072ae
  4072a8:	fld    DWORD PTR [eax]
  4072aa:	xchg   BYTE PTR [eax],al
  4072ac:	jmp    0x83497db4
  4072b1:	add    ecx,DWORD PTR [ebx]
  4072b3:	or     DWORD PTR [ebx-0x1e7943fd],eax
  4072b9:	call   0x877a4324
  4072be:	mov    ah,0xcd
  4072c0:	(bad)  
  4072c1:	fcom   DWORD PTR [esi+0x39]
  4072c4:	into   
  4072c5:	mov    es,WORD PTR [ebp-0x20]
  4072c8:	(bad)  
  4072c9:	fadd   DWORD PTR [esi+0x56]
  4072cc:	mov    ebp,0xe9e617eb
  4072d1:	add    ebp,DWORD PTR [edx]
  4072d3:	leave  
  4072d4:	fidivr WORD PTR [esi+0x42]
  4072d7:	or     ch,cl
  4072d9:	add    ebx,DWORD PTR [ecx+0x31433174]
  4072df:	popa   
  4072e0:	and    cl,BYTE PTR [eax+esi*2+0x9]
  4072e4:	adc    DWORD PTR [ecx+0xd],0xf10c86d0
  4072eb:	jmp    DWORD PTR [edx+edx*8+0x31]
  4072ef:	or     DWORD PTR [eax],eax
  4072f1:	jmp    0x64ce2b9b
  4072f6:	push   es
  4072f7:	loopne 0x4072f8
  4072f9:	data16 and bh,BYTE PTR [ebx]
  4072fc:	call   0x10799b
  407301:	loop   0x4072f5
  407303:	inc    DWORD PTR [ebx+0x93233]
  407309:	jo     0x407352
  40730b:	jmp    0xd940b1ff
  407310:	jge    0x407297
  407312:	inc    ecx
  407313:	leave  
  407314:	iret   
  407315:	call   FWORD PTR [ecx-0x57b7afe6]
  40731b:	xor    dl,al
  40731d:	mov    ch,0x9
  40731f:	mov    edi,ecx
  407321:	inc    DWORD PTR [ecx+0x6900092c]
  407327:	call   0xc003:0x6906fb9e
  40732e:	out    dx,al
  40732f:	(bad)  
  407330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407331:	add    cl,ch
  407333:	xor    cl,BYTE PTR [eax+edi*8-0x6378c618]
  40733a:	jmp    0xde907c71
  40733f:	shl    al,0xef
  407342:	(bad)  
  407343:	jle    0x40737d
  407345:	call   DWORD PTR [ebp+eiz*2+0x55c6ffdf]
  40734c:	adc    ch,dh
  40734e:	mov    esi,0xc1857d66
  407353:	dec    esi
  407354:	iret   
  407355:	call   FWORD PTR [ecx]
  407357:	popf   
  407358:	jle    0x4073a2
  40735a:	sub    BYTE PTR ds:0x1689b5ce,ch
  407360:	iret   
  407361:	inc    DWORD PTR [ecx]
  407363:	xor    ecx,DWORD PTR [ecx]
  407365:	add    BYTE PTR [ecx+0x1d],ch
  407368:	pusha  
  407369:	sti    
  40736a:	add    BYTE PTR [edi+0x4c00bb6],ch
  407370:	jae    0xe6f07433
  407376:	(bad)  
  407377:	(bad)  
  407378:	fnstcw WORD PTR [ebx+edi*1]
  40737b:	push   eax
  40737c:	test   al,0x81
  40737e:	test   esp,edi
  407380:	outs   dx,DWORD PTR ds:[esi]
  407381:	mov    dh,0xff
  407383:	push   eax
  407384:	jo     0x40735a
  407386:	loop   0x407388
  407388:	fcomp  DWORD PTR [edx]
  40738a:	lea    eax,[ebp-0x1994]
  407390:	cwde   
  407391:	mov    bh,0xb5
  407393:	in     al,dx
  407394:	outs   dx,DWORD PTR ds:[esi]
  407395:	mov    dh,0xff
  407397:	call   0x402d0a
  40739c:	jo     0x407355
  40739e:	mov    ch,0xe8
  4073a0:	das    
  4073a1:	mov    dh,0xff
  4073a3:	push   eax
  4073a4:	aas    
  4073a5:	js     0x407393
  4073a7:	out    dx,eax
  4073a8:	aas    
  4073a9:	mov    dh,0xe8
  4073ab:	fild   DWORD PTR [edi+esi*4-0x4da71701]
  4073b2:	(bad)  
  4073b3:	push   DWORD PTR [ebx]
  4073b5:	and    eax,0xe75c858d
  4073ba:	(bad)  
  4073bb:	jmp    FWORD PTR [eax]
  4073bd:	fstp   st(0)
  4073bf:	loop   0x407409
  4073c1:	or     al,BYTE PTR [eax+0x50]
  4073c4:	int    0x88
  4073c6:	cld    
  4073c7:	out    dx,eax
  4073c8:	jg     0x407381
  4073ca:	push   eax
  4073cb:	inc    ebp
  4073cd:	in     eax,0xef
  4073cf:	(bad)  
  4073d0:	jg     0x4073b4
  4073d2:	mov    ah,0xf4
  4073d4:	jg     0x40738d
  4073d6:	call   0xb72774c4
  4073db:	(bad)  
  4073dc:	inc    DWORD PTR [ebp-0x40001016]
  4073e2:	loope  0x4073c2
  4073e4:	div    DWORD PTR [ecx]
  4073e6:	ja     0x4073be
  4073e8:	push   DWORD PTR [ebx+esi*2+0x7906ffe6]
  4073ef:	mov    ?,esi
  4073f1:	dec    BYTE PTR [esi-0x2a]
  4073f4:	jne    0x4073eb
  4073f6:	xchg   esi,ecx
  4073f8:	jecxz  0x40742b
  4073fa:	loopne 0x407465
  4073fc:	add    dh,ah
  4073fe:	ins    BYTE PTR es:[edi],dx
  4073ff:	shr    edi,cl
  407401:	fisubr WORD PTR [esi]
  407403:	jmp    0x407474
  407405:	fnsave [esi]
  407407:	(bad)  
  407408:	push   0x31
  40740a:	aas    
  40740b:	nop
  40740c:	in     al,dx
  40740d:	(bad)  
  40740e:	inc    esi
  40740f:	(bad)  
  407410:	call   0x168868
  407415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407416:	pop    esp
  407417:	fucomip st,st(7)
  407419:	scas   al,BYTE PTR es:[edi]
  40741a:	push   ds
  40741b:	xor    edi,edi
  40741d:	fsub   st(7),st
  40741f:	in     eax,0xff
  407421:	sahf   
  407422:	idiv   DWORD PTR [ecx-0x1d]
  407425:	xor    eax,esp
  407427:	add    al,0x9
  40742a:	stos   DWORD PTR es:[edi],eax
  40742b:	(bad)  
  40742c:	mov    ch,0x81
  40742e:	not    ch
  407430:	dec    DWORD PTR [ecx+0x76ffe67b]
  407436:	push   0xde5ee880
  40743b:	aad    0xff
  40743d:	add    BYTE PTR [edi+esi*4-0x48a1001b],bl
  407444:	outs   dx,BYTE PTR ds:[esi]
  407445:	not    DWORD PTR [esi-0x4a]
  407448:	mov    eax,ds:0x420f943
  40744d:	(bad)  
  40744e:	jl     0x40740b
  407450:	in     eax,0xff
  407452:	ds mov bh,0x49
  407455:	loop   0x407488
  407457:	loopne 0x407461
  407459:	shl    BYTE PTR [ebp+0x198d88b7],0xa
  407460:	xchg   esi,eax
  407461:	aad    0x1e
  407463:	sbb    DWORD PTR [ecx+0x21485489],0x45d83143
  40746d:	aad    0xbc
  40746f:	in     eax,0x96
  407471:	aad    0xfe
  407473:	loope  0x407430
  407475:	loope  0x4074a8
  407477:	or     DWORD PTR [edi+edi*2-0x2b],esp
  40747b:	fsubr  QWORD PTR [esi-0x2b]
  40747e:	or     esp,0xcccee89c
  407484:	pop    esi
  407485:	in     al,dx
  407486:	sbb    ebp,eax
  407488:	jmp    0xd20a2890
  40748d:	dec    eax
  40748e:	(bad)  
  40748f:	xchg   esi,eax
  407490:	push   ebp
  407491:	in     eax,0xbe
  407493:	int3   
  407494:	push   ecx
  407495:	or     esi,eax
  407497:	int3   
  407498:	mov    esi,DWORD PTR ss:[ecx+eiz*8-0x33592ac2]
  4074a0:	pop    esp
  4074a1:	in     al,dx
  4074a2:	add    BYTE PTR [esi+0x5cec1ecc],cl
  4074a8:	aam    0x16
  4074aa:	aad    0xd2
  4074ac:	inc    esp
  4074ad:	mov    eax,ds:0x3ccc3142
  4074b2:	loopne 0x407442
  4074b4:	int3   
  4074b5:	(bad)  
  4074b6:	jmp    0x407443
  4074b8:	jmp    0xf875:0xc93a03e9
  4074bf:	mov    ebx,0x5ee4d17e
  4074c4:	int3   
  4074c5:	jb     0x40749a
  4074c7:	stos   BYTE PTR es:[edi],al
  4074c8:	push   cs
  4074c9:	cs dec esp
  4074cb:	lock or dl,bl
  4074ce:	lahf   
  4074cf:	inc    esi
  4074d0:	xchg   esi,eax
  4074d1:	int    0xe4
  4074d3:	ds int3 
  4074d5:	shl    DWORD PTR [edx-0x16fff6b0],1
  4074db:	add    eax,0xfdbef096
  4074e0:	retf   
  4074e1:	call   0xc8bf0
  4074e6:	sahf   
  4074e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074e8:	fsub   st(7),st
  4074ea:	xchg   esi,eax
  4074eb:	in     eax,0xe0
  4074ed:	pop    eax
  4074ee:	jg     0x4074cd
  4074f0:	retf   
  4074f1:	pop    edi
  4074f2:	daa    
  4074f3:	jmp    0x85f:0xe7255c7
  4074fa:	adc    eax,0xb96effd2
  407500:	mov    eax,0x40921cff
  407505:	inc    ecx
  407506:	jmp    0xff47220b
  40750b:	fdivr  QWORD PTR [edx]
  40750d:	jl     0x407551
  40750f:	in     eax,0xbb
  407511:	cmc    
  407512:	mov    al,ds:0xc90973b1
  407517:	sub    esi,DWORD PTR [esi-0x699dab35]
  40751d:	xchg   esp,eax
  40751f:	xor    DWORD PTR [ebp-0x3c],edx
  407522:	inc    ebp
  407523:	and    DWORD PTR [edx],esi
  407525:	or     DWORD PTR [eax],eax
  407527:	jmp    0xe948c2dd
  40752c:	(bad)  
  40752d:	idiv   dh
  40752f:	xchg   esp,eax
  407530:	cs int3 
  407532:	jne    0x407525
  407534:	or     BYTE PTR [ecx],cl
  407536:	call   0xbce37
  40753b:	pusha  
  40753c:	das    
  40753d:	int    0xeb
  40753f:	out    0xa5,al
  407541:	inc    ebp
  407542:	cld    
  407543:	jmp    0x72407e7a
  407548:	inc    eax
  407549:	stos   BYTE PTR es:[edi],al
  40754a:	dec    eax
  40754b:	sub    BYTE PTR ds:0xf86213e0,dh
  407551:	int3   
  407552:	cmp    eax,DWORD PTR [eax]
  407554:	lmsw   WORD PTR [ebp+0x9]
  407558:	pop    DWORD PTR [ecx-0x8]
  40755b:	add    DWORD PTR [eax],ebx
  40755d:	pop    es
  40755e:	add    bl,ch
  407560:	push   cs
  407561:	dec    esp
  407562:	aas    
  407563:	or     edx,edi
  407565:	xor    cl,ch
  407567:	xor    DWORD PTR ds:0x7500bd,0x10
  40756e:	mov    eax,0x83b0fc75
  407573:	(bad)  
  407574:	push   DWORD PTR [edi+0x17f8454a]
  40757a:	mov    edx,es
  40757c:	or     al,bl
  40757e:	jnp    0x414deec1
  407584:	add    BYTE PTR [ebx+0x378b56cd],al
  40758a:	lods   eax,DWORD PTR ds:[esi]
  40758b:	mul    BYTE PTR ds:[edi-0x4a]
  40758f:	or     edi,edi
  407591:	fnsave [edx+0xda905c7]
  407597:	inc    ecx
  407598:	add    al,cl
  40759a:	push   es
  40759b:	add    BYTE PTR [eax],al
  40759d:	mov    ebx,0xe648b55
  4075a3:	push   esi
  4075a4:	push   0xffffff88
  4075a6:	mov    bh,0x75
  4075a8:	or     BYTE PTR [eax+0x77],al
  4075ab:	stc    
  4075ac:	jmp    DWORD PTR [edi]
  4075ae:	dec    edx
  4075af:	clc    
  4075b0:	call   FWORD PTR [ebp+0x28ebe7ce]
  4075b6:	add    eax,0x4308300
  4075bb:	jbe    0x4075cc
  4075bd:	iret   
  4075be:	xchg   BYTE PTR [edi],bh
  4075c0:	and    bl,ch
  4075c2:	int    0xfb
  4075c4:	(bad)  
  4075c5:	inc    DWORD PTR [ebx]
  4075c7:	mov    ecx,eax
  4075c9:	jnp    0x40756d
  4075cb:	pop    edi
  4075cc:	push   0x413b7d31
  4075d1:	add    BYTE PTR [ecx],dh
  4075d3:	adc    ebx,esp
  4075d5:	push   0x53
  4075d7:	loopne 0x4075dc
  4075d9:	or     esi,DWORD PTR [ecx+0x14]
  4075dc:	or     dh,al
  4075de:	jno    0x4075bc
  4075e0:	add    ebp,DWORD PTR [edx-0x7b]
  4075e3:	inc    esi
  4075e4:	add    al,0x57
  4075e6:	or     DWORD PTR [edx-0x1a],eax
  4075e9:	add    BYTE PTR [ecx],dh
  4075eb:	xlat   BYTE PTR ds:[ebx]
  4075ec:	ret    
  4075ed:	je     0x407623
  4075ef:	call   0x7c9:0xdf1a0003
  4075f6:	xor    ebx,ebp
  4075f8:	fld    TBYTE PTR [eax-0x7cfc1fef]
  4075fe:	jmp    0xef43d0e1
  407603:	loop   0x407608
  407605:	mov    esi,esi
  407607:	shl    DWORD PTR [edx],0xc9
  40760a:	repz jecxz 0x407610
  40760d:	push   ebp
  40760e:	mov    edx,0xc5c48643
  407613:	dec    ax
  407615:	or     al,0x34
  407617:	loopne 0x40760c
  407619:	push   DWORD PTR [esi-0x5b3a2491]
  40761f:	adc    dl,dl
  407621:	mov    esp,ebp
  407623:	sbb    edx,edx
  407625:	jne    0x407654
  407627:	and    ebx,DWORD PTR [eax-0x4]
  40762a:	xchg   esi,eax
  40762b:	je     0x407628
  40762d:	out    0x9a,eax
  40762f:	in     al,dx
  407630:	sar    edi,1
  407632:	xchg   BYTE PTR [ebx+esi*8-0x2],dh
  407636:	add    BYTE PTR [esp+edx*8],al
  407639:	shl    BYTE PTR [ebp+0x75],cl
  40763c:	mul    DWORD PTR [ecx+ecx*1+0x75d2e031]
  407643:	gs pop es
  407645:	mov    dh,ch
  407647:	pop    esi
  407648:	or     dh,ah
  40764a:	mov    ebx,0x36e8fc73
  40764f:	mov    edx,0xde353fdc
  407654:	leave  
  407655:	push   esp
  407656:	cld    
  407657:	push   esi
  407658:	outs   dx,DWORD PTR ds:[esi]
  407659:	leave  
  40765a:	add    al,0x31
  40765c:	jns    0x407650
  40765e:	ret    
  40765f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407660:	adc    BYTE PTR [esi],dl
  407662:	sub    eax,0xfcabd287
  407667:	push   ds
  407668:	xchg   esp,eax
  407669:	and    al,0xfc
  40766b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40766c:	xchg   esp,eax
  40766d:	shl    DWORD PTR [edx+edi*4+0x3e],0xe5
  407672:	sbb    al,0xf1
  407674:	lds    edx,FWORD PTR [eax-0x2f]
  407677:	dec    al
  407679:	xchg   BYTE PTR [ebx+eax*1+0x78],dh
  40767d:	pop    ecx
  40767e:	test   BYTE PTR [esi],ch
  407680:	or     ebp,edi
  407682:	jmp    0x9d1:0x53815c7f
  407689:	jmp    0xe67f0d8a
  40768e:	xor    BYTE PTR [edx+0x67],ch
  407691:	and    dh,al
  407693:	cmp    DWORD PTR [ecx],ecx
  407695:	pusha  
  407696:	or     dh,BYTE PTR [edx+0xdcedcf]
  40769c:	fild   WORD PTR [ecx+0x93103e8]
  4076a2:	xchg   esi,eax
  4076a3:	sub    al,0x7
  4076a5:	shr    BYTE PTR [ebx],cl
  4076a7:	cld    
  4076a8:	sahf   
  4076a9:	xor    BYTE PTR [eax-0x6ef70fc4],bh
  4076af:	and    eax,edi
  4076b1:	dec    ecx
  4076b2:	jmp    0xf091592
  4076b7:	ror    DWORD PTR [ecx],1
  4076b9:	mov    ds:0x313142b2,al
  4076be:	jle    0x4076fd
  4076c0:	lock or BYTE PTR [eax],al
  4076c3:	add    ebp,esp
  4076c5:	(bad)  
  4076c6:	(bad)  
  4076c7:	out    dx,al
  4076c8:	cli    
  4076c9:	pop    ebp
  4076ca:	dec    ebx
  4076cb:	sub    BYTE PTR ds:0xf2304831,ch
  4076d1:	or     al,ch
  4076d3:	push   eax
  4076d4:	pusha  
  4076d5:	enter  0x41ff,0x84
  4076d9:	push   esp
  4076da:	inc    ecx
  4076db:	jmp    0x288bf4ba
  4076e0:	xor    eax,0x1b66ab1
  4076e5:	enter  0x2068,0x5c
  4076e9:	dec    edx
  4076ea:	add    BYTE PTR [ecx],dl
  4076ec:	sub    al,0x52
  4076ee:	inc    ecx
  4076ef:	jmp    0x973fdade
  4076f4:	loope  0x407726
  4076f6:	inc    ecx
  4076f7:	and    dh,BYTE PTR [edx+0x9]
  4076fa:	push   0x4a3aaa
  4076ff:	xchg   ecx,eax
  407700:	add    BYTE PTR [esi],ch
  407702:	enter  0x76ff,0x8a
  407706:	jbe    0x407753
  407708:	sub    BYTE PTR ds:0x73b20131,dh
  40770e:	or     eax,ebp
  407710:	sbb    al,0xe0
  407712:	(bad)  
  407713:	inc    ecx
  407715:	mov    ds:0x5ae94153,eax
  40771a:	sub    BYTE PTR [ebx-0x58],cl
  40771d:	xor    dh,BYTE PTR [ecx-0x387ec1d2]
  407723:	ret    
  407724:	pushf  
  407725:	and    eax,0x9aa48bb5
  40772a:	adc    al,al
  40772c:	popf   
  40772d:	das    
  40772e:	mov    DWORD PTR [eax],edi
  407730:	jmp    0xe9f8891c
  407735:	xor    cl,BYTE PTR [ecx]
  407737:	add    BYTE PTR [eax],ah
  407739:	je     0x407747
  40773b:	add    BYTE PTR [eax],al
  40773d:	arpl   WORD PTR [ebp-0x15],di
  407740:	pop    ss
  407741:	fcom   DWORD PTR [ebx]
  407743:	pop    esp
  407744:	je     0x40779b
  407746:	mov    edi,DWORD PTR [eax]
  407748:	das    
  407749:	in     eax,0x10
  40774b:	mov    edx,0xb4801
  407750:	jmp    0x4077a7
  407752:	xchg   ecx,eax
  407753:	add    BYTE PTR [eax],al
  407755:	pop    eax
  407756:	or     eax,DWORD PTR [eax-0x80]
  407759:	and    BYTE PTR ds:0xcac3e475,cl
  40775f:	leave  
  407760:	ret    0xb14
  407763:	push   ebp
  407764:	mov    eax,DWORD PTR [eax]
  407766:	in     al,dx
  407767:	(bad)  
  407768:	push   ebp
  407769:	push   ebx
  40776a:	xchg   ebx,eax
  40776b:	push   eax
  40776c:	or     al,0x5
  40776e:	or     BYTE PTR [edi],cl
  407770:	add    BYTE PTR [eax],al
  407772:	leave  
  407773:	lods   eax,DWORD PTR ds:[esi]
  407774:	push   eax
  407775:	call   0x4058a5
  40777a:	xchg   ebx,eax
  40777b:	aad    0x8b
  40777d:	fadd   DWORD PTR [ebx+0x1d8b0860]
  407783:	or     ebx,ebp
  407785:	add    dh,BYTE PTR [esp+eax*1+0xb]
  407789:	leave  
  40778a:	in     al,0x11
  40778c:	cmp    BYTE PTR [esi],0xe2
  40778f:	popa   
  407790:	cmc    
  407791:	or     eax,DWORD PTR [ecx]
  407793:	popa   
  407794:	add    ah,BYTE PTR [ecx+edx*4+0x55aac023]
  40779b:	test   BYTE PTR [ebp-0x1a],dh
  40779e:	inc    ebx
  40779f:	retf   0x5e5b
  4077a2:	iret   
  4077a3:	test   edx,eax
  4077a5:	or     BYTE PTR [eax-0x6b46aa05],bl
  4077ab:	or     al,BYTE PTR [eax]
  4077ad:	add    BYTE PTR [eax],bl
  4077af:	sbb    dl,dl
  4077b1:	nop
  4077b2:	imul   esi,DWORD PTR [ebx-0x70],0xffffffac
  4077b6:	xor    DWORD PTR [eax-0x1],eax
  4077b9:	mov    ch,0x71
  4077bb:	inc    eax
  4077bc:	adc    BYTE PTR [ebx],ch
  4077be:	mov    eax,ds:0xb2900545
  4077c3:	repnz or eax,0x1e7bf290
  4077c9:	nop
  4077ca:	add    ah,ah
  4077cc:	lods   eax,DWORD PTR ds:[esi]
  4077cd:	jae    0x407752
  4077cf:	jae    0x4077c0
  4077d1:	jae    0x407816
  4077d3:	or     eax,0x3b7c7420
  4077d8:	sbb    al,0xd
  4077da:	nop
  4077db:	mov    esi,0x320407ac
  4077e0:	mov    al,ds:0x60703c42
  4077e5:	dec    edi
  4077e6:	or     esp,DWORD PTR [ebp+0x1a]
  4077e9:	je     0x40786a
  4077eb:	aaa    
  4077ec:	les    eax,FWORD PTR [eax+edx*4+0x32]
  4077f0:	add    BYTE PTR [edx+0x3c],0x90
  4077f4:	inc    eax
  4077f5:	dec    edi
  4077f6:	or     al,BYTE PTR [ebp+0x1a]
  4077f9:	je     0x40787a
  4077fb:	xor    al,0x84
  4077fd:	inc    esi
  4077fe:	add    esp,ecx
  407800:	(bad)
  407805:	xchg   esp,eax
  407806:	sar    ebx,0xb5
  407809:	jp     0x4077cd
  40780b:	cs push 0x7b29e8c4
  407811:	jae    0x40779e
  407813:	cli    
  407814:	aas    
  407815:	sub    eax,0x7a84f25b
  40781a:	in     al,dx
  40781b:	bound  edi,QWORD PTR [edi+0x35]
  40781e:	cld    
  40781f:	stos   BYTE PTR es:[edi],al
  407820:	test   bl,bh
  407822:	(bad)  
  407823:	mov    edx,0xba8ff384
  407828:	ins    BYTE PTR es:[edi],dx
  407829:	dec    DWORD PTR [edi+0x22e21b62]
  40782f:	add    cl,al
  407831:	or     BYTE PTR [eax+0x1e3a9973],bh
  407837:	into   
  407838:	xchg   BYTE PTR [eax+0x10ffbc6c],bl
  40783e:	inc    ebx
  40783f:	les    ecx,FWORD PTR [ecx+0x53425910]
  407845:	rcr    BYTE PTR [ecx+0x2c],0xc1
  407849:	mov    DWORD PTR [edi],ebp
  40784b:	pop    es
  40784c:	ror    DWORD PTR [ecx+0x45c10700],0xc7
  407853:	je     0x40780f
  407855:	leave  
  407856:	jns    0x407886
  407858:	out    0x61,al
  40785a:	mov    al,ds:0x34092dc2
  40785f:	jns    0x4078a6
  407861:	xchg   DWORD PTR [ebp-0x413ad020],ebp
  407867:	xor    DWORD PTR [edx-0x20],ebx
  40786a:	fs inc edi
  40786c:	sbb    eax,0x699a415a
  407871:	dec    edx
  407872:	jmp    0x31c4bd43
  407877:	inc    ebx
  407878:	xor    DWORD PTR [ecx+0x931ad73],esi
  40787e:	loop   0x407843
  407880:	jl     0x407869
  407882:	test   DWORD PTR [edi+0x41],edx
  407885:	(bad)  
  407886:	hlt    
  407887:	call   FWORD PTR [eax+0x8]
  40788a:	add    eax,DWORD PTR [esi+ebx*8]
  40788d:	ds loope 0x40785c
  407890:	pop    esp
  407891:	lds    edx,FWORD PTR [ecx-0x7b]
  407894:	add    dh,ch
  407896:	or     ecx,ebp
  407898:	clc    
  407899:	xchg   BYTE PTR [esi],bh
  40789b:	call   0x4d7f36e0
  4078a0:	fcom   QWORD PTR [ebx-0x1c]
  4078a3:	jmp    0xef20b2ab
  4078a8:	xchg   BYTE PTR [ecx+ecx*1+0x0],ch
  4078ac:	jmp    0x3ac60ee3
  4078b1:	addr16 (bad) 
  4078b3:	(bad)  
  4078b4:	mov    ecx,0xe9010cea
  4078b9:	xor    dh,BYTE PTR [ecx+0x935374d]
  4078bf:	or     ebp,DWORD PTR [ecx]
  4078c1:	je     0x40784b
  4078c3:	lods   al,BYTE PTR ds:[esi]
  4078c4:	jmp    0xe57d81fb
  4078c9:	xor    ecx,DWORD PTR [ecx]
  4078cb:	add    dh,ah
  4078cd:	mov    ch,0x6a
  4078cf:	add    cl,ch
  4078d1:	xor    ch,BYTE PTR [edi]
  4078d3:	add    BYTE PTR [edi+esi*4-0x48],dh
  4078d7:	(bad)  
  4078d8:	fidiv  WORD PTR [ebp+0x59]
  4078db:	call   0x4a07fb
  4078e0:	pop    esp
  4078e1:	scas   eax,DWORD PTR es:[edi]
  4078e2:	mov    eax,0x58fdc6fe
  4078e7:	call   0x47015
  4078ec:	loop   0x4078e0
  4078ee:	cmp    eax,0x5188411c
  4078f3:	inc    ecx
  4078f4:	jmp    0xa0340788
  4078f9:	add    ch,dh
  4078fb:	ret    
  4078fc:	push   eax
  4078fd:	sub    DWORD PTR [eax-0x45],0x3de58eff
  407904:	or     BYTE PTR [ecx],bl
  407906:	or     eax,0xf57ef6ce
  40790b:	scas   eax,DWORD PTR es:[edi]
  40790c:	pcmpeqd mm0,QWORD PTR [edi+0x1648d11]
  407913:	ret    
  407914:	jmp    DWORD PTR [esi+0x2]
  407917:	mov    cl,0x60
  407919:	push   edi
  40791a:	cmc    
  40791b:	ret    
  40791c:	mov    DWORD PTR [esi+ebx*8-0x3e],ebp
  407920:	dec    DWORD PTR [esi+0x58]
  407923:	or     DWORD PTR [edx+0x0],ebp
  407926:	cwde   
  407927:	popa   
  407928:	add    ch,BYTE PTR [edx-0x68]
  40792b:	popa   
  40792c:	add    ebp,DWORD PTR [eax-0x78]
  40792f:	pop    es
  407930:	add    al,al
  407932:	inc    edi
  407933:	fwait
  407934:	in     al,dx
  407935:	(bad)  
  407936:	push   edi
  407937:	aad    0xe8
  407939:	pop    edi
  40793a:	inc    ebp
  40793b:	or     BYTE PTR [eax],al
  40793d:	mov    ebp,ecx
  40793f:	iret   
  407940:	inc    eax
  407941:	je     0x4078c3
  407943:	aam    0x75
  407945:	adc    BYTE PTR [edi],dh
  407947:	pop    ebx
  407948:	or     al,0xff
  40794a:	(bad)  
  40794c:	call   0x15af48
  407951:	mov    eax,DWORD PTR [eax-0x2b]
  407954:	jne    0x40794e
  407956:	pusha  
  407957:	add    ebp,ebx
  407959:	add    BYTE PTR [eax-0x3e],bl
  40795c:	fidiv  DWORD PTR [ebp+0x0]
  40795f:	push   ebx
  407960:	into   
  407961:	mov    ch,0xec
  407963:	iretw  
  407965:	(bad)  
  407966:	call   0x40ea13
  40796b:	out    0x98,eax
  40796d:	in     al,dx
  40796e:	(bad)  
  40796f:	out    0xce,eax
  407971:	call   0xf53df
  407976:	mov    ebx,ebx
  407978:	repnz enter 0x14c2,0x7
  40797d:	push   ebp
  40797e:	mov    esi,DWORD PTR [esp+ecx*4-0x3159133c]
  407985:	call   DWORD PTR [ebx-0x49]
  407988:	pop    eax
  407989:	or     al,0xff
  40798b:	fnstsw WORD PTR [esi+0x4c10aa67]
  407991:	add    bh,bh
  407993:	popf   
  407994:	(bad)
  407998:	ficomp WORD PTR [edx-0xb]
  40799b:	addr16 into 
  40799d:	or     eax,eax
  40799f:	xor    DWORD PTR [ebx-0x4fce2580],ebp
  4079a5:	add    ebp,DWORD PTR [ebx]
  4079a7:	mov    bh,BYTE PTR ds:0x3a7ef81
  4079ad:	retf   
  4079ae:	push   eax
  4079af:	or     DWORD PTR [esp+eax*1+0x33483100],esi
  4079b6:	fnsave [ecx]
  4079b8:	mov    al,0xfe
  4079ba:	mov    edi,0x892c36
  4079bf:	xor    DWORD PTR [eax+0x30000408],esi
  4079c5:	mov    al,0x3
  4079c7:	movzx  edi,dh
  4079ca:	add    eax,DWORD PTR [eax]
  4079cc:	xor    DWORD PTR ds:0x801fc41,esi
  4079d2:	pop    edi
  4079d3:	jmp    0x85b92d2e
  4079d8:	pop    esi
  4079d9:	stos   BYTE PTR es:[edi],al
  4079da:	retf   0xe1ff
  4079dd:	xlat   BYTE PTR ds:[ebx]
  4079de:	cmp    bh,ch
  4079e0:	ds (bad) 
  4079e3:	mov    edi,0x9b5bb3bc
  4079e8:	jns    0x4079db
  4079ea:	add    ecx,DWORD PTR [ebp-0x362d54]
  4079f0:	push   ds
  4079f1:	and    ah,bl
  4079f3:	mov    DWORD PTR [ebx+esi*2],ebx
  4079f6:	retf   0x84ff
  4079f9:	mov    eax,0x9cdde833
  4079fe:	retf   0xaff
  407a01:	stos   DWORD PTR es:[edi],eax
  407a02:	retf   0x2975
  407a05:	gs sub bh,0xef
  407a09:	mov    cl,dl
  407a0b:	push   eax
  407a0c:	fst    DWORD PTR [edx]
  407a0e:	sar    edi,1
  407a10:	ficomp WORD PTR [edi]
  407a12:	retf   
  407a13:	jne    0x4079ea
  407a15:	pop    ds
  407a16:	fsub   QWORD PTR ds:0xca6608da
  407a1c:	cmp    cl,cl
  407a1e:	aad    0x36
  407a20:	mov    esi,0x9fdb553b
  407a25:	scas   eax,DWORD PTR es:[edi]
  407a26:	dec    esi
  407a27:	retf   0xb800
  407a2a:	dec    ebx
  407a2b:	inc    ecx
  407a2c:	xchg   BYTE PTR [ecx+eax*8],ah
  407a2f:	jmp    0xacd46d83
  407a34:	iret   
  407a35:	add    edx,eax
  407a37:	mov    ah,0xc7
  407a39:	cdq    
  407a3a:	addr16 inc esp
  407a3c:	add    esi,DWORD PTR [ecx]
  407a3e:	mov    WORD PTR [ecx],gs
  407a40:	dec    ebx
  407a41:	inc    ebx
  407a42:	ret    0xcf9c
  407a45:	mov    DWORD PTR [ebx],edi
  407a47:	sub    eax,0x290e3103
  407a4c:	dec    edi
  407a4d:	mulps  xmm7,xmm6
  407a50:	dec    edi
  407a51:	pop    ecx
  407a52:	mov    al,0x4a
  407a54:	aam    0x56
  407a56:	shl    DWORD PTR [edx-0x55],0xe9
  407a5a:	rcr    DWORD PTR [esp+ecx*8-0x1e],0x58
  407a5f:	shl    DWORD PTR [edi-0x36293ec0],1
  407a65:	mov    esp,0xd2bc1bc
  407a6a:	or     ch,cl
  407a6c:	jl     0x407ada
  407a6e:	or     eax,0x91194fbe
  407a73:	jmp    0xaefb0653
  407a78:	leave  
  407a79:	push   cs
  407a7a:	aaa    
  407a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a7c:	fcom   QWORD PTR [eax]
  407a7e:	mov    dl,0x9e
  407a80:	leave  
  407a81:	stos   BYTE PTR es:[edi],al
  407a82:	int3   
  407a83:	xor    bh,BYTE PTR [ebx+0x2ee911f3]
  407a89:	mov    edx,0x7d1ead
  407a8e:	adc    DWORD PTR fs:[edx+0xb487f3],edx
  407a95:	out    dx,eax
  407a96:	push   esp
  407a97:	dec    eax
  407a98:	add    DWORD PTR [ecx+0x30],esp
  407a9b:	dec    eax
  407a9c:	and    BYTE PTR [esi],0x2d
  407a9f:	ss cmc 
  407aa1:	mov    esi,0x168047f9
  407aa6:	or     eax,0x3869ea35
  407aab:	push   cs
  407aac:	je     0x407afa
  407aae:	lods   eax,DWORD PTR ds:[esi]
  407aaf:	add    BYTE PTR [edx],cl
  407ab1:	mov    ch,0x92
  407ab3:	mov    DWORD PTR [edi],edi
  407ab5:	loopne 0x407a9d
  407ab7:	jecxz  0x407a44
  407ab9:	lods   al,BYTE PTR ds:[esi]
  407aba:	mov    bh,BYTE PTR [edi-0x3e950e8b]
  407ac0:	fucomi st,st(1)
  407ac2:	xor    cl,BYTE PTR [eax+edi*8+0x7fe7e0e9]
  407ac9:	lea    edi,[edx]
  407acb:	shl    BYTE PTR [eax],0x7d
  407ace:	push   edi
  407acf:	inc    eax
  407ad0:	jl     0x407a93
  407ad2:	imul   ecx,DWORD PTR [esi],0x3db2e774
  407ad8:	cmp    dh,ch
  407ada:	dec    esp
  407adb:	cmp    al,0x7
  407add:	imul   ebp,esi,0xeff0ff00
  407ae3:	pop    es
  407ae4:	(bad)  
  407ae5:	sub    eax,0xc200c025
  407aea:	xor    al,0xb4
  407aec:	add    dl,dl
  407aee:	ficomp WORD PTR [edi-0x37]
  407af1:	stos   DWORD PTR es:[edi],eax
  407af2:	add    BYTE PTR [esi],bl
  407af4:	rcl    BYTE PTR [edx+eiz*2-0x2],0x8b
  407af9:	(bad)  
  407afa:	lds    eax,FWORD PTR [ebp-0x74]
  407afd:	cmp    eax,0x4a4578
  407b02:	jmp    0xd4c39675
  407b07:	xchg   DWORD PTR [ecx+eax*2-0x17],edx
  407b0b:	xor    dh,BYTE PTR ds:0x75b0009
  407b11:	jge    0x407b5e
  407b13:	or     DWORD PTR ds:0x1cc77500,eax
  407b19:	rcr    BYTE PTR [ebx-0x6f],0xc5
  407b1d:	or     BYTE PTR [eax],al
  407b1f:	and    ebp,DWORD PTR [esi-0x39]
  407b22:	inc    ebp
  407b23:	fs or  al,0x0
  407b26:	add    al,cl
  407b28:	ss inc ebp
  407b2a:	clc    
  407b2b:	call   0x8248f100
  407b30:	or     edi,edi
  407b32:	adc    eax,0x40fcf9
  407b37:	xchg   ebx,eax
  407b38:	retf   
  407b39:	je     0x407b96
  407b3b:	lock loop 0x407b19
  407b3e:	add    BYTE PTR [eax-0x2a722fc4],bl
  407b44:	iret   
  407b45:	push   eax
  407b46:	push   0x68
  407b48:	cmc    
  407b49:	(bad)  
  407b4a:	adc    eax,0x40fcbd
  407b4f:	arpl   bx,cx
  407b51:	je     0x407b7c
  407b53:	pop    ss
  407b54:	jmp    ebx
  407b56:	add    DWORD PTR [eax],eax
  407b58:	dec    eax
  407b59:	or     eax,DWORD PTR [eax]
  407b5b:	inc    ebp
  407b5d:	ror    DWORD PTR [edi+0x75c76045],cl
  407b63:	cld    
  407b64:	iret   
  407b65:	dec    ecx
  407b66:	in     al,dx
  407b67:	sbb    ebp,0xffffffc0
  407b6a:	push   DWORD PTR [ebx+0x11]
  407b6d:	add    BYTE PTR [ebp-0x10],0x1a
  407b71:	or     eax,DWORD PTR [eax]
  407b73:	add    BYTE PTR [ebx],al
  407b75:	mov    edi,0x5d845c6
  407b7a:	add    BYTE PTR [eax],al
  407b7c:	sbb    BYTE PTR [ecx+0x0],ah
  407b7f:	push   0x18
  407b81:	popa   
  407b82:	adc    BYTE PTR [ebp+0x6a50a955],cl
  407b88:	xor    DWORD PTR [eax-0x701a8a3a],esi
  407b8e:	icebp  
  407b8f:	xchg   esp,eax
  407b90:	jp     0x407b83
  407b92:	add    ecx,DWORD PTR [ebx]
  407b94:	icebp  
  407b95:	mov    ah,0x4
  407b97:	inc    ebx
  407b98:	mov    dl,0xb5
  407b9a:	iret   
  407b9b:	add    BYTE PTR [ebp-0x58],al
  407b9e:	(bad)  
  407b9f:	jne    0x407b5e
  407ba1:	pop    eax
  407ba2:	stc    
  407ba3:	fidiv  DWORD PTR [ecx]
  407ba5:	mov    al,0x7a
  407ba7:	ret    
  407ba8:	pop    edx
  407ba9:	jmp    0x7571846f
  407bae:	jp     0x407b9c
  407bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bb1:	jge    0x407bae
  407bb3:	out    0x36,eax
  407bb5:	jmp    0x407bba
  407bb7:	add    cl,dh
  407bb9:	lahf   
  407bba:	fild   DWORD PTR [ecx+0x0]
  407bbd:	sub    edi,0x9d8650c6
  407bc3:	sti    
  407bc4:	dec    edi
  407bc5:	mov    DWORD PTR [edx+ebp*4-0x4387cf00],esi
  407bcc:	ret    0xb035
  407bcf:	xor    BYTE PTR [ebx-0x33fccab],cl
  407bd5:	add    dh,BYTE PTR [ebx]
  407bd7:	dec    ecx
  407bd8:	or     BYTE PTR [ecx],dh
  407bda:	cmp    eax,0x9b712afe
  407bdf:	mov    esp,0x1ab039c2
  407be4:	fcmovne st,st(3)
  407be6:	scas   eax,DWORD PTR es:[edi]
  407be7:	pop    ecx
  407be8:	add    bl,cl
  407bea:	scas   eax,DWORD PTR es:[edi]
  407beb:	pop    ecx
  407bec:	add    BYTE PTR [esi],ch
  407bee:	push   ebp
  407bef:	clc    
  407bf0:	(bad)  
  407bf1:	pushf  
  407bf2:	mov    eax,0xb08b0059
  407bf7:	(bad)  [esi]
  407bf9:	cli    
  407bfa:	scas   eax,DWORD PTR es:[edi]
  407bfb:	add    ecx,DWORD PTR [ebx]
  407bfd:	icebp  
  407bfe:	repz jns 0xc6e58571
  407c05:	test   BYTE PTR [ebp-0x41f9326f],bh
  407c0b:	xchg   esi,eax
  407c0c:	cli    
  407c0d:	scas   al,BYTE PTR es:[edi]
  407c0e:	xor    al,0xc4
  407c10:	jp     0x407c1b
  407c12:	xor    ebp,ecx
  407c14:	pop    ecx
  407c15:	xor    DWORD PTR [esi-0x417d380c],edi
  407c1b:	cld    
  407c1c:	test   edi,0x59e133
  407c22:	xor    DWORD PTR [ebx],esi
  407c24:	jmp    0xea22a804
  407c29:	add    ebp,DWORD PTR [edx]
  407c2b:	leave  
  407c2c:	fdiv   st(3),st
  407c2e:	add    esi,DWORD PTR [ecx-0x4259296f]
  407c34:	adc    ch,BYTE PTR [ebx-0x435d3656]
  407c3a:	jae    0x407c4c
  407c3c:	jmp    0xc3ed3671
  407c41:	mov    BYTE PTR [esi-0x49240ecd],0xbd
  407c48:	push   ds
  407c49:	(bad)  
  407c4a:	push   0x403edca
  407c4f:	xchg   edx,eax
  407c50:	std    
  407c51:	and    esp,0x374fe90c
  407c57:	mov    bh,BYTE PTR [ebx+edi*8+0x56]
  407c5b:	xor    al,0xef
  407c5d:	sbb    dh,BYTE PTR [ecx-0x31]
  407c60:	sub    edi,ebx
  407c62:	inc    esi
  407c63:	das    
  407c64:	jmp    0xde4d412d
  407c69:	dec    edi
  407c6a:	sub    DWORD PTR [ecx+0x931a9af],esi
  407c70:	loop   0x407c35
  407c72:	popf   
  407c73:	sbb    DWORD PTR [eax+0x34bc2d57],ebx
  407c79:	clc    
  407c7a:	pop    ss
  407c7b:	aaa    
  407c7c:	add    cl,ah
  407c7e:	jmp    0x18b0:0xecaeff4c
  407c85:	jb     0x407c87
  407c87:	ds or  eax,0x36d53940
  407c8d:	out    dx,eax
  407c8e:	xchg   esi,eax
  407c8f:	hlt    
  407c90:	pop    ecx
  407c91:	call   DWORD PTR [ecx+ebp*8]
  407c94:	dec    esp
  407c95:	(bad)  
  407c96:	cld    
  407c97:	fisub  DWORD PTR [edi+ebx*4+0x58bcec8e]
  407c9e:	mov    al,ds:0x140011f3
  407ca3:	dec    eax
  407ca4:	lods   eax,DWORD PTR ds:[esi]
  407ca5:	push   esi
  407ca6:	mov    esi,0xf17d8801
  407cab:	xor    dh,BYTE PTR [esi]
  407cad:	or     DWORD PTR [edx],eax
  407caf:	jne    0x407d11
  407cb1:	pop    edi
  407cb2:	scas   eax,DWORD PTR es:[edi]
  407cb3:	jmp    0x407c7c
  407cb5:	or     cl,ch
  407cb7:	sbb    DWORD PTR [esi+0xc],eax
  407cba:	push   0xffffff8d
  407cbc:	or     cl,BYTE PTR [ebx]
  407cbe:	sub    ecx,esp
  407cc0:	adc    DWORD PTR [ebx],ebp
  407cc2:	sub    DWORD PTR [eax+0x5c],ebx
  407cc5:	pop    esi
  407cc6:	xor    BYTE PTR [ebx+0x11],dh
  407cc9:	add    BYTE PTR [edx+0x4e],dh
  407ccc:	or     eax,0x8f6a9c8b
  407cd1:	inc    BYTE PTR [edx]
  407cd3:	clc    
  407cd4:	and    cl,BYTE PTR [ebx+0x30bdb2ef]
  407cda:	jnp    0x407d34
  407cdc:	cmp    al,0xfc
  407cde:	mov    al,0xfd
  407ce0:	add    eax,0xb022fd80
  407ce5:	sub    eax,0x724a7669
  407cea:	in     al,dx
  407ceb:	add    BYTE PTR [edx+0x2d5e46bd],dh
  407cf1:	cmp    al,0xec
  407cf3:	sub    BYTE PTR [ebp+0x3000ac4],ch
  407cf9:	mov    cl,0x7f
  407cfb:	cld    
  407cfc:	imul   edx,DWORD PTR [edi+0xd],0x775dc480
  407d03:	or     BYTE PTR [eax-0x337f9e2c],bl
  407d09:	shr    edx,0x9
  407d0c:	jecxz  0x407cd5
  407d0e:	pop    ebx
  407d0f:	pop    edi
  407d10:	es add dl,0x8
  407d14:	fadd   DWORD PTR [ebx]
  407d16:	xor    BYTE PTR [edx-0x20],dh
  407d19:	add    edi,DWORD PTR [ecx]
  407d1b:	ja     0x407ce9
  407d1d:	adc    esi,DWORD PTR [eax]
  407d1f:	jmp    0x407d1e
  407d21:	add    eax,DWORD PTR [ecx+0x72]
  407d24:	rol    BYTE PTR [ebx],cl
  407d26:	inc    esi
  407d27:	ja     0x407cf7
  407d29:	adc    eax,DWORD PTR [ecx+0x4]
  407d2c:	ret    0x17e0
  407d2f:	cmp    al,0x79
  407d31:	pop    ecx
  407d32:	or     bh,BYTE PTR [esi+ebp*2]
  407d35:	dec    esp
  407d36:	push   es
  407d37:	sub    al,0x69
  407d39:	mov    ebx,0x20a1eb09
  407d3e:	rcr    BYTE PTR [ebx-0x59],0xe5
  407d42:	enter  0x90c2,0x7
  407d46:	shl    al,0x8c
  407d49:	rol    ebx,0xaa
  407d4c:	ret    
  407d4d:	add    BYTE PTR [ebx-0x3fa5ff3a],al
  407d53:	fidiv  DWORD PTR [ebp-0x27]
  407d56:	pop    DWORD PTR [ecx]
  407d58:	add    BYTE PTR [eax+0x7],cl
  407d5b:	pop    ebx
  407d5c:	pop    edi
  407d5d:	mov    dh,0x7e
  407d5f:	ret    0x5808
  407d62:	in     al,dx
  407d63:	push   edx
  407d64:	push   eax
  407d65:	mov    al,ds:0x82a1f5f
  407d6a:	add    eax,0xc24972f8
  407d6f:	(bad)  
  407d70:	mov    ebx,0x3b131
  407d75:	xor    DWORD PTR [ebx-0x4f8fb2be],ecx
  407d7b:	sub    eax,0x42d87e01
  407d80:	std    
  407d81:	push   cs
  407d82:	je     0x407d6b
  407d84:	xlat   BYTE PTR ds:[ebx]
  407d85:	add    eax,0xfeb9c3c0
  407d8a:	arpl   bx,ax
  407d8c:	inc    DWORD PTR [ebx]
  407d8e:	dec    ebx
  407d8f:	cld    
  407d90:	push   es
  407d91:	mov    BYTE PTR fs:[edi-0x3914753d],cl
  407d98:	push   ebp
  407d99:	stos   BYTE PTR es:[edi],al
  407d9a:	xchg   esp,eax
  407d9b:	xchg   esp,eax
  407d9d:	loope  0x407dbe
  407d9f:	push   esp
  407da0:	pop    eax
  407da1:	pop    ecx
  407da2:	sbb    esi,ebp
  407da4:	aas    
  407da5:	xor    DWORD PTR [eax],edi
  407da7:	ss add edx,esi
  407daa:	and    eax,DWORD PTR [edi+0x4477343d]
  407db0:	add    BYTE PTR [ecx],dh
  407db2:	fcom   QWORD PTR ds:0x25640083
  407db8:	dec    edi
  407db9:	inc    ecx
  407dba:	xor    DWORD PTR [eax-0x424df6c9],esi
  407dc0:	mov    WORD PTR [ebx-0x10],cs
  407dc3:	scas   eax,DWORD PTR es:[edi]
  407dc4:	add    esi,DWORD PTR [ebp+0x2c]
  407dc7:	pop    es
  407dc8:	les    ebx,FWORD PTR [ebx+0x68]
  407dcb:	out    dx,eax
  407dcc:	out    dx,al
  407dcd:	fimul  DWORD PTR [ecx+0x3100dc8e]
  407dd3:	and    eax,0x8603fc59
  407dd8:	or     edx,DWORD PTR [eax+0x5e]
  407ddb:	fld    QWORD PTR [eax+0x4b]
  407dde:	lock scas eax,DWORD PTR es:[edi]
  407de0:	push   cs
  407de1:	sar    BYTE PTR [esi],0x2c
  407de4:	xchg   esp,eax
  407de5:	add    BYTE PTR [ecx],dh
  407de7:	mov    al,0xca
  407de9:	inc    ebp
  407dea:	cmp    DWORD PTR [ecx],ecx
  407dec:	jmp    0x6c49aef4
  407df1:	dec    eax
  407df2:	sub    DWORD PTR [ecx+0x43],ebx
  407df5:	add    al,0x9b
  407df7:	or     DWORD PTR [ebx+0x5],eax
  407dfa:	push   ds
  407dfb:	xor    al,0xc5
  407dfd:	ret    0x843c
  407e00:	xor    al,BYTE PTR [ebp+0x31]
  407e03:	push   cs
  407e04:	test   eax,0xf7b19b38
  407e09:	fdiv   QWORD PTR [ecx]
  407e0b:	or     DWORD PTR [edx-0x45],ebp
  407e0e:	jnp    0x407e44
  407e10:	or     DWORD PTR [edi+0x37e9c16c],eax
  407e16:	mov    edi,DWORD PTR [edx-0x36ff43ec]
  407e1c:	lods   al,BYTE PTR ds:[esi]
  407e1d:	xchg   esp,eax
  407e1e:	ret    0x8fd6
  407e21:	and    al,0xb8
  407e23:	mov    esp,0xc6537143
  407e28:	xor    esi,DWORD PTR [ecx-0x3e]
  407e2b:	inc    esp
  407e2c:	mov    ch,0xd3
  407e2e:	add    al,0xb6
  407e30:	xor    ebx,DWORD PTR [ebp-0x3e]
  407e33:	inc    esp
  407e34:	test   BYTE PTR [edx+0x290e3144],ah
  407e3a:	aaa    
  407e3b:	dec    edi
  407e3c:	mov    gs,WORD PTR [edi+esi*4+0x486c18aa]
  407e43:	sbb    DWORD PTR [eax-0x65],0xa2901cc2
  407e4a:	inc    esp
  407e4b:	xor    DWORD PTR [esi],ecx
  407e4d:	sub    DWORD PTR [edi],esi
  407e4f:	sbb    esi,DWORD PTR [ecx]
  407e51:	cwde   
  407e52:	push   eax
  407e53:	lock or BYTE PTR [esi],dl
  407e56:	cmp    BYTE PTR [ecx-0x50],ah
  407e59:	std    
  407e5a:	fidiv  DWORD PTR [ecx]
  407e5c:	or     edx,esi
  407e5e:	ret    
  407e5f:	fadd   QWORD PTR [edi]
  407e61:	stos   BYTE PTR es:[edi],al
  407e62:	ret    0xb8c4
  407e65:	add    BYTE PTR [ecx],al
  407e67:	jmp    eax
  407e69:	add    cl,ch
  407e6b:	jae    0x407ea0
  407e6d:	hlt    
  407e6e:	shr    DWORD PTR [ebx+ebp*4+0x3ef0deff],1
  407e75:	cld    
  407e76:	shr    DWORD PTR [esi-0x2f],0x0
  407e7a:	jmp    0xb09c4b2c
  407e7f:	add    ah,ch
  407e81:	pop    esi
  407e82:	mov    ecx,ebp
  407e84:	mov    dl,0xcd
  407e86:	shl    BYTE PTR [edi+0x1953b8f0],0x5d
  407e8d:	and    DWORD PTR [eax-0x2e],eax
  407e90:	jb     0x407e9b
  407e92:	clc    
  407e93:	sbb    esi,DWORD PTR [edx]
  407e95:	int3   
  407e96:	jmp    FWORD PTR [edx-0x1a]
  407e99:	dec    ecx
  407e9a:	dec    ebx
  407e9b:	sub    BYTE PTR ds:0xade27409,dh
  407ea1:	test   BYTE PTR [edx+esi*1+0x72],0x9
  407ea6:	add    ch,bh
  407ea8:	sbb    al,0x8c
  407eaa:	cmp    eax,0x4a6dec
  407eaf:	jmp    0x1cc380b2
  407eb4:	mov    dl,0x44
  407eb6:	inc    ecx
  407eb7:	jmp    0x245bcee
  407ebc:	jne    0x407f12
  407ebe:	leave  
  407ebf:	sub    al,BYTE PTR [ebx+edx*8+0x43f3d4ff]
  407ec6:	inc    ecx
  407ec7:	jmp    0x2734cd87
  407ecc:	mov    dh,0xc5
  407ece:	(bad)  
  407ecf:	es jo  0x407eb3
  407ed2:	add    cl,ch
  407ed4:	xor    ah,BYTE PTR [ebx]
  407ed6:	add    BYTE PTR [ebx+0x3173a12c],al
  407edc:	xor    eax,0x30008309
  407ee1:	retf   0x840f
  407ee4:	add    BYTE PTR [esi+0xb],ch
  407ee7:	add    BYTE PTR [eax],al
  407ee9:	ror    DWORD PTR [edi-0x36b00138],1
  407eef:	lea    eax,[ebp-0x3584]
  407ef5:	push   0xfec8b5ca
  407efa:	enter  0xe8ff,0x60
  407efe:	aad    0x0
  407f00:	add    BYTE PTR [ebx],ah
  407f02:	int3   
  407f03:	je     0x408ad4
  407f09:	jo     0x407eec
  407f0b:	dec    esp
  407f0c:	inc    ecx
  407f0d:	or     BYTE PTR [edi-0x37310f7b],al
  407f13:	call   DWORD PTR [eax-0x40]
  407f16:	pop    esp
  407f17:	fld    DWORD PTR [eax]
  407f19:	fadd   DWORD PTR [eax+eax*8]
  407f1c:	andps  xmm1,xmm5
  407f1f:	add    BYTE PTR [eax],al
  407f21:	enter  0x85c0,0xc4
  407f25:	dec    esi
  407f26:	leave  
  407f27:	inc    DWORD PTR [eax]
  407f29:	fmul   DWORD PTR [ebx]
  407f2b:	add    BYTE PTR [ebp-0x12fab],cl
  407f31:	dec    edi
  407f32:	pop    esp
  407f33:	push   DWORD PTR [ebp-0x359c]
  407f39:	call   FWORD PTR [esi]
  407f3b:	inc    ebp
  407f3c:	dec    ebx
  407f3d:	leave  
  407f3e:	or     ecx,DWORD PTR [ebx-0x35bb6b]
  407f44:	inc    DWORD PTR [ebx+0x840fcb]
  407f4a:	loopne 0x407f57
  407f4c:	add    BYTE PTR [eax],al
  407f4e:	sbb    DWORD PTR [esi-0xc],0xf
  407f52:	add    eax,0x58000099
  407f57:	enter  0xd4b5,0x31
  407f5b:	and    al,al
  407f5d:	dec    ebx
  407f5f:	mov    eax,ds:0xa231002b
  407f64:	add    eax,0x31e46e8
  407f69:	add    BYTE PTR [edx],bh
  407f6b:	loop   0x407fa3
  407f6d:	jns    0x407f17
  407f6f:	ins    BYTE PTR es:[edi],dx
  407f70:	mov    ebx,0x54adec8d
  407f75:	push   0x1a21a
  407f7a:	es push esi
  407f7c:	mov    esp,0x4b4544ff
  407f81:	inc    ecx
  407f82:	xor    DWORD PTR [ebx+0x776974c3],edi
  407f88:	cmp    esp,edi
  407f8a:	push   es
  407f8b:	(bad)  
  407f8c:	test   BYTE PTR [ebx+0x70],cl
  407f8f:	mov    al,ds:0xa97dc00a
  407f94:	inc    edx
  407f95:	(bad)  
  407f96:	mov    ah,0x60
  407f98:	mov    esi,0x3a0e6ff
  407f9d:	add    BYTE PTR [ecx],dh
  407f9f:	push   ebp
  407fa0:	mov    eax,eax
  407fa2:	xlat   BYTE PTR ds:[ebx]
  407fa3:	(bad)  
  407fa4:	mov    edi,0x3775950
  407fa9:	rdtsc  
  407fab:	mov    BYTE PTR [ebx-0x5fceff28],bl
  407fb1:	or     al,al
  407fb3:	cmp    al,0xb5
  407fb5:	cmp    BYTE PTR [ebp-0x40a98f],0x31
  407fbc:	aam    0xf
  407fbe:	jmp    esp
  407fc0:	loopne 0x407f7f
  407fc2:	call   DWORD PTR [esi-0x640f6c1]
  407fc8:	pusha  
  407fc9:	add    ebp,ebx
  407fcb:	inc    edx
  407fcc:	dec    ebx
  407fcd:	sbb    bh,bh
  407fcf:	add    al,0xe4
  407fd1:	stos   DWORD PTR es:[edi],eax
  407fd2:	lock pop edi
  407fd4:	or     ecx,ebp
  407fd6:	add    ebp,DWORD PTR [esi+0x3c]
  407fd9:	and    DWORD PTR [ecx+ebx*2+0x4a03e9df],ebp
  407fe0:	add    DWORD PTR [esi],ecx
  407fe2:	cmp    DWORD PTR [ecx-0x5f],ebx
  407fe5:	daa    
  407fe6:	(bad)  
  407fe7:	xor    DWORD PTR [ecx],ecx
  407fe9:	ins    BYTE PTR es:[edi],dx
  407fea:	mov    DWORD PTR [ebp-0x49],esi
  407fed:	idiv   BYTE PTR [esi-0x33cb4a1f]
  407ff3:	aaa    
  407ff4:	mov    dh,0xe6
  407ff6:	stos   DWORD PTR es:[edi],eax
  407ff7:	lahf   
  407ff8:	fsubp  st(1),st
  407ffa:	add    ebx,DWORD PTR [eax]
  407ffc:	or     al,0xd6
  407ffe:	mov    esi,0xcb94b61e
  408003:	pop    ss
  408004:	mov    dh,0xc6
  408006:	stos   DWORD PTR es:[edi],eax
  408007:	int    0xde
  408009:	jmp    0x130a3a11
  40800e:	int    0xf2
  408010:	pop    ebx
  408011:	bound  ebp,QWORD PTR [edi-0x6a334e00]
  408017:	push   ebx
  408018:	sbb    BYTE PTR [eax+0x3b],0x57
  40801c:	jg     0x407fa0
  40801e:	sub    al,0x10
  408020:	lods   al,BYTE PTR ds:[esi]
  408021:	sub    BYTE PTR [ecx+0x3],0x31
  408025:	or     DWORD PTR [edi+edx*1-0xc],esi
  408029:	or     cl,ch
  40802b:	add    esi,DWORD PTR [ecx]
  40802d:	adc    BYTE PTR [ecx-0x7e381676],0x5
  408034:	test   al,0x4b
  408036:	push   ebp
  408037:	mov    ch,BYTE PTR [ecx+eax*1]
  40803a:	jmp    0x9282:0x690d6fbc
  408041:	cmc    
  408042:	add    DWORD PTR [ebx+0x3201b1b2],edi
  408048:	aas    
  408049:	or     al,BYTE PTR [edx+0x7b]
  40804c:	icebp  
  40804d:	or     BYTE PTR [eax],al
  40804f:	jmp    0xeb036286
  408054:	mov    edx,0xbd1545b5
  408059:	pop    ebp
  40805a:	cmp    BYTE PTR [ecx+ebp*1-0x47],ch
  40805e:	(bad)  
  40805f:	out    dx,eax
  408060:	xor    eax,0x6f8644ea
  408065:	dec    esi
  408066:	add    al,0x70
  408068:	fcmovnb st,st(3)
  40806a:	out    dx,eax
  40806b:	es in  al,dx
  40806d:	add    dh,bh
  40806f:	adc    eax,0xa7c790b8
  408074:	es aas 
  408076:	push   esp
  408077:	sbb    eax,DWORD PTR [eax]
  408079:	inc    ebp
  40807a:	mov    ah,0x75
  40807c:	int    0xe4
  40807e:	or     BYTE PTR ds:[esi+esi*2-0x47],ah
  408083:	push   eax
  408084:	sar    DWORD PTR [esi],0x9
  408087:	add    cl,ch
  408089:	into   
  40808a:	jb     0x408090
  40808c:	jmp    0x34cb89c3
  408091:	and    eax,0x540fa5b8
  408096:	dec    edi
  408097:	pop    ecx
  408098:	inc    edx
  408099:	(bad)  
  40809a:	ret    0xedc2
  40809d:	xor    bl,BYTE PTR [esi-0x75]
  4080a0:	test   DWORD PTR [eax+0x7c37fccd],esi
  4080a6:	pop    ecx
  4080a7:	push   ebx
  4080a8:	sbb    BYTE PTR [ebx-0x80],ah
  4080ab:	jne    0x40809a
  4080ad:	mov    ecx,0x76620836
  4080b2:	sbb    DWORD PTR [ecx+0x780f124],ecx
  4080b8:	jb     0x4080c6
  4080ba:	or     eax,0x803aae8b
  4080bf:	push   edi
  4080c0:	in     eax,0xa9
  4080c2:	mov    dl,0x33
  4080c4:	push   ebx
  4080c5:	nop
  4080c6:	scas   eax,DWORD PTR es:[edi]
  4080c7:	xor    eax,DWORD PTR [eax]
  4080c9:	repnz add DWORD PTR [edi+eax*1-0x2895d390],0xffffff8b
  4080d2:	push   cs
  4080d3:	rol    eax,0x8f
  4080d6:	or     ebx,eax
  4080d8:	mov    edx,DWORD PTR [ebx]
  4080da:	mov    edx,0x100023f8
  4080df:	mov    edx,0x1ddc8df8
  4080e4:	push   esi
  4080e5:	mov    bh,0xf
  4080e7:	add    edx,DWORD PTR gs:[esi+0x5c]
  4080eb:	mov    edx,0x8bd85b0c
  4080f1:	clc    
  4080f2:	jnp    0x408165
  4080f4:	and    edi,edx
  4080f6:	jnp    0x408169
  4080f8:	lea    ecx,[edi+eiz*1+0x2c2070d1]
  4080ff:	or     cl,BYTE PTR [esi+0x8]
  408102:	leave  
  408103:	(bad)  
  408104:	adc    DWORD PTR [ebx],eax
  408106:	rol    BYTE PTR [eax-0x570fcc06],cl
  40810c:	clc    
  40810d:	xor    esi,eax
  40810f:	sbb    BYTE PTR [edi+ebx*1-0x3e423a0a],0xb
  408117:	push   esi
  408118:	or     al,0xc1
  40811a:	fwait
  40811b:	sbb    eax,0x6f63d903
  408120:	xor    edi,edx
  408122:	jmp    0x408194
  408124:	xor    edi,edx
  408126:	jne    0x4080b4
  408128:	pop    es
  408129:	scas   eax,DWORD PTR es:[edi]
  40812a:	(bad)  
  40812b:	repz hlt 
  40812d:	add    ecx,DWORD PTR [esi]
  40812f:	sbb    eax,0x8cfc0c1
  408134:	ret    
  408135:	mov    eax,DWORD PTR [ebx-0x47]
  408138:	clc    
  408139:	and    edx,DWORD PTR [eax]
  40813b:	mov    ecx,0x1d1c8df8
  408140:	sub    al,dh
  408142:	add    BYTE PTR [ecx],dh
  408144:	and    eax,DWORD PTR [ebx+eax*1-0x1]
  408148:	mov    ebp,0x9f3dc2c2
  40814d:	ror    DWORD PTR [ebx+0x23b8ae89],cl
  408153:	jnp    0x408103
  408155:	mov    eax,0x10d2a58d
  40815a:	inc    esi
  40815b:	and    DWORD PTR [edx+0x0],ebx
  40815e:	dec    esi
  40815f:	dec    ecx
  408160:	loope  0x408123
  408162:	adc    DWORD PTR [edx],esi
  408164:	call   0x1a637bf0
  408169:	loopne 0x408163
  40816b:	add    cl,BYTE PTR [edx]
  40816d:	mov    ds,WORD PTR [esi+eiz*1+0x3c4696a1]
  408174:	sahf   
  408175:	pop    ebp
  408176:	sbb    al,0x70
  408178:	ficom  WORD PTR [ebx+eax*1]
  40817b:	or     BYTE PTR [eax],bh
  40817d:	mov    ebp,0xbf002b33
  408182:	xor    ebx,DWORD PTR [ebx]
  408184:	add    BYTE PTR cs:[edi],0xf9
  408188:	cmp    BYTE PTR [ecx+ebp*2-0x3f1c1dce],al
  40818f:	icebp  
  408190:	stos   DWORD PTR es:[edi],eax
  408191:	push   es
  408192:	ret    
  408193:	stos   BYTE PTR es:[edi],al
  408194:	ja     0x40818d
  408196:	clc    
  408197:	push   edx
  408198:	js     0x408191
  40819a:	clc    
  40819b:	mov    esp,0xdeaf1334
  4081a0:	in     al,dx
  4081a1:	mov    es,WORD PTR [ebx]
  4081a3:	xchg   esp,eax
  4081a5:	(bad)
  4081a9:	lahf   
  4081aa:	ror    DWORD PTR [ebx+0x23be6fc9],cl
  4081b0:	retf   
  4081b1:	outs   dx,DWORD PTR ds:[esi]
  4081b2:	mov    esi,0x74abad8d
  4081b7:	pop    ebx
  4081b8:	mov    dh,0x23
  4081ba:	pop    es
  4081bb:	dec    esi
  4081bc:	pop    ecx
  4081bd:	or     DWORD PTR [eax],ebp
  4081bf:	lds    eax,FWORD PTR [eax+0x6]
  4081c2:	xor    ecx,DWORD PTR [edi-0x18af0965]
  4081c8:	cdq    
  4081c9:	not    BYTE PTR [eax-0x77]
  4081cc:	lods   eax,DWORD PTR ds:[esi]
  4081cd:	adc    al,BYTE PTR [edi-0x15801a2d]
  4081d3:	pop    ecx
  4081d4:	dec    ebp
  4081d5:	enter  0x122a,0x32
  4081d9:	shl    BYTE PTR [edx-0x43],1
  4081dc:	and    ch,BYTE PTR [edi-0x50dd4136]
  4081e2:	ins    BYTE PTR es:[edi],dx
  4081e3:	xor    BYTE PTR [esi],0xe7
  4081e6:	not    DWORD PTR [ebx-0xc58fa36]
  4081ec:	jno    0x4081b7
  4081ee:	out    dx,al
  4081ef:	push   es
  4081f0:	jb     0x408270
  4081f2:	add    dh,bh
  4081f4:	cmp    esi,esp
  4081f6:	lock idiv BYTE PTR [ecx]
  4081f9:	test   BYTE PTR [ebp+0x13],dl
  4081fc:	ret    0x8137
  4081ff:	mov    eax,0xc5155b32
  408204:	repz add al,0xea
  408207:	shr    DWORD PTR [edx+0xbf1ab0],cl
  40820d:	push   edx
  40820e:	scas   eax,DWORD PTR es:[edi]
  40820f:	cli    
  408210:	mov    esi,0x89ee84b4
  408215:	jb     0x408247
  408217:	pop    DWORD PTR [esi]
  408219:	addr16 icebp 
  40821b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40821c:	les    eax,FWORD PTR [eax+0x6]
  40821f:	mov    bl,0x8e
  408221:	jmp    0x408218
  408223:	mov    al,ds:0x90f5d9e6
  408228:	mov    BYTE PTR [ebp-0x7af437ef],dh
  40822e:	aas    
  40822f:	jmp    0x3211:0xaac80559
  408236:	rol    BYTE PTR [eax],1
  408238:	bound  esi,QWORD PTR [ebp-0xb]
  40823b:	cli    
  40823c:	retf   0xf5ec
  40823f:	clc    
  408240:	je     0x408268
  408242:	or     ah,BYTE PTR [edx+0x4]
  408245:	cmp    edi,DWORD PTR [ebx-0x376950fd]
  40824b:	shl    ah,0x37
  40824e:	(bad)  
  40824f:	mov    eax,DWORD PTR [edx+0x7f]
  408252:	mov    ecx,0xae874023
  408257:	lea    ebx,[ebp+0x23]
  40825a:	dec    ecx
  40825b:	mov    bl,0xa9
  40825d:	jb     0x408264
  40825f:	push   esi
  408260:	add    DWORD PTR [esi+eax*8+0x9],ebp
  408264:	jmp    0xe594:0xdaf87d82
  40826b:	cli    
  40826c:	fimul  DWORD PTR [edx+0xf68c83]
  408272:	fisttp QWORD PTR [esi+0x5e]
  408275:	(bad)  
  408276:	aaa    
  408277:	inc    ebx
  408278:	sub    al,0x28
  40827a:	ins    DWORD PTR es:[edi],dx
  40827b:	add    al,BYTE PTR [ebx]
  40827d:	and    edi,DWORD PTR [edi+0xce033b3]
  408283:	mov    ecx,0x8db6e333
  408288:	pop    ds
  408289:	xor    eax,0x77
  40828c:	jmp    0xc40aab7b
  408291:	(bad)  ds:0x4c08bd2
  408297:	mov    ah,0x23
  408299:	mov    bl,0xfc
  40829b:	mov    cl,0x8d
  40829d:	xor    BYTE PTR gs:[esi+0x10],cl
  4082a1:	(bad)  
  4082a2:	add    BYTE PTR ds:0xc9f3f546,cl
  4082a8:	add    eax,0xfb84edea
  4082ad:	fimul  DWORD PTR [edx-0x74ff0714]
  4082b3:	ins    DWORD PTR es:[edi],dx
  4082b4:	lea    edx,[edi+eiz*8-0x35bbebab]
  4082bb:	add    eax,0xc7d92856
  4082c0:	or     DWORD PTR [ebx],eax
  4082c2:	push   0x1233f87e
  4082c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082c8:	cli    
  4082c9:	xor    eax,DWORD PTR [eax]
  4082cb:	mov    BYTE PTR [edi+ecx*1-0x275e94e7],cl
  4082d2:	fwait
  4082d3:	inc    edx
  4082d4:	cmp    al,0xc1
  4082d6:	add    BYTE PTR [ecx+0x3],cl
  4082d9:	add    ecx,edx
  4082db:	adc    ebp,DWORD PTR [edi+0x33]
  4082de:	stc    
  4082df:	cmp    ebp,DWORD PTR [ebp+0x33]
  4082e2:	cli    
  4082e3:	fst    QWORD PTR [eax-0x29ec37e1]
  4082e9:	out    0x3,eax
  4082eb:	sahf   
  4082ec:	sbb    al,0xc1
  4082ee:	ret    
  4082ef:	inc    esp
  4082f0:	add    eax,0xb6318bd9
  4082f5:	cli    
  4082f6:	and    esi,DWORD PTR [edx]
  4082f8:	mov    dh,0xf8
  4082fa:	(bad)  
  4082fb:	les    ecx,FWORD PTR [ecx]
  4082fd:	out    0xcd,al
  4082ff:	cmp    DWORD PTR [edx+eax*1-0x3f33cbba],ebp
  408306:	add    eax,0xfb8bc50b
  40830b:	cmp    ebp,DWORD PTR [ebp+0x23]
  40830e:	stc    
  40830f:	sub    ebp,DWORD PTR [esi-0x73]
  408312:	xchg   esp,eax
  408313:	out    0xd9,eax
  408315:	pop    es
  408316:	aaa    
  408317:	retf   
  408318:	add    al,0x56
  40831a:	cmp    cl,cl
  40831c:	lds    ecx,FWORD PTR [ecx]
  40831e:	add    ecx,eax
  408320:	jl     0x40831a
  408322:	xor    edx,DWORD PTR [edx-0x6fcc055c]
  408328:	xchg   BYTE PTR [edi+ecx*1-0x2af9e0cf],cl
  40832f:	lds    esp,FWORD PTR [edx+0x60f00c49]
  408335:	or     DWORD PTR [ebx],eax
  408337:	jmp    0x408373
  408339:	mov    ebp,0xc2b80033
  40833e:	mov    ebx,0x974cab33
  408343:	pop    ds
  408344:	xchg   esp,eax
  408345:	lods   eax,DWORD PTR ds:[esi]
  408346:	pop    ebp
  408347:	inc    ebp
  408348:	xor    dh,BYTE PTR [eax-0x1d]
  40834b:	shl    BYTE PTR [edx-0x53],0x4
  40834f:	fnstcw WORD PTR [edx+0x52faf458]
  408355:	dec    esp
  408356:	hlt    
  408357:	clc    
  408358:	lods   al,BYTE PTR ds:[esi]
  408359:	and    eax,0x42880500
  40835e:	push   0x3
  408360:	div    DWORD PTR [ebp-0x5cd33f3e]
  408366:	les    ecx,FWORD PTR [ebx+0x23bbd25a]
  40836c:	pop    eax
  40836d:	sar    BYTE PTR [ebp+ecx*4-0x5c44495b],cl
  408374:	push   esi
  408375:	add    eax,0xe1295604
  40837a:	les    ecx,FWORD PTR [ecx]
  40837c:	xor    dl,BYTE PTR [edx]
  40837e:	mov    eax,?
  408380:	bound  edi,QWORD PTR [edx-0x579d051d]
  408386:	mov    DWORD PTR [esi+ebp*1-0x7190fd37],ecx
  40838d:	mov    ds:0x61f01c45,eax
  408392:	push   es
  408393:	add    edi,ebx
  408395:	cmp    edi,DWORD PTR [edx-0x43fc07cd]
  40839b:	xor    edi,ebx
  40839d:	and    eax,0xbb001f98
  4083a2:	or     al,0xea
  4083a4:	mov    WORD PTR [edx],?
  4083a6:	or     DWORD PTR [edi-0xc],eax
  4083a9:	icebp  
  4083aa:	retf   0x2f5
  4083ad:	clc    
  4083ae:	adc    BYTE PTR [eax-0x6e05370d],0x89
  4083b5:	lods   eax,DWORD PTR ds:[esi]
  4083b6:	push   es
  4083b7:	sub    edi,ebp
  4083b9:	mov    eax,0x1d3deaae
  4083be:	enter  0xa9,0x32
  4083c2:	retf   0xbb62
  4083c5:	bound  esi,QWORD PTR [eax-0x6a5343e6]
  4083cb:	test   BYTE PTR [edi+ebx*4-0x18fc91c8],0xe8
  4083d3:	daa    
  4083d4:	ret    0xa3a
  4083d7:	sbb    DWORD PTR [ebx-0xcbe0587],ecx
  4083dd:	js     0x40845b
  4083df:	gs pop es
  4083e1:	adc    ebp,DWORD PTR [eax]
  4083e3:	dec    esp
  4083e4:	sub    DWORD PTR [edx],esi
  4083e6:	aas    
  4083e7:	aad    0xc4
  4083e9:	jo     0x408404
  4083eb:	jmp    0x2bb:0xdab3aac9
  4083f2:	mov    al,0x5c
  4083f4:	cwde   
  4083f5:	es std 
  4083f7:	shl    BYTE PTR [eax-0x460f5c4],0x71
  4083fe:	retf   0x2de
  408401:	or     BYTE PTR [edx+0x2800f2f0],al
  408407:	cli    
  408408:	loope  0x408392
  40840a:	mov    ch,0x5
  40840c:	and    eax,0xea64d7aa
  408411:	cmp    eax,0xffa9c835
  408416:	xor    ecx,edx
  408418:	jb     0x4083d4
  40841a:	inc    edx
  40841b:	mov    al,0xfa
  40841d:	mov    ebx,0xde0094a4
  408422:	pop    ebp
  408423:	mov    esi,0x573222de
  408428:	adc    BYTE PTR [eax-0x46fcfe10],ch
  40842e:	stos   DWORD PTR es:[edi],eax
  40842f:	mov    al,0x33
  408431:	xchg   edx,eax
  408432:	ret    
  408433:	scas   eax,DWORD PTR es:[edi]
  408434:	lea    ebx,[ebp+0x2f]
  408437:	sub    DWORD PTR [ebx+0x42],ecx
  40843a:	mov    WORD PTR [ecx],cs
  40843c:	dec    esi
  40843d:	fucomp st(5)
  40843f:	(bad)  
  408440:	adc    dl,ch
  408442:	js     0x4083c5
  408444:	cli    
  408445:	mov    edx,0x74f8f9ea
  40844a:	(bad)  
  40844b:	or     eax,0x6f1f9d70
  408450:	add    esi,DWORD PTR [edi-0x93c3766]
  408456:	xor    edx,eax
  408458:	mov    eax,DWORD PTR [eax-0x7d]
  40845b:	scas   eax,DWORD PTR es:[edi]
  40845c:	xor    eax,DWORD PTR [edx-0x57]
  40845f:	test   BYTE PTR [edi],al
  408461:	das    
  408462:	and    al,0x92
  408464:	sub    dl,ch
  408466:	and    al,0xf5
  408468:	shr    BYTE PTR [ecx],0x0
  40846b:	pop    esi
  40846c:	or     al,bl
  40846e:	jb     0x40840b
  408470:	stc    
  408471:	clc    
  408472:	fimul  DWORD PTR [edx-0x77096b85]
  408478:	in     eax,0xa0
  40847a:	adc    esi,DWORD PTR [ebx]
  40847c:	pop    ss
  40847d:	shr    DWORD PTR [ebx],0x2b
  408480:	or     dl,al
  408482:	(bad)  
  408483:	jmp    0x8c7e:0xe8bafaf8
  40848a:	neg    BYTE PTR [edi+0x30b5eef9]
  408490:	cmp    ecx,DWORD PTR [eax+ebp*4]
  408493:	repnz sbb DWORD PTR [ebx],eax
  408496:	mov    ds:0x33afb8,eax
  40849b:	lock mov edx,0x16548df8
  4084a1:	add    eax,0x309501d
  4084a6:	pop    esi
  4084a7:	add    al,cl
  4084a9:	ret    
  4084aa:	pop    ss
  4084ab:	retf   
  4084ac:	iret   
  4084ad:	mov    edi,ecx
  4084af:	sti    
  4084b0:	jb     0x4084e5
  4084b2:	sti    
  4084b3:	push   ebp
  4084b4:	mov    DWORD PTR [edi],eax
  4084b6:	cmp    DWORD PTR [eax+0xe03d9d9],ecx
  4084bc:	test   eax,0x9ccc0c0
  4084c1:	ret    
  4084c2:	mov    esp,DWORD PTR [ebx]
  4084c4:	mov    edx,0x842033f8
  4084c9:	xchg   esp,eax
  4084ca:	pop    ss
  4084cb:	in     eax,dx
  4084cc:	(bad)  
  4084cd:	(bad)  
  4084cf:	add    BYTE PTR [ebx+0x5ac1303e],cl
  4084d5:	add    al,BYTE PTR [ebx]
  4084d7:	rcl    BYTE PTR [ebx],1
  4084d9:	ins    DWORD PTR es:[edi],dx
  4084da:	xor    edi,ebx
  4084dc:	jnp    0x408550
  4084de:	lea    ecx,[edi+eax*4-0x785d8390]
  4084e5:	or     DWORD PTR [esi+0x3c],ecx
  4084e8:	sbb    eax,ecx
  4084ea:	adc    BYTE PTR [ebx],al
  4084ec:	and    al,BYTE PTR [edx-0x45efcc06]
  4084f2:	clc    
  4084f3:	(bad)  
  4084f4:	les    edx,FWORD PTR ds:0xc9045665
  4084fa:	add    ebx,DWORD PTR [esi+0x40]
  4084fd:	mov    ebx,0xbfcf4b17
  408503:	jmp    DWORD PTR [edi]
  408505:	jne    0x408506
  408507:	xor    esp,DWORD PTR [edx]
  408509:	add    ebx,edi
  40850b:	xor    edx,DWORD PTR [ecx]
  40850d:	add    DWORD PTR [edi+eax*1-0xbd758b4],0x31
  408515:	lahf   
  408516:	std    
  408517:	shl    cl,0xa3
  40851a:	add    bl,al
  40851c:	mov    esi,0xf6ffb4c2
  408521:	scas   al,BYTE PTR es:[edi]
  408522:	mov    edx,0xb8aee90b
  408527:	lea    edi,[ebp+0xbff8cd2]
  40852d:	fild   WORD PTR [eax]
  40852f:	push   esi
  408530:	xor    eax,0xac161
  408535:	xor    dh,BYTE PTR [edx+0x74]
  408538:	inc    esi
  40853a:	jp     0x4084f0
  40853c:	xor    edi,DWORD PTR [edx-0x46cc464a]
  408542:	sbb    al,0x87
  408544:	(bad)  
  408546:	mov    esi,0xc32ab8f
  40854b:	cld    
  40854c:	shl    BYTE PTR [eax-0x4e],0x0
  408550:	retf   0x4ad6
  408553:	mov    ah,0xff
  408555:	mov    cs,WORD PTR [esi]
  408557:	mov    esp,0xba0e880b
  40855c:	lea    ebx,[ebp-0x5d60055e]
  408562:	in     eax,dx
  408563:	call   FWORD PTR [ebp+0x45]
  408566:	loope  0x408527
  408568:	adc    eax,0xff741932
  40856d:	pop    esi
  40856e:	loop   0x408523
  408570:	xor    ebx,DWORD PTR [ebx-0x4a]
  408573:	mov    eax,0x7f244833
  408578:	pop    es
  408579:	jb     0x4085f3
  40857b:	pop    eax
  40857c:	xor    bl,BYTE PTR gs:[ebx+esi*8-0x40]
  408581:	jno    0x408526
  408583:	add    bl,al
  408585:	out    dx,al
  408586:	mov    bl,0xb3
  408588:	jmp    DWORD PTR [esi]
  40858a:	jo     0x408546
  40858c:	or     ebx,DWORD PTR [ecx]
  40858e:	or     bl,BYTE PTR [edx]
  408590:	scas   eax,DWORD PTR es:[edi]
  408591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408592:	xchg   ebp,eax
  408593:	not    BYTE PTR [ebp+0x765fdfd]
  408599:	add    BYTE PTR [edi-0x3],bl
  40859c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40859d:	(bad)  
  40859e:	sub    eax,DWORD PTR [esi]
  4085a0:	cdq    
  4085a1:	jae    0x408599
  4085a3:	stos   BYTE PTR es:[edi],al
  4085a4:	mov    esi,0xe2ae22b3
  4085a9:	lods   eax,DWORD PTR ds:[esi]
  4085aa:	and    dh,BYTE PTR [ecx+0x2c2e805c]
  4085b0:	popf   
  4085b1:	mov    ds:0xdc2f06d6,eax
  4085b6:	icebp  
  4085b7:	enter  0x6e6,0xfb
  4085bb:	push   0xffffff8e
  4085bd:	mov    bl,0xbe
  4085bf:	stos   BYTE PTR es:[edi],al
  4085c0:	mov    edx,0xbab02aab
  4085c5:	lods   eax,DWORD PTR ds:[esi]
  4085c6:	mov    esp,0x4d4d68d
  4085cb:	test   DWORD PTR [edi+eax*1-0x1],esp
  4085cf:	add    al,0x28
  4085d1:	(bad)  
  4085d2:	cmp    al,0x6
  4085d4:	inc    eax
  4085d5:	jae    0x408565
  4085d7:	stos   BYTE PTR es:[edi],al
  4085d8:	push   esi
  4085d9:	mov    bl,0x42
  4085db:	scas   eax,DWORD PTR es:[edi]
  4085dc:	loop   0x40858c
  4085de:	inc    edx
  4085df:	mov    al,0x74
  4085e1:	mov    BYTE PTR [esi],ch
  4085e3:	cmp    bh,BYTE PTR [edi-0x50fa21a5]
  4085e9:	jecxz  0x40865c
  4085eb:	leave  
  4085ec:	out    0x6,eax
  4085ee:	jb     0x40865a
  4085f0:	es mov bl,0x56
  4085f3:	stos   BYTE PTR es:[edi],al
  4085f4:	fisubr DWORD PTR [edx+edi*1-0x4b51254f]
  4085fb:	xchg   ebp,eax
  4085fc:	mul    BYTE PTR [ebx+0x6dd5700]
  408602:	pop    es
  408603:	fucomip st,st(4)
  408605:	daa    
  408606:	(bad)  
  408607:	cmp    eax,DWORD PTR [esi]
  408609:	add    BYTE PTR [ecx],bl
  40860b:	mov    ds:0xe3eeffaa,al
  408610:	cmc    
  408611:	cli    
  408612:	repnz (bad) 
  408614:	cmc    
  408615:	imul   DWORD PTR [esi+ecx*4-0x6]
  408619:	adc    ebp,DWORD PTR [edx]
  40861b:	sub    al,0x66
  40861d:	add    ebx,DWORD PTR [edi]
  40861f:	sub    eax,0x2ff6c1c8
  408624:	mov    edi,0xa9a3bebf
  408629:	(bad)  
  40862a:	cli    
  40862b:	call   0x9c7b:0x8cfaf8fd
  408632:	push   es
  408633:	dec    esp
  408634:	sbb    BYTE PTR [eax],cl
  408636:	das    
  408637:	ss dec ebx
  408639:	xor    al,0xa8
  40863b:	out    dx,eax
  40863c:	adc    eax,DWORD PTR [ebx]
  40863e:	mov    al,0x43
  408640:	stos   BYTE PTR es:[edi],al
  408641:	inc    DWORD PTR [esi-0xd060a7d]
  408647:	fcomip st,st(5)
  408649:	clc    
  40864a:	fs scas al,BYTE PTR es:[edi]
  40864c:	add    DWORD PTR [edx+0x3b207ef],eax
  408652:	scas   eax,DWORD PTR es:[edi]
  408653:	inc    edx
  408654:	enter  0xe7c0,0x37
  408658:	(bad)  
  408659:	mov    edi,0xffa9c356
  40865e:	sbb    cl,ah
  408660:	std    
  408661:	idiv   edx
  408663:	add    bh,al
  408665:	jnp    0x4085fb
  408667:	(bad)  
  408668:	imul   esi,DWORD PTR [edi+0x532f743a],0xfe74282c
  408672:	add    bh,BYTE PTR [ecx]
  408674:	jecxz  0x40861f
  408676:	call   FWORD PTR [esi]
  408678:	xor    ebp,0xfffffffa
  40867b:	loop   0x408611
  40867d:	cmc    
  40867e:	neg    DWORD PTR [esi+edi*4-0x7]
  408682:	mov    edx,0x2acf1a00
  408687:	add    ebx,esi
  408689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40868a:	rol    cl,0xf
  40868d:	adc    dl,cl
  40868f:	mov    edi,0xffff5b0f
  408694:	cmp    esi,DWORD PTR [ebp+0xb]
  408697:	stc    
  408698:	sub    esi,DWORD PTR [edi-0x73]
  40869b:	pushf  
  40869c:	(bad)  
  40869d:	jnp    0x408672
  40869f:	xchg   bl,dh
  4086a1:	push   cs
  4086a2:	pop    esi
  4086a3:	and    al,0xc9
  4086a5:	into   
  4086a6:	adc    eax,0x7d269103
  4086ab:	or     cl,bl
  4086ad:	adc    DWORD PTR [ecx],eax
  4086af:	pop    edi
  4086b0:	aam    0xb
  4086b2:	dec    edi
  4086b3:	or     cl,cl
  4086b5:	inc    ecx
  4086b6:	or     al,0xff
  4086b8:	sbb    eax,0x18768d59
  4086bd:	or     cl,BYTE PTR [ecx-0xa55df1]
  4086c3:	pop    edx
  4086c4:	adc    DWORD PTR [esi+0x58],edx
  4086c7:	pop    edi
  4086c8:	add    BYTE PTR [esi+0x64],cl
  4086cb:	ret    0x980c
  4086ce:	aas    
  4086cf:	mov    ebp,esp
  4086d1:	or     edx,ecx
  4086d3:	clc    
  4086d4:	push   edi
  4086d5:	(bad)  
  4086d6:	cmp    eax,0xcec45c7
  4086db:	add    BYTE PTR [eax],al
  4086dd:	cwde   
  4086de:	pop    ecx
  4086df:	jne    0x4086ed
  4086e1:	fisttp WORD PTR [edi-0x8]
  4086e4:	mov    DWORD PTR [ebp+0x58418c9c],0x7745230b
  4086ee:	rol    DWORD PTR ds:0x4bfd34,1
  4086f4:	mov    DWORD PTR [ebx],eax
  4086f6:	push   0xb455c7ef
  4086fb:	mov    WORD PTR [ecx+0x31],es
  4086fe:	mov    dl,0xb1
  408700:	fdivr  QWORD PTR [ebx+0x1a]
  408703:	leave  
  408704:	add    eax,0x431cf5
  408709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40870a:	jle    0x408701
  40870c:	pmaxsw mm6,QWORD PTR [ebx+eax*2-0x4c4d8f73]
  408714:	loope  0x408719
  408716:	jae    0x4086b4
  408718:	sbb    al,0xba
  40871a:	in     al,dx
  40871b:	sti    
  40871c:	add    ch,BYTE PTR [esi+edi*4+0x1d]
  408720:	inc    eax
  408721:	mov    esi,ebp
  408723:	jle    0x408766
  408725:	xor    DWORD PTR [edx],eax
  408727:	pushf  
  408728:	inc    eax
  408729:	aam    0x66
  40872b:	mov    al,0x83
  40872d:	add    BYTE PTR [esi+ebx*2+0x43],ch
  408731:	call   0x443923
  408736:	mov    dl,0xfc
  408738:	stos   DWORD PTR es:[edi],eax
  408739:	inc    eax
  40873a:	inc    edx
  40873b:	push   0x32c95d7c
  408740:	les    eax,FWORD PTR [eax-0x56]
  408743:	in     al,dx
  408744:	sti    
  408745:	add    ch,BYTE PTR [esi+ecx*4+0x54]
  408749:	push   0x4234f5
  40874e:	add    DWORD PTR [edx+0x369ee50a],ecx
  408754:	add    bl,BYTE PTR [ebp-0x6b]
  408757:	test   DWORD PTR [ebx+0x370bc44],0xf84ab280
  408761:	jne    0x40877d
  408763:	xor    ebx,DWORD PTR [eax+ecx*1-0x5c7c6403]
  40876a:	mov    ch,0x34
  40876c:	inc    edx
  40876d:	add    BYTE PTR [ecx],dh
  40876f:	jae    0x40879c
  408771:	test   BYTE PTR [ecx+0x2a],0x3
  408775:	add    BYTE PTR [ecx],dh
  408777:	or     DWORD PTR [edx-0x45],esp
  40877a:	dec    esi
  40877b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40877c:	push   ds
  40877d:	pushf  
  40877e:	xor    ebx,DWORD PTR ds:0x249283e3
  408784:	pop    esp
  408785:	inc    edx
  408786:	xor    DWORD PTR [ecx],ecx
  408788:	stos   BYTE PTR es:[edi],al
  408789:	sub    esp,DWORD PTR [edi]
  40878b:	xchg   ebx,eax
  40878c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40878d:	(bad)  
  40878e:	jmp    0x4470a4
  408793:	xor    edx,ebx
  408795:	sbb    bh,BYTE PTR [eax-0x4ee8f0]
  40879b:	clc    
  40879c:	push   0x69
  40879e:	xor    DWORD PTR [eax+0x9],0x947d1960
  4087a5:	sub    BYTE PTR [ecx+ecx*1],al
  4087a8:	inc    edx
  4087a9:	jmp    0xf9a8b8b1
  4087ae:	xor    BYTE PTR [eax+0x9],0x62
  4087b2:	sbb    DWORD PTR ds:0xaa042894,esp
  4087b8:	adc    al,0xe1
  4087ba:	xor    BYTE PTR [eax+0x9],0xee
  4087be:	mov    ebx,0xbce6d336
  4087c3:	xchg   edx,eax
  4087c4:	fstp   DWORD PTR [ebx+0x45]
  4087c7:	xor    DWORD PTR [eax+0x48bdf7dc],edx
  4087cd:	jmp    0x6421bc4e
  4087d2:	inc    ebp
  4087d3:	xor    DWORD PTR [eax-0x53],ebp
  4087d6:	xor    al,0x8
  4087d9:	jb     0x4087f4
  4087db:	icebp  
  4087dc:	xchg   ebx,eax
  4087dd:	test   al,0x3
  4087df:	ss shl esi,1
  4087e2:	mov    ecx,0x455be5d2
  4087e7:	xor    DWORD PTR [eax+0x48bc43dc],edx
  4087ed:	jmp    0xe6c50b
  4087f2:	mov    esp,0x5c303142
  4087f7:	add    ah,ch
  4087f9:	or     al,ch
  4087fb:	fwait
  4087fc:	xchg   esi,eax
  4087fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087fe:	inc    edx
  408800:	hlt    
  408801:	inc    ebp
  408802:	leave  
  408803:	sub    esi,DWORD PTR [ecx]
  408805:	or     DWORD PTR [ebp+0x62],edx
  408808:	xchg   ecx,eax
  408809:	mov    al,ah
  40880b:	add    DWORD PTR [ecx+eiz*4-0x6e280101],ebx
  408812:	add    al,0x24
  408814:	test   eax,0x9be94193
  408819:	std    
  40881a:	int3   
  40881b:	jno    0x4087ce
  40881d:	inc    edi
  40881e:	add    dh,ch
  408820:	retf   0xca15
  408823:	pusha  
  408824:	ss aam 0x84
  408827:	pop    esp
  408828:	ins    DWORD PTR es:[edi],dx
  408829:	or     DWORD PTR [ecx-0x726f0e23],ecx
  40882f:	sub    BYTE PTR ds:0x4d947548,ch
  408835:	leave  
  408836:	jmp    FWORD PTR [esi+0x74049187]
  40883c:	sbb    dl,BYTE PTR [edi-0x2b416bf]
  408842:	mov    WORD PTR ds:0xda00483f,cs
  408848:	cs xchg esp,eax
  40884a:	dec    esp
  40884b:	ja     0x408842
  40884d:	or     BYTE PTR [ebx],dh
  40884f:	aad    0xb1
  408851:	dec    esp
  408852:	mov    gs,WORD PTR [eax]
  408854:	xor    eax,0x7298c1da
  408859:	pop    DWORD PTR [esp+esi*2]
  40885c:	add    BYTE PTR [esi-0x1216be6a],dh
  408862:	sbb    edx,esi
  408864:	bound  esp,QWORD PTR [ecx]
  408866:	(bad)  [eax+ebp*4+0x359232]
  40886d:	ins    BYTE PTR es:[edi],dx
  40886e:	mov    BYTE PTR [ecx+0x0],al
  408871:	jecxz  0x40880b
  408873:	aaa    
  408874:	lea    ecx,[ecx+0x4435ff09]
  40887a:	mov    BYTE PTR [ecx+0x0],al
  40887d:	(bad)  
  40887e:	push   eax
  40887f:	cld    
  408880:	call   FWORD PTR [ebp+0x49]
  408883:	lea    eax,[ecx+0x48]
  408886:	es inc ebp
  408888:	clc    
  408889:	loope  0x408810
  40888b:	(bad)  
  40888c:	push   DWORD PTR [edi]
  40888e:	pop    ds
  40888f:	(bad)  
  408890:	mov    ecx,DWORD PTR [edi+0x5b]
  408893:	shl    BYTE PTR [ebx],cl
  408895:	dec    esi
  408896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408897:	push   esp
  408898:	cld    
  408899:	adc    ecx,ebx
  40889b:	add    eax,DWORD PTR [eax*4+0x18418d81]
  4088a2:	or     al,BYTE PTR [ebp-0x8]
  4088a5:	or     eax,0x42827990
  4088aa:	jbe    0x408921
  4088ac:	cld    
  4088ad:	addr16 dec esp
  4088af:	clc    
  4088b0:	mov    DWORD PTR ds:0x6c6c159,esp
  4088b6:	and    bh,dh
  4088b8:	mov    ebx,DWORD PTR [ebx-0x24fa3c38]
  4088be:	rol    BYTE PTR [ecx+0x75],1
  4088c1:	add    BYTE PTR [eax+esi*1+0x76a7ffec],dl
  4088c8:	mov    eax,esi
  4088ca:	push   ebx
  4088cb:	mov    esi,0x9ab44533
  4088d0:	rol    DWORD PTR [ebx],0x8c
  4088d3:	and    esp,esp
  4088d5:	lea    ecx,[ecx+0xd]
  4088d8:	add    eax,DWORD PTR [ebp+0x20]
  4088db:	or     al,0xa1
  4088dd:	jmp    0x4088d0
  4088df:	add    bh,bh
  4088e1:	jne    0x4088c7
  4088e3:	and    eax,0x2931f845
  4088e8:	das    
  4088e9:	cld    
  4088ea:	jo     0x4088d8
  4088ec:	or     eax,0xb1176f8b
  4088f1:	shl    DWORD PTR [edx-0x53],0x0
  4088f5:	fdiv   st,st(0)
  4088f7:	sar    DWORD PTR fs:[ecx-0x530cbb],cl
  4088fe:	mov    edx,0x455578f3
  408903:	xchg   edi,eax
  408904:	inc    esi
  408905:	cld    
  408906:	adc    ah,bl
  408908:	loopne 0x4088cf
  40890a:	sub    dh,al
  40890c:	add    BYTE PTR [esp+edi*4],al
  40890f:	gs jge 0x408953
  408912:	xor    DWORD PTR [edi-0x1cb07ba],ebp
  408918:	outs   dx,DWORD PTR ds:[esi]
  408919:	sbb    esp,DWORD PTR [esi-0x4103c94e]
  40891f:	hlt    
  408920:	stos   DWORD PTR es:[edi],eax
  408921:	mov    DWORD PTR [esi+eax*8+0x1f00c6c2],eax
  408928:	daa    
  408929:	lods   eax,DWORD PTR ds:[esi]
  40892a:	mov    eax,DWORD PTR [edx]
  40892c:	jno    0x4088ee
  40892e:	add    eax,0x75426a32
  408933:	cli    
  408934:	mov    BYTE PTR [edi+0x785adeff],bl
  40893a:	(bad)  
  40893b:	stos   BYTE PTR es:[edi],al
  40893c:	jp     0x40892e
  40893e:	inc    esp
  40893f:	int    0xbe
  408941:	rol    DWORD PTR [ebx],0x2d
  408944:	xor    eax,0xb2708e87
  408949:	add    BYTE PTR [ebp-0x47],al
  40894c:	lods   al,BYTE PTR ds:[esi]
  40894d:	aad    0xc1
  40894f:	adc    ebx,DWORD PTR [eax-0x54]
  408952:	jne    0x4088f9
  408954:	xor    al,BYTE PTR [esi-0x8]
  408957:	test   al,0x9c
  408959:	scas   eax,DWORD PTR es:[edi]
  40895a:	shr    DWORD PTR [edi-0x2d],0x78
  40895e:	(bad)  
  40895f:	mov    edx,0x72c25a08
  408964:	or     eax,0x1df0cbea
  408969:	cmp    DWORD PTR [edx],eax
  40896b:	adc    al,0xd9
  40896d:	pop    ebx
  40896e:	inc    edx
  40896f:	xor    DWORD PTR [edx],ecx
  408971:	cld    
  408972:	div    DWORD PTR [ebp+0x1c02e949]
  408978:	loope  0x4089dd
  40897a:	inc    edx
  40897b:	xor    DWORD PTR [eax+0xe30afa4],edx
  408981:	in     eax,0x7e
  408983:	lock or BYTE PTR [edx+0x46],dh
  408987:	cmp    DWORD PTR [ecx],ecx
  408989:	in     al,dx
  40898a:	inc    ebx
  40898b:	add    BYTE PTR [ecx+ecx*2+0x3cf2bae9],ah
  408992:	jb     0x408933
  408994:	es sbb eax,0xd2579bf1
  40899a:	jmp    0xeee23ba2
  40899f:	xor    eax,0xfc5ca257
  4089a4:	push   cs
  4089a5:	add    ebp,DWORD PTR [esi-0x56f1cefc]
  4089ab:	xor    DWORD PTR [esi],ebp
  4089ad:	popa   
  4089ae:	into   
  4089af:	stos   DWORD PTR es:[edi],eax
  4089b0:	out    dx,al
  4089b1:	mov    ds:0x49ba17d2,al
  4089b6:	in     eax,dx
  4089b7:	xchg   ebx,eax
  4089b8:	sub    cl,cl
  4089ba:	cmp    al,0x3
  4089bc:	cdq    
  4089bd:	mov    ds:0xaeceabae,al
  4089c2:	in     eax,dx
  4089c3:	jle    0x4089f6
  4089c5:	mov    gs,ecx
  4089c7:	mov    esp,0x50e90df3
  4089cc:	stos   BYTE PTR es:[edi],al
  4089cd:	mov    ch,0x6a
  4089cf:	shl    BYTE PTR [ecx+0x1bceba36],0xb
  4089d6:	adc    eax,DWORD PTR ds:0x8100070b
  4089dc:	mov    edx,0xb7e900d3
  4089e1:	mov    eax,ds:0xae2cdcff
  4089e6:	bound  esi,QWORD PTR [edx+0x6d]
  4089e9:	das    
  4089ea:	adc    BYTE PTR [eax+esi*8-0x68],ah
  4089ee:	push   eax
  4089ef:	inc    ecx
  4089f0:	add    BYTE PTR [eax],dl
  4089f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089f3:	inc    DWORD PTR [esi+0x13]
  4089f6:	retf   0x3945
  4089f9:	aaa    
  4089fa:	or     DWORD PTR [ebx-0x3274bd5c],ecx
  408a00:	(bad)  
  408a01:	int    0x53
  408a03:	repnz push 0x18
  408a06:	adc    eax,0x8e319500
  408a0b:	inc    ebp
  408a0c:	in     eax,0x97
  408a0e:	add    al,BYTE PTR [ebx+0x74a2268c]
  408a14:	repz scas eax,DWORD PTR es:[edi]
  408a16:	and    ecx,DWORD PTR [eax]
  408a18:	jmp    0xcd2b977e
  408a1d:	mov    bh,0x11
  408a1f:	push   DWORD PTR [edx+ecx*1-0x56]
  408a23:	ins    BYTE PTR es:[edi],dx
  408a24:	out    0xdb,al
  408a26:	mov    eax,ds:0x1bcbe183
  408a2b:	add    al,dl
  408a2d:	es nop
  408a2f:	inc    ebp
  408a30:	aad    0x4c
  408a32:	stc    
  408a33:	mov    WORD PTR [ebx*4-0x522eacc8],gs
  408a3a:	rol    BYTE PTR [eax],cl
  408a3c:	jmp    0x35402af0
  408a41:	int    0x36
  408a43:	call   0x4912c5
  408a48:	(bad)  
  408a4a:	(bad)  
  408a4b:	ret    
  408a4c:	xor    dh,BYTE PTR [esi+eax*8+0xc]
  408a50:	jmp    0x12d1856
  408a55:	add    BYTE PTR [ebx+0x36],cl
  408a58:	cmp    DWORD PTR [ebp+0x78],0x5
  408a5c:	jne    0x408a69
  408a5e:	pusha  
  408a5f:	or     eax,0x4e980000
  408a64:	pop    ebx
  408a65:	leave  
  408a66:	pop    edx
  408a67:	call   0xba:0x995d8aff
  408a6e:	mov    BYTE PTR ds:0x6e586a00,al
  408a74:	jne    0x408a86
  408a76:	(bad)  
  408a77:	outs   dx,BYTE PTR ds:[esi]
  408a78:	jne    0x408a82
  408a7a:	add    cl,ch
  408a7c:	int    0x0
  408a7e:	dec    eax
  408a7f:	mov    al,al
  408a81:	jle    0x408ae7
  408a83:	or     bh,al
  408a85:	sub    DWORD PTR [ebp+0x387d82f5],edx
  408a8b:	add    eax,0xce30775
  408a90:	add    BYTE PTR [eax],al
  408a92:	sbb    BYTE PTR [eax+0x1f52eb02],al
  408a98:	ret    
  408a99:	pop    edi
  408a9a:	rcr    DWORD PTR [ebp-0x3e],cl
  408a9d:	or     al,0x8
  408a9f:	cmp    cl,BYTE PTR [ebx-0xb9f6614]
  408aa5:	dec    BYTE PTR [edi]
  408aa7:	jae    0x408aa8
  408aa9:	jne    0x408ab7
  408aab:	and    al,BYTE PTR [ebp-0x8d210c]
  408ab1:	(bad)  
  408ab2:	push   ebp
  408ab3:	ins    DWORD PTR es:[edi],dx
  408ab4:	(bad)  
  408ab5:	(bad)  
  408ab6:	out    dx,eax
  408ab7:	add    eax,0xc8000000
  408abc:	leave  
  408abd:	test   esp,edi
  408abf:	sahf   
  408ac0:	jb     0x408ac1
  408ac2:	add    eax,ebx
  408ac4:	or     al,0x0
  408ac6:	lea    edx,[ebp+0x5]
  408ac9:	(bad)  
  408aca:	call   FWORD PTR [edi+0x31087572]
  408ad0:	daa    
  408ad1:	add    al,0x8d
  408ad3:	mov    ah,0x76
  408ad5:	stos   BYTE PTR es:[edi],al
  408ad6:	jmp    DWORD PTR [esi+0xb001e02]
  408adc:	mov    dl,0x76
  408ade:	test   DWORD PTR [ebp-0x1e0056e8],edx
  408ae4:	or     eax,DWORD PTR [eax+ebp*8]
  408ae7:	xor    al,bl
  408ae9:	add    eax,DWORD PTR [eax]
  408aeb:	mov    dl,0x2a
  408aed:	test   eax,0xc3ab2d74
  408af2:	jne    0x408b29
  408af4:	add    eax,esp
  408af6:	jmp    0x408b24
  408af8:	mov    al,BYTE PTR [ebx]
  408afa:	add    BYTE PTR [ecx],dh
  408afc:	mov    dl,0xba
  408afe:	ret    0xb229
  408b01:	dec    esi
  408b02:	mov    ebx,DWORD PTR [ebp+0x33]
  408b05:	sar    ah,0xe2
  408b08:	mov    edx,0xfedb6acc
  408b0d:	or     BYTE PTR cs:[ecx+0x25],cl
  408b11:	test   eax,0xc3ab2eff
  408b16:	je     0x408b95
  408b18:	jl     0x408b67
  408b1a:	jmp    DWORD PTR [edx+ebx*4+0x16007f9b]
  408b21:	xchg   edi,eax
  408b22:	test   al,0xb
  408b24:	icebp  
  408b25:	adc    al,0x5
  408b27:	jmp    0x408b96
  408b29:	cmp    al,0x4
  408b2b:	push   0x30
  408b2d:	sub    eax,0xb761ff3e
  408b32:	cs or  cl,bl
  408b35:	jnp    0x408aed
  408b37:	add    BYTE PTR [ecx],dh
  408b39:	sub    eax,0x1b217ec3
  408b3e:	ds adc al,0x19
  408b41:	in     eax,dx
  408b42:	test   al,0x75
  408b44:	xor    esp,DWORD PTR [ebx]
  408b46:	add    cl,BYTE PTR [ebx+0x7cf5095c]
  408b4c:	and    esi,DWORD PTR [ebx]
  408b4e:	jmp    0x2ccebb70
  408b53:	test   eax,0xf814a001
  408b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b59:	cmp    bl,cl
  408b5b:	test   al,0x24
  408b5d:	or     eax,0x9f795c91
  408b62:	jbe    0x408b50
  408b64:	cmc    
  408b65:	clc    
  408b66:	cli    
  408b67:	add    eax,0xcc6c049a
  408b6c:	add    eax,0xdac4726d
  408b71:	shr    DWORD PTR [ebx],1
  408b73:	rdtsc  
  408b75:	bound  edx,QWORD PTR ss:[edi-0x54163b50]
  408b7c:	pop    esi
  408b7d:	lahf   
  408b7e:	call   0xa8:0x93327bdc
  408b85:	les    edx,FWORD PTR [eax]
  408b87:	inc    ecx
  408b88:	or     eax,DWORD PTR [esi-0x61]
  408b8b:	es cld 
  408b8d:	jle    0x408ba3
  408b8f:	xchg   BYTE PTR ds:0xfb9c9fdb,bl
  408b95:	push   ss
  408b96:	adc    al,0xe
  408b98:	test   al,0x26
  408b9a:	adc    ebp,DWORD PTR [ecx]
  408b9c:	xor    esi,DWORD PTR cs:[edx-0x66b7d6a]
  408ba3:	call   0x77df9aa3
  408ba8:	add    cl,cl
  408baa:	or     ecx,esi
  408bac:	add    esi,DWORD PTR [ecx]
  408bae:	mov    dl,0xea
  408bb0:	jp     0x408c1e
  408bb2:	stc    
  408bb3:	inc    edx
  408bb4:	add    al,0x81
  408bb6:	mov    WORD PTR [esp+eax*1-0x17],fs
  408bba:	sahf   
  408bbb:	(bad)  
  408bbc:	push   esp
  408bbd:	ficom  WORD PTR [ecx+esi*8]
  408bc0:	fwait
  408bc1:	and    esp,ecx
  408bc3:	add    cl,ch
  408bc5:	xor    al,BYTE PTR [eax+eax*8+0x2cb23330]
  408bcc:	sbb    al,0x32
  408bce:	dec    edx
  408bcf:	jmp    0x408b97
  408bd1:	bound  edx,QWORD PTR [edx-0x4d41aab]
  408bd7:	imul   ebp,ecx,0xe9858c02
  408bdd:	retf   0xff9e
  408be0:	sbb    esi,ecx
  408be2:	adc    al,0xc
  408be4:	jbe    0x408bc9
  408be6:	clc    
  408be7:	push   edi
  408be8:	rol    BYTE PTR [eax],0xf1
  408beb:	clc    
  408bec:	and    ah,0x22
  408bef:	or     DWORD PTR [ebp-0x16],esi
  408bf2:	repz mov cl,0x4
  408bf5:	ins    BYTE PTR es:[edi],dx
  408bf6:	jp     0x408c0d
  408bf8:	cdq    
  408bf9:	bound  esi,QWORD PTR [edx+0x42]
  408bfc:	leave  
  408bfd:	sub    ebx,DWORD PTR [ecx-0x62]
  408c00:	push   esp
  408c01:	jb     0x408bbc
  408c03:	mov    al,ah
  408c05:	xor    esi,edi
  408c07:	fsin   
  408c09:	ret    
  408c0a:	xor    dh,BYTE PTR [esi]
  408c0c:	call   FWORD PTR [edx+edi*1-0x71c93b5a]
  408c13:	sahf   
  408c14:	(bad)  
  408c15:	lods   al,BYTE PTR ds:[esi]
  408c16:	(bad)  
  408c17:	or     BYTE PTR [eax],al
  408c19:	jmp    0xf1961e50
  408c1e:	fwait
  408c1f:	sti    
  408c20:	mov    WORD PTR [edx+ecx*8-0x761295c8],fs
  408c27:	inc    esp
  408c28:	cld    
  408c29:	cdq    
  408c2a:	iret   
  408c2b:	adc    ecx,DWORD PTR [eax]
  408c2d:	out    0x60,al
  408c2f:	or     eax,0x9d496847
  408c34:	or     eax,0x740fe9e3
  408c39:	jecxz  0x408bee
  408c3b:	sbb    edi,eax
  408c3d:	add    al,cl
  408c3f:	fmul   st,st(0)
  408c41:	xor    ecx,DWORD PTR [eax-0x6074fa7e]
  408c47:	mov    al,al
  408c49:	add    esi,DWORD PTR [edi]
  408c4b:	pop    esp
  408c4c:	ret    0x4
  408c4f:	enter  0x8b38,0xec
  408c53:	dec    ebx
  408c54:	pop    esi
  408c55:	hlt    
  408c56:	push   ebx
  408c57:	outs   dx,DWORD PTR ds:[esi]
  408c58:	std    
  408c59:	xchg   edi,eax
  408c5a:	cmp    bl,BYTE PTR [eax-0x281317f7]
  408c60:	dec    WORD PTR [ecx+0x458d714d]
  408c67:	or     al,0x3a
  408c69:	call   0xffa72b97
  408c6e:	xor    esi,ebx
  408c70:	call   FWORD PTR ds:0x1826a
  408c76:	cli    
  408c77:	pop    eax
  408c78:	or     edi,edi
  408c7a:	jne    0x408c78
  408c7c:	data16 jne 0x408c87
  408c7f:	add    BYTE PTR [esi],bl
  408c81:	(bad)  
  408c82:	call   DWORD PTR [edi]
  408c84:	mov    eax,eax
  408c86:	paddusb mm3,QWORD PTR [ecx+0x66580000]
  408c8d:	jne    0x408c83
  408c8f:	and    bh,ah
  408c91:	(bad)  
  408c92:	call   DWORD PTR [edi]
  408c94:	mov    cl,0xff
  408c96:	stc    
  408c97:	sbb    BYTE PTR [ecx],cl
  408c99:	jbe    0x408ca0
  408c9b:	xor    DWORD PTR [ecx+eax*1],eax
  408c9e:	add    BYTE PTR [eax],cl
  408ca0:	fs jne 0x408c97
  408ca3:	inc    eax
  408ca4:	push   edx
  408ca5:	(bad)  
  408ca6:	inc    DWORD PTR [edi]
  408ca8:	sbb    eax,0x634c74c0
  408cad:	jne    0x408ca3
  408caf:	loopne 0x408cd2
  408cb1:	fcos   
  408cb3:	add    bh,dl
  408cb5:	and    dl,BYTE PTR [ebp-0xc]
  408cb8:	xor    DWORD PTR [edi],esp
  408cba:	adc    ch,BYTE PTR [edx+0x31]
  408cbd:	dec    edx
  408cbe:	lock and BYTE PTR [ecx],dh
  408cc1:	mov    dl,0xa4
  408cc3:	jne    0x408c9a
  408cc5:	pop    ebx
  408cc6:	das    
  408cc7:	hlt    
  408cc8:	into   
  408cc9:	add    al,bh
  408ccb:	(bad)  
  408ccc:	ins    BYTE PTR es:[edi],dx
  408ccd:	pop    edx
  408cce:	add    al,0x0
  408cd0:	xor    DWORD PTR [edx-0xe99dbe5],esi
  408cd6:	add    edi,edi
  408cd8:	and    al,0x76
  408cda:	pushf  
  408cdb:	into   
  408cdc:	jp     0x408c90
  408cde:	add    edx,DWORD PTR [ebx+0x2a]
  408ce1:	jb     0x408d13
  408ce3:	ss stos BYTE PTR es:[edi],al
  408ce5:	mov    bl,BYTE PTR [esp]
  408ce8:	(bad)  
  408ce9:	lock add ebp,eax
  408cec:	es push 0x2a320004
  408cf2:	dec    ebp
  408cf3:	inc    edi
  408cf4:	stos   BYTE PTR es:[edi],al
  408cf5:	fld    TBYTE PTR [edx-0x6c]
  408cf8:	inc    eax
  408cf9:	mov    dl,0x3
  408cfb:	mov    al,0x34
  408cfd:	inc    eax
  408cfe:	push   esi
  408cff:	mov    eax,0x3c1c5
  408d04:	or     dh,cl
  408d06:	mov    ebp,0x4cb24e47
  408d0b:	push   ebx
  408d0c:	pop    ecx
  408d0d:	mov    bh,BYTE PTR [ecx+0x3f193100]
  408d13:	clc    
  408d14:	(bad)  
  408d15:	jecxz  0x408d53
  408d17:	inc    DWORD PTR [eax]
  408d19:	cmp    al,0x53
  408d1b:	dec    eax
  408d1c:	push   0x427b5d
  408d21:	push   ds
  408d22:	sbb    eax,0xd6ace8a7
  408d27:	add    eax,DWORD PTR [eax]
  408d29:	bound  esp,QWORD PTR [edi+0x276d74c3]
  408d2f:	lods   al,BYTE PTR ds:[esi]
  408d30:	push   0x43360945
  408d35:	xor    DWORD PTR [ecx+0x931bab7],esi
  408d3b:	jmp    0x98c4:0x62447eab
  408d42:	je     0x408d1c
  408d44:	add    esi,DWORD PTR [ecx]
  408d46:	pop    ecx
  408d47:	in     al,dx
  408d48:	mov    cl,0x9f
  408d4a:	pusha  
  408d4b:	pop    ebp
  408d4c:	adc    dh,BYTE PTR [ecx]
  408d4e:	or     DWORD PTR [edx],eax
  408d50:	ret    
  408d51:	test   DWORD PTR [ebx-0x5a],0x91385e03
  408d58:	pusha  
  408d59:	lahf   
  408d5a:	fwait
  408d5b:	xchg   esi,eax
  408d5c:	js     0x408d5a
  408d5e:	clc    
  408d5f:	loope  0x408d32
  408d61:	and    eax,0x8a017005
  408d66:	add    bl,BYTE PTR [ecx]
  408d68:	pushf  
  408d69:	jg     0x408d25
  408d6b:	jbe    0x408d11
  408d6d:	out    0xc2,al
  408d6f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408d71:	sub    al,0x3c
  408d73:	ret    0xfca4
  408d76:	xchg   esp,eax
  408d77:	push   ecx
  408d78:	fisttp DWORD PTR [ecx+0x80569b]
  408d7e:	in     al,0xa0
  408d80:	jmp    0xad04c3b1
  408d85:	stos   DWORD PTR es:[edi],eax
  408d86:	xor    DWORD PTR [ecx],ecx
  408d88:	mov    DWORD PTR [ebx],eax
  408d8a:	dec    esi
  408d8b:	adc    eax,0x94bca431
  408d90:	cs sub DWORD PTR cs:[ecx-0x64c959f2],esi
  408d98:	push   ds
  408d99:	cs and eax,0x26cd91b2
  408d9f:	fwait
  408da0:	loop   0x408d65
  408da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408da3:	pop    es
  408da4:	adc    cl,BYTE PTR [eax]
  408da6:	sub    cl,cl
  408da8:	jne    0x408db6
  408daa:	mov    edx,0x7efd0034
  408daf:	idiv   esi
  408db1:	je     0x408db9
  408db3:	pushf  
  408db4:	jne    0x408d93
  408db6:	shl    BYTE PTR [edi],cl
  408db8:	xor    al,0x64
  408dba:	cmc    
  408dbb:	and    DWORD PTR ds:0x92c92,eax
  408dc1:	jmp    0x7334c275
  408dc6:	fistp  WORD PTR [ebx+0x3792b575]
  408dcc:	or     BYTE PTR [esi+0x41e89d28],dh
  408dd2:	repz call 0xb05b:0x3aee72ff
  408dda:	ja     0x408de9
  408ddc:	add    BYTE PTR [esi+esi*4],bh
  408ddf:	lods   eax,DWORD PTR ds:[esi]
  408de0:	and    DWORD PTR [ebp+0x53320500],0xffffffd2
  408de7:	xlat   BYTE PTR ds:[ebx]
  408de8:	xor    DWORD PTR [eax],eax
  408dea:	leave  
  408deb:	xor    cl,BYTE PTR [ecx]
  408ded:	call   0xffdb00fc
  408df2:	pusha  
  408df3:	call   0x9329f694
  408df8:	call   0x56ff:0xbb2b51ff
  408dff:	mov    ah,0x44
  408e01:	mov    ah,0xc1
  408e03:	xor    ch,cl
  408e05:	(bad)  
  408e06:	call   0x3f1ede95
  408e0b:	xchg   edx,eax
  408e0c:	nop
  408e0d:	inc    ebp
  408e0e:	jne    0x408db0
  408e10:	sbb    al,0xc0
  408e12:	jo     0x408e65
  408e14:	call   0x53f3:0x5a5fe9ff
  408e1b:	cli    
  408e1c:	inc    ebx
  408e1d:	rcl    ch,0x32
  408e20:	or     DWORD PTR [eax],eax
  408e22:	es push 0xf00ffb5
  408e28:	push   es
  408e29:	add    bh,al
  408e2b:	aad    0x75
  408e2d:	call   FWORD PTR [edi]
  408e2f:	sbb    BYTE PTR [esi],al
  408e31:	push   DWORD PTR [ebp+0xc]
  408e34:	ja     0x408e7b
  408e36:	ror    BYTE PTR [edi],1
  408e38:	add    DWORD PTR [edi+ecx*4+0x458d5915],esi
  408e3f:	cwde   
  408e40:	aad    0x67
  408e42:	add    al,cl
  408e44:	add    eax,0xc8006a80
  408e49:	data16 jne 0x408e54
  408e4c:	loopne 0x408e2c
  408e4e:	leave  
  408e4f:	add    al,bl
  408e51:	or     al,al
  408e53:	je     0x408e2b
  408e55:	cmp    BYTE PTR [ebp-0x30],0xc8
  408e59:	add    BYTE PTR ds:0x5dee9,al
  408e5f:	add    bh,dl
  408e61:	push   eax
  408e62:	mov    al,0xff
  408e64:	pop    DWORD PTR ds:0x35458d00
  408e6a:	push   eax
  408e6b:	inc    DWORD PTR [ebp-0x67ff97c7]
  408e71:	add    eax,0xc5558d80
  408e76:	push   eax
  408e77:	call   0x415996
  408e7c:	arpl   bp,ax
  408e7e:	jne    0x408e85
  408e80:	icebp  
  408e81:	sub    al,0x0
  408e83:	add    BYTE PTR [eax-0x76],cl
  408e86:	inc    ebp
  408e87:	mov    ah,0x6
  408e89:	push   es
  408e8a:	add    BYTE PTR [ebp+0x3cb9c58d],cl
  408e90:	pop    eax
  408e91:	add    eax,0x73083300
  408e96:	stos   BYTE PTR es:[edi],al
  408e97:	mov    DWORD PTR [ebp+0x18003cc5],0x3175ff0d
  408ea1:	ss xchg edx,eax
  408ea3:	inc    ebp
  408ea4:	or     eax,0x16d447f0
  408ea9:	mov    al,0x3
  408eab:	add    BYTE PTR [eax],al
  408ead:	imul   BYTE PTR [ebp-0x6d]
  408eb0:	jmp    DWORD PTR [esi]
  408eb2:	mov    ds:0xe2748d03,al
  408eb7:	xor    ch,BYTE PTR [edx+0x31]
  408eba:	cmp    al,0x4
  408ebc:	jmp    DWORD PTR [esi+esi*2-0x54]
  408ec0:	out    0xf8,al
  408ec2:	mov    ds:0x3ef10b03,al
  408ec7:	or     al,BYTE PTR [ebx+0x75047254]
  408ecd:	xor    edi,DWORD PTR [ebx+0x5e3cff24]
  408ed3:	mov    eax,ds:0xe24a8575
  408ed8:	dec    esi
  408ed9:	jo     0x408e7d
  408edb:	mov    al,ds:0x1b7aed75
  408ee0:	leave  
  408ee1:	xor    DWORD PTR [edx-0x48be3b7c],esp
  408ee7:	pop    eax
  408ee8:	inc    ebp
  408ee9:	jns    0x408edd
  408eeb:	sub    eax,0x9f9d8e00
  408ef0:	call   0xffe1ab8c
  408ef5:	sub    ah,BYTE PTR [edx+0x17]
  408ef8:	add    cl,BYTE PTR [edx-0x56ba750b]
  408efe:	aaa    
  408eff:	pop    ss
  408f00:	mov    esp,0xcb9459
  408f05:	xor    DWORD PTR [edx-0x60],edx
  408f08:	jne    0x408e9f
  408f0a:	dec    edi
  408f0b:	pop    ss
  408f0c:	mov    eax,0xff9c7d59
  408f11:	add    BYTE PTR [esi-0x55],al
  408f14:	ret    
  408f15:	jne    0x408f4a
  408f17:	dec    ebx
  408f18:	hlt    
  408f19:	(bad)  
  408f1a:	mov    esp,0xa4a0f908
  408f1f:	add    eax,0xa0e9171e
  408f24:	fcomp  QWORD PTR [esi-0x439d67e2]
  408f2a:	push   ss
  408f2b:	push   ds
  408f2c:	inc    ecx
  408f2d:	lods   al,BYTE PTR ds:[esi]
  408f2e:	repz shr ecx,0x3
  408f32:	push   es
  408f33:	push   ds
  408f34:	cmp    eax,0xeeb62bac
  408f39:	mov    al,ds:0xaba51df6
  408f3e:	xor    esi,DWORD PTR [esi+0x1de6a0de]
  408f44:	aad    0xab
  408f46:	(bad)  [esi+ecx*8+0x22cbaaa0]
  408f4d:	inc    ecx
  408f4e:	clc    
  408f4f:	retf   0x3ed
  408f52:	pop    esp
  408f53:	test   ch,al
  408f55:	test   ch,dh
  408f57:	xchg   esp,eax
  408f58:	bound  eax,QWORD PTR [esi+0x25]
  408f5b:	add    al,0xa9
  408f5d:	pop    ss
  408f5e:	aaa    
  408f5f:	shr    cl,1
  408f61:	add    esi,DWORD PTR [ecx]
  408f63:	or     ecx,ebp
  408f65:	enter  0x94f4,0xe9
  408f69:	add    esi,DWORD PTR [ecx]
  408f6b:	or     DWORD PTR [esi+eax*2-0x73],esi
  408f6f:	cmp    BYTE PTR [esi+0x16],bh
  408f72:	xor    eax,0xbfc98
  408f77:	mov    DWORD PTR [ecx],esp
  408f79:	outs   dx,DWORD PTR ds:[esi]
  408f7a:	mov    al,ds:0x9fe48b76
  408f7f:	xor    DWORD PTR ds:0x98312df6,ebx
  408f85:	fmul   QWORD PTR [edi]
  408f87:	pop    esi
  408f88:	sbb    eax,0x96ffab4d
  408f8d:	inc    esi
  408f8e:	mov    al,ds:0x9fb497e1
  408f93:	pop    ecx
  408f94:	add    BYTE PTR gs:0x20589791,dl
  408f9b:	ins    BYTE PTR es:[edi],dx
  408f9c:	add    BYTE PTR [eax],al
  408f9e:	mov    esp,0x2583a5bd
  408fa3:	(bad)  
  408fa4:	das    
  408fa5:	(bad)  
  408fa6:	lods   al,BYTE PTR ds:[esi]
  408fa7:	mov    esi,0xe9870008
  408fac:	dec    esp
  408fad:	(bad)  
  408fae:	out    0x32,eax
  408fb0:	and    eax,DWORD PTR [esp+ebp*2]
  408fb3:	outs   dx,DWORD PTR ds:[esi]
  408fb4:	xchg   ebp,eax
  408fb5:	push   eax
  408fb6:	xor    DWORD PTR [edx+0x4ae90009],0x32e9ff96
  408fc0:	xchg   esi,eax
  408fc1:	jne    0x408fb4
  408fc3:	call   0xc2c0:0x32e9c94f
  408fca:	in     eax,0x32
  408fcc:	cmp    al,0x8b
  408fce:	aad    0xb2
  408fd0:	int    0xac
  408fd2:	push   ss
  408fd3:	add    cl,dh
  408fd5:	inc    ebp
  408fd6:	test   DWORD PTR ds:0xe90009,esi
  408fdc:	jecxz  0x408f91
  408fde:	push   0xff96a2e9
  408fe3:	xchg   ecx,eax
  408fe4:	aas    
  408fe5:	mov    ch,0xff
  408fe7:	xchg   esi,eax
  408fe8:	lods   al,BYTE PTR ds:[esi]
  408fe9:	dec    esp
  408fea:	rol    BYTE PTR [ecx],0x2d
  408fed:	stc    
  408fee:	(bad)  
  408fef:	call   0x7f1cb0ce
  408ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ff5:	add    BYTE PTR [ebp+0x31],0x4d
  408ff9:	or     DWORD PTR [eax],edx
  408ffb:	jmp    0x459d3132
  409000:	into   
  409001:	xchg   esi,eax
  409002:	mov    DWORD PTR [esi+eax*1-0x3d2827c],esp
  409009:	aam    0xff
  40900b:	call   0x1006a42
  409010:	or     esp,DWORD PTR [ebx]
  409012:	mov    DWORD PTR [ebp+0xc],0x48ffffa9
  409019:	ja     0x409090
  40901b:	rcl    bh,0x3f
  40901e:	aam    0xff
  409020:	int    0x31
  409022:	pop    DWORD PTR [ebp+0x48]
  409025:	into   
  409026:	inc    ebp
  409027:	fadd   DWORD PTR [edi+0x6]
  40902a:	add    BYTE PTR [eax],al
  40902c:	dec    edi
  40902d:	inc    eax
  40902e:	hlt    
  40902f:	inc    DWORD PTR [edi]
  409031:	or     al,BYTE PTR [eax]
  409033:	(bad)  
  409034:	int    0xcd
  409036:	push   eax
  409037:	push   0x80000a08
  40903c:	mov    dl,0x9
  40903e:	push   DWORD PTR [ebp+0x0]
  409041:	loopne 0x4090a4
  409043:	push   0xffffffc8
  409045:	fmul   DWORD PTR [ecx]
  409047:	or     eax,eax
  409049:	jl     0x40905a
  40904b:	cmp    DWORD PTR [ebp-0x64],0x9
  40904f:	jne    0x409056
  409051:	loope  0x4090bb
  409053:	add    BYTE PTR [eax],al
  409055:	fmul   st,st(6)
  409057:	inc    ebp
  409058:	mov    al,0x87
  40905a:	push   es
  40905b:	add    BYTE PTR [eax],al
  40905d:	push   ebp
  40905e:	inc    ecx
  40905f:	mov    al,0x50
  409061:	xlat   BYTE PTR ds:[ebx]
  409062:	lock mov ebx,0x99868
  409068:	adc    BYTE PTR ds:0xb050c441,0x40
  40906f:	enter  0x9800,0x2
  409073:	shl    BYTE PTR [ebp-0x73],0x64
  409077:	fadd   DWORD PTR [eax]
  409079:	mov    BYTE PTR [ecx],cl
  40907b:	mov    eax,DWORD PTR [ebp+0x40]
  40907e:	int3   
  40907f:	add    BYTE PTR [eax],al
  409081:	in     eax,0xe8
  409083:	ret    
  409084:	mov    ecx,0xd44
  409089:	xor    ebx,esi
  40908b:	ret    
  40908c:	repz mov ebp,esi
  40908f:	inc    edi
  409090:	les    ecx,FWORD PTR ds:0x460003a0
  409096:	pop    esp
  409097:	pop    ebx
  409098:	(bad)  
  409099:	hlt    
  40909a:	iret   
  40909b:	lds    eax,FWORD PTR [ebp+0x59]
  40909e:	out    0xd,al
  4090a0:	add    BYTE PTR [ecx],dh
  4090a2:	jecxz  0x4090eb
  4090a4:	hlt    
  4090a5:	add    BYTE PTR [esi],ah
  4090a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090a8:	add    eax,DWORD PTR [eax]
  4090aa:	lods   al,BYTE PTR ds:[esi]
  4090ab:	gs (bad) 
  4090ad:	push   eax
  4090ae:	mov    esp,DWORD PTR [edx+0x160e0029]
  4090b4:	pop    edi
  4090b5:	call   0x437cc2
  4090ba:	sub    ah,dl
  4090bc:	push   ss
  4090bd:	push   es
  4090be:	mov    dl,0x25
  4090c0:	mov    bh,0x0
  4090c2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4090c4:	stos   BYTE PTR es:[edi],al
  4090c5:	mov    WORD PTR [ecx],?
  4090c7:	mov    ds:0x9264ff03,al
  4090cc:	pushf  
  4090cd:	jne    0x4090c0
  4090cf:	ret    
  4090d0:	pop    ss
  4090d1:	mov    eax,0x414d9259
  4090d6:	xor    DWORD PTR [ebx+0x17],edx
  4090d9:	mov    esp,0xc524c9
  4090de:	xor    DWORD PTR [edi],ebx
  4090e0:	enter  0x3e14,0x33
  4090e4:	inc    edi
  4090e5:	fadd   QWORD PTR [ecx]
  4090e7:	clc    
  4090e8:	add    edi,edi
  4090ea:	and    al,0x62
  4090ec:	lods   al,BYTE PTR ds:[esi]
  4090ed:	sti    
  4090ee:	cdq    
  4090ef:	sbb    DWORD PTR [ebp+0x195710b],0xffffffeb
  4090f6:	out    0x18,eax
  4090f8:	inc    edi
  4090f9:	mov    ah,0x7e
  4090fb:	xchg   ebp,eax
  4090fc:	push   edi
  4090fd:	call   0xffddb5d2
  409102:	outs   dx,BYTE PTR ds:[esi]
  409103:	or     esp,ebx
  409105:	pop    edi
  409106:	pop    ecx
  409107:	cld    
  409108:	es add al,0x0
  40910b:	xor    DWORD PTR [ecx],edi
  40910d:	push   esi
  40910e:	pop    ss
  40910f:	xchg   ebp,eax
  409110:	xchg   esp,eax
  409111:	aam    0x57
  409113:	pop    ecx
  409114:	das    
  409115:	inc    eax
  409116:	popf   
  409117:	inc    esi
  409118:	add    BYTE PTR [ecx],ch
  40911a:	pop    ss
  40911b:	xor    esp,DWORD PTR [eax-0x74b7f08]
  409121:	call   0x9cd4d63d
  409126:	repz daa 
  409128:	push   ds
  409129:	in     eax,dx
  40912a:	pushf  
  40912b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40912c:	pop    ebp
  40912d:	add    DWORD PTR [eax+ebx*1-0x6c],eax
  409131:	push   cs
  409132:	or     ecx,esi
  409134:	sbb    eax,0x801ea8eb
  409139:	and    DWORD PTR [ecx],ecx
  40913b:	ficomp DWORD PTR [eax+ebx*8]
  40913e:	mov    gs,WORD PTR [ebp+eiz*2-0x67]
  409142:	pushf  
  409143:	fs std 
  409145:	in     eax,0x16
  409147:	popf   
  409148:	mov    al,ds:0x93de9900
  40914d:	bound  edi,QWORD PTR [ebx-0x546ae22a]
  409153:	xchg   edi,eax
  409154:	retf   
  409155:	jmp    0xa95e575d
  40915a:	stos   DWORD PTR es:[edi],eax
  40915b:	iret   
  40915c:	scas   al,BYTE PTR es:[edi]
  40915d:	mov    dh,0x9c
  40915f:	mov    dh,0x1d
  409161:	ins    DWORD PTR es:[edi],dx
  409162:	stos   DWORD PTR es:[edi],eax
  409163:	xchg   edi,eax
  409164:	scas   al,BYTE PTR es:[edi]
  409165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409166:	pushf  
  409167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409168:	sbb    eax,0xae7fab61
  40916d:	xchg   esi,eax
  40916e:	pushf  
  40916f:	add    BYTE PTR [edx+0x5033d15],dh
  409175:	add    DWORD PTR [esi-0x665f2aea],eax
  40917b:	mov    ecx,0x6200937e
  409180:	jno    0x4091b1
  409182:	pop    edi
  409183:	mov    al,ds:0xbbfff870
  409188:	mov    ecx,0xba2583a4
  40918d:	aaa    
  40918e:	sub    esi,DWORD PTR [edx]
  409190:	mov    cl,0x15
  409192:	or     al,0xe9
  409194:	es inc ebx
  409196:	add    esp,0x42
  409199:	xchg   ebx,eax
  40919a:	jae    0x40914d
  40919c:	scas   eax,DWORD PTR es:[edi]
  40919d:	dec    ebp
  40919e:	cld    
  40919f:	cdq    
  4091a0:	xchg   ebp,eax
  4091a1:	sbb    eax,0xcb91410c
  4091a6:	add    cl,ch
  4091a8:	scas   eax,DWORD PTR es:[edi]
  4091a9:	leave  
  4091aa:	js     0x409185
  4091ac:	mov    ebp,0x3d010c1c
  4091b1:	mov    bh,0xff
  4091b3:	push   cs
  4091b4:	mov    ebx,0x1f06f84c
  4091b9:	xchg   ebp,eax
  4091ba:	call   0x4a894c
  4091bf:	loop   0x4091b3
  4091c1:	sbb    eax,0xf944ee19
  4091c6:	(bad)  
  4091c7:	pop    esp
  4091c8:	lds    edi,FWORD PTR [ecx]
  4091ca:	call   DWORD PTR [ebp+ebp*1-0x5f]
  4091ce:	add    edx,edi
  4091d0:	mov    edx,0xb18b92
  4091d5:	stos   BYTE PTR es:[edi],al
  4091d6:	sbb    al,0xfc
  4091d8:	rol    DWORD PTR [eax],1
  4091da:	int3   
  4091db:	add    cl,ch
  4091dd:	fwait
  4091de:	sbb    al,0xc
  4091e0:	rol    DWORD PTR [eax],0xbd
  4091e3:	jmp    FWORD PTR [esi-0x4fa43942]
  4091e9:	outs   dx,DWORD PTR ds:[esi]
  4091ea:	add    eax,0xa5ae3400
  4091ef:	sub    DWORD PTR [ebp-0x71006cc3],0x728cb8
  4091f9:	scas   al,BYTE PTR es:[edi]
  4091fa:	outs   dx,BYTE PTR ds:[esi]
  4091fb:	call   DWORD PTR [eax+0x20]
  4091fe:	or     al,0x1
  409200:	add    BYTE PTR [eax+0x58c7185e],cl
  409206:	push   es
  409207:	leave  
  409208:	ret    
  409209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40920a:	sub    esp,0xffffff83
  40920d:	jge    0x40920d
  40920f:	push   DWORD PTR [ebx+0x5f]
  409212:	mov    edi,DWORD PTR [ebp+0x10]
  409215:	pop    eax
  409216:	add    bl,BYTE PTR [ecx]
  409218:	inc    DWORD PTR [ebp+0x4075fea2]
  40921e:	pop    esi
  40921f:	(bad)  
  409221:	jmp    FWORD PTR [ebp-0x1]
  409224:	jne    0x40922e
  409226:	outs   dx,DWORD PTR ds:[esi]
  409227:	jne    0x409235
  409229:	dec    edi
  40922a:	clc    
  40922b:	pop    es
  40922c:	call   0x3fe948
  409231:	push   ecx
  409232:	retf   
  409233:	adc    BYTE PTR [eax],al
  409235:	lds    eax,FWORD PTR [edx-0x52ff7c14]
  40923b:	std    
  40923c:	push   DWORD PTR [ebx-0x24]
  40923f:	mov    bh,BYTE PTR [ebp+0xc]
  409242:	or     BYTE PTR [edx],al
  409244:	push   ss
  409245:	jmp    DWORD PTR [ebp-0x6a]
  409248:	(bad)  
  409249:	jne    0x40922b
  40924b:	pop    ebp
  40924c:	mov    bl,0xd6
  40924e:	jmp    FWORD PTR [esi-0x1]
  409251:	jne    0x40921f
  409253:	outs   dx,BYTE PTR ds:[esi]
  409254:	jne    0x40925e
  409256:	lock add edx,edi
  409259:	(bad)  
  40925a:	out    dx,eax
  40925b:	(bad)
  40925f:	fmul   DWORD PTR [edx-0xfadb414]
  409265:	jmp    DWORD PTR [ebp+0x1]
  409268:	call   0xffaf01b2
  40926d:	mov    DWORD PTR [ebp+0x1],edx
  409270:	cmp    DWORD PTR [ebp+0x31],0xffffffac
  409274:	add    esi,DWORD PTR [edi+eiz*8-0x7e]
  409278:	adc    BYTE PTR [ecx+ebx*4],cl
  40927b:	sar    BYTE PTR [eax-0x3c698101],1
  409281:	je     0x409276
  409283:	sub    al,0x40
  409285:	lock add DWORD PTR [ebx],esp
  409288:	adc    BYTE PTR [ecx+ebx*2],cl
  40928b:	mov    bh,0xba
  40928d:	call   FWORD PTR [esi-0x6a]
  409290:	ret    
  409291:	je     0x4092b6
  409293:	and    DWORD PTR [eax],ebx
  409295:	cld    
  409296:	xor    DWORD PTR [eax-0x3c000d],esp
  40929c:	call   0xf80f:0xd23d0075
  4092a3:	dec    ecx
  4092a4:	(bad)  
  4092a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092a6:	jmp    FWORD PTR [esi]
  4092a8:	lods   al,BYTE PTR ds:[esi]
  4092a9:	ret    
  4092aa:	jne    0x4092ec
  4092ac:	out    0xf,eax
  4092ae:	adc    BYTE PTR [esi],bl
  4092b0:	jbe    0x409249
  4092b2:	call   FWORD PTR [edx+edi*8+0xa397599]
  4092b9:	dec    edx
  4092ba:	inc    DWORD PTR [esi]
  4092bc:	or     BYTE PTR [eax-0x548cfebb],cl
  4092c2:	(bad)  
  4092c3:	(bad)  
  4092c4:	xchg   edi,eax
  4092c5:	cdq    
  4092c6:	jmp    DWORD PTR [esi+ebp*4-0x55]
  4092ca:	xchg   BYTE PTR [eax],cl
  4092cc:	test   al,0x99
  4092ce:	leave  
  4092cf:	repz sahf 
  4092d1:	add    edx,DWORD PTR [ebp-0x56]
  4092d4:	mov    BYTE PTR [ebp+0xfbfc1c4],0xc
  4092db:	fldcw  WORD PTR [esi-0x46]
  4092de:	(bad)  
  4092df:	mov    esi,0xb20c3f19
  4092e4:	aad    0x7
  4092e6:	add    BYTE PTR ds:0x357598e7,ah
  4092ec:	or     DWORD PTR [ecx-0x616f80bc],edx
  4092f2:	or     eax,0x86da1571
  4092f7:	hlt    
  4092f8:	cwde   
  4092f9:	cmp    DWORD PTR [ecx-0x6e6f0304],ebx
  4092ff:	pop    edi
  409300:	nop
  409301:	jle    0x409310
  409303:	add    BYTE PTR [ecx+0x15],dh
  409306:	retf   0xec82
  409309:	mov    ecx,gs
  40930b:	add    eax,DWORD PTR [ecx+0x9]
  40930e:	(bad)  
  409310:	pop    edi
  409311:	push   ss
  409312:	stc    
  409313:	cwde   
  409314:	fmul   QWORD PTR [esi+edx*2-0x2b6fb6f1]
  40931b:	or     ebx,DWORD PTR [ecx-0x62]
  40931e:	inc    edi
  40931f:	cdq    
  409320:	ds jle 0x4092c7
  409323:	xchg   ebx,eax
  409324:	loope  0x4092c6
  409326:	int    0xb8
  409328:	cs nop
  40932a:	cs sysexit 
  40932d:	mov    eax,ds:0x901ebacd
  409332:	xor    dh,al
  409334:	and    eax,0x1d8cbc09
  409339:	mov    WORD PTR ds:0x21e46294,fs
  40933f:	cdq    
  409340:	test   BYTE PTR [ecx],al
  409342:	adc    DWORD PTR [ecx],ebp
  409344:	xlat   BYTE PTR ds:[ebx]
  409345:	(bad)  
  409346:	test   BYTE PTR [edx+0x176a0174],0x39
  40934d:	or     DWORD PTR [ebp+0x42],ebx
  409350:	ficom  WORD PTR ds:0xadfaabf1
  409356:	(bad)  
  409357:	cwde   
  409358:	cmp    cl,cl
  40935a:	push   ebp
  40935b:	(bad)  
  40935c:	mov    ch,0x45
  40935e:	mov    ecx,0xf115be33
  409363:	stos   DWORD PTR es:[edi],eax
  409364:	mov    ds:0xb600ae,eax
  409369:	leave  
  40936a:	add    eax,eax
  40936c:	xor    eax,0xa57d888f
  409371:	xor    cl,BYTE PTR [ecx]
  409373:	adc    cl,ch
  409375:	cmp    eax,0xa91cfef9
  40937a:	(bad)  
  40937b:	jne    0x40930e
  40937d:	(bad)  
  40937f:	loope  0x409307
  409381:	cdq    
  409382:	add    eax,eax
  409384:	cmc    
  409385:	xor    ecx,DWORD PTR [ebp+ecx*4+0x2c]
  409389:	lds    edi,FWORD PTR [eax]
  40938b:	call   0xffd03d79
  409390:	data16 das 
  409392:	add    eax,ebp
  409394:	sub    DWORD PTR [edx+0x7562ff8f],ebx
  40939a:	xor    ecx,ecx
  40939c:	sub    eax,DWORD PTR [esi-0x71]
  40939f:	push   esp
  4093a0:	jb     0x409338
  4093a2:	mov    esp,eax
  4093a4:	jne    0x40933e
  4093a6:	(bad)  
  4093a7:	jmp    FWORD PTR [esi]
  4093a9:	scas   eax,DWORD PTR es:[edi]
  4093aa:	push   ecx
  4093ab:	(bad)  
  4093ac:	cs leave 
  4093ae:	or     DWORD PTR [eax],eax
  4093b0:	jmp    0xed8615e7
  4093b5:	and    eax,0xb2ec74c9
  4093ba:	sar    edi,1
  4093bc:	xchg   ebx,eax
  4093bd:	pop    es
  4093be:	mov    ds:0x932e878,al
  4093c3:	push   DWORD PTR [esi+ebp*1-0x5f]
  4093c7:	fisttp QWORD PTR [edx]
  4093c9:	leave  
  4093ca:	mov    cs,WORD PTR [ebx]
  4093cc:	sub    DWORD PTR [eax],eax
  4093ce:	aaa    
  4093cf:	(bad)  
  4093d0:	addr16 (bad) 
  4093d2:	jbe    0x40941c
  4093d4:	add    dh,bl
  4093d6:	inc    eax
  4093d7:	std    
  4093d8:	out    0xf2,eax
  4093da:	xchg   BYTE PTR [esi+0x2138c2ff],cl
  4093e0:	in     al,0x0
  4093e2:	pop    es
  4093e3:	inc    esp
  4093e4:	add    bh,bh
  4093e6:	std    
  4093e7:	add    al,ch
  4093e9:	or     al,0xc4
  4093eb:	jbe    0x4093ec
  4093ed:	mov    DWORD PTR ds:0xd7fffe2d,ecx
  4093f3:	fnstsw WORD PTR ds:0x8d0a8801
  4093f9:	test   edx,ebx
  4093fb:	ja     0x4093fc
  4093fd:	dec    DWORD PTR [eax+0x5d]
  409400:	test   al,bl
  409402:	mov    bh,0x76
  409404:	lea    eax,[ebp-0x8836]
  40940a:	dec    eax
  40940b:	jbe    0x4093c2
  40940d:	mov    eax,0xe8ff75d6
  409412:	mov    esi,0xe10000ca
  409417:	xchg   DWORD PTR [esi+edi*8+0xf4075e7],edi
  40941e:	int3   
  40941f:	xchg   edx,eax
  409420:	add    BYTE PTR [eax],al
  409422:	dec    eax
  409423:	adc    DWORD PTR [ebp-0x8a093e],0xff9a1af7
  40942d:	call   FWORD PTR [eax]
  40942f:	pop    es
  409430:	test   BYTE PTR [ebx+0xa0800],al
  409436:	(bad)  
  409437:	retf   0x4fa5
  40943a:	push   0x414642
  40943f:	xor    BYTE PTR [esi+0x30800c3],al
  409445:	shl    BYTE PTR [ebp+0xd],0x5d
  409449:	int3   
  40944a:	add    al,bl
  40944c:	or     DWORD PTR [ebp-0x88e56b],ecx
  409452:	jmp    DWORD PTR [ebp+0x48]
  409455:	sub    al,0x50
  409457:	adc    BYTE PTR [ecx+0x4f],0x41
  40945b:	xor    DWORD PTR [eax-0x600d8d55],esp
  409461:	add    ecx,DWORD PTR [ebx]
  409463:	icebp  
  409464:	int3   
  409465:	add    cl,ch
  409467:	xchg   BYTE PTR [edi-0x3351fffd],bl
  40946d:	pop    es
  40946e:	call   0xffd757db
  409473:	sub    ah,BYTE PTR [eax+0x10]
  409476:	wbinvd 
  409478:	mov    ecx,DWORD PTR [ebx+0x41]
  40947b:	xor    DWORD PTR [edi+0x10],esi
  40947e:	or     al,0x99
  409480:	idiv   BYTE PTR [edx+0x97a7eff]
  409486:	push   0x31
  409488:	movups xmm1,XMMWORD PTR [ecx+ebx*2]
  40948c:	or     bh,BYTE PTR [ebx+0x702c66ff]
  409492:	ret    0x265f
  409495:	xchg   esi,eax
  409496:	lea    eax,[eax]
  409498:	add    edi,esp
  40949a:	xor    DWORD PTR [eax+0x59],edx
  40949d:	xchg   BYTE PTR [edx-0x69b0b901],bh
  4094a3:	jne    0x4094be
  4094a5:	inc    edi
  4094a6:	adc    BYTE PTR [esi+esi*1],dl
  4094a9:	push   esp
  4094aa:	repz dec edi
  4094ac:	cs dec esi
  4094ae:	or     ebp,eax
  4094b0:	and    ebp,ebx
  4094b2:	xchg   ebp,eax
  4094b3:	dec    DWORD PTR [ecx]
  4094b5:	aas    
  4094b6:	scas   al,BYTE PTR es:[edi]
  4094b7:	call   DWORD PTR [esi]
  4094b9:	clc    
  4094ba:	and    cl,BYTE PTR [ebp-0x7a73398d]
  4094c0:	mov    ebp,0xb2ff95fc
  4094c5:	test   ebx,esi
  4094c7:	(bad)  
  4094c8:	jge    0x40946a
  4094ca:	stos   BYTE PTR es:[edi],al
  4094cb:	adc    ch,dh
  4094cd:	or     eax,0xd69cfef3
  4094d2:	xchg   esp,eax
  4094d3:	(bad)  
  4094d4:	fimul  WORD PTR [ecx]
  4094d6:	ror    DWORD PTR [ebp+0x8e909f2],1
  4094dc:	icebp  
  4094dd:	adc    eax,0x41aa2c14
  4094e2:	sub    BYTE PTR [esi+edi*4],al
  4094e5:	push   ss
  4094e6:	cmc    
  4094e7:	stos   DWORD PTR es:[edi],eax
  4094e8:	and    BYTE PTR [eax+0x56ae95be],dh
  4094ee:	jge    0x409486
  4094f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094f1:	mov    WORD PTR [ecx],ds
  4094f3:	lods   al,BYTE PTR ds:[esi]
  4094f4:	clc    
  4094f5:	scas   eax,DWORD PTR es:[edi]
  4094f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094f7:	xchg   ebp,eax
  4094f8:	add    DWORD PTR [eax-0x71ff03e4],ecx
  4094fe:	sbb    ch,ah
  409500:	xchg   esp,eax
  409501:	cld    
  409502:	hlt    
  409503:	cmp    BYTE PTR [ebp+0x2f860104],dl
  409509:	sbb    DWORD PTR [eax-0xb1b6b13],esp
  40950f:	sbb    BYTE PTR [ebp+0x308100dc],dl
  409515:	pop    esp
  409516:	mov    WORD PTR [esi-0x54],fs
  409519:	repz mov bl,0x5e
  40951c:	xchg   ebp,eax
  40951d:	mov    esp,0x46962b86
  409522:	mov    WORD PTR [ecx+0x474d8494],?
  409528:	xchg   ebp,eax
  409529:	mov    eax,ss:0x931c28f
  40952f:	ins    BYTE PTR es:[edi],dx
  409530:	les    esi,FWORD PTR [esi]
  409532:	xchg   BYTE PTR [eax],bh
  409534:	xchg   esi,eax
  409535:	push   ds
  409536:	mov    WORD PTR [esi],fs
  409538:	dec    edi
  409539:	aad    0x8a
  40953b:	push   ds
  40953c:	xchg   ebp,eax
  40953d:	sbb    DWORD PTR [edx+0x2b],ebp
  409540:	add    al,0x31
  409542:	mov    WORD PTR [esp+ebx*2-0x1],ss
  409546:	mov    eax,DWORD PTR [esi]
  409548:	lods   al,BYTE PTR ds:[esi]
  409549:	and    esi,DWORD PTR [esi+edi*8+0xc6f894]
  409550:	fnsave [edx]
  409552:	ss mov edi,ebp
  409555:	or     BYTE PTR [ecx],cl
  409557:	call   FWORD PTR [ecx+eiz*8-0x76]
  40955b:	jne    0x409556
  40955d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40955e:	adc    eax,0x3700d60c
  409563:	add    eax,ebp
  409565:	push   cs
  409566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409567:	mov    edi,edi
  409569:	mov    al,0xf0
  40956b:	clc    
  40956c:	call   DWORD PTR [ebx]
  40956e:	mov    eax,0x393cff9c
  409573:	mov    eax,ds:0x8bc59241
  409578:	or     ebp,DWORD PTR [ecx+0x14feeb26]
  40957e:	test   DWORD PTR [ebx],edi
  409580:	call   0xffcc5e2b
  409585:	cmp    DWORD PTR [ebp+edx*1-0xad879e8],esp
  40958c:	dec    edi
  40958d:	jle    0x4095ce
  40958f:	add    eax,ebp
  409591:	aaa    
  409592:	mov    ebp,0x9d81ff8b
  409597:	mov    dl,0xff
  409599:	imul   ax,si,0x14
  40959d:	jmp    0x572d15c1
  4095a2:	aaa    
  4095a3:	cmc    
  4095a4:	(bad)  
  4095a5:	aam    0x42
  4095a7:	mov    dh,BYTE PTR [ebp-0xb]
  4095aa:	or     bh,ch
  4095ac:	(bad)  
  4095ad:	mov    ah,0x3a
  4095af:	mov    eax,ds:0x8abd36b9
  4095b4:	push   DWORD PTR [esi+ecx*1-0x42068a74]
  4095bb:	adc    al,0xc
  4095bd:	xchg   ebx,eax
  4095be:	adc    DWORD PTR [ebp+esi*2-0x9c251f],ecx
  4095c5:	push   cs
  4095c6:	add    BYTE PTR [ebp-0x2bff8a76],ah
  4095cc:	jne    0x409643
  4095ce:	adc    bh,ch
  4095d0:	cld    
  4095d1:	or     ebp,DWORD PTR [edx-0x4]
  4095d4:	jne    0x40964b
  4095d6:	or     BYTE PTR [eax],dh
  4095d8:	sbb    edi,edi
  4095da:	dec    edi
  4095dc:	dec    esp
  4095dd:	ret    0xd810
  4095e0:	ror    DWORD PTR [edx-0xf3ea414],1
  4095e6:	push   ebx
  4095e7:	push   es
  4095e8:	into   
  4095e9:	sub    bl,bl
  4095eb:	inc    ebx
  4095ec:	inc    eax
  4095ed:	or     al,0xff
  4095ef:	test   al,0x87
  4095f1:	inc    ebp
  4095f2:	clc    
  4095f3:	fcomip st,st(0)
  4095f5:	pop    es
  4095f6:	(bad)  
  4095f7:	push   ebp
  4095f8:	jns    0x4095c1
  4095fa:	inc    ebp
  4095fb:	mov    ah,0x5
  4095fd:	add    BYTE PTR [eax],al
  4095ff:	cwde   
  409600:	cmp    DWORD PTR ds:0x445399,0x0
  409607:	and    al,0xd9
  409609:	cmp    BYTE PTR [ebp-0x80],0x6
  40960d:	je     0x409665
  40960f:	fnstsw WORD PTR [edi]
  409611:	lock push eax
  409613:	xor    al,BYTE PTR [edx+ebp*2]
  409616:	add    BYTE PTR [edx],dh
  409618:	add    eax,0x6587d83
  40961d:	je     0x409624
  40961f:	out    dx,eax
  409620:	out    dx,eax
  409621:	por    mm3,QWORD PTR [edx-0x14]
  409625:	jmp    FWORD PTR [ecx+0x48]
  409628:	mov    DWORD PTR [ebp-0x8],eax
  40962b:	add    BYTE PTR [eax-0x1c66ea89],bl
  409631:	inc    esp
  409632:	add    BYTE PTR [ebx],cl
  409634:	pop    eax
  409635:	icebp  
  409636:	cs or  ebp,0x71
  40963a:	add    BYTE PTR [ecx+eax*1+0xb],dh
  40963e:	inc    ebp
  40963f:	or     al,0x83
  409641:	dec    eax
  409642:	lock cmp esi,DWORD PTR [ecx]
  409645:	test   al,0x1a
  409647:	pop    ss
  409648:	jb     0x409646
  40964a:	jle    0x4096c1
  40964c:	std    
  40964d:	push   ss
  40964e:	adc    DWORD PTR [eax],ecx
  409650:	mov    edx,0x33e3935c
  409655:	(bad)  
  409656:	mov    esi,DWORD PTR [si-0x54]
  40965a:	xchg   edx,eax
  40965b:	jne    0x40963e
  40965d:	adc    al,BYTE PTR [ebx]
  40965f:	inc    DWORD PTR [esp+esi*4-0x65]
  409663:	out    0xf1,al
  409665:	lahf   
  409666:	add    ecx,DWORD PTR [ebx+0x5b31daf2]
  40966c:	call   0x64095ce
  409671:	pop    ss
  409672:	lahf   
  409673:	sub    DWORD PTR [ebp+0x53],0x36
  409677:	push   esi
  409678:	push   es
  409679:	dec    eax
  40967a:	fmul   DWORD PTR [edi-0x10]
  40967d:	lahf   
  40967e:	fwait
  40967f:	ins    BYTE PTR es:[edi],dx
  409680:	jo     0x409621
  409682:	add    ecx,DWORD PTR [ebx-0x3b7a597]
  409688:	xor    DWORD PTR [eax+0x602a0003],esp
  40968e:	pop    ss
  40968f:	ds add cl,bl
  409692:	mov    edi,0xef314133
  409697:	fwait
  409698:	hlt    
  409699:	jno    0x40963a
  40969b:	add    ecx,DWORD PTR [ebx]
  40969d:	jno    0x40964a
  40969f:	loop   0x40962b
  4096a1:	inc    ecx
  4096a2:	mov    bh,0x44
  4096a4:	push   eax
  4096a5:	lock lahf 
  4096a7:	ss call 0x4375ff
  4096ad:	sub    ah,al
  4096af:	push   ss
  4096b0:	push   ds
  4096b1:	mov    edx,0x25457fca
  4096b6:	mov    ds:0x72f1ec9b,eax
  4096bb:	add    edx,DWORD PTR [eax+0x16]
  4096be:	or     bh,BYTE PTR [esi]
  4096c0:	xchg   BYTE PTR [ebp+eax*4-0x3ec4e817],cl
  4096c7:	call   0xae49c7cf
  4096cc:	xor    DWORD PTR [edx+0x52],ebx
  4096cf:	sub    cl,BYTE PTR [ebx+0x31]
  4096d2:	or     ecx,ebp
  4096d4:	add    eax,DWORD PTR [esi-0xd436e19]
  4096da:	fisub  WORD PTR [ecx-0x61]
  4096dd:	mov    dl,0x4d
  4096df:	fld    DWORD PTR [ebp+0x4331de0c]
  4096e5:	xor    DWORD PTR [ecx],ecx
  4096e7:	pop    ebp
  4096e8:	div    BYTE PTR [ebx+0x703d3046]
  4096ee:	or     ecx,ebp
  4096f0:	pop    ss
  4096f1:	cmp    BYTE PTR [esp+edi*8-0x3605ffd2],cl
  4096f8:	call   0x7150bb00
  4096fd:	add    esi,DWORD PTR [ecx]
  4096ff:	or     ecx,ebp
  409701:	mov    edx,0x8e249672
  409706:	outs   dx,DWORD PTR ds:[esi]
  409707:	or     ecx,ebp
  409709:	leave  
  40970a:	icebp  
  40970b:	or     ecx,ebp
  40970d:	leave  
  40970e:	icebp  
  40970f:	or     ch,cl
  409711:	leave  
  409712:	icebp  
  409713:	or     ebp,ecx
  409715:	leave  
  409716:	icebp  
  409717:	or     al,0xe9
  409719:	leave  
  40971a:	icebp  
  40971b:	or     eax,0x7cec7ee4
  409720:	mov    ecx,0xe8f3311d
  409725:	sbb    eax,0x1de8f331
  40972a:	xor    ebx,esi
  40972c:	call   0xe94ba84c
  409731:	add    ebx,DWORD PTR [ebx-0x4bfa2cd7]
  409737:	int    0xff
  409739:	xor    ah,BYTE PTR [ebp-0x78]
  40973c:	adc    eax,0xffca5594
  409741:	icebp  
  409742:	repnz std 
  409744:	add    DWORD PTR [eax],esi
  409746:	in     al,dx
  409747:	dec    edi
  409748:	inc    ebp
  409749:	sbb    DWORD PTR ds:0x77e90009,esi
  40974f:	into   
  409750:	out    dx,eax
  409751:	cdq    
  409752:	sar    ebp,0xf3
  409755:	xchg   ebx,eax
  409756:	xor    cl,BYTE PTR [eax+0x1d009015]
  40975c:	retf   0xe1ff
  40975f:	repnz std 
  409761:	push   es
  409762:	scas   al,BYTE PTR es:[edi]
  409763:	ja     0x4097de
  409765:	add    cl,ch
  409767:	xor    cl,BYTE PTR [ecx]
  409769:	call   FWORD PTR [ecx+ebx*4-0x79]
  40976d:	adc    eax,0xffc9f42c
  409772:	jno    0x40976b
  409774:	js     0x40973f
  409776:	stos   BYTE PTR es:[edi],al
  409777:	pop    edi
  409778:	xchg   esp,eax
  409779:	in     al,dx
  40977a:	push   0x76
  40977c:	nop
  40977d:	lea    esp,[edx*1-0xe6e9827]
  409784:	leave  
  409785:	call   DWORD PTR [eax-0x690094c9]
  40978b:	inc    edx
  40978c:	adc    al,0xc0
  40978e:	adc    eax,0x717d8c2b
  409793:	data16 (bad) 
  409795:	push   0x6c
  409797:	out    dx,eax
  409798:	js     0x4097ea
  40979a:	sbb    DWORD PTR [edi-0x5016ffb8],0x31c77848
  4097a4:	mov    edi,0x18025e45
  4097a9:	mov    dh,0xac
  4097ab:	mov    al,ds:0xef970ed8
  4097b0:	test   DWORD PTR [eax+0x0],edx
  4097b3:	daa    
  4097b4:	loope  0x4097fa
  4097b6:	cld    
  4097b7:	enter  0xb609,0x45
  4097bb:	arpl   WORD PTR [edx],di
  4097bd:	movzx  eax,BYTE PTR [eax]
  4097c0:	int    0x94
  4097c2:	push   eax
  4097c3:	movd   mm1,edi
  4097c6:	clc    
  4097c7:	push   eax
  4097c8:	pop    ss
  4097c9:	loope  0x40980f
  4097cb:	clc    
  4097cc:	mov    eax,0x1e45b709
  4097d1:	cmp    cl,BYTE PTR [edi]
  4097d3:	mov    bh,0x9d
  4097d5:	sahf   
  4097d6:	push   eax
  4097d7:	call   FWORD PTR [ebp-0x66]
  4097da:	push   0xffcb97ed
  4097df:	mov    WORD PTR [ebp-0x4917affa],cs
  4097e5:	dec    ebp
  4097e6:	add    BYTE PTR [eax],al
  4097e8:	pop    ebx
  4097e9:	push   ecx
  4097ea:	xor    al,0x8d
  4097ec:	or     eax,0x16e85089
  4097f1:	(bad)  
  4097f2:	(bad)  
  4097f3:	dec    DWORD PTR [eax-0x78]
  4097f6:	inc    ebp
  4097f7:	mov    WORD PTR [eax+0x25],cs
  4097fa:	call   0xe84de14e
  4097ff:	in     eax,dx
  409800:	push   0x3ce8ff96
  409805:	sar    edi,0xff
  409808:	ror    DWORD PTR [edx+0x55],0x8b
  40980c:	mov    ah,0x8c
  40980e:	les    ebp,FWORD PTR [edi+eiz*4]
  409811:	xchg   esi,eax
  409812:	call   DWORD PTR [ebx+0x4f]
  409815:	and    eax,DWORD PTR [eax]
  409817:	push   0x58
  409819:	xchg   edi,eax
  40981a:	jne    0x409824
  40981c:	mov    al,0x8a
  40981e:	sar    edi,1
  409820:	mov    DWORD PTR [ebx],0x6000fc45
  409826:	or     eax,0x96a6ef00
  40982b:	jne    0x409835
  40982d:	xor    eax,ecx
  40982f:	lahf   
  409830:	shl    BYTE PTR [esi],1
  409832:	xlat   BYTE PTR ds:[ebx]
  409833:	sbb    ebx,DWORD PTR [ecx+esi*1-0x5372fc90]
  40983a:	dec    edi
  40983b:	mov    ?,edi
  40983d:	push   ds
  40983e:	mov    al,ds:0x36fd589b
  409843:	pop    edi
  409845:	mov    ah,0x8f
  409847:	mov    ?,edi
  409849:	push   es
  40984a:	add    al,0x4
  40984c:	add    BYTE PTR [ecx],dh
  40984e:	in     eax,dx
  40984f:	mov    BYTE PTR [eax-0xa],ah
  409852:	push   ss
  409853:	(bad)  
  409854:	push   eax
  409855:	(bad)  
  409857:	dec    esi
  409858:	add    BYTE PTR [ecx],dh
  40985a:	pop    ebx
  40985b:	mov    esp,0x50ed032b
  409860:	je     0x409838
  409862:	jbe    0x4097f2
  409864:	jmp    0x409888
  409866:	lock int 0xff
  409869:	cmp    eax,0x3101496d
  40986e:	jo     0x409873
  409870:	or     esp,ebx
  409872:	fild   DWORD PTR [edx]
  409874:	(bad)  
  409875:	ss jo  0x4098be
  409878:	inc    ecx
  409879:	mov    al,0x48
  40987b:	add    DWORD PTR [eax],0x31
  40987e:	jo     0x409891
  409880:	in     eax,0x2a
  409882:	mov    al,0x17
  409884:	push   ss
  409885:	sbb    DWORD PTR [ebx+eax*1-0xacf0000],ecx
  40988c:	xchg   DWORD PTR [eax+0x7e],esp
  40988f:	sahf   
  409890:	mov    ss,WORD PTR [eax+0x76]
  409893:	sbb    al,0xfc
  409895:	out    0xad,eax
  409897:	lahf   
  409898:	mov    ?,edi
  40989a:	pop    edx
  40989b:	jae    0x4098b6
  40989d:	add    bl,cl
  40989f:	outs   dx,DWORD PTR ds:[esi]
  4098a0:	mov    ?,WORD PTR [ebp+0x29]
  4098a3:	mov    BYTE PTR [ebp-0x30],bl
  4098a6:	dec    esi
  4098a7:	or     BYTE PTR [esi-0x65],ah
  4098aa:	je     0x40982f
  4098ac:	pop    esi
  4098ad:	mov    fs,ecx
  4098af:	test   esp,ebx
  4098b1:	sti    
  4098b2:	dec    esi
  4098b3:	repnz cmp BYTE PTR [esi+0x7e8f22e],cl
  4098ba:	xor    DWORD PTR [ecx],ecx
  4098bc:	push   ecx
  4098bd:	lds    eax,FWORD PTR [edx]
  4098bf:	test   DWORD PTR [esi],esi
  4098c1:	jl     0x40986f
  4098c3:	in     eax,0x2d
  4098c5:	mov    cs,WORD PTR [esi]
  4098c7:	repnz and eax,0x1e093102
  4098cd:	pop    eax
  4098ce:	pop    ebp
  4098cf:	test   BYTE PTR [esi],dl
  4098d1:	mov    cs,WORD PTR [ecx+0x3103f907]
  4098d7:	icebp  
  4098d8:	call   0x1149c9e4
  4098dd:	call   0x3429a281
  4098e2:	(bad)  
  4098e3:	mov    esi,0x84ce8e8d
  4098e8:	out    0x17,al
  4098ea:	cmp    DWORD PTR [ecx+0x46],esi
  4098ed:	mov    ah,0x0
  4098ef:	mov    esi,0x328d4184
  4098f4:	or     ecx,ebp
  4098f6:	mov    esp,fs
  4098f8:	in     eax,0xc5
  4098fa:	lea    esp,[esi-0x610c180f]
  409900:	test   BYTE PTR [ecx+0x4],al
  409903:	sub    eax,0x8d9be909
  409908:	ret    
  409909:	jmp    0x54c47a11
  40990e:	xor    BYTE PTR [esi-0x7c],bh
  409911:	xchg   esi,eax
  409912:	(bad)  
  409913:	cld    
  409914:	adc    BYTE PTR [ecx-0x797b8132],al
  40991a:	pushf  
  40991b:	ins    BYTE PTR es:[edi],dx
  40991c:	xchg   BYTE PTR [esi-0x73],bh
  40991f:	add    DWORD PTR [eax+eax*1-0x593a504],eax
  409926:	sahf   
  409927:	mov    esp,0xb4b8e884
  40992c:	test   bh,bh
  40992e:	ins    BYTE PTR es:[edi],dx
  40992f:	mov    dh,0xe1
  409931:	(bad)  
  409932:	push   esi
  409933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409934:	fldenv [edi+0x41]
  409937:	ins    BYTE PTR es:[edi],dx
  409938:	retf   0x50ff
  40993b:	loop   0x4099a5
  40993d:	(bad)  
  40993e:	ds call 0x8383:0xa436548e
  409946:	ins    BYTE PTR es:[edi],dx
  409947:	dec    ecx
  409948:	test   bh,bh
  40994a:	es sub eax,0x6e6a44fd
  409950:	loope  0x409950
  409952:	push   ss
  409953:	add    BYTE PTR [esp+ebx*1-0x724e328e],ah
  40995a:	pop    eax
  40995b:	push   es
  40995c:	mov    ah,0x83
  40995e:	add    al,0xfe
  409960:	xchg   ecx,esp
  409962:	(bad)  
  409963:	mul    BYTE PTR [ebp-0x551e8a7d]
  409969:	mov    ebx,0x87b5e6cf
  40996e:	lods   eax,DWORD PTR ds:[esi]
  40996f:	inc    ecx
  409970:	lods   al,BYTE PTR ds:[esi]
  409971:	cmp    edi,0xffffffed
  409974:	sbb    BYTE PTR [edi+edi*8-0x599452ac],al
  40997b:	mov    dh,0xb5
  40997d:	cmp    edi,0x74
  409980:	dec    edx
  409981:	test   bh,bh
  409983:	mov    dh,0xa5
  409985:	mov    ebp,0x83bdae54
  40998a:	call   FWORD PTR [eax*4-0x52515895]
  409991:	sub    ebx,0xffffffe5
  409994:	sbb    BYTE PTR [ecx],cl
  409996:	push   0xffffffe9
  409998:	mov    ebp,0xc00007fd
  40999d:	ror    esi,1
  40999f:	(bad)  
  4099a0:	fist   WORD PTR [ebp+esi*4-0x6b20ac]
  4099a7:	call   0x40533c
  4099ac:	iret   
  4099ad:	ficomp DWORD PTR [ebx-0x1]
  4099b0:	fist   WORD PTR [eax+ebp*8-0x6b0543]
  4099b7:	sub    eax,DWORD PTR [eax]
  4099b9:	arpl   WORD PTR [esi],bx
  4099bb:	xor    al,0x50
  4099bd:	fld    DWORD PTR [esi]
  4099bf:	call   0x4737ff
  4099c4:	mov    DWORD PTR [ebp+0x5ffffe62],eax
  4099ca:	mov    DWORD PTR [ebp-0x6ab0d4],edi
  4099d0:	add    BYTE PTR [esp+esi*2-0x3847df99],ah
  4099d7:	(bad)  
  4099d8:	inc    BYTE PTR [ebp+0x2ffffe62]
  4099de:	sahf   
  4099df:	mov    esp,0xb06c8bd
  4099e4:	rcl    BYTE PTR [eax+eax*4-0x74],0x95
  4099e9:	mov    BYTE PTR [ebp-0x71f50001],dl
  4099ef:	rol    BYTE PTR [ebx-0x3d],1
  4099f2:	mov    bl,0x75
  4099f4:	or     al,0x4d
  4099f6:	mov    BYTE PTR [eax],dh
  4099f8:	(bad)  
  4099f9:	jg     0x409989
  4099fb:	push   eax
  4099fc:	call   0x406a89
  409a01:	add    ch,BYTE PTR [ecx-0x74]
  409a04:	test   DWORD PTR [eax+0x28ffff8f],ebx
  409a0a:	mov    ?,WORD PTR [ebp+0x8]
  409a0d:	mov    al,ds:0x9fffcf43
  409a12:	mov    ?,WORD PTR [ebp-0x4]
  409a15:	xor    DWORD PTR [ebx-0x45a6f7ef],ebx
  409a1b:	mov    ebx,0x2b6600ff
  409a20:	das    
  409a21:	leave  
  409a22:	jae    0x409a90
  409a24:	add    edx,DWORD PTR [ebp-0x56]
  409a27:	mov    WORD PTR [ebp-0x7504a63c],es
  409a2d:	push   DWORD PTR [ebp+esi*4+0x5d3e5087]
  409a34:	idiv   esi
  409a36:	cld    
  409a37:	call   0xbe1c:0xc831413c
  409a3e:	xor    DWORD PTR [eax-0x2],esi
  409a41:	mov    edi,0xa2ed2e
  409a46:	xor    DWORD PTR [eax-0x3e],esi
  409a49:	inc    ebp
  409a4a:	or     DWORD PTR [eax+0x3],esi
  409a4d:	add    BYTE PTR [ecx],dh
  409a4f:	xor    eax,DWORD PTR [ecx-0xc]
  409a52:	(bad)  
  409a53:	push   0x3
  409a55:	add    BYTE PTR [ebx-0x43ffe290],cl
  409a5b:	in     al,dx
  409a5c:	xchg   edi,eax
  409a5d:	mul    esi
  409a5f:	or     dh,BYTE PTR [edx+ebp*2]
  409a62:	xor    ebp,esi
  409a64:	inc    eax
  409a65:	hlt    
  409a66:	sub    ebp,0x72c6f480
  409a6c:	mov    dl,BYTE PTR [eax-0x3a]
  409a6f:	in     al,0x8b
  409a71:	inc    DWORD PTR [esp+eiz*2-0x65]
  409a75:	push   esp
  409a76:	ja     0x409ae7
  409a78:	add    ecx,DWORD PTR [ebx]
  409a7a:	jno    0x409a57
  409a7c:	add    cl,ch
  409a7e:	int3   
  409a7f:	outs   dx,DWORD PTR ds:[esi]
  409a80:	add    eax,DWORD PTR [eax]
  409a82:	add    BYTE PTR [edx-0x690868fc],dh
  409a88:	mov    edx,0xef3f7404
  409a8d:	inc    edi
  409a8e:	in     al,dx
  409a8f:	jle    0x409a99
  409a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a92:	mov    dh,BYTE PTR [esi]
  409a94:	std    
  409a95:	jecxz  0x409a21
  409a97:	in     al,dx
  409a98:	add    BYTE PTR [edx+0x37d2d951],0x45
  409a9f:	xor    DWORD PTR [esp+ebp*2+0x7e81668f],edx
  409aa6:	xor    ecx,DWORD PTR [ecx-0x39]
  409aa9:	add    esi,DWORD PTR ss:[ecx]
  409aac:	push   cs
  409aad:	test   eax,0x6c93c00f
  409ab2:	fwait
  409ab3:	inc    esi
  409ab4:	sbb    DWORD PTR [esi+0x33],0x925d8ba4
  409abb:	cmp    DWORD PTR cs:[ecx+0x460d9c8a],0xa7d1dfd0
  409ac6:	add    ecx,DWORD PTR [ecx]
  409ac8:	inc    edi
  409ac9:	sbb    eax,0x29150e8a
  409ace:	punpcklbw mm2,DWORD PTR [edx-0x7ef96c94]
  409ad5:	push   ds
  409ad6:	sbb    esi,DWORD PTR [eax]
  409ad8:	or     DWORD PTR [esi],eax
  409ada:	dec    ecx
  409adb:	out    dx,al
  409adc:	mul    al
  409ade:	fwait
  409adf:	outs   dx,BYTE PTR ds:[esi]
  409ae0:	dec    edi
  409ae1:	push   es
  409ae2:	mov    dh,BYTE PTR [edx+0x920dbe]
  409ae8:	(bad)  
  409ae9:	sub    al,0x10
  409aec:	cmp    eax,0x3c8ae8f3
  409af1:	adc    ecx,edx
  409af3:	shr    ah,1
  409af5:	sbb    dh,0x9d
  409af8:	sub    esi,ebx
  409afa:	out    0x88,eax
  409afc:	and    al,0x11
  409afe:	rcr    esp,0x74
  409b01:	add    dh,0x89
  409b04:	in     al,0x71
  409b06:	mov    dh,0x89
  409b08:	xchg   esi,eax
  409b09:	add    BYTE PTR [eax],0x7c
  409b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b0d:	js     0x409b0e
  409b0f:	scas   al,BYTE PTR es:[edi]
  409b10:	mov    eax,0x3f9107f6
  409b15:	dec    edi
  409b16:	call   FWORD PTR [esi-0x610f4958]
  409b1c:	mov    eax,0xa231e880
  409b21:	cmp    bh,0x86
  409b24:	push   ds
  409b25:	sub    ecx,0xff80a9d1
  409b2b:	jbe    0x409b6b
  409b2d:	jge    0x409b17
  409b2f:	cmc    
  409b30:	out    dx,eax
  409b31:	or     BYTE PTR [eax],al
  409b33:	xor    BYTE PTR [edi+0x11],dh
  409b36:	add    BYTE PTR [ebp+esi*4-0x2ed27e94],dh
  409b3d:	ja     0x409b3e
  409b3f:	dec    esi
  409b40:	sahf   
  409b41:	(bad)  
  409b42:	sti    
  409b43:	cdq    
  409b44:	test   eax,0xe63e0bf5
  409b49:	mov    esi,0x3200a848
  409b4e:	jno    0x409bab
  409b50:	ins    BYTE PTR es:[edi],dx
  409b51:	sub    eax,0xf8290b09
  409b56:	test   BYTE PTR [ebx-0x18],dl
  409b59:	xor    cl,BYTE PTR [ecx]
  409b5b:	(bad)  
  409b5c:	lods   al,BYTE PTR ds:[esi]
  409b5d:	mov    edx,0x32e90008
  409b62:	dec    eax
  409b63:	inc    ebp
  409b64:	std    
  409b65:	test   eax,0x34e90007
  409b6a:	or     DWORD PTR [edx-0x17],ebp
  409b6d:	sub    al,0x9
  409b6f:	push   0xffffffe9
  409b71:	aas    
  409b72:	(bad)  
  409b73:	repz cmp DWORD PTR [esi-0x7a],eax
  409b77:	hlt    
  409b78:	(bad)  
  409b79:	test   eax,0x3fd6507f
  409b7e:	cmp    edi,0x2d70b954
  409b84:	add    BYTE PTR [ebp-0x37f4fff5],dh
  409b8a:	syscall 
  409b8c:	jmp    0x40a5ff
  409b91:	lock in eax,dx
  409b93:	inc    edi
  409b94:	inc    ecx
  409b95:	mov    BYTE PTR [eax+0x11a00c75],dl
  409b9b:	aam    0xff
  409b9d:	(bad)  
  409b9e:	cmp    ecx,DWORD PTR [ebx-0xc00fa30]
  409ba4:	div    DWORD PTR [edi-0x3fadaf70]
  409baa:	and    esp,edx
  409bac:	inc    edi
  409bae:	add    al,BYTE PTR [ebp-0x6f40ff10]
  409bb4:	(bad)  
  409bb5:	call   0x4057c6
  409bba:	bound  ecx,QWORD PTR [ebx]
  409bbc:	push   0xffcbe937
  409bc1:	(bad)  
  409bc2:	mov    ebp,0x77fff79a
  409bc7:	xchg   ecx,eax
  409bc8:	xor    eax,0xffcbe0bf
  409bcd:	out    0x5c,eax
  409bcf:	mov    ch,0xff
  409bd1:	call   DWORD PTR [ecx+0x57f7e3ff]
  409bd7:	xchg   ecx,eax
  409bd8:	push   0x0
  409bda:	mov    al,ds:0xd84150ca
  409bdf:	xchg   ecx,eax
  409be0:	mov    ch,0xf0
  409be2:	aas    
  409be3:	xchg   ecx,eax
  409be4:	(bad)  
  409be5:	call   FWORD PTR [ebp-0x37beb82f]
  409beb:	mov    ds:0x86c7d3a6,al
  409bf0:	mov    DWORD PTR [ebp-0x713c],eax
  409bf6:	bound  eax,QWORD PTR ds:0xc3f94968
  409bfc:	(bad)  
  409bfd:	(bad)  
  409bfe:	xor    DWORD PTR [ebp+0x4fa6f794],ebx
  409c04:	xchg   DWORD PTR ds:0x4538de,esi
  409c0a:	mov    eax,edi
  409c0c:	mov    dl,0xff
  409c0e:	mov    gs,ecx
  409c10:	sub    al,0x7e
  409c13:	scas   eax,DWORD PTR es:[edi]
  409c14:	xchg   DWORD PTR [ebx-0x70734400],eax
  409c1a:	push   DWORD PTR [esi+0x70]
  409c1d:	cmovns esi,DWORD PTR [edx+0x66f797d5]
  409c24:	pop    DWORD PTR [esp+esi*2]
  409c27:	icebp  
  409c28:	repnz dec eax
  409c2a:	call   0xc79b8d
  409c2f:	lds    edi,FWORD PTR [esi-0xceffe5]
  409c35:	inc    ebp
  409c36:	inc    esp
  409c38:	ja     0x409bd5
  409c3a:	repz fild WORD PTR gs:[esi-0x713c1b01]
  409c42:	jmp    DWORD PTR [esi]
  409c44:	iret   
  409c45:	adc    BYTE PTR [eax],cl
  409c47:	or     DWORD PTR [edi+0x3f16ffb8],ebp
  409c4d:	push   ecx
  409c4e:	call   0xffc7d359
  409c53:	jl     0x409cbd
  409c55:	fwait
  409c56:	cmp    esp,ebp
  409c58:	es xchg edi,edi
  409c5b:	mov    esp,0xeeff8f03
  409c60:	push   ss
  409c61:	adc    DWORD PTR [eax],ecx
  409c63:	(bad)  [edx-0x48]
  409c66:	(bad)  
  409c67:	fiadd  WORD PTR [esi]
  409c69:	push   ecx
  409c6a:	in     al,0xde
  409c6c:	jle    0x409bf4
  409c6e:	call   0xffc7bcaf
  409c73:	(bad)  
  409c74:	xor    al,0x98
  409c76:	idiv   DWORD PTR [esi+0x9be608]
  409c7c:	xor    ebx,DWORD PTR [ecx-0x22]
  409c7f:	xchg   BYTE PTR [esi-0x59713e4d],ch
  409c85:	jge    0x409c48
  409c87:	mov    gs,WORD PTR [esi+0x7d]
  409c8a:	mov    BYTE PTR [esi-0x79498724],0x8e
  409c91:	jge    0x409ccf
  409c93:	cld    
  409c94:	mov    fs,WORD PTR [ebx+0x7d7e86af]
  409c9a:	pop    esp
  409c9b:	xchg   ebx,eax
  409c9c:	jle    0x409d1b
  409c9e:	sahf   
  409c9f:	fwait
  409ca0:	(bad)  
  409ca1:	dec    ebp
  409ca2:	xchg   esi,eax
  409ca3:	xchg   BYTE PTR [esi-0x3d],ah
  409ca6:	nop
  409ca7:	pushf  
  409ca8:	popf   
  409ca9:	jle    0x409c31
  409cab:	xchg   BYTE PTR [esi-0xd],dl
  409cae:	jl     0x409c4b
  409cb0:	dec    ebx
  409cb1:	shr    ecx,0x3
  409cb4:	js     0x409d00
  409cb6:	loope  0x409cbb
  409cb8:	in     al,0x91
  409cba:	push   ebp
  409cbb:	sub    BYTE PTR [ebp+0x7c],0xd3
  409cbf:	add    ebx,DWORD PTR [ebx+0x3910560a]
  409cc5:	jno    0x409d20
  409cc7:	mov    bh,0x1e
  409cc9:	jge    0x409d3b
  409ccb:	inc    eax
  409ccc:	adc    eax,0x703398f2
  409cd1:	or     DWORD PTR [esi],esi
  409cd3:	adc    BYTE PTR [ecx],bh
  409cd5:	jno    0x409c9c
  409cd7:	test   esi,edi
  409cd9:	jl     0x409c6c
  409cdb:	push   ss
  409cdc:	popa   
  409cdd:	retf   0x86e8
  409ce0:	add    BYTE PTR [ecx+edx*1+0x1],ah
  409ce4:	cs out 0x7c,eax
  409ce7:	push   cs
  409ce8:	sbb    ebp,DWORD PTR [esi-0x29fc5827]
  409cee:	div    al
  409cf0:	fwait
  409cf1:	jnp    0x409d6e
  409cf3:	add    dh,dh
  409cf5:	lods   al,BYTE PTR ds:[esi]
  409cf6:	icebp  
  409cf7:	mov    ch,0x99
  409cf9:	jne    0x409d04
  409cfb:	call   FWORD PTR [ebp+esi*4+0x64]
  409cff:	das    
  409d00:	fdiv   QWORD PTR [esp+edi*2-0x35a24898]
  409d07:	dec    ebp
  409d09:	cs adc eax,ebp
  409d0c:	or     ebp,DWORD PTR [esi-0x73ae0084]
  409d12:	fld    DWORD PTR [eax-0x17]
  409d15:	lods   eax,DWORD PTR ds:[esi]
  409d16:	test   BYTE PTR [edi],0xc1
  409d19:	mov    ?,WORD PTR [ebp-0x1]
  409d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d1d:	lods   al,BYTE PTR ds:[esi]
  409d1e:	idiv   bl
  409d20:	sahf   
  409d21:	ds adc eax,ebp
  409d24:	mov    bl,0xa9
  409d26:	jl     0x409d27
  409d28:	mov    al,ds:0x1c000573
  409d2d:	fsubr  DWORD PTR [eax+ebp*2-0x17]
  409d31:	xor    ch,BYTE PTR [esi+edi*4+0x76]
  409d35:	ss or  eax,0x643af4ff
  409d3b:	push   edx
  409d3c:	pop    esp
  409d3d:	lods   al,BYTE PTR ds:[esi]
  409d3e:	jl     0x409d09
  409d40:	sub    ebp,DWORD PTR ds:0x62547c
  409d46:	leave  
  409d47:	xchg   DWORD PTR [ebp-0x23],edi
  409d4a:	xor    cl,BYTE PTR [esp+eax*4]
  409d4d:	or     esi,DWORD PTR [edx]
  409d4f:	or     DWORD PTR [eax],eax
  409d51:	ds ds or eax,0x7bd8b5e8
  409d58:	jmp    edx
  409d5a:	repnz cmc 
  409d5c:	setno  BYTE PTR [ecx-0x4a16bf2f]
  409d63:	cmc    
  409d64:	or     eax,DWORD PTR [ecx]
  409d66:	fist   WORD PTR [esi-0x1]
  409d69:	push   cs
  409d6a:	pop    edx
  409d6b:	(bad)  
  409d6c:	or     eax,DWORD PTR [eax]
  409d6e:	ret    0x6807
  409d71:	jae    0x409d1c
  409d73:	(bad)  
  409d74:	jmp    DWORD PTR [edi+0x3e]
  409d77:	aaa    
  409d78:	inc    ecx
  409d79:	add    bh,cl
  409d7b:	dec    edx
  409d7c:	mov    esi,0xe8050948
  409d81:	sbb    edx,ebp
  409d83:	test   bh,bh
  409d85:	or     ebx,eax
  409d87:	or     ebx,DWORD PTR [esi]
  409d89:	push   eax
  409d8a:	pop    eax
  409d8b:	xchg   BYTE PTR [ebp+0xc],dh
  409d8e:	cmp    cl,0xd1
  409d91:	dec    edi
  409d93:	aaa    
  409d94:	push   eax
  409d95:	inc    DWORD PTR [ebp+0x7d]
  409d98:	out    0x91,eax
  409d9a:	iret   
  409d9b:	test   bh,bh
  409d9d:	call   0x405346
  409da2:	shl    BYTE PTR [esi+ecx*8+0x21bfff],0x68
  409daa:	add    BYTE PTR [ebx],bh
  409dac:	cmp    BYTE PTR [ecx+0x0],al
  409daf:	inc    eax
  409db0:	add    edx,DWORD PTR [ecx+0x41]
  409db3:	pop    eax
  409db4:	pop    ds
  409db5:	add    al,BYTE PTR [eax]
  409db7:	pop    eax
  409db8:	xchg   eax,ebp
  409dba:	loope  0x409d55
  409dbc:	test   bh,bh
  409dbe:	or     ecx,DWORD PTR [eax]
  409dc0:	or     al,0x1e
  409dc2:	push   eax
  409dc3:	call   0x704d134d
  409dc8:	xor    dl,dl
  409dca:	jmp    FWORD PTR [edi+0x36]
  409dcd:	push   eax
  409dce:	call   ebp
  409dd0:	jle    0x409db9
  409dd2:	pop    ecx
  409dd3:	dec    edi
  409dd4:	test   edi,edi
  409dd6:	call   0x405287
  409ddb:	jo     0x409dba
  409ddd:	int    0xff
  409ddf:	dec    edi
  409de0:	and    BYTE PTR [eax],al
  409de2:	push   0x4137cb
  409de7:	xor    DWORD PTR [eax+0x70705162],ecx
  409ded:	test   BYTE PTR ds:0x42b896,dh
  409df3:	(bad)  
  409df5:	mov    cl,0xff
  409df7:	(bad)  
  409df8:	addr16 ret 
  409dfa:	je     0x409e1b
  409dfc:	mov    al,ds:0x743cff33
  409e01:	imul   esp,DWORD PTR [ecx],0xffffff83
  409e04:	pop    ebx
  409e05:	adc    DWORD PTR [eax+0x1],0x53
  409e09:	stc    
  409e0a:	pop    es
  409e0b:	mov    DWORD PTR [eax],edx
  409e0d:	cmp    edi,0x0
  409e10:	xchg   esi,eax
  409e11:	pop    eax
  409e12:	test   ebp,0x6e6cbb8e
  409e18:	ja     0x409dcd
  409e1a:	sub    DWORD PTR [edx+0x31],0xffffffc8
  409e1e:	not    BYTE PTR [eax-0x10]
  409e21:	outs   dx,DWORD PTR ds:[esi]
  409e22:	jmp    0x409dc4
  409e24:	add    BYTE PTR [ecx],dh
  409e26:	add    al,0x68
  409e28:	xor    esi,DWORD PTR [eax+0x3]
  409e2b:	or     BYTE PTR [ecx+0x20],0x55
  409e2f:	call   DWORD PTR [esi+0x77]
  409e32:	inc    ebx
  409e33:	je     0x409e64
  409e35:	and    ah,dl
  409e37:	(bad)  
  409e38:	mov    esp,0x60e96b63
  409e3d:	jmp    0x409dc1
  409e3f:	push   eax
  409e40:	loope  0x409e24
  409e42:	clc    
  409e43:	pop    es
  409e44:	sbb    eax,ebx
  409e46:	cmp    edi,0xce3ec826
  409e4c:	push   ds
  409e4d:	retf   
  409e4e:	imul   esi,DWORD PTR [esi],0xffffffe7
  409e51:	ret    0x6882
  409e54:	bound  esp,QWORD PTR [ecx-0x42f8003c]
  409e5a:	psubsb mm5,mm1
  409e5d:	and    BYTE PTR [ebx-0x46f69e01],al
  409e63:	and    BYTE PTR [ecx+edx*1+0x11],0x4b
  409e68:	out    0x79,eax
  409e6a:	push   ss
  409e6b:	ins    BYTE PTR es:[edi],dx
  409e6c:	cmp    ecx,DWORD PTR [ebx+0xe]
  409e6f:	adc    esi,0xfffffff3
  409e72:	hlt    
  409e73:	imul   eax,DWORD PTR [eax],0x23
  409e76:	dec    ebx
  409e77:	inc    BYTE PTR [edx+0x3e146f8]
  409e7d:	fs mov ?,ebp
  409e80:	xchg   ch,ch
  409e82:	je     0x409ed7
  409e84:	add    al,0x1b
  409e86:	pop    es
  409e87:	fdivp  st(0),st
  409e89:	cs jno 0x409ea9
  409e8c:	dec    edi
  409e8d:	sahf   
  409e8e:	jns    0x409ef0
  409e90:	enter  0xf09a,0xeb
  409e94:	add    al,0x31
  409e96:	or     ecx,edx
  409e98:	or     DWORD PTR [edi+0x79],esi
  409e9b:	mov    dh,0x8c
  409e9d:	hlt    
  409e9e:	add    BYTE PTR [ecx+0x8],0x30
  409ea2:	or     ecx,ebp
  409ea4:	and    ah,0x80
  409ea7:	xchg   ecx,eax
  409ea8:	test   BYTE PTR [eax+0x710ee908],ch
  409eae:	hlt    
  409eaf:	hlt    
  409eb0:	inc    eax
  409eb1:	sub    eax,0xc603e908
  409eb6:	or     edi,DWORD PTR [esi-0x8]
  409eb9:	ds jns 0x409eb8
  409ebc:	or     ecx,DWORD PTR [ecx-0x70]
  409ebf:	outs   dx,DWORD PTR ds:[esi]
  409ec0:	xor    BYTE PTR [esi],0x6d
  409ec3:	icebp  
  409ec4:	and    BYTE PTR [ecx+esi*2+0x78f4c251],0x56
  409ecc:	in     eax,dx
  409ecd:	push   esi
  409ece:	popa   
  409ecf:	stc    
  409ed0:	push   ebp
  409ed1:	push   ss
  409ed2:	jns    0x409e6d
  409ed4:	add    BYTE PTR [ecx+eax*1+0x400f151],0x79
  409edc:	add    BYTE PTR [esi],dh
  409ede:	or     al,0x13
  409ee0:	call   0xffb8fbce
  409ee5:	bnd jb 0x409ee5
  409ee8:	adc    edx,DWORD PTR [ecx-0x16bf262d]
  409eee:	add    dh,BYTE PTR [ecx-0x74]
  409ef1:	cmp    BYTE PTR [ebx-0x36f9af88],dh
  409ef7:	adc    al,ch
  409ef9:	scas   al,BYTE PTR es:[edi]
  409efa:	mov    al,0x78
  409efc:	inc    DWORD PTR [ebx+0x18e16117]
  409f02:	mov    bl,0x78
  409f04:	or     ebp,DWORD PTR [ecx+0x3e681ca9]
  409f0a:	or     cl,0xff
  409f0d:	cmp    BYTE PTR ds:0xb0ced0e6,cl
  409f13:	fsin   
  409f15:	cmp    al,0x3d
  409f17:	popa   
  409f18:	xor    BYTE PTR [edi-0x2a958750],bh
  409f1e:	or     cl,BYTE PTR [ebx-0x2f]
  409f21:	scas   al,BYTE PTR es:[edi]
  409f22:	mov    al,0x4
  409f24:	rcr    BYTE PTR ds:0x385ee149,0x72
  409f2b:	js     0x409f7c
  409f2d:	add    DWORD PTR [ebx+0x7d8eff59],0xdaf17577
  409f37:	sbb    esi,edi
  409f39:	jle    0x409eeb
  409f3b:	jecxz  0x409f3c
  409f3d:	add    BYTE PTR [eax],al
  409f3f:	dec    ebp
  409f40:	fld    DWORD PTR [eax-0x17]
  409f43:	dec    edx
  409f44:	not    BYTE PTR [eax-0x58]
  409f47:	xor    bh,BYTE PTR [eax+0x35]
  409f4a:	sahf   
  409f4b:	cmc    
  409f4c:	enter  0x40ff,0x4
  409f50:	dec    eax
  409f51:	dec    DWORD PTR [esi-0x3]
  409f54:	jbe    0x409fcb
  409f56:	add    BYTE PTR [eax],al
  409f58:	in     al,0xf0
  409f5a:	std    
  409f5b:	inc    edi
  409f5c:	mov    ch,BYTE PTR [edx+0x0]
  409f5f:	lock jl 0x409fb2
  409f62:	inc    ecx
  409f63:	or     BYTE PTR [ebp+edi*2+0x51],ah
  409f67:	cdq    
  409f68:	or     edi,edi
  409f6a:	xor    eax,0x404587
  409f6f:	xor    BYTE PTR [esi],bh
  409f71:	sar    bh,1
  409f73:	daa    
  409f74:	push   es
  409f75:	shl    BYTE PTR [esi+ebp*8-0x7e],0x45
  409f7a:	hlt    
  409f7b:	(bad)  
  409f7c:	jle    0x409f71
  409f7e:	(bad)  
  409f7f:	cmp    eax,0xc5b1e804
  409f84:	mov    bh,bh
  409f86:	dec    DWORD PTR ds:0xd501e7f1
  409f8c:	mov    bh,bh
  409f8e:	push   0xffffff88
  409f90:	arpl   WORD PTR [edi+0x51],sp
  409f93:	dec    ecx
  409f94:	or     eax,0x4c29a168
  409f99:	(bad)  
  409f9a:	(bad)  
  409f9b:	jge    0x409fe5
  409f9d:	dec    eax
  409f9e:	inc    ecx
  409f9f:	mov    bl,ah
  409fa1:	add    eax,edx
  409fa3:	add    bh,al
  409fa5:	mov    BYTE PTR [eax-0x1],dl
  409fa8:	dec    ebp
  409fa9:	add    eax,0x88c5a0e8
  409fae:	jmp    FWORD PTR [edx+0x48]
  409fb1:	arpl   WORD PTR [edx+0x51],si
  409fb4:	or     DWORD PTR ds:0x4c29a168,ecx
  409fba:	(bad)  
  409fbb:	(bad)  
  409fbc:	jge    0x40a006
  409fbe:	dec    eax
  409fbf:	inc    ecx
  409fc0:	dec    eax
  409fc1:	jecxz  0x409fa4
  409fc3:	iret   
  409fc4:	(bad)  
  409fc5:	mov    BYTE PTR [ebx],cl
  409fc7:	ror    BYTE PTR [ecx+edx*1],0x89
  409fcb:	inc    ebp
  409fcc:	jl     0x409f57
  409fce:	jne    0x409fc4
  409fd0:	xor    edi,ebx
  409fd2:	cmc    
  409fd3:	pop    es
  409fd4:	or     DWORD PTR [ecx+0x7e],eax
  409fd7:	dec    DWORD PTR [esi]
  409fd9:	shl    ch,1
  409fdb:	repz sbb ecx,esi
  409fde:	dec    esi
  409fdf:	(bad)  
  409fe0:	dec    BYTE PTR [edx+0x3]
  409fe3:	push   0xffc29189
  409fe8:	push   esi
  409fe9:	scas   al,BYTE PTR es:[edi]
  409fea:	rol    BYTE PTR [eax+0x31],cl
  409fed:	cwde   
  409fee:	add    eax,0x6ae03100
  409ff3:	mov    dl,0xe6
  409ff5:	pop    es
  409ff6:	adc    BYTE PTR [eax-0x32],0xf5
  409ffa:	or     ch,al
  409ffc:	popa   
  409ffd:	jne    0x40a07e
  409fff:	dec    DWORD PTR [ebx+0x60]
  40a002:	jmp    0x40a076
  40a004:	pusha  
  40a005:	mov    eax,ds:0x2f006803
  40a00a:	xor    ebp,eax
  40a00c:	dec    DWORD PTR [esi]
  40a00e:	bound  eax,QWORD PTR [ebx]
  40a010:	add    BYTE PTR [ecx-0x69306cb8],dh
  40a016:	inc    edi
  40a017:	or     eax,eax
  40a019:	add    eax,0x7d458c56
  40a01e:	mov    bh,0xf9
  40a020:	repz jle 0x40a058
  40a023:	or     al,0xe8
  40a025:	and    BYTE PTR [ebp+0x156eff7f],ah
  40a02b:	js     0x40a015
  40a02d:	shl    BYTE PTR [ebx+0x5fcbff7f],1
  40a033:	jmp    0x40a09c
  40a035:	add    BYTE PTR [ecx],ah
  40a037:	add    al,0x68
  40a039:	nop
  40a03a:	adc    ebp,eax
  40a03c:	dec    esi
  40a03e:	popa   
  40a03f:	add    eax,DWORD PTR [eax]
  40a041:	mov    cl,0x88
  40a043:	jecxz  0x40a013
  40a045:	ss out 0xd3,eax
  40a048:	(bad)  
  40a049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a04a:	or     ecx,esi
  40a04c:	imul   esi,DWORD PTR [eax],0x74
  40a04f:	pop    esi
  40a050:	jg     0x409fdd
  40a052:	or     ecx,eax
  40a054:	repnz or eax,0xd7d1ebe8
  40a05b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a05c:	add    ebx,DWORD PTR [ecx-0x4efc16f5]
  40a062:	pusha  
  40a063:	lods   eax,DWORD PTR ds:[esi]
  40a064:	dec    esi
  40a065:	div    BYTE PTR [ebp-0x1e]
  40a068:	inc    ebx
  40a069:	gs pop ds
  40a06b:	jo     0x40a036
  40a06d:	add    dl,ah
  40a06f:	jne    0x40a005
  40a071:	ja     0x40a051
  40a073:	sti    
  40a074:	loopne 0x40a0e1
  40a076:	repz je 0x40a087
  40a079:	jg     0x40a049
  40a07b:	sti    
  40a07c:	cld    
  40a07d:	imul   esp,DWORD PTR [ebx],0x45
  40a080:	(bad)  
  40a081:	jle    0x40a041
  40a083:	sti    
  40a084:	hlt    
  40a085:	jle    0x40a0c3
  40a087:	add    DWORD PTR [ecx],eax
  40a089:	mov    DWORD PTR [eax+0x75],edi
  40a08c:	out    0x4c,al
  40a08e:	jae    0x40a09c
  40a090:	jmp    0x41a54c6d
  40a095:	add    al,0x31
  40a097:	data16 (bad) 
  40a099:	jle    0x40a09f
  40a09b:	add    eax,0x612ef8c6
  40a0a0:	mov    esp,0xa0757e74
  40a0a5:	inc    ecx
  40a0a6:	sub    DWORD PTR [ecx],ecx
  40a0a8:	adc    al,0x8b
  40a0aa:	pop    ebp
  40a0ab:	xchg   DWORD PTR [ebp-0x618a9849],ebp
  40a0b1:	inc    esi
  40a0b2:	mov    ah,0xb0
  40a0b4:	xchg   edi,eax
  40a0b5:	jle    0x40a10d
  40a0b7:	or     cl,ch
  40a0b9:	add    esi,DWORD PTR [ecx]
  40a0bb:	sub    BYTE PTR [eax+edx*1],0x3a
  40a0bf:	dec    ecx
  40a0c0:	cmc    
  40a0c1:	or     BYTE PTR [ecx+0x39e90030],dh
  40a0c7:	or     al,0xe9
  40a0c9:	adc    BYTE PTR [ecx+ecx*1],dh
  40a0cc:	add    BYTE PTR [esi+0x29],ah
  40a0cf:	add    eax,ebp
  40a0d1:	stc    
  40a0d2:	add    BYTE PTR [edi+0x72e2ff74],al
  40a0d8:	dec    BYTE PTR [esi]
  40a0da:	shr    DWORD PTR [edi-0x3c],0x40
  40a0de:	jmp    0x514c9f6a
  40a0e3:	in     al,dx
  40a0e4:	inc    ebx
  40a0e5:	push   DWORD PTR [esi]
  40a0e7:	mov    eax,DWORD PTR [esi]
  40a0e9:	push   0xffc9ff45
  40a0ee:	and    eax,0xdee800e9
  40a0f3:	outs   dx,DWORD PTR ds:[esi]
  40a0f4:	je     0x40a0f5
  40a0f6:	pusha  
  40a0f7:	test   eax,0x4f0efeb1
  40a0fc:	loope  0x40a13b
  40a0fe:	call   0x64cdaa35
  40a103:	jo     0x40a178
  40a105:	push   esi
  40a107:	jecxz  0x40a175
  40a109:	mov    bh,0x22
  40a10b:	das    
  40a10c:	je     0x40a09b
  40a10e:	ins    BYTE PTR es:[edi],dx
  40a10f:	repz jb 0x40a111
  40a112:	fiadd  WORD PTR [ebp+0x1791b573]
  40a118:	je     0x40a119
  40a11a:	rcr    DWORD PTR [edx],0xbb
  40a11d:	add    cl,ch
  40a11f:	mov    ebx,0xfcbfbc8e
  40a124:	jae    0x40a166
  40a126:	out    0xae,al
  40a128:	jo     0x40a12a
  40a12a:	jmp    0xabd62761
  40a12f:	out    0x73,eax
  40a131:	call   DWORD PTR [esi-0x16ffe6cd]
  40a137:	add    BYTE PTR [edx],dh
  40a139:	std    
  40a13a:	fs pop esp
  40a13c:	jae    0x40a15e
  40a13e:	push   eax
  40a13f:	add    BYTE PTR [eax],ah
  40a141:	iret   
  40a142:	dec    esi
  40a143:	inc    ecx
  40a144:	dec    eax
  40a145:	loopne 0x40a10c
  40a147:	mov    dh,0x48
  40a149:	or     BYTE PTR [ebx],cl
  40a14b:	shl    BYTE PTR ds:0x18b1e90b,0x8
  40a152:	add    BYTE PTR [ebp-0x2385b],cl
  40a158:	jg     0x40a0de
  40a15a:	inc    edx
  40a15b:	sub    al,0xc8
  40a15d:	pop    edi
  40a15e:	fisttp DWORD PTR [edi-0x27]
  40a161:	pop    es
  40a162:	call   0x4e2810
  40a167:	or     ecx,DWORD PTR [eax+0x7c]
  40a16a:	add    al,0xe9
  40a16c:	test   BYTE PTR ds:0x90c00000,cl
  40a172:	dec    eax
  40a173:	inc    ecx
  40a174:	enter  0x74f4,0xc
  40a178:	xor    BYTE PTR [edi-0x7bc00032],ch
  40a17e:	xchg   ebp,eax
  40a17f:	ret    0xf62e
  40a182:	dec    BYTE PTR [ebp+0x5052239a]
  40a188:	xor    bl,dh
  40a18a:	int    0xff
  40a18c:	lahf   
  40a18d:	push   edi
  40a18e:	(bad)  
  40a18f:	jne    0x40a139
  40a191:	push   edi
  40a192:	(bad)  
  40a193:	jne    0x40a135
  40a195:	fist   WORD PTR [ecx]
  40a197:	(bad)  
  40a198:	jg     0x40a18e
  40a19a:	out    0xf9,eax
  40a19c:	add    dl,dl
  40a19e:	hlt    
  40a19f:	(bad)  
  40a1a0:	jmp    0x40a19d
  40a1a2:	add    DWORD PTR [edx+0x2c],0x1
  40a1a6:	mov    esi,DWORD PTR [esi+edi*8-0x12980b41]
  40a1ad:	dec    ecx
  40a1ae:	dec    eax
  40a1af:	(bad)  
  40a1b0:	inc    BYTE PTR ds:0xbffffebc
  40a1b6:	fist   WORD PTR [ecx-0x49]
  40a1b9:	xor    DWORD PTR [edx+0x3],esp
  40a1bc:	or     esi,DWORD PTR [ecx+0x1d]
  40a1bf:	(bad)  
  40a1c0:	stos   BYTE PTR es:[di],al
  40a1c2:	cmp    ebx,eax
  40a1c4:	(bad)  
  40a1c5:	aas    
  40a1c6:	jl     0x40a1d7
  40a1c8:	call   0xffbd4d92
  40a1cd:	cs ds mov bh,0xfe
  40a1d1:	es in  al,dx
  40a1d3:	shl    bh,cl
  40a1d5:	in     eax,0x22
  40a1d7:	jl     0x40a1d8
  40a1d9:	xor    DWORD PTR [eax+0x60217d80],0x3c990cf7
  40a1e3:	rol    BYTE PTR [eax+0x31],cl
  40a1e6:	nop
  40a1e7:	imul   esp,DWORD PTR [edx],0xffffffbe
  40a1ea:	pusha  
  40a1eb:	add    ebp,ebx
  40a1ed:	xor    al,0xf8
  40a1ef:	add    DWORD PTR [eax],eax
  40a1f1:	xor    DWORD PTR [eax-0x27],esp
  40a1f4:	or     dh,cl
  40a1f6:	pushf  
  40a1f7:	or     dl,BYTE PTR [edx-0x2a]
  40a1fa:	xchg   ebp,eax
  40a1fb:	or     ebp,eax
  40a1fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1fe:	add    bh,BYTE PTR [edi+edi*8+0x0]
  40a202:	(bad)  
  40a204:	dec    eax
  40a205:	(bad)  
  40a206:	mov    esi,0xb7c285e5
  40a20b:	jnp    0x40a288
  40a20d:	push   eax
  40a20e:	scas   al,BYTE PTR es:[edi]
  40a20f:	cmp    eax,0x6ba6febf
  40a214:	ins    BYTE PTR es:[edi],dx
  40a215:	add    bh,ah
  40a217:	pusha  
  40a218:	add    eax,DWORD PTR [ebp+0x10806b71]
  40a21e:	mov    es,WORD PTR [ebx+0x7b]
  40a221:	(bad)  
  40a222:	mov    esp,0x7eff7a8c
  40a227:	pop    eax
  40a228:	ja     0x40a1df
  40a22a:	xor    DWORD PTR [eax+0x7a],esp
  40a22d:	mov    ch,0xa9
  40a22f:	mov    ds:0x959ff7b,al
  40a234:	or     eax,0xb0725e4e
  40a239:	inc    esi
  40a23a:	and    eax,0x5d8f3c09
  40a23f:	xchg   BYTE PTR [ebp-0x7b339188],ah
  40a245:	add    al,0x31
  40a247:	or     ecx,ebp
  40a249:	jp     0x40a207
  40a24b:	add    al,0x81
  40a24d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a24e:	push   DWORD PTR [ecx+0x6e]
  40a251:	psllw  mm7,mm4
  40a254:	add    cl,BYTE PTR [ebp-0xea18a8c]
  40a25a:	es jb  0x40a239
  40a25d:	ja     0x40a278
  40a25f:	push   ecx
  40a260:	sbb    al,0x7b
  40a262:	push   es
  40a263:	fld    DWORD PTR [ebp-0xf]
  40a266:	add    dl,bh
  40a268:	pusha  
  40a269:	stc    
  40a26a:	dec    ebp
  40a26b:	div    BYTE PTR [ecx+0x66]
  40a26e:	shr    edx,0xde
  40a271:	out    0x7a,eax
  40a273:	pop    esp
  40a274:	jne    0x40a29c
  40a276:	icebp  
  40a277:	ss popa 
  40a279:	aad    0x79
  40a27b:	(bad)  
  40a27c:	jno    0x40a294
  40a27e:	icebp  
  40a27f:	retf   0xf160
  40a282:	dec    ebp
  40a283:	(bad)  
  40a284:	jno    0x40a2b6
  40a286:	inc    esi
  40a287:	sub    eax,0xc58e9409
  40a28c:	xchg   DWORD PTR ds:0xee71af74,ebp
  40a292:	in     eax,dx
  40a293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a294:	fucomip st,st(1)
  40a296:	jp     0x40a2bc
  40a298:	add    ecx,edx
  40a29a:	xor    ch,BYTE PTR [esi+0x71]
  40a29d:	(bad)  
  40a29e:	mov    esp,?
  40a2a0:	je     0x40a2e3
  40a2a2:	add    BYTE PTR [eax],dh
  40a2a4:	or     ecx,ebp
  40a2a6:	mov    BYTE PTR [ecx+edi*2-0x27898541],dh
  40a2ad:	inc    eax
  40a2af:	mov    ecx,0x37e900bb
  40a2b4:	dec    ecx
  40a2b5:	(bad)  
  40a2b7:	xchg   edi,eax
  40a2b8:	or     BYTE PTR [eax],al
  40a2ba:	jmp    0xe941afd8
  40a2bf:	xor    al,BYTE PTR [edx]
  40a2c1:	xchg   DWORD PTR [ecx+0x32],esi
  40a2c4:	or     DWORD PTR [eax],eax
  40a2c6:	adc    ecx,edx
  40a2c8:	xlat   BYTE PTR ds:[ebx]
  40a2c9:	inc    eax
  40a2ca:	jmp    0xf7cc4bcf
  40a2cf:	ja     0x40a27c
  40a2d1:	jo     0x40a323
  40a2d3:	adc    DWORD PTR [eax],0xad66ff3e
  40a2d9:	xchg   al,dh
  40a2db:	pop    edi
  40a2dc:	fwait
  40a2dd:	jo     0x40a2de
  40a2df:	pushf  
  40a2e0:	sub    BYTE PTR [edi-0x1],0x4e
  40a2e4:	sbb    cl,BYTE PTR ds:0x7e32e901
  40a2ea:	test   DWORD PTR [esi],esi
  40a2ec:	js     0x40a35e
  40a2ee:	call   FWORD PTR [ecx-0x57b77226]
  40a2f4:	xor    ah,cl
  40a2f6:	clc    
  40a2f7:	mov    eax,0x1b6770f5
  40a2fc:	std    
  40a2fd:	leave  
  40a2fe:	inc    DWORD PTR [eax]
  40a300:	div    DWORD PTR [ebp+0x4937e900]
  40a306:	je     0x40a2e0
  40a308:	int3   
  40a309:	jo     0x40a297
  40a30b:	fs inc ebx
  40a30d:	outs   dx,DWORD PTR ds:[esi]
  40a30e:	push   esi
  40a310:	sub    DWORD PTR [edi+0x75],0xffffffe1
  40a314:	sbb    dl,BYTE PTR [ebx+0x7018e6fd]
  40a31a:	mov    ch,0xd9
  40a31c:	sbb    esi,DWORD PTR [eax-0x1]
  40a31f:	inc    ecx
  40a320:	xor    DWORD PTR [edx],ecx
  40a322:	add    cl,ch
  40a324:	scas   eax,DWORD PTR es:[edi]
  40a325:	xchg   bh,dh
  40a327:	add    BYTE PTR [esi-0xe],dh
  40a32a:	(bad)  
  40a32b:	push   eax
  40a32c:	loopne 0x40a2c5
  40a32e:	dec    eax
  40a32f:	inc    ecx
  40a330:	add    BYTE PTR [eax+0x64],bl
  40a333:	cld    
  40a334:	push   ecx
  40a335:	sbb    DWORD PTR ds:0x4c19f268,eax
  40a33b:	jmp    edi
  40a33d:	pusha  
  40a33e:	lahf   
  40a33f:	add    BYTE PTR [eax],al
  40a341:	push   ebx
  40a342:	int3   
  40a343:	jae    0x40a356
  40a345:	xor    al,BYTE PTR ds:0xf2bf858d
  40a34b:	(bad)  
  40a34c:	call   FWORD PTR [eax]
  40a34e:	bnd je 0x40a359
  40a351:	mov    al,0x51
  40a353:	cld    
  40a354:	call   DWORD PTR [edi-0x690f4b0e]
  40a35a:	repnz (bad) 
  40a35c:	call   0x3f6629
  40a361:	repnz sbb al,0xe8
  40a364:	xchg   ecx,eax
  40a365:	and    eax,0x480bfef2
  40a36a:	jns    0x40a387
  40a36c:	push   0x405c1b
  40a371:	enter  0x1ce3,0xcd
  40a375:	pop    ss
  40a376:	repnz dec edi
  40a378:	push   0xffffffc8
  40a37a:	pop    ebx
  40a37b:	(bad)  
  40a37c:	jne    0x40a35e
  40a37e:	jecxz  0x40a3b1
  40a380:	std    
  40a381:	daa    
  40a382:	repnz out 0x19,eax
  40a385:	adc    edx,esi
  40a387:	(bad)  
  40a388:	push   0x405c0a
  40a38d:	mov    ds:0x9075ff0d,al
  40a392:	jecxz  0x40a33d
  40a394:	inc    BYTE PTR [eax]
  40a396:	xchg   edi,eax
  40a397:	lock addr16 ret 0x4c59
  40a39c:	jmp    FWORD PTR [ecx+0x2b]
  40a39f:	bnd je 0x40a3aa
  40a3a2:	xor    DWORD PTR [edx-0x64],ecx
  40a3a5:	inc    BYTE PTR [esi-0x1f3e14c2]
  40a3ab:	and    BYTE PTR [edx+ebp*2],al
  40a3ae:	adc    eax,0x5907eeaf
  40a3b3:	in     eax,0x78
  40a3b5:	jmp    DWORD PTR [esi-0x62]
  40a3b8:	out    dx,al
  40a3b9:	sti    
  40a3ba:	pop    esi
  40a3bb:	or     al,0xc
  40a3bd:	call   0xffb94bb8
  40a3c2:	js     0x40a367
  40a3c4:	(bad)  
  40a3c5:	(bad)  
  40a3c6:	fucomp st(2)
  40a3c8:	pushw  0x6231
  40a3cc:	push   0x77436be
  40a3d1:	jmp    DWORD PTR [eax+ebp*2-0x1fe82895]
  40a3d8:	ja     0x40a3a3
  40a3da:	repz js 0x40a3e0
  40a3dd:	push   ebp
  40a3de:	stos   BYTE PTR es:[edi],al
  40a3df:	mov    esp,0x2009c483
  40a3e4:	mov    esi,0x36031fb
  40a3e9:	add    BYTE PTR [ebp+ebx*4+0x5c895077],ch
  40a3f0:	aad    0x40
  40a3f2:	xor    DWORD PTR [edi],esi
  40a3f4:	out    dx,al
  40a3f5:	or     esp,esi
  40a3f7:	jne    0x40a3b1
  40a3f9:	dec    eax
  40a3fa:	add    BYTE PTR [eax+0x60],dh
  40a3fd:	imul   edi,DWORD PTR [edx+0xb780fea],0xfffffff1
  40a404:	mov    WORD PTR [ecx],ds
  40a406:	mov    DWORD PTR [eax+ebx*1-0x15],ebp
  40a40a:	add    BYTE PTR [ecx],dh
  40a40c:	pop    ss
  40a40d:	mov    ecx,0x776c3cff
  40a412:	jne    0x40a3bd
  40a414:	ja     0x40a403
  40a416:	pop    es
  40a417:	cdq    
  40a418:	mov    al,ds:0x99eff69
  40a41d:	out    0xf1,al
  40a41f:	sahf   
  40a420:	popa   
  40a421:	imul   ecx,DWORD PTR [esi+ecx*4+0x6e],0x93942a0
  40a429:	xor    al,0x8b
  40a42b:	lea    ecx,[eax+0x6e77b0ad]
  40a431:	mov    esi,0xb7b1b43f
  40a436:	ja     0x40a49e
  40a438:	or     ecx,ebp
  40a43a:	add    esi,DWORD PTR [ecx]
  40a43c:	sub    BYTE PTR [eax+ecx*1],0x2a
  40a440:	dec    ecx
  40a441:	adc    eax,0xe931b101
  40a446:	lock sub eax,0x3104e560
  40a44c:	or     DWORD PTR [esi-0xb91d90f],eax
  40a452:	pop    es
  40a453:	sbb    DWORD PTR [ebp-0x5e],ebx
  40a456:	ja     0x40a47e
  40a458:	fstp   DWORD PTR [eax]
  40a45a:	ja     0x40a400
  40a45c:	add    DWORD PTR [ecx-0x22],edx
  40a45f:	add    BYTE PTR [edi],dl
  40a461:	outs   dx,BYTE PTR ds:[esi]
  40a462:	pop    esi
  40a463:	ins    BYTE PTR es:[edi],dx
  40a464:	dec    edi
  40a465:	inc    ecx
  40a466:	push   esi
  40a467:	ja     0x40a402
  40a469:	dec    esi
  40a46a:	sahf   
  40a46b:	(bad)  
  40a46c:	(bad)  
  40a46d:	outs   dx,BYTE PTR ds:[esi]
  40a46e:	mov    esp,0x32590907
  40a473:	ja     0x40a463
  40a475:	jg     0x40a4e3
  40a477:	mov    esp,0xec2e6de7
  40a47c:	sbb    al,0x8
  40a47e:	jmp    0x2bc44886
  40a483:	jbe    0x40a453
  40a485:	ins    DWORD PTR es:[edi],dx
  40a486:	mov    ecx,0xe41796b
  40a48b:	ja     0x40a439
  40a48d:	sub    DWORD PTR [ebx],0x76
  40a490:	mov    dh,0x6d
  40a492:	cdq    
  40a493:	jbe    0x40a479
  40a495:	mov    al,0x0
  40a497:	neg    DWORD PTR [edi]
  40a499:	outs   dx,BYTE PTR ds:[esi]
  40a49a:	call   0x498812
  40a49f:	jo     0x40a452
  40a4a1:	lods   al,BYTE PTR ds:[esi]
  40a4a2:	(bad)  
  40a4a3:	fiadd  WORD PTR [edi]
  40a4a5:	leave  
  40a4a6:	push   cs
  40a4a7:	ins    DWORD PTR es:[edi],dx
  40a4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4a9:	or     BYTE PTR [eax],al
  40a4ab:	jmp    0xc8033859
  40a4b0:	jmp    FWORD PTR [ebp-0x9]
  40a4b3:	jmp    0x40a4f7
  40a4b5:	or     DWORD PTR [eax],eax
  40a4b7:	jmp    0x54cd9e12
  40a4bc:	lock outs dx,BYTE PTR ds:[esi]
  40a4be:	jmp    DWORD PTR [esi+0x392bcaa9]
  40a4c4:	add    BYTE PTR [ebp+0x4f],bl
  40a4c7:	dec    edi
  40a4c8:	sub    BYTE PTR ds:0x325a5161,ch
  40a4ce:	or     DWORD PTR [ebx],ecx
  40a4d0:	test   eax,0x23eb0741
  40a4d5:	mov    eax,0x9f77c296
  40a4da:	ins    BYTE PTR es:[edi],dx
  40a4db:	lea    ebp,[ebx]
  40a4dd:	dec    ecx
  40a4de:	fldenv [edi+0x45]
  40a4e1:	out    dx,eax
  40a4e2:	leave  
  40a4e3:	call   DWORD PTR [eax+0x5f]
  40a4e6:	mov    eax,0x493be900
  40a4eb:	jne    0x40a4d8
  40a4ed:	mov    ecx,ecx
  40a4ef:	mov    WORD PTR [eax+esi*2+0x6b],ds
  40a4f3:	(bad)  
  40a4f4:	ds mov ecx,0xb1602bc7
  40a4fa:	mov    ch,0xfe
  40a4fc:	cs addr16 loope 0x40a49a
  40a500:	mov    cl,0xed
  40a502:	ins    BYTE PTR es:[edi],dx
  40a503:	(bad)  
  40a504:	xchg   esp,eax
  40a505:	ss popa 
  40a507:	cmp    al,0x22
  40a509:	aas    
  40a50a:	ins    BYTE PTR es:[edi],dx
  40a50b:	call   DWORD PTR [esi+ecx*4+0x6b]
  40a50f:	inc    DWORD PTR [eax]
  40a511:	das    
  40a512:	pop    eax
  40a513:	out    0x84,eax
  40a515:	arpl   bx,si
  40a517:	(bad)  
  40a518:	jmp    DWORD PTR ds:0x23e85018
  40a51e:	mov    edi,0x5558fffe
  40a523:	(bad)  
  40a524:	jne    0x40a4a6
  40a526:	loopne 0x40a4c8
  40a528:	inc    BYTE PTR [eax]
  40a52a:	pop    edi
  40a52b:	mul    bh
  40a52d:	jns    0x40a506
  40a52f:	idiv   dh
  40a531:	lea    eax,ds:0xaffffdc7
  40a537:	push   ebp
  40a538:	(bad)  
  40a539:	mov    ch,0xdc
  40a53b:	repnz (bad) 
  40a53d:	push   DWORD PTR [eax-0x34]
  40a540:	mov    cl,0x0
  40a542:	dec    eax
  40a543:	jmp    0x40a504
  40a545:	pmullw mm5,QWORD PTR [eax-0x2]
  40a549:	call   FWORD PTR [edi-0x51434b0a]
  40a54f:	idiv   dh
  40a551:	call   0x415ce6
  40a556:	scas   eax,DWORD PTR es:[edi]
  40a557:	pushf  
  40a558:	mov    eax,0xe7f69ffe
  40a55d:	dec    ecx
  40a55e:	xlat   BYTE PTR ds:[ebx]
  40a55f:	cmc    
  40a560:	dec    cl
  40a562:	dec    edx
  40a563:	add    DWORD PTR [eax],eax
  40a565:	push   ebp
  40a566:	and    ecx,0xffffff82
  40a569:	les    ebx,FWORD PTR [esi+esi*8+0x74]
  40a56d:	or     al,0x70
  40a56f:	xchg   bl,cl
  40a571:	jmp    FWORD PTR [edi-0x80]
  40a574:	inc    ebp
  40a575:	cld    
  40a576:	jecxz  0x40a53f
  40a578:	push   cs
  40a579:	test   BYTE PTR [ebp+eax*1+0x0],cl
  40a57d:	add    al,dh
  40a57f:	dec    ecx
  40a580:	push   edx
  40a581:	inc    ecx
  40a582:	enter  0x74f4,0xfc
  40a586:	and    BYTE PTR [ebx+0x1331ffca],dh
  40a58c:	aam    0x67
  40a58e:	add    BYTE PTR [edx+0x66ffc2ae],ah
  40a594:	add    ebp,edi
  40a596:	pop    es
  40a597:	cdq    
  40a598:	aad    0x75
  40a59a:	jmp    DWORD PTR [esi-0x6138f6f7]
  40a5a0:	pop    edx
  40a5a1:	jmp    0x40a5f9
  40a5a3:	add    ah,BYTE PTR [ecx]
  40a5a5:	add    al,0xff
  40a5a7:	add    al,0x4e
  40a5a9:	imul   ebx,DWORD PTR [ebp+0x5074527b],0x9
  40a5b0:	out    dx,eax
  40a5b1:	iret   
  40a5b2:	inc    eax
  40a5b3:	xor    DWORD PTR [edx],edx
  40a5b5:	jne    0x40a62c
  40a5b7:	cmp    DWORD PTR [edx-0x10],ebx
  40a5ba:	std    
  40a5bb:	data16 mov dl,0x6b
  40a5be:	jmp    0x2ee1:0x68749a77
  40a5c5:	ret    
  40a5c6:	dec    DWORD PTR [edi+0x14]
  40a5c9:	js     0x40a5b3
  40a5cb:	lds    esp,FWORD PTR [edi+0x9e1ff74]
  40a5d1:	xchg   ecx,eax
  40a5d2:	push   ebx
  40a5d3:	lock popa 
  40a5d5:	sar    esi,cl
  40a5d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5d8:	js     0x40a645
  40a5da:	push   edx
  40a5db:	daa    
  40a5dc:	hlt    
  40a5dd:	jae    0x40a5c7
  40a5df:	call   0x8a401a86
  40a5e4:	test   bh,0x40
  40a5e7:	xor    ebx,ecx
  40a5e9:	in     eax,dx
  40a5ea:	sti    
  40a5eb:	sbb    DWORD PTR [eax-0x4f0100b7],edi
  40a5f1:	jmp    0x40a585
  40a5f3:	add    BYTE PTR [edx-0x5f],ah
  40a5f6:	add    edx,DWORD PTR [eax-0x12]
  40a5f9:	mov    ch,0xb
  40a5fb:	call   0xffb4d820
  40a600:	leave  
  40a601:	mov    BYTE PTR ds:0x2609d6ff,bh
  40a607:	out    dx,al
  40a608:	retf   0x4961
  40a60b:	cmp    eax,0x41206ac6
  40a610:	sub    DWORD PTR [ecx],ecx
  40a612:	mov    ah,0x88
  40a614:	lds    eax,FWORD PTR [esi-0x20f988d3]
  40a61a:	call   0x7caad908
  40a61f:	or     ecx,DWORD PTR [ecx-0x698bd5b8]
  40a625:	sub    BYTE PTR [eax+esi*2],0xba
  40a629:	sub    al,0x2a
  40a62b:	mov    esp,0x336908f1
  40a630:	xor    ebp,esi
  40a632:	adc    esp,ebx
  40a634:	xor    dl,bh
  40a636:	daa    
  40a637:	add    al,0x6
  40a639:	popa   
  40a63a:	lds    esi,FWORD PTR [esi+0x43e20931]
  40a640:	in     eax,0xa
  40a642:	push   ss
  40a643:	pop    esp
  40a644:	sbb    DWORD PTR [ecx-0x5a],ebx
  40a647:	jae    0x40a683
  40a649:	dec    ecx
  40a64a:	adc    eax,0x79e0e118
  40a64f:	xlat   BYTE PTR ds:[ebx]
  40a650:	icebp  
  40a651:	or     BYTE PTR [ecx],bh
  40a653:	jae    0x40a611
  40a655:	add    BYTE PTR [ecx+0x6a2c005b],dl
  40a65b:	jle    0x40a6b9
  40a65d:	ja     0x40a6a2
  40a65f:	jbe    0x40a6d4
  40a661:	sbb    eax,0x16ada936
  40a666:	push   0x66
  40a668:	jae    0x40a66d
  40a66a:	fwait
  40a66b:	and    DWORD PTR [ebx],ecx
  40a66d:	jl     0x40a6b3
  40a66f:	ret    
  40a670:	or     eax,0x5be0f3fe
  40a675:	add    BYTE PTR [ebx+0x46],ch
  40a678:	jae    0x40a6d5
  40a67a:	es ds stc 
  40a67d:	cs popa 
  40a67f:	add    BYTE PTR [esi+0x63],cl
  40a682:	push   0xffffffff
  40a684:	ret    
  40a685:	es push 0x75
  40a688:	icebp  
  40a689:	push   0x4c
  40a68b:	(bad)  
  40a68c:	push   ds
  40a68d:	inc    edx
  40a68e:	fbld   TBYTE PTR ds:0xe801b816
  40a694:	cmp    al,BYTE PTR [ebx+0x6a]
  40a697:	call   DWORD PTR [ecx-0x16bf28b8]
  40a69d:	and    esi,esp
  40a69f:	pop    es
  40a6a0:	add    DWORD PTR [eax+0x6c],ebp
  40a6a3:	(bad)  
  40a6a4:	out    dx,al
  40a6a5:	jp     0x40a66c
  40a6a7:	push   ecx
  40a6a8:	sub    BYTE PTR ds:0xeaf1756a,dh
  40a6ae:	xor    ch,bh
  40a6b0:	(bad)  
  40a6b1:	add    esp,ecx
  40a6b3:	jns    0x40a6f0
  40a6b5:	ins    BYTE PTR es:[edi],dx
  40a6b6:	imul   edi,esi,0x2b616d3c
  40a6bc:	mov    esp,0x6869e300
  40a6c1:	add    DWORD PTR [eax+ecx*8+0x159adff],0x69c007e8
  40a6cc:	call   DWORD PTR [ecx]
  40a6ce:	jecxz  0x40a6a6
  40a6d0:	inc    eax
  40a6d1:	jmp    0x81489a99
  40a6d6:	sbb    eax,0xa86ff6c
  40a6db:	adc    eax,0x682d2853
  40a6e0:	jne    0x40a6c3
  40a6e2:	jp     0x40a6f1
  40a6e4:	std    
  40a6e5:	outs   dx,BYTE PTR ds:[esi]
  40a6e6:	mov    ds:0x83657568,eax
  40a6eb:	fiadd  WORD PTR [edi]
  40a6ed:	push   ecx
  40a6ee:	inc    ecx
  40a6ef:	dec    esp
  40a6f0:	call   DWORD PTR [esi-0x1d]
  40a6f3:	push   ecx
  40a6f4:	ret    0x32e5
  40a6f7:	mov    esi,0x8f84008a
  40a6fc:	jge    0x40a70a
  40a6fe:	fsub   DWORD PTR [eax+0x15]
  40a701:	call   FWORD PTR [ebp-0xb8a0104]
  40a707:	(bad)  [eax+ecx*1+0x20]
  40a70b:	pushf  
  40a70c:	jmp    0x40a70d
  40a70e:	daa    
  40a70f:	(bad)  [esp+ecx*1+0x30]
  40a713:	xchg   edi,eax
  40a714:	(bad)  
  40a717:	and    eax,0x41980cc2
  40a71c:	mov    ch,ah
  40a71e:	sbb    edx,eax
  40a720:	sti    
  40a721:	push   0x0
  40a723:	mov    bl,bl
  40a725:	je     0x40a73b
  40a727:	xchg   DWORD PTR [eax+0xf],esp
  40a72a:	(bad)  
  40a72b:	in     eax,dx
  40a72c:	or     al,ch
  40a72e:	cdq    
  40a72f:	rcr    dl,0xfe
  40a732:	or     ecx,eax
  40a734:	popa   
  40a735:	pop    ebx
  40a736:	mov    DWORD PTR [ebp-0x27],ecx
  40a739:	addr16 add al,0x4c
  40a73c:	dec    esp
  40a73d:	(bad)  
  40a73e:	(bad)  
  40a73f:	sbb    eax,0x910ce7d9
  40a744:	(bad)  
  40a746:	push   0xbeef0c48
  40a74b:	or     dl,bl
  40a74d:	je     0x40a757
  40a74f:	mov    al,ds:0xa7ffffb0
  40a754:	inc    ebp
  40a755:	push   cs
  40a756:	push   esp
  40a757:	or     DWORD PTR ds:0xc4b475ff,ecx
  40a75d:	lock enter 0xdaa7,0x67
  40a762:	add    DWORD PTR [eax],ecx
  40a764:	jmp    0x60c7f826
  40a769:	pop    es
  40a76a:	call   0x3f81f1
  40a76f:	loopne 0x40a786
  40a771:	push   esp
  40a772:	inc    ecx
  40a773:	xor    DWORD PTR [edx+0x70],esi
  40a776:	jne    0x40a76d
  40a778:	leave  
  40a779:	pop    ecx
  40a77a:	enter  0xceee,0xdb
  40a77e:	add    DWORD PTR [ecx],esi
  40a780:	xlat   BYTE PTR ds:[ebx]
  40a781:	mov    cl,0x50
  40a783:	fisub  WORD PTR [ebx+edi*8+0x374600e7]
  40a78a:	jno    0x40a78b
  40a78c:	into   
  40a78d:	test   BYTE PTR [edi-0x18],ch
  40a790:	adc    BYTE PTR ds:0x33e8ff71,ch
  40a796:	adc    al,0x0
  40a798:	pop    esp
  40a799:	jmp    0x40a7fa
  40a79b:	push   0xffc28656
  40a7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7a1:	fdiv   st(6),st
  40a7a3:	out    0xcd,eax
  40a7a5:	sub    DWORD PTR [ecx-0x1],esi
  40a7a8:	xchg   esi,eax
  40a7a9:	fcom   QWORD PTR [edx]
  40a7ab:	push   eax
  40a7ac:	cdq    
  40a7ad:	inc    esi
  40a7ae:	cmp    edi,edi
  40a7b0:	xchg   BYTE PTR [esi-0xa],al
  40a7b3:	adc    esp,ecx
  40a7b5:	test   BYTE PTR ds:[edi],0x89
  40a7b9:	pop    ss
  40a7ba:	jno    0x40a7bb
  40a7bc:	outs   dx,BYTE PTR ds:[esi]
  40a7bd:	mov    ecx,0x71f05434
  40a7c2:	jo     0x40a839
  40a7c4:	sub    eax,0x56c87d4a
  40a7c9:	mov    dh,0x70
  40a7cb:	jne    0x40a7ee
  40a7cd:	and    bl,BYTE PTR [ebp+edx*8+0x79]
  40a7d1:	xchg   BYTE PTR [eax-0x1],dh
  40a7d4:	les    esp,FWORD PTR [ebp-0x2d]
  40a7d7:	(bad)  
  40a7d8:	mov    esp,0x2e1c5b69
  40a7dd:	nop
  40a7de:	jo     0x40a7a9
  40a7e0:	repz inc eax
  40a7e2:	add    edx,DWORD PTR [ebp-0x56]
  40a7e5:	mov    WORD PTR [esp+eax*8+0xbf5f815],es
  40a7ec:	add    BYTE PTR [ecx],bl
  40a7ee:	or     al,BYTE PTR ds:0xf267063b
  40a7f4:	inc    ebx
  40a7f5:	test   ebx,edx
  40a7f7:	pop    edi
  40a7f8:	(bad)  
  40a7f9:	cli    
  40a7fa:	icebp  
  40a7fb:	call   0xd1e88603
  40a800:	pop    es
  40a801:	jge    0x40a7cb
  40a803:	call   0x36a60c78
  40a808:	imul   BYTE PTR [esi]
  40a80a:	jno    0x40a86e
  40a80c:	jo     0x40a7dc
  40a80e:	xchg   cx,ax
  40a810:	add    dh,BYTE PTR [ecx]
  40a812:	jbe    0x40a873
  40a814:	fld    TBYTE PTR [edi]
  40a816:	mov    ebp,0xdcb603a7
  40a81b:	or     al,0x70
  40a81d:	and    al,0x11
  40a81f:	adc    ecx,edi
  40a821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a822:	data16 (bad) 
  40a824:	fidiv  DWORD PTR [eax]
  40a826:	or     DWORD PTR [esi],eax
  40a828:	mov    cl,0x9
  40a82a:	add    edx,DWORD PTR [ebp+0x5c678ec2]
  40a830:	jo     0x40a7b8
  40a832:	fdivr  st(0),st
  40a834:	pop    ebx
  40a835:	adc    BYTE PTR [esi-0x2a],ah
  40a838:	outs   dx,DWORD PTR ds:[esi]
  40a839:	jbe    0x40a817
  40a83b:	int3   
  40a83c:	pop    esp
  40a83d:	out    0x4c,eax
  40a83f:	(bad)  
  40a840:	outs   dx,DWORD PTR ds:[esi]
  40a841:	js     0x40a88e
  40a843:	icebp  
  40a844:	add    eax,DWORD PTR [edx+edx*4]
  40a847:	lds    eax,FWORD PTR [ebx+0x443656d]
  40a84d:	fisttp DWORD PTR [ebx]
  40a84f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a850:	stc    
  40a851:	add    BYTE PTR [esi],ch
  40a853:	jno    0x40a7d6
  40a855:	inc    ebp
  40a856:	ds pushaw 
  40a859:	leave  
  40a85a:	cmp    dh,cl
  40a85c:	mov    bl,0xd3
  40a85e:	jno    0x40a869
  40a860:	adc    DWORD PTR [ebx+0x6ee8c882],ecx
  40a866:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40a868:	add    BYTE PTR [ecx],ah
  40a86a:	in     al,dx
  40a86b:	gs (bad) 
  40a86d:	hlt    
  40a86e:	or     ch,BYTE PTR [esi-0x52]
  40a871:	addr16 xchg esi,eax
  40a873:	pushw  0xe246
  40a877:	enter  0xc0ff,0x97
  40a87b:	mov    ecx,0x1c5fe940
  40a880:	mov    edi,0xfe65edb1
  40a885:	mov    ah,0xda
  40a887:	ins    DWORD PTR es:[edi],dx
  40a888:	xchg   esi,eax
  40a889:	aaa    
  40a88a:	inc    esi
  40a88b:	pushw  0xe23d
  40a88f:	enter  0x90ff,0xbb
  40a893:	mov    ecx,0x1c4fe940
  40a898:	mov    edi,0xfe65eda1
  40a89d:	xchg   esp,eax
  40a89e:	stos   BYTE PTR es:[edi],al
  40a89f:	ins    DWORD PTR es:[edi],dx
  40a8a0:	jle    0x40a8a9
  40a8a2:	push   ss
  40a8a3:	pushw  0x8200
  40a8a7:	enter  0x80ff,0xab
  40a8ab:	mov    ecx,0x1c1fe940
  40a8b0:	mov    edi,0xfe656c31
  40a8b5:	push   esp
  40a8b6:	add    BYTE PTR [ebp+0x6d],bh
  40a8b9:	data16 xlat BYTE PTR ds:[ebx]
  40a8bb:	pop    es
  40a8bc:	pushw  0x83b4
  40a8c0:	enter  0x50ff,0xec
  40a8c4:	mov    ecx,0x1bcfe940
  40a8c9:	mov    edi,0xfe656c21
  40a8ce:	xor    al,0x4d
  40a8d0:	ins    DWORD PTR es:[edi],dx
  40a8d1:	dec    esi
  40a8d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8d3:	xlat   BYTE PTR ds:[ebx]
  40a8d4:	gs push 0xffc86386
  40a8da:	add    ah,ch
  40a8dc:	mov    ecx,0x1e9fe940
  40a8e1:	mov    edi,0xff4e6000
  40a8e6:	(bad)  
  40a8e7:	and    eax,0x9e36e761
  40a8ec:	repz (bad) 
  40a8ee:	push   0x40378c
  40a8f3:	loopne 0x40a8c2
  40a8f5:	push   edx
  40a8f6:	inc    ecx
  40a8f7:	or     ah,dh
  40a8f9:	xor    al,0xbf
  40a8fb:	ror    BYTE PTR [ebp-0x1],1
  40a8fe:	inc    BYTE PTR ds:0x6e1ee761
  40a904:	repz (bad) 
  40a906:	push   0x403771
  40a90b:	lock int 0x52
  40a90e:	inc    ecx
  40a90f:	fdiv   st,st(3)
  40a911:	xor    al,0xbf
  40a913:	or     BYTE PTR [ebp-0x1],0xfe
  40a917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a918:	pusha  
  40a919:	out    0x6,eax
  40a91b:	add    BYTE PTR [esi],bl
  40a91d:	repz (bad) 
  40a91f:	push   0x403765
  40a924:	ror    BYTE PTR [edi+0x40884153],0x1
  40a92b:	add    BYTE PTR [eax-0x6f8a0078],cl
  40a931:	shr    dh,0xfd
  40a934:	(bad)  
  40a935:	mul    BYTE PTR [edi-0x19]
  40a938:	cmp    ecx,DWORD PTR [eax-0x1]
  40a93b:	scas   eax,DWORD PTR es:[di]
  40a93d:	cmp    al,BYTE PTR [eax+0x0]
  40a940:	lock push es
  40a942:	add    BYTE PTR [eax],al
  40a944:	fdiv   st,st(5)
  40a946:	je     0x40a950
  40a948:	adc    ch,0xfc
  40a94b:	call   FWORD PTR [edi+0x1953eb45]
  40a951:	or     eax,0x480b9b68
  40a956:	jmp    DWORD PTR [edi+0x4a]
  40a959:	or     BYTE PTR [eax],al
  40a95b:	xor    BYTE PTR [ecx],0x7b
  40a95e:	test   DWORD PTR [edi],0xff6fb119
  40a964:	es cli 
  40a966:	push   0x53
  40a968:	jo     0x40a9dc
  40a96a:	fistp  DWORD PTR [edx+0x68043182]
  40a970:	xor    esi,DWORD PTR [edx+0x3]
  40a973:	add    BYTE PTR [esi],0x45
  40a976:	sti    
  40a977:	out    0xcb,eax
  40a979:	les    ebp,FWORD PTR [edi+edi*8-0x77]
  40a97d:	and    eax,0x310040d1
  40a982:	dec    edx
  40a983:	inc    edx
  40a984:	push   ebx
  40a985:	jo     0x40a9f9
  40a987:	fild   DWORD PTR [ecx]
  40a989:	xor    DWORD PTR [edx-0x7d],esi
  40a98c:	call   FWORD PTR [edx+ebp*2+0x5b]
  40a990:	xchg   ebx,eax
  40a991:	int3   
  40a992:	xor    ch,BYTE PTR [ebp+0x68]
  40a995:	into   
  40a996:	sahf   
  40a997:	ret    0x56ff
  40a99a:	xor    ecx,edx
  40a99c:	inc    eax
  40a99d:	xor    DWORD PTR [edx-0xdceffff],ecx
  40a9a3:	ins    BYTE PTR es:[edi],dx
  40a9a4:	jne    0x40a9df
  40a9a6:	cli    
  40a9a7:	out    dx,eax
  40a9a8:	cld    
  40a9a9:	sahf   
  40a9aa:	(bad)  
  40a9ab:	fucomi st,st(3)
  40a9ad:	add    dh,BYTE PTR [ecx+0x7e706803]
  40a9b3:	ret    0xeff
  40a9b6:	jo     0x40a9bb
  40a9b8:	add    BYTE PTR [ecx-0x76f809be],dh
  40a9be:	aam    0x6e
  40a9c0:	jmp    FWORD PTR [esi-0x37]
  40a9c3:	push   0x53
  40a9c5:	lock jno 0x40a9a3
  40a9c8:	rol    BYTE PTR [edx],0x31
  40a9cb:	add    al,0x68
  40a9cd:	xor    esi,DWORD PTR [edx+0x3]
  40a9d0:	or     BYTE PTR [esi+0x1c],0xfc
  40a9d4:	out    0xf7,eax
  40a9d6:	or     BYTE PTR [esp+ebp*2+0x6d02ee3e],ah
  40a9dd:	mov    esp,0x2cfa8110
  40a9e2:	arpl   WORD PTR [esi+0x625300d9],cx
  40a9e8:	cld    
  40a9e9:	sti    
  40a9ea:	push   ss
  40a9eb:	arpl   WORD PTR [esp+ebp*2+0x16],di
  40a9ef:	lock aam 0x6c
  40a9f2:	test   BYTE PTR [ecx],dl
  40a9f4:	xor    DWORD PTR [esi+0x4],0x846c6663
  40a9fb:	gs pop esi
  40a9fd:	imul   BYTE PTR [esi]
  40a9ff:	jno    0x40aa14
  40aa01:	inc    esp
  40aa02:	out    dx,al
  40aa03:	bound  esp,QWORD PTR [eax]
  40aa05:	inc    ecx
  40aa06:	sub    eax,0xcd789c09
  40aa0b:	xchg   BYTE PTR [edi+edi*8-0x2436292a],bh
  40aa12:	js     0x40a9d1
  40aa14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa15:	add    eax,esi
  40aa17:	fdivr  st(4),st
  40aa19:	pop    ebx
  40aa1a:	jo     0x40aa67
  40aa1c:	push   ds
  40aa1d:	ins    BYTE PTR es:[edi],dx
  40aa1e:	popa   
  40aa1f:	icebp  
  40aa20:	call   0xb9e44828
  40aa25:	ins    BYTE PTR es:[edi],dx
  40aa26:	sbb    al,0x11
  40aa28:	adc    DWORD PTR [ebx+0x5afe6289],esp
  40aa2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa2f:	inc    edi
  40aa30:	imul   BYTE PTR [ebx+0x19]
  40aa33:	mov    esi,0x6386c294
  40aa38:	pop    esp
  40aa39:	clc    
  40aa3a:	xchg   esi,eax
  40aa3b:	sub    DWORD PTR [edi+0x40b9766b],esp
  40aa41:	add    eax,0xd48f7231
  40aa46:	addr16 fdivr st(0),st
  40aa49:	pop    ebx
  40aa4a:	add    dh,bl
  40aa4c:	jo     0x40aa0c
  40aa4e:	imul   ecx,DWORD PTR [ecx-0xc],0xffffffff
  40aa52:	stos   BYTE PTR es:[edi],al
  40aa53:	fisub  DWORD PTR [ecx+0x68]
  40aa56:	aas    
  40aa57:	popa   
  40aa58:	leave  
  40aa59:	jmp    DWORD PTR [ebp-0x6117f1c0]
  40aa5f:	lock popa 
  40aa61:	(bad)  
  40aa62:	cmp    DWORD PTR ds:0xdb7e0008,ecx
  40aa68:	mov    eax,0x6a1afcfe
  40aa6d:	pop    esi
  40aa6e:	xchg   ecx,eax
  40aa6f:	mov    ah,BYTE PTR [edx-0x18]
  40aa72:	and    eax,0xa0ff6277
  40aa77:	outs   dx,DWORD PTR ds:[esi]
  40aa78:	adc    DWORD PTR [eax],eax
  40aa7a:	mov    esp,0xd4ff757f
  40aa7f:	(bad)  
  40aa80:	imul   edx,DWORD PTR [ebp+0xb625a2f],0x67ffe129
  40aa8a:	push   es
  40aa8b:	add    ecx,ecx
  40aa8d:	call   FWORD PTR [eax+0x36c6287a]
  40aa93:	pop    edx
  40aa94:	mov    ecx,0x9c02e4f
  40aa99:	call   0xffa2f633
  40aa9e:	adc    DWORD PTR [edx],ebp
  40aaa0:	inc    edi
  40aaa1:	call   DWORD PTR [esi]
  40aaa3:	ins    BYTE PTR es:[edi],dx
  40aaa4:	inc    edi
  40aaa5:	or     cl,ch
  40aaa7:	or     DWORD PTR [esi+0x68f16aec],0xb00e96a
  40aab1:	fmul   QWORD PTR [edi]
  40aab3:	test   BYTE PTR [ecx-0x244b00f3],0xd0
  40aaba:	inc    eax
  40aabb:	jmp    0xdf05a99a
  40aac0:	or     edx,DWORD PTR [eax+0x618cdd45]
  40aac6:	(bad)  
  40aac7:	push   esp
  40aac8:	inc    ecx
  40aac9:	bound  esi,QWORD PTR [ebp+0x0]
  40aacc:	fs out dx,al
  40aace:	xor    al,0xbf
  40aad0:	and    BYTE PTR [edi+edi*8-0x19],cl
  40aad4:	pop    esp
  40aad5:	enter  0xfffe,0xd1
  40aad9:	dec    eax
  40aada:	sti    
  40aadb:	push   0x48
  40aadd:	out    dx,al
  40aade:	je     0x40aaf8
  40aae0:	xchg   edi,eax
  40aae1:	pop    eax
  40aae2:	or     edi,edi
  40aae4:	or     eax,0x184148b4
  40aae9:	(bad)
  40aaec:	mov    bh,0xf3
  40aaee:	mov    BYTE PTR [ebp-0x50],al
  40aaf1:	loope  0x40ab37
  40aaf3:	call   0x1cb59f20
  40aaf8:	xchg   edi,eax
  40aaf9:	pop    ecx
  40aafa:	or     edi,edi
  40aafc:	sbb    eax,0x84148b4
  40ab01:	(bad)
  40ab04:	xchg   ebx,esi
  40ab06:	mov    BYTE PTR [ebp-0x78],al
  40ab09:	ds (bad) 
  40ab0b:	(bad)  
  40ab0c:	popf   
  40ab0d:	sub    al,0xff
  40ab0f:	jne    0x40aad5
  40ab11:	repz xor al,0xbf
  40ab14:	add    BYTE PTR [eax+0x18e7ff45],dl
  40ab1a:	and    bh,bh
  40ab1c:	inc    DWORD PTR [ecx+0x49]
  40ab1f:	jmp    0x40aaae
  40ab21:	(bad)  
  40ab22:	in     al,dx
  40ab23:	dec    edi
  40ab24:	dec    ebp
  40ab26:	add    bh,bh
  40ab28:	jne    0x40aaae
  40ab2a:	repz xor al,0xbf
  40ab2d:	loopne 0x40ab74
  40ab2f:	jmp    edi
  40ab31:	add    BYTE PTR [eax],ah
  40ab33:	(bad)  
  40ab34:	call   DWORD PTR [ecx]
  40ab36:	dec    ecx
  40ab37:	jecxz  0x40aabc
  40ab39:	adc    eax,0xc0effe8
  40ab3e:	jns    0x40ab40
  40ab40:	add    BYTE PTR [eax+0x31f87d85],cl
  40ab46:	jb     0x40ab40
  40ab48:	cmp    DWORD PTR [ebx-0x4dfffc8e],0xffffffc5
  40ab4f:	outs   dx,DWORD PTR ds:[esi]
  40ab50:	add    BYTE PTR [esi],ah
  40ab52:	out    0x83,al
  40ab54:	add    BYTE PTR [ecx],dh
  40ab56:	jb     0x40abc0
  40ab58:	jne    0x40ab73
  40ab5a:	scas   eax,DWORD PTR es:[edi]
  40ab5b:	out    dx,eax
  40ab5c:	pop    es
  40ab5d:	dec    ecx
  40ab5e:	pop    ebp
  40ab5f:	test   eax,0xef7f36ff
  40ab64:	sti    
  40ab65:	cs std 
  40ab67:	sti    
  40ab68:	out    0x95,eax
  40ab6a:	shr    BYTE PTR [eax-0x1],1
  40ab6d:	push   ds
  40ab6e:	pop    ebp
  40ab6f:	imul   edi,edi,0xffffff9c
  40ab72:	pop    edx
  40ab73:	pop    ebx
  40ab74:	popa   
  40ab75:	iret   
  40ab76:	(bad)  
  40ab77:	push   0xd67c00ff
  40ab7c:	push   0xd1ba2975
  40ab81:	mov    ebp,0x7d82bef6
  40ab86:	sbb    DWORD PTR [ebx+0x3],esp
  40ab89:	out    dx,eax
  40ab8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab8b:	xor    al,0xf6
  40ab8d:	(bad)  
  40ab8e:	and    ch,BYTE PTR fs:[ecx+0x75]
  40ab92:	sub    DWORD PTR [edx+0x16cebdc5],edi
  40ab98:	pop    ebp
  40ab99:	push   cs
  40ab9a:	(bad)  
  40ab9b:	xchg   esp,eax
  40ab9c:	pop    ebx
  40ab9d:	inc    DWORD PTR [edx+eax*1+0x69]
  40aba1:	jne    0x40abcc
  40aba3:	cli    
  40aba4:	add    DWORD PTR [esi+0x7568f6ae],edi
  40abaa:	xchg   ebp,eax
  40abab:	push   cs
  40abac:	out    dx,eax
  40abad:	pop    es
  40abae:	mov    DWORD PTR [esi-0x57],ecx
  40abb1:	call   DWORD PTR [esi+0x31e3e6f2]
  40abb7:	fimul  WORD PTR ds:0x120483
  40abbd:	jne    0x40abed
  40abbf:	or     DWORD PTR [edx-0x42],esi
  40abc2:	xchg   edx,eax
  40abc3:	pop    edi
  40abc4:	sbb    DWORD PTR [ecx-0x1c],ebp
  40abc7:	adc    cl,al
  40abc9:	xchg   edi,eax
  40abca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abcb:	pop    edi
  40abcc:	into   
  40abcd:	pop    esp
  40abce:	sub    esi,ebx
  40abd0:	call   0xd151883d
  40abd5:	mov    ds:0x68b65f8c,eax
  40abda:	mov    esp,0x60c154
  40abdf:	jno    0x40ac40
  40abe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abe2:	push   0x48915cbc
  40abe7:	icebp  
  40abe8:	pop    esi
  40abe9:	xchg   esi,eax
  40abea:	push   0x5081619c
  40abef:	icebp  
  40abf0:	pop    esi
  40abf1:	xchg   BYTE PTR [eax-0x64],ch
  40abf4:	pop    ecx
  40abf5:	xchg   ecx,eax
  40abf6:	cmp    cl,dh
  40abf8:	pop    esi
  40abf9:	jbe    0x40ac63
  40abfb:	jl     0x40ac6a
  40abfd:	add    DWORD PTR [eax-0xf],0x7c68665e
  40ac04:	gs push ecx
  40ac06:	test   al,0xf1
  40ac08:	pop    esi
  40ac09:	push   esi
  40ac0a:	cmp    dh,bl
  40ac0c:	and    eax,0x6dabcee9
  40ac11:	push   0x3e56e13f
  40ac16:	push   0x58e8fa59
  40ac1b:	xchg   ecx,esi
  40ac1d:	adc    ecx,edi
  40ac1f:	jno    0x40ac2a
  40ac21:	xchg   ecx,eax
  40ac22:	cmp    eax,0xdbe8c85d
  40ac27:	jne    0x40abde
  40ac29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac2a:	add    ebx,DWORD PTR [ecx]
  40ac2c:	mov    ds:0xe69ec2b5,al
  40ac31:	ds iret 
  40ac33:	icebp  
  40ac34:	or     BYTE PTR [ecx-0x381abd],dl
  40ac3a:	call   0xee4c8058
  40ac3f:	mov    WORD PTR [esi],es
  40ac41:	call   0x5e4fac96
  40ac46:	call   DWORD PTR [ecx+0x42]
  40ac49:	or     edi,ebp
  40ac4b:	xchg   edi,eax
  40ac4c:	test   esp,esi
  40ac4e:	push   esp
  40ac4f:	sub    BYTE PTR ds:0x6c1c10f1,dh
  40ac55:	pop    esi
  40ac56:	addr16 in al,0x61
  40ac59:	leave  
  40ac5a:	inc    DWORD PTR [eax-0x18]
  40ac5d:	mov    ah,0x40
  40ac5f:	jmp    0x289515be
  40ac64:	sub    eax,0xf435f8f1
  40ac69:	pop    ebp
  40ac6a:	(bad)  
  40ac6b:	sbb    al,0x29
  40ac6d:	pop    edi
  40ac6e:	jne    0x40ac51
  40ac70:	jp     0x40ac94
  40ac72:	inc    BYTE PTR [esi-0x16ec0e72]
  40ac78:	addr16 lahf 
  40ac7a:	push   0xffc8e1ff
  40ac7f:	add    BYTE PTR [eax],dl
  40ac81:	mov    ch,0x40
  40ac83:	jmp    0xa8956662
  40ac88:	xor    dh,cl
  40ac8a:	xor    DWORD PTR [ebp+ebp*8+0x8675d],edi
  40ac91:	leave  
  40ac92:	call   eax
  40ac94:	repz mov ah,0x40
  40ac97:	jmp    0x364c80f3
  40ac9c:	rol    BYTE PTR ds:0x5e54dce8,0xff
  40aca3:	je     0x40ac95
  40aca5:	popa   
  40aca6:	push   eax
  40aca7:	push   ds
  40aca8:	add    BYTE PTR [eax-0x302300ef],ah
  40acae:	rol    BYTE PTR [eax-0x17],1
  40acb1:	cli    
  40acb2:	shr    BYTE PTR [ebx+0xb098800],1
  40acb8:	rol    BYTE PTR ds:0x8045c670,0x9
  40acbf:	add    BYTE PTR [eax],al
  40acc1:	mov    BYTE PTR [esi],bl
  40acc3:	inc    ebp
  40acc4:	hlt    
  40acc5:	(bad)  
  40acc6:	pop    esi
  40acc7:	(bad)  
  40acc8:	inc    DWORD PTR [edx]
  40acca:	add    eax,0x4f2006a
  40accf:	push   0x0
  40acd1:	std    
  40acd2:	dec    eax
  40acd3:	repz push eax
  40acd5:	fisttp QWORD PTR [eax-0x1970080c]
  40acdb:	dec    edi
  40acdc:	inc    DWORD PTR ds:0x8c75feed
  40ace2:	rcr    DWORD PTR ds:0xb0948ac,0xc0
  40ace9:	inc    esp
  40acea:	pop    es
  40aceb:	jmp    0x40ad2d
  40aced:	xor    BYTE PTR [eax-0x1bf7beb8],dl
  40acf3:	je     0x40ad01
  40acf5:	rcr    BYTE PTR [edx-0x3e],0xff
  40acf9:	(bad)  
  40acfa:	(bad)  
  40acfc:	lea    edx,[ebp-0x70000914]
  40ad02:	cmp    BYTE PTR [ecx-0x18],dl
  40ad05:	xchg   edi,eax
  40ad06:	(bad)  
  40ad07:	(bad)  
  40ad08:	jmp    DWORD PTR [ecx-0x77]
  40ad0b:	lock test DWORD PTR [eax],0xb5fee37f
  40ad12:	js     0x40acff
  40ad14:	(bad)  
  40ad15:	jmp    FWORD PTR [edi+0x59]
  40ad18:	pop    es
  40ad19:	call   0x3f9323
  40ad1e:	call   FWORD PTR [eax-0x1cf00810]
  40ad24:	out    0xa5,eax
  40ad26:	dec    edi
  40ad27:	jecxz  0x40ad27
  40ad29:	call   ebp
  40ad2b:	lock jmp 0x89fb:0xeff33195
  40ad33:	es call 0x3108:0x41193100
  40ad3b:	jne    0x40adb7
  40ad3d:	in     al,dx
  40ad3e:	mov    dl,0x2e
  40ad40:	addr16 push 0x31
  40ad43:	mov    ch,bh
  40ad45:	(bad)  
  40ad46:	cld    
  40ad47:	pop    ecx
  40ad48:	pop    ebx
  40ad49:	mov    edx,0x89653bad
  40ad4e:	in     al,dx
  40ad4f:	xor    eax,0x31057cdc
  40ad54:	add    al,0xff
  40ad56:	fcomp  QWORD PTR [ecx+0x5b]
  40ad59:	mov    bh,0x4f
  40ad5b:	fwait
  40ad5c:	gs push 0x31
  40ad5f:	retf   0x5499
  40ad62:	lock jno 0x40ad40
  40ad65:	jl     0x40ad44
  40ad67:	xor    BYTE PTR [edi+edi*8],al
  40ad6a:	fs mov ebx,0x8a3140bb
  40ad70:	icebp  
  40ad71:	rol    DWORD PTR [eax],0x1e
  40ad74:	mov    edi,ecx
  40ad76:	mov    edi,0x4fd3539d
  40ad7b:	push   cs
  40ad7c:	push   ebp
  40ad7d:	sti    
  40ad7e:	out    0x9c,eax
  40ad80:	aad    0x64
  40ad82:	dec    DWORD PTR [ecx]
  40ad84:	sub    ah,BYTE PTR [ebp+0x337f6ff]
  40ad8a:	push   0xffc299cc
  40ad8f:	dec    esi
  40ad90:	loop   0x40ad61
  40ad92:	inc    eax
  40ad93:	xor    ebx,ecx
  40ad95:	cs mov edi,0xe803b169
  40ad9b:	js     0x40adcd
  40ad9d:	gs (bad) 
  40ad9f:	cmp    dh,BYTE PTR [edx]
  40ada1:	lock push cs
  40ada3:	popa   
  40ada4:	and    BYTE PTR [ebp+esi*2+0x29],0x9
  40ada9:	adc    ecx,ebx
  40adab:	stos   BYTE PTR es:[edi],al
  40adac:	pop    ebx
  40adad:	push   ds
  40adae:	pop    esp
  40adaf:	inc    edi
  40adb0:	pushf  
  40adb1:	push   ss
  40adb2:	or     ecx,DWORD PTR gs:[ecx]
  40adb5:	sbb    DWORD PTR [ecx-0x24173603],0x3a7b50d
  40adbf:	sbb    DWORD PTR [edi],eax
  40adc1:	jmp    0xc9b15ec9
  40adc6:	inc    ecx
  40adc7:	jbe    0x40ae24
  40adc9:	repnz inc ebx
  40adcb:	in     eax,0xb
  40adcd:	cmp    esp,edx
  40adcf:	addr16 aad 0xe0
  40add2:	pop    ebx
  40add3:	repz pop esp
  40add5:	into   
  40add6:	add    BYTE PTR fs:[ecx+0x55],cl
  40adda:	xchg   DWORD PTR [esi+ecx*2-0x12],esp
  40adde:	call   0x281153be
  40ade3:	add    al,0xc9
  40ade5:	js     0x40adfc
  40ade7:	ret    
  40ade8:	ss jecxz 0x40add5
  40adeb:	add    esi,DWORD PTR [ecx]
  40aded:	mov    DWORD PTR [ecx-0x69a50f94],edx
  40adf3:	clc    
  40adf4:	(bad)  
  40adf6:	fst    st(3)
  40adf8:	pop    dx
  40adfa:	cld    
  40adfb:	sti    
  40adfc:	push   ss
  40adfd:	add    DWORD PTR [ebp+0x64],edi
  40ae00:	push   es
  40ae01:	jb     0x40ada8
  40ae03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae04:	(bad)  
  40ae05:	pop    edx
  40ae06:	add    ecx,DWORD PTR [edx]
  40ae08:	not    ah
  40ae0a:	lock pop ebx
  40ae0c:	imul   ebx,DWORD PTR [ebp+0x5e],0x64
  40ae10:	pop    ebx
  40ae11:	es push esi
  40ae13:	out    dx,al
  40ae14:	ss jno 0x40adf0
  40ae17:	addr16 (bad) 
  40ae19:	pop    edx
  40ae1a:	rol    DWORD PTR [edi],cl
  40ae1c:	into   
  40ae1d:	aam    0xf0
  40ae1f:	pop    ebx
  40ae20:	dec    edi
  40ae21:	pop    ebp
  40ae22:	add    BYTE PTR [esi],dh
  40ae24:	push   ebp
  40ae25:	pop    edx
  40ae26:	jne    0x40ae55
  40ae28:	dec    ebp
  40ae29:	aam    0x7
  40ae2b:	adc    DWORD PTR [ebx-0x63],edx
  40ae2e:	call   FWORD PTR [esi]
  40ae30:	imul   eax,DWORD PTR [edi+0x4],0xffffffe9
  40ae34:	outs   dx,DWORD PTR ds:[esi]
  40ae35:	(bad)  
  40ae36:	in     al,dx
  40ae37:	push   0x56
  40ae39:	pop    ebp
  40ae3a:	push   esi
  40ae3b:	sahf   
  40ae3c:	add    BYTE PTR [eax+0x5a],ch
  40ae3f:	imul   esp,esi,0x107d40d
  40ae45:	icebp  
  40ae46:	popf   
  40ae47:	(bad)  
  40ae48:	out    dx,al
  40ae49:	clc    
  40ae4a:	ret    
  40ae4b:	sti    
  40ae4c:	jb     0x40ae96
  40ae4e:	mov    BYTE PTR [edi+0x28],0x2d
  40ae52:	mov    ?,WORD PTR ds:0xffc96d2e
  40ae58:	push   0x3a740912
  40ae5d:	pop    ebp
  40ae5e:	adc    DWORD PTR [ebp+0x28],0x2d
  40ae62:	mov    dl,0xe7
  40ae64:	leave  
  40ae65:	(bad)
  40ae69:	repnz aam 0x1e
  40ae6c:	aas    
  40ae6d:	popf   
  40ae6e:	adc    eax,0xb9929ec8
  40ae73:	addr16 jmp 0x1ff18ab
  40ae79:	into   
  40ae7a:	mov    bl,0x40
  40ae7c:	jmp    0xf1b60943
  40ae81:	call   0x4971:0x9276e6c9
  40ae88:	das    
  40ae89:	xchg   edx,eax
  40ae8a:	pop    edx
  40ae8b:	push   0xffc8a87c
  40ae90:	mov    ch,0x5a
  40ae92:	xchg   edi,eax
  40ae93:	stos   BYTE PTR es:[edi],al
  40ae94:	jmp    0xd600bccb
  40ae99:	xor    esi,DWORD PTR [ebx-0x3221ff19]
  40ae9f:	(bad)  
  40aea0:	inc    DWORD PTR [eax]
  40aea2:	test   al,0x6d
  40aea4:	(bad)  
  40aea5:	push   DWORD PTR [edi-0x59]
  40aea8:	push   0xff449da3
  40aead:	dec    edi
  40aeae:	push   edi
  40aeaf:	inc    eax
  40aeb0:	pop    es
  40aeb1:	call   0x3f9d60
  40aeb6:	xor    BYTE PTR [edx-0x43],bl
  40aeb9:	jmp    DWORD PTR [edi]
  40aebb:	jmp    0x7500:0x27184600
  40aec2:	xor    cl,BYTE PTR [edi-0x5]
  40aec5:	xor    ecx,DWORD PTR [eax+0x7c]
  40aec8:	(bad)  
  40aec9:	inc    DWORD PTR [edi+0x10aef1e6]
  40aecf:	push   cs
  40aed0:	jne    0x40ae5f
  40aed2:	xchg   DWORD PTR [eax-0x5],eax
  40aed5:	(bad)  
  40aed6:	std    
  40aed7:	or     al,0xe8
  40aed9:	ja     0x40ae9e
  40aedb:	out    0xfe,al
  40aedd:	pop    edi
  40aede:	push   ss
  40aedf:	int3   
  40aee0:	rol    DWORD PTR [eax+ebx*2],0xa0
  40aee4:	mov    ch,ah
  40aee6:	lock add al,0x0
  40aee9:	out    dx,eax
  40aeea:	(bad)  
  40aeeb:	ins    DWORD PTR es:[edi],dx
  40aeec:	les    edx,FWORD PTR [ebp+0x59]
  40aeef:	or     eax,0xec1475ff
  40aef4:	je     0x40aefe
  40aef6:	mov    al,0xb9
  40aef8:	in     eax,0xff
  40aefa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aefb:	add    BYTE PTR fs:[eax],al
  40aefe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeff:	stos   BYTE PTR es:[edi],al
  40af00:	push   0xff4e1dca
  40af05:	inc    BYTE PTR [eax]
  40af07:	std    
  40af08:	or     bh,bh
  40af0a:	jne    0x40af1c
  40af0c:	in     eax,0xb7
  40af0e:	out    0x57,al
  40af10:	jmp    0x40aeda
  40af12:	ret    0xce0
  40af15:	push   ebp
  40af16:	mov    esi,DWORD PTR [ecx]
  40af18:	into   
  40af19:	popa   
  40af1a:	jne    0x40af41
  40af1c:	retf   0xc211
  40af1f:	into   
  40af20:	iret   
  40af21:	or     eax,0xeb6c3dc0
  40af26:	scas   al,BYTE PTR es:[edi]
  40af27:	mov    eax,fs:0xbbc95003
  40af2d:	inc    ebx
  40af2e:	jmp    FWORD PTR [esi+0x1cfeb392]
  40af34:	pop    edx
  40af35:	imul   ebp,DWORD PTR [ebx-0x179e0062],0xffffffb8
  40af3c:	lds    esp,FWORD PTR [ecx-0x1]
  40af3f:	js     0x40af65
  40af41:	or     eax,DWORD PTR [eax]
  40af43:	(bad)  
  40af45:	outs   dx,BYTE PTR ds:[esi]
  40af46:	xor    DWORD PTR [ebp+0x5e],0xffffffec
  40af4a:	dec    DWORD PTR [eax]
  40af4c:	push   0x62
  40af4e:	jne    0x40af89
  40af50:	cmp    bl,BYTE PTR [ebp-0x74c89946]
  40af56:	inc    ebp
  40af57:	pop    ebp
  40af58:	int3   
  40af59:	add    ebp,DWORD PTR [eax-0x6d]
  40af5c:	and    bl,al
  40af5e:	call   esi
  40af60:	sahf   
  40af61:	mov    bh,0x40
  40af63:	xor    DWORD PTR [edi+0x20e9bf17],edx
  40af69:	add    al,0xe8
  40af6b:	add    BYTE PTR [eax+0x3aff61a2],dh
  40af71:	mov    ds:0xfa8113d8,al
  40af76:	add    al,BYTE PTR [eax]
  40af78:	push   cs
  40af79:	shl    BYTE PTR [ebx+0x6b6a9cfe],0x63
  40af80:	adc    cl,BYTE PTR [edi+0x1560e861]
  40af86:	popa   
  40af87:	dec    DWORD PTR [ebx+0x5fa1eb62]
  40af8d:	and    DWORD PTR [eax+ebp*2],eax
  40af90:	in     eax,0x8
  40af92:	mov    esp,0x1456e6c2
  40af97:	mov    eax,ds:0x6be8ca69
  40af9c:	or     DWORD PTR [ecx+0x4e],0x61
  40afa0:	cmp    cl,BYTE PTR [ecx-0x43]
  40afa3:	div    DWORD PTR [esi-0x1f]
  40afa6:	out    0x3,eax
  40afa8:	into   
  40afa9:	xchg   esi,eax
  40afaa:	cdq    
  40afab:	pusha  
  40afac:	cmp    al,0x1
  40afae:	inc    ecx
  40afaf:	sbb    BYTE PTR [edx+0x536c2657],dl
  40afb5:	xchg   esi,eax
  40afb6:	push   ds
  40afb7:	popa   
  40afb8:	or     ecx,DWORD PTR [ecx]
  40afba:	adc    DWORD PTR [ebp-0x14173601],0x3a7bf5c
  40afc4:	xchg   BYTE PTR ds:0x8f1cc3e,bl
  40afca:	add    DWORD PTR ds:0xcee5771,esp
  40afd0:	add    BYTE PTR [ecx-0x24],dh
  40afd3:	cmc    
  40afd4:	mov    bl,0xf6
  40afd6:	push   edi
  40afd7:	push   esp
  40afd8:	or     al,0x49
  40afda:	add    dl,dh
  40afdc:	pusha  
  40afdd:	push   esi
  40afde:	pusha  
  40afdf:	rcr    DWORD PTR [edi+0x453574e],1
  40afe5:	fstp   DWORD PTR [edx-0x10c13ce9]
  40afeb:	push   ds
  40afec:	mov    edx,0x16ae08f1
  40aff1:	out    dx,al
  40aff2:	shl    DWORD PTR [edi],0x4
  40aff5:	sbb    DWORD PTR [ecx+0x5e],edx
  40aff8:	pusha  
  40aff9:	push   ds
  40affa:	add    ebp,DWORD PTR [ecx+0x38b927d7]
  40b000:	popa   
  40b001:	test   BYTE PTR [ecx],al
  40b003:	xchg   ecx,eax
  40b004:	arpl   WORD PTR [edi],ax
  40b006:	push   edi
  40b007:	jle    0x40b074
  40b009:	out    dx,eax
  40b00a:	xchg   ebp,eax
  40b00b:	add    BYTE PTR [esi-0x6f],dh
  40b00e:	jecxz  0x40b00f
  40b010:	add    ah,cl
  40b012:	mov    edi,0x7bdae940
  40b017:	push   esi
  40b018:	test   al,0x32
  40b01a:	push   esi
  40b01b:	xor    eax,0xffc9ea96
  40b020:	inc    eax
  40b021:	popa   
  40b022:	xchg   esi,eax
  40b023:	inc    DWORD PTR [esi+0x35]
  40b026:	dec    ecx
  40b027:	je     0x40b017
  40b029:	add    dh,0xfe
  40b02c:	mov    esp,0x2fb6612a
  40b031:	adc    DWORD PTR [esi-0x18],edx
  40b034:	dec    ebp
  40b035:	add    dh,al
  40b037:	push   esi
  40b038:	call   DWORD PTR [ebx-0x1e8aa862]
  40b03e:	or     dh,BYTE PTR [ecx]
  40b040:	dec    BYTE PTR [esi]
  40b042:	adc    ebx,esp
  40b044:	sbb    DWORD PTR [esi],eax
  40b046:	pop    edi
  40b047:	push   cs
  40b048:	call   0xff96c07c
  40b04d:	or     DWORD PTR [ebp+0x56],0x75
  40b051:	loope  0x40b02d
  40b053:	dec    esp
  40b054:	(bad)  
  40b055:	out    0x6,al
  40b057:	push   esi
  40b058:	jne    0x40b037
  40b05a:	(bad)  
  40b05b:	fild   DWORD PTR [edi]
  40b05d:	shl    esp,0x8f
  40b060:	dec    esi
  40b062:	cld    
  40b063:	dec    edx
  40b064:	add    al,0xe9
  40b066:	mov    DWORD PTR [ebx+0x258beec],eax
  40b06c:	call   0xff969e1e
  40b071:	loop   0x40b0e5
  40b073:	fisttp QWORD PTR [ebp+0x11]
  40b076:	cmp    DWORD PTR [edi+0x6de2e940],0x5676a950
  40b080:	push   eax
  40b081:	cmp    ebp,eax
  40b083:	in     eax,dx
  40b084:	(bad)  
  40b085:	call   FWORD PTR [eax]
  40b087:	out    0xbd,eax
  40b089:	push   0x409ed7
  40b08e:	sbb    BYTE PTR [esi-0xc4ff78c],dh
  40b094:	in     al,0xff
  40b096:	dec    edi
  40b097:	xchg   ebp,eax
  40b098:	add    DWORD PTR [bx+si],eax
  40b09b:	enter  0xbde6,0x68
  40b09f:	push   ss
  40b0a0:	lahf   
  40b0a1:	inc    eax
  40b0a2:	add    BYTE PTR [eax+0x600874b6],cl
  40b0a8:	and    ch,ah
  40b0aa:	(bad)  
  40b0ab:	call   DWORD PTR [edi+eiz*2-0x421937fe]
  40b0b2:	push   0x409ef4
  40b0b7:	call   0x40492572
  40b0bc:	pop    esp
  40b0bd:	in     al,0xff
  40b0bf:	aas    
  40b0c0:	in     eax,0x19
  40b0c2:	mov    esp,0xc2c8b63f
  40b0c7:	or     BYTE PTR [ecx],0x55
  40b0ca:	mov    ebp,DWORD PTR [edx+ecx*4]
  40b0cd:	(bad)  
  40b0ce:	cld    
  40b0cf:	mov    dl,0x9
  40b0d1:	push   0x9
  40b0d3:	pop    edi
  40b0d4:	xor    BYTE PTR [edi],al
  40b0d6:	call   0x4024e7
  40b0db:	loope  0x40b11d
  40b0dd:	sti    
  40b0de:	push   0x62
  40b0e0:	mov    dh,0x74
  40b0e2:	or     BYTE PTR [eax-0x77],dh
  40b0e5:	(bad)  
  40b0e6:	jmp    FWORD PTR [edi+0x5f]
  40b0e9:	and    bh,bh
  40b0eb:	add    eax,0x7f76e805
  40b0f0:	mov    dh,0xfe
  40b0f2:	push   0xfffffffc
  40b0f4:	mov    bl,0x74
  40b0f6:	or     al,al
  40b0f8:	fs (bad) 
  40b0fa:	(bad)  
  40b0fb:	mov    edi,0xfc74b3
  40b100:	xor    DWORD PTR [ebx-0x28],edi
  40b103:	pop    es
  40b104:	sbb    DWORD PTR ds:0x9a06ff9d,ebx
  40b10a:	inc    ecx
  40b10b:	add    al,0x31
  40b10d:	std    
  40b10e:	mov    ch,ah
  40b110:	mov    esp,DWORD PTR [edx-0x15]
  40b113:	and    BYTE PTR [esi+0x36680421],al
  40b119:	xchg   ebx,eax
  40b11a:	(bad)  
  40b11b:	(bad)  
  40b11c:	(bad)  
  40b11e:	sahf   
  40b11f:	dec    eax
  40b120:	jo     0x40b184
  40b122:	imul   edx,edx,0xffffff8f
  40b125:	ret    
  40b126:	pop    ebp
  40b127:	or     esi,ecx
  40b129:	xchg   esi,eax
  40b12a:	clc    
  40b12b:	dec    edi
  40b12c:	mov    esi,0x3cfef39d
  40b131:	outs   dx,BYTE PTR ds:[esi]
  40b132:	mov    bl,0xfe
  40b134:	and    al,0x6a
  40b136:	imul   ebx,DWORD PTR [eax-0x17a1d473],0xffffffd0
  40b13d:	out    0x5d,eax
  40b13f:	dec    DWORD PTR [ebx]
  40b141:	(bad)  
  40b142:	jmp    0x40b164
  40b144:	out    0xa0,al
  40b146:	add    ebp,DWORD PTR [eax+0x36]
  40b149:	jae    0x40b10f
  40b14b:	call   DWORD PTR [esi]
  40b14d:	pusha  
  40b14e:	add    eax,DWORD PTR [eax]
  40b150:	mov    cl,0xa
  40b152:	mov    ds:0x9636ebe,al
  40b157:	rcr    ch,0x54
  40b15a:	mov    bl,0xfe
  40b15c:	in     al,0x51
  40b15e:	pop    esp
  40b15f:	jne    0x40b186
  40b161:	adc    bl,BYTE PTR [ebp+0x75]
  40b164:	add    BYTE PTR [ecx],bh
  40b166:	dec    edx
  40b167:	jmp    0x40b14c
  40b169:	inc    esi
  40b16a:	dec    ebx
  40b16b:	ins    BYTE PTR es:[edi],dx
  40b16c:	jb     0x40b1e8
  40b16e:	xchg   ebx,eax
  40b16f:	pop    ebp
  40b170:	(bad)  
  40b171:	mov    esp,0x3d755c31
  40b176:	retf   0x5706
  40b179:	jo     0x40b184
  40b17b:	jmp    0x914255dc
  40b180:	or     BYTE PTR ds:0xf34b9654,0x4
  40b187:	jmp    0x6aa56d42
  40b18c:	dec    eax
  40b18d:	std    
  40b18e:	fsubp  st(0),st
  40b190:	jmp    0xc3d05bd
  40b195:	(bad)  [ecx-0x7e19a2cf]
  40b19b:	lods   al,BYTE PTR ds:[esi]
  40b19c:	pop    edi
  40b19d:	dec    ecx
  40b19e:	or     ecx,ebp
  40b1a0:	ins    BYTE PTR es:[edi],dx
  40b1a1:	xchg   edi,eax
  40b1a2:	loopne 0x40b1fc
  40b1a4:	mov    dh,0x71
  40b1a6:	or     DWORD PTR [esi-0x29],ecx
  40b1a9:	cs popa 
  40b1ab:	leave  
  40b1ac:	pop    esp
  40b1ad:	mov    esi,0x3102d153
  40b1b2:	fs ja  0x40b1a1
  40b1b5:	stos   DWORD PTR es:[edi],eax
  40b1b6:	mov    edx,0xdda603a7
  40b1bb:	lock imul ebp,edi,0x53
  40b1bf:	push   ds
  40b1c0:	pop    ebp
  40b1c1:	xchg   esi,eax
  40b1c2:	fst    QWORD PTR [ebx*2+0x77010104]
  40b1c9:	add    cl,cl
  40b1cb:	push   ebx
  40b1cc:	push   es
  40b1cd:	dec    ebx
  40b1ce:	jae    0x40b1dc
  40b1d0:	jmp    0x68a55d8b
  40b1d5:	dec    eax
  40b1d6:	mov    DWORD PTR [ebx-0x12],ebx
  40b1d9:	pop    esp
  40b1da:	mov    ah,0xcd
  40b1dc:	in     al,0xb3
  40b1de:	pop    edi
  40b1df:	fucomp st(4)
  40b1e1:	pop    esp
  40b1e2:	sbb    al,0x94
  40b1e4:	and    ebx,eax
  40b1e6:	dec    esi
  40b1e7:	imul   eax,DWORD PTR [ebx],0xffffffa5
  40b1ea:	xor    DWORD PTR [ecx],ecx
  40b1ec:	repnz inc ebx
  40b1ee:	mov    fs,WORD PTR cs:[ecx+0x93102]
  40b1f5:	scas   al,BYTE PTR es:[edi]
  40b1f6:	neg    DWORD PTR [edx+0x0]
  40b1f9:	jmp    0x2d07bb30
  40b1fe:	jns    0x40b252
  40b200:	pop    es
  40b201:	jmp    0x3409138
  40b206:	xor    eax,0x2d02ffdf
  40b20b:	test   BYTE PTR [ebp+0x7d],al
  40b20e:	ret    0x8585
  40b211:	jne    0x40b270
  40b213:	push   edx
  40b214:	call   FWORD PTR [ecx]
  40b216:	mov    esp,ds
  40b218:	imul   DWORD PTR [esi-0x1]
  40b21b:	dec    esi
  40b21c:	call   0x4a4686
  40b221:	bnd jb 0x40b201
  40b224:	add    al,0x40
  40b226:	dec    ecx
  40b227:	or     BYTE PTR [eax],al
  40b229:	jmp    0xa8892208
  40b22e:	add    BYTE PTR [edx],dh
  40b230:	push   edx
  40b231:	jne    0x40b220
  40b233:	dec    edx
  40b234:	les    edi,FWORD PTR [ebp-0x7546f2ca]
  40b23a:	sbb    DWORD PTR [edi-0x2e10b74],esi
  40b240:	push   ecx
  40b241:	push   eax
  40b242:	mov    ebx,0x16be140a
  40b247:	in     eax,dx
  40b248:	jg     0x40b1cf
  40b24a:	sbb    ebp,ebx
  40b24c:	push   ecx
  40b24d:	call   DWORD PTR [ecx]
  40b24f:	add    DWORD PTR [edi+0x5289feff],ecx
  40b255:	addr16 jne 0x40b1fd
  40b258:	leave  
  40b259:	(bad)  
  40b25a:	in     eax,dx
  40b25b:	mov    esp,0xfae6f759
  40b260:	push   ecx
  40b261:	xor    eax,0xffc9659e
  40b266:	rol    dh,0x93
  40b269:	dec    esi
  40b26b:	mov    ah,0x8c
  40b26d:	in     al,0x0
  40b26f:	jg     0x40b21f
  40b271:	(bad)  
  40b272:	push   0x48
  40b274:	pop    esi
  40b275:	lea    edx,[edi+0x59]
  40b278:	or     eax,0xb5e8b5ff
  40b27d:	(bad)  
  40b27e:	call   edi
  40b280:	idiv   DWORD PTR [esi-0x17f2b6b8]
  40b286:	jne    0x40b2ed
  40b288:	scas   al,BYTE PTR es:[edi]
  40b289:	dec    BYTE PTR [ecx-0x91e73]
  40b28f:	mov    bh,0x62
  40b291:	jmp    DWORD PTR [edi+0x0]
  40b294:	lea    edx,[esi+0x78670040]
  40b29a:	lock not DWORD PTR [edi-0x52]
  40b29e:	(bad)  
  40b29f:	xor    eax,0x404497
  40b2a4:	adc    BYTE PTR [esi-0x7b980044],0x85
  40b2ab:	call   0x6b3f610f
  40b2b0:	enter  0x965d,0x57
  40b2b4:	mov    DWORD PTR ds:0xb668b5ff,eax
  40b2ba:	(bad)  
  40b2bb:	call   DWORD PTR [edi-0x8]
  40b2be:	mov    esi,0xe805c948
  40b2c3:	cmp    ebp,esi
  40b2c5:	lods   eax,DWORD PTR ds:[esi]
  40b2c6:	dec    BYTE PTR [ecx-0x912e3]
  40b2cc:	aaa    
  40b2cd:	add    BYTE PTR [ebp-0x1518028],0x50
  40b2d4:	mov    al,ds:0x584157ac
  40b2d9:	scas   al,BYTE PTR es:[edi]
  40b2da:	mov    ah,0xf0
  40b2dc:	pop    edi
  40b2dd:	scas   al,BYTE PTR es:[edi]
  40b2de:	(bad)  
  40b2df:	(bad)  
  40b2e0:	cmp    eax,0x4841486e
  40b2e5:	fst    QWORD PTR ds:0x5a3b31bd
  40b2eb:	or     esi,DWORD PTR [ecx-0x45]
  40b2ee:	cld    
  40b2ef:	cmp    BYTE PTR [edi+eiz*4+0x52],0xff
  40b2f4:	ss imul edx,eax,0xf
  40b2f8:	add    BYTE PTR [esi],ch
  40b2fa:	push   ebx
  40b2fb:	mov    al,BYTE PTR [ebp-0xa567fb]
  40b301:	cmp    DWORD PTR [edx+0x66],0x6e7016b9
  40b308:	adc    al,0x3a
  40b30a:	mov    ds:0x8a6105cf,al
  40b30f:	xor    bh,BYTE PTR [ecx-0x7abd7802]
  40b315:	aad    0xd7
  40b317:	pop    ecx
  40b318:	inc    DWORD PTR [edx+eiz*2+0x3]
  40b31c:	add    BYTE PTR [edx-0x2108a0e3],dh
  40b322:	out    0x2,eax
  40b324:	je     0x40b372
  40b326:	jecxz  0x40b2bf
  40b328:	in     al,dx
  40b329:	(bad)  
  40b32a:	mov    bh,0x59
  40b32c:	add    BYTE PTR ds:0xc9bd869e,bh
  40b332:	cvtps2pd xmm7,xmm7
  40b335:	xor    DWORD PTR [esi+0x623167b6],edx
  40b33b:	push   0xffffffbe
  40b33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b33e:	xchg   ebp,eax
  40b33f:	or     ebp,eax
  40b341:	pop    es
  40b342:	mov    al,0x59
  40b344:	call   DWORD PTR [esi-0x7108994b]
  40b34a:	neg    DWORD PTR [ecx+0x75]
  40b34d:	cmp    DWORD PTR [edx],ecx
  40b34f:	lods   eax,DWORD PTR ds:[esi]
  40b350:	mov    dh,0x7e
  40b352:	pop    es
  40b353:	pop    edx
  40b354:	mov    ch,0x89
  40b356:	push   edi
  40b357:	pop    ecx
  40b358:	jmp    FWORD PTR [esi-0x33]
  40b35b:	or     ch,al
  40b35d:	add    ch,al
  40b35f:	sbb    BYTE PTR [edx-0x1],bl
  40b362:	pop    esi
  40b363:	or     DWORD PTR [eax+eiz*2+0x59de505e],ebx
  40b36a:	les    eax,FWORD PTR [eax]
  40b36c:	ror    DWORD PTR [edx+0x59ce507f],0x84
  40b373:	imul   edi,DWORD PTR [esi+0x34503659],0x7f89190c
  40b37d:	pop    ecx
  40b37e:	es push eax
  40b380:	je     0x40b3ba
  40b382:	es push eax
  40b384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b385:	pop    ecx
  40b386:	pushf  
  40b387:	add    DWORD PTR [ecx-0x69b03b0c],edx
  40b38d:	pop    ecx
  40b38e:	mov    esp,0xfe599664
  40b393:	pusha  
  40b394:	sbb    eax,0x7e4ff69b
  40b399:	(bad)  
  40b39a:	fst    QWORD PTR [edi+0x76]
  40b39d:	pop    ecx
  40b39e:	fld    st(1)
  40b3a0:	das    
  40b3a1:	pop    ecx
  40b3a2:	fimul  WORD PTR [edi-0x64]
  40b3a5:	ins    BYTE PTR es:[edi],dx
  40b3a6:	fimul  WORD PTR [edi+0x5e]
  40b3a9:	ins    BYTE PTR es:[edi],dx
  40b3aa:	setb   BYTE PTR [esi+0x59]
  40b3ae:	(bad)  
  40b3af:	xchg   ebp,eax
  40b3b0:	dec    ecx
  40b3b1:	push   ecx
  40b3b2:	mov    esi,0x7815514f
  40b3b7:	dec    edi
  40b3b8:	ds pop ecx
  40b3ba:	in     al,0x58
  40b3bc:	ds pop ecx
  40b3be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3bf:	pusha  
  40b3c0:	add    DWORD PTR [ebx+0x264f9e00],ebx
  40b3c6:	mov    edi,0x59d6619e
  40b3cb:	mov    cs,WORD PTR [edi+0x16]
  40b3ce:	iret   
  40b3cf:	mov    ah,BYTE PTR [eax-0x5b]
  40b3d2:	sahf   
  40b3d3:	xor    DWORD PTR [ecx],ecx
  40b3d5:	xor    BYTE PTR [esi+0x29],al
  40b3d8:	or     DWORD PTR [esp+ecx*4+0x2d008b5d],edx
  40b3df:	add    eax,0x2d82ffe3
  40b3e4:	push   eax
  40b3e5:	jne    0x40b3d8
  40b3e7:	retf   0xb612
  40b3ea:	fsubp  st(1),st
  40b3ec:	add    DWORD PTR [ebp-0x2b],0x39f7c5af
  40b3f3:	dec    ebp
  40b3f4:	enter  0x2856,0x2d
  40b3f8:	loope  0x40b426
  40b3fa:	push   ss
  40b3fb:	repnz dec esi
  40b3fd:	(bad)  
  40b3fe:	cld    
  40b3ff:	leave  
  40b400:	rol    DWORD PTR [eax-0x17],0x8a
  40b404:	dec    edi
  40b405:	mov    ebx,0xc00279a6
  40b40a:	adc    eax,0xe867bf00
  40b40f:	xor    bl,BYTE PTR [esi-0x42]
  40b412:	mov    gs,edi
  40b414:	push   esi
  40b415:	push   eax
  40b416:	xchg   bh,ah
  40b418:	push   es
  40b419:	call   0xff8edc8f
  40b41e:	xor    DWORD PTR [ebp-0x6f],0xc4b76eff
  40b425:	idiv   DWORD PTR [ecx+0x56beca00]
  40b42b:	test   al,0x32
  40b42d:	loope  0x40b45b
  40b42f:	mov    esi,0x14fe4ef3
  40b434:	cwde   
  40b435:	rol    DWORD PTR [eax-0x17],0x4a
  40b439:	inc    ebx
  40b43a:	mov    ebx,0xc002093e
  40b43f:	mov    ebp,0xeb67bea1
  40b444:	xor    bl,BYTE PTR [esi-0x42]
  40b447:	es addr16 push esi
  40b44a:	push   eax
  40b44b:	push   ds
  40b44c:	jg     0x40b454
  40b44e:	call   0xff8efd10
  40b453:	add    DWORD PTR [ecx],eax
  40b455:	xchg   ecx,eax
  40b456:	inc    DWORD PTR [eax]
  40b458:	das    
  40b459:	bound  ebx,QWORD PTR [edi+0x57]
  40b45c:	cdq    
  40b45d:	or     bh,bh
  40b45f:	jne    0x40b4b1
  40b461:	loop   0x40b4d9
  40b463:	std    
  40b464:	dec    edi
  40b465:	mov    dh,0xfe
  40b467:	jne    0x40b4b5
  40b469:	mov    dh,0x74
  40b46b:	or     BYTE PTR [eax-0x50],ah
  40b46e:	mov    ah,0xff
  40b470:	pop    edi
  40b471:	mov    esp,0x994804c1
  40b476:	mov    ch,ah
  40b478:	leave  
  40b479:	enter  0xf7db,0xef
  40b47d:	mov    ch,0x8c
  40b47f:	inc    ebp
  40b480:	fcom   QWORD PTR [esi+edi*8+0x34b6fc75]
  40b487:	mov    edi,0xe7ff4460
  40b48c:	add    BYTE PTR [edx+0x130000a9],cl
  40b492:	retf   0x850e
  40b495:	leave  
  40b496:	add    eax,DWORD PTR [eax]
  40b498:	add    bh,al
  40b49a:	inc    edi
  40b49b:	test   DWORD PTR [eax],0xc70009d8
  40b4a1:	adc    eax,0xc807feb9
  40b4a6:	or     DWORD PTR [edx+0x0],ebp
  40b4a9:	add    cl,BYTE PTR [edx]
  40b4ab:	push   0x0
  40b4ad:	loop   0x40b4b8
  40b4af:	lea    eax,[ebp+0x64]
  40b4b2:	xchg   ebp,eax
  40b4b3:	mov    WORD PTR [ebp-0x1419c],es
  40b4b9:	cwde   
  40b4ba:	mov    dh,0x74
  40b4bc:	clc    
  40b4bd:	outs   dx,DWORD PTR ds:[esi]
  40b4be:	cmp    bl,bh
  40b4c0:	call   0x412239
  40b4c5:	xchg   ebx,eax
  40b4c6:	leave  
  40b4c7:	jae    0x40b4ce
  40b4c9:	inc    ecx
  40b4ca:	mov    DWORD PTR [ecx],eax
  40b4cc:	add    BYTE PTR [eax+0x31489a61],bl
  40b4d2:	mov    eax,ds:0x2c04ff03
  40b4d7:	imul   esi,DWORD PTR [ebp+0x505706ba],0xffffffba
  40b4de:	out    dx,eax
  40b4df:	mov    BYTE PTR [ebp-0xa9b1a3],al
  40b4e5:	add    DWORD PTR [edx+0x6b],esi
  40b4e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4e9:	call   0x4e2f:0xb4895666
  40b4f0:	inc    DWORD PTR [eax]
  40b4f2:	inc    esi
  40b4f3:	inc    edi
  40b4f4:	pop    edx
  40b4f5:	mov    bh,0x3e
  40b4f7:	ds jmp 0xaec583fc
  40b4fd:	inc    eax
  40b4fe:	xor    DWORD PTR [ebx-0x6be10f70],ecx
  40b504:	push   esi
  40b505:	jmp    DWORD PTR [ebx+ebx*8-0x36]
  40b509:	inc    eax
  40b50a:	xor    DWORD PTR [edx+0x5a],edi
  40b50d:	mov    edx,0x858c6c0e
  40b512:	or     eax,0x8bff566c
  40b517:	(bad)  
  40b518:	jmp    0x40b4bf
  40b51a:	pop    esi
  40b51b:	and    DWORD PTR [edi+edi*8],eax
  40b51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b51f:	ror    BYTE PTR [ebp-0x1],cl
  40b522:	out    0xd3,al
  40b524:	movsx  ebp,WORD PTR [ecx+0x21]
  40b528:	add    al,0xe8
  40b52a:	hlt    
  40b52b:	test   al,0x56
  40b52d:	(bad)  
  40b52e:	mov    eax,0xc6f766e5
  40b533:	mov    bl,0xe8
  40b535:	call   DWORD PTR [esi-0x35]
  40b538:	lods   eax,DWORD PTR ds:[esi]
  40b539:	inc    eax
  40b53a:	xor    ebx,eax
  40b53c:	(bad)  
  40b53d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b53f:	or     edx,DWORD PTR [esi-0x1]
  40b542:	pop    esp
  40b543:	ror    edx,cl
  40b545:	inc    eax
  40b546:	xor    edx,ecx
  40b548:	xchg   ebp,eax
  40b549:	mov    edx,0x8c260996
  40b54e:	mov    ah,0x69
  40b550:	push   ss
  40b551:	push   esi
  40b552:	xchg   bh,bl
  40b554:	call   0xb502b644
  40b559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b55a:	add    esi,DWORD PTR [esi-0x6a]
  40b55d:	stc    
  40b55e:	dec    ebp
  40b55f:	outs   dx,BYTE PTR ds:[esi]
  40b560:	dec    esp
  40b561:	dec    BYTE PTR [edi]
  40b563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b564:	shl    DWORD PTR [edi+0x33aa4903],0x56
  40b56b:	push   esi
  40b56c:	sub    BYTE PTR [esp+ebp*2+0x46],0x4c
  40b571:	fsubp  st(2),st
  40b573:	inc    esi
  40b574:	in     al,0xae
  40b576:	lods   eax,DWORD PTR ds:[esi]
  40b577:	icebp  
  40b578:	or     dh,cl
  40b57a:	pop    DWORD PTR [ecx+0x54]
  40b57d:	(bad)  
  40b57e:	push   ebp
  40b57f:	cs push ss
  40b581:	jle    0x40b54f
  40b583:	jno    0x40b58e
  40b585:	rol    DWORD PTR [ecx-0x7451b425],0xac
  40b58c:	sub    al,0x9e
  40b58e:	push   ebp
  40b58f:	push   cs
  40b590:	mov    BYTE PTR [eax+eiz*2-0x2],bl
  40b594:	dec    ebx
  40b595:	xchg   esi,eax
  40b596:	add    al,0x85
  40b598:	out    0x69,al
  40b59a:	xchg   edi,eax
  40b59b:	add    eax,0x31558654
  40b5a0:	aad    0x1c
  40b5a2:	and    DWORD PTR [eax+eiz*2+0x8de557e],0x94eb0f5
  40b5ad:	jmp    0xd48c4516
  40b5b2:	or     ebx,ecx
  40b5b4:	pop    edx
  40b5b5:	call   0x68:0x944bbe55
  40b5bc:	mov    esi,0x2455464b
  40b5c1:	add    DWORD PTR [ecx-0x3e],edx
  40b5c4:	loop   0x40b611
  40b5c6:	add    BYTE PTR [esi],dh
  40b5c8:	add    al,0x96
  40b5ca:	call   0xff8cb205
  40b5cf:	pushf  
  40b5d0:	cmp    ah,BYTE PTR [ecx+0x34]
  40b5d3:	push   ebp
  40b5d4:	fmul   QWORD PTR [ebx-0x1]
  40b5d7:	pop    esp
  40b5d8:	adc    DWORD PTR [edi+edi*8+0xe],edx
  40b5dc:	(bad)  
  40b5de:	pop    es
  40b5df:	adc    DWORD PTR [edi-0x6b],ecx
  40b5e2:	(bad)  
  40b5e3:	(bad)  
  40b5e4:	std    
  40b5e5:	xchg   ebp,eax
  40b5e6:	loopne 0x40b5e6
  40b5e8:	add    eax,0x2a74ff4c
  40b5ed:	popa   
  40b5ee:	sbb    BYTE PTR [ebp-0x6b00b41b],bl
  40b5f4:	(bad)  
  40b5f5:	push   ebx
  40b5f6:	call   esi
  40b5f8:	in     eax,0xd5
  40b5fa:	pop    es
  40b5fb:	shr    DWORD PTR [eax],0x95
  40b5fe:	inc    esi
  40b600:	test   DWORD PTR [esp+eiz*8-0x17b5824a],edx
  40b607:	lds    ebp,FWORD PTR [edx+ecx*2+0x5da7aeff]
  40b60e:	mul    DWORD PTR [esi+0x57e16165]
  40b614:	pop    ebp
  40b615:	dec    edx
  40b616:	call   FWORD PTR [edx+ecx*4+0x52]
  40b61a:	dec    DWORD PTR [esi-0x7949cc76]
  40b620:	add    BYTE PTR [ebp+0x7589b54a],al
  40b626:	dec    edx
  40b627:	inc    DWORD PTR [ecx+0x6eff9369]
  40b62d:	jge    0x40b5c3
  40b62f:	fcomp  QWORD PTR [esi+0x65]
  40b632:	dec    edx
  40b633:	call   0xff8b6a61
  40b638:	push   esi
  40b639:	scas   eax,DWORD PTR es:[edi]
  40b63a:	pop    ecx
  40b63b:	test   DWORD PTR [esi+0x5d],0xa000754a
  40b642:	fidiv  WORD PTR [esi]
  40b644:	(bad)  
  40b645:	addr16 mov ch,0xfe
  40b648:	mov    ch,0x58
  40b64a:	mov    ebp,0x6cf0fffe
  40b64f:	mov    dh,0xff
  40b651:	push   edi
  40b652:	mov    ch,0x44
  40b654:	clc    
  40b655:	and    DWORD PTR [ebp+edi*8-0x1],eax
  40b659:	daa    
  40b65a:	mov    ch,0x74
  40b65c:	cld    
  40b65d:	xor    cl,cl
  40b65f:	mov    eax,ds:0xc1bf5800
  40b664:	or     BYTE PTR [eax-0x65],bl
  40b667:	mov    ch,ah
  40b669:	retf   
  40b66a:	or     esp,edi
  40b66c:	push   0x48
  40b66e:	pusha  
  40b66f:	or     edi,edi
  40b671:	in     eax,dx
  40b672:	dec    esp
  40b673:	out    0xb9,eax
  40b675:	stos   DWORD PTR es:[edi],eax
  40b676:	mov    dh,0xfe
  40b678:	mov    DWORD PTR ds:0xffd267b9,ecx
  40b67e:	inc    ebx
  40b67f:	(bad)  
  40b680:	(bad)  
  40b681:	ins    DWORD PTR es:[edi],dx
  40b682:	dec    ebp
  40b683:	out    0xf6,eax
  40b685:	add    ch,ah
  40b687:	mov    ch,0xfe
  40b689:	call   FWORD PTR [ebp-0x47]
  40b68c:	(bad)  
  40b68d:	jne    0x40b69f
  40b68f:	scas   al,BYTE PTR es:[edi]
  40b690:	jecxz  0x40b645
  40b692:	xlat   BYTE PTR ds:[ebx]
  40b693:	mov    ch,0xc8
  40b695:	ret    0x60c
  40b698:	push   ebp
  40b699:	mov    esi,DWORD PTR [ebx+eax*4-0x4a602f3c]
  40b6a0:	dec    BYTE PTR [ebp-0xb046e3]
  40b6a6:	fisttp QWORD PTR [ecx-0x2]
  40b6a9:	xor    eax,0x408d27
  40b6ae:	mov    al,0x3b
  40b6b0:	mov    eax,ds:0xbf4ad800
  40b6b5:	cmovge edi,ebx
  40b6b8:	add    DWORD PTR [eax],eax
  40b6ba:	xor    DWORD PTR [eax+0x4a],esp
  40b6bd:	inc    ebp
  40b6be:	mov    ecx,0x3100035f
  40b6c3:	sbb    ecx,ecx
  40b6c5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6c7:	bound  eax,QWORD PTR [ebx]
  40b6c9:	add    BYTE PTR [ebx],cl
  40b6cb:	pusha  
  40b6cc:	(bad)  
  40b6ce:	or     BYTE PTR [eax-0x23],ah
  40b6d1:	(bad)  
  40b6d2:	mov    ebp,0xb450579c
  40b6d7:	in     al,0x57
  40b6d9:	idiv   DWORD PTR [esi-0xe]
  40b6dc:	mov    bl,0xfe
  40b6de:	cld    
  40b6df:	not    DWORD PTR [edx+0x75]
  40b6e2:	ins    DWORD PTR es:[edi],dx
  40b6e3:	idiv   DWORD PTR [esi-0x19fce5f]
  40b6e9:	mov    edi,0x5c5ce500
  40b6ee:	std    
  40b6ef:	xor    BYTE PTR [eax+0x3],ah
  40b6f2:	push   0xffc517aa
  40b6f7:	inc    edi
  40b6f8:	mov    ah,0xff
  40b6fa:	out    0x9d,eax
  40b6fc:	js     0x40b750
  40b6fe:	jmp    FWORD PTR [edx+0x2585808f]
  40b704:	mov    BYTE PTR [edx-0x1],dl
  40b707:	and    DWORD PTR [esp+ebx*2],0x527fd8e1
  40b70e:	mov    DWORD PTR [edx+eax*4+0x1d0eff5a],ebp
  40b715:	add    al,0x68
  40b717:	push   edi
  40b718:	retf   0xffc4
  40b71b:	jmp    ebp
  40b71d:	push   edx
  40b71e:	div    esi
  40b720:	xchg   edi,eax
  40b721:	push   edx
  40b722:	xor    eax,0xffc4faae
  40b727:	into   
  40b728:	call   0xe487:0xa9deff8b
  40b72f:	fidiv  WORD PTR [edi+0x9316a51]
  40b735:	shl    edx,1
  40b737:	pop    esi
  40b738:	retf   0x52e8
  40b73b:	test   BYTE PTR [ecx],bh
  40b73d:	pop    esi
  40b73e:	push   edx
  40b73f:	mov    dh,0x48
  40b741:	adc    al,0x93
  40b743:	stc    
  40b744:	leave  
  40b745:	call   0x3ec232a5
  40b74a:	push   edx
  40b74b:	test   al,0x8e
  40b74d:	inc    ebp
  40b74e:	pop    edx
  40b74f:	add    BYTE PTR [esi+0x1903c348],dl
  40b755:	in     eax,dx
  40b756:	rol    ah,0x86
  40b759:	inc    edi
  40b75a:	push   esp
  40b75b:	push   ebx
  40b75c:	xchg   BYTE PTR [eax+0x16],cl
  40b75f:	push   edx
  40b760:	cmp    al,0x88
  40b762:	mov    eax,ds:0x55306ec4
  40b767:	mov    esp,DWORD PTR [esi+0x48]
  40b76a:	jo     0x40b6f4
  40b76c:	dec    ecx
  40b76d:	inc    eax
  40b76e:	not    BYTE PTR [ecx-0x35]
  40b771:	or     BYTE PTR [ecx-0x173616ec],al
  40b777:	push   eax
  40b778:	jl     0x40b7b3
  40b77a:	(bad)  
  40b77b:	push   ecx
  40b77c:	ds dec eax
  40b77e:	sbb    al,0x91
  40b780:	jmp    0xbf9ca04e
  40b785:	add    dh,0x51
  40b788:	mov    eax,0x1e59c98d
  40b78d:	dec    eax
  40b78e:	fs xchg ebp,edi
  40b791:	aas    
  40b792:	scas   al,BYTE PTR es:[edi]
  40b793:	push   ecx
  40b794:	popa   
  40b795:	mov    cl,0xcf
  40b797:	stos   DWORD PTR es:[edi],eax
  40b798:	jno    0x40b7a3
  40b79a:	sahf   
  40b79b:	xchg   edi,eax
  40b79c:	add    DWORD PTR [eax-0x6a],eax
  40b79f:	push   ecx
  40b7a0:	idiv   ch
  40b7a2:	dec    ebp
  40b7a3:	mov    esp,0xdd910971
  40b7a8:	sahf   
  40b7a9:	inc    edi
  40b7aa:	jle    0x40b7a9
  40b7ac:	sahf   
  40b7ad:	mov    esp,0x85adcfff
  40b7b2:	aam    0x76
  40b7b4:	add    BYTE PTR [eax+0x48],ah
  40b7b7:	add    al,0xdc
  40b7b9:	ret    0x3046
  40b7bc:	outs   dx,BYTE PTR ds:[esi]
  40b7bd:	mov    dh,0x64
  40b7bf:	not    DWORD PTR [esi+0x60]
  40b7c2:	(bad)  
  40b7c4:	adc    esi,eax
  40b7c6:	inc    edi
  40b7c7:	call   DWORD PTR [edx-0x57]
  40b7ca:	adc    al,al
  40b7cc:	mov    ch,0x28
  40b7ce:	(bad)  
  40b7d0:	add    eax,0x26ff47be
  40b7d5:	mov    dh,0x64
  40b7d7:	mul    DWORD PTR [esi]
  40b7d9:	loopne 0x40b7f8
  40b7db:	add    cl,ch
  40b7dd:	xor    dl,BYTE PTR [esi+0x47d83985]
  40b7e3:	(bad)  
  40b7e4:	mov    ecx,0xa857fd8a
  40b7e9:	xor    cl,BYTE PTR [eax-0x4b]
  40b7ec:	stc    
  40b7ed:	stc    
  40b7ee:	inc    edi
  40b7ef:	push   esi
  40b7f1:	aas    
  40b7f2:	mov    BYTE PTR [eax-0x58],cl
  40b7f5:	xor    dh,BYTE PTR [ecx]
  40b7f7:	sbb    eax,0x8947e1a1
  40b7fc:	or     al,BYTE PTR fs:[eax-0x1]
  40b800:	(bad)  
  40b801:	lods   eax,DWORD PTR ds:[esi]
  40b802:	test   esp,esp
  40b804:	(bad)  
  40b805:	add    DWORD PTR [esi+0x0],0xa2aef6
  40b80c:	jmp    0xc5fe4243
  40b811:	jns    0x40b859
  40b813:	(bad)  
  40b814:	jmp    0xe9cf454a
  40b819:	add    BYTE PTR [edx],dh
  40b81b:	or     DWORD PTR [ebx-0xc1a5a4],eax
  40b821:	xchg   esi,eax
  40b822:	xor    dl,BYTE PTR [esi]
  40b824:	test   BYTE PTR [eax+0x32],ch
  40b827:	or     DWORD PTR [eax],eax
  40b829:	add    BYTE PTR [eax+0x3d],al
  40b82c:	(bad)  
  40b82d:	out    dx,al
  40b82e:	push   ds
  40b82f:	fnstenv [eax+ecx*1-0x50]
  40b833:	push   esi
  40b834:	mov    al,0xff
  40b836:	pop    edi
  40b837:	fnstenv [esp+ebp*8-0x12699]
  40b83e:	in     eax,0x42
  40b840:	out    0xd0,eax
  40b842:	cdq    
  40b843:	fsin   
  40b845:	inc    ebp
  40b847:	loop   0x40b83f
  40b849:	(bad)  
  40b84a:	out    dx,eax
  40b84b:	fdiv   DWORD PTR [eax+ecx*1+0x0]
  40b84f:	int3   
  40b850:	mov    al,0xff
  40b852:	pop    edi
  40b853:	fnstenv [esp+eiz*8-0x126b9]
  40b85a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b85b:	inc    edx
  40b85c:	out    0xb4,eax
  40b85e:	(bad)  
  40b860:	(bad)  
  40b861:	call   ebp
  40b863:	cmc    
  40b864:	idiv   bh
  40b866:	aas    
  40b867:	fnstenv [eax+ecx*1+0x40]
  40b86b:	dec    esi
  40b86c:	mov    al,0xff
  40b86e:	pop    edi
  40b86f:	(bad)  
  40b870:	mov    ah,0xe0
  40b872:	push   edi
  40b873:	(bad)  
  40b874:	(bad)  
  40b875:	inc    ebp
  40b877:	inc    ecx
  40b878:	out    0x98,eax
  40b87a:	test   eax,0x83fed6
  40b87f:	popf   
  40b880:	cmc    
  40b881:	idiv   bh
  40b883:	pop    edi
  40b884:	or     eax,0x989b1b74
  40b889:	shl    bh,1
  40b88b:	out    dx,eax
  40b88c:	aad    0x3
  40b88e:	jne    0x40b88a
  40b890:	ret    0xd884
  40b893:	xlat   BYTE PTR ds:[ebx]
  40b894:	aad    0xfe
  40b896:	dec    DWORD PTR [eax]
  40b898:	xlat   BYTE PTR ds:[ebx]
  40b899:	je     0x40b8a3
  40b89b:	mov    al,ds:0x9fffb040
  40b8a0:	loope  0x40b8ab
  40b8a2:	push   0x31
  40b8a4:	xor    BYTE PTR [esi+0x75],cl
  40b8a7:	cmp    DWORD PTR [eax-0x71194f04],ecx
  40b8ad:	dec    edi
  40b8ae:	mov    ch,0xd5
  40b8b0:	mov    esi,0xebc9ff4e
  40b8b5:	xchg   edi,eax
  40b8b6:	dec    esi
  40b8b8:	mov    dh,0x98
  40b8ba:	in     al,dx
  40b8bb:	mov    esi,0x70e84eae
  40b8c0:	pushf  
  40b8c1:	dec    edi
  40b8c2:	push   DWORD PTR [esi-0x5108a35c]
  40b8c8:	(bad)  
  40b8c9:	pop    ebx
  40b8ca:	ss (bad) 
  40b8cd:	dec    esi
  40b8ce:	jmp    esp
  40b8d0:	iret   
  40b8d1:	push   esi
  40b8d2:	call   DWORD PTR [esi-0x714be539]
  40b8d8:	test   BYTE PTR [esi-0x4b],0x69
  40b8dc:	es dec edi
  40b8de:	dec    DWORD PTR [ecx+0xff974f]
  40b8e4:	jbe    0x40b904
  40b8e6:	cdq    
  40b8e7:	lock pushw ss
  40b8ea:	dec    edi
  40b8eb:	call   0xff8fbd2c
  40b8f0:	pop    esi
  40b8f1:	ins    BYTE PTR es:[edi],dx
  40b8f2:	dec    ebx
  40b8f3:	jmp    0xff8ef574
  40b8f8:	dec    esi
  40b8f9:	mov    esp,0x9000e84e
  40b8fe:	add    eax,DWORD PTR [eax]
  40b900:	push   0xddfffb71
  40b905:	stos   BYTE PTR es:[edi],al
  40b906:	pop    esi
  40b907:	xor    ebp,0x56
  40b90a:	fcos   
  40b90c:	cwde   
  40b90d:	cmp    eax,0x5a29754e
  40b912:	es mov cl,0x16
  40b915:	jl     0x40b993
  40b917:	inc    ebp
  40b918:	or     eax,0x705803cb
  40b91d:	or     ecx,ebp
  40b91f:	dec    esi
  40b920:	test   BYTE PTR [ecx],dl
  40b922:	xchg   ecx,eax
  40b923:	shl    ch,1
  40b925:	inc    esp
  40b926:	xchg   esi,eax
  40b927:	dec    esi
  40b928:	fs inc ebp
  40b92a:	mov    ds,eax
  40b92c:	xor    DWORD PTR cs:[ebx],ebx
  40b92f:	xchg   ebp,eax
  40b930:	fiadd  WORD PTR [eax+esi*4+0x41]
  40b934:	sub    eax,0xdd7b1c09
  40b939:	mov    ah,BYTE PTR [ebp+0x6644be3f]
  40b93f:	xor    BYTE PTR [ebp+eax*2-0x47],0x4e
  40b944:	cmp    al,0x15
  40b946:	push   esi
  40b947:	sbb    BYTE PTR [eax],al
  40b949:	out    dx,al
  40b94a:	shl    DWORD PTR [edi+0x662c9903],1
  40b950:	add    esi,DWORD PTR [ecx]
  40b952:	adc    BYTE PTR [ecx],ch
  40b954:	(bad)  
  40b955:	lods   eax,DWORD PTR ds:[esi]
  40b956:	in     al,0xea
  40b958:	add    esi,DWORD PTR [ecx]
  40b95a:	dec    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	dec    ebx
  40b95d:	xor    DWORD PTR [ecx],ecx
  40b95f:	jmp    0x150f2f67
  40b964:	dec    esi
  40b965:	cs or  ecx,ebp
  40b968:	fldcw  WORD PTR [esi-0x4e]
  40b96b:	call   0xe8f32049
  40b970:	xor    ah,0x3c
  40b973:	cdq    
  40b974:	sub    BYTE PTR [ebp+edi*1-0x26b1b202],0xed
  40b97c:	xlat   BYTE PTR ds:[ebx]
  40b97d:	ds inc esp
  40b97f:	pop    esp
  40b980:	push   eax
  40b981:	dec    ecx
  40b982:	cmp    BYTE PTR [esi+0x4],0x31
  40b986:	adc    BYTE PTR [ecx+0xb3235d8],ch
  40b98c:	add    dh,BYTE PTR [ecx]
  40b98e:	or     DWORD PTR [ecx+0x69],edx
  40b991:	imul   ecx,edx,0x159c4ce8
  40b997:	add    cl,al
  40b999:	or     edi,DWORD PTR [ebx-0x1]
  40b99c:	scas   al,BYTE PTR es:[edi]
  40b99d:	mov    BYTE PTR [ecx-0x73],bl
  40b9a0:	ins    BYTE PTR es:[edi],dx
  40b9a1:	pop    ecx
  40b9a2:	cmp    al,0xff
  40b9a4:	sahf   
  40b9a5:	mov    ebp,0xc426e7d9
  40b9aa:	inc    ebx
  40b9ab:	jmp    DWORD PTR [eax+0x0]
  40b9ae:	scas   al,BYTE PTR es:[edi]
  40b9af:	cmp    bh,dh
  40b9b1:	xchg   BYTE PTR [esi+edx*4-0x7b],ch
  40b9b5:	lods   eax,DWORD PTR ds:[esi]
  40b9b6:	jl     0x40b9fc
  40b9b8:	call   FWORD PTR [ecx]
  40b9ba:	in     eax,dx
  40b9bb:	jnp    0x40ba15
  40b9bd:	sub    BYTE PTR ds:0x6459b544,ch
  40b9c3:	inc    esp
  40b9c4:	call   FWORD PTR [esi+0x1e]
  40b9c7:	test   BYTE PTR [eax-0x58],cl
  40b9ca:	xor    dh,BYTE PTR [ecx]
  40b9cc:	push   ecx
  40b9cd:	xchg   edi,eax
  40b9ce:	hlt    
  40b9cf:	inc    ebx
  40b9d0:	mov    DWORD PTR [ecx+ecx*1+0x3c],ebp
  40b9d4:	(bad)  
  40b9d5:	ds jnp 0x40ba1b
  40b9d8:	addr16 daa 
  40b9da:	(bad)  
  40b9dc:	jmp    FWORD PTR ds:0x26f7389e
  40b9e2:	in     al,dx
  40b9e3:	inc    ebx
  40b9e4:	xor    eax,0xffc8b55e
  40b9e9:	add    BYTE PTR [eax+0x7b],al
  40b9ec:	dec    DWORD PTR [esi]
  40b9ee:	jmp    0x6a43:0xedfeec8d
  40b9f5:	jmp    0xa8991074
  40b9fa:	xor    al,BYTE PTR [ebp+esi*4-0x7]
  40b9fe:	fld    QWORD PTR [ebx-0x1]
  40ba01:	out    0x27,al
  40ba03:	test   BYTE PTR [eax+0x28],cl
  40ba06:	sub    eax,0x7d9f1531
  40ba0b:	inc    edx
  40ba0c:	mov    DWORD PTR [edx+ecx*4+0x3a],esp
  40ba10:	inc    DWORD PTR [eax]
  40ba12:	add    bh,dh
  40ba14:	pusha  
  40ba15:	jmp    DWORD PTR [edi-0x4a]
  40ba18:	outs   dx,BYTE PTR ds:[esi]
  40ba19:	inc    eax
  40ba1a:	add    bh,al
  40ba1c:	fwait
  40ba1d:	lock not edi
  40ba20:	aad    0xfe
  40ba22:	xor    eax,0x407e97
  40ba27:	mov    al,ds:0xc7ffb4dd
  40ba2c:	mov    edi,0xd5bfe084
  40ba31:	dec    BYTE PTR [ebp-0x911b3]
  40ba37:	push   edi
  40ba38:	jbe    0x40baa1
  40ba3a:	fldenv [eax]
  40ba3c:	inc    esi
  40ba3d:	(bad)  
  40ba3e:	(bad)  
  40ba3f:	std    
  40ba40:	aad    0xf6
  40ba42:	call   DWORD PTR [edi-0x2b]
  40ba45:	xor    al,0xbf
  40ba47:	add    BYTE PTR [edi-0x1],0xe7
  40ba4b:	ins    BYTE PTR es:[edi],dx
  40ba4c:	fwait
  40ba4d:	(bad)  
  40ba4e:	call   DWORD PTR [ebx+0xb1373c6]
  40ba54:	xchg   ebx,eax
  40ba55:	fdiv   st,st(7)
  40ba57:	push   edi
  40ba58:	aad    0x3
  40ba5a:	jne    0x40b9ee
  40ba5c:	aad    0x2f
  40ba5e:	(bad)  
  40ba5f:	or     eax,0x57fff6f2
  40ba64:	loope  0x40ba6f
  40ba66:	(bad)  
  40ba67:	or     eax,0x47fff6f2
  40ba6c:	cmp    edi,edi
  40ba6e:	call   FWORD PTR [eax+0x76]
  40ba71:	out    0x95,eax
  40ba73:	sbb    dl,ch
  40ba75:	dec    BYTE PTR [ebp-0x90a3300]
  40ba7b:	inc    DWORD PTR [edi+0x77]
  40ba7e:	shl    DWORD PTR [bx+si-0xb9],0xfe
  40ba84:	popf   
  40ba85:	(bad)  
  40ba87:	call   DWORD PTR [edi-0x32]
  40ba8a:	xor    al,0xbf
  40ba8c:	xor    eax,ebp
  40ba8e:	(bad)  
  40ba8f:	dec    DWORD PTR [esi]
  40ba91:	rcl    BYTE PTR [eax+0x43371eff],0x74
  40ba98:	inc    edx
  40ba99:	scas   eax,DWORD PTR es:[edi]
  40ba9a:	mov    al,dl
  40ba9c:	push   es
  40ba9d:	jnp    0x40baea
  40ba9f:	add    al,0x7c
  40baa1:	es dec edx
  40baa3:	xor    BYTE PTR [esi-0x908d04c],ch
  40baa9:	mov    ds:0xb4f60a5f,al
  40baae:	das    
  40baaf:	mul    esi
  40bab1:	xchg   edx,eax
  40bab2:	add    al,0x0
  40bab4:	xor    DWORD PTR [eax],esi
  40bab6:	mov    bl,0xe7
  40bab8:	cmp    dh,0x4a
  40babb:	push   DWORD PTR [edx-0x3908a004]
  40bac1:	mov    dl,0x3
  40bac3:	je     0x40bac3
  40bac5:	scas   al,BYTE PTR es:[edi]
  40bac6:	mov    ah,dl
  40bac8:	mov    esi,0x24024ae2
  40bacd:	and    bl,dh
  40bacf:	push   DWORD PTR [ebp-0x6108c854]
  40bad5:	retf   0xfeb3
  40bad8:	fmul   st(3),st
  40bada:	push   edx
  40badb:	inc    DWORD PTR [eax]
  40badd:	mov    es,edi
  40badf:	fild   DWORD PTR [esi+0x5bffef2]
  40bae6:	cmp    DWORD PTR [esi+0x4b1a65bd],eax
  40baec:	push   DWORD PTR [ecx]
  40baee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baef:	lock (bad) 
  40baf1:	pushf  
  40baf2:	or     edx,DWORD PTR [ebx-0x1]
  40baf5:	pop    esi
  40baf6:	pop    ss
  40baf7:	div    DWORD PTR [ecx-0x7abdbdaa]
  40bafd:	push   ebp
  40bafe:	inc    edx
  40baff:	dec    edx
  40bb00:	push   DWORD PTR [ecx]
  40bb02:	xor    BYTE PTR [ebx],al
  40bb04:	add    BYTE PTR [edx+0x3e5fa408],dh
  40bb0a:	inc    ecx
  40bb0b:	fiadd  WORD PTR [ebx]
  40bb0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb0e:	mov    ah,0x69
  40bb10:	mov    BYTE PTR ds:0x314ace39,dl
  40bb16:	mov    ch,0x4a
  40bb18:	xchg   esp,edx
  40bb1a:	xor    DWORD PTR [esi+0x3d0a0e4a],esi
  40bb20:	lods   eax,DWORD PTR ds:[esi]
  40bb21:	mov    cs,WORD PTR [ebx]
  40bb23:	jmp    0x1c817a82
  40bb28:	cld    
  40bb29:	push   cs
  40bb2a:	pushf  
  40bb2b:	dec    edi
  40bb2c:	dec    edx
  40bb2d:	out    dx,al
  40bb2e:	inc    eax
  40bb2f:	pop    esp
  40bb30:	push   edi
  40bb31:	fiadd  WORD PTR [eax-0x72]
  40bb34:	dec    edx
  40bb35:	adc    DWORD PTR fs:[ecx+0x7e408761],edx
  40bb3c:	dec    edx
  40bb3d:	test   BYTE PTR [ecx],dh
  40bb3f:	jle    0x40bb8b
  40bb41:	add    dh,al
  40bb43:	inc    eax
  40bb44:	hlt    
  40bb45:	sti    
  40bb46:	(bad)  
  40bb47:	popa   
  40bb48:	xchg   edi,eax
  40bb49:	dec    edx
  40bb4a:	mov    dh,0x40
  40bb4c:	xchg   esp,eax
  40bb4d:	aaa    
  40bb4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb4f:	inc    eax
  40bb50:	push   esi
  40bb51:	dec    edx
  40bb52:	fsub   QWORD PTR ds:0x409e4a56
  40bb58:	mov    esp,0x8fa18efb
  40bb5d:	dec    edx
  40bb5e:	mov    es,WORD PTR [eax+0x7c]
  40bb61:	daa    
  40bb62:	jle    0x40bba4
  40bb64:	cs dec edx
  40bb66:	add    al,0x11
  40bb68:	adc    DWORD PTR [edi+0x4a1e40c4],ebp
  40bb6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb6f:	sub    DWORD PTR [esi],ebx
  40bb71:	dec    edx
  40bb72:	inc    ax
  40bb74:	xchg   esp,eax
  40bb75:	sti    
  40bb76:	push   esi
  40bb77:	jno    0x40bbd0
  40bb79:	dec    edx
  40bb7a:	push   esi
  40bb7b:	inc    eax
  40bb7c:	xor    al,0x5f
  40bb7e:	inc    esi
  40bb7f:	inc    eax
  40bb80:	add    dh,dh
  40bb82:	jmp    0x40bb16
  40bb84:	mov    cl,0xee
  40bb86:	call   0xe11670ca
  40bb8b:	aas    
  40bb8c:	call   ecx
  40bb8e:	clc    
  40bb8f:	js     0x40bb90
  40bb91:	(bad)  
  40bb92:	js     0x40bc0a
  40bb94:	call   0xe881246f
  40bb99:	cmp    eax,0xbeff3fc2
  40bb9e:	mov    esi,0x78b6f728
  40bba3:	xor    DWORD PTR [ecx+0x78],ebp
  40bba6:	add    BYTE PTR [eax+0x40],ch
  40bba9:	call   FWORD PTR [ebp+ebx*2+0x38]
  40bbad:	call   FWORD PTR [esi-0x694f2073]
  40bbb3:	js     0x40bbf5
  40bbb5:	inc    ebp
  40bbb6:	xchg   ecx,eax
  40bbb7:	jp     0x40bc32
  40bbb9:	std    
  40bbba:	xchg   BYTE PTR [eax+0x40],ch
  40bbbd:	jne    0x40bc3c
  40bbbf:	ins    DWORD PTR es:[edi],dx
  40bbc0:	ret    
  40bbc1:	pushf  
  40bbc2:	jmp    0xe2030df9
  40bbc7:	xor    dl,dh
  40bbc9:	mov    dl,BYTE PTR [ebp-0x54]
  40bbcc:	inc    esp
  40bbcd:	hlt    
  40bbce:	shl    DWORD PTR [edx],cl
  40bbd0:	mov    bl,0xd
  40bbd2:	push   esi
  40bbd3:	jbe    0x40bbdc
  40bbd5:	call   0xff8074b3
  40bbda:	jo     0x40bbb2
  40bbdc:	inc    ebx
  40bbdd:	push   0xbe3032e9
  40bbe2:	shl    DWORD PTR [ecx+eiz*8],0x40
  40bbe6:	jmp    0xa8988245
  40bbeb:	xor    al,BYTE PTR [eax+0x75]
  40bbee:	icebp  
  40bbef:	or     ah,ah
  40bbf1:	fst    DWORD PTR [esi]
  40bbf3:	clc    
  40bbf4:	lea    eax,[ebp+0x11]
  40bbf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbf9:	nop
  40bbfa:	add    BYTE PTR [eax-0x5a9800b6],dl
  40bc00:	jae    0x40bc42
  40bc02:	add    BYTE PTR [edi],bh
  40bc04:	push   cs
  40bc05:	mov    edi,0xe80b8948
  40bc0a:	sbb    eax,0xfed09400
  40bc0f:	or     ebx,eax
  40bc11:	dec    esi
  40bc12:	and    eax,0x67d95589
  40bc17:	add    DWORD PTR [eax],ecx
  40bc19:	loop   0x40bbd8
  40bc1b:	call   DWORD PTR [ebp+0x3d]
  40bc1e:	out    0xa2,eax
  40bc20:	mov    ebp,0x45fffed1
  40bc25:	int    0xfe
  40bc27:	jne    0x40bbed
  40bc29:	shl    DWORD PTR [eax+ecx*1-0x60],1
  40bc2d:	cld    
  40bc2e:	lods   al,BYTE PTR ds:[esi]
  40bc2f:	dec    edi
  40bc31:	shl    DWORD PTR [esp+esi*8-0x50],1
  40bc35:	in     eax,dx
  40bc36:	scas   eax,DWORD PTR es:[edi]
  40bc37:	jmp    FWORD PTR [edi+0x9589862]
  40bc3d:	add    eax,0xe2c075ff
  40bc42:	std    
  40bc43:	cld    
  40bc44:	aas    
  40bc45:	sar    esi,1
  40bc47:	jne    0x40bc95
  40bc49:	shl    DWORD PTR [eax+ecx*1+0x60],1
  40bc4d:	dec    ebx
  40bc4e:	lods   eax,DWORD PTR ds:[esi]
  40bc4f:	dec    DWORD PTR [edi]
  40bc51:	add    eax,edx
  40bc53:	add    al,0x98
  40bc55:	outs   dx,DWORD PTR ds:[esi]
  40bc56:	mov    ch,ah
  40bc58:	or     edi,esi
  40bc5a:	sti    
  40bc5b:	push   0xffffff88
  40bc5d:	pop    esp
  40bc5e:	push   cs
  40bc5f:	inc    ebp
  40bc61:	inc    edx
  40bc62:	out    0xe5,eax
  40bc64:	lods   eax,DWORD PTR ds:[esi]
  40bc65:	sar    esi,1
  40bc67:	mov    ebp,edx
  40bc69:	(bad)  
  40bc6a:	add    BYTE PTR [bx+si-0x421f],cl
  40bc6f:	push   0x40724200
  40bc74:	add    BYTE PTR [ecx],dh
  40bc76:	mov    BYTE PTR [ecx+0x58],dl
  40bc79:	lock das 
  40bc7b:	dec    eax
  40bc7c:	jne    0x40bca7
  40bc7e:	sbb    BYTE PTR [ebx],dh
  40bc80:	(bad)  [esi+0x3f]
  40bc83:	inc    edi
  40bc84:	jne    0x40bccb
  40bc86:	aaa    
  40bc87:	int    0x7
  40bc89:	dec    ecx
  40bc8a:	es cdq 
  40bc8c:	push   DWORD PTR [esi]
  40bc8e:	jns    0x40bcd2
  40bc90:	add    al,0x31
  40bc92:	cmc    
  40bc93:	jp     0x40bc81
  40bc95:	mov    dl,0x6b
  40bc97:	dec    eax
  40bc98:	push   0x31
  40bc9a:	retf   0xfef3
  40bc9d:	pushf  
  40bc9e:	cmp    BYTE PTR [ebx-0x56],bl
  40bca1:	fdivr  QWORD PTR [esi+0x47]
  40bca4:	mov    DWORD PTR [esp+esi*2-0x24],ebp
  40bca8:	(bad)  
  40bca9:	(bad)  
  40bcaa:	jle    0x40bc32
  40bcac:	push   0xffc4c931
  40bcb1:	push   esi
  40bcb2:	and    eax,0x973140ac
  40bcb7:	rol    DWORD PTR [edi],1
  40bcb9:	leave  
  40bcba:	mov    ah,0x2c
  40bcbc:	call   esi
  40bcbe:	sbb    DWORD PTR [eax+ebp*2],eax
  40bcc1:	jae    0x40bcac
  40bcc3:	(bad)  
  40bcc4:	dec    DWORD PTR [esi+0x48]
  40bcc7:	lods   al,BYTE PTR ds:[esi]
  40bcc8:	inc    eax
  40bcc9:	xor    DWORD PTR [edi+0x7169bf10],ebp
  40bccf:	add    ebp,eax
  40bcd1:	or     BYTE PTR [ebx+0x3a00ff47],ah
  40bcd7:	lock iret 
  40bcd9:	and    ecx,DWORD PTR [ecx]
  40bcdb:	lods   al,BYTE PTR cs:[esi]
  40bcdd:	inc    eax
  40bcde:	xor    DWORD PTR [eax-0x13adaa5],esp
  40bce4:	inc    esi
  40bce5:	push   eax
  40bce6:	sbb    DWORD PTR [eax],esi
  40bce8:	add    ebp,edi
  40bcea:	mov    edi,0xf0590347
  40bcef:	or     cl,ch
  40bcf1:	mov    bl,0x6f
  40bcf3:	mov    bl,0xf0
  40bcf5:	pop    ebx
  40bcf6:	inc    ecx
  40bcf7:	pusha  
  40bcf8:	push   ss
  40bcf9:	inc    edi
  40bcfa:	dec    ecx
  40bcfb:	pop    ds
  40bcfc:	pop    ecx
  40bcfd:	inc    edi
  40bcfe:	push   esi
  40bcff:	cmp    eax,0xb34e477c
  40bd04:	lock pop ebx
  40bd06:	mov    ch,0x6b
  40bd08:	test   BYTE PTR [esi+0x68],0x4a
  40bd0c:	in     eax,0x3
  40bd0e:	fcom   QWORD PTR [ecx+0x3df582d5]
  40bd14:	aaa    
  40bd15:	scas   eax,DWORD PTR es:[edi]
  40bd16:	cwde   
  40bd17:	or     DWORD PTR [ebx-0xb],eax
  40bd1a:	pop    ds
  40bd1b:	mov    bh,0xe0
  40bd1d:	pop    ebx
  40bd1e:	inc    edi
  40bd1f:	outs   dx,BYTE PTR ds:[esi]
  40bd20:	mov    BYTE PTR [esi-0x48],0xc6
  40bd24:	mov    esp,0x20c83c7a
  40bd29:	(bad)  
  40bd2c:	in     al,dx
  40bd2d:	mov    esi,0x83e8ca6e
  40bd32:	or     DWORD PTR cs:0x2fcb4ebb,edx
  40bd39:	lds    eax,FWORD PTR [eax]
  40bd3b:	(bad)  
  40bd3d:	cmp    BYTE PTR [edx-0x516f646],0x8e
  40bd44:	mov    ch,0xc3
  40bd46:	lods   eax,DWORD PTR ds:[esi]
  40bd47:	into   
  40bd48:	pushf  
  40bd49:	xor    BYTE PTR [esi-0x42],al
  40bd4c:	mov    cl,0x15
  40bd4e:	lods   eax,DWORD PTR ds:[esi]
  40bd4f:	jno    0x40bd5a
  40bd51:	mov    ecx,0x5e78e45b
  40bd56:	inc    esi
  40bd57:	add    DWORD PTR [ecx+0x7b8e03e8],esi
  40bd5d:	mov    ecx,0x51111c46
  40bd62:	inc    ebx
  40bd63:	fs cmp al,0x3e
  40bd66:	pop    ebx
  40bd67:	xlat   BYTE PTR ds:[ebx]
  40bd68:	ins    BYTE PTR es:[edi],dx
  40bd69:	add    BYTE PTR [esi],dh
  40bd6b:	imul   DWORD PTR [edi]
  40bd6d:	add    DWORD PTR [edi-0x6400044e],esp
  40bd73:	clc    
  40bd74:	ret    0xdafb
  40bd77:	repnz cmp edi,0xf23bf716
  40bd7e:	aas    
  40bd7f:	sub    al,BYTE PTR [esi*2-0x44a08c4]
  40bd86:	(bad)  
  40bd87:	jbe    0x40bd8d
  40bd89:	call   0xff7d5771
  40bd8e:	mov    cs,WORD PTR [ecx+edx*2-0x29cd123e]
  40bd95:	mov    cl,ch
  40bd97:	mov    al,0x44
  40bd99:	cld    
  40bd9a:	inc    ebx
  40bd9b:	xor    eax,0xce11af
  40bda0:	out    0x3,al
  40bda2:	call   0xff7c673c
  40bda7:	jo     0x40bd6f
  40bda9:	aas    
  40bdaa:	push   0xbe2c32e9
  40bdaf:	inc    ecx
  40bdb0:	fsub   st,st(0)
  40bdb2:	inc    eax
  40bdb3:	jmp    0x289967c2
  40bdb8:	sub    eax,0x7ae1753c
  40bdbd:	xchg   esp,eax
  40bdbe:	fmul   DWORD PTR [esi-0x7a8ac394]
  40bdc4:	je     0x40bd7c
  40bdc6:	pop    es
  40bdc7:	xchg   ecx,eax
  40bdc8:	(bad)  
  40bdc9:	ins    BYTE PTR es:[edi],dx
  40bdca:	push   DWORD PTR [esi-0x6]
  40bdcd:	inc    esi
  40bdce:	add    al,0xe9
  40bdd0:	xchg   DWORD PTR [esi+0x5cf168ec],ecx
  40bdd6:	neg    DWORD PTR [esi-0x14]
  40bdd9:	lea    eax,[ebp+0x55]
  40bddc:	in     eax,0x3a
  40bdde:	jne    0x40bdbd
  40bde0:	in     eax,dx
  40bde1:	cmc    
  40bde2:	mov    esi,0xff46c000
  40bde7:	out    0x7a,eax
  40bde9:	mov    al,0xff
  40bdeb:	call   DWORD PTR [ebx-0x567af139]
  40bdf1:	pop    es
  40bdf2:	add    BYTE PTR [eax],al
  40bdf4:	pop    ds
  40bdf5:	jl     0x40bdee
  40bdf7:	add    BYTE PTR [eax+0x7],bl
  40bdfa:	add    bh,al
  40bdfc:	(bad)  
  40bdfd:	retf   
  40bdfe:	inc    BYTE PTR [edi]
  40be00:	dec    eax
  40be01:	pop    es
  40be02:	push   0x0
  40be04:	add    BYTE PTR [edx-0x5dff95f9],ah
  40be0a:	pop    es
  40be0b:	lea    eax,[ebp+0x3c]
  40be0e:	ja     0x40bd9c
  40be10:	test   DWORD PTR [esp+ecx*8],edi
  40be13:	(bad)  
  40be14:	jmp    FWORD PTR [eax-0x3c]
  40be17:	je     0x40be11
  40be19:	pop    es
  40be1a:	dec    esp
  40be1b:	sti    
  40be1c:	call   0x406e5d
  40be21:	adc    eax,edi
  40be23:	jae    0x40be2a
  40be25:	loope  0x40be81
  40be27:	add    BYTE PTR [eax],al
  40be29:	sbb    BYTE PTR [edi-0x66],bl
  40be2c:	dec    eax
  40be2d:	dec    ecx
  40be2e:	add    eax,0xded475ff
  40be33:	test   BYTE PTR [edx-0x74b03a69],dh
  40be39:	test   al,0xb3
  40be3b:	test   ah,dh
  40be3d:	mov    edi,0x1a50fec5
  40be42:	fnsave [edx+esi*4-0x49]
  40be46:	lds    ecx,FWORD PTR [eax-0x132b77b]
  40be4c:	push   DWORD PTR [eax+0x47ffae01]
  40be52:	pusha  
  40be53:	jmp    DWORD PTR [edi+0x20]
  40be56:	outs   dx,DWORD PTR ds:[esi]
  40be57:	inc    eax
  40be58:	add    BYTE PTR [edi],al
  40be5a:	mov    esi,eax
  40be5c:	div    DWORD PTR [ecx]
  40be5e:	rol    DWORD PTR [ebx-0x1],cl
  40be61:	pop    esp
  40be62:	mov    edi,DWORD PTR [ebx+0x37d83140]
  40be68:	mov    cl,0x0
  40be6a:	xchg   bl,bh
  40be6c:	jns    0x40bdf3
  40be6e:	xchg   ebp,eax
  40be6f:	sti    
  40be70:	inc    ebx
  40be71:	dec    DWORD PTR [ebx]
  40be73:	xor    bl,bl
  40be75:	ja     0x40be7f
  40be77:	jno    0x40be7c
  40be79:	call   FWORD PTR [eax+eiz*1+0x135eff4c]
  40be80:	push   cs
  40be81:	mov    edi,0xe80370e9
  40be86:	pushf  
  40be87:	add    DWORD PTR [edi+edi*8-0x48],eax
  40be8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be8c:	push   esi
  40be8d:	idiv   DWORD PTR [esi]
  40be8f:	xor    ebx,eax
  40be91:	dec    esi
  40be93:	stos   BYTE PTR es:[edi],al
  40be94:	test   eax,0x79233140
  40be99:	lock push ds
  40be9b:	pop    ebx
  40be9c:	inc    ebx
  40be9d:	jmp    DWORD PTR [ebx+edx*4-0x34]
  40bea1:	inc    eax
  40bea2:	xor    DWORD PTR [eax-0x6d],ecx
  40bea5:	mov    cl,0xe
  40bea7:	inc    ebx
  40bea8:	lea    eax,[ebp-0xbc8ce7]
  40beae:	lods   al,BYTE PTR ds:[esi]
  40beaf:	lods   al,BYTE PTR ds:[esi]
  40beb0:	pop    edi
  40beb1:	div    esi
  40beb3:	push   0xffffffd4
  40beb5:	addr16 ror al,0xc4
  40beb9:	jmp    edi
  40bebb:	aam    0x33
  40bebd:	neg    esi
  40bebf:	xchg   edx,eax
  40bec0:	inc    ebx
  40bec1:	xor    eax,0xffc4e796
  40bec6:	(bad)  
  40bec7:	adc    esi,DWORD PTR [ebp-0x1]
  40beca:	(bad)  
  40becb:	ss inc ebx
  40becd:	je     0x40becf
  40becf:	sbb    BYTE PTR [edi-0x55412380],ch
  40bed5:	inc    edx
  40bed6:	add    al,0x24
  40bed8:	or     ecx,edi
  40beda:	inc    edx
  40bedb:	popa   
  40bedc:	mov    ah,BYTE PTR [esp-0x5a]
  40bee0:	cmp    DWORD PTR [esi-0x2c],edx
  40bee3:	mov    ?,edi
  40bee5:	jle    0x40bf2a
  40bee7:	mov    gs,WORD PTR ds:0xb4710edd
  40beed:	out    0xd3,al
  40beef:	xchg   esi,eax
  40bef0:	jmp    0x40be78
  40bef2:	inc    ebx
  40bef3:	jbe    0x40bf36
  40bef5:	fs and al,0x66
  40bef8:	cmp    DWORD PTR [esi],esp
  40befa:	sbb    DWORD PTR [ecx],esi
  40befc:	or     ecx,ebp
  40befe:	xchg   BYTE PTR [esp+0x856431e],bl
  40bf05:	xchg   ebp,eax
  40bf06:	fidiv  DWORD PTR [ebx+0x463b157b]
  40bf0c:	cmp    ecx,ebp
  40bf0e:	mov    bh,0xec
  40bf10:	test   DWORD PTR [esp+ebp*1],esi
  40bf13:	ds cmp esi,ebp
  40bf16:	add    esp,DWORD PTR [ebp+0x310450ce]
  40bf1c:	sub    BYTE PTR [edi-0x3efe5bbe],bl
  40bf22:	outs   dx,DWORD PTR ds:[esi]
  40bf23:	retf   
  40bf24:	cmp    dh,cl
  40bf26:	inc    edx
  40bf27:	les    esp,FWORD PTR ds:0x390642be
  40bf2d:	xor    al,0xc
  40bf2f:	or     DWORD PTR [edx],ecx
  40bf31:	add    BYTE PTR [edx+0x0],0xf6
  40bf35:	cmp    BYTE PTR [ebx+ebp*1-0x1a],dh
  40bf39:	cmp    BYTE PTR [esi-0x6efea3be],ah
  40bf3f:	xor    eax,0x4296388b
  40bf44:	pushf  
  40bf45:	sub    eax,0x38ce4296
  40bf4a:	cld    
  40bf4b:	or     ebx,ecx
  40bf4d:	sub    eax,0x38be4253
  40bf52:	add    BYTE PTR [edx+edx*1],bh
  40bf55:	inc    eax
  40bf56:	jmp    FWORD PTR [esi-0xd]
  40bf59:	mov    ebp,0x62de5107
  40bf5e:	call   FWORD PTR [esi-0xd]
  40bf61:	jge    0x40bf47
  40bf63:	pop    esi
  40bf64:	repz aaa 
  40bf66:	call   0xff78c0fc
  40bf6b:	inc    esi
  40bf6c:	or     DWORD PTR ds:0x20f33ef7,esp
  40bf72:	lods   eax,DWORD PTR ds:[esi]
  40bf73:	test   bl,dh
  40bf75:	aaa    
  40bf76:	push   DWORD PTR [edx+ebx*1+0x40]
  40bf7a:	jmp    DWORD PTR [esi]
  40bf7c:	sbb    ch,BYTE PTR [ebx-0x53]
  40bf7f:	push   ds
  40bf80:	repz aaa 
  40bf82:	mov    ch,0x19
  40bf84:	sbb    edi,DWORD PTR [eax]
  40bf86:	inc    DWORD PTR [ecx]
  40bf88:	stos   DWORD PTR es:[edi],eax
  40bf89:	inc    WORD PTR [esi]
  40bf8c:	repz int 0xf7
  40bf8f:	adc    BYTE PTR [eax-0xf0900ca],al
  40bf95:	mov    ebp,0xa70001fb
  40bf9a:	xchg   edx,eax
  40bf9b:	add    cl,ch
  40bf9d:	jnp    0x40bfea
  40bf9f:	or     cl,ch
  40bfa1:	pop    es
  40bfa2:	sub    esp,0x6a
  40bfa5:	imul   esi,DWORD PTR ds:0x1adce96a,0x21353cff
  40bfaf:	test   eax,0x89387093
  40bfb4:	sub    al,0x71
  40bfb6:	mov    eax,ds:0x37f21098
  40bfbb:	(bad)  
  40bfbc:	sbb    al,0x35
  40bfbe:	and    DWORD PTR [esi],edx
  40bfc0:	lahf   
  40bfc1:	jo     0x40bffb
  40bfc3:	call   FWORD PTR [ecx+esi*2]
  40bfc6:	cmp    BYTE PTR [ebp-0x1f],dh
  40bfc9:	sbb    bl,BYTE PTR [ebp-0x56]
  40bfcc:	add    BYTE PTR [edi-0x2b3d3737],ch
  40bfd2:	or     edx,DWORD PTR [ebp-0x75]
  40bfd5:	lods   al,BYTE PTR ds:[esi]
  40bfd6:	(bad)  
  40bfd7:	(bad)  
  40bfd8:	cld    
  40bfd9:	xor    cl,BYTE PTR ds:0x800f146a
  40bfdf:	pop    es
  40bfe0:	call   0x3f6575
  40bfe5:	adc    DWORD PTR [eax-0x5],edx
  40bfe8:	push   0xbeef0b98
  40bfed:	pusha  
  40bfee:	int3   
  40bfef:	pop    eax
  40bff0:	inc    ecx
  40bff1:	mov    BYTE PTR [ebx-0x48],ah
  40bff4:	pop    ecx
  40bff5:	leave  
  40bff6:	or     edi,edi
  40bff8:	jne    0x40c04a
  40bffa:	jecxz  0x40c05e
  40bffc:	(bad)  
  40bffd:	add    BYTE PTR [edi],cl
  40bfff:	retf   0x75fe
  40c002:	cmp    al,0xca
  40c004:	je     0x40c00e
  40c006:	xor    BYTE PTR [edx+ebp*4-0x3e3bc001],dl
  40c00d:	add    al,0x58
  40c00f:	pop    esi
  40c010:	mov    ch,ah
  40c012:	leave  
  40c013:	rcl    bh,0xf7
  40c016:	aas    
  40c017:	enter  0x458c,0x1c
  40c01b:	pop    ebx
  40c01c:	(bad)  
  40c01d:	jne    0x40c03b
  40c01f:	retf   0xbf34
  40c022:	pusha  
  40c023:	dec    edx
  40c024:	jmp    edi
  40c026:	cs xchg edx,eax
  40c028:	add    BYTE PTR [eax],al
  40c02a:	adc    ecx,ebx
  40c02c:	push   cs
  40c02d:	test   DWORD PTR [ebp-0x28fffff5],edi
  40c033:	dec    edi
  40c034:	test   DWORD PTR [eax],0xc7000b08
  40c03a:	adc    eax,0xd807fef1
  40c03f:	or     ch,BYTE PTR [edx+0x0]
  40c042:	inc    edx
  40c043:	or     eax,0xa31006a
  40c048:	add    al,0x8d
  40c04a:	je     0x40bfe8
  40c04c:	ror    DWORD PTR [esp+ebp*4-0x4100c84c],cl
  40c053:	adc    BYTE PTR [ecx+0x75],al
  40c056:	mov    ecx,0x99fbb5bf
  40c05b:	and    BYTE PTR [edx+0x433b3100],bl
  40c061:	je     0x40c063
  40c063:	xor    al,0xd9
  40c065:	xchg   edx,eax
  40c066:	add    DWORD PTR [ecx],esi
  40c068:	and    BYTE PTR [ebx+0x360f99a],ch
  40c06e:	(bad)  
  40c06f:	cld    
  40c070:	cmp    ebp,DWORD PTR [ebx]
  40c072:	push   ecx
  40c073:	shl    edi,0x3f
  40c076:	push   eax
  40c077:	stos   BYTE PTR es:[edi],al
  40c078:	adc    BYTE PTR [esi+0x3fff6585],cl
  40c07e:	inc    DWORD PTR [ecx]
  40c080:	jb     0x40c0ad
  40c082:	inc    ecx
  40c083:	mov    eax,ds:0xac894017
  40c088:	adc    BYTE PTR [eax],bh
  40c08a:	dec    DWORD PTR [esi+0x8]
  40c08d:	cwde   
  40c08e:	lods   al,BYTE PTR ds:[esi]
  40c08f:	inc    esi
  40c090:	jle    0x3f801a1b
  40c096:	jmp    ecx
  40c098:	xchg   DWORD PTR [edx],esp
  40c09a:	pop    ecx
  40c09b:	jo     0x40c0bd
  40c09d:	inc    eax
  40c09e:	mov    ch,0x21
  40c0a0:	push   edi
  40c0a1:	aas    
  40c0a2:	call   FWORD PTR [esi]
  40c0a4:	sbb    eax,0x2070487f
  40c0a9:	sub    edx,DWORD PTR [edx-0x76c0b922]
  40c0af:	lods   al,BYTE PTR ds:[esi]
  40c0b0:	inc    ebx
  40c0b1:	aaa    
  40c0b2:	(bad)  
  40c0b3:	(bad)  
  40c0b4:	fld    DWORD PTR [ebx]
  40c0b6:	push   0xffc518e6
  40c0bb:	out    dx,eax
  40c0bc:	mov    esp,0x8e6f733
  40c0c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0c2:	aas    
  40c0c3:	and    al,0x76
  40c0c5:	xor    ebp,eax
  40c0c7:	add    dh,dl
  40c0c9:	sub    eax,0x35ce6f1d
  40c0ce:	pusha  
  40c0cf:	mov    ebp,edx
  40c0d1:	cmp    eax,0x94b3f86
  40c0d6:	adc    DWORD PTR [eax+ebx*2-0x38],ebx
  40c0da:	call   0x7679a51d
  40c0df:	aas    
  40c0e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0e1:	xor    eax,0xc7e97f1c
  40c0e6:	call   0x56a6c016
  40c0eb:	aas    
  40c0ec:	mov    eax,0x8637418b
  40c0f1:	xor    eax,0x3d5d8974
  40c0f6:	ds aas 
  40c0f8:	loope  0x40c09a
  40c0fa:	inc    edx
  40c0fb:	(bad)  
  40c0fd:	or     BYTE PTR [esi],ch
  40c0ff:	jns    0x40c162
  40c101:	cmp    eax,0xfb5e3f26
  40c106:	pop    ebp
  40c107:	int3   
  40c108:	icebp  
  40c109:	or     BYTE PTR [ecx],al
  40c10b:	repz lahf 
  40c10d:	xor    eax,0xbc710b0e
  40c112:	fild   WORD PTR [edx+0x3ef6547c]
  40c118:	ss or  al,0x7c
  40c11b:	adc    ebp,DWORD PTR [esi]
  40c11d:	cli    
  40c11e:	pop    ebp
  40c11f:	mov    DWORD PTR [ecx],edx
  40c121:	cmp    eax,0x21813ee6
  40c126:	jmp    0xc275d79a
  40c12b:	pop    ss
  40c12c:	add    BYTE PTR [edx],bh
  40c12e:	dec    ecx
  40c12f:	push   ebp
  40c130:	push   es
  40c131:	popa   
  40c132:	and    DWORD PTR [ebp-0x59cb0196],edi
  40c138:	mov    BYTE PTR [ecx],dl
  40c13a:	cmp    eax,0x1e2fb600
  40c13f:	add    cl,ch
  40c141:	xor    cl,BYTE PTR [eax+0x34278dbd]
  40c147:	(bad)  
  40c148:	jmp    0x54c377eb
  40c14d:	push   ds
  40c14e:	cmp    al,0xff
  40c150:	mov    ?,WORD PTR [edx]
  40c152:	mov    ebp,0x21b16a74
  40c157:	idiv   DWORD PTR [esi-0x9]
  40c15a:	or     BYTE PTR [ebp+eax*1-0x25],dh
  40c15e:	xor    al,0x8c
  40c160:	or     bh,BYTE PTR fs:[edi+edi*8]
  40c164:	data16 xor BYTE PTR [ebx],0xb5
  40c168:	inc    ebp
  40c169:	pop    edi
  40c16a:	xor    al,0xff
  40c16c:	inc    ecx
  40c16d:	mov    bl,BYTE PTR [ebp-0x1]
  40c170:	dec    esi
  40c171:	cmp    ecx,DWORD PTR [ecx+0x74]
  40c174:	popf   
  40c175:	mov    bl,0x76
  40c177:	fdiv   DWORD PTR [esi]
  40c179:	aaa    
  40c17a:	xor    al,0x0
  40c17c:	mov    ebp,0xe8ffac7b
  40c181:	pop    ss
  40c182:	jae    0x40c183
  40c184:	pushf  
  40c185:	sub    ah,BYTE PTR [ecx]
  40c187:	push   edx
  40c188:	push   ecx
  40c189:	pop    ss
  40c18a:	xor    al,0xff
  40c18c:	pop    esp
  40c18d:	push   ds
  40c18e:	cmp    al,0xff
  40c190:	push   cs
  40c191:	add    BYTE PTR [edi],al
  40c193:	mov    esi,0x60d41107
  40c198:	(bad)  
  40c199:	(bad)  
  40c19a:	hlt    
  40c19b:	jge    0x40c185
  40c19d:	(bad)  
  40c19e:	ins    BYTE PTR es:[edi],dx
  40c19f:	xor    al,0xff
  40c1a1:	je     0x40c1dd
  40c1a3:	and    DWORD PTR [eax-0xcba36f],ebx
  40c1a9:	xchg   esp,eax
  40c1aa:	jne    0x40c1e8
  40c1ac:	call   esi
  40c1ae:	dec    esp
  40c1af:	jle    0x40c195
  40c1b1:	(bad)  
  40c1b2:	inc    esp
  40c1b3:	xor    al,0xff
  40c1b5:	add    BYTE PTR ds:0xa058e805,bh
  40c1bb:	cmc    
  40c1bc:	(bad)  
  40c1bd:	jmp    FWORD PTR [ebp-0x13]
  40c1c0:	idiv   bh
  40c1c2:	xchg   edi,eax
  40c1c3:	cmc    
  40c1c4:	je     0x40c1ce
  40c1c6:	rcl    BYTE PTR [eax],0xa8
  40c1c9:	push   DWORD PTR [edi-0x501b4b0b]
  40c1cf:	cmc    
  40c1d0:	(bad)  
  40c1d1:	call   0x3f63d6
  40c1d6:	mov    bh,0xbb
  40c1d8:	jmp    0x40c1d1
  40c1da:	aaa    
  40c1db:	mul    bh
  40c1dd:	dec    ebp
  40c1de:	repz cmc 
  40c1e0:	(bad)  
  40c1e1:	call   FWORD PTR [ebp-0x1b]
  40c1e4:	idiv   bh
  40c1e6:	pop    ss
  40c1e7:	in     eax,0x41
  40c1e9:	stos   DWORD PTR es:[edi],eax
  40c1ea:	div    ebp
  40c1ec:	(bad)  
  40c1ed:	mov    ch,0xe8
  40c1ef:	std    
  40c1f0:	(bad)  
  40c1f1:	push   eax
  40c1f3:	cmp    eax,0xf700ffaa
  40c1f8:	cmc    
  40c1f9:	inc    esp
  40c1fa:	clc    
  40c1fb:	loope  0x40c243
  40c1fd:	std    
  40c1fe:	jmp    DWORD PTR [edi]
  40c200:	div    BYTE PTR [esp+edi*8-0x10]
  40c204:	pop    ecx
  40c205:	xchg   esi,eax
  40c206:	add    BYTE PTR [eax-0x42],cl
  40c209:	ror    DWORD PTR [eax],0x48
  40c20c:	pop    edx
  40c20d:	mov    ch,ah
  40c20f:	fcmovnb st,st(0)
  40c211:	repz call FWORD PTR [ebp-0x221417fd]
  40c218:	or     al,0x0
  40c21a:	mov    DWORD PTR [ebp+0x2075feef],ecx
  40c220:	fbld   TBYTE PTR [eax]
  40c222:	stos   DWORD PTR es:[edi],eax
  40c223:	pop    ss
  40c224:	test   BYTE PTR [eax+0x74f61445],0xfc
  40c22b:	idiv   DWORD PTR [ebx-0x9]
  40c22e:	push   DWORD PTR [ecx]
  40c230:	aad    0xf
  40c232:	call   0xff7d5d7f
  40c237:	sub    ah,BYTE PTR [eax-0x49]
  40c23a:	cmp    eax,0x6a37eda8
  40c23f:	xor    DWORD PTR [ebp+0x6381f3c5],ebp
  40c245:	mov    dh,0xfb
  40c247:	leave  
  40c248:	add    DWORD PTR [eax-0x1],ebx
  40c24b:	(bad)  
  40c24c:	aaa    
  40c24d:	inc    ebx
  40c24e:	je     0x40c268
  40c250:	or     BYTE PTR [eax+edx*1],al
  40c253:	(bad)  
  40c254:	ret    0x753b
  40c257:	sub    DWORD PTR [eax-0x49ff5879],ebx
  40c25d:	mov    bl,0x3b
  40c25f:	jne    0x40c20a
  40c261:	mov    ebx,0x3da60bb5
  40c266:	or     ebp,eax
  40c268:	int    0x83
  40c26a:	cmp    al,0xff
  40c26c:	xchg   esi,eax
  40c26d:	pop    ebp
  40c26e:	aaa    
  40c26f:	inc    DWORD PTR [esp+ebx*8]
  40c272:	cmp    esi,DWORD PTR [ebp+0x39]
  40c275:	enter  0xa79c,0x7e
  40c279:	retf   
  40c27a:	cmp    esi,DWORD PTR [ebp+0x75]
  40c27d:	fsubr  DWORD PTR [ebx-0x56]
  40c280:	outs   dx,BYTE PTR ds:[esi]
  40c281:	sti    
  40c282:	dec    ecx
  40c283:	ret    0x2039
  40c286:	(bad)  
  40c287:	mov    cl,BYTE PTR [ebp-0x61]
  40c28a:	inc    esi
  40c28b:	call   0xbf6d58f
  40c290:	pop    ecx
  40c291:	cdq    
  40c292:	ins    BYTE PTR es:[edi],dx
  40c293:	inc    DWORD PTR [esi+0x27]
  40c296:	inc    ebx
  40c297:	jne    0x40c2cd
  40c299:	push   0x4a
  40c29b:	ret    0x2029
  40c29e:	mov    es,WORD PTR [ebp+0x21]
  40c2a1:	nop
  40c2a2:	cmp    al,0x75
  40c2a4:	xor    eax,0x1eafe808
  40c2a9:	or     esi,esp
  40c2ab:	psllw  mm0,QWORD PTR [ecx]
  40c2ae:	gs sahf 
  40c2b0:	xor    DWORD PTR [ecx],ecx
  40c2b2:	jmp    0xc1763ef1
  40c2b7:	mov    cl,bl
  40c2b9:	xor    esi,eax
  40c2bb:	lea    ebp,[ebp+eiz*1-0x42]
  40c2bf:	mov    cl,0x0
  40c2c1:	jmp    0xb0bb:0xe6283c31
  40c2c8:	sub    al,0xa5
  40c2ca:	pop    esi
  40c2cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2cc:	cmp    ebp,DWORD PTR [edx+0x782f8cbb]
  40c2d2:	mov    eax,ds:0x971ddc9
  40c2d7:	aaa    
  40c2d8:	sub    al,0xdd
  40c2da:	call   0x5f4:0x492a03e9
  40c2e1:	call   0x12e6:0x193461f3
  40c2e8:	lds    ebx,FWORD PTR [esi+0x31910329]
  40c2ee:	or     edx,ebp
  40c2f0:	xor    edi,DWORD PTR [eax+0x40ac40bb]
  40c2f6:	iret   
  40c2f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2f8:	add    esp,edi
  40c2fa:	and    BYTE PTR [ebx-0xdf6ce6e],al
  40c300:	inc    ebx
  40c301:	in     al,0x6
  40c303:	inc    edx
  40c304:	pop    ds
  40c305:	mov    ebx,0x31042718
  40c30a:	fnstcw WORD PTR [edx+0x1e20dc3a]
  40c310:	mov    cl,0x36
  40c312:	and    DWORD PTR [eax],edx
  40c314:	cmp    al,BYTE PTR [esi+0x31]
  40c317:	mov    bl,0xdb
  40c319:	mov    dh,0x18
  40c31b:	imul   edi,edx,0xac3abc36
  40c321:	xor    DWORD PTR [ecx],ebx
  40c323:	add    BYTE PTR [esi],al
  40c325:	add    BYTE PTR [ebx+0x4ae17530],ch
  40c32b:	js     0x40c2d3
  40c32d:	out    0x5b,al
  40c32f:	xor    BYTE PTR [ebp-0x23],dh
  40c332:	dec    ebx
  40c333:	mov    dh,0xeb
  40c335:	(bad)  
  40c336:	ror    DWORD PTR [eax],0xe8
  40c339:	scas   al,BYTE PTR es:[edi]
  40c33a:	nop
  40c33b:	xor    bh,bh
  40c33d:	mov    cl,0x24
  40c340:	call   0xff7120fe
  40c345:	fs icebp 
  40c347:	and    BYTE PTR [eax-0x3f],dl
  40c34a:	cmp    edi,DWORD PTR [ecx-0x1]
  40c34d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c34e:	pop    es
  40c34f:	or     DWORD PTR [esi-0x50],ebx
  40c352:	je     0x40c355
  40c354:	add    BYTE PTR [esi+esi*4],bh
  40c357:	sbb    eax,0xa306a583
  40c35c:	call   DWORD PTR [edx]
  40c35e:	and    BYTE PTR [eax],dh
  40c360:	jne    0x40c353
  40c362:	pop    edx
  40c363:	pop    es
  40c364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c365:	jbe    0x40c3d2
  40c367:	add    BYTE PTR [ebp+0x6d],0xca
  40c36b:	pop    ds
  40c36c:	pop    ecx
  40c36d:	test   al,0x32
  40c36f:	xor    BYTE PTR [ebp-0xf],dh
  40c372:	pop    edx
  40c373:	push   0xa34b56fc
  40c378:	inc    eax
  40c37a:	ins    DWORD PTR es:[edi],dx
  40c37b:	rol    BYTE PTR [eax-0x17],cl
  40c37e:	retf   0x59f5
  40c381:	test   al,0x32
  40c383:	xor    BYTE PTR ds:0xffc97a76,dh
  40c389:	inc    eax
  40c38a:	add    bl,bl
  40c38c:	pop    esp
  40c38d:	jmp    DWORD PTR [esi]
  40c38f:	daa    
  40c390:	dec    ecx
  40c391:	je     0x40c396
  40c393:	popf   
  40c394:	sbb    BYTE PTR [edx-0x58],bl
  40c397:	xor    bl,cl
  40c399:	out    0x62,eax
  40c39b:	leave  
  40c39c:	das    
  40c39d:	inc    DWORD PTR [eax]
  40c39f:	cwde   
  40c3a0:	pop    esp
  40c3a1:	(bad)  
  40c3a2:	jne    0x40c3c4
  40c3a4:	in     al,0xe2
  40c3a6:	(bad)  
  40c3a7:	pop    ds
  40c3a8:	repnz out 0x89,eax
  40c3ab:	jno    0x40c3a0
  40c3ad:	(bad)  
  40c3ae:	push   0x32
  40c3b0:	fstp   st(1)
  40c3b2:	lods   eax,DWORD PTR ds:[esi]
  40c3b3:	out    dx,eax
  40c3b4:	icebp  
  40c3b5:	or     al,al
  40c3b7:	fs push eax
  40c3b9:	addr16 or al,0x42
  40c3bc:	dec    esp
  40c3bd:	dec    DWORD PTR [edi-0x20]
  40c3c0:	push   0xffffffac
  40c3c2:	jmp    FWORD PTR [edi+0x195a175c]
  40c3c8:	add    eax,0xa843e850
  40c3cd:	(bad)  
  40c3ce:	call   FWORD PTR [eax]
  40c3d0:	push   ebp
  40c3d1:	(bad)  
  40c3d2:	jne    0x40c394
  40c3d4:	jecxz  0x40c388
  40c3d6:	(bad)  
  40c3d7:	lahf   
  40c3d8:	icebp  
  40c3d9:	out    0x59,eax
  40c3db:	jno    0x40c3cf
  40c3dd:	(bad)  
  40c3de:	push   0xffffffcc
  40c3e0:	jecxz  0x40c38b
  40c3e2:	lods   eax,DWORD PTR ds:[esi]
  40c3e3:	das    
  40c3e4:	repnz or al,al
  40c3e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3e8:	dec    esi
  40c3e9:	addr16 or al,0x42
  40c3ec:	dec    esp
  40c3ed:	dec    DWORD PTR [edi+0x0]
  40c3f0:	add    BYTE PTR [ebx],bh
  40c3f2:	lods   al,BYTE PTR ds:[esi]
  40c3f3:	(bad)  
  40c3f4:	out    dx,eax
  40c3f5:	pop    esp
  40c3f6:	pop    ss
  40c3f7:	pop    edx
  40c3f8:	(bad)  [ebx]
  40c3fa:	push   eax
  40c3fb:	call   0x3f6c33
  40c400:	cwde   
  40c401:	pop    ebx
  40c402:	(bad)  
  40c403:	jne    0x40c465
  40c405:	jecxz  0x40c389
  40c407:	(bad)  
  40c408:	pop    ds
  40c409:	repnz out 0x29,eax
  40c40c:	mov    cl,0xf1
  40c40e:	(bad)  
  40c40f:	push   0x6b
  40c411:	jecxz  0x40c48c
  40c413:	lods   eax,DWORD PTR ds:[esi]
  40c414:	das    
  40c415:	repnz or al,al
  40c418:	xor    DWORD PTR [esi+0x7c2d67de],ecx
  40c41e:	ret    0xe6ff
  40c421:	sbb    DWORD PTR [edx],eax
  40c423:	lods   eax,DWORD PTR ds:[esi]
  40c424:	xor    BYTE PTR cs:[ebx+0x3618b17],ch
  40c42b:	push   eax
  40c42c:	or     DWORD PTR [edi+eiz*2],edi
  40c42f:	call   DWORD PTR [esi]
  40c431:	icebp  
  40c432:	sar    esi,cl
  40c434:	test   BYTE PTR [eax],bh
  40c436:	sub    edx,DWORD PTR [ebx+0x7]
  40c439:	pop    eax
  40c43a:	cmp    al,ch
  40c43c:	clc    
  40c43d:	mov    BYTE PTR [eax],bh
  40c43f:	push   esi
  40c441:	in     eax,dx
  40c442:	aaa    
  40c443:	jmp    DWORD PTR [eax+edi*1+0x2b]
  40c447:	ins    BYTE PTR es:[edi],dx
  40c448:	(bad)  
  40c449:	ja     0x40c483
  40c44b:	leave  
  40c44c:	repz and al,0x3
  40c44f:	push   ebp
  40c450:	stos   BYTE PTR es:[edi],al
  40c451:	xchg   esp,eax
  40c452:	add    ah,0x0
  40c455:	in     eax,dx
  40c456:	xchg   edi,eax
  40c457:	cmp    bh,bh
  40c459:	mov    ah,0xdd
  40c45b:	aaa    
  40c45c:	push   eax
  40c45d:	mov    esi,0x3cff1415
  40c462:	xor    al,0x2b
  40c464:	add    al,0xc4
  40c466:	and    BYTE PTR [ebx],al
  40c468:	or     esi,DWORD PTR [ecx+0x27]
  40c46b:	jle    0x40c42b
  40c46d:	xor    BYTE PTR [eax],ah
  40c46f:	add    eax,edi
  40c471:	in     al,dx
  40c472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c473:	add    al,BYTE PTR [eax]
  40c475:	xor    DWORD PTR [eax],esp
  40c477:	inc    eax
  40c478:	inc    ebp
  40c479:	jge    0x40c452
  40c47b:	(bad)  
  40c47c:	push   DWORD PTR [ecx]
  40c47e:	dec    edx
  40c47f:	add    ebp,DWORD PTR [edx+0x31]
  40c482:	pop    edx
  40c483:	add    ebp,DWORD PTR [edx+0x31]
  40c486:	popf   
  40c487:	mov    ebp,0x7da501f3
  40c48c:	hlt    
  40c48d:	data16 fbstp TBYTE PTR [edi]
  40c490:	push   eax
  40c491:	push   esi
  40c492:	or     DWORD PTR [ebx+edi*1+0x2b1cb44e],ebx
  40c499:	pop    edi
  40c49a:	xchg   ebp,eax
  40c49b:	jmp    0x9589eea3
  40c4a0:	dec    BYTE PTR [ecx-0x78]
  40c4a3:	call   0x61e1f5ab
  40c4a8:	retf   
  40c4a9:	jno    0x40c4b4
  40c4ab:	imul   BYTE PTR [ebp+0x67c6212e]
  40c4b1:	push   ss
  40c4b2:	cmp    DWORD PTR cs:[ebx+0x30647be1],ecx
  40c4b9:	add    dh,bh
  40c4bb:	sub    eax,0x2160d4d6
  40c4c0:	mul    BYTE PTR [edi-0xa]
  40c4c3:	sub    eax,0x35e18170
  40c4c8:	mov    esi,0x809bd937
  40c4cd:	aaa    
  40c4ce:	fisub  WORD PTR [edx-0x2cb65418]
  40c4d4:	daa    
  40c4d5:	add    al,0xce
  40c4d7:	jae    0x40c472
  40c4d9:	das    
  40c4da:	(bad)  
  40c4db:	sub    eax,0x212ab196
  40c4e0:	sbb    DWORD PTR [ebx-0x4a],ebp
  40c4e3:	sub    eax,0x35958170
  40c4e8:	jle    0x40c521
  40c4ea:	sbb    ecx,DWORD PTR [ecx]
  40c4ec:	add    DWORD PTR [edx+0x36e8c7f8],esi
  40c4f2:	fdivr  QWORD PTR [eax]
  40c4f4:	pop    esi
  40c4f5:	aaa    
  40c4f6:	mov    gs,WORD PTR ds:0xd39907d4
  40c4fc:	xor    DWORD PTR [edi],0x24647f7e
  40c502:	jle    0x40c531
  40c504:	inc    esi
  40c505:	stos   BYTE PTR es:[edi],al
  40c506:	outs   dx,BYTE PTR ds:[esi]
  40c507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c508:	lahf   
  40c509:	fyl2x  
  40c50b:	or     BYTE PTR [eax],al
  40c50d:	ss loopne 0x40c548
  40c510:	imul   DWORD PTR [esi]
  40c512:	push   ds
  40c513:	cs jne 0x40c50b
  40c516:	sbb    dh,bl
  40c518:	stos   BYTE PTR es:[edi],al
  40c519:	push   ds
  40c51a:	(bad)  
  40c51b:	jg     0x40c4a2
  40c51d:	add    eax,0xff2e0e00
  40c522:	xor    DWORD PTR [edx],0xffffffa1
  40c525:	pop    edi
  40c526:	mov    ds:0x34fe2cf5,eax
  40c52b:	pop    ebp
  40c52c:	xor    al,0xff
  40c52e:	mul    BYTE PTR [edi-0x4a]
  40c531:	or     eax,DWORD PTR [ecx]
  40c533:	ds pusha 
  40c535:	jmp    esi
  40c537:	mov    ebp,0x3fd6e886
  40c53c:	sub    al,0x6a
  40c53e:	jmp    0x289a760d
  40c543:	sub    eax,0x1fb9b52c
  40c548:	sub    al,0xff
  40c54a:	mov    esi,0xede800a1
  40c54f:	dec    ebx
  40c550:	sub    al,0xff
  40c552:	pusha  
  40c553:	mov    cl,0x4d
  40c555:	mul    DWORD PTR [esi-0x7a4277f9]
  40c55b:	pop    ss
  40c55c:	sub    al,0xff
  40c55e:	jmp    0x4cc3c6e4
  40c563:	adc    dh,BYTE PTR [edi+edi*8]
  40c566:	xchg   BYTE PTR [edx],dh
  40c568:	mov    ch,0x64
  40c56a:	push   0x29
  40c56c:	sbb    eax,0x96776f7
  40c571:	je     0x40c580
  40c573:	mov    dl,0x6e
  40c575:	call   0x6d0cd8
  40c57a:	aad    0x63
  40c57c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c57d:	(bad)  
  40c57e:	call   0xd54030da
  40c583:	add    BYTE PTR [edx],ch
  40c585:	and    DWORD PTR [esi+0x0],esp
  40c588:	mov    esp,0xddfffef3
  40c58d:	jecxz  0x40c585
  40c58f:	jmp    DWORD PTR [edi]
  40c591:	repz je 0x40c59c
  40c594:	lock mov cl,0xa3
  40c597:	call   DWORD PTR [edi]
  40c599:	repz mov ah,0xe8
  40c59c:	pop    ds
  40c59d:	repz (bad) 
  40c59f:	call   FWORD PTR [ebp-0x13531800]
  40c5a5:	repnz (bad) 
  40c5a7:	jmp    FWORD PTR [ebp+0xc]
  40c5aa:	idiv   edi
  40c5ac:	daa    
  40c5ad:	div    BYTE PTR [eax+ecx*1+0x30]
  40c5b1:	xchg   esi,eax
  40c5b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5b3:	inc    DWORD PTR [edi]
  40c5b5:	div    BYTE PTR [eax+eiz*8-0x10a11]
  40c5bc:	pop    ebp
  40c5bd:	std    
  40c5be:	out    0x90,eax
  40c5c0:	lods   al,BYTE PTR ds:[esi]
  40c5c1:	cmc    
  40c5c2:	(bad)  
  40c5c3:	call   FWORD PTR [ebp-0x8000930]
  40c5c9:	cmc    
  40c5ca:	je     0x40c5d4
  40c5cc:	add    BYTE PTR [edi-0xa58005c],al
  40c5d2:	mov    ah,0xe4
  40c5d4:	lahf   
  40c5d5:	cmc    
  40c5d6:	(bad)  
  40c5d7:	call   0x3f9418
  40c5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5dd:	fcomip st,st(7)
  40c5e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5e1:	cmc    
  40c5e2:	out    0x59,eax
  40c5e4:	outs   dx,DWORD PTR ds:[esi]
  40c5e5:	idiv   dh
  40c5e7:	inc    DWORD PTR [eax]
  40c5e9:	ins    DWORD PTR es:[edi],dx
  40c5ea:	loope  0x40c5e2
  40c5ec:	jmp    DWORD PTR [edi]
  40c5ee:	fisttp QWORD PTR [ebp-0x59]
  40c5f1:	daa    
  40c5f2:	idiv   dh
  40c5f4:	mov    ch,0xb0
  40c5f6:	(bad)  
  40c5f8:	jmp    eax
  40c5fa:	dec    ecx
  40c5fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5fc:	jmp    edi
  40c5fe:	cmc    
  40c5ff:	mov    ah,0xdc
  40c601:	xor    ebx,ecx
  40c603:	xor    al,0xff
  40c605:	mov    DWORD PTR [ecx],ebx
  40c607:	pop    ebp
  40c608:	jmp    FWORD PTR [esi-0x3e]
  40c60b:	outs   dx,BYTE PTR ds:[esi]
  40c60c:	lock pop esi
  40c60e:	jmp    0x7534:0x25e4ff34
  40c615:	sub    edx,ecx
  40c617:	idiv   ch
  40c619:	dec    esi
  40c61a:	loop   0x40c650
  40c61c:	mov    ch,0x41
  40c61e:	adc    dh,BYTE PTR ds:0x5c3549ff
  40c624:	push   DWORD PTR [esi]
  40c626:	cli    
  40c627:	mov    esi,0x359218f7
  40c62c:	jmp    DWORD PTR [esi]
  40c62e:	sub    al,0xae
  40c630:	sti    
  40c631:	or     DWORD PTR [ecx-0x70],edi
  40c634:	add    BYTE PTR [ecx],dh
  40c636:	jmp    0xed71d27c
  40c63b:	mov    ah,ch
  40c63d:	mov    dl,0x64
  40c63f:	aaa    
  40c640:	push   0x31
  40c642:	(bad)  
  40c643:	or     eax,0x2b287cff
  40c648:	cs xchg ebp,eax
  40c64a:	inc    ebx
  40c64b:	xor    al,0x89
  40c64d:	add    BYTE PTR [esp+ebp*2-0x55],ch
  40c651:	test   DWORD PTR [ebx-0x1f],edi
  40c654:	add    ebp,DWORD PTR [eax+0x33]
  40c657:	and    BYTE PTR [ebx],al
  40c659:	or     dh,0xd
  40c65c:	or     al,0xe8
  40c65e:	mov    esi,0x49ff348d
  40c663:	call   0xbeee:0x7b3140d8
  40c66a:	stc    
  40c66b:	loopne 0x40c670
  40c66d:	call   FWORD PTR [eax+edi*1]
  40c670:	sub    esp,esp
  40c672:	pushf  
  40c673:	mov    bl,0x33
  40c675:	call   FWORD PTR [esp+ebx*4]
  40c678:	xor    esi,DWORD PTR [ebp+0x39]
  40c67b:	or     DWORD PTR [ecx-0x3e],edx
  40c67e:	shr    BYTE PTR [edx],cl
  40c680:	pop    esi
  40c681:	dec    edx
  40c682:	jae    0x40c689
  40c684:	jmp    0x685e7257
  40c689:	aas    
  40c68a:	lea    esi,[edx]
  40c68c:	inc    esi
  40c68d:	xor    al,0xb4
  40c68f:	les    edi,FWORD PTR [ebx+edx*8]
  40c692:	pop    edi
  40c693:	mov    ah,0xd8
  40c695:	xor    al,0xdc
  40c697:	cld    
  40c698:	inc    eax
  40c699:	pop    edx
  40c69a:	mov    ds:0x7108e909,eax
  40c69f:	cli    
  40c6a0:	arpl   WORD PTR [ebp+0x30],si
  40c6a3:	or     ecx,ebp
  40c6a5:	cmp    al,0xec
  40c6a7:	xor    cl,ch
  40c6a9:	add    esi,DWORD PTR [ecx]
  40c6ab:	or     DWORD PTR [esi],ebp
  40c6ad:	mov    esi,0x3e62a22
  40c6b2:	add    BYTE PTR [ecx],dh
  40c6b4:	lahf   
  40c6b5:	call   0xe8e0dd63
  40c6ba:	test   eax,0x382c7d0e
  40c6bf:	popa   
  40c6c0:	jl     0x40c726
  40c6c2:	cmp    BYTE PTR [esi],al
  40c6c4:	sub    dl,dh
  40c6c6:	aam    0xf7
  40c6c8:	mov    bl,0xd0
  40c6ca:	xor    esp,DWORD PTR [ebp+ebp*1-0x2f]
  40c6ce:	pop    edi
  40c6cf:	ret    
  40c6d0:	or     cl,ch
  40c6d2:	(bad)  
  40c6d3:	sahf   
  40c6d4:	mov    ah,0xeb
  40c6d6:	sbb    al,0xb0
  40c6d8:	pop    es
  40c6d9:	jmp    0x31cf1fe1
  40c6de:	vcvtsi2ss xmm2,xmm7,DWORD PTR [esp+edx*1]
  40c6e3:	leave  
  40c6e4:	sub    al,0x40
  40c6e6:	xor    esi,DWORD PTR [esi-0x43ab9e28]
  40c6ec:	cmp    DWORD PTR [ebp+0x3b],0xffffffa6
  40c6f0:	sub    DWORD PTR [ecx],ebx
  40c6f2:	(bad)  
  40c6f3:	xchg   esi,eax
  40c6f4:	sbb    al,0x0
  40c6f6:	inc    eax
  40c6f7:	bound  ebp,QWORD PTR [edx]
  40c6f9:	mov    DWORD PTR [ebp+eax*2+0x32],esp
  40c6fd:	jmp    DWORD PTR [esi+0x25]
  40c700:	(bad)  
  40c701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c702:	pop    esi
  40c703:	inc    edx
  40c704:	lahf   
  40c705:	inc    eax
  40c707:	xor    eax,0x23e940cf
  40c70c:	je     0x40c6fe
  40c70e:	and    ch,BYTE PTR ds:[edx]
  40c711:	push   DWORD PTR [esi+ebx*2+0x804521]
  40c718:	and    ch,BYTE PTR [edx]
  40c71a:	mov    DWORD PTR [ecx+ebx*1+0x32],esp
  40c71e:	jmp    DWORD PTR [esi]
  40c720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c721:	sub    DWORD PTR [edi+0x34],esp
  40c724:	outs   dx,DWORD PTR ds:[esi]
  40c725:	enter  0x15ff,0xb8
  40c729:	cmp    bh,dh
  40c72b:	push   cs
  40c72c:	bound  ebp,QWORD PTR [eax]
  40c72e:	jne    0x40c725
  40c730:	dec    edx
  40c731:	repz test al,0xfe
  40c734:	arpl   WORD PTR [edx+0x285a0985],dx
  40c73a:	inc    DWORD PTR [ebx+0x43b2b132]
  40c740:	in     al,dx
  40c741:	sub    dh,bh
  40c743:	xchg   esp,eax
  40c744:	inc    edx
  40c745:	and    bh,bh
  40c747:	(bad)  
  40c748:	inc    ebx
  40c749:	sahf   
  40c74a:	or     eax,ecx
  40c74c:	xor    esi,DWORD PTR [edx-0x1]
  40c74f:	(bad)  
  40c750:	gs mov gs,esp
  40c753:	mov    dh,0x23
  40c755:	sub    BYTE PTR [edx-0x17],ch
  40c758:	mov    edx,0x35285a65
  40c75d:	sub    BYTE PTR [ebp-0xd7f467],dh
  40c763:	sahf   
  40c764:	jns    0x40c77a
  40c766:	call   0xff692208
  40c76b:	pusha  
  40c76c:	mov    ecx,0xaf00f731
  40c771:	fld    TBYTE PTR [ecx+0x0]
  40c774:	inc    eax
  40c775:	out    dx,eax
  40c776:	pop    ecx
  40c777:	inc    ecx
  40c778:	mov    bl,bl
  40c77a:	mov    ah,0xf0
  40c77c:	add    BYTE PTR [edi],al
  40c77e:	(bad)  
  40c780:	jmp    DWORD PTR [ebp+0x28]
  40c783:	out    0xd9,eax
  40c785:	mov    al,ds:0x589fedb
  40c78a:	fdiv   st,st(6)
  40c78c:	(bad)  
  40c78d:	dec    DWORD PTR [esi-0x24d81b43]
  40c793:	inc    BYTE PTR [eax]
  40c795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c796:	and    eax,0xe2e8bd82
  40c79b:	(bad)  
  40c79c:	call   FWORD PTR [eax+0x60]
  40c79f:	fs or  ebp,0x7
  40c7a3:	idiv   edi
  40c7a5:	pop    ds
  40c7a6:	or     al,0x74
  40c7a8:	pop    esp
  40c7a9:	retf   
  40c7aa:	cwde   
  40c7ab:	out    0xf7,eax
  40c7ad:	aas    
  40c7ae:	(bad)  
  40c7b0:	jae    0x40c77d
  40c7b2:	cmp    edi,0xffffffff
  40c7b5:	das    
  40c7b6:	call   0xa23b:0x41075fe
  40c7bd:	pop    ds
  40c7be:	(bad)  
  40c7c0:	mov    ch,0xdc
  40c7c2:	loope  0x40c7c2
  40c7c4:	(bad)  
  40c7c5:	fistp  WORD PTR [edi+0x7]
  40c7c8:	call   0x3f775c
  40c7cd:	call   FWORD PTR [edi-0x26100819]
  40c7d3:	(bad)  
  40c7d4:	jne    0x40c7b6
  40c7d6:	add    eax,DWORD PTR [ecx-0x126605e]
  40c7dc:	mov    ch,0xf4
  40c7de:	loope  0x40c7de
  40c7e0:	inc    DWORD PTR [eax]
  40c7e2:	(bad)  
  40c7e3:	pop    edi
  40c7e4:	pop    es
  40c7e5:	call   0x3f7705
  40c7ea:	xor    DWORD PTR [edi+0x77],edi
  40c7ed:	loopne 0x40c795
  40c7ef:	xchg   esi,eax
  40c7f0:	xor    edi,edi
  40c7f2:	sbb    al,0x1a
  40c7f4:	sbb    esp,DWORD PTR [ebp-0x2d]
  40c7f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7f8:	xor    bh,bh
  40c7fa:	fdivr  QWORD PTR [ebp+0x39]
  40c7fd:	dec    DWORD PTR [esi-0x66f8494a]
  40c803:	data16 gs (bad) 
  40c806:	jle    0x40c7ce
  40c808:	jbe    0x40c7ee
  40c80a:	jle    0x40c7ca
  40c80c:	xor    al,ch
  40c80e:	sub    BYTE PTR [ebp-0x5b9900cf],cl
  40c814:	and    esi,edi
  40c816:	pop    esi
  40c817:	out    0x1b,al
  40c819:	cs mov esi,ds
  40c81c:	xor    bh,bh
  40c81e:	test   ch,ah
  40c820:	cmp    bh,bh
  40c822:	inc    esi
  40c823:	stc    
  40c824:	in     al,0xa4
  40c826:	ds push es
  40c828:	xor    DWORD PTR [ebp-0xcef9b7],esi
  40c82e:	sbb    DWORD PTR [ecx],ebx
  40c830:	jmp    WORD PTR [esi]
  40c833:	adc    BYTE PTR [edi-0x24],dh
  40c836:	sub    BYTE PTR es:[eax],dh
  40c839:	call   0xff719d62
  40c83e:	push   cs
  40c83f:	fidiv  WORD PTR [ebx]
  40c841:	test   DWORD PTR [esi],0x753030
  40c847:	sub    eax,0x907b647
  40c84c:	(bad)  
  40c84d:	xor    edi,edi
  40c84f:	out    dx,al
  40c850:	push   edi
  40c851:	jbe    0x40c843
  40c853:	fimul  WORD PTR [edi+0x30]
  40c856:	call   0xff71553b
  40c85b:	(bad)  
  40c85c:	cmc    
  40c85d:	sub    ebp,ecx
  40c85f:	pusha  
  40c860:	jbe    0x40c892
  40c862:	inc    esi
  40c864:	or     DWORD PTR [eax+esi*1],ebx
  40c867:	leave  
  40c868:	adc    al,0x78
  40c86a:	add    esi,DWORD PTR [ecx]
  40c86c:	push   eax
  40c86d:	stos   DWORD PTR es:[edi],eax
  40c86e:	jmp    FWORD PTR [esi-0x4de09e43]
  40c874:	dec    ebp
  40c875:	test   DWORD PTR [ebp+0x30d5b09e],ebx
  40c87b:	sbb    al,0x11
  40c87d:	add    DWORD PTR [ebx+edx*8],0xec7a6e26
  40c884:	and    al,0xd1
  40c886:	and    bl,bl
  40c888:	(bad)  
  40c889:	call   0xa1a704be
  40c88e:	ret    0x276e
  40c891:	aam    0xfb
  40c893:	dec    esi
  40c894:	pop    ds
  40c895:	inc    esp
  40c896:	xor    BYTE PTR [esi-0x4f],bl
  40c899:	dec    ebp
  40c89a:	int    0xf1
  40c89c:	or     cl,al
  40c89e:	add    eax,0x30690931
  40c8a3:	mov    esp,0x3c271110
  40c8a8:	es push ds
  40c8aa:	xor    BYTE PTR [eax],al
  40c8ac:	mov    esp,0x36b61624
  40c8b1:	xor    edi,esi
  40c8b3:	gs es xor BYTE PTR es:[ebp+0x35],al
  40c8b9:	or     DWORD PTR [esp+edi*2+0x1f2d8805],edx
  40c8c0:	push   es
  40c8c1:	es out dx,al
  40c8c3:	jge    0x40c931
  40c8c5:	and    eax,0xf9842f39
  40c8ca:	fnstsw WORD PTR [ecx-0x6b78ced6]
  40c8d0:	xor    DWORD PTR [ecx],ecx
  40c8d2:	loop   0x40c917
  40c8d4:	mov    WORD PTR ss:[esi+0x4],?
  40c8d8:	xor    DWORD PTR [ecx],ecx
  40c8da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8db:	leave  
  40c8dc:	fimul  WORD PTR [eax]
  40c8de:	add    cl,ch
  40c8e0:	xor    cl,BYTE PTR [ecx]
  40c8e2:	(bad)  
  40c8e3:	and    al,0x9
  40c8e5:	es pop es
  40c8e7:	jmp    0x13407c1e
  40c8ec:	sub    eax,0x3502ffb3
  40c8f1:	xchg   esp,eax
  40c8f2:	inc    ebp
  40c8f3:	xchg   ebp,eax
  40c8f4:	jge    0x40c88a
  40c8f6:	test   DWORD PTR [ebp+0x66],edi
  40c8f9:	call   FWORD PTR es:[ecx]
  40c8fc:	inc    esi
  40c8fd:	pushf  
  40c8fe:	div    DWORD PTR [esi-0x38]
  40c901:	and    eax,ebp
  40c903:	dec    edi
  40c904:	popf   
  40c905:	or     BYTE PTR [eax],al
  40c907:	repnz repnz pushf 
  40c90a:	add    DWORD PTR [edx+0x58],edx
  40c90d:	xchg   esp,eax
  40c90e:	test   DWORD PTR [ebp+0x0],eax
  40c911:	es es (bad) 
  40c914:	mov    ecx,0x3ef48bb1
  40c919:	push   cs
  40c91a:	es push eax
  40c91c:	ds cwde 
  40c91e:	adc    eax,0x2d4ebcff
  40c923:	inc    ecx
  40c924:	xchg   BYTE PTR [esi],dl
  40c926:	mov    DWORD PTR es:[ebp+eax*1+0x1e],ebp
  40c92b:	call   FWORD PTR [esi]
  40c92d:	cmp    ah,BYTE PTR [ebp+0x74]
  40c930:	retf   
  40c931:	mov    bl,0x66
  40c933:	in     al,dx
  40c934:	push   ss
  40c935:	push   esi
  40c936:	and    al,0x0
  40c938:	jge    0x40c967
  40c93a:	mov    cl,0xff
  40c93c:	call   0x3d402c78
  40c941:	push   ecx
  40c942:	sbb    al,0xff
  40c944:	out    dx,al
  40c945:	push   edi
  40c946:	pop    esi
  40c947:	lock fimul WORD PTR [edi+0x24]
  40c94b:	call   DWORD PTR [ebp+esi*8+0x2c]
  40c94f:	mov    ch,0xa0
  40c951:	pop    ds
  40c952:	and    al,0xff
  40c954:	xchg   esp,eax
  40c955:	and    bl,BYTE PTR [edi+edi*8]
  40c958:	add    bh,dh
  40c95a:	add    dl,dh
  40c95c:	mov    ds:0x45fef397,eax
  40c961:	cmp    bh,0x7f
  40c964:	(bad)  
  40c965:	std    
  40c966:	fsub   st,st(7)
  40c968:	adc    DWORD PTR [eax],edi
  40c96a:	or     BYTE PTR [eax],al
  40c96c:	leave  
  40c96d:	mov    ah,BYTE PTR [edi+edi*8]
  40c970:	push   esp
  40c971:	adc    eax,DWORD PTR [ebx+eax*4]
  40c974:	les    eax,FWORD PTR [eax]
  40c976:	mov    ah,0x82
  40c978:	jmp    FWORD PTR [ecx-0x70]
  40c97b:	repz je 0x40c986
  40c97e:	ror    BYTE PTR [ebx],0xa1
  40c981:	inc    DWORD PTR [edi]
  40c983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c984:	inc    esp
  40c985:	cld    
  40c986:	xor    BYTE PTR [ecx],al
  40c988:	pop    ebx
  40c989:	inc    ecx
  40c98a:	mov    bl,dh
  40c98c:	xor    al,0xbf
  40c98e:	ror    BYTE PTR [ebp-0x1],0xfe
  40c992:	lea    esp,[eax]
  40c994:	out    0x25,eax
  40c996:	div    edx
  40c998:	(bad)  
  40c999:	push   0x404f7c
  40c99e:	or     BYTE PTR [edx],0x0
  40c9a1:	add    al,bl
  40c9a3:	bnd je 0x40c9ae
  40c9a6:	lock idiv dh
  40c9a9:	call   DWORD PTR [edi]
  40c9ab:	sub    BYTE PTR [ebx+ebx*2],0x89
  40c9af:	or     bh,bh
  40c9b1:	xor    eax,0x406087
  40c9b6:	aaa    
  40c9b7:	popa   
  40c9b8:	pop    es
  40c9b9:	call   0x3fbcc6
  40c9be:	shr    BYTE PTR [eax],0x5a
  40c9c1:	inc    ecx
  40c9c2:	sbb    BYTE PTR [eax-0x77e7ffff],al
  40c9c8:	push   DWORD PTR [ebp+0x0]
  40c9cb:	add    dh,ch
  40c9cd:	(bad)  
  40c9ce:	xlat   BYTE PTR ds:[ebx]
  40c9cf:	cmc    
  40c9d0:	(bad)  
  40c9d1:	jne    0x40ca04
  40c9d3:	ds sub eax,0x374a3975
  40c9d9:	mov    al,ds:0x3b4ade00
  40c9de:	ret    0x322d
  40c9e1:	(bad)  
  40c9e2:	mov    bl,ch
  40c9e4:	pop    edx
  40c9e5:	mov    bh,0xb
  40c9e7:	fnstenv [ecx+0x65]
  40c9ea:	(bad)  
  40c9eb:	mov    esi,0x67744316
  40c9f0:	cli    
  40c9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9f2:	pop    edx
  40c9f3:	lock xor ebx,edx
  40c9f6:	out    0xf5,eax
  40c9f8:	retf   0xff2c
  40c9fb:	add    DWORD PTR [edx],eax
  40c9fd:	aam    0x67
  40c9ff:	xor    DWORD PTR [edx],esi
  40ca01:	sbb    al,0xbe
  40ca03:	sbb    DWORD PTR [edx],eax
  40ca05:	leave  
  40ca06:	inc    eax
  40ca07:	xor    DWORD PTR [edx],eax
  40ca09:	sub    eax,0xf6ba2975
  40ca0e:	retf   
  40ca0f:	jbe    0x40c9d3
  40ca11:	retf   
  40ca12:	xor    BYTE PTR [bp+si],dh
  40ca15:	sbb    al,0xbe
  40ca17:	fstp   DWORD PTR [eax+ecx*8+0x40]
  40ca1b:	xor    DWORD PTR [edx-0x45d68ad4],eax
  40ca21:	loop   0x40c9ee
  40ca23:	dec    esi
  40ca24:	fcmove st,st(3)
  40ca26:	xor    esi,DWORD PTR [bp+si]
  40ca29:	sbb    al,0xbe
  40ca2b:	leave  
  40ca2c:	inc    edi
  40ca2d:	enter  0x3140,0x62
  40ca31:	sub    al,0x75
  40ca33:	cmp    DWORD PTR [eax],ecx
  40ca35:	dec    ebx
  40ca37:	es adc al,0x1c
  40ca3a:	push   ss
  40ca3b:	ror    BYTE PTR [ebx],cl
  40ca3d:	sub    eax,0x18f300c9
  40ca42:	add    edx,DWORD PTR [ebp-0x46]
  40ca45:	or     al,0x81
  40ca47:	les    eax,FWORD PTR ds:0x186a0387
  40ca4d:	or     esi,esp
  40ca4f:	mov    dh,0x2e
  40ca51:	xor    DWORD PTR [ecx],esp
  40ca53:	fs out dx,al
  40ca55:	and    ah,BYTE PTR [eax-0x3a]
  40ca58:	jmp    0xd111:0x642cf2af
  40ca5f:	adc    esi,0x22
  40ca62:	mov    esi,0x3c221399
  40ca67:	cld    
  40ca68:	into   
  40ca69:	fwait
  40ca6a:	lods   eax,DWORD PTR ds:[esi]
  40ca6b:	sub    al,0xbe
  40ca6d:	scas   eax,DWORD PTR es:[edi]
  40ca6e:	add    al,0x2d
  40ca70:	cmp    al,0x11
  40ca72:	xchg   ecx,eax
  40ca73:	lahf   
  40ca74:	scas   eax,DWORD PTR es:[edi]
  40ca75:	and    dl,BYTE PTR [esi-0x71dae3d4]
  40ca7b:	mov    dh,0x36
  40ca7d:	xor    DWORD PTR [ebx],ebx
  40ca7f:	fs xchg esi,eax
  40ca81:	and    dh,BYTE PTR [eax+0x1c093541]
  40ca87:	jns    0x40ca1e
  40ca89:	xchg   BYTE PTR [ebp-0xb6381d1],ah
  40ca8f:	sbb    ebx,DWORD PTR [ebx]
  40ca91:	push   0x5e
  40ca93:	sub    al,0x3a
  40ca95:	dec    ecx
  40ca96:	out    0x87,al
  40ca98:	xchg   edx,eax
  40ca99:	or     ecx,ebp
  40ca9b:	add    ebp,DWORD PTR [eax-0x2b7fbb34]
  40caa1:	clc    
  40caa2:	call   0x227ccb5e
  40caa7:	mov    esp,0x2c9c4613
  40caac:	sbb    ebx,DWORD PTR [eax-0x57d3d995]
  40cab2:	int3   
  40cab3:	sbb    al,0x9b
  40cab5:	mov    cl,0xbd
  40cab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cab8:	add    esp,DWORD PTR [esi]
  40caba:	pushf  
  40cabb:	or     al,0x1b
  40cabd:	imul   eax,DWORD PTR fs:[esi],0x2c
  40cac1:	xor    DWORD PTR [ecx+0x631e03e8],0x9c559900
  40cacb:	pop    es
  40cacc:	add    DWORD PTR [esi+0x15e6ff50],esp
  40cad2:	xchg   DWORD PTR [edx-0x514ee522],esp
  40cad8:	xor    ch,ah
  40cada:	and    esi,edi
  40cadc:	push   esp
  40cadd:	or     DWORD PTR [ecx],esi
  40cadf:	adc    al,0x8f
  40cae1:	or     ah,BYTE PTR [edx]
  40cae3:	push   eax
  40cae4:	push   ecx
  40cae5:	xor    al,0x9
  40cae7:	out    dx,eax
  40cae8:	ja     0x40cac7
  40caea:	and    dh,BYTE PTR [ebp-0x1f]
  40caed:	sbb    dl,BYTE PTR [esi+0x310aa6c7]
  40caf3:	popa   
  40caf4:	dec    ebx
  40caf5:	pop    edx
  40caf6:	and    ch,BYTE PTR [eax+0x7c]
  40caf9:	jbe    0x40cac3
  40cafb:	dec    DWORD PTR [ebp+0x7ae81de0]
  40cb01:	adc    BYTE PTR [edx],ah
  40cb03:	call   FWORD PTR [ecx]
  40cb05:	lods   eax,DWORD PTR ds:[esi]
  40cb06:	and    edi,edi
  40cb08:	xchg   BYTE PTR [eax],al
  40cb0a:	sbb    edi,DWORD PTR [ecx+0x297af4fe]
  40cb10:	push   edx
  40cb11:	xor    DWORD PTR [edx+0x22],ecx
  40cb14:	call   0xff629fc2
  40cb19:	shl    eax,0xbd
  40cb1c:	inc    eax
  40cb1d:	jmp    0x523c672d
  40cb22:	jmp    FWORD PTR [ebx-0x1]
  40cb25:	ds gs test eax,0x632be900
  40cb2c:	push   eax
  40cb2d:	or     BYTE PTR cs:[ecx],0xe8
  40cb31:	fdivr  st,st(2)
  40cb33:	and    edi,edi
  40cb35:	adc    DWORD PTR [edx],edi
  40cb37:	imul   edi,edi,0x16
  40cb3a:	pop    edx
  40cb3b:	xchg   esi,eax
  40cb3c:	sti    
  40cb3d:	add    DWORD PTR [edx+0x6b],eax
  40cb40:	inc    DWORD PTR [eax]
  40cb42:	das    
  40cb43:	faddp  st(1),st
  40cb45:	or     al,0x18
  40cb47:	cmp    cl,BYTE PTR [edx-0x4366414]
  40cb4d:	push   0x8
  40cb4f:	jg     0x40cb6a
  40cb51:	call   DWORD PTR [ebp+0x1d]
  40cb54:	out    0x39,eax
  40cb56:	outs   dx,DWORD PTR ds:[esi]
  40cb57:	repz dec BYTE PTR [ecx+0x69f115]
  40cb5e:	jb     0x40cb6f
  40cb60:	push   DWORD PTR [ebp-0x20]
  40cb63:	add    al,0x22
  40cb65:	dec    DWORD PTR [edi+0x720069f3]
  40cb6b:	sub    dh,bh
  40cb6d:	jne    0x40cb6f
  40cb6f:	rol    BYTE PTR [esi+edx*1],1
  40cb72:	dec    DWORD PTR [edi+0x420069f3]
  40cb78:	adc    edi,edi
  40cb7a:	jne    0x40cb0c
  40cb7c:	add    al,0xa
  40cb7e:	jmp    FWORD PTR [edi+0x53e367f3]
  40cb84:	inc    esi
  40cb85:	jmp    FWORD PTR [ecx-0x6e]
  40cb88:	repz je 0x40cb93
  40cb8b:	mov    al,0xef
  40cb8d:	std    
  40cb8e:	dec    DWORD PTR [edi]
  40cb90:	test   dl,ah
  40cb92:	pop    ebx
  40cb93:	leave  
  40cb94:	or     al,0x6a
  40cb96:	and    ecx,DWORD PTR [edi]
  40cb98:	pop    ecx
  40cb99:	pop    es
  40cb9a:	call   0x3fbd8b
  40cb9f:	jo     0x40cb88
  40cba1:	pop    edx
  40cba2:	inc    ecx
  40cba3:	dec    eax
  40cba4:	jle    0x40cbc1
  40cba6:	inc    DWORD PTR [ebp-0x12218dc]
  40cbac:	repnz (bad) 
  40cbae:	inc    DWORD PTR [ebp+0x4075fee8]
  40cbb4:	add    al,0x20
  40cbb6:	lahf   
  40cbb7:	dec    edi
  40cbb8:	repz enter 0x31c2,0x2e
  40cbbd:	add    edx,DWORD PTR [ebp-0x56]
  40cbc0:	sbb    eax,0x1f09c483
  40cbc5:	sub    edi,edi
  40cbc7:	mov    esp,0x6502764
  40cbcc:	popf   
  40cbcd:	adc    bh,bh
  40cbcf:	test   BYTE PTR [esi],bh
  40cbd1:	sbb    edi,DWORD PTR [eax+0x331a400]
  40cbd7:	or     esi,ecx
  40cbd9:	cs jle 0x40cc23
  40cbdc:	xor    BYTE PTR [edx],dh
  40cbde:	add    eax,edi
  40cbe0:	je     0x40cc1c
  40cbe2:	add    al,0x0
  40cbe4:	xor    DWORD PTR [edx],esi
  40cbe6:	inc    eax
  40cbe7:	inc    ebp
  40cbe8:	lds    ebx,FWORD PTR [esi+0x1]
  40cbeb:	add    BYTE PTR [ecx],dh
  40cbed:	int3   
  40cbee:	add    ebp,DWORD PTR [edx+0x31]
  40cbf1:	int3   
  40cbf2:	add    ebp,DWORD PTR [edx+0x31]
  40cbf5:	xchg   ebp,eax
  40cbf6:	mov    esi,0x7ead01f3
  40cbfb:	hlt    
  40cbfc:	sahf   
  40cbfd:	jbe    0x40cc28
  40cbff:	push   eax
  40cc00:	sahf   
  40cc01:	hlt    
  40cc02:	sub    edi,edi
  40cc04:	sbb    al,0x86
  40cc06:	sbb    al,0x8a
  40cc08:	mov    esp,0x710b0331
  40cc0d:	sbb    eax,0x312be8fe
  40cc12:	add    eax,DWORD PTR [eax]
  40cc14:	or     DWORD PTR [ebx-0x40cebf44],ecx
  40cc1a:	scas   al,BYTE PTR es:[edi]
  40cc1b:	mulps  xmm3,xmm2
  40cc1e:	pop    edi
  40cc1f:	call   FWORD PTR [esi+0x61]
  40cc22:	jl     0x40cbf4
  40cc24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc25:	lods   al,BYTE PTR ds:[esi]
  40cc26:	das    
  40cc27:	test   DWORD PTR [esi-0x22],0xea5951d3
  40cc2e:	pop    edi
  40cc2f:	(bad)  
  40cc30:	ds test al,0x7e
  40cc33:	lock or BYTE PTR ds:[esi],ah
  40cc37:	sub    DWORD PTR [eax],eax
  40cc39:	sbb    ecx,ebp
  40cc3b:	inc    edi
  40cc3c:	sub    DWORD PTR [esi],esp
  40cc3e:	mov    ah,0xe8
  40cc40:	fwait
  40cc41:	jo     0x40cc00
  40cc43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc44:	add    edx,DWORD PTR [esi]
  40cc46:	push   ebp
  40cc47:	stc    
  40cc48:	xor    BYTE PTR [esi],cl
  40cc4a:	pop    ds
  40cc4b:	(bad)  
  40cc4c:	scas   al,BYTE PTR es:[edi]
  40cc4d:	cmp    dh,BYTE PTR [ecx]
  40cc4f:	int    0x5f
  40cc51:	(bad)  
  40cc52:	push   ds
  40cc53:	pusha  
  40cc54:	jg     0x40cc5b
  40cc56:	pop    ss
  40cc57:	out    0x28,al
  40cc59:	pop    ebx
  40cc5a:	or     DWORD PTR [ecx-0x46],edx
  40cc5d:	mov    cl,al
  40cc5f:	call   0xd65a708c
  40cc64:	sub    dh,dl
  40cc66:	push   ds
  40cc67:	cmp    al,0xf8
  40cc69:	(bad)  
  40cc6a:	adc    BYTE PTR [ebp+0x6c90c628],al
  40cc70:	sbb    eax,esi
  40cc72:	push   ds
  40cc73:	scas   al,BYTE PTR es:[edi]
  40cc74:	test   BYTE PTR [ebp+ebp*1-0x62],dh
  40cc78:	sub    BYTE PTR [esi+0xef41509],ch
  40cc7e:	or     ecx,ebp
  40cc80:	sbb    bh,bl
  40cc82:	mov    cl,0xe2
  40cc84:	(bad)  
  40cc85:	icebp  
  40cc86:	or     BYTE PTR [esi+0x7e169d6e],al
  40cc8c:	sub    BYTE PTR [esi-0x42e41f6c],al
  40cc92:	push   eax
  40cc93:	outs   dx,BYTE PTR ds:[esi]
  40cc94:	sub    BYTE PTR [ecx],cl
  40cc96:	or     cl,ch
  40cc98:	sbb    BYTE PTR [edi+0xc7f4b1],ch
  40cc9e:	icebp  
  40cc9f:	or     BYTE PTR [esi+0x6e],dl
  40cca2:	dec    ebp
  40cca3:	push   ss
  40cca4:	dec    esi
  40cca5:	sub    BYTE PTR [esi-0x6c],dl
  40cca8:	lock sbb edx,DWORD PTR [ebp-0x4dd7c1b0]
  40ccaf:	pop    esp
  40ccb0:	add    BYTE PTR [ecx+0x1],al
  40ccb3:	push   ds
  40ccb4:	(bad)  
  40ccb5:	jmp    0xe9a8bb40
  40ccba:	xor    ch,BYTE PTR [esi]
  40ccbc:	mov    esi,0x40c22491
  40ccc1:	jmp    0x1729210f
  40ccc6:	dec    ecx
  40ccc7:	push   ds
  40ccc8:	(bad)  
  40ccc9:	jl     0x40ccd5
  40cccb:	xor    DWORD PTR es:[eax],0x59
  40cccf:	push   ds
  40ccd0:	push   0xbe2e32e8
  40ccd5:	and    DWORD PTR [esi],0x17e940bd
  40ccdb:	push   esp
  40ccdc:	call   0xff5edbb7
  40cce1:	pop    esp
  40cce2:	frstor ds:0x1e0ea06b
  40cce8:	(bad)  
  40cce9:	jl     0x40cd14
  40cceb:	push   ss
  40ccec:	(bad)  
  40cced:	mov    esi,0xb69faf25
  40ccf2:	push   ss
  40ccf3:	push   ds
  40ccf4:	mov    ch,0xc1
  40ccf6:	push   es
  40ccf7:	push   ds
  40ccf8:	call   DWORD PTR [ecx-0x6100822e]
  40ccfe:	dec    esi
  40ccff:	push   esp
  40cd00:	lock sahf 
  40cd02:	add    BYTE PTR [esi+0x1e],dl
  40cd05:	call   DWORD PTR [ecx+ebx*4]
  40cd08:	push   ds
  40cd09:	jne    0x40ccfc
  40cd0b:	sub    dl,BYTE PTR [ebp-0x2]
  40cd0e:	jle    0x40cd5e
  40cd10:	push   ds
  40cd11:	mov    ch,0x79
  40cd13:	dec    esi
  40cd14:	push   ds
  40cd15:	inc    DWORD PTR [ecx+0x66ff7db6]
  40cd1b:	push   ss
  40cd1c:	(bad)  
  40cd1d:	not    DWORD PTR [eax+0x25]
  40cd20:	pop    ds
  40cd21:	call   DWORD PTR [esi+0x16]
  40cd24:	xchg   esp,eax
  40cd25:	sti    
  40cd26:	inc    ecx
  40cd27:	xchg   edx,eax
  40cd28:	xchg   ecx,eax
  40cd29:	add    BYTE PTR [eax],al
  40cd2b:	pop    eax
  40cd2c:	fadd   st(1),st
  40cd2e:	or     al,0x58
  40cd30:	cmp    BYTE PTR [edx+0xb5807ec],cl
  40cd36:	call   0x3f7603
  40cd3b:	and    ecx,ecx
  40cd3d:	jae    0x40cd78
  40cd3f:	rol    BYTE PTR [esi],0x5c
  40cd42:	inc    ecx
  40cd43:	or     BYTE PTR [ecx],bh
  40cd45:	out    0xc,eax
  40cd47:	ins    BYTE PTR es:[edi],dx
  40cd48:	in     al,0xfe
  40cd4a:	push   eax
  40cd4b:	test   al,0x80
  40cd4d:	(bad)  
  40cd4e:	push   DWORD PTR [edi]
  40cd50:	mov    ds:0x45a40a67,eax
  40cd55:	dec    DWORD PTR [edi+0x7]
  40cd58:	pop    edx
  40cd59:	pop    es
  40cd5a:	call   0x3fae6d
  40cd5f:	jo     0x40cdde
  40cd61:	add    BYTE PTR [eax],al
  40cd63:	mul    DWORD PTR [esi+0x4001467]
  40cd69:	inc    esi
  40cd6a:	dec    DWORD PTR [edi-0x9]
  40cd6d:	pop    ecx
  40cd6e:	pop    es
  40cd6f:	call   0x3fae6e
  40cd74:	lock call FWORD PTR [esi-0x3e227801]
  40cd7b:	or     BYTE PTR [eax+0x1bec8a39],bl
  40cd81:	fdiv   st(3),st
  40cd83:	push   esi
  40cd84:	pop    edi
  40cd85:	jg     0x40cd86
  40cd87:	imul   esp,DWORD PTR [ebx-0x5ff78b1d],0x7ff9c1f
  40cd91:	popf   
  40cd92:	inc    esp
  40cd93:	cld    
  40cd94:	adc    ebx,DWORD PTR [ecx]
  40cd96:	inc    edx
  40cd97:	dec    eax
  40cd98:	dec    ecx
  40cd99:	add    eax,0x609f3d8b
  40cd9e:	inc    eax
  40cd9f:	add    al,bl
  40cda1:	and    bh,bh
  40cda3:	push   cs
  40cda4:	xor    DWORD PTR [esi+0x32310069],ebp
  40cdaa:	fwait
  40cdab:	(bad)  
  40cdac:	jmp    0x7714:0x59560370
  40cdb3:	add    BYTE PTR [ecx],dh
  40cdb5:	daa    
  40cdb6:	inc    ebx
  40cdb7:	je     0x40cda0
  40cdb9:	jno    0x40cd3e
  40cdbb:	cmp    BYTE PTR [ecx],dh
  40cdbd:	adc    edi,DWORD PTR [edi-0x79]
  40cdc0:	xor    DWORD PTR [edx],esi
  40cdc2:	add    edx,DWORD PTR [eax-0x77]
  40cdc5:	repz leave 
  40cdc7:	inc    eax
  40cdc8:	xor    DWORD PTR [edx],ecx
  40cdca:	cwde   
  40cdcb:	mov    DWORD PTR [eax],eax
  40cdcd:	xor    DWORD PTR [edx],esi
  40cdcf:	leave  
  40cdd0:	add    dh,bl
  40cdd2:	sbb    DWORD PTR [ebx],0x2512c860
  40cdd8:	push   eax
  40cdd9:	popa   
  40cdda:	mov    al,BYTE PTR [ebx]
  40cddc:	add    dh,bl
  40cdde:	arpl   WORD PTR [ecx+ecx*1+0x5003f185],bx
  40cde5:	fidivr WORD PTR [ebx+edi*8+0x256a4ae7]
  40cdec:	jmp    FWORD PTR [ecx-0x46]
  40cdef:	add    al,BYTE PTR [eax]
  40cdf1:	(bad)  
  40cdf2:	fwait
  40cdf3:	fwait
  40cdf4:	adc    ebx,DWORD PTR [ebp-0xf]
  40cdf7:	add    edx,DWORD PTR [eax-0x4a]
  40cdfa:	aam    0xfb
  40cdfc:	out    0x6,eax
  40cdfe:	pop    edx
  40cdff:	and    eax,0x851199ff
  40ce04:	call   FWORD PTR [esi-0x61983e7a]
  40ce0a:	(bad)  
  40ce0b:	ret    0xe7ff
  40ce0e:	jns    0x40ce4d
  40ce10:	mov    esi,DWORD PTR [ecx]
  40ce12:	xor    bh,al
  40ce14:	mov    edi,0xe7cd5e05
  40ce19:	sbb    cl,cl
  40ce1b:	and    al,0xff
  40ce1d:	add    DWORD PTR [ecx],ecx
  40ce1f:	mov    ecx,0x4e1b669b
  40ce24:	leavew 
  40ce26:	push   cs
  40ce27:	mov    ch,0xc2
  40ce29:	push   esi
  40ce2a:	retf   
  40ce2b:	dec    ebp
  40ce2c:	scas   eax,DWORD PTR es:[edi]
  40ce2d:	xor    DWORD PTR ss:[edi],ecx
  40ce30:	cmp    al,0x0
  40ce32:	inc    esi
  40ce33:	sbb    esp,DWORD PTR [ecx+0x4609319b]
  40ce39:	leavew 
  40ce3b:	hlt    
  40ce3c:	mov    edx,es
  40ce3e:	cs retf 
  40ce40:	and    eax,0xfb312eaf
  40ce45:	cmp    ebx,DWORD PTR [esi]
  40ce47:	sbb    eax,DWORD PTR [ecx]
  40ce49:	or     DWORD PTR [esi+0x30190e1a],esi
  40ce4f:	ret    
  40ce50:	push   0x29606e6
  40ce55:	mov    esi,0x6b28d6fa
  40ce5a:	neg    BYTE PTR [edx]
  40ce5c:	out    dx,al
  40ce5d:	and    al,0xe3
  40ce5f:	imul   esp,DWORD PTR [ecx],0xfffffffd
  40ce62:	aaa    
  40ce63:	test   BYTE PTR [eiz*1+0xa431ade],ah
  40ce6a:	(bad)  
  40ce6b:	xchg   esp,eax
  40ce6c:	loopne 0x40ce89
  40ce6e:	repnz sbb eax,esi
  40ce71:	and    al,0x5b
  40ce73:	out    0xbd,al
  40ce75:	scas   al,BYTE PTR es:[edi]
  40ce76:	xor    DWORD PTR ss:[eax+0x25],esi
  40ce7a:	mov    dh,0x1a
  40ce7c:	inc    ebx
  40ce7d:	or     BYTE PTR [esi-0x29e40f6c],ch
  40ce83:	sbb    ebx,DWORD PTR [esi+0x34d90924]
  40ce89:	ret    
  40ce8a:	xchg   esi,eax
  40ce8b:	sbb    edx,esp
  40ce8d:	fs stc 
  40ce8f:	(bad)  
  40ce90:	call   0x9151cab9
  40ce95:	repnz add BYTE PTR [ebp+0x1a],bh
  40ce99:	add    BYTE PTR [esi-0x66],dh
  40ce9c:	jmp    0xe901:0xb135285b
  40cea3:	xor    cl,BYTE PTR [ecx+0x225ad4ff]
  40cea9:	pop    ds
  40ceaa:	push   esp
  40ceab:	or     eax,0x16d4ff1a
  40ceb0:	sbb    dh,BYTE PTR [ebp-0xf]
  40ceb3:	sub    bl,cl
  40ceb5:	fwait
  40ceb6:	ds adc eax,0xf0205dba
  40cebc:	add    al,0x0
  40cebe:	xchg   esp,eax
  40cebf:	test   eax,0x822d812d
  40cec4:	adc    bh,bh
  40cec6:	push   ds
  40cec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cec8:	(bad)  
  40cec9:	sti    
  40ceca:	mov    ecx,0xe0f944d
  40cecf:	fisttp WORD PTR ds:0x9882fe8
  40ced5:	add    dl,dh
  40ced7:	jb     0x40cee3
  40ced9:	test   DWORD PTR [ebx+0x26000930],ebp
  40cedf:	scas   eax,DWORD PTR es:[edi]
  40cee0:	adc    DWORD PTR [eax],eax
  40cee2:	jmp    0x2507d819
  40cee7:	cmp    DWORD PTR [edx],ebx
  40cee9:	pop    es
  40ceea:	jmp    0x43407e21
  40ceef:	xor    eax,0x2d52ffaf
  40cef4:	mov    WORD PTR [ebp-0x4b],es
  40cef7:	test   DWORD PTR [ebp+eax*4+0x1a1a00bd],ecx
  40cefe:	call   FWORD PTR [ecx]
  40cf00:	push   edx
  40cf01:	xchg   esp,eax
  40cf02:	mul    DWORD PTR [esi-0x7e17e238]
  40cf08:	scas   eax,DWORD PTR es:[edi]
  40cf09:	or     BYTE PTR [eax],al
  40cf0b:	loop   0x40ceff
  40cf0d:	xchg   esp,eax
  40cf0e:	add    al,0x80
  40cf10:	cmp    BYTE PTR [edi],al
  40cf12:	add    BYTE PTR [eax],al
  40cf14:	cwde   
  40cf15:	ins    DWORD PTR es:[edi],dx
  40cf16:	call   0x5875:0xff054948
  40cf1d:	in     eax,dx
  40cf1e:	call   0x5026aec4
  40cf23:	mov    ebp,DWORD PTR [eax]
  40cf25:	js     0x40ceac
  40cf27:	hlt    
  40cf28:	pop    es
  40cf29:	out    0xfe,al
  40cf2b:	push   eax
  40cf2c:	call   0x88e5:0xffa1d8ed
  40cf33:	test   DWORD PTR [eax],ecx
  40cf35:	(bad)  
  40cf36:	(bad)  
  40cf37:	jmp    eax
  40cf39:	adc    eax,0x6affff9d
  40cf3e:	jmp    DWORD PTR [edi-0x3a]
  40cf41:	pop    eax
  40cf42:	inc    eax
  40cf43:	add    BYTE PTR [edi-0x4e],cl
  40cf46:	out    dx,eax
  40cf47:	idiv   DWORD PTR [edi]
  40cf49:	in     al,dx
  40cf4a:	(bad)  
  40cf4b:	jne    0x40cf59
  40cf4d:	in     eax,0x31
  40cf4f:	mov    eax,ds:0x8588ec3f
  40cf54:	xor    al,0xf4
  40cf56:	(bad)  
  40cf57:	jmp    DWORD PTR [edx-0x63a097f4]
  40cf5d:	dec    ebp
  40cf5e:	(bad)  
  40cf5f:	inc    BYTE PTR [eax]
  40cf61:	and    eax,0xcffff6fd
  40cf66:	jmp    0x40cfdc
  40cf68:	or     al,0x0
  40cf6a:	adc    al,0xa0
  40cf6c:	(bad)  
  40cf6d:	inc    DWORD PTR [ebp-0x1418137b]
  40cf73:	(bad)  
  40cf74:	push   0xffffffd8
  40cf76:	fs addr16 pop esp
  40cf79:	or     DWORD PTR ds:0xf378b5ff,ecx
  40cf7f:	(bad)  
  40cf80:	(bad)  
  40cf81:	fbstp  TBYTE PTR [ecx+0xb]
  40cf84:	call   0x3f7c55
  40cf89:	and    DWORD PTR [ecx+0x7f31f7e8],eax
  40cf8f:	and    ch,BYTE PTR [edx+0x31]
  40cf92:	or     dl,BYTE PTR [ebp+0x2221f05b]
  40cf98:	mov    ch,0x81
  40cf9a:	lahf   
  40cf9b:	and    edi,edi
  40cf9d:	jbe    0x40cfb4
  40cf9f:	psubsb mm2,QWORD PTR [eax-0x3e]
  40cfa3:	and    edi,edi
  40cfa5:	mov    eax,0x5ef73ea5
  40cfaa:	mov    bh,0x8f
  40cfac:	test   DWORD PTR [ecx-0x49],edx
  40cfaf:	and    edi,edi
  40cfb1:	loope  0x40cffc
  40cfb3:	test   BYTE PTR [eax+esi*8+0x21],bl
  40cfb7:	and    dh,BYTE PTR [ebp-0xde20bf]
  40cfbd:	ss adc eax,0x22704862
  40cfc3:	sub    edi,DWORD PTR [esi+0x21eed100]
  40cfc9:	or     esi,ecx
  40cfcb:	jge    0x40cfc9
  40cfcd:	adc    ah,0x1
  40cfd0:	sbb    bh,bh
  40cfd2:	push   cs
  40cfd3:	cs cwde 
  40cfd5:	clts   
  40cfd7:	push   edx
  40cfd8:	xchg   edx,eax
  40cfd9:	test   ecx,ebx
  40cfdb:	push   ds
  40cfdc:	and    edi,edi
  40cfde:	popa   
  40cfdf:	or     cl,BYTE PTR [esi+0x2d26ee9d]
  40cfe5:	adc    al,0x3a
  40cfe7:	bound  ebx,QWORD PTR [eax-0x5ec57efb]
  40cfed:	pushf  
  40cfee:	(bad)  
  40cfef:	ds dec ecx
  40cff1:	test   ecx,ebp
  40cff3:	ds and edi,edi
  40cff6:	sbb    al,0x22
  40cff8:	add    eax,DWORD PTR [eax]
  40cffa:	lods   al,BYTE PTR ds:[esi]
  40cffb:	lods   al,BYTE PTR ds:[esi]
  40cffc:	xor    esi,edi
  40cffe:	mov    dh,0x5e
  40d000:	mov    ah,0x67
  40d002:	mov    ebp,0xa7ffc305
  40d007:	or     BYTE PTR [esp+edx*1-0x5a],bl
  40d00b:	pop    ss
  40d00c:	sahf   
  40d00d:	and    DWORD PTR [eax*1+0x17ae9581],ebx
  40d014:	mov    cs,WORD PTR [ebx+0x217e3cac]
  40d01a:	jle    0x40cfa7
  40d01c:	cmp    al,0x28
  40d01e:	jle    0x40d037
  40d020:	jbe    0x40d026
  40d022:	lea    edx,ds:[edx+0x4]
  40d026:	xor    DWORD PTR [ecx],ecx
  40d028:	push   0x5f
  40d02a:	add    BYTE PTR [ebp+0x1f],cl
  40d02d:	pop    esi
  40d02e:	and    DWORD PTR [ecx],esi
  40d030:	or     BYTE PTR [ebp-0x6e],ch
  40d033:	xor    DWORD PTR [ecx],ecx
  40d035:	jmp    0x3e6154be
  40d03a:	and    DWORD PTR [esi],edi
  40d03c:	or     dh,ch
  40d03e:	xchg   DWORD PTR [eax-0x66fc16f8],esi
  40d044:	stc    
  40d045:	call   0x9c57b77a
  40d04a:	or     ecx,DWORD PTR [ecx]
  40d04c:	cmp    al,0x80
  40d04e:	and    DWORD PTR [esi],edx
  40d050:	pop    ss
  40d051:	pop    esp
  40d052:	xor    BYTE PTR [esi],al
  40d054:	pop    ss
  40d055:	push   cs
  40d056:	and    DWORD PTR [ecx+eax*1+0x11],edi
  40d05a:	jmp    0x21bc:0x20fe1698
  40d061:	(bad)  
  40d062:	and    dh,ch
  40d064:	push   ss
  40d065:	je     0x40d072
  40d067:	fyl2x  
  40d069:	and    BYTE PTR [eax],0xde
  40d06c:	push   ss
  40d06d:	xchg   esp,eax
  40d06e:	daa    
  40d06f:	ficom  WORD PTR [esi]
  40d071:	(bad)  
  40d072:	and    BYTE PTR [ecx+eax*1-0x3f],al
  40d076:	or     eax,0x20c616ab
  40d07b:	test   BYTE PTR [ecx],dh
  40d07d:	mov    dh,0x20
  40d07f:	mov    dh,0x16
  40d081:	add    BYTE PTR [edi*1+0x51509a21],bh
  40d088:	push   ss
  40d089:	call   FWORD PTR [esi+ebx*2+0x1e]
  40d08d:	call   FWORD PTR [esi+0x79c5100]
  40d093:	add    DWORD PTR [eax+0x70],0x54ad8eff
  40d09a:	aam    0x7e
  40d09c:	push   ecx
  40d09d:	push   ss
  40d09e:	add    ch,dh
  40d0a0:	jne    0x40d02d
  40d0a2:	mov    ebp,0xff164999
  40d0a7:	in     eax,0xbf
  40d0a9:	clc    
  40d0aa:	mov    ch,BYTE PTR [esi+eiz*1+0x1e]
  40d0ae:	call   FWORD PTR [esi+0x11]
  40d0b1:	fsin   
  40d0b3:	fdivr  QWORD PTR [edx]
  40d0b5:	and    DWORD PTR [edx+0x70],ebp
  40d0b8:	adc    DWORD PTR [esi],edx
  40d0ba:	jmp    0x40d0af
  40d0bc:	mov    WORD PTR [esi],ss
  40d0be:	(bad)  
  40d0bf:	mov    ah,0x2a
  40d0c1:	and    DWORD PTR [esi+0x50],ebx
  40d0c4:	push   ecx
  40d0c5:	push   ss
  40d0c6:	push   DWORD PTR [esi+ecx*2+0x1e]
  40d0ca:	jmp    DWORD PTR [esi]
  40d0cc:	dec    edx
  40d0cd:	imul   ebx,DWORD PTR [esi+ebx*1+0x5b51651],0x29
  40d0d5:	push   ss
  40d0d6:	inc    DWORD PTR [ecx]
  40d0d8:	mov    DWORD PTR [ebp-0x1],esi
  40d0db:	push   es
  40d0dc:	push   ecx
  40d0dd:	pop    esp
  40d0de:	call   0xe856e7d9
  40d0e3:	outs   dx,BYTE PTR gs:[esi]
  40d0e5:	push   ss
  40d0e6:	(bad)  
  40d0e7:	out    dx,al
  40d0e8:	jl     0x40d11f
  40d0ea:	mul    esi
  40d0ec:	and    DWORD PTR ds:[ecx-0xe9c983],eax
  40d0f3:	pushf  
  40d0f4:	add    BYTE PTR [ecx],cl
  40d0f6:	push   ds
  40d0f7:	dec    esi
  40d0f9:	adc    eax,0xf7009b9f
  40d0fe:	cmc    
  40d0ff:	(bad)  
  40d100:	mov    ch,0x78
  40d102:	std    
  40d103:	(bad)  
  40d104:	jmp    edi
  40d106:	outs   dx,DWORD PTR ds:[esi]
  40d107:	or     edi,edi
  40d109:	pop    ebp
  40d10a:	add    eax,0xf5d5b9e8
  40d10f:	(bad)  
  40d110:	(bad)  
  40d111:	std    
  40d112:	cld    
  40d113:	idiv   bh
  40d115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d116:	in     al,0x59
  40d118:	pushf  
  40d119:	mov    bh,0xf5
  40d11b:	inc    BYTE PTR [ebp-0x50]
  40d11e:	jecxz  0x40d0ec
  40d120:	std    
  40d121:	div    ebp
  40d123:	(bad)  
  40d124:	jne    0x40d10a
  40d126:	in     al,0x75
  40d128:	mov    BYTE PTR [eax+0x9],bl
  40d12b:	leave  
  40d12c:	ret    0x964
  40d12f:	push   ebp
  40d130:	mov    esp,esp
  40d132:	mov    esp,eax
  40d134:	cld    
  40d135:	jb     0x40d140
  40d137:	push   0x1c
  40d139:	imul   DWORD PTR [edi+0x7]
  40d13c:	call   0x3f65a5
  40d141:	sar    DWORD PTR [edi],0xfb
  40d144:	push   0x40498f
  40d149:	push   edi
  40d14a:	xor    bh,BYTE PTR [esi-0xf736b8]
  40d150:	jne    0x40d172
  40d152:	loope  0x40d1c5
  40d154:	std    
  40d155:	daa    
  40d156:	hlt    
  40d157:	addr16 xchg edi,eax
  40d159:	add    ah,dl
  40d15b:	dec    ebp
  40d15c:	jmp    DWORD PTR [edi+0xa]
  40d15f:	or     DWORD PTR [eax],eax
  40d161:	xor    bh,0x71
  40d164:	pop    es
  40d165:	call   0x3fbb22
  40d16a:	xlat   BYTE PTR ds:[ebx]
  40d16b:	jno    0x40d168
  40d16d:	(bad)  
  40d16e:	jge    0x40d175
  40d170:	call   0xff3482f4
  40d175:	leave  
  40d176:	xor    DWORD PTR [eax+0x7],esp
  40d179:	add    BYTE PTR [edi+eiz*4+0x2e],bl
  40d17d:	xor    ebp,0xb6ff1d56
  40d183:	mov    eax,0x5b4c6a03
  40d188:	cwde   
  40d189:	pop    es
  40d18a:	cdq    
  40d18b:	add    bh,BYTE PTR [ebp-0x1]
  40d18e:	sahf   
  40d18f:	cdq    
  40d190:	(bad)  
  40d191:	sti    
  40d192:	or     DWORD PTR [esi],ebp
  40d194:	add    al,0x0
  40d196:	xor    DWORD PTR [ebp-0x7c780879],ebp
  40d19c:	push   ds
  40d19d:	push   eax
  40d19e:	mov    DWORD PTR [esi+eax*4],edx
  40d1a1:	add    BYTE PTR [ecx],dh
  40d1a3:	pop    ss
  40d1a4:	inc    ebx
  40d1a5:	je     0x40d1c4
  40d1a7:	pop    ebp
  40d1a8:	pop    es
  40d1a9:	add    DWORD PTR [ecx],esi
  40d1ab:	and    dl,BYTE PTR [esi-0x408536dc]
  40d1b1:	inc    eax
  40d1b2:	xor    DWORD PTR [ebp-0x44b00879],esp
  40d1b8:	sbb    eax,0x7e5b5950
  40d1bd:	inc    DWORD PTR [eax]
  40d1bf:	ds jb  0x40d16d
  40d1c2:	push   DWORD PTR [esi]
  40d1c4:	ret    
  40d1c5:	pop    esp
  40d1c6:	push   eax
  40d1c7:	cs push ebp
  40d1c9:	or     ebp,eax
  40d1cb:	fnstsw ax
  40d1cd:	sbb    eax,0x79c609ff
  40d1d2:	call   DWORD PTR [esi]
  40d1d4:	repz xchg edi,eax
  40d1d6:	sti    
  40d1d7:	push   cs
  40d1d8:	jne    0x40d1e5
  40d1da:	call   0xff5e6afd
  40d1df:	call   0x5c40d8c3
  40d1e4:	xchg   edi,eax
  40d1e5:	cs xor ebp,0x1d
  40d1e9:	test   al,0xff
  40d1eb:	pop    eax
  40d1ec:	inc    esp
  40d1ed:	push   ds
  40d1ee:	jne    0x40d219
  40d1f0:	or     ecx,edx
  40d1f2:	pop    ecx
  40d1f3:	mov    ecx,0x748bde13
  40d1f8:	adc    eax,0x24310441
  40d1fd:	(bad)  
  40d1fe:	lods   al,BYTE PTR ds:[esi]
  40d1ff:	jge    0x40d1b5
  40d201:	daa    
  40d202:	add    al,0x49
  40d204:	inc    edx
  40d205:	sbb    eax,0x3c12aec3
  40d20a:	or     al,0x99
  40d20c:	push   0xffffffa5
  40d20e:	sbb    eax,0x201c139e
  40d213:	xchg   esi,eax
  40d214:	popf   
  40d215:	lock sub ebp,DWORD PTR [ebp+0x70]
  40d219:	xchg   esi,eax
  40d21a:	sbb    eax,0x3e54678
  40d21f:	in     al,0x7f
  40d221:	xchg   ebp,eax
  40d222:	add    DWORD PTR [eax],0x6d
  40d225:	cmp    al,0x76
  40d227:	sbb    eax,0x202c856e
  40d22c:	add    DWORD PTR [esp+esi*8],edx
  40d22f:	repz pop edi
  40d231:	popf   
  40d232:	hlt    
  40d233:	sub    ebx,ebp
  40d235:	mov    ebp,ecx
  40d237:	add    edi,DWORD PTR [edx]
  40d239:	dec    ecx
  40d23a:	out    0x86,al
  40d23c:	cmp    eax,0x7603e909
  40d241:	int    0x40
  40d243:	add    al,0x31
  40d245:	or     ecx,ebp
  40d247:	inc    esp
  40d248:	je     0x40d267
  40d24a:	ss add eax,0x3c30931
  40d250:	mov    ecx,DWORD PTR [ecx]
  40d252:	xchg   ebx,eax
  40d253:	add    ecx,DWORD PTR [ebx+0x2c76c09]
  40d259:	mov    edx,0x1afd8763
  40d25e:	push   cs
  40d25f:	sbb    eax,0x1b7c1261
  40d264:	neg    BYTE PTR [esp+edi*8+0x8a772b]
  40d26b:	jmp    0x7600d0a2
  40d270:	aaa    
  40d271:	and    BYTE PTR [edi+0x680932e8],dh
  40d277:	cmp    dl,0xc9
  40d27a:	call   ebp
  40d27c:	lahf   
  40d27d:	add    ch,al
  40d27f:	jbe    0x40d2bd
  40d281:	adc    bh,bh
  40d283:	sbb    DWORD PTR [eax+0x648d39],ebp
  40d289:	inc    esi
  40d28a:	sbb    bh,bh
  40d28c:	mov    dh,0xe2
  40d28e:	mov    eax,0x121c66e7
  40d293:	push   DWORD PTR [eax-0x51]
  40d296:	sbb    edi,esi
  40d298:	sahf   
  40d299:	sub    eax,0x2573dd21
  40d29e:	adc    cl,BYTE PTR [ebp-0xe5ad9c]
  40d2a4:	xchg   dl,al
  40d2a6:	stos   BYTE PTR es:[edi],al
  40d2a7:	rcr    BYTE PTR ds:0x3cfe1272,cl
  40d2ad:	inc    edx
  40d2ae:	sbb    bh,bh
  40d2b0:	outs   dx,BYTE PTR ds:[esi]
  40d2b1:	cmp    eax,0x19510b9c
  40d2b6:	je     0x40d2b7
  40d2b8:	pop    esi
  40d2b9:	mov    ebx,0x255ee48c
  40d2be:	adc    ch,BYTE PTR [edx-0x17]
  40d2c1:	mov    ch,BYTE PTR [esi]
  40d2c3:	pop    esp
  40d2c4:	test   al,0x32
  40d2c6:	adc    dh,BYTE PTR [ebp-0xedbac7]
  40d2cc:	ss mov edi,0x9f29e7fd
  40d2d2:	adc    bh,bh
  40d2d4:	jo     0x40d285
  40d2d6:	and    al,0xf7
  40d2d8:	push   ds
  40d2d9:	sub    eax,0x5280ff9f
  40d2de:	mov    ch,0x40
  40d2e0:	jmp    0x1312f02
  40d2e5:	imul   ebp
  40d2e7:	(bad)  
  40d2e8:	jmp    DWORD PTR [ebp+0x2]
  40d2eb:	call   0xf5bdd395
  40d2f0:	dec    BYTE PTR [ecx-0x921ab]
  40d2f6:	iret   
  40d2f7:	(bad)  
  40d2f8:	jmp    DWORD PTR [edi-0x1f]
  40d2fb:	push   eax
  40d2fc:	inc    eax
  40d2fd:	add    bh,bl
  40d2ff:	mov    bh,0xef
  40d301:	imul   edi
  40d303:	in     eax,dx
  40d304:	(bad)  
  40d305:	jne    0x40d2c3
  40d307:	fisttp QWORD PTR [ecx-0x77121063]
  40d30d:	test   DWORD PTR [ebp+esi*8+0xcf2fffe],edi
  40d314:	push   0xff4becf7
  40d319:	(bad)  
  40d31a:	in     eax,0xfc
  40d31c:	idiv   bh
  40d31e:	lahf   
  40d31f:	in     eax,dx
  40d320:	je     0x40d32e
  40d322:	mov    al,0x5d
  40d324:	pushf  
  40d325:	jmp    FWORD PTR [edi-0x18277a7d]
  40d32b:	in     eax,dx
  40d32c:	(bad)  
  40d32d:	push   0x58
  40d32f:	pop    ebp
  40d330:	xor    bl,BYTE PTR [ebp+0x9]
  40d333:	or     eax,0xf5f8b5ff
  40d338:	(bad)  
  40d339:	(bad)  
  40d33a:	out    dx,eax
  40d33b:	ja     0x40d348
  40d33d:	call   0x3f63c6
  40d342:	rol    DWORD PTR [edi-0x1210082c],1
  40d348:	cmp    BYTE PTR [ebp-0x1038c],0x18
  40d34f:	cmp    DWORD PTR [eax-0x7d],0xf6e18d00
  40d356:	dec    DWORD PTR [edi+0x5]
  40d359:	je     0x40d3cb
  40d35b:	fwait
  40d35c:	mov    dl,0xe7
  40d35e:	div    DWORD PTR [ecx]
  40d360:	neg    DWORD PTR [edx]
  40d362:	add    BYTE PTR [ebp+0x310fab87],al
  40d368:	neg    DWORD PTR [ecx-0x1]
  40d36b:	sbb    ch,BYTE PTR fs:[ebx]
  40d36e:	mov    edi,0xff1a17bf
  40d373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d374:	push   cs
  40d375:	adc    bh,bh
  40d377:	(bad)  
  40d378:	daa    
  40d379:	nop
  40d37a:	pop    es
  40d37b:	fst    DWORD PTR [ebx]
  40d37d:	jb     0x40d37e
  40d37f:	(bad)  
  40d380:	aaa    
  40d381:	push   eax
  40d382:	call   0xff5b134d
  40d387:	cmp    al,0x1a
  40d389:	sub    eax,DWORD PTR ds:0xff1a4fc6
  40d38f:	fadd   QWORD PTR [edx+0x12]
  40d392:	call   FWORD PTR [esi-0x611bafa1]
  40d398:	addr16 sbb bh,bh
  40d39b:	add    al,0x1a
  40d39d:	sub    eax,ebp
  40d39f:	lahf   
  40d3a0:	ja     0x40d3bc
  40d3a2:	inc    esp
  40d3a4:	pop    edx
  40d3a5:	adc    bh,bh
  40d3a7:	jbe    0x40d330
  40d3a9:	nop
  40d3aa:	pop    es
  40d3ab:	pop    ecx
  40d3ac:	xor    DWORD PTR [ecx-0x1],0x66
  40d3b0:	xchg   edi,eax
  40d3b1:	dec    edi
  40d3b2:	fsub   QWORD PTR [esi-0x61]
  40d3b5:	sbb    edi,edi
  40d3b7:	add    ah,bl
  40d3b9:	sbb    DWORD PTR [ebx],ebp
  40d3bb:	aad    0xa7
  40d3bd:	scas   eax,DWORD PTR es:[edi]
  40d3be:	sbb    edi,edi
  40d3c0:	jl     0x40d390
  40d3c2:	adc    edi,edi
  40d3c4:	ds mov edi,0xdf49078f
  40d3ca:	jo     0x40d3cb
  40d3cc:	cs iret 
  40d3ce:	dec    edi
  40d3cf:	in     al,0x1e
  40d3d1:	xlat   BYTE PTR ds:[ebx]
  40d3d2:	sbb    eax,ebp
  40d3d4:	enter  0x19b8,0xff
  40d3d8:	push   ss
  40d3d9:	or     DWORD PTR [edi+eiz*1+0x6],ebx
  40d3dd:	adc    BYTE PTR [esi],bl
  40d3df:	sub    esp,DWORD PTR [edi-0x1e5e98f]
  40d3e5:	push   ebp
  40d3e6:	add    DWORD PTR [edx],edx
  40d3e8:	test   BYTE PTR [edi],0x11
  40d3eb:	jbe    0x40d3b5
  40d3ed:	paddd  mm3,QWORD PTR [ecx]
  40d3f0:	pushf  
  40d3f1:	sub    al,0xfe
  40d3f3:	sbb    esi,ebx
  40d3f5:	and    BYTE PTR [ecx+0x7c],ah
  40d3f8:	(bad)  
  40d3f9:	(bad)  
  40d3fb:	dec    edi
  40d3fc:	jmp    0xd95ab218
  40d401:	lea    ebp,[edi+0x19]
  40d404:	mov    esi,0xbe30940f
  40d409:	shufps xmm5,XMMWORD PTR [ebx+eiz*1],0x72
  40d40e:	mov    esi,0xb955a619
  40d413:	adc    DWORD PTR [esi+0x2a8fae0f],ebx
  40d419:	adc    BYTE PTR [esp+ecx*1],bl
  40d41c:	add    BYTE PTR [ecx-0x79e660f9],bl
  40d422:	subps  xmm2,XMMWORD PTR [esi+eax*4]
  40d426:	jle    0x86b2b358
  40d42c:	sbb    DWORD PTR [esi-0x3b],ebp
  40d42f:	sub    BYTE PTR [ebx],0x4a
  40d432:	pcmpeqd mm3,QWORD PTR [ecx]
  40d435:	pop    esi
  40d436:	xchg   ebp,eax
  40d437:	ins    BYTE PTR es:[edi],dx
  40d438:	sub    al,0xe3
  40d43a:	test   ecx,ebp
  40d43c:	add    edi,DWORD PTR [eax+0x4a]
  40d43f:	in     eax,dx
  40d440:	add    ebx,esp
  40d442:	add    DWORD PTR [ebp-0x7b],0x75
  40d446:	or     al,0xc3
  40d448:	add    ecx,ebx
  40d44a:	out    dx,eax
  40d44b:	inc    ebp
  40d44c:	(bad)  
  40d44d:	ss and ecx,edx
  40d450:	jno    0x40d478
  40d452:	verr   WORD PTR [eax-0x22]
  40d456:	adc    ch,BYTE PTR [eax+0x2d]
  40d459:	fxch   st(1)
  40d45b:	jmp    DWORD PTR ds:0xa8484ffe
  40d461:	xor    cl,BYTE PTR [esi]
  40d463:	jne    0x40d446
  40d465:	dec    edx
  40d466:	dec    ecx
  40d467:	std    
  40d468:	push   cs
  40d469:	sbb    BYTE PTR [ecx+0xef3a5fb],ah
  40d46f:	addr16 jmp 0x40d4a4
  40d472:	or     DWORD PTR [eax-0x17f9500a],eax
  40d478:	aas    
  40d479:	ds push cs
  40d47b:	jmp    esi
  40d47d:	mov    edi,0x54ff12
  40d482:	xor    eax,0x197f7b21
  40d487:	push   cs
  40d488:	leave  
  40d489:	stos   DWORD PTR es:[edi],eax
  40d48a:	mov    dh,0xe
  40d48c:	push   esp
  40d48d:	jb     0x40d4e5
  40d48f:	mov    al,ah
  40d491:	mov    ebp,0xe969b7e0
  40d496:	int3   
  40d497:	out    dx,al
  40d498:	(bad)  
  40d499:	xor    al,0x25
  40d49b:	and    DWORD PTR ds:0x890e297f,ebx
  40d4a1:	and    al,0x29
  40d4a3:	xor    BYTE PTR ds:0xffc96d2a,0x61
  40d4aa:	pop    edi
  40d4ab:	mov    DWORD PTR [edi+0x28],0xe93f8935
  40d4b2:	mov    dh,0xa9
  40d4b4:	and    esp,DWORD PTR [bp-0x37]
  40d4b9:	push   ss
  40d4ba:	add    eax,0x32e984d3
  40d4bf:	mov    ecx,0xc97e1f67
  40d4c4:	(bad)  
  40d4c5:	mov    ebp,0xe984df0a
  40d4ca:	xor    dh,BYTE PTR [ebx+0x7f58000a]
  40d4d0:	add    ecx,DWORD PTR [ebx]
  40d4d2:	dec    edx
  40d4d3:	jle    0x40d4fe
  40d4d5:	push   esi
  40d4d6:	jo     0x40d54f
  40d4d8:	mov    eax,ds:0x556247ff
  40d4dd:	pop    ebp
  40d4de:	(bad)  [ecx]
  40d4e0:	push   eax
  40d4e1:	call   0x3f6b71
  40d4e6:	add    BYTE PTR [eax-0x800009f],bh
  40d4ec:	mov    al,0x67
  40d4ee:	push   ecx
  40d4ef:	xchg   ebp,eax
  40d4f0:	dec    edx
  40d4f1:	dec    DWORD PTR [edi-0x19]
  40d4f4:	jnp    0x40d4fd
  40d4f6:	call   0x3fa061
  40d4fb:	xor    BYTE PTR [ecx-0x1e280068],cl
  40d501:	add    BYTE PTR [esi+0x58],al
  40d504:	aaa    
  40d505:	push   DWORD PTR [edx+eiz*8+0x4e]
  40d509:	sti    
  40d50a:	xor    ecx,DWORD PTR [eax+0x77fffeab]
  40d510:	cmc    
  40d511:	icebp  
  40d512:	scas   al,BYTE PTR es:[edi]
  40d513:	xor    BYTE PTR [esi],cl
  40d515:	je     0x40d4b6
  40d517:	out    0x77,eax
  40d519:	sti    
  40d51a:	call   FWORD PTR [ebp-0x3]
  40d51d:	out    0xe3,eax
  40d51f:	or     eax,0x465ffef6
  40d524:	mov    esp,0x588804c1
  40d529:	mov    ch,ah
  40d52b:	or     ecx,ecx
  40d52d:	sti    
  40d52e:	jmp    FWORD PTR [ebp+0x5]
  40d531:	push   DWORD PTR [ebp+0x60]
  40d534:	loope  0x40d52f
  40d536:	xchg   edx,eax
  40d537:	out    0xf5,eax
  40d539:	mov    BYTE PTR [ebp-0x3c],al
  40d53c:	cmc    
  40d53d:	je     0x40d53b
  40d53f:	xlat   BYTE PTR ds:[ebx]
  40d540:	ja     0x40d549
  40d542:	call   0x3f6eb9
  40d547:	xor    DWORD PTR [ebx+0x2a000bc8],ebp
  40d54d:	loopne 0x40d4de
  40d54f:	inc    ecx
  40d550:	mov    dl,0x9
  40d552:	add    al,0x74
  40d554:	fs retf 
  40d556:	nop
  40d557:	sti    
  40d558:	or     DWORD PTR [eax+0x7b],esp
  40d55b:	call   DWORD PTR [esi]
  40d55d:	jae    0x40d575
  40d55f:	jne    0x40d59e
  40d561:	jecxz  0x40d4f3
  40d563:	sti    
  40d564:	popa   
  40d565:	jmp    0x40d4f7
  40d567:	pop    es
  40d568:	or     ecx,eax
  40d56a:	jno    0x40d56b
  40d56c:	neg    BYTE PTR [eax-0x76]
  40d56f:	dec    ebp
  40d570:	cmp    eax,0x5dffdc9f
  40d575:	sbb    BYTE PTR [ecx+0x16ba2ce7],dh
  40d57b:	dec    DWORD PTR [edx]
  40d57d:	loop   0x40d5a9
  40d57f:	adc    al,0xb2
  40d581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d582:	repz inc DWORD PTR [edx+0x1a]
  40d586:	mov    al,BYTE PTR [ebp+0x21]
  40d589:	xor    edx,DWORD PTR [eax-0x75dd5905]
  40d58f:	ret    0x209a
  40d592:	jmp    0x400:0x76078bf
  40d599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d59a:	call   FWORD PTR es:[esi+ebp*1]
  40d59e:	push   ss
  40d59f:	jne    0x40d5da
  40d5a1:	jp     0x40d529
  40d5a3:	xchg   edx,eax
  40d5a4:	xchg   BYTE PTR [ebx+0x16],ch
  40d5a7:	jne    0x40d5d6
  40d5a9:	rcl    BYTE PTR [esi],cl
  40d5ab:	jne    0x40d5d6
  40d5ad:	mov    bh,dh
  40d5af:	xchg   edx,eax
  40d5b0:	add    BYTE PTR [esi-0x7d],ch
  40d5b3:	dec    esp
  40d5b4:	ret    0x2239
  40d5b7:	mov    al,0x8a
  40d5b9:	dec    ebp
  40d5ba:	lahf   
  40d5bb:	ds sar bh,0xf2
  40d5bf:	mov    dl,0x82
  40d5c1:	int3   
  40d5c2:	or     cl,dh
  40d5c4:	add    edi,DWORD PTR [ebp+0x2a9869f6]
  40d5ca:	or     ebp,ebx
  40d5cc:	pop    es
  40d5cd:	mov    dl,0x8e
  40d5cf:	clc    
  40d5d0:	add    esp,DWORD PTR [ebp+0x42986a03]
  40d5d6:	or     DWORD PTR [esp+ecx*1-0x496db6b6],esi
  40d5dd:	je     0x40d621
  40d5df:	sub    esi,ebx
  40d5e1:	push   cs
  40d5e2:	jg     0x40d590
  40d5e4:	pop    es
  40d5e5:	mov    dl,0x28
  40d5e7:	out    0x82,al
  40d5e9:	jl     0x40d5e8
  40d5eb:	call   0x2941087f
  40d5f0:	(bad)  
  40d5f1:	cmp    eax,esp
  40d5f3:	sub    BYTE PTR [edx+0x412fab87],bh
  40d5f9:	inc    ecx
  40d5fa:	or     DWORD PTR [edx-0x40],esp
  40d5fd:	inc    edx
  40d5fe:	mov    BYTE PTR [ecx],cl
  40d600:	(bad)  
  40d601:	mov    bl,0x8d
  40d603:	cld    
  40d604:	add    edi,DWORD PTR ds:0x4543f205
  40d60a:	add    al,BYTE PTR [edx]
  40d60c:	inc    esp
  40d60d:	pop    edx
  40d60e:	lods   al,BYTE PTR ds:[esi]
  40d60f:	cs dec ebx
  40d611:	jae    0x40d60b
  40d613:	call   0xbcbd700
  40d618:	xor    al,0x8
  40d61a:	scas   al,BYTE PTR es:[edi]
  40d61b:	lds    ebp,FWORD PTR [eax-0x1db7137f]
  40d621:	adc    al,0x4
  40d623:	dec    ecx
  40d624:	xchg   ecx,eax
  40d625:	call   0xc5a8:0x189e0b9f
  40d62c:	lods   al,BYTE PTR ds:[esi]
  40d62d:	mov    esp,esi
  40d62f:	inc    esp
  40d630:	dec    edi
  40d631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d632:	or     eax,0x3a5ae8ca
  40d637:	or     ecx,ebp
  40d639:	add    esp,DWORD PTR [edx+0x64]
  40d63c:	add    BYTE PTR [edx-0x5a],ah
  40d63f:	add    ecx,DWORD PTR [ebx-0x5be7c6e4]
  40d645:	je     0x40d5cd
  40d647:	sbb    edx,DWORD PTR [eax+0x5e]
  40d64a:	scas   al,BYTE PTR es:[edi]
  40d64b:	dec    ebx
  40d64c:	(bad)  
  40d64d:	fdivr  st(6),st
  40d64f:	and    BYTE PTR [edi-0x78],dh
  40d652:	inc    esp
  40d653:	or     bh,bh
  40d655:	mov    esp,0x56312166
  40d65a:	inc    esp
  40d65b:	or     bh,bh
  40d65d:	mov    esp,0x29457a2e
  40d662:	mov    al,0xc4
  40d664:	mov    edi,0xbf941c02
  40d669:	adc    edi,ebp
  40d66b:	jae    0x40d66c
  40d66d:	push   ss
  40d66e:	stos   BYTE PTR es:[edi],al
  40d66f:	(bad)
  40d673:	(bad)
  40d677:	sbb    cl,BYTE PTR [ebx+0x501e007c]
  40d67d:	adc    cl,ch
  40d67f:	xor    cl,BYTE PTR [ecx]
  40d681:	repz inc ebp
  40d683:	addr16 test eax,0x502d285c
  40d689:	or     ebp,ecx
  40d68b:	xor    cl,BYTE PTR [ecx]
  40d68d:	repz lea ebp,[ecx+0x77620794]
  40d694:	(bad)  
  40d695:	repnz lea ebp,[edi+0x4419dfc4]
  40d69c:	xchg   esp,eax
  40d69d:	mov    edi,0xe846a7b6
  40d6a2:	pop    es
  40d6a3:	adc    cl,BYTE PTR [edx]
  40d6a5:	jmp    DWORD PTR [esi-0x7617b949]
  40d6ab:	or     al,0xa
  40d6ad:	call   DWORD PTR [ebp+0x5cef94af]
  40d6b3:	mov    DWORD PTR [edx-0x47],0x68800
  40d6ba:	add    bl,bl
  40d6bc:	test   eax,0xafa8758c
  40d6c1:	pop    es
  40d6c2:	add    BYTE PTR [eax+0x6],bl
  40d6c5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6c7:	bound  eax,QWORD PTR [edi]
  40d6c9:	lea    eax,[ebp+0x0]
  40d6cc:	push   esi
  40d6cd:	out    0x68,eax
  40d6cf:	stos   BYTE PTR es:[edi],al
  40d6d0:	push   es
  40d6d1:	add    BYTE PTR [ebx+0x7d8a1605],cl
  40d6d7:	add    al,0xc7
  40d6d9:	out    dx,al
  40d6da:	add    esp,DWORD PTR [ebx]
  40d6dc:	cmc    
  40d6dd:	jae    0x40d746
  40d6df:	add    BYTE PTR [ebx+0x5],dh
  40d6e2:	lea    eax,[ebp+0x70]
  40d6e5:	push   esi
  40d6e6:	push   ebp
  40d6e7:	push   esi
  40d6e8:	and    bh,ch
  40d6ea:	mov    ds:0xc6890800,eax
  40d6ef:	or     bh,cl
  40d6f1:	add    bh,bh
  40d6f3:	jne    0x40d6e2
  40d6f5:	add    eax,0x892f46b6
  40d6fa:	clc    
  40d6fb:	or     BYTE PTR [edi+0x8],ah
  40d6fe:	sub    esi,eax
  40d700:	repz jp 0x40d712
  40d703:	ror    esi,1
  40d705:	pusha  
  40d706:	jmp    FWORD PTR [ecx-0x28]
  40d709:	imul   edi,edi,0x69
  40d70c:	enter  0xfe4f,0x75
  40d710:	mov    eax,0x9869ff6b
  40d715:	in     eax,dx
  40d716:	mov    ebp,0xb059881
  40d71b:	shl    BYTE PTR [esp+ebp*1+0x4f],0x50
  40d720:	jo     0x40d6a4
  40d722:	xchg   esi,eax
  40d723:	(bad)  
  40d724:	fisttp WORD PTR [ecx+0x52259d7]
  40d72a:	push   0x0
  40d72c:	cmp    DWORD PTR [edx+0x55],edx
  40d72f:	push   DWORD PTR [ecx]
  40d731:	in     eax,dx
  40d732:	repz imul esi,DWORD PTR [ecx],0xc4e80406
  40d739:	mov    al,ds:0x602a0003
  40d73e:	cdq    
  40d73f:	pop    es
  40d740:	add    cl,BYTE PTR [eax+0x4e0095bf]
  40d746:	call   0x5eae:0xdebadade
  40d74d:	(bad)  
  40d74f:	inc    ebp
  40d750:	adc    BYTE PTR [ecx],dh
  40d752:	dec    ebp
  40d753:	jle    0x40d741
  40d755:	mov    dl,0x2e
  40d757:	adc    al,0x57
  40d759:	sbb    BYTE PTR [ebx],0x2f
  40d75c:	jmp    DWORD PTR [esi+esi*8+0x4a297511]
  40d763:	cmp    edx,DWORD PTR [eax-0x14bc7f2]
  40d769:	jl     0x40d765
  40d76b:	sbb    cl,BYTE PTR [ebx+eiz*4-0x674ecd9]
  40d772:	mov    edx,0x323af805
  40d777:	cwde   
  40d778:	inc    esi
  40d779:	mov    ah,0xb5
  40d77b:	push   ss
  40d77c:	push   eax
  40d77d:	fidivr WORD PTR [ebp-0x1]
  40d780:	(bad)  
  40d781:	pop    esp
  40d782:	jmp    0x8911:0xf7ccab1a
  40d789:	ins    BYTE PTR es:[edi],dx
  40d78a:	out    dx,al
  40d78b:	jg     0x40d7d2
  40d78d:	rol    DWORD PTR [edx+0x13],0x75
  40d791:	and    eax,0x990797df
  40d796:	jns    0x40d7a8
  40d798:	jmp    DWORD PTR [esi-0x61083787]
  40d79e:	cmp    eax,0xba1cff14
  40d7a3:	adc    DWORD PTR [ebp-0x7b],esi
  40d7a6:	mov    bh,0x97
  40d7a8:	sti    
  40d7a9:	add    BYTE PTR [ecx+0x7e11f809],bl
  40d7af:	or     BYTE PTR [edx+0x2b],dh
  40d7b2:	jbe    0x40d832
  40d7b4:	xchg   ebp,eax
  40d7b5:	sbb    ecx,DWORD PTR [ebx+0x66128d9e]
  40d7bb:	jle    0x40d73e
  40d7bd:	sbb    eax,DWORD PTR [ebx-0x34ed8262]
  40d7c3:	or     BYTE PTR [esi],bl
  40d7c5:	adc    eax,esp
  40d7c7:	adc    BYTE PTR [ecx+0x6608b59d],al
  40d7cd:	jle    0x40d841
  40d7cf:	fs mov esi,0xe911733c
  40d7d5:	mov    eax,0x9069f4bb
  40d7da:	cmp    cl,BYTE PTR [edi]
  40d7dc:	mov    ebx,0xd97e1fe4
  40d7e1:	adc    bl,BYTE PTR [ecx+edx*1+0x7beba41]
  40d7e8:	adc    bh,BYTE PTR cs:[ecx+ebx*1+0x26]
  40d7ed:	cwde   
  40d7ee:	ss icebp 
  40d7f0:	dec    ebp
  40d7f1:	adc    dh,dh
  40d7f3:	pop    es
  40d7f4:	push   ss
  40d7f5:	cwde   
  40d7f6:	or     BYTE PTR ds:[ebx+edi*8+0x1203acce],dl
  40d7fe:	fiadd  WORD PTR [edi]
  40d800:	je     0x40d7f5
  40d802:	xlat   BYTE PTR ds:[ebx]
  40d803:	jge    0x40d7e6
  40d805:	sbb    edi,DWORD PTR [ebx+0x8]
  40d808:	out    dx,al
  40d809:	adc    DWORD PTR [edx+0x7afd5d],edi
  40d80f:	xor    ecx,DWORD PTR [eax]
  40d811:	push   esp
  40d812:	hlt    
  40d813:	mov    bh,0x7d
  40d815:	loope  0x40d832
  40d817:	mov    eax,0xb211ce05
  40d81c:	test   ebp,esi
  40d81e:	add    al,0x27
  40d820:	pop    ds
  40d821:	mov    esi,0x82697
  40d826:	cmp    al,0x8d
  40d828:	out    dx,eax
  40d829:	ja     0x40d7d7
  40d82b:	and    BYTE PTR [eax],cl
  40d82d:	call   FWORD PTR [eax*4+0x1af17506]
  40d834:	jbe    0x40d833
  40d836:	xchg   esi,eax
  40d837:	inc    eax
  40d838:	or     BYTE PTR [ebp-0x7],dh
  40d83b:	les    ebx,FWORD PTR [edi]
  40d83d:	(bad)  
  40d83e:	cld    
  40d83f:	pop    edx
  40d840:	out    dx,eax
  40d841:	sbb    BYTE PTR [ecx+0x40],0x8
  40d845:	(bad)  
  40d846:	cld    
  40d847:	inc    edx
  40d848:	push   es
  40d849:	jne    0x40d82c
  40d84b:	sub    bh,bl
  40d84d:	mov    fs,WORD PTR [esi+0x20]
  40d850:	rol    cl,cl
  40d852:	stc    
  40d853:	xor    bl,BYTE PTR [esi-0x75]
  40d856:	inc    ebp
  40d857:	inc    eax
  40d858:	jl     0x40d866
  40d85a:	ret    
  40d85b:	xor    eax,DWORD PTR [esi]
  40d85d:	jne    0x40d850
  40d85f:	cmp    ch,BYTE PTR [ebx-0x70]
  40d862:	ds inc eax
  40d864:	push   es
  40d865:	jne    0x40d84c
  40d867:	and    DWORD PTR [eax+ecx*1+0x41],edi
  40d86b:	pop    eax
  40d86c:	pop    es
  40d86d:	jmp    DWORD PTR [esi]
  40d86f:	jl     0x40d8cd
  40d871:	adc    BYTE PTR [eax+0x0],dh
  40d874:	das    
  40d875:	push   es
  40d876:	jne    0x40d85d
  40d878:	inc    ecx
  40d879:	jl     0x40d883
  40d87b:	add    DWORD PTR [eax],ebp
  40d87d:	pop    es
  40d87e:	inc    DWORD PTR [esi]
  40d880:	pop    esp
  40d881:	pop    esp
  40d882:	adc    al,0x70
  40d884:	das    
  40d885:	push   es
  40d886:	jne    0x40d86d
  40d888:	and    DWORD PTR [eax+ecx*1+0x1],edi
  40d88c:	js     0x40d895
  40d88e:	jmp    esi
  40d890:	cmp    eax,0x2c70185c
  40d895:	rol    cl,1
  40d897:	std    
  40d898:	xor    bl,BYTE PTR [ebx+ecx*4-0x43]
  40d89c:	lods   eax,DWORD PTR ds:[esi]
  40d89d:	int    0xeb
  40d89f:	add    BYTE PTR [esi],bh
  40d8a1:	sar    ch,0x75
  40d8a4:	jl     0x40d84a
  40d8a6:	(bad)  
  40d8a7:	dec    BYTE PTR [ebp+0x5]
  40d8aa:	out    0x19,eax
  40d8ac:	call   0x1e40d7c9
  40d8b1:	add    esi,edi
  40d8b3:	jne    0x40d835
  40d8b5:	and    cl,BYTE PTR [edx-0x74e63871]
  40d8bb:	lock mov cl,0xd5
  40d8be:	(bad)  
  40d8bf:	dec    DWORD PTR [eax-0x7b]
  40d8c2:	inc    ebp
  40d8c3:	adc    al,0xcb
  40d8c5:	sar    esi,1
  40d8c7:	je     0x40d926
  40d8c9:	and    esi,DWORD PTR [esi]
  40d8cb:	add    DWORD PTR [eax+0xa],ebx
  40d8ce:	mov    DWORD PTR [ebp-0x2c],0x48000009
  40d8d5:	xchg   DWORD PTR [ebp-0x4],eax
  40d8d8:	add    al,ch
  40d8da:	sbb    BYTE PTR [ebp+0x14],dh
  40d8dd:	ja     0x40d87e
  40d8df:	push   cs
  40d8e0:	(bad)  
  40d8e1:	fld    QWORD PTR [ecx]
  40d8e3:	out    0xf2,eax
  40d8e5:	push   esi
  40d8e6:	sbb    edi,edi
  40d8e8:	mov    eax,DWORD PTR [eax-0x73]
  40d8eb:	jl     0x40d8e9
  40d8ed:	sbb    BYTE PTR [esi-0x495c97df],bl
  40d8f3:	aas    
  40d8f4:	add    BYTE PTR [edi],dl
  40d8f6:	lahf   
  40d8f7:	cli    
  40d8f8:	call   0x4063e5
  40d8fd:	ror    DWORD PTR [ecx+0x75],cl
  40d900:	or     eax,0x415b9cc0
  40d905:	enter  0x7518,0xfc
  40d909:	xor    BYTE PTR [ecx],bl
  40d90b:	add    BYTE PTR [eax],0xd8
  40d90e:	add    BYTE PTR [ebp-0x14],0xe3
  40d912:	or     eax,0xce445c7
  40d917:	add    BYTE PTR [eax],al
  40d919:	xor    eax,esi
  40d91b:	cmp    DWORD PTR [ebp-0x6b],0x91796ef
  40d922:	icebp  
  40d923:	add    ch,bh
  40d925:	xlat   BYTE PTR ds:[ebx]
  40d926:	(bad)  
  40d927:	cwde   
  40d928:	or     ebx,DWORD PTR [ecx-0x79008c24]
  40d92e:	mov    dh,0x98
  40d930:	sti    
  40d931:	jle    0x40d957
  40d933:	add    al,ch
  40d935:	std    
  40d936:	or     BYTE PTR [edi],0xff
  40d939:	pop    eax
  40d93a:	push   0x4
  40d93c:	add    BYTE PTR [eax],al
  40d93e:	xor    DWORD PTR [ebx-0x37],ebp
  40d941:	adc    esi,DWORD PTR [edx+0x2c7502c7]
  40d947:	cdq    
  40d948:	test   DWORD PTR [eax],eax
  40d94a:	xor    eax,esi
  40d94c:	inc    ebp
  40d94d:	inc    ebp
  40d94e:	dec    ecx
  40d94f:	out    dx,eax
  40d950:	add    al,BYTE PTR [eax]
  40d952:	xor    DWORD PTR [edi],esi
  40d954:	leave  
  40d955:	repz xor eax,esi
  40d958:	add    al,BYTE PTR [eax]
  40d95a:	div    BYTE PTR [ebp-0xdceffee]
  40d960:	add    cl,BYTE PTR [ebp-0x734bbd8c]
  40d966:	ins    BYTE PTR es:[edi],dx
  40d967:	ds mov ah,0x8c
  40d96a:	je     0x40d9a6
  40d96c:	mov    ah,0xfe
  40d96e:	jl     0x40d94e
  40d970:	or     eax,0x251a2975
  40d975:	(bad)  
  40d976:	mul    BYTE PTR [ebx]
  40d978:	cmp    DWORD PTR [ebp-0x23],0xfffffff2
  40d97c:	xchg   esi,eax
  40d97d:	xor    dh,BYTE PTR [edx+0x65000a95]
  40d983:	fld    QWORD PTR [ecx-0x680d2283]
  40d989:	add    eax,0x137db2
  40d98e:	cmp    eax,0xb9750dd1
  40d993:	or     esi,esp
  40d995:	cwde   
  40d996:	sub    dh,cl
  40d998:	stc    
  40d999:	je     0x40d949
  40d99b:	add    al,0xd6
  40d99d:	cwde   
  40d99e:	mov    ds:0x5404,al
  40d9a3:	mov    DWORD PTR [ecx],edx
  40d9a5:	pop    eax
  40d9a6:	push   cs
  40d9a7:	xchg   esi,eax
  40d9a8:	add    al,0x34
  40d9aa:	adc    al,0x8e
  40d9ac:	jle    0x40d993
  40d9ae:	sbb    eax,DWORD PTR [ecx+ebx*4+0x7e7e0ead]
  40d9b5:	mov    eax,ds:0x9d98931b
  40d9ba:	push   cs
  40d9bb:	outs   dx,BYTE PTR ds:[esi]
  40d9bc:	jle    0x40d95b
  40d9be:	sbb    ecx,DWORD PTR [ebx+0x5e0e8d98]
  40d9c4:	jle    0x40da3f
  40d9c6:	sbb    eax,DWORD PTR [ebx-0x1f18268]
  40d9cc:	pcmpeqd mm7,mm6
  40d9cf:	lods   eax,DWORD PTR ds:[esi]
  40d9d0:	jbe    0x40da40
  40d9d2:	push   cs
  40d9d3:	ds mov bl,ah
  40d9d6:	pop    ds
  40d9d7:	xor    DWORD PTR [ebp-0x1],edi
  40d9da:	cdq    
  40d9db:	cs add ebx,esp
  40d9de:	dec    DWORD PTR [esi]
  40d9e0:	outs   dx,DWORD PTR ds:[esi]
  40d9e1:	jns    0x40d9f1
  40d9e3:	push   ds
  40d9e4:	outs   dx,DWORD PTR ds:[esi]
  40d9e5:	jmp    0x515675f8
  40d9ea:	mov    ds:0x993603be,eax
  40d9ef:	push   es
  40d9f0:	add    esi,DWORD PTR [edi+edi*8+0xe795b16]
  40d9f7:	test   BYTE PTR [ebx],0x94
  40d9fa:	psubusw mm4,QWORD PTR [ebp+0x52e60e79]
  40da01:	loop   0x40da18
  40da03:	mov    es,WORD PTR cs:[ebx+0xd]
  40da07:	add    dh,dl
  40da09:	add    ebx,DWORD PTR [esi-0x390653]
  40da0f:	fdiv   DWORD PTR [edx]
  40da11:	pop    esi
  40da12:	mov    edi,ebp
  40da14:	mov    al,0xcc
  40da16:	jecxz  0x40da57
  40da18:	and    al,0x7e
  40da1a:	or     cl,dl
  40da1c:	fmul   DWORD PTR [esi+0x4e2ad6fe]
  40da22:	hlt    
  40da23:	push   0xffffffae
  40da25:	test   DWORD PTR [edi],0xbb9b3a
  40da2b:	jmp    0xa09ee362
  40da30:	repz adc BYTE PTR [eax],al
  40da33:	scas   al,BYTE PTR es:[edi]
  40da34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da35:	or     ebp,eax
  40da37:	adc    al,0xf6
  40da39:	add    edi,edi
  40da3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da3c:	jbe    0x40da39
  40da3e:	add    cl,ch
  40da40:	xor    cl,BYTE PTR [ecx]
  40da42:	lea    esp,[ebp*1+0x5afcff59]
  40da49:	jmp    0x40da47
  40da4b:	ins    BYTE PTR es:[edi],dx
  40da4c:	cmp    al,0x4
  40da4e:	mov    DWORD PTR [ecx+eiz*1],ebp
  40da51:	mov    BYTE PTR [ecx+esi*2+0x35],bh
  40da55:	jge    0x40da63
  40da57:	push   0xffffffa6
  40da59:	inc    DWORD PTR [ecx]
  40da5b:	(bad)  [esi+eax*4]
  40da5e:	jl     0x40dab5
  40da60:	das    
  40da61:	jnp    0x40da6d
  40da63:	xchg   ecx,eax
  40da64:	xor    cl,BYTE PTR [ecx]
  40da66:	add    cl,ch
  40da68:	(bad)  
  40da69:	rol    ecx,1
  40da6b:	icebp  
  40da6c:	add    BYTE PTR [edx],dh
  40da6e:	xchg   esp,eax
  40da6f:	inc    esp
  40da70:	xor    DWORD PTR [ebp+0x1ae17503],edi
  40da76:	xlat   BYTE PTR ds:[ebx]
  40da77:	mov    WORD PTR [esi],fs
  40da79:	and    al,0x86
  40da7b:	jl     0x40da9e
  40da7d:	xor    eax,0x72e2047d
  40da82:	jge    0x40da8e
  40da84:	push   ecx
  40da85:	xor    cl,BYTE PTR [ecx]
  40da87:	add    BYTE PTR [eax],al
  40da89:	enter  0xc7b4,0xc2
  40da8d:	rol    BYTE PTR [esi],0x83
  40da90:	jge    0x40da4e
  40da92:	or     esi,DWORD PTR [edx+0x1f]
  40da95:	pop    ebp
  40da96:	retf   0x50f6
  40da99:	(bad)  
  40da9a:	cmc    
  40da9b:	std    
  40da9c:	jne    0x40da3e
  40da9e:	push   ds
  40da9f:	mov    ?,WORD PTR cs:[edi+0x15]
  40daa3:	lea    eax,[ebp-0x80]
  40daa6:	mov    dh,0xfd
  40daa8:	jne    0x40da4a
  40daaa:	push   ds
  40daab:	sahf   
  40daac:	(bad)  
  40daad:	iret   
  40daae:	adc    eax,0x21744589
  40dab3:	sbb    eax,0x5015558d
  40dab8:	call   DWORD PTR ds:0xdd8de705
  40dabe:	adc    al,0xff
  40dac0:	mov    DWORD PTR ds:0xc0458d31,edx
  40dac6:	mov    dh,0x68
  40dac8:	add    al,0xaf
  40daca:	fwait
  40dacb:	push   es
  40dacc:	call   0x405f29
  40dad1:	add    ch,cl
  40dad3:	retf   0x50f6
  40dad6:	iret   
  40dad7:	call   0xffff:0xffbe806
  40dade:	fwait
  40dadf:	xchg   ebx,eax
  40dae0:	loop   0x40dae3
  40dae2:	add    eax,0x80458bf4
  40dae7:	mov    dh,0xfd
  40dae9:	jne    0x40db57
  40daeb:	adc    eax,0x9b4f0c75
  40daf0:	push   es
  40daf1:	call   0x3feda4
  40daf6:	pop    ebp
  40daf7:	retf   
  40daf8:	not    BYTE PTR [eax+0x4f]
  40dafb:	fwait
  40dafc:	push   es
  40dafd:	call   0x3feb81
  40db02:	xor    DWORD PTR [edi-0x72],ebp
  40db05:	div    DWORD PTR [ecx]
  40db07:	popf   
  40db08:	clc    
  40db09:	mov    bh,0x31
  40db0b:	lock add al,BYTE PTR [eax]
  40db0e:	outs   dx,DWORD PTR ds:[esi]
  40db0f:	cmp    DWORD PTR [ecx+0x8],eax
  40db12:	xor    DWORD PTR [ebp-0x3a],ebp
  40db15:	mul    DWORD PTR [ecx-0xd]
  40db18:	xchg   esp,eax
  40db19:	sti    
  40db1a:	mov    dh,0x64
  40db1c:	clc    
  40db1d:	(bad)  
  40db1e:	and    al,0xf8
  40db20:	sbb    al,BYTE PTR [eax-0x7cf5255c]
  40db26:	sbb    al,0xd8
  40db28:	add    esi,DWORD PTR [ebp+0x2b]
  40db2b:	mov    BYTE PTR [ebx],al
  40db2d:	add    BYTE PTR [ecx],dh
  40db2f:	lock test al,0xc8
  40db32:	jae    0x40db1b
  40db34:	add    cl,BYTE PTR [ebp-0x4c480c00]
  40db3a:	(bad)  
  40db3b:	cld    
  40db3c:	neg    DWORD PTR [edx]
  40db3e:	push   cs
  40db3f:	mov    esp,0x618b0aa2
  40db44:	mov    BYTE PTR [esi],cl
  40db46:	add    BYTE PTR [ecx],dh
  40db48:	lock or DWORD PTR [ebp+0x29],esi
  40db4c:	cwde   
  40db4d:	dec    eax
  40db4e:	mov    cs,WORD PTR [esi-0x7e]
  40db51:	iret   
  40db52:	inc    esp
  40db53:	cmp    eax,0x46e90004
  40db58:	out    dx,eax
  40db59:	add    al,BYTE PTR [eax]
  40db5b:	mov    dl,0xec
  40db5d:	push   es
  40db5e:	push   es
  40db5f:	mov    ds:0x29457906,eax
  40db64:	ret    
  40db65:	or     DWORD PTR [ebp+0x29],esi
  40db68:	dec    edx
  40db69:	daa    
  40db6a:	mov    WORD PTR [esi],ss
  40db6c:	dec    eax
  40db6d:	jns    0x40dbb4
  40db6f:	or     DWORD PTR [ebx+0x4a397509],esp
  40db75:	into   
  40db76:	stc    
  40db77:	(bad)  
  40db78:	das    
  40db79:	jns    0x40dbc0
  40db7b:	stc    
  40db7c:	or     DWORD PTR [ecx+0x1111640a],edi
  40db82:	(bad)  
  40db84:	add    BYTE PTR [esi],dl
  40db86:	jns    0x40dbfc
  40db88:	add    DWORD PTR [ecx+0x11115c0a],edi
  40db8e:	aaa    
  40db8f:	retf   0xfe00
  40db92:	jl     0x40dc00
  40db94:	stc    
  40db95:	arpl   cx,ax
  40db97:	(bad)  
  40db98:	pop    ecx
  40db99:	out    dx,al
  40db9a:	nop
  40db9b:	add    BYTE PTR [esi],ch
  40db9d:	icebp  
  40db9e:	lods   al,BYTE PTR ds:[esi]
  40db9f:	push   cs
  40dba0:	scas   al,BYTE PTR es:[edi]
  40dba1:	add    BYTE PTR [eax-0x40],dh
  40dba4:	call   0x5400:0x10c2b8e
  40dbab:	cld    
  40dbac:	mov    ?,WORD PTR [esi-0x6d71f53f]
  40dbb2:	and    ebx,DWORD PTR [edx+esi*4]
  40dbb5:	jle    0x40db70
  40dbb7:	add    eax,DWORD PTR ds:0x8a886a7c
  40dbbd:	or     DWORD PTR ds:0x917eb399,ebx
  40dbc3:	add    ebx,ebp
  40dbc5:	addr16 push 0xffffff88
  40dbc8:	or     WORD PTR ds:0x247ccea5,dx
  40dbcf:	lds    ecx,FWORD PTR [esi-0x1]
  40dbd2:	repz adc ebx,DWORD PTR [ecx+0x4a]
  40dbd6:	test   DWORD PTR [ebx],0x90a91431
  40dbdc:	adc    al,0x71
  40dbde:	shr    BYTE PTR [eax-0x6fa1f68f],cl
  40dbe4:	push   ss
  40dbe5:	icebp  
  40dbe6:	sbb    BYTE PTR [edx+0x43e2001e],cl
  40dbec:	pushf  
  40dbed:	push   cs
  40dbee:	rcl    DWORD PTR [esi+0xae94a6d],1
  40dbf4:	jl     0x40dbef
  40dbf6:	inc    DWORD PTR [eax+0xb]
  40dbf9:	jle    0x40dbfb
  40dbfb:	jmp    0xd7b49bf7
  40dc00:	add    dl,cl
  40dc02:	(bad)  
  40dc03:	dec    BYTE PTR [esi]
  40dc05:	js     0x40dc07
  40dc07:	jne    0x40dbee
  40dc09:	cmp    dl,BYTE PTR [esi+ecx*4+0xe]
  40dc0d:	sub    eax,DWORD PTR [eax]
  40dc0f:	jne    0x40dc0a
  40dc11:	cmp    BYTE PTR [esi+0xc],dh
  40dc14:	adc    DWORD PTR [edi+ecx*4-0x2],ecx
  40dc18:	imul   BYTE PTR [eax]
  40dc1a:	jbe    0x40dc08
  40dc1c:	out    dx,al
  40dc1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc1e:	adc    ebp,eax
  40dc20:	jle    0x40dc4d
  40dc22:	add    bh,bh
  40dc24:	fidiv  WORD PTR [esi-0x66a30119]
  40dc2a:	out    0x8b,eax
  40dc2c:	pop    edi
  40dc2d:	sub    BYTE PTR [eax],al
  40dc2f:	(bad)  
  40dc30:	cmp    al,0x25
  40dc32:	icebp  
  40dc33:	jo     0x40dc8d
  40dc35:	cmp    BYTE PTR [eax],al
  40dc37:	(bad)  
  40dc38:	cmp    al,0x19
  40dc3a:	icebp  
  40dc3b:	push   0xff002858
  40dc40:	sbb    al,0x4d
  40dc42:	icebp  
  40dc43:	pusha  
  40dc44:	js     0x40dc7e
  40dc46:	add    BYTE PTR [esi+0x6a],cl
  40dc49:	mov    dh,0xf7
  40dc4b:	call   DWORD PTR [edx*2-0x300909ee]
  40dc52:	idiv   ebp
  40dc54:	jle    0x40dc8e
  40dc56:	xchg   esp,eax
  40dc57:	inc    esp
  40dc58:	jno    0x40dbe5
  40dc5a:	rol    cl,1
  40dc5c:	loope  0x40dc90
  40dc5e:	push   esi
  40dc5f:	mov    edx,DWORD PTR [ebp-0x4c]
  40dc62:	vdivsd xmm0,xmm0,QWORD PTR [eax]
  40dc66:	mov    dh,0x12
  40dc68:	call   0xff3f4762
  40dc6d:	loop   0x40dce1
  40dc6f:	je     0x40dca0
  40dc71:	add    BYTE PTR [ebp+0x6050fabe],al
  40dc77:	or     BYTE PTR [eax+0x751047ff],0xfc
  40dc7e:	inc    edi
  40dc7f:	mov    cs,WORD PTR [edx]
  40dc81:	call   0x405be1
  40dc86:	jecxz  0x40dcd2
  40dc88:	je     0x40dc99
  40dc8a:	inc    edi
  40dc8b:	mov    es,WORD PTR [esi]
  40dc8d:	(bad)  
  40dc8e:	mov    ebp,0x3587e806
  40dc93:	adc    bh,bh
  40dc95:	or     ebx,DWORD PTR [eax]
  40dc97:	mov    ?,esi
  40dc99:	(bad)  
  40dc9a:	cmp    eax,0x5088e806
  40dc9f:	adc    bh,bh
  40dca1:	leave  
  40dca2:	fiadd  DWORD PTR [edx]
  40dca4:	call   DWORD PTR [ebx+eiz*1+0x16]
  40dca8:	add    esp,0xffff10bc
  40dcae:	iret   
  40dcaf:	jg     0x40dc69
  40dcb1:	(bad)  
  40dcb2:	ja     0x40dcc5
  40dcb4:	add    BYTE PTR [eax],al
  40dcb6:	cwde   
  40dcb7:	or     cl,BYTE PTR [ebx-0x41026bbb]
  40dcbd:	je     0x40dc4c
  40dcbf:	mov    dh,BYTE PTR [edi]
  40dcc1:	add    BYTE PTR [ebp-0x2],cl
  40dcc4:	out    0x51,eax
  40dcc6:	pop    ecx
  40dcc7:	or     al,BYTE PTR [eax]
  40dcc9:	inc    DWORD PTR [eax]
  40dccb:	cmp    eax,0xc429e701
  40dcd0:	adc    bh,bh
  40dcd2:	or     ebx,DWORD PTR [eax-0x5897f271]
  40dcd8:	sar    DWORD PTR [edi],0x0
  40dcdb:	(bad)  
  40dcdc:	mov    cs,WORD PTR [edx]
  40dcde:	call   0x405612
  40dce3:	xor    edi,0x66
  40dce6:	in     al,0xd7
  40dce8:	retf   0xfefe
  40dceb:	xor    ebp,ebx
  40dced:	mul    bh
  40dcef:	jns    0x40dd65
  40dcf1:	or     bh,bh
  40dcf3:	mov    eax,0x6fe4b6c
  40dcf8:	aas    
  40dcf9:	fwait
  40dcfa:	cmp    eax,0x8d02f030
  40dcff:	lods   al,BYTE PTR ds:[esi]
  40dd00:	xor    DWORD PTR [ecx],ecx
  40dd02:	(bad)  
  40dd03:	out    dx,al
  40dd04:	mov    edi,0x1ec1d01a
  40dd09:	or     BYTE PTR [ebp-0xf6ce4c],cl
  40dd0f:	(bad)  
  40dd10:	mov    edi,0x589b507
  40dd15:	or     bh,bh
  40dd17:	fyl2x  
  40dd19:	xchg   bh,bh
  40dd1b:	mov    esi,0xb7bc7e68
  40dd20:	out    dx,al
  40dd21:	push   es
  40dd22:	inc    eax
  40dd23:	ds ins BYTE PTR es:[edi],dx
  40dd25:	adc    eax,DWORD PTR [eax]
  40dd27:	xor    eax,esi
  40dd29:	ja     0x40dcc0
  40dd2b:	jae    0x40dd02
  40dd2d:	push   es
  40dd2e:	inc    DWORD PTR [eax]
  40dd30:	sahf   
  40dd31:	icebp  
  40dd32:	repnz dec DWORD PTR [esi-0x4b837111]
  40dd39:	xor    eax,ebx
  40dd3b:	dec    edi
  40dd3c:	or     DWORD PTR [edx-0x37cebf4a],ebx
  40dd42:	es jnp 0x40dd76
  40dd45:	lock stc 
  40dd47:	mov    edi,0xa91be4dc
  40dd4c:	xor    eax,esi
  40dd4e:	add    cl,BYTE PTR [ebp-0xfa4e44]
  40dd54:	dec    esi
  40dd55:	je     0x40dd19
  40dd57:	sub    esp,ecx
  40dd59:	pop    ss
  40dd5a:	sub    BYTE PTR [edi-0x10],cl
  40dd5d:	out    dx,eax
  40dd5e:	sbb    al,dl
  40dd60:	mov    edx,0xf10b02ef
  40dd65:	or     esp,ebx
  40dd67:	add    BYTE PTR [eax],bl
  40dd69:	mov    gs,eax
  40dd6b:	add    esi,DWORD PTR [ecx]
  40dd6d:	cld    
  40dd6e:	fcomi  st,st(7)
  40dd70:	push   cs
  40dd71:	xchg   ebx,eax
  40dd72:	jno    0x40dd7b
  40dd74:	push   cs
  40dd75:	adc    DWORD PTR [ecx],ebp
  40dd77:	xchg   ecx,eax
  40dd78:	aaa    
  40dd79:	jno    0x40dddd
  40dd7b:	mov    esp,0x91360971
  40dd80:	sub    dh,cl
  40dd82:	and    eax,0x11fcee73
  40dd87:	cli    
  40dd88:	pop    eax
  40dd89:	or     DWORD PTR [esi],ebx
  40dd8b:	xchg   ecx,eax
  40dd8c:	sub    dh,cl
  40dd8e:	push   ecx
  40dd8f:	jae    0x40dd67
  40dd91:	cld    
  40dd92:	pop    ebx
  40dd93:	jno    0x40dd95
  40dd95:	repz sti 
  40dd97:	add    eax,0xcd57b407
  40dd9c:	mov    cl,0x6e
  40dd9e:	icebp  
  40dd9f:	cmc    
  40dda0:	jb     0x40dd58
  40dda2:	cld    
  40dda3:	cwde   
  40dda4:	push   es
  40dda5:	and    al,0x19
  40dda7:	cmp    DWORD PTR [edi],eax
  40dda9:	sbb    al,0x11
  40ddab:	ror    DWORD PTR [ecx],1
  40ddad:	lahf   
  40ddae:	cld    
  40ddaf:	aad    0x1b
  40ddb1:	fwait
  40ddb2:	mov    ebp,cs
  40ddb4:	push   es
  40ddb5:	call   0x6392:0x5ac17448
  40ddbc:	dec    edi
  40ddbd:	jg     0x40ddbb
  40ddbf:	mov    ch,0x6
  40ddc1:	cld    
  40ddc2:	sbb    BYTE PTR [esi-0x5a045ab0],ch
  40ddc8:	push   es
  40ddc9:	pop    ecx
  40ddca:	push   esi
  40ddcb:	sbb    eax,0xa9103104
  40ddd0:	(bad)  
  40ddd1:	push   cs
  40ddd2:	jno    0x40de46
  40ddd4:	mov    ebx,0x908608f1
  40ddd9:	cmp    dh,cl
  40dddb:	or     eax,0xfffc3e73
  40dde0:	jne    0x40ddc3
  40dde2:	mov    ah,0xfd
  40dde4:	outs   dx,BYTE PTR ds:[esi]
  40dde5:	aaa    
  40dde6:	pop    ecx
  40dde7:	call   0xff3d818a
  40ddec:	mov    ecx,0xe174fae2
  40ddf1:	cmp    bh,BYTE PTR [ecx-0x2]
  40ddf4:	dec    esi
  40ddf5:	aaa    
  40ddf6:	icebp  
  40ddf7:	mov    ah,0x76
  40ddf9:	add    BYTE PTR [edi],ch
  40ddfb:	cld    
  40ddfc:	mov    WORD PTR [eax+esi*2-0x5],fs
  40de00:	(bad)  
  40de01:	ss ret 0xb4fa
  40de05:	ins    DWORD PTR es:[edi],dx
  40de06:	xor    al,0xfc
  40de08:	(bad)  
  40de09:	adc    ebp,ecx
  40de0b:	jle    0x40de0d
  40de0d:	jmp    0x6c4fa6c3
  40de12:	retf   0xfefa
  40de15:	push   cs
  40de16:	aaa    
  40de17:	mov    dh,0xbb
  40de19:	pop    es
  40de1a:	das    
  40de1b:	cld    
  40de1c:	out    0xd5,eax
  40de1e:	stos   DWORD PTR es:[edi],eax
  40de1f:	sti    
  40de20:	(bad)  
  40de21:	mul    BYTE PTR [esi-0x3f]
  40de24:	std    
  40de25:	out    dx,al
  40de26:	xor    al,0xf1
  40de28:	test   BYTE PTR [esi+0x2c],dh
  40de2b:	cld    
  40de2c:	enter  0x99ab,0xfb
  40de30:	push   ebx
  40de31:	bound  edi,QWORD PTR [ecx]
  40de33:	mov    al,bl
  40de35:	cdq    
  40de36:	aaa    
  40de37:	cld    
  40de38:	(bad)  
  40de39:	scas   al,BYTE PTR es:[edi]
  40de3a:	push   es
  40de3b:	sar    ebp,0xbe
  40de3e:	xor    al,0x9
  40de40:	add    cl,ch
  40de42:	xor    dl,BYTE PTR [eax-0x449622bc]
  40de48:	jae    0x40de36
  40de4a:	mov    dl,0x40
  40de4c:	add    BYTE PTR [esi+ebx*2],dl
  40de4f:	lock or al,ch
  40de52:	xor    cl,BYTE PTR [ecx]
  40de54:	push   0x4884ae
  40de59:	add    BYTE PTR [edi+0xe80a8b],ch
  40de5f:	scas   eax,DWORD PTR es:[edi]
  40de60:	jbe    0x40de61
  40de62:	call   ecx
  40de64:	jnp    0x40de1e
  40de66:	(bad)  
  40de67:	lahf   
  40de68:	add    al,0x68
  40de6a:	sbb    DWORD PTR ds:[edi],eax
  40de6d:	add    BYTE PTR [ebp-0x1b86b],cl
  40de73:	jg     0x40de2a
  40de75:	out    0x67,al
  40de77:	outs   dx,DWORD PTR ds:[esi]
  40de78:	add    al,0xff
  40de7a:	lea    edx,[ebp+0x3ffffe47]
  40de80:	mov    ch,0xfd
  40de82:	mov    ch,0x80
  40de84:	add    edi,edi
  40de86:	push   DWORD PTR [eax+0x6e]
  40de89:	jp     0x40de8b
  40de8b:	fdivr  DWORD PTR [edi-0x7b]
  40de8e:	mov    esp,0x40ff043e
  40de93:	iret   
  40de94:	jp     0x40de5c
  40de96:	add    al,bl
  40de98:	push   es
  40de99:	lea    edx,[ebp-0xfce6]
  40de9f:	(bad)  
  40dea0:	or     BYTE PTR [eax],dl
  40dea2:	add    al,cl
  40dea4:	push   es
  40dea5:	je     0x40e3ba
  40deab:	sbb    eax,0x7ffec26b
  40deb0:	add    eax,0xb52c428d
  40deb5:	data16 fisubr DWORD PTR [edi]
  40deb8:	(bad)  
  40deb9:	(bad)  
  40deba:	out    0xdc,eax
  40debc:	mov    ?,esi
  40debe:	inc    DWORD PTR [ebx+0x27546]
  40dec4:	jae    0x40de51
  40dec6:	mov    edx,DWORD PTR [ebp-0xfb66]
  40decc:	ffree  st(7)
  40dece:	sub    dl,BYTE PTR [eax+0x40]
  40ded1:	xor    DWORD PTR [edi+0x41],ecx
  40ded4:	xor    eax,esi
  40ded6:	sbb    dl,BYTE PTR [edx-0x35]
  40ded9:	out    dx,eax
  40deda:	add    cl,BYTE PTR [ebx]
  40dedc:	jno    0x40dedb
  40dede:	add    bl,ch
  40dee0:	fisubr DWORD PTR [esi+ebp*2-0x3e]
  40dee4:	aaa    
  40dee5:	jae    0x40deeb
  40dee7:	lea    esi,[ebx-0x44]
  40deea:	jns    0x40de71
  40deec:	frstor [ecx+0x4]
  40deef:	dec    DWORD PTR [ecx+0x3140ba87]
  40def5:	push   ebx
  40def6:	mov    cs,WORD PTR [ebx]
  40def8:	sbb    DWORD PTR [ebx+0x4306ff70],esi
  40defe:	dec    esi
  40deff:	mov    ah,0xff
  40df01:	cmp    al,BYTE PTR [eax+edx*2]
  40df04:	or     DWORD PTR [ebx+0x71],edx
  40df07:	(bad)  
  40df08:	out    dx,al
  40df09:	push   0x22e7b07e
  40df0e:	add    al,0x50
  40df10:	dec    ecx
  40df11:	outs   dx,DWORD PTR ds:[esi]
  40df12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df13:	inc    eax
  40df14:	xor    DWORD PTR [ebx],edx
  40df16:	dec    esi
  40df17:	mov    al,0xcf
  40df19:	or     al,BYTE PTR [eax+ebp*8]
  40df1c:	cmp    BYTE PTR [edi+0x302a0002],al
  40df22:	(bad)  
  40df23:	adc    cl,BYTE PTR [ecx+0x69]
  40df26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df27:	inc    eax
  40df28:	add    BYTE PTR [ecx],dh
  40df2a:	jmp    0x40df78
  40df2c:	mov    al,0xa7
  40df2e:	loop   0x40df32
  40df30:	jmp    DWORD PTR [eax+edi*8]
  40df33:	jmp    0x8e8:0x2d29478
  40df3a:	pop    edx
  40df3b:	add    edi,edi
  40df3d:	mov    ah,0x6c
  40df3f:	(bad)  
  40df40:	std    
  40df41:	jle    0x40defd
  40df43:	push   ebx
  40df44:	(bad)  
  40df45:	mov    esp,0x6eff0273
  40df4a:	(bad)  
  40df4b:	call   0xe94a10c8
  40df50:	mov    BYTE PTR [esi+0x56496409],bl
  40df56:	stc    
  40df57:	xchg   ebp,eax
  40df58:	add    eax,DWORD PTR [esp+edi*4-0xfb9fc72]
  40df5f:	mov    al,ds:0x7e09317d
  40df64:	mov    ecx,0x375fa7e
  40df69:	sbb    DWORD PTR [ebx+0x5f],eax
  40df6c:	add    esp,DWORD PTR [esi]
  40df6e:	ret    
  40df6f:	sub    cl,BYTE PTR [ecx+esi*1]
  40df72:	pop    esi
  40df73:	jb     0x40df65
  40df75:	pop    ss
  40df76:	jg     0x40df5d
  40df78:	jmp    0x40df1a
  40df7a:	fwait
  40df7b:	dec    ebp
  40df7c:	add    edi,DWORD PTR [edx]
  40df7e:	leave  
  40df7f:	mov    esp,0x3e596112
  40df84:	jns    0x40dfaf
  40df86:	loope  0x40df09
  40df88:	add    ch,dh
  40df8a:	clc    
  40df8b:	inc    eax
  40df8c:	sub    eax,DWORD PTR [eax]
  40df8e:	mov    bh,0xf8
  40df90:	and    eax,0xe901f0cd
  40df95:	pop    eax
  40df96:	stos   BYTE PTR es:[edi],al
  40df97:	in     eax,0x69
  40df99:	enter  0x63ca,0xe9
  40df9d:	ins    DWORD PTR es:[edi],dx
  40df9e:	adc    al,bh
  40dfa0:	jnp    0x40dfad
  40dfa2:	leave  
  40dfa3:	inc    edx
  40dfa4:	jb     0x40dfa9
  40dfa6:	mov    dh,0x82
  40dfa8:	stos   DWORD PTR es:[edi],eax
  40dfa9:	call   FWORD PTR [eax]
  40dfab:	adc    ebp,esi
  40dfad:	js     0x40dfe8
  40dfaf:	loope  0x40df56
  40dfb1:	add    bl,BYTE PTR [esi-0x69d8ad08]
  40dfb7:	jle    0x40df9a
  40dfb9:	jmp    0x40df80
  40dfbb:	clc    
  40dfbc:	int    0x2
  40dfbe:	sbb    edx,DWORD PTR ds:0xe12978c6
  40dfc4:	xchg   ecx,eax
  40dfc5:	add    dh,BYTE PTR [esi-0x8]
  40dfc8:	inc    DWORD PTR [edx+0x35]
  40dfcb:	popa   
  40dfcc:	stos   DWORD PTR es:[edi],eax
  40dfcd:	or     al,0xec
  40dfcf:	or     BYTE PTR [eax+0x7a],ch
  40dfd2:	ror    DWORD PTR [ecx+0x0],1
  40dfd5:	sahf   
  40dfd6:	sbb    DWORD PTR [eax-0x1ecad7b9],edi
  40dfdc:	lock jns 0x40e012
  40dfdf:	clc    
  40dfe0:	or     ch,BYTE PTR [ecx+0x11501cc6]
  40dfe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfe7:	push   ebp
  40dfe8:	inc    ecx
  40dfe9:	jmp    0xe1b5d870
  40dfee:	sbb    cl,cl
  40dff0:	sti    
  40dff1:	data16 add BYTE PTR [ebx],dh
  40dff4:	loope  0x40dfb6
  40dff6:	ins    BYTE PTR es:[edi],dx
  40dff7:	xor    edi,eax
  40dff9:	imul   ebp,ecx,0xa85cb49a
  40dfff:	xor    ah,BYTE PTR [ecx-0x6d]
  40e002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e003:	jne    0x40e00e
  40e005:	push   esp
  40e007:	repz dec edi
  40e009:	inc    ecx
  40e00a:	jmp    0x2ed0a9e9
  40e00f:	xor    eax,DWORD PTR [eax+eax*8]
  40e012:	popf   
  40e013:	inc    esi
  40e014:	pop    ecx
  40e015:	push   0x4a5170
  40e01a:	mov    ecx,0x1087e33
  40e01f:	pushf  
  40e020:	repz inc BYTE PTR [esi]
  40e023:	retf   0x8c99
  40e026:	(bad)  
  40e027:	xor    BYTE PTR [ebx+0x0],ah
  40e02a:	xor    DWORD PTR [edx],0x61
  40e02d:	int    0x8c
  40e02f:	in     eax,dx
  40e030:	or     BYTE PTR [eax-0x17],ch
  40e033:	xor    cl,BYTE PTR [ecx]
  40e035:	adc    cl,0xb8
  40e038:	xchg   esi,edi
  40e03a:	(bad)  
  40e03b:	cmp    al,0xc9
  40e03d:	jae    0x40e044
  40e03f:	fstp   QWORD PTR [eax-0x18]
  40e042:	add    BYTE PTR [esi-0x6e],cl
  40e045:	std    
  40e046:	inc    DWORD PTR [ebx+0x481472cb]
  40e04c:	mov    DWORD PTR gs:[ebp+0x19],ebx
  40e050:	or     eax,0x53dff50
  40e055:	call   0x9f4e0b6
  40e05a:	(bad)  
  40e05b:	call   0x3e6864
  40e060:	mov    al,0x51
  40e062:	(bad)  
  40e063:	push   DWORD PTR [edi-0x48038af7]
  40e069:	jg     0x40e073
  40e06b:	call   0x3e6842
  40e070:	ror    edi,1
  40e072:	add    al,BYTE PTR [eax]
  40e074:	fld    QWORD PTR [ebp-0x6b37e16]
  40e07a:	cmc    
  40e07b:	jmp    DWORD PTR [edi-0x7a]
  40e07e:	inc    ebx
  40e07f:	cld    
  40e080:	enter  0x7509,0x10
  40e084:	ja     0x40e104
  40e086:	or     al,0xe8
  40e088:	jmp    0xdca:0xd3000073
  40e08f:	test   DWORD PTR [ebx],edx
  40e091:	or     eax,0x4e0f0000
  40e096:	clc    
  40e097:	add    al,cl
  40e099:	or     al,BYTE PTR [eax]
  40e09b:	(bad)  
  40e09c:	popf   
  40e09d:	(bad)  
  40e09e:	std    
  40e09f:	pop    es
  40e0a0:	fmul   DWORD PTR [edx]
  40e0a2:	push   0x0
  40e0a4:	mov    ds:0xa2006a0a,al
  40e0a9:	or     cl,BYTE PTR [ebp-0x72a553bb]
  40e0af:	test   DWORD PTR [ecx+esi*8+0x858fffd],ebx
  40e0b6:	jne    0x40e0b0
  40e0b8:	ja     0x40e139
  40e0ba:	cld    
  40e0bb:	call   0x7b5511c0
  40e0c0:	add    BYTE PTR [ecx],dh
  40e0c2:	jmp    0x40e086
  40e0c4:	jae    0x40e0fa
  40e0c6:	fst    DWORD PTR [eax+0x6ae076ff]
  40e0cc:	fwait
  40e0cd:	stc    
  40e0ce:	and    BYTE PTR [edi+edi*8],al
  40e0d1:	fmul   st(7),st
  40e0d3:	jmp    0xaa4f:0xffafc184
  40e0da:	mov    al,0x8d
  40e0dc:	test   BYTE PTR [ebp-0x69],al
  40e0df:	(bad)  
  40e0e0:	(bad)  
  40e0e1:	loope  0x40e114
  40e0e3:	in     al,dx
  40e0e4:	je     0x40e087
  40e0e6:	(bad)  
  40e0e7:	dec    DWORD PTR [eax-0x1078f54]
  40e0ed:	cs mov bl,cl
  40e0f0:	mov    esp,DWORD PTR [esi]
  40e0f2:	ins    DWORD PTR es:[di],dx
  40e0f4:	add    BYTE PTR [ecx+0x314160f3],cl
  40e0fa:	push   edi
  40e0fb:	mov    dh,0xef
  40e0fd:	push   es
  40e0fe:	pop    edi
  40e0ff:	add    bh,bh
  40e101:	jl     0x40e0d7
  40e103:	jmp    0xac89:0x4eaecd
  40e10a:	inc    ebx
  40e10b:	clc    
  40e10c:	(bad)  
  40e10d:	out    dx,al
  40e10e:	bound  edi,QWORD PTR [esi+0x26deeb]
  40e114:	add    BYTE PTR [ebp-0xd],ah
  40e117:	push   0x1
  40e119:	xor    DWORD PTR [edi],eax
  40e11b:	sar    esi,0x84
  40e11e:	or     edi,eax
  40e120:	inc    BYTE PTR [eax]
  40e122:	mov    BYTE PTR [esi],0x76
  40e125:	or     cl,cl
  40e127:	xchg   DWORD PTR [esi+edi*8-0x144b094a],esi
  40e12e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e12f:	(bad)  
  40e130:	(bad)  
  40e131:	out    0xb8,eax
  40e133:	push   ebx
  40e134:	add    bh,bh
  40e136:	sahf   
  40e137:	or     BYTE PTR [esp+esi*8-0x220a61],bl
  40e13e:	add    eax,0x3979d605
  40e143:	loope  0x40e15d
  40e145:	(bad)  
  40e146:	jg     0x40e13d
  40e148:	lds    edi,FWORD PTR [ecx-0x42027a]
  40e14e:	push   esi
  40e14f:	arpl   WORD PTR [ebp-0x1],sp
  40e152:	addr16 cmc 
  40e154:	and    edi,esp
  40e156:	dec    ecx
  40e157:	dec    esp
  40e158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e159:	call   DWORD PTR [edi-0xb]
  40e15c:	adc    eax,DWORD PTR [eax]
  40e15e:	pop    ecx
  40e15f:	jg     0x40e171
  40e161:	add    al,0x31
  40e163:	shr    BYTE PTR [edx+0x725c3110],0xf0
  40e16a:	mov    cl,0xcc
  40e16c:	nop
  40e16d:	imul   DWORD PTR [edi]
  40e16f:	cmc    
  40e170:	arpl   WORD PTR [ecx+0x25],cx
  40e173:	pop    edx
  40e174:	outs   dx,BYTE PTR ds:[esi]
  40e175:	jns    0x40e1b8
  40e177:	hlt    
  40e178:	fisttp DWORD PTR [edi]
  40e17a:	or     DWORD PTR [ecx-0x1f],edi
  40e17d:	add    esi,DWORD PTR [ecx]
  40e17f:	add    BYTE PTR [ecx],ch
  40e181:	shrd   DWORD PTR [ebx],edx,0xe8
  40e185:	add    eax,DWORD PTR [eax]
  40e187:	xor    esp,ecx
  40e189:	stos   DWORD PTR es:[edi],eax
  40e18a:	sti    
  40e18b:	div    ah
  40e18d:	call   0x3d8fd795
  40e192:	jmp    FWORD PTR [edi]
  40e194:	or     ecx,ebp
  40e196:	imul   esi,DWORD PTR [ecx],0x3169e95f
  40e19c:	pop    edi
  40e19d:	jmp    0xb93e5732
  40e1a2:	nop
  40e1a3:	lods   eax,DWORD PTR ds:[esi]
  40e1a4:	std    
  40e1a5:	adc    eax,0x659bfff
  40e1aa:	jns    0x40e165
  40e1ac:	hlt    
  40e1ad:	jae    0x40e1ae
  40e1af:	xchg   esi,eax
  40e1b0:	dec    esi
  40e1b1:	add    BYTE PTR [ecx+0x32],dh
  40e1b4:	or     DWORD PTR [ebx],ecx
  40e1b6:	sub    DWORD PTR [ecx],ebx
  40e1b8:	push   cs
  40e1b9:	jmp    0x4a1486
  40e1be:	push   ecx
  40e1bf:	stos   BYTE PTR es:[edi],al
  40e1c0:	dec    esp
  40e1c1:	inc    ecx
  40e1c2:	jmp    0xc1515f4e
  40e1c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1c8:	cmp    esi,0xffffffc6
  40e1cb:	loop   0x40e24c
  40e1cd:	iret   
  40e1ce:	ins    BYTE PTR es:[edi],dx
  40e1cf:	mov    ecx,0x67b6f6f8
  40e1d4:	inc    esp
  40e1d5:	push   edx
  40e1d6:	shl    DWORD PTR [ebx+eax*4-0x725a5902],0xef
  40e1de:	xchg   esi,eax
  40e1df:	dec    edi
  40e1e0:	repz out 0xb5,eax
  40e1e3:	mov    ebx,0x3503fef3
  40e1e8:	pop    edi
  40e1e9:	add    BYTE PTR [esi-0x91b8700],al
  40e1ef:	jle    0x40e220
  40e1f1:	repz je 0x40e1d9
  40e1f4:	sbb    ch,dl
  40e1f6:	lea    ebp,[esi+0x1f]
  40e1f9:	add    DWORD PTR [ebp+edx*2+0x5efef31f],0x56f6dfc9
  40e204:	pop    es
  40e205:	in     al,dx
  40e206:	mov    dh,BYTE PTR [edi+edi*8-0xe]
  40e20a:	or     ch,BYTE PTR [ecx]
  40e20c:	jle    0x40e276
  40e20e:	push   eax
  40e20f:	jo     0x40e1ca
  40e211:	jmp    0x40e209
  40e213:	ss out 0xf2,eax
  40e216:	mov    ah,0x41
  40e218:	out    0xf2,eax
  40e21a:	(bad)  
  40e21b:	adc    edx,ebp
  40e21d:	cmp    esi,0x1e
  40e220:	cmp    ecx,ecx
  40e222:	jae    0x40e1c5
  40e224:	pop    edx
  40e225:	pop    es
  40e226:	add    dh,bh
  40e228:	jge    0x40e295
  40e22a:	xchg   edi,eax
  40e22b:	add    BYTE PTR [esi+0x65ff004c],cl
  40e231:	loopne 0x40e228
  40e233:	call   FWORD PTR [edi+0x300873f5]
  40e239:	jne    0x40e1ef
  40e23b:	dec    DWORD PTR [edi+0x7f000264]
  40e241:	mov    dl,0x66
  40e243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e244:	ds dec eax
  40e246:	add    bh,bh
  40e248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e249:	in     al,0xf5
  40e24b:	jmp    FWORD PTR [edi-0xb]
  40e24e:	jae    0x40e258
  40e250:	add    BYTE PTR [eax-0x60004b99],al
  40e256:	add    BYTE PTR fs:[eax],al
  40e259:	lahf   
  40e25a:	mov    dl,0x66
  40e25c:	jmp    0x40e24b
  40e25e:	inc    edi
  40e25f:	add    bh,bh
  40e261:	in     eax,0xe4
  40e263:	cmc    
  40e264:	call   FWORD PTR [edi-0x4ff78c0b]
  40e26a:	aas    
  40e26b:	mov    ah,0xff
  40e26d:	scas   eax,DWORD PTR es:[edi]
  40e26e:	in     al,0x50
  40e270:	mov    ebp,DWORD PTR [edi-0x534a020c]
  40e276:	cld    
  40e277:	std    
  40e278:	push   DWORD PTR [eax-0x700074b4]
  40e27e:	hlt    
  40e27f:	mov    bl,0xf0
  40e281:	addr16 hlt 
  40e283:	std    
  40e284:	jmp    ebp
  40e286:	add    bh,bh
  40e288:	jne    0x40e29a
  40e28a:	(bad)  
  40e28c:	(bad)  
  40e28d:	outs   dx,DWORD PTR ds:[esi]
  40e28e:	hlt    
  40e28f:	std    
  40e290:	mov    ch,0x28
  40e292:	cld    
  40e293:	std    
  40e294:	push   DWORD PTR [eax+0x20]
  40e297:	mov    edi,edi
  40e299:	pmuludq mm0,QWORD PTR [ebx-0x8]
  40e29d:	inc    ecx
  40e29e:	idiv   ah
  40e2a0:	jmp    FWORD PTR [edi]
  40e2a2:	hlt    
  40e2a3:	jae    0x40e2a1
  40e2a5:	xor    DWORD PTR [eax],ecx
  40e2a7:	inc    ebp
  40e2a8:	ja     0x40e2db
  40e2aa:	loopne 0x40e275
  40e2ac:	shl    DWORD PTR ds:0x9d8b55e0,0x5f
  40e2b3:	enter  0xfb,0x1b
  40e2b7:	loopne 0x40e321
  40e2b9:	and    bl,BYTE PTR [esi+0x54e80b7d]
  40e2bf:	js     0x40e2bd
  40e2c1:	(bad)  
  40e2c2:	mov    eax,0x3168002d
  40e2c7:	loopne 0x40e2b4
  40e2c9:	mov    ebp,0x415dc709
  40e2ce:	xor    DWORD PTR [eax-0x7],ebx
  40e2d1:	pop    esp
  40e2d2:	lock (bad) 
  40e2d5:	je     0x40e310
  40e2d7:	enter  0xb42a,0x5e
  40e2db:	mov    ds:0x20f7036a,eax
  40e2e0:	add    al,0xff
  40e2e2:	add    al,0x53
  40e2e4:	dec    ebx
  40e2e5:	inc    ecx
  40e2e6:	xor    DWORD PTR [ebx+0x70490875],ebx
  40e2ec:	(bad)  
  40e2ed:	(bad)  
  40e2ee:	sbb    BYTE PTR ss:[ecx],al
  40e2f1:	pop    esi
  40e2f2:	jo     0x40e2d4
  40e2f4:	push   0x2
  40e2f6:	xor    eax,esp
  40e2f8:	cmp    dh,0xa4
  40e2fb:	call   0x6b5560ea
  40e300:	cld    
  40e301:	addr16 es mov dl,0x41
  40e305:	add    BYTE PTR [ecx-0x4efffd22],bl
  40e30b:	inc    edx
  40e30c:	jbe    0x40e316
  40e30e:	or     DWORD PTR [edi-0x28110104],esp
  40e314:	push   ebx
  40e315:	pop    esi
  40e316:	jo     0x40e2f8
  40e318:	push   0x2
  40e31a:	add    BYTE PTR [ecx],dh
  40e31c:	loopne 0x40e2a0
  40e31e:	(bad)  
  40e31f:	pop    esp
  40e320:	or     ecx,esi
  40e322:	jmp    0x40e39d
  40e324:	repz sbb eax,0x157bc7fc
  40e32a:	cld    
  40e32b:	inc    ebp
  40e32c:	add    DWORD PTR [ecx],eax
  40e32e:	push   ss
  40e32f:	test   eax,0x70ca05f1
  40e334:	or     al,0xe9
  40e336:	push   esi
  40e337:	mov    edx,0x2d75f5e4
  40e33c:	loope  0x40e346
  40e33e:	lea    edx,[edi+0x2c3f1f1]
  40e344:	xor    BYTE PTR [ecx-0x2c],dl
  40e347:	in     al,0x47
  40e349:	jmp    0x5fa56ca1
  40e34e:	sti    
  40e34f:	ja     0x40e3a9
  40e351:	sbb    DWORD PTR [ecx+esi*1+0x9],ebp
  40e355:	into   
  40e356:	mov    edx,0x4516b5ce
  40e35b:	xor    DWORD PTR [ecx-0x52],ebx
  40e35e:	jno    0x40e389
  40e360:	loope  0x40e3a0
  40e362:	mov    bh,0x4f
  40e364:	icebp  
  40e365:	inc    eax
  40e366:	ins    BYTE PTR es:[edi],dx
  40e367:	xor    BYTE PTR [ecx],cl
  40e369:	xchg   BYTE PTR [edx+0x452ec6d6],bh
  40e36f:	xor    DWORD PTR [ecx-0x7a],ebx
  40e372:	jno    0x40e3ad
  40e374:	loope  0x40e3a0
  40e376:	mov    bh,0x27
  40e378:	icebp  
  40e379:	or     BYTE PTR [edi-0x55],0xf0
  40e37d:	ins    DWORD PTR es:[edi],dx
  40e37e:	int    0x0
  40e380:	lock add ecx,ebp
  40e383:	push   eax
  40e384:	mov    edx,0xac069dd
  40e389:	fs jmp 0xd43135fc
  40e38f:	or     ecx,DWORD PTR [ecx]
  40e391:	pop    edi
  40e392:	outs   dx,BYTE PTR ds:[esi]
  40e393:	sti    
  40e394:	out    dx,eax
  40e395:	and    BYTE PTR [ebx+0x1358f7],0x36
  40e39c:	pusha  
  40e39d:	add    eax,ebp
  40e39f:	push   esp
  40e3a0:	(bad)  
  40e3a2:	(bad)  
  40e3a3:	xchg   ebx,eax
  40e3a4:	pop    ss
  40e3a5:	lock je 0x40e399
  40e3a8:	fiadd  DWORD PTR [ebx+0x62ba16fe]
  40e3ae:	sbb    al,0xe
  40e3b0:	inc    eax
  40e3b1:	add    eax,ebp
  40e3b3:	push   0xfefeefaa
  40e3b8:	and    ebp,ebp
  40e3ba:	(bad)  
  40e3bb:	jl     0x40e3e7
  40e3bd:	loope  0x40e345
  40e3bf:	call   0x8eab:0xc8ef
  40e3c5:	lock push ebx
  40e3c7:	jb     0x40e357
  40e3c9:	pop    ebx
  40e3ca:	(bad)  
  40e3cb:	in     al,dx
  40e3cc:	lods   al,BYTE PTR ds:[esi]
  40e3cd:	push   eax
  40e3ce:	inc    ecx
  40e3cf:	jmp    0xe940ed06
  40e3d4:	pop    ds
  40e3d5:	aam    0xfe
  40e3d7:	xor    al,0x35
  40e3d9:	loope  0x40e39d
  40e3db:	cmp    eax,0x148b0935
  40e3e0:	and    eax,0xebf78c
  40e3e5:	rcr    BYTE PTR [ecx],0x3
  40e3e8:	mov    ecx,0xf01e2af
  40e3ed:	mov    ah,0x32
  40e3ef:	pop    esp
  40e3f0:	sub    eax,0xae6605c0
  40e3f5:	xor    al,0x4d
  40e3f7:	add    BYTE PTR [esi-0x5f],bh
  40e3fa:	std    
  40e3fb:	out    0xf3,eax
  40e3fd:	mov    eax,ds:0x8a010009
  40e402:	push   eax
  40e403:	inc    ecx
  40e404:	jmp    0xa89eb4a3
  40e409:	xor    ah,cl
  40e40b:	cmp    DWORD PTR [ebp-0x5],edi
  40e40e:	out    dx,al
  40e40f:	or     ch,BYTE PTR [ecx]
  40e411:	xchg   BYTE PTR [esi-0x1],ah
  40e414:	add    BYTE PTR [ebp-0x8ea00fd],ch
  40e41a:	push   edx
  40e41b:	inc    ecx
  40e41c:	add    BYTE PTR [ebx-0x50],cl
  40e41f:	add    cl,BYTE PTR [ebx]
  40e421:	or     BYTE PTR [ecx+0x55],bh
  40e424:	dec    ebp
  40e426:	jb     0x40e487
  40e428:	inc    ecx
  40e429:	fsub   DWORD PTR [esi+0xb896088]
  40e42f:	cmp    DWORD PTR ds:0x416c52,0xffffff98
  40e436:	js     0x40e440
  40e438:	(bad)  
  40e439:	jge    0x40e4b1
  40e43b:	pop    edi
  40e43c:	inc    ecx
  40e43d:	mov    dh,bl
  40e43f:	aaa    
  40e440:	push   0xffffff88
  40e442:	pop    ebp
  40e443:	add    edi,edi
  40e445:	sub    eax,0x415e7f
  40e44a:	cwde   
  40e44b:	lock adc eax,DWORD PTR [ebx-0x7cffb3b9]
  40e452:	int3   
  40e453:	add    BYTE PTR [ebx],cl
  40e455:	shr    BYTE PTR [esp+ebp*1],0xff
  40e459:	xor    eax,0x4164e2
  40e45e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e45f:	dec    DWORD PTR [edx-0x7cfaf6a1]
  40e465:	les    ebx,FWORD PTR [eax+esi*8+0x13]
  40e469:	jae    0x40e472
  40e46b:	dec    esp
  40e46c:	add    bh,al
  40e46e:	dec    ebp
  40e46f:	jge    0x40e4cf
  40e471:	inc    ecx
  40e472:	dec    eax
  40e473:	or     eax,DWORD PTR [eax]
  40e475:	add    BYTE PTR [eax],bl
  40e477:	fdivp  st(7),st
  40e479:	inc    edx
  40e47a:	mov    ds:0xcac959c4,eax
  40e47f:	std    
  40e480:	inc    DWORD PTR [edx+0x415e7cc5]
  40e486:	sbb    BYTE PTR [ebx],cl
  40e488:	je     0x40e4a9
  40e48a:	addr16 push ds
  40e48c:	mov    ah,BYTE PTR [eax+0x31]
  40e48f:	mov    eax,ds:0x6b1cff02
  40e494:	pop    ecx
  40e495:	inc    ecx
  40e496:	xor    DWORD PTR [ebx-0x40],esp
  40e499:	add    esp,esi
  40e49b:	aad    0x73
  40e49d:	pop    edi
  40e49e:	jo     0x40e480
  40e4a0:	mov    edi,0x41c0ab04
  40e4a5:	add    BYTE PTR [ecx],dh
  40e4a7:	loopne 0x40e4ab
  40e4a9:	add    dl,dh
  40e4ab:	mov    ch,0x8b
  40e4ad:	jmp    0x40e4af
  40e4af:	mov    dl,0x1c
  40e4b1:	hlt    
  40e4b2:	push   edx
  40e4b3:	stos   BYTE PTR es:[edi],al
  40e4b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b5:	or     cl,BYTE PTR [ebx]
  40e4b7:	jno    0x40e525
  40e4b9:	or     al,0x83
  40e4bb:	and    al,0xdc
  40e4bd:	add    dh,BYTE PTR [esp+esi*1+0x60]
  40e4c1:	cmp    al,0x0
  40e4c3:	sbb    al,0xe7
  40e4c5:	sub    eax,eax
  40e4c7:	jmp    0x3b60:0x3107c4b8
  40e4ce:	jle    0x40e4d5
  40e4d0:	lock cmp DWORD PTR [ebx+ebp*4],0x40
  40e4d5:	inc    ebx
  40e4d6:	add    BYTE PTR [ecx],dh
  40e4d8:	sub    eax,0x2b712b01
  40e4dd:	retf   
  40e4de:	shr    DWORD PTR [ecx],0xe0
  40e4e1:	xor    BYTE PTR [edi],0xd7
  40e4e4:	xor    al,0x3a
  40e4e6:	mov    esp,esp
  40e4e8:	repz dec esp
  40e4ea:	adc    DWORD PTR [ebx-0x1d],0xb
  40e4ee:	rol    ah,cl
  40e4f0:	fld    QWORD PTR [ebx+0x6de1257c]
  40e4f6:	add    al,0x5a
  40e4f8:	mov    al,ds:0x1d2623eb
  40e4fd:	or     BYTE PTR [ebx-0x21b8c],cl
  40e503:	xor    ah,al
  40e505:	add    al,cl
  40e507:	adc    DWORD PTR [ecx],ecx
  40e509:	jmp    0x40e55e
  40e50b:	sbb    ecx,edx
  40e50d:	jo     0x40e507
  40e50f:	call   FWORD PTR [eax+0x62]
  40e512:	dec    esi
  40e513:	add    BYTE PTR [ecx],ch
  40e515:	dec    ebx
  40e516:	mov    ecx,0x9afd65f8
  40e51b:	jmp    0x40e4fd
  40e51d:	xchg   esp,eax
  40e51e:	cmp    eax,0x205286f8
  40e523:	lds    ebp,FWORD PTR [esi]
  40e525:	or     DWORD PTR [edx],eax
  40e527:	(bad)  
  40e529:	jae    0x40e520
  40e52b:	clc    
  40e52c:	cmp    eax,0x4b039301
  40e531:	or     DWORD PTR [esi],edx
  40e533:	push   cs
  40e534:	ds dec esi
  40e536:	test   al,0x3
  40e538:	mov    dl,0xc4
  40e53a:	fmul   DWORD PTR [ecx+esi*2]
  40e53d:	je     0x40e4c3
  40e53f:	mov    dh,ch
  40e541:	in     al,dx
  40e542:	add    BYTE PTR [edi],0xa4
  40e545:	inc    ebx
  40e546:	stc    
  40e547:	push   edx
  40e548:	cdq    
  40e549:	mov    ecx,0x6287f770
  40e54e:	jmp    0x3939dadb
  40e553:	idiv   ebp
  40e555:	in     al,dx
  40e556:	int    0x11
  40e558:	mov    dh,0x4d
  40e55a:	sub    BYTE PTR [edx+esi*4],al
  40e55d:	(bad)  
  40e55e:	in     al,dx
  40e55f:	or     dh,BYTE PTR [ecx+0x73]
  40e562:	cli    
  40e563:	mov    ch,ch
  40e565:	clc    
  40e566:	imul   edi,DWORD PTR [ebp+esi*1+0x9],0x48ba1b1d
  40e56e:	icebp  
  40e56f:	inc    ebx
  40e570:	loope  0x40e552
  40e572:	sbb    DWORD PTR [edi+esi*1+0xdc61ed],ecx
  40e579:	mov    ebp,0x96f77946
  40e57e:	add    DWORD PTR [edx],ebx
  40e580:	test   DWORD PTR [esi-0x4b7efffb],0x9b6efe84
  40e58a:	or     DWORD PTR [ebp-0xc2fd54],ecx
  40e590:	hlt    
  40e591:	jnp    0x40e5df
  40e593:	inc    ecx
  40e594:	jmp    0xc348ae4c
  40e599:	xor    eax,0xde4574ec
  40e59e:	adc    eax,0x9759e7b
  40e5a3:	sub    DWORD PTR ds:0x92c28025,0xfffffffd
  40e5aa:	retf   0xe907
  40e5ad:	popa   
  40e5ae:	sub    bl,0x1e
  40e5b1:	inc    eax
  40e5b2:	std    
  40e5b3:	(bad)  
  40e5b4:	pushf  
  40e5b5:	sub    ch,ah
  40e5b7:	adc    al,0x6b
  40e5b9:	adc    eax,0x716a004a
  40e5be:	add    al,0x50
  40e5c0:	(bad)  
  40e5c1:	and    ebp,edi
  40e5c3:	(bad)  
  40e5c4:	jl     0x40e5f0
  40e5c6:	in     al,dx
  40e5c7:	adc    al,0x6f
  40e5c9:	adc    cl,BYTE PTR [edx+0x0]
  40e5cc:	push   0xffffffc6
  40e5ce:	add    al,0x8b
  40e5d0:	xor    al,0x25
  40e5d2:	add    BYTE PTR [ecx],0x31
  40e5d5:	fs retf 0xe90b
  40e5d9:	add    DWORD PTR [eax-0x59ff9515],eax
  40e5df:	in     al,0xfe
  40e5e1:	xor    al,0x29
  40e5e3:	loope  0x40e5ae
  40e5e5:	gs pop edi
  40e5e7:	jmp    0x40e5f3
  40e5e9:	test   eax,0xabc904c1
  40e5ee:	and    cl,BYTE PTR [ecx]
  40e5f0:	call   DWORD PTR [ecx+ebp*1]
  40e5f3:	loope  0x40e5b1
  40e5f5:	inc    edi
  40e5f6:	aas    
  40e5f7:	jmp    0x40e603
  40e5f9:	test   eax,0xc9059e
  40e5fe:	ficom  DWORD PTR [edi]
  40e600:	add    bh,bh
  40e602:	and    eax,0xf875fefc
  40e607:	ffreep st(3)
  40e609:	std    
  40e60a:	lahf   
  40e60b:	repz or eax,eax
  40e60e:	in     eax,0xeb
  40e610:	mov    edx,0x6e6807f8
  40e616:	call   0x7da8e65f
  40e61b:	push   ebx
  40e61c:	inc    ecx
  40e61d:	add    BYTE PTR [eax+0x1fff9238],al
  40e623:	(bad)  
  40e624:	mov    edi,0x6e5fcf75
  40e629:	pusha  
  40e62a:	cdq    
  40e62b:	pop    es
  40e62c:	push   0x44ef8f
  40e631:	call   0x3e7ff3
  40e636:	rol    edi,cl
  40e638:	or     eax,0x55584
  40e63d:	add    BYTE PTR ds:0x50fc49,bl
  40e643:	lahf   
  40e644:	pop    ebx
  40e645:	or     al,0xff
  40e647:	jne    0x40e6ae
  40e649:	pusha  
  40e64a:	inc    ecx
  40e64b:	cwde   
  40e64c:	xchg   dl,al
  40e64e:	or     BYTE PTR [ebx-0x527af239],al
  40e654:	pop    es
  40e655:	add    BYTE PTR [eax],al
  40e657:	repnz add al,0x8d
  40e65a:	inc    ebp
  40e65b:	adc    BYTE PTR [edx+ebp*2-0x1],0x0
  40e660:	out    dx,al
  40e661:	pop    edi
  40e662:	inc    ecx
  40e663:	dec    eax
  40e664:	hlt    
  40e665:	jae    0x40e663
  40e667:	lahf   
  40e668:	sti    
  40e669:	jne    0x40e6cb
  40e66b:	sbb    DWORD PTR ds:0x44c483,eax
  40e671:	ror    BYTE PTR [edi],0xd5
  40e674:	test   bh,bh
  40e676:	push   DWORD PTR [ecx]
  40e678:	loop   0x40e66d
  40e67a:	je     0x40e6a5
  40e67c:	jl     0x40e68c
  40e67e:	jp     0x40e611
  40e680:	and    DWORD PTR [ebx+eax*4],eax
  40e683:	cmc    
  40e684:	in     al,0x7f
  40e686:	test   DWORD PTR [ebp-0x64170214],0xb40002e1
  40e690:	popf   
  40e691:	out    dx,al
  40e692:	dec    edi
  40e693:	mov    esp,eax
  40e695:	repz je 0x40e691
  40e698:	dec    eax
  40e699:	adc    bh,bh
  40e69b:	out    dx,al
  40e69c:	cmp    ecx,DWORD PTR [ecx]
  40e69e:	shl    BYTE PTR [esi],0x5c
  40e6a1:	inc    ebp
  40e6a2:	add    DWORD PTR [ecx],esi
  40e6a4:	loopne 0x40e725
  40e6a6:	jl     0x40e6a8
  40e6a8:	fucom  st(0)
  40e6aa:	add    eax,DWORD PTR [esp+esi*2-0x4efffd1f]
  40e6b1:	call   0xccf5f5b8
  40e6b6:	add    DWORD PTR [eax],eax
  40e6b8:	xor    DWORD PTR [eax-0x615aab79],esi
  40e6be:	push   eax
  40e6bf:	call   0xff364219
  40e6c4:	sti    
  40e6c5:	js     0x40e706
  40e6c7:	call   0xff305462
  40e6cc:	add    al,0x8
  40e6ce:	push   edx
  40e6cf:	call   0xff3541b6
  40e6d4:	jbe    0x40e6fb
  40e6d6:	hlt    
  40e6d7:	push   DWORD PTR [esi-0x20]
  40e6da:	add    al,bh
  40e6dc:	hlt    
  40e6dd:	stos   DWORD PTR es:[edi],eax
  40e6de:	add    al,BYTE PTR [eax]
  40e6e0:	xor    eax,esp
  40e6e2:	jg     0x40e720
  40e6e4:	mov    bh,0x40
  40e6e6:	inc    ebx
  40e6e7:	add    BYTE PTR [ecx],dh
  40e6e9:	sub    eax,0x40cd6852
  40e6ee:	inc    ebx
  40e6ef:	add    BYTE PTR [ecx+0x9],bl
  40e6f2:	arpl   WORD PTR [edx+0x31],si
  40e6f5:	or     DWORD PTR [ecx],edi
  40e6f7:	ins    BYTE PTR es:[edi],dx
  40e6f8:	mov    ch,0x67
  40e6fa:	sub    BYTE PTR [esi+ebp*1],al
  40e6fd:	je     0x40e680
  40e6ff:	jmp    0x40e691
  40e701:	jbe    0x40e6ec
  40e703:	add    ebp,DWORD PTR [edx]
  40e705:	leave  
  40e706:	hlt    
  40e707:	sbb    ecx,DWORD PTR [ecx+0x430786]
  40e70d:	xor    ecx,esp
  40e70f:	dec    esi
  40e710:	jb     0x40e743
  40e712:	or     DWORD PTR [ecx-0x57984d95],edi
  40e718:	add    esi,esi
  40e71a:	jae    0x40e75d
  40e71c:	jmp    0x40e792
  40e71e:	jbe    0x40e709
  40e720:	add    edi,DWORD PTR [edx]
  40e722:	leave  
  40e723:	mov    esp,0xc77e494b
  40e728:	inc    edx
  40e729:	xor    ecx,esp
  40e72b:	push   0x72
  40e72d:	xor    DWORD PTR [ecx],ecx
  40e72f:	cdq    
  40e730:	imul   edi,DWORD PTR [edx-0x41fc5799],0x73
  40e737:	adc    ebx,ebp
  40e739:	or     BYTE PTR [esi-0x17],dh
  40e73c:	add    ebx,DWORD PTR [edx-0x50c995e6]
  40e742:	push   0x743003a8
  40e747:	jecxz  0x40e7b4
  40e749:	mov    ebp,0x9903a867
  40e74e:	dec    ecx
  40e74f:	js     0x40e754
  40e751:	xor    DWORD PTR [ecx+0x51],ebx
  40e754:	cwde   
  40e755:	adc    DWORD PTR [eax-0x17],ecx
  40e758:	repnz std 
  40e75a:	loopne 0x40e71c
  40e75c:	or     esp,edx
  40e75e:	or     cl,ch
  40e760:	fidivr WORD PTR [ebx]
  40e762:	xchg   BYTE PTR [ebx],al
  40e764:	mov    bh,dh
  40e766:	inc    edi
  40e767:	jmp    0x47c371
  40e76c:	add    dh,BYTE PTR [ebp-0x2]
  40e76f:	mov    edi,0x7bd30034
  40e774:	inc    esp
  40e775:	popf   
  40e776:	in     eax,0x5e
  40e778:	add    DWORD PTR [esi-0x23180f48],ebx
  40e77e:	and    al,ch
  40e780:	dec    BYTE PTR [esi-0x6eb02258]
  40e786:	push   edx
  40e787:	out    0xfe,al
  40e789:	jle    0x40e71f
  40e78b:	dec    ebp
  40e78c:	lock fs js 0x40e76d
  40e790:	dec    edi
  40e791:	add    ebp,DWORD PTR [edi]
  40e793:	call   0x41e490c
  40e798:	(bad)  
  40e799:	pop    esi
  40e79a:	add    ch,al
  40e79c:	je     0x40e7fb
  40e79e:	test   ecx,esi
  40e7a0:	adc    al,0x4c
  40e7a2:	loop   0x40e78b
  40e7a4:	mov    BYTE PTR [esi+edi*8+0x2d517c8b],ch
  40e7ab:	pop    ebp
  40e7ac:	xor    al,0x6a
  40e7ae:	inc    eax
  40e7af:	cmc    
  40e7b0:	push   DWORD PTR [eax+edx*1-0x2c16ff8f]
  40e7b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7b8:	(bad)  
  40e7b9:	xchg   esp,eax
  40e7ba:	mov    edx,0xa26bcdf0
  40e7bf:	out    0xfe,eax
  40e7c1:	xchg   esp,eax
  40e7c2:	mov    ah,bh
  40e7c4:	je     0x40e7b7
  40e7c6:	jp     0x40e7f5
  40e7c8:	cmp    esi,0xffffffa3
  40e7cb:	out    0x74,eax
  40e7cd:	stc    
  40e7ce:	sbb    DWORD PTR [ebp+0x8],0x1
  40e7d2:	aaa    
  40e7d3:	mov    esi,?
  40e7d5:	out    0x0,al
  40e7d7:	sbb    DWORD PTR [ebp-0x14],0xffffffde
  40e7db:	stc    
  40e7dc:	adc    al,ch
  40e7de:	out    0xb7,al
  40e7e0:	out    0xfe,eax
  40e7e2:	into   
  40e7e3:	jmp    0x9c41cfc0
  40e7e8:	xchg   ecx,eax
  40e7e9:	std    
  40e7ea:	call   DWORD PTR [edi+0x74e8ec61]
  40e7f0:	xchg   ecx,eax
  40e7f1:	std    
  40e7f2:	call   DWORD PTR [edi-0x5317179f]
  40e7f8:	xchg   ecx,eax
  40e7f9:	std    
  40e7fa:	jmp    DWORD PTR [ecx-0x38000374]
  40e800:	fidiv  DWORD PTR [ebx-0x4]
  40e803:	mov    bh,0x0
  40e805:	jb     0x40e867
  40e807:	dec    ecx
  40e808:	or     eax,0xc40cc483
  40e80d:	jg     0x40e80b
  40e80f:	xchg   ebx,ebx
  40e811:	mov    edx,0x8b550be8
  40e817:	fs aas 
  40e819:	push   0x0
  40e81b:	push   edi
  40e81c:	popa   
  40e81d:	or     al,ch
  40e81f:	mov    ds:0x53fffe64,eax
  40e824:	aam    0x51
  40e826:	call   0x41448d
  40e82b:	jecxz  0x40e7f8
  40e82d:	jb     0x40e84a
  40e82f:	fcmovne st,st(6)
  40e831:	inc    esi
  40e832:	jmp    0x40e81e
  40e834:	mov    esi,DWORD PTR [esi]
  40e836:	or     eax,0x3880109c
  40e83b:	add    dl,al
  40e83d:	pusha  
  40e83e:	add    eax,0xeb0b98c6
  40e843:	add    dh,BYTE PTR [ebx]
  40e845:	adc    DWORD PTR [eax+0x3b],ecx
  40e848:	dec    ebx
  40e849:	pop    edi
  40e84a:	jmp    0x9cc2:0xc9574b8b
  40e851:	or     edx,DWORD PTR [ebp-0x75]
  40e854:	test   BYTE PTR [ebp-0x25c04b3e],cl
  40e85a:	jae    0x40e868
  40e85c:	pusha  
  40e85d:	cmp    BYTE PTR [edx-0x340ce01],cl
  40e863:	mov    edi,0xc94fecdc
  40e868:	jae    0x40e82b
  40e86a:	add    bh,bh
  40e86c:	fdivr  st(5),st
  40e86e:	fimul  DWORD PTR [ebp-0x63]
  40e871:	sahf   
  40e872:	lock or dh,BYTE PTR [ecx+0x1d]
  40e876:	pop    es
  40e877:	pop    edi
  40e878:	push   0x360013b3
  40e87d:	cld    
  40e87e:	pop    ss
  40e87f:	jmp    DWORD PTR [eax+eiz*8-0x67d5ab26]
  40e886:	lock mov WORD PTR [eax+eiz*2+0x54],?
  40e88b:	call   FWORD PTR [esp+esi*8+0x5fbbf1da]
  40e892:	icebp  
  40e893:	or     dh,cl
  40e895:	mov    DWORD PTR [esi+0x2f03207],0xf1447cff
  40e89f:	je     0x40e8a1
  40e8a1:	jmp    0xe6d0a3ee
  40e8a6:	push   edi
  40e8a7:	std    
  40e8a8:	mov    edi,0x1e0742e
  40e8ad:	xor    eax,esi
  40e8af:	jns    0x40e8f5
  40e8b1:	(bad)  [ebx-0x14]
  40e8b4:	jg     0x40e8bc
  40e8b6:	lock inc DWORD PTR [ebx+0x2f2e7]
  40e8bd:	pop    esi
  40e8be:	clc    
  40e8bf:	push   esi
  40e8c0:	jmp    FWORD PTR [esi-0x7ebb8501]
  40e8c6:	pop    ss
  40e8c7:	ja     0x40e899
  40e8c9:	or     DWORD PTR [ebx],ecx
  40e8cb:	fs inc ecx
  40e8cd:	xor    eax,edi
  40e8cf:	fs jo  0x40e903
  40e8d2:	lock push edx
  40e8d4:	(bad)  
  40e8d5:	cld    
  40e8d6:	call   FWORD PTR [ebx-0x1]
  40e8d9:	adc    DWORD PTR [ecx],ecx
  40e8db:	sub    BYTE PTR [ecx+ecx*4],al
  40e8de:	cmp    al,0x59
  40e8e0:	add    al,0x31
  40e8e2:	cmp    esi,edx
  40e8e4:	jbe    0x40e867
  40e8e6:	jno    0x40e8d2
  40e8e8:	(bad)  
  40e8e9:	lock or cl,dl
  40e8ec:	dec    eax
  40e8ed:	loope  0x40e8f7
  40e8ef:	jmp    0xa952d141
  40e8f4:	ja     0x40e92b
  40e8f6:	adc    bl,BYTE PTR [ebx-0x4fedd689]
  40e8fc:	add    BYTE PTR [ebx+edx*4+0x123103ea],ch
  40e903:	mov    al,ds:0xce380076
  40e908:	and    edi,DWORD PTR [eax+0x3e90931]
  40e90e:	or     cl,BYTE PTR [esi]
  40e910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e911:	inc    esi
  40e912:	lds    ecx,FWORD PTR [eax]
  40e914:	jmp    0xba261a1c
  40e919:	ret    
  40e91a:	mov    ecx,0xf7f065e5
  40e91f:	fimul  DWORD PTR [esi-0x16a3c9d5]
  40e925:	enter  0xf16d,0xe8
  40e929:	add    esi,DWORD PTR [ecx]
  40e92b:	or     DWORD PTR [ecx+0x30],ebp
  40e92e:	xor    DWORD PTR [esi],edx
  40e930:	gs dec ebx
  40e932:	xor    ecx,DWORD PTR [ecx]
  40e934:	jmp    0x2f06c291
  40e939:	lock mov edi,0xb3bfab8f
  40e93f:	arpl   WORD PTR [ecx],dx
  40e941:	add    esp,DWORD PTR [eax+ebp*1]
  40e944:	or     ebp,0xf0e947f7
  40e94a:	and    eax,0x7e810d5
  40e94f:	or     ecx,ebp
  40e951:	cld    
  40e952:	into   
  40e953:	adc    eax,0xb346c00
  40e958:	add    cl,ch
  40e95a:	imul   ecx,DWORD PTR [eax+ebp*8-0x18],0xd0000932
  40e962:	outs   dx,DWORD PTR ds:[esi]
  40e963:	pop    es
  40e964:	add    cl,ch
  40e966:	mov    bl,0x64
  40e968:	call   0x1619ea55
  40e96d:	mov    DWORD PTR [ecx+ecx*2-0x32],eax
  40e971:	inc    esp
  40e972:	shl    DWORD PTR [ebx],1
  40e974:	or     DWORD PTR [eax],eax
  40e976:	jmp    0xe941b3e0
  40e97b:	xor    cl,BYTE PTR [edx+0x5c33917c]
  40e981:	pshufw mm4,QWORD PTR [eax+0x52cc6e9],0x8
  40e989:	add    cl,ch
  40e98b:	xor    dh,dl
  40e98d:	lods   eax,DWORD PTR ds:[esi]
  40e98e:	call   0xfcc3f2c5
  40e993:	jmp    0xdc65:0x85e67507
  40e99a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e99b:	push   0x32e903f1
  40e9a0:	or     ecx,ebp
  40e9a2:	xor    BYTE PTR [ecx+ecx*1],0x0
  40e9a6:	push   0x60
  40e9a8:	icebp  
  40e9a9:	add    edx,esp
  40e9ab:	fist   WORD PTR [ecx+0x4dee217c]
  40e9b1:	call   0x4a1c9a
  40e9b6:	inc    eax
  40e9b7:	mov    ecx,0xb3e90009
  40e9bc:	gs call 0x6ccea1ae
  40e9c2:	call   0x94c9f2f9
  40e9c7:	jle    0x40e950
  40e9c9:	jl     0x40ea20
  40e9cb:	xor    eax,0x95d
  40e9d0:	inc    edi
  40e9d1:	push   edx
  40e9d2:	call   0x4981d9
  40e9d7:	jmp    0x40e970
  40e9d9:	retf   
  40e9da:	inc    ebx
  40e9db:	call   0x40f276
  40e9e0:	(bad)  
  40e9e1:	push   ecx
  40e9e2:	rol    BYTE PTR [eax],0x58
  40e9e5:	or     BYTE PTR [eax],al
  40e9e7:	(bad)  
  40e9e8:	adc    eax,0x48fffea5
  40e9ed:	or     bh,al
  40e9ef:	inc    ebp
  40e9f0:	test   BYTE PTR [eax],cl
  40e9f2:	add    BYTE PTR [eax],al
  40e9f4:	pop    eax
  40e9f5:	retf   
  40e9f6:	inc    ebx
  40e9f7:	mov    esp,0x858
  40e9fc:	xchg   edi,eax
  40e9fd:	push   ecx
  40e9fe:	mov    eax,0x84800
  40ea03:	inc    DWORD PTR [ebp-0xf]
  40ea06:	out    0x13,al
  40ea08:	mov    esi,0x5589fdf2
  40ea0d:	int    0xfd
  40ea0f:	jne    0x40e9dd
  40ea11:	mov    edi,0xf38ffe06
  40ea16:	xchg   DWORD PTR [ebp-0x30],eax
  40ea19:	bnd jae 0x40e9f0
  40ea1c:	mov    al,0xd8
  40ea1e:	sti    
  40ea1f:	dec    DWORD PTR [edi+0x5bc44465]
  40ea25:	sbb    DWORD PTR [esi+0x79960],eax
  40ea2b:	jne    0x40e9c7
  40ea2d:	aas    
  40ea2e:	jl     0x40ea91
  40ea30:	mov    DWORD PTR [edi],eax
  40ea32:	call   0x83eeabe
  40ea37:	add    BYTE PTR [eax-0x10],dl
  40ea3a:	jae    0x40ea9d
  40ea3c:	inc    ecx
  40ea3d:	enter  0x73f2,0xc0
  40ea41:	and    BYTE PTR [ebx],al
  40ea43:	jo     0x40ea45
  40ea45:	cwde   
  40ea46:	fidivr WORD PTR [esi+0x5ada3174]
  40ea4c:	adc    DWORD PTR [eax],0xffffffb1
  40ea4f:	add    ch,al
  40ea51:	or     bh,BYTE PTR [edx+eax*1+0x0]
  40ea55:	loope  0x40ead0
  40ea57:	and    DWORD PTR [eax-0x10],0x7174edf1
  40ea5e:	or     DWORD PTR [edx],edx
  40ea60:	jo     0x40ea93
  40ea62:	repnz idiv DWORD PTR [edi-0x74a3fd1b]
  40ea69:	shl    BYTE PTR [eax],1
  40ea6b:	add    al,0xe8
  40ea6d:	out    dx,al
  40ea6e:	and    eax,DWORD PTR [eax+eax*1]
  40ea71:	add    DWORD PTR [edx],edi
  40ea73:	jns    0x40ead5
  40ea75:	lock icebp 
  40ea77:	jmp    0x40eaed
  40ea79:	jno    0x40ea44
  40ea7b:	hlt    
  40ea7c:	outs   dx,BYTE PTR ds:[esi]
  40ea7d:	xor    edx,esi
  40ea7f:	xlat   BYTE PTR ds:[ebx]
  40ea80:	and    al,0xb2
  40ea82:	in     al,dx
  40ea83:	test   BYTE PTR [edi+0x70],bl
  40ea86:	lock add DWORD PTR [ebp+0x4b],esi
  40ea8a:	or     BYTE PTR [eax-0x250f8fa0],bl
  40ea90:	sub    eax,DWORD PTR [edi-0x66affd10]
  40ea96:	cmp    al,0x63
  40ea98:	inc    ecx
  40ea99:	add    BYTE PTR [ecx],dh
  40ea9b:	pop    ebx
  40ea9c:	ja     0x40ea5e
  40ea9e:	or     DWORD PTR [ebp+0x5c],edi
  40eaa1:	add    BYTE PTR [ecx],dh
  40eaa3:	aaa    
  40eaa4:	add    ch,BYTE PTR [ebx]
  40eaa6:	icebp  
  40eaa7:	xlat   BYTE PTR ds:[ebx]
  40eaa8:	ret    0x5374
  40eaab:	cmp    esi,DWORD PTR [edi-0x38]
  40eaae:	leave  
  40eaaf:	ret    0x5c
  40eab2:	xor    DWORD PTR [eax+0x38f974eb],eax
  40eab8:	stc    
  40eab9:	stc    
  40eaba:	(bad)  
  40eabb:	sbb    edi,DWORD PTR [ebx+0x44]
  40eabe:	jge    0x40eaf3
  40eac0:	ja     0x40ea86
  40eac2:	leave  
  40eac3:	or     DWORD PTR [ebx],esp
  40eac5:	pop    edi
  40eac6:	xor    DWORD PTR [ecx],ecx
  40eac8:	mov    ecx,0xcd1dec
  40eacd:	cmc    
  40eace:	cdq    
  40eacf:	loop   0x40eade
  40ead1:	jnp    0x40eac0
  40ead3:	mov    al,ds:0x9716f69
  40ead8:	jne    0x40eb11
  40eada:	mov    dl,0x64
  40eadc:	xor    DWORD PTR [eax*1+0x31038133],eax
  40eae3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eae5:	in     al,dx
  40eae6:	in     eax,0x10
  40eae8:	shl    DWORD PTR [ebx-0x132a1e19],1
  40eaee:	in     eax,0xc8
  40eaf0:	int    0x76
  40eaf2:	sub    ecx,esi
  40eaf4:	in     eax,dx
  40eaf5:	or     DWORD PTR [edi-0x1e],0xffffffbd
  40eaf9:	jbe    0x40ea80
  40eafb:	loop   0x40eb38
  40eafd:	cld    
  40eafe:	add    BYTE PTR [esi-0x1b],dl
  40eb01:	sub    eax,0x1be237ed
  40eb06:	lods   al,BYTE PTR ds:[esi]
  40eb07:	das    
  40eb08:	pop    esp
  40eb09:	icebp  
  40eb0a:	(bad)  [ecx]
  40eb0c:	bound  edx,QWORD PTR [esi-0x56a3e014]
  40eb12:	(bad)  
  40eb14:	xchg   BYTE PTR [ebp-0x4ea3f014],al
  40eb1a:	fcomi  st,st(4)
  40eb1c:	xchg   BYTE PTR [ebp-0x14],dh
  40eb1f:	call   FWORD PTR [ebx-0x5b]
  40eb22:	fucomi st,st(4)
  40eb24:	xchg   BYTE PTR [ebp-0x14],ah
  40eb27:	out    dx,eax
  40eb28:	pop    ebx
  40eb29:	popf   
  40eb2a:	(bad)  [esi+eax*4+0x5bdfec55]
  40eb31:	xchg   ecx,eax
  40eb32:	fistp  DWORD PTR [esi+eax*4+0x13dbec45]
  40eb39:	push   0x6e
  40eb3b:	(bad)  [edx]
  40eb3d:	add    BYTE PTR [ebp+esi*1+0x304144ca],bh
  40eb44:	or     DWORD PTR [eax],eax
  40eb46:	jmp    0xea294ffc
  40eb4b:	push   ds
  40eb4c:	sbb    DWORD PTR [eax+0x33],ebp
  40eb4f:	pop    ebp
  40eb50:	dec    eax
  40eb51:	add    BYTE PTR [esi],cl
  40eb53:	pop    ds
  40eb54:	aad    0xe7
  40eb56:	adc    edi,ebp
  40eb58:	or     BYTE PTR [eax],al
  40eb5a:	bnd jb 0x40ebb9
  40eb5d:	pop    es
  40eb5e:	cs div eax
  40eb61:	add    cl,ch
  40eb63:	add    BYTE PTR [edx],dh
  40eb65:	or     DWORD PTR [eax+0x61],ebp
  40eb68:	aam    0x47
  40eb6a:	add    dh,bl
  40eb6c:	loopne 0x40eb42
  40eb6e:	out    0xb9,eax
  40eb70:	clc    
  40eb71:	or     BYTE PTR [eax],al
  40eb73:	loop   0x40ebe7
  40eb75:	pop    esp
  40eb76:	pop    es
  40eb77:	scas   al,BYTE PTR es:[edi]
  40eb78:	lock lock add ecx,ebp
  40eb7c:	xor    cl,BYTE PTR [ecx]
  40eb7e:	(bad)  
  40eb7f:	cmp    al,0x79
  40eb81:	jmp    0xe28b56ee
  40eb86:	sti    
  40eb87:	(bad)  
  40eb89:	mov    eax,ds:0xe01a9efe
  40eb8e:	icebp  
  40eb8f:	inc    edi
  40eb90:	dec    ebp
  40eb91:	or     BYTE PTR [edi],cl
  40eb93:	fs stos BYTE PTR es:[edi],al
  40eb95:	(bad)  
  40eb97:	xchg   BYTE PTR [edx],bl
  40eb99:	push   esi
  40eb9a:	rcl    BYTE PTR [ecx+0x76fe8b4a],1
  40eba0:	or     dl,BYTE PTR [esi-0x14]
  40eba3:	xor    DWORD PTR [edx-0x75],0x456866fe
  40ebaa:	lock mov ecx,0x5688570a
  40ebb0:	retf   0xebe8
  40ebb3:	push   ecx
  40ebb4:	retf   0x5edf
  40ebb7:	add    BYTE PTR [ecx],al
  40ebb9:	(bad)  
  40ebba:	push   cs
  40ebbb:	add    BYTE PTR [ebp+0xc81eb5f],bl
  40ebc1:	cdq    
  40ebc2:	cld    
  40ebc3:	inc    DWORD PTR [edi]
  40ebc5:	int3   
  40ebc6:	cmp    DWORD PTR [eax-0x20baa00],0x0
  40ebcd:	cwde   
  40ebce:	or     al,0x0
  40ebd0:	mov    ecx,ebp
  40ebd2:	adc    BYTE PTR [ebx],cl
  40ebd4:	sar    BYTE PTR [ecx+ecx*1+0x59983880],0x5
  40ebdc:	jmp    0x40f2ad
  40ebe1:	xchg   DWORD PTR [ecx+0x14],ebx
  40ebe4:	call   0x3f4d89
  40ebe9:	arpl   sp,cx
  40ebeb:	jae    0x40ebfc
  40ebed:	add    ah,dl
  40ebef:	dec    ebp
  40ebf0:	inc    ecx
  40ebf1:	dec    eax
  40ebf2:	repz jae 0x40ec09
  40ebf5:	jo     0x40ec71
  40ebf7:	cmp    edi,0x77
  40ebfa:	mov    edi,0x236c680b
  40ebff:	inc    ecx
  40ec00:	add    BYTE PTR [edi-0x3017eba7],al
  40ec06:	mov    ch,bh
  40ec08:	jmp    DWORD PTR [ecx-0x38014977]
  40ec0e:	repnz or WORD PTR ds:[eax+eax*1],cx
  40ec14:	lea    ecx,[ebp-0x4800033a]
  40ec1a:	cmp    ebp,eax
  40ec1c:	call   FWORD PTR [ecx-0x7272020d]
  40ec22:	(bad)  
  40ec23:	cld    
  40ec24:	inc    DWORD PTR [edi-0x6f4a00c4]
  40ec2a:	icebp  
  40ec2b:	std    
  40ec2c:	inc    DWORD PTR [eax]
  40ec2e:	adc    BYTE PTR ds:0xf231006d,0x7b
  40ec35:	test   BYTE PTR [ebp+0x71feea4f],dl
  40ec3b:	xlat   BYTE PTR ds:[ebx]
  40ec3c:	jle    0x40ec23
  40ec3e:	xor    dl,dh
  40ec40:	add    cl,BYTE PTR [ebp-0x116cc5c]
  40ec46:	mov    dh,0x16
  40ec48:	add    eax,0x2f23110
  40ec4d:	shrd   DWORD PTR [edx+0x3],esi,cl
  40ec51:	add    BYTE PTR [ecx],dh
  40ec53:	gs inc ebp
  40ec55:	sub    al,0x1
  40ec57:	mov    cl,ah
  40ec59:	dec    esi
  40ec5a:	lock icebp 
  40ec5c:	fimul  DWORD PTR [ecx]
  40ec5e:	adc    al,0xf2
  40ec60:	add    cl,BYTE PTR [ebx]
  40ec62:	jno    0x40ecc0
  40ec64:	add    cl,ch
  40ec66:	cdq    
  40ec67:	lock add al,BYTE PTR [eax]
  40ec6a:	mov    esp,0x66fdc65c
  40ec6f:	mov    esi,0x220d4176
  40ec74:	pop    esp
  40ec75:	fsubr  st(6),st
  40ec77:	xor    BYTE PTR [eax+ebp*8],al
  40ec7a:	pop    esp
  40ec7b:	xor    eax,0xb23a0004
  40ec80:	outs   dx,BYTE PTR ds:[esi]
  40ec81:	add    eax,0x31a48
  40ec86:	xor    DWORD PTR [edi+0x3d19146e],ebp
  40ec8c:	js     0x40ec8c
  40ec8e:	es fadd st(2),st
  40ec91:	je     0x40ec93
  40ec93:	or     BYTE PTR cs:[ebp-0x180f8fb9],cl
  40ec9a:	je     0x40ecc1
  40ec9c:	js     0x40ec93
  40ec9e:	add    DWORD PTR [esi],0x60
  40eca1:	fisttp QWORD PTR [ecx]
  40eca3:	mov    esi,eax
  40eca5:	out    0x74,eax
  40eca7:	sbb    eax,0xee83e188
  40ecac:	or     DWORD PTR [esi+0x77],esp
  40ecaf:	mov    ebp,0xdfe95ecb
  40ecb4:	mov    WORD PTR [edx+0x41398317],?
  40ecba:	push   ds
  40ecbb:	mov    ah,0xde
  40ecbd:	inc    ebp
  40ecbe:	push   esp
  40ecbf:	popa   
  40ecc0:	fidiv  WORD PTR [ebx-0x1aab41ed]
  40ecc6:	call   0xf581fe08
  40eccb:	lods   al,BYTE PTR ds:[esi]
  40eccc:	fisub  WORD PTR ds:0x1d8850dc
  40ecd2:	jmp    0x4291a60
  40ecd7:	xor    DWORD PTR [edx+ebp*4+0x3c84b817],ecx
  40ecde:	jmp    0x69b7:0x2769de87
  40ece5:	test   al,0x3
  40ece7:	xor    dl,BYTE PTR [edi+eiz*4+0x5b]
  40eceb:	lods   al,BYTE PTR ds:[esi]
  40ecec:	imul   ebp,DWORD PTR [eax],0x94946604
  40ecf2:	jmp    0x5901cb56
  40ecf7:	add    ah,al
  40ecf9:	or     cl,ch
  40ecfb:	cld    
  40ecfc:	mov    ss,WORD PTR [ebp+0x14]
  40ecff:	pop    esp
  40ed00:	stos   BYTE PTR es:[edi],al
  40ed01:	push   ecx
  40ed02:	sub    BYTE PTR [esi+edi*1],al
  40ed05:	push   esp
  40ed06:	fstp   st(3)
  40ed08:	test   eax,0x2fe8ad85
  40ed0d:	xchg   esp,eax
  40ed0e:	pop    esp
  40ed0f:	jmp    0xdc79cb3b
  40ed14:	add    DWORD PTR [ebp+0x7166e895],eax
  40ed1a:	call   0x18e00b22
  40ed1f:	jmp    0xc7d1fea1
  40ed24:	aam    0xdd
  40ed26:	push   DWORD PTR [ebp-0x26]
  40ed29:	iret   
  40ed2a:	jg     0x40ed9a
  40ed2c:	f2xm1  
  40ed2e:	shr    ecx,cl
  40ed30:	xor    cl,BYTE PTR [ecx]
  40ed32:	push   0x485227
  40ed37:	push   esi
  40ed38:	xchg   DWORD PTR [ecx-0x1a26b103],ebx
  40ed3e:	sub    ah,dl
  40ed40:	xor    cl,BYTE PTR [ecx]
  40ed42:	or     ebp,DWORD PTR [ecx]
  40ed44:	dec    esi
  40ed45:	das    
  40ed46:	push   0x47fa52
  40ed4b:	cs pop ds
  40ed4d:	cmc    
  40ed4e:	out    0xaa,eax
  40ed50:	es (bad) 
  40ed53:	push   ds
  40ed54:	iret   
  40ed55:	cdq    
  40ed56:	std    
  40ed57:	push   ss
  40ed58:	mov    DWORD PTR [ebp-0x18],ecx
  40ed5b:	bound  eax,QWORD PTR [eax]
  40ed5d:	push   cs
  40ed5e:	(bad)  
  40ed60:	cdq    
  40ed61:	cdq    
  40ed62:	push   esp
  40ed63:	adc    dh,bh
  40ed65:	or     al,0xd
  40ed67:	push   eax
  40ed68:	test   BYTE PTR [ecx+edx*1],0xe8
  40ed6c:	pop    esp
  40ed6d:	pop    edx
  40ed6e:	fdivp  st(6),st
  40ed70:	shl    DWORD PTR [edx+0x56deff5d],1
  40ed76:	xchg   esp,eax
  40ed77:	mov    bl,0xd7
  40ed79:	dec    esi
  40ed7a:	fsubrp st(7),st
  40ed7c:	pop    ds
  40ed7d:	jmp    0x7207:0x556a0008
  40ed84:	aad    0xbb
  40ed86:	je     0x40ed3b
  40ed88:	mov    bh,0x4e
  40ed8a:	fiadd  WORD PTR [edx]
  40ed8c:	cdq    
  40ed8d:	mov    dl,0xf2
  40ed8f:	add    DWORD PTR [edi],ecx
  40ed91:	lods   al,BYTE PTR ds:[esi]
  40ed92:	and    ch,BYTE PTR [esi]
  40ed94:	sbb    ah,BYTE PTR [eax+0x7529eb07]
  40ed9a:	mov    dh,0x5f
  40ed9c:	sub    BYTE PTR ds:0x4400b4dc,dh
  40eda2:	jecxz  0x40eda1
  40eda4:	jmp    DWORD PTR [eax+0x8006ac8]
  40edaa:	cmp    DWORD PTR [eax-0x1f],ebp
  40edad:	cmp    BYTE PTR [esi+0x0],al
  40edb0:	inc    ebp
  40edb2:	cdq    
  40edb3:	cld    
  40edb4:	(bad)  
  40edb5:	jg     0x40ed74
  40edb7:	mov    al,0x6c
  40edb9:	enter  0x5008,0x68
  40edbd:	push   cs
  40edbe:	gs inc ecx
  40edc0:	add    BYTE PTR [eax],al
  40edc2:	outs   dx,DWORD PTR ds:[esi]
  40edc3:	call   0xa1e6:0xe3fffeb2
  40edca:	in     al,dx
  40edcb:	or     BYTE PTR [eax],al
  40edcd:	pop    edx
  40edce:	rcr    edi,0xbe
  40edd1:	jne    0x40ed73
  40edd3:	(bad)  
  40edd5:	jne    0x40ed6b
  40edd7:	ffreep st(7)
  40edd9:	je     0x40ee49
  40eddb:	inc    eax
  40eddc:	fwait
  40eddd:	dec    eax
  40edde:	(bad)  [eax]
  40ede0:	push   DWORD PTR [ebp+0x64]
  40ede3:	shr    BYTE PTR [edi-0x21c807d],0xb5
  40edea:	xor    al,0xe3
  40edec:	std    
  40eded:	dec    eax
  40edef:	shl    bh,0x83
  40edf2:	dec    edi
  40edf3:	jecxz  0x40ee43
  40edf5:	inc    DWORD PTR ds:0x4c75fef5
  40edfb:	cmp    bh,bh
  40edfd:	jne    0x40ee4f
  40edff:	shl    BYTE PTR [esi-0x6],0x6f
  40ee03:	jecxz  0x40edeb
  40ee05:	icebp  
  40ee06:	jmp    ebx
  40ee08:	std    
  40ee09:	(bad)  
  40ee0a:	vpaddb xmm7,xmm6,xmm7
  40ee0e:	fbstp  TBYTE PTR [edi]
  40ee10:	push   DWORD PTR [ebp-0x21974]
  40ee16:	rcl    BYTE PTR [eax+0x6b],0x0
  40ee1a:	xor    edx,esi
  40ee1c:	jg     0x40eddd
  40ee1e:	ds gs and dh,bh
  40ee22:	push   es
  40ee23:	and    ebp,0xffffffb4
  40ee26:	add    BYTE PTR [ebp+0x9fee65b],bh
  40ee2c:	add    bl,BYTE PTR [ebx+0x0]
  40ee2f:	xor    DWORD PTR [ebx-0x50],ebp
  40ee32:	mov    bh,0xe7
  40ee34:	(bad)  
  40ee35:	out    0xe7,al
  40ee37:	lock mov edx,0x2fe8fee5
  40ee3d:	adc    eax,DWORD PTR [eax]
  40ee3f:	xlat   BYTE PTR fs:[bx]
  40ee42:	(bad)  
  40ee43:	cmp    al,0xd6
  40ee45:	in     eax,0x74
  40ee47:	and    DWORD PTR [ebx],ebx
  40ee49:	jo     0x40ee57
  40ee4b:	mov    dh,0x9c
  40ee4d:	cli    
  40ee4e:	out    0x24,eax
  40ee50:	sub    eax,0x2f78fee6
  40ee55:	idiv   edi
  40ee57:	add    eax,0x6d82d757
  40ee5c:	add    DWORD PTR [esi-0x1],ecx
  40ee5f:	add    al,0xbe
  40ee61:	fidivr DWORD PTR [edx+0xae602ad]
  40ee67:	jno    0x40eebd
  40ee69:	add    BYTE PTR [edi+0x68],bl
  40ee6c:	das    
  40ee6d:	idiv   edi
  40ee6f:	outs   dx,DWORD PTR ds:[esi]
  40ee70:	push   esp
  40ee71:	adc    ebp,eax
  40ee73:	fwait
  40ee74:	ins    DWORD PTR es:[edi],dx
  40ee75:	in     eax,0xfe
  40ee77:	sub    dh,BYTE PTR [edx-0x5709fa92]
  40ee7d:	ror    DWORD PTR [ebx],0x31
  40ee80:	retf   
  40ee81:	outs   dx,BYTE PTR ds:[esi]
  40ee82:	or     al,0x59
  40ee84:	lods   eax,DWORD PTR ds:[esi]
  40ee85:	jns    0x40ee85
  40ee87:	ds (bad) 
  40ee89:	ret    0x74
  40ee8c:	es dec edx
  40ee8e:	mov    DWORD PTR [edi+0x70],eax
  40ee91:	lock jecxz 0x40ef08
  40ee94:	xor    eax,0xb2029109
  40ee99:	ficomp DWORD PTR [ebp-0x1690d727]
  40ee9f:	in     al,0x85
  40eea1:	or     eax,0xdab0ee81
  40eea6:	test   DWORD PTR [ebx+0x75],edi
  40eea9:	aad    0x10
  40eeab:	jbe    0x40ef03
  40eead:	dec    eax
  40eeae:	jmp    0x81165497
  40eeb3:	fidiv  WORD PTR [eax+0x757b65da]
  40eeb9:	loope  0x40ee8b
  40eebb:	(bad)  
  40eebd:	or     ecx,ebp
  40eebf:	(bad)  [ecx+0x5a]
  40eec2:	dec    esi
  40eec3:	in     eax,0xb9
  40eec5:	inc    esp
  40eec6:	inc    ebp
  40eec7:	pop    esp
  40eec8:	xor    ecx,edi
  40eeca:	call   0xb686b7d2
  40eecf:	in     al,0xaf
  40eed1:	nop
  40eed2:	mov    ds:0x2154a7f3,eax
  40eed7:	fcomp  QWORD PTR [edi+0x2be51d86]
  40eedd:	leave  
  40eede:	in     eax,0x7f
  40eee0:	int    0x9
  40eee2:	jmp    0x19574ea
  40eee7:	pop    esp
  40eee8:	mov    esp,ebx
  40eeea:	call   0xf59564f2
  40eeef:	fild   DWORD PTR [eax]
  40eef1:	lods   al,BYTE PTR ds:[esi]
  40eef2:	outs   dx,DWORD PTR ds:[esi]
  40eef3:	jmp    0xeb22a0fb
  40eef8:	hlt    
  40eef9:	mov    ah,0xa5
  40eefb:	call   0x53cf2003
  40ef00:	call   0xf52a08d3
  40ef05:	mov    dl,0x81
  40ef07:	call   0x62b2200f
  40ef0c:	arpl   ax,si
  40ef0e:	or     BYTE PTR [eax],al
  40ef10:	push   ds
  40ef11:	or     eax,0x32e96b3c
  40ef16:	push   cs
  40ef17:	rcr    BYTE PTR ds:0xa174da8c,0x7a
  40ef1e:	fimul  DWORD PTR [esi]
  40ef20:	jmp    0x99b5c957
  40ef25:	push   0x7c
  40ef27:	inc    edi
  40ef28:	sub    BYTE PTR ds:0x7209ae71,dh
  40ef2e:	or     DWORD PTR [edi-0x7f],edx
  40ef31:	popa   
  40ef32:	outs   dx,DWORD PTR ds:[esi]
  40ef33:	add    cl,ch
  40ef35:	jmp    0xd60262d3
  40ef3a:	push   esp
  40ef3b:	clc    
  40ef3c:	shl    DWORD PTR [ebx],cl
  40ef3e:	jno    0x40eee3
  40ef40:	leave  
  40ef41:	jae    0x40ef4c
  40ef43:	push   edi
  40ef44:	inc    ecx
  40ef45:	inc    ebx
  40ef46:	outs   dx,DWORD PTR ds:[esi]
  40ef47:	add    cl,ch
  40ef49:	mov    cl,0xd1
  40ef4b:	add    BYTE PTR [edi+eax*1-0x6ac68b26],dh
  40ef52:	push   esp
  40ef53:	hlt    
  40ef54:	inc    ecx
  40ef55:	add    BYTE PTR [edi+eax*4-0x2],ah
  40ef59:	add    cl,BYTE PTR es:[esi+0x599b12cf]
  40ef60:	cmp    al,dh
  40ef62:	pop    ds
  40ef63:	push   es
  40ef64:	(bad)  
  40ef65:	jmp    0x40ef55
  40ef67:	inc    esi
  40ef68:	or     ebx,DWORD PTR [ebx]
  40ef6a:	push   cs
  40ef6b:	add    al,0x80
  40ef6d:	ret    
  40ef6e:	xor    dl,BYTE PTR [esi+ebp*8-0xa]
  40ef72:	fdiv   st(0),st
  40ef74:	dec    edi
  40ef75:	out    dx,al
  40ef76:	aam    0x10
  40ef78:	call   0xff1b432b
  40ef7d:	rcl    edx,1
  40ef7f:	pop    edx
  40ef80:	call   esi
  40ef82:	pop    esi
  40ef83:	or     edi,edi
  40ef85:	push   esp
  40ef86:	cmp    eax,0x780074da
  40ef8b:	in     eax,0x73
  40ef8d:	or     BYTE PTR [eax+0x72],ah
  40ef90:	cld    
  40ef91:	jmp    edi
  40ef93:	jmp    0xece2afc9
  40ef98:	std    
  40ef99:	call   edi
  40ef9b:	mov    edi,0xfc0f38ac
  40efa0:	test   BYTE PTR [eax-0x59],ch
  40efa3:	in     al,dx
  40efa4:	std    
  40efa5:	call   FWORD PTR ds:0x3655e6b1
  40efab:	in     al,dx
  40efac:	std    
  40efad:	(bad)  
  40efae:	std    
  40efaf:	mov    esp,0xebe64de6
  40efb4:	std    
  40efb5:	(bad)  
  40efb6:	fnsave [esi+eiz*8-0x1429ffbb]
  40efbd:	std    
  40efbe:	(bad)  
  40efbf:	std    
  40efc0:	mov    eax,0xebe63de6
  40efc5:	std    
  40efc6:	(bad)  
  40efc7:	fstp   st(4)
  40efc9:	std    
  40efca:	jne    0x40ef90
  40efcc:	jmp    0x40f041
  40efce:	or     BYTE PTR [eax+0x3f],ah
  40efd1:	(bad)  
  40efd2:	jmp    DWORD PTR [edi+0x4c]
  40efd5:	leave  
  40efd6:	ret    0xc84
  40efd9:	push   ebp
  40efda:	mov    eax,DWORD PTR [eax+edx*4-0x3e]
  40efde:	call   0xff55221a
  40efe3:	lods   eax,DWORD PTR ds:[esi]
  40efe4:	fsubr  st(6),st
  40efe6:	lea    esi,[edx+0x480b000c]
  40efec:	xor    DWORD PTR [edi+0x6a],edx
  40efef:	mov    BYTE PTR [ebx+esi*4+0x60],ah
  40eff3:	cdq    
  40eff4:	or     al,0xff
  40eff6:	jne    0x40ef80
  40eff8:	jmp    0x40f06d
  40effa:	or     al,0x80
  40effc:	xlat   BYTE PTR ds:[ebx]
  40effd:	jg     0x40effe
  40efff:	ja     0x40f008
  40f001:	shl    BYTE PTR [ecx+esi*1+0x21],0x34
  40f006:	push   eax
  40f007:	pop    ecx
  40f008:	lods   al,BYTE PTR ds:[esi]
  40f009:	mov    esi,edi
  40f00b:	ds fcmovnb st,st(2)
  40f00e:	jae    0x40f010
  40f010:	pop    ecx
  40f011:	dec    eax
  40f012:	call   0x422bacb2
  40f017:	mov    bl,0xa6
  40f019:	loope  0x40f025
  40f01b:	icebp  
  40f01c:	cmc    
  40f01d:	(bad)  
  40f01e:	inc    BYTE PTR [eax]
  40f020:	pushf  
  40f021:	or     dh,BYTE PTR [eax+ebp*8]
  40f024:	loope  0x40f086
  40f026:	loop   0x40f026
  40f028:	popa   
  40f029:	xchg   DWORD PTR [edi-0x18],edx
  40f02c:	popa   
  40f02d:	(bad)  
  40f02e:	push   edi
  40f02f:	or     BYTE PTR [ecx],cl
  40f031:	mov    ebx,0x89eefee0
  40f036:	int    0x7c
  40f038:	out    0x66,al
  40f03a:	loop   0x40f0b0
  40f03c:	leave  
  40f03d:	cmp    esi,eax
  40f03f:	jl     0x40f017
  40f041:	ss jmp 0x40f001
  40f044:	dec    esp
  40f045:	aas    
  40f046:	loop   0x40f0af
  40f048:	xor    edx,ebp
  40f04a:	add    al,BYTE PTR [eax]
  40f04c:	leave  
  40f04d:	sbb    ah,BYTE PTR [eax-0x1]
  40f050:	mov    dh,0x58
  40f052:	dec    eax
  40f053:	clc    
  40f054:	mov    esp,0xa64fdea4
  40f059:	pushf  
  40f05a:	repnz (bad) 
  40f05c:	and    al,0xde
  40f05e:	jmp    0x710b:0x2e208d3
  40f065:	je     0x40f0b9
  40f067:	(bad)  
  40f068:	in     al,dx
  40f069:	icebp  
  40f06a:	add    al,BYTE PTR [eax]
  40f06c:	xor    edx,esp
  40f06e:	leave  
  40f06f:	inc    esp
  40f070:	jge    0x40f048
  40f072:	or     BYTE PTR [eax],al
  40f074:	xor    DWORD PTR [edx+eax*1+0x28c316a],ecx
  40f07b:	push   0x31
  40f07d:	or     DWORD PTR [edi+eax*2+0x5d],esi
  40f081:	cmp    dh,bl
  40f083:	push   edi
  40f084:	add    BYTE PTR [ecx-0x29],cl
  40f087:	pop    ebx
  40f088:	aam    0x47
  40f08a:	pop    ebp
  40f08b:	int    0xec
  40f08d:	mov    WORD PTR [ecx-0x17],fs
  40f090:	add    ebp,DWORD PTR [edx]
  40f092:	leave  
  40f093:	xor    al,0x6
  40f095:	sbb    dl,BYTE PTR [ecx+eax*2]
  40f098:	jge    0x40f108
  40f09a:	dec    eax
  40f09b:	jmp    0x913a9680
  40f0a0:	push   es
  40f0a1:	mov    al,0xd6
  40f0a3:	popf   
  40f0a4:	loope  0x40f02b
  40f0a6:	sar    DWORD PTR [eax],1
  40f0a8:	in     al,dx
  40f0a9:	jne    0x40f033
  40f0ab:	(bad)  
  40f0ac:	loope  0x40f057
  40f0ae:	dec    esp
  40f0af:	xchg   ebp,eax
  40f0b0:	loope  0x40f12f
  40f0b2:	icebp  
  40f0b3:	jge    0x40f10c
  40f0b5:	inc    ebp
  40f0b6:	(bad)  
  40f0b7:	sti    
  40f0b8:	out    dx,eax
  40f0b9:	out    0x5c,eax
  40f0bb:	fucom  st(0)
  40f0bd:	add    DWORD PTR gs:[ecx-0x5],edx
  40f0c1:	xlat   BYTE PTR ds:[ebx]
  40f0c2:	(bad)  
  40f0c3:	pop    ebp
  40f0c4:	loope  0x40f10b
  40f0c6:	in     eax,0x40
  40f0c8:	sbb    eax,0xe14dd644
  40f0cd:	jne    0x40f0a8
  40f0cf:	push   ecx
  40f0d0:	xor    DWORD PTR [edi+0x8ec3d5c],0xa603e960
  40f0da:	pop    esp
  40f0db:	xor    esp,ebp
  40f0dd:	push   esp
  40f0de:	push   esp
  40f0df:	es loope 0x40f14b
  40f0e2:	retf   
  40f0e3:	hlt    
  40f0e4:	add    esp,esp
  40f0e6:	add    DWORD PTR [ebx+eax*4],0xedd7200
  40f0ed:	loope  0x40f16e
  40f0ef:	arpl   cx,bp
  40f0f1:	ins    DWORD PTR es:[edi],dx
  40f0f2:	dec    ebp
  40f0f3:	(bad)  
  40f0f4:	jae    0x40f101
  40f0f6:	pop    ecx
  40f0f7:	dec    esp
  40f0f8:	add    BYTE PTR [ebx+0x51],dh
  40f0fb:	xlat   BYTE PTR ds:[ebx]
  40f0fc:	mov    BYTE PTR [esi+edi*2-0x2d90fb31],ah
  40f103:	inc    edi
  40f104:	add    cl,ch
  40f106:	xor    cl,BYTE PTR [ecx]
  40f108:	add    BYTE PTR [edi+ebp*4-0x21],ah
  40f10c:	std    
  40f10d:	into   
  40f10e:	push   ecx
  40f10f:	inc    esi
  40f110:	push   0x933ed
  40f115:	shl    ecx,1
  40f117:	ins    DWORD PTR es:[edi],dx
  40f118:	add    cl,ch
  40f11a:	call   0x4d61:0x3528613c
  40f121:	or     BYTE PTR [edx+0x9],dh
  40f124:	push   0x489206
  40f129:	xchg   esi,eax
  40f12a:	pop    ds
  40f12b:	xchg   esi,eax
  40f12c:	inc    edi
  40f12d:	sub    BYTE PTR ds:0xaf174d6,dh
  40f133:	scas   al,BYTE PTR es:[edi]
  40f134:	std    
  40f135:	jle    0x40f108
  40f137:	ins    DWORD PTR es:[edi],dx
  40f138:	push   ebp
  40f139:	or     BYTE PTR [edx+0x9],dh
  40f13c:	push   0x48521c
  40f141:	ror    DWORD PTR [ecx+0x68],1
  40f144:	inc    ecx
  40f145:	jmp    0xe940fca4
  40f14a:	mov    dl,0xd6
  40f14c:	je     0x40f12f
  40f14e:	add    dl,cl
  40f150:	cmp    ebp,0x8484d146
  40f156:	ss nop
  40f158:	(bad)  
  40f159:	(bad)  
  40f15a:	cdq    
  40f15b:	call   0x74d6:0x32e9683d
  40f162:	and    eax,0x11085c91
  40f167:	(bad)  
  40f168:	dec    edi
  40f169:	call   DWORD PTR [esi]
  40f16b:	jnp    0x40f134
  40f16d:	add    ebp,ecx
  40f16f:	inc    edi
  40f170:	sub    bl,0x0
  40f173:	or     esi,ecx
  40f175:	repnz (bad) 
  40f177:	outs   dx,DWORD PTR ds:[esi]
  40f178:	mov    ch,0x68
  40f17a:	add    BYTE PTR [edx+0x5075ff2e],dh
  40f180:	loope  0x40f13e
  40f182:	jns    0x40f1d3
  40f184:	mov    ch,0x87
  40f186:	inc    ebp
  40f187:	ins    BYTE PTR es:[edi],dx
  40f188:	bound  ebx,QWORD PTR [edx]
  40f18a:	call   0x3e7e13
  40f18f:	push   ebx
  40f190:	leave  
  40f191:	jb     0x40f1b7
  40f193:	loopne 0x40f1a4
  40f195:	popa   
  40f196:	inc    ecx
  40f197:	sbb    BYTE PTR [ecx],bl
  40f199:	call   0xfdf589fe
  40f19e:	push   eax
  40f19f:	jo     0x40f1ae
  40f1a1:	adc    bh,ch
  40f1a3:	mov    fs,WORD PTR [ebp-0x67]
  40f1a6:	popa   
  40f1a7:	pop    ecx
  40f1a8:	or     eax,0x525ff50
  40f1ad:	call   0xfdf566fd
  40f1b2:	call   0xffaa05b7
  40f1b7:	call   DWORD PTR [edi+0x19608602]
  40f1bd:	or     eax,0x8c80001
  40f1c2:	lea    eax,[ebp-0x24c89]
  40f1c8:	mov    BYTE PTR [eax+0x4],ah
  40f1cb:	add    eax,ebx
  40f1cd:	or     al,ch
  40f1cf:	stc    
  40f1d0:	test   DWORD PTR [eax],0x6d956800
  40f1d6:	inc    ecx
  40f1d7:	add    BYTE PTR [eax-0x67be9ec7],al
  40f1dd:	pusha  
  40f1de:	addr16 popa 
  40f1e0:	leave  
  40f1e1:	or     bh,bh
  40f1e3:	xor    eax,0x41450f
  40f1e8:	das    
  40f1e9:	xor    cl,BYTE PTR [eax]
  40f1eb:	call   0xff21e221
  40f1f0:	jle    0x40f17c
  40f1f2:	aaa    
  40f1f3:	popa   
  40f1f4:	lock loope 0x40f261
  40f1f7:	dec    ebp
  40f1f8:	shl    BYTE PTR [eax-0x7f3197fe],1
  40f1fe:	inc    ebx
  40f1ff:	add    cl,cl
  40f201:	fild   WORD PTR [edx]
  40f203:	add    BYTE PTR [ecx+0x590857eb],dh
  40f209:	pushf  
  40f20a:	(bad)  
  40f20c:	inc    esi
  40f20d:	ins    DWORD PTR es:[edi],dx
  40f20e:	mov    dh,dh
  40f210:	aas    
  40f211:	ret    
  40f212:	fisttp QWORD PTR [edi+0x49]
  40f215:	and    BYTE PTR [ebp+0x0],0x0
  40f219:	xor    DWORD PTR [ebx+0x1526fc57],edx
  40f21f:	or     al,0xe8
  40f221:	xchg   esi,eax
  40f222:	sbb    edi,ebx
  40f224:	(bad)  
  40f225:	call   0x6440f8c9
  40f22a:	push   edi
  40f22b:	out    dx,eax
  40f22c:	sub    ch,0x75
  40f22f:	fdiv   st(6),st
  40f231:	inc    BYTE PTR [edi]
  40f233:	add    al,0x6a
  40f235:	dec    edi
  40f236:	mov    edx,DWORD PTR [edi+0x8]
  40f239:	(bad)  
  40f23b:	pop    ebx
  40f23c:	jmp    esi
  40f23e:	push   0xecf6fc48
  40f243:	test   BYTE PTR [edi+0x70],bl
  40f246:	loop   0x40f24a
  40f248:	add    BYTE PTR [ecx],dh
  40f24a:	loop   0x40f1db
  40f24c:	test   BYTE PTR [esi+0x61fede3b],bh
  40f252:	retf   0x106
  40f255:	xor    edx,esp
  40f257:	jmp    0xdd68:0x2e21671
  40f25e:	rol    BYTE PTR [ebx+0x0],0x9
  40f262:	mov    BYTE PTR [ebx+0x41],ah
  40f265:	xor    DWORD PTR [ecx],ecx
  40f267:	xchg   ecx,eax
  40f268:	data16 adc BYTE PTR [edx-0x17],cl
  40f26c:	fidivr WORD PTR ds:0x3144a094
  40f272:	aam    0x93
  40f274:	or     ecx,DWORD PTR [ecx+0x6fde045f]
  40f27a:	pusha  
  40f27b:	xor    eax,0x8f00064
  40f280:	sub    DWORD PTR [ecx+0x6be949d1],0x42869ce
  40f28a:	fld    DWORD PTR [esi]
  40f28c:	jmp    0x5c14a394
  40f291:	or     al,0x49
  40f293:	inc    ebx
  40f294:	int3   
  40f295:	fnsave [edi]
  40f297:	test   DWORD PTR [ebx-0x2b],ebp
  40f29a:	sub    al,0xd3
  40f29c:	mov    ebp,0x4def1934
  40f2a1:	add    al,0x31
  40f2a3:	shl    BYTE PTR [ebx],cl
  40f2a5:	loopne 0x40f2be
  40f2a7:	pop    ebp
  40f2a8:	icebp  
  40f2a9:	jmp    0x40f299
  40f2ab:	push   ecx
  40f2ac:	sahf   
  40f2ad:	(bad)  
  40f2af:	(bad)  
  40f2b0:	in     al,dx
  40f2b1:	add    esp,DWORD PTR [esi+edi*2+0x7c]
  40f2b5:	xor    edx,0xffffffdd
  40f2b8:	xchg   ch,bl
  40f2ba:	out    dx,eax
  40f2bb:	pop    edi
  40f2bc:	jmp    0xfc13012a
  40f2c1:	or     ecx,ecx
  40f2c3:	mov    al,dh
  40f2c5:	(bad)  
  40f2c7:	sub    BYTE PTR [ebx+0x670cf7df],0x64
  40f2ce:	jo     0x40f2d9
  40f2d0:	jmp    0x5c4a23d8
  40f2d5:	xchg   DWORD PTR [edi-0x122ba2d],edi
  40f2db:	pusha  
  40f2dc:	in     eax,0x2
  40f2de:	xor    DWORD PTR [ecx],ecx
  40f2e0:	add    BYTE PTR [ecx+0x0],al
  40f2e3:	mov    BYTE PTR [eax+eax*1-0x17],ch
  40f2e7:	or     al,bl
  40f2e9:	pusha  
  40f2ea:	test   al,0x32
  40f2ec:	popa   
  40f2ed:	enter  0xf388,0x8
  40f2f1:	push   0x48138e
  40f2f6:	push   cs
  40f2f7:	push   ds
  40f2f8:	xchg   edx,eax
  40f2f9:	inc    edi
  40f2fa:	test   al,0x32
  40f2fc:	shl    BYTE PTR [ecx+esi*8+0x5a],cl
  40f300:	out    0xfb,al
  40f302:	idiv   BYTE PTR [ebp+0x6a]
  40f305:	into   
  40f306:	mov    bl,dh
  40f308:	or     BYTE PTR [eax-0x4f],ch
  40f30b:	rol    DWORD PTR [edi+0x0],cl
  40f30e:	push   ecx
  40f30f:	int3   
  40f310:	addr16 inc ecx
  40f312:	jmp    0xe940f9e1
  40f317:	mov    dl,0xd3
  40f319:	je     0x40f30c
  40f31b:	sbb    cl,dl
  40f31d:	sti    
  40f31e:	mov    esi,0xbe848505
  40f323:	cld    
  40f324:	sar    dh,cl
  40f326:	sbb    DWORD PTR ds:0x32e96576,eax
  40f32c:	shl    BYTE PTR [ebp+ebx*4-0x1b],cl
  40f330:	pop    esp
  40f331:	or     BYTE PTR [ecx-0x7100aec5],al
  40f337:	jmp    0x40f300
  40f339:	add    ebp,ecx
  40f33b:	daa    
  40f33c:	jle    0x40f329
  40f33e:	push   0x76fdd5ee
  40f343:	std    
  40f344:	pop    edi
  40f345:	add    BYTE PTR [ebx],al
  40f347:	add    BYTE PTR ds:0xdaf174d2,al
  40f34d:	iret   
  40f34e:	jbe    0x40f3ae
  40f350:	in     eax,0x80
  40f352:	inc    esp
  40f353:	push   ebp
  40f354:	cmc    
  40f355:	or     al,0x86
  40f357:	leave  
  40f358:	jae    0x40f363
  40f35a:	add    BYTE PTR [eax],al
  40f35c:	cwde   
  40f35d:	add    eax,0xbd0d8d00
  40f362:	cld    
  40f363:	jmp    DWORD PTR [edi+0x16]
  40f366:	push   0x58904
  40f36b:	call   0x415f2c
  40f370:	mov    al,ds:0x88415feb
  40f375:	pop    ebp
  40f376:	fisub  WORD PTR [ecx-0x37]
  40f379:	add    eax,0x46b96768
  40f37e:	add    bh,bh
  40f380:	popf   
  40f381:	je     0x40f3c9
  40f383:	inc    ecx
  40f384:	dec    eax
  40f385:	mov    ah,0x73
  40f387:	or     BYTE PTR [eax],dh
  40f389:	adc    edi,esp
  40f38b:	call   DWORD PTR [edi+0x64]
  40f38e:	out    0x61,al
  40f390:	sbb    DWORD PTR ds:0x4be9de68,ecx
  40f396:	add    BYTE PTR [eax-0x11],ch
  40f399:	imul   eax,DWORD PTR [ecx+0x0],0xffffff80
  40f39d:	pop    es
  40f39e:	add    BYTE PTR [eax],al
  40f3a0:	cwde   
  40f3a1:	mov    ah,0x73
  40f3a3:	or     al,dh
  40f3a5:	inc    esi
  40f3a6:	cld    
  40f3a7:	inc    edi
  40f3a9:	add    BYTE PTR [ebx-0x4b29ff09],0xfd
  40f3b0:	push   eax
  40f3b1:	mov    al,ds:0x8006602
  40f3b6:	mov    ah,0x73
  40f3b8:	cld    
  40f3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3ba:	cmp    cl,BYTE PTR [eax]
  40f3bc:	call   0x40308b
  40f3c1:	mov    eax,ds:0x3d0002c7
  40f3c6:	sub    dl,0x83
  40f3c9:	mov    WORD PTR [ecx+0x1de20068],?
  40f3cf:	push   DWORD PTR [ebp-0x40]
  40f3d2:	in     al,0x74
  40f3d4:	ja     0x40f407
  40f3d6:	aaa    
  40f3d7:	fisttp DWORD PTR [eax+0x6e3e6c]
  40f3dd:	sbb    ebx,ebx
  40f3df:	fs inc ecx
  40f3e1:	xor    DWORD PTR [edx-0x1e0f9f25],edi
  40f3e7:	fnstenv [esi+edx*8]
  40f3ea:	stos   BYTE PTR es:[edi],al
  40f3eb:	inc    ebx
  40f3ec:	add    BYTE PTR [ecx-0x7900a81a],bl
  40f3f2:	fcmovnb st,st(2)
  40f3f4:	jae    0x40f40e
  40f3f6:	xchg   edx,eax
  40f3f7:	push   0x0
  40f3f9:	xor    edi,ecx
  40f3fb:	cwde   
  40f3fc:	addr16 dec edx
  40f3fe:	test   BYTE PTR [ebx+0x0],al
  40f401:	add    edi,ecx
  40f403:	dec    edi
  40f404:	or     BYTE PTR [ecx-0x28],cl
  40f407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f408:	(bad)  
  40f409:	push   esi
  40f40a:	or     al,BYTE PTR [ebx]
  40f40c:	jp     0x40f45c
  40f40e:	out    0x6c,eax
  40f410:	add    BYTE PTR [eax],al
  40f412:	(bad)  
  40f414:	fs inc ecx
  40f416:	xor    DWORD PTR [edx-0x23],ecx
  40f419:	pusha  
  40f41a:	lock loope 0x40f3f6
  40f41d:	xor    al,0xee
  40f41f:	sbb    DWORD PTR [ebp+0x0],eax
  40f422:	sbb    edx,ebx
  40f424:	push   edi
  40f425:	call   FWORD PTR [esi]
  40f427:	jmp    0x40f3eb
  40f429:	jae    0x40f463
  40f42b:	repnz imul eax,DWORD PTR [eax],0x31
  40f42f:	ja     0x40f3c9
  40f431:	sub    al,BYTE PTR [si]
  40f434:	inc    ebp
  40f435:	add    BYTE PTR [ecx+0x77],ah
  40f438:	dec    edi
  40f439:	or     BYTE PTR [ecx],cl
  40f43b:	lods   al,BYTE PTR ds:[esi]
  40f43c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f43d:	(bad)  
  40f43e:	out    dx,al
  40f43f:	jns    0x40f3f6
  40f441:	js     0x40f429
  40f443:	dec    esi
  40f444:	fidiv  DWORD PTR [ebp+ebx*8+0x56]
  40f448:	push   eax
  40f449:	or     cl,cl
  40f44b:	daa    
  40f44c:	push   ebx
  40f44d:	dec    esi
  40f44f:	or     BYTE PTR [eax],dh
  40f451:	lds    esi,FWORD PTR [edx]
  40f453:	or     DWORD PTR [esi+ecx*4-0x28d37436],esi
  40f45a:	pop    esp
  40f45b:	cmp    bl,al
  40f45d:	add    ebx,DWORD PTR [ebx]
  40f45f:	and    eax,DWORD PTR [esi+0x50]
  40f462:	cmp    ecx,esp
  40f464:	push   eax
  40f465:	push   ecx
  40f466:	sahf   
  40f467:	iret   
  40f468:	pop    edi
  40f469:	inc    eax
  40f46a:	xchg   ebp,eax
  40f46b:	(bad)  
  40f46c:	jmp    0x268e815c
  40f471:	fidivr DWORD PTR [ebx]
  40f473:	leave  
  40f474:	xchg   esp,eax
  40f475:	cld    
  40f476:	add    dh,ch
  40f478:	pusha  
  40f479:	jmp    0x80cf7a81
  40f47e:	sub    edx,ebx
  40f480:	dec    ecx
  40f481:	jmp    0xf1965ab9
  40f486:	jmp    0x40f466
  40f488:	stos   BYTE PTR es:[edi],al
  40f489:	cmc    
  40f48a:	(bad)  [esi-0x7f]
  40f48d:	outs   dx,DWORD PTR ds:[esi]
  40f48e:	fimul  DWORD PTR [edi-0x7d]
  40f491:	sbb    eax,DWORD PTR [ebp-0x7]
  40f494:	dec    ecx
  40f495:	jmp    0x2188f226
  40f49a:	inc    ebx
  40f49b:	xor    DWORD PTR [ecx+0x44a5040d],ecx
  40f4a1:	push   ecx
  40f4a2:	setae  BYTE PTR [eax-0x17]
  40f4a6:	xor    BYTE PTR [ecx],cl
  40f4a8:	jmp    0x271f8f8
  40f4ad:	test   eax,0x91372e50
  40f4b2:	(bad)  
  40f4b4:	into   
  40f4b5:	popf   
  40f4b6:	xor    al,0x89
  40f4b8:	or     ecx,ebp
  40f4ba:	call   0x66025673
  40f4bf:	jo     0x40f4ca
  40f4c1:	sbb    ecx,ebx
  40f4c3:	pop    ebp
  40f4c4:	add    DWORD PTR [ecx-0x316cbd],edx
  40f4ca:	jne    0x40f491
  40f4cc:	inc    eax
  40f4cd:	jns    0x40f53d
  40f4cf:	call   0xb2eff5b7
  40f4d4:	or     al,0x0
  40f4d6:	aam    0xdc
  40f4d8:	inc    esp
  40f4d9:	cld    
  40f4da:	sbb    al,BYTE PTR [eax]
  40f4dc:	in     eax,dx
  40f4dd:	xchg   ecx,eax
  40f4de:	dec    BYTE PTR [esi-0x78]
  40f4e1:	iret   
  40f4e2:	icebp  
  40f4e3:	xchg   edi,eax
  40f4e4:	inc    ebp
  40f4e5:	push   es
  40f4e6:	jne    0x40f46a
  40f4e8:	js     0x40f53f
  40f4ea:	cld    
  40f4eb:	ss out 0x0,al
  40f4ee:	call   0xff0ed87a
  40f4f3:	(bad)  
  40f4f4:	dec    eax
  40f4f5:	rol    cl,0xe5
  40f4f8:	xor    dh,BYTE PTR [ebx+ecx*4]
  40f4fb:	add    eax,0xb7fbcaac
  40f500:	and    DWORD PTR [ebx+0x0],esp
  40f503:	xchg   ebx,eax
  40f504:	adc    eax,0x4af174ce
  40f509:	inc    esp
  40f50a:	jbe    0x40f502
  40f50c:	jns    0x40f48f
  40f50e:	inc    esp
  40f50f:	in     eax,dx
  40f510:	mov    ebp,0xf2314315
  40f515:	or     BYTE PTR [ebx+0x4140f01c],cl
  40f51b:	jmp    0x554104d2
  40f520:	outs   dx,BYTE PTR ds:[esi]
  40f521:	popa   
  40f522:	dec    eax
  40f523:	dec    ebx
  40f524:	jb     0x40f52f
  40f526:	push   edi
  40f527:	rcl    DWORD PTR [ebp+0x25e90064],1
  40f52d:	leave  
  40f52e:	jae    0x40f4fe
  40f530:	inc    eax
  40f531:	loope  0x40f4e9
  40f533:	imul   ebp,ecx,0xffffffce
  40f536:	dec    edi
  40f537:	adc    DWORD PTR ds:0x8a57ef09,esi
  40f53d:	adc    esp,DWORD PTR [edx+0x28]
  40f540:	add    BYTE PTR ds:0xe500ff39,dh
  40f546:	add    eax,ebp
  40f548:	ret    
  40f549:	imul   esi,DWORD PTR [ecx+0x318ce8fd],0xab3ffff
  40f553:	inc    esi
  40f554:	or     BYTE PTR [esi],0x5
  40f557:	jne    0x40f553
  40f559:	xchg   esi,eax
  40f55a:	mov    ch,0x31
  40f55c:	shl    BYTE PTR [ecx-0x250],0xb3
  40f563:	lods   al,BYTE PTR ds:[esi]
  40f564:	cmp    BYTE PTR [edi-0x1a0044c2],dl
  40f56a:	mov    ch,0xfd
  40f56c:	jne    0x40f4fe
  40f56e:	loope  0x40f596
  40f570:	jbe    0x40f5d1
  40f572:	mov    cl,0x5d
  40f574:	pop    esi
  40f575:	inc    ecx
  40f576:	les    eax,FWORD PTR [edx]
  40f578:	add    ch,al
  40f57a:	jl     0x40f566
  40f57c:	add    DWORD PTR [esi+esi*4+0x68],0x0
  40f581:	mov    dl,0x25
  40f583:	push   DWORD PTR [ebp+0x60]
  40f586:	loope  0x40f550
  40f588:	jne    0x40f5e9
  40f58a:	mov    ch,0x87
  40f58c:	inc    ebp
  40f58d:	pop    esp
  40f58e:	pop    esp
  40f58f:	add    BYTE PTR [edx+0x58],ch
  40f592:	popa   
  40f593:	pop    eax
  40f594:	bound  ebx,QWORD PTR [ecx]
  40f596:	add    eax,0x9480068
  40f59b:	sub    al,0xb4
  40f59e:	xor    edi,edi
  40f5a0:	call   DWORD PTR [ebx]
  40f5a2:	leave  
  40f5a3:	jb     0x40f5c4
  40f5a5:	add    BYTE PTR [eax-0x23],cl
  40f5a8:	inc    edx
  40f5a9:	sbb    bh,0xb4
  40f5ac:	dec    esi
  40f5ad:	push   0xbeef0908
  40f5b2:	jo     0x40f5f8
  40f5b4:	bound  eax,QWORD PTR [ecx+0x18]
  40f5b7:	sbb    edi,edi
  40f5b9:	jne    0x40f5bb
  40f5bb:	loope  0x40f60b
  40f5bd:	mov    eax,ds:0xe7d67331
  40f5c2:	mov    dl,bh
  40f5c4:	(bad)  
  40f5c5:	(bad)  
  40f5c6:	out    0xcd,al
  40f5c8:	(bad)  
  40f5c9:	(bad)  
  40f5ca:	fs (bad) 
  40f5cd:	retf   
  40f5ce:	pop    esp
  40f5cf:	push   ebx
  40f5d0:	xlat   BYTE PTR ds:[ebx]
  40f5d1:	enter  0xe6f3,0x2
  40f5d5:	push   ebp
  40f5d6:	mov    edx,0xbdc38336
  40f5db:	mov    eax,0x33046a02
  40f5e0:	push   ecx
  40f5e1:	or     BYTE PTR [ecx-0x5900b04e],bl
  40f5e7:	pop    ecx
  40f5e8:	inc    ecx
  40f5e9:	cld    
  40f5ea:	or     edx,esp
  40f5ec:	add    ch,bh
  40f5ee:	xlat   BYTE PTR ds:[ebx]
  40f5ef:	retf   0x616e
  40f5f2:	lock loope 0x40f65f
  40f5f5:	mov    al,ds:0xff02a113
  40f5fa:	add    al,0xda
  40f5fc:	jmp    0xe4fe:0xd6f3d05a
  40f603:	std    
  40f604:	(bad)  
  40f605:	je     0x40f640
  40f607:	cli    
  40f608:	je     0x40f67e
  40f60a:	add    BYTE PTR [esi-0x35],bl
  40f60d:	retf   
  40f60e:	shr    DWORD PTR ds:0x5d8b2fe2,0x5f
  40f615:	sar    bl,0xdb
  40f618:	loope  0x40f682
  40f61a:	cs ds xor eax,0x2cfce80c
  40f621:	xlat   BYTE PTR ds:[ebx]
  40f622:	(bad)  
  40f623:	mov    eax,0x3167d824
  40f628:	loop   0x40f60f
  40f62a:	mov    ebp,0x41607789
  40f62f:	xor    DWORD PTR [edx-0x3c],ecx
  40f632:	popa   
  40f633:	jo     0x40f617
  40f635:	aad    0x74
  40f637:	cmp    DWORD PTR [ecx],ecx
  40f639:	xchg   ecx,eax
  40f63a:	and    edx,eax
  40f63c:	retf   
  40f63d:	popf   
  40f63e:	imul   esi,DWORD PTR [ecx],0x9
  40f641:	xchg   BYTE PTR [ebp+0x450a9356],dl
  40f647:	xor    DWORD PTR [ecx-0x57],esp
  40f64a:	popa   
  40f64b:	jo     0x40f656
  40f64d:	jle    0x40f69f
  40f64f:	sub    ecx,esp
  40f651:	fbld   TBYTE PTR [edi+ecx*8-0x3aaf9235]
  40f658:	retf   
  40f659:	fisttp DWORD PTR [ebx]
  40f65b:	leave  
  40f65c:	or     edx,esp
  40f65e:	(bad)  
  40f65f:	mov    bh,0xc1
  40f661:	sub    bh,bh
  40f663:	scas   al,BYTE PTR es:[edi]
  40f664:	xor    al,0x62
  40f666:	out    0xb3,eax
  40f668:	les    eax,FWORD PTR [edx+ecx*4+0x5]
  40f66c:	stc    
  40f66d:	jno    0x40f660
  40f66f:	add    BYTE PTR [eax],cl
  40f671:	or     DWORD PTR [eax+eax*2-0x73],esp
  40f675:	cmp    BYTE PTR [esi],ch
  40f677:	push   eax
  40f678:	cmp    DWORD PTR [edi-0x17],ebx
  40f67b:	(bad)  
  40f67c:	add    eax,0x15311df9
  40f681:	xchg   BYTE PTR [eax],ch
  40f683:	push   eax
  40f684:	push   ss
  40f685:	xor    BYTE PTR [ebx-0x16a14929],0x69
  40f68c:	xor    DWORD PTR [ecx-0x2],esp
  40f68f:	add    DWORD PTR [ecx],esi
  40f691:	or     esi,esi
  40f693:	dec    edi
  40f694:	cmp    eax,0xc0d5ee5f
  40f699:	add    al,0x53
  40f69b:	add    al,0xcb
  40f69d:	or     cl,dl
  40f69f:	mov    ebp,0x73e908d0
  40f6a4:	das    
  40f6a5:	push   ebp
  40f6a6:	int    0xec
  40f6a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6a9:	jmpw   0xdeb0
  40f6ad:	(bad)  
  40f6ae:	in     al,dx
  40f6af:	add    edi,DWORD PTR [esi+edi*2-0x1]
  40f6b3:	les    esi,FWORD PTR [eax+0x5662fbc6]
  40f6b9:	cmc    
  40f6ba:	mov    bh,bl
  40f6bc:	mov    BYTE PTR [ecx],cl
  40f6be:	lea    esp,[ecx+ebx*8]
  40f6c1:	cmp    bh,bh
  40f6c3:	sbb    al,0x39
  40f6c5:	retf   0xe174
  40f6c8:	pop    eax
  40f6c9:	or     edi,edi
  40f6cb:	cld    
  40f6cc:	into   
  40f6cd:	retf   
  40f6ce:	push   ecx
  40f6cf:	rcl    DWORD PTR [edi-0x76],1
  40f6d2:	je     0x40f6a2
  40f6d4:	add    BYTE PTR [ecx+0x5b59fc35],bh
  40f6da:	or     DWORD PTR [edx-0x17],ebp
  40f6dd:	dec    edx
  40f6de:	retf   0xe902
  40f6e1:	xor    cl,dl
  40f6e3:	je     0x40f6de
  40f6e5:	sbb    dl,cl
  40f6e7:	(bad)  
  40f6e8:	(bad)  [esi+0x32d30060]
  40f6ee:	loope  0x40f768
  40f6f0:	retf   
  40f6f1:	xor    cl,BYTE PTR [ecx]
  40f6f3:	nop
  40f6f4:	ss dec ah
  40f6f7:	out    0xf9,eax
  40f6f9:	adc    DWORD PTR [ecx],ecx
  40f6fb:	add    BYTE PTR [eax],dh
  40f6fd:	jae    0x40f6f9
  40f6ff:	push   DWORD PTR [ebx+0x2d82dea9]
  40f705:	int    0x33
  40f707:	or     DWORD PTR [edx+ebp*2+0x25ec73ca],0xffffffc0
  40f70f:	rcl    ebp,0x32
  40f712:	jle    0x40f768
  40f714:	fnstsw WORD PTR [ecx-0x555b7308]
  40f71a:	cmp    ch,BYTE PTR [edx-0x17]
  40f71d:	gs push ebp
  40f71f:	or     al,0xde
  40f721:	out    0x0,eax
  40f723:	push   0xffffffe9
  40f725:	add    eax,0x60ce1455
  40f72a:	xor    eax,0x3ac80085
  40f72f:	push   edx
  40f730:	(bad)  
  40f731:	dec    ebp
  40f732:	jno    0x40f732
  40f734:	call   FWORD PTR [eax]
  40f736:	push   es
  40f737:	mov    edx,DWORD PTR [ebp+0x0]
  40f73a:	add    BYTE PTR [ecx+0x714d8d10],0x4e
  40f741:	lea    ecx,[ebp-0x3b]
  40f744:	dec    esi
  40f745:	push   0xffffffe8
  40f747:	mov    ah,0x73
  40f749:	mov    eax,0x830c17b7
  40f74e:	xor    eax,0xed73fe71
  40f753:	cmp    BYTE PTR [ebx-0x40],0x47
  40f757:	cmp    edx,DWORD PTR [edi+edi*8]
  40f75a:	mov    ebp,0x5737fdd5
  40f75f:	cmp    ecx,DWORD PTR [edi+edi*8]
  40f762:	(bad)  
  40f764:	(bad)  
  40f765:	push   ebp
  40f766:	mov    al,ds:0x58e835b4
  40f76b:	push   0x8d0b0000
  40f770:	add    bh,bh
  40f772:	lds    esi,FWORD PTR [ecx+0x73]
  40f775:	loopne 0x40f76a
  40f777:	outs   dx,BYTE PTR ds:[esi]
  40f778:	mov    DWORD PTR [ebp+0x0],edx
  40f77b:	adc    DWORD PTR [eax],0xfd6d9dff
  40f781:	push   edx
  40f782:	adc    BYTE PTR [ecx+ecx*8],0xc2
  40f786:	ins    BYTE PTR es:[edi],dx
  40f787:	add    eax,0x87648b55
  40f78c:	ret    0x36f8
  40f78f:	mov    ch,0xfd
  40f791:	push   edi
  40f792:	jecxz  0x40f7ae
  40f794:	adc    BYTE PTR [ebx-0x77c7d96],cl
  40f79a:	push   esi
  40f79b:	mov    ch,0xfd
  40f79d:	push   eax
  40f79e:	add    dl,ah
  40f7a0:	add    al,0xff
  40f7a2:	jne    0x40f7e4
  40f7a4:	sub    eax,DWORD PTR [eax]
  40f7a6:	push   DWORD PTR [ecx]
  40f7a8:	gs hlt 
  40f7aa:	inc    BYTE PTR [ebx-0x5b4076ea]
  40f7b0:	pop    esp
  40f7b1:	retf   
  40f7b2:	test   BYTE PTR ds:0x31fed289,dl
  40f7b8:	mov    dl,0x2
  40f7ba:	add    BYTE PTR [edx-0x10233a3],bh
  40f7c0:	outs   dx,DWORD PTR ds:[esi]
  40f7c1:	jle    0x40f7d4
  40f7c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7c4:	sub    eax,0x9feefdd0
  40f7c9:	xor    ecx,DWORD PTR [ebp-0x12e4d54]
  40f7cf:	fisub  WORD PTR [edx]
  40f7d1:	pop    esi
  40f7d2:	adc    dh,dl
  40f7d4:	std    
  40f7d5:	retf   
  40f7d6:	std    
  40f7d7:	into   
  40f7d8:	aas    
  40f7d9:	rcl    DWORD PTR [ecx+0x35],cl
  40f7dc:	xor    edx,DWORD PTR [ecx-0x2cd04005]
  40f7e2:	inc    DWORD PTR [edx+0xd]
  40f7e5:	cmp    DWORD PTR [ecx+esi*1-0x59012ca1],0x24fef6dd
  40f7f0:	loop   0x40f7c3
  40f7f2:	je     0x40f819
  40f7f4:	lahf   
  40f7f5:	shl    DWORD PTR [ecx+edi*1+0x4a],1
  40f7f9:	or     edi,edi
  40f7fb:	xchg   bh,dh
  40f7fd:	xchg   dh,al
  40f7ff:	and    edi,ebp
  40f801:	cmp    bl,0x0
  40f804:	ja     0x40f82d
  40f806:	shl    DWORD PTR [edx+edx*2+0xb],cl
  40f80a:	stos   DWORD PTR es:[edi],eax
  40f80b:	mov    bh,BYTE PTR [edx+ebx*1+0x3b5efed2]
  40f812:	idiv   dh
  40f814:	pushf  
  40f815:	or     dl,dl
  40f817:	dec    BYTE PTR [esi-0x41]
  40f81a:	xor    al,0x8
  40f81c:	out    0xe8,al
  40f81e:	lds    ecx,FWORD PTR [edi]
  40f820:	xor    DWORD PTR [ecx],ecx
  40f822:	cmp    al,0x7f
  40f824:	dec    edx
  40f825:	mov    ah,BYTE PTR [ebx+ecx*8+0x3ad5c82c]
  40f82c:	mov    edx,0x407edd5d
  40f831:	xchg   esi,eax
  40f832:	imul   ecx,ebx,0x14
  40f835:	enter  0x33bd,0x9b
  40f839:	or     DWORD PTR [ebx+0x4],eax
  40f83c:	push   es
  40f83d:	ds fst st(2)
  40f840:	pusha  
  40f841:	add    DWORD PTR [ebx+eax*8+0x7d],ebp
  40f845:	sub    esp,DWORD PTR [esi-0x16f712b8]
  40f84b:	add    esi,DWORD PTR [ecx]
  40f84d:	cdq    
  40f84e:	popa   
  40f84f:	js     0x40f837
  40f851:	mov    BYTE PTR [ebp+0x6c1aabd2],0x48
  40f858:	int    0x58
  40f85a:	fs mov dl,cl
  40f85d:	(bad)  
  40f85e:	ins    DWORD PTR es:[edi],dx
  40f85f:	shr    BYTE PTR [esi+0x33],cl
  40f862:	stc    
  40f863:	sar    BYTE PTR [ebp-0x40],cl
  40f866:	pop    esi
  40f867:	rol    BYTE PTR [eax],cl
  40f869:	scas   eax,DWORD PTR es:[edi]
  40f86a:	(bad)  
  40f86b:	mov    edx,0xcb8bb6ff
  40f870:	iret   
  40f871:	sahf   
  40f872:	xchg   edi,eax
  40f873:	mov    esp,0x3c85a426
  40f878:	ror    DWORD PTR [edi-0x22da739],1
  40f87e:	sbb    BYTE PTR [esi],ch
  40f880:	pop    eax
  40f881:	sub    eax,0xdffb9bc8
  40f886:	mov    al,0xea
  40f888:	shr    BYTE PTR [edi-0x39],cl
  40f88b:	imul   ecx,edx,0x400d9936
  40f891:	pop    ebp
  40f892:	cwde   
  40f893:	jnp    0x40f87e
  40f895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f896:	mov    bl,0x4d
  40f898:	jle    0x40f83f
  40f89a:	sar    bh,0xf6
  40f89d:	pusha  
  40f89e:	(bad)  
  40f89f:	mov    bl,bl
  40f8a1:	arpl   WORD PTR [edi+esi*8-0x19],di
  40f8a5:	pusha  
  40f8a6:	(bad)  
  40f8a7:	(bad)  
  40f8a8:	cmp    ebp,DWORD PTR ds:0x31abc968
  40f8ae:	or     DWORD PTR [ebp+0x62],edx
  40f8b1:	adc    eax,ecx
  40f8b3:	je     0x40f8a6
  40f8b5:	add    DWORD PTR [esi],edi
  40f8b7:	sbb    cl,dl
  40f8b9:	push   ebp
  40f8ba:	cmp    edi,edi
  40f8bc:	mov    dh,0xe0
  40f8be:	cmp    eax,0x281ec10c
  40f8c3:	add    cl,ch
  40f8c5:	ret    
  40f8c6:	out    0x82,al
  40f8c8:	test   eax,0x1cff5937
  40f8cd:	add    BYTE PTR [ecx],dh
  40f8cf:	(bad)  
  40f8d0:	je     0x40f8c3
  40f8d2:	cli    
  40f8d3:	add    eax,0xc8008672
  40f8d8:	je     0x40f8af
  40f8da:	loope  0x40f919
  40f8dc:	adc    BYTE PTR [esi+0x5e],dh
  40f8df:	and    eax,ebp
  40f8e1:	mov    esi,0x30fec664
  40f8e6:	out    dx,eax
  40f8e7:	sbb    al,BYTE PTR [eax]
  40f8e9:	mov    ah,0x2d
  40f8eb:	mov    dl,0xfe
  40f8ed:	fsubr  QWORD PTR [edx+0x7af174c7]
  40f8f3:	scas   eax,DWORD PTR es:[edi]
  40f8f4:	jo     0x40f93c
  40f8f6:	add    bh,0x74
  40f8f9:	in     eax,dx
  40f8fa:	push   0xa
  40f8fc:	pusha  
  40f8fd:	jmp    0x2e914234
  40f902:	out    0x14,al
  40f904:	call   FWORD PTR [edx+ecx*4-0x7e64f852]
  40f90b:	(bad)  
  40f90c:	(bad)  
  40f90d:	pushf  
  40f90e:	pop    esi
  40f90f:	(bad)  
  40f910:	je     0x40f90b
  40f912:	cmp    DWORD PTR ds:0xd7400018,0x834fff6f
  40f91c:	rcl    BYTE PTR [eax+ebx*2],0xff
  40f920:	mov    ch,ah
  40f922:	leave  
  40f923:	rcl    dl,1
  40f925:	test   DWORD PTR [edi-0x27],0x463075fd
  40f92c:	test   BYTE PTR [eax],al
  40f92e:	cld    
  40f92f:	fdivr  st,st(5)
  40f931:	push   eax
  40f932:	add    bh,ch
  40f934:	pop    esi
  40f935:	or     al,ch
  40f937:	pop    ss
  40f938:	xlat   BYTE PTR ds:[ebx]
  40f939:	std    
  40f93a:	jmp    DWORD PTR [edx+0xd]
  40f93d:	push   0x0
  40f93f:	jo     0x40f919
  40f941:	add    DWORD PTR [eax],eax
  40f943:	or     BYTE PTR [edi-0x7c],al
  40f946:	add    al,dl
  40f948:	fdivr  st,st(5)
  40f94a:	push   eax
  40f94b:	inc    edx
  40f94c:	fdivr  st,st(5)
  40f94e:	jne    0x40f938
  40f950:	arpl   WORD PTR [eax],ax
  40f952:	push   0xffffffc8
  40f954:	loope  0x40f972
  40f956:	pusha  
  40f957:	enter  0xc709,0x85
  40f95b:	dec    eax
  40f95c:	loope  0x40f95b
  40f95e:	(bad)  
  40f95f:	call   0x9740f96d
  40f964:	mov    ?,edx
  40f966:	test   DWORD PTR [edi-0x27],0x9980000
  40f96d:	mov    DWORD PTR [ebp-0x21f00],0x988
  40f977:	inc    edi
  40f978:	(bad)  
  40f979:	cli    
  40f97a:	test   DWORD PTR [edi-0x27],0x998fffe
  40f981:	mov    edx,DWORD PTR [ebp+0x60]
  40f984:	inc    esp
  40f985:	adc    DWORD PTR [edx-0x78],ebp
  40f988:	inc    esi
  40f989:	test   al,dh
  40f98b:	inc    edi
  40f98c:	fscale 
  40f98e:	push   eax
  40f98f:	xor    DWORD PTR ds:0x1666eb86,ebp
  40f995:	ror    BYTE PTR [edi+0x0],1
  40f998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f999:	xor    al,0xdb
  40f99b:	test   BYTE PTR [esi-0x3a],0x31
  40f99f:	(bad)  
  40f9a0:	mov    esp,0x2d74cfdf
  40f9a5:	mov    bh,0x54
  40f9a7:	or     bl,cl
  40f9a9:	scas   eax,DWORD PTR es:[edi]
  40f9aa:	int    0x74
  40f9ac:	dec    ecx
  40f9ad:	jecxz  0x40f9e0
  40f9af:	inc    esp
  40f9b0:	mov    dl,0x9d
  40f9b2:	fcomi  st,st(6)
  40f9b4:	push   ds
  40f9b5:	aam    0x3
  40f9b7:	shrd   DWORD PTR [esi+0x2f310003],ebp,cl
  40f9be:	xchg   ecx,eax
  40f9bf:	jmp    0x40f9bf
  40f9c1:	jnp    0x40f991
  40f9c3:	jmp    FWORD PTR [edi]
  40f9c5:	inc    DWORD PTR cs:[eax]
  40f9c8:	xor    DWORD PTR [edx-0x63fa7b3b],esi
  40f9ce:	into   
  40f9cf:	(bad)  
  40f9d0:	xor    DWORD PTR [edx-0x5cb64223],esi
  40f9d6:	popa   
  40f9d7:	inc    ecx
  40f9d8:	xor    DWORD PTR ds:0x43caff89,edi
  40f9de:	iret   
  40f9df:	dec    edi
  40f9e0:	fnstenv [esi+0x2e]
  40f9e3:	add    BYTE PTR [ecx],dh
  40f9e5:	sub    eax,0xf37373c4
  40f9ea:	mov    bl,dl
  40f9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9ed:	arpl   di,cx
  40f9ef:	add    BYTE PTR [ecx],dh
  40f9f1:	dec    ebx
  40f9f2:	mov    fs,WORD PTR [edi-0x70]
  40f9f5:	rol    BYTE PTR [ebx+0x0],1
  40f9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9f9:	xor    eax,0x8e00fc04
  40f9fe:	add    esi,DWORD PTR [eax+ebp*8]
  40fa01:	int3   
  40fa02:	fwait
  40fa03:	add    al,BYTE PTR [eax]
  40fa05:	mov    ah,0xf2
  40fa07:	push   edi
  40fa08:	and    ebp,DWORD PTR [esi+0x9]
  40fa0b:	ins    BYTE PTR es:[edi],dx
  40fa0c:	mov    eax,0x21dc467
  40fa11:	xor    DWORD PTR [esi+edx*2-0x57d8a7a4],esi
  40fa18:	add    esp,DWORD PTR [esi+ecx*4-0x3bb03018]
  40fa1f:	cwde   
  40fa20:	fld    TBYTE PTR [esp+eiz*2-0x364bfc17]
  40fa27:	fisttp QWORD PTR [eax+0x3e90993]
  40fa2d:	cdq    
  40fa2e:	push   ss
  40fa2f:	dec    edx
  40fa30:	inc    ebp
  40fa31:	xor    DWORD PTR [esi-0x3be6fc95],edx
  40fa37:	int    0x33
  40fa39:	or     DWORD PTR [edx],esi
  40fa3b:	dec    ecx
  40fa3c:	add    al,0x31
  40fa3e:	adc    BYTE PTR [ecx-0xc777fa9],ch
  40fa44:	ins    BYTE PTR es:[edi],dx
  40fa45:	imul   ecx,DWORD PTR [edx-0x17],0x3
  40fa49:	lea    esp,es:[edi+0x3]
  40fa4d:	xor    DWORD PTR [ecx],ecx
  40fa4f:	sahf   
  40fa50:	cwde   
  40fa51:	into   
  40fa52:	mov    ebx,0x8dafce95
  40fa57:	mov    dh,dl
  40fa59:	xlat   BYTE PTR ds:[ebx]
  40fa5a:	ret    
  40fa5b:	test   DWORD PTR [eax-0x31824426],ebx
  40fa61:	add    BYTE PTR [edi-0x40297373],dh
  40fa67:	ret    
  40fa68:	pop    ebx
  40fa69:	mov    dh,bl
  40fa6b:	mov    ebx,0x2efece65
  40fa70:	call   0xe9702bce
  40fa75:	pop    ecx
  40fa76:	xor    DWORD PTR [edi],ebp
  40fa78:	jmp    0x3de9a7fd
  40fa7d:	into   
  40fa7e:	(bad)  
  40fa7f:	pop    eax
  40fa80:	ds clc 
  40fa82:	test   eax,0x32a8004f
  40fa87:	adc    al,al
  40fa89:	mov    ch,0xef
  40fa8b:	ret    
  40fa8c:	je     0x40fa8b
  40fa8e:	jg     0x40fb0c
  40fa90:	xlat   BYTE PTR ds:[ebx]
  40fa91:	push   ss
  40fa92:	ja     0x40fa56
  40fa94:	(bad)  
  40fa95:	pop    esp
  40fa96:	mov    ?,WORD PTR [edx+0x3c670efe]
  40fa9c:	adc    BYTE PTR [esi],al
  40fa9e:	test   eax,0x74fef6d7
  40faa3:	stos   DWORD PTR es:[edi],eax
  40faa4:	maskmovq mm5,(bad)
  40faa5:	imul   DWORD PTR [edx+eax*8-0x2]
  40faa9:	xor    al,0x86
  40faab:	mov    edx,0x310de6fe
  40fab0:	pop    esi
  40fab1:	jmp    0xd65da8e8
  40fab6:	xchg   BYTE PTR ds:0xbbf594ff,bl
  40fabc:	inc    dh
  40fabe:	cld    
  40fabf:	jge    0x40faac
  40fac1:	mov    dh,0xf4
  40fac3:	ret    
  40fac4:	(bad)  
  40fac5:	cmp    al,0x0
  40fac7:	add    eax,0xdc95b4c4
  40facc:	ret    
  40facd:	(bad)  
  40face:	xchg   ecx,eax
  40facf:	xlat   BYTE PTR ds:[ebx]
  40fad0:	(bad)  
  40fad3:	hlt    
  40fad4:	jge    0x40fac1
  40fad6:	sahf   
  40fad7:	in     al,dx
  40fad8:	ret    
  40fad9:	out    0x9,eax
  40fadb:	add    al,0x9
  40fadd:	add    BYTE PTR [eax+0x140016f3],dh
  40fae3:	dec    eax
  40fae4:	scas   al,BYTE PTR es:[edi]
  40fae5:	sub    BYTE PTR [ebp-0xb00a35b],0xb6
  40faec:	stos   BYTE PTR es:[edi],al
  40faed:	or     al,dh
  40faef:	xor    cl,BYTE PTR [ecx]
  40faf1:	or     ebp,DWORD PTR [ecx]
  40faf3:	dec    BYTE PTR [ebx]
  40faf5:	pop    esi
  40faf6:	and    BYTE PTR [ebx+0xe],dh
  40faf9:	add    BYTE PTR [eax],bh
  40fafb:	lea    eax,[edi+0x419a00bf]
  40fb01:	iret   
  40fb02:	(bad)  
  40fb03:	int    0xe2
  40fb05:	dec    esi
  40fb06:	push   edx
  40fb07:	inc    edi
  40fb08:	pop    edx
  40fb09:	or     al,0xe8
  40fb0b:	and    DWORD PTR [edx-0x2],eax
  40fb0e:	inc    DWORD PTR [ebx+0x1c4d877f]
  40fb14:	loopne 0x40fb1e
  40fb16:	ss push edi
  40fb18:	pushf  
  40fb19:	inc    edx
  40fb1a:	sub    DWORD PTR [edi+eax*1+0x45],edx
  40fb1e:	aam    0x99
  40fb20:	mov    edi,esi
  40fb22:	adc    al,0xca
  40fb24:	(bad)  
  40fb25:	sub    esi,esi
  40fb27:	rcr    DWORD PTR [ecx-0x30],1
  40fb2a:	jmp    0x40fb2c
  40fb2c:	jo     0x40fb4a
  40fb2e:	movzx  ebx,BYTE PTR [ebx+eiz*1-0x14]
  40fb33:	push   eax
  40fb34:	cmp    dh,0x62
  40fb37:	inc    ecx
  40fb38:	or     BYTE PTR [ebx+0x44],al
  40fb3b:	fcomp  DWORD PTR [eax-0x1b]
  40fb3e:	push   cs
  40fb3f:	pop    edi
  40fb40:	sbb    BYTE PTR [esi],al
  40fb42:	add    esp,0x14
  40fb45:	inc    ebx
  40fb46:	inc    esp
  40fb47:	fcomp  DWORD PTR [eax]
  40fb49:	aam    0x73
  40fb4b:	shl    al,1
  40fb4d:	outs   dx,DWORD PTR ds:[esi]
  40fb4e:	je     0x40fb4f
  40fb50:	xchg   edi,eax
  40fb51:	ds inc esp
  40fb53:	ror    BYTE PTR [esi],1
  40fb55:	mov    ah,bh
  40fb57:	adc    al,0x3a
  40fb59:	js     0x40fbda
  40fb5b:	gs pushf 
  40fb5d:	aam    0xfe
  40fb5f:	(bad)  
  40fb60:	fcom   st(4)
  40fb62:	jae    0x40fb38
  40fb64:	and    dh,bh
  40fb66:	bound  eax,QWORD PTR [ecx-0x38]
  40fb69:	inc    edx
  40fb6a:	inc    esp
  40fb6b:	fcomp  DWORD PTR [eax]
  40fb6d:	in     eax,0xde
  40fb6f:	pop    esi
  40fb70:	cwde   
  40fb71:	add    eax,0x4294c483
  40fb76:	inc    esp
  40fb77:	fdiv   DWORD PTR [ecx]
  40fb79:	or     bl,0x74
  40fb7c:	add    DWORD PTR [edi-0x67],0x7a4a8e75
  40fb83:	inc    esp
  40fb84:	popa   
  40fb85:	xor    al,0x46
  40fb87:	int3   
  40fb88:	loope  0x40fb84
  40fb8a:	push   ebp
  40fb8b:	ror    BYTE PTR [ecx],1
  40fb8d:	mov    ds:0x3100415f,al
  40fb92:	jmp    0x40fba9
  40fb94:	mov    edi,0xe80270f9
  40fb99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb9b:	retf   
  40fb9c:	(bad)  
  40fb9d:	sub    dh,al
  40fb9f:	sti    
  40fba0:	and    DWORD PTR [esi-0x47fffd51],0x6c
  40fba7:	mov    edx,0x2ebbc82
  40fbac:	shrd   DWORD PTR ds:0xa7310003,ebp,cl
  40fbb3:	push   eax
  40fbb4:	or     al,0x19
  40fbb6:	jmp    0x8171fbe4
  40fbbb:	jecxz  0x40fb3f
  40fbbd:	icebp  
  40fbbe:	mov    ah,0x7b
  40fbc0:	inc    esp
  40fbc1:	rol    edi,0x50
  40fbc4:	or     al,0xb6
  40fbc6:	in     eax,0x8f
  40fbc8:	inc    BYTE PTR [esi+eiz*2+0x6ff1447a]
  40fbcf:	push   eax
  40fbd0:	enter  0xedbe,0xbf
  40fbd4:	(bad)  
  40fbd5:	ins    BYTE PTR es:[edi],dx
  40fbd6:	pop    esi
  40fbd7:	add    al,0x0
  40fbd9:	xor    DWORD PTR [edx-0x1447c37b],esi
  40fbdf:	inc    esp
  40fbe0:	add    BYTE PTR [ecx],dh
  40fbe2:	mov    esi,0x4a6c8d32
  40fbe7:	xor    al,0x6a
  40fbe9:	xor    BYTE PTR [esp+eax*1],cl
  40fbec:	push   0x31
  40fbee:	pop    ebp
  40fbef:	inc    ecx
  40fbf0:	mov    al,0x1
  40fbf2:	or     ebx,edx
  40fbf4:	add    eax,DWORD PTR [eax]
  40fbf6:	mov    ah,0x46
  40fbf8:	sub    DWORD PTR [esi+ebx*4],esi
  40fbfb:	push   ss
  40fbfc:	jo     0x40fc3d
  40fbfe:	lock or dl,ah
  40fc01:	ret    
  40fc02:	add    bh,bl
  40fc04:	imul   ecx,DWORD PTR [ecx-0x3b],0xb217b509
  40fc0b:	fld    DWORD PTR ds:[ebx]
  40fc0e:	std    
  40fc0f:	adc    BYTE PTR [edx+0x31],ah
  40fc12:	inc    ecx
  40fc13:	daa    
  40fc14:	cs push es
  40fc16:	or     DWORD PTR es:[esi],ebx
  40fc19:	push   ecx
  40fc1a:	sub    eax,eax
  40fc1c:	fwait
  40fc1d:	mov    edx,DWORD PTR [edi+0x36]
  40fc20:	dec    ebp
  40fc21:	retf   
  40fc22:	lds    ecx,FWORD PTR [ecx+edx*4]
  40fc25:	push   es
  40fc26:	xor    DWORD PTR [eax-0x425e23c2],esi
  40fc2c:	cmc    
  40fc2d:	retf   0x3637
  40fc30:	sub    eax,0xe95d1cdc
  40fc35:	add    esp,DWORD PTR [esi]
  40fc37:	ss mov cl,0xdb
  40fc3a:	sbb    al,0x3a
  40fc3c:	(bad)  
  40fc3d:	retf   0x3617
  40fc40:	mov    ecx,0xc63a04db
  40fc45:	retf   0xd264
  40fc48:	stos   BYTE PTR es:[edi],al
  40fc49:	idiv   esi
  40fc4b:	push   esp
  40fc4c:	(bad)  
  40fc4d:	xlat   BYTE PTR ds:[ebx]
  40fc4e:	mov    bl,0xc4
  40fc50:	mov    al,ds:0x38bd7578
  40fc55:	pop    esp
  40fc56:	or     al,0x2c
  40fc58:	sub    BYTE PTR [eax+eax*1],al
  40fc5b:	dec    ebx
  40fc5c:	push   es
  40fc5d:	add    eax,DWORD PTR [ecx+ecx*2]
  40fc60:	push   ss
  40fc61:	or     al,BYTE PTR [ebp+0x31]
  40fc64:	mov    cl,0x8a
  40fc66:	sub    BYTE PTR [ecx],dh
  40fc68:	or     DWORD PTR [ebx+eax*8+0x2f],esp
  40fc6c:	xchg   ecx,eax
  40fc6d:	jmp    FWORD PTR [eax+0x62000932]
  40fc73:	popa   
  40fc74:	mov    ebp,0x4529fb8a
  40fc79:	clc    
  40fc7a:	mov    ecx,0x56fc346b
  40fc7f:	pop    esp
  40fc80:	sbb    eax,0x878b2985
  40fc85:	popf   
  40fc86:	jmp    0xbcc405bd
  40fc8b:	push   0xffffffbf
  40fc8d:	or     eax,0xfec0066d
  40fc92:	jmp    0xea15410a
  40fc97:	xor    cl,BYTE PTR [ecx]
  40fc99:	add    BYTE PTR [esi],ah
  40fc9b:	icebp  
  40fc9c:	loopne 0x40fc9d
  40fc9e:	call   0xa50805d5
  40fca3:	and    bh,0xff
  40fca6:	call   0x2d85c4dd
  40fcab:	xor    cl,BYTE PTR [ecx]
  40fcad:	add    cl,ch
  40fcaf:	mov    bh,0x54
  40fcb1:	clc    
  40fcb2:	bound  esp,QWORD PTR [esi+ecx*4]
  40fcb5:	inc    esp
  40fcb6:	mov    ch,0x5d
  40fcb8:	mov    WORD PTR [ecx+edi*4+0x65],es
  40fcbc:	xor    eax,DWORD PTR [ecx]
  40fcbe:	(bad)  
  40fcbf:	add    BYTE PTR [esi-0x3f],ah
  40fcc2:	(bad)  
  40fcc3:	cmp    ecx,DWORD PTR [ecx]
  40fcc5:	adc    al,0xc0
  40fcc7:	cmp    al,0x41
  40fcc9:	mov    bh,BYTE PTR [ebp+ebp*4+0x32]
  40fccd:	xor    al,0x4e
  40fccf:	push   0x6e
  40fcd1:	aad    0xff
  40fcd3:	xor    al,0x73
  40fcd5:	xor    DWORD PTR [ebp+0xa],eax
  40fcd8:	jb     0x40fce3
  40fcda:	call   DWORD PTR [ecx+eiz*4]
  40fcdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcde:	out    dx,al
  40fcdf:	xor    al,0x2d
  40fce1:	or     DWORD PTR [ebx],ecx
  40fce3:	test   eax,0x661361
  40fce8:	xchg   edi,eax
  40fce9:	add    eax,0xfe410000
  40fcee:	(bad)  
  40fcef:	jmp    0x40fcb8
  40fcf1:	leave  
  40fcf2:	inc    ebx
  40fcf3:	enter  0xa98,0x0
  40fcf7:	add    BYTE PTR [edi],cl
  40fcf9:	dec    esi
  40fcfa:	enter  0x85ff,0x6e
  40fcfe:	std    
  40fcff:	jne    0x40fc91
  40fd01:	loop   0x40fce7
  40fd03:	std    
  40fd04:	dec    edi
  40fd06:	std    
  40fd07:	jne    0x40fd2d
  40fd09:	fnstsw WORD PTR [eax]
  40fd0b:	pop    ebp
  40fd0c:	mov    BYTE PTR [edx],cl
  40fd0e:	cmp    DWORD PTR [ebp+0x20],0x5
  40fd12:	je     0x40fd1c
  40fd14:	pop    ds
  40fd15:	dec    esi
  40fd16:	fsubr  st,st(0)
  40fd18:	jl     0x40fd01
  40fd1a:	(bad)  
  40fd1b:	inc    DWORD PTR [ebx+0x41]
  40fd1e:	mov    dl,BYTE PTR [ebp+0x40]
  40fd21:	cmp    al,0x11
  40fd23:	inc    DWORD PTR [eax]
  40fd25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd26:	sar    ch,cl
  40fd28:	push   edx
  40fd29:	inc    eax
  40fd2a:	cmp    eax,0xb6c3fc54
  40fd2f:	std    
  40fd30:	jne    0x40fd6e
  40fd32:	rcl    DWORD PTR [eax+0x8],1
  40fd35:	push   ecx
  40fd36:	mov    DWORD PTR [edx],0xeb3c6500
  40fd3c:	adc    esp,0xffffffa9
  40fd3f:	push   esp
  40fd40:	cmp    DWORD PTR ds:0x18416242,0xa
  40fd47:	jne    0x40fd67
  40fd49:	xlat   BYTE PTR ds:[ebx]
  40fd4a:	mov    esi,0x5496387
  40fd4f:	add    DWORD PTR [eax],eax
  40fd51:	or     BYTE PTR [edx],cl
  40fd53:	mov    esi,0x4a7b8d
  40fd58:	jmp    0x40fd31
  40fd5a:	daa    
  40fd5b:	shl    DWORD PTR [esi],0xca
  40fd5e:	test   ah,al
  40fd60:	add    dh,BYTE PTR [ecx]
  40fd62:	push   cs
  40fd63:	test   DWORD PTR ds:0x82d51531,edi
  40fd69:	add    al,0xd
  40fd6b:	cmp    eax,0xf7b03141
  40fd70:	cmp    DWORD PTR [edx-0x4dfffd51],0x6c
  40fd77:	popa   
  40fd78:	dec    ebx
  40fd79:	lock scas eax,DWORD PTR es:[edi]
  40fd7b:	add    cl,BYTE PTR [edi]
  40fd7d:	mov    ch,0x4d
  40fd7f:	add    eax,DWORD PTR [eax]
  40fd81:	xor    DWORD PTR [ebx],esi
  40fd83:	push   es
  40fd84:	cdq    
  40fd85:	cli    
  40fd86:	jo     0x40fd8a
  40fd88:	add    BYTE PTR [eax],al
  40fd8a:	ss sub al,0xe2
  40fd8d:	(bad)  
  40fd8e:	jle    0x40fd3f
  40fd90:	mov    edi,0x2af7544
  40fd95:	add    BYTE PTR [ecx],dh
  40fd97:	out    0x3d,eax
  40fd99:	clc    
  40fd9a:	xor    DWORD PTR [eax+0x64ac0002],esi
  40fda0:	(bad)  
  40fda1:	dec    edi
  40fda2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fda3:	ins    BYTE PTR es:[edi],dx
  40fda4:	retf   0xdb4f
  40fda7:	scas   eax,DWORD PTR es:[edi]
  40fda8:	pop    edx
  40fda9:	xlat   BYTE PTR ds:[ebx]
  40fdaa:	shl    BYTE PTR [eax+0x2],cl
  40fdad:	jmp    DWORD PTR [ecx+edx*4]
  40fdb0:	cmp    eax,DWORD PTR [ecx+0x31]
  40fdb3:	stos   DWORD PTR es:[edi],eax
  40fdb4:	ret    0xb50e
  40fdb7:	hlt    
  40fdb8:	add    al,BYTE PTR [eax]
  40fdba:	xor    DWORD PTR [edi],ebp
  40fdbc:	dec    ecx
  40fdbd:	clc    
  40fdbe:	xor    DWORD PTR [ebx-0x4dce5482],ebp
  40fdc4:	add    al,BYTE PTR [ebx+0xf03ce8c]
  40fdca:	lods   eax,DWORD PTR ds:[esi]
  40fdcb:	nop
  40fdcc:	add    eax,DWORD PTR [eax]
  40fdce:	xor    DWORD PTR [edi],esi
  40fdd0:	push   ecx
  40fdd1:	cld    
  40fdd2:	or     BYTE PTR [ecx],dh
  40fdd4:	add    al,0x0
  40fdd6:	xor    DWORD PTR [ebx+edi*2],edx
  40fdd9:	xor    eax,0xec1f09e6
  40fdde:	scas   eax,DWORD PTR es:[edi]
  40fddf:	inc    esi
  40fde0:	cdq    
  40fde1:	(bad)  
  40fde2:	pop    esp
  40fde3:	sbb    eax,0x31c54166
  40fde8:	pop    esp
  40fde9:	arpl   WORD PTR [eax+0x9],si
  40fdec:	xchg   ecx,eax
  40fded:	in     eax,dx
  40fdee:	add    BYTE PTR [edx+0x9],bl
  40fdf1:	jmp    0xa8c9d4aa
  40fdf6:	add    bh,BYTE PTR [eax-0x4ba376ba]
  40fdfc:	sub    BYTE PTR [eax+0x4546ae03],ch
  40fe02:	mov    edi,0x3e8aced
  40fe07:	xor    DWORD PTR [ecx],ecx
  40fe09:	pop    esp
  40fe0a:	inc    ecx
  40fe0b:	cdq    
  40fe0c:	pop    ecx
  40fe0d:	rol    DWORD PTR [ebx+ecx*1],cl
  40fe10:	or     ebx,edx
  40fe12:	add    esp,DWORD PTR [esi+eax*2+0x8db3449]
  40fe19:	pop    esp
  40fe1a:	inc    ecx
  40fe1b:	popa   
  40fe1c:	pop    ecx
  40fe1d:	es icebp 
  40fe1f:	mov    ecx,0x2a03a850
  40fe24:	leave  
  40fe25:	pushf  
  40fe26:	sbb    BYTE PTR [edx-0x42fc02c2],dh
  40fe2c:	jecxz  0x40fe6e
  40fe2e:	add    eax,0xfae90931
  40fe33:	jbe    0x40fe6a
  40fe35:	ffreep st(6)
  40fe37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe38:	adc    esi,ebp
  40fe3a:	push   eax
  40fe3b:	sbb    DWORD PTR [ebx+ebx*2-0xecce028],edi
  40fe42:	pop    ebx
  40fe43:	sub    eax,0x1685c609
  40fe48:	jbe    0x40fe1c
  40fe4a:	mov    BYTE PTR [edi],0xbc
  40fe4d:	cmp    ebx,eax
  40fe4f:	push   ss
  40fe50:	loop   0x40fe74
  40fe52:	add    al,0x0
  40fe54:	xor    DWORD PTR [ebx+0x0],ebx
  40fe57:	mov    dh,0x29
  40fe59:	rol    DWORD PTR [edx+0x7c86e6a7],0xa1
  40fe60:	xor    dh,BYTE PTR ds:0x92c6a09
  40fe66:	(bad)  
  40fe68:	addr16 mov esp,0x34ef8efe
  40fe6e:	cld    
  40fe6f:	xchg   cl,al
  40fe71:	and    al,0x4b
  40fe73:	sub    BYTE PTR ds:0xaeabc95b,ch
  40fe79:	mov    ebx,0x867e6253
  40fe7e:	ret    
  40fe7f:	popa   
  40fe80:	clc    
  40fe81:	or     BYTE PTR [edx+0xe],ch
  40fe84:	outs   dx,BYTE PTR ds:[esi]
  40fe85:	xor    al,0x8
  40fe87:	inc    ecx
  40fe88:	arpl   WORD PTR [edi],bp
  40fe8a:	dec    DWORD PTR [esi+0x5]
  40fe8d:	inc    ebp
  40fe8e:	cld    
  40fe8f:	push   0x29
  40fe91:	jp     0x40fedd
  40fe93:	test   al,0x32
  40fe95:	or     DWORD PTR [esi+esi*8-0x51],esi
  40fe99:	inc    esp
  40fe9a:	clc    
  40fe9b:	jmp    0xd24107d2
  40fea0:	jb     0x40feed
  40fea2:	push   eax
  40fea3:	mov    ecx,0xbbf854d9
  40fea8:	ja     0x40febe
  40feaa:	mov    cl,0xa2
  40feac:	in     eax,dx
  40fead:	or     BYTE PTR [ebp-0x14f912d7],al
  40feb3:	retf   0x3cb3
  40feb6:	clc    
  40feb7:	jmp    0xeb487fbc
  40febc:	ror    BYTE PTR [edx+0x3529a298],cl
  40fec2:	mov    edx,0x35ece174
  40fec7:	or     cl,al
  40fec9:	pusha  
  40feca:	sar    dh,0xce
  40fecd:	mov    BYTE PTR [ebp-0x8],dl
  40fed0:	add    BYTE PTR [ebx-0xf8a0249],al
  40fed6:	les    edx,FWORD PTR [eax+0x8]
  40fed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feda:	dec    edx
  40fedb:	or     al,ch
  40fedd:	pop    ds
  40fede:	ret    0xfffd
  40fee1:	xchg   edi,eax
  40fee2:	dec    edx
  40fee3:	or     al,ch
  40fee5:	jo     0x40feaa
  40fee7:	std    
  40fee8:	jmp    DWORD PTR [edi+0x1dfffc4a]
  40feee:	mov    ebp,0xc424d3e6
  40fef3:	std    
  40fef4:	leave  
  40fef5:	mov    cl,BYTE PTR [ecx]
  40fef7:	add    BYTE PTR [ebp+0x13],dl
  40fefa:	loope  0x40fe7d
  40fefc:	les    ebp,FWORD PTR [eax]
  40fefe:	jmp    0x40ff56
  40ff00:	push   ebx
  40ff01:	and    ebp,edx
  40ff03:	or     eax,edi
  40ff05:	mov    al,BYTE PTR [esi]
  40ff07:	add    BYTE PTR [eax],al
  40ff09:	cwde   
  40ff0a:	lds    esi,FWORD PTR [ebx+0x8]
  40ff0d:	lock mov cl,0x58
  40ff10:	add    BYTE PTR [eax-0x40fe0977],cl
  40ff16:	mov    edi,0xe5c3c029
  40ff1b:	pop    ebp
  40ff1c:	leave  
  40ff1d:	add    BYTE PTR [edx],bl
  40ff1f:	mov    ebp,0x4040d0fe
  40ff24:	push   esp
  40ff25:	or     al,0xe1
  40ff27:	push   es
  40ff28:	mov    ebx,eax
  40ff2a:	push   edi
  40ff2b:	mov    al,bl
  40ff2d:	add    BYTE PTR [eax+0x6],bl
  40ff30:	mov    esi,DWORD PTR [ebp+0x40]
  40ff33:	inc    ecx
  40ff34:	jl     0x40ff3e
  40ff36:	and    ebp,edi
  40ff38:	mov    ebx,DWORD PTR gs:[esi]
  40ff3b:	xchg   dl,bh
  40ff3d:	xor    BYTE PTR [edx+0x51fc7ec0],ch
  40ff43:	dec    esp
  40ff44:	add    eax,0xeb15e480
  40ff49:	sbb    esi,DWORD PTR [ecx]
  40ff4b:	xor    bh,al
  40ff4d:	inc    eax
  40ff4e:	sbb    ebp,0xffffff82
  40ff51:	sti    
  40ff52:	ja     0x40ff4f
  40ff54:	sti    
  40ff55:	jg     0x40ff5c
  40ff57:	icebp  
  40ff58:	add    ebx,0x3b
  40ff5b:	(bad)  
  40ff5c:	stc    
  40ff5d:	sub    dh,cl
  40ff5f:	push   ss
  40ff60:	and    eax,0xfa6de85e
  40ff65:	call   FWORD PTR [edx]
  40ff67:	loopne 0x40ffb9
  40ff69:	or     BYTE PTR ds:0x15044bd9,cl
  40ff6f:	loopne 0x40ff48
  40ff71:	push   ss
  40ff72:	std    
  40ff73:	lock push ecx
  40ff75:	or     dh,ch
  40ff77:	loope  0x40ffc5
  40ff79:	push   es
  40ff7a:	pop    ebp
  40ff7b:	icebp  
  40ff7c:	dec    DWORD PTR [ecx]
  40ff7e:	call   0xc2fa:0xc017a8
  40ff85:	and    al,0xc9
  40ff87:	jae    0x40ff40
  40ff89:	add    al,al
  40ff8b:	xchg   ecx,eax
  40ff8c:	stos   DWORD PTR es:[edi],eax
  40ff8d:	clc    
  40ff8e:	ret    
  40ff8f:	(bad)  [esi+0x7f]
  40ff92:	lds    esi,FWORD PTR [ebx]
  40ff94:	mov    bh,0xa7
  40ff96:	je     0x40ff6b
  40ff98:	ss ds or al,0x6e
  40ff9c:	mov    edi,0xea694473
  40ffa1:	dec    ebp
  40ffa2:	or     BYTE PTR [esi-0x13393994],ch
  40ffa8:	adc    eax,DWORD PTR [ebx]
  40ffaa:	add    BYTE PTR [ecx],dh
  40ffac:	mov    al,0x7f
  40ffae:	cmp    al,0xa8
  40ffb0:	inc    cx
  40ffb2:	add    BYTE PTR [ecx],dh
  40ffb4:	cmp    al,0x2d
  40ffb6:	(bad)  
  40ffb7:	in     al,dx
  40ffb8:	mov    edi,0x8c306a31
  40ffbd:	add    ch,BYTE PTR [edx+0x31]
  40ffc0:	mov    WORD PTR [edx],es
  40ffc2:	push   0x31
  40ffc4:	or     DWORD PTR [ecx+ecx*2+0x19],esi
  40ffc8:	pop    edx
  40ffc9:	ficomp WORD PTR [ecx]
  40ffcb:	test   al,0x44
  40ffcd:	sub    BYTE PTR [edx+edi*1],al
  40ffd0:	leave  
  40ffd1:	push   esp
  40ffd2:	(bad)  
  40ffd3:	mov    bl,0x36
  40ffd5:	mov    ebp,0x71fd7d04
  40ffda:	dec    ecx
  40ffdb:	cmp    eax,0x2bb42384
  40ffe0:	add    DWORD PTR [esi],esi
  40ffe2:	out    dx,al
  40ffe3:	fiadd  DWORD PTR [ebx+ebx*1+0x36ab00b8]
  40ffea:	icebp  
  40ffeb:	mov    ?,WORD PTR [ebp-0x47]
  40ffee:	mov    DWORD PTR [esi],eax
  40fff0:	ret    0x616d
  40fff3:	dec    ecx
  40fff4:	sub    eax,0xa7b3fbb8
  40fff9:	or     DWORD PTR [esi+0x39],edi
  40fffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fffd:	mov    eax,ds:0x9315cbc
  410002:	xor    DWORD PTR ds:0x5ee90931,eax
  410008:	not    BYTE PTR [esi+0x30]
  41000b:	(bad)  
  41000c:	or     DWORD PTR ss:[edx],eax
  41000f:	(bad)  
  410010:	jmp    0x410069
  410012:	scas   eax,DWORD PTR es:[edi]
  410013:	int3   
  410014:	jo     0x410017
  410016:	jmp    0x69e6aa73
  41001b:	enter  0x21ae,0xe9
  41001f:	jecxz  0x410087
  410021:	mov    eax,0xb7cf0240
  410026:	and    eax,0x90b4ed8d
  41002b:	add    edx,DWORD PTR [ecx]
  41002d:	or     ecx,ebp
  41002f:	stos   DWORD PTR es:[edi],eax
  410030:	add    DWORD PTR [edi],esp
  410032:	push   cs
  410033:	ret    
  410034:	test   eax,0x312c014e
  410039:	jmp    0xed5a0426
  41003e:	inc    DWORD PTR [esi-0x5b77490d]
  410044:	out    0x2f,al
  410046:	add    BYTE PTR [ecx],cl
  410048:	sub    eax,0xf6e809
  41004d:	inc    eax
  41004e:	mov    eax,0xb97960fe
  410053:	addr16 jmp 0xd23fb86b
  410059:	and    al,0x27
  41005b:	(bad)  
  41005c:	mov    esi,0x41ec4cbd
  410061:	sub    eax,0x8ae8ffe9
  410066:	mov    ah,0x6c
  410068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410069:	repz add BYTE PTR [ecx+edx*4+0x1a],0x9
  41006f:	and    cl,ch
  410071:	xor    ah,BYTE PTR [ecx-0x490c0311]
  410077:	mov    BYTE PTR [ecx+ecx*4],ch
  41007a:	mov    dh,0x74
  41007c:	fstp   DWORD PTR [edx+0x1d]
  41007f:	sub    BYTE PTR fs:0xca6d74b8,ch
  410086:	xlat   BYTE PTR ds:[ebx]
  410087:	pop    eax
  410088:	jmp    0xee048cbf
  41008d:	jae    0x4100cb
  41008f:	adc    cl,al
  410091:	fwait
  410092:	sub    eax,DWORD PTR [ecx-0x17]
  410095:	jae    0x4100d3
  410097:	clc    
  410098:	push   ecx
  410099:	popa   
  41009a:	push   eax
  41009b:	add    cl,ch
  41009d:	mov    bh,0xcb
  41009f:	or     esi,DWORD PTR [esi]
  4100a1:	sub    DWORD PTR [ecx],ebx
  4100a3:	push   0x4a16ed
  4100a8:	sbb    DWORD PTR es:[ebp+0x8ed63e7],edi
  4100af:	add    BYTE PTR [edx+0x0],ch
  4100b2:	outs   dx,BYTE PTR ds:[esi]
  4100b3:	add    edi,edi
  4100b5:	xchg   esp,eax
  4100b6:	and    ah,BYTE PTR [ecx]
  4100b8:	pop    ebx
  4100b9:	add    BYTE PTR [esp+ecx*2+0x7aa5ff00],ah
  4100c0:	out    0xa7,al
  4100c2:	ror    DWORD PTR [edx],0x0
  4100c5:	adc    DWORD PTR [esi+eax*1-0x1],0x75
  4100ca:	sbb    bl,ah
  4100cc:	ins    DWORD PTR es:[edi],dx
  4100cd:	fs pop ecx
  4100cf:	or     eax,0x65ec75ff
  4100d4:	xchg   edx,eax
  4100d5:	pop    ecx
  4100d6:	or     BYTE PTR [ebx],cl
  4100d8:	add    esp,0xfffffffc
  4100db:	leave  
  4100dc:	jae    0x4100ea
  4100de:	add    BYTE PTR [ecx-0x3627be9e],0x73
  4100e5:	call   0x988bda
  4100ea:	enter  0xc28d,0xc
  4100ee:	scas   eax,DWORD PTR es:[edi]
  4100ef:	dec    BYTE PTR [edi]
  4100f1:	push   0x40e148
  4100f6:	scas   eax,DWORD PTR es:[edi]
  4100f7:	(bad)  
  4100f8:	jecxz  0x4100e2
  4100fa:	push   ds
  4100fb:	push   edx
  4100fc:	add    BYTE PTR [eax],al
  4100fe:	sbb    eax,ecx
  410100:	or     ch,BYTE PTR [edx-0x68]
  410103:	leave  
  410104:	jae    0x410102
  410106:	paddd  mm1,QWORD PTR [ebx]
  410109:	push   DWORD PTR ds:0x98414688
  41010f:	bound  edx,QWORD PTR [eax+esi*2-0x21]
  410113:	mov    DWORD PTR [edi-0x1917ffbb],0x72b5feff
  41011d:	std    
  41011e:	jne    0x41017c
  410120:	leave  
  410121:	xor    edi,DWORD PTR [edi-0x17ffb470]
  410127:	mov    dl,bh
  410129:	(bad)  
  41012a:	jmp    ecx
  41012c:	dec    ebp
  41012d:	fsubr  QWORD PTR [edx+0x58]
  410130:	leave  
  410131:	jae    0x410127
  410133:	xor    DWORD PTR [edi],ebx
  410135:	aaa    
  410136:	or     al,0x3e
  410138:	fnstsw WORD PTR [edi+0x47]
  41013b:	lock lahf 
  41013d:	stos   BYTE PTR es:[edi],al
  41013e:	sub    DWORD PTR [ecx+0x6c88bfb7],esp
  410144:	sbb    BYTE PTR [esi],ch
  410146:	add    BYTE PTR [esi],bl
  410148:	cmp    eax,0xd89cfeb3
  41014d:	mov    edi,0x42f7ce34
  410152:	add    BYTE PTR [ecx],bl
  410154:	mov    ah,0x32
  410156:	(bad)  
  410157:	(bad)  
  410158:	sub    BYTE PTR [esi-0x2c],al
  41015b:	mov    esp,DWORD PTR [eax+0x76dd74bf]
  410161:	xor    eax,0x7fb4e6e8
  410166:	inc    edi
  410167:	jo     0x410109
  410169:	stos   BYTE PTR es:[edi],al
  41016a:	std    
  41016b:	inc    esi
  41016c:	outs   dx,DWORD PTR ds:[esi]
  41016d:	mov    edi,0x8d707488
  410172:	inc    esp
  410173:	icebp  
  410174:	out    dx,eax
  410175:	shl    BYTE PTR [ebp+edx*8-0x7a],0x35
  41017a:	or     al,0x0
  41017c:	mov    dh,0x74
  41017e:	jg     0x4101c7
  410180:	lock lahf 
  410182:	stos   BYTE PTR es:[edi],al
  410183:	in     eax,0x16
  410185:	aas    
  410186:	ror    BYTE PTR [eax+0x7c8393f4],0x91
  41018d:	lahf   
  41018e:	je     0x43a15a
  410194:	mov    dl,0xdc
  410196:	(bad)  
  410197:	jmp    FWORD PTR [edi]
  410199:	sub    al,0x6e
  41019b:	push   DWORD PTR [esi-0x61]
  41019e:	cmp    DWORD PTR [ecx+eax*4-0x61],0xf
  4101a3:	test   BYTE PTR [edx-0x53fffd61],dl
  4101a9:	ins    BYTE PTR es:[edi],dx
  4101aa:	(bad)  
  4101ab:	dec    edi
  4101ac:	push   esi
  4101ad:	or     BYTE PTR [edi+edx*8-0x3fe3a7aa],bl
  4101b4:	inc    edi
  4101b5:	add    DWORD PTR [ecx],ebp
  4101b7:	adc    BYTE PTR [ebp+0x3103e885],dh
  4101bd:	mov    al,BYTE PTR [ebx+0x65042ec7]
  4101c3:	xchg   BYTE PTR [esi],ah
  4101c5:	mov    ch,0xe8
  4101c7:	mov    ?,WORD PTR [ebp-0x3f]
  4101ca:	cwde   
  4101cb:	rcr    BYTE PTR [ebp+0xdf2d0d9],0xb5
  4101d2:	fisttp QWORD PTR [ebx]
  4101d4:	icebp  
  4101d5:	cmp    eax,0xc17d835c
  4101da:	call   0xd9628816
  4101df:	add    eax,DWORD PTR [eax]
  4101e1:	fidiv  WORD PTR [ebx-0x43]
  4101e4:	cmp    DWORD PTR [ecx],edi
  4101e6:	mov    eax,ds:0xb4de2cd3
  4101eb:	lods   eax,DWORD PTR ds:[esi]
  4101ec:	cmp    ecx,edx
  4101ee:	mov    ah,0x1b
  4101f0:	or     al,0xd9
  4101f2:	cmp    eax,0xb4c7bf10
  4101f7:	sbb    esp,eax
  4101f9:	mov    edi,0x49abe13e
  4101fe:	and    al,BYTE PTR [esi-0x5ec15041]
  410204:	mov    edi,0x5e81011d
  410209:	or     BYTE PTR [ebp+ebp*2+0x65cd1dbf],dh
  410210:	cmp    DWORD PTR [ebp-0x4c],esp
  410213:	ror    DWORD PTR [ebx],cl
  410215:	cdq    
  410216:	in     eax,dx
  410217:	mov    edi,0xd3b47fbe
  41021c:	retf   
  41021d:	ja     0x41025d
  41021f:	sbb    DWORD PTR [edi+0x165100e5],edi
  410225:	fdiv   DWORD PTR [ebx+0x35b235ff]
  41022b:	int3   
  41022c:	jmp    0xa4c4204f
  410231:	jb     0x41023b
  410233:	jne    0x410223
  410235:	mov    ebx,0x4516cc4d
  41023a:	mov    bl,0x74
  41023c:	loope  0x4101c8
  41023e:	retf   
  41023f:	addr16 push es
  410241:	out    dx,al
  410242:	sahf   
  410243:	or     DWORD PTR [ebx+0x74b43200],edx
  410249:	loope  0x410215
  41024b:	outs   dx,BYTE PTR ds:[esi]
  41024c:	addr16 out dx,al
  41024e:	xlat   BYTE PTR ds:[ebx]
  41024f:	mov    dl,0x74
  410251:	in     eax,0xda
  410253:	or     DWORD PTR [esi+ebx*8-0x39],ebp
  410257:	mov    dl,0x74
  410259:	ror    edx,1
  41025b:	mov    cl,0x6a
  41025d:	into   
  41025e:	mov    bh,0xb2
  410260:	je     0x41021f
  410262:	call   0x74b2:0xa7be6ab9
  410269:	mov    ecx,0xae6aa18a
  41026e:	xchg   edi,eax
  41026f:	mov    dl,0x74
  410271:	xchg   ebp,eax
  410272:	call   0x74b2:0x879e6aa9
  410279:	or     DWORD PTR [edx+0x778e6ad1],0xda8d74b2
  410283:	fldcw  WORD PTR [edx+0x7e]
  410286:	out    0xb2,eax
  410288:	je     0x410213
  41028a:	retf   0x6ac1
  41028d:	outs   dx,BYTE PTR ds:[esi]
  41028e:	xlat   BYTE PTR ds:[ebx]
  41028f:	mov    dl,0x74
  410291:	inc    ebp
  410292:	fcmove st,st(1)
  410294:	push   0x5e
  410296:	(bad)  
  410297:	mov    dl,0x74
  410299:	xor    edx,ecx
  41029b:	jno    0x410307
  41029d:	dec    esi
  41029e:	mov    bh,0xb2
  4102a0:	je     0x4102a2
  4102a2:	dec    esp
  4102a3:	pusha  
  4102a4:	mov    al,0x6b
  4102a6:	daa    
  4102a7:	jae    0x4102a6
  4102a9:	jne    0x4102ab
  4102ab:	cmp    BYTE PTR [eax-0x58],ah
  4102ae:	imul   eax,DWORD PTR [edi],0x73
  4102b1:	std    
  4102b2:	jne    0x4102b8
  4102b4:	pusha  
  4102b5:	mov    al,ds:0xc773276b
  4102ba:	ret    0x754
  4102bd:	push   ebp
  4102be:	mov    esi,DWORD PTR [edi+eax*4]
  4102c1:	ret    0x2fe8
  4102c4:	jne    0x4102c3
  4102c6:	(bad)  
  4102c7:	int    0x72
  4102c9:	dec    esi
  4102ca:	call   FWORD PTR [ebp+0x4735ff02]
  4102d0:	ds inc ecx
  4102d2:	add    al,ah
  4102d4:	cmp    dl,BYTE PTR [esi+0x0]
  4102d7:	sbb    BYTE PTR [edx],al
  4102d9:	ror    BYTE PTR [edi],0x8d
  4102dc:	adc    DWORD PTR [ecx],eax
  4102de:	add    BYTE PTR [eax],cl
  4102e0:	into   
  4102e1:	inc    ebx
  4102e2:	clc    
  4102e3:	fadd   DWORD PTR [esi]
  4102e5:	add    BYTE PTR [eax],al
  4102e7:	(bad)
  4102eb:	iret   
  4102ec:	push   es
  4102ed:	add    BYTE PTR [edx-0x38],ch
  4102f0:	loopne 0x4102f1
  4102f2:	imul   ebx,eax,0xd8cffe0
  4102f8:	jno    0x410348
  4102fa:	lea    ecx,[ebp+0x7d]
  4102fd:	cmc    
  4102fe:	jmp    DWORD PTR [edi-0x4f8a00a3]
  410304:	je     0x410379
  410306:	cld    
  410307:	ror    BYTE PTR [ebp+edx*2-0x3ffe7800],0x74
  41030f:	add    BYTE PTR [ebp-0x67ff2aa1],cl
  410315:	push   es
  410316:	push   0x47c09b
  41031b:	push   DWORD PTR [ecx]
  41031d:	aad    0xe
  41031f:	call   0xfefc757d
  410324:	add    DWORD PTR [edi],esi
  410326:	aam    0x8c
  410328:	lods   al,BYTE PTR ds:[esi]
  410329:	lock mov ah,0xfe
  41032c:	pop    esi
  41032d:	nop
  41032e:	push   eax
  41032f:	call   0xfefc759d
  410334:	mov    eax,0x46f6ac25
  410339:	adc    ebp,DWORD PTR [ebp+ebx*1-0x7342e536]
  410340:	in     al,dx
  410341:	andps  xmm5,XMMWORD PTR [eax+0x39]
  410345:	test   BYTE PTR [ecx+0x0],al
  410348:	es std 
  41034a:	stos   DWORD PTR es:[edi],eax
  41034b:	neg    BYTE PTR [esi]
  41034d:	mov    ebx,0x67d634bb
  410352:	inc    ecx
  410353:	add    BYTE PTR [ecx],bl
  410355:	or     al,0x2e
  410357:	inc    DWORD PTR [esi]
  410359:	cmp    DWORD PTR [esi-0x4424f915],eax
  41035f:	xor    BYTE PTR [ebx+esi*2-0x6011014d],0x36
  410367:	pop    edx
  410368:	mov    dl,0xf4
  41036a:	mov    bl,0x3
  41036c:	fs jmp 0x7b0687fa
  410372:	mov    ebx,0xcfce00fe
  410377:	mov    eax,DWORD PTR [ebp+edx*8-0x4f014466]
  41037e:	pop    esp
  41037f:	scas   eax,DWORD PTR es:[edi]
  410380:	div    BYTE PTR [esi+0x3102aa82]
  410386:	mov    al,ds:0x2c6e0a34
  41038b:	scas   eax,DWORD PTR es:[edi]
  41038c:	neg    BYTE PTR [esi+0x3102ab3a]
  410392:	mov    al,ds:0x88e19a7
  410397:	je     0x410348
  410399:	jg     0x41034c
  41039b:	pop    ebp
  41039c:	mov    esp,0xbc5da4c5
  4103a1:	ja     0x410354
  4103a3:	xchg   ebx,eax
  4103a4:	stos   DWORD PTR es:[edi],eax
  4103a5:	addr16 mov cl,0x45
  4103a8:	mov    esp,0x3b5100dd
  4103ad:	pop    ebp
  4103ae:	mov    cl,0x35
  4103b0:	adc    BYTE PTR [ebp+0x4fbc35a4],0x8
  4103b7:	pushf  
  4103b8:	fiadd  WORD PTR [edi+0x7b]
  4103bb:	or     al,0xb4
  4103bd:	aas    
  4103be:	mov    cl,0x0
  4103c0:	cwde   
  4103c1:	enter  0xdb1,0xbc
  4103c5:	in     eax,0x9d
  4103c7:	std    
  4103c8:	mov    ebx,0x2958a227
  4103cd:	push   ds
  4103ce:	mov    cl,0xf5
  4103d0:	jne    0x4103e0
  4103d2:	mov    ecx,0x370fbbed
  4103d7:	icebp  
  4103d8:	stos   DWORD PTR es:[edi],eax
  4103d9:	add    BYTE PTR [edx],dl
  4103db:	mov    al,0xdd
  4103dd:	mov    ebx,0xb3c076ff
  4103e2:	div    DWORD PTR [eax-0x4fa4cc40]
  4103e8:	lds    edi,FWORD PTR [ebx-0x40304e93]
  4103ee:	fdiv   QWORD PTR [eax-0x52a2444b]
  4103f4:	rcl    BYTE PTR [edi-0x3316f69c],0xf0
  4103fb:	add    ecx,ebp
  4103fd:	push   eax
  4103fe:	stos   BYTE PTR es:[edi],al
  4103ff:	popf   
  410400:	imul   eax,eax,0x2de923ba
  410406:	popa   
  410407:	mov    al,0xfb
  410409:	or     ebx,DWORD PTR [ecx-0x6044fa7e]
  41040f:	cmp    bh,0x2b
  410412:	fldcw  WORD PTR [eax]
  410414:	repnz or dh,ah
  410417:	or     bh,bh
  410419:	fdivr  QWORD PTR [edx]
  41041b:	mov    eax,ds:0xafba5fa2
  410420:	(bad)  
  410421:	fdivr  QWORD PTR [esi-0x651e8b51]
  410427:	jl     0x41048f
  410429:	inc    esi
  41042a:	stos   BYTE PTR es:[edi],al
  41042b:	rol    ecx,0xe5
  41042e:	xor    dl,BYTE PTR [esi-0x75]
  410431:	inc    ebp
  410432:	scas   al,BYTE PTR es:[edi]
  410433:	int3   
  410434:	sti    
  410435:	xchg   edi,eax
  410436:	jecxz  0x41045a
  410438:	add    BYTE PTR [ebx-0xe8b50c3],dl
  41043e:	add    BYTE PTR [edx+0x7a166756],cl
  410444:	add    DWORD PTR [ebp+ecx*1-0x42],0x6db142f4
  41044c:	or     DWORD PTR [ebx+0x414173bc],ecx
  410452:	jmp    0x7540f309
  410457:	jno    0x41047a
  410459:	mov    ds:0x57096c4d,eax
  41045e:	rol    DWORD PTR [edi+0x57],1
  410461:	add    cl,ch
  410463:	daa    
  410464:	leave  
  410465:	jae    0x410455
  410467:	and    BYTE PTR [ecx-0x5155c53a],0x4f
  41046e:	push   ecx
  41046f:	xor    eax,0xa77ef09
  410474:	pop    esi
  410475:	arpl   WORD PTR [eax],bp
  410477:	xor    eax,0x351cff59
  41047c:	mov    eax,ds:0xae7b7bd2
  410481:	out    0xb5,eax
  410483:	add    eax,0x3582feb0
  410488:	inc    edi
  410489:	add    BYTE PTR [eax],0x6e
  41048c:	or     esi,DWORD PTR [ebp-0x6]
  41048f:	push   esi
  410490:	jno    0x4104c3
  410492:	shl    BYTE PTR [ecx+0x73],0xfd
  410496:	call   FWORD PTR [edi]
  410498:	jbe    0x410446
  41049a:	cmp    BYTE PTR [edi+0x65ffbaf8],dl
  4104a0:	ja     0x41049f
  4104a2:	jne    0x4104a4
  4104a4:	nop
  4104a5:	arpl   WORD PTR [esi],si
  4104a7:	push   DWORD PTR [bp+si+0x5d]
  4104ab:	pop    esi
  4104ac:	and    esi,eax
  4104ae:	add    al,BYTE PTR [eax]
  4104b0:	lds    edi,FWORD PTR [esi-0x16]
  4104b3:	add    DWORD PTR [esp+esi*2],0x51
  4104b7:	(bad)  
  4104b8:	xchg   ebp,eax
  4104b9:	jae    0x4104b9
  4104bb:	call   FWORD PTR [eax+0xb]
  4104be:	mov    DWORD PTR [ebp+0x1c],0x4800000c
  4104c5:	jle    0x41050a
  4104c7:	or     al,0x9b
  4104c9:	mov    dl,0xfe
  4104cb:	je     0x4104ee
  4104cd:	mov    al,ds:0x4f3a2bbe
  4104d2:	leave  
  4104d3:	ret    0xb0c
  4104d6:	mov    ebx,0xb1801
  4104db:	jmp    0x410556
  4104dd:	test   BYTE PTR [ebx+0x10],bh
  4104e0:	or     bh,bl
  4104e2:	add    al,0x8b
  4104e4:	inc    ebp
  4104e5:	adc    eax,0xdeff1889
  4104ea:	or     edi,edi
  4104ec:	and    eax,0x7476e7fd
  4104f1:	jo     0x4104f0
  4104f3:	and    DWORD PTR [ebx-0x2efa8afe],0xffffffef
  4104fa:	imul   ebx
  4104fc:	push   ss
  4104fd:	push   ebp
  4104fe:	and    eax,0xfd709f7f
  410503:	or     DWORD PTR [ecx],esi
  410505:	fnstsw WORD PTR [ebx+0x20d80057]
  41050b:	add    al,0x0
  41050d:	xor    DWORD PTR [ebp+0x2362eb04],ebp
  410513:	mov    ebp,0x8bcd1c07
  410518:	inc    esp
  410519:	mov    DWORD PTR [ebx],ebp
  41051b:	dec    edi
  41051c:	cld    
  41051d:	ss jl  0x4104e5
  410520:	pop    es
  410521:	jo     0x410563
  410523:	or     al,0x89
  410525:	in     al,dx
  410526:	push   edi
  410527:	mov    edx,DWORD PTR [ebp+ebp*2+0x4b]
  41052b:	adc    eax,0x8d47ec8b
  410530:	push   esp
  410531:	pop    ebp
  410532:	lahf   
  410533:	pop    esi
  410534:	shr    DWORD PTR [esi],0xe1
  410537:	mov    ds:0xba65b806,eax
  41053c:	mov    ah,bl
  41053e:	jecxz  0x410584
  410540:	cmp    DWORD PTR [edx],0xffffffb9
  410543:	xor    BYTE PTR [edx-0x7cf9a256],bl
  410549:	imul   esp,DWORD PTR [eax-0x1fa5f9d3],0xa60ad1ec
  410553:	mov    eax,DWORD PTR [ecx+ebx*1+0x2b]
  410557:	dec    edi
  410558:	cld    
  410559:	push   0xffffffe9
  41055b:	lds    ecx,FWORD PTR [ebx]
  41055d:	xor    ebp,ebp
  41055f:	mov    ebx,gs
  410561:	mov    dl,0x63
  410563:	scas   al,BYTE PTR es:[edi]
  410564:	mov    al,ds:0x4225ad
  410569:	sub    ch,ah
  41056b:	pop    es
  41056c:	jbe    0x41056e
  41056e:	das    
  41056f:	sbb    eax,esp
  410571:	enter  0xcff3,0x2
  410575:	call   FWORD PTR [esp+ebx*1]
  410578:	mov    DWORD PTR [eax+0x31],eax
  41057b:	enter  0x67b8,0xc6
  41057f:	or     BYTE PTR [esi+0x6bb1758a],ah
  410585:	ds mov ch,0x58
  410588:	cmp    esp,0xb88dae0e
  41058e:	sbb    eax,0x2d2e8615
  410593:	scas   al,BYTE PTR es:[edi]
  410594:	repz mov ebx,0xabe13397
  41059a:	(bad)  
  41059b:	sub    DWORD PTR [esi-0x48],ebp
  41059e:	cmp    ecx,ecx
  4105a0:	cmc    
  4105a1:	jg     0x410577
  4105a3:	or     cl,ch
  4105a5:	add    esi,DWORD PTR [esi+0x33]
  4105a8:	in     eax,0xb8
  4105aa:	in     eax,0xb0
  4105ac:	dec    ebp
  4105ad:	cs mov al,gs:0xad5e225c
  4105b4:	jno    0x4105f4
  4105b6:	and    eax,0x3e13abf2
  4105bb:	mov    al,BYTE PTR [ebx+eax*1+0x2e260931]
  4105c2:	and    eax,0x490b93ae
  4105c7:	aas    
  4105c8:	mov    bh,BYTE PTR [eax-0x505c7cd1]
  4105ce:	sbb    esi,DWORD PTR [esi]
  4105d0:	push   es
  4105d1:	inc    esi
  4105d2:	add    BYTE PTR ds:0x6d8c1ae1,ah
  4105d8:	mov    ch,0xfd
  4105da:	fnsave [edx+0x3a03a77b]
  4105e0:	xlat   BYTE PTR ds:[ebx]
  4105e1:	pop    esp
  4105e2:	add    cl,BYTE PTR [edx]
  4105e4:	and    dl,BYTE PTR [ebx+0x4]
  4105e7:	popa   
  4105e8:	lods   al,BYTE PTR ds:[esi]
  4105e9:	pop    ebx
  4105ea:	or     al,0xd9
  4105ec:	or     eax,0xace7b749
  4105f1:	cmp    edx,DWORD PTR [eax]
  4105f3:	fidiv  WORD PTR [esi]
  4105f5:	icebp  
  4105f6:	stos   DWORD PTR es:[edi],eax
  4105f7:	cmp    BYTE PTR [eax],ch
  4105f9:	add    BYTE PTR [esi-0x2aab807a],dh
  4105ff:	mov    bl,0xf2
  410601:	call   FWORD PTR [ebx]
  410603:	xor    esp,DWORD PTR [eax-0x4a8f8fb9]
  410609:	mov    ah,ah
  41060b:	cs jle 0x41064e
  41060e:	jmp    0x1844a7c6
  410613:	out    0x35,al
  410615:	adc    al,0x18
  410617:	fidiv  WORD PTR ds:0x14076f8
  41061d:	call   0xfeed59c1
  410622:	shr    BYTE PTR [ebx],0xc9
  410625:	je     0x410612
  410627:	retf   
  410628:	in     eax,0x50
  41062a:	push   esi
  41062b:	and    BYTE PTR [ecx-0x5b612b02],dh
  410631:	adc    al,0xc8
  410633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410634:	stos   DWORD PTR es:[edi],eax
  410635:	(bad)  
  410636:	mov    ah,0x0
  410638:	sahf   
  410639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41063a:	or     cl,cl
  41063c:	xchg   DWORD PTR [ebx+0x4932e93c],ebp
  410642:	push   es
  410643:	lahf   
  410644:	xor    BYTE PTR [eax-0x4b0795f9],ah
  41064a:	call   FWORD PTR [ebx+0xe179fac]
  410650:	pusha  
  410651:	lods   eax,DWORD PTR ds:[esi]
  410652:	out    0x5a,eax
  410654:	xchg   BYTE PTR [esi+edi*8-0x528fda],ch
  41065b:	call   0xa4cc0f92
  410660:	ss (bad) 
  410662:	(bad)  
  410663:	call   0xde410f9a
  410668:	inc    ecx
  410669:	mov    cl,0xe7
  41066b:	aad    0x4f
  41066d:	lods   al,BYTE PTR ds:[esi]
  41066e:	(bad)  
  41066f:	bound  esi,QWORD PTR [ecx-0x53]
  410672:	enter  0x8a00,0x17
  410676:	add    BYTE PTR [ebp+0x63],dl
  410679:	fs push ebp
  41067b:	mov    ebx,DWORD PTR ds:0xd0c08301
  410681:	push   edi
  410682:	call   0xfdb53683
  410687:	mov    edx,DWORD PTR [eax+0x170c7372]
  41068d:	stos   DWORD PTR es:[edi],eax
  41068e:	std    
  41068f:	jne    0x410639
  410691:	add    BYTE PTR [ebp+0x4],0xb
  410695:	icebp  
  410696:	or     eax,DWORD PTR [eax]
  410698:	pushf  
  410699:	add    bh,bh
  41069b:	jne    0x41069d
  41069d:	xchg   esp,eax
  41069e:	add    BYTE PTR [ebp+0x8],0x28
  4106a2:	je     0x410717
  4106a4:	or     al,ah
  4106a6:	adc    al,0x68
  4106a8:	call   edi
  4106aa:	jle    0x4106ef
  4106ac:	adc    al,0xd1
  4106ae:	scas   eax,DWORD PTR es:[edi]
  4106af:	mov    dh,0x1
  4106b1:	pop    eax
  4106b2:	pop    es
  4106b3:	add    BYTE PTR [edi+0x21],bl
  4106b6:	retf   0xe
  4106b9:	mov    ebp,0x1c83ea7e
  4106be:	pop    esp
  4106bf:	mov    DWORD PTR [ebp+0x5c],edx
  4106c2:	push   0x0
  4106c4:	add    BYTE PTR [eax+0x7],cl
  4106c7:	add    BYTE PTR [ebx],ch
  4106c9:	cli    
  4106ca:	pop    edx
  4106cb:	inc    ebx
  4106cc:	or     al,0x19
  4106ce:	pop    es
  4106cf:	add    BYTE PTR [eax],al
  4106d1:	pop    es
  4106d2:	jnp    0x410694
  4106d4:	xor    DWORD PTR [ebp-0x48afffe],0x73
  4106db:	jae    0x4106f1
  4106dd:	mov    dl,0x7
  4106df:	push   0x0
  4106e1:	mov    dl,0x6
  4106e3:	call   0xfdb61e78
  4106e8:	jmp    0x410e0e
  4106ed:	xor    DWORD PTR [edi],ebx
  4106ef:	aaa    
  4106f0:	or     al,0x30
  4106f2:	push   ebp
  4106f3:	loope  0x4106f3
  4106f5:	shl    BYTE PTR fs:[ebx+0x2fd82974],1
  4106fc:	(bad)  
  4106fd:	into   
  4106fe:	jae    0x41068a
  410700:	inc    esp
  410701:	add    ch,al
  410703:	pop    ebx
  410704:	cs adc al,0x4b
  410707:	mov    al,ds:0xe5a40428
  41070c:	mov    bh,0x4f
  41070e:	cdq    
  41070f:	sti    
  410710:	mov    ah,0xfe
  410712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410713:	mov    DWORD PTR [ebx],eax
  410715:	add    dh,BYTE PTR [ecx]
  410717:	mov    al,ds:0x9e257c7f
  41071c:	sub    eax,0x12ad8e23
  410721:	(bad)  
  410722:	cld    
  410723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410724:	stos   BYTE PTR es:[edi],al
  410725:	sbb    eax,0x88b52313
  41072a:	in     al,dx
  41072b:	dec    ebx
  41072c:	mov    ch,0x74
  41072e:	inc    ebp
  41072f:	mov    BYTE PTR [edx],0x6a
  410732:	sub    eax,0x1fc3f4d
  410737:	pop    eax
  410738:	idiv   dh
  41073a:	push   esi
  41073b:	jmp    0x4106e7
  41073d:	(bad)  
  41073e:	xor    BYTE PTR [eax-0x343b7cfe],ah
  410744:	push   DWORD PTR [ecx+edx*1-0x1d]
  410748:	cs adc bl,cl
  41074b:	sahf   
  41074c:	mov    bl,0x74
  41074e:	cmp    DWORD PTR [eax],ecx
  410750:	dec    ecx
  410751:	bound  esp,QWORD PTR [esi]
  410753:	sti    
  410754:	mov    ah,0x74
  410756:	inc    ebp
  410757:	xchg   esi,eax
  410758:	jmp    FWORD PTR [ecx+0x31]
  41075b:	xchg   esi,eax
  41075c:	add    ch,al
  41075e:	sub    DWORD PTR [ebx-0xee7014d],esi
  410764:	add    al,BYTE PTR [eax]
  410766:	add    BYTE PTR [ecx],dh
  410768:	or     DWORD PTR [edx+0x36],ebp
  41076b:	and    eax,0xefe15405
  410770:	xor    edi,ecx
  410772:	mov    ah,0x5d
  410774:	add    ecx,eax
  410776:	pusha  
  410777:	push   ecx
  410778:	stos   BYTE PTR es:[edi],al
  410779:	lds    ecx,FWORD PTR [edx+0x2ebdad6d]
  41077f:	and    eax,0x2d29e91f
  410784:	jl     0x4107a9
  410786:	mov    eax,0xb595a16e
  41078b:	mov    bh,0xa9
  41078d:	(bad)  
  41078e:	mov    esi,DWORD PTR [ecx]
  410790:	or     ecx,ebp
  410792:	and    BYTE PTR ds:0x462ee3fd,0xaa
  410799:	sti    
  41079a:	adc    ecx,DWORD PTR [ebx]
  41079c:	add    edi,DWORD PTR [esi+0x2e]
  41079f:	cmp    DWORD PTR [ecx-0x5679dd8c],esp
  4107a5:	xor    BYTE PTR [edx],al
  4107a7:	xor    DWORD PTR [ecx],ecx
  4107a9:	jmp    0xe9491358
  4107ae:	add    esi,DWORD PTR [edx-0x22021ad5]
  4107b4:	call   0x1f823606
  4107b9:	icebp  
  4107ba:	mov    ah,0xdd
  4107bc:	add    BYTE PTR [ecx-0x2c],dl
  4107bf:	shr    DWORD PTR [ecx+0x14bdb435],1
  4107c5:	ret    
  4107c6:	add    bl,cl
  4107c8:	or     BYTE PTR [ebx+0x5c490003],dl
  4107ce:	push   ds
  4107cf:	mov    ah,0x2f
  4107d1:	mov    bl,0xab
  4107d3:	add    dh,BYTE PTR [ecx]
  4107d5:	or     DWORD PTR [edx+0x36],ebp
  4107d8:	sub    eax,0x17e37c10
  4107dd:	pop    ds
  4107de:	fldcw  WORD PTR [ecx]
  4107e0:	cmp    DWORD PTR [eax-0x4ec58401],ebp
  4107e6:	mov    eax,0xfea7c588
  4107eb:	pop    esp
  4107ec:	sbb    DWORD PTR [ebx],esi
  4107ee:	add    edx,DWORD PTR [ebx+0x35]
  4107f1:	xor    eax,DWORD PTR [eax]
  4107f3:	sar    DWORD PTR [ebx-0x4331015a],0x7
  4107fa:	add    ecx,ebp
  4107fc:	xor    cl,BYTE PTR [esp+edi*2+0x1c1dcaed]
  410803:	scas   al,BYTE PTR es:[edi]
  410804:	js     0x4107ab
  410806:	(bad)  
  410807:	call   0x1d40113e
  41080c:	sbb    DWORD PTR [ebx],esi
  41080e:	add    BYTE PTR [ebx],dl
  410810:	cmp    DWORD PTR [esi-0x4f026abc],edx
  410816:	arpl   WORD PTR [edi-0x7b17581e],cx
  41081c:	sub    eax,0x406a0009
  410821:	adc    eax,0xd036fc09
  410826:	inc    esp
  410827:	ins    DWORD PTR es:[edi],dx
  410828:	xor    al,0x9
  41082a:	add    cl,ch
  41082c:	ret    
  41082d:	sbb    eax,0x3200d314
  410832:	xor    eax,DWORD PTR [esp+eiz*2]
  410835:	clc    
  410836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410837:	dec    edi
  410838:	inc    ecx
  410839:	mul    DWORD PTR [esi-0x3c4bb902]
  41083f:	(bad)  
  410840:	call   0xe5bd9477
  410845:	inc    esp
  410846:	sbb    eax,0x935710a
  41084b:	add    cl,ch
  41084d:	xchg   ebp,eax
  41084e:	sar    edi,cl
  410850:	call   0xe5bd9487
  410855:	daa    
  410856:	sbb    eax,0x935510a
  41085b:	add    BYTE PTR [eax],al
  41085d:	or     BYTE PTR [ebp+0xc1800b9],al
  410863:	cmp    DWORD PTR [ebp+0xc],0xffffffa8
  410867:	jo     0x4108be
  410869:	adc    edi,DWORD PTR [esi-0x2676ae8e]
  41086f:	or     eax,DWORD PTR [eax]
  410871:	fmul   DWORD PTR [ebx+0x6]
  410874:	jae    0x410886
  410876:	pop    esp
  410877:	jae    0x410885
  410879:	jg     0x4108cc
  41087b:	hlt    
  41087c:	cmp    DWORD PTR [ebp+0x61],0xa
  410880:	sar    DWORD PTR [ebp+0x61],1
  410883:	std    
  410884:	jne    0x41080a
  410886:	cmp    edi,0x65
  410889:	(bad)  
  41088a:	pop    edx
  41088b:	xchg   DWORD PTR [ebp-0x70],eax
  41088e:	pop    edx
  41088f:	jae    0x4108a1
  410891:	iret   
  410892:	loopne 0x410887
  410894:	inc    DWORD PTR [eax]
  410896:	inc    ebp
  410897:	jne    0x410896
  410899:	jne    0x41082b
  41089b:	sbb    DWORD PTR [edx+0x60],0xffffffaf
  41089f:	pop    edx
  4108a0:	std    
  4108a1:	jne    0x410907
  4108a3:	add    eax,0x5f85ff02
  4108a8:	std    
  4108a9:	jne    0x4108ab
  4108ab:	test   bh,cl
  4108ad:	std    
  4108ae:	cvtdq2ps xmm7,xmm5
  4108b1:	jne    0x410883
  4108b3:	cmp    DWORD PTR [ebp+eiz*2+0x1b65aff],0x48
  4108bb:	or     eax,DWORD PTR [eax]
  4108bd:	jmp    0x410927
  4108bf:	mov    ?,WORD PTR [ebx+0xc]
  4108c2:	pop    ebp
  4108c3:	fst    QWORD PTR [ebx+ecx*1+0x2a]
  4108c7:	loope  0x410919
  4108c9:	or     DWORD PTR [ebp-0x77000159],0x4f487311
  4108d3:	loope  0x4108e0
  4108d5:	(bad)  
  4108d6:	xor    DWORD PTR [ebp-0x4a],esi
  4108d9:	or     BYTE PTR [esp+edi*8-0x5b7b2f01],0xb0
  4108e1:	je     0x4108e8
  4108e3:	stc    
  4108e4:	push   0x7aa00664
  4108e9:	inc    esp
  4108ea:	stc    
  4108eb:	mov    bh,0x36
  4108ed:	adc    dh,dh
  4108ef:	inc    ebp
  4108f0:	mov    eax,0xb0a864fe
  4108f5:	je     0x410930
  4108f7:	enter  0x6002,0x0
  4108fb:	(bad)  
  4108fd:	mov    al,0x74
  4108ff:	cmp    eax,0x44ff033a
  410904:	pop    esp
  410905:	mov    al,0x74
  410907:	leave  
  410908:	enter  0xfd39,0xbe
  41090c:	ja     0x4108be
  41090e:	je     0x4108c9
  410910:	js     0x410936
  410912:	gs scas al,BYTE PTR es:[edi]
  410914:	xchg   DWORD PTR [ebx+0x0],ebp
  410917:	xor    DWORD PTR [eax+0x3834eb02],esi
  41091d:	add    al,0x0
  41091f:	xor    DWORD PTR [eax-0x4fde3e47],esi
  410925:	push   ebp
  410926:	mov    edx,DWORD PTR [ebp+0x297c8506]
  41092c:	mov    al,0x35
  41092e:	add    eax,0x3c5d8d7
  410933:	xor    DWORD PTR [ebx],ebx
  410935:	aaa    
  410936:	or     BYTE PTR [edx-0x56],bl
  410939:	scas   eax,DWORD PTR es:[edi]
  41093a:	xor    eax,0xff26f849
  41093f:	push   esi
  410940:	xor    ecx,edx
  410942:	add    esi,DWORD PTR [edx+0x407502a6]
  410948:	fbstp  TBYTE PTR [esi]
  41094a:	or     BYTE PTR [ecx+0x8],cl
  41094d:	daa    
  41094e:	push   DWORD PTR [esi]
  410950:	or     edi,eax
  410952:	mov    edx,0x56e90cf0
  410957:	mov    edx,0x294761b4
  41095c:	xchg   edx,eax
  41095d:	mov    bl,0xff
  41095f:	add    BYTE PTR [ebx-0x727aa6f4],ch
  410965:	stc    
  410966:	call   0x9bd337a2
  41096b:	adc    edi,esi
  41096d:	fcomp  DWORD PTR [ebp+0x6]
  410970:	mov    dl,0x23
  410972:	std    
  410973:	add    esp,DWORD PTR [ebp+0x11]
  410976:	jb     0x4109ce
  410978:	cmp    eax,0xae0858a6
  41097d:	or     ch,BYTE PTR [edx+0x2e]
  410980:	cmp    DWORD PTR [ecx],ecx
  410982:	cmp    eax,0xe13bbbfb
  410987:	push   ebx
  410988:	mov    dh,0xa
  41098a:	push   0x5
  41098c:	sub    eax,edx
  41098e:	stos   BYTE PTR es:[edi],al
  41098f:	pop    ss
  410990:	xor    DWORD PTR [edx+esi*2],edi
  410993:	lahf   
  410994:	mov    bl,0xcc
  410996:	mov    esp,0x2b91ff58
  41099b:	adc    al,0x76
  41099d:	or     cl,ch
  41099f:	add    esi,DWORD PTR [ecx]
  4109a1:	or     DWORD PTR [edx+0x46],esi
  4109a4:	cmp    eax,0x3103e8ce
  4109a9:	or     ecx,ebp
  4109ab:	test   ch,bh
  4109ad:	adc    cl,ch
  4109af:	ss sub edx,esi
  4109b2:	sub    BYTE PTR [ecx+0xe],dl
  4109b5:	shr    BYTE PTR [edx],1
  4109b7:	jmp    DWORD PTR [esi-0x5a]
  4109ba:	(bad)  
  4109bc:	push   esi
  4109bd:	jnp    0x41096b
  4109bf:	mov    al,0x57
  4109c1:	adc    DWORD PTR [ecx],ebp
  4109c3:	add    BYTE PTR ss:[ecx],bh
  4109c6:	repnz sub BYTE PTR [ecx-0x1a],dl
  4109ca:	iret   
  4109cb:	jmp    FWORD PTR [edx]
  4109cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109cf:	xchg   DWORD PTR [edx+ecx*4-0x350e8b5a],esp
  4109d6:	outs   dx,DWORD PTR ds:[esi]
  4109d7:	pop    ebp
  4109d8:	push   ds
  4109d9:	loope  0x4109a6
  4109db:	inc    esp
  4109dc:	sbb    eax,0xe9000933
  4109e1:	xchg   edi,eax
  4109e2:	dec    ebp
  4109e3:	in     al,dx
  4109e4:	cdq    
  4109e5:	(bad)  
  4109e6:	dec    ebp
  4109e7:	hlt    
  4109e8:	cdq    
  4109e9:	rcr    DWORD PTR ds:0xa2d90108,0xfe
  4109f0:	out    dx,al
  4109f1:	or     BYTE PTR [esi-0x14],cl
  4109f4:	pop    esi
  4109f5:	jmp    0x41097e
  4109f7:	jl     0x4109ce
  4109f9:	sub    eax,0xe2041d
  4109fe:	sbb    DWORD PTR [eax],ecx
  410a00:	add    ch,ch
  410a02:	inc    esi
  410a03:	pop    edi
  410a04:	mov    al,0xf3
  410a06:	adc    BYTE PTR [eax],al
  410a08:	adc    bh,BYTE PTR [eax-0x4b]
  410a0b:	mov    BYTE PTR [ebx*4+0x2dc17c89],ch
  410a12:	or     DWORD PTR [eax+0x2b1164e9],esp
  410a18:	test   eax,0xabc943f7
  410a1d:	xor    DWORD PTR [ecx],ecx
  410a1f:	mov    esp,DWORD PTR [esi*4-0x1d142037]
  410a26:	mov    al,0x67
  410a28:	add    eax,0x88a3d600
  410a2d:	sub    al,0xc1
  410a2f:	(bad)  
  410a30:	mul    DWORD PTR [esi-0x17005318]
  410a36:	xor    cl,BYTE PTR [ecx]
  410a38:	jmp    0x410a54
  410a3a:	mov    al,0x4d
  410a3c:	lock mov ecx,0xb9f44db1
  410a42:	xchg   DWORD PTR ds:0xf3e00008,ebx
  410a48:	stc    
  410a49:	inc    DWORD PTR [edi]
  410a4b:	and    BYTE PTR [eax+esi*8+0x43],cl
  410a4f:	dec    ecx
  410a50:	call   0xd0e056cc
  410a55:	je     0x410a7f
  410a57:	jae    0x410acc
  410a59:	cld    
  410a5a:	inc    eax
  410a5b:	adc    al,0x64
  410a5d:	inc    DWORD PTR [edi-0x40]
  410a60:	mov    esi,0xc064c75e
  410a65:	or     al,0x18
  410a67:	lds    ecx,FWORD PTR [ebx-0x18]
  410a6a:	pop    es
  410a6b:	push   ecx
  410a6c:	in     al,0xab
  410a6e:	mov    ebx,edx
  410a70:	out    0x0,eax
  410a72:	jle    0x410a82
  410a74:	cmp    DWORD PTR [ebp+0xc],0x8
  410a78:	jne    0x410a3b
  410a7a:	pop    ebx
  410a7b:	(bad)  
  410a7d:	add    BYTE PTR [ebp+0xb],bh
  410a80:	cmp    DWORD PTR [ebp-0x4],0x7
  410a84:	jne    0x410a96
  410a86:	mul    eax
  410a88:	sti    
  410a89:	call   0x3ff116
  410a8e:	add    BYTE PTR [ebx],dh
  410a90:	int    0x5c
  410a92:	pop    edi
  410a93:	xchg   ecx,eax
  410a94:	leave  
  410a95:	or     al,BYTE PTR [eax]
  410a97:	sbb    ebx,ecx
  410a99:	jecxz  0x410a9b
  410a9b:	cmp    eax,0x888be912
  410aa0:	pop    es
  410aa1:	add    BYTE PTR [ebx+0x75fefd4d],cl
  410aa7:	mov    esp,0x4d8aff22
  410aac:	jno    0x410a6d
  410aae:	loopne 0x410a3a
  410ab0:	aaa    
  410ab1:	call   0xfdb53696
  410ab6:	mov    DWORD PTR [ebp+0x247d89d3],ebx
  410abc:	pop    ds
  410abd:	je     0x410abb
  410abf:	xor    DWORD PTR [edi+0x4b],eax
  410ac2:	lods   eax,DWORD PTR ds:[esi]
  410ac3:	stos   BYTE PTR es:[edi],al
  410ac4:	loope  0x410a8b
  410ac6:	inc    esp
  410ac7:	push   ecx
  410ac8:	mov    cl,0x2
  410aca:	add    BYTE PTR [ecx],dh
  410acc:	xor    eax,0x2ce1e048
  410ad1:	dec    eax
  410ad2:	hlt    
  410ad3:	loope  0x410b54
  410ad5:	lods   eax,DWORD PTR ds:[esi]
  410ad6:	je     0x410b11
  410ad8:	clc    
  410ad9:	popf   
  410ada:	cli    
  410adb:	es add al,0xfa
  410ade:	mov    edi,0x7c81aca5
  410ae3:	sbb    eax,0xb20636b1
  410ae8:	lea    esp,[edx-0x7e358201]
  410aee:	jl     0x410b01
  410af0:	mov    cl,0x36
  410af2:	or     BYTE PTR [eax],al
  410af4:	neg    BYTE PTR ds:0x4fb4e7a3
  410afa:	lods   eax,DWORD PTR ds:[esi]
  410afb:	(bad)  
  410afc:	out    0x3d,al
  410afe:	shl    bh,1
  410b00:	or     edi,DWORD PTR [edx+0x3dd6feac]
  410b06:	mov    al,0xe7
  410b08:	inc    esp
  410b09:	dec    edi
  410b0a:	lods   eax,DWORD PTR ds:[esi]
  410b0b:	(bad)  
  410b0c:	sbb    dh,BYTE PTR [eax+0x4d]
  410b0f:	pop    edi
  410b10:	call   0xab410a83
  410b15:	in     eax,dx
  410b16:	mov    ds:0xa7ddaeaa,eax
  410b1b:	and    BYTE PTR [esp+ecx*4],0x3
  410b1f:	je     0x410b58
  410b21:	das    
  410b22:	das    
  410b23:	hlt    
  410b24:	xor    ebp,edi
  410b26:	(bad)
  410b2a:	stos   DWORD PTR es:[edi],eax
  410b2b:	je     0x410b92
  410b2d:	xor    eax,DWORD PTR [edi+edi*8]
  410b30:	add    al,0x1c
  410b32:	pushf  
  410b33:	dec    ecx
  410b34:	adc    dh,BYTE PTR [ebx]
  410b36:	lods   eax,DWORD PTR ds:[esi]
  410b37:	mov    bh,0x30
  410b39:	or     ecx,ebp
  410b3b:	add    esi,DWORD PTR [ecx]
  410b3d:	inc    ebx
  410b3e:	mov    esi,0xe91570ba
  410b43:	push   esi
  410b44:	stos   BYTE PTR es:[edi],al
  410b45:	mov    ch,0x69
  410b47:	enter  0x3a76,0x6a
  410b4b:	das    
  410b4c:	and    DWORD PTR [ecx],ecx
  410b4e:	mov    ah,0xf9
  410b50:	xchg   BYTE PTR [eax],cl
  410b52:	jmp    0x20833c5a
  410b57:	ret    0x4200
  410b5a:	or     DWORD PTR [esi],esp
  410b5c:	aas    
  410b5d:	inc    ecx
  410b5e:	out    dx,al
  410b5f:	cmp    bh,BYTE PTR [ecx+0x75]
  410b62:	stc    
  410b63:	sbb    eax,0xa792b2e7
  410b68:	add    edi,DWORD PTR [eax+0x3119f94b]
  410b6e:	mov    ds:0x1bffb373,al
  410b73:	loope  0x410b10
  410b75:	lds    edi,FWORD PTR [esi]
  410b77:	out    dx,al
  410b78:	lods   al,BYTE PTR ds:[esi]
  410b79:	mov    bl,0x23
  410b7b:	stc    
  410b7c:	add    ebx,DWORD PTR [ebp+edx*1+0x53]
  410b80:	add    ecx,DWORD PTR [ebx+0x2d]
  410b83:	(bad)  
  410b84:	sub    DWORD PTR ss:[ecx-0x5e31b68f],esi
  410b8b:	lds    esi,FWORD PTR [esi]
  410b8d:	sbb    eax,0xd6fc33a2
  410b92:	xchg   esi,eax
  410b93:	adc    ebp,DWORD PTR [ebp-0x4fdc7049]
  410b99:	scas   eax,DWORD PTR es:[edi]
  410b9a:	sbb    edi,ebp
  410b9c:	lods   al,BYTE PTR ds:[esi]
  410b9d:	sbb    eax,0xfd749111
  410ba2:	mov    eax,ds:0xfd1dac95
  410ba7:	lea    esi,[esi]
  410ba9:	cmp    DWORD PTR [ecx-0x5e79b1ac],esi
  410baf:	outs   dx,DWORD PTR ds:[esi]
  410bb0:	inc    esi
  410bb1:	jns    0x410b54
  410bb3:	(bad)  
  410bb4:	sti    
  410bb5:	push   ds
  410bb6:	mov    ds:0x83cae174,al
  410bbb:	pop    esp
  410bbc:	data16 add BYTE PTR [ebp-0x720a8b5e],dl
  410bc3:	sbb    al,0x8
  410bc5:	inc    ecx
  410bc6:	jb     0x410c0c
  410bc8:	dec    DWORD PTR [esi-0x37]
  410bcb:	dec    esp
  410bcc:	adc    al,0x6a
  410bce:	pop    edx
  410bcf:	mov    eax,ds:0x24b1ed72
  410bd4:	cld    
  410bd5:	in     al,0xfe
  410bd7:	adc    eax,DWORD PTR [ebx+0x7405deac]
  410bdd:	out    dx,al
  410bde:	or     DWORD PTR [ecx+0x5e],esp
  410be1:	xor    al,dh
  410be3:	cld    
  410be4:	inc    DWORD PTR [edi-0x52]
  410be7:	mov    es,WORD PTR [eax-0x17]
  410bea:	jecxz  0x410b94
  410bec:	cmp    BYTE PTR [edx+ebx*8-0xd2df8ea],ch
  410bf3:	aas    
  410bf4:	leave  
  410bf5:	sub    ebx,DWORD PTR [esi]
  410bf7:	or     DWORD PTR [ebx+0x75059e6c],eax
  410bfd:	neg    DWORD PTR [ebx+0x20de1415]
  410c03:	adc    eax,ebp
  410c05:	add    DWORD PTR [eax-0x60],ebp
  410c08:	(bad)  
  410c09:	pusha  
  410c0a:	jo     0x410bdd
  410c0c:	addr16 jmp 0xd1411644
  410c12:	mov    bl,0x2a
  410c14:	push   DWORD PTR [esi+0x2f44534]
  410c1a:	fidiv  DWORD PTR [ebx-0xa9f59ef]
  410c20:	(bad)  
  410c21:	adc    al,0x0
  410c23:	popf   
  410c24:	test   al,0x34
  410c26:	xor    al,0xca
  410c28:	lahf   
  410c29:	mov    dh,BYTE PTR [ecx+eax*8]
  410c2c:	xchg   ecx,eax
  410c2d:	add    eax,DWORD PTR [eax]
  410c2f:	repnz dec ebx
  410c31:	cmp    edi,DWORD PTR [ebp-0x50]
  410c34:	xlat   BYTE PTR ds:[ebx]
  410c35:	call   0x833a51c5
  410c3a:	cmp    BYTE PTR [eax-0x27],bl
  410c3d:	push   cs
  410c3e:	inc    DWORD PTR [ebp+0x6a41e670]
  410c44:	jae    0x410c43
  410c46:	sub    ecx,DWORD PTR [eax]
  410c48:	push   esp
  410c49:	leave  
  410c4a:	ret    0xc44
  410c4d:	cmp    DWORD PTR [ebp-0x14],0x9
  410c51:	jne    0x41120e
  410c57:	xor    esi,DWORD PTR [ecx+ebp*8+0x6e]
  410c5b:	xchg   ebx,eax
  410c5c:	cmp    dh,ah
  410c5e:	mov    edx,DWORD PTR [esi+ebp*1]
  410c61:	add    al,BYTE PTR [ebp+0x38]
  410c64:	(bad)  
  410c65:	dec    DWORD PTR [edi+0x3f]
  410c68:	fiadd  DWORD PTR [edi]
  410c6a:	call   0x405ad2
  410c6f:	das    
  410c70:	ficom  DWORD PTR [ebx]
  410c72:	inc    DWORD PTR [ebp-0x6346195c]
  410c78:	jb     0x410c77
  410c7a:	mov    DWORD PTR [ebp-0x30ff97a9],edx
  410c80:	fcom   DWORD PTR [ebx]
  410c82:	inc    DWORD PTR [ebp+0x49e69d]
  410c88:	add    BYTE PTR [ebx-0x3],dh
  410c8b:	mov    ebp,DWORD PTR ds:0xd83982f9
  410c91:	fmul   DWORD PTR [esi]
  410c93:	inc    DWORD PTR ds:0x69ede659
  410c99:	je     0x410c98
  410c9b:	sub    ebx,eax
  410c9d:	push   edx
  410c9e:	leave  
  410c9f:	ret    0xba4
  410ca2:	push   DWORD PTR [ebp+0x30]
  410ca5:	je     0x410d1a
  410ca7:	adc    al,0x31
  410ca9:	ja     0x410cda
  410cab:	int3   
  410cac:	mov    ?,esp
  410cae:	idiv   esi
  410cb0:	cld    
  410cb1:	cdq    
  410cb2:	call   0x710a:0xaa1e7f92
  410cb9:	pushf  
  410cba:	stc    
  410cbb:	(bad)  
  410cbc:	in     al,0x15
  410cbe:	fwait
  410cbf:	(bad)
  410cc2:	stos   BYTE PTR es:[edi],al
  410cc3:	sub    dh,BYTE PTR [ecx+0x5e]
  410cc6:	mov    ebx,0x41b23dc1
  410ccb:	cmp    ecx,esp
  410ccd:	cmp    DWORD PTR ds:0xa5c468d,esi
  410cd3:	inc    esp
  410cd5:	mov    ch,0xa9
  410cd7:	je     0x410d42
  410cd9:	(bad)  
  410cda:	das    
  410cdb:	or     al,0x2e
  410cdd:	push   esi
  410cde:	cli    
  410cdf:	out    0x8f,eax
  410ce1:	out    0xa9,al
  410ce3:	(bad)  
  410ce4:	sub    dh,al
  410ce6:	stc    
  410ce7:	test   BYTE PTR [ebx+0x2b1],al
  410ced:	push   cs
  410cee:	jbe    0x410c9e
  410cf0:	out    0x9c,eax
  410cf2:	xchg   ecx,eax
  410cf3:	test   eax,0x49f04afe
  410cf8:	leave  
  410cf9:	repz mov esp,0xb12fe902
  410cff:	add    al,BYTE PTR [eax]
  410d01:	mov    dl,0x25
  410d03:	test   al,0xc
  410d05:	cs and eax,0xb03100f0
  410d0b:	(bad)  
  410d0d:	fadd   DWORD PTR [ebx+eax*1]
  410d10:	add    BYTE PTR [ecx],dh
  410d12:	sbb    ecx,DWORD PTR [edi-0xc]
  410d15:	stos   BYTE PTR es:[edi],al
  410d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d17:	ins    BYTE PTR es:[edi],dx
  410d18:	add    ch,BYTE PTR [eax+eiz*2+0x1d]
  410d1c:	add    BYTE PTR [ecx],al
  410d1e:	outs   dx,DWORD PTR ds:[esi]
  410d1f:	or     BYTE PTR cs:[ecx-0x61b511f7],bl
  410d26:	sahf   
  410d27:	adc    al,BYTE PTR [esi+edx*4]
  410d2a:	adc    al,0xfd
  410d2c:	test   al,0x5
  410d2e:	adc    DWORD PTR [ecx-0x7a61809b],eax
  410d34:	jge    0x410d23
  410d36:	hlt    
  410d37:	imul   ebp,ebx,0xa8e61576
  410d3d:	in     eax,0x94
  410d3f:	add    BYTE PTR [ecx-0x30],0x9d
  410d43:	fstp   QWORD PTR gs:[esi+0x42c6303e]
  410d4a:	or     edx,esp
  410d4c:	aad    0xc2
  410d4e:	add    eax,DWORD PTR [eax-0x68]
  410d51:	add    BYTE PTR [esi-0x62],al
  410d54:	call   0xd2ee02d3
  410d59:	add    esi,DWORD PTR [esi]
  410d5b:	adc    al,0xdd
  410d5d:	test   al,0xa5
  410d5f:	adc    DWORD PTR [ecx+0x35],eax
  410d62:	push   ds
  410d63:	sahf   
  410d64:	and    eax,0x69f56d7d
  410d69:	jmp    0x410d81
  410d6b:	adc    eax,0x9585a8e6
  410d70:	add    BYTE PTR [ecx],dl
  410d72:	nop
  410d73:	sahf   
  410d74:	add    eax,0x303dbedd
  410d79:	(bad)  
  410d7a:	and    cl,BYTE PTR [ecx]
  410d7c:	imul   dh
  410d7e:	mov    dl,0x8e
  410d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d81:	add    esi,DWORD PTR [esi+0x757cd143]
  410d87:	mov    cl,0x69
  410d89:	fwait
  410d8a:	sub    cl,al
  410d8c:	enter  0x1bfe,0xbb
  410d90:	(bad)
  410d94:	call   0xd0cacf49
  410d99:	adc    BYTE PTR [eax-0x4a36ffbd],ch
  410d9f:	sub    al,0xe8
  410da1:	or     ah,BYTE PTR [eax*2-0x4ea01d14]
  410da8:	jbe    0x410d95
  410daa:	mov    ch,0xf0
  410dac:	sub    bh,BYTE PTR [ebx-0x3d13baf3]
  410db2:	inc    edi
  410db3:	test   eax,0x9d00348a
  410db8:	mov    al,al
  410dba:	retf   0xb0ad
  410dbd:	add    edi,DWORD PTR [esi-0x5d]
  410dc0:	or     dl,BYTE PTR [ebp-0x77]
  410dc3:	jmp    0x410df9
  410dc5:	in     al,0x72
  410dc7:	pop    ds
  410dc8:	mov    cl,0x3a
  410dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dcb:	mov    dh,0x1a
  410dcd:	add    eax,0xeaa90f62
  410dd2:	jmp    0xf50f:0x46e444c5
  410dd9:	(bad)  
  410dda:	mov    ah,0x9e
  410ddc:	dec    ebp
  410ddd:	(bad)  
  410dde:	mov    esp,0x36a0a52a
  410de3:	fstp   DWORD PTR [ebx+0xc4f290a]
  410de9:	call   DWORD PTR [esi+eax*8-0x2676635c]
  410df0:	fwait
  410df1:	sub    ch,BYTE PTR [ecx]
  410df3:	jns    0x410dc7
  410df5:	rcr    ebp,0x32
  410df8:	xchg   edx,eax
  410df9:	inc    esp
  410dfa:	sbb    eax,0xac8ccc75
  410dff:	dec    BYTE PTR [ebp+ecx*4-0x5c]
  410e03:	cli    
  410e04:	dec    esp
  410e05:	push   edx
  410e06:	shr    DWORD PTR [ebx+0x54defe9f],1
  410e0c:	inc    ebp
  410e0d:	rcl    dh,1
  410e0f:	add    BYTE PTR [ebp-0x63892919],bh
  410e15:	inc    BYTE PTR [eax]
  410e17:	dec    ebx
  410e18:	repnz iret 
  410e1a:	add    BYTE PTR [eax],al
  410e1c:	cld    
  410e1d:	adc    DWORD PTR [ebx+0x7405c07d],eax
  410e23:	pop    ss
  410e24:	xlat   BYTE PTR ds:[ebx]
  410e25:	fcmovbe st,st(3)
  410e27:	(bad)  
  410e28:	cmp    eax,0x8475fdcd
  410e2d:	arpl   WORD PTR [ebx+0x8],si
  410e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e31:	cmp    bl,BYTE PTR [eax]
  410e33:	call   FWORD PTR ds:0xb302e6cd
  410e39:	fs std 
  410e3b:	inc    edi
  410e3c:	jae    0x410e2f
  410e3e:	test   DWORD PTR [edi],0xfffcb7da
  410e44:	xlat   BYTE PTR ds:[ebx]
  410e45:	arpl   WORD PTR [ebx-0xc],si
  410e48:	add    BYTE PTR [eax+0x60],cl
  410e4b:	push   edi
  410e4d:	sub    al,0x0
  410e4f:	add    BYTE PTR [eax+0x8],bl
  410e52:	pop    edi
  410e53:	leave  
  410e54:	sbb    bh,cl
  410e56:	call   DWORD PTR [ebx+eax*8-0x80]
  410e5a:	push   ebp
  410e5b:	(bad)  
  410e5c:	jge    0x410dfe
  410e5e:	out    0xd2,al
  410e60:	mul    BYTE PTR [edx-0x3]
  410e63:	push   0x40e96d
  410e68:	push   edi
  410e69:	fiadd  DWORD PTR [edi]
  410e6b:	call   0x40f00c
  410e70:	adc    ecx,eax
  410e72:	jae    0x410e79
  410e74:	xlat   BYTE PTR ds:[ebx]
  410e75:	pop    esp
  410e76:	ror    BYTE PTR [eax],0x8
  410e79:	pop    esi
  410e7a:	(bad)  
  410e7b:	push   edi
  410e7d:	fadd   DWORD PTR [edi]
  410e7f:	call   0xff343784
  410e84:	call   DWORD PTR [edi]
  410e86:	jl     0x410eea
  410e88:	inc    ecx
  410e89:	enter  0x7362,0x8
  410e8d:	pop    ds
  410e8e:	jge    0x410f04
  410e90:	dec    ebx
  410e91:	xor    DWORD PTR [edx+0x34f10b02],esi
  410e97:	add    DWORD PTR [edi-0x18],ebx
  410e9a:	outs   dx,DWORD PTR ds:[esi]
  410e9b:	cli    
  410e9c:	(bad)  
  410e9d:	mov    edx,0xaeb8c29e
  410ea2:	push   edx
  410ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ea4:	(bad)  
  410ea5:	mov    ds:0x2406eb1b,eax
  410eaa:	xchg   edx,eax
  410eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eac:	je     0x410ed7
  410eae:	jp     0x410f1f
  410eb0:	dec    ecx
  410eb1:	xor    DWORD PTR [edx-0x5b034007],esi
  410eb7:	inc    ebp
  410eb8:	leave  
  410eb9:	jae    0x410e54
  410ebb:	add    ch,BYTE PTR [eax+0x1e]
  410ebe:	add    eax,0x9c6e0045
  410ec3:	cli    
  410ec4:	out    0xf0,eax
  410ec6:	out    0x3,al
  410ec8:	add    BYTE PTR [edx],ch
  410eca:	repnz das 
  410ecc:	or     DWORD PTR [esi-0x4c],edx
  410ecf:	test   BYTE PTR [esi+0x40752634],0x31
  410ed6:	retf   0x64e0
  410ed9:	lock mov cl,0xa5
  410edc:	je     0x410f07
  410ede:	cmp    bl,dh
  410ee0:	dec    edx
  410ee1:	xor    DWORD PTR [eax-0x63ff4007],esi
  410ee7:	test   eax,0x132d74a5
  410eec:	add    BYTE PTR [eax+0x680271a7],dl
  410ef2:	inc    eax
  410ef3:	lea    eax,[ebx+0x0]
  410ef6:	push   es
  410ef7:	jbe    0x410ef3
  410ef9:	out    0x2c,eax
  410efb:	push   edi
  410efc:	add    al,BYTE PTR [eax]
  410efe:	sub    dh,al
  410f00:	das    
  410f01:	or     esi,ebp
  410f03:	sbb    eax,0x342c8ef7
  410f08:	jne    0x410f4a
  410f0a:	xor    DWORD PTR [ecx],ecx
  410f0c:	mov    eax,ds:0xe9093103
  410f11:	inc    esp
  410f12:	clc    
  410f13:	(bad)  
  410f14:	loopne 0x410f19
  410f16:	pop    esp
  410f17:	mov    ?,WORD PTR [ecx+eax*4+0x4d1e95f2]
  410f1e:	dec    ecx
  410f1f:	test   al,0x44
  410f21:	inc    ebx
  410f22:	xor    DWORD PTR [edx-0x437103c5],ebx
  410f28:	and    DWORD PTR [ecx+esi*1],eax
  410f2b:	push   cs
  410f2c:	test   eax,0x3f3a2f2f
  410f31:	mov    ebx,0x43e90570
  410f36:	mov    edx,0x29276199
  410f3b:	scas   al,BYTE PTR es:[edi]
  410f3c:	out    0x5f,eax
  410f3e:	neg    dl
  410f40:	call   0xa67a73
  410f45:	mov    eax,ds:0xa4e947d2
  410f4a:	add    ch,ah
  410f4c:	adc    BYTE PTR [ecx+0x6d],dl
  410f4f:	jmp    0x410f59
  410f51:	jmp    0xef559e4e
  410f56:	inc    esp
  410f57:	out    0xcf,eax
  410f59:	sub    al,BYTE PTR [eax]
  410f5b:	xor    DWORD PTR [esi-0x18b4043d],ecx
  410f61:	push   0xd01539e5
  410f66:	and    DWORD PTR [edi+0xc],0xffffffb5
  410f6a:	cmpxchg ecx,ebx
  410f6d:	repnz das 
  410f6f:	es mov ebp,ebx
  410f72:	dec    eax
  410f73:	test   DWORD PTR [edi],ecx
  410f75:	imul   esp,ebp,0x83e41565
  410f7b:	aas    
  410f7c:	sub    DWORD PTR [eax+eax*1-0x11],edi
  410f80:	add    ecx,ecx
  410f82:	cmp    al,0xb1
  410f84:	fcos   
  410f86:	call   0xa507cfa2
  410f8b:	xchg   esi,eax
  410f8c:	cdq    
  410f8d:	(bad)  
  410f8e:	jmp    0xe185d1c5
  410f93:	xor    cl,BYTE PTR [ecx]
  410f95:	add    cl,ch
  410f97:	dec    ecx
  410f98:	sbb    eax,0x88f9c208
  410f9d:	ds push cs
  410f9f:	push   es
  410fa0:	out    dx,al
  410fa1:	cmp    BYTE PTR [ecx+ebx*8],0x99
  410fa5:	jae    0x410f82
  410fa7:	aad    0x44
  410fa9:	clc    
  410faa:	call   0x1c4118e1
  410faf:	add    BYTE PTR [ecx],ch
  410fb1:	ret    0x9d44
  410fb4:	xor    ecx,DWORD PTR [ecx]
  410fb6:	add    cl,ch
  410fb8:	test   eax,0xcd24f6f6
  410fbd:	or     BYTE PTR [eax],al
  410fbf:	jmp    0xa74b23f6
  410fc4:	ins    DWORD PTR es:[edi],dx
  410fc5:	stc    
  410fc6:	(bad)  
  410fc7:	sub    al,0x99
  410fc9:	cdq    
  410fca:	(bad)  
  410fcb:	jmp    0xc57f9902
  410fd0:	pop    es
  410fd1:	add    al,0xff
  410fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fd4:	call   0xffa1:0x72e06ae
  410fdb:	call   0xc4c41912
  410fe0:	mov    cs,WORD PTR [eax]
  410fe2:	jne    0x410fce
  410fe4:	in     al,dx
  410fe5:	mov    esi,cr5
  410fe8:	mov    dl,0xd7
  410fea:	push   DWORD PTR [ebx-0xe837c5e]
  410ff0:	mov    ecx,0x12de7ff4
  410ff5:	push   ds
  410ff6:	push   ss
  410ff7:	imul   ecx,DWORD PTR [ebp+0xa],0x40229420
  410ffe:	jmp    0x411000
  411000:	push   es
  411001:	adc    eax,DWORD PTR [esi+0x1]
  411004:	pusha  
  411005:	xchg   ebp,eax
  411006:	inc    ebp
  411007:	sbb    BYTE PTR [edi-0x500a8af4],0xdd
  41100e:	inc    esi
  41100f:	or     BYTE PTR [edi],0xd
  411012:	jne    0x410ff3
  411014:	add    BYTE PTR [edi-0x27ff0bbe],dl
  41101a:	or     al,0x0
  41101c:	mov    esp,DWORD PTR [ebp+0x5]
  41101f:	mov    edi,DWORD PTR [ebp-0x40]
  411022:	and    BYTE PTR [bx+si-0x5751],al
  411027:	jae    0x411045
  411029:	(bad)  
  41102a:	add    al,0x0
  41102c:	jmp    DWORD PTR [ebp+0x71]
  41102f:	push   esp
  411030:	call   0x3e7ab8
  411035:	or     esp,0x73
  411038:	push   es
  411039:	aas    
  41103a:	dec    ebx
  41103b:	leave  
  41103c:	ret    0xc94
  41103f:	mov    esi,edi
  411041:	inc    esi
  411042:	ins    BYTE PTR es:[edi],dx
  411043:	inc    ebx
  411044:	hlt    
  411045:	pop    ss
  411046:	lea    edi,ds:0xfd556500
  41104c:	jne    0x411032
  41104e:	shl    bh,cl
  411050:	or     al,0xce
  411052:	imul   edi,ebp,0x5f
  411055:	mov    es,ebp
  411057:	rol    BYTE PTR [eax+ebx*2],0xd1
  41105b:	mov    ch,ah
  41105d:	retf   
  41105e:	rol    dh,0x56
  411061:	xchg   edi,eax
  411062:	(bad)  
  411063:	jnp    0x411079
  411065:	sbb    BYTE PTR [eax],al
  411067:	or     DWORD PTR [ebx+0x414a151d],eax
  41106d:	or     BYTE PTR [esi*2-0x36b610fa],cl
  411074:	ret    0xc08
  411077:	mov    eax,DWORD PTR [ebp+0x0]
  41107a:	xor    DWORD PTR [esi+0x37ad04db],edx
  411080:	inc    ebp
  411081:	add    BYTE PTR [esi],ah
  411083:	and    esp,DWORD PTR [edi+0x0]
  411086:	xor    DWORD PTR [edx+0x2fc104db],esp
  41108c:	inc    ebp
  41108d:	add    BYTE PTR [esi],ch
  41108f:	and    edi,DWORD PTR [ebx+0x0]
  411092:	xor    DWORD PTR [edx+0x27a504db],esp
  411098:	inc    esp
  411099:	add    BYTE PTR [esi],dh
  41109b:	and    ecx,DWORD PTR [esi-0x705dcf00]
  4110a1:	inc    esp
  4110a2:	mov    ebp,0xa94490f1
  4110a7:	icebp  
  4110a8:	nop
  4110a9:	inc    esp
  4110aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ab:	icebp  
  4110ac:	mov    ds:0x4437ad34,al
  4110b1:	add    BYTE PTR [esi-0x30180c0c],dl
  4110b7:	imul   esp,DWORD PTR [ecx-0x541b4b02],0xafecac4f
  4110c1:	dec    edi
  4110c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110c3:	in     al,0x93
  4110c5:	dec    edi
  4110c6:	outs   dx,BYTE PTR ds:[esi]
  4110c7:	pop    esp
  4110c8:	jbe    0x411057
  4110ca:	lock mov eax,ds:0x8a4174a1
  4110d0:	not    WORD PTR [esi+0x2e]
  4110d4:	nop
  4110d5:	inc    esp
  4110d6:	ins    DWORD PTR es:[edi],dx
  4110d7:	push   ecx
  4110d8:	pop    DWORD PTR [ecx+edx*2+0x51]
  4110dc:	pop    DWORD PTR [eax+eax*1+0x55]
  4110e0:	push   ecx
  4110e1:	mov    eax,ds:0x441fa134
  4110e6:	add    BYTE PTR [esi],ch
  4110e8:	pop    esi
  4110e9:	repnz out 0xbb,eax
  4110ec:	fsub   DWORD PTR [ecx-0x59a1e102]
  4110f2:	mov    gs,WORD PTR [ecx+ecx*1+0x3d]
  4110f6:	mov    ds:0x486db585,al
  4110fb:	jmp    0xfef4bcce
  411100:	xchg   esi,eax
  411101:	call   0x358db509
  411106:	xor    ebx,DWORD PTR [ebx+0x8]
  411109:	xchg   ebx,eax
  41110a:	add    ebx,DWORD PTR [ebx+0x9]
  41110d:	add    DWORD PTR [ebx],0x4b
  411110:	or     DWORD PTR [eax+ecx*2-0x3],ebx
  411114:	cmp    esi,esp
  411116:	imul   DWORD PTR [ecx+0x3a042842]
  41111c:	leave  
  41111d:	in     eax,0x87
  41111f:	sub    BYTE PTR [eax],cl
  411121:	jmp    0x9955c329
  411126:	add    al,0x3e
  411128:	(bad)  
  411129:	call   0x624a4230
  41112e:	dec    edi
  41112f:	ins    DWORD PTR es:[edi],dx
  411130:	rcr    BYTE PTR [ebx],cl
  411132:	test   al,0x27
  411134:	mov    ds,WORD PTR [esp+eax*1-0x7262f6cf]
  41113b:	std    
  41113c:	mov    eax,0x825d1f61
  411141:	sbb    edx,eax
  411143:	add    BYTE PTR [ebx+0x6f687a0b],dl
  411149:	sbb    al,0xad
  41114b:	xchg   ecx,eax
  41114c:	in     eax,dx
  41114d:	lods   al,BYTE PTR ds:[esi]
  41114e:	jne    0x411167
  411150:	and    DWORD PTR [ecx+0x9314bb8],0x94d1f6a
  41115a:	out    dx,al
  41115b:	xchg   DWORD PTR [ecx+ecx*1-0x17],esi
  41115f:	add    esi,DWORD PTR [edx+0x26045914]
  411165:	lea    ebp,[esp+eax*1]
  411168:	xor    DWORD PTR [ecx],ecx
  41116a:	push   0x1f
  41116c:	or     eax,0xb6e60009
  411171:	dec    edi
  411172:	(bad)  
  411173:	call   0x25b5a7aa
  411178:	fst    st(0)
  41117a:	pop    esp
  41117b:	push   ds
  41117c:	rol    BYTE PTR [eax+0x1cd02144],1
  411182:	cld    
  411183:	push   cs
  411184:	push   ds
  411185:	sar    esi,0x7c
  411188:	(bad)  
  411189:	lods   eax,DWORD PTR ds:[esi]
  41118a:	pop    esi
  41118b:	pushf  
  41118c:	xchg   ecx,eax
  41118d:	xchg   esi,eax
  41118e:	addr16 test eax,0x1004817
  411194:	xchg   esi,eax
  411195:	dec    esi
  411196:	add    cl,ch
  411198:	add    ah,BYTE PTR [ecx]
  41119a:	inc    eax
  41119b:	inc    esp
  41119c:	jb     0x4111a7
  41119e:	call   FWORD PTR [ebp+ebp*8-0x53]
  4111a2:	test   BYTE PTR [eax],ah
  4111a4:	sub    eax,0xa90b09
  4111a9:	inc    esi
  4111aa:	icebp  
  4111ab:	addr16 es dec esi
  4111ae:	dec    eax
  4111af:	add    cl,al
  4111b1:	jae    0x411201
  4111b3:	add    cl,ch
  4111b5:	bound  esp,QWORD PTR [ecx]
  4111b7:	inc    edi
  4111b8:	or     al,0xf2
  4111ba:	or     bh,bh
  4111bc:	adc    al,0x75
  4111be:	lods   eax,DWORD PTR ds:[esi]
  4111bf:	push   0xb093520
  4111c4:	test   eax,0x3667f11e
  4111c9:	push   ss
  4111ca:	dec    eax
  4111cb:	add    BYTE PTR [ecx-0x16ffb131],dl
  4111d1:	and    ah,BYTE PTR [ecx]
  4111d3:	dec    edi
  4111d4:	add    al,0xf2
  4111d6:	or     bh,bh
  4111d8:	fdivr  QWORD PTR [edx-0x53]
  4111db:	dec    esp
  4111dc:	mov    al,0x32
  4111de:	or     DWORD PTR [ebx],ecx
  4111e0:	sub    DWORD PTR [edi],esp
  4111e2:	dec    esp
  4111e3:	push   0xbda632e9
  4111e8:	add    BYTE PTR [edi-0x5],dh
  4111eb:	or     ebp,eax
  4111ed:	stc    
  4111ee:	iret   
  4111ef:	(bad)  
  4111f0:	jmp    DWORD PTR [edi-0x45]
  4111f3:	xchg   BYTE PTR [esi+0x75ff08c9],cl
  4111f9:	add    al,0x61
  4111fb:	push   ecx
  4111fc:	pop    ecx
  4111fd:	daa    
  4111fe:	imul   edi,ebp,0x73692475
  411204:	hlt    
  411205:	daa    
  411206:	sti    
  411207:	or     ebp,eax
  411209:	mov    bl,0xcf
  41120b:	(bad)  
  41120c:	inc    DWORD PTR [eax]
  41120e:	out    0xfe,eax
  411210:	out    dx,eax
  411211:	call   FWORD PTR [ebp+0x60]
  411214:	std    
  411215:	jne    0x41120b
  411217:	pusha  
  411218:	imul   ebx,DWORD PTR [ecx-0x29],0x74
  41121c:	std    
  41121d:	jne    0x41120b
  41121f:	je     0x411294
  411221:	fsubr  st(7),st
  411223:	repnz or ebp,eax
  411226:	pop    es
  411227:	(bad)  
  411228:	(bad)  
  411229:	push   DWORD PTR [edi-0xe]
  41122c:	(bad)  
  41122d:	call   0x405b9a
  411232:	inc    edi
  411233:	ror    eax,cl
  411235:	ret    0x878
  411238:	push   ebp
  411239:	mov    esp,DWORD PTR [eax+ecx*4-0x15e4173e]
  411240:	adc    eax,DWORD PTR ds:0x1118197
  411246:	mov    BYTE PTR [eax],cl
  411248:	lea    eax,[ebp-0x14]
  41124b:	fmul   QWORD PTR [ebp+eax*2+0x458cddb0]
  411252:	in     al,0xdc
  411254:	imul   eax,DWORD PTR [edx],0xe80ff1c7
  41125a:	cmp    DWORD PTR [ebp+edi*8-0x1],edi
  41125e:	fucomi st,st(1)
  411260:	test   DWORD PTR [ecx],0xf287ab31
  411266:	xor    DWORD PTR [edx-0x295b00fe],esp
  41126c:	mov    es,WORD PTR [ecx+eiz*1-0x46]
  411270:	repnz add BYTE PTR fs:[eax-0x5e],dh
  411275:	popf   
  411276:	je     0x411299
  411278:	dec    edx
  411279:	jg     0x4112c1
  41127b:	xor    DWORD PTR [edx+0x2d36c009],esp
  411281:	mov    esp,0x8fa1feff
  411286:	inc    esp
  411287:	std    
  411288:	push   ecx
  411289:	pop    DWORD PTR [ecx+ebp*8+0x71]
  41128d:	pop    DWORD PTR [ebp+eiz*8+0x71]
  411291:	sub    BYTE PTR [eax],al
  411293:	ficom  WORD PTR [ebx+esi*8]
  411296:	out    0xcf,eax
  411298:	fwait
  411299:	popf   
  41129a:	(bad)  
  41129b:	mov    dl,0x2c
  41129d:	pushf  
  41129e:	add    BYTE PTR [esi],dh
  4112a0:	sub    eax,0xa1beff5b
  4112a5:	popf   
  4112a6:	je     0x411265
  4112a8:	dec    ecx
  4112a9:	mov    ebx,0xaaa1f063
  4112ae:	inc    ebp
  4112af:	out    dx,al
  4112b0:	mov    eax,ds:0xaa710b02
  4112b5:	xchg   DWORD PTR [edx-0x72fd5dcf],esp
  4112bb:	hlt    
  4112bc:	jne    0x4112f0
  4112be:	(bad)  
  4112bf:	in     al,dx
  4112c0:	imul   esi,DWORD PTR [edx],0x327df48d
  4112c6:	push   0x32
  4112c8:	adc    DWORD PTR [edi],0x10
  4112cb:	pop    ecx
  4112cc:	rcl    BYTE PTR [esi+edi*8-0x7dfe19a],1
  4112d3:	xor    DWORD PTR [ebx+0x31008287],ebp
  4112d9:	mov    ds:0x8f48b02,al
  4112de:	pop    ebp
  4112df:	sahf   
  4112e0:	push   ss
  4112e1:	test   BYTE PTR [ebx+0x5d4dadaf],ah
  4112e7:	xor    esp,DWORD PTR [ebp+ecx*2+0x4cbc3351]
  4112ee:	inc    ebp
  4112ef:	xor    ebx,DWORD PTR [ebx+0x41183e0d]
  4112f5:	mov    eax,ds:0x9317955f
  4112fa:	imul   esp,DWORD PTR [eax],0x3e9c0909
  411300:	out    dx,al
  411301:	or     al,0x6d
  411303:	lea    esi,[ecx+0x9]
  411306:	push   ss
  411307:	sahf   
  411308:	not    DWORD PTR [edx-0x7c3ef7db]
  41130e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41130f:	add    esp,esi
  411311:	xchg   edx,eax
  411312:	std    
  411313:	popf   
  411314:	test   DWORD PTR [ebx*2-0x11f68e73],0xe592cf9d
  41131f:	pop    ss
  411320:	mov    ebp,0xbf9feaa1
  411325:	xchg   edx,eax
  411326:	lods   eax,DWORD PTR ds:[esi]
  411327:	inc    edi
  411328:	leave  
  411329:	or     cl,ch
  41132b:	add    esi,DWORD PTR [ecx]
  41132d:	xchg   BYTE PTR [ebx],al
  41132f:	nop
  411330:	mov    ah,0x48
  411332:	jmp    0x6a2135d3
  411337:	fbld   TBYTE PTR [esi+0x42783]
  41133d:	mov    ds,WORD PTR ds:0x7d4580c9
  411343:	outs   dx,BYTE PTR ds:[esi]
  411344:	inc    ebx
  411345:	xor    DWORD PTR [edx+0x280ef51c],edx
  41134b:	push   ebx
  41134c:	inc    esp
  41134d:	xor    DWORD PTR [ebx+ebp*1-0xc6e0954],eax
  411354:	scas   eax,DWORD PTR es:[edi]
  411355:	pop    edi
  411356:	sbb    al,0x0
  411358:	in     eax,0xb5
  41135a:	sbb    eax,0x913d8108
  41135f:	(bad)  
  411360:	data16 jp 0x41132b
  411363:	psubsw mm0,QWORD PTR [edi]
  411366:	jle    0x411353
  411368:	push   0x69
  41136a:	sahf   
  41136b:	(bad)  
  41136c:	aam    0x3a
  41136e:	mov    eax,ds:0x92c59c3d
  411373:	imul   ebx,ecx,0x99f04caf
  411379:	mov    ch,0x1c
  41137b:	or     BYTE PTR [ecx+0x65],al
  41137e:	aaa    
  41137f:	jmp    DWORD PTR [esi]
  411381:	cmp    cl,cl
  411383:	je     0x41136a
  411385:	jmp    0x41134e
  411387:	pop    es
  411388:	jmp    0x22a90cd5
  41138d:	sbb    DWORD PTR [eax+0x0],ecx
  411390:	je     0x411400
  411392:	cdq    
  411393:	dec    edi
  411394:	adc    DWORD PTR [edi+0x2e],eax
  411397:	push   esi
  411399:	sub    ecx,ecx
  41139b:	je     0x411382
  41139d:	sti    
  41139e:	mov    DWORD PTR [edi],0x4ced00e9
  4113a4:	in     al,dx
  4113a5:	call   0x64411cdc
  4113aa:	outs   dx,DWORD PTR ds:[esi]
  4113ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113ac:	dec    edi
  4113ad:	into   
  4113ae:	inc    edi
  4113af:	add    eax,ebp
  4113b1:	mov    ch,0x5f
  4113b3:	xchg   edx,eax
  4113b4:	(bad)  
  4113b5:	bnd jb 0x4113cd
  4113b8:	push   es
  4113b9:	push   0x37
  4113bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113bc:	push   DWORD PTR [ebx]
  4113be:	aaa    
  4113bf:	fidivr WORD PTR [edi+0x970b0]
  4113c5:	cmp    DWORD PTR [eax-0x3c131540],ecx
  4113cb:	test   eax,0xfdf3e872
  4113d0:	mov    edi,0x567c6500
  4113d5:	xor    DWORD PTR [eax+0x20057506],0x6
  4113dc:	add    BYTE PTR [ecx],al
  4113de:	pop    eax
  4113df:	mov    bh,dh
  4113e1:	add    DWORD PTR [ebx+ecx*1+0x2b],esp
  4113e5:	rol    BYTE PTR [ecx],0xc8
  4113e8:	push   es
  4113e9:	add    BYTE PTR [ebx+0x18418c89],ch
  4113ef:	add    BYTE PTR [ebx-0x14],0xc8
  4113f3:	ins    DWORD PTR es:[edi],dx
  4113f4:	jae    0x4113fe
  4113f6:	cmp    BYTE PTR [eax],0x54
  4113f9:	call   FWORD PTR [edi-0x77]
  4113fc:	test   BYTE PTR [ecx],0xc4
  4113ff:	pop    es
  411400:	cmp    eax,0x1a
  411403:	clc    
  411404:	add    eax,0x609d0083
  411409:	(bad)  
  41140a:	je     0x411412
  41140c:	mov    ds:0x41ac9be,al
  411411:	add    BYTE PTR [ebp-0xb19f6b],cl
  411417:	gs add al,0xe8
  41141a:	xchg   edx,eax
  41141b:	mov    ch,0x6d
  41141d:	std    
  41141e:	add    eax,0xa
  411421:	je     0x411428
  411423:	pop    ebx
  411424:	ins    DWORD PTR es:[edi],dx
  411425:	add    BYTE PTR [ebp-0x2a],dh
  411428:	xchg   DWORD PTR [ebx-0x14],edi
  41142b:	enter  0x5f9,0x2b
  41142f:	fdivr  DWORD PTR [esi-0x7e67f740]
  411435:	inc    ebx
  411436:	in     al,dx
  411437:	cmp    BYTE PTR [ebx+esi*2+0x8],dh
  41143b:	jo     0x411432
  41143d:	push   esp
  41143e:	(bad)  
  41143f:	fild   WORD PTR [eax]
  411441:	shl    BYTE PTR [ebp-0x6a],0x87
  411445:	jnp    0x411433
  411447:	mov    cl,bh
  411449:	add    eax,0xcc62312b
  41144e:	sar    DWORD PTR [ecx],0xa2
  411451:	xchg   DWORD PTR [ebp+edx*2-0xe],eax
  411455:	call   0x5655:0x2f7a2974
  41145c:	pop    ss
  41145d:	xchg   edi,esi
  41145f:	icebp  
  411460:	xchg   esp,eax
  411461:	add    BYTE PTR [ebx+0x750435c4],al
  411467:	aaa    
  411468:	sti    
  411469:	ret    
  41146a:	enter  0x7300,0xaa
  41146e:	add    cl,BYTE PTR [ebp-0xcc318c]
  411474:	pushf  
  411475:	call   0x829a:0xcf8436aa
  41147c:	sbb    DWORD PTR [edx],eax
  41147e:	adc    DWORD PTR [esi],eax
  411480:	mov    dl,0x5c
  411482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411483:	(bad)  
  411484:	jge    0x411426
  411486:	in     eax,dx
  411487:	mov    edi,0xbe3e8
  41148c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41148d:	pop    esp
  41148e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41148f:	dec    edi
  411490:	out    dx,al
  411491:	je     0x41149d
  411493:	call   0xfeda81e3
  411498:	mov    dl,0x9
  41149a:	in     al,0x74
  41149c:	das    
  41149d:	and    ebx,DWORD PTR [ecx]
  41149f:	in     al,dx
  4114a0:	xor    DWORD PTR ds:0x58f12b01,edx
  4114a6:	les    eax,FWORD PTR [edi]
  4114a8:	xor    DWORD PTR ds:0x4c61ec40,ebx
  4114ae:	in     al,0xfe
  4114b0:	and    al,0xaa
  4114b2:	stos   BYTE PTR es:[edi],al
  4114b3:	and    eax,0x8c99c6fc
  4114b8:	hlt    
  4114b9:	mov    ebp,0xaa1cff32
  4114be:	stos   BYTE PTR es:[edi],al
  4114bf:	xchg   ebp,eax
  4114c0:	in     eax,0x5e
  4114c2:	cdq    
  4114c3:	or     BYTE PTR [ecx+0x2a15e808],0x8c
  4114ca:	mov    al,ds:0x6a06fe06
  4114cf:	sbb    BYTE PTR [eax],al
  4114d1:	pop    ebp
  4114d2:	or     BYTE PTR [edx+eax*1],dl
  4114d5:	sbb    cl,cl
  4114d7:	scas   eax,DWORD PTR es:[edi]
  4114d8:	lds    esi,FWORD PTR [esi]
  4114da:	or     DWORD PTR [edx-0x75],ecx
  4114dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114de:	dec    ecx
  4114df:	jmp    0x18de0a6c
  4114e4:	sbb    DWORD PTR cs:[eax-0x66b6f425],edx
  4114eb:	mov    ah,0x9a
  4114ed:	aaa    
  4114ee:	and    BYTE PTR [edi],bl
  4114f0:	pop    eax
  4114f1:	outs   dx,BYTE PTR ds:[esi]
  4114f2:	or     DWORD PTR [eax+eax*2+0x15],ebx
  4114f6:	cmp    dl,bl
  4114f8:	add    al,0x1e
  4114fa:	adc    eax,0x19d9aed
  4114ff:	inc    ecx
  411500:	daa    
  411501:	pop    es
  411502:	(bad)  
  411503:	sub    eax,0xe901f0cc
  411508:	xor    BYTE PTR [edx-0x5409663],ch
  41150e:	jl     0x4114bb
  411510:	xchg   edi,eax
  411511:	jle    0x4114b4
  411513:	adc    BYTE PTR [ebx],dh
  411515:	out    0x8e,al
  411517:	add    eax,0x738edd10
  41151c:	pop    es
  41151d:	leave  
  41151e:	popf   
  41151f:	call   0x360f:0x2902cf9a
  411526:	mov    ds,WORD PTR [ebx+0xc]
  411529:	mov    esi,0xfbacdd14
  41152e:	mov    ss,ebp
  411530:	cdq    
  411531:	cmp    ecx,ecx
  411533:	push   ebx
  411534:	add    al,0x0
  411536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411537:	adc    al,0xc5
  411539:	lods   al,BYTE PTR ds:[esi]
  41153a:	mov    eax,ds:0x6999be39
  41153f:	retf   
  411540:	jmp    esp
  411542:	xor    dh,BYTE PTR [ebx+ecx*4]
  411545:	mov    ebp,0x910c15a8
  41154a:	fsubr  QWORD PTR [edi+edi*8]
  41154d:	sahf   
  41154e:	and    al,0xc9
  411550:	jae    0x41151c
  411552:	leave  
  411553:	adc    eax,0x41953910
  411558:	pop    ebp
  411559:	xchg   BYTE PTR [eax-0x47f97c2],bh
  41155f:	int    0xff
  411561:	jne    0x4115a1
  411563:	icebp  
  411564:	(bad)  
  411565:	hlt    
  411566:	push   esi
  411567:	ds (bad) 
  411569:	fsubr  QWORD PTR [edx]
  41156b:	mov    eax,ds:0x8f986987
  411570:	out    0x15,eax
  411572:	push   0xffffff8e
  411574:	(bad)  
  411575:	and    bh,ch
  411577:	stc    
  411578:	call   FWORD PTR [ebx-0x16985e53]
  41157e:	xor    bl,BYTE PTR [esi+0x2a61c1bd]
  411584:	inc    ecx
  411585:	jmp    0x934d2a33
  41158a:	cld    
  41158b:	mov    ?,WORD PTR [ecx+esi*8-0x36]
  41158f:	pop    ebp
  411590:	(bad)  
  411591:	push   ss
  411592:	enter  0x25,0xe9
  411596:	cdq    
  411597:	dec    ebx
  411598:	sub    DWORD PTR [bx+si],eax
  41159b:	adc    DWORD PTR [eax+0x0],ecx
  41159e:	(bad)  
  41159f:	daa    
  4115a0:	std    
  4115a1:	imul   edx,ebx,0x10814a9
  4115a7:	dec    edx
  4115a8:	(bad)  
  4115a9:	(bad)  
  4115aa:	out    0xa,al
  4115ac:	or     DWORD PTR [eax],eax
  4115ae:	into   
  4115af:	pop    eax
  4115b0:	es mov bh,0x4d
  4115b3:	repnz or bh,bh
  4115b6:	push   esp
  4115b7:	cmp    DWORD PTR [ebx],esp
  4115b9:	sbb    al,0x0
  4115bb:	ja     0x4115bb
  4115bd:	pop    es
  4115be:	call   0x3e86cd
  4115c3:	lock add al,0x0
  4115c6:	out    dx,eax
  4115c7:	push   ss
  4115c8:	loop   0x411589
  4115ca:	fs dec ecx
  4115cc:	add    eax,0xdb8475ff
  4115d1:	sbb    edi,edi
  4115d3:	dec    ebp
  4115d4:	std    
  4115d5:	out    0x6b,eax
  4115d7:	mov    bh,0x70
  4115d9:	std    
  4115da:	push   0xbeef0948
  4115df:	inc    eax
  4115e0:	cmp    BYTE PTR [ebx+0x41],ah
  4115e3:	pop    eax
  4115e4:	jo     0x411659
  4115e6:	or     al,0x32
  4115e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115e9:	std    
  4115ea:	jne    0x41162c
  4115ec:	popa   
  4115ed:	push   edx
  4115ee:	call   edi
  4115f0:	jo     0x411658
  4115f2:	add    BYTE PTR [eax],bl
  4115f4:	bound  edi,QWORD PTR [eax+ebp*2+0x40ec58]
  4115fb:	ja     0x4115f8
  4115fd:	or     ebp,DWORD PTR [edx+0x0]
  411600:	sub    esi,DWORD PTR [edx+0x73]
  411603:	or     BYTE PTR [eax-0x4d],dh
  411606:	std    
  411607:	call   DWORD PTR [edi-0x41]
  41160a:	ror    BYTE PTR [eax],0x8
  41160d:	fmul   QWORD PTR [edx-0x5b37414]
  411613:	push   0xffffffd8
  411615:	fidiv  WORD PTR [ecx]
  411617:	(bad)  
  411618:	mov    ebp,0xbdcde800
  41161d:	jno    0x41161c
  41161f:	mov    DWORD PTR [ebp-0x42a7998c],ecx
  411625:	inc    edi
  411626:	add    bh,bh
  411628:	cmp    eax,0xd74de800
  41162d:	je     0x41162c
  41162f:	call   FWORD PTR [ebp+0x71]
  411632:	std    
  411633:	jne    0x411666
  411635:	stos   BYTE PTR es:[edi],al
  411636:	stos   BYTE PTR es:[edi],al
  411637:	idiv   esp
  411639:	mov    edx,0x9e73c896
  41163e:	add    dl,BYTE PTR [ebp-0x56]
  411641:	mov    esi,0x488dc382
  411646:	add    al,0x6a
  411648:	inc    edx
  411649:	pop    ebx
  41164a:	adc    BYTE PTR [eax],cl
  41164c:	mov    DWORD PTR [esi+0x1976ff30],eax
  411652:	inc    ecx
  411653:	cld    
  411654:	fsqrt  
  411656:	and    BYTE PTR [ecx+0x31],al
  411659:	jnp    0x41166b
  41165b:	or     BYTE PTR [ecx-0x5a],cl
  41165e:	xchg   ebp,eax
  41165f:	(bad)  
  411660:	push   esi
  411661:	or     edx,DWORD PTR [ecx]
  411663:	cld    
  411664:	add    BYTE PTR [esi-0x73],cl
  411667:	or     ch,al
  411669:	outs   dx,BYTE PTR ds:[esi]
  41166a:	cmc    
  41166b:	xchg   esi,eax
  41166c:	(bad)  
  41166d:	push   0xdcffffe0
  411672:	push   ss
  411673:	test   al,0x82
  411675:	cmc    
  411676:	cmp    DWORD PTR [edx],ebp
  411678:	add    BYTE PTR [ebx+0x297496f6],bl
  41167e:	cmp    ch,BYTE PTR [ebx]
  411680:	push   ebp
  411681:	push   ss
  411682:	retf   
  411683:	mov    WORD PTR [ebp+ecx*1-0x36],es
  411687:	adc    esp,DWORD PTR [ebp+0x70]
  41168a:	mov    ds:0xfa297495,al
  41168f:	stos   BYTE PTR es:[edi],al
  411690:	std    
  411691:	imul   dl
  411693:	sub    DWORD PTR [eax],eax
  411695:	pop    ecx
  411696:	adc    DWORD PTR [ecx],esp
  411698:	inc    ecx
  411699:	xor    DWORD PTR [edx-0x5d8f9ae9],ecx
  41169f:	xchg   ebp,eax
  4116a0:	xor    al,0x96
  4116a2:	pop    ecx
  4116a3:	inc    ebx
  4116a4:	add    cl,bl
  4116a6:	mov    ebp,0xa6c6ff39
  4116ab:	ret    0xfe73
  4116ae:	or     BYTE PTR [eax+0x40],dh
  4116b1:	mov    ecx,0x6e55e020
  4116b6:	or     DWORD PTR [ecx+0x4],eax
  4116b9:	xor    DWORD PTR [esi+ecx*4+0x2824e62b],ebx
  4116c0:	add    al,0x96
  4116c2:	adc    eax,0x10596c1
  4116c7:	rcl    ecx,0x0
  4116ca:	pop    es
  4116cb:	mov    WORD PTR [ebp+0x284a782b],gs
  4116d1:	add    al,0x9
  4116d3:	or     ecx,ebp
  4116d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116d6:	lods   al,BYTE PTR ds:[esi]
  4116d7:	and    BYTE PTR [ecx-0x71f70fe1],ch
  4116dd:	adc    BYTE PTR [ecx-0x75],bl
  4116e0:	sti    
  4116e1:	or     ecx,DWORD PTR [ecx-0x10]
  4116e4:	std    
  4116e5:	xchg   esi,eax
  4116e6:	dec    edi
  4116e7:	mov    edi,ebx
  4116e9:	fwait
  4116ea:	dec    esi
  4116eb:	rcl    DWORD PTR ds:0xdb8b3f97,0x97
  4116f2:	aaa    
  4116f3:	adc    eax,0x346aabf1
  4116f8:	push   esi
  4116f9:	xchg   esi,eax
  4116fa:	stc    
  4116fb:	(bad)  
  4116fc:	in     al,0x3
  4116fe:	test   BYTE PTR [esi+0x54],bh
  411701:	xor    dl,0x8d
  411704:	rol    BYTE PTR [ebx],cl
  411706:	fwait
  411707:	aam    0x35
  411709:	adc    BYTE PTR [ecx],bh
  41170b:	mov    eax,ds:0x8afe2f48
  411710:	outs   dx,DWORD PTR ds:[esi]
  411711:	inc    eax
  411712:	cmc    
  411713:	and    DWORD PTR [eax+eiz*1+0x70],edi
  411717:	or     DWORD PTR [esi],edx
  411719:	adc    BYTE PTR [ecx],bh
  41171b:	mov    eax,ds:0x8adf9588
  411720:	add    eax,0x738ad510
  411725:	or     ebx,ecx
  411727:	(bad)  
  411728:	call   FWORD PTR [ebx+0x2bc88b9f]
  41172e:	add    BYTE PTR [esi-0x768dac76],bh
  411734:	xchg   ebx,eax
  411736:	fstp   QWORD PTR [ebx+0x9]
  411739:	push   0x1f
  41173b:	mov    esp,0x14c10815
  411740:	ss inc esi
  411743:	stos   BYTE PTR es:[edi],al
  411744:	inc    ebp
  411745:	cld    
  411746:	push   ecx
  411747:	out    dx,eax
  411748:	and    al,0x41
  41174a:	jmp    0xc1492cec
  41174f:	xchg   esp,eax
  411750:	mov    esi,?
  411752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411753:	pushf  
  411754:	adc    eax,0x13e9efc
  411759:	call   0xfecb3911
  41175e:	mov    al,ds:0x1c000673
  411763:	test   al,0x9e
  411765:	and    BYTE PTR [ebp+0x30020a9],0x74
  41176c:	mov    esi,DWORD PTR [ecx+eiz*8-0x76]
  411770:	or     al,0x54
  411772:	pushfw 
  411774:	add    DWORD PTR [ebp+ebx*2+0x5d],0x32a86459
  41177c:	mov    dh,BYTE PTR [ecx+eiz*8-0x36]
  411780:	mov    edi,esp
  411782:	inc    esi
  411783:	mov    esp,0xa43d748a
  411788:	adc    al,0x8
  41178a:	inc    ecx
  41178b:	call   0x3c7:0xea2eff36
  411792:	jmp    0xebbf5e97
  411797:	push   0xfffffff1
  411799:	lea    ebp,[ecx-0x17]
  41179c:	sbb    cl,dl
  41179e:	(bad)  
  41179f:	xchg   esp,eax
  4117a0:	sub    ah,BYTE PTR [ecx+0x74b4004c]
  4117a6:	std    
  4117a7:	mov    DWORD PTR [ebp-0x4a47998f],edx
  4117ad:	inc    esi
  4117ae:	add    bh,bh
  4117b0:	inc    ebp
  4117b1:	(bad)  
  4117b2:	out    0xcd,eax
  4117b4:	int    0x74
  4117b6:	std    
  4117b7:	inc    DWORD PTR ds:0x9075fd71
  4117bd:	pop    ebp
  4117be:	jbe    0x411814
  4117c0:	outs   dx,DWORD PTR ds:[esi]
  4117c1:	je     0x41178a
  4117c3:	ret    0x584
  4117c6:	push   ebp
  4117c7:	mov    edi,DWORD PTR [esp+esi*2+0x73]
  4117cb:	or     al,0x70
  4117cd:	dec    eax
  4117ce:	pop    ebx
  4117cf:	dec    edi
  4117d1:	add    al,al
  4117d3:	je     0x411802
  4117d5:	(bad)  
  4117d7:	sbb    DWORD PTR gs:0xcf8fe850,eax
  4117de:	(bad)  
  4117df:	call   FWORD PTR [eax]
  4117e1:	je     0x411856
  4117e3:	adc    BYTE PTR [eax],bh
  4117e5:	je     0x41185a
  4117e7:	or     BYTE PTR [eax-0x40002a61],ah
  4117ed:	pop    ebp
  4117ee:	enter  0xcf56,0x74
  4117f2:	mov    edx,0x8b55053c
  4117f8:	add    BYTE PTR [ecx+ecx*4-0x3e],bh
  4117fc:	clc    
  4117fd:	out    0x32,eax
  4117ff:	add    BYTE PTR [edx+0x41],ch
  411802:	sahf   
  411803:	jae    0x41180d
  411805:	xor    BYTE PTR [ecx-0x6cb000af],0x43
  41180c:	cld    
  41180d:	xchg   ebx,eax
  41180e:	pop    edi
  41180f:	inc    ecx
  411810:	dec    eax
  411811:	leave  
  411812:	or     al,0x80
  411814:	aas    
  411815:	or     BYTE PTR [ecx],bl
  411817:	jl     0x411881
  411819:	sbb    ah,BYTE PTR [edi]
  41181b:	inc    ecx
  41181c:	add    BYTE PTR [ecx],dh
  41181e:	(bad)  
  41181f:	stos   BYTE PTR es:[edi],al
  411820:	or     eax,0xb027272
  411825:	icebp  
  411826:	push   es
  411827:	xor    al,0x57
  411829:	fst    DWORD PTR [edx+eiz*1-0x3d943901]
  411830:	jae    0x411896
  411832:	jmp    0xe5f81074
  411837:	mov    ebp,DWORD PTR [ecx+0x4b]
  41183a:	sbb    BYTE PTR [bx+si],cl
  41183d:	cdq    
  41183e:	clc    
  41183f:	xchg   edx,eax
  411840:	(bad)  
  411841:	sahf   
  411842:	push   edi
  411843:	sbb    al,bh
  411845:	or     ebp,DWORD PTR [esi-0x6f]
  411848:	je     0x411883
  41184a:	pop    edx
  41184b:	or     al,0xff
  41184d:	xchg   BYTE PTR [edi-0x33868b6e],bh
  411853:	out    0xfe,al
  411855:	cld    
  411856:	jns    0x4117f2
  411858:	imul   ebp,DWORD PTR [esi-0x59],0xffffff92
  41185c:	add    BYTE PTR [si+0x15],bh
  411860:	inc    ebp
  411861:	add    BYTE PTR [esi+0x1d],bl
  411864:	mov    edi,fs
  411866:	pop    ebp
  411867:	sub    DWORD PTR [ebx+0x17b23afe],edx
  41186d:	adc    ah,cl
  41186f:	(bad)  
  411870:	sbb    al,bh
  411872:	loope  0x41186a
  411874:	sbb    BYTE PTR [eax],cl
  411876:	dec    ecx
  411877:	(bad)  
  411878:	mov    ecx,0xd2da2efe
  41187d:	push   ebp
  41187e:	fist   WORD PTR es:[edx-0x2535e68c]
  411885:	push   ebp
  411886:	push   ss
  411887:	iret   
  411888:	(bad)  
  411889:	xor    dh,cl
  41188b:	mov    BYTE PTR [edx-0x69c0f902],dl
  411891:	lods   eax,DWORD PTR ds:[esi]
  411892:	cmp    DWORD PTR [edi+0x17],ebp
  411895:	test   dh,dh
  411897:	or     BYTE PTR [edi+ecx*4-0x640f0211],bl
  41189e:	retf   0x15db
  4118a1:	xchg   ebx,eax
  4118a2:	jg     0x4118f6
  4118a4:	sub    cl,BYTE PTR [eax]
  4118a6:	xor    esi,ebx
  4118a8:	jno    0x41184a
  4118aa:	iret   
  4118ab:	std    
  4118ac:	in     al,dx
  4118ad:	fwait
  4118ae:	dec    esp
  4118af:	jecxz  0x4118a6
  4118b1:	xchg   edx,eax
  4118b2:	sub    ecx,DWORD PTR [ecx+0x74]
  4118b5:	lock dec esi
  4118b7:	ins    DWORD PTR es:[edi],dx
  4118b8:	dec    ebx
  4118b9:	inc    ebp
  4118ba:	xor    ecx,ebx
  4118bc:	rcl    BYTE PTR [ebp+0x33d58809],1
  4118c2:	add    BYTE PTR [esi-0x69cc0703],bl
  4118c8:	std    
  4118c9:	lock fwait
  4118cb:	std    
  4118cc:	pop    esi
  4118cd:	mov    ebp,0x1b758e92
  4118d2:	xchg   ebx,eax
  4118d3:	jg     0x411926
  4118d5:	stos   BYTE PTR es:[edi],al
  4118d6:	push   DWORD PTR [esi-0x24]
  4118d9:	jno    0x41187a
  4118db:	mov    bl,0x4c
  4118dd:	mov    al,ds:0x308db3a
  4118e2:	into   
  4118e3:	pop    edi
  4118e4:	std    
  4118e5:	loopne 0x411882
  4118e7:	and    al,0xdc
  4118e9:	test   DWORD PTR [edx+0x7e7ccdb9],edx
  4118ef:	add    eax,0x314520cc
  4118f4:	mov    DWORD PTR [ebp-0x2f1e42fd],ebp
  4118fa:	mov    dl,0x95
  4118fc:	enter  0x3ae8,0x19
  411900:	cmp    DWORD PTR [ebx+0x29123103],ebp
  411906:	pop    ss
  411907:	push   ebp
  411908:	ficom  WORD PTR [eax-0x78]
  41190b:	outs   dx,DWORD PTR ds:[esi]
  41190c:	xchg   BYTE PTR ds:0xfffdc6fe,bh
  411912:	cli    
  411913:	jge    0x4118e2
  411915:	imul   DWORD PTR [esi]
  411917:	sbb    DWORD PTR [ecx-0x23dfc97],eax
  41191d:	pop    es
  41191e:	adc    DWORD PTR [eax-0x3ce90179],edi
  411924:	std    
  411925:	test   DWORD PTR [ebx+0x7487c600],0xff01aaf1
  41192f:	(bad)  
  411930:	mov    al,ds:0x1df17487
  411935:	sub    bh,bh
  411937:	je     0x4118f3
  411939:	outs   dx,BYTE PTR ds:[esi]
  41193a:	imul   esp,esi,0xffffffc0
  41193d:	xchg   esi,edi
  41193f:	push   esp
  411940:	mov    ch,0x6e
  411942:	jl     0x411980
  411944:	rol    BYTE PTR [edi-0x3e92e505],0xfe
  41194b:	(bad)  
  41194c:	mov    al,ds:0x758ff187
  411951:	pcmpeqw mm1,QWORD PTR [esi-0x51040260]
  411958:	push   ds
  411959:	adc    eax,ebp
  41195b:	mov    esp,DWORD PTR [edi]
  41195d:	xchg   dh,bh
  41195f:	ds stos BYTE PTR es:[edi],al
  411961:	dec    eax
  411962:	add    ebp,ecx
  411964:	daa    
  411965:	xchg   edx,eax
  411966:	jmp    0x4119d2
  411968:	imul   eax,DWORD PTR [edx-0xccaecaa],0x111e7e3a
  411972:	call   0xfec720e4
  411977:	pusha  
  411978:	out    dx,al
  411979:	test   BYTE PTR [edx+0x40d17424],cl
  41197f:	jmp    0xdd416036
  411984:	jb     0x411977
  411986:	out    dx,al
  411987:	les    esi,FWORD PTR [ebx+0x9]
  41198a:	push   edi
  41198b:	add    BYTE PTR [eax],al
  41198d:	pusha  
  41198e:	lock aas 
  411990:	add    BYTE PTR [eax],bl
  411992:	test   DWORD PTR [esi-0x17bfd48c],edi
  411998:	sti    
  411999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41199a:	cwde   
  41199b:	std    
  41199c:	or     ebx,DWORD PTR [eax]
  41199e:	and    DWORD PTR [ecx],ebx
  4119a0:	push   eax
  4119a1:	ror    BYTE PTR [ecx],0x0
  4119a4:	out    dx,eax
  4119a5:	xchg   BYTE PTR ds:0x98965f9,ah
  4119ab:	push   eax
  4119ac:	dec    DWORD PTR [ebp-0x7e]
  4119af:	out    0x3,al
  4119b1:	inc    esi
  4119b2:	cdq    
  4119b3:	std    
  4119b4:	call   0x40588d
  4119b9:	les    ebx,FWORD PTR [esi+edi*4-0x47]
  4119bd:	xchg   edi,eax
  4119be:	cwde   
  4119bf:	std    
  4119c0:	dec    DWORD PTR [edx-0x2f8c919]
  4119c6:	dec    esp
  4119c7:	std    
  4119c8:	jne    0x411a2e
  4119ca:	cwde   
  4119cb:	jae    0x4119d5
  4119cd:	pusha  
  4119ce:	sbb    dl,BYTE PTR [edx-0x1]
  4119d1:	(bad)  
  4119d2:	cmp    cl,cl
  4119d4:	ret    0x98c
  4119d7:	push   ebp
  4119d8:	mov    esi,DWORD PTR [esp+ecx*4+0x56dbe8c2]
  4119df:	dec    edi
  4119e0:	dec    ebx
  4119e1:	sbb    DWORD PTR ds:0xc24c7500,ecx
  4119e7:	ror    BYTE PTR [eax+ecx*2],0x23
  4119eb:	add    BYTE PTR [edx+0x58],ch
  4119ee:	and    edi,edi
  4119f0:	inc    DWORD PTR [eax]
  4119f2:	cmp    eax,0x32006885
  4119f7:	or     eax,0xd0895e8
  4119fc:	add    BYTE PTR [ecx+0x75fd90dd],cl
  411a02:	nop
  411a03:	mov    al,ds:0xdb3154d3
  411a08:	(bad)
  411a0c:	(bad)  
  411a0d:	je     0x411a18
  411a0f:	int3   
  411a10:	adc    eax,0x90439bfc
  411a15:	je     0x411a44
  411a17:	dec    eax
  411a18:	add    ch,BYTE PTR [edx+0x31]
  411a1b:	retf   0x4013
  411a1e:	xor    DWORD PTR [edx+0x7d],esi
  411a21:	inc    esp
  411a22:	ffree  st(2)
  411a24:	sbb    al,0x0
  411a26:	dec    ebx
  411a27:	jb     0x411a45
  411a29:	adc    cl,BYTE PTR [ebx+0x72]
  411a2c:	(bad)  
  411a2d:	je     0x4119fc
  411a2f:	or     esi,esi
  411a31:	push   eax
  411a32:	jp     0x4119e5
  411a34:	add    al,BYTE PTR [ebp-0x7885940f]
  411a3a:	xor    DWORD PTR [edx+0x2],esi
  411a3d:	mov    eax,DWORD PTR [esi+eiz*2]
  411a40:	jp     0x411a53
  411a42:	mov    ah,0x2d
  411a44:	xchg   esp,eax
  411a45:	dec    edi
  411a46:	or     esi,DWORD PTR [edx+0x18]
  411a49:	adc    cl,BYTE PTR [ebx]
  411a4b:	jb     0x411a67
  411a4d:	push   ds
  411a4e:	pop    ss
  411a4f:	xor    DWORD PTR [edi+edi*8],eax
  411a52:	cld    
  411a53:	mov    ebp,0x2100518e
  411a58:	cmc    
  411a59:	ret    
  411a5a:	ja     0x411a32
  411a5c:	mov    dl,0x18
  411a5e:	lock pop ecx
  411a60:	xor    al,BYTE PTR [eax-0x1]
  411a63:	data16 stc 
  411a65:	dec    eax
  411a66:	call   0x4858cc95
  411a6b:	push   esi
  411a6c:	sbb    eax,0x25dde79c
  411a71:	(bad)  
  411a72:	(bad)  
  411a73:	mov    eax,0xc4fea02d
  411a78:	add    DWORD PTR [edx+edx*2-0x1710d19],ebx
  411a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a80:	or     DWORD PTR [ecx-0x71],edx
  411a83:	popf   
  411a84:	jne    0x411ae3
  411a86:	sbb    DWORD PTR [ecx],esp
  411a88:	jno    0x411ab5
  411a8a:	inc    eax
  411a8b:	push   ss
  411a8c:	test   cl,ah
  411a8e:	ret    
  411a8f:	and    BYTE PTR [eax],0xd1
  411a92:	add    esi,DWORD PTR [ecx]
  411a94:	je     0x411b14
  411a96:	pop    DWORD PTR [ebp+0x66b04111]
  411a9c:	test   BYTE PTR ds:0x2571658f,ch
  411aa2:	sbb    ebp,edx
  411aa4:	adc    DWORD PTR [ebx-0x47f32905],0xffffff8e
  411aab:	xlat   BYTE PTR ds:[ebx]
  411aac:	adc    DWORD PTR [ebx-0x62e22961],0xffffff8e
  411ab3:	mov    DWORD PTR [ebx-0x6b296c8d],0xb7008ea1
  411abd:	(bad)  
  411abe:	xchg   ebx,eax
  411abf:	xchg   edi,eax
  411ac0:	mov    ebx,0x9d18e616
  411ac5:	cmp    DWORD PTR [edx],0xfffffffc
  411ac8:	lahf   
  411ac9:	std    
  411aca:	aam    0x9b
  411acc:	cwde   
  411acd:	xlat   BYTE PTR ds:[ebx]
  411ace:	int    0x8e
  411ad0:	jns    0x411b18
  411ad2:	hlt    
  411ad3:	add    ebx,esp
  411ad5:	(bad)  
  411ad6:	int3   
  411ad7:	mov    es,WORD PTR ds:0xd942c115
  411add:	sub    DWORD PTR [ebp-0x30035106],0x1b
  411ae4:	xor    ch,bl
  411ae6:	daa    
  411ae7:	add    al,0x1
  411ae9:	jno    0x411a90
  411aeb:	ss push esi
  411aed:	cmp    DWORD PTR [eax],0x1c
  411af0:	add    DWORD PTR [edi+0x28],0x4
  411af4:	(bad)  [eax]
  411af6:	jmp    0x319799
  411afb:	iret   
  411afc:	or     al,0xca
  411afe:	call   FWORD PTR [eax]
  411b00:	mov    esi,0x285107fd
  411b05:	add    bh,bh
  411b07:	pop    esi
  411b08:	mov    edx,0xa75652c4
  411b0d:	xor    DWORD PTR [ebp+ebx*8-0x56],0x14
  411b12:	pop    eax
  411b13:	inc    esi
  411b14:	mov    bh,0xf
  411b16:	shl    BYTE PTR [ebp-0x30f61523],0x6d
  411b1d:	or     DWORD PTR [eax+0x41],edx
  411b20:	add    BYTE PTR [eax-0x25],bl
  411b23:	(bad)  
  411b24:	es and dh,cl
  411b27:	mov    cl,0x2a
  411b29:	jb     0x411b34
  411b2b:	push   0xbd7232e9
  411b30:	sbb    ebp,0x2e940ec
  411b36:	xor    BYTE PTR [ecx+esi*8-0x66],0x5d
  411b3b:	jns    0x411b33
  411b3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b3e:	push   0xffffff88
  411b40:	call   0x82a5:0xabc883bf
  411b47:	push   ebx
  411b48:	jb     0x411b1b
  411b4a:	xchg   ebx,eax
  411b4c:	aad    0x3b
  411b4e:	or     DWORD PTR [edx+0xd],ebp
  411b51:	mov    esp,0xe8d107fd
  411b56:	sar    esi,1
  411b58:	mov    esi,0x43fbccfa
  411b5d:	mov    eax,DWORD PTR [ebx-0xd351e8c]
  411b63:	(bad)  
  411b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b65:	mov    ah,0xf0
  411b67:	and    bl,BYTE PTR [esi+0xfe81146]
  411b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b6e:	cmp    esi,0x3
  411b71:	inc    ecx
  411b72:	xor    DWORD PTR [eax+eax*1+0x40],0xffffff9e
  411b77:	pop    edx
  411b78:	(bad)  
  411b79:	mov    edi,0xbc75fd93
  411b7e:	xchg   ebx,eax
  411b7f:	jae    0x411b89
  411b81:	mov    al,0x49
  411b83:	dec    esi
  411b84:	inc    DWORD PTR [eax]
  411b86:	(bad)  
  411b87:	mov    esi,0x3b0804c0
  411b8c:	mov    ebp,esp
  411b8e:	jg     0x411baa
  411b90:	or     al,0xe8
  411b92:	mov    BYTE PTR [edi+edi*8],bh
  411b95:	inc    DWORD PTR [ebx]
  411b97:	inc    esi
  411b98:	jb     0x411bbe
  411b9a:	loopne 0x411bf1
  411b9c:	fs inc ecx
  411b9e:	or     BYTE PTR [esi],dh
  411ba0:	call   0xfdd5e2c1
  411ba5:	push   eax
  411ba6:	rol    BYTE PTR ds:0x257eef00,0x43
  411bad:	mov    WORD PTR ds:0x7da5ff50,ax
  411bb4:	out    0x7,al
  411bb6:	lods   al,BYTE PTR ds:[esi]
  411bb7:	xchg   esp,eax
  411bb8:	std    
  411bb9:	call   0x405496
  411bbe:	adc    DWORD PTR [edi+0x6],eax
  411bc1:	add    ch,al
  411bc3:	add    bl,ch
  411bc5:	adc    esp,0xffffff91
  411bc8:	push   0xfd520200
  411bcd:	jne    0x411b5f
  411bcf:	popf   
  411bd0:	xor    BYTE PTR [eax+0x7f],dl
  411bd3:	xchg   esp,eax
  411bd4:	xchg   DWORD PTR [ebp+0x6c],eax
  411bd7:	pop    ds
  411bd8:	sbb    bh,bh
  411bda:	inc    ebp
  411bdb:	test   esi,esp
  411bdd:	stos   BYTE PTR es:[edi],al
  411bde:	mov    edi,0x3b6afd94
  411be3:	xchg   esp,eax
  411be4:	jae    0x411bee
  411be6:	shl    ch,0xfd
  411be9:	inc    DWORD PTR [eax]
  411beb:	mov    edi,0x31ff1c1f
  411bf0:	and    eax,0x92a7e7fc
  411bf5:	mov    edi,esi
  411bf7:	inc    esi
  411bf8:	test   BYTE PTR [esi-0x65883b02],cl
  411bfe:	dec    ebx
  411bff:	loope  0x411bfb
  411c01:	mov    ecx,eax
  411c03:	repz data16 add dl,BYTE PTR [ebp-0x46]
  411c08:	(bad)  
  411c09:	jg     0x411bce
  411c0b:	sbb    DWORD PTR [eax+0x188b0018],edi
  411c11:	lea    esi,[ecx+edi*1-0x36]
  411c15:	fwait
  411c16:	dec    esi
  411c17:	push   es
  411c18:	enter  0x4479,0xfd
  411c1c:	sti    
  411c1d:	int    0x42
  411c1f:	imul   esi,DWORD PTR [ecx+0x722e8002],0xbb594716
  411c29:	and    al,0x41
  411c2b:	xor    DWORD PTR [edi+0x7216119a],esi
  411c31:	add    cl,BYTE PTR [ebx]
  411c33:	icebp  
  411c34:	xchg   esi,eax
  411c35:	fcom   DWORD PTR [esi-0x27]
  411c38:	nop
  411c39:	cs (bad) 
  411c3b:	mov    esi,0x1173c27b
  411c40:	jmp    0x725b148a
  411c45:	add    ch,bh
  411c47:	out    0xda,eax
  411c49:	das    
  411c4a:	data16 lock jno 0x411bd7
  411c4e:	je     0x411c50
  411c50:	cdq    
  411c51:	push   edi
  411c52:	adc    BYTE PTR [eax],cl
  411c54:	cdq    
  411c55:	int3   
  411c56:	push   cs
  411c57:	inc    DWORD PTR [esi-0x7607efb9]
  411c5d:	inc    edx
  411c5e:	push   DWORD PTR ss:[esi-0x4a]
  411c62:	(bad)  
  411c63:	mov    edi,0xfe8aafa8
  411c68:	or     WORD PTR [ebx+0x1408265a],bx
  411c6f:	dec    ebp
  411c70:	push   edi
  411c71:	not    BYTE PTR [ebx+ecx*4-0x4e7eef3b]
  411c78:	idiv   DWORD PTR [edi-0x7b]
  411c7b:	sub    ebp,DWORD PTR [eax+0x4b]
  411c7e:	in     al,0x3
  411c80:	fcom   QWORD PTR [ebx+0x64f28784]
  411c86:	adc    eax,0x25f3311e
  411c8b:	mov    esp,DWORD PTR [ebp+0x66135111]
  411c91:	adc    BYTE PTR [ebp+0x7d],0x75
  411c95:	jge    0x411cf8
  411c97:	leave  
  411c98:	jae    0x411c6b
  411c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c9b:	add    esi,DWORD PTR [ecx+0x6e0fe93f]
  411ca1:	icebp  
  411ca2:	(bad)  
  411ca3:	and    DWORD PTR [eax+0x9],esi
  411ca6:	xchg   esi,eax
  411ca7:	fwait
  411ca8:	enter  0xe93e,0x3
  411cac:	sub    cl,BYTE PTR [ecx-0x6c]
  411caf:	fnstsw WORD PTR [edi+0x71]
  411cb2:	push   es
  411cb3:	das    
  411cb4:	add    dh,cl
  411cb6:	jg     0x411c99
  411cb8:	ret    
  411cb9:	inc    edx
  411cba:	sub    DWORD PTR [eax+0x41],esi
  411cbd:	mov    ecx,0xc603e8f0
  411cc2:	mov    esi,0xca172580
  411cc7:	call   0xe5c23a56
  411ccc:	adc    BYTE PTR [ecx],ch
  411cce:	jno    0x411caa
  411cd0:	or     eax,0x10d57f96
  411cd5:	mov    DWORD PTR [eax-0x30],esi
  411cd8:	xor    al,0x86
  411cda:	jg     0x411ca0
  411cdc:	(bad)  
  411cdd:	mov    esi,0x778abdc1
  411ce2:	jg     0x411ce3
  411ce4:	mov    edx,0x34073808
  411ce9:	hlt    
  411cea:	out    0xff,eax
  411cec:	call   0xba8daac
  411cf1:	adc    ecx,edx
  411cf3:	inc    DWORD PTR [eax]
  411cf5:	(bad)  
  411cf6:	in     eax,0x40
  411cf8:	jmp    0x914911b8
  411cfd:	inc    edx
  411cfe:	add    bh,bh
  411d00:	jle    0x411d16
  411d02:	or     DWORD PTR [eax+0x2],ebp
  411d05:	push   ebx
  411d06:	enter  0xff,0xa3
  411d0a:	in     al,0x40
  411d0c:	jmp    0xb20052bc
  411d11:	ins    DWORD PTR es:[edi],dx
  411d12:	or     eax,ebp
  411d14:	cmp    eax,0x60fe7e5e
  411d19:	add    BYTE PTR [ecx+0x6d],dh
  411d1c:	imul   ebp,ecx,0xa866011a
  411d22:	xor    dh,cl
  411d24:	xchg   ebp,eax
  411d25:	iret   
  411d26:	jne    0x411d31
  411d28:	push   esp
  411d2a:	jnp    0x411cf2
  411d2c:	inc    eax
  411d2d:	jmp    0x1e94ddec
  411d32:	stos   DWORD PTR es:[edi],eax
  411d33:	xchg   ecx,eax
  411d34:	inc    esp
  411d35:	sbb    eax,0x6568092c
  411d3a:	adc    al,cl
  411d3c:	call   DWORD PTR [eax-0x16bf1bc0]
  411d42:	stos   DWORD PTR es:[edi],eax
  411d43:	xor    eax,0x8f5a1bf
  411d48:	call   0xfebf7396
  411d4d:	jo     0x411dad
  411d4f:	jns    0x411cdd
  411d51:	and    al,0xd1
  411d53:	into   
  411d54:	addr16 fs push ebx
  411d57:	enter  0x40ff,0x3
  411d5b:	in     al,0x40
  411d5d:	add    BYTE PTR [eax+0x40bf3391],cl
  411d63:	retf   0xe7ff
  411d66:	fdivr  QWORD PTR [eax]
  411d68:	(bad)  
  411d69:	call   ecx
  411d6b:	cmp    eax,0x991583e8
  411d70:	(bad)  
  411d71:	jae    0x411d93
  411d73:	test   BYTE PTR [ebx-0x10],bh
  411d76:	pop    eax
  411d77:	push   cs
  411d78:	inc    edx
  411d79:	xor    DWORD PTR ds:0x73fea1,0x74
  411d80:	and    al,BYTE PTR [ecx]
  411d82:	add    BYTE PTR [edi+0x1075fdd3],ah
  411d88:	mov    ds:0x90974df9,al
  411d8d:	std    
  411d8e:	jne    0x411e0c
  411d90:	nop
  411d91:	jae    0x411d9b
  411d93:	xor    BYTE PTR [edi],0x4e
  411d96:	jmp    DWORD PTR [edi-0x70]
  411d99:	jae    0x411d8b
  411d9b:	ja     0x411dab
  411d9d:	or     al,ch
  411d9f:	iret   
  411da0:	aas    
  411da1:	(bad)  
  411da2:	push   DWORD PTR [edi]
  411da4:	push   cs
  411da5:	in     al,dx
  411da6:	jmp    FWORD PTR [ebp-0x39c3197f]
  411dac:	nop
  411dad:	std    
  411dae:	(bad)  
  411daf:	mov    ebp,0x4075fd9d
  411db4:	nop
  411db5:	jae    0x411dbf
  411db7:	xor    BYTE PTR [edi],al
  411db9:	dec    esi
  411dba:	push   DWORD PTR [edi]
  411dbc:	nop
  411dbd:	jae    0x411dab
  411dbf:	and    BYTE PTR [edi+ecx*2-0x1],dh
  411dc3:	mov    bh,0x90
  411dc5:	jae    0x411dbb
  411dc7:	xor    BYTE PTR [edi+ecx*2-0x1],bh
  411dcb:	xchg   edi,eax
  411dcc:	nop
  411dcd:	jae    0x411dbf
  411dcf:	add    BYTE PTR [ecx+edx*2],0xff
  411dd3:	ja     0x411d65
  411dd5:	jae    0x411dbf
  411dd7:	xor    DWORD PTR [eax-0x75],ecx
  411dda:	dec    edi
  411ddb:	xchg   BYTE PTR [esi-0x79],cl
  411dde:	je     0x411e5d
  411de0:	inc    esi
  411de1:	or     eax,0xcd890008
  411de6:	cmp    edi,edi
  411de8:	outs   dx,BYTE PTR ds:[esi]
  411de9:	push   ss
  411dea:	mov    ebx,0x2d702dc1
  411def:	mov    ecx,DWORD PTR [ebp-0xe]
  411df2:	mov    esi,0x1c6fcbfb
  411df7:	inc    eax
  411df8:	dec    esi
  411df9:	sbb    al,0xfc
  411dfb:	out    0x20,eax
  411dfd:	push   ds
  411dfe:	mov    esi,edi
  411e00:	test   al,0x2c
  411e02:	mov    BYTE PTR [ecx+0x31],ch
  411e05:	sbb    al,BYTE PTR [eax+ebp*2]
  411e08:	sti    
  411e09:	or     al,0x43
  411e0b:	add    BYTE PTR [ecx-0x4efffd8e],bl
  411e11:	fisubr DWORD PTR [ebx-0x423e9ae]
  411e17:	mov    edi,0xe8340f85
  411e1c:	mov    edx,0x2afe87b8
  411e21:	xor    cl,BYTE PTR [edi]
  411e23:	sbb    DWORD PTR [ecx+0x5a],esp
  411e26:	add    al,BYTE PTR [eax]
  411e28:	fdivrp st(4),st
  411e2a:	sbb    al,ch
  411e2c:	dec    edi
  411e2d:	mov    cl,0x2
  411e2f:	push   eax
  411e30:	ficomp WORD PTR [ebp-0x563d1806]
  411e36:	xchg   esi,edi
  411e38:	fdecstp 
  411e3a:	xor    bh,bh
  411e3c:	(bad)  
  411e3d:	or     ecx,DWORD PTR [esi]
  411e3f:	cld    
  411e40:	mov    esi,0x26e7fafd
  411e45:	lods   al,BYTE PTR ds:[esi]
  411e46:	xchg   esi,edi
  411e48:	add    BYTE PTR [eax+0x30],bh
  411e4b:	(bad)  
  411e4c:	(bad)  
  411e4d:	std    
  411e4e:	out    0x96,al
  411e50:	xor    BYTE PTR [ebp+0x9],0xe5
  411e54:	das    
  411e55:	or     ecx,DWORD PTR [ecx]
  411e57:	push   ebx
  411e58:	inc    ebp
  411e59:	mov    ?,esi
  411e5b:	loopne 0x411df8
  411e5d:	ror    dh,0xcd
  411e60:	xchg   DWORD PTR [ecx+0x357bc4c6],ebp
  411e66:	enter  0x4530,0x31
  411e6a:	mov    ebp,esi
  411e6c:	add    ebx,ebp
  411e6e:	enter  0x9c40,0xd4
  411e72:	leave  
  411e73:	call   0xdc9767a6
  411e78:	add    esi,DWORD PTR [ecx]
  411e7a:	adc    BYTE PTR [ecx-0x7f2bedf0],ch
  411e80:	fstp   st(0)
  411e82:	jnp    0x411e09
  411e84:	sti    
  411e85:	jbe    0x411e7c
  411e87:	fbstp  TBYTE PTR [ebx]
  411e89:	cdq    
  411e8a:	or     ecx,ebp
  411e8c:	xchg   esi,eax
  411e8d:	in     al,0xf0
  411e8f:	jle    0x411eaf
  411e91:	jo     0x411e9c
  411e93:	mov    ecx,0x51119d86
  411e98:	aad    0x89
  411e9a:	jl     0x411ef1
  411e9c:	pushf  
  411e9d:	dec    eax
  411e9e:	(bad)  [ebp-0x79]
  411ea1:	cli    
  411ea2:	aaa    
  411ea3:	sub    DWORD PTR [ebp-0x9],ecx
  411ea6:	jnp    0x411ee5
  411ea8:	xchg   eax,esp
  411eaa:	stos   BYTE PTR es:[edi],al
  411eab:	lock inc BYTE PTR [eax]
  411eae:	pop    ebp
  411eaf:	dec    ecx
  411eb0:	sub    eax,0x9b7bdd11
  411eb5:	sti    
  411eb6:	into   
  411eb7:	fwait
  411eb8:	stos   DWORD PTR es:[edi],eax
  411eb9:	xchg   bh,cl
  411ebb:	fistp  DWORD PTR [edi]
  411ebd:	ret    0x932
  411ec0:	mov    ah,0x7a
  411ec2:	retf   0x2c87
  411ec5:	mov    BYTE PTR [edi-0x11],bl
  411ec8:	call   0xffbd11e6
  411ecd:	jnp    0x411e79
  411ecf:	arpl   WORD PTR [eax-0x64],ax
  411ed2:	mov    bh,0x7a
  411ed4:	mov    BYTE PTR [ecx+ebp*4],ch
  411ed7:	mov    ?,WORD PTR [edx+ebp*1]
  411eda:	dec    ebp
  411edb:	retf   0x68ff
  411ede:	outs   dx,DWORD PTR ds:[esi]
  411edf:	jnp    0x411f53
  411ee1:	sub    DWORD PTR ds:0x2d28657b,ebx
  411ee7:	aam    0xe7
  411ee9:	inc    ebp
  411eea:	jns    0x411f67
  411eec:	(bad)  
  411eed:	loop   0x411f61
  411eef:	mul    DWORD PTR [edx]
  411ef1:	push   ss
  411ef2:	mov    ebp,0xafa658b3
  411ef7:	push   cs
  411ef8:	rcl    BYTE PTR ds:0xe967cb5c,0x32
  411eff:	ins    BYTE PTR es:[edi],dx
  411f00:	mov    ebp,0x40e43001
  411f05:	jmp    0xf1b59b0c
  411f0a:	retf   0x77ba
  411f0d:	jbe    0x411ebe
  411f0f:	(bad)  
  411f10:	enter  0x1e,0xb6
  411f14:	jnp    0x411f11
  411f16:	sbb    ch,ch
  411f18:	sar    esi,0x5e
  411f1b:	mov    bh,0x7b
  411f1d:	icebp  
  411f1e:	xchg   edx,edi
  411f20:	add    esi,DWORD PTR [ebp+0x29]
  411f23:	sbb    BYTE PTR [esi],ah
  411f25:	call   0xfebb661f
  411f2a:	repnz repnz mul BYTE PTR [ebx]
  411f2e:	rcr    edi,0xe3
  411f31:	inc    eax
  411f32:	jmp    0xbad89059
  411f37:	scas   eax,DWORD PTR es:[edi]
  411f38:	jnp    0x411f89
  411f3a:	xchg   ecx,eax
  411f3b:	xor    cl,BYTE PTR [ecx]
  411f3d:	out    dx,eax
  411f3e:	push   edi
  411f3f:	sub    al,BYTE PTR [edi+eiz*2]
  411f42:	test   al,0x32
  411f44:	fsin   
  411f46:	add    BYTE PTR ds:0xb083e67e,dh
  411f4c:	cmp    ebp,0xffffffe8
  411f4f:	or     al,0x33
  411f51:	(bad)  
  411f52:	push   DWORD PTR [edx+0x5bdde667]
  411f58:	test   ch,bh
  411f5a:	or     ebx,eax
  411f5c:	sbb    DWORD PTR [eax+ebp*2],esp
  411f5f:	xchg   DWORD PTR ds:0x9d380041,ebx
  411f65:	addr16 push ebx
  411f67:	outs   dx,DWORD PTR ds:[esi]
  411f68:	test   BYTE PTR [esi+0x68],cl
  411f6b:	pop    eax
  411f6c:	push   es
  411f6d:	out    dx,eax
  411f6e:	mov    esi,0x416579f0
  411f73:	dec    eax
  411f74:	push   DWORD PTR ss:[ebp+0x0]
  411f78:	pusha  
  411f79:	sahf   
  411f7a:	push   edx
  411f7b:	js     0x411f2c
  411f7d:	test   dh,ah
  411f7f:	pop    ebp
  411f80:	je     0x91671f83
  411f86:	std    
  411f87:	jne    0x411fc9
  411f89:	sahf   
  411f8a:	into   
  411f8b:	dec    esp
  411f8c:	scas   eax,DWORD PTR es:[edi]
  411f8d:	test   BYTE PTR [ebp-0x37],bl
  411f90:	fimul  DWORD PTR [eax]
  411f92:	add    BYTE PTR [ebp-0x6d],dl
  411f95:	mov    eax,ds:0xf278c481
  411f9a:	inc    ebx
  411f9b:	lock enter 0x7384,0xc
  411fa0:	jo     0x411f46
  411fa2:	push   edx
  411fa3:	jmp    FWORD PTR [edi-0x80]
  411fa6:	mov    esi,0x7b88fa74
  411fab:	cld    
  411fac:	fimul  DWORD PTR [ebx]
  411fae:	and    ecx,DWORD PTR [ebx-0x7e9b726b]
  411fb4:	loopne 0x412007
  411fb6:	and    BYTE PTR [ebp+0x31],dh
  411fb9:	test   BYTE PTR [ebx+0x10],dh
  411fbc:	das    
  411fbd:	or     cl,BYTE PTR [eax]
  411fbf:	call   0xff7a44f5
  411fc4:	mov    esi,0xb6fc0f0a
  411fc9:	cld    
  411fca:	mov    bh,dh
  411fcc:	and    al,0x78
  411fce:	call   0xf48c:0x8372faf4
  411fd5:	jg     0x412009
  411fd7:	call   0xfec65d30
  411fdc:	add    BYTE PTR [eax-0x53],bh
  411fdf:	idiv   bh
  411fe1:	fucom  st(6)
  411fe3:	xchg   esi,eax
  411fe4:	xor    BYTE PTR [ebp+0x57],0x18
  411fe8:	add    BYTE PTR [ebx],cl
  411fea:	das    
  411feb:	test   DWORD PTR [ecx+edi*1+0x58],esi
  411fef:	fisttp DWORD PTR [ebx+0x66]
  411ff2:	mov    dl,0x79
  411ff4:	inc    esp
  411ff5:	pop    ebp
  411ff6:	lds    eax,FWORD PTR [ebx]
  411ff8:	push   0x31
  411ffa:	sbb    bh,bl
  411ffc:	lock outs dx,WORD PTR ds:[esi]
  411fff:	sbb    al,BYTE PTR [edx]
  412001:	xor    DWORD PTR [eax-0x7e],esi
  412004:	out    0x40,eax
  412006:	inc    eax
  412007:	test   esi,edi
  412009:	sub    dh,BYTE PTR [eax+0x2db83f0e]
  41200f:	mov    WORD PTR [edi-0x60],fs
  412012:	pop    es
  412013:	inc    ebx
  412014:	add    BYTE PTR [esi],bl
  412016:	jle    0x411fa2
  412018:	out    0x58,eax
  41201a:	sub    eax,DWORD PTR [eax+eax*1]
  41201d:	cmp    ah,BYTE PTR [edx]
  41201f:	mov    db0,esi
  412022:	push   esi
  412023:	mov    ah,bh
  412025:	stos   BYTE PTR es:[edi],al
  412026:	mov    edx,0x5a61fe83
  41202b:	das    
  41202c:	leave  
  41202d:	jno    0x412091
  41202f:	sbb    al,BYTE PTR [eax]
  412031:	xor    edi,ecx
  412033:	inc    esp
  412034:	imul   esi,DWORD PTR [ecx],0x29748392
  41203a:	or     DWORD PTR [ecx],edx
  41203c:	cdq    
  41203d:	inc    ebp
  41203e:	js     0x41205d
  412040:	fwait
  412041:	add    BYTE PTR [edi+eax*8-0x1407beb],ah
  412048:	adc    BYTE PTR [ebx-0x7bfa3864],bl
  41204e:	scas   eax,DWORD PTR es:[edi]
  41204f:	(bad)  
  412050:	cld    
  412051:	sbb    DWORD PTR ds:0xeafa0101,0x77
  412058:	in     eax,dx
  412059:	mov    ecx,0xd8e90d70
  41205e:	mov    ebx,0x8a486965
  412063:	jecxz  0x41204d
  412065:	in     eax,dx
  412066:	bnd ja 0x4120bc
  412069:	or     al,0x89
  41206b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41206c:	xor    DWORD PTR [ebx-0x7fdc7d91],eax
  412072:	into   
  412073:	or     cl,ch
  412075:	jb     0x412013
  412077:	loope  0x4120dd
  412079:	jmp    0x41206c
  41207b:	or     BYTE PTR [ecx],dl
  41207d:	std    
  41207e:	xlat   BYTE PTR ds:[ebx]
  41207f:	leave  
  412080:	call   0x8141de07
  412085:	pushf  
  412086:	(bad)  
  412087:	ja     0x412016
  412089:	cmp    DWORD PTR [ebp+0x36f98574],0x61
  412090:	scas   al,BYTE PTR es:[edi]
  412091:	iret   
  412092:	daa    
  412093:	js     0x412034
  412095:	inc    esi
  412096:	xor    cl,BYTE PTR [ecx]
  412098:	adc    al,0x8f
  41209a:	or     cl,BYTE PTR [esp+ebp*1-0x16f66984]
  4120a1:	jb     0x412067
  4120a3:	ja     0x412080
  4120a5:	or     eax,DWORD PTR [eax]
  4120a7:	or     DWORD PTR [ebx-0x5e],esp
  4120aa:	xor    bh,0x77
  4120ad:	mov    ebx,0xf0fdee0f
  4120b2:	imul   esi,DWORD PTR [ecx-0x3c],0xffffffff
  4120b6:	xor    eax,0xd97476b2
  4120bb:	mov    bl,0xfc
  4120bd:	pop    es
  4120be:	adc    DWORD PTR [ebx],ecx
  4120c0:	(bad)  
  4120c1:	(bad)  
  4120c2:	push   ds
  4120c3:	mov    dl,0xfc
  4120c5:	pop    ss
  4120c6:	push   ss
  4120c7:	mov    eax,0x2a94ff1b
  4120cc:	popa   
  4120cd:	sti    
  4120ce:	mov    bl,0xb3
  4120d0:	jbe    0x412139
  4120d2:	sub    bl,BYTE PTR [edx-0x660a0038]
  4120d8:	pop    es
  4120d9:	call   0x4a754b
  4120de:	repnz repnz cld 
  4120e1:	fs push ecx
  4120e3:	clc    
  4120e4:	out    dx,al
  4120e5:	inc    eax
  4120e6:	jmp    0xe97868f5
  4120eb:	xor    al,BYTE PTR [edx+0x4c5ac144]
  4120f1:	data16 sub BYTE PTR ds:0xcad97478,ch
  4120f8:	aad    0x39
  4120fa:	jmp    0x1e012531
  4120ff:	cmp    ecx,DWORD PTR [eax*2+0xfccb5a1]
  412106:	xchg   esi,eax
  412107:	cmp    DWORD PTR [edi],eax
  412109:	call   0x768821dc
  41210e:	(bad)  
  41210f:	push   0xffffffaa
  412111:	ja     0x412186
  412113:	mov    ch,0xb5
  412115:	int    0xfb
  412117:	add    DWORD PTR [ecx+ecx*1],esi
  41211a:	out    dx,eax
  41211b:	das    
  41211c:	mov    bl,0xfd
  41211e:	pop    es
  41211f:	push   ecx
  412120:	push   es
  412121:	sar    esi,0x5e
  412124:	mov    bl,0xfd
  412126:	or     edx,DWORD PTR [esi-0x7]
  412129:	push   cs
  41212a:	call   0xfeb90551
  41212f:	add    BYTE PTR [edi+0x71],dh
  412132:	cli    
  412133:	call   FWORD PTR [ebp-0x6da117fe]
  412139:	mov    edi,ebp
  41213b:	call   FWORD PTR [ebp-0x338a00ee]
  412141:	mov    esi,DWORD PTR [ebx+0x8]
  412144:	and    BYTE PTR [eax-0x3ad800b8],al
  41214a:	rcl    BYTE PTR [eax+ecx*8],0x51
  41214e:	mov    esp,ebp
  412150:	sbb    ecx,esi
  412152:	not    BYTE PTR [esi+0x1b]
  412155:	leave  
  412156:	fs dec ebx
  412158:	leave  
  412159:	or     al,BYTE PTR [eax]
  41215b:	je     0x412161
  41215d:	(bad)  
  41215e:	cmp    esp,DWORD PTR [ecx+0x43]
  412161:	dec    edx
  412162:	(bad)  
  412163:	(bad)  
  412164:	fdivr  QWORD PTR [ebx-0x7f]
  412167:	cmp    eax,0x3f4401
  41216c:	mov    BYTE PTR [esi+0x68],bh
  41216f:	mov    DWORD PTR [eax],0xfffe891d
  412175:	pop    eax
  412176:	or     al,bh
  412178:	inc    ebp
  412179:	mov    al,ds:0x4800000d
  41217e:	xchg   DWORD PTR [ebx-0x4],eax
  412181:	or     BYTE PTR [esi+0x6708f843],al
  412187:	(bad)  
  412188:	addr16 (bad) 
  41218a:	pop    edi
  41218b:	aas    
  41218c:	add    BYTE PTR [edi+0x594b611e],ah
  412192:	or     eax,0x4d1cc00b
  412197:	cmp    DWORD PTR [ebp-0x60],0x8b3d740d
  41219e:	jbe    0x41219a
  4121a0:	add    ah,ch
  4121a2:	xor    BYTE PTR [ebx+0x1ce46475],cl
  4121a8:	push   esi
  4121a9:	xor    ebx,ebp
  4121ab:	cmp    edi,edi
  4121ad:	jg     0x412227
  4121af:	jg     0x412226
  4121b1:	dec    ebp
  4121b2:	iret   
  4121b3:	stc    
  4121b4:	pop    es
  4121b5:	out    0xbd,al
  4121b7:	xor    bh,bh
  4121b9:	fs push 0x26d7dd6a
  4121bf:	sbb    DWORD PTR [ebp-0x32],0xef827abc
  4121c6:	imul   eax,DWORD PTR [ebx-0x9a04684],0x4
  4121cd:	mov    dl,0x45
  4121cf:	add    dh,BYTE PTR [ebp-0x7a]
  4121d2:	push   cs
  4121d3:	idiv   ebx
  4121d5:	add    BYTE PTR [esi-0xfb51aa4],ah
  4121db:	pop    edi
  4121dc:	loopne 0x4121a6
  4121de:	jae    0x41224b
  4121e0:	add    dl,BYTE PTR [ebp-0x46]
  4121e3:	pop    ebx
  4121e4:	add    ebx,0x7d
  4121e7:	xor    cl,BYTE PTR [ecx+0x44]
  4121ea:	jns    0x41224b
  4121ec:	add    al,BYTE PTR [eax]
  4121ee:	xor    DWORD PTR [edi+0x6031f3c5],ebp
  4121f4:	add    al,BYTE PTR [eax]
  4121f6:	data16 cmp al,0x14
  4121f9:	(bad)  
  4121fa:	hlt    
  4121fb:	mov    ebx,0xc9556c51
  412200:	add    ebp,DWORD PTR [edx+0x31]
  412203:	sbb    al,BYTE PTR [edx+ebp*2]
  412206:	xor    DWORD PTR [edi+0x143efbf5],edx
  41220c:	adc    BYTE PTR [edx+0x31],ch
  41220f:	or     al,BYTE PTR [eax+ebp*8]
  412212:	dec    esp
  412213:	dec    edx
  412214:	add    al,BYTE PTR [eax]
  412216:	cmp    ah,BYTE PTR [edx+0x128134f6]
  41221c:	ins    BYTE PTR es:[edi],dx
  41221d:	loopne 0x412284
  41221f:	jecxz  0x4122a0
  412221:	mov    BYTE PTR [ecx+ecx*1+0x61],dh
  412225:	ficomp DWORD PTR [eax+0x6003d309]
  41222b:	je     0x412208
  41222d:	jnp    0x412226
  41222f:	dec    BYTE PTR [eax+eax*4+0x65]
  412233:	add    eax,0x95b03d3
  412238:	push   ecx
  412239:	js     0x41223b
  41223b:	daa    
  41223c:	or     ecx,ebp
  41223e:	or     al,0xf1
  412240:	(bad)  
  412241:	fld    QWORD PTR [eax-0x5bef8ebb]
  412247:	jp     0x4122bd
  412249:	sbb    eax,0xe8717548
  41224e:	add    esi,DWORD PTR [ecx]
  412250:	or     DWORD PTR [edx-0x2],ebp
  412253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412254:	or     DWORD PTR [ebp-0x2f],edi
  412257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412258:	(bad)  
  412259:	lock and BYTE PTR ds:0x5e800071,0x9
  412261:	jmp    0x263e9372
  412266:	aam    0x87
  412268:	(bad)  
  412269:	lock imul esp,edx,0x3b
  41226d:	jmp    0xa848fa75
  412272:	mov    eax,DWORD PTR [esi+0x1e841260]
  412278:	push   es
  412279:	xor    al,0x28
  41227b:	ja     0x412286
  41227d:	jmp    0xf6757154
  412282:	add    esi,DWORD PTR [ecx]
  412284:	add    BYTE PTR [ecx+0x38d91df8],ch
  41228a:	ins    BYTE PTR es:[edi],dx
  41228b:	(bad)
  41228e:	jg     0x412239
  412290:	into   
  412291:	xchg   esp,eax
  412292:	fld    QWORD PTR [ecx-0x7c88048c]
  412298:	popa   
  412299:	pop    esi
  41229a:	rcr    BYTE PTR [edi],1
  41229c:	je     0x41229d
  41229e:	add    DWORD PTR [eax],0xb17fc92f
  4122a4:	xor    bh,dh
  4122a6:	shl    BYTE PTR [esi+0x8],1
  4122a9:	jl     0x412292
  4122ab:	test   eax,0x62fe72ee
  4122b0:	call   0x73617d2c
  4122b5:	add    BYTE PTR [eax],al
  4122b7:	pushf  
  4122b8:	mov    ebx,0x7925825f
  4122bd:	ficom  WORD PTR [esi+0x6a]
  4122c0:	jo     0x412254
  4122c2:	dec    edx
  4122c3:	test   al,0x32
  4122c5:	or     DWORD PTR [ebp-0x11],esi
  4122c8:	out    0xd5,eax
  4122ca:	enter  0x212b,0x9
  4122ce:	lea    ebp,[edx+eax*2+0x3e94fec4]
  4122d5:	popa   
  4122d6:	mov    eax,0xa732798
  4122db:	sub    DWORD PTR [esi],ebp
  4122dd:	lea    ebp,[eax+ebp*8]
  4122e0:	xor    cl,BYTE PTR [ecx]
  4122e2:	sub    DWORD PTR [esi+ecx*1+0x74],0x432f9fe
  4122ea:	xor    esi,0x35
  4122ed:	or     DWORD PTR [eax],eax
  4122ef:	(bad)  
  4122f0:	jns    0x412361
  4122f2:	(bad)  
  4122f3:	push   esp
  4122f4:	in     eax,dx
  4122f5:	imul   eax,DWORD PTR [ebx+0x1c],0xffffffe6
  4122f9:	jb     0x412305
  4122fb:	test   eax,0xe8038e2f
  412300:	xor    cl,BYTE PTR [ecx]
  412302:	push   DWORD PTR [eax+eax*1]
  412305:	mov    cl,0x72
  412307:	je     0x4122aa
  412309:	pop    edx
  41230a:	stos   BYTE PTR es:[edi],al
  41230b:	data16 sub BYTE PTR ds:0xb797d261,dh
  412312:	jb     0x41229c
  412314:	and    al,0xa1
  412316:	jae    0x41238c
  412318:	add    BYTE PTR [ebx+esi*8-0x6abf078d],ch
  41231f:	gs inc ecx
  412321:	or     bh,bl
  412323:	mov    esi,0x87f39ffe
  412328:	inc    ebp
  412329:	pusha  
  41232a:	repz jae 0x412329
  41232d:	pop    edi
  41232e:	jno    0x412326
  412330:	push   0x3f6b9b
  412335:	jo     0x4122f0
  412337:	cld    
  412338:	jmp    FWORD PTR [edi-0x7b]
  41233b:	inc    ebx
  41233c:	in     al,0x4b
  41233e:	or     esp,ebp
  412340:	add    bh,cl
  412342:	mov    ah,BYTE PTR [edi-0x7cf92800]
  412348:	jge    0x41236a
  41234a:	push   es
  41234b:	je     0x412990
  412351:	dec    ebx
  412352:	or     esp,esp
  412354:	add    BYTE PTR [edi-0x67ff6c76],cl
  41235a:	push   es
  41235b:	push   DWORD PTR [ebp+0x40]
  41235e:	fisub  WORD PTR [edx+0x36]
  412361:	mov    BYTE PTR [esi],al
  412363:	mov    esi,DWORD PTR [ebp+0x30]
  412366:	jg     0x412364
  412368:	mov    eax,DWORD PTR [eax]
  41236a:	rcl    dh,0xe7
  41236d:	push   ecx
  41236e:	arpl   WORD PTR [ebx],sp
  412370:	lods   ax,WORD PTR ds:[esi]
  412372:	sbb    al,0x3d
  412374:	jb     0x41237e
  412376:	cmp    al,0x2e
  412378:	ja     0x41237e
  41237a:	cmp    al,0x3d
  41237c:	jmp    0x412382
  41237e:	sub    al,0x46
  412380:	add    cl,BYTE PTR [edx]
  412382:	enter  0x2e88,0x72
  412386:	push   edx
  412387:	xchg   dl,bh
  412389:	cmp    DWORD PTR [edi],esp
  41238b:	or     al,BYTE PTR [eax+0x4e158ec]
  412391:	xor    BYTE PTR [ecx],0x8c
  412394:	ret    0xf57f
  412397:	gs inc edx
  412399:	fild   QWORD PTR ds:0x68a94676
  41239f:	ja     0x4123ea
  4123a1:	je     0x41238a
  4123a3:	sbb    BYTE PTR [ebx-0x91d12b4],cl
  4123a9:	out    0xb6,eax
  4123ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123ac:	(bad)  
  4123ad:	(bad)  
  4123ae:	je     0x412378
  4123b0:	add    eax,DWORD PTR [eax]
  4123b2:	xor    DWORD PTR [eax-0x73],esp
  4123b5:	inc    esp
  4123b6:	add    eax,0x5b00e8b0
  4123bb:	pusha  
  4123bc:	call   0xe8a16cc0
  4123c1:	jmp    DWORD PTR [ebp-0x31b0a15c]
  4123c7:	pop    esp
  4123c8:	cdq    
  4123c9:	dec    edx
  4123ca:	jo     0x41242c
  4123cc:	pop    es
  4123cd:	rol    BYTE PTR [eax],0x45
  4123d0:	ds jg  0x41244f
  4123d3:	fstp   DWORD PTR [edi-0xa]
  4123d6:	sbb    ebp,DWORD PTR [esi+0x1cfe569c]
  4123dc:	sub    BYTE PTR [ebp+0x74],bh
  4123df:	xchg   ebp,eax
  4123e0:	jb     0x4123d7
  4123e2:	jmp    0x41237a
  4123e4:	hlt    
  4123e5:	or     ch,al
  4123e7:	int3   
  4123e8:	arpl   WORD PTR [ebx-0x2],di
  4123eb:	xchg   ah,dl
  4123ed:	pop    ebx
  4123ee:	out    0x88,eax
  4123f0:	sbb    al,0x4
  4123f2:	add    BYTE PTR [esi-0x2c],dh
  4123f5:	outs   dx,DWORD PTR ds:[esi]
  4123f6:	out    0x68,eax
  4123f8:	and    eax,0x3466fe7d
  4123fd:	ins    BYTE PTR es:[edi],dx
  4123fe:	out    0x60,eax
  412400:	xor    eax,0x3456fe7d
  412405:	push   0x7d2558e7
  41240a:	(bad)  
  41240b:	mov    ah,0x8
  41240d:	sub    al,0x74
  41240f:	out    dx,al
  412410:	pusha  
  412411:	add    bl,dl
  412413:	aaa    
  412414:	jno    0x41244b
  412416:	fdivp  st(1),st
  412418:	dec    ebx
  412419:	fadd   QWORD PTR [ebx]
  41241b:	jl     0x4123a1
  41241d:	xchg   esp,eax
  41241e:	xor    dl,0x6d
  412421:	adc    al,BYTE PTR [ebx+ecx*4]
  412424:	(bad)  
  412425:	jne    0x41241d
  412427:	ss popa 
  412429:	call   0x6fb22bf9
  41242e:	(bad)  
  41242f:	cli    
  412430:	jo     0x412405
  412432:	or     eax,DWORD PTR [eax]
  412434:	or     DWORD PTR [esp+edx*2],ebp
  412437:	jl     0x412428
  412439:	jecxz  0x41241e
  41243b:	imul   esi,DWORD PTR [eax+eax*8],0x45
  41243f:	jl     0x41246c
  412441:	dec    ecx
  412442:	mov    ah,0x1d
  412444:	and    ecx,0x90e4fc0
  41244a:	rol    DWORD PTR [ebx],0x31
  41244d:	pusha  
  41244e:	data16 jmp 0x4123fa
  412451:	call   0x70a227fd
  412456:	fwait
  412457:	or     ebx,DWORD PTR [ecx-0x58836897]
  41245d:	popa   
  41245e:	pop    esp
  41245f:	leave  
  412460:	lahf   
  412461:	jo     0x412460
  412463:	cmc    
  412464:	call   0xa108:0x990b7b70
  41246b:	jl     0x4123f4
  41246d:	inc    edx
  41246e:	stos   BYTE PTR es:[edi],al
  41246f:	add    BYTE PTR [ecx],dh
  412471:	(bad)  
  412472:	jno    0x4124dc
  412474:	mov    bl,0x45
  412476:	aam    0xd3
  412478:	fmul   DWORD PTR [eax]
  41247a:	inc    ebx
  41247b:	ret    0xf667
  41247e:	lock imul ecx,DWORD PTR [eax-0x56844238],0xffffffc6
  412486:	push   DWORD PTR [esi+edi*4+0x6c21432d]
  41248d:	jo     0x41250d
  41248f:	out    0x32,al
  412491:	cmc    
  412492:	push   eax
  412493:	adc    ebx,esp
  412495:	out    0x40,al
  412497:	jmp    0xcca9279c
  41249c:	xlat   BYTE PTR ds:[ebx]
  41249d:	xor    cl,BYTE PTR [ecx]
  41249f:	or     ebp,DWORD PTR [ecx-0x1114f5df]
  4124a5:	or     bh,BYTE PTR [esi]
  4124a7:	data16 sub BYTE PTR ds:0x432de7d8,dh
  4124ae:	or     DWORD PTR [eax],eax
  4124b0:	bnd jb 0x4124af
  4124b3:	and    dh,BYTE PTR [esi+0x5654008a]
  4124b9:	push   0x3
  4124bb:	rcl    ch,0x45
  4124be:	fldenv [edi-0x17]
  4124c1:	xor    ah,BYTE PTR [eax-0x43]
  4124c4:	sar    DWORD PTR [ecx-0x19],1
  4124c7:	inc    eax
  4124c8:	jmp    0xe1b593af
  4124cd:	pop    edx
  4124ce:	sbb    BYTE PTR [ebx+0x26],dh
  4124d1:	cmp    ch,BYTE PTR [eax+0x20]
  4124d4:	mov    bl,0x3b
  4124d6:	outs   dx,DWORD PTR ds:[esi]
  4124d7:	sti    
  4124d8:	(bad)  
  4124da:	mov    al,0xfe
  4124dc:	push   cs
  4124dd:	sub    ch,BYTE PTR [edi-0xf]
  4124e0:	push   edi
  4124e1:	pop    ebp
  4124e2:	or     BYTE PTR [ebp+0x4e],dh
  4124e5:	sbb    dh,ch
  4124e7:	sti    
  4124e8:	test   BYTE PTR [ecx+0x7267e807],0x6e
  4124ef:	inc    BYTE PTR [esi-0x14]
  4124f2:	dec    ecx
  4124f3:	add    ebp,ecx
  4124f5:	popa   
  4124f6:	sub    bl,0x68
  4124f9:	cs inc eax
  4124fb:	test   dh,0x0
  4124fe:	jmp    0x41257c
  412500:	inc    esp
  412501:	add    BYTE PTR [ebx+ebx*2-0x3],dh
  412505:	jne    0x41257f
  412507:	bnd jae 0x412516
  41250a:	jo     0x41251c
  41250c:	add    BYTE PTR ss:[eax-0x2],bl
  412510:	mov    edi,0x238cd0f
  412515:	add    BYTE PTR [eax-0x36],cl
  412518:	inc    ebx
  412519:	clc    
  41251a:	sbb    BYTE PTR [ebx],cl
  41251c:	add    BYTE PTR [eax],al
  41251e:	iret   
  41251f:	dec    ecx
  412520:	out    dx,al
  412521:	dec    DWORD PTR [edi]
  412523:	or     eax,DWORD PTR [eax]
  412525:	push   0x8
  412527:	pop    ebp
  412528:	(bad)  
  412529:	imul   ebx,DWORD PTR [eax],0x4d8cfe5d
  41252f:	cmc    
  412530:	dec    esi
  412531:	lea    ecx,[ebp+0x57fff5fa]
  412537:	pop    edx
  412538:	std    
  412539:	jne    0x4124bb
  41253b:	repz jae 0x41253a
  41253e:	jo     0x412523
  412540:	xor    eax,DWORD PTR [eax]
  412542:	enter  0xbfff,0x74
  412546:	int    0xdd
  412548:	test   BYTE PTR [ecx],0xd8
  41254b:	or     ch,BYTE PTR [eax-0x65]
  41254e:	nop
  41254f:	inc    ebp
  412550:	(bad)  
  412551:	(bad)  
  412552:	popf   
  412553:	sbb    ch,al
  412555:	inc    eax
  412556:	test   ebx,esi
  412558:	std    
  412559:	push   eax
  41255a:	adc    ebx,edx
  41255c:	mov    eax,DWORD PTR [ebp-0x204b8]
  412562:	add    BYTE PTR [eax-0x3acf19ac],bh
  412568:	repz std 
  41256a:	mov    DWORD PTR ds:0x97fff5e6,ebx
  412570:	jecxz  0x4124f6
  412572:	dec    ecx
  412573:	xchg   edi,eax
  412574:	lock mov eax,DWORD PTR [ebp+0x5c]
  412578:	push   ebp
  412579:	cmp    si,WORD PTR [ecx]
  41257c:	enter  0xffc2,0x67
  412580:	xchg   ebp,eax
  412581:	neg    BYTE PTR [bp+0x47]
  412585:	js     0x4125fb
  412587:	and    eax,0x4e4b8058
  41258c:	mov    bh,0x8a
  41258e:	test   BYTE PTR [ecx-0x49],ch
  412591:	js     0x412591
  412593:	retf   
  412594:	pop    edi
  412595:	jmp    0xe4ff:0x420c943
  41259c:	xor    DWORD PTR [eax-0x2],0x26
  4125a0:	jg     0x412590
  4125a2:	or     ecx,DWORD PTR [ecx]
  4125a4:	adc    al,0xc8
  4125a6:	(bad)  
  4125a7:	push   ss
  4125a8:	stc    
  4125a9:	jle    0x412592
  4125ab:	push   es
  4125ac:	idiv   DWORD PTR [eax+0x69]
  4125af:	xor    DWORD PTR [eax],ecx
  4125b1:	leave  
  4125b2:	addr16 jo 0x412615
  4125b5:	ja     0x41256b
  4125b7:	add    eax,0xeefe78d7
  4125bc:	dec    esp
  4125bd:	push   es
  4125be:	call   0xfeb8b243
  4125c3:	test   al,0xdc
  4125c5:	pop    edi
  4125c6:	test   BYTE PTR [eax],0xd6
  4125c9:	xchg   DWORD PTR cs:[ebp+eiz*8+0x61fe792e],eax
  4125d1:	dec    eax
  4125d2:	fbld   TBYTE PTR [edi+0x70]
  4125d5:	pusha  
  4125d6:	ja     0x41258c
  4125d8:	lds    edx,FWORD PTR [esi]
  4125da:	jns    0x4125da
  4125dc:	scas   al,BYTE PTR es:[edi]
  4125dd:	mov    WORD PTR [esi],es
  4125df:	call   0xfeb8b244
  4125e4:	sub    ah,BYTE PTR [eax]
  4125e6:	lock sbb BYTE PTR [edx-0x7109afd4],dh
  4125ed:	jbe    0x4125ed
  4125ef:	je     0x412612
  4125f1:	pop    edi
  4125f2:	xor    cl,BYTE PTR [edi+0x70c908b4]
  4125f8:	ja     0x412667
  4125fa:	cmp    BYTE PTR [esp+ebp*2-0x40],ch
  4125fe:	aad    0x78
  412600:	pop    ebx
  412601:	adc    al,0xe2
  412603:	inc    ebx
  412604:	loop   0x41260c
  412606:	sbb    DWORD PTR [eax+eiz*2-0x40],ebp
  41260a:	mov    ebp,0xc8837778
  41260f:	jo     0x412658
  412611:	ins    DWORD PTR es:[edi],dx
  412612:	rol    DWORD PTR [ebx],cl
  412614:	xor    DWORD PTR [ecx],ecx
  412616:	adc    eax,DWORD PTR [ecx+ecx*8]
  412619:	(bad)  
  41261a:	adc    bl,al
  41261c:	cs ins BYTE PTR es:[edi],dx
  41261e:	pop    ebx
  41261f:	addr16 pop ds
  412621:	ins    DWORD PTR es:[edi],dx
  412622:	lea    edi,[eax-0x5b]
  412625:	std    
  412626:	nop
  412627:	ins    BYTE PTR es:[edi],dx
  412628:	imul   ebp,DWORD PTR [ebp+edi*2-0x76],0x0
  41262d:	mov    ch,0x4d
  41262f:	jge    0x4126a9
  412631:	pop    es
  412632:	loopne 0x41261c
  412634:	jmp    0x4125b6
  412636:	loope  0x4125df
  412638:	add    esi,esi
  41263a:	mov    dh,0x4c
  41263c:	jo     0x41262d
  41263e:	ins    BYTE PTR es:[edi],dx
  41263f:	push   ebp
  412640:	out    dx,al
  412641:	cmp    ah,BYTE PTR [ecx+0x38]
  412644:	int3   
  412645:	fild   QWORD PTR [edi+ebp*2+0x7e]
  412649:	out    0x74,al
  41264b:	cmp    eax,0x10aeb378
  412650:	jo     0x412619
  412652:	ins    BYTE PTR es:[edi],dx
  412653:	call   0xe8d6db60
  412658:	add    esi,DWORD PTR [ecx]
  41265a:	loope  0x4125f7
  41265c:	jmp    0x41264f
  41265e:	or     BYTE PTR [esi+edi*4-0x5e],ah
  412662:	(bad)  ds:0x57486ae
  412668:	js     0x4125f8
  41266a:	sti    
  41266b:	jp     0x4126e5
  41266d:	pop    DWORD PTR [eax]
  41266f:	add    BYTE PTR [ecx],ch
  412671:	xchg   esi,eax
  412672:	lock sub BYTE PTR [esi+ecx*1+0x6c],0x72
  412678:	pop    edi
  412679:	mov    dl,0xad
  41267b:	jecxz  0x412653
  41267d:	out    0x6a,al
  41267f:	call   FWORD PTR [eax+ebx*2-0x79]
  412683:	mov    esp,0xfe6acec1
  412688:	jmp    0xd9a90ed3
  41268d:	xor    bl,BYTE PTR [ebp+edi*4-0x4a]
  412691:	add    BYTE PTR [eax+0x4],al
  412694:	call   0xfeac9869
  412699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41269a:	and    BYTE PTR [esi+esi*8-0x62],0xa6
  41269f:	imul   esi,DWORD PTR [ecx+eiz*8-0x66],0xffffffdd
  4126a4:	inc    esp
  4126a5:	mov    fs,WORD PTR [esi-0x79724b95]
  4126ab:	imul   edi,esi,0x7e
  4126ae:	add    BYTE PTR [eax+ebp*8],al
  4126b1:	push   ss
  4126b2:	lock push 0xfffffffe
  4126b5:	outs   dx,BYTE PTR ds:[esi]
  4126b6:	add    BYTE PTR [eax-0x2],bh
  4126b9:	pushf  
  4126ba:	push   ebp
  4126bb:	jae    0x4126bb
  4126bd:	pop    esi
  4126be:	data16 cmc 
  4126c0:	pop    es
  4126c1:	inc    ecx
  4126c2:	adc    eax,esi
  4126c4:	dec    BYTE PTR [esi+0x66]
  4126c7:	mov    ch,0xdf
  4126c9:	ds pop esi
  4126cb:	imul   edi,esi,0xffffffb4
  4126ce:	cmp    ah,BYTE PTR [ecx-0x23]
  4126d1:	lods   eax,DWORD PTR ds:[esi]
  4126d2:	aas    
  4126d3:	imul   edi,esi,0x74
  4126d6:	pop    ecx
  4126d7:	jae    0x4126d7
  4126d9:	es ds cmc 
  4126dc:	pop    es
  4126dd:	adc    DWORD PTR [ebx-0x3a],esp
  4126e0:	(bad)  
  4126e1:	push   ss
  4126e2:	push   ds
  4126e3:	mov    ch,0xcf
  4126e5:	push   ss
  4126e6:	es imul edi,esi,0x0
  4126ea:	adc    eax,0xd524e800
  4126ef:	repnz std 
  4126f1:	inc    DWORD PTR [ebp-0x33]
  4126f4:	cmc    
  4126f5:	inc    DWORD PTR [eax]
  4126f7:	(bad)  
  4126f8:	fild   WORD PTR [eax+ecx*2]
  4126fb:	(bad)  
  4126fc:	repnz std 
  4126fe:	mov    ch,0x80
  412700:	(bad)  
  412702:	push   DWORD PTR [eax-0x12]
  412705:	inc    ebp
  412706:	jmp    FWORD PTR [edi-0xe]
  412709:	mov    bl,0xdc
  41270b:	xchg   edi,eax
  41270c:	repnz std 
  41270e:	call   0x3ed19b
  412713:	jg     0x4126cd
  412715:	loop   0x41270e
  412717:	(bad)  
  412718:	repnz out 0xe5,al
  41271b:	pop    es
  41271c:	hlt    
  41271d:	std    
  41271e:	inc    DWORD PTR [ebp-0x40000a2a]
  412724:	(bad)  
  412726:	inc    edi
  412727:	scas   eax,DWORD PTR es:[edi]
  412728:	repz std 
  41272a:	mov    ch,0xbc
  41272c:	(bad)  
  41272e:	dec    DWORD PTR [edi+0x5ff0a79]
  412734:	jmp    edi
  412736:	(bad)  
  412737:	(bad)  
  412738:	repz std 
  41273a:	call   DWORD PTR [ebp-0x70000a1e]
  412740:	fidivr WORD PTR [edi+eax*2+0x45fdf37f]
  412747:	sbb    ch,0xd8
  41274a:	std    
  41274b:	outs   dx,DWORD PTR ds:[esi]
  41274c:	repz std 
  41274e:	jne    0x41275c
  412750:	(bad)  
  412752:	xor    ebx,eax
  412754:	push   es
  412755:	leave  
  412756:	ret    0x6dc
  412759:	push   ebp
  41275a:	mov    eax,DWORD PTR [eax]
  41275c:	sbb    al,0x87
  41275e:	ret    0x1de4
  412761:	dec    ecx
  412762:	cli    
  412763:	push   eax
  412764:	xor    DWORD PTR [eax+0x5ff0681c],ecx
  41276a:	jmp    0x4ff:0x2a10ee6
  412771:	pop    esp
  412772:	push   0xffffffa5
  412774:	sti    
  412775:	jb     0x4127eb
  412777:	or     dh,BYTE PTR [ecx-0xc]
  41277a:	jmp    0x7826d9ce
  41277f:	add    esp,esp
  412781:	sub    dh,BYTE PTR [ebp+0x2f]
  412784:	mov    dh,0x1d
  412786:	jl     0x412708
  412788:	fcom   QWORD PTR [edi+0x6f]
  41278b:	add    BYTE PTR [ecx],dh
  41278d:	pusha  
  41278e:	in     al,dx
  41278f:	push   es
  412790:	jbe    0x4127b7
  412792:	jl     0x412787
  412794:	xor    BYTE PTR [eax+0x2],ah
  412797:	jmp    0x41278c
  412799:	call   0x40ea:0x4fc9f7ee
  4127a0:	xor    ebp,ebx
  4127a2:	mov    esi,0xee8881e3
  4127a7:	xor    dh,BYTE PTR [ecx]
  4127a9:	pusha  
  4127aa:	jg     0x41276f
  4127ac:	and    eax,0x748d0416
  4127b1:	test   bl,dl
  4127b3:	addr16 push cs
  4127b5:	sti    
  4127b6:	ret    0xffff
  4127b9:	je     0x4127c1
  4127bb:	call   0xfeb4de14
  4127c0:	add    BYTE PTR [edx],bh
  4127c2:	and    al,dh
  4127c4:	adc    eax,DWORD PTR [ecx-0x31fffeb8]
  4127ca:	jns    0x41279f
  4127cc:	(bad)  
  4127cd:	pop    esp
  4127ce:	js     0x41283a
  4127d0:	ds pop esp
  4127d2:	sub    esi,DWORD PTR [ebp-0x19]
  4127d5:	adc    al,0x9b
  4127d7:	jae    0x4127d7
  4127d9:	mov    esi,0x34827a8c
  4127de:	or     DWORD PTR [ecx],esp
  4127e0:	add    al,0x24
  4127e2:	mov    cl,0x10
  4127e4:	adc    eax,0x4b1569ee
  4127e9:	jo     0x4127eb
  4127eb:	jmp    0x699dd3be
  4127f0:	inc    eax
  4127f1:	mov    bl,dh
  4127f3:	call   0x7bab17e1
  4127f8:	or     ecx,DWORD PTR [ecx+0x7774a4c7]
  4127fe:	jg     0x41282b
  412800:	js     0x4127d8
  412802:	add    edx,DWORD PTR [ecx-0x3d]
  412805:	pushw  0x1b
  412808:	mov    ch,0xf6
  41280a:	(bad)  
  41280b:	call   0xd1420584
  412810:	jae    0x41285c
  412812:	imul   edi,DWORD PTR [ebp+0x27e12deb],0xe906c904
  41281c:	add    esi,DWORD PTR [ecx+0x190c1b69]
  412822:	dec    eax
  412823:	pushf  
  412824:	je     0x412826
  412826:	daa    
  412827:	imul   ebx,ebx,0xe8ca76b4
  41282d:	je     0x4127cc
  41282f:	adc    DWORD PTR [ecx+0x7d690e2a],edx
  412835:	jmp    0x412867
  412837:	or     ecx,ebp
  412839:	cmp    edi,0xffffffde
  41283c:	loopne 0x4128a9
  41283e:	sbb    ch,BYTE PTR [eax+0x65]
  412841:	je     0x412832
  412843:	ficomp WORD PTR [esp+esi*2+0x5d]
  412847:	adc    DWORD PTR [ecx+0x3a],eax
  41284a:	jne    0x4128b4
  41284c:	dec    ebp
  41284d:	dec    edx
  41284e:	lock or eax,0x75bbcee9
  412854:	imul   edi,DWORD PTR [edi],0x9dffbfea
  41285a:	enter  0x6868,0xa1
  41285e:	cmp    eax,0x91107dd
  412863:	retf   
  412864:	(bad)  
  412865:	push   ds
  412866:	mov    ebx,0x676afbcd
  41286b:	xchg   BYTE PTR [edx-0x58],cl
  41286e:	xor    cl,BYTE PTR [ecx]
  412870:	(bad)  
  412872:	test   DWORD PTR [eax],0x25b1e900
  412878:	mov    eax,ds:0xfe6873a2
  41287d:	fdivrp st(6),st
  41287f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412880:	add    cl,ch
  412882:	xor    cl,BYTE PTR [esp+edi*1-0x365970]
  412889:	call   0xb2ce5b8e
  41288e:	call   0x4c431c5
  412893:	ins    BYTE PTR es:[edi],dx
  412894:	rol    DWORD PTR [eax-0x17],cl
  412897:	xor    bl,BYTE PTR [eax]
  412899:	test   BYTE PTR [edi+0x6a000934],cl
  41289f:	add    dh,dh
  4128a1:	dec    edx
  4128a2:	sub    BYTE PTR ds:0xb4650f09,dh
  4128a8:	or     BYTE PTR [eax],al
  4128aa:	jmp    0x22b24d66
  4128af:	in     al,dx
  4128b0:	addr16 (bad) 
  4128b2:	div    BYTE PTR [esi+0x32e90093]
  4128b8:	mov    WORD PTR [esp+edi*8],?
  4128bb:	mov    edi,0x33e8ffc8
  4128c0:	lea    edi,[esi-0x18]
  4128c3:	xor    cl,BYTE PTR [ecx]
  4128c5:	sbb    DWORD PTR [eax+ebx*4],0xffffffd2
  4128c9:	inc    eax
  4128ca:	jmp    0xdbc54101
  4128cf:	sub    eax,0xe0000009
  4128d4:	and    BYTE PTR [esi+0x41],0xd8
  4128d8:	inc    ebp
  4128d9:	(bad)  
  4128da:	(bad)  
  4128db:	fnstsw WORD PTR [eax+0x49]
  4128de:	inc    ecx
  4128df:	enter  0x43e4,0xf8
  4128e3:	sbb    ebx,DWORD PTR [edx-0xa]
  4128e6:	add    BYTE PTR [edi-0x77fea971],dl
  4128ec:	or     ebp,DWORD PTR [ebx]
  4128ee:	test   BYTE PTR [eax],0xde
  4128f1:	fidiv  DWORD PTR [ebx-0x8]
  4128f4:	aaa    
  4128f5:	add    ah,BYTE PTR [ecx-0x74f426b5]
  4128fb:	lock xchg ebx,eax
  4128fd:	loope  0x412972
  4128ff:	add    eax,0x12331
  412904:	pop    eax
  412905:	out    0x54,al
  412907:	or     al,0xe3
  412909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41290a:	mov    ax,WORD PTR [edx]
  41290d:	imul   eax,DWORD PTR [edi-0x29983b3],0xf8dc0f
  412917:	add    BYTE PTR [eax-0x3c],bl
  41291a:	or     al,0x1
  41291c:	dec    eax
  41291d:	or     ebp,DWORD PTR [eax-0x68]
  412920:	lock dec ebp
  412922:	(bad)  
  412923:	dec    BYTE PTR [edi]
  412925:	ret    
  412926:	xor    al,0x31
  412928:	sbb    BYTE PTR [ebx],cl
  41292a:	or     eax,eax
  41292c:	pop    ss
  41292d:	xchg   edx,eax
  41292e:	repnz add BYTE PTR [eax],cl
  412931:	or     eax,DWORD PTR [ebx+0xf0b007f]
  412937:	test   BYTE PTR [edx-0x78fffff6],ah
  41293d:	arpl   WORD PTR [esi],ax
  41293f:	call   0x3e7aeb
  412944:	popa   
  412945:	push   ecx
  412946:	out    dx,al
  412947:	(bad)  
  412948:	jmp    DWORD PTR [edx-0x3]
  41294b:	jne    0x41297e
  41294d:	shl    BYTE PTR [ecx+0x76],0x25
  412951:	enter  0x4607,0x0
  412955:	into   
  412956:	iret   
  412957:	fisub  DWORD PTR [ecx-0xfd4ea7]
  41295d:	inc    esp
  41295e:	and    BYTE PTR [ebx-0x3],bl
  412961:	add    DWORD PTR [eax+0x2],esi
  412964:	or     esi,DWORD PTR [ecx+0x5f]
  412967:	xchg   DWORD PTR [ebx+0x6a027031],esi
  41296d:	xor    ebp,ebp
  41296f:	(bad)  
  412970:	out    0x1,eax
  412972:	(bad)
  412975:	loope  0x4129f0
  412977:	add    ch,BYTE PTR [edx+0x31]
  41297a:	jle    0x4129ed
  41297c:	adc    al,0xc8
  41297e:	stos   DWORD PTR es:[edi],eax
  41297f:	ret    
  412980:	jmp    FWORD PTR [ebx]
  412982:	xor    BYTE PTR [edx],al
  412984:	test   dh,al
  412986:	jo     0x41298a
  412988:	add    BYTE PTR [ebp+ebp*1-0x3aa1b098],dh
  41298f:	pop    ebx
  412990:	(bad)  
  412991:	fsub   QWORD PTR [ebx+0x1ad81470]
  412997:	ret    
  412998:	(bad)  
  412999:	cmp    esi,DWORD PTR [eax+0x35ac77f7]
  41299f:	fs dec edi
  4129a1:	retf   
  4129a2:	outs   dx,DWORD PTR ds:[esi]
  4129a3:	fdiv   st(7),st
  4129a5:	cwde   
  4129a6:	ja     0x412984
  4129a8:	jmp    DWORD PTR [edi]
  4129aa:	std    
  4129ab:	inc    BYTE PTR [si+0xd]
  4129af:	mov    ebp,0x426b3140
  4129b4:	jae    0x412a1d
  4129b6:	(bad)  
  4129b7:	neg    bh
  4129b9:	add    BYTE PTR [ecx],bl
  4129bb:	rdseed esi
  4129be:	(bad)  
  4129bf:	call   0x2ce6058a
  4129c4:	fs dec edi
  4129c6:	out    dx,al
  4129c7:	or     ah,bl
  4129c9:	dec    edi
  4129ca:	pop    eax
  4129cb:	or     ebx,edx
  4129cd:	or     BYTE PTR [ebx+0x9],cl
  4129d0:	push   esi
  4129d1:	not    edx
  4129d3:	repz fidivr WORD PTR gs:[ebx-0x38]
  4129d8:	call   0x101db0d9
  4129dd:	fdivr  QWORD PTR [esi-0x484dba9b]
  4129e3:	fneni(8087 only) 
  4129e5:	pop    ebx
  4129e6:	xchg   edi,eax
  4129e8:	and    eax,0xf0dea771
  4129ed:	jo     0x412a13
  4129ef:	or     eax,0x712ef716
  4129f4:	or     eax,0x5658fc3
  4129f9:	mul    DWORD PTR [esi+0x65]
  4129fc:	jae    0x412a4d
  4129fe:	jg     0x4129db
  412a00:	loopne 0x412a5d
  412a02:	add    edi,0xdb6f70ed
  412a08:	les    ebx,FWORD PTR [ebx+0x30]
  412a0b:	int3   
  412a0c:	fnsave [eax+0x5f]
  412a0f:	fcmovne st,st(4)
  412a11:	jo     0x412a50
  412a13:	fsub   DWORD PTR [ecx]
  412a15:	ret    
  412a16:	dec    esi
  412a17:	out    dx,eax
  412a18:	call   0xbdb5e78d
  412a1d:	push   ss
  412a1e:	add    ah,al
  412a20:	shl    DWORD PTR [edi],1
  412a22:	add    al,0x36
  412a24:	fstp   TBYTE PTR [eax-0x5a31eba5]
  412a2a:	jo     0x4129df
  412a2c:	dec    esp
  412a2d:	clc    
  412a2e:	jo     0x412a9d
  412a30:	pop    ebp
  412a31:	imul   ebp,esi,0x86de0a22
  412a37:	push   ss
  412a38:	test   DWORD PTR fs:[eax+0x19],esi
  412a3c:	lahf   
  412a3d:	jle    0x412aaf
  412a3f:	(bad)  
  412a40:	out    dx,eax
  412a41:	(bad)  
  412a42:	call   0x6f3907c8
  412a47:	inc    edi
  412a48:	scas   al,BYTE PTR es:[edi]
  412a49:	dec    edx
  412a4a:	test   al,0x32
  412a4c:	fs je  0x412aac
  412a4f:	popa   
  412a50:	fld    QWORD PTR [edi]
  412a52:	inc    ecx
  412a53:	or     eax,edi
  412a55:	dec    BYTE PTR [esi-0x1f]
  412a58:	(bad)  
  412a59:	enter  0x2e2b,0x9
  412a5d:	push   ebp
  412a5e:	jb     0x412abe
  412a60:	mov    ebx,eax
  412a62:	adc    eax,0x5cfe6339
  412a67:	ja     0x412ac9
  412a69:	dec    edi
  412a6a:	es lahf 
  412a6c:	adc    bh,bh
  412a6e:	aam    0xe1
  412a70:	int3   
  412a71:	inc    eax
  412a72:	jmp    0xe9707a71
  412a77:	xor    dl,BYTE PTR [eax]
  412a79:	shl    dh,0xaf
  412a7c:	mov    bl,0x0
  412a7e:	jmp    0xf18576b5
  412a83:	add    BYTE PTR [ebx],dh
  412a85:	or     DWORD PTR [eax],eax
  412a87:	jmp    0xe734f785
  412a8c:	or     DWORD PTR cs:[eax],eax
  412a8f:	push   ebx
  412a90:	xor    eax,0x2d42ffef
  412a95:	out    dx,eax
  412a96:	call   FWORD PTR [ebx+0x78]
  412a99:	pop    eax
  412a9a:	dec    edi
  412a9b:	je     0x412a55
  412a9d:	pop    eax
  412a9e:	idiv   BYTE PTR [esi+0x3cfed3ce]
  412aa4:	lds    esp,FWORD PTR [edx+0x74]
  412aa7:	lods   eax,DWORD PTR ds:[esi]
  412aa8:	lea    eax,[esi+0x1032e92f]
  412aae:	rcl    BYTE PTR ds:0xe8717228,0x32
  412ab5:	or     DWORD PTR [eax+0x72],ebp
  412ab8:	int    0xc8
  412aba:	(bad)  
  412abb:	jmp    FWORD PTR [edi-0x5017f59f]
  412ac1:	dec    ebx
  412ac2:	std    
  412ac3:	call   FWORD PTR [eax]
  412ac5:	loopne 0x412a95
  412ac7:	lea    edx,[ebp-0x1f]
  412aca:	cmc    
  412acb:	dec    DWORD PTR [edi+0x3d]
  412ace:	push   eax
  412acf:	call   0x3e76f3
  412ad4:	push   ecx
  412ad5:	xchg   edx,eax
  412ad6:	(bad)  
  412ad8:	jg     0x412ace
  412ada:	out    0x35,al
  412adc:	xchg   esp,eax
  412add:	repnz std 
  412adf:	push   0xffffffc8
  412ae1:	aas    
  412ae2:	int3   
  412ae3:	push   0xb5ff0789
  412ae8:	add    BYTE PTR [esp+ebx*8],bh
  412aeb:	std    
  412aec:	dec    DWORD PTR [edi+0x22]
  412aef:	mov    edi,0xe807c948
  412af4:	xor    eax,0x89fdf2c7
  412af9:	adc    eax,0x2ffff5dd
  412afe:	aas    
  412aff:	(bad)  
  412b00:	sbb    eax,DWORD PTR [di+0x3f]
  412b04:	add    BYTE PTR [edi-0x60],bh
  412b07:	(bad)  
  412b09:	pop    edi
  412b0a:	repnz std 
  412b0c:	xor    eax,0x3f9f8f
  412b11:	cmp    dl,0x46
  412b14:	(bad)  
  412b15:	jg     0x412afb
  412b17:	sub    esp,0x67
  412b1a:	repnz std 
  412b1c:	push   0x58
  412b1e:	aas    
  412b1f:	(bad)  
  412b20:	push   0xb5ff0d09
  412b25:	pushf  
  412b26:	(bad)  
  412b28:	(bad)  
  412b29:	fbld   TBYTE PTR [ecx]
  412b2b:	mov    edi,0xe80d5948
  412b30:	stc    
  412b31:	push   esi
  412b32:	repnz std 
  412b34:	mov    DWORD PTR [ecx],esi
  412b36:	cmc    
  412b37:	pop    edx
  412b38:	test   BYTE PTR [esi],0x94
  412b3b:	fdivr  st,st(7)
  412b3d:	mov    gs,WORD PTR [ebp-0x1ccebf26]
  412b43:	mov    bh,0xdb
  412b45:	(bad)  
  412b46:	fld    TBYTE PTR [ebp-0x2]
  412b49:	and    al,0x33
  412b4b:	mov    ebx,0xb8310040
  412b50:	dec    ecx
  412b51:	inc    ebp
  412b52:	faddp  st(3),st
  412b54:	jnp    0x412ada
  412b56:	int    0xc3
  412b58:	ins    DWORD PTR es:[edi],dx
  412b59:	(bad)  
  412b5a:	pop    ebx
  412b5b:	jo     0x412b37
  412b5d:	loope  0x412bb8
  412b5f:	mov    cl,0x2
  412b61:	inc    DWORD PTR [esp+eax*1+0x1bb6fe76]
  412b68:	cmp    BYTE PTR [edi-0x17fd4f07],bh
  412b6e:	in     al,0xb2
  412b70:	ins    DWORD PTR es:[edi],dx
  412b71:	(bad)  
  412b72:	test   al,0xed
  412b74:	(bad)  
  412b75:	not    BYTE PTR [esi-0x62437e05]
  412b7b:	sti    
  412b7c:	ins    DWORD PTR es:[edi],dx
  412b7d:	(bad)  
  412b7e:	xor    esp,esp
  412b80:	shl    DWORD PTR [edi+0x31],1
  412b83:	jo     0x412be2
  412b85:	mov    ebp,0xe7fae576
  412b8a:	sub    esi,DWORD PTR [eax-0x7a990193]
  412b90:	jae    0x412b88
  412b92:	pop    esi
  412b93:	inc    ebx
  412b94:	ins    BYTE PTR es:[edi],dx
  412b95:	je     0x412bc0
  412b97:	dec    eax
  412b98:	jge    0x412bd9
  412b9a:	dec    esi
  412b9b:	push   ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	mov    ah,0x55
  412b9f:	mov    ds:0x1d3efe6c,eax
  412ba4:	cld    
  412ba5:	out    0xb1,eax
  412ba7:	xor    BYTE PTR [ebp-0x2],ch
  412baa:	fstp   QWORD PTR cs:[ebx-0xa]
  412bae:	or     DWORD PTR es:[esi+0x11a5006d],esp
  412bb5:	xchg   ecx,eax
  412bb6:	repnz push esi
  412bb8:	bound  edx,QWORD PTR [ebp-0x6a933a93]
  412bbe:	ins    DWORD PTR es:[edi],dx
  412bbf:	pop    es
  412bc0:	(bad)  
  412bc1:	sti    
  412bc2:	sti    
  412bc3:	push   ss
  412bc4:	in     eax,dx
  412bc5:	sub    BYTE PTR [ebp-0x9],ch
  412bc8:	popa   
  412bc9:	cmp    esp,DWORD PTR [edi+eiz*8+0x61]
  412bcd:	ins    DWORD PTR es:[edi],dx
  412bce:	ins    DWORD PTR es:[edi],dx
  412bcf:	pop    ebp
  412bd0:	adc    DWORD PTR [ecx-0x2a],edx
  412bd3:	push   ds
  412bd4:	bound  ebx,QWORD PTR [ebp+0x6d]
  412bd7:	popf   
  412bd8:	inc    esp
  412bd9:	pop    ebp
  412bda:	ins    DWORD PTR es:[edi],dx
  412bdb:	iret   
  412bdc:	popa   
  412bdd:	sar    ebx,cl
  412bdf:	into   
  412be0:	mov    BYTE PTR [esi+0x6d],al
  412be3:	mov    edi,0xbf507361
  412be8:	popa   
  412be9:	xor    eax,0x2dc6585c
  412bee:	ins    DWORD PTR es:[edi],dx
  412bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf0:	fwait
  412bf1:	sbb    BYTE PTR [ebp-0x61],dh
  412bf4:	popa   
  412bf5:	adc    BYTE PTR ds:0x6d1561f2,cl
  412bfb:	lds    esi,FWORD PTR [ebp+edx*1+0x6d]
  412bff:	xchg   DWORD PTR [eax-0x24],esi
  412c02:	sar    BYTE PTR [edi+0x61],0xfd
  412c06:	mov    dh,0x8e
  412c08:	pop    ecx
  412c09:	cmc    
  412c0a:	ins    BYTE PTR es:[edi],dx
  412c0b:	push   esi
  412c0c:	rsm    
  412c0e:	ins    BYTE PTR es:[edi],dx
  412c0f:	addr16 popa 
  412c11:	fwait
  412c12:	addr16 addr16 popa 
  412c15:	fstp   QWORD PTR [ebx+0x0]
  412c18:	push   esp
  412c19:	(bad)  
  412c1a:	aad    0x6c
  412c1c:	dec    edi
  412c1d:	fwait
  412c1e:	enter  0x4774,0x61
  412c22:	shl    BYTE PTR [eax-0x10],1
  412c25:	popa   
  412c26:	mov    ebp,0xff60ed6c
  412c2b:	mov    edi,0xaefe5f12
  412c30:	xchg   ebp,eax
  412c31:	aad    0xfb
  412c33:	xchg   ecx,eax
  412c34:	sbb    eax,0x5be90030
  412c39:	dec    edx
  412c3a:	pop    es
  412c3b:	jmp    0x6b2cc027
  412c40:	outs   dx,BYTE PTR ds:[esi]
  412c41:	fs imul ebp,ecx,0xf4fed1d8
  412c48:	cli    
  412c49:	push   0x5f5c2904
  412c4e:	mov    BYTE PTR [ecx+eiz*2],ah
  412c51:	call   0x6134fe04
  412c56:	std    
  412c57:	aam    0xda
  412c59:	push   0x5f5d5707
  412c5e:	(bad)  
  412c5f:	aam    0x56
  412c61:	pop    edi
  412c62:	je     0x412c55
  412c64:	pop    edx
  412c65:	xor    BYTE PTR [eax+0x3e],al
  412c68:	inc    ebp
  412c69:	push   ecx
  412c6a:	shr    ebp,0x32
  412c6d:	mov    dh,0x8a
  412c6f:	cmp    eax,0x26f34cb1
  412c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c75:	adc    al,0xe8
  412c77:	xchg   edi,eax
  412c78:	aaa    
  412c79:	or     DWORD PTR [eax],eax
  412c7b:	loop   0x412c7d
  412c7d:	repnz aam 0x3
  412c80:	and    al,dh
  412c82:	adc    eax,DWORD PTR [eax]
  412c84:	push   es
  412c85:	xchg   DWORD PTR [eax],edx
  412c87:	call   0x4a4413
  412c8c:	loop   0x412c80
  412c8e:	aam    0x3
  412c90:	and    al,dh
  412c92:	adc    eax,DWORD PTR [eax]
  412c94:	jo     0x412d06
  412c96:	pop    eax
  412c97:	(bad)  
  412c98:	push   esp
  412c99:	lds    esp,FWORD PTR [edi-0x6d]
  412c9c:	sub    ebx,edx
  412c9e:	pop    esi
  412c9f:	mov    BYTE PTR [ecx+ebx*8],ah
  412ca2:	pop    esi
  412ca3:	je     0x412ca5
  412ca5:	je     0x412c9b
  412ca7:	jae    0x412ca1
  412ca9:	ja     0x412d05
  412cab:	push   cs
  412cac:	call   0x3ecf65
  412cb1:	adc    ecx,esp
  412cb3:	jb     0x412cf0
  412cb5:	mov    eax,ds:0x86af24a
  412cba:	loope  0x412cff
  412cbc:	hlt    
  412cbd:	dec    eax
  412cbe:	hlt    
  412cbf:	jae    0x412cbd
  412cc1:	mov    al,0xb8
  412cc3:	imul   edi,edi,0x74be5fb7
  412cc9:	out    dx,al
  412cca:	inc    ebx
  412ccb:	dec    BYTE PTR [edi]
  412ccd:	mov    bh,0xb2
  412ccf:	std    
  412cd0:	jne    0x412ca2
  412cd2:	ret    
  412cd3:	cmc    
  412cd4:	ds push edi
  412cd6:	hlt    
  412cd7:	std    
  412cd8:	jne    0x412c9e
  412cda:	bnd jae 0x412ce5
  412cdd:	jo     0x412c82
  412cdf:	cmp    eax,0xf47700ff
  412ce4:	jae    0x412cda
  412ce6:	ja     0x412d42
  412ce8:	cli    
  412ce9:	(bad)  
  412cea:	jge    0x412d4f
  412cec:	out    0x14,al
  412cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cef:	repnz std 
  412cf1:	(bad)  
  412cf2:	fucom  st(7)
  412cf4:	out    0x25,al
  412cf6:	retf   0xfdf2
  412cf9:	leave  
  412cfa:	dec    edx
  412cfb:	popa   
  412cfc:	(bad)  
  412cfd:	push   esp
  412cfe:	adc    eax,ecx
  412d00:	add    esp,0x75fd3b3c
  412d06:	test   bl,al
  412d08:	in     eax,dx
  412d09:	inc    esi
  412d0a:	ja     0x412cfe
  412d0c:	or     eax,eax
  412d0e:	in     eax,dx
  412d0f:	or     BYTE PTR [esi-0x37],bl
  412d12:	sbb    ah,BYTE PTR [ecx-0x2]
  412d15:	mov    WORD PTR ds:0xfdff4ed5,cs
  412d1b:	pusha  
  412d1c:	out    0xa1,al
  412d1e:	xor    DWORD PTR [edi],ebp
  412d20:	imul   edi,esi,0x3a
  412d23:	mov    dl,0xf9
  412d25:	adc    DWORD PTR [ecx+0x71],0x2
  412d29:	add    BYTE PTR [esi],dh
  412d2b:	adc    al,0x68
  412d2d:	out    0x35,eax
  412d2f:	xor    ch,BYTE PTR [ebx-0x2]
  412d32:	mov    eax,0xa4fe5825
  412d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d38:	imul   esi,DWORD PTR [ebp+eax*1-0x80],0x4b19f7ef
  412d40:	(bad)  
  412d41:	inc    BYTE PTR [esi]
  412d43:	in     al,dx
  412d44:	out    dx,eax
  412d45:	jmp    0x412d47
  412d47:	or     ah,dl
  412d49:	add    al,BYTE PTR [eax]
  412d4b:	xor    eax,edi
  412d4d:	std    
  412d4e:	push   0xe7d07070
  412d53:	jbe    0x412cf3
  412d55:	add    al,BYTE PTR [eax]
  412d57:	sub    dh,BYTE PTR [eax]
  412d59:	lock add al,0xc8
  412d5c:	mov    BYTE PTR [edx],al
  412d5e:	add    BYTE PTR [ecx],dh
  412d60:	jmp    0x412dd4
  412d62:	cmp    ecx,DWORD PTR [bx+di-0x3d]
  412d66:	call   esi
  412d68:	ficom  DWORD PTR [esi]
  412d6a:	add    BYTE PTR [ecx],dh
  412d6c:	jae    0x412de0
  412d6e:	mov    BYTE PTR [eax+ecx*8],ah
  412d71:	ficomp DWORD PTR [ecx]
  412d73:	sbb    BYTE PTR [ecx+0x3a895602],dh
  412d79:	sbb    BYTE PTR [eax],al
  412d7b:	xor    DWORD PTR [ebx+0x42],ebx
  412d7e:	je     0x412db3
  412d80:	or     esi,ecx
  412d82:	mov    DWORD PTR [ecx],esp
  412d84:	call   0xadea1058
  412d89:	pop    esi
  412d8a:	addr16 adc eax,0x4ffc379
  412d90:	or     BYTE PTR [esi+ebp*1],dl
  412d93:	xor    DWORD PTR [eax-0x3],esi
  412d96:	mov    edi,0x5ceb08e4
  412d9b:	cmc    
  412d9c:	xchg   ecx,eax
  412d9d:	fcomp  st(4)
  412d9f:	sub    dh,al
  412da1:	daa    
  412da2:	add    al,0x59
  412da4:	into   
  412da5:	cld    
  412da6:	add    esi,DWORD PTR [ecx]
  412da8:	or     bh,BYTE PTR [ecx+0x3cbd007b]
  412dae:	push   eax
  412daf:	push   cs
  412db0:	cwde   
  412db1:	enter  0xd1e8,0xe
  412db5:	outs   dx,BYTE PTR ds:[esi]
  412db6:	sti    
  412db7:	add    esi,DWORD PTR [ecx]
  412db9:	adc    ch,BYTE PTR [ecx-0x1e8dcf11]
  412dbf:	jge    0x412dff
  412dc1:	xchg   ecx,eax
  412dc2:	cmp    edx,DWORD PTR [ecx-0x47]
  412dc5:	ret    
  412dc6:	mov    al,0x7d
  412dc8:	jne    0x412e2f
  412dca:	scas   al,BYTE PTR es:[edi]
  412dcb:	add    al,0x31
  412dcd:	xchg   edx,eax
  412dce:	and    ecx,DWORD PTR [esp+esi*8+0x8]
  412dd2:	jmp    0x6d7e8b3f
  412dd7:	out    dx,eax
  412dd8:	(bad)  
  412dd9:	pop    ebp
  412dda:	(bad)  
  412ddc:	into   
  412ddd:	jns    0x412e3d
  412ddf:	imul   ecx,edi,0xbb64bb92
  412de5:	ret    
  412de6:	inc    esp
  412de7:	jl     0x412e17
  412de9:	xchg   ebx,eax
  412dea:	fwait
  412deb:	push   eax
  412dec:	stos   DWORD PTR es:[edi],eax
  412ded:	ret    
  412dee:	and    BYTE PTR [esi+edi*1-0x77],bh
  412df2:	test   BYTE PTR [ebx],0x36
  412df5:	test   BYTE PTR [eax+ebp*2-0x10daa261],dl
  412dfc:	mov    dh,BYTE PTR [eax-0x38]
  412dff:	ret    0x5d8f
  412e02:	arpl   WORD PTR [edi-0x46ff476a],di
  412e08:	neg    DWORD PTR [ebp+0x5]
  412e0b:	pop    ebp
  412e0c:	jbe    0x412dc9
  412e0e:	das    
  412e0f:	inc    esi
  412e10:	add    BYTE PTR [edx],bh
  412e12:	or     DWORD PTR [eax],eax
  412e14:	pushf  
  412e15:	in     eax,0x71
  412e17:	(bad)  
  412e18:	je     0x412e80
  412e1a:	gs pop esp
  412e1c:	sub    al,0xc8
  412e1e:	pop    esi
  412e1f:	or     ch,BYTE PTR [ecx-0x3b97cfa2]
  412e25:	push   0xffffffc8
  412e27:	(bad)  
  412e28:	cmp    ch,bl
  412e2a:	jo     0x412e6f
  412e2c:	(bad)  
  412e2d:	leave  
  412e2e:	int    0x67
  412e30:	sbb    DWORD PTR ds:[eax+eax*1],0x41
  412e35:	sub    eax,0xfa6fef09
  412e3a:	pop    esi
  412e3b:	sub    BYTE PTR [di],ch
  412e3e:	mov    ecx,0x650d14fe
  412e43:	and    eax,DWORD PTR [ecx]
  412e45:	cwde   
  412e46:	pop    ebx
  412e47:	out    0xb1,eax
  412e49:	repnz pop ebx
  412e4b:	(bad)  
  412e4c:	mov    al,0x6c
  412e4e:	add    al,0x0
  412e50:	adc    al,0x6c
  412e52:	jo     0x412dd6
  412e54:	lods   eax,DWORD PTR ds:[esi]
  412e55:	dec    esi
  412e56:	repnz inc DWORD PTR [edx]
  412e59:	lahf   
  412e5a:	pop    ebx
  412e5b:	je     0x412e4e
  412e5d:	jp     0x412ec1
  412e5f:	cmp    al,0x5e
  412e61:	pop    ecx
  412e62:	xchg   ecx,eax
  412e63:	inc    esp
  412e64:	push   ebp
  412e65:	in     al,0x2
  412e67:	call   esp
  412e69:	mov    edx,0x4946a464
  412e6e:	pop    ebx
  412e6f:	imul   ecx,DWORD PTR [edx],0x4107d518
  412e75:	add    BYTE PTR [ebp+0x7c2efe5b],dh
  412e7b:	add    bh,bh
  412e7d:	pushf  
  412e7e:	call   0x675b:0x191e9064
  412e85:	jmp    0x81fe9abc
  412e8a:	or     ah,ah
  412e8c:	inc    eax
  412e8d:	add    BYTE PTR [eax-0x669714c0],cl
  412e93:	or     bh,bh
  412e95:	jne    0x412ee7
  412e97:	rol    ch,0x69
  412e9a:	dec    edi
  412e9b:	in     al,0xfd
  412e9d:	jne    0x412eeb
  412e9f:	in     al,0x73
  412ea1:	or     BYTE PTR [eax-0xe],ah
  412ea4:	cmp    edi,edi
  412ea6:	pop    edi
  412ea7:	push   ds
  412ea8:	rol    DWORD PTR [eax+ecx*2],0x39
  412eac:	mov    esp,ebp
  412eae:	leave  
  412eaf:	enter  0xf7d6,0xef
  412eb3:	jecxz  0x412e40
  412eb5:	inc    ebp
  412eb6:	fdiv   QWORD PTR [edi*8+0x73e2fc75]
  412ebd:	or     al,al
  412ebf:	jns    0x412eeb
  412ec1:	add    BYTE PTR [eax],bl
  412ec3:	pop    edi
  412ec4:	mov    esi,0xffc5950f
  412ec9:	dec    DWORD PTR [eax]
  412ecb:	sbb    eax,DWORD PTR [eax+edi*8+0x8]
  412ecf:	or     BYTE PTR [eax],al
  412ed1:	add    BYTE PTR [edi-0x28000db7],dl
  412ed7:	pop    es
  412ed8:	add    BYTE PTR [edx+0x0],ch
  412edb:	enter  0xfe41,0x69
  412edf:	enter  0xfe41,0x8c
  412ee3:	xchg   ebp,eax
  412ee4:	jmp    0x412f34
  412ee6:	lea    edx,[ebp-0x27]
  412ee9:	cmc    
  412eea:	jmp    FWORD PTR [edi+0x35]
  412eed:	std    
  412eee:	jne    0x412f60
  412ef0:	in     al,0x73
  412ef2:	cld    
  412ef3:	add    BYTE PTR [edx+ebp*1],bh
  412ef6:	add    BYTE PTR [eax-0x6a8b41a2],bl
  412efc:	mov    esp,0x7880181
  412f01:	push   0xfe44c09b
  412f06:	(bad)  
  412f07:	xor    DWORD PTR [ebp-0xa],edi
  412f0a:	out    0xb9,eax
  412f0c:	scas   al,BYTE PTR es:[edi]
  412f0d:	gs (bad) 
  412f0f:	loope  0x412ee7
  412f11:	push   ebx
  412f12:	mov    WORD PTR [ebp+edx*2-0x7e990193],?
  412f19:	shl    bh,1
  412f1b:	mov    DWORD PTR [esi-0x1357019b],ebp
  412f21:	dec    edx
  412f22:	test   BYTE PTR [esi+0x3a],0x5a
  412f26:	std    
  412f27:	push   es
  412f28:	xor    esp,DWORD PTR [ebp+0x69]
  412f2b:	xor    edx,ecx
  412f2d:	mov    ebx,0x6571f068
  412f32:	mov    ah,0x9
  412f34:	xchg   esp,eax
  412f35:	gs (bad) 
  412f37:	es push ds
  412f39:	cld    
  412f3a:	out    0x30,eax
  412f3c:	das    
  412f3d:	inc    BYTE PTR [bx+si]
  412f40:	test   al,0xed
  412f42:	jb     0x412f3a
  412f44:	push   cs
  412f45:	jl     0x412f1f
  412f47:	dec    DWORD PTR [esi+0x3140dd21]
  412f4d:	mov    ebp,DWORD PTR [edi+0x6583fed7]
  412f53:	(bad)  
  412f54:	fs pop eax
  412f56:	pop    edx
  412f57:	in     eax,0x73
  412f59:	shl    DWORD PTR [ebp-0x78],cl
  412f5c:	mov    ah,0xdc
  412f5e:	ins    DWORD PTR es:[edi],dx
  412f5f:	(bad)  
  412f60:	(bad)  
  412f61:	add    ch,BYTE PTR ss:[eax+0x6b]
  412f65:	cmp    ebx,eax
  412f67:	inc    edi
  412f69:	jge    0x412fb5
  412f6b:	idiv   BYTE PTR [esi+0x297465cb]
  412f71:	mov    eax,0x1bae4139
  412f76:	jl     0x412efc
  412f78:	cdq    
  412f79:	sbb    esp,DWORD PTR [esi-0x2]
  412f7c:	lods   al,BYTE PTR ds:[esi]
  412f7d:	in     eax,0x46
  412f7f:	not    BYTE PTR [esi+0x16d32609]
  412f85:	out    0x8f,al
  412f87:	les    eax,FWORD PTR [esi-0x78b4a4a5]
  412f8d:	pop    edx
  412f8e:	or     eax,0x1110fd66
  412f93:	call   0x65ad:0x7bfd59f0
  412f9a:	std    
  412f9b:	gs pop edi
  412f9d:	out    dx,eax
  412f9e:	call   0x2830f47e
  412fa3:	add    al,0x0
  412fa5:	dec    esi
  412fa6:	xchg   esp,eax
  412fa7:	shr    BYTE PTR [ebp+0x47],0x5a
  412fab:	aad    0xef
  412fad:	ss jno 0x413028
  412fb0:	ret    0x5a37
  412fb3:	outs   dx,DWORD PTR ds:[esi]
  412fb4:	jg     0x412fc4
  412fb6:	push   edx
  412fb7:	mov    ebp,0xb89bb365
  412fbc:	ins    DWORD PTR es:[edi],dx
  412fbd:	pop    ds
  412fbe:	pop    edx
  412fbf:	call   0x63c7bbb3
  412fc4:	pop    eax
  412fc5:	pop    es
  412fc6:	pop    edx
  412fc7:	popf   
  412fc8:	add    al,0x7d
  412fca:	out    0x69,eax
  412fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fcd:	push   ss
  412fce:	push   edx
  412fcf:	lea    esp,[ebp-0xa]
  412fd2:	aad    0x1f
  412fd4:	fsub   st(6),st
  412fd6:	pop    ecx
  412fd7:	lea    esp,[esi+0x5bd8d3e7]
  412fdd:	fistp  DWORD PTR ds:0x93d7656e
  412fe3:	pop    eax
  412fe4:	ins    DWORD PTR es:[edi],dx
  412fe5:	iret   
  412fe6:	pop    ecx
  412fe7:	pop    ebp
  412fe8:	out    dx,eax
  412fe9:	ss jno 0x412f91
  412fec:	daa    
  412fed:	mov    esi,0xcaaf4d59
  412ff2:	push   ecx
  412ff3:	inc    ebp
  412ff4:	gs scas eax,DWORD PTR es:[edi]
  412ff6:	rcr    eax,cl
  412ff8:	pop    ebx
  412ff9:	icebp  
  412ffa:	sbb    al,0x0
  412ffc:	ss adc al,0x5b
  412fff:	mov    ah,0x41
  413001:	add    al,0x5b
  413003:	(bad)  
  413004:	es sahf 
  413006:	or     eax,ebp
  413008:	fiadd  DWORD PTR [eax]
  41300a:	dec    esi
  41300b:	pop    edx
  41300c:	(bad)  
  41300d:	push   ss
  41300e:	into   
  41300f:	cmp    eax,0x5b0c0ef6
  413014:	mov    ah,0xd
  413016:	fcomp  QWORD PTR [edx-0x2]
  413019:	(bad)  
  41301a:	push   edi
  41301b:	or     eax,ebp
  41301d:	cli    
  41301e:	or     DWORD PTR [edx-0x2],ebx
  413021:	out    dx,al
  413022:	xchg   DWORD PTR [ecx],edi
  413024:	mul    dh
  413026:	aad    0x5a
  413028:	je     0x413023
  41302a:	jmp    0x745a:0xd5d63bf8
  413031:	stc    
  413032:	int    0x94
  413034:	xlat   BYTE PTR ds:[ebx]
  413035:	mov    esi,0x34fe5795
  41303a:	and    eax,0x95b77171
  41303f:	push   edi
  413040:	(bad)  
  413041:	je     0x4130ad
  413043:	pop    edi
  413044:	(bad)  
  413045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413046:	push   0x6a
  413048:	cmp    eax,0xb4578d9e
  41304d:	cdq    
  41304e:	lea    edx,[edi-0x2]
  413051:	and    DWORD PTR [ebp+0x16],0x9d5586ff
  413058:	jmp    0x4130d0
  41305a:	dec    ebp
  41305b:	push   edi
  41305c:	out    0xa5,eax
  41305e:	adc    al,0x58
  413060:	(bad)  
  413061:	outs   dx,BYTE PTR ds:[esi]
  413062:	xchg   DWORD PTR [eax-0xa],esi
  413065:	push   bp
  413067:	jo     0x413029
  413069:	pop    ds
  41306a:	dec    esp
  41306b:	push   edi
  41306c:	(bad)  
  41306d:	pushf  
  41306e:	add    BYTE PTR [esi+0x5f],bl
  413071:	dec    BYTE PTR [esi+0x5a]
  413074:	sahf   
  413075:	cmp    eax,0xfdecf700
  41307a:	mov    ch,0xf8
  41307c:	in     al,0xfd
  41307e:	push   eax
  413080:	jo     0x4130be
  413082:	inc    DWORD PTR [edi-0x13]
  413085:	inc    ebx
  413086:	clc    
  413087:	and    DWORD PTR [ebp-0x12d80004],ebx
  41308d:	jae    0x41308b
  41308f:	xor    BYTE PTR ds:0x13880029,dl
  413095:	ror    DWORD PTR [eax+ebx*2],0x47
  413099:	mov    esp,ebp
  41309b:	fist   DWORD PTR [edi]
  41309d:	sti    
  41309e:	push   0x48
  4130a0:	xor    cl,BYTE PTR [ecx-0x1]
  4130a3:	fst    QWORD PTR [ebx-0x1a]
  4130a6:	mov    ebp,0x89fdec13
  4130ab:	or     eax,0x5075fde9
  4130b0:	and    ch,BYTE PTR fs:[ecx+0x9]
  4130b4:	or     eax,0x44b735ff
  4130b9:	aas    
  4130ba:	add    BYTE PTR [eax],al
  4130bc:	mov    cl,0xfb
  4130be:	jmp    edi
  4130c0:	jmp    0x413135
  4130c2:	or     BYTE PTR [eax+0x21],dh
  4130c5:	imul   eax,DWORD PTR [ecx+0x18],0x18000064
  4130cc:	mov    esi,fs
  4130ce:	loop   0x413075
  4130d0:	jmp    0x4130cf
  4130d2:	inc    DWORD PTR [eax]
  4130d4:	sbb    eax,0xe075fde9
  4130d9:	jecxz  0x4130a9
  4130db:	cmp    esp,DWORD PTR [edi-0x14]
  4130de:	mov    edx,0x8b550bcc
  4130e4:	push   esp
  4130e5:	nop
  4130e6:	ret    0xe2fc
  4130e9:	or     ebp,DWORD PTR [edx+0x4c]
  4130ec:	xor    al,BYTE PTR ds:0x31e8
  4130f1:	ss sbb eax,0xc8e8b6ff
  4130f7:	sti    
  4130f8:	sbb    DWORD PTR [edx+0x2],esp
  4130fb:	out    dx,eax
  4130fc:	out    0x39,eax
  4130fe:	(bad)  [eax-0x10]
  413101:	popa   
  413102:	jmp    0x4ff:0x2a10885
  413109:	pop    edx
  41310a:	push   0x5e
  41310c:	push   cs
  41310d:	mul    DWORD PTR [edx-0x2]
  413110:	add    al,0xfe
  413112:	bound  esi,QWORD PTR [ecx+ebp*1+0xa]
  413116:	jns    0x413152
  413118:	outs   dx,BYTE PTR ds:[esi]
  413119:	push   cs
  41311a:	dec    ebp
  41311b:	shr    DWORD PTR ds:0x4d8ab762,0xe0
  413122:	inc    edi
  413123:	iret   
  413124:	pop    esi
  413125:	popaw  
  413127:	mov    esp,?
  413129:	ins    DWORD PTR es:[edi],dx
  41312a:	mov    dl,0xfe
  41312c:	mov    esp,0x29746165
  413131:	dec    edx
  413132:	das    
  413133:	sub    dh,BYTE PTR [ecx]
  413135:	bound  ecx,QWORD PTR ds:0xe53e00c0
  41313b:	test   DWORD PTR [ecx],0x44496031
  413141:	sbb    DWORD PTR [ecx+0x2],esp
  413144:	add    BYTE PTR [ecx],dh
  413146:	scas   eax,DWORD PTR es:[edi]
  413147:	(bad)  
  413148:	repz push cs
  41314a:	push   0x609b0002
  41314f:	in     al,dx
  413150:	dec    DWORD PTR [eax-0x5a0013a0]
  413156:	sub    eax,0xe5bc4f58
  41315b:	push   esi
  41315c:	mul    dh
  41315e:	xlat   BYTE PTR ds:[ebx]
  41315f:	mov    dl,0xfe
  413161:	fsub   DWORD PTR fs:[ecx+0x74]
  413165:	aad    0x88
  413167:	popa   
  413168:	sub    BYTE PTR [ecx],dh
  41316a:	or     ecx,ebp
  41316c:	push   cs
  41316d:	icebp  
  41316e:	fucom  st(3)
  413170:	ins    BYTE PTR es:[edi],dx
  413171:	out    0x8,al
  413173:	jmp    0xa0b37a7b
  413178:	les    ebp,FWORD PTR [esi-0x66f044a9]
  41317e:	mov    ecx,0xb99f62a7
  413183:	popa   
  413184:	xor    esp,DWORD PTR [ebp-0x70a5cb74]
  41318a:	push   esi
  41318b:	mov    eax,0xa7c98eb5
  413190:	bound  edi,QWORD PTR [edi-0x80]
  413193:	imul   edi,DWORD PTR [ebx],0x7f
  413196:	push   esi
  413197:	or     eax,0x614c46b
  41319c:	bound  eax,QWORD PTR [eax]
  41319e:	fmul   DWORD PTR [eax]
  4131a0:	xchg   ecx,eax
  4131a1:	mov    al,0xc9
  4131a3:	(bad)  
  4131a4:	call   0xf572cf0b
  4131a9:	popa   
  4131aa:	dec    edi
  4131ab:	push   esi
  4131ac:	pop    ebx
  4131ad:	or     al,0x59
  4131af:	jo     0x4131d9
  4131b1:	popa   
  4131b2:	aas    
  4131b3:	sub    BYTE PTR [ebx+0x54],0x3f
  4131b7:	push   esi
  4131b8:	int    0xee
  4131ba:	cs out dx,al
  4131bc:	lods   al,BYTE PTR ds:[esi]
  4131bd:	jmp    0x413230
  4131bf:	or     DWORD PTR [esi-0x4aa1f969],edi
  4131c5:	popa   
  4131c6:	pop    ss
  4131c7:	fsubr  st(0),st
  4131c9:	imul   ecx,DWORD PTR [ecx+ecx*8-0x74469e5b],0xffffff8c
  4131d1:	pop    ecx
  4131d2:	call   DWORD PTR [ebp+0x2]
  4131d5:	add    al,0x89
  4131d7:	xor    bh,bh
  4131d9:	ret    0x56ee
  4131dc:	cmp    edi,DWORD PTR [edi+ebx*8]
  4131df:	push   ebp
  4131e0:	jge    0x413243
  4131e2:	add    DWORD PTR gs:[eax],eax
  4131e5:	or     esp,0xba6eff15
  4131eb:	mov    edi,fs
  4131ed:	pop    esi
  4131ee:	push   eax
  4131ef:	push   edi
  4131f0:	mov    WORD PTR [ecx+esi*2+0x5f],fs
  4131f4:	(bad)  
  4131f5:	push   esi
  4131f6:	jge    0x4131e5
  4131f8:	icebp  
  4131f9:	shl    BYTE PTR [ebx+0x55],0xfd
  4131fd:	jl     0x413264
  4131ff:	pop    edi
  413200:	(bad)  
  413201:	add    BYTE PTR ds:[eax],dl
  413204:	fld    QWORD PTR [edi]
  413206:	inc    ecx
  413207:	ins    BYTE PTR es:[edi],dx
  413208:	adc    eax,0x8cba2eff
  41320d:	jecxz  0x41322d
  41320f:	adc    BYTE PTR [edi+0x69],dl
  413212:	jmp    0xa8ab40a1
  413217:	xor    dl,BYTE PTR [esi-0x4c]
  41321a:	xor    DWORD PTR [eax],ecx
  41321c:	push   edi
  41321d:	inc    BYTE PTR [esi]
  41321f:	jle    0x41322e
  413221:	call   0xfe97a4f7
  413226:	pusha  
  413227:	scas   al,BYTE PTR es:[edi]
  413228:	xor    eax,0x84d1eef6
  41322d:	test   BYTE PTR [ecx+0x39fe56e9],bh
  413233:	dec    ebp
  413234:	imul   BYTE PTR [ecx+0x28]
  413237:	sub    eax,0x89b1b456
  41323c:	push   ebx
  41323d:	inc    dh
  41323f:	dec    DWORD PTR [eax+ebp*8]
  413242:	icebp  
  413243:	repnz push ebx
  413245:	(bad)  
  413246:	pusha  
  413247:	scas   eax,DWORD PTR es:[edi]
  413248:	cmp    dh,dh
  41324a:	scas   al,BYTE PTR es:[edi]
  41324b:	xchg   ecx,eax
  41324c:	xchg   DWORD PTR [ecx+ebx*4-0x1601ac97],edi
  413253:	out    0xdf,al
  413255:	adc    BYTE PTR [esi+eax*4+0x5b],0xfe
  41325a:	mov    ?,WORD PTR [edx]
  41325c:	frstor [ecx+0x0]
  41325f:	pop    ebx
  413260:	jae    0x413248
  413262:	neg    DWORD PTR [edi-0x17]
  413265:	(bad)  
  413266:	jae    0x413268
  413268:	inc    ecx
  413269:	gs (bad) 
  41326b:	dec    DWORD PTR [edi-0x56]
  41326e:	std    
  41326f:	jne    0x413239
  413271:	loopne 0x4132e4
  413273:	cmp    DWORD PTR [edi-0x17],ebx
  413276:	std    
  413277:	mov    ch,0x58
  413279:	mov    cl,0xfd
  41327b:	(bad)  
  41327c:	(bad)  
  41327d:	cmp    cl,BYTE PTR [esi]
  41327f:	call   0x4021db
  413284:	pop    edi
  413285:	jnp    0x413271
  413287:	neg    DWORD PTR [edi-0x17]
  41328a:	std    
  41328b:	jne    0x4132f5
  41328d:	loopne 0x413246
  41328f:	cmp    DWORD PTR [edi-0x17],ecx
  413292:	std    
  413293:	mov    ch,0x20
  413295:	mov    cl,0xfd
  413297:	call   FWORD PTR [edi]
  413299:	cmp    ecx,DWORD PTR [esi]
  41329b:	call   0x402193
  4132a0:	das    
  4132a1:	jnp    0x41327d
  4132a3:	neg    DWORD PTR [edi-0x4c]
  4132a6:	std    
  4132a7:	mov    ch,0x24
  4132a9:	mov    cl,0xfd
  4132ab:	call   FWORD PTR [edi+0x3e]
  4132ae:	push   cs
  4132af:	call   0x402897
  4132b4:	pop    edi
  4132b5:	jb     0x413295
  4132b7:	neg    DWORD PTR [edi-0x4c]
  4132ba:	std    
  4132bb:	jne    0x4132e5
  4132bd:	loopne 0x413246
  4132bf:	cmp    edi,ebp
  4132c1:	mov    bl,0x81
  4132c3:	mov    ebp,0xfffdbbb8
  4132c8:	or     BYTE PTR [edi+ebx*1],bh
  4132cb:	push   0xef081900
  4132d0:	mov    esi,0xe80e31cf
  4132d5:	stc    
  4132d6:	hlt    
  4132d7:	(bad)  
  4132d8:	push   DWORD PTR [ecx]
  4132da:	jnp    0x413274
  4132dc:	iret   
  4132dd:	out    0x82,al
  4132df:	pop    esi
  4132e0:	(bad)  
  4132e1:	pushf  
  4132e2:	jne    0x41333a
  4132e4:	(bad)  
  4132e5:	(bad)  
  4132e7:	fmul   DWORD PTR [edi]
  4132e9:	leave  
  4132ea:	mov    ds,WORD PTR [ebx]
  4132ec:	dec    esi
  4132ee:	loop   0x4132c8
  4132f0:	shufps xmm6,XMMWORD PTR [ebx+edi*1-0xa],0xbe
  4132f6:	mov    dl,0x5e
  4132f8:	je     0x413323
  4132fa:	retf   0xfe2b
  4132fd:	scas   al,BYTE PTR es:[edi]
  4132fe:	ret    0xb45e
  413301:	mov    DWORD PTR [edx],edx
  413303:	pop    edi
  413304:	dec    BYTE PTR [ecx-0x6900e1af]
  41330a:	sbb    bl,BYTE PTR [ecx+0x5f2286ef]
  413310:	out    0x4c,eax
  413312:	outs   dx,BYTE PTR ds:[esi]
  413313:	pop    ebp
  413314:	(bad)  
  413315:	jle    0x4132d3
  413317:	outs   dx,DWORD PTR ds:[esi]
  413318:	div    BYTE PTR [esi-0x6]
  41331b:	imul   ebx,DWORD PTR [ecx],0x2d
  41331e:	add    ebx,DWORD PTR [edi-0x2]
  413321:	pushf  
  413322:	stc    
  413323:	push   esi
  413324:	(bad)  
  413325:	pop    esi
  413326:	stc    
  413327:	push   cs
  413328:	cmp    al,0x56
  41332a:	pop    edx
  41332b:	pop    ebp
  41332c:	mov    ah,0x55
  41332e:	pop    edx
  41332f:	pop    ebp
  413330:	inc    BYTE PTR [eax]
  413332:	pop    ecx
  413333:	gs push ds
  413335:	(bad)  
  413336:	xor    dl,BYTE PTR ds:[edi+0x5d3a3edf]
  41333d:	out    0x28,eax
  41333f:	clc    
  413340:	pop    esi
  413341:	(bad)  
  413342:	es (bad) 
  413344:	neg    BYTE PTR ss:[esi]
  413347:	xchg   esp,eax
  413348:	push   0xffffffed
  41334a:	pop    edx
  41334b:	fwait
  41334c:	pop    ebp
  41334d:	(bad)  
  41334e:	je     0x4132e8
  413350:	imul   edi,ecx,0x4
  413353:	or     ah,BYTE PTR [esi-0x632300a2]
  413359:	imul   ebp,DWORD PTR [eax],0x21
  41335c:	jmp    0xdc892b64
  413361:	add    edi,DWORD PTR [esi+edi*2-0x6c]
  413365:	xor    dl,0x55
  413368:	adc    al,BYTE PTR [ebx+ecx*2]
  41336b:	les    esi,FWORD PTR [ebp-0x28]
  41336e:	ss popa 
  413370:	call   0x6f93f991
  413375:	enter  0x52ba,0xd3
  413379:	or     ecx,DWORD PTR [ecx+0x78]
  41337c:	mov    edi,0x1353aec4
  413381:	lahf   
  413382:	out    dx,al
  413383:	(bad)  
  413384:	call   0x3d95f2f4
  413389:	pop    esi
  41338a:	xchg   edi,eax
  41338b:	fsubr  st(0),st
  41338d:	jmp    0x413330
  41338f:	loopne 0x413338
  413391:	add    ebx,DWORD PTR [ecx]
  413393:	pop    es
  413394:	jmp    0x61f2339c
  413399:	imul   esp,DWORD PTR [eax+0x77],0x52
  41339d:	adc    eax,0x93526ad8
  4133a2:	or     ebx,DWORD PTR [ecx-0xa]
  4133a5:	mov    edi,0x2a405f5e
  4133aa:	pop    es
  4133ab:	xor    DWORD PTR [ecx+eiz*2-0x13b24c91],edi
  4133b2:	mov    ah,0xdf
  4133b4:	fsubp  st(0),st
  4133b6:	jmp    0xc9485a7
  4133bb:	dec    ecx
  4133bc:	pushf  
  4133bd:	adc    BYTE PTR [ebp+0x2f],bl
  4133c0:	and    BYTE PTR [ebx],0x60
  4133c3:	mov    ebx,0x71cc2a1b
  4133c8:	or     DWORD PTR [edx+0x1f],esi
  4133cb:	outs   dx,BYTE PTR ds:[esi]
  4133cc:	sar    edi,0x27
  4133cf:	xor    eax,0xdee93e89
  4133d4:	int3   
  4133d5:	addr16 aad 0x8
  4133d8:	leave  
  4133d9:	push   DWORD PTR ds:0xe9263885
  4133df:	xor    bh,dh
  4133e1:	mov    edi,0xe7bbe415
  4133e6:	iret   
  4133e7:	not    DWORD PTR [edx-0x2]
  4133ea:	sbb    ebp,eax
  4133ec:	push   ecx
  4133ed:	inc    BYTE PTR [esi+0x334e9af]
  4133f3:	repnz push ecx
  4133f5:	dec    esi
  4133f6:	data16 out 0x9,al
  4133f9:	call   0x530a3419
  4133fe:	inc    BYTE PTR [ecx+0x48]
  413401:	push   cs
  413402:	dec    DWORD PTR [esi+0x18]
  413405:	or     DWORD PTR [esi+0x69],eax
  413408:	aas    
  413409:	or     DWORD PTR [ebp+0x43],esi
  41340c:	outs   dx,DWORD PTR ds:[esi]
  41340d:	dec    ebp
  41340e:	xor    ch,BYTE PTR [ecx]
  413410:	stos   BYTE PTR es:[edi],al
  413411:	push   edx
  413412:	(bad)  
  413413:	cs in  al,0x57
  413416:	lods   eax,DWORD PTR ds:[esi]
  413417:	loope  0x41344e
  413419:	fdivr  QWORD PTR [edx-0x1b2a1e2]
  41341f:	pushf  
  413420:	cmp    ah,BYTE PTR [ecx-0x6a]
  413423:	rol    DWORD PTR ds:0xeba75e53,1
  413429:	inc    edi
  41342a:	add    ebp,ecx
  41342c:	lahf   
  41342d:	jle    0x41341a
  41342f:	push   0xfffffff9
  413431:	dec    ebp
  413432:	imul   ebp,ecx,0x5cfec258
  413438:	sub    eax,0xd4213861
  41343d:	push   edx
  41343e:	mov    BYTE PTR [ecx+edx*4],ch
  413441:	loop   0x413442
  413443:	inc    eax
  413444:	adc    esp,ebx
  413446:	inc    eax
  413447:	add    BYTE PTR [eax],cl
  413449:	gs inc eax
  41344b:	push   0x49
  41344d:	add    eax,0x448735ff
  413452:	aas    
  413453:	add    al,dh
  413455:	lods   eax,DWORD PTR ds:[esi]
  413456:	cmp    edi,edi
  413458:	xlat   BYTE PTR ds:[ebx]
  413459:	add    eax,eax
  41345b:	je     0x41348e
  41345d:	xchg   ebp,eax
  41345e:	data16 add BYTE PTR [eax],al
  413461:	fcomp  st(5)
  413463:	mov    esp,0x3f634b68
  413468:	add    BYTE PTR [eax],bh
  41346a:	scas   al,BYTE PTR es:[edi]
  41346b:	jae    0x413475
  41346d:	ror    bl,0x61
  413470:	inc    DWORD PTR [edi-0x1c]
  413473:	enter  0x573a,0xad
  413477:	data16 add al,cl
  41347a:	fnstsw WORD PTR [eax+ebp*2+0x3f62db]
  413481:	jo     0x4134e5
  413483:	push   0x73ad9841
  413488:	or     BYTE PTR [eax],al
  41348a:	mov    esp,0xad57ff61
  41348f:	jae    0x41348d
  413491:	inc    edi
  413492:	aaa    
  413493:	push   es
  413494:	call   0x4021c7
  413499:	inc    ecx
  41349a:	retf   0x2
  41349d:	mov    ebp,0x1c83ea81
  4134a2:	mov    al,0x54
  4134a4:	push   edi
  4134a5:	mov    dl,0xc
  4134a7:	push   0x50
  4134a9:	aaa    
  4134aa:	aaa    
  4134ab:	push   es
  4134ac:	call   0x4029d1
  4134b1:	rol    DWORD PTR [esi-0x6],1
  4134b4:	mov    edi,DWORD PTR [ebp+0x49]
  4134b7:	inc    esi
  4134b8:	inc    ecx
  4134b9:	dec    eax
  4134ba:	jg     0x4134f7
  4134bc:	inc    edi
  4134bd:	add    BYTE PTR [esi-0x2],al
  4134c0:	jg     0x4134f3
  4134c2:	test   DWORD PTR [ebx],0xca6c0074
  4134c8:	test   DWORD PTR [ecx+0x70],ebp
  4134cb:	bound  esi,QWORD PTR [ecx+0x4080ce7]
  4134d1:	add    BYTE PTR [edx],bh
  4134d3:	mov    ds:0x4a5f1ecf,al
  4134d8:	sbb    al,0x44
  4134da:	(bad)  
  4134db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134dc:	mov    bl,0x67
  4134de:	xor    DWORD PTR [edx+0x69],esp
  4134e1:	mov    ebp,0x40ede659
  4134e6:	xor    DWORD PTR [edx],edx
  4134e8:	pop    ebx
  4134e9:	je     0x413514
  4134eb:	jp     0x4134ad
  4134ed:	(bad)  
  4134ee:	(bad)  
  4134ef:	into   
  4134f0:	imul   ecx,DWORD PTR [ebp+0xb],0xffffffd7
  4134f4:	pop    edx
  4134f5:	jmp    0x2d31:0x3d842830
  4134fc:	pop    esp
  4134fd:	inc    ebp
  4134fe:	mov    ch,0xf2
  413500:	inc    ebx
  413501:	mov    eax,0xfe5ab6ae
  413506:	mov    ds:0x24071bcf,eax
  41350b:	mov    ebx,DWORD PTR [edx+0x74]
  41350e:	xchg   ebp,eax
  41350f:	push   cs
  413510:	rol    DWORD PTR [edi],1
  413512:	cdq    
  413513:	mov    edx,DWORD PTR [edx]
  413515:	inc    DWORD PTR [esi+0x73c8b87e]
  41351b:	pop    ebp
  41351c:	add    dl,BYTE PTR [ebp-0x56]
  41351f:	std    
  413520:	xchg   bl,al
  413522:	ins    DWORD PTR es:[edi],dx
  413523:	(bad)  
  413524:	mov    cl,0x69
  413526:	xor    DWORD PTR [ebx+esi*4+0x59e400fe],ecx
  41352d:	push   0x49
  41352f:	push   ds
  413530:	dec    edi
  413531:	pop    ecx
  413532:	mov    ah,dh
  413534:	push   ebp
  413535:	lea    esi,[edx+esi*8]
  413538:	test   eax,0x8abffc3
  41353d:	and    al,0xc3
  41353f:	out    dx,al
  413540:	leave  
  413541:	call   0x5d4aa4c9
  413546:	ror    DWORD PTR [esi+0x1ec54271],0xb8
  41354d:	shl    dl,1
  41354f:	dec    esp
  413550:	or     ecx,ebp
  413552:	push   cs
  413553:	icebp  
  413554:	aad    0xd5
  413556:	mov    cl,0xe
  413558:	xchg   ebx,eax
  413559:	sub    DWORD PTR [ebx-0x1],ebx
  41355c:	mov    ecx,0x5e310410
  413561:	pop    esi
  413562:	jmp    0x4134fc
  413564:	jecxz  0x41358d
  413566:	add    al,0x81
  413568:	dec    esi
  413569:	adc    ecx,DWORD PTR [ecx+ecx*8]
  41356c:	inc    esi
  41356d:	or     bl,BYTE PTR [ebx-0x29]
  413570:	popa   
  413571:	cwde   
  413572:	sbb    al,0xce
  413574:	dec    esi
  413575:	add    DWORD PTR [edi+ebp*2],0x4403ae89
  41357c:	push   ebx
  41357d:	scas   al,BYTE PTR es:[edi]
  41357e:	push   edi
  41357f:	add    ecx,DWORD PTR [ecx-0x61]
  413582:	pop    edx
  413583:	scas   eax,DWORD PTR es:[edi]
  413584:	dec    esi
  413585:	push   ebp
  413586:	push   ebp
  413587:	aam    0x11
  413589:	out    0xd0,al
  41358b:	fisttp DWORD PTR [esi-0x45]
  41358e:	push   edi
  41358f:	add    BYTE PTR [edi+0x5a6bf0d4],dl
  413595:	push   ss
  413596:	ss pop edx
  413598:	out    0xae,eax
  41359a:	pop    ds
  41359b:	inc    ebp
  41359c:	xor    cl,BYTE PTR [ecx]
  41359e:	mov    esp,0x248a8a8e
  4135a3:	push   edi
  4135a4:	fmul   DWORD PTR [eax]
  4135a6:	xor    DWORD PTR [ebp+0x6be0d467],0x6c
  4135ad:	pop    ss
  4135ae:	push   es
  4135af:	pop    edx
  4135b0:	test   eax,0x85eafcc4
  4135b5:	jecxz  0x4135b6
  4135b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135b8:	xor    cl,BYTE PTR [esi+0x74]
  4135bb:	loope  0x413587
  4135bd:	mov    ebx,0x4ed8e6df
  4135c2:	je     0x4135a1
  4135c4:	mov    ch,dl
  4135c6:	pop    es
  4135c7:	ror    DWORD PTR [edx+0x6aceff14],0x48
  4135ce:	add    ebp,ecx
  4135d0:	mov    DWORD PTR [edx+0x2e716aeb],0x1f6b655
  4135da:	call   0xfe8f5103
  4135df:	bnd jb 0x4135b7
  4135e2:	add    al,0x3f
  4135e4:	jp     0x41362e
  4135e6:	pop    es
  4135e7:	jmp    0x3a30fa9b
  4135ec:	js     0x4135c3
  4135ee:	or     edx,DWORD PTR [ecx+0x7eff0c80]
  4135f4:	add    BYTE PTR [ecx+ecx*2],bh
  4135f7:	push   cs
  4135f8:	ins    DWORD PTR es:[edi],dx
  4135f9:	xor    eax,0x59e90008
  4135fe:	aad    0xfb
  413600:	push   ecx
  413601:	ja     0x413613
  413603:	call   FWORD PTR [esi-0x46]
  413606:	(bad)  
  413607:	jmp    0x41365f
  413609:	jbe    0x41365c
  41360b:	(bad)  
  41360c:	aam    0x16
  41360e:	dec    edi
  41360f:	je     0x413652
  413611:	add    eax,0xe83e38ce
  413616:	xor    BYTE PTR [ebp+eax*2+0x1a],0x9e
  41361b:	(bad)  
  41361c:	call   0x92851753
  413621:	jae    0x413670
  413623:	push   esp
  413624:	adc    esi,ecx
  413626:	and    al,0x0
  413628:	jmp    0xe4b57f62
  41362d:	retf   
  41362e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41362f:	(bad)  
  413630:	dec    DWORD PTR [eax+0x9]
  413633:	mov    esi,eax
  413635:	mov    al,ds:0x5841698d
  41363a:	loope  0x41361a
  41363c:	and    ecx,DWORD PTR [eax+0x9]
  41363f:	add    esi,eax
  413641:	sar    DWORD PTR [esi],0xe6
  413644:	push   0x3f5e5c
  413649:	data16 fnstsw WORD PTR [esi+0x25]
  41364d:	or     BYTE PTR [ecx],cl
  41364f:	or     eax,eax
  413651:	push   ebp
  413652:	dec    esp
  413653:	out    0x80,eax
  413655:	sbb    BYTE PTR [ecx],cl
  413657:	add    BYTE PTR [edx-0x1351800],cl
  41365d:	call   FWORD PTR [eax]
  41365f:	xchg   ebx,eax
  413660:	std    
  413661:	jne    0x413603
  413663:	loopne 0x41361b
  413665:	and    ebx,eax
  413667:	or     BYTE PTR [ebx],cl
  413669:	rol    BYTE PTR [ebp+eiz*2-0x79],0x45
  41366e:	mov    ah,0xb1
  413670:	jae    0x41365a
  413672:	rcr    cl,0x46
  413675:	dec    DWORD PTR [edi+0x7f]
  413678:	inc    ebx
  413679:	loopne 0x4136ba
  41367b:	cmp    esp,edx
  41367d:	inc    ebp
  41367f:	call   0xb1c2b06a
  413684:	std    
  413685:	or     ebx,DWORD PTR [eax+0x3c]
  413688:	cmp    ecx,edx
  41368a:	ins    DWORD PTR es:[edi],dx
  41368b:	lods   al,BYTE PTR ds:[esi]
  41368c:	push   0xe28afd00
  413691:	push   eax
  413692:	out    dx,eax
  413693:	cmp    bl,dh
  413695:	call   0x3e99d7
  41369a:	xchg   ebx,eax
  41369b:	enter  0x2672,0x70
  41369f:	pop    es
  4136a0:	add    bh,ch
  4136a2:	push   cs
  4136a3:	mov    cl,0x73
  4136a5:	or     BYTE PTR [eax-0x68],al
  4136a8:	xor    edi,edi
  4136aa:	xor    ebx,esi
  4136ac:	push   edi
  4136ad:	je     0x4136f8
  4136af:	sti    
  4136b0:	int    0x7
  4136b2:	dec    ecx
  4136b3:	mov    ebx,0x4b4eff0d
  4136b8:	int3   
  4136b9:	jecxz  0x413701
  4136bb:	int    0x62
  4136bd:	inc    BYTE PTR [eax]
  4136bf:	les    ebp,FWORD PTR [ecx+0x6a]
  4136c2:	ins    BYTE PTR es:[edi],dx
  4136c3:	cld    
  4136c4:	bound  edx,QWORD PTR [esi-0x2]
  4136c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136c8:	inc    edx
  4136c9:	imul   edi,DWORD PTR [ebp+0x69],0x33
  4136cd:	push   esi
  4136ce:	pop    ecx
  4136cf:	jns    0x4136bb
  4136d1:	repz jg 0x41372b
  4136d4:	bound  eax,QWORD PTR ds:0x568b7685
  4136da:	(bad)  
  4136db:	cdq    
  4136dc:	pusha  
  4136dd:	add    ch,bh
  4136df:	mov    edi,0x907d09a
  4136e4:	dec    ebp
  4136e5:	ud0    ebp,esi
  4136e8:	push   0xffffffd0
  4136ea:	sti    
  4136eb:	out    0xec,al
  4136ed:	addr16 (bad) 
  4136ef:	fs push 0x6a
  4136f2:	cmp    al,0x1c
  4136f4:	adc    DWORD PTR [esi-0x2],0x44
  4136f8:	jle    0x413765
  4136fa:	dec    ebp
  4136fb:	or     ebx,edx
  4136fd:	push   esi
  4136fe:	mov    WORD PTR [edx+edx*8-0x4d],?
  413702:	out    0x34,eax
  413704:	and    al,0x57
  413706:	(bad)  
  413707:	call   0x269:0x73c8b461
  41370e:	push   ebp
  41370f:	stos   BYTE PTR es:[edi],al
  413710:	or     eax,0xd48dc383
  413715:	sar    bl,0xe1
  413718:	or     dl,cl
  41371a:	or     eax,DWORD PTR [esi-0x2517f574]
  413720:	add    eax,0x2a000004
  413725:	or     DWORD PTR [ecx],ebp
  413727:	pop    es
  413728:	mov    ah,0x20
  41372a:	call   0xe9206832
  41372f:	jmp    0x41376f
  413731:	loopne 0x4136da
  413733:	add    edx,DWORD PTR [esi-0x2b]
  413736:	hlt    
  413737:	push   esi
  413738:	lds    eax,FWORD PTR [eax]
  41373a:	adc    DWORD PTR [edi],ebx
  41373c:	or     cl,BYTE PTR [ebp+esi*8-0x74]
  413740:	cmc    
  413741:	push   eax
  413742:	add    BYTE PTR [ebx],0xc9
  413745:	and    eax,0x4c2ec552
  41374a:	push   ebx
  41374b:	or     BYTE PTR [esi],ah
  41374d:	aad    0xe0
  41374f:	imul   eax,DWORD PTR [eax+0xe],0xffffffce
  413753:	push   esi
  413754:	test   eax,0x7588bcc4
  413759:	gs sbb ah,ch
  41375c:	pop    edx
  41375d:	fisub  WORD PTR [edi]
  41375f:	add    al,0xfe
  413761:	aam    0xdc
  413763:	push   esi
  413764:	jge    0x413767
  413766:	xchg   ecx,eax
  413767:	pop    edx
  413768:	sub    BYTE PTR [edx-0x63],cl
  41376b:	mov    WORD PTR [ebp+0x59],gs
  41376e:	add    al,BYTE PTR [ecx+ecx*2]
  413771:	push   ss
  413772:	add    al,ch
  413774:	(bad)  
  413775:	dec    ebx
  413776:	sti    
  413777:	pop    es
  413778:	into   
  413779:	aam    0xf0
  41377b:	imul   ecx,esp,0xf
  41377e:	jbe    0x4137d6
  413780:	test   eax,0xb6e97cc4
  413785:	loop   0x4137a7
  413787:	jmp    0x413789
  413789:	icebp  
  41378a:	or     BYTE PTR [esi-0x30],bl
  41378d:	cmp    cl,BYTE PTR [edx-0x25]
  413790:	or     ecx,DWORD PTR [ecx-0x68a8edc8]
  413796:	sub    BYTE PTR [ebx+0x38ccb36b],0x3
  41379d:	ss test edi,edi
  4137a0:	imul   esi,DWORD PTR [edx],0x596a0009
  4137a6:	call   DWORD PTR [ecx+ecx*4-0xfa8bb5]
  4137ae:	aam    0xef
  4137b0:	add    DWORD PTR [edi-0x3e],esi
  4137b3:	dec    BYTE PTR [esi]
  4137b5:	sub    ecx,DWORD PTR [ecx+0x73]
  4137b8:	xchg   edi,eax
  4137b9:	add    eax,0x3293e3dd
  4137be:	jl     0x413804
  4137c0:	or     eax,0xf9744b82
  4137c5:	retf   
  4137c6:	push   es
  4137c7:	popa   
  4137c8:	out    0x84,al
  4137ca:	(bad)  
  4137cb:	mov    edi,0x7c86ea55
  4137d0:	shl    DWORD PTR ds:0xfe6a52d5,1
  4137d6:	push   ebp
  4137d7:	(bad)  
  4137d8:	cmp    al,0xf6
  4137da:	xchg   BYTE PTR [ecx+edi*4+0x2d],bh
  4137de:	aad    0x46
  4137e0:	inc    ecx
  4137e1:	xor    eax,0x5c6fef09
  4137e6:	aad    0xf
  4137e8:	xchg   ecx,eax
  4137e9:	loope  0x413800
  4137eb:	call   FWORD PTR [esi-0x82a8400]
  4137f1:	xchg   esi,eax
  4137f2:	out    dx,al
  4137f3:	stc    
  4137f4:	out    0x2,eax
  4137f6:	inc    ecx
  4137f7:	dec    edx
  4137f8:	inc    BYTE PTR [esi-0xb01aa02]
  4137fe:	ret    0x5f61
  413801:	mov    ebp,0xf4fe4b65
  413806:	push   esi
  413807:	dec    ebx
  413808:	je     0x413863
  41380a:	add    al,0xd5
  41380c:	sqrtps xmm0,XMMWORD PTR [edi+0x15]
  413810:	call   DWORD PTR [esi+0x4]
  413813:	aad    0xeb
  413815:	dec    esi
  413816:	data16 stc 
  413818:	out    0x0,eax
  41381a:	(bad)  
  41381c:	(bad)  
  41381d:	inc    DWORD PTR [edi+0x3a]
  413820:	out    0xff,al
  413822:	mov    ebp,0x7c3ce655
  413827:	mov    ah,0xfd
  413829:	dec    ebp
  41382b:	lods   eax,DWORD PTR ds:[esi]
  41382c:	out    0x21,al
  41382e:	jg     0x4137e4
  413830:	std    
  413831:	(bad)  
  413832:	mov    ebp,0x7f19e6b9
  413837:	mov    ah,0xfd
  413839:	dec    ebp
  41383b:	mov    ch,0xe6
  41383d:	adc    DWORD PTR [edi-0x4c],edi
  413840:	std    
  413841:	(bad)  
  413842:	mov    ebp,0x7f09e6e1
  413847:	mov    ah,0xfd
  413849:	dec    DWORD PTR [ebp+0x3f01e6b5]
  41384f:	fdivp  st(5),st
  413851:	inc    DWORD PTR [eax]
  413853:	jge    0x413836
  413855:	out    0x25,al
  413857:	sub    ecx,DWORD PTR ds:0x10dac900
  41385d:	add    BYTE PTR [ebp-0x7d],dl
  413860:	mov    al,0x7f
  413862:	(bad)  
  413863:	lock aad 0xfd
  413866:	call   DWORD PTR [ebp-0x79]
  413869:	cli    
  41386a:	push   eax
  41386b:	xchg   edi,eax
  41386c:	push   edi
  41386d:	or     bh,bh
  41386f:	cmp    eax,0xeb0fe815
  413874:	or     al,0x0
  413876:	or     ecx,DWORD PTR [eax-0x275a7af3]
  41387c:	or     al,0x0
  41387e:	(bad)  
  41387f:	or     eax,0xc8fffee5
  413884:	or     al,0xc7
  413886:	inc    ebp
  413887:	cmp    al,0xdd
  413889:	add    eax,0xfe329800
  41388e:	imul   ebx,DWORD PTR [eax+0x31ec838f],0x1fe53e7
  413898:	dec    esp
  413899:	add    cl,BYTE PTR [ebp-0x734cfa0c]
  41389f:	lods   al,BYTE PTR ds:[esi]
  4138a0:	dec    BYTE PTR [ebx-0x2]
  4138a3:	jle    0x413847
  4138a5:	push   ebx
  4138a6:	je     0x413921
  4138a8:	test   ebp,0x20ec59fb
  4138ae:	add    BYTE PTR [ecx],dh
  4138b0:	cmp    eax,DWORD PTR [edx+0x73]
  4138b3:	xor    ecx,DWORD PTR [ebx]
  4138b5:	fld    QWORD PTR [edx+0x4a469400]
  4138bb:	dec    BYTE PTR [esi+0x31]
  4138be:	into   
  4138bf:	add    al,0x46
  4138c1:	ins    DWORD PTR es:[edi],dx
  4138c2:	pop    edx
  4138c3:	jmp    0x373e:0xe77dad73
  4138ca:	push   edx
  4138cb:	dec    edi
  4138cc:	mov    esp,0x26f657b4
  4138d1:	addr16 mov bl,0xfe
  4138d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138d5:	cs push ecx
  4138d7:	je     0x413902
  4138d9:	dec    edx
  4138da:	cmp    BYTE PTR [eax],0xe
  4138dd:	dec    edi
  4138de:	(bad)  
  4138df:	mov    edi,0x847b437d
  4138e4:	add    DWORD PTR [edi+0x3789fe52],eax
  4138ea:	fld    QWORD PTR [eax+0x31]
  4138ed:	outs   dx,DWORD PTR ds:[esi]
  4138ee:	cwde   
  4138ef:	out    dx,eax
  4138f0:	fisub  WORD PTR [esi+0x5400e752]
  4138f6:	add    al,BYTE PTR [eax]
  4138f8:	sub    dh,BYTE PTR [edx-0x29]
  4138fb:	or     eax,0xf65404ce
  413900:	mov    dh,0x52
  413903:	je     0x413926
  413905:	mov    dh,BYTE PTR [edi]
  413907:	sti    
  413908:	mov    dh,0xb6
  41390a:	push   edx
  41390b:	mov    ah,0xa1
  41390d:	or     BYTE PTR [esi+0x53],bl
  413910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413911:	xor    BYTE PTR [eax+0x55479e19],ch
  413917:	leave  
  413918:	sahf   
  413919:	xor    edx,eax
  41391b:	push   edx
  41391c:	add    BYTE PTR [edi-0x7526bab9],cl
  413922:	xor    BYTE PTR [ebp+eiz*1+0x46200931],bl
  413929:	sub    cl,BYTE PTR [ecx]
  41392b:	xchg   esp,eax
  41392c:	jle    0x413988
  41392e:	mov    ebp,DWORD PTR [eax+edx*2]
  413931:	fmul   DWORD PTR [eax]
  413933:	xchg   ebx,eax
  413934:	mov    dh,0x5f
  413936:	mov    ebp,0xfc005be0
  41393b:	or     eax,0x4cdb953
  413940:	push   ebx
  413941:	mov    ebp,0xc8409110
  413946:	leave  
  413947:	call   0xa0c9369e
  41394c:	les    ebp,FWORD PTR [esi]
  41394e:	das    
  41394f:	scas   al,BYTE PTR es:[edi]
  413950:	push   eax
  413951:	daa    
  413952:	inc    edi
  413953:	fstp   st(0)
  413955:	ss mov cl,0xa3
  413958:	fnsave [ecx+0x9]
  41395b:	inc    ecx
  41395c:	push   es
  41395d:	xor    DWORD PTR [ecx],ecx
  41395f:	imul   ebx,DWORD PTR [ebx-0x3e],0xff52bd44
  413966:	mov    esp,0xb402dbe0
  41396b:	daa    
  41396c:	add    al,0xee
  41396e:	cld    
  41396f:	gs mov ebx,0x5d910971
  413975:	fadd   QWORD PTR [esi-0x6b]
  413978:	push   edx
  413979:	pop    ebp
  41397a:	adc    DWORD PTR [ecx],eax
  41397c:	pop    eax
  41397d:	pop    eax
  41397e:	enter  0xdbe8,0x0
  413982:	xor    BYTE PTR [ecx],cl
  413984:	jmp    0xffa3100c
  413989:	jbe    0x4139ee
  41398b:	inc    edi
  41398c:	(bad)  
  41398d:	hlt    
  41398e:	inc    BYTE PTR [esi+0x74]
  413991:	icebp  
  413992:	or     al,BYTE PTR [esi]
  413994:	xor    ebx,DWORD PTR [esi+0x3]
  413997:	push   ecx
  413998:	shr    ebp,0x32
  41399b:	fmul   QWORD PTR [edx-0x4b548c3]
  4139a1:	shl    DWORD PTR [edx],cl
  4139a3:	mov    bl,0x53
  4139a5:	ds pop ecx
  4139a7:	push   cs
  4139a8:	call   0xfe8755fa
  4139ad:	pusha  
  4139ae:	jns    0x4139f2
  4139b0:	addr16 mov ecx,0x1dffc987
  4139b6:	jns    0x4139c6
  4139b8:	call   0xfe88404a
  4139bd:	push   cs
  4139be:	imul   eax,DWORD PTR [edx-0x2],0xe2e4a7c
  4139c5:	mov    edx,0x2bc846e3
  4139ca:	or     DWORD PTR cs:[ebp+0x62],edx
  4139ce:	mov    cs,WORD PTR [ebx-0x21141a3d]
  4139d4:	imul   ebp,ecx,0x5cfedcfc
  4139da:	adc    eax,0x601bb02e
  4139df:	inc    edi
  4139e0:	mov    BYTE PTR [ecx+eiz*2],ch
  4139e3:	xchg   ebx,eax
  4139e4:	xor    al,0x2a
  4139e6:	add    BYTE PTR [ebp+0x2661ffc8],bh
  4139ec:	into   
  4139ed:	inc    edi
  4139ee:	sub    BYTE PTR ds:0xfee93e89,dh
  4139f4:	int3   
  4139f5:	addr16 inc ecx
  4139f7:	cld    
  4139f8:	enter  0x3dff,0x75
  4139fc:	push   esp
  4139fd:	and    cl,ch
  4139ff:	xor    dl,BYTE PTR [edx]
  413a01:	rol    BYTE PTR [eax],0xc4
  413a04:	cmp    BYTE PTR [eax+ebp*8-0x16],dl
  413a08:	sbb    bh,bh
  413a0a:	call   FWORD PTR [eax]
  413a0c:	gs (bad) 
  413a0e:	jmp    FWORD PTR [edi]
  413a10:	fwait
  413a11:	pop    di
  413a13:	or     DWORD PTR [edx-0x2],0x4f
  413a17:	call   FWORD PTR [ebp+0x6]
  413a1a:	call   0x3eb54d
  413a1f:	lock pop ds
  413a21:	xor    eax,0xffe3efff
  413a26:	inc    ebp
  413a27:	or     BYTE PTR [ebx],bl
  413a29:	add    BYTE PTR [ebp+0x42],dh
  413a2c:	push   ebx
  413a2d:	cli    
  413a2e:	xor    ebx,DWORD PTR [eax]
  413a30:	xchg   edx,eax
  413a31:	std    
  413a32:	dec    DWORD PTR [edi]
  413a34:	fdiv   st,st(0)
  413a36:	scas   al,BYTE PTR es:[edi]
  413a37:	push   eax
  413a38:	adc    BYTE PTR [ebp-0x45],dh
  413a3b:	aas    
  413a3c:	pop    esi
  413a3d:	cli    
  413a3e:	jmp    DWORD PTR [ebp-0x756c19bf]
  413a44:	fdivr  st,st(5)
  413a46:	pop    edi
  413a47:	sahf   
  413a48:	add    al,cl
  413a4a:	add    al,0x0
  413a4c:	dec    eax
  413a4d:	jle    0x4139d8
  413a4f:	in     al,dx
  413a50:	fwait
  413a51:	shl    esi,1
  413a53:	or     DWORD PTR [ebp-0x5c],0x49
  413a57:	inc    ecx
  413a58:	or     BYTE PTR [ecx],cl
  413a5a:	jne    0x413a60
  413a5c:	ror    esi,1
  413a5e:	push   es
  413a5f:	add    BYTE PTR [eax+0xc],dh
  413a62:	add    DWORD PTR [eax],eax
  413a64:	sbb    cl,ah
  413a66:	pop    es
  413a67:	xor    eax,0x4587d9bf
  413a6c:	mov    esp,0xd4f843d1
  413a71:	pop    es
  413a72:	add    BYTE PTR [eax],al
  413a74:	pop    ebp
  413a75:	dec    ebx
  413a76:	not    BYTE PTR [eax-0x41]
  413a79:	pop    ebx
  413a7a:	cli    
  413a7b:	push   DWORD PTR [ecx]
  413a7d:	and    eax,0x6644ff00
  413a82:	dec    edi
  413a83:	adc    al,0x94
  413a85:	test   edx,0x4e3dbfff
  413a8b:	out    0x92,eax
  413a8d:	pop    ebx
  413a8e:	add    al,BYTE PTR [eax]
  413a90:	mov    dl,0xba
  413a92:	add    esi,DWORD PTR [esi+0x3c]
  413a95:	pop    edx
  413a96:	add    al,BYTE PTR [eax]
  413a98:	mov    fs,WORD PTR [edx+ebx*8+0x2710a6a]
  413a9f:	inc    DWORD PTR [esi+edx*8]
  413aa2:	dec    edi
  413aa3:	je     0x413ade
  413aa5:	fisub  DWORD PTR [ebp+0x50037e5c]
  413aab:	je     0x413b22
  413aad:	retf   0x339b
  413ab0:	add    BYTE PTR [esi-0xd],ch
  413ab3:	cmp    ecx,eax
  413ab5:	cmp    DWORD PTR [edx],esi
  413ab7:	mov    ch,0x8a
  413ab9:	dec    ebp
  413aba:	scas   eax,DWORD PTR es:[edi]
  413abb:	inc    esi
  413abc:	sti    
  413abd:	retf   
  413abe:	xor    esp,ebx
  413ac0:	push   ebp
  413ac1:	dec    esi
  413ac2:	popf   
  413ac3:	cli    
  413ac4:	out    0x74,eax
  413ac6:	or     DWORD PTR [edi-0x2],0x674e6da8
  413acd:	rol    DWORD PTR [esi-0x42d0003f],0xfa
  413ad4:	out    0x9f,eax
  413ad6:	sub    ecx,DWORD PTR [esi-0x2]
  413ad9:	push   ds
  413ada:	fisttp QWORD PTR [edi-0x2]
  413add:	pushf  
  413ade:	sub    bl,BYTE PTR [edx-0x9]
  413ae1:	inc    eax
  413ae2:	push   ebx
  413ae3:	dec    esi
  413ae4:	enter  0x35f3,0x2
  413ae8:	push   ebp
  413ae9:	stos   BYTE PTR es:[edi],al
  413aea:	push   ebp
  413aeb:	add    bl,0xf5
  413aee:	mov    DWORD PTR [ebx],0xd873866a
  413af4:	pop    es
  413af5:	(bad)  [eax]
  413af7:	test   DWORD PTR ds:0xc96f43de,edx
  413afd:	fidiv  DWORD PTR [eax-0x7d21fc18]
  413b03:	add    BYTE PTR [edi+0x5b],dh
  413b06:	retf   0xdbe8
  413b09:	nop
  413b0a:	scas   eax,DWORD PTR es:[edi]
  413b0b:	daa    
  413b0c:	add    al,0xb6
  413b0e:	mov    ebp,0xe5b75be0
  413b13:	ins    DWORD PTR es:[edi],dx
  413b14:	dec    edi
  413b15:	add    BYTE PTR [edi+0x254f64bd],ah
  413b1b:	adc    DWORD PTR [ecx-0x6f],edx
  413b1e:	popa   
  413b1f:	inc    esp
  413b20:	push   ebp
  413b21:	cmp    eax,0xb8e90c70
  413b26:	mov    ebx,0x62486934
  413b2b:	ficom  DWORD PTR [ebp+0x4114fd4e]
  413b31:	cld    
  413b32:	sub    DWORD PTR [ebp+ebp*1-0x5],eax
  413b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b37:	mov    ebp,0x51fcaeee
  413b3c:	sub    bh,ah
  413b3e:	push   esi
  413b3f:	xchg   esp,eax
  413b40:	stos   DWORD PTR es:[edi],eax
  413b41:	push   ebx
  413b42:	inc    BYTE PTR [ebx-0x6d]
  413b45:	dec    DWORD PTR [esi-0x7f]
  413b48:	mov    edi,0x290f3f4e
  413b4d:	push   DWORD PTR [edx+0x3103e7df]
  413b53:	inc    edx
  413b54:	jae    0x413ba5
  413b56:	mov    bh,0xcc
  413b58:	les    esi,FWORD PTR [ecx*4-0x527229b]
  413b5f:	inc    edx
  413b60:	pop    ebx
  413b61:	dec    esp
  413b62:	push   ss
  413b63:	sub    DWORD PTR fs:[edi+0x7],ecx
  413b67:	pop    gs
  413b69:	xlat   BYTE PTR ds:[ebx]
  413b6a:	aaa    
  413b6b:	nop
  413b6c:	and    esp,DWORD PTR [eax-0x55]
  413b6f:	cmp    edi,edi
  413b71:	rcr    esi,0x43
  413b74:	je     0x413b23
  413b76:	mov    al,BYTE PTR [ebp+0x32]
  413b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b7a:	add    BYTE PTR [edi-0x6f],ch
  413b7d:	inc    esp
  413b7e:	lea    esp,[edi-0x43]
  413b81:	sti    
  413b82:	xchg   esi,eax
  413b83:	jmp    0x755639b6
  413b88:	sub    ah,BYTE PTR [edx]
  413b8a:	mov    ebp,0xf48a436f
  413b8f:	push   esi
  413b90:	xor    edi,ebx
  413b92:	jmp    0x9b0044c9
  413b97:	mov    ecx,ecx
  413b99:	(bad)  
  413b9a:	mov    ebp,0x9462ae4
  413b9f:	sub    eax,0x66290b09
  413ba4:	or     bl,ch
  413ba6:	cli    
  413ba7:	div    dh
  413ba9:	mov    edi,0xfe42ef80
  413bae:	ds loopne 0x413c24
  413bb1:	aaa    
  413bb2:	out    dx,al
  413bb3:	mov    DWORD PTR ds:0x93221e8,ebp
  413bb9:	add    BYTE PTR [edx+0x2],dh
  413bbc:	stos   BYTE PTR es:[edi],al
  413bbd:	int    0x92
  413bbf:	ins    DWORD PTR es:[edi],dx
  413bc0:	inc    edx
  413bc1:	push   esp
  413bc2:	add    DWORD PTR [edi+0x22],ecx
  413bc5:	add    cl,ch
  413bc7:	dec    ebx
  413bc8:	xor    BYTE PTR [esp+ebp*8-0x23],0x77
  413bcd:	(bad)  
  413bce:	call   0xf9cc0505
  413bd3:	stos   BYTE PTR es:[edi],al
  413bd4:	mov    ebp,0xaf6281e7
  413bd9:	inc    eax
  413bda:	jmp    0x94765c3
  413bdf:	add    BYTE PTR ds:0xe6a90b09,ch
  413be5:	or     al,0xe9
  413be7:	jno    0x413c16
  413be9:	or     DWORD PTR [eax],eax
  413beb:	add    BYTE PTR [edx+0x800c43d],al
  413bf1:	jbe    0x413c43
  413bf3:	jmp    FWORD PTR ds:0xf63fe6e5
  413bf9:	add    eax,0x60880b00
  413bfe:	jb     0x413b89
  413c00:	or     eax,0xb075fdb1
  413c05:	in     al,0x1c
  413c07:	inc    ebx
  413c08:	mov    bh,0xd3
  413c0a:	xchg   DWORD PTR [ebp-0x58],eax
  413c0d:	shl    DWORD PTR [ebx-0x1c],cl
  413c10:	aaa    
  413c11:	pop    edx
  413c12:	fsubp  st(0),st
  413c14:	cwde   
  413c15:	dec    ecx
  413c16:	std    
  413c17:	call   DWORD PTR [ebx+0x594f72c5]
  413c1d:	(bad)  {k5}
  413c22:	imul   eax,DWORD PTR [ecx-0x68],0xf7d843c4
  413c29:	sbb    edx,ecx
  413c2b:	imul   ecx,ecx,0x5
  413c2e:	pop    DWORD PTR [ebp+0x1c]
  413c31:	ret    0xd443
  413c34:	enter  0x43c2,0xe4
  413c38:	enter  0x73d4,0xe0
  413c3c:	inc    eax
  413c3d:	ins    DWORD PTR es:[edi],dx
  413c3e:	pop    edx
  413c3f:	push   DWORD PTR [edi]
  413c41:	inc    eax
  413c42:	mov    esi,0x5d7e0074
  413c47:	(bad)  
  413c48:	inc    DWORD PTR [edi-0x6d]
  413c4b:	std    
  413c4c:	jne    0x413c8e
  413c4e:	ffree  st(1)
  413c50:	das    
  413c51:	aaa    
  413c52:	aam    0xfd
  413c54:	jne    0x413c86
  413c56:	into   
  413c57:	jae    0x413c61
  413c59:	xor    BYTE PTR [ebx],dh
  413c5b:	call   DWORD PTR cs:[edi]
  413c5e:	into   
  413c5f:	jae    0x413c45
  413c61:	not    DWORD PTR [edi-0x22]
  413c64:	push   DWORD PTR [ecx]
  413c66:	(bad)  
  413c68:	out    0x11,eax
  413c6a:	inc    eax
  413c6b:	dec    ebx
  413c6c:	(bad)  
  413c6d:	(bad)  
  413c6e:	std    
  413c6f:	arpl   di,sp
  413c71:	add    BYTE PTR [ebp+0x4b],al
  413c74:	dec    BYTE PTR [ebx+0x3a0f7c1a]
  413c7a:	js     0x413c52
  413c7c:	or     BYTE PTR [ecx-0x53f0fdd8],dh
  413c82:	inc    ebx
  413c83:	dec    ebx
  413c84:	dec    dh
  413c86:	or     al,BYTE PTR [edx]
  413c88:	add    dh,dl
  413c8a:	ror    BYTE PTR [ebx+0x74],1
  413c8d:	sub    DWORD PTR [edx-0x4049d17a],ebx
  413c93:	dec    ebx
  413c94:	je     0x413c43
  413c96:	mov    bh,0xd5
  413c98:	mul    DWORD PTR [esi-0x321805cb]
  413c9e:	pop    ss
  413c9f:	dec    ebp
  413ca0:	(bad)  
  413ca1:	xchg   esi,eax
  413ca2:	push   ebp
  413ca3:	pop    esi
  413ca4:	out    0xcc,eax
  413ca6:	and    al,0x4d
  413ca8:	inc    BYTE PTR [eax]
  413caa:	mov    ah,0x65
  413cac:	push   edx
  413cad:	dec    edi
  413cae:	mov    esi,edx
  413cb0:	or     bh,bh
  413cb2:	jbe    0x413c8f
  413cb4:	add    bl,BYTE PTR [edi+0xf]
  413cb7:	jmp    0x957243fc
  413cbc:	ja     0x413ca9
  413cbe:	pop    esi
  413cbf:	popf   
  413cc0:	(bad)  
  413cc1:	(bad)  
  413cc2:	fdivr  QWORD PTR [ecx]
  413cc4:	pop    edx
  413cc5:	bound  ecx,QWORD PTR [edi+0x17]
  413cc8:	dec    esp
  413cc9:	enter  0x5e73,0x2
  413ccd:	push   ebp
  413cce:	stos   BYTE PTR es:[edi],al
  413ccf:	push   ss
  413cd0:	dec    esp
  413cd1:	je     0x413cf8
  413cd3:	sbb    ah,BYTE PTR [ebp+esi*1+0x2e]
  413cd7:	aaa    
  413cd8:	idiv   BYTE PTR [edi+0x744b539d]
  413cde:	inc    ecx
  413cdf:	or     DWORD PTR [ecx],edi
  413ce1:	pop    esp
  413ce2:	popf   
  413ce3:	neg    ebp
  413ce5:	dec    ebx
  413ce6:	jle    0x413c99
  413ce8:	fsub   QWORD PTR [ecx+0x46]
  413ceb:	or     esi,ecx
  413ced:	shl    DWORD PTR [esi],1
  413cef:	inc    eax
  413cf0:	cmp    esi,eax
  413cf2:	inc    ax
  413cf4:	xor    edi,esp
  413cf6:	(bad)  
  413cf7:	je     0x413d08
  413cf9:	dec    ebx
  413cfa:	out    0x30,eax
  413cfc:	inc    eax
  413cfd:	push   ss
  413cfe:	fidivr WORD PTR [edi]
  413d00:	scas   eax,DWORD PTR es:[edi]
  413d01:	inc    esi
  413d02:	inc    edx
  413d03:	or     DWORD PTR [edi+edi*2],esi
  413d06:	fidiv  DWORD PTR [eax+0x7ed603e8]
  413d0c:	add    BYTE PTR [edx-0x1735b500],dl
  413d12:	dec    edx
  413d13:	cmp    eax,0xafee130d
  413d18:	mov    ch,0xe0
  413d1a:	pop    ebx
  413d1b:	(bad)  
  413d1c:	aas    
  413d1d:	ins    DWORD PTR es:[edi],dx
  413d1e:	dec    ebx
  413d1f:	push   ss
  413d20:	or     ecx,ebp
  413d22:	pop    edx
  413d23:	aam    0xb0
  413d25:	xchg   esi,eax
  413d26:	fcomip st,st(1)
  413d28:	or     BYTE PTR [esi-0x2f],dl
  413d2b:	cmp    dh,BYTE PTR [ebx+0x11054aec]
  413d31:	push   ecx
  413d32:	ins    DWORD PTR es:[edi],dx
  413d33:	ja     0x413d74
  413d35:	cmp    eax,0x453f6edc
  413d3a:	mov    cl,dh
  413d3c:	jbe    0x413cff
  413d3e:	les    ebx,FWORD PTR [esi+0x3e]
  413d41:	fwait
  413d42:	test   eax,0x36d11deb
  413d48:	xor    DWORD PTR [edx+0x4b],ebp
  413d4b:	inc    edi
  413d4c:	aas    
  413d4d:	pop    ds
  413d4e:	inc    esi
  413d4f:	or     DWORD PTR ss:[esi+edi*2-0x20cd4fb6],ebx
  413d57:	jno    0x413d62
  413d59:	add    BYTE PTR [ecx-0x16bf4c93],al
  413d5f:	imul   esi,DWORD PTR [ebp+0x7e41e60f],0x47
  413d66:	sub    BYTE PTR ds:0x7a1c1431,dh
  413d6c:	aas    
  413d6d:	or     ch,BYTE PTR [ecx-0x505cdc12]
  413d73:	add    bh,dl
  413d75:	leave  
  413d76:	(bad)  
  413d77:	mov    ebp,0x3cff1301
  413d7c:	in     eax,0x26
  413d7e:	test   BYTE PTR [esi-0x2301c095],ch
  413d84:	jo     0x413d39
  413d86:	inc    eax
  413d87:	jmp    0x967199f6
  413d8c:	jnp    0x413ddf
  413d8e:	rcr    ebp,0x32
  413d91:	aam    0x8a
  413d93:	xchg   ebp,eax
  413d94:	scas   eax,DWORD PTR es:[edi]
  413d95:	dec    edx
  413d96:	sti    
  413d97:	adc    esi,DWORD PTR ds:0x817658b3
  413d9d:	push   es
  413d9e:	call   0xfe7f798c
  413da3:	jo     0x413e16
  413da5:	inc    edx
  413da6:	addr16 adc al,0x69
  413da9:	leave  
  413daa:	inc    eax
  413dac:	call   0x7b4:0xebe940b2
  413db3:	push   ecx
  413db4:	pop    es
  413db5:	aas    
  413db6:	(bad)  
  413db7:	ds sti 
  413db9:	mov    ah,0xfb
  413dbb:	add    DWORD PTR ss:[esi],0x3e3a07e8
  413dc2:	(bad)  
  413dc3:	xor    ah,ch
  413dc5:	or     DWORD PTR [eax],eax
  413dc7:	mov    ah,0xcf
  413dc9:	xor    DWORD PTR [edx-0x5011d3],eax
  413dcf:	or     BYTE PTR [edx+0x4000743f],0xe2
  413dd6:	enter  0x2e,0x2f
  413dda:	rol    BYTE PTR [edi+0x70631c45],1
  413de0:	ins    BYTE PTR es:[edi],dx
  413de1:	leave  
  413de2:	or     DWORD PTR [eax+0x5a],ebp
  413de5:	jl     0x413e31
  413de7:	(bad)  
  413de8:	(bad)  
  413de9:	gs cmp eax,0xcfdf65e6
  413def:	std    
  413df0:	jmp    DWORD PTR [ebp-0x2f]
  413df3:	std    
  413df4:	jne    0x413df6
  413df6:	loop   0x413de6
  413df8:	cs scas eax,DWORD PTR es:[edi]
  413dfa:	iret   
  413dfb:	mov    edx,0x8b5509d4
  413e01:	pushf  
  413e02:	add    edx,0xfffffffc
  413e05:	inc    edx
  413e06:	add    eax,0x4daf5a6a
  413e0b:	push   es
  413e0c:	call   0x406155
  413e11:	push   ecx
  413e12:	jle    0x413e0e
  413e14:	push   0xffffffc8
  413e16:	popa   
  413e17:	lods   eax,DWORD PTR ds:[esi]
  413e18:	ins    BYTE PTR es:[edi],dx
  413e19:	pop    ecx
  413e1a:	add    eax,0x4a2c9268
  413e1f:	(bad)  
  413e20:	(bad)  
  413e21:	in     eax,0x90
  413e23:	inc    esi
  413e24:	inc    ecx
  413e25:	mov    cl,ah
  413e27:	pop    eax
  413e28:	xor    al,0xef
  413e2a:	iret   
  413e2b:	or     eax,eax
  413e2d:	xor    cl,BYTE PTR fs:[esi+0x68]
  413e31:	mov    BYTE PTR [ecx],cl
  413e33:	out    dx,eax
  413e34:	mov    esi,0x416ac360
  413e39:	pop    eax
  413e3a:	jns    0x413e39
  413e3c:	jne    0x413e3e
  413e3e:	push   eax
  413e3f:	loope  0x413e5b
  413e41:	pop    edx
  413e42:	(bad)  
  413e44:	out    0x25,al
  413e46:	jns    0x413e18
  413e48:	std    
  413e49:	push   0x58
  413e4b:	popa   
  413e4c:	lods   eax,DWORD PTR ds:[esi]
  413e4d:	ins    BYTE PTR es:[edi],dx
  413e4e:	xor    DWORD PTR [ecx+0x2],esi
  413e51:	push   0xffc1bba3
  413e56:	into   
  413e57:	xor    DWORD PTR [edx],eax
  413e59:	add    BYTE PTR [ecx+0x2634211a],dh
  413e5f:	xor    al,0xfb
  413e61:	mov    edi,0x67b259a5
  413e66:	xor    DWORD PTR [edx],esi
  413e68:	push   edi
  413e69:	mov    ebp,0x40d67099
  413e6e:	xor    DWORD PTR [edx],eax
  413e70:	dec    ecx
  413e71:	je     0x413e9c
  413e73:	dec    edx
  413e74:	pop    ecx
  413e75:	pop    eax
  413e76:	test   BYTE PTR [ebx+0x5a],0xf1
  413e7a:	and    DWORD PTR [ebx+0x47],edi
  413e7d:	imul   esi,DWORD PTR [ecx],0x706b90ca
  413e83:	xor    bl,dl
  413e85:	xchg   ecx,eax
  413e86:	inc    ebp
  413e87:	icebp  
  413e88:	add    edi,edi
  413e8a:	add    al,0xdb
  413e8c:	mov    edx,0x538a3140
  413e91:	xor    bh,BYTE PTR [esi+0x3dbffb8b]
  413e97:	sub    DWORD PTR [edx+0x57323167],esi
  413e9d:	mov    ebp,0x40d67019
  413ea2:	add    BYTE PTR [ecx],dh
  413ea4:	and    cl,BYTE PTR [ecx+0x74]
  413ea7:	sub    edx,ebx
  413ea9:	lea    ebx,[eax-0x72]
  413eac:	fistp  DWORD PTR [edx-0x43]
  413eaf:	inc    ecx
  413eb0:	rol    DWORD PTR [edi+0x69],cl
  413eb3:	xor    DWORD PTR [edx-0x71],ecx
  413eb6:	imul   esi,eax,0x31
  413eb9:	ficom  DWORD PTR [ecx+0x680270dd]
  413ebf:	xor    esi,DWORD PTR [edx]
  413ec1:	add    al,BYTE PTR [eax-0xec0db7]
  413ec7:	push   esi
  413ec8:	or     edx,esi
  413eca:	inc    ebx
  413ecb:	ret    0xb921
  413ece:	fild   DWORD PTR [esi+0x3c]
  413ed1:	add    eax,0x7c46d689
  413ed6:	ret    0xcc36
  413ed9:	add    eax,0x6a3136ce
  413ede:	stos   BYTE PTR es:[edi],al
  413edf:	daa    
  413ee0:	cmp    al,0x0
  413ee2:	jl     0x413f32
  413ee4:	cmp    al,0xed
  413ee6:	inc    edi
  413ee7:	popf   
  413ee8:	cmp    eax,0x3136d1e5
  413eed:	ficomp WORD PTR [ecx]
  413eef:	push   es
  413ef0:	cmp    al,0x9f
  413ef2:	inc    edx
  413ef3:	xor    cl,BYTE PTR [ecx]
  413ef5:	xor    al,0x7b
  413ef7:	or     cl,BYTE PTR [edx+0x3be75cac]
  413efd:	mov    ebp,0xe90a2ddc
  413f02:	add    ecx,ecx
  413f04:	mov    al,bh
  413f06:	inc    esi
  413f07:	add    bh,dl
  413f09:	xchg   ecx,eax
  413f0a:	imul   ebx,DWORD PTR [edi+eax*8+0x3b],0xffffff9d
  413f0f:	jns    0x413f7e
  413f11:	cmp    eax,0xd454738
  413f16:	mov    ss,ecx
  413f18:	xor    DWORD PTR cs:[esi-0x18],ebp
  413f1c:	scas   al,BYTE PTR es:[edi]
  413f1d:	cmp    esi,ecx
  413f1f:	inc    ebx
  413f20:	aaa    
  413f21:	xchg   cl,ah
  413f23:	add    al,0x31
  413f25:	or     DWORD PTR [esi-0x16f7613f],esp
  413f2b:	add    esi,DWORD PTR [ecx]
  413f2d:	inc    esp
  413f2e:	mov    ds:0xe903874f,eax
  413f33:	add    ecx,DWORD PTR [ebx]
  413f35:	or     ebx,eax
  413f37:	add    ecx,DWORD PTR [ebx]
  413f39:	or     ebx,edx
  413f3b:	add    edi,DWORD PTR [ebp+eax*8-0x7a4a4bcc]
  413f42:	(bad)  
  413f43:	cmp    al,0xee
  413f45:	cmp    bh,dh
  413f47:	cdq    
  413f48:	out    dx,eax
  413f49:	mov    ah,0xf7
  413f4b:	es pusha 
  413f4d:	aas    
  413f4e:	out    0xc1,eax
  413f50:	dec    esi
  413f51:	cmp    edi,esi
  413f53:	loop   0x413f47
  413f55:	mov    bh,0x4
  413f57:	add    bh,bh
  413f59:	cmp    edi,esi
  413f5b:	jmp    0xa888df6a
  413f60:	xor    bh,BYTE PTR [edx]
  413f62:	je     0x413f49
  413f64:	jp     0x413fd7
  413f66:	xor    ch,dh
  413f68:	outs   dx,DWORD PTR ds:[esi]
  413f69:	retf   0xb98a
  413f6c:	add    BYTE PTR [ecx+0x6fd6f385],cl
  413f72:	cmp    ecx,DWORD PTR [edi+0x3b]
  413f75:	pop    ebp
  413f76:	mov    eax,ds:0x916fce32
  413f7b:	test   BYTE PTR [ecx-0x2e01c481],bh
  413f81:	jg     0x413f6e
  413f83:	(bad)  
  413f84:	mov    dh,0xf8
  413f86:	cmp    ah,BYTE PTR [esi-0x3f]
  413f89:	dec    cl
  413f8b:	jmp    DWORD PTR [ebp-0x6109d55f]
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	cmp    esi,DWORD PTR [ecx+eiz*8+0x5a]
  413f96:	cmp    BYTE PTR [ecx],dh
  413f98:	mov    gs,WORD PTR [edi-0x6f]
  413f9b:	test   BYTE PTR [ebp+0x6afe3aff],dl
  413fa1:	mov    ecx,0xf776f62e
  413fa6:	cmp    DWORD PTR [edx+0x1a],esi
  413fa9:	jne    0x413fd8
  413fab:	imul   ebp,DWORD PTR [eax+0x4db43a32],0xfffffff7
  413fb2:	cmp    bh,dh
  413fb4:	inc    ecx
  413fb5:	enter  0xfef7,0x4e
  413fb9:	ret    0x67ca
  413fbc:	add    BYTE PTR [ebp+eax*1+0x0],bl
  413fc0:	add    BYTE PTR [edi],ah
  413fc2:	cdq    
  413fc3:	out    0xf7,al
  413fc5:	daa    
  413fc6:	ret    
  413fc7:	popfw  
  413fc9:	nop
  413fca:	inc    ebp
  413fcb:	(bad)  
  413fcc:	addr16 pop ebp
  413fce:	popa   
  413fcf:	aas    
  413fd0:	add    BYTE PTR [eax],al
  413fd2:	mov    al,ds:0x48416ad1
  413fd7:	fiadd  WORD PTR [eax+0x1b]
  413fda:	dec    eax
  413fdb:	push   es
  413fdc:	cmp    eax,0x1b
  413fdf:	dec    esp
  413fe0:	push   ss
  413fe1:	push   0xbeef0618
  413fe6:	mov    al,0x33
  413fe8:	imul   eax,DWORD PTR [ecx+0x8],0xffffffc3
  413fec:	mov    bl,0xe8
  413fee:	out    dx,eax
  413fef:	ret    
  413ff0:	std    
  413ff1:	call   FWORD PTR [ebp+0x35]
  413ff4:	out    0x6f,al
  413ff6:	inc    eax
  413ff7:	(bad)  
  413ff8:	std    
  413ff9:	call   0x40545e
  413ffe:	test   DWORD PTR [ecx+0xe],0xf5d55dff
  414005:	jmp    DWORD PTR [edi-0xff78c3d]
  41400b:	(bad)  
  41400d:	call   DWORD PTR [edi-0x600f4c3d]
  414013:	ret    
  414014:	std    
  414015:	call   0x40541e
  41401a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41401b:	mov    edx,ebp
  41401d:	div    DWORD PTR [edi+0x7751e6c3]
  414023:	(bad)  
  414024:	std    
  414025:	dec    DWORD PTR [ebp-0x33]
  414028:	out    0x4,eax
  41402a:	pop    es
  41402b:	(bad)  
  41402c:	std    
  41402d:	jmp    FWORD PTR [ebp-0x3f]
  414030:	out    0x6d,al
  414032:	xor    eax,DWORD PTR ds:0x3100ff00
  414038:	popf   
  414039:	pop    ebx
  41403a:	div    BYTE PTR [esi-0x36]
  41403d:	pop    ebx
  41403e:	xor    eax,0xc844c31e
  414043:	jae    0x414070
  414045:	add    dl,BYTE PTR [ebp-0x56]
  414048:	ret    
  414049:	add    bl,0x55
  41404c:	inc    ebp
  41404d:	add    ch,BYTE PTR [edx-0x16]
  414050:	loop   0x414020
  414052:	pop    es
  414053:	pop    ecx
  414054:	inc    edi
  414055:	push   ss
  414056:	(bad)  
  414057:	ds test al,0xbe
  41405a:	sti    
  41405b:	ss xchg esp,eax
  41405d:	cli    
  41405e:	call   FWORD PTR [bp-0x3f]
  414063:	daa    
  414064:	jle    0x413fe9
  414066:	inc    edi
  414067:	jo     0x41408b
  414069:	pop    edx
  41406a:	lea    edx,[edi]
  41406c:	sub    BYTE PTR [ebx-0x2],al
  41406f:	test   BYTE PTR [edx],bh
  414071:	fcmove st,st(5)
  414073:	xchg   ebp,eax
  414074:	loope  0x414079
  414076:	push   0x80022233
  41407b:	or     edi,eax
  41407d:	inc    ebp
  41407e:	(bad)  
  41407f:	out    dx,al
  414080:	fiadd  DWORD PTR [ebx]
  414082:	add    dh,dl
  414084:	mov    eax,0xe14c0dda
  414089:	add    ebp,DWORD PTR [eax+0x3a]
  41408c:	cmc    
  41408d:	ret    0xcfff
  414090:	adc    eax,0xca27e7fc
  414095:	inc    esp
  414096:	(bad)  
  414097:	mov    esi,0xfe4815
  41409c:	cmp    al,0x2a
  41409e:	pop    edx
  41409f:	push   ebx
  4140a0:	pop    ebp
  4140a1:	pop    DWORD PTR [ebx-0x38]
  4140a4:	jae    0x4140d4
  4140a6:	add    dl,BYTE PTR [ebp-0x56]
  4140a9:	mov    es,WORD PTR [ecx+0x43bfd9c3]
  4140af:	(bad)  
  4140b0:	mov    esp,0xf647ac09
  4140b5:	aaa    
  4140b6:	shl    edi,cl
  4140b8:	jg     0x414078
  4140ba:	loopne 0x414117
  4140bc:	mov    dl,BYTE PTR [ebx]
  4140be:	jmp    0xf58a7ac6
  4140c3:	jle    0x414114
  4140c5:	or     ebp,ecx
  4140c7:	add    esi,DWORD PTR [esi-0x32]
  4140ca:	xor    BYTE PTR [ebx],al
  4140cc:	xor    DWORD PTR [ecx],ecx
  4140ce:	jmp    0x257e360f
  4140d3:	cld    
  4140d4:	inc    esi
  4140d5:	cmp    BYTE PTR [edx-0x7cf734fd],dl
  4140db:	add    ecx,ebx
  4140dd:	or     BYTE PTR [esi+edi*4+0x22],bl
  4140e1:	fnstenv [ebx+0x7e]
  4140e4:	and    al,BYTE PTR [eax-0x3]
  4140e7:	inc    ebx
  4140e8:	outs   dx,BYTE PTR ds:[esi]
  4140e9:	cmp    BYTE PTR [ebx+0x4b],bh
  4140ec:	pop    ss
  4140ed:	mov    esi,0x12cc5aec
  4140f2:	jmp    0x548a7afa
  4140f7:	or     DWORD PTR [eax],ecx
  4140f9:	arpl   dx,bp
  4140fb:	add    esi,DWORD PTR [ecx]
  4140fd:	mov    eax,ds:0x7100cc71
  414102:	or     esi,eax
  414104:	mov    ecx,0xf5ed213a
  414109:	fbstp  TBYTE PTR [edi]
  41410b:	popa   
  41410c:	push   esp
  41410d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41410e:	lea    esi,[ebx+edi*1-0x29c7c831]
  414115:	into   
  414116:	(bad)  
  414118:	inc    edx
  414119:	mov    edi,0xbf346b81
  41411e:	aaa    
  41411f:	lea    ebp,[esi-0x4f3d5052]
  414125:	icebp  
  414126:	or     BYTE PTR [esi+0x79],bh
  414129:	mov    ?,WORD PTR [edi]
  41412b:	push   DWORD PTR [ebp-0xe]
  41412e:	ss je  0x414112
  414131:	pop    edx
  414132:	(bad)  
  414133:	xor    BYTE PTR [esi-0xe],ah
  414136:	add    BYTE PTR [ebp+ecx*2-0x3c01c8c6],0x32
  41413e:	mov    eax,ds:0x3775bc46
  414143:	std    
  414144:	jl     0x414163
  414146:	aas    
  414147:	(bad)  
  414148:	ds repnz mov esp,0xf86e4107
  41414f:	(bad)  
  414150:	cs mov esp,0xf21ee78c
  414156:	ss imul ebp,ecx,0xa86cd98a
  41415d:	xor    bh,BYTE PTR [eax]
  41415f:	mov    ah,0x19
  414161:	push   0x37
  414163:	inc    BYTE PTR [esi]
  414165:	add    al,ch
  414167:	push   cs
  414168:	call   0xfe79673e
  41416d:	pusha  
  41416e:	test   al,0x2a
  414170:	imul   dh
  414172:	jae    0x4140f9
  414174:	test   ch,al
  414176:	dec    ebx
  414177:	aaa    
  414178:	(bad)  
  414179:	cmp    ebp,ecx
  41417b:	shr    BYTE PTR [eax+ebp*1+0x2d],cl
  41417f:	ss mov ah,0xd9
  414182:	sub    esi,DWORD PTR [edi]
  414184:	inc    dh
  414186:	test   eax,0xe5f1e80e
  41418b:	aaa    
  41418c:	(bad)  
  41418d:	pusha  
  41418e:	test   eax,0x73aef656
  414193:	mov    al,ds:0xa59910ff
  414198:	inc    eax
  414199:	jmp    0x9f30bf11
  41419e:	jae    0x4141d7
  4141a0:	(bad)  
  4141a1:	adc    al,0x3d
  4141a3:	and    esp,ebp
  4141a5:	add    al,ch
  4141a7:	retf   
  4141a8:	std    
  4141a9:	mov    DWORD PTR ds:0x1ffff5d2,edx
  4141af:	cdq    
  4141b0:	adc    eax,0x7
  4141b3:	retf   
  4141b4:	std    
  4141b5:	push   eax
  4141b6:	pusha  
  4141b7:	jnp    0x414224
  4141b9:	inc    ecx
  4141ba:	mov    bl,cl
  4141bc:	mov    bl,0xf0
  4141be:	xlat   BYTE PTR ds:[ebx]
  4141bf:	retf   0xfffd
  4141c2:	test   DWORD PTR [edx],eax
  4141c4:	call   0xfe0caa96
  4141c9:	mov    DWORD PTR [eax],eax
  4141cb:	aad    0xdd
  4141cd:	cmc    
  4141ce:	call   FWORD PTR [edi]
  4141d0:	fs (bad) 
  4141d2:	cmp    DWORD PTR [bx+di+0x3f],0x0
  4141d7:	cmpxchg esi,ebp
  4141da:	neg    DWORD PTR [edi]
  4141dc:	retf   
  4141dd:	std    
  4141de:	jne    0x414230
  4141e0:	loop   0x414192
  4141e2:	xor    BYTE PTR [edi],bh
  4141e4:	retf   
  4141e5:	xchg   DWORD PTR [ebp-0x20ca4],eax
  4141eb:	lea    eax,[ecx-0x37e0083e]
  4141f1:	dec    esi
  4141f2:	push   0x3f7996
  4141f7:	movsx  ebp,dh
  4141fa:	neg    edi
  4141fc:	(bad)  
  4141fd:	std    
  4141fe:	jne    0x414210
  414200:	loop   0x414192
  414202:	xor    bh,bh
  414204:	mov    DWORD PTR [edi-0x2105f7b],0x680d82ff
  41420e:	(bad)  
  41420f:	ins    DWORD PTR es:[edi],dx
  414210:	dec    edx
  414211:	(bad)  
  414212:	inc    BYTE PTR [ebp-0x3]
  414215:	cmc    
  414216:	dec    DWORD PTR [edi-0x5ff78c39]
  41421c:	outs   dx,DWORD PTR ds:[esi]
  41421d:	push   DWORD PTR cs:[ecx]
  414220:	lahf   
  414221:	mov    al,BYTE PTR [ecx+esi*2-0x4b01bf62]
  414228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414229:	jnp    0x414221
  41422b:	sahf   
  41422c:	mov    dh,0xd3
  41422e:	add    BYTE PTR [bp+si-0x3cf4],bh
  414233:	dec    DWORD PTR [edi-0x7909cc04]
  414239:	scas   al,BYTE PTR es:[edi]
  41423a:	inc    eax
  41423b:	je     0x414266
  41423d:	fcomp  st(0)
  41423f:	das    
  414240:	jbe    0x414220
  414242:	mov    al,BYTE PTR [ebp+ebp*4-0x4d01bf22]
  414249:	mov    WORD PTR [edi],gs
  41424b:	neg    BYTE PTR [esi-0xa]
  41424e:	add    ecx,DWORD PTR [edi]
  414250:	lods   eax,DWORD PTR ds:[esi]
  414251:	out    0x3,al
  414253:	add    BYTE PTR [ecx],dh
  414255:	mov    ds:0xee3ecf7e,eax
  41425a:	inc    eax
  41425b:	inc    ebp
  41425d:	and    al,0x83
  41425f:	mov    esp,0xfe411679
  414264:	xor    DWORD PTR [ebx-0x7a],edx
  414267:	mov    al,0x31
  414269:	and    al,BYTE PTR [edx]
  41426b:	push   0xbd2f2231
  414270:	push   ss
  414271:	mov    dh,0x12
  414273:	call   0xfe808c43
  414278:	push   es
  414279:	xchg   esi,eax
  41427a:	cs idiv dh
  41427d:	push   ebx
  41427e:	aas    
  41427f:	je     0x4142a2
  414281:	dec    edx
  414282:	adc    BYTE PTR [edx],ch
  414284:	out    dx,al
  414285:	inc    ebx
  414286:	aas    
  414287:	mov    ah,0xd9
  414289:	jae    0x4142ca
  41428b:	(bad)  
  41428c:	fdivp  st(5),st
  41428e:	adc    ebp,eax
  414290:	xor    DWORD PTR [eax],ecx
  414292:	inc    ecx
  414293:	inc    BYTE PTR [eax]
  414295:	into   
  414296:	mov    ebp,0x9c6f626
  41429b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41429c:	inc    eax
  41429d:	inc    ebp
  41429e:	sbb    DWORD PTR [ecx-0x6acbf6cb],edx
  4142a4:	inc    eax
  4142a5:	in     eax,0x55
  4142a7:	xchg   ebp,eax
  4142a8:	inc    eax
  4142a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142aa:	xor    al,0x3b
  4142ac:	and    esp,DWORD PTR [edi+0x1d407d34]
  4142b2:	sbb    DWORD PTR [ecx+0x6d345975],eax
  4142b8:	inc    eax
  4142b9:	mov    ebp,0x7f405d51
  4142be:	xor    al,0xd3
  4142c0:	adc    ecx,DWORD PTR [ecx+0x6f40ff59]
  4142c6:	xor    al,0x93
  4142c8:	push   ebx
  4142c9:	pop    edi
  4142ca:	xor    al,0x45
  4142cc:	inc    eax
  4142cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ce:	pop    ebp
  4142cf:	xor    eax,0xbb345740
  4142d4:	adc    ebx,DWORD PTR [ecx-0x67]
  4142d7:	inc    DWORD PTR [eax+0x47]
  4142da:	xor    al,0x5b
  4142dc:	dec    edi
  4142dd:	inc    edi
  4142de:	xor    al,0x1d
  4142e0:	inc    eax
  4142e1:	mov    ebp,0x59710118
  4142e6:	xor    al,0xd
  4142e8:	inc    eax
  4142e9:	fisttp QWORD PTR [ebp+edi*8+0x3f]
  4142ed:	pop    ds
  4142ee:	xor    al,0x33
  4142f0:	dec    ebx
  4142f1:	pop    ds
  4142f2:	xor    al,0xf5
  4142f4:	aas    
  4142f5:	test   DWORD PTR [ecx],ebx
  4142f7:	add    DWORD PTR [ecx-0x1acba700],esi
  4142fd:	aas    
  4142fe:	lds    ecx,FWORD PTR [eax-0x2b]
  414301:	aas    
  414302:	div    DWORD PTR [ebx]
  414304:	pop    ebx
  414305:	adc    al,0xd9
  414307:	test   bh,bh
  414309:	ds out 0x33,eax
  41430c:	jnp    0x41438a
  41430e:	out    0x33,eax
  414310:	mov    ebp,0xff749d3f
  414315:	mov    ebp,0x34fe330e
  41431a:	sbb    eax,0xffd04b21
  41431f:	xor    bh,dh
  414321:	adc    al,0x1d
  414323:	xor    al,0xb4
  414325:	cdq    
  414326:	xor    di,si
  414329:	mov    gs,eax
  41432b:	or     ebp,eax
  41432d:	imul   esi,eax,0x32
  414330:	(bad)  
  414331:	jle    0x41434b
  414333:	and    al,0xf6
  414335:	jbe    0x414385
  414337:	sub    al,0x48
  414339:	mov    ebp,0x9cfe3347
  41433e:	inc    ecx
  41433f:	cmp    edi,esi
  414341:	pop    esi
  414342:	inc    ebp
  414343:	imul   BYTE PTR [ebx]
  414345:	push   esi
  414346:	xor    esi,DWORD PTR cs:[ecx+eax*2+0x51fe331e]
  41434e:	(bad)  
  41434f:	(bad)  
  414351:	ds push ss
  414353:	jge    0x414338
  414355:	ds push cs
  414357:	xor    esp,edi
  414359:	add    DWORD PTR [ecx+0x32],eax
  41435c:	(bad)  
  41435d:	add    BYTE PTR es:[eax-0x9e109ad],bh
  414364:	sub    ebx,DWORD PTR [eax*8+0x54fe336f]
  41436b:	test   DWORD PTR [ebx],edi
  41436d:	inc    BYTE PTR [esi]
  41436f:	dec    ebp
  414370:	sbb    BYTE PTR [esi+edi*8],ch
  414373:	push   edi
  414374:	xor    esi,DWORD PTR [ebp+ebx*1+0x1fe3346]
  41437b:	cs in  eax,0xfe
  41437e:	out    0x3f,al
  414380:	jge    0x41434d
  414382:	(bad)  
  414383:	aaa    
  414384:	xor    esp,edi
  414386:	aad    0xdb
  414388:	xor    edi,esi
  41438a:	into   
  41438b:	imul   ecx,DWORD PTR [edx-0xa],0xe6f3f700
  414392:	icebp  
  414393:	inc    ebx
  414394:	repnz std 
  414396:	dec    DWORD PTR [ebp-0x3a]
  414399:	cmc    
  41439a:	call   DWORD PTR [edi-0x68d41b22]
  4143a0:	repz std 
  4143a2:	mov    ch,0x54
  4143a4:	sti    
  4143a5:	std    
  4143a6:	push   DWORD PTR [eax-0x4800d631]
  4143ac:	repz inc ebx
  4143ae:	clc    
  4143af:	rcr    DWORD PTR [esi],0xfb
  4143b2:	call   DWORD PTR [edi]
  4143b4:	repz jae 0x4143b3
  4143b7:	mov    al,0xfb
  4143b9:	adc    eax,0xc0c59800
  4143be:	or     al,0x88
  4143c0:	push   ecx
  4143c1:	mov    esp,ebp
  4143c3:	add    BYTE PTR [ebx],cl
  4143c5:	retf   0x6afa
  4143c8:	pop    eax
  4143c9:	pusha  
  4143ca:	pop    edx
  4143cb:	(bad)  
  4143cc:	jge    0x4143cc
  4143ce:	out    0xed,eax
  4143d0:	inc    eax
  4143d1:	repnz std 
  4143d3:	mov    DWORD PTR [ebp+0x5075fdf2],ecx
  4143d9:	pop    esi
  4143da:	and    ebp,DWORD PTR [ebp-0x67]
  4143dd:	push   es
  4143de:	push   DWORD PTR ds:0x3f3dd7
  4143e4:	and    cl,bl
  4143e6:	cli    
  4143e7:	inc    DWORD PTR [edi-0xd]
  4143ea:	jae    0x4143f4
  4143ec:	mov    al,0x20
  4143ee:	imul   eax,DWORD PTR [ecx+0x8],0x5e
  4143f2:	add    BYTE PTR [eax],al
  4143f4:	or     BYTE PTR [esi-0xbfb441a],al
  4143fa:	std    
  4143fb:	(bad)  
  4143fc:	jge    0x4143f0
  4143fe:	std    
  4143ff:	jne    0x414401
  414401:	fdivp  st(6),st
  414403:	sub    bh,dl
  414405:	repz mov edx,0x55022431
  41440c:	mov    edx,0xddc38073
  414411:	xlat   BYTE PTR ds:[ebx]
  414412:	add    eax,DWORD PTR [eax]
  414414:	(bad)  
  414415:	mov    cl,0xab
  414417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414418:	pop    esp
  414419:	loope  0x41441e
  41441b:	(bad)  
  41441c:	cmp    al,0x54
  41441e:	cmp    esi,DWORD PTR [ecx+ebp*1-0x68]
  414422:	(bad)  
  414423:	push   ebx
  414424:	mov    dh,0x92
  414426:	stos   DWORD PTR es:[edi],eax
  414427:	add    BYTE PTR [eax],al
  414429:	xor    DWORD PTR [ebx+0x34dd677d],ecx
  41442f:	sar    edi,0x9f
  414432:	xor    al,0xe
  414434:	call   FWORD PTR [eax+edi*1]
  414437:	sub    bh,BYTE PTR [edi]
  414439:	in     eax,0xba
  41443b:	cmp    al,0xfe
  41443d:	cld    
  41443e:	push   ebx
  41443f:	sub    ah,BYTE PTR [ebp+0xa3cab41]
  414445:	jno    0x4144a2
  414447:	cmc    
  414448:	mov    ah,dh
  41444a:	fld    TBYTE PTR [ebx+0x7df266ff]
  414450:	mov    DWORD PTR [si-0x3f],ebx
  414454:	call   DWORD PTR [edi+0x7c]
  414457:	ds inc ah
  41445a:	daa    
  41445b:	sub    bl,BYTE PTR [ebx]
  41445d:	fucom  st(2)
  41445f:	cmp    al,0x67
  414461:	xor    BYTE PTR [eax],ah
  414463:	sub    edi,DWORD PTR [ebp+0x40aedbc9]
  414469:	xor    DWORD PTR [edi],edx
  41446b:	mov    bh,0xfb
  41446d:	es xchg esi,eax
  41446f:	or     ch,al
  414471:	mov    ?,WORD PTR ss:[ebx]
  414474:	(bad)  
  414475:	push   ss
  414476:	mov    dh,0x3e
  414478:	out    0x3c,eax
  41447a:	dec    ebx
  41447b:	cmp    edi,esi
  41447d:	clc    
  41447e:	in     al,0xb
  414480:	add    BYTE PTR [ecx+ecx*1+0x72],ah
  414484:	das    
  414485:	mov    bl,0x45
  414487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414488:	test   eax,0xade1a8ee
  41448d:	add    BYTE PTR [ecx+0x9],dh
  414490:	inc    ecx
  414491:	push   ecx
  414492:	dec    ebp
  414493:	retf   0x3ce8
  414496:	pop    ebp
  414497:	std    
  414498:	rol    BYTE PTR [edi+ebx*1],1
  41449b:	xor    BYTE PTR [ebp-0x294a0ef8],dh
  4144a1:	mov    dh,BYTE PTR [ebp+0x2d]
  4144a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144a5:	mov    dh,0xba
  4144a7:	xor    BYTE PTR [ebx],dl
  4144a9:	or     al,0x99
  4144ab:	rcl    BYTE PTR [ebp+0x1330a73c],1
  4144b1:	inc    eax
  4144b2:	xchg   esi,eax
  4144b3:	push   esi
  4144b4:	sar    BYTE PTR [edi+edx*4],cl
  4144b7:	mov    ds:0x9f2dabe8,eax
  4144bc:	daa    
  4144bd:	add    al,0x19
  4144bf:	pop    esp
  4144c0:	sti    
  4144c1:	ret    0x2f7e
  4144c4:	fisttp DWORD PTR [edi]
  4144c6:	mov    DWORD PTR [edx+0xb],edx
  4144c9:	cmp    eax,0xb729046f
  4144ce:	cmp    al,0x82
  4144d0:	mov    ds:0x44b65f3f,eax
  4144d5:	cmp    al,0xdd
  4144d7:	add    BYTE PTR [ecx-0xe],dl
  4144da:	dec    edi
  4144db:	xor    BYTE PTR ds:0x402cbd3c,dh
  4144e1:	or     BYTE PTR fs:[eax],dh
  4144e4:	and    eax,0xcea836a9
  4144e9:	lods   eax,DWORD PTR ds:[esi]
  4144ea:	jno    0x4144f5
  4144ec:	sub    DWORD PTR [edx],0x3ce8ca95
  4144f2:	add    BYTE PTR [ebp+0x456810fd],ah
  4144f8:	xor    ch,bh
  4144fa:	pop    es
  4144fb:	icebp  
  4144fc:	mov    ah,0xff
  4144fe:	fidivr WORD PTR [ebx-0x3b11043c]
  414504:	xor    edi,esi
  414506:	pop    esp
  414507:	and    eax,0x2ade0221
  41450c:	das    
  41450d:	(bad)  
  41450e:	pop    esp
  41450f:	sub    DWORD PTR [eax],ebp
  414511:	js     0x414516
  414513:	sbb    ch,BYTE PTR [edi]
  414515:	mov    WORD PTR [ecx+eiz*1],gs
  414518:	shl    BYTE PTR [edi+0x11],0x9b
  41451c:	enter  0x40ff,0x14
  414520:	popf   
  414521:	inc    eax
  414522:	jmp    0x914cfa22
  414527:	jbe    0x414505
  414529:	(bad)  
  41452a:	sahf   
  41452b:	ds dec ecx
  41452d:	jae    0x41453f
  41452f:	mov    ah,0xc4
  414531:	imul   DWORD PTR [edx-0x28]
  414534:	cmp    eax,DWORD PTR [ebx]
  414536:	cld    
  414537:	retf   0x4482
  41453a:	cmp    DWORD PTR [esi-0x6c26c4d1],0x31f7fe2f
  414544:	jno    0x414555
  414546:	push   cs
  414547:	sub    eax,0x22a48909
  41454c:	and    ecx,DWORD PTR [ebx+0x56]
  41454f:	mov    al,ds:0x8b17671f
  414554:	enter  0x73ff,0x0
  414558:	jo     0x4145a1
  41455a:	dec    edi
  41455b:	push   ecx
  41455c:	jl     0x414573
  41455e:	add    cl,ch
  414560:	scas   eax,DWORD PTR es:[edi]
  414561:	dec    ebx
  414562:	or     ebx,DWORD PTR [eax+esi*2+0x4b]
  414566:	dec    edi
  414567:	je     0x4145d9
  414569:	inc    edi
  41456a:	dec    edi
  41456b:	xchg   ecx,eax
  41456c:	pop    ebp
  41456d:	popf   
  41456e:	inc    eax
  41456f:	jmp    0x14cfadf
  414574:	or     bl,dh
  414576:	inc    BYTE PTR [eax]
  414578:	das    
  414579:	(bad)  
  41457a:	mov    edi,0x437dec74
  41457f:	cld    
  414580:	fwait
  414581:	jo     0x414545
  414583:	add    eax,DWORD PTR [esi+0xc75feff]
  414589:	hlt    
  41458a:	jae    0x414594
  41458c:	add    BYTE PTR [esi-0xc000004],al
  414592:	jae    0x414590
  414594:	lock sti 
  414596:	daa    
  414597:	(bad)  
  414598:	out    dx,eax
  414599:	repz dec ebx
  41459b:	lock pop ebx
  41459d:	jno    0x41458d
  41459f:	add    BYTE PTR ds:0x8075fda3,al
  4145a5:	loop   0x41458b
  4145a7:	sub    DWORD PTR [edi-0x5f3d380d],ecx
  4145ad:	or     dl,BYTE PTR [ebp-0x75]
  4145b0:	lods   al,BYTE PTR ds:[esi]
  4145b1:	xchg   edx,eax
  4145b3:	cld    
  4145b4:	xor    al,BYTE PTR ds:0x79af5d6a
  4145ba:	push   es
  4145bb:	call   0xfd6cc5c0
  4145c0:	call   DWORD PTR [ecx]
  4145c2:	dec    ecx
  4145c3:	cli    
  4145c4:	push   0xbeef0a88
  4145c9:	pusha  
  4145ca:	mov    ds:0x6258416b,al
  4145cf:	mov    esi,0xff0a996d
  4145d4:	jne    0x414626
  4145d6:	loop   0x4145c9
  4145d8:	push   edx
  4145d9:	out    dx,eax
  4145da:	repnz add WORD PTR [eax-0x1d],bx
  4145df:	mov    esp,0x3f60c468
  4145e4:	add    BYTE PTR [eax-0x36],dh
  4145e7:	imul   eax,DWORD PTR [ecx+0x48],0xfffffff3
  4145eb:	jae    0x4145f5
  4145ed:	inc    eax
  4145ee:	(bad)  
  4145ef:	push   eax
  4145f0:	push   DWORD PTR [ecx]
  4145f2:	pop    ss
  4145f3:	stos   DWORD PTR es:[edi],eax
  4145f4:	call   FWORD PTR [esi]
  4145f6:	das    
  4145f7:	ja     0x414660
  4145f9:	leave  
  4145fa:	xchg   esp,eax
  4145fb:	ret    
  4145fc:	call   DWORD PTR [esi+0x3140a7f9]
  414602:	aaa    
  414603:	scas   al,BYTE PTR es:[edi]
  414604:	pop    es
  414605:	or     ebp,esp
  414607:	aam    0xfe
  414609:	not    bh
  41460b:	add    al,BYTE PTR [eax]
  41460d:	fimul  WORD PTR [ebp-0x1eab4c55]
  414613:	add    ebp,DWORD PTR [eax-0x18]
  414616:	in     al,dx
  414617:	ret    0xd7ff
  41461a:	in     al,dx
  41461b:	or     ebp,eax
  41461d:	lahf   
  41461e:	adc    DWORD PTR [ecx],edi
  414620:	inc    BYTE PTR [eax]
  414622:	(bad)  
  414623:	sub    al,0x77
  414625:	inc    edi
  414626:	jo     0x414648
  414628:	aaa    
  414629:	je     0x414654
  41462b:	cwde   
  41462c:	(bad)  
  41462e:	scas   al,BYTE PTR es:[edi]
  41462f:	mov    gs,WORD PTR [ebx-0x7ddfceff]
  414635:	(bad)  
  414636:	and    al,0x28
  414638:	sub    cl,BYTE PTR [edi+edx*4-0x7a]
  41463c:	cmp    dh,bh
  41463e:	add    al,0xac
  414640:	cmp    BYTE PTR [ecx+edi*1-0x78],dh
  414644:	dec    edx
  414645:	and    eax,0xc14a9e7e
  41464a:	sub    eax,0x5d8acd20
  41464f:	mov    ds:0x4c66fb3f,al
  414654:	push   cs
  414655:	jmp    esp
  414657:	das    
  414658:	sub    dl,BYTE PTR [edi+0xa38c718]
  41465e:	jno    0x4146d3
  414660:	icebp  
  414661:	mov    ah,ch
  414663:	repz cmp BYTE PTR [ecx+ebx*1-0x21],dh
  414668:	scas   al,BYTE PTR es:[edi]
  414669:	pop    es
  41466a:	dec    ecx
  41466b:	or     BYTE PTR [edi+ebx*8],bh
  41466e:	das    
  41466f:	sub    eax,0x2c3aaf1d
  414674:	fwait
  414675:	or     ecx,DWORD PTR [ecx]
  414677:	faddp  st(6),st
  414679:	cmp    BYTE PTR [edi],dl
  41467b:	sub    eax,0xb70f377b
  414680:	lock sub edx,DWORD PTR [ecx-0x1d]
  414684:	cmc    
  414685:	cmp    BYTE PTR [eax],al
  414687:	push   DWORD PTR [esi-0x1dd3d414]
  41468d:	in     eax,0x38
  41468f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414690:	or     ch,cl
  414692:	add    esi,DWORD PTR [ecx]
  414694:	inc    edx
  414695:	stos   BYTE PTR es:[edi],al
  414696:	rdtsc  
  414698:	(bad)  
  414699:	popa   
  41469a:	daa    
  41469b:	mov    bl,0x45
  41469d:	rcl    al,0x64
  4146a0:	fcom   DWORD PTR [ecx]
  4146a2:	pop    ebp
  4146a3:	xchg   ebx,ebp
  4146a5:	inc    esi
  4146a6:	ret    
  4146a7:	mov    esi,0x6638237d
  4146ac:	aam    0xa5
  4146ae:	scas   al,BYTE PTR es:[edi]
  4146af:	ds sub al,0x13
  4146b2:	or     BYTE PTR [ecx-0x60c73eca],bl
  4146b8:	add    BYTE PTR [ecx+0x10d938af],ch
  4146be:	add    al,0x31
  4146c0:	sbb    al,0x3e
  4146c2:	cmp    ch,bh
  4146c4:	sub    al,0x18
  4146c6:	sar    DWORD PTR [edi-0x4a],1
  4146c9:	loopne 0x4146f6
  4146cb:	imul   DWORD PTR [ebx]
  4146cd:	cmp    BYTE PTR gs:[ebx],bh
  4146d0:	push   ecx
  4146d1:	push   eax
  4146d2:	js     0x4146e2
  4146d4:	sub    al,0x55
  4146d6:	aaa    
  4146d7:	and    ecx,DWORD PTR [ecx-0x71]
  4146da:	cmp    BYTE PTR [edi+0x2c],dl
  4146dd:	inc    ebp
  4146de:	xor    eax,0xaee5f19c
  4146e3:	jb     0x414751
  4146e5:	call   DWORD PTR [edi+0x5bffc989]
  4146eb:	add    BYTE PTR [edi+0x30],dh
  4146ee:	dec    edi
  4146ef:	mov    esi,0x1e0fb569
  4146f4:	xlat   BYTE PTR ds:[ebx]
  4146f5:	jmp    edi
  4146f7:	pop    ebp
  4146f8:	or     eax,0x72e2fe2b
  4146fd:	mov    eax,0xc4bb992f
  414702:	not    DWORD PTR [ecx+0x37ef092d]
  414708:	cmp    DWORD PTR [ebp-0x1b05fef9],esi
  41470e:	(bad)  
  41470f:	out    0xfe,al
  414711:	sub    dh,BYTE PTR [ecx+esi*8+0x1a]
  414715:	cdq    
  414716:	and    al,0xd6
  414718:	sub    esi,DWORD PTR es:[ebp+ecx*8+0x1e]
  41471d:	mov    ch,0xf7
  41471f:	mov    BYTE PTR [eax-0x2fe917fd],0x2a
  414726:	inc    cl
  414728:	mov    ah,bl
  41472a:	(bad)  
  41472b:	scas   al,BYTE PTR es:[edi]
  41472c:	mov    dl,0x3e
  41472e:	add    BYTE PTR [ebp-0x6147945e],ah
  414734:	pop    esi
  414735:	sub    edi,esi
  414737:	fwait
  414738:	pop    ss
  414739:	hlt    
  41473a:	push   es
  41473b:	adc    al,0xf
  41473d:	imul   esp,DWORD PTR [eax-0x74d48bea],0x24
  414744:	dec    ecx
  414745:	mov    esp,0xfbc07656
  41474a:	(bad)  
  41474b:	hlt    
  41474c:	and    DWORD PTR cs:[edx+edx*1+0x0],ebx
  414751:	sub    ecx,DWORD PTR es:[edx]
  414754:	sub    DWORD PTR [ecx+0x25624fd1],esp
  41475a:	xchg   DWORD PTR [ebp+ecx*2+0x2c],edi
  41475e:	mov    bl,0x4b
  414760:	add    al,bl
  414762:	xor    bh,bh
  414764:	je     0x4147b8
  414766:	ins    DWORD PTR es:[edi],dx
  414767:	std    
  414768:	dec    ebp
  414769:	add    al,0x5d
  41476b:	(bad)  
  41476c:	push   edi
  41476e:	mov    dl,0xfd
  414770:	jne    0x4147c6
  414772:	cmp    edx,DWORD PTR [ebp-0x1]
  414775:	mov    ebp,0x46d6e7fe
  41477a:	repnz std 
  41477c:	or     esp,DWORD PTR [eax-0x22]
  41477f:	sub    eax,DWORD PTR [eax+0x287508f6]
  414785:	into   
  414786:	repz dec ebx
  414788:	cld    
  414789:	mov    dl,0x6
  41478b:	lea    eax,[ebp+0x4]
  41478e:	push   edi
  41478f:	push   esp
  414790:	call   0x3e9cee
  414795:	jecxz  0x41475d
  414797:	jb     0x4147ad
  414799:	jo     0x4147a2
  41479b:	add    bh,ch
  41479d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41479e:	repz jae 0x41479d
  4147a1:	cs cmp bh,ch
  4147a4:	jne    0x414766
  4147a6:	fisub  WORD PTR [ebp+0x9f387fe]
  4147ac:	fdiv   st,st(0)
  4147ae:	or     esp,DWORD PTR [esi]
  4147b0:	call   edi
  4147b2:	repnz xor eax,eax
  4147b5:	add    BYTE PTR [ecx],dl
  4147b7:	repz std 
  4147b9:	inc    edi
  4147bb:	clc    
  4147bc:	lods   al,BYTE PTR ds:[esi]
  4147bd:	cmp    BYTE PTR [edi-0x35407d87],cl
  4147c3:	arpl   WORD PTR [edi],di
  4147c5:	add    BYTE PTR ds:0x1f50fa49,dl
  4147cb:	bnd jae 0x4147de
  4147ce:	pop    es
  4147cf:	jns    0x4147db
  4147d1:	call   0x3e67ca
  4147d6:	arpl   si,ax
  4147d8:	jb     0x41480a
  4147da:	xor    DWORD PTR [eax-0x75],esi
  4147dd:	inc    esp
  4147de:	pop    ecx
  4147df:	dec    eax
  4147e0:	(bad)  
  4147e1:	call   FWORD PTR [edi-0x7e]
  4147e4:	xor    eax,0xa2d83974
  4147e9:	and    edi,DWORD PTR [esi]
  4147eb:	repz int 0xfe
  4147ee:	mov    esp,0x55b82a27
  4147f3:	jecxz  0x41482a
  4147f5:	(bad)  
  4147f6:	pushf  
  4147f7:	or     al,0x36
  4147f9:	je     0x414814
  4147fb:	adc    esi,DWORD PTR [eax-0x2184f6f9]
  414801:	dec    BYTE PTR [esi]
  414803:	sbb    BYTE PTR [edx-0x7fd4f9da],dl
  414809:	retf   0x3430
  41480c:	lock mov edi,0xfe341ab8
  414812:	out    dx,al
  414813:	dec    ebp
  414814:	gs aaa 
  414816:	cs aad 0x65
  414819:	or     al,BYTE PTR [eax]
  41481b:	cli    
  41481c:	retf   
  41481d:	push   es
  41481e:	push   0xbd232041
  414823:	into   
  414824:	in     al,dx
  414825:	or     ebp,eax
  414827:	adc    eax,DWORD PTR [esi*1-0x27a15502]
  41482e:	pop    ebp
  41482f:	push   esi
  414830:	imul   eax,DWORD PTR [ecx+0xf],0xeb88ed31
  414837:	mov    al,0x63
  414839:	xor    esi,esi
  41483b:	sahf   
  41483c:	xchg   edx,eax
  41483d:	xchg   BYTE PTR [ebp+edx*4-0x11],al
  414841:	xor    al,0x74
  414843:	and    DWORD PTR [ebx-0x6266f452],eax
  414849:	adc    BYTE PTR [eax],al
  41484b:	xor    DWORD PTR [edi],esp
  41484d:	inc    edx
  41484e:	je     0x414846
  414850:	bound  edi,QWORD PTR [esi-0x16f6ce09]
  414856:	add    esi,DWORD PTR [ecx]
  414858:	inc    edx
  414859:	mov    ds:0xe9015f2f,eax
  41485e:	add    ecx,ebx
  414860:	or     bl,al
  414862:	add    ebx,ebx
  414864:	or     bl,dl
  414866:	add    esi,DWORD PTR [ebx+eax*8-0x7c522bcc]
  41486d:	cmp    al,0x2d
  41486f:	aaa    
  414870:	sub    DWORD PTR [eax+0x2521a534],ebx
  414876:	scas   eax,DWORD PTR es:[edi]
  414877:	sub    dh,BYTE PTR [edx]
  414879:	rcl    BYTE PTR [eax],0x31
  41487c:	or     edx,esp
  41487e:	inc    ebx
  41487f:	add    BYTE PTR [edx-0x6940fdf5],ah
  414885:	test   BYTE PTR [eax+0x732806c2],dh
  41488b:	adc    ecx,DWORD PTR [ecx]
  41488d:	jbe    0x414851
  41488f:	xor    al,0xf7
  414891:	xchg   esp,eax
  414892:	sbb    BYTE PTR [edi+0x34dd1db5],al
  414898:	out    0xb9,eax
  41489a:	cmp    ch,BYTE PTR [ecx+eiz*8]
  41489d:	repz aad 0x34
  4148a0:	test   eax,0xcf2cd88e
  4148a5:	sub    BYTE PTR [edx+0x4],dl
  4148a8:	(bad)  
  4148a9:	pop    esi
  4148aa:	mov    eax,0xb528bf2c
  4148af:	scas   al,BYTE PTR es:[edi]
  4148b0:	sub    ch,BYTE PTR [eax]
  4148b2:	xor    ecx,DWORD PTR [ecx+ebx*4]
  4148b5:	xor    DWORD PTR [ebx+0x5328a734],esp
  4148bb:	xor    esp,DWORD PTR [edi+0x782b9528]
  4148c1:	out    dx,eax
  4148c2:	lea    esi,[edi+ecx*4]
  4148c5:	into   
  4148c6:	sub    BYTE PTR [eax],0xb6
  4148c9:	sub    bl,dh
  4148cb:	aaa    
  4148cc:	xchg   esi,eax
  4148cd:	and    bh,bh
  4148cf:	fidiv  DWORD PTR [edx]
  4148d1:	or     ecx,ecx
  4148d3:	stos   DWORD PTR es:[edi],eax
  4148d4:	or     DWORD PTR ss:[ebp+0x72],edx
  4148d8:	push   cs
  4148d9:	mov    ebx,eax
  4148db:	pop    ecx
  4148dc:	or     eax,0x9764fe27
  4148e1:	and    al,0x4f
  4148e3:	dec    esi
  4148e4:	add    BYTE PTR [edi+0x2ebcff18],bl
  4148ea:	xor    edx,esp
  4148ec:	(bad)  [edx]
  4148ee:	or     DWORD PTR [ebx],ecx
  4148f0:	sub    DWORD PTR ds:0x32e9858e,ebp
  4148f6:	or     edi,eax
  4148f8:	lods   al,BYTE PTR ds:[esi]
  4148f9:	push   0x28
  4148fb:	(bad)  
  4148fc:	jmp    0x1d859933
  414901:	pop    ebp
  414902:	verw   cx
  414905:	fsub   DWORD PTR [edi]
  414907:	push   0x6827d8e9
  41490c:	jmp    0x9a3515c8
  414911:	scas   eax,DWORD PTR es:[edi]
  414912:	mov    ebx,?
  414914:	mul    BYTE PTR [edx]
  414916:	daa    
  414917:	dec    edi
  414918:	out    0xa8,al
  41491a:	pop    ds
  41491b:	(bad)  
  41491c:	push   esp
  41491d:	and    DWORD PTR [eax],esi
  41491f:	mov    ah,0xfb
  414921:	xor    cl,BYTE PTR [ecx]
  414923:	or     ebp,DWORD PTR [ecx+0x35eb0989]
  414929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41492a:	add    BYTE PTR [edi+0x28],0x35
  41492e:	sub    BYTE PTR [ecx+ebx*8+0x1a],dh
  414932:	adc    DWORD PTR [edx],ebp
  414934:	scas   al,BYTE PTR es:[edi]
  414935:	bound  edx,QWORD PTR [ebx+0x1bb874cf]
  41493b:	neg    BYTE PTR [esi-0x7eae279e]
  414941:	jae    0x414934
  414943:	dec    BYTE PTR [esi+0x139d42]
  414949:	add    BYTE PTR [eax],ch
  41494b:	add    eax,0xdbff2a44
  414950:	xchg   DWORD PTR [ebp-0x21c08],eax
  414956:	fbld   TBYTE PTR [ecx-0x24300812]
  41495c:	std    
  41495d:	jne    0x4149ab
  41495f:	fidiv  DWORD PTR [ebx+0x8]
  414962:	lock mov edi,0xdbfffffc
  414968:	mov    bl,0xf0
  41496a:	pop    es
  41496b:	fdiv   st(5),st
  41496d:	call   0x3e7aaa
  414972:	call   DWORD PTR [ecx-0xa]
  414975:	jmp    0x414908
  414977:	fidiv  DWORD PTR [ebx-0x4]
  41497a:	inc    eax
  41497b:	dec    edx
  41497c:	adc    BYTE PTR [eax],al
  41497e:	or     dh,ah
  414980:	rcl    BYTE PTR [eax],0x8
  414983:	inc    edx
  414984:	mov    esp,ebp
  414986:	fwait
  414987:	rcl    DWORD PTR [edx+0xa602f57],1
  41498d:	call   0x3e6a3b
  414992:	adc    ecx,ebx
  414994:	jae    0x41499b
  414996:	mov    edi,0xd81cc0e5
  41499b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41499c:	inc    ebx
  41499d:	xchg   esp,eax
  41499e:	arpl   WORD PTR [ecx+0x1a],bx
  4149a1:	movzx  edx,BYTE PTR [ebx+0xd]
  4149a5:	push   eax
  4149a6:	out    dx,eax
  4149a7:	mov    al,ds:0xa280e45
  4149ac:	mov    dh,0x47
  4149ae:	add    ch,cl
  4149b0:	cmp    cl,BYTE PTR ds:0x500907b6
  4149b6:	(bad)  
  4149b8:	push   ebx
  4149b9:	or     DWORD PTR [eax-0x61],edx
  4149bc:	mov    al,ds:0xa580a45
  4149c1:	mov    dh,0x47
  4149c3:	xor    DWORD PTR [ecx],ebp
  4149c5:	ror    BYTE PTR [esi],cl
  4149c7:	(bad)  
  4149c8:	out    dx,eax
  4149c9:	sti    
  4149ca:	dec    edi
  4149cb:	ss out 0xc9,eax
  4149ce:	add    eax,0x467936e1
  4149d3:	sub    eax,0xd9363300
  4149d8:	jle    0x41498d
  4149da:	inc    eax
  4149db:	xor    DWORD PTR [ebp-0x47fe6439],ebx
  4149e1:	dec    ebx
  4149e2:	adc    BYTE PTR [ecx],dh
  4149e4:	xor    BYTE PTR [ebp-0x504cfa3d],al
  4149ea:	pop    ds
  4149eb:	xor    DWORD PTR [ebx+edi*4-0x2],esp
  4149ef:	les    edi,FWORD PTR [ebx]
  4149f1:	xor    DWORD PTR [ecx+eiz*1-0x38],esi
  4149f5:	push   DWORD PTR ds:0xbffdf72e
  4149fb:	popf   
  4149fc:	jp     0x414a79
  4149fe:	inc    esp
  4149ff:	mov    ecx,0x1607b806
  414a04:	test   DWORD PTR [edx],ecx
  414a06:	call   0xfe729c86
  414a0b:	push   es
  414a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a0d:	xchg   esi,eax
  414a0e:	inc    BYTE PTR [eax+ebp*1+0x5300a01a]
  414a15:	pop    ds
  414a16:	xor    BYTE PTR [esp+esi*2+0x5cfed2d4],cl
  414a1d:	or     BYTE PTR [esp+edx*4],bl
  414a20:	adc    eax,DWORD PTR [edi+0x30]
  414a23:	(bad)  
  414a24:	pop    esp
  414a25:	cwde   
  414a26:	xor    BYTE PTR [ecx+ebp*1+0x48],dh
  414a2a:	jge    0x414a4d
  414a2c:	(bad)  
  414a2d:	dec    esi
  414a2e:	xor    BYTE PTR [ecx+ebx*4+0x37],dh
  414a32:	mov    al,ds:0x1c5eb624
  414a37:	das    
  414a38:	scas   al,BYTE PTR es:[edi]
  414a39:	fdiv   st(3),st
  414a3b:	(bad)  
  414a3c:	sbb    al,0x9
  414a3e:	add    DWORD PTR [ebx+eax*2],ebx
  414a41:	jmp    0x4149e0
  414a43:	xor    DWORD PTR [edi+0x5317c9b],edx
  414a49:	add    DWORD PTR [ecx-0x7ad9af62],eax
  414a4f:	jg     0x414a46
  414a51:	test   BYTE PTR [eax],bl
  414a53:	xor    ebp,edi
  414a55:	add    BYTE PTR [ecx+0x6d2610d2],al
  414a5b:	xor    ebp,ebx
  414a5d:	cld    
  414a5e:	gs mov bh,0x2e
  414a61:	ror    DWORD PTR es:[ebx],cl
  414a64:	dec    ecx
  414a65:	in     al,dx
  414a66:	or     dh,BYTE PTR [ecx]
  414a68:	dec    edi
  414a69:	and    eax,0xdb4e97d3
  414a6e:	or     esi,DWORD PTR [ecx]
  414a70:	aas    
  414a71:	lds    ebp,FWORD PTR [edi]
  414a73:	inc    esi
  414a74:	sbb    cl,BYTE PTR [ecx]
  414a76:	pushf  
  414a77:	jl     0x414a79
  414a79:	sbb    cl,BYTE PTR [ebx+0x25232824]
  414a7f:	and    eax,0x6c01a531
  414a84:	xchg   DWORD PTR [esi],edx
  414a86:	and    DWORD PTR ds:0x93247e31,edx
  414a8c:	sti    
  414a8d:	push   cs
  414a8e:	ret    0x3153
  414a91:	jmp    DWORD PTR [ebx+esi*2]
  414a94:	or     esp,DWORD PTR [esi+ecx*4+0x24ef2be8]
  414a9b:	cwde   
  414a9c:	xor    BYTE PTR [ebp+0x15],bl
  414a9f:	out    0xb6,al
  414aa1:	xor    DWORD PTR ss:[esi+0x5e],ebp
  414aa5:	xlat   BYTE PTR ds:[ebx]
  414aa6:	and    al,0x42
  414aa8:	add    al,0x5b
  414aaa:	or     DWORD PTR [ecx+0x31],eax
  414aad:	xor    ecx,DWORD PTR [ecx]
  414aaf:	jmp    0xb54b0032
  414ab4:	xor    BYTE PTR [edi+0x6042ffb9],dh
  414aba:	and    esi,DWORD PTR [ecx+ebx*8-0x3c]
  414abe:	and    al,0x68
  414ac0:	jmp    0xe9513cff
  414ac5:	xor    cl,BYTE PTR [esp+eax*4-0x67]
  414ac9:	inc    ebp
  414aca:	and    edi,esi
  414acc:	stc    
  414acd:	xor    cl,BYTE PTR [ecx]
  414acf:	add    BYTE PTR [esi+0x7ef218b7],ch
  414ad5:	inc    ecx
  414ad6:	or     al,BYTE PTR [eax]
  414ad8:	jmp    0x71c5970f
  414add:	add    BYTE PTR ds:0x32e9fe23,bl
  414ae3:	or     DWORD PTR [eax],eax
  414ae5:	es scas eax,DWORD PTR es:[edi]
  414ae7:	and    dl,dh
  414ae9:	push   esi
  414aea:	add    DWORD PTR [esi+edi*8],esp
  414aed:	jmp    0xe195db24
  414af2:	mov    ebp,0xb7e969f9
  414af7:	mov    edi,gs
  414af9:	cmp    ah,BYTE PTR [ecx+0x23]
  414afc:	dec    edi
  414afd:	pop    esp
  414afe:	scas   eax,DWORD PTR es:[edi]
  414aff:	das    
  414b00:	repnz es popa 
  414b03:	aam    0x8c
  414b05:	cmp    dl,BYTE PTR fs:[edi]
  414b08:	(bad)  
  414b09:	push   ss
  414b0a:	loop   0x414b2e
  414b0c:	je     0x414b07
  414b0e:	inc    ecx
  414b0f:	popf   
  414b10:	or     eax,DWORD PTR [esi]
  414b12:	(bad)  
  414b13:	or     ebp,DWORD PTR [edx-0x17]
  414b16:	inc    ecx
  414b17:	popf   
  414b18:	pop    ss
  414b19:	test   BYTE PTR ds:0x4a2c82c8,0x17
  414b20:	(bad)  
  414b21:	out    0x35,al
  414b23:	adc    al,0x84
  414b25:	aam    0x2d
  414b27:	or     DWORD PTR [eax],eax
  414b29:	push   0x40
  414b2b:	xor    dl,dh
  414b2d:	into   
  414b2e:	push   ss
  414b2f:	and    al,0xd
  414b31:	add    BYTE PTR [ebp+eax*1-0x1],cl
  414b35:	dec    eax
  414b37:	jg     0x414bac
  414b39:	jno    0x414b94
  414b3b:	or     eax,0xf398858d
  414b40:	std    
  414b41:	inc    DWORD PTR [eax]
  414b43:	pop    eax
  414b44:	add    eax,0x7880fd9
  414b49:	test   eax,eax
  414b4b:	sub    al,0x16
  414b4d:	push   0xfe4e2984
  414b52:	mov    WORD PTR ds:0xf7fffc0d,cs
  414b58:	cmp    al,0xe6
  414b5a:	lds    edx,FWORD PTR [edi+0x7]
  414b5d:	add    BYTE PTR [ebp-0x507cdc68],al
  414b63:	dec    eax
  414b64:	pop    es
  414b65:	add    bh,al
  414b67:	int    0xf0
  414b69:	icebp  
  414b6a:	jmp    edi
  414b6c:	adc    DWORD PTR [eax],eax
  414b6e:	out    dx,eax
  414b6f:	mov    dh,0x84
  414b71:	mov    ?,WORD PTR [ecx-0x77]
  414b74:	pop    es
  414b75:	lea    eax,[ebp-0x210b8]
  414b7b:	enter  0xa0fe,0xf
  414b7f:	sbb    BYTE PTR [edi],al
  414b81:	test   eax,eax
  414b83:	mov    esp,0x2c85c534
  414b88:	(bad)  
  414b89:	std    
  414b8a:	call   FWORD PTR [esi]
  414b8c:	pop    es
  414b8d:	out    dx,eax
  414b8e:	mov    esi,0x416fc0b0
  414b93:	or     BYTE PTR [edx-0xdcfff7d],cl
  414b99:	std    
  414b9a:	push   eax
  414b9b:	xor    BYTE PTR [esi-0x6e27fff3],al
  414ba1:	mov    esi,0x83ca3774
  414ba6:	in     al,0x0
  414ba8:	sti    
  414ba9:	repz std 
  414bab:	pop    es
  414bac:	xor    DWORD PTR [eax],esi
  414bae:	sbb    eax,0xb38459bd
  414bb3:	inc    eax
  414bb4:	xor    DWORD PTR [ebp+0x63beff87],ebx
  414bba:	sub    eax,0xfed4994f
  414bbf:	jmp    DWORD PTR [esi+0x37442ad]
  414bc5:	mov    cl,0x6f
  414bc7:	jecxz  0x414b6b
  414bc9:	sub    DWORD PTR ds:0x6c8b3106,0x74
  414bd0:	dec    ebp
  414bd1:	push   es
  414bd2:	add    al,0xff
  414bd4:	add    al,0x1c
  414bd6:	sub    eax,0x77a31d74
  414bdb:	out    0x62,eax
  414bdd:	fwait
  414bde:	sub    eax,0x31a49cfe
  414be3:	(bad)  
  414be4:	pop    esi
  414be5:	stos   DWORD PTR es:[edi],eax
  414be6:	mov    bh,0xf
  414be8:	push   esi
  414be9:	jge    0x414c11
  414beb:	repnz dec esi
  414bed:	mov    ebx,0xd3449a1a
  414bf2:	sub    eax,0x33613ea
  414bf7:	(bad)  
  414bf8:	mov    esp,0x45742d33
  414bfd:	(bad)  [edi-0x19]
  414c00:	and    dh,bl
  414c02:	sub    eax,0x31fbe4fe
  414c07:	(bad)  
  414c08:	push   ss
  414c09:	add    edi,DWORD PTR [eax-0x3af1fff1]
  414c0f:	es repnz push es
  414c12:	adc    ebx,DWORD PTR [ebx]
  414c14:	jbe    0x414c12
  414c16:	or     ch,BYTE PTR [esi]
  414c18:	(bad)  
  414c19:	mov    esp,0xeefe3213
  414c1e:	pop    es
  414c1f:	xchg   edx,eax
  414c20:	push   cs
  414c21:	xor    DWORD PTR [eax],esi
  414c23:	cmp    eax,ecx
  414c25:	inc    ebp
  414c26:	or     ecx,ebp
  414c28:	(bad)  
  414c29:	stos   DWORD PTR es:[edi],eax
  414c2a:	xor    al,0x69
  414c2c:	dec    eax
  414c2d:	retf   0x1385
  414c30:	jae    0x414cad
  414c32:	enter  0x3e8,0x45
  414c36:	loop   0x414be5
  414c38:	(bad)  
  414c39:	mov    edx,0x3103e908
  414c3e:	out    dx,al
  414c3f:	test   al,0xd4
  414c41:	idiv   BYTE PTR [eax-0x496528a5]
  414c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c48:	pop    ss
  414c49:	loopne 0x414c18
  414c4b:	daa    
  414c4c:	add    al,0xb4
  414c4e:	dec    eax
  414c4f:	lar    ebx,WORD PTR [edx+0x7aaf69e5]
  414c56:	or     ah,bh
  414c58:	add    DWORD PTR [edx+0x63b410fd],ecx
  414c5e:	enter  0x2ce8,0xdd
  414c62:	and    al,0x6d
  414c64:	mov    bh,0x36
  414c66:	xor    DWORD PTR [edi+ebx*2],esp
  414c69:	push   edi
  414c6a:	and    DWORD PTR [ecx-0x29],esi
  414c6d:	dec    edx
  414c6e:	(bad)  
  414c6f:	cli    
  414c70:	sub    al,0x0
  414c72:	mov    ebp,0x36d24d24
  414c77:	push   eax
  414c78:	sub    cl,BYTE PTR [eax]
  414c7a:	xor    DWORD PTR [ecx+esi*2+0x3445b320],edi
  414c81:	call   0x11a5:0x2c8eb326
  414c88:	adc    ecx,ecx
  414c8a:	and    BYTE PTR ss:0x151d757b,bl
  414c91:	mov    bh,0x2e
  414c93:	xor    DWORD PTR [edi+0x2d],esi
  414c96:	jmp    DWORD PTR [eax]
  414c98:	nop
  414c99:	sbb    eax,DWORD PTR [edi+0x252ce8ca]
  414c9f:	pusha  
  414ca0:	jmp    DWORD PTR [eax+0x74fd20f3]
  414ca6:	fisubr DWORD PTR [eax]
  414ca8:	pushf  
  414ca9:	loop   0x414cb0
  414cab:	pop    ds
  414cac:	shr    DWORD PTR [di-0x37],1
  414cb1:	inc    eax
  414cb2:	mov    eax,0x1ae940c8
  414cb7:	jne    0x414cde
  414cb9:	mov    BYTE PTR ds:0x3e514fd0,0x99
  414cc0:	inc    eax
  414cc1:	jmp    0x2200221b
  414cc6:	jb     0x414ce8
  414cc8:	std    
  414cc9:	sbb    al,0x95
  414ccb:	sub    BYTE PTR [edi],dl
  414ccd:	popf   
  414cce:	pop    ebp
  414ccf:	pop    ds
  414cd0:	out    0xb5,eax
  414cd2:	nop
  414cd3:	pop    ds
  414cd4:	inc    BYTE PTR [ebx]
  414cd6:	add    BYTE PTR ds:0x73f862b1,dh
  414cdc:	and    BYTE PTR [esi-0x4a],ah
  414cdf:	mov    ds:0x3300ffc9,eax
  414ce4:	or     DWORD PTR [eax],eax
  414ce6:	imul   edi,DWORD PTR [edx],0x566243e
  414cec:	adc    eax,eax
  414cee:	aad    0x52
  414cf0:	test   al,0x6a
  414cf2:	fdiv   DWORD PTR [ebx+0x20]
  414cf5:	dec    esi
  414cf6:	inc    ecx
  414cf7:	fsub   st,st(5)
  414cf9:	inc    BYTE PTR [esi+0x62]
  414cfc:	sar    dh,1
  414cfe:	hlt    
  414cff:	popf   
  414d00:	enter  0xe940,0x55
  414d04:	xchg   ebp,eax
  414d05:	pop    es
  414d06:	inc    ecx
  414d07:	or     eax,0x3a26fe23
  414d0c:	push   0x21
  414d0e:	push   ds
  414d0f:	pop    ebp
  414d10:	test   al,0x27
  414d12:	cdq    
  414d13:	repz pop ds
  414d15:	std    
  414d16:	aam    0x8d
  414d18:	enter  0x40,0x8
  414d1c:	in     eax,dx
  414d1d:	jae    0x414d27
  414d1f:	inc    eax
  414d20:	and    eax,0x80dffff9
  414d25:	(bad)  
  414d26:	addr16 mov bh,0x5b
  414d29:	aas    
  414d2a:	add    bh,cl
  414d2c:	sbb    DWORD PTR [ebp-0xfae6b8],edi
  414d32:	jne    0x414d04
  414d34:	add    esi,DWORD PTR [eax+0x68f3effb]
  414d3a:	add    BYTE PTR [eax],al
  414d3c:	pusha  
  414d3d:	shr    BYTE PTR [esi+0x41],cl
  414d40:	cwde   
  414d41:	repnz xor edi,DWORD PTR [edi-0x101b9b0]
  414d48:	gs sbb eax,0xf3d39ce6
  414d4e:	std    
  414d4f:	jmp    DWORD PTR ds:0x9075fdf1
  414d55:	add    edx,edi
  414d57:	pop    ds
  414d58:	scas   eax,DWORD PTR es:[edi]
  414d59:	repz mov edx,0x8b550b84
  414d60:	mov    esp,0xdef4c285
  414d65:	repz std 
  414d67:	push   0x48
  414d69:	jge    0x414dc8
  414d6b:	push   DWORD PTR [ebp+0x23]
  414d6e:	out    0x79,al
  414d70:	dec    edi
  414d71:	repnz std 
  414d73:	mov    DWORD PTR [ebp-0x29fa3a19],edx
  414d79:	fs aas 
  414d7b:	add    BYTE PTR [edx+0xb],cl
  414d7e:	add    BYTE PTR [eax],al
  414d80:	popf   
  414d81:	mov    ch,dh
  414d83:	(bad)  
  414d84:	pop    edi
  414d85:	repnz dec esi
  414d87:	push   0x614
  414d8c:	inc    eax
  414d8d:	out    0xb,al
  414d8f:	add    BYTE PTR [eax],bl
  414d91:	adc    DWORD PTR [edx+esi*2],0x31
  414d95:	jno    0x414d99
  414d97:	push   0xffc3822b
  414d9c:	mov    cs,WORD PTR [edi+0x310040a3]
  414da2:	pop    ds
  414da3:	out    dx,eax
  414da4:	mov    esi,0xff027179
  414da9:	sub    BYTE PTR fs:[edx],bl
  414dac:	fist   DWORD PTR [edx+0x27672927]
  414db2:	ret    0xffc4
  414db5:	dec    esi
  414db6:	sub    dh,BYTE PTR [eax+eax*2+0x60a2c831]
  414dbd:	jo     0x414def
  414dbf:	call   0x1cfe:0x82303101
  414dc6:	sub    BYTE PTR [edx],bl
  414dc8:	mov    edi,0x8c296fd2
  414dcd:	lods   al,BYTE PTR ds:[esi]
  414dce:	jg     0x414df8
  414dd0:	dec    BYTE PTR [esi+0x348b1be0]
  414dd6:	xor    BYTE PTR [edx],al
  414dd8:	(bad)  
  414dd9:	xor    al,0xa6
  414ddb:	mov    ds:0x2333140,al
  414de0:	add    BYTE PTR [ecx],dh
  414de2:	lods   eax,DWORD PTR ds:[esi]
  414de3:	jg     0x414ddb
  414de5:	addr16 xchg edi,eax
  414de7:	sub    DWORD PTR [edi-0x37],ecx
  414dea:	and    eax,DWORD PTR [ebx]
  414dec:	add    BYTE PTR [ecx],dh
  414dee:	mov    eax,0x30310c85
  414df3:	call   0x2b68:0x270c315
  414dfa:	inc    edx
  414dfb:	ret    
  414dfc:	dec    esi
  414dfe:	dec    esi
  414dff:	mov    ds:0xefdf3140,eax
  414e04:	mov    esi,0x2717900
  414e09:	jmp    DWORD PTR [eax+ebp*1+0x8d27b1a]
  414e10:	sub    dl,BYTE PTR es:[esi+0x6c49af7]
  414e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e18:	loop   0x414dcf
  414e1a:	jno    0x414e25
  414e1c:	and    DWORD PTR [edx-0x6417376f],0x83e90930
  414e26:	out    0x93,eax
  414e28:	loopne 0x414e45
  414e2a:	jle    0x414e96
  414e2c:	in     eax,dx
  414e2d:	sub    DWORD PTR [ebp-0x30d5227d],esp
  414e33:	sbb    eax,0xc1a1c38
  414e38:	jmp    0xccd50c40
  414e3d:	sub    DWORD PTR ds:0x4c33d111,edi
  414e43:	push   ds
  414e44:	mov    ebp,0xe904703b
  414e49:	into   
  414e4a:	stos   DWORD PTR es:[edi],eax
  414e4b:	sub    al,0x69
  414e4d:	inc    eax
  414e4e:	call   0x95c5:0x16cc38b5
  414e55:	les    eax,FWORD PTR [esi+0x72031a15]
  414e5b:	sbb    eax,0x87abfa5
  414e60:	jmp    0xc99f7f68
  414e65:	mov    ch,0xf1
  414e67:	or     BYTE PTR [esi-0x51],dh
  414e6a:	add    BYTE PTR [esi],dh
  414e6c:	mov    fs,ebx
  414e6e:	pop    esp
  414e6f:	jecxz  0x414e38
  414e71:	call   0xe919e015
  414e76:	add    esi,DWORD PTR [ecx]
  414e78:	mov    eax,edx
  414e7a:	add    eax,0x28e09531
  414e7f:	mov    ebp,0x46765110
  414e84:	sbb    al,0x3d
  414e86:	sbb    ebx,esi
  414e88:	or     DWORD PTR [eax],eax
  414e8a:	jmp    0x41a7fc1
  414e8f:	dec    eax
  414e90:	sbb    edi,esi
  414e92:	pushf  
  414e93:	or     ah,BYTE PTR ds:0x1b59fc8a
  414e99:	mov    ds:0xffc9c44e,al
  414e9e:	test   BYTE PTR [ecx-0x2b],cl
  414ea1:	(bad)  
  414ea2:	call   0x25cc57d9
  414ea7:	xchg   ecx,eax
  414ea8:	sbb    esi,DWORD PTR [ecx+ebp*8]
  414eab:	xor    cl,BYTE PTR [ecx]
  414ead:	add    BYTE PTR [edx+eax*1-0xd1ee05b],dl
  414eb4:	sbb    al,0x66
  414eb6:	rol    BYTE PTR [ecx],0xdc
  414eb9:	(bad)  
  414eba:	cmp    BYTE PTR [ecx+0x32e92491],dl
  414ec0:	or     DWORD PTR [eax],eax
  414ec2:	(bad)  
  414ec3:	fild   WORD PTR [edi+edi*8]
  414ec6:	(bad)  
  414ec7:	mov    bl,0xdb
  414ec9:	cmp    eax,0x721c752d
  414ece:	into   
  414ecf:	add    BYTE PTR [ebp-0x75e2f0ec],ch
  414ed5:	inc    ebx
  414ed6:	inc    esp
  414ed7:	popf   
  414ed8:	xor    ecx,DWORD PTR [ecx]
  414eda:	add    cl,ch
  414edc:	sbb    eax,0x11d4fef9
  414ee1:	xchg   edi,eax
  414ee2:	inc    eax
  414ee3:	jmp    0xfaec2401
  414ee8:	jae    0x414f06
  414eea:	out    0x7d,al
  414eec:	sub    al,0x1c
  414eee:	(bad)  
  414eef:	push   0x16
  414ef1:	hlt    
  414ef2:	jmp    0x7772:0xeb8f7fae
  414ef9:	adc    BYTE PTR [ebx+0x711c22ac],cl
  414eff:	loope  0x414eba
  414f01:	fwait
  414f02:	mov    bh,0x0
  414f04:	sbb    BYTE PTR [eax],cl
  414f06:	add    bh,bh
  414f08:	jmp    0x8:0x4c808d13
  414f0f:	add    BYTE PTR [edi+0x56],al
  414f12:	push   cs
  414f13:	(bad)  
  414f14:	cwde   
  414f15:	lods   al,BYTE PTR ds:[esi]
  414f16:	(bad)  
  414f17:	call   FWORD PTR [eax]
  414f19:	test   DWORD PTR [ebx],edi
  414f1b:	stos   DWORD PTR es:[edi],eax
  414f1c:	fwait
  414f1d:	inc    esi
  414f1e:	(bad)  
  414f1f:	call   FWORD PTR [esi+esi*8+0x557f35fe]
  414f26:	aas    
  414f27:	add    bh,ah
  414f29:	sub    eax,0x78973a9
  414f2e:	call   0xfe3251e4
  414f33:	mov    eax,0x7d800
  414f38:	add    BYTE PTR ds:0x6c0022c7,al
  414f3e:	xchg   esp,eax
  414f3f:	add    eax,DWORD PTR [eax]
  414f41:	enter  0x7,0x83
  414f45:	fisttp WORD PTR [eax]
  414f47:	cmp    DWORD PTR [edi],0xffffff98
  414f4a:	adc    al,BYTE PTR [ebx-0x21c18c1]
  414f50:	mov    ecx,DWORD PTR [ebp-0xf]
  414f53:	pop    ebp
  414f54:	leave  
  414f55:	fimul  DWORD PTR [eax]
  414f57:	add    BYTE PTR [ebp+0x3],dl
  414f5a:	add    DWORD PTR [edx+0x4e4aa4c4],eax
  414f60:	pop    eax
  414f61:	xor    BYTE PTR [ebx-0xa],dl
  414f64:	inc    eax
  414f65:	pop    eax
  414f66:	out    dx,eax
  414f67:	jo     0x414f6a
  414f69:	fwait
  414f6a:	jecxz  0x414ef5
  414f6c:	leave  
  414f6d:	rcr    ebp,cl
  414f6f:	sub    esi,esi
  414f71:	rcr    ebp,cl
  414f73:	data16 cli 
  414f75:	ja     0x414fa0
  414f77:	dec    DWORD PTR [edx-0x3bc6bff]
  414f7d:	xor    DWORD PTR [edi-0x58e415c4],esp
  414f83:	cmp    al,0x2
  414f85:	not    DWORD PTR [edi-0x2645b0c4]
  414f8b:	sbb    edi,edi
  414f8d:	sub    dh,BYTE PTR [eax]
  414f8f:	add    cl,BYTE PTR [ebx-0x37868718]
  414f95:	xor    ch,dh
  414f97:	jp     0x414f61
  414f99:	add    BYTE PTR [esi],al
  414f9b:	outs   dx,BYTE PTR ds:[esi]
  414f9c:	cmp    BYTE PTR es:[esp+esi*8+0x3],0x75
  414fa2:	adc    DWORD PTR [ebx+0x3b],ebp
  414fa5:	ret    0x9784
  414fa8:	pop    ss
  414fa9:	dec    edi
  414faa:	mov    DWORD PTR [eax-0x74],edi
  414fad:	div    DWORD PTR [ecx+0x30]
  414fb0:	sub    dh,BYTE PTR [ecx+0x30]
  414fb3:	out    dx,eax
  414fb4:	mov    dh,BYTE PTR es:[eax+ebx*1-0x7]
  414fb9:	mov    edi,0x4192c3d
  414fbe:	mov    edi,0x71072428
  414fc3:	mov    al,0xea
  414fc5:	jmp    DWORD PTR ds:0x2dc13b5a
  414fcb:	xor    bh,cl
  414fcd:	mov    cl,BYTE PTR [ebp+0x2f33eaf]
  414fd3:	add    ah,cl
  414fd5:	addr16 jno 0x415040
  414fd8:	ret    0x7eff
  414fdb:	inc    BYTE PTR [ebx+eax*8]
  414fde:	jle    0x41504b
  414fe0:	mov    edi,0x23031f3
  414fe5:	add    BYTE PTR [edx],bl
  414fe7:	addr16 ja 0x41502e
  414fea:	add    BYTE PTR gs:[edi],ah
  414fed:	je     0x415018
  414fef:	mov    BYTE PTR ds:0x7f30310a,bh
  414ff5:	mov    edi,0x271c08c9
  414ffa:	mov    ebp,0x8a5110
  414fff:	daa    
  415000:	sbb    dl,BYTE PTR [ebp+0x7c]
  415003:	in     eax,dx
  415004:	and    BYTE PTR [eax-0x1ab2e92d],ch
  41500a:	es daa 
  41500c:	nop
  41500d:	mov    ds:0x34941f2f,eax
  415012:	sbb    ebp,DWORD PTR [esi+ecx*1+0x493a03e9]
  415019:	pushf  
  41501a:	clts   
  41501c:	xchg   esp,eax
  41501d:	and    BYTE PTR [esi],ah
  41501f:	test   DWORD PTR ds:0xfa0e1bb8,edx
  415025:	or     eax,0x493ef26
  41502a:	sbb    esp,DWORD PTR [edx+0xf]
  41502d:	jmp    0xe0d52e35
  415032:	sbb    esp,DWORD PTR [edx+0x0]
  415035:	out    dx,al
  415036:	and    eax,0x4dc9bb3
  41503b:	cmp    eax,0x434150fb
  415040:	enter  0x24e8,0x3d
  415044:	adc    eax,0x93b19c0
  415049:	jmp    0xe3d63746
  41504e:	push   0x3e90931
  415053:	xchg   esi,eax
  415054:	xchg   ebx,eax
  415055:	mov    ah,0x1c
  415057:	adc    al,0xfa
  415059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41505a:	and    eax,0x3b4145bb
  41505f:	jo     0x415065
  415061:	jmp    0x2cec5134
  415066:	cmp    ah,cl
  415068:	(bad)  
  415069:	mov    eax,0x1166c47f
  41506e:	cli    
  41506f:	add    dh,BYTE PTR [edx+0x19]
  415072:	push   DWORD PTR [ebp-0x7a]
  415075:	add    eax,ebp
  415077:	cmp    BYTE PTR [edx],bh
  415079:	sbb    bh,dh
  41507b:	ror    DWORD PTR [edx-0x5f],cl
  41507e:	adc    DWORD PTR [ecx-0x2302e68d],esi
  415084:	cmp    ah,BYTE PTR [ecx]
  415086:	(bad)  
  415087:	repnz push ebp
  415089:	pop    ss
  41508a:	imul   esi,ecx,0xa847dbca
  415090:	xor    bl,BYTE PTR [eax]
  415092:	je     0x415075
  415094:	cmp    ch,BYTE PTR [eax]
  415096:	sbb    ch,BYTE PTR [esi]
  415098:	push   esp
  415099:	pop    ss
  41509a:	je     0x41508d
  41509c:	sub    bl,BYTE PTR [ebx-0x4]
  41509f:	push   ds
  4150a0:	push   esp
  4150a1:	pusha  
  4150a2:	add    cl,ch
  4150a4:	xor    cl,BYTE PTR [ecx]
  4150a6:	leave  
  4150a7:	sub    esi,DWORD PTR [ecx]
  4150a9:	or     DWORD PTR [ebp+0x72],edx
  4150ac:	dec    ecx
  4150ad:	mov    eax,ebx
  4150af:	add    DWORD PTR ds:0xa5067c1,eax
  4150b5:	fdivr  st,st(7)
  4150b7:	lock or BYTE PTR [ecx],0xc3
  4150bb:	out    0xd,al
  4150bd:	popf   
  4150be:	or     ebx,esi
  4150c0:	(bad)  
  4150c1:	adc    al,ch
  4150c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150c4:	das    
  4150c5:	sbb    dh,bh
  4150c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c8:	add    bh,ch
  4150ca:	adc    al,0x0
  4150cc:	jmp    0x24ce5a03
  4150d1:	dec    ebp
  4150d2:	enter  0x7e67,0xe1
  4150d6:	leave  
  4150d7:	inc    eax
  4150d9:	pmulhuw mm7,mm6
  4150dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150dd:	mov    DWORD PTR [eax+0x73],ebx
  4150e0:	retf   
  4150e1:	bound  ecx,QWORD PTR [ebx-0x61dd6e84]
  4150e7:	adc    eax,0xfeb94503
  4150ec:	add    BYTE PTR [ebp+0x20],ah
  4150ef:	out    0x38,al
  4150f1:	jg     0x4150e0
  4150f3:	std    
  4150f4:	or     ecx,DWORD PTR [eax+0x15c70568]
  4150fa:	loope  0x4150fa
  4150fc:	call   FWORD PTR [eax+0xc]
  4150ff:	call   0xfe2e8fc5
  415104:	mov    eax,DWORD PTR [ebp+0x10c2c7f0]
  41510a:	or     al,0x55
  41510c:	mov    edi,DWORD PTR [ecx+edi*1+0x4e]
  415110:	pop    eax
  415111:	add    dh,ah
  415113:	test   DWORD PTR [eax+0x8],0x5b0170e4
  41511a:	in     eax,dx
  41511b:	sub    ebx,ebx
  41511d:	dec    edi
  41511e:	addr16 push es
  415120:	call   0x3f3dee
  415125:	adc    ecx,esp
  415127:	or     eax,0xc6684
  41512c:	add    BYTE PTR [eax],al
  41512e:	das    
  41512f:	addr16 push es
  415131:	call   0x4056e2
  415136:	ror    ebx,cl
  415138:	jae    0x41513f
  41513a:	xor    DWORD PTR [edx-0x15270002],edx
  415140:	jae    0x41514e
  415142:	fbstp  TBYTE PTR [ecx+0x6]
  415145:	call   0x3f3db5
  41514a:	jg     0x4151bd
  41514c:	push   es
  41514d:	call   0x405b5b
  415152:	mov    ds:0x730273cb,eax
  415157:	jge    0x415156
  415159:	jne    0x4150eb
  41515b:	jecxz  0x41517e
  41515d:	sbb    al,0xcf
  41515f:	jmp    0x41516a
  415161:	shl    BYTE PTR ds:0x3163eb0f,0x7f
  415168:	cwde   
  415169:	pop    es
  41516a:	pop    ecx
  41516b:	cli    
  41516c:	(bad)  
  41516d:	(bad)  
  41516e:	data16 sbb al,BYTE PTR [edx+0x74]
  415172:	xor    edi,DWORD PTR [ebx-0x48]
  415175:	addr16 jmp esi
  415178:	(bad)  
  415179:	dec    DWORD PTR [edi+0x1c]
  41517c:	or     ch,al
  41517e:	jge    0x41518e
  415180:	and    edi,esi
  415182:	sub    ah,dl
  415184:	cwde   
  415185:	add    DWORD PTR [edx+0x63],ecx
  415188:	and    DWORD PTR [ecx+edi*1-0x38],esi
  41518c:	pop    ss
  41518d:	sbb    ah,BYTE PTR [esi]
  41518f:	ror    BYTE PTR [esi],1
  415191:	rol    BYTE PTR [eax],0xa4
  415194:	and    ch,BYTE PTR ds:0xa561633
  41519a:	call   0xfe62961c
  41519f:	cmp    ah,al
  4151a1:	cwde   
  4151a2:	add    DWORD PTR [edx],ecx
  4151a4:	dec    edi
  4151a5:	and    DWORD PTR [ecx+ebp*1+0x8],esi
  4151a9:	sbb    edx,DWORD PTR [esi+ebp*8]
  4151ac:	pop    es
  4151ad:	xchg   edi,esi
  4151af:	adc    DWORD PTR [edi+0x1bf12b04],edx
  4151b5:	inc    edx
  4151b6:	jae    0x4151fa
  4151b8:	pop    ebp
  4151b9:	add    al,BYTE PTR [eax]
  4151bb:	and    DWORD PTR [eax],esp
  4151bd:	xchg   ebp,eax
  4151be:	or     ecx,DWORD PTR [edx+0x31000221]
  4151c4:	cmp    eax,DWORD PTR [edi]
  4151c6:	mov    ebx,0x22032
  4151cb:	mov    edx,0x73c8bd63
  4151d0:	sbb    BYTE PTR [edx],al
  4151d2:	push   ebp
  4151d3:	stos   BYTE PTR es:[edi],al
  4151d4:	inc    esp
  4151d5:	mov    dl,0x57
  4151d7:	or     DWORD PTR [ecx+0x58313f1c],ebx
  4151dd:	xchg   esp,eax
  4151de:	add    BYTE PTR [edx+0x9],dh
  4151e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151e2:	and    al,BYTE PTR ds:0x2e989e05
  4151e8:	and    edx,ecx
  4151ea:	and    ch,BYTE PTR [edi+0x16]
  4151ed:	loope  0x415232
  4151ef:	(bad)  
  4151f1:	test   DWORD PTR [eax+0xbf3162a],ebx
  4151f7:	add    BYTE PTR [ecx-0x6],cl
  4151fa:	jne    0x41521e
  4151fc:	dec    edi
  4151fd:	add    ch,BYTE PTR [ecx-0x24e9c468]
  415203:	(bad)  
  415205:	pushf  
  415206:	lock sub esi,DWORD PTR [edx]
  415209:	push   ss
  41520a:	push   ebp
  41520b:	and    bh,cl
  41520d:	dec    edx
  41520e:	loopne 0x415213
  415210:	jl     0x415194
  415212:	push   esp
  415213:	xchg   dl,dh
  415215:	sub    al,0x99
  415217:	mov    edx,0x1dc0b166
  41521c:	or     cl,cl
  41521e:	call   0x2a49d23e
  415223:	and    cl,BYTE PTR [ebx+0x32]
  415226:	adc    dh,bl
  415228:	jae    0x415240
  41522a:	adc    eax,0xe825754a
  41522f:	add    esi,DWORD PTR [ecx]
  415231:	or     DWORD PTR [eax+ecx*8-0x36],esi
  415235:	mov    eax,0x16423210
  41523a:	cmc    
  41523b:	test   DWORD PTR [ebp+0x25],ecx
  41523e:	call   0x2bc570db
  415243:	xor    BYTE PTR [esi+0x21],ch
  415246:	enter  0xb7f8,0x15
  41524a:	imul   ebx,DWORD PTR [edi+0xb54089a],0xb4d4cbb4
  415254:	xchg   esi,eax
  415255:	aaa    
  415256:	aam    0x20
  415258:	xchg   edi,eax
  415259:	mov    edi,edi
  41525b:	xor    eax,DWORD PTR [eax]
  41525d:	inc    ecx
  41525e:	push   ss
  41525f:	or     eax,0xfe15a365
  415264:	jmp    0x3a311f18
  415269:	push   eax
  41526a:	popf   
  41526b:	jmp    0x4151ee
  41526d:	xchg   esi,eax
  41526e:	push   ss
  41526f:	dec    BYTE PTR [esi-0x3ffe254]
  415275:	mov    edi,0x72266156
  41527a:	adc    eax,0xccf810e9
  41527f:	jecxz  0x415264
  415281:	xor    cl,BYTE PTR [ecx]
  415283:	add    BYTE PTR [esi],ch
  415285:	jbe    0x4152b4
  415287:	(bad)  
  415288:	call   0xacce5bbf
  41528d:	pop    edx
  41528e:	(bad)  
  41528f:	(bad)  
  415290:	aam    0x56
  415292:	mov    ebx,0x13f4d5e7
  415297:	(bad)  
  415298:	bnd jb 0x415233
  41529b:	punpckhdq mm5,QWORD PTR [esi+0x34b4ff2c]
  4152a2:	adc    al,0x74
  4152a4:	adc    DWORD PTR [ebp-0x1d],ecx
  4152a7:	cld    
  4152a8:	push   ds
  4152a9:	push   eax
  4152aa:	jg     0x415283
  4152ac:	push   ss
  4152ad:	(bad)  
  4152ae:	sub    al,0xe7
  4152b0:	jbe    0x41529b
  4152b2:	adc    edi,esi
  4152b4:	repnz sbb eax,0xb66a149d
  4152ba:	sub    bh,bh
  4152bc:	jl     0x4152df
  4152be:	adc    al,0x4c
  4152c0:	add    eax,0x128c9500
  4152c5:	jmp    0xf21973fc
  4152ca:	xor    cl,BYTE PTR [ecx]
  4152cc:	jmp    0x41526c
  4152ce:	pop    ebp
  4152cf:	or     DWORD PTR [edi+0x69],eax
  4152d2:	xchg   ecx,eax
  4152d3:	adc    al,0x73
  4152d5:	add    BYTE PTR [edx+0x41],dh
  4152d8:	jle    0x415319
  4152da:	mov    BYTE PTR [edx+eax*1+0xb],bh
  4152de:	mov    ds:0xa30b9c7c,eax
  4152e3:	jl     0x4152f3
  4152e5:	push   0x78
  4152e7:	add    DWORD PTR [ebx-0x10],0x38
  4152eb:	gs mov ch,0x73
  4152ee:	sbb    DWORD PTR ds:0xe9715de8,ecx
  4152f4:	std    
  4152f5:	call   FWORD PTR [ebp-0x1c]
  4152f8:	out    0x50,al
  4152fa:	jl     0x4152e5
  4152fc:	std    
  4152fd:	mov    ebx,DWORD PTR [ebx-0x6436a6b7]
  415303:	pop    ebx
  415304:	mov    esp,ebp
  415306:	leave  
  415307:	retf   
  415308:	sahf   
  415309:	(bad)  
  41530a:	xlat   BYTE PTR ds:[ebx]
  41530b:	call   0x5029a965
  415310:	data16 in al,dx
  415312:	or     DWORD PTR [eax-0x2],0xfffffff7
  415316:	fiadd  DWORD PTR [esi]
  415318:	ret    
  415319:	call   DWORD PTR [edi+0x184145a5]
  41531f:	mov    BYTE PTR ds:0xc98be700,bh
  415325:	add    DWORD PTR [eax],eax
  415327:	or     BYTE PTR [eax],cl
  415329:	lea    eax,[ebp-0x215e4]
  41532f:	test   al,0x50
  415331:	out    0xa7,al
  415333:	imul   eax
  415335:	std    
  415336:	or     ecx,DWORD PTR [eax]
  415338:	stc    
  415339:	and    DWORD PTR [ecx+ecx*8+0x5830007],0xfffffffc
  415341:	cld    
  415342:	call   edi
  415344:	push   es
  415345:	je     0x41618a
  41534b:	inc    ebp
  41534c:	and    BYTE PTR [esi+0x1e3b31fe],0x4f
  415353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415354:	jl     0x41536d
  415356:	std    
  415357:	sahf   
  415358:	dec    edx
  415359:	sub    eax,DWORD PTR [ecx+0x3a]
  41535c:	push   ebx
  41535d:	push   ds
  41535e:	sub    al,BYTE PTR [edi-0x785ca758]
  415364:	bound  ebx,QWORD PTR [esi]
  415366:	jmp    0x43ad:0xb60d3446
  41536d:	push   0xfffffffd
  41536f:	outs   dx,BYTE PTR ds:[esi]
  415370:	jp     0x415325
  415372:	addr16 mov ch,dh
  415375:	(bad)  
  415376:	jmp    FWORD PTR [ebp+0x56fd41a4]
  41537c:	xchg   edx,eax
  41537d:	mov    bl,0xe7
  41537f:	(bad)  
  415380:	sub    DWORD PTR [edx],eax
  415382:	add    BYTE PTR [edx-0x4b72f093],dh
  415388:	fistp  WORD PTR ds:0x513600fe
  41538e:	sbb    eax,0x1ebad5b4
  415393:	(bad)  
  415394:	sbb    DWORD PTR [eax],ecx
  415396:	in     al,0xfe
  415398:	push   ds
  415399:	call   0x451e:0xd417a388
  4153a0:	mov    dl,0xda
  4153a2:	repz jno 0x415392
  4153a5:	jecxz  0x4153ff
  4153a7:	repz (bad) 
  4153a9:	jmp    0x4153c9
  4153ab:	out    0x4b,eax
  4153ad:	sbb    bl,BYTE PTR ds:0x5ba5f6fe
  4153b3:	std    
  4153b4:	out    0x3,al
  4153b6:	add    al,0x0
  4153b8:	xor    DWORD PTR [eax],esp
  4153ba:	test   al,0x1
  4153bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153bd:	lods   eax,DWORD PTR ds:[esi]
  4153be:	pop    ebx
  4153bf:	std    
  4153c0:	into   
  4153c1:	sbb    esi,DWORD PTR [edx+0x1c1c7cfe]
  4153c7:	(bad)  
  4153c8:	mov    esi,0x228fd109
  4153cd:	adc    bl,ch
  4153cf:	or     dh,BYTE PTR [ecx+0x2]
  4153d2:	ins    DWORD PTR es:[edi],dx
  4153d3:	sbb    esp,DWORD PTR [esi-0x227b17ee]
  4153d9:	push   ecx
  4153da:	(bad)  
  4153db:	push   ds
  4153dc:	xchg   edi,eax
  4153dd:	les    esp,FWORD PTR [edx]
  4153df:	add    al,0x31
  4153e1:	add    ch,BYTE PTR [ebx+ebp*1-0x7a]
  4153e5:	adc    ch,al
  4153e7:	nop
  4153e8:	mov    ch,0xe
  4153ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153eb:	push   ds
  4153ec:	ja     0x4153a7
  4153ee:	adc    BYTE PTR [eax],cl
  4153f0:	add    BYTE PTR [eax],dh
  4153f2:	or     ecx,ebp
  4153f4:	sub    edi,DWORD PTR [eax]
  4153f6:	or     ch,cl
  4153f8:	add    ebp,DWORD PTR [edx]
  4153fa:	dec    ecx
  4153fb:	cmc    
  4153fc:	xchg   DWORD PTR [edi+0x9],esp
  4153ff:	jmp    0xe84e6007
  415404:	add    esi,DWORD PTR [ecx]
  415406:	add    ah,BYTE PTR [esi+0x47]
  415409:	ds adc ch,al
  41540c:	sub    esp,DWORD PTR [edx-0x7efc16f6]
  415412:	mov    eax,ds:0x971923c
  415417:	pop    esp
  415418:	mov    al,dh
  41541a:	adc    al,BYTE PTR [ebp+0x1e]
  41541d:	and    WORD PTR [edx],si
  415420:	push   es
  415421:	xor    DWORD PTR [ecx],ecx
  415423:	push   0x47
  415425:	cmp    bl,BYTE PTR [edi+0xdb590e8]
  41542b:	es push ds
  41542d:	idiv   DWORD PTR [eax+0x9343810]
  415433:	jmp    0xe4f01c8
  415438:	push   ds
  415439:	fistp  QWORD PTR [eax+0x120c2210]
  41543f:	std    
  415440:	or     ecx,esi
  415442:	fwait
  415443:	dec    eax
  415445:	call   0x8484:0x32a8476e
  41544c:	loop   0x415465
  41544e:	adc    edi,esi
  415450:	cmp    DWORD PTR [ebp-0xb],ebx
  415453:	push   ds
  415454:	(bad)  
  415455:	add    BYTE PTR [ebp+eax*4-0x6c],al
  415459:	stos   DWORD PTR es:[edi],eax
  41545a:	aas    
  41545b:	adc    edi,esi
  41545d:	sbb    ebx,ebp
  41545f:	sub    DWORD PTR [ebx-0x22],esp
  415462:	sub    eax,0xb7daea13
  415467:	mov    ecx,es
  415469:	scas   eax,DWORD PTR es:[edi]
  41546a:	sbb    al,0x13
  41546c:	dec    edi
  41546d:	je     0x41541d
  41546f:	push   cs
  415470:	std    
  415471:	sahf   
  415472:	dec    esp
  415473:	ret    0x92e7
  415476:	addr16 adc bh,dh
  415479:	pusha  
  41547a:	mov    dh,0x4d
  41547c:	std    
  41547d:	xchg   BYTE PTR [ebx+edx*1],dh
  415480:	mov    ah,0x3d
  415482:	das    
  415483:	adc    edi,esi
  415485:	jbe    0x415465
  415487:	adc    eax,0x2a1c6efd
  41548c:	out    dx,eax
  41548d:	call   DWORD PTR ds:0xc9290a13
  415493:	(bad)  [edi+0x49]
  415496:	ror    cl,0xff
  415499:	inc    eax
  41549a:	cs pop es
  41549c:	add    cl,ch
  41549e:	loop   0x415448
  4154a0:	fistp  QWORD PTR [edx+0x7cfd10f3]
  4154a6:	cdq    
  4154a7:	push   cs
  4154a8:	(bad)  
  4154a9:	cs dec ebp
  4154ab:	bound  esp,QWORD PTR [esi]
  4154ad:	es adc al,0xa2
  4154b0:	add    BYTE PTR [ebx+0x15ffa332],dl
  4154b6:	jle    0x41550c
  4154b8:	std    
  4154b9:	push   cs
  4154ba:	add    BYTE PTR [eax+ebp*4],bh
  4154bd:	mov    ecx,0xfe4ba000
  4154c2:	imul   ebx,eax,0xd8076ee4
  4154c8:	or     al,0xff
  4154ca:	mov    ch,0xc
  4154cc:	out    dx,eax
  4154cd:	std    
  4154ce:	jmp    eax
  4154d0:	or     DWORD PTR [ebx],ebx
  4154d2:	dec    DWORD PTR [edi+0x7ea4b3ed]
  4154d8:	in     eax,dx
  4154d9:	std    
  4154da:	call   0x3e675f
  4154df:	outs   dx,DWORD PTR ds:[esi]
  4154e0:	mov    bh,0xf2
  4154e2:	dec    bh
  4154e4:	in     eax,dx
  4154e5:	out    0x6c,al
  4154e7:	push   0xffffffed
  4154e9:	std    
  4154ea:	cld    
  4154eb:	jnp    0x4154b9
  4154ed:	mov    bh,0xff
  4154ef:	iret   
  4154f0:	in     eax,dx
  4154f1:	std    
  4154f2:	repnz (bad) 
  4154f4:	xor    eax,DWORD PTR ds:0xfc36d50f
  4154fa:	jmp    FWORD PTR [edi-0x7436a2b2]
  415500:	push   edi
  415501:	mov    esp,ebp
  415503:	fcmovnb st,st(7)
  415505:	out    dx,al
  415506:	push   eax
  415507:	and    BYTE PTR [ebp-0x27],bl
  41550a:	std    
  41550b:	or     BYTE PTR ds:0xc94972f8,al
  415511:	std    
  415512:	mov    ebp,DWORD PTR [edx-0x64]
  415515:	add    ax,0xc19
  415519:	add    al,ch
  41551b:	aas    
  41551c:	adc    bh,ch
  41551e:	inc    DWORD PTR [eax]
  415520:	js     0x4154a3
  415522:	rcl    BYTE PTR [eax-0x6f05b87f],1
  415528:	xchg   ebx,eax
  415529:	fimul  DWORD PTR [esi+0xb1568]
  41552f:	add    BYTE PTR [eax],ah
  415531:	mov    dl,0x18
  415533:	dec    DWORD PTR [edi-0x64]
  415536:	mov    edx,edx
  415538:	xor    DWORD PTR [ecx-0x763e103b],ebp
  41553e:	add    eax,0x2a223101
  415543:	test   al,0x2b
  415545:	bndldx bnd1,[edx-0x2e784e1d]
  41554c:	test   al,0x64
  41554e:	sbb    cl,BYTE PTR [edx-0x70ca651d]
  415554:	sbb    DWORD PTR [esi],esp
  415556:	add    eax,DWORD PTR [eax]
  415558:	xor    DWORD PTR [edi],esi
  41555a:	nop
  41555b:	sti    
  41555c:	or     esp,DWORD PTR [edx]
  41555e:	sub    dl,BYTE PTR [ebx+0x2f]
  415561:	and    al,BYTE PTR [edx]
  415563:	nop
  415564:	mov    edx,0x86d18e73
  415569:	int3   
  41556a:	adc    esp,DWORD PTR [edi+0x35]
  41556d:	and    DWORD PTR [edx],eax
  41556f:	add    BYTE PTR [ecx+0x3100008d],cl
  415575:	sbb    eax,DWORD PTR [edx+0x73]
  415578:	inc    ecx
  415579:	stos   DWORD PTR es:[edi],eax
  41557a:	xor    eax,0x9672c98f
  41557f:	inc    eax
  415580:	xor    DWORD PTR [edi+0x5900ef90],eax
  415586:	fild   DWORD PTR [eax]
  415588:	add    BYTE PTR [ecx],dh
  41558a:	stos   DWORD PTR es:[edi],eax
  41558b:	xor    eax,0x40c3169
  415590:	push   0x33
  415592:	cmp    al,0x2
  415594:	push   0x32
  415596:	cmp    BYTE PTR [edx],al
  415598:	add    BYTE PTR [ecx],dh
  41559a:	loopne 0x4155b6
  41559c:	je     0x4155bf
  41559e:	leave  
  41559f:	adc    BYTE PTR [ebx],al
  4155a1:	xor    DWORD PTR [eax],esp
  4155a3:	mov    eax,DWORD PTR [ebp+eax*1+0x61]
  4155a7:	or     eax,0x195c7cc0
  4155ac:	je     0x4155ab
  4155ae:	fist   WORD PTR [eax+0x10a09ef]
  4155b4:	add    DWORD PTR [ecx],esi
  4155b6:	or     DWORD PTR [ebx+0x160958b7],edx
  4155bc:	xchg   ecx,eax
  4155bd:	into   
  4155be:	and    DWORD PTR [edx+0x2],edi
  4155c1:	xor    DWORD PTR [ecx],ecx
  4155c3:	repnz inc ebx
  4155c5:	inc    edx
  4155c6:	std    
  4155c7:	test   al,0xab
  4155c9:	ret    
  4155ca:	call   0xffec:0x216103a7
  4155d1:	mov    dh,0xe
  4155d3:	push   edx
  4155d4:	add    al,0x1b
  4155d6:	or     DWORD PTR [ebx+0x6],edx
  4155d9:	sbb    ecx,DWORD PTR [ecx]
  4155db:	inc    ebx
  4155dc:	pop    es
  4155dd:	or     DWORD PTR [ecx],ecx
  4155df:	jmp    0x3b4fc6e7
  4155e4:	adc    al,0x96
  4155e6:	pop    esi
  4155e7:	in     al,0x3
  4155e9:	add    BYTE PTR [ecx],dh
  4155eb:	sub    BYTE PTR [ebx],0x10
  4155ee:	ds xchg ebp,eax
  4155f0:	inc    ecx
  4155f1:	lods   al,BYTE PTR ds:[esi]
  4155f2:	jp     0x41558e
  4155f4:	daa    
  4155f5:	add    al,0x59
  4155f7:	push   esi
  4155f8:	in     al,0x3
  4155fa:	xor    DWORD PTR [ecx-0x381ce800],edi
  415600:	call   0x9056331f
  415605:	fsub   DWORD PTR ds:0x47b37d0e
  41560b:	xchg   esp,eax
  41560c:	jl     0x415639
  41560e:	mov    ds:0xd903e905,al
  415613:	add    DWORD PTR [ecx],ebp
  415615:	nop
  415616:	xor    BYTE PTR [edx],ah
  415618:	test   eax,0xc00d9d1a
  41561d:	retf   
  41561e:	mov    ds:0x9d1ae8c8,al
  415623:	adc    DWORD PTR [eax+0x48],edx
  415626:	xor    eax,0xf286e909
  41562b:	cld    
  41562c:	inc    eax
  41562e:	into   
  41562f:	cdq    
  415630:	inc    eax
  415631:	jmp    0xe9449680
  415636:	xor    al,BYTE PTR [edx]
  415638:	rcl    BYTE PTR [ebp-0x651b5a34],0xf5
  41563f:	or     eax,0xa6d014e
  415644:	add    cl,ch
  415646:	aas    
  415647:	dec    ecx
  415648:	jae    0x415624
  41564a:	xchg   esp,eax
  41564b:	or     eax,0x1b00e968
  415650:	xchg   ebp,eax
  415651:	imul   esi
  415653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415654:	sbb    eax,0xc87da367
  415659:	call   DWORD PTR [edx+0x2d]
  41565c:	push   cs
  41565d:	iret   
  41565e:	(bad)  
  41565f:	scas   al,BYTE PTR es:[edi]
  415660:	adc    edi,esp
  415662:	push   ecx
  415663:	call   0xe71d:0xbec6fe0e
  41566a:	cmp    DWORD PTR [edx-0x514901f2],ecx
  415670:	adc    eax,0xe7a41e7
  415675:	(bad)  
  415676:	mov    al,0xf4
  415678:	mov    ah,0x8a
  41567a:	lea    ebp,[ecx+ecx*2-0x4a5ac521]
  415681:	addr16 sbb al,0x38
  415684:	into   
  415685:	inc    DWORD PTR [eax+0x7ec308a7]
  41568b:	lods   al,BYTE PTR ds:[esi]
  41568c:	int3   
  41568d:	dec    esp
  41568e:	and    dh,BYTE PTR [edx+0xd]
  415691:	(bad)  
  415692:	cmc    
  415693:	sub    ecx,DWORD PTR [edx-0x36024fc4]
  415699:	(bad)  
  41569a:	call   0x296c5c56
  41569f:	fadd   QWORD PTR [ecx-0x3e]
  4156a2:	es (bad) 
  4156a4:	adc    bh,bh
  4156a6:	call   FWORD PTR [eax]
  4156a8:	or     DWORD PTR [eax],eax
  4156aa:	(bad)  
  4156ab:	int    0xf0
  4156ad:	(bad)  
  4156ae:	dec    DWORD PTR [eax]
  4156b0:	or     edi,eax
  4156b2:	inc    ebp
  4156b3:	add    BYTE PTR [eax*1-0x36280000],dh
  4156ba:	inc    ebx
  4156bb:	hlt    
  4156bc:	fmul   DWORD PTR [eax]
  4156be:	add    BYTE PTR [eax],al
  4156c0:	cmovl  ebp,esi
  4156c3:	add    al,cl
  4156c5:	or     BYTE PTR [eax],al
  4156c7:	lea    ebx,[ebp-0x7272b108]
  4156cd:	cld    
  4156ce:	dec    esi
  4156cf:	lea    ecx,[ebp-0x3895b11c]
  4156d5:	add    DWORD PTR [ebx-0x4],0x68
  4156d9:	pop    ebx
  4156da:	add    BYTE PTR [edx-0x65],ch
  4156dd:	pop    esi
  4156de:	(bad)  
  4156df:	(bad)  
  4156e0:	popf   
  4156e1:	inc    ebx
  4156e2:	dec    ecx
  4156e3:	inc    ecx
  4156e4:	mov    BYTE PTR [edi+0x43],bh
  4156e7:	call   0x127ca07
  4156ec:	cmp    al,0x0
  4156ee:	cmp    DWORD PTR [ebp+0x70],0x88fffede
  4156f5:	jnp    0x415769
  4156f7:	dec    DWORD PTR [ebp-0xf]
  4156fa:	lea    eax,[ebp-0x70]
  4156fd:	test   DWORD PTR [ebx-0x8],edi
  415700:	dec    eax
  415701:	jl     0x41575b
  415703:	mov    eax,DWORD PTR ds:0xb73fe9ed
  415709:	jne    0x415771
  41570b:	call   0x3e7689
  415710:	ror    DWORD PTR [edx-0x22],1
  415713:	(bad)  
  415714:	jnp    0x4156f6
  415716:	adc    eax,0xf1970029
  41571b:	or     eax,eax
  41571d:	cld    
  41571e:	and    al,0x87
  415720:	inc    ebp
  415721:	xor    DWORD PTR [esi-0x14f6f454],edi
  415727:	cli    
  415728:	dec    BYTE PTR [esi]
  41572a:	ret    
  41572b:	(bad)  
  41572c:	fbstp  TBYTE PTR [esi-0x7b00f59f]
  415732:	mov    esi,0xdb2d3f87
  415737:	int    0xae
  415739:	bound  esp,QWORD PTR [ecx+0x2]
  41573c:	(bad)  
  41573d:	xor    DWORD PTR [edi+0x22707267],edi
  415743:	add    edx,0x5d
  415746:	sti    
  415747:	(bad)
  41574a:	test   BYTE PTR [esi],ah
  41574c:	(bad)  
  41574d:	cmp    eax,0xbd7417c7
  415752:	adc    ch,ah
  415754:	dec    eax
  415755:	push   0x61
  415757:	add    al,bh
  415759:	hlt    
  41575a:	and    eax,0x22310003
  41575f:	cmp    DWORD PTR [ecx+ecx*4+0x47],0x3
  415764:	add    BYTE PTR [ecx],dh
  415766:	mov    ch,0x0
  415768:	jmp    0xfe579a5a
  41576d:	mov    dl,0xcc
  41576f:	pop    ss
  415770:	inc    DWORD PTR [edx]
  415772:	sub    DWORD PTR ds:0xf05a7574,edx
  415778:	dec    eax
  415779:	cli    
  41577a:	loopne 0x41577f
  41577c:	mov    eax,0x2223000
  415781:	add    dl,bh
  415783:	push   0x8daa5442
  415788:	add    bl,0x65
  41578b:	out    dx,al
  41578c:	scas   al,BYTE PTR es:[edi]
  41578d:	dec    edi
  41578e:	jmp    0xf241058c
  415793:	and    DWORD PTR [edx],ebx
  415795:	jno    0x4157c7
  415797:	pop    edi
  415798:	push   ss
  415799:	sub    BYTE PTR [ecx+ecx*1+0x68],0xcb
  41579e:	jno    0x4157a9
  4157a0:	jmp    0x13c78134
  4157a5:	mov    DWORD PTR [ebx-0x38],ebp
  4157a8:	call   0x1244dbb0
  4157ad:	inc    esp
  4157ae:	scas   al,BYTE PTR es:[di]
  4157b0:	das    
  4157b1:	inc    ebx
  4157b2:	stos   DWORD PTR es:[edi],eax
  4157b3:	in     al,dx
  4157b4:	test   DWORD PTR [ebx+0x75400971],edx
  4157ba:	xor    DWORD PTR [ecx],ecx
  4157bc:	jmp    0x1e221aec
  4157c1:	pop    ss
  4157c2:	mov    bl,0xcc
  4157c4:	pop    ecx
  4157c5:	xchg   ebx,eax
  4157c6:	jno    0x4157d1
  4157c8:	jmp    0x794b7f5c
  4157cd:	inc    edi
  4157cf:	aam    0x39
  4157d1:	xchg   ebx,eax
  4157d2:	jno    0x4157dd
  4157d4:	add    DWORD PTR [ebx+0xae90933],eax
  4157da:	jno    0x415770
  4157dc:	jmp    0x41580a
  4157de:	sbb    BYTE PTR [eax],cl
  4157e0:	jmp    0xc4b757e8
  4157e5:	aam    0x3
  4157e7:	xor    DWORD PTR [ecx],ecx
  4157e9:	jmp    0x184e4d76
  4157ee:	stos   BYTE PTR es:[edi],al
  4157ef:	xchg   BYTE PTR [eax+0x50316ea],ah
  4157f5:	inc    ebx
  4157f6:	add    al,0x76
  4157f8:	xchg   esi,eax
  4157f9:	in     al,0x16
  4157fb:	inc    ebp
  4157fc:	jl     0x41582f
  4157fe:	lds    esp,FWORD PTR [esi-0x1]
  415801:	test   al,0x8f
  415803:	xor    eax,0x31035f20
  415808:	or     DWORD PTR [esi+0x60213292],ecx
  41580e:	fiadd  WORD PTR [edi+0xa]
  415811:	outs   dx,DWORD PTR ds:[esi]
  415812:	rol    BYTE PTR [esi+0xa],0xff
  415816:	stc    
  415817:	and    bl,BYTE PTR ss:[esi+0x500932eb]
  41581e:	rcl    WORD PTR [ecx],0x4f
  415822:	pop    esi
  415823:	ret    
  415824:	add    eax,0x92de968
  415829:	add    cl,al
  41582b:	xor    al,BYTE PTR ds:0x745ae900
  415831:	add    ch,cl
  415833:	xor    bh,dh
  415835:	mov    edi,0x44430bbd
  41583a:	sub    eax,0xe9000932
  41583f:	mov    ecx,0x88b9fbc4
  415844:	or     DWORD PTR [eax-0x15],ebp
  415847:	add    BYTE PTR [edi],bh
  415849:	xchg   ebp,eax
  41584a:	test   DWORD PTR [ebx-0x128df5ce],0xb28cf51f
  415854:	cmc    
  415855:	or     DWORD PTR [ecx],ecx
  415857:	sub    DWORD PTR [esi+0x4a74feff],esp
  41585d:	and    al,BYTE PTR [esi+edi*8+0x19ea0b3d]
  415864:	inc    esp
  415865:	xchg   ebp,eax
  415866:	test   ecx,0xcefef2b8
  41586c:	in     al,0x9
  41586e:	sub    BYTE PTR ds:0x35bd4442,ch
  415875:	or     DWORD PTR [eax],eax
  415877:	jmp    0x1a3d1d2b
  41587c:	fwait
  41587d:	or     DWORD PTR [eax-0x15],ebp
  415880:	xchg   ebp,eax
  415881:	lahf   
  415882:	call   FWORD PTR [ebp-0x300fa40]
  415888:	scas   eax,DWORD PTR es:[edi]
  415889:	mov    esi,0x4939e940
  41588e:	push   cs
  41588f:	add    ah,dl
  415891:	popf   
  415892:	(bad)  
  415893:	dec    DWORD PTR [eax-0x34]
  415896:	inc    ebx
  415897:	fsubr  DWORD PTR [eax+0x5]
  41589a:	add    BYTE PTR [eax],al
  41589c:	xlat   BYTE PTR ds:[ebx]
  41589d:	enter  0x1d9,0x18
  4158a1:	or     eax,0x8fbff00
  4158a6:	pop    DWORD PTR [ebp+0x68]
  4158a9:	push   ds
  4158aa:	jb     0x4158b4
  4158ac:	add    BYTE PTR [edi-0x38],ch
  4158af:	loope  0x415878
  4158b1:	aad    0x34
  4158b3:	std    
  4158b4:	dec    DWORD PTR [eax]
  4158b6:	or     eax,0xd6c45c5
  4158bb:	add    BYTE PTR [eax],al
  4158bd:	fadd   DWORD PTR [ebp+0x44]
  4158c0:	lock fmul DWORD PTR [eax+eax*1]
  4158c4:	add    BYTE PTR [edi],dl
  4158c6:	enter  0xf1,0xc8
  4158ca:	or     al,0x0
  4158cc:	lea    edx,[ebp+0x45ff4d44]
  4158d2:	and    ch,ah
  4158d4:	in     eax,0xcb
  4158d6:	or     al,0x0
  4158d8:	or     ecx,DWORD PTR [eax]
  4158da:	cdq    
  4158db:	adc    eax,0xfd181d83
  4158e0:	jae    0x415883
  4158e2:	sbb    eax,0x70ff474
  4158e7:	mov    edi,0xc50d4948
  4158ec:	inc    ebp
  4158ed:	les    ecx,FWORD PTR [ebx]
  4158ef:	add    BYTE PTR [eax],al
  4158f1:	cwde   
  4158f2:	xor    DWORD PTR [esi],eax
  4158f4:	(bad)  
  4158f5:	push   ebp
  4158f6:	cmp    ebp,edi
  4158f8:	dec    DWORD PTR [eax-0x638a02f4]
  4158fe:	sbb    eax,0xcc238114
  415903:	std    
  415904:	or     cl,BYTE PTR [eax+0x31e81b98]
  41590a:	aam    0x1a
  41590c:	dec    BYTE PTR [esi+0x73]
  41590f:	(bad)  
  415910:	js     0x415912
  415912:	cli    
  415913:	xor    BYTE PTR [eax+eax*1],al
  415916:	vunpcklps ymm2,ymm2,YMMWORD PTR [eax+edi*4]
  41591b:	sub    al,cl
  41591d:	push   edi
  41591f:	in     al,dx
  415920:	push   esp
  415921:	inc    edi
  415922:	jo     0x415916
  415924:	add    al,BYTE PTR [eax]
  415926:	xor    DWORD PTR [edx-0x80],esi
  415929:	jl     0x415928
  41592b:	icebp  
  41592c:	lea    ecx,[edx]
  41592e:	push   cs
  41592f:	fisttp QWORD PTR ds:0x294e7cfe
  415935:	mov    esi,DWORD PTR [edx]
  415937:	repnz add edi,edi
  41593a:	jl     0x41597a
  41593c:	sub    DWORD PTR [ebx+0x30],esi
  41593f:	repnz add esp,edi
  415942:	and    dh,BYTE PTR [edx]
  415944:	pop    edx
  415945:	(bad)  
  415946:	fisub  WORD PTR [esi]
  415948:	adc    al,0xf1
  41594a:	xchg   ecx,ebx
  41594c:	cld    
  41594d:	push   cs
  41594e:	mov    ah,0xd3
  415950:	adc    al,0xfe
  415952:	(bad)  
  415953:	jp     0x41594d
  415955:	or     bl,dl
  415957:	idiv   BYTE PTR [esi+0x66]
  41595a:	mov    bh,0xfe
  41595c:	adc    DWORD PTR [edi+0x1f230],esi
  415962:	push   es
  415963:	dec    ebx
  415964:	cmp    eax,edx
  415966:	add    al,0x7b
  415968:	and    BYTE PTR [edx+0x57b4dd6d],al
  41596e:	sbb    DWORD PTR ds:0xca314104,eax
  415974:	xchg   esi,eax
  415975:	add    BYTE PTR [eax],al
  415977:	jb     0x41593f
  415979:	sahf   
  41597a:	dec    DWORD PTR [esi+0x31000671]
  415980:	retf   0x20d2
  415983:	data16 or BYTE PTR [esi-0x6102a2e4],ah
  41598a:	adc    ecx,DWORD PTR [esi-0x2a]
  41598d:	into   
  41598e:	adc    cl,BYTE PTR [edi-0x10]
  415991:	(bad)  
  415992:	jmp    0x4159db
  415994:	pop    es
  415995:	repz inc ebx
  415997:	ret    0x8f1b
  41599a:	sub    eax,0xff77080e
  41599f:	out    dx,al
  4159a0:	jge    0x415983
  4159a2:	dec    edx
  4159a3:	sub    eax,0x1ec4b483
  4159a8:	or     ah,bh
  4159aa:	add    esi,DWORD PTR [ecx]
  4159ac:	jno    0x415996
  4159ae:	add    al,0x31
  4159b0:	or     DWORD PTR [edi],edi
  4159b2:	ret    0x61c
  4159b5:	inc    edi
  4159b6:	addr16 ret 
  4159b8:	jp     0x415962
  4159ba:	add    ebp,esi
  4159bc:	dec    esp
  4159bd:	xor    eax,DWORD PTR ds:0x80e70930
  4159c3:	ins    DWORD PTR es:[edi],dx
  4159c4:	add    eax,0xba2512b8
  4159c9:	call   0x3105:0x8feed6c4
  4159d0:	or     edx,esp
  4159d2:	inc    ebx
  4159d3:	cmp    eax,0x83d9061c
  4159d8:	jp     0x415982
  4159da:	add    eax,DWORD PTR [eax]
  4159dc:	leave  
  4159dd:	adc    al,0xdd
  4159df:	adc    ch,BYTE PTR [edi+0x2356e4ce]
  4159e5:	dec    eax
  4159e6:	out    0x3,eax
  4159e8:	xor    DWORD PTR [ecx],ecx
  4159ea:	out    0x1b,eax
  4159ec:	hlt    
  4159ed:	and    al,0xd6
  4159ef:	adc    dl,BYTE PTR [esi-0x78ed0fbc]
  4159f5:	jno    0x415a14
  4159f7:	retf   
  4159f8:	icebp  
  4159f9:	or     bh,cl
  4159fb:	cmp    DWORD PTR [ebp+0x6],edi
  4159fe:	add    DWORD PTR [esi+0x6253cb2d],esi
  415a04:	inc    esi
  415a05:	push   esi
  415a06:	pop    eax
  415a07:	adc    edi,esi
  415a09:	pop    es
  415a0a:	aas    
  415a0b:	jmp    0xaa40d23a
  415a10:	and    esi,DWORD PTR [eax+0x0]
  415a13:	sub    ebp,0xeae90008
  415a19:	add    eax,0xd032e9fe
  415a1e:	ret    0x32ed
  415a21:	pop    ecx
  415a22:	pop    eax
  415a23:	add    DWORD PTR [ebx+0x8],esp
  415a26:	aas    
  415a27:	jmp    0x2a40d256
  415a2c:	inc    ebx
  415a2d:	outs   dx,BYTE PTR ds:[esi]
  415a2e:	mov    cl,0xeb
  415a30:	cmc    
  415a31:	add    eax,0x92d81e6
  415a36:	add    BYTE PTR [ecx+0x10],dl
  415a39:	pop    es
  415a3a:	(bad)  
  415a3b:	sbb    dl,BYTE PTR ds:[ecx-0xd]
  415a3f:	add    BYTE PTR ss:[ebx-0x12],al
  415a43:	in     eax,dx
  415a44:	ss inc ebx
  415a46:	pop    es
  415a47:	jmp    0xfe48848c
  415a4c:	push   0x1
  415a4e:	or     BYTE PTR [ebx-0x58],0x32
  415a52:	or     DWORD PTR [eax+esi*8-0x51],esi
  415a56:	inc    esp
  415a57:	ja     0x415a0b
  415a59:	cmc    
  415a5a:	add    eax,0x62875fe
  415a5f:	adc    al,0x70
  415a61:	out    dx,eax
  415a62:	dec    eax
  415a63:	add    BYTE PTR [esi],ah
  415a65:	cmp    esi,eax
  415a67:	dec    eax
  415a68:	sub    BYTE PTR ds:0xb2e90008,dh
  415a6e:	in     eax,dx
  415a6f:	adc    eax,0xe90720d5
  415a74:	repz aaa 
  415a76:	pop    es
  415a77:	inc    BYTE PTR [eax]
  415a79:	retf   
  415a7a:	mov    esp,0xc7d6855
  415a7f:	aas    
  415a80:	add    BYTE PTR [eax-0x683cff62],ah
  415a86:	and    al,0x35
  415a88:	add    DWORD PTR [eax+0x9],ecx
  415a8b:	mov    bh,0x7
  415a8d:	dec    eax
  415a8e:	or     DWORD PTR [eax],eax
  415a90:	xor    ecx,DWORD PTR [edx-0x5d7c0fe1]
  415a96:	or     eax,0xea30273
  415a9b:	jmp    0xfecafb89
  415aa0:	jmp    DWORD PTR [edi+0xfa7225]
  415aa6:	xchg   edi,eax
  415aa7:	sbb    ah,BYTE PTR [edi+0x0]
  415aaa:	and    ah,0x0
  415aad:	add    BYTE PTR [eax],cl
  415aaf:	inc    ebp
  415ab0:	(bad)  
  415ab1:	and    eax,0x408820
  415ab6:	ja     0x415aa4
  415ab8:	cmp    DWORD PTR [ecx+0x25fd08c9],eax
  415abe:	enter  0x4087,0x0
  415ac2:	daa    
  415ac3:	in     al,dx
  415ac4:	inc    ecx
  415ac5:	sbb    DWORD PTR [ecx-0x5fda02f8],0x37004087
  415acf:	in     al,dx
  415ad0:	dec    ecx
  415ad1:	sbb    DWORD PTR [ecx-0x77da02f8],0x37004087
  415adb:	in     al,dx
  415adc:	push   ecx
  415add:	or     DWORD PTR [ecx-0x3fda02f8],0x97004087
  415ae7:	jmp    0x415b42
  415ae9:	or     DWORD PTR [ecx+0xd],0x87e825fd
  415af0:	inc    eax
  415af1:	add    BYTE PTR [ecx],dh
  415af3:	(bad)  
  415af5:	arpl   WORD PTR [eax+0x54ff0431],si
  415afb:	pop    edx
  415afc:	add    DWORD PTR [eax+0x31],0xb06be6c3
  415b03:	xor    DWORD PTR [edi+edi*8],eax
  415b06:	or     al,0x42
  415b08:	add    DWORD PTR [eax+0x0],0x73e6ab31
  415b0f:	mov    al,0x31
  415b11:	add    al,0xff
  415b13:	adc    al,0x1a
  415b15:	add    DWORD PTR [eax+0x31],0xb07be693
  415b1c:	xor    DWORD PTR [edi+edi*8],eax
  415b1f:	or     al,0x72
  415b21:	add    BYTE PTR [eax+0x31],0x7b
  415b25:	out    0x83,al
  415b27:	mov    al,0x30
  415b29:	add    al,0xff
  415b2b:	push   esp
  415b2c:	jp     0x415ab0
  415b2e:	inc    eax
  415b2f:	xor    DWORD PTR [ebx-0x1a],esp
  415b32:	mov    esi,DWORD PTR [eax+0x4cff01b0]
  415b38:	add    BYTE PTR [edx-0x19b4cec0],0x93
  415b3f:	mov    al,0xb0
  415b41:	add    edi,edi
  415b43:	adc    al,0x5a
  415b45:	add    BYTE PTR [eax+0x31],0x33
  415b49:	out    0x9b,al
  415b4b:	mov    al,0xb0
  415b4d:	add    edi,edi
  415b4f:	or     al,0x52
  415b51:	add    BYTE PTR [eax+0x31],0x1b
  415b55:	out    0xa3,al
  415b57:	mov    al,0xb0
  415b59:	add    edi,edi
  415b5b:	adc    al,0x5a
  415b5d:	add    BYTE PTR [eax+0x31],0x3
  415b61:	in     al,0xab
  415b63:	mov    al,0xb0
  415b65:	add    edi,edi
  415b67:	dec    esp
  415b68:	inc    edx
  415b69:	add    BYTE PTR [eax+0x31],0x9
  415b6d:	out    0xe9,al
  415b6f:	add    dl,ah
  415b71:	mov    DWORD PTR [eax],ebp
  415b73:	add    al,0x8e
  415b75:	sub    eax,0x8f1858f
  415b7a:	into   
  415b7b:	jmp    0x469e53a
  415b80:	jbe    0x415baf
  415b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b83:	test   ecx,esi
  415b85:	or     BYTE PTR [esi+0x288972e9],dh
  415b8b:	add    al,0x5e
  415b8d:	sub    eax,0x8f185af
  415b92:	sahf   
  415b93:	jmp    0x469e512
  415b98:	inc    esi
  415b99:	sub    eax,0x8f185b7
  415b9e:	xchg   cl,ch
  415ba0:	bound  ecx,QWORD PTR [ecx+0x2d2e0428]
  415ba6:	pop    DWORD PTR [ebp-0x1691f68f]
  415bac:	cli    
  415bad:	mov    BYTE PTR [eax+0x472d1603],ch
  415bb3:	test   DWORD PTR [ecx+0x9],esi
  415bb6:	push   esi
  415bb7:	jmp    0x3e9e4ce
  415bbc:	(bad)  
  415bbd:	sub    al,0x4f
  415bbf:	test   DWORD PTR [ecx+0x9],esi
  415bc2:	ds jmp 0x3e9e4a2
  415bc8:	out    0x2c,al
  415bca:	aaa    
  415bcb:	test   DWORD PTR [ecx+0x9],esi
  415bce:	es jmp 0x3e9e4b6
  415bd4:	add    dh,cl
  415bd6:	sub    al,0xf
  415bd8:	test   DWORD PTR [ecx+0x9],esi
  415bdb:	push   cs
  415bdc:	jmp    0x3e9e49b
  415be1:	mov    dh,0x2c
  415be3:	out    0x81,eax
  415be5:	icebp  
  415be6:	or     BYTE PTR [eax],al
  415be8:	neg    BYTE PTR [ecx+0x32a88206]
  415bee:	add    ah,BYTE PTR [esi*8-0x21ffb650]
  415bf5:	cdq    
  415bf6:	adc    al,BYTE PTR [edx+0x24022d28]
  415bfc:	cmc    
  415bfd:	mov    al,0x49
  415bff:	add    dh,al
  415c01:	mov    DWORD PTR [edx],ebx
  415c03:	sub    BYTE PTR [eax],0x35
  415c06:	add    ah,BYTE PTR [edx*8-0x51ffb650]
  415c0d:	dec    ecx
  415c0e:	and    al,BYTE PTR [edx+0x24022d28]
  415c14:	shl    DWORD PTR [eax+0x59960049],1
  415c1a:	xor    al,BYTE PTR [edx+0x24023528]
  415c20:	mov    ebp,0x7e0049b0
  415c25:	sbb    DWORD PTR [edx],edi
  415c27:	sub    BYTE PTR [eax],0x2d
  415c2a:	add    ah,BYTE PTR [ebp*4+0x660048b0]
  415c31:	or     DWORD PTR [edx-0x7e],eax
  415c34:	test   al,0x32
  415c36:	add    ah,BYTE PTR [ebp*4+0x48b000]
  415c3d:	dec    esi
  415c3e:	or     DWORD PTR [edx-0x7e],ecx
  415c41:	test   al,0x32
  415c43:	add    ah,BYTE PTR [ebp*4+0x360048b0]
  415c4a:	fst    DWORD PTR [ecx-0x7e]
  415c4d:	test   al,0x32
  415c4f:	add    ah,BYTE PTR [edi*4+0x1e0048b0]
  415c56:	fstp   DWORD PTR [ecx-0x7e]
  415c59:	test   al,0x32
  415c5b:	add    ah,BYTE PTR [ecx+ecx*4]
  415c5e:	mov    al,0x48
  415c60:	add    BYTE PTR [eax],al
  415c62:	das    
  415c63:	icebp  
  415c64:	gs sbb cl,0x5
  415c68:	std    
  415c69:	and    eax,0x4087ac
  415c6e:	(bad)
  415c72:	dec    ecx
  415c73:	or     eax,0x871025fd
  415c78:	inc    eax
  415c79:	add    BYTE PTR [edi-0x17],bl
  415c7c:	jns    0x415c00
  415c7e:	dec    ecx
  415c7f:	or     eax,0x870825fd
  415c84:	inc    eax
  415c85:	add    BYTE PTR [edi+0x198281e9],ch
  415c8b:	or     eax,0x86d025fd
  415c90:	inc    eax
  415c91:	add    BYTE PTR [edi+0x19828de9],cl
  415c97:	or     eax,0x86c425fd
  415c9c:	inc    eax
  415c9d:	add    BYTE PTR [eax],al
  415c9f:	scas   eax,DWORD PTR es:[edi]
  415ca0:	jmp    0xd4adf3a
  415ca5:	std    
  415ca6:	and    eax,0x408b8c
  415cab:	lahf   
  415cac:	call   0x58adf4e
  415cb1:	std    
  415cb2:	and    eax,0x408ba4
  415cb7:	outs   dx,DWORD PTR ds:[esi]
  415cb8:	call   0xd1adf62
  415cbd:	std    
  415cbe:	and    eax,0x408b7c
  415cc3:	outs   dx,DWORD PTR ds:[esi]
  415cc4:	call   0xcdadf76
  415cc9:	std    
  415cca:	and    eax,0x408b64
  415ccf:	psubsb mm7,QWORD PTR [ecx-0x2f3767e]
  415cd6:	and    eax,0x408b18
  415cdb:	xor    DWORD PTR [ebx-0x38],ebp
  415cde:	and    esi,DWORD PTR ds:0x34010c73
  415ce4:	cli    
  415ce5:	dec    ecx
  415ce6:	arpl   WORD PTR [ecx],si
  415ce8:	repnz add edx,eax
  415ceb:	sub    eax,0x35f780f2
  415cf0:	ins    DWORD PTR es:[edi],dx
  415cf1:	stc    
  415cf2:	mov    bh,0x33
  415cf4:	repnz add DWORD PTR [eax],eax
  415cf7:	jae    0x415cdf
  415cf9:	add    DWORD PTR [ebx+0x78eea89],eax
  415cff:	mov    ecx,0x1e6
  415d04:	xor    DWORD PTR [ebp+eax*1-0xe354e00],esi
  415d0b:	jl     0x415d46
  415d0d:	jp     0x415d12
  415d0f:	add    BYTE PTR [ecx],dh
  415d11:	repnz aas 
  415d13:	add    esi,DWORD PTR [ecx]
  415d15:	jae    0x415d20
  415d17:	pop    ds
  415d18:	int3   
  415d19:	stc    
  415d1a:	dec    ecx
  415d1b:	pop    es
  415d1c:	xor    edx,esi
  415d1e:	add    edx,eax
  415d20:	xor    eax,0xf1f780f2
  415d25:	add    al,0xfc
  415d27:	mov    bh,0x3b
  415d29:	repnz add DWORD PTR [eax],eax
  415d2c:	repz in eax,dx
  415d2e:	add    DWORD PTR ds:0x1f1b1,edi
  415d34:	xchg   esp,eax
  415d35:	cli    
  415d36:	dec    ecx
  415d37:	or     esi,DWORD PTR [ecx]
  415d39:	repnz add edx,eax
  415d3c:	sub    eax,0x31ffcef2
  415d41:	repnz add DWORD PTR [ebp+0x29],edi
  415d45:	mov    bh,bl
  415d47:	(bad)  
  415d48:	out    dx,al
  415d49:	icebp  
  415d4a:	aas    
  415d4b:	add    esi,DWORD PTR [ecx]
  415d4d:	cmc    
  415d4e:	add    DWORD PTR [edx],eax
  415d50:	xor    edx,esi
  415d52:	mov    es,WORD PTR [edi]
  415d54:	cdq    
  415d55:	or     bh,dh
  415d57:	add    esi,DWORD PTR [ecx]
  415d59:	or     DWORD PTR [ecx],ebp
  415d5b:	pop    es
  415d5c:	xor    DWORD PTR [esi],edi
  415d5e:	out    0x7,eax
  415d60:	xor    DWORD PTR [ecx],ecx
  415d62:	mov    ebx,?
  415d64:	jle    0x415d80
  415d66:	out    0x3,eax
  415d68:	add    BYTE PTR [ecx],dh
  415d6a:	retf   
  415d6b:	jecxz  0x415d70
  415d6d:	fs or  edi,ebx
  415d70:	add    esi,DWORD PTR [ecx]
  415d72:	jle    0x415d53
  415d74:	dec    ebx
  415d75:	inc    edx
  415d76:	or     edi,esp
  415d78:	add    esi,DWORD PTR [ebx+0x4]
  415d7b:	out    0xc8,eax
  415d7d:	xchg   BYTE PTR [edi],cl
  415d7f:	out    0x3,eax
  415d81:	cld    
  415d82:	adc    BYTE PTR [edi-0x1800890e],cl
  415d88:	inc    ebp
  415d89:	xor    cl,BYTE PTR [ecx]
  415d8b:	cld    
  415d8c:	add    edx,DWORD PTR [ecx]
  415d8e:	or     edi,esp
  415d90:	mov    BYTE PTR [esi],dh
  415d92:	ror    edi,0x3
  415d95:	xor    DWORD PTR [ecx],ecx
  415d97:	test   eax,0xe73e3100
  415d9c:	ret    
  415d9d:	inc    esi
  415d9e:	call   DWORD PTR [esp+edi*8]
  415da1:	xchg   BYTE PTR [edx],ah
  415da3:	out    0x3,eax
  415da5:	xor    ebx,ecx
  415da7:	jmp    0x415dac
  415da9:	ins    BYTE PTR es:[edi],dx
  415daa:	or     DWORD PTR [edi+0x4],esp
  415dad:	xor    DWORD PTR [edi+ebx*8+0x4b],edi
  415db1:	cmp    cl,BYTE PTR [ecx]
  415db3:	out    0x3,eax
  415db5:	repz add eax,0x3cf9d6e7
  415dbb:	out    0x3,eax
  415dbd:	xor    BYTE PTR [ecx],cl
  415dbf:	out    0x68,al
  415dc1:	icebp  
  415dc2:	mov    WORD PTR [ebx+0x289214fc],ds
  415dc8:	inc    esi
  415dc9:	xor    cl,BYTE PTR [ecx]
  415dcb:	push   0xffffff85
  415dcd:	add    BYTE PTR [edx+0x5],cl
  415dd0:	add    cl,ch
  415dd2:	xor    bh,dh
  415dd4:	jae    0x415da2
  415dd6:	push   edi
  415dd7:	mov    DWORD PTR [eax],edx
  415dd9:	in     eax,dx
  415dda:	xor    cl,BYTE PTR [ecx]
  415ddc:	xchg   DWORD PTR [eax-0x2b],ebp
  415ddf:	or     al,BYTE PTR [eax]
  415de1:	jmp    0xedc125d8
  415de6:	mov    dh,0xfe
  415de8:	std    
  415de9:	icebp  
  415dea:	xor    cl,BYTE PTR [ecx]
  415dec:	add    BYTE PTR [eax-0x54],dh
  415def:	push   cs
  415df0:	add    al,0xe9
  415df2:	xor    cl,BYTE PTR [edx-0x1693a84]
  415df8:	mov    dh,BYTE PTR [eax-0x66]
  415dfb:	or     al,BYTE PTR [eax]
  415dfd:	jmp    0xe8cb71b8
  415e02:	xor    al,0xc9
  415e04:	(bad)  
  415e05:	test   eax,0xedc208fa
  415e0a:	xor    bl,cl
  415e0c:	pop    ds
  415e0d:	stos   DWORD PTR es:[edi],eax
  415e0e:	data16 inc BYTE PTR [edx+0xa5668]
  415e15:	jmp    0x725cd345
  415e1a:	mov    ch,0xe
  415e1c:	add    al,0xe9
  415e1e:	xor    dl,BYTE PTR [eax-0x1c10e81]
  415e24:	std    
  415e25:	sub    edx,esi
  415e27:	mov    BYTE PTR [ebp*8-0x16f7f6ce],bl
  415e2e:	xor    cl,BYTE PTR [ecx]
  415e30:	xchg   DWORD PTR [eax+0x0],ebp
  415e33:	and    cl,BYTE PTR [edx]
  415e35:	add    cl,ch
  415e37:	xchg   edi,eax
  415e38:	xchg   ecx,eax
  415e39:	sbb    ch,ch
  415e3b:	xor    cl,BYTE PTR [ecx]
  415e3d:	ror    BYTE PTR [eax],1
  415e3f:	outs   dx,BYTE PTR ds:[esi]
  415e40:	mov    edi,DWORD PTR [edi-0xb]
  415e43:	(bad)  
  415e44:	std    
  415e45:	std    
  415e46:	dec    esi
  415e47:	mov    eax,ds:0x5900891c
  415e4c:	cli    
  415e4d:	add    DWORD PTR [eax],eax
  415e4f:	fdivr  DWORD PTR [eax+eax*4+0x18]
  415e53:	int3   
  415e54:	or     DWORD PTR [eax],eax
  415e56:	inc    eax
  415e57:	jne    0xa196276
  415e5d:	or     BYTE PTR [eax],al
  415e5f:	fmul   DWORD PTR [ecx]
  415e61:	xchg   DWORD PTR [ecx-0x20248],eax
  415e67:	push   ebx
  415e68:	jge    0x415e7f
  415e6a:	add    al,0x98
  415e6c:	or     DWORD PTR [edx-0x4b665ff],ecx
  415e72:	rcl    BYTE PTR [eax],0x5
  415e75:	ror    DWORD PTR [ebx-0x74fe2234],0x4c
  415e7c:	jmp    0xb87fb382
  415e81:	xor    dh,dh
  415e83:	adc    eax,0x608afdc2
  415e88:	and    esi,0x1
  415e8b:	leave  
  415e8c:	sbb    al,0x43
  415e8e:	lea    edi,[eax+edi*4-0x7e]
  415e92:	clc    
  415e93:	dec    ecx
  415e94:	cwde   
  415e95:	in     eax,dx
  415e96:	add    DWORD PTR [eax],0xffffff96
  415e99:	or     DWORD PTR [ebx-0x1f06801],edi
  415e9f:	lea    esp,ds:0xfb727202
  415ea5:	jnp    0x415ea5
  415ea7:	add    ecx,esi
  415ea9:	lock add DWORD PTR [eax],eax
  415eac:	sbb    BYTE PTR [eax+ebx*1+0x1f5998b],cl
  415eb3:	add    BYTE PTR [eax],cl
  415eb5:	add    BYTE PTR [eax+0x90c18],0x40
  415ebc:	adc    DWORD PTR [eax+0x19],0x87091804
  415ec3:	xor    DWORD PTR [ecx],0xf6fffe02
  415ec9:	adc    DWORD PTR [bx],0xf601f235
  415ed0:	repz icebp 
  415ed2:	lea    ecx,[ecx]
  415ed4:	stos   DWORD PTR es:[edi],eax
  415ed5:	fiadd  DWORD PTR [ebx]
  415ed7:	fcmovnbe st,st(7)
  415ed9:	das    
  415eda:	jl     0x415ef3
  415edc:	(bad)  
  415ede:	xor    DWORD PTR [edi],ebx
  415ee0:	xor    BYTE PTR [ecx-0x18],bl
  415ee3:	add    esi,DWORD PTR [ecx]
  415ee5:	repnz mov ds,WORD PTR [eax]
  415ee8:	stos   BYTE PTR es:[edi],al
  415ee9:	jno    0x415edf
  415eeb:	add    esi,DWORD PTR [ecx]
  415eed:	bnd jp 0x415e70
  415ef0:	dec    ecx
  415ef1:	out    0x1,al
  415ef3:	add    cl,dh
  415ef5:	push   0xf22d1b49
  415efa:	add    DWORD PTR [ecx-0x1fd5000],ecx
  415f00:	inc    DWORD PTR [esi+0x35178277]
  415f06:	repnz add DWORD PTR [edx-0x2d30fe7],ecx
  415f0d:	jb     0x415eb0
  415f0f:	sbb    eax,DWORD PTR [edx+0x1779f157]
  415f15:	in     al,0x5f
  415f17:	lods   al,BYTE PTR ds:[esi]
  415f18:	add    BYTE PTR [eax+0x4efffdce],cl
  415f1e:	sbb    eax,0x2b08ae9
  415f23:	(bad)  
  415f24:	(bad)  
  415f25:	imul   eax,DWORD PTR ds:[edx+0x1f22d17],0xe548b840
  415f30:	add    esi,DWORD PTR [ecx]
  415f32:	bnd jp 0x415eb5
  415f35:	inc    ecx
  415f36:	out    dx,al
  415f37:	add    DWORD PTR [eax],eax
  415f39:	stos   BYTE PTR es:[edi],al
  415f3a:	jo     0x415f25
  415f3c:	add    esi,DWORD PTR [ecx]
  415f3e:	or     edi,esp
  415f40:	adc    eax,esi
  415f42:	or     ebx,edx
  415f44:	std    
  415f45:	test   al,0x18
  415f47:	jmp    0x60085381
  415f4c:	repz fild DWORD PTR [esi]
  415f4f:	pop    ss
  415f50:	jecxz  0x415f83
  415f52:	mov    dl,0xdb
  415f54:	(bad)  
  415f55:	fdivp  st(3),st
  415f57:	mov    esp,0xd789abea
  415f5c:	dec    esi
  415f5e:	sti    
  415f5f:	jo     0x415ee3
  415f61:	add    BYTE PTR [esi],bl
  415f63:	add    eax,0x927103e7
  415f68:	push   eax
  415f69:	out    0x32,eax
  415f6b:	or     edi,esp
  415f6d:	jp     0x415f20
  415f6f:	sbb    bl,ch
  415f71:	add    esi,DWORD PTR [ecx]
  415f73:	nop
  415f74:	jo     0x415f61
  415f76:	xor    cl,BYTE PTR [ecx]
  415f78:	out    0x33,eax
  415f7a:	push   ecx
  415f7b:	pop    esp
  415f7c:	lea    esp,[esi-0x4d18fb90]
  415f82:	fisttp QWORD PTR [edi+0x532ee04b]
  415f88:	sbb    al,BYTE PTR [edi+ebx*8-0x79]
  415f8c:	int3   
  415f8d:	mul    esp
  415f8f:	add    eax,0xfb66f784
  415f94:	out    0x7a,eax
  415f96:	fisub  DWORD PTR [ebx+ebx*8]
  415f99:	jp     0x415ffa
  415f9b:	das    
  415f9c:	mov    ah,0x79
  415f9e:	shl    BYTE PTR [edi+eiz*8],cl
  415fa1:	jns    0x415fca
  415fa3:	test   edx,eax
  415fa5:	nop
  415fa6:	push   ds
  415fa7:	nop
  415fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fa9:	jnp    0x416007
  415fab:	lea    esi,[edx+0x4]
  415fae:	xor    DWORD PTR [ecx],ecx
  415fb0:	out    0xc9,eax
  415fb2:	dec    eax
  415fb3:	jne    0x415f9a
  415fb5:	mov    esp,0xa0008470
  415fba:	shl    ah,0x81
  415fbd:	test   eax,0xdcc7860e
  415fc2:	or     cl,BYTE PTR [eax+0x1b00ebc0]
  415fc8:	pop    es
  415fc9:	sub    DWORD PTR [ecx],0x6a4643f6
  415fcf:	leave  
  415fd0:	es sbb al,0xe8
  415fd3:	ror    esp,0x5d
  415fd6:	lahf   
  415fd7:	mov    DWORD PTR [edi-0x3e],ebx
  415fda:	in     eax,0x32
  415fdc:	mov    ss,WORD PTR [ebp+eax*1+0x31]
  415fe0:	push   esp
  415fe1:	push   esi
  415fe2:	jb     0x416000
  415fe4:	ret    
  415fe5:	xchg   cl,dl
  415fe7:	mov    esi,0x32e9fdfa
  415fec:	or     DWORD PTR [eax],eax
  415fee:	arpl   WORD PTR [ebx+0x26f6c786],bp
  415ff4:	sub    bh,bh
  415ff6:	call   0x75cab22d
  415ffb:	jbe    0x416013
  415ffd:	sub    esi,0xa6037487
  416003:	jg     0x415fff
  416005:	std    
  416006:	jmp    0xae6b2806
  41600b:	add    al,BYTE PTR [eax+0x8]
  41600e:	push   ebp
  41600f:	stos   DWORD PTR es:[edi],eax
  416010:	dec    ebx
  416011:	inc    eax
  416012:	ins    BYTE PTR es:[edi],dx
  416013:	das    
  416014:	jne    0x41600c
  416016:	push   0xffffffdc
  416018:	sbb    eax,0xfa32e904
  41601d:	jae    0x415feb
  41601f:	retf   
  416020:	adc    DWORD PTR [eax],0xffffffed
  416023:	xor    cl,BYTE PTR [ecx]
  416025:	xchg   DWORD PTR [edi+0x4a],esp
  416028:	push   es
  416029:	add    cl,ch
  41602b:	add    BYTE PTR [edx-0x3d],dh
  41602e:	xchg   ch,ch
  416030:	cs cli 
  416032:	std    
  416033:	add    BYTE PTR [eax],ah
  416035:	push   es
  416036:	add    BYTE PTR [eax],al
  416038:	mov    eax,ds:0x8040d7c
  41603d:	push   es
  41603e:	mov    DWORD PTR [esi-0x20620],eax
  416044:	dec    eax
  416045:	out    0x8a,al
  416047:	xchg   al,bh
  416049:	stc    
  41604a:	std    
  41604b:	call   DWORD PTR [edx-0x2f77a100]
  416051:	add    al,BYTE PTR [ebx+0x5d410]
  416057:	pop    esi
  416058:	mov    ebp,0x45000547
  41605d:	add    esi,DWORD PTR [ecx-0x48]
  416060:	pop    ebx
  416061:	cmp    eax,0xe23e01fe
  416066:	add    DWORD PTR [eax],eax
  416068:	enter  0x6880,0x9
  41606c:	xchg   ebp,eax
  41606d:	in     al,dx
  41606e:	mov    al,BYTE PTR [esi-0x20658]
  416074:	and    DWORD PTR [ebp+edx*1+0x4],edi
  416078:	mov    BYTE PTR ds:0xe1ee8940,al
  41607e:	add    DWORD PTR [eax],eax
  416080:	cwde   
  416081:	jl     0x416006
  416083:	adc    BYTE PTR [ebp+eax*1-0x12e97500],dl
  41608a:	add    DWORD PTR [eax],eax
  41608c:	mov    BYTE PTR [edi+0xd],bh
  41608f:	add    al,BYTE PTR [eax]
  416091:	stos   BYTE PTR es:[edi],al
  416092:	add    bh,BYTE PTR [edi-0x71f97778]
  416098:	sbb    al,0x54
  41609a:	add    eax,0x80817500
  41609f:	adc    DWORD PTR [eax],0x54
  4160a2:	add    eax,0xecd68900
  4160a7:	add    DWORD PTR [eax],eax
  4160a9:	dec    eax
  4160aa:	lds    ecx,FWORD PTR [eax-0x20bce52]
  4160b0:	jmp    FWORD PTR [esi]
  4160b2:	push   0x7e
  4160b4:	cvtps2pi mm4,xmm2
  4160b7:	add    DWORD PTR [ebx-0x21549],ecx
  4160bd:	push   ss
  4160be:	ins    DWORD PTR es:[edi],dx
  4160bf:	hlt    
  4160c0:	add    ebx,esp
  4160c2:	push   0xe1218742
  4160c7:	jae    0x4160e4
  4160c9:	xor    eax,0x187501e2
  4160ce:	imul   edi,DWORD PTR [esi+0xf],0x35
  4160d2:	loop   0x4160d5
  4160d4:	mov    DWORD PTR [edi-0x21000216],ebp
  4160da:	mov    ds:0xe635ad7a,al
  4160df:	add    DWORD PTR [eax],eax
  4160e1:	mov    eax,0x3103f470
  4160e6:	loop   0x416160
  4160e8:	test   DWORD PTR [ecx],ebx
  4160ea:	out    dx,al
  4160eb:	add    DWORD PTR [eax],eax
  4160ed:	stos   DWORD PTR es:[edi],eax
  4160ee:	jmp    0xd677:0x21afc8ff
  4160f5:	add    BYTE PTR [edx+0x15],dl
  4160f8:	jl     0x416101
  4160fa:	add    edi,DWORD PTR [ebx+0x36]
  4160fd:	out    0x78,eax
  4160ff:	inc    BYTE PTR [esi+edi*8]
  416102:	mov    edx,0x2ddf7f2f
  416107:	xor    dh,BYTE PTR [edi-0x33]
  41610a:	mov    DWORD PTR [esi+0x6b76fe05],esp
  416110:	xor    al,0x82
  416112:	push   eax
  416113:	in     al,0xb2
  416115:	mov    dh,BYTE PTR [edi-0x26]
  416118:	inc    esp
  416119:	sti    
  41611a:	pop    esi
  41611b:	mov    bh,0x80
  41611d:	out    0x30,al
  41611f:	pop    ss
  416120:	ja     0x4160ef
  416122:	pop    ecx
  416123:	jle    0x41612a
  416125:	inc    BYTE PTR [esi+0x9]
  416128:	inc    esi
  416129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41612a:	(bad)  
  41612c:	out    dx,eax
  41612d:	add    esi,DWORD PTR [edx-0x40fd693e]
  416133:	adc    al,0xe3
  416135:	add    esi,DWORD PTR [ecx]
  416137:	xchg   BYTE PTR [eax],dl
  416139:	sti    
  41613a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41613b:	adc    dh,BYTE PTR [edx+0x7d]
  41613e:	es or  eax,0x8eb803e7
  416144:	iret   
  416145:	inc    DWORD PTR [esi]
  416147:	clc    
  416148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416149:	jp     0x416117
  41614b:	adc    al,0xe3
  41614d:	add    esi,DWORD PTR [ecx]
  41614f:	sub    BYTE PTR [ebp-0xd],0x32
  416153:	or     edi,esp
  416155:	js     0x416103
  416157:	adc    bl,ch
  416159:	add    eax,DWORD PTR [eax]
  41615b:	xor    DWORD PTR [ebx-0x8fcfe29],eax
  416161:	sub    DWORD PTR [ebx+0x3e],edi
  416164:	or     bl,BYTE PTR [ebp-0x19]
  416167:	xor    cl,BYTE PTR [ecx]
  416169:	out    0x8e,eax
  41616b:	sbb    DWORD PTR [ebp+eiz*2-0x18f6cd0d],eax
  416172:	jp     0x416128
  416174:	adc    bl,ah
  416176:	add    esi,DWORD PTR [ecx]
  416178:	dec    ecx
  416179:	jo     0x4161d0
  41617b:	cmp    cl,BYTE PTR ds:0x8ea803e7
  416181:	xlat   BYTE PTR ds:[ebx]
  416182:	dec    DWORD PTR [esi+0x1e7d62f7]
  416188:	or     eax,0x18ab03e7
  41618d:	jmp    0x600bd967
  416192:	adc    al,0x6e
  416194:	test   ebx,ebp
  416196:	pop    es
  416197:	xor    DWORD PTR [ecx],ecx
  416199:	cmp    al,0x1d
  41619b:	test   al,0x8e
  41619d:	xlat   BYTE PTR ds:[ebx]
  41619e:	pop    es
  41619f:	xor    DWORD PTR [ecx],ecx
  4161a1:	add    BYTE PTR [eax-0x45],ah
  4161a4:	adc    BYTE PTR [ecx+ebp*8],al
  4161a7:	xor    cl,BYTE PTR [ecx-0x79]
  4161aa:	push   edi
  4161ab:	adc    DWORD PTR ds:0x8ea5e900,ecx
  4161b1:	adc    ch,ch
  4161b3:	xor    cl,BYTE PTR [ecx]
  4161b5:	mov    DWORD PTR [edi+0x45],esp
  4161b8:	or     eax,0x19ace900
  4161bd:	add    bl,BYTE PTR [ebx-0x7735cd00]
  4161c3:	fnstenv ds:0x32e51c87
  4161c9:	or     DWORD PTR [ebx+0x0],esi
  4161cc:	scas   al,BYTE PTR es:[edi]
  4161cd:	(bad)  
  4161ce:	adc    ch,ah
  4161d0:	xor    cl,BYTE PTR [ecx]
  4161d2:	xchg   DWORD PTR [edi+0x4d],ebp
  4161d5:	or     eax,0x8e72e900
  4161da:	scas   al,BYTE PTR es:[edi]
  4161db:	in     eax,0x36
  4161dd:	or     DWORD PTR [eax],eax
  4161df:	jo     0x41618c
  4161e1:	sbb    DWORD PTR [ecx+ebp*8],eax
  4161e4:	xor    al,BYTE PTR [eax+0x92ed186]
  4161ea:	add    BYTE PTR [ecx],bh
  4161ec:	adc    eax,0x2efd8bf6
  4161f1:	or     DWORD PTR [eax],eax
  4161f3:	pushf  
  4161f4:	dec    ebp
  4161f5:	add    BYTE PTR [esi+0x92ef9],0x70
  4161fc:	stos   DWORD PTR es:[edi],eax
  4161fd:	adc    DWORD PTR [ecx+ebp*8],eax
  416200:	xor    cl,BYTE PTR [ecx-0x79]
  416203:	inc    edi
  416204:	push   ecx
  416205:	or     eax,0x8fb5e900
  41620a:	adc    ch,ch
  41620c:	xor    cl,BYTE PTR [ecx]
  41620e:	mov    DWORD PTR [edi+0x1a],esp
  416211:	or     eax,0x2982e900
  416216:	call   FWORD PTR [esi+0x46]
  416219:	or     eax,0x71480000
  41621e:	adc    eax,0x419ce8b
  416223:	add    BYTE PTR [eax],al
  416225:	pop    eax
  416226:	test   DWORD PTR [esi+0xa4c18],eax
  41622c:	inc    eax
  41622d:	shl    DWORD PTR [edi+0xa48041c],0x85
  416234:	xchg   BYTE PTR [eax],ch
  416236:	push   cs
  416237:	add    BYTE PTR [eax],al
  416239:	xchg   ebx,eax
  41623a:	sbb    BYTE PTR [eax],0x4
  41623d:	or     BYTE PTR [edx],cl
  41623f:	shl    BYTE PTR [eax],1
  416241:	or     DWORD PTR [eax+0xa18041c],ebx
  416247:	jno    0x416262
  416249:	xchg   ebx,eax
  41624a:	adc    BYTE PTR [eax],0x4
  41624d:	or     BYTE PTR [edx],cl
  41624f:	test   DWORD PTR [esi+0x130],eax
  416255:	cwde   
  416256:	test   BYTE PTR [esi+0x9cc1c],ch
  41625c:	mov    DWORD PTR [esi+0x1a],ecx
  41625f:	add    al,0x0
  416261:	enter  0xb686,0x18
  416265:	fmul   QWORD PTR [ecx]
  416267:	add    al,dl
  416269:	imul   ebx,DWORD PTR cs:[ecx-0x3e],0xffffffc0
  41626e:	or     DWORD PTR [edi+0x560dec44],eax
  416274:	push   edi
  416275:	adc    esi,DWORD PTR [esi+0x24]
  416278:	adc    BYTE PTR [ebx],dl
  41627a:	std    
  41627b:	cmp    DWORD PTR [eax+0x73000988],eax
  416281:	je     0x416211
  416283:	sti    
  416284:	add    al,0xb
  416286:	adc    esi,DWORD PTR [edi]
  416288:	xchg   BYTE PTR [eax],al
  41628a:	ins    BYTE PTR es:[edi],dx
  41628b:	or     eax,0x50dc0000
  416290:	repz fdiv DWORD PTR [ebx]
  416293:	int    0x7f
  416295:	loopne 0x4162c8
  416297:	out    0x60,al
  416299:	xor    DWORD PTR [ecx-0x14],0xe029c25f
  4162a0:	cmp    al,0x86
  4162a2:	or     eax,0xc50001ec
  4162a7:	cld    
  4162a8:	xor    BYTE PTR ds:[ecx],0xe0
  4162ac:	add    DWORD PTR [ecx+0x34],esi
  4162af:	arpl   di,bp
  4162b1:	add    cl,BYTE PTR [edx-0x11]
  4162b4:	add    BYTE PTR ds:[edx+eiz*8],dh
  4162b8:	add    DWORD PTR [edx+0x30],esi
  4162bb:	adc    edi,DWORD PTR ds:0x1e29c00
  4162c1:	jb     0x4162f3
  4162c3:	and    eax,ecx
  4162c5:	call   0xc0c47203
  4162ca:	xor    dl,BYTE PTR [edx]
  4162cc:	in     al,dx
  4162cd:	es sti 
  4162cf:	imul   edi,edi,0x55
  4162d2:	stos   BYTE PTR es:[edi],al
  4162d3:	and    al,0x8b
  4162d5:	fcomp  st(1)
  4162d7:	(bad)  
  4162d8:	sti    
  4162d9:	std    
  4162da:	out    0x55,al
  4162dc:	dec    eax
  4162dd:	sbb    BYTE PTR [ebx],ch
  4162df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162e0:	pusha  
  4162e1:	pop    esi
  4162e2:	repz cli 
  4162e4:	add    DWORD PTR [ebp-0x27],edx
  4162e7:	out    dx,al
  4162e8:	sti    
  4162e9:	std    
  4162ea:	mov    BYTE PTR [ebx+0x3500c084],0xcc
  4162f1:	ret    
  4162f2:	or     BYTE PTR [ecx],dh
  4162f4:	scas   eax,DWORD PTR es:[edi]
  4162f5:	mov    WORD PTR [ebp+edx*2-0x16],ds
  4162f9:	push   esi
  4162fa:	push   esi
  4162fb:	mov    edx,0x49be8311
  416300:	out    0x1,al
  416302:	add    BYTE PTR [ecx],dh
  416304:	fwait
  416305:	adc    BYTE PTR [edx+ebp*1-0x4ffffe1f],al
  41630c:	test   DWORD PTR [ecx-0x18f6cf00],0x5b883674
  416316:	sub    BYTE PTR [ecx+0xd],cl
  416319:	pop    edx
  41631a:	ds pop ecx
  41631c:	cmp    al,0xd2
  41631e:	add    BYTE PTR [edi-0x80],bl
  416321:	mov    ch,0xeb
  416323:	and    eax,esi
  416325:	mov    esi,0xbfc3bb00
  41632a:	std    
  41632b:	dec    ebx
  41632c:	hlt    
  41632d:	scas   al,BYTE PTR es:[edi]
  41632e:	(bad)  
  41632f:	cmc    
  416330:	sub    al,0xff
  416332:	mov    WORD PTR [edi+0x3103e319],ds
  416338:	jg     0x4162dc
  41633a:	daa    
  41633b:	or     ah,BYTE PTR es:[eax+0x6f53de05]
  416342:	add    eax,0x7d78b14
  416347:	xor    DWORD PTR [ecx],ecx
  416349:	pusha  
  41634a:	mov    eax,ds:0x3e70d4d
  41634f:	pop    edi
  416350:	push   esi
  416351:	ret    0xc5
  416354:	sub    DWORD PTR [ecx],ecx
  416356:	push   0xffffffd0
  416358:	in     al,dx
  416359:	or     DWORD PTR [ebp-0x18f6d2e1],edx
  41635f:	mov    cs,WORD PTR [edx+eax*1-0x44]
  416363:	sbb    ch,BYTE PTR [eax+0x3107d78a]
  416369:	or     DWORD PTR [eax-0x77],esp
  41636c:	sub    DWORD PTR ds:0x827103e7,ecx
  416372:	push   ebp
  416373:	pop    ds
  416374:	sub    eax,0xb78ae709
  416379:	sbb    bl,ch
  41637b:	add    esi,DWORD PTR [ecx]
  41637d:	and    BYTE PTR [ebp+0x1b],0x35
  416381:	or     edi,esp
  416383:	lea    ebp,[ecx]
  416385:	pop    es
  416386:	xor    BYTE PTR [ecx],al
  416388:	jno    0x41630a
  41638a:	add    cl,ah
  41638c:	xor    esi,DWORD PTR [ebx+0x932e51c]
  416392:	jae    0x416394
  416394:	stos   BYTE PTR es:[edi],al
  416395:	mov    dl,BYTE PTR [eax]
  416397:	in     eax,0x32
  416399:	or     DWORD PTR [edi+0xd456f],eax
  41639f:	jmp    0xe5efef96
  4163a4:	or     DWORD PTR cs:[eax],eax
  4163a7:	jo     0x416360
  4163a9:	sbb    BYTE PTR [ecx+ebp*8],al
  4163ac:	xor    al,BYTE PTR [edx+0x936d186]
  4163b2:	add    BYTE PTR [ecx-0x572e7df3],bh
  4163b8:	add    BYTE PTR [ebx],bl
  4163ba:	add    al,BYTE PTR [ecx-0x76a8cc55]
  4163c0:	lahf   
  4163c1:	or     eax,0x1686facb
  4163c6:	add    DWORD PTR [esi+0x936d9],0xffb12561
  4163d0:	call   0x6f406d07
  4163d5:	sbb    eax,0xbde9000d
  4163da:	xchg   ebx,eax
  4163db:	and    al,0xed
  4163dd:	xor    cl,BYTE PTR [ecx]
  4163df:	jg     0x416433
  4163e1:	mov    ch,0x9
  4163e3:	add    cl,ch
  4163e5:	arpl   WORD PTR [ecx],dx
  4163e7:	or     ebp,0x62021116
  4163ed:	popa   
  4163ee:	sub    eax,0xc3ab9818
  4163f3:	call   0xfe361f76
  4163f8:	mov    esi,0x2b594e0c
  4163fd:	xor    eax,0x35127f09
  416402:	push   es
  416403:	add    BYTE PTR [eax],al
  416405:	mov    BYTE PTR [eax+0x4],bh
  416408:	sub    esp,edx
  41640a:	sub    bl,BYTE PTR [eax]
  41640c:	add    DWORD PTR [ebx-0x77ff86fa],0x44290478
  416416:	and    DWORD PTR [eax],ebx
  416418:	mov    ebx,DWORD PTR [ecx+eiz*1]
  41641b:	sbb    BYTE PTR [ecx+0x0],dl
  41641e:	rol    ebx,cl
  416420:	call   0xfc34e691
  416425:	pop    edi
  416426:	push   cs
  416427:	push   0x640c257
  41642c:	ret    
  41642d:	xchg   BYTE PTR [eax],dh
  41642f:	add    DWORD PTR [eax],eax
  416431:	add    BYTE PTR [ecx+0x6],cl
  416434:	add    BYTE PTR [eax],al
  416436:	leave  
  416437:	out    dx,al
  416438:	add    BYTE PTR [eax],0x18
  41643b:	push   es
  41643c:	outs   dx,DWORD PTR ds:[esi]
  41643d:	dec    ecx
  41643e:	fwait
  41643f:	jb     0x416465
  416441:	sbb    BYTE PTR [edi+esi*2],dl
  416444:	inc    edx
  416445:	cmp    ecx,DWORD PTR [esi+0x1800042a]
  41644b:	jp     0x416487
  41644d:	call   0x3d5464
  416452:	xchg   ebx,eax
  416453:	(bad)  
  416454:	call   0xfc34f65c
  416459:	mov    ebx,DWORD PTR [esi]
  41645b:	fmulp  st(1),st
  41645d:	stc    
  41645e:	jg     0x416453
  416460:	mov    al,BYTE PTR [esp+esi*1+0x15]
  416464:	xchg   DWORD PTR [esi+0x9f8],ecx
  41646a:	inc    edx
  41646b:	xlat   BYTE PTR ds:[ebx]
  41646c:	and    al,0x1
  41646e:	fcmovbe st,st(7)
  416470:	add    al,dl
  416472:	scas   eax,DWORD PTR es:[edi]
  416473:	jge    0x416472
  416475:	inc    BYTE PTR [esi+0x16]
  416478:	add    al,0x0
  41647a:	cwde   
  41647b:	test   BYTE PTR [esi+0x1e43124],bl
  416481:	add    BYTE PTR [eax],al
  416483:	jmp    DWORD PTR [edx+ebx*2-0x7d1fd63e]
  41648a:	int    0x8e
  41648c:	loopne 0x416449
  41648e:	sbb    al,0x2d
  416490:	loopne 0x416493
  416492:	mov    ecx,DWORD PTR [esi]
  416494:	jmp    0x61eb7c11
  416499:	adc    al,0x4
  41649b:	xor    eax,esp
  41649d:	mov    al,BYTE PTR [esi+0x1e449]
  4164a3:	icebp  
  4164a4:	push   0xe02d1cae
  4164a9:	add    DWORD PTR [edi+0x5cfb7],eax
  4164af:	xor    DWORD PTR [edi-0x7a],esp
  4164b2:	sbb    BYTE PTR ds:0x218a01e0,dh
  4164b8:	fmulp  st(7),st
  4164ba:	(bad)  
  4164bb:	repz jp 0x4164d2
  4164be:	jmp    esp
  4164c0:	test   BYTE PTR ds:0x19153100,0x89
  4164c7:	scas   eax,DWORD PTR es:[edi]
  4164c8:	rol    BYTE PTR ds:0x86793100,cl
  4164ce:	sbb    BYTE PTR ds:0xa84001e2,ch
  4164d4:	xor    BYTE PTR [eax],ah
  4164d6:	add    al,0x31
  4164d8:	loop   0x416464
  4164da:	xchg   BYTE PTR [ecx-0x1a],al
  4164dd:	add    DWORD PTR [eax],eax
  4164df:	mov    edx,0x31041c60
  4164e4:	loop   0x4164b7
  4164e6:	and    BYTE PTR [eax],al
  4164e8:	sbb    ch,BYTE PTR [eax+0x28]
  4164eb:	add    al,0x31
  4164ed:	loop   0x416564
  4164ef:	jb     0x4164ab
  4164f1:	and    eax,ecx
  4164f3:	call   0x205c821
  4164f8:	popa   
  4164f9:	or     DWORD PTR [edi],ecx
  4164fb:	xchg   esi,eax
  4164fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164fd:	lock push ds
  4164ff:	mov    DWORD PTR [edi+0x3103eb19],esi
  416505:	xor    eax,0xe7f096bb
  41650b:	add    ecx,DWORD PTR [esi+0x3107d786]
  416511:	or     DWORD PTR [eax-0x62],esp
  416514:	push   ebp
  416515:	add    eax,0xf3f603e7
  41651a:	add    esi,DWORD PTR [bx+di]
  41651d:	or     DWORD PTR [edx+0x1c],ebx
  416520:	mov    al,0x5d
  416522:	or     ebx,DWORD PTR [ebx+esi*1]
  416525:	test   BYTE PTR [ebx],dh
  416527:	sub    BYTE PTR [ecx],bh
  416529:	pop    ebx
  41652a:	jb     0x4164f9
  41652c:	pop    ecx
  41652d:	gs sar ah,0x44
  416531:	push   eax
  416532:	adc    eax,0xdfcad85f
  416537:	add    esi,DWORD PTR [esi+0x3106e7f3]
  41653d:	or     DWORD PTR [ecx],ebx
  41653f:	or     BYTE PTR [esi+0x45],cl
  416542:	retf   
  416543:	sbb    ebx,DWORD PTR [esi+0x317ee7f4]
  416549:	or     ecx,edi
  41654b:	push   0x0
  41654d:	push   esi
  41654e:	inc    ebp
  41654f:	ret    
  416550:	sbb    edi,DWORD PTR [eax+0x631bcb54]
  416556:	test   BYTE PTR [ebp+0x66f23eeb],bl
  41655c:	cld    
  41655d:	mov    WORD PTR [edi-0x44],cs
  416560:	pop    eax
  416561:	repz add bh,ah
  416564:	add    bl,BYTE PTR [edi+0x3103e30c]
  41656a:	jbe    0x41654c
  41656c:	mov    BYTE PTR [edi+0x3103e318],dh
  416572:	add    BYTE PTR [eax],0x6f
  416575:	sbb    al,BYTE PTR ds:0x8872e900
  41657b:	scas   al,BYTE PTR es:[edi]
  41657c:	add    eax,0x70000939
  416581:	lods   al,BYTE PTR ds:[esi]
  416582:	sbb    BYTE PTR [ecx+ebp*8],al
  416585:	xor    al,BYTE PTR [edx+0x92ef186]
  41658b:	add    BYTE PTR [ecx],bl
  41658d:	push   edx
  41658e:	lock mov ebx,0x92edd
  416594:	jl     0x4165b1
  416596:	add    BYTE PTR [esi+0x92ed9],0x70
  41659d:	mov    bl,0x10
  41659f:	add    al,0xe9
  4165a1:	xor    cl,BYTE PTR [ecx-0x79]
  4165a4:	xchg   DWORD PTR [ecx],edi
  4165a6:	add    eax,0x86a5e900
  4165ab:	adc    ch,ch
  4165ad:	xor    cl,BYTE PTR [ecx]
  4165af:	mov    DWORD PTR [edi+0x0],esp
  4165b2:	and    eax,0x62e90005
  4165b7:	sub    BYTE PTR [ecx+0x52111115],cl
  4165bd:	jb     0x4165ba
  4165bf:	loope  0x416595
  4165c1:	mov    eax,ds:0x375ded2a
  4165c6:	js     0x416618
  4165c8:	ret    0x32e1
  4165cb:	add    BYTE PTR [ebp+ecx*8+0xe],0x84
  4165d0:	nop
  4165d1:	jmp    0xb33f5470
  4165d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d7:	add    eax,0x7732e904
  4165dc:	pop    ss
  4165dd:	jb     0x41659b
  4165df:	std    
  4165e0:	add    ebp,ecx
  4165e2:	xor    dh,BYTE PTR [eax]
  4165e4:	mov    edi,0xbf2031df
  4165e9:	sub    esi,DWORD PTR [ecx]
  4165eb:	or     DWORD PTR [ecx],ebp
  4165ed:	add    BYTE PTR [ecx],bl
  4165ef:	or     BYTE PTR [eax],al
  4165f1:	push   0x4c20ad9
  4165f6:	enter  0xc037,0xc2
  4165fa:	int3   
  4165fb:	or     bh,BYTE PTR [edi-0x14]
  4165fe:	test   al,0x57
  416600:	push   ecx
  416601:	mov    esi,DWORD PTR [esi+ecx*1-0x3084a9e0]
  416608:	xchg   ecx,esi
  41660a:	fistp  QWORD PTR [ebp+0x5c]
  41660d:	and    al,0x68
  41660f:	jge    0x41666d
  416611:	and    al,0x90
  416613:	sub    eax,0x8c0008ae
  416618:	or     al,BYTE PTR [eax]
  41661a:	ud2    
  41661c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41661d:	add    BYTE PTR [eax],al
  41661f:	pop    eax
  416620:	fild   WORD PTR [edi]
  416622:	lea    ebp,[esi+ecx*1+0xa480000]
  416629:	mov    DWORD PTR [esp+ebp*1+0x5],esp
  41662d:	xchg   DWORD PTR [esi-0x211a4],eax
  416633:	aad    0x81
  416635:	add    BYTE PTR [eax+0x49],ch
  416638:	or     dh,BYTE PTR [edi]
  41663a:	enter  0x19fe,0x87
  41663e:	mov    fs,WORD PTR [esi+ebp*8]
  416641:	std    
  416642:	call   DWORD PTR [ebx]
  416644:	lds    esi,FWORD PTR [esi+0x4]
  416647:	repz (bad) 
  416649:	out    0xb,eax
  41664b:	repz les eax,FWORD PTR [ecx]
  41664e:	add    BYTE PTR [eax],ah
  416650:	add    al,0x0
  416652:	jmp    0x41666e
  416654:	aaa    
  416655:	ror    BYTE PTR [ebx+0x40296],0x8
  41665c:	add    esi,DWORD PTR [esi+0x45b7e711]
  416662:	add    DWORD PTR [ebx+0x3e],esp
  416665:	xchg   esi,eax
  416666:	add    al,0x31
  416668:	imul   eax,DWORD PTR ds:0x8afdaa8a,0xc
  41666f:	mov    dh,0x7a
  416671:	jg     0x41667b
  416673:	sub    eax,0x870d01e0
  416678:	iret   
  416679:	or     dh,BYTE PTR [esi-0x711e8f00]
  41667f:	dec    esp
  416680:	(bad)  
  416681:	fisttp DWORD PTR [esi+0x1e42d96]
  416687:	add    BYTE PTR [eax+0x30b784eb],ch
  41668d:	loopne 0x416690
  41668f:	add    BYTE PTR [eax],dh
  416691:	jbe    0x416690
  416693:	add    esi,DWORD PTR [ecx]
  416695:	loopne 0x41669b
  416697:	mov    gs,WORD PTR [ecx]
  416699:	fadd   QWORD PTR [ecx]
  41669b:	add    BYTE PTR [edx+0x3103fd65],ch
  4166a1:	loopne 0x41662f
  4166a3:	enter  0x5e1a,0x8
  4166a7:	add    al,0x31
  4166a9:	loopne 0x41662d
  4166ab:	div    DWORD PTR [ecx]
  4166ad:	dec    eax
  4166ae:	add    DWORD PTR [eax],eax
  4166b0:	(bad)  
  4166b1:	fimul  WORD PTR [ecx-0x79]
  4166b4:	scas   eax,DWORD PTR es:[edi]
  4166b5:	(bad)  
  4166b7:	(bad)  
  4166b8:	ds clc 
  4166ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166bb:	or     BYTE PTR ds:0xb30d01e0,ch
  4166c1:	sbb    bh,dh
  4166c3:	std    
  4166c4:	es js  0x416707
  4166c7:	and    al,0x61
  4166c9:	pop    eax
  4166ca:	add    al,0x65
  4166cc:	xor    dl,ah
  4166ce:	cmp    al,0xc2
  4166d0:	xchg   esp,ebx
  4166d2:	mov    dl,BYTE PTR [ebp+ecx*2-0x4e]
  4166d6:	in     al,dx
  4166d7:	pop    es
  4166d8:	mov    dl,0x7a
  4166da:	add    DWORD PTR ds:0x1a8af,ecx
  4166e0:	add    BYTE PTR [ecx],dh
  4166e2:	or     esi,esi
  4166e4:	mov    cl,0x72
  4166e6:	or     esi,ebp
  4166e8:	mov    cl,0x6a
  4166ea:	or     ah,BYTE PTR [edx+0x40]
  4166ed:	scas   eax,DWORD PTR es:[edi]
  4166ee:	add    eax,0x30b93862
  4166f3:	inc    edx
  4166f4:	or     DWORD PTR [ebp+0x3103e8b8],ebp
  4166fa:	and    BYTE PTR [ebp+0x24],0x2d
  4166fe:	or     edi,esp
  416700:	xchg   BYTE PTR ds:0x4d402dfc,dh
  416706:	or     eax,0x9310be7
  41670b:	sar    BYTE PTR [esi-0x69dd0dd],cl
  416711:	dec    eax
  416712:	lock jnp 0x416744
  416715:	mov    edx,0x7e6be784
  41671a:	in     al,dx
  41671b:	mov    dl,0x81
  41671d:	sub    eax,0xe703e705
  416722:	adc    BYTE PTR [edx-0x7f],dh
  416725:	xor    eax,0x1803e705
  41672a:	icebp  
  41672b:	pop    ebp
  41672c:	add    BYTE PTR [eax],cl
  41672e:	icebp  
  41672f:	ret    0x1807
  416732:	icebp  
  416733:	push   0xe86131c0
  416738:	add    ecx,DWORD PTR [eax+0x7]
  41673b:	cli    
  41673c:	clc    
  41673d:	test   al,0x3
  41673f:	bound  esi,QWORD PTR [edi]
  416741:	jmp    0x4a52c3
  416746:	push   0x66cc1ac6
  41674b:	push   ebp
  41674c:	retf   
  41674d:	daa    
  41674e:	lahf   
  41674f:	add    eax,0x1d554f60
  416754:	ret    0x34fc
  416757:	test   DWORD PTR [ecx],ebx
  416759:	add    esi,DWORD PTR [ecx]
  41675b:	or     DWORD PTR [eax],eax
  41675d:	fs xchg ebp,eax
  41675f:	or     BYTE PTR [eax],al
  416761:	jmp    0x130ce998
  416766:	cmc    
  416767:	or     DWORD PTR [ebp+eax*1+0x41],0x32
  41676c:	dec    esp
  41676d:	or     eax,0x1384fe09
  416772:	xor    cl,BYTE PTR [ecx]
  416774:	add    BYTE PTR [edx+0x6e],dh
  416777:	and    eax,0xec2e7310
  41677c:	aaa    
  41677d:	popf   
  41677e:	das    
  41677f:	or     DWORD PTR [ecx-0x46eab163],ecx
  416785:	jmp    0x4167b9
  416787:	or     DWORD PTR [eax],eax
  416789:	xchg   ebp,eax
  41678a:	xor    cl,BYTE PTR ss:[esi-0x2146933]
  416791:	fimul  WORD PTR [edi]
  416793:	mov    edi,0x8232e900
  416798:	push   esp
  416799:	lds    eax,FWORD PTR [edx+0x32]
  41679c:	fidivr DWORD PTR [edx+0x53]
  41679f:	or     BYTE PTR [ebx-0x15],0xbd
  4167a3:	loopne 0x4167ce
  4167a5:	push   ebp
  4167a6:	adc    DWORD PTR [ecx],esp
  4167a8:	mov    ah,BYTE PTR ds:0x3a092800
  4167ae:	call   0x28826a94
  4167b3:	or     cl,bh
  4167b5:	jb     0x416772
  4167b7:	mov    edx,0xabd5243c
  4167bc:	pop    esp
  4167bd:	and    al,0x1
  4167bf:	cli    
  4167c0:	into   
  4167c1:	or     eax,0xa1465
  4167c6:	jmp    0xf965b536
  4167cb:	mov    WORD PTR [ecx+edx*2+0x38],es
  4167cf:	stos   BYTE PTR es:[edi],al
  4167d0:	mov    ebx,0xed0b5be8
  4167d5:	std    
  4167d6:	add    BYTE PTR [ebx-0x7cefdbbf],al
  4167dc:	pop    ecx
  4167dd:	and    al,0x18
  4167df:	sbb    DWORD PTR [edi-0x79],edx
  4167e2:	into   
  4167e3:	push   ebx
  4167e4:	fucomp st(0)
  4167e6:	lahf   
  4167e7:	push   edx
  4167e8:	repnz sti 
  4167ea:	sub    eax,DWORD PTR [eax-0x2bdbb382]
  4167f0:	pop    es
  4167f1:	jmp    0xc52417ae
  4167f6:	dec    esi
  4167f7:	pop    es
  4167f8:	loopne 0x416781
  4167fa:	ins    BYTE PTR es:[edi],dx
  4167fb:	xor    al,0x1d
  4167fd:	mov    ebp,0xc27fcafa
  416802:	shl    eax,0x11
  416805:	inc    ecx
  416807:	fwait
  416808:	sub    ah,BYTE PTR [eax+edx*1]
  41680b:	xchg   ebx,eax
  41680c:	into   
  41680d:	jbe    0x416815
  41680f:	add    BYTE PTR [ecx],dl
  416811:	inc    ecx
  416812:	and    al,0x18
  416814:	xor    edi,DWORD PTR [edi]
  416816:	aaa    
  416817:	mov    ?,WORD PTR [edx+ebp*8-0x3]
  41681b:	inc    DWORD PTR ds:0x13514f2c
  416821:	ret    
  416822:	call   0xfc34ca8a
  416827:	mov    esp,DWORD PTR [ecx+ebp*1]
  41682a:	adc    BYTE PTR [ebx+0x24447f80],cl
  416830:	pusha  
  416831:	pop    eax
  416832:	push   eax
  416833:	mov    ebp,DWORD PTR [esi+0x6ffa50de]
  416839:	repz xchg eax,ecx
  41683c:	and    eax,eax
  41683e:	xchg   DWORD PTR [esp+0x1d],ebp
  416842:	mov    eax,0x2a9fb2ab
  416847:	test   ecx,0xc1c1ca7e
  41684d:	adc    bh,bh
  41684f:	leave  
  416850:	xor    edi,ebx
  416852:	retf   0x7d39
  416855:	les    edx,FWORD PTR [ecx]
  416857:	jb     0x41688e
  416859:	ja     0x4168a8
  41685b:	and    al,0x25
  41685d:	jns    0x4168ac
  41685f:	and    al,0x19
  416861:	imul   edx,DWORD PTR [ebp+0x24],0x7e4d41
  416868:	pop    ecx
  416869:	loope  0x41686c
  41686b:	cmp    DWORD PTR [edi-0x2900021d],esi
  416871:	leave  
  416872:	sbb    DWORD PTR [ecx-0x2344900],ecx
  416878:	inc    esi
  41687a:	push   es
  41687b:	cld    
  41687c:	jbe    0x4168b3
  41687e:	pop    ss
  41687f:	cld    
  416880:	jmp    0x803d6faa
  416885:	jbe    0x416866
  416887:	imul   edi,edi,0x30ff16a6
  41688d:	sahf   
  41688e:	jbe    0x416893
  416890:	mov    DWORD PTR [ebp+0x59],edx
  416893:	mov    al,BYTE PTR [esi+0x1e451]
  416899:	xor    bl,BYTE PTR [ebx]
  41689b:	sub    BYTE PTR [ebp+edx*2-0x34],0x4
  4168a0:	je     0x4168c5
  4168a2:	pop    ebp
  4168a3:	test   BYTE PTR ds:0xfdf319b4,0x66
  4168aa:	(bad)  
  4168ab:	or     al,0x87
  4168ad:	in     eax,dx
  4168ae:	add    ebx,DWORD PTR [edi+eax*4]
  4168b1:	cmc    
  4168b2:	sti    
  4168b3:	adc    ecx,DWORD PTR [ecx-0x76dffc0b]
  4168b9:	(bad)  
  4168bb:	adc    ecx,DWORD PTR [ecx+0x5d1c03ed]
  4168c1:	xlat   BYTE PTR ds:[ebx]
  4168c2:	adc    al,0x89
  4168c4:	push   eax
  4168c5:	xor    eax,0xb2590c69
  4168ca:	or     DWORD PTR [ebx-0x19060cec],ebp
  4168d0:	add    BYTE PTR ds:0x55786a22,0x4d
  4168d7:	out    0x4d,eax
  4168d9:	add    BYTE PTR [eax+0x400afcda],bh
  4168df:	leave  
  4168e0:	sbb    eax,0xa921ed81
  4168e5:	sbb    al,0x31
  4168e7:	xchg   esp,eax
  4168e8:	and    esp,DWORD PTR [eax]
  4168ea:	jno    0x41687a
  4168ec:	daa    
  4168ed:	outs   dx,DWORD PTR ds:[esi]
  4168ee:	sub    ecx,DWORD PTR [edi+ebp*1+0x2b8c77f5]
  4168f5:	cmp    al,0xf3
  4168f7:	add    edi,esp
  4168f9:	mov    BYTE PTR [ebp+0x2d],dh
  4168fc:	stos   DWORD PTR es:[edi],eax
  4168fd:	jle    0x4168f5
  4168ff:	pop    ebp
  416900:	dec    ebp
  416901:	mov    DWORD PTR [ebp+0x2d],ebx
  416904:	mov    ds:0x455d837e,eax
  416909:	mov    ebp,DWORD PTR [edi+0x3103eafd]
  41690f:	push   ecx
  416910:	jo     0x416990
  416912:	push   ecx
  416913:	or     eax,0x97b603e7
  416918:	idiv   edi
  41691a:	xchg   al,ch
  41691c:	aas    
  41691d:	out    0x78,al
  41691f:	not    DWORD PTR [edx+0x31]
  416922:	outs   dx,BYTE PTR ds:[esi]
  416923:	inc    eax
  416924:	out    0xad,al
  416926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416927:	or     DWORD PTR [edi-0x5845cebe],esi
  41692d:	xor    BYTE PTR [eax+ebx*1-0x6b],dh
  416931:	mov    edx,0x4283856
  416936:	jle    0x416901
  416938:	sbb    bh,BYTE PTR [ebp+0x1809f34]
  41693e:	add    BYTE PTR [ecx],al
  416940:	dec    edx
  416941:	out    0xd2,eax
  416943:	jno    0x416961
  416945:	add    BYTE PTR [esi-0x154860cb],ch
  41694b:	bound  ebp,QWORD PTR [eax]
  41694d:	add    BYTE PTR [eax-0x1a40760e],bh
  416953:	popa   
  416954:	into   
  416955:	jg     0x4168e7
  416957:	xor    ch,al
  416959:	std    
  41695a:	jmp    0xa9c539df
  41695f:	xor    eax,0x32f0b98c
  416964:	or     DWORD PTR [ecx+0x60],edx
  416967:	cmp    al,0x94
  416969:	dec    esi
  41696a:	in     eax,0xb3
  41696c:	retf   0x8918
  41696f:	(bad)  
  416971:	mov    esi,0x933e9
  416976:	fs push 0xffffffe8
  416979:	push   esp
  41697a:	pusha  
  41697b:	and    ebx,DWORD PTR [edx]
  41697d:	shr    ah,0x32
  416980:	or     DWORD PTR [eax],eax
  416982:	jmp    0xae069930
  416987:	scas   eax,DWORD PTR es:[edi]
  416988:	out    0xfd,eax
  41698a:	jmp    0x29c272c1
  41698f:	sahf   
  416990:	and    al,BYTE PTR [eax]
  416992:	in     eax,0x32
  416994:	or     DWORD PTR [edx+0x5],esi
  416997:	mov    bl,0xca
  416999:	add    ch,ah
  41699b:	xor    cl,BYTE PTR [ecx]
  41699d:	sub    DWORD PTR [eax],0x74f9307e
  4169a3:	add    BYTE PTR [ecx+edx*4-0x72],ah
  4169a7:	(bad)  [esi-0x19]
  4169aa:	std    
  4169ab:	bound  esi,QWORD PTR [edx+ecx*4]
  4169ae:	enter  0xdce6,0x8e
  4169b2:	and    al,0xe5
  4169b4:	xor    cl,BYTE PTR [ecx]
  4169b6:	xchg   DWORD PTR [edi+0x4d],esp
  4169b9:	or     eax,DWORD PTR [eax]
  4169bb:	jmp    0x45f085
  4169c0:	dec    esp
  4169c1:	or     eax,DWORD PTR [eax]
  4169c3:	mov    DWORD PTR [esi+0x18000408],esi
  4169c9:	data16 cmp cl,BYTE PTR [ebx+0x40186]
  4169d0:	or     BYTE PTR [eax-0x6a],ch
  4169d3:	adc    BYTE PTR [ebx+ecx*1],cl
  4169d6:	add    BYTE PTR [ecx+0x40566],cl
  4169dc:	sbb    BYTE PTR [ebp+0x5],ah
  4169df:	mov    DWORD PTR [ecx+esi*1+0x1c],ecx
  4169e3:	mov    ecx,DWORD PTR [ecx+esi*1+0x54]
  4169e7:	mov    dl,dl
  4169e9:	or     eax,0xacc149e
  4169ee:	add    BYTE PTR [ecx],al
  4169f0:	mov    dh,0xfd
  4169f2:	add    eax,DWORD PTR [eax]
  4169f4:	enter  0x8522,0x7c
  4169f8:	cmp    al,0xfd
  4169fa:	test   BYTE PTR [esp+ebp*1+0x15],bh
  4169fe:	test   DWORD PTR [esi+0xed4],ebx
  416a04:	inc    ecx
  416a05:	cmp    DWORD PTR [eax+ebx*2],esp
  416a08:	add    BYTE PTR [ebx+0x6b860bcf],ah
  416a0e:	adc    al,BYTE PTR [eax]
  416a10:	add    BYTE PTR ds:0x88000096,ah
  416a16:	or     al,BYTE PTR [edi-0x7ea983bc]
  416a1c:	rcr    BYTE PTR [esp+esi*1+0x126c4c87],0x3d
  416a24:	mov    esp,eax
  416a26:	sbb    BYTE PTR cs:[ecx+edx*1-0x4374d6a0],al
  416a2e:	cs pusha 
  416a30:	mov    esp,esi
  416a32:	stc    
  416a33:	add    eax,DWORD PTR [eax]
  416a35:	dec    eax
  416a36:	pop    es
  416a37:	dec    esp
  416a38:	and    al,0x31
  416a3a:	and    BYTE PTR [esi-0x77],dl
  416a3d:	lahf   
  416a3e:	fadd   QWORD PTR ds:0x57fb3100
  416a44:	and    al,0xe1
  416a46:	add    BYTE PTR [ebp+0x4c],bh
  416a49:	push   ebp
  416a4a:	cld    
  416a4b:	push   ebp
  416a4c:	dec    edi
  416a4d:	add    BYTE PTR es:[esi-0x3e8abe3c],0xd
  416a55:	lods   eax,DWORD PTR ds:[esi]
  416a56:	cld    
  416a57:	or     BYTE PTR [eax],al
  416a59:	xor    DWORD PTR [ebx-0x2dadbb3],edi
  416a5f:	adc    eax,0x45d48d89
  416a64:	mov    DWORD PTR [ebp-0x34],ebx
  416a67:	inc    ecx
  416a68:	xchg   DWORD PTR [ebp-0x2c],ebx
  416a6b:	sbb    eax,0xcc7d0087
  416a70:	sbb    ecx,ebp
  416a72:	ds pop ebx
  416a74:	inc    ebp
  416a75:	and    al,0x7d
  416a77:	pop    ebx
  416a78:	jg     0x416a8e
  416a7a:	xor    eax,0xf22901f0
  416a7f:	lahf   
  416a80:	push   esi
  416a81:	dec    edi
  416a82:	lods   al,BYTE PTR ds:[esi]
  416a83:	and    DWORD PTR ds:0xbf5b6334,0xffffffe8
  416a8a:	mov    dl,0x1a
  416a8c:	repnz std 
  416a8e:	mov    edx,0xb22c25a3
  416a93:	sub    al,0x3
  416a95:	or     eax,0x84da5
  416a9a:	xor    DWORD PTR [ebx-0x79],ebp
  416a9d:	and    al,0x2d
  416a9f:	lock add ebp,eax
  416aa2:	cmc    
  416aa3:	rcl    DWORD PTR ds:0x1f03100,cl
  416aa9:	aaa    
  416aaa:	cmc    
  416aab:	rcr    DWORD PTR [ecx],cl
  416aad:	jae    0x416a82
  416aaf:	jb     0x416aa3
  416ab1:	jmp    FWORD PTR [edi]
  416ab3:	or     DWORD PTR [ebp+0x56],ebp
  416ab6:	xor    BYTE PTR [ecx],cl
  416ab8:	out    0x2a,eax
  416aba:	cmc    
  416abb:	sub    al,0xf
  416abd:	add    DWORD PTR [ebp+0x3103ea50],ebp
  416ac3:	xchg   edx,eax
  416ac4:	sub    ebp,DWORD PTR [eax]
  416ac6:	and    DWORD PTR [esi],edi
  416ac8:	adc    dl,cl
  416aca:	cmp    BYTE PTR [ecx],0x62
  416acd:	ret    0xe819
  416ad0:	mov    bl,0xf1
  416ad2:	add    BYTE PTR [ecx+edx*4],bl
  416ad5:	xor    ebp,DWORD PTR [eax]
  416ad7:	pop    ecx
  416ad8:	cmp    al,0x38
  416ada:	jge    0x416adb
  416adc:	nop
  416add:	scas   eax,DWORD PTR es:[edi]
  416ade:	fdivr  QWORD PTR [ebp+0x38f18edc]
  416ae4:	enter  0x7ef6,0x1a
  416ae8:	or     bh,ah
  416aea:	add    edi,DWORD PTR [eax+0x2a2bcb4d]
  416af0:	or     esp,esp
  416af2:	add    esi,DWORD PTR [ecx]
  416af4:	gs lock test ah,dl
  416af8:	pop    es
  416af9:	out    dx,al
  416afa:	xchg   DWORD PTR [esi],esi
  416afc:	or     bh,ah
  416afe:	add    ecx,DWORD PTR [edx]
  416b00:	or     esp,ecx
  416b02:	add    esi,DWORD PTR [ecx]
  416b04:	lock test BYTE PTR gs:[eax+ecx*1+0x7a687ee],dh
  416b0d:	out    0x3,eax
  416b0f:	mov    eax,0xa84c0345
  416b14:	dec    ebp
  416b15:	retf   
  416b16:	push   edi
  416b17:	test   al,0x7b
  416b19:	repz pop es
  416b1b:	xor    DWORD PTR [ecx],ecx
  416b1d:	ret    0xaec4
  416b20:	dec    ebp
  416b21:	ret    
  416b22:	and    ebp,ecx
  416b24:	cmp    BYTE PTR [ebp+edi*1+0x76],dh
  416b28:	cmp    DWORD PTR [ecx+0x4dba55],ebp
  416b2e:	int    0x26
  416b30:	cmp    DWORD PTR [ecx-0x53a82e1],ecx
  416b36:	out    0x0,al
  416b38:	popa   
  416b39:	xchg   edx,eax
  416b3a:	dec    esp
  416b3b:	add    eax,0xd4c1c2d
  416b40:	in     eax,dx
  416b41:	pop    DWORD PTR [ecx-0x18]
  416b44:	mov    ebx,0xdfe5244c
  416b49:	fs aaa 
  416b4b:	jb     0x416b50
  416b4d:	aaa    
  416b4e:	mov    DWORD PTR [edi-0x510ab2f6],esp
  416b54:	and    DWORD PTR [edx-0x738d32b4],edx
  416b5a:	inc    esp
  416b5b:	lds    edx,FWORD PTR [esi-0x6e]
  416b5e:	inc    esp
  416b5f:	int    0x6e
  416b61:	cmp    DWORD PTR [edi+0x62],ecx
  416b64:	lock lock sub eax,0x89e6017e
  416b6b:	sub    eax,0xa1292d19
  416b70:	sub    eax,0xb0b0b8cc
  416b75:	jmp    0xd43cc9b2
  416b7a:	cli    
  416b7b:	jb     0x416b71
  416b7d:	mov    ds:0xc72df6e8,eax
  416b82:	jmp    0x2496a7a0
  416b87:	adc    eax,0x51ce9262
  416b8c:	stos   DWORD PTR es:[edi],eax
  416b8d:	fdiv   st(5),st
  416b8f:	ss and eax,0x1da5243d
  416b95:	ror    DWORD PTR [ecx+0x52494ead],0xb9
  416b9c:	add    BYTE PTR ds:0x881fe8d3,cl
  416ba2:	in     eax,0xfd
  416ba4:	ret    0x916a
  416ba7:	rol    DWORD PTR [eax],0x3
  416baa:	push   esp
  416bab:	and    al,0x58
  416bad:	ror    DWORD PTR [edx+eiz*8-0x4232a4fd],1
  416bb4:	clc    
  416bb5:	dec    edx
  416bb6:	or     al,0x44
  416bb8:	and    al,0x4
  416bba:	xor    al,ch
  416bbc:	jge    0x416bfe
  416bbe:	retf   0x2444
  416bc1:	inc    esp
  416bc2:	or     al,0x0
  416bc4:	add    BYTE PTR [eax-0x70],cl
  416bc7:	sti    
  416bc8:	jbe    0x416bfa
  416bca:	ss ins BYTE PTR es:[edi],dx
  416bcc:	and    al,0x54
  416bce:	pop    ecx
  416bcf:	xor    BYTE PTR [ebx+0x5528314c],cl
  416bd5:	cmp    DWORD PTR [esi-0x32],ebx
  416bd8:	call   0x3d476b
  416bdd:	add    DWORD PTR [ecx+0x24],0x44
  416be1:	xchg   ebx,eax
  416be2:	aad    0x87
  416be4:	inc    esp
  416be5:	hlt    
  416be6:	inc    esi
  416be7:	push   edx
  416be8:	push   eax
  416be9:	and    DWORD PTR [ebx-0xd995418],0xfffffffb
  416bf0:	cmp    ebx,DWORD PTR [ebx+0x40245c5e]
  416bf6:	pop    eax
  416bf7:	or     bh,al
  416bf9:	test   BYTE PTR [edx],ch
  416bfb:	adc    al,0x1
  416bfd:	fadd   DWORD PTR [esi]
  416bff:	add    BYTE PTR [ebp+0x49605f00],al
  416c05:	cmp    DWORD PTR [edx+ebp*1+0x44],edi
  416c09:	jge    0x416b92
  416c0b:	pop    edi
  416c0c:	mov    ss,WORD PTR [esp+edx*4]
  416c0f:	push   es
  416c10:	add    BYTE PTR [edx-0x67],ch
  416c13:	aaa    
  416c14:	dec    ebp
  416c15:	mov    edi,DWORD PTR [esi]
  416c17:	lds    ebx,FWORD PTR [ebx-0x780db00d]
  416c1d:	push   esp
  416c1e:	je     0x416c6a
  416c20:	xchg   eax,ebx
  416c22:	xor    DWORD PTR [edi+0x48],esp
  416c25:	and    al,0xf1
  416c27:	popf   
  416c28:	push   ecx
  416c29:	mov    DWORD PTR [edi-0x8],esp
  416c2c:	pop    esi
  416c2d:	imul   BYTE PTR [esi-0x1d]
  416c30:	jp     0x416c7e
  416c32:	or     eax,0xaa4f58c8
  416c37:	add    bh,BYTE PTR [edi+0x5c]
  416c3a:	cmp    ecx,esi
  416c3c:	fstp   DWORD PTR [edi+eax*2-0x3d]
  416c40:	out    dx,al
  416c41:	cmp    DWORD PTR [ecx+0x67],ebp
  416c44:	dec    ebp
  416c45:	and    al,0xd9
  416c47:	push   ecx
  416c48:	cli    
  416c49:	(bad)  
  416c4a:	in     eax,dx
  416c4b:	adc    ebx,DWORD PTR [eax]
  416c4d:	add    BYTE PTR [ecx],dh
  416c4f:	lock add ecx,ebp
  416c52:	cmp    ch,BYTE PTR [edi+0x6d]
  416c55:	and    al,0x45
  416c57:	lock inc BYTE PTR [edx+0x1eee7]
  416c5e:	mov    dl,0x84
  416c60:	dec    DWORD PTR [edi+esi*4]
  416c63:	inc    esi
  416c64:	add    al,0x0
  416c66:	add    BYTE PTR [ecx],dh
  416c68:	addr16 push ebp
  416c6a:	and    al,0x51
  416c6c:	push   edi
  416c6d:	adc    DWORD PTR [esi*1-0xc7efe10],0x59
  416c75:	dec    edi
  416c76:	xor    edx,0xf18152ed
  416c7c:	in     eax,dx
  416c7d:	push   ecx
  416c7e:	mov    edi,DWORD PTR [ebp+0xc]
  416c81:	xor    BYTE PTR [edi-0x46],cl
  416c84:	sub    ecx,ebx
  416c86:	nop
  416c87:	mov    eax,0x6d89ee52
  416c8c:	adc    al,0x34
  416c8e:	cmp    ebp,esi
  416c90:	or     ebx,DWORD PTR [ecx+ecx*4]
  416c93:	std    
  416c94:	adc    edi,DWORD PTR [eax]
  416c96:	push   edx
  416c97:	stos   BYTE PTR es:[edi],al
  416c98:	add    DWORD PTR [ecx+0x7c],edx
  416c9b:	push   edx
  416c9c:	or     DWORD PTR [edi],ecx
  416c9e:	lock and cl,0x1e
  416ca2:	jp     0x416d0d
  416ca4:	lea    ebp,[ebx-0x48c3b6d9]
  416caa:	jp     0x416d13
  416cac:	lock adc eax,0xd2e16cf8
  416cb2:	ret    0x85be
  416cb5:	or     DWORD PTR [edx],eax
  416cb7:	xor    bh,al
  416cb9:	bound  edi,QWORD PTR [ebx-0x2716206a]
  416cbf:	sbb    esi,ecx
  416cc1:	shl    edi,0x44
  416cc4:	loope  0x416d28
  416cc6:	int3   
  416cc7:	test   al,0x4c
  416cc9:	add    ebx,DWORD PTR [eax+eax*1]
  416ccc:	loop   0x416d06
  416cce:	jb     0x416c8e
  416cd0:	sbb    ebp,edx
  416cd2:	mov    ah,0xed
  416cd4:	and    al,0x95
  416cd6:	lahf   
  416cd7:	sbb    eax,ebp
  416cd9:	or     al,0xa0
  416cdb:	lods   al,BYTE PTR ds:[esi]
  416cdc:	push   cs
  416cdd:	lods   al,BYTE PTR ds:[esi]
  416cde:	jb     0x416cfe
  416ce0:	add    al,0xf3
  416ce2:	mov    eax,0xa8d3b8ea
  416ce7:	fistp  DWORD PTR [esp+ecx*1]
  416cea:	mov    eax,ds:0xbb256d79
  416cef:	add    cl,bh
  416cf1:	and    al,0x90
  416cf3:	outs   dx,DWORD PTR ds:[esi]
  416cf4:	cmp    eax,ecx
  416cf6:	sub    ebp,DWORD PTR [eax]
  416cf8:	inc    ebp
  416cf9:	or     ah,bh
  416cfb:	add    esi,DWORD PTR [ecx]
  416cfd:	xchg   BYTE PTR [esi+0x76],ah
  416d00:	sbb    DWORD PTR [esp],esp
  416d03:	jo     0x416d12
  416d05:	xchg   esp,eax
  416d06:	mov    ebx,0xb9390127
  416d0b:	js     0x416cf4
  416d0d:	icebp  
  416d0e:	jne    0x416d07
  416d10:	lods   al,BYTE PTR ds:[esi]
  416d11:	loopne 0x416d85
  416d13:	int3   
  416d14:	mov    eax,0x3d0d0045
  416d19:	cmp    al,0x50
  416d1b:	(bad)  
  416d1c:	xlat   BYTE PTR ds:[ebx]
  416d1d:	icebp  
  416d1e:	jge    0x416d3c
  416d20:	pushf  
  416d21:	fidivr WORD PTR [ecx]
  416d23:	inc    ecx
  416d24:	test   BYTE PTR [edx+eax*1-0x7ef6cd16],dl
  416d2b:	lea    ecx,[esi-0xb]
  416d2e:	push   ebp
  416d30:	add    BYTE PTR [edi+0x32e902d6],dh
  416d36:	mov    bh,bl
  416d38:	jmp    0x932:0xe9d48e5d
  416d3f:	mov    DWORD PTR ds:0x35892919,esi
  416d45:	sbb    DWORD PTR [ecx-0x77],eax
  416d48:	outs   dx,DWORD PTR ds:[esi]
  416d49:	es add eax,0xa0b1e900
  416d4f:	sti    
  416d50:	sbb    BYTE PTR [eax-0x4fe4fe36],dh
  416d56:	enter  0x1901,0x9e
  416d5a:	dec    ebp
  416d5b:	and    al,0xed
  416d5d:	adc    DWORD PTR [edx-0x1f246e32],0xfffffffd
  416d64:	sahf   
  416d65:	mov    DWORD PTR [ebp+0x24],eax
  416d68:	fnstcw WORD PTR [ecx+0x35]
  416d6b:	and    al,0xd5
  416d6d:	jns    0x416dac
  416d6f:	and    al,0xd1
  416d71:	sbb    edx,ecx
  416d73:	push   edx
  416d74:	jb     0x416d1a
  416d76:	cmp    BYTE PTR [esp+ecx*8-0x6],bh
  416d7a:	and    al,0xf3
  416d7c:	outs   dx,BYTE PTR ds:[esi]
  416d7d:	lds    edi,FWORD PTR [ebx]
  416d7f:	push   ecx
  416d80:	jb     0x416d0e
  416d82:	xchg   DWORD PTR [ebp+eax*1+0x11],eax
  416d86:	icebp  
  416d87:	adc    eax,0x89ddcd5c
  416d8c:	popf   
  416d8d:	push   cs
  416d8e:	and    eax,0x93590029
  416d93:	jg     0x416d77
  416d95:	add    BYTE PTR [ebx+0x508bc208],bl
  416d9b:	retf   
  416d9c:	cmc    
  416d9d:	add    dh,bl
  416d9f:	jmp    edi
  416da1:	jmp    FWORD PTR [ebp*8+0x60cb55fb]
  416da8:	into   
  416da9:	mov    esp,ecx
  416dab:	daa    
  416dac:	sub    al,0xe8
  416dae:	sbb    bl,al
  416db0:	sti    
  416db1:	jmp    ebx
  416db3:	mov    ds:0x276c4487,eax
  416db8:	daa    
  416db9:	enter  0xa24b,0xb8
  416dbd:	jmp    0xf76fceac
  416dc2:	popa   
  416dc3:	mov    ch,0xfa
  416dc5:	mov    eax,DWORD PTR [edx+0x4b1fe5c5]
  416dcb:	popf   
  416dcc:	xchg   DWORD PTR [esp+ebp*1+0x19],eax
  416dd0:	inc    edi
  416dd2:	xor    edi,DWORD PTR [ecx+edi*2+0x2449cf08]
  416dd9:	adc    al,0x9
  416ddb:	or     eax,DWORD PTR [eax]
  416ddd:	add    BYTE PTR [ebp+0x132876f2],cl
  416de3:	retf   0x247c
  416de6:	cmp    DWORD PTR [ecx],0x24
  416de9:	xor    BYTE PTR [eax],bh
  416deb:	aaa    
  416dec:	xchg   esi,ecx
  416dee:	mov    al,0x94
  416df0:	hlt    
  416df1:	push   DWORD PTR [edi+0xc8bd85e]
  416df7:	sub    DWORD PTR [eax],ebp
  416df9:	push   ebp
  416dfa:	add    BYTE PTR [eax],bh
  416dfc:	pop    esi
  416dfd:	into   
  416dfe:	call   0x3d476d
  416e03:	adc    ecx,ebp
  416e05:	or     ecx,DWORD PTR [ebp+ebp*1+0x31000007]
  416e0c:	jae    0x416e76
  416e0e:	and    al,0x1d
  416e10:	lock cli 
  416e12:	or     BYTE PTR [ebx-0xe],0x1
  416e16:	add    BYTE PTR [edx-0x4ba7e284],bh
  416e1c:	pop    ss
  416e1d:	stc    
  416e1e:	or     DWORD PTR [edx],0xfffffff1
  416e21:	add    DWORD PTR [eax],eax
  416e23:	mov    dl,0x27
  416e25:	add    ecx,DWORD PTR ds:0x4a0af
  416e2b:	xor    DWORD PTR [ebx+0x50],ebp
  416e2e:	and    al,0xdd
  416e30:	push   0xffffffb9
  416e32:	sub    DWORD PTR [edx+0x55],edi
  416e35:	add    BYTE PTR [edx],cl
  416e37:	sub    ah,BYTE PTR [edi]
  416e39:	jb     0x416e3d
  416e3b:	stos   BYTE PTR es:[edi],al
  416e3c:	das    
  416e3d:	push   esp
  416e3e:	mov    ebp,ebp
  416e40:	ret    
  416e41:	or     eax,0x54236e29
  416e46:	mov    esi,ebp
  416e48:	add    ebp,DWORD PTR [eax]
  416e4a:	dec    edi
  416e4b:	stos   BYTE PTR es:[edi],al
  416e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e4d:	jl     0x416eab
  416e4f:	or     eax,0x26ccdc04
  416e54:	(bad)  
  416e55:	jmp    0x6572:0x3004a537
  416e5c:	imul   ecx,DWORD PTR [ebp+0x24],0x0
  416e60:	popa   
  416e61:	not    DWORD PTR [ebp-0x77]
  416e64:	push   DWORD PTR [edi+0x28]
  416e67:	hlt    
  416e68:	push   es
  416e69:	jg     0x416ee9
  416e6b:	fsubr  DWORD PTR [edx+0x5e38202b]
  416e71:	and    BYTE PTR [ebp-0x32],bh
  416e74:	fnstenv [ebp-0x35190213]
  416e7a:	(bad)  
  416e7b:	mov    DWORD PTR [ebp-0x34],edi
  416e7e:	or     eax,0x356b417e
  416e83:	and    al,0x1
  416e85:	or     DWORD PTR [edx+0x4f],esi
  416e88:	or     eax,0x15377015
  416e8d:	and    DWORD PTR [eax+0x4f],esp
  416e90:	or     eax,0x553f621d
  416e95:	stc    
  416e96:	popf   
  416e97:	push   esi
  416e98:	add    DWORD PTR [edx-0x27ab24d3],edx
  416e9e:	ss jmp 0x37e4:0x2c034ca8
  416ea6:	jb     0x416e61
  416ea8:	mov    eax,0x80ec0fc0
  416ead:	fst    QWORD PTR [esi]
  416eaf:	cs jo  0x416ebf
  416eb2:	pop    esp
  416eb3:	mov    ds:0x7ee70931,al
  416eb8:	add    eax,0xbf2ecf25
  416ebd:	and    al,0xeb
  416ebf:	add    esi,DWORD PTR [ecx]
  416ec1:	push   esp
  416ec2:	(bad)  
  416ec3:	jle    0x416ec5
  416ec5:	in     eax,0x24
  416ec7:	sti    
  416ec8:	jl     0x416eb7
  416eca:	and    al,0xf7
  416ecc:	push   eax
  416ecd:	jecxz  0x416f07
  416ecf:	bound  edi,QWORD PTR [edx-0x162825b7]
  416ed5:	sub    al,0x37
  416ed7:	sbb    bh,BYTE PTR [ebp-0x9]
  416eda:	xchg   edx,eax
  416edb:	and    esp,DWORD PTR [eax]
  416edd:	dec    ebp
  416ede:	icebp  
  416edf:	lods   eax,DWORD PTR ds:[esi]
  416ee0:	cmc    
  416ee1:	adc    al,0xdd
  416ee3:	bound  edi,QWORD PTR [eax]
  416ee5:	push   ebp
  416ee6:	and    eax,0xb8b8bbea
  416eeb:	xor    al,0x46
  416eed:	mov    dh,0x4d
  416eef:	retf   
  416ef0:	sbb    esp,DWORD PTR [ebx-0x70]
  416ef3:	popf   
  416ef4:	fsub   QWORD PTR [ecx-0x47167928]
  416efa:	shl    DWORD PTR [edx+0x40],0x15
  416efe:	and    DWORD PTR [eax],eax
  416f00:	push   ds
  416f01:	jge    0x416e95
  416f03:	into   
  416f04:	adc    DWORD PTR [edx+0x4466fdda],0x340d246d
  416f0e:	ror    DWORD PTR [ecx+0x392516ad],0x2a
  416f15:	sub    al,0x3d
  416f17:	and    al,0xa1
  416f19:	sbb    BYTE PTR [ecx+ebp*8-0x1b],al
  416f1d:	sbb    eax,0x1591243d
  416f22:	inc    ebp
  416f23:	and    al,0xf1
  416f25:	pop    ebp
  416f26:	and    DWORD PTR [ebp*8+0x73093200],0xfffffff0
  416f2e:	mov    ch,0x9b
  416f30:	sub    ch,ch
  416f32:	xor    cl,BYTE PTR [ecx]
  416f34:	add    BYTE PTR [ebp-0x13ffdfc3],dl
  416f3a:	xor    cl,BYTE PTR [ecx]
  416f3c:	jl     0x416f22
  416f3e:	mov    ch,0xde
  416f40:	add    bh,BYTE PTR [ebp+0xc]
  416f43:	pop    esp
  416f44:	jl     0x416f0b
  416f46:	sbb    cl,BYTE PTR [ecx]
  416f48:	jnp    0x416f33
  416f4a:	xor    bl,BYTE PTR [ebp+0x3]
  416f4d:	push   0x49
  416f4f:	or     dh,BYTE PTR [edx+edi*8-0x4b]
  416f53:	dec    esp
  416f54:	and    al,0x11
  416f56:	or     BYTE PTR [ecx+ecx*4-0x49],0xa
  416f5b:	retf   
  416f5c:	icebp  
  416f5d:	mov    esi,0x6230f209
  416f62:	outs   dx,BYTE PTR ds:[esi]
  416f63:	and    eax,0x254e6258
  416f68:	adc    BYTE PTR [edx-0x23],dh
  416f6b:	xor    ebp,edx
  416f6d:	cmp    esp,DWORD PTR [ebp-0x6e]
  416f70:	into   
  416f71:	sbb    DWORD PTR [edi-0x26710228],0x8002444
  416f7b:	test   ebx,ebp
  416f7d:	add    ebp,esp
  416f7f:	jmp    0x4c94826b
  416f84:	and    al,0x10
  416f86:	ins    DWORD PTR es:[edi],dx
  416f87:	sbb    eax,0x5c8a51fb
  416f8c:	into   
  416f8d:	call   0xfc19a992
  416f92:	call   FWORD PTR [ebx]
  416f94:	bnd jg 0x416f94
  416f97:	fwait
  416f98:	loopne 0x416f26
  416f9a:	sbb    DWORD PTR [eax+0x168b0007],0x8800040c
  416fa4:	dec    edx
  416fa5:	dec    edi
  416fa6:	push   eax
  416fa7:	adc    esp,DWORD PTR [edx-0xed7e118]
  416fad:	sti    
  416fae:	mov    ecx,esp
  416fb0:	sti    
  416fb1:	daa    
  416fb2:	push   ebp
  416fb3:	mov    ecx,0x208bce5c
  416fb8:	shl    al,0xf2
  416fbb:	das    
  416fbc:	icebp  
  416fbd:	aaa    
  416fbe:	ret    
  416fbf:	(bad)  
  416fc1:	xchg   BYTE PTR [esp+eiz*2-0x1],al
  416fc5:	xchg   BYTE PTR ss:[ebx+ebx*8-0x3],dh
  416fca:	jmp    ebp
  416fcc:	fld    QWORD PTR [eax+0x920be]
  416fd2:	add    BYTE PTR [eax+0x6b],cl
  416fd5:	inc    ecx
  416fd6:	cmp    eax,0xa18
  416fdb:	ins    BYTE PTR es:[edi],dx
  416fdc:	or     BYTE PTR [edi-0x3],bh
  416fdf:	or     ch,BYTE PTR [ebx+0x3]
  416fe2:	cmp    eax,0x7208
  416fe7:	pop    esp
  416fe8:	pop    ss
  416fe9:	xchg   DWORD PTR [esp+esi*8+0x4e],ebx
  416fed:	test   DWORD PTR [esp+esi*8+0xa],ebp
  416ff1:	sub    ebp,0x23fc3100
  416ff7:	mov    edi,eax
  416ff9:	aam    0xfd
  416ffb:	jmp    esi
  416ffd:	call   DWORD PTR [ecx-0x77]
  417000:	out    dx,eax
  417001:	js     0x417026
  417003:	lock (bad) 
  417005:	push   ebx
  417006:	lods   al,BYTE PTR ds:[esi]
  417007:	dec    esi
  417009:	lock add edi,edi
  41700c:	lods   al,BYTE PTR ds:[esi]
  41700d:	fdiv   st(5),st
  41700f:	(bad)  
  417010:	mov    esi,0x1d243ff9
  417015:	mov    ebp,0xed0d8be1
  41701a:	out    0xe9,al
  41701c:	or     edx,DWORD PTR [edi+0x48]
  41701f:	and    al,0xf9
  417021:	push   esi
  417022:	inc    eax
  417023:	and    al,0x49
  417025:	jge    0x417078
  417027:	mov    DWORD PTR [edi+0x48],edi
  41702a:	add    ecx,esi
  41702c:	xchg   BYTE PTR [ebx],ah
  41702e:	add    ebp,DWORD PTR [esi+0x1e425]
  417034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417035:	xchg   esp,eax
  417036:	or     ch,bh
  417038:	pop    edx
  417039:	int    0x7a
  41703b:	pop    esp
  41703c:	or     eax,0xe4fd80a8
  417041:	mov    cl,0x7a
  417043:	dec    esp
  417044:	or     eax,0x25967ac8
  417049:	in     al,0x1
  41704b:	add    BYTE PTR [eax-0x57c3dfcc],bh
  417051:	sub    al,0x20
  417053:	cmp    BYTE PTR [eax+0x10201c],ch
  417059:	jbe    0x417022
  41705b:	or     eax,DWORD PTR [ebx+0x45011c26]
  417061:	or     ch,bl
  417063:	jp     0x416feb
  417065:	cmp    eax,0x620001ec
  41706a:	add    BYTE PTR [ecx-0x32],bh
  41706d:	sbb    DWORD PTR [ecx],ecx
  41706f:	pop    ebp
  417070:	(bad)  
  417071:	cld    
  417072:	fstp   DWORD PTR [esi-0x18fae283]
  417078:	add    esi,DWORD PTR [edx-0x27802127]
  41707e:	or     bh,ah
  417080:	add    ebx,DWORD PTR [eax]
  417082:	pop    ebp
  417083:	ret    
  417084:	daa    
  417085:	and    al,0x84
  417087:	mov    BYTE PTR [ebx],al
  417089:	xor    DWORD PTR [ecx],ecx
  41708b:	bound  ecx,QWORD PTR [edi+0xd]
  41708e:	xor    eax,0xce08b672
  417093:	ins    BYTE PTR es:[edi],dx
  417094:	jmp    FWORD PTR [eax]
  417096:	push   ds
  417097:	cs ins DWORD PTR es:[edi],dx
  417099:	xor    ecx,DWORD PTR [esi+0x44b85326]
  41709f:	or     edx,DWORD PTR [eax]
  4170a1:	test   al,0xed
  4170a3:	adc    dl,bh
  4170a5:	add    bh,BYTE PTR [ecx]
  4170a7:	fs aaa 
  4170a9:	push   ebp
  4170aa:	sbb    eax,0x8f777a98
  4170af:	xchg   ebx,eax
  4170b0:	pop    ds
  4170b1:	push   ebp
  4170b2:	icebp  
  4170b3:	xchg   ebp,eax
  4170b4:	lock je 0x417090
  4170b7:	shl    BYTE PTR [edi+0x15],1
  4170ba:	adc    eax,0xb8002f99
  4170bf:	xor    al,0xcb
  4170c1:	xor    eax,DWORD PTR [edi+esi*1]
  4170c4:	jb     0x41707b
  4170c6:	dec    ecx
  4170c7:	loope  0x4170c1
  4170c9:	in     eax,0x4c
  4170cb:	(bad)  
  4170cc:	(bad)  
  4170cd:	jns    0x4170bc
  4170cf:	and    al,0x1f
  4170d1:	dec    ebp
  4170d2:	loope  0x417061
  4170d4:	lods   eax,DWORD PTR ds:[esi]
  4170d5:	fcomp  QWORD PTR [ecx-0x29]
  4170d8:	(bad)  
  4170d9:	in     eax,0x68
  4170db:	into   
  4170dc:	bound  ebx,QWORD PTR [eax+0x4d]
  4170df:	std    
  4170e0:	inc    esp
  4170e1:	adc    al,0xa8
  4170e3:	inc    ebp
  4170e4:	add    esi,DWORD PTR [eax+ebp*4]
  4170e7:	cmp    eax,0x90410d00
  4170ec:	dec    esp
  4170ed:	add    eax,0xcd549055
  4170f2:	push   esi
  4170f3:	add    BYTE PTR [ebp+eax*8+0x22],0x3e
  4170f8:	push   ebx
  4170f9:	cmp    DWORD PTR [eax-0x39],ebp
  4170fc:	call   0xfe1870b9
  417101:	jb     0x41711c
  417103:	sub    eax,0x82821638
  417108:	into   
  417109:	(bad)  
  41710a:	in     eax,dx
  41710b:	loope  0x4170ae
  41710d:	js     0x4170db
  41710f:	(bad)  
  417110:	cmp    DWORD PTR [esi+edx*2],ebp
  417113:	adc    ecx,DWORD PTR [ecx+0x391116a5]
  417119:	outs   dx,DWORD PTR ds:[esi]
  41711a:	push   ecx
  41711b:	or     eax,0x1017e900
  417120:	add    DWORD PTR [edi+0xd3d00],0x185d32e9
  41712a:	hlt    
  41712b:	xor    cl,BYTE PTR [eax+eax*1]
  41712e:	jmp    0x26c27d41
  417133:	xor    ebx,DWORD PTR [ebp+0x17]
  417136:	fdiv   QWORD PTR [edx]
  417138:	push   esp
  417139:	add    cl,ch
  41713b:	(bad)  
  41713c:	or     eax,DWORD PTR [ecx+0xb5d300e]
  417142:	sahf   
  417143:	add    al,BYTE PTR [edx-0x1787ee32]
  417149:	std    
  41714a:	test   BYTE PTR [ecx],0xd6
  41714d:	jmp    0x24a63b1b
  417152:	stc    
  417153:	aas    
  417154:	fdivr  st,st(5)
  417156:	jmp    0x312f38d
  41715b:	cld    
  41715c:	cmp    dl,BYTE PTR [ebx+0x62]
  41715f:	fsubr  st(0),st
  417161:	lds    eax,FWORD PTR [eax]
  417163:	push   es
  417164:	in     eax,dx
  417165:	sti    
  417166:	inc    ebp
  417167:	mov    edi,DWORD PTR [ebp+0x52f574fd]
  41716d:	ins    BYTE PTR es:[edi],dx
  41716e:	and    al,0xe8
  417170:	push   eax
  417171:	inc    esp
  417172:	and    al,0x3c
  417174:	dec    edx
  417175:	dec    eax
  417176:	mov    DWORD PTR [ecx+ebp*1],esi
  417179:	pop    eax
  41717a:	cmp    esp,DWORD PTR [eax-0x3f488024]
  417180:	in     al,dx
  417181:	sti    
  417182:	test   DWORD PTR [edi+0x9c81dc],esi
  417188:	enter  0xb,0x83
  41718c:	inc    edi
  41718d:	or     ecx,DWORD PTR [ebx]
  41718f:	xchg   BYTE PTR [ebx+0xc],bl
  417192:	add    BYTE PTR [eax],al
  417194:	inc    ebx
  417195:	and    BYTE PTR [eax+edx*1],ah
  417198:	jg     0x4171ea
  41719a:	mov    edi,0x4d3c5f2b
  41719f:	mov    eax,DWORD PTR [esi-0x4c]
  4171a2:	sub    ebp,esi
  4171a4:	imul   esp
  4171a6:	xchg   DWORD PTR [esp+ebp*1+0x25],edx
  4171aa:	push   ebx
  4171ab:	push   edx
  4171ac:	adc    ebx,DWORD PTR [esi+0xaf0e887]
  4171b2:	in     eax,dx
  4171b3:	call   DWORD PTR [edi+0x21]
  4171b6:	sar    DWORD PTR [edi-0x33],0x50
  4171ba:	inc    esp
  4171bb:	and    al,0x80
  4171bd:	and    BYTE PTR [esi+0xb4c24],al
  4171c3:	jne    0x417226
  4171c5:	mov    BYTE PTR [esi+0xb4c28],bh
  4171cb:	add    ah,cl
  4171cd:	add    edi,DWORD PTR [ecx]
  4171cf:	add    BYTE PTR [ebp+0xb],cl
  4171d2:	add    BYTE PTR [ebp+ecx*2-0x72],bh
  4171d6:	sti    
  4171d7:	add    bl,ah
  4171d9:	and    BYTE PTR [ecx],bh
  4171db:	add    BYTE PTR [ecx],dh
  4171dd:	cmp    eax,0xeda50004
  4171e2:	xchg   ch,bh
  4171e4:	xor    dl,BYTE PTR [esp+edi*8]
  4171e7:	push   esp
  4171e8:	sbb    DWORD PTR [ebx-0x2e],0x917800e8
  4171ef:	loope  0x4171ee
  4171f1:	sbb    bl,bh
  4171f3:	inc    eax
  4171f4:	pop    ecx
  4171f5:	pop    esi
  4171f6:	arpl   sp,cx
  4171f8:	std    
  4171f9:	push   edi
  4171fa:	arpl   ax,cx
  4171fc:	cmp    bl,dh
  4171fe:	fadd   DWORD PTR [ecx]
  417200:	mov    DWORD PTR [ebp-0x34],edx
  417203:	icebp  
  417204:	mov    dl,dh
  417206:	mov    ebx,0x5b7c50ca
  41720b:	shr    al,cl
  41720d:	cs mov fs,ecx
  417210:	std    
  417211:	ins    BYTE PTR es:[edi],dx
  417212:	arpl   cx,si
  417214:	inc    DWORD PTR [ebp+0x3d]
  417217:	in     eax,dx
  417218:	adc    BYTE PTR [edx-0x43efda64],ch
  41721e:	stos   DWORD PTR es:[edi],eax
  41721f:	loop   0x417270
  417221:	add    ebp,DWORD PTR [ebx-0x2e]
  417224:	call   0xfe22b05f
  417229:	stos   BYTE PTR es:[edi],al
  41722a:	xchg   esp,eax
  41722b:	and    eax,0x1e1cc54
  417230:	add    BYTE PTR [ecx],dh
  417232:	fcmovnb st,st(2)
  417234:	jno    0x417286
  417236:	pop    ebp
  417237:	jge    0x417239
  417239:	xor    eax,esp
  41723b:	add    DWORD PTR [ecx+0x5d4b7],ecx
  417241:	xor    DWORD PTR [ebx-0x79076cf],edx
  417247:	out    0xeb,al
  417249:	push   esi
  41724a:	xlat   BYTE PTR ds:[ebx]
  41724b:	add    al,0xae
  41724d:	and    eax,0x1e4
  417252:	xor    al,BYTE PTR ds:0x8c3dd1d
  417258:	int3   
  417259:	xchg   BYTE PTR [eax-0x2a],ch
  41725c:	call   0xe74ebfe2
  417261:	add    edi,DWORD PTR [edx+0x4658e041]
  417267:	sub    BYTE PTR [ebp-0xd],0x32
  41726b:	or     edi,esp
  41726d:	mov    WORD PTR [edi+0x3103eaf0],?
  417273:	dec    ecx
  417274:	pusha  
  417275:	xchg   ecx,eax
  417276:	sbb    eax,0xae03e70d
  41727b:	mov    ?,edi
  41727d:	pop    es
  41727e:	xor    DWORD PTR [ecx],ecx
  417280:	bound  ecx,QWORD PTR [ecx+0x3e70d49]
  417286:	stos   DWORD PTR es:[edi],eax
  417287:	clc    
  417288:	call   0x700c4a42
  41728d:	repz iret 
  41728f:	jae    0x417264
  417291:	pop    es
  417292:	xor    DWORD PTR [ecx],ecx
  417294:	hlt    
  417295:	cld    
  417296:	test   eax,0x3107f78e
  41729b:	or     DWORD PTR [eax-0x77],esi
  41729e:	dec    ecx
  41729f:	or     eax,0x7ff103e7
  4172a4:	pop    ebp
  4172a5:	push   DWORD PTR [edx]
  4172a7:	or     edi,esp
  4172a9:	mov    WORD PTR [edi+0x3103e2f8],gs
  4172af:	sub    BYTE PTR [ebp-0x5],0x32
  4172b3:	or     edi,esp
  4172b5:	lea    eax,[eax]
  4172b7:	and    DWORD PTR [ebx],ecx
  4172b9:	cmp    ecx,esp
  4172bb:	jae    0x41723d
  4172bd:	test   DWORD PTR [edi+ecx*8],0x3103eaf4
  4172c4:	pop    esp
  4172c5:	lock mov ?,WORD PTR [edi+0x3103eaf8]
  4172cc:	and    BYTE PTR [ebp-0x5],0x32
  4172d0:	or     DWORD PTR [eax],eax
  4172d2:	jmp    0xcdd000c9
  4172d7:	or     DWORD PTR ss:[eax],eax
  4172da:	jo     0x417287
  4172dc:	clc    
  4172dd:	add    ebp,ecx
  4172df:	xor    al,BYTE PTR [edx+0x92ef186]
  4172e5:	add    BYTE PTR [ecx-0x26797dab],bh
  4172eb:	or     DWORD PTR cs:[eax],eax
  4172ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ef:	xor    eax,0x31678909
  4172f4:	or     eax,0x8bade900
  4172f9:	sbb    ch,ch
  4172fb:	xor    cl,BYTE PTR [ecx]
  4172fd:	dec    DWORD PTR [esi-0x1b]
  417300:	or     BYTE PTR [eax],al
  417302:	jmp    0xca14331c
  417307:	lods   eax,DWORD PTR ds:[esi]
  417308:	dec    ebp
  417309:	and    al,0x25
  41730b:	scas   al,BYTE PTR es:[edi]
  41730c:	leave  
  41730d:	je     0x4172c7
  41730f:	mov    ebp,0xb4092445
  417314:	jnp    0x417326
  417316:	in     eax,0x32
  417318:	or     DWORD PTR [ecx],ebp
  41731a:	mov    ebp,0x4f390e00
  41731f:	jb     0x4172e4
  417321:	std    
  417322:	add    ebp,ecx
  417324:	xor    ah,BYTE PTR [edx]
  417326:	dec    esp
  417327:	add    eax,0x9e4f3765
  41732c:	xchg   ecx,eax
  41732d:	mov    ecx,0x87852581
  417332:	sar    BYTE PTR [esi+esi*1+0x3c2a8930],0x36
  41733a:	pop    esi
  41733b:	push   0x69
  41733d:	adc    edx,eax
  41733f:	add    DWORD PTR ds:0x2ef98682,esi
  417345:	or     DWORD PTR [eax],eax
  417347:	ret    0x2cf6
  41734a:	push   eax
  41734b:	add    BYTE PTR [ebp-0x24a1a4eb],cl
  417351:	sar    BYTE PTR [eax],0xc2
  417354:	pusha  
  417355:	or     BYTE PTR [eax+0x64800],bh
  41735b:	ret    
  41735c:	ret    
  41735d:	dec    ebx
  41735e:	and    al,0x4
  417360:	mov    ds:0x1be9bdc0,eax
  417365:	add    DWORD PTR [eax+ecx*1+0x48],0xffffffce
  41736a:	xchg   DWORD PTR [esp-0x7],eax
  41736e:	jl     0x41735c
  417370:	cmp    al,0x1
  417372:	add    BYTE PTR [eax],al
  417374:	xchg   ebp,eax
  417375:	enter  0x771,0x89
  417379:	int3   
  41737a:	sub    al,0x4
  41737c:	or     BYTE PTR [eax],cl
  41737e:	mov    edi,0x2c5c008b
  417383:	inc    esp
  417384:	add    al,0xd8
  417386:	pop    es
  417387:	xchg   DWORD PTR [esp+esi*8-0x37fffbb9],edx
  41738e:	push   ss
  41738f:	xchg   DWORD PTR [esp+esi*8-0x27fffbb9],ecx
  417396:	sbb    eax,0xf3f49487
  41739b:	add    eax,DWORD PTR [eax]
  41739d:	enter  0x5016,0x8b
  4173a1:	adc    al,0x2c
  4173a3:	inc    eax
  4173a4:	add    al,0x98
  4173a6:	pop    es
  4173a7:	push   edx
  4173a8:	push   eax
  4173a9:	std    
  4173aa:	inc    ebx
  4173ab:	and    al,0x18
  4173ad:	add    BYTE PTR [eax],bl
  4173af:	icebp  
  4173b0:	dec    DWORD PTR [edi-0x79]
  4173b3:	les    ebp,FWORD PTR [esp+edx*4]
  4173b6:	pop    es
  4173b7:	add    bl,al
  4173b9:	sbb    al,0xc4
  4173bb:	int3   
  4173bc:	int3   
  4173bd:	cmp    al,0xc4
  4173bf:	int3   
  4173c0:	int3   
  4173c1:	sbb    al,0xc4
  4173c3:	int3   
  4173c4:	int3   
  4173c5:	xor    DWORD PTR [ebp-0x2a4f1c76],edx
  4173cb:	rol    BYTE PTR [eax],cl
  4173cd:	xor    edx,esp
  4173cf:	xor    al,0x56
  4173d1:	out    0x56,al
  4173d3:	or     BYTE PTR ss:[eax],al
  4173d6:	test   DWORD PTR [edi],0x578982b6
  4173dc:	aas    
  4173dd:	xor    DWORD PTR [ecx-0x2c],ebx
  4173e0:	mov    edi,0xb60ee029
  4173e5:	add    BYTE PTR ds:0xb2ef8cd0,ch
  4173eb:	rol    DWORD PTR ds:0xb5cde0d,0xf8
  4173f2:	test   BYTE PTR [ecx],ah
  4173f4:	add    al,0x83
  4173f6:	stc    
  4173f7:	jmp    0x417471
  4173f9:	iret   
  4173fa:	cs pop edx
  4173fc:	ret    
  4173fd:	mov    BYTE PTR [ebp+0xd],ch
  417400:	int3   
  417401:	inc    ecx
  417402:	mov    dl,0xa7
  417404:	sbb    al,0x7c
  417406:	add    BYTE PTR [edx+0x5b266af],dh
  41740c:	adc    bh,bh
  41740e:	pop    ebp
  41740f:	(bad)  
  417410:	mov    eax,ss
  417412:	(bad)  
  417413:	test   al,0x8f
  417415:	dec    esp
  417416:	xor    DWORD PTR [edx-0x4b53fe16],edi
  41741c:	out    dx,eax
  41741d:	mov    bh,BYTE PTR [eax]
  41741f:	loope  0x4173a3
  417421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417422:	in     al,dx
  417423:	rcr    dh,1
  417425:	std    
  417426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417427:	loopne 0x4173ab
  417429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41742a:	lods   al,BYTE PTR ds:[esi]
  41742b:	rcr    dh,1
  41742d:	std    
  41742e:	xchg   esi,eax
  41742f:	loopne 0x417445
  417431:	fnstcw WORD PTR [esi]
  417433:	pop    edx
  417434:	and    BYTE PTR [eax-0x74fe5f01],0x45
  41743b:	mov    eax,0x915fe82
  417440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417441:	or     DWORD PTR [ebx-0x46342bb3],edi
  417447:	dec    ebp
  417448:	hlt    
  417449:	jae    0x41744b
  41744b:	dec    eax
  41744c:	add    DWORD PTR [ecx+0x48],esp
  41744f:	and    ah,BYTE PTR [ebp+0x792a486f]
  417455:	stos   BYTE PTR es:[edi],al
  417456:	or     BYTE PTR [eax-0xb],0x72
  41745a:	mov    esp,0x3e6f578
  41745f:	xor    DWORD PTR [edx],eax
  417461:	popf   
  417462:	adc    ecx,0xba04285a
  417468:	sbb    al,0xef
  41746a:	sbb    BYTE PTR [edi],0x11
  41746d:	dec    esp
  41746e:	or     ch,BYTE PTR [ebx-0x463403b4]
  417474:	dec    esp
  417475:	fdiv   QWORD PTR [ebx+0x18]
  417478:	add    DWORD PTR [ecx+0x47],esp
  41747b:	inc    edx
  41747c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41747d:	pop    edi
  41747e:	inc    edi
  41747f:	sbb    bh,BYTE PTR [ecx+0x2a]
  417482:	sub    eax,0x10
  417485:	sbb    edi,DWORD PTR [ebp-0x6a1951ea]
  41748b:	mov    al,0x98
  41748d:	adc    eax,0x3893145
  417492:	or     DWORD PTR [ecx-0x47f20cf8],esp
  417498:	or     al,0x54
  41749a:	or     eax,DWORD PTR [edi+0x48]
  41749d:	out    0xc,eax
  41749f:	lods   eax,DWORD PTR ds:[esi]
  4174a0:	xor    edi,0xffffffde
  4174a3:	lods   al,BYTE PTR ds:[esi]
  4174a4:	shr    esi,1
  4174a6:	xchg   ebp,eax
  4174a7:	mov    al,0xc0
  4174a9:	fld    QWORD PTR [ecx+esi*1-0x77]
  4174ad:	retf   
  4174ae:	or     BYTE PTR [eax],al
  4174b0:	ror    DWORD PTR [eax],0xbb
  4174b3:	or     eax,0xb5c0cb8
  4174b8:	inc    DWORD PTR [edi+0x0]
  4174bb:	jmp    0xd9fd01ed
  4174c0:	push   edi
  4174c1:	sar    ebp,cl
  4174c3:	stos   BYTE PTR es:[edi],al
  4174c4:	mov    bl,0xcf
  4174c6:	sbb    BYTE PTR [ebp+0x13814670],bl
  4174cc:	bound  eax,QWORD PTR [esp+ecx*4]
  4174cf:	shl    DWORD PTR [edi-0x2d],cl
  4174d2:	std    
  4174d3:	je     0x41748e
  4174d5:	clc    
  4174d6:	cld    
  4174d7:	(bad)  
  4174d8:	fs cmp al,ch
  4174db:	loopne 0x41750f
  4174dd:	or     DWORD PTR [eax],eax
  4174df:	mov    ?,esp
  4174e1:	das    
  4174e2:	xchg   ebp,edx
  4174e4:	outs   dx,BYTE PTR ds:[esi]
  4174e5:	retf   
  4174e6:	or     cl,ch
  4174e8:	pop    edi
  4174e9:	mov    bl,ah
  4174eb:	push   0xe9008a21
  4174f0:	xor    bh,BYTE PTR [edx]
  4174f2:	push   esi
  4174f3:	push   ds
  4174f4:	mov    eax,0x3e6c084c
  4174f9:	mov    DWORD PTR [edi+0x932d9],esi
  4174ff:	pusha  
  417500:	lock mov al,al
  417503:	in     eax,dx
  417504:	mov    ecx,0x2d877f1a
  417509:	or     esp,edi
  41750b:	jmp    0x62485d03
  417510:	cmp    BYTE PTR [eax-0x1b],dl
  417513:	test   eax,0x93c00
  417518:	test   al,0xcc
  41751a:	add    eax,DWORD PTR [edi]
  41751c:	ja     0x4174c6
  41751e:	adc    DWORD PTR [edi-0x7a],edi
  417521:	sub    eax,0x73e9fc09
  417526:	fimul  WORD PTR [edx]
  417528:	lock test BYTE PTR [eax-0x75189fce],cl
  41752f:	ret    0xa9e5
  417532:	adc    DWORD PTR [edi+0x0],edi
  417535:	inc    esp
  417537:	or     eax,DWORD PTR [eax]
  417539:	cwde   
  41753a:	retf   
  41753b:	jmp    0x417543
  41753d:	xchg   ebx,eax
  41753e:	out    dx,al
  41753f:	test   BYTE PTR [esi],bh
  417541:	adc    edi,edx
  417543:	jl     0x41752b
  417545:	pop    eax
  417546:	mov    esp,0xe719ffff
  41754b:	or     al,0x8b
  41754d:	arpl   WORD PTR [ecx-0x15f6c021],cx
  417553:	adc    BYTE PTR [ecx],cl
  417555:	push   ss
  417556:	sbb    BYTE PTR [eax],0x81
  417559:	cmp    eax,DWORD PTR ds:0xcb4803f0
  41755f:	out    0x4,eax
  417561:	push   ecx
  417562:	mov    es,WORD PTR [ebp+0x7f99a132]
  417568:	ret    0x810c
  41756b:	xor    BYTE PTR [ebx+0x3306ecee],al
  417571:	xchg   ecx,eax
  417572:	stc    
  417573:	inc    esp
  417574:	sbb    eax,0x7
  417577:	or     ecx,0x89873d00
  41757d:	inc    ebp
  41757e:	mov    BYTE PTR [eax+ebp*8],bl
  417581:	daa    
  417582:	or     BYTE PTR [eax+eax*1],cl
  417585:	pop    edi
  417586:	jbe    0x41759a
  417588:	test   esp,ebp
  41758a:	and    eax,0x530004cb
  41758f:	dec    eax
  417590:	and    al,0x4
  417592:	sub    BYTE PTR [esp+esi*2+0x41],0xd8
  417597:	or     BYTE PTR [edx],0x89
  41759a:	ror    BYTE PTR [eax-0x33b4fb3e],0x4
  4175a1:	add    DWORD PTR [edx-0x14],0x39984174
  4175a8:	out    dx,al
  4175a9:	ret    0xb8c
  4175ac:	xchg   DWORD PTR [ecx+esi*1-0x2],eax
  4175b0:	pop    es
  4175b1:	mov    edx,0x42b611
  4175b6:	mov    edx,0xb20a8ad9
  4175bb:	and    DWORD PTR ds:0x82dd7381,eax
  4175c1:	cli    
  4175c2:	xchg   ecx,eax
  4175c3:	xchg   ebp,eax
  4175c4:	inc    edx
  4175c5:	add    bl,ah
  4175c7:	idiv   DWORD PTR [esi-0x756acefc]
  4175cd:	jecxz  0x4175d0
  4175cf:	xchg   edx,eax
  4175d0:	xor    BYTE PTR [ecx+0x5b88e9ec],cl
  4175d6:	cmp    eax,0xe3f83655
  4175db:	jno    0x4175c6
  4175dd:	sbb    eax,0x1e23100
  4175e2:	push   0x4255d1
  4175e7:	mov    esp,0x1950dc1d
  4175ec:	call   0x4387:0x13310004
  4175f3:	sbb    DWORD PTR [ecx],edx
  4175f5:	in     al,dx
  4175f6:	jo     0x417629
  4175f8:	loopne 0x4175fb
  4175fa:	pop    ecx
  4175fb:	mov    eax,0x29c237bc
  417600:	loopne 0x417638
  417602:	mov    DWORD PTR [ebp+0x4],ebp
  417605:	or     al,0x89
  417607:	test   DWORD PTR [ebp+eax*1+0x920f087],edi
  41760e:	mov    dh,0x28
  417610:	mov    eax,ds:0xeaa818e3
  417615:	mov    WORD PTR [edi+0x78fd771],?
  41761b:	lock xor esp,0xe692b08
  417622:	xchg   eax,esi
  417624:	and    BYTE PTR [ecx],cl
  417626:	mov    dh,0x38
  417628:	or     DWORD PTR [eax],ebp
  41762a:	in     eax,0x39
  41762c:	add    dh,cl
  41762e:	mov    WORD PTR [ebx],gs
  417630:	cmp    BYTE PTR [eax],0x87
  417633:	jae    0x41763a
  417635:	pusha  
  417636:	(bad)  
  417637:	icebp  
  417638:	std    
  417639:	jl     0x41763a
  41763b:	das    
  41763c:	lock outs dx,DWORD PTR ds:[esi]
  41763e:	vpaddw xmm7,xmm1,XMMWORD PTR [ebp+ecx*1+0x0]
  417644:	mov    dh,0xe8
  417646:	iret   
  417647:	mov    WORD PTR [ebx],?
  417649:	sub    BYTE PTR [eax],0x44
  41764c:	xor    al,0x97
  41764e:	lock les edi,FWORD PTR [esi-0x7]
  417652:	loope  0x417661
  417654:	scas   al,BYTE PTR es:[edi]
  417655:	add    esp,DWORD PTR [eax-0x3b]
  417658:	icebp  
  417659:	std    
  41765a:	cmp    al,0xd
  41765c:	xchg   al,ch
  41765e:	out    dx,eax
  41765f:	push   cs
  417660:	sub    edi,esi
  417662:	cmp    al,0x4
  417664:	cs enter 0xe60,0x88
  417669:	retf   
  41766a:	out    dx,eax
  41766b:	add    eax,DWORD PTR [eax+0x29203382]
  417671:	and    BYTE PTR [ebx],0x20
  417674:	and    eax,0x19c4e982
  417679:	icebp  
  41767a:	outs   dx,BYTE PTR ds:[esi]
  41767b:	add    al,0x46
  41767d:	sub    cl,0xc4
  417680:	or     ecx,edi
  417682:	pop    esi
  417683:	add    al,0x36
  417685:	sub    cl,0xc4
  417688:	fld    DWORD PTR [eax]
  41768a:	outs   dx,DWORD PTR ds:[esi]
  41768b:	add    al,0x26
  41768d:	xor    BYTE PTR [edx+0x6ab8b644],0xc5
  417694:	sub    eax,0x308be782
  417699:	sub    cl,0xc4
  41769c:	f2xm1  
  41769e:	outs   dx,BYTE PTR ds:[esi]
  41769f:	add    al,0xfe
  4176a1:	add    DWORD PTR [eax],0x10e0edeb
  4176a7:	popa   
  4176a8:	add    BYTE PTR ds:0x6deb890e,dh
  4176ae:	loopne 0x4176b8
  4176b0:	jno    0x4176e7
  4176b2:	push   cs
  4176b3:	mov    ebx,edi
  4176b5:	stos   BYTE PTR es:[edi],al
  4176b6:	mov    eax,0xcb4fe888
  4176bb:	or     cl,ch
  4176bd:	inc    ecx
  4176be:	xchg   bl,ah
  4176c0:	push   0xffffff96
  4176c2:	cld    
  4176c3:	push   eax
  4176c4:	lahf   
  4176c5:	inc    ebx
  4176c6:	add    BYTE PTR [ebx-0x23],0xbf
  4176ca:	cmp    DWORD PTR [eax],ecx
  4176cc:	jb     0x41772a
  4176ce:	or     BYTE PTR [ebx-0xf],0xaf
  4176d2:	inc    ebp
  4176d3:	add    al,0x60
  4176d5:	lahf   
  4176d6:	(bad)  
  4176d7:	jmp    0x80019cc1
  4176dc:	or     bh,BYTE PTR [ebx]
  4176de:	cld    
  4176df:	or     al,0xee
  4176e1:	and    eax,0x6d1787b6
  4176e6:	out    0x4,al
  4176e8:	mov    eax,0xa8d68504
  4176ed:	sbb    edi,edx
  4176ef:	cs scas eax,DWORD PTR es:[edi]
  4176f1:	stos   BYTE PTR es:[edi],al
  4176f2:	fidivr DWORD PTR [edi-0x36]
  4176f5:	clc    
  4176f6:	into   
  4176f7:	add    cl,ch
  4176f9:	and    esi,DWORD PTR [edi+eax*4+0x10e3f2a7]
  417700:	clc    
  417701:	in     al,0x84
  417703:	into   
  417704:	test   al,0xb
  417706:	or     BYTE PTR [edi],ch
  417708:	xchg   edi,eax
  417709:	mov    edx,0x8a7fda
  41770e:	cmp    al,0x1a
  417710:	xor    edx,ebx
  417712:	inc    ebx
  417713:	scas   eax,DWORD PTR es:[edi]
  417714:	xchg   DWORD PTR [edi-0x27fd1c0e],esi
  41771a:	jecxz  0x4176a0
  41771c:	into   
  41771d:	add    BYTE PTR [ecx-0x59cef721],bl
  417723:	sub    bh,0x81
  417726:	stos   DWORD PTR es:[edi],eax
  417727:	mov    dl,0x0
  417729:	call   FWORD PTR [eax-0x11762609]
  41772f:	(bad)  
  417730:	out    0x8,al
  417732:	cmp    DWORD PTR [edi+0x7fc7585],edi
  417738:	test   BYTE PTR [ebx-0x10424b83],0x8f
  41773f:	test   ebx,esp
  417741:	add    DWORD PTR [ecx],eax
  417743:	mov    eax,0x9711f905
  417748:	sub    eax,0x7db5d1ce
  41774d:	jecxz  0x417751
  41774f:	fwait
  417750:	stos   BYTE PTR es:[edi],al
  417751:	stos   BYTE PTR es:[edi],al
  417752:	jns    0x4176e2
  417754:	sub    eax,0x11f8cdd9
  417759:	mov    DWORD PTR [edi],eax
  41775b:	enter  0x1feb,0xdb
  41775f:	jmp    0xff7c0061
  417764:	stc    
  417765:	mov    DWORD PTR [ebp+0x180008b0],0xd9ce8508
  41776f:	jmp    0xcf420090
  417774:	(bad)  
  417775:	jmp    0x41777b
  417777:	xchg   ecx,eax
  417778:	mov    ch,0x5
  41777a:	sti    
  41777b:	xchg   ecx,eax
  41777c:	retf   0xc07f
  41777f:	adc    al,0xf5
  417781:	sbb    eax,0xe6849e89
  417786:	aas    
  417787:	xchg   ebx,eax
  417788:	cld    
  417789:	mov    al,0xe0
  41778b:	sbb    al,0x48
  41778d:	add    BYTE PTR [ecx+0x6ebc6ef],cl
  417793:	dec    ecx
  417794:	jmp    0xe2727895
  417799:	add    DWORD PTR [ecx],ecx
  41779b:	xchg   BYTE PTR [ecx+0x59313f5b],al
  4177a1:	mov    eax,0x82dbcebf
  4177a6:	in     eax,0xb5
  4177a8:	loope  0x4177ab
  4177aa:	add    BYTE PTR [edx],bh
  4177ac:	adc    esp,ecx
  4177ae:	js     0x4177a0
  4177b0:	loope  0x41773c
  4177b2:	fnsave [eax+0x3a]
  4177b5:	out    dx,eax
  4177b6:	jle    0x417746
  4177b8:	xor    eax,0xe7310001
  4177bd:	nop
  4177be:	loopne 0x4177bf
  4177c0:	mov    al,ds:0x16048701
  4177c5:	mov    al,dh
  4177c7:	mov    dl,0x21
  4177c9:	std    
  4177ca:	xchg   BYTE PTR [edx-0x32],bh
  4177cd:	test   DWORD PTR [esi+0x3ddf5e87],0xe08eb5aa
  4177d7:	add    ah,dl
  4177d9:	mov    al,ds:0xf5c40901
  4177de:	mov    ebp,ebx
  4177e0:	jo     0x4177d4
  4177e2:	(bad)  
  4177e3:	jle    0x41783b
  4177e5:	int    0x2
  4177e7:	add    BYTE PTR [ecx],dh
  4177e9:	out    0x90,eax
  4177eb:	loopne 0x417797
  4177ed:	mov    eax,ds:0xa2068701
  4177f2:	in     eax,0xe
  4177f4:	mov    al,0xc3
  4177f6:	fadd   DWORD PTR [eax]
  4177f8:	xor    eax,esp
  4177fa:	or     dh,BYTE PTR [ebp+0x433a11]
  417800:	mov    eax,0x27edc3a3
  417805:	popa   
  417806:	(bad)  
  417808:	xor    eax,esp
  41780a:	add    DWORD PTR [ecx],ecx
  41780c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41780d:	ror    BYTE PTR [ebp+0x3f],0x31
  417811:	or     eax,ebx
  417813:	shl    DWORD PTR [esi+0x35dea8b3],1
  417819:	cmp    BYTE PTR [esi+0x6005dcc5],0xd3
  417820:	cs into 
  417822:	jo     0x4177e2
  417824:	mov    al,0xc9
  417826:	jecxz  0x41783a
  417828:	pop    ss
  417829:	adc    BYTE PTR [ebp+0x620a9783],0x10
  417830:	loop   0x41781b
  417832:	jecxz  0x417878
  417834:	xor    DWORD PTR [eax+0x384c53e],eax
  41783a:	push   0x98d00df
  41783f:	out    0x3,eax
  417841:	cmp    BYTE PTR [edx+0x93e5a47],dl
  417847:	jo     0x417800
  417849:	mov    dh,0xda
  41784b:	in     eax,0x84
  41784d:	push   esp
  41784e:	int    0xe7
  417850:	add    esi,DWORD PTR [ecx]
  417852:	(bad)  
  417853:	pop    ebp
  417854:	in     al,0xd9
  417856:	inc    edi
  417857:	out    0x8c,eax
  417859:	je     0x417823
  41785b:	push   es
  41785c:	out    dx,al
  41785d:	iret   
  41785e:	loope  0x41786b
  417860:	add    al,0x31
  417862:	or     edx,esi
  417864:	mov    ss,WORD PTR [ecx+0x53]
  417867:	test   al,0x3
  417869:	scas   al,BYTE PTR es:[edi]
  41786a:	push   esp
  41786b:	sti    
  41786c:	mov    edi,?
  41786e:	test   DWORD PTR [edi],esp
  417870:	add    BYTE PTR [esi-0x4809e54b],ch
  417876:	stos   BYTE PTR es:[edi],al
  417877:	push   0xffffffdd
  417879:	push   esp
  41787a:	jle    0x417897
  41787c:	xchg   ecx,eax
  41787d:	adc    DWORD PTR [eax+ebp*1+0x4],ecx
  417881:	cmp    BYTE PTR [ebx+edi*4-0x74],dl
  417885:	fadd   st(7),st
  417887:	into   
  417888:	std    
  417889:	ja     0x41786d
  41788b:	add    BYTE PTR [ebp-0x1dfff6ce],dh
  417891:	mov    bh,0xe8
  417893:	jns    0x4178bd
  417895:	xor    eax,0xcfa8dd82
  41789a:	cli    
  41789b:	jle    0x41782b
  41789d:	out    0x8,al
  41789f:	add    cl,ch
  4178a1:	add    BYTE PTR [ebx],bh
  4178a3:	xchg   esp,eax
  4178a4:	loopne 0x4178a6
  4178a6:	je     0x4178b1
  4178a8:	xchg   DWORD PTR [esi+0x6816dbed],ebx
  4178ae:	(bad)  
  4178af:	int3   
  4178b0:	add    cl,ch
  4178b2:	xor    al,BYTE PTR [eax]
  4178b4:	mov    ch,0x49
  4178b6:	out    dx,eax
  4178b7:	or     DWORD PTR [eax],eax
  4178b9:	sbb    BYTE PTR [ebx+ecx*8+0x4b],bh
  4178bd:	push   ecx
  4178be:	mov    bl,0x4d
  4178c0:	clc    
  4178c1:	jmp    0x47eafef5
  4178c6:	addr16 retf 
  4178c8:	xchg   DWORD PTR [ecx],esi
  4178ca:	ins    DWORD PTR es:[edi],dx
  4178cb:	call   0xb9b5d8ed
  4178d0:	out    dx,al
  4178d1:	pusha  
  4178d2:	ins    DWORD PTR es:[edi],dx
  4178d3:	add    edi,ebp
  4178d5:	jo     0x417879
  4178d7:	sbb    eax,ecx
  4178d9:	jo     0x41794e
  4178db:	dec    ecx
  4178dc:	loope  0x417921
  4178de:	cwde   
  4178df:	sahf   
  4178e0:	stos   BYTE PTR es:[edi],al
  4178e1:	fmul   DWORD PTR [eax-0x7d8f28e7]
  4178e7:	mov    eax,esp
  4178e9:	fisub  WORD PTR [ebp-0x42f8304e]
  4178ef:	retf   
  4178f0:	pop    es
  4178f1:	sti    
  4178f2:	mov    edx,0x2dd1bfd9
  4178f7:	clc    
  4178f8:	(bad)  
  4178f9:	jo     0x4178eb
  4178fb:	dec    eax
  4178fc:	loope  0x4178d4
  4178fe:	xor    eax,0xca1800c6
  417903:	nop
  417904:	fadd   DWORD PTR [eax]
  417906:	add    cl,cl
  417908:	lods   eax,DWORD PTR ds:[esi]
  417909:	or     BYTE PTR [ecx],dh
  41790b:	retf   0xd094
  41790e:	shl    eax,0xb
  417911:	sub    eax,0x7dca51c8
  417916:	jecxz  0x417913
  417918:	sbb    DWORD PTR [edi],ebp
  41791a:	xor    edi,ecx
  41791c:	add    DWORD PTR [ebp+0x2ad99d8],0x31
  417923:	call   0x2ebd:0xa0c1c894
  41792a:	rol    BYTE PTR [ecx-0x36],1
  41792d:	jge    0x417912
  41792f:	daa    
  417930:	fiadd  WORD PTR [eax]
  417932:	add    cl,ch
  417934:	add    BYTE PTR [ebp+0x10ad49d8],0x31
  41793b:	dec    ecx
  41793c:	xchg   esp,eax
  41793d:	enter  0xf0c1,0x8
  417941:	sub    eax,0x7dca11d0
  417946:	jecxz  0x4178cf
  417948:	or     eax,0x82790f0b
  41794d:	xchg   DWORD PTR [ebp+0x50],eax
  417950:	retf   
  417951:	fild   WORD PTR [ecx+ebp*2]
  417954:	rol    DWORD PTR [ebp+0x807cb18],1
  41795a:	add    al,0xe3
  41795c:	pop    es
  41795d:	or     BYTE PTR [ecx+0x5b5dfd48],cl
  417963:	shl    DWORD PTR [eax+0xc40c259],1
  417969:	dec    edi
  41796a:	push   esi
  41796b:	add    bl,al
  41796d:	add    BYTE PTR [esp+ecx*1],ah
  417970:	mov    esi,0x8247490
  417975:	xor    si,0x3827
  41797a:	int    0xf
  41797c:	mov    esi,0x31b70bca
  417981:	jb     0x4179b4
  417983:	mov    esi,DWORD PTR [edx-0x56]
  417986:	xor    eax,ebp
  417988:	fs int3 
  41798a:	aam    0xfd
  41798c:	mov    edx,edx
  41798e:	dec    ebp
  41798f:	aas    
  417990:	xor    edx,ecx
  417992:	or     ah,bh
  417994:	out    0x76,al
  417996:	add    al,0xb5
  417998:	out    0x7,eax
  41799a:	das    
  41799b:	call   0xfe15e610
  4179a0:	pop    ecx
  4179a1:	adc    cl,BYTE PTR [ebp+0x3f]
  4179a4:	xor    DWORD PTR [edx-0x71410634],ecx
  4179aa:	xor    ebx,DWORD PTR [ecx-0xd]
  4179ad:	mov    ecx,0x94b85301
  4179b2:	xor    DWORD PTR [eax+0x2],edx
  4179b5:	sub    edi,DWORD PTR [esi]
  4179b7:	or     BYTE PTR [edx-0x374fa34],ch
  4179bd:	sub    DWORD PTR [edi],ebp
  4179bf:	push   eax
  4179c0:	cdq    
  4179c1:	ins    BYTE PTR es:[edi],dx
  4179c2:	aad    0xfd
  4179c4:	xchg   cl,cl
  4179c6:	popa   
  4179c7:	je     0x4179b9
  4179c9:	mov    cl,0x86
  4179cb:	inc    ebx
  4179cc:	jns    0x41796f
  4179ce:	jmp    0xfeae7ac8
  4179d3:	shr    DWORD PTR [eax+0x51],cl
  4179d6:	jge    0x417a1a
  4179d8:	add    BYTE PTR [esp+esi*2+0x184950d9],ch
  4179df:	aad    0xfd
  4179e1:	dec    esi
  4179e2:	mov    DWORD PTR [ecx+0x73],esp
  4179e5:	lock mov cl,0x86
  4179e8:	inc    ebx
  4179e9:	cmp    DWORD PTR [ecx-0x39ca2617],esp
  4179ef:	rcl    DWORD PTR [ecx-0x44],1
  4179f2:	jne    0x4179cd
  4179f4:	push   eax
  4179f5:	sbb    DWORD PTR [ebx],esi
  4179f7:	aad    0xfd
  4179f9:	push   ds
  4179fa:	or     al,BYTE PTR [edx+0x7d]
  4179fd:	add    eax,0xefca965
  417a02:	pop    esi
  417a03:	pusha  
  417a04:	jmp    0x37392fb9
  417a09:	addr16 xchg edx,eax
  417a0b:	and    al,0xfc
  417a0d:	test   eax,0x7280eb3c
  417a12:	rcl    DWORD PTR [edi],0x37
  417a15:	fld    st(3)
  417a17:	mov    dl,0xd3
  417a19:	fcom   QWORD PTR [esp+ebp*1-0x55757e2c]
  417a20:	cld    
  417a21:	popa   
  417a22:	mov    cl,0x84
  417a24:	iret   
  417a25:	(bad)  
  417a26:	(bad)  
  417a27:	jmp    DWORD PTR [ebx+0x45]
  417a2a:	dec    eax
  417a2b:	out    0x80,eax
  417a2d:	jb     0x4179f0
  417a2f:	pop    ss
  417a30:	fadd   st(4),st
  417a32:	lds    esi,FWORD PTR [esi-0x2d]
  417a35:	add    BYTE PTR [ecx],bl
  417a37:	sub    ebx,esi
  417a39:	inc    esp
  417a3a:	xor    DWORD PTR [esp+ebp*4+0x70b101d3],edx
  417a41:	ror    BYTE PTR [esi+eax*8-0x6d7ace9e],1
  417a48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a49:	shl    DWORD PTR [esi-0x2582bcb4],cl
  417a4f:	mov    eax,0x47e5e3cf
  417a54:	out    0x80,eax
  417a56:	repnz rcl BYTE PTR [edi+0x26c4ccdb],0xd3
  417a5e:	leave  
  417a5f:	test   al,0x93
  417a61:	inc    esp
  417a62:	xor    DWORD PTR [esp+ebp*4-0x774f1e2d],edx
  417a69:	iret   
  417a6a:	cmp    al,0xc6
  417a6c:	jb     0x417a9f
  417a6e:	xor    eax,0xb6d3a492
  417a73:	dec    ebx
  417a74:	add    ch,dh
  417a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a77:	(bad)  
  417a78:	lock adc DWORD PTR [edx-0x4e16c0c6],0xed39f849
  417a83:	dec    ebx
  417a84:	cld    
  417a85:	(bad)  
  417a86:	jecxz  0x417ab8
  417a88:	pusha  
  417a89:	push   esp
  417a8a:	je     0x417a95
  417a8c:	mov    ebp,DWORD PTR [ebx*8+0x100e858]
  417a93:	(bad)  
  417a94:	std    
  417a95:	pop    ds
  417a96:	mov    al,0x49
  417a98:	clc    
  417a99:	sbb    DWORD PTR [eax],eax
  417a9b:	std    
  417a9c:	test   al,0xf9
  417a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a9f:	add    ecx,DWORD PTR [eax-0x6df70e3a]
  417aa5:	inc    ebx
  417aa6:	cdq    
  417aa7:	add    dh,BYTE PTR [ecx-0x3c1c6d2f]
  417aad:	pop    esi
  417aae:	and    dh,BYTE PTR [esi*4-0x3a5554a5]
  417ab5:	push   esp
  417ab6:	pusha  
  417ab7:	cdq    
  417ab8:	inc    ebp
  417ab9:	in     al,dx
  417aba:	pop    ebp
  417abb:	xor    eax,0x58ba0009
  417ac0:	pop    esp
  417ac1:	mov    DWORD PTR [edx+ecx*4-0x4e1a8c70],edi
  417ac8:	mov    DWORD PTR [eax+0x50c3634f],eax
  417ace:	push   ecx
  417acf:	mov    eax,ds:0xce9fdc5
  417ad4:	or     DWORD PTR [eax+0x49],ebp
  417ad7:	or     DWORD PTR [esi],eax
  417ad9:	add    BYTE PTR [ecx-0x1b],al
  417adc:	(bad)  
  417add:	std    
  417ade:	es cmp eax,0x526b8adb
  417ae4:	cmp    DWORD PTR [edi],edi
  417ae6:	jmp    0xab7387b5
  417aeb:	mov    bh,0xc2
  417aed:	or     BYTE PTR [eax],al
  417aef:	lods   al,BYTE PTR ds:[esi]
  417af0:	fadd   st(3),st
  417af2:	test   DWORD PTR [eax+0x19fffbda],esi
  417af8:	or     DWORD PTR [eax],eax
  417afa:	add    BYTE PTR [ebx],dh
  417afc:	cld    
  417afd:	test   al,dh
  417aff:	add    BYTE PTR [ecx-0x10018b74],ah
  417b05:	fisubr DWORD PTR ds:0x871df3d2
  417b0b:	test   DWORD PTR [edi+edx*8-0x5],esp
  417b0f:	inc    DWORD PTR [ecx-0x50018374]
  417b15:	(bad)  
  417b17:	test   DWORD PTR [edi+edx*8],esp
  417b1a:	sti    
  417b1b:	call   DWORD PTR [ebx+0x44]
  417b1e:	jl     0x417b1e
  417b20:	(bad)  
  417b21:	fimul  DWORD PTR [ebx]
  417b23:	mov    esi,0x7fe08ddb
  417b28:	push   ebx
  417b29:	xchg   esp,eax
  417b2a:	jl     0x417b2a
  417b2c:	scas   eax,DWORD PTR es:[edi]
  417b2d:	fimul  DWORD PTR [ebx]
  417b2f:	mov    dh,0xef
  417b31:	pop    ss
  417b32:	clc    
  417b33:	mov    BYTE PTR [ecx+0x5bffffd2],bl
  417b39:	dec    ebx
  417b3a:	jg     0x417b36
  417b3c:	nop
  417b3d:	push   ebx
  417b3e:	add    DWORD PTR [eax-0x398ef2ad],eax
  417b44:	mov    BYTE PTR [edx],0xe8
  417b47:	imul   ebx,esi,0xffffffd9
  417b4a:	sti    
  417b4b:	xor    DWORD PTR [ebp-0x100001ab],0xc
  417b52:	cmp    BYTE PTR [ebx],0x58
  417b55:	pop    ebx
  417b56:	mov    ds:0xfe54dd83,eax
  417b5b:	dec    DWORD PTR [edi]
  417b5d:	or     eax,0x8bdd9e71
  417b62:	cmp    dh,0x0
  417b65:	das    
  417b66:	ficom  DWORD PTR [eax-0x18]
  417b69:	xor    DWORD PTR [ebx+0x73310002],edx
  417b6f:	das    
  417b70:	pop    ecx
  417b71:	test   al,0x1e
  417b73:	sub    eax,0x36b239c2
  417b78:	xchg   DWORD PTR [ecx+esi*1],ecx
  417b7b:	loopne 0x417b09
  417b7d:	xor    BYTE PTR [edx+0x37f5101],dh
  417b83:	jnp    0x417be0
  417b85:	cmp    DWORD PTR [edi],esi
  417b87:	push   esi
  417b88:	or     al,0xb4
  417b8a:	xor    al,0x81
  417b8c:	(bad)  
  417b8d:	(bad)  
  417b8e:	shl    BYTE PTR [ecx],cl
  417b90:	call   0x432d8b
  417b95:	pop    ebx
  417b96:	mov    dl,0x59
  417b98:	loopne 0x417bf6
  417b9a:	icebp  
  417b9b:	add    ebp,eax
  417b9d:	add    dh,BYTE PTR [ebp-0x30]
  417ba0:	std    
  417ba1:	and    BYTE PTR [eax+0x1cd1827b],al
  417ba7:	inc    ecx
  417ba8:	add    BYTE PTR [ecx-0x4dbdec4b],bh
  417bae:	xchg   edi,eax
  417baf:	icebp  
  417bb0:	jnp    0x417b72
  417bb2:	jb     0x417b3a
  417bb4:	js     0x417b65
  417bb6:	inc    edx
  417bb7:	sar    bh,1
  417bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bba:	mov    cl,0x1
  417bbc:	jmp    0x8812a4c6
  417bc1:	lods   al,BYTE PTR ds:[esi]
  417bc2:	in     eax,0xcf
  417bc4:	std    
  417bc5:	mov    fs,WORD PTR [eax]
  417bc7:	mov    dh,0xe9
  417bc9:	add    BYTE PTR [ecx+0x27],al
  417bcc:	xchg   BYTE PTR [edi+edi*2+0x52],dh
  417bd0:	rol    BYTE PTR [edi-0x2303254],1
  417bd6:	outs   dx,BYTE PTR ds:[esi]
  417bd7:	add    al,BYTE PTR [esi-0x3005988c]
  417bdd:	mov    DWORD PTR [ebp+esi*2+0x856fdcf],ebp
  417be4:	not    BYTE PTR [ecx+0x50078830]
  417bea:	mov    eax,0x3cd19385
  417bef:	ret    
  417bf0:	ficomp WORD PTR [ecx+0x7afef9f4]
  417bf6:	cs int 0xea
  417bf9:	add    esi,DWORD PTR [eax+0x47]
  417bfc:	push   0xffffffcd
  417bfe:	inc    ecx
  417bff:	inc    esp
  417c00:	in     al,0x83
  417c02:	pop    eax
  417c03:	or     DWORD PTR [esi+eax*8+0x67],ebx
  417c07:	pop    ebx
  417c08:	iret   
  417c09:	into   
  417c0a:	or     al,bl
  417c0c:	(bad)  
  417c0d:	adc    edx,0x41
  417c10:	int    0xcf
  417c12:	hlt    
  417c13:	or     DWORD PTR [edi+0xb],esp
  417c16:	xor    DWORD PTR [esi+eax*4],edi
  417c19:	sub    DWORD PTR [edx-0x23304abf],0x9
  417c20:	xor    al,0x6e
  417c22:	stos   BYTE PTR es:[edi],al
  417c23:	mov    WORD PTR [edi-0x32],fs
  417c26:	int3   
  417c27:	ret    0xdc37
  417c2a:	mov    cs,WORD PTR [ecx]
  417c2c:	out    0x3,eax
  417c2e:	add    BYTE PTR [ebx+eiz*2+0x32],bl
  417c32:	jge    0x417bf9
  417c34:	fs test eax,0x1557aefc
  417c3a:	aaa    
  417c3b:	mov    eax,0x14f3cb4d
  417c40:	mov    cs,WORD PTR [ebx]
  417c42:	sub    BYTE PTR ds:0x2ab6c2b,bh
  417c48:	push   cs
  417c49:	jo     0x417c11
  417c4b:	mov    edx,0xbb65f741
  417c50:	or     bh,ah
  417c52:	fisubr DWORD PTR [ecx]
  417c54:	xchg   esp,eax
  417c55:	mov    bh,0xf3
  417c57:	mov    bh,0xca
  417c59:	lds    edx,FWORD PTR [ebx+eax*4]
  417c5c:	adc    al,BYTE PTR [eax]
  417c5e:	jle    0x417c03
  417c60:	push   edi
  417c61:	sub    DWORD PTR [ecx],0x6de85255
  417c67:	data16 (bad) 
  417c69:	std    
  417c6a:	xchg   ecx,eax
  417c6b:	push   edx
  417c6c:	cmp    eax,0xff5ae93f
  417c71:	test   BYTE PTR [esi],0x66
  417c74:	adc    al,0xb5
  417c76:	and    ah,BYTE PTR [edx+0x5c]
  417c79:	call   0xfe057bf7
  417c7e:	adc    DWORD PTR [edx-0x516c0ca],0xffe6f6ea
  417c88:	adc    esi,DWORD PTR [ebp-0x17a4bc3e]
  417c8e:	xor    eax,0x2efdc3e6
  417c93:	add    BYTE PTR [edi+0x60],al
  417c96:	ret    0x32f1
  417c99:	pop    eax
  417c9a:	mov    DWORD PTR ds:0xc1511119,ebx
  417ca0:	fstp   TBYTE PTR [edx-0x38525103]
  417ca6:	sub    cl,0x32
  417ca9:	or     DWORD PTR [eax+0x25e89],edi
  417caf:	(bad)  
  417cb1:	mov    dl,BYTE PTR [ecx]
  417cb3:	push   0xfffffff2
  417cb5:	or     al,0x81
  417cb7:	stos   BYTE PTR es:[edi],al
  417cb8:	ss (bad) 
  417cba:	pop    edi
  417cbb:	hlt    
  417cbc:	in     eax,dx
  417cbd:	or     BYTE PTR [edx-0x7a],dh
  417cc0:	stos   BYTE PTR es:[edi],al
  417cc1:	sub    BYTE PTR [ebx+0x28],dh
  417cc4:	sub    eax,0x83701090
  417cc9:	mov    al,al
  417ccb:	in     eax,0xb3
  417ccd:	mov    DWORD PTR [esp+edx*1],0xe93f3595
  417cd4:	loopne 0x417c89
  417cd6:	pop    ecx
  417cd7:	add    BYTE PTR [edx],bl
  417cd9:	or     al,BYTE PTR [eax]
  417cdb:	push   ebx
  417cdc:	jecxz  0x417ccf
  417cde:	and    ecx,DWORD PTR [eax]
  417ce0:	mov    ebx,0x7f8e8dd
  417ce5:	sar    DWORD PTR [ebp-0x3d],cl
  417ce8:	fadd   DWORD PTR ds:0xa5d00000
  417cee:	je     0x417d31
  417cf0:	dec    eax
  417cf1:	ds jns 0x5010330
  417cf8:	add    BYTE PTR [ebx-0x47c2fb34],bl
  417cfe:	popa   
  417cff:	cmp    eax,0xb8df9a00
  417d04:	pusha  
  417d05:	popf   
  417d06:	inc    ebp
  417d07:	add    BYTE PTR [ebx-0x7cefbbf5],cl
  417d0d:	fist   DWORD PTR [ecx]
  417d0f:	jg     0x417cd1
  417d11:	or     al,0x10
  417d13:	loopne 0x417d8a
  417d15:	dec    ecx
  417d16:	add    eax,0xcb13ef72
  417d1b:	add    al,0x0
  417d1d:	cmp    eax,0xf483e144
  417d22:	lods   eax,DWORD PTR ds:[esi]
  417d23:	push   eax
  417d24:	push   esi
  417d25:	push   ebx
  417d26:	lock pop es
  417d28:	mov    ebp,DWORD PTR ds:0x90458909
  417d2e:	cmc    
  417d2f:	dec    esi
  417d30:	call   0x3d4aea
  417d35:	push   ebp
  417d36:	dec    eax
  417d37:	lock push eax
  417d39:	and    eax,0xc050084a
  417d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d3f:	clc    
  417d40:	jmp    DWORD PTR [edi]
  417d42:	inc    eax
  417d43:	inc    ecx
  417d44:	call   0x11010781
  417d49:	retf   
  417d4a:	in     al,0xcf
  417d4c:	clc    
  417d4d:	out    0xcd,eax
  417d4f:	push   0x42de3160
  417d54:	add    BYTE PTR [ebp+eiz*2-0x3aa6af37],ah
  417d5b:	retf   0xfd
  417d5e:	data16 fisub DWORD PTR [ecx+0x74]
  417d62:	lock mov cl,0x7e
  417d65:	inc    ebx
  417d66:	popa   
  417d67:	mov    ds:0xe7486dd9,al
  417d6c:	retf   0xd168
  417d6f:	xchg   ebp,eax
  417d70:	inc    edx
  417d71:	add    BYTE PTR [ebp+ebp*2-0x6eb6af27],ch
  417d78:	retf   0x2efd
  417d7b:	cmp    ebp,DWORD PTR ds:0xd164bafc
  417d81:	xchg   DWORD PTR [esi+esi*4+0x7a],esi
  417d85:	pop    ebx
  417d86:	and    DWORD PTR [ebx],ebp
  417d88:	sub    eax,0xdbecbaf4
  417d8d:	xchg   DWORD PTR [esi+edx*8+0x7a],ebp
  417d91:	pop    ebx
  417d92:	or     DWORD PTR [edx-0x1c],ecx
  417d95:	je     0x417e07
  417d97:	mov    dl,0x7e
  417d99:	inc    ebx
  417d9a:	jmp    0xe87b59c0
  417d9f:	jle    0x417d6d
  417da1:	push   0x40fdd1
  417da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417da7:	in     al,0xd3
  417da9:	push   eax
  417daa:	(bad)  
  417dac:	retf   0xc6fd
  417daf:	sbb    esp,esp
  417db1:	je     0x417e23
  417db3:	mov    dl,0x7e
  417db5:	inc    ebx
  417db6:	leave  
  417db7:	add    esp,ebx
  417db9:	sbb    eax,0x89cc86a8
  417dbe:	add    al,0x3e
  417dc0:	js     0x417e05
  417dc2:	add    BYTE PTR [ecx-0x5703b9d8],ah
  417dc8:	or     al,0xd4
  417dca:	mov    esp,ebp
  417dcc:	or     BYTE PTR [ebx+0x78],bl
  417dcf:	repnz mov al,0x70
  417dd2:	inc    esi
  417dd3:	test   DWORD PTR [ecx+0x2909dbb4],edx
  417dd9:	aam    0x42
  417ddb:	xor    DWORD PTR [esi-0x4efe3454],ecx
  417de1:	inc    eax
  417de2:	retf   
  417de3:	pop    esp
  417de4:	mov    edi,0x49e263bf
  417de9:	out    0x7e,eax
  417deb:	repnz mov eax,0xc058dbb7
  417df1:	push   ds
  417df2:	int3   
  417df3:	leave  
  417df4:	sub    BYTE PTR [edx+eax*2-0x245b71cf],bl
  417dfb:	xor    DWORD PTR [ecx-0x40db34dc],0xc1727e95
  417e05:	xchg   edi,eax
  417e06:	fld    TBYTE PTR [ebp-0x4534113f]
  417e0c:	inc    edi
  417e0d:	out    dx,eax
  417e0e:	xor    edi,DWORD PTR [edx+0x934d744]
  417e14:	aaa    
  417e15:	iret   
  417e16:	retf   
  417e17:	hlt    
  417e18:	mov    ah,BYTE PTR [ebp+0x2c8c84f4]
  417e1e:	fadd   QWORD PTR [ecx-0x2333ae4f]
  417e24:	mov    esi,0xae002f15
  417e29:	lods   eax,DWORD PTR ds:[esi]
  417e2a:	or     al,0xc6
  417e2c:	cmp    DWORD PTR [ecx],ecx
  417e2e:	cmp    al,0x7d
  417e30:	ror    BYTE PTR [eax-0x41418775],cl
  417e36:	out    0x36,eax
  417e38:	pop    edi
  417e39:	push   esi
  417e3a:	bound  ebp,QWORD PTR [ecx]
  417e3c:	cmp    DWORD PTR [edx-0x7b440804],edx
  417e42:	addr16 retf 0xbe9c
  417e46:	add    BYTE PTR [ecx],bl
  417e48:	jne    0x417e9f
  417e4a:	(bad)  
  417e4b:	outs   dx,BYTE PTR ds:[esi]
  417e4c:	jp     0x417e81
  417e4e:	add    cl,dl
  417e50:	xchg   edx,eax
  417e51:	cmp    bh,BYTE PTR [edi]
  417e53:	jmp    0x573d24b2
  417e58:	push   0xffffffee
  417e5a:	shl    DWORD PTR [ebx-0x49],1
  417e5d:	test   eax,0x9132a873
  417e62:	add    al,0xfb
  417e64:	hlt    
  417e65:	xchg   edx,edi
  417e67:	shr    esi,1
  417e69:	lods   eax,DWORD PTR ds:[esi]
  417e6a:	lds    esp,FWORD PTR [ebp+edi*8-0x42]
  417e6e:	std    
  417e6f:	es sub al,0x9
  417e72:	add    cl,ch
  417e74:	pop    edi
  417e75:	push   ebp
  417e76:	xchg   DWORD PTR [ecx],ebx
  417e78:	mov    ah,0x89
  417e7a:	je     0x417e8b
  417e7c:	cli    
  417e7d:	mov    ebx,0xf9061b2f
  417e82:	mov    BYTE PTR [ecx+eax*4-0x41],ah
  417e86:	std    
  417e87:	not    BYTE PTR [ebp+0xef7c8a]
  417e8d:	sti    
  417e8e:	mov    ebx,0xbf766cfd
  417e93:	std    
  417e94:	fidivr WORD PTR [edi-0x6e]
  417e97:	jl     0x417e70
  417e99:	jmp    0x417e56
  417e9b:	or     eax,0xe088378f
  417ea0:	inc    esi
  417ea1:	data16 cmp BYTE PTR [edi+edi*4-0x15],0xbb
  417ea7:	or     eax,0xf7ee2b7f
  417eac:	popa   
  417ead:	xor    eax,0x6fe901c7
  417eb2:	dec    ebx
  417eb3:	and    DWORD PTR [ebx+0x690342ca],0xa7730927
  417ebd:	pusha  
  417ebe:	push   edi
  417ebf:	call   0xfc14b6c4
  417ec4:	dec    DWORD PTR [ebx]
  417ec6:	imul   edi,DWORD PTR [eax-0x2],0x8000d31f
  417ecd:	ret    
  417ece:	or     DWORD PTR [ecx-0x59],esi
  417ed1:	sbb    edx,DWORD PTR [ecx-0x2d200188]
  417ed7:	add    BYTE PTR [ebp-0x2],dh
  417eda:	inc    eax
  417edb:	add    DWORD PTR [eax+0x50fbd2fe],0xfff9d000
  417ee5:	pop    ds
  417ee6:	repz pop ebp
  417ee8:	pop    ebx
  417ee9:	rcl    ebp,1
  417eeb:	pop    ecx
  417eec:	ret    0x950
  417eef:	push   ecx
  417ef0:	mov    DWORD PTR [eax],eax
  417ef2:	xor    eax,0x86534ffa
  417ef7:	ds push ecx
  417ef9:	or     bl,dl
  417efb:	lock or ecx,DWORD PTR [ebx-0x36d1473b]
  417f02:	mov    ds:0xd4880ebc,al
  417f07:	shl    ebp,0x8a
  417f0a:	add    al,0xb6
  417f0c:	test   DWORD PTR [ecx+eiz*8],eax
  417f0f:	inc    ebp
  417f10:	jg     0x417f0b
  417f12:	add    BYTE PTR [ebp-0x17],al
  417f15:	push   ebx
  417f16:	cmp    bl,ch
  417f18:	lods   al,BYTE PTR ds:[esi]
  417f19:	cli    
  417f1a:	(bad)  
  417f1c:	sub    eax,0x17c18dd2
  417f21:	mov    dl,ah
  417f23:	push   ss
  417f24:	xor    al,BYTE PTR [ecx]
  417f26:	pusha  
  417f27:	or     BYTE PTR [edx-0x7d],al
  417f2a:	mov    ds:0xc9f079bd,al
  417f2f:	jbe    0x417ebb
  417f31:	inc    esp
  417f32:	(bad)
  417f35:	add    al,0xda
  417f37:	inc    esi
  417f38:	jg     0x417f34
  417f3a:	xor    DWORD PTR [edx-0x8f00ebb],ebp
  417f40:	js     0x417f2e
  417f42:	add    al,0x70
  417f44:	clc    
  417f45:	call   FWORD PTR [esi+0x310001b2]
  417f4b:	mov    dl,0x1
  417f4d:	add    BYTE PTR [ecx],dh
  417f4f:	mov    dl,0x1
  417f51:	add    BYTE PTR [ecx],dh
  417f53:	mov    dl,0x1
  417f55:	add    BYTE PTR [eax],al
  417f57:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f5d:	add    DWORD PTR [eax],eax
  417f5f:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f65:	add    DWORD PTR [eax],eax
  417f67:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f6d:	add    DWORD PTR [eax],eax
  417f6f:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f75:	add    DWORD PTR [eax],eax
  417f77:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f7d:	add    DWORD PTR [eax],eax
  417f7f:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f85:	add    DWORD PTR [eax],eax
  417f87:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f8d:	add    DWORD PTR [eax],eax
  417f8f:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f95:	add    DWORD PTR [eax],eax
  417f97:	xor    DWORD PTR [edx-0x4dceffff],esi
  417f9d:	add    DWORD PTR [eax],eax
  417f9f:	xor    DWORD PTR [edx-0x4dceffff],esi
  417fa5:	add    DWORD PTR [eax],eax
  417fa7:	xor    DWORD PTR [edx-0x4dceffff],esi
  417fad:	add    DWORD PTR [eax],eax
  417faf:	xor    DWORD PTR [edx+0x9310001],esi
  417fb5:	out    0x3,eax
  417fb7:	xor    DWORD PTR [ecx],ecx
  417fb9:	out    0x3,eax
  417fbb:	add    BYTE PTR [ecx],dh
  417fbd:	or     edi,esp
  417fbf:	add    esi,DWORD PTR [ecx]
  417fc1:	or     edi,esp
  417fc3:	add    esi,DWORD PTR [ecx]
  417fc5:	or     edi,esp
  417fc7:	add    esi,DWORD PTR [ecx]
  417fc9:	or     edi,esp
  417fcb:	add    esi,DWORD PTR [ecx]
  417fcd:	or     edi,esp
  417fcf:	add    esi,DWORD PTR [ecx]
  417fd1:	or     edi,esp
  417fd3:	add    esi,DWORD PTR [ecx]
  417fd5:	or     edi,esp
  417fd7:	add    esi,DWORD PTR [ecx]
  417fd9:	or     edi,esp
  417fdb:	add    esi,DWORD PTR [ecx]
  417fdd:	or     edi,esp
  417fdf:	add    esi,DWORD PTR [ecx]
  417fe1:	or     edi,esp
  417fe3:	add    esi,DWORD PTR [ecx]
  417fe5:	or     edi,esp
  417fe7:	add    esi,DWORD PTR [ecx]
  417fe9:	or     edi,esp
  417feb:	add    esi,DWORD PTR [ecx]
  417fed:	or     edi,esp
  417fef:	add    esi,DWORD PTR [ecx]
  417ff1:	or     edi,esp
  417ff3:	add    esi,DWORD PTR [ecx]
  417ff5:	or     edi,esp
  417ff7:	add    esi,DWORD PTR [ecx]
  417ff9:	or     edi,esp
  417ffb:	add    esi,DWORD PTR [ecx]
  417ffd:	or     esp,esp
  417fff:	std    
  418000:	cmp    ecx,DWORD PTR [edi]
  418002:	mov    BYTE PTR [ebx],dh
  418004:	jne    0x418036
  418006:	mov    DWORD PTR [ebx],esp
  418008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418009:	clc    
  41800a:	int3   
  41800b:	adc    eax,DWORD PTR [esi-0x17]
  41800e:	(bad)  
  41800f:	push   ss
  418010:	push   ecx
  418011:	jmp    0xe9d3db88
  418016:	pop    ecx
  418017:	pop    ecx
  418018:	pop    esi
  418019:	sub    eax,0xe983614b
  41801e:	pop    edx
  41801f:	pop    esp
  418020:	add    BYTE PTR [edx-0x17],dl
  418023:	dec    eax
  418024:	popa   
  418025:	pop    ebp
  418026:	xor    eax,0xff11524c
  41802b:	psubw  mm5,QWORD PTR [eax]
  41802e:	inc    esi
  41802f:	add    BYTE PTR [esi+0x65],al
  418032:	xor    dh,BYTE PTR [edx+0x40]
  418035:	xor    WORD PTR [ecx+ecx*8+0x1a],si
  41803a:	sub    BYTE PTR [edi],ah
  41803c:	leave  
  41803d:	sbb    eax,0x49d136f2
  418042:	imul   DWORD PTR [edi]
  418044:	fnstenv ds:0x550061e9
  41804a:	dec    edi
  41804b:	ins    DWORD PTR es:[edi],dx
  41804c:	add    al,0x3
  41804e:	and    al,0x63
  418050:	pop    es
  418051:	push   ebp
  418052:	inc    edx
  418053:	(bad)  
  418054:	cli    
  418055:	adc    DWORD PTR [ebx],ebp
  418057:	sub    al,0x9
  418059:	hlt    
  41805a:	sub    al,0x6c
  41805c:	or     DWORD PTR [ebx+0x22],eax
  41805f:	gs sar esi,0x37
  418063:	and    BYTE PTR [ebx-0x449cc82f],bh
  418069:	in     al,dx
  41806a:	and    eax,0x10580f64
  41806f:	or     esp,ebx
  418071:	or     DWORD PTR [edx+esi*2],ebp
  418074:	les    edx,FWORD PTR [edx]
  418076:	and    ch,BYTE PTR [esi-0x71]
  418079:	out    0x36,eax
  41807b:	imul   ecx,DWORD PTR [eax-0x7892de1a],0x38
  418082:	jmp    0x764215ee
  418087:	cmp    DWORD PTR [edx],edi
  418089:	(bad)  
  41808a:	inc    edi
  41808b:	xor    al,0x75
  41808d:	jbe    0x4180cb
  41808f:	and    ah,BYTE PTR [edx+0x7a]
  418092:	xchg   ecx,eax
  418093:	sub    esi,DWORD PTR [ecx+0x7e]
  418096:	fs xor eax,0x26634875
  41809c:	cs dec edx
  41809e:	pop    esi
  41809f:	cs sub eax,0xa0ee8e4
  4180a5:	jmp    0x4189dc
  4180aa:	enter  0x5,0x0
  4180ae:	enter  0x5,0x0
  4180b2:	fadd   DWORD PTR ds:0x5d80000
  4180b8:	add    BYTE PTR [eax],al
  4180ba:	enter  0x5,0x0
  4180be:	enter  0x5,0x0
  4180c2:	cwde   
  4180c3:	add    eax,0x5980000
  4180c8:	add    BYTE PTR [eax],al
  4180ca:	mov    BYTE PTR ds:0x5880000,al
  4180d0:	add    BYTE PTR [eax],al
  4180d2:	cwde   
  4180d3:	add    eax,0x5980000
  4180d8:	add    BYTE PTR [eax],al
  4180da:	mov    BYTE PTR ds:0x5880000,al
  4180e0:	add    BYTE PTR [eax],al
  4180e2:	lds    ecx,FWORD PTR [edx-0x16e694b2]
  4180e8:	sub    BYTE PTR [eax+eax*1],al
  4180eb:	push   ds
  4180ec:	ins    BYTE PTR es:[edi],dx
  4180ed:	push   esp
  4180ee:	in     al,dx
  4180ef:	xor    eax,0x772d6268
  4180f4:	mov    BYTE PTR [edi],al
  4180f6:	push   edi
  4180f7:	inc    ebp
  4180f8:	mov    edi,0xb28c1105
  4180fd:	gs in  al,0x80
  418100:	dec    edi
  418101:	dec    edi
  418102:	mov    ds,WORD PTR [eax]
  418104:	or     eax,0xd180000
  418109:	add    BYTE PTR [eax],al
  41810b:	or     BYTE PTR ds:0xd080000,cl
  418111:	add    BYTE PTR [eax],al
  418113:	sbb    BYTE PTR ds:0xd180000,cl
  418119:	add    BYTE PTR [eax],al
  41811b:	or     BYTE PTR ds:0xd080000,cl
  418121:	add    BYTE PTR [eax],al
  418123:	xor    DWORD PTR [edx-0x5dceffff],esp
  418129:	add    DWORD PTR [eax],eax
  41812b:	xor    DWORD PTR [edx-0x5dceffff],esp
  418131:	add    DWORD PTR [eax],eax
  418133:	xor    DWORD PTR [edx-0x5dceffff],esp
  418139:	add    DWORD PTR [eax],eax
  41813b:	xor    DWORD PTR [edx-0x5dceffff],esp
  418141:	add    DWORD PTR [eax],eax
  418143:	xor    DWORD PTR [edx-0x5dceffff],esp
  418149:	add    DWORD PTR [eax],eax
  41814b:	xor    DWORD PTR [edx+0x31000001],esp
  418151:	mov    ds:0xa2310001,al
  418156:	add    DWORD PTR [eax],eax
  418158:	xor    DWORD PTR [edx-0x5dceffff],esp
  41815e:	add    DWORD PTR [eax],eax
  418160:	xor    DWORD PTR [edx-0x5dceffff],esp
  418166:	add    DWORD PTR [eax],eax
  418168:	xor    DWORD PTR [edx-0x5dceffff],esp
  41816e:	add    DWORD PTR [eax],eax
  418170:	xor    DWORD PTR [edx-0x5dceffff],esp
  418176:	add    DWORD PTR [eax],eax
  418178:	xor    DWORD PTR [edx-0x5dceffff],esp
  41817e:	add    DWORD PTR [eax],eax
  418180:	xor    DWORD PTR [edx-0x5dceffff],esp
  418186:	add    DWORD PTR [eax],eax
  418188:	xor    DWORD PTR [edx-0x5dceffff],esp
  41818e:	add    DWORD PTR [eax],eax
  418190:	xor    DWORD PTR [edx-0x5dceffff],esp
  418196:	add    DWORD PTR [eax],eax
  418198:	xor    DWORD PTR [edx+0x9310001],esp
  41819e:	out    0x3,eax
  4181a0:	xor    DWORD PTR [ecx],ecx
  4181a2:	out    0x3,eax
  4181a4:	xor    DWORD PTR [ecx],ecx
  4181a6:	out    0x3,eax
  4181a8:	xor    DWORD PTR [ecx],ecx
  4181aa:	out    0x3,eax
  4181ac:	xor    DWORD PTR [ecx],ecx
  4181ae:	out    0x3,eax
  4181b0:	xor    DWORD PTR [ecx],ecx
  4181b2:	out    0x3,eax
  4181b4:	add    BYTE PTR [ecx],dh
  4181b6:	or     edi,esp
  4181b8:	add    esi,DWORD PTR [ecx]
  4181ba:	or     edi,esp
  4181bc:	add    esi,DWORD PTR [ecx]
  4181be:	or     edi,esp
  4181c0:	add    esi,DWORD PTR [ecx]
  4181c2:	or     edi,esp
  4181c4:	add    esi,DWORD PTR [ecx]
  4181c6:	or     edi,esp
  4181c8:	add    esi,DWORD PTR [ecx]
  4181ca:	or     edi,esp
  4181cc:	add    esi,DWORD PTR [ecx]
  4181ce:	or     edi,esp
  4181d0:	add    esi,DWORD PTR [ecx]
  4181d2:	or     edi,esp
  4181d4:	add    esi,DWORD PTR [ecx]
  4181d6:	or     edi,esp
  4181d8:	add    esi,DWORD PTR [ecx]
  4181da:	or     edi,esp
  4181dc:	add    esi,DWORD PTR [ecx]
  4181de:	or     edi,esp
  4181e0:	add    esi,DWORD PTR [ecx]
  4181e2:	or     edi,esp
  4181e4:	add    esi,DWORD PTR [ecx]
  4181e6:	or     edi,esp
  4181e8:	add    esi,DWORD PTR [ecx]
  4181ea:	or     edi,esp
  4181ec:	add    esi,DWORD PTR [ecx]
  4181ee:	or     edi,esp
  4181f0:	add    esi,DWORD PTR [ecx]
  4181f2:	or     edi,esp
  4181f4:	add    esi,DWORD PTR [ecx]
  4181f6:	or     edi,esp
  4181f8:	add    esi,DWORD PTR [ecx]
  4181fa:	or     edi,esp
  4181fc:	add    esi,DWORD PTR [ecx]
  4181fe:	or     edi,esp
  418200:	add    esi,DWORD PTR [ecx]
  418202:	or     edi,esp
  418204:	add    esi,DWORD PTR [ecx]
  418206:	or     eax,ebx
  418208:	adc    DWORD PTR [eax-0x3],esp
  41820b:	ror    DWORD PTR ds:0x50883931,cl
  418211:	mov    al,ds:0x95518e3e
  418216:	or     DWORD PTR [eax],eax
  418218:	jns    0x41821a
  41821a:	push   0x39
  41821c:	bound  ecx,QWORD PTR [ebx+0x4c752632]
  418222:	aas    
  418223:	cmp    eax,0xf8e5e977
  418228:	xor    BYTE PTR ds:0x4467b6e8,bl
  41822e:	cmp    dh,BYTE PTR es:[ecx-0x17]
  418232:	(bad)  
  418234:	xor    ch,dh
  418236:	leave  
  418237:	cld    
  418238:	xor    al,0xf1
  41823a:	xor    ah,dh
  41823c:	xor    edx,edi
  41823e:	(bad)  
  41823f:	mov    dh,0x60
  418241:	or     ecx,DWORD PTR [esi]
  418243:	out    0x31,al
  418245:	fidiv  DWORD PTR [edx]
  418247:	and    eax,0x2a601d63
  41824c:	push   DWORD PTR [bp+si]
  41824f:	cmp    eax,0x95efa63
  418254:	ins    BYTE PTR es:[edi],dx
  418255:	push   cs
  418256:	dec    ebx
  418257:	sub    al,BYTE PTR [eax]
  418259:	mov    eax,0xf8fff97c
  41825e:	push   ebp
  41825f:	cmp    BYTE PTR [ecx-0x22],dh
  418262:	inc    ebx
  418263:	cmp    esp,DWORD PTR [eax+ebx*1+0x35]
  418267:	and    DWORD PTR [ebx-0x3b],esp
  41826a:	push   ss
  41826b:	and    al,0x0
  41826d:	mov    esp,0xcc692723
  418272:	adc    eax,0x15bb6409
  418277:	sub    al,0x6d
  418279:	(bad)  
  41827a:	xor    bh,BYTE PTR ds:0x700b472
  418280:	cmp    eax,0xb63d966e
  418285:	xor    al,bl
  418287:	and    eax,0x32d82ee7
  41828c:	cs ins BYTE PTR es:[edi],dx
  41828e:	jle    0x4182e8
  418290:	sub    dh,BYTE PTR [edi+0x0]
  418293:	mov    edi,0xca30fff0
  418298:	mov    esi,0xb2c63531
  41829d:	std    
  41829e:	jb     0x418250
  4182a0:	in     al,dx
  4182a1:	arpl   WORD PTR [edi+0x57],bp
  4182a4:	or     eax,0xb14b322d
  4182a9:	xor    dh,BYTE PTR [esi]
  4182ab:	inc    edi
  4182ac:	mov    ch,0x36
  4182ae:	add    BYTE PTR [ebx-0x1b],ch
  4182b1:	jno    0x41831c
  4182b3:	sbb    esi,ecx
  4182b5:	push   DWORD PTR [edx+0x5]
  4182b8:	sti    
  4182b9:	outs   dx,BYTE PTR ds:[esi]
  4182ba:	push   0x60fb71
  4182bf:	std    
  4182c0:	jmp    0x418330
  4182c2:	je     0x4182e9
  4182c4:	(bad)  
  4182c5:	jmp    DWORD PTR [edx+0x3f]
  4182c8:	clc    
  4182c9:	outs   dx,DWORD PTR ds:[esi]
  4182ca:	jne    0x418310
  4182cc:	loopne 0x41833f
  4182ce:	add    BYTE PTR [eax],bh
  4182d0:	jmp    DWORD PTR [esi+ebp*2+0x2b]
  4182d4:	loopne 0x418344
  4182d6:	jae    0x418270
  4182d8:	std    
  4182d9:	fs addr16 aaa 
  4182dc:	loopne 0x41834f
  4182de:	add    BYTE PTR [esi],dh
  4182e0:	cli    
  4182e1:	push   0x74
  4182e3:	add    BYTE PTR [edx-0x14],ch
  4182e6:	imul   ebp,DWORD PTR [eax+ebx*2-0x14],0x6d
  4182eb:	addr16 jne 0x4182d3
  4182ee:	jmp    FWORD PTR [ecx+0x75]
  4182f1:	(bad)  
  4182f2:	jo     0x418367
  4182f4:	pop    ecx
  4182f5:	or     DWORD PTR ds:0x2fbc4b32,ebp
  4182fb:	xor    ebx,DWORD PTR [eax-0xe]
  4182fe:	addr16 popa 
  418300:	test   al,ah
  418302:	jne    0x418369
  418304:	call   0x63e1:0xb5726609
  41830b:	outs   dx,DWORD PTR ds:[esi]
  41830c:	xor    DWORD PTR [ebp+0x36886901],ecx
  418312:	sub    eax,0x24a2a363
  418317:	jno    0x4182ae
  418319:	mov    WORD PTR [ecx],es
  41831b:	jno    0x4182b3
  41831d:	jg     0x418345
  41831f:	arpl   WORD PTR [ebx-0x7e8cc95e],ax
  418325:	inc    ebp
  418326:	imul   edx,DWORD PTR ss:[eax+0x44],0x4
  41832b:	imul   ebx,DWORD PTR [eax+0x3f],0x2c
  41832f:	pop    edi
  418330:	push   esp
  418331:	test   BYTE PTR [ebx],0x61
  418334:	dec    ecx
  418335:	inc    ebp
  418336:	and    eax,0x2aa25471
  41833b:	outs   dx,BYTE PTR ds:[esi]
  41833c:	cmp    eax,0x546e3645
  418341:	inc    BYTE PTR [ebx]
  418343:	push   0x46
  418345:	cvttps2pi mm6,QWORD PTR [ebx+0x0]
  418349:	adc    BYTE PTR [edx+0x7127327],ah
  41834f:	cmp    DWORD PTR [ebp+0x24],ebp
  418352:	mov    ds:0xaf0c6c23,al
  418357:	xor    al,0x63
  418359:	adc    eax,0x25f23a2
  41835e:	add    eax,0xb60d5f26
  418363:	add    DWORD PTR [ecx-0x3],esi
  418366:	shl    BYTE PTR [ebx],0x75
  418369:	ror    bh,1
  41836b:	xor    al,0x0
  41836d:	and    DWORD PTR [edx],edx
  41836f:	hlt    
  418370:	das    
  418371:	and    DWORD PTR [edx],edx
  418373:	add    al,0x70
  418375:	fsubr  QWORD PTR [edi+0x31]
  418378:	ins    BYTE PTR es:[edi],dx
  418379:	aam    0xa1
  41837b:	sub    ebp,DWORD PTR [ebp-0x3d]
  41837e:	lds    esp,FWORD PTR [edx]
  418380:	outs   dx,BYTE PTR ds:[esi]
  418381:	xor    esp,ecx
  418383:	and    ah,BYTE PTR [edi-0x43]
  418386:	or     BYTE PTR [edi-0x73c15ffd],cl
  41838c:	cs xchg edx,eax
  41838e:	aaa    
  41838f:	out    0x22,eax
  418391:	mov    al,ds:0x9e267b21
  418396:	or     DWORD PTR [ecx-0x7bc27fca],ecx
  41839c:	xor    eax,0x228c2131
  4183a1:	xchg   DWORD PTR [esi],ebp
  4183a3:	jge    0x4183a8
  4183a5:	sub    DWORD PTR [esi],0x37523457
  4183ab:	out    0xf8,eax
  4183ad:	add    BYTE PTR ds:0x25f91dfc,bl
  4183b3:	cld    
  4183b4:	out    0x2b,al
  4183b6:	bound  esp,QWORD PTR [ebx]
  4183b8:	cmp    esp,DWORD PTR [edi]
  4183ba:	inc    ebx
  4183bb:	or     DWORD PTR [ebx+0x31],ecx
  4183be:	aas    
  4183bf:	cs inc ebx
  4183c1:	cmp    esi,DWORD PTR [ecx]
  4183c3:	sub    bh,BYTE PTR ds:0x1e2e4328
  4183c9:	add    al,0x25
  4183cb:	and    DWORD PTR [esi],ecx
  4183cd:	das    
  4183ce:	push   es
  4183cf:	cmp    bh,ah
  4183d1:	and    cl,BYTE PTR [edi]
  4183d3:	sub    al,0x4
  4183d5:	xor    BYTE PTR [eax],ah
  4183d7:	or     DWORD PTR [edx],ecx
  4183d9:	sub    al,0xee
  4183db:	or     ebp,DWORD PTR ss:[ebx]
  4183de:	adc    cl,BYTE PTR [ecx]
  4183e0:	or     esp,DWORD PTR [ebx]
  4183e2:	mov    cr0,esp
  4183e5:	xor    BYTE PTR [ecx],dh
  4183e7:	cli    
  4183e8:	pop    ss
  4183e9:	repz pop ds
  4183eb:	or     ecx,edx
  4183ed:	xlat   BYTE PTR es:[ebx]
  4183ef:	and    al,al
  4183f1:	sub    edx,edx
  4183f3:	ss out 0x34,eax
  4183f6:	into   
  4183f7:	and    cl,dh
  4183f9:	das    
  4183fa:	ror    BYTE PTR [eax],cl
  4183fc:	iret   
  4183fd:	and    dl,bh
  4183ff:	and    al,BYTE PTR [eax]
  418401:	enter  0x90a,0x6f
  418405:	enter  0x3df4,0x71
  418409:	mov    eax,ds:0x995f2132
  41840e:	bound  edi,QWORD PTR [edx]
  418410:	add    BYTE PTR [eax+eax*1-0x7f8dc2ad],al
  418417:	pop    edx
  418418:	or     DWORD PTR [eax-0x78],esi
  41841b:	inc    ebp
  41841c:	cmp    BYTE PTR [eax],al
  41841e:	mov    BYTE PTR [ebx+0x52],dl
  418421:	pop    edi
  418422:	mov    BYTE PTR [ebx+0x9],dl
  418425:	ss mov ah,0xfe
  418428:	stc    
  418429:	xor    DWORD PTR [eax],ebx
  41842b:	xor    eax,0x17486b52
  418430:	sub    eax,0x240ce95f
  418435:	je     0x418478
  418437:	add    al,0x23
  418439:	gs jmp 0x46afae56
  41843f:	sbb    BYTE PTR [edi],dh
  418441:	add    BYTE PTR [esi+ecx*1+0x3d],al
  418445:	push   0x71090344
  41844a:	pop    ss
  41844b:	pop    esi
  41844c:	and    al,0x70
  41844e:	and    BYTE PTR ds:0x621a631f,ch
  418454:	sub    ah,BYTE PTR [ecx+0x8]
  418457:	sub    eax,0x5215633c
  41845c:	and    al,0x6b
  41845e:	add    al,0x2d
  418460:	cmp    DWORD PTR [ebp+0x2],ebp
  418463:	dec    eax
  418464:	push   ds
  418465:	ins    DWORD PTR es:[edi],dx
  418466:	push   DWORD PTR [edx]
  418468:	sub    ch,BYTE PTR [esi+edx*8+0x24]
  41846c:	es ja  0x41843d
  41846f:	sub    edx,esp
  418471:	call   DWORD PTR [edi]
  418473:	fs jecxz 0x4184a4
  418476:	sbb    BYTE PTR [eax],al
  418478:	sub    eax,0x8b00731e
  41847d:	cli    
  41847e:	pop    esp
  41847f:	outs   dx,BYTE PTR ds:[esi]
  418480:	outs   dx,DWORD PTR ds:[esi]
  418481:	push   es
  418482:	push   0x68f67465
  418487:	gs dec eax
  418489:	loopne 0x4184fb
  41848b:	jae    0x418459
  41848d:	in     al,0x6d
  41848f:	add    dl,al
  418491:	in     al,dx
  418492:	outs   dx,BYTE PTR ds:[esi]
  418493:	ins    DWORD PTR es:[edi],dx
  418494:	mov    cl,0xe3
  418496:	pusha  
  418497:	add    BYTE PTR [edi-0x4091a308],dl
  41849d:	loopne 0x41849e
  41849f:	jae    0x41844e
  4184a1:	div    BYTE PTR [ebx+0x69]
  4184a4:	mov    dh,0xea
  4184a6:	jmp    DWORD PTR [eax+0x78]
  4184a9:	imul   BYTE PTR [ebx+0x65]
  4184ac:	fdivr  st,st(0)
  4184ae:	arpl   WORD PTR fs:[eax+0x6d6c6be0],ax
  4184b5:	or     eax,0xe6696570
  4184ba:	pusha  
  4184bb:	add    BYTE PTR [ebx],cl
  4184bd:	loopne 0x41851d
  4184bf:	jb     0x41852e
  4184c1:	icebp  
  4184c2:	push   DWORD PTR [eax]
  4184c4:	enter  0x71ea,0x61
  4184c8:	imul   esp,eax,0xffffffff
  4184cb:	jbe    0x41850e
  4184cd:	stc    
  4184ce:	imul   ebp,DWORD PTR [ecx+0x39],0xfffffff8
  4184d2:	jmp    FWORD PTR [eax+0x34]
  4184d5:	loop   0x41854c
  4184d7:	gs inc ecx
  4184d9:	loop   0x41854b
  4184db:	xor    al,BYTE PTR [eax]
  4184dd:	cwde   
  4184de:	jecxz  0x418544
  4184e0:	arpl   WORD PTR [edi],si
  4184e2:	stc    
  4184e3:	pusha  
  4184e4:	add    BYTE PTR [esi-0x41c9cc45],bh
  4184ea:	mov    ebx,0xeb8d6cfd
  4184ef:	imul   esi,DWORD PTR gs:[esi+0x5],0xd4316163
  4184f7:	sub    BYTE PTR [ebp-0x30],dh
  4184fa:	fadd   DWORD PTR [ecx]
  4184fc:	les    di,DWORD PTR [esi+0x7cd6772a]
  418503:	hlt    
  418504:	call   ecx
  418506:	outs   dx,BYTE PTR ds:[esi]
  418507:	xor    ch,BYTE PTR [eax-0x3a]
  41850a:	jae    0x418534
  41850c:	add    BYTE PTR [ecx-0x66a0d67f],bl
  418512:	add    DWORD PTR [ecx],0x31878e70
  418518:	add    BYTE PTR [ebx-0x7d8ed7d2],dl
  41851e:	cdq    
  41851f:	sub    esp,DWORD PTR [ebp+0x31]
  418522:	test   BYTE PTR ds:0x2d84895f,ch
  418528:	pop    edi
  418529:	mov    DWORD PTR [edx+0x52627730],esp
  41852f:	and    DWORD PTR [ecx+0x4c],esp
  418532:	adc    DWORD PTR [ebx+ebp*2],eax
  418535:	push   eax
  418536:	dec    esi
  418537:	cmp    BYTE PTR [eax+0x4c],ch
  41853a:	push   edi
  41853b:	add    al,0x61
  41853d:	push   eax
  41853e:	pop    eax
  41853f:	and    DWORD PTR [eax+eax*1+0x50],esp
  418543:	mov    ds:0xf04d6730,al
  418548:	and    al,0x72
  41854a:	xor    esp,esi
  41854c:	sub    ah,BYTE PTR [edx+0x14]
  41854f:	adc    al,0x38
  418551:	add    BYTE PTR [edi],cl
  418553:	push   DWORD PTR [ecx]
  418555:	arpl   WORD PTR [edi],sp
  418557:	std    
  418558:	xor    DWORD PTR [eax],eax
  41855a:	adc    BYTE PTR [ebx],dl
  41855c:	sub    BYTE PTR [esi+0x16],ah
  41855f:	sbb    al,BYTE PTR [edx+esi*2]
  418562:	adc    BYTE PTR [ebx],al
  418564:	sub    al,0x63
  418566:	or     eax,0x85f2fa2
  41856b:	mov    al,0x1f
  41856d:	ins    DWORD PTR es:[edi],dx
  41856e:	out    0x8,al
  418570:	out    0x24,eax
  418572:	loop   0x418595
  418574:	shl    DWORD PTR [edx],cl
  418576:	jecxz  0x418580
  418578:	xlat   BYTE PTR ds:[ebx]
  418579:	neg    BYTE PTR es:[esi]
  41857c:	aam    0x37
  41857e:	xor    DWORD PTR [ebx],ebp
  418580:	enter  0xda37,0x29
  418584:	int    0x3
  418586:	rcr    BYTE PTR [edi],1
  418588:	(bad)  
  418589:	sub    dh,cl
  41858b:	and    eax,0x228e21e7
  418590:	xchg   ebx,eax
  418591:	es sahf 
  418593:	or     DWORD PTR [edx-0x73d36fd4],ebx
  418599:	xor    DWORD PTR [esi+0x9],eax
  41859c:	jl     0x4185c8
  41859e:	nop
  41859f:	and    al,0x8c
  4185a1:	cmp    dh,BYTE PTR [ecx]
  4185a3:	sub    edx,DWORD PTR [eax+0x1e920037]
  4185a9:	mov    WORD PTR [ebx],es
  4185ab:	mov    DWORD PTR [esi],esp
  4185ad:	jnp    0x4185de
  4185af:	pop    esp
  4185b0:	cli    
  4185b1:	out    0x26,al
  4185b3:	pop    edx
  4185b4:	and    cl,BYTE PTR [ebp+0x27]
  4185b7:	dec    edx
  4185b8:	or     DWORD PTR [ebx+0x23],ecx
  4185bb:	dec    eax
  4185bc:	and    BYTE PTR [ebx+0x23],dl
  4185bf:	xor    DWORD PTR [eax+ecx*2],edi
  4185c2:	das    
  4185c3:	popw   ds
  4185c5:	xor    ebp,DWORD PTR [esi+ebx*2]
  4185c8:	or     DWORD PTR [edx+0x2d],ecx
  4185cb:	dec    edx
  4185cc:	cmp    DWORD PTR [eax+0x33],ecx
  4185cf:	xor    DWORD PTR ds:0x201a2310,esp
  4185d5:	or     eax,0x8353128
  4185da:	cmp    eax,DWORD PTR ds:0x17041920
  4185e0:	and    cl,bh
  4185e2:	sbb    cl,BYTE PTR ss:[ecx]
  4185e5:	adc    DWORD PTR ds:0xba001f09,ebp
  4185eb:	xor    ebp,0xffffffff
  4185ee:	cli    
  4185ef:	sbb    ebp,DWORD PTR [edx]
  4185f1:	push   0x2520c8
  4185f6:	retf   
  4185f7:	push   cs
  4185f8:	sub    BYTE PTR [esi-0x3e],ch
  4185fb:	arpl   di,si
  4185fd:	xor    ecx,ebp
  4185ff:	add    ch,BYTE PTR [edi+ebx*2]
  418602:	retf   0x2c1a
  418605:	jno    0x4185f0
  418607:	adc    DWORD PTR [esi],ebx
  418609:	ins    DWORD PTR es:[edi],dx
  41860a:	lds    eax,FWORD PTR [eax]
  41860c:	xor    ah,BYTE PTR [edi]
  41860e:	ins    BYTE PTR es:[edi],dx
  41860f:	mov    esi,0xe9722a65
  418614:	popa   
  418615:	sub    BYTE PTR [ebp-0x72],ch
  418618:	data16 sub dh,BYTE PTR [edx-0x17]
  41861c:	push   eax
  41861d:	dec    esi
  41861e:	outs   dx,BYTE PTR ds:[esi]
  41861f:	mov    BYTE PTR [esi+ecx*2+0x0],bl
  418623:	xchg   ebx,eax
  418624:	push   ebx
  418625:	and    ah,BYTE PTR [ebx+0x7a]
  418628:	xor    cl,BYTE PTR [esi+0x71]
  41862b:	lea    ecx,[esi+ecx*2+0x71]
  41862f:	test   DWORD PTR [ecx+ecx*1],edx
  418632:	jbe    0x418684
  418634:	push   cs
  418635:	xor    eax,0x91c5b6d
  41863a:	ins    BYTE PTR es:[edi],dx
  41863b:	inc    esi
  41863c:	or     esp,DWORD PTR ds:0xde353f6d
  418642:	xor    edx,edi
  418644:	std    
  418645:	xor    esp,DWORD PTR [ebx-0x17]
  418648:	(bad)  
  41864b:	cli    
  41864c:	mov    esp,0x6139ffdf
  418651:	dec    esi
  418652:	jb     0x418671
  418654:	pop    edi
  418655:	sub    ch,BYTE PTR [ecx-0x17]
  418658:	push   ebx
  418659:	sub    ch,BYTE PTR [ebp+0x1b]
  41865c:	push   edx
  41865d:	sub    al,BYTE PTR [eax]
  41865f:	push   ss
  418660:	pop    esp
  418661:	pop    ds
  418662:	outs   dx,BYTE PTR ds:[esi]
  418663:	add    BYTE PTR ds:0x296cfff7,dh
  418669:	jmp    0x7274:0x5256962
  418670:	add    BYTE PTR [ecx],dh
  418672:	jecxz  0x4186d8
  418674:	je     0x4186c7
  418676:	or     ch,BYTE PTR [ebx+0x6e]
  418679:	ins    BYTE PTR es:[edi],dx
  41867a:	(bad)  [ebp+0x65]
  41867d:	dec    eax
  41867e:	mov    ch,0x2f
  418680:	xor    edi,DWORD PTR [ecx-0x1c]
  418683:	pop    esi
  418684:	add    BYTE PTR [ebx-0x1e],bh
  418687:	arpl   WORD PTR fs:[ebx-0x17],sp
  41868b:	ins    DWORD PTR es:[edi],dx
  41868c:	add    BYTE PTR [edx-0x7],dh
  41868f:	ins    DWORD PTR es:[edi],dx
  418690:	imul   ebp,edi,0xc062fff3
  418696:	repz fs jae 0x4186a2
  41869a:	cli    
  41869b:	pop    esp
  41869c:	jae    0x418659
  41869e:	cli    
  41869f:	das    
  4186a0:	jb     0x418656
  4186a2:	or     DWORD PTR [ebp+0x75],ebx
  4186a5:	mov    ebx,esi
  4186a7:	outs   dx,BYTE PTR fs:[esi]
  4186a9:	or     bh,dh
  4186ab:	outs   dx,DWORD PTR ds:[esi]
  4186ac:	popa   
  4186ad:	jp     0x41868e
  4186af:	je     0x4186b1
  4186b1:	mov    ecx,0x7e69690d
  4186b6:	add    eax,0xe17a6569
  4186bb:	outs   dx,BYTE PTR fs:[esi]
  4186bd:	enter  0x6aea,0x6f
  4186c1:	ja     0x4186a4
  4186c3:	pusha  
  4186c4:	add    BYTE PTR [esi-0x9],dh
  4186c7:	fs outs dx,BYTE PTR gs:[esi]
  4186ca:	jmp    0xe2b1873d
  4186cf:	outs   dx,DWORD PTR ds:[esi]
  4186d0:	gs cwde 
  4186d2:	mul    BYTE PTR [edi+0x61]
  4186d5:	add    BYTE PTR [edx+eiz*8],bh
  4186d8:	push   0x6ddc2e00
  4186dd:	je     0x418710
  4186df:	std    
  4186e0:	sub    DWORD PTR [esi+ebx*1-0x60],esp
  4186e4:	and    eax,0x2b1b166d
  4186e9:	outs   dx,BYTE PTR ds:[esi]
  4186ea:	push   ss
  4186eb:	mov    al,ds:0x4035f29
  4186f0:	pop    ds
  4186f1:	ja     0x418724
  4186f3:	mov    bl,0x28
  4186f5:	ins    DWORD PTR es:[edi],dx
  4186f6:	fidivr DWORD PTR [esp+edi*1-0xee8da00]
  4186fd:	xor    al,0x31
  4186ff:	retf   0x712a
  418702:	aam    0xcf
  418704:	sub    DWORD PTR [eax],eax
  418706:	aad    0x6c
  418708:	imul   edi,DWORD PTR es:[eax-0x3198e261],0x9d5f2dc8
  418713:	mov    ds:0x9a9d0024,al
  418718:	xor    BYTE PTR [esi-0x6b],ch
  41871b:	test   DWORD PTR [ebx],esi
  41871d:	add    BYTE PTR [edx-0x678dd36e],ah
  418723:	xchg   esi,eax
  418724:	add    DWORD PTR [edx-0x70],esp
  418727:	xchg   esp,eax
  418728:	sbb    eax,0x20a28567
  41872d:	outs   dx,BYTE PTR ds:[esi]
  41872e:	jge    0x4187ad
  418730:	xor    eax,DWORD PTR [eax]
  418732:	push   eax
  418733:	sub    al,0x2d
  418735:	push   0x395456
  41873a:	add    BYTE PTR [edx+0x3b],dl
  41873d:	ss jbe 0x41878c
  418740:	dec    esi
  418741:	xor    BYTE PTR [ebx+0x31],ah
  418744:	dec    edx
  418745:	daa    
  418746:	popa   
  418747:	pop    edx
  418748:	cmp    eax,0x3b410039
  41874d:	das    
  41874e:	arpl   WORD PTR [ebx-0x5e],ax
  418751:	and    esp,DWORD PTR [ebx+0x1f]
  418754:	dec    eax
  418755:	and    DWORD PTR [ebx+0x18],ebp
  418758:	or     DWORD PTR ds:0xe1d1604,edx
  41875e:	xor    dl,BYTE PTR [edx]
  418760:	xor    al,BYTE PTR [esi]
  418762:	das    
  418763:	cs or  eax,ebx
  418766:	xor    al,BYTE PTR [ebx+0x34]
  418769:	mov    edx,0x1033311e
  41876e:	xor    al,0x12
  418770:	aaa    
  418771:	out    0x20,eax
  418773:	rcr    BYTE PTR [edx],cl
  418775:	add    al,0x35
  418777:	into   
  418778:	aaa    
  418779:	out    0x2c,eax
  41877b:	iret   
  41877c:	and    esi,eax
  41877e:	sub    ebx,ebp
  418780:	or     al,bl
  418782:	xor    dl,dl
  418784:	sar    DWORD PTR ss:[edx],cl
  418787:	push   ss
  418788:	or     edx,ecx
  41878a:	xor    eax,0x2ab329d2
  41878f:	mov    edi,0x9c21e725
  418794:	sbb    al,0xc9
  418796:	and    ah,BYTE PTR [ebx-0x69e077f7]
  41879c:	and    eax,0x31003488
  4187a1:	aaa    
  4187a2:	xchg   BYTE PTR [edi],ch
  4187a4:	xchg   esi,eax
  4187a5:	push   ds
  4187a6:	add    BYTE PTR [ebx],0x80
  4187a9:	sbb    eax,0x37923a88
  4187ae:	out    0x30,eax
  4187b0:	mov    ?,WORD PTR [eax]
  4187b2:	mov    ebp,DWORD PTR [eax]
  4187b4:	pop    edx
  4187b5:	or     DWORD PTR [edi+0x35],esi
  4187b8:	xchg   BYTE PTR [edx],ah
  4187ba:	pop    edx
  4187bb:	pop    ds
  4187bc:	xor    DWORD PTR [edi],ebp
  4187be:	pop    edi
  4187bf:	and    eax,0x2745275f
  4187c4:	xor    DWORD PTR [eax],edi
  4187c6:	dec    eax
  4187c7:	daa    
  4187c8:	inc    edx
  4187c9:	es push ebx
  4187cb:	add    al,0x4a
  4187cd:	and    dl,BYTE PTR [edx+0x1f]
  4187d0:	xor    DWORD PTR ds:0x1d594800,esp
  4187d6:	pop    edi
  4187d7:	cmp    ch,BYTE PTR ds:0x3e0c7226
  4187dd:	sbb    eax,DWORD PTR [eax]
  4187df:	adc    eax,0x1d743a36
  4187e4:	cmp    dh,BYTE PTR cs:[ecx+ebp*8+0x4f]
  4187e9:	dec    esp
  4187ea:	jbe    0x4187f8
  4187ec:	inc    edi
  4187ed:	and    al,0x61
  4187ef:	adc    ch,BYTE PTR ds:0x190c6e1e
  4187f5:	push   ds
  4187f6:	jbe    0x4187fc
  4187f8:	sub    eax,0xbdf5f25
  4187fd:	and    eax,0x1d1bcc00
  418802:	ins    DWORD PTR es:[edi],dx
  418803:	fild   WORD PTR [eax]
  418805:	das    
  418806:	or     DWORD PTR [ecx-0x3f],esp
  418809:	pop    ss
  41880a:	aaa    
  41880b:	popa   
  41880c:	shl    DWORD PTR [edx],1
  41880e:	and    esi,DWORD PTR [edx-0x30]
  418811:	pop    ss
  418812:	sbb    esp,DWORD PTR [ecx+ebp*8+0x51]
  418816:	sbb    al,0x64
  418818:	jmp    0x9db2ae63
  41881d:	dec    ebx
  41881e:	sbb    esi,DWORD PTR [edi-0x17]
  418821:	dec    eax
  418822:	sbb    al,0x6e
  418824:	mov    WORD PTR [edx],?
  418826:	push   ds
  418827:	mov    bh,BYTE PTR [si]
  41882a:	sbb    al,0x71
  41882c:	xchg   esi,eax
  41882d:	push   eax
  41882e:	xor    eax,0xf8fcbb00
  418833:	xor    DWORD PTR [ebx+0x745faae4],edi
  418839:	or     al,0x27
  41883b:	ins    BYTE PTR es:[edi],dx
  41883c:	dec    esp
  41883d:	and    cl,BYTE PTR [ecx]
  41883f:	das    
  418840:	sbb    ah,bl
  418842:	fld    TBYTE PTR [esi]
  418844:	sbb    ah,al
  418846:	(bad)  
  418848:	dec    ecx
  418849:	push   cs
  41884a:	sub    BYTE PTR [edi+0x0],bl
  41884d:	imul   esp,edx,0x6b
  418850:	popa   
  418851:	enter  0x6ae0,0x72
  418855:	cld    
  418856:	jecxz  0x4188c5
  418858:	xor    ch,BYTE PTR [ebx+0x476c6506]
  41885e:	(bad)  [eax+0x67]
  418861:	daa    
  418862:	jmp    0xe278ee66
  418867:	jae    0x4188cb
  418869:	add    BYTE PTR [ecx],bh
  41886b:	loope  0x4188d8
  41886d:	xor    DWORD PTR [eax+0x21766ae2],ecx
  418873:	jecxz  0x4188d7
  418875:	add    BYTE PTR [esi],dh
  418877:	in     al,0x73
  418879:	push   0x64ffe339
  41887e:	test   ecx,esp
  418880:	pop    esp
  418881:	outs   dx,BYTE PTR ds:[esi]
  418882:	jge    0x41886d
  418884:	imul   eax,DWORD PTR [eax],0x6b
  418887:	out    0x6a,eax
  418889:	outs   dx,DWORD PTR ds:[esi]
  41888a:	jp     0x418879
  41888c:	jmp    DWORD PTR [ebp+0x7d]
  41888f:	out    0x66,eax
  418891:	outs   dx,DWORD PTR ds:[esi]
  418892:	outs   dx,BYTE PTR ds:[esi]
  418893:	or     al,0x0
  418895:	jae    0x418890
  418897:	loopne 0x418901
  418899:	jns    0x4188b3
  41889b:	loope  0x4188f9
  41889d:	js     0x41885e
  41889f:	call   0xe049f50f
  4188a4:	pop    esp
  4188a5:	jae    0x41885e
  4188a7:	jecxz  0x4188a8
  4188a9:	imul   eax,DWORD PTR [edi-0x46ff9222],0xbb7731f4
  4188b3:	call   0xe819faeb
  4188b8:	pop    esp
  4188b9:	bound  esp,QWORD PTR [ecx+0x6]
  4188bc:	jb     0x418923
  4188be:	ins    BYTE PTR es:[edi],dx
  4188bf:	mov    ah,0x2f
  4188c1:	xor    ecx,eax
  4188c3:	out    0x6b,eax
  4188c5:	popa   
  4188c6:	xor    DWORD PTR [esi],edi
  4188c8:	sub    BYTE PTR [edi+0x31],bl
  4188cb:	push   eax
  4188cc:	xor    ah,BYTE PTR [edi+0x0]
  4188cf:	dec    edi
  4188d0:	aas    
  4188d1:	pop    ds
  4188d2:	add    BYTE PTR [eax-0xd],al
  4188d5:	push   ds
  4188d6:	jb     0x4188fd
  4188d8:	mov    al,ds:0xec0c6822
  4188dd:	xor    BYTE PTR [ebx+0x10],ah
  4188e0:	mov    al,ds:0xd55c32f0
  4188e5:	lock call DWORD PTR [ecx]
  4188e8:	add    bl,BYTE PTR ds:0x1d11563
  4188ee:	push   0x611dae10
  4188f3:	push   es
  4188f4:	scas   al,BYTE PTR es:[edi]
  4188f5:	and    BYTE PTR [eax],al
  4188f7:	aad    0xfc
  4188f9:	cmp    esi,DWORD PTR [esp+ecx*8-0x53]
  4188fd:	add    DWORD PTR [ecx-0x30],esi
  418900:	leave  
  418901:	and    BYTE PTR [ecx+esi*1+0x11],ah
  418905:	repz xor DWORD PTR [ebx],eax
  418908:	psllw  mm7,mm7
  41890b:	into   
  41890c:	shl    BYTE PTR ds:0x279fce6c,0x5f
  418913:	ret    0x206f
  418916:	jb     0x418949
  418918:	(bad)  
  418919:	and    al,0x6e
  41891b:	cwde   
  41891c:	int    0x25
  41891e:	ins    BYTE PTR es:[edi],dx
  41891f:	xchg   esp,eax
  418920:	mov    dl,0x2a
  418922:	addr16 popf 
  418924:	jle    0x418946
  418926:	outs   dx,BYTE PTR ds:[esi]
  418927:	xor    DWORD PTR [ebx-0x767d8edc],edx
  41892d:	and    BYTE PTR [eax],al
  41892f:	and    BYTE PTR [esi],0x20
  418932:	ins    BYTE PTR es:[edi],dx
  418933:	add    BYTE PTR [ebp+0x63700191],al
  418939:	xchg   ecx,eax
  41893a:	cmp    al,0x63
  41893c:	arpl   WORD PTR [edx+0x9656d29],si
  418942:	dec    ebx
  418943:	and    eax,0x2b56094c
  418948:	pop    edi
  418949:	sub    eax,0x9402d46
  41894e:	cmp    al,0x2f
  418950:	inc    eax
  418951:	sbb    eax,0x9522b4b
  418956:	inc    esi
  418957:	and    esp,DWORD PTR ds:0x13043a2e
  41895d:	xor    bh,BYTE PTR [ebx]
  41895f:	sub    BYTE PTR [edx+ebp*1],dl
  418962:	sbb    ebx,DWORD PTR [edi]
  418964:	and    BYTE PTR [ecx],cl
  418966:	push   es
  418967:	sub    al,0x13
  418969:	sub    eax,0x3031261b
  41896e:	add    eax,0x14340b2c
  418973:	add    al,0x46
  418975:	fstp   TBYTE PTR [ecx-0x4220dc11]
  41897b:	sti    
  41897c:	pop    ds
  41897d:	(bad)  
  41897f:	add    edx,edx
  418981:	sbb    al,0xe2
  418983:	xor    edi,ebx
  418985:	xor    ecx,esi
  418987:	xor    edi,ebx
  418989:	pop    ds
  41898a:	fadd   QWORD PTR [ebx]
  41898c:	fstp   DWORD PTR [ebx+edx*8]
  41898f:	xor    edi,ebx
  418991:	not    DWORD PTR ds:0xce206f2
  418997:	out    dx,eax
  418998:	add    BYTE PTR [edi-0x9],ah
  41899b:	clc    
  41899c:	repnz pop esp
  41899e:	idiv   eax
  4189a0:	out    dx,al
  4189a1:	pusha  
  4189a2:	clc    
  4189a3:	xchg   esi,eax
  4189a4:	and    al,0x87
  4189a6:	and    cl,dh
  4189a8:	sbb    al,0x6e
  4189aa:	sbb    eax,0x3196e58c
  4189af:	xchg   edi,eax
  4189b0:	add    ecx,DWORD PTR [ecx+0x3b337b1d]
  4189b6:	clc    
  4189b7:	int    0xed
  4189b9:	and    al,0xf7
  4189bb:	push   DWORD PTR [edi-0x47d20829]
  4189c1:	int3   
  4189c2:	fld    TBYTE PTR ds:0x2cd9e018
  4189c8:	pop    ecx
  4189c9:	adc    al,0x37
  4189cb:	ja     0x4189d3
  4189cd:	and    al,0x48
  4189cf:	je     0x418a15
  4189d1:	xlat   BYTE PTR ds:[ebx]
  4189d2:	aaa    
  4189d3:	push   0x68092d39
  4189d8:	xor    eax,0x63a1961
  4189dd:	mov    WORD PTR [edx],gs
  4189df:	ins    BYTE PTR es:[edi],dx
  4189e0:	xor    eax,0x87a3754
  4189e5:	inc    esp
  4189e6:	dec    eax
  4189e7:	adc    dl,BYTE PTR fs:[edx-0x9]
  4189eb:	ins    BYTE PTR es:[edi],dx
  4189ec:	push   cs
  4189ed:	pop    edx
  4189ee:	sub    ch,BYTE PTR [ebp-0x4]
  4189f1:	xchg   esp,eax
  4189f2:	aaa    
  4189f3:	ins    BYTE PTR es:[edi],dx
  4189f4:	(bad)  
  4189f5:	or     DWORD PTR [eax+0x43],0xffffffc1
  4189f9:	or     esi,edi
  4189fb:	(bad)  
  4189fd:	add    BYTE PTR [edi+0x9],al
  418a00:	push   0x3a190ef5
  418a05:	push   ss
  418a06:	dec    esp
  418a07:	div    BYTE PTR [edi]
  418a09:	sbb    DWORD PTR [edi-0xa],edx
  418a0c:	xor    al,0x10
  418a0e:	dec    edi
  418a0f:	fisubr DWORD PTR [edi]
  418a11:	inc    DWORD PTR [ebx-0x22]
  418a14:	xor    dl,BYTE PTR [esi]
  418a16:	out    dx,eax
  418a17:	sbb    BYTE PTR [edx-0x66],ch
  418a1a:	je     0x418a6e
  418a1c:	cs int3 
  418a1e:	push   0x2a
  418a20:	add    cl,al
  418a22:	dec    esi
  418a23:	sbb    eax,0xf60de370
  418a28:	pop    esi
  418a29:	mov    es,WORD PTR [ecx-0x9]
  418a2c:	jns    0x4189b6
  418a2e:	or     al,0x2a
  418a30:	ins    DWORD PTR es:[edi],dx
  418a31:	jl     0x418a48
  418a33:	frstor [ebp+0x0]
  418a36:	mov    ebx,0xb57862ac
  418a3b:	or     al,BYTE PTR [eax]
  418a3d:	pop    ecx
  418a3e:	lds    edx,FWORD PTR [ebx+0x50]
  418a41:	push   edi
  418a42:	xchg   esp,eax
  418a43:	in     al,0x44
  418a45:	dec    esp
  418a46:	add    eax,0x155569d
  418a4b:	cmp    eax,0xe4164447
  418a50:	dec    ebx
  418a51:	inc    ebp
  418a52:	sbb    BYTE PTR [ecx+edx*2+0x49],dl
  418a56:	or     edi,DWORD PTR [edi]
  418a58:	push   ebp
  418a59:	push   eax
  418a5a:	inc    esp
  418a5b:	push   eax
  418a5c:	inc    esp
  418a5d:	xor    BYTE PTR [ecx+0x40],al
  418a60:	inc    ebp
  418a61:	xor    DWORD PTR [eax],eax
  418a63:	sahf   
  418a64:	call   0x200:0xa88fffd
  418a6b:	cwde   
  418a6c:	dec    ecx
  418a6d:	dec    ebx
  418a6e:	inc    esp
  418a6f:	inc    ebp
  418a70:	or     al,0xfd
  418a72:	dec    DWORD PTR [eax-0x77fffff6]
  418a78:	or     al,BYTE PTR [eax]
  418a7a:	push   ebx
  418a7b:	pop    ds
  418a7c:	push   ebx
  418a7d:	push   esp
  418a7e:	push   edi
  418a7f:	sbb    DWORD PTR [edi],edi
  418a81:	inc    ecx
  418a82:	pop    esp
  418a83:	cmp    eax,0x7f725f04
  418a88:	fild   QWORD PTR [edx+0x66]
  418a8b:	fs push esi
  418a8d:	push   ebx
  418a8e:	imul   ebp,DWORD PTR [esi-0x12],0x565b776a
  418a95:	aas    
  418a96:	jne    0x418b12
  418a98:	fsub   QWORD PTR [eax+0x6e]
  418a9b:	in     al,0x3f
  418a9d:	popa   
  418a9e:	jb     0x418a8b
  418aa0:	add    al,0x6b
  418aa2:	outs   dx,BYTE PTR ds:[esi]
  418aa3:	lods   al,BYTE PTR ds:[esi]
  418aa4:	inc    eax
  418aa5:	outs   dx,BYTE PTR ds:[esi]
  418aa6:	imul   edi,DWORD PTR [esi-0x439e8c22],0x31550005
  418ab0:	mov    ds,WORD PTR [esi+ebp*2]
  418ab3:	cmp    BYTE PTR [esp+0x6c],0x85
  418ab8:	xor    DWORD PTR ds:0x2a965872,0x0
  418abf:	ins    DWORD PTR es:[edi],dx
  418ac0:	mov    DWORD PTR [esi],esi
  418ac2:	jo     0x418b11
  418ac4:	xchg   ecx,eax
  418ac5:	sub    al,0x4e
  418ac7:	add    BYTE PTR [eax+0x3d],dl
  418aca:	daa    
  418acb:	add    BYTE PTR [ebp-0x50],ch
  418ace:	add    DWORD PTR [eax],eax
  418ad0:	xor    DWORD PTR [eax-0x4fceffff],esi
  418ad6:	fbld   TBYTE PTR [edx+0x39]
  418ad9:	push   ebp
  418ada:	add    al,0x51
  418adc:	push   ds
  418add:	dec    esi
  418ade:	cmp    BYTE PTR [ebp+0x10],dh
  418ae1:	loop   0x418b09
  418ae3:	pop    esp
  418ae4:	push   es
  418ae5:	dec    ecx
  418ae6:	and    dl,BYTE PTR [edx-0x10]
  418ae9:	loope  0x418aee
  418aeb:	ins    DWORD PTR es:[edi],dx
  418aec:	add    DWORD PTR ds:0xb0300022,ecx
  418af2:	add    DWORD PTR [eax+0x6e360d0a],eax
  418af8:	or     al,0xfc
  418afa:	hlt    
  418afb:	xor    DWORD PTR [edi],ebx
  418afd:	or     al,0x20
  418aff:	ins    BYTE PTR es:[edi],dx
  418b00:	xor    DWORD PTR [edi],eax
  418b02:	pop    eax
  418b03:	push   ecx
  418b04:	test   BYTE PTR [eax+edi*1],0x3f
  418b08:	rol    bl,cl
  418b0a:	sbb    al,0x76
  418b0c:	aam    0x72
  418b0e:	and    ch,BYTE PTR [esi-0x3e]
  418b11:	into   
  418b12:	sbb    eax,0x36cce263
  418b17:	jno    0x418ae1
  418b19:	mov    esi,0xb295471f
  418b1e:	push   ecx
  418b1f:	jb     0x418ab7
  418b21:	iret   
  418b22:	sub    BYTE PTR [ecx-0x5e],dh
  418b25:	imul   esp,DWORD PTR ds:0xba098654,0x18800028
  418b2f:	nop
  418b30:	and    dl,BYTE PTR [edi+0x31038b52]
  418b36:	xor    eax,DWORD PTR [edi+esi*1-0x96fe6aa]
  418b3d:	and    bl,dh
  418b3f:	sbb    BYTE PTR [edi],0x55
  418b42:	or     DWORD PTR [ebp+0x774a6528],esp
  418b48:	sbb    al,0x73
  418b4a:	push   ds
  418b4b:	dec    ebp
  418b4c:	sub    dl,BYTE PTR [edx+0x17]
  418b4f:	and    eax,0xe72e5236
  418b54:	inc    ecx
  418b55:	push   edx
  418b56:	sbb    eax,0x17523534
  418b5b:	sub    al,0x22
  418b5d:	and    dh,BYTE PTR [esi]
  418b5f:	out    0x3,eax
  418b61:	adc    al,0x35
  418b63:	dec    esp
  418b64:	cmc    
  418b65:	pusha  
  418b66:	repz inc edx
  418b68:	and    BYTE PTR ds:0x14383a09,al
  418b6e:	push   esp
  418b6f:	pop    ss
  418b70:	daa    
  418b71:	pop    ss
  418b72:	cmp    BYTE PTR [ebx],bl
  418b74:	and    DWORD PTR [ebx],eax
  418b76:	sub    al,BYTE PTR [esi]
  418b78:	daa    
  418b79:	xor    DWORD PTR [ecx],ecx
  418b7b:	or     BYTE PTR [eax],ch
  418b7d:	out    0x29,eax
  418b7f:	neg    DWORD PTR [edx]
  418b81:	and    bh,dl
  418b83:	les    esp,FWORD PTR [edi]
  418b85:	int    0x34
  418b87:	out    0x42,eax
  418b89:	lds    esi,FWORD PTR [esi+edx*8]
  418b8c:	and    al,0xee
  418b8e:	sbb    al,0xc4
  418b90:	inc    edx
  418b91:	add    bh,dl
  418b93:	sub    al,0xa0
  418b95:	and    esi,edx
  418b97:	sbb    al,0xc0
  418b99:	and    al,ch
  418b9b:	xor    ecx,eax
  418b9d:	xor    BYTE PTR es:[edx],0xc3
  418ba1:	add    esi,DWORD PTR [eax+0x31]
  418ba4:	add    ah,cl
  418ba6:	push   ebp
  418ba7:	xor    dl,BYTE PTR [esi+edi*4+0x35]
  418bab:	sub    BYTE PTR [esi-0x4c],ch
  418bae:	push   edi
  418baf:	xor    BYTE PTR [edx-0x7c],ah
  418bb2:	cmp    al,0x1a
  418bb4:	push   0x46094280
  418bb9:	fwait
  418bba:	dec    edi
  418bbb:	sub    BYTE PTR [ecx-0x70],dl
  418bbe:	push   ss
  418bbf:	or     DWORD PTR [ecx+0x7b],eax
  418bc2:	cvtps2pi mm0,QWORD PTR [ebx-0x79]
  418bc6:	daa    
  418bc7:	xor    BYTE PTR [ebx+0x7b],ah
  418bca:	adc    ebx,DWORD PTR ds:0x4a352863
  418bd0:	jb     0x418c16
  418bd2:	sbb    DWORD PTR [ebx+0x72],ecx
  418bd5:	dec    esp
  418bd6:	push   ss
  418bd7:	or     DWORD PTR [ecx+0x5b],eax
  418bda:	or     bl,BYTE PTR [ecx]
  418bdc:	je     0x418c0c
  418bde:	push   esi
  418bdf:	sbb    eax,0x174e3a53
  418be4:	dec    ecx
  418be5:	dec    esp
  418be6:	dec    edx
  418be7:	or     DWORD PTR [ecx+0x3b],eax
  418bea:	dec    edx
  418beb:	sbb    DWORD PTR [esp+ebp*1+0x5d],esi
  418bef:	sbb    DWORD PTR [ebp+0x1b],ebp
  418bf2:	dec    ecx
  418bf3:	push   edx
  418bf4:	arpl   WORD PTR [eax],dx
  418bf6:	add    BYTE PTR ds:0x3d10724a,dh
  418bfc:	sbb    eax,0x1d240c44
  418c01:	jb     0x418c11
  418c03:	sbb    dl,BYTE PTR [edx+0x63]
  418c06:	lock xor cl,BYTE PTR [edx+0x72]
  418c0a:	lock and bl,BYTE PTR ds:0x282ecc52
  418c11:	pop    edi
  418c12:	fimul  DWORD PTR [edi]
  418c14:	dec    edx
  418c15:	ins    DWORD PTR es:[edi],dx
  418c16:	mov    DWORD PTR [esi],0x32d57828
  418c1c:	aaa    
  418c1d:	arpl   WORD PTR [eax],ax
  418c1f:	out    dx,al
  418c20:	jmp    0x418c93
  418c22:	je     0x418be0
  418c24:	jmp    0xf135f177
  418c29:	dec    DWORD PTR [esi-0x28]
  418c2c:	jmp    0x418c9b
  418c2e:	push   eax
  418c2f:	stos   BYTE PTR es:[edi],al
  418c30:	jmp    0xddecf193
  418c35:	push   ebx
  418c36:	outs   dx,DWORD PTR ds:[esi]
  418c37:	mov    bl,0xeb
  418c39:	ins    DWORD PTR es:[edi],dx
  418c3a:	add    cl,dl
  418c3c:	add    esi,DWORD PTR [eax+0x65]
  418c3f:	push   0xffffffdd
  418c41:	push   0x6e
  418c43:	mov    ecx,0xb74c60da
  418c48:	icebp  
  418c49:	bound  esp,QWORD PTR [ebp-0x54]
  418c4c:	dec    ecx
  418c4d:	outs   dx,BYTE PTR ds:[esi]
  418c4e:	push   ebp
  418c4f:	imul   esi,eax,0x71
  418c52:	add    BYTE PTR [edi],cl
  418c54:	lock jae 0x418cab
  418c57:	ja     0x418c57
  418c59:	pusha  
  418c5a:	outs   dx,BYTE PTR ds:[esi]
  418c5b:	add    BYTE PTR [ecx],dl
  418c5d:	add    esp,DWORD PTR [esi+0x6f]
  418c60:	push   0xffffffe8
  418c62:	pop    esp
  418c63:	je     0x418c66
  418c65:	add    ch,BYTE PTR [esi+0x0]
  418c68:	dec    ebx
  418c69:	add    ch,BYTE PTR [esi+0x76]
  418c6c:	in     eax,dx
  418c6d:	(bad)  
  418c6e:	jae    0x418cc3
  418c70:	and    ecx,esi
  418c72:	push   ebx
  418c73:	outs   dx,DWORD PTR ds:[esi]
  418c74:	dec    ebx
  418c75:	loope  0x418ce8
  418c77:	imul   esi,DWORD PTR [esi],0x2c694eea
  418c7d:	dec    esp
  418c7e:	add    BYTE PTR [edi+eax*2-0x16],cl
  418c82:	push   0x6e
  418c84:	cmp    eax,0x97260d6
  418c89:	or     eax,0xff576f4c
  418c8e:	jo     0x418d00
  418c90:	mov    al,bl
  418c92:	fs jbe 0x418cf6
  418c95:	add    ah,BYTE PTR [ecx+0x67]
  418c98:	xor    ebp,edx
  418c9a:	push   ebx
  418c9b:	pop    edi
  418c9c:	lds    edi,FWORD PTR [eax+ebp*1+0x2571313f]
  418ca3:	push   0xffffff9c
  418ca5:	pop    edi
  418ca6:	xor    eax,0x28c78e54
  418cab:	outs   dx,BYTE PTR ds:[esi]
  418cac:	sbb    DWORD PTR [esi+0x1c],0x287c9876
  418cb3:	mov    WORD PTR gs:[edi+0x1],?
  418cb7:	add    BYTE PTR [edx+0x7d702c7e],dl
  418cbd:	mov    edi,0x55002def
  418cc2:	jl     0x418ce1
  418cc4:	add    BYTE PTR [edx+0x1e],dh
  418cc7:	sub    al,0x70
  418cc9:	test   DWORD PTR gs:[ebx],ebx
  418ccc:	jo     0x418d31
  418cce:	and    esi,DWORD PTR ds:0x48445263
  418cd4:	pop    edi
  418cd5:	cmp    eax,0x54410451
  418cda:	cmp    BYTE PTR ds:[ebp+0x41],cl
  418cde:	dec    ebp
  418cdf:	push   ds
  418ce0:	push   ecx
  418ce1:	sub    bh,bl
  418ce3:	aaa    
  418ce4:	arpl   WORD PTR [edi+edi*8],dx
  418ce7:	aaa    
  418ce8:	ins    DWORD PTR es:[edi],dx
  418ce9:	and    edx,DWORD PTR [ebp+0x43]
  418cec:	add    dl,dh
  418cee:	dec    esp
  418cef:	xor    dh,BYTE PTR [esp+esi*8-0x7]
  418cf3:	ss imul esi,edx,0xc
  418cf7:	xor    dh,BYTE PTR [eax+ecx*1+0x12]
  418cfb:	sbb    esp,DWORD PTR [ecx+0x10]
  418cfe:	cld    
  418cff:	es jno 0x418cfa
  418d02:	stc    
  418d03:	push   eax
  418d04:	je     0x418cdc
  418d06:	popf   
  418d07:	sub    BYTE PTR [eax],al
  418d09:	repnz adc al,0x32
  418d0c:	je     0x418d00
  418d0e:	mov    ds:0x8d4711e,eax
  418d13:	mov    edx,0xc416d437
  418d18:	add    esi,eax
  418d1a:	push   ss
  418d1b:	shl    BYTE PTR [ebx],1
  418d1d:	mov    ebp,0xa234ca47
  418d22:	xor    bh,BYTE PTR [ecx+0x26700028]
  418d28:	mov    ecx,0xc0279637
  418d2d:	and    dh,BYTE PTR [esi+0x15]
  418d30:	les    edx,FWORD PTR [ebx-0x7d]
  418d33:	xor    bl,BYTE PTR [ebp-0x4dd982dc]
  418d39:	sub    BYTE PTR [esi-0x7fdf18f7],al
  418d3f:	xor    bh,BYTE PTR [ebp-0x18d2a2d9]
  418d45:	inc    eax
  418d46:	pusha  
  418d47:	xor    ah,BYTE PTR [esi-0x79b39ad8]
  418d4d:	and    BYTE PTR [ecx+0x30],ah
  418d50:	jge    0x418d7a
  418d52:	pop    edi
  418d53:	adc    eax,0x313d2337
  418d58:	sub    BYTE PTR [ecx+esi*1],al
  418d5b:	sbb    DWORD PTR [edx+0x38],ebx
  418d5e:	inc    esp
  418d5f:	sbb    eax,DWORD PTR [ecx+eiz*1+0x5f]
  418d63:	and    eax,0x39312053
  418d68:	sbb    bh,BYTE PTR [eax]
  418d6a:	or     al,0x1b
  418d6c:	dec    esp
  418d6d:	inc    ecx
  418d6e:	and    esp,DWORD PTR [esi]
  418d70:	dec    eax
  418d71:	cmp    BYTE PTR [edx],dl
  418d73:	push   edx
  418d74:	adc    eax,0xd29fd31
  418d79:	and    DWORD PTR [edx],edx
  418d7b:	or     edi,esp
  418d7d:	add    esi,DWORD PTR [ecx]
  418d7f:	or     edi,esp
  418d81:	add    esi,DWORD PTR [ecx]
  418d83:	or     edi,esp
  418d85:	add    esi,DWORD PTR [ecx]
  418d87:	or     edi,esp
  418d89:	add    eax,DWORD PTR [eax]
  418d8b:	xor    DWORD PTR [ecx],ecx
  418d8d:	add    cl,ch
  418d8f:	xor    cl,BYTE PTR [ecx]
  418d91:	add    cl,ch
  418d93:	xor    cl,BYTE PTR [ecx]
  418d95:	add    cl,ch
  418d97:	xor    cl,BYTE PTR [ecx]
  418d99:	add    cl,ch
  418d9b:	xor    cl,BYTE PTR [ecx]
  418d9d:	add    cl,ch
  418d9f:	xor    cl,BYTE PTR [ecx]
  418da1:	add    cl,ch
  418da3:	xor    cl,BYTE PTR [ecx]
  418da5:	add    cl,ch
  418da7:	xor    cl,BYTE PTR [ecx]
  418da9:	add    cl,ch
  418dab:	xor    cl,BYTE PTR [ecx]
  418dad:	add    cl,ch
  418daf:	xor    cl,BYTE PTR [ecx]
  418db1:	add    cl,ch
  418db3:	xor    cl,BYTE PTR [ecx]
  418db5:	add    cl,ch
  418db7:	xor    cl,BYTE PTR [ecx]
  418db9:	add    cl,ch
  418dbb:	xor    cl,BYTE PTR [ecx]
  418dbd:	add    cl,ch
  418dbf:	xor    cl,BYTE PTR [ecx]
  418dc1:	add    cl,ch
  418dc3:	xor    cl,BYTE PTR [ecx]
  418dc5:	add    cl,ch
  418dc7:	xor    cl,BYTE PTR [ecx]
  418dc9:	add    cl,ch
  418dcb:	xor    cl,BYTE PTR [ecx]
  418dcd:	add    cl,ch
  418dcf:	xor    cl,BYTE PTR [ecx]
  418dd1:	add    cl,ch
  418dd3:	xor    cl,BYTE PTR [ecx]
  418dd5:	add    cl,ch
  418dd7:	xor    cl,BYTE PTR [ecx]
  418dd9:	add    cl,ch
  418ddb:	xor    cl,BYTE PTR [ecx]
  418ddd:	add    cl,ch
  418ddf:	xor    cl,BYTE PTR [ecx]
  418de1:	add    cl,ch
  418de3:	xor    cl,BYTE PTR [ecx]
  418de5:	add    cl,ch
  418de7:	xor    cl,BYTE PTR [ecx]
  418de9:	add    cl,ch
  418deb:	xor    cl,BYTE PTR [ecx]
  418ded:	add    cl,ch
  418def:	add    BYTE PTR [edx],dh
  418df1:	or     DWORD PTR [eax],eax
  418df3:	jmp    0x15a4bf39
  418df8:	push   ecx
  418df9:	fidiv  DWORD PTR [ecx]
  418dfb:	iret   
  418dfc:	push   esi
  418dfd:	sub    eax,0x50e1e96c
  418e02:	inc    ebp
  418e03:	add    al,0x29
  418e05:	inc    edi
  418e06:	ins    DWORD PTR es:[edi],dx
  418e07:	add    BYTE PTR [ecx+esi*8],bh
  418e0a:	pusha  
  418e0b:	jb     0x418e45
  418e0d:	in     al,dx
  418e0e:	jae    0x418e78
  418e10:	or     DWORD PTR ds:0xb580000,eax
  418e16:	add    BYTE PTR [edi],cl
  418e18:	jl     0x418e64
  418e1a:	add    BYTE PTR [esp+ecx*4],ah
  418e1d:	dec    edx
  418e1e:	add    BYTE PTR [esp+ecx*4],dh
  418e21:	dec    edx
  418e22:	add    BYTE PTR [edx-0x34],cl
  418e25:	dec    ebx
  418e26:	add    BYTE PTR [eax-0x24],bl
  418e29:	dec    ebx
  418e2a:	add    BYTE PTR [eax-0x34],ch
  418e2d:	dec    ebx
  418e2e:	add    BYTE PTR [eax-0x34],bh
  418e31:	dec    ebx
  418e32:	add    BYTE PTR [ebp-0x5bffb454],cl
  418e38:	mov    esp,0xccb8004b
  418e3d:	dec    ebx
  418e3e:	add    cl,dl
  418e40:	int3   
  418e41:	dec    ebx
  418e42:	add    ch,dh
  418e44:	int3   
  418e45:	dec    ebx
  418e46:	add    BYTE PTR [edx],dl
  418e48:	popf   
  418e49:	dec    ebx
  418e4a:	add    BYTE PTR [eax],al
  418e4c:	enter  0xa,0x1
  418e50:	enter  0x800a,0x5
  418e54:	add    al,bl
  418e56:	or     al,BYTE PTR [eax]
  418e58:	dec    ebp
  418e59:	push   ecx
  418e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e5b:	inc    ecx
  418e5c:	outs   dx,DWORD PTR ds:[esi]
  418e5d:	imul   ebx,eax,0x68
  418e60:	outs   dx,BYTE PTR gs:[esi]
  418e62:	fldcw  WORD PTR [esi+0x0]
  418e65:	cdq    
  418e66:	or     al,BYTE PTR [eax]
  418e68:	adc    BYTE PTR [edx+0x4900000a],0xd5
  418e6f:	outs   dx,DWORD PTR ds:[esi]
  418e70:	inc    esp
  418e71:	jmp    0x9941eb4e
  418e76:	or     al,BYTE PTR [eax]
  418e78:	sub    BYTE PTR [eax*1+0x24c0000],0x5f
  418e80:	popa   
  418e81:	xor    DWORD PTR [esp+eiz*8],eax
  418e84:	ds loope 0x418e86
  418e87:	aas    
  418e88:	pop    edi
  418e89:	fst    QWORD PTR [eax]
  418e8b:	add    al,0xff
  418e8d:	pop    esi
  418e8e:	mov    al,0x81
  418e90:	and    BYTE PTR [ecx],dh
  418e92:	mov    al,0x1
  418e94:	inc    ecx
  418e95:	rcl    BYTE PTR [edx],1
  418e97:	sbb    al,0x63
  418e99:	xor    DWORD PTR [ecx+0x11b10001],esi
  418e9f:	add    al,0x0
  418ea1:	xor    DWORD PTR [ebx+0x1a],esi
  418ea4:	ins    DWORD PTR es:[edi],dx
  418ea5:	call   0x1b1:0x317120c9
  418eac:	add    BYTE PTR [ecx+0x31000411],dh
  418eb2:	push   0x5f85711c
  418eb7:	xor    esi,DWORD PTR [edi+0x0]
  418eba:	xor    DWORD PTR [edx-0x5b4effff],esi
  418ec0:	add    DWORD PTR [eax],eax
  418ec2:	xor    DWORD PTR [ebp+0x2c],esp
  418ec5:	and    BYTE PTR [ebp+0x1f],dh
  418ec8:	es jae 0x418f1f
  418ecb:	lea    edx,[edi]
  418ecd:	je     0x418f31
  418ecf:	mov    al,0x3
  418ed1:	add    BYTE PTR [ecx],dh
  418ed3:	xor    ch,ah
  418ed5:	dec    esi
  418ed7:	scas   eax,DWORD PTR es:[edi]
  418ed8:	inc    esi
  418ed9:	ins    DWORD PTR es:[edi],dx
  418eda:	push   esp
  418edb:	xor    eax,0xf1116e19
  418ee0:	xor    esi,DWORD PTR [eax+0x6d]
  418ee3:	push   ecx
  418ee4:	xor    BYTE PTR [edi+0x31],bl
  418ee7:	mov    cl,0x1
  418ee9:	add    BYTE PTR [ecx+0x3100040e],dh
  418eef:	in     eax,dx
  418ef0:	sub    ah,BYTE PTR [eax]
  418ef2:	add    DWORD PTR [ecx+0x25],ecx
  418ef5:	je     0x418efb
  418ef7:	loop   0x418f17
  418ef9:	jno    0x418f2c
  418efb:	or     ecx,ebp
  418efd:	add    esi,DWORD PTR [ecx]
  418eff:	mov    ebp,ecx
  418f01:	add    esi,DWORD PTR [ecx]
  418f03:	or     DWORD PTR [edx],ebp
  418f05:	sbb    ebx,edx
  418f07:	sub    edi,esi
  418f09:	sbb    DWORD PTR [ecx],edx
  418f0b:	inc    ebp
  418f0c:	push   ss
  418f0d:	daa    
  418f0e:	loop   0x418f3b
  418f10:	add    al,0x1a
  418f12:	fstp   QWORD PTR [ecx]
  418f14:	out    0x5,eax
  418f16:	xor    DWORD PTR [ecx],ecx
  418f18:	fiadd  DWORD PTR [bp-0x63]
  418f1c:	out    0x46,eax
  418f1e:	add    ah,cl
  418f20:	sub    ecx,esp
  418f22:	sbb    al,bh
  418f24:	call   0x32dbaed0
  418f29:	mov    ebp,0xb915a01c
  418f2e:	and    al,0xa5
  418f30:	xor    dh,BYTE PTR [ebp-0x39caaee0]
  418f36:	sbb    bl,BYTE PTR [ebp+0x3104e718]
  418f3c:	or     DWORD PTR [edi-0xd],esp
  418f3f:	(bad)  
  418f40:	pushf  
  418f41:	out    0x44,eax
  418f43:	lea    ebp,[esi]
  418f45:	sbb    BYTE PTR [ecx],0x56
  418f48:	sbb    BYTE PTR [ebx-0x6fea79cb],dl
  418f4e:	xor    DWORD PTR [edx-0x17],edx
  418f51:	xchg   edx,eax
  418f52:	sbb    al,BYTE PTR [ebp+ebp*1+0x7a]
  418f56:	add    ecx,esi
  418f58:	pushf  
  418f59:	out    0x83,eax
  418f5b:	xor    cl,BYTE PTR [ecx]
  418f5d:	out    0x3,eax
  418f5f:	popa   
  418f60:	es pop ecx
  418f62:	xor    eax,0x18482b44
  418f67:	xor    DWORD PTR [eax],edi
  418f69:	and    bl,BYTE PTR ds:0x12364814
  418f70:	cmp    eax,0x17101b2c
  418f75:	add    BYTE PTR [esi+0x44],al
  418f78:	cs xor ax,0x35f9
  418f7d:	addr16 pop ss
  418f7f:	push   ecx
  418f80:	cs jne 0x418f9d
  418f83:	add    cl,ch
  418f85:	dec    ecx
  418f86:	jae    0x418fa3
  418f88:	daa    
  418f89:	sub    BYTE PTR [esi+0x15],ch
  418f8c:	add    ebp,DWORD PTR [eax]
  418f8e:	jb     0x418f8a
  418f90:	cmp    ebp,DWORD PTR [esi]
  418f92:	outs   dx,BYTE PTR ds:[esi]
  418f93:	sbb    eax,0x5702116
  418f98:	sub    BYTE PTR [edi],dl
  418f9a:	arpl   bx,di
  418f9c:	out    dx,al
  418f9d:	cmp    DWORD PTR [eax-0x34],ebp
  418fa0:	es sub eax,0x2d19a720
  418fa6:	fs int3 
  418fa8:	sbb    al,BYTE PTR fs:[eax]
  418fab:	les    ebx,FWORD PTR [edx+0x19]
  418fae:	ins    BYTE PTR es:[edi],dx
  418faf:	(bad)  
  418fb0:	sub    BYTE PTR fs:[edx+0xf],dh
  418fb4:	and    DWORD PTR ss:[ebx-0x17],esp
  418fb8:	gs lock cs cld 
  418fbc:	pop    ss
  418fbd:	out    dx,eax
  418fbe:	cs loope 0x418ff3
  418fc1:	or     DWORD PTR [eax],eax
  418fc3:	jmp    0xa0a4c9fa
  418fc8:	inc    edi
  418fc9:	sbb    DWORD PTR [ebx-0x65],esp
  418fcc:	sbb    eax,0xe886e2e
  418fd1:	sub    BYTE PTR [eax+0x7b],dl
  418fd4:	cmp    edx,DWORD PTR [ebx]
  418fd6:	test   DWORD PTR [bx],ebp
  418fd9:	es arpl cx,bp
  418fdc:	pop    ebp
  418fdd:	sub    BYTE PTR [edx+ecx*2+0x17],dl
  418fe1:	cmp    DWORD PTR [edx+0x50],esi
  418fe4:	add    esp,DWORD PTR [esp+ebp*2]
  418fe7:	dec    esp
  418fe8:	add    BYTE PTR [eax+0x28],dl
  418feb:	add    BYTE PTR [edx],bh
  418fed:	inc    esi
  418fee:	dec    edx
  418fef:	push   0x62fee900
  418ff4:	gs inc esi
  418ff6:	add    dh,BYTE PTR [ecx+ebp*2-0x2]
  418ffa:	out    dx,eax
  418ffb:	dec    edi
  418ffc:	jb     0x418fef
  418ffe:	(bad)  
  418fff:	fs ins BYTE PTR es:[edi],dx
  419001:	sub    eax,0x3b0060ea
  419006:	cld    
  419007:	ds jb  0x419047
  41900a:	call   0x25df582
  41900f:	addr16 gs inc esi
  419012:	xor    eax,0xfe5e6972
  419017:	imul   esp,DWORD PTR [ebp+0x3f],0xfffffffc
  41901b:	call   DWORD PTR [edx+0x2d]
  41901e:	inc    ebx
  41901f:	pop    ebp
  419020:	arpl   WORD PTR [ebx-0x16],sp
  419023:	outs   dx,DWORD PTR ds:[esi]
  419024:	push   eax
  419025:	pop    edx
  419026:	(bad)  
  419027:	jne    0x419092
  419029:	hlt    
  41902a:	sti    
  41902b:	bound  esp,QWORD PTR [ebp+0x18]
  41902e:	ss popa 
  419030:	push   edx
  419031:	in     eax,dx
  419032:	aad    0x73
  419034:	outs   dx,DWORD PTR ds:[esi]
  419035:	(bad)  
  419037:	dec    edi
  419038:	jb     0x41902b
  41903a:	fsub   DWORD PTR [esp+ebp*2-0x13]
  41903e:	jmp    0xfbfc90a3
  419043:	inc    esp
  419044:	outs   dx,BYTE PTR ds:[esi]
  419045:	stos   DWORD PTR es:[edi],eax
  419046:	aam    0x60
  419048:	popa   
  419049:	retf   
  41904a:	sti    
  41904b:	dec    esp
  41904c:	jne    0x41904e
  41904e:	addr16 jmp 0x6975:0xff5a505c
  419056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419057:	sti    
  419058:	bound  esp,QWORD PTR [ebp-0x28]
  41905b:	xor    eax,0xd54b4161
  419060:	fs addr16 xor ax,0x6972
  419066:	gs in  al,0x71
  419069:	jns    0x41909c
  41906b:	fcom   QWORD PTR [ecx+ebp*2]
  41906e:	or     al,0xda
  419070:	push   ebx
  419071:	jb     0x41907b
  419073:	ficomp DWORD PTR [edx]
  419075:	ins    BYTE PTR es:[edi],dx
  419076:	or     al,0x43
  419078:	pop    ds
  419079:	add    BYTE PTR [ecx],dh
  41907b:	add    BYTE PTR ds:0xdf0fdd51,dh
  419081:	jo     0x4190d4
  419083:	fmul   DWORD PTR [edi+0x54]
  419086:	loope  0x419052
  419088:	hlt    
  419089:	sub    eax,0x47f7a521
  41908e:	(bad)  
  41908f:	(bad)  
  419090:	das    
  419091:	cmp    dl,BYTE PTR [ecx]
  419093:	int    0x32
  419095:	or     ebp,DWORD PTR [ebx]
  419097:	icebp  
  419098:	and    BYTE PTR [ecx-0x2c],ah
  41909b:	lahf   
  41909c:	sub    eax,0xd6c6113a
  4190a1:	sub    DWORD PTR [esi+edx*4],ebp
  4190a4:	inc    esp
  4190a5:	popa   
  4190a6:	rol    ah,cl
  4190a8:	xor    DWORD PTR [esp+ebx*2+0x6d],esi
  4190ac:	adc    esp,DWORD PTR [ecx-0x6a]
  4190af:	les    ebx,FWORD PTR [esi+ebp*2]
  4190b2:	add    BYTE PTR [esi-0x72991bfa],dl
  4190b8:	lds    edx,FWORD PTR [ebx]
  4190ba:	je     0x419054
  4190bc:	pop    esp
  4190bd:	sub    al,0x2c
  4190bf:	push   ecx
  4190c0:	push   es
  4190c1:	jmp    0xf901cd34
  4190c6:	or     DWORD PTR [edx-0x75],esi
  4190c9:	adc    esi,DWORD PTR [esp+edx*2-0x7e]
  4190cd:	sub    eax,0x1385752b
  4190d2:	gs gs js 0x4190bd
  4190d6:	pop    ds
  4190d7:	or     al,0x8c
  4190d9:	xor    BYTE PTR [ebx],cl
  4190db:	cmp    ebp,DWORD PTR [edi+0x16]
  4190de:	outs   dx,BYTE PTR ds:[esi]
  4190df:	push   edi
  4190e0:	test   DWORD PTR [edx],esp
  4190e2:	je     0x41912c
  4190e4:	or     DWORD PTR [esi+0x16],edx
  4190e7:	sti    
  4190e8:	call   0x165da936
  4190ed:	dec    esp
  4190ee:	stc    
  4190ef:	cmp    BYTE PTR [esi+0x3e],al
  4190f2:	push   ss
  4190f3:	and    eax,0x4a305524
  4190f8:	xor    eax,0xdf123440
  4190fd:	push   es
  4190fe:	and    eax,0x1d3b1901
  419103:	adc    BYTE PTR [eax],ch
  419105:	sbb    ebx,DWORD PTR ds:0x16ce2b04
  41910b:	rcl    BYTE PTR [esp+ecx*1],1
  41910e:	xor    BYTE PTR [edx],bl
  419110:	push   ss
  419111:	adc    esi,DWORD PTR [edx]
  419113:	shl    BYTE PTR [edi],cl
  419115:	adc    al,0xf9
  419117:	add    BYTE PTR [eax],ch
  419119:	inc    esi
  41911a:	push   cs
  41911b:	push   ss
  41911c:	lds    esp,FWORD PTR [ebx]
  41911e:	add    eax,0xfd441a30
  419123:	and    cl,ah
  419125:	and    al,0xd0
  419127:	adc    eax,0x2206decc
  41912c:	xchg   esi,eax
  41912d:	daa    
  41912e:	enter  0x9e31,0x6
  419132:	loope  0x419184
  419134:	mov    al,ds:0x57d8b92e
  419139:	xor    ah,al
  41913b:	adc    eax,0x3906d385
  419140:	xchg   esp,eax
  419141:	adc    eax,eax
  419143:	pop    ss
  419144:	lea    ebp,[edx]
  419146:	(bad)  
  419147:	out    dx,eax
  419148:	inc    esp
  419149:	fld    st(6)
  41914b:	fist   DWORD PTR [ecx+0x28]
  41914e:	test   BYTE PTR [ebx],dh
  419150:	xchg   BYTE PTR ds:0x2e4d2180,bl
  419156:	ret    0x6be3
  419159:	cmp    al,0xb0
  41915b:	inc    eax
  41915c:	adc    esi,ebx
  41915e:	inc    esi
  419160:	ret    0x1fd1
  419163:	xchg   esi,eax
  419164:	sbb    eax,0x4566427
  419169:	sbb    ah,BYTE PTR [eax]
  41916b:	and    BYTE PTR [ebp-0x601cf511],bl
  419171:	add    al,BYTE PTR [eax]
  419173:	sub    al,BYTE PTR [edi+eiz*1+0x74]
  419177:	dec    esp
  419178:	aas    
  419179:	sbb    eax,0x2e002d2b
  41917e:	daa    
  41917f:	gs cmp eax,0x1cffd325
  419185:	and    al,0x2a
  419187:	pop    edi
  419188:	sbb    eax,0xe36e261a
  41918d:	xor    cl,BYTE PTR [esi+0x43]
  419190:	cmp    eax,0xc970eb4d
  419195:	sbb    bh,BYTE PTR ds:0xe77c1954
  41919b:	sub    eax,0x480247b9
  4191a0:	push   es
  4191a1:	add    BYTE PTR ds:0x195fc93a,bl
  4191a7:	or     esi,ebx
  4191a9:	repz sub DWORD PTR [ecx-0x3c],esp
  4191ad:	bound  ebx,QWORD PTR ds:0xe50b093a
  4191b3:	sub    esp,ebx
  4191b5:	sbb    bh,dl
  4191b7:	pusha  
  4191b8:	retf   0x1937
  4191bb:	je     0x4191c9
  4191bd:	dec    esi
  4191be:	daa    
  4191bf:	popa   
  4191c0:	(bad)  
  4191c1:	xor    BYTE PTR es:[esi-0x3a],ch
  4191c5:	or     al,bh
  4191c7:	lea    dx,[edi]
  4191ca:	daa    
  4191cb:	je     0x41915d
  4191cd:	push   ds
  4191ce:	and    BYTE PTR [ecx+ecx*8],ch
  4191d1:	or     cl,dl
  4191d3:	outs   dx,BYTE PTR ds:[esi]
  4191d4:	int3   
  4191d5:	loop   0x4191d9
  4191d7:	or     al,BYTE PTR [eax]
  4191d9:	mov    edi,esp
  4191db:	ins    DWORD PTR es:[edi],dx
  4191dc:	outs   dx,BYTE PTR ds:[esi]
  4191dd:	mov    ch,0xe8
  4191df:	jae    0x41924a
  4191e1:	add    BYTE PTR [edi-0x54dfc603],ch
  4191e7:	jmp    FWORD PTR [edx+0x73]
  4191ea:	mov    al,gs:0xf80b5507
  4191f0:	jno    0x41921f
  4191f2:	pop    ecx
  4191f3:	mul    BYTE PTR [eax+0x6e]
  4191f6:	add    al,0xa3
  4191f8:	sbb    eax,0x64e2ff4d
  4191fd:	ins    BYTE PTR es:[edi],dx
  4191fe:	cld    
  4191ff:	jmp    0x41922b
  419201:	xor    al,0x2e
  419203:	popf   
  419204:	sbb    eax,0x68fdeb28
  419209:	jo     0x419234
  41920b:	fldenv [edx+eiz*2+0x3c]
  41920f:	clc    
  419210:	and    BYTE PTR ss:0x6845453a,cl
  419217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419218:	sub    esi,DWORD PTR [eax]
  41921a:	jae    0x4191c7
  41921c:	push   esp
  41921d:	imul   edi,DWORD PTR [esi],0x4b776ae9
  419223:	stos   DWORD PTR es:[edi],eax
  419224:	cmp    BYTE PTR ss:[ecx-0x62],dh
  419228:	pop    es
  419229:	or     eax,0x2e0b42
  41922e:	ds mov edi,0xbf325bfd
  419234:	daa    
  419235:	add    BYTE PTR [edx],dh
  419237:	mov    edi,0x45e00027
  41923c:	inc    ebp
  41923d:	inc    esp
  41923e:	sbb    dl,ah
  419240:	and    BYTE PTR [eax],dh
  419242:	add    BYTE PTR [ebx+0x29],al
  419245:	and    eax,0x55a6f800
  41924a:	sub    eax,0x58319ae5
  41924f:	std    
  419250:	mov    bh,0x2d
  419252:	xor    dh,BYTE PTR [ecx]
  419254:	pop    eax
  419255:	fisubr WORD PTR [edi]
  419257:	and    ebx,DWORD PTR [eax-0x2a]
  41925a:	and    ah,BYTE PTR [ecx]
  41925c:	push   edx
  41925d:	dec    ecx
  41925e:	and    eax,DWORD PTR [ecx]
  419260:	push   edx
  419261:	dec    ecx
  419262:	and    eax,DWORD PTR [ecx]
  419264:	push   edx
  419265:	dec    ecx
  419266:	and    eax,DWORD PTR [ecx]
  419268:	push   edx
  419269:	dec    ecx
  41926a:	and    eax,DWORD PTR [ecx]
  41926c:	repnz cmp esp,DWORD PTR [ebx]
  41926f:	popa   
  419270:	repnz cmp edi,DWORD PTR [ebx+0x31]
  419274:	out    0x26,eax
  419276:	je     0x419267
  419278:	inc    eax
  419279:	sbb    BYTE PTR [edi+0x1f],ah
  41927c:	inc    ebp
  41927d:	xor    eax,0x26dc0277
  419282:	imul   edi,eax,0x4d
  419285:	sub    ch,BYTE PTR [ebp+0x31]
  419288:	dec    ebx
  419289:	daa    
  41928a:	jb     0x419293
  41928c:	add    eax,0xc6233130
  419291:	and    eax,0x4c9fd56c
  419296:	jno    0x41929e
  419298:	xchg   edi,eax
  419299:	sbb    dh,BYTE PTR [esi]
  41929b:	sbb    eax,0xd26d15f0
  4192a0:	or     al,0x15
  4192a2:	jno    0x4192d5
  4192a4:	repz xor BYTE PTR [esi-0x3b],ah
  4192a8:	sahf   
  4192a9:	and    al,0x72
  4192ab:	add    ah,cl
  4192ad:	retf   
  4192ae:	inc    edi
  4192af:	pop    edi
  4192b0:	mov    ds:0x9c6c3154,eax
  4192b5:	(bad)  
  4192b6:	sub    al,0x6e
  4192b8:	mov    ds:0x81544764,al
  4192bd:	ins    BYTE PTR es:[edi],dx
  4192be:	dec    ecx
  4192bf:	ins    DWORD PTR es:[edi],dx
  4192c0:	sbb    BYTE PTR [esi+edx*1+0x0],0x62
  4192c5:	iret   
  4192c6:	daa    
  4192c7:	je     0x41924f
  4192c9:	rcl    DWORD PTR [ebx],0x63
  4192cc:	push   ebp
  4192cd:	or     DWORD PTR [ebp-0x45249cdc],ebp
  4192d3:	xor    edx,DWORD PTR [ebp+0x1c]
  4192d6:	mov    gs,WORD PTR [edi+ecx*2]
  4192d9:	sbb    ch,BYTE PTR [ebx-0x5cc682b7]
  4192df:	dec    ebx
  4192e0:	pop    esp
  4192e1:	sbb    dh,BYTE PTR [ebx+0x16]
  4192e4:	xor    DWORD PTR [edx],edi
  4192e6:	xchg   BYTE PTR [ecx],ch
  4192e8:	inc    ebp
  4192e9:	push   ds
  4192ea:	mov    BYTE PTR ds:0x252d3552,dl
  4192f0:	and    ebp,ecx
  4192f2:	sub    esp,DWORD PTR ds:0x294e2817
  4192f8:	and    esi,DWORD PTR ds:0x2e223037
  4192fe:	push   eax
  4192ff:	xor    al,BYTE PTR [eax]
  419301:	xor    eax,0x34e13825
  419306:	pop    ds
  419307:	xor    eax,DWORD PTR [eax]
  419309:	sbb    eax,0x25e0043a
  41930e:	or     eax,0x27e40018
  419313:	sbb    DWORD PTR [ecx],ebp
  419315:	add    eax,0xfd16084f
  41931a:	cmp    DWORD PTR [eax],ecx
  41931c:	sbb    dl,dl
  41931e:	sub    al,0x2b
  419320:	sub    eax,0x2b0e24ee
  419325:	stc    
  419326:	pop    ds
  419327:	cli    
  419328:	pop    ss
  419329:	int3   
  41932a:	sbb    dh,al
  41932c:	aas    
  41932d:	out    dx,eax
  41932e:	cmp    al,0xb7
  419330:	dec    ebx
  419331:	pushf  
  419332:	sbb    bl,dl
  419334:	add    eax,DWORD PTR [eax-0x5be832dc]
  41933a:	sub    bl,cl
  41933c:	sub    BYTE PTR [ebp+0x4b],dh
  41933f:	enter  0x4315,0x35
  419343:	call   0x76cd:0x2e7f24
  41934a:	sub    al,0x5f
  41934c:	mov    ebp,0x90482e43
  419351:	inc    edi
  419352:	sbb    eax,0x35459b6d
  419357:	inc    esi
  419358:	mov    ebp,0x9a6d4122
  41935d:	or     DWORD PTR ds:[ecx-0x6a],edx
  419361:	sbb    BYTE PTR ds:0x281c8875,bl
  419367:	pop    esp
  419368:	scas   eax,DWORD PTR es:[edi]
  419369:	adc    eax,0xd9c2017
  41936e:	and    ebx,DWORD PTR [edi+0x4e]
  419371:	push   esi
  419372:	pop    ss
  419373:	pop    esp
  419374:	cmp    al,BYTE PTR [eax]
  419376:	push   edx
  419377:	sbb    esp,DWORD PTR [ebx+0x4d]
  41937a:	jmp    0x607ef2aa
  41937f:	cs dec eax
  419381:	push   eax
  419382:	and    al,0x1d
  419384:	ins    DWORD PTR es:[edi],dx
  419385:	cmp    ebp,DWORD PTR [edx]
  419387:	xor    eax,0x41451d46
  41938c:	ins    DWORD PTR es:[edi],dx
  41938d:	cmp    bl,BYTE PTR [ecx]
  41938f:	or     DWORD PTR [eax+0x8],edx
  419392:	inc    esp
  419393:	sbb    dh,BYTE PTR [ebp+0xe]
  419396:	aas    
  419397:	sub    eax,0x1a202100
  41939c:	je     0x4193bd
  41939e:	adc    ah,BYTE PTR [eax]
  4193a0:	arpl   cx,bp
  4193a2:	pop    es
  4193a3:	sbb    ah,BYTE PTR [ebx-0x5]
  4193a6:	xor    al,BYTE PTR [ebp+0x67]
  4193a9:	pop    es
  4193aa:	push   ss
  4193ab:	or     DWORD PTR [ebp+0xa],esi
  4193ae:	adc    eax,0x42dd6636
  4193b3:	jecxz  0x41941b
  4193b5:	iret   
  4193b6:	pop    ebx
  4193b7:	or     DWORD PTR [esi+ebp*4+0x6a],ebx
  4193bb:	dec    esp
  4193bc:	push   ecx
  4193bd:	popf   
  4193be:	outs   dx,DWORD PTR ds:[esi]
  4193bf:	aaa    
  4193c0:	add    BYTE PTR [eax],al
  4193c2:	rcr    ecx,0x6e
  4193c5:	je     0x4193c0
  4193c7:	jecxz  0x419434
  4193c9:	inc    esp
  4193ca:	icebp  
  4193cb:	std    
  4193cc:	inc    DWORD PTR [ebp-0x44]
  4193cf:	test   DWORD PTR [esi+ebp*2-0x3f],0xad6d5d39
  4193d7:	pop    es
  4193d8:	dec    edi
  4193d9:	outs   dx,DWORD PTR ds:[esi]
  4193da:	add    BYTE PTR [esi-0x459e8d05],ch
  4193e0:	jmp    0x6c6e:0xdea0475b
  4193e7:	lods   eax,DWORD PTR ds:[esi]
  4193e8:	std    
  4193e9:	pop    ebx
  4193ea:	push   edi
  4193eb:	mov    cl,0xd9
  4193ed:	arpl   WORD PTR [edi+0x3f],bp
  4193f0:	std    
  4193f1:	pop    ds
  4193f2:	inc    ebx
  4193f3:	pop    es
  4193f4:	in     al,0x68
  4193f6:	popa   
  4193f7:	mul    al
  4193f9:	pusha  
  4193fa:	jb     0x419384
  4193fc:	fsubr  QWORD PTR [edx+0x66]
  4193ff:	cld    
  419400:	icebp  
  419401:	pop    esp
  419402:	jb     0x419401
  419404:	dec    eax
  419405:	inc    ebx
  419406:	push   0x656bfde1
  41940b:	cmp    cl,BYTE PTR [ecx+0x54]
  41940e:	outs   dx,DWORD PTR ds:[esi]
  41940f:	cmp    al,0xe8
  419411:	imul   esp,DWORD PTR [eax],0x1b
  419414:	fisubr DWORD PTR [eax+0x6d]
  419417:	cmp    edi,edx
  419419:	arpl   WORD PTR [ebp+0x3a],sp
  41941c:	or     eax,0xfe38495c
  419421:	jb     0x41948c
  419423:	dec    esp
  419424:	in     al,dx
  419425:	add    BYTE PTR [bp+di],ch
  419428:	loopne 0x41949d
  41942a:	gs cmp edx,ebx
  41942d:	call   FWORD PTR [ebx+0x11]
  419430:	std    
  419431:	outs   dx,BYTE PTR ds:[esi]
  419432:	ja     0x419435
  419434:	sti    
  419435:	pop    esi
  419436:	push   0x5f4ed1e4
  41943b:	xor    DWORD PTR [edx+0x35],esp
  41943e:	push   eax
  41943f:	add    BYTE PTR [ecx],dh
  419441:	sbb    BYTE PTR fs:[edi-0x61],ah
  419445:	cli    
  419446:	sub    BYTE PTR [esi-0x68],ch
  419449:	mov    al,ds:0xc98f66ef
  41944e:	add    DWORD PTR [ebp+0x62],edx
  419451:	add    DWORD PTR [edi+0x54],0xffffff81
  419455:	mov    al,ds:0xa0834745
  41945a:	inc    ebp
  41945b:	inc    ebx
  41945c:	ja     0x4194c2
  41945e:	dec    edx
  41945f:	push   edx
  419460:	xor    DWORD PTR [edi+0x36],ebx
  419463:	push   esp
  419464:	je     0x4194c8
  419466:	xor    eax,0x44713150
  41946b:	dec    eax
  41946c:	dec    eax
  41946d:	unpckhps xmm5,XMMWORD PTR [ebp+0x43]
  419471:	sbb    DWORD PTR [ecx],eax
  419473:	push   ecx
  419474:	push   ds
  419475:	inc    edx
  419476:	sbb    BYTE PTR [ebp+0x10],dh
  419479:	cs daa 
  41947b:	pop    esp
  41947c:	test   BYTE PTR [ebx+0x2d],0x62
  419480:	adc    ah,dl
  419482:	xor    BYTE PTR [ecx-0x10],al
  419485:	out    dx,eax
  419486:	inc    esi
  419487:	pop    esp
  419488:	repnz fcom QWORD PTR [edi]
  41948b:	arpl   di,si
  41948d:	repz xor esp,DWORD PTR [eax]
  419490:	aas    
  419491:	add    BYTE PTR [ebp+ebp*2-0x24],cl
  419495:	add    al,0x40
  419497:	dec    edi
  419498:	repnz fld TBYTE PTR [ebp*2+0x7222fdcd]
  4194a0:	xor    edi,ecx
  4194a2:	sub    al,0x66
  4194a4:	add    ch,al
  4194a6:	xchg   edx,eax
  4194a7:	and    al,0x72
  4194a9:	int3   
  4194aa:	repz inc esp
  4194ac:	ins    BYTE PTR es:[edi],dx
  4194ad:	into   
  4194ae:	std    
  4194af:	and    ch,BYTE PTR [edx+eiz*8-0x22]
  4194b3:	inc    edx
  4194b4:	push   eax
  4194b5:	je     0x4194c0
  4194b7:	ret    
  4194b8:	inc    edx
  4194b9:	mov    ds:0x8545c41d,al
  4194be:	cmp    DWORD PTR [edi],eax
  4194c0:	(bad)  
  4194c1:	ss cmp ecx,ebx
  4194c4:	cs xchg edi,eax
  4194c6:	sub    al,0xba
  4194c8:	adc    cl,BYTE PTR [esi-0x72db32de]
  4194ce:	xor    eax,0x225d4298
  4194d3:	mov    esi,0x9928532f
  4194d8:	add    eax,DWORD PTR [eax+0x64178522]
  4194de:	sub    BYTE PTR [ecx+0x7b4a7528],bl
  4194e4:	cs push ebx
  4194e6:	sub    BYTE PTR [ebx-0x68b78fce],dl
  4194ec:	dec    eax
  4194ed:	pop    ebp
  4194ee:	inc    esi
  4194ef:	jl     0x419508
  4194f1:	push   edx
  4194f2:	dec    ebx
  4194f3:	xchg   ebx,eax
  4194f4:	xor    edx,DWORD PTR [ecx-0x26]
  4194f7:	push   es
  4194f8:	dec    esp
  4194f9:	adc    al,0x24
  4194fb:	inc    esp
  4194fc:	inc    eax
  4194fd:	out    dx,al
  4194fe:	inc    ebp
  4194ff:	cmp    ebp,DWORD PTR [edi]
  419501:	add    al,0x25
  419503:	dec    ecx
  419504:	and    eax,0x2f1a0903
  419509:	add    BYTE PTR [edi],cl
  41950b:	sbb    eax,0x2c032536
  419510:	adc    eax,DWORD PTR [edi+0x5]
  419513:	and    cl,BYTE PTR [ecx+0x25]
  419516:	fnsave ds:0x4c01452a
  41951c:	cmp    eax,DWORD PTR [ebx-0x1e]
  41951f:	sbb    al,0xc
  419521:	inc    esi
  419522:	std    
  419523:	cmp    bh,al
  419525:	(bad)  
  419526:	cs cmp ecx,edi
  419529:	cs iret 
  41952b:	sub    edi,edx
  41952d:	adc    dl,dh
  41952f:	and    DWORD PTR [eax],eax
  419531:	pop    es
  419532:	or     al,0x25
  419534:	pop    esp
  419535:	sbb    BYTE PTR [edx+0x35],dh
  419538:	ins    DWORD PTR es:[edi],dx
  419539:	(bad)  
  41953a:	push   esi
  41953b:	sub    ebx,DWORD PTR [edi-0x25]
  41953e:	xor    bh,BYTE PTR [edx]
  419540:	ins    DWORD PTR es:[edi],dx
  419541:	iret   
  419542:	ds push ss
  419544:	pop    edi
  419545:	fistp  DWORD PTR [ecx+0x2d]
  419548:	inc    ebp
  419549:	aad    0x57
  41954b:	sub    ebx,DWORD PTR [edi-0x33]
  41954e:	inc    ebx
  41954f:	dec    edx
  419550:	aas    
  419551:	cdq    
  419552:	imul   ebp,DWORD PTR ds:0x2c46b441,0xe922bd46
  41955c:	aaa    
  41955d:	leave  
  41955e:	push   0x1e
  419560:	imul   ecx,DWORD PTR [esi+edx*1+0x1fb54140],0x1e
  419568:	ins    BYTE PTR es:[edi],dx
  419569:	mov    ecx,DWORD PTR ds:0x9a001b
  41956f:	(bad)  
  419571:	je     0x4195f1
  419573:	or     eax,0xf78d631b
  419578:	sbb    al,0x6d
  41957a:	dec    ebx
  41957b:	push   edx
  41957c:	sbb    eax,0x38f22a51
  419581:	inc    ebx
  419582:	xor    eax,0x44741bf0
  419587:	div    DWORD PTR [eax+edx*2]
  41958a:	or     DWORD PTR [ebp-0x10],esp
  41958d:	dec    edi
  41958e:	cmp    ecx,DWORD PTR [edi+eiz*1+0x63]
  419592:	cmp    ah,BYTE PTR [eax]
  419594:	sub    BYTE PTR [ebp+0x3f],ch
  419597:	adc    bl,BYTE PTR ds:0x34f0385c
  41959d:	ins    DWORD PTR es:[edi],dx
  41959e:	push   cs
  41959f:	and    DWORD PTR [ebx],ebp
  4195a1:	pop    edi
  4195a2:	sbb    ebp,DWORD PTR ds:0x1dfd452d
  4195a8:	sub    ebx,DWORD PTR [edi+0x0]
  4195ab:	sbb    al,0xda
  4195ad:	ds inc ecx
  4195af:	sbb    BYTE PTR [eax+0x5c],cl
  4195b2:	inc    ebx
  4195b3:	xor    eax,0x444660f8
  4195b8:	aad    0xff
  4195ba:	pop    ebx
  4195bb:	xlat   BYTE PTR ds:[ebx]
  4195bc:	fild   QWORD PTR [edx+0x62]
  4195bf:	jmp    0xc984e4a3
  4195c4:	fild   DWORD PTR [eax+0x5c]
  4195c7:	fcomi  st,st(6)
  4195c9:	jae    0x419630
  4195cb:	(bad)  
  4195cc:	xlat   BYTE PTR ds:[ebx]
  4195cd:	dec    edi
  4195ce:	and    BYTE PTR [eax+0x6af9],bl
  4195d4:	pushf  
  4195d5:	inc    esp
  4195d6:	ins    BYTE PTR es:[edi],dx
  4195d7:	outs   dx,DWORD PTR ds:[esi]
  4195d8:	cli    
  4195d9:	jmp    0x4550:0x4a9b536b
  4195e0:	pushf  
  4195e1:	dec    eax
  4195e2:	jno    0x419658
  4195e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195e5:	inc    ebp
  4195e6:	push   esp
  4195e7:	push   eax
  4195e8:	clc    
  4195e9:	aas    
  4195ea:	gs je  0x4195a2
  4195ed:	or     ebx,DWORD PTR [ebx+eax*2+0x45]
  4195f1:	clc    
  4195f2:	pusha  
  4195f3:	inc    esi
  4195f4:	xchg   esp,eax
  4195f5:	(bad)  
  4195f7:	pop    ebx
  4195f8:	sub    ebx,edi
  4195fa:	sub    eax,0xfff0f964
  4195ff:	push   edx
  419600:	out    dx,eax
  419601:	out    0x73,al
  419603:	ja     0x4195ee
  419605:	cli    
  419606:	pusha  
  419607:	pop    esp
  419608:	push   esi
  419609:	fstp   DWORD PTR [ebx+esi*2-0x20]
  41960d:	inc    esi
  41960e:	pop    eax
  41960f:	push   eax
  419610:	sbb    al,0xba
  419612:	std    
  419613:	push   edx
  419614:	out    dx,eax
  419615:	out    0x73,al
  419617:	ja     0x419612
  419619:	cli    
  41961a:	pusha  
  41961b:	pop    esp
  41961c:	push   ss
  41961d:	fstp   DWORD PTR [ebx+esi*2+0x40]
  419621:	inc    edi
  419622:	pop    eax
  419623:	push   eax
  419624:	xor    DWORD PTR [edx-0xa2892d0],esp
  41962a:	adc    bl,BYTE PTR [edi-0x3d]
  41962d:	cld    
  41962e:	aas    
  41962f:	inc    esi
  419630:	int    0x0
  419632:	punpckhbw mm5,mm7
  419635:	stc    
  419636:	xor    ebx,DWORD PTR [eax+eax*1+0x65]
  41963a:	mov    al,ds:0xaca26e4a
  41963f:	and    ch,BYTE PTR [ebp+ecx*4-0x3b]
  419643:	cmove  edx,DWORD PTR [eax-0x6fafd654]
  41964a:	mov    ah,0x29
  41964c:	add    BYTE PTR [ecx+0x316815c1],al
  419652:	pop    ecx
  419653:	sub    esi,DWORD PTR [ecx+0x7d]
  419656:	shr    DWORD PTR ds:0x2270116c,0x74
  41965d:	pop    ecx
  41965e:	mov    al,ds:0x81655f45
  419663:	inc    ebx
  419664:	ins    DWORD PTR es:[edi],dx
  419665:	inc    ebp
  419666:	jl     0x41968e
  419668:	jb     0x41969b
  41966a:	pop    esp
  41966b:	xor    BYTE PTR [edi+0x3d],ah
  41966e:	jge    0x419680
  419670:	cs push ebp
  419672:	adc    DWORD PTR ds:0x16715500,0xeb8b1267
  41967c:	arpl   WORD PTR [eax],dx
  41967e:	sub    al,0x4
  419680:	pop    esp
  419681:	jmp    0x6b5abbe
  419686:	xor    bl,BYTE PTR [ebx]
  419688:	cs adc eax,0xe5001041
  41968e:	frstor [edi]
  419690:	pop    edi
  419691:	add    bh,BYTE PTR [eax]
  419693:	inc    edx
  419694:	pop    eax
  419695:	loope  0x41968a
  419697:	aam    0xff
  419699:	or     ah,dh
  41969b:	daa    
  41969c:	pop    edi
  41969d:	add    dl,ah
  41969f:	or     BYTE PTR [edi],cl
  4196a1:	inc    edx
  4196a2:	stc    
  4196a3:	cmp    BYTE PTR [ebx],bh
  4196a5:	rcl    BYTE PTR [esi+0x32],1
  4196a8:	sub    eax,0x3123dd2d
  4196ad:	sub    eax,0x4081cd5
  4196b2:	fstp   QWORD PTR [ecx]
  4196b4:	adc    BYTE PTR [eax],dl
  4196b6:	rcr    BYTE PTR [ebx],cl
  4196b8:	or     BYTE PTR [edx],ch
  4196ba:	mov    fs,WORD PTR [esi]
  4196bc:	add    al,0x16
  4196be:	push   edi
  4196bf:	adc    esp,edx
  4196c1:	daa    
  4196c2:	xor    DWORD PTR ds:0x249020d9,ebp
  4196c8:	lds    ecx,FWORD PTR [edi]
  4196ca:	and    BYTE PTR [ecx+ebx*8],0x11
  4196ce:	xchg   edx,eax
  4196cf:	sbb    edi,DWORD PTR [edx-0x34e37917]
  4196d5:	add    edx,DWORD PTR [ebp+0x27]
  4196d8:	shl    BYTE PTR [edi],0x52
  4196db:	adc    eax,eax
  4196dd:	daa    
  4196de:	push   ebp
  4196df:	sub    ch,dl
  4196e1:	sbb    ecx,DWORD PTR [edx+0x1d]
  4196e4:	out    0x36,eax
  4196e6:	inc    esp
  4196e7:	daa    
  4196e8:	fwait
  4196e9:	adc    ch,BYTE PTR [esi+0x1b]
  4196ec:	test   BYTE PTR [edi],dh
  4196ee:	outs   dx,DWORD PTR ds:[esi]
  4196ef:	and    BYTE PTR [ebx-0x74dfa4e0],dl
  4196f5:	daa    
  4196f6:	push   esi
  4196f7:	or     DWORD PTR [edx+0x7615172a],ebx
  4196fd:	and    al,0x23
  4196ff:	and    al,0x43
  419701:	inc    edx
  419702:	add    BYTE PTR [esi],dl
  419704:	sbb    eax,0x1d0e3e44
  419709:	inc    ebx
  41970a:	and    eax,0x2d3b4a51
  41970f:	adc    bl,BYTE PTR [edi]
  419711:	cmp    eax,DWORD PTR [esi+esi*8]
  419714:	push   ds
  419715:	cmp    dl,BYTE PTR [eax]
  419717:	(bad)  
  419718:	sbb    al,0x0
  41971a:	inc    ebp
  41971b:	sub    al,BYTE PTR [ebp+0x67]
  41971e:	cmp    ebp,DWORD PTR ds:0x411a6d41
  419724:	or     DWORD PTR [ebx+0x1a],edx
  419727:	adc    BYTE PTR [ebx],bl
  419729:	add    BYTE PTR [ecx],bh
  41972b:	adc    al,0x18
  41972d:	jno    0x419718
  41972f:	add    bl,BYTE PTR [edx+esi*2]
  419732:	std    
  419733:	xor    bh,BYTE PTR [ebx]
  419735:	arpl   WORD PTR [edx+ecx*1],cx
  419738:	adc    eax,0x246ec963
  41973d:	jb     0x419728
  41973f:	pop    edi
  419740:	sub    BYTE PTR [edx-0x21],dh
  419743:	push   ecx
  419744:	pop    ss
  419745:	and    BYTE PTR [ebp-0x169ce6cb],dh
  41974b:	inc    edi
  41974c:	sub    BYTE PTR [edx-0x29],dh
  41974f:	push   ecx
  419750:	pop    ss
  419751:	cs mov cl,0x4b
  419754:	sbb    dh,BYTE PTR [ecx+ebp*8+0x3f]
  419758:	sub    BYTE PTR [edx-0x41],dh
  41975b:	adc    DWORD PTR [edi],edx
  41975d:	cs xchg esp,eax
  41975f:	aas    
  419760:	sub    BYTE PTR [edx-0x17],dh
  419763:	daa    
  419764:	sub    BYTE PTR [edx-0x69],dh
  419767:	add    BYTE PTR [ecx],dl
  419769:	pop    ss
  41976a:	cs mov ecx,0xe9711a15
  419770:	jmp    DWORD PTR [edi]
  419772:	jb     0x4197f3
  419774:	adc    DWORD PTR [edi],edx
  419776:	cs cdq 
  419778:	or     edx,DWORD PTR [edi]
  41977a:	je     0x419765
  41977c:	bound  ebp,QWORD PTR [esp+esi*2]
  41977f:	xor    DWORD PTR [edx],0x435b633a
  419785:	sub    BYTE PTR [edx+0x35],dh
  419788:	cmp    bl,BYTE PTR [ecx]
  41978a:	arpl   cx,bp
  41978c:	imul   BYTE PTR [ebx]
  41978e:	jno    0x4197e5
  419790:	lea    edi,[ecx]
  419792:	arpl   WORD PTR [eax],ax
  419794:	cmp    dh,bh
  419796:	pusha  
  419797:	jb     0x4197c1
  419799:	cmp    eax,0x52c736b
  41979e:	dec    esp
  41979f:	popa   
  4197a0:	sub    edi,ecx
  4197a2:	pop    ds
  4197a3:	push   ebx
  4197a4:	sub    eax,0x3a6575f3
  4197a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197aa:	push   edx
  4197ab:	jae    0x4197ea
  4197ad:	repz dec DWORD PTR [ebx+0x39]
  4197b1:	div    BYTE PTR [ebx+0x20]
  4197b4:	sbb    ebp,esp
  4197b6:	jno    0x41982e
  4197b8:	sub    eax,0x39501ff3
  4197bd:	imul   BYTE PTR [esi+0x0]
  4197c0:	inc    esp
  4197c1:	call   0xd66a0c34
  4197c6:	pusha  
  4197c7:	jb     0x4197c7
  4197c9:	jmp    0x71e0:0xc8002071
  4197d0:	je     0x4197ea
  4197d2:	inc    esp
  4197d3:	pop    ebp
  4197d4:	jae    0x419792
  4197d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197d7:	push   eax
  4197d8:	gs mov edx,0x387260f9
  4197de:	aad    0x5c
  4197e0:	je     0x4197d2
  4197e2:	pop    es
  4197e3:	dec    esp
  4197e4:	popa   
  4197e5:	mov    ebx,0xad531ffb
  4197ea:	cmc    
  4197eb:	jne    0x419852
  4197ed:	stos   BYTE PTR es:[edi],al
  4197ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197ef:	push   ecx
  4197f0:	jns    0x41979a
  4197f2:	jmp    0x4e1f:0xd79c45ff
  4197f9:	test   eax,0xb96764f9
  4197fe:	sti    
  4197ff:	push   0x72
  419801:	cwde   
  419802:	dec    ecx
  419803:	push   esp
  419804:	push   eax
  419805:	sub    BYTE PTR [esi+0x6b],al
  419808:	ins    DWORD PTR es:[edi],dx
  419809:	in     eax,0xe7
  41980b:	ins    DWORD PTR es:[edi],dx
  41980c:	xor    DWORD PTR fs:0x360f0016,edi
  419813:	adc    al,0x6c
  419815:	or     bh,cl
  419817:	ucomiss xmm7,xmm5
  41981a:	dec    ecx
  41981b:	adc    BYTE PTR [eax],al
  41981d:	or     eax,0xd56c0ce0
  419822:	inc    esp
  419823:	adc    BYTE PTR [eax-0x1d],dl
  419826:	repnz es adc di,cx
  41982b:	(bad)
  419830:	jb     0x419832
  419832:	int3   
  419833:	mov    eax,ds:0x8dd063e7
  419838:	add    DWORD PTR [esi],ebp
  41983a:	rcl    DWORD PTR [ecx+0x3820014],cl
  419840:	and    dh,BYTE PTR [esi+ebx*4+0x1]
  419844:	push   ss
  419845:	arpl   WORD PTR [ebp+0x5e],di
  419848:	xor    DWORD PTR [esi+0x7d],eax
  41984b:	push   eax
  41984c:	xor    eax,0x25c48442
  419851:	arpl   WORD PTR [ebp+0x0],di
  419854:	xor    al,0x72
  419856:	mov    ?,WORD PTR [ebx+0x746f201f]
  41985c:	xor    DWORD PTR [esp+edi*2-0x3f],ebx
  419860:	sub    ch,BYTE PTR [esi+0x31]
  419863:	outs   dx,DWORD PTR ds:[esi]
  419864:	sub    BYTE PTR [esi+0x65],ah
  419867:	imul   esp,DWORD PTR [edx],0x72
  41986a:	dec    esp
  41986b:	dec    esp
  41986c:	inc    ebx
  41986d:	jae    0x4198cc
  41986f:	test   BYTE PTR [esi],bl
  419871:	je     0x4198d4
  419873:	outs   dx,BYTE PTR ds:[esi]
  419874:	sub    BYTE PTR [ebp+0x57],ch
  419877:	shl    BYTE PTR [ebp*2+0x5f10144f],0x23
  41987f:	jge    0x4198b6
  419881:	inc    edx
  419882:	sbb    al,0xc
  419884:	and    eax,0x37092563
  419889:	adc    al,BYTE PTR [edx+ebx*1]
  41988c:	inc    ebp
  41988d:	in     al,0xf4
  41988f:	xor    al,0x37
  419891:	in     al,0xf1
  419893:	sbb    al,0x40
  419895:	and    DWORD PTR [eax],eax
  419897:	unpckhps xmm4,XMMWORD PTR [ebx]
  41989a:	dec    ecx
  41989b:	(bad)  
  41989c:	pop    ds
  41989d:	dec    ebp
  41989e:	add    al,0x0
  4198a0:	sbb    cl,BYTE PTR [ebp+0x10]
  4198a3:	fsub   QWORD PTR [edi]
  4198a5:	cmp    DWORD PTR [ecx],esp
  4198a7:	std    
  4198a8:	inc    esi
  4198a9:	aaa    
  4198aa:	ds std 
  4198ac:	cmp    BYTE PTR [ebx],bh
  4198ae:	inc    edx
  4198af:	ret    0x31c
  4198b2:	and    DWORD PTR [ebp-0x33edc918],edi
  4198b8:	sbb    DWORD PTR ds:0x1734ece4,ecx
  4198be:	cmp    BYTE PTR [ecx+ebx*1-0x5],bh
  4198c2:	sub    al,0x94
  4198c4:	sbb    edi,edx
  4198c6:	add    eax,DWORD PTR [eax-0x63f032e6]
  4198cc:	sub    cl,bl
  4198ce:	and    BYTE PTR [ebp+0x47],ch
  4198d1:	fsub   QWORD PTR [edi]
  4198d3:	xchg   ebp,eax
  4198d4:	and    al,0xd3
  4198d6:	xor    eax,DWORD PTR [ebx+0x511dd61a]
  4198dc:	ss into 
  4198de:	sbb    eax,0x11c81265
  4198e3:	push   edx
  4198e4:	sub    eax,0x1d4d10a9
  4198e9:	mov    WORD PTR [edi],cs
  4198eb:	adc    DWORD PTR [edi],0xe957268e
  4198f1:	lods   al,BYTE PTR ds:[esi]
  4198f2:	das    
  4198f3:	popa   
  4198f4:	jmp    0x2497c0a2
  4198f9:	xchg   ebp,eax
  4198fa:	lldt   WORD PTR [ebp+0x3a]
  4198fe:	ja     0x41990f
  419900:	push   ss
  419901:	sbb    al,BYTE PTR [eax]
  419903:	xchg   DWORD PTR [ebx+0x9],eax
  419906:	push   ecx
  419907:	jle    0x419945
  419909:	adc    eax,0x26434875
  41990e:	pop    esp
  41990f:	sub    eax,DWORD PTR [ebp+0x43]
  419912:	push   esp
  419913:	cmp    DWORD PTR ds:0x215a5f3d,ebp
  419919:	cmp    BYTE PTR [ebx+0x3a],ah
  41991c:	and    ah,BYTE PTR [edx]
  41991e:	ins    DWORD PTR es:[edi],dx
  41991f:	dec    edi
  419920:	das    
  419921:	and    ch,BYTE PTR [esp+ecx*2+0x2d]
  419925:	cmp    BYTE PTR [edi+0x35],ah
  419928:	adc    BYTE PTR [eax],bl
  41992a:	inc    esp
  41992b:	adc    BYTE PTR [ebx+0x9],al
  41992e:	inc    edi
  41992f:	mov    cr2,ebp
  419932:	pop    edi
  419933:	add    eax,0x1b674519
  419938:	mov    DWORD PTR fs:[ebx],ebp
  41993b:	add    DWORD PTR [eax],ecx
  41993d:	sbb    eax,0xf4621d00
  419942:	pop    esi
  419943:	sti    
  419944:	ss iret 
  419946:	push   ebx
  419947:	sbb    DWORD PTR ds:0x4fdf5ecf,esi
  41994d:	sti    
  41994e:	data16 aad 0x51
  419951:	cli    
  419952:	sub    eax,0xfffd4dcd
  419957:	mov    al,ds:0xd673fa4d
  41995c:	and    BYTE PTR [eax],al
  41995e:	lds    eax,FWORD PTR cs:[eax]
  419961:	adc    eax,0x46c7fffd
  419966:	in     eax,dx
  419967:	jno    0x419934
  419969:	or     esi,DWORD PTR [edi]
  41996b:	mov    BYTE PTR fs:[esi],ah
  41996e:	or     DWORD PTR [edi-0x6c],ebp
  419971:	sbb    eax,0x26c768ea
  419976:	call   0xdd4882ee
  41997b:	jb     0x41997d
  41997d:	cmp    ch,BYTE PTR [edx]
  41997f:	imul   eax,DWORD PTR [esi-0x3c],0x3c
  419983:	add    BYTE PTR [ebx-0x51],dl
  419986:	es je  0x419a00
  419989:	test   eax,0x545c611a
  41998e:	sbb    BYTE PTR [edx+0x62],dh
  419991:	inc    DWORD PTR [esi+0x54]
  419994:	push   eax
  419995:	cwde   
  419996:	xor    ebp,DWORD PTR [esi+0x73]
  419999:	in     al,0x2b
  41999b:	ins    BYTE PTR es:[edi],dx
  41999c:	ins    BYTE PTR es:[edi],dx
  41999d:	cmp    BYTE PTR [esp+esi*2],ch
  4199a0:	push   0x666b3958
  4199a5:	and    al,0x16
  4199a7:	pop    ebp
  4199a8:	jb     0x41999f
  4199aa:	inc    eax
  4199ab:	dec    edi
  4199ac:	outs   dx,DWORD PTR ds:[esi]
  4199ad:	xor    al,0x2c
  4199af:	pop    esp
  4199b0:	inc    esi
  4199b1:	push   ss
  4199b2:	inc    edi
  4199b3:	push   esp
  4199b4:	push   eax
  4199b5:	pop    eax
  4199b6:	leave  
  4199b7:	jno    0x419a1e
  4199b9:	xor    al,0x28
  4199bb:	outs   dx,BYTE PTR ds:[esi]
  4199bc:	je     0x4199df
  4199be:	sub    al,0x6c
  4199c0:	push   ebx
  4199c1:	cmp    DWORD PTR [ecx],esi
  4199c3:	je     0x4199c5
  4199c5:	add    BYTE PTR [ebx+0x1b],bl
  4199c8:	popa   
  4199c9:	fs xor eax,0xe969742f
  4199cf:	das    
  4199d0:	aas    
  4199d1:	push   0x6728f5
  4199d6:	retf   
  4199d7:	sub    al,0x66
  4199d9:	je     0x4199c2
  4199db:	sub    dh,BYTE PTR [edx+0x65]
  4199de:	int3   
  4199df:	cmp    BYTE PTR [ebx+0x74],ch
  4199e2:	stc    
  4199e3:	aas    
  4199e4:	inc    esi
  4199e5:	inc    esi
  4199e6:	xchg   esi,eax
  4199e7:	aaa    
  4199e8:	push   eax
  4199e9:	pop    esp
  4199ea:	mov    edi,0xbf69741b
  4199ef:	sub    eax,0x2a88006f
  4199f4:	outs   dx,DWORD PTR ds:[esi]
  4199f5:	jae    0x419a28
  4199f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199f8:	and    al,0x72
  4199fa:	push   ebp
  4199fb:	jb     0x419a2b
  4199fd:	jno    0x419a4b
  4199ff:	add    al,0x43
  419a01:	pop    edi
  419a02:	sbb    al,0x8d
  419a04:	add    DWORD PTR [eax+0x16],ecx
  419a07:	add    ecx,DWORD PTR ds:0x1004153f
  419a0d:	add    BYTE PTR [ebx],al
  419a0f:	aad    0x24
  419a11:	ins    DWORD PTR es:[edi],dx
  419a12:	add    eax,0x3673fcd
  419a17:	jb     0x419a4a
  419a19:	ins    DWORD PTR es:[edi],dx
  419a1a:	add    ebx,esi
  419a1c:	add    ecx,DWORD PTR [eax+0x6]
  419a1f:	inc    ebx
  419a20:	adc    BYTE PTR [esi-0x30],cl
  419a23:	aam    0x1c
  419a25:	add    BYTE PTR [ecx],al
  419a27:	iret   
  419a28:	adc    DWORD PTR [eax+eax*1+0x31],esi
  419a2c:	sbb    eax,0x1fe3630f
  419a31:	and    DWORD PTR [ebx-0x2c],ebp
  419a34:	jno    0x419a67
  419a36:	pop    edi
  419a37:	ret    0xb22
  419a3a:	ins    DWORD PTR es:[edi],dx
  419a3b:	ret    
  419a3c:	or     eax,0x82c64804
  419a41:	or     eax,0x43829844
  419a46:	pop    edi
  419a47:	xchg   esp,eax
  419a48:	adc    eax,0xe8e5104
  419a4d:	adc    BYTE PTR [ebp-0x70],dh
  419a50:	bound  ebx,QWORD PTR [esi]
  419a52:	pop    esp
  419a53:	jb     0x419aac
  419a55:	sbb    esp,DWORD PTR [esi-0x74]
  419a58:	push   ebp
  419a59:	inc    eax
  419a5a:	jae    0x4199dd
  419a5c:	adc    BYTE PTR [edi],ch
  419a5e:	ins    DWORD PTR es:[edi],dx
  419a5f:	pop    esp
  419a61:	or     al,0x5f
  419a63:	arpl   WORD PTR [ebp+0x35],cx
  419a66:	inc    edi
  419a67:	push   edi
  419a68:	les    ebx,FWORD PTR [esi]
  419a6a:	jb     0x419abb
  419a6c:	dec    ebp
  419a6d:	or     eax,0x9909815c
  419a72:	and    al,0x57
  419a74:	lock mov bl,BYTE PTR [esi]
  419a77:	inc    eax
  419a78:	or     DWORD PTR [edx-0x6a02a8dc],edi
  419a7e:	and    al,BYTE PTR [ebx-0x14]
  419a81:	mov    ds:0x95d9053d,al
  419a86:	and    ah,BYTE PTR [ebx]
  419a88:	in     al,dx
  419a89:	xchg   edx,eax
  419a8a:	inc    eax
  419a8b:	in     al,dx
  419a8c:	fisub  DWORD PTR [ebx-0x2702ffc3]
  419a92:	inc    edx
  419a93:	aaa    
  419a94:	push   ss
  419a95:	std    
  419a96:	inc    ebx
  419a97:	pop    ss
  419a98:	xor    ecx,edx
  419a9a:	inc    ebp
  419a9b:	pop    ss
  419a9c:	add    eax,0x12173409
  419aa1:	sti    
  419aa2:	out    0x33,al
  419aa4:	fdiv   st(2),st
  419aa6:	xor    al,BYTE PTR [ecx+eax*1]
  419aa9:	fsubrp st(6),st
  419aab:	xor    esp,ebp
  419aad:	lock sbb BYTE PTR [eax+eax*1],al
  419ab1:	fisubr DWORD PTR [esi]
  419ab3:	add    al,0xc1
  419ab5:	cli    
  419ab6:	or     eax,0xbf4ce2a
  419abb:	pop    ss
  419abc:	clzero 
  419abf:	pop    ds
  419ac0:	xor    ebp,esp
  419ac2:	sub    al,0x38
  419ac4:	sub    DWORD PTR [ecx],0xf5a10c24
  419aca:	add    eax,0xe6fb9216
  419acf:	ss test bh,ch
  419ad2:	ficomp DWORD PTR [edx]
  419ad4:	outs   dx,BYTE PTR ds:[esi]
  419ad5:	sti    
  419ad6:	ret    
  419ad7:	das    
  419ad8:	outs   dx,DWORD PTR ds:[esi]
  419ad9:	fnsave [esi-0x28fe8c1d]
  419adf:	pop    ds
  419ae0:	test   bl,bh
  419ae2:	retf   
  419ae3:	adc    eax,0x3392cf8d
  419ae8:	adc    esp,ecx
  419aea:	push   DWORD PTR [eax-0x44930abe]
  419af0:	or     ebx,edi
  419af2:	pop    ebx
  419af3:	mov    esi,0x68fb1300
  419af8:	call   0xd20e:0x8c60e622
  419aff:	inc    ebp
  419b00:	stos   BYTE PTR es:[edi],al
  419b01:	(bad)  
  419b02:	rep ins BYTE PTR es:[edi],dx
  419b04:	xchg   ebp,eax
  419b05:	hlt    
  419b06:	in     eax,0x71
  419b08:	int3   
  419b09:	jl     0x419b42
  419b0b:	xor    al,0xe9
  419b0d:	hlt    
  419b0e:	stc    
  419b0f:	jae    0x419b86
  419b11:	push   ebx
  419b12:	div    DWORD PTR [eax-0x17]
  419b15:	inc    edi
  419b16:	hlt    
  419b17:	gs push ebp
  419b19:	sub    ah,dh
  419b1b:	jno    0x419b69
  419b1d:	inc    ecx
  419b1e:	iret   
  419b1f:	push   ebx
  419b20:	cmp    DWORD PTR [ebp+0x113977ca],ecx
  419b26:	hlt    
  419b27:	jno    0x419b6d
  419b29:	aas    
  419b2a:	in     eax,0x4f
  419b2c:	cmp    edx,DWORD PTR [edx]
  419b2e:	out    dx,eax
  419b2f:	cmp    ax,0xf808
  419b33:	(bad)  
  419b34:	cmp    BYTE PTR [eax+edi*8],dl
  419b37:	jo     0x419b4f
  419b39:	adc    bh,bl
  419b3b:	arpl   cx,bp
  419b3d:	add    ah,dh
  419b3f:	jo     0x419b5b
  419b41:	sbb    dh,ah
  419b43:	jno    0x419b52
  419b45:	imul   edi,esp,0xd12d046f
  419b4b:	ins    BYTE PTR es:[edi],dx
  419b4c:	cli    
  419b4d:	inc    esi
  419b4e:	or     DWORD PTR [esi+edi*8+0x4b],ecx
  419b52:	in     al,dx
  419b53:	ins    DWORD PTR es:[edi],dx
  419b54:	jmp    0xd5b3919b
  419b59:	add    BYTE PTR [edx],dh
  419b5b:	int3   
  419b5c:	ins    DWORD PTR es:[edi],dx
  419b5d:	shl    BYTE PTR [esi],0xec
  419b60:	pop    esi
  419b61:	mov    ebp,0x73e442
  419b66:	add    BYTE PTR [ecx],cl
  419b68:	inc    esi
  419b69:	je     0x419b13
  419b6b:	cmp    esp,DWORD PTR [ebp+0x74]
  419b6e:	in     eax,dx
  419b6f:	push   0x75
  419b71:	ins    DWORD PTR es:[edi],dx
  419b72:	xchg   esp,eax
  419b73:	or     BYTE PTR [esi+eax*2-0x56],bl
  419b77:	and    eax,0x319c6163
  419b7c:	das    
  419b7d:	add    dh,dh
  419b7f:	and    eax,0x34c8696e
  419b84:	push   esi
  419b85:	popa   
  419b86:	(bad)  
  419b87:	int3   
  419b88:	je     0x419bf5
  419b8a:	lods   eax,DWORD PTR ds:[esi]
  419b8b:	xor    al,0x3f
  419b8d:	outs   dx,DWORD PTR ds:[esi]
  419b8e:	mov    dh,0x32
  419b90:	movs   BYTE PTR es:[di],BYTE PTR gs:[si]
  419b93:	cmp    esp,DWORD PTR [ecx+0x73]
  419b96:	jmp    0x419bb7
  419b98:	imul   ebp,DWORD PTR [esi-0x15],0xc
  419b9c:	pop    esp
  419b9d:	push   ebx
  419b9e:	in     eax,dx
  419b9f:	sbb    eax,0x2737696f
  419ba4:	outs   dx,DWORD PTR ds:[esi]
  419ba5:	add    BYTE PTR [ebx+0x2a],cl
  419ba8:	data16 je 0x419bca
  419bab:	sub    BYTE PTR [edx+0x65],dh
  419bae:	inc    esp
  419baf:	aas    
  419bb0:	pop    ebp
  419bb1:	outs   dx,BYTE PTR ds:[esi]
  419bb2:	or     al,0x10
  419bb4:	addr16 gs hlt 
  419bb7:	cmp    eax,0x1b1d6361
  419bbc:	popa   
  419bbd:	inc    esi
  419bbe:	add    BYTE PTR [eax],al
  419bc0:	or     eax,0x32366f3f
  419bc5:	gs addr16 clc 
  419bc8:	aaa    
  419bc9:	pop    ebp
  419bca:	je     0x419c0c
  419bcc:	or     eax,0x1e1c6c51
  419bd1:	pop    ebp
  419bd2:	inc    esi
  419bd3:	inc    eax
  419bd4:	cmp    eax,0x1eeb5c00
  419bd9:	je     0x419c40
  419bdb:	jmp    0x419c46
  419bdd:	jne    0x419c4c
  419bdf:	xor    DWORD PTR [esi+0x1],ecx
  419be2:	pop    esp
  419be3:	outs   dx,DWORD PTR ds:[esi]
  419be4:	mov    esi,0xbf645231
  419be9:	sbb    DWORD PTR [eax],eax
  419beb:	cmp    DWORD PTR [ebp+0x49826814],0x15
  419bf2:	arpl   WORD PTR [edi],ax
  419bf4:	mov    edx,0xbf316c1e
  419bf9:	es jb  0x419c3b
  419bfc:	lea    edx,[ebx]
  419bfe:	add    BYTE PTR [edi+ebx*4+0x26],ah
  419c02:	jb     0x419c4b
  419c04:	xchg   ecx,eax
  419c05:	push   ds
  419c06:	arpl   WORD PTR [ecx],si
  419c08:	mov    ds:0xfb227122,al
  419c0d:	pop    ds
  419c0e:	jb     0x419c25
  419c10:	jb     0x419c59
  419c12:	je     0x419c35
  419c14:	mov    ds:0x72057220,al
  419c19:	xor    al,0x6d
  419c1b:	pmaxub mm2,QWORD PTR [esi]
  419c1e:	pop    edi
  419c1f:	add    edx,ebp
  419c21:	das    
  419c22:	inc    ecx
  419c23:	add    BYTE PTR [ebx],al
  419c25:	fldenv [edx+esi*2]
  419c28:	or     eax,0x2622523
  419c2d:	fst    DWORD PTR [edi]
  419c2f:	arpl   WORD PTR [ecx],ax
  419c31:	inc    ebp
  419c32:	es ins BYTE PTR es:[edi],dx
  419c34:	enter  0x1c3e,0x63
  419c38:	ret    
  419c39:	jno    0x419c68
  419c3b:	inc    edx
  419c3c:	fcomp  DWORD PTR ds:0x14cf673b
  419c42:	or     al,0x0
  419c44:	ror    DWORD PTR [eax],cl
  419c46:	sbb    BYTE PTR [ecx-0x68],ch
  419c49:	sbb    ah,BYTE PTR ds:0x130c5778
  419c4f:	add    BYTE PTR [ecx+0xb],ch
  419c52:	adc    esi,DWORD PTR [edi+eax*4+0x11]
  419c56:	sbb    eax,0xbc093163
  419c5b:	adc    al,0x92
  419c5d:	test   esp,0xe6ec8a22
  419c63:	xor    edx,DWORD PTR [esi-0xa]
  419c66:	fstp   DWORD PTR [eax]
  419c68:	pop    esp
  419c69:	test   edx,0xb8f28103
  419c6f:	pop    ss
  419c70:	xor    esi,edx
  419c72:	lds    ebp,FWORD PTR [ecx]
  419c74:	pop    ebp
  419c75:	cli    
  419c76:	(bad)  
  419c77:	adc    eax,0xbabe552
  419c7c:	inc    ecx
  419c7d:	call   0xf084e40e
  419c82:	pushf  
  419c83:	es push ebp
  419c85:	(bad)  
  419c86:	adc    DWORD PTR [eax+eax*1],0x20
  419c8a:	lock xchg ebp,eax
  419c8c:	and    DWORD PTR [eax],esp
  419c8e:	or     DWORD PTR [ebx-0x7806e6ba],ebx
  419c94:	and    ebp,ebp
  419c96:	idiv   BYTE PTR [edi+0x19]
  419c99:	adc    cl,BYTE PTR [ecx]
  419c9b:	inc    ebx
  419c9c:	sub    BYTE PTR [ebx],al
  419c9e:	lock push esp
  419ca0:	sub    DWORD PTR [eax],eax
  419ca2:	xor    eax,DWORD PTR [ecx+0x13]
  419ca5:	xor    DWORD PTR [edi],esp
  419ca7:	push   edi
  419ca8:	and    eax,0x1f3df5e0
  419cad:	jecxz  0x419c9b
  419caf:	or     ah,ah
  419cb1:	sbb    BYTE PTR [ecx],ch
  419cb3:	or     DWORD PTR [ebx+edx*1],eax
  419cb6:	xor    eax,0xeadc32e7
  419cbb:	sbb    dl,BYTE PTR [edi]
  419cbd:	out    0xf6,al
  419cbf:	add    esi,DWORD PTR [eax]
  419cc1:	repnz add BYTE PTR [edi],dl
  419cc4:	and    eax,0x1d18ccc7
  419cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cca:	in     al,dx
  419ccb:	out    0x48,al
  419ccd:	test   eax,0x751e07f9
  419cd2:	idiv   edi
  419cd4:	(bad)  
  419cd5:	aas    
  419cd6:	out    0x5c,al
  419cd8:	and    DWORD PTR [esi],ebp
  419cda:	out    dx,al
  419cdb:	(bad)  
  419cdc:	jmp    0xd7b38324
  419ce1:	dec    ecx
  419ce2:	idiv   edi
  419ce4:	mov    ebx,0x9f71e623
  419ce9:	adc    eax,0xe962ee
  419cee:	and    ah,dl
  419cf0:	jo     0x419cac
  419cf2:	inc    edi
  419cf3:	hlt    
  419cf4:	jno    0x419cc3
  419cf6:	xor    ah,ah
  419cf8:	dec    edi
  419cf9:	enter  0xf823,0x74
  419cfd:	xchg   esi,eax
  419cfe:	and    ch,ch
  419d00:	jmp    DWORD PTR [ebp+ebx*1+0x1e8a62f7]
  419d07:	hlt    
  419d08:	jno    0x419c9a
  419d0a:	xor    bl,al
  419d0c:	ins    BYTE PTR es:[edi],dx
  419d0d:	(bad)  
  419d0e:	ds cld 
  419d10:	pop    esi
  419d11:	jnp    0x419d5c
  419d13:	in     eax,0x4d
  419d15:	stos   BYTE PTR es:[edi],al
  419d16:	pop    edx
  419d17:	sub    DWORD PTR [ecx+0x7e],edx
  419d1a:	push   esp
  419d1b:	std    
  419d1c:	je     0x419d66
  419d1e:	and    esp,esi
  419d20:	pop    ebx
  419d21:	sub    dl,BYTE PTR [ecx-0x1e]
  419d24:	jo     0x419d80
  419d26:	adc    al,0xe8
  419d28:	inc    ebp
  419d29:	xor    eax,0x1d45e525
  419d2e:	sbb    eax,0x3e4a6142
  419d33:	imul   BYTE PTR [ebp+0x3d]
  419d36:	inc    edx
  419d37:	or     DWORD PTR [esi+0x35],eax
  419d3a:	and    eax,0x1f1b62d8
  419d3f:	out    0x71,al
  419d41:	jmp    0x3cb19a3a
  419d46:	and    ah,dh
  419d48:	jno    0x419d69
  419d4a:	push   esp
  419d4b:	hlt    
  419d4c:	bound  eax,QWORD PTR [eax]
  419d4e:	sbb    bh,al
  419d50:	jae    0x419dc2
  419d52:	add    BYTE PTR [eax],bh
  419d54:	outs   dx,DWORD PTR es:[esi]
  419d56:	jae    0x419d6f
  419d58:	and    BYTE PTR [edx+0x64],dh
  419d5b:	sbb    BYTE PTR [eax],dh
  419d5d:	inc    esi
  419d5e:	je     0x419d48
  419d60:	cmp    al,0x5d
  419d62:	jae    0x419d3f
  419d64:	pop    ss
  419d65:	imul   esi,DWORD PTR [edx-0x1c],0xc
  419d69:	inc    esi
  419d6a:	je     0x419d74
  419d6c:	leave  
  419d6d:	fs jb  0x419d65
  419d70:	sub    esi,DWORD PTR [edi+ebp*2-0x66]
  419d74:	or     eax,0xc68f5300
  419d79:	push   ebx
  419d7a:	push   edi
  419d7b:	cdq    
  419d7c:	cmp    al,BYTE PTR [ecx+0x5c]
  419d7f:	jle    0x419d4c
  419d81:	inc    edi
  419d82:	and    BYTE PTR [ebx+0x1f],bh
  419d85:	data16 je 0x419d1f
  419d88:	and    eax,0xc6dc6572
  419d8d:	imul   ebp,DWORD PTR [ecx-0x42],0x27
  419d91:	pop    esp
  419d92:	inc    ecx
  419d93:	stos   DWORD PTR es:[edi],eax
  419d94:	sub    ebp,DWORD PTR [ebx+0x75]
  419d97:	scas   al,BYTE PTR es:[edi]
  419d98:	sbb    BYTE PTR [edi+0x0],ch
  419d9b:	stos   DWORD PTR es:[edi],eax
  419d9c:	pop    ds
  419d9d:	data16 je 0x419d87
  419da0:	sub    esi,DWORD PTR [edx+0x65]
  419da3:	cmp    al,0xc7
  419da5:	push   ebx
  419da6:	push   eax
  419da7:	dec    ebx
  419da8:	sub    DWORD PTR [ebp+0x65],esp
  419dab:	and    DWORD PTR cs:[ebx+edx*2+0x1],ebx
  419db0:	and    DWORD PTR [ecx+0x73],esp
  419db3:	dec    eax
  419db4:	cmp    DWORD PTR [ebx+0x66],ebp
  419db7:	add    BYTE PTR [esi+edx*1],dl
  419dba:	pop    ebp
  419dbb:	jb     0x419db2
  419dbd:	cmp    BYTE PTR [edi+0x6f],cl
  419dc0:	and    DWORD PTR ss:[eax+0x2e],ebx
  419dc4:	das    
  419dc5:	sbb    esp,DWORD PTR [ebx+0x5c]
  419dc8:	xor    DWORD PTR [eax],esi
  419dca:	cmp    BYTE PTR [eax+0x72],dl
  419dcd:	jle    0x419de9
  419dcf:	arpl   WORD PTR [edi-0x77aed282],dx
  419dd5:	jbe    0x419dfd
  419dd7:	jno    0x419e0a
  419dd9:	dec    eax
  419dda:	sbb    al,0x78
  419ddc:	xchg   edx,eax
  419ddd:	jb     0x419dba
  419ddf:	ins    BYTE PTR es:[edi],dx
  419de0:	xchg   ebp,eax
  419de1:	push   esi
  419de2:	add    DWORD PTR [esi-0x7b],esp
  419de5:	bound  ebx,QWORD PTR ds:0xdb5e825f
  419deb:	ins    BYTE PTR es:[edi],dx
  419dec:	bound  eax,QWORD PTR [esi+0x1]
  419def:	pop    esp
  419df0:	outs   dx,BYTE PTR ds:[esi]
  419df1:	mov    ds:0xb6576d30,al
  419df6:	adc    al,0x5f
  419df8:	arpl   WORD PTR [ebp+0x2d],cx
  419dfb:	inc    esp
  419dfc:	pop    eax
  419dfd:	les    esp,FWORD PTR [esi]
  419dff:	popa   
  419e00:	cmp    eax,0x11770f97
  419e05:	scas   eax,DWORD PTR es:[edi]
  419e06:	adc    DWORD PTR [ebx+0x42],esi
  419e09:	jb     0x419e38
  419e0b:	push   ecx
  419e0c:	sbb    DWORD PTR [ecx-0x5cf29cf1],edx
  419e12:	es je  0x419e3a
  419e15:	cdq    
  419e16:	sbb    esp,DWORD PTR [ebp+0x22]
  419e19:	dec    eax
  419e1a:	and    BYTE PTR [ecx+0x0],ah
  419e1d:	add    dh,BYTE PTR [edx+0x2d]
  419e20:	push   ecx
  419e21:	sbb    ecx,edx
  419e23:	adc    DWORD PTR [ebx+0x15],esp
  419e26:	inc    ebx
  419e27:	and    eax,0x1dc8fd74
  419e2c:	gs loop 0x419e5d
  419e2f:	rcr    DWORD PTR [ecx+eiz*1+0x27],1
  419e33:	aad    0x2d
  419e35:	rcl    dl,cl
  419e37:	push   cs
  419e38:	add    ch,dh
  419e3a:	and    bl,BYTE PTR [edi+ebx*2]
  419e3d:	ret    
  419e3e:	les    esp,FWORD PTR [edi]
  419e40:	push   ecx
  419e41:	int3   
  419e42:	or     BYTE PTR [ebx],bl
  419e44:	sbb    dh,dl
  419e46:	out    dx,al
  419e47:	add    eax,0x17fc0711
  419e4c:	and    BYTE PTR [esi-0x7afbfc0b],dl
  419e52:	fimul  DWORD PTR [esi]
  419e54:	and    esp,DWORD PTR [ebx-0x6dcefd1c]
  419e5a:	cmc    
  419e5b:	cli    
  419e5c:	sbb    bl,BYTE PTR [edi+0x562cf9e6]
  419e62:	ficom  WORD PTR [esi]
  419e64:	sub    eax,0x12da2f42
  419e69:	test   eax,esi
  419e6b:	fisub  DWORD PTR [esi]
  419e6d:	xor    ebp,ebx
  419e6f:	test   eax,0xcbe74f1c
  419e74:	es jo  0x419e6b
  419e77:	mov    dh,0xe3
  419e79:	sub    esi,0xe84417cc
  419e7f:	mov    eax,0xed310026
  419e84:	mov    esp,DWORD PTR [edx]
  419e86:	inc    ecx
  419e87:	out    0x92,eax
  419e89:	adc    esi,DWORD PTR [ecx]
  419e8b:	hlt    
  419e8c:	test   BYTE PTR [edi],bl
  419e8e:	adc    ch,al
  419e90:	xchg   esi,eax
  419e91:	fst    QWORD PTR [ebx]
  419e93:	add    DWORD PTR [ebx+eax*1+0x2672f020],ecx
  419e9a:	and    BYTE PTR [edi],ch
  419e9c:	mov    esp,DWORD PTR [edx]
  419e9e:	add    eax,0xfd1a7a09
  419ea3:	jecxz  0x419efe
  419ea5:	ficom  DWORD PTR [edi]
  419ea7:	out    dx,eax
  419ea8:	dec    edi
  419ea9:	add    al,0xd5
  419eab:	int3   
  419eac:	dec    ebx
  419ead:	and    eax,0x1647d5e1
  419eb2:	rcr    ah,cl
  419eb4:	xor    ah,BYTE PTR [ecx]
  419eb6:	(bad)  
  419eb7:	clc    
  419eb8:	and    al,0x30
  419eba:	add    DWORD PTR [ecx],ecx
  419ebc:	add    BYTE PTR [edx],bl
  419ebe:	or     al,bh
  419ec0:	push   ebx
  419ec1:	push   ss
  419ec2:	in     al,dx
  419ec3:	fiadd  DWORD PTR [edx+0x45]
  419ec6:	stc    
  419ec7:	jmp    0xde43b82a
  419ecc:	jno    0x419eda
  419ece:	xor    eax,0x411a6dc6
  419ed3:	fisubr WORD PTR [ebx+0x15]
  419ed6:	fidiv  WORD PTR gs:[ebx+0x11]
  419eda:	sub    eax,0x55fd5ec5
  419edf:	lds    esp,FWORD PTR [esi-0x5]
  419ee2:	xor    bl,cl
  419ee4:	pop    esi
  419ee5:	fiadd  DWORD PTR [eax]
  419ee7:	daa    
  419ee8:	hlt    
  419ee9:	ins    BYTE PTR es:[edi],dx
  419eea:	fist   DWORD PTR [esi]
  419eec:	or     DWORD PTR [eax-0x3a],ecx
  419eef:	inc    edi
  419ef0:	cmc    
  419ef1:	dec    ebp
  419ef2:	enter  0xea49,0xff
  419ef6:	fwait
  419ef7:	inc    edi
  419ef8:	jmp    0xe962:0xf20daf71
  419eff:	add    al,0xea
  419f01:	push   0xffffffbe
  419f03:	ss jmp 0x9560:0xea249043
  419f0b:	sbb    edi,ebx
  419f0d:	jbe    0x419ef8
  419f0f:	(bad)  
  419f10:	in     al,dx
  419f11:	jno    0x419ea8
  419f13:	push   0x518b6afa
  419f18:	sti    
  419f19:	jmp    DWORD PTR [esi-0x798e26a1]
  419f1f:	ds in  al,dx
  419f21:	pusha  
  419f22:	jle    0x419f42
  419f24:	or     DWORD PTR [ecx+0x56],edx
  419f27:	push   ebx
  419f28:	cmc    
  419f29:	je     0x419f73
  419f2b:	pop    ds
  419f2c:	jmp    0x4073:0xfb14245b
  419f33:	dec    ebx
  419f34:	sub    DWORD PTR [eax+0x0],edx
  419f37:	sbb    bl,BYTE PTR [edi+eiz*2]
  419f3a:	jb     0x419f2d
  419f3c:	and    BYTE PTR [eax],al
  419f3e:	pop    esp
  419f3f:	dec    ebx
  419f40:	push   ebx
  419f41:	aas    
  419f42:	imul   edi,esp,0x667073ca
  419f48:	sbb    al,0x6e
  419f4a:	imul   eax,DWORD PTR [eax],0x53443f48
  419f50:	xor    DWORD PTR [ecx],ebx
  419f52:	popa   
  419f53:	jae    0x419f3b
  419f55:	sbb    eax,0x2508696e
  419f5a:	dec    esi
  419f5b:	gs sbb al,0x3d
  419f5e:	jb     0x419fc9
  419f60:	push   cs
  419f61:	sub    al,BYTE PTR [eax]
  419f63:	push   eax
  419f64:	cmp    DWORD PTR [edi+ebp*2],edx
  419f67:	push   edi
  419f68:	out    0x16,eax
  419f6a:	add    BYTE PTR fs:[ebp-0x52ff93ea],bh
  419f71:	adc    esp,DWORD PTR [ecx+0x72]
  419f74:	(bad)  
  419f75:	and    eax,0x36c86569
  419f7a:	imul   ebp,DWORD PTR [edi-0x64],0x3c
  419f7e:	gs jb  0x419f7e
  419f81:	and    esi,DWORD PTR [edi+ebp*2-0x76]
  419f85:	or     eax,0x16a75000
  419f8a:	je     0x419f8c
  419f8c:	jnp    0x419fad
  419f8e:	data16 je 0x419f60
  419f91:	and    eax,0x33d46572
  419f96:	imul   esi,DWORD PTR [ebp+0x1c],0x20
  419f9a:	and    BYTE PTR [edx-0x3f],dl
  419f9d:	sbb    ah,BYTE PTR [ecx+0x72]
  419fa0:	js     0x419fce
  419fa2:	popa   
  419fa3:	arpl   WORD PTR [eax-0x189394de],si
  419fa9:	sub    DWORD PTR [ebp+0x65],esp
  419fac:	(bad)  [eax]
  419fae:	push   ebx
  419faf:	add    BYTE PTR gs:[ecx],dh
  419fb2:	sar    BYTE PTR [edi],1
  419fb4:	jb     0x419f8e
  419fb6:	rcr    DWORD PTR [esp+ebx*2],cl
  419fb9:	repnz rcr BYTE PTR [ecx],cl
  419fbc:	outs   dx,BYTE PTR ds:[esi]
  419fbd:	int3   
  419fbe:	into   
  419fbf:	packuswb mm3,mm6
  419fc2:	ret    
  419fc3:	adc    al,BYTE PTR [eax]
  419fc5:	loop   0x419f8b
  419fc7:	adc    eax,0x301fd476
  419fcc:	ja     0x419f8f
  419fce:	add    al,0x4
  419fd0:	inc    esi
  419fd1:	test   DWORD PTR [edx-0x1c],eax
  419fd4:	inc    eax
  419fd5:	jbe    0x419ff3
  419fd7:	xor    BYTE PTR [edx+0x6e],dl
  419fda:	ss add al,0x46
  419fdd:	jge    0x41a001
  419fdf:	inc    ebx
  419fe0:	dec    ebp
  419fe1:	jg     0x41a055
  419fe3:	xlat   BYTE PTR ds:[ebx]
  419fe4:	outs   dx,DWORD PTR ds:[esi]
  419fe5:	add    DWORD PTR [esp+eax*1],0x5c
  419fe9:	popa   
  419fea:	pusha  
  419feb:	sbb    BYTE PTR [esi-0x78],ah
  419fee:	dec    esi
  419fef:	push   ds
  419ff0:	jno    0x41a023
  419ff2:	out    dx,eax
  419ff3:	add    al,0xfc
  419ff5:	fcom   QWORD PTR ss:[edx-0x18]
  419ff9:	dec    eax
  419ffa:	mov    edi,0xb649fd58
  419fff:	or     eax,0xd7030b70
  41a004:	dec    DWORD PTR [esi-0x4a]
  41a007:	or     eax,0xd8684270
  41a00c:	sub    al,0x31
  41a00e:	test   BYTE PTR ds:0xd8436b70,cl
  41a014:	inc    DWORD PTR [eax]
  41a016:	pop    ss
  41a017:	mov    ds:0x7210721e,al
  41a01c:	adc    BYTE PTR [edi+0x7],bl
  41a01f:	xchg   bh,dl
  41a021:	arpl   WORD PTR [eax],dx
  41a023:	inc    BYTE PTR [eax]
  41a025:	pop    ebp
  41a026:	loop   0x41a022
  41a028:	push   ds
  41a029:	je     0x41a031
  41a02b:	or     DWORD PTR [eax+0x16],ecx
  41a02e:	adc    bl,ch
  41a030:	sub    eax,0x47f6d214
  41a035:	in     al,0x1
  41a037:	in     al,dx
  41a038:	inc    esp
  41a039:	adc    ah,ah
  41a03b:	jmp    0xcd72bf78
  41a040:	inc    edi
  41a041:	adc    eax,0x1b2b28c5
  41a046:	ret    
  41a047:	in     eax,0x49
  41a049:	adc    ah,cl
  41a04b:	neg    BYTE PTR [edi]
  41a04d:	aad    0x36
  41a04f:	iret   
  41a050:	pop    es
  41a051:	adc    eax,0x1a2029a5
  41a056:	mov    al,ds:0x8d1807f5
  41a05b:	sub    DWORD PTR [edi],edx
  41a05d:	and    ebx,DWORD PTR [ebp-0x7ec7190f]
  41a063:	in     al,0xf8
  41a065:	and    dl,BYTE PTR [edi-0x2f]
  41a068:	adc    dh,BYTE PTR [edi]
  41a06a:	ins    DWORD PTR es:[edi],dx
  41a06b:	fstp   st(1)
  41a06d:	sbb    edx,DWORD PTR [edx+0x5c27caed]
  41a073:	stc    
  41a074:	retf   
  41a075:	sbb    DWORD PTR [ebp+0x16bde6],eax
  41a07b:	dec    edx
  41a07c:	call   0xf272c055
  41a081:	iret   
  41a082:	adc    al,0x52
  41a084:	jecxz  0x41a040
  41a086:	adc    eax,DWORD PTR [eax-0x9]
  41a089:	mov    ah,0x14
  41a08b:	movntq QWORD PTR [edi-0x5822cee7],mm1
  41a092:	and    al,0x12
  41a094:	(bad)  
  41a095:	lahf   
  41a096:	das    
  41a097:	xor    esi,edx
  41a099:	jge    0x41a0bc
  41a09b:	and    eax,0x121587f2
  41a0a0:	frstor [edi-0x38eddc]
  41a0a6:	lahf   
  41a0a7:	push   esi
  41a0a8:	or     DWORD PTR [ebx-0x65],ecx
  41a0ab:	dec    edi
  41a0ac:	or     DWORD PTR [ecx+0x36],edx
  41a0af:	aaa    
  41a0b0:	aad    0x54
  41a0b2:	sub    BYTE PTR [ebx],ah
  41a0b4:	(bad)  
  41a0b5:	pop    ebx
  41a0b6:	sub    cl,BYTE PTR [ecx-0x26]
  41a0b9:	jo     0x41a115
  41a0bb:	adc    al,bh
  41a0bd:	pop    ebx
  41a0be:	sbb    eax,0x2d62f924
  41a0c3:	sub    al,0xe7
  41a0c5:	pop    ebx
  41a0c6:	xor    dh,dl
  41a0c8:	(bad)  
  41a0c9:	cs daa 
  41a0cb:	arpl   cx,cx
  41a0cd:	das    
  41a0ce:	das    
  41a0cf:	pop    eax
  41a0d0:	xor    dh,BYTE PTR [eax]
  41a0d2:	loopne 0x41a0d2
  41a0d4:	cs xor al,0x28
  41a0d7:	ins    BYTE PTR es:[edi],dx
  41a0d8:	enter  0x2b2a,0x72
  41a0dc:	ret    
  41a0dd:	xor    dl,ah
  41a0df:	add    dh,ah
  41a0e1:	sub    bh,BYTE PTR [edi]
  41a0e3:	mov    bh,0xfe
  41a0e5:	(bad)  
  41a0e6:	xor    DWORD PTR [esi-0x49cacbbc],edi
  41a0ec:	sub    DWORD PTR [ecx],ecx
  41a0ee:	push   ecx
  41a0ef:	mov    dh,0x34
  41a0f1:	aad    0x54
  41a0f3:	test   al,0x20
  41a0f5:	(bad)  
  41a0f6:	pop    ebx
  41a0f7:	stos   BYTE PTR es:[edi],al
  41a0f8:	fidiv  DWORD PTR ds:[eax-0x26]
  41a0fc:	adc    eax,edi
  41a0fe:	pop    ebx
  41a0ff:	popf   
  41a100:	and    eax,0x2dad62f9
  41a105:	out    0x5b,eax
  41a107:	mov    dl,0xf5
  41a109:	(bad)  
  41a10a:	ds hlt 
  41a10c:	loope  0x41a144
  41a10e:	xor    ah,al
  41a110:	fld    st(6)
  41a112:	fild   DWORD PTR cs:[eax-0x7e21cbd2]
  41a119:	xor    al,0x2b
  41a11b:	stos   DWORD PTR es:[edi],eax
  41a11c:	repz xor esi,DWORD PTR [edi]
  41a11f:	add    BYTE PTR [ebp-0x38],bh
  41a122:	xor    edi,DWORD PTR [eax]
  41a124:	retf   0x4358
  41a127:	cmp    al,cl
  41a129:	dec    edx
  41a12a:	xor    BYTE PTR [edx],dh
  41a12c:	retf   
  41a12d:	adc    BYTE PTR [eax],al
  41a12f:	ja     0x41a112
  41a131:	adc    eax,0x15046661
  41a136:	outs   dx,DWORD PTR ds:[esi]
  41a137:	jb     0x41a13f
  41a139:	push   ss
  41a13a:	imul   ebx,DWORD PTR cs:[esi],0x177001c
  41a141:	push   ss
  41a142:	popa   
  41a143:	data16 add BYTE PTR [edx*1+0x1bee692e],al
  41a14b:	add    BYTE PTR [esi+0x24],al
  41a14e:	xor    eax,0x24116f56
  41a153:	arpl   WORD PTR [ebp+0x4a],sp
  41a156:	pop    edi
  41a157:	arpl   WORD PTR [eax+ecx*2+0xd],si
  41a15b:	inc    esi
  41a15c:	push   esp
  41a15d:	pop    eax
  41a15e:	daa    
  41a15f:	imul   edi,DWORD PTR [ecx+0x29],0x18
  41a163:	popa   
  41a164:	jb     0x41a164
  41a166:	sbb    eax,0x3b1c005f
  41a16b:	push   0x4f1ffe69
  41a170:	outs   dx,DWORD PTR ds:[esi]
  41a171:	out    0x8,al
  41a173:	cs arpl di,di
  41a176:	adc    DWORD PTR [eax],eax
  41a178:	outs   dx,BYTE PTR ds:[esi]
  41a179:	or     ebx,DWORD PTR [edi+ebp*1]
  41a17c:	cs hlt 
  41a17e:	and    BYTE PTR [eax+eax*1-0x62],ch
  41a182:	cmp    ecx,DWORD PTR [edi+0x5f]
  41a185:	sbb    DWORD PTR [esi],0x3ed87465
  41a18b:	dec    edi
  41a18c:	push   ebx
  41a18d:	scas   eax,DWORD PTR es:[edi]
  41a18e:	cmp    ebp,DWORD PTR [eax+0x75]
  41a191:	xchg   esp,eax
  41a192:	sbb    BYTE PTR [ebx+0x77],ch
  41a195:	mov    esi,0x31534e0c
  41a19a:	mov    bl,0x3f
  41a19c:	pop    edi
  41a19d:	and    cl,BYTE PTR [ebp-0x5a09cc35]
  41a1a3:	and    BYTE PTR [ecx+0x1e],ah
  41a1a6:	mov    fs,WORD PTR [eax]
  41a1a8:	inc    edx
  41a1a9:	add    ah,bh
  41a1ab:	xchg   DWORD PTR [ebx],ebx
  41a1ad:	arpl   WORD PTR [ebx],ax
  41a1af:	bound  esi,QWORD PTR [edx]
  41a1b1:	inc    ebx
  41a1b2:	repnz cmp BYTE PTR [eax],dh
  41a1b5:	inc    ebx
  41a1b6:	cld    
  41a1b7:	ss ds jb 0x41a187
  41a1bb:	les    edi,FWORD PTR [eax]
  41a1bd:	je     0x41a193
  41a1bf:	xor    al,0x4
  41a1c1:	push   eax
  41a1c2:	jmp    0xfcc:0xf65cd270
  41a1c9:	inc    edi
  41a1ca:	xlat   BYTE PTR ds:[ebx]
  41a1cb:	xor    eax,0xc0cf721d
  41a1d0:	pop    ss
  41a1d1:	dec    ecx
  41a1d2:	int3   
  41a1d3:	sub    BYTE PTR [edi],ch
  41a1d5:	ins    BYTE PTR es:[edi],dx
  41a1d6:	sahf   
  41a1d7:	push   ds
  41a1d8:	add    al,0x50
  41a1da:	jp     0x41a22d
  41a1dc:	rcr    BYTE PTR [eax+esi*2+0x1d],cl
  41a1e0:	adc    BYTE PTR [eax-0x74],ch
  41a1e3:	and    BYTE PTR [eax],dl
  41a1e5:	addr16 xchg edx,eax
  41a1e7:	add    DWORD PTR [eax],edx
  41a1e9:	arpl   WORD PTR [ecx],si
  41a1eb:	adc    dh,BYTE PTR [edi]
  41a1ed:	das    
  41a1ee:	inc    eax
  41a1ef:	adc    eax,DWORD PTR [eax+0x52]
  41a1f2:	push   esi
  41a1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1f4:	push   ds
  41a1f5:	popa   
  41a1f6:	arpl   WORD PTR [ecx+0x11],bp
  41a1f9:	je     0x41a22c
  41a1fb:	mov    dl,0x38
  41a1fd:	das    
  41a1fe:	and    BYTE PTR [edi+0x454c723b],ah
  41a204:	xor    BYTE PTR [esi+ebx*2-0x42],ch
  41a208:	add    DWORD PTR [eax],eax
  41a20a:	xor    DWORD PTR [edx+0x1],esp
  41a20d:	add    BYTE PTR [eax],al
  41a20f:	xor    DWORD PTR [edx+0x1],esp
  41a212:	add    BYTE PTR [ecx],dh
  41a214:	or     edi,esp
  41a216:	add    esi,DWORD PTR [ecx]
  41a218:	or     edi,esp
  41a21a:	add    esi,DWORD PTR [ecx]
  41a21c:	or     edi,esp
  41a21e:	add    esi,DWORD PTR [ecx]
  41a220:	or     edi,esp
  41a222:	add    esi,DWORD PTR [ecx]
  41a224:	or     edi,esp
  41a226:	add    esi,DWORD PTR [ecx]
  41a228:	or     edi,esp
  41a22a:	add    esi,DWORD PTR [ecx]
  41a22c:	cld    
  41a22d:	ja     0x41a246
  41a22f:	push   ss
  41a230:	std    
  41a231:	adc    eax,0x44
  41a234:	in     eax,dx
  41a235:	push   edx
  41a236:	sbb    BYTE PTR [ecx],dh
  41a238:	cld    
  41a239:	push   edi
  41a23a:	sbb    dh,cl
  41a23c:	cld    
  41a23d:	dec    ebx
  41a23e:	sar    ebp,1
  41a240:	out    0x56,eax
  41a242:	pop    ds
  41a243:	(bad)  
  41a244:	or     BYTE PTR [edx],bh
  41a246:	adc    ebx,ebp
  41a248:	loope  0x41a27c
  41a24a:	pop    ds
  41a24b:	add    al,bl
  41a24d:	dec    ecx
  41a24e:	sbb    ah,cl
  41a250:	sti    
  41a251:	inc    ebx
  41a252:	add    al,0xc0
  41a254:	stc    
  41a255:	adc    bl,BYTE PTR [ebx]
  41a257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a258:	in     al,dx
  41a259:	fldenv [ecx+eiz*4]
  41a25c:	sti    
  41a25d:	or     edx,DWORD PTR [esi+edi*2]
  41a260:	sti    
  41a261:	add    eax,DWORD PTR [eax+eiz*4]
  41a264:	clc    
  41a265:	adc    bl,BYTE PTR [ebx]
  41a267:	test   esp,ebp
  41a269:	mov    ecx,0xbfd8024
  41a26e:	adc    al,0x31
  41a270:	cli    
  41a271:	not    DWORD PTR [edi]
  41a273:	add    BYTE PTR [esi-0x722f3403],cl
  41a279:	jmp    0x24c4:0xe46217cd
  41a280:	push   ebx
  41a281:	lock rcr BYTE PTR [esi],cl
  41a284:	pusha  
  41a285:	or     DWORD PTR [edx-0x4d1fa2ee],edi
  41a28b:	push   ds
  41a28c:	add    dh,dl
  41a28e:	dec    ecx
  41a290:	and    eax,0x1cbc72e5
  41a295:	aam    0x61
  41a297:	xchg   ebp,eax
  41a298:	inc    ebp
  41a299:	jmp    0x41a29a
  41a29b:	call   0x9abb86df
  41a2a0:	inc    ebx
  41a2a1:	in     eax,0x66
  41a2a3:	xchg   ebp,eax
  41a2a4:	aaa    
  41a2a5:	cmp    BYTE PTR [esi],ch
  41a2a7:	lea    esp,[esi]
  41a2a9:	in     eax,0xff
  41a2ab:	jns    0x41a2d0
  41a2ad:	in     eax,0x66
  41a2af:	jge    0x41a2d0
  41a2b1:	cmp    BYTE PTR [ebp+0x7e],bl
  41a2b4:	and    ch,dl
  41a2b6:	ins    DWORD PTR es:[edi],dx
  41a2b7:	jmp    0x50ad8a23
  41a2bc:	imul   ebp,ebx,0xe2563630
  41a2c2:	ins    BYTE PTR es:[edi],dx
  41a2c3:	pop    edx
  41a2c4:	dec    eax
  41a2c5:	jbe    0x41a339
  41a2c7:	cmp    BYTE PTR [ecx-0x11],al
  41a2ca:	jae    0x41a310
  41a2cc:	(bad)  
  41a2cd:	shr    DWORD PTR [edi+0x3b],cl
  41a2d0:	dec    eax
  41a2d1:	out    0x5e,al
  41a2d3:	cmp    ecx,DWORD PTR [eax+0x76]
  41a2d6:	jb     0x41a2f0
  41a2d8:	add    BYTE PTR [ecx],ah
  41a2da:	out    dx,eax
  41a2db:	jae    0x41a2e1
  41a2dd:	pop    esi
  41a2de:	aam    0x70
  41a2e0:	sbb    eax,0x19ffe608
  41a2e5:	sbb    al,0xe2
  41a2e7:	data16 std 
  41a2e9:	sbb    DWORD PTR [ecx],edi
  41a2eb:	pop    ebp
  41a2ec:	or     al,BYTE PTR [edx]
  41a2ee:	loop   0x41a362
  41a2f0:	add    al,0x3
  41a2f2:	aad    0x61
  41a2f4:	lock (bad) 
  41a2f6:	jmp    0xd06b:0xe6e7e970
  41a2fd:	fsubp  st(2),st
  41a2ff:	xor    BYTE PTR [esi-0x2b941b29],dh
  41a305:	loope  0x41a2ea
  41a307:	pop    esp
  41a308:	add    dl,bh
  41a30a:	gs ins BYTE PTR es:[edi],dx
  41a30c:	(bad)  
  41a30d:	fmul   DWORD PTR [ecx]
  41a30f:	add    BYTE PTR [eax],al
  41a311:	enter  0x9,0x0
  41a315:	enter  0x9,0x0
  41a319:	cwde   
  41a31a:	or     DWORD PTR [eax],eax
  41a31c:	add    BYTE PTR [eax-0x77fffff7],bl
  41a322:	or     DWORD PTR [eax],eax
  41a324:	add    BYTE PTR [eax-0x67fffff7],cl
  41a32a:	or     DWORD PTR [eax],eax
  41a32c:	add    BYTE PTR [eax-0x488d8ff7],bl
  41a332:	pop    edi
  41a333:	data16 ins BYTE PTR es:[edi],dx
  41a335:	lods   eax,DWORD PTR ds:[esi]
  41a336:	jle    0x41a363
  41a338:	imul   eax,DWORD PTR [esi],0x4ffd64
  41a33e:	or     bh,BYTE PTR [edx+0x63]
  41a341:	imul   esi,esp,0xfb48fd5f
  41a347:	pop    esi
  41a348:	bound  ebp,QWORD PTR [ecx+edi*8+0x70]
  41a34c:	data16 jbe 0x41a33c
  41a34f:	or     al,0x50
  41a351:	popa   
  41a352:	cld    
  41a353:	fs std 
  41a355:	dec    edi
  41a356:	jmp    0x479608cb
  41a35b:	inc    edx
  41a35c:	jne    0x41a3c3
  41a35e:	sbb    BYTE PTR [ecx+0x6f],bh
  41a361:	gs cs jl 0x41a390
  41a365:	push   0x3b
  41a367:	or     eax,0x773f696f
  41a36c:	ins    BYTE PTR es:[edi],dx
  41a36d:	outs   dx,BYTE PTR ds:[esi]
  41a36e:	or     edi,DWORD PTR [ebx]
  41a370:	outs   dx,DWORD PTR ds:[esi]
  41a371:	jno    0x41a3a7
  41a373:	data16 jno 0x41a3db
  41a376:	or     BYTE PTR [esi+eiz*2+0x67],bh
  41a37a:	push   es
  41a37b:	js     0x41a3e8
  41a37d:	jae    0x41a3b5
  41a37f:	jno    0x41a3f6
  41a381:	je     0x41a3b4
  41a383:	(bad)  
  41a384:	mul    BYTE PTR [esi+0x4e]
  41a387:	mov    ah,0xf2
  41a389:	ins    DWORD PTR es:[edi],dx
  41a38a:	inc    edx
  41a38b:	jo     0x41a3bc
  41a38d:	je     0x41a3d8
  41a38f:	mov    esi,0x43487101
  41a394:	out    dx,eax
  41a395:	ins    BYTE PTR es:[edi],dx
  41a396:	inc    edi
  41a397:	scas   eax,DWORD PTR es:[edi]
  41a398:	ss cs and eax,0x53fff5aa
  41a39f:	push   eax
  41a3a0:	out    0xff,al
  41a3a2:	add    BYTE PTR [ebx+0x50],dl
  41a3a5:	in     eax,0xff
  41a3a7:	push   ebx
  41a3a8:	push   eax
  41a3a9:	call   0xcde687ad
  41a3ae:	inc    edx
  41a3af:	repnz popf 
  41a3b1:	and    DWORD PTR [eax+0xe],ebp
  41a3b4:	out    dx,eax
  41a3b5:	hlt    
  41a3b6:	ins    DWORD PTR es:[edi],dx
  41a3b7:	adc    ch,dh
  41a3b9:	out    0x2b,eax
  41a3bb:	adc    ebp,eax
  41a3bd:	icebp  
  41a3be:	pusha  
  41a3bf:	jecxz  0x41a3a9
  41a3c1:	repz jae 0x41a398
  41a3c4:	(bad)
  41a3c7:	int3   
  41a3c8:	iret   
  41a3c9:	icebp  
  41a3ca:	pop    esi
  41a3cb:	fadd   st(4),st
  41a3cd:	das    
  41a3ce:	and    ah,cl
  41a3d0:	ret    
  41a3d1:	loop   0x41a444
  41a3d3:	mov    eax,0xcd62f831
  41a3d8:	adc    ecx,esp
  41a3da:	jo     0x41a37e
  41a3dc:	adc    ebp,edi
  41a3de:	jno    0x41a36d
  41a3e0:	inc    edx
  41a3e1:	(bad)  
  41a3e2:	push   ecx
  41a3e3:	outs   dx,BYTE PTR ds:[esi]
  41a3e4:	sub    eax,0x18866b24
  41a3e9:	fild   QWORD PTR [ebx-0x62]
  41a3ec:	add    ebp,ecx
  41a3ee:	ins    DWORD PTR es:[edi],dx
  41a3ef:	and    BYTE PTR [edx-0x39],0x66
  41a3f3:	add    DWORD PTR ds:0x62796cea,0xffffffdd
  41a3fa:	dec    edx
  41a3fb:	pop    esi
  41a3fc:	or     ecx,esp
  41a3fe:	jmp    0xe274:0xdfc7e55a
  41a405:	fsub   st,st(6)
  41a407:	add    BYTE PTR [esp+eiz*8-0x32],cl
  41a40b:	(bad)  
  41a40d:	(bad)  
  41a40e:	aad    0xe9
  41a410:	inc    edx
  41a411:	cld    
  41a412:	(bad)  
  41a413:	cmc    
  41a414:	push   ebx
  41a415:	aad    0xa3
  41a417:	lock cmp dl,ah
  41a41a:	mov    edx,0xd4090fef
  41a41f:	cs pop edx
  41a421:	or     DWORD PTR [ebp-0x39d0f109],eax
  41a427:	xor    BYTE PTR [ecx],dh
  41a429:	loope  0x41a3bd
  41a42b:	neg    DWORD PTR [esi]
  41a42d:	das    
  41a42e:	(bad)  
  41a42f:	xor    BYTE PTR [ecx],dh
  41a431:	loope  0x41a4a5
  41a433:	test   DWORD PTR [esi],0x4430b0f8
  41a439:	or     DWORD PTR [ebp-0x18dd2109],eax
  41a43f:	jmp    0xca859b13
  41a444:	add    bl,cl
  41a446:	pop    ecx
  41a447:	jmp    0x41a42b
  41a449:	in     eax,dx
  41a44a:	pop    ecx
  41a44b:	xor    dl,ch
  41a44d:	jmp    0xee21a88c
  41a452:	inc    edi
  41a453:	iret   
  41a454:	int    0xe2
  41a456:	inc    ecx
  41a457:	out    0xbf,eax
  41a459:	or     BYTE PTR [ebx],cl
  41a45b:	iret   
  41a45c:	popf   
  41a45d:	out    dx,eax
  41a45e:	(bad)  
  41a460:	call   0x23e8:0x93d53ae8
  41a467:	icebp  
  41a468:	test   dh,bl
  41a46a:	add    edi,ebx
  41a46c:	add    BYTE PTR [edx+0x9],ch
  41a46f:	sub    eax,0x11e695f0
  41a474:	add    al,0x5d
  41a476:	retf   
  41a477:	inc    DWORD PTR [eax+eax*1]
  41a47a:	jmp    0xde6c:0xf8f70d68
  41a481:	fucom  st(7)
  41a483:	jno    0x41a442
  41a485:	xor    bh,BYTE PTR [esi-0x21342c94]
  41a48b:	imul   ecx,eax,0x32
  41a48e:	aad    0x4a
  41a490:	(bad)  
  41a491:	(bad)  
  41a492:	jmp    0x41a4ff
  41a494:	int    0xd3
  41a496:	into   
  41a497:	dec    edi
  41a498:	mov    ebx,0xbd66ecc1
  41a49d:	xchg   edi,eax
  41a49e:	stc    
  41a49f:	pop    ebx
  41a4a0:	jmp    0x95a78a22
  41a4a5:	cdq    
  41a4a6:	shl    DWORD PTR [ecx-0x74],cl
  41a4a9:	jbe    0x41a469
  41a4ab:	bound  eax,QWORD PTR [ebp+edx*4+0x629d45ea]
  41a4b2:	jb     0x41a4f4
  41a4b4:	jns    0x41a438
  41a4b6:	(bad)  
  41a4b7:	data16 jnp 0x41a4ec
  41a4ba:	lds    ebp,FWORD PTR [edx+ecx*4+0x53]
  41a4be:	fiadd  WORD PTR [ebx+0x50]
  41a4c1:	arpl   WORD PTR [edx+0x5f],si
  41a4c4:	dec    esi
  41a4c5:	dec    esi
  41a4c6:	loope  0x41a532
  41a4c8:	dec    eax
  41a4c9:	arpl   cx,sp
  41a4cb:	sub    eax,0xfff65445
  41a4d0:	sbb    DWORD PTR [eax],eax
  41a4d2:	push   esp
  41a4d3:	mul    BYTE PTR [edx+0x30]
  41a4d6:	dec    edi
  41a4d7:	in     al,dx
  41a4d8:	ins    BYTE PTR es:[edi],dx
  41a4d9:	pop    es
  41a4da:	pop    esp
  41a4db:	int3   
  41a4dc:	dec    edi
  41a4dd:	jmp    0x17a88ae1
  41a4e2:	sub    eax,0xe175ecb
  41a4e7:	clc    
  41a4e8:	sbb    ax,0xf908
  41a4ec:	sub    eax,0xfff61405
  41a4f1:	jmp    DWORD PTR [edi]
  41a4f3:	imul   eax,DWORD PTR fs:[esi+0x24],0x5d
  41a4f8:	std    
  41a4f9:	jb     0x41a52c
  41a4fb:	jno    0x41a55f
  41a4fd:	jae    0x41a4ad
  41a4ff:	imul   ebx,DWORD PTR [edi+0x0],0x4950419b
  41a506:	xchg   esp,eax
  41a507:	push   ecx
  41a508:	js     0x41a53b
  41a50a:	cmp    DWORD PTR [esi+0x2e],eax
  41a50d:	inc    esp
  41a50e:	daa    
  41a50f:	xor    DWORD PTR ds:0x3134992d,ebp
  41a515:	inc    edx
  41a516:	sub    eax,0xba642d3c
  41a51b:	cmp    BYTE PTR [eax],bh
  41a51d:	inc    ecx
  41a51e:	mov    al,ds:0x88302935
  41a523:	sub    eax,0x47d44130
  41a528:	xor    BYTE PTR [edx],dh
  41a52a:	(bad)  
  41a52b:	dec    ebx
  41a52c:	xor    DWORD PTR [ebp-0x24],edi
  41a52f:	inc    esp
  41a530:	imul   edx,DWORD PTR [eax+0xa],0x63
  41a534:	pusha  
  41a535:	push   ebx
  41a536:	add    BYTE PTR [ebp-0x59a8c89],dh
  41a53c:	xor    al,BYTE PTR ss:[eax]
  41a53f:	jmp    0x41a5a1
  41a541:	outs   dx,DWORD PTR ds:[esi]
  41a542:	jbe    0x41a539
  41a544:	jbe    0x41a5b6
  41a546:	shl    BYTE PTR cs:[edi+0x69],1
  41a54a:	add    BYTE PTR [ebx+ecx*2],bl
  41a54d:	push   ecx
  41a54e:	push   eax
  41a54f:	pop    ss
  41a550:	pusha  
  41a551:	jno    0x41a5c7
  41a553:	cmc    
  41a554:	jbe    0x41a553
  41a556:	inc    esp
  41a557:	sbb    edx,DWORD PTR [ecx+0x61]
  41a55a:	bound  edi,QWORD PTR [edx]
  41a55c:	and    esp,DWORD PTR [ecx+eiz*2+0x64]
  41a560:	add    eax,0x7139444d
  41a565:	pop    esi
  41a566:	cs xor al,0x66
  41a569:	jno    0x41a56b
  41a56b:	xor    DWORD PTR [esi],esi
  41a56d:	(bad)  
  41a56e:	jo     0x41a4f5
  41a570:	adc    ebp,ebp
  41a572:	gs jge 0x41a59b
  41a575:	ret    
  41a576:	dec    ebx
  41a577:	ja     0x41a58f
  41a579:	aam    0xff
  41a57b:	imul   ecx,DWORD PTR [eax],0x706362f8
  41a581:	call   0xf9deb6f9
  41a586:	outs   dx,DWORD PTR ds:[esi]
  41a587:	dec    ebp
  41a588:	aas    
  41a589:	out    dx,eax
  41a58a:	bound  esp,QWORD PTR [ebx+0x62]
  41a58d:	(bad)  
  41a58e:	pop    di
  41a590:	dec    ecx
  41a591:	jmp    0x41a5f5
  41a593:	cmp    eax,0x4960e4a3
  41a598:	inc    ebp
  41a599:	ret    0x71
  41a59c:	dec    esp
  41a59d:	ds call 0xe48acb10
  41a5a3:	imul   esp,DWORD PTR [edx],0x62
  41a5a6:	rcl    BYTE PTR [eax+0x51],1
  41a5a9:	mov    ecx,0xadef1fc8
  41a5ae:	rcr    DWORD PTR [edi],1
  41a5b0:	loope  0x41a532
  41a5b2:	bnd jo 0x41a5b3
  41a5b5:	xchg   esi,eax
  41a5b6:	out    dx,eax
  41a5b7:	arpl   WORD PTR [edx],ax
  41a5b9:	(bad)  
  41a5ba:	lds    ecx,FWORD PTR [edi-0x10]
  41a5bd:	xchg   ecx,eax
  41a5be:	int3   
  41a5bf:	cmp    DWORD PTR [ecx],edx
  41a5c1:	(bad)  
  41a5c3:	dec    ecx
  41a5c4:	push   ds
  41a5c5:	es push 0xbc716eba
  41a5cb:	jnp    0x41a5fe
  41a5cd:	mov    WORD PTR [edi+eiz*2],es
  41a5d0:	imul   DWORD PTR [edi+0x5fe49c1]
  41a5d6:	push   0xbc516eba
  41a5db:	jnp    0x41a60e
  41a5dd:	mov    WORD PTR [edi+eiz*2],es
  41a5e0:	ja     0x41a592
  41a5e2:	ret    0x5e49
  41a5e5:	or     ebx,esp
  41a5e7:	fstp   TBYTE PTR [bx]
  41a5ea:	clc    
  41a5eb:	mov    esp,0x441099a
  41a5f0:	xchg   esi,eax
  41a5f1:	(bad)  
  41a5f2:	jl     0x41a631
  41a5f4:	xor    DWORD PTR [ecx],ecx
  41a5f6:	out    0x26,eax
  41a5f8:	inc    ecx
  41a5f9:	cmp    ebx,DWORD PTR [edi]
  41a5fb:	add    al,0x60
  41a5fd:	loopne 0x41a60b
  41a5ff:	clc    
  41a600:	add    BYTE PTR [ebp-0x16],ah
  41a603:	clc    
  41a604:	out    0x8a,al
  41a606:	mov    esi,0xe060e0cf
  41a60b:	fldlg2 
  41a60d:	dec    esp
  41a60e:	cmc    
  41a60f:	mov    dl,0xca
  41a611:	pop    esp
  41a612:	cmc    
  41a613:	ret    
  41a614:	icebp  
  41a615:	push   esp
  41a616:	out    0xba,al
  41a618:	and    esi,DWORD PTR [edx-0xf]
  41a61b:	mov    dh,0xef
  41a61d:	inc    ebp
  41a61e:	sti    
  41a61f:	retf   
  41a620:	icebp  
  41a621:	or     al,dl
  41a623:	mov    esp,0x92dd13f7
  41a628:	jmp    0xcd21:0xee98dff4
  41a62f:	mov    ecx,0x87fb1df7
  41a634:	in     al,0x13
  41a636:	cmp    esp,edi
  41a638:	add    esi,DWORD PTR [ecx]
  41a63a:	or     edi,esp
  41a63c:	loop   0x41a6b4
  41a63e:	jmp    0x39b08d29
  41a643:	out    0x3b,eax
  41a645:	xor    DWORD PTR [edi],esi
  41a647:	out    0x3a,eax
  41a649:	xor    edi,esp
  41a64b:	out    0x2e,al
  41a64d:	xor    DWORD PTR [edx],esi
  41a64f:	out    0xe1,eax
  41a651:	dec    esi
  41a652:	cmp    esp,edi
  41a654:	xor    al,0x31
  41a656:	push   ds
  41a657:	out    0x37,eax
  41a659:	xor    esp,ebp
  41a65b:	out    0xe7,al
  41a65d:	xor    BYTE PTR ss:[eax],al
  41a660:	jmp    0xe9a0afc4
  41a665:	add    BYTE PTR [ecx+0x9],ah
  41a668:	xor    ebp,ecx
  41a66a:	pop    edx
  41a66b:	or     DWORD PTR [ebx],ebp
  41a66d:	jmp    0xe9711583
  41a672:	inc    eax
  41a673:	or     DWORD PTR [edi],esi
  41a675:	jmp    0xe975afbc
  41a67a:	push   ss
  41a67b:	outs   dx,DWORD PTR ds:[esi]
  41a67c:	pop    edi
  41a67d:	jmp    0xe9781595
  41a682:	aam    0x6e
  41a684:	ss jmp 0xd08cafbc
  41a68a:	sar    eax,1
  41a68c:	ins    BYTE PTR es:[edi],dx
  41a68d:	fcmovb st,st(5)
  41a68f:	in     al,0x73
  41a691:	mov    dh,0xe5
  41a693:	out    0x6d,eax
  41a695:	mov    al,ds:0xa673ebd4
  41a69a:	or     BYTE PTR [ecx],cl
  41a69c:	data16 mov ch,0xc2
  41a69f:	xor    BYTE PTR ds:0x6cd83506,ch
  41a6a5:	(bad)  
  41a6a6:	sahf   
  41a6a7:	cmc    
  41a6a8:	pop    esi
  41a6a9:	fwait
  41a6aa:	xchg   edi,eax
  41a6ab:	sar    BYTE PTR [esi],cl
  41a6ad:	test   DWORD PTR [ebp+0x71b562e8],eax
  41a6b3:	(bad)  [edx+0x7c]
  41a6b6:	xchg   ebp,eax
  41a6b7:	fdiv   st(7),st
  41a6b9:	cdq    
  41a6ba:	mov    edi,edx
  41a6bc:	bound  ebx,QWORD PTR [edx-0x738a0771]
  41a6c2:	pusha  
  41a6c3:	stc    
  41a6c4:	call   FWORD PTR [ecx+0x3a62fa5b]
  41a6ca:	add    BYTE PTR [eax-0x8],dl
  41a6cd:	jne    0x41a713
  41a6cf:	pop    edi
  41a6d0:	push   cs
  41a6d1:	and    ecx,DWORD PTR [ebp+0x69]
  41a6d4:	(bad)  
  41a6d5:	ins    BYTE PTR es:[edi],dx
  41a6d6:	pop    edx
  41a6d7:	inc    ecx
  41a6d8:	outs   dx,BYTE PTR ds:[esi]
  41a6d9:	push   edx
  41a6da:	add    cl,ah
  41a6dc:	js     0x41a740
  41a6de:	push   ebx
  41a6df:	in     eax,dx
  41a6e0:	jbe    0x41a755
  41a6e2:	gs push 0x25
  41a6e5:	and    DWORD PTR [esp+esi*1+0x5a],esp
  41a6e9:	bound  esp,QWORD PTR [edx+0x5d]
  41a6ec:	ja     0x41a757
  41a6ee:	add    BYTE PTR [ebx+0x5c],bl
  41a6f1:	jno    0x41a758
  41a6f3:	dec    ebx
  41a6f4:	push   0x772d766f
  41a6f9:	sbb    eax,0x4f512c25
  41a6fe:	gs and eax,0xf8657162
  41a704:	lods   eax,DWORD PTR ds:[esi]
  41a705:	data16 jb 0x41a735
  41a708:	data16 jno 0x41a77a
  41a70b:	cli    
  41a70c:	ins    BYTE PTR es:[edi],dx
  41a70d:	std    
  41a70e:	push   edx
  41a70f:	add    DWORD PTR [esi+0x62],ebx
  41a712:	push   ebx
  41a713:	std    
  41a714:	jae    0x41a789
  41a716:	gs jmp 0x7058:0x25642129
  41a71e:	gs jp  0x41a72a
  41a721:	dec    edi
  41a722:	imul   ebp,esp,0xea655068
  41a728:	ja     0x41a78c
  41a72a:	jb     0x41a794
  41a72c:	sub    BYTE PTR [ebp+ebp*1+0x0],ah
  41a730:	fnsave [esi+0x62]
  41a733:	jb     0x41a7ad
  41a735:	pop    ecx
  41a736:	push   esp
  41a737:	add    BYTE PTR [ebp+0x76],ch
  41a73a:	pop    ecx
  41a73b:	dec    ebx
  41a73c:	lods   eax,DWORD PTR ds:[esi]
  41a73d:	ins    BYTE PTR es:[edi],dx
  41a73e:	pusha  
  41a73f:	push   0x6b5ca9
  41a744:	retf   
  41a745:	pop    esp
  41a746:	jno    0x41a7ad
  41a748:	retf   
  41a749:	push   0x76ed766f
  41a74e:	sbb    eax,0x5050ec25
  41a753:	inc    esi
  41a754:	xor    DWORD PTR [esp+edx*8],ebp
  41a757:	push   edx
  41a759:	(bad)  
  41a75a:	out    0x72,eax
  41a75c:	mov    ecx,0xe153c1bc
  41a761:	pop    edi
  41a762:	mul    BYTE PTR [esi-0x5b]
  41a765:	mov    ebp,0x2da92df4
  41a76a:	call   0xe63f2f6e
  41a76f:	pop    ds
  41a770:	ins    DWORD PTR es:[edi],dx
  41a771:	add    eax,esi
  41a773:	pop    esi
  41a774:	xor    DWORD PTR [esi],esp
  41a776:	jmp    0x21ae3fdf
  41a77b:	inc    esp
  41a77c:	nop
  41a77d:	outs   dx,BYTE PTR ds:[esi]
  41a77e:	in     al,0xff
  41a780:	arpl   WORD PTR [ecx],dx
  41a782:	enter  0x6566,0xfd
  41a786:	and    esp,DWORD PTR [esi+0x56]
  41a789:	jo     0x41a773
  41a78b:	pop    esi
  41a78c:	add    dh,BYTE PTR gs:0xe3415d00
  41a793:	imul   eax,DWORD PTR [eax],0x54
  41a796:	bound  ebp,QWORD PTR [ecx]
  41a798:	add    BYTE PTR [eax],bl
  41a79a:	bound  esp,QWORD PTR [ecx]
  41a79c:	add    BYTE PTR [edx-0x4d],dh
  41a79f:	(bad)  
  41a7a0:	push   eax
  41a7a1:	pop    ebp
  41a7a2:	nop
  41a7a3:	les    eax,FWORD PTR [esi-0x1]
  41a7a6:	lea    eax,[ecx]
  41a7a8:	push   eax
  41a7a9:	add    ebp,DWORD PTR [ecx+0x49033ec8]
  41a7af:	add    DWORD PTR [ebx-0x19],edx
  41a7b2:	mov    eax,0x61f452d4
  41a7b7:	mov    BYTE PTR [edi-0x14],0x9e
  41a7bb:	into   
  41a7bc:	push   esp
  41a7be:	mov    dl,0xd3
  41a7c0:	inc    edx
  41a7c1:	call   0x6f416f68
  41a7c6:	xchg   dl,ch
  41a7c8:	fs fsubr st,st(3)
  41a7cb:	cmc    
  41a7cc:	dec    edi
  41a7ce:	or     BYTE PTR [ecx-0x15],bl
  41a7d1:	int    0xe1
  41a7d3:	dec    esp
  41a7d4:	fld    st(3)
  41a7d6:	test   BYTE PTR [edx+0x4],0xc1
  41a7da:	jmp    0xdc079d38
  41a7df:	cmp    al,ah
  41a7e1:	aad    0xf2
  41a7e3:	inc    edi
  41a7e4:	call   0xef288e8c
  41a7e9:	mov    eax,ds:0x7fea38e6
  41a7ee:	fimul  WORD PTR [ebx]
  41a7f0:	fstp   DWORD PTR [edx+ebp*8+0x993ef0a]
  41a7f7:	or     eax,0x2f9600f0
  41a7fc:	mov    esi,0xfae13128
  41a801:	out    dx,eax
  41a802:	xchg   BYTE PTR [edi],ch
  41a804:	into   
  41a805:	sub    BYTE PTR [ecx],dh
  41a807:	loope  0x41a803
  41a809:	out    dx,eax
  41a80a:	push   esi
  41a80b:	clc    
  41a80c:	mov    al,0x28
  41a80e:	or     al,0x9
  41a810:	ret    
  41a811:	rol    BYTE PTR [ebp-0x24],0xc5
  41a815:	out    0x53,eax
  41a817:	int    0xa9
  41a819:	jmp    0x41a85b
  41a81b:	fdivr  QWORD PTR [ebx-0x56304122]
  41a821:	jmp    0x41a863
  41a823:	fmul   st(3),st
  41a825:	jmp    0xe0f1:0xd7e6de23
  41a82c:	mov    eax,0xb6e60be8
  41a831:	out    0x23,eax
  41a833:	clc    
  41a834:	out    0xd4,al
  41a836:	sbb    eax,0xe7f09ae3
  41a83b:	test   BYTE PTR [ebx+0x78e0f1d7],0xe8
  41a842:	or     esp,esi
  41a844:	xchg   esi,eax
  41a845:	out    0xe3,eax
  41a847:	idiv   edi
  41a849:	call   0x75b285c9
  41a84e:	push   ebx
  41a84f:	fild   QWORD PTR [ebx+0x46]
  41a852:	jno    0x41a836
  41a854:	jno    0x41a83f
  41a856:	leavew 
  41a858:	jno    0x41a8a0
  41a85a:	dec    esi
  41a85b:	loop   0x41a8cf
  41a85d:	cmp    al,0x0
  41a85f:	xor    eax,0x4c504dcd
  41a864:	jecxz  0x41a8d7
  41a866:	dec    esi
  41a867:	push   ss
  41a868:	call   0xde2dbd6c
  41a86d:	push   0x3e
  41a86f:	adc    esi,ebx
  41a871:	inc    DWORD PTR [edi+edi*8-0x23]
  41a875:	pusha  
  41a876:	adc    dh,dh
  41a878:	out    0x6b,eax
  41a87a:	sbb    eax,0x1c2ac02d
  41a87f:	(bad)  
  41a881:	bound  edx,QWORD PTR [esi]
  41a883:	or     ebp,DWORD PTR [ebx+0x59]
  41a886:	xor    dl,BYTE PTR [esi]
  41a888:	mov    esi,0xde060562
  41a88d:	ins    DWORD PTR es:[edi],dx
  41a88e:	jmp    0xd6b36399
  41a893:	shl    bl,1
  41a895:	imul   eax,esp,0xffffffc5
  41a898:	push   0x44
  41a89a:	(bad)  
  41a89c:	jmp    0xdac155a0
  41a8a1:	retfw  0xc7de
  41a8a5:	outs   dx,DWORD PTR ds:[esi]
  41a8a6:	rcl    BYTE PTR [ebp-0x6c42ad96],1
  41a8ac:	in     al,0x65
  41a8ae:	cld    
  41a8af:	jo     0x41a887
  41a8b1:	dec    edi
  41a8b2:	jmp    0x84b58c54
  41a8b7:	test   DWORD PTR [edi+eiz*2],ebx
  41a8ba:	xchg   DWORD PTR [ebx-0x7445a696],ebx
  41a8c0:	mul    BYTE PTR [edx+0x0]
  41a8c3:	add    bl,bh
  41a8c5:	add    eax,0x75c1565c
  41a8ca:	data16 arpl WORD PTR [edi-0x4ab2e29d],bp
  41a8d1:	dec    edx
  41a8d2:	popaw  
  41a8d4:	dec    eax
  41a8d5:	and    al,0x66
  41a8d7:	je     0x41a8c1
  41a8d9:	add    al,0x4f
  41a8db:	add    ch,dh
  41a8dd:	add    al,0x74
  41a8df:	add    ah,ah
  41a8e1:	add    al,0x65
  41a8e3:	add    dh,bl
  41a8e5:	add    al,0x63
  41a8e7:	add    BYTE PTR [ebx+0x5],ch
  41a8ea:	add    BYTE PTR [eax],al
  41a8ec:	cmp    al,0xaa
  41a8ee:	imul   ebp,DWORD PTR [edi+0x6a],0x44206964
  41a8f5:	bound  esi,QWORD PTR [esi+ebp*2+0x3c]
  41a8f9:	bound  ebx,QWORD PTR [esi+0x64]
  41a8fc:	xor    eax,0x1d52fd77
  41a901:	and    ebx,DWORD PTR [ebp+0x72]
  41a904:	sub    ebx,DWORD PTR [ebp-0x3]
  41a907:	inc    ebp
  41a908:	jmp    0x4d59:0x16687068
  41a90f:	add    BYTE PTR [esi-0x37b9b5aa],bl
  41a915:	inc    edi
  41a916:	imul   esp,DWORD PTR [ecx-0x2e],0xe8744368
  41a91d:	add    eax,0x68e4696f
  41a922:	sub    esp,DWORD PTR [ecx+ebp*8+0x59]
  41a926:	std    
  41a927:	dec    ebx
  41a928:	add    BYTE PTR [ecx+0x76],bh
  41a92b:	jno    0x41a97d
  41a92d:	jns    0x41a9a5
  41a92f:	jo     0x41a9a8
  41a931:	fbstp  TBYTE PTR [edi+0x61]
  41a934:	add    ah,bl
  41a936:	fs jo  0x41a9ad
  41a939:	(bad)  [ecx+0x61]
  41a93c:	jb     0x41a96f
  41a93e:	jge    0x41a932
  41a940:	jo     0x41a973
  41a942:	mov    esp,fs
  41a944:	jo     0x41a943
  41a946:	mov    edx,?
  41a948:	(bad)
  41a94d:	loop   0x41a93a
  41a94f:	shr    BYTE PTR [ebx+eiz*8-0xd],1
  41a953:	add    BYTE PTR [ecx-0x3a],dl
  41a956:	mov    ecx,0xcdd074ef
  41a95b:	ficomp WORD PTR [ebx-0x11]
  41a95e:	ret    
  41a95f:	loop   0x41a9d1
  41a961:	leave  
  41a962:	das    
  41a963:	fistp  WORD PTR [esi-0x36]
  41a966:	and    eax,edx
  41a968:	imul   edx,DWORD PTR [eax-0x62ba2134],0x22
  41a96f:	fcom   DWORD PTR [eax-0x6c]
  41a972:	push   ds
  41a973:	lock xchg WORD PTR [edi],dx
  41a977:	icebp  
  41a978:	jmp    FWORD PTR [edx+0x34]
  41a97b:	call   0xbe5734de
  41a980:	jae    0x41a903
  41a982:	jb     0x41a9a7
  41a984:	cmp    si,0x4603
  41a989:	test   DWORD PTR [edx],eax
  41a98b:	sub    DWORD PTR [ecx],ebp
  41a98d:	add    BYTE PTR [edi],dl
  41a98f:	cs jmp 0x41a9ff
  41a992:	dec    edx
  41a993:	push   ss
  41a994:	icebp  
  41a995:	addr16 dec esp
  41a997:	ds in  eax,0x5b
  41a99a:	pop    esi
  41a99b:	inc    edx
  41a99c:	loopne 0x41aa0b
  41a99e:	gs push ebx
  41a9a0:	out    0x6a,al
  41a9a2:	dec    esp
  41a9a3:	push   ecx
  41a9a4:	jecxz  0x41aa09
  41a9a6:	xor    DWORD PTR [edi-0x7dfaba1a],esi
  41a9ac:	add    DWORD PTR [ecx+0x16],eax
  41a9af:	push   eax
  41a9b0:	jecxz  0x41aa14
  41a9b2:	adc    bl,BYTE PTR [esi+0x9076cec]
  41a9b8:	call   0x4003:0x92e10525
  41a9bf:	int    0xc3
  41a9c1:	mov    ebp,0xf2e6b8e2
  41a9c6:	paddusw mm1,QWORD PTR [ebx-0x730de30e]
  41a9cd:	in     al,dx
  41a9ce:	les    di,DWORD PTR [ecx-0x6d30f441]
  41a9d5:	rcl    DWORD PTR [esi-0x3c],cl
  41a9d8:	cmp    ebx,ebp
  41a9da:	ret    0x22ed
  41a9dd:	ffreep st(1)
  41a9df:	icebp  
  41a9e0:	dec    ebp
  41a9e1:	out    0xd3,al
  41a9e3:	(bad)  
  41a9e5:	shl    ch,1
  41a9e7:	into   
  41a9e8:	sbb    cl,ch
  41a9ea:	outs   dx,DWORD PTR ds:[esi]
  41a9eb:	mov    ebx,0xf571d823
  41a9f0:	inc    edi
  41a9f1:	icebp  
  41a9f2:	add    BYTE PTR [ecx-0x7d27c612],ah
  41a9f8:	loop   0x41aa10
  41a9fa:	fistp  QWORD PTR [edx-0xe]
  41a9fd:	or     al,bl
  41a9ff:	mov    edi,ecx
  41aa01:	iret   
  41aa02:	xor    eax,DWORD PTR [ebp+0x1c]
  41aa05:	sub    bh,BYTE PTR [ecx+edi*1]
  41aa08:	ss sub eax,0xcc1b772e
  41aa0e:	xor    ah,BYTE PTR [ecx]
  41aa10:	sbb    ch,BYTE PTR [eax]
  41aa12:	daa    
  41aa13:	push   ds
  41aa14:	sbb    al,0x2a
  41aa16:	cmp    ecx,DWORD PTR [edx]
  41aa18:	sbb    DWORD PTR [edi],ebx
  41aa1a:	xor    al,0x1
  41aa1c:	sbb    ebp,DWORD PTR [ecx+0x101d6f31]
  41aa22:	mov    esi,0x32aae670
  41aa27:	pop    es
  41aa28:	sbb    esp,DWORD PTR [ebx-0x301ff2cd]
  41aa2e:	in     eax,0x61
  41aa30:	sbb    eax,DWORD PTR [eax]
  41aa32:	jmp    0xb0b27116
  41aa37:	aam    0xbb
  41aa39:	dec    edi
  41aa3a:	jmp    0x95a47fa5
  41aa3f:	popa   
  41aa40:	(bad)  
  41aa41:	jno    0x41a9cb
  41aa43:	xchg   esp,eax
  41aa44:	in     al,dx
  41aa45:	(bad)  
  41aa46:	mov    esi,0xe96fed7a
  41aa4b:	adc    al,0xdb
  41aa4d:	arpl   WORD PTR [ecx+0x32],di
  41aa50:	mov    ebp,0xb8779b42
  41aa55:	push   ecx
  41aa56:	xchg   edi,eax
  41aa57:	add    BYTE PTR ds:0x52590033,cl
  41aa5d:	fdiv   DWORD PTR [eax+0x56]
  41aa60:	dec    esp
  41aa61:	fldenv [ebx+0x9]
  41aa64:	push   cs
  41aa65:	cmp    BYTE PTR [edx],bh
  41aa67:	dec    ebx
  41aa68:	sti    
  41aa69:	or     BYTE PTR [ebx+0x3a],dh
  41aa6c:	push   cs
  41aa6d:	fldcw  WORD PTR [ebp+0x48]
  41aa70:	push   cs
  41aa71:	in     al,dx
  41aa72:	cmp    DWORD PTR [edx],edi
  41aa74:	pop    ebx
  41aa75:	or     DWORD PTR [esi+0x34],esp
  41aa78:	or     ebx,esi
  41aa7a:	pop    ds
  41aa7b:	or     BYTE PTR [ecx],dl
  41aa7d:	jmp    0x41aaf0
  41aa7f:	add    al,0x0
  41aa81:	fidivr DWORD PTR [ecx]
  41aa83:	sbb    bh,BYTE PTR [ebx]
  41aa85:	or     DWORD PTR [esi],ebp
  41aa87:	jmp    0x34937672
  41aa8c:	add    BYTE PTR [ecx-0x30cd31ab],bh
  41aa92:	push   ebx
  41aa93:	sbb    DWORD PTR ds:0x32f66cd7,edx
  41aa99:	iret   
  41aa9a:	push   ebx
  41aa9b:	mov    ecx,0xe974f5f4
  41aaa0:	shr    edi,0x73
  41aaa3:	int3   
  41aaa4:	shl    DWORD PTR [eax+edi*2],0xbc
  41aaa8:	into   
  41aaa9:	push   dx
  41aaab:	add    bh,ah
  41aaad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaae:	push   ecx
  41aaaf:	push   edi
  41aab0:	fnstcw WORD PTR [eax]
  41aab2:	inc    edx
  41aab3:	pop    esp
  41aab4:	mov    edx,0x956f5f6d
  41aab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaba:	push   ecx
  41aabb:	push   eax
  41aabc:	add    BYTE PTR [eax+0x19],bh
  41aabf:	cs aaa 
  41aac1:	les    edi,FWORD PTR [ecx]
  41aac3:	pusha  
  41aac4:	jb     0x41aa77
  41aac6:	pop    edx
  41aac7:	jno    0x41ab3c
  41aac9:	mov    BYTE PTR [ecx],bh
  41aacb:	dec    esp
  41aacc:	inc    esi
  41aacd:	int3   
  41aace:	push   ebp
  41aacf:	ds push edx
  41aad1:	lea    edi,[esi]
  41aad3:	dec    edi
  41aad4:	outs   dx,DWORD PTR ds:[esi]
  41aad5:	stos   BYTE PTR es:[edi],al
  41aad6:	ins    DWORD PTR es:[edi],dx
  41aad7:	sub    al,BYTE PTR [esi-0x44]
  41aada:	cmp    bl,BYTE PTR ds:0x5c222633
  41aae0:	inc    esi
  41aae1:	cld    
  41aae2:	cmp    al,0x50
  41aae4:	fisub  DWORD PTR gs:[edx+0x62]
  41aae8:	jb     0x41aac5
  41aaea:	or     al,0x46
  41aaec:	push   esp
  41aaed:	dec    eax
  41aaee:	sub    eax,0x6b5d6f3f
  41aaf3:	jno    0x41aaf5
  41aaf5:	dec    esi
  41aaf6:	inc    ecx
  41aaf7:	dec    ebp
  41aaf8:	and    BYTE PTR [esi+0x44],cl
  41aafb:	imul   esp,DWORD PTR [ebp-0x3],0x394ffd6d
  41ab02:	pop    esi
  41ab03:	jo     0x41ab7c
  41ab05:	aaa    
  41ab06:	pop    edi
  41ab07:	popa   
  41ab08:	add    BYTE PTR [ebx],bh
  41ab0a:	jo     0x41ab7b
  41ab0c:	jbe    0x41ab4b
  41ab0e:	pop    edi
  41ab0f:	dec    ebx
  41ab10:	popa   
  41ab11:	xor    eax,0xdb54fd70
  41ab16:	jo     0x41ab87
  41ab18:	dec    ecx
  41ab19:	or     al,0xd
  41ab1b:	inc    ebp
  41ab1c:	outs   dx,BYTE PTR ds:[esi]
  41ab1d:	loope  0x41ab7c
  41ab1f:	popaw  
  41ab21:	add    ah,dh
  41ab23:	dec    ebp
  41ab24:	data16 jb 0x41ab58
  41ab27:	push   ebp
  41ab28:	out    0x73,al
  41ab2a:	inc    esi
  41ab2b:	inc    edx
  41ab2c:	in     al,dx
  41ab2d:	(bad)  
  41ab2e:	(bad)  
  41ab2f:	ds repz jae 0x41ab2a
  41ab33:	pushf  
  41ab34:	loopne 0x41ab97
  41ab36:	adc    al,0xa2
  41ab38:	add    DWORD PTR [ecx+0xc],edx
  41ab3b:	mov    ds:0xa40362f7,al
  41ab40:	in     al,dx
  41ab41:	outs   dx,DWORD PTR ds:[esi]
  41ab42:	or     al,0x70
  41ab44:	adc    DWORD PTR [eax],eax
  41ab46:	xor    DWORD PTR [eax-0x78],esi
  41ab49:	push   0x62db6ff0
  41ab4e:	ror    BYTE PTR [esp+eax*4-0x48a90abb],0xd7
  41ab56:	shr    BYTE PTR ss:[ebx-0x1d],1
  41ab5a:	or     BYTE PTR [ebp+0x23156c0],0x22
  41ab61:	xor    edx,DWORD PTR [edi]
  41ab63:	add    ch,BYTE PTR [ebx]
  41ab65:	add    al,BYTE PTR cs:[edi]
  41ab68:	add    al,0x30
  41ab6a:	sub    ebp,DWORD PTR [esi-0x7]
  41ab6d:	sub    BYTE PTR [edi],dh
  41ab6f:	jno    0x41ab79
  41ab71:	add    ebp,DWORD PTR [esi]
  41ab73:	outs   dx,DWORD PTR ds:[esi]
  41ab74:	push   es
  41ab75:	add    BYTE PTR [edx-0x618c1635],al
  41ab7b:	shl    ebp,1
  41ab7d:	bound  ebp,QWORD PTR [ebp+0x1e]
  41ab80:	fld    TBYTE PTR [ebp-0x70]
  41ab83:	dec    ecx
  41ab85:	push   ebx
  41ab86:	add    BYTE PTR [ecx+0x1e],ah
  41ab89:	aad    0x66
  41ab8b:	jge    0x41ab9a
  41ab8d:	and    al,0x4b
  41ab8f:	push   eax
  41ab90:	cld    
  41ab91:	loop   0x41abf7
  41ab93:	dec    esp
  41ab94:	pusha  
  41ab95:	add    DWORD PTR [eax+0x4e],ecx
  41ab98:	pop    edi
  41ab99:	cmc    
  41ab9a:	(bad)  
  41ab9b:	jge    0x41abfc
  41ab9d:	call   0xb74add13
  41aba2:	in     al,0x41
  41aba4:	fsub   st,st(6)
  41aba6:	ror    DWORD PTR [ebp-0x29],cl
  41aba9:	fiadd  DWORD PTR [ebx]
  41abab:	arpl   si,bp
  41abad:	mov    ebx,0x6ee22e2
  41abb2:	enter  0xd70f,0xe6
  41abb6:	iret   
  41abb7:	icebp  
  41abb8:	loope  0x41ab82
  41abba:	call   0xe6f598df
  41abbf:	sbb    DWORD PTR [ecx],ecx
  41abc1:	aad    0xe7
  41abc3:	add    ebp,eax
  41abc5:	xchg   ecx,eax
  41abc6:	add    eax,DWORD PTR [edx]
  41abc8:	fmul   DWORD PTR [ebx+0x7de844f5]
  41abce:	loope  0x41aba4
  41abd0:	icebp  
  41abd1:	lea    eax,[ebx]
  41abd3:	and    eax,0xe2f783d8
  41abd8:	icebp  
  41abd9:	test   dl,ch
  41abdb:	ss repz xchg eax,esp
  41abdf:	shl    DWORD PTR ds:0x9130409,cl
  41abe5:	push   ebp
  41abe6:	jecxz  0x41abb2
  41abe8:	fisttp QWORD PTR [ebx+0x2f]
  41abeb:	add    BYTE PTR [ebx],dl
  41abed:	or     DWORD PTR [edx],edi
  41abef:	loope  0x41ab85
  41abf1:	fnstsw WORD PTR ds:0x1aeea0e3
  41abf7:	aad    0x97
  41abf9:	test   BYTE PTR [ebp-0x1e],0x82
  41abfd:	jmp    0xd442:0xf66fdc32
  41ac04:	cmp    DWORD PTR [ebp-0x47a534ce],0xb
  41ac0b:	cmc    
  41ac0c:	xor    edx,0x961e1fd
  41ac12:	das    
  41ac13:	loope  0x41ac76
  41ac15:	(bad)  [ebx+eiz*8]
  41ac18:	dec    ebx
  41ac19:	out    dx,al
  41ac1a:	(bad)  
  41ac1b:	call   0xfba4851f
  41ac20:	lock ret 0xcc6a
  41ac24:	xor    bh,BYTE PTR [ecx-0x233a25a2]
  41ac2a:	ins    BYTE PTR es:[edi],dx
  41ac2b:	fcmovne st,st(6)
  41ac2d:	arpl   WORD PTR [ebp-0x42],cx
  41ac30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac31:	xlat   BYTE PTR ds:[ebx]
  41ac32:	dec    ebp
  41ac33:	mov    esp,0xbb62e987
  41ac38:	xor    bh,BYTE PTR [ebp-0x1588449e]
  41ac3e:	ins    DWORD PTR es:[edi],dx
  41ac3f:	enter  0xb76e,0x76
  41ac43:	cdq    
  41ac44:	(bad)  
  41ac45:	arpl   WORD PTR [ebx-0x67],cx
  41ac48:	or     ch,0x53
  41ac4b:	mov    ecx,0x7d6ae150
  41ac50:	add    BYTE PTR [edx],dh
  41ac52:	lds    ecx,FWORD PTR [ebp-0x6a]
  41ac55:	pop    esi
  41ac56:	out    0x6f,al
  41ac58:	mov    BYTE PTR [esi+0x30],dl
  41ac5b:	sub    ecx,ebp
  41ac5d:	jge    0x41ac53
  41ac5f:	gs jne 0x41acab
  41ac62:	ret    0x4c71
  41ac65:	popa   
  41ac66:	enter  0x476c,0x4b
  41ac6a:	out    0x62,al
  41ac6c:	sub    bh,BYTE PTR [esi]
  41ac6e:	repz pop ds
  41ac70:	cmp    dl,BYTE PTR [eax]
  41ac72:	in     eax,dx
  41ac73:	jae    0x41acb3
  41ac75:	adc    bl,cl
  41ac77:	(bad)  
  41ac78:	jmp    0x9916365
  41ac7d:	or     eax,ebp
  41ac7f:	jo     0x41acb6
  41ac81:	jmp    0x6df5:0xea1d5ef4
  41ac88:	leave  
  41ac89:	add    eax,0xe1f71e8
  41ac8e:	fcos   
  41ac90:	es or  ebx,edx
  41ac93:	pop    ds
  41ac94:	add    BYTE PTR [edx+ebp*2],dh
  41ac97:	jo     0x41ad0d
  41ac99:	inc    ecx
  41ac9a:	addr16 pop esi
  41ac9c:	je     0x41accf
  41ac9e:	push   0x5dc5206b
  41aca3:	bound  esi,QWORD PTR [edx-0x28]
  41aca6:	push   eax
  41aca7:	push   ecx
  41aca8:	push   eax
  41aca9:	sub    BYTE PTR [ecx+0x62],dh
  41acac:	jae    0x41ac82
  41acae:	aas    
  41acaf:	imul   esp,DWORD PTR [ecx-0x7c],0x3f
  41acb3:	ins    BYTE PTR es:[edi],dx
  41acb4:	outs   dx,BYTE PTR ds:[esi]
  41acb5:	add    BYTE PTR [eax],bh
  41acb7:	pop    ebp
  41acb8:	pop    esi
  41acb9:	jae    0x41ac96
  41acbb:	popa   
  41acbc:	ins    BYTE PTR es:[edi],dx
  41acbd:	jb     0x41ad23
  41acbf:	push   es
  41acc0:	inc    esi
  41acc1:	push   esp
  41acc2:	test   al,0x26
  41acc4:	fs gs stos DWORD PTR es:[edi],eax
  41acc7:	pop    edx
  41acc8:	data16 outs dx,BYTE PTR ds:[esi]
  41acca:	test   eax,0xae6f665a
  41accf:	es jo  0x41ad41
  41acd2:	retf   0xfd5a
  41acd5:	inc    ebp
  41acd6:	les    esi,FWORD PTR [esi]
  41acd8:	sbb    eax,0x715db564
  41acdd:	imul   ebp,DWORD PTR [esi-0x30968e99],0xf9631d67
  41ace7:	pusha  
  41ace8:	pop    esi
  41ace9:	ins    BYTE PTR es:[edi],dx
  41acea:	out    dx,eax
  41aceb:	imul   edi,ebp,0x1d3cf445
  41acf1:	jo     0x41ac7d
  41acf3:	inc    edx
  41acf4:	arpl   WORD PTR [ecx+0x7c],bp
  41acf7:	jo     0x41ad69
  41acf9:	add    BYTE PTR [esi+0x41],dl
  41acfc:	dec    ebp
  41acfd:	push   ebx
  41acfe:	jo     0x41ad70
  41ad00:	imul   ebp,DWORD PTR [eax+ebx*1+0x6c],0x452b7071
  41ad08:	bound  ebp,QWORD PTR [esp+ebp*1+0x3]
  41ad0c:	data16 jae 0x41ad40
  41ad0f:	or     DWORD PTR [ecx+edx*2],eax
  41ad12:	pop    esi
  41ad13:	or     bh,al
  41ad15:	je     0x41ad67
  41ad17:	pop    esi
  41ad18:	call   0x31adad78
  41ad1d:	shr    DWORD PTR [edx],1
  41ad1f:	or     BYTE PTR [ebx],0xe6
  41ad22:	jae    0x41ad91
  41ad24:	sub    bl,al
  41ad26:	dec    edi
  41ad27:	js     0x41ad63
  41ad29:	jecxz  0x41ad97
  41ad2b:	pop    ebp
  41ad2c:	lahf   
  41ad2d:	call   0x181e9a5
  41ad32:	inc    esp
  41ad33:	adc    BYTE PTR [esp+eiz*8],bh
  41ad36:	inc    ebx
  41ad37:	sbb    BYTE PTR [esi+0x7bf75c01],bl
  41ad3d:	rol    DWORD PTR [esi+0x7],1
  41ad40:	push   edx
  41ad41:	fdivp  st(7),st
  41ad43:	jecxz  0x41ad91
  41ad45:	out    dx,eax
  41ad46:	jne    0x41ad54
  41ad48:	jle    0x41ad07
  41ad4a:	data16 add bh,BYTE PTR [ebx+ebx*1+0x78]
  41ad4f:	add    al,0x8c
  41ad51:	add    DWORD PTR [esi-0x2c],ecx
  41ad54:	ja     0x41ad4e
  41ad56:	jo     0x41ad47
  41ad58:	js     0x41ad37
  41ad5a:	bound  esi,QWORD PTR [ecx]
  41ad5c:	mov    dh,ch
  41ad5e:	outs   dx,DWORD PTR ds:[esi]
  41ad5f:	loop   0x41ace9
  41ad61:	cmc    
  41ad62:	bound  ebx,QWORD PTR [edi]
  41ad64:	mov    ebx,ebx
  41ad66:	xor    WORD PTR [edx],si
  41ad69:	jecxz  0x41addb
  41ad6b:	lds    ebx,FWORD PTR [esi]
  41ad6d:	clc    
  41ad6e:	ins    BYTE PTR es:[edi],dx
  41ad6f:	(bad)  
  41ad70:	aam    0x23
  41ad72:	inc    edx
  41ad73:	mov    ds:0x8c70f51f,eax
  41ad78:	and    al,0x4
  41ad7a:	inc    esi
  41ad7b:	test   DWORD PTR [edx],eax
  41ad7d:	shl    BYTE PTR [esi+0x0],0xa2
  41ad81:	push   ds
  41ad82:	push   ds
  41ad83:	fs xchg ebx,eax
  41ad85:	jb     0x41ad54
  41ad87:	dec    edx
  41ad88:	nop
  41ad89:	or     DWORD PTR [edi],edx
  41ad8b:	loopne 0x41ad20
  41ad8d:	mov    esp,0xf292f912
  41ad92:	add    eax,0x18f171d0
  41ad97:	fistp  WORD PTR [ebx-0x1a]
  41ad9a:	push   ss
  41ad9b:	loopne 0x41ae00
  41ad9d:	fsubr  st(6),st
  41ad9f:	rol    BYTE PTR [ebp-0x19],cl
  41ada2:	cli    
  41ada3:	imul   BYTE PTR [edi-0x25]
  41ada6:	add    edx,eax
  41ada8:	je     0x41ad9c
  41adaa:	leave  
  41adab:	ficomp WORD PTR [esi]
  41adad:	into   
  41adae:	(bad)  
  41adaf:	ficom  DWORD PTR [esi]
  41adb1:	int3   
  41adb2:	(bad)
  41adb5:	(bad)  
  41adb6:	rcr    ah,cl
  41adb8:	adc    al,0xe8
  41adba:	mov    ds:0xa0ef17d6,al
  41adbf:	fadd   QWORD PTR [esi]
  41adc1:	mov    ebp,0x8fed7ac
  41adc6:	call   0xe4:0x9dd50cde
  41adcd:	out    0xba,al
  41adcf:	mov    ebp,0x2385ec0f
  41add4:	cli    
  41add5:	jmp    0xf031d15b
  41adda:	xchg   ebx,eax
  41addb:	repz jecxz 0x41adb2
  41adde:	(bad)  
  41addf:	(bad)  
  41ade1:	mov    esp,0xdc00dc9d
  41ade6:	ret    0xf37f
  41ade9:	jmp    0x4df2:0xdaf758ed
  41adf0:	loop   0x41adb3
  41adf2:	or     BYTE PTR [edx],bh
  41adf4:	(bad)  [edx-0x5e29191a]
  41adfa:	out    0x38,al
  41adfc:	mov    ebx,0xe63f0972
  41ae01:	mov    ch,dl
  41ae03:	dec    DWORD PTR [ebp+0x0]
  41ae06:	pusha  
  41ae07:	dec    ebp
  41ae08:	ds add ebx,esp
  41ae0b:	jmp    FWORD PTR [esi]
  41ae0d:	fdivr  st(3),st
  41ae0f:	arpl   WORD PTR [ebx+eax*1],ax
  41ae12:	pusha  
  41ae13:	sub    ebx,DWORD PTR [esi]
  41ae15:	or     esp,esi
  41ae17:	call   DWORD PTR ds:0x162ee0a
  41ae1d:	push   cs
  41ae1e:	sub    eax,DWORD PTR [eax]
  41ae20:	retf   
  41ae21:	xor    eax,0xfa15001f
  41ae26:	mov    esi,0xd7ce056d
  41ae2b:	push   DWORD PTR [ebx-0x4aba0035]
  41ae31:	loop   0x41ae92
  41ae33:	ins    DWORD PTR es:[edi],dx
  41ae34:	fisttp DWORD PTR [ebp-0x61359d0f]
  41ae3a:	sub    eax,0x5f7bd767
  41ae3f:	sub    eax,ecx
  41ae41:	ja     0x41ae36
  41ae43:	push   DWORD PTR [ecx-0x58b9eabb]
  41ae49:	add    BYTE PTR [ebx+0x16],al
  41ae4c:	xor    ecx,ebx
  41ae4e:	pop    ds
  41ae4f:	retf   
  41ae50:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41ae52:	inc    eax
  41ae53:	xor    al,0x34
  41ae55:	lods   eax,DWORD PTR ds:[esi]
  41ae56:	sbb    ah,BYTE PTR [ecx]
  41ae58:	sub    edx,eax
  41ae5a:	and    BYTE PTR [edi],dl
  41ae5c:	inc    edx
  41ae5d:	aam    0x23
  41ae5f:	sbb    al,0x36
  41ae61:	shr    DWORD PTR [esi+ebx*1+0x43],0xbf
  41ae66:	add    eax,ebp
  41ae68:	inc    ecx
  41ae69:	mov    dh,0x57
  41ae6b:	pop    edi
  41ae6c:	dec    ebx
  41ae6d:	push   esi
  41ae6e:	inc    edi
  41ae6f:	mov    esi,0x2d5d3545
  41ae74:	fs dec ebx
  41ae76:	xor    eax,0x1f46bd
  41ae7b:	out    dx,al
  41ae7c:	add    BYTE PTR gs:[esp+edx*2+0x5e],bl
  41ae81:	jb     0x41aef0
  41ae83:	cmp    DWORD PTR [ebx+0x6f],ecx
  41ae86:	dec    esi
  41ae87:	push   0x43
  41ae89:	push   esp
  41ae8a:	sub    BYTE PTR ds:0x6a2d6f2e,al
  41ae90:	pusha  
  41ae91:	arpl   WORD PTR [edi],sp
  41ae93:	push   esi
  41ae94:	imul   esi,DWORD PTR [eax+ebx*8+0x39],0x5e
  41ae99:	ins    BYTE PTR es:[edi],dx
  41ae9a:	cmp    al,0x5
  41ae9c:	add    BYTE PTR [eax],al
  41ae9e:	enter  0xa,0x0
  41aea2:	enter  0x3e0a,0x0
  41aea6:	test   ch,bh
  41aea8:	(bad)  
  41aea9:	cmp    ebp,DWORD PTR [eax]
  41aeab:	pushf  
  41aeac:	dec    ebp
  41aead:	xor    eax,DWORD PTR [eax]
  41aeaf:	idiv   DWORD PTR [edx]
  41aeb1:	pop    esi
  41aeb2:	jae    0x41ae8f
  41aeb4:	push   ebp
  41aeb5:	ins    BYTE PTR es:[edi],dx
  41aeb6:	jb     0x41af34
  41aeb8:	sbb    BYTE PTR [eax],al
  41aeba:	cmp    al,0xeb
  41aebc:	lahf   
  41aebd:	push   ecx
  41aebe:	push   eax
  41aebf:	xlat   BYTE PTR ds:[ebx]
  41aec0:	cmp    bl,BYTE PTR [esi+0x73]
  41aec3:	fist   DWORD PTR [ebp+0x6c]
  41aec6:	jb     0x41af44
  41aec8:	sbb    BYTE PTR [eax],al
  41aeca:	cmp    al,0xd1
  41aecc:	lahf   
  41aecd:	ds push eax
  41aecf:	ja     0x41af0b
  41aed1:	pop    esi
  41aed2:	jae    0x41ae6f
  41aed4:	push   ebp
  41aed5:	ins    BYTE PTR es:[edi],dx
  41aed6:	jb     0x41ae94
  41aed8:	sbb    BYTE PTR [eax],al
  41aeda:	cmp    al,0x90
  41aedc:	ss push ecx
  41aede:	push   eax
  41aedf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aee0:	imul   esp,DWORD PTR [esi+0x6c],0xffffffb7
  41aee4:	cmp    bl,BYTE PTR [esi+0x73]
  41aee7:	retf   
  41aee8:	push   esp
  41aee9:	ins    BYTE PTR es:[edi],dx
  41aeea:	jb     0x41ae98
  41aeec:	sbb    BYTE PTR [eax],al
  41aeee:	add    ah,dh
  41aef0:	lahf   
  41aef1:	data16 arpl dx,bx
  41aef4:	inc    ecx
  41aef5:	jo     0x41af66
  41aef7:	xor    esi,ecx
  41aef9:	out    dx,eax
  41aefa:	pop    ebx
  41aefb:	jle    0x41aec6
  41aefd:	fldenv [ebx-0x72]
  41af00:	pop    ds
  41af01:	cmc    
  41af02:	pop    ds
  41af03:	gs mov ecx,0x255162f1
  41af09:	jecxz  0x41af71
  41af0b:	xchg   ebp,eax
  41af0c:	jo     0x41aee4
  41af0e:	ins    BYTE PTR es:[edi],dx
  41af0f:	xchg   edi,eax
  41af10:	cld    
  41af11:	lock pop esi
  41af13:	add    BYTE PTR [ebx+0x584ac805],al
  41af19:	adc    esi,esi
  41af1b:	ins    BYTE PTR es:[edi],dx
  41af1c:	bound  ebx,QWORD PTR [edi-0x21]
  41af1f:	jae    0x41af9e
  41af21:	(bad)  
  41af22:	fisubr DWORD PTR [ebp+0x4d]
  41af25:	psllw  mm6,QWORD PTR [eax+0x11]
  41af29:	and    al,0xdb
  41af2b:	jne    0x41af79
  41af2d:	push   eax
  41af2e:	mov    eax,0x134485e
  41af33:	pop    esp
  41af34:	fs cmp esi,esp
  41af37:	jno    0x41af57
  41af39:	inc    ebx
  41af3a:	fisub  DWORD PTR [ebp+0x1d]
  41af3d:	lods   al,BYTE PTR ds:[esi]
  41af3e:	shl    BYTE PTR [esi+0xf],cl
  41af41:	dec    esp
  41af42:	fidiv  DWORD PTR [edx+eiz*1+0x10]
  41af46:	mov    bh,0x5e
  41af48:	sbb    BYTE PTR [ecx+eax*1+0x51],al
  41af4c:	push   ss
  41af4d:	inc    esi
  41af4e:	in     eax,dx
  41af4f:	je     0x41af61
  41af51:	and    al,0x5b
  41af54:	in     al,0x78
  41af56:	out    0x71,al
  41af58:	fiadd  WORD PTR [edx-0x54229a26]
  41af5e:	shl    BYTE PTR [esi-0x31],cl
  41af61:	mov    ebx,edx
  41af63:	je     0x41af47
  41af65:	dec    edi
  41af66:	mov    eax,0x183d85e
  41af6b:	push   ecx
  41af6c:	(bad)  
  41af6d:	test   ebp,ebp
  41af6f:	je     0x41af41
  41af71:	or     BYTE PTR [ecx-0x1f],bl
  41af74:	fidivr DWORD PTR [edx+0x6f00d94f]
  41af7a:	xlat   BYTE PTR ds:[ebx]
  41af7b:	pop    edx
  41af7c:	test   DWORD PTR [edx-0x7e37e739],0x8ff03ae6
  41af86:	jmp    0x41afcd
  41af88:	test   DWORD PTR [esi],0x67f047c9
  41af8e:	lds    edi,FWORD PTR [edi]
  41af90:	idiv   dh
  41af92:	enter  0xf007,0x57
  41af96:	lds    ecx,FWORD PTR [edi]
  41af98:	div    BYTE PTR [eax-0x16]
  41af9b:	add    DWORD PTR [edx+edi*2],eax
  41af9e:	jmp    0x19fe:0xec50d7ff
  41afa5:	dec    esi
  41afa6:	jmp    0x41afb7
  41afa8:	add    al,0x60
  41afaa:	in     al,dx
  41afab:	or     al,0xf0
  41afad:	cmp    eax,0x5ae0f8ea
  41afb2:	mov    ecx,0x2945e6d5
  41afb7:	mov    edx,0xcbd521ec
  41afbc:	fsub   DWORD PTR [ecx]
  41afbe:	sub    DWORD PTR [eax-0x68f6ee27],esp
  41afc4:	in     al,0x22
  41afc6:	icebp  
  41afc7:	out    0xc7,al
  41afc9:	(bad)  
  41afca:	jmp    0x41af95
  41afcc:	(bad)  
  41afce:	loope  0x41af89
  41afd0:	out    dx,eax
  41afd1:	adc    ebp,esi
  41afd3:	aam    0xdc
  41afd5:	add    al,0xf2
  41afd7:	out    0xd3,al
  41afd9:	loopne 0x41afc6
  41afdb:	(bad)  
  41afdc:	cmc    
  41afdd:	add    BYTE PTR [edi],al
  41afdf:	out    dx,al
  41afe0:	out    0xbf,al
  41afe2:	call   esp
  41afe4:	xchg   ebx,edx
  41afe6:	not    esp
  41afe8:	mov    es,WORD PTR [ebx]
  41afea:	out    dx,al
  41afeb:	out    0xff,eax
  41afed:	mov    DWORD PTR [ebx-0x29],ebp
  41aff0:	ins    DWORD PTR es:[edi],dx
  41aff1:	jne    0x41b03a
  41aff3:	cs addr16 push edi
  41aff6:	pop    edx
  41aff7:	pop    esp
  41aff8:	pop    ecx
  41aff9:	cmp    DWORD PTR [eax],ecx
  41affb:	jmp    0xe353f46c
  41b000:	imul   ebp,ecx,0x5
  41b003:	in     eax,dx
  41b004:	gs cmp eax,0x4471bb20
  41b00a:	stc    
  41b00b:	ret    0x4a6d
  41b00e:	jmp    esi
  41b010:	arpl   WORD PTR [eax-0x3a],ax
  41b013:	mov    edx,0xc82d1566
  41b018:	push   0x8
  41b01a:	or     dh,al
  41b01c:	ds or  eax,0x1a62d9d1
  41b022:	in     al,0x5b
  41b024:	push   ecx
  41b025:	or     al,0xcc
  41b027:	jecxz  0x41b096
  41b029:	push   cs
  41b02a:	jmp    0x3332151b
  41b02f:	mov    ecx,0xe6e5f96c
  41b034:	jno    0x41b015
  41b036:	xlat   BYTE PTR ds:[ebx]
  41b037:	fcos   
  41b039:	mov    eax,0xc64feb89
  41b03e:	pushf  
  41b03f:	xlat   BYTE PTR ds:[ebx]
  41b040:	(bad)  
  41b041:	mov    eax,0x3eeb7900
  41b046:	retf   0xec8d
  41b049:	jb     0x41b01a
  41b04b:	sahf   
  41b04c:	pop    ebx
  41b04d:	dec    ebp
  41b04e:	mov    BYTE PTR [edx-0x7a45a135],0xd4
  41b055:	ins    BYTE PTR es:[edi],dx
  41b056:	fwait
  41b057:	push   esi
  41b058:	pop    ebx
  41b059:	push   edx
  41b05a:	mov    WORD PTR [esi-0x15],ds
  41b05d:	push   eax
  41b05e:	mov    WORD PTR [ebp+edx*8+0x62],ds
  41b062:	fwait
  41b063:	xor    bh,BYTE PTR [edx+0x57d4006a]
  41b069:	dec    ebp
  41b06a:	outs   dx,DWORD PTR ds:[esi]
  41b06b:	retf   0xfd6b
  41b06e:	push   edx
  41b06f:	lods   eax,DWORD PTR ds:[esi]
  41b070:	imul   ebp,DWORD PTR [ebp+0x41],0xffffffab
  41b074:	fs ins BYTE PTR es:[edi],dx
  41b076:	jne    0x41b056
  41b078:	pop    eax
  41b079:	std    
  41b07a:	push   edx
  41b07b:	jge    0x41b0d6
  41b07d:	ins    DWORD PTR es:[edi],dx
  41b07e:	push   eax
  41b07f:	jns    0x41b0d5
  41b081:	jo     0x41b0fa
  41b083:	pop    edi
  41b084:	push   ebx
  41b085:	popa   
  41b086:	add    BYTE PTR [ecx+0x64],ch
  41b089:	pusha  
  41b08a:	outs   dx,DWORD PTR ds:[esi]
  41b08b:	inc    ebp
  41b08c:	aas    
  41b08d:	jno    0x41b0bd
  41b08f:	jnp    0x41b0f8
  41b091:	add    BYTE PTR fs:[ecx+0x64],ch
  41b095:	pusha  
  41b096:	outs   dx,DWORD PTR ds:[esi]
  41b097:	adc    eax,0x3b2e713f
  41b09c:	imul   eax,DWORD PTR [bx+si],0x1c
  41b0a0:	inc    ebx
  41b0a1:	pop    esi
  41b0a2:	je     0x41b0e1
  41b0a4:	data16 data16 ins BYTE PTR es:[edi],dx
  41b0a7:	add    al,cl
  41b0a9:	inc    edx
  41b0aa:	push   ecx
  41b0ab:	push   0x61422535
  41b0b0:	les    esp,FWORD PTR [edi]
  41b0b2:	add    BYTE PTR [ebx-0x41],dl
  41b0b5:	push   0x54e97771
  41b0ba:	bound  ebx,QWORD PTR [edx+ebp*8-0x61]
  41b0be:	push   ecx
  41b0bf:	pop    esp
  41b0c0:	in     al,0x3e
  41b0c2:	bound  esp,QWORD PTR [eax]
  41b0c4:	retf   0x7167
  41b0c7:	and    DWORD PTR [eax-0x3b9993cb],ecx
  41b0cd:	pop    ecx
  41b0ce:	pop    esi
  41b0cf:	jb     0x41b146
  41b0d1:	inc    edx
  41b0d2:	dec    edi
  41b0d3:	dec    ecx
  41b0d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0d5:	inc    edx
  41b0d6:	push   ecx
  41b0d7:	push   0x614226a5
  41b0dc:	les    esp,FWORD PTR [edi]
  41b0de:	pop    esp
  41b0df:	push   ebp
  41b0e0:	xor    DWORD PTR [edi-0x22],edi
  41b0e3:	jno    0x41b0c7
  41b0e5:	dec    edi
  41b0e6:	frstor [edx-0x1f]
  41b0e9:	jb     0x41b0d8
  41b0eb:	jmp    edi
  41b0ed:	mov    dh,bl
  41b0ef:	push   0x1fe081d8
  41b0f4:	cmc    
  41b0f5:	mov    bl,dh
  41b0f7:	(bad)  
  41b0f9:	mov    ebx,0x70a871d4
  41b0fe:	shl    DWORD PTR [ecx-0x6a],1
  41b101:	retf   
  41b102:	icebp  
  41b103:	pop    esi
  41b104:	mov    WORD PTR [ebx+ebx*8],fs
  41b107:	jno    0x41b13a
  41b109:	das    
  41b10a:	aad    0x72
  41b10c:	add    BYTE PTR [edi-0x73bbfbec],bl
  41b112:	retf   0x72e2
  41b115:	lea    edx,[esp+eax*1]
  41b118:	inc    esp
  41b119:	mov    dh,bh
  41b11b:	and    esp,DWORD PTR [ecx]
  41b11d:	adc    al,0x4
  41b11f:	add    al,0x51
  41b121:	je     0x41b13f
  41b123:	aam    0x1f
  41b125:	je     0x41b184
  41b127:	in     al,0x66
  41b129:	inc    ebp
  41b12a:	push   eax
  41b12b:	les    esp,FWORD PTR [ebx+0x55]
  41b12e:	pop    esi
  41b12f:	loopne 0x41b1a1
  41b131:	inc    edx
  41b132:	jo     0x41b106
  41b134:	dec    edx
  41b135:	add    BYTE PTR gs:[ecx+edx*2],ah
  41b139:	dec    esp
  41b13a:	ds jmp 0x41b19f
  41b13d:	and    esi,DWORD PTR [eax-0x2f]
  41b140:	dec    esp
  41b141:	add    edi,edi
  41b143:	and    edx,DWORD PTR [ecx+0x14]
  41b146:	ds jmp 0x41b1ab
  41b149:	and    esi,DWORD PTR [eax-0x2f]
  41b14c:	dec    esp
  41b14d:	loope  0x41b1ad
  41b14f:	and    DWORD PTR [ebx+0x2],edx
  41b152:	dec    ebp
  41b153:	out    dx,eax
  41b154:	pop    ds
  41b155:	out    dx,eax
  41b156:	push   eax
  41b157:	fsub   DWORD PTR [edx+0x31]
  41b15a:	or     DWORD PTR [edx-0x3946fd48],edi
  41b160:	shl    cl,1
  41b162:	jecxz  0x41b0fc
  41b164:	and    ebp,edi
  41b166:	out    0x7b,eax
  41b168:	loopne 0x41b1c0
  41b16a:	retf   
  41b16b:	mov    ah,0xcf
  41b16d:	(bad)  
  41b16e:	sub    BYTE PTR [eax+ebx*8-0x7d101900],ah
  41b175:	and    edi,esi
  41b177:	in     al,0x82
  41b179:	icebp  
  41b17a:	rcl    ebp,cl
  41b17c:	pop    ecx
  41b17d:	add    al,0x7f
  41b17f:	(bad)  
  41b180:	xor    dl,ah
  41b182:	inc    esi
  41b183:	mov    esi,0x29a0e159
  41b188:	sbb    eax,0xe6ee8be5
  41b18d:	mov    ch,0x7c
  41b18f:	mov    ebp,0xee602416
  41b194:	cmp    dh,ch
  41b196:	xchg   ebx,eax
  41b197:	(bad)  
  41b199:	mov    esp,0x2436ca6b
  41b19e:	sub    dh,0x18
  41b1a1:	out    dx,al
  41b1a2:	push   ebx
  41b1a3:	(bad)  
  41b1a5:	mov    esp,0x2436ca6b
  41b1aa:	sbb    ah,0xb
  41b1ad:	repnz mov DWORD PTR cs:[edi],0x2c0953d9
  41b1b5:	fstp   DWORD PTR [edi-0x1e]
  41b1b8:	cli    
  41b1b9:	add    ebp,DWORD PTR [ecx-0x43]
  41b1bc:	mov    edx,0xd9be4ed3
  41b1c1:	loopne 0x41b1e3
  41b1c3:	or     DWORD PTR [edi+0x6b902cf],ebx
  41b1c9:	rcl    DWORD PTR [ebx],cl
  41b1cb:	fstp   TBYTE PTR [eax+eiz*8-0x2e6bd700]
  41b1d2:	cli    
  41b1d3:	or     BYTE PTR [eax],al
  41b1d5:	cdq    
  41b1d6:	add    bh,al
  41b1d8:	enter  0x930,0x60
  41b1dc:	fldenv [edx-0x65]
  41b1df:	xor    dl,al
  41b1e1:	dec    edx
  41b1e2:	test   al,0x82
  41b1e4:	clc    
  41b1e5:	push   edx
  41b1e6:	call   0xbc66:0xa0ffda51
  41b1ed:	dec    edi
  41b1ee:	mov    ah,0x55
  41b1f0:	out    dx,eax
  41b1f1:	imul   ecx,ecx,0x61
  41b1f4:	fldenv [edx+0x7b]
  41b1f7:	adc    al,bh
  41b1f9:	pop    esi
  41b1fa:	jl     0x41b24d
  41b1fc:	pop    eax
  41b1fd:	inc    ebp
  41b1fe:	cmp    eax,0x484ac801
  41b203:	or     ah,ah
  41b205:	pop    ds
  41b206:	cmp    bh,dh
  41b208:	fnstenv [ebp+0x44]
  41b20b:	and    ebx,DWORD PTR [eax+0x52]
  41b20e:	xor    al,0xe1
  41b210:	(bad)  
  41b211:	pop    ds
  41b212:	adc    al,0x0
  41b214:	jmp    0x41b287
  41b216:	jmp    0x198e6b4d
  41b21b:	inc    eax
  41b21c:	sub    DWORD PTR [eax+0x16],edx
  41b21f:	jecxz  0x41b1fc
  41b221:	(bad)  
  41b222:	cmp    DWORD PTR [esi+0x2c94fbb],ebx
  41b228:	in     eax,0x71
  41b22a:	adc    eax,0x284ad02d
  41b22f:	in     eax,0xf7
  41b231:	dec    edi
  41b232:	push   cs
  41b233:	ret    
  41b234:	(bad)  
  41b236:	call   0xba91771d
  41b23b:	add    BYTE PTR [edx],dl
  41b23d:	mov    ecx,0xdca1da5e
  41b242:	ins    BYTE PTR es:[edi],dx
  41b243:	fild   DWORD PTR [esi-0x185fffe7]
  41b249:	push   ss
  41b24a:	push   eax
  41b24b:	or     DWORD PTR [ebp-0x4a],edi
  41b24e:	jo     0x41b250
  41b250:	retf   
  41b251:	fs ins BYTE PTR es:[edi],dx
  41b253:	jb     0x41b2c1
  41b255:	sbb    DWORD PTR [eax],eax
  41b257:	dec    esi
  41b258:	(bad)  
  41b259:	inc    edi
  41b25a:	dec    ebp
  41b25b:	and    BYTE PTR [eax-0x308c8f96],bl
  41b261:	cmp    al,0x6f
  41b263:	mov    cl,BYTE PTR fs:[ebx]
  41b266:	dec    eax
  41b267:	push   esp
  41b268:	pushf  
  41b269:	cmp    ecx,DWORD PTR [edx+0x61]
  41b26c:	mov    cl,0x3f
  41b26e:	sbb    eax,0x7058b950
  41b273:	ja     0x41b22c
  41b275:	pop    ecx
  41b276:	popa   
  41b277:	xor    cl,BYTE PTR [eax+0x38]
  41b27a:	dec    edx
  41b27b:	push   esp
  41b27c:	cwde   
  41b27d:	sub    edx,DWORD PTR [eax+0x61]
  41b280:	mov    ebx,DWORD PTR [eax+0x74]
  41b283:	outs   dx,DWORD PTR ds:[esi]
  41b284:	mov    ch,BYTE PTR [ecx+0x2f]
  41b287:	add    BYTE PTR [eax],cl
  41b289:	cmp    ecx,DWORD PTR [eax+edx*2+0x3b]
  41b28d:	sub    eax,0x584b6150
  41b292:	je     0x41b303
  41b294:	dec    edx
  41b295:	imul   edi,ebp,0x4d4a5548
  41b29b:	and    BYTE PTR [eax],bl
  41b29d:	push   0x70
  41b29f:	jae    0x41b2a1
  41b2a1:	dec    edi
  41b2a2:	cmp    al,0x6f
  41b2a4:	fcomp  DWORD PTR fs:[ebx+ecx*2+0x502d1854]
  41b2ac:	popa   
  41b2ad:	cmp    ebx,DWORD PTR [eax+0x74]
  41b2b0:	outs   dx,DWORD PTR ds:[esi]
  41b2b1:	retf   0xfd36
  41b2b4:	inc    edi
  41b2b5:	sbb    al,0x39
  41b2b7:	dec    ebp
  41b2b8:	and    BYTE PTR [eax],bl
  41b2ba:	push   0x70
  41b2bc:	jae    0x41b27d
  41b2be:	cmp    eax,0x3998646f
  41b2c3:	dec    edx
  41b2c4:	push   esp
  41b2c5:	call   0x31a302f4
  41b2ca:	xor    esi,eax
  41b2cc:	je     0x41b2d4
  41b2ce:	xor    bl,ch
  41b2d0:	dec    DWORD PTR [esi-0x29a2b8d]
  41b2d6:	sahf   
  41b2d7:	loop   0x41b34a
  41b2d9:	adc    al,0x7c
  41b2db:	mov    dh,0x66
  41b2dd:	adc    dl,BYTE PTR [edx-0x7a218f2c]
  41b2e3:	in     eax,dx
  41b2e4:	pop    ebx
  41b2e5:	clc    
  41b2e6:	test   ebp,ebp
  41b2e8:	vpshrdq zmm2{k6}{z},zmm6,QWORD PTR [ecx]{1to8},0xa1
  41b2ef:	loopne 0x41b351
  41b2f1:	(bad)  
  41b2f3:	shl    BYTE PTR [ebx+0x11],cl
  41b2f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2f7:	loop   0x41b366
  41b2f9:	rol    BYTE PTR [esi-0x5f2a8e22],1
  41b2ff:	loopne 0x41b361
  41b301:	sahf   
  41b302:	mov    ch,0xf1
  41b304:	jae    0x41b306
  41b306:	mov    ds:0x9463cc60,al
  41b30b:	into   
  41b30c:	xlat   BYTE PTR ds:[ebx]
  41b30d:	popfw  
  41b30f:	leave  
  41b310:	out    0x70,al
  41b312:	xor    ebx,esi
  41b314:	lock gs jge 0x41b337
  41b318:	jecxz  0x41b38b
  41b31a:	xchg   esp,eax
  41b31b:	cld    
  41b31c:	into   
  41b31d:	xchg   dx,ax
  41b31f:	adc    dh,cl
  41b321:	jo     0x41b381
  41b323:	push   es
  41b324:	fcomp  DWORD PTR [ebx+0x76]
  41b327:	push   cs
  41b328:	jmp    0x5c4c:0xc0055266
  41b32f:	cld    
  41b330:	out    dx,eax
  41b331:	ins    BYTE PTR es:[edi],dx
  41b332:	pop    esi
  41b333:	sti    
  41b334:	mov    edi,0x2419744c
  41b339:	aas    
  41b33a:	push   edx
  41b33b:	add    esi,ecx
  41b33d:	jb     0x41b386
  41b33f:	pop    esp
  41b340:	and    DWORD PTR [ebx+0x10],ecx
  41b343:	or     ebp,edx
  41b345:	in     al,0xd
  41b347:	in     al,dx
  41b348:	fdivr  DWORD PTR [edi-0xd3615a1]
  41b34e:	and    esp,edi
  41b350:	rcl    dh,cl
  41b352:	mov    ?,WORD PTR [edx-0x21fd162b]
  41b358:	(bad)  
  41b359:	aad    0x13
  41b35b:	mov    ch,0xa3
  41b35d:	in     al,dx
  41b35e:	adc    ebx,ebx
  41b360:	mov    ebp,0x9aeeddd6
  41b365:	mov    edi,0xe78cdffd
  41b36a:	add    ch,cl
  41b36c:	fstp   QWORD PTR [ecx-0x554318dd]
  41b372:	mov    bl,0xda
  41b375:	js     0x41b35f
  41b377:	aam    0xdc
  41b379:	xchg   esp,eax
  41b37a:	call   0xf2c18d3f
  41b37f:	les    esi,FWORD PTR [ebp+edx*4+0x55ed9cec]
  41b386:	(bad)  [ecx-0x5e16d3d7]
  41b38c:	fadd   DWORD PTR [edi-0x15]
  41b38f:	(bad)  
  41b390:	jecxz  0x41b3d7
  41b392:	and    al,0x60
  41b394:	fimul  WORD PTR [eax-0x29]
  41b397:	jg     0x41b371
  41b399:	xor    ch,cl
  41b39b:	mov    esi,DWORD PTR [ebp-0x147a29ea]
  41b3a1:	aas    
  41b3a2:	lock push ebx
  41b3a4:	fadd   DWORD PTR [edx-0x2f]
  41b3a7:	dec    edi
  41b3a8:	call   0xe4a3a6c5
  41b3ad:	or     al,0xd8
  41b3af:	les    edx,FWORD PTR ss:[ebx]
  41b3b2:	fcomp  DWORD PTR [edx-0x1c]
  41b3b5:	adc    eax,0xcc226ef
  41b3ba:	fcom   DWORD PTR [ebx-0x29]
  41b3bd:	inc    DWORD PTR [esi]
  41b3bf:	enter  0x1fd8,0x1a
  41b3c3:	cwde   
  41b3c4:	fdiv   DWORD PTR [ebx-0x30]
  41b3c7:	mov    al,ds:0xe7e970ed
  41b3cc:	in     eax,0x65
  41b3ce:	fld    QWORD PTR [eax]
  41b3d0:	jnp    0x41b385
  41b3d2:	jno    0x41b398
  41b3d4:	into   
  41b3d5:	mov    edi,0xe55cca66
  41b3da:	jo     0x41b3aa
  41b3dc:	mov    al,bl
  41b3de:	pop    ebx
  41b3df:	sahf   
  41b3e0:	test   esi,esp
  41b3e2:	arpl   WORD PTR [esi-0x48e02675],di
  41b3e8:	sahf   
  41b3e9:	mov    al,0x40
  41b3eb:	xchg   esp,eax
  41b3ec:	test   dl,bl
  41b3ee:	bound  eax,QWORD PTR [edi-0x649d4182]
  41b3f4:	addr16 jmp 0x41b463
  41b3f7:	xchg   edi,eax
  41b3f8:	xchg   BYTE PTR [ebp-0x1aa9709a],bh
  41b3fe:	je     0x41b47a
  41b400:	adc    al,al
  41b402:	bound  edi,QWORD PTR [edx+0x7]
  41b405:	mov    bl,0x64
  41b407:	push   eax
  41b408:	and    ebp,ebp
  41b40a:	pop    ds
  41b40b:	cmp    al,BYTE PTR [esi]
  41b40d:	jmp    0x3c62:0xd7fc5070
  41b414:	icebp  
  41b415:	ret    
  41b416:	jno    0x41b46e
  41b418:	sbb    ebp,ebx
  41b41a:	imul   eax,DWORD PTR [esp+eiz*8-0x51],0x4c
  41b41f:	cmp    al,0xd9
  41b421:	fild   QWORD PTR [esi+edi*1-0x24]
  41b425:	push   ebx
  41b426:	push   edx
  41b427:	push   ss
  41b428:	fcmovnbe st,st(7)
  41b42a:	je     0x41b434
  41b42c:	pop    es
  41b42d:	out    0x5b,eax
  41b42f:	and    al,0xca
  41b431:	call   0xe542b2a7
  41b436:	in     al,0x65
  41b438:	add    ah,al
  41b43a:	xchg   ebx,eax
  41b43b:	inc    esi
  41b43c:	outs   dx,BYTE PTR ds:[esi]
  41b43d:	les    ebp,FWORD PTR [edx+0x6f]
  41b440:	outs   dx,BYTE PTR ds:[esi]
  41b441:	and    eax,0x3b411d31
  41b446:	outs   dx,BYTE PTR ds:[esi]
  41b447:	ins    BYTE PTR es:[edi],dx
  41b448:	jne    0x41b4c8
  41b44a:	cmp    ebx,DWORD PTR ds:0x5e59694d
  41b450:	addr16 gs cmp eax,0x3b654efd
  41b457:	imul   ebp,DWORD PTR [edi+0x5f],0xc95bfd64
  41b45e:	ins    BYTE PTR es:[edi],dx
  41b45f:	pusha  
  41b460:	outs   dx,DWORD PTR ds:[esi]
  41b461:	mov    ch,0x59
  41b463:	jno    0x41b4d8
  41b465:	pop    eax
  41b466:	pop    esi
  41b467:	popa   
  41b468:	gs mov esi,0xc166663b
  41b46e:	ins    BYTE PTR es:[edi],dx
  41b46f:	pop    esi
  41b470:	je     0x41b423
  41b472:	pop    eax
  41b473:	imul   eax,DWORD PTR [eax],0xffffffb1
  41b476:	imul   esp,DWORD PTR [edx+0x6e],0xffffffc4
  41b47a:	pop    esi
  41b47b:	jno    0x41b4f6
  41b47d:	lods   eax,DWORD PTR ds:[esi]
  41b47e:	pusha  
  41b47f:	outs   dx,DWORD PTR ds:[esi]
  41b480:	add    BYTE PTR [ecx-0x448b9da7],dh
  41b486:	pop    ecx
  41b487:	push   0x6d
  41b489:	cmp    BYTE PTR [edx+eiz*2],bh
  41b48c:	jb     0x41b414
  41b48e:	push   0x6f
  41b490:	and    BYTE PTR [eax+0x66],bh
  41b493:	jo     0x41b508
  41b495:	addr16 pop eax
  41b497:	outs   dx,DWORD PTR ds:[esi]
  41b498:	add    BYTE PTR fs:[ebx+0xd],cl
  41b49c:	imul   esi,DWORD PTR [ebp+0x44],0x59
  41b4a0:	ins    BYTE PTR es:[edi],dx
  41b4a1:	outs   dx,DWORD PTR ds:[esi]
  41b4a2:	jae    0x41b4d1
  41b4a4:	pop    ebp
  41b4a5:	arpl   WORD PTR [ebx+0x58],di
  41b4a8:	jb     0x41b518
  41b4aa:	inc    esp
  41b4ab:	sub    eax,0x662e6169
  41b4b0:	fs gs xor esi,ebp
  41b4b4:	and    esi,DWORD PTR [eax+0x50]
  41b4b7:	out    dx,eax
  41b4b8:	shl    BYTE PTR [esi+edx*2+0x4e],cl
  41b4bc:	in     eax,0x70
  41b4be:	xor    ecx,edi
  41b4c0:	out    0x62,eax
  41b4c2:	inc    edi
  41b4c3:	push   esp
  41b4c4:	jmp    0x2bff:0xd30d1873
  41b4cb:	add    eax,0x4f93814
  41b4d0:	and    eax,0x2e985d30
  41b4d5:	and    eax,DWORD PTR [ecx-0x4]
  41b4d8:	mov    ebx,0x13504c2a
  41b4dd:	pop    eax
  41b4de:	push   esp
  41b4df:	push   eax
  41b4e0:	adc    ebx,DWORD PTR [eax+0x44]
  41b4e3:	add    eax,0xd093214
  41b4e8:	adc    al,0x32
  41b4ea:	or     DWORD PTR [ebp+0x11],eax
  41b4ed:	xor    bh,cl
  41b4ef:	dec    esp
  41b4f0:	adc    DWORD PTR [edx],esi
  41b4f2:	stc    
  41b4f3:	inc    esp
  41b4f4:	adc    DWORD PTR [edx],esi
  41b4f6:	jmp    0xe973c647
  41b4fb:	mov    WORD PTR [ecx],es
  41b4fd:	push   esp
  41b4fe:	add    cl,cl
  41b500:	fsub   st(6),st
  41b502:	arpl   sp,cx
  41b504:	int    0xe2
  41b506:	mov    ds:0x7d5c018c,ax
  41b50c:	mov    eax,0xcd956dd6
  41b511:	shl    DWORD PTR [ecx-0x78],1
  41b514:	scas   al,BYTE PTR es:[edi]
  41b515:	out    0xff,eax
  41b517:	dec    esp
  41b518:	sub    al,0xc4
  41b51a:	(bad)  
  41b51b:	fcom   QWORD PTR [edi]
  41b51d:	(bad)  
  41b51e:	jmp    DWORD PTR [eax-0x55003beb]
  41b524:	sub    esp,eax
  41b526:	push   DWORD PTR [edx]
  41b528:	out    dx,al
  41b529:	ret    
  41b52a:	call   DWORD PTR [ecx+ecx*1]
  41b52d:	cmp    eax,esp
  41b52f:	fdivp  st(5),st
  41b531:	aas    
  41b532:	(bad)  
  41b533:	(bad)  
  41b534:	or     BYTE PTR [ecx],dh
  41b536:	(bad)  
  41b537:	into   
  41b538:	(bad)  
  41b539:	xor    esp,eax
  41b53b:	(bad)  
  41b53c:	jg     0x41b561
  41b53e:	les    edi,FWORD PTR [esi-0x493be434]
  41b544:	jge    0x41b55c
  41b546:	les    ebp,FWORD PTR [esi-0x593bf6fc]
  41b54c:	jb     0x41b519
  41b54e:	ret    
  41b54f:	sahf   
  41b550:	mov    ebx,0x6896c3c5
  41b555:	into   
  41b556:	ret    
  41b557:	mov    gs,ebp
  41b559:	mov    esi,0xcf7b86c3
  41b55e:	ret    
  41b55f:	jle    0x41b550
  41b561:	iret   
  41b562:	ret    
  41b563:	add    BYTE PTR [esi-0xc],dh
  41b566:	rol    ebx,0x6e
  41b569:	ret    
  41b56a:	rol    ebx,0x66
  41b56d:	xchg   ecx,eax
  41b56e:	xchg   ebp,eax
  41b56f:	ret    
  41b570:	pop    esi
  41b571:	jns    0x41b50b
  41b573:	ret    
  41b574:	push   esi
  41b575:	inc    esi
  41b576:	call   0x46c3:0x93924ec3
  41b57d:	cmp    DWORD PTR [ebx+eax*8+0x3e],0xffffff84
  41b582:	jne    0x41b547
  41b584:	ss nop
  41b586:	outs   dx,DWORD PTR ds:[esi]
  41b587:	ret    
  41b588:	cs mov bl,0x6a
  41b58b:	ret    
  41b58c:	lods   al,BYTE PTR es:[esi]
  41b58e:	arpl   sp,ax
  41b590:	push   ds
  41b591:	add    al,0x5c
  41b593:	les    edx,FWORD PTR [esi]
  41b595:	scas   eax,DWORD PTR es:[edi]
  41b596:	push   ebp
  41b597:	les    ecx,FWORD PTR [esi]
  41b599:	test   al,0x4e
  41b59b:	les    eax,FWORD PTR [esi]
  41b59d:	into   
  41b59e:	jo     0x41b563
  41b5a0:	inc    BYTE PTR [ecx-0x4e093c94]
  41b5a6:	jmp    DWORD PTR [esi-0xe]
  41b5a9:	push   eax
  41b5aa:	jnp    0x41b5fe
  41b5ac:	repnz push eax
  41b5ae:	add    al,0x85
  41b5b0:	repnz push eax
  41b5b2:	mov    edx,0x3f50f27d
  41b5b7:	je     0x41b5ab
  41b5b9:	push   eax
  41b5ba:	enter  0xf26c,0x50
  41b5be:	dec    ebp
  41b5bf:	addr16 repnz push eax
  41b5c2:	fstp   DWORD PTR [edi-0xe]
  41b5c5:	push   eax
  41b5c6:	jnp    0x41b61e
  41b5c8:	add    BYTE PTR [edx+0x50],dh
  41b5cb:	stc    
  41b5cc:	dec    esi
  41b5cd:	jb     0x41b61f
  41b5cf:	push   ebx
  41b5d0:	mov    DWORD PTR [edx+0x50],esi
  41b5d3:	nop
  41b5d4:	mov    DWORD PTR [edx+0x50],esi
  41b5d7:	rol    BYTE PTR [ecx+0x7f3c5072],cl
  41b5dd:	jb     0x41b62f
  41b5df:	imul   edx,DWORD PTR [edi+0x7ef85072],0x72
  41b5e6:	push   eax
  41b5e7:	daa    
  41b5e8:	sub    DWORD PTR [edx+0x50],esi
  41b5eb:	pop    edx
  41b5ec:	sub    DWORD PTR [edx+0x50],esi
  41b5ef:	jecxz  0x41b61a
  41b5f1:	jb     0x41b643
  41b5f3:	push   ss
  41b5f4:	sub    BYTE PTR [edx+0x50],dh
  41b5f7:	inc    ebp
  41b5f8:	sub    BYTE PTR [edx+0x50],dh
  41b5fb:	js     0x41b625
  41b5fd:	jb     0x41b64f
  41b5ff:	xlat   BYTE PTR ds:[ebx]
  41b600:	sub    BYTE PTR [edx+0x50],dh
  41b603:	mov    dh,0x2b
  41b605:	jb     0x41b657
  41b607:	inc    eax
  41b608:	sub    dh,dl
  41b60a:	dec    edi
  41b60b:	sbb    ah,BYTE PTR [edx+esi*8]
  41b60e:	dec    edi
  41b60f:	xchg   ecx,eax
  41b610:	lods   al,BYTE PTR ds:[esi]
  41b611:	cmc    
  41b612:	dec    edi
  41b613:	shl    DWORD PTR [ebp+ebp*8-0xa50b4b1],cl
  41b61a:	dec    edi
  41b61b:	mov    ah,0xa6
  41b61d:	in     eax,dx
  41b61e:	dec    edi
  41b61f:	adc    al,BYTE PTR [eax]
  41b621:	rol    BYTE PTR [ebp+edi*8-0x7d],0xc0
  41b626:	inc    esp
  41b627:	std    
  41b628:	sahf   
  41b629:	xchg   ecx,eax
  41b62a:	inc    esp
  41b62b:	std    
  41b62c:	sbb    BYTE PTR [eax],al
  41b62e:	xchg   edx,eax
  41b62f:	inc    esp
  41b630:	std    
  41b631:	lds    esp,FWORD PTR [ebp-0x79e502bc]
  41b637:	inc    esp
  41b638:	std    
  41b639:	test   BYTE PTR [ecx-0x761702bc],cl
  41b63f:	inc    esp
  41b640:	std    
  41b641:	rcr    BYTE PTR [ebp-0x603402bc],0x44
  41b648:	std    
  41b649:	or     dl,al
  41b64b:	inc    esp
  41b64c:	std    
  41b64d:	push   ecx
  41b64e:	ret    0xfd44
  41b651:	(bad)
  41b654:	std    
  41b655:	push   cs
  41b656:	push   ebp
  41b657:	inc    ebp
  41b658:	std    
  41b659:	mov    WORD PTR [ebp+0x45],es
  41b65c:	std    
  41b65d:	sti    
  41b65e:	push   ebp
  41b65f:	inc    ebp
  41b660:	std    
  41b661:	jns    0x41b6b9
  41b663:	inc    ebp
  41b664:	std    
  41b665:	not    DWORD PTR [esi]
  41b667:	inc    ebp
  41b668:	std    
  41b669:	jae    0x41b665
  41b66b:	inc    esp
  41b66c:	std    
  41b66d:	loope  0x41b669
  41b66f:	inc    esp
  41b670:	std    
  41b671:	adc    ch,BYTE PTR [ebx]
  41b673:	inc    ebp
  41b674:	std    
  41b675:	clc    
  41b676:	sub    eax,DWORD PTR [ebp-0x3]
  41b679:	sub    DWORD PTR [eax*2+0x452ec5fd],edi
  41b680:	std    
  41b681:	sti    
  41b682:	cs inc ebp
  41b684:	std    
  41b685:	xor    DWORD PTR [edi],ebp
  41b687:	inc    ebp
  41b688:	std    
  41b689:	ins    DWORD PTR es:[edi],dx
  41b68a:	xor    DWORD PTR [ebp-0x3],eax
  41b68d:	fsub   DWORD PTR [ebx+ecx*2]
  41b690:	std    
  41b691:	mov    ebp,0xfd4b0600
  41b696:	push   0xfffffffd
  41b698:	dec    edx
  41b699:	std    
  41b69a:	dec    ecx
  41b69b:	xor    DWORD PTR [esi],ebp
  41b69d:	sar    edi,0x6
  41b6a0:	popa   
  41b6a1:	add    DWORD PTR [eax],eax
  41b6a3:	xor    DWORD PTR [eax+0x1],esp
  41b6a6:	add    BYTE PTR [ecx],dh
  41b6a8:	pusha  
  41b6a9:	add    DWORD PTR [eax],eax
  41b6ab:	xor    DWORD PTR [eax+0x1],esp
  41b6ae:	add    BYTE PTR [ecx],dh
  41b6b0:	pusha  
  41b6b1:	add    DWORD PTR [eax],eax
  41b6b3:	jb     0x41b6a9
  41b6b5:	call   0x2435fe1c
  41b6ba:	dec    eax
  41b6bb:	push   eax
  41b6bc:	repz jmp 0x41b6be
  41b6bf:	arpl   WORD PTR [ecx+eax*8],dx
  41b6c2:	push   ebx
  41b6c3:	fs repz sub al,0x47
  41b6c7:	fs lock retf 0x551
  41b6cc:	inc    ebp
  41b6cd:	int3   
  41b6ce:	dec    eax
  41b6cf:	xor    DWORD PTR [ebp-0x1b],eax
  41b6d2:	sub    eax,0xffe66814
  41b6d7:	dec    ebp
  41b6d8:	lock adc DWORD PTR [eax+0x31],ebx
  41b6dc:	sub    al,0xcf
  41b6de:	jb     0x41b6ec
  41b6e0:	pusha  
  41b6e1:	mov    al,0x67
  41b6e3:	adc    al,0x34
  41b6e5:	in     eax,dx
  41b6e6:	inc    edx
  41b6e7:	stc    
  41b6e8:	inc    esp
  41b6e9:	loopne 0x41b75d
  41b6eb:	in     eax,0x3c
  41b6ed:	ret    0xd1ff
  41b6f0:	inc    ecx
  41b6f1:	loopne 0x41b756
  41b6f3:	jb     0x31422adb
  41b6f9:	pop    ecx
  41b6fa:	or     cl,BYTE PTR [ebx]
  41b6fc:	cmp    esp,DWORD PTR [ebp+0x7]
  41b6ff:	pop    es
  41b700:	adc    DWORD PTR [edx],edi
  41b702:	jmp    0x110a:0xe3fca69
  41b709:	test   dh,ah
  41b70b:	imul   edx,DWORD PTR [ecx+0x69],0x26
  41b70f:	das    
  41b710:	push   ecx
  41b711:	inc    eax
  41b712:	push   cs
  41b713:	or     ch,BYTE PTR [eax]
  41b715:	or     DWORD PTR [eax-0x1e],edx
  41b718:	ss add al,dh
  41b71b:	and    edx,DWORD PTR [edx-0x7d28c02f]
  41b721:	sub    eax,esp
  41b723:	and    edx,DWORD PTR [ecx+0x29]
  41b726:	or     al,0x15
  41b728:	push   ecx
  41b729:	sub    eax,esi
  41b72b:	and    edx,DWORD PTR [ecx]
  41b72d:	out    0x45,al
  41b72f:	rcl    BYTE PTR [ebp+0x29],1
  41b732:	loopne 0x41b73c
  41b734:	adc    eax,esp
  41b736:	adc    bh,ch
  41b738:	sub    eax,DWORD PTR [ebx]
  41b73a:	(bad)  
  41b73b:	fist   WORD PTR [ebx-0x23]
  41b73e:	(bad)  
  41b73f:	or     al,0x11
  41b741:	sub    esp,eax
  41b743:	adc    edx,DWORD PTR [ecx]
  41b745:	or     edi,eax
  41b747:	and    edx,DWORD PTR [ecx]
  41b749:	sub    ecx,ecx
  41b74b:	and    BYTE PTR [eax],ah
  41b74d:	sub    eax,edi
  41b74f:	and    edx,DWORD PTR [ecx+0x9]
  41b752:	cli    
  41b753:	jmp    0x41b768
  41b755:	fst    st(2)
  41b757:	push   ss
  41b758:	arpl   WORD PTR [edi],bx
  41b75a:	ret    
  41b75b:	out    0x0,eax
  41b75d:	sbb    cl,BYTE PTR [ecx]
  41b75f:	out    0x3,eax
  41b761:	xor    DWORD PTR [ecx],ecx
  41b763:	out    0x3,eax
  41b765:	xor    DWORD PTR [ecx],ecx
  41b767:	out    0x3,eax
  41b769:	xor    DWORD PTR [ecx],ecx
  41b76b:	out    0x3,eax
  41b76d:	xor    DWORD PTR [ecx],ecx
  41b76f:	out    0x3,eax
  41b771:	xor    DWORD PTR [ecx],ecx
  41b773:	out    0x3,eax
  41b775:	xor    DWORD PTR [ecx],ecx
  41b777:	out    0x3,eax
  41b779:	xor    DWORD PTR [ecx],ecx
  41b77b:	out    0x3,eax
  41b77d:	xor    DWORD PTR [ecx],ecx
  41b77f:	out    0x3,eax
  41b781:	xor    DWORD PTR [ecx],ecx
  41b783:	out    0x3,eax
  41b785:	xor    DWORD PTR [ecx],ecx
  41b787:	out    0x3,eax
  41b789:	xor    DWORD PTR [ecx],ecx
  41b78b:	out    0x3,eax
  41b78d:	xor    DWORD PTR [ecx],ecx
  41b78f:	add    cl,ch
  41b791:	xor    cl,BYTE PTR [ecx]
  41b793:	add    cl,ch
  41b795:	xor    cl,BYTE PTR [ecx]
  41b797:	add    cl,ch
  41b799:	xor    cl,BYTE PTR [ecx]
  41b79b:	add    cl,ch
  41b79d:	xor    cl,BYTE PTR [ecx]
  41b79f:	add    cl,ch
  41b7a1:	xor    cl,BYTE PTR [ecx]
  41b7a3:	add    cl,ch
  41b7a5:	xor    cl,BYTE PTR [ecx]
  41b7a7:	add    cl,ch
  41b7a9:	xor    cl,BYTE PTR [ecx]
  41b7ab:	add    cl,ch
  41b7ad:	xor    cl,BYTE PTR [ecx]
  41b7af:	add    cl,ch
  41b7b1:	xor    cl,BYTE PTR [ecx]
  41b7b3:	add    cl,ch
  41b7b5:	xor    cl,BYTE PTR [ecx]
  41b7b7:	add    cl,ch
  41b7b9:	xor    cl,BYTE PTR [ecx]
  41b7bb:	add    cl,ch
  41b7bd:	xor    cl,BYTE PTR [ecx]
  41b7bf:	add    cl,ch
  41b7c1:	add    BYTE PTR [edx],dh
  41b7c3:	or     DWORD PTR [eax],eax
  41b7c5:	jmp    0xe941c0fc
  41b7ca:	xor    cl,BYTE PTR [ecx]
  41b7cc:	add    cl,ch
  41b7ce:	xor    cl,BYTE PTR [ecx]
  41b7d0:	add    cl,ch
  41b7d2:	xor    cl,BYTE PTR [ecx]
  41b7d4:	add    cl,ch
  41b7d6:	xor    cl,BYTE PTR [ecx]
  41b7d8:	add    cl,ch
  41b7da:	xor    cl,BYTE PTR [ecx]
  41b7dc:	add    cl,ch
  41b7de:	xor    cl,BYTE PTR [ecx]
  41b7e0:	add    cl,ch
  41b7e2:	xor    cl,BYTE PTR [ecx]
  41b7e4:	add    cl,ch
  41b7e6:	xor    cl,BYTE PTR [ecx]
  41b7e8:	add    cl,ch
  41b7ea:	xor    cl,BYTE PTR [ecx]
  41b7ec:	add    cl,ch
  41b7ee:	xor    cl,BYTE PTR [ecx]
  41b7f0:	add    cl,ch
  41b7f2:	xor    cl,BYTE PTR [ecx]
  41b7f4:	add    cl,ch
  41b7f6:	xor    cl,BYTE PTR [ecx]
  41b7f8:	add    cl,ch
  41b7fa:	xor    cl,BYTE PTR [ecx]
  41b7fc:	add    cl,ch
  41b7fe:	xor    cl,BYTE PTR [ecx]
  41b800:	add    cl,ch
  41b802:	xor    cl,BYTE PTR [ecx]
  41b804:	add    cl,ch
  41b806:	xor    cl,BYTE PTR [ecx]
  41b808:	add    BYTE PTR [eax],al
  41b80a:	dec    eax
  41b80b:	or     BYTE PTR [eax],al
  41b80d:	add    BYTE PTR [eax],bl
  41b80f:	or     BYTE PTR [eax],al
  41b811:	add    BYTE PTR [eax],bl
  41b813:	or     BYTE PTR [eax],al
  41b815:	add    BYTE PTR [eax],cl
  41b817:	or     BYTE PTR [eax],al
  41b819:	add    BYTE PTR [eax],cl
  41b81b:	or     BYTE PTR [eax],al
  41b81d:	add    BYTE PTR [eax],bl
  41b81f:	or     BYTE PTR [eax],al
  41b821:	add    BYTE PTR [eax],bl
  41b823:	or     BYTE PTR [eax],al
  41b825:	add    BYTE PTR [eax],al
  41b827:	or     BYTE PTR [eax],cl
  41b829:	add    BYTE PTR [eax],al
  41b82b:	or     BYTE PTR [eax],cl
  41b82d:	add    BYTE PTR [eax],al
  41b82f:	fadd   DWORD PTR [edi]
  41b831:	add    BYTE PTR [eax],al
  41b833:	fadd   DWORD PTR [edi]
  41b835:	add    BYTE PTR [eax],al
  41b837:	enter  0x7,0x0
  41b83b:	enter  0x7,0x0
  41b83f:	fadd   DWORD PTR [edi]
  41b841:	add    BYTE PTR [eax],al
  41b843:	fadd   DWORD PTR [edi]
  41b845:	add    BYTE PTR [eax],al
  41b847:	enter  0x7,0x0
  41b84b:	enter  0x7,0x0
  41b84f:	cwde   
  41b850:	pop    es
  41b851:	add    BYTE PTR [eax],al
  41b853:	cwde   
  41b854:	pop    es
  41b855:	add    BYTE PTR [eax],al
  41b857:	mov    BYTE PTR [edi],al
  41b859:	add    BYTE PTR [eax],al
  41b85b:	mov    BYTE PTR [edi],al
  41b85d:	add    BYTE PTR [eax],al
  41b85f:	cwde   
  41b860:	pop    es
  41b861:	add    BYTE PTR [eax],al
  41b863:	cwde   
  41b864:	pop    es
  41b865:	add    BYTE PTR [eax],al
  41b867:	mov    BYTE PTR [edi],al
  41b869:	add    BYTE PTR [eax],al
  41b86b:	mov    BYTE PTR [edi],al
  41b86d:	add    BYTE PTR [eax],al
  41b86f:	pop    eax
  41b870:	pop    es
  41b871:	add    BYTE PTR [eax],al
  41b873:	pop    eax
  41b874:	pop    es
  41b875:	add    BYTE PTR [eax],al
  41b877:	dec    eax
  41b878:	pop    es
  41b879:	add    BYTE PTR [eax],al
  41b87b:	dec    eax
  41b87c:	pop    es
  41b87d:	add    BYTE PTR [eax],al
  41b87f:	pop    eax
  41b880:	pop    es
  41b881:	add    BYTE PTR [eax],al
  41b883:	xor    DWORD PTR [edx+0x1],esp
  41b886:	add    BYTE PTR [ecx],dh
  41b888:	bound  eax,QWORD PTR [ecx]
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	xor    DWORD PTR [edx+0x1],esp
  41b88f:	add    BYTE PTR [ecx],dh
  41b891:	pusha  
  41b892:	add    DWORD PTR [eax],eax
  41b894:	xor    DWORD PTR [eax+0x1],esp
  41b897:	add    BYTE PTR [ecx],dh
  41b899:	pusha  
  41b89a:	add    DWORD PTR [eax],eax
  41b89c:	xor    DWORD PTR [eax+0x1],esp
  41b89f:	add    BYTE PTR [ecx],dh
  41b8a1:	pusha  
  41b8a2:	add    DWORD PTR [eax],eax
  41b8a4:	xor    DWORD PTR [eax+0x1],esp
  41b8a7:	add    BYTE PTR [ecx],dh
  41b8a9:	pusha  
  41b8aa:	add    DWORD PTR [eax],eax
  41b8ac:	xor    DWORD PTR [eax+0x1],esp
  41b8af:	add    BYTE PTR [ecx],dh
  41b8b1:	pusha  
  41b8b2:	add    DWORD PTR [eax],eax
  41b8b4:	xor    DWORD PTR [eax+0x1],esp
  41b8b7:	add    BYTE PTR [ecx],dh
  41b8b9:	pusha  
  41b8ba:	add    DWORD PTR [eax],eax
  41b8bc:	xor    DWORD PTR [eax+0x1],esp
  41b8bf:	add    BYTE PTR [ecx],dh
  41b8c1:	pusha  
  41b8c2:	add    DWORD PTR [eax],eax
  41b8c4:	xor    DWORD PTR [eax+0x1],esp
  41b8c7:	add    BYTE PTR [ecx],dh
  41b8c9:	pusha  
  41b8ca:	add    DWORD PTR [eax],eax
  41b8cc:	xor    DWORD PTR [eax+0x1],esp
  41b8cf:	add    BYTE PTR [ecx],dh
  41b8d1:	pusha  
  41b8d2:	add    DWORD PTR [eax],eax
  41b8d4:	xor    DWORD PTR [eax+0x1],esp
  41b8d7:	add    BYTE PTR [ecx],dh
  41b8d9:	pusha  
  41b8da:	add    DWORD PTR [eax],eax
  41b8dc:	xor    DWORD PTR [eax+0x1],esp
  41b8df:	add    BYTE PTR [ecx],dh
  41b8e1:	pusha  
  41b8e2:	add    DWORD PTR [eax],eax
  41b8e4:	xor    DWORD PTR [ecx+0x24],esp
  41b8e7:	inc    ebx
  41b8e8:	push   ss
  41b8e9:	jmp    0xc2c88499
  41b8ee:	xor    al,0xba
  41b8f0:	add    cl,cl
  41b8f2:	xchg   edx,eax
  41b8f3:	lods   eax,DWORD PTR ds:[esi]
  41b8f4:	xor    DWORD PTR [ecx-0x17],eax
  41b8f7:	stos   DWORD PTR es:[edi],eax
  41b8f8:	retf   
  41b8f9:	dec    esi
  41b8fa:	popa   
  41b8fb:	and    al,0x43
  41b8fd:	into   
  41b8fe:	or     BYTE PTR [edi+0x3],ah
  41b901:	icebp  
  41b902:	or     bh,al
  41b904:	add    esp,DWORD PTR [ecx]
  41b906:	or     edi,ebx
  41b908:	add    esi,DWORD PTR ds:0x3603e909
  41b90e:	dec    edx
  41b90f:	out    0x3,eax
  41b911:	mov    cl,0x8
  41b913:	out    0x3,eax
  41b915:	jno    0x41b920
  41b917:	out    0x3,eax
  41b919:	push   ecx
  41b91a:	or     edi,esp
  41b91c:	add    eax,DWORD PTR [ecx+0x9]
  41b91f:	out    0x3,eax
  41b921:	cmp    DWORD PTR [ecx],ecx
  41b923:	out    0x3,eax
  41b925:	sub    eax,0x3303e709
  41b92a:	or     edi,esp
  41b92c:	add    esi,esi
  41b92e:	dec    ecx
  41b92f:	out    0x83,eax
  41b931:	xor    DWORD PTR [ecx],ecx
  41b933:	out    0xc3,eax
  41b935:	out    0x49,al
  41b937:	out    0x23,eax
  41b939:	xor    DWORD PTR [ecx],ecx
  41b93b:	out    0xf3,eax
  41b93d:	(bad)  
  41b93e:	dec    ecx
  41b93f:	out    0xb,eax
  41b941:	xor    DWORD PTR [ecx],ecx
  41b943:	out    0xff,eax
  41b945:	(bad)  
  41b946:	dec    ecx
  41b947:	out    0x1,eax
  41b949:	xor    DWORD PTR [ecx],ecx
  41b94b:	out    0x4,eax
  41b94d:	xor    DWORD PTR [ecx],ecx
  41b94f:	addr16 add al,0x31
  41b952:	or     DWORD PTR [edi],esp
  41b954:	add    al,0x0
  41b956:	xor    DWORD PTR [ecx],ecx
  41b958:	mov    DWORD PTR [ebx],0x3d70931
  41b95e:	xor    DWORD PTR [ecx],ecx
  41b960:	out    dx,eax
  41b961:	add    esi,DWORD PTR [ecx]
  41b963:	or     ebx,esp
  41b965:	add    esi,DWORD PTR [ecx]
  41b967:	or     ecx,ebp
  41b969:	add    esi,DWORD PTR [ecx]
  41b96b:	or     eax,ebp
  41b96d:	add    esi,DWORD PTR [ecx]
  41b96f:	or     edi,edi
  41b971:	adc    ebx,DWORD PTR [ecx]
  41b973:	sub    edi,ebx
  41b975:	repz or DWORD PTR cs:[eax],eax
  41b979:	lock inc ebp
  41b97b:	and    bl,BYTE PTR [edi]
  41b97d:	rcr    BYTE PTR [ebp+0x2],1
  41b980:	jmp    edx
  41b982:	and    BYTE PTR [edi],bl
  41b984:	and    al,BYTE PTR [ebx]
  41b986:	inc    ebx
  41b987:	inc    DWORD PTR [ecx]
  41b989:	shl    BYTE PTR [ebx],cl
  41b98b:	and    BYTE PTR [ecx],ah
  41b98d:	iret   
  41b98e:	and    al,0x1b
  41b990:	es out 0x1c,eax
  41b993:	pop    ss
  41b994:	push   es
  41b995:	mov    esp,0xd422f441
  41b99a:	and    DWORD PTR [ebx+eax*1],edx
  41b99d:	lods   eax,DWORD PTR ds:[esi]
  41b99e:	es cmc 
  41b9a0:	and    eax,DWORD PTR ds:0x2041501
  41b9a6:	add    dl,BYTE PTR [edx]
  41b9a8:	add    eax,ebp
  41b9aa:	xor    BYTE PTR ds:0x1528e106,cl
  41b9b0:	push   cs
  41b9b1:	mul    ch
  41b9b3:	sbb    DWORD PTR [ebx],edx
  41b9b5:	(bad)  
  41b9b6:	in     eax,0x21
  41b9b8:	sbb    al,0xe4
  41b9ba:	add    dl,ah
  41b9bc:	adc    dl,BYTE PTR ds:0x190ad6e9
  41b9c2:	div    DWORD PTR [ecx]
  41b9c4:	sbb    eax,0x11c0f707
  41b9c9:	add    eax,esi
  41b9cb:	mov    edi,0xc3f30615
  41b9d0:	adc    al,0xff
  41b9d2:	rol    BYTE PTR [ebx+0x27],1
  41b9d5:	and    al,0xcf
  41b9d7:	xor    al,0x24
  41b9d9:	and    eax,0x2ce956bb
  41b9de:	ret    0xef42
  41b9e1:	xor    al,0x8
  41b9e3:	and    esp,esi
  41b9e5:	sbb    BYTE PTR es:[edx+0x25],dl
  41b9e9:	sbb    eax,0x477ee9
  41b9ee:	jmp    0x41c325
  41b9f3:	pop    eax
  41b9f4:	or     al,0xfd
  41b9f6:	dec    DWORD PTR [eax+ecx*2-0x2]
  41b9fa:	add    BYTE PTR [esp+ecx*1-0x3],cl
  41b9fe:	add    BYTE PTR [eax+ecx*2-0x2],cl
  41ba02:	call   FWORD PTR [esp+ecx*1+0x0]
  41ba06:	add    BYTE PTR [eax+0xc],bl
  41ba09:	std    
  41ba0a:	dec    DWORD PTR [eax+0x48]
  41ba0d:	std    
  41ba0e:	dec    DWORD PTR [eax+0x48]
  41ba11:	inc    BYTE PTR [eax]
  41ba13:	sbb    al,0x48
  41ba15:	inc    BYTE PTR [eax]
  41ba17:	sbb    BYTE PTR [eax-0x3],cl
  41ba1a:	dec    DWORD PTR [eax+ecx*2]
  41ba1d:	std    
  41ba1e:	add    BYTE PTR [eax],al
  41ba20:	or     al,0xc
  41ba22:	std    
  41ba23:	add    BYTE PTR [eax],bl
  41ba25:	or     al,0x0
  41ba27:	add    DWORD PTR [esp+ecx*1],ecx
  41ba2a:	add    BYTE PTR [eax],al
  41ba2c:	or     al,0x48
  41ba2e:	std    
  41ba2f:	dec    DWORD PTR [eax]
  41ba31:	dec    eax
  41ba32:	std    
  41ba33:	add    al,bl
  41ba35:	inc    edi
  41ba36:	std    
  41ba37:	add    al,bl
  41ba39:	inc    edi
  41ba3a:	(bad)  
  41ba3b:	dec    eax
  41ba3d:	inc    edi
  41ba3e:	(bad)  
  41ba3f:	dec    eax
  41ba41:	or     edi,ebp
  41ba43:	add    al,bl
  41ba45:	or     edi,ebp
  41ba47:	add    ah,cl
  41ba49:	inc    edi
  41ba4a:	std    
  41ba4b:	add    ah,cl
  41ba4d:	or     edi,ebp
  41ba4f:	dec    esp
  41ba51:	or     eax,DWORD PTR [eax]
  41ba53:	add    DWORD PTR [ebx+ecx*1+0xb8c0100],ebx
  41ba5a:	std    
  41ba5b:	dec    DWORD PTR [eax-0x73fffff5]
  41ba61:	inc    edi
  41ba62:	std    
  41ba63:	call   FWORD PTR [edi+eax*2+0xb98fffe]
  41ba6a:	add    BYTE PTR [ecx],al
  41ba6c:	xor    DWORD PTR [edx],esi
  41ba6e:	add    edi,edi
  41ba70:	jbe    0x41ba9f
  41ba72:	std    
  41ba73:	(bad)  
  41ba74:	xor    DWORD PTR [esi],esi
  41ba76:	add    DWORD PTR [eax],eax
  41ba78:	xor    DWORD PTR [edx],esi
  41ba7a:	add    edi,edi
  41ba7c:	xor    DWORD PTR [edx],esi
  41ba7e:	std    
  41ba7f:	(bad)  
  41ba80:	xor    DWORD PTR [edx],esi
  41ba82:	add    DWORD PTR [eax],eax
  41ba84:	add    BYTE PTR [eax],dh
  41ba86:	xor    al,BYTE PTR [ecx]
  41ba88:	add    BYTE PTR [eax],dh
  41ba8a:	xor    bh,ch
  41ba8c:	(bad)  
  41ba8d:	ds xor eax,0x3231ff01
  41ba93:	add    edi,edi
  41ba95:	cs xor ebp,edi
  41ba98:	(bad)  
  41ba99:	es sub eax,0x30300001
  41ba9f:	std    
  41baa0:	call   DWORD PTR [esi]
  41baa2:	sub    eax,0x34310001
  41baa7:	std    
  41baa8:	push   DWORD PTR [ecx]
  41baaa:	sub    al,0xfd
  41baac:	(bad)  
  41baad:	(bad)  
  41baae:	xor    al,0xfd
  41bab0:	(bad)  
  41bab1:	xor    DWORD PTR [ecx+eax*1],ebp
  41bab4:	(bad)  
  41bab5:	out    dx,al
  41bab6:	xor    BYTE PTR [ecx],al
  41bab8:	push   DWORD PTR [ecx]
  41baba:	sub    al,0xfd
  41babc:	push   DWORD PTR [ecx]
  41babe:	xor    al,0x1
  41bac0:	add    BYTE PTR [eax],dh
  41bac2:	sub    al,0xfd
  41bac4:	dec    esi
  41bac6:	xor    al,0xfd
  41bac8:	inc    dh
  41baca:	xor    ch,bh
  41bacc:	(bad)  
  41bacd:	xor    DWORD PTR [edi*8-0x2cf4901],esi
  41bad4:	push   DWORD PTR [ecx]
  41bad6:	xor    ch,bh
  41bad8:	push   DWORD PTR [ecx]
  41bada:	xor    BYTE PTR [ecx],al
  41badc:	add    BYTE PTR [ecx],dh
  41bade:	xor    al,0x1
  41bae0:	call   DWORD PTR [esi-0x710102d0]
  41bae6:	or     edi,esp
  41bae8:	add    eax,DWORD PTR [eax]
  41baea:	xor    DWORD PTR [ecx],ecx
  41baec:	jecxz  0x41baf1
  41baee:	jle    0x41baf9
  41baf0:	pop    es
  41baf1:	test   BYTE PTR [ecx],ah
  41baf3:	mov    edi,esp
  41baf5:	xor    DWORD PTR [ecx],0xffffff89
  41baf8:	out    0x83,eax
  41bafa:	xor    DWORD PTR [ecx],ecx
  41bafc:	pop    es
  41bafd:	test   BYTE PTR [ecx+0x9],al
  41bb00:	out    0x3,eax
  41bb02:	inc    ecx
  41bb03:	or     DWORD PTR [edi],eax
  41bb05:	add    al,0x31
  41bb07:	or     edi,eax
  41bb09:	add    esp,DWORD PTR [ecx]
  41bb0b:	mov    edi,eax
  41bb0d:	xor    DWORD PTR [ecx],0xffffff89
  41bb10:	mov    DWORD PTR [ebx],0x83c78931
  41bb16:	inc    ecx
  41bb17:	mov    edi,esp
  41bb19:	add    DWORD PTR [ecx-0x77],0xffffffe7
  41bb1d:	add    esi,DWORD PTR [ecx]
  41bb1f:	mov    edi,esp
  41bb21:	xor    DWORD PTR [ecx],0xffffff89
  41bb24:	out    0x3,eax
  41bb26:	and    DWORD PTR [ecx],ecx
  41bb28:	pop    es
  41bb29:	add    al,0x31
  41bb2b:	or     DWORD PTR [edi],eax
  41bb2d:	add    al,0x21
  41bb2f:	mov    edi,esp
  41bb31:	and    DWORD PTR [ecx],0x9
  41bb34:	pop    es
  41bb35:	add    al,0x41
  41bb37:	or     DWORD PTR [edi],eax
  41bb39:	test   BYTE PTR [ecx],dh
  41bb3b:	mov    edi,esp
  41bb3d:	add    esi,DWORD PTR [ecx]
  41bb3f:	or     edi,esp
  41bb41:	add    esi,DWORD PTR [ecx]
  41bb43:	mov    edi,esp
  41bb45:	xor    DWORD PTR [ecx],0x9
  41bb48:	mov    DWORD PTR [ebx+0x3e70921],0xc7892100
  41bb52:	add    esp,DWORD PTR [ecx]
  41bb54:	or     edi,eax
  41bb56:	add    esi,DWORD PTR [ecx]
  41bb58:	mov    edi,esp
  41bb5a:	add    esi,DWORD PTR [ecx]
  41bb5c:	or     edi,esp
  41bb5e:	add    DWORD PTR [ecx+0x9],0x0
  41bb62:	leave  
  41bb63:	mov    dl,0x8
  41bb65:	add    cl,ch
  41bb67:	mov    dl,0x18
  41bb69:	sub    cl,0x32
  41bb6c:	sbb    DWORD PTR [eax+0x8b509],eax
  41bb72:	jmp    0x941c4a9
  41bb77:	mov    ch,0x18
  41bb79:	add    BYTE PTR [ecx],cl
  41bb7b:	sub    eax,0x32e98019
  41bb80:	sbb    DWORD PTR [eax],eax
  41bb82:	or     DWORD PTR [ebp+0x32e98008],ebp
  41bb88:	sbb    DWORD PTR [eax-0x7fe74d17],eax
  41bb8e:	jmp    0xe941c445
  41bb93:	xor    bl,BYTE PTR [ecx]
  41bb95:	sub    cl,0xb2
  41bb98:	or     DWORD PTR [eax+0x932c9],eax
  41bb9e:	leave  
  41bb9f:	mov    dl,0x19
  41bba1:	or     cl,0xb2
  41bba4:	sbb    DWORD PTR [eax],eax
  41bba6:	leave  
  41bba7:	xor    cl,BYTE PTR [ecx]
  41bba9:	add    cl,ch
  41bbab:	mov    dl,0x9
  41bbad:	add    cl,ch
  41bbaf:	xor    cl,BYTE PTR [ecx]
  41bbb1:	or     BYTE PTR [ecx],0x0
  41bbb4:	lods   eax,DWORD PTR ds:[esi]
  41bbb5:	or     DWORD PTR [eax],eax
  41bbb7:	jmp    0xe9c1d56e
  41bbbc:	xor    bl,BYTE PTR [ecx]
  41bbbe:	add    BYTE PTR [ecx],cl
  41bbc0:	xor    eax,0x2d098009
  41bbc5:	sbb    DWORD PTR [eax],eax
  41bbc7:	or     DWORD PTR [ebp+0x32c98009],esi
  41bbcd:	or     DWORD PTR [eax+0x1932c9],eax
  41bbd3:	jmp    0xe941d58a
  41bbd8:	xor    cl,BYTE PTR [ecx]
  41bbda:	add    BYTE PTR [eax],al
  41bbdc:	cwde   
  41bbdd:	mov    BYTE PTR [eax],al
  41bbdf:	sub    BYTE PTR [eax-0x78],0x0
  41bbe3:	add    BYTE PTR [eax+0x78800008],cl
  41bbe9:	or     BYTE PTR [eax],dl
  41bbeb:	cmp    BYTE PTR [eax],0x8d
  41bbee:	adc    BYTE PTR [eax+0x108888],al
  41bbf4:	nop
  41bbf5:	push   cs
  41bbf6:	add    BYTE PTR [eax],al
  41bbf8:	pop    eax
  41bbf9:	push   cs
  41bbfa:	add    cl,BYTE PTR [eax]
  41bbfc:	pop    eax
  41bbfd:	or     BYTE PTR [eax],al
  41bbff:	add    BYTE PTR [eax+0x8],ah
  41bc02:	add    cl,BYTE PTR [eax]
  41bc04:	dec    eax
  41bc05:	push   cs
  41bc06:	add    BYTE PTR [eax],cl
  41bc08:	pop    eax
  41bc09:	or     BYTE PTR [eax],al
  41bc0b:	add    BYTE PTR [eax+0xe],al
  41bc0e:	add    al,BYTE PTR [eax]
  41bc10:	dec    eax
  41bc11:	push   cs
  41bc12:	add    BYTE PTR [eax],cl
  41bc14:	push   eax
  41bc15:	or     BYTE PTR [edx],al
  41bc17:	add    BYTE PTR [eax],al
  41bc19:	adc    BYTE PTR [eax],cl
  41bc1b:	add    BYTE PTR [eax],cl
  41bc1d:	and    BYTE PTR [eax],cl
  41bc1f:	add    BYTE PTR [eax],cl
  41bc21:	or     BYTE PTR [eax],cl
  41bc23:	add    al,BYTE PTR [eax]
  41bc25:	adc    BYTE PTR [esi],cl
  41bc27:	add    cl,BYTE PTR [eax]
  41bc29:	adc    BYTE PTR [eax],cl
  41bc2b:	add    al,BYTE PTR [eax]
  41bc2d:	sbb    BYTE PTR [eax],cl
  41bc2f:	add    cl,BYTE PTR [eax]
  41bc31:	add    BYTE PTR [esi],cl
  41bc33:	add    BYTE PTR [eax],al
  41bc35:	or     BYTE PTR [eax],cl
  41bc37:	add    BYTE PTR [eax],cl
  41bc39:	rol    BYTE PTR [edi],1
  41bc3b:	add    BYTE PTR [eax],al
  41bc3d:	fmul   DWORD PTR ds:0xdc80802
  41bc43:	add    BYTE PTR [eax],al
  41bc45:	enter  0x20d,0x0
  41bc49:	fadd   DWORD PTR [edi]
  41bc4b:	add    cl,BYTE PTR [eax]
  41bc4d:	rol    BYTE PTR [edi],0x2
  41bc50:	or     al,al
  41bc52:	or     eax,0x2a310002
  41bc57:	add    eax,DWORD PTR [eax]
  41bc59:	cmp    DWORD PTR [edx],esi
  41bc5b:	add    eax,DWORD PTR [edx]
  41bc5d:	xor    DWORD PTR [edx],esi
  41bc5f:	add    DWORD PTR [edx],eax
  41bc61:	xor    DWORD PTR [edx],edi
  41bc63:	add    eax,DWORD PTR [eax]
  41bc65:	sub    DWORD PTR [edx],ebp
  41bc67:	add    DWORD PTR [eax],eax
  41bc69:	xor    DWORD PTR [edx],ebp
  41bc6b:	add    eax,DWORD PTR [edx]
  41bc6d:	cmp    DWORD PTR [edx],esi
  41bc6f:	add    eax,DWORD PTR [eax]
  41bc71:	xor    DWORD PTR [edx],esi
  41bc73:	add    DWORD PTR [eax],eax
  41bc75:	sub    DWORD PTR [edx],esi
  41bc77:	add    eax,DWORD PTR [edx]
  41bc79:	cmp    DWORD PTR [edx],esi
  41bc7b:	add    DWORD PTR [eax],eax
  41bc7d:	add    BYTE PTR [ecx],bh
  41bc7f:	cmp    al,BYTE PTR [ecx]
  41bc81:	add    dh,BYTE PTR [ecx]
  41bc83:	cmp    al,BYTE PTR [ebx]
  41bc85:	add    BYTE PTR [ecx],dh
  41bc87:	xor    al,BYTE PTR [ecx]
  41bc89:	add    dh,BYTE PTR [ecx]
  41bc8b:	xor    al,BYTE PTR [ebx]
  41bc8d:	add    bh,BYTE PTR [ecx]
  41bc8f:	xor    al,BYTE PTR [ebx]
  41bc91:	add    BYTE PTR [ecx],ch
  41bc93:	xor    al,BYTE PTR [ecx]
  41bc95:	add    BYTE PTR [ecx],dh
  41bc97:	xor    al,BYTE PTR [ebx]
  41bc99:	add    BYTE PTR [ecx],dh
  41bc9b:	sub    BYTE PTR [ecx],al
  41bc9d:	add    dh,BYTE PTR [ecx]
  41bc9f:	cmp    BYTE PTR [ebx],al
  41bca1:	add    ch,BYTE PTR [ecx]
  41bca3:	xor    BYTE PTR [ebx],al
  41bca5:	add    BYTE PTR [ecx],ch
  41bca7:	sub    BYTE PTR [ecx],al
  41bca9:	add    BYTE PTR [ecx],bh
  41bcab:	xor    BYTE PTR [ebx],al
  41bcad:	add    BYTE PTR [ecx],dh
  41bcaf:	xor    BYTE PTR [ecx],al
  41bcb1:	add    BYTE PTR [ecx],dh
  41bcb3:	cmp    BYTE PTR [ecx],al
  41bcb5:	add    ch,BYTE PTR [ecx]
  41bcb7:	sub    BYTE PTR [ebx],al
  41bcb9:	add    BYTE PTR [ecx],bh
  41bcbb:	xor    BYTE PTR [ecx],al
  41bcbd:	add    dh,BYTE PTR [ecx]
  41bcbf:	xor    BYTE PTR [ecx],al
  41bcc1:	add    BYTE PTR [ecx],ch
  41bcc3:	cmp    BYTE PTR [ebx],al
  41bcc5:	add    ch,BYTE PTR [ecx]
  41bcc7:	sub    BYTE PTR [ecx],al
  41bcc9:	add    BYTE PTR [ecx],dh
  41bccb:	sub    BYTE PTR [ebx],al
  41bccd:	add    dh,BYTE PTR [ecx]
  41bccf:	or     edi,esp
  41bcd1:	add    eax,0x3ef0933
  41bcd6:	xor    DWORD PTR [ecx],edx
  41bcd8:	out    0x3,eax
  41bcda:	xor    edx,DWORD PTR [ecx]
  41bcdc:	fild   WORD PTR ds:0x5ef1131
  41bce2:	add    BYTE PTR [ecx],dh
  41bce4:	or     edi,esp
  41bce6:	add    esi,DWORD PTR [ebx]
  41bce8:	adc    edi,ebx
  41bcea:	add    eax,0x3df0933
  41bcef:	xor    DWORD PTR [ecx],ecx
  41bcf1:	out    dx,eax
  41bcf2:	add    esi,DWORD PTR [ebx]
  41bcf4:	adc    edi,esp
  41bcf6:	add    eax,0x23e80933
  41bcfb:	mov    cl,0x9
  41bcfd:	push   0x68093123
  41bd02:	and    esi,DWORD PTR [ecx]
  41bd04:	or     DWORD PTR [edi+0x3],esp
  41bd07:	xor    DWORD PTR [ecx],ecx
  41bd09:	and    esi,DWORD PTR [bx+di+0x6809]
  41bd0e:	add    esi,DWORD PTR [ecx-0x4efc17f7]
  41bd14:	or     eax,ebp
  41bd16:	and    esi,DWORD PTR [ecx]
  41bd18:	or     edi,esp
  41bd1a:	add    esi,DWORD PTR [ecx]
  41bd1c:	or     edi,esp
  41bd1e:	and    esi,DWORD PTR [ecx-0x4edc18f8]
  41bd24:	or     BYTE PTR [eax+0x23],ch
  41bd27:	mov    cl,0x8
  41bd29:	push   0xe7093103
  41bd2e:	add    esi,DWORD PTR [ecx]
  41bd30:	or     DWORD PTR [edi+0x4],esp
  41bd33:	mov    cl,0x8
  41bd35:	call   0xe84a6e3d
  41bd3a:	add    esi,DWORD PTR [ecx]
  41bd3c:	or     edi,esp
  41bd3e:	and    esi,DWORD PTR [ecx]
  41bd40:	or     edi,esp
  41bd42:	add    esi,DWORD PTR [ecx+0x23e808]
  41bd48:	mov    cl,0x8
  41bd4a:	add    BYTE PTR [ecx+0x35],ch
  41bd4d:	or     DWORD PTR [eax],eax
  41bd4f:	jmp    0xe8424686
  41bd54:	adc    cl,BYTE PTR [ecx]
  41bd56:	add    BYTE PTR [ecx+0xd],ch
  41bd59:	or     DWORD PTR [eax],eax
  41bd5b:	push   0xe8008935
  41bd60:	xor    cl,BYTE PTR [ecx]
  41bd62:	add    BYTE PTR [ecx+0x55],ch
  41bd65:	or     DWORD PTR [eax],eax
  41bd67:	imul   ebp,DWORD PTR ds:0x52e90089,0x4d690009
  41bd71:	mov    DWORD PTR [eax],eax
  41bd73:	push   0x68008955
  41bd78:	sub    eax,0x35690009
  41bd7d:	mov    DWORD PTR [eax],eax
  41bd7f:	call   0xe94246b6
  41bd84:	adc    cl,BYTE PTR [ecx-0x76f29800]
  41bd8a:	add    BYTE PTR [eax+0x35],ch
  41bd8d:	or     DWORD PTR [eax],eax
  41bd8f:	jmp    0xe941c6c6
  41bd94:	xor    cl,BYTE PTR [ecx]
  41bd96:	add    cl,ch
  41bd98:	adc    cl,BYTE PTR [ecx+0x9556900]
  41bd9e:	add    BYTE PTR [ecx+0x2d],ch
  41bda1:	mov    DWORD PTR [eax],eax
  41bda3:	push   0xe8008935
  41bda8:	xor    cl,BYTE PTR [ecx]
  41bdaa:	add    al,ch
  41bdac:	add    BYTE PTR [edx-0x77],dl
  41bdaf:	add    BYTE PTR [eax+0x4d],ch
  41bdb2:	or     DWORD PTR [eax],eax
  41bdb4:	push   0x69000952
  41bdb9:	xor    cl,BYTE PTR [ecx]
  41bdbb:	add    BYTE PTR [eax+0x12],ch
  41bdbe:	mov    DWORD PTR [eax],eax
  41bdc0:	push   0x932
  41bdc5:	leave  
  41bdc6:	or     al,0x0
  41bdc8:	add    al,cl
  41bdca:	in     al,dx
  41bdcb:	(bad)  
  41bdcc:	(bad)  
  41bdcd:	(bad)  [eax+eax*4]
  41bdd0:	add    cl,bl
  41bdd2:	in     al,dx
  41bdd3:	(bad)  
  41bdd4:	dec    DWORD PTR [eax-0x14]
  41bdd7:	jg     0x41bdd9
  41bdd9:	dec    ecx
  41bdda:	or     al,0x80
  41bddc:	add    BYTE PTR [ecx+0x18ffffec],bl
  41bde2:	in     al,dx
  41bde3:	(bad)  
  41bde4:	dec    DWORD PTR [eax-0x76ff7ff4]
  41bdea:	in     al,dx
  41bdeb:	jg     0x41bded
  41bded:	sbb    BYTE PTR [eax+eax*1],cl
  41bdf0:	add    BYTE PTR [eax-0x77ff7ff4],bl
  41bdf6:	in     al,dx
  41bdf7:	(bad)  
  41bdf8:	dec    DWORD PTR [eax]
  41bdfa:	in     al,dx
  41bdfb:	jg     0x41bdfd
  41bdfd:	pop    eax
  41bdfe:	add    eax,0x5580000
  41be03:	or     BYTE PTR [edx],al
  41be05:	dec    eax
  41be06:	or     al,0x8
  41be08:	add    cl,BYTE PTR [eax+0x5]
  41be0b:	add    BYTE PTR [edx+0x58],al
  41be0e:	or     al,0x8
  41be10:	add    BYTE PTR [eax],al
  41be12:	pop    eax
  41be13:	add    eax,0xc480000
  41be18:	add    BYTE PTR [eax+0x48],al
  41be1b:	or     al,0x8
  41be1d:	add    bl,BYTE PTR [eax]
  41be1f:	add    eax,0xc184008
  41be24:	or     BYTE PTR [eax],al
  41be26:	or     BYTE PTR ds:0x5080200,al
  41be2c:	or     BYTE PTR [eax+0x18],al
  41be2f:	add    eax,0xc184200
  41be34:	or     BYTE PTR [edx+0x8],al
  41be37:	or     ecx,DWORD PTR [eax]
  41be39:	add    BYTE PTR [eax],cl
  41be3b:	or     al,0x0
  41be3d:	inc    eax
  41be3e:	xor    DWORD PTR [edx],esi
  41be40:	add    DWORD PTR [eax],eax
  41be42:	xor    esi,DWORD PTR [edx]
  41be44:	add    DWORD PTR [eax],ecx
  41be46:	jno    0x41be7a
  41be48:	add    DWORD PTR [eax],ecx
  41be4a:	jno    0x41be7e
  41be4c:	add    DWORD PTR [eax],eax
  41be4e:	xor    DWORD PTR [edx],esi
  41be50:	add    al,BYTE PTR [eax]
  41be52:	jno    0x41be86
  41be54:	add    cl,BYTE PTR [eax]
  41be56:	jae    0x41be8a
  41be58:	add    cl,BYTE PTR [eax]
  41be5a:	jae    0x41be8e
  41be5c:	add    al,BYTE PTR [eax]
  41be5e:	xor    esi,DWORD PTR [edx]
  41be60:	add    DWORD PTR [eax],ecx
  41be62:	repz xor DWORD PTR [edx],eax
  41be65:	add    cl,dh
  41be67:	xor    DWORD PTR [ecx],eax
  41be69:	add    BYTE PTR [ecx],dh
  41be6b:	xor    al,BYTE PTR [ecx]
  41be6d:	add    bl,dh
  41be6f:	xor    DWORD PTR [edx],eax
  41be71:	or     BYTE PTR [ebx],dh
  41be73:	xor    al,BYTE PTR [ecx]
  41be75:	add    BYTE PTR [eax],al
  41be77:	xor    esi,DWORD PTR [edx]
  41be79:	add    DWORD PTR [eax],eax
  41be7b:	repz xor DWORD PTR [edx],eax
  41be7e:	or     BYTE PTR [ecx],dh
  41be80:	xor    al,BYTE PTR [ecx]
  41be82:	or     BYTE PTR [ecx],dh
  41be84:	xor    al,BYTE PTR [edx]
  41be86:	add    bl,dh
  41be88:	xor    DWORD PTR [edx],eax
  41be8a:	add    BYTE PTR [ecx],dh
  41be8c:	xor    al,BYTE PTR [ecx]
  41be8e:	add    BYTE PTR [ebx],dh
  41be90:	xor    al,BYTE PTR [ecx]
  41be92:	add    cl,dh
  41be94:	xor    DWORD PTR [ecx],eax
  41be96:	or     BYTE PTR [ebx],dh
  41be98:	xor    al,BYTE PTR [edx]
  41be9a:	add    bl,dh
  41be9c:	xor    DWORD PTR [edx],eax
  41be9e:	or     BYTE PTR [ecx+0x30],dh
  41bea1:	add    al,BYTE PTR [eax]
  41bea3:	xor    esi,DWORD PTR [eax]
  41bea5:	add    DWORD PTR [eax],eax
  41bea7:	jno    0x41bed9
  41bea9:	add    DWORD PTR [eax],ecx
  41beab:	jae    0x41bedd
  41bead:	add    cl,BYTE PTR [eax]
  41beaf:	xor    esi,DWORD PTR [eax]
  41beb1:	add    cl,BYTE PTR [eax]
  41beb3:	jno    0x41bee5
  41beb5:	add    al,BYTE PTR [eax]
  41beb7:	xor    DWORD PTR [ecx],ecx
  41beb9:	out    0x3,eax
  41bebb:	xor    DWORD PTR [ebx],ecx
  41bebd:	out    0x3,eax
  41bebf:	cmp    ebx,ecx
  41bec1:	out    0x2,al
  41bec3:	cmp    ebx,ecx
  41bec5:	out    0x2,al
  41bec7:	sub    DWORD PTR [ecx],ecx
  41bec9:	out    0x3,eax
  41becb:	xor    ebx,ecx
  41becd:	out    0x2,al
  41becf:	cmp    ebx,ecx
  41bed1:	out    0x3,al
  41bed3:	cmp    DWORD PTR [ebx],ecx
  41bed5:	out    0x3,eax
  41bed7:	xor    DWORD PTR [ecx],ecx
  41bed9:	out    0x3,eax
  41bedb:	add    BYTE PTR [ecx],ch
  41bedd:	leave  
  41bede:	out    0x3,al
  41bee0:	xor    ebx,ecx
  41bee2:	out    0x2,al
  41bee4:	cmp    DWORD PTR [ecx],ecx
  41bee6:	out    0x2,eax
  41bee8:	xor    DWORD PTR [ebx],ecx
  41beea:	out    0x2,eax
  41beec:	xor    ecx,ecx
  41beee:	out    0x3,al
  41bef0:	cmp    DWORD PTR [ecx],ecx
  41bef2:	out    0x3,eax
  41bef4:	xor    DWORD PTR [ecx],ecx
  41bef6:	out    0x3,eax
  41bef8:	sub    ecx,ecx
  41befa:	out    0x2,al
  41befc:	sub    DWORD PTR [ebx],ecx
  41befe:	out    0x2,eax
  41bf00:	xor    ecx,ecx
  41bf02:	test   BYTE PTR [ebx],0x31
  41bf05:	jmp    0xe932c2f0
  41bf0a:	out    0xc3,al
  41bf0c:	push   esi
  41bf0d:	xlat   BYTE PTR ds:[ebx]
  41bf0f:	ret    
  41bf10:	push   cs
  41bf11:	jmp    0xe932c2fc
  41bf16:	(bad)  
  41bf17:	add    esi,DWORD PTR [ecx]
  41bf19:	or     edi,esi
  41bf1b:	ret    
  41bf1c:	imul   al
  41bf1e:	out    0x3,al
  41bf20:	jno    0x41bf2b
  41bf22:	out    0xc3,eax
  41bf24:	es push ds
  41bf26:	test   ebx,0x3e7095e
  41bf2c:	jno    0x41bf37
  41bf2e:	xlat   BYTE PTR ds:[ebx]
  41bf2f:	add    esi,DWORD PTR [ecx]
  41bf31:	jmp    0xc9749835
  41bf36:	(bad)  
  41bf37:	call   0xe95efd2e
  41bf3c:	xor    cl,BYTE PTR [ecx]
  41bf3e:	and    cl,bh
  41bf40:	add    dl,dh
  41bf42:	cmp    eax,0x932e9fd
  41bf47:	add    cl,bh
  41bf49:	xor    cl,cl
  41bf4b:	(bad)  
  41bf4c:	fdiv   st,st(2)
  41bf4e:	cmp    eax,0x3df2e91d
  41bf53:	std    
  41bf54:	jmp    0xd941bd4b
  41bf59:	repnz cmp eax,0x932f91d
  41bf5f:	add    cl,bh
  41bf61:	xor    cl,cl
  41bf63:	pop    ds
  41bf64:	stc    
  41bf65:	xor    cl,cl
  41bf67:	pop    ds
  41bf68:	jmp    0xd941c89f
  41bf6d:	jb     0x41bf6c
  41bf6f:	(bad)  
  41bf70:	call   0xd961bce7
  41bf75:	jb     0x41bfb4
  41bf77:	std    
  41bf78:	jmp    0xe941bcef
  41bf7d:	jb     0x41bf7c
  41bf7f:	pop    ds
  41bf80:	jmp    0xe961c8b7
  41bf85:	jb     0x41bfc4
  41bf87:	sbb    eax,0x932f9
  41bf8c:	fnstenv [edx]
  41bf8e:	leave  
  41bf8f:	pop    ds
  41bf90:	jmp    0xd941bd07
  41bf95:	jb     0x41bf94
  41bf97:	pop    ds
  41bf98:	jmp    0xf94188cf
  41bf9d:	jb     0x41bfdc
  41bf9f:	std    
  41bfa0:	stc    
  41bfa1:	xor    cl,BYTE PTR [ecx]
  41bfa3:	and    cl,ch
  41bfa5:	add    BYTE PTR [edx],dh
  41bfa7:	leave  
  41bfa8:	(bad)  
  41bfa9:	call   0x5efca0
  41bfae:	or     BYTE PTR [ecx],cl
  41bfb0:	add    BYTE PTR [eax],ah
  41bfb2:	call   0xe941bcff
  41bfb7:	or     BYTE PTR [eax],al
  41bfb9:	and    al,bl
  41bfbb:	dec    eax
  41bfbc:	cmp    eax,0x3d490820
  41bfc1:	add    al,bl
  41bfc3:	or     BYTE PTR [eax+0x20],al
  41bfc6:	call   0xc841fd13
  41bfcb:	dec    eax
  41bfcc:	cmp    eax,0x8c820
  41bfd1:	add    al,ch
  41bfd3:	or     BYTE PTR [eax+0x20],al
  41bfd6:	call   0xc841bfe3
  41bfdb:	dec    eax
  41bfdc:	std    
  41bfdd:	dec    eax
  41bfdf:	or     BYTE PTR [eax+0x20],al
  41bfe2:	test   al,0x48
  41bfe4:	cmp    eax,0xfd489800
  41bfe9:	call   FWORD PTR [eax+0x78004008]
  41bfef:	dec    eax
  41bff0:	std    
  41bff1:	pop    ds
  41bff2:	cwde   
  41bff3:	or     BYTE PTR [eax],al
  41bff5:	add    BYTE PTR [eax-0x77dfc2b8],bl
  41bffb:	or     BYTE PTR [eax],al
  41bffd:	and    BYTE PTR [eax+0x8],bh
  41c000:	inc    eax
  41c001:	add    BYTE PTR [eax+0x48],ch
  41c004:	std    
  41c005:	pop    ds
  41c006:	pop    eax
  41c007:	or     BYTE PTR [eax],ah
  41c009:	add    BYTE PTR [eax],al
  41c00b:	dec    edx
  41c00c:	or     BYTE PTR [eax],ah
  41c00e:	add    al,0x4a
  41c010:	inc    eax
  41c011:	std    
  41c012:	add    ebx,DWORD PTR [eax+0x8]
  41c015:	add    BYTE PTR [eax],al
  41c017:	pop    eax
  41c018:	inc    eax
  41c019:	std    
  41c01a:	dec    DWORD PTR [edx+0x40]
  41c01d:	std    
  41c01e:	add    ecx,DWORD PTR [edx+0x40]
  41c021:	sbb    eax,0x1d401800
  41c026:	add    al,0x31
  41c028:	xor    cl,bh
  41c02a:	pop    ds
  41c02b:	xor    eax,0x31200132
  41c030:	xor    al,BYTE PTR [ecx]
  41c032:	add    BYTE PTR [ecx],dh
  41c034:	xor    BYTE PTR [ecx],al
  41c036:	add    BYTE PTR ds:0x31000130,ch
  41c03c:	xor    al,BYTE PTR [ecx]
  41c03e:	add    BYTE PTR ds:0x35200130,ch
  41c044:	xor    cl,bh
  41c046:	jmp    esi
  41c048:	xor    ecx,edi
  41c04a:	push   DWORD PTR [edx]
  41c04c:	xor    cl,bh
  41c04e:	pop    ds
  41c04f:	xor    DWORD PTR [eax],esi
  41c051:	add    DWORD PTR [eax],esp
  41c053:	xor    DWORD PTR [edx],esi
  41c055:	stc    
  41c056:	push   DWORD PTR [edx]
  41c058:	xor    BYTE PTR [ecx],al
  41c05a:	add    BYTE PTR ds:0x2d200132,dh
  41c060:	xor    bh,cl
  41c062:	pop    ds
  41c063:	xor    eax,0x31200130
  41c068:	xor    al,BYTE PTR [ecx]
  41c06a:	and    BYTE PTR ds:0xfff932,dh
  41c070:	xchg   esi,eax
  41c071:	das    
  41c072:	stc    
  41c073:	dec    DWORD PTR [esi+0x2d1ff92f]
  41c079:	xor    bh,cl
  41c07b:	pop    ds
  41c07c:	xor    DWORD PTR [eax],esi
  41c07e:	add    DWORD PTR [eax],eax
  41c080:	xor    DWORD PTR [edx],esi
  41c082:	add    DWORD PTR [eax],eax
  41c084:	xor    eax,0x311ff932
  41c089:	xor    al,BYTE PTR [ecx]
  41c08b:	add    BYTE PTR ds:0x311ff932,dh
  41c091:	xor    al,BYTE PTR [ecx]
  41c093:	and    BYTE PTR [ecx],dh
  41c095:	xor    cl,bh
  41c097:	push   DWORD PTR [edx]
  41c099:	xor    cl,bh
  41c09b:	push   DWORD PTR [edx]
  41c09d:	xor    BYTE PTR [ecx],al
  41c09f:	and    BYTE PTR ds:0x5103e909,ch
  41c0a5:	add    eax,0x93103e9
  41c0aa:	jmp    0xe74b11b2
  41c0af:	add    esi,DWORD PTR [ecx]
  41c0b1:	add    eax,0x70efbe7
  41c0b6:	out    0x3,eax
  41c0b8:	push   ecx
  41c0b9:	or     edi,esp
  41c0bb:	sti    
  41c0bc:	push   ds
  41c0bd:	add    eax,0x3af6fbe9
  41c0c2:	jmp    0xe74b0fc2
  41c0c7:	sti    
  41c0c8:	inc    esi
  41c0c9:	add    eax,0x3adefbe9
  41c0ce:	jmp    0xe946f1d6
  41c0d3:	sti    
  41c0d4:	add    BYTE PTR [esi],ch
  41c0d6:	add    eax,0x51103e7
  41c0db:	out    0xfb,eax
  41c0dd:	push   ds
  41c0de:	or     edi,esp
  41c0e0:	add    esi,DWORD PTR [ecx]
  41c0e2:	or     ecx,ebp
  41c0e4:	add    esi,DWORD PTR [ecx]
  41c0e6:	or     ecx,ebp
  41c0e8:	sti    
  41c0e9:	inc    esi
  41c0ea:	add    eax,0x93103e7
  41c0ef:	jmp    0xe74af7ef
  41c0f4:	add    edx,DWORD PTR [ecx+0x5]
  41c0f7:	out    0xfb,eax
  41c0f9:	xchg   BYTE PTR [edx],bh
  41c0fb:	jmp    0xe746f203
  41c100:	sti    
  41c101:	jbe    0x41c109
  41c103:	out    0xfb,eax
  41c105:	outs   dx,BYTE PTR ds:[esi]
  41c106:	cmp    ch,cl
  41c108:	add    edx,DWORD PTR [ecx]
  41c10a:	or     DWORD PTR [edi-0x18f5a10d],esp
  41c110:	repz push esi
  41c112:	cmp    ah,bh
  41c114:	add    esi,DWORD PTR ds:0x32f3a709
  41c11a:	sbb    DWORD PTR [eax],eax
  41c11c:	jmp    0xa951ca53
  41c121:	inc    edx
  41c122:	cmp    cl,BYTE PTR ds:0x932a9
  41c128:	jmp    0xa951ca5f
  41c12d:	xor    al,BYTE PTR ds:0x532e900
  41c133:	adc    BYTE PTR [ecx-0x16eff9fe],ch
  41c139:	add    BYTE PTR [edx],al
  41c13b:	push   es
  41c13c:	add    cl,ch
  41c13e:	add    al,BYTE PTR [esi]
  41c140:	adc    BYTE PTR [ecx-0x16fff9fe],ch
  41c146:	loop   0x41c181
  41c148:	std    
  41c149:	sub    DWORD PTR ds:0x32e90009,ebp
  41c14f:	add    eax,0x92d2910
  41c154:	adc    cl,ch
  41c156:	ret    0xd39
  41c159:	sub    DWORD PTR [ebp-0x3d1602c7],edi
  41c15f:	add    eax,0x52d2900
  41c164:	add    BYTE PTR [ecx],ch
  41c166:	xor    eax,0xa2e91005
  41c16b:	add    eax,0x39a52910
  41c170:	std    
  41c171:	jmp    0xe941caa8
  41c176:	xor    cl,BYTE PTR [ecx]
  41c178:	add    BYTE PTR [ecx],ch
  41c17a:	sub    eax,0x35291005
  41c17f:	or     DWORD PTR [eax],edx
  41c181:	jmp    0xa94efb08
  41c186:	bound  eax,QWORD PTR ds:0x532e900
  41c18c:	add    BYTE PTR [ecx-0x16fffa9e],ch
  41c192:	xor    al,BYTE PTR ds:0x35580000
  41c198:	add    DWORD PTR [eax],edx
  41c19a:	pop    eax
  41c19b:	xor    eax,0x8800fffd
  41c1a0:	add    eax,0x5880000
  41c1a5:	add    al,0x10
  41c1a7:	sbb    BYTE PTR ds:0x3cd8fffd,bh
  41c1ad:	add    DWORD PTR [eax],eax
  41c1af:	or     BYTE PTR ds:0xcc80ffd,bh
  41c1b5:	add    BYTE PTR [eax],al
  41c1b7:	fmul   DWORD PTR [eax+eax*1]
  41c1ba:	adc    BYTE PTR [eax],bl
  41c1bc:	or     eax,0xcc81004
  41c1c1:	add    al,0x10
  41c1c3:	or     BYTE PTR ds:0xcd81000,cl
  41c1c9:	add    al,0x0
  41c1cb:	sbb    BYTE PTR ds:0xcc80ffd,bh
  41c1d1:	add    BYTE PTR [eax],al
  41c1d3:	or     BYTE PTR ds:0xd181001,bh
  41c1d9:	add    al,0x0
  41c1db:	sbb    BYTE PTR ds:0xcc81000,cl
  41c1e1:	add    al,0x10
  41c1e3:	enter  0xfd3c,0xf
  41c1e7:	pop    eax
  41c1e8:	cmp    eax,0xc980ffd
  41c1ed:	add    BYTE PTR [eax],al
  41c1ef:	dec    eax
  41c1f0:	cmp    eax,0x3c881001
  41c1f5:	add    DWORD PTR [eax],eax
  41c1f7:	cwde   
  41c1f8:	cmp    al,0x1
  41c1fa:	add    BYTE PTR [eax+0x3d],bl
  41c1fd:	std    
  41c1fe:	dec    DWORD PTR [eax+0x3d]
  41c201:	std    
  41c202:	inc    DWORD PTR [eax]
  41c204:	dec    eax
  41c205:	or     eax,0xc580004
  41c20a:	add    BYTE PTR [eax],dl
  41c20c:	pop    eax
  41c20d:	cmp    al,0x1
  41c20f:	adc    BYTE PTR [ecx],dh
  41c211:	mov    al,dh
  41c213:	(bad)  
  41c214:	push   esi
  41c215:	and    al,BYTE PTR [ecx]
  41c217:	add    BYTE PTR [ecx],dh
  41c219:	and    al,BYTE PTR [ecx]
  41c21b:	add    BYTE PTR [ecx],dh
  41c21d:	inc    edx
  41c21e:	jnp    0x41c21f
  41c220:	cmp    al,BYTE PTR ds:[edi+edi*8-0x7e99ca]
  41c228:	and    al,BYTE PTR cs:[ecx]
  41c22b:	add    BYTE PTR [ecx],dh
  41c22d:	and    al,BYTE PTR [ecx]
  41c22f:	add    BYTE PTR [ecx],dh
  41c231:	add    al,0x7b
  41c233:	call   DWORD PTR [esi]
  41c235:	push   esi
  41c236:	jg     0x41c237
  41c238:	push   cs
  41c239:	stos   BYTE PTR es:[edi],al
  41c23a:	cmp    bh,0x6
  41c23d:	and    al,BYTE PTR [ecx]
  41c23f:	add    BYTE PTR [ecx],dh
  41c241:	and    al,BYTE PTR [ecx]
  41c243:	add    BYTE PTR [ecx],dh
  41c245:	cmp    bh,BYTE PTR [edi+edi*8-0x12]
  41c249:	sbb    DWORD PTR [edx-0x7b7e1901],eax
  41c24f:	(bad)  
  41c250:	fisub  WORD PTR [ecx]
  41c252:	add    DWORD PTR [eax],eax
  41c254:	xor    DWORD PTR [edx],esp
  41c256:	add    DWORD PTR [eax],eax
  41c258:	xor    DWORD PTR [esi+0x31c6ff7b],ecx
  41c25e:	jg     0x41c25f
  41c260:	mov    esi,0xb6ff8491
  41c265:	and    DWORD PTR [ecx],eax
  41c267:	add    BYTE PTR [eax],al
  41c269:	xor    DWORD PTR [edx],esp
  41c26b:	add    DWORD PTR [eax],eax
  41c26d:	xor    DWORD PTR [ebx+edi*2-0x1],ecx
  41c271:	sahf   
  41c272:	add    DWORD PTR [edx-0x7b866901],eax
  41c278:	dec    DWORD PTR [esi+0x31000121]
  41c27e:	and    al,BYTE PTR [ecx]
  41c280:	add    BYTE PTR [ecx],dh
  41c282:	push   edx
  41c283:	jns    0x41c284
  41c285:	jbe    0x41c290
  41c287:	cmp    bh,0x6e
  41c28a:	or     BYTE PTR [ebx-0x7c],cl
  41c28d:	data16 aaa 
  41c28f:	out    0x3,eax
  41c291:	xor    DWORD PTR [ecx],ecx
  41c293:	out    0x3,eax
  41c295:	xor    DWORD PTR [ecx],ecx
  41c297:	leave  
  41c298:	jnp    0x41c2e8
  41c29a:	aaa    
  41c29b:	mov    ebx,0xe7374681
  41c2a0:	cmp    BYTE PTR [esi],0x37
  41c2a3:	out    0x3,eax
  41c2a5:	xor    DWORD PTR [ecx],ecx
  41c2a7:	out    0x3,eax
  41c2a9:	xor    DWORD PTR [ecx],ecx
  41c2ab:	or     DWORD PTR [esi+eiz*1+0x37],edi
  41c2af:	ja     0x41c233
  41c2b1:	push   ds
  41c2b2:	aaa    
  41c2b3:	ret    
  41c2b4:	adc    BYTE PTR [esi],0x37
  41c2b7:	out    0x3,eax
  41c2b9:	xor    DWORD PTR [ecx],ecx
  41c2bb:	out    0x3,eax
  41c2bd:	xor    DWORD PTR [ecx],ecx
  41c2bf:	aad    0x7a
  41c2c1:	(bad)  
  41c2c2:	xor    eax,DWORD PTR ss:[edx+0x3e736f6]
  41c2c9:	xor    DWORD PTR [ecx],ecx
  41c2cb:	out    0x3,eax
  41c2cd:	add    BYTE PTR [ecx],dh
  41c2cf:	or     edi,esp
  41c2d1:	add    esi,DWORD PTR [ecx]
  41c2d3:	or     edi,esp
  41c2d5:	add    esi,DWORD PTR [ecx]
  41c2d7:	or     edi,esp
  41c2d9:	add    esi,DWORD PTR [ecx]
  41c2db:	or     DWORD PTR [edi-0x6ac9397f],ebp
  41c2e1:	cmp    DWORD PTR [esi-0x497e36ca],0xae81b736
  41c2eb:	mov    ss:0xef36a681,eax
  41c2f1:	sbb    BYTE PTR [esi-0x697f02ca],0x36
  41c2f8:	lds    eax,FWORD PTR [eax-0x7f46c972]
  41c2fe:	xchg   BYTE PTR [esi],dh
  41c300:	daa    
  41c301:	cmp    DWORD PTR [esi+0x36],0x36b02500
  41c308:	std    
  41c309:	adc    DWORD PTR [eax-0x4e2802ca],esi
  41c30f:	ss std 
  41c311:	jae    0x41c2c4
  41c313:	ss std 
  41c315:	jno    0x41c2c8
  41c317:	ss std 
  41c319:	jg     0x41c2cc
  41c31b:	ss std 
  41c31d:	xchg   DWORD PTR [ecx-0x4ee602ca],esi
  41c323:	ss std 
  41c325:	dec    ecx
  41c326:	mov    cl,0x36
  41c328:	std    
  41c329:	cmp    esi,DWORD PTR [ecx-0x591402cb]
  41c32f:	ss std 
  41c331:	test   DWORD PTR [eax],0xcdfd369e
  41c337:	xchg   esi,eax
  41c338:	ss std 
  41c33a:	ror    DWORD PTR [esi-0x794802ca],1
  41c340:	ss std 
  41c342:	lahf   
  41c343:	jle    0x41c37b
  41c345:	std    
  41c346:	xor    DWORD PTR [esi+0x36],0xfffffffd
  41c34a:	outs   dx,BYTE PTR ds:[si]
  41c34c:	ss std 
  41c34e:	cmp    DWORD PTR [ecx-0x567802cb],0xa99ffd35
  41c358:	xor    eax,0x35b9a1fd
  41c35d:	std    
  41c35e:	popf   
  41c35f:	mov    ecx,0xa9c5fd35
  41c364:	xor    eax,0x35a9b9fd
  41c369:	std    
  41c36a:	in     eax,0xb9
  41c36c:	xor    eax,0x35b9fdfd
  41c371:	std    
  41c372:	(bad)  
  41c373:	test   eax,0xa9dffd35
  41c378:	xor    eax,0x35b81ffd
  41c37d:	std    
  41c37e:	add    BYTE PTR [edx],ah
  41c380:	cmp    ch,0xff
  41c383:	or     al,BYTE PTR [eax+0x7fe4fffd]
  41c389:	std    
  41c38a:	call   FWORD PTR [eax+eax*4]
  41c38d:	std    
  41c38e:	jmp    DWORD PTR [eax+eax*4]
  41c391:	std    
  41c392:	(bad)  
  41c393:	call   0x141c117
  41c398:	idiv   BYTE PTR [edi-0x3]
  41c39b:	call   DWORD PTR [esi+0x7f]
  41c39e:	std    
  41c39f:	(bad)  
  41c3a0:	ds jg  0x41c3a0
  41c3a3:	push   DWORD PTR [ebx+eax*4]
  41c3a6:	std    
  41c3a7:	push   DWORD PTR [edi+edi*2]
  41c3aa:	std    
  41c3ab:	(bad)  
  41c3ac:	fiadd  DWORD PTR [edx+0x918fffd]
  41c3b2:	add    BYTE PTR [eax],al
  41c3b4:	scas   al,BYTE PTR es:[edi]
  41c3b5:	cmp    ch,0xff
  41c3b8:	xchg   BYTE PTR [edi-0x3],bh
  41c3bb:	call   FWORD PTR [esi+0x5efffd7f]
  41c3c1:	jg     0x41c3c0
  41c3c3:	(bad)  
  41c3c4:	ds jg  0x41c3c4
  41c3c7:	call   FWORD PTR [edx]
  41c3c9:	jg     0x41c3c8
  41c3cb:	(bad)  
  41c3cc:	fmul   DWORD PTR [eax]
  41c3ce:	add    BYTE PTR [eax],al
  41c3d0:	cld    
  41c3d1:	cmp    ch,0xff
  41c3d4:	enter  0x8,0x0
  41c3d8:	les    edi,FWORD PTR [edi-0x3]
  41c3db:	inc    esp
  41c3dd:	jg     0x41c3dc
  41c3df:	jmp    DWORD PTR [eax]
  41c3e1:	cmp    ch,0xff
  41c3e4:	(bad)  
  41c3e5:	jg     0x41c3e4
  41c3e7:	inc    DWORD PTR [eax+eax*4]
  41c3ea:	std    
  41c3eb:	inc    DWORD PTR [eax+eax*4-0x3]
  41c3ef:	push   DWORD PTR [eax+eax*4]
  41c3f2:	std    
  41c3f3:	inc    DWORD PTR [esi-0x80]
  41c3f6:	std    
  41c3f7:	push   DWORD PTR [ecx]
  41c3f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3fa:	mov    edi,edi
  41c3fc:	add    BYTE PTR [esi-0x7900765a],cl
  41c402:	fimul  WORD PTR [ecx+0x1227eff]
  41c408:	add    BYTE PTR [ecx],dh
  41c40a:	push   0x226eff8a
  41c40f:	add    DWORD PTR [eax],eax
  41c411:	xor    esp,eax
  41c413:	mov    edi,edi
  41c415:	pop    esi
  41c416:	test   al,0x89
  41c418:	call   DWORD PTR [esi+0x22]
  41c41b:	add    DWORD PTR [eax],eax
  41c41d:	xor    DWORD PTR [esi],esp
  41c41f:	mov    edi,edi
  41c421:	inc    esi
  41c422:	sbb    cl,BYTE PTR [edi+edi*8-0x76c1c2]
  41c429:	bound  ecx,QWORD PTR ss:[ecx-0x7697d101]
  41c430:	jmp    DWORD PTR [esi]
  41c432:	je     0x41c3bd
  41c434:	call   FWORD PTR [esi]
  41c436:	and    al,BYTE PTR [ecx]
  41c438:	add    BYTE PTR [ecx],dh
  41c43a:	mov    WORD PTR [ecx-0x7667f101],cs
  41c440:	inc    DWORD PTR [esi]
  41c442:	mov    eax,0xddfeff88
  41c447:	mov    bh,bh
  41c449:	neg    bl
  41c44b:	mov    bh,bh
  41c44d:	out    dx,al
  41c44e:	cmc    
  41c44f:	mov    bh,bh
  41c451:	out    0x95,al
  41c453:	mov    edi,?
  41c455:	ficom  WORD PTR [ebx+0x63d6ff8c]
  41c45b:	mov    edi,?
  41c45d:	into   
  41c45e:	jge    0x41c3ec
  41c460:	inc    DWORD PTR [eax]
  41c462:	(bad)  
  41c463:	and    DWORD PTR [ecx],eax
  41c465:	add    BYTE PTR [ecx],dh
  41c467:	inc    esp
  41c468:	mov    edi,?
  41c46a:	mov    dh,0x1f
  41c46c:	mov    bh,bh
  41c46e:	scas   al,BYTE PTR es:[edi]
  41c46f:	and    DWORD PTR [ecx],eax
  41c471:	add    BYTE PTR [ecx],dh
  41c473:	or     DWORD PTR [edi-0x4acc617a],ebp
  41c479:	xchg   BYTE PTR [esi-0x717976cd],dl
  41c47f:	xor    edx,DWORD PTR [edi-0x7ccc797a]
  41c485:	xchg   BYTE PTR [esi+0x33],bh
  41c488:	out    dx,eax
  41c489:	test   BYTE PTR [esi+0x33],dh
  41c48c:	fld    QWORD PTR [esi+ebp*2+0x6684c533]
  41c493:	xor    ebx,DWORD PTR [ecx]
  41c495:	test   DWORD PTR [esi+0x33],ebx
  41c498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c499:	test   BYTE PTR [esi+0x33],dl
  41c49c:	mov    ds:0xaf334e84,eax
  41c4a1:	test   BYTE PTR [esi+0x33],al
  41c4a4:	aad    0x84
  41c4a6:	xor    esi,DWORD PTR ds:[ecx-0x7b]
  41c4aa:	xor    ecx,DWORD PTR ss:[edi-0x7b]
  41c4ae:	xor    edi,DWORD PTR cs:[ebp-0x7b]
  41c4b2:	xor    esp,DWORD PTR es:[ebp-0x7b]
  41c4b6:	push   ds
  41c4b7:	xor    esi,DWORD PTR [edi]
  41c4b9:	test   DWORD PTR [esi],edx
  41c4bb:	xor    eax,DWORD PTR [edi]
  41c4bd:	test   DWORD PTR [esi],ecx
  41c4bf:	xor    ebx,DWORD PTR [ecx]
  41c4c1:	test   DWORD PTR [esi],eax
  41c4c3:	xor    ebp,ecx
  41c4c5:	xchg   DWORD PTR [eax],eax
  41c4c7:	(bad)  
  41c4c8:	xor    dl,ch
  41c4ca:	xchg   esi,esi
  41c4cc:	xor    cl,bl
  41c4ce:	xchg   esi,ebp
  41c4d0:	xor    ch,BYTE PTR [edi+0x3532e687]
  41c4d6:	mov    dh,bl
  41c4d8:	xor    bh,BYTE PTR ds:0x4132d688
  41c4de:	mov    dh,cl
  41c4e0:	xor    ah,BYTE PTR [ebp-0x79]
  41c4e3:	(bad)  
  41c4e4:	xor    bl,BYTE PTR [edi-0x79]
  41c4e7:	mov    esi,0xb6878532
  41c4ec:	xor    al,BYTE PTR [eax]
  41c4ee:	jg     0x41c4a6
  41c4f0:	xor    bh,ch
  41c4f2:	mov    eax,ds:0xbdfd32ae
  41c4f7:	mov    dh,0x32
  41c4f9:	std    
  41c4fa:	test   DWORD PTR [esi-0x496602ce],ebp
  41c500:	xor    bh,ch
  41c502:	in     eax,0xaf
  41c504:	xor    bh,ch
  41c506:	fnsave [edi-0x503802ce]
  41c50c:	xor    bh,ch
  41c50e:	mov    edi,0x1ffd32b7
  41c513:	scas   al,BYTE PTR es:[edi]
  41c514:	xor    bh,ch
  41c516:	shl    DWORD PTR [edi-0x509402ce],cl
  41c51c:	xor    bh,ch
  41c51e:	lea    esi,[edi-0x507202ce]
  41c524:	xor    bh,ch
  41c526:	sbb    eax,0x49fd32b7
  41c52b:	add    BYTE PTR [edi-0x48c002ce],ch
  41c531:	xor    ebp,edi
  41c533:	out    0xb8,eax
  41c535:	xor    ebp,edi
  41c537:	imul   DWORD PTR [eax-0x573a02cf]
  41c53d:	xor    ebp,edi
  41c53f:	fnstsw WORD PTR [eax-0x475402cf]
  41c545:	xor    ebp,edi
  41c547:	jmp    0x8f41ce7e
  41c54c:	test   al,0x31
  41c54e:	std    
  41c54f:	outs   dx,DWORD PTR ds:[esi]
  41c550:	mov    eax,0xb84ffd31
  41c555:	xor    ebp,edi
  41c557:	xchg   edi,eax
  41c558:	mov    bh,0x31
  41c55a:	std    
  41c55b:	lahf   
  41c55c:	scas   eax,DWORD PTR es:[edi]
  41c55d:	xor    ebp,edi
  41c55f:	mov    ebx,0xe9fd31b7
  41c564:	xor    cl,BYTE PTR [ecx]
  41c566:	add    BYTE PTR [eax],al
  41c568:	in     al,0x8a
  41c56a:	std    
  41c56b:	dec    eax
  41c56d:	add    eax,0x8a9c0000
  41c572:	std    
  41c573:	(bad)  
  41c574:	jl     0x41c500
  41c576:	std    
  41c577:	inc    DWORD PTR [eax+0x7efffd8a]
  41c57d:	mov    bh,ch
  41c57f:	call   FWORD PTR [edx+ecx*4-0x3]
  41c583:	(bad)  
  41c584:	cmp    al,0x8a
  41c586:	std    
  41c587:	jmp    FWORD PTR [edx+ecx*4]
  41c58a:	std    
  41c58b:	(bad)  
  41c58c:	jle    0x41c518
  41c58e:	std    
  41c58f:	inc    DWORD PTR [eax]
  41c591:	fimul  WORD PTR [ecx-0x760b0003]
  41c597:	std    
  41c598:	inc    esp
  41c59a:	mov    ebp,edi
  41c59c:	dec    DWORD PTR [eax+0x5]
  41c59f:	add    BYTE PTR [eax],al
  41c5a1:	adc    cl,BYTE PTR [edx+0x558fffd]
  41c5a7:	add    BYTE PTR [eax],al
  41c5a9:	out    dx,al
  41c5aa:	mov    ebp,edi
  41c5ac:	push   edx
  41c5ae:	mov    ebp,edi
  41c5b0:	call   FWORD PTR [eax]
  41c5b2:	or     eax,0x84f40000
  41c5b7:	std    
  41c5b8:	inc    DWORD PTR [eax]
  41c5ba:	test   ebp,edi
  41c5bc:	(bad)  
  41c5bd:	cld    
  41c5be:	test   ch,bh
  41c5c0:	(bad)  
  41c5c1:	fadd   DWORD PTR [ebp+edi*8-0x27b2d01]
  41c5c8:	call   FWORD PTR [esi+0x8fffd84]
  41c5ce:	or     eax,0x84b60000
  41c5d3:	std    
  41c5d4:	jmp    DWORD PTR [edx-0x7c]
  41c5d7:	std    
  41c5d8:	jmp    DWORD PTR [edx-0x7c]
  41c5db:	std    
  41c5dc:	call   FWORD PTR [esp+eax*4-0x3]
  41c5e0:	push   DWORD PTR [ecx]
  41c5e2:	mov    eax,0xaec6ff88
  41c5e7:	mov    bh,bh
  41c5e9:	mov    esi,0xb6ff88ae
  41c5ee:	mov    al,0x88
  41c5f0:	jmp    FWORD PTR [esi+0xff8960]
  41c5f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5f7:	xchg   esi,eax
  41c5f8:	mov    edi,edi
  41c5fa:	sahf   
  41c5fb:	and    al,BYTE PTR [ecx]
  41c5fd:	add    BYTE PTR [ecx],dh
  41c5ff:	or     BYTE PTR [ecx-0x73db7101],0xff
  41c606:	xchg   BYTE PTR [edx],ah
  41c608:	add    DWORD PTR [eax],eax
  41c60a:	xor    DWORD PTR [ebp+0x1],eax
  41c60d:	inc    ecx
  41c60e:	add    eax,DWORD PTR ds:0xdfd473a3
  41c614:	stos   BYTE PTR es:[edi],al
  41c615:	imul   ecx,esp,0xffffffe0
  41c618:	add    edi,DWORD PTR [edi]
  41c61a:	xor    esi,DWORD PTR [eax+ebp*4+0x5e]
  41c61e:	int    0x67
  41c620:	lods   al,BYTE PTR ds:[esi]
  41c621:	imul   edx,esp,0x21
  41c624:	add    DWORD PTR [ecx],esp
  41c626:	xor    DWORD PTR [ebx-0x53],esp
  41c629:	ins    BYTE PTR es:[edi],dx
  41c62a:	ret    0xc93c
  41c62d:	pop    esi
  41c62e:	mov    DWORD PTR [ebp-0x53],0xfefb3162
  41c635:	push   esp
  41c636:	mov    ds:0x7762b549,eax
  41c63b:	cdq    
  41c63c:	lods   eax,DWORD PTR ds:[esi]
  41c63d:	bound  esi,QWORD PTR [ecx]
  41c63f:	sub    eax,0x8e826c02
  41c644:	scas   eax,DWORD PTR es:[edi]
  41c645:	imul   ecx,DWORD PTR [eax+esi*4-0xe01003d],0x3
  41c64d:	inc    ebp
  41c64e:	test   DWORD PTR [edi-0x61],edi
  41c651:	pop    esi
  41c652:	pop    ebp
  41c653:	data16 scas al,BYTE PTR es:[edi]
  41c655:	pusha  
  41c656:	pop    edx
  41c657:	and    al,BYTE PTR [ecx]
  41c659:	mov    ch,0x0
  41c65b:	xor    BYTE PTR [ecx],cl
  41c65d:	cs mov al,0x45
  41c660:	stos   DWORD PTR es:[edi],eax
  41c661:	inc    edi
  41c662:	mov    al,0x63
  41c664:	lahf   
  41c665:	inc    edx
  41c666:	lods   eax,DWORD PTR ds:[esi]
  41c667:	push   ecx
  41c668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c669:	out    0x3,al
  41c66b:	lds    ecx,FWORD PTR [ecx]
  41c66d:	xor    ebp,DWORD PTR [ebp-0x39b555af]
  41c673:	and    BYTE PTR [esi+0x9a1044b],ah
  41c679:	sbb    ebp,DWORD PTR [ebp-0x3ced55ef]
  41c67f:	or     bl,BYTE PTR [ebp+0x2f8ea10d]
  41c685:	lock add BYTE PTR ds:0x11b212bc,dl
  41c68c:	mov    ecx,0x2f76c2ff
  41c691:	fiadd  DWORD PTR [eax]
  41c693:	fnstsw WORD PTR [ebx-0x562e4e06]
  41c699:	bnd ret 0x2f5e
  41c69d:	inc    BYTE PTR [edx]
  41c69f:	in     al,dx
  41c6a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6a1:	rol    ch,cl
  41c6a3:	xlat   BYTE PTR ds:[ebx]
  41c6a4:	pushf  
  41c6a5:	retf   
  41c6a6:	ret    0xb4c2
  41c6a9:	fsubr  DWORD PTR [edx-0x59454a30]
  41c6af:	ror    ecx,0xe6
  41c6b2:	add    ecx,edx
  41c6b4:	or     DWORD PTR [ebx+edi*4-0x5843576a],ebp
  41c6bb:	jae    0x41c65c
  41c6bd:	pushf  
  41c6be:	stos   BYTE PTR es:[edi],al
  41c6bf:	add    BYTE PTR [eax-0x6c517362],ah
  41c6c5:	lahf   
  41c6c6:	call   0x95ad:0x7fbb82d0
  41c6cd:	mov    edx,0x81503a7
  41c6d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6d4:	(bad)  
  41c6d5:	(bad)  
  41c6d6:	(bad)  
  41c6d7:	jg     0x41c66f
  41c6d9:	stos   DWORD PTR es:[edi],eax
  41c6da:	push   eax
  41c6db:	sbb    BYTE PTR [eax+0x2d26ffab],0xc8
  41c6e2:	jno    0x41c728
  41c6e4:	xchg   edx,eax
  41c6e5:	mov    edx,0xa29a2f62
  41c6ea:	bound  ebx,QWORD PTR [edx+edx*4]
  41c6ed:	sahf   
  41c6ee:	outs   dx,DWORD PTR ds:[esi]
  41c6ef:	push   eax
  41c6f0:	xchg   DWORD PTR [ebp+0x932e93e],esp
  41c6f6:	add    ah,BYTE PTR [edx+edx*8]
  41c6f9:	sahf   
  41c6fa:	push   ebp
  41c6fb:	inc    eax
  41c6fc:	(bad)  
  41c6fd:	mov    ch,0x4c
  41c6ff:	movq   mm4,QWORD PTR [edi+0x5835046b]
  41c706:	add    bh,BYTE PTR [edi+edx*8]
  41c709:	mov    ds:0xa767195e,eax
  41c70e:	(bad)  
  41c70f:	(bad)  
  41c710:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41c712:	inc    ebp
  41c713:	adc    BYTE PTR [ecx+0x3382ffab],ah
  41c719:	mov    ebp,0xc289086c
  41c71e:	retfw  
  41c720:	mov    al,ds:0xe071cf
  41c725:	jae    0x41c755
  41c727:	std    
  41c728:	mov    edx,0xd562c433
  41c72d:	bound  edi,QWORD PTR [eax-0x558c3594]
  41c733:	arpl   WORD PTR [ebx-0x168f4729],di
  41c739:	xor    al,BYTE PTR [ebp-0x46285a01]
  41c73f:	push   ebx
  41c740:	mov    edi,es
  41c742:	popf   
  41c743:	dec    edi
  41c744:	mov    dh,al
  41c746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c747:	ds jmp 0xaa41c17f
  41c74d:	shr    BYTE PTR [edx+0x6774005e],0x41
  41c754:	imul   ebp,DWORD PTR [edx+0x67],0x77af7460
  41c75b:	jbe    0x41c79e
  41c75d:	enter  0x6509,0x0
  41c761:	add    al,0x68
  41c763:	imul   esp,DWORD PTR [ebp+0x64],0x6c694368
  41c76a:	push   0x4c8003e
  41c76f:	inc    ebx
  41c770:	gs hlt 
  41c772:	inc    ebp
  41c773:	jb     0x41c7e7
  41c775:	push   0x68
  41c777:	imul   esi,DWORD PTR [eax+ecx*2+0x77],0x6c
  41c77c:	arpl   bp,si
  41c77e:	jne    0x41c7f0
  41c780:	add    BYTE PTR [eax+0x34695306],bh
  41c786:	push   0x39006840
  41c78b:	ja     0x41c7de
  41c78d:	outs   dx,DWORD PTR ds:[esi]
  41c78e:	sbb    eax,0x21746978
  41c793:	inc    edi
  41c794:	jbe    0x41c80a
  41c796:	xor    eax,0x17012805
  41c79b:	push   0x76294c71
  41c7a0:	jno    0x41c7e7
  41c7a2:	jp     0x41c817
  41c7a4:	ins    BYTE PTR es:[edi],dx
  41c7a5:	jb     0x41c7ff
  41c7a7:	or     DWORD PTR [ecx],edx
  41c7a9:	add    ebp,DWORD PTR [esi+esi*2+0x71]
  41c7ad:	jb     0x41c81a
  41c7af:	pusha  
  41c7b0:	ins    DWORD PTR es:[edi],dx
  41c7b1:	inc    ecx
  41c7b2:	dec    eax
  41c7b3:	or     DWORD PTR [ebp+0x0],edx
  41c7b6:	(bad)  [esi+0x62]
  41c7b9:	popa   
  41c7ba:	in     al,0x69
  41c7bc:	push   ecx
  41c7bd:	outs   dx,DWORD PTR ds:[esi]
  41c7be:	fbld   TBYTE PTR [ebp+eiz*2+0x65]
  41c7c2:	mov    esp,0xcb323078
  41c7c7:	bound  ebx,QWORD PTR [esi+0x70]
  41c7ca:	xor    DWORD PTR [edi+0x22856ca9],ecx
  41c7d0:	add    DWORD PTR [ebx],esp
  41c7d2:	xor    edx,DWORD PTR [edx-0x7aad934d]
  41c7d8:	mov    dh,0x70
  41c7da:	and    dh,BYTE PTR [eax-0x41]
  41c7dd:	data16 arpl WORD PTR [edi+0xad6ffac],bp
  41c7e4:	push   es
  41c7e5:	dec    ebp
  41c7e6:	inc    ecx
  41c7e7:	lds    ebp,FWORD PTR [ecx-0x5b3cbcb1]
  41c7ed:	bound  eax,QWORD PTR [eax]
  41c7ef:	inc    edx
  41c7f0:	iret   
  41c7f1:	add    esp,DWORD PTR ds:0x6cb61233
  41c7f7:	adc    al,ch
  41c7f9:	mov    ah,0x70
  41c7fb:	bound  esi,QWORD PTR [eax]
  41c7fd:	(bad)  
  41c7fe:	bound  ebx,QWORD PTR [ecx]
  41c800:	test   BYTE PTR [ebx],0xaf
  41c803:	xor    esp,ebx
  41c805:	stos   BYTE PTR es:[edi],al
  41c806:	ins    DWORD PTR es:[edi],dx
  41c807:	adc    eax,0x271aae4
  41c80c:	push   cs
  41c80d:	ret    0xd66
  41c810:	add    eax,0x4b76ffc3
  41c815:	push   es
  41c816:	ins    BYTE PTR es:[edi],dx
  41c817:	loop   0x41c84e
  41c819:	mov    bl,0x60
  41c81b:	aam    0x31
  41c81d:	lods   al,BYTE PTR ds:[esi]
  41c81e:	ds xor eax,edi
  41c821:	add    BYTE PTR [esi-0x38],al
  41c824:	push   ebx
  41c825:	popf   
  41c826:	dec    ebp
  41c827:	aam    0x29
  41c829:	lods   eax,DWORD PTR ds:[esi]
  41c82a:	inc    ebp
  41c82b:	fadd   DWORD PTR [ebp-0x60]
  41c82e:	xor    DWORD PTR ds:[ebp+0x53c84600],ebp
  41c835:	popf   
  41c836:	inc    eax
  41c837:	popf   
  41c838:	cmp    esi,DWORD PTR [esi+0x42e3162]
  41c83e:	inc    ebp
  41c83f:	xchg   esp,eax
  41c840:	jbe    0x41c80a
  41c842:	ins    BYTE PTR es:[edi],dx
  41c843:	lea    ecx,[ecx]
  41c845:	pushf  
  41c846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c847:	xchg   ebx,eax
  41c848:	rol    DWORD PTR [edi-0x74626d57],0xc4
  41c84f:	(bad)  
  41c850:	sub    esi,DWORD PTR [ebp+0x4]
  41c853:	add    BYTE PTR [esi+eiz*4+0x7a],ch
  41c857:	rcl    DWORD PTR [ebx-0x49],1
  41c85a:	jns    0x41c808
  41c85c:	push   ebp
  41c85d:	fwait
  41c85e:	stos   DWORD PTR es:[edi],eax
  41c85f:	mov    ebx,0x4c1091f
  41c864:	ins    BYTE PTR es:[edi],dx
  41c865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c866:	pop    edx
  41c867:	enter  0xa85d,0x47
  41c86b:	test   al,0x53
  41c86d:	ret    0xa244
  41c870:	dec    ebp
  41c871:	retf   0x3e6
  41c874:	cmp    eax,0x229f2e0a
  41c879:	fdivr  DWORD PTR [edi]
  41c87b:	mov    ch,0x22
  41c87d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c87e:	inc    ebx
  41c87f:	retf   
  41c880:	or     al,0xa3
  41c882:	cmp    eax,0x2e09d104
  41c887:	lahf   
  41c888:	add    dl,ah
  41c88a:	rsm    
  41c88c:	adc    bl,BYTE PTR [ebp+ebx*1+0x18a1f2b5]
  41c893:	lahf   
  41c894:	adc    DWORD PTR [ebp-0x361849eb],esi
  41c89a:	out    0x3,al
  41c89c:	hlt    
  41c89d:	or     DWORD PTR [esi],ebp
  41c89f:	lahf   
  41c8a0:	loop   0x41c87a
  41c8a2:	clc    
  41c8a3:	stos   BYTE PTR es:[edi],al
  41c8a4:	fsubr  QWORD PTR [ecx-0x49016126]
  41c8aa:	int    0xa1
  41c8ac:	iret   
  41c8ad:	pushf  
  41c8ae:	retf   
  41c8af:	aam    0xc2
  41c8b1:	mov    dh,0xbf
  41c8b3:	test   eax,0x3e6c9cd
  41c8b8:	add    BYTE PTR [ebx-0x5d6165f9],ch
  41c8be:	(bad)  
  41c8bf:	(bad)  
  41c8c0:	mov    ebx,0xbf62b8e4
  41c8c5:	mov    dh,0x66
  41c8c8:	fwait
  41c8c9:	scas   eax,DWORD PTR es:[edi]
  41c8ca:	test   eax,0xb3bc8e73
  41c8cf:	ds jmp 0xa6408607
  41c8d5:	xchg   edi,eax
  41c8d6:	mov    dh,0x4f
  41c8d8:	jnp    0x41c875
  41c8da:	mov    ah,0x5e
  41c8dc:	jne    0x41c8a5
  41c8de:	mov    edx,0xa3908671
  41c8e3:	imul   eax,DWORD PTR [ebp+edi*8-0x65a29f59],0xffffff9d
  41c8eb:	ins    DWORD PTR es:[edi],dx
  41c8ec:	das    
  41c8ed:	xchg   edx,eax
  41c8ee:	lahf   
  41c8ef:	bound  ebx,QWORD PTR [edx-0xe]
  41c8f2:	sub    bh,ch
  41c8f4:	and    BYTE PTR [edx],dh
  41c8f6:	les    esp,FWORD PTR [edx+0x3d]
  41c8f9:	test   DWORD PTR [eax-0x492dc89a],edi
  41c8ff:	bound  ebx,QWORD PTR [ecx]
  41c901:	out    0x9d,eax
  41c903:	gs inc eax
  41c905:	leave  
  41c906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c907:	inc    esi
  41c908:	pop    ss
  41c909:	shr    ebx,0xff
  41c90c:	sahf   
  41c90d:	xor    al,ah
  41c90f:	bound  ebx,QWORD PTR ds:0x1b71b774
  41c915:	xchg   esi,eax
  41c916:	pushf  
  41c917:	jae    0x41c946
  41c919:	call   0x9da1:0xa62b8
  41c920:	jno    0x41c912
  41c922:	jae    0x41c94e
  41c924:	std    
  41c925:	iret   
  41c926:	sub    eax,0x84dd709d
  41c92b:	sahf   
  41c92c:	(bad)  
  41c92d:	iret   
  41c92e:	popa   
  41c92f:	sub    bh,ch
  41c931:	in     al,0x34
  41c933:	mov    esi,0xa386bd72
  41c938:	inc    ecx
  41c939:	add    cl,dh
  41c93b:	pop    ecx
  41c93c:	bound  edx,QWORD PTR [edi+esi*8+0x58]
  41c940:	fs in  ax,dx
  41c943:	inc    esp
  41c944:	gs popa 
  41c946:	fiadd  DWORD PTR ds:0x8adf0189
  41c94c:	jno    0x41c9a2
  41c94e:	mov    eax,ds:0xb7436864
  41c953:	pop    edx
  41c954:	imul   esi,DWORD PTR [eax+ecx*1+0x6],0xffffffb7
  41c959:	add    cl,bl
  41c95b:	popa   
  41c95c:	bound  esp,QWORD PTR [ebp+0x68]
  41c95f:	push   es
  41c960:	xor    al,BYTE PTR [ecx]
  41c962:	(bad)
  41c966:	push   edi
  41c967:	mov    dh,BYTE PTR [edx+0x6c]
  41c96a:	jge    0x41c9d7
  41c96c:	data16 ins BYTE PTR es:[edi],dx
  41c96e:	ins    DWORD PTR es:[edi],dx
  41c96f:	inc    ebx
  41c970:	pop    esi
  41c971:	ins    DWORD PTR es:[edi],dx
  41c972:	ins    DWORD PTR es:[edi],dx
  41c973:	inc    esp
  41c974:	std    
  41c975:	(bad)  
  41c976:	out    dx,eax
  41c977:	add    ecx,DWORD PTR [ebx+eax*2+0x65]
  41c97b:	fs ins DWORD PTR es:[edi],dx
  41c97d:	push   ebx
  41c97e:	pop    esp
  41c97f:	ja     0x41c9e7
  41c981:	outs   dx,BYTE PTR ds:[esi]
  41c982:	add    bh,ch
  41c984:	inc    ebx
  41c985:	std    
  41c986:	inc    DWORD PTR [ebx]
  41c988:	add    eax,0x79217841
  41c98d:	dec    ebp
  41c98e:	jb     0x41c9c7
  41c990:	bound  si,DWORD PTR [ebx+0x1b]
  41c994:	add    eax,0x683b02ad
  41c999:	jno    0x41c9f0
  41c99b:	inc    esi
  41c99c:	pop    ebp
  41c99d:	pop    esi
  41c99e:	outs   dx,BYTE PTR ds:[esi]
  41c99f:	sub    al,0x61
  41c9a1:	bound  esp,QWORD PTR [ebp+ecx*1+0x6d]
  41c9a5:	pusha  
  41c9a6:	gs pop eax
  41c9a8:	pop    ecx
  41c9a9:	outs   dx,WORD PTR ds:[esi]
  41c9ab:	imul   sp,WORD PTR [esi+0x6c],0x5c
  41c9b0:	push   0x4731006f
  41c9b5:	mov    al,ds:0xa544c771
  41c9ba:	xor    BYTE PTR [ebx+0x0],ah
  41c9bd:	mov    al,ds:0x132956b
  41c9c2:	mov    DWORD PTR [ecx],esi
  41c9c4:	jae    0x41c975
  41c9c6:	bound  edx,QWORD PTR [eax-0x7aaf5fa2]
  41c9cc:	test   BYTE PTR [eax-0x5c886ba2],ah
  41c9d2:	inc    edi
  41c9d3:	jbe    0x41c963
  41c9d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9d6:	popa   
  41c9d7:	nop
  41c9d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9d9:	add    BYTE PTR [ebp+0x73a07731],dl
  41c9df:	jns    0x41ca50
  41c9e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9e2:	ins    BYTE PTR es:[edi],dx
  41c9e3:	push   ebx
  41c9e4:	xchg   ecx,eax
  41c9e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9e6:	inc    ebp
  41c9e7:	add    BYTE PTR [ebx-0x59],ah
  41c9ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9eb:	push   eax
  41c9ec:	inc    ebp
  41c9ed:	les    ebx,FWORD PTR [esi+0x132545e]
  41c9f3:	push   cs
  41c9f4:	xor    ebx,esi
  41c9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9f7:	inc    eax
  41c9f8:	inc    ebx
  41c9f9:	int    0xa2
  41c9fb:	jae    0x41ca11
  41c9fd:	imul   DWORD PTR [esi+0x1320d66]
  41ca03:	pusha  
  41ca04:	xor    ebx,esi
  41ca06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca07:	push   ebx
  41ca08:	adc    bl,ah
  41ca0a:	test   al,0x4a
  41ca0c:	adc    al,0xfd
  41ca0e:	mov    ebp,0x40d0c71
  41ca13:	or     eax,0x40a4f331
  41ca18:	add    ecx,DWORD PTR ds:0xd8d473a3
  41ca1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca1f:	jo     0x41c9fe
  41ca21:	adc    BYTE PTR [esi+0x131d460],ah
  41ca27:	icebp  
  41ca28:	xor    DWORD PTR [edi],eax
  41ca2a:	test   al,0x62
  41ca2c:	clc    
  41ca2d:	or     ch,dl
  41ca2f:	lods   al,BYTE PTR ds:[esi]
  41ca30:	ret    0xc7b1
  41ca33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca34:	xlat   BYTE PTR ds:[ebx]
  41ca35:	mov    ds:0xb4c403cb,al
  41ca3a:	ret    
  41ca3b:	repnz pusha 
  41ca3d:	test   edx,0xbc099aa7
  41ca43:	add    DWORD PTR [esp+ebx*4-0x48704e4a],esp
  41ca4a:	mov    dl,0x9d
  41ca4c:	add    BYTE PTR [edi+0x9],cl
  41ca4f:	pushf  
  41ca50:	mov    dl,0x93
  41ca52:	fyl2x  
  41ca55:	dec    esp
  41ca56:	lods   eax,DWORD PTR ds:[esi]
  41ca57:	and    BYTE PTR [edi+0x43727f6],0x83
  41ca5e:	scas   al,BYTE PTR es:[edi]
  41ca5f:	(bad)  
  41ca60:	(bad)  
  41ca61:	push   esi
  41ca62:	scas   al,BYTE PTR es:[edi]
  41ca63:	mov    edx,cs
  41ca65:	push   ebx
  41ca66:	mov    ds:0x917bbab,al
  41ca6b:	adc    DWORD PTR [ebx+eiz*2],eax
  41ca6e:	scas   al,BYTE PTR es:[edi]
  41ca6f:	dec    ebp
  41ca70:	rol    DWORD PTR [ebx-0x52],cl
  41ca73:	pop    eax
  41ca74:	mov    ebx,0xaf42aa64
  41ca79:	push   ebx
  41ca7a:	into   
  41ca7b:	dec    esi
  41ca7c:	ret    
  41ca7d:	scas   al,BYTE PTR es:[edi]
  41ca7e:	daa    
  41ca7f:	jle    0x41ca84
  41ca81:	add    ebp,DWORD PTR [esi-0x47f53ebb]
  41ca87:	cmp    DWORD PTR [edi+0x42fade9],ebx
  41ca8d:	jl     0x41ca98
  41ca8f:	cmp    DWORD PTR [edi-0x60e927f3],ebx
  41ca95:	or     al,0xd4
  41ca97:	or     edi,DWORD PTR [ebx+0x3a30937]
  41ca9d:	add    ebp,DWORD PTR [esi-0x622b40f3]
  41caa3:	or     ecx,ecx
  41caa5:	shl    DWORD PTR [ecx-0x196ad401],cl
  41caab:	push   DWORD PTR [edx]
  41caad:	xor    bh,BYTE PTR [ebx+0x7100ce62]
  41cab3:	cdq    
  41cab4:	(bad)  
  41cab5:	enter  0xaa8e,0x48
  41cab9:	int3   
  41caba:	jnp    0x41caa2
  41cabc:	inc    DWORD PTR [ebp+0x32]
  41cabf:	mov    ebx,0xac01ce62
  41cac4:	jae    0x41ca5d
  41cac6:	shl    DWORD PTR [edx-0x6128338e],cl
  41cacc:	ds jmp 0xb040bd04
  41cad2:	sar    DWORD PTR [edx-0x44315e9e],0x6d
  41cad9:	adc    cl,0xb5
  41cadc:	arpl   WORD PTR [edx+esi*1-0x386500a9],ax
  41cae3:	lods   eax,DWORD PTR ds:[esi]
  41cae4:	dec    esp
  41cae5:	jns    0x41caa6
  41cae7:	mov    ah,0x40
  41cae9:	jl     0x41ca8b
  41caeb:	cwde   
  41caec:	bound  edi,QWORD PTR [edi-0x62]
  41caef:	mov    ebx,0x26834c70
  41caf4:	std    
  41caf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caf6:	xor    edi,DWORD PTR [ebx-0x4b89b19e]
  41cafc:	jb     0x41cb3a
  41cafe:	jg     0x41cac7
  41cb00:	imul   edi,DWORD PTR [esi+eax*8],0xffffffe7
  41cb04:	jmp    ecx
  41cb06:	xor    ecx,esp
  41cb08:	bound  edi,QWORD PTR ds:0x3b629966
  41cb0e:	ja     0x41cad7
  41cb10:	push   0xc
  41cb12:	jb     0x41cb3a
  41cb14:	std    
  41cb15:	or     BYTE PTR [eax],al
  41cb17:	rcr    DWORD PTR [esi+ebx*2+0x31d9ca19],1
  41cb1e:	mov    edi,0x6bb2ce
  41cb23:	pop    eax
  41cb24:	or     dl,ch
  41cb26:	add    BYTE PTR [ebx],bh
  41cb28:	jne    0x41cb8c
  41cb2a:	ins    BYTE PTR es:[edi],dx
  41cb2b:	sub    al,0x66
  41cb2d:	jne    0x41cb94
  41cb2f:	cmp    esi,DWORD PTR [esi+0x71]
  41cb32:	gs cdq 
  41cb34:	or     ch,BYTE PTR [edi+0x68]
  41cb37:	jne    0x41cba7
  41cb39:	imul   esi,DWORD PTR [ebx],0x6c612f1a
  41cb3f:	in     al,dx
  41cb40:	or     DWORD PTR [ebp+0x0],esi
  41cb43:	loope  0x41cbb0
  41cb45:	jno    0x41cbac
  41cb47:	fisubr DWORD PTR [ebx+0x62]
  41cb4a:	je     0x41cb17
  41cb4c:	push   edi
  41cb4d:	pop    esi
  41cb4e:	arpl   bx,si
  41cb50:	push   esi
  41cb51:	outs   dx,DWORD PTR ds:[esi]
  41cb52:	ins    BYTE PTR es:[edi],dx
  41cb53:	(bad)  [ecx]
  41cb55:	ja     0x41cb57
  41cb57:	shr    DWORD PTR [ebx+0x71],0x65
  41cb5b:	call   0x6257:0x9b74626b
  41cb62:	popa   
  41cb63:	xchg   DWORD PTR fs:[edx+0x72],edx
  41cb67:	lods   al,BYTE PTR ds:[esi]
  41cb68:	dec    edx
  41cb69:	std    
  41cb6a:	call   DWORD PTR [edi+0x73]
  41cb6d:	imul   ebp,DWORD PTR [ecx+0x4e],0xffffff87
  41cb71:	jno    0x41cba1
  41cb73:	je     0x41cbde
  41cb75:	imul   eax,DWORD PTR [eax],0x744f0ccd
  41cb7b:	add    BYTE PTR [edx+0x3e],bl
  41cb7e:	jno    0x41cbf2
  41cb80:	push   ecx
  41cb81:	dec    esp
  41cb82:	std    
  41cb83:	call   FWORD PTR [eax+0x5a744f0c]
  41cb89:	aas    
  41cb8a:	inc    eax
  41cb8b:	push   0x3e645a
  41cb90:	fs or  al,0x4f
  41cb93:	je     0x41cbbf
  41cb95:	inc    ecx
  41cb96:	ins    BYTE PTR es:[edi],dx
  41cb97:	dec    ecx
  41cb98:	cs popa 
  41cb9a:	add    BYTE PTR ds:[ecx],dh
  41cb9d:	sub    al,0x4
  41cb9f:	push   ecx
  41cba0:	in     eax,0x1
  41cba2:	aad    0x73
  41cba4:	jecxz  0x41cb96
  41cba6:	add    ebp,edx
  41cba8:	xor    DWORD PTR [ebx],eax
  41cbaa:	mov    eax,0xb40cf271
  41cbaf:	dec    ebp
  41cbb0:	clc    
  41cbb1:	lock add ecx,DWORD PTR [esi]
  41cbb4:	xor    BYTE PTR [ebx-0x4b],ah
  41cbb7:	jno    0x41cb9b
  41cbb9:	cmp    esi,DWORD PTR [ebx+0x12fde46]
  41cbbf:	jno    0x41cb5a
  41cbc1:	mov    dx,0xa15e
  41cbc5:	cmp    edi,ebx
  41cbc7:	arpl   WORD PTR [ebp+0x31360156],cx
  41cbcd:	dec    ecx
  41cbce:	lahf   
  41cbcf:	bound  eax,QWORD PTR [ebp-0x729c5b6d]
  41cbd5:	add    BYTE PTR [ecx],0x2a
  41cbd8:	xor    DWORD PTR [ebx-0x74768c58],ecx
  41cbde:	mov    dh,0x73
  41cbe0:	add    BYTE PTR [ebx+0x79],dl
  41cbe3:	lahf   
  41cbe4:	pop    esi
  41cbe5:	push   esp
  41cbe6:	xchg   ebp,eax
  41cbe7:	add    DWORD PTR [edi+0x31],eax
  41cbea:	lahf   
  41cbeb:	mov    eax,ds:0xb5954a60
  41cbf0:	dec    esi
  41cbf2:	dec    ebx
  41cbf3:	add    DWORD PTR [ecx+0x56],esp
  41cbf6:	mov    esp,0xbe5262a1
  41cbfb:	add    esp,DWORD PTR [esi]
  41cbfd:	xor    edi,ecx
  41cbff:	lahf   
  41cc00:	ins    BYTE PTR es:[edi],dx
  41cc01:	and    cl,ch
  41cc03:	mov    ah,0x6c
  41cc05:	adc    dh,BYTE PTR [edi-0x11ce8c5a]
  41cc0b:	add    esi,DWORD PTR [ecx+0xc]
  41cc0e:	int3   
  41cc0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc10:	dec    DWORD PTR [esi+0xc7103ef]
  41cc16:	or     DWORD PTR [ebx],edx
  41cc18:	test   eax,0x3e69d11
  41cc1d:	aaa    
  41cc1e:	or     DWORD PTR [ecx],ebx
  41cc20:	test   eax,0x3e69ad1
  41cc25:	in     al,dx
  41cc26:	or     dl,bh
  41cc28:	test   al,0xe2
  41cc2a:	xchg   edi,eax
  41cc2b:	or     eax,0xf6b3c9a7
  41cc30:	mov    bh,0x4e
  41cc32:	and    al,0xc8
  41cc34:	add    ebx,esp
  41cc36:	mov    bh,0xa7
  41cc38:	(bad)  
  41cc39:	ret    0xd8a9
  41cc3c:	mov    bh,0xc3
  41cc3e:	cwde   
  41cc3f:	out    0x3,al
  41cc41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc42:	cwde   
  41cc43:	mov    ebp,0xd89900a6
  41cc48:	clc    
  41cc49:	loope  0x41cbdd
  41cc4b:	mov    ch,0xca
  41cc4d:	add    ebp,DWORD PTR [edx+0x9]
  41cc50:	mov    ds:0x93ad6fa2,eax
  41cc55:	mov    dh,0x93
  41cc57:	xchg   edi,eax
  41cc58:	mov    dh,0xb5
  41cc5a:	lea    ebp,[ebx-0x356c6071]
  41cc60:	out    0x3,al
  41cc62:	mov    cs,WORD PTR [ecx]
  41cc64:	mov    ah,0xa1
  41cc66:	pop    edx
  41cc67:	mov    ah,0x87
  41cc69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc6a:	sbb    DWORD PTR [eax-0x68994a7d],0xffffff85
  41cc71:	test   eax,0x383b557
  41cc76:	inc    edx
  41cc77:	cwde   
  41cc78:	dec    ebx
  41cc79:	mov    dh,0x53
  41cc7b:	mov    bl,0x54
  41cc7d:	loop   0x41ccd1
  41cc7f:	mov    ch,0x42
  41cc81:	add    al,0x31
  41cc83:	or     edi,esp
  41cc85:	add    esi,DWORD PTR [ecx]
  41cc87:	or     edi,esp
  41cc89:	add    esi,DWORD PTR [ecx]
  41cc8b:	or     edi,esp
  41cc8d:	add    esi,DWORD PTR [ecx]
  41cc8f:	or     DWORD PTR [eax],eax
  41cc91:	jmp    0xe941d5c8
  41cc96:	xor    cl,BYTE PTR [ecx]
  41cc98:	add    cl,ch
  41cc9a:	xor    cl,BYTE PTR [ecx]
  41cc9c:	add    cl,ch
  41cc9e:	xor    cl,BYTE PTR [ecx]
  41cca0:	add    cl,ch
  41cca2:	xor    cl,BYTE PTR [ecx]
  41cca4:	add    cl,ch
  41cca6:	xor    cl,BYTE PTR [ecx]
  41cca8:	add    cl,ch
  41ccaa:	add    BYTE PTR [edx],dh
  41ccac:	or     DWORD PTR [eax],eax
  41ccae:	jmp    0xe941d5e5
  41ccb3:	xor    cl,BYTE PTR [ecx]
  41ccb5:	add    cl,ch
  41ccb7:	xor    cl,BYTE PTR [ecx]
  41ccb9:	add    cl,ch
  41ccbb:	xor    cl,BYTE PTR [ecx]
  41ccbd:	add    cl,ch
  41ccbf:	xor    cl,BYTE PTR [ecx]
  41ccc1:	add    cl,ch
  41ccc3:	xor    cl,BYTE PTR [ecx]
  41ccc5:	add    cl,ch
  41ccc7:	xor    cl,BYTE PTR [ecx]
  41ccc9:	add    cl,ch
  41cccb:	xor    cl,BYTE PTR [ecx]
  41cccd:	add    cl,ch
  41cccf:	xor    cl,BYTE PTR [ecx]
  41ccd1:	add    cl,ch
  41ccd3:	xor    cl,BYTE PTR [ecx]
  41ccd5:	add    cl,ch
  41ccd7:	xor    cl,BYTE PTR [ecx]
  41ccd9:	add    cl,ch
  41ccdb:	xor    cl,BYTE PTR [ecx]
  41ccdd:	add    cl,ch
  41ccdf:	xor    cl,BYTE PTR [ecx]
  41cce1:	add    cl,ch
  41cce3:	xor    cl,BYTE PTR [ecx]
  41cce5:	add    cl,ch
  41cce7:	xor    cl,BYTE PTR [ecx]
  41cce9:	add    cl,ch
  41cceb:	xor    cl,BYTE PTR [ecx]
  41cced:	add    cl,ch
  41ccef:	xor    cl,BYTE PTR [ecx]
  41ccf1:	add    cl,ch
  41ccf3:	xor    cl,BYTE PTR [ecx]
  41ccf5:	add    cl,ch
  41ccf7:	xor    cl,BYTE PTR [ecx]
  41ccf9:	add    cl,ch
  41ccfb:	xor    cl,BYTE PTR [ecx]
  41ccfd:	add    cl,ch
  41ccff:	xor    cl,BYTE PTR [ecx]
  41cd01:	add    cl,ch
  41cd03:	xor    cl,BYTE PTR [ecx]
  41cd05:	add    cl,ch
  41cd07:	xor    cl,BYTE PTR [ecx]
  41cd09:	add    BYTE PTR [eax],al
  41cd0b:	mov    BYTE PTR [esi],al
  41cd0d:	add    BYTE PTR [eax],al
  41cd0f:	add    BYTE PTR [eax-0x67fffffa],cl
  41cd15:	push   es
  41cd16:	add    BYTE PTR [eax],al
  41cd18:	cwde   
  41cd19:	push   es
  41cd1a:	add    BYTE PTR [eax],al
  41cd1c:	mov    BYTE PTR [esi],al
  41cd1e:	add    BYTE PTR [eax],al
  41cd20:	mov    BYTE PTR [esi],al
  41cd22:	add    BYTE PTR [eax],al
  41cd24:	pop    eax
  41cd25:	push   es
  41cd26:	add    BYTE PTR [eax],al
  41cd28:	pop    eax
  41cd29:	push   es
  41cd2a:	add    BYTE PTR [eax],al
  41cd2c:	dec    eax
  41cd2d:	push   es
  41cd2e:	add    BYTE PTR [eax],al
  41cd30:	dec    eax
  41cd31:	push   es
  41cd32:	add    BYTE PTR [eax],al
  41cd34:	pop    eax
  41cd35:	push   es
  41cd36:	add    BYTE PTR [eax],al
  41cd38:	pop    eax
  41cd39:	push   es
  41cd3a:	add    BYTE PTR [eax],al
  41cd3c:	dec    eax
  41cd3d:	push   es
  41cd3e:	add    BYTE PTR [eax],al
  41cd40:	dec    eax
  41cd41:	push   es
  41cd42:	add    BYTE PTR [eax],al
  41cd44:	sbb    BYTE PTR [esi],al
  41cd46:	add    BYTE PTR [eax],al
  41cd48:	sbb    BYTE PTR [esi],al
  41cd4a:	add    BYTE PTR [eax],al
  41cd4c:	or     BYTE PTR [esi],al
  41cd4e:	add    BYTE PTR [eax],al
  41cd50:	or     BYTE PTR [esi],al
  41cd52:	add    BYTE PTR [eax],al
  41cd54:	sbb    BYTE PTR [esi],al
  41cd56:	add    BYTE PTR [eax],al
  41cd58:	sbb    BYTE PTR [esi],al
  41cd5a:	add    BYTE PTR [eax],al
  41cd5c:	or     BYTE PTR [esi],al
  41cd5e:	add    BYTE PTR [eax],al
  41cd60:	or     BYTE PTR [esi],al
  41cd62:	add    BYTE PTR [eax],al
  41cd64:	test   BYTE PTR [esi-0x3445ae14],cl
  41cd6a:	pop    es
  41cd6b:	mov    ch,BYTE PTR [ecx]
  41cd6d:	xchg   ecx,eax
  41cd6e:	dec    ebx
  41cd6f:	jmp    FWORD PTR [edx+0xc35b2b]
  41cd75:	fs mov gs,esp
  41cd78:	push   ecx
  41cd79:	pop    edi
  41cd7a:	mov    edx,0x8e55c930
  41cd7f:	outs   dx,DWORD PTR ds:[esi]
  41cd80:	xor    BYTE PTR [edx+0x278b0b9a],ch
  41cd86:	add    eax,0x90394689
  41cd8b:	inc    ebx
  41cd8c:	cld    
  41cd8d:	stos   BYTE PTR es:[edi],al
  41cd8e:	mov    ds:0x895f8b1f,al
  41cd93:	cmp    eax,0x800a056b
  41cd98:	aas    
  41cd99:	cli    
  41cd9a:	pushf  
  41cd9b:	add    ebx,ebp
  41cd9d:	mov    cl,al
  41cd9f:	pop    ebp
  41cda0:	mov    ecx,DWORD PTR [ebx+eax*8-0x71fb3340]
  41cda7:	in     al,dx
  41cda8:	adc    DWORD PTR [ebp-0x14],0xffffff88
  41cdac:	inc    ebp
  41cdad:	sub    DWORD PTR [eax-0x2c551fbd],edx
  41cdb3:	fisttp WORD PTR [ebx+0x510128e4]
  41cdb9:	add    eax,0xaae45390
  41cdbe:	retf   
  41cdbf:	jecxz  0x41cd4c
  41cdc1:	jmp    0x398ece66
  41cdc6:	xchg   edx,eax
  41cdc7:	dec    ebx
  41cdc8:	clc    
  41cdc9:	mov    edx,0x738bf7b6
  41cdce:	in     eax,0x0
  41cdd0:	inc    ebp
  41cdd1:	sub    DWORD PTR [edx-0x314517bd],edx
  41cdd7:	test   DWORD PTR [ebx+0xe96000],0x53922955
  41cde1:	lock stos BYTE PTR es:[edi],al
  41cde3:	(bad)  
  41cde4:	test   DWORD PTR [ebx+0x4d00fd79],0xfc4b9239
  41cdee:	test   dh,0xf3
  41cdf1:	add    BYTE PTR [ecx],dh
  41cdf3:	or     DWORD PTR [eax],eax
  41cdf5:	jmp    0x41ce2f
  41cdf7:	xchg   esp,eax
  41cdf8:	push   ebx
  41cdf9:	hlt    
  41cdfa:	mov    dl,0x4b
  41cdfc:	dec    DWORD PTR [eax+0x45891564]
  41ce02:	mov    ecx,0x6af44b94
  41ce07:	rcl    DWORD PTR [edi],1
  41ce09:	jae    0x41ce04
  41ce0b:	xchg   ebx,eax
  41ce0c:	push   ebx
  41ce0d:	lock stos BYTE PTR es:[edi],al
  41ce0f:	or     eax,DWORD PTR [ecx]
  41ce11:	inc    ebp
  41ce12:	sub    DWORD PTR [edx+0xf1bdc43],edx
  41ce18:	push   0xffc933ac
  41ce1d:	mov    ch,ah
  41ce1f:	cmp    al,0x4f
  41ce21:	call   0x41d807
  41ce26:	mov    dl,0x45
  41ce28:	or     al,0x85
  41ce2a:	jno    0x41cdc2
  41ce2c:	sbb    BYTE PTR [ebx+0x45891504],cl
  41ce32:	dec    ecx
  41ce33:	adc    BYTE PTR [ebp+0x4b91e10c],dh
  41ce39:	in     al,dx
  41ce3a:	mov    edx,0x8bebb6
  41ce3f:	hlt    
  41ce40:	sbb    al,0x89
  41ce42:	add    al,0xa1
  41ce44:	or     al,0x43
  41ce46:	or     BYTE PTR [edx],bl
  41ce48:	push   cs
  41ce49:	mov    DWORD PTR [ebp+0x21],ecx
  41ce4c:	mov    WORD PTR [edi-0x103257fc],?
  41ce52:	jmp    0x41ce21
  41ce54:	fstp   TBYTE PTR [edi-0x3f41eb75]
  41ce5a:	int3   
  41ce5b:	cmc    
  41ce5c:	dec    esp
  41ce5d:	int3   
  41ce5e:	int3   
  41ce5f:	in     eax,dx
  41ce60:	dec    esp
  41ce61:	int3   
  41ce62:	int3   
  41ce63:	in     eax,0x4c
  41ce65:	int3   
  41ce66:	int3   
  41ce67:	test   BYTE PTR [esp+ebp*8-0x17ff2a7d],dl
  41ce6e:	add    eax,0x89fd1fde
  41ce73:	ins    BYTE PTR es:[edi],dx
  41ce74:	xor    DWORD PTR [ecx-0x184726bb],ecx
  41ce7a:	sub    esi,eax
  41ce7c:	pop    ds
  41ce7d:	std    
  41ce7e:	xor    ebp,0x4
  41ce81:	mov    eax,ds:0xffca3ef4
  41ce86:	addr16 in eax,dx
  41ce88:	or     al,BYTE PTR [eax+0x0]
  41ce8b:	mov    edx,0x9e51e7cd
  41ce90:	cmc    
  41ce91:	repz ja 0x41ce84
  41ce94:	or     BYTE PTR [ecx-0x35f908],ah
  41ce9a:	imul   esi,DWORD PTR [ecx],0x6d67ffb3
  41cea0:	or     al,BYTE PTR [eax+0x0]
  41cea3:	add    BYTE PTR [esi-0xb],dh
  41cea6:	div    DWORD PTR [edi-0x10]
  41cea9:	or     BYTE PTR [edi+0x43475945],al
  41ceaf:	cld    
  41ceb0:	xor    DWORD PTR [ecx],ecx
  41ceb2:	add    BYTE PTR [eax],al
  41ceb4:	dec    edx
  41ceb5:	adc    DWORD PTR [ecx-0x3d74b2ab],ecx
  41cebb:	add    DWORD PTR [eax-0x437c044b],edi
  41cec1:	sbb    al,0x8
  41cec3:	jae    0x41ced5
  41cec5:	xchg   esp,eax
  41cec6:	inc    ebx
  41cec7:	cld    
  41cec8:	mov    edx,0x338c830d
  41cecd:	leave  
  41cece:	call   DWORD PTR [eax-0x56]
  41ced1:	mov    ah,0xe7
  41ced3:	push   edx
  41ced4:	push   ss
  41ced5:	cmc    
  41ced6:	repz ja 0x41cf49
  41ced9:	or     DWORD PTR [ecx+0x491054d],ecx
  41cedf:	lea    eax,ds:0xa003e97
  41cee5:	cmp    cl,BYTE PTR [ecx-0x33b5731b]
  41ceeb:	int3   
  41ceec:	cmc    
  41ceed:	dec    ebp
  41ceee:	int3   
  41ceef:	int3   
  41cef0:	in     eax,dx
  41cef1:	dec    ebp
  41cef2:	int3   
  41cef3:	int3   
  41cef4:	in     eax,0x4d
  41cef6:	int3   
  41cef7:	int3   
  41cef8:	fs xchg edx,eax
  41cefa:	in     al,dx
  41cefb:	mov    eax,ds:0x3ea161
  41cf00:	call   DWORD PTR [ecx-0x3355cfc0]
  41cf06:	pop    es
  41cf07:	add    BYTE PTR ds:[eax+0x725d07d1],bh
  41cf0e:	dec    ebp
  41cf0f:	int3   
  41cf10:	int3   
  41cf11:	ins    DWORD PTR es:[edi],dx
  41cf12:	dec    ebp
  41cf13:	int3   
  41cf14:	int3   
  41cf15:	gs dec ebp
  41cf17:	int3   
  41cf18:	int3   
  41cf19:	in     al,0x91
  41cf1b:	in     al,dx
  41cf1c:	mov    ebp,esp
  41cf1e:	or     al,0x50
  41cf20:	mov    ebp,esp
  41cf22:	adc    BYTE PTR [edi-0x1],cl
  41cf25:	sbb    al,0x15
  41cf27:	jne    0x41cf6a
  41cf29:	xor    DWORD PTR [eax+eax*8-0x33b28a34],edi
  41cf30:	int3   
  41cf31:	ins    DWORD PTR es:[edi],dx
  41cf32:	dec    ebp
  41cf33:	int3   
  41cf34:	int3   
  41cf35:	gs dec ebp
  41cf37:	int3   
  41cf38:	int3   
  41cf39:	in     al,0x91
  41cf3b:	in     al,dx
  41cf3c:	adc    DWORD PTR [ebp+0x11],0x6a
  41cf40:	add    bl,cl
  41cf42:	or     BYTE PTR [eax-0x24],ch
  41cf45:	xor    ecx,ecx
  41cf47:	(bad)  
  41cf48:	inc    BYTE PTR [ecx+eiz*1+0x75]
  41cf4c:	inc    ecx
  41cf4d:	xor    DWORD PTR [eax+0x3189f843],edx
  41cf53:	add    al,BYTE PTR [eax+0x31]
  41cf56:	xchg   edx,eax
  41cf57:	inc    ebx
  41cf58:	clc    
  41cf59:	popa   
  41cf5a:	xor    DWORD PTR [edx-0x7ee1f901],edi
  41cf60:	les    ebp,FWORD PTR [ecx]
  41cf62:	nop
  41cf63:	inc    ebx
  41cf64:	cld    
  41cf65:	stos   BYTE PTR es:[edi],al
  41cf66:	retf   
  41cf67:	sqrtps xmm7,XMMWORD PTR [edx+0x520bb3]
  41cf6e:	mov    edx,0xde5007c3
  41cf73:	mov    bl,0xfb
  41cf75:	mov    ecx,esp
  41cf77:	mov    ebx,0x9264ccc0
  41cf7c:	in     al,dx
  41cf7d:	push   ecx
  41cf7e:	out    dx,al
  41cf7f:	ret    
  41cf80:	sti    
  41cf81:	add    BYTE PTR [ecx],dh
  41cf83:	or     DWORD PTR [eax],eax
  41cf85:	jmp    0x41cfaf
  41cf87:	xchg   edx,eax
  41cf88:	inc    ebx
  41cf89:	cld    
  41cf8a:	mov    dl,0x48
  41cf8c:	dec    DWORD PTR [eax+0x4d891cec]
  41cf92:	popf   
  41cf93:	loope  0x41cfdf
  41cf95:	adc    BYTE PTR [edx],ah
  41cf97:	dec    BYTE PTR [eax+0x530a3955]
  41cf9d:	cld    
  41cf9e:	ss push edi
  41cfa0:	add    cl,BYTE PTR [ebx+0x4d010cec]
  41cfa6:	jne    0x41cfb5
  41cfa8:	mov    dh,0x11
  41cfaa:	sub    cl,BYTE PTR [ebx+0x74]
  41cfad:	pop    es
  41cfae:	test   eax,0x31000007
  41cfb3:	xor    al,BYTE PTR [ebx+ebp*8]
  41cfb6:	sbb    ecx,0xbb548bbf
  41cfbc:	ror    ah,0x75
  41cfbf:	dec    esp
  41cfc0:	int3   
  41cfc1:	int3   
  41cfc2:	ins    DWORD PTR es:[edi],dx
  41cfc3:	dec    esp
  41cfc4:	int3   
  41cfc5:	int3   
  41cfc6:	gs dec esp
  41cfc8:	int3   
  41cfc9:	int3   
  41cfca:	test   BYTE PTR [eax+0x949b9ec],dl
  41cfd0:	add    BYTE PTR [eax],al
  41cfd2:	add    BYTE PTR [ebp+0x24890790],dl
  41cfd8:	mov    ecx,0xbe314177
  41cfdd:	ror    ah,0xf5
  41cfe0:	dec    ebp
  41cfe1:	int3   
  41cfe2:	int3   
  41cfe3:	in     eax,dx
  41cfe4:	dec    ebp
  41cfe5:	int3   
  41cfe6:	int3   
  41cfe7:	in     eax,0x4d
  41cfe9:	int3   
  41cfea:	int3   
  41cfeb:	test   BYTE PTR [eax-0x62a7c14],dl
  41cff1:	mov    BYTE PTR [ebp+0x29],al
  41cff4:	mov    BYTE PTR [eax+0x4],bh
  41cff7:	xor    DWORD PTR [esp+eax*4],ecx
  41cffa:	mov    BYTE PTR [ecx],dh
  41cffc:	or     DWORD PTR [eax],eax
  41cffe:	mov    esi,DWORD PTR [ecx+edx*1-0x77]
  41d002:	push   ecx
  41d003:	xor    eax,0xe008ea88
  41d008:	das    
  41d009:	xchg   DWORD PTR [ebp-0x5b],edx
  41d00c:	nop
  41d00d:	inc    ebx
  41d00e:	or     BYTE PTR [edx-0xb76f7b7],dh
  41d014:	sbb    ch,al
  41d016:	inc    ebp
  41d017:	xchg   ebp,eax
  41d018:	or     DWORD PTR [eax],eax
  41d01a:	add    BYTE PTR [ecx],dh
  41d01c:	xor    BYTE PTR [edi],al
  41d01e:	mov    esi,esp
  41d020:	sbb    al,0x81
  41d022:	shl    DWORD PTR [eax],0x92
  41d025:	dec    ebx
  41d026:	cld    
  41d027:	stos   BYTE PTR es:[edi],al
  41d028:	mov    dh,0xfb
  41d02a:	cmp    eax,DWORD PTR [edx*1-0x3945b98f]
  41d031:	sti    
  41d032:	mov    ebp,esp
  41d034:	sbb    BYTE PTR ds:0xca3d00b7,cl
  41d03a:	mov    esi,0xfa883dfa
  41d03f:	add    edi,DWORD PTR [esi+edx*8-0x6fc2ba78]
  41d046:	dec    ebx
  41d047:	lock es push esp
  41d04a:	adc    al,0x41
  41d04c:	mov    al,0x26
  41d04e:	std    
  41d04f:	rdtsc  
  41d051:	or     DWORD PTR [edi+0x43901955],eax
  41d057:	or     BYTE PTR [edx+0x39030bcd],ch
  41d05d:	nop
  41d05e:	push   ebx
  41d05f:	clc    
  41d060:	mov    edx,0x74030f04
  41d065:	stc    
  41d066:	mov    BYTE PTR [ebp+0x29],cl
  41d069:	nop
  41d06a:	push   ebx
  41d06b:	or     al,0x32
  41d06d:	cli    
  41d06e:	mov    BYTE PTR [ebp-0x17],cl
  41d071:	xchg   ecx,eax
  41d072:	add    al,0xa
  41d074:	retf   0x8971
  41d077:	push   ebp
  41d078:	sub    DWORD PTR [eax-0x38cdf7bd],edx
  41d07e:	add    ecx,DWORD PTR [ecx+0x6be7116c]
  41d084:	mov    esi,0xcc8bfd1b
  41d089:	mov    ebp,0x9004ccc0
  41d08e:	in     al,dx
  41d08f:	adc    DWORD PTR [ebp+0x294588e4],0xffffff92
  41d096:	inc    ebx
  41d097:	in     al,0xaa
  41d099:	int    0xe3
  41d09b:	mov    eax,DWORD PTR [eax]
  41d09d:	in     al,0x24
  41d09f:	add    DWORD PTR [ecx+0x45],edx
  41d0a2:	xchg   edx,eax
  41d0a3:	push   ebx
  41d0a4:	call   0x8c299653
  41d0a9:	test   eax,0x31000088
  41d0ae:	xchg   edx,eax
  41d0af:	dec    ebx
  41d0b0:	lock mov dl,0x9d
  41d0b3:	out    dx,eax
  41d0b4:	add    BYTE PTR [esi],ch
  41d0b6:	test   ecx,edi
  41d0b8:	add    BYTE PTR [ecx],dh
  41d0ba:	or     DWORD PTR [ecx+0x53083955],ecx
  41d0c0:	lock mov eax,0xf48bdfb5
  41d0c6:	sub    BYTE PTR [ecx+0xd092178],al
  41d0cc:	test   BYTE PTR [edx+ecx*1],dl
  41d0cf:	add    BYTE PTR [eax],al
  41d0d1:	fwait
  41d0d2:	or     DWORD PTR [edx+0x0],ebp
  41d0d5:	stos   BYTE PTR es:[edi],al
  41d0d6:	int3   
  41d0d7:	fisttp WORD PTR [ebx+0x5101117c]
  41d0dd:	cmp    eax,0x915fcb7
  41d0e2:	xchg   ebx,eax
  41d0e3:	add    BYTE PTR ds:[eax+0x6c8bfbc4],ch
  41d0ea:	sub    DWORD PTR [ecx+0x16953138],eax
  41d0f0:	mov    esi,DWORD PTR [ecx+ebp*1-0x77]
  41d0f4:	push   ebp
  41d0f5:	sub    DWORD PTR [esi],eax
  41d0f7:	jns    0x45cafe79
  41d0fd:	ror    DWORD PTR [esi+0x3200084b],1
  41d103:	ror    DWORD PTR [edi],1
  41d105:	mov    DWORD PTR [ebp+edx*1-0x17],ebp
  41d109:	pop    ss
  41d10a:	stos   BYTE PTR es:[edi],al
  41d10b:	mov    ah,0xdf
  41d10d:	mov    esi,esp
  41d10f:	adc    BYTE PTR [ecx],al
  41d111:	inc    edx
  41d112:	inc    ecx
  41d113:	nop
  41d114:	inc    ebx
  41d115:	hlt    
  41d116:	stos   BYTE PTR es:[edi],al
  41d117:	int3   
  41d118:	fisttp WORD PTR [ebx+0x110110fc]
  41d11e:	mov    eax,0xecc7ebb4
  41d123:	and    BYTE PTR [eax],al
  41d125:	add    BYTE PTR [ecx],dh
  41d127:	or     DWORD PTR [ecx+0x78869145],ecx
  41d12d:	adc    BYTE PTR [ecx],dh
  41d12f:	xchg   ebp,eax
  41d130:	or     al,0x8b
  41d132:	hlt    
  41d133:	sub    BYTE PTR [ecx+0x4953139],al
  41d139:	(bad)  
  41d13a:	in     al,dx
  41d13b:	and    bh,bh
  41d13d:	push   DWORD PTR [ecx]
  41d13f:	or     DWORD PTR [ecx+0x3a863d55],ecx
  41d145:	add    ch,al
  41d147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d148:	mov    BYTE PTR [ebp+0x3d],al
  41d14b:	mov    cs,WORD PTR [eax]
  41d14d:	adc    DWORD PTR [eax],0xb1000009
  41d153:	xchg   esp,eax
  41d154:	sbb    ecx,DWORD PTR [ebx+0x2891584]
  41d15a:	dec    esp
  41d15b:	sbb    bh,ch
  41d15d:	dec    DWORD PTR [esi+0x54d88b9]
  41d163:	mov    eax,0xfc00b5e7
  41d168:	sbb    ebp,edi
  41d16a:	sub    ebp,0x10
  41d16d:	xchg   DWORD PTR [ebp+0xd],eax
  41d170:	cs sbb al,0x8b
  41d173:	jl     0x41d18a
  41d175:	mov    DWORD PTR [edx],eax
  41d177:	stos   BYTE PTR es:[edi],al
  41d178:	retf   
  41d179:	pop    es
  41d17a:	lea    edi,[ebp+0x11]
  41d17d:	add    dl,BYTE PTR [edx-0x46]
  41d180:	ret    
  41d181:	sti    
  41d182:	push   eax
  41d183:	fnstenv [ecx-0x5]
  41d186:	(bad)  
  41d187:	mov    esi,0xa808c485
  41d18c:	ret    
  41d18d:	fisttp DWORD PTR [ebx+0x558914fc]
  41d193:	test   DWORD PTR [edi+0x14f48b0f],ecx
  41d199:	add    eax,0xf443902d
  41d19f:	mov    edx,0x7083ebcb
  41d1a4:	add    al,0x87
  41d1a6:	dec    ebp
  41d1a7:	lea    ebp,ds:0x28dc8b95
  41d1ad:	add    edx,0xe0539045
  41d1b3:	pop    eax
  41d1b4:	or     bh,ch
  41d1b6:	call   FWORD PTR [esi-0x73]
  41d1b9:	jecxz  0x41d218
  41d1bb:	jb     0x41d209
  41d1bd:	int3   
  41d1be:	int3   
  41d1bf:	in     al,0x8d
  41d1c1:	in     al,dx
  41d1c2:	adc    DWORD PTR [ebp+0x10],0x68
  41d1c6:	lock xor ecx,ecx
  41d1c9:	(bad)  
  41d1ca:	inc    BYTE PTR [eax]
  41d1cc:	sbb    al,0x9
  41d1ce:	js     0x41d211
  41d1d0:	xor    DWORD PTR [edx+0x1599f843],eax
  41d1d6:	add    al,BYTE PTR [eax+0x31]
  41d1d9:	test   BYTE PTR [ebx-0x8],al
  41d1dc:	and    DWORD PTR [ecx],0x190efd3e
  41d1e2:	add    esp,0xfc438239
  41d1e8:	stos   BYTE PTR es:[edi],al
  41d1e9:	(bad)  
  41d1ea:	sqrtps xmm5,XMMWORD PTR [edx-0x45adf442]
  41d1f1:	into   
  41d1f2:	pop    es
  41d1f3:	push   eax
  41d1f4:	out    0xbe,al
  41d1f6:	sti    
  41d1f7:	mov    edx,esp
  41d1f9:	mov    dh,0xc0
  41d1fb:	int3   
  41d1fc:	in     eax,0x45
  41d1fe:	int3   
  41d1ff:	int3   
  41d200:	fs test ah,ch
  41d203:	mov    eax,ds:0x3e9165
  41d208:	test   DWORD PTR [ecx],0xbd1c8b68
  41d20e:	ja     0x41d251
  41d210:	xor    DWORD PTR [edx+0x4ce30150],eax
  41d216:	mov    BYTE PTR [eax+0x34],dl
  41d219:	mov    dh,0xc0
  41d21b:	int3   
  41d21c:	gs inc ebp
  41d21e:	int3   
  41d21f:	int3   
  41d220:	in     al,0x83
  41d222:	in     al,dx
  41d223:	adc    DWORD PTR [ebp-0x6af60fb],0xffffffc9
  41d22a:	dec    DWORD PTR [edx+0x3ec6dc63]
  41d230:	add    BYTE PTR [edx-0x7c74d037],bh
  41d236:	test   dl,dl
  41d238:	ds stos BYTE PTR es:[edi],al
  41d23a:	ror    DWORD PTR [ebx],0x8b
  41d23d:	add    DWORD PTR [edx-0x31450bb5],0xfffffff3
  41d244:	mov    edi,ecx
  41d246:	add    al,0x87
  41d248:	dec    ebp
  41d249:	cmp    DWORD PTR [ebx+edx*2-0x4415708],eax
  41d250:	mov    eax,0x930
  41d255:	lods   al,BYTE PTR ds:[esi]
  41d256:	dec    eax
  41d257:	je     0x41d29d
  41d259:	mov    dl,0x95
  41d25b:	test   DWORD PTR [eax],0xc0310d9c
  41d261:	sbb    dl,ch
  41d263:	mov    BYTE PTR [ebp+0x9],cl
  41d266:	test   BYTE PTR [edi+0x18],cl
  41d269:	cmp    bh,BYTE PTR [esi-0x7be78af9]
  41d26f:	inc    ebx
  41d270:	clc    
  41d271:	mov    edx,0x79890bc5
  41d276:	cmc    
  41d277:	mov    BYTE PTR [ebp-0x27],dl
  41d27a:	add    DWORD PTR [ebx+0x10],0xffffffa8
  41d27e:	retf   0xb817
  41d281:	xor    BYTE PTR [ecx],cl
  41d283:	add    BYTE PTR [eax],al
  41d285:	(bad)  
  41d287:	mov    BYTE PTR [ebp-0x47],cl
  41d28a:	or     DWORD PTR [edi],0xffffff89
  41d28d:	pop    esp
  41d28e:	adc    DWORD PTR [ecx+0x42d3a945],ecx
  41d294:	cld    
  41d295:	add    BYTE PTR [ecx*1+0xc8ac031],bl
  41d29c:	jmp    0x898b3554
  41d2a1:	in     eax,0xec
  41d2a3:	dec    ebx
  41d2a4:	int3   
  41d2a5:	int3   
  41d2a6:	jne    0x41d2ec
  41d2a8:	int3   
  41d2a9:	int3   
  41d2aa:	ins    DWORD PTR es:[edi],dx
  41d2ab:	inc    esp
  41d2ac:	int3   
  41d2ad:	int3   
  41d2ae:	gs inc esp
  41d2b0:	int3   
  41d2b1:	int3   
  41d2b2:	add    al,0x84
  41d2b4:	in     al,dx
  41d2b5:	adc    DWORD PTR [ebp-0x10],0xffffffc4
  41d2b9:	inc    ebp
  41d2ba:	pop    ecx
  41d2bb:	or     BYTE PTR [eax],dh
  41d2bd:	add    BYTE PTR [ecx],dh
  41d2bf:	mov    eax,ds:0x8f10303
  41d2c4:	lahf   
  41d2c5:	cmp    al,0xc9
  41d2c7:	leave  
  41d2c8:	dec    DWORD PTR [edi+0x49]
  41d2cb:	mov    ebx,0x8b36fffb
  41d2d0:	les    ecx,FWORD PTR [eax]
  41d2d2:	mov    eax,0x716af3cc
  41d2d7:	or     BYTE PTR [ebx-0x8],0x80
  41d2db:	adc    BYTE PTR [ebx],0x1c
  41d2de:	cdq    
  41d2df:	enter  0x8aff,0x73
  41d2e3:	mov    ecx,0x16316a4f
  41d2e8:	push   ebx
  41d2e9:	hlt    
  41d2ea:	sar    ch,cl
  41d2ec:	ja     0x41d32f
  41d2ee:	xor    DWORD PTR [edx-0x3796ebc5],ecx
  41d2f4:	(bad)  
  41d2f5:	call   FWORD PTR [esi+ecx*1-0x48]
  41d2f9:	add    al,BYTE PTR [eax]
  41d2fb:	xor    DWORD PTR [ecx],ecx
  41d2fd:	add    bl,ch
  41d2ff:	dec    ebx
  41d300:	or     BYTE PTR [ebx],0x0
  41d303:	xor    ecx,ecx
  41d305:	dec    DWORD PTR [eax+0x681974]
  41d30b:	inc    esi
  41d30c:	or     BYTE PTR [eax],al
  41d30e:	push   0x400b31
  41d313:	mov    edx,0xf07813fc
  41d318:	or     BYTE PTR [edi-0x3e],bh
  41d31b:	xor    DWORD PTR [ebx],ecx
  41d31d:	add    BYTE PTR [eax],al
  41d31f:	add    esp,DWORD PTR [ecx]
  41d321:	sahf   
  41d322:	dec    BYTE PTR [esi+0x35c48116]
  41d328:	push   ecx
  41d329:	add    BYTE PTR [edx],al
  41d32b:	icebp  
  41d32c:	or     BYTE PTR [ebx],ch
  41d32e:	add    BYTE PTR [ebx],dh
  41d330:	or     DWORD PTR [eax],eax
  41d332:	mov    edi,DWORD PTR [edi*8-0x1dcebe89]
  41d339:	(bad)  
  41d33a:	mov    DWORD PTR [ecx*8-0x7dcebe89],ebp
  41d341:	adc    eax,DWORD PTR [ecx+ecx*8-0x39]
  41d345:	call   DWORD PTR [ecx-0x70]
  41d348:	std    
  41d349:	ja     0x41d38c
  41d34b:	xor    DWORD PTR [ecx-0x47beb278],edi
  41d351:	out    0x9d,eax
  41d353:	sub    eax,0xed83fd16
  41d358:	add    al,0x89
  41d35a:	adc    eax,0x3e9145
  41d35f:	add    BYTE PTR [edx],dh
  41d361:	mov    esp,0x21648907
  41d366:	mov    DWORD PTR [ebp+0x19],edx
  41d369:	push   ss
  41d36a:	loop   0x41d2f7
  41d36c:	adc    al,0xb4
  41d36e:	ror    ah,0xe5
  41d371:	inc    esp
  41d372:	int3   
  41d373:	int3   
  41d374:	test   BYTE PTR [edx+0x16c8bec],al
  41d37a:	cmp    DWORD PTR [ebp+0x2d],eax
  41d37d:	call   0x5e9:0x16c8b04
  41d384:	fimul  DWORD PTR [ecx]
  41d386:	mov    DWORD PTR [ebp+0x35],eax
  41d389:	mov    ah,0xc0
  41d38b:	int3   
  41d38c:	in     eax,dx
  41d38d:	inc    esp
  41d38e:	int3   
  41d38f:	int3   
  41d390:	in     eax,0x44
  41d392:	int3   
  41d393:	int3   
  41d394:	add    al,0x82
  41d396:	in     al,dx
  41d397:	adc    DWORD PTR [ebp-0x62ba3b1c],0x8
  41d39e:	nop
  41d39f:	add    DWORD PTR [ecx],esi
  41d3a1:	add    BYTE PTR [ebx+0x8],0xb8
  41d3a5:	retf   
  41d3a6:	xlat   BYTE PTR ds:[ebx]
  41d3a7:	mov    esi,esp
  41d3a9:	xor    BYTE PTR [ecx+0x4f0a2955],cl
  41d3af:	cmp    al,0xa8
  41d3b1:	mov    ebx,0x28f48bdf
  41d3b6:	or     eax,0x88fcf9b7
  41d3bb:	push   ebp
  41d3bc:	push   ecx
  41d3bd:	add    DWORD PTR [edx+ecx*1+0x39],0xffffff80
  41d3c2:	inc    ebx
  41d3c3:	call   0x13eacc8
  41d3c8:	inc    eax
  41d3c9:	xor    DWORD PTR [edx-0x3846c3f5],eax
  41d3cf:	call   DWORD PTR [eax+0x49]
  41d3d2:	(bad)  
  41d3d5:	cs mov esp,eax
  41d3d8:	or     BYTE PTR [eax+0x716aefce],bh
  41d3de:	mov    eax,ds:0x9312fff
  41d3e3:	push   0xaa100
  41d3e8:	push   0x31
  41d3ea:	adc    al,0x53
  41d3ec:	lock test al,0xce
  41d3ef:	jecxz  0x41d37c
  41d3f1:	pop    esp
  41d3f2:	sub    DWORD PTR [ecx-0x77467abe],ecx
  41d3f8:	dec    ebp
  41d3f9:	cmp    DWORD PTR [edx-0x482aaa78],edi
  41d3ff:	out    0xc1,eax
  41d401:	aam    0x14
  41d403:	std    
  41d404:	xor    ebp,0x5
  41d407:	lds    eax,FWORD PTR [ebp-0x43]
  41d40a:	or     DWORD PTR [eax],eax
  41d40c:	add    BYTE PTR [ecx],dh
  41d40e:	and    BYTE PTR [edi],al
  41d410:	mov    ebp,DWORD PTR [ebp+ebx*1-0x7f]
  41d414:	shl    BYTE PTR [eax],0x82
  41d417:	inc    ebx
  41d418:	hlt    
  41d419:	mov    edx,0xe60fdfc6
  41d41e:	mov    edx,0x1cfc3905
  41d423:	jno    0x41d47e
  41d425:	mov    edx,0x83e7ce
  41d42a:	or     ebp,edi
  41d42c:	push   DWORD PTR [ebx-0xc]
  41d42f:	jg     0x41d47c
  41d431:	call   0x5166e8
  41d436:	in     eax,0xd4
  41d438:	mov    BYTE PTR [ebp+0x59],dl
  41d43b:	add    BYTE PTR [edx+0x10],0xaa
  41d43f:	(bad)  
  41d440:	fisttp WORD PTR [ebx+0x448ad500]
  41d446:	and    DWORD PTR [ecx+ecx*4],edx
  41d449:	dec    ebp
  41d44a:	push   ecx
  41d44b:	fcom   st(1)
  41d44d:	test   eax,0x515588d4
  41d453:	add    al,0xad
  41d455:	inc    edx
  41d456:	ins    DWORD PTR es:[edi],dx
  41d457:	mov    ecx,0x80194588
  41d45c:	dec    ebx
  41d45d:	or     BYTE PTR [edx],dh
  41d45f:	rcl    DWORD PTR [ebx],0x51
  41d462:	stos   BYTE PTR es:[edi],al
  41d463:	mov    ebp,0x2d748be7
  41d468:	add    DWORD PTR [edx+0x35],eax
  41d46b:	mov    ecx,0x13fc55e7
  41d470:	std    
  41d471:	sub    ebp,0x4
  41d474:	mov    DWORD PTR [ebp-0x27],ecx
  41d477:	xchg   DWORD PTR [edi-0x183a47d8],edi
  41d47d:	jmp    0x41d442
  41d47f:	jg     0x41d4d4
  41d481:	in     al,0x83
  41d483:	and    DWORD PTR [esi],ecx
  41d485:	cld    
  41d486:	into   
  41d487:	adc    eax,DWORD PTR [ecx+0x23a12dc4]
  41d48d:	add    eax,DWORD PTR [eax]
  41d48f:	jno    0x41d49a
  41d491:	lahf   
  41d492:	cmp    al,0x39
  41d494:	retf   0x4fff
  41d497:	cdq    
  41d498:	jg     0x41d494
  41d49a:	jmp    DWORD PTR [esi-0x57f73b79]
  41d4a0:	int    0xdb
  41d4a2:	adc    DWORD PTR [ecx+edx*8+0x77],0x41
  41d4a7:	xor    DWORD PTR [ecx],ecx
  41d4a9:	jae    0x41d4b5
  41d4ab:	mov    edx,0xf0783005
  41d4b0:	or     BYTE PTR [edi-0x1],cl
  41d4b3:	fdiv   QWORD PTR [ecx+eax*4]
  41d4b6:	cmp    eax,0x3e9129
  41d4bb:	xor    DWORD PTR [esi-0x5f0e95e5],ebx
  41d4c1:	jmp    FWORD PTR [edi]
  41d4c3:	xor    DWORD PTR [ecx],ecx
  41d4c5:	mov    DWORD PTR [ebp+0x4d],edx
  41d4c8:	mov    dh,0x88
  41d4ca:	inc    ebp
  41d4cb:	push   ecx
  41d4cc:	jg     0x41d516
  41d4ce:	xor    al,0xe0
  41d4d0:	adc    edx,DWORD PTR [ebx-0x10]
  41d4d3:	xchg   edx,eax
  41d4d4:	cld    
  41d4d5:	ja     0x41d518
  41d4d7:	xor    DWORD PTR [esi],ebx
  41d4d9:	adc    ebp,DWORD PTR [edx+0x71]
  41d4dc:	mov    eax,ds:0x9312fff
  41d4e1:	mov    DWORD PTR [ebp+0x15],edx
  41d4e4:	mov    eax,0xbd0e0069
  41d4e9:	out    dx,eax
  41d4ea:	mov    ds:0x3e911d,eax
  41d4ef:	mov    dl,0xd4
  41d4f1:	adc    edi,DWORD PTR [eax+0x0]
  41d4f4:	jo     0x41d4ff
  41d4f6:	add    BYTE PTR [ebp+0x44],dh
  41d4f9:	lahf   
  41d4fa:	aas    
  41d4fb:	push   0xffffd931
  41d500:	stos   BYTE PTR es:[edi],al
  41d501:	int3   
  41d502:	sti    
  41d503:	push   eax
  41d504:	dec    ebx
  41d505:	or     ebp,edi
  41d507:	push   ebp
  41d508:	shl    DWORD PTR [esi+0x14],0x78
  41d50c:	jo     0x41d517
  41d50e:	mov    DWORD PTR [ebp-0x2b],ecx
  41d511:	or     BYTE PTR [ebx-0x28],0xaa
  41d515:	mov    esp,0x30f48bd7
  41d51a:	add    DWORD PTR [edx+0x65],eax
  41d51d:	add    BYTE PTR [ebx-0x20],0xaa
  41d521:	(bad)  
  41d522:	sti    
  41d523:	push   ecx
  41d524:	stos   BYTE PTR es:[edi],al
  41d525:	mov    esp,0xfdd052e3
  41d52a:	ja     0x41d56d
  41d52c:	xor    DWORD PTR [ecx+0x127d95e7],edi
  41d532:	std    
  41d533:	sub    DWORD PTR [ebp+0x5],0xffffff89
  41d537:	dec    ebp
  41d538:	push   ecx
  41d539:	xchg   BYTE PTR [edi+0x931a4],dh
  41d53f:	add    ch,ah
  41d541:	into   
  41d542:	mov    BYTE PTR [ebp+0x51],dl
  41d545:	jle    0x41d58a
  41d547:	fdiv   DWORD PTR [edx]
  41d549:	xchg   DWORD PTR [eax-0x78f6cf00],esp
  41d54f:	inc    ebp
  41d550:	dec    ebp
  41d551:	jle    0x41d59e
  41d553:	loopne 0x41d4ff
  41d555:	cld    
  41d556:	adc    edi,DWORD PTR [eax+0x0]
  41d559:	jo     0x41d564
  41d55b:	sub    DWORD PTR [ecx+0x5d],edx
  41d55e:	adc    BYTE PTR [ebx],0x44
  41d561:	cdq    
  41d562:	enter  0xa0ff,0x6d
  41d566:	xchg   ecx,eax
  41d567:	add    BYTE PTR ds:[ecx+0x7e],ah
  41d56b:	or     edx,DWORD PTR [ecx+ecx*4]
  41d56e:	enter  0x50ff,0xaa
  41d572:	mov    ebx,0x920952eb
  41d577:	stc    
  41d578:	(bad)  
  41d579:	out    dx,al
  41d57a:	test   esp,eax
  41d57c:	or     al,0xba
  41d57e:	retf   
  41d57f:	fisttp WORD PTR [ebx+0x4177fd2c]
  41d585:	xor    DWORD PTR [esi],eax
  41d587:	dec    eax
  41d588:	sub    BYTE PTR [eax+0x70785403],bh
  41d58e:	or     DWORD PTR [ecx+0x3e90f93d],eax
  41d594:	add    BYTE PTR [ecx],dh
  41d596:	pushf  
  41d597:	sub    cl,BYTE PTR [ebx+0x4177fd44]
  41d59d:	xor    DWORD PTR [edi-0x37e6ab62],esi
  41d5a3:	dec    DWORD PTR [edi-0x56]
  41d5a6:	add    esi,DWORD PTR [eax]
  41d5a8:	js     0x41d59a
  41d5aa:	or     BYTE PTR [edi-0x18],cl
  41d5ad:	or     DWORD PTR ds:0x4cb2fffd,edx
  41d5b3:	or     al,0x8b
  41d5b5:	sbb    al,0xfd
  41d5b7:	ja     0x41d5fa
  41d5b9:	xor    DWORD PTR [edi+0x680049e7],esi
  41d5bf:	adc    ebp,edi
  41d5c1:	xor    DWORD PTR [ebp+0xc],0xffffffe9
  41d5c5:	popa   
  41d5c6:	leave  
  41d5c7:	fadd   QWORD PTR [eax]
  41d5c9:	inc    eax
  41d5ca:	xor    DWORD PTR [eax+0x3c],ebp
  41d5cd:	js     0x41d5bf
  41d5cf:	or     BYTE PTR [eax-0x18],dl
  41d5d2:	in     eax,0xf
  41d5d4:	std    
  41d5d5:	push   DWORD PTR [edx+0x7489084c]
  41d5db:	xor    eax,0x913d0d89
  41d5e0:	add    BYTE PTR ds:[eax-0x2f1fac7c],al
  41d5e7:	cmc    
  41d5e8:	ja     0x41d62b
  41d5ea:	xor    DWORD PTR [edx+eax*2],ecx
  41d5ed:	sub    BYTE PTR [ecx-0x7c],ah
  41d5f0:	or     esi,DWORD PTR [eax]
  41d5f2:	jns    0x41d5be
  41d5f4:	call   DWORD PTR [eax+0x9]
  41d5f7:	loope  0x41d5f4
  41d5f9:	(bad)  
  41d5fa:	out    dx,al
  41d5fb:	mov    esp,es
  41d5fd:	or     al,0xba
  41d5ff:	imul   BYTE PTR [edi]
  41d601:	js     0x41d673
  41d603:	or     DWORD PTR [edi-0x3e],edi
  41d606:	rcl    DWORD PTR [esi-0x9470002],0x5b
  41d60d:	js     0x41d67f
  41d60f:	or     DWORD PTR [ebx+0x69b9b945],ecx
  41d615:	inc    eax
  41d616:	dec    ebx
  41d617:	pop    es
  41d618:	mov    DWORD PTR ds:0x3e910d,ecx
  41d61e:	add    BYTE PTR [eax],dl
  41d620:	push   ebx
  41d621:	aam    0x0
  41d623:	mov    DWORD PTR [ecx+edi*8],ebp
  41d626:	call   DWORD PTR [esi+0x31ffff51]
  41d62c:	or     DWORD PTR [ecx+0x44ae4e5],ecx
  41d632:	add    BYTE PTR [ebp+0x3d],ch
  41d635:	int3   
  41d636:	int3   
  41d637:	gs cmp eax,0x8404cccc
  41d63d:	in     al,dx
  41d63e:	mov    ebp,esp
  41d640:	add    BYTE PTR [ecx-0x3f51a2c0],cl
  41d646:	int3   
  41d647:	gs cmp eax,0x83e4cccc
  41d64d:	in     al,dx
  41d64e:	push   ebx
  41d64f:	fbstp  TBYTE PTR [edi-0x6eeec278]
  41d655:	add    BYTE PTR ds:[edx+0x70782bee],ch
  41d65c:	or     DWORD PTR [ecx+0x3e914935],ecx
  41d662:	add    BYTE PTR [esi-0x51],bh
  41d665:	pop    eax
  41d666:	pop    ebp
  41d667:	repnz cmp al,0xcc
  41d66a:	int3   
  41d66b:	fs test ah,ch
  41d66e:	push   ecx
  41d66f:	cdq    
  41d670:	lds    eax,FWORD PTR [eax]
  41d672:	inc    eax
  41d673:	xor    DWORD PTR [edx+0x3c],ebp
  41d676:	js     0x41d6e8
  41d678:	or     DWORD PTR [eax-0x18],edx
  41d67b:	popf   
  41d67c:	adc    ch,bh
  41d67e:	push   DWORD PTR [edx+0x74890844]
  41d684:	or     eax,0x29004d89
  41d689:	mov    edx,0xf5ba0069
  41d68e:	push   edi
  41d68f:	js     0x41d701
  41d691:	or     DWORD PTR [edx-0x1],edx
  41d694:	fs or  eax,0x4c54e589
  41d69a:	int3   
  41d69b:	int3   
  41d69c:	add    al,0x84
  41d69e:	in     al,dx
  41d69f:	adc    DWORD PTR [ebp-0x66ba3b1c],0x8
  41d6a6:	add    BYTE PTR [eax],al
  41d6a8:	xor    DWORD PTR [eax+0x43],ecx
  41d6ab:	fmul   QWORD PTR [ecx]
  41d6ad:	or     DWORD PTR [eax],eax
  41d6af:	add    BYTE PTR [esi-0x3b],ch
  41d6b2:	repz add DWORD PTR [ecx],esi
  41d6b5:	or     DWORD PTR [eax],eax
  41d6b7:	(bad)  
  41d6b8:	in     al,dx
  41d6b9:	or     al,0x0
  41d6bb:	add    BYTE PTR [ecx],dh
  41d6bd:	or     ebp,eax
  41d6bf:	inc    ebp
  41d6c0:	dec    ebp
  41d6c1:	or     BYTE PTR [eax],al
  41d6c3:	add    BYTE PTR [ecx],dh
  41d6c5:	test   BYTE PTR [ebx+0x8],cl
  41d6c8:	test   al,0xfd
  41d6ca:	das    
  41d6cb:	js     0x41d6bd
  41d6cd:	or     al,ch
  41d6cf:	test   eax,0xa1fd0f3e
  41d6d4:	add    DWORD PTR [ecx+0x100c003e],edx
  41d6da:	std    
  41d6db:	add    BYTE PTR [ecx],dh
  41d6dd:	xchg   ebp,eax
  41d6de:	or     eax,edi
  41d6e0:	sub    al,0xd1
  41d6e2:	ja     0x41d725
  41d6e4:	xor    DWORD PTR [ecx],ecx
  41d6e6:	add    BYTE PTR [eax],al
  41d6e8:	xor    DWORD PTR [edx],esp
  41d6ea:	or     al,bh
  41d6ec:	add    BYTE PTR [ecx+edx*8],dh
  41d6ef:	ja     0x41d732
  41d6f1:	xor    DWORD PTR [eax],ecx
  41d6f3:	add    BYTE PTR [eax],al
  41d6f5:	xor    DWORD PTR [edx-0x3786cfc5],ecx
  41d6fb:	(bad)  
  41d6fc:	jmp    DWORD PTR [ebx+eax*1-0x3b]
  41d700:	add    eax,0x3e9129
  41d705:	xor    DWORD PTR [ecx],ecx
  41d707:	add    BYTE PTR [eax],al
  41d709:	mov    dl,0xcc
  41d70b:	aaa    
  41d70c:	js     0x41d77e
  41d70e:	or     DWORD PTR [eax],eax
  41d710:	jne    0x41d746
  41d712:	mov    ds:0x924feff,eax
  41d717:	js     0x41d75a
  41d719:	xor    DWORD PTR [edx+0x30],ebp
  41d71c:	js     0x41d70e
  41d71e:	or     BYTE PTR [ecx+0x3e91610d],cl
  41d724:	add    BYTE PTR [eax+0x3c8be7bc],ch
  41d72a:	fnstenv [edi+0x41]
  41d72d:	xor    DWORD PTR [edx-0x34cd17bd],eax
  41d733:	cmp    ecx,DWORD PTR [ecx+0x4d8920f4]
  41d739:	mov    DWORD PTR [eax-0x3816e3f5],eax
  41d73f:	jmp    DWORD PTR [edi+0x1]
  41d742:	or     al,BYTE PTR [eax+0x0]
  41d745:	pop    esi
  41d746:	hlt    
  41d747:	push   DWORD PTR [edi-0x10]
  41d74a:	or     BYTE PTR [ecx-0x3836c4],ah
  41d750:	mov    BYTE PTR [eax],0x2c
  41d753:	mov    ebp,0x94314177
  41d758:	add    BYTE PTR [eax+0x31],al
  41d75b:	mov    eax,ds:0x971035f
  41d760:	mov    DWORD PTR ds:0x3e9165,edx
  41d766:	and    DWORD PTR [ecx],0xffffffc2
  41d769:	not    DWORD PTR [esi]
  41d76b:	push   cs
  41d76c:	add    esp,0x78486a39
  41d772:	jo     0x41d77d
  41d774:	std    
  41d775:	adc    eax,0x3e9169
  41d77a:	shl    BYTE PTR [eax+0x68314177],cl
  41d780:	dec    esp
  41d781:	js     0x41d7f3
  41d783:	or     DWORD PTR [eax-0x18],edx
  41d786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d787:	push   cs
  41d788:	std    
  41d789:	push   DWORD PTR [edx+0x74890444]
  41d78f:	sbb    DWORD PTR [ecx-0x18483eb3],ecx
  41d795:	aad    0xbf
  41d797:	or     eax,0x4ed83fd
  41d79c:	mov    eax,ds:0xffc82934
  41d7a1:	mov    bh,ah
  41d7a3:	sbb    BYTE PTR [edx+0x6a],dl
  41d7a6:	xor    DWORD PTR [eax+0x34],ebp
  41d7a9:	js     0x41d79b
  41d7ab:	or     BYTE PTR [eax-0x18],dl
  41d7ae:	lods   eax,DWORD PTR ds:[esi]
  41d7af:	adc    eax,0x44b2fffd
  41d7b4:	or     al,0x8b
  41d7b6:	add    ah,ch
  41d7b8:	sbb    BYTE PTR [edi+0x5381914d],al
  41d7be:	cld    
  41d7bf:	sub    dh,BYTE PTR [edi+ebp*8+0x43820b73]
  41d7c6:	loopne 0x41d7c9
  41d7c8:	or     BYTE PTR [ebx-0x24],0x0
  41d7cc:	and    DWORD PTR [esi-0x7ef2b105],ebp
  41d7d2:	les    edi,FWORD PTR [ecx]
  41d7d4:	push   0x40
  41d7d6:	js     0x41d7c8
  41d7d8:	or     BYTE PTR [ecx+0x3e90f115],cl
  41d7de:	add    BYTE PTR [ebx+0x70784c6a],al
  41d7e4:	or     DWORD PTR [ecx],eax
  41d7e6:	inc    ebp
  41d7e7:	adc    eax,0x5d0d88ba
  41d7ec:	xchg   ecx,eax
  41d7ed:	add    BYTE PTR ds:[edx],dh
  41d7f0:	mov    esi,0x351951fb
  41d7f5:	idiv   edi
  41d7f7:	dec    BYTE PTR [eax-0x4955f33c]
  41d7fd:	repz add eax,DWORD PTR [ebp+ebp*1-0x7d32aaff]
  41d805:	push   ebx
  41d806:	in     al,0xaa
  41d808:	(bad)  
  41d809:	sti    
  41d80a:	add    ebp,DWORD PTR [ebp+ebp*1-0x79]
  41d80e:	inc    ebp
  41d80f:	int    0x80
  41d811:	dec    ebx
  41d812:	loopne 0x41d82e
  41d814:	(bad)  
  41d815:	aas    
  41d816:	js     0x41d888
  41d818:	or     DWORD PTR [edi+0x20d1004d],eax
  41d81e:	sahf   
  41d81f:	(bad)  
  41d820:	hlt    
  41d821:	adc    BYTE PTR [eax],al
  41d823:	add    BYTE PTR [ecx],dh
  41d825:	or     ecx,ebp
  41d827:	or     DWORD PTR [edx+0x7383f7b6],ebp
  41d82d:	add    eax,0x80895587
  41d832:	inc    ebx
  41d833:	clc    
  41d834:	dec    edx
  41d835:	(bad)  
  41d836:	out    dx,eax
  41d837:	jae    0x41d872
  41d839:	or     BYTE PTR [ebx],0x34
  41d83c:	stc    
  41d83d:	leave  
  41d83e:	inc    DWORD PTR [edx]
  41d840:	cld    
  41d841:	adc    BYTE PTR [ecx-0x849cdef],cl
  41d847:	mov    eax,ds:0x3e9125
  41d84c:	xor    al,dh
  41d84e:	test   DWORD PTR [ecx-0x7b47fdf],0x3e74ab0
  41d858:	xor    DWORD PTR [ecx],ecx
  41d85a:	mov    DWORD PTR ds:0x3e90fd,edx
  41d860:	xor    dh,BYTE PTR [esi+0x6a3b33f7]
  41d866:	xor    al,0x78
  41d868:	jo     0x41d873
  41d86a:	add    DWORD PTR [ebp+0x19],eax
  41d86d:	or     BYTE PTR [eax],0xeb
  41d870:	mov    BYTE PTR [ecx-0x3576dbd5],0xff
  41d877:	mov    BYTE PTR [ecx+ebp*8],bh
  41d87a:	ja     0x41d8bd
  41d87c:	xor    eax,ebx
  41d87e:	(bad)  
  41d87f:	mov    DWORD PTR [eax],eax
  41d881:	and    al,0xf1
  41d883:	ja     0x41d8c6
  41d885:	xor    eax,ebx
  41d887:	(bad)  
  41d888:	mov    DWORD PTR [ebx*8+0x21314177],edi
  41d88f:	dec    esi
  41d890:	test   esi,0x960d8b0b
  41d896:	xchg   ebx,eax
  41d897:	add    BYTE PTR ds:[eax+0x31b9f7bd],ch
  41d89e:	pop    es
  41d89f:	inc    eax
  41d8a0:	add    BYTE PTR [eax+0x31020021],dh
  41d8a6:	or     DWORD PTR [ecx-0x312066ab],ecx
  41d8ac:	mov    DWORD PTR [ecx+eiz*8],edi
  41d8af:	ja     0x41d8f2
  41d8b1:	xor    DWORD PTR [edx+0x28],ebp
  41d8b4:	js     0x41d8a6
  41d8b6:	or     BYTE PTR [eax-0x18],dl
  41d8b9:	xor    eax,0xb2fffd0f
  41d8be:	inc    esp
  41d8bf:	add    al,0x8b
  41d8c1:	cmp    al,0xd5
  41d8c3:	ja     0x41d906
  41d8c5:	xor    DWORD PTR [edx+0xb5bd5e7],edi
  41d8cb:	std    
  41d8cc:	test   DWORD PTR [ecx-0x6b],esi
  41d8cf:	add    esi,DWORD PTR [ebx]
  41d8d1:	jno    0x41d8f2
  41d8d3:	sub    cl,BYTE PTR [ebx+0x4177e50c]
  41d8d9:	xor    DWORD PTR [eax-0x324dfb3c],ecx
  41d8df:	aaa    
  41d8e0:	js     0x41d952
  41d8e2:	or     DWORD PTR [eax],eax
  41d8e4:	je     0x41d8e6
  41d8e6:	cmp    BYTE PTR [eax+0x14],ch
  41d8e9:	js     0x41d95b
  41d8eb:	or     DWORD PTR [edi-0x17fab2bc],eax
  41d8f1:	pop    ebp
  41d8f2:	or     al,0xb
  41d8f4:	std    
  41d8f5:	mov    ebx,DWORD PTR [esi*4-0x48cebe89]
  41d8fc:	shl    BYTE PTR [ebx],0xf1
  41d8ff:	jle    0x41d8e4
  41d901:	pop    ebp
  41d902:	repnz cmp eax,0x931cccc
  41d908:	add    BYTE PTR [eax],al
  41d90a:	xor    DWORD PTR [ecx],ecx
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	xor    DWORD PTR [ecx],ecx
  41d910:	add    BYTE PTR [eax],al
  41d912:	xor    DWORD PTR [ecx],ecx
  41d914:	add    BYTE PTR [eax],al
  41d916:	xor    DWORD PTR [ecx],ecx
  41d918:	add    BYTE PTR [eax],al
  41d91a:	xor    DWORD PTR [ecx],ecx
  41d91c:	add    BYTE PTR [eax],al
  41d91e:	xor    DWORD PTR [ecx],ecx
  41d920:	add    BYTE PTR [eax],al
  41d922:	xor    DWORD PTR [ecx],ecx
  41d924:	add    BYTE PTR [eax],al
  41d926:	xor    DWORD PTR [ecx],ecx
  41d928:	add    BYTE PTR [eax],al
  41d92a:	xor    DWORD PTR [ecx],ecx
  41d92c:	add    BYTE PTR [eax],al
  41d92e:	xor    DWORD PTR [ecx],ecx
  41d930:	add    BYTE PTR [eax],al
  41d932:	xor    DWORD PTR [ecx],ecx
  41d934:	add    BYTE PTR [eax],al
  41d936:	xor    DWORD PTR [ecx],ecx
  41d938:	add    BYTE PTR [eax],al
  41d93a:	xor    DWORD PTR [ecx],ecx
  41d93c:	add    BYTE PTR [eax],al
  41d93e:	xor    DWORD PTR [ecx],ecx
  41d940:	add    BYTE PTR [eax],al
  41d942:	xor    DWORD PTR [ecx],ecx
  41d944:	add    BYTE PTR [eax],al
  41d946:	xor    DWORD PTR [ecx],ecx
  41d948:	add    BYTE PTR [eax],al
  41d94a:	add    BYTE PTR [ecx],dh
  41d94c:	or     DWORD PTR [eax],eax
  41d94e:	add    BYTE PTR [ecx],dh
  41d950:	or     DWORD PTR [eax],eax
  41d952:	add    BYTE PTR [ecx],dh
  41d954:	or     DWORD PTR [eax],eax
  41d956:	add    BYTE PTR [ecx],dh
  41d958:	or     DWORD PTR [eax],eax
  41d95a:	add    BYTE PTR [ecx],dh
  41d95c:	or     DWORD PTR [eax],eax
  41d95e:	add    BYTE PTR [ecx],dh
  41d960:	or     DWORD PTR [eax],eax
  41d962:	add    BYTE PTR [ecx],dh
  41d964:	or     DWORD PTR [eax],eax
  41d966:	add    BYTE PTR [ecx],dh
  41d968:	or     DWORD PTR [eax],eax
  41d96a:	add    BYTE PTR [ecx],dh
  41d96c:	or     DWORD PTR [eax],eax
  41d96e:	add    BYTE PTR [ecx],dh
  41d970:	or     DWORD PTR [eax],eax
  41d972:	add    BYTE PTR [ecx],dh
  41d974:	or     DWORD PTR [eax],eax
  41d976:	add    BYTE PTR [ecx],dh
  41d978:	or     DWORD PTR [eax],eax
  41d97a:	add    BYTE PTR [ecx],dh
  41d97c:	or     DWORD PTR [eax],eax
  41d97e:	add    BYTE PTR [ecx],dh
  41d980:	or     DWORD PTR [eax],eax
  41d982:	add    BYTE PTR [ecx],dh
  41d984:	or     DWORD PTR [eax],eax
  41d986:	add    BYTE PTR [ecx],dh
  41d988:	or     DWORD PTR [eax],eax
  41d98a:	add    BYTE PTR [ecx],dh
  41d98c:	or     DWORD PTR [eax],eax
  41d98e:	add    BYTE PTR [ecx],dh
  41d990:	or     DWORD PTR [eax],eax
  41d992:	add    BYTE PTR [ecx],dh
  41d994:	or     DWORD PTR [eax],eax
  41d996:	add    BYTE PTR [ecx],dh
  41d998:	or     DWORD PTR [eax],eax
  41d99a:	add    BYTE PTR [ecx],dh
  41d99c:	or     DWORD PTR [eax],eax
  41d99e:	add    BYTE PTR [ecx],dh
  41d9a0:	or     DWORD PTR [eax],eax
  41d9a2:	add    BYTE PTR [ecx],dh
  41d9a4:	or     DWORD PTR [eax],eax
  41d9a6:	add    BYTE PTR [ecx],dh
  41d9a8:	or     DWORD PTR [eax],eax
  41d9aa:	add    BYTE PTR [ecx],dh
  41d9ac:	or     DWORD PTR [eax],eax
  41d9ae:	add    BYTE PTR [eax],al
  41d9b0:	xor    DWORD PTR [ecx],ecx
  41d9b2:	add    BYTE PTR [eax],al
  41d9b4:	xor    DWORD PTR [ecx],ecx
  41d9b6:	add    BYTE PTR [eax],al
  41d9b8:	xor    DWORD PTR [ecx],ecx
  41d9ba:	add    BYTE PTR [eax],al
  41d9bc:	xor    DWORD PTR [ecx],ecx
  41d9be:	add    BYTE PTR [eax],al
  41d9c0:	xor    DWORD PTR [ecx],ecx
  41d9c2:	add    BYTE PTR [eax],al
  41d9c4:	xor    DWORD PTR [ecx],ecx
  41d9c6:	add    BYTE PTR [eax],al
  41d9c8:	xor    DWORD PTR [ecx],ecx
  41d9ca:	add    BYTE PTR [eax],al
  41d9cc:	xor    DWORD PTR [ecx],ecx
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	xor    DWORD PTR [ecx],ecx
  41d9d2:	add    BYTE PTR [eax],al
  41d9d4:	xor    DWORD PTR [ecx],ecx
  41d9d6:	add    BYTE PTR [eax],al
  41d9d8:	xor    DWORD PTR [ecx],ecx
  41d9da:	add    BYTE PTR [eax],al
  41d9dc:	xor    DWORD PTR [ecx],ecx
  41d9de:	add    BYTE PTR [eax],al
  41d9e0:	xor    DWORD PTR [ecx],ecx
  41d9e2:	add    BYTE PTR [eax],al
  41d9e4:	xor    DWORD PTR [ecx],ecx
  41d9e6:	add    BYTE PTR [eax],al
  41d9e8:	xor    DWORD PTR [ecx],ecx
  41d9ea:	add    BYTE PTR [eax],al
  41d9ec:	xor    DWORD PTR [ecx],ecx
  41d9ee:	add    BYTE PTR [eax],al
  41d9f0:	xor    DWORD PTR [ecx],ecx
  41d9f2:	add    BYTE PTR [eax],al
  41d9f4:	xor    DWORD PTR [ecx],ecx
  41d9f6:	add    BYTE PTR [eax],al
  41d9f8:	xor    DWORD PTR [ecx],ecx
  41d9fa:	add    BYTE PTR [eax],al
  41d9fc:	xor    DWORD PTR [ecx],ecx
  41d9fe:	add    BYTE PTR [eax],al
  41da00:	xor    DWORD PTR [ecx],ecx
  41da02:	add    BYTE PTR [eax],al
  41da04:	xor    DWORD PTR [ecx],ecx
  41da06:	add    BYTE PTR [eax],al
  41da08:	xor    DWORD PTR [ecx],ecx
  41da0a:	add    BYTE PTR [eax],al
  41da0c:	xor    DWORD PTR [ecx],ecx
  41da0e:	add    BYTE PTR [eax],al
  41da10:	xor    DWORD PTR [ecx],ecx
  41da12:	add    BYTE PTR [eax],al
  41da14:	add    bh,bh
  41da16:	and    eax,0x427d84
  41da1b:	jmp    DWORD PTR ds:0x427d88
  41da21:	jmp    DWORD PTR ds:0x427d8c
  41da27:	jmp    DWORD PTR ds:0x427d90
  41da2d:	jmp    DWORD PTR ds:0x427d94
  41da33:	jmp    DWORD PTR ds:0x427d98
  41da39:	jmp    DWORD PTR ds:0x427d9c
  41da3f:	jmp    DWORD PTR ds:0x427da4
  41da45:	jmp    DWORD PTR ds:0x427da8
