
97498bc8fd5b9fb99c1ae35430002779669bb0862fa155dfdaafab0e73198c65.exe:     file format pei-i386


Disassembly of section .text:

64001000 <.text>:
64001000:	mov    DWORD PTR [ecx],0x64022304
64001006:	jmp    0x6401053b
6400100b:	int3   
6400100c:	int3   
6400100d:	int3   
6400100e:	int3   
6400100f:	int3   
64001010:	push   esi
64001011:	mov    esi,ecx
64001013:	mov    DWORD PTR [esi],0x64022304
64001019:	call   0x6401053b
6400101e:	test   BYTE PTR [esp+0x8],0x1
64001023:	je     0x6400102e
64001025:	push   esi
64001026:	call   0x64010422
6400102b:	add    esp,0x4
6400102e:	mov    eax,esi
64001030:	pop    esi
64001031:	ret    0x4
64001034:	int3   
64001035:	int3   
64001036:	int3   
64001037:	int3   
64001038:	int3   
64001039:	int3   
6400103a:	int3   
6400103b:	int3   
6400103c:	int3   
6400103d:	int3   
6400103e:	int3   
6400103f:	int3   
64001040:	mov    eax,DWORD PTR [esp+0x4]
64001044:	push   0x64026e54
64001049:	lea    ecx,[esp+0x8]
6400104d:	push   ecx
6400104e:	mov    DWORD PTR [esp+0xc],eax
64001052:	call   0x6401080d
64001057:	int3   
64001058:	int3   
64001059:	int3   
6400105a:	int3   
6400105b:	int3   
6400105c:	int3   
6400105d:	int3   
6400105e:	int3   
6400105f:	int3   
64001060:	push   ecx
64001061:	push   ebx
64001062:	push   esi
64001063:	push   edi
64001064:	push   0x2710
64001069:	call   DWORD PTR ds:0x64022050
6400106f:	mov    esi,DWORD PTR [esp+0x14]
64001073:	mov    ebx,DWORD PTR ds:0x64022084
64001079:	mov    DWORD PTR [esp+0xc],0x0
64001081:	xor    edi,edi
64001083:	push   0x0
64001085:	lea    eax,[esp+0x18]
64001089:	push   eax
6400108a:	push   0x4
6400108c:	lea    ecx,[esp+0x18]
64001090:	push   ecx
64001091:	push   esi
64001092:	call   ebx
64001094:	test   eax,eax
64001096:	je     0x640010a0
64001098:	add    edi,0x1
6400109b:	cmp    edi,0xa
6400109e:	jne    0x64001083
640010a0:	test   esi,esi
640010a2:	je     0x640010ba
640010a4:	call   DWORD PTR ds:0x64022044
640010aa:	push   esi
640010ab:	mov    edi,eax
640010ad:	call   DWORD PTR ds:0x64022040
640010b3:	push   edi
640010b4:	call   DWORD PTR ds:0x64022060
640010ba:	pop    edi
640010bb:	pop    esi
640010bc:	xor    eax,eax
640010be:	pop    ebx
640010bf:	pop    ecx
640010c0:	ret    0x4
640010c3:	int3   
640010c4:	int3   
640010c5:	int3   
640010c6:	int3   
640010c7:	int3   
640010c8:	int3   
640010c9:	int3   
640010ca:	int3   
640010cb:	int3   
640010cc:	int3   
640010cd:	int3   
640010ce:	int3   
640010cf:	int3   
640010d0:	sub    esp,0x14
640010d3:	push   ebx
640010d4:	mov    ebx,DWORD PTR ds:0x64022048
640010da:	push   esi
640010db:	mov    esi,DWORD PTR [esp+0x20]
640010df:	push   edi
640010e0:	mov    edi,DWORD PTR [esi+0xc]
640010e3:	push   0x2
640010e5:	push   0x0
640010e7:	push   0x0
640010e9:	lea    eax,[esp+0x18]
640010ed:	push   eax
640010ee:	mov    DWORD PTR [esp+0x1c],0x0
640010f6:	call   ebx
640010f8:	push   eax
640010f9:	push   edi
640010fa:	call   ebx
640010fc:	push   eax
640010fd:	call   DWORD PTR ds:0x64022078
64001103:	test   eax,eax
64001105:	je     0x64001199
6400110b:	mov    ecx,DWORD PTR [esp+0xc]
6400110f:	push   0x0
64001111:	push   0x0
64001113:	push   ecx
64001114:	push   0x64001060
64001119:	push   0x0
6400111b:	push   0x0
6400111d:	call   DWORD PTR ds:0x6402206c
64001123:	push   0x0
64001125:	lea    edx,[esp+0x18]
64001129:	push   edx
6400112a:	push   0x4
6400112c:	mov    edi,eax
6400112e:	mov    eax,DWORD PTR [esi+0x8]
64001131:	lea    ecx,[esp+0x30]
64001135:	push   ecx
64001136:	push   eax
64001137:	mov    DWORD PTR [esp+0x24],edi
6400113b:	mov    DWORD PTR [esp+0x38],0x0
64001143:	call   DWORD PTR ds:0x64022088
64001149:	test   eax,eax
6400114b:	je     0x6400117f
6400114d:	cmp    DWORD PTR [esp+0x14],0x4
64001152:	jne    0x6400117f
64001154:	mov    edx,DWORD PTR [esp+0x24]
64001158:	mov    eax,DWORD PTR [esi+0x4]
6400115b:	push   0x0
6400115d:	lea    ecx,[esp+0x20]
64001161:	push   ecx
64001162:	mov    DWORD PTR [esp+0x20],edx
64001166:	push   0x4
64001168:	lea    edx,[esp+0x24]
6400116c:	push   edx
6400116d:	push   eax
6400116e:	call   DWORD PTR ds:0x64022084
64001174:	lea    ecx,[esp+0x10]
64001178:	call   0x640016a0
6400117d:	jmp    0x64001199
6400117f:	test   edi,edi
64001181:	je     0x64001199
64001183:	call   DWORD PTR ds:0x64022044
64001189:	push   edi
6400118a:	mov    ebx,eax
6400118c:	call   DWORD PTR ds:0x64022040
64001192:	push   ebx
64001193:	call   DWORD PTR ds:0x64022060
64001199:	call   0x640016f0
6400119e:	push   esi
6400119f:	call   0x64010422
640011a4:	add    esp,0x4
640011a7:	pop    edi
640011a8:	pop    esi
640011a9:	xor    eax,eax
640011ab:	pop    ebx
640011ac:	add    esp,0x14
640011af:	ret    0x4
640011b2:	int3   
640011b3:	int3   
640011b4:	int3   
640011b5:	int3   
640011b6:	int3   
640011b7:	int3   
640011b8:	int3   
640011b9:	int3   
640011ba:	int3   
640011bb:	int3   
640011bc:	int3   
640011bd:	int3   
640011be:	int3   
640011bf:	int3   
640011c0:	push   0xffffffff
640011c2:	push   0x640209b9
640011c7:	mov    eax,fs:0x0
640011cd:	push   eax
640011ce:	sub    esp,0x30
640011d1:	mov    eax,ds:0x64029038
640011d6:	xor    eax,esp
640011d8:	mov    DWORD PTR [esp+0x2c],eax
640011dc:	push   ebx
640011dd:	push   ebp
640011de:	push   esi
640011df:	push   edi
640011e0:	mov    eax,ds:0x64029038
640011e5:	xor    eax,esp
640011e7:	push   eax
640011e8:	lea    eax,[esp+0x44]
640011ec:	mov    fs:0x0,eax
640011f2:	mov    esi,ecx
640011f4:	xor    ebx,ebx
640011f6:	mov    DWORD PTR [esp+0x1c],ebx
640011fa:	mov    edi,edx
640011fc:	mov    DWORD PTR [esi+0x18],0xf
64001203:	mov    DWORD PTR [esi+0x14],ebx
64001206:	mov    DWORD PTR [esp+0x20],esi
6400120a:	mov    DWORD PTR [esp+0x18],edi
6400120e:	mov    BYTE PTR [esi+0x4],bl
64001211:	mov    DWORD PTR [esp+0x4c],ebx
64001215:	mov    ebp,0x1
6400121a:	mov    DWORD PTR [esp+0x1c],ebp
6400121e:	call   DWORD PTR ds:0x64022080
64001224:	xor    ecx,ecx
64001226:	cmp    ecx,ebx
64001228:	jle    0x64001237
6400122a:	cmp    WORD PTR [eax+ecx*2-0x2],bx
6400122f:	jne    0x64001237
64001231:	cmp    WORD PTR [eax+ecx*2],bx
64001235:	je     0x6400123b
64001237:	add    ecx,ebp
64001239:	jmp    0x64001226
6400123b:	add    ecx,ecx
6400123d:	push   ecx
6400123e:	push   eax
6400123f:	lea    ecx,[esp+0x2c]
64001243:	mov    DWORD PTR [esp+0x44],0xf
6400124b:	mov    DWORD PTR [esp+0x40],ebx
6400124f:	mov    BYTE PTR [esp+0x30],bl
64001253:	call   0x64001880
64001258:	push   ebx
64001259:	lea    edx,[esp+0x28]
6400125d:	push   edx
6400125e:	or     eax,0xffffffff
64001261:	mov    DWORD PTR [esp+0x54],ebp
64001265:	call   0x640019d0
6400126a:	mov    BYTE PTR [esp+0x4c],bl
6400126e:	cmp    DWORD PTR [esp+0x3c],0x10
64001273:	jb     0x64001282
64001275:	mov    eax,DWORD PTR [esp+0x28]
64001279:	push   eax
6400127a:	call   0x64010422
6400127f:	add    esp,0x4
64001282:	mov    edx,DWORD PTR ds:0x6402a4e0
64001288:	mov    eax,DWORD PTR [edx+0xc]
6400128b:	mov    ecx,0x6402a4e0
64001290:	call   eax
64001292:	add    eax,0x10
64001295:	mov    DWORD PTR [esp+0x14],eax
64001299:	mov    DWORD PTR [esp+0x4c],0x2
640012a1:	mov    eax,DWORD PTR [edi]
640012a3:	push   eax
640012a4:	lea    ecx,[esp+0x18]
640012a8:	push   0x64024574
640012ad:	push   ecx
640012ae:	call   0x64001d40
640012b3:	mov    edi,DWORD PTR [esp+0x20]
640012b7:	mov    ebp,DWORD PTR [edi-0xc]
640012ba:	add    esp,0xc
640012bd:	cmp    DWORD PTR [edi-0x4],0x1
640012c1:	jle    0x640012d3
640012c3:	mov    edx,ebp
640012c5:	push   edx
640012c6:	lea    ecx,[esp+0x18]
640012ca:	call   0x64001950
640012cf:	mov    edi,DWORD PTR [esp+0x14]
640012d3:	lea    eax,[ebp+ebp*1+0x2]
640012d7:	push   eax
640012d8:	push   edi
640012d9:	lea    ecx,[esp+0x2c]
640012dd:	mov    DWORD PTR [esp+0x44],0xf
640012e5:	mov    DWORD PTR [esp+0x40],ebx
640012e9:	mov    BYTE PTR [esp+0x30],bl
640012ed:	call   0x64001880
640012f2:	push   ebx
640012f3:	lea    ecx,[esp+0x28]
640012f7:	push   ecx
640012f8:	or     eax,0xffffffff
640012fb:	mov    BYTE PTR [esp+0x54],0x3
64001300:	call   0x640019d0
64001305:	cmp    DWORD PTR [esp+0x3c],0x10
6400130a:	jb     0x64001319
6400130c:	mov    edx,DWORD PTR [esp+0x28]
64001310:	push   edx
64001311:	call   0x64010422
64001316:	add    esp,0x4
64001319:	add    edi,0xfffffff0
6400131c:	mov    DWORD PTR [esp+0x3c],0xf
64001324:	mov    DWORD PTR [esp+0x38],ebx
64001328:	mov    BYTE PTR [esp+0x28],bl
6400132c:	mov    BYTE PTR [esp+0x4c],bl
64001330:	lea    eax,[edi+0xc]
64001333:	or     ecx,0xffffffff
64001336:	lock xadd DWORD PTR [eax],ecx
6400133a:	dec    ecx
6400133b:	test   ecx,ecx
6400133d:	jg     0x64001349
6400133f:	mov    ecx,DWORD PTR [edi]
64001341:	mov    edx,DWORD PTR [ecx]
64001343:	mov    eax,DWORD PTR [edx+0x4]
64001346:	push   edi
64001347:	call   eax
64001349:	mov    edx,DWORD PTR ds:0x6402a4e0
6400134f:	mov    eax,DWORD PTR [edx+0xc]
64001352:	mov    ecx,0x6402a4e0
64001357:	call   eax
64001359:	add    eax,0x10
6400135c:	mov    DWORD PTR [esp+0x14],eax
64001360:	mov    ecx,DWORD PTR [esp+0x18]
64001364:	mov    DWORD PTR [esp+0x4c],0x4
6400136c:	mov    eax,DWORD PTR [ecx+0xc]
6400136f:	push   eax
64001370:	lea    edx,[esp+0x18]
64001374:	push   0x64024580
64001379:	push   edx
6400137a:	call   0x64001d40
6400137f:	mov    edi,DWORD PTR [esp+0x20]
64001383:	mov    ebp,DWORD PTR [edi-0xc]
64001386:	add    esp,0xc
64001389:	cmp    DWORD PTR [edi-0x4],0x1
6400138d:	jle    0x6400139f
6400138f:	mov    eax,ebp
64001391:	push   eax
64001392:	lea    ecx,[esp+0x18]
64001396:	call   0x64001950
6400139b:	mov    edi,DWORD PTR [esp+0x14]
6400139f:	lea    ecx,[ebp+ebp*1+0x2]
640013a3:	push   ecx
640013a4:	push   edi
640013a5:	lea    ecx,[esp+0x2c]
640013a9:	mov    DWORD PTR [esp+0x44],0xf
640013b1:	mov    DWORD PTR [esp+0x40],ebx
640013b5:	mov    BYTE PTR [esp+0x30],bl
640013b9:	call   0x64001880
640013be:	push   ebx
640013bf:	lea    edx,[esp+0x28]
640013c3:	push   edx
640013c4:	or     eax,0xffffffff
640013c7:	mov    BYTE PTR [esp+0x54],0x5
640013cc:	call   0x640019d0
640013d1:	cmp    DWORD PTR [esp+0x3c],0x10
640013d6:	jb     0x640013e5
640013d8:	mov    eax,DWORD PTR [esp+0x28]
640013dc:	push   eax
640013dd:	call   0x64010422
640013e2:	add    esp,0x4
640013e5:	mov    ebp,0xf
640013ea:	add    edi,0xfffffff0
640013ed:	mov    DWORD PTR [esp+0x3c],ebp
640013f1:	mov    DWORD PTR [esp+0x38],ebx
640013f5:	mov    BYTE PTR [esp+0x28],bl
640013f9:	mov    BYTE PTR [esp+0x4c],bl
640013fd:	lea    ecx,[edi+0xc]
64001400:	or     edx,0xffffffff
64001403:	lock xadd DWORD PTR [ecx],edx
64001407:	dec    edx
64001408:	test   edx,edx
6400140a:	jg     0x64001416
6400140c:	mov    ecx,DWORD PTR [edi]
6400140e:	mov    eax,DWORD PTR [ecx]
64001410:	mov    edx,DWORD PTR [eax+0x4]
64001413:	push   edi
64001414:	call   edx
64001416:	push   0x2
64001418:	push   0x6402458c
6400141d:	lea    eax,[esp+0x30]
64001421:	push   ebp
64001422:	push   eax
64001423:	mov    DWORD PTR [esp+0x4c],ebp
64001427:	mov    DWORD PTR [esp+0x48],ebx
6400142b:	mov    BYTE PTR [esp+0x38],bl
6400142f:	call   0x6401057a
64001434:	mov    eax,DWORD PTR [esp+0x38]
64001438:	mov    edi,0x10
6400143d:	add    esp,0x10
64001440:	cmp    DWORD PTR [esp+0x3c],edi
64001444:	mov    DWORD PTR [esp+0x38],0x2
6400144c:	jae    0x64001452
6400144e:	lea    eax,[esp+0x28]
64001452:	mov    BYTE PTR [eax+0x2],bl
64001455:	push   ebx
64001456:	lea    ecx,[esp+0x28]
6400145a:	push   ecx
6400145b:	or     eax,0xffffffff
6400145e:	mov    DWORD PTR [esp+0x54],0x6
64001466:	call   0x640019d0
6400146b:	cmp    DWORD PTR [esp+0x3c],edi
6400146f:	jb     0x6400147e
64001471:	mov    edx,DWORD PTR [esp+0x28]
64001475:	push   edx
64001476:	call   0x64010422
6400147b:	add    esp,0x4
6400147e:	mov    eax,esi
64001480:	mov    ecx,DWORD PTR [esp+0x44]
64001484:	mov    DWORD PTR fs:0x0,ecx
6400148b:	pop    ecx
6400148c:	pop    edi
6400148d:	pop    esi
6400148e:	pop    ebp
6400148f:	pop    ebx
64001490:	mov    ecx,DWORD PTR [esp+0x2c]
64001494:	xor    ecx,esp
64001496:	call   0x64010c1e
6400149b:	add    esp,0x3c
6400149e:	ret    
6400149f:	int3   
640014a0:	push   0xffffffff
640014a2:	push   0x64020ac8
640014a7:	mov    eax,fs:0x0
640014ad:	push   eax
640014ae:	sub    esp,0x24
640014b1:	push   ebx
640014b2:	push   ebp
640014b3:	push   esi
640014b4:	push   edi
640014b5:	mov    eax,ds:0x64029038
640014ba:	xor    eax,esp
640014bc:	push   eax
640014bd:	lea    eax,[esp+0x38]
640014c1:	mov    fs:0x0,eax
640014c7:	mov    eax,DWORD PTR [esp+0x48]
640014cb:	xor    edi,edi
640014cd:	push   0x10
640014cf:	mov    DWORD PTR [esp+0x28],eax
640014d3:	mov    DWORD PTR [esp+0x18],edi
640014d7:	call   0x640107a3
640014dc:	add    esp,0x4
640014df:	cmp    eax,edi
640014e1:	je     0x640014f2
640014e3:	mov    DWORD PTR [eax],edi
640014e5:	mov    DWORD PTR [eax+0x4],edi
640014e8:	mov    DWORD PTR [eax+0x8],edi
640014eb:	mov    DWORD PTR [eax+0xc],edi
640014ee:	mov    esi,eax
640014f0:	jmp    0x640014f4
640014f2:	xor    esi,esi
640014f4:	mov    DWORD PTR [esp+0x34],esi
640014f8:	push   edi
640014f9:	lea    ecx,[esp+0x2c]
640014fd:	push   ecx
640014fe:	mov    DWORD PTR [esp+0x48],edi
64001502:	lea    edx,[esp+0x24]
64001506:	push   edx
64001507:	lea    eax,[esp+0x2c]
6400150b:	push   eax
6400150c:	mov    DWORD PTR [esp+0x38],0xc
64001514:	mov    DWORD PTR [esp+0x40],0x1
6400151c:	mov    DWORD PTR [esp+0x3c],edi
64001520:	mov    DWORD PTR [esp+0x30],edi
64001524:	mov    DWORD PTR [esp+0x2c],edi
64001528:	call   DWORD PTR ds:0x6402207c
6400152e:	test   eax,eax
64001530:	mov    ebx,DWORD PTR ds:0x64022044
64001536:	mov    ebp,DWORD PTR ds:0x64022040
6400153c:	je     0x64001594
6400153e:	mov    edi,DWORD PTR [esi+0x8]
64001541:	test   edi,edi
64001543:	mov    ecx,DWORD PTR [esp+0x20]
64001547:	mov    DWORD PTR [esp+0x14],ecx
6400154b:	je     0x64001561
6400154d:	call   ebx
6400154f:	push   edi
64001550:	mov    DWORD PTR [esp+0x1c],eax
64001554:	call   ebp
64001556:	mov    edx,DWORD PTR [esp+0x18]
6400155a:	push   edx
6400155b:	call   DWORD PTR ds:0x64022060
64001561:	mov    eax,DWORD PTR [esp+0x14]
64001565:	mov    DWORD PTR [esi+0x8],eax
64001568:	mov    edi,DWORD PTR [esi+0xc]
6400156b:	test   edi,edi
6400156d:	mov    ecx,DWORD PTR [esp+0x1c]
64001571:	mov    DWORD PTR [esp+0x18],ecx
64001575:	je     0x6400158b
64001577:	call   ebx
64001579:	push   edi
6400157a:	mov    DWORD PTR [esp+0x18],eax
6400157e:	call   ebp
64001580:	mov    edx,DWORD PTR [esp+0x14]
64001584:	push   edx
64001585:	call   DWORD PTR ds:0x64022060
6400158b:	mov    eax,DWORD PTR [esp+0x18]
6400158f:	mov    DWORD PTR [esi+0xc],eax
64001592:	xor    edi,edi
64001594:	push   edi
64001595:	lea    ecx,[esp+0x2c]
64001599:	push   ecx
6400159a:	lea    edx,[esp+0x24]
6400159e:	push   edx
6400159f:	lea    eax,[esp+0x2c]
640015a3:	push   eax
640015a4:	call   DWORD PTR ds:0x6402207c
640015aa:	test   eax,eax
640015ac:	je     0x64001602
640015ae:	mov    edi,DWORD PTR [esi]
640015b0:	test   edi,edi
640015b2:	mov    ecx,DWORD PTR [esp+0x20]
640015b6:	mov    DWORD PTR [esp+0x18],ecx
640015ba:	je     0x640015d0
640015bc:	call   ebx
640015be:	push   edi
640015bf:	mov    DWORD PTR [esp+0x18],eax
640015c3:	call   ebp
640015c5:	mov    edx,DWORD PTR [esp+0x14]
640015c9:	push   edx
640015ca:	call   DWORD PTR ds:0x64022060
640015d0:	mov    eax,DWORD PTR [esp+0x18]
640015d4:	mov    DWORD PTR [esi],eax
640015d6:	mov    edi,DWORD PTR [esi+0x4]
640015d9:	test   edi,edi
640015db:	mov    ecx,DWORD PTR [esp+0x1c]
640015df:	mov    DWORD PTR [esp+0x18],ecx
640015e3:	je     0x640015f9
640015e5:	call   ebx
640015e7:	push   edi
640015e8:	mov    DWORD PTR [esp+0x18],eax
640015ec:	call   ebp
640015ee:	mov    edx,DWORD PTR [esp+0x14]
640015f2:	push   edx
640015f3:	call   DWORD PTR ds:0x64022060
640015f9:	mov    eax,DWORD PTR [esp+0x18]
640015fd:	mov    DWORD PTR [esi+0x4],eax
64001600:	xor    edi,edi
64001602:	mov    ecx,DWORD PTR [esp+0x24]
64001606:	mov    edx,esi
64001608:	call   0x640011c0
6400160d:	push   edi
6400160e:	push   edi
6400160f:	push   esi
64001610:	push   0x640010d0
64001615:	push   edi
64001616:	push   edi
64001617:	call   DWORD PTR ds:0x6402206c
6400161d:	mov    esi,eax
6400161f:	cmp    esi,edi
64001621:	je     0x64001631
64001623:	call   ebx
64001625:	push   esi
64001626:	mov    edi,eax
64001628:	call   ebp
6400162a:	push   edi
6400162b:	call   DWORD PTR ds:0x64022060
64001631:	mov    eax,DWORD PTR [esp+0x24]
64001635:	mov    ecx,DWORD PTR [esp+0x38]
64001639:	mov    DWORD PTR fs:0x0,ecx
64001640:	pop    ecx
64001641:	pop    edi
64001642:	pop    esi
64001643:	pop    ebp
64001644:	pop    ebx
64001645:	add    esp,0x30
64001648:	ret    
64001649:	int3   
6400164a:	int3   
6400164b:	int3   
6400164c:	int3   
6400164d:	int3   
6400164e:	int3   
6400164f:	int3   
64001650:	push   esi
64001651:	mov    esi,ecx
64001653:	cmp    DWORD PTR [esi+0x18],0x10
64001657:	jb     0x64001665
64001659:	mov    eax,DWORD PTR [esi+0x4]
6400165c:	push   eax
6400165d:	call   0x64010422
64001662:	add    esp,0x4
64001665:	xor    eax,eax
64001667:	mov    DWORD PTR [esi+0x18],0xf
6400166e:	mov    DWORD PTR [esi+0x14],eax
64001671:	mov    BYTE PTR [esi+0x4],al
64001674:	pop    esi
64001675:	ret    
64001676:	int3   
64001677:	int3   
64001678:	int3   
64001679:	int3   
6400167a:	int3   
6400167b:	int3   
6400167c:	int3   
6400167d:	int3   
6400167e:	int3   
6400167f:	int3   
64001680:	mov    eax,DWORD PTR [ecx]
64001682:	sub    eax,0x10
64001685:	lea    ecx,[eax+0xc]
64001688:	or     edx,0xffffffff
6400168b:	lock xadd DWORD PTR [ecx],edx
6400168f:	dec    edx
64001690:	test   edx,edx
64001692:	jg     0x6400169e
64001694:	mov    ecx,DWORD PTR [eax]
64001696:	mov    edx,DWORD PTR [ecx]
64001698:	push   eax
64001699:	mov    eax,DWORD PTR [edx+0x4]
6400169c:	call   eax
6400169e:	ret    
6400169f:	int3   
640016a0:	push   esi
640016a1:	mov    esi,ecx
640016a3:	push   edi
640016a4:	mov    edi,DWORD PTR [esi]
640016a6:	test   edi,edi
640016a8:	je     0x640016c2
640016aa:	push   ebx
640016ab:	call   DWORD PTR ds:0x64022044
640016b1:	push   edi
640016b2:	mov    ebx,eax
640016b4:	call   DWORD PTR ds:0x64022040
640016ba:	push   ebx
640016bb:	call   DWORD PTR ds:0x64022060
640016c1:	pop    ebx
640016c2:	pop    edi
640016c3:	mov    DWORD PTR [esi],0x0
640016c9:	pop    esi
640016ca:	ret    
640016cb:	int3   
640016cc:	int3   
640016cd:	int3   
640016ce:	int3   
640016cf:	int3   
640016d0:	push   esi
640016d1:	mov    esi,DWORD PTR [eax]
640016d3:	test   esi,esi
640016d5:	je     0x640016e5
640016d7:	call   0x640016f0
640016dc:	push   esi
640016dd:	call   0x64010422
640016e2:	add    esp,0x4
640016e5:	pop    esi
640016e6:	ret    
640016e7:	int3   
640016e8:	int3   
640016e9:	int3   
640016ea:	int3   
640016eb:	int3   
640016ec:	int3   
640016ed:	int3   
640016ee:	int3   
640016ef:	int3   
640016f0:	sub    esp,0x8
640016f3:	mov    eax,DWORD PTR [esi+0xc]
640016f6:	test   eax,eax
640016f8:	push   ebx
640016f9:	mov    ebx,DWORD PTR ds:0x64022040
640016ff:	push   ebp
64001700:	mov    ebp,DWORD PTR ds:0x64022060
64001706:	push   edi
64001707:	mov    edi,DWORD PTR ds:0x64022044
6400170d:	mov    DWORD PTR [esp+0xc],eax
64001711:	je     0x64001727
64001713:	call   edi
64001715:	mov    DWORD PTR [esp+0x10],eax
64001719:	mov    eax,DWORD PTR [esp+0xc]
6400171d:	push   eax
6400171e:	call   ebx
64001720:	mov    ecx,DWORD PTR [esp+0x10]
64001724:	push   ecx
64001725:	call   ebp
64001727:	mov    DWORD PTR [esi+0xc],0x0
6400172e:	mov    eax,DWORD PTR [esi+0x8]
64001731:	test   eax,eax
64001733:	mov    DWORD PTR [esp+0x10],eax
64001737:	je     0x6400174d
64001739:	call   edi
6400173b:	mov    edx,DWORD PTR [esp+0x10]
6400173f:	push   edx
64001740:	mov    DWORD PTR [esp+0x10],eax
64001744:	call   ebx
64001746:	mov    eax,DWORD PTR [esp+0xc]
6400174a:	push   eax
6400174b:	call   ebp
6400174d:	mov    DWORD PTR [esi+0x8],0x0
64001754:	mov    eax,DWORD PTR [esi+0x4]
64001757:	test   eax,eax
64001759:	mov    DWORD PTR [esp+0x10],eax
6400175d:	je     0x64001773
6400175f:	call   edi
64001761:	mov    ecx,DWORD PTR [esp+0x10]
64001765:	push   ecx
64001766:	mov    DWORD PTR [esp+0x10],eax
6400176a:	call   ebx
6400176c:	mov    edx,DWORD PTR [esp+0xc]
64001770:	push   edx
64001771:	call   ebp
64001773:	mov    DWORD PTR [esi+0x4],0x0
6400177a:	mov    eax,DWORD PTR [esi]
6400177c:	test   eax,eax
6400177e:	mov    DWORD PTR [esp+0x10],eax
64001782:	je     0x64001792
64001784:	call   edi
64001786:	mov    edi,eax
64001788:	mov    eax,DWORD PTR [esp+0x10]
6400178c:	push   eax
6400178d:	call   ebx
6400178f:	push   edi
64001790:	call   ebp
64001792:	pop    edi
64001793:	pop    ebp
64001794:	mov    DWORD PTR [esi],0x0
6400179a:	pop    ebx
6400179b:	add    esp,0x8
6400179e:	ret    
6400179f:	int3   
640017a0:	push   ebx
640017a1:	mov    ebx,DWORD PTR [esp+0x8]
640017a5:	push   ebp
640017a6:	mov    ebp,DWORD PTR [esp+0x10]
640017aa:	cmp    DWORD PTR [ebx+0x14],ebp
640017ad:	push   esi
640017ae:	push   edi
640017af:	mov    esi,ecx
640017b1:	jae    0x640017b8
640017b3:	call   0x640103de
640017b8:	mov    edi,DWORD PTR [ebx+0x14]
640017bb:	mov    eax,DWORD PTR [esp+0x1c]
640017bf:	sub    edi,ebp
640017c1:	cmp    eax,edi
640017c3:	jae    0x640017c7
640017c5:	mov    edi,eax
640017c7:	cmp    esi,ebx
640017c9:	jne    0x640017ea
640017cb:	push   0xffffffff
640017cd:	add    edi,ebp
640017cf:	push   edi
640017d0:	mov    ecx,esi
640017d2:	call   0x64001ac0
640017d7:	push   ebp
640017d8:	push   0x0
640017da:	mov    ecx,esi
640017dc:	call   0x64001ac0
640017e1:	pop    edi
640017e2:	mov    eax,esi
640017e4:	pop    esi
640017e5:	pop    ebp
640017e6:	pop    ebx
640017e7:	ret    0xc
640017ea:	cmp    edi,0xfffffffe
640017ed:	jbe    0x640017f4
640017ef:	call   0x6401039f
640017f4:	mov    eax,DWORD PTR [esi+0x18]
640017f7:	cmp    eax,edi
640017f9:	jae    0x64001816
640017fb:	mov    eax,DWORD PTR [esi+0x14]
640017fe:	push   eax
640017ff:	push   edi
64001800:	mov    ecx,esi
64001802:	call   0x64001b60
64001807:	test   edi,edi
64001809:	jbe    0x64001871
6400180b:	cmp    DWORD PTR [ebx+0x18],0x10
6400180f:	jb     0x64001840
64001811:	mov    edx,DWORD PTR [ebx+0x4]
64001814:	jmp    0x64001843
64001816:	test   edi,edi
64001818:	jne    0x64001809
6400181a:	cmp    eax,0x10
6400181d:	mov    DWORD PTR [esi+0x14],edi
64001820:	jb     0x64001831
64001822:	mov    eax,DWORD PTR [esi+0x4]
64001825:	pop    edi
64001826:	mov    BYTE PTR [eax],0x0
64001829:	mov    eax,esi
6400182b:	pop    esi
6400182c:	pop    ebp
6400182d:	pop    ebx
6400182e:	ret    0xc
64001831:	lea    eax,[esi+0x4]
64001834:	pop    edi
64001835:	mov    BYTE PTR [eax],0x0
64001838:	mov    eax,esi
6400183a:	pop    esi
6400183b:	pop    ebp
6400183c:	pop    ebx
6400183d:	ret    0xc
64001840:	lea    edx,[ebx+0x4]
64001843:	mov    ecx,DWORD PTR [esi+0x18]
64001846:	cmp    ecx,0x10
64001849:	lea    ebx,[esi+0x4]
6400184c:	jb     0x64001852
6400184e:	mov    eax,DWORD PTR [ebx]
64001850:	jmp    0x64001854
64001852:	mov    eax,ebx
64001854:	push   edi
64001855:	add    edx,ebp
64001857:	push   edx
64001858:	push   ecx
64001859:	push   eax
6400185a:	call   0x6401057a
6400185f:	add    esp,0x10
64001862:	cmp    DWORD PTR [esi+0x18],0x10
64001866:	mov    DWORD PTR [esi+0x14],edi
64001869:	jb     0x6400186d
6400186b:	mov    ebx,DWORD PTR [ebx]
6400186d:	mov    BYTE PTR [ebx+edi*1],0x0
64001871:	pop    edi
64001872:	mov    eax,esi
64001874:	pop    esi
64001875:	pop    ebp
64001876:	pop    ebx
64001877:	ret    0xc
6400187a:	int3   
6400187b:	int3   
6400187c:	int3   
6400187d:	int3   
6400187e:	int3   
6400187f:	int3   
64001880:	push   ebx
64001881:	push   ebp
64001882:	push   esi
64001883:	mov    esi,ecx
64001885:	mov    ecx,DWORD PTR [esi+0x18]
64001888:	cmp    ecx,0x10
6400188b:	lea    ebx,[esi+0x4]
6400188e:	jb     0x64001894
64001890:	mov    eax,DWORD PTR [ebx]
64001892:	jmp    0x64001896
64001894:	mov    eax,ebx
64001896:	mov    ebp,DWORD PTR [esp+0x10]
6400189a:	cmp    ebp,eax
6400189c:	jb     0x640018cf
6400189e:	cmp    ecx,0x10
640018a1:	jb     0x640018a7
640018a3:	mov    eax,DWORD PTR [ebx]
640018a5:	jmp    0x640018a9
640018a7:	mov    eax,ebx
640018a9:	mov    edx,DWORD PTR [esi+0x14]
640018ac:	add    edx,eax
640018ae:	cmp    edx,ebp
640018b0:	jbe    0x640018cf
640018b2:	cmp    ecx,0x10
640018b5:	jb     0x640018b9
640018b7:	mov    ebx,DWORD PTR [ebx]
640018b9:	mov    eax,DWORD PTR [esp+0x14]
640018bd:	push   eax
640018be:	sub    ebp,ebx
640018c0:	push   ebp
640018c1:	push   esi
640018c2:	mov    ecx,esi
640018c4:	call   0x640017a0
640018c9:	pop    esi
640018ca:	pop    ebp
640018cb:	pop    ebx
640018cc:	ret    0x8
640018cf:	push   edi
640018d0:	mov    edi,DWORD PTR [esp+0x18]
640018d4:	cmp    edi,0xfffffffe
640018d7:	jbe    0x640018de
640018d9:	call   0x6401039f
640018de:	mov    eax,DWORD PTR [esi+0x18]
640018e1:	cmp    eax,edi
640018e3:	jae    0x64001901
640018e5:	mov    ecx,DWORD PTR [esi+0x14]
640018e8:	push   ecx
640018e9:	push   edi
640018ea:	mov    ecx,esi
640018ec:	call   0x64001b60
640018f1:	test   edi,edi
640018f3:	jbe    0x64001938
640018f5:	mov    ecx,DWORD PTR [esi+0x18]
640018f8:	cmp    ecx,0x10
640018fb:	jb     0x6400191b
640018fd:	mov    eax,DWORD PTR [ebx]
640018ff:	jmp    0x6400191d
64001901:	test   edi,edi
64001903:	jne    0x640018f3
64001905:	cmp    eax,0x10
64001908:	mov    DWORD PTR [esi+0x14],edi
6400190b:	jb     0x6400190f
6400190d:	mov    ebx,DWORD PTR [ebx]
6400190f:	pop    edi
64001910:	mov    eax,esi
64001912:	pop    esi
64001913:	pop    ebp
64001914:	mov    BYTE PTR [ebx],0x0
64001917:	pop    ebx
64001918:	ret    0x8
6400191b:	mov    eax,ebx
6400191d:	push   edi
6400191e:	push   ebp
6400191f:	push   ecx
64001920:	push   eax
64001921:	call   0x6401057a
64001926:	add    esp,0x10
64001929:	cmp    DWORD PTR [esi+0x18],0x10
6400192d:	mov    DWORD PTR [esi+0x14],edi
64001930:	jb     0x64001934
64001932:	mov    ebx,DWORD PTR [ebx]
64001934:	mov    BYTE PTR [ebx+edi*1],0x0
64001938:	pop    edi
64001939:	mov    eax,esi
6400193b:	pop    esi
6400193c:	pop    ebp
6400193d:	pop    ebx
6400193e:	ret    0x8
64001941:	int3   
64001942:	int3   
64001943:	int3   
64001944:	int3   
64001945:	int3   
64001946:	int3   
64001947:	int3   
64001948:	int3   
64001949:	int3   
6400194a:	int3   
6400194b:	int3   
6400194c:	int3   
6400194d:	int3   
6400194e:	int3   
6400194f:	int3   
64001950:	push   ecx
64001951:	push   ebx
64001952:	push   ebp
64001953:	push   esi
64001954:	mov    esi,DWORD PTR [ecx]
64001956:	mov    ebx,DWORD PTR [esi-0xc]
64001959:	sub    esi,0x10
6400195c:	mov    DWORD PTR [esp+0xc],ecx
64001960:	mov    ecx,DWORD PTR [esi]
64001962:	mov    eax,DWORD PTR [ecx]
64001964:	mov    edx,DWORD PTR [eax+0x10]
64001967:	push   edi
64001968:	call   edx
6400196a:	mov    edx,DWORD PTR [eax]
6400196c:	mov    ebp,DWORD PTR [esp+0x18]
64001970:	push   0x2
64001972:	mov    ecx,eax
64001974:	mov    eax,DWORD PTR [edx]
64001976:	push   ebp
64001977:	call   eax
64001979:	mov    edi,eax
6400197b:	test   edi,edi
6400197d:	jne    0x64001984
6400197f:	call   0x64001b50
64001984:	cmp    ebx,ebp
64001986:	jge    0x6400198a
64001988:	mov    ebp,ebx
6400198a:	lea    eax,[ebp+ebp*1+0x2]
6400198e:	push   eax
6400198f:	lea    ecx,[esi+0x10]
64001992:	push   ecx
64001993:	push   eax
64001994:	lea    ebp,[edi+0x10]
64001997:	push   ebp
64001998:	call   0x6401057a
6400199d:	add    esp,0x10
640019a0:	mov    DWORD PTR [edi+0x4],ebx
640019a3:	lea    edx,[esi+0xc]
640019a6:	or     eax,0xffffffff
640019a9:	lock xadd DWORD PTR [edx],eax
640019ad:	dec    eax
640019ae:	test   eax,eax
640019b0:	jg     0x640019bc
640019b2:	mov    ecx,DWORD PTR [esi]
640019b4:	mov    edx,DWORD PTR [ecx]
640019b6:	mov    eax,DWORD PTR [edx+0x4]
640019b9:	push   esi
640019ba:	call   eax
640019bc:	mov    ecx,DWORD PTR [esp+0x10]
640019c0:	pop    edi
640019c1:	pop    esi
640019c2:	mov    DWORD PTR [ecx],ebp
640019c4:	pop    ebp
640019c5:	pop    ebx
640019c6:	pop    ecx
640019c7:	ret    0x4
640019ca:	int3   
640019cb:	int3   
640019cc:	int3   
640019cd:	int3   
640019ce:	int3   
640019cf:	int3   
640019d0:	push   ebx
640019d1:	push   ebp
640019d2:	mov    ebp,DWORD PTR [esp+0xc]
640019d6:	push   edi
640019d7:	mov    edi,DWORD PTR [esp+0x14]
640019db:	cmp    DWORD PTR [ebp+0x14],edi
640019de:	mov    ebx,eax
640019e0:	jae    0x640019e7
640019e2:	call   0x640103de
640019e7:	mov    eax,DWORD PTR [ebp+0x14]
640019ea:	sub    eax,edi
640019ec:	cmp    eax,ebx
640019ee:	jae    0x640019f2
640019f0:	mov    ebx,eax
640019f2:	mov    eax,DWORD PTR [esi+0x14]
640019f5:	or     ecx,0xffffffff
640019f8:	sub    ecx,eax
640019fa:	cmp    ecx,ebx
640019fc:	jbe    0x64001a05
640019fe:	lea    edx,[eax+ebx*1]
64001a01:	cmp    edx,eax
64001a03:	jae    0x64001a0a
64001a05:	call   0x6401039f
64001a0a:	test   ebx,ebx
64001a0c:	jbe    0x64001ab6
64001a12:	mov    edi,DWORD PTR [esi+0x14]
64001a15:	add    edi,ebx
64001a17:	cmp    edi,0xfffffffe
64001a1a:	jbe    0x64001a21
64001a1c:	call   0x6401039f
64001a21:	mov    eax,DWORD PTR [esi+0x18]
64001a24:	cmp    eax,edi
64001a26:	jae    0x64001a43
64001a28:	mov    eax,DWORD PTR [esi+0x14]
64001a2b:	push   eax
64001a2c:	push   edi
64001a2d:	mov    ecx,esi
64001a2f:	call   0x64001b60
64001a34:	test   edi,edi
64001a36:	jbe    0x64001ab6
64001a38:	cmp    DWORD PTR [ebp+0x18],0x10
64001a3c:	jb     0x64001a6b
64001a3e:	mov    ebp,DWORD PTR [ebp+0x4]
64001a41:	jmp    0x64001a6e
64001a43:	test   edi,edi
64001a45:	jne    0x64001a36
64001a47:	cmp    eax,0x10
64001a4a:	mov    DWORD PTR [esi+0x14],edi
64001a4d:	jb     0x64001a5d
64001a4f:	mov    eax,DWORD PTR [esi+0x4]
64001a52:	pop    edi
64001a53:	pop    ebp
64001a54:	mov    BYTE PTR [eax],0x0
64001a57:	mov    eax,esi
64001a59:	pop    ebx
64001a5a:	ret    0x8
64001a5d:	pop    edi
64001a5e:	lea    eax,[esi+0x4]
64001a61:	pop    ebp
64001a62:	mov    BYTE PTR [eax],0x0
64001a65:	mov    eax,esi
64001a67:	pop    ebx
64001a68:	ret    0x8
64001a6b:	add    ebp,0x4
64001a6e:	mov    eax,DWORD PTR [esi+0x18]
64001a71:	cmp    eax,0x10
64001a74:	jb     0x64001a7b
64001a76:	mov    edx,DWORD PTR [esi+0x4]
64001a79:	jmp    0x64001a7e
64001a7b:	lea    edx,[esi+0x4]
64001a7e:	mov    ecx,DWORD PTR [esi+0x14]
64001a81:	push   ebx
64001a82:	mov    ebx,DWORD PTR [esp+0x18]
64001a86:	add    ebp,ebx
64001a88:	sub    eax,ecx
64001a8a:	push   ebp
64001a8b:	push   eax
64001a8c:	add    ecx,edx
64001a8e:	push   ecx
64001a8f:	call   0x6401057a
64001a94:	add    esp,0x10
64001a97:	cmp    DWORD PTR [esi+0x18],0x10
64001a9b:	mov    DWORD PTR [esi+0x14],edi
64001a9e:	jb     0x64001aaf
64001aa0:	mov    eax,DWORD PTR [esi+0x4]
64001aa3:	mov    BYTE PTR [eax+edi*1],0x0
64001aa7:	pop    edi
64001aa8:	pop    ebp
64001aa9:	mov    eax,esi
64001aab:	pop    ebx
64001aac:	ret    0x8
64001aaf:	lea    eax,[esi+0x4]
64001ab2:	mov    BYTE PTR [eax+edi*1],0x0
64001ab6:	pop    edi
64001ab7:	pop    ebp
64001ab8:	mov    eax,esi
64001aba:	pop    ebx
64001abb:	ret    0x8
64001abe:	int3   
64001abf:	int3   
64001ac0:	push   ebx
64001ac1:	mov    ebx,DWORD PTR [esp+0x8]
64001ac5:	push   esi
64001ac6:	mov    esi,ecx
64001ac8:	cmp    DWORD PTR [esi+0x14],ebx
64001acb:	push   edi
64001acc:	jae    0x64001ad3
64001ace:	call   0x640103de
64001ad3:	mov    eax,DWORD PTR [esi+0x14]
64001ad6:	mov    edi,DWORD PTR [esp+0x14]
64001ada:	sub    eax,ebx
64001adc:	cmp    eax,edi
64001ade:	jae    0x64001ae2
64001ae0:	mov    edi,eax
64001ae2:	test   edi,edi
64001ae4:	jbe    0x64001b3b
64001ae6:	mov    ecx,DWORD PTR [esi+0x18]
64001ae9:	cmp    ecx,0x10
64001aec:	push   ebp
64001aed:	lea    ebp,[esi+0x4]
64001af0:	jb     0x64001afb
64001af2:	mov    edx,DWORD PTR [ebp+0x0]
64001af5:	mov    DWORD PTR [esp+0x14],edx
64001af9:	jmp    0x64001aff
64001afb:	mov    DWORD PTR [esp+0x14],ebp
64001aff:	cmp    ecx,0x10
64001b02:	jb     0x64001b09
64001b04:	mov    edx,DWORD PTR [ebp+0x0]
64001b07:	jmp    0x64001b0b
64001b09:	mov    edx,ebp
64001b0b:	sub    eax,edi
64001b0d:	push   eax
64001b0e:	mov    eax,DWORD PTR [esp+0x18]
64001b12:	add    eax,ebx
64001b14:	add    eax,edi
64001b16:	push   eax
64001b17:	sub    ecx,ebx
64001b19:	push   ecx
64001b1a:	add    edx,ebx
64001b1c:	push   edx
64001b1d:	call   0x640105f5
64001b22:	mov    eax,DWORD PTR [esi+0x14]
64001b25:	sub    eax,edi
64001b27:	add    esp,0x10
64001b2a:	cmp    DWORD PTR [esi+0x18],0x10
64001b2e:	mov    DWORD PTR [esi+0x14],eax
64001b31:	jb     0x64001b36
64001b33:	mov    ebp,DWORD PTR [ebp+0x0]
64001b36:	mov    BYTE PTR [eax+ebp*1],0x0
64001b3a:	pop    ebp
64001b3b:	pop    edi
64001b3c:	mov    eax,esi
64001b3e:	pop    esi
64001b3f:	pop    ebx
64001b40:	ret    0x8
64001b43:	int3   
64001b44:	int3   
64001b45:	int3   
64001b46:	int3   
64001b47:	int3   
64001b48:	int3   
64001b49:	int3   
64001b4a:	int3   
64001b4b:	int3   
64001b4c:	int3   
64001b4d:	int3   
64001b4e:	int3   
64001b4f:	int3   
64001b50:	push   0x8007000e
64001b55:	call   0x64001040
64001b5a:	int3   
64001b5b:	int3   
64001b5c:	int3   
64001b5d:	int3   
64001b5e:	int3   
64001b5f:	int3   
64001b60:	push   ebp
64001b61:	mov    ebp,esp
64001b63:	push   0xffffffff
64001b65:	push   0x640206f0
64001b6a:	mov    eax,fs:0x0
64001b70:	push   eax
64001b71:	sub    esp,0x1c
64001b74:	push   ebx
64001b75:	push   esi
64001b76:	push   edi
64001b77:	mov    eax,ds:0x64029038
64001b7c:	xor    eax,ebp
64001b7e:	push   eax
64001b7f:	lea    eax,[ebp-0xc]
64001b82:	mov    fs:0x0,eax
64001b88:	mov    DWORD PTR [ebp-0x10],esp
64001b8b:	mov    edi,ecx
64001b8d:	mov    DWORD PTR [ebp-0x14],edi
64001b90:	mov    eax,DWORD PTR [ebp+0x8]
64001b93:	mov    esi,eax
64001b95:	or     esi,0xf
64001b98:	cmp    esi,0xfffffffe
64001b9b:	jbe    0x64001ba1
64001b9d:	mov    esi,eax
64001b9f:	jmp    0x64001bc3
64001ba1:	mov    ebx,DWORD PTR [edi+0x18]
64001ba4:	mov    eax,0xaaaaaaab
64001ba9:	mul    esi
64001bab:	mov    ecx,ebx
64001bad:	shr    ecx,1
64001baf:	shr    edx,1
64001bb1:	cmp    edx,ecx
64001bb3:	jae    0x64001bc3
64001bb5:	mov    eax,0xfffffffe
64001bba:	sub    eax,ecx
64001bbc:	cmp    ebx,eax
64001bbe:	ja     0x64001bc3
64001bc0:	lea    esi,[ecx+ebx*1]
64001bc3:	xor    ebx,ebx
64001bc5:	lea    ecx,[esi+0x1]
64001bc8:	cmp    ecx,ebx
64001bca:	mov    DWORD PTR [ebp-0x4],ebx
64001bcd:	ja     0x64001bdf
64001bcf:	xor    ecx,ecx
64001bd1:	push   ecx
64001bd2:	call   0x640107a3
64001bd7:	add    esp,0x4
64001bda:	mov    DWORD PTR [ebp+0x8],eax
64001bdd:	jmp    0x64001c37
64001bdf:	or     eax,0xffffffff
64001be2:	xor    edx,edx
64001be4:	div    ecx
64001be6:	cmp    eax,0x1
64001be9:	jae    0x64001bd1
64001beb:	lea    ecx,[ebp-0x18]
64001bee:	push   ecx
64001bef:	lea    ecx,[ebp-0x28]
64001bf2:	mov    DWORD PTR [ebp-0x18],ebx
64001bf5:	call   0x6401047d
64001bfa:	push   0x64026e8c
64001bff:	lea    edx,[ebp-0x28]
64001c02:	push   edx
64001c03:	mov    DWORD PTR [ebp-0x28],0x64022304
64001c0a:	call   0x6401080d
64001c0f:	mov    eax,DWORD PTR [ebp+0x8]
64001c12:	mov    ecx,DWORD PTR [ebp-0x14]
64001c15:	mov    DWORD PTR [ebp-0x1c],eax
64001c18:	add    eax,0x1
64001c1b:	mov    DWORD PTR [ebp-0x10],esp
64001c1e:	push   eax
64001c1f:	mov    BYTE PTR [ebp-0x4],0x2
64001c23:	call   0x64001ce0
64001c28:	mov    DWORD PTR [ebp+0x8],eax
64001c2b:	mov    eax,0x64001c31
64001c30:	ret    
64001c31:	mov    edi,DWORD PTR [ebp-0x14]
64001c34:	mov    esi,DWORD PTR [ebp-0x1c]
64001c37:	mov    ebx,DWORD PTR [ebp+0xc]
64001c3a:	test   ebx,ebx
64001c3c:	jbe    0x64001c5e
64001c3e:	cmp    DWORD PTR [edi+0x18],0x10
64001c42:	jb     0x64001c49
64001c44:	mov    eax,DWORD PTR [edi+0x4]
64001c47:	jmp    0x64001c4c
64001c49:	lea    eax,[edi+0x4]
64001c4c:	mov    ecx,DWORD PTR [ebp+0x8]
64001c4f:	push   ebx
64001c50:	push   eax
64001c51:	lea    eax,[esi+0x1]
64001c54:	push   eax
64001c55:	push   ecx
64001c56:	call   0x6401057a
64001c5b:	add    esp,0x10
64001c5e:	cmp    DWORD PTR [edi+0x18],0x10
64001c62:	jb     0x64001c70
64001c64:	mov    edx,DWORD PTR [edi+0x4]
64001c67:	push   edx
64001c68:	call   0x64010422
64001c6d:	add    esp,0x4
64001c70:	cmp    esi,0x10
64001c73:	mov    ecx,DWORD PTR [ebp+0x8]
64001c76:	lea    eax,[edi+0x4]
64001c79:	mov    BYTE PTR [eax],0x0
64001c7c:	mov    DWORD PTR [eax],ecx
64001c7e:	mov    DWORD PTR [edi+0x18],esi
64001c81:	mov    DWORD PTR [edi+0x14],ebx
64001c84:	jb     0x64001c88
64001c86:	mov    eax,ecx
64001c88:	mov    BYTE PTR [eax+ebx*1],0x0
64001c8c:	mov    ecx,DWORD PTR [ebp-0xc]
64001c8f:	mov    DWORD PTR fs:0x0,ecx
64001c96:	pop    ecx
64001c97:	pop    edi
64001c98:	pop    esi
64001c99:	pop    ebx
64001c9a:	mov    esp,ebp
64001c9c:	pop    ebp
64001c9d:	ret    0x8
64001ca0:	mov    esi,DWORD PTR [ebp-0x14]
64001ca3:	cmp    DWORD PTR [esi+0x18],0x10
64001ca7:	jb     0x64001cb5
64001ca9:	mov    eax,DWORD PTR [esi+0x4]
64001cac:	push   eax
64001cad:	call   0x64010422
64001cb2:	add    esp,0x4
64001cb5:	push   0x0
64001cb7:	mov    DWORD PTR [esi+0x18],0xf
64001cbe:	mov    DWORD PTR [esi+0x14],0x0
64001cc5:	push   0x0
64001cc7:	mov    BYTE PTR [esi+0x4],0x0
64001ccb:	call   0x6401080d
64001cd0:	int3   
64001cd1:	int3   
64001cd2:	int3   
64001cd3:	int3   
64001cd4:	int3   
64001cd5:	int3   
64001cd6:	int3   
64001cd7:	int3   
64001cd8:	int3   
64001cd9:	int3   
64001cda:	int3   
64001cdb:	int3   
64001cdc:	int3   
64001cdd:	int3   
64001cde:	int3   
64001cdf:	int3   
64001ce0:	mov    ecx,DWORD PTR [esp+0x4]
64001ce4:	sub    esp,0xc
64001ce7:	test   ecx,ecx
64001ce9:	ja     0x64001cfc
64001ceb:	xor    ecx,ecx
64001ced:	push   ecx
64001cee:	call   0x640107a3
64001cf3:	add    esp,0x4
64001cf6:	add    esp,0xc
64001cf9:	ret    0x4
64001cfc:	or     eax,0xffffffff
64001cff:	xor    edx,edx
64001d01:	div    ecx
64001d03:	cmp    eax,0x1
64001d06:	jae    0x64001ced
64001d08:	lea    eax,[esp+0x10]
64001d0c:	push   eax
64001d0d:	lea    ecx,[esp+0x4]
64001d11:	mov    DWORD PTR [esp+0x14],0x0
64001d19:	call   0x6401047d
64001d1e:	push   0x64026e8c
64001d23:	lea    ecx,[esp+0x4]
64001d27:	push   ecx
64001d28:	mov    DWORD PTR [esp+0x8],0x64022304
64001d30:	call   0x6401080d
64001d35:	int3   
64001d36:	int3   
64001d37:	int3   
64001d38:	int3   
64001d39:	int3   
64001d3a:	int3   
64001d3b:	int3   
64001d3c:	int3   
64001d3d:	int3   
64001d3e:	int3   
64001d3f:	int3   
64001d40:	mov    ecx,DWORD PTR [esp+0x8]
64001d44:	lea    eax,[esp+0xc]
64001d48:	push   eax
64001d49:	push   ecx
64001d4a:	mov    ecx,DWORD PTR [esp+0xc]
64001d4e:	call   0x64001d80
64001d53:	ret    
64001d54:	int3   
64001d55:	int3   
64001d56:	int3   
64001d57:	int3   
64001d58:	int3   
64001d59:	int3   
64001d5a:	int3   
64001d5b:	int3   
64001d5c:	int3   
64001d5d:	int3   
64001d5e:	int3   
64001d5f:	int3   
64001d60:	mov    eax,DWORD PTR [esp+0x4]
64001d64:	push   esi
64001d65:	push   eax
64001d66:	mov    esi,ecx
64001d68:	call   0x640104e3
64001d6d:	mov    DWORD PTR [esi],0x64022304
64001d73:	mov    eax,esi
64001d75:	pop    esi
64001d76:	ret    0x4
64001d79:	int3   
64001d7a:	int3   
64001d7b:	int3   
64001d7c:	int3   
64001d7d:	int3   
64001d7e:	int3   
64001d7f:	int3   
64001d80:	push   ebx
64001d81:	mov    ebx,DWORD PTR [esp+0x8]
64001d85:	test   ebx,ebx
64001d87:	push   edi
64001d88:	mov    edi,ecx
64001d8a:	jne    0x64001d96
64001d8c:	push   0x80070057
64001d91:	call   0x64001040
64001d96:	push   ebp
64001d97:	mov    ebp,DWORD PTR [esp+0x14]
64001d9b:	push   esi
64001d9c:	push   ebp
64001d9d:	push   ebx
64001d9e:	call   0x64010e98
64001da3:	mov    esi,eax
64001da5:	mov    eax,DWORD PTR [edi]
64001da7:	mov    edx,DWORD PTR [eax-0x8]
64001daa:	sub    eax,0x10
64001dad:	mov    ecx,0x1
64001db2:	sub    ecx,DWORD PTR [eax+0xc]
64001db5:	sub    edx,esi
64001db7:	add    esp,0x8
64001dba:	or     ecx,edx
64001dbc:	jge    0x64001dc6
64001dbe:	push   esi
64001dbf:	mov    ecx,edi
64001dc1:	call   0x64001e00
64001dc6:	mov    ecx,DWORD PTR [edi]
64001dc8:	push   ebp
64001dc9:	push   ebx
64001dca:	lea    eax,[esi+0x1]
64001dcd:	push   eax
64001dce:	push   ecx
64001dcf:	call   0x6401102d
64001dd4:	add    esp,0x10
64001dd7:	test   esi,esi
64001dd9:	jl     0x64001df4
64001ddb:	mov    eax,DWORD PTR [edi]
64001ddd:	cmp    esi,DWORD PTR [eax-0x8]
64001de0:	jg     0x64001df4
64001de2:	mov    DWORD PTR [eax-0xc],esi
64001de5:	mov    edx,DWORD PTR [edi]
64001de7:	mov    WORD PTR [edx+esi*2],0x0
64001ded:	pop    esi
64001dee:	pop    ebp
64001def:	pop    edi
64001df0:	pop    ebx
64001df1:	ret    0x8
64001df4:	push   0x80070057
64001df9:	call   0x64001040
64001dfe:	int3   
64001dff:	int3   
64001e00:	mov    eax,DWORD PTR [ecx]
64001e02:	mov    edx,DWORD PTR [esp+0x4]
64001e06:	sub    eax,0x10
64001e09:	push   esi
64001e0a:	mov    esi,DWORD PTR [eax+0x4]
64001e0d:	cmp    esi,edx
64001e0f:	jle    0x64001e13
64001e11:	mov    edx,esi
64001e13:	cmp    DWORD PTR [eax+0xc],0x1
64001e17:	pop    esi
64001e18:	jle    0x64001e23
64001e1a:	mov    DWORD PTR [esp+0x4],edx
64001e1e:	jmp    0x64001950
64001e23:	mov    eax,DWORD PTR [eax+0x8]
64001e26:	cmp    eax,edx
64001e28:	jge    0x64001e49
64001e2a:	cmp    eax,0x400
64001e2f:	jle    0x64001e38
64001e31:	add    eax,0x400
64001e36:	jmp    0x64001e3a
64001e38:	add    eax,eax
64001e3a:	cmp    eax,edx
64001e3c:	jge    0x64001e40
64001e3e:	mov    eax,edx
64001e40:	mov    DWORD PTR [esp+0x4],eax
64001e44:	jmp    0x64001e50
64001e49:	ret    0x4
64001e4c:	int3   
64001e4d:	int3   
64001e4e:	int3   
64001e4f:	int3   
64001e50:	mov    edx,DWORD PTR [esp+0x4]
64001e54:	push   esi
64001e55:	mov    esi,ecx
64001e57:	mov    eax,DWORD PTR [esi]
64001e59:	mov    ecx,DWORD PTR [eax-0x10]
64001e5c:	sub    eax,0x10
64001e5f:	cmp    DWORD PTR [eax+0x8],edx
64001e62:	jge    0x64001e79
64001e64:	test   edx,edx
64001e66:	jle    0x64001e79
64001e68:	push   edi
64001e69:	mov    edi,DWORD PTR [ecx]
64001e6b:	push   0x2
64001e6d:	push   edx
64001e6e:	push   eax
64001e6f:	mov    eax,DWORD PTR [edi+0x8]
64001e72:	call   eax
64001e74:	test   eax,eax
64001e76:	pop    edi
64001e77:	jne    0x64001e7e
64001e79:	call   0x64001b50
64001e7e:	add    eax,0x10
64001e81:	mov    DWORD PTR [esi],eax
64001e83:	pop    esi
64001e84:	ret    0x4
64001e87:	int3   
64001e88:	int3   
64001e89:	int3   
64001e8a:	int3   
64001e8b:	int3   
64001e8c:	int3   
64001e8d:	int3   
64001e8e:	int3   
64001e8f:	int3   
64001e90:	mov    eax,DWORD PTR [esp+0x4]
64001e94:	cmp    eax,0x50
64001e97:	ja     0x64001ebb
64001e99:	movzx  ecx,BYTE PTR [eax+0x64001ed8]
64001ea0:	jmp    DWORD PTR [ecx*4+0x64001ec8]
64001ea7:	push   0x8007000e
64001eac:	call   0x64001040
64001eb1:	push   0x80070057
64001eb6:	call   0x64001040
64001ebb:	push   0x80004005
64001ec0:	call   0x64001040
64001ec5:	ret    
64001ec6:	mov    edi,edi
64001ec8:	lds    ebx,FWORD PTR [esi]
64001eca:	add    BYTE PTR [edi+eiz*4+0x1e],ah
64001ece:	add    BYTE PTR [ecx+esi*4+0x1e],ah
64001ed2:	add    BYTE PTR [ebx+edi*4+0x1e],ah
64001ed6:	add    BYTE PTR [eax+eax*1+0x3],ah
64001eda:	add    eax,DWORD PTR [ebx]
64001edc:	add    eax,DWORD PTR [ebx]
64001ede:	add    eax,DWORD PTR [ebx]
64001ee0:	add    eax,DWORD PTR [ebx]
64001ee2:	add    eax,DWORD PTR [ebx]
64001ee4:	add    DWORD PTR [ebx],eax
64001ee6:	add    eax,DWORD PTR [ebx]
64001ee8:	add    eax,DWORD PTR [ebx]
64001eea:	add    eax,DWORD PTR [ebx]
64001eec:	add    eax,DWORD PTR [ebx]
64001eee:	add    al,BYTE PTR [ebx]
64001ef0:	add    eax,DWORD PTR [ebx]
64001ef2:	add    eax,DWORD PTR [ebx]
64001ef4:	add    eax,DWORD PTR [ebx]
64001ef6:	add    eax,DWORD PTR [ebx]
64001ef8:	add    eax,DWORD PTR [ebx]
64001efa:	add    al,BYTE PTR [ebx]
64001efc:	add    eax,DWORD PTR [ebx]
64001efe:	add    eax,DWORD PTR [ebx]
64001f00:	add    eax,DWORD PTR [ebx]
64001f02:	add    eax,DWORD PTR [ebx]
64001f04:	add    eax,DWORD PTR [ebx]
64001f06:	add    eax,DWORD PTR [ebx]
64001f08:	add    eax,DWORD PTR [ebx]
64001f0a:	add    eax,DWORD PTR [ebx]
64001f0c:	add    eax,DWORD PTR [ebx]
64001f0e:	add    eax,DWORD PTR [ebx]
64001f10:	add    eax,DWORD PTR [ebx]
64001f12:	add    eax,DWORD PTR [ebx]
64001f14:	add    eax,DWORD PTR [ebx]
64001f16:	add    eax,DWORD PTR [ebx]
64001f18:	add    eax,DWORD PTR [ebx]
64001f1a:	add    eax,DWORD PTR [ebx]
64001f1c:	add    eax,DWORD PTR [ebx]
64001f1e:	add    eax,DWORD PTR [ebx]
64001f20:	add    eax,DWORD PTR [ebx]
64001f22:	add    eax,DWORD PTR [ebx]
64001f24:	add    eax,DWORD PTR [ebx]
64001f26:	add    eax,DWORD PTR [ebx]
64001f28:	add    ah,cl
64001f2a:	int3   
64001f2b:	int3   
64001f2c:	int3   
64001f2d:	int3   
64001f2e:	int3   
64001f2f:	int3   
64001f30:	push   ebx
64001f31:	mov    ebx,DWORD PTR [esp+0x8]
64001f35:	push   edi
64001f36:	mov    edi,DWORD PTR [esp+0x10]
64001f3a:	push   edi
64001f3b:	push   ebx
64001f3c:	call   DWORD PTR ds:0x64022030
64001f42:	test   eax,eax
64001f44:	jne    0x64001f49
64001f46:	pop    edi
64001f47:	pop    ebx
64001f48:	ret    
64001f49:	push   esi
64001f4a:	push   eax
64001f4b:	call   DWORD PTR ds:0x6402202c
64001f51:	mov    esi,eax
64001f53:	test   esi,esi
64001f55:	je     0x64001f84
64001f57:	push   edi
64001f58:	push   ebx
64001f59:	call   DWORD PTR ds:0x64022028
64001f5f:	mov    ecx,DWORD PTR [esp+0x18]
64001f63:	add    eax,esi
64001f65:	and    ecx,0xf
64001f68:	jbe    0x64001f80
64001f6a:	lea    ebx,[ebx+0x0]
64001f70:	cmp    esi,eax
64001f72:	jae    0x64001f84
64001f74:	sub    ecx,0x1
64001f77:	movzx  edx,WORD PTR [esi]
64001f7a:	lea    esi,[esi+edx*2+0x2]
64001f7e:	jne    0x64001f70
64001f80:	cmp    esi,eax
64001f82:	jb     0x64001f8a
64001f84:	pop    esi
64001f85:	pop    edi
64001f86:	xor    eax,eax
64001f88:	pop    ebx
64001f89:	ret    
64001f8a:	mov    ax,WORD PTR [esi]
64001f8d:	neg    ax
64001f90:	sbb    eax,eax
64001f92:	and    eax,esi
64001f94:	pop    esi
64001f95:	pop    edi
64001f96:	pop    ebx
64001f97:	ret    
64001f98:	int3   
64001f99:	int3   
64001f9a:	int3   
64001f9b:	int3   
64001f9c:	int3   
64001f9d:	int3   
64001f9e:	int3   
64001f9f:	int3   
64001fa0:	push   ebx
64001fa1:	push   ebp
64001fa2:	push   esi
64001fa3:	push   edi
64001fa4:	xor    edi,edi
64001fa6:	push   edi
64001fa7:	mov    ecx,0x6402a46c
64001fac:	call   0x64010051
64001fb1:	mov    esi,eax
64001fb3:	test   esi,esi
64001fb5:	lea    ebp,[edi+0x1]
64001fb8:	je     0x64002007
64001fba:	mov    ebx,DWORD PTR [esp+0x14]
64001fbe:	mov    edi,edi
64001fc0:	test   edi,edi
64001fc2:	jne    0x64002007
64001fc4:	mov    eax,DWORD PTR [esp+0x18]
64001fc8:	mov    ecx,ebx
64001fca:	shr    ecx,0x4
64001fcd:	add    ecx,0x1
64001fd0:	push   eax
64001fd1:	movzx  edx,cx
64001fd4:	push   edx
64001fd5:	push   0x6
64001fd7:	push   esi
64001fd8:	call   DWORD PTR ds:0x64022038
64001fde:	test   eax,eax
64001fe0:	je     0x64001ff3
64001fe2:	push   ebx
64001fe3:	push   eax
64001fe4:	push   esi
64001fe5:	call   0x64001f30
64001fea:	mov    edi,eax
64001fec:	add    esp,0xc
64001fef:	test   edi,edi
64001ff1:	jne    0x6400200e
64001ff3:	push   ebp
64001ff4:	mov    ecx,0x6402a46c
64001ff9:	call   0x64010051
64001ffe:	mov    esi,eax
64002000:	add    ebp,0x1
64002003:	test   esi,esi
64002005:	jne    0x64001fc0
64002007:	pop    edi
64002008:	pop    esi
64002009:	pop    ebp
6400200a:	xor    eax,eax
6400200c:	pop    ebx
6400200d:	ret    
6400200e:	pop    edi
6400200f:	mov    eax,esi
64002011:	pop    esi
64002012:	pop    ebp
64002013:	pop    ebx
64002014:	ret    
64002015:	int3   
64002016:	int3   
64002017:	int3   
64002018:	int3   
64002019:	int3   
6400201a:	int3   
6400201b:	int3   
6400201c:	int3   
6400201d:	int3   
6400201e:	int3   
6400201f:	int3   
64002020:	push   0xffffffff
64002022:	push   0x64020948
64002027:	mov    eax,fs:0x0
6400202d:	push   eax
6400202e:	push   esi
6400202f:	mov    eax,ds:0x64029038
64002034:	xor    eax,esp
64002036:	push   eax
64002037:	lea    eax,[esp+0x8]
6400203b:	mov    fs:0x0,eax
64002041:	mov    esi,DWORD PTR [esp+0x18]
64002045:	mov    ecx,esi
64002047:	call   0x6401046c
6400204c:	xor    eax,eax
6400204e:	mov    DWORD PTR [esp+0x10],eax
64002052:	lea    ecx,[esi+0xc]
64002055:	mov    DWORD PTR [esi],0x640245a4
6400205b:	push   0xffffffff
6400205d:	mov    DWORD PTR [ecx+0x14],eax
64002060:	mov    DWORD PTR [ecx+0x18],0xf
64002067:	push   eax
64002068:	mov    BYTE PTR [ecx+0x4],al
6400206b:	mov    eax,DWORD PTR [esp+0x24]
6400206f:	push   eax
64002070:	call   0x640017a0
64002075:	mov    eax,esi
64002077:	mov    ecx,DWORD PTR [esp+0x8]
6400207b:	mov    DWORD PTR fs:0x0,ecx
64002082:	pop    ecx
64002083:	pop    esi
64002084:	add    esp,0xc
64002087:	ret    0x8
6400208a:	int3   
6400208b:	int3   
6400208c:	int3   
6400208d:	int3   
6400208e:	int3   
6400208f:	int3   
64002090:	push   esi
64002091:	mov    esi,ecx
64002093:	mov    DWORD PTR [esi],0x640245a4
64002099:	cmp    DWORD PTR [esi+0x24],0x10
6400209d:	jb     0x640020ab
6400209f:	mov    eax,DWORD PTR [esi+0x10]
640020a2:	push   eax
640020a3:	call   0x64010422
640020a8:	add    esp,0x4
640020ab:	xor    eax,eax
640020ad:	mov    DWORD PTR [esi+0x24],0xf
640020b4:	mov    DWORD PTR [esi+0x20],eax
640020b7:	mov    BYTE PTR [esi+0x10],al
640020ba:	mov    ecx,esi
640020bc:	pop    esi
640020bd:	jmp    0x6401053b
640020c2:	int3   
640020c3:	int3   
640020c4:	int3   
640020c5:	int3   
640020c6:	int3   
640020c7:	int3   
640020c8:	int3   
640020c9:	int3   
640020ca:	int3   
640020cb:	int3   
640020cc:	int3   
640020cd:	int3   
640020ce:	int3   
640020cf:	int3   
640020d0:	push   esi
640020d1:	mov    esi,ecx
640020d3:	mov    DWORD PTR [esi],0x640245a4
640020d9:	cmp    DWORD PTR [esi+0x24],0x10
640020dd:	jb     0x640020eb
640020df:	mov    eax,DWORD PTR [esi+0x10]
640020e2:	push   eax
640020e3:	call   0x64010422
640020e8:	add    esp,0x4
640020eb:	xor    eax,eax
640020ed:	mov    DWORD PTR [esi+0x24],0xf
640020f4:	mov    DWORD PTR [esi+0x20],eax
640020f7:	mov    ecx,esi
640020f9:	mov    BYTE PTR [esi+0x10],al
640020fc:	call   0x6401053b
64002101:	test   BYTE PTR [esp+0x8],0x1
64002106:	je     0x64002111
64002108:	push   esi
64002109:	call   0x64010422
6400210e:	add    esp,0x4
64002111:	mov    eax,esi
64002113:	pop    esi
64002114:	ret    0x4
64002117:	int3   
64002118:	int3   
64002119:	int3   
6400211a:	int3   
6400211b:	int3   
6400211c:	int3   
6400211d:	int3   
6400211e:	int3   
6400211f:	int3   
64002120:	push   0xffffffff
64002122:	push   0x64020918
64002127:	mov    eax,fs:0x0
6400212d:	push   eax
6400212e:	push   ecx
6400212f:	push   esi
64002130:	push   edi
64002131:	mov    eax,ds:0x64029038
64002136:	xor    eax,esp
64002138:	push   eax
64002139:	lea    eax,[esp+0x10]
6400213d:	mov    fs:0x0,eax
64002143:	mov    esi,ecx
64002145:	mov    DWORD PTR [esp+0xc],esi
64002149:	mov    edi,DWORD PTR [esp+0x20]
6400214d:	push   edi
6400214e:	call   0x640104e3
64002153:	xor    edx,edx
64002155:	mov    DWORD PTR [esp+0x18],edx
64002159:	push   0xffffffff
6400215b:	lea    ecx,[esi+0xc]
6400215e:	mov    DWORD PTR [esi],0x640245a4
64002164:	lea    eax,[edi+0xc]
64002167:	push   edx
64002168:	mov    DWORD PTR [ecx+0x18],0xf
6400216f:	mov    DWORD PTR [ecx+0x14],edx
64002172:	push   eax
64002173:	mov    BYTE PTR [ecx+0x4],dl
64002176:	call   0x640017a0
6400217b:	mov    eax,esi
6400217d:	mov    ecx,DWORD PTR [esp+0x10]
64002181:	mov    DWORD PTR fs:0x0,ecx
64002188:	pop    ecx
64002189:	pop    edi
6400218a:	pop    esi
6400218b:	add    esp,0x10
6400218e:	ret    0x4
64002191:	int3   
64002192:	int3   
64002193:	int3   
64002194:	int3   
64002195:	int3   
64002196:	int3   
64002197:	int3   
64002198:	int3   
64002199:	int3   
6400219a:	int3   
6400219b:	int3   
6400219c:	int3   
6400219d:	int3   
6400219e:	int3   
6400219f:	int3   
640021a0:	push   0xffffffff
640021a2:	push   0x6402194b
640021a7:	mov    eax,fs:0x0
640021ad:	push   eax
640021ae:	sub    esp,0x41c
640021b4:	mov    eax,ds:0x64029038
640021b9:	xor    eax,esp
640021bb:	mov    DWORD PTR [esp+0x418],eax
640021c2:	push   ebx
640021c3:	push   ebp
640021c4:	push   esi
640021c5:	push   edi
640021c6:	mov    eax,ds:0x64029038
640021cb:	xor    eax,esp
640021cd:	push   eax
640021ce:	lea    eax,[esp+0x430]
640021d5:	mov    fs:0x0,eax
640021db:	mov    esi,DWORD PTR [esp+0x440]
640021e2:	mov    ebx,DWORD PTR [esp+0x444]
640021e9:	mov    ebp,DWORD PTR [esp+0x448]
640021f0:	lea    eax,[esp+0x224]
640021f7:	push   eax
640021f8:	push   0x100
640021fd:	mov    DWORD PTR [esp+0x20],esi
64002201:	mov    DWORD PTR [esp+0x1c],0x0
64002209:	call   0x6400c310
6400220e:	call   eax
64002210:	cmp    eax,0x100
64002215:	jbe    0x64002228
64002217:	push   0x64024590
6400221c:	mov    ecx,esi
6400221e:	call   0x64002590
64002223:	jmp    0x640023b5
64002228:	lea    ecx,[esp+0x1c]
6400222c:	push   ecx
6400222d:	push   0x0
6400222f:	lea    edx,[esp+0x22c]
64002236:	push   0x64024594
6400223b:	push   edx
6400223c:	call   0x6400c3f0
64002241:	call   eax
64002243:	test   eax,eax
64002245:	je     0x64002217
64002247:	mov    edi,DWORD PTR ds:0x64022050
6400224d:	xor    esi,esi
6400224f:	nop
64002250:	cmp    esi,0x708
64002256:	je     0x64002333
6400225c:	lea    eax,[esp+0x1c]
64002260:	push   eax
64002261:	call   0x6400c150
64002266:	call   eax
64002268:	test   eax,eax
6400226a:	jne    0x6400227d
6400226c:	push   esi
6400226d:	call   edi
6400226f:	add    esi,0xc8
64002275:	cmp    esi,0x7d0
6400227b:	jne    0x64002250
6400227d:	xor    esi,esi
6400227f:	cmp    esi,0x708
64002285:	je     0x64002333
6400228b:	lea    ecx,[esp+0x1c]
6400228f:	push   0x0
64002291:	push   ecx
64002292:	call   0x6400c4d0
64002297:	call   eax
64002299:	test   eax,eax
6400229b:	jne    0x640022ae
6400229d:	push   esi
6400229e:	call   edi
640022a0:	add    esi,0xc8
640022a6:	cmp    esi,0x7d0
640022ac:	jne    0x6400227f
640022ae:	lea    eax,[esp+0x1c]
640022b2:	lea    edx,[eax+0x2]
640022b5:	mov    cx,WORD PTR [eax]
640022b8:	add    eax,0x2
640022bb:	test   cx,cx
640022be:	jne    0x640022b5
640022c0:	sub    eax,edx
640022c2:	sar    eax,1
640022c4:	push   eax
640022c5:	lea    edx,[esp+0x20]
640022c9:	push   edx
640022ca:	mov    ecx,ebp
640022cc:	call   0x64002ae0
640022d1:	lea    eax,[esp+0x1c]
640022d5:	push   eax
640022d6:	lea    ecx,[esp+0x18]
640022da:	call   0x64002590
640022df:	push   0x6402459c
640022e4:	lea    ecx,[esp+0x18]
640022e8:	mov    DWORD PTR [esp+0x43c],0x0
640022f3:	call   0x64002660
640022f8:	mov    eax,DWORD PTR [ebx]
640022fa:	mov    ecx,DWORD PTR [eax-0xc]
640022fd:	push   ecx
640022fe:	push   eax
640022ff:	lea    ecx,[esp+0x1c]
64002303:	call   0x640029e0
64002308:	mov    esi,DWORD PTR [esp+0x14]
6400230c:	mov    ecx,DWORD PTR [esi-0x10]
6400230f:	mov    edx,DWORD PTR [ecx]
64002311:	mov    eax,DWORD PTR [edx+0x10]
64002314:	add    esi,0xfffffff0
64002317:	call   eax
64002319:	cmp    DWORD PTR [esi+0xc],0x0
6400231d:	lea    edx,[esi+0xc]
64002320:	jl     0x64002345
64002322:	cmp    eax,DWORD PTR [esi]
64002324:	jne    0x64002345
64002326:	mov    edi,esi
64002328:	mov    ecx,0x1
6400232d:	lock xadd DWORD PTR [edx],ecx
64002331:	jmp    0x64002381
64002333:	mov    esi,DWORD PTR [esp+0x18]
64002337:	push   0x64024590
6400233c:	mov    ecx,esi
6400233e:	call   0x64002590
64002343:	jmp    0x640023b5
64002345:	mov    ecx,DWORD PTR [esi+0x4]
64002348:	mov    edx,DWORD PTR [eax]
6400234a:	mov    edx,DWORD PTR [edx]
6400234c:	push   0x2
6400234e:	push   ecx
6400234f:	mov    ecx,eax
64002351:	call   edx
64002353:	mov    edi,eax
64002355:	test   edi,edi
64002357:	jne    0x6400235e
64002359:	jmp    0x64001b50
6400235e:	mov    eax,DWORD PTR [esi+0x4]
64002361:	mov    DWORD PTR [edi+0x4],eax
64002364:	mov    eax,DWORD PTR [esi+0x4]
64002367:	lea    ecx,[eax+eax*1+0x2]
6400236b:	push   ecx
6400236c:	add    esi,0x10
6400236f:	lea    edx,[eax+eax*1+0x2]
64002373:	push   esi
64002374:	push   edx
64002375:	lea    eax,[edi+0x10]
64002378:	push   eax
64002379:	call   0x6401057a
6400237e:	add    esp,0x10
64002381:	mov    esi,DWORD PTR [esp+0x18]
64002385:	mov    DWORD PTR [esp+0x438],0xffffffff
64002390:	mov    eax,DWORD PTR [esp+0x14]
64002394:	add    edi,0x10
64002397:	add    eax,0xfffffff0
6400239a:	mov    DWORD PTR [esi],edi
6400239c:	lea    ecx,[eax+0xc]
6400239f:	or     edx,0xffffffff
640023a2:	lock xadd DWORD PTR [ecx],edx
640023a6:	dec    edx
640023a7:	test   edx,edx
640023a9:	jg     0x640023b5
640023ab:	mov    ecx,DWORD PTR [eax]
640023ad:	mov    edx,DWORD PTR [ecx]
640023af:	push   eax
640023b0:	mov    eax,DWORD PTR [edx+0x4]
640023b3:	call   eax
640023b5:	mov    eax,esi
640023b7:	mov    ecx,DWORD PTR [esp+0x430]
640023be:	mov    DWORD PTR fs:0x0,ecx
640023c5:	pop    ecx
640023c6:	pop    edi
640023c7:	pop    esi
640023c8:	pop    ebp
640023c9:	pop    ebx
640023ca:	mov    ecx,DWORD PTR [esp+0x418]
640023d1:	xor    ecx,esp
640023d3:	call   0x64010c1e
640023d8:	add    esp,0x428
640023de:	ret    
640023df:	int3   
640023e0:	push   0xffffffff
640023e2:	push   0x64021920
640023e7:	mov    eax,fs:0x0
640023ed:	push   eax
640023ee:	sub    esp,0x4c
640023f1:	push   ebx
640023f2:	push   esi
640023f3:	push   edi
640023f4:	mov    eax,ds:0x64029038
640023f9:	xor    eax,esp
640023fb:	push   eax
640023fc:	lea    eax,[esp+0x5c]
64002400:	mov    fs:0x0,eax
64002406:	xor    ebx,ebx
64002408:	push   ebx
64002409:	push   0x80
6400240e:	push   0x2
64002410:	push   ebx
64002411:	push   ebx
64002412:	mov    DWORD PTR [esp+0x78],ebx
64002416:	mov    edi,DWORD PTR [esp+0x80]
6400241d:	push   0x40000000
64002422:	push   edi
64002423:	call   0x6400c230
64002428:	call   eax
6400242a:	mov    esi,eax
6400242c:	mov    DWORD PTR [esp+0x10],esi
64002430:	cmp    esi,0xffffffff
64002433:	mov    BYTE PTR [esp+0x64],0x1
64002438:	push   ebx
64002439:	jne    0x6400247c
6400243b:	push   0x64024592
64002440:	lea    ecx,[esp+0x20]
64002444:	mov    DWORD PTR [esp+0x38],0xf
6400244c:	mov    DWORD PTR [esp+0x34],ebx
64002450:	mov    BYTE PTR [esp+0x24],bl
64002454:	call   0x64001880
64002459:	lea    eax,[esp+0x18]
6400245d:	push   eax
6400245e:	lea    ecx,[esp+0x38]
64002462:	push   ecx
64002463:	mov    BYTE PTR [esp+0x6c],0x2
64002468:	call   0x64002020
6400246d:	push   0x64026ec4
64002472:	lea    edx,[esp+0x38]
64002476:	push   edx
64002477:	call   0x6401080d
6400247c:	mov    ecx,DWORD PTR [esp+0x78]
64002480:	mov    edx,DWORD PTR [esp+0x74]
64002484:	lea    eax,[esp+0x18]
64002488:	push   eax
64002489:	push   ecx
6400248a:	push   edx
6400248b:	push   esi
6400248c:	call   DWORD PTR ds:0x64022084
64002492:	test   eax,eax
64002494:	jne    0x640024d8
64002496:	push   ebx
64002497:	push   0x64024592
6400249c:	lea    ecx,[esp+0x20]
640024a0:	mov    DWORD PTR [esp+0x38],0xf
640024a8:	mov    DWORD PTR [esp+0x34],ebx
640024ac:	mov    BYTE PTR [esp+0x24],bl
640024b0:	call   0x64001880
640024b5:	lea    eax,[esp+0x18]
640024b9:	push   eax
640024ba:	lea    ecx,[esp+0x38]
640024be:	push   ecx
640024bf:	mov    BYTE PTR [esp+0x6c],0x3
640024c4:	call   0x64002020
640024c9:	push   0x64026ec4
640024ce:	lea    edx,[esp+0x38]
640024d2:	push   edx
640024d3:	call   0x6401080d
640024d8:	cmp    esi,ebx
640024da:	je     0x640024f2
640024dc:	call   DWORD PTR ds:0x64022044
640024e2:	push   esi
640024e3:	mov    ebx,eax
640024e5:	call   DWORD PTR ds:0x64022040
640024eb:	push   ebx
640024ec:	call   DWORD PTR ds:0x64022060
640024f2:	lea    eax,[edi-0x10]
640024f5:	mov    DWORD PTR [esp+0x64],0xffffffff
640024fd:	lea    ecx,[eax+0xc]
64002500:	or     edx,0xffffffff
64002503:	lock xadd DWORD PTR [ecx],edx
64002507:	dec    edx
64002508:	test   edx,edx
6400250a:	jg     0x64002516
6400250c:	mov    ecx,DWORD PTR [eax]
6400250e:	mov    edx,DWORD PTR [ecx]
64002510:	push   eax
64002511:	mov    eax,DWORD PTR [edx+0x4]
64002514:	call   eax
64002516:	mov    ecx,DWORD PTR [esp+0x5c]
6400251a:	mov    DWORD PTR fs:0x0,ecx
64002521:	pop    ecx
64002522:	pop    edi
64002523:	pop    esi
64002524:	pop    ebx
64002525:	add    esp,0x58
64002528:	ret    
64002529:	int3   
6400252a:	int3   
6400252b:	int3   
6400252c:	int3   
6400252d:	int3   
6400252e:	int3   
6400252f:	int3   
64002530:	sub    esp,0x8
64002533:	mov    DWORD PTR [esp],0x0
6400253a:	mov    DWORD PTR [esp+0x4],0x0
64002542:	call   DWORD PTR ds:0x64029008
64002548:	mov    eax,DWORD PTR [esp+0x10]
6400254c:	mov    eax,DWORD PTR [eax]
6400254e:	lea    ecx,[esp+0x4]
64002552:	push   ecx
64002553:	push   0x0
64002555:	lea    edx,[esp+0x8]
64002559:	push   edx
6400255a:	push   0x0
6400255c:	push   0x0
6400255e:	push   0x5
64002560:	push   0x1
64002562:	push   eax
64002563:	call   0x6400cf50
64002568:	call   eax
6400256a:	test   eax,eax
6400256c:	jne    0x6400258a
6400256e:	mov    ecx,DWORD PTR [esp]
64002571:	mov    eax,DWORD PTR [esp+0xc]
64002575:	mov    eax,DWORD PTR [eax]
64002577:	push   0x0
64002579:	push   ecx
6400257a:	push   0x0
6400257c:	push   0x0
6400257e:	push   0x4
64002580:	push   0x1
64002582:	push   eax
64002583:	call   0x6400d030
64002588:	call   eax
6400258a:	add    esp,0x8
6400258d:	ret    
6400258e:	int3   
6400258f:	int3   
64002590:	push   0xffffffff
64002592:	push   0x64020eb8
64002597:	mov    eax,fs:0x0
6400259d:	push   eax
6400259e:	push   ecx
6400259f:	push   esi
640025a0:	push   edi
640025a1:	mov    eax,ds:0x64029038
640025a6:	xor    eax,esp
640025a8:	push   eax
640025a9:	lea    eax,[esp+0x10]
640025ad:	mov    fs:0x0,eax
640025b3:	mov    edi,ecx
640025b5:	mov    DWORD PTR [esp+0xc],edi
640025b9:	mov    eax,ds:0x6402a4e0
640025be:	mov    edx,DWORD PTR [eax+0xc]
640025c1:	mov    ecx,0x6402a4e0
640025c6:	call   edx
640025c8:	add    eax,0x10
640025cb:	mov    DWORD PTR [edi],eax
640025cd:	mov    edx,DWORD PTR [esp+0x20]
640025d1:	test   edx,edx
640025d3:	mov    DWORD PTR [esp+0x18],0x0
640025db:	je     0x64002602
640025dd:	test   edx,0xffff0000
640025e3:	jne    0x64002606
640025e5:	movzx  esi,dx
640025e8:	push   0x0
640025ea:	push   esi
640025eb:	call   0x64001fa0
640025f0:	add    esp,0x8
640025f3:	test   eax,eax
640025f5:	je     0x64002628
640025f7:	push   esi
640025f8:	push   eax
640025f9:	mov    ecx,edi
640025fb:	call   0x64002910
64002600:	jmp    0x64002628
64002602:	xor    eax,eax
64002604:	jmp    0x6400261f
64002606:	mov    eax,edx
64002608:	lea    esi,[eax+0x2]
6400260b:	jmp    0x64002610
6400260d:	lea    ecx,[ecx+0x0]
64002610:	mov    cx,WORD PTR [eax]
64002613:	add    eax,0x2
64002616:	test   cx,cx
64002619:	jne    0x64002610
6400261b:	sub    eax,esi
6400261d:	sar    eax,1
6400261f:	push   eax
64002620:	push   edx
64002621:	mov    ecx,edi
64002623:	call   0x64002ae0
64002628:	mov    eax,edi
6400262a:	mov    ecx,DWORD PTR [esp+0x10]
6400262e:	mov    DWORD PTR fs:0x0,ecx
64002635:	pop    ecx
64002636:	pop    edi
64002637:	pop    esi
64002638:	add    esp,0x10
6400263b:	ret    0x4
6400263e:	int3   
6400263f:	int3   
64002640:	mov    eax,DWORD PTR [esp+0x4]
64002644:	mov    eax,DWORD PTR [eax]
64002646:	push   esi
64002647:	mov    esi,ecx
64002649:	mov    ecx,DWORD PTR [eax-0xc]
6400264c:	push   ecx
6400264d:	push   eax
6400264e:	mov    ecx,esi
64002650:	call   0x640029e0
64002655:	mov    eax,esi
64002657:	pop    esi
64002658:	ret    0x4
6400265b:	int3   
6400265c:	int3   
6400265d:	int3   
6400265e:	int3   
6400265f:	int3   
64002660:	push   0xffffffff
64002662:	push   0x64020e88
64002667:	mov    eax,fs:0x0
6400266d:	push   eax
6400266e:	push   ecx
6400266f:	push   esi
64002670:	mov    eax,ds:0x64029038
64002675:	xor    eax,esp
64002677:	push   eax
64002678:	lea    eax,[esp+0xc]
6400267c:	mov    fs:0x0,eax
64002682:	mov    esi,ecx
64002684:	mov    eax,DWORD PTR [esi]
64002686:	mov    ecx,DWORD PTR [eax-0x10]
64002689:	test   ecx,ecx
6400268b:	je     0x64002698
6400268d:	mov    edx,DWORD PTR [ecx]
6400268f:	mov    eax,DWORD PTR [edx+0x10]
64002692:	call   eax
64002694:	test   eax,eax
64002696:	jne    0x640026a8
64002698:	mov    edx,DWORD PTR ds:0x6402a4e0
6400269e:	mov    eax,DWORD PTR [edx+0x10]
640026a1:	mov    ecx,0x6402a4e0
640026a6:	call   eax
640026a8:	mov    ecx,DWORD PTR [esp+0x1c]
640026ac:	push   eax
640026ad:	push   ecx
640026ae:	lea    ecx,[esp+0x10]
640026b2:	call   0x64002760
640026b7:	mov    DWORD PTR [esp+0x14],0x0
640026bf:	mov    eax,DWORD PTR [esp+0x8]
640026c3:	mov    ecx,DWORD PTR [eax-0xc]
640026c6:	push   ecx
640026c7:	push   eax
640026c8:	mov    ecx,esi
640026ca:	call   0x640029e0
640026cf:	mov    DWORD PTR [esp+0x14],0xffffffff
640026d7:	mov    eax,DWORD PTR [esp+0x8]
640026db:	add    eax,0xfffffff0
640026de:	lea    edx,[eax+0xc]
640026e1:	or     ecx,0xffffffff
640026e4:	lock xadd DWORD PTR [edx],ecx
640026e8:	dec    ecx
640026e9:	test   ecx,ecx
640026eb:	jg     0x640026f7
640026ed:	mov    ecx,DWORD PTR [eax]
640026ef:	mov    edx,DWORD PTR [ecx]
640026f1:	push   eax
640026f2:	mov    eax,DWORD PTR [edx+0x4]
640026f5:	call   eax
640026f7:	mov    eax,esi
640026f9:	mov    ecx,DWORD PTR [esp+0xc]
640026fd:	mov    DWORD PTR fs:0x0,ecx
64002704:	pop    ecx
64002705:	pop    esi
64002706:	add    esp,0x10
64002709:	ret    0x4
6400270c:	int3   
6400270d:	int3   
6400270e:	int3   
6400270f:	int3   
64002710:	mov    edx,DWORD PTR [esp+0x4]
64002714:	push   esi
64002715:	mov    esi,ecx
64002717:	mov    eax,edx
64002719:	push   edi
6400271a:	mov    DWORD PTR [esi+0x18],0xf
64002721:	mov    DWORD PTR [esi+0x14],0x0
64002728:	mov    BYTE PTR [esi+0x4],0x0
6400272c:	lea    edi,[eax+0x1]
6400272f:	nop
64002730:	mov    cl,BYTE PTR [eax]
64002732:	add    eax,0x1
64002735:	test   cl,cl
64002737:	jne    0x64002730
64002739:	sub    eax,edi
6400273b:	push   eax
6400273c:	push   edx
6400273d:	mov    ecx,esi
6400273f:	call   0x64001880
64002744:	pop    edi
64002745:	mov    eax,esi
64002747:	pop    esi
64002748:	ret    0x4
6400274b:	int3   
6400274c:	int3   
6400274d:	int3   
6400274e:	int3   
6400274f:	int3   
64002750:	mov    eax,DWORD PTR [ecx]
64002752:	push   eax
64002753:	call   0x64010422
64002758:	pop    ecx
64002759:	ret    
6400275a:	int3   
6400275b:	int3   
6400275c:	int3   
6400275d:	int3   
6400275e:	int3   
6400275f:	int3   
64002760:	push   0xffffffff
64002762:	push   0x64020e58
64002767:	mov    eax,fs:0x0
6400276d:	push   eax
6400276e:	push   ecx
6400276f:	push   esi
64002770:	push   edi
64002771:	mov    eax,ds:0x64029038
64002776:	xor    eax,esp
64002778:	push   eax
64002779:	lea    eax,[esp+0x10]
6400277d:	mov    fs:0x0,eax
64002783:	mov    esi,ecx
64002785:	mov    DWORD PTR [esp+0xc],esi
64002789:	mov    ecx,DWORD PTR [esp+0x24]
6400278d:	xor    eax,eax
6400278f:	test   ecx,ecx
64002791:	setne  al
64002794:	test   eax,eax
64002796:	jne    0x640027a2
64002798:	push   0x80004005
6400279d:	call   0x64001040
640027a2:	mov    eax,DWORD PTR [ecx]
640027a4:	mov    edx,DWORD PTR [eax+0xc]
640027a7:	call   edx
640027a9:	add    eax,0x10
640027ac:	mov    DWORD PTR [esi],eax
640027ae:	mov    eax,DWORD PTR [esp+0x20]
640027b2:	test   eax,eax
640027b4:	mov    DWORD PTR [esp+0x18],0x0
640027bc:	je     0x640027e2
640027be:	test   eax,0xffff0000
640027c3:	jne    0x640027e2
640027c5:	movzx  edi,ax
640027c8:	push   0x0
640027ca:	push   edi
640027cb:	call   0x64001fa0
640027d0:	add    esp,0x8
640027d3:	test   eax,eax
640027d5:	je     0x640027ea
640027d7:	push   edi
640027d8:	push   eax
640027d9:	mov    ecx,esi
640027db:	call   0x64002910
640027e0:	jmp    0x640027ea
640027e2:	push   eax
640027e3:	mov    ecx,esi
640027e5:	call   0x64002800
640027ea:	mov    eax,esi
640027ec:	mov    ecx,DWORD PTR [esp+0x10]
640027f0:	mov    DWORD PTR fs:0x0,ecx
640027f7:	pop    ecx
640027f8:	pop    edi
640027f9:	pop    esi
640027fa:	add    esp,0x10
640027fd:	ret    0x8
64002800:	push   ebx
64002801:	mov    ebx,DWORD PTR [esp+0x8]
64002805:	test   ebx,ebx
64002807:	push   ebp
64002808:	push   esi
64002809:	push   edi
6400280a:	mov    edi,ecx
6400280c:	je     0x64002884
6400280e:	call   DWORD PTR ds:0x64029008
64002814:	mov    ebp,DWORD PTR ds:0x6402203c
6400281a:	push   0x0
6400281c:	push   0x0
6400281e:	push   0xffffffff
64002820:	push   ebx
64002821:	push   0x0
64002823:	push   eax
64002824:	call   ebp
64002826:	mov    esi,eax
64002828:	sub    esi,0x1
6400282b:	test   esi,esi
6400282d:	jle    0x64002884
6400282f:	mov    eax,DWORD PTR [edi]
64002831:	mov    edx,DWORD PTR [eax-0x8]
64002834:	sub    eax,0x10
64002837:	mov    ecx,0x1
6400283c:	sub    ecx,DWORD PTR [eax+0xc]
6400283f:	sub    edx,esi
64002841:	or     ecx,edx
64002843:	jge    0x6400284d
64002845:	push   esi
64002846:	mov    ecx,edi
64002848:	call   0x64001e00
6400284d:	mov    eax,DWORD PTR [edi]
6400284f:	push   esi
64002850:	push   eax
64002851:	push   0xffffffff
64002853:	push   ebx
64002854:	push   0x0
64002856:	call   DWORD PTR ds:0x64029008
6400285c:	push   eax
6400285d:	call   ebp
6400285f:	mov    eax,DWORD PTR [edi]
64002861:	cmp    esi,DWORD PTR [eax-0x8]
64002864:	jg     0x6400287a
64002866:	mov    DWORD PTR [eax-0xc],esi
64002869:	mov    eax,DWORD PTR [edi]
6400286b:	mov    WORD PTR [eax+esi*2],0x0
64002871:	mov    eax,edi
64002873:	pop    edi
64002874:	pop    esi
64002875:	pop    ebp
64002876:	pop    ebx
64002877:	ret    0x4
6400287a:	push   0x80070057
6400287f:	call   0x64001040
64002884:	mov    ecx,edi
64002886:	call   0x64002a70
6400288b:	mov    eax,edi
6400288d:	pop    edi
6400288e:	pop    esi
6400288f:	pop    ebp
64002890:	pop    ebx
64002891:	ret    0x4
64002894:	int3   
64002895:	int3   
64002896:	int3   
64002897:	int3   
64002898:	int3   
64002899:	int3   
6400289a:	int3   
6400289b:	int3   
6400289c:	int3   
6400289d:	int3   
6400289e:	int3   
6400289f:	int3   
640028a0:	push   esi
640028a1:	mov    esi,DWORD PTR [esp+0x8]
640028a5:	mov    ecx,DWORD PTR [esi]
640028a7:	mov    eax,DWORD PTR [ecx]
640028a9:	mov    edx,DWORD PTR [eax+0x10]
640028ac:	push   edi
640028ad:	call   edx
640028af:	cmp    DWORD PTR [esi+0xc],0x0
640028b3:	lea    ecx,[esi+0xc]
640028b6:	jl     0x640028cc
640028b8:	cmp    eax,DWORD PTR [esi]
640028ba:	jne    0x640028cc
640028bc:	mov    edi,esi
640028be:	mov    eax,0x1
640028c3:	lock xadd DWORD PTR [ecx],eax
640028c7:	mov    eax,edi
640028c9:	pop    edi
640028ca:	pop    esi
640028cb:	ret    
640028cc:	mov    ecx,DWORD PTR [esi+0x4]
640028cf:	mov    edx,DWORD PTR [eax]
640028d1:	mov    edx,DWORD PTR [edx]
640028d3:	push   0x2
640028d5:	push   ecx
640028d6:	mov    ecx,eax
640028d8:	call   edx
640028da:	mov    edi,eax
640028dc:	test   edi,edi
640028de:	jne    0x640028e5
640028e0:	jmp    0x64001b50
640028e5:	mov    eax,DWORD PTR [esi+0x4]
640028e8:	mov    DWORD PTR [edi+0x4],eax
640028eb:	mov    eax,DWORD PTR [esi+0x4]
640028ee:	lea    eax,[eax+eax*1+0x2]
640028f2:	push   eax
640028f3:	add    esi,0x10
640028f6:	push   esi
640028f7:	push   eax
640028f8:	lea    ecx,[edi+0x10]
640028fb:	push   ecx
640028fc:	call   0x6401057a
64002901:	add    esp,0x10
64002904:	mov    eax,edi
64002906:	pop    edi
64002907:	pop    esi
64002908:	ret    
64002909:	int3   
6400290a:	int3   
6400290b:	int3   
6400290c:	int3   
6400290d:	int3   
6400290e:	int3   
6400290f:	int3   
64002910:	push   ebx
64002911:	push   esi
64002912:	mov    esi,DWORD PTR [esp+0x10]
64002916:	mov    eax,esi
64002918:	shr    eax,0x4
6400291b:	push   edi
6400291c:	mov    edi,DWORD PTR [esp+0x10]
64002920:	add    eax,0x1
64002923:	mov    ebx,ecx
64002925:	movzx  ecx,ax
64002928:	push   0x6
6400292a:	push   ecx
6400292b:	push   edi
6400292c:	call   DWORD PTR ds:0x64022034
64002932:	test   eax,eax
64002934:	je     0x64002947
64002936:	push   esi
64002937:	push   eax
64002938:	push   edi
64002939:	call   0x64001f30
6400293e:	mov    esi,eax
64002940:	add    esp,0xc
64002943:	test   esi,esi
64002945:	jne    0x6400294f
64002947:	pop    edi
64002948:	pop    esi
64002949:	xor    eax,eax
6400294b:	pop    ebx
6400294c:	ret    0x8
6400294f:	mov    eax,DWORD PTR [ebx]
64002951:	movzx  edi,WORD PTR [esi]
64002954:	sub    eax,0x10
64002957:	mov    edx,0x1
6400295c:	sub    edx,DWORD PTR [eax+0xc]
6400295f:	mov    eax,DWORD PTR [eax+0x8]
64002962:	sub    eax,edi
64002964:	or     edx,eax
64002966:	jge    0x64002970
64002968:	push   edi
64002969:	mov    ecx,ebx
6400296b:	call   0x64001e00
64002970:	movzx  eax,WORD PTR [esi]
64002973:	cmp    eax,0xffffffff
64002976:	push   ebp
64002977:	mov    ebp,DWORD PTR [ebx]
64002979:	lea    edx,[esi+0x2]
6400297c:	jne    0x64002995
6400297e:	mov    eax,edx
64002980:	lea    esi,[eax+0x2]
64002983:	mov    cx,WORD PTR [eax]
64002986:	add    eax,0x2
64002989:	test   cx,cx
6400298c:	jne    0x64002983
6400298e:	sub    eax,esi
64002990:	sar    eax,1
64002992:	add    eax,0x1
64002995:	lea    ecx,[eax+eax*1]
64002998:	push   ecx
64002999:	push   edx
6400299a:	lea    esi,[edi+edi*1]
6400299d:	push   esi
6400299e:	push   ebp
6400299f:	call   0x6401057a
640029a4:	push   eax
640029a5:	call   0x64001e90
640029aa:	add    esp,0x14
640029ad:	test   edi,edi
640029af:	pop    ebp
640029b0:	jl     0x640029cf
640029b2:	mov    eax,DWORD PTR [ebx]
640029b4:	cmp    edi,DWORD PTR [eax-0x8]
640029b7:	jg     0x640029cf
640029b9:	mov    DWORD PTR [eax-0xc],edi
640029bc:	mov    edx,DWORD PTR [ebx]
640029be:	pop    edi
640029bf:	mov    WORD PTR [esi+edx*1],0x0
640029c5:	pop    esi
640029c6:	mov    eax,0x1
640029cb:	pop    ebx
640029cc:	ret    0x8
640029cf:	push   0x80070057
640029d4:	call   0x64001040
640029d9:	int3   
640029da:	int3   
640029db:	int3   
640029dc:	int3   
640029dd:	int3   
640029de:	int3   
640029df:	int3   
640029e0:	push   ebx
640029e1:	push   ebp
640029e2:	push   esi
640029e3:	mov    esi,DWORD PTR [esp+0x10]
640029e7:	mov    ebp,ecx
640029e9:	mov    eax,DWORD PTR [ebp+0x0]
640029ec:	mov    ebx,DWORD PTR [eax-0xc]
640029ef:	mov    ecx,DWORD PTR [esp+0x14]
640029f3:	sub    esi,eax
640029f5:	mov    edx,0x1
640029fa:	sub    edx,DWORD PTR [eax-0x4]
640029fd:	mov    eax,DWORD PTR [eax-0x8]
64002a00:	push   edi
64002a01:	lea    edi,[ebx+ecx*1]
64002a04:	sub    eax,edi
64002a06:	sar    esi,1
64002a08:	or     edx,eax
64002a0a:	jge    0x64002a14
64002a0c:	push   edi
64002a0d:	mov    ecx,ebp
64002a0f:	call   0x64001e00
64002a14:	cmp    esi,ebx
64002a16:	mov    ecx,DWORD PTR [ebp+0x0]
64002a19:	ja     0x64002a22
64002a1b:	lea    edx,[ecx+esi*2]
64002a1e:	mov    DWORD PTR [esp+0x14],edx
64002a22:	mov    eax,DWORD PTR [esp+0x18]
64002a26:	mov    edx,DWORD PTR [esp+0x14]
64002a2a:	add    eax,eax
64002a2c:	push   eax
64002a2d:	push   edx
64002a2e:	push   eax
64002a2f:	lea    eax,[ecx+ebx*2]
64002a32:	push   eax
64002a33:	call   0x6401057a
64002a38:	add    esp,0x10
64002a3b:	test   edi,edi
64002a3d:	jl     0x64002a5a
64002a3f:	mov    eax,DWORD PTR [ebp+0x0]
64002a42:	cmp    edi,DWORD PTR [eax-0x8]
64002a45:	jg     0x64002a5a
64002a47:	mov    DWORD PTR [eax-0xc],edi
64002a4a:	mov    ecx,DWORD PTR [ebp+0x0]
64002a4d:	mov    WORD PTR [ecx+edi*2],0x0
64002a53:	pop    edi
64002a54:	pop    esi
64002a55:	pop    ebp
64002a56:	pop    ebx
64002a57:	ret    0x8
64002a5a:	push   0x80070057
64002a5f:	call   0x64001040
64002a64:	int3   
64002a65:	int3   
64002a66:	int3   
64002a67:	int3   
64002a68:	int3   
64002a69:	int3   
64002a6a:	int3   
64002a6b:	int3   
64002a6c:	int3   
64002a6d:	int3   
64002a6e:	int3   
64002a6f:	int3   
64002a70:	push   esi
64002a71:	mov    esi,ecx
64002a73:	mov    ecx,DWORD PTR [esi]
64002a75:	cmp    DWORD PTR [ecx-0xc],0x0
64002a79:	lea    eax,[ecx-0x10]
64002a7c:	push   edi
64002a7d:	mov    edi,DWORD PTR [eax]
64002a7f:	je     0x64002acf
64002a81:	cmp    DWORD PTR [eax+0xc],0x0
64002a85:	lea    edx,[eax+0xc]
64002a88:	jge    0x64002aab
64002a8a:	cmp    DWORD PTR [ecx-0x8],0x0
64002a8e:	jge    0x64002a9a
64002a90:	push   0x80070057
64002a95:	call   0x64001040
64002a9a:	mov    DWORD PTR [ecx-0xc],0x0
64002aa1:	mov    eax,DWORD PTR [esi]
64002aa3:	pop    edi
64002aa4:	mov    WORD PTR [eax],0x0
64002aa9:	pop    esi
64002aaa:	ret    
64002aab:	or     ecx,0xffffffff
64002aae:	lock xadd DWORD PTR [edx],ecx
64002ab2:	dec    ecx
64002ab3:	test   ecx,ecx
64002ab5:	jg     0x64002ac1
64002ab7:	mov    ecx,DWORD PTR [eax]
64002ab9:	mov    edx,DWORD PTR [ecx]
64002abb:	push   eax
64002abc:	mov    eax,DWORD PTR [edx+0x4]
64002abf:	call   eax
64002ac1:	mov    edx,DWORD PTR [edi]
64002ac3:	mov    eax,DWORD PTR [edx+0xc]
64002ac6:	mov    ecx,edi
64002ac8:	call   eax
64002aca:	add    eax,0x10
64002acd:	mov    DWORD PTR [esi],eax
64002acf:	pop    edi
64002ad0:	pop    esi
64002ad1:	ret    
64002ad2:	int3   
64002ad3:	int3   
64002ad4:	int3   
64002ad5:	int3   
64002ad6:	int3   
64002ad7:	int3   
64002ad8:	int3   
64002ad9:	int3   
64002ada:	int3   
64002adb:	int3   
64002adc:	int3   
64002add:	int3   
64002ade:	int3   
64002adf:	int3   
64002ae0:	push   ebx
64002ae1:	mov    ebx,DWORD PTR [esp+0xc]
64002ae5:	test   ebx,ebx
64002ae7:	push   ebp
64002ae8:	mov    ebp,ecx
64002aea:	jne    0x64002af6
64002aec:	call   0x64002a70
64002af1:	pop    ebp
64002af2:	pop    ebx
64002af3:	ret    0x8
64002af6:	push   esi
64002af7:	mov    esi,DWORD PTR [esp+0x10]
64002afb:	test   esi,esi
64002afd:	jne    0x64002b09
64002aff:	push   0x80070057
64002b04:	call   0x64001040
64002b09:	mov    eax,DWORD PTR [ebp+0x0]
64002b0c:	mov    edx,DWORD PTR [eax-0x8]
64002b0f:	mov    ecx,0x1
64002b14:	sub    ecx,DWORD PTR [eax-0x4]
64002b17:	sub    esi,eax
64002b19:	sub    edx,ebx
64002b1b:	sar    esi,1
64002b1d:	or     ecx,edx
64002b1f:	push   edi
64002b20:	mov    edi,DWORD PTR [eax-0xc]
64002b23:	jge    0x64002b2d
64002b25:	push   ebx
64002b26:	mov    ecx,ebp
64002b28:	call   0x64001e00
64002b2d:	mov    eax,DWORD PTR [ebp+0x0]
64002b30:	cmp    esi,edi
64002b32:	lea    edi,[ebx+ebx*1]
64002b35:	push   edi
64002b36:	ja     0x64002b45
64002b38:	lea    ecx,[eax+esi*2]
64002b3b:	push   ecx
64002b3c:	push   edi
64002b3d:	push   eax
64002b3e:	call   0x640105f5
64002b43:	jmp    0x64002b51
64002b45:	mov    edx,DWORD PTR [esp+0x18]
64002b49:	push   edx
64002b4a:	push   edi
64002b4b:	push   eax
64002b4c:	call   0x6401057a
64002b51:	add    esp,0x10
64002b54:	test   ebx,ebx
64002b56:	jl     0x64002b73
64002b58:	mov    eax,DWORD PTR [ebp+0x0]
64002b5b:	cmp    ebx,DWORD PTR [eax-0x8]
64002b5e:	jg     0x64002b73
64002b60:	mov    DWORD PTR [eax-0xc],ebx
64002b63:	mov    eax,DWORD PTR [ebp+0x0]
64002b66:	mov    WORD PTR [edi+eax*1],0x0
64002b6c:	pop    edi
64002b6d:	pop    esi
64002b6e:	pop    ebp
64002b6f:	pop    ebx
64002b70:	ret    0x8
64002b73:	push   0x80070057
64002b78:	call   0x64001040
64002b7d:	int3   
64002b7e:	int3   
64002b7f:	int3   
64002b80:	push   esi
64002b81:	mov    esi,DWORD PTR [esp+0x8]
64002b85:	test   esi,esi
64002b87:	je     0x64002bb8
64002b89:	mov    eax,DWORD PTR [esp+0xc]
64002b8d:	test   eax,eax
64002b8f:	je     0x64002bb8
64002b91:	mov    ecx,DWORD PTR [esp+0x10]
64002b95:	mov    edx,DWORD PTR [esp+0x14]
64002b99:	push   0x0
64002b9b:	push   0x0
64002b9d:	push   ecx
64002b9e:	push   esi
64002b9f:	push   0xffffffff
64002ba1:	push   eax
64002ba2:	push   0x0
64002ba4:	push   edx
64002ba5:	mov    BYTE PTR [esi],0x0
64002ba8:	call   DWORD PTR ds:0x64022024
64002bae:	neg    eax
64002bb0:	sbb    eax,eax
64002bb2:	and    eax,esi
64002bb4:	pop    esi
64002bb5:	ret    0x10
64002bb8:	xor    eax,eax
64002bba:	pop    esi
64002bbb:	ret    0x10
64002bbe:	int3   
64002bbf:	int3   
64002bc0:	mov    eax,DWORD PTR [esi]
64002bc2:	test   eax,eax
64002bc4:	je     0x64002bd3
64002bc6:	push   eax
64002bc7:	call   DWORD PTR ds:0x64022000
64002bcd:	mov    DWORD PTR [esi],0x0
64002bd3:	ret    
64002bd4:	int3   
64002bd5:	int3   
64002bd6:	int3   
64002bd7:	int3   
64002bd8:	int3   
64002bd9:	int3   
64002bda:	int3   
64002bdb:	int3   
64002bdc:	int3   
64002bdd:	int3   
64002bde:	int3   
64002bdf:	int3   
64002be0:	push   ecx
64002be1:	mov    eax,DWORD PTR [edi]
64002be3:	lea    ecx,[esp]
64002be6:	push   ecx
64002be7:	mov    ecx,DWORD PTR [esp+0xc]
64002beb:	push   esi
64002bec:	add    eax,eax
64002bee:	lea    edx,[esp+0x14]
64002bf2:	push   edx
64002bf3:	mov    DWORD PTR [esp+0xc],eax
64002bf7:	mov    eax,DWORD PTR [esp+0x18]
64002bfb:	push   0x0
64002bfd:	mov    DWORD PTR [edi],0x0
64002c03:	mov    edx,DWORD PTR [ecx]
64002c05:	push   eax
64002c06:	push   edx
64002c07:	call   DWORD PTR ds:0x6402200c
64002c0d:	test   eax,eax
64002c0f:	jne    0x64002c4e
64002c11:	mov    eax,DWORD PTR [esp+0xc]
64002c15:	cmp    eax,0x1
64002c18:	je     0x64002c1f
64002c1a:	cmp    eax,0x2
64002c1d:	jne    0x64002c3a
64002c1f:	test   esi,esi
64002c21:	mov    eax,DWORD PTR [esp]
64002c24:	je     0x64002c48
64002c26:	test   eax,eax
64002c28:	je     0x64002c43
64002c2a:	test   al,0x1
64002c2c:	jne    0x64002c3a
64002c2e:	mov    ecx,eax
64002c30:	shr    ecx,1
64002c32:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
64002c38:	je     0x64002c48
64002c3a:	mov    eax,0xd
64002c3f:	pop    ecx
64002c40:	ret    0x8
64002c43:	mov    WORD PTR [esi],0x0
64002c48:	shr    eax,1
64002c4a:	mov    DWORD PTR [edi],eax
64002c4c:	xor    eax,eax
64002c4e:	pop    ecx
64002c4f:	ret    0x8
64002c52:	int3   
64002c53:	int3   
64002c54:	int3   
64002c55:	int3   
64002c56:	int3   
64002c57:	int3   
64002c58:	int3   
64002c59:	int3   
64002c5a:	int3   
64002c5b:	int3   
64002c5c:	int3   
64002c5d:	int3   
64002c5e:	int3   
64002c5f:	int3   
64002c60:	ret    
64002c61:	int3   
64002c62:	int3   
64002c63:	int3   
64002c64:	int3   
64002c65:	int3   
64002c66:	int3   
64002c67:	int3   
64002c68:	int3   
64002c69:	int3   
64002c6a:	int3   
64002c6b:	int3   
64002c6c:	int3   
64002c6d:	int3   
64002c6e:	int3   
64002c6f:	int3   
64002c70:	mov    eax,DWORD PTR [esp+0xc]
64002c74:	cmp    eax,0x4
64002c77:	mov    ecx,DWORD PTR [esp+0x8]
64002c7b:	mov    edx,DWORD PTR [esp+0x4]
64002c7f:	push   esi
64002c80:	push   edi
64002c81:	jb     0x64002c97
64002c83:	mov    esi,DWORD PTR [edx]
64002c85:	cmp    esi,DWORD PTR [ecx]
64002c87:	jne    0x64002c9b
64002c89:	sub    eax,0x4
64002c8c:	add    ecx,0x4
64002c8f:	add    edx,0x4
64002c92:	cmp    eax,0x4
64002c95:	jae    0x64002c83
64002c97:	test   eax,eax
64002c99:	je     0x64002cf9
64002c9b:	movzx  esi,BYTE PTR [edx]
64002c9e:	movzx  edi,BYTE PTR [ecx]
64002ca1:	sub    esi,edi
64002ca3:	jne    0x64002cea
64002ca5:	sub    eax,0x1
64002ca8:	add    ecx,0x1
64002cab:	add    edx,0x1
64002cae:	test   eax,eax
64002cb0:	je     0x64002cf9
64002cb2:	movzx  esi,BYTE PTR [edx]
64002cb5:	movzx  edi,BYTE PTR [ecx]
64002cb8:	sub    esi,edi
64002cba:	jne    0x64002cea
64002cbc:	sub    eax,0x1
64002cbf:	add    ecx,0x1
64002cc2:	add    edx,0x1
64002cc5:	test   eax,eax
64002cc7:	je     0x64002cf9
64002cc9:	movzx  esi,BYTE PTR [edx]
64002ccc:	movzx  edi,BYTE PTR [ecx]
64002ccf:	sub    esi,edi
64002cd1:	jne    0x64002cea
64002cd3:	sub    eax,0x1
64002cd6:	add    ecx,0x1
64002cd9:	add    edx,0x1
64002cdc:	test   eax,eax
64002cde:	je     0x64002cf9
64002ce0:	movzx  esi,BYTE PTR [edx]
64002ce3:	movzx  eax,BYTE PTR [ecx]
64002ce6:	sub    esi,eax
64002ce8:	je     0x64002cf9
64002cea:	test   esi,esi
64002cec:	mov    eax,0x1
64002cf1:	jg     0x64002cfb
64002cf3:	pop    edi
64002cf4:	or     eax,0xffffffff
64002cf7:	pop    esi
64002cf8:	ret    
64002cf9:	xor    eax,eax
64002cfb:	pop    edi
64002cfc:	pop    esi
64002cfd:	ret    
64002cfe:	int3   
64002cff:	int3   
64002d00:	push   0xffffffff
64002d02:	push   0x640208e8
64002d07:	mov    eax,fs:0x0
64002d0d:	push   eax
64002d0e:	push   ecx
64002d0f:	push   esi
64002d10:	mov    eax,ds:0x64029038
64002d15:	xor    eax,esp
64002d17:	push   eax
64002d18:	lea    eax,[esp+0xc]
64002d1c:	mov    fs:0x0,eax
64002d22:	mov    esi,ecx
64002d24:	mov    DWORD PTR [esp+0x8],esi
64002d28:	call   0x6401046c
64002d2d:	xor    eax,eax
64002d2f:	mov    DWORD PTR [esp+0x14],eax
64002d33:	lea    ecx,[esi+0xc]
64002d36:	mov    DWORD PTR [esi],0x64022310
64002d3c:	push   0xffffffff
64002d3e:	mov    DWORD PTR [ecx+0x14],eax
64002d41:	mov    DWORD PTR [ecx+0x18],0xf
64002d48:	push   eax
64002d49:	mov    BYTE PTR [ecx+0x4],al
64002d4c:	mov    eax,DWORD PTR [esp+0x24]
64002d50:	push   eax
64002d51:	call   0x640017a0
64002d56:	mov    eax,esi
64002d58:	mov    ecx,DWORD PTR [esp+0xc]
64002d5c:	mov    DWORD PTR fs:0x0,ecx
64002d63:	pop    ecx
64002d64:	pop    esi
64002d65:	add    esp,0x10
64002d68:	ret    0x4
64002d6b:	int3   
64002d6c:	int3   
64002d6d:	int3   
64002d6e:	int3   
64002d6f:	int3   
64002d70:	cmp    DWORD PTR [ecx+0x24],0x10
64002d74:	jb     0x64002d7a
64002d76:	mov    eax,DWORD PTR [ecx+0x10]
64002d79:	ret    
64002d7a:	lea    eax,[ecx+0x10]
64002d7d:	ret    
64002d7e:	int3   
64002d7f:	int3   
64002d80:	push   esi
64002d81:	mov    esi,ecx
64002d83:	mov    DWORD PTR [esi],0x64022310
64002d89:	cmp    DWORD PTR [esi+0x24],0x10
64002d8d:	jb     0x64002d9b
64002d8f:	mov    eax,DWORD PTR [esi+0x10]
64002d92:	push   eax
64002d93:	call   0x64010422
64002d98:	add    esp,0x4
64002d9b:	xor    eax,eax
64002d9d:	mov    DWORD PTR [esi+0x24],0xf
64002da4:	mov    DWORD PTR [esi+0x20],eax
64002da7:	mov    ecx,esi
64002da9:	mov    BYTE PTR [esi+0x10],al
64002dac:	call   0x6401053b
64002db1:	test   BYTE PTR [esp+0x8],0x1
64002db6:	je     0x64002dc1
64002db8:	push   esi
64002db9:	call   0x64010422
64002dbe:	add    esp,0x4
64002dc1:	mov    eax,esi
64002dc3:	pop    esi
64002dc4:	ret    0x4
64002dc7:	int3   
64002dc8:	int3   
64002dc9:	int3   
64002dca:	int3   
64002dcb:	int3   
64002dcc:	int3   
64002dcd:	int3   
64002dce:	int3   
64002dcf:	int3   
64002dd0:	push   esi
64002dd1:	mov    esi,ecx
64002dd3:	mov    DWORD PTR [esi],0x64022310
64002dd9:	cmp    DWORD PTR [esi+0x24],0x10
64002ddd:	jb     0x64002deb
64002ddf:	mov    eax,DWORD PTR [esi+0x10]
64002de2:	push   eax
64002de3:	call   0x64010422
64002de8:	add    esp,0x4
64002deb:	xor    eax,eax
64002ded:	mov    DWORD PTR [esi+0x24],0xf
64002df4:	mov    DWORD PTR [esi+0x20],eax
64002df7:	mov    BYTE PTR [esi+0x10],al
64002dfa:	mov    ecx,esi
64002dfc:	pop    esi
64002dfd:	jmp    0x6401053b
64002e02:	int3   
64002e03:	int3   
64002e04:	int3   
64002e05:	int3   
64002e06:	int3   
64002e07:	int3   
64002e08:	int3   
64002e09:	int3   
64002e0a:	int3   
64002e0b:	int3   
64002e0c:	int3   
64002e0d:	int3   
64002e0e:	int3   
64002e0f:	int3   
64002e10:	mov    eax,DWORD PTR [esp+0x4]
64002e14:	push   esi
64002e15:	push   eax
64002e16:	mov    esi,ecx
64002e18:	call   0x64002e30
64002e1d:	mov    DWORD PTR [esi],0x64022328
64002e23:	mov    eax,esi
64002e25:	pop    esi
64002e26:	ret    0x4
64002e29:	int3   
64002e2a:	int3   
64002e2b:	int3   
64002e2c:	int3   
64002e2d:	int3   
64002e2e:	int3   
64002e2f:	int3   
64002e30:	push   0xffffffff
64002e32:	push   0x640208b8
64002e37:	mov    eax,fs:0x0
64002e3d:	push   eax
64002e3e:	push   ecx
64002e3f:	push   esi
64002e40:	push   edi
64002e41:	mov    eax,ds:0x64029038
64002e46:	xor    eax,esp
64002e48:	push   eax
64002e49:	lea    eax,[esp+0x10]
64002e4d:	mov    fs:0x0,eax
64002e53:	mov    esi,ecx
64002e55:	mov    DWORD PTR [esp+0xc],esi
64002e59:	mov    edi,DWORD PTR [esp+0x20]
64002e5d:	push   edi
64002e5e:	call   0x640104e3
64002e63:	xor    edx,edx
64002e65:	mov    DWORD PTR [esp+0x18],edx
64002e69:	push   0xffffffff
64002e6b:	lea    ecx,[esi+0xc]
64002e6e:	mov    DWORD PTR [esi],0x64022310
64002e74:	lea    eax,[edi+0xc]
64002e77:	push   edx
64002e78:	mov    DWORD PTR [ecx+0x18],0xf
64002e7f:	mov    DWORD PTR [ecx+0x14],edx
64002e82:	push   eax
64002e83:	mov    BYTE PTR [ecx+0x4],dl
64002e86:	call   0x640017a0
64002e8b:	mov    eax,esi
64002e8d:	mov    ecx,DWORD PTR [esp+0x10]
64002e91:	mov    DWORD PTR fs:0x0,ecx
64002e98:	pop    ecx
64002e99:	pop    edi
64002e9a:	pop    esi
64002e9b:	add    esp,0x10
64002e9e:	ret    0x4
64002ea1:	int3   
64002ea2:	int3   
64002ea3:	int3   
64002ea4:	int3   
64002ea5:	int3   
64002ea6:	int3   
64002ea7:	int3   
64002ea8:	int3   
64002ea9:	int3   
64002eaa:	int3   
64002eab:	int3   
64002eac:	int3   
64002ead:	int3   
64002eae:	int3   
64002eaf:	int3   
64002eb0:	sub    esp,0x6c
64002eb3:	mov    eax,ds:0x64029038
64002eb8:	xor    eax,esp
64002eba:	mov    DWORD PTR [esp+0x68],eax
64002ebe:	mov    eax,DWORD PTR [esp+0x74]
64002ec2:	movzx  ecx,BYTE PTR [eax+0xf]
64002ec6:	movzx  edx,BYTE PTR [eax+0xe]
64002eca:	push   esi
64002ecb:	push   ecx
64002ecc:	movzx  ecx,BYTE PTR [eax+0xd]
64002ed0:	push   edx
64002ed1:	movzx  edx,BYTE PTR [eax+0xc]
64002ed5:	push   ecx
64002ed6:	movzx  ecx,BYTE PTR [eax+0xb]
64002eda:	push   edx
64002edb:	movzx  edx,BYTE PTR [eax+0xa]
64002edf:	mov    esi,DWORD PTR [esp+0x84]
64002ee6:	push   ecx
64002ee7:	movzx  ecx,BYTE PTR [eax+0x9]
64002eeb:	push   edx
64002eec:	movzx  edx,BYTE PTR [eax+0x8]
64002ef0:	push   ecx
64002ef1:	movzx  ecx,WORD PTR [eax+0x6]
64002ef5:	push   edx
64002ef6:	movzx  edx,WORD PTR [eax+0x4]
64002efa:	mov    eax,DWORD PTR [eax]
64002efc:	push   ecx
64002efd:	push   edx
64002efe:	push   eax
64002eff:	push   0x640245b0
64002f04:	push   0x32
64002f06:	push   0x640245f0
64002f0b:	mov    DWORD PTR [esp+0x3c],0x0
64002f13:	call   0x64004730
64002f18:	add    esp,0xc
64002f1b:	push   eax
64002f1c:	lea    ecx,[esp+0x38]
64002f20:	push   0x64
64002f22:	push   ecx
64002f23:	call   0x640117cb
64002f28:	add    esp,0x38
64002f2b:	lea    edx,[esp+0x8]
64002f2f:	push   edx
64002f30:	mov    ecx,esi
64002f32:	call   0x64004490
64002f37:	mov    ecx,DWORD PTR [esp+0x6c]
64002f3b:	mov    eax,esi
64002f3d:	pop    esi
64002f3e:	xor    ecx,esp
64002f40:	call   0x64010c1e
64002f45:	add    esp,0x6c
64002f48:	ret    
64002f49:	int3   
64002f4a:	int3   
64002f4b:	int3   
64002f4c:	int3   
64002f4d:	int3   
64002f4e:	int3   
64002f4f:	int3   
64002f50:	push   0xffffffff
64002f52:	push   0x64020e28
64002f57:	mov    eax,fs:0x0
64002f5d:	push   eax
64002f5e:	sub    esp,0x24
64002f61:	mov    eax,ds:0x64029038
64002f66:	xor    eax,esp
64002f68:	mov    DWORD PTR [esp+0x20],eax
64002f6c:	push   ebx
64002f6d:	push   ebp
64002f6e:	push   edi
64002f6f:	mov    eax,ds:0x64029038
64002f74:	xor    eax,esp
64002f76:	push   eax
64002f77:	lea    eax,[esp+0x34]
64002f7b:	mov    fs:0x0,eax
64002f81:	mov    DWORD PTR [esp+0x3c],0x0
64002f89:	call   DWORD PTR ds:0x64029008
64002f8f:	mov    eax,ds:0x64022ac4
64002f94:	mov    ecx,DWORD PTR ds:0x64022ac8
64002f9a:	mov    edx,DWORD PTR ds:0x64022acc
64002fa0:	mov    DWORD PTR [esp+0x20],eax
64002fa4:	mov    eax,ds:0x64022ad0
64002fa9:	mov    DWORD PTR [esp+0x2c],eax
64002fad:	mov    eax,DWORD PTR [esp+0x44]
64002fb1:	mov    DWORD PTR [esp+0x24],ecx
64002fb5:	mov    DWORD PTR [esp+0x28],edx
64002fb9:	cmp    DWORD PTR [eax-0xc],0x0
64002fbd:	jle    0x64002fdd
64002fbf:	lea    ebx,[esp+0x44]
64002fc3:	call   0x64004660
64002fc8:	mov    edi,ebx
64002fca:	call   0x64004d00
64002fcf:	call   0x640045e0
64002fd4:	call   0x64004d00
64002fd9:	mov    eax,DWORD PTR [esp+0x44]
64002fdd:	cmp    DWORD PTR [eax-0x4],0x1
64002fe1:	jle    0x64002ff4
64002fe3:	mov    ecx,DWORD PTR [eax-0xc]
64002fe6:	push   ecx
64002fe7:	lea    ecx,[esp+0x48]
64002feb:	call   0x64001950
64002ff0:	mov    eax,DWORD PTR [esp+0x44]
64002ff4:	lea    edx,[esp+0x20]
64002ff8:	push   edx
64002ff9:	push   eax
64002ffa:	call   DWORD PTR ds:0x640221ac
64003000:	test   eax,eax
64003002:	je     0x64003021
64003004:	mov    eax,ds:0x64022ad0
64003009:	mov    edi,DWORD PTR ds:0x64022ac4
6400300f:	mov    ebx,DWORD PTR ds:0x64022ac8
64003015:	mov    ebp,DWORD PTR ds:0x64022acc
6400301b:	mov    DWORD PTR [esp+0x1c],eax
6400301f:	jmp    0x64003035
64003021:	mov    edx,DWORD PTR [esp+0x2c]
64003025:	mov    edi,DWORD PTR [esp+0x20]
64003029:	mov    ebx,DWORD PTR [esp+0x24]
6400302d:	mov    ebp,DWORD PTR [esp+0x28]
64003031:	mov    DWORD PTR [esp+0x1c],edx
64003035:	mov    DWORD PTR [esp+0x3c],0xffffffff
6400303d:	mov    eax,DWORD PTR [esp+0x44]
64003041:	add    eax,0xfffffff0
64003044:	or     edx,0xffffffff
64003047:	lea    ecx,[eax+0xc]
6400304a:	lock xadd DWORD PTR [ecx],edx
6400304e:	dec    edx
6400304f:	test   edx,edx
64003051:	jg     0x6400305d
64003053:	mov    ecx,DWORD PTR [eax]
64003055:	mov    edx,DWORD PTR [ecx]
64003057:	push   eax
64003058:	mov    eax,DWORD PTR [edx+0x4]
6400305b:	call   eax
6400305d:	mov    ecx,DWORD PTR [esp+0x1c]
64003061:	mov    DWORD PTR [esi],edi
64003063:	mov    DWORD PTR [esi+0x4],ebx
64003066:	mov    DWORD PTR [esi+0x8],ebp
64003069:	mov    eax,esi
6400306b:	mov    DWORD PTR [esi+0xc],ecx
6400306e:	mov    ecx,DWORD PTR [esp+0x34]
64003072:	mov    DWORD PTR fs:0x0,ecx
64003079:	pop    ecx
6400307a:	pop    edi
6400307b:	pop    ebp
6400307c:	pop    ebx
6400307d:	mov    ecx,DWORD PTR [esp+0x20]
64003081:	xor    ecx,esp
64003083:	call   0x64010c1e
64003088:	add    esp,0x30
6400308b:	ret    
6400308c:	int3   
6400308d:	int3   
6400308e:	int3   
6400308f:	int3   
64003090:	push   ebp
64003091:	mov    ebp,esp
64003093:	sub    esp,0x18
64003096:	mov    eax,ds:0x64029038
6400309b:	xor    eax,ebp
6400309d:	mov    DWORD PTR [ebp-0x4],eax
640030a0:	mov    eax,DWORD PTR [ebp+0x8]
640030a3:	push   ebx
640030a4:	push   esi
640030a5:	push   edi
640030a6:	mov    DWORD PTR [ebp-0x14],eax
640030a9:	mov    DWORD PTR [ebp-0x18],0x0
640030b0:	call   DWORD PTR ds:0x64029008
640030b6:	movzx  ecx,BYTE PTR [ebp+0xc]
640030ba:	push   ecx
640030bb:	push   0x64024624
640030c0:	push   0x6
640030c2:	push   0x64024648
640030c7:	mov    ebx,eax
640030c9:	call   0x64004730
640030ce:	add    esp,0xc
640030d1:	push   eax
640030d2:	lea    edx,[ebp-0x10]
640030d5:	push   edx
640030d6:	call   0x64011750
640030db:	add    esp,0xc
640030de:	lea    eax,[ebp-0x10]
640030e1:	push   eax
640030e2:	call   DWORD PTR ds:0x6402208c
640030e8:	mov    esi,eax
640030ea:	add    esi,0x1
640030ed:	cmp    esi,0x3fffffff
640030f3:	jg     0x64003121
640030f5:	lea    eax,[esi+esi*1]
640030f8:	call   0x640113a0
640030fd:	mov    edi,esp
640030ff:	test   edi,edi
64003101:	je     0x64003121
64003103:	push   esi
64003104:	push   edi
64003105:	push   0xffffffff
64003107:	lea    ecx,[ebp-0x10]
6400310a:	push   ecx
6400310b:	push   0x0
6400310d:	push   ebx
6400310e:	mov    WORD PTR [edi],0x0
64003113:	call   DWORD PTR ds:0x6402203c
64003119:	neg    eax
6400311b:	sbb    eax,eax
6400311d:	and    eax,edi
6400311f:	jmp    0x64003123
64003121:	xor    eax,eax
64003123:	mov    esi,DWORD PTR [ebp-0x14]
64003126:	push   eax
64003127:	mov    ecx,esi
64003129:	call   0x64002590
6400312e:	mov    eax,esi
64003130:	lea    esp,[ebp-0x24]
64003133:	pop    edi
64003134:	pop    esi
64003135:	pop    ebx
64003136:	mov    ecx,DWORD PTR [ebp-0x4]
64003139:	xor    ecx,ebp
6400313b:	call   0x64010c1e
64003140:	mov    esp,ebp
64003142:	pop    ebp
64003143:	ret    
64003144:	int3   
64003145:	int3   
64003146:	int3   
64003147:	int3   
64003148:	int3   
64003149:	int3   
6400314a:	int3   
6400314b:	int3   
6400314c:	int3   
6400314d:	int3   
6400314e:	int3   
6400314f:	int3   
64003150:	push   0xffffffff
64003152:	push   0x64021a49
64003157:	mov    eax,fs:0x0
6400315d:	push   eax
6400315e:	sub    esp,0x20
64003161:	push   ebx
64003162:	push   ebp
64003163:	push   esi
64003164:	push   edi
64003165:	mov    eax,ds:0x64029038
6400316a:	xor    eax,esp
6400316c:	push   eax
6400316d:	lea    eax,[esp+0x34]
64003171:	mov    fs:0x0,eax
64003177:	xor    ebx,ebx
64003179:	mov    DWORD PTR [esp+0x3c],ebx
6400317d:	mov    DWORD PTR [esp+0x18],ebx
64003181:	mov    eax,ds:0x6402a4e0
64003186:	mov    edx,DWORD PTR [eax+0xc]
64003189:	mov    ecx,0x6402a4e0
6400318e:	call   edx
64003190:	mov    edi,DWORD PTR [esp+0x44]
64003194:	add    eax,0x10
64003197:	mov    DWORD PTR [edi],eax
64003199:	mov    esi,DWORD PTR [esp+0x48]
6400319d:	mov    DWORD PTR [esp+0x3c],ebx
640031a1:	mov    eax,DWORD PTR [esi]
640031a3:	mov    ecx,0x1
640031a8:	sub    eax,0x10
640031ab:	cmp    DWORD PTR [eax+0xc],ecx
640031ae:	mov    DWORD PTR [esp+0x18],ecx
640031b2:	jle    0x640031bf
640031b4:	mov    eax,DWORD PTR [eax+0x4]
640031b7:	push   eax
640031b8:	mov    ecx,esi
640031ba:	call   0x64001950
640031bf:	mov    ebp,DWORD PTR [esi]
640031c1:	movzx  eax,WORD PTR [ebp+0x0]
640031c5:	cmp    ax,bx
640031c8:	je     0x64003469
640031ce:	cmp    ax,0x41
640031d2:	jb     0x640031de
640031d4:	cmp    ax,0x5a
640031d8:	jbe    0x6400340f
640031de:	cmp    ax,0x61
640031e2:	jb     0x640031ee
640031e4:	cmp    ax,0x7a
640031e8:	jbe    0x6400340f
640031ee:	cmp    ax,0x30
640031f2:	jb     0x64003209
640031f4:	cmp    ax,0x39
640031f8:	ja     0x64003209
640031fa:	movzx  ecx,BYTE PTR [ebp+0x0]
640031fe:	push   ecx
640031ff:	call   0x64004520
64003204:	jmp    0x64003459
64003209:	cmp    ax,0x20
6400320d:	jne    0x6400325b
6400320f:	mov    eax,DWORD PTR [edi]
64003211:	mov    ebx,DWORD PTR [eax-0xc]
64003214:	mov    ecx,0x1
64003219:	sub    ecx,DWORD PTR [eax-0x4]
6400321c:	mov    eax,DWORD PTR [eax-0x8]
6400321f:	lea    esi,[ebx+0x1]
64003222:	sub    eax,esi
64003224:	or     eax,ecx
64003226:	jge    0x64003230
64003228:	push   esi
64003229:	mov    ecx,edi
6400322b:	call   0x64001e00
64003230:	test   esi,esi
64003232:	mov    eax,DWORD PTR [edi]
64003234:	mov    WORD PTR [eax+ebx*2],0x2b
6400323a:	jl     0x6400347f
64003240:	mov    eax,DWORD PTR [edi]
64003242:	cmp    esi,DWORD PTR [eax-0x8]
64003245:	jg     0x6400347f
6400324b:	mov    DWORD PTR [eax-0xc],esi
6400324e:	mov    edx,DWORD PTR [edi]
64003250:	mov    WORD PTR [edx+esi*2],0x0
64003256:	jmp    0x64003459
6400325b:	cmp    ax,0x2d
6400325f:	je     0x6400340f
64003265:	cmp    ax,0x5f
64003269:	je     0x6400340f
6400326f:	cmp    ax,0x2e
64003273:	je     0x6400340f
64003279:	cmp    ax,0x21
6400327d:	je     0x6400340f
64003283:	cmp    ax,0x7e
64003287:	je     0x6400340f
6400328d:	cmp    ax,0x2a
64003291:	je     0x6400340f
64003297:	cmp    ax,0x27
6400329b:	je     0x6400340f
640032a1:	cmp    ax,0x28
640032a5:	je     0x6400340f
640032ab:	cmp    ax,0x29
640032af:	je     0x6400340f
640032b5:	cmp    ax,0x7f
640032b9:	ja     0x640032f0
640032bb:	movzx  eax,BYTE PTR [ebp+0x0]
640032bf:	push   eax
640032c0:	lea    ecx,[esp+0x20]
640032c4:	push   ecx
640032c5:	call   0x64003090
640032ca:	add    esp,0x8
640032cd:	push   eax
640032ce:	mov    ecx,edi
640032d0:	mov    DWORD PTR [esp+0x40],0x1
640032d8:	call   0x64002640
640032dd:	lea    ecx,[esp+0x1c]
640032e1:	mov    BYTE PTR [esp+0x3c],0x0
640032e6:	call   0x64001680
640032eb:	jmp    0x64003459
640032f0:	cmp    ax,0x7ff
640032f4:	ja     0x64003365
640032f6:	shr    eax,0x6
640032f9:	or     eax,0xffffffc0
640032fc:	push   eax
640032fd:	lea    edx,[esp+0x24]
64003301:	push   edx
64003302:	call   0x64003090
64003307:	add    esp,0x8
6400330a:	push   eax
6400330b:	mov    ecx,edi
6400330d:	mov    DWORD PTR [esp+0x40],0x2
64003315:	call   0x64002640
6400331a:	lea    ecx,[esp+0x20]
6400331e:	mov    BYTE PTR [esp+0x3c],0x0
64003323:	call   0x64001680
64003328:	movzx  eax,BYTE PTR [ebp+0x0]
6400332c:	and    eax,0xffffff3f
64003331:	or     eax,0xffffff80
64003334:	push   eax
64003335:	lea    ecx,[esp+0x28]
64003339:	push   ecx
6400333a:	call   0x64003090
6400333f:	add    esp,0x8
64003342:	push   eax
64003343:	mov    ecx,edi
64003345:	mov    DWORD PTR [esp+0x40],0x3
6400334d:	call   0x64002640
64003352:	lea    ecx,[esp+0x24]
64003356:	mov    BYTE PTR [esp+0x3c],0x0
6400335b:	call   0x64001680
64003360:	jmp    0x64003459
64003365:	shr    ax,0xc
64003369:	lea    edx,[esp+0x28]
6400336d:	or     eax,0xffffffe0
64003370:	push   eax
64003371:	push   edx
64003372:	call   0x64003090
64003377:	add    esp,0x8
6400337a:	push   eax
6400337b:	mov    ecx,edi
6400337d:	mov    DWORD PTR [esp+0x40],0x4
64003385:	call   0x64002640
6400338a:	lea    ecx,[esp+0x28]
6400338e:	mov    BYTE PTR [esp+0x3c],0x0
64003393:	call   0x64001680
64003398:	movzx  eax,WORD PTR [ebp+0x0]
6400339c:	shr    ax,0x6
640033a0:	lea    ecx,[esp+0x2c]
640033a4:	and    eax,0xffffff3f
640033a9:	or     eax,0xffffff80
640033ac:	push   eax
640033ad:	push   ecx
640033ae:	call   0x64003090
640033b3:	add    esp,0x8
640033b6:	push   eax
640033b7:	mov    ecx,edi
640033b9:	mov    DWORD PTR [esp+0x40],0x5
640033c1:	call   0x64002640
640033c6:	lea    ecx,[esp+0x2c]
640033ca:	mov    BYTE PTR [esp+0x3c],0x0
640033cf:	call   0x64001680
640033d4:	movzx  edx,BYTE PTR [ebp+0x0]
640033d8:	and    edx,0xffffff3f
640033de:	or     edx,0xffffff80
640033e1:	push   edx
640033e2:	lea    eax,[esp+0x34]
640033e6:	push   eax
640033e7:	call   0x64003090
640033ec:	add    esp,0x8
640033ef:	push   eax
640033f0:	mov    ecx,edi
640033f2:	mov    DWORD PTR [esp+0x40],0x6
640033fa:	call   0x64002640
640033ff:	lea    ecx,[esp+0x30]
64003403:	mov    BYTE PTR [esp+0x3c],0x0
64003408:	call   0x64001680
6400340d:	jmp    0x64003459
6400340f:	mov    cl,BYTE PTR [ebp+0x0]
64003412:	mov    eax,DWORD PTR [edi]
64003414:	mov    ebx,DWORD PTR [eax-0xc]
64003417:	mov    BYTE PTR [esp+0x14],cl
6400341b:	mov    ecx,0x1
64003420:	sub    ecx,DWORD PTR [eax-0x4]
64003423:	mov    eax,DWORD PTR [eax-0x8]
64003426:	lea    esi,[ebx+0x1]
64003429:	sub    eax,esi
6400342b:	or     eax,ecx
6400342d:	jge    0x64003437
6400342f:	push   esi
64003430:	mov    ecx,edi
64003432:	call   0x64001e00
64003437:	test   esi,esi
64003439:	movsx  dx,BYTE PTR [esp+0x14]
6400343f:	mov    eax,DWORD PTR [edi]
64003441:	mov    WORD PTR [eax+ebx*2],dx
64003445:	jl     0x6400347f
64003447:	mov    eax,DWORD PTR [edi]
64003449:	cmp    esi,DWORD PTR [eax-0x8]
6400344c:	jg     0x6400347f
6400344e:	mov    DWORD PTR [eax-0xc],esi
64003451:	mov    eax,DWORD PTR [edi]
64003453:	mov    WORD PTR [eax+esi*2],0x0
64003459:	movzx  eax,WORD PTR [ebp+0x2]
6400345d:	add    ebp,0x2
64003460:	test   ax,ax
64003463:	jne    0x640031ce
64003469:	mov    eax,edi
6400346b:	mov    ecx,DWORD PTR [esp+0x34]
6400346f:	mov    DWORD PTR fs:0x0,ecx
64003476:	pop    ecx
64003477:	pop    edi
64003478:	pop    esi
64003479:	pop    ebp
6400347a:	pop    ebx
6400347b:	add    esp,0x2c
6400347e:	ret    
6400347f:	push   0x80070057
64003484:	call   0x64001040
64003489:	int3   
6400348a:	int3   
6400348b:	int3   
6400348c:	int3   
6400348d:	int3   
6400348e:	int3   
6400348f:	int3   
64003490:	push   0xffffffff
64003492:	push   0x640218d9
64003497:	mov    eax,fs:0x0
6400349d:	push   eax
6400349e:	sub    esp,0x48
640034a1:	push   ebx
640034a2:	push   esi
640034a3:	push   edi
640034a4:	mov    eax,ds:0x64029038
640034a9:	xor    eax,esp
640034ab:	push   eax
640034ac:	lea    eax,[esp+0x58]
640034b0:	mov    fs:0x0,eax
640034b6:	xor    ebx,ebx
640034b8:	mov    DWORD PTR [esp+0x60],ebx
640034bc:	mov    DWORD PTR [esp+0x10],ebx
640034c0:	mov    eax,ds:0x6402a4e0
640034c5:	mov    edx,DWORD PTR [eax+0xc]
640034c8:	mov    ecx,0x6402a4e0
640034cd:	call   edx
640034cf:	mov    edi,DWORD PTR [esp+0x68]
640034d3:	add    eax,0x10
640034d6:	mov    DWORD PTR [edi],eax
640034d8:	mov    DWORD PTR [esp+0x60],ebx
640034dc:	mov    ecx,0x1
640034e1:	sub    ecx,DWORD PTR [eax-0x4]
640034e4:	mov    eax,DWORD PTR [eax-0x8]
640034e7:	sub    eax,0x800
640034ec:	cmp    BYTE PTR [esp+0x6c],bl
640034f0:	mov    DWORD PTR [esp+0x10],0x1
640034f8:	je     0x6400358c
640034fe:	or     eax,ecx
64003500:	jge    0x6400350e
64003502:	push   0x800
64003507:	mov    ecx,edi
64003509:	call   0x64001e00
6400350e:	mov    eax,DWORD PTR [edi]
64003510:	push   0x800
64003515:	push   eax
64003516:	call   0x6400c690
6400351b:	call   eax
6400351d:	test   eax,eax
6400351f:	jne    0x64003614
64003525:	push   0x64024650
6400352a:	push   0x22
6400352c:	push   0x64024674
64003531:	call   0x64004730
64003536:	mov    ecx,eax
64003538:	add    esp,0xc
6400353b:	mov    DWORD PTR [esp+0x2c],0xf
64003543:	mov    DWORD PTR [esp+0x28],ebx
64003547:	mov    BYTE PTR [esp+0x18],bl
6400354b:	lea    esi,[ecx+0x1]
6400354e:	mov    edi,edi
64003550:	mov    dl,BYTE PTR [ecx]
64003552:	add    ecx,0x1
64003555:	cmp    dl,bl
64003557:	jne    0x64003550
64003559:	sub    ecx,esi
6400355b:	push   ecx
6400355c:	push   eax
6400355d:	lea    ecx,[esp+0x1c]
64003561:	call   0x64001880
64003566:	lea    eax,[esp+0x14]
6400356a:	push   eax
6400356b:	lea    ecx,[esp+0x34]
6400356f:	push   ecx
64003570:	mov    DWORD PTR [esp+0x68],0x1
64003578:	call   0x64002020
6400357d:	push   0x64026ec4
64003582:	lea    edx,[esp+0x34]
64003586:	push   edx
64003587:	call   0x6401080d
6400358c:	or     eax,ecx
6400358e:	jge    0x6400359c
64003590:	push   0x800
64003595:	mov    ecx,edi
64003597:	call   0x64001e00
6400359c:	mov    eax,DWORD PTR [edi]
6400359e:	push   0x800
640035a3:	push   eax
640035a4:	call   0x6400beb0
640035a9:	call   eax
640035ab:	test   eax,eax
640035ad:	jne    0x64003614
640035af:	push   0x64024698
640035b4:	push   0x1c
640035b6:	push   0x640246d4
640035bb:	call   0x64004730
640035c0:	mov    ecx,eax
640035c2:	add    esp,0xc
640035c5:	mov    DWORD PTR [esp+0x2c],0xf
640035cd:	mov    DWORD PTR [esp+0x28],ebx
640035d1:	mov    BYTE PTR [esp+0x18],bl
640035d5:	lea    esi,[ecx+0x1]
640035d8:	mov    dl,BYTE PTR [ecx]
640035da:	add    ecx,0x1
640035dd:	cmp    dl,bl
640035df:	jne    0x640035d8
640035e1:	sub    ecx,esi
640035e3:	push   ecx
640035e4:	push   eax
640035e5:	lea    ecx,[esp+0x1c]
640035e9:	call   0x64001880
640035ee:	lea    eax,[esp+0x14]
640035f2:	push   eax
640035f3:	lea    ecx,[esp+0x34]
640035f7:	push   ecx
640035f8:	mov    DWORD PTR [esp+0x68],0x2
64003600:	call   0x64002020
64003605:	push   0x64026ec4
6400360a:	lea    edx,[esp+0x34]
6400360e:	push   edx
6400360f:	call   0x6401080d
64003614:	mov    edx,DWORD PTR [edi]
64003616:	cmp    edx,ebx
64003618:	jne    0x6400361e
6400361a:	xor    eax,eax
6400361c:	jmp    0x64003634
6400361e:	mov    eax,edx
64003620:	lea    esi,[eax+0x2]
64003623:	mov    cx,WORD PTR [eax]
64003626:	add    eax,0x2
64003629:	cmp    cx,bx
6400362c:	jne    0x64003623
6400362e:	sub    eax,esi
64003630:	sar    eax,1
64003632:	js     0x64003676
64003634:	cmp    eax,DWORD PTR [edx-0x8]
64003637:	jg     0x64003676
64003639:	mov    DWORD PTR [edx-0xc],eax
6400363c:	mov    ecx,DWORD PTR [edi]
6400363e:	mov    WORD PTR [ecx+eax*2],bx
64003642:	mov    ecx,DWORD PTR [edi]
64003644:	mov    edx,DWORD PTR [ecx-0xc]
64003647:	lea    eax,[edx-0x1]
6400364a:	cmp    eax,ebx
6400364c:	jl     0x64003676
6400364e:	cmp    eax,edx
64003650:	jg     0x64003676
64003652:	movzx  eax,WORD PTR [ecx+eax*2]
64003656:	cmp    ax,0x5c
6400365a:	je     0x64003661
6400365c:	call   0x64004580
64003661:	mov    eax,edi
64003663:	mov    ecx,DWORD PTR [esp+0x58]
64003667:	mov    DWORD PTR fs:0x0,ecx
6400366e:	pop    ecx
6400366f:	pop    edi
64003670:	pop    esi
64003671:	pop    ebx
64003672:	add    esp,0x54
64003675:	ret    
64003676:	push   0x80070057
6400367b:	call   0x64001040
64003680:	int3   
64003681:	int3   
64003682:	int3   
64003683:	int3   
64003684:	int3   
64003685:	int3   
64003686:	int3   
64003687:	int3   
64003688:	int3   
64003689:	int3   
6400368a:	int3   
6400368b:	int3   
6400368c:	int3   
6400368d:	int3   
6400368e:	int3   
6400368f:	int3   
64003690:	push   0xffffffff
64003692:	push   0x640219e1
64003697:	mov    eax,fs:0x0
6400369d:	push   eax
6400369e:	sub    esp,0x48
640036a1:	push   ebx
640036a2:	push   ebp
640036a3:	push   esi
640036a4:	push   edi
640036a5:	mov    eax,ds:0x64029038
640036aa:	xor    eax,esp
640036ac:	push   eax
640036ad:	lea    eax,[esp+0x5c]
640036b1:	mov    fs:0x0,eax
640036b7:	mov    esi,DWORD PTR [esp+0x6c]
640036bb:	xor    ebx,ebx
640036bd:	push   ebx
640036be:	mov    DWORD PTR [esp+0x68],ebx
640036c2:	push   esi
640036c3:	mov    DWORD PTR [esp+0x1c],ebx
640036c7:	call   0x64003490
640036cc:	add    esp,0x8
640036cf:	mov    DWORD PTR [esp+0x64],ebx
640036d3:	mov    eax,DWORD PTR [esi]
640036d5:	mov    ebp,0x1
640036da:	sub    eax,0x10
640036dd:	cmp    DWORD PTR [eax+0xc],ebp
640036e0:	mov    DWORD PTR [esp+0x14],ebp
640036e4:	jle    0x640036f1
640036e6:	mov    eax,DWORD PTR [eax+0x4]
640036e9:	push   eax
640036ea:	mov    ecx,esi
640036ec:	call   0x64001950
640036f1:	mov    eax,DWORD PTR [esi]
640036f3:	push   0x5c
640036f5:	push   eax
640036f6:	call   0x640117e7
640036fb:	mov    edi,eax
640036fd:	add    esp,0x8
64003700:	cmp    edi,ebx
64003702:	jne    0x64003767
64003704:	push   0x640246f4
64003709:	push   0x18
6400370b:	push   0x64024734
64003710:	call   0x64004730
64003715:	mov    ecx,eax
64003717:	add    esp,0xc
6400371a:	mov    DWORD PTR [esp+0x30],0xf
64003722:	mov    DWORD PTR [esp+0x2c],ebx
64003726:	mov    BYTE PTR [esp+0x1c],bl
6400372a:	lea    esi,[ecx+0x1]
6400372d:	lea    ecx,[ecx+0x0]
64003730:	mov    dl,BYTE PTR [ecx]
64003732:	add    ecx,ebp
64003734:	cmp    dl,bl
64003736:	jne    0x64003730
64003738:	sub    ecx,esi
6400373a:	push   ecx
6400373b:	push   eax
6400373c:	lea    ecx,[esp+0x20]
64003740:	call   0x64001880
64003745:	lea    ecx,[esp+0x18]
64003749:	push   ecx
6400374a:	lea    edx,[esp+0x38]
6400374e:	push   edx
6400374f:	mov    DWORD PTR [esp+0x6c],ebp
64003753:	call   0x64002020
64003758:	push   0x64026ec4
6400375d:	lea    eax,[esp+0x38]
64003761:	push   eax
64003762:	call   0x6401080d
64003767:	mov    eax,DWORD PTR [esi]
64003769:	sub    eax,0x10
6400376c:	cmp    DWORD PTR [eax+0xc],ebp
6400376f:	jle    0x6400377c
64003771:	mov    ecx,DWORD PTR [eax+0x4]
64003774:	push   ecx
64003775:	mov    ecx,esi
64003777:	call   0x64001950
6400377c:	mov    ecx,DWORD PTR [esi]
6400377e:	sub    edi,ecx
64003780:	sar    edi,1
64003782:	add    edi,ebp
64003784:	cmp    ecx,ebx
64003786:	jne    0x6400378c
64003788:	xor    eax,eax
6400378a:	jmp    0x640037a7
6400378c:	mov    eax,ecx
6400378e:	lea    ebp,[eax+0x2]
64003791:	mov    dx,WORD PTR [eax]
64003794:	add    eax,0x2
64003797:	cmp    dx,bx
6400379a:	jne    0x64003791
6400379c:	sub    eax,ebp
6400379e:	sar    eax,1
640037a0:	js     0x640037fa
640037a2:	mov    ebp,0x1
640037a7:	cmp    eax,DWORD PTR [ecx-0x8]
640037aa:	jg     0x640037fa
640037ac:	mov    DWORD PTR [ecx-0xc],eax
640037af:	mov    edx,DWORD PTR [esi]
640037b1:	mov    WORD PTR [edx+eax*2],bx
640037b5:	mov    eax,DWORD PTR [esi]
640037b7:	sub    eax,0x10
640037ba:	mov    ecx,ebp
640037bc:	sub    ecx,DWORD PTR [eax+0xc]
640037bf:	mov    eax,DWORD PTR [eax+0x8]
640037c2:	sub    eax,edi
640037c4:	or     eax,ecx
640037c6:	jge    0x640037d0
640037c8:	push   edi
640037c9:	mov    ecx,esi
640037cb:	call   0x64001e00
640037d0:	cmp    edi,ebx
640037d2:	jl     0x640037fa
640037d4:	mov    eax,DWORD PTR [esi]
640037d6:	cmp    edi,DWORD PTR [eax-0x8]
640037d9:	jg     0x640037fa
640037db:	mov    DWORD PTR [eax-0xc],edi
640037de:	mov    eax,DWORD PTR [esi]
640037e0:	mov    WORD PTR [eax+edi*2],bx
640037e4:	mov    eax,esi
640037e6:	mov    ecx,DWORD PTR [esp+0x5c]
640037ea:	mov    DWORD PTR fs:0x0,ecx
640037f1:	pop    ecx
640037f2:	pop    edi
640037f3:	pop    esi
640037f4:	pop    ebp
640037f5:	pop    ebx
640037f6:	add    esp,0x54
640037f9:	ret    
640037fa:	push   0x80070057
640037ff:	call   0x64001040
64003804:	int3   
64003805:	int3   
64003806:	int3   
64003807:	int3   
64003808:	int3   
64003809:	int3   
6400380a:	int3   
6400380b:	int3   
6400380c:	int3   
6400380d:	int3   
6400380e:	int3   
6400380f:	int3   
64003810:	push   ebp
64003811:	lea    ebp,[esp-0x78]
64003815:	sub    esp,0x78
64003818:	push   0xffffffff
6400381a:	push   0x64021af9
6400381f:	mov    eax,fs:0x0
64003825:	push   eax
64003826:	sub    esp,0xb4
6400382c:	mov    eax,ds:0x64029038
64003831:	xor    eax,ebp
64003833:	mov    DWORD PTR [ebp+0x74],eax
64003836:	push   ebx
64003837:	push   esi
64003838:	push   edi
64003839:	push   eax
6400383a:	lea    eax,[ebp-0xc]
6400383d:	mov    fs:0x0,eax
64003843:	call   DWORD PTR ds:0x64029008
64003849:	mov    ebx,eax
6400384b:	lea    eax,[ebp+0xc]
6400384e:	push   eax
6400384f:	call   0x64003690
64003854:	add    esp,0x4
64003857:	push   0x0
64003859:	push   0x0
6400385b:	lea    ecx,[ebp+0x0]
6400385e:	push   ecx
6400385f:	lea    edx,[ebp+0x4]
64003862:	push   edx
64003863:	lea    eax,[ebp+0x8]
64003866:	push   eax
64003867:	push   0x0
64003869:	mov    DWORD PTR [ebp-0x4],0x0
64003870:	mov    ecx,DWORD PTR [ebp+0xc]
64003873:	push   0x0
64003875:	push   ecx
64003876:	call   0x6400c5b0
6400387b:	call   eax
6400387d:	test   eax,eax
6400387f:	jne    0x64003991
64003885:	call   DWORD PTR ds:0x64022044
6400388b:	push   0xa
6400388d:	lea    edx,[ebp+0x10]
64003890:	push   edx
64003891:	push   eax
64003892:	call   0x6401172b
64003897:	mov    eax,DWORD PTR [ebp+0xc]
6400389a:	add    esp,0xc
6400389d:	test   eax,eax
6400389f:	mov    edi,eax
640038a1:	je     0x640038cf
640038a3:	push   eax
640038a4:	call   DWORD PTR ds:0x64022054
640038aa:	add    eax,0x1
640038ad:	cmp    eax,0x3fffffff
640038b2:	jle    0x640038b8
640038b4:	xor    edi,edi
640038b6:	jmp    0x640038cf
640038b8:	lea    esi,[eax+eax*1]
640038bb:	mov    eax,esi
640038bd:	call   0x640113a0
640038c2:	mov    eax,esp
640038c4:	push   ebx
640038c5:	push   esi
640038c6:	push   edi
640038c7:	push   eax
640038c8:	call   0x64002b80
640038cd:	mov    edi,eax
640038cf:	push   0x6402479c
640038d4:	push   0x21
640038d6:	push   0x640247d0
640038db:	call   0x64004730
640038e0:	mov    ecx,eax
640038e2:	add    esp,0xc
640038e5:	mov    DWORD PTR [ebp-0x10],0xf
640038ec:	mov    DWORD PTR [ebp-0x14],0x0
640038f3:	mov    BYTE PTR [ebp-0x24],0x0
640038f7:	lea    esi,[ecx+0x1]
640038fa:	lea    ebx,[ebx+0x0]
64003900:	mov    dl,BYTE PTR [ecx]
64003902:	add    ecx,0x1
64003905:	test   dl,dl
64003907:	jne    0x64003900
64003909:	sub    ecx,esi
6400390b:	push   ecx
6400390c:	push   eax
6400390d:	lea    ecx,[ebp-0x28]
64003910:	call   0x64001880
64003915:	lea    eax,[ebp-0x28]
64003918:	push   eax
64003919:	lea    esi,[ebp-0x6c]
6400391c:	mov    BYTE PTR [ebp-0x4],0x1
64003920:	call   0x64008070
64003925:	mov    esi,eax
64003927:	push   0x64024754
6400392c:	push   0x7
6400392e:	push   0x64024794
64003933:	mov    BYTE PTR [ebp-0x4],0x2
64003937:	call   0x64004730
6400393c:	push   esi
6400393d:	mov    edi,eax
6400393f:	lea    esi,[ebp-0x88]
64003945:	call   0x64008070
6400394a:	push   eax
6400394b:	lea    edi,[ebp+0x10]
6400394e:	lea    esi,[ebp-0xc0]
64003954:	mov    BYTE PTR [ebp-0x4],0x3
64003958:	call   0x64008070
6400395d:	push   eax
6400395e:	mov    edi,0x64024750
64003963:	lea    esi,[ebp-0xa4]
64003969:	mov    BYTE PTR [ebp-0x4],0x4
6400396d:	call   0x64008070
64003972:	add    esp,0x1c
64003975:	push   eax
64003976:	lea    ecx,[ebp-0x50]
64003979:	push   ecx
6400397a:	mov    BYTE PTR [ebp-0x4],0x5
6400397e:	call   0x64002020
64003983:	push   0x64026ec4
64003988:	lea    edx,[ebp-0x50]
6400398b:	push   edx
6400398c:	call   0x6401080d
64003991:	mov    esi,DWORD PTR [ebp+0x8]
64003994:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400399b:	mov    eax,DWORD PTR [ebp+0xc]
6400399e:	add    eax,0xfffffff0
640039a1:	lea    ecx,[eax+0xc]
640039a4:	or     edx,0xffffffff
640039a7:	lock xadd DWORD PTR [ecx],edx
640039ab:	dec    edx
640039ac:	test   edx,edx
640039ae:	jg     0x640039ba
640039b0:	mov    ecx,DWORD PTR [eax]
640039b2:	mov    edx,DWORD PTR [ecx]
640039b4:	push   eax
640039b5:	mov    eax,DWORD PTR [edx+0x4]
640039b8:	call   eax
640039ba:	mov    eax,esi
640039bc:	lea    esp,[ebp-0xd0]
640039c2:	mov    ecx,DWORD PTR [ebp-0xc]
640039c5:	mov    DWORD PTR fs:0x0,ecx
640039cc:	pop    ecx
640039cd:	pop    edi
640039ce:	pop    esi
640039cf:	pop    ebx
640039d0:	mov    ecx,DWORD PTR [ebp+0x74]
640039d3:	xor    ecx,ebp
640039d5:	call   0x64010c1e
640039da:	add    ebp,0x78
640039dd:	mov    esp,ebp
640039df:	pop    ebp
640039e0:	ret    
640039e1:	int3   
640039e2:	int3   
640039e3:	int3   
640039e4:	int3   
640039e5:	int3   
640039e6:	int3   
640039e7:	int3   
640039e8:	int3   
640039e9:	int3   
640039ea:	int3   
640039eb:	int3   
640039ec:	int3   
640039ed:	int3   
640039ee:	int3   
640039ef:	int3   
640039f0:	push   ebp
640039f1:	mov    ebp,esp
640039f3:	and    esp,0xfffffff8
640039f6:	push   0xffffffff
640039f8:	push   0x64021876
640039fd:	mov    eax,fs:0x0
64003a03:	push   eax
64003a04:	sub    esp,0x840
64003a0a:	mov    eax,ds:0x64029038
64003a0f:	xor    eax,esp
64003a11:	mov    DWORD PTR [esp+0x838],eax
64003a18:	push   ebx
64003a19:	push   esi
64003a1a:	push   edi
64003a1b:	mov    eax,ds:0x64029038
64003a20:	xor    eax,esp
64003a22:	push   eax
64003a23:	lea    eax,[esp+0x850]
64003a2a:	mov    fs:0x0,eax
64003a30:	xor    eax,eax
64003a32:	xor    ebx,ebx
64003a34:	mov    DWORD PTR [esp+0x34],ebx
64003a38:	mov    DWORD PTR [esp+0x38],eax
64003a3c:	mov    DWORD PTR [esp+0x3c],eax
64003a40:	mov    DWORD PTR [esp+0x40],eax
64003a44:	mov    DWORD PTR [esp+0x1c],ebx
64003a48:	push   0x640247f4
64003a4d:	push   0x1f
64003a4f:	push   0x64024818
64003a54:	mov    DWORD PTR [esp+0x864],ebx
64003a5b:	call   0x64004930
64003a60:	add    esp,0xc
64003a63:	lea    ecx,[esp+0x18]
64003a67:	push   ecx
64003a68:	push   0x20019
64003a6d:	push   ebx
64003a6e:	push   eax
64003a6f:	push   0x80000002
64003a74:	mov    DWORD PTR [esp+0x2c],ebx
64003a78:	call   DWORD PTR ds:0x64022004
64003a7e:	cmp    eax,ebx
64003a80:	jne    0x64003af7
64003a82:	mov    edx,DWORD PTR [esp+0x18]
64003a86:	push   0x64024858
64003a8b:	push   0xb
64003a8d:	push   0x64024890
64003a92:	mov    DWORD PTR [esp+0x28],edx
64003a96:	mov    DWORD PTR [esp+0x2c],0x400
64003a9e:	call   0x64004930
64003aa3:	add    esp,0xc
64003aa6:	push   eax
64003aa7:	lea    eax,[esp+0x20]
64003aab:	push   eax
64003aac:	lea    edi,[esp+0x28]
64003ab0:	lea    esi,[esp+0x4c]
64003ab4:	call   0x64002be0
64003ab9:	test   eax,eax
64003abb:	je     0x64003b1a
64003abd:	mov    eax,DWORD PTR [esp+0x18]
64003ac1:	test   eax,eax
64003ac3:	mov    ecx,DWORD PTR [esp+0x40]
64003ac7:	mov    esi,DWORD PTR [esp+0x34]
64003acb:	mov    edi,DWORD PTR [esp+0x38]
64003acf:	mov    ebx,DWORD PTR [esp+0x3c]
64003ad3:	mov    DWORD PTR [esp+0x30],ecx
64003ad7:	je     0x64003ae0
64003ad9:	push   eax
64003ada:	call   DWORD PTR ds:0x64022000
64003ae0:	mov    eax,DWORD PTR [ebp+0x8]
64003ae3:	mov    edx,DWORD PTR [esp+0x30]
64003ae7:	mov    DWORD PTR [eax],esi
64003ae9:	mov    DWORD PTR [eax+0x4],edi
64003aec:	mov    DWORD PTR [eax+0x8],ebx
64003aef:	mov    DWORD PTR [eax+0xc],edx
64003af2:	jmp    0x64003be9
64003af7:	mov    eax,DWORD PTR [ebp+0x8]
64003afa:	mov    ecx,DWORD PTR [esp+0x34]
64003afe:	mov    edx,DWORD PTR [esp+0x38]
64003b02:	mov    DWORD PTR [eax],ecx
64003b04:	mov    ecx,DWORD PTR [esp+0x3c]
64003b08:	mov    DWORD PTR [eax+0x4],edx
64003b0b:	mov    edx,DWORD PTR [esp+0x40]
64003b0f:	mov    DWORD PTR [eax+0x8],ecx
64003b12:	mov    DWORD PTR [eax+0xc],edx
64003b15:	jmp    0x64003be9
64003b1a:	push   0x640248a8
64003b1f:	lea    ecx,[esp+0x18]
64003b23:	call   0x64002590
64003b28:	lea    eax,[esp+0x44]
64003b2c:	mov    BYTE PTR [esp+0x858],0x1
64003b34:	lea    edx,[eax+0x2]
64003b37:	mov    cx,WORD PTR [eax]
64003b3a:	add    eax,0x2
64003b3d:	cmp    cx,bx
64003b40:	jne    0x64003b37
64003b42:	sub    eax,edx
64003b44:	sar    eax,1
64003b46:	push   eax
64003b47:	lea    eax,[esp+0x48]
64003b4b:	push   eax
64003b4c:	lea    ecx,[esp+0x1c]
64003b50:	call   0x640029e0
64003b55:	push   0x1
64003b57:	push   0x640248ac
64003b5c:	lea    ecx,[esp+0x1c]
64003b60:	call   0x640029e0
64003b65:	mov    eax,DWORD PTR [esp+0x14]
64003b69:	cmp    DWORD PTR [eax-0x4],0x1
64003b6d:	jle    0x64003b80
64003b6f:	mov    ecx,DWORD PTR [eax-0xc]
64003b72:	push   ecx
64003b73:	lea    ecx,[esp+0x18]
64003b77:	call   0x64001950
64003b7c:	mov    eax,DWORD PTR [esp+0x14]
64003b80:	lea    edx,[esp+0x34]
64003b84:	push   edx
64003b85:	push   eax
64003b86:	call   DWORD PTR ds:0x640221e0
64003b8c:	mov    eax,DWORD PTR [esp+0x40]
64003b90:	mov    esi,DWORD PTR [esp+0x34]
64003b94:	mov    edi,DWORD PTR [esp+0x38]
64003b98:	mov    ebx,DWORD PTR [esp+0x3c]
64003b9c:	mov    DWORD PTR [esp+0x30],eax
64003ba0:	mov    BYTE PTR [esp+0x858],0x0
64003ba8:	mov    eax,DWORD PTR [esp+0x14]
64003bac:	add    eax,0xfffffff0
64003baf:	lea    ecx,[eax+0xc]
64003bb2:	or     edx,0xffffffff
64003bb5:	lock xadd DWORD PTR [ecx],edx
64003bb9:	dec    edx
64003bba:	test   edx,edx
64003bbc:	jg     0x64003bc8
64003bbe:	mov    ecx,DWORD PTR [eax]
64003bc0:	mov    edx,DWORD PTR [ecx]
64003bc2:	push   eax
64003bc3:	mov    eax,DWORD PTR [edx+0x4]
64003bc6:	call   eax
64003bc8:	mov    eax,DWORD PTR [esp+0x18]
64003bcc:	test   eax,eax
64003bce:	je     0x64003bd7
64003bd0:	push   eax
64003bd1:	call   DWORD PTR ds:0x64022000
64003bd7:	mov    eax,DWORD PTR [ebp+0x8]
64003bda:	mov    ecx,DWORD PTR [esp+0x30]
64003bde:	mov    DWORD PTR [eax],esi
64003be0:	mov    DWORD PTR [eax+0x4],edi
64003be3:	mov    DWORD PTR [eax+0x8],ebx
64003be6:	mov    DWORD PTR [eax+0xc],ecx
64003be9:	mov    ecx,DWORD PTR [esp+0x850]
64003bf0:	mov    DWORD PTR fs:0x0,ecx
64003bf7:	pop    ecx
64003bf8:	pop    edi
64003bf9:	pop    esi
64003bfa:	pop    ebx
64003bfb:	mov    ecx,DWORD PTR [esp+0x838]
64003c02:	xor    ecx,esp
64003c04:	call   0x64010c1e
64003c09:	mov    esp,ebp
64003c0b:	pop    ebp
64003c0c:	ret    
64003c0d:	int3   
64003c0e:	int3   
64003c0f:	int3   
64003c10:	push   ebp
64003c11:	lea    ebp,[esp-0x820]
64003c18:	sub    esp,0x820
64003c1e:	push   0xffffffff
64003c20:	push   0x64020df1
64003c25:	mov    eax,fs:0x0
64003c2b:	push   eax
64003c2c:	sub    esp,0x44
64003c2f:	mov    eax,ds:0x64029038
64003c34:	xor    eax,ebp
64003c36:	mov    DWORD PTR [ebp+0x81c],eax
64003c3c:	push   ebx
64003c3d:	push   esi
64003c3e:	push   edi
64003c3f:	push   eax
64003c40:	lea    eax,[ebp-0xc]
64003c43:	mov    fs:0x0,eax
64003c49:	xor    ebx,ebx
64003c4b:	mov    DWORD PTR [ebp-0x4],ebx
64003c4e:	test   BYTE PTR ds:0x6402d2f8,0x1
64003c55:	jne    0x64003c9d
64003c57:	or     DWORD PTR ds:0x6402d2f8,0x1
64003c5e:	mov    BYTE PTR [ebp-0x4],0x1
64003c62:	call   0x640066e0
64003c67:	mov    ds:0x6402d2f0,eax
64003c6c:	mov    BYTE PTR [eax+0x29],0x1
64003c70:	mov    eax,ds:0x6402d2f0
64003c75:	mov    DWORD PTR [eax+0x4],eax
64003c78:	mov    eax,ds:0x6402d2f0
64003c7d:	mov    DWORD PTR [eax],eax
64003c7f:	mov    eax,ds:0x6402d2f0
64003c84:	mov    DWORD PTR [eax+0x8],eax
64003c87:	push   0x64021e40
64003c8c:	mov    DWORD PTR ds:0x6402d2f4,ebx
64003c92:	call   0x64010d51
64003c97:	add    esp,0x4
64003c9a:	mov    BYTE PTR [ebp-0x4],bl
64003c9d:	cmp    DWORD PTR ds:0x6402d2f4,ebx
64003ca3:	jne    0x64003e67
64003ca9:	call   0x640066e0
64003cae:	mov    DWORD PTR [ebp-0x18],eax
64003cb1:	mov    BYTE PTR [eax+0x29],0x1
64003cb5:	mov    eax,DWORD PTR [ebp-0x18]
64003cb8:	mov    DWORD PTR [eax+0x4],eax
64003cbb:	mov    eax,DWORD PTR [ebp-0x18]
64003cbe:	mov    DWORD PTR [eax],eax
64003cc0:	mov    eax,DWORD PTR [ebp-0x18]
64003cc3:	mov    DWORD PTR [eax+0x8],eax
64003cc6:	mov    DWORD PTR [ebp-0x14],ebx
64003cc9:	push   0x640248b0
64003cce:	push   0xd
64003cd0:	push   0x640248e0
64003cd5:	mov    BYTE PTR [ebp-0x4],0x2
64003cd9:	call   0x64004730
64003cde:	mov    ecx,eax
64003ce0:	add    esp,0xc
64003ce3:	mov    DWORD PTR [ebp-0x2c],0xf
64003cea:	mov    DWORD PTR [ebp-0x30],ebx
64003ced:	mov    BYTE PTR [ebp-0x40],bl
64003cf0:	lea    esi,[ecx+0x1]
64003cf3:	mov    dl,BYTE PTR [ecx]
64003cf5:	add    ecx,0x1
64003cf8:	cmp    dl,bl
64003cfa:	jne    0x64003cf3
64003cfc:	sub    ecx,esi
64003cfe:	push   ecx
64003cff:	push   eax
64003d00:	lea    ecx,[ebp-0x44]
64003d03:	call   0x64001880
64003d08:	lea    eax,[ebp-0x44]
64003d0b:	push   eax
64003d0c:	lea    ecx,[ebp-0x28]
64003d0f:	push   ecx
64003d10:	lea    edx,[ebp-0x1c]
64003d13:	push   edx
64003d14:	mov    BYTE PTR [ebp-0x4],0x3
64003d18:	call   0x64004b20
64003d1d:	mov    BYTE PTR [ebp-0x4],0x2
64003d21:	cmp    DWORD PTR [ebp-0x2c],0x10
64003d25:	jb     0x64003d33
64003d27:	mov    eax,DWORD PTR [ebp-0x40]
64003d2a:	push   eax
64003d2b:	call   0x64010422
64003d30:	add    esp,0x4
64003d33:	mov    ecx,DWORD PTR [ebp-0x18]
64003d36:	mov    eax,DWORD PTR [ecx]
64003d38:	lea    ecx,[ebp-0x1c]
64003d3b:	mov    edi,ecx
64003d3d:	mov    DWORD PTR [ebp-0x24],edi
64003d40:	mov    DWORD PTR [ebp-0x20],eax
64003d43:	cmp    edi,ebx
64003d45:	mov    esi,DWORD PTR [ebp-0x18]
64003d48:	je     0x64003d51
64003d4a:	lea    edx,[ebp-0x1c]
64003d4d:	cmp    edi,edx
64003d4f:	je     0x64003d56
64003d51:	call   0x6401077a
64003d56:	cmp    DWORD PTR [ebp-0x20],esi
64003d59:	je     0x64003e5c
64003d5f:	cmp    edi,ebx
64003d61:	jne    0x64003d68
64003d63:	call   0x6401077a
64003d68:	mov    eax,DWORD PTR [ebp-0x20]
64003d6b:	cmp    eax,DWORD PTR [edi+0x4]
64003d6e:	jne    0x64003d75
64003d70:	call   0x6401077a
64003d75:	mov    esi,DWORD PTR [ebp-0x20]
64003d78:	add    esi,0xc
64003d7b:	cmp    DWORD PTR [esi+0x18],0x10
64003d7f:	jb     0x64003d86
64003d81:	mov    ecx,DWORD PTR [esi+0x4]
64003d84:	jmp    0x64003d89
64003d86:	lea    ecx,[esi+0x4]
64003d89:	lea    edx,[ebp+0x41c]
64003d8f:	nop
64003d90:	mov    al,BYTE PTR [ecx]
64003d92:	mov    BYTE PTR [edx],al
64003d94:	add    ecx,0x1
64003d97:	add    edx,0x1
64003d9a:	cmp    al,bl
64003d9c:	jne    0x64003d90
64003d9e:	mov    ecx,DWORD PTR [ebp-0x20]
64003da1:	cmp    ecx,DWORD PTR [edi+0x4]
64003da4:	jne    0x64003dab
64003da6:	call   0x6401077a
64003dab:	push   0xffffffff
64003dad:	push   ebx
64003dae:	mov    edi,0xf
64003db3:	push   esi
64003db4:	lea    ecx,[ebp+0x0]
64003db7:	mov    DWORD PTR [ebp+0x18],edi
64003dba:	mov    DWORD PTR [ebp+0x14],ebx
64003dbd:	mov    BYTE PTR [ebp+0x4],bl
64003dc0:	call   0x640017a0
64003dc5:	lea    edx,[ebp+0x41c]
64003dcb:	push   edx
64003dcc:	mov    BYTE PTR [ebp-0x4],0x4
64003dd0:	call   0x6401d045
64003dd5:	lea    eax,[ebp+0x41c]
64003ddb:	add    esp,0x4
64003dde:	mov    DWORD PTR [ebp-0x2c],edi
64003de1:	mov    DWORD PTR [ebp-0x30],ebx
64003de4:	mov    BYTE PTR [ebp-0x40],bl
64003de7:	lea    edx,[eax+0x1]
64003dea:	lea    ebx,[ebx+0x0]
64003df0:	mov    cl,BYTE PTR [eax]
64003df2:	add    eax,0x1
64003df5:	cmp    cl,bl
64003df7:	jne    0x64003df0
64003df9:	sub    eax,edx
64003dfb:	push   eax
64003dfc:	lea    eax,[ebp+0x41c]
64003e02:	push   eax
64003e03:	lea    ecx,[ebp-0x44]
64003e06:	call   0x64001880
64003e0b:	lea    ecx,[ebp-0x44]
64003e0e:	push   ecx
64003e0f:	lea    edx,[ebp-0x50]
64003e12:	push   edx
64003e13:	push   0x6402d2ec
64003e18:	mov    BYTE PTR [ebp-0x4],0x5
64003e1c:	call   0x64004b20
64003e21:	mov    esi,0x10
64003e26:	cmp    DWORD PTR [ebp-0x2c],esi
64003e29:	jb     0x64003e37
64003e2b:	mov    eax,DWORD PTR [ebp-0x40]
64003e2e:	push   eax
64003e2f:	call   0x64010422
64003e34:	add    esp,0x4
64003e37:	mov    BYTE PTR [ebp-0x4],0x2
64003e3b:	cmp    DWORD PTR [ebp+0x18],esi
64003e3e:	jb     0x64003e4c
64003e40:	mov    ecx,DWORD PTR [ebp+0x4]
64003e43:	push   ecx
64003e44:	call   0x64010422
64003e49:	add    esp,0x4
64003e4c:	lea    esi,[ebp-0x24]
64003e4f:	call   0x640053b0
64003e54:	mov    edi,DWORD PTR [ebp-0x24]
64003e57:	jmp    0x64003d43
64003e5c:	lea    eax,[ebp-0x1c]
64003e5f:	mov    BYTE PTR [ebp-0x4],bl
64003e62:	call   0x64005330
64003e67:	call   DWORD PTR ds:0x64029008
64003e6d:	mov    DWORD PTR [ebp-0x20],eax
64003e70:	mov    eax,DWORD PTR [ebp+0x828]
64003e76:	cmp    DWORD PTR [eax-0x4],0x1
64003e7a:	jle    0x64003e91
64003e7c:	mov    edx,DWORD PTR [eax-0xc]
64003e7f:	push   edx
64003e80:	lea    ecx,[ebp+0x828]
64003e86:	call   0x64001950
64003e8b:	mov    eax,DWORD PTR [ebp+0x828]
64003e91:	cmp    eax,ebx
64003e93:	jne    0x64003e99
64003e95:	xor    ecx,ecx
64003e97:	jmp    0x64003ee0
64003e99:	push   eax
64003e9a:	call   DWORD PTR ds:0x64022054
64003ea0:	add    eax,0x1
64003ea3:	cmp    eax,0x3fffffff
64003ea8:	jg     0x64003edc
64003eaa:	lea    edi,[eax+eax*1]
64003ead:	mov    eax,edi
64003eaf:	call   0x640113a0
64003eb4:	mov    esi,esp
64003eb6:	cmp    esi,ebx
64003eb8:	je     0x64003edc
64003eba:	mov    eax,DWORD PTR [ebp+0x828]
64003ec0:	mov    ecx,DWORD PTR [ebp-0x20]
64003ec3:	push   ebx
64003ec4:	push   ebx
64003ec5:	push   edi
64003ec6:	push   esi
64003ec7:	push   0xffffffff
64003ec9:	push   eax
64003eca:	push   ebx
64003ecb:	push   ecx
64003ecc:	mov    BYTE PTR [esi],bl
64003ece:	call   DWORD PTR ds:0x64022024
64003ed4:	neg    eax
64003ed6:	sbb    eax,eax
64003ed8:	and    eax,esi
64003eda:	jmp    0x64003ede
64003edc:	xor    eax,eax
64003ede:	mov    ecx,eax
64003ee0:	lea    edx,[ebp+0x1c]
64003ee3:	mov    al,BYTE PTR [ecx]
64003ee5:	mov    BYTE PTR [edx],al
64003ee7:	add    ecx,0x1
64003eea:	add    edx,0x1
64003eed:	cmp    al,bl
64003eef:	jne    0x64003ee3
64003ef1:	mov    edi,0xf
64003ef6:	lea    eax,[ebp+0x1c]
64003ef9:	mov    DWORD PTR [ebp-0x2c],edi
64003efc:	mov    DWORD PTR [ebp-0x30],ebx
64003eff:	mov    BYTE PTR [ebp-0x40],bl
64003f02:	lea    edx,[eax+0x1]
64003f05:	mov    cl,BYTE PTR [eax]
64003f07:	add    eax,0x1
64003f0a:	cmp    cl,bl
64003f0c:	jne    0x64003f05
64003f0e:	sub    eax,edx
64003f10:	push   eax
64003f11:	lea    edx,[ebp+0x1c]
64003f14:	push   edx
64003f15:	lea    ecx,[ebp-0x44]
64003f18:	call   0x64001880
64003f1d:	lea    esi,[ebp-0x44]
64003f20:	mov    BYTE PTR [ebp-0x4],0x6
64003f24:	call   0x64004cb0
64003f29:	test   eax,eax
64003f2b:	setne  BYTE PTR [ebp-0xd]
64003f2f:	cmp    DWORD PTR [ebp-0x2c],0x10
64003f33:	jb     0x64003f41
64003f35:	mov    eax,DWORD PTR [ebp-0x40]
64003f38:	push   eax
64003f39:	call   0x64010422
64003f3e:	add    esp,0x4
64003f41:	mov    DWORD PTR [ebp-0x4],0xffffffff
64003f48:	mov    eax,DWORD PTR [ebp+0x828]
64003f4e:	add    eax,0xfffffff0
64003f51:	mov    DWORD PTR [ebp-0x2c],edi
64003f54:	mov    DWORD PTR [ebp-0x30],ebx
64003f57:	mov    BYTE PTR [ebp-0x40],bl
64003f5a:	lea    ecx,[eax+0xc]
64003f5d:	or     edx,0xffffffff
64003f60:	lock xadd DWORD PTR [ecx],edx
64003f64:	dec    edx
64003f65:	test   edx,edx
64003f67:	jg     0x64003f73
64003f69:	mov    ecx,DWORD PTR [eax]
64003f6b:	mov    edx,DWORD PTR [ecx]
64003f6d:	push   eax
64003f6e:	mov    eax,DWORD PTR [edx+0x4]
64003f71:	call   eax
64003f73:	mov    al,BYTE PTR [ebp-0xd]
64003f76:	lea    esp,[ebp-0x60]
64003f79:	mov    ecx,DWORD PTR [ebp-0xc]
64003f7c:	mov    DWORD PTR fs:0x0,ecx
64003f83:	pop    ecx
64003f84:	pop    edi
64003f85:	pop    esi
64003f86:	pop    ebx
64003f87:	mov    ecx,DWORD PTR [ebp+0x81c]
64003f8d:	xor    ecx,ebp
64003f8f:	call   0x64010c1e
64003f94:	add    ebp,0x820
64003f9a:	mov    esp,ebp
64003f9c:	pop    ebp
64003f9d:	ret    
64003f9e:	int3   
64003f9f:	int3   
64003fa0:	jmp    0x64005330
64003fa5:	int3   
64003fa6:	int3   
64003fa7:	int3   
64003fa8:	int3   
64003fa9:	int3   
64003faa:	int3   
64003fab:	int3   
64003fac:	int3   
64003fad:	int3   
64003fae:	int3   
64003faf:	int3   
64003fb0:	push   0xffffffff
64003fb2:	push   0x64021a99
64003fb7:	mov    eax,fs:0x0
64003fbd:	push   eax
64003fbe:	sub    esp,0x48
64003fc1:	push   ebx
64003fc2:	push   ebp
64003fc3:	push   esi
64003fc4:	push   edi
64003fc5:	mov    eax,ds:0x64029038
64003fca:	xor    eax,esp
64003fcc:	push   eax
64003fcd:	lea    eax,[esp+0x5c]
64003fd1:	mov    fs:0x0,eax
64003fd7:	xor    ebp,ebp
64003fd9:	mov    DWORD PTR [esp+0x64],ebp
64003fdd:	mov    DWORD PTR [esp+0x2c],ebp
64003fe1:	call   DWORD PTR ds:0x64029008
64003fe7:	mov    eax,ds:0x6402a4e0
64003fec:	mov    edx,DWORD PTR [eax+0xc]
64003fef:	mov    ecx,0x6402a4e0
64003ff4:	call   edx
64003ff6:	mov    edi,DWORD PTR [esp+0x6c]
64003ffa:	add    eax,0x10
64003ffd:	mov    DWORD PTR [edi],eax
64003fff:	push   0x4
64004001:	push   ebp
64004002:	mov    DWORD PTR [esp+0x6c],ebp
64004006:	push   ebp
64004007:	mov    DWORD PTR [esp+0x38],0x1
6400400f:	call   0x6400d3b0
64004014:	call   eax
64004016:	cmp    eax,ebp
64004018:	mov    DWORD PTR [esp+0x1c],eax
6400401c:	je     0x640041b4
64004022:	mov    ebx,DWORD PTR ds:0x64022008
64004028:	lea    ecx,[esp+0x20]
6400402c:	push   ecx
6400402d:	lea    edx,[esp+0x1c]
64004031:	push   edx
64004032:	lea    ecx,[esp+0x2c]
64004036:	push   ecx
64004037:	push   0x24
64004039:	lea    edx,[esp+0x48]
6400403d:	push   edx
6400403e:	push   0x3
64004040:	push   0x30
64004042:	push   eax
64004043:	mov    DWORD PTR [esp+0x40],ebp
64004047:	call   ebx
64004049:	mov    esi,eax
6400404b:	call   DWORD PTR ds:0x64022044
64004051:	cmp    esi,ebp
64004053:	je     0x6400405c
64004055:	cmp    eax,0xea
6400405a:	jne    0x6400409e
6400405c:	mov    esi,DWORD PTR [esp+0x24]
64004060:	add    esi,0x24
64004063:	xor    ecx,ecx
64004065:	mov    eax,esi
64004067:	mov    edx,0x24
6400406c:	mul    edx
6400406e:	seto   cl
64004071:	neg    ecx
64004073:	or     ecx,eax
64004075:	push   ecx
64004076:	call   0x6401041d
6400407b:	add    esp,0x4
6400407e:	mov    ebp,eax
64004080:	lea    eax,[esp+0x20]
64004084:	push   eax
64004085:	mov    eax,DWORD PTR [esp+0x20]
64004089:	lea    ecx,[esp+0x1c]
6400408d:	push   ecx
6400408e:	lea    edx,[esp+0x2c]
64004092:	push   edx
64004093:	push   esi
64004094:	push   ebp
64004095:	push   0x3
64004097:	push   0x30
64004099:	push   eax
6400409a:	call   ebx
6400409c:	jmp    0x640040a2
6400409e:	mov    ebp,DWORD PTR [esp+0x30]
640040a2:	cmp    DWORD PTR [esp+0x18],0x0
640040a7:	mov    DWORD PTR [esp+0x28],0x0
640040af:	jbe    0x640041b0
640040b5:	add    ebp,0x8
640040b8:	mov    bl,0x2
640040ba:	lea    ebx,[ebx+0x0]
640040c0:	mov    ecx,DWORD PTR [ebp-0x8]
640040c3:	push   ecx
640040c4:	lea    ecx,[esp+0x18]
640040c8:	call   0x64002590
640040cd:	mov    DWORD PTR [esp+0x64],0x1
640040d5:	mov    eax,DWORD PTR [ebp+0x0]
640040d8:	cmp    eax,0x10
640040db:	je     0x640040e6
640040dd:	cmp    eax,0x20
640040e0:	jne    0x64004173
640040e6:	mov    eax,DWORD PTR [esp+0x14]
640040ea:	push   ecx
640040eb:	add    eax,0xfffffff0
640040ee:	mov    DWORD PTR [esp+0x38],esp
640040f2:	mov    esi,esp
640040f4:	push   eax
640040f5:	call   0x640028a0
640040fa:	add    eax,0x10
640040fd:	add    esp,0x4
64004100:	mov    DWORD PTR [esi],eax
64004102:	call   0x64003c10
64004107:	add    esp,0x4
6400410a:	test   al,al
6400410c:	je     0x64004173
6400410e:	push   0x640248f0
64004113:	push   0x4
64004115:	push   0x64024924
6400411a:	call   0x64004730
6400411f:	add    esp,0xc
64004122:	push   eax
64004123:	mov    ecx,edi
64004125:	call   0x64002660
6400412a:	lea    edx,[esp+0x14]
6400412e:	push   edx
6400412f:	lea    eax,[esp+0x34]
64004133:	push   eax
64004134:	call   0x64003150
64004139:	add    esp,0x8
6400413c:	mov    BYTE PTR [esp+0x64],bl
64004140:	mov    eax,DWORD PTR [eax]
64004142:	mov    ecx,DWORD PTR [eax-0xc]
64004145:	push   ecx
64004146:	push   eax
64004147:	mov    ecx,edi
64004149:	call   0x640029e0
6400414e:	mov    BYTE PTR [esp+0x64],0x1
64004153:	mov    eax,DWORD PTR [esp+0x30]
64004157:	add    eax,0xfffffff0
6400415a:	lea    ecx,[eax+0xc]
6400415d:	or     edx,0xffffffff
64004160:	lock xadd DWORD PTR [ecx],edx
64004164:	dec    edx
64004165:	test   edx,edx
64004167:	jg     0x64004173
64004169:	mov    ecx,DWORD PTR [eax]
6400416b:	mov    edx,DWORD PTR [ecx]
6400416d:	push   eax
6400416e:	mov    eax,DWORD PTR [edx+0x4]
64004171:	call   eax
64004173:	mov    BYTE PTR [esp+0x64],0x0
64004178:	mov    eax,DWORD PTR [esp+0x14]
6400417c:	add    eax,0xfffffff0
6400417f:	lea    ecx,[eax+0xc]
64004182:	or     edx,0xffffffff
64004185:	lock xadd DWORD PTR [ecx],edx
64004189:	dec    edx
6400418a:	test   edx,edx
6400418c:	jg     0x64004198
6400418e:	mov    ecx,DWORD PTR [eax]
64004190:	mov    edx,DWORD PTR [ecx]
64004192:	push   eax
64004193:	mov    eax,DWORD PTR [edx+0x4]
64004196:	call   eax
64004198:	mov    eax,DWORD PTR [esp+0x28]
6400419c:	add    eax,0x1
6400419f:	add    ebp,0x24
640041a2:	cmp    eax,DWORD PTR [esp+0x18]
640041a6:	mov    DWORD PTR [esp+0x28],eax
640041aa:	jb     0x640040c0
640041b0:	mov    eax,DWORD PTR [esp+0x1c]
640041b4:	push   eax
640041b5:	call   0x6400d810
640041ba:	call   eax
640041bc:	mov    eax,edi
640041be:	mov    ecx,DWORD PTR [esp+0x5c]
640041c2:	mov    DWORD PTR fs:0x0,ecx
640041c9:	pop    ecx
640041ca:	pop    edi
640041cb:	pop    esi
640041cc:	pop    ebp
640041cd:	pop    ebx
640041ce:	add    esp,0x54
640041d1:	ret    
640041d2:	int3   
640041d3:	int3   
640041d4:	int3   
640041d5:	int3   
640041d6:	int3   
640041d7:	int3   
640041d8:	int3   
640041d9:	int3   
640041da:	int3   
640041db:	int3   
640041dc:	int3   
640041dd:	int3   
640041de:	int3   
640041df:	int3   
640041e0:	push   ebp
640041e1:	mov    ebp,esp
640041e3:	push   0xffffffff
640041e5:	push   0x64021830
640041ea:	mov    eax,fs:0x0
640041f0:	push   eax
640041f1:	sub    esp,0x15c
640041f7:	mov    eax,ds:0x64029038
640041fc:	xor    eax,ebp
640041fe:	mov    DWORD PTR [ebp-0x14],eax
64004201:	push   ebx
64004202:	push   esi
64004203:	push   edi
64004204:	push   eax
64004205:	lea    eax,[ebp-0xc]
64004208:	mov    fs:0x0,eax
6400420e:	mov    DWORD PTR [ebp-0x10],esp
64004211:	mov    edi,DWORD PTR [ebp+0x8]
64004214:	push   0xa0
64004219:	lea    eax,[ebp-0x154]
6400421f:	push   eax
64004220:	push   0x7d0
64004225:	push   0x64000000
6400422a:	mov    DWORD PTR [ebp-0x4],0x0
64004231:	call   DWORD PTR ds:0x640221b4
64004237:	test   eax,eax
64004239:	je     0x64004280
6400423b:	push   ecx
6400423c:	lea    edx,[ebp-0x154]
64004242:	mov    ecx,esp
64004244:	mov    DWORD PTR [ebp-0x158],esp
6400424a:	push   edx
6400424b:	call   0x64002590
64004250:	lea    esi,[ebp-0x168]
64004256:	call   0x64002f50
6400425b:	mov    ecx,DWORD PTR [eax]
6400425d:	mov    DWORD PTR [edi],ecx
6400425f:	mov    edx,DWORD PTR [eax+0x4]
64004262:	mov    DWORD PTR [edi+0x4],edx
64004265:	mov    ecx,DWORD PTR [eax+0x8]
64004268:	mov    DWORD PTR [edi+0x8],ecx
6400426b:	mov    edx,DWORD PTR [eax+0xc]
6400426e:	add    esp,0x4
64004271:	mov    DWORD PTR [edi+0xc],edx
64004274:	mov    al,0x1
64004276:	jmp    0x640042a3
64004278:	mov    eax,0x6400427e
6400427d:	ret    
6400427e:	jmp    0x640042a1
64004280:	mov    eax,ds:0x64022ac4
64004285:	mov    DWORD PTR [edi],eax
64004287:	mov    ecx,DWORD PTR ds:0x64022ac8
6400428d:	mov    DWORD PTR [edi+0x4],ecx
64004290:	mov    edx,DWORD PTR ds:0x64022acc
64004296:	mov    DWORD PTR [edi+0x8],edx
64004299:	mov    eax,ds:0x64022ad0
6400429e:	mov    DWORD PTR [edi+0xc],eax
640042a1:	xor    al,al
640042a3:	mov    ecx,DWORD PTR [ebp-0xc]
640042a6:	mov    DWORD PTR fs:0x0,ecx
640042ad:	pop    ecx
640042ae:	pop    edi
640042af:	pop    esi
640042b0:	pop    ebx
640042b1:	mov    ecx,DWORD PTR [ebp-0x14]
640042b4:	xor    ecx,ebp
640042b6:	call   0x64010c1e
640042bb:	mov    esp,ebp
640042bd:	pop    ebp
640042be:	ret    
640042bf:	int3   
640042c0:	sub    esp,0x118
640042c6:	mov    eax,ds:0x64029038
640042cb:	xor    eax,esp
640042cd:	mov    DWORD PTR [esp+0x114],eax
640042d4:	push   esi
640042d5:	push   0x110
640042da:	lea    eax,[esp+0xc]
640042de:	push   0x0
640042e0:	push   eax
640042e1:	call   0x64011320
640042e6:	mov    edx,DWORD PTR ds:0x6402a4e0
640042ec:	mov    eax,DWORD PTR [edx+0xc]
640042ef:	add    esp,0xc
640042f2:	mov    ecx,0x6402a4e0
640042f7:	mov    DWORD PTR [esp+0x4],0x114
640042ff:	call   eax
64004301:	lea    ecx,[esp+0x4]
64004305:	mov    esi,eax
64004307:	push   ecx
64004308:	add    esi,0x10
6400430b:	call   DWORD PTR ds:0x64022068
64004311:	test   eax,eax
64004313:	je     0x64004355
64004315:	mov    edx,DWORD PTR [esp+0x8]
64004319:	mov    eax,DWORD PTR [esp+0xc]
6400431d:	mov    DWORD PTR [edi],edx
6400431f:	mov    DWORD PTR [ebx],eax
64004321:	lea    eax,[esi-0x10]
64004324:	lea    ecx,[eax+0xc]
64004327:	or     edx,0xffffffff
6400432a:	lock xadd DWORD PTR [ecx],edx
6400432e:	dec    edx
6400432f:	test   edx,edx
64004331:	jg     0x6400433d
64004333:	mov    ecx,DWORD PTR [eax]
64004335:	mov    edx,DWORD PTR [ecx]
64004337:	push   eax
64004338:	mov    eax,DWORD PTR [edx+0x4]
6400433b:	call   eax
6400433d:	mov    al,0x1
6400433f:	pop    esi
64004340:	mov    ecx,DWORD PTR [esp+0x114]
64004347:	xor    ecx,esp
64004349:	call   0x64010c1e
6400434e:	add    esp,0x118
64004354:	ret    
64004355:	lea    eax,[esi-0x10]
64004358:	lea    ecx,[eax+0xc]
6400435b:	or     edx,0xffffffff
6400435e:	lock xadd DWORD PTR [ecx],edx
64004362:	dec    edx
64004363:	test   edx,edx
64004365:	jg     0x64004371
64004367:	mov    ecx,DWORD PTR [eax]
64004369:	mov    edx,DWORD PTR [ecx]
6400436b:	push   eax
6400436c:	mov    eax,DWORD PTR [edx+0x4]
6400436f:	call   eax
64004371:	mov    ecx,DWORD PTR [esp+0x118]
64004378:	pop    esi
64004379:	xor    ecx,esp
6400437b:	xor    al,al
6400437d:	call   0x64010c1e
64004382:	add    esp,0x118
64004388:	ret    
64004389:	int3   
6400438a:	int3   
6400438b:	int3   
6400438c:	int3   
6400438d:	int3   
6400438e:	int3   
6400438f:	int3   
64004390:	push   ebp
64004391:	mov    ebp,esp
64004393:	and    esp,0xfffffff8
64004396:	push   0xffffffff
64004398:	push   0x64021808
6400439d:	mov    eax,fs:0x0
640043a3:	push   eax
640043a4:	sub    esp,0x14
640043a7:	push   ebx
640043a8:	push   edi
640043a9:	mov    eax,ds:0x64029038
640043ae:	xor    eax,esp
640043b0:	push   eax
640043b1:	lea    eax,[esp+0x20]
640043b5:	mov    fs:0x0,eax
640043bb:	cmp    DWORD PTR ds:0x6402d2e0,0x0
640043c2:	jne    0x64004475
640043c8:	push   0x6402492c
640043cd:	push   0x12
640043cf:	push   0x64024964
640043d4:	mov    DWORD PTR ds:0x6402d2e0,0xc
640043de:	mov    DWORD PTR ds:0x6402d2e8,0x0
640043e8:	call   0x64004930
640043ed:	add    esp,0xc
640043f0:	push   eax
640043f1:	lea    ecx,[esp+0x14]
640043f5:	call   0x64002590
640043fa:	lea    ebx,[esp+0x18]
640043fe:	lea    edi,[esp+0x14]
64004402:	mov    DWORD PTR [esp+0x28],0x0
6400440a:	call   0x640042c0
6400440f:	test   al,al
64004411:	je     0x64004438
64004413:	cmp    DWORD PTR [esp+0x14],0x6
64004418:	jb     0x64004438
6400441a:	push   0x6402498c
6400441f:	push   0xf
64004421:	push   0x640249c4
64004426:	call   0x64004930
6400442b:	add    esp,0xc
6400442e:	push   eax
6400442f:	lea    ecx,[esp+0x14]
64004433:	call   0x640046f0
64004438:	mov    eax,DWORD PTR [esp+0x10]
6400443c:	push   0x0
6400443e:	push   0x6402d2e4
64004443:	push   0x1
64004445:	push   eax
64004446:	call   0x6400d110
6400444b:	call   eax
6400444d:	mov    DWORD PTR [esp+0x28],0xffffffff
64004455:	mov    eax,DWORD PTR [esp+0x10]
64004459:	add    eax,0xfffffff0
6400445c:	lea    ecx,[eax+0xc]
6400445f:	or     edx,0xffffffff
64004462:	lock xadd DWORD PTR [ecx],edx
64004466:	dec    edx
64004467:	test   edx,edx
64004469:	jg     0x64004475
6400446b:	mov    ecx,DWORD PTR [eax]
6400446d:	mov    edx,DWORD PTR [ecx]
6400446f:	push   eax
64004470:	mov    eax,DWORD PTR [edx+0x4]
64004473:	call   eax
64004475:	mov    eax,0x6402d2e0
6400447a:	mov    ecx,DWORD PTR [esp+0x20]
6400447e:	mov    DWORD PTR fs:0x0,ecx
64004485:	pop    ecx
64004486:	pop    edi
64004487:	pop    ebx
64004488:	mov    esp,ebp
6400448a:	pop    ebp
6400448b:	ret    
6400448c:	int3   
6400448d:	int3   
6400448e:	int3   
6400448f:	int3   
64004490:	push   0xffffffff
64004492:	push   0x640217d8
64004497:	mov    eax,fs:0x0
6400449d:	push   eax
6400449e:	push   ecx
6400449f:	push   esi
640044a0:	push   edi
640044a1:	mov    eax,ds:0x64029038
640044a6:	xor    eax,esp
640044a8:	push   eax
640044a9:	lea    eax,[esp+0x10]
640044ad:	mov    fs:0x0,eax
640044b3:	mov    esi,ecx
640044b5:	mov    DWORD PTR [esp+0xc],esi
640044b9:	mov    eax,ds:0x6402a4e0
640044be:	mov    edx,DWORD PTR [eax+0xc]
640044c1:	mov    ecx,0x6402a4e0
640044c6:	call   edx
640044c8:	add    eax,0x10
640044cb:	mov    DWORD PTR [esi],eax
640044cd:	mov    eax,DWORD PTR [esp+0x20]
640044d1:	test   eax,eax
640044d3:	mov    DWORD PTR [esp+0x18],0x0
640044db:	je     0x64004501
640044dd:	test   eax,0xffff0000
640044e2:	jne    0x64004501
640044e4:	movzx  edi,ax
640044e7:	push   0x0
640044e9:	push   edi
640044ea:	call   0x64001fa0
640044ef:	add    esp,0x8
640044f2:	test   eax,eax
640044f4:	je     0x64004509
640044f6:	push   edi
640044f7:	push   eax
640044f8:	mov    ecx,esi
640044fa:	call   0x64002910
640044ff:	jmp    0x64004509
64004501:	push   eax
64004502:	mov    ecx,esi
64004504:	call   0x64002800
64004509:	mov    eax,esi
6400450b:	mov    ecx,DWORD PTR [esp+0x10]
6400450f:	mov    DWORD PTR fs:0x0,ecx
64004516:	pop    ecx
64004517:	pop    edi
64004518:	pop    esi
64004519:	add    esp,0x10
6400451c:	ret    0x4
6400451f:	int3   
64004520:	mov    eax,DWORD PTR [edi]
64004522:	mov    edx,DWORD PTR [eax-0x8]
64004525:	push   ebx
64004526:	mov    ebx,DWORD PTR [eax-0xc]
64004529:	push   esi
6400452a:	mov    ecx,0x1
6400452f:	sub    ecx,DWORD PTR [eax-0x4]
64004532:	lea    esi,[ebx+0x1]
64004535:	sub    edx,esi
64004537:	or     ecx,edx
64004539:	jge    0x64004543
6400453b:	push   esi
6400453c:	mov    ecx,edi
6400453e:	call   0x64001e00
64004543:	test   esi,esi
64004545:	movsx  ax,BYTE PTR [esp+0xc]
6400454b:	mov    ecx,DWORD PTR [edi]
6400454d:	mov    WORD PTR [ecx+ebx*2],ax
64004551:	jl     0x6400456c
64004553:	mov    eax,DWORD PTR [edi]
64004555:	cmp    esi,DWORD PTR [eax-0x8]
64004558:	jg     0x6400456c
6400455a:	mov    DWORD PTR [eax-0xc],esi
6400455d:	mov    edx,DWORD PTR [edi]
6400455f:	mov    WORD PTR [edx+esi*2],0x0
64004565:	pop    esi
64004566:	mov    eax,edi
64004568:	pop    ebx
64004569:	ret    0x4
6400456c:	push   0x80070057
64004571:	call   0x64001040
64004576:	int3   
64004577:	int3   
64004578:	int3   
64004579:	int3   
6400457a:	int3   
6400457b:	int3   
6400457c:	int3   
6400457d:	int3   
6400457e:	int3   
6400457f:	int3   
64004580:	mov    eax,DWORD PTR [edi]
64004582:	mov    edx,DWORD PTR [eax-0x8]
64004585:	push   ebx
64004586:	mov    ebx,DWORD PTR [eax-0xc]
64004589:	push   esi
6400458a:	mov    ecx,0x1
6400458f:	sub    ecx,DWORD PTR [eax-0x4]
64004592:	lea    esi,[ebx+0x1]
64004595:	sub    edx,esi
64004597:	or     ecx,edx
64004599:	jge    0x640045a3
6400459b:	push   esi
6400459c:	mov    ecx,edi
6400459e:	call   0x64001e00
640045a3:	test   esi,esi
640045a5:	mov    eax,DWORD PTR [edi]
640045a7:	mov    WORD PTR [eax+ebx*2],0x5c
640045ad:	jl     0x640045c6
640045af:	mov    eax,DWORD PTR [edi]
640045b1:	cmp    esi,DWORD PTR [eax-0x8]
640045b4:	jg     0x640045c6
640045b6:	mov    DWORD PTR [eax-0xc],esi
640045b9:	mov    ecx,DWORD PTR [edi]
640045bb:	mov    WORD PTR [ecx+esi*2],0x0
640045c1:	pop    esi
640045c2:	mov    eax,edi
640045c4:	pop    ebx
640045c5:	ret    
640045c6:	push   0x80070057
640045cb:	call   0x64001040
640045d0:	int3   
640045d1:	int3   
640045d2:	int3   
640045d3:	int3   
640045d4:	int3   
640045d5:	int3   
640045d6:	int3   
640045d7:	int3   
640045d8:	int3   
640045d9:	int3   
640045da:	int3   
640045db:	int3   
640045dc:	int3   
640045dd:	int3   
640045de:	int3   
640045df:	int3   
640045e0:	push   esi
640045e1:	push   edi
640045e2:	mov    edi,DWORD PTR [ebx]
640045e4:	mov    ecx,edi
640045e6:	movzx  eax,WORD PTR [ecx]
640045e9:	xor    edx,edx
640045eb:	test   ax,ax
640045ee:	je     0x64004645
640045f0:	cmp    ax,0x7d
640045f4:	jne    0x640045fe
640045f6:	test   edx,edx
640045f8:	jne    0x64004600
640045fa:	mov    edx,ecx
640045fc:	jmp    0x64004600
640045fe:	xor    edx,edx
64004600:	movzx  eax,WORD PTR [ecx+0x2]
64004604:	add    ecx,0x2
64004607:	test   ax,ax
6400460a:	jne    0x640045f0
6400460c:	test   edx,edx
6400460e:	je     0x64004645
64004610:	mov    ecx,DWORD PTR [edi-0x8]
64004613:	sub    edx,edi
64004615:	sar    edx,1
64004617:	mov    eax,0x1
6400461c:	sub    eax,DWORD PTR [edi-0x4]
6400461f:	mov    esi,edx
64004621:	sub    ecx,esi
64004623:	or     eax,ecx
64004625:	jge    0x6400462f
64004627:	push   esi
64004628:	mov    ecx,ebx
6400462a:	call   0x64001e00
6400462f:	test   esi,esi
64004631:	jl     0x6400464a
64004633:	mov    eax,DWORD PTR [ebx]
64004635:	cmp    esi,DWORD PTR [eax-0x8]
64004638:	jg     0x6400464a
6400463a:	mov    DWORD PTR [eax-0xc],esi
6400463d:	mov    edx,DWORD PTR [ebx]
6400463f:	mov    WORD PTR [edx+esi*2],0x0
64004645:	pop    edi
64004646:	mov    eax,ebx
64004648:	pop    esi
64004649:	ret    
6400464a:	push   0x80070057
6400464f:	call   0x64001040
64004654:	int3   
64004655:	int3   
64004656:	int3   
64004657:	int3   
64004658:	int3   
64004659:	int3   
6400465a:	int3   
6400465b:	int3   
6400465c:	int3   
6400465d:	int3   
6400465e:	int3   
6400465f:	int3   
64004660:	mov    ecx,DWORD PTR [ebx]
64004662:	mov    eax,ecx
64004664:	cmp    WORD PTR [eax],0x7b
64004668:	jne    0x64004679
6400466a:	lea    ebx,[ebx+0x0]
64004670:	add    eax,0x2
64004673:	cmp    WORD PTR [eax],0x7b
64004677:	je     0x64004670
64004679:	cmp    eax,ecx
6400467b:	push   esi
6400467c:	je     0x640046d8
6400467e:	sub    eax,ecx
64004680:	sar    eax,1
64004682:	push   edi
64004683:	mov    edx,0x1
64004688:	sub    edx,DWORD PTR [ecx-0x4]
6400468b:	mov    edi,eax
6400468d:	mov    eax,DWORD PTR [ecx-0xc]
64004690:	mov    ecx,DWORD PTR [ecx-0x8]
64004693:	sub    ecx,eax
64004695:	or     edx,ecx
64004697:	jge    0x640046a1
64004699:	push   eax
6400469a:	mov    ecx,ebx
6400469c:	call   0x64001e00
640046a1:	mov    eax,DWORD PTR [ebx]
640046a3:	mov    esi,DWORD PTR [eax-0xc]
640046a6:	sub    esi,edi
640046a8:	lea    ecx,[esi+esi*1+0x2]
640046ac:	push   ecx
640046ad:	lea    edx,[eax+edi*2]
640046b0:	push   edx
640046b1:	push   ecx
640046b2:	push   eax
640046b3:	call   0x640105f5
640046b8:	push   eax
640046b9:	call   0x64001e90
640046be:	add    esp,0x14
640046c1:	test   esi,esi
640046c3:	pop    edi
640046c4:	jl     0x640046dc
640046c6:	mov    eax,DWORD PTR [ebx]
640046c8:	cmp    esi,DWORD PTR [eax-0x8]
640046cb:	jg     0x640046dc
640046cd:	mov    DWORD PTR [eax-0xc],esi
640046d0:	mov    eax,DWORD PTR [ebx]
640046d2:	mov    WORD PTR [eax+esi*2],0x0
640046d8:	mov    eax,ebx
640046da:	pop    esi
640046db:	ret    
640046dc:	push   0x80070057
640046e1:	call   0x64001040
640046e6:	int3   
640046e7:	int3   
640046e8:	int3   
640046e9:	int3   
640046ea:	int3   
640046eb:	int3   
640046ec:	int3   
640046ed:	int3   
640046ee:	int3   
640046ef:	int3   
640046f0:	push   esi
640046f1:	mov    esi,DWORD PTR [esp+0x8]
640046f5:	test   esi,esi
640046f7:	jne    0x64004706
640046f9:	xor    eax,eax
640046fb:	push   eax
640046fc:	push   esi
640046fd:	call   0x640029e0
64004702:	pop    esi
64004703:	ret    0x4
64004706:	mov    eax,esi
64004708:	push   edi
64004709:	lea    edi,[eax+0x2]
6400470c:	lea    esp,[esp+0x0]
64004710:	mov    dx,WORD PTR [eax]
64004713:	add    eax,0x2
64004716:	test   dx,dx
64004719:	jne    0x64004710
6400471b:	sub    eax,edi
6400471d:	pop    edi
6400471e:	sar    eax,1
64004720:	push   eax
64004721:	push   esi
64004722:	call   0x640029e0
64004727:	pop    esi
64004728:	ret    0x4
6400472b:	int3   
6400472c:	int3   
6400472d:	int3   
6400472e:	int3   
6400472f:	int3   
64004730:	push   ebp
64004731:	mov    ebp,esp
64004733:	and    esp,0xfffffff8
64004736:	push   0xffffffff
64004738:	push   0x64020d80
6400473d:	mov    eax,fs:0x0
64004743:	push   eax
64004744:	sub    esp,0x50
64004747:	mov    eax,ds:0x64029038
6400474c:	xor    eax,esp
6400474e:	mov    DWORD PTR [esp+0x48],eax
64004752:	push   ebx
64004753:	push   esi
64004754:	push   edi
64004755:	mov    eax,ds:0x64029038
6400475a:	xor    eax,esp
6400475c:	push   eax
6400475d:	lea    eax,[esp+0x60]
64004761:	mov    fs:0x0,eax
64004767:	mov    eax,ds:0x6402d208
6400476c:	mov    esi,DWORD PTR [ebp+0x8]
6400476f:	xor    edi,edi
64004771:	cmp    eax,edi
64004773:	mov    DWORD PTR [esp+0x1c],esi
64004777:	jne    0x64004787
64004779:	push   edi
6400477a:	push   edi
6400477b:	push   edi
6400477c:	call   DWORD PTR ds:0x640220b0
64004782:	mov    ds:0x6402d208,eax
64004787:	push   0xffffffff
64004789:	push   eax
6400478a:	call   DWORD PTR ds:0x6402205c
64004790:	test   eax,eax
64004792:	je     0x6400479b
64004794:	mov    eax,esi
64004796:	jmp    0x64004907
6400479b:	mov    eax,DWORD PTR [ebp+0xc]
6400479e:	push   eax
6400479f:	push   esi
640047a0:	lea    ecx,[esp+0x28]
640047a4:	mov    DWORD PTR [esp+0x40],0xf
640047ac:	mov    DWORD PTR [esp+0x3c],edi
640047b0:	mov    BYTE PTR [esp+0x2c],0x0
640047b5:	call   0x64001880
640047ba:	lea    ecx,[esp+0x20]
640047be:	push   ecx
640047bf:	lea    edx,[esp+0x18]
640047c3:	push   edx
640047c4:	mov    DWORD PTR [esp+0x70],edi
640047c8:	call   0x64004de0
640047cd:	mov    ecx,eax
640047cf:	call   0x64005580
640047d4:	call   0x64004de0
640047d9:	mov    esi,DWORD PTR [esp+0x14]
640047dd:	cmp    esi,edi
640047df:	mov    ebx,DWORD PTR [eax+0x4]
640047e2:	je     0x640047e8
640047e4:	cmp    esi,eax
640047e6:	je     0x640047ed
640047e8:	call   0x6401077a
640047ed:	mov    edi,DWORD PTR [esp+0x18]
640047f1:	cmp    edi,ebx
640047f3:	jne    0x6400486a
640047f5:	sub    esp,0x1c
640047f8:	mov    ecx,esp
640047fa:	mov    DWORD PTR [esp+0x30],esp
640047fe:	push   0xffffffff
64004800:	push   0x0
64004802:	lea    eax,[esp+0x44]
64004806:	mov    DWORD PTR [ecx+0x18],0xf
6400480d:	mov    DWORD PTR [ecx+0x14],0x0
64004814:	push   eax
64004815:	mov    BYTE PTR [ecx+0x4],0x0
64004819:	call   0x640017a0
6400481e:	lea    ecx,[esp+0x58]
64004822:	push   ecx
64004823:	call   0x64004e70
64004828:	add    esp,0x20
6400482b:	lea    edx,[esp+0x20]
6400482f:	push   edx
64004830:	mov    BYTE PTR [esp+0x6c],0x1
64004835:	call   0x64004de0
6400483a:	mov    ecx,eax
6400483c:	call   0x64005420
64004841:	push   0xffffffff
64004843:	push   0x0
64004845:	lea    ecx,[esp+0x44]
64004849:	push   ecx
6400484a:	mov    ecx,eax
6400484c:	call   0x640017a0
64004851:	mov    BYTE PTR [esp+0x68],0x0
64004856:	cmp    DWORD PTR [esp+0x54],0x10
6400485b:	jb     0x6400486a
6400485d:	mov    edx,DWORD PTR [esp+0x40]
64004861:	push   edx
64004862:	call   0x64010422
64004867:	add    esp,0x4
6400486a:	mov    eax,DWORD PTR [ebp+0x10]
6400486d:	movzx  ecx,BYTE PTR [eax]
64004870:	cmp    ecx,0x100
64004876:	jge    0x64004893
64004878:	lea    edx,[esp+0x20]
6400487c:	push   edx
6400487d:	lea    eax,[esp+0x18]
64004881:	push   eax
64004882:	call   0x64004de0
64004887:	mov    ecx,eax
64004889:	call   0x64005580
6400488e:	mov    esi,DWORD PTR [eax]
64004890:	mov    edi,DWORD PTR [eax+0x4]
64004893:	call   0x64004de0
64004898:	test   esi,esi
6400489a:	mov    ebx,DWORD PTR [eax+0x4]
6400489d:	je     0x640048a3
6400489f:	cmp    esi,eax
640048a1:	je     0x640048a8
640048a3:	call   0x6401077a
640048a8:	cmp    edi,ebx
640048aa:	je     0x640048cf
640048ac:	test   esi,esi
640048ae:	jne    0x640048b5
640048b0:	call   0x6401077a
640048b5:	cmp    edi,DWORD PTR [esi+0x4]
640048b8:	jne    0x640048bf
640048ba:	call   0x6401077a
640048bf:	cmp    DWORD PTR [edi+0x40],0x10
640048c3:	jb     0x640048ca
640048c5:	mov    edi,DWORD PTR [edi+0x2c]
640048c8:	jmp    0x640048d3
640048ca:	add    edi,0x2c
640048cd:	jmp    0x640048d3
640048cf:	mov    edi,DWORD PTR [esp+0x1c]
640048d3:	mov    eax,ds:0x6402d208
640048d8:	test   eax,eax
640048da:	jne    0x640048ea
640048dc:	push   eax
640048dd:	push   eax
640048de:	push   eax
640048df:	call   DWORD PTR ds:0x640220b0
640048e5:	mov    ds:0x6402d208,eax
640048ea:	push   eax
640048eb:	call   DWORD PTR ds:0x64022074
640048f1:	cmp    DWORD PTR [esp+0x38],0x10
640048f6:	jb     0x64004905
640048f8:	mov    ecx,DWORD PTR [esp+0x24]
640048fc:	push   ecx
640048fd:	call   0x64010422
64004902:	add    esp,0x4
64004905:	mov    eax,edi
64004907:	mov    ecx,DWORD PTR [esp+0x60]
6400490b:	mov    DWORD PTR fs:0x0,ecx
64004912:	pop    ecx
64004913:	pop    edi
64004914:	pop    esi
64004915:	pop    ebx
64004916:	mov    ecx,DWORD PTR [esp+0x48]
6400491a:	xor    ecx,esp
6400491c:	call   0x64010c1e
64004921:	mov    esp,ebp
64004923:	pop    ebp
64004924:	ret    
64004925:	int3   
64004926:	int3   
64004927:	int3   
64004928:	int3   
64004929:	int3   
6400492a:	int3   
6400492b:	int3   
6400492c:	int3   
6400492d:	int3   
6400492e:	int3   
6400492f:	int3   
64004930:	push   ebp
64004931:	mov    ebp,esp
64004933:	and    esp,0xfffffff8
64004936:	push   0xffffffff
64004938:	push   0x64020d40
6400493d:	mov    eax,fs:0x0
64004943:	push   eax
64004944:	sub    esp,0x50
64004947:	mov    eax,ds:0x64029038
6400494c:	xor    eax,esp
6400494e:	mov    DWORD PTR [esp+0x48],eax
64004952:	push   ebx
64004953:	push   esi
64004954:	push   edi
64004955:	mov    eax,ds:0x64029038
6400495a:	xor    eax,esp
6400495c:	push   eax
6400495d:	lea    eax,[esp+0x60]
64004961:	mov    fs:0x0,eax
64004967:	mov    eax,ds:0x6402d208
6400496c:	mov    esi,DWORD PTR [ebp+0x8]
6400496f:	xor    edi,edi
64004971:	cmp    eax,edi
64004973:	mov    DWORD PTR [esp+0x1c],esi
64004977:	jne    0x64004987
64004979:	push   edi
6400497a:	push   edi
6400497b:	push   edi
6400497c:	call   DWORD PTR ds:0x640220b0
64004982:	mov    ds:0x6402d208,eax
64004987:	push   0xffffffff
64004989:	push   eax
6400498a:	call   DWORD PTR ds:0x6402205c
64004990:	test   eax,eax
64004992:	je     0x6400499b
64004994:	mov    eax,esi
64004996:	jmp    0x64004b02
6400499b:	mov    eax,DWORD PTR [ebp+0xc]
6400499e:	push   eax
6400499f:	push   esi
640049a0:	lea    ecx,[esp+0x28]
640049a4:	mov    DWORD PTR [esp+0x40],0x7
640049ac:	mov    DWORD PTR [esp+0x3c],edi
640049b0:	mov    WORD PTR [esp+0x2c],di
640049b5:	call   0x64005ee0
640049ba:	lea    ecx,[esp+0x20]
640049be:	push   ecx
640049bf:	lea    edx,[esp+0x18]
640049c3:	push   edx
640049c4:	mov    DWORD PTR [esp+0x70],edi
640049c8:	call   0x64004f40
640049cd:	mov    ecx,eax
640049cf:	call   0x640057c0
640049d4:	call   0x64004f40
640049d9:	mov    esi,DWORD PTR [esp+0x14]
640049dd:	cmp    esi,edi
640049df:	mov    ebx,DWORD PTR [eax+0x4]
640049e2:	je     0x640049e8
640049e4:	cmp    esi,eax
640049e6:	je     0x640049ed
640049e8:	call   0x6401077a
640049ed:	mov    edi,DWORD PTR [esp+0x18]
640049f1:	cmp    edi,ebx
640049f3:	jne    0x64004a65
640049f5:	sub    esp,0x1c
640049f8:	mov    ecx,esp
640049fa:	mov    DWORD PTR [esp+0x30],esp
640049fe:	xor    ebx,ebx
64004a00:	push   0xffffffff
64004a02:	push   ebx
64004a03:	lea    eax,[esp+0x44]
64004a07:	mov    DWORD PTR [ecx+0x18],0x7
64004a0e:	mov    DWORD PTR [ecx+0x14],ebx
64004a11:	push   eax
64004a12:	mov    WORD PTR [ecx+0x4],bx
64004a16:	call   0x64005df0
64004a1b:	lea    ecx,[esp+0x58]
64004a1f:	push   ecx
64004a20:	call   0x64004fd0
64004a25:	add    esp,0x20
64004a28:	lea    edx,[esp+0x20]
64004a2c:	push   edx
64004a2d:	mov    BYTE PTR [esp+0x6c],0x1
64004a32:	call   0x64004f40
64004a37:	mov    ecx,eax
64004a39:	call   0x64005660
64004a3e:	push   0xffffffff
64004a40:	push   ebx
64004a41:	lea    ecx,[esp+0x44]
64004a45:	push   ecx
64004a46:	mov    ecx,eax
64004a48:	call   0x64005df0
64004a4d:	mov    BYTE PTR [esp+0x68],bl
64004a51:	cmp    DWORD PTR [esp+0x54],0x8
64004a56:	jb     0x64004a65
64004a58:	mov    edx,DWORD PTR [esp+0x40]
64004a5c:	push   edx
64004a5d:	call   0x64010422
64004a62:	add    esp,0x4
64004a65:	mov    eax,DWORD PTR [ebp+0x10]
64004a68:	movzx  ecx,BYTE PTR [eax]
64004a6b:	cmp    ecx,0x100
64004a71:	jge    0x64004a8e
64004a73:	lea    edx,[esp+0x20]
64004a77:	push   edx
64004a78:	lea    eax,[esp+0x18]
64004a7c:	push   eax
64004a7d:	call   0x64004f40
64004a82:	mov    ecx,eax
64004a84:	call   0x640057c0
64004a89:	mov    esi,DWORD PTR [eax]
64004a8b:	mov    edi,DWORD PTR [eax+0x4]
64004a8e:	call   0x64004f40
64004a93:	test   esi,esi
64004a95:	mov    ebx,DWORD PTR [eax+0x4]
64004a98:	je     0x64004a9e
64004a9a:	cmp    esi,eax
64004a9c:	je     0x64004aa3
64004a9e:	call   0x6401077a
64004aa3:	cmp    edi,ebx
64004aa5:	je     0x64004aca
64004aa7:	test   esi,esi
64004aa9:	jne    0x64004ab0
64004aab:	call   0x6401077a
64004ab0:	cmp    edi,DWORD PTR [esi+0x4]
64004ab3:	jne    0x64004aba
64004ab5:	call   0x6401077a
64004aba:	cmp    DWORD PTR [edi+0x40],0x8
64004abe:	jb     0x64004ac5
64004ac0:	mov    edi,DWORD PTR [edi+0x2c]
64004ac3:	jmp    0x64004ace
64004ac5:	add    edi,0x2c
64004ac8:	jmp    0x64004ace
64004aca:	mov    edi,DWORD PTR [esp+0x1c]
64004ace:	mov    eax,ds:0x6402d208
64004ad3:	test   eax,eax
64004ad5:	jne    0x64004ae5
64004ad7:	push   eax
64004ad8:	push   eax
64004ad9:	push   eax
64004ada:	call   DWORD PTR ds:0x640220b0
64004ae0:	mov    ds:0x6402d208,eax
64004ae5:	push   eax
64004ae6:	call   DWORD PTR ds:0x64022074
64004aec:	cmp    DWORD PTR [esp+0x38],0x8
64004af1:	jb     0x64004b00
64004af3:	mov    ecx,DWORD PTR [esp+0x24]
64004af7:	push   ecx
64004af8:	call   0x64010422
64004afd:	add    esp,0x4
64004b00:	mov    eax,edi
64004b02:	mov    ecx,DWORD PTR [esp+0x60]
64004b06:	mov    DWORD PTR fs:0x0,ecx
64004b0d:	pop    ecx
64004b0e:	pop    edi
64004b0f:	pop    esi
64004b10:	pop    ebx
64004b11:	mov    ecx,DWORD PTR [esp+0x48]
64004b15:	xor    ecx,esp
64004b17:	call   0x64010c1e
64004b1c:	mov    esp,ebp
64004b1e:	pop    ebp
64004b1f:	ret    
64004b20:	push   ebp
64004b21:	mov    ebp,esp
64004b23:	and    esp,0xfffffff8
64004b26:	sub    esp,0x1c
64004b29:	mov    ecx,DWORD PTR [ebp+0x8]
64004b2c:	mov    eax,DWORD PTR [ecx+0x4]
64004b2f:	push   ebx
64004b30:	push   esi
64004b31:	mov    esi,DWORD PTR [eax+0x4]
64004b34:	cmp    BYTE PTR [esi+0x29],0x0
64004b38:	mov    ebx,eax
64004b3a:	mov    al,0x1
64004b3c:	push   edi
64004b3d:	mov    BYTE PTR [esp+0x10],al
64004b41:	jne    0x64004be2
64004b47:	mov    edx,DWORD PTR [ebp+0x10]
64004b4a:	mov    eax,DWORD PTR [edx+0x14]
64004b4d:	mov    ecx,DWORD PTR [edx+0x18]
64004b50:	mov    DWORD PTR [esp+0x18],eax
64004b54:	mov    DWORD PTR [esp+0x14],eax
64004b58:	mov    DWORD PTR [esp+0x1c],ecx
64004b5c:	jmp    0x64004b67
64004b5e:	mov    edi,edi
64004b60:	mov    edx,DWORD PTR [ebp+0x10]
64004b63:	mov    eax,DWORD PTR [esp+0x14]
64004b67:	cmp    DWORD PTR [esi+0x24],0x10
64004b6b:	mov    ebx,DWORD PTR [esi+0x20]
64004b6e:	mov    DWORD PTR [esp+0x20],esi
64004b72:	jb     0x64004b79
64004b74:	mov    ecx,DWORD PTR [esi+0x10]
64004b77:	jmp    0x64004b7c
64004b79:	lea    ecx,[esi+0x10]
64004b7c:	mov    edi,DWORD PTR [esp+0x18]
64004b80:	cmp    eax,edi
64004b82:	mov    DWORD PTR [esp+0xc],ecx
64004b86:	jae    0x64004b8a
64004b88:	mov    edi,eax
64004b8a:	cmp    edi,ebx
64004b8c:	mov    ecx,edi
64004b8e:	jb     0x64004b92
64004b90:	mov    ecx,ebx
64004b92:	cmp    DWORD PTR [esp+0x1c],0x10
64004b97:	lea    eax,[edx+0x4]
64004b9a:	jb     0x64004b9e
64004b9c:	mov    eax,DWORD PTR [eax]
64004b9e:	mov    edx,DWORD PTR [esp+0xc]
64004ba2:	push   ecx
64004ba3:	push   edx
64004ba4:	push   eax
64004ba5:	call   0x64002c70
64004baa:	add    esp,0xc
64004bad:	test   eax,eax
64004baf:	jne    0x64004bc3
64004bb1:	cmp    edi,ebx
64004bb3:	jae    0x64004bba
64004bb5:	or     eax,0xffffffff
64004bb8:	jmp    0x64004bc1
64004bba:	xor    eax,eax
64004bbc:	cmp    edi,ebx
64004bbe:	setne  al
64004bc1:	test   eax,eax
64004bc3:	setl   al
64004bc6:	test   al,al
64004bc8:	mov    BYTE PTR [esp+0x10],al
64004bcc:	je     0x64004bd2
64004bce:	mov    esi,DWORD PTR [esi]
64004bd0:	jmp    0x64004bd5
64004bd2:	mov    esi,DWORD PTR [esi+0x8]
64004bd5:	cmp    BYTE PTR [esi+0x29],0x0
64004bd9:	je     0x64004b60
64004bdb:	mov    ebx,DWORD PTR [esp+0x20]
64004bdf:	mov    ecx,DWORD PTR [ebp+0x8]
64004be2:	test   al,al
64004be4:	mov    esi,ebx
64004be6:	mov    DWORD PTR [esp+0x24],esi
64004bea:	mov    DWORD PTR [esp+0x20],ecx
64004bee:	je     0x64004c33
64004bf0:	mov    eax,DWORD PTR [ecx+0x4]
64004bf3:	cmp    ebx,DWORD PTR [eax]
64004bf5:	jne    0x64004c26
64004bf7:	mov    edx,DWORD PTR [ebp+0x10]
64004bfa:	push   edx
64004bfb:	push   0x1
64004bfd:	lea    eax,[esp+0x28]
64004c01:	push   eax
64004c02:	push   ecx
64004c03:	mov    ecx,ebx
64004c05:	call   0x640050a0
64004c0a:	mov    edx,DWORD PTR [eax]
64004c0c:	mov    ecx,DWORD PTR [ebp+0xc]
64004c0f:	mov    eax,DWORD PTR [eax+0x4]
64004c12:	mov    DWORD PTR [ecx+0x4],eax
64004c15:	mov    DWORD PTR [ecx],edx
64004c17:	mov    BYTE PTR [ecx+0x8],0x1
64004c1b:	mov    eax,ecx
64004c1d:	pop    edi
64004c1e:	pop    esi
64004c1f:	pop    ebx
64004c20:	mov    esp,ebp
64004c22:	pop    ebp
64004c23:	ret    0xc
64004c26:	lea    esi,[esp+0x20]
64004c2a:	call   0x64006720
64004c2f:	mov    esi,DWORD PTR [esp+0x24]
64004c33:	mov    edi,DWORD PTR [ebp+0x10]
64004c36:	cmp    DWORD PTR [edi+0x18],0x10
64004c3a:	mov    edx,DWORD PTR [edi+0x14]
64004c3d:	lea    ecx,[esi+0xc]
64004c40:	jb     0x64004c47
64004c42:	mov    eax,DWORD PTR [edi+0x4]
64004c45:	jmp    0x64004c4a
64004c47:	lea    eax,[edi+0x4]
64004c4a:	push   edx
64004c4b:	mov    edx,DWORD PTR [ecx+0x14]
64004c4e:	push   eax
64004c4f:	push   edx
64004c50:	push   0x0
64004c52:	call   0x64004d70
64004c57:	test   eax,eax
64004c59:	jge    0x64004c8d
64004c5b:	mov    eax,DWORD PTR [esp+0x10]
64004c5f:	mov    edx,DWORD PTR [ebp+0x8]
64004c62:	push   edi
64004c63:	push   eax
64004c64:	lea    ecx,[esp+0x28]
64004c68:	push   ecx
64004c69:	push   edx
64004c6a:	mov    ecx,ebx
64004c6c:	call   0x640050a0
64004c71:	mov    edx,DWORD PTR [eax]
64004c73:	mov    ecx,DWORD PTR [ebp+0xc]
64004c76:	mov    eax,DWORD PTR [eax+0x4]
64004c79:	mov    DWORD PTR [ecx+0x4],eax
64004c7c:	mov    DWORD PTR [ecx],edx
64004c7e:	mov    BYTE PTR [ecx+0x8],0x1
64004c82:	mov    eax,ecx
64004c84:	pop    edi
64004c85:	pop    esi
64004c86:	pop    ebx
64004c87:	mov    esp,ebp
64004c89:	pop    ebp
64004c8a:	ret    0xc
64004c8d:	mov    eax,DWORD PTR [ebp+0xc]
64004c90:	mov    ecx,DWORD PTR [esp+0x20]
64004c94:	pop    edi
64004c95:	mov    DWORD PTR [eax+0x4],esi
64004c98:	pop    esi
64004c99:	mov    DWORD PTR [eax],ecx
64004c9b:	mov    BYTE PTR [eax+0x8],0x0
64004c9f:	pop    ebx
64004ca0:	mov    esp,ebp
64004ca2:	pop    ebp
64004ca3:	ret    0xc
64004ca6:	int3   
64004ca7:	int3   
64004ca8:	int3   
64004ca9:	int3   
64004caa:	int3   
64004cab:	int3   
64004cac:	int3   
64004cad:	int3   
64004cae:	int3   
64004caf:	int3   
64004cb0:	push   ebp
64004cb1:	mov    ebp,esp
64004cb3:	and    esp,0xfffffff8
64004cb6:	sub    esp,0x8
64004cb9:	push   ebx
64004cba:	push   edi
64004cbb:	mov    eax,esi
64004cbd:	call   0x64006640
64004cc2:	mov    edi,eax
64004cc4:	mov    eax,esi
64004cc6:	mov    ebx,0x6402d2ec
64004ccb:	call   0x640065a0
64004cd0:	mov    DWORD PTR [esp+0xc],0x0
64004cd8:	mov    edx,DWORD PTR [esp+0xc]
64004cdc:	push   edx
64004cdd:	push   edi
64004cde:	push   ebx
64004cdf:	mov    ecx,ebx
64004ce1:	push   eax
64004ce2:	push   ecx
64004ce3:	lea    ebx,[esp+0x20]
64004ce7:	call   0x640082a0
64004cec:	mov    eax,DWORD PTR [esp+0x20]
64004cf0:	add    esp,0x14
64004cf3:	pop    edi
64004cf4:	pop    ebx
64004cf5:	mov    esp,ebp
64004cf7:	pop    ebp
64004cf8:	ret    
64004cf9:	int3   
64004cfa:	int3   
64004cfb:	int3   
64004cfc:	int3   
64004cfd:	int3   
64004cfe:	int3   
64004cff:	int3   
64004d00:	mov    ecx,DWORD PTR [eax]
64004d02:	push   esi
64004d03:	mov    esi,DWORD PTR [edi]
64004d05:	lea    eax,[ecx-0x10]
64004d08:	sub    esi,0x10
64004d0b:	cmp    eax,esi
64004d0d:	je     0x64004d5d
64004d0f:	cmp    DWORD PTR [esi+0xc],0x0
64004d13:	push   ebx
64004d14:	lea    ebx,[esi+0xc]
64004d17:	jl     0x64004d4c
64004d19:	mov    edx,DWORD PTR [eax]
64004d1b:	cmp    edx,DWORD PTR [esi]
64004d1d:	jne    0x64004d4c
64004d1f:	push   ebp
64004d20:	push   eax
64004d21:	call   0x640028a0
64004d26:	mov    ebp,eax
64004d28:	add    esp,0x4
64004d2b:	or     eax,0xffffffff
64004d2e:	lock xadd DWORD PTR [ebx],eax
64004d32:	dec    eax
64004d33:	test   eax,eax
64004d35:	jg     0x64004d41
64004d37:	mov    ecx,DWORD PTR [esi]
64004d39:	mov    edx,DWORD PTR [ecx]
64004d3b:	mov    eax,DWORD PTR [edx+0x4]
64004d3e:	push   esi
64004d3f:	call   eax
64004d41:	add    ebp,0x10
64004d44:	mov    DWORD PTR [edi],ebp
64004d46:	pop    ebp
64004d47:	pop    ebx
64004d48:	mov    eax,edi
64004d4a:	pop    esi
64004d4b:	ret    
64004d4c:	mov    edx,DWORD PTR [ecx-0xc]
64004d4f:	push   edx
64004d50:	push   ecx
64004d51:	mov    ecx,edi
64004d53:	call   0x64002ae0
64004d58:	pop    ebx
64004d59:	mov    eax,edi
64004d5b:	pop    esi
64004d5c:	ret    
64004d5d:	mov    eax,edi
64004d5f:	pop    esi
64004d60:	ret    
64004d61:	int3   
64004d62:	int3   
64004d63:	int3   
64004d64:	int3   
64004d65:	int3   
64004d66:	int3   
64004d67:	int3   
64004d68:	int3   
64004d69:	int3   
64004d6a:	int3   
64004d6b:	int3   
64004d6c:	int3   
64004d6d:	int3   
64004d6e:	int3   
64004d6f:	int3   
64004d70:	push   ebx
64004d71:	push   ebp
64004d72:	mov    ebp,DWORD PTR [esp+0xc]
64004d76:	push   esi
64004d77:	push   edi
64004d78:	mov    edi,ecx
64004d7a:	cmp    DWORD PTR [edi+0x14],ebp
64004d7d:	jae    0x64004d84
64004d7f:	call   0x640103de
64004d84:	mov    eax,DWORD PTR [edi+0x14]
64004d87:	mov    esi,DWORD PTR [esp+0x18]
64004d8b:	sub    eax,ebp
64004d8d:	cmp    eax,esi
64004d8f:	jae    0x64004d93
64004d91:	mov    esi,eax
64004d93:	mov    ebx,DWORD PTR [esp+0x20]
64004d97:	cmp    esi,ebx
64004d99:	mov    eax,esi
64004d9b:	jb     0x64004d9f
64004d9d:	mov    eax,ebx
64004d9f:	cmp    DWORD PTR [edi+0x18],0x10
64004da3:	jb     0x64004daa
64004da5:	mov    edi,DWORD PTR [edi+0x4]
64004da8:	jmp    0x64004dad
64004daa:	add    edi,0x4
64004dad:	push   eax
64004dae:	mov    eax,DWORD PTR [esp+0x20]
64004db2:	push   eax
64004db3:	add    edi,ebp
64004db5:	push   edi
64004db6:	call   0x64002c70
64004dbb:	add    esp,0xc
64004dbe:	test   eax,eax
64004dc0:	jne    0x64004dd7
64004dc2:	cmp    esi,ebx
64004dc4:	jae    0x64004dd0
64004dc6:	pop    edi
64004dc7:	pop    esi
64004dc8:	pop    ebp
64004dc9:	or     eax,0xffffffff
64004dcc:	pop    ebx
64004dcd:	ret    0x10
64004dd0:	xor    eax,eax
64004dd2:	cmp    esi,ebx
64004dd4:	setne  al
64004dd7:	pop    edi
64004dd8:	pop    esi
64004dd9:	pop    ebp
64004dda:	pop    ebx
64004ddb:	ret    0x10
64004dde:	int3   
64004ddf:	int3   
64004de0:	push   0xffffffff
64004de2:	push   0x64020d0e
64004de7:	mov    eax,fs:0x0
64004ded:	push   eax
64004dee:	mov    eax,ds:0x64029038
64004df3:	xor    eax,esp
64004df5:	push   eax
64004df6:	lea    eax,[esp+0x4]
64004dfa:	mov    fs:0x0,eax
64004e00:	test   BYTE PTR ds:0x6402d2dc,0x1
64004e07:	jne    0x64004e59
64004e09:	or     DWORD PTR ds:0x6402d2dc,0x1
64004e10:	mov    ecx,0x6402d2c0
64004e15:	mov    DWORD PTR [esp+0xc],0x0
64004e1d:	call   0x64007d60
64004e22:	mov    ds:0x6402d2c4,eax
64004e27:	mov    BYTE PTR [eax+0x45],0x1
64004e2b:	mov    eax,ds:0x6402d2c4
64004e30:	mov    DWORD PTR [eax+0x4],eax
64004e33:	mov    eax,ds:0x6402d2c4
64004e38:	mov    DWORD PTR [eax],eax
64004e3a:	mov    eax,ds:0x6402d2c4
64004e3f:	mov    DWORD PTR [eax+0x8],eax
64004e42:	push   0x64021ea0
64004e47:	mov    DWORD PTR ds:0x6402d2c8,0x0
64004e51:	call   0x64010d51
64004e56:	add    esp,0x4
64004e59:	mov    eax,0x6402d2c0
64004e5e:	mov    ecx,DWORD PTR [esp+0x4]
64004e62:	mov    DWORD PTR fs:0x0,ecx
64004e69:	pop    ecx
64004e6a:	add    esp,0xc
64004e6d:	ret    
64004e6e:	int3   
64004e6f:	int3   
64004e70:	push   0xffffffff
64004e72:	push   0x64020888
64004e77:	mov    eax,fs:0x0
64004e7d:	push   eax
64004e7e:	push   ecx
64004e7f:	push   ebx
64004e80:	push   ebp
64004e81:	push   esi
64004e82:	push   edi
64004e83:	mov    eax,ds:0x64029038
64004e88:	xor    eax,esp
64004e8a:	push   eax
64004e8b:	lea    eax,[esp+0x18]
64004e8f:	mov    fs:0x0,eax
64004e95:	mov    esi,DWORD PTR [esp+0x28]
64004e99:	xor    eax,eax
64004e9b:	mov    DWORD PTR [esp+0x14],eax
64004e9f:	mov    DWORD PTR [esp+0x20],eax
64004ea3:	push   0xffffffff
64004ea5:	mov    DWORD PTR [esi+0x14],eax
64004ea8:	mov    DWORD PTR [esi+0x18],0xf
64004eaf:	lea    ebp,[esi+0x4]
64004eb2:	push   eax
64004eb3:	mov    BYTE PTR [ebp+0x0],al
64004eb6:	lea    eax,[esp+0x34]
64004eba:	push   eax
64004ebb:	mov    ecx,esi
64004ebd:	call   0x640017a0
64004ec2:	mov    eax,DWORD PTR [esi+0x14]
64004ec5:	mov    edi,0x1
64004eca:	cmp    eax,edi
64004ecc:	jbe    0x64004f0d
64004ece:	cmp    edi,eax
64004ed0:	jbe    0x64004ed7
64004ed2:	call   0x6401077a
64004ed7:	cmp    DWORD PTR [esi+0x18],0x10
64004edb:	jb     0x64004ee2
64004edd:	mov    ebx,DWORD PTR [ebp+0x0]
64004ee0:	jmp    0x64004ee4
64004ee2:	mov    ebx,ebp
64004ee4:	lea    ecx,[edi-0x1]
64004ee7:	cmp    ecx,DWORD PTR [esi+0x14]
64004eea:	jbe    0x64004ef1
64004eec:	call   0x6401077a
64004ef1:	cmp    DWORD PTR [esi+0x18],0x10
64004ef5:	jb     0x64004efc
64004ef7:	mov    eax,DWORD PTR [ebp+0x0]
64004efa:	jmp    0x64004efe
64004efc:	mov    eax,ebp
64004efe:	mov    dl,BYTE PTR [eax+edi*1-0x1]
64004f02:	xor    BYTE PTR [ebx+edi*1],dl
64004f05:	add    edi,0x1
64004f08:	cmp    edi,DWORD PTR [esi+0x14]
64004f0b:	jb     0x64004ed7
64004f0d:	cmp    DWORD PTR [esp+0x44],0x10
64004f12:	jb     0x64004f21
64004f14:	mov    eax,DWORD PTR [esp+0x30]
64004f18:	push   eax
64004f19:	call   0x64010422
64004f1e:	add    esp,0x4
64004f21:	mov    eax,esi
64004f23:	mov    ecx,DWORD PTR [esp+0x18]
64004f27:	mov    DWORD PTR fs:0x0,ecx
64004f2e:	pop    ecx
64004f2f:	pop    edi
64004f30:	pop    esi
64004f31:	pop    ebp
64004f32:	pop    ebx
64004f33:	add    esp,0x10
64004f36:	ret    
64004f37:	int3   
64004f38:	int3   
64004f39:	int3   
64004f3a:	int3   
64004f3b:	int3   
64004f3c:	int3   
64004f3d:	int3   
64004f3e:	int3   
64004f3f:	int3   
64004f40:	push   0xffffffff
64004f42:	push   0x64020cde
64004f47:	mov    eax,fs:0x0
64004f4d:	push   eax
64004f4e:	mov    eax,ds:0x64029038
64004f53:	xor    eax,esp
64004f55:	push   eax
64004f56:	lea    eax,[esp+0x4]
64004f5a:	mov    fs:0x0,eax
64004f60:	test   BYTE PTR ds:0x6402d2d8,0x1
64004f67:	jne    0x64004fb9
64004f69:	or     DWORD PTR ds:0x6402d2d8,0x1
64004f70:	mov    ecx,0x6402d2cc
64004f75:	mov    DWORD PTR [esp+0xc],0x0
64004f7d:	call   0x64007d60
64004f82:	mov    ds:0x6402d2d0,eax
64004f87:	mov    BYTE PTR [eax+0x45],0x1
64004f8b:	mov    eax,ds:0x6402d2d0
64004f90:	mov    DWORD PTR [eax+0x4],eax
64004f93:	mov    eax,ds:0x6402d2d0
64004f98:	mov    DWORD PTR [eax],eax
64004f9a:	mov    eax,ds:0x6402d2d0
64004f9f:	mov    DWORD PTR [eax+0x8],eax
64004fa2:	push   0x64021e50
64004fa7:	mov    DWORD PTR ds:0x6402d2d4,0x0
64004fb1:	call   0x64010d51
64004fb6:	add    esp,0x4
64004fb9:	mov    eax,0x6402d2cc
64004fbe:	mov    ecx,DWORD PTR [esp+0x4]
64004fc2:	mov    DWORD PTR fs:0x0,ecx
64004fc9:	pop    ecx
64004fca:	add    esp,0xc
64004fcd:	ret    
64004fce:	int3   
64004fcf:	int3   
64004fd0:	push   0xffffffff
64004fd2:	push   0x64020858
64004fd7:	mov    eax,fs:0x0
64004fdd:	push   eax
64004fde:	push   ecx
64004fdf:	push   ebx
64004fe0:	push   ebp
64004fe1:	push   esi
64004fe2:	push   edi
64004fe3:	mov    eax,ds:0x64029038
64004fe8:	xor    eax,esp
64004fea:	push   eax
64004feb:	lea    eax,[esp+0x18]
64004fef:	mov    fs:0x0,eax
64004ff5:	mov    esi,DWORD PTR [esp+0x28]
64004ff9:	xor    eax,eax
64004ffb:	mov    DWORD PTR [esp+0x14],eax
64004fff:	mov    DWORD PTR [esp+0x20],eax
64005003:	push   0xffffffff
64005005:	mov    DWORD PTR [esi+0x14],eax
64005008:	mov    DWORD PTR [esi+0x18],0x7
6400500f:	lea    ebp,[esi+0x4]
64005012:	push   eax
64005013:	mov    WORD PTR [ebp+0x0],ax
64005017:	lea    eax,[esp+0x34]
6400501b:	push   eax
6400501c:	mov    ecx,esi
6400501e:	call   0x64005df0
64005023:	mov    eax,DWORD PTR [esi+0x14]
64005026:	mov    edi,0x1
6400502b:	cmp    eax,edi
6400502d:	jbe    0x64005070
6400502f:	cmp    edi,eax
64005031:	jbe    0x64005038
64005033:	call   0x6401077a
64005038:	cmp    DWORD PTR [esi+0x18],0x8
6400503c:	jb     0x64005043
6400503e:	mov    ebx,DWORD PTR [ebp+0x0]
64005041:	jmp    0x64005045
64005043:	mov    ebx,ebp
64005045:	lea    ecx,[edi-0x1]
64005048:	cmp    ecx,DWORD PTR [esi+0x14]
6400504b:	jbe    0x64005052
6400504d:	call   0x6401077a
64005052:	cmp    DWORD PTR [esi+0x18],0x8
64005056:	jb     0x6400505d
64005058:	mov    eax,DWORD PTR [ebp+0x0]
6400505b:	jmp    0x6400505f
6400505d:	mov    eax,ebp
6400505f:	mov    dx,WORD PTR [eax+edi*2-0x2]
64005064:	xor    WORD PTR [ebx+edi*2],dx
64005068:	add    edi,0x1
6400506b:	cmp    edi,DWORD PTR [esi+0x14]
6400506e:	jb     0x64005038
64005070:	cmp    DWORD PTR [esp+0x44],0x8
64005075:	jb     0x64005084
64005077:	mov    eax,DWORD PTR [esp+0x30]
6400507b:	push   eax
6400507c:	call   0x64010422
64005081:	add    esp,0x4
64005084:	mov    eax,esi
64005086:	mov    ecx,DWORD PTR [esp+0x18]
6400508a:	mov    DWORD PTR fs:0x0,ecx
64005091:	pop    ecx
64005092:	pop    edi
64005093:	pop    esi
64005094:	pop    ebp
64005095:	pop    ebx
64005096:	add    esp,0x10
64005099:	ret    
6400509a:	int3   
6400509b:	int3   
6400509c:	int3   
6400509d:	int3   
6400509e:	int3   
6400509f:	int3   
640050a0:	push   0xffffffff
640050a2:	push   0x64020ca8
640050a7:	mov    eax,fs:0x0
640050ad:	push   eax
640050ae:	sub    esp,0x44
640050b1:	push   ebx
640050b2:	push   ebp
640050b3:	push   esi
640050b4:	push   edi
640050b5:	mov    eax,ds:0x64029038
640050ba:	xor    eax,esp
640050bc:	push   eax
640050bd:	lea    eax,[esp+0x58]
640050c1:	mov    fs:0x0,eax
640050c7:	mov    esi,ecx
640050c9:	mov    ebp,DWORD PTR [esp+0x68]
640050cd:	cmp    DWORD PTR [ebp+0x8],0x9249248
640050d4:	jb     0x64005121
640050d6:	push   0x13
640050d8:	xor    ebx,ebx
640050da:	push   0x640249e4
640050df:	lea    ecx,[esp+0x1c]
640050e3:	mov    DWORD PTR [esp+0x34],0xf
640050eb:	mov    DWORD PTR [esp+0x30],ebx
640050ef:	mov    BYTE PTR [esp+0x20],bl
640050f3:	call   0x64001880
640050f8:	lea    eax,[esp+0x14]
640050fc:	push   eax
640050fd:	lea    ecx,[esp+0x34]
64005101:	mov    DWORD PTR [esp+0x64],ebx
64005105:	call   0x64002d00
6400510a:	push   0x64026f58
6400510f:	lea    ecx,[esp+0x34]
64005113:	push   ecx
64005114:	mov    DWORD PTR [esp+0x38],0x6402231c
6400511c:	call   0x6401080d
64005121:	mov    edx,DWORD PTR [esp+0x74]
64005125:	mov    eax,DWORD PTR [ebp+0x4]
64005128:	push   edx
64005129:	push   eax
6400512a:	push   esi
6400512b:	push   eax
6400512c:	call   0x64005ab0
64005131:	mov    ecx,DWORD PTR [ebp+0x4]
64005134:	mov    edx,eax
64005136:	mov    eax,0x1
6400513b:	add    DWORD PTR [ebp+0x8],eax
6400513e:	xor    ebx,ebx
64005140:	cmp    esi,ecx
64005142:	mov    DWORD PTR [esp+0x68],edx
64005146:	jne    0x64005155
64005148:	mov    DWORD PTR [ecx+0x4],edx
6400514b:	mov    ecx,DWORD PTR [ebp+0x4]
6400514e:	mov    DWORD PTR [ecx],edx
64005150:	mov    ecx,DWORD PTR [ebp+0x4]
64005153:	jmp    0x64005173
64005155:	cmp    BYTE PTR [esp+0x70],bl
64005159:	je     0x64005168
6400515b:	mov    DWORD PTR [esi],edx
6400515d:	mov    ecx,DWORD PTR [ebp+0x4]
64005160:	cmp    esi,DWORD PTR [ecx]
64005162:	jne    0x64005176
64005164:	mov    DWORD PTR [ecx],edx
64005166:	jmp    0x64005176
64005168:	mov    DWORD PTR [esi+0x8],edx
6400516b:	mov    ecx,DWORD PTR [ebp+0x4]
6400516e:	cmp    esi,DWORD PTR [ecx+0x8]
64005171:	jne    0x64005176
64005173:	mov    DWORD PTR [ecx+0x8],edx
64005176:	mov    esi,DWORD PTR [edx+0x4]
64005179:	cmp    BYTE PTR [esi+0x28],bl
6400517c:	lea    ecx,[edx+0x4]
6400517f:	jne    0x640052f7
64005185:	mov    esi,DWORD PTR [ecx]
64005187:	mov    edi,DWORD PTR [esi+0x4]
6400518a:	cmp    esi,DWORD PTR [edi]
6400518c:	jne    0x64005238
64005192:	mov    edi,DWORD PTR [edi+0x8]
64005195:	cmp    BYTE PTR [edi+0x28],bl
64005198:	je     0x6400523f
6400519e:	cmp    edx,DWORD PTR [esi+0x8]
640051a1:	jne    0x640051de
640051a3:	mov    edx,esi
640051a5:	mov    esi,DWORD PTR [edx+0x8]
640051a8:	mov    ecx,DWORD PTR [esi]
640051aa:	mov    DWORD PTR [edx+0x8],ecx
640051ad:	mov    ecx,DWORD PTR [esi]
640051af:	cmp    BYTE PTR [ecx+0x29],bl
640051b2:	jne    0x640051b7
640051b4:	mov    DWORD PTR [ecx+0x4],edx
640051b7:	mov    edi,DWORD PTR [edx+0x4]
640051ba:	lea    ecx,[edx+0x4]
640051bd:	mov    DWORD PTR [esi+0x4],edi
640051c0:	mov    edi,DWORD PTR [ebp+0x4]
640051c3:	cmp    edx,DWORD PTR [edi+0x4]
640051c6:	jne    0x640051cd
640051c8:	mov    DWORD PTR [edi+0x4],esi
640051cb:	jmp    0x640051da
640051cd:	mov    edi,DWORD PTR [ecx]
640051cf:	cmp    edx,DWORD PTR [edi]
640051d1:	jne    0x640051d7
640051d3:	mov    DWORD PTR [edi],esi
640051d5:	jmp    0x640051da
640051d7:	mov    DWORD PTR [edi+0x8],esi
640051da:	mov    DWORD PTR [esi],edx
640051dc:	mov    DWORD PTR [ecx],esi
640051de:	mov    esi,DWORD PTR [ecx]
640051e0:	mov    BYTE PTR [esi+0x28],al
640051e3:	mov    esi,DWORD PTR [ecx]
640051e5:	mov    esi,DWORD PTR [esi+0x4]
640051e8:	mov    BYTE PTR [esi+0x28],bl
640051eb:	mov    ecx,DWORD PTR [ecx]
640051ed:	mov    ecx,DWORD PTR [ecx+0x4]
640051f0:	mov    esi,DWORD PTR [ecx]
640051f2:	mov    edi,DWORD PTR [esi+0x8]
640051f5:	mov    DWORD PTR [ecx],edi
640051f7:	mov    edi,DWORD PTR [esi+0x8]
640051fa:	cmp    BYTE PTR [edi+0x29],bl
640051fd:	jne    0x64005202
640051ff:	mov    DWORD PTR [edi+0x4],ecx
64005202:	mov    edi,DWORD PTR [ecx+0x4]
64005205:	mov    DWORD PTR [esi+0x4],edi
64005208:	mov    edi,DWORD PTR [ebp+0x4]
6400520b:	cmp    ecx,DWORD PTR [edi+0x4]
6400520e:	jne    0x6400521b
64005210:	mov    DWORD PTR [edi+0x4],esi
64005213:	mov    DWORD PTR [esi+0x8],ecx
64005216:	jmp    0x640052e1
6400521b:	mov    edi,DWORD PTR [ecx+0x4]
6400521e:	cmp    ecx,DWORD PTR [edi+0x8]
64005221:	jne    0x6400522e
64005223:	mov    DWORD PTR [edi+0x8],esi
64005226:	mov    DWORD PTR [esi+0x8],ecx
64005229:	jmp    0x640052e1
6400522e:	mov    DWORD PTR [edi],esi
64005230:	mov    DWORD PTR [esi+0x8],ecx
64005233:	jmp    0x640052e1
64005238:	mov    edi,DWORD PTR [edi]
6400523a:	cmp    BYTE PTR [edi+0x28],bl
6400523d:	jne    0x64005259
6400523f:	mov    edx,esi
64005241:	mov    BYTE PTR [edx+0x28],al
64005244:	mov    BYTE PTR [edi+0x28],al
64005247:	mov    edx,DWORD PTR [ecx]
64005249:	mov    edx,DWORD PTR [edx+0x4]
6400524c:	mov    BYTE PTR [edx+0x28],bl
6400524f:	mov    ecx,DWORD PTR [ecx]
64005251:	mov    edx,DWORD PTR [ecx+0x4]
64005254:	jmp    0x640052e4
64005259:	cmp    edx,DWORD PTR [esi]
6400525b:	jne    0x6400529a
6400525d:	mov    edx,esi
6400525f:	mov    esi,DWORD PTR [edx]
64005261:	mov    ecx,DWORD PTR [esi+0x8]
64005264:	mov    DWORD PTR [edx],ecx
64005266:	mov    ecx,DWORD PTR [esi+0x8]
64005269:	cmp    BYTE PTR [ecx+0x29],bl
6400526c:	jne    0x64005271
6400526e:	mov    DWORD PTR [ecx+0x4],edx
64005271:	mov    edi,DWORD PTR [edx+0x4]
64005274:	lea    ecx,[edx+0x4]
64005277:	mov    DWORD PTR [esi+0x4],edi
6400527a:	mov    edi,DWORD PTR [ebp+0x4]
6400527d:	cmp    edx,DWORD PTR [edi+0x4]
64005280:	jne    0x64005287
64005282:	mov    DWORD PTR [edi+0x4],esi
64005285:	jmp    0x64005295
64005287:	mov    edi,DWORD PTR [ecx]
64005289:	cmp    edx,DWORD PTR [edi+0x8]
6400528c:	jne    0x64005293
6400528e:	mov    DWORD PTR [edi+0x8],esi
64005291:	jmp    0x64005295
64005293:	mov    DWORD PTR [edi],esi
64005295:	mov    DWORD PTR [esi+0x8],edx
64005298:	mov    DWORD PTR [ecx],esi
6400529a:	mov    esi,DWORD PTR [ecx]
6400529c:	mov    BYTE PTR [esi+0x28],al
6400529f:	mov    esi,DWORD PTR [ecx]
640052a1:	mov    esi,DWORD PTR [esi+0x4]
640052a4:	mov    BYTE PTR [esi+0x28],bl
640052a7:	mov    ecx,DWORD PTR [ecx]
640052a9:	mov    ecx,DWORD PTR [ecx+0x4]
640052ac:	mov    esi,DWORD PTR [ecx+0x8]
640052af:	mov    edi,DWORD PTR [esi]
640052b1:	mov    DWORD PTR [ecx+0x8],edi
640052b4:	mov    edi,DWORD PTR [esi]
640052b6:	cmp    BYTE PTR [edi+0x29],bl
640052b9:	jne    0x640052be
640052bb:	mov    DWORD PTR [edi+0x4],ecx
640052be:	mov    edi,DWORD PTR [ecx+0x4]
640052c1:	mov    DWORD PTR [esi+0x4],edi
640052c4:	mov    edi,DWORD PTR [ebp+0x4]
640052c7:	cmp    ecx,DWORD PTR [edi+0x4]
640052ca:	jne    0x640052d1
640052cc:	mov    DWORD PTR [edi+0x4],esi
640052cf:	jmp    0x640052df
640052d1:	mov    edi,DWORD PTR [ecx+0x4]
640052d4:	cmp    ecx,DWORD PTR [edi]
640052d6:	jne    0x640052dc
640052d8:	mov    DWORD PTR [edi],esi
640052da:	jmp    0x640052df
640052dc:	mov    DWORD PTR [edi+0x8],esi
640052df:	mov    DWORD PTR [esi],ecx
640052e1:	mov    DWORD PTR [ecx+0x4],esi
640052e4:	mov    esi,DWORD PTR [edx+0x4]
640052e7:	cmp    BYTE PTR [esi+0x28],bl
640052ea:	lea    ecx,[edx+0x4]
640052ed:	je     0x64005185
640052f3:	mov    edx,DWORD PTR [esp+0x68]
640052f7:	mov    ecx,DWORD PTR [ebp+0x4]
640052fa:	mov    ecx,DWORD PTR [ecx+0x4]
640052fd:	mov    BYTE PTR [ecx+0x28],al
64005300:	mov    ecx,DWORD PTR [esp+0x6c]
64005304:	mov    DWORD PTR [ecx+0x4],edx
64005307:	mov    DWORD PTR [ecx],ebp
64005309:	mov    eax,ecx
6400530b:	mov    ecx,DWORD PTR [esp+0x58]
6400530f:	mov    DWORD PTR fs:0x0,ecx
64005316:	pop    ecx
64005317:	pop    edi
64005318:	pop    esi
64005319:	pop    ebp
6400531a:	pop    ebx
6400531b:	add    esp,0x50
6400531e:	ret    0x10
64005321:	int3   
64005322:	int3   
64005323:	int3   
64005324:	int3   
64005325:	int3   
64005326:	int3   
64005327:	int3   
64005328:	int3   
64005329:	int3   
6400532a:	int3   
6400532b:	int3   
6400532c:	int3   
6400532d:	int3   
6400532e:	int3   
6400532f:	int3   
64005330:	push   ebp
64005331:	mov    ebp,esp
64005333:	and    esp,0xfffffff8
64005336:	sub    esp,0xc
64005339:	push   edi
6400533a:	mov    edi,eax
6400533c:	mov    eax,DWORD PTR [edi+0x4]
6400533f:	mov    ecx,DWORD PTR [eax]
64005341:	push   eax
64005342:	push   edi
64005343:	push   ecx
64005344:	push   edi
64005345:	lea    eax,[esp+0x18]
64005349:	push   eax
6400534a:	call   0x64005900
6400534f:	mov    ecx,DWORD PTR [edi+0x4]
64005352:	push   ecx
64005353:	call   0x64010422
64005358:	add    esp,0x4
6400535b:	xor    eax,eax
6400535d:	mov    DWORD PTR [edi+0x4],eax
64005360:	mov    DWORD PTR [edi+0x8],eax
64005363:	pop    edi
64005364:	mov    esp,ebp
64005366:	pop    ebp
64005367:	ret    
64005368:	int3   
64005369:	int3   
6400536a:	int3   
6400536b:	int3   
6400536c:	int3   
6400536d:	int3   
6400536e:	int3   
6400536f:	int3   
64005370:	mov    eax,DWORD PTR [esp+0x8]
64005374:	cmp    DWORD PTR [eax+0x18],0x10
64005378:	mov    ecx,DWORD PTR [eax+0x14]
6400537b:	jb     0x64005382
6400537d:	mov    eax,DWORD PTR [eax+0x4]
64005380:	jmp    0x64005385
64005382:	add    eax,0x4
64005385:	push   ecx
64005386:	mov    ecx,DWORD PTR [esp+0x8]
6400538a:	push   eax
6400538b:	mov    eax,DWORD PTR [ecx+0x14]
6400538e:	push   eax
6400538f:	push   0x0
64005391:	call   0x64004d70
64005396:	xor    ecx,ecx
64005398:	test   eax,eax
6400539a:	setl   cl
6400539d:	mov    al,cl
6400539f:	ret    0x8
640053a2:	int3   
640053a3:	int3   
640053a4:	int3   
640053a5:	int3   
640053a6:	int3   
640053a7:	int3   
640053a8:	int3   
640053a9:	int3   
640053aa:	int3   
640053ab:	int3   
640053ac:	int3   
640053ad:	int3   
640053ae:	int3   
640053af:	int3   
640053b0:	cmp    DWORD PTR [esi],0x0
640053b3:	jne    0x640053ba
640053b5:	call   0x6401077a
640053ba:	mov    eax,DWORD PTR [esi+0x4]
640053bd:	cmp    BYTE PTR [eax+0x29],0x0
640053c1:	je     0x640053c8
640053c3:	jmp    0x6401077a
640053c8:	mov    ecx,DWORD PTR [eax+0x8]
640053cb:	cmp    BYTE PTR [ecx+0x29],0x0
640053cf:	jne    0x640053ee
640053d1:	mov    eax,DWORD PTR [ecx]
640053d3:	cmp    BYTE PTR [eax+0x29],0x0
640053d7:	jne    0x640053ea
640053d9:	lea    esp,[esp+0x0]
640053e0:	mov    ecx,eax
640053e2:	mov    eax,DWORD PTR [ecx]
640053e4:	cmp    BYTE PTR [eax+0x29],0x0
640053e8:	je     0x640053e0
640053ea:	mov    DWORD PTR [esi+0x4],ecx
640053ed:	ret    
640053ee:	mov    eax,DWORD PTR [eax+0x4]
640053f1:	cmp    BYTE PTR [eax+0x29],0x0
640053f5:	jne    0x6400540d
640053f7:	mov    ecx,DWORD PTR [esi+0x4]
640053fa:	cmp    ecx,DWORD PTR [eax+0x8]
640053fd:	jne    0x6400540d
640053ff:	mov    DWORD PTR [esi+0x4],eax
64005402:	mov    edx,eax
64005404:	mov    eax,DWORD PTR [edx+0x4]
64005407:	cmp    BYTE PTR [eax+0x29],0x0
6400540b:	je     0x640053f7
6400540d:	mov    DWORD PTR [esi+0x4],eax
64005410:	ret    
64005411:	int3   
64005412:	int3   
64005413:	int3   
64005414:	int3   
64005415:	int3   
64005416:	int3   
64005417:	int3   
64005418:	int3   
64005419:	int3   
6400541a:	int3   
6400541b:	int3   
6400541c:	int3   
6400541d:	int3   
6400541e:	int3   
6400541f:	int3   
64005420:	push   ebp
64005421:	mov    ebp,esp
64005423:	and    esp,0xfffffff8
64005426:	push   0xffffffff
64005428:	push   0x64020c80
6400542d:	mov    eax,fs:0x0
64005433:	push   eax
64005434:	sub    esp,0x60
64005437:	push   ebx
64005438:	push   esi
64005439:	push   edi
6400543a:	mov    eax,ds:0x64029038
6400543f:	xor    eax,esp
64005441:	push   eax
64005442:	lea    eax,[esp+0x70]
64005446:	mov    fs:0x0,eax
6400544c:	mov    edi,ecx
6400544e:	mov    ebx,DWORD PTR [ebp+0x8]
64005451:	push   ebx
64005452:	call   0x64006b80
64005457:	test   edi,edi
64005459:	mov    esi,eax
6400545b:	jne    0x64005462
6400545d:	call   0x6401077a
64005462:	mov    eax,DWORD PTR [edi+0x4]
64005465:	cmp    esi,eax
64005467:	je     0x64005491
64005469:	cmp    DWORD PTR [esi+0x24],0x10
6400546d:	mov    ecx,DWORD PTR [esi+0x20]
64005470:	jb     0x64005477
64005472:	mov    eax,DWORD PTR [esi+0x10]
64005475:	jmp    0x6400547a
64005477:	lea    eax,[esi+0x10]
6400547a:	push   ecx
6400547b:	push   eax
6400547c:	mov    eax,DWORD PTR [ebx+0x14]
6400547f:	push   eax
64005480:	push   0x0
64005482:	mov    ecx,ebx
64005484:	call   0x64004d70
64005489:	test   eax,eax
6400548b:	jge    0x64005545
64005491:	xor    eax,eax
64005493:	mov    DWORD PTR [esp+0x30],0xf
6400549b:	mov    DWORD PTR [esp+0x2c],eax
6400549f:	mov    BYTE PTR [esp+0x1c],al
640054a3:	lea    ecx,[esp+0x18]
640054a7:	push   ecx
640054a8:	push   ebx
640054a9:	lea    ecx,[esp+0x3c]
640054ad:	mov    DWORD PTR [esp+0x80],eax
640054b4:	call   0x64005d70
640054b9:	push   eax
640054ba:	push   esi
640054bb:	push   edi
640054bc:	lea    edx,[esp+0x1c]
640054c0:	push   edx
640054c1:	mov    ecx,edi
640054c3:	mov    BYTE PTR [esp+0x88],0x1
640054cb:	call   0x64005b60
640054d0:	cmp    DWORD PTR [esp+0x68],0x10
640054d5:	mov    edi,DWORD PTR [eax]
640054d7:	mov    esi,DWORD PTR [eax+0x4]
640054da:	jb     0x640054e9
640054dc:	mov    eax,DWORD PTR [esp+0x54]
640054e0:	push   eax
640054e1:	call   0x64010422
640054e6:	add    esp,0x4
640054e9:	xor    ebx,ebx
640054eb:	cmp    DWORD PTR [esp+0x4c],0x10
640054f0:	mov    DWORD PTR [esp+0x68],0xf
640054f8:	mov    DWORD PTR [esp+0x64],ebx
640054fc:	mov    BYTE PTR [esp+0x54],bl
64005500:	jb     0x6400550f
64005502:	mov    ecx,DWORD PTR [esp+0x38]
64005506:	push   ecx
64005507:	call   0x64010422
6400550c:	add    esp,0x4
6400550f:	cmp    DWORD PTR [esp+0x30],0x10
64005514:	mov    DWORD PTR [esp+0x4c],0xf
6400551c:	mov    DWORD PTR [esp+0x48],ebx
64005520:	mov    BYTE PTR [esp+0x38],bl
64005524:	jb     0x64005533
64005526:	mov    edx,DWORD PTR [esp+0x1c]
6400552a:	push   edx
6400552b:	call   0x64010422
64005530:	add    esp,0x4
64005533:	mov    DWORD PTR [esp+0x30],0xf
6400553b:	mov    DWORD PTR [esp+0x2c],ebx
6400553f:	mov    BYTE PTR [esp+0x1c],bl
64005543:	jmp    0x64005547
64005545:	xor    ebx,ebx
64005547:	cmp    edi,ebx
64005549:	jne    0x64005550
6400554b:	call   0x6401077a
64005550:	cmp    esi,DWORD PTR [edi+0x4]
64005553:	jne    0x6400555a
64005555:	call   0x6401077a
6400555a:	lea    eax,[esi+0x28]
6400555d:	mov    ecx,DWORD PTR [esp+0x70]
64005561:	mov    DWORD PTR fs:0x0,ecx
64005568:	pop    ecx
64005569:	pop    edi
6400556a:	pop    esi
6400556b:	pop    ebx
6400556c:	mov    esp,ebp
6400556e:	pop    ebp
6400556f:	ret    0x4
64005572:	int3   
64005573:	int3   
64005574:	int3   
64005575:	int3   
64005576:	int3   
64005577:	int3   
64005578:	int3   
64005579:	int3   
6400557a:	int3   
6400557b:	int3   
6400557c:	int3   
6400557d:	int3   
6400557e:	int3   
6400557f:	int3   
64005580:	sub    esp,0x18
64005583:	push   ebx
64005584:	mov    ebx,DWORD PTR [esp+0x24]
64005588:	push   esi
64005589:	push   edi
6400558a:	push   ebx
6400558b:	mov    esi,ecx
6400558d:	call   0x64006b80
64005592:	test   esi,esi
64005594:	mov    edi,eax
64005596:	mov    DWORD PTR [esp+0x14],edi
6400559a:	jne    0x640055a1
6400559c:	call   0x6401077a
640055a1:	cmp    edi,DWORD PTR [esi+0x4]
640055a4:	mov    DWORD PTR [esp+0x10],esi
640055a8:	je     0x640055d4
640055aa:	cmp    DWORD PTR [edi+0x24],0x10
640055ae:	mov    eax,DWORD PTR [edi+0x20]
640055b1:	jb     0x640055b8
640055b3:	mov    edi,DWORD PTR [edi+0x10]
640055b6:	jmp    0x640055bb
640055b8:	add    edi,0x10
640055bb:	push   eax
640055bc:	mov    eax,DWORD PTR [ebx+0x14]
640055bf:	push   edi
640055c0:	push   eax
640055c1:	push   0x0
640055c3:	mov    ecx,ebx
640055c5:	call   0x64004d70
640055ca:	test   eax,eax
640055cc:	jl     0x640055d4
640055ce:	lea    ecx,[esp+0x10]
640055d2:	jmp    0x640055e3
640055d4:	mov    ecx,DWORD PTR [esi+0x4]
640055d7:	mov    DWORD PTR [esp+0x1c],ecx
640055db:	mov    DWORD PTR [esp+0x18],esi
640055df:	lea    ecx,[esp+0x18]
640055e3:	mov    edx,DWORD PTR [ecx]
640055e5:	mov    eax,DWORD PTR [esp+0x28]
640055e9:	mov    ecx,DWORD PTR [ecx+0x4]
640055ec:	pop    edi
640055ed:	pop    esi
640055ee:	mov    DWORD PTR [eax],edx
640055f0:	mov    DWORD PTR [eax+0x4],ecx
640055f3:	pop    ebx
640055f4:	add    esp,0x18
640055f7:	ret    0x8
640055fa:	int3   
640055fb:	int3   
640055fc:	int3   
640055fd:	int3   
640055fe:	int3   
640055ff:	int3   
64005600:	push   esi
64005601:	mov    esi,ecx
64005603:	mov    eax,DWORD PTR [esi]
64005605:	test   eax,eax
64005607:	push   edi
64005608:	mov    edi,DWORD PTR [esp+0xc]
6400560c:	je     0x64005612
6400560e:	cmp    eax,DWORD PTR [edi]
64005610:	je     0x64005617
64005612:	call   0x6401077a
64005617:	mov    eax,DWORD PTR [esi+0x4]
6400561a:	xor    ecx,ecx
6400561c:	cmp    eax,DWORD PTR [edi+0x4]
6400561f:	pop    edi
64005620:	sete   cl
64005623:	mov    al,cl
64005625:	pop    esi
64005626:	ret    0x4
64005629:	int3   
6400562a:	int3   
6400562b:	int3   
6400562c:	int3   
6400562d:	int3   
6400562e:	int3   
6400562f:	int3   
64005630:	push   esi
64005631:	mov    esi,ecx
64005633:	cmp    DWORD PTR [esi+0x18],0x8
64005637:	jb     0x64005645
64005639:	mov    eax,DWORD PTR [esi+0x4]
6400563c:	push   eax
6400563d:	call   0x64010422
64005642:	add    esp,0x4
64005645:	xor    eax,eax
64005647:	mov    DWORD PTR [esi+0x18],0x7
6400564e:	mov    DWORD PTR [esi+0x14],eax
64005651:	mov    WORD PTR [esi+0x4],ax
64005655:	pop    esi
64005656:	ret    
64005657:	int3   
64005658:	int3   
64005659:	int3   
6400565a:	int3   
6400565b:	int3   
6400565c:	int3   
6400565d:	int3   
6400565e:	int3   
6400565f:	int3   
64005660:	push   ebp
64005661:	mov    ebp,esp
64005663:	and    esp,0xfffffff8
64005666:	push   0xffffffff
64005668:	push   0x64020c50
6400566d:	mov    eax,fs:0x0
64005673:	push   eax
64005674:	sub    esp,0x60
64005677:	push   ebx
64005678:	push   esi
64005679:	push   edi
6400567a:	mov    eax,ds:0x64029038
6400567f:	xor    eax,esp
64005681:	push   eax
64005682:	lea    eax,[esp+0x70]
64005686:	mov    fs:0x0,eax
6400568c:	mov    edi,ecx
6400568e:	mov    ebx,DWORD PTR [ebp+0x8]
64005691:	push   ebx
64005692:	call   0x64007010
64005697:	test   edi,edi
64005699:	mov    esi,eax
6400569b:	jne    0x640056a2
6400569d:	call   0x6401077a
640056a2:	mov    eax,DWORD PTR [edi+0x4]
640056a5:	cmp    esi,eax
640056a7:	je     0x640056d1
640056a9:	cmp    DWORD PTR [esi+0x24],0x8
640056ad:	mov    ecx,DWORD PTR [esi+0x20]
640056b0:	jb     0x640056b7
640056b2:	mov    eax,DWORD PTR [esi+0x10]
640056b5:	jmp    0x640056ba
640056b7:	lea    eax,[esi+0x10]
640056ba:	push   ecx
640056bb:	push   eax
640056bc:	mov    eax,DWORD PTR [ebx+0x14]
640056bf:	push   eax
640056c0:	push   0x0
640056c2:	mov    ecx,ebx
640056c4:	call   0x64008120
640056c9:	test   eax,eax
640056cb:	jge    0x64005789
640056d1:	xor    eax,eax
640056d3:	mov    DWORD PTR [esp+0x30],0x7
640056db:	mov    DWORD PTR [esp+0x2c],eax
640056df:	mov    WORD PTR [esp+0x1c],ax
640056e4:	lea    ecx,[esp+0x18]
640056e8:	push   ecx
640056e9:	push   ebx
640056ea:	lea    ecx,[esp+0x3c]
640056ee:	mov    DWORD PTR [esp+0x80],eax
640056f5:	call   0x64006210
640056fa:	push   eax
640056fb:	push   esi
640056fc:	push   edi
640056fd:	lea    edx,[esp+0x1c]
64005701:	push   edx
64005702:	mov    ecx,edi
64005704:	mov    BYTE PTR [esp+0x88],0x1
6400570c:	call   0x64005fc0
64005711:	cmp    DWORD PTR [esp+0x68],0x8
64005716:	mov    edi,DWORD PTR [eax]
64005718:	mov    esi,DWORD PTR [eax+0x4]
6400571b:	jb     0x6400572a
6400571d:	mov    eax,DWORD PTR [esp+0x54]
64005721:	push   eax
64005722:	call   0x64010422
64005727:	add    esp,0x4
6400572a:	xor    ebx,ebx
6400572c:	cmp    DWORD PTR [esp+0x4c],0x8
64005731:	mov    DWORD PTR [esp+0x68],0x7
64005739:	mov    DWORD PTR [esp+0x64],ebx
6400573d:	mov    WORD PTR [esp+0x54],bx
64005742:	jb     0x64005751
64005744:	mov    ecx,DWORD PTR [esp+0x38]
64005748:	push   ecx
64005749:	call   0x64010422
6400574e:	add    esp,0x4
64005751:	cmp    DWORD PTR [esp+0x30],0x8
64005756:	mov    DWORD PTR [esp+0x4c],0x7
6400575e:	mov    DWORD PTR [esp+0x48],ebx
64005762:	mov    WORD PTR [esp+0x38],bx
64005767:	jb     0x64005776
64005769:	mov    edx,DWORD PTR [esp+0x1c]
6400576d:	push   edx
6400576e:	call   0x64010422
64005773:	add    esp,0x4
64005776:	mov    DWORD PTR [esp+0x30],0x7
6400577e:	mov    DWORD PTR [esp+0x2c],ebx
64005782:	mov    WORD PTR [esp+0x1c],bx
64005787:	jmp    0x6400578b
64005789:	xor    ebx,ebx
6400578b:	cmp    edi,ebx
6400578d:	jne    0x64005794
6400578f:	call   0x6401077a
64005794:	cmp    esi,DWORD PTR [edi+0x4]
64005797:	jne    0x6400579e
64005799:	call   0x6401077a
6400579e:	lea    eax,[esi+0x28]
640057a1:	mov    ecx,DWORD PTR [esp+0x70]
640057a5:	mov    DWORD PTR fs:0x0,ecx
640057ac:	pop    ecx
640057ad:	pop    edi
640057ae:	pop    esi
640057af:	pop    ebx
640057b0:	mov    esp,ebp
640057b2:	pop    ebp
640057b3:	ret    0x4
640057b6:	int3   
640057b7:	int3   
640057b8:	int3   
640057b9:	int3   
640057ba:	int3   
640057bb:	int3   
640057bc:	int3   
640057bd:	int3   
640057be:	int3   
640057bf:	int3   
640057c0:	sub    esp,0x18
640057c3:	push   ebx
640057c4:	mov    ebx,DWORD PTR [esp+0x24]
640057c8:	push   esi
640057c9:	push   edi
640057ca:	push   ebx
640057cb:	mov    esi,ecx
640057cd:	call   0x64007010
640057d2:	test   esi,esi
640057d4:	mov    edi,eax
640057d6:	mov    DWORD PTR [esp+0x14],edi
640057da:	jne    0x640057e1
640057dc:	call   0x6401077a
640057e1:	cmp    edi,DWORD PTR [esi+0x4]
640057e4:	mov    DWORD PTR [esp+0x10],esi
640057e8:	je     0x64005814
640057ea:	cmp    DWORD PTR [edi+0x24],0x8
640057ee:	mov    eax,DWORD PTR [edi+0x20]
640057f1:	jb     0x640057f8
640057f3:	mov    edi,DWORD PTR [edi+0x10]
640057f6:	jmp    0x640057fb
640057f8:	add    edi,0x10
640057fb:	push   eax
640057fc:	mov    eax,DWORD PTR [ebx+0x14]
640057ff:	push   edi
64005800:	push   eax
64005801:	push   0x0
64005803:	mov    ecx,ebx
64005805:	call   0x64008120
6400580a:	test   eax,eax
6400580c:	jl     0x64005814
6400580e:	lea    ecx,[esp+0x10]
64005812:	jmp    0x64005823
64005814:	mov    ecx,DWORD PTR [esi+0x4]
64005817:	mov    DWORD PTR [esp+0x1c],ecx
6400581b:	mov    DWORD PTR [esp+0x18],esi
6400581f:	lea    ecx,[esp+0x18]
64005823:	mov    edx,DWORD PTR [ecx]
64005825:	mov    eax,DWORD PTR [esp+0x28]
64005829:	mov    ecx,DWORD PTR [ecx+0x4]
6400582c:	pop    edi
6400582d:	pop    esi
6400582e:	mov    DWORD PTR [eax],edx
64005830:	mov    DWORD PTR [eax+0x4],ecx
64005833:	pop    ebx
64005834:	add    esp,0x18
64005837:	ret    0x8
6400583a:	int3   
6400583b:	int3   
6400583c:	int3   
6400583d:	int3   
6400583e:	int3   
6400583f:	int3   
64005840:	mov    eax,DWORD PTR [esp+0x4]
64005844:	push   esi
64005845:	push   eax
64005846:	mov    esi,ecx
64005848:	call   0x64002e30
6400584d:	mov    DWORD PTR [esi],0x6402231c
64005853:	mov    eax,esi
64005855:	pop    esi
64005856:	ret    0x4
64005859:	int3   
6400585a:	int3   
6400585b:	int3   
6400585c:	int3   
6400585d:	int3   
6400585e:	int3   
6400585f:	int3   
64005860:	push   ebx
64005861:	push   esi
64005862:	mov    esi,ecx
64005864:	cmp    DWORD PTR [esi+0x34],0x10
64005868:	jb     0x64005876
6400586a:	mov    eax,DWORD PTR [esi+0x20]
6400586d:	push   eax
6400586e:	call   0x64010422
64005873:	add    esp,0x4
64005876:	xor    ebx,ebx
64005878:	mov    DWORD PTR [esi+0x34],0xf
6400587f:	mov    DWORD PTR [esi+0x30],ebx
64005882:	mov    BYTE PTR [esi+0x20],bl
64005885:	cmp    DWORD PTR [esi+0x18],0x10
64005889:	jb     0x64005897
6400588b:	mov    ecx,DWORD PTR [esi+0x4]
6400588e:	push   ecx
6400588f:	call   0x64010422
64005894:	add    esp,0x4
64005897:	mov    DWORD PTR [esi+0x14],ebx
6400589a:	mov    DWORD PTR [esi+0x18],0xf
640058a1:	mov    BYTE PTR [esi+0x4],bl
640058a4:	pop    esi
640058a5:	pop    ebx
640058a6:	ret    
640058a7:	int3   
640058a8:	int3   
640058a9:	int3   
640058aa:	int3   
640058ab:	int3   
640058ac:	int3   
640058ad:	int3   
640058ae:	int3   
640058af:	int3   
640058b0:	push   esi
640058b1:	mov    esi,ecx
640058b3:	cmp    DWORD PTR [esi+0x34],0x8
640058b7:	push   edi
640058b8:	jb     0x640058c6
640058ba:	mov    eax,DWORD PTR [esi+0x20]
640058bd:	push   eax
640058be:	call   0x64010422
640058c3:	add    esp,0x4
640058c6:	xor    edi,edi
640058c8:	mov    DWORD PTR [esi+0x34],0x7
640058cf:	mov    DWORD PTR [esi+0x30],edi
640058d2:	mov    WORD PTR [esi+0x20],di
640058d6:	cmp    DWORD PTR [esi+0x18],0x8
640058da:	jb     0x640058e8
640058dc:	mov    ecx,DWORD PTR [esi+0x4]
640058df:	push   ecx
640058e0:	call   0x64010422
640058e5:	add    esp,0x4
640058e8:	mov    DWORD PTR [esi+0x14],edi
640058eb:	mov    DWORD PTR [esi+0x18],0x7
640058f2:	mov    WORD PTR [esi+0x4],di
640058f6:	pop    edi
640058f7:	pop    esi
640058f8:	ret    
640058f9:	int3   
640058fa:	int3   
640058fb:	int3   
640058fc:	int3   
640058fd:	int3   
640058fe:	int3   
640058ff:	int3   
64005900:	mov    eax,DWORD PTR [edi+0x4]
64005903:	sub    esp,0xc
64005906:	push   ebx
64005907:	mov    ebx,DWORD PTR [eax]
64005909:	push   ebp
6400590a:	mov    ebp,DWORD PTR [esp+0x1c]
6400590e:	test   ebp,ebp
64005910:	push   esi
64005911:	je     0x64005917
64005913:	cmp    ebp,edi
64005915:	je     0x6400591c
64005917:	call   0x6401077a
6400591c:	mov    esi,DWORD PTR [esp+0x24]
64005920:	cmp    esi,ebx
64005922:	jne    0x64005980
64005924:	mov    eax,DWORD PTR [esp+0x28]
64005928:	test   eax,eax
6400592a:	mov    ebx,DWORD PTR [edi+0x4]
6400592d:	je     0x64005933
6400592f:	cmp    eax,edi
64005931:	je     0x64005938
64005933:	call   0x6401077a
64005938:	cmp    DWORD PTR [esp+0x2c],ebx
6400593c:	jne    0x64005980
6400593e:	mov    ecx,DWORD PTR [edi+0x4]
64005941:	mov    edx,DWORD PTR [ecx+0x4]
64005944:	push   edx
64005945:	mov    ecx,edi
64005947:	call   0x64007070
6400594c:	mov    eax,DWORD PTR [edi+0x4]
6400594f:	mov    DWORD PTR [eax+0x4],eax
64005952:	mov    eax,DWORD PTR [edi+0x4]
64005955:	mov    DWORD PTR [edi+0x8],0x0
6400595c:	mov    DWORD PTR [eax],eax
6400595e:	mov    eax,DWORD PTR [edi+0x4]
64005961:	mov    DWORD PTR [eax+0x8],eax
64005964:	mov    eax,DWORD PTR [edi+0x4]
64005967:	mov    ecx,DWORD PTR [eax]
64005969:	mov    eax,DWORD PTR [esp+0x1c]
6400596d:	mov    DWORD PTR [eax+0x4],ecx
64005970:	mov    DWORD PTR [eax],edi
64005972:	pop    esi
64005973:	pop    ebp
64005974:	pop    ebx
64005975:	add    esp,0xc
64005978:	ret    0x14
6400597b:	jmp    0x64005980
6400597d:	lea    ecx,[ecx+0x0]
64005980:	test   ebp,ebp
64005982:	je     0x6400598a
64005984:	cmp    ebp,DWORD PTR [esp+0x28]
64005988:	je     0x6400598f
6400598a:	call   0x6401077a
6400598f:	cmp    esi,DWORD PTR [esp+0x2c]
64005993:	je     0x640059fc
64005995:	test   ebp,ebp
64005997:	mov    DWORD PTR [esp+0x24],esi
6400599b:	jne    0x640059a2
6400599d:	call   0x6401077a
640059a2:	cmp    BYTE PTR [esi+0x29],0x0
640059a6:	je     0x640059af
640059a8:	call   0x6401077a
640059ad:	jmp    0x640059e9
640059af:	mov    eax,DWORD PTR [esi+0x8]
640059b2:	cmp    BYTE PTR [eax+0x29],0x0
640059b6:	jne    0x640059ce
640059b8:	mov    esi,eax
640059ba:	mov    eax,DWORD PTR [esi]
640059bc:	cmp    BYTE PTR [eax+0x29],0x0
640059c0:	jne    0x640059e9
640059c2:	mov    esi,eax
640059c4:	mov    eax,DWORD PTR [esi]
640059c6:	cmp    BYTE PTR [eax+0x29],0x0
640059ca:	je     0x640059c2
640059cc:	jmp    0x640059e9
640059ce:	mov    eax,DWORD PTR [esi+0x4]
640059d1:	cmp    BYTE PTR [eax+0x29],0x0
640059d5:	jne    0x640059e7
640059d7:	cmp    esi,DWORD PTR [eax+0x8]
640059da:	jne    0x640059e7
640059dc:	mov    esi,eax
640059de:	mov    eax,DWORD PTR [eax+0x4]
640059e1:	cmp    BYTE PTR [eax+0x29],0x0
640059e5:	je     0x640059d7
640059e7:	mov    esi,eax
640059e9:	mov    edx,DWORD PTR [esp+0x24]
640059ed:	push   edx
640059ee:	push   ebp
640059ef:	lea    eax,[esp+0x18]
640059f3:	push   eax
640059f4:	push   edi
640059f5:	call   0x64006290
640059fa:	jmp    0x64005980
640059fc:	mov    eax,DWORD PTR [esp+0x1c]
64005a00:	mov    DWORD PTR [eax+0x4],esi
64005a03:	pop    esi
64005a04:	mov    DWORD PTR [eax],ebp
64005a06:	pop    ebp
64005a07:	pop    ebx
64005a08:	add    esp,0xc
64005a0b:	ret    0x14
64005a0e:	int3   
64005a0f:	int3   
64005a10:	mov    eax,DWORD PTR [ecx+0x8]
64005a13:	mov    edx,DWORD PTR [eax]
64005a15:	mov    DWORD PTR [ecx+0x8],edx
64005a18:	mov    edx,DWORD PTR [eax]
64005a1a:	cmp    BYTE PTR [edx+0x29],0x0
64005a1e:	jne    0x64005a23
64005a20:	mov    DWORD PTR [edx+0x4],ecx
64005a23:	mov    edx,DWORD PTR [ecx+0x4]
64005a26:	mov    DWORD PTR [eax+0x4],edx
64005a29:	mov    edx,DWORD PTR [esp+0x4]
64005a2d:	mov    edx,DWORD PTR [edx+0x4]
64005a30:	cmp    ecx,DWORD PTR [edx+0x4]
64005a33:	jne    0x64005a40
64005a35:	mov    DWORD PTR [edx+0x4],eax
64005a38:	mov    DWORD PTR [eax],ecx
64005a3a:	mov    DWORD PTR [ecx+0x4],eax
64005a3d:	ret    0x4
64005a40:	mov    edx,DWORD PTR [ecx+0x4]
64005a43:	cmp    ecx,DWORD PTR [edx]
64005a45:	jne    0x64005a51
64005a47:	mov    DWORD PTR [edx],eax
64005a49:	mov    DWORD PTR [eax],ecx
64005a4b:	mov    DWORD PTR [ecx+0x4],eax
64005a4e:	ret    0x4
64005a51:	mov    DWORD PTR [edx+0x8],eax
64005a54:	mov    DWORD PTR [eax],ecx
64005a56:	mov    DWORD PTR [ecx+0x4],eax
64005a59:	ret    0x4
64005a5c:	int3   
64005a5d:	int3   
64005a5e:	int3   
64005a5f:	int3   
64005a60:	mov    eax,DWORD PTR [ecx]
64005a62:	mov    edx,DWORD PTR [eax+0x8]
64005a65:	mov    DWORD PTR [ecx],edx
64005a67:	mov    edx,DWORD PTR [eax+0x8]
64005a6a:	cmp    BYTE PTR [edx+0x29],0x0
64005a6e:	jne    0x64005a73
64005a70:	mov    DWORD PTR [edx+0x4],ecx
64005a73:	mov    edx,DWORD PTR [ecx+0x4]
64005a76:	mov    DWORD PTR [eax+0x4],edx
64005a79:	mov    edx,DWORD PTR [esp+0x4]
64005a7d:	mov    edx,DWORD PTR [edx+0x4]
64005a80:	cmp    ecx,DWORD PTR [edx+0x4]
64005a83:	jne    0x64005a91
64005a85:	mov    DWORD PTR [edx+0x4],eax
64005a88:	mov    DWORD PTR [eax+0x8],ecx
64005a8b:	mov    DWORD PTR [ecx+0x4],eax
64005a8e:	ret    0x4
64005a91:	mov    edx,DWORD PTR [ecx+0x4]
64005a94:	cmp    ecx,DWORD PTR [edx+0x8]
64005a97:	jne    0x64005aa5
64005a99:	mov    DWORD PTR [edx+0x8],eax
64005a9c:	mov    DWORD PTR [eax+0x8],ecx
64005a9f:	mov    DWORD PTR [ecx+0x4],eax
64005aa2:	ret    0x4
64005aa5:	mov    DWORD PTR [edx],eax
64005aa7:	mov    DWORD PTR [eax+0x8],ecx
64005aaa:	mov    DWORD PTR [ecx+0x4],eax
64005aad:	ret    0x4
64005ab0:	push   ebp
64005ab1:	mov    ebp,esp
64005ab3:	push   0xffffffff
64005ab5:	push   0x64020831
64005aba:	mov    eax,fs:0x0
64005ac0:	push   eax
64005ac1:	sub    esp,0xc
64005ac4:	push   ebx
64005ac5:	push   esi
64005ac6:	push   edi
64005ac7:	mov    eax,ds:0x64029038
64005acc:	xor    eax,ebp
64005ace:	push   eax
64005acf:	lea    eax,[ebp-0xc]
64005ad2:	mov    fs:0x0,eax
64005ad8:	mov    DWORD PTR [ebp-0x10],esp
64005adb:	push   0x2c
64005add:	call   0x640107a3
64005ae2:	mov    esi,eax
64005ae4:	xor    ebx,ebx
64005ae6:	mov    DWORD PTR [ebp-0x4],ebx
64005ae9:	add    esp,0x4
64005aec:	mov    DWORD PTR [ebp-0x14],esi
64005aef:	mov    DWORD PTR [ebp-0x18],esi
64005af2:	cmp    esi,ebx
64005af4:	mov    BYTE PTR [ebp-0x4],0x1
64005af8:	je     0x64005b2d
64005afa:	mov    eax,DWORD PTR [ebp+0x8]
64005afd:	mov    ecx,DWORD PTR [ebp+0xc]
64005b00:	mov    edx,DWORD PTR [ebp+0x10]
64005b03:	mov    DWORD PTR [esi],eax
64005b05:	mov    eax,DWORD PTR [ebp+0x14]
64005b08:	mov    DWORD PTR [esi+0x4],ecx
64005b0b:	push   0xffffffff
64005b0d:	lea    ecx,[esi+0xc]
64005b10:	mov    DWORD PTR [esi+0x8],edx
64005b13:	push   ebx
64005b14:	mov    DWORD PTR [ecx+0x18],0xf
64005b1b:	mov    DWORD PTR [ecx+0x14],ebx
64005b1e:	push   eax
64005b1f:	mov    BYTE PTR [ecx+0x4],bl
64005b22:	call   0x640017a0
64005b27:	mov    BYTE PTR [esi+0x28],bl
64005b2a:	mov    BYTE PTR [esi+0x29],bl
64005b2d:	mov    eax,esi
64005b2f:	mov    ecx,DWORD PTR [ebp-0xc]
64005b32:	mov    DWORD PTR fs:0x0,ecx
64005b39:	pop    ecx
64005b3a:	pop    edi
64005b3b:	pop    esi
64005b3c:	pop    ebx
64005b3d:	mov    esp,ebp
64005b3f:	pop    ebp
64005b40:	ret    0x10
64005b43:	mov    ecx,DWORD PTR [ebp-0x14]
64005b46:	push   ecx
64005b47:	call   0x64010422
64005b4c:	add    esp,0x4
64005b4f:	xor    ebx,ebx
64005b51:	push   ebx
64005b52:	push   ebx
64005b53:	call   0x6401080d
64005b58:	int3   
64005b59:	int3   
64005b5a:	int3   
64005b5b:	int3   
64005b5c:	int3   
64005b5d:	int3   
64005b5e:	int3   
64005b5f:	int3   
64005b60:	push   ebp
64005b61:	mov    ebp,esp
64005b63:	and    esp,0xfffffff8
64005b66:	sub    esp,0x14
64005b69:	push   ebx
64005b6a:	push   esi
64005b6b:	mov    esi,ecx
64005b6d:	cmp    DWORD PTR [esi+0x8],0x0
64005b71:	push   edi
64005b72:	jne    0x64005b94
64005b74:	mov    eax,DWORD PTR [ebp+0x14]
64005b77:	mov    ecx,DWORD PTR [esi+0x4]
64005b7a:	mov    edi,DWORD PTR [ebp+0x8]
64005b7d:	push   eax
64005b7e:	push   ecx
64005b7f:	push   0x1
64005b81:	push   edi
64005b82:	mov    ecx,esi
64005b84:	call   0x64006930
64005b89:	mov    eax,edi
64005b8b:	pop    edi
64005b8c:	pop    esi
64005b8d:	pop    ebx
64005b8e:	mov    esp,ebp
64005b90:	pop    ebp
64005b91:	ret    0x10
64005b94:	mov    edx,DWORD PTR [esi+0x4]
64005b97:	mov    edi,DWORD PTR [ebp+0xc]
64005b9a:	test   edi,edi
64005b9c:	mov    eax,DWORD PTR [edx]
64005b9e:	mov    DWORD PTR [esp+0x18],eax
64005ba2:	je     0x64005ba8
64005ba4:	cmp    edi,esi
64005ba6:	je     0x64005bad
64005ba8:	call   0x6401077a
64005bad:	mov    ebx,DWORD PTR [ebp+0x10]
64005bb0:	cmp    ebx,DWORD PTR [esp+0x18]
64005bb4:	jne    0x64005be7
64005bb6:	mov    edi,DWORD PTR [ebp+0x14]
64005bb9:	lea    ecx,[ebx+0xc]
64005bbc:	push   ecx
64005bbd:	push   edi
64005bbe:	mov    ecx,esi
64005bc0:	call   0x64005370
64005bc5:	test   al,al
64005bc7:	je     0x64005d43
64005bcd:	push   edi
64005bce:	mov    edi,DWORD PTR [ebp+0x8]
64005bd1:	push   ebx
64005bd2:	push   0x1
64005bd4:	push   edi
64005bd5:	mov    ecx,esi
64005bd7:	call   0x64006930
64005bdc:	mov    eax,edi
64005bde:	pop    edi
64005bdf:	pop    esi
64005be0:	pop    ebx
64005be1:	mov    esp,ebp
64005be3:	pop    ebp
64005be4:	ret    0x10
64005be7:	test   edi,edi
64005be9:	mov    edx,DWORD PTR [esi+0x4]
64005bec:	mov    DWORD PTR [esp+0x18],edx
64005bf0:	je     0x64005bf6
64005bf2:	cmp    edi,esi
64005bf4:	je     0x64005bfb
64005bf6:	call   0x6401077a
64005bfb:	cmp    ebx,DWORD PTR [esp+0x18]
64005bff:	mov    edi,DWORD PTR [ebp+0x14]
64005c02:	mov    ecx,esi
64005c04:	jne    0x64005c3e
64005c06:	mov    eax,DWORD PTR [esi+0x4]
64005c09:	mov    eax,DWORD PTR [eax+0x8]
64005c0c:	add    eax,0xc
64005c0f:	push   edi
64005c10:	push   eax
64005c11:	call   0x64005370
64005c16:	test   al,al
64005c18:	je     0x64005d43
64005c1e:	mov    ecx,DWORD PTR [esi+0x4]
64005c21:	mov    edx,DWORD PTR [ecx+0x8]
64005c24:	push   edi
64005c25:	mov    edi,DWORD PTR [ebp+0x8]
64005c28:	push   edx
64005c29:	push   0x0
64005c2b:	push   edi
64005c2c:	mov    ecx,esi
64005c2e:	call   0x64006930
64005c33:	mov    eax,edi
64005c35:	pop    edi
64005c36:	pop    esi
64005c37:	pop    ebx
64005c38:	mov    esp,ebp
64005c3a:	pop    ebp
64005c3b:	ret    0x10
64005c3e:	lea    eax,[ebx+0xc]
64005c41:	push   eax
64005c42:	push   edi
64005c43:	call   0x64005370
64005c48:	test   al,al
64005c4a:	je     0x64005caf
64005c4c:	mov    eax,DWORD PTR [ebp+0xc]
64005c4f:	lea    ecx,[esp+0xc]
64005c53:	mov    DWORD PTR [esp+0xc],eax
64005c57:	mov    DWORD PTR [esp+0x10],ebx
64005c5b:	call   0x64007da0
64005c60:	mov    ecx,DWORD PTR [esp+0x10]
64005c64:	add    ecx,0xc
64005c67:	push   edi
64005c68:	push   ecx
64005c69:	mov    ecx,esi
64005c6b:	call   0x64005370
64005c70:	test   al,al
64005c72:	je     0x64005caf
64005c74:	mov    eax,DWORD PTR [esp+0x10]
64005c78:	mov    edx,DWORD PTR [eax+0x8]
64005c7b:	cmp    BYTE PTR [edx+0x45],0x0
64005c7f:	push   edi
64005c80:	mov    edi,DWORD PTR [ebp+0x8]
64005c83:	mov    ecx,esi
64005c85:	je     0x64005c9b
64005c87:	push   eax
64005c88:	push   0x0
64005c8a:	push   edi
64005c8b:	call   0x64006930
64005c90:	mov    eax,edi
64005c92:	pop    edi
64005c93:	pop    esi
64005c94:	pop    ebx
64005c95:	mov    esp,ebp
64005c97:	pop    ebp
64005c98:	ret    0x10
64005c9b:	push   ebx
64005c9c:	push   0x1
64005c9e:	push   edi
64005c9f:	call   0x64006930
64005ca4:	mov    eax,edi
64005ca6:	pop    edi
64005ca7:	pop    esi
64005ca8:	pop    ebx
64005ca9:	mov    esp,ebp
64005cab:	pop    ebp
64005cac:	ret    0x10
64005caf:	push   edi
64005cb0:	lea    eax,[ebx+0xc]
64005cb3:	push   eax
64005cb4:	mov    ecx,esi
64005cb6:	call   0x64005370
64005cbb:	test   al,al
64005cbd:	je     0x64005d43
64005cc3:	mov    ecx,DWORD PTR [esi+0x4]
64005cc6:	mov    eax,DWORD PTR [ebp+0xc]
64005cc9:	mov    DWORD PTR [esp+0x18],ecx
64005ccd:	lea    ecx,[esp+0xc]
64005cd1:	mov    DWORD PTR [esp+0xc],eax
64005cd5:	mov    DWORD PTR [esp+0x10],ebx
64005cd9:	mov    DWORD PTR [esp+0x14],esi
64005cdd:	call   0x64007970
64005ce2:	lea    edx,[esp+0x14]
64005ce6:	push   edx
64005ce7:	lea    ecx,[esp+0x10]
64005ceb:	call   0x64005600
64005cf0:	test   al,al
64005cf2:	jne    0x64005d08
64005cf4:	mov    eax,DWORD PTR [esp+0x10]
64005cf8:	add    eax,0xc
64005cfb:	push   eax
64005cfc:	push   edi
64005cfd:	mov    ecx,esi
64005cff:	call   0x64005370
64005d04:	test   al,al
64005d06:	je     0x64005d43
64005d08:	mov    ecx,DWORD PTR [ebx+0x8]
64005d0b:	cmp    BYTE PTR [ecx+0x45],0x0
64005d0f:	push   edi
64005d10:	mov    edi,DWORD PTR [ebp+0x8]
64005d13:	mov    ecx,esi
64005d15:	je     0x64005d2b
64005d17:	push   ebx
64005d18:	push   0x0
64005d1a:	push   edi
64005d1b:	call   0x64006930
64005d20:	mov    eax,edi
64005d22:	pop    edi
64005d23:	pop    esi
64005d24:	pop    ebx
64005d25:	mov    esp,ebp
64005d27:	pop    ebp
64005d28:	ret    0x10
64005d2b:	mov    edx,DWORD PTR [esp+0x14]
64005d2f:	push   edx
64005d30:	push   0x1
64005d32:	push   edi
64005d33:	call   0x64006930
64005d38:	mov    eax,edi
64005d3a:	pop    edi
64005d3b:	pop    esi
64005d3c:	pop    ebx
64005d3d:	mov    esp,ebp
64005d3f:	pop    ebp
64005d40:	ret    0x10
64005d43:	push   edi
64005d44:	lea    eax,[esp+0x18]
64005d48:	push   eax
64005d49:	mov    ecx,esi
64005d4b:	call   0x640067a0
64005d50:	mov    edx,DWORD PTR [eax]
64005d52:	mov    ecx,DWORD PTR [ebp+0x8]
64005d55:	pop    edi
64005d56:	mov    DWORD PTR [ecx],edx
64005d58:	mov    eax,DWORD PTR [eax+0x4]
64005d5b:	pop    esi
64005d5c:	mov    DWORD PTR [ecx+0x4],eax
64005d5f:	mov    eax,ecx
64005d61:	pop    ebx
64005d62:	mov    esp,ebp
64005d64:	pop    ebp
64005d65:	ret    0x10
64005d68:	int3   
64005d69:	int3   
64005d6a:	int3   
64005d6b:	int3   
64005d6c:	int3   
64005d6d:	int3   
64005d6e:	int3   
64005d6f:	int3   
64005d70:	push   0xffffffff
64005d72:	push   0x640207f8
64005d77:	mov    eax,fs:0x0
64005d7d:	push   eax
64005d7e:	push   ecx
64005d7f:	push   ebx
64005d80:	push   esi
64005d81:	mov    eax,ds:0x64029038
64005d86:	xor    eax,esp
64005d88:	push   eax
64005d89:	lea    eax,[esp+0x10]
64005d8d:	mov    fs:0x0,eax
64005d93:	mov    esi,ecx
64005d95:	mov    DWORD PTR [esp+0xc],esi
64005d99:	mov    eax,DWORD PTR [esp+0x20]
64005d9d:	xor    ebx,ebx
64005d9f:	push   0xffffffff
64005da1:	push   ebx
64005da2:	mov    DWORD PTR [esi+0x18],0xf
64005da9:	mov    DWORD PTR [esi+0x14],ebx
64005dac:	push   eax
64005dad:	mov    BYTE PTR [esi+0x4],bl
64005db0:	call   0x640017a0
64005db5:	mov    edx,DWORD PTR [esp+0x24]
64005db9:	push   0xffffffff
64005dbb:	lea    ecx,[esi+0x1c]
64005dbe:	mov    DWORD PTR [esp+0x1c],ebx
64005dc2:	push   ebx
64005dc3:	mov    DWORD PTR [ecx+0x18],0xf
64005dca:	mov    DWORD PTR [ecx+0x14],ebx
64005dcd:	push   edx
64005dce:	mov    BYTE PTR [ecx+0x4],bl
64005dd1:	call   0x640017a0
64005dd6:	mov    eax,esi
64005dd8:	mov    ecx,DWORD PTR [esp+0x10]
64005ddc:	mov    DWORD PTR fs:0x0,ecx
64005de3:	pop    ecx
64005de4:	pop    esi
64005de5:	pop    ebx
64005de6:	add    esp,0x10
64005de9:	ret    0x8
64005dec:	int3   
64005ded:	int3   
64005dee:	int3   
64005def:	int3   
64005df0:	push   ebx
64005df1:	mov    ebx,DWORD PTR [esp+0xc]
64005df5:	push   ebp
64005df6:	mov    ebp,DWORD PTR [esp+0xc]
64005dfa:	cmp    DWORD PTR [ebp+0x14],ebx
64005dfd:	push   esi
64005dfe:	push   edi
64005dff:	mov    esi,ecx
64005e01:	jae    0x64005e08
64005e03:	call   0x640103de
64005e08:	mov    edi,DWORD PTR [ebp+0x14]
64005e0b:	mov    eax,DWORD PTR [esp+0x1c]
64005e0f:	sub    edi,ebx
64005e11:	cmp    eax,edi
64005e13:	jae    0x64005e17
64005e15:	mov    edi,eax
64005e17:	cmp    esi,ebp
64005e19:	jne    0x64005e3a
64005e1b:	push   0xffffffff
64005e1d:	add    edi,ebx
64005e1f:	push   edi
64005e20:	mov    ecx,esi
64005e22:	call   0x64006c10
64005e27:	push   ebx
64005e28:	push   0x0
64005e2a:	mov    ecx,esi
64005e2c:	call   0x64006c10
64005e31:	pop    edi
64005e32:	mov    eax,esi
64005e34:	pop    esi
64005e35:	pop    ebp
64005e36:	pop    ebx
64005e37:	ret    0xc
64005e3a:	cmp    edi,0x7ffffffe
64005e40:	jbe    0x64005e47
64005e42:	call   0x6401039f
64005e47:	mov    eax,DWORD PTR [esi+0x18]
64005e4a:	cmp    eax,edi
64005e4c:	jae    0x64005e69
64005e4e:	mov    eax,DWORD PTR [esi+0x14]
64005e51:	push   eax
64005e52:	push   edi
64005e53:	mov    ecx,esi
64005e55:	call   0x64007350
64005e5a:	test   edi,edi
64005e5c:	jbe    0x64005ed6
64005e5e:	cmp    DWORD PTR [ebp+0x18],0x8
64005e62:	jb     0x64005e95
64005e64:	mov    ecx,DWORD PTR [ebp+0x4]
64005e67:	jmp    0x64005e98
64005e69:	test   edi,edi
64005e6b:	jne    0x64005e5c
64005e6d:	cmp    eax,0x8
64005e70:	mov    DWORD PTR [esi+0x14],edi
64005e73:	jb     0x64005e84
64005e75:	mov    eax,DWORD PTR [esi+0x4]
64005e78:	mov    WORD PTR [eax],di
64005e7b:	pop    edi
64005e7c:	mov    eax,esi
64005e7e:	pop    esi
64005e7f:	pop    ebp
64005e80:	pop    ebx
64005e81:	ret    0xc
64005e84:	lea    eax,[esi+0x4]
64005e87:	pop    edi
64005e88:	mov    WORD PTR [eax],0x0
64005e8d:	mov    eax,esi
64005e8f:	pop    esi
64005e90:	pop    ebp
64005e91:	pop    ebx
64005e92:	ret    0xc
64005e95:	lea    ecx,[ebp+0x4]
64005e98:	cmp    DWORD PTR [esi+0x18],0x8
64005e9c:	lea    ebp,[esi+0x4]
64005e9f:	jb     0x64005ea6
64005ea1:	mov    eax,DWORD PTR [ebp+0x0]
64005ea4:	jmp    0x64005ea8
64005ea6:	mov    eax,ebp
64005ea8:	mov    edx,DWORD PTR [esp+0x18]
64005eac:	lea    ecx,[ecx+edx*2]
64005eaf:	lea    ebx,[edi+edi*1]
64005eb2:	push   ebx
64005eb3:	push   ecx
64005eb4:	mov    ecx,DWORD PTR [esi+0x18]
64005eb7:	lea    edx,[ecx+ecx*1]
64005eba:	push   edx
64005ebb:	push   eax
64005ebc:	call   0x6401057a
64005ec1:	add    esp,0x10
64005ec4:	cmp    DWORD PTR [esi+0x18],0x8
64005ec8:	mov    DWORD PTR [esi+0x14],edi
64005ecb:	jb     0x64005ed0
64005ecd:	mov    ebp,DWORD PTR [ebp+0x0]
64005ed0:	mov    WORD PTR [ebx+ebp*1],0x0
64005ed6:	pop    edi
64005ed7:	mov    eax,esi
64005ed9:	pop    esi
64005eda:	pop    ebp
64005edb:	pop    ebx
64005edc:	ret    0xc
64005edf:	int3   
64005ee0:	push   ebp
64005ee1:	push   esi
64005ee2:	mov    esi,ecx
64005ee4:	mov    edx,DWORD PTR [esi+0x18]
64005ee7:	cmp    edx,0x8
64005eea:	push   edi
64005eeb:	lea    ebp,[esi+0x4]
64005eee:	jb     0x64005ef5
64005ef0:	mov    ecx,DWORD PTR [ebp+0x0]
64005ef3:	jmp    0x64005ef7
64005ef5:	mov    ecx,ebp
64005ef7:	mov    eax,DWORD PTR [esp+0x10]
64005efb:	cmp    eax,ecx
64005efd:	jb     0x64005f35
64005eff:	cmp    edx,0x8
64005f02:	jb     0x64005f09
64005f04:	mov    ecx,DWORD PTR [ebp+0x0]
64005f07:	jmp    0x64005f0b
64005f09:	mov    ecx,ebp
64005f0b:	mov    edi,DWORD PTR [esi+0x14]
64005f0e:	lea    ecx,[ecx+edi*2]
64005f11:	cmp    ecx,eax
64005f13:	jbe    0x64005f35
64005f15:	cmp    edx,0x8
64005f18:	jb     0x64005f1d
64005f1a:	mov    ebp,DWORD PTR [ebp+0x0]
64005f1d:	mov    edx,DWORD PTR [esp+0x14]
64005f21:	sub    eax,ebp
64005f23:	push   edx
64005f24:	sar    eax,1
64005f26:	push   eax
64005f27:	push   esi
64005f28:	mov    ecx,esi
64005f2a:	call   0x64005df0
64005f2f:	pop    edi
64005f30:	pop    esi
64005f31:	pop    ebp
64005f32:	ret    0x8
64005f35:	mov    edi,DWORD PTR [esp+0x14]
64005f39:	cmp    edi,0x7ffffffe
64005f3f:	jbe    0x64005f46
64005f41:	call   0x6401039f
64005f46:	mov    eax,DWORD PTR [esi+0x18]
64005f49:	cmp    eax,edi
64005f4b:	jae    0x64005f6a
64005f4d:	mov    eax,DWORD PTR [esi+0x14]
64005f50:	push   eax
64005f51:	push   edi
64005f52:	mov    ecx,esi
64005f54:	call   0x64007350
64005f59:	test   edi,edi
64005f5b:	jbe    0x64005fb2
64005f5d:	mov    ecx,DWORD PTR [esi+0x18]
64005f60:	cmp    ecx,0x8
64005f63:	jb     0x64005f87
64005f65:	mov    eax,DWORD PTR [ebp+0x0]
64005f68:	jmp    0x64005f89
64005f6a:	test   edi,edi
64005f6c:	jne    0x64005f5b
64005f6e:	cmp    eax,0x8
64005f71:	mov    DWORD PTR [esi+0x14],edi
64005f74:	jb     0x64005f79
64005f76:	mov    ebp,DWORD PTR [ebp+0x0]
64005f79:	pop    edi
64005f7a:	mov    eax,esi
64005f7c:	pop    esi
64005f7d:	mov    WORD PTR [ebp+0x0],0x0
64005f83:	pop    ebp
64005f84:	ret    0x8
64005f87:	mov    eax,ebp
64005f89:	mov    edx,DWORD PTR [esp+0x10]
64005f8d:	push   ebx
64005f8e:	lea    ebx,[edi+edi*1]
64005f91:	push   ebx
64005f92:	push   edx
64005f93:	add    ecx,ecx
64005f95:	push   ecx
64005f96:	push   eax
64005f97:	call   0x6401057a
64005f9c:	add    esp,0x10
64005f9f:	cmp    DWORD PTR [esi+0x18],0x8
64005fa3:	mov    DWORD PTR [esi+0x14],edi
64005fa6:	jb     0x64005fab
64005fa8:	mov    ebp,DWORD PTR [ebp+0x0]
64005fab:	mov    WORD PTR [ebx+ebp*1],0x0
64005fb1:	pop    ebx
64005fb2:	pop    edi
64005fb3:	mov    eax,esi
64005fb5:	pop    esi
64005fb6:	pop    ebp
64005fb7:	ret    0x8
64005fba:	int3   
64005fbb:	int3   
64005fbc:	int3   
64005fbd:	int3   
64005fbe:	int3   
64005fbf:	int3   
64005fc0:	push   ebp
64005fc1:	mov    ebp,esp
64005fc3:	and    esp,0xfffffff8
64005fc6:	sub    esp,0x14
64005fc9:	push   ebx
64005fca:	push   esi
64005fcb:	mov    esi,ecx
64005fcd:	cmp    DWORD PTR [esi+0x8],0x0
64005fd1:	push   edi
64005fd2:	jne    0x64005ff4
64005fd4:	mov    eax,DWORD PTR [ebp+0x14]
64005fd7:	mov    ecx,DWORD PTR [esi+0x4]
64005fda:	mov    edi,DWORD PTR [ebp+0x8]
64005fdd:	push   eax
64005fde:	push   ecx
64005fdf:	push   0x1
64005fe1:	push   edi
64005fe2:	mov    ecx,esi
64005fe4:	call   0x64006dc0
64005fe9:	mov    eax,edi
64005feb:	pop    edi
64005fec:	pop    esi
64005fed:	pop    ebx
64005fee:	mov    esp,ebp
64005ff0:	pop    ebp
64005ff1:	ret    0x10
64005ff4:	mov    edx,DWORD PTR [esi+0x4]
64005ff7:	mov    edi,DWORD PTR [ebp+0xc]
64005ffa:	test   edi,edi
64005ffc:	mov    eax,DWORD PTR [edx]
64005ffe:	mov    DWORD PTR [esp+0x18],eax
64006002:	je     0x64006008
64006004:	cmp    edi,esi
64006006:	je     0x6400600d
64006008:	call   0x6401077a
6400600d:	mov    ebx,DWORD PTR [ebp+0x10]
64006010:	cmp    ebx,DWORD PTR [esp+0x18]
64006014:	jne    0x64006047
64006016:	mov    edi,DWORD PTR [ebp+0x14]
64006019:	lea    ecx,[ebx+0xc]
6400601c:	push   ecx
6400601d:	push   edi
6400601e:	mov    ecx,esi
64006020:	call   0x640061d0
64006025:	test   al,al
64006027:	je     0x640061a3
6400602d:	push   edi
6400602e:	mov    edi,DWORD PTR [ebp+0x8]
64006031:	push   ebx
64006032:	push   0x1
64006034:	push   edi
64006035:	mov    ecx,esi
64006037:	call   0x64006dc0
6400603c:	mov    eax,edi
6400603e:	pop    edi
6400603f:	pop    esi
64006040:	pop    ebx
64006041:	mov    esp,ebp
64006043:	pop    ebp
64006044:	ret    0x10
64006047:	test   edi,edi
64006049:	mov    edx,DWORD PTR [esi+0x4]
6400604c:	mov    DWORD PTR [esp+0x18],edx
64006050:	je     0x64006056
64006052:	cmp    edi,esi
64006054:	je     0x6400605b
64006056:	call   0x6401077a
6400605b:	cmp    ebx,DWORD PTR [esp+0x18]
6400605f:	mov    edi,DWORD PTR [ebp+0x14]
64006062:	mov    ecx,esi
64006064:	jne    0x6400609e
64006066:	mov    eax,DWORD PTR [esi+0x4]
64006069:	mov    eax,DWORD PTR [eax+0x8]
6400606c:	add    eax,0xc
6400606f:	push   edi
64006070:	push   eax
64006071:	call   0x640061d0
64006076:	test   al,al
64006078:	je     0x640061a3
6400607e:	mov    ecx,DWORD PTR [esi+0x4]
64006081:	mov    edx,DWORD PTR [ecx+0x8]
64006084:	push   edi
64006085:	mov    edi,DWORD PTR [ebp+0x8]
64006088:	push   edx
64006089:	push   0x0
6400608b:	push   edi
6400608c:	mov    ecx,esi
6400608e:	call   0x64006dc0
64006093:	mov    eax,edi
64006095:	pop    edi
64006096:	pop    esi
64006097:	pop    ebx
64006098:	mov    esp,ebp
6400609a:	pop    ebp
6400609b:	ret    0x10
6400609e:	lea    eax,[ebx+0xc]
640060a1:	push   eax
640060a2:	push   edi
640060a3:	call   0x640061d0
640060a8:	test   al,al
640060aa:	je     0x6400610f
640060ac:	mov    eax,DWORD PTR [ebp+0xc]
640060af:	lea    ecx,[esp+0xc]
640060b3:	mov    DWORD PTR [esp+0xc],eax
640060b7:	mov    DWORD PTR [esp+0x10],ebx
640060bb:	call   0x64007da0
640060c0:	mov    ecx,DWORD PTR [esp+0x10]
640060c4:	add    ecx,0xc
640060c7:	push   edi
640060c8:	push   ecx
640060c9:	mov    ecx,esi
640060cb:	call   0x640061d0
640060d0:	test   al,al
640060d2:	je     0x6400610f
640060d4:	mov    eax,DWORD PTR [esp+0x10]
640060d8:	mov    edx,DWORD PTR [eax+0x8]
640060db:	cmp    BYTE PTR [edx+0x45],0x0
640060df:	push   edi
640060e0:	mov    edi,DWORD PTR [ebp+0x8]
640060e3:	mov    ecx,esi
640060e5:	je     0x640060fb
640060e7:	push   eax
640060e8:	push   0x0
640060ea:	push   edi
640060eb:	call   0x64006dc0
640060f0:	mov    eax,edi
640060f2:	pop    edi
640060f3:	pop    esi
640060f4:	pop    ebx
640060f5:	mov    esp,ebp
640060f7:	pop    ebp
640060f8:	ret    0x10
640060fb:	push   ebx
640060fc:	push   0x1
640060fe:	push   edi
640060ff:	call   0x64006dc0
64006104:	mov    eax,edi
64006106:	pop    edi
64006107:	pop    esi
64006108:	pop    ebx
64006109:	mov    esp,ebp
6400610b:	pop    ebp
6400610c:	ret    0x10
6400610f:	push   edi
64006110:	lea    eax,[ebx+0xc]
64006113:	push   eax
64006114:	mov    ecx,esi
64006116:	call   0x640061d0
6400611b:	test   al,al
6400611d:	je     0x640061a3
64006123:	mov    ecx,DWORD PTR [esi+0x4]
64006126:	mov    eax,DWORD PTR [ebp+0xc]
64006129:	mov    DWORD PTR [esp+0x18],ecx
6400612d:	lea    ecx,[esp+0xc]
64006131:	mov    DWORD PTR [esp+0xc],eax
64006135:	mov    DWORD PTR [esp+0x10],ebx
64006139:	mov    DWORD PTR [esp+0x14],esi
6400613d:	call   0x64007970
64006142:	lea    edx,[esp+0x14]
64006146:	push   edx
64006147:	lea    ecx,[esp+0x10]
6400614b:	call   0x64005600
64006150:	test   al,al
64006152:	jne    0x64006168
64006154:	mov    eax,DWORD PTR [esp+0x10]
64006158:	add    eax,0xc
6400615b:	push   eax
6400615c:	push   edi
6400615d:	mov    ecx,esi
6400615f:	call   0x640061d0
64006164:	test   al,al
64006166:	je     0x640061a3
64006168:	mov    ecx,DWORD PTR [ebx+0x8]
6400616b:	cmp    BYTE PTR [ecx+0x45],0x0
6400616f:	push   edi
64006170:	mov    edi,DWORD PTR [ebp+0x8]
64006173:	mov    ecx,esi
64006175:	je     0x6400618b
64006177:	push   ebx
64006178:	push   0x0
6400617a:	push   edi
6400617b:	call   0x64006dc0
64006180:	mov    eax,edi
64006182:	pop    edi
64006183:	pop    esi
64006184:	pop    ebx
64006185:	mov    esp,ebp
64006187:	pop    ebp
64006188:	ret    0x10
6400618b:	mov    edx,DWORD PTR [esp+0x14]
6400618f:	push   edx
64006190:	push   0x1
64006192:	push   edi
64006193:	call   0x64006dc0
64006198:	mov    eax,edi
6400619a:	pop    edi
6400619b:	pop    esi
6400619c:	pop    ebx
6400619d:	mov    esp,ebp
6400619f:	pop    ebp
640061a0:	ret    0x10
640061a3:	push   edi
640061a4:	lea    eax,[esp+0x18]
640061a8:	push   eax
640061a9:	mov    ecx,esi
640061ab:	call   0x64006cb0
640061b0:	mov    edx,DWORD PTR [eax]
640061b2:	mov    ecx,DWORD PTR [ebp+0x8]
640061b5:	pop    edi
640061b6:	mov    DWORD PTR [ecx],edx
640061b8:	mov    eax,DWORD PTR [eax+0x4]
640061bb:	pop    esi
640061bc:	mov    DWORD PTR [ecx+0x4],eax
640061bf:	mov    eax,ecx
640061c1:	pop    ebx
640061c2:	mov    esp,ebp
640061c4:	pop    ebp
640061c5:	ret    0x10
640061c8:	int3   
640061c9:	int3   
640061ca:	int3   
640061cb:	int3   
640061cc:	int3   
640061cd:	int3   
640061ce:	int3   
640061cf:	int3   
640061d0:	mov    eax,DWORD PTR [esp+0x8]
640061d4:	cmp    DWORD PTR [eax+0x18],0x8
640061d8:	mov    ecx,DWORD PTR [eax+0x14]
640061db:	jb     0x640061e2
640061dd:	mov    eax,DWORD PTR [eax+0x4]
640061e0:	jmp    0x640061e5
640061e2:	add    eax,0x4
640061e5:	push   ecx
640061e6:	mov    ecx,DWORD PTR [esp+0x8]
640061ea:	push   eax
640061eb:	mov    eax,DWORD PTR [ecx+0x14]
640061ee:	push   eax
640061ef:	push   0x0
640061f1:	call   0x64008120
640061f6:	xor    ecx,ecx
640061f8:	test   eax,eax
640061fa:	setl   cl
640061fd:	mov    al,cl
640061ff:	ret    0x8
64006202:	int3   
64006203:	int3   
64006204:	int3   
64006205:	int3   
64006206:	int3   
64006207:	int3   
64006208:	int3   
64006209:	int3   
6400620a:	int3   
6400620b:	int3   
6400620c:	int3   
6400620d:	int3   
6400620e:	int3   
6400620f:	int3   
64006210:	push   0xffffffff
64006212:	push   0x64020a98
64006217:	mov    eax,fs:0x0
6400621d:	push   eax
6400621e:	push   ecx
6400621f:	push   esi
64006220:	push   edi
64006221:	mov    eax,ds:0x64029038
64006226:	xor    eax,esp
64006228:	push   eax
64006229:	lea    eax,[esp+0x10]
6400622d:	mov    fs:0x0,eax
64006233:	mov    esi,ecx
64006235:	mov    DWORD PTR [esp+0xc],esi
64006239:	mov    eax,DWORD PTR [esp+0x20]
6400623d:	xor    edi,edi
6400623f:	push   0xffffffff
64006241:	push   edi
64006242:	mov    DWORD PTR [esi+0x18],0x7
64006249:	mov    DWORD PTR [esi+0x14],edi
6400624c:	push   eax
6400624d:	mov    WORD PTR [esi+0x4],di
64006251:	call   0x64005df0
64006256:	mov    edx,DWORD PTR [esp+0x24]
6400625a:	push   0xffffffff
6400625c:	lea    ecx,[esi+0x1c]
6400625f:	mov    DWORD PTR [esp+0x1c],edi
64006263:	push   edi
64006264:	mov    DWORD PTR [ecx+0x18],0x7
6400626b:	mov    DWORD PTR [ecx+0x14],edi
6400626e:	push   edx
6400626f:	mov    WORD PTR [ecx+0x4],di
64006273:	call   0x64005df0
64006278:	mov    eax,esi
6400627a:	mov    ecx,DWORD PTR [esp+0x10]
6400627e:	mov    DWORD PTR fs:0x0,ecx
64006285:	pop    ecx
64006286:	pop    edi
64006287:	pop    esi
64006288:	add    esp,0x10
6400628b:	ret    0x8
6400628e:	int3   
6400628f:	int3   
64006290:	push   0xffffffff
64006292:	push   0x64020c18
64006297:	mov    eax,fs:0x0
6400629d:	push   eax
6400629e:	sub    esp,0x44
640062a1:	push   ebx
640062a2:	push   ebp
640062a3:	push   esi
640062a4:	push   edi
640062a5:	mov    eax,ds:0x64029038
640062aa:	xor    eax,esp
640062ac:	push   eax
640062ad:	lea    eax,[esp+0x58]
640062b1:	mov    fs:0x0,eax
640062b7:	mov    eax,DWORD PTR [esp+0x74]
640062bb:	cmp    BYTE PTR [eax+0x29],0x0
640062bf:	je     0x6400630d
640062c1:	push   0x1b
640062c3:	xor    esi,esi
640062c5:	push   0x640249f8
640062ca:	lea    ecx,[esp+0x1c]
640062ce:	mov    DWORD PTR [esp+0x34],0xf
640062d6:	mov    DWORD PTR [esp+0x30],esi
640062da:	mov    BYTE PTR [esp+0x20],0x0
640062df:	call   0x64001880
640062e4:	lea    eax,[esp+0x14]
640062e8:	push   eax
640062e9:	lea    ecx,[esp+0x34]
640062ed:	mov    DWORD PTR [esp+0x64],esi
640062f1:	call   0x64002d00
640062f6:	push   0x64026f1c
640062fb:	lea    ecx,[esp+0x34]
640062ff:	push   ecx
64006300:	mov    DWORD PTR [esp+0x38],0x64022328
64006308:	call   0x6401080d
6400630d:	lea    esi,[esp+0x70]
64006311:	mov    ebp,eax
64006313:	call   0x640053b0
64006318:	mov    eax,DWORD PTR [ebp+0x0]
6400631b:	cmp    BYTE PTR [eax+0x29],0x0
6400631f:	je     0x64006326
64006321:	mov    edi,DWORD PTR [ebp+0x8]
64006324:	jmp    0x6400633e
64006326:	mov    edx,DWORD PTR [ebp+0x8]
64006329:	cmp    BYTE PTR [edx+0x29],0x0
6400632d:	je     0x64006333
6400632f:	mov    edi,eax
64006331:	jmp    0x6400633e
64006333:	mov    ecx,DWORD PTR [esp+0x74]
64006337:	cmp    ecx,ebp
64006339:	mov    edi,DWORD PTR [ecx+0x8]
6400633c:	jne    0x640063b2
6400633e:	cmp    BYTE PTR [edi+0x29],0x0
64006342:	mov    esi,DWORD PTR [ebp+0x4]
64006345:	jne    0x6400634a
64006347:	mov    DWORD PTR [edi+0x4],esi
6400634a:	mov    ecx,DWORD PTR [esp+0x68]
6400634e:	mov    eax,DWORD PTR [ecx+0x4]
64006351:	cmp    DWORD PTR [eax+0x4],ebp
64006354:	jne    0x6400635b
64006356:	mov    DWORD PTR [eax+0x4],edi
64006359:	jmp    0x64006366
6400635b:	cmp    DWORD PTR [esi],ebp
6400635d:	jne    0x64006363
6400635f:	mov    DWORD PTR [esi],edi
64006361:	jmp    0x64006366
64006363:	mov    DWORD PTR [esi+0x8],edi
64006366:	mov    edx,DWORD PTR [ecx+0x4]
64006369:	cmp    DWORD PTR [edx],ebp
6400636b:	jne    0x6400638d
6400636d:	cmp    BYTE PTR [edi+0x29],0x0
64006371:	je     0x64006377
64006373:	mov    ecx,esi
64006375:	jmp    0x6400638b
64006377:	mov    eax,DWORD PTR [edi]
64006379:	cmp    BYTE PTR [eax+0x29],0x0
6400637d:	mov    ecx,edi
6400637f:	jne    0x6400638b
64006381:	mov    ecx,eax
64006383:	mov    eax,DWORD PTR [ecx]
64006385:	cmp    BYTE PTR [eax+0x29],0x0
64006389:	je     0x64006381
6400638b:	mov    DWORD PTR [edx],ecx
6400638d:	mov    eax,DWORD PTR [esp+0x68]
64006391:	mov    ebx,DWORD PTR [eax+0x4]
64006394:	cmp    DWORD PTR [ebx+0x8],ebp
64006397:	jne    0x6400640e
64006399:	cmp    BYTE PTR [edi+0x29],0x0
6400639d:	je     0x640063a6
6400639f:	mov    eax,esi
640063a1:	mov    DWORD PTR [ebx+0x8],eax
640063a4:	jmp    0x6400640e
640063a6:	mov    eax,edi
640063a8:	call   0x640070d0
640063ad:	mov    DWORD PTR [ebx+0x8],eax
640063b0:	jmp    0x6400640e
640063b2:	mov    DWORD PTR [eax+0x4],ecx
640063b5:	mov    edx,DWORD PTR [ebp+0x0]
640063b8:	mov    DWORD PTR [ecx],edx
640063ba:	cmp    ecx,DWORD PTR [ebp+0x8]
640063bd:	jne    0x640063c3
640063bf:	mov    esi,ecx
640063c1:	jmp    0x640063dd
640063c3:	cmp    BYTE PTR [edi+0x29],0x0
640063c7:	mov    esi,DWORD PTR [ecx+0x4]
640063ca:	jne    0x640063cf
640063cc:	mov    DWORD PTR [edi+0x4],esi
640063cf:	mov    DWORD PTR [esi],edi
640063d1:	mov    eax,DWORD PTR [ebp+0x8]
640063d4:	mov    DWORD PTR [ecx+0x8],eax
640063d7:	mov    edx,DWORD PTR [ebp+0x8]
640063da:	mov    DWORD PTR [edx+0x4],ecx
640063dd:	mov    eax,DWORD PTR [esp+0x68]
640063e1:	mov    eax,DWORD PTR [eax+0x4]
640063e4:	cmp    DWORD PTR [eax+0x4],ebp
640063e7:	jne    0x640063ee
640063e9:	mov    DWORD PTR [eax+0x4],ecx
640063ec:	jmp    0x640063fc
640063ee:	mov    eax,DWORD PTR [ebp+0x4]
640063f1:	cmp    DWORD PTR [eax],ebp
640063f3:	jne    0x640063f9
640063f5:	mov    DWORD PTR [eax],ecx
640063f7:	jmp    0x640063fc
640063f9:	mov    DWORD PTR [eax+0x8],ecx
640063fc:	mov    edx,DWORD PTR [ebp+0x4]
640063ff:	mov    DWORD PTR [ecx+0x4],edx
64006402:	mov    dl,BYTE PTR [ebp+0x28]
64006405:	mov    al,BYTE PTR [ecx+0x28]
64006408:	mov    BYTE PTR [ecx+0x28],dl
6400640b:	mov    BYTE PTR [ebp+0x28],al
6400640e:	mov    bl,0x1
64006410:	cmp    BYTE PTR [ebp+0x28],bl
64006413:	jne    0x6400653a
64006419:	mov    eax,DWORD PTR [esp+0x68]
6400641d:	mov    ecx,DWORD PTR [eax+0x4]
64006420:	cmp    edi,DWORD PTR [ecx+0x4]
64006423:	je     0x64006537
64006429:	lea    esp,[esp+0x0]
64006430:	cmp    BYTE PTR [edi+0x28],bl
64006433:	jne    0x64006537
64006439:	mov    ecx,DWORD PTR [esi]
6400643b:	cmp    edi,ecx
6400643d:	jne    0x640064b5
6400643f:	mov    ecx,DWORD PTR [esi+0x8]
64006442:	cmp    BYTE PTR [ecx+0x28],0x0
64006446:	jne    0x6400645e
64006448:	mov    edx,DWORD PTR [esp+0x68]
6400644c:	mov    BYTE PTR [ecx+0x28],bl
6400644f:	push   edx
64006450:	mov    ecx,esi
64006452:	mov    BYTE PTR [esi+0x28],0x0
64006456:	call   0x64005a10
6400645b:	mov    ecx,DWORD PTR [esi+0x8]
6400645e:	cmp    BYTE PTR [ecx+0x29],0x0
64006462:	jne    0x640064e9
64006468:	mov    eax,DWORD PTR [ecx]
6400646a:	cmp    BYTE PTR [eax+0x28],bl
6400646d:	jne    0x64006477
6400646f:	mov    edx,DWORD PTR [ecx+0x8]
64006472:	cmp    BYTE PTR [edx+0x28],bl
64006475:	je     0x640064e5
64006477:	mov    eax,DWORD PTR [ecx+0x8]
6400647a:	cmp    BYTE PTR [eax+0x28],bl
6400647d:	jne    0x64006495
6400647f:	mov    edx,DWORD PTR [ecx]
64006481:	mov    eax,DWORD PTR [esp+0x68]
64006485:	mov    BYTE PTR [edx+0x28],bl
64006488:	push   eax
64006489:	mov    BYTE PTR [ecx+0x28],0x0
6400648d:	call   0x64005a60
64006492:	mov    ecx,DWORD PTR [esi+0x8]
64006495:	mov    dl,BYTE PTR [esi+0x28]
64006498:	mov    BYTE PTR [ecx+0x28],dl
6400649b:	mov    BYTE PTR [esi+0x28],bl
6400649e:	mov    eax,DWORD PTR [ecx+0x8]
640064a1:	mov    ecx,DWORD PTR [esp+0x68]
640064a5:	push   ecx
640064a6:	mov    ecx,esi
640064a8:	mov    BYTE PTR [eax+0x28],bl
640064ab:	call   0x64005a10
640064b0:	jmp    0x64006537
640064b5:	cmp    BYTE PTR [ecx+0x28],0x0
640064b9:	jne    0x640064d0
640064bb:	mov    eax,DWORD PTR [esp+0x68]
640064bf:	mov    BYTE PTR [ecx+0x28],bl
640064c2:	push   eax
640064c3:	mov    ecx,esi
640064c5:	mov    BYTE PTR [esi+0x28],0x0
640064c9:	call   0x64005a60
640064ce:	mov    ecx,DWORD PTR [esi]
640064d0:	cmp    BYTE PTR [ecx+0x29],0x0
640064d4:	jne    0x640064e9
640064d6:	mov    edx,DWORD PTR [ecx+0x8]
640064d9:	cmp    BYTE PTR [edx+0x28],bl
640064dc:	jne    0x64006500
640064de:	mov    eax,DWORD PTR [ecx]
640064e0:	cmp    BYTE PTR [eax+0x28],bl
640064e3:	jne    0x64006500
640064e5:	mov    BYTE PTR [ecx+0x28],0x0
640064e9:	mov    ecx,DWORD PTR [esp+0x68]
640064ed:	mov    edx,DWORD PTR [ecx+0x4]
640064f0:	mov    edi,esi
640064f2:	cmp    edi,DWORD PTR [edx+0x4]
640064f5:	mov    esi,DWORD PTR [esi+0x4]
640064f8:	jne    0x64006430
640064fe:	jmp    0x64006537
64006500:	mov    edx,DWORD PTR [ecx]
64006502:	cmp    BYTE PTR [edx+0x28],bl
64006505:	jne    0x6400651d
64006507:	mov    eax,DWORD PTR [ecx+0x8]
6400650a:	mov    edx,DWORD PTR [esp+0x68]
6400650e:	mov    BYTE PTR [eax+0x28],bl
64006511:	push   edx
64006512:	mov    BYTE PTR [ecx+0x28],0x0
64006516:	call   0x64005a10
6400651b:	mov    ecx,DWORD PTR [esi]
6400651d:	mov    al,BYTE PTR [esi+0x28]
64006520:	mov    edx,DWORD PTR [esp+0x68]
64006524:	mov    BYTE PTR [ecx+0x28],al
64006527:	mov    BYTE PTR [esi+0x28],bl
6400652a:	mov    ecx,DWORD PTR [ecx]
6400652c:	mov    BYTE PTR [ecx+0x28],bl
6400652f:	push   edx
64006530:	mov    ecx,esi
64006532:	call   0x64005a60
64006537:	mov    BYTE PTR [edi+0x28],bl
6400653a:	cmp    DWORD PTR [ebp+0x24],0x10
6400653e:	jb     0x6400654c
64006540:	mov    eax,DWORD PTR [ebp+0x10]
64006543:	push   eax
64006544:	call   0x64010422
64006549:	add    esp,0x4
6400654c:	mov    DWORD PTR [ebp+0x24],0xf
64006553:	mov    DWORD PTR [ebp+0x20],0x0
6400655a:	push   ebp
6400655b:	mov    BYTE PTR [ebp+0x10],0x0
6400655f:	call   0x64010422
64006564:	mov    ecx,DWORD PTR [esp+0x6c]
64006568:	mov    eax,DWORD PTR [ecx+0x8]
6400656b:	add    esp,0x4
6400656e:	test   eax,eax
64006570:	jbe    0x64006578
64006572:	add    eax,0xffffffff
64006575:	mov    DWORD PTR [ecx+0x8],eax
64006578:	mov    eax,DWORD PTR [esp+0x6c]
6400657c:	mov    ecx,DWORD PTR [esp+0x70]
64006580:	mov    edx,DWORD PTR [esp+0x74]
64006584:	mov    DWORD PTR [eax],ecx
64006586:	mov    DWORD PTR [eax+0x4],edx
64006589:	mov    ecx,DWORD PTR [esp+0x58]
6400658d:	mov    DWORD PTR fs:0x0,ecx
64006594:	pop    ecx
64006595:	pop    edi
64006596:	pop    esi
64006597:	pop    ebp
64006598:	pop    ebx
64006599:	add    esp,0x50
6400659c:	ret    0x10
6400659f:	int3   
640065a0:	sub    esp,0x8
640065a3:	mov    ecx,DWORD PTR ds:0x6402d2f0
640065a9:	push   esi
640065aa:	mov    esi,DWORD PTR [ecx+0x4]
640065ad:	cmp    BYTE PTR [esi+0x29],0x0
640065b1:	mov    DWORD PTR [esp+0x4],ecx
640065b5:	jne    0x6400662d
640065b7:	mov    ecx,DWORD PTR [eax+0x18]
640065ba:	push   ebx
640065bb:	mov    ebx,DWORD PTR [eax+0x14]
640065be:	push   ebp
640065bf:	push   edi
640065c0:	mov    DWORD PTR [esp+0x14],ecx
640065c4:	lea    ebp,[eax+0x4]
640065c7:	cmp    DWORD PTR [esp+0x14],0x10
640065cc:	jb     0x640065d3
640065ce:	mov    edx,DWORD PTR [ebp+0x0]
640065d1:	jmp    0x640065d5
640065d3:	mov    edx,ebp
640065d5:	mov    edi,DWORD PTR [esi+0x20]
640065d8:	mov    eax,edi
640065da:	cmp    eax,edi
640065dc:	jae    0x640065de
640065de:	cmp    edi,ebx
640065e0:	mov    ecx,edi
640065e2:	jb     0x640065e6
640065e4:	mov    ecx,ebx
640065e6:	cmp    DWORD PTR [esi+0x24],0x10
640065ea:	jb     0x640065f1
640065ec:	mov    eax,DWORD PTR [esi+0x10]
640065ef:	jmp    0x640065f4
640065f1:	lea    eax,[esi+0x10]
640065f4:	push   ecx
640065f5:	push   edx
640065f6:	push   eax
640065f7:	call   0x64002c70
640065fc:	add    esp,0xc
640065ff:	test   eax,eax
64006601:	jne    0x6400660e
64006603:	cmp    edi,ebx
64006605:	jb     0x64006610
64006607:	cmp    edi,ebx
64006609:	setne  al
6400660c:	test   eax,eax
6400660e:	jge    0x64006615
64006610:	mov    esi,DWORD PTR [esi+0x8]
64006613:	jmp    0x6400661b
64006615:	mov    DWORD PTR [esp+0x10],esi
64006619:	mov    esi,DWORD PTR [esi]
6400661b:	cmp    BYTE PTR [esi+0x29],0x0
6400661f:	je     0x640065c7
64006621:	mov    eax,DWORD PTR [esp+0x10]
64006625:	pop    edi
64006626:	pop    ebp
64006627:	pop    ebx
64006628:	pop    esi
64006629:	add    esp,0x8
6400662c:	ret    
6400662d:	mov    eax,ecx
6400662f:	pop    esi
64006630:	add    esp,0x8
64006633:	ret    
64006634:	int3   
64006635:	int3   
64006636:	int3   
64006637:	int3   
64006638:	int3   
64006639:	int3   
6400663a:	int3   
6400663b:	int3   
6400663c:	int3   
6400663d:	int3   
6400663e:	int3   
6400663f:	int3   
64006640:	sub    esp,0x10
64006643:	mov    ecx,DWORD PTR ds:0x6402d2f0
64006649:	push   edi
6400664a:	mov    edi,DWORD PTR [ecx+0x4]
6400664d:	cmp    BYTE PTR [edi+0x29],0x0
64006651:	mov    DWORD PTR [esp+0x8],ecx
64006655:	jne    0x640066d1
64006657:	mov    ecx,DWORD PTR [eax+0x14]
6400665a:	mov    edx,DWORD PTR [eax+0x18]
6400665d:	push   ebx
6400665e:	push   ebp
6400665f:	add    eax,0x4
64006662:	push   esi
64006663:	mov    ebp,ecx
64006665:	mov    DWORD PTR [esp+0x1c],edx
64006669:	mov    DWORD PTR [esp+0x10],eax
6400666d:	lea    ecx,[ecx+0x0]
64006670:	cmp    DWORD PTR [edi+0x24],0x10
64006674:	mov    ebx,DWORD PTR [edi+0x20]
64006677:	jb     0x6400667e
64006679:	mov    edx,DWORD PTR [edi+0x10]
6400667c:	jmp    0x64006681
6400667e:	lea    edx,[edi+0x10]
64006681:	mov    esi,ebp
64006683:	cmp    esi,ebx
64006685:	mov    ecx,esi
64006687:	jb     0x6400668b
64006689:	mov    ecx,ebx
6400668b:	cmp    DWORD PTR [esp+0x1c],0x10
64006690:	mov    eax,DWORD PTR [esp+0x10]
64006694:	jb     0x64006698
64006696:	mov    eax,DWORD PTR [eax]
64006698:	push   ecx
64006699:	push   edx
6400669a:	push   eax
6400669b:	call   0x64002c70
640066a0:	add    esp,0xc
640066a3:	test   eax,eax
640066a5:	jne    0x640066b2
640066a7:	cmp    esi,ebx
640066a9:	jb     0x640066b4
640066ab:	cmp    esi,ebx
640066ad:	setne  al
640066b0:	test   eax,eax
640066b2:	jge    0x640066bc
640066b4:	mov    DWORD PTR [esp+0x14],edi
640066b8:	mov    edi,DWORD PTR [edi]
640066ba:	jmp    0x640066bf
640066bc:	mov    edi,DWORD PTR [edi+0x8]
640066bf:	cmp    BYTE PTR [edi+0x29],0x0
640066c3:	je     0x64006670
640066c5:	mov    eax,DWORD PTR [esp+0x14]
640066c9:	pop    esi
640066ca:	pop    ebp
640066cb:	pop    ebx
640066cc:	pop    edi
640066cd:	add    esp,0x10
640066d0:	ret    
640066d1:	mov    eax,ecx
640066d3:	pop    edi
640066d4:	add    esp,0x10
640066d7:	ret    
640066d8:	int3   
640066d9:	int3   
640066da:	int3   
640066db:	int3   
640066dc:	int3   
640066dd:	int3   
640066de:	int3   
640066df:	int3   
640066e0:	push   0x2c
640066e2:	call   0x640107a3
640066e7:	add    esp,0x4
640066ea:	test   eax,eax
640066ec:	je     0x640066f4
640066ee:	mov    DWORD PTR [eax],0x0
640066f4:	lea    ecx,[eax+0x4]
640066f7:	test   ecx,ecx
640066f9:	je     0x64006701
640066fb:	mov    DWORD PTR [ecx],0x0
64006701:	lea    ecx,[eax+0x8]
64006704:	test   ecx,ecx
64006706:	je     0x6400670e
64006708:	mov    DWORD PTR [ecx],0x0
6400670e:	mov    BYTE PTR [eax+0x28],0x1
64006712:	mov    BYTE PTR [eax+0x29],0x0
64006716:	ret    
64006717:	int3   
64006718:	int3   
64006719:	int3   
6400671a:	int3   
6400671b:	int3   
6400671c:	int3   
6400671d:	int3   
6400671e:	int3   
6400671f:	int3   
64006720:	cmp    DWORD PTR [esi],0x0
64006723:	jne    0x6400672a
64006725:	call   0x6401077a
6400672a:	mov    eax,DWORD PTR [esi+0x4]
6400672d:	cmp    BYTE PTR [eax+0x29],0x0
64006731:	je     0x64006744
64006733:	mov    eax,DWORD PTR [eax+0x8]
64006736:	mov    DWORD PTR [esi+0x4],eax
64006739:	cmp    BYTE PTR [eax+0x29],0x0
6400673d:	je     0x64006796
6400673f:	jmp    0x6401077a
64006744:	mov    ecx,DWORD PTR [eax]
64006746:	cmp    BYTE PTR [ecx+0x29],0x0
6400674a:	jne    0x64006764
6400674c:	mov    eax,DWORD PTR [ecx+0x8]
6400674f:	cmp    BYTE PTR [eax+0x29],0x0
64006753:	jne    0x64006760
64006755:	mov    ecx,eax
64006757:	mov    eax,DWORD PTR [ecx+0x8]
6400675a:	cmp    BYTE PTR [eax+0x29],0x0
6400675e:	je     0x64006755
64006760:	mov    DWORD PTR [esi+0x4],ecx
64006763:	ret    
64006764:	mov    eax,DWORD PTR [eax+0x4]
64006767:	cmp    BYTE PTR [eax+0x29],0x0
6400676b:	jne    0x64006785
6400676d:	lea    ecx,[ecx+0x0]
64006770:	mov    ecx,DWORD PTR [esi+0x4]
64006773:	cmp    ecx,DWORD PTR [eax]
64006775:	jne    0x64006785
64006777:	mov    DWORD PTR [esi+0x4],eax
6400677a:	mov    edx,eax
6400677c:	mov    eax,DWORD PTR [edx+0x4]
6400677f:	cmp    BYTE PTR [eax+0x29],0x0
64006783:	je     0x64006770
64006785:	mov    ecx,DWORD PTR [esi+0x4]
64006788:	cmp    BYTE PTR [ecx+0x29],0x0
6400678c:	je     0x64006793
6400678e:	jmp    0x6401077a
64006793:	mov    DWORD PTR [esi+0x4],eax
64006796:	ret    
64006797:	int3   
64006798:	int3   
64006799:	int3   
6400679a:	int3   
6400679b:	int3   
6400679c:	int3   
6400679d:	int3   
6400679e:	int3   
6400679f:	int3   
640067a0:	push   ebp
640067a1:	mov    ebp,esp
640067a3:	and    esp,0xfffffff8
640067a6:	sub    esp,0x24
640067a9:	push   ebx
640067aa:	push   esi
640067ab:	push   edi
640067ac:	mov    edi,ecx
640067ae:	mov    eax,DWORD PTR [edi+0x4]
640067b1:	mov    esi,DWORD PTR [eax+0x4]
640067b4:	cmp    BYTE PTR [esi+0x45],0x0
640067b8:	mov    ecx,eax
640067ba:	mov    al,0x1
640067bc:	mov    DWORD PTR [esp+0x28],edi
640067c0:	mov    DWORD PTR [esp+0x10],ecx
640067c4:	mov    BYTE PTR [esp+0x18],al
640067c8:	jne    0x64006868
640067ce:	mov    edx,DWORD PTR [ebp+0xc]
640067d1:	mov    eax,DWORD PTR [edx+0x14]
640067d4:	mov    ecx,DWORD PTR [edx+0x18]
640067d7:	mov    DWORD PTR [esp+0x20],eax
640067db:	mov    DWORD PTR [esp+0x1c],eax
640067df:	mov    DWORD PTR [esp+0x24],ecx
640067e3:	jmp    0x640067ec
640067e5:	mov    edx,DWORD PTR [ebp+0xc]
640067e8:	mov    eax,DWORD PTR [esp+0x1c]
640067ec:	cmp    DWORD PTR [esi+0x24],0x10
640067f0:	mov    ebx,DWORD PTR [esi+0x20]
640067f3:	mov    DWORD PTR [esp+0x10],esi
640067f7:	jb     0x640067fe
640067f9:	mov    ecx,DWORD PTR [esi+0x10]
640067fc:	jmp    0x64006801
640067fe:	lea    ecx,[esi+0x10]
64006801:	mov    edi,DWORD PTR [esp+0x20]
64006805:	cmp    eax,edi
64006807:	mov    DWORD PTR [esp+0x14],ecx
6400680b:	jae    0x6400680f
6400680d:	mov    edi,eax
6400680f:	cmp    edi,ebx
64006811:	mov    ecx,edi
64006813:	jb     0x64006817
64006815:	mov    ecx,ebx
64006817:	cmp    DWORD PTR [esp+0x24],0x10
6400681c:	lea    eax,[edx+0x4]
6400681f:	jb     0x64006823
64006821:	mov    eax,DWORD PTR [eax]
64006823:	mov    edx,DWORD PTR [esp+0x14]
64006827:	push   ecx
64006828:	push   edx
64006829:	push   eax
6400682a:	call   0x64002c70
6400682f:	add    esp,0xc
64006832:	test   eax,eax
64006834:	jne    0x64006848
64006836:	cmp    edi,ebx
64006838:	jae    0x6400683f
6400683a:	or     eax,0xffffffff
6400683d:	jmp    0x64006846
6400683f:	xor    eax,eax
64006841:	cmp    edi,ebx
64006843:	setne  al
64006846:	test   eax,eax
64006848:	setl   al
6400684b:	test   al,al
6400684d:	mov    BYTE PTR [esp+0x18],al
64006851:	je     0x64006857
64006853:	mov    esi,DWORD PTR [esi]
64006855:	jmp    0x6400685a
64006857:	mov    esi,DWORD PTR [esi+0x8]
6400685a:	cmp    BYTE PTR [esi+0x45],0x0
6400685e:	je     0x640067e5
64006860:	mov    edi,DWORD PTR [esp+0x28]
64006864:	mov    ecx,DWORD PTR [esp+0x10]
64006868:	test   al,al
6400686a:	mov    esi,ecx
6400686c:	mov    DWORD PTR [esp+0x2c],esi
64006870:	mov    DWORD PTR [esp+0x28],edi
64006874:	je     0x640068b9
64006876:	mov    eax,DWORD PTR [edi+0x4]
64006879:	cmp    ecx,DWORD PTR [eax]
6400687b:	jne    0x640068ac
6400687d:	mov    edx,DWORD PTR [ebp+0xc]
64006880:	push   edx
64006881:	push   ecx
64006882:	push   0x1
64006884:	lea    eax,[esp+0x34]
64006888:	push   eax
64006889:	mov    ecx,edi
6400688b:	call   0x64006930
64006890:	mov    ecx,eax
64006892:	mov    edx,DWORD PTR [ecx]
64006894:	mov    eax,DWORD PTR [ebp+0x8]
64006897:	mov    ecx,DWORD PTR [ecx+0x4]
6400689a:	mov    DWORD PTR [eax+0x4],ecx
6400689d:	mov    BYTE PTR [eax+0x8],0x1
640068a1:	mov    DWORD PTR [eax],edx
640068a3:	pop    edi
640068a4:	pop    esi
640068a5:	pop    ebx
640068a6:	mov    esp,ebp
640068a8:	pop    ebp
640068a9:	ret    0x8
640068ac:	lea    ecx,[esp+0x28]
640068b0:	call   0x64007da0
640068b5:	mov    esi,DWORD PTR [esp+0x2c]
640068b9:	mov    ebx,DWORD PTR [ebp+0xc]
640068bc:	cmp    DWORD PTR [ebx+0x18],0x10
640068c0:	mov    edx,DWORD PTR [ebx+0x14]
640068c3:	lea    ecx,[esi+0xc]
640068c6:	jb     0x640068cd
640068c8:	mov    eax,DWORD PTR [ebx+0x4]
640068cb:	jmp    0x640068d0
640068cd:	lea    eax,[ebx+0x4]
640068d0:	push   edx
640068d1:	mov    edx,DWORD PTR [ecx+0x14]
640068d4:	push   eax
640068d5:	push   edx
640068d6:	push   0x0
640068d8:	call   0x64004d70
640068dd:	test   eax,eax
640068df:	jge    0x64006914
640068e1:	mov    eax,DWORD PTR [esp+0x10]
640068e5:	mov    ecx,DWORD PTR [esp+0x18]
640068e9:	push   ebx
640068ea:	push   eax
640068eb:	push   ecx
640068ec:	lea    edx,[esp+0x34]
640068f0:	push   edx
640068f1:	mov    ecx,edi
640068f3:	call   0x64006930
640068f8:	mov    ecx,eax
640068fa:	mov    edx,DWORD PTR [ecx]
640068fc:	mov    eax,DWORD PTR [ebp+0x8]
640068ff:	mov    ecx,DWORD PTR [ecx+0x4]
64006902:	mov    DWORD PTR [eax+0x4],ecx
64006905:	mov    BYTE PTR [eax+0x8],0x1
64006909:	mov    DWORD PTR [eax],edx
6400690b:	pop    edi
6400690c:	pop    esi
6400690d:	pop    ebx
6400690e:	mov    esp,ebp
64006910:	pop    ebp
64006911:	ret    0x8
64006914:	mov    eax,DWORD PTR [ebp+0x8]
64006917:	mov    edx,DWORD PTR [esp+0x28]
6400691b:	pop    edi
6400691c:	mov    DWORD PTR [eax+0x4],esi
6400691f:	pop    esi
64006920:	mov    BYTE PTR [eax+0x8],0x0
64006924:	mov    DWORD PTR [eax],edx
64006926:	pop    ebx
64006927:	mov    esp,ebp
64006929:	pop    ebp
6400692a:	ret    0x8
6400692d:	int3   
6400692e:	int3   
6400692f:	int3   
64006930:	push   ebp
64006931:	mov    ebp,esp
64006933:	and    esp,0xfffffff8
64006936:	push   0xffffffff
64006938:	push   0x64020be8
6400693d:	mov    eax,fs:0x0
64006943:	push   eax
64006944:	sub    esp,0x50
64006947:	push   ebx
64006948:	push   esi
64006949:	push   edi
6400694a:	mov    eax,ds:0x64029038
6400694f:	xor    eax,esp
64006951:	push   eax
64006952:	lea    eax,[esp+0x60]
64006956:	mov    fs:0x0,eax
6400695c:	mov    edi,ecx
6400695e:	xor    ebx,ebx
64006960:	cmp    DWORD PTR [edi+0x8],0x4924923
64006967:	jb     0x640069b2
64006969:	push   0x13
6400696b:	push   0x640249e4
64006970:	lea    ecx,[esp+0x20]
64006974:	mov    DWORD PTR [esp+0x38],0xf
6400697c:	mov    DWORD PTR [esp+0x34],ebx
64006980:	mov    BYTE PTR [esp+0x24],bl
64006984:	call   0x64001880
64006989:	lea    eax,[esp+0x18]
6400698d:	push   eax
6400698e:	lea    ecx,[esp+0x38]
64006992:	mov    DWORD PTR [esp+0x6c],ebx
64006996:	call   0x64002d00
6400699b:	push   0x64026f58
640069a0:	lea    ecx,[esp+0x38]
640069a4:	push   ecx
640069a5:	mov    DWORD PTR [esp+0x3c],0x6402231c
640069ad:	call   0x6401080d
640069b2:	mov    edx,DWORD PTR [ebp+0x14]
640069b5:	mov    eax,DWORD PTR [edi+0x4]
640069b8:	mov    esi,DWORD PTR [ebp+0x10]
640069bb:	push   ebx
640069bc:	push   edx
640069bd:	push   eax
640069be:	push   esi
640069bf:	push   eax
640069c0:	call   0x640072b0
640069c5:	add    DWORD PTR [edi+0x8],0x1
640069c9:	mov    ecx,eax
640069cb:	mov    eax,DWORD PTR [edi+0x4]
640069ce:	cmp    esi,eax
640069d0:	mov    DWORD PTR [esp+0x14],ecx
640069d4:	jne    0x640069e6
640069d6:	mov    DWORD PTR [eax+0x4],ecx
640069d9:	mov    eax,DWORD PTR [edi+0x4]
640069dc:	mov    DWORD PTR [eax],ecx
640069de:	mov    edx,DWORD PTR [edi+0x4]
640069e1:	mov    DWORD PTR [edx+0x8],ecx
640069e4:	jmp    0x64006a06
640069e6:	cmp    BYTE PTR [ebp+0xc],bl
640069e9:	je     0x640069f8
640069eb:	mov    DWORD PTR [esi],ecx
640069ed:	mov    eax,DWORD PTR [edi+0x4]
640069f0:	cmp    esi,DWORD PTR [eax]
640069f2:	jne    0x64006a06
640069f4:	mov    DWORD PTR [eax],ecx
640069f6:	jmp    0x64006a06
640069f8:	mov    DWORD PTR [esi+0x8],ecx
640069fb:	mov    eax,DWORD PTR [edi+0x4]
640069fe:	cmp    esi,DWORD PTR [eax+0x8]
64006a01:	jne    0x64006a06
64006a03:	mov    DWORD PTR [eax+0x8],ecx
64006a06:	mov    edx,DWORD PTR [ecx+0x4]
64006a09:	cmp    BYTE PTR [edx+0x44],bl
64006a0c:	lea    eax,[ecx+0x4]
64006a0f:	mov    esi,ecx
64006a11:	jne    0x64006b52
64006a17:	mov    ecx,DWORD PTR [eax]
64006a19:	mov    edx,DWORD PTR [ecx+0x4]
64006a1c:	cmp    ecx,DWORD PTR [edx]
64006a1e:	jne    0x64006ac5
64006a24:	mov    edx,DWORD PTR [edx+0x8]
64006a27:	cmp    BYTE PTR [edx+0x44],bl
64006a2a:	je     0x64006acc
64006a30:	cmp    esi,DWORD PTR [ecx+0x8]
64006a33:	jne    0x64006a70
64006a35:	mov    esi,ecx
64006a37:	mov    ecx,DWORD PTR [esi+0x8]
64006a3a:	mov    eax,DWORD PTR [ecx]
64006a3c:	mov    DWORD PTR [esi+0x8],eax
64006a3f:	mov    eax,DWORD PTR [ecx]
64006a41:	cmp    BYTE PTR [eax+0x45],bl
64006a44:	jne    0x64006a49
64006a46:	mov    DWORD PTR [eax+0x4],esi
64006a49:	mov    edx,DWORD PTR [esi+0x4]
64006a4c:	lea    eax,[esi+0x4]
64006a4f:	mov    DWORD PTR [ecx+0x4],edx
64006a52:	mov    edx,DWORD PTR [edi+0x4]
64006a55:	cmp    esi,DWORD PTR [edx+0x4]
64006a58:	jne    0x64006a5f
64006a5a:	mov    DWORD PTR [edx+0x4],ecx
64006a5d:	jmp    0x64006a6c
64006a5f:	mov    edx,DWORD PTR [eax]
64006a61:	cmp    esi,DWORD PTR [edx]
64006a63:	jne    0x64006a69
64006a65:	mov    DWORD PTR [edx],ecx
64006a67:	jmp    0x64006a6c
64006a69:	mov    DWORD PTR [edx+0x8],ecx
64006a6c:	mov    DWORD PTR [ecx],esi
64006a6e:	mov    DWORD PTR [eax],ecx
64006a70:	mov    ecx,DWORD PTR [eax]
64006a72:	mov    BYTE PTR [ecx+0x44],0x1
64006a76:	mov    edx,DWORD PTR [eax]
64006a78:	mov    ecx,DWORD PTR [edx+0x4]
64006a7b:	mov    BYTE PTR [ecx+0x44],bl
64006a7e:	mov    edx,DWORD PTR [eax]
64006a80:	mov    eax,DWORD PTR [edx+0x4]
64006a83:	mov    ecx,DWORD PTR [eax]
64006a85:	mov    edx,DWORD PTR [ecx+0x8]
64006a88:	mov    DWORD PTR [eax],edx
64006a8a:	mov    edx,DWORD PTR [ecx+0x8]
64006a8d:	cmp    BYTE PTR [edx+0x45],bl
64006a90:	jne    0x64006a95
64006a92:	mov    DWORD PTR [edx+0x4],eax
64006a95:	mov    edx,DWORD PTR [eax+0x4]
64006a98:	mov    DWORD PTR [ecx+0x4],edx
64006a9b:	mov    edx,DWORD PTR [edi+0x4]
64006a9e:	cmp    eax,DWORD PTR [edx+0x4]
64006aa1:	jne    0x64006aae
64006aa3:	mov    DWORD PTR [edx+0x4],ecx
64006aa6:	mov    DWORD PTR [ecx+0x8],eax
64006aa9:	jmp    0x64006b3c
64006aae:	mov    edx,DWORD PTR [eax+0x4]
64006ab1:	cmp    eax,DWORD PTR [edx+0x8]
64006ab4:	jne    0x64006abe
64006ab6:	mov    DWORD PTR [edx+0x8],ecx
64006ab9:	mov    DWORD PTR [ecx+0x8],eax
64006abc:	jmp    0x64006b3c
64006abe:	mov    DWORD PTR [edx],ecx
64006ac0:	mov    DWORD PTR [ecx+0x8],eax
64006ac3:	jmp    0x64006b3c
64006ac5:	mov    edx,DWORD PTR [edx]
64006ac7:	cmp    BYTE PTR [edx+0x44],bl
64006aca:	jne    0x64006ae3
64006acc:	mov    BYTE PTR [ecx+0x44],0x1
64006ad0:	mov    BYTE PTR [edx+0x44],0x1
64006ad4:	mov    edx,DWORD PTR [eax]
64006ad6:	mov    ecx,DWORD PTR [edx+0x4]
64006ad9:	mov    BYTE PTR [ecx+0x44],bl
64006adc:	mov    edx,DWORD PTR [eax]
64006ade:	mov    esi,DWORD PTR [edx+0x4]
64006ae1:	jmp    0x64006b3f
64006ae3:	cmp    esi,DWORD PTR [ecx]
64006ae5:	jne    0x64006af1
64006ae7:	mov    esi,ecx
64006ae9:	push   esi
64006aea:	mov    ecx,edi
64006aec:	call   0x64007250
64006af1:	mov    eax,DWORD PTR [esi+0x4]
64006af4:	mov    BYTE PTR [eax+0x44],0x1
64006af8:	mov    ecx,DWORD PTR [esi+0x4]
64006afb:	mov    edx,DWORD PTR [ecx+0x4]
64006afe:	mov    BYTE PTR [edx+0x44],bl
64006b01:	mov    eax,DWORD PTR [esi+0x4]
64006b04:	mov    eax,DWORD PTR [eax+0x4]
64006b07:	mov    ecx,DWORD PTR [eax+0x8]
64006b0a:	mov    edx,DWORD PTR [ecx]
64006b0c:	mov    DWORD PTR [eax+0x8],edx
64006b0f:	mov    edx,DWORD PTR [ecx]
64006b11:	cmp    BYTE PTR [edx+0x45],bl
64006b14:	jne    0x64006b19
64006b16:	mov    DWORD PTR [edx+0x4],eax
64006b19:	mov    edx,DWORD PTR [eax+0x4]
64006b1c:	mov    DWORD PTR [ecx+0x4],edx
64006b1f:	mov    edx,DWORD PTR [edi+0x4]
64006b22:	cmp    eax,DWORD PTR [edx+0x4]
64006b25:	jne    0x64006b2c
64006b27:	mov    DWORD PTR [edx+0x4],ecx
64006b2a:	jmp    0x64006b3a
64006b2c:	mov    edx,DWORD PTR [eax+0x4]
64006b2f:	cmp    eax,DWORD PTR [edx]
64006b31:	jne    0x64006b37
64006b33:	mov    DWORD PTR [edx],ecx
64006b35:	jmp    0x64006b3a
64006b37:	mov    DWORD PTR [edx+0x8],ecx
64006b3a:	mov    DWORD PTR [ecx],eax
64006b3c:	mov    DWORD PTR [eax+0x4],ecx
64006b3f:	mov    ecx,DWORD PTR [esi+0x4]
64006b42:	cmp    BYTE PTR [ecx+0x44],bl
64006b45:	lea    eax,[esi+0x4]
64006b48:	je     0x64006a17
64006b4e:	mov    ecx,DWORD PTR [esp+0x14]
64006b52:	mov    edx,DWORD PTR [edi+0x4]
64006b55:	mov    eax,DWORD PTR [edx+0x4]
64006b58:	mov    BYTE PTR [eax+0x44],0x1
64006b5c:	mov    eax,DWORD PTR [ebp+0x8]
64006b5f:	mov    DWORD PTR [eax+0x4],ecx
64006b62:	mov    DWORD PTR [eax],edi
64006b64:	mov    ecx,DWORD PTR [esp+0x60]
64006b68:	mov    DWORD PTR fs:0x0,ecx
64006b6f:	pop    ecx
64006b70:	pop    edi
64006b71:	pop    esi
64006b72:	pop    ebx
64006b73:	mov    esp,ebp
64006b75:	pop    ebp
64006b76:	ret    0x10
64006b79:	int3   
64006b7a:	int3   
64006b7b:	int3   
64006b7c:	int3   
64006b7d:	int3   
64006b7e:	int3   
64006b7f:	int3   
64006b80:	push   ecx
64006b81:	mov    eax,DWORD PTR [ecx+0x4]
64006b84:	push   esi
64006b85:	mov    esi,DWORD PTR [eax+0x4]
64006b88:	cmp    BYTE PTR [esi+0x45],0x0
64006b8c:	mov    DWORD PTR [esp+0x4],eax
64006b90:	jne    0x64006c07
64006b92:	mov    eax,DWORD PTR [esp+0xc]
64006b96:	mov    ecx,DWORD PTR [eax+0x18]
64006b99:	push   ebx
64006b9a:	mov    ebx,DWORD PTR [eax+0x14]
64006b9d:	push   ebp
64006b9e:	push   edi
64006b9f:	mov    DWORD PTR [esp+0x18],ecx
64006ba3:	lea    ebp,[eax+0x4]
64006ba6:	cmp    DWORD PTR [esp+0x18],0x10
64006bab:	jb     0x64006bb2
64006bad:	mov    edx,DWORD PTR [ebp+0x0]
64006bb0:	jmp    0x64006bb4
64006bb2:	mov    edx,ebp
64006bb4:	mov    edi,DWORD PTR [esi+0x20]
64006bb7:	mov    eax,edi
64006bb9:	cmp    eax,edi
64006bbb:	jae    0x64006bbd
64006bbd:	cmp    edi,ebx
64006bbf:	mov    ecx,edi
64006bc1:	jb     0x64006bc5
64006bc3:	mov    ecx,ebx
64006bc5:	cmp    DWORD PTR [esi+0x24],0x10
64006bc9:	jb     0x64006bd0
64006bcb:	mov    eax,DWORD PTR [esi+0x10]
64006bce:	jmp    0x64006bd3
64006bd0:	lea    eax,[esi+0x10]
64006bd3:	push   ecx
64006bd4:	push   edx
64006bd5:	push   eax
64006bd6:	call   0x64002c70
64006bdb:	add    esp,0xc
64006bde:	test   eax,eax
64006be0:	jne    0x64006bed
64006be2:	cmp    edi,ebx
64006be4:	jb     0x64006bef
64006be6:	cmp    edi,ebx
64006be8:	setne  al
64006beb:	test   eax,eax
64006bed:	jge    0x64006bf4
64006bef:	mov    esi,DWORD PTR [esi+0x8]
64006bf2:	jmp    0x64006bfa
64006bf4:	mov    DWORD PTR [esp+0x10],esi
64006bf8:	mov    esi,DWORD PTR [esi]
64006bfa:	cmp    BYTE PTR [esi+0x45],0x0
64006bfe:	je     0x64006ba6
64006c00:	mov    eax,DWORD PTR [esp+0x10]
64006c04:	pop    edi
64006c05:	pop    ebp
64006c06:	pop    ebx
64006c07:	pop    esi
64006c08:	pop    ecx
64006c09:	ret    0x4
64006c0c:	int3   
64006c0d:	int3   
64006c0e:	int3   
64006c0f:	int3   
64006c10:	push   ebx
64006c11:	mov    ebx,DWORD PTR [esp+0x8]
64006c15:	push   esi
64006c16:	mov    esi,ecx
64006c18:	cmp    DWORD PTR [esi+0x14],ebx
64006c1b:	push   edi
64006c1c:	jae    0x64006c23
64006c1e:	call   0x640103de
64006c23:	mov    eax,DWORD PTR [esi+0x14]
64006c26:	mov    edi,DWORD PTR [esp+0x14]
64006c2a:	sub    eax,ebx
64006c2c:	cmp    eax,edi
64006c2e:	jae    0x64006c32
64006c30:	mov    edi,eax
64006c32:	test   edi,edi
64006c34:	jbe    0x64006c9f
64006c36:	mov    ecx,DWORD PTR [esi+0x18]
64006c39:	cmp    ecx,0x8
64006c3c:	push   ebp
64006c3d:	lea    ebp,[esi+0x4]
64006c40:	jb     0x64006c4b
64006c42:	mov    edx,DWORD PTR [ebp+0x0]
64006c45:	mov    DWORD PTR [esp+0x14],edx
64006c49:	jmp    0x64006c4f
64006c4b:	mov    DWORD PTR [esp+0x14],ebp
64006c4f:	cmp    ecx,0x8
64006c52:	jb     0x64006c5d
64006c54:	mov    edx,DWORD PTR [ebp+0x0]
64006c57:	mov    DWORD PTR [esp+0x18],edx
64006c5b:	jmp    0x64006c61
64006c5d:	mov    DWORD PTR [esp+0x18],ebp
64006c61:	mov    edx,DWORD PTR [esp+0x14]
64006c65:	sub    eax,edi
64006c67:	add    eax,eax
64006c69:	push   eax
64006c6a:	lea    eax,[ebx+edi*1]
64006c6d:	lea    eax,[edx+eax*2]
64006c70:	sub    ecx,ebx
64006c72:	push   eax
64006c73:	add    ecx,ecx
64006c75:	push   ecx
64006c76:	mov    ecx,DWORD PTR [esp+0x24]
64006c7a:	lea    edx,[ecx+ebx*2]
64006c7d:	push   edx
64006c7e:	call   0x640105f5
64006c83:	mov    eax,DWORD PTR [esi+0x14]
64006c86:	sub    eax,edi
64006c88:	add    esp,0x10
64006c8b:	cmp    DWORD PTR [esi+0x18],0x8
64006c8f:	mov    DWORD PTR [esi+0x14],eax
64006c92:	jb     0x64006c97
64006c94:	mov    ebp,DWORD PTR [ebp+0x0]
64006c97:	mov    WORD PTR [ebp+eax*2+0x0],0x0
64006c9e:	pop    ebp
64006c9f:	pop    edi
64006ca0:	mov    eax,esi
64006ca2:	pop    esi
64006ca3:	pop    ebx
64006ca4:	ret    0x8
64006ca7:	int3   
64006ca8:	int3   
64006ca9:	int3   
64006caa:	int3   
64006cab:	int3   
64006cac:	int3   
64006cad:	int3   
64006cae:	int3   
64006caf:	int3   
64006cb0:	push   ebp
64006cb1:	mov    ebp,esp
64006cb3:	and    esp,0xfffffff8
64006cb6:	sub    esp,0x14
64006cb9:	mov    eax,DWORD PTR [ecx+0x4]
64006cbc:	push   ebx
64006cbd:	push   esi
64006cbe:	mov    esi,DWORD PTR [eax+0x4]
64006cc1:	cmp    BYTE PTR [esi+0x45],0x0
64006cc5:	mov    ebx,eax
64006cc7:	mov    al,0x1
64006cc9:	push   edi
64006cca:	mov    edi,DWORD PTR [ebp+0xc]
64006ccd:	mov    DWORD PTR [esp+0x14],ecx
64006cd1:	mov    BYTE PTR [esp+0x10],al
64006cd5:	jne    0x64006d17
64006cd7:	cmp    DWORD PTR [esi+0x24],0x8
64006cdb:	mov    ecx,DWORD PTR [esi+0x20]
64006cde:	mov    ebx,esi
64006ce0:	jb     0x64006ce7
64006ce2:	mov    eax,DWORD PTR [esi+0x10]
64006ce5:	jmp    0x64006cea
64006ce7:	lea    eax,[esi+0x10]
64006cea:	push   ecx
64006ceb:	push   eax
64006cec:	mov    eax,DWORD PTR [edi+0x14]
64006cef:	push   eax
64006cf0:	push   0x0
64006cf2:	mov    ecx,edi
64006cf4:	call   0x64008120
64006cf9:	test   eax,eax
64006cfb:	setl   al
64006cfe:	test   al,al
64006d00:	mov    BYTE PTR [esp+0x10],al
64006d04:	je     0x64006d0a
64006d06:	mov    esi,DWORD PTR [esi]
64006d08:	jmp    0x64006d0d
64006d0a:	mov    esi,DWORD PTR [esi+0x8]
64006d0d:	cmp    BYTE PTR [esi+0x45],0x0
64006d11:	je     0x64006cd7
64006d13:	mov    ecx,DWORD PTR [esp+0x14]
64006d17:	test   al,al
64006d19:	mov    esi,ebx
64006d1b:	mov    DWORD PTR [esp+0x1c],esi
64006d1f:	mov    DWORD PTR [esp+0x18],ecx
64006d23:	je     0x64006d63
64006d25:	mov    edx,DWORD PTR [ecx+0x4]
64006d28:	cmp    ebx,DWORD PTR [edx]
64006d2a:	jne    0x64006d56
64006d2c:	push   edi
64006d2d:	push   ebx
64006d2e:	push   0x1
64006d30:	lea    eax,[esp+0x24]
64006d34:	push   eax
64006d35:	call   0x64006dc0
64006d3a:	mov    ecx,eax
64006d3c:	mov    edx,DWORD PTR [ecx]
64006d3e:	mov    eax,DWORD PTR [ebp+0x8]
64006d41:	mov    ecx,DWORD PTR [ecx+0x4]
64006d44:	mov    DWORD PTR [eax+0x4],ecx
64006d47:	mov    BYTE PTR [eax+0x8],0x1
64006d4b:	mov    DWORD PTR [eax],edx
64006d4d:	pop    edi
64006d4e:	pop    esi
64006d4f:	pop    ebx
64006d50:	mov    esp,ebp
64006d52:	pop    ebp
64006d53:	ret    0x8
64006d56:	lea    ecx,[esp+0x18]
64006d5a:	call   0x64007da0
64006d5f:	mov    esi,DWORD PTR [esp+0x1c]
64006d63:	cmp    DWORD PTR [edi+0x18],0x8
64006d67:	mov    edx,DWORD PTR [edi+0x14]
64006d6a:	lea    ecx,[esi+0xc]
64006d6d:	jb     0x64006d74
64006d6f:	mov    eax,DWORD PTR [edi+0x4]
64006d72:	jmp    0x64006d77
64006d74:	lea    eax,[edi+0x4]
64006d77:	push   edx
64006d78:	mov    edx,DWORD PTR [ecx+0x14]
64006d7b:	push   eax
64006d7c:	push   edx
64006d7d:	push   0x0
64006d7f:	call   0x64008120
64006d84:	test   eax,eax
64006d86:	jge    0x64006d9a
64006d88:	mov    eax,DWORD PTR [esp+0x10]
64006d8c:	push   edi
64006d8d:	push   ebx
64006d8e:	lea    ecx,[esp+0x20]
64006d92:	push   eax
64006d93:	push   ecx
64006d94:	mov    ecx,DWORD PTR [esp+0x24]
64006d98:	jmp    0x64006d35
64006d9a:	mov    eax,DWORD PTR [ebp+0x8]
64006d9d:	mov    edx,DWORD PTR [esp+0x18]
64006da1:	pop    edi
64006da2:	mov    DWORD PTR [eax+0x4],esi
64006da5:	pop    esi
64006da6:	mov    BYTE PTR [eax+0x8],0x0
64006daa:	mov    DWORD PTR [eax],edx
64006dac:	pop    ebx
64006dad:	mov    esp,ebp
64006daf:	pop    ebp
64006db0:	ret    0x8
64006db3:	int3   
64006db4:	int3   
64006db5:	int3   
64006db6:	int3   
64006db7:	int3   
64006db8:	int3   
64006db9:	int3   
64006dba:	int3   
64006dbb:	int3   
64006dbc:	int3   
64006dbd:	int3   
64006dbe:	int3   
64006dbf:	int3   
64006dc0:	push   ebp
64006dc1:	mov    ebp,esp
64006dc3:	and    esp,0xfffffff8
64006dc6:	push   0xffffffff
64006dc8:	push   0x64020bb8
64006dcd:	mov    eax,fs:0x0
64006dd3:	push   eax
64006dd4:	sub    esp,0x50
64006dd7:	push   ebx
64006dd8:	push   esi
64006dd9:	push   edi
64006dda:	mov    eax,ds:0x64029038
64006ddf:	xor    eax,esp
64006de1:	push   eax
64006de2:	lea    eax,[esp+0x60]
64006de6:	mov    fs:0x0,eax
64006dec:	mov    edi,ecx
64006dee:	xor    ebx,ebx
64006df0:	cmp    DWORD PTR [edi+0x8],0x4924923
64006df7:	jb     0x64006e42
64006df9:	push   0x13
64006dfb:	push   0x640249e4
64006e00:	lea    ecx,[esp+0x20]
64006e04:	mov    DWORD PTR [esp+0x38],0xf
64006e0c:	mov    DWORD PTR [esp+0x34],ebx
64006e10:	mov    BYTE PTR [esp+0x24],bl
64006e14:	call   0x64001880
64006e19:	lea    eax,[esp+0x18]
64006e1d:	push   eax
64006e1e:	lea    ecx,[esp+0x38]
64006e22:	mov    DWORD PTR [esp+0x6c],ebx
64006e26:	call   0x64002d00
64006e2b:	push   0x64026f58
64006e30:	lea    ecx,[esp+0x38]
64006e34:	push   ecx
64006e35:	mov    DWORD PTR [esp+0x3c],0x6402231c
64006e3d:	call   0x6401080d
64006e42:	mov    edx,DWORD PTR [ebp+0x14]
64006e45:	mov    eax,DWORD PTR [edi+0x4]
64006e48:	mov    esi,DWORD PTR [ebp+0x10]
64006e4b:	push   ebx
64006e4c:	push   edx
64006e4d:	push   eax
64006e4e:	push   esi
64006e4f:	push   eax
64006e50:	call   0x640075b0
64006e55:	add    DWORD PTR [edi+0x8],0x1
64006e59:	mov    ecx,eax
64006e5b:	mov    eax,DWORD PTR [edi+0x4]
64006e5e:	cmp    esi,eax
64006e60:	mov    DWORD PTR [esp+0x14],ecx
64006e64:	jne    0x64006e76
64006e66:	mov    DWORD PTR [eax+0x4],ecx
64006e69:	mov    eax,DWORD PTR [edi+0x4]
64006e6c:	mov    DWORD PTR [eax],ecx
64006e6e:	mov    edx,DWORD PTR [edi+0x4]
64006e71:	mov    DWORD PTR [edx+0x8],ecx
64006e74:	jmp    0x64006e96
64006e76:	cmp    BYTE PTR [ebp+0xc],bl
64006e79:	je     0x64006e88
64006e7b:	mov    DWORD PTR [esi],ecx
64006e7d:	mov    eax,DWORD PTR [edi+0x4]
64006e80:	cmp    esi,DWORD PTR [eax]
64006e82:	jne    0x64006e96
64006e84:	mov    DWORD PTR [eax],ecx
64006e86:	jmp    0x64006e96
64006e88:	mov    DWORD PTR [esi+0x8],ecx
64006e8b:	mov    eax,DWORD PTR [edi+0x4]
64006e8e:	cmp    esi,DWORD PTR [eax+0x8]
64006e91:	jne    0x64006e96
64006e93:	mov    DWORD PTR [eax+0x8],ecx
64006e96:	mov    edx,DWORD PTR [ecx+0x4]
64006e99:	cmp    BYTE PTR [edx+0x44],bl
64006e9c:	lea    eax,[ecx+0x4]
64006e9f:	mov    esi,ecx
64006ea1:	jne    0x64006fe2
64006ea7:	mov    ecx,DWORD PTR [eax]
64006ea9:	mov    edx,DWORD PTR [ecx+0x4]
64006eac:	cmp    ecx,DWORD PTR [edx]
64006eae:	jne    0x64006f55
64006eb4:	mov    edx,DWORD PTR [edx+0x8]
64006eb7:	cmp    BYTE PTR [edx+0x44],bl
64006eba:	je     0x64006f5c
64006ec0:	cmp    esi,DWORD PTR [ecx+0x8]
64006ec3:	jne    0x64006f00
64006ec5:	mov    esi,ecx
64006ec7:	mov    ecx,DWORD PTR [esi+0x8]
64006eca:	mov    eax,DWORD PTR [ecx]
64006ecc:	mov    DWORD PTR [esi+0x8],eax
64006ecf:	mov    eax,DWORD PTR [ecx]
64006ed1:	cmp    BYTE PTR [eax+0x45],bl
64006ed4:	jne    0x64006ed9
64006ed6:	mov    DWORD PTR [eax+0x4],esi
64006ed9:	mov    edx,DWORD PTR [esi+0x4]
64006edc:	lea    eax,[esi+0x4]
64006edf:	mov    DWORD PTR [ecx+0x4],edx
64006ee2:	mov    edx,DWORD PTR [edi+0x4]
64006ee5:	cmp    esi,DWORD PTR [edx+0x4]
64006ee8:	jne    0x64006eef
64006eea:	mov    DWORD PTR [edx+0x4],ecx
64006eed:	jmp    0x64006efc
64006eef:	mov    edx,DWORD PTR [eax]
64006ef1:	cmp    esi,DWORD PTR [edx]
64006ef3:	jne    0x64006ef9
64006ef5:	mov    DWORD PTR [edx],ecx
64006ef7:	jmp    0x64006efc
64006ef9:	mov    DWORD PTR [edx+0x8],ecx
64006efc:	mov    DWORD PTR [ecx],esi
64006efe:	mov    DWORD PTR [eax],ecx
64006f00:	mov    ecx,DWORD PTR [eax]
64006f02:	mov    BYTE PTR [ecx+0x44],0x1
64006f06:	mov    edx,DWORD PTR [eax]
64006f08:	mov    ecx,DWORD PTR [edx+0x4]
64006f0b:	mov    BYTE PTR [ecx+0x44],bl
64006f0e:	mov    edx,DWORD PTR [eax]
64006f10:	mov    eax,DWORD PTR [edx+0x4]
64006f13:	mov    ecx,DWORD PTR [eax]
64006f15:	mov    edx,DWORD PTR [ecx+0x8]
64006f18:	mov    DWORD PTR [eax],edx
64006f1a:	mov    edx,DWORD PTR [ecx+0x8]
64006f1d:	cmp    BYTE PTR [edx+0x45],bl
64006f20:	jne    0x64006f25
64006f22:	mov    DWORD PTR [edx+0x4],eax
64006f25:	mov    edx,DWORD PTR [eax+0x4]
64006f28:	mov    DWORD PTR [ecx+0x4],edx
64006f2b:	mov    edx,DWORD PTR [edi+0x4]
64006f2e:	cmp    eax,DWORD PTR [edx+0x4]
64006f31:	jne    0x64006f3e
64006f33:	mov    DWORD PTR [edx+0x4],ecx
64006f36:	mov    DWORD PTR [ecx+0x8],eax
64006f39:	jmp    0x64006fcc
64006f3e:	mov    edx,DWORD PTR [eax+0x4]
64006f41:	cmp    eax,DWORD PTR [edx+0x8]
64006f44:	jne    0x64006f4e
64006f46:	mov    DWORD PTR [edx+0x8],ecx
64006f49:	mov    DWORD PTR [ecx+0x8],eax
64006f4c:	jmp    0x64006fcc
64006f4e:	mov    DWORD PTR [edx],ecx
64006f50:	mov    DWORD PTR [ecx+0x8],eax
64006f53:	jmp    0x64006fcc
64006f55:	mov    edx,DWORD PTR [edx]
64006f57:	cmp    BYTE PTR [edx+0x44],bl
64006f5a:	jne    0x64006f73
64006f5c:	mov    BYTE PTR [ecx+0x44],0x1
64006f60:	mov    BYTE PTR [edx+0x44],0x1
64006f64:	mov    edx,DWORD PTR [eax]
64006f66:	mov    ecx,DWORD PTR [edx+0x4]
64006f69:	mov    BYTE PTR [ecx+0x44],bl
64006f6c:	mov    edx,DWORD PTR [eax]
64006f6e:	mov    esi,DWORD PTR [edx+0x4]
64006f71:	jmp    0x64006fcf
64006f73:	cmp    esi,DWORD PTR [ecx]
64006f75:	jne    0x64006f81
64006f77:	mov    esi,ecx
64006f79:	push   esi
64006f7a:	mov    ecx,edi
64006f7c:	call   0x64007250
64006f81:	mov    eax,DWORD PTR [esi+0x4]
64006f84:	mov    BYTE PTR [eax+0x44],0x1
64006f88:	mov    ecx,DWORD PTR [esi+0x4]
64006f8b:	mov    edx,DWORD PTR [ecx+0x4]
64006f8e:	mov    BYTE PTR [edx+0x44],bl
64006f91:	mov    eax,DWORD PTR [esi+0x4]
64006f94:	mov    eax,DWORD PTR [eax+0x4]
64006f97:	mov    ecx,DWORD PTR [eax+0x8]
64006f9a:	mov    edx,DWORD PTR [ecx]
64006f9c:	mov    DWORD PTR [eax+0x8],edx
64006f9f:	mov    edx,DWORD PTR [ecx]
64006fa1:	cmp    BYTE PTR [edx+0x45],bl
64006fa4:	jne    0x64006fa9
64006fa6:	mov    DWORD PTR [edx+0x4],eax
64006fa9:	mov    edx,DWORD PTR [eax+0x4]
64006fac:	mov    DWORD PTR [ecx+0x4],edx
64006faf:	mov    edx,DWORD PTR [edi+0x4]
64006fb2:	cmp    eax,DWORD PTR [edx+0x4]
64006fb5:	jne    0x64006fbc
64006fb7:	mov    DWORD PTR [edx+0x4],ecx
64006fba:	jmp    0x64006fca
64006fbc:	mov    edx,DWORD PTR [eax+0x4]
64006fbf:	cmp    eax,DWORD PTR [edx]
64006fc1:	jne    0x64006fc7
64006fc3:	mov    DWORD PTR [edx],ecx
64006fc5:	jmp    0x64006fca
64006fc7:	mov    DWORD PTR [edx+0x8],ecx
64006fca:	mov    DWORD PTR [ecx],eax
64006fcc:	mov    DWORD PTR [eax+0x4],ecx
64006fcf:	mov    ecx,DWORD PTR [esi+0x4]
64006fd2:	cmp    BYTE PTR [ecx+0x44],bl
64006fd5:	lea    eax,[esi+0x4]
64006fd8:	je     0x64006ea7
64006fde:	mov    ecx,DWORD PTR [esp+0x14]
64006fe2:	mov    edx,DWORD PTR [edi+0x4]
64006fe5:	mov    eax,DWORD PTR [edx+0x4]
64006fe8:	mov    BYTE PTR [eax+0x44],0x1
64006fec:	mov    eax,DWORD PTR [ebp+0x8]
64006fef:	mov    DWORD PTR [eax+0x4],ecx
64006ff2:	mov    DWORD PTR [eax],edi
64006ff4:	mov    ecx,DWORD PTR [esp+0x60]
64006ff8:	mov    DWORD PTR fs:0x0,ecx
64006fff:	pop    ecx
64007000:	pop    edi
64007001:	pop    esi
64007002:	pop    ebx
64007003:	mov    esp,ebp
64007005:	pop    ebp
64007006:	ret    0x10
64007009:	int3   
6400700a:	int3   
6400700b:	int3   
6400700c:	int3   
6400700d:	int3   
6400700e:	int3   
6400700f:	int3   
64007010:	mov    eax,DWORD PTR [ecx+0x4]
64007013:	push   ebp
64007014:	push   esi
64007015:	mov    esi,DWORD PTR [eax+0x4]
64007018:	cmp    BYTE PTR [esi+0x45],0x0
6400701c:	mov    ebp,eax
6400701e:	jne    0x64007066
64007020:	push   ebx
64007021:	push   edi
64007022:	mov    edi,DWORD PTR [esp+0x14]
64007026:	lea    ebx,[edi+0x4]
64007029:	lea    esp,[esp+0x0]
64007030:	cmp    DWORD PTR [edi+0x18],0x8
64007034:	mov    edx,DWORD PTR [edi+0x14]
64007037:	lea    ecx,[esi+0xc]
6400703a:	jb     0x64007040
6400703c:	mov    eax,DWORD PTR [ebx]
6400703e:	jmp    0x64007042
64007040:	mov    eax,ebx
64007042:	push   edx
64007043:	push   eax
64007044:	mov    eax,DWORD PTR [ecx+0x14]
64007047:	push   eax
64007048:	push   0x0
6400704a:	call   0x64008120
6400704f:	test   eax,eax
64007051:	jge    0x64007058
64007053:	mov    esi,DWORD PTR [esi+0x8]
64007056:	jmp    0x6400705c
64007058:	mov    ebp,esi
6400705a:	mov    esi,DWORD PTR [esi]
6400705c:	cmp    BYTE PTR [esi+0x45],0x0
64007060:	je     0x64007030
64007062:	pop    edi
64007063:	mov    eax,ebp
64007065:	pop    ebx
64007066:	pop    esi
64007067:	pop    ebp
64007068:	ret    0x4
6400706b:	int3   
6400706c:	int3   
6400706d:	int3   
6400706e:	int3   
6400706f:	int3   
64007070:	push   ebx
64007071:	push   ebp
64007072:	push   esi
64007073:	mov    esi,DWORD PTR [esp+0x10]
64007077:	xor    ebx,ebx
64007079:	cmp    BYTE PTR [esi+0x29],bl
6400707c:	push   edi
6400707d:	mov    ebp,ecx
6400707f:	mov    edi,esi
64007081:	jne    0x640070bf
64007083:	mov    eax,DWORD PTR [edi+0x8]
64007086:	push   eax
64007087:	mov    ecx,ebp
64007089:	call   0x64007070
6400708e:	cmp    DWORD PTR [esi+0x24],0x10
64007092:	mov    edi,DWORD PTR [edi]
64007094:	jb     0x640070a2
64007096:	mov    ecx,DWORD PTR [esi+0x10]
64007099:	push   ecx
6400709a:	call   0x64010422
6400709f:	add    esp,0x4
640070a2:	mov    DWORD PTR [esi+0x24],0xf
640070a9:	mov    DWORD PTR [esi+0x20],ebx
640070ac:	push   esi
640070ad:	mov    BYTE PTR [esi+0x10],bl
640070b0:	call   0x64010422
640070b5:	add    esp,0x4
640070b8:	cmp    BYTE PTR [edi+0x29],bl
640070bb:	mov    esi,edi
640070bd:	je     0x64007083
640070bf:	pop    edi
640070c0:	pop    esi
640070c1:	pop    ebp
640070c2:	pop    ebx
640070c3:	ret    0x4
640070c6:	int3   
640070c7:	int3   
640070c8:	int3   
640070c9:	int3   
640070ca:	int3   
640070cb:	int3   
640070cc:	int3   
640070cd:	int3   
640070ce:	int3   
640070cf:	int3   
640070d0:	mov    ecx,DWORD PTR [eax+0x8]
640070d3:	cmp    BYTE PTR [ecx+0x29],0x0
640070d7:	jne    0x640070eb
640070d9:	lea    esp,[esp+0x0]
640070e0:	mov    eax,ecx
640070e2:	mov    ecx,DWORD PTR [eax+0x8]
640070e5:	cmp    BYTE PTR [ecx+0x29],0x0
640070e9:	je     0x640070e0
640070eb:	ret    
640070ec:	int3   
640070ed:	int3   
640070ee:	int3   
640070ef:	int3   
640070f0:	push   ebp
640070f1:	mov    ebp,esp
640070f3:	and    esp,0xfffffff8
640070f6:	sub    esp,0x14
640070f9:	push   ebx
640070fa:	push   esi
640070fb:	push   edi
640070fc:	mov    edi,ecx
640070fe:	mov    eax,DWORD PTR [edi+0x4]
64007101:	mov    ebx,DWORD PTR [eax]
64007103:	mov    eax,DWORD PTR [ebp+0xc]
64007106:	test   eax,eax
64007108:	je     0x6400710e
6400710a:	cmp    eax,edi
6400710c:	je     0x64007113
6400710e:	call   0x6401077a
64007113:	mov    esi,DWORD PTR [ebp+0x10]
64007116:	cmp    esi,ebx
64007118:	jne    0x64007170
6400711a:	mov    eax,DWORD PTR [ebp+0x14]
6400711d:	test   eax,eax
6400711f:	mov    ebx,DWORD PTR [edi+0x4]
64007122:	je     0x64007128
64007124:	cmp    eax,edi
64007126:	je     0x6400712d
64007128:	call   0x6401077a
6400712d:	cmp    DWORD PTR [ebp+0x18],ebx
64007130:	jne    0x64007170
64007132:	mov    ecx,DWORD PTR [edi+0x4]
64007135:	mov    edx,DWORD PTR [ecx+0x4]
64007138:	push   edx
64007139:	mov    ecx,edi
6400713b:	call   0x64007f30
64007140:	mov    eax,DWORD PTR [edi+0x4]
64007143:	mov    DWORD PTR [eax+0x4],eax
64007146:	mov    eax,DWORD PTR [edi+0x4]
64007149:	mov    DWORD PTR [edi+0x8],0x0
64007150:	mov    DWORD PTR [eax],eax
64007152:	mov    eax,DWORD PTR [edi+0x4]
64007155:	mov    DWORD PTR [eax+0x8],eax
64007158:	mov    eax,DWORD PTR [edi+0x4]
6400715b:	mov    ecx,DWORD PTR [eax]
6400715d:	mov    eax,DWORD PTR [ebp+0x8]
64007160:	mov    DWORD PTR [eax+0x4],ecx
64007163:	mov    DWORD PTR [eax],edi
64007165:	pop    edi
64007166:	pop    esi
64007167:	pop    ebx
64007168:	mov    esp,ebp
6400716a:	pop    ebp
6400716b:	ret    0x14
6400716e:	mov    edi,edi
64007170:	mov    ebx,DWORD PTR [ebp+0xc]
64007173:	test   ebx,ebx
64007175:	je     0x6400717c
64007177:	cmp    ebx,DWORD PTR [ebp+0x14]
6400717a:	je     0x64007181
6400717c:	call   0x6401077a
64007181:	cmp    esi,DWORD PTR [ebp+0x18]
64007184:	je     0x640071ee
64007186:	test   ebx,ebx
64007188:	mov    DWORD PTR [esp+0x14],esi
6400718c:	jne    0x64007193
6400718e:	call   0x6401077a
64007193:	cmp    BYTE PTR [esi+0x45],0x0
64007197:	je     0x640071a0
64007199:	call   0x6401077a
6400719e:	jmp    0x640071da
640071a0:	mov    eax,DWORD PTR [esi+0x8]
640071a3:	cmp    BYTE PTR [eax+0x45],0x0
640071a7:	jne    0x640071bf
640071a9:	mov    esi,eax
640071ab:	mov    eax,DWORD PTR [esi]
640071ad:	cmp    BYTE PTR [eax+0x45],0x0
640071b1:	jne    0x640071da
640071b3:	mov    esi,eax
640071b5:	mov    eax,DWORD PTR [esi]
640071b7:	cmp    BYTE PTR [eax+0x45],0x0
640071bb:	je     0x640071b3
640071bd:	jmp    0x640071da
640071bf:	mov    eax,DWORD PTR [esi+0x4]
640071c2:	cmp    BYTE PTR [eax+0x45],0x0
640071c6:	jne    0x640071d8
640071c8:	cmp    esi,DWORD PTR [eax+0x8]
640071cb:	jne    0x640071d8
640071cd:	mov    esi,eax
640071cf:	mov    eax,DWORD PTR [eax+0x4]
640071d2:	cmp    BYTE PTR [eax+0x45],0x0
640071d6:	je     0x640071c8
640071d8:	mov    esi,eax
640071da:	mov    edx,DWORD PTR [esp+0x14]
640071de:	push   edx
640071df:	push   ebx
640071e0:	lea    eax,[esp+0x20]
640071e4:	push   eax
640071e5:	mov    ecx,edi
640071e7:	call   0x64007650
640071ec:	jmp    0x64007170
640071ee:	mov    eax,DWORD PTR [ebp+0x8]
640071f1:	pop    edi
640071f2:	mov    DWORD PTR [eax+0x4],esi
640071f5:	pop    esi
640071f6:	mov    DWORD PTR [eax],ebx
640071f8:	pop    ebx
640071f9:	mov    esp,ebp
640071fb:	pop    ebp
640071fc:	ret    0x14
640071ff:	int3   
64007200:	mov    edx,DWORD PTR [esp+0x4]
64007204:	mov    eax,DWORD PTR [edx+0x8]
64007207:	push   esi
64007208:	mov    esi,DWORD PTR [eax]
6400720a:	mov    DWORD PTR [edx+0x8],esi
6400720d:	mov    esi,DWORD PTR [eax]
6400720f:	cmp    BYTE PTR [esi+0x45],0x0
64007213:	jne    0x64007218
64007215:	mov    DWORD PTR [esi+0x4],edx
64007218:	mov    esi,DWORD PTR [edx+0x4]
6400721b:	mov    DWORD PTR [eax+0x4],esi
6400721e:	mov    ecx,DWORD PTR [ecx+0x4]
64007221:	cmp    edx,DWORD PTR [ecx+0x4]
64007224:	pop    esi
64007225:	jne    0x64007232
64007227:	mov    DWORD PTR [ecx+0x4],eax
6400722a:	mov    DWORD PTR [eax],edx
6400722c:	mov    DWORD PTR [edx+0x4],eax
6400722f:	ret    0x4
64007232:	mov    ecx,DWORD PTR [edx+0x4]
64007235:	cmp    edx,DWORD PTR [ecx]
64007237:	jne    0x64007243
64007239:	mov    DWORD PTR [ecx],eax
6400723b:	mov    DWORD PTR [eax],edx
6400723d:	mov    DWORD PTR [edx+0x4],eax
64007240:	ret    0x4
64007243:	mov    DWORD PTR [ecx+0x8],eax
64007246:	mov    DWORD PTR [eax],edx
64007248:	mov    DWORD PTR [edx+0x4],eax
6400724b:	ret    0x4
6400724e:	int3   
6400724f:	int3   
64007250:	mov    edx,DWORD PTR [esp+0x4]
64007254:	mov    eax,DWORD PTR [edx]
64007256:	push   esi
64007257:	mov    esi,DWORD PTR [eax+0x8]
6400725a:	mov    DWORD PTR [edx],esi
6400725c:	mov    esi,DWORD PTR [eax+0x8]
6400725f:	cmp    BYTE PTR [esi+0x45],0x0
64007263:	jne    0x64007268
64007265:	mov    DWORD PTR [esi+0x4],edx
64007268:	mov    esi,DWORD PTR [edx+0x4]
6400726b:	mov    DWORD PTR [eax+0x4],esi
6400726e:	mov    ecx,DWORD PTR [ecx+0x4]
64007271:	cmp    edx,DWORD PTR [ecx+0x4]
64007274:	pop    esi
64007275:	jne    0x64007283
64007277:	mov    DWORD PTR [ecx+0x4],eax
6400727a:	mov    DWORD PTR [eax+0x8],edx
6400727d:	mov    DWORD PTR [edx+0x4],eax
64007280:	ret    0x4
64007283:	mov    ecx,DWORD PTR [edx+0x4]
64007286:	cmp    edx,DWORD PTR [ecx+0x8]
64007289:	jne    0x64007297
6400728b:	mov    DWORD PTR [ecx+0x8],eax
6400728e:	mov    DWORD PTR [eax+0x8],edx
64007291:	mov    DWORD PTR [edx+0x4],eax
64007294:	ret    0x4
64007297:	mov    DWORD PTR [ecx],eax
64007299:	mov    DWORD PTR [eax+0x8],edx
6400729c:	mov    DWORD PTR [edx+0x4],eax
6400729f:	ret    0x4
640072a2:	int3   
640072a3:	int3   
640072a4:	int3   
640072a5:	int3   
640072a6:	int3   
640072a7:	int3   
640072a8:	int3   
640072a9:	int3   
640072aa:	int3   
640072ab:	int3   
640072ac:	int3   
640072ad:	int3   
640072ae:	int3   
640072af:	int3   
640072b0:	push   ebp
640072b1:	mov    ebp,esp
640072b3:	push   0xffffffff
640072b5:	push   0x640207d1
640072ba:	mov    eax,fs:0x0
640072c0:	push   eax
640072c1:	sub    esp,0xc
640072c4:	push   ebx
640072c5:	push   esi
640072c6:	push   edi
640072c7:	mov    eax,ds:0x64029038
640072cc:	xor    eax,ebp
640072ce:	push   eax
640072cf:	lea    eax,[ebp-0xc]
640072d2:	mov    fs:0x0,eax
640072d8:	mov    DWORD PTR [ebp-0x10],esp
640072db:	push   0x48
640072dd:	call   0x640107a3
640072e2:	mov    esi,eax
640072e4:	mov    DWORD PTR [ebp-0x4],0x0
640072eb:	add    esp,0x4
640072ee:	mov    DWORD PTR [ebp-0x14],esi
640072f1:	mov    DWORD PTR [ebp-0x18],esi
640072f4:	test   esi,esi
640072f6:	mov    BYTE PTR [ebp-0x4],0x1
640072fa:	je     0x64007323
640072fc:	mov    eax,DWORD PTR [ebp+0x8]
640072ff:	mov    ecx,DWORD PTR [ebp+0xc]
64007302:	mov    edx,DWORD PTR [ebp+0x10]
64007305:	mov    DWORD PTR [esi],eax
64007307:	mov    eax,DWORD PTR [ebp+0x14]
6400730a:	mov    DWORD PTR [esi+0x4],ecx
6400730d:	push   eax
6400730e:	lea    ecx,[esi+0xc]
64007311:	mov    DWORD PTR [esi+0x8],edx
64007314:	call   0x64007e30
64007319:	mov    cl,BYTE PTR [ebp+0x18]
6400731c:	mov    BYTE PTR [esi+0x44],cl
6400731f:	mov    BYTE PTR [esi+0x45],0x0
64007323:	mov    eax,esi
64007325:	mov    ecx,DWORD PTR [ebp-0xc]
64007328:	mov    DWORD PTR fs:0x0,ecx
6400732f:	pop    ecx
64007330:	pop    edi
64007331:	pop    esi
64007332:	pop    ebx
64007333:	mov    esp,ebp
64007335:	pop    ebp
64007336:	ret    0x14
64007339:	mov    edx,DWORD PTR [ebp-0x14]
6400733c:	push   edx
6400733d:	call   0x64010422
64007342:	add    esp,0x4
64007345:	push   0x0
64007347:	push   0x0
64007349:	call   0x6401080d
6400734e:	int3   
6400734f:	int3   
64007350:	push   ebp
64007351:	mov    ebp,esp
64007353:	push   0xffffffff
64007355:	push   0x640207a0
6400735a:	mov    eax,fs:0x0
64007360:	push   eax
64007361:	sub    esp,0xc
64007364:	push   ebx
64007365:	push   esi
64007366:	push   edi
64007367:	mov    eax,ds:0x64029038
6400736c:	xor    eax,ebp
6400736e:	push   eax
6400736f:	lea    eax,[ebp-0xc]
64007372:	mov    fs:0x0,eax
64007378:	mov    DWORD PTR [ebp-0x10],esp
6400737b:	mov    edi,ecx
6400737d:	mov    DWORD PTR [ebp-0x14],edi
64007380:	mov    eax,DWORD PTR [ebp+0x8]
64007383:	mov    esi,eax
64007385:	or     esi,0x7
64007388:	cmp    esi,0x7ffffffe
6400738e:	jbe    0x64007394
64007390:	mov    esi,eax
64007392:	jmp    0x640073b6
64007394:	mov    ebx,DWORD PTR [edi+0x18]
64007397:	mov    eax,0xaaaaaaab
6400739c:	mul    esi
6400739e:	mov    ecx,ebx
640073a0:	shr    ecx,1
640073a2:	shr    edx,1
640073a4:	cmp    edx,ecx
640073a6:	jae    0x640073b6
640073a8:	mov    eax,0x7ffffffe
640073ad:	sub    eax,ecx
640073af:	cmp    ebx,eax
640073b1:	ja     0x640073b6
640073b3:	lea    esi,[ecx+ebx*1]
640073b6:	lea    ecx,[esi+0x1]
640073b9:	push   ecx
640073ba:	mov    ecx,edi
640073bc:	mov    DWORD PTR [ebp-0x4],0x0
640073c3:	call   0x640079e0
640073c8:	mov    DWORD PTR [ebp+0x8],eax
640073cb:	jmp    0x640073f5
640073cd:	mov    eax,DWORD PTR [ebp+0x8]
640073d0:	mov    ecx,DWORD PTR [ebp-0x14]
640073d3:	mov    DWORD PTR [ebp-0x18],eax
640073d6:	add    eax,0x1
640073d9:	mov    DWORD PTR [ebp-0x10],esp
640073dc:	push   eax
640073dd:	mov    BYTE PTR [ebp-0x4],0x2
640073e1:	call   0x640079e0
640073e6:	mov    DWORD PTR [ebp+0x8],eax
640073e9:	mov    eax,0x640073ef
640073ee:	ret    
640073ef:	mov    edi,DWORD PTR [ebp-0x14]
640073f2:	mov    esi,DWORD PTR [ebp-0x18]
640073f5:	mov    ebx,DWORD PTR [ebp+0xc]
640073f8:	test   ebx,ebx
640073fa:	jbe    0x64007420
640073fc:	cmp    DWORD PTR [edi+0x18],0x8
64007400:	jb     0x64007407
64007402:	mov    eax,DWORD PTR [edi+0x4]
64007405:	jmp    0x6400740a
64007407:	lea    eax,[edi+0x4]
6400740a:	mov    ecx,DWORD PTR [ebp+0x8]
6400740d:	lea    edx,[ebx+ebx*1]
64007410:	push   edx
64007411:	push   eax
64007412:	lea    eax,[esi+esi*1+0x2]
64007416:	push   eax
64007417:	push   ecx
64007418:	call   0x6401057a
6400741d:	add    esp,0x10
64007420:	cmp    DWORD PTR [edi+0x18],0x8
64007424:	jb     0x64007432
64007426:	mov    edx,DWORD PTR [edi+0x4]
64007429:	push   edx
6400742a:	call   0x64010422
6400742f:	add    esp,0x4
64007432:	cmp    esi,0x8
64007435:	mov    ecx,DWORD PTR [ebp+0x8]
64007438:	lea    eax,[edi+0x4]
6400743b:	mov    WORD PTR [eax],0x0
64007440:	mov    DWORD PTR [eax],ecx
64007442:	mov    DWORD PTR [edi+0x18],esi
64007445:	mov    DWORD PTR [edi+0x14],ebx
64007448:	jb     0x6400744c
6400744a:	mov    eax,ecx
6400744c:	mov    WORD PTR [eax+ebx*2],0x0
64007452:	mov    ecx,DWORD PTR [ebp-0xc]
64007455:	mov    DWORD PTR fs:0x0,ecx
6400745c:	pop    ecx
6400745d:	pop    edi
6400745e:	pop    esi
6400745f:	pop    ebx
64007460:	mov    esp,ebp
64007462:	pop    ebp
64007463:	ret    0x8
64007466:	mov    esi,DWORD PTR [ebp-0x14]
64007469:	cmp    DWORD PTR [esi+0x18],0x8
6400746d:	jb     0x6400747b
6400746f:	mov    eax,DWORD PTR [esi+0x4]
64007472:	push   eax
64007473:	call   0x64010422
64007478:	add    esp,0x4
6400747b:	xor    eax,eax
6400747d:	push   eax
6400747e:	mov    DWORD PTR [esi+0x18],0x7
64007485:	mov    DWORD PTR [esi+0x14],eax
64007488:	push   eax
64007489:	mov    WORD PTR [esi+0x4],ax
6400748d:	call   0x6401080d
64007492:	int3   
64007493:	int3   
64007494:	int3   
64007495:	int3   
64007496:	int3   
64007497:	int3   
64007498:	int3   
64007499:	int3   
6400749a:	int3   
6400749b:	int3   
6400749c:	int3   
6400749d:	int3   
6400749e:	int3   
6400749f:	int3   
640074a0:	push   ebp
640074a1:	mov    ebp,esp
640074a3:	and    esp,0xfffffff8
640074a6:	sub    esp,0x14
640074a9:	push   ebx
640074aa:	push   esi
640074ab:	push   edi
640074ac:	mov    edi,ecx
640074ae:	mov    eax,DWORD PTR [edi+0x4]
640074b1:	mov    ebx,DWORD PTR [eax]
640074b3:	mov    eax,DWORD PTR [ebp+0xc]
640074b6:	test   eax,eax
640074b8:	je     0x640074be
640074ba:	cmp    eax,edi
640074bc:	je     0x640074c3
640074be:	call   0x6401077a
640074c3:	mov    esi,DWORD PTR [ebp+0x10]
640074c6:	cmp    esi,ebx
640074c8:	jne    0x64007520
640074ca:	mov    eax,DWORD PTR [ebp+0x14]
640074cd:	test   eax,eax
640074cf:	mov    ebx,DWORD PTR [edi+0x4]
640074d2:	je     0x640074d8
640074d4:	cmp    eax,edi
640074d6:	je     0x640074dd
640074d8:	call   0x6401077a
640074dd:	cmp    DWORD PTR [ebp+0x18],ebx
640074e0:	jne    0x64007520
640074e2:	mov    ecx,DWORD PTR [edi+0x4]
640074e5:	mov    edx,DWORD PTR [ecx+0x4]
640074e8:	push   edx
640074e9:	mov    ecx,edi
640074eb:	call   0x64007fb0
640074f0:	mov    eax,DWORD PTR [edi+0x4]
640074f3:	mov    DWORD PTR [eax+0x4],eax
640074f6:	mov    eax,DWORD PTR [edi+0x4]
640074f9:	mov    DWORD PTR [edi+0x8],0x0
64007500:	mov    DWORD PTR [eax],eax
64007502:	mov    eax,DWORD PTR [edi+0x4]
64007505:	mov    DWORD PTR [eax+0x8],eax
64007508:	mov    eax,DWORD PTR [edi+0x4]
6400750b:	mov    ecx,DWORD PTR [eax]
6400750d:	mov    eax,DWORD PTR [ebp+0x8]
64007510:	mov    DWORD PTR [eax+0x4],ecx
64007513:	mov    DWORD PTR [eax],edi
64007515:	pop    edi
64007516:	pop    esi
64007517:	pop    ebx
64007518:	mov    esp,ebp
6400751a:	pop    ebp
6400751b:	ret    0x14
6400751e:	mov    edi,edi
64007520:	mov    ebx,DWORD PTR [ebp+0xc]
64007523:	test   ebx,ebx
64007525:	je     0x6400752c
64007527:	cmp    ebx,DWORD PTR [ebp+0x14]
6400752a:	je     0x64007531
6400752c:	call   0x6401077a
64007531:	cmp    esi,DWORD PTR [ebp+0x18]
64007534:	je     0x6400759e
64007536:	test   ebx,ebx
64007538:	mov    DWORD PTR [esp+0x14],esi
6400753c:	jne    0x64007543
6400753e:	call   0x6401077a
64007543:	cmp    BYTE PTR [esi+0x45],0x0
64007547:	je     0x64007550
64007549:	call   0x6401077a
6400754e:	jmp    0x6400758a
64007550:	mov    eax,DWORD PTR [esi+0x8]
64007553:	cmp    BYTE PTR [eax+0x45],0x0
64007557:	jne    0x6400756f
64007559:	mov    esi,eax
6400755b:	mov    eax,DWORD PTR [esi]
6400755d:	cmp    BYTE PTR [eax+0x45],0x0
64007561:	jne    0x6400758a
64007563:	mov    esi,eax
64007565:	mov    eax,DWORD PTR [esi]
64007567:	cmp    BYTE PTR [eax+0x45],0x0
6400756b:	je     0x64007563
6400756d:	jmp    0x6400758a
6400756f:	mov    eax,DWORD PTR [esi+0x4]
64007572:	cmp    BYTE PTR [eax+0x45],0x0
64007576:	jne    0x64007588
64007578:	cmp    esi,DWORD PTR [eax+0x8]
6400757b:	jne    0x64007588
6400757d:	mov    esi,eax
6400757f:	mov    eax,DWORD PTR [eax+0x4]
64007582:	cmp    BYTE PTR [eax+0x45],0x0
64007586:	je     0x64007578
64007588:	mov    esi,eax
6400758a:	mov    edx,DWORD PTR [esp+0x14]
6400758e:	push   edx
6400758f:	push   ebx
64007590:	lea    eax,[esp+0x20]
64007594:	push   eax
64007595:	mov    ecx,edi
64007597:	call   0x64007a40
6400759c:	jmp    0x64007520
6400759e:	mov    eax,DWORD PTR [ebp+0x8]
640075a1:	pop    edi
640075a2:	mov    DWORD PTR [eax+0x4],esi
640075a5:	pop    esi
640075a6:	mov    DWORD PTR [eax],ebx
640075a8:	pop    ebx
640075a9:	mov    esp,ebp
640075ab:	pop    ebp
640075ac:	ret    0x14
640075af:	int3   
640075b0:	push   ebp
640075b1:	mov    ebp,esp
640075b3:	push   0xffffffff
640075b5:	push   0x64020a71
640075ba:	mov    eax,fs:0x0
640075c0:	push   eax
640075c1:	sub    esp,0xc
640075c4:	push   ebx
640075c5:	push   esi
640075c6:	push   edi
640075c7:	mov    eax,ds:0x64029038
640075cc:	xor    eax,ebp
640075ce:	push   eax
640075cf:	lea    eax,[ebp-0xc]
640075d2:	mov    fs:0x0,eax
640075d8:	mov    DWORD PTR [ebp-0x10],esp
640075db:	push   0x48
640075dd:	call   0x640107a3
640075e2:	mov    esi,eax
640075e4:	mov    DWORD PTR [ebp-0x4],0x0
640075eb:	add    esp,0x4
640075ee:	mov    DWORD PTR [ebp-0x14],esi
640075f1:	mov    DWORD PTR [ebp-0x18],esi
640075f4:	test   esi,esi
640075f6:	mov    BYTE PTR [ebp-0x4],0x1
640075fa:	je     0x64007623
640075fc:	mov    eax,DWORD PTR [ebp+0x8]
640075ff:	mov    ecx,DWORD PTR [ebp+0xc]
64007602:	mov    edx,DWORD PTR [ebp+0x10]
64007605:	mov    DWORD PTR [esi],eax
64007607:	mov    eax,DWORD PTR [ebp+0x14]
6400760a:	mov    DWORD PTR [esi+0x4],ecx
6400760d:	push   eax
6400760e:	lea    ecx,[esi+0xc]
64007611:	mov    DWORD PTR [esi+0x8],edx
64007614:	call   0x64007eb0
64007619:	mov    cl,BYTE PTR [ebp+0x18]
6400761c:	mov    BYTE PTR [esi+0x44],cl
6400761f:	mov    BYTE PTR [esi+0x45],0x0
64007623:	mov    eax,esi
64007625:	mov    ecx,DWORD PTR [ebp-0xc]
64007628:	mov    DWORD PTR fs:0x0,ecx
6400762f:	pop    ecx
64007630:	pop    edi
64007631:	pop    esi
64007632:	pop    ebx
64007633:	mov    esp,ebp
64007635:	pop    ebp
64007636:	ret    0x14
64007639:	mov    edx,DWORD PTR [ebp-0x14]
6400763c:	push   edx
6400763d:	call   0x64010422
64007642:	add    esp,0x4
64007645:	push   0x0
64007647:	push   0x0
64007649:	call   0x6401080d
6400764e:	int3   
6400764f:	int3   
64007650:	push   ebp
64007651:	mov    ebp,esp
64007653:	and    esp,0xfffffff8
64007656:	push   0xffffffff
64007658:	push   0x64020b88
6400765d:	mov    eax,fs:0x0
64007663:	push   eax
64007664:	sub    esp,0x50
64007667:	push   ebx
64007668:	push   esi
64007669:	push   edi
6400766a:	mov    eax,ds:0x64029038
6400766f:	xor    eax,esp
64007671:	push   eax
64007672:	lea    eax,[esp+0x60]
64007676:	mov    fs:0x0,eax
6400767c:	mov    DWORD PTR [esp+0x14],ecx
64007680:	mov    edi,DWORD PTR [ebp+0x10]
64007683:	cmp    BYTE PTR [edi+0x45],0x0
64007687:	je     0x640076d5
64007689:	push   0x1b
6400768b:	xor    esi,esi
6400768d:	push   0x640249f8
64007692:	lea    ecx,[esp+0x20]
64007696:	mov    DWORD PTR [esp+0x38],0xf
6400769e:	mov    DWORD PTR [esp+0x34],esi
640076a2:	mov    BYTE PTR [esp+0x24],0x0
640076a7:	call   0x64001880
640076ac:	lea    eax,[esp+0x18]
640076b0:	push   eax
640076b1:	lea    ecx,[esp+0x38]
640076b5:	mov    DWORD PTR [esp+0x6c],esi
640076b9:	call   0x64002d00
640076be:	push   0x64026f1c
640076c3:	lea    ecx,[esp+0x38]
640076c7:	push   ecx
640076c8:	mov    DWORD PTR [esp+0x3c],0x64022328
640076d0:	call   0x6401080d
640076d5:	lea    ecx,[ebp+0xc]
640076d8:	call   0x64007970
640076dd:	mov    ecx,DWORD PTR [edi]
640076df:	cmp    BYTE PTR [ecx+0x45],0x0
640076e3:	je     0x640076ea
640076e5:	mov    ebx,DWORD PTR [edi+0x8]
640076e8:	jmp    0x64007701
640076ea:	mov    edx,DWORD PTR [edi+0x8]
640076ed:	cmp    BYTE PTR [edx+0x45],0x0
640076f1:	je     0x640076f7
640076f3:	mov    ebx,ecx
640076f5:	jmp    0x64007701
640076f7:	mov    eax,DWORD PTR [ebp+0x10]
640076fa:	cmp    eax,edi
640076fc:	mov    ebx,DWORD PTR [eax+0x8]
640076ff:	jne    0x6400777d
64007701:	cmp    BYTE PTR [ebx+0x45],0x0
64007705:	mov    esi,DWORD PTR [edi+0x4]
64007708:	jne    0x6400770d
6400770a:	mov    DWORD PTR [ebx+0x4],esi
6400770d:	mov    ecx,DWORD PTR [esp+0x14]
64007711:	mov    eax,DWORD PTR [ecx+0x4]
64007714:	cmp    DWORD PTR [eax+0x4],edi
64007717:	jne    0x6400771e
64007719:	mov    DWORD PTR [eax+0x4],ebx
6400771c:	jmp    0x64007729
6400771e:	cmp    DWORD PTR [esi],edi
64007720:	jne    0x64007726
64007722:	mov    DWORD PTR [esi],ebx
64007724:	jmp    0x64007729
64007726:	mov    DWORD PTR [esi+0x8],ebx
64007729:	mov    eax,DWORD PTR [ecx+0x4]
6400772c:	cmp    DWORD PTR [eax],edi
6400772e:	jne    0x6400774c
64007730:	cmp    BYTE PTR [ebx+0x45],0x0
64007734:	je     0x6400773a
64007736:	mov    eax,esi
64007738:	jmp    0x64007747
6400773a:	push   ebx
6400773b:	call   0x64008050
64007740:	mov    ecx,DWORD PTR [esp+0x18]
64007744:	add    esp,0x4
64007747:	mov    edx,DWORD PTR [ecx+0x4]
6400774a:	mov    DWORD PTR [edx],eax
6400774c:	mov    eax,DWORD PTR [ecx+0x4]
6400774f:	cmp    DWORD PTR [eax+0x8],edi
64007752:	jne    0x640077dc
64007758:	cmp    BYTE PTR [ebx+0x45],0x0
6400775c:	je     0x64007768
6400775e:	mov    edx,DWORD PTR [ecx+0x4]
64007761:	mov    eax,esi
64007763:	mov    DWORD PTR [edx+0x8],eax
64007766:	jmp    0x640077dc
64007768:	push   ebx
64007769:	call   0x64008030
6400776e:	mov    ecx,DWORD PTR [esp+0x18]
64007772:	mov    edx,DWORD PTR [ecx+0x4]
64007775:	add    esp,0x4
64007778:	mov    DWORD PTR [edx+0x8],eax
6400777b:	jmp    0x640077dc
6400777d:	mov    DWORD PTR [ecx+0x4],eax
64007780:	mov    ecx,DWORD PTR [edi]
64007782:	mov    DWORD PTR [eax],ecx
64007784:	cmp    eax,DWORD PTR [edi+0x8]
64007787:	jne    0x6400778d
64007789:	mov    esi,eax
6400778b:	jmp    0x640077a7
6400778d:	cmp    BYTE PTR [ebx+0x45],0x0
64007791:	mov    esi,DWORD PTR [eax+0x4]
64007794:	jne    0x64007799
64007796:	mov    DWORD PTR [ebx+0x4],esi
64007799:	mov    DWORD PTR [esi],ebx
6400779b:	mov    edx,DWORD PTR [edi+0x8]
6400779e:	mov    DWORD PTR [eax+0x8],edx
640077a1:	mov    ecx,DWORD PTR [edi+0x8]
640077a4:	mov    DWORD PTR [ecx+0x4],eax
640077a7:	mov    edx,DWORD PTR [esp+0x14]
640077ab:	mov    ecx,DWORD PTR [edx+0x4]
640077ae:	cmp    DWORD PTR [ecx+0x4],edi
640077b1:	jne    0x640077b8
640077b3:	mov    DWORD PTR [ecx+0x4],eax
640077b6:	jmp    0x640077c6
640077b8:	mov    ecx,DWORD PTR [edi+0x4]
640077bb:	cmp    DWORD PTR [ecx],edi
640077bd:	jne    0x640077c3
640077bf:	mov    DWORD PTR [ecx],eax
640077c1:	jmp    0x640077c6
640077c3:	mov    DWORD PTR [ecx+0x8],eax
640077c6:	mov    ecx,DWORD PTR [edi+0x4]
640077c9:	mov    DWORD PTR [eax+0x4],ecx
640077cc:	mov    cl,BYTE PTR [eax+0x44]
640077cf:	mov    dl,BYTE PTR [edi+0x44]
640077d2:	mov    BYTE PTR [eax+0x44],dl
640077d5:	mov    BYTE PTR [edi+0x44],cl
640077d8:	mov    ecx,DWORD PTR [esp+0x14]
640077dc:	cmp    BYTE PTR [edi+0x44],0x1
640077e0:	jne    0x640078f1
640077e6:	mov    eax,DWORD PTR [ecx+0x4]
640077e9:	cmp    ebx,DWORD PTR [eax+0x4]
640077ec:	je     0x640078ed
640077f2:	cmp    BYTE PTR [ebx+0x44],0x1
640077f6:	jne    0x640078ed
640077fc:	mov    eax,DWORD PTR [esi]
640077fe:	cmp    ebx,eax
64007800:	jne    0x64007870
64007802:	mov    eax,DWORD PTR [esi+0x8]
64007805:	cmp    BYTE PTR [eax+0x44],0x0
64007809:	jne    0x64007820
6400780b:	mov    BYTE PTR [eax+0x44],0x1
6400780f:	push   esi
64007810:	mov    BYTE PTR [esi+0x44],0x0
64007814:	call   0x64007200
64007819:	mov    eax,DWORD PTR [esi+0x8]
6400781c:	mov    ecx,DWORD PTR [esp+0x14]
64007820:	cmp    BYTE PTR [eax+0x45],0x0
64007824:	jne    0x640078a5
64007826:	mov    edx,DWORD PTR [eax]
64007828:	cmp    BYTE PTR [edx+0x44],0x1
6400782c:	jne    0x64007837
6400782e:	mov    edx,DWORD PTR [eax+0x8]
64007831:	cmp    BYTE PTR [edx+0x44],0x1
64007835:	je     0x640078a1
64007837:	mov    edx,DWORD PTR [eax+0x8]
6400783a:	cmp    BYTE PTR [edx+0x44],0x1
6400783e:	jne    0x64007857
64007840:	mov    edx,DWORD PTR [eax]
64007842:	mov    BYTE PTR [edx+0x44],0x1
64007846:	push   eax
64007847:	mov    BYTE PTR [eax+0x44],0x0
6400784b:	call   0x64007250
64007850:	mov    eax,DWORD PTR [esi+0x8]
64007853:	mov    ecx,DWORD PTR [esp+0x14]
64007857:	mov    dl,BYTE PTR [esi+0x44]
6400785a:	mov    BYTE PTR [eax+0x44],dl
6400785d:	mov    BYTE PTR [esi+0x44],0x1
64007861:	mov    eax,DWORD PTR [eax+0x8]
64007864:	push   esi
64007865:	mov    BYTE PTR [eax+0x44],0x1
64007869:	call   0x64007200
6400786e:	jmp    0x640078ed
64007870:	cmp    BYTE PTR [eax+0x44],0x0
64007874:	jne    0x6400788a
64007876:	mov    BYTE PTR [eax+0x44],0x1
6400787a:	push   esi
6400787b:	mov    BYTE PTR [esi+0x44],0x0
6400787f:	call   0x64007250
64007884:	mov    eax,DWORD PTR [esi]
64007886:	mov    ecx,DWORD PTR [esp+0x14]
6400788a:	cmp    BYTE PTR [eax+0x45],0x0
6400788e:	jne    0x640078a5
64007890:	mov    edx,DWORD PTR [eax+0x8]
64007893:	cmp    BYTE PTR [edx+0x44],0x1
64007897:	jne    0x640078b8
64007899:	mov    edx,DWORD PTR [eax]
6400789b:	cmp    BYTE PTR [edx+0x44],0x1
6400789f:	jne    0x640078b8
640078a1:	mov    BYTE PTR [eax+0x44],0x0
640078a5:	mov    eax,DWORD PTR [ecx+0x4]
640078a8:	mov    ebx,esi
640078aa:	cmp    ebx,DWORD PTR [eax+0x4]
640078ad:	mov    esi,DWORD PTR [esi+0x4]
640078b0:	jne    0x640077f2
640078b6:	jmp    0x640078ed
640078b8:	mov    edx,DWORD PTR [eax]
640078ba:	cmp    BYTE PTR [edx+0x44],0x1
640078be:	jne    0x640078d7
640078c0:	mov    edx,DWORD PTR [eax+0x8]
640078c3:	mov    BYTE PTR [edx+0x44],0x1
640078c7:	push   eax
640078c8:	mov    BYTE PTR [eax+0x44],0x0
640078cc:	call   0x64007200
640078d1:	mov    eax,DWORD PTR [esi]
640078d3:	mov    ecx,DWORD PTR [esp+0x14]
640078d7:	mov    dl,BYTE PTR [esi+0x44]
640078da:	mov    BYTE PTR [eax+0x44],dl
640078dd:	mov    BYTE PTR [esi+0x44],0x1
640078e1:	mov    eax,DWORD PTR [eax]
640078e3:	push   esi
640078e4:	mov    BYTE PTR [eax+0x44],0x1
640078e8:	call   0x64007250
640078ed:	mov    BYTE PTR [ebx+0x44],0x1
640078f1:	cmp    DWORD PTR [edi+0x40],0x10
640078f5:	jb     0x64007903
640078f7:	mov    ecx,DWORD PTR [edi+0x2c]
640078fa:	push   ecx
640078fb:	call   0x64010422
64007900:	add    esp,0x4
64007903:	xor    esi,esi
64007905:	mov    ebx,0xf
6400790a:	mov    DWORD PTR [edi+0x40],ebx
6400790d:	mov    DWORD PTR [edi+0x3c],esi
64007910:	mov    BYTE PTR [edi+0x2c],0x0
64007914:	cmp    DWORD PTR [edi+0x24],0x10
64007918:	jb     0x64007926
6400791a:	mov    edx,DWORD PTR [edi+0x10]
6400791d:	push   edx
6400791e:	call   0x64010422
64007923:	add    esp,0x4
64007926:	mov    DWORD PTR [edi+0x24],ebx
64007929:	mov    DWORD PTR [edi+0x20],esi
6400792c:	push   edi
6400792d:	mov    BYTE PTR [edi+0x10],0x0
64007931:	call   0x64010422
64007936:	mov    ecx,DWORD PTR [esp+0x18]
6400793a:	mov    eax,DWORD PTR [ecx+0x8]
6400793d:	add    esp,0x4
64007940:	cmp    eax,esi
64007942:	jbe    0x6400794a
64007944:	add    eax,0xffffffff
64007947:	mov    DWORD PTR [ecx+0x8],eax
6400794a:	mov    eax,DWORD PTR [ebp+0x8]
6400794d:	mov    ecx,DWORD PTR [ebp+0xc]
64007950:	mov    edx,DWORD PTR [ebp+0x10]
64007953:	mov    DWORD PTR [eax],ecx
64007955:	mov    DWORD PTR [eax+0x4],edx
64007958:	mov    ecx,DWORD PTR [esp+0x60]
6400795c:	mov    DWORD PTR fs:0x0,ecx
64007963:	pop    ecx
64007964:	pop    edi
64007965:	pop    esi
64007966:	pop    ebx
64007967:	mov    esp,ebp
64007969:	pop    ebp
6400796a:	ret    0xc
6400796d:	int3   
6400796e:	int3   
6400796f:	int3   
64007970:	push   esi
64007971:	mov    esi,ecx
64007973:	cmp    DWORD PTR [esi],0x0
64007976:	jne    0x6400797d
64007978:	call   0x6401077a
6400797d:	mov    eax,DWORD PTR [esi+0x4]
64007980:	cmp    BYTE PTR [eax+0x45],0x0
64007984:	je     0x6400798c
64007986:	pop    esi
64007987:	jmp    0x6401077a
6400798c:	mov    ecx,DWORD PTR [eax+0x8]
6400798f:	cmp    BYTE PTR [ecx+0x45],0x0
64007993:	jne    0x640079af
64007995:	mov    eax,DWORD PTR [ecx]
64007997:	cmp    BYTE PTR [eax+0x45],0x0
6400799b:	jne    0x640079aa
6400799d:	lea    ecx,[ecx+0x0]
640079a0:	mov    ecx,eax
640079a2:	mov    eax,DWORD PTR [ecx]
640079a4:	cmp    BYTE PTR [eax+0x45],0x0
640079a8:	je     0x640079a0
640079aa:	mov    DWORD PTR [esi+0x4],ecx
640079ad:	pop    esi
640079ae:	ret    
640079af:	mov    eax,DWORD PTR [eax+0x4]
640079b2:	cmp    BYTE PTR [eax+0x45],0x0
640079b6:	jne    0x640079ce
640079b8:	mov    ecx,DWORD PTR [esi+0x4]
640079bb:	cmp    ecx,DWORD PTR [eax+0x8]
640079be:	jne    0x640079ce
640079c0:	mov    DWORD PTR [esi+0x4],eax
640079c3:	mov    edx,eax
640079c5:	mov    eax,DWORD PTR [edx+0x4]
640079c8:	cmp    BYTE PTR [eax+0x45],0x0
640079cc:	je     0x640079b8
640079ce:	mov    DWORD PTR [esi+0x4],eax
640079d1:	pop    esi
640079d2:	ret    
640079d3:	int3   
640079d4:	int3   
640079d5:	int3   
640079d6:	int3   
640079d7:	int3   
640079d8:	int3   
640079d9:	int3   
640079da:	int3   
640079db:	int3   
640079dc:	int3   
640079dd:	int3   
640079de:	int3   
640079df:	int3   
640079e0:	mov    ecx,DWORD PTR [esp+0x4]
640079e4:	sub    esp,0xc
640079e7:	test   ecx,ecx
640079e9:	ja     0x640079ff
640079eb:	xor    ecx,ecx
640079ed:	lea    edx,[ecx+ecx*1]
640079f0:	push   edx
640079f1:	call   0x640107a3
640079f6:	add    esp,0x4
640079f9:	add    esp,0xc
640079fc:	ret    0x4
640079ff:	or     eax,0xffffffff
64007a02:	xor    edx,edx
64007a04:	div    ecx
64007a06:	cmp    eax,0x2
64007a09:	jae    0x640079ed
64007a0b:	lea    eax,[esp+0x10]
64007a0f:	push   eax
64007a10:	lea    ecx,[esp+0x4]
64007a14:	mov    DWORD PTR [esp+0x14],0x0
64007a1c:	call   0x6401047d
64007a21:	push   0x64026e8c
64007a26:	lea    ecx,[esp+0x4]
64007a2a:	push   ecx
64007a2b:	mov    DWORD PTR [esp+0x8],0x64022304
64007a33:	call   0x6401080d
64007a38:	int3   
64007a39:	int3   
64007a3a:	int3   
64007a3b:	int3   
64007a3c:	int3   
64007a3d:	int3   
64007a3e:	int3   
64007a3f:	int3   
64007a40:	push   ebp
64007a41:	mov    ebp,esp
64007a43:	and    esp,0xfffffff8
64007a46:	push   0xffffffff
64007a48:	push   0x64020b58
64007a4d:	mov    eax,fs:0x0
64007a53:	push   eax
64007a54:	sub    esp,0x50
64007a57:	push   ebx
64007a58:	push   esi
64007a59:	push   edi
64007a5a:	mov    eax,ds:0x64029038
64007a5f:	xor    eax,esp
64007a61:	push   eax
64007a62:	lea    eax,[esp+0x60]
64007a66:	mov    fs:0x0,eax
64007a6c:	mov    DWORD PTR [esp+0x14],ecx
64007a70:	mov    edi,DWORD PTR [ebp+0x10]
64007a73:	cmp    BYTE PTR [edi+0x45],0x0
64007a77:	je     0x64007ac5
64007a79:	push   0x1b
64007a7b:	xor    esi,esi
64007a7d:	push   0x640249f8
64007a82:	lea    ecx,[esp+0x20]
64007a86:	mov    DWORD PTR [esp+0x38],0xf
64007a8e:	mov    DWORD PTR [esp+0x34],esi
64007a92:	mov    BYTE PTR [esp+0x24],0x0
64007a97:	call   0x64001880
64007a9c:	lea    eax,[esp+0x18]
64007aa0:	push   eax
64007aa1:	lea    ecx,[esp+0x38]
64007aa5:	mov    DWORD PTR [esp+0x6c],esi
64007aa9:	call   0x64002d00
64007aae:	push   0x64026f1c
64007ab3:	lea    ecx,[esp+0x38]
64007ab7:	push   ecx
64007ab8:	mov    DWORD PTR [esp+0x3c],0x64022328
64007ac0:	call   0x6401080d
64007ac5:	lea    ecx,[ebp+0xc]
64007ac8:	call   0x64007970
64007acd:	mov    ecx,DWORD PTR [edi]
64007acf:	cmp    BYTE PTR [ecx+0x45],0x0
64007ad3:	je     0x64007ada
64007ad5:	mov    ebx,DWORD PTR [edi+0x8]
64007ad8:	jmp    0x64007af1
64007ada:	mov    edx,DWORD PTR [edi+0x8]
64007add:	cmp    BYTE PTR [edx+0x45],0x0
64007ae1:	je     0x64007ae7
64007ae3:	mov    ebx,ecx
64007ae5:	jmp    0x64007af1
64007ae7:	mov    eax,DWORD PTR [ebp+0x10]
64007aea:	cmp    eax,edi
64007aec:	mov    ebx,DWORD PTR [eax+0x8]
64007aef:	jne    0x64007b6d
64007af1:	cmp    BYTE PTR [ebx+0x45],0x0
64007af5:	mov    esi,DWORD PTR [edi+0x4]
64007af8:	jne    0x64007afd
64007afa:	mov    DWORD PTR [ebx+0x4],esi
64007afd:	mov    ecx,DWORD PTR [esp+0x14]
64007b01:	mov    eax,DWORD PTR [ecx+0x4]
64007b04:	cmp    DWORD PTR [eax+0x4],edi
64007b07:	jne    0x64007b0e
64007b09:	mov    DWORD PTR [eax+0x4],ebx
64007b0c:	jmp    0x64007b19
64007b0e:	cmp    DWORD PTR [esi],edi
64007b10:	jne    0x64007b16
64007b12:	mov    DWORD PTR [esi],ebx
64007b14:	jmp    0x64007b19
64007b16:	mov    DWORD PTR [esi+0x8],ebx
64007b19:	mov    eax,DWORD PTR [ecx+0x4]
64007b1c:	cmp    DWORD PTR [eax],edi
64007b1e:	jne    0x64007b3c
64007b20:	cmp    BYTE PTR [ebx+0x45],0x0
64007b24:	je     0x64007b2a
64007b26:	mov    eax,esi
64007b28:	jmp    0x64007b37
64007b2a:	push   ebx
64007b2b:	call   0x64008050
64007b30:	mov    ecx,DWORD PTR [esp+0x18]
64007b34:	add    esp,0x4
64007b37:	mov    edx,DWORD PTR [ecx+0x4]
64007b3a:	mov    DWORD PTR [edx],eax
64007b3c:	mov    eax,DWORD PTR [ecx+0x4]
64007b3f:	cmp    DWORD PTR [eax+0x8],edi
64007b42:	jne    0x64007bcc
64007b48:	cmp    BYTE PTR [ebx+0x45],0x0
64007b4c:	je     0x64007b58
64007b4e:	mov    edx,DWORD PTR [ecx+0x4]
64007b51:	mov    eax,esi
64007b53:	mov    DWORD PTR [edx+0x8],eax
64007b56:	jmp    0x64007bcc
64007b58:	push   ebx
64007b59:	call   0x64008030
64007b5e:	mov    ecx,DWORD PTR [esp+0x18]
64007b62:	mov    edx,DWORD PTR [ecx+0x4]
64007b65:	add    esp,0x4
64007b68:	mov    DWORD PTR [edx+0x8],eax
64007b6b:	jmp    0x64007bcc
64007b6d:	mov    DWORD PTR [ecx+0x4],eax
64007b70:	mov    ecx,DWORD PTR [edi]
64007b72:	mov    DWORD PTR [eax],ecx
64007b74:	cmp    eax,DWORD PTR [edi+0x8]
64007b77:	jne    0x64007b7d
64007b79:	mov    esi,eax
64007b7b:	jmp    0x64007b97
64007b7d:	cmp    BYTE PTR [ebx+0x45],0x0
64007b81:	mov    esi,DWORD PTR [eax+0x4]
64007b84:	jne    0x64007b89
64007b86:	mov    DWORD PTR [ebx+0x4],esi
64007b89:	mov    DWORD PTR [esi],ebx
64007b8b:	mov    edx,DWORD PTR [edi+0x8]
64007b8e:	mov    DWORD PTR [eax+0x8],edx
64007b91:	mov    ecx,DWORD PTR [edi+0x8]
64007b94:	mov    DWORD PTR [ecx+0x4],eax
64007b97:	mov    edx,DWORD PTR [esp+0x14]
64007b9b:	mov    ecx,DWORD PTR [edx+0x4]
64007b9e:	cmp    DWORD PTR [ecx+0x4],edi
64007ba1:	jne    0x64007ba8
64007ba3:	mov    DWORD PTR [ecx+0x4],eax
64007ba6:	jmp    0x64007bb6
64007ba8:	mov    ecx,DWORD PTR [edi+0x4]
64007bab:	cmp    DWORD PTR [ecx],edi
64007bad:	jne    0x64007bb3
64007baf:	mov    DWORD PTR [ecx],eax
64007bb1:	jmp    0x64007bb6
64007bb3:	mov    DWORD PTR [ecx+0x8],eax
64007bb6:	mov    ecx,DWORD PTR [edi+0x4]
64007bb9:	mov    DWORD PTR [eax+0x4],ecx
64007bbc:	mov    cl,BYTE PTR [eax+0x44]
64007bbf:	mov    dl,BYTE PTR [edi+0x44]
64007bc2:	mov    BYTE PTR [eax+0x44],dl
64007bc5:	mov    BYTE PTR [edi+0x44],cl
64007bc8:	mov    ecx,DWORD PTR [esp+0x14]
64007bcc:	cmp    BYTE PTR [edi+0x44],0x1
64007bd0:	jne    0x64007ce1
64007bd6:	mov    eax,DWORD PTR [ecx+0x4]
64007bd9:	cmp    ebx,DWORD PTR [eax+0x4]
64007bdc:	je     0x64007cdd
64007be2:	cmp    BYTE PTR [ebx+0x44],0x1
64007be6:	jne    0x64007cdd
64007bec:	mov    eax,DWORD PTR [esi]
64007bee:	cmp    ebx,eax
64007bf0:	jne    0x64007c60
64007bf2:	mov    eax,DWORD PTR [esi+0x8]
64007bf5:	cmp    BYTE PTR [eax+0x44],0x0
64007bf9:	jne    0x64007c10
64007bfb:	mov    BYTE PTR [eax+0x44],0x1
64007bff:	push   esi
64007c00:	mov    BYTE PTR [esi+0x44],0x0
64007c04:	call   0x64007200
64007c09:	mov    eax,DWORD PTR [esi+0x8]
64007c0c:	mov    ecx,DWORD PTR [esp+0x14]
64007c10:	cmp    BYTE PTR [eax+0x45],0x0
64007c14:	jne    0x64007c95
64007c16:	mov    edx,DWORD PTR [eax]
64007c18:	cmp    BYTE PTR [edx+0x44],0x1
64007c1c:	jne    0x64007c27
64007c1e:	mov    edx,DWORD PTR [eax+0x8]
64007c21:	cmp    BYTE PTR [edx+0x44],0x1
64007c25:	je     0x64007c91
64007c27:	mov    edx,DWORD PTR [eax+0x8]
64007c2a:	cmp    BYTE PTR [edx+0x44],0x1
64007c2e:	jne    0x64007c47
64007c30:	mov    edx,DWORD PTR [eax]
64007c32:	mov    BYTE PTR [edx+0x44],0x1
64007c36:	push   eax
64007c37:	mov    BYTE PTR [eax+0x44],0x0
64007c3b:	call   0x64007250
64007c40:	mov    eax,DWORD PTR [esi+0x8]
64007c43:	mov    ecx,DWORD PTR [esp+0x14]
64007c47:	mov    dl,BYTE PTR [esi+0x44]
64007c4a:	mov    BYTE PTR [eax+0x44],dl
64007c4d:	mov    BYTE PTR [esi+0x44],0x1
64007c51:	mov    eax,DWORD PTR [eax+0x8]
64007c54:	push   esi
64007c55:	mov    BYTE PTR [eax+0x44],0x1
64007c59:	call   0x64007200
64007c5e:	jmp    0x64007cdd
64007c60:	cmp    BYTE PTR [eax+0x44],0x0
64007c64:	jne    0x64007c7a
64007c66:	mov    BYTE PTR [eax+0x44],0x1
64007c6a:	push   esi
64007c6b:	mov    BYTE PTR [esi+0x44],0x0
64007c6f:	call   0x64007250
64007c74:	mov    eax,DWORD PTR [esi]
64007c76:	mov    ecx,DWORD PTR [esp+0x14]
64007c7a:	cmp    BYTE PTR [eax+0x45],0x0
64007c7e:	jne    0x64007c95
64007c80:	mov    edx,DWORD PTR [eax+0x8]
64007c83:	cmp    BYTE PTR [edx+0x44],0x1
64007c87:	jne    0x64007ca8
64007c89:	mov    edx,DWORD PTR [eax]
64007c8b:	cmp    BYTE PTR [edx+0x44],0x1
64007c8f:	jne    0x64007ca8
64007c91:	mov    BYTE PTR [eax+0x44],0x0
64007c95:	mov    eax,DWORD PTR [ecx+0x4]
64007c98:	mov    ebx,esi
64007c9a:	cmp    ebx,DWORD PTR [eax+0x4]
64007c9d:	mov    esi,DWORD PTR [esi+0x4]
64007ca0:	jne    0x64007be2
64007ca6:	jmp    0x64007cdd
64007ca8:	mov    edx,DWORD PTR [eax]
64007caa:	cmp    BYTE PTR [edx+0x44],0x1
64007cae:	jne    0x64007cc7
64007cb0:	mov    edx,DWORD PTR [eax+0x8]
64007cb3:	mov    BYTE PTR [edx+0x44],0x1
64007cb7:	push   eax
64007cb8:	mov    BYTE PTR [eax+0x44],0x0
64007cbc:	call   0x64007200
64007cc1:	mov    eax,DWORD PTR [esi]
64007cc3:	mov    ecx,DWORD PTR [esp+0x14]
64007cc7:	mov    dl,BYTE PTR [esi+0x44]
64007cca:	mov    BYTE PTR [eax+0x44],dl
64007ccd:	mov    BYTE PTR [esi+0x44],0x1
64007cd1:	mov    eax,DWORD PTR [eax]
64007cd3:	push   esi
64007cd4:	mov    BYTE PTR [eax+0x44],0x1
64007cd8:	call   0x64007250
64007cdd:	mov    BYTE PTR [ebx+0x44],0x1
64007ce1:	cmp    DWORD PTR [edi+0x40],0x8
64007ce5:	jb     0x64007cf3
64007ce7:	mov    ecx,DWORD PTR [edi+0x2c]
64007cea:	push   ecx
64007ceb:	call   0x64010422
64007cf0:	add    esp,0x4
64007cf3:	xor    esi,esi
64007cf5:	mov    ebx,0x7
64007cfa:	mov    DWORD PTR [edi+0x40],ebx
64007cfd:	mov    DWORD PTR [edi+0x3c],esi
64007d00:	mov    WORD PTR [edi+0x2c],si
64007d04:	cmp    DWORD PTR [edi+0x24],0x8
64007d08:	jb     0x64007d16
64007d0a:	mov    edx,DWORD PTR [edi+0x10]
64007d0d:	push   edx
64007d0e:	call   0x64010422
64007d13:	add    esp,0x4
64007d16:	mov    DWORD PTR [edi+0x24],ebx
64007d19:	mov    DWORD PTR [edi+0x20],esi
64007d1c:	push   edi
64007d1d:	mov    WORD PTR [edi+0x10],si
64007d21:	call   0x64010422
64007d26:	mov    ecx,DWORD PTR [esp+0x18]
64007d2a:	mov    eax,DWORD PTR [ecx+0x8]
64007d2d:	add    esp,0x4
64007d30:	cmp    eax,esi
64007d32:	jbe    0x64007d3a
64007d34:	add    eax,0xffffffff
64007d37:	mov    DWORD PTR [ecx+0x8],eax
64007d3a:	mov    eax,DWORD PTR [ebp+0x8]
64007d3d:	mov    ecx,DWORD PTR [ebp+0xc]
64007d40:	mov    edx,DWORD PTR [ebp+0x10]
64007d43:	mov    DWORD PTR [eax],ecx
64007d45:	mov    DWORD PTR [eax+0x4],edx
64007d48:	mov    ecx,DWORD PTR [esp+0x60]
64007d4c:	mov    DWORD PTR fs:0x0,ecx
64007d53:	pop    ecx
64007d54:	pop    edi
64007d55:	pop    esi
64007d56:	pop    ebx
64007d57:	mov    esp,ebp
64007d59:	pop    ebp
64007d5a:	ret    0xc
64007d5d:	int3   
64007d5e:	int3   
64007d5f:	int3   
64007d60:	push   0x48
64007d62:	call   0x640107a3
64007d67:	add    esp,0x4
64007d6a:	test   eax,eax
64007d6c:	je     0x64007d74
64007d6e:	mov    DWORD PTR [eax],0x0
64007d74:	lea    ecx,[eax+0x4]
64007d77:	test   ecx,ecx
64007d79:	je     0x64007d81
64007d7b:	mov    DWORD PTR [ecx],0x0
64007d81:	lea    ecx,[eax+0x8]
64007d84:	test   ecx,ecx
64007d86:	je     0x64007d8e
64007d88:	mov    DWORD PTR [ecx],0x0
64007d8e:	mov    BYTE PTR [eax+0x44],0x1
64007d92:	mov    BYTE PTR [eax+0x45],0x0
64007d96:	ret    
64007d97:	int3   
64007d98:	int3   
64007d99:	int3   
64007d9a:	int3   
64007d9b:	int3   
64007d9c:	int3   
64007d9d:	int3   
64007d9e:	int3   
64007d9f:	int3   
64007da0:	push   esi
64007da1:	mov    esi,ecx
64007da3:	cmp    DWORD PTR [esi],0x0
64007da6:	jne    0x64007dad
64007da8:	call   0x6401077a
64007dad:	mov    eax,DWORD PTR [esi+0x4]
64007db0:	cmp    BYTE PTR [eax+0x45],0x0
64007db4:	je     0x64007dc8
64007db6:	mov    eax,DWORD PTR [eax+0x8]
64007db9:	mov    DWORD PTR [esi+0x4],eax
64007dbc:	cmp    BYTE PTR [eax+0x45],0x0
64007dc0:	je     0x64007e27
64007dc2:	pop    esi
64007dc3:	jmp    0x6401077a
64007dc8:	mov    ecx,DWORD PTR [eax]
64007dca:	cmp    BYTE PTR [ecx+0x45],0x0
64007dce:	jne    0x64007df0
64007dd0:	mov    eax,DWORD PTR [ecx+0x8]
64007dd3:	cmp    BYTE PTR [eax+0x45],0x0
64007dd7:	jne    0x64007deb
64007dd9:	lea    esp,[esp+0x0]
64007de0:	mov    ecx,eax
64007de2:	mov    eax,DWORD PTR [ecx+0x8]
64007de5:	cmp    BYTE PTR [eax+0x45],0x0
64007de9:	je     0x64007de0
64007deb:	mov    DWORD PTR [esi+0x4],ecx
64007dee:	pop    esi
64007def:	ret    
64007df0:	mov    eax,DWORD PTR [eax+0x4]
64007df3:	cmp    BYTE PTR [eax+0x45],0x0
64007df7:	jne    0x64007e15
64007df9:	lea    esp,[esp+0x0]
64007e00:	mov    ecx,DWORD PTR [esi+0x4]
64007e03:	cmp    ecx,DWORD PTR [eax]
64007e05:	jne    0x64007e15
64007e07:	mov    DWORD PTR [esi+0x4],eax
64007e0a:	mov    edx,eax
64007e0c:	mov    eax,DWORD PTR [edx+0x4]
64007e0f:	cmp    BYTE PTR [eax+0x45],0x0
64007e13:	je     0x64007e00
64007e15:	mov    ecx,DWORD PTR [esi+0x4]
64007e18:	cmp    BYTE PTR [ecx+0x45],0x0
64007e1c:	je     0x64007e24
64007e1e:	pop    esi
64007e1f:	jmp    0x6401077a
64007e24:	mov    DWORD PTR [esi+0x4],eax
64007e27:	pop    esi
64007e28:	ret    
64007e29:	int3   
64007e2a:	int3   
64007e2b:	int3   
64007e2c:	int3   
64007e2d:	int3   
64007e2e:	int3   
64007e2f:	int3   
64007e30:	push   0xffffffff
64007e32:	push   0x64020778
64007e37:	mov    eax,fs:0x0
64007e3d:	push   eax
64007e3e:	push   ecx
64007e3f:	push   ebx
64007e40:	push   esi
64007e41:	push   edi
64007e42:	mov    eax,ds:0x64029038
64007e47:	xor    eax,esp
64007e49:	push   eax
64007e4a:	lea    eax,[esp+0x14]
64007e4e:	mov    fs:0x0,eax
64007e54:	mov    esi,ecx
64007e56:	mov    DWORD PTR [esp+0x10],esi
64007e5a:	mov    edi,DWORD PTR [esp+0x24]
64007e5e:	xor    ebx,ebx
64007e60:	push   0xffffffff
64007e62:	push   ebx
64007e63:	mov    DWORD PTR [esi+0x18],0xf
64007e6a:	mov    DWORD PTR [esi+0x14],ebx
64007e6d:	push   edi
64007e6e:	mov    BYTE PTR [esi+0x4],bl
64007e71:	call   0x640017a0
64007e76:	push   0xffffffff
64007e78:	lea    ecx,[esi+0x1c]
64007e7b:	mov    DWORD PTR [esp+0x20],ebx
64007e7f:	lea    eax,[edi+0x1c]
64007e82:	push   ebx
64007e83:	mov    DWORD PTR [ecx+0x18],0xf
64007e8a:	mov    DWORD PTR [ecx+0x14],ebx
64007e8d:	push   eax
64007e8e:	mov    BYTE PTR [ecx+0x4],bl
64007e91:	call   0x640017a0
64007e96:	mov    eax,esi
64007e98:	mov    ecx,DWORD PTR [esp+0x14]
64007e9c:	mov    DWORD PTR fs:0x0,ecx
64007ea3:	pop    ecx
64007ea4:	pop    edi
64007ea5:	pop    esi
64007ea6:	pop    ebx
64007ea7:	add    esp,0x10
64007eaa:	ret    0x4
64007ead:	int3   
64007eae:	int3   
64007eaf:	int3   
64007eb0:	push   0xffffffff
64007eb2:	push   0x64020a38
64007eb7:	mov    eax,fs:0x0
64007ebd:	push   eax
64007ebe:	push   ecx
64007ebf:	push   ebx
64007ec0:	push   esi
64007ec1:	push   edi
64007ec2:	mov    eax,ds:0x64029038
64007ec7:	xor    eax,esp
64007ec9:	push   eax
64007eca:	lea    eax,[esp+0x14]
64007ece:	mov    fs:0x0,eax
64007ed4:	mov    esi,ecx
64007ed6:	mov    DWORD PTR [esp+0x10],esi
64007eda:	mov    ebx,DWORD PTR [esp+0x24]
64007ede:	xor    edi,edi
64007ee0:	push   0xffffffff
64007ee2:	push   edi
64007ee3:	mov    DWORD PTR [esi+0x18],0x7
64007eea:	mov    DWORD PTR [esi+0x14],edi
64007eed:	push   ebx
64007eee:	mov    WORD PTR [esi+0x4],di
64007ef2:	call   0x64005df0
64007ef7:	push   0xffffffff
64007ef9:	lea    ecx,[esi+0x1c]
64007efc:	mov    DWORD PTR [esp+0x20],edi
64007f00:	lea    eax,[ebx+0x1c]
64007f03:	push   edi
64007f04:	mov    DWORD PTR [ecx+0x18],0x7
64007f0b:	mov    DWORD PTR [ecx+0x14],edi
64007f0e:	push   eax
64007f0f:	mov    WORD PTR [ecx+0x4],di
64007f13:	call   0x64005df0
64007f18:	mov    eax,esi
64007f1a:	mov    ecx,DWORD PTR [esp+0x14]
64007f1e:	mov    DWORD PTR fs:0x0,ecx
64007f25:	pop    ecx
64007f26:	pop    edi
64007f27:	pop    esi
64007f28:	pop    ebx
64007f29:	add    esp,0x10
64007f2c:	ret    0x4
64007f2f:	int3   
64007f30:	push   ecx
64007f31:	push   ebx
64007f32:	push   esi
64007f33:	mov    esi,DWORD PTR [esp+0x10]
64007f37:	xor    ebx,ebx
64007f39:	cmp    BYTE PTR [esi+0x45],bl
64007f3c:	push   edi
64007f3d:	mov    DWORD PTR [esp+0xc],ecx
64007f41:	mov    edi,esi
64007f43:	jne    0x64007fa6
64007f45:	push   ebp
64007f46:	lea    ebp,[ebx+0xf]
64007f49:	lea    esp,[esp+0x0]
64007f50:	mov    eax,DWORD PTR [edi+0x8]
64007f53:	mov    ecx,DWORD PTR [esp+0x10]
64007f57:	push   eax
64007f58:	call   0x64007f30
64007f5d:	cmp    DWORD PTR [esi+0x40],0x10
64007f61:	mov    edi,DWORD PTR [edi]
64007f63:	jb     0x64007f71
64007f65:	mov    ecx,DWORD PTR [esi+0x2c]
64007f68:	push   ecx
64007f69:	call   0x64010422
64007f6e:	add    esp,0x4
64007f71:	mov    DWORD PTR [esi+0x40],ebp
64007f74:	mov    DWORD PTR [esi+0x3c],ebx
64007f77:	mov    BYTE PTR [esi+0x2c],bl
64007f7a:	cmp    DWORD PTR [esi+0x24],0x10
64007f7e:	jb     0x64007f8c
64007f80:	mov    edx,DWORD PTR [esi+0x10]
64007f83:	push   edx
64007f84:	call   0x64010422
64007f89:	add    esp,0x4
64007f8c:	mov    DWORD PTR [esi+0x24],ebp
64007f8f:	mov    DWORD PTR [esi+0x20],ebx
64007f92:	push   esi
64007f93:	mov    BYTE PTR [esi+0x10],bl
64007f96:	call   0x64010422
64007f9b:	add    esp,0x4
64007f9e:	cmp    BYTE PTR [edi+0x45],bl
64007fa1:	mov    esi,edi
64007fa3:	je     0x64007f50
64007fa5:	pop    ebp
64007fa6:	pop    edi
64007fa7:	pop    esi
64007fa8:	pop    ebx
64007fa9:	pop    ecx
64007faa:	ret    0x4
64007fad:	int3   
64007fae:	int3   
64007faf:	int3   
64007fb0:	push   ecx
64007fb1:	push   ebx
64007fb2:	push   esi
64007fb3:	mov    esi,DWORD PTR [esp+0x10]
64007fb7:	xor    ebx,ebx
64007fb9:	cmp    BYTE PTR [esi+0x45],bl
64007fbc:	push   edi
64007fbd:	mov    DWORD PTR [esp+0xc],ecx
64007fc1:	mov    edi,esi
64007fc3:	jne    0x64008028
64007fc5:	push   ebp
64007fc6:	lea    ebp,[ebx+0x7]
64007fc9:	lea    esp,[esp+0x0]
64007fd0:	mov    eax,DWORD PTR [edi+0x8]
64007fd3:	mov    ecx,DWORD PTR [esp+0x10]
64007fd7:	push   eax
64007fd8:	call   0x64007fb0
64007fdd:	cmp    DWORD PTR [esi+0x40],0x8
64007fe1:	mov    edi,DWORD PTR [edi]
64007fe3:	jb     0x64007ff1
64007fe5:	mov    ecx,DWORD PTR [esi+0x2c]
64007fe8:	push   ecx
64007fe9:	call   0x64010422
64007fee:	add    esp,0x4
64007ff1:	mov    DWORD PTR [esi+0x40],ebp
64007ff4:	mov    DWORD PTR [esi+0x3c],ebx
64007ff7:	mov    WORD PTR [esi+0x2c],bx
64007ffb:	cmp    DWORD PTR [esi+0x24],0x8
64007fff:	jb     0x6400800d
64008001:	mov    edx,DWORD PTR [esi+0x10]
64008004:	push   edx
64008005:	call   0x64010422
6400800a:	add    esp,0x4
6400800d:	mov    DWORD PTR [esi+0x24],ebp
64008010:	mov    DWORD PTR [esi+0x20],ebx
64008013:	push   esi
64008014:	mov    WORD PTR [esi+0x10],bx
64008018:	call   0x64010422
6400801d:	add    esp,0x4
64008020:	cmp    BYTE PTR [edi+0x45],bl
64008023:	mov    esi,edi
64008025:	je     0x64007fd0
64008027:	pop    ebp
64008028:	pop    edi
64008029:	pop    esi
6400802a:	pop    ebx
6400802b:	pop    ecx
6400802c:	ret    0x4
6400802f:	int3   
64008030:	mov    eax,DWORD PTR [esp+0x4]
64008034:	mov    ecx,DWORD PTR [eax+0x8]
64008037:	cmp    BYTE PTR [ecx+0x45],0x0
6400803b:	jne    0x6400804b
6400803d:	lea    ecx,[ecx+0x0]
64008040:	mov    eax,ecx
64008042:	mov    ecx,DWORD PTR [eax+0x8]
64008045:	cmp    BYTE PTR [ecx+0x45],0x0
64008049:	je     0x64008040
6400804b:	ret    
6400804c:	int3   
6400804d:	int3   
6400804e:	int3   
6400804f:	int3   
64008050:	mov    eax,DWORD PTR [esp+0x4]
64008054:	mov    ecx,DWORD PTR [eax]
64008056:	cmp    BYTE PTR [ecx+0x45],0x0
6400805a:	jne    0x6400806a
6400805c:	lea    esp,[esp+0x0]
64008060:	mov    eax,ecx
64008062:	mov    ecx,DWORD PTR [eax]
64008064:	cmp    BYTE PTR [ecx+0x45],0x0
64008068:	je     0x64008060
6400806a:	ret    
6400806b:	int3   
6400806c:	int3   
6400806d:	int3   
6400806e:	int3   
6400806f:	int3   
64008070:	push   0xffffffff
64008072:	push   0x64020748
64008077:	mov    eax,fs:0x0
6400807d:	push   eax
6400807e:	sub    esp,0x20
64008081:	push   ebx
64008082:	push   ebp
64008083:	mov    eax,ds:0x64029038
64008088:	xor    eax,esp
6400808a:	push   eax
6400808b:	lea    eax,[esp+0x2c]
6400808f:	mov    fs:0x0,eax
64008095:	mov    eax,DWORD PTR [esp+0x3c]
64008099:	xor    ebx,ebx
6400809b:	push   0xffffffff
6400809d:	push   ebx
6400809e:	push   eax
6400809f:	lea    ecx,[esp+0x1c]
640080a3:	mov    DWORD PTR [esp+0x18],ebx
640080a7:	mov    DWORD PTR [esp+0x34],0xf
640080af:	mov    DWORD PTR [esp+0x30],ebx
640080b3:	mov    BYTE PTR [esp+0x20],bl
640080b7:	call   0x640017a0
640080bc:	mov    eax,edi
640080be:	mov    DWORD PTR [esp+0x34],ebx
640080c2:	lea    ebp,[eax+0x1]
640080c5:	mov    cl,BYTE PTR [eax]
640080c7:	add    eax,0x1
640080ca:	cmp    cl,bl
640080cc:	jne    0x640080c5
640080ce:	sub    eax,ebp
640080d0:	push   eax
640080d1:	push   edi
640080d2:	lea    eax,[esp+0x18]
640080d6:	call   0x640081b0
640080db:	push   0xffffffff
640080dd:	push   ebx
640080de:	mov    DWORD PTR [esi+0x18],0xf
640080e5:	mov    DWORD PTR [esi+0x14],ebx
640080e8:	push   eax
640080e9:	mov    ecx,esi
640080eb:	mov    BYTE PTR [esi+0x4],bl
640080ee:	call   0x640017a0
640080f3:	cmp    DWORD PTR [esp+0x28],0x10
640080f8:	jb     0x64008107
640080fa:	mov    ecx,DWORD PTR [esp+0x14]
640080fe:	push   ecx
640080ff:	call   0x64010422
64008104:	add    esp,0x4
64008107:	mov    eax,esi
64008109:	mov    ecx,DWORD PTR [esp+0x2c]
6400810d:	mov    DWORD PTR fs:0x0,ecx
64008114:	pop    ecx
64008115:	pop    ebp
64008116:	pop    ebx
64008117:	add    esp,0x2c
6400811a:	ret    
6400811b:	int3   
6400811c:	int3   
6400811d:	int3   
6400811e:	int3   
6400811f:	int3   
64008120:	push   ebx
64008121:	push   ebp
64008122:	push   esi
64008123:	push   edi
64008124:	mov    edi,DWORD PTR [esp+0x14]
64008128:	mov    esi,ecx
6400812a:	cmp    DWORD PTR [esi+0x14],edi
6400812d:	jae    0x64008134
6400812f:	call   0x640103de
64008134:	mov    eax,DWORD PTR [esi+0x14]
64008137:	mov    ebx,DWORD PTR [esp+0x18]
6400813b:	sub    eax,edi
6400813d:	cmp    eax,ebx
6400813f:	jae    0x64008143
64008141:	mov    ebx,eax
64008143:	mov    ebp,DWORD PTR [esp+0x20]
64008147:	cmp    ebx,ebp
64008149:	mov    edx,ebx
6400814b:	jb     0x6400814f
6400814d:	mov    edx,ebp
6400814f:	cmp    DWORD PTR [esi+0x18],0x8
64008153:	jb     0x6400815a
64008155:	mov    eax,DWORD PTR [esi+0x4]
64008158:	jmp    0x6400815d
6400815a:	lea    eax,[esi+0x4]
6400815d:	test   edx,edx
6400815f:	mov    ecx,DWORD PTR [esp+0x1c]
64008163:	lea    eax,[eax+edi*2]
64008166:	jbe    0x6400818d
64008168:	mov    si,WORD PTR [eax]
6400816b:	cmp    si,WORD PTR [ecx]
6400816e:	jne    0x6400817d
64008170:	add    eax,0x2
64008173:	add    ecx,0x2
64008176:	sub    edx,0x1
64008179:	jne    0x64008168
6400817b:	jmp    0x6400818d
6400817d:	movzx  eax,WORD PTR [eax]
64008180:	cmp    ax,WORD PTR [ecx]
64008183:	sbb    eax,eax
64008185:	and    eax,0xfffffffe
64008188:	add    eax,0x1
6400818b:	jne    0x640081a2
6400818d:	cmp    ebx,ebp
6400818f:	jae    0x6400819b
64008191:	pop    edi
64008192:	pop    esi
64008193:	pop    ebp
64008194:	or     eax,0xffffffff
64008197:	pop    ebx
64008198:	ret    0x10
6400819b:	xor    eax,eax
6400819d:	cmp    ebx,ebp
6400819f:	setne  al
640081a2:	pop    edi
640081a3:	pop    esi
640081a4:	pop    ebp
640081a5:	pop    ebx
640081a6:	ret    0x10
640081a9:	int3   
640081aa:	int3   
640081ab:	int3   
640081ac:	int3   
640081ad:	int3   
640081ae:	int3   
640081af:	int3   
640081b0:	mov    ecx,DWORD PTR [esp+0x4]
640081b4:	push   ebx
640081b5:	push   ebp
640081b6:	mov    ebp,DWORD PTR [esp+0x10]
640081ba:	push   esi
640081bb:	mov    esi,eax
640081bd:	mov    edx,DWORD PTR [esi+0x18]
640081c0:	cmp    edx,0x10
640081c3:	push   edi
640081c4:	lea    ebx,[esi+0x4]
640081c7:	jb     0x640081cd
640081c9:	mov    eax,DWORD PTR [ebx]
640081cb:	jmp    0x640081cf
640081cd:	mov    eax,ebx
640081cf:	cmp    ecx,eax
640081d1:	jb     0x64008200
640081d3:	cmp    edx,0x10
640081d6:	jb     0x640081dc
640081d8:	mov    eax,DWORD PTR [ebx]
640081da:	jmp    0x640081de
640081dc:	mov    eax,ebx
640081de:	mov    edi,DWORD PTR [esi+0x14]
640081e1:	add    edi,eax
640081e3:	cmp    edi,ecx
640081e5:	jbe    0x64008200
640081e7:	cmp    edx,0x10
640081ea:	jb     0x640081ee
640081ec:	mov    ebx,DWORD PTR [ebx]
640081ee:	sub    ecx,ebx
640081f0:	push   ecx
640081f1:	push   esi
640081f2:	mov    eax,ebp
640081f4:	call   0x640019d0
640081f9:	pop    edi
640081fa:	pop    esi
640081fb:	pop    ebp
640081fc:	pop    ebx
640081fd:	ret    0x8
64008200:	mov    eax,DWORD PTR [esi+0x14]
64008203:	or     ecx,0xffffffff
64008206:	sub    ecx,eax
64008208:	cmp    ecx,ebp
6400820a:	jbe    0x64008213
6400820c:	lea    edx,[eax+ebp*1]
6400820f:	cmp    edx,eax
64008211:	jae    0x64008218
64008213:	call   0x6401039f
64008218:	test   ebp,ebp
6400821a:	jbe    0x64008290
6400821c:	mov    edi,DWORD PTR [esi+0x14]
6400821f:	add    edi,ebp
64008221:	cmp    edi,0xfffffffe
64008224:	jbe    0x6400822b
64008226:	call   0x6401039f
6400822b:	mov    eax,DWORD PTR [esi+0x18]
6400822e:	cmp    eax,edi
64008230:	jae    0x6400824e
64008232:	mov    eax,DWORD PTR [esi+0x14]
64008235:	push   eax
64008236:	push   edi
64008237:	mov    ecx,esi
64008239:	call   0x64001b60
6400823e:	test   edi,edi
64008240:	jbe    0x64008290
64008242:	mov    eax,DWORD PTR [esi+0x18]
64008245:	cmp    eax,0x10
64008248:	jb     0x64008268
6400824a:	mov    edx,DWORD PTR [ebx]
6400824c:	jmp    0x6400826a
6400824e:	test   edi,edi
64008250:	jne    0x64008240
64008252:	cmp    eax,0x10
64008255:	mov    DWORD PTR [esi+0x14],edi
64008258:	jb     0x6400825c
6400825a:	mov    ebx,DWORD PTR [ebx]
6400825c:	pop    edi
6400825d:	mov    eax,esi
6400825f:	pop    esi
64008260:	pop    ebp
64008261:	mov    BYTE PTR [ebx],0x0
64008264:	pop    ebx
64008265:	ret    0x8
64008268:	mov    edx,ebx
6400826a:	mov    ecx,DWORD PTR [esi+0x14]
6400826d:	push   ebp
6400826e:	mov    ebp,DWORD PTR [esp+0x18]
64008272:	sub    eax,ecx
64008274:	push   ebp
64008275:	push   eax
64008276:	add    ecx,edx
64008278:	push   ecx
64008279:	call   0x6401057a
6400827e:	add    esp,0x10
64008281:	cmp    DWORD PTR [esi+0x18],0x10
64008285:	mov    DWORD PTR [esi+0x14],edi
64008288:	jb     0x6400828c
6400828a:	mov    ebx,DWORD PTR [ebx]
6400828c:	mov    BYTE PTR [ebx+edi*1],0x0
64008290:	pop    edi
64008291:	mov    eax,esi
64008293:	pop    esi
64008294:	pop    ebp
64008295:	pop    ebx
64008296:	ret    0x8
64008299:	int3   
6400829a:	int3   
6400829b:	int3   
6400829c:	int3   
6400829d:	int3   
6400829e:	int3   
6400829f:	int3   
640082a0:	push   ebp
640082a1:	mov    ebp,DWORD PTR [esp+0x14]
640082a5:	push   esi
640082a6:	mov    esi,DWORD PTR [esp+0x10]
640082aa:	push   edi
640082ab:	mov    edi,DWORD PTR [esp+0x10]
640082af:	nop
640082b0:	test   edi,edi
640082b2:	je     0x640082ba
640082b4:	cmp    edi,DWORD PTR [esp+0x18]
640082b8:	je     0x640082bf
640082ba:	call   0x6401077a
640082bf:	cmp    esi,ebp
640082c1:	je     0x6400831b
640082c3:	add    DWORD PTR [ebx],0x1
640082c6:	test   edi,edi
640082c8:	jne    0x640082cf
640082ca:	call   0x6401077a
640082cf:	cmp    BYTE PTR [esi+0x29],0x0
640082d3:	je     0x640082dc
640082d5:	call   0x6401077a
640082da:	jmp    0x640082b0
640082dc:	mov    ecx,DWORD PTR [esi+0x8]
640082df:	cmp    BYTE PTR [ecx+0x29],0x0
640082e3:	jne    0x640082fe
640082e5:	mov    eax,DWORD PTR [ecx]
640082e7:	cmp    BYTE PTR [eax+0x29],0x0
640082eb:	jne    0x640082fa
640082ed:	lea    ecx,[ecx+0x0]
640082f0:	mov    ecx,eax
640082f2:	mov    eax,DWORD PTR [ecx]
640082f4:	cmp    BYTE PTR [eax+0x29],0x0
640082f8:	je     0x640082f0
640082fa:	mov    esi,ecx
640082fc:	jmp    0x640082b0
640082fe:	mov    eax,DWORD PTR [esi+0x4]
64008301:	cmp    BYTE PTR [eax+0x29],0x0
64008305:	jne    0x64008317
64008307:	cmp    esi,DWORD PTR [eax+0x8]
6400830a:	jne    0x64008317
6400830c:	mov    esi,eax
6400830e:	mov    eax,DWORD PTR [eax+0x4]
64008311:	cmp    BYTE PTR [eax+0x29],0x0
64008315:	je     0x64008307
64008317:	mov    esi,eax
64008319:	jmp    0x640082b0
6400831b:	pop    edi
6400831c:	pop    esi
6400831d:	pop    ebp
6400831e:	ret    
6400831f:	int3   
64008320:	push   esi
64008321:	mov    esi,ecx
64008323:	call   0x6400bc10
64008328:	call   eax
6400832a:	mov    DWORD PTR [esi],eax
6400832c:	mov    eax,esi
6400832e:	pop    esi
6400832f:	ret    
64008330:	mov    eax,DWORD PTR [ecx]
64008332:	push   eax
64008333:	call   0x6400bcf0
64008338:	call   eax
6400833a:	ret    
6400833b:	int3   
6400833c:	int3   
6400833d:	int3   
6400833e:	int3   
6400833f:	int3   
64008340:	push   ebp
64008341:	mov    ebp,esp
64008343:	and    esp,0xfffffff8
64008346:	push   0xffffffff
64008348:	push   0x640217a0
6400834d:	mov    eax,fs:0x0
64008353:	push   eax
64008354:	sub    esp,0x68
64008357:	mov    eax,ds:0x64029038
6400835c:	xor    eax,esp
6400835e:	mov    DWORD PTR [esp+0x60],eax
64008362:	push   ebx
64008363:	push   esi
64008364:	push   edi
64008365:	mov    eax,ds:0x64029038
6400836a:	xor    eax,esp
6400836c:	push   eax
6400836d:	lea    eax,[esp+0x78]
64008371:	mov    fs:0x0,eax
64008377:	mov    eax,DWORD PTR [ebp+0x14]
6400837a:	mov    ebx,DWORD PTR [ebp+0xc]
6400837d:	mov    DWORD PTR [esp+0x1c],ecx
64008381:	mov    DWORD PTR [esp+0x18],eax
64008385:	call   DWORD PTR ds:0x64022058
6400838b:	lea    ecx,[esp+0x44]
6400838f:	push   ecx
64008390:	mov    DWORD PTR [esp+0x24],eax
64008394:	call   DWORD PTR ds:0x640221dc
6400839a:	xor    edi,edi
6400839c:	mov    DWORD PTR [esp+0x6c],0xf
640083a4:	mov    DWORD PTR [esp+0x68],edi
640083a8:	mov    BYTE PTR [esp+0x58],0x0
640083ad:	mov    ecx,DWORD PTR [ebp+0x10]
640083b0:	mov    eax,0x8d3dcb09
640083b5:	mul    ecx
640083b7:	mov    esi,edx
640083b9:	shr    esi,0x8
640083bc:	lea    eax,[esi+0x1]
640083bf:	cmp    eax,edi
640083c1:	mov    DWORD PTR [esp+0x80],edi
640083c8:	mov    BYTE PTR [esp+0x13],0x1
640083cd:	je     0x64008493
640083d3:	mov    edx,0x1d0
640083d8:	sub    edx,ebx
640083da:	mov    DWORD PTR [esp+0x14],ebx
640083de:	mov    DWORD PTR [esp+0x24],edx
640083e2:	mov    eax,DWORD PTR [esp+0x14]
640083e6:	add    eax,edx
640083e8:	cmp    eax,ecx
640083ea:	jb     0x640084e6
640083f0:	mov    eax,esi
640083f2:	imul   eax,eax,0x1d0
640083f8:	mov    ebx,ecx
640083fa:	sub    ebx,eax
640083fc:	test   ebx,ebx
640083fe:	je     0x6400847b
64008400:	or     ecx,0xffffffff
64008403:	cmp    DWORD PTR [ebp+0x18],ecx
64008406:	je     0x6400841f
64008408:	call   DWORD PTR ds:0x64022058
6400840e:	sub    eax,DWORD PTR [esp+0x20]
64008412:	mov    ecx,DWORD PTR [ebp+0x18]
64008415:	cmp    eax,ecx
64008417:	ja     0x640084f0
6400841d:	sub    ecx,eax
6400841f:	mov    edx,DWORD PTR [esp+0x44]
64008423:	sub    esp,0x10
64008426:	mov    eax,esp
64008428:	mov    DWORD PTR [eax],edx
6400842a:	mov    edx,DWORD PTR [esp+0x58]
6400842e:	mov    DWORD PTR [eax+0x4],edx
64008431:	mov    edx,DWORD PTR [esp+0x5c]
64008435:	mov    DWORD PTR [eax+0x8],edx
64008438:	mov    edx,DWORD PTR [esp+0x60]
6400843c:	mov    DWORD PTR [eax+0xc],edx
6400843f:	mov    edx,DWORD PTR [esp+0x24]
64008443:	test   edi,edi
64008445:	setne  al
64008448:	cmp    edi,esi
6400844a:	push   eax
6400844b:	mov    eax,DWORD PTR [ebp+0x8]
6400844e:	push   ecx
6400844f:	setb   cl
64008452:	push   ecx
64008453:	mov    ecx,DWORD PTR [esp+0x38]
64008457:	push   edi
64008458:	push   ebx
64008459:	push   edx
6400845a:	push   eax
6400845b:	push   ecx
6400845c:	lea    edx,[esp+0x43]
64008460:	lea    ecx,[esp+0x84]
64008467:	call   0x64008680
6400846c:	test   al,al
6400846e:	je     0x6400850b
64008474:	mov    ecx,DWORD PTR [ebp+0x10]
64008477:	mov    edx,DWORD PTR [esp+0x24]
6400847b:	add    DWORD PTR [esp+0x14],0x1d0
64008483:	add    edi,0x1
64008486:	lea    eax,[esi+0x1]
64008489:	cmp    edi,eax
6400848b:	jne    0x640083e2
64008491:	xor    edi,edi
64008493:	mov    esi,DWORD PTR [esp+0x18]
64008497:	push   edi
64008498:	lea    ecx,[esp+0x58]
6400849c:	push   ecx
6400849d:	or     eax,0xffffffff
640084a0:	call   0x640019d0
640084a5:	cmp    BYTE PTR [esp+0x13],0x0
640084aa:	je     0x6400863b
640084b0:	mov    DWORD PTR [esp+0x14],0xfffffffe
640084b8:	jmp    0x640084c0
640084ba:	lea    ebx,[ebx+0x0]
640084c0:	mov    esi,0xf
640084c5:	mov    DWORD PTR [esp+0x40],esi
640084c9:	mov    DWORD PTR [esp+0x3c],edi
640084cd:	mov    BYTE PTR [esp+0x2c],0x0
640084d2:	mov    ebx,DWORD PTR [ebp+0x18]
640084d5:	cmp    ebx,0xffffffff
640084d8:	mov    BYTE PTR [esp+0x80],0x1
640084e0:	jne    0x64008526
640084e2:	or     ecx,ebx
640084e4:	jmp    0x6400853c
640084e6:	mov    ebx,0x1d0
640084eb:	jmp    0x64008400
640084f0:	cmp    DWORD PTR [esp+0x6c],0x10
640084f5:	jb     0x64008504
640084f7:	mov    edx,DWORD PTR [esp+0x58]
640084fb:	push   edx
640084fc:	call   0x64010422
64008501:	add    esp,0x4
64008504:	xor    al,al
64008506:	jmp    0x64008651
6400850b:	cmp    DWORD PTR [esp+0x6c],0x10
64008510:	jb     0x64008504
64008512:	mov    eax,DWORD PTR [esp+0x58]
64008516:	push   eax
64008517:	call   0x64010422
6400851c:	add    esp,0x4
6400851f:	xor    al,al
64008521:	jmp    0x64008651
64008526:	call   DWORD PTR ds:0x64022058
6400852c:	sub    eax,DWORD PTR [esp+0x20]
64008530:	cmp    eax,ebx
64008532:	ja     0x640085cb
64008538:	mov    ecx,ebx
6400853a:	sub    ecx,eax
6400853c:	mov    edx,DWORD PTR [esp+0x44]
64008540:	sub    esp,0x10
64008543:	mov    eax,esp
64008545:	mov    DWORD PTR [eax],edx
64008547:	mov    edx,DWORD PTR [esp+0x58]
6400854b:	mov    DWORD PTR [eax+0x4],edx
6400854e:	mov    edx,DWORD PTR [esp+0x5c]
64008552:	push   0x1
64008554:	push   ecx
64008555:	mov    ecx,DWORD PTR [ebp+0x8]
64008558:	mov    DWORD PTR [eax+0x8],edx
6400855b:	mov    edx,DWORD PTR [esp+0x68]
6400855f:	push   edi
64008560:	mov    DWORD PTR [eax+0xc],edx
64008563:	mov    eax,DWORD PTR [esp+0x30]
64008567:	mov    edx,DWORD PTR [esp+0x38]
6400856b:	push   eax
6400856c:	push   edi
6400856d:	push   edi
6400856e:	push   ecx
6400856f:	push   edx
64008570:	lea    edx,[esp+0x43]
64008574:	lea    ecx,[esp+0x58]
64008578:	call   0x64008680
6400857d:	test   al,al
6400857f:	je     0x640085f9
64008581:	cmp    DWORD PTR [esp+0x3c],edi
64008585:	je     0x64008627
6400858b:	mov    esi,DWORD PTR [esp+0x18]
6400858f:	push   edi
64008590:	lea    eax,[esp+0x2c]
64008594:	push   eax
64008595:	or     eax,0xffffffff
64008598:	call   0x640019d0
6400859d:	mov    BYTE PTR [esp+0x80],0x0
640085a5:	cmp    DWORD PTR [esp+0x40],0x10
640085aa:	jb     0x640085b9
640085ac:	mov    ecx,DWORD PTR [esp+0x2c]
640085b0:	push   ecx
640085b1:	call   0x64010422
640085b6:	add    esp,0x4
640085b9:	sub    DWORD PTR [esp+0x14],0x1
640085be:	cmp    BYTE PTR [esp+0x13],0x0
640085c3:	jne    0x640084c0
640085c9:	jmp    0x6400863b
640085cb:	mov    ebx,0x10
640085d0:	cmp    DWORD PTR [esp+0x40],ebx
640085d4:	jb     0x640085e3
640085d6:	mov    edx,DWORD PTR [esp+0x2c]
640085da:	push   edx
640085db:	call   0x64010422
640085e0:	add    esp,0x4
640085e3:	cmp    DWORD PTR [esp+0x6c],ebx
640085e7:	mov    DWORD PTR [esp+0x40],esi
640085eb:	mov    DWORD PTR [esp+0x3c],edi
640085ef:	mov    BYTE PTR [esp+0x2c],0x0
640085f4:	jmp    0x64008510
640085f9:	mov    ebx,0x10
640085fe:	cmp    DWORD PTR [esp+0x40],ebx
64008602:	jb     0x64008611
64008604:	mov    ecx,DWORD PTR [esp+0x2c]
64008608:	push   ecx
64008609:	call   0x64010422
6400860e:	add    esp,0x4
64008611:	cmp    DWORD PTR [esp+0x6c],ebx
64008615:	mov    DWORD PTR [esp+0x40],esi
64008619:	mov    DWORD PTR [esp+0x3c],edi
6400861d:	mov    BYTE PTR [esp+0x2c],0x0
64008622:	jmp    0x640084f5
64008627:	cmp    DWORD PTR [esp+0x40],0x10
6400862c:	jb     0x6400863b
6400862e:	mov    eax,DWORD PTR [esp+0x2c]
64008632:	push   eax
64008633:	call   0x64010422
64008638:	add    esp,0x4
6400863b:	cmp    DWORD PTR [esp+0x6c],0x10
64008640:	jb     0x6400864f
64008642:	mov    ecx,DWORD PTR [esp+0x58]
64008646:	push   ecx
64008647:	call   0x64010422
6400864c:	add    esp,0x4
6400864f:	mov    al,0x1
64008651:	mov    ecx,DWORD PTR [esp+0x78]
64008655:	mov    DWORD PTR fs:0x0,ecx
6400865c:	pop    ecx
6400865d:	pop    edi
6400865e:	pop    esi
6400865f:	pop    ebx
64008660:	mov    ecx,DWORD PTR [esp+0x60]
64008664:	xor    ecx,esp
64008666:	call   0x64010c1e
6400866b:	mov    esp,ebp
6400866d:	pop    ebp
6400866e:	ret    0x14
64008671:	int3   
64008672:	int3   
64008673:	int3   
64008674:	int3   
64008675:	int3   
64008676:	int3   
64008677:	int3   
64008678:	int3   
64008679:	int3   
6400867a:	int3   
6400867b:	int3   
6400867c:	int3   
6400867d:	int3   
6400867e:	int3   
6400867f:	int3   
64008680:	push   0xffffffff
64008682:	push   0x6402175c
64008687:	mov    eax,fs:0x0
6400868d:	push   eax
6400868e:	mov    eax,0x10074
64008693:	call   0x64016520
64008698:	mov    eax,ds:0x64029038
6400869d:	xor    eax,esp
6400869f:	mov    DWORD PTR [esp+0x10070],eax
640086a6:	push   ebx
640086a7:	push   ebp
640086a8:	push   esi
640086a9:	push   edi
640086aa:	mov    eax,ds:0x64029038
640086af:	xor    eax,esp
640086b1:	push   eax
640086b2:	lea    eax,[esp+0x10088]
640086b9:	mov    fs:0x0,eax
640086bf:	mov    eax,DWORD PTR [esp+0x10098]
640086c6:	mov    esi,DWORD PTR [esp+0x100a0]
640086cd:	mov    ebp,DWORD PTR ds:0x640221c0
640086d3:	mov    DWORD PTR [esp+0x18],eax
640086d7:	mov    eax,DWORD PTR [esp+0x100b8]
640086de:	mov    DWORD PTR [esp+0x2c],ecx
640086e2:	mov    ecx,DWORD PTR [esp+0x100bc]
640086e9:	mov    DWORD PTR [esp+0x24],edx
640086ed:	mov    edx,DWORD PTR [esp+0x100c0]
640086f4:	mov    DWORD PTR [esp+0x54],eax
640086f8:	mov    eax,DWORD PTR [esp+0x100c4]
640086ff:	xor    ebx,ebx
64008701:	mov    DWORD PTR [esp+0x1c],esi
64008705:	mov    DWORD PTR [esp+0x58],ecx
64008709:	mov    DWORD PTR [esp+0x5c],edx
6400870d:	mov    DWORD PTR [esp+0x60],eax
64008711:	mov    BYTE PTR [esp+0x17],bl
64008715:	xor    edi,edi
64008717:	jmp    0x64008720
64008719:	lea    esp,[esp+0x0]
64008720:	mov    DWORD PTR [esp+0x50],0xf
64008728:	mov    DWORD PTR [esp+0x4c],ebx
6400872c:	mov    BYTE PTR [esp+0x3c],bl
64008730:	mov    DWORD PTR [esp+0x10090],ebx
64008737:	mov    edx,DWORD PTR [esp+0x58]
6400873b:	mov    eax,DWORD PTR [esp+0x5c]
6400873f:	mov    ecx,DWORD PTR [esp+0x54]
64008743:	mov    DWORD PTR [esp+0x70],eax
64008747:	mov    eax,DWORD PTR [esp+0x100a8]
6400874e:	mov    DWORD PTR [esp+0x68],ecx
64008752:	mov    ecx,DWORD PTR [esp+0x60]
64008756:	mov    DWORD PTR [esp+0x6c],edx
6400875a:	mov    dl,BYTE PTR [esp+0x100ac]
64008761:	push   eax
64008762:	mov    DWORD PTR [esp+0x78],ecx
64008766:	mov    DWORD PTR [esp+0x7c],eax
6400876a:	mov    DWORD PTR [esp+0x80],edi
64008771:	mov    BYTE PTR [esp+0x84],dl
64008778:	call   ebp
6400877a:	mov    DWORD PTR [esp+0x78],eax
6400877e:	mov    eax,DWORD PTR [esp+0x7c]
64008782:	push   eax
64008783:	call   ebp
64008785:	push   0x19
64008787:	lea    ecx,[esp+0x6c]
6400878b:	mov    DWORD PTR [esp+0x80],eax
64008792:	push   ecx
64008793:	lea    eax,[esp+0x40]
64008797:	call   0x640081b0
6400879c:	cmp    esi,ebx
6400879e:	je     0x640087b2
640087a0:	mov    edx,DWORD PTR [esp+0x100a4]
640087a7:	push   edx
640087a8:	push   esi
640087a9:	lea    eax,[esp+0x40]
640087ad:	call   0x640081b0
640087b2:	cmp    DWORD PTR [esp+0x50],0x10
640087b7:	mov    eax,DWORD PTR [esp+0x3c]
640087bb:	jae    0x640087c1
640087bd:	lea    eax,[esp+0x3c]
640087c1:	mov    ecx,DWORD PTR [esp+0x4c]
640087c5:	push   ecx
640087c6:	push   eax
640087c7:	lea    ecx,[esp+0x3c]
640087cb:	lea    ebx,[esp+0x30]
640087cf:	call   0x6400b900
640087d4:	mov    edx,DWORD PTR [eax]
640087d6:	mov    esi,edx
640087d8:	mov    DWORD PTR [eax],0x0
640087de:	mov    DWORD PTR [esp+0x28],esi
640087e2:	mov    BYTE PTR [esp+0x10098],0x1
640087ea:	mov    eax,DWORD PTR [esp+0x30]
640087ee:	push   eax
640087ef:	call   0x64010422
640087f4:	add    esp,0xc
640087f7:	lea    ecx,[esp+0x30]
640087fb:	push   0x0
640087fd:	push   ecx
640087fe:	mov    DWORD PTR [esp+0x38],0x0
64008806:	call   0x6400cd90
6400880b:	call   eax
6400880d:	test   eax,eax
6400880f:	je     0x6400889e
64008815:	mov    eax,DWORD PTR [esp+0x100b0]
6400881c:	cmp    eax,0x1388
64008821:	jb     0x64008828
64008823:	mov    eax,0x1388
64008828:	mov    ecx,DWORD PTR [esp+0x1009c]
6400882f:	push   eax
64008830:	mov    eax,DWORD PTR [esp+0x38]
64008834:	push   0xffff
64008839:	lea    edx,[esp+0x8c]
64008840:	push   edx
64008841:	mov    edx,DWORD PTR [esp+0x24]
64008845:	push   0x0
64008847:	push   eax
64008848:	mov    eax,DWORD PTR [edx]
6400884a:	push   esi
6400884b:	push   ecx
6400884c:	push   eax
6400884d:	call   0x6400bb30
64008852:	call   eax
64008854:	mov    ebx,eax
64008856:	test   ebx,ebx
64008858:	jne    0x640088a1
6400885a:	push   esi
6400885b:	call   0x64010422
64008860:	add    esp,0x4
64008863:	cmp    BYTE PTR [esp+0x100b4],bl
6400886a:	mov    DWORD PTR [esp+0x10090],0xffffffff
64008875:	je     0x640088c3
64008877:	cmp    DWORD PTR [esp+0x50],0x10
6400887c:	jb     0x6400888b
6400887e:	mov    ecx,DWORD PTR [esp+0x3c]
64008882:	push   ecx
64008883:	call   0x64010422
64008888:	add    esp,0x4
6400888b:	add    edi,0x1
6400888e:	cmp    edi,0x5
64008891:	je     0x640088d7
64008893:	mov    esi,DWORD PTR [esp+0x1c]
64008897:	xor    ebx,ebx
64008899:	jmp    0x64008720
6400889e:	or     ebx,0xffffffff
640088a1:	push   esi
640088a2:	call   0x64010422
640088a7:	add    esp,0x4
640088aa:	mov    DWORD PTR [esp+0x10090],0xffffffff
640088b5:	cmp    DWORD PTR [esp+0x50],0x10
640088ba:	jb     0x640088d7
640088bc:	mov    edx,DWORD PTR [esp+0x3c]
640088c0:	push   edx
640088c1:	jmp    0x640088cf
640088c3:	cmp    DWORD PTR [esp+0x50],0x10
640088c8:	jb     0x640088d7
640088ca:	mov    eax,DWORD PTR [esp+0x3c]
640088ce:	push   eax
640088cf:	call   0x64010422
640088d4:	add    esp,0x4
640088d7:	test   ebx,ebx
640088d9:	je     0x64008a3e
640088df:	mov    ax,WORD PTR [esp+0x90]
640088e7:	test   ax,ax
640088ea:	je     0x64008a3e
640088f0:	lea    ecx,[esp+0x18]
640088f4:	push   ecx
640088f5:	lea    edx,[esp+0xa4]
640088fc:	movzx  ebx,ax
640088ff:	push   edx
64008900:	lea    edi,[esp+0x24]
64008904:	call   0x6400ba30
64008909:	mov    ecx,DWORD PTR [eax]
6400890b:	mov    ebx,ecx
6400890d:	mov    DWORD PTR [eax],0x0
64008913:	mov    DWORD PTR [esp+0x28],ebx
64008917:	mov    DWORD PTR [esp+0x10098],0x2
64008922:	mov    edx,DWORD PTR [esp+0x24]
64008926:	push   edx
64008927:	call   0x64010422
6400892c:	add    esp,0xc
6400892f:	test   ebx,ebx
64008931:	je     0x64008a35
64008937:	mov    eax,DWORD PTR [ebx+0x10]
6400893a:	push   eax
6400893b:	call   DWORD PTR ds:0x640221c4
64008941:	mov    DWORD PTR [ebx+0x10],eax
64008944:	mov    ecx,0x10
64008949:	lea    edx,[esp+0x54]
6400894d:	mov    esi,ebx
6400894f:	nop
64008950:	mov    edi,DWORD PTR [esi]
64008952:	cmp    edi,DWORD PTR [edx]
64008954:	jne    0x64008968
64008956:	sub    ecx,0x4
64008959:	add    edx,0x4
6400895c:	add    esi,0x4
6400895f:	cmp    ecx,0x4
64008962:	jae    0x64008950
64008964:	test   ecx,ecx
64008966:	je     0x640089c5
64008968:	movzx  edi,BYTE PTR [esi]
6400896b:	movzx  ebp,BYTE PTR [edx]
6400896e:	sub    edi,ebp
64008970:	jne    0x640089b7
64008972:	sub    ecx,0x1
64008975:	add    edx,0x1
64008978:	add    esi,0x1
6400897b:	test   ecx,ecx
6400897d:	je     0x640089c5
6400897f:	movzx  edi,BYTE PTR [esi]
64008982:	movzx  ebp,BYTE PTR [edx]
64008985:	sub    edi,ebp
64008987:	jne    0x640089b7
64008989:	sub    ecx,0x1
6400898c:	add    edx,0x1
6400898f:	add    esi,0x1
64008992:	test   ecx,ecx
64008994:	je     0x640089c5
64008996:	movzx  edi,BYTE PTR [esi]
64008999:	movzx  ebp,BYTE PTR [edx]
6400899c:	sub    edi,ebp
6400899e:	jne    0x640089b7
640089a0:	sub    ecx,0x1
640089a3:	add    edx,0x1
640089a6:	add    esi,0x1
640089a9:	test   ecx,ecx
640089ab:	je     0x640089c5
640089ad:	movzx  edi,BYTE PTR [esi]
640089b0:	movzx  ecx,BYTE PTR [edx]
640089b3:	sub    edi,ecx
640089b5:	je     0x640089c5
640089b7:	test   edi,edi
640089b9:	mov    ecx,0x1
640089be:	jg     0x640089c7
640089c0:	or     ecx,0xffffffff
640089c3:	jmp    0x640089c7
640089c5:	xor    ecx,ecx
640089c7:	test   ecx,ecx
640089c9:	jne    0x64008a35
640089cb:	cmp    eax,DWORD PTR [esp+0x100a8]
640089d2:	jne    0x64008a35
640089d4:	mov    dl,BYTE PTR [ebx+0x14]
640089d7:	mov    eax,DWORD PTR [esp+0x24]
640089db:	mov    BYTE PTR [eax],dl
640089dd:	mov    eax,DWORD PTR [esp+0x18]
640089e1:	add    eax,0xffffffeb
640089e4:	mov    DWORD PTR [esp+0x4c],ecx
640089e8:	mov    BYTE PTR [esp+0x3c],cl
640089ec:	push   eax
640089ed:	lea    ecx,[ebx+0x15]
640089f0:	push   ecx
640089f1:	lea    ecx,[esp+0x40]
640089f5:	mov    DWORD PTR [esp+0x58],0xf
640089fd:	call   0x64001880
64008a02:	mov    ecx,DWORD PTR [esp+0x2c]
64008a06:	push   0xffffffff
64008a08:	push   0x0
64008a0a:	lea    edx,[esp+0x40]
64008a0e:	push   edx
64008a0f:	mov    BYTE PTR [esp+0x1009c],0x3
64008a17:	call   0x640017a0
64008a1c:	cmp    DWORD PTR [esp+0x50],0x10
64008a21:	jb     0x64008a30
64008a23:	mov    eax,DWORD PTR [esp+0x3c]
64008a27:	push   eax
64008a28:	call   0x64010422
64008a2d:	add    esp,0x4
64008a30:	mov    BYTE PTR [esp+0x17],0x1
64008a35:	push   ebx
64008a36:	call   0x64010422
64008a3b:	add    esp,0x4
64008a3e:	mov    al,BYTE PTR [esp+0x17]
64008a42:	mov    ecx,DWORD PTR [esp+0x10088]
64008a49:	mov    DWORD PTR fs:0x0,ecx
64008a50:	pop    ecx
64008a51:	pop    edi
64008a52:	pop    esi
64008a53:	pop    ebp
64008a54:	pop    ebx
64008a55:	mov    ecx,DWORD PTR [esp+0x10070]
64008a5c:	xor    ecx,esp
64008a5e:	call   0x64010c1e
64008a63:	add    esp,0x10080
64008a69:	ret    0x30
64008a6c:	int3   
64008a6d:	int3   
64008a6e:	int3   
64008a6f:	int3   
64008a70:	push   0xffffffff
64008a72:	push   0x640205eb
64008a77:	mov    eax,fs:0x0
64008a7d:	push   eax
64008a7e:	push   ecx
64008a7f:	push   esi
64008a80:	mov    eax,ds:0x64029038
64008a85:	xor    eax,esp
64008a87:	push   eax
64008a88:	lea    eax,[esp+0xc]
64008a8c:	mov    fs:0x0,eax
64008a92:	push   0xc
64008a94:	call   0x640107a3
64008a99:	mov    esi,eax
64008a9b:	add    esp,0x4
64008a9e:	mov    DWORD PTR [esp+0x8],esi
64008aa2:	test   esi,esi
64008aa4:	mov    DWORD PTR [esp+0x14],0x0
64008aac:	je     0x64008aca
64008aae:	mov    eax,DWORD PTR [esp+0x1c]
64008ab2:	push   eax
64008ab3:	mov    DWORD PTR [esi+0x4],0x0
64008aba:	mov    DWORD PTR [esi+0x8],0x1
64008ac1:	call   0x6401cbf0
64008ac6:	mov    DWORD PTR [esi],eax
64008ac8:	jmp    0x64008acc
64008aca:	xor    esi,esi
64008acc:	test   esi,esi
64008ace:	mov    DWORD PTR [esp+0x14],0xffffffff
64008ad6:	mov    DWORD PTR [ebx],esi
64008ad8:	jne    0x64008ae4
64008ada:	push   0x8007000e
64008adf:	call   0x6401cbe0
64008ae4:	mov    eax,ebx
64008ae6:	mov    ecx,DWORD PTR [esp+0xc]
64008aea:	mov    DWORD PTR fs:0x0,ecx
64008af1:	pop    ecx
64008af2:	pop    esi
64008af3:	add    esp,0x10
64008af6:	ret    0x4
64008af9:	int3   
64008afa:	int3   
64008afb:	int3   
64008afc:	int3   
64008afd:	int3   
64008afe:	int3   
64008aff:	int3   
64008b00:	push   0xffffffff
64008b02:	push   0x640205bb
64008b07:	mov    eax,fs:0x0
64008b0d:	push   eax
64008b0e:	push   ebp
64008b0f:	push   esi
64008b10:	mov    eax,ds:0x64029038
64008b15:	xor    eax,esp
64008b17:	push   eax
64008b18:	lea    eax,[esp+0xc]
64008b1c:	mov    fs:0x0,eax
64008b22:	mov    ebp,DWORD PTR [esp+0x1c]
64008b26:	push   0xc
64008b28:	call   0x640107a3
64008b2d:	mov    esi,eax
64008b2f:	add    esp,0x4
64008b32:	mov    DWORD PTR [esp+0x1c],esi
64008b36:	test   esi,esi
64008b38:	mov    DWORD PTR [esp+0x14],0x0
64008b40:	je     0x64008b6d
64008b42:	push   edi
64008b43:	mov    DWORD PTR [esi+0x4],0x0
64008b4a:	mov    DWORD PTR [esi+0x8],0x1
64008b51:	call   DWORD PTR ds:0x64022198
64008b57:	test   eax,eax
64008b59:	mov    DWORD PTR [esi],eax
64008b5b:	jne    0x64008b6f
64008b5d:	test   edi,edi
64008b5f:	je     0x64008b6f
64008b61:	push   0x8007000e
64008b66:	call   0x6401cbe0
64008b6b:	jmp    0x64008b6f
64008b6d:	xor    esi,esi
64008b6f:	test   esi,esi
64008b71:	mov    DWORD PTR [esp+0x14],0xffffffff
64008b79:	mov    DWORD PTR [ebp+0x0],esi
64008b7c:	jne    0x64008b88
64008b7e:	push   0x8007000e
64008b83:	call   0x6401cbe0
64008b88:	mov    eax,ebp
64008b8a:	mov    ecx,DWORD PTR [esp+0xc]
64008b8e:	mov    DWORD PTR fs:0x0,ecx
64008b95:	pop    ecx
64008b96:	pop    esi
64008b97:	pop    ebp
64008b98:	add    esp,0xc
64008b9b:	ret    0x4
64008b9e:	int3   
64008b9f:	int3   
64008ba0:	push   esi
64008ba1:	mov    esi,DWORD PTR [edi]
64008ba3:	test   esi,esi
64008ba5:	je     0x64008be5
64008ba7:	lea    eax,[esi+0x8]
64008baa:	push   eax
64008bab:	call   DWORD PTR ds:0x64022094
64008bb1:	test   eax,eax
64008bb3:	jne    0x64008bdf
64008bb5:	test   esi,esi
64008bb7:	je     0x64008bdf
64008bb9:	mov    eax,DWORD PTR [esi]
64008bbb:	test   eax,eax
64008bbd:	je     0x64008bc6
64008bbf:	push   eax
64008bc0:	call   DWORD PTR ds:0x640221a4
64008bc6:	mov    eax,DWORD PTR [esi+0x4]
64008bc9:	test   eax,eax
64008bcb:	je     0x64008bd6
64008bcd:	push   eax
64008bce:	call   0x64011316
64008bd3:	add    esp,0x4
64008bd6:	push   esi
64008bd7:	call   0x64010422
64008bdc:	add    esp,0x4
64008bdf:	mov    DWORD PTR [edi],0x0
64008be5:	pop    esi
64008be6:	ret    
64008be7:	int3   
64008be8:	int3   
64008be9:	int3   
64008bea:	int3   
64008beb:	int3   
64008bec:	int3   
64008bed:	int3   
64008bee:	int3   
64008bef:	int3   
64008bf0:	push   0xffffffff
64008bf2:	push   0x6402058b
64008bf7:	mov    eax,fs:0x0
64008bfd:	push   eax
64008bfe:	push   ebp
64008bff:	push   esi
64008c00:	mov    eax,ds:0x64029038
64008c05:	xor    eax,esp
64008c07:	push   eax
64008c08:	lea    eax,[esp+0xc]
64008c0c:	mov    fs:0x0,eax
64008c12:	mov    ebp,DWORD PTR [esp+0x1c]
64008c16:	test   ebp,ebp
64008c18:	je     0x64008c2e
64008c1a:	mov    eax,DWORD PTR [ebx]
64008c1c:	test   eax,eax
64008c1e:	je     0x64008c24
64008c20:	mov    eax,DWORD PTR [eax]
64008c22:	jmp    0x64008c26
64008c24:	xor    eax,eax
64008c26:	cmp    eax,ebp
64008c28:	je     0x64008cd3
64008c2e:	mov    esi,DWORD PTR [ebx]
64008c30:	test   esi,esi
64008c32:	je     0x64008c72
64008c34:	lea    eax,[esi+0x8]
64008c37:	push   eax
64008c38:	call   DWORD PTR ds:0x64022094
64008c3e:	test   eax,eax
64008c40:	jne    0x64008c6c
64008c42:	test   esi,esi
64008c44:	je     0x64008c6c
64008c46:	mov    eax,DWORD PTR [esi]
64008c48:	test   eax,eax
64008c4a:	je     0x64008c53
64008c4c:	push   eax
64008c4d:	call   DWORD PTR ds:0x640221a4
64008c53:	mov    eax,DWORD PTR [esi+0x4]
64008c56:	test   eax,eax
64008c58:	je     0x64008c63
64008c5a:	push   eax
64008c5b:	call   0x64011316
64008c60:	add    esp,0x4
64008c63:	push   esi
64008c64:	call   0x64010422
64008c69:	add    esp,0x4
64008c6c:	mov    DWORD PTR [ebx],0x0
64008c72:	push   0xc
64008c74:	call   0x640107a3
64008c79:	mov    esi,eax
64008c7b:	add    esp,0x4
64008c7e:	mov    DWORD PTR [esp+0x1c],esi
64008c82:	test   esi,esi
64008c84:	mov    DWORD PTR [esp+0x14],0x0
64008c8c:	je     0x64008cb9
64008c8e:	push   ebp
64008c8f:	mov    DWORD PTR [esi+0x4],0x0
64008c96:	mov    DWORD PTR [esi+0x8],0x1
64008c9d:	call   DWORD PTR ds:0x64022198
64008ca3:	test   eax,eax
64008ca5:	mov    DWORD PTR [esi],eax
64008ca7:	jne    0x64008cbb
64008ca9:	test   ebp,ebp
64008cab:	je     0x64008cbb
64008cad:	push   0x8007000e
64008cb2:	call   0x6401cbe0
64008cb7:	jmp    0x64008cbb
64008cb9:	xor    esi,esi
64008cbb:	test   esi,esi
64008cbd:	mov    DWORD PTR [esp+0x14],0xffffffff
64008cc5:	mov    DWORD PTR [ebx],esi
64008cc7:	jne    0x64008cd3
64008cc9:	push   0x8007000e
64008cce:	call   0x6401cbe0
64008cd3:	mov    eax,ebx
64008cd5:	mov    ecx,DWORD PTR [esp+0xc]
64008cd9:	mov    DWORD PTR fs:0x0,ecx
64008ce0:	pop    ecx
64008ce1:	pop    esi
64008ce2:	pop    ebp
64008ce3:	add    esp,0xc
64008ce6:	ret    0x4
64008ce9:	int3   
64008cea:	int3   
64008ceb:	int3   
64008cec:	int3   
64008ced:	int3   
64008cee:	int3   
64008cef:	int3   
64008cf0:	push   0xffffffff
64008cf2:	push   0x6402061b
64008cf7:	mov    eax,fs:0x0
64008cfd:	push   eax
64008cfe:	push   ecx
64008cff:	push   esi
64008d00:	push   edi
64008d01:	mov    eax,ds:0x64029038
64008d06:	xor    eax,esp
64008d08:	push   eax
64008d09:	lea    eax,[esp+0x10]
64008d0d:	mov    fs:0x0,eax
64008d13:	push   0xc
64008d15:	call   0x640107a3
64008d1a:	add    esp,0x4
64008d1d:	mov    DWORD PTR [esp+0xc],eax
64008d21:	test   eax,eax
64008d23:	mov    DWORD PTR [esp+0x18],0x0
64008d2b:	je     0x64008d3e
64008d2d:	mov    ecx,DWORD PTR [esp+0x20]
64008d31:	push   ecx
64008d32:	push   ebx
64008d33:	mov    edi,eax
64008d35:	call   0x64008e50
64008d3a:	mov    edi,eax
64008d3c:	jmp    0x64008d40
64008d3e:	xor    edi,edi
64008d40:	test   edi,edi
64008d42:	mov    DWORD PTR [esp+0x18],0xffffffff
64008d4a:	jne    0x64008d58
64008d4c:	push   0x8007000e
64008d51:	call   0x6401cbe0
64008d56:	jmp    0x64008d9e
64008d58:	mov    esi,DWORD PTR [ebx]
64008d5a:	test   esi,esi
64008d5c:	je     0x64008d9c
64008d5e:	lea    edx,[esi+0x8]
64008d61:	push   edx
64008d62:	call   DWORD PTR ds:0x64022094
64008d68:	test   eax,eax
64008d6a:	jne    0x64008d96
64008d6c:	test   esi,esi
64008d6e:	je     0x64008d96
64008d70:	mov    eax,DWORD PTR [esi]
64008d72:	test   eax,eax
64008d74:	je     0x64008d7d
64008d76:	push   eax
64008d77:	call   DWORD PTR ds:0x640221a4
64008d7d:	mov    eax,DWORD PTR [esi+0x4]
64008d80:	test   eax,eax
64008d82:	je     0x64008d8d
64008d84:	push   eax
64008d85:	call   0x64011316
64008d8a:	add    esp,0x4
64008d8d:	push   esi
64008d8e:	call   0x64010422
64008d93:	add    esp,0x4
64008d96:	mov    DWORD PTR [ebx],0x0
64008d9c:	mov    DWORD PTR [ebx],edi
64008d9e:	mov    eax,ebx
64008da0:	mov    ecx,DWORD PTR [esp+0x10]
64008da4:	mov    DWORD PTR fs:0x0,ecx
64008dab:	pop    ecx
64008dac:	pop    edi
64008dad:	pop    esi
64008dae:	add    esp,0x10
64008db1:	ret    0x4
64008db4:	int3   
64008db5:	int3   
64008db6:	int3   
64008db7:	int3   
64008db8:	int3   
64008db9:	int3   
64008dba:	int3   
64008dbb:	int3   
64008dbc:	int3   
64008dbd:	int3   
64008dbe:	int3   
64008dbf:	int3   
64008dc0:	push   0xffffffff
64008dc2:	push   0x640206c9
64008dc7:	mov    eax,fs:0x0
64008dcd:	push   eax
64008dce:	push   ecx
64008dcf:	push   ebx
64008dd0:	mov    eax,ds:0x64029038
64008dd5:	xor    eax,esp
64008dd7:	push   eax
64008dd8:	lea    eax,[esp+0xc]
64008ddc:	mov    fs:0x0,eax
64008de2:	mov    ebx,DWORD PTR [esp+0x20]
64008de6:	mov    eax,DWORD PTR [esp+0x1c]
64008dea:	mov    DWORD PTR [esp+0x8],0x0
64008df2:	mov    eax,DWORD PTR [eax]
64008df4:	test   eax,eax
64008df6:	mov    DWORD PTR [ebx],eax
64008df8:	je     0x64008e04
64008dfa:	add    eax,0x8
64008dfd:	push   eax
64008dfe:	call   DWORD PTR ds:0x64022020
64008e04:	mov    ecx,DWORD PTR [esp+0x24]
64008e08:	mov    DWORD PTR [esp+0x14],0x0
64008e10:	push   ecx
64008e11:	mov    DWORD PTR [esp+0xc],0x1
64008e19:	call   0x64008cf0
64008e1e:	mov    eax,ebx
64008e20:	mov    ecx,DWORD PTR [esp+0xc]
64008e24:	mov    DWORD PTR fs:0x0,ecx
64008e2b:	pop    ecx
64008e2c:	pop    ebx
64008e2d:	add    esp,0x10
64008e30:	ret    0xc
64008e33:	int3   
64008e34:	int3   
64008e35:	int3   
64008e36:	int3   
64008e37:	int3   
64008e38:	int3   
64008e39:	int3   
64008e3a:	int3   
64008e3b:	int3   
64008e3c:	int3   
64008e3d:	int3   
64008e3e:	int3   
64008e3f:	int3   
64008e40:	mov    eax,DWORD PTR [eax]
64008e42:	test   eax,eax
64008e44:	je     0x64008e49
64008e46:	mov    eax,DWORD PTR [eax]
64008e48:	ret    
64008e49:	xor    eax,eax
64008e4b:	ret    
64008e4c:	int3   
64008e4d:	int3   
64008e4e:	int3   
64008e4f:	int3   
64008e50:	mov    eax,DWORD PTR [esp+0x4]
64008e54:	push   ebx
64008e55:	xor    ebx,ebx
64008e57:	mov    DWORD PTR [edi+0x4],ebx
64008e5a:	mov    DWORD PTR [edi+0x8],0x1
64008e61:	mov    eax,DWORD PTR [eax]
64008e63:	cmp    eax,ebx
64008e65:	push   ebp
64008e66:	push   esi
64008e67:	mov    esi,DWORD PTR ds:0x64022194
64008e6d:	je     0x64008e7c
64008e6f:	mov    eax,DWORD PTR [eax]
64008e71:	cmp    eax,ebx
64008e73:	je     0x64008e7c
64008e75:	push   eax
64008e76:	call   esi
64008e78:	mov    ebp,eax
64008e7a:	jmp    0x64008e7e
64008e7c:	xor    ebp,ebp
64008e7e:	mov    ecx,DWORD PTR [esp+0x14]
64008e82:	mov    eax,DWORD PTR [ecx]
64008e84:	cmp    eax,ebx
64008e86:	je     0x64008e93
64008e88:	mov    eax,DWORD PTR [eax]
64008e8a:	cmp    eax,ebx
64008e8c:	je     0x64008e93
64008e8e:	push   eax
64008e8f:	call   esi
64008e91:	mov    ebx,eax
64008e93:	lea    esi,[ebx+ebp*1]
64008e96:	add    esi,esi
64008e98:	push   esi
64008e99:	push   0x0
64008e9b:	call   DWORD PTR ds:0x640221a0
64008ea1:	test   eax,eax
64008ea3:	mov    DWORD PTR [edi],eax
64008ea5:	jne    0x64008eb9
64008ea7:	push   0x8007000e
64008eac:	call   0x6401cbe0
64008eb1:	pop    esi
64008eb2:	pop    ebp
64008eb3:	mov    eax,edi
64008eb5:	pop    ebx
64008eb6:	ret    0x8
64008eb9:	mov    edx,DWORD PTR [esp+0x10]
64008ebd:	mov    ecx,DWORD PTR [edx]
64008ebf:	test   ecx,ecx
64008ec1:	je     0x64008edc
64008ec3:	mov    ecx,DWORD PTR [ecx]
64008ec5:	test   ecx,ecx
64008ec7:	je     0x64008edc
64008ec9:	lea    edx,[ebp+ebp*1+0x2]
64008ecd:	push   edx
64008ece:	push   ecx
64008ecf:	add    esi,0x2
64008ed2:	push   esi
64008ed3:	push   eax
64008ed4:	call   0x6401057a
64008ed9:	add    esp,0x10
64008edc:	mov    eax,DWORD PTR [esp+0x14]
64008ee0:	mov    eax,DWORD PTR [eax]
64008ee2:	test   eax,eax
64008ee4:	je     0x64008f01
64008ee6:	mov    ecx,DWORD PTR [eax]
64008ee8:	test   ecx,ecx
64008eea:	je     0x64008f01
64008eec:	lea    eax,[ebx+ebx*1+0x2]
64008ef0:	push   eax
64008ef1:	push   ecx
64008ef2:	mov    ecx,DWORD PTR [edi]
64008ef4:	push   eax
64008ef5:	lea    edx,[ecx+ebp*2]
64008ef8:	push   edx
64008ef9:	call   0x6401057a
64008efe:	add    esp,0x10
64008f01:	pop    esi
64008f02:	pop    ebp
64008f03:	mov    eax,edi
64008f05:	pop    ebx
64008f06:	ret    0x8
64008f09:	int3   
64008f0a:	int3   
64008f0b:	int3   
64008f0c:	int3   
64008f0d:	int3   
64008f0e:	int3   
64008f0f:	int3   
64008f10:	push   ecx
64008f11:	call   DWORD PTR ds:0x64022190
64008f17:	ret    
64008f18:	int3   
64008f19:	int3   
64008f1a:	int3   
64008f1b:	int3   
64008f1c:	int3   
64008f1d:	int3   
64008f1e:	int3   
64008f1f:	int3   
64008f20:	push   0xffffffff
64008f22:	push   0x64020688
64008f27:	mov    eax,fs:0x0
64008f2d:	push   eax
64008f2e:	sub    esp,0x18
64008f31:	push   ebx
64008f32:	mov    eax,ds:0x64029038
64008f37:	xor    eax,esp
64008f39:	push   eax
64008f3a:	lea    eax,[esp+0x20]
64008f3e:	mov    fs:0x0,eax
64008f44:	mov    ebx,ecx
64008f46:	cmp    WORD PTR [esi],0x8
64008f4a:	jne    0x64008f68
64008f4c:	mov    eax,DWORD PTR [esi+0x8]
64008f4f:	push   eax
64008f50:	call   0x64008bf0
64008f55:	mov    eax,ebx
64008f57:	mov    ecx,DWORD PTR [esp+0x20]
64008f5b:	mov    DWORD PTR fs:0x0,ecx
64008f62:	pop    ecx
64008f63:	pop    ebx
64008f64:	add    esp,0x24
64008f67:	ret    
64008f68:	lea    ecx,[esp+0xc]
64008f6c:	push   ecx
64008f6d:	call   DWORD PTR ds:0x64022188
64008f73:	lea    edx,[esp+0xc]
64008f77:	cmp    edx,esi
64008f79:	mov    DWORD PTR [esp+0x28],0x0
64008f81:	jne    0x64008f8b
64008f83:	cmp    WORD PTR [esp+0xc],0x8
64008f89:	je     0x64008fa5
64008f8b:	push   0x8
64008f8d:	push   0x0
64008f8f:	push   esi
64008f90:	lea    eax,[esp+0x18]
64008f94:	push   eax
64008f95:	call   DWORD PTR ds:0x6402219c
64008f9b:	test   eax,eax
64008f9d:	jge    0x64008fa5
64008f9f:	push   eax
64008fa0:	call   0x6401cbe0
64008fa5:	mov    ecx,DWORD PTR [esp+0x14]
64008fa9:	push   ecx
64008faa:	call   0x64008bf0
64008faf:	lea    edx,[esp+0xc]
64008fb3:	push   edx
64008fb4:	call   DWORD PTR ds:0x64022190
64008fba:	mov    eax,ebx
64008fbc:	mov    ecx,DWORD PTR [esp+0x20]
64008fc0:	mov    DWORD PTR fs:0x0,ecx
64008fc7:	pop    ecx
64008fc8:	pop    ebx
64008fc9:	add    esp,0x24
64008fcc:	ret    
64008fcd:	int3   
64008fce:	int3   
64008fcf:	int3   
64008fd0:	sub    esp,0x8
64008fd3:	test   eax,eax
64008fd5:	mov    BYTE PTR [edi],0x0
64008fd8:	jle    0x6400912e
64008fde:	push   ebx
64008fdf:	push   ebp
64008fe0:	push   esi
64008fe1:	xor    esi,esi
64008fe3:	add    eax,ecx
64008fe5:	mov    BYTE PTR [esp+0xf],0x0
64008fea:	mov    BYTE PTR [edi],0x0
64008fed:	mov    DWORD PTR [esp+0x10],eax
64008ff1:	mov    ebp,eax
64008ff3:	mov    al,BYTE PTR [ebp+0x0]
64008ff6:	test   al,al
64008ff8:	je     0x640090a4
64008ffe:	movsx  edx,al
64009001:	push   edx
64009002:	call   0x64011a8f
64009007:	mov    bl,al
64009009:	movsx  eax,bl
6400900c:	push   eax
6400900d:	call   0x640118d0
64009012:	add    esp,0x8
64009015:	test   eax,eax
64009017:	je     0x6400901b
64009019:	mov    bl,0x30
6400901b:	shl    BYTE PTR [esi+edi*1],0x4
6400901f:	add    BYTE PTR [esp+0xf],0x1
64009024:	mov    cl,BYTE PTR [esi+edi*1]
64009027:	mov    al,bl
64009029:	sub    al,0x30
6400902b:	cmp    al,0x9
6400902d:	ja     0x64009036
6400902f:	or     al,cl
64009031:	mov    BYTE PTR [esi+edi*1],al
64009034:	jmp    0x64009048
64009036:	mov    dl,bl
64009038:	sub    dl,0x61
6400903b:	cmp    dl,0x5
6400903e:	ja     0x6400907a
64009040:	sub    bl,0x57
64009043:	or     bl,cl
64009045:	mov    BYTE PTR [esi+edi*1],bl
64009048:	cmp    BYTE PTR [esp+0xf],0x2
6400904d:	jne    0x64009072
6400904f:	mov    al,BYTE PTR [esi+edi*1]
64009052:	test   al,al
64009054:	je     0x64009066
64009056:	movsx  eax,al
64009059:	push   eax
6400905a:	call   0x6401194d
6400905f:	add    esp,0x4
64009062:	test   eax,eax
64009064:	je     0x6400907a
64009066:	add    esi,0x1
64009069:	mov    BYTE PTR [esp+0xf],0x0
6400906e:	mov    BYTE PTR [esi+edi*1],0x0
64009072:	add    ebp,0x1
64009075:	jmp    0x64008ff3
6400907a:	mov    ebp,DWORD PTR [esp+0x10]
6400907e:	xor    esi,esi
64009080:	mov    bl,BYTE PTR [ebp+0x0]
64009083:	test   bl,bl
64009085:	je     0x640090a4
64009087:	movsx  ecx,bl
6400908a:	push   ecx
6400908b:	call   0x6401194d
64009090:	add    esp,0x4
64009093:	test   eax,eax
64009095:	je     0x640090a2
64009097:	mov    BYTE PTR [esi+edi*1],bl
6400909a:	add    esi,0x1
6400909d:	add    ebp,0x1
640090a0:	jmp    0x64009080
640090a2:	xor    esi,esi
640090a4:	cmp    DWORD PTR [esp+0x18],0x0
640090a9:	mov    BYTE PTR [esi+edi*1],0x0
640090ad:	je     0x640090d2
640090af:	test   esi,esi
640090b1:	jle    0x640090d2
640090b3:	add    esi,0xffffffff
640090b6:	shr    esi,1
640090b8:	lea    eax,[edi+0x1]
640090bb:	add    esi,0x1
640090be:	mov    edi,edi
640090c0:	mov    cl,BYTE PTR [eax-0x1]
640090c3:	mov    dl,BYTE PTR [eax]
640090c5:	mov    BYTE PTR [eax-0x1],dl
640090c8:	mov    BYTE PTR [eax],cl
640090ca:	add    eax,0x2
640090cd:	sub    esi,0x1
640090d0:	jne    0x640090c0
640090d2:	or     ebx,0xffffffff
640090d5:	or     ebp,ebx
640090d7:	xor    esi,esi
640090d9:	cmp    BYTE PTR [edi],0x0
640090dc:	je     0x6400912b
640090de:	mov    edi,edi
640090e0:	movsx  eax,BYTE PTR [esi+edi*1]
640090e4:	push   eax
640090e5:	call   0x640118d0
640090ea:	add    esp,0x4
640090ed:	test   eax,eax
640090ef:	jne    0x640090f9
640090f1:	test   ebp,ebp
640090f3:	jge    0x640090f7
640090f5:	mov    ebp,esi
640090f7:	mov    ebx,esi
640090f9:	add    esi,0x1
640090fc:	cmp    BYTE PTR [esi+edi*1],0x0
64009100:	jne    0x640090e0
64009102:	test   ebp,ebp
64009104:	jl     0x6400912b
64009106:	test   ebx,ebx
64009108:	jl     0x6400912b
6400910a:	cmp    ebp,ebx
6400910c:	mov    eax,ebp
6400910e:	jg     0x64009125
64009110:	mov    edx,edi
64009112:	sub    edx,ebp
64009114:	mov    cl,BYTE PTR [eax+edi*1]
64009117:	test   cl,cl
64009119:	je     0x64009125
6400911b:	mov    BYTE PTR [edx+eax*1],cl
6400911e:	add    eax,0x1
64009121:	cmp    eax,ebx
64009123:	jle    0x64009114
64009125:	sub    eax,ebp
64009127:	mov    BYTE PTR [eax+edi*1],0x0
6400912b:	pop    esi
6400912c:	pop    ebp
6400912d:	pop    ebx
6400912e:	mov    eax,edi
64009130:	add    esp,0x8
64009133:	ret    
64009134:	int3   
64009135:	int3   
64009136:	int3   
64009137:	int3   
64009138:	int3   
64009139:	int3   
6400913a:	int3   
6400913b:	int3   
6400913c:	int3   
6400913d:	int3   
6400913e:	int3   
6400913f:	int3   
64009140:	push   ebp
64009141:	mov    ebp,esp
64009143:	and    esp,0xfffffff8
64009146:	mov    eax,0x2f34
6400914b:	call   0x64016520
64009150:	mov    eax,ds:0x64029038
64009155:	xor    eax,esp
64009157:	mov    DWORD PTR [esp+0x2f30],eax
6400915e:	push   ebx
6400915f:	mov    eax,DWORD PTR [ebp+0x8]
64009162:	mov    ecx,DWORD PTR [ebp+0xc]
64009165:	mov    ebx,DWORD PTR [ebp+0x10]
64009168:	push   esi
64009169:	push   edi
6400916a:	xor    edi,edi
6400916c:	push   edi
6400916d:	push   edi
6400916e:	push   0x3
64009170:	push   edi
64009171:	push   0x3
64009173:	push   edi
64009174:	push   0x64024a14
64009179:	push   0x12
6400917b:	push   0x64024a50
64009180:	mov    DWORD PTR [esp+0x3c],eax
64009184:	mov    DWORD PTR [esp+0x40],ecx
64009188:	mov    BYTE PTR [esp+0x37],0x0
6400918d:	call   0x64004930
64009192:	add    esp,0xc
64009195:	push   eax
64009196:	call   0x6400c230
6400919b:	call   eax
6400919d:	mov    esi,eax
6400919f:	cmp    esi,0xffffffff
640091a2:	jne    0x640091bb
640091a4:	xor    al,al
640091a6:	pop    edi
640091a7:	pop    esi
640091a8:	pop    ebx
640091a9:	mov    ecx,DWORD PTR [esp+0x2f30]
640091b0:	xor    ecx,esp
640091b2:	call   0x64010c1e
640091b7:	mov    esp,ebp
640091b9:	pop    ebp
640091ba:	ret    
640091bb:	xor    eax,eax
640091bd:	push   0x2710
640091c2:	lea    edx,[esp+0x82c]
640091c9:	push   edi
640091ca:	mov    DWORD PTR [esp+0x2c],eax
640091ce:	mov    DWORD PTR [esp+0x30],eax
640091d2:	push   edx
640091d3:	mov    DWORD PTR [esp+0x20],edi
640091d7:	mov    DWORD PTR [esp+0x38],eax
640091db:	mov    DWORD PTR [esp+0x30],edi
640091df:	mov    DWORD PTR [esp+0x34],edi
640091e3:	call   0x64011320
640091e8:	add    esp,0xc
640091eb:	push   edi
640091ec:	lea    eax,[esp+0x18]
640091f0:	push   eax
640091f1:	push   0x2710
640091f6:	lea    ecx,[esp+0x834]
640091fd:	push   ecx
640091fe:	push   0xc
64009200:	lea    edx,[esp+0x38]
64009204:	push   edx
64009205:	push   0x2d1400
6400920a:	push   esi
6400920b:	call   0x6400c770
64009210:	call   eax
64009212:	test   eax,eax
64009214:	je     0x64009271
64009216:	mov    eax,DWORD PTR [esp+0x838]
6400921d:	push   edi
6400921e:	lea    edi,[esp+0x444]
64009225:	lea    ecx,[esp+0x82c]
6400922c:	call   0x64008fd0
64009231:	mov    eax,DWORD PTR [esp+0x844]
64009238:	push   0x1
6400923a:	lea    edi,[esp+0x60]
6400923e:	lea    ecx,[esp+0x830]
64009245:	call   0x64008fd0
6400924a:	mov    ecx,DWORD PTR [esp+0x20]
6400924e:	add    esp,0x8
64009251:	mov    eax,edi
64009253:	push   eax
64009254:	call   0x64002800
64009259:	lea    ecx,[esp+0x440]
64009260:	push   ecx
64009261:	mov    ecx,DWORD PTR [esp+0x20]
64009265:	call   0x64002800
6400926a:	mov    BYTE PTR [esp+0x13],0x1
6400926f:	xor    edi,edi
64009271:	xor    eax,eax
64009273:	push   edi
64009274:	lea    edx,[esp+0x24]
64009278:	push   edx
64009279:	push   0x28
6400927b:	mov    DWORD PTR [esp+0x40],eax
6400927f:	mov    DWORD PTR [esp+0x44],eax
64009283:	mov    DWORD PTR [esp+0x48],eax
64009287:	mov    DWORD PTR [esp+0x4c],eax
6400928b:	mov    DWORD PTR [esp+0x50],eax
6400928f:	mov    DWORD PTR [esp+0x54],eax
64009293:	mov    DWORD PTR [esp+0x58],eax
64009297:	mov    DWORD PTR [esp+0x5c],eax
6400929b:	mov    DWORD PTR [esp+0x60],eax
6400929f:	lea    eax,[esp+0x3c]
640092a3:	push   eax
640092a4:	push   edi
640092a5:	push   edi
640092a6:	push   0x700a0
640092ab:	push   esi
640092ac:	mov    DWORD PTR [esp+0x50],edi
640092b0:	mov    DWORD PTR [ebx],edi
640092b2:	mov    DWORD PTR [ebx+0x4],edi
640092b5:	call   0x6400c770
640092ba:	call   eax
640092bc:	test   eax,eax
640092be:	je     0x640092cd
640092c0:	mov    ecx,DWORD PTR [esp+0x48]
640092c4:	mov    edx,DWORD PTR [esp+0x4c]
640092c8:	mov    DWORD PTR [ebx],ecx
640092ca:	mov    DWORD PTR [ebx+0x4],edx
640092cd:	push   esi
640092ce:	call   DWORD PTR ds:0x64022040
640092d4:	mov    ecx,DWORD PTR [esp+0x2f3c]
640092db:	mov    al,BYTE PTR [esp+0x13]
640092df:	pop    edi
640092e0:	pop    esi
640092e1:	pop    ebx
640092e2:	xor    ecx,esp
640092e4:	call   0x64010c1e
640092e9:	mov    esp,ebp
640092eb:	pop    ebp
640092ec:	ret    
640092ed:	int3   
640092ee:	int3   
640092ef:	int3   
640092f0:	push   ebp
640092f1:	lea    ebp,[esp-0x28c]
640092f8:	sub    esp,0x28c
640092fe:	push   0xffffffff
64009300:	push   0x64021700
64009305:	mov    eax,fs:0x0
6400930b:	push   eax
6400930c:	sub    esp,0x34
6400930f:	mov    eax,ds:0x64029038
64009314:	xor    eax,ebp
64009316:	mov    DWORD PTR [ebp+0x288],eax
6400931c:	push   ebx
6400931d:	push   esi
6400931e:	push   edi
6400931f:	push   eax
64009320:	lea    eax,[ebp-0xc]
64009323:	mov    fs:0x0,eax
64009329:	mov    eax,DWORD PTR [ebp+0x294]
6400932f:	lea    ecx,[ebp-0x14]
64009332:	push   ecx
64009333:	lea    edx,[ebp+0x0]
64009336:	push   edx
64009337:	mov    DWORD PTR [ebp-0x20],eax
6400933a:	mov    DWORD PTR [ebp-0x14],0x1
64009341:	call   0x6400bdd0
64009346:	call   eax
64009348:	cmp    eax,0x6f
6400934b:	jne    0x64009521
64009351:	mov    eax,DWORD PTR [ebp-0x14]
64009354:	push   eax
64009355:	call   0x6401041d
6400935a:	mov    ebx,eax
6400935c:	add    esp,0x4
6400935f:	mov    DWORD PTR [ebp-0x24],ebx
64009362:	lea    ecx,[ebp-0x14]
64009365:	push   ecx
64009366:	push   ebx
64009367:	mov    DWORD PTR [ebp-0x4],0x0
6400936e:	call   0x6400bdd0
64009373:	call   eax
64009375:	test   eax,eax
64009377:	je     0x6400937f
64009379:	push   ebx
6400937a:	jmp    0x64009519
6400937f:	call   DWORD PTR ds:0x64029008
64009385:	mov    edx,DWORD PTR ds:0x6402a4e0
6400938b:	mov    DWORD PTR [ebp-0x1c],eax
6400938e:	mov    eax,DWORD PTR [edx+0xc]
64009391:	mov    ecx,0x6402a4e0
64009396:	call   eax
64009398:	lea    edi,[eax+0x10]
6400939b:	mov    DWORD PTR [ebp-0x10],edi
6400939e:	xor    esi,esi
640093a0:	mov    BYTE PTR [ebp-0x4],0x1
640093a4:	cmp    DWORD PTR [ebx+0x190],esi
640093aa:	je     0x64009432
640093b0:	mov    edx,DWORD PTR ds:0x6402a4e0
640093b6:	mov    eax,DWORD PTR [edx+0xc]
640093b9:	mov    ecx,0x6402a4e0
640093be:	call   eax
640093c0:	add    eax,0x10
640093c3:	mov    DWORD PTR [ebp-0x18],eax
640093c6:	mov    BYTE PTR [ebp-0x4],0x2
640093ca:	movzx  ecx,BYTE PTR [ebx+esi*1+0x194]
640093d2:	push   ecx
640093d3:	push   0x64024a78
640093d8:	push   0x4
640093da:	push   0x64024a9c
640093df:	call   0x64004930
640093e4:	add    esp,0xc
640093e7:	push   eax
640093e8:	lea    edx,[ebp-0x18]
640093eb:	push   edx
640093ec:	call   0x64001d40
640093f1:	mov    edi,DWORD PTR [ebp-0x18]
640093f4:	mov    eax,DWORD PTR [edi-0xc]
640093f7:	add    esp,0xc
640093fa:	push   eax
640093fb:	push   edi
640093fc:	lea    ecx,[ebp-0x10]
640093ff:	call   0x640029e0
64009404:	lea    eax,[edi-0x10]
64009407:	mov    BYTE PTR [ebp-0x4],0x1
6400940b:	lea    ecx,[eax+0xc]
6400940e:	or     edx,0xffffffff
64009411:	lock xadd DWORD PTR [ecx],edx
64009415:	dec    edx
64009416:	test   edx,edx
64009418:	jg     0x64009424
6400941a:	mov    ecx,DWORD PTR [eax]
6400941c:	mov    edx,DWORD PTR [ecx]
6400941e:	push   eax
6400941f:	mov    eax,DWORD PTR [edx+0x4]
64009422:	call   eax
64009424:	add    esi,0x1
64009427:	cmp    esi,DWORD PTR [ebx+0x190]
6400942d:	jne    0x640093b0
6400942f:	mov    edi,DWORD PTR [ebp-0x10]
64009432:	cmp    DWORD PTR [edi-0x4],0x1
64009436:	jle    0x64009447
64009438:	mov    ecx,DWORD PTR [edi-0xc]
6400943b:	push   ecx
6400943c:	lea    ecx,[ebp-0x10]
6400943f:	call   0x64001950
64009444:	mov    edi,DWORD PTR [ebp-0x10]
64009447:	test   edi,edi
64009449:	jne    0x6400944f
6400944b:	xor    esi,esi
6400944d:	jmp    0x6400949d
6400944f:	push   edi
64009450:	call   DWORD PTR ds:0x64022054
64009456:	add    eax,0x1
64009459:	cmp    eax,0x3fffffff
6400945e:	jg     0x64009499
64009460:	lea    edi,[eax+eax*1]
64009463:	mov    eax,edi
64009465:	call   0x640113a0
6400946a:	mov    esi,esp
6400946c:	test   esi,esi
6400946e:	je     0x64009496
64009470:	mov    edx,DWORD PTR [ebp-0x10]
64009473:	mov    eax,DWORD PTR [ebp-0x1c]
64009476:	push   0x0
64009478:	push   0x0
6400947a:	push   edi
6400947b:	push   esi
6400947c:	push   0xffffffff
6400947e:	push   edx
6400947f:	push   0x0
64009481:	push   eax
64009482:	mov    BYTE PTR [esi],0x0
64009485:	call   DWORD PTR ds:0x64022024
6400948b:	mov    edi,DWORD PTR [ebp-0x10]
6400948e:	neg    eax
64009490:	sbb    eax,eax
64009492:	and    eax,esi
64009494:	jmp    0x6400949b
64009496:	mov    edi,DWORD PTR [ebp-0x10]
64009499:	xor    eax,eax
6400949b:	mov    esi,eax
6400949d:	mov    eax,esi
6400949f:	mov    DWORD PTR [ebp-0x28],0xf
640094a6:	mov    DWORD PTR [ebp-0x2c],0x0
640094ad:	mov    BYTE PTR [ebp-0x3c],0x0
640094b1:	lea    edx,[eax+0x1]
640094b4:	mov    cl,BYTE PTR [eax]
640094b6:	add    eax,0x1
640094b9:	test   cl,cl
640094bb:	jne    0x640094b4
640094bd:	sub    eax,edx
640094bf:	push   eax
640094c0:	push   esi
640094c1:	lea    ecx,[ebp-0x40]
640094c4:	call   0x64001880
640094c9:	mov    esi,DWORD PTR [ebp-0x20]
640094cc:	lea    ecx,[ebp-0x40]
640094cf:	push   ecx
640094d0:	mov    BYTE PTR [ebp-0x4],0x3
640094d4:	call   0x64009a40
640094d9:	cmp    DWORD PTR [ebp-0x28],0x10
640094dd:	jb     0x640094eb
640094df:	mov    edx,DWORD PTR [ebp-0x3c]
640094e2:	push   edx
640094e3:	call   0x64010422
640094e8:	add    esp,0x4
640094eb:	mov    ebx,DWORD PTR [ebx]
640094ed:	lea    eax,[edi-0x10]
640094f0:	mov    BYTE PTR [ebp-0x4],0x0
640094f4:	lea    ecx,[eax+0xc]
640094f7:	or     edx,0xffffffff
640094fa:	lock xadd DWORD PTR [ecx],edx
640094fe:	dec    edx
640094ff:	test   edx,edx
64009501:	jg     0x6400950d
64009503:	mov    ecx,DWORD PTR [eax]
64009505:	mov    edx,DWORD PTR [ecx]
64009507:	push   eax
64009508:	mov    eax,DWORD PTR [edx+0x4]
6400950b:	call   eax
6400950d:	test   ebx,ebx
6400950f:	jne    0x6400937f
64009515:	mov    ecx,DWORD PTR [ebp-0x24]
64009518:	push   ecx
64009519:	call   0x64010422
6400951e:	add    esp,0x4
64009521:	lea    esp,[ebp-0x50]
64009524:	mov    ecx,DWORD PTR [ebp-0xc]
64009527:	mov    DWORD PTR fs:0x0,ecx
6400952e:	pop    ecx
6400952f:	pop    edi
64009530:	pop    esi
64009531:	pop    ebx
64009532:	mov    ecx,DWORD PTR [ebp+0x288]
64009538:	xor    ecx,ebp
6400953a:	call   0x64010c1e
6400953f:	add    ebp,0x28c
64009545:	mov    esp,ebp
64009547:	pop    ebp
64009548:	ret    
64009549:	int3   
6400954a:	int3   
6400954b:	int3   
6400954c:	int3   
6400954d:	int3   
6400954e:	int3   
6400954f:	int3   
64009550:	push   0xffffffff
64009552:	push   0x640216c0
64009557:	mov    eax,fs:0x0
6400955d:	push   eax
6400955e:	sub    esp,0x50
64009561:	push   ebx
64009562:	push   ebp
64009563:	push   esi
64009564:	push   edi
64009565:	mov    eax,ds:0x64029038
6400956a:	xor    eax,esp
6400956c:	push   eax
6400956d:	lea    eax,[esp+0x64]
64009571:	mov    fs:0x0,eax
64009577:	mov    ebp,DWORD PTR [esp+0x74]
6400957b:	lea    eax,[esp+0x18]
6400957f:	xor    ebx,ebx
64009581:	push   eax
64009582:	mov    edi,0x64024590
64009587:	mov    DWORD PTR [esp+0x3c],ebx
6400958b:	call   0x64008b00
64009590:	push   ebx
64009591:	push   ebx
64009592:	mov    DWORD PTR [esp+0x74],ebx
64009596:	call   DWORD PTR ds:0x640221d4
6400959c:	test   eax,eax
6400959e:	jge    0x640095f3
640095a0:	mov    esi,DWORD PTR [esp+0x18]
640095a4:	cmp    esi,ebx
640095a6:	mov    DWORD PTR [ebp+0x0],esi
640095a9:	je     0x64009893
640095af:	lea    edi,[esi+0x8]
640095b2:	push   edi
640095b3:	call   DWORD PTR ds:0x64022020
640095b9:	push   edi
640095ba:	call   DWORD PTR ds:0x64022094
640095c0:	test   eax,eax
640095c2:	jne    0x64009893
640095c8:	mov    eax,DWORD PTR [esi]
640095ca:	cmp    eax,ebx
640095cc:	je     0x640095d5
640095ce:	push   eax
640095cf:	call   DWORD PTR ds:0x640221a4
640095d5:	mov    eax,DWORD PTR [esi+0x4]
640095d8:	cmp    eax,ebx
640095da:	je     0x640095e5
640095dc:	push   eax
640095dd:	call   0x64011316
640095e2:	add    esp,0x4
640095e5:	push   esi
640095e6:	call   0x64010422
640095eb:	add    esp,0x4
640095ee:	jmp    0x64009893
640095f3:	lea    ecx,[esp+0x20]
640095f7:	push   ecx
640095f8:	push   0x64022934
640095fd:	push   0x1
640095ff:	push   ebx
64009600:	push   0x64022a04
64009605:	mov    DWORD PTR [esp+0x34],ebx
64009609:	call   DWORD PTR ds:0x640221d0
6400960f:	cmp    eax,ebx
64009611:	jl     0x6400986f
64009617:	push   0x64024aa8
6400961c:	push   0xa
6400961e:	push   0x64024ad4
64009623:	mov    DWORD PTR [esp+0x28],ebx
64009627:	call   0x64004930
6400962c:	add    esp,0xc
6400962f:	lea    edx,[esp+0x30]
64009633:	push   edx
64009634:	mov    edi,eax
64009636:	call   0x64008b00
6400963b:	mov    BYTE PTR [esp+0x6c],0x1
64009640:	mov    eax,DWORD PTR [eax]
64009642:	cmp    eax,ebx
64009644:	je     0x6400964a
64009646:	mov    eax,DWORD PTR [eax]
64009648:	jmp    0x6400964c
6400964a:	xor    eax,eax
6400964c:	mov    ecx,DWORD PTR [esp+0x20]
64009650:	mov    edx,DWORD PTR [ecx]
64009652:	lea    esi,[esp+0x1c]
64009656:	push   esi
64009657:	push   ebx
64009658:	push   ebx
64009659:	push   ebx
6400965a:	push   ebx
6400965b:	push   ebx
6400965c:	push   ebx
6400965d:	push   eax
6400965e:	mov    eax,DWORD PTR [edx+0xc]
64009661:	push   ecx
64009662:	call   eax
64009664:	lea    edi,[esp+0x30]
64009668:	mov    esi,eax
6400966a:	mov    BYTE PTR [esp+0x6c],bl
6400966e:	call   0x64008ba0
64009673:	cmp    esi,ebx
64009675:	jge    0x64009680
64009677:	mov    eax,DWORD PTR [esp+0x20]
6400967b:	jmp    0x64009867
64009680:	mov    eax,DWORD PTR [esp+0x1c]
64009684:	push   ebx
64009685:	push   ebx
64009686:	push   0x3
64009688:	push   0x3
6400968a:	push   ebx
6400968b:	push   ebx
6400968c:	push   0xa
6400968e:	push   eax
6400968f:	call   DWORD PTR ds:0x640221e4
64009695:	cmp    eax,ebx
64009697:	jge    0x640096ae
64009699:	mov    eax,DWORD PTR [esp+0x1c]
6400969d:	mov    ecx,DWORD PTR [eax]
6400969f:	mov    edx,DWORD PTR [ecx+0x8]
640096a2:	push   eax
640096a3:	call   edx
640096a5:	mov    eax,DWORD PTR [esp+0x20]
640096a9:	jmp    0x64009867
640096ae:	push   0x64024aec
640096b3:	push   0xe
640096b5:	push   0x64024b20
640096ba:	mov    DWORD PTR [esp+0x30],ebx
640096be:	call   0x64004730
640096c3:	add    esp,0xc
640096c6:	push   eax
640096c7:	lea    ebx,[esp+0x3c]
640096cb:	call   0x64008a70
640096d0:	mov    ecx,DWORD PTR [esp+0x78]
640096d4:	push   ecx
640096d5:	lea    edx,[esp+0x38]
640096d9:	push   edx
640096da:	push   eax
640096db:	mov    BYTE PTR [esp+0x78],0x2
640096e0:	call   0x64008dc0
640096e5:	mov    esi,eax
640096e7:	push   0x64024b30
640096ec:	push   0x3
640096ee:	push   0x64024b60
640096f3:	mov    BYTE PTR [esp+0x78],0x3
640096f8:	call   0x64004730
640096fd:	add    esp,0xc
64009700:	push   eax
64009701:	lea    ebx,[esp+0x34]
64009705:	call   0x64008a70
6400970a:	mov    BYTE PTR [esp+0x6c],0x4
6400970f:	mov    ecx,DWORD PTR [esi]
64009711:	xor    ebx,ebx
64009713:	cmp    ecx,ebx
64009715:	je     0x6400971b
64009717:	mov    ecx,DWORD PTR [ecx]
64009719:	jmp    0x6400971d
6400971b:	xor    ecx,ecx
6400971d:	mov    eax,DWORD PTR [eax]
6400971f:	cmp    eax,ebx
64009721:	je     0x64009727
64009723:	mov    edx,DWORD PTR [eax]
64009725:	jmp    0x64009729
64009727:	xor    edx,edx
64009729:	mov    eax,DWORD PTR [esp+0x1c]
6400972d:	mov    esi,DWORD PTR [eax]
6400972f:	lea    edi,[esp+0x24]
64009733:	push   edi
64009734:	push   ebx
64009735:	push   0x30
64009737:	push   ecx
64009738:	push   edx
64009739:	push   eax
6400973a:	mov    eax,DWORD PTR [esi+0x50]
6400973d:	call   eax
6400973f:	lea    edi,[esp+0x30]
64009743:	mov    esi,eax
64009745:	call   0x64008ba0
6400974a:	lea    edi,[esp+0x34]
6400974e:	call   0x64008ba0
64009753:	lea    edi,[esp+0x38]
64009757:	mov    BYTE PTR [esp+0x6c],bl
6400975b:	call   0x64008ba0
64009760:	cmp    esi,ebx
64009762:	jge    0x64009779
64009764:	mov    eax,DWORD PTR [esp+0x1c]
64009768:	mov    ecx,DWORD PTR [eax]
6400976a:	mov    edx,DWORD PTR [ecx+0x8]
6400976d:	push   eax
6400976e:	call   edx
64009770:	mov    eax,DWORD PTR [esp+0x20]
64009774:	jmp    0x64009867
64009779:	mov    eax,DWORD PTR [esp+0x24]
6400977d:	cmp    eax,ebx
6400977f:	mov    DWORD PTR [esp+0x2c],ebx
64009783:	je     0x6400983f
64009789:	mov    edi,DWORD PTR ds:0x64022190
6400978f:	nop
64009790:	mov    ecx,DWORD PTR [eax]
64009792:	lea    edx,[esp+0x2c]
64009796:	push   edx
64009797:	lea    edx,[esp+0x2c]
6400979b:	push   edx
6400979c:	push   0x1
6400979e:	push   0xffffffff
640097a0:	push   eax
640097a1:	mov    eax,DWORD PTR [ecx+0x10]
640097a4:	call   eax
640097a6:	cmp    DWORD PTR [esp+0x2c],ebx
640097aa:	je     0x6400983f
640097b0:	mov    esi,DWORD PTR [esp+0x28]
640097b4:	mov    eax,DWORD PTR [esp+0x7c]
640097b8:	mov    ebp,DWORD PTR [esi]
640097ba:	push   ebx
640097bb:	push   ebx
640097bc:	lea    ecx,[esp+0x44]
640097c0:	push   ecx
640097c1:	push   ebx
640097c2:	call   0x64008e40
640097c7:	mov    edx,DWORD PTR [ebp+0x10]
640097ca:	push   eax
640097cb:	push   esi
640097cc:	call   edx
640097ce:	cmp    eax,ebx
640097d0:	jl     0x640097da
640097d2:	cmp    WORD PTR [esp+0x3c],0x8
640097d8:	je     0x640097fb
640097da:	lea    eax,[esp+0x3c]
640097de:	push   eax
640097df:	call   edi
640097e1:	mov    eax,DWORD PTR [esp+0x28]
640097e5:	mov    ecx,DWORD PTR [eax]
640097e7:	mov    edx,DWORD PTR [ecx+0x8]
640097ea:	push   eax
640097eb:	call   edx
640097ed:	mov    eax,DWORD PTR [esp+0x24]
640097f1:	cmp    eax,ebx
640097f3:	mov    ebp,DWORD PTR [esp+0x74]
640097f7:	jne    0x64009790
640097f9:	jmp    0x6400983f
640097fb:	lea    eax,[esp+0x4c]
640097ff:	push   eax
64009800:	call   DWORD PTR ds:0x64022188
64009806:	lea    ecx,[esp+0x3c]
6400980a:	push   ecx
6400980b:	lea    edx,[esp+0x50]
6400980f:	push   edx
64009810:	call   DWORD PTR ds:0x6402218c
64009816:	cmp    eax,ebx
64009818:	jge    0x64009820
6400981a:	push   eax
6400981b:	call   0x6401cbe0
64009820:	lea    esi,[esp+0x4c]
64009824:	lea    ecx,[esp+0x18]
64009828:	mov    BYTE PTR [esp+0x6c],0x5
6400982d:	call   0x64008f20
64009832:	mov    eax,esi
64009834:	push   eax
64009835:	mov    BYTE PTR [esp+0x70],bl
64009839:	call   edi
6400983b:	mov    ebp,DWORD PTR [esp+0x74]
6400983f:	mov    eax,DWORD PTR [esp+0x1c]
64009843:	mov    ecx,DWORD PTR [eax]
64009845:	mov    edx,DWORD PTR [ecx+0x8]
64009848:	push   eax
64009849:	call   edx
6400984b:	mov    eax,DWORD PTR [esp+0x20]
6400984f:	mov    ecx,DWORD PTR [eax]
64009851:	mov    edx,DWORD PTR [ecx+0x8]
64009854:	push   eax
64009855:	call   edx
64009857:	mov    eax,DWORD PTR [esp+0x24]
6400985b:	mov    ecx,DWORD PTR [eax]
6400985d:	mov    edx,DWORD PTR [ecx+0x8]
64009860:	push   eax
64009861:	call   edx
64009863:	mov    eax,DWORD PTR [esp+0x28]
64009867:	mov    ecx,DWORD PTR [eax]
64009869:	mov    edx,DWORD PTR [ecx+0x8]
6400986c:	push   eax
6400986d:	call   edx
6400986f:	call   DWORD PTR ds:0x640221d8
64009875:	mov    eax,DWORD PTR [esp+0x18]
64009879:	cmp    eax,ebx
6400987b:	mov    DWORD PTR [ebp+0x0],eax
6400987e:	je     0x6400988a
64009880:	add    eax,0x8
64009883:	push   eax
64009884:	call   DWORD PTR ds:0x64022020
6400988a:	lea    edi,[esp+0x18]
6400988e:	call   0x64008ba0
64009893:	mov    eax,ebp
64009895:	mov    ecx,DWORD PTR [esp+0x64]
64009899:	mov    DWORD PTR fs:0x0,ecx
640098a0:	pop    ecx
640098a1:	pop    edi
640098a2:	pop    esi
640098a3:	pop    ebp
640098a4:	pop    ebx
640098a5:	add    esp,0x5c
640098a8:	ret    
640098a9:	int3   
640098aa:	int3   
640098ab:	int3   
640098ac:	int3   
640098ad:	int3   
640098ae:	int3   
640098af:	int3   
640098b0:	push   ebp
640098b1:	mov    ebp,esp
640098b3:	and    esp,0xfffffff8
640098b6:	push   0xffffffff
640098b8:	push   0x64021998
640098bd:	mov    eax,fs:0x0
640098c3:	push   eax
640098c4:	sub    esp,0x14
640098c7:	push   esi
640098c8:	push   edi
640098c9:	mov    eax,ds:0x64029038
640098ce:	xor    eax,esp
640098d0:	push   eax
640098d1:	lea    eax,[esp+0x20]
640098d5:	mov    fs:0x0,eax
640098db:	mov    DWORD PTR [esp+0x18],0x0
640098e3:	call   DWORD PTR ds:0x64029008
640098e9:	push   0x64024b64
640098ee:	push   0xc
640098f0:	push   0x64024b8c
640098f5:	call   0x64004930
640098fa:	add    esp,0xc
640098fd:	lea    ecx,[esp+0x14]
64009901:	push   ecx
64009902:	mov    edi,eax
64009904:	call   0x64008b00
64009909:	push   0x64024ba8
6400990e:	push   0x15
64009910:	push   0x64024bd4
64009915:	mov    DWORD PTR [esp+0x34],0x0
6400991d:	call   0x64004930
64009922:	add    esp,0xc
64009925:	lea    edx,[esp+0x10]
64009929:	push   edx
6400992a:	mov    edi,eax
6400992c:	call   0x64008b00
64009931:	lea    eax,[esp+0x14]
64009935:	push   eax
64009936:	lea    ecx,[esp+0x14]
6400993a:	push   ecx
6400993b:	lea    edx,[esp+0x20]
6400993f:	push   edx
64009940:	mov    BYTE PTR [esp+0x34],0x1
64009945:	call   0x64009550
6400994a:	add    esp,0xc
6400994d:	mov    esi,DWORD PTR [esp+0x10]
64009951:	test   esi,esi
64009953:	je     0x64009989
64009955:	lea    eax,[esi+0x8]
64009958:	push   eax
64009959:	call   DWORD PTR ds:0x64022094
6400995f:	test   eax,eax
64009961:	jne    0x64009989
64009963:	mov    eax,DWORD PTR [esi]
64009965:	test   eax,eax
64009967:	je     0x64009970
64009969:	push   eax
6400996a:	call   DWORD PTR ds:0x640221a4
64009970:	mov    eax,DWORD PTR [esi+0x4]
64009973:	test   eax,eax
64009975:	je     0x64009980
64009977:	push   eax
64009978:	call   0x64011316
6400997d:	add    esp,0x4
64009980:	push   esi
64009981:	call   0x64010422
64009986:	add    esp,0x4
64009989:	mov    BYTE PTR [esp+0x28],0x4
6400998e:	mov    esi,DWORD PTR [esp+0x14]
64009992:	test   esi,esi
64009994:	je     0x640099ca
64009996:	lea    ecx,[esi+0x8]
64009999:	push   ecx
6400999a:	call   DWORD PTR ds:0x64022094
640099a0:	test   eax,eax
640099a2:	jne    0x640099ca
640099a4:	mov    eax,DWORD PTR [esi]
640099a6:	test   eax,eax
640099a8:	je     0x640099b1
640099aa:	push   eax
640099ab:	call   DWORD PTR ds:0x640221a4
640099b1:	mov    eax,DWORD PTR [esi+0x4]
640099b4:	test   eax,eax
640099b6:	je     0x640099c1
640099b8:	push   eax
640099b9:	call   0x64011316
640099be:	add    esp,0x4
640099c1:	push   esi
640099c2:	call   0x64010422
640099c7:	add    esp,0x4
640099ca:	mov    esi,DWORD PTR [esp+0x18]
640099ce:	test   esi,esi
640099d0:	je     0x640099d6
640099d2:	mov    eax,DWORD PTR [esi]
640099d4:	jmp    0x640099d8
640099d6:	xor    eax,eax
640099d8:	mov    edi,DWORD PTR [ebp+0x8]
640099db:	push   eax
640099dc:	mov    ecx,edi
640099de:	call   0x64002590
640099e3:	test   esi,esi
640099e5:	je     0x64009a1b
640099e7:	lea    edx,[esi+0x8]
640099ea:	push   edx
640099eb:	call   DWORD PTR ds:0x64022094
640099f1:	test   eax,eax
640099f3:	jne    0x64009a1b
640099f5:	mov    eax,DWORD PTR [esi]
640099f7:	test   eax,eax
640099f9:	je     0x64009a02
640099fb:	push   eax
640099fc:	call   DWORD PTR ds:0x640221a4
64009a02:	mov    eax,DWORD PTR [esi+0x4]
64009a05:	test   eax,eax
64009a07:	je     0x64009a12
64009a09:	push   eax
64009a0a:	call   0x64011316
64009a0f:	add    esp,0x4
64009a12:	push   esi
64009a13:	call   0x64010422
64009a18:	add    esp,0x4
64009a1b:	mov    eax,edi
64009a1d:	mov    ecx,DWORD PTR [esp+0x20]
64009a21:	mov    DWORD PTR fs:0x0,ecx
64009a28:	pop    ecx
64009a29:	pop    edi
64009a2a:	pop    esi
64009a2b:	mov    esp,ebp
64009a2d:	pop    ebp
64009a2e:	ret    
64009a2f:	int3   
64009a30:	mov    ecx,DWORD PTR [eax]
64009a32:	push   ecx
64009a33:	call   0x64010422
64009a38:	pop    ecx
64009a39:	ret    
64009a3a:	int3   
64009a3b:	int3   
64009a3c:	int3   
64009a3d:	int3   
64009a3e:	int3   
64009a3f:	int3   
64009a40:	push   ebp
64009a41:	mov    ebp,esp
64009a43:	and    esp,0xfffffff8
64009a46:	sub    esp,0x8
64009a49:	push   ebx
64009a4a:	mov    ebx,DWORD PTR [esi+0x4]
64009a4d:	test   ebx,ebx
64009a4f:	push   edi
64009a50:	jne    0x64009a56
64009a52:	xor    edi,edi
64009a54:	jmp    0x64009a6e
64009a56:	mov    ecx,DWORD PTR [esi+0x8]
64009a59:	sub    ecx,ebx
64009a5b:	mov    eax,0x92492493
64009a60:	imul   ecx
64009a62:	add    edx,ecx
64009a64:	sar    edx,0x4
64009a67:	mov    edi,edx
64009a69:	shr    edi,0x1f
64009a6c:	add    edi,edx
64009a6e:	test   ebx,ebx
64009a70:	je     0x64009ac1
64009a72:	mov    ecx,DWORD PTR [esi+0xc]
64009a75:	sub    ecx,ebx
64009a77:	mov    eax,0x92492493
64009a7c:	imul   ecx
64009a7e:	add    edx,ecx
64009a80:	sar    edx,0x4
64009a83:	mov    eax,edx
64009a85:	shr    eax,0x1f
64009a88:	add    eax,edx
64009a8a:	cmp    edi,eax
64009a8c:	jae    0x64009ac1
64009a8e:	mov    edx,DWORD PTR [ebp+0x8]
64009a91:	mov    edi,DWORD PTR [esi+0x8]
64009a94:	mov    BYTE PTR [esp+0x8],0x0
64009a99:	mov    eax,DWORD PTR [esp+0x8]
64009a9d:	mov    ecx,DWORD PTR [esp+0x8]
64009aa1:	push   eax
64009aa2:	push   ecx
64009aa3:	push   esi
64009aa4:	push   edx
64009aa5:	push   edi
64009aa6:	mov    ecx,0x1
64009aab:	call   0x6400a0e0
64009ab0:	add    esp,0x14
64009ab3:	add    edi,0x1c
64009ab6:	mov    DWORD PTR [esi+0x8],edi
64009ab9:	pop    edi
64009aba:	pop    ebx
64009abb:	mov    esp,ebp
64009abd:	pop    ebp
64009abe:	ret    0x4
64009ac1:	mov    edi,DWORD PTR [esi+0x8]
64009ac4:	cmp    ebx,edi
64009ac6:	jbe    0x64009acd
64009ac8:	call   0x6401077a
64009acd:	mov    eax,DWORD PTR [ebp+0x8]
64009ad0:	push   edi
64009ad1:	push   esi
64009ad2:	push   eax
64009ad3:	lea    ecx,[esp+0x14]
64009ad7:	push   ecx
64009ad8:	mov    eax,esi
64009ada:	call   0x64009b20
64009adf:	pop    edi
64009ae0:	pop    ebx
64009ae1:	mov    esp,ebp
64009ae3:	pop    ebp
64009ae4:	ret    0x4
64009ae7:	int3   
64009ae8:	int3   
64009ae9:	int3   
64009aea:	int3   
64009aeb:	int3   
64009aec:	int3   
64009aed:	int3   
64009aee:	int3   
64009aef:	int3   
64009af0:	mov    eax,DWORD PTR [ecx+0x4]
64009af3:	test   eax,eax
64009af5:	jne    0x64009af8
64009af7:	ret    
64009af8:	mov    ecx,DWORD PTR [ecx+0x8]
64009afb:	sub    ecx,eax
64009afd:	mov    eax,0x92492493
64009b02:	imul   ecx
64009b04:	add    edx,ecx
64009b06:	sar    edx,0x4
64009b09:	mov    eax,edx
64009b0b:	shr    eax,0x1f
64009b0e:	add    eax,edx
64009b10:	ret    
64009b11:	int3   
64009b12:	int3   
64009b13:	int3   
64009b14:	int3   
64009b15:	int3   
64009b16:	int3   
64009b17:	int3   
64009b18:	int3   
64009b19:	int3   
64009b1a:	int3   
64009b1b:	int3   
64009b1c:	int3   
64009b1d:	int3   
64009b1e:	int3   
64009b1f:	int3   
64009b20:	push   ecx
64009b21:	push   ebx
64009b22:	push   ebp
64009b23:	mov    ebp,DWORD PTR [esp+0x1c]
64009b27:	push   esi
64009b28:	mov    esi,eax
64009b2a:	push   edi
64009b2b:	mov    edi,DWORD PTR [esi+0x4]
64009b2e:	test   edi,edi
64009b30:	je     0x64009b4e
64009b32:	mov    ebx,DWORD PTR [esi+0x8]
64009b35:	mov    ecx,ebx
64009b37:	sub    ecx,edi
64009b39:	mov    eax,0x92492493
64009b3e:	imul   ecx
64009b40:	add    edx,ecx
64009b42:	sar    edx,0x4
64009b45:	mov    eax,edx
64009b47:	shr    eax,0x1f
64009b4a:	add    eax,edx
64009b4c:	jne    0x64009b56
64009b4e:	mov    ebx,DWORD PTR [esp+0x20]
64009b52:	xor    edi,edi
64009b54:	jmp    0x64009b87
64009b56:	cmp    edi,ebx
64009b58:	jbe    0x64009b5f
64009b5a:	call   0x6401077a
64009b5f:	mov    ebx,DWORD PTR [esp+0x20]
64009b63:	test   ebx,ebx
64009b65:	je     0x64009b6b
64009b67:	cmp    ebx,esi
64009b69:	je     0x64009b70
64009b6b:	call   0x6401077a
64009b70:	mov    ecx,ebp
64009b72:	sub    ecx,edi
64009b74:	mov    eax,0x92492493
64009b79:	imul   ecx
64009b7b:	add    edx,ecx
64009b7d:	sar    edx,0x4
64009b80:	mov    edi,edx
64009b82:	shr    edi,0x1f
64009b85:	add    edi,edx
64009b87:	mov    ecx,DWORD PTR [esp+0x1c]
64009b8b:	push   ebp
64009b8c:	push   ebx
64009b8d:	push   ecx
64009b8e:	mov    ecx,esi
64009b90:	call   0x64009c10
64009b95:	mov    ebx,DWORD PTR [esi+0x4]
64009b98:	cmp    ebx,DWORD PTR [esi+0x8]
64009b9b:	jbe    0x64009ba2
64009b9d:	call   0x6401077a
64009ba2:	lea    edx,[edi*8+0x0]
64009ba9:	sub    edx,edi
64009bab:	lea    edi,[ebx+edx*4]
64009bae:	cmp    edi,DWORD PTR [esi+0x8]
64009bb1:	mov    DWORD PTR [esp+0x24],ebx
64009bb5:	ja     0x64009bbc
64009bb7:	cmp    edi,DWORD PTR [esi+0x4]
64009bba:	jae    0x64009bc1
64009bbc:	call   0x6401077a
64009bc1:	mov    eax,DWORD PTR [esp+0x18]
64009bc5:	mov    DWORD PTR [eax+0x4],edi
64009bc8:	pop    edi
64009bc9:	mov    DWORD PTR [eax],esi
64009bcb:	pop    esi
64009bcc:	pop    ebp
64009bcd:	pop    ebx
64009bce:	pop    ecx
64009bcf:	ret    0x10
64009bd2:	int3   
64009bd3:	int3   
64009bd4:	int3   
64009bd5:	int3   
64009bd6:	int3   
64009bd7:	int3   
64009bd8:	int3   
64009bd9:	int3   
64009bda:	int3   
64009bdb:	int3   
64009bdc:	int3   
64009bdd:	int3   
64009bde:	int3   
64009bdf:	int3   
64009be0:	push   ecx
64009be1:	mov    ecx,DWORD PTR [esp+0x8]
64009be5:	mov    BYTE PTR [esp],0x0
64009be9:	mov    eax,DWORD PTR [esp]
64009bec:	push   eax
64009bed:	mov    eax,DWORD PTR [esp+0xc]
64009bf1:	push   ecx
64009bf2:	push   edx
64009bf3:	push   eax
64009bf4:	push   edi
64009bf5:	mov    ecx,esi
64009bf7:	call   0x6400a0e0
64009bfc:	lea    ecx,[esi*8+0x0]
64009c03:	sub    ecx,esi
64009c05:	lea    eax,[edi+ecx*4]
64009c08:	add    esp,0x18
64009c0b:	ret    0x4
64009c0e:	int3   
64009c0f:	int3   
64009c10:	push   ebp
64009c11:	mov    ebp,esp
64009c13:	push   0xffffffff
64009c15:	push   0x64020b28
64009c1a:	mov    eax,fs:0x0
64009c20:	push   eax
64009c21:	sub    esp,0x34
64009c24:	mov    eax,ds:0x64029038
64009c29:	xor    eax,ebp
64009c2b:	mov    DWORD PTR [ebp-0x14],eax
64009c2e:	push   ebx
64009c2f:	push   esi
64009c30:	push   edi
64009c31:	push   eax
64009c32:	lea    eax,[ebp-0xc]
64009c35:	mov    fs:0x0,eax
64009c3b:	mov    DWORD PTR [ebp-0x10],esp
64009c3e:	mov    eax,DWORD PTR [ebp+0x8]
64009c41:	push   0xffffffff
64009c43:	xor    edi,edi
64009c45:	mov    ebx,ecx
64009c47:	push   edi
64009c48:	push   eax
64009c49:	lea    ecx,[ebp-0x30]
64009c4c:	mov    DWORD PTR [ebp-0x3c],ebx
64009c4f:	mov    DWORD PTR [ebp-0x18],0xf
64009c56:	mov    DWORD PTR [ebp-0x1c],edi
64009c59:	mov    BYTE PTR [ebp-0x2c],0x0
64009c5d:	call   0x640017a0
64009c62:	mov    DWORD PTR [ebp-0x4],edi
64009c65:	mov    ecx,DWORD PTR [ebx+0x4]
64009c68:	cmp    ecx,edi
64009c6a:	je     0x64009c84
64009c6c:	mov    esi,DWORD PTR [ebx+0xc]
64009c6f:	sub    esi,ecx
64009c71:	mov    eax,0x92492493
64009c76:	imul   esi
64009c78:	add    edx,esi
64009c7a:	sar    edx,0x4
64009c7d:	mov    edi,edx
64009c7f:	shr    edi,0x1f
64009c82:	add    edi,edx
64009c84:	test   ecx,ecx
64009c86:	jne    0x64009c8c
64009c88:	xor    eax,eax
64009c8a:	jmp    0x64009ca4
64009c8c:	mov    esi,DWORD PTR [ebx+0x8]
64009c8f:	sub    esi,ecx
64009c91:	mov    eax,0x92492493
64009c96:	imul   esi
64009c98:	add    edx,esi
64009c9a:	sar    edx,0x4
64009c9d:	mov    eax,edx
64009c9f:	shr    eax,0x1f
64009ca2:	add    eax,edx
64009ca4:	mov    edx,0x9249249
64009ca9:	sub    edx,eax
64009cab:	cmp    edx,0x1
64009cae:	jae    0x64009cb5
64009cb0:	call   0x64009f50
64009cb5:	test   ecx,ecx
64009cb7:	jne    0x64009cbd
64009cb9:	xor    eax,eax
64009cbb:	jmp    0x64009cd5
64009cbd:	mov    esi,DWORD PTR [ebx+0x8]
64009cc0:	sub    esi,ecx
64009cc2:	mov    eax,0x92492493
64009cc7:	imul   esi
64009cc9:	add    edx,esi
64009ccb:	sar    edx,0x4
64009cce:	mov    eax,edx
64009cd0:	shr    eax,0x1f
64009cd3:	add    eax,edx
64009cd5:	add    eax,0x1
64009cd8:	cmp    edi,eax
64009cda:	jae    0x64009e36
64009ce0:	mov    eax,edi
64009ce2:	shr    eax,1
64009ce4:	mov    edx,0x9249249
64009ce9:	sub    edx,eax
64009ceb:	cmp    edx,edi
64009ced:	jae    0x64009cf3
64009cef:	xor    edi,edi
64009cf1:	jmp    0x64009cf5
64009cf3:	add    edi,eax
64009cf5:	test   ecx,ecx
64009cf7:	jne    0x64009cfd
64009cf9:	xor    eax,eax
64009cfb:	jmp    0x64009d15
64009cfd:	mov    esi,DWORD PTR [ebx+0x8]
64009d00:	sub    esi,ecx
64009d02:	mov    eax,0x92492493
64009d07:	imul   esi
64009d09:	add    edx,esi
64009d0b:	sar    edx,0x4
64009d0e:	mov    eax,edx
64009d10:	shr    eax,0x1f
64009d13:	add    eax,edx
64009d15:	add    eax,0x1
64009d18:	cmp    edi,eax
64009d1a:	jae    0x64009d28
64009d1c:	mov    ecx,ebx
64009d1e:	call   0x64009af0
64009d23:	mov    edi,eax
64009d25:	add    edi,0x1
64009d28:	push   0x0
64009d2a:	push   edi
64009d2b:	call   0x6400a070
64009d30:	mov    BYTE PTR [ebp-0x4],0x1
64009d34:	mov    ecx,DWORD PTR [ebx+0x4]
64009d37:	mov    BYTE PTR [ebp-0x34],0x0
64009d3b:	mov    edx,DWORD PTR [ebp-0x34]
64009d3e:	push   edx
64009d3f:	mov    edx,DWORD PTR [ebp-0x34]
64009d42:	push   edx
64009d43:	mov    edx,DWORD PTR [ebp+0x10]
64009d46:	push   ebx
64009d47:	push   edx
64009d48:	mov    edx,eax
64009d4a:	mov    DWORD PTR [ebp-0x40],eax
64009d4d:	mov    DWORD PTR [ebp-0x38],eax
64009d50:	call   0x6400a200
64009d55:	add    esp,0x18
64009d58:	mov    esi,eax
64009d5a:	mov    BYTE PTR [ebp-0x34],0x0
64009d5e:	mov    eax,DWORD PTR [ebp-0x34]
64009d61:	mov    ecx,DWORD PTR [ebp-0x34]
64009d64:	push   eax
64009d65:	push   ecx
64009d66:	push   ebx
64009d67:	lea    edx,[ebp-0x30]
64009d6a:	push   edx
64009d6b:	push   esi
64009d6c:	mov    ecx,0x1
64009d71:	mov    DWORD PTR [ebp-0x38],esi
64009d74:	call   0x6400a0e0
64009d79:	mov    eax,DWORD PTR [ebx+0x8]
64009d7c:	add    esp,0x14
64009d7f:	mov    BYTE PTR [ebp-0x34],0x0
64009d83:	mov    ecx,DWORD PTR [ebp-0x34]
64009d86:	mov    edx,DWORD PTR [ebp-0x34]
64009d89:	push   ecx
64009d8a:	mov    ecx,DWORD PTR [ebp+0x10]
64009d8d:	push   edx
64009d8e:	add    esi,0x1c
64009d91:	push   ebx
64009d92:	push   eax
64009d93:	mov    edx,esi
64009d95:	mov    DWORD PTR [ebp-0x38],esi
64009d98:	call   0x6400a200
64009d9d:	mov    esi,DWORD PTR [ebx+0x4]
64009da0:	add    esp,0x10
64009da3:	test   esi,esi
64009da5:	jne    0x64009dab
64009da7:	xor    eax,eax
64009da9:	jmp    0x64009dc3
64009dab:	mov    ecx,DWORD PTR [ebx+0x8]
64009dae:	sub    ecx,esi
64009db0:	mov    eax,0x92492493
64009db5:	imul   ecx
64009db7:	add    edx,ecx
64009db9:	sar    edx,0x4
64009dbc:	mov    eax,edx
64009dbe:	shr    eax,0x1f
64009dc1:	add    eax,edx
64009dc3:	add    eax,0x1
64009dc6:	test   esi,esi
64009dc8:	mov    DWORD PTR [ebp-0x34],eax
64009dcb:	je     0x64009deb
64009dcd:	mov    eax,DWORD PTR [ebp-0x34]
64009dd0:	mov    ecx,DWORD PTR [ebx+0x8]
64009dd3:	push   eax
64009dd4:	push   ebx
64009dd5:	push   ecx
64009dd6:	push   esi
64009dd7:	call   0x6400a190
64009ddc:	mov    edx,DWORD PTR [ebx+0x4]
64009ddf:	push   edx
64009de0:	call   0x64010422
64009de5:	mov    eax,DWORD PTR [ebp-0x34]
64009de8:	add    esp,0x14
64009deb:	mov    ecx,DWORD PTR [ebp-0x40]
64009dee:	lea    edx,[edi*8+0x0]
64009df5:	sub    edx,edi
64009df7:	lea    edx,[ecx+edx*4]
64009dfa:	mov    DWORD PTR [ebx+0xc],edx
64009dfd:	lea    edx,[eax*8+0x0]
64009e04:	sub    edx,eax
64009e06:	lea    eax,[ecx+edx*4]
64009e09:	mov    DWORD PTR [ebx+0x8],eax
64009e0c:	mov    DWORD PTR [ebx+0x4],ecx
64009e0f:	jmp    0x64009ef2
64009e14:	mov    ecx,DWORD PTR [ebp-0x38]
64009e17:	mov    esi,DWORD PTR [ebp-0x40]
64009e1a:	push   ecx
64009e1b:	mov    ecx,DWORD PTR [ebp-0x3c]
64009e1e:	push   esi
64009e1f:	call   0x64009f30
64009e24:	push   esi
64009e25:	call   0x64010422
64009e2a:	add    esp,0x4
64009e2d:	push   0x0
64009e2f:	push   0x0
64009e31:	call   0x6401080d
64009e36:	mov    edi,DWORD PTR [ebx+0x8]
64009e39:	mov    esi,DWORD PTR [ebp+0x10]
64009e3c:	mov    ecx,edi
64009e3e:	sub    ecx,esi
64009e40:	mov    eax,0x92492493
64009e45:	imul   ecx
64009e47:	add    edx,ecx
64009e49:	sar    edx,0x4
64009e4c:	mov    eax,edx
64009e4e:	shr    eax,0x1f
64009e51:	add    eax,edx
64009e53:	cmp    eax,0x1
64009e56:	mov    edx,ebx
64009e58:	jae    0x64009eca
64009e5a:	lea    ecx,[esi+0x1c]
64009e5d:	push   ecx
64009e5e:	push   edi
64009e5f:	push   esi
64009e60:	call   0x64009fd0
64009e65:	mov    BYTE PTR [ebp-0x4],0x3
64009e69:	mov    edi,DWORD PTR [ebx+0x8]
64009e6c:	lea    edx,[ebp-0x30]
64009e6f:	push   edx
64009e70:	mov    ecx,edi
64009e72:	sub    ecx,esi
64009e74:	mov    eax,0x92492493
64009e79:	imul   ecx
64009e7b:	add    edx,ecx
64009e7d:	sar    edx,0x4
64009e80:	mov    eax,edx
64009e82:	shr    eax,0x1f
64009e85:	add    eax,edx
64009e87:	mov    esi,0x1
64009e8c:	sub    esi,eax
64009e8e:	mov    edx,ebx
64009e90:	call   0x64009be0
64009e95:	mov    eax,DWORD PTR [ebp+0x10]
64009e98:	mov    DWORD PTR [ebp-0x4],0x0
64009e9f:	add    DWORD PTR [ebx+0x8],0x1c
64009ea3:	mov    ebx,DWORD PTR [ebx+0x8]
64009ea6:	lea    edi,[ebx-0x1c]
64009ea9:	jmp    0x64009eea
64009eab:	mov    ecx,DWORD PTR [ebp-0x3c]
64009eae:	mov    edx,DWORD PTR [ecx+0x8]
64009eb1:	mov    eax,DWORD PTR [ebp+0x10]
64009eb4:	add    edx,0x1c
64009eb7:	push   edx
64009eb8:	add    eax,0x1c
64009ebb:	push   eax
64009ebc:	call   0x64009f30
64009ec1:	push   0x0
64009ec3:	push   0x0
64009ec5:	call   0x6401080d
64009eca:	push   edi
64009ecb:	lea    eax,[edi-0x1c]
64009ece:	push   edi
64009ecf:	push   eax
64009ed0:	mov    DWORD PTR [ebp-0x34],eax
64009ed3:	call   0x64009fd0
64009ed8:	mov    DWORD PTR [ebx+0x8],eax
64009edb:	mov    eax,DWORD PTR [ebp-0x34]
64009ede:	mov    ebx,esi
64009ee0:	call   0x6400a020
64009ee5:	lea    edi,[esi+0x1c]
64009ee8:	mov    eax,esi
64009eea:	lea    ebx,[ebp-0x30]
64009eed:	call   0x6400a000
64009ef2:	cmp    DWORD PTR [ebp-0x18],0x10
64009ef6:	jb     0x64009f04
64009ef8:	mov    ecx,DWORD PTR [ebp-0x2c]
64009efb:	push   ecx
64009efc:	call   0x64010422
64009f01:	add    esp,0x4
64009f04:	mov    ecx,DWORD PTR [ebp-0xc]
64009f07:	mov    DWORD PTR fs:0x0,ecx
64009f0e:	pop    ecx
64009f0f:	pop    edi
64009f10:	pop    esi
64009f11:	pop    ebx
64009f12:	mov    ecx,DWORD PTR [ebp-0x14]
64009f15:	xor    ecx,ebp
64009f17:	call   0x64010c1e
64009f1c:	mov    esp,ebp
64009f1e:	pop    ebp
64009f1f:	ret    0xc
64009f22:	int3   
64009f23:	int3   
64009f24:	int3   
64009f25:	int3   
64009f26:	int3   
64009f27:	int3   
64009f28:	int3   
64009f29:	int3   
64009f2a:	int3   
64009f2b:	int3   
64009f2c:	int3   
64009f2d:	int3   
64009f2e:	int3   
64009f2f:	int3   
64009f30:	mov    eax,DWORD PTR [esp+0x8]
64009f34:	mov    edx,DWORD PTR [esp+0x4]
64009f38:	push   eax
64009f39:	push   ecx
64009f3a:	mov    ecx,DWORD PTR [esp+0x10]
64009f3e:	push   ecx
64009f3f:	push   edx
64009f40:	call   0x6400a190
64009f45:	add    esp,0x10
64009f48:	ret    0x8
64009f4b:	int3   
64009f4c:	int3   
64009f4d:	int3   
64009f4e:	int3   
64009f4f:	int3   
64009f50:	push   ebp
64009f51:	mov    ebp,esp
64009f53:	and    esp,0xfffffff8
64009f56:	push   0xffffffff
64009f58:	push   0x64020af8
64009f5d:	mov    eax,fs:0x0
64009f63:	push   eax
64009f64:	sub    esp,0x4c
64009f67:	mov    eax,ds:0x64029038
64009f6c:	xor    eax,esp
64009f6e:	push   eax
64009f6f:	lea    eax,[esp+0x50]
64009f73:	mov    fs:0x0,eax
64009f79:	push   0x12
64009f7b:	push   0x64024c00
64009f80:	lea    ecx,[esp+0x10]
64009f84:	mov    DWORD PTR [esp+0x28],0xf
64009f8c:	mov    DWORD PTR [esp+0x24],0x0
64009f94:	mov    BYTE PTR [esp+0x14],0x0
64009f99:	call   0x64001880
64009f9e:	lea    eax,[esp+0x8]
64009fa2:	push   eax
64009fa3:	lea    ecx,[esp+0x28]
64009fa7:	mov    DWORD PTR [esp+0x5c],0x0
64009faf:	call   0x64002d00
64009fb4:	push   0x64026f58
64009fb9:	lea    ecx,[esp+0x28]
64009fbd:	push   ecx
64009fbe:	mov    DWORD PTR [esp+0x2c],0x6402231c
64009fc6:	call   0x6401080d
64009fcb:	int3   
64009fcc:	int3   
64009fcd:	int3   
64009fce:	int3   
64009fcf:	int3   
64009fd0:	push   ecx
64009fd1:	mov    ecx,DWORD PTR [esp+0xc]
64009fd5:	mov    BYTE PTR [esp],0x0
64009fd9:	mov    eax,DWORD PTR [esp]
64009fdc:	push   eax
64009fdd:	mov    eax,DWORD PTR [esp+0x10]
64009fe1:	push   ecx
64009fe2:	mov    ecx,DWORD PTR [esp+0x10]
64009fe6:	push   edx
64009fe7:	mov    edx,DWORD PTR [esp+0x1c]
64009feb:	push   eax
64009fec:	call   0x6400a200
64009ff1:	add    esp,0x14
64009ff4:	ret    0xc
64009ff7:	int3   
64009ff8:	int3   
64009ff9:	int3   
64009ffa:	int3   
64009ffb:	int3   
64009ffc:	int3   
64009ffd:	int3   
64009ffe:	int3   
64009fff:	int3   
6400a000:	push   esi
6400a001:	mov    esi,eax
6400a003:	cmp    esi,edi
6400a005:	je     0x6400a01a
6400a007:	push   0xffffffff
6400a009:	push   0x0
6400a00b:	push   ebx
6400a00c:	mov    ecx,esi
6400a00e:	call   0x640017a0
6400a013:	add    esi,0x1c
6400a016:	cmp    esi,edi
6400a018:	jne    0x6400a007
6400a01a:	pop    esi
6400a01b:	ret    
6400a01c:	int3   
6400a01d:	int3   
6400a01e:	int3   
6400a01f:	int3   
6400a020:	push   ecx
6400a021:	push   esi
6400a022:	mov    esi,eax
6400a024:	mov    BYTE PTR [esp+0x4],0x0
6400a029:	mov    eax,DWORD PTR [esp+0x4]
6400a02d:	mov    ecx,DWORD PTR [esp+0x4]
6400a031:	mov    edx,DWORD PTR [esp+0x4]
6400a035:	push   eax
6400a036:	push   ecx
6400a037:	push   edx
6400a038:	push   edi
6400a039:	push   ebx
6400a03a:	mov    ecx,esi
6400a03c:	call   0x6400a340
6400a041:	sub    esi,ebx
6400a043:	mov    eax,0x92492493
6400a048:	imul   esi
6400a04a:	add    edx,esi
6400a04c:	sar    edx,0x4
6400a04f:	mov    eax,edx
6400a051:	shr    eax,0x1f
6400a054:	add    eax,edx
6400a056:	lea    ecx,[eax*8+0x0]
6400a05d:	sub    ecx,eax
6400a05f:	add    ecx,ecx
6400a061:	add    esp,0x14
6400a064:	add    ecx,ecx
6400a066:	mov    eax,edi
6400a068:	sub    eax,ecx
6400a06a:	pop    esi
6400a06b:	pop    ecx
6400a06c:	ret    
6400a06d:	int3   
6400a06e:	int3   
6400a06f:	int3   
6400a070:	mov    ecx,DWORD PTR [esp+0x4]
6400a074:	sub    esp,0xc
6400a077:	test   ecx,ecx
6400a079:	ja     0x6400a097
6400a07b:	xor    ecx,ecx
6400a07d:	lea    edx,[ecx*8+0x0]
6400a084:	sub    edx,ecx
6400a086:	add    edx,edx
6400a088:	add    edx,edx
6400a08a:	push   edx
6400a08b:	call   0x640107a3
6400a090:	add    esp,0x4
6400a093:	add    esp,0xc
6400a096:	ret    
6400a097:	or     eax,0xffffffff
6400a09a:	xor    edx,edx
6400a09c:	div    ecx
6400a09e:	cmp    eax,0x1c
6400a0a1:	jae    0x6400a07d
6400a0a3:	lea    eax,[esp+0x10]
6400a0a7:	push   eax
6400a0a8:	lea    ecx,[esp+0x4]
6400a0ac:	mov    DWORD PTR [esp+0x14],0x0
6400a0b4:	call   0x6401047d
6400a0b9:	push   0x64026e8c
6400a0be:	lea    ecx,[esp+0x4]
6400a0c2:	push   ecx
6400a0c3:	mov    DWORD PTR [esp+0x8],0x64022304
6400a0cb:	call   0x6401080d
6400a0d0:	int3   
6400a0d1:	int3   
6400a0d2:	int3   
6400a0d3:	int3   
6400a0d4:	int3   
6400a0d5:	int3   
6400a0d6:	int3   
6400a0d7:	int3   
6400a0d8:	int3   
6400a0d9:	int3   
6400a0da:	int3   
6400a0db:	int3   
6400a0dc:	int3   
6400a0dd:	int3   
6400a0de:	int3   
6400a0df:	int3   
6400a0e0:	push   ebp
6400a0e1:	mov    ebp,esp
6400a0e3:	push   0xffffffff
6400a0e5:	push   0x64020721
6400a0ea:	mov    eax,fs:0x0
6400a0f0:	push   eax
6400a0f1:	sub    esp,0x10
6400a0f4:	push   ebx
6400a0f5:	push   esi
6400a0f6:	push   edi
6400a0f7:	mov    eax,ds:0x64029038
6400a0fc:	xor    eax,ebp
6400a0fe:	push   eax
6400a0ff:	lea    eax,[ebp-0xc]
6400a102:	mov    fs:0x0,eax
6400a108:	mov    DWORD PTR [ebp-0x10],esp
6400a10b:	mov    edi,ecx
6400a10d:	mov    esi,DWORD PTR [ebp+0x8]
6400a110:	xor    ebx,ebx
6400a112:	mov    DWORD PTR [ebp-0x14],esi
6400a115:	mov    DWORD PTR [ebp-0x4],ebx
6400a118:	cmp    edi,ebx
6400a11a:	jbe    0x6400a178
6400a11c:	mov    DWORD PTR [ebp-0x18],esi
6400a11f:	mov    DWORD PTR [ebp-0x1c],esi
6400a122:	cmp    esi,ebx
6400a124:	mov    BYTE PTR [ebp-0x4],0x1
6400a128:	je     0x6400a145
6400a12a:	mov    eax,DWORD PTR [ebp+0xc]
6400a12d:	push   0xffffffff
6400a12f:	push   ebx
6400a130:	mov    DWORD PTR [esi+0x18],0xf
6400a137:	mov    DWORD PTR [esi+0x14],ebx
6400a13a:	push   eax
6400a13b:	mov    ecx,esi
6400a13d:	mov    BYTE PTR [esi+0x4],bl
6400a140:	call   0x640017a0
6400a145:	sub    edi,0x1
6400a148:	add    esi,0x1c
6400a14b:	mov    BYTE PTR [ebp-0x4],bl
6400a14e:	mov    DWORD PTR [ebp+0x8],esi
6400a151:	jmp    0x6400a118
6400a153:	mov    esi,DWORD PTR [ebp-0x14]
6400a156:	mov    edi,DWORD PTR [ebp+0x8]
6400a159:	cmp    esi,edi
6400a15b:	je     0x6400a16f
6400a15d:	mov    ebx,DWORD PTR [ebp+0x10]
6400a160:	push   esi
6400a161:	mov    ecx,ebx
6400a163:	call   0x6400a1d0
6400a168:	add    esi,0x1c
6400a16b:	cmp    esi,edi
6400a16d:	jne    0x6400a160
6400a16f:	xor    ebx,ebx
6400a171:	push   ebx
6400a172:	push   ebx
6400a173:	call   0x6401080d
6400a178:	mov    ecx,DWORD PTR [ebp-0xc]
6400a17b:	mov    DWORD PTR fs:0x0,ecx
6400a182:	pop    ecx
6400a183:	pop    edi
6400a184:	pop    esi
6400a185:	pop    ebx
6400a186:	mov    esp,ebp
6400a188:	pop    ebp
6400a189:	ret    
6400a18a:	int3   
6400a18b:	int3   
6400a18c:	int3   
6400a18d:	int3   
6400a18e:	int3   
6400a18f:	int3   
6400a190:	push   esi
6400a191:	mov    esi,DWORD PTR [esp+0x8]
6400a195:	push   edi
6400a196:	mov    edi,DWORD PTR [esp+0x10]
6400a19a:	cmp    esi,edi
6400a19c:	je     0x6400a1c8
6400a19e:	push   ebx
6400a19f:	xor    ebx,ebx
6400a1a1:	cmp    DWORD PTR [esi+0x18],0x10
6400a1a5:	jb     0x6400a1b3
6400a1a7:	mov    eax,DWORD PTR [esi+0x4]
6400a1aa:	push   eax
6400a1ab:	call   0x64010422
6400a1b0:	add    esp,0x4
6400a1b3:	mov    DWORD PTR [esi+0x18],0xf
6400a1ba:	mov    DWORD PTR [esi+0x14],ebx
6400a1bd:	mov    BYTE PTR [esi+0x4],bl
6400a1c0:	add    esi,0x1c
6400a1c3:	cmp    esi,edi
6400a1c5:	jne    0x6400a1a1
6400a1c7:	pop    ebx
6400a1c8:	pop    edi
6400a1c9:	pop    esi
6400a1ca:	ret    
6400a1cb:	int3   
6400a1cc:	int3   
6400a1cd:	int3   
6400a1ce:	int3   
6400a1cf:	int3   
6400a1d0:	push   esi
6400a1d1:	mov    esi,DWORD PTR [esp+0x8]
6400a1d5:	cmp    DWORD PTR [esi+0x18],0x10
6400a1d9:	jb     0x6400a1e7
6400a1db:	mov    eax,DWORD PTR [esi+0x4]
6400a1de:	push   eax
6400a1df:	call   0x64010422
6400a1e4:	add    esp,0x4
6400a1e7:	xor    eax,eax
6400a1e9:	mov    DWORD PTR [esi+0x18],0xf
6400a1f0:	mov    DWORD PTR [esi+0x14],eax
6400a1f3:	mov    BYTE PTR [esi+0x4],al
6400a1f6:	pop    esi
6400a1f7:	ret    0x4
6400a1fa:	int3   
6400a1fb:	int3   
6400a1fc:	int3   
6400a1fd:	int3   
6400a1fe:	int3   
6400a1ff:	int3   
6400a200:	push   ebp
6400a201:	mov    ebp,esp
6400a203:	push   0xffffffff
6400a205:	push   0x64020a09
6400a20a:	mov    eax,fs:0x0
6400a210:	push   eax
6400a211:	sub    esp,0x44
6400a214:	mov    eax,ds:0x64029038
6400a219:	xor    eax,ebp
6400a21b:	mov    DWORD PTR [ebp-0x14],eax
6400a21e:	push   ebx
6400a21f:	push   esi
6400a220:	push   edi
6400a221:	push   eax
6400a222:	lea    eax,[ebp-0xc]
6400a225:	mov    fs:0x0,eax
6400a22b:	mov    DWORD PTR [ebp-0x10],esp
6400a22e:	mov    esi,edx
6400a230:	xor    eax,eax
6400a232:	mov    edi,ecx
6400a234:	mov    DWORD PTR [ebp-0x44],esi
6400a237:	mov    DWORD PTR [ebp-0x48],esi
6400a23a:	mov    DWORD PTR [ebp-0x18],0xf
6400a241:	mov    DWORD PTR [ebp-0x1c],eax
6400a244:	mov    BYTE PTR [ebp-0x2c],al
6400a247:	mov    DWORD PTR [ebp-0x4],eax
6400a24a:	mov    BYTE PTR [ebp-0x4],0x1
6400a24e:	mov    edi,edi
6400a250:	cmp    edi,DWORD PTR [ebp+0x8]
6400a253:	je     0x6400a309
6400a259:	mov    DWORD PTR [ebp-0x4c],esi
6400a25c:	mov    DWORD PTR [ebp-0x50],esi
6400a25f:	cmp    esi,eax
6400a261:	mov    BYTE PTR [ebp-0x4],0x2
6400a265:	je     0x6400a282
6400a267:	push   0xffffffff
6400a269:	mov    DWORD PTR [esi+0x14],eax
6400a26c:	mov    DWORD PTR [esi+0x18],0xf
6400a273:	push   eax
6400a274:	mov    BYTE PTR [esi+0x4],al
6400a277:	lea    eax,[ebp-0x30]
6400a27a:	push   eax
6400a27b:	mov    ecx,esi
6400a27d:	call   0x640017a0
6400a282:	mov    BYTE PTR [ebp-0x4],0x1
6400a286:	mov    ebx,DWORD PTR [esi+0x10]
6400a289:	mov    eax,DWORD PTR [esi+0x4]
6400a28c:	mov    ecx,DWORD PTR [esi+0x8]
6400a28f:	mov    edx,DWORD PTR [esi+0xc]
6400a292:	mov    DWORD PTR [ebp-0x34],ebx
6400a295:	mov    ebx,DWORD PTR [edi+0x4]
6400a298:	mov    DWORD PTR [esi+0x4],ebx
6400a29b:	mov    ebx,DWORD PTR [edi+0x8]
6400a29e:	mov    DWORD PTR [esi+0x8],ebx
6400a2a1:	mov    ebx,DWORD PTR [edi+0xc]
6400a2a4:	mov    DWORD PTR [esi+0xc],ebx
6400a2a7:	mov    ebx,DWORD PTR [edi+0x10]
6400a2aa:	mov    DWORD PTR [esi+0x10],ebx
6400a2ad:	mov    DWORD PTR [edi+0x4],eax
6400a2b0:	mov    DWORD PTR [edi+0x8],ecx
6400a2b3:	mov    ecx,DWORD PTR [ebp-0x34]
6400a2b6:	mov    DWORD PTR [edi+0xc],edx
6400a2b9:	mov    edx,DWORD PTR [edi+0x14]
6400a2bc:	mov    DWORD PTR [edi+0x10],ecx
6400a2bf:	mov    eax,DWORD PTR [esi+0x14]
6400a2c2:	mov    DWORD PTR [esi+0x14],edx
6400a2c5:	mov    ecx,DWORD PTR [edi+0x18]
6400a2c8:	mov    DWORD PTR [edi+0x14],eax
6400a2cb:	mov    eax,DWORD PTR [esi+0x18]
6400a2ce:	mov    DWORD PTR [esi+0x18],ecx
6400a2d1:	mov    DWORD PTR [edi+0x18],eax
6400a2d4:	add    esi,0x1c
6400a2d7:	add    edi,0x1c
6400a2da:	mov    DWORD PTR [ebp-0x44],esi
6400a2dd:	xor    eax,eax
6400a2df:	jmp    0x6400a250
6400a2e4:	mov    esi,DWORD PTR [ebp-0x48]
6400a2e7:	mov    edi,DWORD PTR [ebp-0x44]
6400a2ea:	cmp    esi,edi
6400a2ec:	je     0x6400a300
6400a2ee:	mov    ebx,DWORD PTR [ebp+0xc]
6400a2f1:	push   esi
6400a2f2:	mov    ecx,ebx
6400a2f4:	call   0x6400a1d0
6400a2f9:	add    esi,0x1c
6400a2fc:	cmp    esi,edi
6400a2fe:	jne    0x6400a2f1
6400a300:	push   0x0
6400a302:	push   0x0
6400a304:	call   0x6401080d
6400a309:	cmp    DWORD PTR [ebp-0x18],0x10
6400a30d:	jb     0x6400a31b
6400a30f:	mov    edx,DWORD PTR [ebp-0x2c]
6400a312:	push   edx
6400a313:	call   0x64010422
6400a318:	add    esp,0x4
6400a31b:	mov    eax,esi
6400a31d:	mov    ecx,DWORD PTR [ebp-0xc]
6400a320:	mov    DWORD PTR fs:0x0,ecx
6400a327:	pop    ecx
6400a328:	pop    edi
6400a329:	pop    esi
6400a32a:	pop    ebx
6400a32b:	mov    ecx,DWORD PTR [ebp-0x14]
6400a32e:	xor    ecx,ebp
6400a330:	call   0x64010c1e
6400a335:	mov    esp,ebp
6400a337:	pop    ebp
6400a338:	ret    
6400a339:	int3   
6400a33a:	int3   
6400a33b:	int3   
6400a33c:	int3   
6400a33d:	int3   
6400a33e:	int3   
6400a33f:	int3   
6400a340:	push   ecx
6400a341:	mov    eax,ds:0x64029038
6400a346:	xor    eax,esp
6400a348:	mov    DWORD PTR [esp],eax
6400a34b:	cmp    DWORD PTR [esp+0x8],ecx
6400a34f:	mov    eax,DWORD PTR [esp+0xc]
6400a353:	je     0x6400a3b8
6400a355:	push   ebx
6400a356:	push   ebp
6400a357:	push   esi
6400a358:	push   edi
6400a359:	lea    esp,[esp+0x0]
6400a360:	mov    ebp,DWORD PTR [ecx-0x18]
6400a363:	mov    edx,DWORD PTR [eax-0x18]
6400a366:	mov    esi,DWORD PTR [eax-0x14]
6400a369:	mov    edi,DWORD PTR [eax-0x10]
6400a36c:	mov    ebx,DWORD PTR [eax-0xc]
6400a36f:	sub    ecx,0x1c
6400a372:	sub    eax,0x1c
6400a375:	cmp    ecx,DWORD PTR [esp+0x18]
6400a379:	mov    DWORD PTR [eax+0x4],ebp
6400a37c:	mov    ebp,DWORD PTR [ecx+0x8]
6400a37f:	mov    DWORD PTR [eax+0x8],ebp
6400a382:	mov    ebp,DWORD PTR [ecx+0xc]
6400a385:	mov    DWORD PTR [eax+0xc],ebp
6400a388:	mov    ebp,DWORD PTR [ecx+0x10]
6400a38b:	mov    DWORD PTR [eax+0x10],ebp
6400a38e:	mov    DWORD PTR [ecx+0x4],edx
6400a391:	mov    DWORD PTR [ecx+0x8],esi
6400a394:	mov    esi,DWORD PTR [ecx+0x14]
6400a397:	mov    DWORD PTR [ecx+0xc],edi
6400a39a:	mov    DWORD PTR [ecx+0x10],ebx
6400a39d:	mov    edx,DWORD PTR [eax+0x14]
6400a3a0:	mov    DWORD PTR [eax+0x14],esi
6400a3a3:	mov    esi,DWORD PTR [ecx+0x18]
6400a3a6:	mov    DWORD PTR [ecx+0x14],edx
6400a3a9:	mov    edx,DWORD PTR [eax+0x18]
6400a3ac:	mov    DWORD PTR [eax+0x18],esi
6400a3af:	mov    DWORD PTR [ecx+0x18],edx
6400a3b2:	jne    0x6400a360
6400a3b4:	pop    edi
6400a3b5:	pop    esi
6400a3b6:	pop    ebp
6400a3b7:	pop    ebx
6400a3b8:	mov    ecx,DWORD PTR [esp]
6400a3bb:	xor    ecx,esp
6400a3bd:	call   0x64010c1e
6400a3c2:	pop    ecx
6400a3c3:	ret    
6400a3c4:	int3   
6400a3c5:	int3   
6400a3c6:	int3   
6400a3c7:	int3   
6400a3c8:	int3   
6400a3c9:	int3   
6400a3ca:	int3   
6400a3cb:	int3   
6400a3cc:	int3   
6400a3cd:	int3   
6400a3ce:	int3   
6400a3cf:	int3   
6400a3d0:	sub    esp,0x800
6400a3d6:	push   ebx
6400a3d7:	push   ebp
6400a3d8:	xor    ecx,ecx
6400a3da:	push   esi
6400a3db:	lea    eax,[ecx+0x1]
6400a3de:	push   edi
6400a3df:	nop
6400a3e0:	mov    edx,eax
6400a3e2:	and    dl,0x80
6400a3e5:	neg    dl
6400a3e7:	lea    esi,[eax+eax*1]
6400a3ea:	mov    DWORD PTR [esp+ecx*4+0x410],eax
6400a3f1:	mov    DWORD PTR [esp+eax*4+0x10],ecx
6400a3f5:	sbb    edx,edx
6400a3f7:	and    edx,0x1b
6400a3fa:	xor    edx,esi
6400a3fc:	xor    edx,eax
6400a3fe:	and    edx,0xff
6400a404:	add    ecx,0x1
6400a407:	cmp    ecx,0x100
6400a40d:	mov    eax,edx
6400a40f:	jl     0x6400a3e0
6400a411:	mov    eax,0x1
6400a416:	mov    ecx,0x6402b8e0
6400a41b:	jmp    0x6400a420
6400a41d:	lea    ecx,[ecx+0x0]
6400a420:	mov    edx,eax
6400a422:	and    dl,0x80
6400a425:	neg    dl
6400a427:	mov    DWORD PTR [ecx],eax
6400a429:	sbb    edx,edx
6400a42b:	and    edx,0x1b
6400a42e:	add    eax,eax
6400a430:	xor    edx,eax
6400a432:	and    edx,0xff
6400a438:	add    ecx,0x4
6400a43b:	cmp    ecx,0x6402b908
6400a441:	mov    eax,edx
6400a443:	jl     0x6400a420
6400a445:	mov    BYTE PTR ds:0x6402afe0,0x63
6400a44c:	mov    BYTE PTR ds:0x6402d16b,0x0
6400a453:	mov    ebx,0x1
6400a458:	mov    ecx,DWORD PTR [esp+ebx*4+0x10]
6400a45c:	add    ecx,ecx
6400a45e:	add    ecx,ecx
6400a460:	lea    edx,[esp+0x80c]
6400a467:	sub    edx,ecx
6400a469:	mov    eax,DWORD PTR [edx]
6400a46b:	mov    ecx,eax
6400a46d:	sar    ecx,0x7
6400a470:	lea    edx,[eax+eax*1]
6400a473:	or     ecx,edx
6400a475:	and    ecx,0xff
6400a47b:	xor    eax,ecx
6400a47d:	mov    edx,ecx
6400a47f:	sar    edx,0x7
6400a482:	add    ecx,ecx
6400a484:	or     edx,ecx
6400a486:	and    edx,0xff
6400a48c:	xor    eax,edx
6400a48e:	mov    ecx,edx
6400a490:	add    edx,edx
6400a492:	sar    ecx,0x7
6400a495:	or     ecx,edx
6400a497:	and    ecx,0xff
6400a49d:	xor    eax,ecx
6400a49f:	mov    edx,ecx
6400a4a1:	sar    edx,0x7
6400a4a4:	add    ecx,ecx
6400a4a6:	or     edx,ecx
6400a4a8:	xor    edx,0x63
6400a4ab:	and    edx,0xff
6400a4b1:	xor    eax,edx
6400a4b3:	mov    BYTE PTR [ebx+0x6402afe0],al
6400a4b9:	mov    BYTE PTR [eax+0x6402d108],bl
6400a4bf:	add    ebx,0x1
6400a4c2:	cmp    ebx,0x100
6400a4c8:	jl     0x6400a458
6400a4ca:	xor    ecx,ecx
6400a4cc:	lea    esp,[esp+0x0]
6400a4d0:	movzx  edx,BYTE PTR [ecx+0x6402afe0]
6400a4d7:	mov    eax,edx
6400a4d9:	and    al,0x80
6400a4db:	neg    al
6400a4dd:	lea    esi,[edx+edx*1]
6400a4e0:	sbb    eax,eax
6400a4e2:	and    eax,0x1b
6400a4e5:	xor    eax,esi
6400a4e7:	and    eax,0xff
6400a4ec:	mov    esi,eax
6400a4ee:	xor    eax,edx
6400a4f0:	shl    eax,0x8
6400a4f3:	xor    eax,edx
6400a4f5:	shl    eax,0x8
6400a4f8:	xor    eax,edx
6400a4fa:	shl    eax,0x8
6400a4fd:	xor    eax,esi
6400a4ff:	mov    DWORD PTR [ecx*4+0x6402cd08],eax
6400a506:	rol    eax,0x8
6400a509:	mov    DWORD PTR [ecx*4+0x6402c908],eax
6400a510:	rol    eax,0x8
6400a513:	mov    DWORD PTR [ecx*4+0x6402c508],eax
6400a51a:	rol    eax,0x8
6400a51d:	mov    DWORD PTR [ecx*4+0x6402c108],eax
6400a524:	movzx  eax,BYTE PTR [ecx+0x6402d108]
6400a52b:	test   eax,eax
6400a52d:	je     0x6400a581
6400a52f:	mov    esi,DWORD PTR [esp+eax*4+0x10]
6400a533:	mov    edx,DWORD PTR [esp+0x48]
6400a537:	lea    eax,[esi+edx*1]
6400a53a:	cdq    
6400a53b:	mov    edi,0xff
6400a540:	idiv   edi
6400a542:	mov    eax,DWORD PTR [esp+0x34]
6400a546:	add    eax,esi
6400a548:	mov    ebp,DWORD PTR [esp+edx*4+0x410]
6400a54f:	cdq    
6400a550:	idiv   edi
6400a552:	mov    ebx,DWORD PTR [esp+edx*4+0x410]
6400a559:	mov    edx,DWORD PTR [esp+0x44]
6400a55d:	lea    eax,[esi+edx*1]
6400a560:	cdq    
6400a561:	idiv   edi
6400a563:	mov    eax,DWORD PTR [esp+0x3c]
6400a567:	add    eax,esi
6400a569:	mov    esi,0xff
6400a56e:	mov    edi,DWORD PTR [esp+edx*4+0x410]
6400a575:	cdq    
6400a576:	idiv   esi
6400a578:	mov    edx,DWORD PTR [esp+edx*4+0x410]
6400a57f:	jmp    0x6400a589
6400a581:	xor    ebp,ebp
6400a583:	xor    ebx,ebx
6400a585:	xor    edi,edi
6400a587:	xor    edx,edx
6400a589:	shl    edx,0x8
6400a58c:	xor    edx,edi
6400a58e:	shl    edx,0x8
6400a591:	xor    edx,ebx
6400a593:	shl    edx,0x8
6400a596:	xor    edx,ebp
6400a598:	mov    DWORD PTR [ecx*4+0x6402bd08],edx
6400a59f:	rol    edx,0x8
6400a5a2:	mov    DWORD PTR [ecx*4+0x6402b908],edx
6400a5a9:	rol    edx,0x8
6400a5ac:	mov    DWORD PTR [ecx*4+0x6402b4e0],edx
6400a5b3:	rol    edx,0x8
6400a5b6:	mov    DWORD PTR [ecx*4+0x6402b0e0],edx
6400a5bd:	add    ecx,0x1
6400a5c0:	cmp    ecx,0x100
6400a5c6:	jl     0x6400a4d0
6400a5cc:	pop    edi
6400a5cd:	pop    esi
6400a5ce:	pop    ebp
6400a5cf:	pop    ebx
6400a5d0:	add    esp,0x800
6400a5d6:	ret    
6400a5d7:	int3   
6400a5d8:	int3   
6400a5d9:	int3   
6400a5da:	int3   
6400a5db:	int3   
6400a5dc:	int3   
6400a5dd:	int3   
6400a5de:	int3   
6400a5df:	int3   
6400a5e0:	cmp    DWORD PTR ds:0x6402d20c,0x0
6400a5e7:	push   ebx
6400a5e8:	push   esi
6400a5e9:	push   edi
6400a5ea:	mov    edi,eax
6400a5ec:	jne    0x6400a5fd
6400a5ee:	call   0x6400a3d0
6400a5f3:	mov    DWORD PTR ds:0x6402d20c,0x1
6400a5fd:	lea    eax,[edi+0x8]
6400a600:	mov    ecx,0x6402a312
6400a605:	mov    esi,eax
6400a607:	mov    DWORD PTR [edi],0xa
6400a60d:	mov    DWORD PTR [edi+0x4],eax
6400a610:	sub    esi,ecx
6400a612:	movzx  ebx,BYTE PTR [ecx-0x1]
6400a616:	xor    edx,edx
6400a618:	mov    dh,BYTE PTR [ecx+0x1]
6400a61b:	add    ecx,0x4
6400a61e:	mov    dl,BYTE PTR [ecx-0x4]
6400a621:	shl    edx,0x8
6400a624:	or     edx,ebx
6400a626:	movzx  ebx,BYTE PTR [ecx-0x6]
6400a62a:	shl    edx,0x8
6400a62d:	or     edx,ebx
6400a62f:	cmp    ecx,0x6402a322
6400a635:	mov    DWORD PTR [esi+ecx*1-0x4],edx
6400a639:	jl     0x6400a612
6400a63b:	mov    edi,DWORD PTR [edi]
6400a63d:	sub    edi,0xa
6400a640:	je     0x6400a8fc
6400a646:	sub    edi,0x2
6400a649:	je     0x6400a72f
6400a64f:	sub    edi,0x2
6400a652:	jne    0x6400aadf
6400a658:	push   ebp
6400a659:	mov    ebp,0x6402b8e0
6400a65e:	mov    edi,edi
6400a660:	mov    edi,DWORD PTR [eax+0x1c]
6400a663:	xor    edx,edx
6400a665:	mov    ecx,edi
6400a667:	and    ecx,0xff
6400a66d:	mov    dh,BYTE PTR [ecx+0x6402afe0]
6400a673:	movzx  ecx,BYTE PTR [eax+0x1f]
6400a677:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400a67e:	xor    edx,ecx
6400a680:	movzx  ecx,BYTE PTR [eax+0x1e]
6400a684:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400a68b:	shl    edx,0x8
6400a68e:	xor    edx,ecx
6400a690:	movzx  ecx,BYTE PTR [eax+0x1d]
6400a694:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400a69b:	mov    esi,DWORD PTR [eax+0x8]
6400a69e:	shl    edx,0x8
6400a6a1:	xor    edx,ecx
6400a6a3:	xor    edx,DWORD PTR [eax]
6400a6a5:	xor    ebx,ebx
6400a6a7:	mov    ecx,edx
6400a6a9:	xor    ecx,DWORD PTR [ebp+0x0]
6400a6ac:	mov    edx,DWORD PTR [eax+0x4]
6400a6af:	xor    edx,ecx
6400a6b1:	mov    DWORD PTR [eax+0x20],ecx
6400a6b4:	mov    ecx,DWORD PTR [eax+0xc]
6400a6b7:	xor    esi,edx
6400a6b9:	xor    ecx,esi
6400a6bb:	mov    DWORD PTR [eax+0x2c],ecx
6400a6be:	mov    DWORD PTR [eax+0x24],edx
6400a6c1:	movzx  edx,BYTE PTR [eax+0x2f]
6400a6c5:	mov    DWORD PTR [eax+0x28],esi
6400a6c8:	mov    bh,BYTE PTR [edx+0x6402afe0]
6400a6ce:	movzx  edx,BYTE PTR [eax+0x2e]
6400a6d2:	movzx  edx,BYTE PTR [edx+0x6402afe0]
6400a6d9:	xor    ebx,edx
6400a6db:	movzx  edx,BYTE PTR [eax+0x2d]
6400a6df:	movzx  edx,BYTE PTR [edx+0x6402afe0]
6400a6e6:	and    ecx,0xff
6400a6ec:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400a6f3:	shl    ebx,0x8
6400a6f6:	xor    ebx,edx
6400a6f8:	mov    edx,DWORD PTR [eax+0x14]
6400a6fb:	shl    ebx,0x8
6400a6fe:	xor    ecx,ebx
6400a700:	xor    ecx,DWORD PTR [eax+0x10]
6400a703:	add    ebp,0x4
6400a706:	xor    edx,ecx
6400a708:	mov    DWORD PTR [eax+0x30],ecx
6400a70b:	mov    ecx,DWORD PTR [eax+0x18]
6400a70e:	xor    ecx,edx
6400a710:	mov    DWORD PTR [eax+0x38],ecx
6400a713:	xor    ecx,edi
6400a715:	mov    DWORD PTR [eax+0x34],edx
6400a718:	mov    DWORD PTR [eax+0x3c],ecx
6400a71b:	add    eax,0x20
6400a71e:	cmp    ebp,0x6402b8fc
6400a724:	jl     0x6400a660
6400a72a:	pop    ebp
6400a72b:	pop    edi
6400a72c:	pop    esi
6400a72d:	pop    ebx
6400a72e:	ret    
6400a72f:	mov    esi,0x6402b8e4
6400a734:	mov    edi,DWORD PTR [eax+0x14]
6400a737:	xor    ecx,ecx
6400a739:	mov    edx,edi
6400a73b:	and    edx,0xff
6400a741:	mov    ch,BYTE PTR [edx+0x6402afe0]
6400a747:	movzx  edx,BYTE PTR [eax+0x17]
6400a74b:	movzx  edx,BYTE PTR [edx+0x6402afe0]
6400a752:	xor    ecx,edx
6400a754:	movzx  edx,BYTE PTR [eax+0x16]
6400a758:	movzx  edx,BYTE PTR [edx+0x6402afe0]
6400a75f:	shl    ecx,0x8
6400a762:	xor    ecx,edx
6400a764:	movzx  edx,BYTE PTR [eax+0x15]
6400a768:	movzx  edx,BYTE PTR [edx+0x6402afe0]
6400a76f:	shl    ecx,0x8
6400a772:	xor    ecx,edx
6400a774:	xor    ecx,DWORD PTR [esi-0x4]
6400a777:	mov    edx,DWORD PTR [eax+0x4]
6400a77a:	xor    ecx,DWORD PTR [eax]
6400a77c:	xor    edx,ecx
6400a77e:	mov    DWORD PTR [eax+0x18],ecx
6400a781:	mov    ecx,DWORD PTR [eax+0x8]
6400a784:	xor    ecx,edx
6400a786:	mov    DWORD PTR [eax+0x1c],edx
6400a789:	mov    edx,DWORD PTR [eax+0xc]
6400a78c:	xor    edx,ecx
6400a78e:	mov    DWORD PTR [eax+0x20],ecx
6400a791:	mov    ecx,DWORD PTR [eax+0x10]
6400a794:	xor    ecx,edx
6400a796:	mov    DWORD PTR [eax+0x28],ecx
6400a799:	mov    DWORD PTR [eax+0x24],edx
6400a79c:	xor    ecx,edi
6400a79e:	mov    DWORD PTR [eax+0x2c],ecx
6400a7a1:	and    ecx,0xff
6400a7a7:	xor    edx,edx
6400a7a9:	mov    dh,BYTE PTR [ecx+0x6402afe0]
6400a7af:	movzx  ecx,BYTE PTR [eax+0x2f]
6400a7b3:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400a7ba:	xor    edx,ecx
6400a7bc:	movzx  ecx,BYTE PTR [eax+0x2e]
6400a7c0:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400a7c7:	shl    edx,0x8
6400a7ca:	xor    edx,ecx
6400a7cc:	movzx  ecx,BYTE PTR [eax+0x2d]
6400a7d0:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400a7d7:	mov    edi,DWORD PTR [eax+0x28]
6400a7da:	shl    edx,0x8
6400a7dd:	xor    edx,ecx
6400a7df:	xor    edx,DWORD PTR [eax+0x18]
6400a7e2:	mov    ecx,edx
6400a7e4:	xor    ecx,DWORD PTR [esi]
6400a7e6:	mov    edx,DWORD PTR [eax+0x1c]
6400a7e9:	xor    edx,ecx
6400a7eb:	mov    DWORD PTR [eax+0x30],ecx
6400a7ee:	mov    ecx,DWORD PTR [eax+0x20]
6400a7f1:	xor    ecx,edx
6400a7f3:	mov    DWORD PTR [eax+0x34],edx
6400a7f6:	mov    edx,DWORD PTR [eax+0x24]
6400a7f9:	xor    edx,ecx
6400a7fb:	mov    DWORD PTR [eax+0x38],ecx
6400a7fe:	mov    ecx,DWORD PTR [eax+0x2c]
6400a801:	xor    edi,edx
6400a803:	mov    DWORD PTR [eax+0x3c],edx
6400a806:	xor    ecx,edi
6400a808:	mov    DWORD PTR [eax+0x44],ecx
6400a80b:	and    ecx,0xff
6400a811:	xor    edx,edx
6400a813:	mov    DWORD PTR [eax+0x40],edi
6400a816:	mov    dh,BYTE PTR [ecx+0x6402afe0]
6400a81c:	movzx  ecx,BYTE PTR [eax+0x47]
6400a820:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400a827:	xor    edx,ecx
6400a829:	movzx  ecx,BYTE PTR [eax+0x46]
6400a82d:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400a834:	shl    edx,0x8
6400a837:	xor    edx,ecx
6400a839:	movzx  ecx,BYTE PTR [eax+0x45]
6400a83d:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400a844:	shl    edx,0x8
6400a847:	xor    edx,ecx
6400a849:	xor    edx,DWORD PTR [esi+0x4]
6400a84c:	mov    ecx,edx
6400a84e:	xor    ecx,DWORD PTR [eax+0x30]
6400a851:	mov    edx,DWORD PTR [eax+0x34]
6400a854:	xor    edx,ecx
6400a856:	mov    DWORD PTR [eax+0x48],ecx
6400a859:	mov    ecx,DWORD PTR [eax+0x38]
6400a85c:	xor    ecx,edx
6400a85e:	mov    DWORD PTR [eax+0x4c],edx
6400a861:	mov    edx,DWORD PTR [eax+0x3c]
6400a864:	xor    edx,ecx
6400a866:	mov    DWORD PTR [eax+0x50],ecx
6400a869:	mov    ecx,DWORD PTR [eax+0x44]
6400a86c:	xor    edi,edx
6400a86e:	mov    DWORD PTR [eax+0x54],edx
6400a871:	xor    ecx,edi
6400a873:	mov    DWORD PTR [eax+0x5c],ecx
6400a876:	and    ecx,0xff
6400a87c:	xor    edx,edx
6400a87e:	mov    DWORD PTR [eax+0x58],edi
6400a881:	mov    dh,BYTE PTR [ecx+0x6402afe0]
6400a887:	movzx  ecx,BYTE PTR [eax+0x5f]
6400a88b:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400a892:	xor    edx,ecx
6400a894:	movzx  ecx,BYTE PTR [eax+0x5e]
6400a898:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400a89f:	shl    edx,0x8
6400a8a2:	xor    edx,ecx
6400a8a4:	movzx  ecx,BYTE PTR [eax+0x5d]
6400a8a8:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400a8af:	shl    edx,0x8
6400a8b2:	xor    edx,ecx
6400a8b4:	xor    edx,DWORD PTR [esi+0x8]
6400a8b7:	add    esi,0x10
6400a8ba:	mov    ecx,edx
6400a8bc:	xor    ecx,DWORD PTR [eax+0x48]
6400a8bf:	mov    edx,DWORD PTR [eax+0x4c]
6400a8c2:	xor    edx,ecx
6400a8c4:	mov    DWORD PTR [eax+0x60],ecx
6400a8c7:	mov    ecx,DWORD PTR [eax+0x50]
6400a8ca:	xor    ecx,edx
6400a8cc:	mov    DWORD PTR [eax+0x64],edx
6400a8cf:	mov    edx,DWORD PTR [eax+0x54]
6400a8d2:	xor    edx,ecx
6400a8d4:	mov    DWORD PTR [eax+0x68],ecx
6400a8d7:	mov    DWORD PTR [eax+0x6c],edx
6400a8da:	mov    ecx,edi
6400a8dc:	xor    ecx,edx
6400a8de:	mov    edx,DWORD PTR [eax+0x5c]
6400a8e1:	xor    edx,ecx
6400a8e3:	mov    DWORD PTR [eax+0x70],ecx
6400a8e6:	mov    DWORD PTR [eax+0x74],edx
6400a8e9:	add    eax,0x60
6400a8ec:	cmp    esi,0x6402b904
6400a8f2:	jl     0x6400a734
6400a8f8:	pop    edi
6400a8f9:	pop    esi
6400a8fa:	pop    ebx
6400a8fb:	ret    
6400a8fc:	mov    ecx,0x6402b8e4
6400a901:	mov    esi,DWORD PTR [eax+0xc]
6400a904:	mov    edx,esi
6400a906:	and    edx,0xff
6400a90c:	xor    ebx,ebx
6400a90e:	mov    bh,BYTE PTR [edx+0x6402afe0]
6400a914:	movzx  edx,BYTE PTR [eax+0xf]
6400a918:	movzx  edx,BYTE PTR [edx+0x6402afe0]
6400a91f:	xor    ebx,edx
6400a921:	movzx  edx,BYTE PTR [eax+0xe]
6400a925:	movzx  edx,BYTE PTR [edx+0x6402afe0]
6400a92c:	mov    edi,DWORD PTR [eax+0x4]
6400a92f:	shl    ebx,0x8
6400a932:	xor    ebx,edx
6400a934:	movzx  edx,BYTE PTR [eax+0xd]
6400a938:	movzx  edx,BYTE PTR [edx+0x6402afe0]
6400a93f:	shl    ebx,0x8
6400a942:	xor    ebx,edx
6400a944:	xor    ebx,DWORD PTR [ecx-0x4]
6400a947:	mov    edx,ebx
6400a949:	xor    edx,DWORD PTR [eax]
6400a94b:	mov    DWORD PTR [eax+0x10],edx
6400a94e:	xor    edi,edx
6400a950:	mov    edx,DWORD PTR [eax+0x8]
6400a953:	xor    edx,edi
6400a955:	xor    esi,edx
6400a957:	mov    DWORD PTR [eax+0x18],edx
6400a95a:	mov    DWORD PTR [eax+0x1c],esi
6400a95d:	and    esi,0xff
6400a963:	xor    edx,edx
6400a965:	mov    DWORD PTR [eax+0x14],edi
6400a968:	mov    dh,BYTE PTR [esi+0x6402afe0]
6400a96e:	movzx  esi,BYTE PTR [eax+0x1f]
6400a972:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400a979:	xor    edx,esi
6400a97b:	movzx  esi,BYTE PTR [eax+0x1e]
6400a97f:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400a986:	shl    edx,0x8
6400a989:	xor    edx,esi
6400a98b:	movzx  esi,BYTE PTR [eax+0x1d]
6400a98f:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400a996:	shl    edx,0x8
6400a999:	xor    edx,esi
6400a99b:	xor    edx,DWORD PTR [ecx]
6400a99d:	mov    esi,edi
6400a99f:	xor    edx,DWORD PTR [eax+0x10]
6400a9a2:	xor    esi,edx
6400a9a4:	mov    DWORD PTR [eax+0x20],edx
6400a9a7:	mov    edx,DWORD PTR [eax+0x18]
6400a9aa:	xor    edx,esi
6400a9ac:	mov    DWORD PTR [eax+0x24],esi
6400a9af:	mov    esi,DWORD PTR [eax+0x1c]
6400a9b2:	xor    esi,edx
6400a9b4:	mov    DWORD PTR [eax+0x28],edx
6400a9b7:	mov    DWORD PTR [eax+0x2c],esi
6400a9ba:	and    esi,0xff
6400a9c0:	xor    edx,edx
6400a9c2:	mov    dh,BYTE PTR [esi+0x6402afe0]
6400a9c8:	movzx  esi,BYTE PTR [eax+0x2f]
6400a9cc:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400a9d3:	xor    edx,esi
6400a9d5:	movzx  esi,BYTE PTR [eax+0x2e]
6400a9d9:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400a9e0:	shl    edx,0x8
6400a9e3:	xor    edx,esi
6400a9e5:	movzx  esi,BYTE PTR [eax+0x2d]
6400a9e9:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400a9f0:	shl    edx,0x8
6400a9f3:	xor    edx,esi
6400a9f5:	xor    edx,DWORD PTR [ecx+0x4]
6400a9f8:	mov    esi,DWORD PTR [eax+0x24]
6400a9fb:	xor    edx,DWORD PTR [eax+0x20]
6400a9fe:	xor    esi,edx
6400aa00:	mov    DWORD PTR [eax+0x30],edx
6400aa03:	mov    edx,DWORD PTR [eax+0x28]
6400aa06:	xor    edx,esi
6400aa08:	mov    DWORD PTR [eax+0x34],esi
6400aa0b:	mov    esi,DWORD PTR [eax+0x2c]
6400aa0e:	xor    esi,edx
6400aa10:	mov    DWORD PTR [eax+0x3c],esi
6400aa13:	mov    DWORD PTR [eax+0x38],edx
6400aa16:	and    esi,0xff
6400aa1c:	xor    edx,edx
6400aa1e:	mov    dh,BYTE PTR [esi+0x6402afe0]
6400aa24:	movzx  esi,BYTE PTR [eax+0x3f]
6400aa28:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400aa2f:	xor    edx,esi
6400aa31:	movzx  esi,BYTE PTR [eax+0x3e]
6400aa35:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400aa3c:	shl    edx,0x8
6400aa3f:	xor    edx,esi
6400aa41:	movzx  esi,BYTE PTR [eax+0x3d]
6400aa45:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400aa4c:	shl    edx,0x8
6400aa4f:	xor    edx,esi
6400aa51:	xor    edx,DWORD PTR [ecx+0x8]
6400aa54:	mov    esi,DWORD PTR [eax+0x34]
6400aa57:	xor    edx,DWORD PTR [eax+0x30]
6400aa5a:	add    ecx,0x14
6400aa5d:	xor    esi,edx
6400aa5f:	mov    DWORD PTR [eax+0x40],edx
6400aa62:	mov    edx,DWORD PTR [eax+0x38]
6400aa65:	xor    edx,esi
6400aa67:	mov    DWORD PTR [eax+0x44],esi
6400aa6a:	mov    esi,DWORD PTR [eax+0x3c]
6400aa6d:	xor    esi,edx
6400aa6f:	mov    DWORD PTR [eax+0x48],edx
6400aa72:	mov    DWORD PTR [eax+0x4c],esi
6400aa75:	and    esi,0xff
6400aa7b:	xor    edx,edx
6400aa7d:	mov    dh,BYTE PTR [esi+0x6402afe0]
6400aa83:	movzx  esi,BYTE PTR [eax+0x4f]
6400aa87:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400aa8e:	xor    edx,esi
6400aa90:	movzx  esi,BYTE PTR [eax+0x4e]
6400aa94:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400aa9b:	shl    edx,0x8
6400aa9e:	xor    edx,esi
6400aaa0:	movzx  esi,BYTE PTR [eax+0x4d]
6400aaa4:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400aaab:	shl    edx,0x8
6400aaae:	xor    edx,esi
6400aab0:	xor    edx,DWORD PTR [ecx-0x8]
6400aab3:	mov    esi,DWORD PTR [eax+0x44]
6400aab6:	xor    edx,DWORD PTR [eax+0x40]
6400aab9:	add    eax,0x50
6400aabc:	xor    esi,edx
6400aabe:	mov    DWORD PTR [eax],edx
6400aac0:	mov    edx,DWORD PTR [eax-0x8]
6400aac3:	xor    edx,esi
6400aac5:	mov    DWORD PTR [eax+0x4],esi
6400aac8:	mov    esi,DWORD PTR [eax-0x4]
6400aacb:	xor    esi,edx
6400aacd:	cmp    ecx,0x6402b90c
6400aad3:	mov    DWORD PTR [eax+0x8],edx
6400aad6:	mov    DWORD PTR [eax+0xc],esi
6400aad9:	jl     0x6400a901
6400aadf:	pop    edi
6400aae0:	pop    esi
6400aae1:	pop    ebx
6400aae2:	ret    
6400aae3:	int3   
6400aae4:	int3   
6400aae5:	int3   
6400aae6:	int3   
6400aae7:	int3   
6400aae8:	int3   
6400aae9:	int3   
6400aaea:	int3   
6400aaeb:	int3   
6400aaec:	int3   
6400aaed:	int3   
6400aaee:	int3   
6400aaef:	int3   
6400aaf0:	sub    esp,0x11c
6400aaf6:	push   esi
6400aaf7:	push   edi
6400aaf8:	mov    edi,eax
6400aafa:	lea    esi,[edi+0x8]
6400aafd:	lea    eax,[esp+0x8]
6400ab01:	mov    DWORD PTR [edi],0xa
6400ab07:	mov    DWORD PTR [edi+0x4],esi
6400ab0a:	call   0x6400a5e0
6400ab0f:	mov    eax,DWORD PTR [esp+0x8]
6400ab13:	shl    eax,0x4
6400ab16:	add    eax,DWORD PTR [esp+0xc]
6400ab1a:	add    esi,0x4
6400ab1d:	mov    ecx,DWORD PTR [eax]
6400ab1f:	mov    DWORD PTR [esi-0x4],ecx
6400ab22:	mov    edx,DWORD PTR [eax+0x4]
6400ab25:	add    eax,0x4
6400ab28:	mov    DWORD PTR [esi],edx
6400ab2a:	mov    ecx,DWORD PTR [eax+0x4]
6400ab2d:	add    eax,0x4
6400ab30:	add    esi,0x4
6400ab33:	mov    DWORD PTR [esi],ecx
6400ab35:	mov    edx,DWORD PTR [eax+0x4]
6400ab38:	add    eax,0x4
6400ab3b:	add    esi,0x4
6400ab3e:	mov    DWORD PTR [esi],edx
6400ab40:	mov    ecx,DWORD PTR [edi]
6400ab42:	sub    ecx,0x1
6400ab45:	add    esi,0x4
6400ab48:	sub    eax,0x1c
6400ab4b:	test   ecx,ecx
6400ab4d:	jle    0x6400aca5
6400ab53:	movzx  edx,BYTE PTR [eax+0x3]
6400ab57:	movzx  edx,BYTE PTR [edx+0x6402afe0]
6400ab5e:	mov    edx,DWORD PTR [edx*4+0x6402b0e0]
6400ab65:	movzx  edi,BYTE PTR [eax+0x2]
6400ab69:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400ab70:	xor    edx,DWORD PTR [edi*4+0x6402b4e0]
6400ab77:	movzx  edi,BYTE PTR [eax+0x1]
6400ab7b:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400ab82:	xor    edx,DWORD PTR [edi*4+0x6402b908]
6400ab89:	mov    edi,DWORD PTR [eax]
6400ab8b:	and    edi,0xff
6400ab91:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400ab98:	xor    edx,DWORD PTR [edi*4+0x6402bd08]
6400ab9f:	add    eax,0x10
6400aba2:	mov    DWORD PTR [esi],edx
6400aba4:	mov    edx,DWORD PTR [eax-0xc]
6400aba7:	movzx  edi,BYTE PTR [eax-0x9]
6400abab:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400abb2:	and    edx,0xff
6400abb8:	movzx  edx,BYTE PTR [edx+0x6402afe0]
6400abbf:	mov    edx,DWORD PTR [edx*4+0x6402bd08]
6400abc6:	xor    edx,DWORD PTR [edi*4+0x6402b0e0]
6400abcd:	movzx  edi,BYTE PTR [eax-0xa]
6400abd1:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400abd8:	xor    edx,DWORD PTR [edi*4+0x6402b4e0]
6400abdf:	movzx  edi,BYTE PTR [eax-0xb]
6400abe3:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400abea:	xor    edx,DWORD PTR [edi*4+0x6402b908]
6400abf1:	sub    ecx,0x1
6400abf4:	mov    DWORD PTR [esi+0x4],edx
6400abf7:	mov    edx,DWORD PTR [eax-0x8]
6400abfa:	movzx  edi,BYTE PTR [eax-0x5]
6400abfe:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400ac05:	and    edx,0xff
6400ac0b:	movzx  edx,BYTE PTR [edx+0x6402afe0]
6400ac12:	mov    edx,DWORD PTR [edx*4+0x6402bd08]
6400ac19:	xor    edx,DWORD PTR [edi*4+0x6402b0e0]
6400ac20:	movzx  edi,BYTE PTR [eax-0x6]
6400ac24:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400ac2b:	xor    edx,DWORD PTR [edi*4+0x6402b4e0]
6400ac32:	movzx  edi,BYTE PTR [eax-0x7]
6400ac36:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400ac3d:	xor    edx,DWORD PTR [edi*4+0x6402b908]
6400ac44:	add    esi,0x10
6400ac47:	mov    DWORD PTR [esi-0x8],edx
6400ac4a:	mov    edx,DWORD PTR [eax-0x4]
6400ac4d:	movzx  edi,BYTE PTR [eax-0x1]
6400ac51:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400ac58:	and    edx,0xff
6400ac5e:	movzx  edx,BYTE PTR [edx+0x6402afe0]
6400ac65:	mov    edx,DWORD PTR [edx*4+0x6402bd08]
6400ac6c:	xor    edx,DWORD PTR [edi*4+0x6402b0e0]
6400ac73:	movzx  edi,BYTE PTR [eax-0x2]
6400ac77:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400ac7e:	xor    edx,DWORD PTR [edi*4+0x6402b4e0]
6400ac85:	movzx  edi,BYTE PTR [eax-0x3]
6400ac89:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400ac90:	xor    edx,DWORD PTR [edi*4+0x6402b908]
6400ac97:	sub    eax,0x20
6400ac9a:	test   ecx,ecx
6400ac9c:	mov    DWORD PTR [esi-0x4],edx
6400ac9f:	jg     0x6400ab53
6400aca5:	mov    ecx,DWORD PTR [eax]
6400aca7:	mov    DWORD PTR [esi],ecx
6400aca9:	mov    edx,DWORD PTR [eax+0x4]
6400acac:	add    esi,0x4
6400acaf:	add    eax,0x4
6400acb2:	mov    DWORD PTR [esi],edx
6400acb4:	mov    ecx,DWORD PTR [eax+0x4]
6400acb7:	add    esi,0x4
6400acba:	add    eax,0x4
6400acbd:	mov    DWORD PTR [esi],ecx
6400acbf:	mov    edx,DWORD PTR [eax+0x4]
6400acc2:	pop    edi
6400acc3:	mov    DWORD PTR [esi+0x4],edx
6400acc6:	pop    esi
6400acc7:	add    esp,0x11c
6400accd:	ret    
6400acce:	int3   
6400accf:	int3   
6400acd0:	sub    esp,0x10
6400acd3:	xor    ecx,ecx
6400acd5:	push   ebx
6400acd6:	push   ebp
6400acd7:	mov    ebp,DWORD PTR [esp+0x1c]
6400acdb:	push   esi
6400acdc:	push   edi
6400acdd:	mov    edi,eax
6400acdf:	mov    ch,BYTE PTR [edi+0x3]
6400ace2:	movzx  edx,BYTE PTR [edi+0x1]
6400ace6:	mov    eax,DWORD PTR [ebp+0x4]
6400ace9:	movzx  esi,BYTE PTR [edi+0x9]
6400aced:	mov    cl,BYTE PTR [edi+0x2]
6400acf0:	movzx  ebx,BYTE PTR [edi+0xd]
6400acf4:	add    eax,0x4
6400acf7:	add    eax,0x4
6400acfa:	add    eax,0x4
6400acfd:	shl    ecx,0x8
6400ad00:	or     ecx,edx
6400ad02:	movzx  edx,BYTE PTR [edi]
6400ad05:	shl    ecx,0x8
6400ad08:	or     ecx,edx
6400ad0a:	xor    ecx,DWORD PTR [eax-0xc]
6400ad0d:	movzx  edx,BYTE PTR [edi+0x5]
6400ad11:	mov    DWORD PTR [esp+0x24],ecx
6400ad15:	xor    ecx,ecx
6400ad17:	mov    ch,BYTE PTR [edi+0x7]
6400ad1a:	add    eax,0x4
6400ad1d:	mov    cl,BYTE PTR [edi+0x6]
6400ad20:	shl    ecx,0x8
6400ad23:	or     ecx,edx
6400ad25:	movzx  edx,BYTE PTR [edi+0x4]
6400ad29:	shl    ecx,0x8
6400ad2c:	or     ecx,edx
6400ad2e:	xor    edx,edx
6400ad30:	mov    dh,BYTE PTR [edi+0xb]
6400ad33:	xor    ecx,DWORD PTR [eax-0xc]
6400ad36:	mov    dl,BYTE PTR [edi+0xa]
6400ad39:	shl    edx,0x8
6400ad3c:	or     edx,esi
6400ad3e:	movzx  esi,BYTE PTR [edi+0x8]
6400ad42:	shl    edx,0x8
6400ad45:	or     edx,esi
6400ad47:	xor    edx,DWORD PTR [eax-0x8]
6400ad4a:	mov    esi,edx
6400ad4c:	xor    edx,edx
6400ad4e:	mov    dh,BYTE PTR [edi+0xf]
6400ad51:	mov    DWORD PTR [esp+0x10],esi
6400ad55:	mov    dl,BYTE PTR [edi+0xe]
6400ad58:	movzx  edi,BYTE PTR [edi+0xc]
6400ad5c:	shl    edx,0x8
6400ad5f:	or     edx,ebx
6400ad61:	shl    edx,0x8
6400ad64:	or     edx,edi
6400ad66:	xor    edx,DWORD PTR [eax-0x4]
6400ad69:	cmp    DWORD PTR [esp+0x28],0x0
6400ad6e:	jne    0x6400b209
6400ad74:	mov    ebp,DWORD PTR [ebp+0x0]
6400ad77:	sar    ebp,1
6400ad79:	sub    ebp,0x1
6400ad7c:	test   ebp,ebp
6400ad7e:	jle    0x6400afaf
6400ad84:	mov    ebx,esi
6400ad86:	movzx  edi,dh
6400ad89:	mov    esi,DWORD PTR [edi*4+0x6402b908]
6400ad90:	mov    edi,ecx
6400ad92:	shr    edi,0x18
6400ad95:	shr    ebx,0x10
6400ad98:	and    ebx,0xff
6400ad9e:	xor    esi,DWORD PTR [ebx*4+0x6402b4e0]
6400ada5:	add    eax,0x4
6400ada8:	xor    esi,DWORD PTR [edi*4+0x6402b0e0]
6400adaf:	mov    edi,DWORD PTR [esp+0x24]
6400adb3:	and    edi,0xff
6400adb9:	mov    DWORD PTR [esp+0x28],esi
6400adbd:	xor    esi,DWORD PTR [edi*4+0x6402bd08]
6400adc4:	movzx  edi,BYTE PTR [esp+0x25]
6400adc9:	xor    esi,DWORD PTR [eax-0x4]
6400adcc:	add    eax,0x4
6400adcf:	mov    DWORD PTR [esp+0x14],esi
6400add3:	mov    esi,edx
6400add5:	shr    esi,0x10
6400add8:	and    esi,0xff
6400adde:	mov    esi,DWORD PTR [esi*4+0x6402b4e0]
6400ade5:	xor    esi,DWORD PTR [edi*4+0x6402b908]
6400adec:	mov    edi,DWORD PTR [esp+0x10]
6400adf0:	shr    edi,0x18
6400adf3:	mov    DWORD PTR [esp+0x28],esi
6400adf7:	xor    esi,DWORD PTR [edi*4+0x6402b0e0]
6400adfe:	mov    edi,ecx
6400ae00:	and    edi,0xff
6400ae06:	xor    esi,DWORD PTR [edi*4+0x6402bd08]
6400ae0d:	mov    edi,DWORD PTR [esp+0x24]
6400ae11:	xor    esi,DWORD PTR [eax-0x4]
6400ae14:	shr    edi,0x10
6400ae17:	mov    DWORD PTR [esp+0x18],esi
6400ae1b:	movzx  esi,ch
6400ae1e:	mov    esi,DWORD PTR [esi*4+0x6402b908]
6400ae25:	and    edi,0xff
6400ae2b:	xor    esi,DWORD PTR [edi*4+0x6402b4e0]
6400ae32:	mov    edi,edx
6400ae34:	shr    edi,0x18
6400ae37:	xor    esi,DWORD PTR [edi*4+0x6402b0e0]
6400ae3e:	mov    edi,DWORD PTR [esp+0x10]
6400ae42:	and    edi,0xff
6400ae48:	mov    DWORD PTR [esp+0x28],esi
6400ae4c:	xor    esi,DWORD PTR [edi*4+0x6402bd08]
6400ae53:	shr    ecx,0x10
6400ae56:	xor    esi,DWORD PTR [eax]
6400ae58:	and    ecx,0xff
6400ae5e:	mov    DWORD PTR [esp+0x28],esi
6400ae62:	movzx  esi,BYTE PTR [esp+0x11]
6400ae67:	mov    ebx,DWORD PTR [esi*4+0x6402b908]
6400ae6e:	xor    ebx,DWORD PTR [ecx*4+0x6402b4e0]
6400ae75:	mov    ecx,DWORD PTR [esp+0x24]
6400ae79:	mov    esi,DWORD PTR [esp+0x28]
6400ae7d:	shr    ecx,0x18
6400ae80:	xor    ebx,DWORD PTR [ecx*4+0x6402b0e0]
6400ae87:	and    edx,0xff
6400ae8d:	xor    ebx,DWORD PTR [edx*4+0x6402bd08]
6400ae94:	add    eax,0x4
6400ae97:	xor    ebx,DWORD PTR [eax]
6400ae99:	mov    ecx,esi
6400ae9b:	shr    ecx,0x10
6400ae9e:	and    ecx,0xff
6400aea4:	movzx  edx,bh
6400aea7:	mov    edi,DWORD PTR [edx*4+0x6402b908]
6400aeae:	xor    edi,DWORD PTR [ecx*4+0x6402b4e0]
6400aeb5:	mov    edx,DWORD PTR [esp+0x18]
6400aeb9:	mov    ecx,edx
6400aebb:	shr    ecx,0x18
6400aebe:	xor    edi,DWORD PTR [ecx*4+0x6402b0e0]
6400aec5:	mov    ecx,DWORD PTR [esp+0x14]
6400aec9:	and    ecx,0xff
6400aecf:	xor    edi,DWORD PTR [ecx*4+0x6402bd08]
6400aed6:	add    eax,0x4
6400aed9:	xor    edi,DWORD PTR [eax]
6400aedb:	mov    ecx,ebx
6400aedd:	shr    ecx,0x10
6400aee0:	mov    DWORD PTR [esp+0x24],edi
6400aee4:	movzx  edi,BYTE PTR [esp+0x15]
6400aee9:	add    eax,0x4
6400aeec:	and    ecx,0xff
6400aef2:	mov    ecx,DWORD PTR [ecx*4+0x6402b4e0]
6400aef9:	xor    ecx,DWORD PTR [edi*4+0x6402b908]
6400af00:	shr    esi,0x18
6400af03:	xor    ecx,DWORD PTR [esi*4+0x6402b0e0]
6400af0a:	mov    esi,edx
6400af0c:	and    esi,0xff
6400af12:	xor    ecx,DWORD PTR [esi*4+0x6402bd08]
6400af19:	mov    esi,DWORD PTR [esp+0x14]
6400af1d:	xor    ecx,DWORD PTR [eax]
6400af1f:	movzx  edx,dh
6400af22:	mov    edx,DWORD PTR [edx*4+0x6402b908]
6400af29:	mov    edi,DWORD PTR [esp+0x18]
6400af2d:	shr    esi,0x10
6400af30:	and    esi,0xff
6400af36:	xor    edx,DWORD PTR [esi*4+0x6402b4e0]
6400af3d:	mov    esi,ebx
6400af3f:	shr    esi,0x18
6400af42:	xor    edx,DWORD PTR [esi*4+0x6402b0e0]
6400af49:	mov    esi,DWORD PTR [esp+0x28]
6400af4d:	and    esi,0xff
6400af53:	xor    edx,DWORD PTR [esi*4+0x6402bd08]
6400af5a:	add    eax,0x4
6400af5d:	xor    edx,DWORD PTR [eax]
6400af5f:	shr    edi,0x10
6400af62:	mov    esi,edx
6400af64:	movzx  edx,BYTE PTR [esp+0x29]
6400af69:	mov    edx,DWORD PTR [edx*4+0x6402b908]
6400af70:	and    edi,0xff
6400af76:	xor    edx,DWORD PTR [edi*4+0x6402b4e0]
6400af7d:	mov    edi,DWORD PTR [esp+0x14]
6400af81:	shr    edi,0x18
6400af84:	xor    edx,DWORD PTR [edi*4+0x6402b0e0]
6400af8b:	and    ebx,0xff
6400af91:	xor    edx,DWORD PTR [ebx*4+0x6402bd08]
6400af98:	add    eax,0x4
6400af9b:	xor    edx,DWORD PTR [eax]
6400af9d:	sub    ebp,0x1
6400afa0:	add    eax,0x4
6400afa3:	test   ebp,ebp
6400afa5:	mov    DWORD PTR [esp+0x10],esi
6400afa9:	jg     0x6400ad84
6400afaf:	mov    ebx,esi
6400afb1:	movzx  edi,dh
6400afb4:	mov    esi,DWORD PTR [edi*4+0x6402b908]
6400afbb:	mov    edi,ecx
6400afbd:	shr    edi,0x18
6400afc0:	shr    ebx,0x10
6400afc3:	and    ebx,0xff
6400afc9:	xor    esi,DWORD PTR [ebx*4+0x6402b4e0]
6400afd0:	add    eax,0x4
6400afd3:	xor    esi,DWORD PTR [edi*4+0x6402b0e0]
6400afda:	mov    edi,DWORD PTR [esp+0x24]
6400afde:	mov    DWORD PTR [esp+0x28],esi
6400afe2:	and    edi,0xff
6400afe8:	xor    esi,DWORD PTR [edi*4+0x6402bd08]
6400afef:	movzx  edi,BYTE PTR [esp+0x25]
6400aff4:	xor    esi,DWORD PTR [eax-0x4]
6400aff7:	add    eax,0x4
6400affa:	mov    DWORD PTR [esp+0x14],esi
6400affe:	mov    esi,edx
6400b000:	shr    esi,0x10
6400b003:	and    esi,0xff
6400b009:	mov    esi,DWORD PTR [esi*4+0x6402b4e0]
6400b010:	xor    esi,DWORD PTR [edi*4+0x6402b908]
6400b017:	mov    edi,DWORD PTR [esp+0x10]
6400b01b:	shr    edi,0x18
6400b01e:	mov    DWORD PTR [esp+0x28],esi
6400b022:	xor    esi,DWORD PTR [edi*4+0x6402b0e0]
6400b029:	mov    edi,ecx
6400b02b:	and    edi,0xff
6400b031:	xor    esi,DWORD PTR [edi*4+0x6402bd08]
6400b038:	mov    edi,DWORD PTR [esp+0x24]
6400b03c:	xor    esi,DWORD PTR [eax-0x4]
6400b03f:	shr    edi,0x10
6400b042:	mov    DWORD PTR [esp+0x18],esi
6400b046:	movzx  esi,ch
6400b049:	mov    esi,DWORD PTR [esi*4+0x6402b908]
6400b050:	and    edi,0xff
6400b056:	xor    esi,DWORD PTR [edi*4+0x6402b4e0]
6400b05d:	mov    edi,edx
6400b05f:	shr    edi,0x18
6400b062:	xor    esi,DWORD PTR [edi*4+0x6402b0e0]
6400b069:	mov    edi,DWORD PTR [esp+0x10]
6400b06d:	mov    DWORD PTR [esp+0x28],esi
6400b071:	and    edi,0xff
6400b077:	xor    esi,DWORD PTR [edi*4+0x6402bd08]
6400b07e:	shr    ecx,0x10
6400b081:	xor    esi,DWORD PTR [eax]
6400b083:	and    ecx,0xff
6400b089:	mov    DWORD PTR [esp+0x28],esi
6400b08d:	movzx  esi,BYTE PTR [esp+0x11]
6400b092:	mov    ebx,DWORD PTR [esi*4+0x6402b908]
6400b099:	xor    ebx,DWORD PTR [ecx*4+0x6402b4e0]
6400b0a0:	mov    ecx,DWORD PTR [esp+0x24]
6400b0a4:	mov    edi,DWORD PTR [esp+0x28]
6400b0a8:	shr    ecx,0x18
6400b0ab:	xor    ebx,DWORD PTR [ecx*4+0x6402b0e0]
6400b0b2:	mov    ecx,DWORD PTR [esp+0x18]
6400b0b6:	and    edx,0xff
6400b0bc:	xor    ebx,DWORD PTR [edx*4+0x6402bd08]
6400b0c3:	add    eax,0x4
6400b0c6:	xor    ebx,DWORD PTR [eax]
6400b0c8:	add    eax,0x4
6400b0cb:	shr    ecx,0x18
6400b0ce:	mov    DWORD PTR [esp+0x1c],eax
6400b0d2:	xor    eax,eax
6400b0d4:	mov    ah,BYTE PTR [ecx+0x6402d108]
6400b0da:	mov    edx,edi
6400b0dc:	shr    edx,0x10
6400b0df:	and    edx,0xff
6400b0e5:	movzx  edx,BYTE PTR [edx+0x6402d108]
6400b0ec:	movzx  ecx,bh
6400b0ef:	movzx  ecx,BYTE PTR [ecx+0x6402d108]
6400b0f6:	xor    edx,eax
6400b0f8:	shl    edx,0x8
6400b0fb:	xor    edx,ecx
6400b0fd:	mov    ecx,DWORD PTR [esp+0x14]
6400b101:	and    ecx,0xff
6400b107:	movzx  ecx,BYTE PTR [ecx+0x6402d108]
6400b10e:	shl    edx,0x8
6400b111:	mov    DWORD PTR [esp+0x24],ebx
6400b115:	xor    edx,ecx
6400b117:	xor    ecx,ecx
6400b119:	shr    edi,0x18
6400b11c:	mov    ch,BYTE PTR [edi+0x6402d108]
6400b122:	mov    eax,DWORD PTR [esp+0x1c]
6400b126:	xor    edx,DWORD PTR [eax]
6400b128:	shr    ebx,0x10
6400b12b:	and    ebx,0xff
6400b131:	movzx  esi,BYTE PTR [ebx+0x6402d108]
6400b138:	xor    esi,ecx
6400b13a:	mov    ecx,DWORD PTR [esp+0x14]
6400b13e:	shl    esi,0x8
6400b141:	movzx  edi,ch
6400b144:	movzx  edi,BYTE PTR [edi+0x6402d108]
6400b14b:	xor    esi,edi
6400b14d:	mov    edi,DWORD PTR [esp+0x18]
6400b151:	shl    esi,0x8
6400b154:	and    edi,0xff
6400b15a:	movzx  edi,BYTE PTR [edi+0x6402d108]
6400b161:	xor    esi,edi
6400b163:	xor    esi,DWORD PTR [eax+0x4]
6400b166:	shr    ecx,0x10
6400b169:	mov    DWORD PTR [esp+0x1c],esi
6400b16d:	and    ecx,0xff
6400b173:	movzx  esi,BYTE PTR [ecx+0x6402d108]
6400b17a:	mov    ecx,DWORD PTR [esp+0x24]
6400b17e:	add    eax,0x4
6400b181:	shr    ecx,0x18
6400b184:	xor    ebx,ebx
6400b186:	mov    bh,BYTE PTR [ecx+0x6402d108]
6400b18c:	mov    ecx,DWORD PTR [esp+0x18]
6400b190:	movzx  edi,ch
6400b193:	movzx  edi,BYTE PTR [edi+0x6402d108]
6400b19a:	xor    esi,ebx
6400b19c:	shl    esi,0x8
6400b19f:	xor    esi,edi
6400b1a1:	mov    edi,DWORD PTR [esp+0x28]
6400b1a5:	shl    esi,0x8
6400b1a8:	and    edi,0xff
6400b1ae:	movzx  edi,BYTE PTR [edi+0x6402d108]
6400b1b5:	xor    esi,edi
6400b1b7:	xor    esi,DWORD PTR [eax+0x4]
6400b1ba:	add    eax,0x4
6400b1bd:	mov    DWORD PTR [esp+0x10],esi
6400b1c1:	mov    esi,DWORD PTR [esp+0x14]
6400b1c5:	shr    esi,0x18
6400b1c8:	shr    ecx,0x10
6400b1cb:	xor    ebx,ebx
6400b1cd:	mov    bh,BYTE PTR [esi+0x6402d108]
6400b1d3:	movzx  esi,BYTE PTR [esp+0x29]
6400b1d8:	movzx  esi,BYTE PTR [esi+0x6402d108]
6400b1df:	and    ecx,0xff
6400b1e5:	movzx  ecx,BYTE PTR [ecx+0x6402d108]
6400b1ec:	xor    ecx,ebx
6400b1ee:	shl    ecx,0x8
6400b1f1:	xor    ecx,esi
6400b1f3:	mov    esi,DWORD PTR [esp+0x24]
6400b1f7:	and    esi,0xff
6400b1fd:	movzx  esi,BYTE PTR [esi+0x6402d108]
6400b204:	jmp    0x6400b69c
6400b209:	mov    edi,DWORD PTR [ebp+0x0]
6400b20c:	sar    edi,1
6400b20e:	sub    edi,0x1
6400b211:	test   edi,edi
6400b213:	mov    DWORD PTR [esp+0x1c],edi
6400b217:	jle    0x6400b453
6400b21d:	lea    ecx,[ecx+0x0]
6400b220:	shr    esi,0x10
6400b223:	and    esi,0xff
6400b229:	mov    esi,DWORD PTR [esi*4+0x6402c508]
6400b230:	movzx  edi,ch
6400b233:	xor    esi,DWORD PTR [edi*4+0x6402c908]
6400b23a:	mov    edi,edx
6400b23c:	shr    edi,0x18
6400b23f:	xor    esi,DWORD PTR [edi*4+0x6402c108]
6400b246:	mov    edi,DWORD PTR [esp+0x24]
6400b24a:	mov    DWORD PTR [esp+0x28],esi
6400b24e:	and    edi,0xff
6400b254:	xor    esi,DWORD PTR [edi*4+0x6402cd08]
6400b25b:	movzx  edi,BYTE PTR [esp+0x11]
6400b260:	xor    esi,DWORD PTR [eax]
6400b262:	add    eax,0x4
6400b265:	mov    DWORD PTR [esp+0x14],esi
6400b269:	mov    esi,edx
6400b26b:	shr    esi,0x10
6400b26e:	and    esi,0xff
6400b274:	mov    esi,DWORD PTR [esi*4+0x6402c508]
6400b27b:	xor    esi,DWORD PTR [edi*4+0x6402c908]
6400b282:	mov    edi,DWORD PTR [esp+0x24]
6400b286:	mov    DWORD PTR [esp+0x28],esi
6400b28a:	shr    edi,0x18
6400b28d:	xor    esi,DWORD PTR [edi*4+0x6402c108]
6400b294:	mov    edi,ecx
6400b296:	and    edi,0xff
6400b29c:	xor    esi,DWORD PTR [edi*4+0x6402cd08]
6400b2a3:	mov    edi,DWORD PTR [esp+0x24]
6400b2a7:	xor    esi,DWORD PTR [eax]
6400b2a9:	shr    edi,0x10
6400b2ac:	mov    DWORD PTR [esp+0x18],esi
6400b2b0:	and    edi,0xff
6400b2b6:	movzx  esi,dh
6400b2b9:	mov    esi,DWORD PTR [esi*4+0x6402c908]
6400b2c0:	xor    esi,DWORD PTR [edi*4+0x6402c508]
6400b2c7:	mov    edi,ecx
6400b2c9:	shr    edi,0x18
6400b2cc:	xor    esi,DWORD PTR [edi*4+0x6402c108]
6400b2d3:	mov    edi,DWORD PTR [esp+0x10]
6400b2d7:	mov    DWORD PTR [esp+0x28],esi
6400b2db:	and    edi,0xff
6400b2e1:	xor    esi,DWORD PTR [edi*4+0x6402cd08]
6400b2e8:	add    eax,0x4
6400b2eb:	xor    esi,DWORD PTR [eax]
6400b2ed:	shr    ecx,0x10
6400b2f0:	mov    DWORD PTR [esp+0x28],esi
6400b2f4:	movzx  esi,BYTE PTR [esp+0x25]
6400b2f9:	and    ecx,0xff
6400b2ff:	mov    ebx,DWORD PTR [ecx*4+0x6402c508]
6400b306:	xor    ebx,DWORD PTR [esi*4+0x6402c908]
6400b30d:	mov    ecx,DWORD PTR [esp+0x10]
6400b311:	shr    ecx,0x18
6400b314:	xor    ebx,DWORD PTR [ecx*4+0x6402c108]
6400b31b:	mov    ecx,DWORD PTR [esp+0x18]
6400b31f:	and    edx,0xff
6400b325:	xor    ebx,DWORD PTR [edx*4+0x6402cd08]
6400b32c:	mov    edx,DWORD PTR [esp+0x28]
6400b330:	xor    ebx,DWORD PTR [eax+0x4]
6400b333:	add    eax,0x4
6400b336:	mov    esi,edx
6400b338:	shr    esi,0x10
6400b33b:	and    esi,0xff
6400b341:	mov    ebp,DWORD PTR [esi*4+0x6402c508]
6400b348:	movzx  edi,ch
6400b34b:	xor    ebp,DWORD PTR [edi*4+0x6402c908]
6400b352:	mov    esi,ebx
6400b354:	shr    esi,0x18
6400b357:	xor    ebp,DWORD PTR [esi*4+0x6402c108]
6400b35e:	mov    esi,DWORD PTR [esp+0x14]
6400b362:	mov    edi,esi
6400b364:	and    edi,0xff
6400b36a:	xor    ebp,DWORD PTR [edi*4+0x6402cd08]
6400b371:	add    eax,0x4
6400b374:	xor    ebp,DWORD PTR [eax]
6400b376:	mov    edi,ebx
6400b378:	shr    edi,0x10
6400b37b:	add    eax,0x4
6400b37e:	mov    DWORD PTR [esp+0x24],ebp
6400b382:	and    edi,0xff
6400b388:	movzx  edx,dh
6400b38b:	mov    edi,DWORD PTR [edi*4+0x6402c508]
6400b392:	xor    edi,DWORD PTR [edx*4+0x6402c908]
6400b399:	mov    edx,esi
6400b39b:	shr    edx,0x18
6400b39e:	xor    edi,DWORD PTR [edx*4+0x6402c108]
6400b3a5:	shr    esi,0x10
6400b3a8:	and    esi,0xff
6400b3ae:	movzx  edx,bh
6400b3b1:	mov    edx,DWORD PTR [edx*4+0x6402c908]
6400b3b8:	xor    edx,DWORD PTR [esi*4+0x6402c508]
6400b3bf:	mov    esi,DWORD PTR [esp+0x18]
6400b3c3:	shr    esi,0x18
6400b3c6:	xor    edx,DWORD PTR [esi*4+0x6402c108]
6400b3cd:	mov    esi,DWORD PTR [esp+0x28]
6400b3d1:	and    ecx,0xff
6400b3d7:	xor    edi,DWORD PTR [ecx*4+0x6402cd08]
6400b3de:	and    esi,0xff
6400b3e4:	xor    edi,DWORD PTR [eax]
6400b3e6:	xor    edx,DWORD PTR [esi*4+0x6402cd08]
6400b3ed:	mov    ecx,edi
6400b3ef:	xor    edx,DWORD PTR [eax+0x4]
6400b3f2:	mov    edi,DWORD PTR [esp+0x18]
6400b3f6:	add    eax,0x4
6400b3f9:	shr    edi,0x10
6400b3fc:	and    edi,0xff
6400b402:	mov    ebp,DWORD PTR [edi*4+0x6402c508]
6400b409:	mov    edi,DWORD PTR [esp+0x28]
6400b40d:	mov    esi,edx
6400b40f:	movzx  edx,BYTE PTR [esp+0x15]
6400b414:	xor    ebp,DWORD PTR [edx*4+0x6402c908]
6400b41b:	shr    edi,0x18
6400b41e:	xor    ebp,DWORD PTR [edi*4+0x6402c108]
6400b425:	mov    edi,DWORD PTR [esp+0x1c]
6400b429:	and    ebx,0xff
6400b42f:	xor    ebp,DWORD PTR [ebx*4+0x6402cd08]
6400b436:	add    eax,0x4
6400b439:	xor    ebp,DWORD PTR [eax]
6400b43b:	sub    edi,0x1
6400b43e:	add    eax,0x4
6400b441:	test   edi,edi
6400b443:	mov    DWORD PTR [esp+0x10],esi
6400b447:	mov    edx,ebp
6400b449:	mov    DWORD PTR [esp+0x1c],edi
6400b44d:	jg     0x6400b220
6400b453:	shr    esi,0x10
6400b456:	and    esi,0xff
6400b45c:	mov    esi,DWORD PTR [esi*4+0x6402c508]
6400b463:	movzx  edi,ch
6400b466:	xor    esi,DWORD PTR [edi*4+0x6402c908]
6400b46d:	mov    edi,edx
6400b46f:	shr    edi,0x18
6400b472:	xor    esi,DWORD PTR [edi*4+0x6402c108]
6400b479:	mov    edi,DWORD PTR [esp+0x24]
6400b47d:	mov    DWORD PTR [esp+0x28],esi
6400b481:	and    edi,0xff
6400b487:	xor    esi,DWORD PTR [edi*4+0x6402cd08]
6400b48e:	movzx  edi,BYTE PTR [esp+0x11]
6400b493:	xor    esi,DWORD PTR [eax]
6400b495:	add    eax,0x4
6400b498:	mov    DWORD PTR [esp+0x14],esi
6400b49c:	mov    esi,edx
6400b49e:	shr    esi,0x10
6400b4a1:	and    esi,0xff
6400b4a7:	mov    esi,DWORD PTR [esi*4+0x6402c508]
6400b4ae:	xor    esi,DWORD PTR [edi*4+0x6402c908]
6400b4b5:	mov    edi,DWORD PTR [esp+0x24]
6400b4b9:	shr    edi,0x18
6400b4bc:	mov    DWORD PTR [esp+0x28],esi
6400b4c0:	xor    esi,DWORD PTR [edi*4+0x6402c108]
6400b4c7:	mov    edi,ecx
6400b4c9:	and    edi,0xff
6400b4cf:	xor    esi,DWORD PTR [edi*4+0x6402cd08]
6400b4d6:	mov    edi,DWORD PTR [esp+0x24]
6400b4da:	xor    esi,DWORD PTR [eax]
6400b4dc:	shr    edi,0x10
6400b4df:	mov    DWORD PTR [esp+0x18],esi
6400b4e3:	movzx  esi,dh
6400b4e6:	mov    esi,DWORD PTR [esi*4+0x6402c908]
6400b4ed:	and    edi,0xff
6400b4f3:	xor    esi,DWORD PTR [edi*4+0x6402c508]
6400b4fa:	mov    edi,ecx
6400b4fc:	shr    edi,0x18
6400b4ff:	xor    esi,DWORD PTR [edi*4+0x6402c108]
6400b506:	mov    edi,DWORD PTR [esp+0x10]
6400b50a:	mov    DWORD PTR [esp+0x28],esi
6400b50e:	and    edi,0xff
6400b514:	xor    esi,DWORD PTR [edi*4+0x6402cd08]
6400b51b:	movzx  edi,BYTE PTR [esp+0x25]
6400b520:	xor    esi,DWORD PTR [eax+0x4]
6400b523:	shr    ecx,0x10
6400b526:	and    ecx,0xff
6400b52c:	add    eax,0x4
6400b52f:	mov    DWORD PTR [esp+0x28],esi
6400b533:	mov    esi,DWORD PTR [ecx*4+0x6402c508]
6400b53a:	xor    esi,DWORD PTR [edi*4+0x6402c908]
6400b541:	mov    ecx,DWORD PTR [esp+0x10]
6400b545:	and    edx,0xff
6400b54b:	shr    ecx,0x18
6400b54e:	xor    esi,DWORD PTR [ecx*4+0x6402c108]
6400b555:	add    eax,0x4
6400b558:	xor    esi,DWORD PTR [edx*4+0x6402cd08]
6400b55f:	mov    edx,DWORD PTR [esp+0x28]
6400b563:	xor    esi,DWORD PTR [eax]
6400b565:	shr    edx,0x10
6400b568:	and    edx,0xff
6400b56e:	movzx  edx,BYTE PTR [edx+0x6402afe0]
6400b575:	mov    ecx,esi
6400b577:	shr    ecx,0x18
6400b57a:	xor    ebx,ebx
6400b57c:	mov    bh,BYTE PTR [ecx+0x6402afe0]
6400b582:	movzx  ecx,BYTE PTR [esp+0x19]
6400b587:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400b58e:	xor    edx,ebx
6400b590:	shl    edx,0x8
6400b593:	xor    edx,ecx
6400b595:	mov    ecx,DWORD PTR [esp+0x14]
6400b599:	mov    edi,ecx
6400b59b:	and    edi,0xff
6400b5a1:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400b5a8:	shl    edx,0x8
6400b5ab:	add    eax,0x4
6400b5ae:	xor    edx,edi
6400b5b0:	xor    edx,DWORD PTR [eax]
6400b5b2:	mov    DWORD PTR [esp+0x24],esi
6400b5b6:	add    eax,0x4
6400b5b9:	shr    esi,0x10
6400b5bc:	and    esi,0xff
6400b5c2:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400b5c9:	shr    ecx,0x18
6400b5cc:	xor    ebx,ebx
6400b5ce:	mov    bh,BYTE PTR [ecx+0x6402afe0]
6400b5d4:	movzx  ecx,BYTE PTR [esp+0x29]
6400b5d9:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400b5e0:	xor    esi,ebx
6400b5e2:	shl    esi,0x8
6400b5e5:	xor    esi,ecx
6400b5e7:	mov    ecx,DWORD PTR [esp+0x18]
6400b5eb:	mov    edi,ecx
6400b5ed:	shl    esi,0x8
6400b5f0:	and    edi,0xff
6400b5f6:	movzx  edi,BYTE PTR [edi+0x6402afe0]
6400b5fd:	xor    esi,edi
6400b5ff:	xor    esi,DWORD PTR [eax]
6400b601:	mov    edi,DWORD PTR [esp+0x28]
6400b605:	mov    DWORD PTR [esp+0x1c],esi
6400b609:	mov    esi,DWORD PTR [esp+0x14]
6400b60d:	shr    ecx,0x18
6400b610:	shr    esi,0x10
6400b613:	and    esi,0xff
6400b619:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400b620:	xor    ebx,ebx
6400b622:	mov    bh,BYTE PTR [ecx+0x6402afe0]
6400b628:	movzx  ecx,BYTE PTR [esp+0x25]
6400b62d:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400b634:	xor    esi,ebx
6400b636:	shl    esi,0x8
6400b639:	xor    esi,ecx
6400b63b:	mov    ecx,edi
6400b63d:	and    ecx,0xff
6400b643:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400b64a:	shl    esi,0x8
6400b64d:	xor    esi,ecx
6400b64f:	xor    esi,DWORD PTR [eax+0x4]
6400b652:	mov    ecx,DWORD PTR [esp+0x18]
6400b656:	shr    ecx,0x10
6400b659:	xor    ebx,ebx
6400b65b:	add    eax,0x4
6400b65e:	shr    edi,0x18
6400b661:	mov    bh,BYTE PTR [edi+0x6402afe0]
6400b667:	and    ecx,0xff
6400b66d:	movzx  ecx,BYTE PTR [ecx+0x6402afe0]
6400b674:	mov    DWORD PTR [esp+0x10],esi
6400b678:	movzx  esi,BYTE PTR [esp+0x15]
6400b67d:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400b684:	xor    ecx,ebx
6400b686:	shl    ecx,0x8
6400b689:	xor    ecx,esi
6400b68b:	mov    esi,DWORD PTR [esp+0x24]
6400b68f:	and    esi,0xff
6400b695:	movzx  esi,BYTE PTR [esi+0x6402afe0]
6400b69c:	shl    ecx,0x8
6400b69f:	xor    ecx,esi
6400b6a1:	xor    ecx,DWORD PTR [eax+0x4]
6400b6a4:	mov    esi,DWORD PTR [esp+0x2c]
6400b6a8:	mov    eax,edx
6400b6aa:	shr    eax,0x8
6400b6ad:	mov    BYTE PTR [esi+0x1],al
6400b6b0:	mov    eax,edx
6400b6b2:	mov    BYTE PTR [esi],dl
6400b6b4:	shr    edx,0x18
6400b6b7:	shr    eax,0x10
6400b6ba:	mov    BYTE PTR [esi+0x3],dl
6400b6bd:	mov    BYTE PTR [esi+0x2],al
6400b6c0:	mov    eax,DWORD PTR [esp+0x1c]
6400b6c4:	mov    edx,eax
6400b6c6:	shr    edx,0x8
6400b6c9:	mov    BYTE PTR [esi+0x5],dl
6400b6cc:	mov    BYTE PTR [esi+0x4],al
6400b6cf:	mov    edx,eax
6400b6d1:	shr    edx,0x10
6400b6d4:	shr    eax,0x18
6400b6d7:	mov    BYTE PTR [esi+0x6],dl
6400b6da:	mov    BYTE PTR [esi+0x7],al
6400b6dd:	mov    eax,DWORD PTR [esp+0x10]
6400b6e1:	mov    edx,eax
6400b6e3:	shr    edx,0x8
6400b6e6:	mov    BYTE PTR [esi+0x9],dl
6400b6e9:	mov    edx,eax
6400b6eb:	mov    BYTE PTR [esi+0x8],al
6400b6ee:	shr    edx,0x10
6400b6f1:	shr    eax,0x18
6400b6f4:	mov    BYTE PTR [esi+0xa],dl
6400b6f7:	mov    BYTE PTR [esi+0xb],al
6400b6fa:	mov    eax,ecx
6400b6fc:	mov    edx,ecx
6400b6fe:	mov    BYTE PTR [esi+0xc],cl
6400b701:	shr    eax,0x8
6400b704:	shr    edx,0x10
6400b707:	pop    edi
6400b708:	shr    ecx,0x18
6400b70b:	mov    BYTE PTR [esi+0xd],al
6400b70e:	mov    BYTE PTR [esi+0xe],dl
6400b711:	mov    BYTE PTR [esi+0xf],cl
6400b714:	pop    esi
6400b715:	pop    ebp
6400b716:	pop    ebx
6400b717:	add    esp,0x10
6400b71a:	ret    
6400b71b:	int3   
6400b71c:	int3   
6400b71d:	int3   
6400b71e:	int3   
6400b71f:	int3   
6400b720:	sub    esp,0x30
6400b723:	mov    eax,ds:0x64029038
6400b728:	xor    eax,esp
6400b72a:	mov    DWORD PTR [esp+0x2c],eax
6400b72e:	cmp    DWORD PTR [esp+0x38],0x0
6400b733:	mov    eax,DWORD PTR [esp+0x34]
6400b737:	push   ebx
6400b738:	push   ebp
6400b739:	mov    ebp,DWORD PTR [esp+0x44]
6400b73d:	push   esi
6400b73e:	mov    esi,DWORD PTR [esp+0x4c]
6400b742:	push   edi
6400b743:	mov    edi,edx
6400b745:	mov    DWORD PTR [esp+0x24],eax
6400b749:	jne    0x6400b807
6400b74f:	test   ecx,ecx
6400b751:	jle    0x6400b8e6
6400b757:	lea    eax,[ecx-0x1]
6400b75a:	mov    ebx,ebp
6400b75c:	shr    eax,0x4
6400b75f:	sub    ebx,esi
6400b761:	add    eax,0x1
6400b764:	mov    DWORD PTR [esp+0x10],eax
6400b768:	mov    edx,DWORD PTR [edi+0x4]
6400b76b:	mov    ecx,DWORD PTR [edi]
6400b76d:	mov    eax,DWORD PTR [edi+0x8]
6400b770:	push   esi
6400b771:	mov    DWORD PTR [esp+0x34],edx
6400b775:	mov    edx,DWORD PTR [esp+0x28]
6400b779:	mov    DWORD PTR [esp+0x30],ecx
6400b77d:	mov    ecx,DWORD PTR [edi+0xc]
6400b780:	mov    DWORD PTR [esp+0x38],eax
6400b784:	push   0x0
6400b786:	push   edx
6400b787:	mov    eax,edi
6400b789:	mov    DWORD PTR [esp+0x44],ecx
6400b78d:	call   0x6400acd0
6400b792:	mov    eax,esi
6400b794:	add    esp,0xc
6400b797:	lea    ecx,[ebp+0x2]
6400b79a:	mov    esi,0x4
6400b79f:	nop
6400b7a0:	movzx  edx,BYTE PTR [ebx+eax*1]
6400b7a4:	xor    BYTE PTR [eax],dl
6400b7a6:	movzx  edx,BYTE PTR [ecx-0x1]
6400b7aa:	xor    BYTE PTR [eax+0x1],dl
6400b7ad:	movzx  edx,BYTE PTR [ecx]
6400b7b0:	xor    BYTE PTR [eax+0x2],dl
6400b7b3:	movzx  edx,BYTE PTR [ecx+0x1]
6400b7b7:	xor    BYTE PTR [eax+0x3],dl
6400b7ba:	add    eax,0x4
6400b7bd:	add    ecx,0x4
6400b7c0:	sub    esi,0x1
6400b7c3:	jne    0x6400b7a0
6400b7c5:	mov    ecx,DWORD PTR [esp+0x2c]
6400b7c9:	mov    edx,DWORD PTR [esp+0x30]
6400b7cd:	mov    DWORD PTR [ebp+0x0],ecx
6400b7d0:	mov    ecx,DWORD PTR [esp+0x34]
6400b7d4:	mov    DWORD PTR [ebp+0x4],edx
6400b7d7:	mov    edx,DWORD PTR [esp+0x38]
6400b7db:	add    edi,0x10
6400b7de:	sub    ebx,0x10
6400b7e1:	sub    DWORD PTR [esp+0x10],0x1
6400b7e6:	mov    DWORD PTR [ebp+0x8],ecx
6400b7e9:	mov    DWORD PTR [ebp+0xc],edx
6400b7ec:	mov    esi,eax
6400b7ee:	jne    0x6400b768
6400b7f4:	pop    edi
6400b7f5:	pop    esi
6400b7f6:	pop    ebp
6400b7f7:	pop    ebx
6400b7f8:	mov    ecx,DWORD PTR [esp+0x2c]
6400b7fc:	xor    ecx,esp
6400b7fe:	call   0x64010c1e
6400b803:	add    esp,0x30
6400b806:	ret    
6400b807:	test   ecx,ecx
6400b809:	jle    0x6400b8e6
6400b80f:	mov    eax,ebp
6400b811:	sub    eax,esi
6400b813:	mov    DWORD PTR [esp+0x10],eax
6400b817:	mov    eax,ebp
6400b819:	sub    eax,edi
6400b81b:	mov    DWORD PTR [esp+0x14],eax
6400b81f:	lea    eax,[ecx-0x1]
6400b822:	shr    eax,0x4
6400b825:	add    eax,0x1
6400b828:	mov    DWORD PTR [esp+0x1c],eax
6400b82c:	lea    esp,[esp+0x0]
6400b830:	lea    eax,[ebp+0x3]
6400b833:	mov    edx,esi
6400b835:	sub    edx,edi
6400b837:	mov    DWORD PTR [esp+0x20],eax
6400b83b:	lea    ecx,[esi+0x1]
6400b83e:	mov    eax,edi
6400b840:	mov    DWORD PTR [esp+0x28],edx
6400b844:	mov    DWORD PTR [esp+0x18],0x4
6400b84c:	jmp    0x6400b854
6400b84e:	mov    edi,edi
6400b850:	mov    edx,DWORD PTR [esp+0x28]
6400b854:	mov    ebx,DWORD PTR [esp+0x14]
6400b858:	movzx  ebx,BYTE PTR [eax+ebx*1]
6400b85c:	xor    bl,BYTE PTR [eax]
6400b85e:	add    eax,0x4
6400b861:	mov    BYTE PTR [edx+eax*1-0x4],bl
6400b865:	mov    edx,DWORD PTR [esp+0x10]
6400b869:	mov    dl,BYTE PTR [ecx+edx*1]
6400b86c:	xor    dl,BYTE PTR [eax-0x3]
6400b86f:	add    ecx,0x4
6400b872:	mov    BYTE PTR [ecx-0x4],dl
6400b875:	movzx  ebx,BYTE PTR [eax-0x2]
6400b879:	mov    edx,DWORD PTR [esp+0x20]
6400b87d:	xor    bl,BYTE PTR [edx-0x1]
6400b880:	add    edx,0x4
6400b883:	mov    BYTE PTR [ecx-0x3],bl
6400b886:	movzx  ebx,BYTE PTR [eax-0x1]
6400b88a:	xor    bl,BYTE PTR [edx-0x4]
6400b88d:	mov    DWORD PTR [esp+0x20],edx
6400b891:	mov    BYTE PTR [ecx-0x2],bl
6400b894:	mov    ebx,0x1
6400b899:	sub    DWORD PTR [esp+0x18],ebx
6400b89d:	jne    0x6400b850
6400b89f:	mov    eax,DWORD PTR [esp+0x48]
6400b8a3:	mov    ecx,DWORD PTR [esp+0x24]
6400b8a7:	push   esi
6400b8a8:	push   eax
6400b8a9:	push   ecx
6400b8aa:	mov    eax,esi
6400b8ac:	call   0x6400acd0
6400b8b1:	mov    edx,DWORD PTR [esi]
6400b8b3:	mov    DWORD PTR [ebp+0x0],edx
6400b8b6:	mov    eax,DWORD PTR [esi+0x4]
6400b8b9:	mov    DWORD PTR [ebp+0x4],eax
6400b8bc:	mov    ecx,DWORD PTR [esi+0x8]
6400b8bf:	mov    eax,0x10
6400b8c4:	sub    DWORD PTR [esp+0x20],eax
6400b8c8:	sub    DWORD PTR [esp+0x1c],eax
6400b8cc:	mov    DWORD PTR [ebp+0x8],ecx
6400b8cf:	mov    edx,DWORD PTR [esi+0xc]
6400b8d2:	add    esp,0xc
6400b8d5:	add    edi,eax
6400b8d7:	add    esi,eax
6400b8d9:	sub    DWORD PTR [esp+0x1c],ebx
6400b8dd:	mov    DWORD PTR [ebp+0xc],edx
6400b8e0:	jne    0x6400b830
6400b8e6:	mov    ecx,DWORD PTR [esp+0x3c]
6400b8ea:	pop    edi
6400b8eb:	pop    esi
6400b8ec:	pop    ebp
6400b8ed:	pop    ebx
6400b8ee:	xor    ecx,esp
6400b8f0:	call   0x64010c1e
6400b8f5:	add    esp,0x30
6400b8f8:	ret    
6400b8f9:	int3   
6400b8fa:	int3   
6400b8fb:	int3   
6400b8fc:	int3   
6400b8fd:	int3   
6400b8fe:	int3   
6400b8ff:	int3   
6400b900:	push   0xffffffff
6400b902:	push   0x6402064b
6400b907:	mov    eax,fs:0x0
6400b90d:	push   eax
6400b90e:	sub    esp,0x138
6400b914:	mov    eax,ds:0x64029038
6400b919:	xor    eax,esp
6400b91b:	mov    DWORD PTR [esp+0x134],eax
6400b922:	push   ebp
6400b923:	push   esi
6400b924:	push   edi
6400b925:	mov    eax,ds:0x64029038
6400b92a:	xor    eax,esp
6400b92c:	push   eax
6400b92d:	lea    eax,[esp+0x148]
6400b934:	mov    fs:0x0,eax
6400b93a:	mov    ebp,DWORD PTR [esp+0x15c]
6400b941:	mov    eax,DWORD PTR [esp+0x158]
6400b948:	mov    DWORD PTR [esp+0x14],eax
6400b94c:	lea    esi,[ebp+0x8]
6400b94f:	mov    eax,esi
6400b951:	and    eax,0xf
6400b954:	mov    DWORD PTR [esp+0x18],ecx
6400b958:	mov    DWORD PTR [esp+0x10],0x0
6400b960:	je     0x6400b96b
6400b962:	mov    edx,0x10
6400b967:	sub    edx,eax
6400b969:	add    esi,edx
6400b96b:	push   esi
6400b96c:	call   0x6401041d
6400b971:	mov    edi,eax
6400b973:	mov    DWORD PTR [esp+0x14],edi
6400b977:	push   esi
6400b978:	mov    DWORD PTR [esp+0x158],0x0
6400b983:	call   0x6401041d
6400b988:	push   esi
6400b989:	push   0x0
6400b98b:	push   edi
6400b98c:	mov    DWORD PTR [ebx],eax
6400b98e:	call   0x64011320
6400b993:	mov    eax,DWORD PTR [esp+0x28]
6400b997:	push   ebp
6400b998:	push   eax
6400b999:	lea    ecx,[edi+0x8]
6400b99c:	mov    DWORD PTR [edi],0x52514f4b
6400b9a2:	push   ecx
6400b9a3:	mov    DWORD PTR [edi+0x4],ebp
6400b9a6:	call   0x64012650
6400b9ab:	xor    eax,eax
6400b9ad:	mov    DWORD PTR [esp+0x154],eax
6400b9b4:	mov    DWORD PTR [esp+0x158],eax
6400b9bb:	mov    DWORD PTR [esp+0x15c],eax
6400b9c2:	mov    DWORD PTR [esp+0x160],eax
6400b9c9:	lea    eax,[esp+0x3c]
6400b9cd:	call   0x6400a5e0
6400b9d2:	mov    eax,DWORD PTR [ebx]
6400b9d4:	push   eax
6400b9d5:	lea    edx,[esp+0x158]
6400b9dc:	push   edx
6400b9dd:	lea    eax,[esp+0x44]
6400b9e1:	push   0x1
6400b9e3:	push   eax
6400b9e4:	mov    edx,edi
6400b9e6:	mov    ecx,esi
6400b9e8:	call   0x6400b720
6400b9ed:	mov    ecx,DWORD PTR [esp+0x48]
6400b9f1:	push   0x0
6400b9f3:	mov    DWORD PTR [ecx],esi
6400b9f5:	call   0x64010422
6400b9fa:	push   edi
6400b9fb:	call   0x64010422
6400ba00:	add    esp,0x38
6400ba03:	mov    eax,ebx
6400ba05:	mov    ecx,DWORD PTR [esp+0x148]
6400ba0c:	mov    DWORD PTR fs:0x0,ecx
6400ba13:	pop    ecx
6400ba14:	pop    edi
6400ba15:	pop    esi
6400ba16:	pop    ebp
6400ba17:	mov    ecx,DWORD PTR [esp+0x134]
6400ba1e:	xor    ecx,esp
6400ba20:	call   0x64010c1e
6400ba25:	add    esp,0x144
6400ba2b:	ret    
6400ba2c:	int3   
6400ba2d:	int3   
6400ba2e:	int3   
6400ba2f:	int3   
6400ba30:	sub    esp,0x13c
6400ba36:	mov    eax,ds:0x64029038
6400ba3b:	xor    eax,esp
6400ba3d:	mov    DWORD PTR [esp+0x134],eax
6400ba44:	mov    eax,DWORD PTR [esp+0x144]
6400ba4b:	push   ebp
6400ba4c:	mov    ebp,DWORD PTR [esp+0x144]
6400ba53:	mov    DWORD PTR [esp+0x8],eax
6400ba57:	xor    eax,eax
6400ba59:	test   bl,0xf
6400ba5c:	push   esi
6400ba5d:	mov    DWORD PTR [esp+0x8],eax
6400ba61:	je     0x6400ba6f
6400ba63:	mov    DWORD PTR [esp+0x8],eax
6400ba67:	mov    DWORD PTR [edi],eax
6400ba69:	push   eax
6400ba6a:	jmp    0x6400bb0f
6400ba6f:	push   ebx
6400ba70:	call   0x6401041d
6400ba75:	mov    esi,eax
6400ba77:	xor    eax,eax
6400ba79:	mov    DWORD PTR [esp+0x130],eax
6400ba80:	mov    DWORD PTR [esp+0x134],eax
6400ba87:	mov    DWORD PTR [esp+0x138],eax
6400ba8e:	mov    DWORD PTR [esp+0x13c],eax
6400ba95:	add    esp,0x4
6400ba98:	lea    eax,[esp+0x10]
6400ba9c:	call   0x6400aaf0
6400baa1:	push   esi
6400baa2:	lea    ecx,[esp+0x130]
6400baa9:	push   ecx
6400baaa:	lea    edx,[esp+0x18]
6400baae:	push   0x0
6400bab0:	push   edx
6400bab1:	mov    edx,ebp
6400bab3:	mov    ecx,ebx
6400bab5:	call   0x6400b720
6400baba:	add    esp,0x10
6400babd:	cmp    DWORD PTR [esi],0x52534f4b
6400bac3:	je     0x6400baea
6400bac5:	push   0x0
6400bac7:	mov    DWORD PTR [esp+0xc],0x0
6400bacf:	mov    DWORD PTR [edi],0x0
6400bad5:	call   0x64010422
6400bada:	add    esp,0x4
6400badd:	push   0x0
6400badf:	call   0x64010422
6400bae4:	add    esp,0x4
6400bae7:	push   esi
6400bae8:	jmp    0x6400bb0f
6400baea:	mov    eax,DWORD PTR [esi+0x4]
6400baed:	mov    ecx,DWORD PTR [esp+0xc]
6400baf1:	push   eax
6400baf2:	lea    edx,[esi+0x8]
6400baf5:	push   edx
6400baf6:	push   esi
6400baf7:	mov    DWORD PTR [ecx],eax
6400baf9:	call   0x64011c60
6400bafe:	add    esp,0xc
6400bb01:	push   0x0
6400bb03:	mov    DWORD PTR [edi],esi
6400bb05:	call   0x64010422
6400bb0a:	add    esp,0x4
6400bb0d:	push   0x0
6400bb0f:	call   0x64010422
6400bb14:	mov    ecx,DWORD PTR [esp+0x140]
6400bb1b:	add    esp,0x4
6400bb1e:	pop    esi
6400bb1f:	pop    ebp
6400bb20:	xor    ecx,esp
6400bb22:	mov    eax,edi
6400bb24:	call   0x64010c1e
6400bb29:	add    esp,0x13c
6400bb2f:	ret    
6400bb30:	push   ebp
6400bb31:	mov    ebp,esp
6400bb33:	and    esp,0xfffffff8
6400bb36:	push   0xffffffff
6400bb38:	push   0x6402166e
6400bb3d:	mov    eax,fs:0x0
6400bb43:	push   eax
6400bb44:	push   ecx
6400bb45:	push   ebx
6400bb46:	push   esi
6400bb47:	mov    eax,ds:0x64029038
6400bb4c:	xor    eax,esp
6400bb4e:	push   eax
6400bb4f:	lea    eax,[esp+0x10]
6400bb53:	mov    fs:0x0,eax
6400bb59:	mov    ebx,0x1
6400bb5e:	test   BYTE PTR ds:0x6402d440,bl
6400bb64:	jne    0x6400bbee
6400bb6a:	or     DWORD PTR ds:0x6402d440,ebx
6400bb70:	push   0x64024c14
6400bb75:	push   0xc
6400bb77:	push   0x64024c54
6400bb7c:	mov    DWORD PTR [esp+0x24],0x0
6400bb84:	call   0x64004730
6400bb89:	push   0x64024c64
6400bb8e:	push   0x8
6400bb90:	push   0x64024c88
6400bb95:	mov    esi,eax
6400bb97:	call   0x64004930
6400bb9c:	add    esp,0x18
6400bb9f:	push   eax
6400bba0:	call   DWORD PTR ds:0x64022018
6400bba6:	add    DWORD PTR ds:0x6402d210,ebx
6400bbac:	test   eax,eax
6400bbae:	je     0x6400bbd5
6400bbb0:	push   esi
6400bbb1:	push   eax
6400bbb2:	call   DWORD PTR ds:0x64022014
6400bbb8:	add    DWORD PTR ds:0x6402d214,ebx
6400bbbe:	mov    ds:0x6402d43c,eax
6400bbc3:	mov    ecx,DWORD PTR [esp+0x10]
6400bbc7:	mov    DWORD PTR fs:0x0,ecx
6400bbce:	pop    ecx
6400bbcf:	pop    esi
6400bbd0:	pop    ebx
6400bbd1:	mov    esp,ebp
6400bbd3:	pop    ebp
6400bbd4:	ret    
6400bbd5:	xor    eax,eax
6400bbd7:	mov    ds:0x6402d43c,eax
6400bbdc:	mov    ecx,DWORD PTR [esp+0x10]
6400bbe0:	mov    DWORD PTR fs:0x0,ecx
6400bbe7:	pop    ecx
6400bbe8:	pop    esi
6400bbe9:	pop    ebx
6400bbea:	mov    esp,ebp
6400bbec:	pop    ebp
6400bbed:	ret    
6400bbee:	mov    eax,ds:0x6402d43c
6400bbf3:	mov    ecx,DWORD PTR [esp+0x10]
6400bbf7:	mov    DWORD PTR fs:0x0,ecx
6400bbfe:	pop    ecx
6400bbff:	pop    esi
6400bc00:	pop    ebx
6400bc01:	mov    esp,ebp
6400bc03:	pop    ebp
6400bc04:	ret    
6400bc05:	int3   
6400bc06:	int3   
6400bc07:	int3   
6400bc08:	int3   
6400bc09:	int3   
6400bc0a:	int3   
6400bc0b:	int3   
6400bc0c:	int3   
6400bc0d:	int3   
6400bc0e:	int3   
6400bc0f:	int3   
6400bc10:	push   ebp
6400bc11:	mov    ebp,esp
6400bc13:	and    esp,0xfffffff8
6400bc16:	push   0xffffffff
6400bc18:	push   0x6402163e
6400bc1d:	mov    eax,fs:0x0
6400bc23:	push   eax
6400bc24:	push   ecx
6400bc25:	push   ebx
6400bc26:	push   esi
6400bc27:	mov    eax,ds:0x64029038
6400bc2c:	xor    eax,esp
6400bc2e:	push   eax
6400bc2f:	lea    eax,[esp+0x10]
6400bc33:	mov    fs:0x0,eax
6400bc39:	mov    ebx,0x1
6400bc3e:	test   BYTE PTR ds:0x6402d438,bl
6400bc44:	jne    0x6400bcce
6400bc4a:	or     DWORD PTR ds:0x6402d438,ebx
6400bc50:	push   0x64024c9c
6400bc55:	push   0xe
6400bc57:	push   0x64024cc4
6400bc5c:	mov    DWORD PTR [esp+0x24],0x0
6400bc64:	call   0x64004730
6400bc69:	push   0x64024cd4
6400bc6e:	push   0x8
6400bc70:	push   0x64024c88
6400bc75:	mov    esi,eax
6400bc77:	call   0x64004930
6400bc7c:	add    esp,0x18
6400bc7f:	push   eax
6400bc80:	call   DWORD PTR ds:0x64022018
6400bc86:	add    DWORD PTR ds:0x6402d210,ebx
6400bc8c:	test   eax,eax
6400bc8e:	je     0x6400bcb5
6400bc90:	push   esi
6400bc91:	push   eax
6400bc92:	call   DWORD PTR ds:0x64022014
6400bc98:	add    DWORD PTR ds:0x6402d214,ebx
6400bc9e:	mov    ds:0x6402d434,eax
6400bca3:	mov    ecx,DWORD PTR [esp+0x10]
6400bca7:	mov    DWORD PTR fs:0x0,ecx
6400bcae:	pop    ecx
6400bcaf:	pop    esi
6400bcb0:	pop    ebx
6400bcb1:	mov    esp,ebp
6400bcb3:	pop    ebp
6400bcb4:	ret    
6400bcb5:	xor    eax,eax
6400bcb7:	mov    ds:0x6402d434,eax
6400bcbc:	mov    ecx,DWORD PTR [esp+0x10]
6400bcc0:	mov    DWORD PTR fs:0x0,ecx
6400bcc7:	pop    ecx
6400bcc8:	pop    esi
6400bcc9:	pop    ebx
6400bcca:	mov    esp,ebp
6400bccc:	pop    ebp
6400bccd:	ret    
6400bcce:	mov    eax,ds:0x6402d434
6400bcd3:	mov    ecx,DWORD PTR [esp+0x10]
6400bcd7:	mov    DWORD PTR fs:0x0,ecx
6400bcde:	pop    ecx
6400bcdf:	pop    esi
6400bce0:	pop    ebx
6400bce1:	mov    esp,ebp
6400bce3:	pop    ebp
6400bce4:	ret    
6400bce5:	int3   
6400bce6:	int3   
6400bce7:	int3   
6400bce8:	int3   
6400bce9:	int3   
6400bcea:	int3   
6400bceb:	int3   
6400bcec:	int3   
6400bced:	int3   
6400bcee:	int3   
6400bcef:	int3   
6400bcf0:	push   ebp
6400bcf1:	mov    ebp,esp
6400bcf3:	and    esp,0xfffffff8
6400bcf6:	push   0xffffffff
6400bcf8:	push   0x6402160e
6400bcfd:	mov    eax,fs:0x0
6400bd03:	push   eax
6400bd04:	push   ecx
6400bd05:	push   ebx
6400bd06:	push   esi
6400bd07:	mov    eax,ds:0x64029038
6400bd0c:	xor    eax,esp
6400bd0e:	push   eax
6400bd0f:	lea    eax,[esp+0x10]
6400bd13:	mov    fs:0x0,eax
6400bd19:	mov    ebx,0x1
6400bd1e:	test   BYTE PTR ds:0x6402d430,bl
6400bd24:	jne    0x6400bdae
6400bd2a:	or     DWORD PTR ds:0x6402d430,ebx
6400bd30:	push   0x64024d00
6400bd35:	push   0xf
6400bd37:	push   0x64024d30
6400bd3c:	mov    DWORD PTR [esp+0x24],0x0
6400bd44:	call   0x64004730
6400bd49:	push   0x64024d40
6400bd4e:	push   0x8
6400bd50:	push   0x64024c88
6400bd55:	mov    esi,eax
6400bd57:	call   0x64004930
6400bd5c:	add    esp,0x18
6400bd5f:	push   eax
6400bd60:	call   DWORD PTR ds:0x64022018
6400bd66:	add    DWORD PTR ds:0x6402d210,ebx
6400bd6c:	test   eax,eax
6400bd6e:	je     0x6400bd95
6400bd70:	push   esi
6400bd71:	push   eax
6400bd72:	call   DWORD PTR ds:0x64022014
6400bd78:	add    DWORD PTR ds:0x6402d214,ebx
6400bd7e:	mov    ds:0x6402d42c,eax
6400bd83:	mov    ecx,DWORD PTR [esp+0x10]
6400bd87:	mov    DWORD PTR fs:0x0,ecx
6400bd8e:	pop    ecx
6400bd8f:	pop    esi
6400bd90:	pop    ebx
6400bd91:	mov    esp,ebp
6400bd93:	pop    ebp
6400bd94:	ret    
6400bd95:	xor    eax,eax
6400bd97:	mov    ds:0x6402d42c,eax
6400bd9c:	mov    ecx,DWORD PTR [esp+0x10]
6400bda0:	mov    DWORD PTR fs:0x0,ecx
6400bda7:	pop    ecx
6400bda8:	pop    esi
6400bda9:	pop    ebx
6400bdaa:	mov    esp,ebp
6400bdac:	pop    ebp
6400bdad:	ret    
6400bdae:	mov    eax,ds:0x6402d42c
6400bdb3:	mov    ecx,DWORD PTR [esp+0x10]
6400bdb7:	mov    DWORD PTR fs:0x0,ecx
6400bdbe:	pop    ecx
6400bdbf:	pop    esi
6400bdc0:	pop    ebx
6400bdc1:	mov    esp,ebp
6400bdc3:	pop    ebp
6400bdc4:	ret    
6400bdc5:	int3   
6400bdc6:	int3   
6400bdc7:	int3   
6400bdc8:	int3   
6400bdc9:	int3   
6400bdca:	int3   
6400bdcb:	int3   
6400bdcc:	int3   
6400bdcd:	int3   
6400bdce:	int3   
6400bdcf:	int3   
6400bdd0:	push   ebp
6400bdd1:	mov    ebp,esp
6400bdd3:	and    esp,0xfffffff8
6400bdd6:	push   0xffffffff
6400bdd8:	push   0x640215de
6400bddd:	mov    eax,fs:0x0
6400bde3:	push   eax
6400bde4:	push   ecx
6400bde5:	push   ebx
6400bde6:	push   esi
6400bde7:	mov    eax,ds:0x64029038
6400bdec:	xor    eax,esp
6400bdee:	push   eax
6400bdef:	lea    eax,[esp+0x10]
6400bdf3:	mov    fs:0x0,eax
6400bdf9:	mov    ebx,0x1
6400bdfe:	test   BYTE PTR ds:0x6402d428,bl
6400be04:	jne    0x6400be8e
6400be0a:	or     DWORD PTR ds:0x6402d428,ebx
6400be10:	push   0x64024d74
6400be15:	push   0xf
6400be17:	push   0x64024db0
6400be1c:	mov    DWORD PTR [esp+0x24],0x0
6400be24:	call   0x64004730
6400be29:	push   0x64024dc0
6400be2e:	push   0x8
6400be30:	push   0x64024c88
6400be35:	mov    esi,eax
6400be37:	call   0x64004930
6400be3c:	add    esp,0x18
6400be3f:	push   eax
6400be40:	call   DWORD PTR ds:0x64022018
6400be46:	add    DWORD PTR ds:0x6402d210,ebx
6400be4c:	test   eax,eax
6400be4e:	je     0x6400be75
6400be50:	push   esi
6400be51:	push   eax
6400be52:	call   DWORD PTR ds:0x64022014
6400be58:	add    DWORD PTR ds:0x6402d214,ebx
6400be5e:	mov    ds:0x6402d424,eax
6400be63:	mov    ecx,DWORD PTR [esp+0x10]
6400be67:	mov    DWORD PTR fs:0x0,ecx
6400be6e:	pop    ecx
6400be6f:	pop    esi
6400be70:	pop    ebx
6400be71:	mov    esp,ebp
6400be73:	pop    ebp
6400be74:	ret    
6400be75:	xor    eax,eax
6400be77:	mov    ds:0x6402d424,eax
6400be7c:	mov    ecx,DWORD PTR [esp+0x10]
6400be80:	mov    DWORD PTR fs:0x0,ecx
6400be87:	pop    ecx
6400be88:	pop    esi
6400be89:	pop    ebx
6400be8a:	mov    esp,ebp
6400be8c:	pop    ebp
6400be8d:	ret    
6400be8e:	mov    eax,ds:0x6402d424
6400be93:	mov    ecx,DWORD PTR [esp+0x10]
6400be97:	mov    DWORD PTR fs:0x0,ecx
6400be9e:	pop    ecx
6400be9f:	pop    esi
6400bea0:	pop    ebx
6400bea1:	mov    esp,ebp
6400bea3:	pop    ebp
6400bea4:	ret    
6400bea5:	int3   
6400bea6:	int3   
6400bea7:	int3   
6400bea8:	int3   
6400bea9:	int3   
6400beaa:	int3   
6400beab:	int3   
6400beac:	int3   
6400bead:	int3   
6400beae:	int3   
6400beaf:	int3   
6400beb0:	push   ebp
6400beb1:	mov    ebp,esp
6400beb3:	and    esp,0xfffffff8
6400beb6:	push   0xffffffff
6400beb8:	push   0x640215ae
6400bebd:	mov    eax,fs:0x0
6400bec3:	push   eax
6400bec4:	push   ecx
6400bec5:	push   ebx
6400bec6:	push   esi
6400bec7:	mov    eax,ds:0x64029038
6400becc:	xor    eax,esp
6400bece:	push   eax
6400becf:	lea    eax,[esp+0x10]
6400bed3:	mov    fs:0x0,eax
6400bed9:	mov    ebx,0x1
6400bede:	test   BYTE PTR ds:0x6402d420,bl
6400bee4:	jne    0x6400bf6e
6400beea:	or     DWORD PTR ds:0x6402d420,ebx
6400bef0:	push   0x64024df0
6400bef5:	push   0x13
6400bef7:	push   0x64024e28
6400befc:	mov    DWORD PTR [esp+0x24],0x0
6400bf04:	call   0x64004730
6400bf09:	push   0x64024e40
6400bf0e:	push   0x8
6400bf10:	push   0x64024e80
6400bf15:	mov    esi,eax
6400bf17:	call   0x64004930
6400bf1c:	add    esp,0x18
6400bf1f:	push   eax
6400bf20:	call   DWORD PTR ds:0x64022018
6400bf26:	add    DWORD PTR ds:0x6402d210,ebx
6400bf2c:	test   eax,eax
6400bf2e:	je     0x6400bf55
6400bf30:	push   esi
6400bf31:	push   eax
6400bf32:	call   DWORD PTR ds:0x64022014
6400bf38:	add    DWORD PTR ds:0x6402d214,ebx
6400bf3e:	mov    ds:0x6402d41c,eax
6400bf43:	mov    ecx,DWORD PTR [esp+0x10]
6400bf47:	mov    DWORD PTR fs:0x0,ecx
6400bf4e:	pop    ecx
6400bf4f:	pop    esi
6400bf50:	pop    ebx
6400bf51:	mov    esp,ebp
6400bf53:	pop    ebp
6400bf54:	ret    
6400bf55:	xor    eax,eax
6400bf57:	mov    ds:0x6402d41c,eax
6400bf5c:	mov    ecx,DWORD PTR [esp+0x10]
6400bf60:	mov    DWORD PTR fs:0x0,ecx
6400bf67:	pop    ecx
6400bf68:	pop    esi
6400bf69:	pop    ebx
6400bf6a:	mov    esp,ebp
6400bf6c:	pop    ebp
6400bf6d:	ret    
6400bf6e:	mov    eax,ds:0x6402d41c
6400bf73:	mov    ecx,DWORD PTR [esp+0x10]
6400bf77:	mov    DWORD PTR fs:0x0,ecx
6400bf7e:	pop    ecx
6400bf7f:	pop    esi
6400bf80:	pop    ebx
6400bf81:	mov    esp,ebp
6400bf83:	pop    ebp
6400bf84:	ret    
6400bf85:	int3   
6400bf86:	int3   
6400bf87:	int3   
6400bf88:	int3   
6400bf89:	int3   
6400bf8a:	int3   
6400bf8b:	int3   
6400bf8c:	int3   
6400bf8d:	int3   
6400bf8e:	int3   
6400bf8f:	int3   
6400bf90:	push   ebp
6400bf91:	mov    ebp,esp
6400bf93:	and    esp,0xfffffff8
6400bf96:	push   0xffffffff
6400bf98:	push   0x6402157e
6400bf9d:	mov    eax,fs:0x0
6400bfa3:	push   eax
6400bfa4:	push   ecx
6400bfa5:	push   ebx
6400bfa6:	push   esi
6400bfa7:	mov    eax,ds:0x64029038
6400bfac:	xor    eax,esp
6400bfae:	push   eax
6400bfaf:	lea    eax,[esp+0x10]
6400bfb3:	mov    fs:0x0,eax
6400bfb9:	mov    ebx,0x1
6400bfbe:	test   BYTE PTR ds:0x6402d418,bl
6400bfc4:	jne    0x6400c04e
6400bfca:	or     DWORD PTR ds:0x6402d418,ebx
6400bfd0:	push   0x64024e94
6400bfd5:	push   0xe
6400bfd7:	push   0x64024ec4
6400bfdc:	mov    DWORD PTR [esp+0x24],0x0
6400bfe4:	call   0x64004730
6400bfe9:	push   0x64024ed4
6400bfee:	push   0x8
6400bff0:	push   0x64024e80
6400bff5:	mov    esi,eax
6400bff7:	call   0x64004930
6400bffc:	add    esp,0x18
6400bfff:	push   eax
6400c000:	call   DWORD PTR ds:0x64022018
6400c006:	add    DWORD PTR ds:0x6402d210,ebx
6400c00c:	test   eax,eax
6400c00e:	je     0x6400c035
6400c010:	push   esi
6400c011:	push   eax
6400c012:	call   DWORD PTR ds:0x64022014
6400c018:	add    DWORD PTR ds:0x6402d214,ebx
6400c01e:	mov    ds:0x6402d414,eax
6400c023:	mov    ecx,DWORD PTR [esp+0x10]
6400c027:	mov    DWORD PTR fs:0x0,ecx
6400c02e:	pop    ecx
6400c02f:	pop    esi
6400c030:	pop    ebx
6400c031:	mov    esp,ebp
6400c033:	pop    ebp
6400c034:	ret    
6400c035:	xor    eax,eax
6400c037:	mov    ds:0x6402d414,eax
6400c03c:	mov    ecx,DWORD PTR [esp+0x10]
6400c040:	mov    DWORD PTR fs:0x0,ecx
6400c047:	pop    ecx
6400c048:	pop    esi
6400c049:	pop    ebx
6400c04a:	mov    esp,ebp
6400c04c:	pop    ebp
6400c04d:	ret    
6400c04e:	mov    eax,ds:0x6402d414
6400c053:	mov    ecx,DWORD PTR [esp+0x10]
6400c057:	mov    DWORD PTR fs:0x0,ecx
6400c05e:	pop    ecx
6400c05f:	pop    esi
6400c060:	pop    ebx
6400c061:	mov    esp,ebp
6400c063:	pop    ebp
6400c064:	ret    
6400c065:	int3   
6400c066:	int3   
6400c067:	int3   
6400c068:	int3   
6400c069:	int3   
6400c06a:	int3   
6400c06b:	int3   
6400c06c:	int3   
6400c06d:	int3   
6400c06e:	int3   
6400c06f:	int3   
6400c070:	push   ebp
6400c071:	mov    ebp,esp
6400c073:	and    esp,0xfffffff8
6400c076:	push   0xffffffff
6400c078:	push   0x6402154e
6400c07d:	mov    eax,fs:0x0
6400c083:	push   eax
6400c084:	push   ecx
6400c085:	push   ebx
6400c086:	push   esi
6400c087:	mov    eax,ds:0x64029038
6400c08c:	xor    eax,esp
6400c08e:	push   eax
6400c08f:	lea    eax,[esp+0x10]
6400c093:	mov    fs:0x0,eax
6400c099:	mov    ebx,0x1
6400c09e:	test   BYTE PTR ds:0x6402d410,bl
6400c0a4:	jne    0x6400c12e
6400c0aa:	or     DWORD PTR ds:0x6402d410,ebx
6400c0b0:	push   0x64024ef8
6400c0b5:	push   0xb
6400c0b7:	push   0x64024f24
6400c0bc:	mov    DWORD PTR [esp+0x24],0x0
6400c0c4:	call   0x64004730
6400c0c9:	push   0x64024f30
6400c0ce:	push   0x8
6400c0d0:	push   0x64024e80
6400c0d5:	mov    esi,eax
6400c0d7:	call   0x64004930
6400c0dc:	add    esp,0x18
6400c0df:	push   eax
6400c0e0:	call   DWORD PTR ds:0x64022018
6400c0e6:	add    DWORD PTR ds:0x6402d210,ebx
6400c0ec:	test   eax,eax
6400c0ee:	je     0x6400c115
6400c0f0:	push   esi
6400c0f1:	push   eax
6400c0f2:	call   DWORD PTR ds:0x64022014
6400c0f8:	add    DWORD PTR ds:0x6402d214,ebx
6400c0fe:	mov    ds:0x6402d40c,eax
6400c103:	mov    ecx,DWORD PTR [esp+0x10]
6400c107:	mov    DWORD PTR fs:0x0,ecx
6400c10e:	pop    ecx
6400c10f:	pop    esi
6400c110:	pop    ebx
6400c111:	mov    esp,ebp
6400c113:	pop    ebp
6400c114:	ret    
6400c115:	xor    eax,eax
6400c117:	mov    ds:0x6402d40c,eax
6400c11c:	mov    ecx,DWORD PTR [esp+0x10]
6400c120:	mov    DWORD PTR fs:0x0,ecx
6400c127:	pop    ecx
6400c128:	pop    esi
6400c129:	pop    ebx
6400c12a:	mov    esp,ebp
6400c12c:	pop    ebp
6400c12d:	ret    
6400c12e:	mov    eax,ds:0x6402d40c
6400c133:	mov    ecx,DWORD PTR [esp+0x10]
6400c137:	mov    DWORD PTR fs:0x0,ecx
6400c13e:	pop    ecx
6400c13f:	pop    esi
6400c140:	pop    ebx
6400c141:	mov    esp,ebp
6400c143:	pop    ebp
6400c144:	ret    
6400c145:	int3   
6400c146:	int3   
6400c147:	int3   
6400c148:	int3   
6400c149:	int3   
6400c14a:	int3   
6400c14b:	int3   
6400c14c:	int3   
6400c14d:	int3   
6400c14e:	int3   
6400c14f:	int3   
6400c150:	push   ebp
6400c151:	mov    ebp,esp
6400c153:	and    esp,0xfffffff8
6400c156:	push   0xffffffff
6400c158:	push   0x6402151e
6400c15d:	mov    eax,fs:0x0
6400c163:	push   eax
6400c164:	push   ecx
6400c165:	push   ebx
6400c166:	push   esi
6400c167:	mov    eax,ds:0x64029038
6400c16c:	xor    eax,esp
6400c16e:	push   eax
6400c16f:	lea    eax,[esp+0x10]
6400c173:	mov    fs:0x0,eax
6400c179:	mov    ebx,0x1
6400c17e:	test   BYTE PTR ds:0x6402d408,bl
6400c184:	jne    0x6400c20e
6400c18a:	or     DWORD PTR ds:0x6402d408,ebx
6400c190:	push   0x64024f60
6400c195:	push   0xb
6400c197:	push   0x64024f90
6400c19c:	mov    DWORD PTR [esp+0x24],0x0
6400c1a4:	call   0x64004730
6400c1a9:	push   0x64024f9c
6400c1ae:	push   0x8
6400c1b0:	push   0x64024e80
6400c1b5:	mov    esi,eax
6400c1b7:	call   0x64004930
6400c1bc:	add    esp,0x18
6400c1bf:	push   eax
6400c1c0:	call   DWORD PTR ds:0x64022018
6400c1c6:	add    DWORD PTR ds:0x6402d210,ebx
6400c1cc:	test   eax,eax
6400c1ce:	je     0x6400c1f5
6400c1d0:	push   esi
6400c1d1:	push   eax
6400c1d2:	call   DWORD PTR ds:0x64022014
6400c1d8:	add    DWORD PTR ds:0x6402d214,ebx
6400c1de:	mov    ds:0x6402d404,eax
6400c1e3:	mov    ecx,DWORD PTR [esp+0x10]
6400c1e7:	mov    DWORD PTR fs:0x0,ecx
6400c1ee:	pop    ecx
6400c1ef:	pop    esi
6400c1f0:	pop    ebx
6400c1f1:	mov    esp,ebp
6400c1f3:	pop    ebp
6400c1f4:	ret    
6400c1f5:	xor    eax,eax
6400c1f7:	mov    ds:0x6402d404,eax
6400c1fc:	mov    ecx,DWORD PTR [esp+0x10]
6400c200:	mov    DWORD PTR fs:0x0,ecx
6400c207:	pop    ecx
6400c208:	pop    esi
6400c209:	pop    ebx
6400c20a:	mov    esp,ebp
6400c20c:	pop    ebp
6400c20d:	ret    
6400c20e:	mov    eax,ds:0x6402d404
6400c213:	mov    ecx,DWORD PTR [esp+0x10]
6400c217:	mov    DWORD PTR fs:0x0,ecx
6400c21e:	pop    ecx
6400c21f:	pop    esi
6400c220:	pop    ebx
6400c221:	mov    esp,ebp
6400c223:	pop    ebp
6400c224:	ret    
6400c225:	int3   
6400c226:	int3   
6400c227:	int3   
6400c228:	int3   
6400c229:	int3   
6400c22a:	int3   
6400c22b:	int3   
6400c22c:	int3   
6400c22d:	int3   
6400c22e:	int3   
6400c22f:	int3   
6400c230:	push   ebp
6400c231:	mov    ebp,esp
6400c233:	and    esp,0xfffffff8
6400c236:	push   0xffffffff
6400c238:	push   0x640214ee
6400c23d:	mov    eax,fs:0x0
6400c243:	push   eax
6400c244:	push   ecx
6400c245:	push   ebx
6400c246:	push   esi
6400c247:	mov    eax,ds:0x64029038
6400c24c:	xor    eax,esp
6400c24e:	push   eax
6400c24f:	lea    eax,[esp+0x10]
6400c253:	mov    fs:0x0,eax
6400c259:	mov    ebx,0x1
6400c25e:	test   BYTE PTR ds:0x6402d400,bl
6400c264:	jne    0x6400c2ee
6400c26a:	or     DWORD PTR ds:0x6402d400,ebx
6400c270:	push   0x64024fc0
6400c275:	push   0xb
6400c277:	push   0x64024ff4
6400c27c:	mov    DWORD PTR [esp+0x24],0x0
6400c284:	call   0x64004730
6400c289:	push   0x64025000
6400c28e:	push   0x8
6400c290:	push   0x64024e80
6400c295:	mov    esi,eax
6400c297:	call   0x64004930
6400c29c:	add    esp,0x18
6400c29f:	push   eax
6400c2a0:	call   DWORD PTR ds:0x64022018
6400c2a6:	add    DWORD PTR ds:0x6402d210,ebx
6400c2ac:	test   eax,eax
6400c2ae:	je     0x6400c2d5
6400c2b0:	push   esi
6400c2b1:	push   eax
6400c2b2:	call   DWORD PTR ds:0x64022014
6400c2b8:	add    DWORD PTR ds:0x6402d214,ebx
6400c2be:	mov    ds:0x6402d3fc,eax
6400c2c3:	mov    ecx,DWORD PTR [esp+0x10]
6400c2c7:	mov    DWORD PTR fs:0x0,ecx
6400c2ce:	pop    ecx
6400c2cf:	pop    esi
6400c2d0:	pop    ebx
6400c2d1:	mov    esp,ebp
6400c2d3:	pop    ebp
6400c2d4:	ret    
6400c2d5:	xor    eax,eax
6400c2d7:	mov    ds:0x6402d3fc,eax
6400c2dc:	mov    ecx,DWORD PTR [esp+0x10]
6400c2e0:	mov    DWORD PTR fs:0x0,ecx
6400c2e7:	pop    ecx
6400c2e8:	pop    esi
6400c2e9:	pop    ebx
6400c2ea:	mov    esp,ebp
6400c2ec:	pop    ebp
6400c2ed:	ret    
6400c2ee:	mov    eax,ds:0x6402d3fc
6400c2f3:	mov    ecx,DWORD PTR [esp+0x10]
6400c2f7:	mov    DWORD PTR fs:0x0,ecx
6400c2fe:	pop    ecx
6400c2ff:	pop    esi
6400c300:	pop    ebx
6400c301:	mov    esp,ebp
6400c303:	pop    ebp
6400c304:	ret    
6400c305:	int3   
6400c306:	int3   
6400c307:	int3   
6400c308:	int3   
6400c309:	int3   
6400c30a:	int3   
6400c30b:	int3   
6400c30c:	int3   
6400c30d:	int3   
6400c30e:	int3   
6400c30f:	int3   
6400c310:	push   ebp
6400c311:	mov    ebp,esp
6400c313:	and    esp,0xfffffff8
6400c316:	push   0xffffffff
6400c318:	push   0x640214be
6400c31d:	mov    eax,fs:0x0
6400c323:	push   eax
6400c324:	push   ecx
6400c325:	push   ebx
6400c326:	push   esi
6400c327:	mov    eax,ds:0x64029038
6400c32c:	xor    eax,esp
6400c32e:	push   eax
6400c32f:	lea    eax,[esp+0x10]
6400c333:	mov    fs:0x0,eax
6400c339:	mov    ebx,0x1
6400c33e:	test   BYTE PTR ds:0x6402d3f8,bl
6400c344:	jne    0x6400c3ce
6400c34a:	or     DWORD PTR ds:0x6402d3f8,ebx
6400c350:	push   0x64025030
6400c355:	push   0xc
6400c357:	push   0x64025068
6400c35c:	mov    DWORD PTR [esp+0x24],0x0
6400c364:	call   0x64004730
6400c369:	push   0x64025078
6400c36e:	push   0x8
6400c370:	push   0x64024e80
6400c375:	mov    esi,eax
6400c377:	call   0x64004930
6400c37c:	add    esp,0x18
6400c37f:	push   eax
6400c380:	call   DWORD PTR ds:0x64022018
6400c386:	add    DWORD PTR ds:0x6402d210,ebx
6400c38c:	test   eax,eax
6400c38e:	je     0x6400c3b5
6400c390:	push   esi
6400c391:	push   eax
6400c392:	call   DWORD PTR ds:0x64022014
6400c398:	add    DWORD PTR ds:0x6402d214,ebx
6400c39e:	mov    ds:0x6402d3f4,eax
6400c3a3:	mov    ecx,DWORD PTR [esp+0x10]
6400c3a7:	mov    DWORD PTR fs:0x0,ecx
6400c3ae:	pop    ecx
6400c3af:	pop    esi
6400c3b0:	pop    ebx
6400c3b1:	mov    esp,ebp
6400c3b3:	pop    ebp
6400c3b4:	ret    
6400c3b5:	xor    eax,eax
6400c3b7:	mov    ds:0x6402d3f4,eax
6400c3bc:	mov    ecx,DWORD PTR [esp+0x10]
6400c3c0:	mov    DWORD PTR fs:0x0,ecx
6400c3c7:	pop    ecx
6400c3c8:	pop    esi
6400c3c9:	pop    ebx
6400c3ca:	mov    esp,ebp
6400c3cc:	pop    ebp
6400c3cd:	ret    
6400c3ce:	mov    eax,ds:0x6402d3f4
6400c3d3:	mov    ecx,DWORD PTR [esp+0x10]
6400c3d7:	mov    DWORD PTR fs:0x0,ecx
6400c3de:	pop    ecx
6400c3df:	pop    esi
6400c3e0:	pop    ebx
6400c3e1:	mov    esp,ebp
6400c3e3:	pop    ebp
6400c3e4:	ret    
6400c3e5:	int3   
6400c3e6:	int3   
6400c3e7:	int3   
6400c3e8:	int3   
6400c3e9:	int3   
6400c3ea:	int3   
6400c3eb:	int3   
6400c3ec:	int3   
6400c3ed:	int3   
6400c3ee:	int3   
6400c3ef:	int3   
6400c3f0:	push   ebp
6400c3f1:	mov    ebp,esp
6400c3f3:	and    esp,0xfffffff8
6400c3f6:	push   0xffffffff
6400c3f8:	push   0x6402148e
6400c3fd:	mov    eax,fs:0x0
6400c403:	push   eax
6400c404:	push   ecx
6400c405:	push   ebx
6400c406:	push   esi
6400c407:	mov    eax,ds:0x64029038
6400c40c:	xor    eax,esp
6400c40e:	push   eax
6400c40f:	lea    eax,[esp+0x10]
6400c413:	mov    fs:0x0,eax
6400c419:	mov    ebx,0x1
6400c41e:	test   BYTE PTR ds:0x6402d3f0,bl
6400c424:	jne    0x6400c4ae
6400c42a:	or     DWORD PTR ds:0x6402d3f0,ebx
6400c430:	push   0x640250b8
6400c435:	push   0x10
6400c437:	push   0x640250e0
6400c43c:	mov    DWORD PTR [esp+0x24],0x0
6400c444:	call   0x64004730
6400c449:	push   0x640250f4
6400c44e:	push   0x8
6400c450:	push   0x64024e80
6400c455:	mov    esi,eax
6400c457:	call   0x64004930
6400c45c:	add    esp,0x18
6400c45f:	push   eax
6400c460:	call   DWORD PTR ds:0x64022018
6400c466:	add    DWORD PTR ds:0x6402d210,ebx
6400c46c:	test   eax,eax
6400c46e:	je     0x6400c495
6400c470:	push   esi
6400c471:	push   eax
6400c472:	call   DWORD PTR ds:0x64022014
6400c478:	add    DWORD PTR ds:0x6402d214,ebx
6400c47e:	mov    ds:0x6402d3ec,eax
6400c483:	mov    ecx,DWORD PTR [esp+0x10]
6400c487:	mov    DWORD PTR fs:0x0,ecx
6400c48e:	pop    ecx
6400c48f:	pop    esi
6400c490:	pop    ebx
6400c491:	mov    esp,ebp
6400c493:	pop    ebp
6400c494:	ret    
6400c495:	xor    eax,eax
6400c497:	mov    ds:0x6402d3ec,eax
6400c49c:	mov    ecx,DWORD PTR [esp+0x10]
6400c4a0:	mov    DWORD PTR fs:0x0,ecx
6400c4a7:	pop    ecx
6400c4a8:	pop    esi
6400c4a9:	pop    ebx
6400c4aa:	mov    esp,ebp
6400c4ac:	pop    ebp
6400c4ad:	ret    
6400c4ae:	mov    eax,ds:0x6402d3ec
6400c4b3:	mov    ecx,DWORD PTR [esp+0x10]
6400c4b7:	mov    DWORD PTR fs:0x0,ecx
6400c4be:	pop    ecx
6400c4bf:	pop    esi
6400c4c0:	pop    ebx
6400c4c1:	mov    esp,ebp
6400c4c3:	pop    ebp
6400c4c4:	ret    
6400c4c5:	int3   
6400c4c6:	int3   
6400c4c7:	int3   
6400c4c8:	int3   
6400c4c9:	int3   
6400c4ca:	int3   
6400c4cb:	int3   
6400c4cc:	int3   
6400c4cd:	int3   
6400c4ce:	int3   
6400c4cf:	int3   
6400c4d0:	push   ebp
6400c4d1:	mov    ebp,esp
6400c4d3:	and    esp,0xfffffff8
6400c4d6:	push   0xffffffff
6400c4d8:	push   0x6402145e
6400c4dd:	mov    eax,fs:0x0
6400c4e3:	push   eax
6400c4e4:	push   ecx
6400c4e5:	push   ebx
6400c4e6:	push   esi
6400c4e7:	mov    eax,ds:0x64029038
6400c4ec:	xor    eax,esp
6400c4ee:	push   eax
6400c4ef:	lea    eax,[esp+0x10]
6400c4f3:	mov    fs:0x0,eax
6400c4f9:	mov    ebx,0x1
6400c4fe:	test   BYTE PTR ds:0x6402d3e8,bl
6400c504:	jne    0x6400c58e
6400c50a:	or     DWORD PTR ds:0x6402d3e8,ebx
6400c510:	push   0x64025120
6400c515:	push   0x10
6400c517:	push   0x64025154
6400c51c:	mov    DWORD PTR [esp+0x24],0x0
6400c524:	call   0x64004730
6400c529:	push   0x64025168
6400c52e:	push   0x8
6400c530:	push   0x64024e80
6400c535:	mov    esi,eax
6400c537:	call   0x64004930
6400c53c:	add    esp,0x18
6400c53f:	push   eax
6400c540:	call   DWORD PTR ds:0x64022018
6400c546:	add    DWORD PTR ds:0x6402d210,ebx
6400c54c:	test   eax,eax
6400c54e:	je     0x6400c575
6400c550:	push   esi
6400c551:	push   eax
6400c552:	call   DWORD PTR ds:0x64022014
6400c558:	add    DWORD PTR ds:0x6402d214,ebx
6400c55e:	mov    ds:0x6402d3e4,eax
6400c563:	mov    ecx,DWORD PTR [esp+0x10]
6400c567:	mov    DWORD PTR fs:0x0,ecx
6400c56e:	pop    ecx
6400c56f:	pop    esi
6400c570:	pop    ebx
6400c571:	mov    esp,ebp
6400c573:	pop    ebp
6400c574:	ret    
6400c575:	xor    eax,eax
6400c577:	mov    ds:0x6402d3e4,eax
6400c57c:	mov    ecx,DWORD PTR [esp+0x10]
6400c580:	mov    DWORD PTR fs:0x0,ecx
6400c587:	pop    ecx
6400c588:	pop    esi
6400c589:	pop    ebx
6400c58a:	mov    esp,ebp
6400c58c:	pop    ebp
6400c58d:	ret    
6400c58e:	mov    eax,ds:0x6402d3e4
6400c593:	mov    ecx,DWORD PTR [esp+0x10]
6400c597:	mov    DWORD PTR fs:0x0,ecx
6400c59e:	pop    ecx
6400c59f:	pop    esi
6400c5a0:	pop    ebx
6400c5a1:	mov    esp,ebp
6400c5a3:	pop    ebp
6400c5a4:	ret    
6400c5a5:	int3   
6400c5a6:	int3   
6400c5a7:	int3   
6400c5a8:	int3   
6400c5a9:	int3   
6400c5aa:	int3   
6400c5ab:	int3   
6400c5ac:	int3   
6400c5ad:	int3   
6400c5ae:	int3   
6400c5af:	int3   
6400c5b0:	push   ebp
6400c5b1:	mov    ebp,esp
6400c5b3:	and    esp,0xfffffff8
6400c5b6:	push   0xffffffff
6400c5b8:	push   0x6402142e
6400c5bd:	mov    eax,fs:0x0
6400c5c3:	push   eax
6400c5c4:	push   ecx
6400c5c5:	push   ebx
6400c5c6:	push   esi
6400c5c7:	mov    eax,ds:0x64029038
6400c5cc:	xor    eax,esp
6400c5ce:	push   eax
6400c5cf:	lea    eax,[esp+0x10]
6400c5d3:	mov    fs:0x0,eax
6400c5d9:	mov    ebx,0x1
6400c5de:	test   BYTE PTR ds:0x6402d3e0,bl
6400c5e4:	jne    0x6400c66e
6400c5ea:	or     DWORD PTR ds:0x6402d3e0,ebx
6400c5f0:	push   0x640251a8
6400c5f5:	push   0x15
6400c5f7:	push   0x640251d4
6400c5fc:	mov    DWORD PTR [esp+0x24],0x0
6400c604:	call   0x64004730
6400c609:	push   0x640251ec
6400c60e:	push   0x8
6400c610:	push   0x64024e80
6400c615:	mov    esi,eax
6400c617:	call   0x64004930
6400c61c:	add    esp,0x18
6400c61f:	push   eax
6400c620:	call   DWORD PTR ds:0x64022018
6400c626:	add    DWORD PTR ds:0x6402d210,ebx
6400c62c:	test   eax,eax
6400c62e:	je     0x6400c655
6400c630:	push   esi
6400c631:	push   eax
6400c632:	call   DWORD PTR ds:0x64022014
6400c638:	add    DWORD PTR ds:0x6402d214,ebx
6400c63e:	mov    ds:0x6402d3dc,eax
6400c643:	mov    ecx,DWORD PTR [esp+0x10]
6400c647:	mov    DWORD PTR fs:0x0,ecx
6400c64e:	pop    ecx
6400c64f:	pop    esi
6400c650:	pop    ebx
6400c651:	mov    esp,ebp
6400c653:	pop    ebp
6400c654:	ret    
6400c655:	xor    eax,eax
6400c657:	mov    ds:0x6402d3dc,eax
6400c65c:	mov    ecx,DWORD PTR [esp+0x10]
6400c660:	mov    DWORD PTR fs:0x0,ecx
6400c667:	pop    ecx
6400c668:	pop    esi
6400c669:	pop    ebx
6400c66a:	mov    esp,ebp
6400c66c:	pop    ebp
6400c66d:	ret    
6400c66e:	mov    eax,ds:0x6402d3dc
6400c673:	mov    ecx,DWORD PTR [esp+0x10]
6400c677:	mov    DWORD PTR fs:0x0,ecx
6400c67e:	pop    ecx
6400c67f:	pop    esi
6400c680:	pop    ebx
6400c681:	mov    esp,ebp
6400c683:	pop    ebp
6400c684:	ret    
6400c685:	int3   
6400c686:	int3   
6400c687:	int3   
6400c688:	int3   
6400c689:	int3   
6400c68a:	int3   
6400c68b:	int3   
6400c68c:	int3   
6400c68d:	int3   
6400c68e:	int3   
6400c68f:	int3   
6400c690:	push   ebp
6400c691:	mov    ebp,esp
6400c693:	and    esp,0xfffffff8
6400c696:	push   0xffffffff
6400c698:	push   0x640213fe
6400c69d:	mov    eax,fs:0x0
6400c6a3:	push   eax
6400c6a4:	push   ecx
6400c6a5:	push   ebx
6400c6a6:	push   esi
6400c6a7:	mov    eax,ds:0x64029038
6400c6ac:	xor    eax,esp
6400c6ae:	push   eax
6400c6af:	lea    eax,[esp+0x10]
6400c6b3:	mov    fs:0x0,eax
6400c6b9:	mov    ebx,0x1
6400c6be:	test   BYTE PTR ds:0x6402d3d8,bl
6400c6c4:	jne    0x6400c74e
6400c6ca:	or     DWORD PTR ds:0x6402d3d8,ebx
6400c6d0:	push   0x64025228
6400c6d5:	push   0x18
6400c6d7:	push   0x64025268
6400c6dc:	mov    DWORD PTR [esp+0x24],0x0
6400c6e4:	call   0x64004730
6400c6e9:	push   0x64025284
6400c6ee:	push   0x8
6400c6f0:	push   0x64024e80
6400c6f5:	mov    esi,eax
6400c6f7:	call   0x64004930
6400c6fc:	add    esp,0x18
6400c6ff:	push   eax
6400c700:	call   DWORD PTR ds:0x64022018
6400c706:	add    DWORD PTR ds:0x6402d210,ebx
6400c70c:	test   eax,eax
6400c70e:	je     0x6400c735
6400c710:	push   esi
6400c711:	push   eax
6400c712:	call   DWORD PTR ds:0x64022014
6400c718:	add    DWORD PTR ds:0x6402d214,ebx
6400c71e:	mov    ds:0x6402d3d4,eax
6400c723:	mov    ecx,DWORD PTR [esp+0x10]
6400c727:	mov    DWORD PTR fs:0x0,ecx
6400c72e:	pop    ecx
6400c72f:	pop    esi
6400c730:	pop    ebx
6400c731:	mov    esp,ebp
6400c733:	pop    ebp
6400c734:	ret    
6400c735:	xor    eax,eax
6400c737:	mov    ds:0x6402d3d4,eax
6400c73c:	mov    ecx,DWORD PTR [esp+0x10]
6400c740:	mov    DWORD PTR fs:0x0,ecx
6400c747:	pop    ecx
6400c748:	pop    esi
6400c749:	pop    ebx
6400c74a:	mov    esp,ebp
6400c74c:	pop    ebp
6400c74d:	ret    
6400c74e:	mov    eax,ds:0x6402d3d4
6400c753:	mov    ecx,DWORD PTR [esp+0x10]
6400c757:	mov    DWORD PTR fs:0x0,ecx
6400c75e:	pop    ecx
6400c75f:	pop    esi
6400c760:	pop    ebx
6400c761:	mov    esp,ebp
6400c763:	pop    ebp
6400c764:	ret    
6400c765:	int3   
6400c766:	int3   
6400c767:	int3   
6400c768:	int3   
6400c769:	int3   
6400c76a:	int3   
6400c76b:	int3   
6400c76c:	int3   
6400c76d:	int3   
6400c76e:	int3   
6400c76f:	int3   
6400c770:	push   ebp
6400c771:	mov    ebp,esp
6400c773:	and    esp,0xfffffff8
6400c776:	push   0xffffffff
6400c778:	push   0x640213ce
6400c77d:	mov    eax,fs:0x0
6400c783:	push   eax
6400c784:	push   ecx
6400c785:	push   ebx
6400c786:	push   esi
6400c787:	mov    eax,ds:0x64029038
6400c78c:	xor    eax,esp
6400c78e:	push   eax
6400c78f:	lea    eax,[esp+0x10]
6400c793:	mov    fs:0x0,eax
6400c799:	mov    ebx,0x1
6400c79e:	test   BYTE PTR ds:0x6402d3d0,bl
6400c7a4:	jne    0x6400c82e
6400c7aa:	or     DWORD PTR ds:0x6402d3d0,ebx
6400c7b0:	push   0x640252c0
6400c7b5:	push   0xf
6400c7b7:	push   0x640252f4
6400c7bc:	mov    DWORD PTR [esp+0x24],0x0
6400c7c4:	call   0x64004730
6400c7c9:	push   0x64025304
6400c7ce:	push   0x8
6400c7d0:	push   0x64024e80
6400c7d5:	mov    esi,eax
6400c7d7:	call   0x64004930
6400c7dc:	add    esp,0x18
6400c7df:	push   eax
6400c7e0:	call   DWORD PTR ds:0x64022018
6400c7e6:	add    DWORD PTR ds:0x6402d210,ebx
6400c7ec:	test   eax,eax
6400c7ee:	je     0x6400c815
6400c7f0:	push   esi
6400c7f1:	push   eax
6400c7f2:	call   DWORD PTR ds:0x64022014
6400c7f8:	add    DWORD PTR ds:0x6402d214,ebx
6400c7fe:	mov    ds:0x6402d3cc,eax
6400c803:	mov    ecx,DWORD PTR [esp+0x10]
6400c807:	mov    DWORD PTR fs:0x0,ecx
6400c80e:	pop    ecx
6400c80f:	pop    esi
6400c810:	pop    ebx
6400c811:	mov    esp,ebp
6400c813:	pop    ebp
6400c814:	ret    
6400c815:	xor    eax,eax
6400c817:	mov    ds:0x6402d3cc,eax
6400c81c:	mov    ecx,DWORD PTR [esp+0x10]
6400c820:	mov    DWORD PTR fs:0x0,ecx
6400c827:	pop    ecx
6400c828:	pop    esi
6400c829:	pop    ebx
6400c82a:	mov    esp,ebp
6400c82c:	pop    ebp
6400c82d:	ret    
6400c82e:	mov    eax,ds:0x6402d3cc
6400c833:	mov    ecx,DWORD PTR [esp+0x10]
6400c837:	mov    DWORD PTR fs:0x0,ecx
6400c83e:	pop    ecx
6400c83f:	pop    esi
6400c840:	pop    ebx
6400c841:	mov    esp,ebp
6400c843:	pop    ebp
6400c844:	ret    
6400c845:	int3   
6400c846:	int3   
6400c847:	int3   
6400c848:	int3   
6400c849:	int3   
6400c84a:	int3   
6400c84b:	int3   
6400c84c:	int3   
6400c84d:	int3   
6400c84e:	int3   
6400c84f:	int3   
6400c850:	push   ebp
6400c851:	mov    ebp,esp
6400c853:	and    esp,0xfffffff8
6400c856:	push   0xffffffff
6400c858:	push   0x6402139e
6400c85d:	mov    eax,fs:0x0
6400c863:	push   eax
6400c864:	push   ecx
6400c865:	push   ebx
6400c866:	push   esi
6400c867:	mov    eax,ds:0x64029038
6400c86c:	xor    eax,esp
6400c86e:	push   eax
6400c86f:	lea    eax,[esp+0x10]
6400c873:	mov    fs:0x0,eax
6400c879:	mov    ebx,0x1
6400c87e:	test   BYTE PTR ds:0x6402d3c8,bl
6400c884:	jne    0x6400c90e
6400c88a:	or     DWORD PTR ds:0x6402d3c8,ebx
6400c890:	push   0x64025330
6400c895:	push   0x14
6400c897:	push   0x64025370
6400c89c:	mov    DWORD PTR [esp+0x24],0x0
6400c8a4:	call   0x64004730
6400c8a9:	push   0x64025388
6400c8ae:	push   0x8
6400c8b0:	push   0x64024e80
6400c8b5:	mov    esi,eax
6400c8b7:	call   0x64004930
6400c8bc:	add    esp,0x18
6400c8bf:	push   eax
6400c8c0:	call   DWORD PTR ds:0x64022018
6400c8c6:	add    DWORD PTR ds:0x6402d210,ebx
6400c8cc:	test   eax,eax
6400c8ce:	je     0x6400c8f5
6400c8d0:	push   esi
6400c8d1:	push   eax
6400c8d2:	call   DWORD PTR ds:0x64022014
6400c8d8:	add    DWORD PTR ds:0x6402d214,ebx
6400c8de:	mov    ds:0x6402d3c4,eax
6400c8e3:	mov    ecx,DWORD PTR [esp+0x10]
6400c8e7:	mov    DWORD PTR fs:0x0,ecx
6400c8ee:	pop    ecx
6400c8ef:	pop    esi
6400c8f0:	pop    ebx
6400c8f1:	mov    esp,ebp
6400c8f3:	pop    ebp
6400c8f4:	ret    
6400c8f5:	xor    eax,eax
6400c8f7:	mov    ds:0x6402d3c4,eax
6400c8fc:	mov    ecx,DWORD PTR [esp+0x10]
6400c900:	mov    DWORD PTR fs:0x0,ecx
6400c907:	pop    ecx
6400c908:	pop    esi
6400c909:	pop    ebx
6400c90a:	mov    esp,ebp
6400c90c:	pop    ebp
6400c90d:	ret    
6400c90e:	mov    eax,ds:0x6402d3c4
6400c913:	mov    ecx,DWORD PTR [esp+0x10]
6400c917:	mov    DWORD PTR fs:0x0,ecx
6400c91e:	pop    ecx
6400c91f:	pop    esi
6400c920:	pop    ebx
6400c921:	mov    esp,ebp
6400c923:	pop    ebp
6400c924:	ret    
6400c925:	int3   
6400c926:	int3   
6400c927:	int3   
6400c928:	int3   
6400c929:	int3   
6400c92a:	int3   
6400c92b:	int3   
6400c92c:	int3   
6400c92d:	int3   
6400c92e:	int3   
6400c92f:	int3   
6400c930:	push   ebp
6400c931:	mov    ebp,esp
6400c933:	and    esp,0xfffffff8
6400c936:	push   0xffffffff
6400c938:	push   0x6402136e
6400c93d:	mov    eax,fs:0x0
6400c943:	push   eax
6400c944:	push   ecx
6400c945:	push   ebx
6400c946:	push   esi
6400c947:	mov    eax,ds:0x64029038
6400c94c:	xor    eax,esp
6400c94e:	push   eax
6400c94f:	lea    eax,[esp+0x10]
6400c953:	mov    fs:0x0,eax
6400c959:	mov    ebx,0x1
6400c95e:	test   BYTE PTR ds:0x6402d3c0,bl
6400c964:	jne    0x6400c9ee
6400c96a:	or     DWORD PTR ds:0x6402d3c0,ebx
6400c970:	push   0x640253bc
6400c975:	push   0x14
6400c977:	push   0x640253ec
6400c97c:	mov    DWORD PTR [esp+0x24],0x0
6400c984:	call   0x64004730
6400c989:	push   0x64025404
6400c98e:	push   0x8
6400c990:	push   0x64024e80
6400c995:	mov    esi,eax
6400c997:	call   0x64004930
6400c99c:	add    esp,0x18
6400c99f:	push   eax
6400c9a0:	call   DWORD PTR ds:0x64022018
6400c9a6:	add    DWORD PTR ds:0x6402d210,ebx
6400c9ac:	test   eax,eax
6400c9ae:	je     0x6400c9d5
6400c9b0:	push   esi
6400c9b1:	push   eax
6400c9b2:	call   DWORD PTR ds:0x64022014
6400c9b8:	add    DWORD PTR ds:0x6402d214,ebx
6400c9be:	mov    ds:0x6402d3bc,eax
6400c9c3:	mov    ecx,DWORD PTR [esp+0x10]
6400c9c7:	mov    DWORD PTR fs:0x0,ecx
6400c9ce:	pop    ecx
6400c9cf:	pop    esi
6400c9d0:	pop    ebx
6400c9d1:	mov    esp,ebp
6400c9d3:	pop    ebp
6400c9d4:	ret    
6400c9d5:	xor    eax,eax
6400c9d7:	mov    ds:0x6402d3bc,eax
6400c9dc:	mov    ecx,DWORD PTR [esp+0x10]
6400c9e0:	mov    DWORD PTR fs:0x0,ecx
6400c9e7:	pop    ecx
6400c9e8:	pop    esi
6400c9e9:	pop    ebx
6400c9ea:	mov    esp,ebp
6400c9ec:	pop    ebp
6400c9ed:	ret    
6400c9ee:	mov    eax,ds:0x6402d3bc
6400c9f3:	mov    ecx,DWORD PTR [esp+0x10]
6400c9f7:	mov    DWORD PTR fs:0x0,ecx
6400c9fe:	pop    ecx
6400c9ff:	pop    esi
6400ca00:	pop    ebx
6400ca01:	mov    esp,ebp
6400ca03:	pop    ebp
6400ca04:	ret    
6400ca05:	int3   
6400ca06:	int3   
6400ca07:	int3   
6400ca08:	int3   
6400ca09:	int3   
6400ca0a:	int3   
6400ca0b:	int3   
6400ca0c:	int3   
6400ca0d:	int3   
6400ca0e:	int3   
6400ca0f:	int3   
6400ca10:	push   ebp
6400ca11:	mov    ebp,esp
6400ca13:	and    esp,0xfffffff8
6400ca16:	push   0xffffffff
6400ca18:	push   0x6402133e
6400ca1d:	mov    eax,fs:0x0
6400ca23:	push   eax
6400ca24:	push   ecx
6400ca25:	push   ebx
6400ca26:	push   esi
6400ca27:	mov    eax,ds:0x64029038
6400ca2c:	xor    eax,esp
6400ca2e:	push   eax
6400ca2f:	lea    eax,[esp+0x10]
6400ca33:	mov    fs:0x0,eax
6400ca39:	mov    ebx,0x1
6400ca3e:	test   BYTE PTR ds:0x6402d3b8,bl
6400ca44:	jne    0x6400cace
6400ca4a:	or     DWORD PTR ds:0x6402d3b8,ebx
6400ca50:	push   0x6402542c
6400ca55:	push   0xf
6400ca57:	push   0x64025458
6400ca5c:	mov    DWORD PTR [esp+0x24],0x0
6400ca64:	call   0x64004730
6400ca69:	push   0x64025468
6400ca6e:	push   0x8
6400ca70:	push   0x64024e80
6400ca75:	mov    esi,eax
6400ca77:	call   0x64004930
6400ca7c:	add    esp,0x18
6400ca7f:	push   eax
6400ca80:	call   DWORD PTR ds:0x64022018
6400ca86:	add    DWORD PTR ds:0x6402d210,ebx
6400ca8c:	test   eax,eax
6400ca8e:	je     0x6400cab5
6400ca90:	push   esi
6400ca91:	push   eax
6400ca92:	call   DWORD PTR ds:0x64022014
6400ca98:	add    DWORD PTR ds:0x6402d214,ebx
6400ca9e:	mov    ds:0x6402d3b4,eax
6400caa3:	mov    ecx,DWORD PTR [esp+0x10]
6400caa7:	mov    DWORD PTR fs:0x0,ecx
6400caae:	pop    ecx
6400caaf:	pop    esi
6400cab0:	pop    ebx
6400cab1:	mov    esp,ebp
6400cab3:	pop    ebp
6400cab4:	ret    
6400cab5:	xor    eax,eax
6400cab7:	mov    ds:0x6402d3b4,eax
6400cabc:	mov    ecx,DWORD PTR [esp+0x10]
6400cac0:	mov    DWORD PTR fs:0x0,ecx
6400cac7:	pop    ecx
6400cac8:	pop    esi
6400cac9:	pop    ebx
6400caca:	mov    esp,ebp
6400cacc:	pop    ebp
6400cacd:	ret    
6400cace:	mov    eax,ds:0x6402d3b4
6400cad3:	mov    ecx,DWORD PTR [esp+0x10]
6400cad7:	mov    DWORD PTR fs:0x0,ecx
6400cade:	pop    ecx
6400cadf:	pop    esi
6400cae0:	pop    ebx
6400cae1:	mov    esp,ebp
6400cae3:	pop    ebp
6400cae4:	ret    
6400cae5:	int3   
6400cae6:	int3   
6400cae7:	int3   
6400cae8:	int3   
6400cae9:	int3   
6400caea:	int3   
6400caeb:	int3   
6400caec:	int3   
6400caed:	int3   
6400caee:	int3   
6400caef:	int3   
6400caf0:	push   ebp
6400caf1:	mov    ebp,esp
6400caf3:	and    esp,0xfffffff8
6400caf6:	push   0xffffffff
6400caf8:	push   0x6402130e
6400cafd:	mov    eax,fs:0x0
6400cb03:	push   eax
6400cb04:	push   ecx
6400cb05:	push   ebx
6400cb06:	push   esi
6400cb07:	mov    eax,ds:0x64029038
6400cb0c:	xor    eax,esp
6400cb0e:	push   eax
6400cb0f:	lea    eax,[esp+0x10]
6400cb13:	mov    fs:0x0,eax
6400cb19:	mov    ebx,0x1
6400cb1e:	test   BYTE PTR ds:0x6402d3b0,bl
6400cb24:	jne    0x6400cbae
6400cb2a:	or     DWORD PTR ds:0x6402d3b0,ebx
6400cb30:	push   0x64025498
6400cb35:	push   0x12
6400cb37:	push   0x640254bc
6400cb3c:	mov    DWORD PTR [esp+0x24],0x0
6400cb44:	call   0x64004730
6400cb49:	push   0x640254d0
6400cb4e:	push   0x8
6400cb50:	push   0x64024e80
6400cb55:	mov    esi,eax
6400cb57:	call   0x64004930
6400cb5c:	add    esp,0x18
6400cb5f:	push   eax
6400cb60:	call   DWORD PTR ds:0x64022018
6400cb66:	add    DWORD PTR ds:0x6402d210,ebx
6400cb6c:	test   eax,eax
6400cb6e:	je     0x6400cb95
6400cb70:	push   esi
6400cb71:	push   eax
6400cb72:	call   DWORD PTR ds:0x64022014
6400cb78:	add    DWORD PTR ds:0x6402d214,ebx
6400cb7e:	mov    ds:0x6402d3ac,eax
6400cb83:	mov    ecx,DWORD PTR [esp+0x10]
6400cb87:	mov    DWORD PTR fs:0x0,ecx
6400cb8e:	pop    ecx
6400cb8f:	pop    esi
6400cb90:	pop    ebx
6400cb91:	mov    esp,ebp
6400cb93:	pop    ebp
6400cb94:	ret    
6400cb95:	xor    eax,eax
6400cb97:	mov    ds:0x6402d3ac,eax
6400cb9c:	mov    ecx,DWORD PTR [esp+0x10]
6400cba0:	mov    DWORD PTR fs:0x0,ecx
6400cba7:	pop    ecx
6400cba8:	pop    esi
6400cba9:	pop    ebx
6400cbaa:	mov    esp,ebp
6400cbac:	pop    ebp
6400cbad:	ret    
6400cbae:	mov    eax,ds:0x6402d3ac
6400cbb3:	mov    ecx,DWORD PTR [esp+0x10]
6400cbb7:	mov    DWORD PTR fs:0x0,ecx
6400cbbe:	pop    ecx
6400cbbf:	pop    esi
6400cbc0:	pop    ebx
6400cbc1:	mov    esp,ebp
6400cbc3:	pop    ebp
6400cbc4:	ret    
6400cbc5:	int3   
6400cbc6:	int3   
6400cbc7:	int3   
6400cbc8:	int3   
6400cbc9:	int3   
6400cbca:	int3   
6400cbcb:	int3   
6400cbcc:	int3   
6400cbcd:	int3   
6400cbce:	int3   
6400cbcf:	int3   
6400cbd0:	push   ebp
6400cbd1:	mov    ebp,esp
6400cbd3:	and    esp,0xfffffff8
6400cbd6:	push   0xffffffff
6400cbd8:	push   0x640212de
6400cbdd:	mov    eax,fs:0x0
6400cbe3:	push   eax
6400cbe4:	push   ecx
6400cbe5:	push   ebx
6400cbe6:	push   esi
6400cbe7:	mov    eax,ds:0x64029038
6400cbec:	xor    eax,esp
6400cbee:	push   eax
6400cbef:	lea    eax,[esp+0x10]
6400cbf3:	mov    fs:0x0,eax
6400cbf9:	mov    ebx,0x1
6400cbfe:	test   BYTE PTR ds:0x6402d3a8,bl
6400cc04:	jne    0x6400cc8e
6400cc0a:	or     DWORD PTR ds:0x6402d3a8,ebx
6400cc10:	push   0x640254fc
6400cc15:	push   0x11
6400cc17:	push   0x64025538
6400cc1c:	mov    DWORD PTR [esp+0x24],0x0
6400cc24:	call   0x64004730
6400cc29:	push   0x6402554c
6400cc2e:	push   0x8
6400cc30:	push   0x64024e80
6400cc35:	mov    esi,eax
6400cc37:	call   0x64004930
6400cc3c:	add    esp,0x18
6400cc3f:	push   eax
6400cc40:	call   DWORD PTR ds:0x64022018
6400cc46:	add    DWORD PTR ds:0x6402d210,ebx
6400cc4c:	test   eax,eax
6400cc4e:	je     0x6400cc75
6400cc50:	push   esi
6400cc51:	push   eax
6400cc52:	call   DWORD PTR ds:0x64022014
6400cc58:	add    DWORD PTR ds:0x6402d214,ebx
6400cc5e:	mov    ds:0x6402d3a4,eax
6400cc63:	mov    ecx,DWORD PTR [esp+0x10]
6400cc67:	mov    DWORD PTR fs:0x0,ecx
6400cc6e:	pop    ecx
6400cc6f:	pop    esi
6400cc70:	pop    ebx
6400cc71:	mov    esp,ebp
6400cc73:	pop    ebp
6400cc74:	ret    
6400cc75:	xor    eax,eax
6400cc77:	mov    ds:0x6402d3a4,eax
6400cc7c:	mov    ecx,DWORD PTR [esp+0x10]
6400cc80:	mov    DWORD PTR fs:0x0,ecx
6400cc87:	pop    ecx
6400cc88:	pop    esi
6400cc89:	pop    ebx
6400cc8a:	mov    esp,ebp
6400cc8c:	pop    ebp
6400cc8d:	ret    
6400cc8e:	mov    eax,ds:0x6402d3a4
6400cc93:	mov    ecx,DWORD PTR [esp+0x10]
6400cc97:	mov    DWORD PTR fs:0x0,ecx
6400cc9e:	pop    ecx
6400cc9f:	pop    esi
6400cca0:	pop    ebx
6400cca1:	mov    esp,ebp
6400cca3:	pop    ebp
6400cca4:	ret    
6400cca5:	int3   
6400cca6:	int3   
6400cca7:	int3   
6400cca8:	int3   
6400cca9:	int3   
6400ccaa:	int3   
6400ccab:	int3   
6400ccac:	int3   
6400ccad:	int3   
6400ccae:	int3   
6400ccaf:	int3   
6400ccb0:	push   ebp
6400ccb1:	mov    ebp,esp
6400ccb3:	and    esp,0xfffffff8
6400ccb6:	push   0xffffffff
6400ccb8:	push   0x640212ae
6400ccbd:	mov    eax,fs:0x0
6400ccc3:	push   eax
6400ccc4:	push   ecx
6400ccc5:	push   ebx
6400ccc6:	push   esi
6400ccc7:	mov    eax,ds:0x64029038
6400cccc:	xor    eax,esp
6400ccce:	push   eax
6400cccf:	lea    eax,[esp+0x10]
6400ccd3:	mov    fs:0x0,eax
6400ccd9:	mov    ebx,0x1
6400ccde:	test   BYTE PTR ds:0x6402d3a0,bl
6400cce4:	jne    0x6400cd6e
6400ccea:	or     DWORD PTR ds:0x6402d3a0,ebx
6400ccf0:	push   0x6402558c
6400ccf5:	push   0x17
6400ccf7:	push   0x640255c0
6400ccfc:	mov    DWORD PTR [esp+0x24],0x0
6400cd04:	call   0x64004730
6400cd09:	push   0x640255d8
6400cd0e:	push   0x8
6400cd10:	push   0x64025600
6400cd15:	mov    esi,eax
6400cd17:	call   0x64004930
6400cd1c:	add    esp,0x18
6400cd1f:	push   eax
6400cd20:	call   DWORD PTR ds:0x64022018
6400cd26:	add    DWORD PTR ds:0x6402d210,ebx
6400cd2c:	test   eax,eax
6400cd2e:	je     0x6400cd55
6400cd30:	push   esi
6400cd31:	push   eax
6400cd32:	call   DWORD PTR ds:0x64022014
6400cd38:	add    DWORD PTR ds:0x6402d214,ebx
6400cd3e:	mov    ds:0x6402d39c,eax
6400cd43:	mov    ecx,DWORD PTR [esp+0x10]
6400cd47:	mov    DWORD PTR fs:0x0,ecx
6400cd4e:	pop    ecx
6400cd4f:	pop    esi
6400cd50:	pop    ebx
6400cd51:	mov    esp,ebp
6400cd53:	pop    ebp
6400cd54:	ret    
6400cd55:	xor    eax,eax
6400cd57:	mov    ds:0x6402d39c,eax
6400cd5c:	mov    ecx,DWORD PTR [esp+0x10]
6400cd60:	mov    DWORD PTR fs:0x0,ecx
6400cd67:	pop    ecx
6400cd68:	pop    esi
6400cd69:	pop    ebx
6400cd6a:	mov    esp,ebp
6400cd6c:	pop    ebp
6400cd6d:	ret    
6400cd6e:	mov    eax,ds:0x6402d39c
6400cd73:	mov    ecx,DWORD PTR [esp+0x10]
6400cd77:	mov    DWORD PTR fs:0x0,ecx
6400cd7e:	pop    ecx
6400cd7f:	pop    esi
6400cd80:	pop    ebx
6400cd81:	mov    esp,ebp
6400cd83:	pop    ebp
6400cd84:	ret    
6400cd85:	int3   
6400cd86:	int3   
6400cd87:	int3   
6400cd88:	int3   
6400cd89:	int3   
6400cd8a:	int3   
6400cd8b:	int3   
6400cd8c:	int3   
6400cd8d:	int3   
6400cd8e:	int3   
6400cd8f:	int3   
6400cd90:	push   ebp
6400cd91:	mov    ebp,esp
6400cd93:	and    esp,0xfffffff8
6400cd96:	push   0xffffffff
6400cd98:	push   0x6402127e
6400cd9d:	mov    eax,fs:0x0
6400cda3:	push   eax
6400cda4:	push   ecx
6400cda5:	push   ebx
6400cda6:	push   esi
6400cda7:	mov    eax,ds:0x64029038
6400cdac:	xor    eax,esp
6400cdae:	push   eax
6400cdaf:	lea    eax,[esp+0x10]
6400cdb3:	mov    fs:0x0,eax
6400cdb9:	mov    ebx,0x1
6400cdbe:	test   BYTE PTR ds:0x6402d398,bl
6400cdc4:	jne    0x6400ce4e
6400cdca:	or     DWORD PTR ds:0x6402d398,ebx
6400cdd0:	push   0x64025614
6400cdd5:	push   0x19
6400cdd7:	push   0x64025648
6400cddc:	mov    DWORD PTR [esp+0x24],0x0
6400cde4:	call   0x64004730
6400cde9:	push   0x64025664
6400cdee:	push   0x7
6400cdf0:	push   0x6402569c
6400cdf5:	mov    esi,eax
6400cdf7:	call   0x64004930
6400cdfc:	add    esp,0x18
6400cdff:	push   eax
6400ce00:	call   DWORD PTR ds:0x64022018
6400ce06:	add    DWORD PTR ds:0x6402d210,ebx
6400ce0c:	test   eax,eax
6400ce0e:	je     0x6400ce35
6400ce10:	push   esi
6400ce11:	push   eax
6400ce12:	call   DWORD PTR ds:0x64022014
6400ce18:	add    DWORD PTR ds:0x6402d214,ebx
6400ce1e:	mov    ds:0x6402d394,eax
6400ce23:	mov    ecx,DWORD PTR [esp+0x10]
6400ce27:	mov    DWORD PTR fs:0x0,ecx
6400ce2e:	pop    ecx
6400ce2f:	pop    esi
6400ce30:	pop    ebx
6400ce31:	mov    esp,ebp
6400ce33:	pop    ebp
6400ce34:	ret    
6400ce35:	xor    eax,eax
6400ce37:	mov    ds:0x6402d394,eax
6400ce3c:	mov    ecx,DWORD PTR [esp+0x10]
6400ce40:	mov    DWORD PTR fs:0x0,ecx
6400ce47:	pop    ecx
6400ce48:	pop    esi
6400ce49:	pop    ebx
6400ce4a:	mov    esp,ebp
6400ce4c:	pop    ebp
6400ce4d:	ret    
6400ce4e:	mov    eax,ds:0x6402d394
6400ce53:	mov    ecx,DWORD PTR [esp+0x10]
6400ce57:	mov    DWORD PTR fs:0x0,ecx
6400ce5e:	pop    ecx
6400ce5f:	pop    esi
6400ce60:	pop    ebx
6400ce61:	mov    esp,ebp
6400ce63:	pop    ebp
6400ce64:	ret    
6400ce65:	int3   
6400ce66:	int3   
6400ce67:	int3   
6400ce68:	int3   
6400ce69:	int3   
6400ce6a:	int3   
6400ce6b:	int3   
6400ce6c:	int3   
6400ce6d:	int3   
6400ce6e:	int3   
6400ce6f:	int3   
6400ce70:	push   ebp
6400ce71:	mov    ebp,esp
6400ce73:	and    esp,0xfffffff8
6400ce76:	push   0xffffffff
6400ce78:	push   0x6402124e
6400ce7d:	mov    eax,fs:0x0
6400ce83:	push   eax
6400ce84:	push   ecx
6400ce85:	push   ebx
6400ce86:	push   esi
6400ce87:	mov    eax,ds:0x64029038
6400ce8c:	xor    eax,esp
6400ce8e:	push   eax
6400ce8f:	lea    eax,[esp+0x10]
6400ce93:	mov    fs:0x0,eax
6400ce99:	mov    ebx,0x1
6400ce9e:	test   BYTE PTR ds:0x6402d390,bl
6400cea4:	jne    0x6400cf2e
6400ceaa:	or     DWORD PTR ds:0x6402d390,ebx
6400ceb0:	push   0x640256ac
6400ceb5:	push   0x1d
6400ceb7:	push   0x640256d0
6400cebc:	mov    DWORD PTR [esp+0x24],0x0
6400cec4:	call   0x64004730
6400cec9:	push   0x640256f0
6400cece:	push   0x8
6400ced0:	push   0x64025718
6400ced5:	mov    esi,eax
6400ced7:	call   0x64004930
6400cedc:	add    esp,0x18
6400cedf:	push   eax
6400cee0:	call   DWORD PTR ds:0x64022018
6400cee6:	add    DWORD PTR ds:0x6402d210,ebx
6400ceec:	test   eax,eax
6400ceee:	je     0x6400cf15
6400cef0:	push   esi
6400cef1:	push   eax
6400cef2:	call   DWORD PTR ds:0x64022014
6400cef8:	add    DWORD PTR ds:0x6402d214,ebx
6400cefe:	mov    ds:0x6402d38c,eax
6400cf03:	mov    ecx,DWORD PTR [esp+0x10]
6400cf07:	mov    DWORD PTR fs:0x0,ecx
6400cf0e:	pop    ecx
6400cf0f:	pop    esi
6400cf10:	pop    ebx
6400cf11:	mov    esp,ebp
6400cf13:	pop    ebp
6400cf14:	ret    
6400cf15:	xor    eax,eax
6400cf17:	mov    ds:0x6402d38c,eax
6400cf1c:	mov    ecx,DWORD PTR [esp+0x10]
6400cf20:	mov    DWORD PTR fs:0x0,ecx
6400cf27:	pop    ecx
6400cf28:	pop    esi
6400cf29:	pop    ebx
6400cf2a:	mov    esp,ebp
6400cf2c:	pop    ebp
6400cf2d:	ret    
6400cf2e:	mov    eax,ds:0x6402d38c
6400cf33:	mov    ecx,DWORD PTR [esp+0x10]
6400cf37:	mov    DWORD PTR fs:0x0,ecx
6400cf3e:	pop    ecx
6400cf3f:	pop    esi
6400cf40:	pop    ebx
6400cf41:	mov    esp,ebp
6400cf43:	pop    ebp
6400cf44:	ret    
6400cf45:	int3   
6400cf46:	int3   
6400cf47:	int3   
6400cf48:	int3   
6400cf49:	int3   
6400cf4a:	int3   
6400cf4b:	int3   
6400cf4c:	int3   
6400cf4d:	int3   
6400cf4e:	int3   
6400cf4f:	int3   
6400cf50:	push   ebp
6400cf51:	mov    ebp,esp
6400cf53:	and    esp,0xfffffff8
6400cf56:	push   0xffffffff
6400cf58:	push   0x6402121e
6400cf5d:	mov    eax,fs:0x0
6400cf63:	push   eax
6400cf64:	push   ecx
6400cf65:	push   ebx
6400cf66:	push   esi
6400cf67:	mov    eax,ds:0x64029038
6400cf6c:	xor    eax,esp
6400cf6e:	push   eax
6400cf6f:	lea    eax,[esp+0x10]
6400cf73:	mov    fs:0x0,eax
6400cf79:	mov    ebx,0x1
6400cf7e:	test   BYTE PTR ds:0x6402d388,bl
6400cf84:	jne    0x6400d00e
6400cf8a:	or     DWORD PTR ds:0x6402d388,ebx
6400cf90:	push   0x6402572c
6400cf95:	push   0x15
6400cf97:	push   0x64025760
6400cf9c:	mov    DWORD PTR [esp+0x24],0x0
6400cfa4:	call   0x64004730
6400cfa9:	push   0x64025778
6400cfae:	push   0x8
6400cfb0:	push   0x64025718
6400cfb5:	mov    esi,eax
6400cfb7:	call   0x64004930
6400cfbc:	add    esp,0x18
6400cfbf:	push   eax
6400cfc0:	call   DWORD PTR ds:0x64022018
6400cfc6:	add    DWORD PTR ds:0x6402d210,ebx
6400cfcc:	test   eax,eax
6400cfce:	je     0x6400cff5
6400cfd0:	push   esi
6400cfd1:	push   eax
6400cfd2:	call   DWORD PTR ds:0x64022014
6400cfd8:	add    DWORD PTR ds:0x6402d214,ebx
6400cfde:	mov    ds:0x6402d384,eax
6400cfe3:	mov    ecx,DWORD PTR [esp+0x10]
6400cfe7:	mov    DWORD PTR fs:0x0,ecx
6400cfee:	pop    ecx
6400cfef:	pop    esi
6400cff0:	pop    ebx
6400cff1:	mov    esp,ebp
6400cff3:	pop    ebp
6400cff4:	ret    
6400cff5:	xor    eax,eax
6400cff7:	mov    ds:0x6402d384,eax
6400cffc:	mov    ecx,DWORD PTR [esp+0x10]
6400d000:	mov    DWORD PTR fs:0x0,ecx
6400d007:	pop    ecx
6400d008:	pop    esi
6400d009:	pop    ebx
6400d00a:	mov    esp,ebp
6400d00c:	pop    ebp
6400d00d:	ret    
6400d00e:	mov    eax,ds:0x6402d384
6400d013:	mov    ecx,DWORD PTR [esp+0x10]
6400d017:	mov    DWORD PTR fs:0x0,ecx
6400d01e:	pop    ecx
6400d01f:	pop    esi
6400d020:	pop    ebx
6400d021:	mov    esp,ebp
6400d023:	pop    ebp
6400d024:	ret    
6400d025:	int3   
6400d026:	int3   
6400d027:	int3   
6400d028:	int3   
6400d029:	int3   
6400d02a:	int3   
6400d02b:	int3   
6400d02c:	int3   
6400d02d:	int3   
6400d02e:	int3   
6400d02f:	int3   
6400d030:	push   ebp
6400d031:	mov    ebp,esp
6400d033:	and    esp,0xfffffff8
6400d036:	push   0xffffffff
6400d038:	push   0x640211ee
6400d03d:	mov    eax,fs:0x0
6400d043:	push   eax
6400d044:	push   ecx
6400d045:	push   ebx
6400d046:	push   esi
6400d047:	mov    eax,ds:0x64029038
6400d04c:	xor    eax,esp
6400d04e:	push   eax
6400d04f:	lea    eax,[esp+0x10]
6400d053:	mov    fs:0x0,eax
6400d059:	mov    ebx,0x1
6400d05e:	test   BYTE PTR ds:0x6402d380,bl
6400d064:	jne    0x6400d0ee
6400d06a:	or     DWORD PTR ds:0x6402d380,ebx
6400d070:	push   0x640257b4
6400d075:	push   0x15
6400d077:	push   0x640257ec
6400d07c:	mov    DWORD PTR [esp+0x24],0x0
6400d084:	call   0x64004730
6400d089:	push   0x64025804
6400d08e:	push   0x8
6400d090:	push   0x64025718
6400d095:	mov    esi,eax
6400d097:	call   0x64004930
6400d09c:	add    esp,0x18
6400d09f:	push   eax
6400d0a0:	call   DWORD PTR ds:0x64022018
6400d0a6:	add    DWORD PTR ds:0x6402d210,ebx
6400d0ac:	test   eax,eax
6400d0ae:	je     0x6400d0d5
6400d0b0:	push   esi
6400d0b1:	push   eax
6400d0b2:	call   DWORD PTR ds:0x64022014
6400d0b8:	add    DWORD PTR ds:0x6402d214,ebx
6400d0be:	mov    ds:0x6402d37c,eax
6400d0c3:	mov    ecx,DWORD PTR [esp+0x10]
6400d0c7:	mov    DWORD PTR fs:0x0,ecx
6400d0ce:	pop    ecx
6400d0cf:	pop    esi
6400d0d0:	pop    ebx
6400d0d1:	mov    esp,ebp
6400d0d3:	pop    ebp
6400d0d4:	ret    
6400d0d5:	xor    eax,eax
6400d0d7:	mov    ds:0x6402d37c,eax
6400d0dc:	mov    ecx,DWORD PTR [esp+0x10]
6400d0e0:	mov    DWORD PTR fs:0x0,ecx
6400d0e7:	pop    ecx
6400d0e8:	pop    esi
6400d0e9:	pop    ebx
6400d0ea:	mov    esp,ebp
6400d0ec:	pop    ebp
6400d0ed:	ret    
6400d0ee:	mov    eax,ds:0x6402d37c
6400d0f3:	mov    ecx,DWORD PTR [esp+0x10]
6400d0f7:	mov    DWORD PTR fs:0x0,ecx
6400d0fe:	pop    ecx
6400d0ff:	pop    esi
6400d100:	pop    ebx
6400d101:	mov    esp,ebp
6400d103:	pop    ebp
6400d104:	ret    
6400d105:	int3   
6400d106:	int3   
6400d107:	int3   
6400d108:	int3   
6400d109:	int3   
6400d10a:	int3   
6400d10b:	int3   
6400d10c:	int3   
6400d10d:	int3   
6400d10e:	int3   
6400d10f:	int3   
6400d110:	push   ebp
6400d111:	mov    ebp,esp
6400d113:	and    esp,0xfffffff8
6400d116:	push   0xffffffff
6400d118:	push   0x640211be
6400d11d:	mov    eax,fs:0x0
6400d123:	push   eax
6400d124:	push   ecx
6400d125:	push   ebx
6400d126:	push   esi
6400d127:	mov    eax,ds:0x64029038
6400d12c:	xor    eax,esp
6400d12e:	push   eax
6400d12f:	lea    eax,[esp+0x10]
6400d133:	mov    fs:0x0,eax
6400d139:	mov    ebx,0x1
6400d13e:	test   BYTE PTR ds:0x6402d378,bl
6400d144:	jne    0x6400d1ce
6400d14a:	or     DWORD PTR ds:0x6402d378,ebx
6400d150:	push   0x64025844
6400d155:	push   0x34
6400d157:	push   0x64025870
6400d15c:	mov    DWORD PTR [esp+0x24],0x0
6400d164:	call   0x64004730
6400d169:	push   0x640258a8
6400d16e:	push   0x8
6400d170:	push   0x64025718
6400d175:	mov    esi,eax
6400d177:	call   0x64004930
6400d17c:	add    esp,0x18
6400d17f:	push   eax
6400d180:	call   DWORD PTR ds:0x64022018
6400d186:	add    DWORD PTR ds:0x6402d210,ebx
6400d18c:	test   eax,eax
6400d18e:	je     0x6400d1b5
6400d190:	push   esi
6400d191:	push   eax
6400d192:	call   DWORD PTR ds:0x64022014
6400d198:	add    DWORD PTR ds:0x6402d214,ebx
6400d19e:	mov    ds:0x6402d374,eax
6400d1a3:	mov    ecx,DWORD PTR [esp+0x10]
6400d1a7:	mov    DWORD PTR fs:0x0,ecx
6400d1ae:	pop    ecx
6400d1af:	pop    esi
6400d1b0:	pop    ebx
6400d1b1:	mov    esp,ebp
6400d1b3:	pop    ebp
6400d1b4:	ret    
6400d1b5:	xor    eax,eax
6400d1b7:	mov    ds:0x6402d374,eax
6400d1bc:	mov    ecx,DWORD PTR [esp+0x10]
6400d1c0:	mov    DWORD PTR fs:0x0,ecx
6400d1c7:	pop    ecx
6400d1c8:	pop    esi
6400d1c9:	pop    ebx
6400d1ca:	mov    esp,ebp
6400d1cc:	pop    ebp
6400d1cd:	ret    
6400d1ce:	mov    eax,ds:0x6402d374
6400d1d3:	mov    ecx,DWORD PTR [esp+0x10]
6400d1d7:	mov    DWORD PTR fs:0x0,ecx
6400d1de:	pop    ecx
6400d1df:	pop    esi
6400d1e0:	pop    ebx
6400d1e1:	mov    esp,ebp
6400d1e3:	pop    ebp
6400d1e4:	ret    
6400d1e5:	int3   
6400d1e6:	int3   
6400d1e7:	int3   
6400d1e8:	int3   
6400d1e9:	int3   
6400d1ea:	int3   
6400d1eb:	int3   
6400d1ec:	int3   
6400d1ed:	int3   
6400d1ee:	int3   
6400d1ef:	int3   
6400d1f0:	push   ebp
6400d1f1:	mov    ebp,esp
6400d1f3:	and    esp,0xfffffff8
6400d1f6:	push   0xffffffff
6400d1f8:	push   0x6402118e
6400d1fd:	mov    eax,fs:0x0
6400d203:	push   eax
6400d204:	push   ecx
6400d205:	push   ebx
6400d206:	push   esi
6400d207:	mov    eax,ds:0x64029038
6400d20c:	xor    eax,esp
6400d20e:	push   eax
6400d20f:	lea    eax,[esp+0x10]
6400d213:	mov    fs:0x0,eax
6400d219:	mov    ebx,0x1
6400d21e:	test   BYTE PTR ds:0x6402d370,bl
6400d224:	jne    0x6400d2ae
6400d22a:	or     DWORD PTR ds:0x6402d370,ebx
6400d230:	push   0x640258e4
6400d235:	push   0xb
6400d237:	push   0x64025914
6400d23c:	mov    DWORD PTR [esp+0x24],0x0
6400d244:	call   0x64004730
6400d249:	push   0x64025920
6400d24e:	push   0x8
6400d250:	push   0x64025718
6400d255:	mov    esi,eax
6400d257:	call   0x64004930
6400d25c:	add    esp,0x18
6400d25f:	push   eax
6400d260:	call   DWORD PTR ds:0x64022018
6400d266:	add    DWORD PTR ds:0x6402d210,ebx
6400d26c:	test   eax,eax
6400d26e:	je     0x6400d295
6400d270:	push   esi
6400d271:	push   eax
6400d272:	call   DWORD PTR ds:0x64022014
6400d278:	add    DWORD PTR ds:0x6402d214,ebx
6400d27e:	mov    ds:0x6402d36c,eax
6400d283:	mov    ecx,DWORD PTR [esp+0x10]
6400d287:	mov    DWORD PTR fs:0x0,ecx
6400d28e:	pop    ecx
6400d28f:	pop    esi
6400d290:	pop    ebx
6400d291:	mov    esp,ebp
6400d293:	pop    ebp
6400d294:	ret    
6400d295:	xor    eax,eax
6400d297:	mov    ds:0x6402d36c,eax
6400d29c:	mov    ecx,DWORD PTR [esp+0x10]
6400d2a0:	mov    DWORD PTR fs:0x0,ecx
6400d2a7:	pop    ecx
6400d2a8:	pop    esi
6400d2a9:	pop    ebx
6400d2aa:	mov    esp,ebp
6400d2ac:	pop    ebp
6400d2ad:	ret    
6400d2ae:	mov    eax,ds:0x6402d36c
6400d2b3:	mov    ecx,DWORD PTR [esp+0x10]
6400d2b7:	mov    DWORD PTR fs:0x0,ecx
6400d2be:	pop    ecx
6400d2bf:	pop    esi
6400d2c0:	pop    ebx
6400d2c1:	mov    esp,ebp
6400d2c3:	pop    ebp
6400d2c4:	ret    
6400d2c5:	int3   
6400d2c6:	int3   
6400d2c7:	int3   
6400d2c8:	int3   
6400d2c9:	int3   
6400d2ca:	int3   
6400d2cb:	int3   
6400d2cc:	int3   
6400d2cd:	int3   
6400d2ce:	int3   
6400d2cf:	int3   
6400d2d0:	push   ebp
6400d2d1:	mov    ebp,esp
6400d2d3:	and    esp,0xfffffff8
6400d2d6:	push   0xffffffff
6400d2d8:	push   0x6402115e
6400d2dd:	mov    eax,fs:0x0
6400d2e3:	push   eax
6400d2e4:	push   ecx
6400d2e5:	push   ebx
6400d2e6:	push   esi
6400d2e7:	mov    eax,ds:0x64029038
6400d2ec:	xor    eax,esp
6400d2ee:	push   eax
6400d2ef:	lea    eax,[esp+0x10]
6400d2f3:	mov    fs:0x0,eax
6400d2f9:	mov    ebx,0x1
6400d2fe:	test   BYTE PTR ds:0x6402d368,bl
6400d304:	jne    0x6400d38e
6400d30a:	or     DWORD PTR ds:0x6402d368,ebx
6400d310:	push   0x64025948
6400d315:	push   0xd
6400d317:	push   0x64025988
6400d31c:	mov    DWORD PTR [esp+0x24],0x0
6400d324:	call   0x64004730
6400d329:	push   0x64025998
6400d32e:	push   0x8
6400d330:	push   0x64025718
6400d335:	mov    esi,eax
6400d337:	call   0x64004930
6400d33c:	add    esp,0x18
6400d33f:	push   eax
6400d340:	call   DWORD PTR ds:0x64022018
6400d346:	add    DWORD PTR ds:0x6402d210,ebx
6400d34c:	test   eax,eax
6400d34e:	je     0x6400d375
6400d350:	push   esi
6400d351:	push   eax
6400d352:	call   DWORD PTR ds:0x64022014
6400d358:	add    DWORD PTR ds:0x6402d214,ebx
6400d35e:	mov    ds:0x6402d364,eax
6400d363:	mov    ecx,DWORD PTR [esp+0x10]
6400d367:	mov    DWORD PTR fs:0x0,ecx
6400d36e:	pop    ecx
6400d36f:	pop    esi
6400d370:	pop    ebx
6400d371:	mov    esp,ebp
6400d373:	pop    ebp
6400d374:	ret    
6400d375:	xor    eax,eax
6400d377:	mov    ds:0x6402d364,eax
6400d37c:	mov    ecx,DWORD PTR [esp+0x10]
6400d380:	mov    DWORD PTR fs:0x0,ecx
6400d387:	pop    ecx
6400d388:	pop    esi
6400d389:	pop    ebx
6400d38a:	mov    esp,ebp
6400d38c:	pop    ebp
6400d38d:	ret    
6400d38e:	mov    eax,ds:0x6402d364
6400d393:	mov    ecx,DWORD PTR [esp+0x10]
6400d397:	mov    DWORD PTR fs:0x0,ecx
6400d39e:	pop    ecx
6400d39f:	pop    esi
6400d3a0:	pop    ebx
6400d3a1:	mov    esp,ebp
6400d3a3:	pop    ebp
6400d3a4:	ret    
6400d3a5:	int3   
6400d3a6:	int3   
6400d3a7:	int3   
6400d3a8:	int3   
6400d3a9:	int3   
6400d3aa:	int3   
6400d3ab:	int3   
6400d3ac:	int3   
6400d3ad:	int3   
6400d3ae:	int3   
6400d3af:	int3   
6400d3b0:	push   ebp
6400d3b1:	mov    ebp,esp
6400d3b3:	and    esp,0xfffffff8
6400d3b6:	push   0xffffffff
6400d3b8:	push   0x6402112e
6400d3bd:	mov    eax,fs:0x0
6400d3c3:	push   eax
6400d3c4:	push   ecx
6400d3c5:	push   ebx
6400d3c6:	push   esi
6400d3c7:	mov    eax,ds:0x64029038
6400d3cc:	xor    eax,esp
6400d3ce:	push   eax
6400d3cf:	lea    eax,[esp+0x10]
6400d3d3:	mov    fs:0x0,eax
6400d3d9:	mov    ebx,0x1
6400d3de:	test   BYTE PTR ds:0x6402d360,bl
6400d3e4:	jne    0x6400d46e
6400d3ea:	or     DWORD PTR ds:0x6402d360,ebx
6400d3f0:	push   0x640259d4
6400d3f5:	push   0xe
6400d3f7:	push   0x64025a00
6400d3fc:	mov    DWORD PTR [esp+0x24],0x0
6400d404:	call   0x64004730
6400d409:	push   0x64025a10
6400d40e:	push   0x8
6400d410:	push   0x64025718
6400d415:	mov    esi,eax
6400d417:	call   0x64004930
6400d41c:	add    esp,0x18
6400d41f:	push   eax
6400d420:	call   DWORD PTR ds:0x64022018
6400d426:	add    DWORD PTR ds:0x6402d210,ebx
6400d42c:	test   eax,eax
6400d42e:	je     0x6400d455
6400d430:	push   esi
6400d431:	push   eax
6400d432:	call   DWORD PTR ds:0x64022014
6400d438:	add    DWORD PTR ds:0x6402d214,ebx
6400d43e:	mov    ds:0x6402d35c,eax
6400d443:	mov    ecx,DWORD PTR [esp+0x10]
6400d447:	mov    DWORD PTR fs:0x0,ecx
6400d44e:	pop    ecx
6400d44f:	pop    esi
6400d450:	pop    ebx
6400d451:	mov    esp,ebp
6400d453:	pop    ebp
6400d454:	ret    
6400d455:	xor    eax,eax
6400d457:	mov    ds:0x6402d35c,eax
6400d45c:	mov    ecx,DWORD PTR [esp+0x10]
6400d460:	mov    DWORD PTR fs:0x0,ecx
6400d467:	pop    ecx
6400d468:	pop    esi
6400d469:	pop    ebx
6400d46a:	mov    esp,ebp
6400d46c:	pop    ebp
6400d46d:	ret    
6400d46e:	mov    eax,ds:0x6402d35c
6400d473:	mov    ecx,DWORD PTR [esp+0x10]
6400d477:	mov    DWORD PTR fs:0x0,ecx
6400d47e:	pop    ecx
6400d47f:	pop    esi
6400d480:	pop    ebx
6400d481:	mov    esp,ebp
6400d483:	pop    ebp
6400d484:	ret    
6400d485:	int3   
6400d486:	int3   
6400d487:	int3   
6400d488:	int3   
6400d489:	int3   
6400d48a:	int3   
6400d48b:	int3   
6400d48c:	int3   
6400d48d:	int3   
6400d48e:	int3   
6400d48f:	int3   
6400d490:	push   ebp
6400d491:	mov    ebp,esp
6400d493:	and    esp,0xfffffff8
6400d496:	push   0xffffffff
6400d498:	push   0x640210fe
6400d49d:	mov    eax,fs:0x0
6400d4a3:	push   eax
6400d4a4:	push   ecx
6400d4a5:	push   ebx
6400d4a6:	push   esi
6400d4a7:	mov    eax,ds:0x64029038
6400d4ac:	xor    eax,esp
6400d4ae:	push   eax
6400d4af:	lea    eax,[esp+0x10]
6400d4b3:	mov    fs:0x0,eax
6400d4b9:	mov    ebx,0x1
6400d4be:	test   BYTE PTR ds:0x6402d358,bl
6400d4c4:	jne    0x6400d54e
6400d4ca:	or     DWORD PTR ds:0x6402d358,ebx
6400d4d0:	push   0x64025a40
6400d4d5:	push   0x14
6400d4d7:	push   0x64025a64
6400d4dc:	mov    DWORD PTR [esp+0x24],0x0
6400d4e4:	call   0x64004730
6400d4e9:	push   0x64025a7c
6400d4ee:	push   0x8
6400d4f0:	push   0x64025718
6400d4f5:	mov    esi,eax
6400d4f7:	call   0x64004930
6400d4fc:	add    esp,0x18
6400d4ff:	push   eax
6400d500:	call   DWORD PTR ds:0x64022018
6400d506:	add    DWORD PTR ds:0x6402d210,ebx
6400d50c:	test   eax,eax
6400d50e:	je     0x6400d535
6400d510:	push   esi
6400d511:	push   eax
6400d512:	call   DWORD PTR ds:0x64022014
6400d518:	add    DWORD PTR ds:0x6402d214,ebx
6400d51e:	mov    ds:0x6402d354,eax
6400d523:	mov    ecx,DWORD PTR [esp+0x10]
6400d527:	mov    DWORD PTR fs:0x0,ecx
6400d52e:	pop    ecx
6400d52f:	pop    esi
6400d530:	pop    ebx
6400d531:	mov    esp,ebp
6400d533:	pop    ebp
6400d534:	ret    
6400d535:	xor    eax,eax
6400d537:	mov    ds:0x6402d354,eax
6400d53c:	mov    ecx,DWORD PTR [esp+0x10]
6400d540:	mov    DWORD PTR fs:0x0,ecx
6400d547:	pop    ecx
6400d548:	pop    esi
6400d549:	pop    ebx
6400d54a:	mov    esp,ebp
6400d54c:	pop    ebp
6400d54d:	ret    
6400d54e:	mov    eax,ds:0x6402d354
6400d553:	mov    ecx,DWORD PTR [esp+0x10]
6400d557:	mov    DWORD PTR fs:0x0,ecx
6400d55e:	pop    ecx
6400d55f:	pop    esi
6400d560:	pop    ebx
6400d561:	mov    esp,ebp
6400d563:	pop    ebp
6400d564:	ret    
6400d565:	int3   
6400d566:	int3   
6400d567:	int3   
6400d568:	int3   
6400d569:	int3   
6400d56a:	int3   
6400d56b:	int3   
6400d56c:	int3   
6400d56d:	int3   
6400d56e:	int3   
6400d56f:	int3   
6400d570:	push   ebp
6400d571:	mov    ebp,esp
6400d573:	and    esp,0xfffffff8
6400d576:	push   0xffffffff
6400d578:	push   0x640210ce
6400d57d:	mov    eax,fs:0x0
6400d583:	push   eax
6400d584:	push   ecx
6400d585:	push   ebx
6400d586:	push   esi
6400d587:	mov    eax,ds:0x64029038
6400d58c:	xor    eax,esp
6400d58e:	push   eax
6400d58f:	lea    eax,[esp+0x10]
6400d593:	mov    fs:0x0,eax
6400d599:	mov    ebx,0x1
6400d59e:	test   BYTE PTR ds:0x6402d350,bl
6400d5a4:	jne    0x6400d62e
6400d5aa:	or     DWORD PTR ds:0x6402d350,ebx
6400d5b0:	push   0x64025abc
6400d5b5:	push   0xd
6400d5b7:	push   0x64025af8
6400d5bc:	mov    DWORD PTR [esp+0x24],0x0
6400d5c4:	call   0x64004730
6400d5c9:	push   0x64025b08
6400d5ce:	push   0x8
6400d5d0:	push   0x64025718
6400d5d5:	mov    esi,eax
6400d5d7:	call   0x64004930
6400d5dc:	add    esp,0x18
6400d5df:	push   eax
6400d5e0:	call   DWORD PTR ds:0x64022018
6400d5e6:	add    DWORD PTR ds:0x6402d210,ebx
6400d5ec:	test   eax,eax
6400d5ee:	je     0x6400d615
6400d5f0:	push   esi
6400d5f1:	push   eax
6400d5f2:	call   DWORD PTR ds:0x64022014
6400d5f8:	add    DWORD PTR ds:0x6402d214,ebx
6400d5fe:	mov    ds:0x6402d34c,eax
6400d603:	mov    ecx,DWORD PTR [esp+0x10]
6400d607:	mov    DWORD PTR fs:0x0,ecx
6400d60e:	pop    ecx
6400d60f:	pop    esi
6400d610:	pop    ebx
6400d611:	mov    esp,ebp
6400d613:	pop    ebp
6400d614:	ret    
6400d615:	xor    eax,eax
6400d617:	mov    ds:0x6402d34c,eax
6400d61c:	mov    ecx,DWORD PTR [esp+0x10]
6400d620:	mov    DWORD PTR fs:0x0,ecx
6400d627:	pop    ecx
6400d628:	pop    esi
6400d629:	pop    ebx
6400d62a:	mov    esp,ebp
6400d62c:	pop    ebp
6400d62d:	ret    
6400d62e:	mov    eax,ds:0x6402d34c
6400d633:	mov    ecx,DWORD PTR [esp+0x10]
6400d637:	mov    DWORD PTR fs:0x0,ecx
6400d63e:	pop    ecx
6400d63f:	pop    esi
6400d640:	pop    ebx
6400d641:	mov    esp,ebp
6400d643:	pop    ebp
6400d644:	ret    
6400d645:	int3   
6400d646:	int3   
6400d647:	int3   
6400d648:	int3   
6400d649:	int3   
6400d64a:	int3   
6400d64b:	int3   
6400d64c:	int3   
6400d64d:	int3   
6400d64e:	int3   
6400d64f:	int3   
6400d650:	push   ebp
6400d651:	mov    ebp,esp
6400d653:	and    esp,0xfffffff8
6400d656:	push   0xffffffff
6400d658:	push   0x6402109e
6400d65d:	mov    eax,fs:0x0
6400d663:	push   eax
6400d664:	push   ecx
6400d665:	push   ebx
6400d666:	push   esi
6400d667:	mov    eax,ds:0x64029038
6400d66c:	xor    eax,esp
6400d66e:	push   eax
6400d66f:	lea    eax,[esp+0x10]
6400d673:	mov    fs:0x0,eax
6400d679:	mov    ebx,0x1
6400d67e:	test   BYTE PTR ds:0x6402d348,bl
6400d684:	jne    0x6400d70e
6400d68a:	or     DWORD PTR ds:0x6402d348,ebx
6400d690:	push   0x64025b34
6400d695:	push   0xe
6400d697:	push   0x64025b64
6400d69c:	mov    DWORD PTR [esp+0x24],0x0
6400d6a4:	call   0x64004730
6400d6a9:	push   0x64025b74
6400d6ae:	push   0x8
6400d6b0:	push   0x64025718
6400d6b5:	mov    esi,eax
6400d6b7:	call   0x64004930
6400d6bc:	add    esp,0x18
6400d6bf:	push   eax
6400d6c0:	call   DWORD PTR ds:0x64022018
6400d6c6:	add    DWORD PTR ds:0x6402d210,ebx
6400d6cc:	test   eax,eax
6400d6ce:	je     0x6400d6f5
6400d6d0:	push   esi
6400d6d1:	push   eax
6400d6d2:	call   DWORD PTR ds:0x64022014
6400d6d8:	add    DWORD PTR ds:0x6402d214,ebx
6400d6de:	mov    ds:0x6402d344,eax
6400d6e3:	mov    ecx,DWORD PTR [esp+0x10]
6400d6e7:	mov    DWORD PTR fs:0x0,ecx
6400d6ee:	pop    ecx
6400d6ef:	pop    esi
6400d6f0:	pop    ebx
6400d6f1:	mov    esp,ebp
6400d6f3:	pop    ebp
6400d6f4:	ret    
6400d6f5:	xor    eax,eax
6400d6f7:	mov    ds:0x6402d344,eax
6400d6fc:	mov    ecx,DWORD PTR [esp+0x10]
6400d700:	mov    DWORD PTR fs:0x0,ecx
6400d707:	pop    ecx
6400d708:	pop    esi
6400d709:	pop    ebx
6400d70a:	mov    esp,ebp
6400d70c:	pop    ebp
6400d70d:	ret    
6400d70e:	mov    eax,ds:0x6402d344
6400d713:	mov    ecx,DWORD PTR [esp+0x10]
6400d717:	mov    DWORD PTR fs:0x0,ecx
6400d71e:	pop    ecx
6400d71f:	pop    esi
6400d720:	pop    ebx
6400d721:	mov    esp,ebp
6400d723:	pop    ebp
6400d724:	ret    
6400d725:	int3   
6400d726:	int3   
6400d727:	int3   
6400d728:	int3   
6400d729:	int3   
6400d72a:	int3   
6400d72b:	int3   
6400d72c:	int3   
6400d72d:	int3   
6400d72e:	int3   
6400d72f:	int3   
6400d730:	push   ebp
6400d731:	mov    ebp,esp
6400d733:	and    esp,0xfffffff8
6400d736:	push   0xffffffff
6400d738:	push   0x6402106e
6400d73d:	mov    eax,fs:0x0
6400d743:	push   eax
6400d744:	push   ecx
6400d745:	push   ebx
6400d746:	push   esi
6400d747:	mov    eax,ds:0x64029038
6400d74c:	xor    eax,esp
6400d74e:	push   eax
6400d74f:	lea    eax,[esp+0x10]
6400d753:	mov    fs:0x0,eax
6400d759:	mov    ebx,0x1
6400d75e:	test   BYTE PTR ds:0x6402d340,bl
6400d764:	jne    0x6400d7ee
6400d76a:	or     DWORD PTR ds:0x6402d340,ebx
6400d770:	push   0x64025b98
6400d775:	push   0xf
6400d777:	push   0x64025bd0
6400d77c:	mov    DWORD PTR [esp+0x24],0x0
6400d784:	call   0x64004730
6400d789:	push   0x64025be0
6400d78e:	push   0x8
6400d790:	push   0x64025718
6400d795:	mov    esi,eax
6400d797:	call   0x64004930
6400d79c:	add    esp,0x18
6400d79f:	push   eax
6400d7a0:	call   DWORD PTR ds:0x64022018
6400d7a6:	add    DWORD PTR ds:0x6402d210,ebx
6400d7ac:	test   eax,eax
6400d7ae:	je     0x6400d7d5
6400d7b0:	push   esi
6400d7b1:	push   eax
6400d7b2:	call   DWORD PTR ds:0x64022014
6400d7b8:	add    DWORD PTR ds:0x6402d214,ebx
6400d7be:	mov    ds:0x6402d33c,eax
6400d7c3:	mov    ecx,DWORD PTR [esp+0x10]
6400d7c7:	mov    DWORD PTR fs:0x0,ecx
6400d7ce:	pop    ecx
6400d7cf:	pop    esi
6400d7d0:	pop    ebx
6400d7d1:	mov    esp,ebp
6400d7d3:	pop    ebp
6400d7d4:	ret    
6400d7d5:	xor    eax,eax
6400d7d7:	mov    ds:0x6402d33c,eax
6400d7dc:	mov    ecx,DWORD PTR [esp+0x10]
6400d7e0:	mov    DWORD PTR fs:0x0,ecx
6400d7e7:	pop    ecx
6400d7e8:	pop    esi
6400d7e9:	pop    ebx
6400d7ea:	mov    esp,ebp
6400d7ec:	pop    ebp
6400d7ed:	ret    
6400d7ee:	mov    eax,ds:0x6402d33c
6400d7f3:	mov    ecx,DWORD PTR [esp+0x10]
6400d7f7:	mov    DWORD PTR fs:0x0,ecx
6400d7fe:	pop    ecx
6400d7ff:	pop    esi
6400d800:	pop    ebx
6400d801:	mov    esp,ebp
6400d803:	pop    ebp
6400d804:	ret    
6400d805:	int3   
6400d806:	int3   
6400d807:	int3   
6400d808:	int3   
6400d809:	int3   
6400d80a:	int3   
6400d80b:	int3   
6400d80c:	int3   
6400d80d:	int3   
6400d80e:	int3   
6400d80f:	int3   
6400d810:	push   ebp
6400d811:	mov    ebp,esp
6400d813:	and    esp,0xfffffff8
6400d816:	push   0xffffffff
6400d818:	push   0x6402103e
6400d81d:	mov    eax,fs:0x0
6400d823:	push   eax
6400d824:	push   ecx
6400d825:	push   ebx
6400d826:	push   esi
6400d827:	mov    eax,ds:0x64029038
6400d82c:	xor    eax,esp
6400d82e:	push   eax
6400d82f:	lea    eax,[esp+0x10]
6400d833:	mov    fs:0x0,eax
6400d839:	mov    ebx,0x1
6400d83e:	test   BYTE PTR ds:0x6402d338,bl
6400d844:	jne    0x6400d8ce
6400d84a:	or     DWORD PTR ds:0x6402d338,ebx
6400d850:	push   0x64025c1c
6400d855:	push   0x12
6400d857:	push   0x64025c5c
6400d85c:	mov    DWORD PTR [esp+0x24],0x0
6400d864:	call   0x64004730
6400d869:	push   0x64025c70
6400d86e:	push   0x8
6400d870:	push   0x64025718
6400d875:	mov    esi,eax
6400d877:	call   0x64004930
6400d87c:	add    esp,0x18
6400d87f:	push   eax
6400d880:	call   DWORD PTR ds:0x64022018
6400d886:	add    DWORD PTR ds:0x6402d210,ebx
6400d88c:	test   eax,eax
6400d88e:	je     0x6400d8b5
6400d890:	push   esi
6400d891:	push   eax
6400d892:	call   DWORD PTR ds:0x64022014
6400d898:	add    DWORD PTR ds:0x6402d214,ebx
6400d89e:	mov    ds:0x6402d334,eax
6400d8a3:	mov    ecx,DWORD PTR [esp+0x10]
6400d8a7:	mov    DWORD PTR fs:0x0,ecx
6400d8ae:	pop    ecx
6400d8af:	pop    esi
6400d8b0:	pop    ebx
6400d8b1:	mov    esp,ebp
6400d8b3:	pop    ebp
6400d8b4:	ret    
6400d8b5:	xor    eax,eax
6400d8b7:	mov    ds:0x6402d334,eax
6400d8bc:	mov    ecx,DWORD PTR [esp+0x10]
6400d8c0:	mov    DWORD PTR fs:0x0,ecx
6400d8c7:	pop    ecx
6400d8c8:	pop    esi
6400d8c9:	pop    ebx
6400d8ca:	mov    esp,ebp
6400d8cc:	pop    ebp
6400d8cd:	ret    
6400d8ce:	mov    eax,ds:0x6402d334
6400d8d3:	mov    ecx,DWORD PTR [esp+0x10]
6400d8d7:	mov    DWORD PTR fs:0x0,ecx
6400d8de:	pop    ecx
6400d8df:	pop    esi
6400d8e0:	pop    ebx
6400d8e1:	mov    esp,ebp
6400d8e3:	pop    ebp
6400d8e4:	ret    
6400d8e5:	int3   
6400d8e6:	int3   
6400d8e7:	int3   
6400d8e8:	int3   
6400d8e9:	int3   
6400d8ea:	int3   
6400d8eb:	int3   
6400d8ec:	int3   
6400d8ed:	int3   
6400d8ee:	int3   
6400d8ef:	int3   
6400d8f0:	push   ebp
6400d8f1:	mov    ebp,esp
6400d8f3:	and    esp,0xfffffff8
6400d8f6:	push   0xffffffff
6400d8f8:	push   0x6402100e
6400d8fd:	mov    eax,fs:0x0
6400d903:	push   eax
6400d904:	push   ecx
6400d905:	push   ebx
6400d906:	push   esi
6400d907:	mov    eax,ds:0x64029038
6400d90c:	xor    eax,esp
6400d90e:	push   eax
6400d90f:	lea    eax,[esp+0x10]
6400d913:	mov    fs:0x0,eax
6400d919:	mov    ebx,0x1
6400d91e:	test   BYTE PTR ds:0x6402d330,bl
6400d924:	jne    0x6400d9ae
6400d92a:	or     DWORD PTR ds:0x6402d330,ebx
6400d930:	push   0x64025cb0
6400d935:	push   0xf
6400d937:	push   0x64025cd4
6400d93c:	mov    DWORD PTR [esp+0x24],0x0
6400d944:	call   0x64004730
6400d949:	push   0x64025ce4
6400d94e:	push   0x8
6400d950:	push   0x64025718
6400d955:	mov    esi,eax
6400d957:	call   0x64004930
6400d95c:	add    esp,0x18
6400d95f:	push   eax
6400d960:	call   DWORD PTR ds:0x64022018
6400d966:	add    DWORD PTR ds:0x6402d210,ebx
6400d96c:	test   eax,eax
6400d96e:	je     0x6400d995
6400d970:	push   esi
6400d971:	push   eax
6400d972:	call   DWORD PTR ds:0x64022014
6400d978:	add    DWORD PTR ds:0x6402d214,ebx
6400d97e:	mov    ds:0x6402d32c,eax
6400d983:	mov    ecx,DWORD PTR [esp+0x10]
6400d987:	mov    DWORD PTR fs:0x0,ecx
6400d98e:	pop    ecx
6400d98f:	pop    esi
6400d990:	pop    ebx
6400d991:	mov    esp,ebp
6400d993:	pop    ebp
6400d994:	ret    
6400d995:	xor    eax,eax
6400d997:	mov    ds:0x6402d32c,eax
6400d99c:	mov    ecx,DWORD PTR [esp+0x10]
6400d9a0:	mov    DWORD PTR fs:0x0,ecx
6400d9a7:	pop    ecx
6400d9a8:	pop    esi
6400d9a9:	pop    ebx
6400d9aa:	mov    esp,ebp
6400d9ac:	pop    ebp
6400d9ad:	ret    
6400d9ae:	mov    eax,ds:0x6402d32c
6400d9b3:	mov    ecx,DWORD PTR [esp+0x10]
6400d9b7:	mov    DWORD PTR fs:0x0,ecx
6400d9be:	pop    ecx
6400d9bf:	pop    esi
6400d9c0:	pop    ebx
6400d9c1:	mov    esp,ebp
6400d9c3:	pop    ebp
6400d9c4:	ret    
6400d9c5:	int3   
6400d9c6:	int3   
6400d9c7:	int3   
6400d9c8:	int3   
6400d9c9:	int3   
6400d9ca:	int3   
6400d9cb:	int3   
6400d9cc:	int3   
6400d9cd:	int3   
6400d9ce:	int3   
6400d9cf:	int3   
6400d9d0:	push   ebp
6400d9d1:	mov    ebp,esp
6400d9d3:	and    esp,0xfffffff8
6400d9d6:	push   0xffffffff
6400d9d8:	push   0x64020fde
6400d9dd:	mov    eax,fs:0x0
6400d9e3:	push   eax
6400d9e4:	push   ecx
6400d9e5:	push   ebx
6400d9e6:	push   esi
6400d9e7:	mov    eax,ds:0x64029038
6400d9ec:	xor    eax,esp
6400d9ee:	push   eax
6400d9ef:	lea    eax,[esp+0x10]
6400d9f3:	mov    fs:0x0,eax
6400d9f9:	mov    ebx,0x1
6400d9fe:	test   BYTE PTR ds:0x6402d328,bl
6400da04:	jne    0x6400da8e
6400da0a:	or     DWORD PTR ds:0x6402d328,ebx
6400da10:	push   0x64025d14
6400da15:	push   0xd
6400da17:	push   0x64025d44
6400da1c:	mov    DWORD PTR [esp+0x24],0x0
6400da24:	call   0x64004730
6400da29:	push   0x64025d54
6400da2e:	push   0x8
6400da30:	push   0x64025718
6400da35:	mov    esi,eax
6400da37:	call   0x64004930
6400da3c:	add    esp,0x18
6400da3f:	push   eax
6400da40:	call   DWORD PTR ds:0x64022018
6400da46:	add    DWORD PTR ds:0x6402d210,ebx
6400da4c:	test   eax,eax
6400da4e:	je     0x6400da75
6400da50:	push   esi
6400da51:	push   eax
6400da52:	call   DWORD PTR ds:0x64022014
6400da58:	add    DWORD PTR ds:0x6402d214,ebx
6400da5e:	mov    ds:0x6402d324,eax
6400da63:	mov    ecx,DWORD PTR [esp+0x10]
6400da67:	mov    DWORD PTR fs:0x0,ecx
6400da6e:	pop    ecx
6400da6f:	pop    esi
6400da70:	pop    ebx
6400da71:	mov    esp,ebp
6400da73:	pop    ebp
6400da74:	ret    
6400da75:	xor    eax,eax
6400da77:	mov    ds:0x6402d324,eax
6400da7c:	mov    ecx,DWORD PTR [esp+0x10]
6400da80:	mov    DWORD PTR fs:0x0,ecx
6400da87:	pop    ecx
6400da88:	pop    esi
6400da89:	pop    ebx
6400da8a:	mov    esp,ebp
6400da8c:	pop    ebp
6400da8d:	ret    
6400da8e:	mov    eax,ds:0x6402d324
6400da93:	mov    ecx,DWORD PTR [esp+0x10]
6400da97:	mov    DWORD PTR fs:0x0,ecx
6400da9e:	pop    ecx
6400da9f:	pop    esi
6400daa0:	pop    ebx
6400daa1:	mov    esp,ebp
6400daa3:	pop    ebp
6400daa4:	ret    
6400daa5:	int3   
6400daa6:	int3   
6400daa7:	int3   
6400daa8:	int3   
6400daa9:	int3   
6400daaa:	int3   
6400daab:	int3   
6400daac:	int3   
6400daad:	int3   
6400daae:	int3   
6400daaf:	int3   
6400dab0:	push   ebp
6400dab1:	mov    ebp,esp
6400dab3:	and    esp,0xfffffff8
6400dab6:	push   0xffffffff
6400dab8:	push   0x64020fae
6400dabd:	mov    eax,fs:0x0
6400dac3:	push   eax
6400dac4:	push   ecx
6400dac5:	push   ebx
6400dac6:	push   esi
6400dac7:	mov    eax,ds:0x64029038
6400dacc:	xor    eax,esp
6400dace:	push   eax
6400dacf:	lea    eax,[esp+0x10]
6400dad3:	mov    fs:0x0,eax
6400dad9:	mov    ebx,0x1
6400dade:	test   BYTE PTR ds:0x6402d320,bl
6400dae4:	jne    0x6400db6e
6400daea:	or     DWORD PTR ds:0x6402d320,ebx
6400daf0:	push   0x64025d80
6400daf5:	push   0xc
6400daf7:	push   0x64025da8
6400dafc:	mov    DWORD PTR [esp+0x24],0x0
6400db04:	call   0x64004730
6400db09:	push   0x64025db8
6400db0e:	push   0x8
6400db10:	push   0x64025718
6400db15:	mov    esi,eax
6400db17:	call   0x64004930
6400db1c:	add    esp,0x18
6400db1f:	push   eax
6400db20:	call   DWORD PTR ds:0x64022018
6400db26:	add    DWORD PTR ds:0x6402d210,ebx
6400db2c:	test   eax,eax
6400db2e:	je     0x6400db55
6400db30:	push   esi
6400db31:	push   eax
6400db32:	call   DWORD PTR ds:0x64022014
6400db38:	add    DWORD PTR ds:0x6402d214,ebx
6400db3e:	mov    ds:0x6402d31c,eax
6400db43:	mov    ecx,DWORD PTR [esp+0x10]
6400db47:	mov    DWORD PTR fs:0x0,ecx
6400db4e:	pop    ecx
6400db4f:	pop    esi
6400db50:	pop    ebx
6400db51:	mov    esp,ebp
6400db53:	pop    ebp
6400db54:	ret    
6400db55:	xor    eax,eax
6400db57:	mov    ds:0x6402d31c,eax
6400db5c:	mov    ecx,DWORD PTR [esp+0x10]
6400db60:	mov    DWORD PTR fs:0x0,ecx
6400db67:	pop    ecx
6400db68:	pop    esi
6400db69:	pop    ebx
6400db6a:	mov    esp,ebp
6400db6c:	pop    ebp
6400db6d:	ret    
6400db6e:	mov    eax,ds:0x6402d31c
6400db73:	mov    ecx,DWORD PTR [esp+0x10]
6400db77:	mov    DWORD PTR fs:0x0,ecx
6400db7e:	pop    ecx
6400db7f:	pop    esi
6400db80:	pop    ebx
6400db81:	mov    esp,ebp
6400db83:	pop    ebp
6400db84:	ret    
6400db85:	int3   
6400db86:	int3   
6400db87:	int3   
6400db88:	int3   
6400db89:	int3   
6400db8a:	int3   
6400db8b:	int3   
6400db8c:	int3   
6400db8d:	int3   
6400db8e:	int3   
6400db8f:	int3   
6400db90:	push   ebp
6400db91:	mov    ebp,esp
6400db93:	and    esp,0xfffffff8
6400db96:	push   0xffffffff
6400db98:	push   0x64020f7e
6400db9d:	mov    eax,fs:0x0
6400dba3:	push   eax
6400dba4:	push   ecx
6400dba5:	push   ebx
6400dba6:	push   esi
6400dba7:	mov    eax,ds:0x64029038
6400dbac:	xor    eax,esp
6400dbae:	push   eax
6400dbaf:	lea    eax,[esp+0x10]
6400dbb3:	mov    fs:0x0,eax
6400dbb9:	mov    ebx,0x1
6400dbbe:	test   BYTE PTR ds:0x6402d318,bl
6400dbc4:	jne    0x6400dc4e
6400dbca:	or     DWORD PTR ds:0x6402d318,ebx
6400dbd0:	push   0x64025dec
6400dbd5:	push   0x11
6400dbd7:	push   0x64025e28
6400dbdc:	mov    DWORD PTR [esp+0x24],0x0
6400dbe4:	call   0x64004730
6400dbe9:	push   0x64025e3c
6400dbee:	push   0x8
6400dbf0:	push   0x64025718
6400dbf5:	mov    esi,eax
6400dbf7:	call   0x64004930
6400dbfc:	add    esp,0x18
6400dbff:	push   eax
6400dc00:	call   DWORD PTR ds:0x64022018
6400dc06:	add    DWORD PTR ds:0x6402d210,ebx
6400dc0c:	test   eax,eax
6400dc0e:	je     0x6400dc35
6400dc10:	push   esi
6400dc11:	push   eax
6400dc12:	call   DWORD PTR ds:0x64022014
6400dc18:	add    DWORD PTR ds:0x6402d214,ebx
6400dc1e:	mov    ds:0x6402d314,eax
6400dc23:	mov    ecx,DWORD PTR [esp+0x10]
6400dc27:	mov    DWORD PTR fs:0x0,ecx
6400dc2e:	pop    ecx
6400dc2f:	pop    esi
6400dc30:	pop    ebx
6400dc31:	mov    esp,ebp
6400dc33:	pop    ebp
6400dc34:	ret    
6400dc35:	xor    eax,eax
6400dc37:	mov    ds:0x6402d314,eax
6400dc3c:	mov    ecx,DWORD PTR [esp+0x10]
6400dc40:	mov    DWORD PTR fs:0x0,ecx
6400dc47:	pop    ecx
6400dc48:	pop    esi
6400dc49:	pop    ebx
6400dc4a:	mov    esp,ebp
6400dc4c:	pop    ebp
6400dc4d:	ret    
6400dc4e:	mov    eax,ds:0x6402d314
6400dc53:	mov    ecx,DWORD PTR [esp+0x10]
6400dc57:	mov    DWORD PTR fs:0x0,ecx
6400dc5e:	pop    ecx
6400dc5f:	pop    esi
6400dc60:	pop    ebx
6400dc61:	mov    esp,ebp
6400dc63:	pop    ebp
6400dc64:	ret    
6400dc65:	int3   
6400dc66:	int3   
6400dc67:	int3   
6400dc68:	int3   
6400dc69:	int3   
6400dc6a:	int3   
6400dc6b:	int3   
6400dc6c:	int3   
6400dc6d:	int3   
6400dc6e:	int3   
6400dc6f:	int3   
6400dc70:	push   ebp
6400dc71:	mov    ebp,esp
6400dc73:	and    esp,0xfffffff8
6400dc76:	push   0xffffffff
6400dc78:	push   0x64020f4e
6400dc7d:	mov    eax,fs:0x0
6400dc83:	push   eax
6400dc84:	push   ecx
6400dc85:	push   ebx
6400dc86:	push   esi
6400dc87:	mov    eax,ds:0x64029038
6400dc8c:	xor    eax,esp
6400dc8e:	push   eax
6400dc8f:	lea    eax,[esp+0x10]
6400dc93:	mov    fs:0x0,eax
6400dc99:	mov    ebx,0x1
6400dc9e:	test   BYTE PTR ds:0x6402d310,bl
6400dca4:	jne    0x6400dd2e
6400dcaa:	or     DWORD PTR ds:0x6402d310,ebx
6400dcb0:	push   0x64025e68
6400dcb5:	push   0x16
6400dcb7:	push   0x64025e8c
6400dcbc:	mov    DWORD PTR [esp+0x24],0x0
6400dcc4:	call   0x64004730
6400dcc9:	push   0x64025ea4
6400dcce:	push   0x8
6400dcd0:	push   0x64025718
6400dcd5:	mov    esi,eax
6400dcd7:	call   0x64004930
6400dcdc:	add    esp,0x18
6400dcdf:	push   eax
6400dce0:	call   DWORD PTR ds:0x64022018
6400dce6:	add    DWORD PTR ds:0x6402d210,ebx
6400dcec:	test   eax,eax
6400dcee:	je     0x6400dd15
6400dcf0:	push   esi
6400dcf1:	push   eax
6400dcf2:	call   DWORD PTR ds:0x64022014
6400dcf8:	add    DWORD PTR ds:0x6402d214,ebx
6400dcfe:	mov    ds:0x6402d30c,eax
6400dd03:	mov    ecx,DWORD PTR [esp+0x10]
6400dd07:	mov    DWORD PTR fs:0x0,ecx
6400dd0e:	pop    ecx
6400dd0f:	pop    esi
6400dd10:	pop    ebx
6400dd11:	mov    esp,ebp
6400dd13:	pop    ebp
6400dd14:	ret    
6400dd15:	xor    eax,eax
6400dd17:	mov    ds:0x6402d30c,eax
6400dd1c:	mov    ecx,DWORD PTR [esp+0x10]
6400dd20:	mov    DWORD PTR fs:0x0,ecx
6400dd27:	pop    ecx
6400dd28:	pop    esi
6400dd29:	pop    ebx
6400dd2a:	mov    esp,ebp
6400dd2c:	pop    ebp
6400dd2d:	ret    
6400dd2e:	mov    eax,ds:0x6402d30c
6400dd33:	mov    ecx,DWORD PTR [esp+0x10]
6400dd37:	mov    DWORD PTR fs:0x0,ecx
6400dd3e:	pop    ecx
6400dd3f:	pop    esi
6400dd40:	pop    ebx
6400dd41:	mov    esp,ebp
6400dd43:	pop    ebp
6400dd44:	ret    
6400dd45:	int3   
6400dd46:	int3   
6400dd47:	int3   
6400dd48:	int3   
6400dd49:	int3   
6400dd4a:	int3   
6400dd4b:	int3   
6400dd4c:	int3   
6400dd4d:	int3   
6400dd4e:	int3   
6400dd4f:	int3   
6400dd50:	push   ebp
6400dd51:	mov    ebp,esp
6400dd53:	and    esp,0xfffffff8
6400dd56:	push   0xffffffff
6400dd58:	push   0x64020f1e
6400dd5d:	mov    eax,fs:0x0
6400dd63:	push   eax
6400dd64:	push   ecx
6400dd65:	push   ebx
6400dd66:	push   esi
6400dd67:	mov    eax,ds:0x64029038
6400dd6c:	xor    eax,esp
6400dd6e:	push   eax
6400dd6f:	lea    eax,[esp+0x10]
6400dd73:	mov    fs:0x0,eax
6400dd79:	mov    ebx,0x1
6400dd7e:	test   BYTE PTR ds:0x6402d308,bl
6400dd84:	jne    0x6400de0e
6400dd8a:	or     DWORD PTR ds:0x6402d308,ebx
6400dd90:	push   0x64025ee0
6400dd95:	push   0x10
6400dd97:	push   0x64025f14
6400dd9c:	mov    DWORD PTR [esp+0x24],0x0
6400dda4:	call   0x64004730
6400dda9:	push   0x64025f28
6400ddae:	push   0x8
6400ddb0:	push   0x64025718
6400ddb5:	mov    esi,eax
6400ddb7:	call   0x64004930
6400ddbc:	add    esp,0x18
6400ddbf:	push   eax
6400ddc0:	call   DWORD PTR ds:0x64022018
6400ddc6:	add    DWORD PTR ds:0x6402d210,ebx
6400ddcc:	test   eax,eax
6400ddce:	je     0x6400ddf5
6400ddd0:	push   esi
6400ddd1:	push   eax
6400ddd2:	call   DWORD PTR ds:0x64022014
6400ddd8:	add    DWORD PTR ds:0x6402d214,ebx
6400ddde:	mov    ds:0x6402d304,eax
6400dde3:	mov    ecx,DWORD PTR [esp+0x10]
6400dde7:	mov    DWORD PTR fs:0x0,ecx
6400ddee:	pop    ecx
6400ddef:	pop    esi
6400ddf0:	pop    ebx
6400ddf1:	mov    esp,ebp
6400ddf3:	pop    ebp
6400ddf4:	ret    
6400ddf5:	xor    eax,eax
6400ddf7:	mov    ds:0x6402d304,eax
6400ddfc:	mov    ecx,DWORD PTR [esp+0x10]
6400de00:	mov    DWORD PTR fs:0x0,ecx
6400de07:	pop    ecx
6400de08:	pop    esi
6400de09:	pop    ebx
6400de0a:	mov    esp,ebp
6400de0c:	pop    ebp
6400de0d:	ret    
6400de0e:	mov    eax,ds:0x6402d304
6400de13:	mov    ecx,DWORD PTR [esp+0x10]
6400de17:	mov    DWORD PTR fs:0x0,ecx
6400de1e:	pop    ecx
6400de1f:	pop    esi
6400de20:	pop    ebx
6400de21:	mov    esp,ebp
6400de23:	pop    ebp
6400de24:	ret    
6400de25:	int3   
6400de26:	int3   
6400de27:	int3   
6400de28:	int3   
6400de29:	int3   
6400de2a:	int3   
6400de2b:	int3   
6400de2c:	int3   
6400de2d:	int3   
6400de2e:	int3   
6400de2f:	int3   
6400de30:	push   ebp
6400de31:	mov    ebp,esp
6400de33:	and    esp,0xfffffff8
6400de36:	push   0xffffffff
6400de38:	push   0x64020eee
6400de3d:	mov    eax,fs:0x0
6400de43:	push   eax
6400de44:	push   ecx
6400de45:	push   ebx
6400de46:	push   esi
6400de47:	mov    eax,ds:0x64029038
6400de4c:	xor    eax,esp
6400de4e:	push   eax
6400de4f:	lea    eax,[esp+0x10]
6400de53:	mov    fs:0x0,eax
6400de59:	mov    ebx,0x1
6400de5e:	test   BYTE PTR ds:0x6402d300,bl
6400de64:	jne    0x6400deee
6400de6a:	or     DWORD PTR ds:0x6402d300,ebx
6400de70:	push   0x64025f5c
6400de75:	push   0xd
6400de77:	push   0x64025f94
6400de7c:	mov    DWORD PTR [esp+0x24],0x0
6400de84:	call   0x64004730
6400de89:	push   0x64025fa4
6400de8e:	push   0x7
6400de90:	push   0x64025fcc
6400de95:	mov    esi,eax
6400de97:	call   0x64004930
6400de9c:	add    esp,0x18
6400de9f:	push   eax
6400dea0:	call   DWORD PTR ds:0x64022018
6400dea6:	add    DWORD PTR ds:0x6402d210,ebx
6400deac:	test   eax,eax
6400deae:	je     0x6400ded5
6400deb0:	push   esi
6400deb1:	push   eax
6400deb2:	call   DWORD PTR ds:0x64022014
6400deb8:	add    DWORD PTR ds:0x6402d214,ebx
6400debe:	mov    ds:0x6402d2fc,eax
6400dec3:	mov    ecx,DWORD PTR [esp+0x10]
6400dec7:	mov    DWORD PTR fs:0x0,ecx
6400dece:	pop    ecx
6400decf:	pop    esi
6400ded0:	pop    ebx
6400ded1:	mov    esp,ebp
6400ded3:	pop    ebp
6400ded4:	ret    
6400ded5:	xor    eax,eax
6400ded7:	mov    ds:0x6402d2fc,eax
6400dedc:	mov    ecx,DWORD PTR [esp+0x10]
6400dee0:	mov    DWORD PTR fs:0x0,ecx
6400dee7:	pop    ecx
6400dee8:	pop    esi
6400dee9:	pop    ebx
6400deea:	mov    esp,ebp
6400deec:	pop    ebp
6400deed:	ret    
6400deee:	mov    eax,ds:0x6402d2fc
6400def3:	mov    ecx,DWORD PTR [esp+0x10]
6400def7:	mov    DWORD PTR fs:0x0,ecx
6400defe:	pop    ecx
6400deff:	pop    esi
6400df00:	pop    ebx
6400df01:	mov    esp,ebp
6400df03:	pop    ebp
6400df04:	ret    
6400df05:	int3   
6400df06:	int3   
6400df07:	int3   
6400df08:	int3   
6400df09:	int3   
6400df0a:	int3   
6400df0b:	int3   
6400df0c:	int3   
6400df0d:	int3   
6400df0e:	int3   
6400df0f:	int3   
6400df10:	mov    eax,DWORD PTR [esp+0x8]
6400df14:	sub    eax,0x1
6400df17:	jne    0x6400df22
6400df19:	mov    eax,DWORD PTR [esp+0x4]
6400df1d:	mov    ds:0x6402a444,eax
6400df22:	mov    eax,0x1
6400df27:	ret    0xc
6400df2a:	int3   
6400df2b:	int3   
6400df2c:	int3   
6400df2d:	int3   
6400df2e:	int3   
6400df2f:	int3   
6400df30:	cmp    BYTE PTR ds:0x6402a440,0x0
6400df37:	jne    0x6400df96
6400df39:	push   esi
6400df3a:	push   edi
6400df3b:	push   0x640223d0
6400df40:	mov    BYTE PTR ds:0x6402a440,0x1
6400df47:	call   DWORD PTR ds:0x64022018
6400df4d:	push   0x64022390
6400df52:	push   0xb
6400df54:	push   0x64022380
6400df59:	mov    esi,eax
6400df5b:	call   0x64004730
6400df60:	mov    edi,DWORD PTR ds:0x64022014
6400df66:	add    esp,0xc
6400df69:	push   eax
6400df6a:	push   esi
6400df6b:	call   edi
6400df6d:	push   0x6402234c
6400df72:	push   0x19
6400df74:	push   0x64022330
6400df79:	mov    ds:0x6402a438,eax
6400df7e:	call   0x64004730
6400df83:	add    esp,0xc
6400df86:	push   eax
6400df87:	push   esi
6400df88:	call   edi
6400df8a:	pop    edi
6400df8b:	mov    ds:0x6402a43c,eax
6400df90:	pop    esi
6400df91:	jmp    0x6400fdc0
6400df96:	ret    
6400df97:	int3   
6400df98:	int3   
6400df99:	int3   
6400df9a:	int3   
6400df9b:	int3   
6400df9c:	int3   
6400df9d:	int3   
6400df9e:	int3   
6400df9f:	int3   
6400dfa0:	call   0x6400df30
6400dfa5:	mov    eax,ds:0x6402a438
6400dfaa:	test   eax,eax
6400dfac:	je     0x6400dfb0
6400dfae:	jmp    eax
6400dfb0:	ret    0x8
6400dfb3:	int3   
6400dfb4:	int3   
6400dfb5:	int3   
6400dfb6:	int3   
6400dfb7:	int3   
6400dfb8:	int3   
6400dfb9:	int3   
6400dfba:	int3   
6400dfbb:	int3   
6400dfbc:	int3   
6400dfbd:	int3   
6400dfbe:	int3   
6400dfbf:	int3   
6400dfc0:	call   0x6400df30
6400dfc5:	mov    eax,ds:0x6402a43c
6400dfca:	test   eax,eax
6400dfcc:	je     0x6400dfd0
6400dfce:	jmp    eax
6400dfd0:	ret    0x4
6400dfd3:	int3   
6400dfd4:	int3   
6400dfd5:	int3   
6400dfd6:	int3   
6400dfd7:	int3   
6400dfd8:	int3   
6400dfd9:	int3   
6400dfda:	int3   
6400dfdb:	int3   
6400dfdc:	int3   
6400dfdd:	int3   
6400dfde:	int3   
6400dfdf:	int3   
6400dfe0:	sub    esp,0x804
6400dfe6:	mov    eax,ds:0x64029038
6400dfeb:	xor    eax,esp
6400dfed:	mov    DWORD PTR [esp+0x800],eax
6400dff4:	call   DWORD PTR ds:0x6402204c
6400dffa:	and    eax,0xff
6400dfff:	cmp    eax,0x5
6400e002:	jb     0x6400e015
6400e004:	push   0x64022424
6400e009:	push   0x400
6400e00e:	lea    eax,[esp+0x8]
6400e012:	push   eax
6400e013:	jmp    0x6400e024
6400e015:	push   0x64022418
6400e01a:	push   0x400
6400e01f:	lea    ecx,[esp+0x8]
6400e023:	push   ecx
6400e024:	call   0x640110c2
6400e029:	add    esp,0xc
6400e02c:	push   0x64022408
6400e031:	lea    edx,[esp+0x4]
6400e035:	push   0x400
6400e03a:	push   edx
6400e03b:	call   0x64011048
6400e040:	add    esp,0xc
6400e043:	push   0x0
6400e045:	push   0x80
6400e04a:	push   0x3
6400e04c:	push   0x0
6400e04e:	push   0x0
6400e050:	lea    eax,[esp+0x14]
6400e054:	push   0xc0000000
6400e059:	push   eax
6400e05a:	call   0x6400c230
6400e05f:	call   eax
6400e061:	cmp    eax,0xffffffff
6400e064:	jne    0x6400e087
6400e066:	call   DWORD PTR ds:0x64022044
6400e06c:	cmp    eax,0x20
6400e06f:	sete   al
6400e072:	mov    ecx,DWORD PTR [esp+0x800]
6400e079:	xor    ecx,esp
6400e07b:	call   0x64010c1e
6400e080:	add    esp,0x804
6400e086:	ret    
6400e087:	push   eax
6400e088:	call   DWORD PTR ds:0x64022040
6400e08e:	mov    ecx,DWORD PTR [esp+0x800]
6400e095:	xor    ecx,esp
6400e097:	mov    al,0x1
6400e099:	call   0x64010c1e
6400e09e:	add    esp,0x804
6400e0a4:	ret    
6400e0a5:	int3   
6400e0a6:	int3   
6400e0a7:	int3   
6400e0a8:	int3   
6400e0a9:	int3   
6400e0aa:	int3   
6400e0ab:	int3   
6400e0ac:	int3   
6400e0ad:	int3   
6400e0ae:	int3   
6400e0af:	int3   
6400e0b0:	push   ebx
6400e0b1:	mov    ebx,DWORD PTR ds:0x64022050
6400e0b7:	push   esi
6400e0b8:	push   edi
6400e0b9:	mov    edi,DWORD PTR [esp+0x10]
6400e0bd:	xor    esi,esi
6400e0bf:	nop
6400e0c0:	lea    eax,[esp+0x10]
6400e0c4:	push   0x0
6400e0c6:	push   eax
6400e0c7:	mov    DWORD PTR [esp+0x18],0x0
6400e0cf:	call   0x6400cd90
6400e0d4:	call   eax
6400e0d6:	test   eax,eax
6400e0d8:	je     0x6400e0e9
6400e0da:	cmp    edi,0xffffffff
6400e0dd:	je     0x6400e0e9
6400e0df:	add    esi,0x3e8
6400e0e5:	cmp    esi,edi
6400e0e7:	ja     0x6400e0f2
6400e0e9:	push   0x3e8
6400e0ee:	call   ebx
6400e0f0:	jmp    0x6400e0c0
6400e0f2:	pop    edi
6400e0f3:	pop    esi
6400e0f4:	mov    al,0x1
6400e0f6:	pop    ebx
6400e0f7:	ret    
6400e0f8:	int3   
6400e0f9:	int3   
6400e0fa:	int3   
6400e0fb:	int3   
6400e0fc:	int3   
6400e0fd:	int3   
6400e0fe:	int3   
6400e0ff:	int3   
6400e100:	mov    ecx,DWORD PTR [esp+0x4]
6400e104:	sub    esp,0xc
6400e107:	test   ecx,ecx
6400e109:	ja     0x6400e121
6400e10b:	xor    ecx,ecx
6400e10d:	lea    edx,[ecx*4+0x0]
6400e114:	push   edx
6400e115:	call   0x640107a3
6400e11a:	add    esp,0x4
6400e11d:	add    esp,0xc
6400e120:	ret    
6400e121:	or     eax,0xffffffff
6400e124:	xor    edx,edx
6400e126:	div    ecx
6400e128:	cmp    eax,0x4
6400e12b:	jae    0x6400e10d
6400e12d:	lea    eax,[esp+0x10]
6400e131:	push   eax
6400e132:	lea    ecx,[esp+0x4]
6400e136:	mov    DWORD PTR [esp+0x14],0x0
6400e13e:	call   0x6401047d
6400e143:	push   0x64026e8c
6400e148:	lea    ecx,[esp+0x4]
6400e14c:	push   ecx
6400e14d:	mov    DWORD PTR [esp+0x8],0x64022304
6400e155:	call   0x6401080d
6400e15a:	int3   
6400e15b:	int3   
6400e15c:	int3   
6400e15d:	int3   
6400e15e:	int3   
6400e15f:	int3   
6400e160:	mov    ecx,DWORD PTR [esp+0x8]
6400e164:	test   ecx,ecx
6400e166:	jne    0x6400e172
6400e168:	push   0x80004005
6400e16d:	call   0x64001040
6400e172:	mov    eax,DWORD PTR [esp+0x4]
6400e176:	mov    eax,DWORD PTR [eax]
6400e178:	mov    dx,WORD PTR [eax]
6400e17b:	cmp    dx,WORD PTR [ecx]
6400e17e:	jne    0x6400e1a6
6400e180:	test   dx,dx
6400e183:	je     0x6400e19a
6400e185:	mov    dx,WORD PTR [eax+0x2]
6400e189:	cmp    dx,WORD PTR [ecx+0x2]
6400e18d:	jne    0x6400e1a6
6400e18f:	add    eax,0x4
6400e192:	add    ecx,0x4
6400e195:	test   dx,dx
6400e198:	jne    0x6400e178
6400e19a:	xor    eax,eax
6400e19c:	xor    ecx,ecx
6400e19e:	test   eax,eax
6400e1a0:	setne  cl
6400e1a3:	mov    al,cl
6400e1a5:	ret    
6400e1a6:	sbb    eax,eax
6400e1a8:	sbb    eax,0xffffffff
6400e1ab:	xor    ecx,ecx
6400e1ad:	test   eax,eax
6400e1af:	setne  cl
6400e1b2:	mov    al,cl
6400e1b4:	ret    
6400e1b5:	int3   
6400e1b6:	int3   
6400e1b7:	int3   
6400e1b8:	int3   
6400e1b9:	int3   
6400e1ba:	int3   
6400e1bb:	int3   
6400e1bc:	int3   
6400e1bd:	int3   
6400e1be:	int3   
6400e1bf:	int3   
6400e1c0:	mov    eax,DWORD PTR [esp+0x4]
6400e1c4:	mov    ecx,DWORD PTR [esp+0x8]
6400e1c8:	cmp    eax,ecx
6400e1ca:	je     0x6400e1dd
6400e1cc:	mov    edx,DWORD PTR [esp+0xc]
6400e1d0:	push   esi
6400e1d1:	mov    esi,DWORD PTR [edx]
6400e1d3:	mov    DWORD PTR [eax],esi
6400e1d5:	add    eax,0x4
6400e1d8:	cmp    eax,ecx
6400e1da:	jne    0x6400e1d1
6400e1dc:	pop    esi
6400e1dd:	ret    
6400e1de:	int3   
6400e1df:	int3   
6400e1e0:	mov    eax,DWORD PTR [esp+0x8]
6400e1e4:	mov    edx,DWORD PTR [esp+0x4]
6400e1e8:	sub    eax,edx
6400e1ea:	sar    eax,0x2
6400e1ed:	push   esi
6400e1ee:	mov    esi,DWORD PTR [esp+0x10]
6400e1f2:	lea    ecx,[eax*4+0x0]
6400e1f9:	sub    esi,ecx
6400e1fb:	test   eax,eax
6400e1fd:	jle    0x6400e20b
6400e1ff:	push   ecx
6400e200:	push   edx
6400e201:	push   ecx
6400e202:	push   esi
6400e203:	call   0x640105f5
6400e208:	add    esp,0x10
6400e20b:	mov    eax,esi
6400e20d:	pop    esi
6400e20e:	ret    
6400e20f:	int3   
6400e210:	mov    eax,DWORD PTR [esp+0x14]
6400e214:	push   ebp
6400e215:	mov    ebp,DWORD PTR [esp+0x8]
6400e219:	push   esi
6400e21a:	mov    esi,DWORD PTR [esp+0x14]
6400e21e:	push   edi
6400e21f:	lea    edi,[esi+eax*1]
6400e222:	mov    eax,DWORD PTR [ebp+0x0]
6400e225:	mov    edx,DWORD PTR [eax-0x8]
6400e228:	sub    eax,0x10
6400e22b:	mov    ecx,0x1
6400e230:	sub    ecx,DWORD PTR [eax+0xc]
6400e233:	sub    edx,edi
6400e235:	or     ecx,edx
6400e237:	jge    0x6400e241
6400e239:	push   edi
6400e23a:	mov    ecx,ebp
6400e23c:	call   0x64001e00
6400e241:	mov    eax,DWORD PTR [esp+0x14]
6400e245:	push   ebx
6400e246:	mov    ebx,DWORD PTR [ebp+0x0]
6400e249:	add    esi,esi
6400e24b:	push   esi
6400e24c:	push   eax
6400e24d:	push   esi
6400e24e:	push   ebx
6400e24f:	call   0x6401057a
6400e254:	mov    eax,DWORD PTR [esp+0x34]
6400e258:	mov    ecx,DWORD PTR [esp+0x30]
6400e25c:	add    eax,eax
6400e25e:	push   eax
6400e25f:	push   ecx
6400e260:	push   eax
6400e261:	add    esi,ebx
6400e263:	push   esi
6400e264:	call   0x6401057a
6400e269:	add    esp,0x20
6400e26c:	test   edi,edi
6400e26e:	pop    ebx
6400e26f:	jl     0x6400e289
6400e271:	mov    eax,DWORD PTR [ebp+0x0]
6400e274:	cmp    edi,DWORD PTR [eax-0x8]
6400e277:	jg     0x6400e289
6400e279:	mov    DWORD PTR [eax-0xc],edi
6400e27c:	mov    edx,DWORD PTR [ebp+0x0]
6400e27f:	mov    WORD PTR [edx+edi*2],0x0
6400e285:	pop    edi
6400e286:	pop    esi
6400e287:	pop    ebp
6400e288:	ret    
6400e289:	push   0x80070057
6400e28e:	call   0x64001040
6400e293:	int3   
6400e294:	int3   
6400e295:	int3   
6400e296:	int3   
6400e297:	int3   
6400e298:	int3   
6400e299:	int3   
6400e29a:	int3   
6400e29b:	int3   
6400e29c:	int3   
6400e29d:	int3   
6400e29e:	int3   
6400e29f:	int3   
6400e2a0:	push   0xffffffff
6400e2a2:	push   0x640201f9
6400e2a7:	mov    eax,fs:0x0
6400e2ad:	push   eax
6400e2ae:	push   ecx
6400e2af:	push   esi
6400e2b0:	push   edi
6400e2b1:	mov    eax,ds:0x64029038
6400e2b6:	xor    eax,esp
6400e2b8:	push   eax
6400e2b9:	lea    eax,[esp+0x10]
6400e2bd:	mov    fs:0x0,eax
6400e2c3:	mov    edi,DWORD PTR [esp+0x24]
6400e2c7:	mov    DWORD PTR [esp+0xc],0x0
6400e2cf:	mov    eax,DWORD PTR [edi]
6400e2d1:	mov    ecx,DWORD PTR [eax-0x10]
6400e2d4:	test   ecx,ecx
6400e2d6:	mov    DWORD PTR [esp+0x18],0x0
6400e2de:	je     0x6400e2eb
6400e2e0:	mov    edx,DWORD PTR [ecx]
6400e2e2:	mov    eax,DWORD PTR [edx+0x10]
6400e2e5:	call   eax
6400e2e7:	test   eax,eax
6400e2e9:	jne    0x6400e2fb
6400e2eb:	mov    edx,DWORD PTR ds:0x6402a4e0
6400e2f1:	mov    eax,DWORD PTR [edx+0x10]
6400e2f4:	mov    ecx,0x6402a4e0
6400e2f9:	call   eax
6400e2fb:	xor    ecx,ecx
6400e2fd:	test   eax,eax
6400e2ff:	setne  cl
6400e302:	test   ecx,ecx
6400e304:	jne    0x6400e310
6400e306:	push   0x80004005
6400e30b:	call   0x64001040
6400e310:	mov    edx,DWORD PTR [eax]
6400e312:	mov    ecx,eax
6400e314:	mov    eax,DWORD PTR [edx+0xc]
6400e317:	call   eax
6400e319:	mov    esi,DWORD PTR [esp+0x20]
6400e31d:	add    eax,0x10
6400e320:	mov    DWORD PTR [esi],eax
6400e322:	mov    ecx,DWORD PTR [esp+0x28]
6400e326:	mov    eax,DWORD PTR [ecx]
6400e328:	mov    edx,DWORD PTR [eax-0xc]
6400e32b:	mov    ecx,DWORD PTR [edi]
6400e32d:	mov    edi,DWORD PTR [ecx-0xc]
6400e330:	push   edx
6400e331:	push   eax
6400e332:	push   edi
6400e333:	push   ecx
6400e334:	push   esi
6400e335:	mov    DWORD PTR [esp+0x2c],0x0
6400e33d:	mov    DWORD PTR [esp+0x20],0x1
6400e345:	call   0x6400e210
6400e34a:	add    esp,0x14
6400e34d:	mov    eax,esi
6400e34f:	mov    ecx,DWORD PTR [esp+0x10]
6400e353:	mov    DWORD PTR fs:0x0,ecx
6400e35a:	pop    ecx
6400e35b:	pop    edi
6400e35c:	pop    esi
6400e35d:	add    esp,0x10
6400e360:	ret    
6400e361:	int3   
6400e362:	int3   
6400e363:	int3   
6400e364:	int3   
6400e365:	int3   
6400e366:	int3   
6400e367:	int3   
6400e368:	int3   
6400e369:	int3   
6400e36a:	int3   
6400e36b:	int3   
6400e36c:	int3   
6400e36d:	int3   
6400e36e:	int3   
6400e36f:	int3   
6400e370:	push   0xffffffff
6400e372:	push   0x64020239
6400e377:	mov    eax,fs:0x0
6400e37d:	push   eax
6400e37e:	push   ecx
6400e37f:	push   ebp
6400e380:	push   esi
6400e381:	push   edi
6400e382:	mov    eax,ds:0x64029038
6400e387:	xor    eax,esp
6400e389:	push   eax
6400e38a:	lea    eax,[esp+0x14]
6400e38e:	mov    fs:0x0,eax
6400e394:	mov    ebp,DWORD PTR [esp+0x28]
6400e398:	mov    DWORD PTR [esp+0x10],0x0
6400e3a0:	mov    eax,DWORD PTR [ebp+0x0]
6400e3a3:	mov    ecx,DWORD PTR [eax-0x10]
6400e3a6:	test   ecx,ecx
6400e3a8:	mov    DWORD PTR [esp+0x1c],0x0
6400e3b0:	je     0x6400e3bd
6400e3b2:	mov    edx,DWORD PTR [ecx]
6400e3b4:	mov    eax,DWORD PTR [edx+0x10]
6400e3b7:	call   eax
6400e3b9:	test   eax,eax
6400e3bb:	jne    0x6400e3cd
6400e3bd:	mov    edx,DWORD PTR ds:0x6402a4e0
6400e3c3:	mov    eax,DWORD PTR [edx+0x10]
6400e3c6:	mov    ecx,0x6402a4e0
6400e3cb:	call   eax
6400e3cd:	xor    ecx,ecx
6400e3cf:	test   eax,eax
6400e3d1:	setne  cl
6400e3d4:	test   ecx,ecx
6400e3d6:	jne    0x6400e3e2
6400e3d8:	push   0x80004005
6400e3dd:	call   0x64001040
6400e3e2:	mov    edx,DWORD PTR [eax]
6400e3e4:	mov    ecx,eax
6400e3e6:	mov    eax,DWORD PTR [edx+0xc]
6400e3e9:	call   eax
6400e3eb:	mov    esi,DWORD PTR [esp+0x24]
6400e3ef:	add    eax,0x10
6400e3f2:	mov    DWORD PTR [esi],eax
6400e3f4:	mov    edi,DWORD PTR [esp+0x2c]
6400e3f8:	test   edi,edi
6400e3fa:	mov    DWORD PTR [esp+0x1c],0x0
6400e402:	mov    DWORD PTR [esp+0x10],0x1
6400e40a:	jne    0x6400e410
6400e40c:	xor    eax,eax
6400e40e:	jmp    0x6400e424
6400e410:	mov    eax,edi
6400e412:	lea    edx,[eax+0x2]
6400e415:	mov    cx,WORD PTR [eax]
6400e418:	add    eax,0x2
6400e41b:	test   cx,cx
6400e41e:	jne    0x6400e415
6400e420:	sub    eax,edx
6400e422:	sar    eax,1
6400e424:	mov    ecx,DWORD PTR [ebp+0x0]
6400e427:	mov    edx,DWORD PTR [ecx-0xc]
6400e42a:	push   eax
6400e42b:	push   edi
6400e42c:	push   edx
6400e42d:	push   ecx
6400e42e:	push   esi
6400e42f:	call   0x6400e210
6400e434:	add    esp,0x14
6400e437:	mov    eax,esi
6400e439:	mov    ecx,DWORD PTR [esp+0x14]
6400e43d:	mov    DWORD PTR fs:0x0,ecx
6400e444:	pop    ecx
6400e445:	pop    edi
6400e446:	pop    esi
6400e447:	pop    ebp
6400e448:	add    esp,0x10
6400e44b:	ret    
6400e44c:	int3   
6400e44d:	int3   
6400e44e:	int3   
6400e44f:	int3   
6400e450:	mov    eax,DWORD PTR [esp+0x8]
6400e454:	mov    ecx,DWORD PTR [esp+0x4]
6400e458:	mov    edx,DWORD PTR [esp+0xc]
6400e45c:	sub    eax,ecx
6400e45e:	sar    eax,0x2
6400e461:	lea    eax,[eax*4+0x0]
6400e468:	push   esi
6400e469:	lea    esi,[eax+edx*1]
6400e46c:	je     0x6400e47a
6400e46e:	push   eax
6400e46f:	push   ecx
6400e470:	push   eax
6400e471:	push   edx
6400e472:	call   0x640105f5
6400e477:	add    esp,0x10
6400e47a:	mov    eax,esi
6400e47c:	pop    esi
6400e47d:	ret    0xc
6400e480:	push   esi
6400e481:	mov    esi,DWORD PTR [esp+0xc]
6400e485:	test   esi,esi
6400e487:	push   edi
6400e488:	mov    edi,DWORD PTR [esp+0xc]
6400e48c:	mov    eax,esi
6400e48e:	mov    ecx,edi
6400e490:	jbe    0x6400e4a6
6400e492:	mov    edx,DWORD PTR [esp+0x14]
6400e496:	push   ebx
6400e497:	mov    ebx,DWORD PTR [edx]
6400e499:	mov    DWORD PTR [ecx],ebx
6400e49b:	sub    eax,0x1
6400e49e:	add    ecx,0x4
6400e4a1:	test   eax,eax
6400e4a3:	ja     0x6400e497
6400e4a5:	pop    ebx
6400e4a6:	lea    eax,[edi+esi*4]
6400e4a9:	pop    edi
6400e4aa:	pop    esi
6400e4ab:	ret    0xc
6400e4ae:	int3   
6400e4af:	int3   
6400e4b0:	push   0xffffffff
6400e4b2:	push   0x64020268
6400e4b7:	mov    eax,fs:0x0
6400e4bd:	push   eax
6400e4be:	sub    esp,0x44
6400e4c1:	mov    eax,ds:0x64029038
6400e4c6:	xor    eax,esp
6400e4c8:	push   eax
6400e4c9:	lea    eax,[esp+0x48]
6400e4cd:	mov    fs:0x0,eax
6400e4d3:	push   0x12
6400e4d5:	push   0x64024c00
6400e4da:	lea    ecx,[esp+0xc]
6400e4de:	mov    DWORD PTR [esp+0x24],0xf
6400e4e6:	mov    DWORD PTR [esp+0x20],0x0
6400e4ee:	mov    BYTE PTR [esp+0x10],0x0
6400e4f3:	call   0x64001880
6400e4f8:	lea    eax,[esp+0x4]
6400e4fc:	push   eax
6400e4fd:	lea    ecx,[esp+0x24]
6400e501:	mov    DWORD PTR [esp+0x54],0x0
6400e509:	call   0x64002d00
6400e50e:	push   0x64026f58
6400e513:	lea    ecx,[esp+0x24]
6400e517:	push   ecx
6400e518:	mov    DWORD PTR [esp+0x28],0x6402231c
6400e520:	call   0x6401080d
6400e525:	int3   
6400e526:	int3   
6400e527:	int3   
6400e528:	int3   
6400e529:	int3   
6400e52a:	int3   
6400e52b:	int3   
6400e52c:	int3   
6400e52d:	int3   
6400e52e:	int3   
6400e52f:	int3   
6400e530:	mov    eax,DWORD PTR [esp+0x10]
6400e534:	push   ebx
6400e535:	push   esi
6400e536:	mov    esi,ecx
6400e538:	mov    ecx,DWORD PTR [eax]
6400e53a:	mov    DWORD PTR [esp+0x18],ecx
6400e53e:	mov    ecx,DWORD PTR [esi+0x4]
6400e541:	test   ecx,ecx
6400e543:	push   edi
6400e544:	jne    0x6400e54a
6400e546:	xor    edi,edi
6400e548:	jmp    0x6400e552
6400e54a:	mov    edi,DWORD PTR [esi+0xc]
6400e54d:	sub    edi,ecx
6400e54f:	sar    edi,0x2
6400e552:	mov    ebx,DWORD PTR [esp+0x18]
6400e556:	test   ebx,ebx
6400e558:	je     0x6400e6df
6400e55e:	test   ecx,ecx
6400e560:	jne    0x6400e566
6400e562:	xor    eax,eax
6400e564:	jmp    0x6400e56e
6400e566:	mov    eax,DWORD PTR [esi+0x8]
6400e569:	sub    eax,ecx
6400e56b:	sar    eax,0x2
6400e56e:	mov    edx,0x3fffffff
6400e573:	sub    edx,eax
6400e575:	cmp    edx,ebx
6400e577:	jae    0x6400e57e
6400e579:	call   0x6400e4b0
6400e57e:	test   ecx,ecx
6400e580:	jne    0x6400e586
6400e582:	xor    eax,eax
6400e584:	jmp    0x6400e58e
6400e586:	mov    eax,DWORD PTR [esi+0x8]
6400e589:	sub    eax,ecx
6400e58b:	sar    eax,0x2
6400e58e:	add    eax,ebx
6400e590:	cmp    edi,eax
6400e592:	push   ebp
6400e593:	jae    0x6400e64d
6400e599:	mov    eax,edi
6400e59b:	shr    eax,1
6400e59d:	mov    edx,0x3fffffff
6400e5a2:	sub    edx,eax
6400e5a4:	cmp    edx,edi
6400e5a6:	jae    0x6400e5ac
6400e5a8:	xor    edi,edi
6400e5aa:	jmp    0x6400e5ae
6400e5ac:	add    edi,eax
6400e5ae:	test   ecx,ecx
6400e5b0:	jne    0x6400e5b6
6400e5b2:	xor    eax,eax
6400e5b4:	jmp    0x6400e5be
6400e5b6:	mov    eax,DWORD PTR [esi+0x8]
6400e5b9:	sub    eax,ecx
6400e5bb:	sar    eax,0x2
6400e5be:	add    eax,ebx
6400e5c0:	cmp    edi,eax
6400e5c2:	jae    0x6400e5d6
6400e5c4:	test   ecx,ecx
6400e5c6:	jne    0x6400e5cc
6400e5c8:	xor    edi,edi
6400e5ca:	jmp    0x6400e5d4
6400e5cc:	mov    edi,DWORD PTR [esi+0x8]
6400e5cf:	sub    edi,ecx
6400e5d1:	sar    edi,0x2
6400e5d4:	add    edi,ebx
6400e5d6:	push   0x0
6400e5d8:	push   edi
6400e5d9:	call   0x6400e100
6400e5de:	mov    ecx,DWORD PTR [esi+0x4]
6400e5e1:	add    esp,0x8
6400e5e4:	mov    ebp,eax
6400e5e6:	mov    eax,DWORD PTR [esp+0x18]
6400e5ea:	push   ebp
6400e5eb:	push   eax
6400e5ec:	push   ecx
6400e5ed:	mov    ecx,esi
6400e5ef:	call   0x6400e450
6400e5f4:	lea    edx,[esp+0x20]
6400e5f8:	push   edx
6400e5f9:	push   ebx
6400e5fa:	push   eax
6400e5fb:	mov    ecx,esi
6400e5fd:	call   0x6400e480
6400e602:	mov    ecx,DWORD PTR [esp+0x18]
6400e606:	push   eax
6400e607:	mov    eax,DWORD PTR [esi+0x8]
6400e60a:	push   eax
6400e60b:	push   ecx
6400e60c:	mov    ecx,esi
6400e60e:	call   0x6400e450
6400e613:	mov    eax,DWORD PTR [esi+0x4]
6400e616:	test   eax,eax
6400e618:	jne    0x6400e61e
6400e61a:	xor    ecx,ecx
6400e61c:	jmp    0x6400e626
6400e61e:	mov    ecx,DWORD PTR [esi+0x8]
6400e621:	sub    ecx,eax
6400e623:	sar    ecx,0x2
6400e626:	add    ebx,ecx
6400e628:	test   eax,eax
6400e62a:	je     0x6400e635
6400e62c:	push   eax
6400e62d:	call   0x64010422
6400e632:	add    esp,0x4
6400e635:	lea    edx,[ebp+edi*4+0x0]
6400e639:	lea    eax,[ebp+ebx*4+0x0]
6400e63d:	mov    DWORD PTR [esi+0x4],ebp
6400e640:	pop    ebp
6400e641:	pop    edi
6400e642:	mov    DWORD PTR [esi+0xc],edx
6400e645:	mov    DWORD PTR [esi+0x8],eax
6400e648:	pop    esi
6400e649:	pop    ebx
6400e64a:	ret    0x10
6400e64d:	mov    ebp,DWORD PTR [esi+0x8]
6400e650:	mov    edi,DWORD PTR [esp+0x18]
6400e654:	mov    ecx,ebp
6400e656:	sub    ecx,edi
6400e658:	sar    ecx,0x2
6400e65b:	lea    eax,[ebx*4+0x0]
6400e662:	cmp    ecx,ebx
6400e664:	mov    DWORD PTR [esp+0x1c],eax
6400e668:	mov    ecx,esi
6400e66a:	jae    0x6400e6b2
6400e66c:	add    eax,edi
6400e66e:	push   eax
6400e66f:	push   ebp
6400e670:	push   edi
6400e671:	call   0x6400e450
6400e676:	mov    eax,DWORD PTR [esi+0x8]
6400e679:	mov    ecx,eax
6400e67b:	sub    ecx,edi
6400e67d:	sar    ecx,0x2
6400e680:	lea    edx,[esp+0x20]
6400e684:	push   edx
6400e685:	sub    ebx,ecx
6400e687:	push   ebx
6400e688:	push   eax
6400e689:	mov    ecx,esi
6400e68b:	call   0x6400e480
6400e690:	mov    eax,DWORD PTR [esp+0x1c]
6400e694:	add    DWORD PTR [esi+0x8],eax
6400e697:	mov    esi,DWORD PTR [esi+0x8]
6400e69a:	lea    edx,[esp+0x20]
6400e69e:	push   edx
6400e69f:	sub    esi,eax
6400e6a1:	push   esi
6400e6a2:	push   edi
6400e6a3:	call   0x6400e1c0
6400e6a8:	add    esp,0xc
6400e6ab:	pop    ebp
6400e6ac:	pop    edi
6400e6ad:	pop    esi
6400e6ae:	pop    ebx
6400e6af:	ret    0x10
6400e6b2:	push   ebp
6400e6b3:	mov    ebx,ebp
6400e6b5:	sub    ebx,eax
6400e6b7:	push   ebp
6400e6b8:	push   ebx
6400e6b9:	call   0x6400e450
6400e6be:	push   ebp
6400e6bf:	push   ebx
6400e6c0:	push   edi
6400e6c1:	mov    DWORD PTR [esi+0x8],eax
6400e6c4:	call   0x6400e1e0
6400e6c9:	mov    ecx,DWORD PTR [esp+0x28]
6400e6cd:	lea    eax,[esp+0x2c]
6400e6d1:	push   eax
6400e6d2:	add    ecx,edi
6400e6d4:	push   ecx
6400e6d5:	push   edi
6400e6d6:	call   0x6400e1c0
6400e6db:	add    esp,0x18
6400e6de:	pop    ebp
6400e6df:	pop    edi
6400e6e0:	pop    esi
6400e6e1:	pop    ebx
6400e6e2:	ret    0x10
6400e6e5:	int3   
6400e6e6:	int3   
6400e6e7:	int3   
6400e6e8:	int3   
6400e6e9:	int3   
6400e6ea:	int3   
6400e6eb:	int3   
6400e6ec:	int3   
6400e6ed:	int3   
6400e6ee:	int3   
6400e6ef:	int3   
6400e6f0:	push   ebp
6400e6f1:	lea    ebp,[esp-0x4c]
6400e6f5:	sub    esp,0x4c
6400e6f8:	push   0xffffffff
6400e6fa:	push   0x640202c8
6400e6ff:	mov    eax,fs:0x0
6400e705:	push   eax
6400e706:	sub    esp,0x48
6400e709:	mov    eax,ds:0x64029038
6400e70e:	xor    eax,ebp
6400e710:	mov    DWORD PTR [ebp+0x48],eax
6400e713:	push   ebx
6400e714:	push   esi
6400e715:	push   edi
6400e716:	push   eax
6400e717:	lea    eax,[ebp-0xc]
6400e71a:	mov    fs:0x0,eax
6400e720:	mov    DWORD PTR [ebp-0x10],esp
6400e723:	mov    esi,DWORD PTR [ebp+0x54]
6400e726:	call   DWORD PTR ds:0x64029008
6400e72c:	push   0x64022454
6400e731:	lea    ecx,[ebp+0x20]
6400e734:	mov    DWORD PTR [ebp+0x10],eax
6400e737:	mov    DWORD PTR [ebp-0x4],0x0
6400e73e:	call   0x64002590
6400e743:	mov    eax,ds:0x6402a4e0
6400e748:	mov    edx,DWORD PTR [eax+0xc]
6400e74b:	mov    ecx,0x6402a4e0
6400e750:	mov    BYTE PTR [ebp-0x4],0x1
6400e754:	call   edx
6400e756:	add    eax,0x10
6400e759:	mov    DWORD PTR [ebp+0x24],eax
6400e75c:	lea    eax,[ebp+0x24]
6400e75f:	push   eax
6400e760:	lea    ecx,[ebp+0x20]
6400e763:	push   ecx
6400e764:	lea    edx,[ebp+0x28]
6400e767:	push   edx
6400e768:	mov    BYTE PTR [ebp-0x4],0x2
6400e76c:	call   0x640021a0
6400e771:	add    esp,0xc
6400e774:	lea    eax,[ebp+0x28]
6400e777:	push   0x64024590
6400e77c:	push   eax
6400e77d:	mov    BYTE PTR [ebp-0x4],0x3
6400e781:	call   0x6400e160
6400e786:	add    esp,0x8
6400e789:	test   al,al
6400e78b:	je     0x6400e96f
6400e791:	mov    edi,DWORD PTR [ebp+0x24]
6400e794:	call   0x6400c150
6400e799:	push   edi
6400e79a:	call   eax
6400e79c:	cmp    DWORD PTR [esi+0x18],0x10
6400e7a0:	mov    eax,DWORD PTR [esi+0x14]
6400e7a3:	push   eax
6400e7a4:	jb     0x6400e7ab
6400e7a6:	mov    eax,DWORD PTR [esi+0x4]
6400e7a9:	jmp    0x6400e7ae
6400e7ab:	lea    eax,[esi+0x4]
6400e7ae:	push   eax
6400e7af:	mov    eax,DWORD PTR [ebp+0x28]
6400e7b2:	push   ecx
6400e7b3:	add    eax,0xfffffff0
6400e7b6:	mov    DWORD PTR [ebp+0x1c],esp
6400e7b9:	mov    esi,esp
6400e7bb:	push   eax
6400e7bc:	call   0x640028a0
6400e7c1:	add    eax,0x10
6400e7c4:	add    esp,0x4
6400e7c7:	mov    DWORD PTR [esi],eax
6400e7c9:	call   0x640023e0
6400e7ce:	add    esp,0xc
6400e7d1:	lea    ecx,[ebp+0x1c]
6400e7d4:	push   0x0
6400e7d6:	push   ecx
6400e7d7:	call   0x64003490
6400e7dc:	add    esp,0x8
6400e7df:	push   0x6402243c
6400e7e4:	push   eax
6400e7e5:	lea    edx,[ebp+0x18]
6400e7e8:	push   edx
6400e7e9:	mov    BYTE PTR [ebp-0x4],0x4
6400e7ed:	call   0x6400e370
6400e7f2:	add    esp,0xc
6400e7f5:	mov    eax,DWORD PTR [ebp+0x1c]
6400e7f8:	mov    bl,0x6
6400e7fa:	add    eax,0xfffffff0
6400e7fd:	mov    BYTE PTR [ebp-0x4],bl
6400e800:	lea    ecx,[eax+0xc]
6400e803:	or     edx,0xffffffff
6400e806:	lock xadd DWORD PTR [ecx],edx
6400e80a:	dec    edx
6400e80b:	test   edx,edx
6400e80d:	jg     0x6400e819
6400e80f:	mov    ecx,DWORD PTR [eax]
6400e811:	mov    edx,DWORD PTR [ecx]
6400e813:	push   eax
6400e814:	mov    eax,DWORD PTR [edx+0x4]
6400e817:	call   eax
6400e819:	mov    eax,DWORD PTR [ebp+0x28]
6400e81c:	test   eax,eax
6400e81e:	mov    edi,eax
6400e820:	je     0x6400e852
6400e822:	push   eax
6400e823:	call   DWORD PTR ds:0x64022054
6400e829:	add    eax,0x1
6400e82c:	cmp    eax,0x3fffffff
6400e831:	jle    0x6400e837
6400e833:	xor    eax,eax
6400e835:	jmp    0x6400e852
6400e837:	lea    esi,[eax+eax*1]
6400e83a:	mov    eax,esi
6400e83c:	call   0x640113a0
6400e841:	mov    ecx,DWORD PTR [ebp+0x10]
6400e844:	mov    DWORD PTR [ebp-0x10],esp
6400e847:	mov    eax,esp
6400e849:	push   ecx
6400e84a:	push   esi
6400e84b:	push   edi
6400e84c:	push   eax
6400e84d:	call   0x64002b80
6400e852:	push   eax
6400e853:	lea    ecx,[ebp+0x14]
6400e856:	call   0x64004490
6400e85b:	lea    edx,[ebp+0x18]
6400e85e:	push   edx
6400e85f:	lea    eax,[ebp+0x14]
6400e862:	push   eax
6400e863:	mov    BYTE PTR [ebp-0x4],0x7
6400e867:	call   0x64002530
6400e86c:	mov    eax,DWORD PTR [ebp+0x14]
6400e86f:	add    eax,0xfffffff0
6400e872:	add    esp,0x8
6400e875:	mov    BYTE PTR [ebp-0x4],bl
6400e878:	lea    ecx,[eax+0xc]
6400e87b:	or     edx,0xffffffff
6400e87e:	lock xadd DWORD PTR [ecx],edx
6400e882:	dec    edx
6400e883:	test   edx,edx
6400e885:	jg     0x6400e891
6400e887:	mov    ecx,DWORD PTR [eax]
6400e889:	mov    edx,DWORD PTR [ecx]
6400e88b:	push   eax
6400e88c:	mov    eax,DWORD PTR [edx+0x4]
6400e88f:	call   eax
6400e891:	xor    eax,eax
6400e893:	push   0x40
6400e895:	push   eax
6400e896:	lea    ecx,[ebp-0x50]
6400e899:	push   ecx
6400e89a:	mov    DWORD PTR [ebp+0x0],eax
6400e89d:	mov    DWORD PTR [ebp+0x4],eax
6400e8a0:	mov    DWORD PTR [ebp+0x8],eax
6400e8a3:	mov    DWORD PTR [ebp+0xc],eax
6400e8a6:	call   0x64011320
6400e8ab:	lea    edx,[ebp+0x2c]
6400e8ae:	push   edx
6400e8af:	mov    DWORD PTR [ebp-0x54],0x44
6400e8b6:	call   0x640014a0
6400e8bb:	add    esp,0x10
6400e8be:	mov    edi,DWORD PTR [ebp+0x30]
6400e8c1:	mov    ebx,0x10
6400e8c6:	cmp    DWORD PTR [ebp+0x44],ebx
6400e8c9:	mov    BYTE PTR [ebp-0x4],0x8
6400e8cd:	jae    0x6400e8d2
6400e8cf:	lea    edi,[ebp+0x30]
6400e8d2:	mov    esi,DWORD PTR [ebp+0x28]
6400e8d5:	call   0x6400bf90
6400e8da:	lea    ecx,[ebp+0x0]
6400e8dd:	push   ecx
6400e8de:	lea    edx,[ebp-0x54]
6400e8e1:	push   edx
6400e8e2:	push   0x0
6400e8e4:	push   edi
6400e8e5:	push   0x400
6400e8ea:	push   0x1
6400e8ec:	push   0x0
6400e8ee:	push   0x0
6400e8f0:	push   0x0
6400e8f2:	push   esi
6400e8f3:	call   eax
6400e8f5:	test   eax,eax
6400e8f7:	je     0x6400e90b
6400e8f9:	mov    eax,DWORD PTR [ebp+0x4]
6400e8fc:	mov    esi,DWORD PTR ds:0x64022040
6400e902:	push   eax
6400e903:	call   esi
6400e905:	mov    ecx,DWORD PTR [ebp+0x0]
6400e908:	push   ecx
6400e909:	call   esi
6400e90b:	mov    esi,DWORD PTR [ebp+0x28]
6400e90e:	call   0x6400c070
6400e913:	push   0x4
6400e915:	push   0x0
6400e917:	push   esi
6400e918:	call   eax
6400e91a:	mov    esi,DWORD PTR [ebp+0x24]
6400e91d:	call   0x6400c070
6400e922:	push   0x4
6400e924:	push   0x0
6400e926:	push   esi
6400e927:	call   eax
6400e929:	cmp    DWORD PTR [ebp+0x44],ebx
6400e92c:	jb     0x6400e93a
6400e92e:	mov    edx,DWORD PTR [ebp+0x30]
6400e931:	push   edx
6400e932:	call   0x64010422
6400e937:	add    esp,0x4
6400e93a:	mov    eax,DWORD PTR [ebp+0x18]
6400e93d:	add    eax,0xfffffff0
6400e940:	mov    DWORD PTR [ebp+0x44],0xf
6400e947:	mov    DWORD PTR [ebp+0x40],0x0
6400e94e:	mov    BYTE PTR [ebp+0x30],0x0
6400e952:	mov    BYTE PTR [ebp-0x4],0x3
6400e956:	lea    ecx,[eax+0xc]
6400e959:	or     edx,0xffffffff
6400e95c:	lock xadd DWORD PTR [ecx],edx
6400e960:	dec    edx
6400e961:	test   edx,edx
6400e963:	jg     0x6400e96f
6400e965:	mov    ecx,DWORD PTR [eax]
6400e967:	mov    edx,DWORD PTR [ecx]
6400e969:	push   eax
6400e96a:	mov    eax,DWORD PTR [edx+0x4]
6400e96d:	call   eax
6400e96f:	mov    eax,DWORD PTR [ebp+0x28]
6400e972:	add    eax,0xfffffff0
6400e975:	mov    BYTE PTR [ebp-0x4],0x2
6400e979:	lea    ecx,[eax+0xc]
6400e97c:	or     edx,0xffffffff
6400e97f:	lock xadd DWORD PTR [ecx],edx
6400e983:	dec    edx
6400e984:	test   edx,edx
6400e986:	jg     0x6400e992
6400e988:	mov    ecx,DWORD PTR [eax]
6400e98a:	mov    edx,DWORD PTR [ecx]
6400e98c:	push   eax
6400e98d:	mov    eax,DWORD PTR [edx+0x4]
6400e990:	call   eax
6400e992:	mov    eax,DWORD PTR [ebp+0x24]
6400e995:	add    eax,0xfffffff0
6400e998:	mov    BYTE PTR [ebp-0x4],0x1
6400e99c:	lea    ecx,[eax+0xc]
6400e99f:	or     edx,0xffffffff
6400e9a2:	lock xadd DWORD PTR [ecx],edx
6400e9a6:	dec    edx
6400e9a7:	test   edx,edx
6400e9a9:	jg     0x6400e9b5
6400e9ab:	mov    ecx,DWORD PTR [eax]
6400e9ad:	mov    edx,DWORD PTR [ecx]
6400e9af:	push   eax
6400e9b0:	mov    eax,DWORD PTR [edx+0x4]
6400e9b3:	call   eax
6400e9b5:	mov    eax,DWORD PTR [ebp+0x20]
6400e9b8:	add    eax,0xfffffff0
6400e9bb:	mov    BYTE PTR [ebp-0x4],0x0
6400e9bf:	lea    ecx,[eax+0xc]
6400e9c2:	or     edx,0xffffffff
6400e9c5:	lock xadd DWORD PTR [ecx],edx
6400e9c9:	dec    edx
6400e9ca:	test   edx,edx
6400e9cc:	jg     0x6400e9d8
6400e9ce:	mov    ecx,DWORD PTR [eax]
6400e9d0:	mov    edx,DWORD PTR [ecx]
6400e9d2:	push   eax
6400e9d3:	mov    eax,DWORD PTR [edx+0x4]
6400e9d6:	call   eax
6400e9d8:	lea    esp,[ebp-0x64]
6400e9db:	mov    ecx,DWORD PTR [ebp-0xc]
6400e9de:	mov    DWORD PTR fs:0x0,ecx
6400e9e5:	pop    ecx
6400e9e6:	pop    edi
6400e9e7:	pop    esi
6400e9e8:	pop    ebx
6400e9e9:	mov    ecx,DWORD PTR [ebp+0x48]
6400e9ec:	xor    ecx,ebp
6400e9ee:	call   0x64010c1e
6400e9f3:	add    ebp,0x4c
6400e9f6:	mov    esp,ebp
6400e9f8:	pop    ebp
6400e9f9:	ret    
6400e9fa:	mov    eax,0x6400e9d8
6400e9ff:	ret    
6400ea00:	push   ecx
6400ea01:	push   ebx
6400ea02:	push   ebp
6400ea03:	mov    ebp,DWORD PTR [esp+0x14]
6400ea07:	push   esi
6400ea08:	mov    esi,ecx
6400ea0a:	push   edi
6400ea0b:	mov    edi,DWORD PTR [esi+0x4]
6400ea0e:	test   edi,edi
6400ea10:	je     0x6400ea1e
6400ea12:	mov    eax,DWORD PTR [esi+0x8]
6400ea15:	mov    ecx,eax
6400ea17:	sub    ecx,edi
6400ea19:	sar    ecx,0x2
6400ea1c:	jne    0x6400ea22
6400ea1e:	xor    ebx,ebx
6400ea20:	jmp    0x6400ea41
6400ea22:	cmp    edi,eax
6400ea24:	jbe    0x6400ea2b
6400ea26:	call   0x6401077a
6400ea2b:	test   ebp,ebp
6400ea2d:	je     0x6400ea33
6400ea2f:	cmp    ebp,esi
6400ea31:	je     0x6400ea38
6400ea33:	call   0x6401077a
6400ea38:	mov    ebx,DWORD PTR [esp+0x20]
6400ea3c:	sub    ebx,edi
6400ea3e:	sar    ebx,0x2
6400ea41:	mov    edx,DWORD PTR [esp+0x24]
6400ea45:	mov    eax,DWORD PTR [esp+0x20]
6400ea49:	push   edx
6400ea4a:	push   0x1
6400ea4c:	push   eax
6400ea4d:	push   ebp
6400ea4e:	mov    ecx,esi
6400ea50:	call   0x6400e530
6400ea55:	mov    edi,DWORD PTR [esi+0x4]
6400ea58:	cmp    edi,DWORD PTR [esi+0x8]
6400ea5b:	jbe    0x6400ea62
6400ea5d:	call   0x6401077a
6400ea62:	mov    DWORD PTR [esp+0x20],edi
6400ea66:	lea    edi,[edi+ebx*4]
6400ea69:	cmp    edi,DWORD PTR [esi+0x8]
6400ea6c:	ja     0x6400ea73
6400ea6e:	cmp    edi,DWORD PTR [esi+0x4]
6400ea71:	jae    0x6400ea78
6400ea73:	call   0x6401077a
6400ea78:	mov    eax,DWORD PTR [esp+0x18]
6400ea7c:	mov    DWORD PTR [eax+0x4],edi
6400ea7f:	pop    edi
6400ea80:	mov    DWORD PTR [eax],esi
6400ea82:	pop    esi
6400ea83:	pop    ebp
6400ea84:	pop    ebx
6400ea85:	pop    ecx
6400ea86:	ret    0x10
6400ea89:	int3   
6400ea8a:	int3   
6400ea8b:	int3   
6400ea8c:	int3   
6400ea8d:	int3   
6400ea8e:	int3   
6400ea8f:	int3   
6400ea90:	sub    esp,0x8
6400ea93:	push   esi
6400ea94:	mov    esi,ecx
6400ea96:	mov    edx,DWORD PTR [esi+0x4]
6400ea99:	test   edx,edx
6400ea9b:	jne    0x6400eaa1
6400ea9d:	xor    ecx,ecx
6400ea9f:	jmp    0x6400eaa9
6400eaa1:	mov    ecx,DWORD PTR [esi+0x8]
6400eaa4:	sub    ecx,edx
6400eaa6:	sar    ecx,0x2
6400eaa9:	test   edx,edx
6400eaab:	je     0x6400ead1
6400eaad:	mov    eax,DWORD PTR [esi+0xc]
6400eab0:	sub    eax,edx
6400eab2:	sar    eax,0x2
6400eab5:	cmp    ecx,eax
6400eab7:	jae    0x6400ead1
6400eab9:	mov    eax,DWORD PTR [esi+0x8]
6400eabc:	mov    ecx,DWORD PTR [esp+0x10]
6400eac0:	mov    edx,DWORD PTR [ecx]
6400eac2:	mov    DWORD PTR [eax],edx
6400eac4:	add    eax,0x4
6400eac7:	mov    DWORD PTR [esi+0x8],eax
6400eaca:	pop    esi
6400eacb:	add    esp,0x8
6400eace:	ret    0x4
6400ead1:	push   edi
6400ead2:	mov    edi,DWORD PTR [esi+0x8]
6400ead5:	cmp    edx,edi
6400ead7:	jbe    0x6400eade
6400ead9:	call   0x6401077a
6400eade:	mov    eax,DWORD PTR [esp+0x14]
6400eae2:	push   eax
6400eae3:	push   edi
6400eae4:	push   esi
6400eae5:	lea    ecx,[esp+0x14]
6400eae9:	push   ecx
6400eaea:	mov    ecx,esi
6400eaec:	call   0x6400ea00
6400eaf1:	pop    edi
6400eaf2:	pop    esi
6400eaf3:	add    esp,0x8
6400eaf6:	ret    0x4
6400eaf9:	int3   
6400eafa:	int3   
6400eafb:	int3   
6400eafc:	int3   
6400eafd:	int3   
6400eafe:	int3   
6400eaff:	int3   
6400eb00:	push   ecx
6400eb01:	push   esi
6400eb02:	mov    esi,ecx
6400eb04:	mov    eax,DWORD PTR [esi+0x4]
6400eb07:	test   eax,eax
6400eb09:	je     0x6400eb27
6400eb0b:	mov    ecx,DWORD PTR [esp+0x4]
6400eb0f:	mov    edx,DWORD PTR [esi+0x8]
6400eb12:	push   ecx
6400eb13:	push   esi
6400eb14:	push   edx
6400eb15:	push   eax
6400eb16:	call   0x6400a190
6400eb1b:	mov    eax,DWORD PTR [esi+0x4]
6400eb1e:	push   eax
6400eb1f:	call   0x64010422
6400eb24:	add    esp,0x14
6400eb27:	mov    DWORD PTR [esi+0x4],0x0
6400eb2e:	mov    DWORD PTR [esi+0x8],0x0
6400eb35:	mov    DWORD PTR [esi+0xc],0x0
6400eb3c:	pop    esi
6400eb3d:	pop    ecx
6400eb3e:	ret    
6400eb3f:	int3   
6400eb40:	push   0xffffffff
6400eb42:	push   0x640202fe
6400eb47:	mov    eax,fs:0x0
6400eb4d:	push   eax
6400eb4e:	push   ecx
6400eb4f:	push   ebx
6400eb50:	push   esi
6400eb51:	push   edi
6400eb52:	mov    eax,ds:0x64029038
6400eb57:	xor    eax,esp
6400eb59:	push   eax
6400eb5a:	lea    eax,[esp+0x14]
6400eb5e:	mov    fs:0x0,eax
6400eb64:	mov    eax,0x1
6400eb69:	test   BYTE PTR ds:0x6402a468,al
6400eb6f:	jne    0x6400ebaa
6400eb71:	or     DWORD PTR ds:0x6402a468,eax
6400eb77:	push   0x64021ef0
6400eb7c:	mov    DWORD PTR ds:0x6402a45c,0x0
6400eb86:	mov    DWORD PTR ds:0x6402a460,0x0
6400eb90:	mov    DWORD PTR ds:0x6402a464,0x0
6400eb9a:	call   0x64010d51
6400eb9f:	add    esp,0x4
6400eba2:	mov    DWORD PTR [esp+0x1c],0xffffffff
6400ebaa:	mov    esi,DWORD PTR ds:0x6402a45c
6400ebb0:	test   esi,esi
6400ebb2:	je     0x6400ebc3
6400ebb4:	mov    edi,DWORD PTR ds:0x6402a460
6400ebba:	mov    eax,edi
6400ebbc:	sub    eax,esi
6400ebbe:	sar    eax,0x2
6400ebc1:	jne    0x6400ec2f
6400ebc3:	push   0x64022478
6400ebc8:	push   0xc
6400ebca:	push   0x64022468
6400ebcf:	call   0x64004730
6400ebd4:	add    esp,0xc
6400ebd7:	push   eax
6400ebd8:	call   DWORD PTR ds:0x640221c8
6400ebde:	lea    ecx,[esp+0x10]
6400ebe2:	push   ecx
6400ebe3:	mov    ecx,0x6402a458
6400ebe8:	mov    DWORD PTR [esp+0x14],eax
6400ebec:	call   0x6400ea90
6400ebf1:	call   DWORD PTR ds:0x64022058
6400ebf7:	push   eax
6400ebf8:	call   0x640113cc
6400ebfd:	mov    eax,ds:0x6402a45c
6400ec02:	add    esp,0x4
6400ec05:	test   eax,eax
6400ec07:	jne    0x6400ec0d
6400ec09:	xor    esi,esi
6400ec0b:	jmp    0x6400ec18
6400ec0d:	mov    esi,DWORD PTR ds:0x6402a460
6400ec13:	sub    esi,eax
6400ec15:	sar    esi,0x2
6400ec18:	call   0x640113d9
6400ec1d:	mov    edi,DWORD PTR ds:0x6402a460
6400ec23:	xor    edx,edx
6400ec25:	div    esi
6400ec27:	mov    esi,DWORD PTR ds:0x6402a45c
6400ec2d:	jmp    0x6400ec35
6400ec2f:	mov    edx,DWORD PTR ds:0x6402a454
6400ec35:	test   esi,esi
6400ec37:	jne    0x6400ec3d
6400ec39:	xor    ecx,ecx
6400ec3b:	jmp    0x6400ec44
6400ec3d:	mov    ecx,edi
6400ec3f:	sub    ecx,esi
6400ec41:	sar    ecx,0x2
6400ec44:	lea    eax,[edx+0x1]
6400ec47:	xor    edx,edx
6400ec49:	div    ecx
6400ec4b:	test   esi,esi
6400ec4d:	mov    DWORD PTR ds:0x6402a454,edx
6400ec53:	mov    ebx,edx
6400ec55:	je     0x6400ec60
6400ec57:	sub    edi,esi
6400ec59:	sar    edi,0x2
6400ec5c:	cmp    edx,edi
6400ec5e:	jb     0x6400ec81
6400ec60:	call   0x6401077a
6400ec65:	mov    edx,DWORD PTR ds:0x6402a45c
6400ec6b:	mov    eax,DWORD PTR [edx+ebx*4]
6400ec6e:	mov    ecx,DWORD PTR [esp+0x14]
6400ec72:	mov    DWORD PTR fs:0x0,ecx
6400ec79:	pop    ecx
6400ec7a:	pop    edi
6400ec7b:	pop    esi
6400ec7c:	pop    ebx
6400ec7d:	add    esp,0x10
6400ec80:	ret    
6400ec81:	mov    eax,DWORD PTR [esi+ebx*4]
6400ec84:	mov    ecx,DWORD PTR [esp+0x14]
6400ec88:	mov    DWORD PTR fs:0x0,ecx
6400ec8f:	pop    ecx
6400ec90:	pop    edi
6400ec91:	pop    esi
6400ec92:	pop    ebx
6400ec93:	add    esp,0x10
6400ec96:	ret    
6400ec97:	int3   
6400ec98:	int3   
6400ec99:	int3   
6400ec9a:	int3   
6400ec9b:	int3   
6400ec9c:	int3   
6400ec9d:	int3   
6400ec9e:	int3   
6400ec9f:	int3   
6400eca0:	push   ebp
6400eca1:	mov    ebp,esp
6400eca3:	push   0xffffffff
6400eca5:	push   0x64020328
6400ecaa:	mov    eax,fs:0x0
6400ecb0:	push   eax
6400ecb1:	sub    esp,0x8
6400ecb4:	push   ebx
6400ecb5:	push   esi
6400ecb6:	push   edi
6400ecb7:	mov    eax,ds:0x64029038
6400ecbc:	xor    eax,ebp
6400ecbe:	push   eax
6400ecbf:	lea    eax,[ebp-0xc]
6400ecc2:	mov    fs:0x0,eax
6400ecc8:	mov    DWORD PTR [ebp-0x10],esp
6400eccb:	xor    ebx,ebx
6400eccd:	mov    DWORD PTR [ebp-0x4],ebx
6400ecd0:	call   0x6400eb40
6400ecd5:	lea    ecx,[ebp-0x14]
6400ecd8:	mov    edi,eax
6400ecda:	call   0x64008320
6400ecdf:	mov    eax,DWORD PTR [ebp+0x8]
6400ece2:	cmp    DWORD PTR [eax+0x18],0x10
6400ece6:	mov    ecx,DWORD PTR [eax+0x14]
6400ece9:	mov    BYTE PTR [ebp-0x4],0x1
6400eced:	jb     0x6400ecf4
6400ecef:	mov    eax,DWORD PTR [eax+0x4]
6400ecf2:	jmp    0x6400ecf7
6400ecf4:	add    eax,0x4
6400ecf7:	mov    esi,DWORD PTR [ebp+0xc]
6400ecfa:	push   0xffffffff
6400ecfc:	push   esi
6400ecfd:	add    ecx,0x1
6400ed00:	push   ecx
6400ed01:	push   eax
6400ed02:	push   edi
6400ed03:	lea    ecx,[ebp-0x14]
6400ed06:	call   0x64008340
6400ed0b:	cmp    al,bl
6400ed0d:	je     0x6400ed2e
6400ed0f:	lea    ecx,[ebp-0x14]
6400ed12:	mov    BYTE PTR [ebp-0x4],bl
6400ed15:	call   0x64008330
6400ed1a:	mov    al,0x1
6400ed1c:	mov    ecx,DWORD PTR [ebp-0xc]
6400ed1f:	mov    DWORD PTR fs:0x0,ecx
6400ed26:	pop    ecx
6400ed27:	pop    edi
6400ed28:	pop    esi
6400ed29:	pop    ebx
6400ed2a:	mov    esp,ebp
6400ed2c:	pop    ebp
6400ed2d:	ret    
6400ed2e:	push   ebx
6400ed2f:	push   0x64024592
6400ed34:	mov    ecx,esi
6400ed36:	call   0x64001880
6400ed3b:	lea    ecx,[ebp-0x14]
6400ed3e:	mov    BYTE PTR [ebp-0x4],bl
6400ed41:	call   0x64008330
6400ed46:	xor    al,al
6400ed48:	mov    ecx,DWORD PTR [ebp-0xc]
6400ed4b:	mov    DWORD PTR fs:0x0,ecx
6400ed52:	pop    ecx
6400ed53:	pop    edi
6400ed54:	pop    esi
6400ed55:	pop    ebx
6400ed56:	mov    esp,ebp
6400ed58:	pop    ebp
6400ed59:	ret    
6400ed5a:	mov    eax,0x6400ed46
6400ed5f:	ret    
6400ed60:	push   ecx
6400ed61:	push   esi
6400ed62:	push   0x640224c8
6400ed67:	push   0x17
6400ed69:	push   0x640224b0
6400ed6e:	mov    DWORD PTR [esp+0x10],0x0
6400ed76:	call   0x64004730
6400ed7b:	mov    esi,DWORD PTR [esp+0x18]
6400ed7f:	add    esp,0xc
6400ed82:	push   eax
6400ed83:	mov    ecx,esi
6400ed85:	call   0x64004490
6400ed8a:	mov    eax,esi
6400ed8c:	pop    esi
6400ed8d:	pop    ecx
6400ed8e:	ret    
6400ed8f:	int3   
6400ed90:	push   0xffffffff
6400ed92:	push   0x64020358
6400ed97:	mov    eax,fs:0x0
6400ed9d:	push   eax
6400ed9e:	push   ecx
6400ed9f:	push   esi
6400eda0:	mov    eax,ds:0x64029038
6400eda5:	xor    eax,esp
6400eda7:	push   eax
6400eda8:	lea    eax,[esp+0xc]
6400edac:	mov    fs:0x0,eax
6400edb2:	lea    eax,[esp+0x8]
6400edb6:	push   eax
6400edb7:	call   0x6400ed60
6400edbc:	add    esp,0x4
6400edbf:	mov    eax,DWORD PTR [eax]
6400edc1:	push   eax
6400edc2:	push   0x0
6400edc4:	mov    DWORD PTR [esp+0x1c],0x0
6400edcc:	call   0x64004390
6400edd1:	push   eax
6400edd2:	call   DWORD PTR ds:0x640220b0
6400edd8:	mov    esi,eax
6400edda:	mov    eax,DWORD PTR [esp+0x8]
6400edde:	add    eax,0xfffffff0
6400ede1:	mov    DWORD PTR [esp+0x14],0xffffffff
6400ede9:	lea    ecx,[eax+0xc]
6400edec:	or     edx,0xffffffff
6400edef:	lock xadd DWORD PTR [ecx],edx
6400edf3:	dec    edx
6400edf4:	test   edx,edx
6400edf6:	jg     0x6400ee02
6400edf8:	mov    ecx,DWORD PTR [eax]
6400edfa:	mov    edx,DWORD PTR [ecx]
6400edfc:	push   eax
6400edfd:	mov    eax,DWORD PTR [edx+0x4]
6400ee00:	call   eax
6400ee02:	test   esi,esi
6400ee04:	jne    0x6400ee19
6400ee06:	xor    al,al
6400ee08:	mov    ecx,DWORD PTR [esp+0xc]
6400ee0c:	mov    DWORD PTR fs:0x0,ecx
6400ee13:	pop    ecx
6400ee14:	pop    esi
6400ee15:	add    esp,0x10
6400ee18:	ret    
6400ee19:	push   0x0
6400ee1b:	push   esi
6400ee1c:	call   DWORD PTR ds:0x6402205c
6400ee22:	test   eax,eax
6400ee24:	sete   al
6400ee27:	mov    ecx,DWORD PTR [esp+0xc]
6400ee2b:	mov    DWORD PTR fs:0x0,ecx
6400ee32:	pop    ecx
6400ee33:	pop    esi
6400ee34:	add    esp,0x10
6400ee37:	ret    
6400ee38:	int3   
6400ee39:	int3   
6400ee3a:	int3   
6400ee3b:	int3   
6400ee3c:	int3   
6400ee3d:	int3   
6400ee3e:	int3   
6400ee3f:	int3   
6400ee40:	push   0xffffffff
6400ee42:	push   0x64020390
6400ee47:	mov    eax,fs:0x0
6400ee4d:	push   eax
6400ee4e:	sub    esp,0x8
6400ee51:	push   ebx
6400ee52:	push   esi
6400ee53:	push   edi
6400ee54:	mov    eax,ds:0x64029038
6400ee59:	xor    eax,esp
6400ee5b:	push   eax
6400ee5c:	lea    eax,[esp+0x18]
6400ee60:	mov    fs:0x0,eax
6400ee66:	xor    ebx,ebx
6400ee68:	mov    DWORD PTR [esp+0x14],ebx
6400ee6c:	push   0x64022514
6400ee71:	push   0xf
6400ee73:	push   0x640224f4
6400ee78:	mov    DWORD PTR [esp+0x2c],ebx
6400ee7c:	call   0x64004930
6400ee81:	add    esp,0xc
6400ee84:	push   eax
6400ee85:	lea    ecx,[esp+0x14]
6400ee89:	call   0x64002590
6400ee8e:	mov    eax,DWORD PTR [esp+0x10]
6400ee92:	push   ebx
6400ee93:	push   ebx
6400ee94:	push   0x3
6400ee96:	push   ebx
6400ee97:	push   ebx
6400ee98:	push   0xc0000000
6400ee9d:	push   eax
6400ee9e:	mov    BYTE PTR [esp+0x3c],0x1
6400eea3:	call   0x6400c230
6400eea8:	call   eax
6400eeaa:	mov    esi,eax
6400eeac:	mov    eax,DWORD PTR [esp+0x10]
6400eeb0:	add    eax,0xfffffff0
6400eeb3:	mov    DWORD PTR [esp+0x14],esi
6400eeb7:	mov    BYTE PTR [esp+0x20],bl
6400eebb:	or     edx,0xffffffff
6400eebe:	lea    ecx,[eax+0xc]
6400eec1:	lock xadd DWORD PTR [ecx],edx
6400eec5:	dec    edx
6400eec6:	cmp    esi,0xffffffff
6400eec9:	je     0x6400ef08
6400eecb:	test   edx,edx
6400eecd:	jg     0x6400eed9
6400eecf:	mov    ecx,DWORD PTR [eax]
6400eed1:	mov    edx,DWORD PTR [ecx]
6400eed3:	push   eax
6400eed4:	mov    eax,DWORD PTR [edx+0x4]
6400eed7:	call   eax
6400eed9:	cmp    esi,ebx
6400eedb:	je     0x6400eef3
6400eedd:	call   DWORD PTR ds:0x64022044
6400eee3:	push   esi
6400eee4:	mov    edi,eax
6400eee6:	call   DWORD PTR ds:0x64022040
6400eeec:	push   edi
6400eeed:	call   DWORD PTR ds:0x64022060
6400eef3:	mov    al,0x1
6400eef5:	mov    ecx,DWORD PTR [esp+0x18]
6400eef9:	mov    DWORD PTR fs:0x0,ecx
6400ef00:	pop    ecx
6400ef01:	pop    edi
6400ef02:	pop    esi
6400ef03:	pop    ebx
6400ef04:	add    esp,0x14
6400ef07:	ret    
6400ef08:	test   edx,edx
6400ef0a:	jg     0x6400ef16
6400ef0c:	mov    ecx,DWORD PTR [eax]
6400ef0e:	mov    edx,DWORD PTR [ecx]
6400ef10:	push   eax
6400ef11:	mov    eax,DWORD PTR [edx+0x4]
6400ef14:	call   eax
6400ef16:	call   DWORD PTR ds:0x64022044
6400ef1c:	push   0xffffffff
6400ef1e:	mov    esi,eax
6400ef20:	call   DWORD PTR ds:0x64022040
6400ef26:	push   esi
6400ef27:	call   DWORD PTR ds:0x64022060
6400ef2d:	xor    al,al
6400ef2f:	mov    ecx,DWORD PTR [esp+0x18]
6400ef33:	mov    DWORD PTR fs:0x0,ecx
6400ef3a:	pop    ecx
6400ef3b:	pop    edi
6400ef3c:	pop    esi
6400ef3d:	pop    ebx
6400ef3e:	add    esp,0x14
6400ef41:	ret    
6400ef42:	int3   
6400ef43:	int3   
6400ef44:	int3   
6400ef45:	int3   
6400ef46:	int3   
6400ef47:	int3   
6400ef48:	int3   
6400ef49:	int3   
6400ef4a:	int3   
6400ef4b:	int3   
6400ef4c:	int3   
6400ef4d:	int3   
6400ef4e:	int3   
6400ef4f:	int3   
6400ef50:	push   ebp
6400ef51:	lea    ebp,[esp-0x128]
6400ef58:	sub    esp,0x128
6400ef5e:	push   0xffffffff
6400ef60:	push   0x640204b1
6400ef65:	mov    eax,fs:0x0
6400ef6b:	push   eax
6400ef6c:	sub    esp,0x90
6400ef72:	mov    eax,ds:0x64029038
6400ef77:	xor    eax,ebp
6400ef79:	mov    DWORD PTR [ebp+0x124],eax
6400ef7f:	push   ebx
6400ef80:	push   esi
6400ef81:	push   edi
6400ef82:	push   eax
6400ef83:	lea    eax,[ebp-0xc]
6400ef86:	mov    fs:0x0,eax
6400ef8c:	mov    esi,DWORD PTR [ebp+0x130]
6400ef92:	xor    ebx,ebx
6400ef94:	mov    DWORD PTR [ebp-0x4],ebx
6400ef97:	mov    DWORD PTR [ebp-0x58],esi
6400ef9a:	mov    DWORD PTR [ebp-0x50],ebx
6400ef9d:	call   DWORD PTR ds:0x64029008
6400efa3:	mov    eax,ds:0x6402a4e0
6400efa8:	mov    edx,DWORD PTR [eax+0xc]
6400efab:	mov    ecx,0x6402a4e0
6400efb0:	call   edx
6400efb2:	add    eax,0x10
6400efb5:	mov    DWORD PTR [esi],eax
6400efb7:	push   0x64022894
6400efbc:	push   0xd
6400efbe:	mov    edi,0x1
6400efc3:	push   0x64022884
6400efc8:	mov    DWORD PTR [ebp-0x4],ebx
6400efcb:	mov    DWORD PTR [ebp-0x50],edi
6400efce:	call   0x64004730
6400efd3:	add    esp,0xc
6400efd6:	push   eax
6400efd7:	mov    ecx,esi
6400efd9:	call   0x64002660
6400efde:	push   0x64022858
6400efe3:	push   0x3
6400efe5:	push   0x64022854
6400efea:	call   0x64004730
6400efef:	add    esp,0xc
6400eff2:	push   eax
6400eff3:	mov    ecx,esi
6400eff5:	call   0x64002660
6400effa:	push   0x64022848
6400efff:	mov    ecx,esi
6400f001:	call   0x64002660
6400f006:	push   0x64022810
6400f00b:	push   0x3
6400f00d:	push   0x6402280c
6400f012:	call   0x64004730
6400f017:	add    esp,0xc
6400f01a:	push   eax
6400f01b:	mov    ecx,esi
6400f01d:	call   0x64002660
6400f022:	push   0x64022804
6400f027:	mov    ecx,esi
6400f029:	call   0x64002660
6400f02e:	mov    eax,ds:0x6402a4e0
6400f033:	mov    edx,DWORD PTR [eax+0xc]
6400f036:	mov    ecx,0x6402a4e0
6400f03b:	call   edx
6400f03d:	add    eax,0x10
6400f040:	mov    DWORD PTR [ebp-0x4c],eax
6400f043:	mov    eax,ds:0x6402a4e0
6400f048:	mov    edx,DWORD PTR [eax+0xc]
6400f04b:	mov    ecx,0x6402a4e0
6400f050:	mov    DWORD PTR [ebp-0x4],edi
6400f053:	call   edx
6400f055:	add    eax,0x10
6400f058:	mov    DWORD PTR [ebp-0x54],eax
6400f05b:	lea    eax,[ebp+0x114]
6400f061:	push   eax
6400f062:	mov    BYTE PTR [ebp-0x4],0x2
6400f066:	call   0x640041e0
6400f06b:	add    esp,0x4
6400f06e:	test   al,al
6400f070:	je     0x6400f110
6400f076:	push   0x640227d0
6400f07b:	push   0x4
6400f07d:	push   0x640227c8
6400f082:	call   0x64004730
6400f087:	add    esp,0xc
6400f08a:	push   eax
6400f08b:	lea    ecx,[ebp-0x10]
6400f08e:	call   0x64004490
6400f093:	mov    eax,DWORD PTR [eax]
6400f095:	mov    ecx,DWORD PTR [eax-0xc]
6400f098:	push   ecx
6400f099:	push   eax
6400f09a:	mov    ecx,esi
6400f09c:	mov    BYTE PTR [ebp-0x4],0x3
6400f0a0:	call   0x640029e0
6400f0a5:	mov    eax,DWORD PTR [ebp-0x10]
6400f0a8:	add    eax,0xfffffff0
6400f0ab:	mov    BYTE PTR [ebp-0x4],0x2
6400f0af:	lea    ecx,[eax+0xc]
6400f0b2:	or     edx,0xffffffff
6400f0b5:	lock xadd DWORD PTR [ecx],edx
6400f0b9:	dec    edx
6400f0ba:	test   edx,edx
6400f0bc:	jg     0x6400f0c8
6400f0be:	mov    ecx,DWORD PTR [eax]
6400f0c0:	mov    edx,DWORD PTR [ecx]
6400f0c2:	push   eax
6400f0c3:	mov    eax,DWORD PTR [edx+0x4]
6400f0c6:	call   eax
6400f0c8:	lea    ecx,[ebp+0x114]
6400f0ce:	push   ecx
6400f0cf:	lea    edx,[ebp-0x10]
6400f0d2:	push   edx
6400f0d3:	call   0x64002eb0
6400f0d8:	add    esp,0x8
6400f0db:	mov    eax,DWORD PTR [eax]
6400f0dd:	mov    ecx,DWORD PTR [eax-0xc]
6400f0e0:	push   ecx
6400f0e1:	push   eax
6400f0e2:	mov    ecx,esi
6400f0e4:	mov    BYTE PTR [ebp-0x4],0x4
6400f0e8:	call   0x640029e0
6400f0ed:	mov    eax,DWORD PTR [ebp-0x10]
6400f0f0:	add    eax,0xfffffff0
6400f0f3:	mov    BYTE PTR [ebp-0x4],0x2
6400f0f7:	lea    ecx,[eax+0xc]
6400f0fa:	or     edx,0xffffffff
6400f0fd:	lock xadd DWORD PTR [ecx],edx
6400f101:	dec    edx
6400f102:	test   edx,edx
6400f104:	jg     0x6400f110
6400f106:	mov    ecx,DWORD PTR [eax]
6400f108:	mov    edx,DWORD PTR [ecx]
6400f10a:	push   eax
6400f10b:	mov    eax,DWORD PTR [edx+0x4]
6400f10e:	call   eax
6400f110:	call   0x6400dfe0
6400f115:	test   al,al
6400f117:	je     0x6400f135
6400f119:	push   0x640227a0
6400f11e:	push   0x6
6400f120:	push   0x64022798
6400f125:	call   0x64004730
6400f12a:	add    esp,0xc
6400f12d:	push   eax
6400f12e:	mov    ecx,esi
6400f130:	call   0x64002660
6400f135:	call   0x6400ee40
6400f13a:	test   al,al
6400f13c:	je     0x6400f15a
6400f13e:	push   0x64022774
6400f143:	push   0x6
6400f145:	push   0x6402276c
6400f14a:	call   0x64004730
6400f14f:	add    esp,0xc
6400f152:	push   eax
6400f153:	mov    ecx,esi
6400f155:	call   0x64002660
6400f15a:	mov    edx,DWORD PTR ds:0x6402a4e0
6400f160:	mov    eax,DWORD PTR [edx+0xc]
6400f163:	mov    ecx,0x6402a4e0
6400f168:	call   eax
6400f16a:	add    eax,0x10
6400f16d:	mov    DWORD PTR [ebp-0x28],eax
6400f170:	mov    edx,DWORD PTR ds:0x6402a4e0
6400f176:	mov    eax,DWORD PTR [edx+0xc]
6400f179:	mov    ecx,0x6402a4e0
6400f17e:	mov    BYTE PTR [ebp-0x4],0x5
6400f182:	call   eax
6400f184:	add    eax,0x10
6400f187:	mov    DWORD PTR [ebp-0x48],eax
6400f18a:	mov    edx,DWORD PTR ds:0x6402a4e0
6400f190:	mov    eax,DWORD PTR [edx+0xc]
6400f193:	mov    ecx,0x6402a4e0
6400f198:	mov    BYTE PTR [ebp-0x4],0x6
6400f19c:	call   eax
6400f19e:	add    eax,0x10
6400f1a1:	mov    DWORD PTR [ebp-0x24],eax
6400f1a4:	lea    ecx,[ebp-0x44]
6400f1a7:	push   ecx
6400f1a8:	lea    edx,[ebp-0x24]
6400f1ab:	push   edx
6400f1ac:	lea    eax,[ebp-0x28]
6400f1af:	push   eax
6400f1b0:	mov    BYTE PTR [ebp-0x4],0x7
6400f1b4:	mov    DWORD PTR [ebp-0x44],ebx
6400f1b7:	mov    DWORD PTR [ebp-0x40],ebx
6400f1ba:	call   0x64009140
6400f1bf:	add    esp,0xc
6400f1c2:	test   al,al
6400f1c4:	je     0x6400f405
6400f1ca:	lea    ecx,[ebp-0x24]
6400f1cd:	push   ecx
6400f1ce:	lea    edx,[ebp-0x14]
6400f1d1:	push   edx
6400f1d2:	call   0x64003150
6400f1d7:	mov    edi,eax
6400f1d9:	push   0x64022744
6400f1de:	push   0x5
6400f1e0:	mov    bl,0x8
6400f1e2:	push   0x6402273c
6400f1e7:	mov    BYTE PTR [ebp-0x4],bl
6400f1ea:	call   0x64004730
6400f1ef:	add    esp,0x14
6400f1f2:	push   eax
6400f1f3:	lea    ecx,[ebp-0x18]
6400f1f6:	call   0x64004490
6400f1fb:	push   edi
6400f1fc:	push   eax
6400f1fd:	lea    eax,[ebp-0x10]
6400f200:	push   eax
6400f201:	mov    BYTE PTR [ebp-0x4],0x9
6400f205:	call   0x6400e2a0
6400f20a:	add    esp,0xc
6400f20d:	mov    eax,DWORD PTR [eax]
6400f20f:	mov    ecx,DWORD PTR [eax-0xc]
6400f212:	push   ecx
6400f213:	push   eax
6400f214:	mov    ecx,esi
6400f216:	mov    BYTE PTR [ebp-0x4],0xa
6400f21a:	call   0x640029e0
6400f21f:	mov    eax,DWORD PTR [ebp-0x10]
6400f222:	add    eax,0xfffffff0
6400f225:	mov    BYTE PTR [ebp-0x4],0x9
6400f229:	lea    ecx,[eax+0xc]
6400f22c:	or     edx,0xffffffff
6400f22f:	lock xadd DWORD PTR [ecx],edx
6400f233:	dec    edx
6400f234:	test   edx,edx
6400f236:	jg     0x6400f242
6400f238:	mov    ecx,DWORD PTR [eax]
6400f23a:	mov    edx,DWORD PTR [ecx]
6400f23c:	push   eax
6400f23d:	mov    eax,DWORD PTR [edx+0x4]
6400f240:	call   eax
6400f242:	mov    eax,DWORD PTR [ebp-0x18]
6400f245:	add    eax,0xfffffff0
6400f248:	mov    BYTE PTR [ebp-0x4],bl
6400f24b:	lea    ecx,[eax+0xc]
6400f24e:	or     edx,0xffffffff
6400f251:	lock xadd DWORD PTR [ecx],edx
6400f255:	dec    edx
6400f256:	test   edx,edx
6400f258:	jg     0x6400f264
6400f25a:	mov    ecx,DWORD PTR [eax]
6400f25c:	mov    edx,DWORD PTR [ecx]
6400f25e:	push   eax
6400f25f:	mov    eax,DWORD PTR [edx+0x4]
6400f262:	call   eax
6400f264:	mov    eax,DWORD PTR [ebp-0x14]
6400f267:	add    eax,0xfffffff0
6400f26a:	mov    BYTE PTR [ebp-0x4],0x7
6400f26e:	lea    ecx,[eax+0xc]
6400f271:	or     edx,0xffffffff
6400f274:	lock xadd DWORD PTR [ecx],edx
6400f278:	dec    edx
6400f279:	test   edx,edx
6400f27b:	jg     0x6400f287
6400f27d:	mov    ecx,DWORD PTR [eax]
6400f27f:	mov    edx,DWORD PTR [ecx]
6400f281:	push   eax
6400f282:	mov    eax,DWORD PTR [edx+0x4]
6400f285:	call   eax
6400f287:	lea    ecx,[ebp-0x28]
6400f28a:	push   ecx
6400f28b:	lea    edx,[ebp-0x10]
6400f28e:	push   edx
6400f28f:	call   0x64003150
6400f294:	mov    edi,eax
6400f296:	push   0x6402270c
6400f29b:	push   0x7
6400f29d:	mov    bl,0xb
6400f29f:	push   0x64022704
6400f2a4:	mov    BYTE PTR [ebp-0x4],bl
6400f2a7:	call   0x64004730
6400f2ac:	add    esp,0x14
6400f2af:	push   eax
6400f2b0:	lea    ecx,[ebp-0x18]
6400f2b3:	call   0x64004490
6400f2b8:	push   edi
6400f2b9:	push   eax
6400f2ba:	lea    eax,[ebp-0x14]
6400f2bd:	push   eax
6400f2be:	mov    BYTE PTR [ebp-0x4],0xc
6400f2c2:	call   0x6400e2a0
6400f2c7:	add    esp,0xc
6400f2ca:	mov    eax,DWORD PTR [eax]
6400f2cc:	mov    ecx,DWORD PTR [eax-0xc]
6400f2cf:	push   ecx
6400f2d0:	push   eax
6400f2d1:	mov    ecx,esi
6400f2d3:	mov    BYTE PTR [ebp-0x4],0xd
6400f2d7:	call   0x640029e0
6400f2dc:	mov    eax,DWORD PTR [ebp-0x14]
6400f2df:	add    eax,0xfffffff0
6400f2e2:	mov    BYTE PTR [ebp-0x4],0xc
6400f2e6:	lea    ecx,[eax+0xc]
6400f2e9:	or     edx,0xffffffff
6400f2ec:	lock xadd DWORD PTR [ecx],edx
6400f2f0:	dec    edx
6400f2f1:	test   edx,edx
6400f2f3:	jg     0x6400f2ff
6400f2f5:	mov    ecx,DWORD PTR [eax]
6400f2f7:	mov    edx,DWORD PTR [ecx]
6400f2f9:	push   eax
6400f2fa:	mov    eax,DWORD PTR [edx+0x4]
6400f2fd:	call   eax
6400f2ff:	mov    eax,DWORD PTR [ebp-0x18]
6400f302:	add    eax,0xfffffff0
6400f305:	mov    BYTE PTR [ebp-0x4],bl
6400f308:	lea    ecx,[eax+0xc]
6400f30b:	or     edx,0xffffffff
6400f30e:	lock xadd DWORD PTR [ecx],edx
6400f312:	dec    edx
6400f313:	test   edx,edx
6400f315:	jg     0x6400f321
6400f317:	mov    ecx,DWORD PTR [eax]
6400f319:	mov    edx,DWORD PTR [ecx]
6400f31b:	push   eax
6400f31c:	mov    eax,DWORD PTR [edx+0x4]
6400f31f:	call   eax
6400f321:	mov    eax,DWORD PTR [ebp-0x10]
6400f324:	add    eax,0xfffffff0
6400f327:	mov    BYTE PTR [ebp-0x4],0x7
6400f32b:	lea    ecx,[eax+0xc]
6400f32e:	or     edx,0xffffffff
6400f331:	lock xadd DWORD PTR [ecx],edx
6400f335:	dec    edx
6400f336:	test   edx,edx
6400f338:	jg     0x6400f344
6400f33a:	mov    ecx,DWORD PTR [eax]
6400f33c:	mov    edx,DWORD PTR [ecx]
6400f33e:	push   eax
6400f33f:	mov    eax,DWORD PTR [edx+0x4]
6400f342:	call   eax
6400f344:	mov    edx,DWORD PTR ds:0x6402a4e0
6400f34a:	mov    eax,DWORD PTR [edx+0xc]
6400f34d:	mov    ecx,0x6402a4e0
6400f352:	call   eax
6400f354:	add    eax,0x10
6400f357:	mov    DWORD PTR [ebp-0x10],eax
6400f35a:	mov    ecx,DWORD PTR [ebp-0x40]
6400f35d:	mov    edx,DWORD PTR [ebp-0x44]
6400f360:	push   ecx
6400f361:	push   edx
6400f362:	push   0x640226cc
6400f367:	push   0xc
6400f369:	push   0x640226b0
6400f36e:	mov    BYTE PTR [ebp-0x4],0xe
6400f372:	call   0x64004930
6400f377:	add    esp,0xc
6400f37a:	push   eax
6400f37b:	lea    eax,[ebp-0x10]
6400f37e:	push   eax
6400f37f:	call   0x64001d40
6400f384:	add    esp,0x10
6400f387:	call   DWORD PTR ds:0x64029008
6400f38d:	mov    edi,DWORD PTR [ebp-0x10]
6400f390:	cmp    DWORD PTR [edi-0x4],0x1
6400f394:	mov    DWORD PTR [ebp-0x14],eax
6400f397:	jle    0x6400f3a8
6400f399:	mov    ecx,DWORD PTR [edi-0xc]
6400f39c:	push   ecx
6400f39d:	lea    ecx,[ebp-0x10]
6400f3a0:	call   0x64001950
6400f3a5:	mov    edi,DWORD PTR [ebp-0x10]
6400f3a8:	test   edi,edi
6400f3aa:	jne    0x6400f3b0
6400f3ac:	xor    eax,eax
6400f3ae:	jmp    0x6400f3dd
6400f3b0:	push   edi
6400f3b1:	call   DWORD PTR ds:0x64022054
6400f3b7:	add    eax,0x1
6400f3ba:	cmp    eax,0x3fffffff
6400f3bf:	jle    0x6400f3c5
6400f3c1:	xor    eax,eax
6400f3c3:	jmp    0x6400f3dd
6400f3c5:	lea    ebx,[eax+eax*1]
6400f3c8:	mov    eax,ebx
6400f3ca:	call   0x640113a0
6400f3cf:	mov    edx,DWORD PTR [ebp-0x14]
6400f3d2:	mov    eax,esp
6400f3d4:	push   edx
6400f3d5:	push   ebx
6400f3d6:	push   edi
6400f3d7:	push   eax
6400f3d8:	call   0x64002b80
6400f3dd:	push   eax
6400f3de:	mov    ecx,esi
6400f3e0:	call   0x64002660
6400f3e5:	add    edi,0xfffffff0
6400f3e8:	mov    BYTE PTR [ebp-0x4],0x7
6400f3ec:	lea    eax,[edi+0xc]
6400f3ef:	or     ecx,0xffffffff
6400f3f2:	lock xadd DWORD PTR [eax],ecx
6400f3f6:	dec    ecx
6400f3f7:	test   ecx,ecx
6400f3f9:	jg     0x6400f405
6400f3fb:	mov    ecx,DWORD PTR [edi]
6400f3fd:	mov    edx,DWORD PTR [ecx]
6400f3ff:	mov    eax,DWORD PTR [edx+0x4]
6400f402:	push   edi
6400f403:	call   eax
6400f405:	xor    edi,edi
6400f407:	mov    DWORD PTR [ebp-0x38],edi
6400f40a:	mov    DWORD PTR [ebp-0x34],edi
6400f40d:	mov    DWORD PTR [ebp-0x30],edi
6400f410:	lea    ecx,[ebp-0x3c]
6400f413:	push   ecx
6400f414:	mov    BYTE PTR [ebp-0x4],0xf
6400f418:	call   0x640092f0
6400f41d:	add    esp,0x4
6400f420:	mov    DWORD PTR [ebp-0x10],edi
6400f423:	xor    ebx,ebx
6400f425:	mov    eax,DWORD PTR [ebp-0x38]
6400f428:	cmp    eax,edi
6400f42a:	jne    0x6400f430
6400f42c:	xor    eax,eax
6400f42e:	jmp    0x6400f448
6400f430:	mov    ecx,DWORD PTR [ebp-0x34]
6400f433:	sub    ecx,eax
6400f435:	mov    eax,0x92492493
6400f43a:	imul   ecx
6400f43c:	add    edx,ecx
6400f43e:	sar    edx,0x4
6400f441:	mov    eax,edx
6400f443:	shr    eax,0x1f
6400f446:	add    eax,edx
6400f448:	cmp    DWORD PTR [ebp-0x10],eax
6400f44b:	je     0x6400f4f6
6400f451:	push   0x6402268c
6400f456:	push   0x5
6400f458:	push   0x64022684
6400f45d:	call   0x64004730
6400f462:	add    esp,0xc
6400f465:	push   eax
6400f466:	lea    ecx,[ebp-0x14]
6400f469:	call   0x64004490
6400f46e:	mov    eax,DWORD PTR [eax]
6400f470:	mov    ecx,DWORD PTR [eax-0xc]
6400f473:	push   ecx
6400f474:	push   eax
6400f475:	mov    ecx,esi
6400f477:	mov    BYTE PTR [ebp-0x4],0x10
6400f47b:	call   0x640029e0
6400f480:	mov    eax,DWORD PTR [ebp-0x14]
6400f483:	add    eax,0xfffffff0
6400f486:	mov    BYTE PTR [ebp-0x4],0xf
6400f48a:	lea    edx,[eax+0xc]
6400f48d:	or     ecx,0xffffffff
6400f490:	lock xadd DWORD PTR [edx],ecx
6400f494:	dec    ecx
6400f495:	test   ecx,ecx
6400f497:	jg     0x6400f4a3
6400f499:	mov    ecx,DWORD PTR [eax]
6400f49b:	mov    edx,DWORD PTR [ecx]
6400f49d:	push   eax
6400f49e:	mov    eax,DWORD PTR [edx+0x4]
6400f4a1:	call   eax
6400f4a3:	mov    edi,DWORD PTR [ebp-0x38]
6400f4a6:	test   edi,edi
6400f4a8:	je     0x6400f4c7
6400f4aa:	mov    ecx,DWORD PTR [ebp-0x34]
6400f4ad:	sub    ecx,edi
6400f4af:	mov    eax,0x92492493
6400f4b4:	imul   ecx
6400f4b6:	add    edx,ecx
6400f4b8:	sar    edx,0x4
6400f4bb:	mov    eax,edx
6400f4bd:	shr    eax,0x1f
6400f4c0:	add    eax,edx
6400f4c2:	cmp    DWORD PTR [ebp-0x10],eax
6400f4c5:	jb     0x6400f4cf
6400f4c7:	call   0x6401077a
6400f4cc:	mov    edi,DWORD PTR [ebp-0x38]
6400f4cf:	cmp    DWORD PTR [ebx+edi*1+0x18],0x10
6400f4d4:	jb     0x6400f4dc
6400f4d6:	mov    edi,DWORD PTR [ebx+edi*1+0x4]
6400f4da:	jmp    0x6400f4e0
6400f4dc:	lea    edi,[ebx+edi*1+0x4]
6400f4e0:	push   edi
6400f4e1:	mov    ecx,esi
6400f4e3:	call   0x64002660
6400f4e8:	add    DWORD PTR [ebp-0x10],0x1
6400f4ec:	add    ebx,0x1c
6400f4ef:	xor    edi,edi
6400f4f1:	jmp    0x6400f425
6400f4f6:	call   DWORD PTR ds:0x64029008
6400f4fc:	push   0x110
6400f501:	lea    ecx,[ebp+0x4]
6400f504:	push   edi
6400f505:	push   ecx
6400f506:	mov    DWORD PTR [ebp-0x14],eax
6400f509:	call   0x64011320
6400f50e:	mov    edx,DWORD PTR ds:0x6402a4e0
6400f514:	mov    eax,DWORD PTR [edx+0xc]
6400f517:	add    esp,0xc
6400f51a:	mov    ecx,0x6402a4e0
6400f51f:	mov    DWORD PTR [ebp+0x0],0x114
6400f526:	call   eax
6400f528:	add    eax,0x10
6400f52b:	mov    DWORD PTR [ebp-0x10],eax
6400f52e:	lea    ecx,[ebp+0x0]
6400f531:	push   ecx
6400f532:	mov    BYTE PTR [ebp-0x4],0x11
6400f536:	call   DWORD PTR ds:0x64022068
6400f53c:	test   eax,eax
6400f53e:	lea    ecx,[ebp-0x10]
6400f541:	je     0x6400f55b
6400f543:	mov    edx,DWORD PTR [ebp+0x8]
6400f546:	mov    eax,DWORD PTR [ebp+0x4]
6400f549:	push   edx
6400f54a:	push   eax
6400f54b:	push   0x6402265c
6400f550:	push   ecx
6400f551:	call   0x64001d40
6400f556:	add    esp,0x10
6400f559:	jmp    0x6400f567
6400f55b:	push   0xc
6400f55d:	push   0x64022640
6400f562:	call   0x64002ae0
6400f567:	xor    eax,eax
6400f569:	lea    edx,[ebp-0x8c]
6400f56f:	push   edx
6400f570:	mov    DWORD PTR [ebp-0x8c],edi
6400f576:	mov    DWORD PTR [ebp-0x88],eax
6400f57c:	mov    DWORD PTR [ebp-0x84],eax
6400f582:	mov    DWORD PTR [ebp-0x80],eax
6400f585:	mov    DWORD PTR [ebp-0x7c],eax
6400f588:	mov    DWORD PTR [ebp-0x78],eax
6400f58b:	mov    DWORD PTR [ebp-0x74],eax
6400f58e:	mov    DWORD PTR [ebp-0x70],eax
6400f591:	mov    DWORD PTR [ebp-0x6c],eax
6400f594:	call   DWORD PTR ds:0x64022064
6400f59a:	movzx  eax,WORD PTR [ebp-0x8c]
6400f5a1:	cmp    eax,edi
6400f5a3:	je     0x6400f5b3
6400f5a5:	cmp    eax,0x9
6400f5a8:	jne    0x6400f5c2
6400f5aa:	push   0x4
6400f5ac:	push   0x64022634
6400f5b1:	jmp    0x6400f5ba
6400f5b3:	push   0x4
6400f5b5:	push   0x64022628
6400f5ba:	lea    ecx,[ebp-0x10]
6400f5bd:	call   0x640029e0
6400f5c2:	mov    ebx,DWORD PTR [ebp-0x10]
6400f5c5:	cmp    ebx,edi
6400f5c7:	jne    0x6400f5cd
6400f5c9:	xor    eax,eax
6400f5cb:	jmp    0x6400f616
6400f5cd:	push   ebx
6400f5ce:	call   DWORD PTR ds:0x64022054
6400f5d4:	add    eax,0x1
6400f5d7:	cmp    eax,0x3fffffff
6400f5dc:	jg     0x6400f611
6400f5de:	lea    ebx,[eax+eax*1]
6400f5e1:	mov    eax,ebx
6400f5e3:	call   0x640113a0
6400f5e8:	mov    edi,esp
6400f5ea:	test   edi,edi
6400f5ec:	je     0x6400f611
6400f5ee:	mov    eax,DWORD PTR [ebp-0x10]
6400f5f1:	mov    ecx,DWORD PTR [ebp-0x14]
6400f5f4:	push   0x0
6400f5f6:	push   0x0
6400f5f8:	push   ebx
6400f5f9:	push   edi
6400f5fa:	push   0xffffffff
6400f5fc:	push   eax
6400f5fd:	push   0x0
6400f5ff:	push   ecx
6400f600:	mov    BYTE PTR [edi],0x0
6400f603:	call   DWORD PTR ds:0x64022024
6400f609:	neg    eax
6400f60b:	sbb    eax,eax
6400f60d:	and    eax,edi
6400f60f:	jmp    0x6400f613
6400f611:	xor    eax,eax
6400f613:	mov    ebx,DWORD PTR [ebp-0x10]
6400f616:	push   eax
6400f617:	mov    ecx,esi
6400f619:	call   0x64002660
6400f61e:	lea    eax,[ebx-0x10]
6400f621:	mov    BYTE PTR [ebp-0x4],0xf
6400f625:	lea    edx,[eax+0xc]
6400f628:	or     ecx,0xffffffff
6400f62b:	lock xadd DWORD PTR [edx],ecx
6400f62f:	dec    ecx
6400f630:	test   ecx,ecx
6400f632:	jg     0x6400f63e
6400f634:	mov    ecx,DWORD PTR [eax]
6400f636:	mov    edx,DWORD PTR [ecx]
6400f638:	push   eax
6400f639:	mov    eax,DWORD PTR [edx+0x4]
6400f63c:	call   eax
6400f63e:	lea    ecx,[ebp-0x20]
6400f641:	push   ecx
6400f642:	call   0x640098b0
6400f647:	push   eax
6400f648:	lea    edx,[ebp-0x10]
6400f64b:	push   edx
6400f64c:	mov    BYTE PTR [ebp-0x4],0x12
6400f650:	call   0x64003150
6400f655:	mov    edi,eax
6400f657:	push   0x640225ec
6400f65c:	push   0x7
6400f65e:	push   0x640225e4
6400f663:	mov    BYTE PTR [ebp-0x4],0x13
6400f667:	call   0x64004730
6400f66c:	add    esp,0x18
6400f66f:	push   eax
6400f670:	lea    ecx,[ebp-0x18]
6400f673:	call   0x64004490
6400f678:	push   edi
6400f679:	push   eax
6400f67a:	lea    eax,[ebp-0x14]
6400f67d:	mov    bl,0x14
6400f67f:	push   eax
6400f680:	mov    BYTE PTR [ebp-0x4],bl
6400f683:	call   0x6400e2a0
6400f688:	add    esp,0xc
6400f68b:	mov    eax,DWORD PTR [eax]
6400f68d:	mov    ecx,DWORD PTR [eax-0xc]
6400f690:	push   ecx
6400f691:	push   eax
6400f692:	mov    ecx,esi
6400f694:	mov    BYTE PTR [ebp-0x4],0x15
6400f698:	call   0x640029e0
6400f69d:	mov    eax,DWORD PTR [ebp-0x14]
6400f6a0:	add    eax,0xfffffff0
6400f6a3:	mov    BYTE PTR [ebp-0x4],bl
6400f6a6:	lea    ecx,[eax+0xc]
6400f6a9:	or     edx,0xffffffff
6400f6ac:	lock xadd DWORD PTR [ecx],edx
6400f6b0:	dec    edx
6400f6b1:	test   edx,edx
6400f6b3:	jg     0x6400f6bf
6400f6b5:	mov    ecx,DWORD PTR [eax]
6400f6b7:	mov    edx,DWORD PTR [ecx]
6400f6b9:	push   eax
6400f6ba:	mov    eax,DWORD PTR [edx+0x4]
6400f6bd:	call   eax
6400f6bf:	mov    eax,DWORD PTR [ebp-0x18]
6400f6c2:	add    eax,0xfffffff0
6400f6c5:	mov    BYTE PTR [ebp-0x4],0x13
6400f6c9:	lea    ecx,[eax+0xc]
6400f6cc:	or     edx,0xffffffff
6400f6cf:	lock xadd DWORD PTR [ecx],edx
6400f6d3:	dec    edx
6400f6d4:	test   edx,edx
6400f6d6:	jg     0x6400f6e2
6400f6d8:	mov    ecx,DWORD PTR [eax]
6400f6da:	mov    edx,DWORD PTR [ecx]
6400f6dc:	push   eax
6400f6dd:	mov    eax,DWORD PTR [edx+0x4]
6400f6e0:	call   eax
6400f6e2:	mov    eax,DWORD PTR [ebp-0x10]
6400f6e5:	add    eax,0xfffffff0
6400f6e8:	mov    BYTE PTR [ebp-0x4],0x12
6400f6ec:	lea    ecx,[eax+0xc]
6400f6ef:	or     edx,0xffffffff
6400f6f2:	lock xadd DWORD PTR [ecx],edx
6400f6f6:	dec    edx
6400f6f7:	test   edx,edx
6400f6f9:	jg     0x6400f705
6400f6fb:	mov    ecx,DWORD PTR [eax]
6400f6fd:	mov    edx,DWORD PTR [ecx]
6400f6ff:	push   eax
6400f700:	mov    eax,DWORD PTR [edx+0x4]
6400f703:	call   eax
6400f705:	mov    eax,DWORD PTR [ebp-0x20]
6400f708:	add    eax,0xfffffff0
6400f70b:	mov    BYTE PTR [ebp-0x4],0xf
6400f70f:	lea    ecx,[eax+0xc]
6400f712:	or     edx,0xffffffff
6400f715:	lock xadd DWORD PTR [ecx],edx
6400f719:	dec    edx
6400f71a:	test   edx,edx
6400f71c:	jg     0x6400f728
6400f71e:	mov    ecx,DWORD PTR [eax]
6400f720:	mov    edx,DWORD PTR [ecx]
6400f722:	push   eax
6400f723:	mov    eax,DWORD PTR [edx+0x4]
6400f726:	call   eax
6400f728:	call   DWORD PTR ds:0x64029008
6400f72e:	mov    edx,DWORD PTR ds:0x6402a4e0
6400f734:	mov    DWORD PTR [ebp-0x14],eax
6400f737:	mov    eax,DWORD PTR [edx+0xc]
6400f73a:	mov    ecx,0x6402a4e0
6400f73f:	call   eax
6400f741:	add    eax,0x10
6400f744:	mov    DWORD PTR [ebp-0x10],eax
6400f747:	mov    BYTE PTR [ebp-0x4],0x16
6400f74b:	call   0x64003810
6400f750:	push   eax
6400f751:	push   0x640225b0
6400f756:	push   0x4
6400f758:	push   0x640225a4
6400f75d:	call   0x64004930
6400f762:	add    esp,0xc
6400f765:	push   eax
6400f766:	lea    ecx,[ebp-0x10]
6400f769:	push   ecx
6400f76a:	call   0x64001d40
6400f76f:	mov    ebx,DWORD PTR [ebp-0x10]
6400f772:	mov    eax,DWORD PTR [ebx-0x8]
6400f775:	mov    ecx,0x1
6400f77a:	sub    ecx,DWORD PTR [ebx-0x4]
6400f77d:	add    eax,0x1
6400f780:	add    esp,0xc
6400f783:	or     eax,ecx
6400f785:	jge    0x6400f794
6400f787:	push   0xffffffff
6400f789:	lea    ecx,[ebp-0x10]
6400f78c:	call   0x64001e00
6400f791:	mov    ebx,DWORD PTR [ebp-0x10]
6400f794:	test   ebx,ebx
6400f796:	je     0x6400f7dc
6400f798:	push   ebx
6400f799:	call   DWORD PTR ds:0x64022054
6400f79f:	add    eax,0x1
6400f7a2:	cmp    eax,0x3fffffff
6400f7a7:	jg     0x6400f7dc
6400f7a9:	add    eax,eax
6400f7ab:	mov    DWORD PTR [ebp-0x20],eax
6400f7ae:	call   0x640113a0
6400f7b3:	mov    edi,esp
6400f7b5:	test   edi,edi
6400f7b7:	je     0x6400f7dc
6400f7b9:	mov    edx,DWORD PTR [ebp-0x20]
6400f7bc:	mov    eax,DWORD PTR [ebp-0x14]
6400f7bf:	push   0x0
6400f7c1:	push   0x0
6400f7c3:	push   edx
6400f7c4:	push   edi
6400f7c5:	push   0xffffffff
6400f7c7:	push   ebx
6400f7c8:	push   0x0
6400f7ca:	push   eax
6400f7cb:	mov    BYTE PTR [edi],0x0
6400f7ce:	call   DWORD PTR ds:0x64022024
6400f7d4:	neg    eax
6400f7d6:	sbb    eax,eax
6400f7d8:	and    eax,edi
6400f7da:	jmp    0x6400f7de
6400f7dc:	xor    eax,eax
6400f7de:	push   eax
6400f7df:	lea    ecx,[ebp-0x1c]
6400f7e2:	call   0x64004490
6400f7e7:	mov    edi,eax
6400f7e9:	push   0x64022578
6400f7ee:	push   0x5
6400f7f0:	push   0x64022570
6400f7f5:	mov    BYTE PTR [ebp-0x4],0x17
6400f7f9:	call   0x64004730
6400f7fe:	add    esp,0xc
6400f801:	push   eax
6400f802:	lea    ecx,[ebp-0x2c]
6400f805:	call   0x64004490
6400f80a:	push   edi
6400f80b:	push   eax
6400f80c:	lea    ecx,[ebp-0x18]
6400f80f:	push   ecx
6400f810:	mov    BYTE PTR [ebp-0x4],0x18
6400f814:	call   0x6400e2a0
6400f819:	add    esp,0xc
6400f81c:	mov    eax,DWORD PTR [eax]
6400f81e:	mov    ecx,DWORD PTR [eax-0xc]
6400f821:	push   ecx
6400f822:	push   eax
6400f823:	mov    ecx,esi
6400f825:	mov    BYTE PTR [ebp-0x4],0x19
6400f829:	call   0x640029e0
6400f82e:	mov    eax,DWORD PTR [ebp-0x18]
6400f831:	add    eax,0xfffffff0
6400f834:	mov    BYTE PTR [ebp-0x4],0x18
6400f838:	lea    edx,[eax+0xc]
6400f83b:	or     ecx,0xffffffff
6400f83e:	lock xadd DWORD PTR [edx],ecx
6400f842:	dec    ecx
6400f843:	test   ecx,ecx
6400f845:	jg     0x6400f851
6400f847:	mov    ecx,DWORD PTR [eax]
6400f849:	mov    edx,DWORD PTR [ecx]
6400f84b:	push   eax
6400f84c:	mov    eax,DWORD PTR [edx+0x4]
6400f84f:	call   eax
6400f851:	mov    eax,DWORD PTR [ebp-0x2c]
6400f854:	add    eax,0xfffffff0
6400f857:	mov    BYTE PTR [ebp-0x4],0x17
6400f85b:	lea    ecx,[eax+0xc]
6400f85e:	or     edx,0xffffffff
6400f861:	lock xadd DWORD PTR [ecx],edx
6400f865:	dec    edx
6400f866:	test   edx,edx
6400f868:	jg     0x6400f874
6400f86a:	mov    ecx,DWORD PTR [eax]
6400f86c:	mov    edx,DWORD PTR [ecx]
6400f86e:	push   eax
6400f86f:	mov    eax,DWORD PTR [edx+0x4]
6400f872:	call   eax
6400f874:	mov    eax,DWORD PTR [ebp-0x1c]
6400f877:	add    eax,0xfffffff0
6400f87a:	mov    BYTE PTR [ebp-0x4],0x16
6400f87e:	lea    ecx,[eax+0xc]
6400f881:	or     edx,0xffffffff
6400f884:	lock xadd DWORD PTR [ecx],edx
6400f888:	dec    edx
6400f889:	test   edx,edx
6400f88b:	jg     0x6400f897
6400f88d:	mov    ecx,DWORD PTR [eax]
6400f88f:	mov    edx,DWORD PTR [ecx]
6400f891:	push   eax
6400f892:	mov    eax,DWORD PTR [edx+0x4]
6400f895:	call   eax
6400f897:	add    ebx,0xfffffff0
6400f89a:	mov    BYTE PTR [ebp-0x4],0xf
6400f89e:	lea    ecx,[ebx+0xc]
6400f8a1:	or     edx,0xffffffff
6400f8a4:	lock xadd DWORD PTR [ecx],edx
6400f8a8:	dec    edx
6400f8a9:	test   edx,edx
6400f8ab:	jg     0x6400f8b7
6400f8ad:	mov    ecx,DWORD PTR [ebx]
6400f8af:	mov    eax,DWORD PTR [ecx]
6400f8b1:	mov    edx,DWORD PTR [eax+0x4]
6400f8b4:	push   ebx
6400f8b5:	call   edx
6400f8b7:	lea    eax,[ebp-0x9c]
6400f8bd:	push   eax
6400f8be:	call   0x640039f0
6400f8c3:	mov    ecx,DWORD PTR [eax]
6400f8c5:	mov    DWORD PTR [ebp-0x68],ecx
6400f8c8:	mov    edx,DWORD PTR [eax+0x4]
6400f8cb:	mov    DWORD PTR [ebp-0x64],edx
6400f8ce:	mov    ecx,DWORD PTR [eax+0x8]
6400f8d1:	push   0x6402254c
6400f8d6:	mov    DWORD PTR [ebp-0x60],ecx
6400f8d9:	mov    edx,DWORD PTR [eax+0xc]
6400f8dc:	push   0x5
6400f8de:	push   0x64022544
6400f8e3:	mov    DWORD PTR [ebp-0x5c],edx
6400f8e6:	call   0x64004730
6400f8eb:	add    esp,0x10
6400f8ee:	push   eax
6400f8ef:	lea    ecx,[ebp-0x10]
6400f8f2:	call   0x64004490
6400f8f7:	lea    eax,[ebp-0x68]
6400f8fa:	push   eax
6400f8fb:	lea    ecx,[ebp-0x2c]
6400f8fe:	push   ecx
6400f8ff:	mov    BYTE PTR [ebp-0x4],0x1a
6400f903:	call   0x64002eb0
6400f908:	push   eax
6400f909:	lea    edx,[ebp-0x10]
6400f90c:	push   edx
6400f90d:	lea    eax,[ebp-0x1c]
6400f910:	mov    bl,0x1b
6400f912:	push   eax
6400f913:	mov    BYTE PTR [ebp-0x4],bl
6400f916:	call   0x6400e2a0
6400f91b:	add    esp,0x14
6400f91e:	mov    eax,DWORD PTR [eax]
6400f920:	mov    ecx,DWORD PTR [eax-0xc]
6400f923:	push   ecx
6400f924:	push   eax
6400f925:	mov    ecx,esi
6400f927:	mov    BYTE PTR [ebp-0x4],0x1c
6400f92b:	call   0x640029e0
6400f930:	mov    eax,DWORD PTR [ebp-0x1c]
6400f933:	add    eax,0xfffffff0
6400f936:	mov    BYTE PTR [ebp-0x4],bl
6400f939:	lea    ecx,[eax+0xc]
6400f93c:	or     edx,0xffffffff
6400f93f:	lock xadd DWORD PTR [ecx],edx
6400f943:	dec    edx
6400f944:	test   edx,edx
6400f946:	jg     0x6400f952
6400f948:	mov    ecx,DWORD PTR [eax]
6400f94a:	mov    edx,DWORD PTR [ecx]
6400f94c:	push   eax
6400f94d:	mov    eax,DWORD PTR [edx+0x4]
6400f950:	call   eax
6400f952:	mov    eax,DWORD PTR [ebp-0x2c]
6400f955:	add    eax,0xfffffff0
6400f958:	mov    BYTE PTR [ebp-0x4],0x1a
6400f95c:	lea    ecx,[eax+0xc]
6400f95f:	or     edx,0xffffffff
6400f962:	lock xadd DWORD PTR [ecx],edx
6400f966:	dec    edx
6400f967:	test   edx,edx
6400f969:	jg     0x6400f975
6400f96b:	mov    ecx,DWORD PTR [eax]
6400f96d:	mov    edx,DWORD PTR [ecx]
6400f96f:	push   eax
6400f970:	mov    eax,DWORD PTR [edx+0x4]
6400f973:	call   eax
6400f975:	mov    eax,DWORD PTR [ebp-0x10]
6400f978:	add    eax,0xfffffff0
6400f97b:	mov    BYTE PTR [ebp-0x4],0xf
6400f97f:	lea    ecx,[eax+0xc]
6400f982:	or     edx,0xffffffff
6400f985:	lock xadd DWORD PTR [ecx],edx
6400f989:	dec    edx
6400f98a:	test   edx,edx
6400f98c:	jg     0x6400f998
6400f98e:	mov    ecx,DWORD PTR [eax]
6400f990:	mov    edx,DWORD PTR [ecx]
6400f992:	push   eax
6400f993:	mov    eax,DWORD PTR [edx+0x4]
6400f996:	call   eax
6400f998:	lea    ecx,[ebp-0x1c]
6400f99b:	push   ecx
6400f99c:	call   0x64003fb0
6400f9a1:	add    esp,0x4
6400f9a4:	mov    eax,DWORD PTR [eax]
6400f9a6:	mov    ecx,DWORD PTR [eax-0xc]
6400f9a9:	push   ecx
6400f9aa:	push   eax
6400f9ab:	mov    ecx,esi
6400f9ad:	mov    BYTE PTR [ebp-0x4],0x1d
6400f9b1:	call   0x640029e0
6400f9b6:	mov    eax,DWORD PTR [ebp-0x1c]
6400f9b9:	add    eax,0xfffffff0
6400f9bc:	mov    BYTE PTR [ebp-0x4],0xf
6400f9c0:	lea    edx,[eax+0xc]
6400f9c3:	or     ecx,0xffffffff
6400f9c6:	lock xadd DWORD PTR [edx],ecx
6400f9ca:	dec    ecx
6400f9cb:	test   ecx,ecx
6400f9cd:	jg     0x6400f9d9
6400f9cf:	mov    ecx,DWORD PTR [eax]
6400f9d1:	mov    edx,DWORD PTR [ecx]
6400f9d3:	push   eax
6400f9d4:	mov    eax,DWORD PTR [edx+0x4]
6400f9d7:	call   eax
6400f9d9:	mov    eax,DWORD PTR [ebp-0x38]
6400f9dc:	xor    edi,edi
6400f9de:	cmp    eax,edi
6400f9e0:	je     0x6400fa00
6400f9e2:	mov    ecx,DWORD PTR [ebp-0x58]
6400f9e5:	push   ecx
6400f9e6:	mov    ecx,DWORD PTR [ebp-0x34]
6400f9e9:	lea    edx,[ebp-0x3c]
6400f9ec:	push   edx
6400f9ed:	push   ecx
6400f9ee:	push   eax
6400f9ef:	call   0x6400a190
6400f9f4:	mov    edx,DWORD PTR [ebp-0x38]
6400f9f7:	push   edx
6400f9f8:	call   0x64010422
6400f9fd:	add    esp,0x14
6400fa00:	mov    eax,DWORD PTR [ebp-0x24]
6400fa03:	add    eax,0xfffffff0
6400fa06:	mov    DWORD PTR [ebp-0x38],edi
6400fa09:	mov    DWORD PTR [ebp-0x34],edi
6400fa0c:	mov    DWORD PTR [ebp-0x30],edi
6400fa0f:	mov    BYTE PTR [ebp-0x4],0x6
6400fa13:	lea    ecx,[eax+0xc]
6400fa16:	or     edx,0xffffffff
6400fa19:	lock xadd DWORD PTR [ecx],edx
6400fa1d:	dec    edx
6400fa1e:	test   edx,edx
6400fa20:	jg     0x6400fa2c
6400fa22:	mov    ecx,DWORD PTR [eax]
6400fa24:	mov    edx,DWORD PTR [ecx]
6400fa26:	push   eax
6400fa27:	mov    eax,DWORD PTR [edx+0x4]
6400fa2a:	call   eax
6400fa2c:	mov    eax,DWORD PTR [ebp-0x48]
6400fa2f:	add    eax,0xfffffff0
6400fa32:	mov    BYTE PTR [ebp-0x4],0x5
6400fa36:	lea    ecx,[eax+0xc]
6400fa39:	or     edx,0xffffffff
6400fa3c:	lock xadd DWORD PTR [ecx],edx
6400fa40:	dec    edx
6400fa41:	test   edx,edx
6400fa43:	jg     0x6400fa4f
6400fa45:	mov    ecx,DWORD PTR [eax]
6400fa47:	mov    edx,DWORD PTR [ecx]
6400fa49:	push   eax
6400fa4a:	mov    eax,DWORD PTR [edx+0x4]
6400fa4d:	call   eax
6400fa4f:	mov    eax,DWORD PTR [ebp-0x28]
6400fa52:	add    eax,0xfffffff0
6400fa55:	mov    BYTE PTR [ebp-0x4],0x2
6400fa59:	lea    ecx,[eax+0xc]
6400fa5c:	or     edx,0xffffffff
6400fa5f:	lock xadd DWORD PTR [ecx],edx
6400fa63:	dec    edx
6400fa64:	test   edx,edx
6400fa66:	jg     0x6400fa72
6400fa68:	mov    ecx,DWORD PTR [eax]
6400fa6a:	mov    edx,DWORD PTR [ecx]
6400fa6c:	push   eax
6400fa6d:	mov    eax,DWORD PTR [edx+0x4]
6400fa70:	call   eax
6400fa72:	mov    eax,DWORD PTR [ebp-0x54]
6400fa75:	add    eax,0xfffffff0
6400fa78:	mov    BYTE PTR [ebp-0x4],0x1
6400fa7c:	lea    ecx,[eax+0xc]
6400fa7f:	or     edx,0xffffffff
6400fa82:	lock xadd DWORD PTR [ecx],edx
6400fa86:	dec    edx
6400fa87:	test   edx,edx
6400fa89:	jg     0x6400fa95
6400fa8b:	mov    ecx,DWORD PTR [eax]
6400fa8d:	mov    edx,DWORD PTR [ecx]
6400fa8f:	push   eax
6400fa90:	mov    eax,DWORD PTR [edx+0x4]
6400fa93:	call   eax
6400fa95:	mov    eax,DWORD PTR [ebp-0x4c]
6400fa98:	add    eax,0xfffffff0
6400fa9b:	mov    BYTE PTR [ebp-0x4],0x0
6400fa9f:	lea    ecx,[eax+0xc]
6400faa2:	or     edx,0xffffffff
6400faa5:	lock xadd DWORD PTR [ecx],edx
6400faa9:	dec    edx
6400faaa:	test   edx,edx
6400faac:	jg     0x6400fab8
6400faae:	mov    ecx,DWORD PTR [eax]
6400fab0:	mov    edx,DWORD PTR [ecx]
6400fab2:	push   eax
6400fab3:	mov    eax,DWORD PTR [edx+0x4]
6400fab6:	call   eax
6400fab8:	mov    eax,esi
6400faba:	lea    esp,[ebp-0xac]
6400fac0:	mov    ecx,DWORD PTR [ebp-0xc]
6400fac3:	mov    DWORD PTR fs:0x0,ecx
6400faca:	pop    ecx
6400facb:	pop    edi
6400facc:	pop    esi
6400facd:	pop    ebx
6400face:	mov    ecx,DWORD PTR [ebp+0x124]
6400fad4:	xor    ecx,ebp
6400fad6:	call   0x64010c1e
6400fadb:	add    ebp,0x128
6400fae1:	mov    esp,ebp
6400fae3:	pop    ebp
6400fae4:	ret    
6400fae5:	int3   
6400fae6:	int3   
6400fae7:	int3   
6400fae8:	int3   
6400fae9:	int3   
6400faea:	int3   
6400faeb:	int3   
6400faec:	int3   
6400faed:	int3   
6400faee:	int3   
6400faef:	int3   
6400faf0:	push   ebp
6400faf1:	mov    ebp,esp
6400faf3:	push   0xffffffff
6400faf5:	push   0x640204f8
6400fafa:	mov    eax,fs:0x0
6400fb00:	push   eax
6400fb01:	sub    esp,0x50
6400fb04:	mov    eax,ds:0x64029038
6400fb09:	xor    eax,ebp
6400fb0b:	mov    DWORD PTR [ebp-0x10],eax
6400fb0e:	push   ebx
6400fb0f:	push   esi
6400fb10:	push   edi
6400fb11:	push   eax
6400fb12:	lea    eax,[ebp-0xc]
6400fb15:	mov    fs:0x0,eax
6400fb1b:	call   DWORD PTR ds:0x64029008
6400fb21:	push   0xea60
6400fb26:	mov    DWORD PTR [ebp-0x3c],eax
6400fb29:	call   0x6400e0b0
6400fb2e:	add    esp,0x4
6400fb31:	mov    DWORD PTR [ebp-0x34],0x0
6400fb38:	lea    eax,[ebp-0x30]
6400fb3b:	push   eax
6400fb3c:	call   0x6400ef50
6400fb41:	add    esp,0x4
6400fb44:	xor    esi,esi
6400fb46:	mov    DWORD PTR [ebp-0x4],esi
6400fb49:	mov    DWORD PTR [ebp-0x14],0xf
6400fb50:	mov    DWORD PTR [ebp-0x18],esi
6400fb53:	mov    BYTE PTR [ebp-0x28],0x0
6400fb57:	mov    eax,DWORD PTR [ebp-0x30]
6400fb5a:	cmp    eax,esi
6400fb5c:	mov    BYTE PTR [ebp-0x4],0x1
6400fb60:	mov    ebx,eax
6400fb62:	jne    0x6400fb68
6400fb64:	xor    ecx,ecx
6400fb66:	jmp    0x6400fbaf
6400fb68:	push   eax
6400fb69:	call   DWORD PTR ds:0x64022054
6400fb6f:	add    eax,0x1
6400fb72:	cmp    eax,0x3fffffff
6400fb77:	jg     0x6400fba9
6400fb79:	lea    edi,[eax+eax*1]
6400fb7c:	mov    eax,edi
6400fb7e:	call   0x640113a0
6400fb83:	mov    esi,esp
6400fb85:	test   esi,esi
6400fb87:	je     0x6400fba9
6400fb89:	mov    ecx,DWORD PTR [ebp-0x3c]
6400fb8c:	push   0x0
6400fb8e:	push   0x0
6400fb90:	push   edi
6400fb91:	push   esi
6400fb92:	push   0xffffffff
6400fb94:	push   ebx
6400fb95:	push   0x0
6400fb97:	push   ecx
6400fb98:	mov    BYTE PTR [esi],0x0
6400fb9b:	call   DWORD PTR ds:0x64022024
6400fba1:	neg    eax
6400fba3:	sbb    eax,eax
6400fba5:	and    eax,esi
6400fba7:	jmp    0x6400fbab
6400fba9:	xor    eax,eax
6400fbab:	mov    ecx,eax
6400fbad:	xor    esi,esi
6400fbaf:	mov    eax,ecx
6400fbb1:	mov    DWORD PTR [ebp-0x48],esi
6400fbb4:	mov    DWORD PTR [ebp-0x44],0xf
6400fbbb:	mov    BYTE PTR [ebp-0x58],0x0
6400fbbf:	lea    esi,[eax+0x1]
6400fbc2:	mov    dl,BYTE PTR [eax]
6400fbc4:	add    eax,0x1
6400fbc7:	test   dl,dl
6400fbc9:	jne    0x6400fbc2
6400fbcb:	sub    eax,esi
6400fbcd:	push   eax
6400fbce:	push   ecx
6400fbcf:	lea    ecx,[ebp-0x5c]
6400fbd2:	call   0x64001880
6400fbd7:	lea    edx,[ebp-0x2c]
6400fbda:	push   edx
6400fbdb:	lea    eax,[ebp-0x5c]
6400fbde:	push   eax
6400fbdf:	mov    BYTE PTR [ebp-0x4],0x2
6400fbe3:	call   0x6400eca0
6400fbe8:	mov    edi,0x10
6400fbed:	add    esp,0x8
6400fbf0:	cmp    DWORD PTR [ebp-0x44],edi
6400fbf3:	mov    bl,al
6400fbf5:	mov    BYTE PTR [ebp-0x4],0x1
6400fbf9:	jb     0x6400fc07
6400fbfb:	mov    ecx,DWORD PTR [ebp-0x58]
6400fbfe:	push   ecx
6400fbff:	call   0x64010422
6400fc04:	add    esp,0x4
6400fc07:	test   bl,bl
6400fc09:	jne    0x6400fc9c
6400fc0f:	xor    ebx,ebx
6400fc11:	xor    esi,esi
6400fc13:	lea    edx,[ebp-0x38]
6400fc16:	push   ebx
6400fc17:	push   edx
6400fc18:	mov    DWORD PTR [ebp-0x38],ebx
6400fc1b:	call   0x6400cd90
6400fc20:	call   eax
6400fc22:	test   eax,eax
6400fc24:	je     0x6400fc34
6400fc26:	add    esi,0x3e8
6400fc2c:	cmp    esi,0x493e0
6400fc32:	ja     0x6400fc41
6400fc34:	push   0x3e8
6400fc39:	call   DWORD PTR ds:0x64022050
6400fc3f:	jmp    0x6400fc13
6400fc41:	cmp    DWORD PTR [ebp-0x14],edi
6400fc44:	jb     0x6400fc52
6400fc46:	mov    eax,DWORD PTR [ebp-0x28]
6400fc49:	push   eax
6400fc4a:	call   0x64010422
6400fc4f:	add    esp,0x4
6400fc52:	mov    eax,DWORD PTR [ebp-0x30]
6400fc55:	add    eax,0xfffffff0
6400fc58:	mov    DWORD PTR [ebp-0x14],0xf
6400fc5f:	mov    DWORD PTR [ebp-0x18],ebx
6400fc62:	mov    BYTE PTR [ebp-0x28],0x0
6400fc66:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400fc6d:	lea    ecx,[eax+0xc]
6400fc70:	or     edx,0xffffffff
6400fc73:	lock xadd DWORD PTR [ecx],edx
6400fc77:	dec    edx
6400fc78:	test   edx,edx
6400fc7a:	jg     0x6400fc86
6400fc7c:	mov    ecx,DWORD PTR [eax]
6400fc7e:	mov    edx,DWORD PTR [ecx]
6400fc80:	push   eax
6400fc81:	mov    eax,DWORD PTR [edx+0x4]
6400fc84:	call   eax
6400fc86:	mov    eax,DWORD PTR [ebp-0x34]
6400fc89:	add    eax,0x1
6400fc8c:	cmp    eax,0x3
6400fc8f:	mov    DWORD PTR [ebp-0x34],eax
6400fc92:	jne    0x6400fb38
6400fc98:	xor    ebx,ebx
6400fc9a:	jmp    0x6400fcf4
6400fc9c:	xor    ebx,ebx
6400fc9e:	cmp    DWORD PTR [ebp-0x18],ebx
6400fca1:	je     0x6400fcaf
6400fca3:	lea    ecx,[ebp-0x2c]
6400fca6:	push   ecx
6400fca7:	call   0x6400e6f0
6400fcac:	add    esp,0x4
6400fcaf:	cmp    DWORD PTR [ebp-0x14],edi
6400fcb2:	jb     0x6400fcc0
6400fcb4:	mov    edx,DWORD PTR [ebp-0x28]
6400fcb7:	push   edx
6400fcb8:	call   0x64010422
6400fcbd:	add    esp,0x4
6400fcc0:	mov    eax,DWORD PTR [ebp-0x30]
6400fcc3:	add    eax,0xfffffff0
6400fcc6:	mov    DWORD PTR [ebp-0x14],0xf
6400fccd:	mov    DWORD PTR [ebp-0x18],ebx
6400fcd0:	mov    BYTE PTR [ebp-0x28],0x0
6400fcd4:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400fcdb:	lea    ecx,[eax+0xc]
6400fcde:	or     edx,0xffffffff
6400fce1:	lock xadd DWORD PTR [ecx],edx
6400fce5:	dec    edx
6400fce6:	test   edx,edx
6400fce8:	jg     0x6400fcf4
6400fcea:	mov    ecx,DWORD PTR [eax]
6400fcec:	mov    edx,DWORD PTR [ecx]
6400fcee:	push   eax
6400fcef:	mov    eax,DWORD PTR [edx+0x4]
6400fcf2:	call   eax
6400fcf4:	xor    esi,esi
6400fcf6:	lea    ecx,[ebp-0x40]
6400fcf9:	push   ebx
6400fcfa:	push   ecx
6400fcfb:	mov    DWORD PTR [ebp-0x40],ebx
6400fcfe:	call   0x6400cd90
6400fd03:	call   eax
6400fd05:	test   eax,eax
6400fd07:	je     0x6400fd1b
6400fd09:	add    esi,0x3e8
6400fd0f:	cmp    esi,0xa4cb80
6400fd15:	ja     0x6400fb31
6400fd1b:	push   0x3e8
6400fd20:	call   DWORD PTR ds:0x64022050
6400fd26:	jmp    0x6400fcf6
6400fd28:	int3   
6400fd29:	int3   
6400fd2a:	int3   
6400fd2b:	int3   
6400fd2c:	int3   
6400fd2d:	int3   
6400fd2e:	int3   
6400fd2f:	int3   
6400fd30:	sub    esp,0x20c
6400fd36:	mov    eax,ds:0x64029038
6400fd3b:	xor    eax,esp
6400fd3d:	mov    DWORD PTR [esp+0x208],eax
6400fd44:	push   0x208
6400fd49:	lea    eax,[esp+0x4]
6400fd4d:	push   eax
6400fd4e:	push   0x0
6400fd50:	call   DWORD PTR ds:0x64022070
6400fd56:	test   eax,eax
6400fd58:	je     0x6400fda7
6400fd5a:	lea    ecx,[esp]
6400fd5d:	push   0x104
6400fd62:	push   ecx
6400fd63:	call   0x64011303
6400fd68:	lea    edx,[esp+0x8]
6400fd6c:	push   0x640228cc
6400fd71:	push   edx
6400fd72:	call   0x64010d63
6400fd77:	add    esp,0x10
6400fd7a:	test   eax,eax
6400fd7c:	je     0x6400fda7
6400fd7e:	call   0x6400ed90
6400fd83:	test   al,al
6400fd85:	je     0x6400fda7
6400fd87:	push   0x0
6400fd89:	push   0x0
6400fd8b:	push   0x0
6400fd8d:	push   0x6400faf0
6400fd92:	push   0x0
6400fd94:	push   0x0
6400fd96:	call   DWORD PTR ds:0x6402206c
6400fd9c:	test   eax,eax
6400fd9e:	je     0x6400fda7
6400fda0:	push   eax
6400fda1:	call   DWORD PTR ds:0x64022040
6400fda7:	mov    ecx,DWORD PTR [esp+0x208]
6400fdae:	xor    ecx,esp
6400fdb0:	xor    eax,eax
6400fdb2:	call   0x64010c1e
6400fdb7:	add    esp,0x20c
6400fdbd:	ret    0x4
6400fdc0:	push   0x0
6400fdc2:	push   0x0
6400fdc4:	push   0x0
6400fdc6:	push   0x6400fd30
6400fdcb:	push   0x0
6400fdcd:	push   0x0
6400fdcf:	call   DWORD PTR ds:0x6402206c
6400fdd5:	ret    
6400fdd6:	push   ebp
6400fdd7:	mov    ebp,esp
6400fdd9:	sub    esp,0xc
6400fddc:	mov    eax,ds:0x64029038
6400fde1:	xor    eax,ebp
6400fde3:	mov    DWORD PTR [ebp-0x4],eax
6400fde6:	push   esi
6400fde7:	xor    esi,esi
6400fde9:	call   DWORD PTR ds:0x640220f0
6400fdef:	push   0x7
6400fdf1:	lea    ecx,[ebp-0xc]
6400fdf4:	push   ecx
6400fdf5:	push   0x1004
6400fdfa:	push   eax
6400fdfb:	call   DWORD PTR ds:0x640220ec
6400fe01:	test   eax,eax
6400fe03:	je     0x6400fe24
6400fe05:	mov    cl,BYTE PTR [ebp-0xc]
6400fe08:	test   cl,cl
6400fe0a:	lea    eax,[ebp-0xc]
6400fe0d:	je     0x6400fe24
6400fe0f:	imul   esi,esi,0xa
6400fe12:	movsx  ecx,cl
6400fe15:	inc    eax
6400fe16:	lea    esi,[esi+ecx*1-0x30]
6400fe1a:	mov    cl,BYTE PTR [eax]
6400fe1c:	test   cl,cl
6400fe1e:	jne    0x6400fe0f
6400fe20:	test   esi,esi
6400fe22:	jne    0x6400fe2c
6400fe24:	call   DWORD PTR ds:0x640220e8
6400fe2a:	mov    esi,eax
6400fe2c:	mov    ecx,DWORD PTR [ebp-0x4]
6400fe2f:	mov    eax,esi
6400fe31:	xor    ecx,ebp
6400fe33:	pop    esi
6400fe34:	call   0x64010c1e
6400fe39:	leave  
6400fe3a:	ret    
6400fe3b:	push   0x3
6400fe3d:	pop    eax
6400fe3e:	ret    
6400fe3f:	push   ebp
6400fe40:	mov    ebp,esp
6400fe42:	sub    esp,0x98
6400fe48:	mov    eax,ds:0x64029038
6400fe4d:	xor    eax,ebp
6400fe4f:	mov    DWORD PTR [ebp-0x4],eax
6400fe52:	lea    eax,[ebp-0x98]
6400fe58:	push   eax
6400fe59:	mov    DWORD PTR [ebp-0x98],0x94
6400fe63:	call   DWORD PTR ds:0x640220f4
6400fe69:	cmp    DWORD PTR [ebp-0x88],0x2
6400fe70:	jne    0x6400fe80
6400fe72:	cmp    DWORD PTR [ebp-0x94],0x5
6400fe79:	mov    eax,0x6400fe3b
6400fe7e:	jae    0x6400fe85
6400fe80:	mov    eax,0x6400fdd6
6400fe85:	push   eax
6400fe86:	push   0x64029008
6400fe8b:	call   DWORD PTR ds:0x640220e4
6400fe91:	call   DWORD PTR ds:0x64029008
6400fe97:	mov    ecx,DWORD PTR [ebp-0x4]
6400fe9a:	xor    ecx,ebp
6400fe9c:	call   0x64010c1e
6400fea1:	leave  
6400fea2:	ret    
6400fea3:	push   esi
6400fea4:	mov    esi,ecx
6400fea6:	mov    eax,DWORD PTR [esi]
6400fea8:	test   eax,eax
6400feaa:	je     0x6400feb6
6400feac:	push   eax
6400fead:	call   0x64011ab6
6400feb2:	and    DWORD PTR [esi],0x0
6400feb5:	pop    ecx
6400feb6:	and    DWORD PTR [esi+0x4],0x0
6400feba:	and    DWORD PTR [esi+0x8],0x0
6400febe:	pop    esi
6400febf:	ret    
6400fec0:	push   esi
6400fec1:	push   0x18
6400fec3:	mov    esi,ecx
6400fec5:	push   0x0
6400fec7:	push   esi
6400fec8:	call   0x64011320
6400fecd:	add    esp,0xc
6400fed0:	mov    eax,esi
6400fed2:	pop    esi
6400fed3:	ret    
6400fed4:	push   0xc
6400fed6:	push   0x64026820
6400fedb:	call   0x64011fc8
6400fee0:	and    DWORD PTR [ebp-0x4],0x0
6400fee4:	push   ecx
6400fee5:	call   DWORD PTR ds:0x6402201c
6400feeb:	and    DWORD PTR [ebp-0x1c],0x0
6400feef:	jmp    0x6400ff0f
6400fef1:	mov    eax,DWORD PTR [ebp-0x14]
6400fef4:	mov    eax,DWORD PTR [eax]
6400fef6:	mov    eax,DWORD PTR [eax]
6400fef8:	xor    ecx,ecx
6400fefa:	cmp    eax,0xc0000017
6400feff:	sete   cl
6400ff02:	mov    eax,ecx
6400ff04:	ret    
6400ff05:	mov    esp,DWORD PTR [ebp-0x18]
6400ff08:	mov    DWORD PTR [ebp-0x1c],0x8007000e
6400ff0f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6400ff16:	mov    eax,DWORD PTR [ebp-0x1c]
6400ff19:	call   0x6401200d
6400ff1e:	ret    
6400ff1f:	mov    eax,DWORD PTR [esp+0x4]
6400ff23:	test   eax,eax
6400ff25:	jne    0x6400ff2e
6400ff27:	mov    eax,0x80070057
6400ff2c:	jmp    0x6400ff3f
6400ff2e:	cmp    DWORD PTR [eax],0x2c
6400ff31:	jne    0x6400ff27
6400ff33:	and    DWORD PTR [eax+0x1c],0x0
6400ff37:	lea    ecx,[eax+0x4]
6400ff3a:	call   0x6400fed4
6400ff3f:	ret    0x4
6400ff42:	mov    eax,DWORD PTR [esp+0x4]
6400ff46:	test   eax,eax
6400ff48:	jl     0x6400ff57
6400ff4a:	cmp    eax,DWORD PTR [ecx+0x4]
6400ff4d:	jge    0x6400ff57
6400ff4f:	mov    ecx,DWORD PTR [ecx]
6400ff51:	lea    eax,[ecx+eax*2]
6400ff54:	ret    0x4
6400ff57:	push   0x0
6400ff59:	push   0x0
6400ff5b:	push   0x1
6400ff5d:	push   0xc000008c
6400ff62:	call   DWORD PTR ds:0x640220f8
6400ff68:	int3   
6400ff69:	mov    eax,DWORD PTR [esp+0x4]
6400ff6d:	test   eax,eax
6400ff6f:	jl     0x6400ff7e
6400ff71:	cmp    eax,DWORD PTR [ecx+0x4]
6400ff74:	jge    0x6400ff7e
6400ff76:	mov    ecx,DWORD PTR [ecx]
6400ff78:	lea    eax,[ecx+eax*4]
6400ff7b:	ret    0x4
6400ff7e:	push   0x0
6400ff80:	push   0x0
6400ff82:	push   0x1
6400ff84:	push   0xc000008c
6400ff89:	call   DWORD PTR ds:0x640220f8
6400ff8f:	int3   
6400ff90:	push   esi
6400ff91:	mov    esi,ecx
6400ff93:	lea    ecx,[esi+0x4]
6400ff96:	call   0x6400fec0
6400ff9b:	xor    eax,eax
6400ff9d:	mov    DWORD PTR [esi+0x20],eax
6400ffa0:	mov    DWORD PTR [esi+0x24],eax
6400ffa3:	mov    DWORD PTR [esi+0x28],eax
6400ffa6:	mov    eax,esi
6400ffa8:	pop    esi
6400ffa9:	ret    
6400ffaa:	push   esi
6400ffab:	mov    esi,DWORD PTR [esp+0x8]
6400ffaf:	test   esi,esi
6400ffb1:	jne    0x6400ffba
6400ffb3:	mov    eax,0x80070057
6400ffb8:	jmp    0x64010006
6400ffba:	mov    eax,DWORD PTR [esi]
6400ffbc:	test   eax,eax
6400ffbe:	je     0x64010004
6400ffc0:	cmp    eax,0x2c
6400ffc3:	jne    0x6400ffb3
6400ffc5:	push   edi
6400ffc6:	xor    edi,edi
6400ffc8:	cmp    DWORD PTR [esi+0x24],edi
6400ffcb:	jle    0x6400ffee
6400ffcd:	push   ebx
6400ffce:	lea    ebx,[esi+0x20]
6400ffd1:	push   edi
6400ffd2:	mov    ecx,ebx
6400ffd4:	call   0x6400ff42
6400ffd9:	movzx  eax,WORD PTR [eax]
6400ffdc:	push   DWORD PTR [esp+0x14]
6400ffe0:	push   eax
6400ffe1:	call   DWORD PTR ds:0x640221b8
6400ffe7:	inc    edi
6400ffe8:	cmp    edi,DWORD PTR [esi+0x24]
6400ffeb:	jl     0x6400ffd1
6400ffed:	pop    ebx
6400ffee:	lea    ecx,[esi+0x20]
6400fff1:	call   0x6400fea3
6400fff6:	lea    eax,[esi+0x4]
6400fff9:	push   eax
6400fffa:	call   DWORD PTR ds:0x640220a0
64010000:	and    DWORD PTR [esi],0x0
64010003:	pop    edi
64010004:	xor    eax,eax
64010006:	pop    esi
64010007:	ret    0x8
6401000a:	push   esi
6401000b:	mov    esi,ecx
6401000d:	cmp    BYTE PTR [esi+0x4],0x0
64010011:	je     0x6401001f
64010013:	push   DWORD PTR [esi]
64010015:	call   DWORD PTR ds:0x6402209c
6401001b:	mov    BYTE PTR [esi+0x4],0x0
6401001f:	pop    esi
64010020:	ret    
64010021:	push   esi
64010022:	mov    esi,ecx
64010024:	lea    ecx,[esi+0x18]
64010027:	call   0x6400fec0
6401002c:	xor    eax,eax
6401002e:	mov    DWORD PTR [esi+0x30],eax
64010031:	mov    DWORD PTR [esi+0x34],eax
64010034:	mov    DWORD PTR [esi+0x38],eax
64010037:	mov    eax,esi
64010039:	pop    esi
6401003a:	ret    
6401003b:	push   esi
6401003c:	mov    esi,ecx
6401003e:	lea    eax,[esi+0x18]
64010041:	push   eax
64010042:	call   DWORD PTR ds:0x640220a0
64010048:	lea    ecx,[esi+0x30]
6401004b:	pop    esi
6401004c:	jmp    0x6400fea3
64010051:	push   ebp
64010052:	mov    ebp,esp
64010054:	push   ecx
64010055:	push   ecx
64010056:	push   esi
64010057:	mov    esi,ecx
64010059:	lea    eax,[esi+0x18]
6401005c:	push   eax
6401005d:	mov    DWORD PTR [ebp-0x8],eax
64010060:	call   DWORD PTR ds:0x64022098
64010066:	mov    eax,DWORD PTR [esi+0x34]
64010069:	mov    ecx,DWORD PTR [ebp+0x8]
6401006c:	cmp    ecx,eax
6401006e:	mov    BYTE PTR [ebp-0x4],0x1
64010072:	jg     0x64010098
64010074:	test   ecx,ecx
64010076:	jl     0x64010098
64010078:	cmp    ecx,eax
6401007a:	jne    0x6401008b
6401007c:	mov    esi,DWORD PTR [esi+0x8]
6401007f:	lea    ecx,[ebp-0x8]
64010082:	call   0x6401000a
64010087:	mov    eax,esi
64010089:	jmp    0x640100a2
6401008b:	push   ecx
6401008c:	lea    ecx,[esi+0x30]
6401008f:	call   0x6400ff69
64010094:	mov    esi,DWORD PTR [eax]
64010096:	jmp    0x6401007f
64010098:	lea    ecx,[ebp-0x8]
6401009b:	call   0x6401000a
640100a0:	xor    eax,eax
640100a2:	pop    esi
640100a3:	leave  
640100a4:	ret    0x4
640100a7:	push   esi
640100a8:	mov    esi,ecx
640100aa:	call   0x6400ff90
640100af:	push   esi
640100b0:	mov    DWORD PTR [esi],0x2c
640100b6:	call   0x6400ff1f
640100bb:	test   eax,eax
640100bd:	jge    0x640100c9
640100bf:	mov    BYTE PTR ds:0x6402d2bc,0x1
640100c6:	and    DWORD PTR [esi],0x0
640100c9:	mov    eax,esi
640100cb:	pop    esi
640100cc:	ret    
640100cd:	push   ebp
640100ce:	lea    ebp,[esp-0x78]
640100d2:	sub    esp,0x98
640100d8:	mov    eax,ds:0x64029038
640100dd:	xor    eax,ebp
640100df:	mov    DWORD PTR [ebp+0x74],eax
640100e2:	push   esi
640100e3:	mov    esi,ecx
640100e5:	call   0x64010021
640100ea:	mov    eax,0x64000000
640100ef:	push   0x94
640100f4:	mov    DWORD PTR [esi+0x8],eax
640100f7:	mov    DWORD PTR [esi+0x4],eax
640100fa:	lea    eax,[ebp-0x20]
640100fd:	push   0x0
640100ff:	push   eax
64010100:	mov    DWORD PTR [esi],0x3c
64010106:	mov    BYTE PTR [esi+0xc],0x0
6401010a:	call   0x64011320
6401010f:	add    esp,0xc
64010112:	lea    eax,[ebp-0x20]
64010115:	push   eax
64010116:	mov    DWORD PTR [ebp-0x20],0x94
6401011d:	call   DWORD PTR ds:0x640220f4
64010123:	cmp    DWORD PTR [ebp-0x10],0x2
64010127:	jne    0x64010131
64010129:	cmp    DWORD PTR [ebp-0x1c],0x5
6401012d:	jb     0x64010149
6401012f:	jmp    0x64010145
64010131:	cmp    DWORD PTR [ebp-0x10],0x1
64010135:	jne    0x64010149
64010137:	cmp    DWORD PTR [ebp-0x1c],0x4
6401013b:	ja     0x64010145
6401013d:	jne    0x64010149
6401013f:	cmp    DWORD PTR [ebp-0x18],0x0
64010143:	jbe    0x64010149
64010145:	mov    BYTE PTR [esi+0xc],0x1
64010149:	lea    ecx,[esi+0x18]
6401014c:	mov    DWORD PTR [esi+0x10],0x800
64010153:	mov    DWORD PTR [esi+0x14],0x64022ae4
6401015a:	call   0x6400fed4
6401015f:	test   eax,eax
64010161:	jge    0x6401016a
64010163:	mov    BYTE PTR ds:0x6402d2bc,0x1
6401016a:	mov    ecx,DWORD PTR [ebp+0x74]
6401016d:	mov    eax,esi
6401016f:	xor    ecx,ebp
64010171:	pop    esi
64010172:	call   0x64010c1e
64010177:	add    ebp,0x78
6401017a:	leave  
6401017b:	ret    
6401017c:	push   esi
6401017d:	push   DWORD PTR ds:0x6402a470
64010183:	mov    esi,ecx
64010185:	push   esi
64010186:	call   0x6400ffaa
6401018b:	lea    ecx,[esi+0x20]
6401018e:	pop    esi
6401018f:	jmp    0x6400fea3
64010194:	cmp    BYTE PTR [ecx+0x8],0x0
64010198:	mov    DWORD PTR [ecx],0x64022af4
6401019e:	je     0x640101ae
640101a0:	mov    ecx,DWORD PTR [ecx+0x4]
640101a3:	test   ecx,ecx
640101a5:	je     0x640101ae
640101a7:	push   ecx
640101a8:	call   DWORD PTR ds:0x640220fc
640101ae:	ret    
640101af:	push   DWORD PTR [esp+0x4]
640101b3:	push   0x0
640101b5:	push   DWORD PTR [ecx+0x4]
640101b8:	call   DWORD PTR ds:0x64022100
640101be:	ret    0x4
640101c1:	cmp    DWORD PTR [esp+0x4],0x0
640101c6:	je     0x640101d7
640101c8:	push   DWORD PTR [esp+0x4]
640101cc:	push   0x0
640101ce:	push   DWORD PTR [ecx+0x4]
640101d1:	call   DWORD PTR ds:0x64022104
640101d7:	ret    0x4
640101da:	push   ebp
640101db:	mov    ebp,esp
640101dd:	xor    eax,eax
640101df:	cmp    DWORD PTR [ebp+0x8],eax
640101e2:	jne    0x640101ed
640101e4:	push   DWORD PTR [ebp+0xc]
640101e7:	mov    eax,DWORD PTR [ecx]
640101e9:	call   DWORD PTR [eax]
640101eb:	jmp    0x6401020e
640101ed:	cmp    DWORD PTR [ebp+0xc],eax
640101f0:	jne    0x640101fe
640101f2:	push   DWORD PTR [ebp+0x8]
640101f5:	mov    eax,DWORD PTR [ecx]
640101f7:	call   DWORD PTR [eax+0x4]
640101fa:	xor    eax,eax
640101fc:	jmp    0x6401020e
640101fe:	push   DWORD PTR [ebp+0xc]
64010201:	push   DWORD PTR [ebp+0x8]
64010204:	push   eax
64010205:	push   DWORD PTR [ecx+0x4]
64010208:	call   DWORD PTR ds:0x64022108
6401020e:	pop    ebp
6401020f:	ret    0x8
64010212:	push   DWORD PTR [esp+0x4]
64010216:	push   0x0
64010218:	push   DWORD PTR [ecx+0x4]
6401021b:	call   DWORD PTR ds:0x6402210c
64010221:	ret    0x4
64010224:	push   esi
64010225:	mov    esi,ecx
64010227:	call   0x64010194
6401022c:	test   BYTE PTR [esp+0x8],0x1
64010231:	je     0x6401023a
64010233:	push   esi
64010234:	call   0x64010422
64010239:	pop    ecx
6401023a:	mov    eax,esi
6401023c:	pop    esi
6401023d:	ret    0x4
64010240:	mov    eax,ecx
64010242:	mov    ecx,DWORD PTR [esp+0x4]
64010246:	mov    DWORD PTR [eax+0x4],ecx
64010249:	mov    DWORD PTR [eax],0x64022b08
6401024f:	xor    ecx,ecx
64010251:	mov    DWORD PTR [eax+0x14],0x2
64010258:	mov    DWORD PTR [eax+0xc],ecx
6401025b:	mov    DWORD PTR [eax+0x10],ecx
6401025e:	mov    WORD PTR [eax+0x18],cx
64010262:	mov    WORD PTR [eax+0x1a],cx
64010266:	mov    DWORD PTR [eax+0x8],eax
64010269:	ret    0x4
6401026c:	mov    eax,DWORD PTR [esp+0x8]
64010270:	mul    DWORD PTR [esp+0xc]
64010274:	test   edx,edx
64010276:	ja     0x6401027d
64010278:	cmp    eax,0xffffffff
6401027b:	jbe    0x64010283
6401027d:	mov    eax,0x80070057
64010282:	ret    
64010283:	mov    ecx,DWORD PTR [esp+0x4]
64010287:	mov    DWORD PTR [ecx],eax
64010289:	xor    eax,eax
6401028b:	ret    
6401028c:	mov    ecx,DWORD PTR [ecx+0x4]
6401028f:	mov    eax,DWORD PTR [ecx]
64010291:	jmp    DWORD PTR [eax+0x4]
64010294:	xor    edx,edx
64010296:	lea    eax,[ecx+0x14]
64010299:	inc    edx
6401029a:	lock xadd DWORD PTR [eax],edx
6401029e:	lea    eax,[ecx+0x8]
640102a1:	ret    
640102a2:	mov    eax,ecx
640102a4:	ret    
640102a5:	test   BYTE PTR [esp+0x4],0x1
640102aa:	push   esi
640102ab:	mov    esi,ecx
640102ad:	mov    DWORD PTR [esi],0x64022b08
640102b3:	je     0x640102bc
640102b5:	push   esi
640102b6:	call   0x64010422
640102bb:	pop    ecx
640102bc:	mov    eax,esi
640102be:	pop    esi
640102bf:	ret    0x4
640102c2:	mov    eax,DWORD PTR [esp+0x8]
640102c6:	mov    ecx,DWORD PTR [esp+0xc]
640102ca:	or     edx,0xffffffff
640102cd:	sub    edx,eax
640102cf:	cmp    edx,ecx
640102d1:	jae    0x640102d9
640102d3:	mov    eax,0x80070057
640102d8:	ret    
640102d9:	add    eax,ecx
640102db:	mov    ecx,DWORD PTR [esp+0x4]
640102df:	mov    DWORD PTR [ecx],eax
640102e1:	xor    eax,eax
640102e3:	ret    
640102e4:	push   ebp
640102e5:	mov    ebp,esp
640102e7:	push   esi
640102e8:	mov    esi,DWORD PTR [ebp+0x8]
640102eb:	push   edi
640102ec:	push   DWORD PTR [ebp+0xc]
640102ef:	add    esi,0x8
640102f2:	and    esi,0xfffffff8
640102f5:	lea    eax,[ebp+0x8]
640102f8:	push   esi
640102f9:	push   eax
640102fa:	mov    edi,ecx
640102fc:	call   0x6401026c
64010301:	add    esp,0xc
64010304:	test   eax,eax
64010306:	jl     0x6401033e
64010308:	push   DWORD PTR [ebp+0x8]
6401030b:	lea    eax,[ebp+0x8]
6401030e:	push   0x10
64010310:	push   eax
64010311:	call   0x640102c2
64010316:	add    esp,0xc
64010319:	test   eax,eax
6401031b:	jl     0x6401033e
6401031d:	mov    ecx,DWORD PTR [edi+0x4]
64010320:	push   DWORD PTR [ebp+0x8]
64010323:	mov    eax,DWORD PTR [ecx]
64010325:	call   DWORD PTR [eax]
64010327:	test   eax,eax
64010329:	je     0x6401033e
6401032b:	dec    esi
6401032c:	and    DWORD PTR [eax+0x4],0x0
64010330:	mov    DWORD PTR [eax],edi
64010332:	mov    DWORD PTR [eax+0xc],0x1
64010339:	mov    DWORD PTR [eax+0x8],esi
6401033c:	jmp    0x64010340
6401033e:	xor    eax,eax
64010340:	pop    edi
64010341:	pop    esi
64010342:	pop    ebp
64010343:	ret    0x8
64010346:	push   ebp
64010347:	mov    ebp,esp
64010349:	push   esi
6401034a:	mov    esi,DWORD PTR [ebp+0xc]
6401034d:	push   edi
6401034e:	push   DWORD PTR [ebp+0x10]
64010351:	add    esi,0x8
64010354:	and    esi,0xfffffff8
64010357:	lea    eax,[ebp+0xc]
6401035a:	push   esi
6401035b:	push   eax
6401035c:	mov    edi,ecx
6401035e:	call   0x6401026c
64010363:	add    esp,0xc
64010366:	test   eax,eax
64010368:	jl     0x64010397
6401036a:	push   DWORD PTR [ebp+0xc]
6401036d:	lea    eax,[ebp+0xc]
64010370:	push   0x10
64010372:	push   eax
64010373:	call   0x640102c2
64010378:	add    esp,0xc
6401037b:	test   eax,eax
6401037d:	jl     0x64010397
6401037f:	push   DWORD PTR [ebp+0xc]
64010382:	mov    ecx,DWORD PTR [edi+0x4]
64010385:	push   DWORD PTR [ebp+0x8]
64010388:	mov    eax,DWORD PTR [ecx]
6401038a:	call   DWORD PTR [eax+0x8]
6401038d:	test   eax,eax
6401038f:	je     0x64010397
64010391:	dec    esi
64010392:	mov    DWORD PTR [eax+0x8],esi
64010395:	jmp    0x64010399
64010397:	xor    eax,eax
64010399:	pop    edi
6401039a:	pop    esi
6401039b:	pop    ebp
6401039c:	ret    0xc
6401039f:	push   0x44
640103a1:	mov    eax,0x64020525
640103a6:	call   0x6401247b
640103ab:	push   0x64022b20
640103b0:	lea    ecx,[ebp-0x28]
640103b3:	call   0x64002710
640103b8:	and    DWORD PTR [ebp-0x4],0x0
640103bc:	lea    eax,[ebp-0x28]
640103bf:	push   eax
640103c0:	lea    ecx,[ebp-0x50]
640103c3:	call   0x64002d00
640103c8:	push   0x64026f58
640103cd:	lea    eax,[ebp-0x50]
640103d0:	push   eax
640103d1:	mov    DWORD PTR [ebp-0x50],0x6402231c
640103d8:	call   0x6401080d
640103dd:	int3   
640103de:	push   0x44
640103e0:	mov    eax,0x64020548
640103e5:	call   0x6401247b
640103ea:	push   0x64022b30
640103ef:	lea    ecx,[ebp-0x28]
640103f2:	call   0x64002710
640103f7:	and    DWORD PTR [ebp-0x4],0x0
640103fb:	lea    eax,[ebp-0x28]
640103fe:	push   eax
640103ff:	lea    ecx,[ebp-0x50]
64010402:	call   0x64002d00
64010407:	push   0x64026f1c
6401040c:	lea    eax,[ebp-0x50]
6401040f:	push   eax
64010410:	mov    DWORD PTR [ebp-0x50],0x64022328
64010417:	call   0x6401080d
6401041c:	int3   
6401041d:	jmp    0x640107a3
64010422:	jmp    0x64011ab6
64010427:	push   ecx
64010428:	mov    DWORD PTR [ecx],0x64022b4c
6401042e:	call   0x640124e4
64010433:	pop    ecx
64010434:	ret    
64010435:	push   esi
64010436:	mov    esi,ecx
64010438:	call   0x64010427
6401043d:	test   BYTE PTR [esp+0x8],0x1
64010442:	je     0x6401044b
64010444:	push   esi
64010445:	call   0x64010422
6401044a:	pop    ecx
6401044b:	mov    eax,esi
6401044d:	pop    esi
6401044e:	ret    0x4
64010451:	mov    eax,DWORD PTR [esp+0x4]
64010455:	add    ecx,0x9
64010458:	push   ecx
64010459:	add    eax,0x9
6401045c:	push   eax
6401045d:	call   0x64012560
64010462:	neg    eax
64010464:	pop    ecx
64010465:	sbb    eax,eax
64010467:	pop    ecx
64010468:	inc    eax
64010469:	ret    0x4
6401046c:	mov    eax,ecx
6401046e:	and    DWORD PTR [eax+0x4],0x0
64010472:	and    DWORD PTR [eax+0x8],0x0
64010476:	mov    DWORD PTR [eax],0x64022b54
6401047c:	ret    
6401047d:	push   ebx
6401047e:	mov    ebx,DWORD PTR [esp+0x8]
64010482:	push   esi
64010483:	push   edi
64010484:	mov    edi,ecx
64010486:	mov    DWORD PTR [edi],0x64022b54
6401048c:	mov    eax,DWORD PTR [ebx]
6401048e:	test   eax,eax
64010490:	je     0x640104b8
64010492:	push   eax
64010493:	call   0x640123f0
64010498:	mov    esi,eax
6401049a:	inc    esi
6401049b:	push   esi
6401049c:	call   0x64011b93
640104a1:	test   eax,eax
640104a3:	pop    ecx
640104a4:	pop    ecx
640104a5:	mov    DWORD PTR [edi+0x4],eax
640104a8:	je     0x640104bc
640104aa:	push   DWORD PTR [ebx]
640104ac:	push   esi
640104ad:	push   eax
640104ae:	call   0x640125e8
640104b3:	add    esp,0xc
640104b6:	jmp    0x640104bc
640104b8:	and    DWORD PTR [edi+0x4],0x0
640104bc:	mov    DWORD PTR [edi+0x8],0x1
640104c3:	mov    eax,edi
640104c5:	pop    edi
640104c6:	pop    esi
640104c7:	pop    ebx
640104c8:	ret    0x4
640104cb:	mov    eax,ecx
640104cd:	mov    ecx,DWORD PTR [esp+0x4]
640104d1:	mov    DWORD PTR [eax],0x64022b54
640104d7:	mov    ecx,DWORD PTR [ecx]
640104d9:	and    DWORD PTR [eax+0x8],0x0
640104dd:	mov    DWORD PTR [eax+0x4],ecx
640104e0:	ret    0x8
640104e3:	push   ebx
640104e4:	mov    ebx,DWORD PTR [esp+0x8]
640104e8:	push   esi
640104e9:	mov    esi,ecx
640104eb:	mov    DWORD PTR [esi],0x64022b54
640104f1:	mov    eax,DWORD PTR [ebx+0x8]
640104f4:	mov    DWORD PTR [esi+0x8],eax
640104f7:	test   eax,eax
640104f9:	mov    eax,DWORD PTR [ebx+0x4]
640104fc:	push   edi
640104fd:	je     0x64010530
640104ff:	test   eax,eax
64010501:	je     0x6401052a
64010503:	push   eax
64010504:	call   0x640123f0
64010509:	mov    edi,eax
6401050b:	inc    edi
6401050c:	push   edi
6401050d:	call   0x64011b93
64010512:	test   eax,eax
64010514:	pop    ecx
64010515:	pop    ecx
64010516:	mov    DWORD PTR [esi+0x4],eax
64010519:	je     0x64010533
6401051b:	push   DWORD PTR [ebx+0x4]
6401051e:	push   edi
6401051f:	push   eax
64010520:	call   0x640125e8
64010525:	add    esp,0xc
64010528:	jmp    0x64010533
6401052a:	and    DWORD PTR [esi+0x4],0x0
6401052e:	jmp    0x64010533
64010530:	mov    DWORD PTR [esi+0x4],eax
64010533:	pop    edi
64010534:	mov    eax,esi
64010536:	pop    esi
64010537:	pop    ebx
64010538:	ret    0x4
6401053b:	cmp    DWORD PTR [ecx+0x8],0x0
6401053f:	mov    DWORD PTR [ecx],0x64022b54
64010545:	je     0x64010550
64010547:	push   DWORD PTR [ecx+0x4]
6401054a:	call   0x64011ab6
6401054f:	pop    ecx
64010550:	ret    
64010551:	mov    eax,DWORD PTR [ecx+0x4]
64010554:	test   eax,eax
64010556:	jne    0x6401055d
64010558:	mov    eax,0x64022b5c
6401055d:	ret    
6401055e:	push   esi
6401055f:	mov    esi,ecx
64010561:	call   0x6401053b
64010566:	test   BYTE PTR [esp+0x8],0x1
6401056b:	je     0x64010574
6401056d:	push   esi
6401056e:	call   0x64010422
64010573:	pop    ecx
64010574:	mov    eax,esi
64010576:	pop    esi
64010577:	ret    0x4
6401057a:	push   ebp
6401057b:	mov    ebp,esp
6401057d:	push   esi
6401057e:	mov    esi,DWORD PTR [ebp+0x14]
64010581:	push   edi
64010582:	xor    edi,edi
64010584:	cmp    esi,edi
64010586:	jne    0x6401058c
64010588:	xor    eax,eax
6401058a:	jmp    0x640105f1
6401058c:	cmp    DWORD PTR [ebp+0x8],edi
6401058f:	jne    0x640105ac
64010591:	call   0x640129f0
64010596:	push   0x16
64010598:	pop    esi
64010599:	mov    DWORD PTR [eax],esi
6401059b:	push   edi
6401059c:	push   edi
6401059d:	push   edi
6401059e:	push   edi
6401059f:	push   edi
640105a0:	call   0x64010756
640105a5:	add    esp,0x14
640105a8:	mov    eax,esi
640105aa:	jmp    0x640105f1
640105ac:	cmp    DWORD PTR [ebp+0x10],edi
640105af:	je     0x640105c7
640105b1:	cmp    DWORD PTR [ebp+0xc],esi
640105b4:	jb     0x640105c7
640105b6:	push   esi
640105b7:	push   DWORD PTR [ebp+0x10]
640105ba:	push   DWORD PTR [ebp+0x8]
640105bd:	call   0x64012650
640105c2:	add    esp,0xc
640105c5:	jmp    0x64010588
640105c7:	push   DWORD PTR [ebp+0xc]
640105ca:	push   edi
640105cb:	push   DWORD PTR [ebp+0x8]
640105ce:	call   0x64011320
640105d3:	add    esp,0xc
640105d6:	cmp    DWORD PTR [ebp+0x10],edi
640105d9:	je     0x64010591
640105db:	cmp    DWORD PTR [ebp+0xc],esi
640105de:	jae    0x640105ee
640105e0:	call   0x640129f0
640105e5:	push   0x22
640105e7:	pop    ecx
640105e8:	mov    DWORD PTR [eax],ecx
640105ea:	mov    esi,ecx
640105ec:	jmp    0x6401059b
640105ee:	push   0x16
640105f0:	pop    eax
640105f1:	pop    edi
640105f2:	pop    esi
640105f3:	pop    ebp
640105f4:	ret    
640105f5:	push   ebp
640105f6:	mov    ebp,esp
640105f8:	mov    eax,DWORD PTR [ebp+0x14]
640105fb:	push   esi
640105fc:	push   edi
640105fd:	xor    edi,edi
640105ff:	cmp    eax,edi
64010601:	je     0x6401064a
64010603:	cmp    DWORD PTR [ebp+0x8],edi
64010606:	jne    0x64010623
64010608:	call   0x640129f0
6401060d:	push   0x16
6401060f:	pop    esi
64010610:	mov    DWORD PTR [eax],esi
64010612:	push   edi
64010613:	push   edi
64010614:	push   edi
64010615:	push   edi
64010616:	push   edi
64010617:	call   0x64010756
6401061c:	add    esp,0x14
6401061f:	mov    eax,esi
64010621:	jmp    0x6401064c
64010623:	cmp    DWORD PTR [ebp+0x10],edi
64010626:	je     0x64010608
64010628:	cmp    DWORD PTR [ebp+0xc],eax
6401062b:	jae    0x6401063b
6401062d:	call   0x640129f0
64010632:	push   0x22
64010634:	pop    ecx
64010635:	mov    DWORD PTR [eax],ecx
64010637:	mov    esi,ecx
64010639:	jmp    0x64010612
6401063b:	push   eax
6401063c:	push   DWORD PTR [ebp+0x10]
6401063f:	push   DWORD PTR [ebp+0x8]
64010642:	call   0x64011c60
64010647:	add    esp,0xc
6401064a:	xor    eax,eax
6401064c:	pop    edi
6401064d:	pop    esi
6401064e:	pop    ebp
6401064f:	ret    
64010650:	mov    eax,DWORD PTR [esp+0x4]
64010654:	mov    ds:0x6402a4fc,eax
64010659:	ret    
6401065a:	push   ebp
6401065b:	lea    ebp,[esp-0x2a8]
64010662:	sub    esp,0x328
64010668:	mov    eax,ds:0x64029038
6401066d:	xor    eax,ebp
6401066f:	mov    DWORD PTR [ebp+0x2a4],eax
64010675:	push   esi
64010676:	mov    DWORD PTR [ebp+0x88],eax
6401067c:	mov    DWORD PTR [ebp+0x84],ecx
64010682:	mov    DWORD PTR [ebp+0x80],edx
64010688:	mov    DWORD PTR [ebp+0x7c],ebx
6401068b:	mov    DWORD PTR [ebp+0x78],esi
6401068e:	mov    DWORD PTR [ebp+0x74],edi
64010691:	data16 mov WORD PTR [ebp+0xa0],ss
64010698:	data16 mov WORD PTR [ebp+0x94],cs
6401069f:	data16 mov WORD PTR [ebp+0x70],ds
640106a3:	data16 mov WORD PTR [ebp+0x6c],es
640106a7:	data16 mov WORD PTR [ebp+0x68],fs
640106ab:	data16 mov WORD PTR [ebp+0x64],gs
640106af:	pushf  
640106b0:	pop    DWORD PTR [ebp+0x98]
640106b6:	mov    esi,DWORD PTR [ebp+0x2ac]
640106bc:	lea    eax,[ebp+0x2ac]
640106c2:	mov    DWORD PTR [ebp+0x9c],eax
640106c8:	mov    DWORD PTR [ebp-0x28],0x10001
640106cf:	mov    DWORD PTR [ebp+0x90],esi
640106d5:	mov    eax,DWORD PTR [eax-0x4]
640106d8:	push   0x50
640106da:	mov    DWORD PTR [ebp+0x8c],eax
640106e0:	lea    eax,[ebp-0x80]
640106e3:	push   0x0
640106e5:	push   eax
640106e6:	call   0x64011320
640106eb:	lea    eax,[ebp-0x80]
640106ee:	mov    DWORD PTR [ebp-0x30],eax
640106f1:	lea    eax,[ebp-0x28]
640106f4:	add    esp,0xc
640106f7:	mov    DWORD PTR [ebp-0x80],0xc000000d
640106fe:	mov    DWORD PTR [ebp-0x74],esi
64010701:	mov    DWORD PTR [ebp-0x2c],eax
64010704:	call   DWORD PTR ds:0x64022120
6401070a:	push   0x0
6401070c:	mov    esi,eax
6401070e:	call   DWORD PTR ds:0x6402211c
64010714:	lea    eax,[ebp-0x30]
64010717:	push   eax
64010718:	call   DWORD PTR ds:0x64022118
6401071e:	test   eax,eax
64010720:	jne    0x6401072e
64010722:	test   esi,esi
64010724:	jne    0x6401072e
64010726:	push   0x2
64010728:	call   0x64012a34
6401072d:	pop    ecx
6401072e:	push   0xc000000d
64010733:	call   DWORD PTR ds:0x64022048
64010739:	push   eax
6401073a:	call   DWORD PTR ds:0x64022114
64010740:	mov    ecx,DWORD PTR [ebp+0x2a4]
64010746:	xor    ecx,ebp
64010748:	pop    esi
64010749:	call   0x64010c1e
6401074e:	add    ebp,0x2a8
64010754:	leave  
64010755:	ret    
64010756:	push   ebp
64010757:	mov    ebp,esp
64010759:	push   DWORD PTR ds:0x6402a4fc
6401075f:	call   0x64012b1f
64010764:	test   eax,eax
64010766:	pop    ecx
64010767:	je     0x6401076c
64010769:	pop    ebp
6401076a:	jmp    eax
6401076c:	push   0x2
6401076e:	call   0x64012a34
64010773:	pop    ecx
64010774:	pop    ebp
64010775:	jmp    0x6401065a
6401077a:	xor    eax,eax
6401077c:	push   eax
6401077d:	push   eax
6401077e:	push   eax
6401077f:	push   eax
64010780:	push   eax
64010781:	call   0x64010756
64010786:	add    esp,0x14
64010789:	ret    
6401078a:	push   esi
6401078b:	push   0x1
6401078d:	push   0x64029034
64010792:	mov    esi,ecx
64010794:	call   0x640104cb
64010799:	mov    DWORD PTR [esi],0x64022304
6401079f:	mov    eax,esi
640107a1:	pop    esi
640107a2:	ret    
640107a3:	push   ebp
640107a4:	mov    ebp,esp
640107a6:	sub    esp,0xc
640107a9:	jmp    0x640107b8
640107ab:	push   DWORD PTR [ebp+0x8]
640107ae:	call   0x6401306b
640107b3:	test   eax,eax
640107b5:	pop    ecx
640107b6:	je     0x640107c7
640107b8:	push   DWORD PTR [ebp+0x8]
640107bb:	call   0x64011b93
640107c0:	test   eax,eax
640107c2:	pop    ecx
640107c3:	je     0x640107ab
640107c5:	leave  
640107c6:	ret    
640107c7:	test   BYTE PTR ds:0x6402a50c,0x1
640107ce:	mov    esi,0x6402a500
640107d3:	jne    0x640107ee
640107d5:	or     DWORD PTR ds:0x6402a50c,0x1
640107dc:	mov    ecx,esi
640107de:	call   0x6401078a
640107e3:	push   0x64021f4a
640107e8:	call   0x64010d51
640107ed:	pop    ecx
640107ee:	push   esi
640107ef:	lea    ecx,[ebp-0xc]
640107f2:	call   0x640104e3
640107f7:	push   0x64026e8c
640107fc:	lea    eax,[ebp-0xc]
640107ff:	push   eax
64010800:	mov    DWORD PTR [ebp-0xc],0x64022304
64010807:	call   0x6401080d
6401080c:	int3   
6401080d:	push   ebp
6401080e:	mov    ebp,esp
64010810:	sub    esp,0x20
64010813:	mov    eax,DWORD PTR [ebp+0x8]
64010816:	push   esi
64010817:	push   edi
64010818:	push   0x8
6401081a:	pop    ecx
6401081b:	mov    esi,0x64022b70
64010820:	lea    edi,[ebp-0x20]
64010823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64010825:	mov    DWORD PTR [ebp-0x8],eax
64010828:	mov    eax,DWORD PTR [ebp+0xc]
6401082b:	test   eax,eax
6401082d:	pop    edi
6401082e:	mov    DWORD PTR [ebp-0x4],eax
64010831:	pop    esi
64010832:	je     0x64010840
64010834:	test   BYTE PTR [eax],0x8
64010837:	je     0x64010840
64010839:	mov    DWORD PTR [ebp-0xc],0x1994000
64010840:	lea    eax,[ebp-0xc]
64010843:	push   eax
64010844:	push   DWORD PTR [ebp-0x10]
64010847:	push   DWORD PTR [ebp-0x1c]
6401084a:	push   DWORD PTR [ebp-0x20]
6401084d:	call   DWORD PTR ds:0x640220f8
64010853:	leave  
64010854:	ret    0x8
64010857:	push   ebp
64010858:	mov    ebp,esp
6401085a:	push   ecx
6401085b:	push   ebx
6401085c:	mov    eax,DWORD PTR [ebp+0xc]
6401085f:	add    eax,0xc
64010862:	mov    DWORD PTR [ebp-0x4],eax
64010865:	mov    ebx,DWORD PTR fs:0x0
6401086c:	mov    eax,DWORD PTR [ebx]
6401086e:	mov    fs:0x0,eax
64010874:	mov    eax,DWORD PTR [ebp+0x8]
64010877:	mov    ebx,DWORD PTR [ebp+0xc]
6401087a:	mov    ebp,DWORD PTR [ebp-0x4]
6401087d:	mov    esp,DWORD PTR [ebx-0x4]
64010880:	jmp    eax
64010882:	pop    ebx
64010883:	leave  
64010884:	ret    0x8
64010887:	pop    eax
64010888:	pop    ecx
64010889:	xchg   DWORD PTR [esp],eax
6401088c:	jmp    eax
6401088e:	push   ebp
6401088f:	mov    ebp,esp
64010891:	push   ecx
64010892:	push   ecx
64010893:	push   ebx
64010894:	push   esi
64010895:	push   edi
64010896:	mov    esi,DWORD PTR fs:0x0
6401089d:	mov    DWORD PTR [ebp-0x4],esi
640108a0:	mov    DWORD PTR [ebp-0x8],0x640108b7
640108a7:	push   0x0
640108a9:	push   DWORD PTR [ebp+0xc]
640108ac:	push   DWORD PTR [ebp-0x8]
640108af:	push   DWORD PTR [ebp+0x8]
640108b2:	call   0x6401ce8c
640108b7:	mov    eax,DWORD PTR [ebp+0xc]
640108ba:	mov    eax,DWORD PTR [eax+0x4]
640108bd:	and    eax,0xfffffffd
640108c0:	mov    ecx,DWORD PTR [ebp+0xc]
640108c3:	mov    DWORD PTR [ecx+0x4],eax
640108c6:	mov    edi,DWORD PTR fs:0x0
640108cd:	mov    ebx,DWORD PTR [ebp-0x4]
640108d0:	mov    DWORD PTR [ebx],edi
640108d2:	mov    DWORD PTR fs:0x0,ebx
640108d9:	pop    edi
640108da:	pop    esi
640108db:	pop    ebx
640108dc:	leave  
640108dd:	ret    0x8
640108e0:	push   ebp
640108e1:	mov    ebp,esp
640108e3:	sub    esp,0x8
640108e6:	push   ebx
640108e7:	push   esi
640108e8:	push   edi
640108e9:	cld    
640108ea:	mov    DWORD PTR [ebp-0x4],eax
640108ed:	xor    eax,eax
640108ef:	push   eax
640108f0:	push   eax
640108f1:	push   eax
640108f2:	push   DWORD PTR [ebp-0x4]
640108f5:	push   DWORD PTR [ebp+0x14]
640108f8:	push   DWORD PTR [ebp+0x10]
640108fb:	push   DWORD PTR [ebp+0xc]
640108fe:	push   DWORD PTR [ebp+0x8]
64010901:	call   0x64013c33
64010906:	add    esp,0x20
64010909:	mov    DWORD PTR [ebp-0x8],eax
6401090c:	pop    edi
6401090d:	pop    esi
6401090e:	pop    ebx
6401090f:	mov    eax,DWORD PTR [ebp-0x8]
64010912:	mov    esp,ebp
64010914:	pop    ebp
64010915:	ret    
64010916:	push   esi
64010917:	cld    
64010918:	mov    esi,DWORD PTR [esp+0xc]
6401091c:	mov    ecx,DWORD PTR [esi+0x8]
6401091f:	xor    ecx,esi
64010921:	call   0x64010c1e
64010926:	push   0x0
64010928:	push   esi
64010929:	push   DWORD PTR [esi+0x14]
6401092c:	push   DWORD PTR [esi+0xc]
6401092f:	push   0x0
64010931:	push   DWORD PTR [esp+0x24]
64010935:	push   DWORD PTR [esi+0x10]
64010938:	push   DWORD PTR [esp+0x24]
6401093c:	call   0x64013c33
64010941:	add    esp,0x20
64010944:	pop    esi
64010945:	ret    
64010946:	push   ebp
64010947:	mov    ebp,esp
64010949:	sub    esp,0x38
6401094c:	push   ebx
6401094d:	cmp    DWORD PTR [ebp+0x8],0x123
64010954:	jne    0x64010968
64010956:	mov    eax,0x640109ef
6401095b:	mov    ecx,DWORD PTR [ebp+0xc]
6401095e:	mov    DWORD PTR [ecx],eax
64010960:	xor    eax,eax
64010962:	inc    eax
64010963:	jmp    0x64010a18
64010968:	and    DWORD PTR [ebp-0x28],0x0
6401096c:	mov    DWORD PTR [ebp-0x24],0x64010a1b
64010973:	mov    eax,ds:0x64029038
64010978:	lea    ecx,[ebp-0x28]
6401097b:	xor    eax,ecx
6401097d:	mov    DWORD PTR [ebp-0x20],eax
64010980:	mov    eax,DWORD PTR [ebp+0x18]
64010983:	mov    DWORD PTR [ebp-0x1c],eax
64010986:	mov    eax,DWORD PTR [ebp+0xc]
64010989:	mov    DWORD PTR [ebp-0x18],eax
6401098c:	mov    eax,DWORD PTR [ebp+0x1c]
6401098f:	mov    DWORD PTR [ebp-0x14],eax
64010992:	mov    eax,DWORD PTR [ebp+0x20]
64010995:	mov    DWORD PTR [ebp-0x10],eax
64010998:	and    DWORD PTR [ebp-0xc],0x0
6401099c:	and    DWORD PTR [ebp-0x8],0x0
640109a0:	and    DWORD PTR [ebp-0x4],0x0
640109a4:	mov    DWORD PTR [ebp-0xc],esp
640109a7:	mov    DWORD PTR [ebp-0x8],ebp
640109aa:	mov    eax,fs:0x0
640109b0:	mov    DWORD PTR [ebp-0x28],eax
640109b3:	lea    eax,[ebp-0x28]
640109b6:	mov    fs:0x0,eax
640109bc:	mov    DWORD PTR [ebp-0x38],0x1
640109c3:	mov    eax,DWORD PTR [ebp+0x8]
640109c6:	mov    DWORD PTR [ebp-0x34],eax
640109c9:	mov    eax,DWORD PTR [ebp+0x10]
640109cc:	mov    DWORD PTR [ebp-0x30],eax
640109cf:	call   0x64012d3b
640109d4:	mov    eax,DWORD PTR [eax+0x80]
640109da:	mov    DWORD PTR [ebp-0x2c],eax
640109dd:	lea    eax,[ebp-0x34]
640109e0:	push   eax
640109e1:	mov    eax,DWORD PTR [ebp+0x8]
640109e4:	push   DWORD PTR [eax]
640109e6:	call   DWORD PTR [ebp-0x2c]
640109e9:	pop    ecx
640109ea:	pop    ecx
640109eb:	and    DWORD PTR [ebp-0x38],0x0
640109ef:	cmp    DWORD PTR [ebp-0x4],0x0
640109f3:	je     0x64010a0c
640109f5:	mov    ebx,DWORD PTR fs:0x0
640109fc:	mov    eax,DWORD PTR [ebx]
640109fe:	mov    ebx,DWORD PTR [ebp-0x28]
64010a01:	mov    DWORD PTR [ebx],eax
64010a03:	mov    DWORD PTR fs:0x0,ebx
64010a0a:	jmp    0x64010a15
64010a0c:	mov    eax,DWORD PTR [ebp-0x28]
64010a0f:	mov    fs:0x0,eax
64010a15:	mov    eax,DWORD PTR [ebp-0x38]
64010a18:	pop    ebx
64010a19:	leave  
64010a1a:	ret    
64010a1b:	push   ebp
64010a1c:	mov    ebp,esp
64010a1e:	push   ecx
64010a1f:	push   ebx
64010a20:	cld    
64010a21:	mov    eax,DWORD PTR [ebp+0xc]
64010a24:	mov    ecx,DWORD PTR [eax+0x8]
64010a27:	xor    ecx,DWORD PTR [ebp+0xc]
64010a2a:	call   0x64010c1e
64010a2f:	mov    eax,DWORD PTR [ebp+0x8]
64010a32:	mov    eax,DWORD PTR [eax+0x4]
64010a35:	and    eax,0x66
64010a38:	je     0x64010a4b
64010a3a:	mov    eax,DWORD PTR [ebp+0xc]
64010a3d:	mov    DWORD PTR [eax+0x24],0x1
64010a44:	xor    eax,eax
64010a46:	inc    eax
64010a47:	jmp    0x64010ab5
64010a49:	jmp    0x64010ab5
64010a4b:	push   0x1
64010a4d:	mov    eax,DWORD PTR [ebp+0xc]
64010a50:	push   DWORD PTR [eax+0x18]
64010a53:	mov    eax,DWORD PTR [ebp+0xc]
64010a56:	push   DWORD PTR [eax+0x14]
64010a59:	mov    eax,DWORD PTR [ebp+0xc]
64010a5c:	push   DWORD PTR [eax+0xc]
64010a5f:	push   0x0
64010a61:	push   DWORD PTR [ebp+0x10]
64010a64:	mov    eax,DWORD PTR [ebp+0xc]
64010a67:	push   DWORD PTR [eax+0x10]
64010a6a:	push   DWORD PTR [ebp+0x8]
64010a6d:	call   0x64013c33
64010a72:	add    esp,0x20
64010a75:	mov    eax,DWORD PTR [ebp+0xc]
64010a78:	cmp    DWORD PTR [eax+0x24],0x0
64010a7c:	jne    0x64010a89
64010a7e:	push   DWORD PTR [ebp+0x8]
64010a81:	push   DWORD PTR [ebp+0xc]
64010a84:	call   0x6401088e
64010a89:	push   0x0
64010a8b:	push   0x0
64010a8d:	push   0x0
64010a8f:	push   0x0
64010a91:	push   0x0
64010a93:	lea    eax,[ebp-0x4]
64010a96:	push   eax
64010a97:	push   0x123
64010a9c:	call   0x64010946
64010aa1:	add    esp,0x1c
64010aa4:	mov    eax,DWORD PTR [ebp-0x4]
64010aa7:	mov    ebx,DWORD PTR [ebp+0xc]
64010aaa:	mov    esp,DWORD PTR [ebx+0x1c]
64010aad:	mov    ebp,DWORD PTR [ebx+0x20]
64010ab0:	jmp    eax
64010ab2:	xor    eax,eax
64010ab4:	inc    eax
64010ab5:	pop    ebx
64010ab6:	leave  
64010ab7:	ret    
64010ab8:	push   ebp
64010ab9:	mov    ebp,esp
64010abb:	push   ecx
64010abc:	push   ebx
64010abd:	push   esi
64010abe:	push   edi
64010abf:	mov    edi,DWORD PTR [ebp+0x8]
64010ac2:	mov    eax,DWORD PTR [edi+0x10]
64010ac5:	mov    esi,DWORD PTR [edi+0xc]
64010ac8:	mov    DWORD PTR [ebp-0x4],eax
64010acb:	mov    ebx,esi
64010acd:	jmp    0x64010afc
64010acf:	cmp    esi,0xffffffff
64010ad2:	jne    0x64010ad9
64010ad4:	call   0x64013d63
64010ad9:	mov    ecx,DWORD PTR [ebp-0x4]
64010adc:	dec    esi
64010add:	mov    eax,esi
64010adf:	imul   eax,eax,0x14
64010ae2:	add    eax,ecx
64010ae4:	mov    ecx,DWORD PTR [ebp+0x10]
64010ae7:	cmp    DWORD PTR [eax+0x4],ecx
64010aea:	jge    0x64010af1
64010aec:	cmp    ecx,DWORD PTR [eax+0x8]
64010aef:	jle    0x64010af6
64010af1:	cmp    esi,0xffffffff
64010af4:	jne    0x64010aff
64010af6:	dec    DWORD PTR [ebp+0xc]
64010af9:	mov    ebx,DWORD PTR [ebp+0x8]
64010afc:	mov    DWORD PTR [ebp+0x8],esi
64010aff:	cmp    DWORD PTR [ebp+0xc],0x0
64010b03:	jge    0x64010acf
64010b05:	mov    eax,DWORD PTR [ebp+0x14]
64010b08:	inc    esi
64010b09:	mov    DWORD PTR [eax],esi
64010b0b:	mov    eax,DWORD PTR [ebp+0x18]
64010b0e:	mov    DWORD PTR [eax],ebx
64010b10:	cmp    ebx,DWORD PTR [edi+0xc]
64010b13:	ja     0x64010b19
64010b15:	cmp    esi,ebx
64010b17:	jbe    0x64010b1e
64010b19:	call   0x64013d63
64010b1e:	mov    eax,esi
64010b20:	imul   eax,eax,0x14
64010b23:	add    eax,DWORD PTR [ebp-0x4]
64010b26:	pop    edi
64010b27:	pop    esi
64010b28:	pop    ebx
64010b29:	leave  
64010b2a:	ret    
64010b2b:	mov    eax,DWORD PTR [esp+0x8]
64010b2f:	push   esi
64010b30:	mov    esi,DWORD PTR [esp+0x8]
64010b34:	mov    DWORD PTR [esi],eax
64010b36:	call   0x64012d3b
64010b3b:	mov    eax,DWORD PTR [eax+0x98]
64010b41:	mov    DWORD PTR [esi+0x4],eax
64010b44:	call   0x64012d3b
64010b49:	mov    DWORD PTR [eax+0x98],esi
64010b4f:	mov    eax,esi
64010b51:	pop    esi
64010b52:	ret    
64010b53:	call   0x64012d3b
64010b58:	mov    eax,DWORD PTR [eax+0x98]
64010b5e:	jmp    0x64010b6b
64010b60:	mov    ecx,DWORD PTR [eax]
64010b62:	cmp    ecx,DWORD PTR [esp+0x4]
64010b66:	je     0x64010b71
64010b68:	mov    eax,DWORD PTR [eax+0x4]
64010b6b:	test   eax,eax
64010b6d:	jne    0x64010b60
64010b6f:	inc    eax
64010b70:	ret    
64010b71:	xor    eax,eax
64010b73:	ret    
64010b74:	push   esi
64010b75:	call   0x64012d3b
64010b7a:	mov    esi,DWORD PTR [esp+0x8]
64010b7e:	cmp    esi,DWORD PTR [eax+0x98]
64010b84:	jne    0x64010b96
64010b86:	call   0x64012d3b
64010b8b:	mov    ecx,DWORD PTR [esi+0x4]
64010b8e:	mov    DWORD PTR [eax+0x98],ecx
64010b94:	pop    esi
64010b95:	ret    
64010b96:	call   0x64012d3b
64010b9b:	mov    eax,DWORD PTR [eax+0x98]
64010ba1:	jmp    0x64010bac
64010ba3:	mov    ecx,DWORD PTR [eax+0x4]
64010ba6:	cmp    esi,ecx
64010ba8:	je     0x64010bb8
64010baa:	mov    eax,ecx
64010bac:	cmp    DWORD PTR [eax+0x4],0x0
64010bb0:	jne    0x64010ba3
64010bb2:	pop    esi
64010bb3:	jmp    0x64013d63
64010bb8:	mov    ecx,DWORD PTR [esi+0x4]
64010bbb:	mov    DWORD PTR [eax+0x4],ecx
64010bbe:	pop    esi
64010bbf:	ret    
64010bc0:	push   ebp
64010bc1:	mov    ebp,esp
64010bc3:	sub    esp,0x18
64010bc6:	mov    eax,ds:0x64029038
64010bcb:	and    DWORD PTR [ebp-0x18],0x0
64010bcf:	lea    ecx,[ebp-0x18]
64010bd2:	xor    eax,ecx
64010bd4:	mov    ecx,DWORD PTR [ebp+0x8]
64010bd7:	mov    DWORD PTR [ebp-0x10],eax
64010bda:	mov    eax,DWORD PTR [ebp+0xc]
64010bdd:	mov    DWORD PTR [ebp-0xc],eax
64010be0:	mov    eax,DWORD PTR [ebp+0x14]
64010be3:	inc    eax
64010be4:	mov    DWORD PTR [ebp-0x14],0x64010916
64010beb:	mov    DWORD PTR [ebp-0x8],ecx
64010bee:	mov    DWORD PTR [ebp-0x4],eax
64010bf1:	mov    eax,fs:0x0
64010bf7:	mov    DWORD PTR [ebp-0x18],eax
64010bfa:	lea    eax,[ebp-0x18]
64010bfd:	mov    fs:0x0,eax
64010c03:	push   DWORD PTR [ebp+0x18]
64010c06:	push   ecx
64010c07:	push   DWORD PTR [ebp+0x10]
64010c0a:	call   0x64013db0
64010c0f:	mov    ecx,eax
64010c11:	mov    eax,DWORD PTR [ebp-0x18]
64010c14:	mov    fs:0x0,eax
64010c1a:	mov    eax,ecx
64010c1c:	leave  
64010c1d:	ret    
64010c1e:	cmp    ecx,DWORD PTR ds:0x64029038
64010c24:	jne    0x64010c28
64010c26:	repz ret 
64010c28:	jmp    0x64013dfc
64010c2d:	push   ecx
64010c2e:	push   ebx
64010c2f:	push   ebp
64010c30:	push   esi
64010c31:	push   edi
64010c32:	push   DWORD PTR ds:0x6402e5b0
64010c38:	call   0x64012b1f
64010c3d:	push   DWORD PTR ds:0x6402e5ac
64010c43:	mov    esi,eax
64010c45:	mov    DWORD PTR [esp+0x18],esi
64010c49:	call   0x64012b1f
64010c4e:	mov    edi,eax
64010c50:	cmp    edi,esi
64010c52:	pop    ecx
64010c53:	pop    ecx
64010c54:	jb     0x64010cde
64010c5a:	mov    ebx,edi
64010c5c:	sub    ebx,esi
64010c5e:	lea    ebp,[ebx+0x4]
64010c61:	cmp    ebp,0x4
64010c64:	jb     0x64010cde
64010c66:	push   esi
64010c67:	call   0x64013fd3
64010c6c:	mov    esi,eax
64010c6e:	cmp    esi,ebp
64010c70:	pop    ecx
64010c71:	jae    0x64010cbd
64010c73:	mov    eax,0x800
64010c78:	cmp    esi,eax
64010c7a:	jae    0x64010c7e
64010c7c:	mov    eax,esi
64010c7e:	add    eax,esi
64010c80:	cmp    eax,esi
64010c82:	jb     0x64010c94
64010c84:	push   eax
64010c85:	push   DWORD PTR [esp+0x14]
64010c89:	call   0x64013f88
64010c8e:	test   eax,eax
64010c90:	pop    ecx
64010c91:	pop    ecx
64010c92:	jne    0x64010cab
64010c94:	lea    eax,[esi+0x10]
64010c97:	cmp    eax,esi
64010c99:	jb     0x64010cde
64010c9b:	push   eax
64010c9c:	push   DWORD PTR [esp+0x14]
64010ca0:	call   0x64013f88
64010ca5:	test   eax,eax
64010ca7:	pop    ecx
64010ca8:	pop    ecx
64010ca9:	je     0x64010cde
64010cab:	sar    ebx,0x2
64010cae:	push   eax
64010caf:	lea    edi,[eax+ebx*4]
64010cb2:	call   0x64012aa8
64010cb7:	pop    ecx
64010cb8:	mov    ds:0x6402e5b0,eax
64010cbd:	push   DWORD PTR [esp+0x18]
64010cc1:	call   0x64012aa8
64010cc6:	mov    DWORD PTR [edi],eax
64010cc8:	add    edi,0x4
64010ccb:	push   edi
64010ccc:	call   0x64012aa8
64010cd1:	pop    ecx
64010cd2:	mov    ds:0x6402e5ac,eax
64010cd7:	mov    eax,DWORD PTR [esp+0x1c]
64010cdb:	pop    ecx
64010cdc:	jmp    0x64010ce0
64010cde:	xor    eax,eax
64010ce0:	pop    edi
64010ce1:	pop    esi
64010ce2:	pop    ebp
64010ce3:	pop    ebx
64010ce4:	pop    ecx
64010ce5:	ret    
64010ce6:	push   esi
64010ce7:	push   0x4
64010ce9:	push   0x20
64010ceb:	call   0x64013f40
64010cf0:	mov    esi,eax
64010cf2:	push   esi
64010cf3:	call   0x64012aa8
64010cf8:	add    esp,0xc
64010cfb:	test   esi,esi
64010cfd:	mov    ds:0x6402e5b0,eax
64010d02:	mov    ds:0x6402e5ac,eax
64010d07:	jne    0x64010d0e
64010d09:	push   0x18
64010d0b:	pop    eax
64010d0c:	pop    esi
64010d0d:	ret    
64010d0e:	and    DWORD PTR [esi],0x0
64010d11:	xor    eax,eax
64010d13:	pop    esi
64010d14:	ret    
64010d15:	push   0xc
64010d17:	push   0x64026898
64010d1c:	call   0x64011fc8
64010d21:	call   0x640140d5
64010d26:	and    DWORD PTR [ebp-0x4],0x0
64010d2a:	push   DWORD PTR [ebp+0x8]
64010d2d:	call   0x64010c2d
64010d32:	pop    ecx
64010d33:	mov    DWORD PTR [ebp-0x1c],eax
64010d36:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64010d3d:	call   0x64010d4b
64010d42:	mov    eax,DWORD PTR [ebp-0x1c]
64010d45:	call   0x6401200d
64010d4a:	ret    
64010d4b:	call   0x640140de
64010d50:	ret    
64010d51:	push   DWORD PTR [esp+0x4]
64010d55:	call   0x64010d15
64010d5a:	neg    eax
64010d5c:	sbb    eax,eax
64010d5e:	neg    eax
64010d60:	pop    ecx
64010d61:	dec    eax
64010d62:	ret    
64010d63:	mov    eax,DWORD PTR [esp+0x4]
64010d67:	push   ebx
64010d68:	mov    ebx,DWORD PTR [esp+0xc]
64010d6c:	cmp    WORD PTR [ebx],0x0
64010d70:	push   edi
64010d71:	mov    edi,eax
64010d73:	je     0x64010dba
64010d75:	movzx  ecx,WORD PTR [eax]
64010d78:	test   cx,cx
64010d7b:	je     0x64010db8
64010d7d:	movzx  edx,cx
64010d80:	sub    eax,ebx
64010d82:	test   dx,dx
64010d85:	mov    ecx,DWORD PTR [esp+0x10]
64010d89:	je     0x64010da6
64010d8b:	movzx  edx,WORD PTR [ecx]
64010d8e:	test   dx,dx
64010d91:	je     0x64010dbd
64010d93:	movzx  ebx,WORD PTR [eax+ecx*1]
64010d97:	movzx  edx,dx
64010d9a:	sub    ebx,edx
64010d9c:	jne    0x64010da6
64010d9e:	inc    ecx
64010d9f:	inc    ecx
64010da0:	cmp    WORD PTR [eax+ecx*1],bx
64010da4:	jne    0x64010d8b
64010da6:	cmp    WORD PTR [ecx],0x0
64010daa:	je     0x64010dbd
64010dac:	inc    edi
64010dad:	inc    edi
64010dae:	movzx  edx,WORD PTR [edi]
64010db1:	inc    eax
64010db2:	inc    eax
64010db3:	test   dx,dx
64010db6:	jne    0x64010d82
64010db8:	xor    eax,eax
64010dba:	pop    edi
64010dbb:	pop    ebx
64010dbc:	ret    
64010dbd:	mov    eax,edi
64010dbf:	jmp    0x64010dba
64010dc1:	mov    eax,DWORD PTR [esp+0x4]
64010dc5:	test   eax,eax
64010dc7:	push   esi
64010dc8:	mov    esi,ecx
64010dca:	mov    BYTE PTR [esi+0xc],0x0
64010dce:	jne    0x64010e33
64010dd0:	call   0x64012d3b
64010dd5:	mov    DWORD PTR [esi+0x8],eax
64010dd8:	mov    ecx,DWORD PTR [eax+0x6c]
64010ddb:	mov    DWORD PTR [esi],ecx
64010ddd:	mov    ecx,DWORD PTR [eax+0x68]
64010de0:	mov    DWORD PTR [esi+0x4],ecx
64010de3:	mov    ecx,DWORD PTR [esi]
64010de5:	cmp    ecx,DWORD PTR ds:0x64029800
64010deb:	je     0x64010dff
64010ded:	mov    ecx,DWORD PTR ds:0x6402971c
64010df3:	test   DWORD PTR [eax+0x70],ecx
64010df6:	jne    0x64010dff
64010df8:	call   0x64014cbf
64010dfd:	mov    DWORD PTR [esi],eax
64010dff:	mov    eax,DWORD PTR [esi+0x4]
64010e02:	cmp    eax,DWORD PTR ds:0x64029620
64010e08:	je     0x64010e20
64010e0a:	mov    eax,DWORD PTR [esi+0x8]
64010e0d:	mov    ecx,DWORD PTR ds:0x6402971c
64010e13:	test   DWORD PTR [eax+0x70],ecx
64010e16:	jne    0x64010e20
64010e18:	call   0x64014580
64010e1d:	mov    DWORD PTR [esi+0x4],eax
64010e20:	mov    eax,DWORD PTR [esi+0x8]
64010e23:	test   BYTE PTR [eax+0x70],0x2
64010e27:	jne    0x64010e3d
64010e29:	or     DWORD PTR [eax+0x70],0x2
64010e2d:	mov    BYTE PTR [esi+0xc],0x1
64010e31:	jmp    0x64010e3d
64010e33:	mov    ecx,DWORD PTR [eax]
64010e35:	mov    DWORD PTR [esi],ecx
64010e37:	mov    eax,DWORD PTR [eax+0x4]
64010e3a:	mov    DWORD PTR [esi+0x4],eax
64010e3d:	mov    eax,esi
64010e3f:	pop    esi
64010e40:	ret    0x4
64010e43:	push   ebp
64010e44:	mov    ebp,esp
64010e46:	sub    esp,0x20
64010e49:	push   esi
64010e4a:	xor    esi,esi
64010e4c:	cmp    DWORD PTR [ebp+0xc],esi
64010e4f:	jne    0x64010e6e
64010e51:	call   0x640129f0
64010e56:	push   esi
64010e57:	push   esi
64010e58:	push   esi
64010e59:	push   esi
64010e5a:	push   esi
64010e5b:	mov    DWORD PTR [eax],0x16
64010e61:	call   0x64010756
64010e66:	add    esp,0x14
64010e69:	or     eax,0xffffffff
64010e6c:	jmp    0x64010e95
64010e6e:	push   DWORD PTR [ebp+0x14]
64010e71:	lea    eax,[ebp-0x20]
64010e74:	push   DWORD PTR [ebp+0x10]
64010e77:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64010e7e:	push   DWORD PTR [ebp+0xc]
64010e81:	mov    DWORD PTR [ebp-0x14],0x42
64010e88:	push   eax
64010e89:	mov    DWORD PTR [ebp-0x18],esi
64010e8c:	mov    DWORD PTR [ebp-0x20],esi
64010e8f:	call   DWORD PTR [ebp+0x8]
64010e92:	add    esp,0x10
64010e95:	pop    esi
64010e96:	leave  
64010e97:	ret    
64010e98:	push   DWORD PTR [esp+0x8]
64010e9c:	push   0x0
64010e9e:	push   DWORD PTR [esp+0xc]
64010ea2:	push   0x64014f09
64010ea7:	call   0x64010e43
64010eac:	add    esp,0x10
64010eaf:	ret    
64010eb0:	push   ebp
64010eb1:	mov    ebp,esp
64010eb3:	sub    esp,0x20
64010eb6:	push   ebx
64010eb7:	xor    ebx,ebx
64010eb9:	cmp    DWORD PTR [ebp+0x14],ebx
64010ebc:	jne    0x64010ede
64010ebe:	call   0x640129f0
64010ec3:	push   ebx
64010ec4:	push   ebx
64010ec5:	push   ebx
64010ec6:	push   ebx
64010ec7:	push   ebx
64010ec8:	mov    DWORD PTR [eax],0x16
64010ece:	call   0x64010756
64010ed3:	add    esp,0x14
64010ed6:	or     eax,0xffffffff
64010ed9:	jmp    0x64010fa3
64010ede:	push   esi
64010edf:	mov    esi,DWORD PTR [ebp+0xc]
64010ee2:	push   edi
64010ee3:	mov    edi,DWORD PTR [ebp+0x10]
64010ee6:	cmp    edi,ebx
64010ee8:	je     0x64010f0e
64010eea:	cmp    esi,ebx
64010eec:	jne    0x64010f0e
64010eee:	call   0x640129f0
64010ef3:	push   ebx
64010ef4:	push   ebx
64010ef5:	push   ebx
64010ef6:	push   ebx
64010ef7:	push   ebx
64010ef8:	mov    DWORD PTR [eax],0x16
64010efe:	call   0x64010756
64010f03:	add    esp,0x14
64010f06:	or     eax,0xffffffff
64010f09:	jmp    0x64010fa1
64010f0e:	cmp    edi,0x3fffffff
64010f14:	mov    DWORD PTR [ebp-0x14],0x42
64010f1b:	mov    DWORD PTR [ebp-0x18],esi
64010f1e:	mov    DWORD PTR [ebp-0x20],esi
64010f21:	jbe    0x64010f2c
64010f23:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64010f2a:	jmp    0x64010f32
64010f2c:	lea    eax,[edi+edi*1]
64010f2f:	mov    DWORD PTR [ebp-0x1c],eax
64010f32:	push   DWORD PTR [ebp+0x1c]
64010f35:	lea    eax,[ebp-0x20]
64010f38:	push   DWORD PTR [ebp+0x18]
64010f3b:	push   DWORD PTR [ebp+0x14]
64010f3e:	push   eax
64010f3f:	call   DWORD PTR [ebp+0x8]
64010f42:	add    esp,0x10
64010f45:	cmp    esi,ebx
64010f47:	mov    DWORD PTR [ebp+0x14],eax
64010f4a:	je     0x64010fa1
64010f4c:	cmp    eax,ebx
64010f4e:	jl     0x64010f92
64010f50:	dec    DWORD PTR [ebp-0x1c]
64010f53:	js     0x64010f5f
64010f55:	mov    eax,DWORD PTR [ebp-0x20]
64010f58:	mov    BYTE PTR [eax],bl
64010f5a:	inc    DWORD PTR [ebp-0x20]
64010f5d:	jmp    0x64010f70
64010f5f:	lea    eax,[ebp-0x20]
64010f62:	push   eax
64010f63:	push   ebx
64010f64:	call   0x64014d35
64010f69:	cmp    eax,0xffffffff
64010f6c:	pop    ecx
64010f6d:	pop    ecx
64010f6e:	je     0x64010f92
64010f70:	dec    DWORD PTR [ebp-0x1c]
64010f73:	js     0x64010f7c
64010f75:	mov    eax,DWORD PTR [ebp-0x20]
64010f78:	mov    BYTE PTR [eax],bl
64010f7a:	jmp    0x64010f8d
64010f7c:	lea    eax,[ebp-0x20]
64010f7f:	push   eax
64010f80:	push   ebx
64010f81:	call   0x64014d35
64010f86:	cmp    eax,0xffffffff
64010f89:	pop    ecx
64010f8a:	pop    ecx
64010f8b:	je     0x64010f92
64010f8d:	mov    eax,DWORD PTR [ebp+0x14]
64010f90:	jmp    0x64010fa1
64010f92:	xor    eax,eax
64010f94:	cmp    DWORD PTR [ebp-0x1c],ebx
64010f97:	mov    WORD PTR [esi+edi*2-0x2],bx
64010f9c:	setge  al
64010f9f:	dec    eax
64010fa0:	dec    eax
64010fa1:	pop    edi
64010fa2:	pop    esi
64010fa3:	pop    ebx
64010fa4:	leave  
64010fa5:	ret    
64010fa6:	push   ebp
64010fa7:	mov    ebp,esp
64010fa9:	push   esi
64010faa:	xor    esi,esi
64010fac:	cmp    DWORD PTR [ebp+0x10],esi
64010faf:	jne    0x64010fce
64010fb1:	call   0x640129f0
64010fb6:	push   esi
64010fb7:	push   esi
64010fb8:	push   esi
64010fb9:	push   esi
64010fba:	push   esi
64010fbb:	mov    DWORD PTR [eax],0x16
64010fc1:	call   0x64010756
64010fc6:	add    esp,0x14
64010fc9:	or     eax,0xffffffff
64010fcc:	jmp    0x6401102a
64010fce:	push   edi
64010fcf:	mov    edi,DWORD PTR [ebp+0x8]
64010fd2:	cmp    edi,esi
64010fd4:	je     0x64010fdb
64010fd6:	cmp    DWORD PTR [ebp+0xc],esi
64010fd9:	ja     0x64010fe8
64010fdb:	call   0x640129f0
64010fe0:	mov    DWORD PTR [eax],0x16
64010fe6:	jmp    0x64011019
64010fe8:	push   DWORD PTR [ebp+0x18]
64010feb:	push   DWORD PTR [ebp+0x14]
64010fee:	push   DWORD PTR [ebp+0x10]
64010ff1:	push   DWORD PTR [ebp+0xc]
64010ff4:	push   edi
64010ff5:	push   0x6401583e
64010ffa:	call   0x64010eb0
64010fff:	add    esp,0x18
64011002:	cmp    eax,esi
64011004:	jge    0x64011009
64011006:	mov    WORD PTR [edi],si
64011009:	cmp    eax,0xfffffffe
6401100c:	jne    0x64011029
6401100e:	call   0x640129f0
64011013:	mov    DWORD PTR [eax],0x22
64011019:	push   esi
6401101a:	push   esi
6401101b:	push   esi
6401101c:	push   esi
6401101d:	push   esi
6401101e:	call   0x64010756
64011023:	add    esp,0x14
64011026:	or     eax,0xffffffff
64011029:	pop    edi
6401102a:	pop    esi
6401102b:	pop    ebp
6401102c:	ret    
6401102d:	push   DWORD PTR [esp+0x10]
64011031:	push   0x0
64011033:	push   DWORD PTR [esp+0x14]
64011037:	push   DWORD PTR [esp+0x14]
6401103b:	push   DWORD PTR [esp+0x14]
6401103f:	call   0x64010fa6
64011044:	add    esp,0x14
64011047:	ret    
64011048:	mov    edx,DWORD PTR [esp+0x4]
6401104c:	push   ebx
6401104d:	push   esi
6401104e:	xor    esi,esi
64011050:	cmp    edx,esi
64011052:	push   edi
64011053:	je     0x6401105d
64011055:	mov    ebx,DWORD PTR [esp+0x14]
64011059:	cmp    ebx,esi
6401105b:	ja     0x64011078
6401105d:	call   0x640129f0
64011062:	push   0x16
64011064:	pop    edi
64011065:	mov    DWORD PTR [eax],edi
64011067:	push   esi
64011068:	push   esi
64011069:	push   esi
6401106a:	push   esi
6401106b:	push   esi
6401106c:	call   0x64010756
64011071:	add    esp,0x14
64011074:	mov    eax,edi
64011076:	jmp    0x640110be
64011078:	mov    edi,DWORD PTR [esp+0x18]
6401107c:	cmp    edi,esi
6401107e:	jne    0x64011085
64011080:	mov    WORD PTR [edx],si
64011083:	jmp    0x6401105d
64011085:	mov    ecx,edx
64011087:	cmp    WORD PTR [ecx],si
6401108a:	je     0x64011091
6401108c:	inc    ecx
6401108d:	inc    ecx
6401108e:	dec    ebx
6401108f:	jne    0x64011087
64011091:	cmp    ebx,esi
64011093:	je     0x64011080
64011095:	movzx  eax,WORD PTR [edi]
64011098:	mov    WORD PTR [ecx],ax
6401109b:	inc    ecx
6401109c:	inc    ecx
6401109d:	inc    edi
6401109e:	inc    edi
6401109f:	cmp    ax,si
640110a2:	je     0x640110a7
640110a4:	dec    ebx
640110a5:	jne    0x64011095
640110a7:	cmp    ebx,esi
640110a9:	jne    0x640110bc
640110ab:	mov    WORD PTR [edx],si
640110ae:	call   0x640129f0
640110b3:	push   0x22
640110b5:	pop    ecx
640110b6:	mov    DWORD PTR [eax],ecx
640110b8:	mov    edi,ecx
640110ba:	jmp    0x64011067
640110bc:	xor    eax,eax
640110be:	pop    edi
640110bf:	pop    esi
640110c0:	pop    ebx
640110c1:	ret    
640110c2:	mov    ecx,DWORD PTR [esp+0x4]
640110c6:	push   ebx
640110c7:	push   esi
640110c8:	push   edi
640110c9:	xor    edi,edi
640110cb:	cmp    ecx,edi
640110cd:	je     0x640110d7
640110cf:	mov    ebx,DWORD PTR [esp+0x14]
640110d3:	cmp    ebx,edi
640110d5:	ja     0x640110f2
640110d7:	call   0x640129f0
640110dc:	push   0x16
640110de:	pop    esi
640110df:	mov    DWORD PTR [eax],esi
640110e1:	push   edi
640110e2:	push   edi
640110e3:	push   edi
640110e4:	push   edi
640110e5:	push   edi
640110e6:	call   0x64010756
640110eb:	add    esp,0x14
640110ee:	mov    eax,esi
640110f0:	jmp    0x6401112a
640110f2:	mov    esi,DWORD PTR [esp+0x18]
640110f6:	cmp    esi,edi
640110f8:	jne    0x640110ff
640110fa:	mov    WORD PTR [ecx],di
640110fd:	jmp    0x640110d7
640110ff:	mov    edx,ecx
64011101:	movzx  eax,WORD PTR [esi]
64011104:	mov    WORD PTR [edx],ax
64011107:	inc    edx
64011108:	inc    edx
64011109:	inc    esi
6401110a:	inc    esi
6401110b:	cmp    ax,di
6401110e:	je     0x64011113
64011110:	dec    ebx
64011111:	jne    0x64011101
64011113:	cmp    ebx,edi
64011115:	jne    0x64011128
64011117:	mov    WORD PTR [ecx],di
6401111a:	call   0x640129f0
6401111f:	push   0x22
64011121:	pop    ecx
64011122:	mov    DWORD PTR [eax],ecx
64011124:	mov    esi,ecx
64011126:	jmp    0x640110e1
64011128:	xor    eax,eax
6401112a:	pop    edi
6401112b:	pop    esi
6401112c:	pop    ebx
6401112d:	ret    
6401112e:	mov    eax,DWORD PTR [esp+0x4]
64011132:	test   eax,eax
64011134:	je     0x64011148
64011136:	sub    eax,0x8
64011139:	cmp    DWORD PTR [eax],0xdddd
6401113f:	jne    0x64011148
64011141:	push   eax
64011142:	call   0x64011ab6
64011147:	pop    ecx
64011148:	ret    
64011149:	push   ebp
6401114a:	mov    ebp,esp
6401114c:	sub    esp,0xc
6401114f:	mov    eax,ds:0x64029038
64011154:	xor    eax,ebp
64011156:	mov    DWORD PTR [ebp-0x4],eax
64011159:	push   esi
6401115a:	xor    esi,esi
6401115c:	cmp    ebx,esi
6401115e:	push   edi
6401115f:	jne    0x6401117f
64011161:	call   0x640129f0
64011166:	push   0x16
64011168:	pop    edi
64011169:	push   esi
6401116a:	push   esi
6401116b:	push   esi
6401116c:	push   esi
6401116d:	push   esi
6401116e:	mov    DWORD PTR [eax],edi
64011170:	call   0x64010756
64011175:	add    esp,0x14
64011178:	mov    eax,edi
6401117a:	jmp    0x640112bf
6401117f:	push   DWORD PTR [ebp+0x8]
64011182:	push   ebx
64011183:	call   0x640163fb
64011188:	cmp    eax,DWORD PTR [ebp+0x8]
6401118b:	pop    ecx
6401118c:	pop    ecx
6401118d:	jb     0x64011194
6401118f:	mov    WORD PTR [ebx],si
64011192:	jmp    0x64011161
64011194:	mov    edx,DWORD PTR [ebp+0xc]
64011197:	mov    eax,DWORD PTR [edx]
64011199:	mov    ecx,DWORD PTR [eax+0x14]
6401119c:	cmp    ecx,esi
6401119e:	jne    0x640111ca
640111a0:	cmp    WORD PTR [ebx],si
640111a3:	mov    eax,ebx
640111a5:	je     0x640111c3
640111a7:	movzx  ecx,WORD PTR [eax]
640111aa:	cmp    cx,0x41
640111ae:	jb     0x640111bc
640111b0:	cmp    cx,0x5a
640111b4:	ja     0x640111bc
640111b6:	add    ecx,0x20
640111b9:	mov    WORD PTR [eax],cx
640111bc:	inc    eax
640111bd:	inc    eax
640111be:	cmp    WORD PTR [eax],si
640111c1:	jne    0x640111a7
640111c3:	xor    eax,eax
640111c5:	jmp    0x640112bf
640111ca:	push   DWORD PTR [eax+0x4]
640111cd:	mov    edi,0x100
640111d2:	push   esi
640111d3:	push   esi
640111d4:	push   0xffffffff
640111d6:	push   ebx
640111d7:	push   edi
640111d8:	push   ecx
640111d9:	push   edx
640111da:	call   0x640163bb
640111df:	mov    ecx,eax
640111e1:	add    esp,0x20
640111e4:	cmp    ecx,esi
640111e6:	mov    DWORD PTR [ebp-0xc],ecx
640111e9:	jne    0x64011202
640111eb:	call   0x640129f0
640111f0:	mov    DWORD PTR [eax],0x2a
640111f6:	call   0x640129f0
640111fb:	mov    eax,DWORD PTR [eax]
640111fd:	jmp    0x640112bf
64011202:	cmp    DWORD PTR [ebp+0x8],ecx
64011205:	jae    0x64011216
64011207:	mov    WORD PTR [ebx],si
6401120a:	call   0x640129f0
6401120f:	push   0x22
64011211:	jmp    0x64011168
64011216:	cmp    ecx,esi
64011218:	jle    0x64011260
6401121a:	push   0xffffffe0
6401121c:	xor    edx,edx
6401121e:	pop    eax
6401121f:	div    ecx
64011221:	cmp    eax,0x2
64011224:	jb     0x64011260
64011226:	lea    eax,[ecx+ecx*1+0x8]
6401122a:	cmp    eax,0x400
6401122f:	ja     0x64011244
64011231:	call   0x640113a0
64011236:	mov    eax,esp
64011238:	cmp    eax,esi
6401123a:	je     0x64011258
6401123c:	mov    DWORD PTR [eax],0xcccc
64011242:	jmp    0x64011255
64011244:	push   eax
64011245:	call   0x64011b93
6401124a:	cmp    eax,esi
6401124c:	pop    ecx
6401124d:	je     0x64011258
6401124f:	mov    DWORD PTR [eax],0xdddd
64011255:	add    eax,0x8
64011258:	mov    ecx,DWORD PTR [ebp-0xc]
6401125b:	mov    DWORD PTR [ebp-0x8],eax
6401125e:	jmp    0x64011263
64011260:	mov    DWORD PTR [ebp-0x8],esi
64011263:	cmp    DWORD PTR [ebp-0x8],esi
64011266:	jne    0x64011275
64011268:	call   0x640129f0
6401126d:	mov    DWORD PTR [eax],0xc
64011273:	jmp    0x640111f6
64011275:	mov    edx,DWORD PTR [ebp+0xc]
64011278:	mov    eax,DWORD PTR [edx]
6401127a:	push   DWORD PTR [eax+0x4]
6401127d:	push   ecx
6401127e:	push   DWORD PTR [ebp-0x8]
64011281:	push   0xffffffff
64011283:	push   ebx
64011284:	push   edi
64011285:	push   DWORD PTR [eax+0x14]
64011288:	push   edx
64011289:	call   0x640163bb
6401128e:	add    esp,0x20
64011291:	test   eax,eax
64011293:	je     0x640112a8
64011295:	push   DWORD PTR [ebp-0x8]
64011298:	push   DWORD PTR [ebp+0x8]
6401129b:	push   ebx
6401129c:	call   0x640110c2
640112a1:	add    esp,0xc
640112a4:	mov    esi,eax
640112a6:	jmp    0x640112b4
640112a8:	call   0x640129f0
640112ad:	push   0x2a
640112af:	pop    ecx
640112b0:	mov    DWORD PTR [eax],ecx
640112b2:	mov    esi,ecx
640112b4:	push   DWORD PTR [ebp-0x8]
640112b7:	call   0x6401112e
640112bc:	pop    ecx
640112bd:	mov    eax,esi
640112bf:	lea    esp,[ebp-0x14]
640112c2:	pop    edi
640112c3:	pop    esi
640112c4:	mov    ecx,DWORD PTR [ebp-0x4]
640112c7:	xor    ecx,ebp
640112c9:	call   0x64010c1e
640112ce:	leave  
640112cf:	ret    
640112d0:	push   ebp
640112d1:	mov    ebp,esp
640112d3:	sub    esp,0x10
640112d6:	push   ebx
640112d7:	push   DWORD PTR [ebp+0x10]
640112da:	lea    ecx,[ebp-0x10]
640112dd:	call   0x64010dc1
640112e2:	mov    ebx,DWORD PTR [ebp+0x8]
640112e5:	lea    eax,[ebp-0x10]
640112e8:	push   eax
640112e9:	push   DWORD PTR [ebp+0xc]
640112ec:	call   0x64011149
640112f1:	cmp    BYTE PTR [ebp-0x4],0x0
640112f5:	pop    ecx
640112f6:	pop    ecx
640112f7:	pop    ebx
640112f8:	je     0x64011301
640112fa:	mov    ecx,DWORD PTR [ebp-0x8]
640112fd:	and    DWORD PTR [ecx+0x70],0xfffffffd
64011301:	leave  
64011302:	ret    
64011303:	push   0x0
64011305:	push   DWORD PTR [esp+0xc]
64011309:	push   DWORD PTR [esp+0xc]
6401130d:	call   0x640112d0
64011312:	add    esp,0xc
64011315:	ret    
64011316:	jmp    0x64010422
6401131b:	int3   
6401131c:	int3   
6401131d:	int3   
6401131e:	int3   
6401131f:	int3   
64011320:	mov    edx,DWORD PTR [esp+0xc]
64011324:	mov    ecx,DWORD PTR [esp+0x4]
64011328:	test   edx,edx
6401132a:	je     0x64011395
6401132c:	xor    eax,eax
6401132e:	mov    al,BYTE PTR [esp+0x8]
64011332:	test   al,al
64011334:	jne    0x6401134c
64011336:	cmp    edx,0x100
6401133c:	jb     0x6401134c
6401133e:	cmp    DWORD PTR ds:0x6402e5a4,0x0
64011345:	je     0x6401134c
64011347:	jmp    0x6401646e
6401134c:	push   edi
6401134d:	mov    edi,ecx
6401134f:	cmp    edx,0x4
64011352:	jb     0x64011385
64011354:	neg    ecx
64011356:	and    ecx,0x3
64011359:	je     0x64011367
6401135b:	sub    edx,ecx
6401135d:	mov    BYTE PTR [edi],al
6401135f:	add    edi,0x1
64011362:	sub    ecx,0x1
64011365:	jne    0x6401135d
64011367:	mov    ecx,eax
64011369:	shl    eax,0x8
6401136c:	add    eax,ecx
6401136e:	mov    ecx,eax
64011370:	shl    eax,0x10
64011373:	add    eax,ecx
64011375:	mov    ecx,edx
64011377:	and    edx,0x3
6401137a:	shr    ecx,0x2
6401137d:	je     0x64011385
6401137f:	rep stos DWORD PTR es:[edi],eax
64011381:	test   edx,edx
64011383:	je     0x6401138f
64011385:	mov    BYTE PTR [edi],al
64011387:	add    edi,0x1
6401138a:	sub    edx,0x1
6401138d:	jne    0x64011385
6401138f:	mov    eax,DWORD PTR [esp+0x8]
64011393:	pop    edi
64011394:	ret    
64011395:	mov    eax,DWORD PTR [esp+0x4]
64011399:	ret    
6401139a:	int3   
6401139b:	int3   
6401139c:	int3   
6401139d:	int3   
6401139e:	int3   
6401139f:	int3   
640113a0:	push   ecx
640113a1:	lea    ecx,[esp+0x8]
640113a5:	sub    ecx,eax
640113a7:	and    ecx,0xf
640113aa:	add    eax,ecx
640113ac:	sbb    ecx,ecx
640113ae:	or     eax,ecx
640113b0:	pop    ecx
640113b1:	jmp    0x64016520
640113b6:	push   ecx
640113b7:	lea    ecx,[esp+0x8]
640113bb:	sub    ecx,eax
640113bd:	and    ecx,0x7
640113c0:	add    eax,ecx
640113c2:	sbb    ecx,ecx
640113c4:	or     eax,ecx
640113c6:	pop    ecx
640113c7:	jmp    0x64016520
640113cc:	call   0x64012d3b
640113d1:	mov    ecx,DWORD PTR [esp+0x4]
640113d5:	mov    DWORD PTR [eax+0x14],ecx
640113d8:	ret    
640113d9:	call   0x64012d3b
640113de:	mov    ecx,DWORD PTR [eax+0x14]
640113e1:	imul   ecx,ecx,0x343fd
640113e7:	add    ecx,0x269ec3
640113ed:	mov    DWORD PTR [eax+0x14],ecx
640113f0:	mov    eax,ecx
640113f2:	shr    eax,0x10
640113f5:	and    eax,0x7fff
640113fa:	ret    
640113fb:	push   ebp
640113fc:	mov    ebp,esp
640113fe:	push   ecx
640113ff:	mov    eax,DWORD PTR [ebp+0xc]
64011402:	cmp    eax,0x1
64011405:	push   ebx
64011406:	push   esi
64011407:	push   edi
64011408:	jne    0x64011525
6401140e:	mov    ebx,DWORD PTR ds:0x64022110
64011414:	mov    edi,0x94
64011419:	push   edi
6401141a:	push   0x0
6401141c:	call   ebx
6401141e:	push   eax
6401141f:	call   DWORD PTR ds:0x64022100
64011425:	mov    esi,eax
64011427:	test   esi,esi
64011429:	jne    0x64011432
6401142b:	xor    eax,eax
6401142d:	jmp    0x640115cd
64011432:	push   esi
64011433:	mov    DWORD PTR [esi],edi
64011435:	call   DWORD PTR ds:0x640220f4
6401143b:	test   eax,eax
6401143d:	push   esi
6401143e:	push   0x0
64011440:	jne    0x6401144d
64011442:	call   ebx
64011444:	push   eax
64011445:	call   DWORD PTR ds:0x64022104
6401144b:	jmp    0x6401142b
6401144d:	mov    eax,DWORD PTR [esi+0x10]
64011450:	mov    edi,DWORD PTR [esi+0xc]
64011453:	mov    DWORD PTR [ebp+0xc],eax
64011456:	mov    eax,DWORD PTR [esi+0x4]
64011459:	mov    DWORD PTR [ebp+0x10],eax
6401145c:	mov    eax,DWORD PTR [esi+0x8]
6401145f:	mov    DWORD PTR [ebp-0x4],eax
64011462:	and    edi,0x7fff
64011468:	call   ebx
6401146a:	push   eax
6401146b:	call   DWORD PTR ds:0x64022104
64011471:	mov    eax,DWORD PTR [ebp+0xc]
64011474:	cmp    eax,0x2
64011477:	je     0x6401147f
64011479:	or     edi,0x8000
6401147f:	mov    ecx,DWORD PTR [ebp-0x4]
64011482:	mov    ds:0x6402a874,eax
64011487:	mov    eax,DWORD PTR [ebp+0x10]
6401148a:	mov    edx,eax
6401148c:	shl    edx,0x8
6401148f:	add    edx,ecx
64011491:	push   0x1
64011493:	mov    DWORD PTR ds:0x6402a87c,edx
64011499:	mov    ds:0x6402a880,eax
6401149e:	mov    DWORD PTR ds:0x6402a884,ecx
640114a4:	mov    DWORD PTR ds:0x6402a878,edi
640114aa:	call   0x64016cef
640114af:	test   eax,eax
640114b1:	pop    ecx
640114b2:	je     0x6401142b
640114b8:	call   0x64012edd
640114bd:	test   eax,eax
640114bf:	jne    0x640114cb
640114c1:	call   0x64016d49
640114c6:	jmp    0x6401142b
640114cb:	call   0x64016c4c
640114d0:	call   DWORD PTR ds:0x6402212c
640114d6:	mov    ds:0x6402e5c0,eax
640114db:	call   0x64016b17
640114e0:	mov    ds:0x6402a514,eax
640114e5:	call   0x6401654b
640114ea:	test   eax,eax
640114ec:	jge    0x640114f5
640114ee:	call   0x64012bc8
640114f3:	jmp    0x640114c1
640114f5:	call   0x64016a5e
640114fa:	test   eax,eax
640114fc:	jl     0x6401151e
640114fe:	call   0x640167eb
64011503:	test   eax,eax
64011505:	jl     0x6401151e
64011507:	push   0x0
64011509:	call   0x64014192
6401150e:	test   eax,eax
64011510:	pop    ecx
64011511:	jne    0x6401151e
64011513:	inc    DWORD PTR ds:0x6402a510
64011519:	jmp    0x640115ca
6401151e:	call   0x6401679f
64011523:	jmp    0x640114ee
64011525:	xor    edi,edi
64011527:	cmp    eax,edi
64011529:	jne    0x64011560
6401152b:	cmp    DWORD PTR ds:0x6402a510,edi
64011531:	jle    0x6401142b
64011537:	dec    DWORD PTR ds:0x6402a510
6401153d:	cmp    DWORD PTR ds:0x6402a8b0,edi
64011543:	jne    0x6401154a
64011545:	call   0x64014317
6401154a:	cmp    DWORD PTR [ebp+0x10],edi
6401154d:	jne    0x640115ca
6401154f:	call   0x6401679f
64011554:	call   0x64012bc8
64011559:	call   0x64016d49
6401155e:	jmp    0x640115ca
64011560:	cmp    eax,0x2
64011563:	jne    0x640115be
64011565:	call   0x64012b96
6401156a:	push   0x214
6401156f:	push   0x1
64011571:	call   0x64013f40
64011576:	mov    esi,eax
64011578:	cmp    esi,edi
6401157a:	pop    ecx
6401157b:	pop    ecx
6401157c:	je     0x6401142b
64011582:	push   esi
64011583:	push   DWORD PTR ds:0x640291c0
64011589:	push   DWORD PTR ds:0x6402a534
6401158f:	call   0x64012b1f
64011594:	pop    ecx
64011595:	call   eax
64011597:	test   eax,eax
64011599:	je     0x640115b2
6401159b:	push   edi
6401159c:	push   esi
6401159d:	call   0x64012c05
640115a2:	pop    ecx
640115a3:	pop    ecx
640115a4:	call   DWORD PTR ds:0x64022128
640115aa:	or     DWORD PTR [esi+0x4],0xffffffff
640115ae:	mov    DWORD PTR [esi],eax
640115b0:	jmp    0x640115ca
640115b2:	push   esi
640115b3:	call   0x64011ab6
640115b8:	pop    ecx
640115b9:	jmp    0x6401142b
640115be:	cmp    eax,0x3
640115c1:	jne    0x640115ca
640115c3:	push   edi
640115c4:	call   0x64012e74
640115c9:	pop    ecx
640115ca:	xor    eax,eax
640115cc:	inc    eax
640115cd:	pop    edi
640115ce:	pop    esi
640115cf:	pop    ebx
640115d0:	leave  
640115d1:	ret    0xc
640115d4:	push   0xc
640115d6:	push   0x640268b8
640115db:	call   0x64011fc8
640115e0:	mov    edi,ecx
640115e2:	mov    esi,edx
640115e4:	mov    ebx,DWORD PTR [ebp+0x8]
640115e7:	xor    eax,eax
640115e9:	inc    eax
640115ea:	mov    DWORD PTR [ebp-0x1c],eax
640115ed:	test   esi,esi
640115ef:	jne    0x640115fd
640115f1:	cmp    DWORD PTR ds:0x6402a510,edx
640115f7:	je     0x640116c2
640115fd:	and    DWORD PTR [ebp-0x4],0x0
64011601:	cmp    esi,eax
64011603:	je     0x6401160a
64011605:	cmp    esi,0x2
64011608:	jne    0x64011638
6401160a:	mov    eax,ds:0x64022b90
6401160f:	test   eax,eax
64011611:	je     0x6401161b
64011613:	push   edi
64011614:	push   esi
64011615:	push   ebx
64011616:	call   eax
64011618:	mov    DWORD PTR [ebp-0x1c],eax
6401161b:	cmp    DWORD PTR [ebp-0x1c],0x0
6401161f:	je     0x640116bb
64011625:	push   edi
64011626:	push   esi
64011627:	push   ebx
64011628:	call   0x640113fb
6401162d:	mov    DWORD PTR [ebp-0x1c],eax
64011630:	test   eax,eax
64011632:	je     0x640116bb
64011638:	push   edi
64011639:	push   esi
6401163a:	push   ebx
6401163b:	call   0x6400df10
64011640:	mov    DWORD PTR [ebp-0x1c],eax
64011643:	cmp    esi,0x1
64011646:	jne    0x6401166c
64011648:	test   eax,eax
6401164a:	jne    0x6401166c
6401164c:	push   edi
6401164d:	push   eax
6401164e:	push   ebx
6401164f:	call   0x6400df10
64011654:	push   edi
64011655:	push   0x0
64011657:	push   ebx
64011658:	call   0x640113fb
6401165d:	mov    eax,ds:0x64022b90
64011662:	test   eax,eax
64011664:	je     0x6401166c
64011666:	push   edi
64011667:	push   0x0
64011669:	push   ebx
6401166a:	call   eax
6401166c:	test   esi,esi
6401166e:	je     0x64011675
64011670:	cmp    esi,0x3
64011673:	jne    0x6401169b
64011675:	push   edi
64011676:	push   esi
64011677:	push   ebx
64011678:	call   0x640113fb
6401167d:	test   eax,eax
6401167f:	jne    0x64011684
64011681:	and    DWORD PTR [ebp-0x1c],eax
64011684:	cmp    DWORD PTR [ebp-0x1c],0x0
64011688:	je     0x6401169b
6401168a:	mov    eax,ds:0x64022b90
6401168f:	test   eax,eax
64011691:	je     0x6401169b
64011693:	push   edi
64011694:	push   esi
64011695:	push   ebx
64011696:	call   eax
64011698:	mov    DWORD PTR [ebp-0x1c],eax
6401169b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640116a2:	mov    eax,DWORD PTR [ebp-0x1c]
640116a5:	jmp    0x640116c4
640116a7:	mov    eax,DWORD PTR [ebp-0x14]
640116aa:	mov    ecx,DWORD PTR [eax]
640116ac:	mov    ecx,DWORD PTR [ecx]
640116ae:	push   eax
640116af:	push   ecx
640116b0:	call   0x64016f1c
640116b5:	pop    ecx
640116b6:	pop    ecx
640116b7:	ret    
640116b8:	mov    esp,DWORD PTR [ebp-0x18]
640116bb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640116c2:	xor    eax,eax
640116c4:	call   0x6401200d
640116c9:	ret    
640116ca:	cmp    DWORD PTR [esp+0x8],0x1
640116cf:	jne    0x640116d6
640116d1:	call   0x64016f37
640116d6:	push   DWORD PTR [esp+0x4]
640116da:	mov    ecx,DWORD PTR [esp+0x10]
640116de:	mov    edx,DWORD PTR [esp+0xc]
640116e2:	call   0x640115d4
640116e7:	pop    ecx
640116e8:	ret    0xc
640116eb:	cmp    DWORD PTR [esp+0x8],0x0
640116f0:	je     0x640116f8
640116f2:	mov    BYTE PTR [ecx],0x2d
640116f5:	inc    ecx
640116f6:	neg    eax
640116f8:	push   esi
640116f9:	mov    esi,ecx
640116fb:	xor    edx,edx
640116fd:	div    DWORD PTR [esp+0x8]
64011701:	cmp    edx,0x9
64011704:	jbe    0x6401170b
64011706:	add    dl,0x57
64011709:	jmp    0x6401170e
6401170b:	add    dl,0x30
6401170e:	mov    BYTE PTR [ecx],dl
64011710:	inc    ecx
64011711:	test   eax,eax
64011713:	ja     0x640116fb
64011715:	mov    BYTE PTR [ecx],0x0
64011718:	dec    ecx
64011719:	mov    dl,BYTE PTR [esi]
6401171b:	mov    al,BYTE PTR [ecx]
6401171d:	mov    BYTE PTR [ecx],dl
6401171f:	dec    ecx
64011720:	mov    BYTE PTR [esi],al
64011722:	inc    esi
64011723:	cmp    esi,ecx
64011725:	jb     0x64011719
64011727:	pop    esi
64011728:	ret    0x8
6401172b:	push   ebp
6401172c:	mov    ebp,esp
6401172e:	xor    eax,eax
64011730:	cmp    DWORD PTR [ebp+0x10],0xa
64011734:	jne    0x6401173c
64011736:	cmp    DWORD PTR [ebp+0x8],eax
64011739:	jge    0x6401173c
6401173b:	inc    eax
6401173c:	mov    ecx,DWORD PTR [ebp+0xc]
6401173f:	push   eax
64011740:	push   DWORD PTR [ebp+0x10]
64011743:	mov    eax,DWORD PTR [ebp+0x8]
64011746:	call   0x640116eb
6401174b:	mov    eax,DWORD PTR [ebp+0xc]
6401174e:	pop    ebp
6401174f:	ret    
64011750:	push   ebp
64011751:	mov    ebp,esp
64011753:	sub    esp,0x20
64011756:	push   ebx
64011757:	xor    ebx,ebx
64011759:	cmp    DWORD PTR [ebp+0xc],ebx
6401175c:	jne    0x6401177b
6401175e:	call   0x640129f0
64011763:	push   ebx
64011764:	push   ebx
64011765:	push   ebx
64011766:	push   ebx
64011767:	push   ebx
64011768:	mov    DWORD PTR [eax],0x16
6401176e:	call   0x64010756
64011773:	add    esp,0x14
64011776:	or     eax,0xffffffff
64011779:	jmp    0x640117c8
6401177b:	mov    eax,DWORD PTR [ebp+0x8]
6401177e:	cmp    eax,ebx
64011780:	je     0x6401175e
64011782:	push   esi
64011783:	mov    DWORD PTR [ebp-0x18],eax
64011786:	mov    DWORD PTR [ebp-0x20],eax
64011789:	lea    eax,[ebp+0x10]
6401178c:	push   eax
6401178d:	push   ebx
6401178e:	push   DWORD PTR [ebp+0xc]
64011791:	lea    eax,[ebp-0x20]
64011794:	push   eax
64011795:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
6401179c:	mov    DWORD PTR [ebp-0x14],0x42
640117a3:	call   0x64017106
640117a8:	add    esp,0x10
640117ab:	dec    DWORD PTR [ebp-0x1c]
640117ae:	mov    esi,eax
640117b0:	js     0x640117b9
640117b2:	mov    eax,DWORD PTR [ebp-0x20]
640117b5:	mov    BYTE PTR [eax],bl
640117b7:	jmp    0x640117c5
640117b9:	lea    eax,[ebp-0x20]
640117bc:	push   eax
640117bd:	push   ebx
640117be:	call   0x64014d35
640117c3:	pop    ecx
640117c4:	pop    ecx
640117c5:	mov    eax,esi
640117c7:	pop    esi
640117c8:	pop    ebx
640117c9:	leave  
640117ca:	ret    
640117cb:	lea    eax,[esp+0x10]
640117cf:	push   eax
640117d0:	push   0x0
640117d2:	push   DWORD PTR [esp+0x14]
640117d6:	push   DWORD PTR [esp+0x14]
640117da:	push   DWORD PTR [esp+0x14]
640117de:	call   0x64017b64
640117e3:	add    esp,0x14
640117e6:	ret    
640117e7:	mov    eax,DWORD PTR [esp+0x4]
640117eb:	mov    dx,WORD PTR [esp+0x8]
640117f0:	jmp    0x640117f9
640117f2:	cmp    cx,dx
640117f5:	je     0x64011808
640117f7:	inc    eax
640117f8:	inc    eax
640117f9:	movzx  ecx,WORD PTR [eax]
640117fc:	test   cx,cx
640117ff:	jne    0x640117f2
64011801:	cmp    WORD PTR [eax],dx
64011804:	je     0x64011808
64011806:	xor    eax,eax
64011808:	ret    
64011809:	push   ebp
6401180a:	mov    ebp,esp
6401180c:	sub    esp,0x10
6401180f:	push   DWORD PTR [ebp+0xc]
64011812:	lea    ecx,[ebp-0x10]
64011815:	call   0x64010dc1
6401181a:	mov    eax,DWORD PTR [ebp-0x10]
6401181d:	cmp    DWORD PTR [eax+0xac],0x1
64011824:	jle    0x64011839
64011826:	lea    eax,[ebp-0x10]
64011829:	push   eax
6401182a:	push   0x4
6401182c:	push   DWORD PTR [ebp+0x8]
6401182f:	call   0x64017bea
64011834:	add    esp,0xc
64011837:	jmp    0x64011849
64011839:	mov    eax,DWORD PTR [eax+0xc8]
6401183f:	mov    ecx,DWORD PTR [ebp+0x8]
64011842:	movzx  eax,BYTE PTR [eax+ecx*2]
64011846:	and    eax,0x4
64011849:	cmp    BYTE PTR [ebp-0x4],0x0
6401184d:	je     0x64011856
6401184f:	mov    ecx,DWORD PTR [ebp-0x8]
64011852:	and    DWORD PTR [ecx+0x70],0xfffffffd
64011856:	leave  
64011857:	ret    
64011858:	cmp    DWORD PTR ds:0x6402a8d4,0x0
6401185f:	jne    0x64011873
64011861:	mov    eax,DWORD PTR [esp+0x4]
64011865:	mov    ecx,DWORD PTR ds:0x640297f0
6401186b:	movzx  eax,BYTE PTR [ecx+eax*2]
6401186f:	and    eax,0x4
64011872:	ret    
64011873:	push   0x0
64011875:	push   DWORD PTR [esp+0x8]
64011879:	call   0x64011809
6401187e:	pop    ecx
6401187f:	pop    ecx
64011880:	ret    
64011881:	push   ebp
64011882:	mov    ebp,esp
64011884:	sub    esp,0x10
64011887:	push   DWORD PTR [ebp+0xc]
6401188a:	lea    ecx,[ebp-0x10]
6401188d:	call   0x64010dc1
64011892:	mov    eax,DWORD PTR [ebp-0x10]
64011895:	cmp    DWORD PTR [eax+0xac],0x1
6401189c:	jle    0x640118b1
6401189e:	lea    eax,[ebp-0x10]
640118a1:	push   eax
640118a2:	push   0x8
640118a4:	push   DWORD PTR [ebp+0x8]
640118a7:	call   0x64017bea
640118ac:	add    esp,0xc
640118af:	jmp    0x640118c1
640118b1:	mov    eax,DWORD PTR [eax+0xc8]
640118b7:	mov    ecx,DWORD PTR [ebp+0x8]
640118ba:	movzx  eax,BYTE PTR [eax+ecx*2]
640118be:	and    eax,0x8
640118c1:	cmp    BYTE PTR [ebp-0x4],0x0
640118c5:	je     0x640118ce
640118c7:	mov    ecx,DWORD PTR [ebp-0x8]
640118ca:	and    DWORD PTR [ecx+0x70],0xfffffffd
640118ce:	leave  
640118cf:	ret    
640118d0:	cmp    DWORD PTR ds:0x6402a8d4,0x0
640118d7:	jne    0x640118eb
640118d9:	mov    eax,DWORD PTR [esp+0x4]
640118dd:	mov    ecx,DWORD PTR ds:0x640297f0
640118e3:	movzx  eax,BYTE PTR [ecx+eax*2]
640118e7:	and    eax,0x8
640118ea:	ret    
640118eb:	push   0x0
640118ed:	push   DWORD PTR [esp+0x8]
640118f1:	call   0x64011881
640118f6:	pop    ecx
640118f7:	pop    ecx
640118f8:	ret    
640118f9:	push   ebp
640118fa:	mov    ebp,esp
640118fc:	sub    esp,0x10
640118ff:	push   DWORD PTR [ebp+0xc]
64011902:	lea    ecx,[ebp-0x10]
64011905:	call   0x64010dc1
6401190a:	mov    eax,DWORD PTR [ebp-0x10]
6401190d:	cmp    DWORD PTR [eax+0xac],0x1
64011914:	jle    0x6401192c
64011916:	lea    eax,[ebp-0x10]
64011919:	push   eax
6401191a:	push   0x157
6401191f:	push   DWORD PTR [ebp+0x8]
64011922:	call   0x64017bea
64011927:	add    esp,0xc
6401192a:	jmp    0x6401193e
6401192c:	mov    eax,DWORD PTR [eax+0xc8]
64011932:	mov    ecx,DWORD PTR [ebp+0x8]
64011935:	movzx  eax,WORD PTR [eax+ecx*2]
64011939:	and    eax,0x157
6401193e:	cmp    BYTE PTR [ebp-0x4],0x0
64011942:	je     0x6401194b
64011944:	mov    ecx,DWORD PTR [ebp-0x8]
64011947:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401194b:	leave  
6401194c:	ret    
6401194d:	cmp    DWORD PTR ds:0x6402a8d4,0x0
64011954:	jne    0x6401196a
64011956:	mov    eax,DWORD PTR [esp+0x4]
6401195a:	mov    ecx,DWORD PTR ds:0x640297f0
64011960:	movzx  eax,WORD PTR [ecx+eax*2]
64011964:	and    eax,0x157
64011969:	ret    
6401196a:	push   0x0
6401196c:	push   DWORD PTR [esp+0x8]
64011970:	call   0x640118f9
64011975:	pop    ecx
64011976:	pop    ecx
64011977:	ret    
64011978:	push   ebp
64011979:	mov    ebp,esp
6401197b:	sub    esp,0x18
6401197e:	push   ebx
6401197f:	push   esi
64011980:	push   DWORD PTR [ebp+0xc]
64011983:	lea    ecx,[ebp-0x18]
64011986:	call   0x64010dc1
6401198b:	mov    ebx,DWORD PTR [ebp+0x8]
6401198e:	mov    esi,0x100
64011993:	cmp    ebx,esi
64011995:	jae    0x640119eb
64011997:	mov    ecx,DWORD PTR [ebp-0x18]
6401199a:	cmp    DWORD PTR [ecx+0xac],0x1
640119a1:	jle    0x640119b7
640119a3:	lea    eax,[ebp-0x18]
640119a6:	push   eax
640119a7:	push   0x1
640119a9:	push   ebx
640119aa:	call   0x64017bea
640119af:	mov    ecx,DWORD PTR [ebp-0x18]
640119b2:	add    esp,0xc
640119b5:	jmp    0x640119c4
640119b7:	mov    eax,DWORD PTR [ecx+0xc8]
640119bd:	movzx  eax,BYTE PTR [eax+ebx*2]
640119c1:	and    eax,0x1
640119c4:	test   eax,eax
640119c6:	je     0x640119d7
640119c8:	mov    eax,DWORD PTR [ecx+0xcc]
640119ce:	movzx  eax,BYTE PTR [eax+ebx*1]
640119d2:	jmp    0x64011a7e
640119d7:	cmp    BYTE PTR [ebp-0xc],0x0
640119db:	je     0x640119e4
640119dd:	mov    eax,DWORD PTR [ebp-0x10]
640119e0:	and    DWORD PTR [eax+0x70],0xfffffffd
640119e4:	mov    eax,ebx
640119e6:	jmp    0x64011a8b
640119eb:	mov    eax,DWORD PTR [ebp-0x18]
640119ee:	cmp    DWORD PTR [eax+0xac],0x1
640119f5:	jle    0x64011a28
640119f7:	mov    DWORD PTR [ebp+0x8],ebx
640119fa:	sar    DWORD PTR [ebp+0x8],0x8
640119fe:	lea    eax,[ebp-0x18]
64011a01:	push   eax
64011a02:	mov    eax,DWORD PTR [ebp+0x8]
64011a05:	and    eax,0xff
64011a0a:	push   eax
64011a0b:	call   0x64018085
64011a10:	test   eax,eax
64011a12:	pop    ecx
64011a13:	pop    ecx
64011a14:	je     0x64011a28
64011a16:	mov    al,BYTE PTR [ebp+0x8]
64011a19:	push   0x2
64011a1b:	mov    BYTE PTR [ebp-0x4],al
64011a1e:	mov    BYTE PTR [ebp-0x3],bl
64011a21:	mov    BYTE PTR [ebp-0x2],0x0
64011a25:	pop    ecx
64011a26:	jmp    0x64011a3d
64011a28:	call   0x640129f0
64011a2d:	mov    DWORD PTR [eax],0x2a
64011a33:	xor    ecx,ecx
64011a35:	mov    BYTE PTR [ebp-0x4],bl
64011a38:	mov    BYTE PTR [ebp-0x3],0x0
64011a3c:	inc    ecx
64011a3d:	mov    eax,DWORD PTR [ebp-0x18]
64011a40:	push   0x1
64011a42:	push   DWORD PTR [eax+0x4]
64011a45:	lea    edx,[ebp-0x8]
64011a48:	push   0x3
64011a4a:	push   edx
64011a4b:	push   ecx
64011a4c:	lea    ecx,[ebp-0x4]
64011a4f:	push   ecx
64011a50:	push   esi
64011a51:	push   DWORD PTR [eax+0x14]
64011a54:	lea    eax,[ebp-0x18]
64011a57:	push   eax
64011a58:	call   0x64018042
64011a5d:	add    esp,0x24
64011a60:	test   eax,eax
64011a62:	je     0x640119d7
64011a68:	cmp    eax,0x1
64011a6b:	jne    0x64011a73
64011a6d:	movzx  eax,BYTE PTR [ebp-0x8]
64011a71:	jmp    0x64011a7e
64011a73:	movzx  ecx,BYTE PTR [ebp-0x7]
64011a77:	xor    eax,eax
64011a79:	mov    ah,BYTE PTR [ebp-0x8]
64011a7c:	or     eax,ecx
64011a7e:	cmp    BYTE PTR [ebp-0xc],0x0
64011a82:	je     0x64011a8b
64011a84:	mov    ecx,DWORD PTR [ebp-0x10]
64011a87:	and    DWORD PTR [ecx+0x70],0xfffffffd
64011a8b:	pop    esi
64011a8c:	pop    ebx
64011a8d:	leave  
64011a8e:	ret    
64011a8f:	cmp    DWORD PTR ds:0x6402a8d4,0x0
64011a96:	jne    0x64011aa8
64011a98:	mov    eax,DWORD PTR [esp+0x4]
64011a9c:	lea    ecx,[eax-0x41]
64011a9f:	cmp    ecx,0x19
64011aa2:	ja     0x64011ab5
64011aa4:	add    eax,0x20
64011aa7:	ret    
64011aa8:	push   0x0
64011aaa:	push   DWORD PTR [esp+0x8]
64011aae:	call   0x64011978
64011ab3:	pop    ecx
64011ab4:	pop    ecx
64011ab5:	ret    
64011ab6:	push   0xc
64011ab8:	push   0x640268d8
64011abd:	call   0x64011fc8
64011ac2:	mov    esi,DWORD PTR [ebp+0x8]
64011ac5:	test   esi,esi
64011ac7:	je     0x64011b3e
64011ac9:	cmp    DWORD PTR ds:0x6402e47c,0x3
64011ad0:	jne    0x64011b15
64011ad2:	push   0x4
64011ad4:	call   0x6401823f
64011ad9:	pop    ecx
64011ada:	and    DWORD PTR [ebp-0x4],0x0
64011ade:	push   esi
64011adf:	call   0x640182b8
64011ae4:	pop    ecx
64011ae5:	mov    DWORD PTR [ebp-0x1c],eax
64011ae8:	test   eax,eax
64011aea:	je     0x64011af5
64011aec:	push   esi
64011aed:	push   eax
64011aee:	call   0x640182e3
64011af3:	pop    ecx
64011af4:	pop    ecx
64011af5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64011afc:	call   0x64011b0c
64011b01:	cmp    DWORD PTR [ebp-0x1c],0x0
64011b05:	jne    0x64011b3e
64011b07:	push   DWORD PTR [ebp+0x8]
64011b0a:	jmp    0x64011b16
64011b0c:	push   0x4
64011b0e:	call   0x64018167
64011b13:	pop    ecx
64011b14:	ret    
64011b15:	push   esi
64011b16:	push   0x0
64011b18:	push   DWORD PTR ds:0x6402aa0c
64011b1e:	call   DWORD PTR ds:0x64022104
64011b24:	test   eax,eax
64011b26:	jne    0x64011b3e
64011b28:	call   0x640129f0
64011b2d:	mov    esi,eax
64011b2f:	call   DWORD PTR ds:0x64022044
64011b35:	push   eax
64011b36:	call   0x640129b5
64011b3b:	mov    DWORD PTR [esi],eax
64011b3d:	pop    ecx
64011b3e:	call   0x6401200d
64011b43:	ret    
64011b44:	push   0xc
64011b46:	push   0x640268f8
64011b4b:	call   0x64011fc8
64011b50:	and    DWORD PTR [ebp-0x1c],0x0
64011b54:	mov    esi,DWORD PTR [ebp+0x8]
64011b57:	cmp    esi,DWORD PTR ds:0x6402e46c
64011b5d:	ja     0x64011b81
64011b5f:	push   0x4
64011b61:	call   0x6401823f
64011b66:	pop    ecx
64011b67:	and    DWORD PTR [ebp-0x4],0x0
64011b6b:	push   esi
64011b6c:	call   0x64018a8c
64011b71:	pop    ecx
64011b72:	mov    DWORD PTR [ebp-0x1c],eax
64011b75:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64011b7c:	call   0x64011b8a
64011b81:	mov    eax,DWORD PTR [ebp-0x1c]
64011b84:	call   0x6401200d
64011b89:	ret    
64011b8a:	push   0x4
64011b8c:	call   0x64018167
64011b91:	pop    ecx
64011b92:	ret    
64011b93:	push   ebp
64011b94:	mov    ebp,DWORD PTR [esp+0x8]
64011b98:	cmp    ebp,0xffffffe0
64011b9b:	ja     0x64011c40
64011ba1:	push   ebx
64011ba2:	mov    ebx,DWORD PTR ds:0x64022100
64011ba8:	push   esi
64011ba9:	push   edi
64011baa:	xor    esi,esi
64011bac:	cmp    DWORD PTR ds:0x6402aa0c,esi
64011bb2:	mov    edi,ebp
64011bb4:	jne    0x64011bce
64011bb6:	call   0x64018f0f
64011bbb:	push   0x1e
64011bbd:	call   0x64018d6f
64011bc2:	push   0xff
64011bc7:	call   0x640140c0
64011bcc:	pop    ecx
64011bcd:	pop    ecx
64011bce:	mov    eax,ds:0x6402e47c
64011bd3:	cmp    eax,0x1
64011bd6:	jne    0x64011be6
64011bd8:	cmp    ebp,esi
64011bda:	je     0x64011be0
64011bdc:	mov    eax,ebp
64011bde:	jmp    0x64011be3
64011be0:	xor    eax,eax
64011be2:	inc    eax
64011be3:	push   eax
64011be4:	jmp    0x64011c04
64011be6:	cmp    eax,0x3
64011be9:	jne    0x64011bf6
64011beb:	push   ebp
64011bec:	call   0x64011b44
64011bf1:	cmp    eax,esi
64011bf3:	pop    ecx
64011bf4:	jne    0x64011c0d
64011bf6:	cmp    ebp,esi
64011bf8:	jne    0x64011bfd
64011bfa:	xor    edi,edi
64011bfc:	inc    edi
64011bfd:	add    edi,0xf
64011c00:	and    edi,0xfffffff0
64011c03:	push   edi
64011c04:	push   esi
64011c05:	push   DWORD PTR ds:0x6402aa0c
64011c0b:	call   ebx
64011c0d:	mov    esi,eax
64011c0f:	test   esi,esi
64011c11:	jne    0x64011c39
64011c13:	cmp    DWORD PTR ds:0x6402ae84,eax
64011c19:	push   0xc
64011c1b:	pop    edi
64011c1c:	je     0x64011c2b
64011c1e:	push   ebp
64011c1f:	call   0x6401306b
64011c24:	test   eax,eax
64011c26:	pop    ecx
64011c27:	jne    0x64011baa
64011c29:	jmp    0x64011c32
64011c2b:	call   0x640129f0
64011c30:	mov    DWORD PTR [eax],edi
64011c32:	call   0x640129f0
64011c37:	mov    DWORD PTR [eax],edi
64011c39:	pop    edi
64011c3a:	mov    eax,esi
64011c3c:	pop    esi
64011c3d:	pop    ebx
64011c3e:	pop    ebp
64011c3f:	ret    
64011c40:	push   ebp
64011c41:	call   0x6401306b
64011c46:	pop    ecx
64011c47:	call   0x640129f0
64011c4c:	mov    DWORD PTR [eax],0xc
64011c52:	xor    eax,eax
64011c54:	pop    ebp
64011c55:	ret    
64011c56:	int3   
64011c57:	int3   
64011c58:	int3   
64011c59:	int3   
64011c5a:	int3   
64011c5b:	int3   
64011c5c:	int3   
64011c5d:	int3   
64011c5e:	int3   
64011c5f:	int3   
64011c60:	push   ebp
64011c61:	mov    ebp,esp
64011c63:	push   edi
64011c64:	push   esi
64011c65:	mov    esi,DWORD PTR [ebp+0xc]
64011c68:	mov    ecx,DWORD PTR [ebp+0x10]
64011c6b:	mov    edi,DWORD PTR [ebp+0x8]
64011c6e:	mov    eax,ecx
64011c70:	mov    edx,ecx
64011c72:	add    eax,esi
64011c74:	cmp    edi,esi
64011c76:	jbe    0x64011c80
64011c78:	cmp    edi,eax
64011c7a:	jb     0x64011e24
64011c80:	cmp    ecx,0x100
64011c86:	jb     0x64011ca7
64011c88:	cmp    DWORD PTR ds:0x6402e5a4,0x0
64011c8f:	je     0x64011ca7
64011c91:	push   edi
64011c92:	push   esi
64011c93:	and    edi,0xf
64011c96:	and    esi,0xf
64011c99:	cmp    edi,esi
64011c9b:	pop    esi
64011c9c:	pop    edi
64011c9d:	jne    0x64011ca7
64011c9f:	pop    esi
64011ca0:	pop    edi
64011ca1:	pop    ebp
64011ca2:	jmp    0x64018fcf
64011ca7:	test   edi,0x3
64011cad:	jne    0x64011cc4
64011caf:	shr    ecx,0x2
64011cb2:	and    edx,0x3
64011cb5:	cmp    ecx,0x8
64011cb8:	jb     0x64011ce4
64011cba:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64011cbc:	jmp    DWORD PTR [edx*4+0x64011dd4]
64011cc3:	nop
64011cc4:	mov    eax,edi
64011cc6:	mov    edx,0x3
64011ccb:	sub    ecx,0x4
64011cce:	jb     0x64011cdc
64011cd0:	and    eax,0x3
64011cd3:	add    ecx,eax
64011cd5:	jmp    DWORD PTR [eax*4+0x64011ce8]
64011cdc:	jmp    DWORD PTR [ecx*4+0x64011de4]
64011ce3:	nop
64011ce4:	jmp    DWORD PTR [ecx*4+0x64011d68]
64011ceb:	nop
64011cec:	clc    
64011ced:	sbb    al,0x1
64011cef:	fs and al,0x1d
64011cf2:	add    DWORD PTR [eax+ecx*2+0x1d],esp
64011cf6:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
64011cfa:	mov    al,BYTE PTR [esi]
64011cfc:	mov    BYTE PTR [edi],al
64011cfe:	mov    al,BYTE PTR [esi+0x1]
64011d01:	mov    BYTE PTR [edi+0x1],al
64011d04:	mov    al,BYTE PTR [esi+0x2]
64011d07:	shr    ecx,0x2
64011d0a:	mov    BYTE PTR [edi+0x2],al
64011d0d:	add    esi,0x3
64011d10:	add    edi,0x3
64011d13:	cmp    ecx,0x8
64011d16:	jb     0x64011ce4
64011d18:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64011d1a:	jmp    DWORD PTR [edx*4+0x64011dd4]
64011d21:	lea    ecx,[ecx+0x0]
64011d24:	and    edx,ecx
64011d26:	mov    al,BYTE PTR [esi]
64011d28:	mov    BYTE PTR [edi],al
64011d2a:	mov    al,BYTE PTR [esi+0x1]
64011d2d:	shr    ecx,0x2
64011d30:	mov    BYTE PTR [edi+0x1],al
64011d33:	add    esi,0x2
64011d36:	add    edi,0x2
64011d39:	cmp    ecx,0x8
64011d3c:	jb     0x64011ce4
64011d3e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64011d40:	jmp    DWORD PTR [edx*4+0x64011dd4]
64011d47:	nop
64011d48:	and    edx,ecx
64011d4a:	mov    al,BYTE PTR [esi]
64011d4c:	mov    BYTE PTR [edi],al
64011d4e:	add    esi,0x1
64011d51:	shr    ecx,0x2
64011d54:	add    edi,0x1
64011d57:	cmp    ecx,0x8
64011d5a:	jb     0x64011ce4
64011d5c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64011d5e:	jmp    DWORD PTR [edx*4+0x64011dd4]
64011d65:	lea    ecx,[ecx+0x0]
64011d68:	retf   
64011d69:	sbb    eax,0x1db86401
64011d6e:	add    DWORD PTR [eax+esi*4+0x1d],esp
64011d72:	add    DWORD PTR [eax+ebp*4+0x1d],esp
64011d76:	add    DWORD PTR [eax+eiz*4+0x1d],esp
64011d7a:	add    DWORD PTR [eax+ebx*4+0x1d],esp
64011d7e:	add    DWORD PTR [eax+edx*4+0x1d],esp
64011d82:	add    DWORD PTR [eax+ecx*4+0x1d],esp
64011d86:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64011d8a:	mov    fs,esp
64011d8c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64011d90:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64011d94:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64011d98:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
64011d9c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64011da0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64011da4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64011da8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
64011dac:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64011db0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64011db4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64011db8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
64011dbc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64011dc0:	lea    eax,[ecx*4+0x0]
64011dc7:	add    esi,eax
64011dc9:	add    edi,eax
64011dcb:	jmp    DWORD PTR [edx*4+0x64011dd4]
64011dd2:	mov    edi,edi
64011dd4:	in     al,0x1d
64011dd6:	add    DWORD PTR [esp+ebp*8+0x1d],esp
64011dda:	add    DWORD PTR [eax+edi*8+0x1d],esp
64011dde:	add    DWORD PTR [esp+ecx*1+0x1e],esp
64011de2:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64011de6:	or     BYTE PTR [esi+0x5f],bl
64011de9:	leave  
64011dea:	ret    
64011deb:	nop
64011dec:	mov    al,BYTE PTR [esi]
64011dee:	mov    BYTE PTR [edi],al
64011df0:	mov    eax,DWORD PTR [ebp+0x8]
64011df3:	pop    esi
64011df4:	pop    edi
64011df5:	leave  
64011df6:	ret    
64011df7:	nop
64011df8:	mov    al,BYTE PTR [esi]
64011dfa:	mov    BYTE PTR [edi],al
64011dfc:	mov    al,BYTE PTR [esi+0x1]
64011dff:	mov    BYTE PTR [edi+0x1],al
64011e02:	mov    eax,DWORD PTR [ebp+0x8]
64011e05:	pop    esi
64011e06:	pop    edi
64011e07:	leave  
64011e08:	ret    
64011e09:	lea    ecx,[ecx+0x0]
64011e0c:	mov    al,BYTE PTR [esi]
64011e0e:	mov    BYTE PTR [edi],al
64011e10:	mov    al,BYTE PTR [esi+0x1]
64011e13:	mov    BYTE PTR [edi+0x1],al
64011e16:	mov    al,BYTE PTR [esi+0x2]
64011e19:	mov    BYTE PTR [edi+0x2],al
64011e1c:	mov    eax,DWORD PTR [ebp+0x8]
64011e1f:	pop    esi
64011e20:	pop    edi
64011e21:	leave  
64011e22:	ret    
64011e23:	nop
64011e24:	lea    esi,[ecx+esi*1-0x4]
64011e28:	lea    edi,[ecx+edi*1-0x4]
64011e2c:	test   edi,0x3
64011e32:	jne    0x64011e58
64011e34:	shr    ecx,0x2
64011e37:	and    edx,0x3
64011e3a:	cmp    ecx,0x8
64011e3d:	jb     0x64011e4c
64011e3f:	std    
64011e40:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64011e42:	cld    
64011e43:	jmp    DWORD PTR [edx*4+0x64011f70]
64011e4a:	mov    edi,edi
64011e4c:	neg    ecx
64011e4e:	jmp    DWORD PTR [ecx*4+0x64011f20]
64011e55:	lea    ecx,[ecx+0x0]
64011e58:	mov    eax,edi
64011e5a:	mov    edx,0x3
64011e5f:	cmp    ecx,0x4
64011e62:	jb     0x64011e70
64011e64:	and    eax,0x3
64011e67:	sub    ecx,eax
64011e69:	jmp    DWORD PTR [eax*4+0x64011e74]
64011e70:	jmp    DWORD PTR [ecx*4+0x64011f70]
64011e77:	nop
64011e78:	test   BYTE PTR [esi],bl
64011e7a:	add    DWORD PTR [eax+ebp*4+0x1e],esp
64011e7e:	add    DWORD PTR [eax+edx*8+0x1e],esp
64011e82:	add    DWORD PTR [edx+ecx*4+0x46],esp
64011e86:	add    esp,DWORD PTR [ebx]
64011e88:	ror    DWORD PTR [eax-0x117cfcb9],1
64011e8e:	add    ecx,eax
64011e90:	jmp    0x65f0a197
64011e95:	cmp    ecx,0x8
64011e98:	jb     0x64011e4c
64011e9a:	std    
64011e9b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64011e9d:	cld    
64011e9e:	jmp    DWORD PTR [edx*4+0x64011f70]
64011ea5:	lea    ecx,[ecx+0x0]
64011ea8:	mov    al,BYTE PTR [esi+0x3]
64011eab:	and    edx,ecx
64011ead:	mov    BYTE PTR [edi+0x3],al
64011eb0:	mov    al,BYTE PTR [esi+0x2]
64011eb3:	shr    ecx,0x2
64011eb6:	mov    BYTE PTR [edi+0x2],al
64011eb9:	sub    esi,0x2
64011ebc:	sub    edi,0x2
64011ebf:	cmp    ecx,0x8
64011ec2:	jb     0x64011e4c
64011ec4:	std    
64011ec5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64011ec7:	cld    
64011ec8:	jmp    DWORD PTR [edx*4+0x64011f70]
64011ecf:	nop
64011ed0:	mov    al,BYTE PTR [esi+0x3]
64011ed3:	and    edx,ecx
64011ed5:	mov    BYTE PTR [edi+0x3],al
64011ed8:	mov    al,BYTE PTR [esi+0x2]
64011edb:	mov    BYTE PTR [edi+0x2],al
64011ede:	mov    al,BYTE PTR [esi+0x1]
64011ee1:	shr    ecx,0x2
64011ee4:	mov    BYTE PTR [edi+0x1],al
64011ee7:	sub    esi,0x3
64011eea:	sub    edi,0x3
64011eed:	cmp    ecx,0x8
64011ef0:	jb     0x64011e4c
64011ef6:	std    
64011ef7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64011ef9:	cld    
64011efa:	jmp    DWORD PTR [edx*4+0x64011f70]
64011f01:	lea    ecx,[ecx+0x0]
64011f04:	and    al,0x1f
64011f06:	add    DWORD PTR [esp+ebp*1+0x1f],esp
64011f0a:	add    DWORD PTR [esp+esi*1+0x1f],esp
64011f0e:	add    DWORD PTR [esp+edi*1+0x1f],esp
64011f12:	add    DWORD PTR [esp+eax*2+0x1f],esp
64011f16:	add    DWORD PTR [esp+ecx*2+0x1f],esp
64011f1a:	add    DWORD PTR [esp+edx*2+0x1f],esp
64011f1e:	add    DWORD PTR [edi+eiz*2+0x1f],esp
64011f22:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64011f26:	mov    ds,WORD PTR [ecx+ecx*4]
64011f29:	inc    esp
64011f2a:	(bad)  
64011f2b:	sbb    al,0x8b
64011f2d:	inc    esp
64011f2e:	mov    ds,WORD PTR [eax]
64011f30:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64011f34:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64011f38:	mov    DWORD PTR [edi+ecx*4+0x14],eax
64011f3c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64011f40:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64011f44:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64011f48:	mov    DWORD PTR [edi+ecx*4+0xc],eax
64011f4c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64011f50:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64011f54:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64011f58:	mov    DWORD PTR [edi+ecx*4+0x4],eax
64011f5c:	lea    eax,[ecx*4+0x0]
64011f63:	add    esi,eax
64011f65:	add    edi,eax
64011f67:	jmp    DWORD PTR [edx*4+0x64011f70]
64011f6e:	mov    edi,edi
64011f70:	sbb    BYTE PTR [edi],0x1
64011f73:	mov    BYTE PTR fs:[edi],bl
64011f76:	add    DWORD PTR [eax+ebx*4+0x1f],esp
64011f7a:	add    DWORD PTR [esp+ebp*4+0x1f],esp
64011f7e:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64011f82:	or     BYTE PTR [esi+0x5f],bl
64011f85:	leave  
64011f86:	ret    
64011f87:	nop
64011f88:	mov    al,BYTE PTR [esi+0x3]
64011f8b:	mov    BYTE PTR [edi+0x3],al
64011f8e:	mov    eax,DWORD PTR [ebp+0x8]
64011f91:	pop    esi
64011f92:	pop    edi
64011f93:	leave  
64011f94:	ret    
64011f95:	lea    ecx,[ecx+0x0]
64011f98:	mov    al,BYTE PTR [esi+0x3]
64011f9b:	mov    BYTE PTR [edi+0x3],al
64011f9e:	mov    al,BYTE PTR [esi+0x2]
64011fa1:	mov    BYTE PTR [edi+0x2],al
64011fa4:	mov    eax,DWORD PTR [ebp+0x8]
64011fa7:	pop    esi
64011fa8:	pop    edi
64011fa9:	leave  
64011faa:	ret    
64011fab:	nop
64011fac:	mov    al,BYTE PTR [esi+0x3]
64011faf:	mov    BYTE PTR [edi+0x3],al
64011fb2:	mov    al,BYTE PTR [esi+0x2]
64011fb5:	mov    BYTE PTR [edi+0x2],al
64011fb8:	mov    al,BYTE PTR [esi+0x1]
64011fbb:	mov    BYTE PTR [edi+0x1],al
64011fbe:	mov    eax,DWORD PTR [ebp+0x8]
64011fc1:	pop    esi
64011fc2:	pop    edi
64011fc3:	leave  
64011fc4:	ret    
64011fc5:	int3   
64011fc6:	int3   
64011fc7:	int3   
64011fc8:	push   0x64012030
64011fcd:	push   DWORD PTR fs:0x0
64011fd4:	mov    eax,DWORD PTR [esp+0x10]
64011fd8:	mov    DWORD PTR [esp+0x10],ebp
64011fdc:	lea    ebp,[esp+0x10]
64011fe0:	sub    esp,eax
64011fe2:	push   ebx
64011fe3:	push   esi
64011fe4:	push   edi
64011fe5:	mov    eax,ds:0x64029038
64011fea:	xor    DWORD PTR [ebp-0x4],eax
64011fed:	xor    eax,ebp
64011fef:	push   eax
64011ff0:	mov    DWORD PTR [ebp-0x18],esp
64011ff3:	push   DWORD PTR [ebp-0x8]
64011ff6:	mov    eax,DWORD PTR [ebp-0x4]
64011ff9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012000:	mov    DWORD PTR [ebp-0x8],eax
64012003:	lea    eax,[ebp-0x10]
64012006:	mov    fs:0x0,eax
6401200c:	ret    
6401200d:	mov    ecx,DWORD PTR [ebp-0x10]
64012010:	mov    DWORD PTR fs:0x0,ecx
64012017:	pop    ecx
64012018:	pop    edi
64012019:	pop    edi
6401201a:	pop    esi
6401201b:	pop    ebx
6401201c:	mov    esp,ebp
6401201e:	pop    ebp
6401201f:	push   ecx
64012020:	ret    
64012021:	int3   
64012022:	int3   
64012023:	int3   
64012024:	int3   
64012025:	int3   
64012026:	int3   
64012027:	int3   
64012028:	int3   
64012029:	int3   
6401202a:	int3   
6401202b:	int3   
6401202c:	int3   
6401202d:	int3   
6401202e:	int3   
6401202f:	int3   
64012030:	sub    esp,0x14
64012033:	push   ebx
64012034:	mov    ebx,DWORD PTR [esp+0x20]
64012038:	push   ebp
64012039:	push   esi
6401203a:	mov    esi,DWORD PTR [ebx+0x8]
6401203d:	xor    esi,DWORD PTR ds:0x64029038
64012043:	push   edi
64012044:	mov    eax,DWORD PTR [esi]
64012046:	cmp    eax,0xfffffffe
64012049:	mov    BYTE PTR [esp+0x13],0x0
6401204e:	mov    DWORD PTR [esp+0x18],0x1
64012056:	lea    edi,[ebx+0x10]
64012059:	je     0x64012068
6401205b:	mov    ecx,DWORD PTR [esi+0x4]
6401205e:	add    ecx,edi
64012060:	xor    ecx,DWORD PTR [eax+edi*1]
64012063:	call   0x64010c1e
64012068:	mov    ecx,DWORD PTR [esi+0xc]
6401206b:	mov    eax,DWORD PTR [esi+0x8]
6401206e:	add    ecx,edi
64012070:	xor    ecx,DWORD PTR [eax+edi*1]
64012073:	call   0x64010c1e
64012078:	mov    eax,DWORD PTR [esp+0x28]
6401207c:	test   BYTE PTR [eax+0x4],0x66
64012080:	jne    0x640121a5
64012086:	mov    ebp,DWORD PTR [ebx+0xc]
64012089:	cmp    ebp,0xfffffffe
6401208c:	mov    ecx,DWORD PTR [esp+0x30]
64012090:	lea    edx,[esp+0x1c]
64012094:	mov    DWORD PTR [esp+0x1c],eax
64012098:	mov    DWORD PTR [esp+0x20],ecx
6401209c:	mov    DWORD PTR [ebx-0x4],edx
6401209f:	je     0x640120ff
640120a1:	lea    eax,[ebp+ebp*2+0x0]
640120a5:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
640120a9:	test   ecx,ecx
640120ab:	lea    ebx,[esi+eax*4+0x10]
640120af:	mov    eax,DWORD PTR [ebx]
640120b1:	mov    DWORD PTR [esp+0x14],eax
640120b5:	je     0x640120cd
640120b7:	mov    edx,edi
640120b9:	call   0x640191a6
640120be:	test   eax,eax
640120c0:	mov    BYTE PTR [esp+0x13],0x1
640120c5:	jl     0x6401210b
640120c7:	jg     0x64012115
640120c9:	mov    eax,DWORD PTR [esp+0x14]
640120cd:	cmp    eax,0xfffffffe
640120d0:	mov    ebp,eax
640120d2:	jne    0x640120a1
640120d4:	cmp    BYTE PTR [esp+0x13],0x0
640120d9:	je     0x640120ff
640120db:	mov    eax,DWORD PTR [esi]
640120dd:	cmp    eax,0xfffffffe
640120e0:	je     0x640120ef
640120e2:	mov    ecx,DWORD PTR [esi+0x4]
640120e5:	add    ecx,edi
640120e7:	xor    ecx,DWORD PTR [eax+edi*1]
640120ea:	call   0x64010c1e
640120ef:	mov    ecx,DWORD PTR [esi+0xc]
640120f2:	mov    eax,DWORD PTR [esi+0x8]
640120f5:	add    ecx,edi
640120f7:	xor    ecx,DWORD PTR [eax+edi*1]
640120fa:	call   0x64010c1e
640120ff:	mov    eax,DWORD PTR [esp+0x18]
64012103:	pop    edi
64012104:	pop    esi
64012105:	pop    ebp
64012106:	pop    ebx
64012107:	add    esp,0x14
6401210a:	ret    
6401210b:	mov    DWORD PTR [esp+0x18],0x0
64012113:	jmp    0x640120db
64012115:	mov    ecx,DWORD PTR [esp+0x28]
64012119:	cmp    DWORD PTR [ecx],0xe06d7363
6401211f:	jne    0x6401214b
64012121:	cmp    DWORD PTR ds:0x64022bf8,0x0
64012128:	je     0x6401214b
6401212a:	push   0x64022bf8
6401212f:	call   0x64019290
64012134:	add    esp,0x4
64012137:	test   eax,eax
64012139:	je     0x6401214b
6401213b:	mov    edx,DWORD PTR [esp+0x28]
6401213f:	push   0x1
64012141:	push   edx
64012142:	call   DWORD PTR ds:0x64022bf8
64012148:	add    esp,0x8
6401214b:	mov    ecx,DWORD PTR [esp+0x2c]
6401214f:	call   0x640191d6
64012154:	mov    eax,DWORD PTR [esp+0x2c]
64012158:	cmp    DWORD PTR [eax+0xc],ebp
6401215b:	je     0x64012170
6401215d:	push   0x64029038
64012162:	push   edi
64012163:	mov    edx,ebp
64012165:	mov    ecx,eax
64012167:	call   0x640191f0
6401216c:	mov    eax,DWORD PTR [esp+0x2c]
64012170:	mov    ecx,DWORD PTR [esp+0x14]
64012174:	mov    DWORD PTR [eax+0xc],ecx
64012177:	mov    eax,DWORD PTR [esi]
64012179:	cmp    eax,0xfffffffe
6401217c:	je     0x6401218b
6401217e:	mov    ecx,DWORD PTR [esi+0x4]
64012181:	add    ecx,edi
64012183:	xor    ecx,DWORD PTR [eax+edi*1]
64012186:	call   0x64010c1e
6401218b:	mov    ecx,DWORD PTR [esi+0xc]
6401218e:	mov    edx,DWORD PTR [esi+0x8]
64012191:	add    ecx,edi
64012193:	xor    ecx,DWORD PTR [edx+edi*1]
64012196:	call   0x64010c1e
6401219b:	mov    ecx,DWORD PTR [ebx+0x8]
6401219e:	mov    edx,edi
640121a0:	jmp    0x640191bd
640121a5:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
640121a9:	je     0x640120ff
640121af:	push   0x64029038
640121b4:	push   edi
640121b5:	mov    ecx,ebx
640121b7:	mov    edx,0xfffffffe
640121bc:	call   0x640191f0
640121c1:	jmp    0x640120db
640121c6:	push   0x10
640121c8:	push   0x64026918
640121cd:	call   0x64011fc8
640121d2:	mov    ebx,DWORD PTR [ebp+0x8]
640121d5:	test   ebx,ebx
640121d7:	jne    0x640121e7
640121d9:	push   DWORD PTR [ebp+0xc]
640121dc:	call   0x64011b93
640121e1:	pop    ecx
640121e2:	jmp    0x640123b3
640121e7:	mov    esi,DWORD PTR [ebp+0xc]
640121ea:	test   esi,esi
640121ec:	jne    0x640121fa
640121ee:	push   ebx
640121ef:	call   0x64011ab6
640121f4:	pop    ecx
640121f5:	jmp    0x640123b1
640121fa:	cmp    DWORD PTR ds:0x6402e47c,0x3
64012201:	jne    0x6401239a
64012207:	xor    edi,edi
64012209:	mov    DWORD PTR [ebp-0x1c],edi
6401220c:	cmp    esi,0xffffffe0
6401220f:	ja     0x6401239f
64012215:	push   0x4
64012217:	call   0x6401823f
6401221c:	pop    ecx
6401221d:	mov    DWORD PTR [ebp-0x4],edi
64012220:	push   ebx
64012221:	call   0x640182b8
64012226:	pop    ecx
64012227:	mov    DWORD PTR [ebp-0x20],eax
6401222a:	cmp    eax,edi
6401222c:	je     0x640122d0
64012232:	cmp    esi,DWORD PTR ds:0x6402e46c
64012238:	ja     0x64012283
6401223a:	push   esi
6401223b:	push   ebx
6401223c:	push   eax
6401223d:	call   0x640187ad
64012242:	add    esp,0xc
64012245:	test   eax,eax
64012247:	je     0x6401224e
64012249:	mov    DWORD PTR [ebp-0x1c],ebx
6401224c:	jmp    0x64012283
6401224e:	push   esi
6401224f:	call   0x64018a8c
64012254:	pop    ecx
64012255:	mov    DWORD PTR [ebp-0x1c],eax
64012258:	cmp    eax,edi
6401225a:	je     0x64012283
6401225c:	mov    eax,DWORD PTR [ebx-0x4]
6401225f:	dec    eax
64012260:	cmp    eax,esi
64012262:	jb     0x64012266
64012264:	mov    eax,esi
64012266:	push   eax
64012267:	push   ebx
64012268:	push   DWORD PTR [ebp-0x1c]
6401226b:	call   0x64012650
64012270:	push   ebx
64012271:	call   0x640182b8
64012276:	mov    DWORD PTR [ebp-0x20],eax
64012279:	push   ebx
6401227a:	push   eax
6401227b:	call   0x640182e3
64012280:	add    esp,0x18
64012283:	cmp    DWORD PTR [ebp-0x1c],edi
64012286:	jne    0x640122d0
64012288:	cmp    esi,edi
6401228a:	jne    0x64012292
6401228c:	xor    esi,esi
6401228e:	inc    esi
6401228f:	mov    DWORD PTR [ebp+0xc],esi
64012292:	add    esi,0xf
64012295:	and    esi,0xfffffff0
64012298:	mov    DWORD PTR [ebp+0xc],esi
6401229b:	push   esi
6401229c:	push   edi
6401229d:	push   DWORD PTR ds:0x6402aa0c
640122a3:	call   DWORD PTR ds:0x64022100
640122a9:	mov    DWORD PTR [ebp-0x1c],eax
640122ac:	cmp    eax,edi
640122ae:	je     0x640122d0
640122b0:	mov    eax,DWORD PTR [ebx-0x4]
640122b3:	dec    eax
640122b4:	cmp    eax,esi
640122b6:	jb     0x640122ba
640122b8:	mov    eax,esi
640122ba:	push   eax
640122bb:	push   ebx
640122bc:	push   DWORD PTR [ebp-0x1c]
640122bf:	call   0x64012650
640122c4:	push   ebx
640122c5:	push   DWORD PTR [ebp-0x20]
640122c8:	call   0x640182e3
640122cd:	add    esp,0x14
640122d0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640122d7:	call   0x6401230a
640122dc:	cmp    DWORD PTR [ebp-0x20],0x0
640122e0:	jne    0x64012313
640122e2:	test   esi,esi
640122e4:	jne    0x640122e7
640122e6:	inc    esi
640122e7:	add    esi,0xf
640122ea:	and    esi,0xfffffff0
640122ed:	mov    DWORD PTR [ebp+0xc],esi
640122f0:	push   esi
640122f1:	push   ebx
640122f2:	push   0x0
640122f4:	push   DWORD PTR ds:0x6402aa0c
640122fa:	call   DWORD PTR ds:0x64022108
64012300:	mov    edi,eax
64012302:	jmp    0x64012316
64012304:	mov    esi,DWORD PTR [ebp+0xc]
64012307:	mov    ebx,DWORD PTR [ebp+0x8]
6401230a:	push   0x4
6401230c:	call   0x64018167
64012311:	pop    ecx
64012312:	ret    
64012313:	mov    edi,DWORD PTR [ebp-0x1c]
64012316:	test   edi,edi
64012318:	jne    0x640123dd
6401231e:	cmp    DWORD PTR ds:0x6402ae84,edi
64012324:	je     0x64012352
64012326:	push   esi
64012327:	call   0x6401306b
6401232c:	pop    ecx
6401232d:	test   eax,eax
6401232f:	jne    0x64012207
64012335:	call   0x640129f0
6401233a:	cmp    DWORD PTR [ebp-0x20],edi
6401233d:	jne    0x640123ab
6401233f:	mov    esi,eax
64012341:	call   DWORD PTR ds:0x64022044
64012347:	push   eax
64012348:	call   0x640129b5
6401234d:	pop    ecx
6401234e:	mov    DWORD PTR [esi],eax
64012350:	jmp    0x640123b1
64012352:	test   edi,edi
64012354:	jne    0x640123dd
6401235a:	call   0x640129f0
6401235f:	cmp    DWORD PTR [ebp-0x20],edi
64012362:	je     0x640123cc
64012364:	mov    DWORD PTR [eax],0xc
6401236a:	jmp    0x640123dd
6401236c:	test   esi,esi
6401236e:	jne    0x64012371
64012370:	inc    esi
64012371:	push   esi
64012372:	push   ebx
64012373:	push   0x0
64012375:	push   DWORD PTR ds:0x6402aa0c
6401237b:	call   DWORD PTR ds:0x64022108
64012381:	mov    edi,eax
64012383:	test   edi,edi
64012385:	jne    0x640123dd
64012387:	cmp    DWORD PTR ds:0x6402ae84,eax
6401238d:	je     0x640123c3
6401238f:	push   esi
64012390:	call   0x6401306b
64012395:	pop    ecx
64012396:	test   eax,eax
64012398:	je     0x640123b9
6401239a:	cmp    esi,0xffffffe0
6401239d:	jbe    0x6401236c
6401239f:	push   esi
640123a0:	call   0x6401306b
640123a5:	pop    ecx
640123a6:	call   0x640129f0
640123ab:	mov    DWORD PTR [eax],0xc
640123b1:	xor    eax,eax
640123b3:	call   0x6401200d
640123b8:	ret    
640123b9:	call   0x640129f0
640123be:	jmp    0x6401233f
640123c3:	test   edi,edi
640123c5:	jne    0x640123dd
640123c7:	call   0x640129f0
640123cc:	mov    esi,eax
640123ce:	call   DWORD PTR ds:0x64022044
640123d4:	push   eax
640123d5:	call   0x640129b5
640123da:	mov    DWORD PTR [esi],eax
640123dc:	pop    ecx
640123dd:	mov    eax,edi
640123df:	jmp    0x640123b3
640123e1:	int3   
640123e2:	int3   
640123e3:	int3   
640123e4:	int3   
640123e5:	int3   
640123e6:	int3   
640123e7:	int3   
640123e8:	int3   
640123e9:	int3   
640123ea:	int3   
640123eb:	int3   
640123ec:	int3   
640123ed:	int3   
640123ee:	int3   
640123ef:	int3   
640123f0:	mov    ecx,DWORD PTR [esp+0x4]
640123f4:	test   ecx,0x3
640123fa:	je     0x64012420
640123fc:	mov    al,BYTE PTR [ecx]
640123fe:	add    ecx,0x1
64012401:	test   al,al
64012403:	je     0x64012453
64012405:	test   ecx,0x3
6401240b:	jne    0x640123fc
6401240d:	add    eax,0x0
64012412:	lea    esp,[esp+0x0]
64012419:	lea    esp,[esp+0x0]
64012420:	mov    eax,DWORD PTR [ecx]
64012422:	mov    edx,0x7efefeff
64012427:	add    edx,eax
64012429:	xor    eax,0xffffffff
6401242c:	xor    eax,edx
6401242e:	add    ecx,0x4
64012431:	test   eax,0x81010100
64012436:	je     0x64012420
64012438:	mov    eax,DWORD PTR [ecx-0x4]
6401243b:	test   al,al
6401243d:	je     0x64012471
6401243f:	test   ah,ah
64012441:	je     0x64012467
64012443:	test   eax,0xff0000
64012448:	je     0x6401245d
6401244a:	test   eax,0xff000000
6401244f:	je     0x64012453
64012451:	jmp    0x64012420
64012453:	lea    eax,[ecx-0x1]
64012456:	mov    ecx,DWORD PTR [esp+0x4]
6401245a:	sub    eax,ecx
6401245c:	ret    
6401245d:	lea    eax,[ecx-0x2]
64012460:	mov    ecx,DWORD PTR [esp+0x4]
64012464:	sub    eax,ecx
64012466:	ret    
64012467:	lea    eax,[ecx-0x3]
6401246a:	mov    ecx,DWORD PTR [esp+0x4]
6401246e:	sub    eax,ecx
64012470:	ret    
64012471:	lea    eax,[ecx-0x4]
64012474:	mov    ecx,DWORD PTR [esp+0x4]
64012478:	sub    eax,ecx
6401247a:	ret    
6401247b:	push   eax
6401247c:	push   DWORD PTR fs:0x0
64012483:	lea    eax,[esp+0xc]
64012487:	sub    esp,DWORD PTR [esp+0xc]
6401248b:	push   ebx
6401248c:	push   esi
6401248d:	push   edi
6401248e:	mov    DWORD PTR [eax],ebp
64012490:	mov    ebp,eax
64012492:	mov    eax,ds:0x64029038
64012497:	xor    eax,ebp
64012499:	push   eax
6401249a:	push   DWORD PTR [ebp-0x4]
6401249d:	mov    DWORD PTR [ebp-0x4],0xffffffff
640124a4:	lea    eax,[ebp-0xc]
640124a7:	mov    fs:0x0,eax
640124ad:	ret    
640124ae:	push   eax
640124af:	push   DWORD PTR fs:0x0
640124b6:	lea    eax,[esp+0xc]
640124ba:	sub    esp,DWORD PTR [esp+0xc]
640124be:	push   ebx
640124bf:	push   esi
640124c0:	push   edi
640124c1:	mov    DWORD PTR [eax],ebp
640124c3:	mov    ebp,eax
640124c5:	mov    eax,ds:0x64029038
640124ca:	xor    eax,ebp
640124cc:	push   eax
640124cd:	mov    DWORD PTR [ebp-0x10],esp
640124d0:	push   DWORD PTR [ebp-0x4]
640124d3:	mov    DWORD PTR [ebp-0x4],0xffffffff
640124da:	lea    eax,[ebp-0xc]
640124dd:	mov    fs:0x0,eax
640124e3:	ret    
640124e4:	push   0xc
640124e6:	push   0x64026938
640124eb:	call   0x64011fc8
640124f0:	push   0xe
640124f2:	call   0x6401823f
640124f7:	pop    ecx
640124f8:	and    DWORD PTR [ebp-0x4],0x0
640124fc:	mov    esi,DWORD PTR [ebp+0x8]
640124ff:	mov    ecx,DWORD PTR [esi+0x4]
64012502:	test   ecx,ecx
64012504:	je     0x64012535
64012506:	mov    eax,ds:0x6402a528
6401250b:	mov    edx,0x6402a524
64012510:	mov    DWORD PTR [ebp-0x1c],eax
64012513:	test   eax,eax
64012515:	je     0x64012528
64012517:	cmp    DWORD PTR [eax],ecx
64012519:	jne    0x64012547
6401251b:	mov    ecx,DWORD PTR [eax+0x4]
6401251e:	mov    DWORD PTR [edx+0x4],ecx
64012521:	push   eax
64012522:	call   0x64011ab6
64012527:	pop    ecx
64012528:	push   DWORD PTR [esi+0x4]
6401252b:	call   0x64011ab6
64012530:	pop    ecx
64012531:	and    DWORD PTR [esi+0x4],0x0
64012535:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401253c:	call   0x6401254b
64012541:	call   0x6401200d
64012546:	ret    
64012547:	mov    edx,eax
64012549:	jmp    0x64012510
6401254b:	push   0xe
6401254d:	call   0x64018167
64012552:	pop    ecx
64012553:	ret    
64012554:	int3   
64012555:	int3   
64012556:	int3   
64012557:	int3   
64012558:	int3   
64012559:	int3   
6401255a:	int3   
6401255b:	int3   
6401255c:	int3   
6401255d:	int3   
6401255e:	int3   
6401255f:	int3   
64012560:	mov    edx,DWORD PTR [esp+0x4]
64012564:	mov    ecx,DWORD PTR [esp+0x8]
64012568:	test   edx,0x3
6401256e:	jne    0x640125ac
64012570:	mov    eax,DWORD PTR [edx]
64012572:	cmp    al,BYTE PTR [ecx]
64012574:	jne    0x640125a4
64012576:	or     al,al
64012578:	je     0x640125a0
6401257a:	cmp    ah,BYTE PTR [ecx+0x1]
6401257d:	jne    0x640125a4
6401257f:	or     ah,ah
64012581:	je     0x640125a0
64012583:	shr    eax,0x10
64012586:	cmp    al,BYTE PTR [ecx+0x2]
64012589:	jne    0x640125a4
6401258b:	or     al,al
6401258d:	je     0x640125a0
6401258f:	cmp    ah,BYTE PTR [ecx+0x3]
64012592:	jne    0x640125a4
64012594:	add    ecx,0x4
64012597:	add    edx,0x4
6401259a:	or     ah,ah
6401259c:	jne    0x64012570
6401259e:	mov    edi,edi
640125a0:	xor    eax,eax
640125a2:	ret    
640125a3:	nop
640125a4:	sbb    eax,eax
640125a6:	shl    eax,1
640125a8:	add    eax,0x1
640125ab:	ret    
640125ac:	test   edx,0x1
640125b2:	je     0x640125cc
640125b4:	mov    al,BYTE PTR [edx]
640125b6:	add    edx,0x1
640125b9:	cmp    al,BYTE PTR [ecx]
640125bb:	jne    0x640125a4
640125bd:	add    ecx,0x1
640125c0:	or     al,al
640125c2:	je     0x640125a0
640125c4:	test   edx,0x2
640125ca:	je     0x64012570
640125cc:	mov    ax,WORD PTR [edx]
640125cf:	add    edx,0x2
640125d2:	cmp    al,BYTE PTR [ecx]
640125d4:	jne    0x640125a4
640125d6:	or     al,al
640125d8:	je     0x640125a0
640125da:	cmp    ah,BYTE PTR [ecx+0x1]
640125dd:	jne    0x640125a4
640125df:	or     ah,ah
640125e1:	je     0x640125a0
640125e3:	add    ecx,0x2
640125e6:	jmp    0x64012570
640125e8:	mov    ecx,DWORD PTR [esp+0x4]
640125ec:	push   ebx
640125ed:	xor    ebx,ebx
640125ef:	cmp    ecx,ebx
640125f1:	push   esi
640125f2:	push   edi
640125f3:	je     0x640125fd
640125f5:	mov    edi,DWORD PTR [esp+0x14]
640125f9:	cmp    edi,ebx
640125fb:	ja     0x64012618
640125fd:	call   0x640129f0
64012602:	push   0x16
64012604:	pop    esi
64012605:	mov    DWORD PTR [eax],esi
64012607:	push   ebx
64012608:	push   ebx
64012609:	push   ebx
6401260a:	push   ebx
6401260b:	push   ebx
6401260c:	call   0x64010756
64012611:	add    esp,0x14
64012614:	mov    eax,esi
64012616:	jmp    0x64012649
64012618:	mov    esi,DWORD PTR [esp+0x18]
6401261c:	cmp    esi,ebx
6401261e:	jne    0x64012624
64012620:	mov    BYTE PTR [ecx],bl
64012622:	jmp    0x640125fd
64012624:	mov    edx,ecx
64012626:	mov    al,BYTE PTR [esi]
64012628:	mov    BYTE PTR [edx],al
6401262a:	inc    edx
6401262b:	inc    esi
6401262c:	cmp    al,bl
6401262e:	je     0x64012633
64012630:	dec    edi
64012631:	jne    0x64012626
64012633:	cmp    edi,ebx
64012635:	jne    0x64012647
64012637:	mov    BYTE PTR [ecx],bl
64012639:	call   0x640129f0
6401263e:	push   0x22
64012640:	pop    ecx
64012641:	mov    DWORD PTR [eax],ecx
64012643:	mov    esi,ecx
64012645:	jmp    0x64012607
64012647:	xor    eax,eax
64012649:	pop    edi
6401264a:	pop    esi
6401264b:	pop    ebx
6401264c:	ret    
6401264d:	int3   
6401264e:	int3   
6401264f:	int3   
64012650:	push   ebp
64012651:	mov    ebp,esp
64012653:	push   edi
64012654:	push   esi
64012655:	mov    esi,DWORD PTR [ebp+0xc]
64012658:	mov    ecx,DWORD PTR [ebp+0x10]
6401265b:	mov    edi,DWORD PTR [ebp+0x8]
6401265e:	mov    eax,ecx
64012660:	mov    edx,ecx
64012662:	add    eax,esi
64012664:	cmp    edi,esi
64012666:	jbe    0x64012670
64012668:	cmp    edi,eax
6401266a:	jb     0x64012814
64012670:	cmp    ecx,0x100
64012676:	jb     0x64012697
64012678:	cmp    DWORD PTR ds:0x6402e5a4,0x0
6401267f:	je     0x64012697
64012681:	push   edi
64012682:	push   esi
64012683:	and    edi,0xf
64012686:	and    esi,0xf
64012689:	cmp    edi,esi
6401268b:	pop    esi
6401268c:	pop    edi
6401268d:	jne    0x64012697
6401268f:	pop    esi
64012690:	pop    edi
64012691:	pop    ebp
64012692:	jmp    0x64018fcf
64012697:	test   edi,0x3
6401269d:	jne    0x640126b4
6401269f:	shr    ecx,0x2
640126a2:	and    edx,0x3
640126a5:	cmp    ecx,0x8
640126a8:	jb     0x640126d4
640126aa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640126ac:	jmp    DWORD PTR [edx*4+0x640127c4]
640126b3:	nop
640126b4:	mov    eax,edi
640126b6:	mov    edx,0x3
640126bb:	sub    ecx,0x4
640126be:	jb     0x640126cc
640126c0:	and    eax,0x3
640126c3:	add    ecx,eax
640126c5:	jmp    DWORD PTR [eax*4+0x640126d8]
640126cc:	jmp    DWORD PTR [ecx*4+0x640127d4]
640126d3:	nop
640126d4:	jmp    DWORD PTR [ecx*4+0x64012758]
640126db:	nop
640126dc:	call   0x78652807
640126e1:	daa    
640126e2:	add    DWORD PTR [eax+edi*1+0x27],esp
640126e6:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
640126ea:	mov    al,BYTE PTR [esi]
640126ec:	mov    BYTE PTR [edi],al
640126ee:	mov    al,BYTE PTR [esi+0x1]
640126f1:	mov    BYTE PTR [edi+0x1],al
640126f4:	mov    al,BYTE PTR [esi+0x2]
640126f7:	shr    ecx,0x2
640126fa:	mov    BYTE PTR [edi+0x2],al
640126fd:	add    esi,0x3
64012700:	add    edi,0x3
64012703:	cmp    ecx,0x8
64012706:	jb     0x640126d4
64012708:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401270a:	jmp    DWORD PTR [edx*4+0x640127c4]
64012711:	lea    ecx,[ecx+0x0]
64012714:	and    edx,ecx
64012716:	mov    al,BYTE PTR [esi]
64012718:	mov    BYTE PTR [edi],al
6401271a:	mov    al,BYTE PTR [esi+0x1]
6401271d:	shr    ecx,0x2
64012720:	mov    BYTE PTR [edi+0x1],al
64012723:	add    esi,0x2
64012726:	add    edi,0x2
64012729:	cmp    ecx,0x8
6401272c:	jb     0x640126d4
6401272e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64012730:	jmp    DWORD PTR [edx*4+0x640127c4]
64012737:	nop
64012738:	and    edx,ecx
6401273a:	mov    al,BYTE PTR [esi]
6401273c:	mov    BYTE PTR [edi],al
6401273e:	add    esi,0x1
64012741:	shr    ecx,0x2
64012744:	add    edi,0x1
64012747:	cmp    ecx,0x8
6401274a:	jb     0x640126d4
6401274c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401274e:	jmp    DWORD PTR [edx*4+0x640127c4]
64012755:	lea    ecx,[ecx+0x0]
64012758:	mov    ebx,0xa8640127
6401275d:	daa    
6401275e:	add    DWORD PTR [eax+eiz*4+0x27],esp
64012762:	add    DWORD PTR [eax+ebx*4+0x27],esp
64012766:	add    DWORD PTR [eax+edx*4+0x27],esp
6401276a:	add    DWORD PTR [eax+ecx*4+0x27],esp
6401276e:	add    DWORD PTR [eax+eax*4+0x27],esp
64012772:	add    DWORD PTR [eax+edi*2+0x27],esp
64012776:	add    DWORD PTR [ebx+ecx*4+0x44],esp
6401277a:	mov    fs,esp
6401277c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64012780:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64012784:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64012788:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
6401278c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64012790:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64012794:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64012798:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
6401279c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
640127a0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
640127a4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
640127a8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
640127ac:	mov    DWORD PTR [edi+ecx*4-0x4],eax
640127b0:	lea    eax,[ecx*4+0x0]
640127b7:	add    esi,eax
640127b9:	add    edi,eax
640127bb:	jmp    DWORD PTR [edx*4+0x640127c4]
640127c2:	mov    edi,edi
640127c4:	aam    0x27
640127c6:	add    DWORD PTR [esp+ebx*8+0x27],esp
640127ca:	add    DWORD PTR [eax+ebp*8+0x27],esp
640127ce:	add    DWORD PTR [esp+edi*8+0x27],esp
640127d2:	add    DWORD PTR [ebx+ecx*4+0x45],esp
640127d6:	or     BYTE PTR [esi+0x5f],bl
640127d9:	leave  
640127da:	ret    
640127db:	nop
640127dc:	mov    al,BYTE PTR [esi]
640127de:	mov    BYTE PTR [edi],al
640127e0:	mov    eax,DWORD PTR [ebp+0x8]
640127e3:	pop    esi
640127e4:	pop    edi
640127e5:	leave  
640127e6:	ret    
640127e7:	nop
640127e8:	mov    al,BYTE PTR [esi]
640127ea:	mov    BYTE PTR [edi],al
640127ec:	mov    al,BYTE PTR [esi+0x1]
640127ef:	mov    BYTE PTR [edi+0x1],al
640127f2:	mov    eax,DWORD PTR [ebp+0x8]
640127f5:	pop    esi
640127f6:	pop    edi
640127f7:	leave  
640127f8:	ret    
640127f9:	lea    ecx,[ecx+0x0]
640127fc:	mov    al,BYTE PTR [esi]
640127fe:	mov    BYTE PTR [edi],al
64012800:	mov    al,BYTE PTR [esi+0x1]
64012803:	mov    BYTE PTR [edi+0x1],al
64012806:	mov    al,BYTE PTR [esi+0x2]
64012809:	mov    BYTE PTR [edi+0x2],al
6401280c:	mov    eax,DWORD PTR [ebp+0x8]
6401280f:	pop    esi
64012810:	pop    edi
64012811:	leave  
64012812:	ret    
64012813:	nop
64012814:	lea    esi,[ecx+esi*1-0x4]
64012818:	lea    edi,[ecx+edi*1-0x4]
6401281c:	test   edi,0x3
64012822:	jne    0x64012848
64012824:	shr    ecx,0x2
64012827:	and    edx,0x3
6401282a:	cmp    ecx,0x8
6401282d:	jb     0x6401283c
6401282f:	std    
64012830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64012832:	cld    
64012833:	jmp    DWORD PTR [edx*4+0x64012960]
6401283a:	mov    edi,edi
6401283c:	neg    ecx
6401283e:	jmp    DWORD PTR [ecx*4+0x64012910]
64012845:	lea    ecx,[ecx+0x0]
64012848:	mov    eax,edi
6401284a:	mov    edx,0x3
6401284f:	cmp    ecx,0x4
64012852:	jb     0x64012860
64012854:	and    eax,0x3
64012857:	sub    ecx,eax
64012859:	jmp    DWORD PTR [eax*4+0x64012864]
64012860:	jmp    DWORD PTR [ecx*4+0x64012960]
64012867:	nop
64012868:	je     0x64012892
6401286a:	add    DWORD PTR [eax+ebx*4+0x28],esp
6401286e:	add    DWORD PTR [eax+eax*8+0x28],esp
64012872:	add    DWORD PTR [edx+ecx*4+0x46],esp
64012876:	add    esp,DWORD PTR [ebx]
64012878:	ror    DWORD PTR [eax-0x117cfcb9],1
6401287e:	add    ecx,eax
64012880:	jmp    0x65f0ab87
64012885:	cmp    ecx,0x8
64012888:	jb     0x6401283c
6401288a:	std    
6401288b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401288d:	cld    
6401288e:	jmp    DWORD PTR [edx*4+0x64012960]
64012895:	lea    ecx,[ecx+0x0]
64012898:	mov    al,BYTE PTR [esi+0x3]
6401289b:	and    edx,ecx
6401289d:	mov    BYTE PTR [edi+0x3],al
640128a0:	mov    al,BYTE PTR [esi+0x2]
640128a3:	shr    ecx,0x2
640128a6:	mov    BYTE PTR [edi+0x2],al
640128a9:	sub    esi,0x2
640128ac:	sub    edi,0x2
640128af:	cmp    ecx,0x8
640128b2:	jb     0x6401283c
640128b4:	std    
640128b5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640128b7:	cld    
640128b8:	jmp    DWORD PTR [edx*4+0x64012960]
640128bf:	nop
640128c0:	mov    al,BYTE PTR [esi+0x3]
640128c3:	and    edx,ecx
640128c5:	mov    BYTE PTR [edi+0x3],al
640128c8:	mov    al,BYTE PTR [esi+0x2]
640128cb:	mov    BYTE PTR [edi+0x2],al
640128ce:	mov    al,BYTE PTR [esi+0x1]
640128d1:	shr    ecx,0x2
640128d4:	mov    BYTE PTR [edi+0x1],al
640128d7:	sub    esi,0x3
640128da:	sub    edi,0x3
640128dd:	cmp    ecx,0x8
640128e0:	jb     0x6401283c
640128e6:	std    
640128e7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640128e9:	cld    
640128ea:	jmp    DWORD PTR [edx*4+0x64012960]
640128f1:	lea    ecx,[ecx+0x0]
640128f4:	adc    al,0x29
640128f6:	add    DWORD PTR [esp+ebx*1+0x29],esp
640128fa:	add    DWORD PTR [esp+0x29],esp
640128fe:	add    DWORD PTR [esp+ebp*1+0x29],esp
64012902:	add    DWORD PTR [esp+esi*1+0x29],esp
64012906:	add    DWORD PTR [esp+edi*1+0x29],esp
6401290a:	add    DWORD PTR [esp+eax*2+0x29],esp
6401290e:	add    DWORD PTR [edi+edx*2+0x29],esp
64012912:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64012916:	mov    ds,WORD PTR [ecx+ecx*4]
64012919:	inc    esp
6401291a:	(bad)  
6401291b:	sbb    al,0x8b
6401291d:	inc    esp
6401291e:	mov    ds,WORD PTR [eax]
64012920:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64012924:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64012928:	mov    DWORD PTR [edi+ecx*4+0x14],eax
6401292c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64012930:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64012934:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64012938:	mov    DWORD PTR [edi+ecx*4+0xc],eax
6401293c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64012940:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64012944:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64012948:	mov    DWORD PTR [edi+ecx*4+0x4],eax
6401294c:	lea    eax,[ecx*4+0x0]
64012953:	add    esi,eax
64012955:	add    edi,eax
64012957:	jmp    DWORD PTR [edx*4+0x64012960]
6401295e:	mov    edi,edi
64012960:	jo     0x6401298b
64012962:	add    DWORD PTR [eax+edi*2+0x29],esp
64012966:	add    DWORD PTR [eax+ecx*4+0x29],esp
6401296a:	add    DWORD PTR [esp+ebx*4+0x29],esp
6401296e:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64012972:	or     BYTE PTR [esi+0x5f],bl
64012975:	leave  
64012976:	ret    
64012977:	nop
64012978:	mov    al,BYTE PTR [esi+0x3]
6401297b:	mov    BYTE PTR [edi+0x3],al
6401297e:	mov    eax,DWORD PTR [ebp+0x8]
64012981:	pop    esi
64012982:	pop    edi
64012983:	leave  
64012984:	ret    
64012985:	lea    ecx,[ecx+0x0]
64012988:	mov    al,BYTE PTR [esi+0x3]
6401298b:	mov    BYTE PTR [edi+0x3],al
6401298e:	mov    al,BYTE PTR [esi+0x2]
64012991:	mov    BYTE PTR [edi+0x2],al
64012994:	mov    eax,DWORD PTR [ebp+0x8]
64012997:	pop    esi
64012998:	pop    edi
64012999:	leave  
6401299a:	ret    
6401299b:	nop
6401299c:	mov    al,BYTE PTR [esi+0x3]
6401299f:	mov    BYTE PTR [edi+0x3],al
640129a2:	mov    al,BYTE PTR [esi+0x2]
640129a5:	mov    BYTE PTR [edi+0x2],al
640129a8:	mov    al,BYTE PTR [esi+0x1]
640129ab:	mov    BYTE PTR [edi+0x1],al
640129ae:	mov    eax,DWORD PTR [ebp+0x8]
640129b1:	pop    esi
640129b2:	pop    edi
640129b3:	leave  
640129b4:	ret    
640129b5:	mov    eax,DWORD PTR [esp+0x4]
640129b9:	xor    ecx,ecx
640129bb:	cmp    eax,DWORD PTR [ecx*8+0x64029050]
640129c2:	je     0x640129d6
640129c4:	inc    ecx
640129c5:	cmp    ecx,0x2d
640129c8:	jb     0x640129bb
640129ca:	lea    ecx,[eax-0x13]
640129cd:	cmp    ecx,0x11
640129d0:	ja     0x640129de
640129d2:	push   0xd
640129d4:	pop    eax
640129d5:	ret    
640129d6:	mov    eax,DWORD PTR [ecx*8+0x64029054]
640129dd:	ret    
640129de:	add    eax,0xffffff44
640129e3:	push   0xe
640129e5:	pop    ecx
640129e6:	cmp    ecx,eax
640129e8:	sbb    eax,eax
640129ea:	and    eax,ecx
640129ec:	add    eax,0x8
640129ef:	ret    
640129f0:	call   0x64012cc4
640129f5:	test   eax,eax
640129f7:	jne    0x640129ff
640129f9:	mov    eax,0x640291b8
640129fe:	ret    
640129ff:	add    eax,0x8
64012a02:	ret    
64012a03:	call   0x64012cc4
64012a08:	test   eax,eax
64012a0a:	jne    0x64012a12
64012a0c:	mov    eax,0x640291bc
64012a11:	ret    
64012a12:	add    eax,0xc
64012a15:	ret    
64012a16:	push   esi
64012a17:	call   0x64012a03
64012a1c:	mov    ecx,DWORD PTR [esp+0x8]
64012a20:	push   ecx
64012a21:	mov    DWORD PTR [eax],ecx
64012a23:	call   0x640129b5
64012a28:	pop    ecx
64012a29:	mov    esi,eax
64012a2b:	call   0x640129f0
64012a30:	mov    DWORD PTR [eax],esi
64012a32:	pop    esi
64012a33:	ret    
64012a34:	and    DWORD PTR ds:0x6402e5bc,0x0
64012a3b:	ret    
64012a3c:	push   ebp
64012a3d:	mov    ebp,esp
64012a3f:	push   ecx
64012a40:	push   ecx
64012a41:	push   ebx
64012a42:	push   esi
64012a43:	xor    esi,esi
64012a45:	lea    eax,[ebp-0x4]
64012a48:	inc    esi
64012a49:	xor    ebx,ebx
64012a4b:	push   eax
64012a4c:	mov    DWORD PTR [ebp-0x8],esi
64012a4f:	mov    DWORD PTR [ebp-0x4],ebx
64012a52:	call   0x64014156
64012a57:	cmp    DWORD PTR [ebp-0x4],0x5
64012a5b:	pop    ecx
64012a5c:	jle    0x64012a62
64012a5e:	mov    eax,esi
64012a60:	jmp    0x64012aa4
64012a62:	push   edi
64012a63:	push   ebx
64012a64:	call   DWORD PTR ds:0x64022130
64012a6a:	mov    esi,DWORD PTR [eax+0x3c]
64012a6d:	add    esi,eax
64012a6f:	cmp    WORD PTR [esi+0x6],bx
64012a73:	movzx  eax,WORD PTR [esi+0x14]
64012a77:	lea    edi,[eax+esi*1+0x18]
64012a7b:	jbe    0x64012aa0
64012a7d:	push   edi
64012a7e:	push   0x64022b94
64012a83:	call   0x64012560
64012a88:	test   eax,eax
64012a8a:	pop    ecx
64012a8b:	pop    ecx
64012a8c:	je     0x64012a9c
64012a8e:	movzx  eax,WORD PTR [esi+0x6]
64012a92:	inc    ebx
64012a93:	add    edi,0x28
64012a96:	cmp    ebx,eax
64012a98:	jb     0x64012a7d
64012a9a:	jmp    0x64012aa0
64012a9c:	and    DWORD PTR [ebp-0x8],0x0
64012aa0:	mov    eax,DWORD PTR [ebp-0x8]
64012aa3:	pop    edi
64012aa4:	pop    esi
64012aa5:	pop    ebx
64012aa6:	leave  
64012aa7:	ret    
64012aa8:	push   esi
64012aa9:	push   DWORD PTR ds:0x640291c4
64012aaf:	mov    esi,DWORD PTR ds:0x64022134
64012ab5:	call   esi
64012ab7:	test   eax,eax
64012ab9:	je     0x64012adc
64012abb:	mov    eax,ds:0x640291c0
64012ac0:	cmp    eax,0xffffffff
64012ac3:	je     0x64012adc
64012ac5:	push   eax
64012ac6:	push   DWORD PTR ds:0x640291c4
64012acc:	call   esi
64012ace:	call   eax
64012ad0:	test   eax,eax
64012ad2:	je     0x64012adc
64012ad4:	mov    eax,DWORD PTR [eax+0x1f8]
64012ada:	jmp    0x64012b02
64012adc:	push   0x64022bac
64012ae1:	call   DWORD PTR ds:0x64022130
64012ae7:	mov    esi,eax
64012ae9:	test   esi,esi
64012aeb:	je     0x64012b10
64012aed:	call   0x64012a3c
64012af2:	test   eax,eax
64012af4:	je     0x64012b10
64012af6:	push   0x64022b9c
64012afb:	push   esi
64012afc:	call   DWORD PTR ds:0x64022014
64012b02:	test   eax,eax
64012b04:	je     0x64012b10
64012b06:	push   DWORD PTR [esp+0x8]
64012b0a:	call   eax
64012b0c:	mov    DWORD PTR [esp+0x8],eax
64012b10:	mov    eax,DWORD PTR [esp+0x8]
64012b14:	pop    esi
64012b15:	ret    
64012b16:	push   0x0
64012b18:	call   0x64012aa8
64012b1d:	pop    ecx
64012b1e:	ret    
64012b1f:	push   esi
64012b20:	push   DWORD PTR ds:0x640291c4
64012b26:	mov    esi,DWORD PTR ds:0x64022134
64012b2c:	call   esi
64012b2e:	test   eax,eax
64012b30:	je     0x64012b53
64012b32:	mov    eax,ds:0x640291c0
64012b37:	cmp    eax,0xffffffff
64012b3a:	je     0x64012b53
64012b3c:	push   eax
64012b3d:	push   DWORD PTR ds:0x640291c4
64012b43:	call   esi
64012b45:	call   eax
64012b47:	test   eax,eax
64012b49:	je     0x64012b53
64012b4b:	mov    eax,DWORD PTR [eax+0x1fc]
64012b51:	jmp    0x64012b79
64012b53:	push   0x64022bac
64012b58:	call   DWORD PTR ds:0x64022130
64012b5e:	mov    esi,eax
64012b60:	test   esi,esi
64012b62:	je     0x64012b87
64012b64:	call   0x64012a3c
64012b69:	test   eax,eax
64012b6b:	je     0x64012b87
64012b6d:	push   0x64022bbc
64012b72:	push   esi
64012b73:	call   DWORD PTR ds:0x64022014
64012b79:	test   eax,eax
64012b7b:	je     0x64012b87
64012b7d:	push   DWORD PTR [esp+0x8]
64012b81:	call   eax
64012b83:	mov    DWORD PTR [esp+0x8],eax
64012b87:	mov    eax,DWORD PTR [esp+0x8]
64012b8b:	pop    esi
64012b8c:	ret    
64012b8d:	call   DWORD PTR ds:0x64022138
64012b93:	ret    0x4
64012b96:	push   esi
64012b97:	push   DWORD PTR ds:0x640291c4
64012b9d:	call   DWORD PTR ds:0x64022134
64012ba3:	mov    esi,eax
64012ba5:	test   esi,esi
64012ba7:	jne    0x64012bc4
64012ba9:	push   DWORD PTR ds:0x6402a530
64012baf:	call   0x64012b1f
64012bb4:	pop    ecx
64012bb5:	mov    esi,eax
64012bb7:	push   esi
64012bb8:	push   DWORD PTR ds:0x640291c4
64012bbe:	call   DWORD PTR ds:0x6402213c
64012bc4:	mov    eax,esi
64012bc6:	pop    esi
64012bc7:	ret    
64012bc8:	mov    eax,ds:0x640291c0
64012bcd:	cmp    eax,0xffffffff
64012bd0:	je     0x64012be8
64012bd2:	push   eax
64012bd3:	push   DWORD PTR ds:0x6402a538
64012bd9:	call   0x64012b1f
64012bde:	pop    ecx
64012bdf:	call   eax
64012be1:	or     DWORD PTR ds:0x640291c0,0xffffffff
64012be8:	mov    eax,ds:0x640291c4
64012bed:	cmp    eax,0xffffffff
64012bf0:	je     0x64012c00
64012bf2:	push   eax
64012bf3:	call   DWORD PTR ds:0x64022140
64012bf9:	or     DWORD PTR ds:0x640291c4,0xffffffff
64012c00:	jmp    0x64018112
64012c05:	push   0xc
64012c07:	push   0x64026958
64012c0c:	call   0x64011fc8
64012c11:	push   0x64022bac
64012c16:	call   DWORD PTR ds:0x64022130
64012c1c:	mov    DWORD PTR [ebp-0x1c],eax
64012c1f:	mov    esi,DWORD PTR [ebp+0x8]
64012c22:	mov    DWORD PTR [esi+0x5c],0x64029858
64012c29:	xor    edi,edi
64012c2b:	inc    edi
64012c2c:	mov    DWORD PTR [esi+0x14],edi
64012c2f:	test   eax,eax
64012c31:	je     0x64012c62
64012c33:	call   0x64012a3c
64012c38:	test   eax,eax
64012c3a:	je     0x64012c62
64012c3c:	push   0x64022b9c
64012c41:	push   DWORD PTR [ebp-0x1c]
64012c44:	mov    ebx,DWORD PTR ds:0x64022014
64012c4a:	call   ebx
64012c4c:	mov    DWORD PTR [esi+0x1f8],eax
64012c52:	push   0x64022bbc
64012c57:	push   DWORD PTR [ebp-0x1c]
64012c5a:	call   ebx
64012c5c:	mov    DWORD PTR [esi+0x1fc],eax
64012c62:	mov    DWORD PTR [esi+0x70],edi
64012c65:	mov    BYTE PTR [esi+0xc8],0x43
64012c6c:	mov    BYTE PTR [esi+0x14b],0x43
64012c73:	mov    eax,0x640291f8
64012c78:	mov    DWORD PTR [esi+0x68],eax
64012c7b:	push   eax
64012c7c:	call   DWORD PTR ds:0x64022020
64012c82:	push   0xc
64012c84:	call   0x6401823f
64012c89:	pop    ecx
64012c8a:	and    DWORD PTR [ebp-0x4],0x0
64012c8e:	mov    eax,DWORD PTR [ebp+0xc]
64012c91:	mov    DWORD PTR [esi+0x6c],eax
64012c94:	test   eax,eax
64012c96:	jne    0x64012ca0
64012c98:	mov    eax,ds:0x64029800
64012c9d:	mov    DWORD PTR [esi+0x6c],eax
64012ca0:	push   DWORD PTR [esi+0x6c]
64012ca3:	call   0x64014b6f
64012ca8:	pop    ecx
64012ca9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012cb0:	call   0x64012cbb
64012cb5:	call   0x6401200d
64012cba:	ret    
64012cbb:	push   0xc
64012cbd:	call   0x64018167
64012cc2:	pop    ecx
64012cc3:	ret    
64012cc4:	push   esi
64012cc5:	push   edi
64012cc6:	call   DWORD PTR ds:0x64022044
64012ccc:	push   DWORD PTR ds:0x640291c0
64012cd2:	mov    edi,eax
64012cd4:	call   0x64012b96
64012cd9:	call   eax
64012cdb:	mov    esi,eax
64012cdd:	test   esi,esi
64012cdf:	jne    0x64012d2f
64012ce1:	push   0x214
64012ce6:	push   0x1
64012ce8:	call   0x64013f40
64012ced:	mov    esi,eax
64012cef:	test   esi,esi
64012cf1:	pop    ecx
64012cf2:	pop    ecx
64012cf3:	je     0x64012d2f
64012cf5:	push   esi
64012cf6:	push   DWORD PTR ds:0x640291c0
64012cfc:	push   DWORD PTR ds:0x6402a534
64012d02:	call   0x64012b1f
64012d07:	pop    ecx
64012d08:	call   eax
64012d0a:	test   eax,eax
64012d0c:	je     0x64012d26
64012d0e:	push   0x0
64012d10:	push   esi
64012d11:	call   0x64012c05
64012d16:	pop    ecx
64012d17:	pop    ecx
64012d18:	call   DWORD PTR ds:0x64022128
64012d1e:	or     DWORD PTR [esi+0x4],0xffffffff
64012d22:	mov    DWORD PTR [esi],eax
64012d24:	jmp    0x64012d2f
64012d26:	push   esi
64012d27:	call   0x64011ab6
64012d2c:	pop    ecx
64012d2d:	xor    esi,esi
64012d2f:	push   edi
64012d30:	call   DWORD PTR ds:0x64022060
64012d36:	pop    edi
64012d37:	mov    eax,esi
64012d39:	pop    esi
64012d3a:	ret    
64012d3b:	push   esi
64012d3c:	call   0x64012cc4
64012d41:	mov    esi,eax
64012d43:	test   esi,esi
64012d45:	jne    0x64012d4f
64012d47:	push   0x10
64012d49:	call   0x64014076
64012d4e:	pop    ecx
64012d4f:	mov    eax,esi
64012d51:	pop    esi
64012d52:	ret    
64012d53:	push   0x8
64012d55:	push   0x64026978
64012d5a:	call   0x64011fc8
64012d5f:	mov    esi,DWORD PTR [ebp+0x8]
64012d62:	test   esi,esi
64012d64:	je     0x64012e54
64012d6a:	mov    eax,DWORD PTR [esi+0x24]
64012d6d:	test   eax,eax
64012d6f:	je     0x64012d78
64012d71:	push   eax
64012d72:	call   0x64011ab6
64012d77:	pop    ecx
64012d78:	mov    eax,DWORD PTR [esi+0x2c]
64012d7b:	test   eax,eax
64012d7d:	je     0x64012d86
64012d7f:	push   eax
64012d80:	call   0x64011ab6
64012d85:	pop    ecx
64012d86:	mov    eax,DWORD PTR [esi+0x34]
64012d89:	test   eax,eax
64012d8b:	je     0x64012d94
64012d8d:	push   eax
64012d8e:	call   0x64011ab6
64012d93:	pop    ecx
64012d94:	mov    eax,DWORD PTR [esi+0x3c]
64012d97:	test   eax,eax
64012d99:	je     0x64012da2
64012d9b:	push   eax
64012d9c:	call   0x64011ab6
64012da1:	pop    ecx
64012da2:	mov    eax,DWORD PTR [esi+0x44]
64012da5:	test   eax,eax
64012da7:	je     0x64012db0
64012da9:	push   eax
64012daa:	call   0x64011ab6
64012daf:	pop    ecx
64012db0:	mov    eax,DWORD PTR [esi+0x48]
64012db3:	test   eax,eax
64012db5:	je     0x64012dbe
64012db7:	push   eax
64012db8:	call   0x64011ab6
64012dbd:	pop    ecx
64012dbe:	mov    eax,DWORD PTR [esi+0x5c]
64012dc1:	cmp    eax,0x64029858
64012dc6:	je     0x64012dcf
64012dc8:	push   eax
64012dc9:	call   0x64011ab6
64012dce:	pop    ecx
64012dcf:	push   0xd
64012dd1:	call   0x6401823f
64012dd6:	pop    ecx
64012dd7:	and    DWORD PTR [ebp-0x4],0x0
64012ddb:	mov    edi,DWORD PTR [esi+0x68]
64012dde:	test   edi,edi
64012de0:	je     0x64012dfc
64012de2:	push   edi
64012de3:	call   DWORD PTR ds:0x64022094
64012de9:	test   eax,eax
64012deb:	jne    0x64012dfc
64012ded:	cmp    edi,0x640291f8
64012df3:	je     0x64012dfc
64012df5:	push   edi
64012df6:	call   0x64011ab6
64012dfb:	pop    ecx
64012dfc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012e03:	call   0x64012e5f
64012e08:	push   0xc
64012e0a:	call   0x6401823f
64012e0f:	pop    ecx
64012e10:	mov    DWORD PTR [ebp-0x4],0x1
64012e17:	mov    edi,DWORD PTR [esi+0x6c]
64012e1a:	test   edi,edi
64012e1c:	je     0x64012e41
64012e1e:	push   edi
64012e1f:	call   0x64014bf5
64012e24:	pop    ecx
64012e25:	cmp    edi,DWORD PTR ds:0x64029800
64012e2b:	je     0x64012e41
64012e2d:	cmp    edi,0x64029728
64012e33:	je     0x64012e41
64012e35:	cmp    DWORD PTR [edi],0x0
64012e38:	jne    0x64012e41
64012e3a:	push   edi
64012e3b:	call   0x64014a2f
64012e40:	pop    ecx
64012e41:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012e48:	call   0x64012e6b
64012e4d:	push   esi
64012e4e:	call   0x64011ab6
64012e53:	pop    ecx
64012e54:	call   0x6401200d
64012e59:	ret    0x4
64012e5c:	mov    esi,DWORD PTR [ebp+0x8]
64012e5f:	push   0xd
64012e61:	call   0x64018167
64012e66:	pop    ecx
64012e67:	ret    
64012e68:	mov    esi,DWORD PTR [ebp+0x8]
64012e6b:	push   0xc
64012e6d:	call   0x64018167
64012e72:	pop    ecx
64012e73:	ret    
64012e74:	cmp    DWORD PTR ds:0x640291c0,0xffffffff
64012e7b:	je     0x64012ec9
64012e7d:	push   edi
64012e7e:	mov    edi,DWORD PTR [esp+0x8]
64012e82:	test   edi,edi
64012e84:	jne    0x64012eac
64012e86:	push   esi
64012e87:	push   DWORD PTR ds:0x640291c4
64012e8d:	mov    esi,DWORD PTR ds:0x64022134
64012e93:	call   esi
64012e95:	test   eax,eax
64012e97:	je     0x64012eab
64012e99:	push   DWORD PTR ds:0x640291c0
64012e9f:	push   DWORD PTR ds:0x640291c4
64012ea5:	call   esi
64012ea7:	call   eax
64012ea9:	mov    edi,eax
64012eab:	pop    esi
64012eac:	push   0x0
64012eae:	push   DWORD PTR ds:0x640291c0
64012eb4:	push   DWORD PTR ds:0x6402a534
64012eba:	call   0x64012b1f
64012ebf:	pop    ecx
64012ec0:	call   eax
64012ec2:	push   edi
64012ec3:	call   0x64012d53
64012ec8:	pop    edi
64012ec9:	mov    eax,ds:0x640291c4
64012ece:	cmp    eax,0xffffffff
64012ed1:	je     0x64012edc
64012ed3:	push   0x0
64012ed5:	push   eax
64012ed6:	call   DWORD PTR ds:0x6402213c
64012edc:	ret    
64012edd:	push   edi
64012ede:	push   0x64022bac
64012ee3:	call   DWORD PTR ds:0x64022130
64012ee9:	mov    edi,eax
64012eeb:	test   edi,edi
64012eed:	jne    0x64012ef8
64012eef:	call   0x64012bc8
64012ef4:	xor    eax,eax
64012ef6:	pop    edi
64012ef7:	ret    
64012ef8:	push   esi
64012ef9:	mov    esi,DWORD PTR ds:0x64022014
64012eff:	push   0x64022bec
64012f04:	push   edi
64012f05:	call   esi
64012f07:	push   0x64022be0
64012f0c:	push   edi
64012f0d:	mov    ds:0x6402a52c,eax
64012f12:	call   esi
64012f14:	push   0x64022bd4
64012f19:	push   edi
64012f1a:	mov    ds:0x6402a530,eax
64012f1f:	call   esi
64012f21:	push   0x64022bcc
64012f26:	push   edi
64012f27:	mov    ds:0x6402a534,eax
64012f2c:	call   esi
64012f2e:	cmp    DWORD PTR ds:0x6402a52c,0x0
64012f35:	mov    esi,DWORD PTR ds:0x6402213c
64012f3b:	mov    ds:0x6402a538,eax
64012f40:	je     0x64012f58
64012f42:	cmp    DWORD PTR ds:0x6402a530,0x0
64012f49:	je     0x64012f58
64012f4b:	cmp    DWORD PTR ds:0x6402a534,0x0
64012f52:	je     0x64012f58
64012f54:	test   eax,eax
64012f56:	jne    0x64012f7c
64012f58:	mov    eax,ds:0x64022134
64012f5d:	mov    ds:0x6402a530,eax
64012f62:	mov    eax,ds:0x64022140
64012f67:	mov    DWORD PTR ds:0x6402a52c,0x64012b8d
64012f71:	mov    DWORD PTR ds:0x6402a534,esi
64012f77:	mov    ds:0x6402a538,eax
64012f7c:	call   DWORD PTR ds:0x64022138
64012f82:	cmp    eax,0xffffffff
64012f85:	mov    ds:0x640291c4,eax
64012f8a:	je     0x6401305c
64012f90:	push   DWORD PTR ds:0x6402a530
64012f96:	push   eax
64012f97:	call   esi
64012f99:	test   eax,eax
64012f9b:	je     0x6401305c
64012fa1:	call   0x64014326
64012fa6:	push   DWORD PTR ds:0x6402a52c
64012fac:	call   0x64012aa8
64012fb1:	push   DWORD PTR ds:0x6402a530
64012fb7:	mov    ds:0x6402a52c,eax
64012fbc:	call   0x64012aa8
64012fc1:	push   DWORD PTR ds:0x6402a534
64012fc7:	mov    ds:0x6402a530,eax
64012fcc:	call   0x64012aa8
64012fd1:	push   DWORD PTR ds:0x6402a538
64012fd7:	mov    ds:0x6402a534,eax
64012fdc:	call   0x64012aa8
64012fe1:	add    esp,0x10
64012fe4:	mov    ds:0x6402a538,eax
64012fe9:	call   0x640180c9
64012fee:	test   eax,eax
64012ff0:	je     0x64013057
64012ff2:	push   0x64012d53
64012ff7:	push   DWORD PTR ds:0x6402a52c
64012ffd:	call   0x64012b1f
64013002:	pop    ecx
64013003:	call   eax
64013005:	cmp    eax,0xffffffff
64013008:	mov    ds:0x640291c0,eax
6401300d:	je     0x64013057
6401300f:	push   0x214
64013014:	push   0x1
64013016:	call   0x64013f40
6401301b:	mov    esi,eax
6401301d:	test   esi,esi
6401301f:	pop    ecx
64013020:	pop    ecx
64013021:	je     0x64013057
64013023:	push   esi
64013024:	push   DWORD PTR ds:0x640291c0
6401302a:	push   DWORD PTR ds:0x6402a534
64013030:	call   0x64012b1f
64013035:	pop    ecx
64013036:	call   eax
64013038:	test   eax,eax
6401303a:	je     0x64013057
6401303c:	push   0x0
6401303e:	push   esi
6401303f:	call   0x64012c05
64013044:	pop    ecx
64013045:	pop    ecx
64013046:	call   DWORD PTR ds:0x64022128
6401304c:	or     DWORD PTR [esi+0x4],0xffffffff
64013050:	mov    DWORD PTR [esi],eax
64013052:	xor    eax,eax
64013054:	inc    eax
64013055:	jmp    0x6401305e
64013057:	call   0x64012bc8
6401305c:	xor    eax,eax
6401305e:	pop    esi
6401305f:	pop    edi
64013060:	ret    
64013061:	mov    eax,DWORD PTR [esp+0x4]
64013065:	mov    ds:0x6402a53c,eax
6401306a:	ret    
6401306b:	push   DWORD PTR ds:0x6402a53c
64013071:	call   0x64012b1f
64013076:	test   eax,eax
64013078:	pop    ecx
64013079:	je     0x6401308a
6401307b:	push   DWORD PTR [esp+0x4]
6401307f:	call   eax
64013081:	test   eax,eax
64013083:	pop    ecx
64013084:	je     0x6401308a
64013086:	xor    eax,eax
64013088:	inc    eax
64013089:	ret    
6401308a:	xor    eax,eax
6401308c:	ret    
6401308d:	mov    DWORD PTR [ecx],0x64022c00
64013093:	jmp    0x6401053b
64013098:	push   esi
64013099:	mov    esi,ecx
6401309b:	mov    DWORD PTR [esi],0x64022c00
640130a1:	call   0x6401053b
640130a6:	test   BYTE PTR [esp+0x8],0x1
640130ab:	je     0x640130b4
640130ad:	push   esi
640130ae:	call   0x64010422
640130b3:	pop    ecx
640130b4:	mov    eax,esi
640130b6:	pop    esi
640130b7:	ret    0x4
640130ba:	push   esi
640130bb:	push   edi
640130bc:	mov    edi,DWORD PTR [esp+0xc]
640130c0:	mov    eax,DWORD PTR [edi+0x4]
640130c3:	test   eax,eax
640130c5:	je     0x64013110
640130c7:	lea    edx,[eax+0x8]
640130ca:	cmp    BYTE PTR [edx],0x0
640130cd:	je     0x64013110
640130cf:	mov    esi,DWORD PTR [esp+0x10]
640130d3:	mov    ecx,DWORD PTR [esi+0x4]
640130d6:	cmp    eax,ecx
640130d8:	je     0x640130ee
640130da:	add    ecx,0x8
640130dd:	push   ecx
640130de:	push   edx
640130df:	call   0x64012560
640130e4:	test   eax,eax
640130e6:	pop    ecx
640130e7:	pop    ecx
640130e8:	je     0x640130ee
640130ea:	xor    eax,eax
640130ec:	jmp    0x64013113
640130ee:	test   BYTE PTR [esi],0x2
640130f1:	je     0x640130f8
640130f3:	test   BYTE PTR [edi],0x8
640130f6:	je     0x640130ea
640130f8:	mov    eax,DWORD PTR [esp+0x14]
640130fc:	mov    eax,DWORD PTR [eax]
640130fe:	test   al,0x1
64013100:	je     0x64013107
64013102:	test   BYTE PTR [edi],0x1
64013105:	je     0x640130ea
64013107:	test   al,0x2
64013109:	je     0x64013110
6401310b:	test   BYTE PTR [edi],0x2
6401310e:	je     0x640130ea
64013110:	xor    eax,eax
64013112:	inc    eax
64013113:	pop    edi
64013114:	pop    esi
64013115:	ret    
64013116:	mov    eax,DWORD PTR [esp+0x4]
6401311a:	mov    eax,DWORD PTR [eax]
6401311c:	mov    eax,DWORD PTR [eax]
6401311e:	cmp    eax,0xe0434f4d
64013123:	je     0x6401313d
64013125:	cmp    eax,0xe06d7363
6401312a:	jne    0x64013157
6401312c:	call   0x64012d3b
64013131:	and    DWORD PTR [eax+0x90],0x0
64013138:	jmp    0x64013d17
6401313d:	call   0x64012d3b
64013142:	cmp    DWORD PTR [eax+0x90],0x0
64013149:	jle    0x64013157
6401314b:	call   0x64012d3b
64013150:	add    eax,0x90
64013155:	dec    DWORD PTR [eax]
64013157:	xor    eax,eax
64013159:	ret    
6401315a:	push   0x10
6401315c:	push   0x640269a0
64013161:	call   0x64011fc8
64013166:	mov    edi,DWORD PTR [ebp+0x10]
64013169:	mov    ebx,DWORD PTR [ebp+0x8]
6401316c:	cmp    DWORD PTR [edi+0x4],0x80
64013173:	jg     0x6401317b
64013175:	movsx  esi,BYTE PTR [ebx+0x8]
64013179:	jmp    0x6401317e
6401317b:	mov    esi,DWORD PTR [ebx+0x8]
6401317e:	mov    DWORD PTR [ebp-0x1c],esi
64013181:	call   0x64012d3b
64013186:	add    eax,0x90
6401318b:	inc    DWORD PTR [eax]
6401318d:	and    DWORD PTR [ebp-0x4],0x0
64013191:	cmp    esi,DWORD PTR [ebp+0x14]
64013194:	je     0x640131fb
64013196:	cmp    esi,0xffffffff
64013199:	jle    0x640131a0
6401319b:	cmp    esi,DWORD PTR [edi+0x4]
6401319e:	jl     0x640131a5
640131a0:	call   0x64013d63
640131a5:	mov    eax,esi
640131a7:	shl    eax,0x3
640131aa:	mov    ecx,DWORD PTR [edi+0x8]
640131ad:	add    ecx,eax
640131af:	mov    esi,DWORD PTR [ecx]
640131b1:	mov    DWORD PTR [ebp-0x20],esi
640131b4:	mov    DWORD PTR [ebp-0x4],0x1
640131bb:	cmp    DWORD PTR [ecx+0x4],0x0
640131bf:	je     0x640131d6
640131c1:	mov    DWORD PTR [ebx+0x8],esi
640131c4:	push   0x103
640131c9:	push   ebx
640131ca:	mov    ecx,DWORD PTR [edi+0x8]
640131cd:	push   DWORD PTR [ecx+eax*1+0x4]
640131d1:	call   0x64013db0
640131d6:	and    DWORD PTR [ebp-0x4],0x0
640131da:	jmp    0x640131f6
640131dc:	push   DWORD PTR [ebp-0x14]
640131df:	call   0x64013116
640131e4:	pop    ecx
640131e5:	ret    
640131e6:	mov    esp,DWORD PTR [ebp-0x18]
640131e9:	and    DWORD PTR [ebp-0x4],0x0
640131ed:	mov    edi,DWORD PTR [ebp+0x10]
640131f0:	mov    ebx,DWORD PTR [ebp+0x8]
640131f3:	mov    esi,DWORD PTR [ebp-0x20]
640131f6:	mov    DWORD PTR [ebp-0x1c],esi
640131f9:	jmp    0x64013191
640131fb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013202:	call   0x64013220
64013207:	cmp    esi,DWORD PTR [ebp+0x14]
6401320a:	je     0x64013211
6401320c:	call   0x64013d63
64013211:	mov    DWORD PTR [ebx+0x8],esi
64013214:	call   0x6401200d
64013219:	ret    
6401321a:	mov    ebx,DWORD PTR [ebp+0x8]
6401321d:	mov    esi,DWORD PTR [ebp-0x1c]
64013220:	call   0x64012d3b
64013225:	cmp    DWORD PTR [eax+0x90],0x0
6401322c:	jle    0x6401323a
6401322e:	call   0x64012d3b
64013233:	add    eax,0x90
64013238:	dec    DWORD PTR [eax]
6401323a:	ret    
6401323b:	mov    eax,DWORD PTR [eax]
6401323d:	cmp    DWORD PTR [eax],0xe06d7363
64013243:	jne    0x6401327d
64013245:	cmp    DWORD PTR [eax+0x10],0x3
64013249:	jne    0x6401327d
6401324b:	mov    ecx,DWORD PTR [eax+0x14]
6401324e:	cmp    ecx,0x19930520
64013254:	je     0x64013266
64013256:	cmp    ecx,0x19930521
6401325c:	je     0x64013266
6401325e:	cmp    ecx,0x19930522
64013264:	jne    0x6401327d
64013266:	cmp    DWORD PTR [eax+0x1c],0x0
6401326a:	jne    0x6401327d
6401326c:	call   0x64012d3b
64013271:	xor    ecx,ecx
64013273:	inc    ecx
64013274:	mov    DWORD PTR [eax+0x20c],ecx
6401327a:	mov    eax,ecx
6401327c:	ret    
6401327d:	xor    eax,eax
6401327f:	ret    
64013280:	push   0x8
64013282:	push   0x640269c8
64013287:	call   0x64011fc8
6401328c:	mov    ecx,DWORD PTR [ebp+0x8]
6401328f:	test   ecx,ecx
64013291:	je     0x640132bd
64013293:	cmp    DWORD PTR [ecx],0xe06d7363
64013299:	jne    0x640132bd
6401329b:	mov    eax,DWORD PTR [ecx+0x1c]
6401329e:	test   eax,eax
640132a0:	je     0x640132bd
640132a2:	mov    eax,DWORD PTR [eax+0x4]
640132a5:	test   eax,eax
640132a7:	je     0x640132bd
640132a9:	and    DWORD PTR [ebp-0x4],0x0
640132ad:	push   eax
640132ae:	push   DWORD PTR [ecx+0x18]
640132b1:	call   0x64010887
640132b6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640132bd:	call   0x6401200d
640132c2:	ret    
640132c3:	xor    eax,eax
640132c5:	cmp    BYTE PTR [ebp+0xc],al
640132c8:	setne  al
640132cb:	ret    
640132cc:	mov    esp,DWORD PTR [ebp-0x18]
640132cf:	jmp    0x64013d17
640132d4:	mov    ecx,DWORD PTR [esp+0x8]
640132d8:	mov    eax,DWORD PTR [ecx]
640132da:	push   esi
640132db:	mov    esi,DWORD PTR [esp+0x8]
640132df:	add    eax,esi
640132e1:	cmp    DWORD PTR [ecx+0x4],0x0
640132e5:	jl     0x640132f7
640132e7:	mov    edx,DWORD PTR [ecx+0x4]
640132ea:	mov    ecx,DWORD PTR [ecx+0x8]
640132ed:	mov    esi,DWORD PTR [edx+esi*1]
640132f0:	mov    ecx,DWORD PTR [esi+ecx*1]
640132f3:	add    ecx,edx
640132f5:	add    eax,ecx
640132f7:	pop    esi
640132f8:	ret    
640132f9:	push   ebp
640132fa:	mov    ebp,esp
640132fc:	sub    esp,0xc
640132ff:	test   edi,edi
64013301:	jne    0x6401330d
64013303:	call   0x64013d63
64013308:	jmp    0x64013d17
6401330d:	and    DWORD PTR [ebp-0x8],0x0
64013311:	cmp    DWORD PTR [edi],0x0
64013314:	mov    BYTE PTR [ebp-0x1],0x0
64013318:	jle    0x6401336d
6401331a:	push   ebx
6401331b:	push   esi
6401331c:	mov    eax,DWORD PTR [ebp+0x8]
6401331f:	mov    eax,DWORD PTR [eax+0x1c]
64013322:	mov    eax,DWORD PTR [eax+0xc]
64013325:	mov    ebx,DWORD PTR [eax]
64013327:	test   ebx,ebx
64013329:	lea    esi,[eax+0x4]
6401332c:	jle    0x64013361
6401332e:	mov    eax,DWORD PTR [ebp-0x8]
64013331:	shl    eax,0x4
64013334:	mov    DWORD PTR [ebp-0xc],eax
64013337:	mov    ecx,DWORD PTR [ebp+0x8]
6401333a:	push   DWORD PTR [ecx+0x1c]
6401333d:	mov    eax,DWORD PTR [esi]
6401333f:	push   eax
64013340:	mov    eax,DWORD PTR [edi+0x4]
64013343:	add    eax,DWORD PTR [ebp-0xc]
64013346:	push   eax
64013347:	call   0x640130ba
6401334c:	add    esp,0xc
6401334f:	test   eax,eax
64013351:	jne    0x6401335d
64013353:	dec    ebx
64013354:	add    esi,0x4
64013357:	test   ebx,ebx
64013359:	jg     0x64013337
6401335b:	jmp    0x64013361
6401335d:	mov    BYTE PTR [ebp-0x1],0x1
64013361:	inc    DWORD PTR [ebp-0x8]
64013364:	mov    eax,DWORD PTR [ebp-0x8]
64013367:	cmp    eax,DWORD PTR [edi]
64013369:	jl     0x6401331c
6401336b:	pop    esi
6401336c:	pop    ebx
6401336d:	mov    al,BYTE PTR [ebp-0x1]
64013370:	leave  
64013371:	ret    
64013372:	push   0x4
64013374:	mov    eax,0x64020563
64013379:	call   0x640124ae
6401337e:	call   0x64012d3b
64013383:	cmp    DWORD PTR [eax+0x94],0x0
6401338a:	je     0x64013391
6401338c:	call   0x64013d63
64013391:	and    DWORD PTR [ebp-0x4],0x0
64013395:	call   0x64013d50
6401339a:	or     DWORD PTR [ebp-0x4],0xffffffff
6401339e:	jmp    0x64013d17
640133a3:	call   0x64012d3b
640133a8:	mov    ecx,DWORD PTR [ebp+0x8]
640133ab:	push   0x0
640133ad:	push   0x0
640133af:	mov    DWORD PTR [eax+0x94],ecx
640133b5:	call   0x6401080d
640133ba:	int3   
640133bb:	push   0x2c
640133bd:	push   0x64026a40
640133c2:	call   0x64011fc8
640133c7:	mov    ebx,ecx
640133c9:	mov    edi,DWORD PTR [ebp+0xc]
640133cc:	mov    esi,DWORD PTR [ebp+0x8]
640133cf:	mov    DWORD PTR [ebp-0x1c],ebx
640133d2:	and    DWORD PTR [ebp-0x34],0x0
640133d6:	mov    eax,DWORD PTR [edi-0x4]
640133d9:	mov    DWORD PTR [ebp-0x24],eax
640133dc:	push   DWORD PTR [esi+0x18]
640133df:	lea    eax,[ebp-0x3c]
640133e2:	push   eax
640133e3:	call   0x64010b2b
640133e8:	pop    ecx
640133e9:	pop    ecx
640133ea:	mov    DWORD PTR [ebp-0x28],eax
640133ed:	call   0x64012d3b
640133f2:	mov    eax,DWORD PTR [eax+0x88]
640133f8:	mov    DWORD PTR [ebp-0x2c],eax
640133fb:	call   0x64012d3b
64013400:	mov    eax,DWORD PTR [eax+0x8c]
64013406:	mov    DWORD PTR [ebp-0x30],eax
64013409:	call   0x64012d3b
6401340e:	mov    DWORD PTR [eax+0x88],esi
64013414:	call   0x64012d3b
64013419:	mov    ecx,DWORD PTR [ebp+0x10]
6401341c:	mov    DWORD PTR [eax+0x8c],ecx
64013422:	and    DWORD PTR [ebp-0x4],0x0
64013426:	xor    eax,eax
64013428:	inc    eax
64013429:	mov    DWORD PTR [ebp+0x10],eax
6401342c:	mov    DWORD PTR [ebp-0x4],eax
6401342f:	push   DWORD PTR [ebp+0x1c]
64013432:	push   DWORD PTR [ebp+0x18]
64013435:	push   ebx
64013436:	push   DWORD PTR [ebp+0x14]
64013439:	push   edi
6401343a:	call   0x64010bc0
6401343f:	add    esp,0x14
64013442:	mov    DWORD PTR [ebp-0x1c],eax
64013445:	and    DWORD PTR [ebp-0x4],0x0
64013449:	jmp    0x640134ba
6401344b:	mov    eax,DWORD PTR [ebp-0x14]
6401344e:	call   0x6401323b
64013453:	ret    
64013454:	mov    esp,DWORD PTR [ebp-0x18]
64013457:	call   0x64012d3b
6401345c:	and    DWORD PTR [eax+0x20c],0x0
64013463:	mov    esi,DWORD PTR [ebp+0x14]
64013466:	mov    edi,DWORD PTR [ebp+0xc]
64013469:	cmp    DWORD PTR [esi+0x4],0x80
64013470:	jg     0x64013478
64013472:	movsx  ecx,BYTE PTR [edi+0x8]
64013476:	jmp    0x6401347b
64013478:	mov    ecx,DWORD PTR [edi+0x8]
6401347b:	mov    ebx,DWORD PTR [esi+0x10]
6401347e:	and    DWORD PTR [ebp-0x20],0x0
64013482:	mov    eax,DWORD PTR [ebp-0x20]
64013485:	cmp    eax,DWORD PTR [esi+0xc]
64013488:	jae    0x640134a2
6401348a:	imul   eax,eax,0x14
6401348d:	add    eax,ebx
6401348f:	mov    edx,DWORD PTR [eax+0x4]
64013492:	cmp    ecx,edx
64013494:	jle    0x640134d6
64013496:	cmp    ecx,DWORD PTR [eax+0x8]
64013499:	jg     0x640134d6
6401349b:	mov    eax,DWORD PTR [esi+0x8]
6401349e:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
640134a2:	push   ecx
640134a3:	push   esi
640134a4:	push   0x0
640134a6:	push   edi
640134a7:	call   0x6401315a
640134ac:	add    esp,0x10
640134af:	and    DWORD PTR [ebp-0x1c],0x0
640134b3:	and    DWORD PTR [ebp-0x4],0x0
640134b7:	mov    esi,DWORD PTR [ebp+0x8]
640134ba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640134c1:	mov    DWORD PTR [ebp+0x10],0x0
640134c8:	call   0x640134e1
640134cd:	mov    eax,DWORD PTR [ebp-0x1c]
640134d0:	call   0x6401200d
640134d5:	ret    
640134d6:	inc    DWORD PTR [ebp-0x20]
640134d9:	jmp    0x64013482
640134db:	mov    edi,DWORD PTR [ebp+0xc]
640134de:	mov    esi,DWORD PTR [ebp+0x8]
640134e1:	mov    eax,DWORD PTR [ebp-0x24]
640134e4:	mov    DWORD PTR [edi-0x4],eax
640134e7:	push   DWORD PTR [ebp-0x28]
640134ea:	call   0x64010b74
640134ef:	pop    ecx
640134f0:	call   0x64012d3b
640134f5:	mov    ecx,DWORD PTR [ebp-0x2c]
640134f8:	mov    DWORD PTR [eax+0x88],ecx
640134fe:	call   0x64012d3b
64013503:	mov    ecx,DWORD PTR [ebp-0x30]
64013506:	mov    DWORD PTR [eax+0x8c],ecx
6401350c:	cmp    DWORD PTR [esi],0xe06d7363
64013512:	jne    0x64013556
64013514:	cmp    DWORD PTR [esi+0x10],0x3
64013518:	jne    0x64013556
6401351a:	mov    eax,DWORD PTR [esi+0x14]
6401351d:	cmp    eax,0x19930520
64013522:	je     0x64013532
64013524:	cmp    eax,0x19930521
64013529:	je     0x64013532
6401352b:	cmp    eax,0x19930522
64013530:	jne    0x64013556
64013532:	cmp    DWORD PTR [ebp-0x34],0x0
64013536:	jne    0x64013556
64013538:	cmp    DWORD PTR [ebp-0x1c],0x0
6401353c:	je     0x64013556
6401353e:	push   DWORD PTR [esi+0x18]
64013541:	call   0x64010b53
64013546:	pop    ecx
64013547:	test   eax,eax
64013549:	je     0x64013556
6401354b:	push   DWORD PTR [ebp+0x10]
6401354e:	push   esi
6401354f:	call   0x64013280
64013554:	pop    ecx
64013555:	pop    ecx
64013556:	ret    
64013557:	push   0xc
64013559:	push   0x64026a68
6401355e:	call   0x64011fc8
64013563:	xor    edx,edx
64013565:	mov    DWORD PTR [ebp-0x1c],edx
64013568:	mov    eax,DWORD PTR [ebp+0x10]
6401356b:	mov    ecx,DWORD PTR [eax+0x4]
6401356e:	cmp    ecx,edx
64013570:	je     0x640136ce
64013576:	cmp    BYTE PTR [ecx+0x8],dl
64013579:	je     0x640136ce
6401357f:	mov    ecx,DWORD PTR [eax+0x8]
64013582:	cmp    ecx,edx
64013584:	jne    0x64013592
64013586:	test   DWORD PTR [eax],0x80000000
6401358c:	je     0x640136ce
64013592:	mov    eax,DWORD PTR [eax]
64013594:	mov    esi,DWORD PTR [ebp+0xc]
64013597:	test   eax,eax
64013599:	js     0x6401359f
6401359b:	lea    esi,[ecx+esi*1+0xc]
6401359f:	mov    DWORD PTR [ebp-0x4],edx
640135a2:	xor    ebx,ebx
640135a4:	inc    ebx
640135a5:	push   ebx
640135a6:	test   al,0x8
640135a8:	je     0x640135eb
640135aa:	mov    edi,DWORD PTR [ebp+0x8]
640135ad:	push   DWORD PTR [edi+0x18]
640135b0:	call   0x6401934b
640135b5:	pop    ecx
640135b6:	pop    ecx
640135b7:	test   eax,eax
640135b9:	je     0x640136b1
640135bf:	push   ebx
640135c0:	push   esi
640135c1:	call   0x6401934b
640135c6:	pop    ecx
640135c7:	pop    ecx
640135c8:	test   eax,eax
640135ca:	je     0x640136b1
640135d0:	mov    eax,DWORD PTR [edi+0x18]
640135d3:	mov    DWORD PTR [esi],eax
640135d5:	mov    ecx,DWORD PTR [ebp+0x14]
640135d8:	add    ecx,0x8
640135db:	push   ecx
640135dc:	push   eax
640135dd:	call   0x640132d4
640135e2:	pop    ecx
640135e3:	pop    ecx
640135e4:	mov    DWORD PTR [esi],eax
640135e6:	jmp    0x640136b6
640135eb:	mov    edi,DWORD PTR [ebp+0x14]
640135ee:	mov    eax,DWORD PTR [ebp+0x8]
640135f1:	push   DWORD PTR [eax+0x18]
640135f4:	test   BYTE PTR [edi],bl
640135f6:	je     0x64013640
640135f8:	call   0x6401934b
640135fd:	pop    ecx
640135fe:	pop    ecx
640135ff:	test   eax,eax
64013601:	je     0x640136b1
64013607:	push   ebx
64013608:	push   esi
64013609:	call   0x6401934b
6401360e:	pop    ecx
6401360f:	pop    ecx
64013610:	test   eax,eax
64013612:	je     0x640136b1
64013618:	push   DWORD PTR [edi+0x14]
6401361b:	mov    eax,DWORD PTR [ebp+0x8]
6401361e:	push   DWORD PTR [eax+0x18]
64013621:	push   esi
64013622:	call   0x64011c60
64013627:	add    esp,0xc
6401362a:	cmp    DWORD PTR [edi+0x14],0x4
6401362e:	jne    0x640136b6
64013634:	mov    eax,DWORD PTR [esi]
64013636:	test   eax,eax
64013638:	je     0x640136b6
6401363a:	add    edi,0x8
6401363d:	push   edi
6401363e:	jmp    0x640135dc
64013640:	cmp    DWORD PTR [edi+0x18],edx
64013643:	jne    0x6401367d
64013645:	call   0x6401934b
6401364a:	pop    ecx
6401364b:	pop    ecx
6401364c:	test   eax,eax
6401364e:	je     0x640136b1
64013650:	push   ebx
64013651:	push   esi
64013652:	call   0x6401934b
64013657:	pop    ecx
64013658:	pop    ecx
64013659:	test   eax,eax
6401365b:	je     0x640136b1
6401365d:	push   DWORD PTR [edi+0x14]
64013660:	add    edi,0x8
64013663:	push   edi
64013664:	mov    eax,DWORD PTR [ebp+0x8]
64013667:	push   DWORD PTR [eax+0x18]
6401366a:	call   0x640132d4
6401366f:	pop    ecx
64013670:	pop    ecx
64013671:	push   eax
64013672:	push   esi
64013673:	call   0x64011c60
64013678:	add    esp,0xc
6401367b:	jmp    0x640136b6
6401367d:	call   0x6401934b
64013682:	pop    ecx
64013683:	pop    ecx
64013684:	test   eax,eax
64013686:	je     0x640136b1
64013688:	push   ebx
64013689:	push   esi
6401368a:	call   0x6401934b
6401368f:	pop    ecx
64013690:	pop    ecx
64013691:	test   eax,eax
64013693:	je     0x640136b1
64013695:	push   DWORD PTR [edi+0x18]
64013698:	call   0x6401934b
6401369d:	pop    ecx
6401369e:	test   eax,eax
640136a0:	je     0x640136b1
640136a2:	test   BYTE PTR [edi],0x4
640136a5:	push   0x0
640136a7:	pop    eax
640136a8:	setne  al
640136ab:	inc    eax
640136ac:	mov    DWORD PTR [ebp-0x1c],eax
640136af:	jmp    0x640136b6
640136b1:	call   0x64013d63
640136b6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640136bd:	mov    eax,DWORD PTR [ebp-0x1c]
640136c0:	jmp    0x640136d0
640136c2:	xor    eax,eax
640136c4:	inc    eax
640136c5:	ret    
640136c6:	mov    esp,DWORD PTR [ebp-0x18]
640136c9:	jmp    0x64013d17
640136ce:	xor    eax,eax
640136d0:	call   0x6401200d
640136d5:	ret    
640136d6:	push   0x8
640136d8:	push   0x64026a88
640136dd:	call   0x64011fc8
640136e2:	mov    eax,DWORD PTR [ebp+0x10]
640136e5:	test   DWORD PTR [eax],0x80000000
640136eb:	je     0x640136f2
640136ed:	mov    ebx,DWORD PTR [ebp+0xc]
640136f0:	jmp    0x640136fc
640136f2:	mov    ecx,DWORD PTR [eax+0x8]
640136f5:	mov    edx,DWORD PTR [ebp+0xc]
640136f8:	lea    ebx,[ecx+edx*1+0xc]
640136fc:	and    DWORD PTR [ebp-0x4],0x0
64013700:	mov    esi,DWORD PTR [ebp+0x14]
64013703:	push   esi
64013704:	push   eax
64013705:	push   DWORD PTR [ebp+0xc]
64013708:	mov    edi,DWORD PTR [ebp+0x8]
6401370b:	push   edi
6401370c:	call   0x64013557
64013711:	add    esp,0x10
64013714:	dec    eax
64013715:	je     0x64013736
64013717:	dec    eax
64013718:	jne    0x6401374e
6401371a:	push   0x1
6401371c:	lea    eax,[esi+0x8]
6401371f:	push   eax
64013720:	push   DWORD PTR [edi+0x18]
64013723:	call   0x640132d4
64013728:	pop    ecx
64013729:	pop    ecx
6401372a:	push   eax
6401372b:	push   DWORD PTR [esi+0x18]
6401372e:	push   ebx
6401372f:	call   0x64010887
64013734:	jmp    0x6401374e
64013736:	lea    eax,[esi+0x8]
64013739:	push   eax
6401373a:	push   DWORD PTR [edi+0x18]
6401373d:	call   0x640132d4
64013742:	pop    ecx
64013743:	pop    ecx
64013744:	push   eax
64013745:	push   DWORD PTR [esi+0x18]
64013748:	push   ebx
64013749:	call   0x64010887
6401374e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013755:	call   0x6401200d
6401375a:	ret    
6401375b:	xor    eax,eax
6401375d:	inc    eax
6401375e:	ret    
6401375f:	mov    esp,DWORD PTR [ebp-0x18]
64013762:	jmp    0x64013d17
64013767:	push   ebp
64013768:	mov    ebp,esp
6401376a:	cmp    DWORD PTR [ebp+0x18],0x0
6401376e:	je     0x64013780
64013770:	push   DWORD PTR [ebp+0x18]
64013773:	push   ebx
64013774:	push   esi
64013775:	push   DWORD PTR [ebp+0x8]
64013778:	call   0x640136d6
6401377d:	add    esp,0x10
64013780:	cmp    DWORD PTR [ebp+0x20],0x0
64013784:	push   DWORD PTR [ebp+0x8]
64013787:	jne    0x6401378c
64013789:	push   esi
6401378a:	jmp    0x6401378f
6401378c:	push   DWORD PTR [ebp+0x20]
6401378f:	call   0x6401088e
64013794:	push   DWORD PTR [edi]
64013796:	push   DWORD PTR [ebp+0x14]
64013799:	push   DWORD PTR [ebp+0x10]
6401379c:	push   esi
6401379d:	call   0x6401315a
640137a2:	mov    eax,DWORD PTR [edi+0x4]
640137a5:	push   0x100
640137aa:	push   DWORD PTR [ebp+0x1c]
640137ad:	inc    eax
640137ae:	push   DWORD PTR [ebp+0x14]
640137b1:	mov    DWORD PTR [esi+0x8],eax
640137b4:	push   DWORD PTR [ebp+0xc]
640137b7:	mov    ecx,DWORD PTR [ebx+0xc]
640137ba:	push   esi
640137bb:	push   DWORD PTR [ebp+0x8]
640137be:	call   0x640133bb
640137c3:	add    esp,0x28
640137c6:	test   eax,eax
640137c8:	je     0x640137d1
640137ca:	push   esi
640137cb:	push   eax
640137cc:	call   0x64010857
640137d1:	pop    ebp
640137d2:	ret    
640137d3:	push   ebp
640137d4:	mov    ebp,esp
640137d6:	push   ecx
640137d7:	push   ecx
640137d8:	push   esi
640137d9:	mov    esi,DWORD PTR [ebp+0x8]
640137dc:	cmp    DWORD PTR [esi],0x80000003
640137e2:	je     0x640138c2
640137e8:	push   edi
640137e9:	call   0x64012d3b
640137ee:	cmp    DWORD PTR [eax+0x80],0x0
640137f5:	je     0x64013836
640137f7:	call   0x64012d3b
640137fc:	lea    edi,[eax+0x80]
64013802:	call   0x64012b16
64013807:	cmp    DWORD PTR [edi],eax
64013809:	je     0x64013836
6401380b:	cmp    DWORD PTR [esi],0xe0434f4d
64013811:	je     0x64013836
64013813:	push   DWORD PTR [ebp+0x24]
64013816:	push   DWORD PTR [ebp+0x20]
64013819:	push   DWORD PTR [ebp+0x18]
6401381c:	push   DWORD PTR [ebp+0x14]
6401381f:	push   DWORD PTR [ebp+0x10]
64013822:	push   DWORD PTR [ebp+0xc]
64013825:	push   esi
64013826:	call   0x64010946
6401382b:	add    esp,0x1c
6401382e:	test   eax,eax
64013830:	jne    0x640138c1
64013836:	mov    edi,DWORD PTR [ebp+0x18]
64013839:	cmp    DWORD PTR [edi+0xc],0x0
6401383d:	jne    0x64013844
6401383f:	call   0x64013d63
64013844:	mov    esi,DWORD PTR [ebp+0x1c]
64013847:	lea    eax,[ebp-0x8]
6401384a:	push   eax
6401384b:	lea    eax,[ebp-0x4]
6401384e:	push   eax
6401384f:	push   esi
64013850:	push   DWORD PTR [ebp+0x20]
64013853:	push   edi
64013854:	call   0x64010ab8
64013859:	mov    edi,eax
6401385b:	mov    eax,DWORD PTR [ebp-0x4]
6401385e:	add    esp,0x14
64013861:	cmp    eax,DWORD PTR [ebp-0x8]
64013864:	jae    0x640138c1
64013866:	push   ebx
64013867:	cmp    esi,DWORD PTR [edi]
64013869:	jl     0x640138b2
6401386b:	cmp    esi,DWORD PTR [edi+0x4]
6401386e:	jg     0x640138b2
64013870:	mov    eax,DWORD PTR [edi+0xc]
64013873:	mov    ecx,DWORD PTR [edi+0x10]
64013876:	shl    eax,0x4
64013879:	add    eax,ecx
6401387b:	mov    ecx,DWORD PTR [eax-0xc]
6401387e:	test   ecx,ecx
64013880:	je     0x64013888
64013882:	cmp    BYTE PTR [ecx+0x8],0x0
64013886:	jne    0x640138b2
64013888:	lea    ebx,[eax-0x10]
6401388b:	test   BYTE PTR [ebx],0x40
6401388e:	jne    0x640138b2
64013890:	push   DWORD PTR [ebp+0x24]
64013893:	mov    esi,DWORD PTR [ebp+0xc]
64013896:	push   DWORD PTR [ebp+0x20]
64013899:	push   0x0
6401389b:	push   DWORD PTR [ebp+0x18]
6401389e:	push   DWORD PTR [ebp+0x14]
640138a1:	push   DWORD PTR [ebp+0x10]
640138a4:	push   DWORD PTR [ebp+0x8]
640138a7:	call   0x64013767
640138ac:	mov    esi,DWORD PTR [ebp+0x1c]
640138af:	add    esp,0x1c
640138b2:	inc    DWORD PTR [ebp-0x4]
640138b5:	mov    eax,DWORD PTR [ebp-0x4]
640138b8:	add    edi,0x14
640138bb:	cmp    eax,DWORD PTR [ebp-0x8]
640138be:	jb     0x64013867
640138c0:	pop    ebx
640138c1:	pop    edi
640138c2:	pop    esi
640138c3:	leave  
640138c4:	ret    
640138c5:	push   ebp
640138c6:	mov    ebp,esp
640138c8:	sub    esp,0x2c
640138cb:	mov    ecx,DWORD PTR [ebp+0xc]
640138ce:	push   ebx
640138cf:	mov    ebx,DWORD PTR [ebp+0x18]
640138d2:	mov    eax,DWORD PTR [ebx+0x4]
640138d5:	cmp    eax,0x80
640138da:	push   esi
640138db:	push   edi
640138dc:	mov    BYTE PTR [ebp-0x1],0x0
640138e0:	jg     0x640138e8
640138e2:	movsx  ecx,BYTE PTR [ecx+0x8]
640138e6:	jmp    0x640138eb
640138e8:	mov    ecx,DWORD PTR [ecx+0x8]
640138eb:	cmp    ecx,0xffffffff
640138ee:	mov    DWORD PTR [ebp-0x8],ecx
640138f1:	jl     0x640138f7
640138f3:	cmp    ecx,eax
640138f5:	jl     0x640138fc
640138f7:	call   0x64013d63
640138fc:	mov    esi,DWORD PTR [ebp+0x8]
640138ff:	mov    edi,0xe06d7363
64013904:	cmp    DWORD PTR [esi],edi
64013906:	jne    0x64013bd7
6401390c:	cmp    DWORD PTR [esi+0x10],0x3
64013910:	mov    ebx,0x19930520
64013915:	jne    0x64013a44
6401391b:	mov    eax,DWORD PTR [esi+0x14]
6401391e:	cmp    eax,ebx
64013920:	je     0x64013934
64013922:	cmp    eax,0x19930521
64013927:	je     0x64013934
64013929:	cmp    eax,0x19930522
6401392e:	jne    0x64013a44
64013934:	cmp    DWORD PTR [esi+0x1c],0x0
64013938:	jne    0x64013a44
6401393e:	call   0x64012d3b
64013943:	cmp    DWORD PTR [eax+0x88],0x0
6401394a:	je     0x64013c16
64013950:	call   0x64012d3b
64013955:	mov    esi,DWORD PTR [eax+0x88]
6401395b:	mov    DWORD PTR [ebp+0x8],esi
6401395e:	call   0x64012d3b
64013963:	mov    eax,DWORD PTR [eax+0x8c]
64013969:	push   0x1
6401396b:	push   esi
6401396c:	mov    DWORD PTR [ebp+0x10],eax
6401396f:	call   0x6401934b
64013974:	test   eax,eax
64013976:	pop    ecx
64013977:	pop    ecx
64013978:	jne    0x6401397f
6401397a:	call   0x64013d63
6401397f:	cmp    DWORD PTR [esi],edi
64013981:	jne    0x640139a9
64013983:	cmp    DWORD PTR [esi+0x10],0x3
64013987:	jne    0x640139a9
64013989:	mov    eax,DWORD PTR [esi+0x14]
6401398c:	cmp    eax,ebx
6401398e:	je     0x6401399e
64013990:	cmp    eax,0x19930521
64013995:	je     0x6401399e
64013997:	cmp    eax,0x19930522
6401399c:	jne    0x640139a9
6401399e:	cmp    DWORD PTR [esi+0x1c],0x0
640139a2:	jne    0x640139a9
640139a4:	call   0x64013d63
640139a9:	call   0x64012d3b
640139ae:	cmp    DWORD PTR [eax+0x94],0x0
640139b5:	je     0x64013a44
640139bb:	call   0x64012d3b
640139c0:	mov    edi,DWORD PTR [eax+0x94]
640139c6:	call   0x64012d3b
640139cb:	push   DWORD PTR [ebp+0x8]
640139ce:	xor    esi,esi
640139d0:	mov    DWORD PTR [eax+0x94],esi
640139d6:	call   0x640132f9
640139db:	test   al,al
640139dd:	pop    ecx
640139de:	jne    0x64013a3c
640139e0:	xor    ebx,ebx
640139e2:	cmp    DWORD PTR [edi],ebx
640139e4:	jle    0x64013a03
640139e6:	mov    eax,DWORD PTR [edi+0x4]
640139e9:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
640139ed:	push   0x640291cc
640139f2:	call   0x64010451
640139f7:	test   al,al
640139f9:	jne    0x64013a08
640139fb:	inc    esi
640139fc:	add    ebx,0x10
640139ff:	cmp    esi,DWORD PTR [edi]
64013a01:	jl     0x640139e6
64013a03:	jmp    0x64013d17
64013a08:	push   0x1
64013a0a:	push   DWORD PTR [ebp+0x8]
64013a0d:	call   0x64013280
64013a12:	pop    ecx
64013a13:	pop    ecx
64013a14:	lea    eax,[ebp+0x8]
64013a17:	push   eax
64013a18:	lea    ecx,[ebp-0x2c]
64013a1b:	mov    DWORD PTR [ebp+0x8],0x64022c08
64013a22:	call   0x6401047d
64013a27:	push   0x64026aa4
64013a2c:	lea    eax,[ebp-0x2c]
64013a2f:	push   eax
64013a30:	mov    DWORD PTR [ebp-0x2c],0x64022c00
64013a37:	call   0x6401080d
64013a3c:	mov    esi,DWORD PTR [ebp+0x8]
64013a3f:	mov    edi,0xe06d7363
64013a44:	cmp    DWORD PTR [esi],edi
64013a46:	jne    0x64013bd4
64013a4c:	cmp    DWORD PTR [esi+0x10],0x3
64013a50:	jne    0x64013bd4
64013a56:	mov    eax,DWORD PTR [esi+0x14]
64013a59:	cmp    eax,ebx
64013a5b:	je     0x64013a6f
64013a5d:	cmp    eax,0x19930521
64013a62:	je     0x64013a6f
64013a64:	cmp    eax,0x19930522
64013a69:	jne    0x64013bd4
64013a6f:	mov    edi,DWORD PTR [ebp+0x18]
64013a72:	cmp    DWORD PTR [edi+0xc],0x0
64013a76:	jbe    0x64013b3b
64013a7c:	lea    eax,[ebp-0x1c]
64013a7f:	push   eax
64013a80:	lea    eax,[ebp-0x10]
64013a83:	push   eax
64013a84:	push   DWORD PTR [ebp-0x8]
64013a87:	push   DWORD PTR [ebp+0x20]
64013a8a:	push   edi
64013a8b:	call   0x64010ab8
64013a90:	add    esp,0x14
64013a93:	mov    edi,eax
64013a95:	mov    eax,DWORD PTR [ebp-0x10]
64013a98:	cmp    eax,DWORD PTR [ebp-0x1c]
64013a9b:	jae    0x64013b38
64013aa1:	mov    eax,DWORD PTR [ebp-0x8]
64013aa4:	cmp    DWORD PTR [edi],eax
64013aa6:	jg     0x64013b2d
64013aac:	cmp    eax,DWORD PTR [edi+0x4]
64013aaf:	jg     0x64013b2d
64013ab1:	mov    eax,DWORD PTR [edi+0x10]
64013ab4:	mov    DWORD PTR [ebp-0xc],eax
64013ab7:	mov    eax,DWORD PTR [edi+0xc]
64013aba:	test   eax,eax
64013abc:	mov    DWORD PTR [ebp-0x18],eax
64013abf:	jle    0x64013b2d
64013ac1:	mov    eax,DWORD PTR [esi+0x1c]
64013ac4:	mov    eax,DWORD PTR [eax+0xc]
64013ac7:	lea    ebx,[eax+0x4]
64013aca:	mov    eax,DWORD PTR [eax]
64013acc:	test   eax,eax
64013ace:	mov    DWORD PTR [ebp-0x14],eax
64013ad1:	jle    0x64013af6
64013ad3:	push   DWORD PTR [esi+0x1c]
64013ad6:	mov    eax,DWORD PTR [ebx]
64013ad8:	push   eax
64013ad9:	push   DWORD PTR [ebp-0xc]
64013adc:	mov    DWORD PTR [ebp-0x20],eax
64013adf:	call   0x640130ba
64013ae4:	add    esp,0xc
64013ae7:	test   eax,eax
64013ae9:	jne    0x64013b05
64013aeb:	dec    DWORD PTR [ebp-0x14]
64013aee:	add    ebx,0x4
64013af1:	cmp    DWORD PTR [ebp-0x14],eax
64013af4:	jg     0x64013ad3
64013af6:	dec    DWORD PTR [ebp-0x18]
64013af9:	add    DWORD PTR [ebp-0xc],0x10
64013afd:	cmp    DWORD PTR [ebp-0x18],0x0
64013b01:	jg     0x64013ac1
64013b03:	jmp    0x64013b2d
64013b05:	push   DWORD PTR [ebp+0x24]
64013b08:	mov    ebx,DWORD PTR [ebp-0xc]
64013b0b:	push   DWORD PTR [ebp+0x20]
64013b0e:	mov    BYTE PTR [ebp-0x1],0x1
64013b12:	push   DWORD PTR [ebp-0x20]
64013b15:	push   DWORD PTR [ebp+0x18]
64013b18:	push   DWORD PTR [ebp+0x14]
64013b1b:	push   DWORD PTR [ebp+0x10]
64013b1e:	push   esi
64013b1f:	mov    esi,DWORD PTR [ebp+0xc]
64013b22:	call   0x64013767
64013b27:	mov    esi,DWORD PTR [ebp+0x8]
64013b2a:	add    esp,0x1c
64013b2d:	inc    DWORD PTR [ebp-0x10]
64013b30:	add    edi,0x14
64013b33:	jmp    0x64013a95
64013b38:	mov    edi,DWORD PTR [ebp+0x18]
64013b3b:	cmp    BYTE PTR [ebp+0x1c],0x0
64013b3f:	je     0x64013b4b
64013b41:	push   0x1
64013b43:	push   esi
64013b44:	call   0x64013280
64013b49:	pop    ecx
64013b4a:	pop    ecx
64013b4b:	cmp    BYTE PTR [ebp-0x1],0x0
64013b4f:	jne    0x64013c03
64013b55:	mov    eax,DWORD PTR [edi]
64013b57:	and    eax,0x1fffffff
64013b5c:	cmp    eax,0x19930521
64013b61:	jb     0x64013c03
64013b67:	mov    edi,DWORD PTR [edi+0x1c]
64013b6a:	test   edi,edi
64013b6c:	je     0x64013c03
64013b72:	push   esi
64013b73:	call   0x640132f9
64013b78:	test   al,al
64013b7a:	pop    ecx
64013b7b:	jne    0x64013c03
64013b81:	call   0x64012d3b
64013b86:	call   0x64012d3b
64013b8b:	call   0x64012d3b
64013b90:	mov    DWORD PTR [eax+0x88],esi
64013b96:	call   0x64012d3b
64013b9b:	cmp    DWORD PTR [ebp+0x24],0x0
64013b9f:	mov    ecx,DWORD PTR [ebp+0x10]
64013ba2:	mov    DWORD PTR [eax+0x8c],ecx
64013ba8:	push   esi
64013ba9:	jne    0x64013bb0
64013bab:	push   DWORD PTR [ebp+0xc]
64013bae:	jmp    0x64013bb3
64013bb0:	push   DWORD PTR [ebp+0x24]
64013bb3:	call   0x6401088e
64013bb8:	mov    esi,DWORD PTR [ebp+0x18]
64013bbb:	push   0xffffffff
64013bbd:	push   esi
64013bbe:	push   DWORD PTR [ebp+0x14]
64013bc1:	push   DWORD PTR [ebp+0xc]
64013bc4:	call   0x6401315a
64013bc9:	add    esp,0x10
64013bcc:	push   DWORD PTR [esi+0x1c]
64013bcf:	call   0x64013372
64013bd4:	mov    ebx,DWORD PTR [ebp+0x18]
64013bd7:	cmp    DWORD PTR [ebx+0xc],0x0
64013bdb:	jbe    0x64013c03
64013bdd:	cmp    BYTE PTR [ebp+0x1c],0x0
64013be1:	jne    0x64013a03
64013be7:	push   DWORD PTR [ebp+0x24]
64013bea:	push   DWORD PTR [ebp+0x20]
64013bed:	push   DWORD PTR [ebp-0x8]
64013bf0:	push   ebx
64013bf1:	push   DWORD PTR [ebp+0x14]
64013bf4:	push   DWORD PTR [ebp+0x10]
64013bf7:	push   DWORD PTR [ebp+0xc]
64013bfa:	push   esi
64013bfb:	call   0x640137d3
64013c00:	add    esp,0x20
64013c03:	call   0x64012d3b
64013c08:	cmp    DWORD PTR [eax+0x94],0x0
64013c0f:	je     0x64013c16
64013c11:	call   0x64013d63
64013c16:	pop    edi
64013c17:	pop    esi
64013c18:	pop    ebx
64013c19:	leave  
64013c1a:	ret    
64013c1b:	push   esi
64013c1c:	push   DWORD PTR [esp+0x8]
64013c20:	mov    esi,ecx
64013c22:	call   0x640104e3
64013c27:	mov    DWORD PTR [esi],0x64022c00
64013c2d:	mov    eax,esi
64013c2f:	pop    esi
64013c30:	ret    0x4
64013c33:	push   ebp
64013c34:	mov    ebp,esp
64013c36:	push   ebx
64013c37:	push   esi
64013c38:	push   edi
64013c39:	call   0x64012d3b
64013c3e:	cmp    DWORD PTR [eax+0x20c],0x0
64013c45:	mov    eax,DWORD PTR [ebp+0x18]
64013c48:	mov    ecx,DWORD PTR [ebp+0x8]
64013c4b:	mov    edi,0xe06d7363
64013c50:	mov    esi,0x1fffffff
64013c55:	mov    ebx,0x19930522
64013c5a:	jne    0x64013c7c
64013c5c:	mov    edx,DWORD PTR [ecx]
64013c5e:	cmp    edx,edi
64013c60:	je     0x64013c7c
64013c62:	cmp    edx,0x80000026
64013c68:	je     0x64013c7c
64013c6a:	mov    edx,DWORD PTR [eax]
64013c6c:	and    edx,esi
64013c6e:	cmp    edx,ebx
64013c70:	jb     0x64013c7c
64013c72:	test   BYTE PTR [eax+0x20],0x1
64013c76:	jne    0x64013d0f
64013c7c:	test   BYTE PTR [ecx+0x4],0x66
64013c80:	je     0x64013ca5
64013c82:	cmp    DWORD PTR [eax+0x4],0x0
64013c86:	je     0x64013d0f
64013c8c:	cmp    DWORD PTR [ebp+0x1c],0x0
64013c90:	jne    0x64013d0f
64013c92:	push   0xffffffff
64013c94:	push   eax
64013c95:	push   DWORD PTR [ebp+0x14]
64013c98:	push   DWORD PTR [ebp+0xc]
64013c9b:	call   0x6401315a
64013ca0:	add    esp,0x10
64013ca3:	jmp    0x64013d0f
64013ca5:	cmp    DWORD PTR [eax+0xc],0x0
64013ca9:	jne    0x64013cbd
64013cab:	mov    edx,DWORD PTR [eax]
64013cad:	and    edx,esi
64013caf:	cmp    edx,0x19930521
64013cb5:	jb     0x64013d0f
64013cb7:	cmp    DWORD PTR [eax+0x1c],0x0
64013cbb:	je     0x64013d0f
64013cbd:	cmp    DWORD PTR [ecx],edi
64013cbf:	jne    0x64013cf3
64013cc1:	cmp    DWORD PTR [ecx+0x10],0x3
64013cc5:	jb     0x64013cf3
64013cc7:	cmp    DWORD PTR [ecx+0x14],ebx
64013cca:	jbe    0x64013cf3
64013ccc:	mov    edx,DWORD PTR [ecx+0x1c]
64013ccf:	mov    edx,DWORD PTR [edx+0x8]
64013cd2:	test   edx,edx
64013cd4:	je     0x64013cf3
64013cd6:	movzx  esi,BYTE PTR [ebp+0x24]
64013cda:	push   esi
64013cdb:	push   DWORD PTR [ebp+0x20]
64013cde:	push   DWORD PTR [ebp+0x1c]
64013ce1:	push   eax
64013ce2:	push   DWORD PTR [ebp+0x14]
64013ce5:	push   DWORD PTR [ebp+0x10]
64013ce8:	push   DWORD PTR [ebp+0xc]
64013ceb:	push   ecx
64013cec:	call   edx
64013cee:	add    esp,0x20
64013cf1:	jmp    0x64013d12
64013cf3:	push   DWORD PTR [ebp+0x20]
64013cf6:	push   DWORD PTR [ebp+0x1c]
64013cf9:	push   DWORD PTR [ebp+0x24]
64013cfc:	push   eax
64013cfd:	push   DWORD PTR [ebp+0x14]
64013d00:	push   DWORD PTR [ebp+0x10]
64013d03:	push   DWORD PTR [ebp+0xc]
64013d06:	push   ecx
64013d07:	call   0x640138c5
64013d0c:	add    esp,0x20
64013d0f:	xor    eax,eax
64013d11:	inc    eax
64013d12:	pop    edi
64013d13:	pop    esi
64013d14:	pop    ebx
64013d15:	pop    ebp
64013d16:	ret    
64013d17:	push   0x8
64013d19:	push   0x64026ae0
64013d1e:	call   0x64011fc8
64013d23:	call   0x64012d3b
64013d28:	mov    eax,DWORD PTR [eax+0x78]
64013d2b:	test   eax,eax
64013d2d:	je     0x64013d45
64013d2f:	and    DWORD PTR [ebp-0x4],0x0
64013d33:	call   eax
64013d35:	jmp    0x64013d3e
64013d37:	xor    eax,eax
64013d39:	inc    eax
64013d3a:	ret    
64013d3b:	mov    esp,DWORD PTR [ebp-0x18]
64013d3e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013d45:	call   0x64019358
64013d4a:	call   0x6401200d
64013d4f:	ret    
64013d50:	call   0x64012d3b
64013d55:	mov    eax,DWORD PTR [eax+0x7c]
64013d58:	test   eax,eax
64013d5a:	je     0x64013d5e
64013d5c:	call   eax
64013d5e:	jmp    0x64013d17
64013d63:	push   0x8
64013d65:	push   0x64026b00
64013d6a:	call   0x64011fc8
64013d6f:	push   DWORD PTR ds:0x6402a540
64013d75:	call   0x64012b1f
64013d7a:	pop    ecx
64013d7b:	test   eax,eax
64013d7d:	je     0x64013d95
64013d7f:	and    DWORD PTR [ebp-0x4],0x0
64013d83:	call   eax
64013d85:	jmp    0x64013d8e
64013d87:	xor    eax,eax
64013d89:	inc    eax
64013d8a:	ret    
64013d8b:	mov    esp,DWORD PTR [ebp-0x18]
64013d8e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013d95:	jmp    0x64013d17
64013d9a:	push   0x64013d17
64013d9f:	call   0x64012aa8
64013da4:	pop    ecx
64013da5:	mov    ds:0x6402a540,eax
64013daa:	ret    
64013dab:	int3   
64013dac:	int3   
64013dad:	int3   
64013dae:	int3   
64013daf:	int3   
64013db0:	push   ebp
64013db1:	mov    ebp,esp
64013db3:	sub    esp,0x4
64013db6:	push   ebx
64013db7:	push   ecx
64013db8:	mov    eax,DWORD PTR [ebp+0xc]
64013dbb:	add    eax,0xc
64013dbe:	mov    DWORD PTR [ebp-0x4],eax
64013dc1:	mov    eax,DWORD PTR [ebp+0x8]
64013dc4:	push   ebp
64013dc5:	push   DWORD PTR [ebp+0x10]
64013dc8:	mov    ecx,DWORD PTR [ebp+0x10]
64013dcb:	mov    ebp,DWORD PTR [ebp-0x4]
64013dce:	call   0x64019558
64013dd3:	push   esi
64013dd4:	push   edi
64013dd5:	call   eax
64013dd7:	pop    edi
64013dd8:	pop    esi
64013dd9:	mov    ebx,ebp
64013ddb:	pop    ebp
64013ddc:	mov    ecx,DWORD PTR [ebp+0x10]
64013ddf:	push   ebp
64013de0:	mov    ebp,ebx
64013de2:	cmp    ecx,0x100
64013de8:	jne    0x64013def
64013dea:	mov    ecx,0x2
64013def:	push   ecx
64013df0:	call   0x64019558
64013df5:	pop    ebp
64013df6:	pop    ecx
64013df7:	pop    ebx
64013df8:	leave  
64013df9:	ret    0xc
64013dfc:	push   ebp
64013dfd:	mov    ebp,esp
64013dff:	sub    esp,0x328
64013e05:	mov    ds:0x6402a650,eax
64013e0a:	mov    DWORD PTR ds:0x6402a64c,ecx
64013e10:	mov    DWORD PTR ds:0x6402a648,edx
64013e16:	mov    DWORD PTR ds:0x6402a644,ebx
64013e1c:	mov    DWORD PTR ds:0x6402a640,esi
64013e22:	mov    DWORD PTR ds:0x6402a63c,edi
64013e28:	data16 mov WORD PTR ds:0x6402a668,ss
64013e2f:	data16 mov WORD PTR ds:0x6402a65c,cs
64013e36:	data16 mov WORD PTR ds:0x6402a638,ds
64013e3d:	data16 mov WORD PTR ds:0x6402a634,es
64013e44:	data16 mov WORD PTR ds:0x6402a630,fs
64013e4b:	data16 mov WORD PTR ds:0x6402a62c,gs
64013e52:	pushf  
64013e53:	pop    DWORD PTR ds:0x6402a660
64013e59:	mov    eax,DWORD PTR [ebp+0x0]
64013e5c:	mov    ds:0x6402a654,eax
64013e61:	mov    eax,DWORD PTR [ebp+0x4]
64013e64:	mov    ds:0x6402a658,eax
64013e69:	lea    eax,[ebp+0x8]
64013e6c:	mov    ds:0x6402a664,eax
64013e71:	mov    eax,DWORD PTR [ebp-0x320]
64013e77:	mov    DWORD PTR ds:0x6402a5a0,0x10001
64013e81:	mov    eax,ds:0x6402a658
64013e86:	mov    ds:0x6402a554,eax
64013e8b:	mov    DWORD PTR ds:0x6402a548,0xc0000409
64013e95:	mov    DWORD PTR ds:0x6402a54c,0x1
64013e9f:	mov    eax,ds:0x64029038
64013ea4:	mov    DWORD PTR [ebp-0x328],eax
64013eaa:	mov    eax,ds:0x6402903c
64013eaf:	mov    DWORD PTR [ebp-0x324],eax
64013eb5:	call   DWORD PTR ds:0x64022120
64013ebb:	mov    ds:0x6402a598,eax
64013ec0:	push   0x1
64013ec2:	call   0x64012a34
64013ec7:	pop    ecx
64013ec8:	push   0x0
64013eca:	call   DWORD PTR ds:0x6402211c
64013ed0:	push   0x64022c18
64013ed5:	call   DWORD PTR ds:0x64022118
64013edb:	cmp    DWORD PTR ds:0x6402a598,0x0
64013ee2:	jne    0x64013eec
64013ee4:	push   0x1
64013ee6:	call   0x64012a34
64013eeb:	pop    ecx
64013eec:	push   0xc0000409
64013ef1:	call   DWORD PTR ds:0x64022048
64013ef7:	push   eax
64013ef8:	call   DWORD PTR ds:0x64022114
64013efe:	leave  
64013eff:	ret    
64013f00:	push   esi
64013f01:	push   edi
64013f02:	xor    esi,esi
64013f04:	push   DWORD PTR [esp+0xc]
64013f08:	call   0x64011b93
64013f0d:	mov    edi,eax
64013f0f:	test   edi,edi
64013f11:	pop    ecx
64013f12:	jne    0x64013f3b
64013f14:	cmp    DWORD PTR ds:0x6402a86c,eax
64013f1a:	jbe    0x64013f3b
64013f1c:	push   esi
64013f1d:	call   DWORD PTR ds:0x64022050
64013f23:	lea    eax,[esi+0x3e8]
64013f29:	cmp    eax,DWORD PTR ds:0x6402a86c
64013f2f:	jbe    0x64013f34
64013f31:	or     eax,0xffffffff
64013f34:	cmp    eax,0xffffffff
64013f37:	mov    esi,eax
64013f39:	jne    0x64013f04
64013f3b:	mov    eax,edi
64013f3d:	pop    edi
64013f3e:	pop    esi
64013f3f:	ret    
64013f40:	push   esi
64013f41:	push   edi
64013f42:	xor    esi,esi
64013f44:	push   0x0
64013f46:	push   DWORD PTR [esp+0x14]
64013f4a:	push   DWORD PTR [esp+0x14]
64013f4e:	call   0x64019583
64013f53:	mov    edi,eax
64013f55:	add    esp,0xc
64013f58:	test   edi,edi
64013f5a:	jne    0x64013f83
64013f5c:	cmp    DWORD PTR ds:0x6402a86c,eax
64013f62:	jbe    0x64013f83
64013f64:	push   esi
64013f65:	call   DWORD PTR ds:0x64022050
64013f6b:	lea    eax,[esi+0x3e8]
64013f71:	cmp    eax,DWORD PTR ds:0x6402a86c
64013f77:	jbe    0x64013f7c
64013f79:	or     eax,0xffffffff
64013f7c:	cmp    eax,0xffffffff
64013f7f:	mov    esi,eax
64013f81:	jne    0x64013f44
64013f83:	mov    eax,edi
64013f85:	pop    edi
64013f86:	pop    esi
64013f87:	ret    
64013f88:	push   esi
64013f89:	push   edi
64013f8a:	xor    esi,esi
64013f8c:	push   DWORD PTR [esp+0x10]
64013f90:	push   DWORD PTR [esp+0x10]
64013f94:	call   0x640121c6
64013f99:	mov    edi,eax
64013f9b:	test   edi,edi
64013f9d:	pop    ecx
64013f9e:	pop    ecx
64013f9f:	jne    0x64013fce
64013fa1:	cmp    DWORD PTR [esp+0x10],eax
64013fa5:	je     0x64013fce
64013fa7:	cmp    DWORD PTR ds:0x6402a86c,eax
64013fad:	jbe    0x64013fce
64013faf:	push   esi
64013fb0:	call   DWORD PTR ds:0x64022050
64013fb6:	lea    eax,[esi+0x3e8]
64013fbc:	cmp    eax,DWORD PTR ds:0x6402a86c
64013fc2:	jbe    0x64013fc7
64013fc4:	or     eax,0xffffffff
64013fc7:	cmp    eax,0xffffffff
64013fca:	mov    esi,eax
64013fcc:	jne    0x64013f8c
64013fce:	mov    eax,edi
64013fd0:	pop    edi
64013fd1:	pop    esi
64013fd2:	ret    
64013fd3:	push   0x10
64013fd5:	push   0x64026b20
64013fda:	call   0x64011fc8
64013fdf:	xor    eax,eax
64013fe1:	mov    ebx,DWORD PTR [ebp+0x8]
64013fe4:	xor    edi,edi
64013fe6:	cmp    ebx,edi
64013fe8:	setne  al
64013feb:	cmp    eax,edi
64013fed:	jne    0x6401400c
64013fef:	call   0x640129f0
64013ff4:	mov    DWORD PTR [eax],0x16
64013ffa:	push   edi
64013ffb:	push   edi
64013ffc:	push   edi
64013ffd:	push   edi
64013ffe:	push   edi
64013fff:	call   0x64010756
64014004:	add    esp,0x14
64014007:	or     eax,0xffffffff
6401400a:	jmp    0x6401405f
6401400c:	cmp    DWORD PTR ds:0x6402e47c,0x3
64014013:	jne    0x6401404d
64014015:	push   0x4
64014017:	call   0x6401823f
6401401c:	pop    ecx
6401401d:	mov    DWORD PTR [ebp-0x4],edi
64014020:	push   ebx
64014021:	call   0x640182b8
64014026:	pop    ecx
64014027:	mov    DWORD PTR [ebp-0x20],eax
6401402a:	cmp    eax,edi
6401402c:	je     0x64014039
6401402e:	mov    esi,DWORD PTR [ebx-0x4]
64014031:	sub    esi,0x9
64014034:	mov    DWORD PTR [ebp-0x1c],esi
64014037:	jmp    0x6401403c
64014039:	mov    esi,DWORD PTR [ebp-0x1c]
6401403c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014043:	call   0x6401406d
64014048:	cmp    DWORD PTR [ebp-0x20],edi
6401404b:	jne    0x6401405d
6401404d:	push   ebx
6401404e:	push   edi
6401404f:	push   DWORD PTR ds:0x6402aa0c
64014055:	call   DWORD PTR ds:0x6402210c
6401405b:	mov    esi,eax
6401405d:	mov    eax,esi
6401405f:	call   0x6401200d
64014064:	ret    
64014065:	xor    edi,edi
64014067:	mov    ebx,DWORD PTR [ebp+0x8]
6401406a:	mov    esi,DWORD PTR [ebp-0x1c]
6401406d:	push   0x4
6401406f:	call   0x64018167
64014074:	pop    ecx
64014075:	ret    
64014076:	call   0x64018f0f
6401407b:	push   DWORD PTR [esp+0x4]
6401407f:	call   0x64018d6f
64014084:	push   DWORD PTR ds:0x640291f0
6401408a:	call   0x64012b1f
6401408f:	push   0xff
64014094:	call   eax
64014096:	add    esp,0xc
64014099:	ret    
6401409a:	push   0x64022c30
6401409f:	call   DWORD PTR ds:0x64022130
640140a5:	test   eax,eax
640140a7:	je     0x640140bf
640140a9:	push   0x64022c20
640140ae:	push   eax
640140af:	call   DWORD PTR ds:0x64022014
640140b5:	test   eax,eax
640140b7:	je     0x640140bf
640140b9:	push   DWORD PTR [esp+0x4]
640140bd:	call   eax
640140bf:	ret    
640140c0:	push   DWORD PTR [esp+0x4]
640140c4:	call   0x6401409a
640140c9:	pop    ecx
640140ca:	push   DWORD PTR [esp+0x4]
640140ce:	call   DWORD PTR ds:0x64022144
640140d4:	int3   
640140d5:	push   0x8
640140d7:	call   0x6401823f
640140dc:	pop    ecx
640140dd:	ret    
640140de:	push   0x8
640140e0:	call   0x64018167
640140e5:	pop    ecx
640140e6:	ret    
640140e7:	push   esi
640140e8:	mov    esi,eax
640140ea:	jmp    0x640140f7
640140ec:	mov    eax,DWORD PTR [esi]
640140ee:	test   eax,eax
640140f0:	je     0x640140f4
640140f2:	call   eax
640140f4:	add    esi,0x4
640140f7:	cmp    esi,DWORD PTR [esp+0x8]
640140fb:	jb     0x640140ec
640140fd:	pop    esi
640140fe:	ret    
640140ff:	push   esi
64014100:	mov    esi,DWORD PTR [esp+0x8]
64014104:	xor    eax,eax
64014106:	jmp    0x64014117
64014108:	test   eax,eax
6401410a:	jne    0x6401411d
6401410c:	mov    ecx,DWORD PTR [esi]
6401410e:	test   ecx,ecx
64014110:	je     0x64014114
64014112:	call   ecx
64014114:	add    esi,0x4
64014117:	cmp    esi,DWORD PTR [esp+0xc]
6401411b:	jb     0x64014108
6401411d:	pop    esi
6401411e:	ret    
6401411f:	mov    ecx,DWORD PTR [esp+0x4]
64014123:	push   esi
64014124:	xor    esi,esi
64014126:	cmp    ecx,esi
64014128:	jne    0x64014147
6401412a:	call   0x640129f0
6401412f:	push   esi
64014130:	push   esi
64014131:	push   esi
64014132:	push   esi
64014133:	push   esi
64014134:	mov    DWORD PTR [eax],0x16
6401413a:	call   0x64010756
6401413f:	add    esp,0x14
64014142:	push   0x16
64014144:	pop    eax
64014145:	pop    esi
64014146:	ret    
64014147:	mov    eax,ds:0x6402a874
6401414c:	cmp    eax,esi
6401414e:	je     0x6401412a
64014150:	mov    DWORD PTR [ecx],eax
64014152:	xor    eax,eax
64014154:	pop    esi
64014155:	ret    
64014156:	mov    eax,DWORD PTR [esp+0x4]
6401415a:	push   esi
6401415b:	xor    esi,esi
6401415d:	cmp    eax,esi
6401415f:	jne    0x6401417e
64014161:	call   0x640129f0
64014166:	push   esi
64014167:	push   esi
64014168:	push   esi
64014169:	push   esi
6401416a:	push   esi
6401416b:	mov    DWORD PTR [eax],0x16
64014171:	call   0x64010756
64014176:	add    esp,0x14
64014179:	push   0x16
6401417b:	pop    eax
6401417c:	pop    esi
6401417d:	ret    
6401417e:	cmp    DWORD PTR ds:0x6402a874,esi
64014184:	je     0x64014161
64014186:	mov    ecx,DWORD PTR ds:0x6402a880
6401418c:	mov    DWORD PTR [eax],ecx
6401418e:	xor    eax,eax
64014190:	pop    esi
64014191:	ret    
64014192:	cmp    DWORD PTR ds:0x640244a4,0x0
64014199:	je     0x640141b5
6401419b:	push   0x640244a4
640141a0:	call   0x64019290
640141a5:	test   eax,eax
640141a7:	pop    ecx
640141a8:	je     0x640141b5
640141aa:	push   DWORD PTR [esp+0x4]
640141ae:	call   DWORD PTR ds:0x640244a4
640141b4:	pop    ecx
640141b5:	call   0x640196a1
640141ba:	push   0x640222c4
640141bf:	push   0x640222ac
640141c4:	call   0x640140ff
640141c9:	test   eax,eax
640141cb:	pop    ecx
640141cc:	pop    ecx
640141cd:	jne    0x64014223
640141cf:	push   esi
640141d0:	push   edi
640141d1:	push   0x64016c70
640141d6:	call   0x64010d51
640141db:	mov    esi,0x640221ec
640141e0:	mov    eax,esi
640141e2:	mov    edi,0x640222a8
640141e7:	cmp    eax,edi
640141e9:	pop    ecx
640141ea:	jae    0x640141fb
640141ec:	mov    eax,DWORD PTR [esi]
640141ee:	test   eax,eax
640141f0:	je     0x640141f4
640141f2:	call   eax
640141f4:	add    esi,0x4
640141f7:	cmp    esi,edi
640141f9:	jb     0x640141ec
640141fb:	cmp    DWORD PTR ds:0x6402e5b8,0x0
64014202:	pop    edi
64014203:	pop    esi
64014204:	je     0x64014221
64014206:	push   0x6402e5b8
6401420b:	call   0x64019290
64014210:	test   eax,eax
64014212:	pop    ecx
64014213:	je     0x64014221
64014215:	push   0x0
64014217:	push   0x2
64014219:	push   0x0
6401421b:	call   DWORD PTR ds:0x6402e5b8
64014221:	xor    eax,eax
64014223:	ret    
64014224:	push   0x10
64014226:	push   0x64026b40
6401422b:	call   0x64011fc8
64014230:	push   0x8
64014232:	call   0x6401823f
64014237:	pop    ecx
64014238:	xor    edi,edi
6401423a:	mov    DWORD PTR [ebp-0x4],edi
6401423d:	xor    ebx,ebx
6401423f:	inc    ebx
64014240:	cmp    DWORD PTR ds:0x6402a8b4,ebx
64014246:	je     0x640142c6
64014248:	mov    DWORD PTR ds:0x6402a8b0,ebx
6401424e:	mov    al,BYTE PTR [ebp+0x10]
64014251:	mov    ds:0x6402a8ac,al
64014256:	cmp    DWORD PTR [ebp+0xc],edi
64014259:	jne    0x640142b6
6401425b:	push   DWORD PTR ds:0x6402e5b0
64014261:	call   0x64012b1f
64014266:	mov    DWORD PTR [ebp-0x1c],eax
64014269:	push   DWORD PTR ds:0x6402e5ac
6401426f:	call   0x64012b1f
64014274:	pop    ecx
64014275:	pop    ecx
64014276:	mov    esi,eax
64014278:	mov    DWORD PTR [ebp-0x20],esi
6401427b:	cmp    DWORD PTR [ebp-0x1c],edi
6401427e:	je     0x640142a6
64014280:	sub    esi,0x4
64014283:	mov    DWORD PTR [ebp-0x20],esi
64014286:	cmp    esi,DWORD PTR [ebp-0x1c]
64014289:	jb     0x640142a6
6401428b:	cmp    DWORD PTR [esi],0x0
6401428e:	je     0x64014280
64014290:	mov    edi,DWORD PTR [esi]
64014292:	call   0x64012b16
64014297:	cmp    edi,eax
64014299:	je     0x64014280
6401429b:	push   edi
6401429c:	call   0x64012b1f
640142a1:	pop    ecx
640142a2:	call   eax
640142a4:	jmp    0x64014280
640142a6:	push   0x640222d4
640142ab:	mov    eax,0x640222c8
640142b0:	call   0x640140e7
640142b5:	pop    ecx
640142b6:	push   0x640222dc
640142bb:	mov    eax,0x640222d8
640142c0:	call   0x640140e7
640142c5:	pop    ecx
640142c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640142cd:	call   0x640142f1
640142d2:	cmp    DWORD PTR [ebp+0x10],0x0
640142d6:	jne    0x64014300
640142d8:	mov    DWORD PTR ds:0x6402a8b4,ebx
640142de:	push   0x8
640142e0:	call   0x64018167
640142e5:	pop    ecx
640142e6:	push   DWORD PTR [ebp+0x8]
640142e9:	call   0x640140c0
640142ee:	xor    ebx,ebx
640142f0:	inc    ebx
640142f1:	cmp    DWORD PTR [ebp+0x10],0x0
640142f5:	je     0x640142ff
640142f7:	push   0x8
640142f9:	call   0x64018167
640142fe:	pop    ecx
640142ff:	ret    
64014300:	call   0x6401200d
64014305:	ret    
64014306:	push   0x0
64014308:	push   0x1
6401430a:	push   DWORD PTR [esp+0xc]
6401430e:	call   0x64014224
64014313:	add    esp,0xc
64014316:	ret    
64014317:	push   0x1
64014319:	push   0x0
6401431b:	push   0x0
6401431d:	call   0x64014224
64014322:	add    esp,0xc
64014325:	ret    
64014326:	push   esi
64014327:	call   0x64012b16
6401432c:	mov    esi,eax
6401432e:	push   esi
6401432f:	call   0x64013061
64014334:	push   esi
64014335:	call   0x640198de
6401433a:	push   esi
6401433b:	call   0x64010650
64014340:	push   esi
64014341:	call   0x640198d4
64014346:	push   esi
64014347:	call   0x640198ca
6401434c:	push   esi
6401434d:	call   0x640196c0
64014352:	push   esi
64014353:	call   0x64016dbd
64014358:	push   esi
64014359:	call   0x64013d9a
6401435e:	push   0x64014306
64014363:	call   0x64012aa8
64014368:	add    esp,0x24
6401436b:	mov    ds:0x640291f0,eax
64014370:	pop    esi
64014371:	ret    
64014372:	sub    eax,0x3a4
64014377:	je     0x6401439b
64014379:	sub    eax,0x4
6401437c:	je     0x64014395
6401437e:	sub    eax,0xd
64014381:	je     0x6401438f
64014383:	dec    eax
64014384:	je     0x64014389
64014386:	xor    eax,eax
64014388:	ret    
64014389:	mov    eax,0x404
6401438e:	ret    
6401438f:	mov    eax,0x412
64014394:	ret    
64014395:	mov    eax,0x804
6401439a:	ret    
6401439b:	mov    eax,0x411
640143a0:	ret    
640143a1:	push   ebx
640143a2:	push   ebp
640143a3:	push   esi
640143a4:	push   edi
640143a5:	mov    ebp,0x101
640143aa:	mov    esi,eax
640143ac:	push   ebp
640143ad:	xor    edi,edi
640143af:	lea    ebx,[esi+0x1c]
640143b2:	push   edi
640143b3:	push   ebx
640143b4:	call   0x64011320
640143b9:	mov    DWORD PTR [esi+0x4],edi
640143bc:	mov    DWORD PTR [esi+0x8],edi
640143bf:	mov    DWORD PTR [esi+0xc],edi
640143c2:	xor    eax,eax
640143c4:	lea    edi,[esi+0x10]
640143c7:	stos   DWORD PTR es:[edi],eax
640143c8:	stos   DWORD PTR es:[edi],eax
640143c9:	stos   DWORD PTR es:[edi],eax
640143ca:	mov    eax,0x640291f8
640143cf:	add    esp,0xc
640143d2:	sub    eax,esi
640143d4:	mov    cl,BYTE PTR [eax+ebx*1]
640143d7:	mov    BYTE PTR [ebx],cl
640143d9:	inc    ebx
640143da:	dec    ebp
640143db:	jne    0x640143d4
640143dd:	lea    ecx,[esi+0x11d]
640143e3:	mov    esi,0x100
640143e8:	mov    dl,BYTE PTR [ecx+eax*1]
640143eb:	mov    BYTE PTR [ecx],dl
640143ed:	inc    ecx
640143ee:	dec    esi
640143ef:	jne    0x640143e8
640143f1:	pop    edi
640143f2:	pop    esi
640143f3:	pop    ebp
640143f4:	pop    ebx
640143f5:	ret    
640143f6:	push   ebp
640143f7:	lea    ebp,[esp-0x49c]
640143fe:	sub    esp,0x51c
64014404:	mov    eax,ds:0x64029038
64014409:	xor    eax,ebp
6401440b:	mov    DWORD PTR [ebp+0x498],eax
64014411:	push   ebx
64014412:	push   edi
64014413:	lea    eax,[ebp-0x7c]
64014416:	push   eax
64014417:	push   DWORD PTR [esi+0x4]
6401441a:	call   DWORD PTR ds:0x64022148
64014420:	test   eax,eax
64014422:	mov    edi,0x100
64014427:	je     0x6401451c
6401442d:	xor    eax,eax
6401442f:	mov    BYTE PTR [ebp+eax*1+0x398],al
64014436:	inc    eax
64014437:	cmp    eax,edi
64014439:	jb     0x6401442f
6401443b:	mov    al,BYTE PTR [ebp-0x76]
6401443e:	test   al,al
64014440:	mov    BYTE PTR [ebp+0x398],0x20
64014447:	je     0x64014474
64014449:	lea    ebx,[ebp-0x75]
6401444c:	movzx  ecx,al
6401444f:	movzx  eax,BYTE PTR [ebx]
64014452:	cmp    ecx,eax
64014454:	ja     0x6401446c
64014456:	sub    eax,ecx
64014458:	inc    eax
64014459:	push   eax
6401445a:	lea    edx,[ebp+ecx*1+0x398]
64014461:	push   0x20
64014463:	push   edx
64014464:	call   0x64011320
64014469:	add    esp,0xc
6401446c:	inc    ebx
6401446d:	mov    al,BYTE PTR [ebx]
6401446f:	inc    ebx
64014470:	test   al,al
64014472:	jne    0x6401444c
64014474:	push   0x0
64014476:	push   DWORD PTR [esi+0xc]
64014479:	lea    eax,[ebp-0x68]
6401447c:	push   DWORD PTR [esi+0x4]
6401447f:	push   eax
64014480:	push   edi
64014481:	lea    eax,[ebp+0x398]
64014487:	push   eax
64014488:	push   0x1
6401448a:	push   0x0
6401448c:	call   0x64019b75
64014491:	xor    ebx,ebx
64014493:	push   ebx
64014494:	push   DWORD PTR [esi+0x4]
64014497:	lea    eax,[ebp+0x298]
6401449d:	push   edi
6401449e:	push   eax
6401449f:	push   edi
640144a0:	lea    eax,[ebp+0x398]
640144a6:	push   eax
640144a7:	push   edi
640144a8:	push   DWORD PTR [esi+0xc]
640144ab:	push   ebx
640144ac:	call   0x64018042
640144b1:	add    esp,0x44
640144b4:	push   ebx
640144b5:	push   DWORD PTR [esi+0x4]
640144b8:	lea    eax,[ebp+0x198]
640144be:	push   edi
640144bf:	push   eax
640144c0:	push   edi
640144c1:	lea    eax,[ebp+0x398]
640144c7:	push   eax
640144c8:	push   0x200
640144cd:	push   DWORD PTR [esi+0xc]
640144d0:	push   ebx
640144d1:	call   0x64018042
640144d6:	add    esp,0x24
640144d9:	xor    eax,eax
640144db:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
640144e0:	test   cl,0x1
640144e3:	je     0x640144f3
640144e5:	or     BYTE PTR [esi+eax*1+0x1d],0x10
640144ea:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
640144f1:	jmp    0x64014504
640144f3:	test   cl,0x2
640144f6:	je     0x6401450d
640144f8:	or     BYTE PTR [esi+eax*1+0x1d],0x20
640144fd:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
64014504:	mov    BYTE PTR [esi+eax*1+0x11d],cl
6401450b:	jmp    0x64014515
6401450d:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
64014515:	inc    eax
64014516:	cmp    eax,edi
64014518:	jb     0x640144db
6401451a:	jmp    0x64014569
6401451c:	lea    eax,[esi+0x11d]
64014522:	mov    DWORD PTR [ebp-0x80],0xffffff9f
64014529:	xor    ecx,ecx
6401452b:	sub    DWORD PTR [ebp-0x80],eax
6401452e:	mov    edx,DWORD PTR [ebp-0x80]
64014531:	lea    eax,[esi+ecx*1+0x11d]
64014538:	add    edx,eax
6401453a:	lea    ebx,[edx+0x20]
6401453d:	cmp    ebx,0x19
64014540:	ja     0x6401454e
64014542:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
64014547:	mov    dl,cl
64014549:	add    dl,0x20
6401454c:	jmp    0x6401455d
6401454e:	cmp    edx,0x19
64014551:	ja     0x64014561
64014553:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
64014558:	mov    dl,cl
6401455a:	sub    dl,0x20
6401455d:	mov    BYTE PTR [eax],dl
6401455f:	jmp    0x64014564
64014561:	mov    BYTE PTR [eax],0x0
64014564:	inc    ecx
64014565:	cmp    ecx,edi
64014567:	jb     0x6401452e
64014569:	mov    ecx,DWORD PTR [ebp+0x498]
6401456f:	pop    edi
64014570:	xor    ecx,ebp
64014572:	pop    ebx
64014573:	call   0x64010c1e
64014578:	add    ebp,0x49c
6401457e:	leave  
6401457f:	ret    
64014580:	push   0xc
64014582:	push   0x64026b60
64014587:	call   0x64011fc8
6401458c:	call   0x64012d3b
64014591:	mov    edi,eax
64014593:	mov    eax,ds:0x6402971c
64014598:	test   DWORD PTR [edi+0x70],eax
6401459b:	je     0x640145ba
6401459d:	cmp    DWORD PTR [edi+0x6c],0x0
640145a1:	je     0x640145ba
640145a3:	mov    esi,DWORD PTR [edi+0x68]
640145a6:	test   esi,esi
640145a8:	jne    0x640145b2
640145aa:	push   0x20
640145ac:	call   0x64014076
640145b1:	pop    ecx
640145b2:	mov    eax,esi
640145b4:	call   0x6401200d
640145b9:	ret    
640145ba:	push   0xd
640145bc:	call   0x6401823f
640145c1:	pop    ecx
640145c2:	and    DWORD PTR [ebp-0x4],0x0
640145c6:	mov    esi,DWORD PTR [edi+0x68]
640145c9:	mov    DWORD PTR [ebp-0x1c],esi
640145cc:	cmp    esi,DWORD PTR ds:0x64029620
640145d2:	je     0x6401460a
640145d4:	test   esi,esi
640145d6:	je     0x640145f2
640145d8:	push   esi
640145d9:	call   DWORD PTR ds:0x64022094
640145df:	test   eax,eax
640145e1:	jne    0x640145f2
640145e3:	cmp    esi,0x640291f8
640145e9:	je     0x640145f2
640145eb:	push   esi
640145ec:	call   0x64011ab6
640145f1:	pop    ecx
640145f2:	mov    eax,ds:0x64029620
640145f7:	mov    DWORD PTR [edi+0x68],eax
640145fa:	mov    esi,DWORD PTR ds:0x64029620
64014600:	mov    DWORD PTR [ebp-0x1c],esi
64014603:	push   esi
64014604:	call   DWORD PTR ds:0x64022020
6401460a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014611:	call   0x6401461b
64014616:	jmp    0x640145a6
64014618:	mov    esi,DWORD PTR [ebp-0x1c]
6401461b:	push   0xd
6401461d:	call   0x64018167
64014622:	pop    ecx
64014623:	ret    
64014624:	push   ebp
64014625:	mov    ebp,esp
64014627:	sub    esp,0x10
6401462a:	push   ebx
6401462b:	xor    ebx,ebx
6401462d:	push   ebx
6401462e:	lea    ecx,[ebp-0x10]
64014631:	call   0x64010dc1
64014636:	cmp    esi,0xfffffffe
64014639:	mov    DWORD PTR ds:0x6402a8b8,ebx
6401463f:	jne    0x6401465f
64014641:	mov    DWORD PTR ds:0x6402a8b8,0x1
6401464b:	call   DWORD PTR ds:0x6402214c
64014651:	cmp    BYTE PTR [ebp-0x4],bl
64014654:	je     0x6401469b
64014656:	mov    ecx,DWORD PTR [ebp-0x8]
64014659:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401465d:	jmp    0x6401469b
6401465f:	cmp    esi,0xfffffffd
64014662:	jne    0x64014676
64014664:	mov    DWORD PTR ds:0x6402a8b8,0x1
6401466e:	call   DWORD PTR ds:0x640220e8
64014674:	jmp    0x64014651
64014676:	cmp    esi,0xfffffffc
64014679:	jne    0x6401468d
6401467b:	mov    eax,DWORD PTR [ebp-0x10]
6401467e:	mov    eax,DWORD PTR [eax+0x4]
64014681:	mov    DWORD PTR ds:0x6402a8b8,0x1
6401468b:	jmp    0x64014651
6401468d:	cmp    BYTE PTR [ebp-0x4],bl
64014690:	je     0x64014699
64014692:	mov    eax,DWORD PTR [ebp-0x8]
64014695:	and    DWORD PTR [eax+0x70],0xfffffffd
64014699:	mov    eax,esi
6401469b:	pop    ebx
6401469c:	leave  
6401469d:	ret    
6401469e:	push   ebp
6401469f:	mov    ebp,esp
640146a1:	sub    esp,0x20
640146a4:	mov    eax,ds:0x64029038
640146a9:	xor    eax,ebp
640146ab:	mov    DWORD PTR [ebp-0x4],eax
640146ae:	push   ebx
640146af:	mov    ebx,DWORD PTR [ebp+0xc]
640146b2:	push   esi
640146b3:	mov    esi,DWORD PTR [ebp+0x8]
640146b6:	push   edi
640146b7:	call   0x64014624
640146bc:	mov    edi,eax
640146be:	xor    esi,esi
640146c0:	cmp    edi,esi
640146c2:	mov    DWORD PTR [ebp+0x8],edi
640146c5:	jne    0x640146d5
640146c7:	mov    eax,ebx
640146c9:	call   0x640143a1
640146ce:	xor    eax,eax
640146d0:	jmp    0x64014868
640146d5:	mov    DWORD PTR [ebp-0x1c],esi
640146d8:	xor    eax,eax
640146da:	cmp    DWORD PTR [eax+0x64029628],edi
640146e0:	je     0x64014777
640146e6:	inc    DWORD PTR [ebp-0x1c]
640146e9:	add    eax,0x30
640146ec:	cmp    eax,0xf0
640146f1:	jb     0x640146da
640146f3:	cmp    edi,0xfde8
640146f9:	je     0x64014865
640146ff:	cmp    edi,0xfde9
64014705:	je     0x64014865
6401470b:	movzx  eax,di
6401470e:	push   eax
6401470f:	call   DWORD PTR ds:0x64022150
64014715:	test   eax,eax
64014717:	je     0x64014865
6401471d:	lea    eax,[ebp-0x18]
64014720:	push   eax
64014721:	push   edi
64014722:	call   DWORD PTR ds:0x64022148
64014728:	test   eax,eax
6401472a:	je     0x64014859
64014730:	push   0x101
64014735:	lea    eax,[ebx+0x1c]
64014738:	push   esi
64014739:	push   eax
6401473a:	call   0x64011320
6401473f:	xor    edx,edx
64014741:	inc    edx
64014742:	add    esp,0xc
64014745:	cmp    DWORD PTR [ebp-0x18],edx
64014748:	mov    DWORD PTR [ebx+0x4],edi
6401474b:	mov    DWORD PTR [ebx+0xc],esi
6401474e:	jbe    0x6401484c
64014754:	cmp    BYTE PTR [ebp-0x12],0x0
64014758:	je     0x6401482d
6401475e:	lea    esi,[ebp-0x11]
64014761:	mov    cl,BYTE PTR [esi]
64014763:	test   cl,cl
64014765:	je     0x6401482d
6401476b:	movzx  eax,BYTE PTR [esi-0x1]
6401476f:	movzx  ecx,cl
64014772:	jmp    0x6401481d
64014777:	push   0x101
6401477c:	lea    eax,[ebx+0x1c]
6401477f:	push   esi
64014780:	push   eax
64014781:	call   0x64011320
64014786:	mov    ecx,DWORD PTR [ebp-0x1c]
64014789:	add    esp,0xc
6401478c:	imul   ecx,ecx,0x30
6401478f:	mov    DWORD PTR [ebp-0x20],esi
64014792:	lea    esi,[ecx+0x64029638]
64014798:	mov    DWORD PTR [ebp-0x1c],esi
6401479b:	jmp    0x640147c7
6401479d:	mov    al,BYTE PTR [esi+0x1]
640147a0:	test   al,al
640147a2:	je     0x640147cc
640147a4:	movzx  edi,BYTE PTR [esi]
640147a7:	movzx  eax,al
640147aa:	jmp    0x640147be
640147ac:	mov    eax,DWORD PTR [ebp-0x20]
640147af:	mov    al,BYTE PTR [eax+0x64029624]
640147b5:	or     BYTE PTR [ebx+edi*1+0x1d],al
640147b9:	movzx  eax,BYTE PTR [esi+0x1]
640147bd:	inc    edi
640147be:	cmp    edi,eax
640147c0:	jbe    0x640147ac
640147c2:	mov    edi,DWORD PTR [ebp+0x8]
640147c5:	inc    esi
640147c6:	inc    esi
640147c7:	cmp    BYTE PTR [esi],0x0
640147ca:	jne    0x6401479d
640147cc:	mov    esi,DWORD PTR [ebp-0x1c]
640147cf:	inc    DWORD PTR [ebp-0x20]
640147d2:	add    esi,0x8
640147d5:	cmp    DWORD PTR [ebp-0x20],0x4
640147d9:	mov    DWORD PTR [ebp-0x1c],esi
640147dc:	jb     0x640147c7
640147de:	mov    eax,edi
640147e0:	mov    DWORD PTR [ebx+0x4],edi
640147e3:	mov    DWORD PTR [ebx+0x8],0x1
640147ea:	call   0x64014372
640147ef:	push   0x6
640147f1:	mov    DWORD PTR [ebx+0xc],eax
640147f4:	lea    eax,[ebx+0x10]
640147f7:	lea    ecx,[ecx+0x6402962c]
640147fd:	pop    edx
640147fe:	mov    si,WORD PTR [ecx]
64014801:	inc    ecx
64014802:	mov    WORD PTR [eax],si
64014805:	inc    ecx
64014806:	inc    eax
64014807:	inc    eax
64014808:	dec    edx
64014809:	jne    0x640147fe
6401480b:	mov    esi,ebx
6401480d:	call   0x640143f6
64014812:	jmp    0x640146ce
64014817:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
6401481c:	inc    eax
6401481d:	cmp    eax,ecx
6401481f:	jbe    0x64014817
64014821:	inc    esi
64014822:	inc    esi
64014823:	cmp    BYTE PTR [esi-0x1],0x0
64014827:	jne    0x64014761
6401482d:	lea    eax,[ebx+0x1e]
64014830:	mov    ecx,0xfe
64014835:	or     BYTE PTR [eax],0x8
64014838:	inc    eax
64014839:	dec    ecx
6401483a:	jne    0x64014835
6401483c:	mov    eax,DWORD PTR [ebx+0x4]
6401483f:	call   0x64014372
64014844:	mov    DWORD PTR [ebx+0xc],eax
64014847:	mov    DWORD PTR [ebx+0x8],edx
6401484a:	jmp    0x6401484f
6401484c:	mov    DWORD PTR [ebx+0x8],esi
6401484f:	xor    eax,eax
64014851:	lea    edi,[ebx+0x10]
64014854:	stos   DWORD PTR es:[edi],eax
64014855:	stos   DWORD PTR es:[edi],eax
64014856:	stos   DWORD PTR es:[edi],eax
64014857:	jmp    0x6401480b
64014859:	cmp    DWORD PTR ds:0x6402a8b8,esi
6401485f:	jne    0x640146c7
64014865:	or     eax,0xffffffff
64014868:	mov    ecx,DWORD PTR [ebp-0x4]
6401486b:	pop    edi
6401486c:	pop    esi
6401486d:	xor    ecx,ebp
6401486f:	pop    ebx
64014870:	call   0x64010c1e
64014875:	leave  
64014876:	ret    
64014877:	push   0x14
64014879:	push   0x64026b80
6401487e:	call   0x64011fc8
64014883:	or     DWORD PTR [ebp-0x20],0xffffffff
64014887:	call   0x64012d3b
6401488c:	mov    edi,eax
6401488e:	mov    DWORD PTR [ebp-0x24],edi
64014891:	call   0x64014580
64014896:	mov    ebx,DWORD PTR [edi+0x68]
64014899:	mov    esi,DWORD PTR [ebp+0x8]
6401489c:	call   0x64014624
640148a1:	mov    DWORD PTR [ebp+0x8],eax
640148a4:	cmp    eax,DWORD PTR [ebx+0x4]
640148a7:	je     0x64014a04
640148ad:	push   0x220
640148b2:	call   0x64013f00
640148b7:	pop    ecx
640148b8:	mov    ebx,eax
640148ba:	test   ebx,ebx
640148bc:	je     0x64014a08
640148c2:	mov    ecx,0x88
640148c7:	mov    esi,DWORD PTR [edi+0x68]
640148ca:	mov    edi,ebx
640148cc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640148ce:	and    DWORD PTR [ebx],0x0
640148d1:	push   ebx
640148d2:	push   DWORD PTR [ebp+0x8]
640148d5:	call   0x6401469e
640148da:	pop    ecx
640148db:	pop    ecx
640148dc:	mov    DWORD PTR [ebp-0x20],eax
640148df:	test   eax,eax
640148e1:	jne    0x640149e3
640148e7:	mov    esi,DWORD PTR [ebp-0x24]
640148ea:	push   DWORD PTR [esi+0x68]
640148ed:	call   DWORD PTR ds:0x64022094
640148f3:	test   eax,eax
640148f5:	jne    0x64014908
640148f7:	mov    eax,DWORD PTR [esi+0x68]
640148fa:	cmp    eax,0x640291f8
640148ff:	je     0x64014908
64014901:	push   eax
64014902:	call   0x64011ab6
64014907:	pop    ecx
64014908:	mov    DWORD PTR [esi+0x68],ebx
6401490b:	push   ebx
6401490c:	mov    edi,DWORD PTR ds:0x64022020
64014912:	call   edi
64014914:	test   BYTE PTR [esi+0x70],0x2
64014918:	jne    0x64014a08
6401491e:	test   BYTE PTR ds:0x6402971c,0x1
64014925:	jne    0x64014a08
6401492b:	push   0xd
6401492d:	call   0x6401823f
64014932:	pop    ecx
64014933:	and    DWORD PTR [ebp-0x4],0x0
64014937:	mov    eax,DWORD PTR [ebx+0x4]
6401493a:	mov    ds:0x6402a8c8,eax
6401493f:	mov    eax,DWORD PTR [ebx+0x8]
64014942:	mov    ds:0x6402a8cc,eax
64014947:	mov    eax,DWORD PTR [ebx+0xc]
6401494a:	mov    ds:0x6402a8d0,eax
6401494f:	xor    eax,eax
64014951:	mov    DWORD PTR [ebp-0x1c],eax
64014954:	cmp    eax,0x5
64014957:	jge    0x64014969
64014959:	mov    cx,WORD PTR [ebx+eax*2+0x10]
6401495e:	mov    WORD PTR [eax*2+0x6402a8bc],cx
64014966:	inc    eax
64014967:	jmp    0x64014951
64014969:	xor    eax,eax
6401496b:	mov    DWORD PTR [ebp-0x1c],eax
6401496e:	cmp    eax,0x101
64014973:	jge    0x64014982
64014975:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
64014979:	mov    BYTE PTR [eax+0x64029418],cl
6401497f:	inc    eax
64014980:	jmp    0x6401496b
64014982:	xor    eax,eax
64014984:	mov    DWORD PTR [ebp-0x1c],eax
64014987:	cmp    eax,0x100
6401498c:	jge    0x6401499e
6401498e:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
64014995:	mov    BYTE PTR [eax+0x64029520],cl
6401499b:	inc    eax
6401499c:	jmp    0x64014984
6401499e:	push   DWORD PTR ds:0x64029620
640149a4:	call   DWORD PTR ds:0x64022094
640149aa:	test   eax,eax
640149ac:	jne    0x640149c1
640149ae:	mov    eax,ds:0x64029620
640149b3:	cmp    eax,0x640291f8
640149b8:	je     0x640149c1
640149ba:	push   eax
640149bb:	call   0x64011ab6
640149c0:	pop    ecx
640149c1:	mov    DWORD PTR ds:0x64029620,ebx
640149c7:	push   ebx
640149c8:	call   edi
640149ca:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640149d1:	call   0x640149d8
640149d6:	jmp    0x64014a08
640149d8:	push   0xd
640149da:	call   0x64018167
640149df:	pop    ecx
640149e0:	ret    
640149e1:	jmp    0x64014a08
640149e3:	cmp    eax,0xffffffff
640149e6:	jne    0x64014a08
640149e8:	cmp    ebx,0x640291f8
640149ee:	je     0x640149f7
640149f0:	push   ebx
640149f1:	call   0x64011ab6
640149f6:	pop    ecx
640149f7:	call   0x640129f0
640149fc:	mov    DWORD PTR [eax],0x16
64014a02:	jmp    0x64014a08
64014a04:	and    DWORD PTR [ebp-0x20],0x0
64014a08:	mov    eax,DWORD PTR [ebp-0x20]
64014a0b:	call   0x6401200d
64014a10:	ret    
64014a11:	cmp    DWORD PTR ds:0x6402e5b4,0x0
64014a18:	jne    0x64014a2c
64014a1a:	push   0xfffffffd
64014a1c:	call   0x64014877
64014a21:	pop    ecx
64014a22:	mov    DWORD PTR ds:0x6402e5b4,0x1
64014a2c:	xor    eax,eax
64014a2e:	ret    
64014a2f:	push   ebx
64014a30:	push   ebp
64014a31:	push   esi
64014a32:	mov    esi,DWORD PTR [esp+0x10]
64014a36:	mov    eax,DWORD PTR [esi+0xbc]
64014a3c:	xor    ebp,ebp
64014a3e:	cmp    eax,ebp
64014a40:	push   edi
64014a41:	je     0x64014ab2
64014a43:	cmp    eax,0x64029bc8
64014a48:	je     0x64014ab2
64014a4a:	mov    eax,DWORD PTR [esi+0xb0]
64014a50:	cmp    eax,ebp
64014a52:	je     0x64014ab2
64014a54:	cmp    DWORD PTR [eax],ebp
64014a56:	jne    0x64014ab2
64014a58:	mov    eax,DWORD PTR [esi+0xb8]
64014a5e:	cmp    eax,ebp
64014a60:	je     0x64014a79
64014a62:	cmp    DWORD PTR [eax],ebp
64014a64:	jne    0x64014a79
64014a66:	push   eax
64014a67:	call   0x64011ab6
64014a6c:	push   DWORD PTR [esi+0xbc]
64014a72:	call   0x64019d85
64014a77:	pop    ecx
64014a78:	pop    ecx
64014a79:	mov    eax,DWORD PTR [esi+0xb4]
64014a7f:	cmp    eax,ebp
64014a81:	je     0x64014a9a
64014a83:	cmp    DWORD PTR [eax],ebp
64014a85:	jne    0x64014a9a
64014a87:	push   eax
64014a88:	call   0x64011ab6
64014a8d:	push   DWORD PTR [esi+0xbc]
64014a93:	call   0x64019d45
64014a98:	pop    ecx
64014a99:	pop    ecx
64014a9a:	push   DWORD PTR [esi+0xb0]
64014aa0:	call   0x64011ab6
64014aa5:	push   DWORD PTR [esi+0xbc]
64014aab:	call   0x64011ab6
64014ab0:	pop    ecx
64014ab1:	pop    ecx
64014ab2:	mov    eax,DWORD PTR [esi+0xc0]
64014ab8:	cmp    eax,ebp
64014aba:	je     0x64014b00
64014abc:	cmp    DWORD PTR [eax],ebp
64014abe:	jne    0x64014b00
64014ac0:	mov    eax,DWORD PTR [esi+0xc4]
64014ac6:	sub    eax,0xfe
64014acb:	push   eax
64014acc:	call   0x64011ab6
64014ad1:	mov    eax,DWORD PTR [esi+0xcc]
64014ad7:	mov    edi,0x80
64014adc:	sub    eax,edi
64014ade:	push   eax
64014adf:	call   0x64011ab6
64014ae4:	mov    eax,DWORD PTR [esi+0xd0]
64014aea:	sub    eax,edi
64014aec:	push   eax
64014aed:	call   0x64011ab6
64014af2:	push   DWORD PTR [esi+0xc0]
64014af8:	call   0x64011ab6
64014afd:	add    esp,0x10
64014b00:	lea    edi,[esi+0xd4]
64014b06:	mov    eax,DWORD PTR [edi]
64014b08:	cmp    eax,0x64029b08
64014b0d:	je     0x64014b26
64014b0f:	cmp    DWORD PTR [eax+0xb4],ebp
64014b15:	jne    0x64014b26
64014b17:	push   eax
64014b18:	call   0x64019bb5
64014b1d:	push   DWORD PTR [edi]
64014b1f:	call   0x64011ab6
64014b24:	pop    ecx
64014b25:	pop    ecx
64014b26:	push   0x6
64014b28:	lea    edi,[esi+0x50]
64014b2b:	pop    ebx
64014b2c:	cmp    DWORD PTR [edi-0x8],0x64029720
64014b33:	je     0x64014b46
64014b35:	mov    eax,DWORD PTR [edi]
64014b37:	cmp    eax,ebp
64014b39:	je     0x64014b46
64014b3b:	cmp    DWORD PTR [eax],ebp
64014b3d:	jne    0x64014b46
64014b3f:	push   eax
64014b40:	call   0x64011ab6
64014b45:	pop    ecx
64014b46:	cmp    DWORD PTR [edi-0x4],ebp
64014b49:	je     0x64014b5d
64014b4b:	mov    eax,DWORD PTR [edi+0x4]
64014b4e:	cmp    eax,ebp
64014b50:	je     0x64014b5d
64014b52:	cmp    DWORD PTR [eax],ebp
64014b54:	jne    0x64014b5d
64014b56:	push   eax
64014b57:	call   0x64011ab6
64014b5c:	pop    ecx
64014b5d:	add    edi,0x10
64014b60:	dec    ebx
64014b61:	jne    0x64014b2c
64014b63:	push   esi
64014b64:	call   0x64011ab6
64014b69:	pop    ecx
64014b6a:	pop    edi
64014b6b:	pop    esi
64014b6c:	pop    ebp
64014b6d:	pop    ebx
64014b6e:	ret    
64014b6f:	push   ebx
64014b70:	push   ebp
64014b71:	push   esi
64014b72:	mov    esi,DWORD PTR [esp+0x10]
64014b76:	push   edi
64014b77:	mov    edi,DWORD PTR ds:0x64022020
64014b7d:	push   esi
64014b7e:	call   edi
64014b80:	mov    eax,DWORD PTR [esi+0xb0]
64014b86:	test   eax,eax
64014b88:	je     0x64014b8d
64014b8a:	push   eax
64014b8b:	call   edi
64014b8d:	mov    eax,DWORD PTR [esi+0xb8]
64014b93:	test   eax,eax
64014b95:	je     0x64014b9a
64014b97:	push   eax
64014b98:	call   edi
64014b9a:	mov    eax,DWORD PTR [esi+0xb4]
64014ba0:	test   eax,eax
64014ba2:	je     0x64014ba7
64014ba4:	push   eax
64014ba5:	call   edi
64014ba7:	mov    eax,DWORD PTR [esi+0xc0]
64014bad:	test   eax,eax
64014baf:	je     0x64014bb4
64014bb1:	push   eax
64014bb2:	call   edi
64014bb4:	push   0x6
64014bb6:	lea    ebx,[esi+0x50]
64014bb9:	pop    ebp
64014bba:	cmp    DWORD PTR [ebx-0x8],0x64029720
64014bc1:	je     0x64014bcc
64014bc3:	mov    eax,DWORD PTR [ebx]
64014bc5:	test   eax,eax
64014bc7:	je     0x64014bcc
64014bc9:	push   eax
64014bca:	call   edi
64014bcc:	cmp    DWORD PTR [ebx-0x4],0x0
64014bd0:	je     0x64014bdc
64014bd2:	mov    eax,DWORD PTR [ebx+0x4]
64014bd5:	test   eax,eax
64014bd7:	je     0x64014bdc
64014bd9:	push   eax
64014bda:	call   edi
64014bdc:	add    ebx,0x10
64014bdf:	dec    ebp
64014be0:	jne    0x64014bba
64014be2:	mov    eax,DWORD PTR [esi+0xd4]
64014be8:	add    eax,0xb4
64014bed:	push   eax
64014bee:	call   edi
64014bf0:	pop    edi
64014bf1:	pop    esi
64014bf2:	pop    ebp
64014bf3:	pop    ebx
64014bf4:	ret    
64014bf5:	push   esi
64014bf6:	mov    esi,DWORD PTR [esp+0x8]
64014bfa:	test   esi,esi
64014bfc:	je     0x64014c7d
64014bfe:	push   ebx
64014bff:	push   ebp
64014c00:	push   edi
64014c01:	mov    edi,DWORD PTR ds:0x64022094
64014c07:	push   esi
64014c08:	call   edi
64014c0a:	mov    eax,DWORD PTR [esi+0xb0]
64014c10:	test   eax,eax
64014c12:	je     0x64014c17
64014c14:	push   eax
64014c15:	call   edi
64014c17:	mov    eax,DWORD PTR [esi+0xb8]
64014c1d:	test   eax,eax
64014c1f:	je     0x64014c24
64014c21:	push   eax
64014c22:	call   edi
64014c24:	mov    eax,DWORD PTR [esi+0xb4]
64014c2a:	test   eax,eax
64014c2c:	je     0x64014c31
64014c2e:	push   eax
64014c2f:	call   edi
64014c31:	mov    eax,DWORD PTR [esi+0xc0]
64014c37:	test   eax,eax
64014c39:	je     0x64014c3e
64014c3b:	push   eax
64014c3c:	call   edi
64014c3e:	push   0x6
64014c40:	lea    ebx,[esi+0x50]
64014c43:	pop    ebp
64014c44:	cmp    DWORD PTR [ebx-0x8],0x64029720
64014c4b:	je     0x64014c56
64014c4d:	mov    eax,DWORD PTR [ebx]
64014c4f:	test   eax,eax
64014c51:	je     0x64014c56
64014c53:	push   eax
64014c54:	call   edi
64014c56:	cmp    DWORD PTR [ebx-0x4],0x0
64014c5a:	je     0x64014c66
64014c5c:	mov    eax,DWORD PTR [ebx+0x4]
64014c5f:	test   eax,eax
64014c61:	je     0x64014c66
64014c63:	push   eax
64014c64:	call   edi
64014c66:	add    ebx,0x10
64014c69:	dec    ebp
64014c6a:	jne    0x64014c44
64014c6c:	mov    eax,DWORD PTR [esi+0xd4]
64014c72:	add    eax,0xb4
64014c77:	push   eax
64014c78:	call   edi
64014c7a:	pop    edi
64014c7b:	pop    ebp
64014c7c:	pop    ebx
64014c7d:	mov    eax,esi
64014c7f:	pop    esi
64014c80:	ret    
64014c81:	test   edi,edi
64014c83:	je     0x64014cbc
64014c85:	test   eax,eax
64014c87:	je     0x64014cbc
64014c89:	push   esi
64014c8a:	mov    esi,DWORD PTR [eax]
64014c8c:	cmp    esi,edi
64014c8e:	je     0x64014cb8
64014c90:	push   edi
64014c91:	mov    DWORD PTR [eax],edi
64014c93:	call   0x64014b6f
64014c98:	test   esi,esi
64014c9a:	pop    ecx
64014c9b:	je     0x64014cb8
64014c9d:	push   esi
64014c9e:	call   0x64014bf5
64014ca3:	cmp    DWORD PTR [esi],0x0
64014ca6:	pop    ecx
64014ca7:	jne    0x64014cb8
64014ca9:	cmp    esi,0x64029728
64014caf:	je     0x64014cb8
64014cb1:	push   esi
64014cb2:	call   0x64014a2f
64014cb7:	pop    ecx
64014cb8:	mov    eax,edi
64014cba:	pop    esi
64014cbb:	ret    
64014cbc:	xor    eax,eax
64014cbe:	ret    
64014cbf:	push   0xc
64014cc1:	push   0x64026ba0
64014cc6:	call   0x64011fc8
64014ccb:	call   0x64012d3b
64014cd0:	mov    esi,eax
64014cd2:	mov    eax,ds:0x6402971c
64014cd7:	test   DWORD PTR [esi+0x70],eax
64014cda:	je     0x64014cfe
64014cdc:	cmp    DWORD PTR [esi+0x6c],0x0
64014ce0:	je     0x64014cfe
64014ce2:	call   0x64012d3b
64014ce7:	mov    esi,DWORD PTR [eax+0x6c]
64014cea:	test   esi,esi
64014cec:	jne    0x64014cf6
64014cee:	push   0x20
64014cf0:	call   0x64014076
64014cf5:	pop    ecx
64014cf6:	mov    eax,esi
64014cf8:	call   0x6401200d
64014cfd:	ret    
64014cfe:	push   0xc
64014d00:	call   0x6401823f
64014d05:	pop    ecx
64014d06:	and    DWORD PTR [ebp-0x4],0x0
64014d0a:	lea    eax,[esi+0x6c]
64014d0d:	mov    edi,DWORD PTR ds:0x64029800
64014d13:	call   0x64014c81
64014d18:	mov    DWORD PTR [ebp-0x1c],eax
64014d1b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014d22:	call   0x64014d29
64014d27:	jmp    0x64014cea
64014d29:	push   0xc
64014d2b:	call   0x64018167
64014d30:	pop    ecx
64014d31:	mov    esi,DWORD PTR [ebp-0x1c]
64014d34:	ret    
64014d35:	push   ebp
64014d36:	mov    ebp,esp
64014d38:	push   ecx
64014d39:	push   esi
64014d3a:	mov    esi,DWORD PTR [ebp+0xc]
64014d3d:	push   esi
64014d3e:	call   0x6401aa9d
64014d43:	mov    DWORD PTR [ebp+0xc],eax
64014d46:	mov    eax,DWORD PTR [esi+0xc]
64014d49:	test   al,0x82
64014d4b:	pop    ecx
64014d4c:	jne    0x64014d65
64014d4e:	call   0x640129f0
64014d53:	mov    DWORD PTR [eax],0x9
64014d59:	or     DWORD PTR [esi+0xc],0x20
64014d5d:	or     eax,0xffffffff
64014d60:	jmp    0x64014e92
64014d65:	test   al,0x40
64014d67:	je     0x64014d76
64014d69:	call   0x640129f0
64014d6e:	mov    DWORD PTR [eax],0x22
64014d74:	jmp    0x64014d59
64014d76:	push   ebx
64014d77:	xor    ebx,ebx
64014d79:	test   al,0x1
64014d7b:	je     0x64014d93
64014d7d:	test   al,0x10
64014d7f:	mov    DWORD PTR [esi+0x4],ebx
64014d82:	je     0x64014e0d
64014d88:	mov    ecx,DWORD PTR [esi+0x8]
64014d8b:	and    eax,0xfffffffe
64014d8e:	mov    DWORD PTR [esi],ecx
64014d90:	mov    DWORD PTR [esi+0xc],eax
64014d93:	mov    eax,DWORD PTR [esi+0xc]
64014d96:	and    eax,0xffffffef
64014d99:	or     eax,0x2
64014d9c:	test   ax,0x10c
64014da0:	mov    DWORD PTR [esi+0xc],eax
64014da3:	mov    DWORD PTR [esi+0x4],ebx
64014da6:	mov    DWORD PTR [ebp-0x4],ebx
64014da9:	jne    0x64014dd7
64014dab:	call   0x6401a8fc
64014db0:	add    eax,0x20
64014db3:	cmp    esi,eax
64014db5:	je     0x64014dc3
64014db7:	call   0x6401a8fc
64014dbc:	add    eax,0x40
64014dbf:	cmp    esi,eax
64014dc1:	jne    0x64014dd0
64014dc3:	push   DWORD PTR [ebp+0xc]
64014dc6:	call   0x6401a89e
64014dcb:	test   eax,eax
64014dcd:	pop    ecx
64014dce:	jne    0x64014dd7
64014dd0:	push   esi
64014dd1:	call   0x6401a85a
64014dd6:	pop    ecx
64014dd7:	test   WORD PTR [esi+0xc],0x108
64014ddd:	push   edi
64014dde:	je     0x64014e64
64014de4:	mov    eax,DWORD PTR [esi+0x8]
64014de7:	mov    edi,DWORD PTR [esi]
64014de9:	lea    ecx,[eax+0x1]
64014dec:	mov    DWORD PTR [esi],ecx
64014dee:	mov    ecx,DWORD PTR [esi+0x18]
64014df1:	sub    edi,eax
64014df3:	dec    ecx
64014df4:	cmp    edi,ebx
64014df6:	mov    DWORD PTR [esi+0x4],ecx
64014df9:	jle    0x64014e18
64014dfb:	push   edi
64014dfc:	push   eax
64014dfd:	push   DWORD PTR [ebp+0xc]
64014e00:	call   0x6401a77e
64014e05:	add    esp,0xc
64014e08:	mov    DWORD PTR [ebp-0x4],eax
64014e0b:	jmp    0x64014e5a
64014e0d:	or     eax,0x20
64014e10:	mov    DWORD PTR [esi+0xc],eax
64014e13:	or     eax,0xffffffff
64014e16:	jmp    0x64014e91
64014e18:	mov    ecx,DWORD PTR [ebp+0xc]
64014e1b:	cmp    ecx,0xffffffff
64014e1e:	je     0x64014e3b
64014e20:	cmp    ecx,0xfffffffe
64014e23:	je     0x64014e3b
64014e25:	mov    eax,ecx
64014e27:	and    eax,0x1f
64014e2a:	mov    edx,ecx
64014e2c:	sar    edx,0x5
64014e2f:	shl    eax,0x6
64014e32:	add    eax,DWORD PTR [edx*4+0x6402e4a0]
64014e39:	jmp    0x64014e40
64014e3b:	mov    eax,0x64029810
64014e40:	test   BYTE PTR [eax+0x4],0x20
64014e44:	je     0x64014e5a
64014e46:	push   0x2
64014e48:	push   ebx
64014e49:	push   ebx
64014e4a:	push   ecx
64014e4b:	call   0x6401a043
64014e50:	and    eax,edx
64014e52:	add    esp,0x10
64014e55:	cmp    eax,0xffffffff
64014e58:	je     0x64014e7f
64014e5a:	mov    eax,DWORD PTR [esi+0x8]
64014e5d:	mov    cl,BYTE PTR [ebp+0x8]
64014e60:	mov    BYTE PTR [eax],cl
64014e62:	jmp    0x64014e7a
64014e64:	xor    edi,edi
64014e66:	inc    edi
64014e67:	push   edi
64014e68:	lea    eax,[ebp+0x8]
64014e6b:	push   eax
64014e6c:	push   DWORD PTR [ebp+0xc]
64014e6f:	call   0x6401a77e
64014e74:	add    esp,0xc
64014e77:	mov    DWORD PTR [ebp-0x4],eax
64014e7a:	cmp    DWORD PTR [ebp-0x4],edi
64014e7d:	je     0x64014e88
64014e7f:	or     DWORD PTR [esi+0xc],0x20
64014e83:	or     eax,0xffffffff
64014e86:	jmp    0x64014e90
64014e88:	mov    eax,DWORD PTR [ebp+0x8]
64014e8b:	and    eax,0xff
64014e90:	pop    edi
64014e91:	pop    ebx
64014e92:	pop    esi
64014e93:	leave  
64014e94:	ret    
64014e95:	push   ebp
64014e96:	mov    ebp,esp
64014e98:	push   esi
64014e99:	mov    esi,eax
64014e9b:	jmp    0x64014eb1
64014e9d:	push   DWORD PTR [ebp+0x8]
64014ea0:	mov    eax,DWORD PTR [ebp+0x10]
64014ea3:	dec    DWORD PTR [ebp+0xc]
64014ea6:	call   0x64015819
64014eab:	cmp    DWORD PTR [esi],0xffffffff
64014eae:	pop    ecx
64014eaf:	je     0x64014eb7
64014eb1:	cmp    DWORD PTR [ebp+0xc],0x0
64014eb5:	jg     0x64014e9d
64014eb7:	pop    esi
64014eb8:	pop    ebp
64014eb9:	ret    
64014eba:	test   BYTE PTR [edi+0xc],0x40
64014ebe:	push   ebx
64014ebf:	push   esi
64014ec0:	mov    esi,eax
64014ec2:	mov    ebx,ecx
64014ec4:	je     0x64014eff
64014ec6:	cmp    DWORD PTR [edi+0x8],0x0
64014eca:	jne    0x64014eff
64014ecc:	mov    eax,DWORD PTR [esp+0xc]
64014ed0:	add    DWORD PTR [esi],eax
64014ed2:	jmp    0x64014f06
64014ed4:	movzx  eax,WORD PTR [ebx]
64014ed7:	dec    DWORD PTR [esp+0xc]
64014edb:	push   eax
64014edc:	mov    eax,edi
64014ede:	call   0x64015819
64014ee3:	inc    ebx
64014ee4:	inc    ebx
64014ee5:	cmp    DWORD PTR [esi],0xffffffff
64014ee8:	pop    ecx
64014ee9:	jne    0x64014eff
64014eeb:	call   0x640129f0
64014ef0:	cmp    DWORD PTR [eax],0x2a
64014ef3:	jne    0x64014f06
64014ef5:	push   0x3f
64014ef7:	mov    eax,edi
64014ef9:	call   0x64015819
64014efe:	pop    ecx
64014eff:	cmp    DWORD PTR [esp+0xc],0x0
64014f04:	jg     0x64014ed4
64014f06:	pop    esi
64014f07:	pop    ebx
64014f08:	ret    
64014f09:	push   ebp
64014f0a:	lea    ebp,[esp-0x3f4]
64014f11:	sub    esp,0x474
64014f17:	mov    eax,ds:0x64029038
64014f1c:	xor    eax,ebp
64014f1e:	mov    DWORD PTR [ebp+0x3f0],eax
64014f24:	mov    eax,DWORD PTR [ebp+0x3fc]
64014f2a:	push   ebx
64014f2b:	mov    ebx,DWORD PTR [ebp+0x408]
64014f31:	push   esi
64014f32:	mov    esi,DWORD PTR [ebp+0x400]
64014f38:	push   edi
64014f39:	push   DWORD PTR [ebp+0x404]
64014f3f:	xor    edi,edi
64014f41:	lea    ecx,[ebp-0x64]
64014f44:	mov    DWORD PTR [ebp-0x3c],eax
64014f47:	mov    DWORD PTR [ebp-0x28],ebx
64014f4a:	mov    DWORD PTR [ebp-0x54],edi
64014f4d:	mov    DWORD PTR [ebp-0x14],edi
64014f50:	mov    DWORD PTR [ebp-0x38],edi
64014f53:	mov    DWORD PTR [ebp-0x18],edi
64014f56:	mov    DWORD PTR [ebp-0x30],edi
64014f59:	mov    DWORD PTR [ebp-0x48],edi
64014f5c:	mov    DWORD PTR [ebp-0x34],edi
64014f5f:	call   0x64010dc1
64014f64:	cmp    DWORD PTR [ebp-0x3c],edi
64014f67:	jne    0x64014f96
64014f69:	call   0x640129f0
64014f6e:	push   edi
64014f6f:	push   edi
64014f70:	push   edi
64014f71:	push   edi
64014f72:	mov    DWORD PTR [eax],0x16
64014f78:	push   edi
64014f79:	call   0x64010756
64014f7e:	add    esp,0x14
64014f81:	cmp    BYTE PTR [ebp-0x58],0x0
64014f85:	je     0x64014f8e
64014f87:	mov    eax,DWORD PTR [ebp-0x5c]
64014f8a:	and    DWORD PTR [eax+0x70],0xfffffffd
64014f8e:	or     eax,0xffffffff
64014f91:	jmp    0x640157e1
64014f96:	cmp    esi,edi
64014f98:	je     0x64014f69
64014f9a:	movzx  edx,WORD PTR [esi]
64014f9d:	xor    ecx,ecx
64014f9f:	cmp    dx,di
64014fa2:	mov    DWORD PTR [ebp-0x2c],edi
64014fa5:	mov    DWORD PTR [ebp-0x20],edi
64014fa8:	mov    DWORD PTR [ebp-0x50],edi
64014fab:	mov    DWORD PTR [ebp-0x24],edx
64014fae:	je     0x640157d1
64014fb4:	push   0x2
64014fb6:	pop    edi
64014fb7:	add    esi,edi
64014fb9:	cmp    DWORD PTR [ebp-0x2c],0x0
64014fbd:	mov    DWORD PTR [ebp-0x4c],esi
64014fc0:	jl     0x640157d1
64014fc6:	lea    eax,[edx-0x20]
64014fc9:	cmp    ax,0x58
64014fcd:	ja     0x64014fde
64014fcf:	movzx  eax,dx
64014fd2:	movzx  eax,BYTE PTR [eax+0x64022cc0]
64014fd9:	and    eax,0xf
64014fdc:	jmp    0x64014fe0
64014fde:	xor    eax,eax
64014fe0:	movsx  eax,BYTE PTR [ecx+eax*8+0x64022ce0]
64014fe8:	push   0x7
64014fea:	sar    eax,0x4
64014fed:	pop    ecx
64014fee:	cmp    eax,ecx
64014ff0:	mov    DWORD PTR [ebp-0x68],eax
64014ff3:	ja     0x6401579f
64014ff9:	jmp    DWORD PTR [eax*4+0x640157f9]
64015000:	xor    eax,eax
64015002:	or     DWORD PTR [ebp-0x18],0xffffffff
64015006:	mov    DWORD PTR [ebp-0x6c],eax
64015009:	mov    DWORD PTR [ebp-0x48],eax
6401500c:	mov    DWORD PTR [ebp-0x38],eax
6401500f:	mov    DWORD PTR [ebp-0x30],eax
64015012:	mov    DWORD PTR [ebp-0x14],eax
64015015:	mov    DWORD PTR [ebp-0x34],eax
64015018:	jmp    0x6401579f
6401501d:	movzx  eax,dx
64015020:	sub    eax,0x20
64015023:	je     0x64015063
64015025:	sub    eax,0x3
64015028:	je     0x64015057
6401502a:	sub    eax,0x8
6401502d:	je     0x6401504e
6401502f:	sub    eax,edi
64015031:	je     0x64015045
64015033:	sub    eax,0x3
64015036:	jne    0x6401579f
6401503c:	or     DWORD PTR [ebp-0x14],0x8
64015040:	jmp    0x6401579f
64015045:	or     DWORD PTR [ebp-0x14],0x4
64015049:	jmp    0x6401579f
6401504e:	or     DWORD PTR [ebp-0x14],0x1
64015052:	jmp    0x6401579f
64015057:	or     DWORD PTR [ebp-0x14],0x80
6401505e:	jmp    0x6401579f
64015063:	or     DWORD PTR [ebp-0x14],edi
64015066:	jmp    0x6401579f
6401506b:	cmp    dx,0x2a
6401506f:	jne    0x64015091
64015071:	add    ebx,0x4
64015074:	mov    DWORD PTR [ebp-0x28],ebx
64015077:	mov    ebx,DWORD PTR [ebx-0x4]
6401507a:	test   ebx,ebx
6401507c:	mov    DWORD PTR [ebp-0x38],ebx
6401507f:	jge    0x6401579f
64015085:	or     DWORD PTR [ebp-0x14],0x4
64015089:	neg    DWORD PTR [ebp-0x38]
6401508c:	jmp    0x6401579f
64015091:	mov    eax,DWORD PTR [ebp-0x38]
64015094:	imul   eax,eax,0xa
64015097:	movzx  ecx,dx
6401509a:	lea    eax,[eax+ecx*1-0x30]
6401509e:	mov    DWORD PTR [ebp-0x38],eax
640150a1:	jmp    0x6401579f
640150a6:	and    DWORD PTR [ebp-0x18],0x0
640150aa:	jmp    0x6401579f
640150af:	cmp    dx,0x2a
640150b3:	jne    0x640150d2
640150b5:	add    ebx,0x4
640150b8:	mov    DWORD PTR [ebp-0x28],ebx
640150bb:	mov    ebx,DWORD PTR [ebx-0x4]
640150be:	test   ebx,ebx
640150c0:	mov    DWORD PTR [ebp-0x18],ebx
640150c3:	jge    0x6401579f
640150c9:	or     DWORD PTR [ebp-0x18],0xffffffff
640150cd:	jmp    0x6401579f
640150d2:	mov    eax,DWORD PTR [ebp-0x18]
640150d5:	imul   eax,eax,0xa
640150d8:	movzx  ecx,dx
640150db:	lea    eax,[eax+ecx*1-0x30]
640150df:	mov    DWORD PTR [ebp-0x18],eax
640150e2:	jmp    0x6401579f
640150e7:	movzx  eax,dx
640150ea:	cmp    eax,0x49
640150ed:	je     0x64015137
640150ef:	cmp    eax,0x68
640150f2:	je     0x6401512e
640150f4:	cmp    eax,0x6c
640150f7:	je     0x6401510e
640150f9:	cmp    eax,0x77
640150fc:	jne    0x6401579f
64015102:	or     DWORD PTR [ebp-0x14],0x800
64015109:	jmp    0x6401579f
6401510e:	cmp    WORD PTR [esi],0x6c
64015112:	jne    0x64015125
64015114:	add    esi,edi
64015116:	or     DWORD PTR [ebp-0x14],0x1000
6401511d:	mov    DWORD PTR [ebp-0x4c],esi
64015120:	jmp    0x6401579f
64015125:	or     DWORD PTR [ebp-0x14],0x10
64015129:	jmp    0x6401579f
6401512e:	or     DWORD PTR [ebp-0x14],0x20
64015132:	jmp    0x6401579f
64015137:	movzx  eax,WORD PTR [esi]
6401513a:	cmp    ax,0x36
6401513e:	jne    0x64015159
64015140:	cmp    WORD PTR [esi+0x2],0x34
64015145:	jne    0x64015159
64015147:	add    esi,0x4
6401514a:	or     DWORD PTR [ebp-0x14],0x8000
64015151:	mov    DWORD PTR [ebp-0x4c],esi
64015154:	jmp    0x6401579f
64015159:	cmp    ax,0x33
6401515d:	jne    0x64015178
6401515f:	cmp    WORD PTR [esi+0x2],0x32
64015164:	jne    0x64015178
64015166:	add    esi,0x4
64015169:	and    DWORD PTR [ebp-0x14],0xffff7fff
64015170:	mov    DWORD PTR [ebp-0x4c],esi
64015173:	jmp    0x6401579f
64015178:	cmp    ax,0x64
6401517c:	je     0x6401579f
64015182:	cmp    ax,0x69
64015186:	je     0x6401579f
6401518c:	cmp    ax,0x6f
64015190:	je     0x6401579f
64015196:	cmp    ax,0x75
6401519a:	je     0x6401579f
640151a0:	cmp    ax,0x78
640151a4:	je     0x6401579f
640151aa:	cmp    ax,0x58
640151ae:	je     0x6401579f
640151b4:	and    DWORD PTR [ebp-0x68],0x0
640151b8:	mov    eax,DWORD PTR [ebp-0x3c]
640151bb:	push   edx
640151bc:	lea    esi,[ebp-0x2c]
640151bf:	mov    DWORD PTR [ebp-0x34],0x1
640151c6:	call   0x64015819
640151cb:	jmp    0x6401579e
640151d0:	movzx  eax,dx
640151d3:	cmp    eax,0x64
640151d6:	jg     0x64015383
640151dc:	je     0x64015402
640151e2:	cmp    eax,0x53
640151e5:	jg     0x640152c2
640151eb:	je     0x6401524c
640151ed:	sub    eax,0x41
640151f0:	je     0x64015202
640151f2:	sub    eax,edi
640151f4:	je     0x64015237
640151f6:	sub    eax,edi
640151f8:	je     0x64015202
640151fa:	sub    eax,edi
640151fc:	jne    0x64015683
64015202:	add    edx,0x20
64015205:	mov    DWORD PTR [ebp-0x6c],0x1
6401520c:	mov    DWORD PTR [ebp-0x24],edx
6401520f:	or     DWORD PTR [ebp-0x14],0x40
64015213:	cmp    DWORD PTR [ebp-0x18],0x0
64015217:	lea    esi,[ebp-0x10]
6401521a:	mov    eax,0x200
6401521f:	mov    DWORD PTR [ebp-0x1c],esi
64015222:	mov    DWORD PTR [ebp-0x20],eax
64015225:	jge    0x64015426
6401522b:	mov    DWORD PTR [ebp-0x18],0x6
64015232:	jmp    0x64015473
64015237:	test   WORD PTR [ebp-0x14],0x830
6401523d:	jne    0x640152df
64015243:	or     DWORD PTR [ebp-0x14],0x20
64015247:	jmp    0x640152df
6401524c:	test   WORD PTR [ebp-0x14],0x830
64015252:	jne    0x64015258
64015254:	or     DWORD PTR [ebp-0x14],0x20
64015258:	mov    edi,DWORD PTR [ebp-0x18]
6401525b:	cmp    edi,0xffffffff
6401525e:	jne    0x64015265
64015260:	mov    edi,0x7fffffff
64015265:	add    ebx,0x4
64015268:	test   BYTE PTR [ebp-0x14],0x20
6401526c:	mov    DWORD PTR [ebp-0x28],ebx
6401526f:	mov    ebx,DWORD PTR [ebx-0x4]
64015272:	mov    DWORD PTR [ebp-0x1c],ebx
64015275:	je     0x64015656
6401527b:	test   ebx,ebx
6401527d:	jne    0x64015287
6401527f:	mov    eax,ds:0x640298e0
64015284:	mov    DWORD PTR [ebp-0x1c],eax
64015287:	and    DWORD PTR [ebp-0x20],0x0
6401528b:	test   edi,edi
6401528d:	mov    esi,DWORD PTR [ebp-0x1c]
64015290:	jle    0x64015683
64015296:	mov    al,BYTE PTR [esi]
64015298:	test   al,al
6401529a:	je     0x64015683
640152a0:	lea    ecx,[ebp-0x64]
640152a3:	movzx  eax,al
640152a6:	push   ecx
640152a7:	push   eax
640152a8:	call   0x64018085
640152ad:	test   eax,eax
640152af:	pop    ecx
640152b0:	pop    ecx
640152b1:	je     0x640152b4
640152b3:	inc    esi
640152b4:	inc    esi
640152b5:	inc    DWORD PTR [ebp-0x20]
640152b8:	cmp    DWORD PTR [ebp-0x20],edi
640152bb:	jl     0x64015296
640152bd:	jmp    0x64015683
640152c2:	sub    eax,0x58
640152c5:	je     0x6401550e
640152cb:	sub    eax,edi
640152cd:	je     0x64015336
640152cf:	sub    eax,ecx
640152d1:	je     0x6401520f
640152d7:	sub    eax,edi
640152d9:	jne    0x64015683
640152df:	movzx  eax,WORD PTR [ebx]
640152e2:	add    ebx,0x4
640152e5:	xor    esi,esi
640152e7:	inc    esi
640152e8:	test   BYTE PTR [ebp-0x14],0x20
640152ec:	mov    DWORD PTR [ebp-0x34],esi
640152ef:	mov    DWORD PTR [ebp-0x28],ebx
640152f2:	mov    DWORD PTR [ebp-0x70],eax
640152f5:	je     0x64015324
640152f7:	mov    BYTE PTR [ebp-0x40],al
640152fa:	lea    eax,[ebp-0x64]
640152fd:	push   eax
640152fe:	mov    eax,DWORD PTR [ebp-0x64]
64015301:	mov    BYTE PTR [ebp-0x3f],0x0
64015305:	push   DWORD PTR [eax+0xac]
6401530b:	lea    eax,[ebp-0x40]
6401530e:	push   eax
6401530f:	lea    eax,[ebp-0x10]
64015312:	push   eax
64015313:	call   0x6401acbe
64015318:	add    esp,0x10
6401531b:	test   eax,eax
6401531d:	jge    0x64015328
6401531f:	mov    DWORD PTR [ebp-0x48],esi
64015322:	jmp    0x64015328
64015324:	mov    WORD PTR [ebp-0x10],ax
64015328:	lea    eax,[ebp-0x10]
6401532b:	mov    DWORD PTR [ebp-0x1c],eax
6401532e:	mov    DWORD PTR [ebp-0x20],esi
64015331:	jmp    0x64015683
64015336:	mov    eax,DWORD PTR [ebx]
64015338:	add    ebx,0x4
6401533b:	test   eax,eax
6401533d:	mov    DWORD PTR [ebp-0x28],ebx
64015340:	je     0x6401536f
64015342:	mov    ecx,DWORD PTR [eax+0x4]
64015345:	test   ecx,ecx
64015347:	je     0x6401536f
64015349:	test   WORD PTR [ebp-0x14],0x800
6401534f:	movsx  eax,WORD PTR [eax]
64015352:	mov    DWORD PTR [ebp-0x1c],ecx
64015355:	je     0x64015366
64015357:	cdq    
64015358:	sub    eax,edx
6401535a:	mov    DWORD PTR [ebp-0x34],0x1
64015361:	jmp    0x6401567e
64015366:	and    DWORD PTR [ebp-0x34],0x0
6401536a:	jmp    0x64015680
6401536f:	mov    eax,ds:0x640298e0
64015374:	mov    DWORD PTR [ebp-0x1c],eax
64015377:	push   eax
64015378:	call   0x640123f0
6401537d:	pop    ecx
6401537e:	jmp    0x64015680
64015383:	cmp    eax,0x70
64015386:	jg     0x64015513
6401538c:	je     0x64015507
64015392:	cmp    eax,0x65
64015395:	jl     0x64015683
6401539b:	cmp    eax,0x67
6401539e:	jle    0x6401520f
640153a4:	cmp    eax,0x69
640153a7:	je     0x64015402
640153a9:	cmp    eax,0x6e
640153ac:	je     0x640153cd
640153ae:	cmp    eax,0x6f
640153b1:	jne    0x64015683
640153b7:	test   BYTE PTR [ebp-0x14],0x80
640153bb:	mov    DWORD PTR [ebp-0x24],0x8
640153c2:	je     0x6401540d
640153c4:	or     DWORD PTR [ebp-0x14],0x200
640153cb:	jmp    0x6401540d
640153cd:	mov    esi,DWORD PTR [ebx]
640153cf:	add    ebx,0x4
640153d2:	mov    DWORD PTR [ebp-0x28],ebx
640153d5:	call   0x6401aca8
640153da:	test   eax,eax
640153dc:	je     0x640157ba
640153e2:	test   BYTE PTR [ebp-0x14],0x20
640153e6:	je     0x640153f1
640153e8:	mov    ax,WORD PTR [ebp-0x2c]
640153ec:	mov    WORD PTR [esi],ax
640153ef:	jmp    0x640153f6
640153f1:	mov    eax,DWORD PTR [ebp-0x2c]
640153f4:	mov    DWORD PTR [esi],eax
640153f6:	mov    DWORD PTR [ebp-0x48],0x1
640153fd:	jmp    0x6401578c
64015402:	or     DWORD PTR [ebp-0x14],0x40
64015406:	mov    DWORD PTR [ebp-0x24],0xa
6401540d:	test   WORD PTR [ebp-0x14],0x8000
64015413:	je     0x6401555d
64015419:	mov    eax,DWORD PTR [ebx]
6401541b:	mov    edx,DWORD PTR [ebx+0x4]
6401541e:	add    ebx,0x8
64015421:	jmp    0x64015596
64015426:	jne    0x64015437
64015428:	cmp    dx,0x67
6401542c:	jne    0x64015473
6401542e:	mov    DWORD PTR [ebp-0x18],0x1
64015435:	jmp    0x64015473
64015437:	cmp    DWORD PTR [ebp-0x18],eax
6401543a:	jle    0x6401543f
6401543c:	mov    DWORD PTR [ebp-0x18],eax
6401543f:	cmp    DWORD PTR [ebp-0x18],0xa3
64015446:	jle    0x64015473
64015448:	mov    edi,DWORD PTR [ebp-0x18]
6401544b:	add    edi,0x15d
64015451:	push   edi
64015452:	call   0x64013f00
64015457:	test   eax,eax
64015459:	mov    edx,DWORD PTR [ebp-0x24]
6401545c:	pop    ecx
6401545d:	mov    DWORD PTR [ebp-0x50],eax
64015460:	je     0x6401546c
64015462:	mov    DWORD PTR [ebp-0x1c],eax
64015465:	mov    DWORD PTR [ebp-0x20],edi
64015468:	mov    esi,eax
6401546a:	jmp    0x64015473
6401546c:	mov    DWORD PTR [ebp-0x18],0xa3
64015473:	mov    eax,DWORD PTR [ebx]
64015475:	add    ebx,0x8
64015478:	mov    DWORD PTR [ebp-0x78],eax
6401547b:	mov    eax,DWORD PTR [ebx-0x4]
6401547e:	mov    DWORD PTR [ebp-0x74],eax
64015481:	lea    eax,[ebp-0x64]
64015484:	push   eax
64015485:	push   DWORD PTR [ebp-0x6c]
64015488:	movsx  eax,dl
6401548b:	push   DWORD PTR [ebp-0x18]
6401548e:	mov    DWORD PTR [ebp-0x28],ebx
64015491:	push   eax
64015492:	push   DWORD PTR [ebp-0x20]
64015495:	lea    eax,[ebp-0x78]
64015498:	push   esi
64015499:	push   eax
6401549a:	push   DWORD PTR ds:0x64029aec
640154a0:	call   0x64012b1f
640154a5:	pop    ecx
640154a6:	call   eax
640154a8:	mov    ebx,DWORD PTR [ebp-0x14]
640154ab:	add    esp,0x1c
640154ae:	and    ebx,0x80
640154b4:	je     0x640154d1
640154b6:	cmp    DWORD PTR [ebp-0x18],0x0
640154ba:	jne    0x640154d1
640154bc:	lea    eax,[ebp-0x64]
640154bf:	push   eax
640154c0:	push   esi
640154c1:	push   DWORD PTR ds:0x64029af8
640154c7:	call   0x64012b1f
640154cc:	pop    ecx
640154cd:	call   eax
640154cf:	pop    ecx
640154d0:	pop    ecx
640154d1:	cmp    WORD PTR [ebp-0x24],0x67
640154d6:	jne    0x640154f1
640154d8:	test   ebx,ebx
640154da:	jne    0x640154f1
640154dc:	lea    eax,[ebp-0x64]
640154df:	push   eax
640154e0:	push   esi
640154e1:	push   DWORD PTR ds:0x64029af4
640154e7:	call   0x64012b1f
640154ec:	pop    ecx
640154ed:	call   eax
640154ef:	pop    ecx
640154f0:	pop    ecx
640154f1:	cmp    BYTE PTR [esi],0x2d
640154f4:	jne    0x64015501
640154f6:	or     DWORD PTR [ebp-0x14],0x100
640154fd:	inc    esi
640154fe:	mov    DWORD PTR [ebp-0x1c],esi
64015501:	push   esi
64015502:	jmp    0x64015378
64015507:	mov    DWORD PTR [ebp-0x18],0x8
6401550e:	mov    DWORD PTR [ebp-0x54],ecx
64015511:	jmp    0x64015534
64015513:	sub    eax,0x73
64015516:	je     0x64015258
6401551c:	sub    eax,edi
6401551e:	je     0x64015406
64015524:	sub    eax,0x3
64015527:	jne    0x64015683
6401552d:	mov    DWORD PTR [ebp-0x54],0x27
64015534:	test   BYTE PTR [ebp-0x14],0x80
64015538:	mov    DWORD PTR [ebp-0x24],0x10
6401553f:	je     0x6401540d
64015545:	mov    eax,DWORD PTR [ebp-0x54]
64015548:	add    eax,0x51
6401554b:	mov    WORD PTR [ebp-0x44],0x30
64015551:	mov    WORD PTR [ebp-0x42],ax
64015555:	mov    DWORD PTR [ebp-0x30],edi
64015558:	jmp    0x6401540d
6401555d:	test   WORD PTR [ebp-0x14],0x1000
64015563:	jne    0x64015419
64015569:	add    ebx,0x4
6401556c:	test   BYTE PTR [ebp-0x14],0x20
64015570:	je     0x64015588
64015572:	test   BYTE PTR [ebp-0x14],0x40
64015576:	mov    DWORD PTR [ebp-0x28],ebx
64015579:	je     0x64015581
6401557b:	movsx  eax,WORD PTR [ebx-0x4]
6401557f:	jmp    0x64015585
64015581:	movzx  eax,WORD PTR [ebx-0x4]
64015585:	cdq    
64015586:	jmp    0x64015599
64015588:	test   BYTE PTR [ebp-0x14],0x40
6401558c:	mov    eax,DWORD PTR [ebx-0x4]
6401558f:	je     0x64015594
64015591:	cdq    
64015592:	jmp    0x64015596
64015594:	xor    edx,edx
64015596:	mov    DWORD PTR [ebp-0x28],ebx
64015599:	test   BYTE PTR [ebp-0x14],0x40
6401559d:	je     0x640155b7
6401559f:	test   edx,edx
640155a1:	jg     0x640155b7
640155a3:	jl     0x640155a9
640155a5:	test   eax,eax
640155a7:	jae    0x640155b7
640155a9:	neg    eax
640155ab:	adc    edx,0x0
640155ae:	neg    edx
640155b0:	or     DWORD PTR [ebp-0x14],0x100
640155b7:	test   WORD PTR [ebp-0x14],0x9000
640155bd:	mov    ebx,edx
640155bf:	mov    edi,eax
640155c1:	jne    0x640155c5
640155c3:	xor    ebx,ebx
640155c5:	cmp    DWORD PTR [ebp-0x18],0x0
640155c9:	jge    0x640155d4
640155cb:	mov    DWORD PTR [ebp-0x18],0x1
640155d2:	jmp    0x640155e5
640155d4:	and    DWORD PTR [ebp-0x14],0xfffffff7
640155d8:	mov    eax,0x200
640155dd:	cmp    DWORD PTR [ebp-0x18],eax
640155e0:	jle    0x640155e5
640155e2:	mov    DWORD PTR [ebp-0x18],eax
640155e5:	mov    eax,edi
640155e7:	or     eax,ebx
640155e9:	jne    0x640155ee
640155eb:	and    DWORD PTR [ebp-0x30],eax
640155ee:	lea    esi,[ebp+0x1ef]
640155f4:	mov    eax,DWORD PTR [ebp-0x18]
640155f7:	dec    DWORD PTR [ebp-0x18]
640155fa:	test   eax,eax
640155fc:	jg     0x64015604
640155fe:	mov    eax,edi
64015600:	or     eax,ebx
64015602:	je     0x64015628
64015604:	mov    eax,DWORD PTR [ebp-0x24]
64015607:	cdq    
64015608:	push   edx
64015609:	push   eax
6401560a:	push   ebx
6401560b:	push   edi
6401560c:	call   0x64016fd0
64015611:	add    ecx,0x30
64015614:	cmp    ecx,0x39
64015617:	mov    DWORD PTR [ebp-0x7c],ebx
6401561a:	mov    edi,eax
6401561c:	mov    ebx,edx
6401561e:	jle    0x64015623
64015620:	add    ecx,DWORD PTR [ebp-0x54]
64015623:	mov    BYTE PTR [esi],cl
64015625:	dec    esi
64015626:	jmp    0x640155f4
64015628:	lea    eax,[ebp+0x1ef]
6401562e:	sub    eax,esi
64015630:	inc    esi
64015631:	test   WORD PTR [ebp-0x14],0x200
64015637:	mov    DWORD PTR [ebp-0x20],eax
6401563a:	mov    DWORD PTR [ebp-0x1c],esi
6401563d:	je     0x64015683
6401563f:	test   eax,eax
64015641:	je     0x6401564a
64015643:	mov    ecx,esi
64015645:	cmp    BYTE PTR [ecx],0x30
64015648:	je     0x64015683
6401564a:	dec    DWORD PTR [ebp-0x1c]
6401564d:	mov    ecx,DWORD PTR [ebp-0x1c]
64015650:	mov    BYTE PTR [ecx],0x30
64015653:	inc    eax
64015654:	jmp    0x64015680
64015656:	test   ebx,ebx
64015658:	jne    0x64015662
6401565a:	mov    eax,ds:0x640298e4
6401565f:	mov    DWORD PTR [ebp-0x1c],eax
64015662:	mov    eax,DWORD PTR [ebp-0x1c]
64015665:	mov    DWORD PTR [ebp-0x34],0x1
6401566c:	jmp    0x64015677
6401566e:	dec    edi
6401566f:	cmp    WORD PTR [eax],0x0
64015673:	je     0x6401567b
64015675:	inc    eax
64015676:	inc    eax
64015677:	test   edi,edi
64015679:	jne    0x6401566e
6401567b:	sub    eax,DWORD PTR [ebp-0x1c]
6401567e:	sar    eax,1
64015680:	mov    DWORD PTR [ebp-0x20],eax
64015683:	cmp    DWORD PTR [ebp-0x48],0x0
64015687:	jne    0x6401578c
6401568d:	mov    eax,DWORD PTR [ebp-0x14]
64015690:	test   al,0x40
64015692:	je     0x640156bf
64015694:	test   ax,0x100
64015698:	je     0x640156a2
6401569a:	mov    WORD PTR [ebp-0x44],0x2d
640156a0:	jmp    0x640156b8
640156a2:	test   al,0x1
640156a4:	je     0x640156ae
640156a6:	mov    WORD PTR [ebp-0x44],0x2b
640156ac:	jmp    0x640156b8
640156ae:	test   al,0x2
640156b0:	je     0x640156bf
640156b2:	mov    WORD PTR [ebp-0x44],0x20
640156b8:	mov    DWORD PTR [ebp-0x30],0x1
640156bf:	mov    ebx,DWORD PTR [ebp-0x38]
640156c2:	mov    esi,DWORD PTR [ebp-0x20]
640156c5:	sub    ebx,esi
640156c7:	sub    ebx,DWORD PTR [ebp-0x30]
640156ca:	test   BYTE PTR [ebp-0x14],0xc
640156ce:	jne    0x640156e1
640156d0:	push   DWORD PTR [ebp-0x3c]
640156d3:	lea    eax,[ebp-0x2c]
640156d6:	push   ebx
640156d7:	push   0x20
640156d9:	call   0x64014e95
640156de:	add    esp,0xc
640156e1:	push   DWORD PTR [ebp-0x30]
640156e4:	mov    edi,DWORD PTR [ebp-0x3c]
640156e7:	lea    eax,[ebp-0x2c]
640156ea:	lea    ecx,[ebp-0x44]
640156ed:	call   0x64014eba
640156f2:	test   BYTE PTR [ebp-0x14],0x8
640156f6:	pop    ecx
640156f7:	je     0x6401570e
640156f9:	test   BYTE PTR [ebp-0x14],0x4
640156fd:	jne    0x6401570e
640156ff:	push   edi
64015700:	push   ebx
64015701:	push   0x30
64015703:	lea    eax,[ebp-0x2c]
64015706:	call   0x64014e95
6401570b:	add    esp,0xc
6401570e:	cmp    DWORD PTR [ebp-0x34],0x0
64015712:	jne    0x64015762
64015714:	test   esi,esi
64015716:	jle    0x64015762
64015718:	mov    edi,DWORD PTR [ebp-0x1c]
6401571b:	mov    DWORD PTR [ebp-0x24],esi
6401571e:	dec    DWORD PTR [ebp-0x24]
64015721:	lea    eax,[ebp-0x64]
64015724:	push   eax
64015725:	mov    eax,DWORD PTR [ebp-0x64]
64015728:	push   DWORD PTR [eax+0xac]
6401572e:	lea    eax,[ebp-0x70]
64015731:	push   edi
64015732:	push   eax
64015733:	call   0x6401acbe
64015738:	add    esp,0x10
6401573b:	test   eax,eax
6401573d:	mov    DWORD PTR [ebp-0x7c],eax
64015740:	jle    0x6401575c
64015742:	push   DWORD PTR [ebp-0x70]
64015745:	mov    eax,DWORD PTR [ebp-0x3c]
64015748:	lea    esi,[ebp-0x2c]
6401574b:	call   0x64015819
64015750:	add    edi,DWORD PTR [ebp-0x7c]
64015753:	cmp    DWORD PTR [ebp-0x24],0x0
64015757:	pop    ecx
64015758:	jg     0x6401571e
6401575a:	jmp    0x6401576f
6401575c:	or     DWORD PTR [ebp-0x2c],0xffffffff
64015760:	jmp    0x6401576f
64015762:	mov    ecx,DWORD PTR [ebp-0x1c]
64015765:	push   esi
64015766:	lea    eax,[ebp-0x2c]
64015769:	call   0x64014eba
6401576e:	pop    ecx
6401576f:	cmp    DWORD PTR [ebp-0x2c],0x0
64015773:	jl     0x6401578c
64015775:	test   BYTE PTR [ebp-0x14],0x4
64015779:	je     0x6401578c
6401577b:	push   DWORD PTR [ebp-0x3c]
6401577e:	lea    eax,[ebp-0x2c]
64015781:	push   ebx
64015782:	push   0x20
64015784:	call   0x64014e95
64015789:	add    esp,0xc
6401578c:	cmp    DWORD PTR [ebp-0x50],0x0
64015790:	je     0x6401579f
64015792:	push   DWORD PTR [ebp-0x50]
64015795:	call   0x64011ab6
6401579a:	and    DWORD PTR [ebp-0x50],0x0
6401579e:	pop    ecx
6401579f:	mov    esi,DWORD PTR [ebp-0x4c]
640157a2:	movzx  eax,WORD PTR [esi]
640157a5:	test   ax,ax
640157a8:	mov    DWORD PTR [ebp-0x24],eax
640157ab:	je     0x640157d1
640157ad:	mov    ecx,DWORD PTR [ebp-0x68]
640157b0:	mov    ebx,DWORD PTR [ebp-0x28]
640157b3:	mov    edx,eax
640157b5:	jmp    0x64014fb4
640157ba:	call   0x640129f0
640157bf:	mov    DWORD PTR [eax],0x16
640157c5:	xor    eax,eax
640157c7:	push   eax
640157c8:	push   eax
640157c9:	push   eax
640157ca:	push   eax
640157cb:	push   eax
640157cc:	jmp    0x64014f79
640157d1:	cmp    BYTE PTR [ebp-0x58],0x0
640157d5:	je     0x640157de
640157d7:	mov    eax,DWORD PTR [ebp-0x5c]
640157da:	and    DWORD PTR [eax+0x70],0xfffffffd
640157de:	mov    eax,DWORD PTR [ebp-0x2c]
640157e1:	mov    ecx,DWORD PTR [ebp+0x3f0]
640157e7:	pop    edi
640157e8:	pop    esi
640157e9:	xor    ecx,ebp
640157eb:	pop    ebx
640157ec:	call   0x64010c1e
640157f1:	add    ebp,0x3f4
640157f7:	leave  
640157f8:	ret    
640157f9:	mov    eax,0x640151
640157fe:	push   eax
640157ff:	add    DWORD PTR [ebp+ebx*1+0x50],esp
64015803:	add    DWORD PTR [ebx+ebp*2+0x50],esp
64015807:	add    DWORD PTR [esi+eiz*4+0x50],esp
6401580b:	add    DWORD PTR [edi+ebp*4+0x50],esp
6401580f:	add    DWORD PTR [edi+eiz*8+0x50],esp
64015813:	add    DWORD PTR [eax+edx*8+0x51],esp
64015817:	add    DWORD PTR [esi+esi*8+0x40],esp
6401581b:	or     al,0x40
6401581d:	je     0x64015825
6401581f:	cmp    DWORD PTR [eax+0x8],0x0
64015823:	je     0x6401583b
64015825:	push   eax
64015826:	push   DWORD PTR [esp+0x8]
6401582a:	call   0x6401aaca
6401582f:	cmp    ax,0xffff
64015833:	pop    ecx
64015834:	pop    ecx
64015835:	jne    0x6401583b
64015837:	or     DWORD PTR [esi],0xffffffff
6401583a:	ret    
6401583b:	inc    DWORD PTR [esi]
6401583d:	ret    
6401583e:	push   ebp
6401583f:	lea    ebp,[esp-0x3f4]
64015846:	sub    esp,0x474
6401584c:	mov    eax,ds:0x64029038
64015851:	xor    eax,ebp
64015853:	mov    DWORD PTR [ebp+0x3f0],eax
64015859:	push   ebx
6401585a:	mov    ebx,DWORD PTR [ebp+0x408]
64015860:	push   esi
64015861:	mov    esi,DWORD PTR [ebp+0x3fc]
64015867:	xor    eax,eax
64015869:	push   edi
6401586a:	push   DWORD PTR [ebp+0x404]
64015870:	mov    edi,DWORD PTR [ebp+0x400]
64015876:	lea    ecx,[ebp-0x58]
64015879:	mov    DWORD PTR [ebp-0x48],esi
6401587c:	mov    DWORD PTR [ebp-0x24],ebx
6401587f:	mov    DWORD PTR [ebp-0x60],eax
64015882:	mov    DWORD PTR [ebp-0x14],eax
64015885:	mov    DWORD PTR [ebp-0x38],eax
64015888:	mov    DWORD PTR [ebp-0x18],eax
6401588b:	mov    DWORD PTR [ebp-0x30],eax
6401588e:	mov    DWORD PTR [ebp-0x5c],eax
64015891:	mov    DWORD PTR [ebp-0x34],eax
64015894:	call   0x64010dc1
64015899:	test   esi,esi
6401589b:	jne    0x640158cc
6401589d:	call   0x640129f0
640158a2:	mov    DWORD PTR [eax],0x16
640158a8:	xor    eax,eax
640158aa:	push   eax
640158ab:	push   eax
640158ac:	push   eax
640158ad:	push   eax
640158ae:	push   eax
640158af:	call   0x64010756
640158b4:	add    esp,0x14
640158b7:	cmp    BYTE PTR [ebp-0x4c],0x0
640158bb:	je     0x640158c4
640158bd:	mov    eax,DWORD PTR [ebp-0x50]
640158c0:	and    DWORD PTR [eax+0x70],0xfffffffd
640158c4:	or     eax,0xffffffff
640158c7:	jmp    0x64016122
640158cc:	xor    esi,esi
640158ce:	cmp    edi,esi
640158d0:	jne    0x640158e4
640158d2:	call   0x640129f0
640158d7:	push   esi
640158d8:	push   esi
640158d9:	push   esi
640158da:	push   esi
640158db:	mov    DWORD PTR [eax],0x16
640158e1:	push   esi
640158e2:	jmp    0x640158af
640158e4:	movzx  ecx,WORD PTR [edi]
640158e7:	cmp    cx,si
640158ea:	mov    DWORD PTR [ebp-0x2c],esi
640158ed:	mov    DWORD PTR [ebp-0x20],esi
640158f0:	mov    DWORD PTR [ebp-0x40],esi
640158f3:	mov    DWORD PTR [ebp-0x64],esi
640158f6:	mov    DWORD PTR [ebp-0x28],ecx
640158f9:	je     0x64016112
640158ff:	push   0x2
64015901:	pop    esi
64015902:	add    edi,esi
64015904:	xor    eax,eax
64015906:	cmp    DWORD PTR [ebp-0x2c],eax
64015909:	mov    DWORD PTR [ebp-0x6c],edi
6401590c:	jl     0x64016102
64015912:	lea    edx,[ecx-0x20]
64015915:	cmp    dx,0x58
64015919:	ja     0x64015928
6401591b:	movzx  eax,cx
6401591e:	movzx  eax,BYTE PTR [eax+0x64024368]
64015925:	and    eax,0xf
64015928:	mov    edx,DWORD PTR [ebp-0x40]
6401592b:	imul   eax,eax,0x9
6401592e:	movzx  eax,BYTE PTR [eax+edx*1+0x64024388]
64015936:	push   0x8
64015938:	shr    eax,0x4
6401593b:	pop    edx
6401593c:	cmp    eax,edx
6401593e:	mov    DWORD PTR [ebp-0x40],eax
64015941:	je     0x6401589d
64015947:	cmp    eax,0x7
6401594a:	ja     0x640160ea
64015950:	jmp    DWORD PTR [eax*4+0x6401613a]
64015957:	xor    eax,eax
64015959:	or     DWORD PTR [ebp-0x18],0xffffffff
6401595d:	mov    DWORD PTR [ebp-0x68],eax
64015960:	mov    DWORD PTR [ebp-0x5c],eax
64015963:	mov    DWORD PTR [ebp-0x38],eax
64015966:	mov    DWORD PTR [ebp-0x30],eax
64015969:	mov    DWORD PTR [ebp-0x14],eax
6401596c:	mov    DWORD PTR [ebp-0x34],eax
6401596f:	jmp    0x640160f0
64015974:	movzx  eax,cx
64015977:	sub    eax,0x20
6401597a:	je     0x640159b8
6401597c:	sub    eax,0x3
6401597f:	je     0x640159ac
64015981:	sub    eax,edx
64015983:	je     0x640159a3
64015985:	sub    eax,esi
64015987:	je     0x6401599a
64015989:	sub    eax,0x3
6401598c:	jne    0x640160ea
64015992:	or     DWORD PTR [ebp-0x14],edx
64015995:	jmp    0x640160f0
6401599a:	or     DWORD PTR [ebp-0x14],0x4
6401599e:	jmp    0x640160f0
640159a3:	or     DWORD PTR [ebp-0x14],0x1
640159a7:	jmp    0x640160f0
640159ac:	or     DWORD PTR [ebp-0x14],0x80
640159b3:	jmp    0x640160f0
640159b8:	or     DWORD PTR [ebp-0x14],esi
640159bb:	jmp    0x640160f0
640159c0:	cmp    cx,0x2a
640159c4:	jne    0x640159e5
640159c6:	mov    eax,DWORD PTR [ebx]
640159c8:	add    ebx,0x4
640159cb:	test   eax,eax
640159cd:	mov    DWORD PTR [ebp-0x24],ebx
640159d0:	mov    DWORD PTR [ebp-0x38],eax
640159d3:	jge    0x640160f0
640159d9:	or     DWORD PTR [ebp-0x14],0x4
640159dd:	neg    DWORD PTR [ebp-0x38]
640159e0:	jmp    0x640160f0
640159e5:	mov    eax,DWORD PTR [ebp-0x38]
640159e8:	imul   eax,eax,0xa
640159eb:	movzx  ecx,cx
640159ee:	lea    eax,[eax+ecx*1-0x30]
640159f2:	mov    DWORD PTR [ebp-0x38],eax
640159f5:	jmp    0x640160f0
640159fa:	and    DWORD PTR [ebp-0x18],0x0
640159fe:	jmp    0x640160f0
64015a03:	cmp    cx,0x2a
64015a07:	jne    0x64015a25
64015a09:	mov    eax,DWORD PTR [ebx]
64015a0b:	add    ebx,0x4
64015a0e:	test   eax,eax
64015a10:	mov    DWORD PTR [ebp-0x24],ebx
64015a13:	mov    DWORD PTR [ebp-0x18],eax
64015a16:	jge    0x640160f0
64015a1c:	or     DWORD PTR [ebp-0x18],0xffffffff
64015a20:	jmp    0x640160f0
64015a25:	mov    eax,DWORD PTR [ebp-0x18]
64015a28:	imul   eax,eax,0xa
64015a2b:	movzx  ecx,cx
64015a2e:	lea    eax,[eax+ecx*1-0x30]
64015a32:	mov    DWORD PTR [ebp-0x18],eax
64015a35:	jmp    0x640160f0
64015a3a:	movzx  eax,cx
64015a3d:	cmp    eax,0x49
64015a40:	je     0x64015a87
64015a42:	cmp    eax,0x68
64015a45:	je     0x64015a7e
64015a47:	cmp    eax,0x6c
64015a4a:	je     0x64015a61
64015a4c:	cmp    eax,0x77
64015a4f:	jne    0x640160f0
64015a55:	or     DWORD PTR [ebp-0x14],0x800
64015a5c:	jmp    0x640160f0
64015a61:	cmp    WORD PTR [edi],0x6c
64015a65:	jne    0x64015a75
64015a67:	add    edi,esi
64015a69:	or     DWORD PTR [ebp-0x14],0x1000
64015a70:	jmp    0x640160f0
64015a75:	or     DWORD PTR [ebp-0x14],0x10
64015a79:	jmp    0x640160f0
64015a7e:	or     DWORD PTR [ebp-0x14],0x20
64015a82:	jmp    0x640160f0
64015a87:	movzx  eax,WORD PTR [edi]
64015a8a:	cmp    ax,0x36
64015a8e:	jne    0x64015aa6
64015a90:	cmp    WORD PTR [edi+0x2],0x34
64015a95:	jne    0x64015aa6
64015a97:	add    edi,0x4
64015a9a:	or     DWORD PTR [ebp-0x14],0x8000
64015aa1:	jmp    0x640160f0
64015aa6:	cmp    ax,0x33
64015aaa:	jne    0x64015ac2
64015aac:	cmp    WORD PTR [edi+0x2],0x32
64015ab1:	jne    0x64015ac2
64015ab3:	add    edi,0x4
64015ab6:	and    DWORD PTR [ebp-0x14],0xffff7fff
64015abd:	jmp    0x640160f0
64015ac2:	cmp    ax,0x64
64015ac6:	je     0x640160f0
64015acc:	cmp    ax,0x69
64015ad0:	je     0x640160f0
64015ad6:	cmp    ax,0x6f
64015ada:	je     0x640160f0
64015ae0:	cmp    ax,0x75
64015ae4:	je     0x640160f0
64015aea:	cmp    ax,0x78
64015aee:	je     0x640160f0
64015af4:	cmp    ax,0x58
64015af8:	je     0x640160f0
64015afe:	and    DWORD PTR [ebp-0x40],0x0
64015b02:	mov    eax,DWORD PTR [ebp-0x48]
64015b05:	push   ecx
64015b06:	lea    esi,[ebp-0x2c]
64015b09:	mov    DWORD PTR [ebp-0x34],0x1
64015b10:	call   0x64015819
64015b15:	pop    ecx
64015b16:	jmp    0x640160f0
64015b1b:	movzx  eax,cx
64015b1e:	cmp    eax,0x64
64015b21:	jg     0x64015ccf
64015b27:	je     0x64015d4a
64015b2d:	cmp    eax,0x53
64015b30:	jg     0x64015c0d
64015b36:	je     0x64015b97
64015b38:	sub    eax,0x41
64015b3b:	je     0x64015b4d
64015b3d:	sub    eax,esi
64015b3f:	je     0x64015b82
64015b41:	sub    eax,esi
64015b43:	je     0x64015b4d
64015b45:	sub    eax,esi
64015b47:	jne    0x64015fce
64015b4d:	add    ecx,0x20
64015b50:	mov    DWORD PTR [ebp-0x68],0x1
64015b57:	mov    DWORD PTR [ebp-0x28],ecx
64015b5a:	or     DWORD PTR [ebp-0x14],0x40
64015b5e:	cmp    DWORD PTR [ebp-0x18],0x0
64015b62:	lea    esi,[ebp-0x10]
64015b65:	mov    eax,0x200
64015b6a:	mov    DWORD PTR [ebp-0x1c],esi
64015b6d:	mov    DWORD PTR [ebp-0x20],eax
64015b70:	jge    0x64015d6e
64015b76:	mov    DWORD PTR [ebp-0x18],0x6
64015b7d:	jmp    0x64015dbe
64015b82:	test   WORD PTR [ebp-0x14],0x830
64015b88:	jne    0x64015c2b
64015b8e:	or     DWORD PTR [ebp-0x14],0x20
64015b92:	jmp    0x64015c2b
64015b97:	test   WORD PTR [ebp-0x14],0x830
64015b9d:	jne    0x64015ba3
64015b9f:	or     DWORD PTR [ebp-0x14],0x20
64015ba3:	mov    edi,DWORD PTR [ebp-0x18]
64015ba6:	cmp    edi,0xffffffff
64015ba9:	jne    0x64015bb0
64015bab:	mov    edi,0x7fffffff
64015bb0:	add    ebx,0x4
64015bb3:	test   BYTE PTR [ebp-0x14],0x20
64015bb7:	mov    DWORD PTR [ebp-0x24],ebx
64015bba:	mov    ebx,DWORD PTR [ebx-0x4]
64015bbd:	mov    DWORD PTR [ebp-0x1c],ebx
64015bc0:	je     0x64015fa1
64015bc6:	test   ebx,ebx
64015bc8:	jne    0x64015bd2
64015bca:	mov    eax,ds:0x640298e0
64015bcf:	mov    DWORD PTR [ebp-0x1c],eax
64015bd2:	and    DWORD PTR [ebp-0x20],0x0
64015bd6:	test   edi,edi
64015bd8:	mov    esi,DWORD PTR [ebp-0x1c]
64015bdb:	jle    0x64015fce
64015be1:	mov    al,BYTE PTR [esi]
64015be3:	test   al,al
64015be5:	je     0x64015fce
64015beb:	lea    ecx,[ebp-0x58]
64015bee:	movzx  eax,al
64015bf1:	push   ecx
64015bf2:	push   eax
64015bf3:	call   0x64018085
64015bf8:	test   eax,eax
64015bfa:	pop    ecx
64015bfb:	pop    ecx
64015bfc:	je     0x64015bff
64015bfe:	inc    esi
64015bff:	inc    esi
64015c00:	inc    DWORD PTR [ebp-0x20]
64015c03:	cmp    DWORD PTR [ebp-0x20],edi
64015c06:	jl     0x64015be1
64015c08:	jmp    0x64015fce
64015c0d:	sub    eax,0x58
64015c10:	je     0x64015e55
64015c16:	sub    eax,esi
64015c18:	je     0x64015c82
64015c1a:	sub    eax,0x7
64015c1d:	je     0x64015b5a
64015c23:	sub    eax,esi
64015c25:	jne    0x64015fce
64015c2b:	movzx  eax,WORD PTR [ebx]
64015c2e:	add    ebx,0x4
64015c31:	xor    esi,esi
64015c33:	inc    esi
64015c34:	test   BYTE PTR [ebp-0x14],0x20
64015c38:	mov    DWORD PTR [ebp-0x34],esi
64015c3b:	mov    DWORD PTR [ebp-0x24],ebx
64015c3e:	mov    DWORD PTR [ebp-0x70],eax
64015c41:	je     0x64015c70
64015c43:	mov    BYTE PTR [ebp-0x44],al
64015c46:	lea    eax,[ebp-0x58]
64015c49:	push   eax
64015c4a:	mov    eax,DWORD PTR [ebp-0x58]
64015c4d:	mov    BYTE PTR [ebp-0x43],0x0
64015c51:	push   DWORD PTR [eax+0xac]
64015c57:	lea    eax,[ebp-0x44]
64015c5a:	push   eax
64015c5b:	lea    eax,[ebp-0x10]
64015c5e:	push   eax
64015c5f:	call   0x6401acbe
64015c64:	add    esp,0x10
64015c67:	test   eax,eax
64015c69:	jge    0x64015c74
64015c6b:	mov    DWORD PTR [ebp-0x5c],esi
64015c6e:	jmp    0x64015c74
64015c70:	mov    WORD PTR [ebp-0x10],ax
64015c74:	lea    eax,[ebp-0x10]
64015c77:	mov    DWORD PTR [ebp-0x1c],eax
64015c7a:	mov    DWORD PTR [ebp-0x20],esi
64015c7d:	jmp    0x64015fce
64015c82:	mov    eax,DWORD PTR [ebx]
64015c84:	add    ebx,0x4
64015c87:	test   eax,eax
64015c89:	mov    DWORD PTR [ebp-0x24],ebx
64015c8c:	je     0x64015cbb
64015c8e:	mov    ecx,DWORD PTR [eax+0x4]
64015c91:	test   ecx,ecx
64015c93:	je     0x64015cbb
64015c95:	test   WORD PTR [ebp-0x14],0x800
64015c9b:	movsx  eax,WORD PTR [eax]
64015c9e:	mov    DWORD PTR [ebp-0x1c],ecx
64015ca1:	je     0x64015cb2
64015ca3:	cdq    
64015ca4:	sub    eax,edx
64015ca6:	mov    DWORD PTR [ebp-0x34],0x1
64015cad:	jmp    0x64015fc9
64015cb2:	and    DWORD PTR [ebp-0x34],0x0
64015cb6:	jmp    0x64015fcb
64015cbb:	mov    eax,ds:0x640298e0
64015cc0:	mov    DWORD PTR [ebp-0x1c],eax
64015cc3:	push   eax
64015cc4:	call   0x640123f0
64015cc9:	pop    ecx
64015cca:	jmp    0x64015fcb
64015ccf:	cmp    eax,0x70
64015cd2:	jg     0x64015e5e
64015cd8:	je     0x64015e52
64015cde:	cmp    eax,0x65
64015ce1:	jl     0x64015fce
64015ce7:	cmp    eax,0x67
64015cea:	jle    0x64015b5a
64015cf0:	cmp    eax,0x69
64015cf3:	je     0x64015d4a
64015cf5:	cmp    eax,0x6e
64015cf8:	je     0x64015d15
64015cfa:	cmp    eax,0x6f
64015cfd:	jne    0x64015fce
64015d03:	test   BYTE PTR [ebp-0x14],0x80
64015d07:	mov    DWORD PTR [ebp-0x28],edx
64015d0a:	je     0x64015d55
64015d0c:	or     DWORD PTR [ebp-0x14],0x200
64015d13:	jmp    0x64015d55
64015d15:	mov    esi,DWORD PTR [ebx]
64015d17:	add    ebx,0x4
64015d1a:	mov    DWORD PTR [ebp-0x24],ebx
64015d1d:	call   0x6401aca8
64015d22:	test   eax,eax
64015d24:	je     0x6401589d
64015d2a:	test   BYTE PTR [ebp-0x14],0x20
64015d2e:	je     0x64015d39
64015d30:	mov    ax,WORD PTR [ebp-0x2c]
64015d34:	mov    WORD PTR [esi],ax
64015d37:	jmp    0x64015d3e
64015d39:	mov    eax,DWORD PTR [ebp-0x2c]
64015d3c:	mov    DWORD PTR [esi],eax
64015d3e:	mov    DWORD PTR [ebp-0x5c],0x1
64015d45:	jmp    0x640160d7
64015d4a:	or     DWORD PTR [ebp-0x14],0x40
64015d4e:	mov    DWORD PTR [ebp-0x28],0xa
64015d55:	test   WORD PTR [ebp-0x14],0x8000
64015d5b:	je     0x64015ea8
64015d61:	add    ebx,edx
64015d63:	mov    eax,DWORD PTR [ebx-0x8]
64015d66:	mov    edx,DWORD PTR [ebx-0x4]
64015d69:	jmp    0x64015ee1
64015d6e:	jne    0x64015d7f
64015d70:	cmp    cx,0x67
64015d74:	jne    0x64015dbe
64015d76:	mov    DWORD PTR [ebp-0x18],0x1
64015d7d:	jmp    0x64015dbe
64015d7f:	cmp    DWORD PTR [ebp-0x18],eax
64015d82:	jle    0x64015d87
64015d84:	mov    DWORD PTR [ebp-0x18],eax
64015d87:	cmp    DWORD PTR [ebp-0x18],0xa3
64015d8e:	jle    0x64015dbe
64015d90:	mov    edi,DWORD PTR [ebp-0x18]
64015d93:	add    edi,0x15d
64015d99:	push   edi
64015d9a:	call   0x64013f00
64015d9f:	test   eax,eax
64015da1:	pop    ecx
64015da2:	mov    ecx,DWORD PTR [ebp-0x28]
64015da5:	push   0x8
64015da7:	mov    DWORD PTR [ebp-0x64],eax
64015daa:	pop    edx
64015dab:	je     0x64015db7
64015dad:	mov    DWORD PTR [ebp-0x1c],eax
64015db0:	mov    DWORD PTR [ebp-0x20],edi
64015db3:	mov    esi,eax
64015db5:	jmp    0x64015dbe
64015db7:	mov    DWORD PTR [ebp-0x18],0xa3
64015dbe:	add    ebx,edx
64015dc0:	mov    eax,DWORD PTR [ebx-0x8]
64015dc3:	mov    DWORD PTR [ebp-0x78],eax
64015dc6:	mov    eax,DWORD PTR [ebx-0x4]
64015dc9:	mov    DWORD PTR [ebp-0x74],eax
64015dcc:	lea    eax,[ebp-0x58]
64015dcf:	push   eax
64015dd0:	push   DWORD PTR [ebp-0x68]
64015dd3:	movsx  eax,cl
64015dd6:	push   DWORD PTR [ebp-0x18]
64015dd9:	mov    DWORD PTR [ebp-0x24],ebx
64015ddc:	push   eax
64015ddd:	push   DWORD PTR [ebp-0x20]
64015de0:	lea    eax,[ebp-0x78]
64015de3:	push   esi
64015de4:	push   eax
64015de5:	push   DWORD PTR ds:0x64029aec
64015deb:	call   0x64012b1f
64015df0:	pop    ecx
64015df1:	call   eax
64015df3:	mov    ebx,DWORD PTR [ebp-0x14]
64015df6:	add    esp,0x1c
64015df9:	and    ebx,0x80
64015dff:	je     0x64015e1c
64015e01:	cmp    DWORD PTR [ebp-0x18],0x0
64015e05:	jne    0x64015e1c
64015e07:	lea    eax,[ebp-0x58]
64015e0a:	push   eax
64015e0b:	push   esi
64015e0c:	push   DWORD PTR ds:0x64029af8
64015e12:	call   0x64012b1f
64015e17:	pop    ecx
64015e18:	call   eax
64015e1a:	pop    ecx
64015e1b:	pop    ecx
64015e1c:	cmp    WORD PTR [ebp-0x28],0x67
64015e21:	jne    0x64015e3c
64015e23:	test   ebx,ebx
64015e25:	jne    0x64015e3c
64015e27:	lea    eax,[ebp-0x58]
64015e2a:	push   eax
64015e2b:	push   esi
64015e2c:	push   DWORD PTR ds:0x64029af4
64015e32:	call   0x64012b1f
64015e37:	pop    ecx
64015e38:	call   eax
64015e3a:	pop    ecx
64015e3b:	pop    ecx
64015e3c:	cmp    BYTE PTR [esi],0x2d
64015e3f:	jne    0x64015e4c
64015e41:	or     DWORD PTR [ebp-0x14],0x100
64015e48:	inc    esi
64015e49:	mov    DWORD PTR [ebp-0x1c],esi
64015e4c:	push   esi
64015e4d:	jmp    0x64015cc4
64015e52:	mov    DWORD PTR [ebp-0x18],edx
64015e55:	mov    DWORD PTR [ebp-0x60],0x7
64015e5c:	jmp    0x64015e7f
64015e5e:	sub    eax,0x73
64015e61:	je     0x64015ba3
64015e67:	sub    eax,esi
64015e69:	je     0x64015d4e
64015e6f:	sub    eax,0x3
64015e72:	jne    0x64015fce
64015e78:	mov    DWORD PTR [ebp-0x60],0x27
64015e7f:	test   BYTE PTR [ebp-0x14],0x80
64015e83:	mov    DWORD PTR [ebp-0x28],0x10
64015e8a:	je     0x64015d55
64015e90:	mov    eax,DWORD PTR [ebp-0x60]
64015e93:	add    eax,0x51
64015e96:	mov    WORD PTR [ebp-0x3c],0x30
64015e9c:	mov    WORD PTR [ebp-0x3a],ax
64015ea0:	mov    DWORD PTR [ebp-0x30],esi
64015ea3:	jmp    0x64015d55
64015ea8:	test   WORD PTR [ebp-0x14],0x1000
64015eae:	jne    0x64015d61
64015eb4:	add    ebx,0x4
64015eb7:	test   BYTE PTR [ebp-0x14],0x20
64015ebb:	je     0x64015ed3
64015ebd:	test   BYTE PTR [ebp-0x14],0x40
64015ec1:	mov    DWORD PTR [ebp-0x24],ebx
64015ec4:	je     0x64015ecc
64015ec6:	movsx  eax,WORD PTR [ebx-0x4]
64015eca:	jmp    0x64015ed0
64015ecc:	movzx  eax,WORD PTR [ebx-0x4]
64015ed0:	cdq    
64015ed1:	jmp    0x64015ee4
64015ed3:	test   BYTE PTR [ebp-0x14],0x40
64015ed7:	mov    eax,DWORD PTR [ebx-0x4]
64015eda:	je     0x64015edf
64015edc:	cdq    
64015edd:	jmp    0x64015ee1
64015edf:	xor    edx,edx
64015ee1:	mov    DWORD PTR [ebp-0x24],ebx
64015ee4:	test   BYTE PTR [ebp-0x14],0x40
64015ee8:	je     0x64015f02
64015eea:	test   edx,edx
64015eec:	jg     0x64015f02
64015eee:	jl     0x64015ef4
64015ef0:	test   eax,eax
64015ef2:	jae    0x64015f02
64015ef4:	neg    eax
64015ef6:	adc    edx,0x0
64015ef9:	neg    edx
64015efb:	or     DWORD PTR [ebp-0x14],0x100
64015f02:	test   WORD PTR [ebp-0x14],0x9000
64015f08:	mov    ebx,edx
64015f0a:	mov    edi,eax
64015f0c:	jne    0x64015f10
64015f0e:	xor    ebx,ebx
64015f10:	cmp    DWORD PTR [ebp-0x18],0x0
64015f14:	jge    0x64015f1f
64015f16:	mov    DWORD PTR [ebp-0x18],0x1
64015f1d:	jmp    0x64015f30
64015f1f:	and    DWORD PTR [ebp-0x14],0xfffffff7
64015f23:	mov    eax,0x200
64015f28:	cmp    DWORD PTR [ebp-0x18],eax
64015f2b:	jle    0x64015f30
64015f2d:	mov    DWORD PTR [ebp-0x18],eax
64015f30:	mov    eax,edi
64015f32:	or     eax,ebx
64015f34:	jne    0x64015f39
64015f36:	and    DWORD PTR [ebp-0x30],eax
64015f39:	lea    esi,[ebp+0x1ef]
64015f3f:	mov    eax,DWORD PTR [ebp-0x18]
64015f42:	dec    DWORD PTR [ebp-0x18]
64015f45:	test   eax,eax
64015f47:	jg     0x64015f4f
64015f49:	mov    eax,edi
64015f4b:	or     eax,ebx
64015f4d:	je     0x64015f73
64015f4f:	mov    eax,DWORD PTR [ebp-0x28]
64015f52:	cdq    
64015f53:	push   edx
64015f54:	push   eax
64015f55:	push   ebx
64015f56:	push   edi
64015f57:	call   0x64016fd0
64015f5c:	add    ecx,0x30
64015f5f:	cmp    ecx,0x39
64015f62:	mov    DWORD PTR [ebp-0x7c],ebx
64015f65:	mov    edi,eax
64015f67:	mov    ebx,edx
64015f69:	jle    0x64015f6e
64015f6b:	add    ecx,DWORD PTR [ebp-0x60]
64015f6e:	mov    BYTE PTR [esi],cl
64015f70:	dec    esi
64015f71:	jmp    0x64015f3f
64015f73:	lea    eax,[ebp+0x1ef]
64015f79:	sub    eax,esi
64015f7b:	inc    esi
64015f7c:	test   WORD PTR [ebp-0x14],0x200
64015f82:	mov    DWORD PTR [ebp-0x20],eax
64015f85:	mov    DWORD PTR [ebp-0x1c],esi
64015f88:	je     0x64015fce
64015f8a:	test   eax,eax
64015f8c:	je     0x64015f95
64015f8e:	mov    ecx,esi
64015f90:	cmp    BYTE PTR [ecx],0x30
64015f93:	je     0x64015fce
64015f95:	dec    DWORD PTR [ebp-0x1c]
64015f98:	mov    ecx,DWORD PTR [ebp-0x1c]
64015f9b:	mov    BYTE PTR [ecx],0x30
64015f9e:	inc    eax
64015f9f:	jmp    0x64015fcb
64015fa1:	test   ebx,ebx
64015fa3:	jne    0x64015fad
64015fa5:	mov    eax,ds:0x640298e4
64015faa:	mov    DWORD PTR [ebp-0x1c],eax
64015fad:	mov    eax,DWORD PTR [ebp-0x1c]
64015fb0:	mov    DWORD PTR [ebp-0x34],0x1
64015fb7:	jmp    0x64015fc2
64015fb9:	dec    edi
64015fba:	cmp    WORD PTR [eax],0x0
64015fbe:	je     0x64015fc6
64015fc0:	add    eax,esi
64015fc2:	test   edi,edi
64015fc4:	jne    0x64015fb9
64015fc6:	sub    eax,DWORD PTR [ebp-0x1c]
64015fc9:	sar    eax,1
64015fcb:	mov    DWORD PTR [ebp-0x20],eax
64015fce:	cmp    DWORD PTR [ebp-0x5c],0x0
64015fd2:	jne    0x640160d7
64015fd8:	mov    eax,DWORD PTR [ebp-0x14]
64015fdb:	test   al,0x40
64015fdd:	je     0x6401600a
64015fdf:	test   ax,0x100
64015fe3:	je     0x64015fed
64015fe5:	mov    WORD PTR [ebp-0x3c],0x2d
64015feb:	jmp    0x64016003
64015fed:	test   al,0x1
64015fef:	je     0x64015ff9
64015ff1:	mov    WORD PTR [ebp-0x3c],0x2b
64015ff7:	jmp    0x64016003
64015ff9:	test   al,0x2
64015ffb:	je     0x6401600a
64015ffd:	mov    WORD PTR [ebp-0x3c],0x20
64016003:	mov    DWORD PTR [ebp-0x30],0x1
6401600a:	mov    ebx,DWORD PTR [ebp-0x38]
6401600d:	mov    esi,DWORD PTR [ebp-0x20]
64016010:	sub    ebx,esi
64016012:	sub    ebx,DWORD PTR [ebp-0x30]
64016015:	test   BYTE PTR [ebp-0x14],0xc
64016019:	jne    0x6401602c
6401601b:	push   DWORD PTR [ebp-0x48]
6401601e:	lea    eax,[ebp-0x2c]
64016021:	push   ebx
64016022:	push   0x20
64016024:	call   0x64014e95
64016029:	add    esp,0xc
6401602c:	push   DWORD PTR [ebp-0x30]
6401602f:	mov    edi,DWORD PTR [ebp-0x48]
64016032:	lea    eax,[ebp-0x2c]
64016035:	lea    ecx,[ebp-0x3c]
64016038:	call   0x64014eba
6401603d:	test   BYTE PTR [ebp-0x14],0x8
64016041:	pop    ecx
64016042:	je     0x64016059
64016044:	test   BYTE PTR [ebp-0x14],0x4
64016048:	jne    0x64016059
6401604a:	push   edi
6401604b:	push   ebx
6401604c:	push   0x30
6401604e:	lea    eax,[ebp-0x2c]
64016051:	call   0x64014e95
64016056:	add    esp,0xc
64016059:	cmp    DWORD PTR [ebp-0x34],0x0
6401605d:	jne    0x640160ad
6401605f:	test   esi,esi
64016061:	jle    0x640160ad
64016063:	mov    edi,DWORD PTR [ebp-0x1c]
64016066:	mov    DWORD PTR [ebp-0x28],esi
64016069:	dec    DWORD PTR [ebp-0x28]
6401606c:	lea    eax,[ebp-0x58]
6401606f:	push   eax
64016070:	mov    eax,DWORD PTR [ebp-0x58]
64016073:	push   DWORD PTR [eax+0xac]
64016079:	lea    eax,[ebp-0x70]
6401607c:	push   edi
6401607d:	push   eax
6401607e:	call   0x6401acbe
64016083:	add    esp,0x10
64016086:	test   eax,eax
64016088:	mov    DWORD PTR [ebp-0x7c],eax
6401608b:	jle    0x640160a7
6401608d:	push   DWORD PTR [ebp-0x70]
64016090:	mov    eax,DWORD PTR [ebp-0x48]
64016093:	lea    esi,[ebp-0x2c]
64016096:	call   0x64015819
6401609b:	add    edi,DWORD PTR [ebp-0x7c]
6401609e:	cmp    DWORD PTR [ebp-0x28],0x0
640160a2:	pop    ecx
640160a3:	jg     0x64016069
640160a5:	jmp    0x640160ba
640160a7:	or     DWORD PTR [ebp-0x2c],0xffffffff
640160ab:	jmp    0x640160ba
640160ad:	mov    ecx,DWORD PTR [ebp-0x1c]
640160b0:	push   esi
640160b1:	lea    eax,[ebp-0x2c]
640160b4:	call   0x64014eba
640160b9:	pop    ecx
640160ba:	cmp    DWORD PTR [ebp-0x2c],0x0
640160be:	jl     0x640160d7
640160c0:	test   BYTE PTR [ebp-0x14],0x4
640160c4:	je     0x640160d7
640160c6:	push   DWORD PTR [ebp-0x48]
640160c9:	lea    eax,[ebp-0x2c]
640160cc:	push   ebx
640160cd:	push   0x20
640160cf:	call   0x64014e95
640160d4:	add    esp,0xc
640160d7:	cmp    DWORD PTR [ebp-0x64],0x0
640160db:	je     0x640160ea
640160dd:	push   DWORD PTR [ebp-0x64]
640160e0:	call   0x64011ab6
640160e5:	and    DWORD PTR [ebp-0x64],0x0
640160e9:	pop    ecx
640160ea:	mov    edi,DWORD PTR [ebp-0x6c]
640160ed:	mov    ebx,DWORD PTR [ebp-0x24]
640160f0:	movzx  eax,WORD PTR [edi]
640160f3:	test   ax,ax
640160f6:	mov    DWORD PTR [ebp-0x28],eax
640160f9:	je     0x64016102
640160fb:	mov    ecx,eax
640160fd:	jmp    0x640158ff
64016102:	cmp    DWORD PTR [ebp-0x40],0x0
64016106:	je     0x64016112
64016108:	cmp    DWORD PTR [ebp-0x40],0x7
6401610c:	jne    0x6401589d
64016112:	cmp    BYTE PTR [ebp-0x4c],0x0
64016116:	je     0x6401611f
64016118:	mov    eax,DWORD PTR [ebp-0x50]
6401611b:	and    DWORD PTR [eax+0x70],0xfffffffd
6401611f:	mov    eax,DWORD PTR [ebp-0x2c]
64016122:	mov    ecx,DWORD PTR [ebp+0x3f0]
64016128:	pop    edi
64016129:	pop    esi
6401612a:	xor    ecx,ebp
6401612c:	pop    ebx
6401612d:	call   0x64010c1e
64016132:	add    ebp,0x3f4
64016138:	leave  
64016139:	ret    
6401613a:	add    bl,BYTE PTR [ebx+0x1]
6401613d:	fs push edi
6401613f:	pop    ecx
64016140:	add    DWORD PTR [esp+esi*2+0x59],esp
64016144:	add    DWORD PTR [eax+eax*8+0x59],esp
64016148:	add    DWORD PTR [edx+edi*8+0x59],esp
6401614c:	add    DWORD PTR [ebx+eax*1+0x5a],esp
64016150:	add    DWORD PTR [edx+edi*1+0x5a],esp
64016154:	add    DWORD PTR [ebx+ebx*1+0x5b],esp
64016158:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401615c:	in     al,dx
6401615d:	sub    esp,0x10
64016160:	mov    eax,ds:0x64029038
64016165:	xor    eax,ebp
64016167:	mov    DWORD PTR [ebp-0x4],eax
6401616a:	push   ebx
6401616b:	push   esi
6401616c:	mov    esi,DWORD PTR ds:0x64022158
64016172:	xor    ebx,ebx
64016174:	cmp    DWORD PTR ds:0x6402a8f8,ebx
6401617a:	push   edi
6401617b:	mov    edi,ecx
6401617d:	jne    0x640161b5
6401617f:	push   ebx
64016180:	push   ebx
64016181:	push   0x1
64016183:	push   0x6402458c
64016188:	push   0x100
6401618d:	push   ebx
6401618e:	call   esi
64016190:	test   eax,eax
64016192:	je     0x640161a0
64016194:	mov    DWORD PTR ds:0x6402a8f8,0x1
6401619e:	jmp    0x640161b5
640161a0:	call   DWORD PTR ds:0x64022044
640161a6:	cmp    eax,0x78
640161a9:	jne    0x640161b5
640161ab:	mov    DWORD PTR ds:0x6402a8f8,0x2
640161b5:	cmp    DWORD PTR [ebp+0x14],ebx
640161b8:	jle    0x640161d7
640161ba:	mov    ecx,DWORD PTR [ebp+0x14]
640161bd:	mov    eax,DWORD PTR [ebp+0x10]
640161c0:	dec    ecx
640161c1:	cmp    WORD PTR [eax],bx
640161c4:	je     0x640161cf
640161c6:	inc    eax
640161c7:	inc    eax
640161c8:	cmp    ecx,ebx
640161ca:	jne    0x640161c0
640161cc:	or     ecx,0xffffffff
640161cf:	or     eax,0xffffffff
640161d2:	sub    eax,ecx
640161d4:	add    DWORD PTR [ebp+0x14],eax
640161d7:	mov    eax,ds:0x6402a8f8
640161dc:	cmp    eax,0x1
640161df:	jne    0x640161fa
640161e1:	push   DWORD PTR [ebp+0x1c]
640161e4:	push   DWORD PTR [ebp+0x18]
640161e7:	push   DWORD PTR [ebp+0x14]
640161ea:	push   DWORD PTR [ebp+0x10]
640161ed:	push   DWORD PTR [ebp+0xc]
640161f0:	push   DWORD PTR [ebp+0x8]
640161f3:	call   esi
640161f5:	jmp    0x640163a9
640161fa:	cmp    eax,0x2
640161fd:	je     0x64016203
640161ff:	cmp    eax,ebx
64016201:	jne    0x64016255
64016203:	cmp    DWORD PTR [ebp+0x8],ebx
64016206:	mov    DWORD PTR [ebp-0xc],ebx
64016209:	jne    0x64016213
6401620b:	mov    eax,DWORD PTR [edi]
6401620d:	mov    eax,DWORD PTR [eax+0x14]
64016210:	mov    DWORD PTR [ebp+0x8],eax
64016213:	cmp    DWORD PTR [ebp+0x20],ebx
64016216:	jne    0x64016220
64016218:	mov    eax,DWORD PTR [edi]
6401621a:	mov    eax,DWORD PTR [eax+0x4]
6401621d:	mov    DWORD PTR [ebp+0x20],eax
64016220:	push   DWORD PTR [ebp+0x8]
64016223:	call   0x6401b798
64016228:	cmp    DWORD PTR [ebp+0x20],eax
6401622b:	pop    ecx
6401622c:	je     0x64016236
6401622e:	cmp    eax,0xffffffff
64016231:	je     0x64016236
64016233:	mov    DWORD PTR [ebp+0x20],eax
64016236:	mov    esi,DWORD PTR ds:0x64022024
6401623c:	push   ebx
6401623d:	push   ebx
6401623e:	push   ebx
6401623f:	push   ebx
64016240:	push   DWORD PTR [ebp+0x14]
64016243:	push   DWORD PTR [ebp+0x10]
64016246:	push   ebx
64016247:	push   DWORD PTR [ebp+0x20]
6401624a:	call   esi
6401624c:	mov    edi,eax
6401624e:	cmp    edi,ebx
64016250:	mov    DWORD PTR [ebp-0x10],edi
64016253:	jne    0x6401625c
64016255:	xor    eax,eax
64016257:	jmp    0x640163a9
6401625c:	jle    0x640162a0
6401625e:	push   0xffffffe0
64016260:	xor    edx,edx
64016262:	pop    eax
64016263:	div    edi
64016265:	cmp    eax,0x1
64016268:	jb     0x640162a0
6401626a:	lea    eax,[edi+0x8]
6401626d:	cmp    eax,0x400
64016272:	ja     0x64016287
64016274:	call   0x640113a0
64016279:	mov    eax,esp
6401627b:	cmp    eax,ebx
6401627d:	je     0x6401629b
6401627f:	mov    DWORD PTR [eax],0xcccc
64016285:	jmp    0x64016298
64016287:	push   eax
64016288:	call   0x64011b93
6401628d:	cmp    eax,ebx
6401628f:	pop    ecx
64016290:	je     0x6401629b
64016292:	mov    DWORD PTR [eax],0xdddd
64016298:	add    eax,0x8
6401629b:	mov    DWORD PTR [ebp-0x8],eax
6401629e:	jmp    0x640162a3
640162a0:	mov    DWORD PTR [ebp-0x8],ebx
640162a3:	cmp    DWORD PTR [ebp-0x8],ebx
640162a6:	je     0x64016255
640162a8:	push   ebx
640162a9:	push   ebx
640162aa:	push   edi
640162ab:	push   DWORD PTR [ebp-0x8]
640162ae:	push   DWORD PTR [ebp+0x14]
640162b1:	push   DWORD PTR [ebp+0x10]
640162b4:	push   ebx
640162b5:	push   DWORD PTR [ebp+0x20]
640162b8:	call   esi
640162ba:	test   eax,eax
640162bc:	je     0x6401639d
640162c2:	push   ebx
640162c3:	push   ebx
640162c4:	push   edi
640162c5:	push   DWORD PTR [ebp-0x8]
640162c8:	mov    edi,DWORD PTR ds:0x64022154
640162ce:	push   DWORD PTR [ebp+0xc]
640162d1:	push   DWORD PTR [ebp+0x8]
640162d4:	call   edi
640162d6:	mov    esi,eax
640162d8:	cmp    esi,ebx
640162da:	je     0x6401639d
640162e0:	jle    0x64016321
640162e2:	push   0xffffffe0
640162e4:	xor    edx,edx
640162e6:	pop    eax
640162e7:	div    esi
640162e9:	cmp    eax,0x1
640162ec:	jb     0x64016321
640162ee:	lea    eax,[esi+0x8]
640162f1:	cmp    eax,0x400
640162f6:	ja     0x6401630b
640162f8:	call   0x640113a0
640162fd:	mov    eax,esp
640162ff:	cmp    eax,ebx
64016301:	je     0x6401631f
64016303:	mov    DWORD PTR [eax],0xcccc
64016309:	jmp    0x6401631c
6401630b:	push   eax
6401630c:	call   0x64011b93
64016311:	cmp    eax,ebx
64016313:	pop    ecx
64016314:	je     0x6401631f
64016316:	mov    DWORD PTR [eax],0xdddd
6401631c:	add    eax,0x8
6401631f:	mov    ebx,eax
64016321:	test   ebx,ebx
64016323:	je     0x6401639d
64016325:	push   esi
64016326:	push   ebx
64016327:	push   DWORD PTR [ebp-0x10]
6401632a:	push   DWORD PTR [ebp-0x8]
6401632d:	push   DWORD PTR [ebp+0xc]
64016330:	push   DWORD PTR [ebp+0x8]
64016333:	call   edi
64016335:	test   eax,eax
64016337:	je     0x64016396
64016339:	test   WORD PTR [ebp+0xc],0x400
6401633f:	je     0x64016375
64016341:	mov    eax,DWORD PTR [ebp+0x1c]
64016344:	xor    edi,edi
64016346:	cmp    eax,edi
64016348:	mov    DWORD PTR [ebp-0xc],esi
6401634b:	je     0x64016396
6401634d:	cmp    eax,esi
6401634f:	jg     0x64016354
64016351:	lea    esi,[eax-0x1]
64016354:	push   esi
64016355:	push   ebx
64016356:	push   eax
64016357:	push   DWORD PTR [ebp+0x18]
6401635a:	call   0x64019ec6
6401635f:	add    esp,0x10
64016362:	test   eax,eax
64016364:	je     0x64016396
64016366:	push   edi
64016367:	push   edi
64016368:	push   edi
64016369:	push   edi
6401636a:	push   edi
6401636b:	call   0x6401065a
64016370:	add    esp,0x14
64016373:	jmp    0x64016396
64016375:	xor    eax,eax
64016377:	cmp    DWORD PTR [ebp+0x1c],eax
6401637a:	jne    0x64016380
6401637c:	push   eax
6401637d:	push   eax
6401637e:	jmp    0x64016386
64016380:	push   DWORD PTR [ebp+0x1c]
64016383:	push   DWORD PTR [ebp+0x18]
64016386:	push   esi
64016387:	push   ebx
64016388:	push   0x1
6401638a:	push   DWORD PTR [ebp+0x20]
6401638d:	call   DWORD PTR ds:0x6402203c
64016393:	mov    DWORD PTR [ebp-0xc],eax
64016396:	push   ebx
64016397:	call   0x6401112e
6401639c:	pop    ecx
6401639d:	push   DWORD PTR [ebp-0x8]
640163a0:	call   0x6401112e
640163a5:	mov    eax,DWORD PTR [ebp-0xc]
640163a8:	pop    ecx
640163a9:	lea    esp,[ebp-0x1c]
640163ac:	pop    edi
640163ad:	pop    esi
640163ae:	pop    ebx
640163af:	mov    ecx,DWORD PTR [ebp-0x4]
640163b2:	xor    ecx,ebp
640163b4:	call   0x64010c1e
640163b9:	leave  
640163ba:	ret    
640163bb:	push   ebp
640163bc:	mov    ebp,esp
640163be:	sub    esp,0x10
640163c1:	push   DWORD PTR [ebp+0x8]
640163c4:	lea    ecx,[ebp-0x10]
640163c7:	call   0x64010dc1
640163cc:	push   DWORD PTR [ebp+0x24]
640163cf:	lea    ecx,[ebp-0x10]
640163d2:	push   DWORD PTR [ebp+0x20]
640163d5:	push   DWORD PTR [ebp+0x1c]
640163d8:	push   DWORD PTR [ebp+0x18]
640163db:	push   DWORD PTR [ebp+0x14]
640163de:	push   DWORD PTR [ebp+0x10]
640163e1:	push   DWORD PTR [ebp+0xc]
640163e4:	call   0x6401615a
640163e9:	add    esp,0x1c
640163ec:	cmp    BYTE PTR [ebp-0x4],0x0
640163f0:	je     0x640163f9
640163f2:	mov    ecx,DWORD PTR [ebp-0x8]
640163f5:	and    DWORD PTR [ecx+0x70],0xfffffffd
640163f9:	leave  
640163fa:	ret    
640163fb:	xor    eax,eax
640163fd:	cmp    DWORD PTR [esp+0x8],eax
64016401:	jbe    0x64016416
64016403:	mov    ecx,DWORD PTR [esp+0x4]
64016407:	cmp    WORD PTR [ecx],0x0
6401640b:	je     0x64016416
6401640d:	inc    eax
6401640e:	inc    ecx
6401640f:	inc    ecx
64016410:	cmp    eax,DWORD PTR [esp+0x8]
64016414:	jb     0x64016407
64016416:	ret    
64016417:	push   ebp
64016418:	mov    ebp,esp
6401641a:	sub    esp,0x4
6401641d:	mov    DWORD PTR [ebp-0x4],edi
64016420:	mov    edi,DWORD PTR [ebp+0x8]
64016423:	mov    ecx,DWORD PTR [ebp+0xc]
64016426:	shr    ecx,0x7
64016429:	pxor   xmm0,xmm0
6401642d:	jmp    0x64016437
6401642f:	lea    esp,[esp+0x0]
64016436:	nop
64016437:	movdqa XMMWORD PTR [edi],xmm0
6401643b:	movdqa XMMWORD PTR [edi+0x10],xmm0
64016440:	movdqa XMMWORD PTR [edi+0x20],xmm0
64016445:	movdqa XMMWORD PTR [edi+0x30],xmm0
6401644a:	movdqa XMMWORD PTR [edi+0x40],xmm0
6401644f:	movdqa XMMWORD PTR [edi+0x50],xmm0
64016454:	movdqa XMMWORD PTR [edi+0x60],xmm0
64016459:	movdqa XMMWORD PTR [edi+0x70],xmm0
6401645e:	lea    edi,[edi+0x80]
64016464:	dec    ecx
64016465:	jne    0x64016437
64016467:	mov    edi,DWORD PTR [ebp-0x4]
6401646a:	mov    esp,ebp
6401646c:	pop    ebp
6401646d:	ret    
6401646e:	push   ebp
6401646f:	mov    ebp,esp
64016471:	sub    esp,0x10
64016474:	mov    DWORD PTR [ebp-0x4],edi
64016477:	mov    eax,DWORD PTR [ebp+0x8]
6401647a:	cdq    
6401647b:	mov    edi,eax
6401647d:	xor    edi,edx
6401647f:	sub    edi,edx
64016481:	and    edi,0xf
64016484:	xor    edi,edx
64016486:	sub    edi,edx
64016488:	test   edi,edi
6401648a:	jne    0x640164c8
6401648c:	mov    ecx,DWORD PTR [ebp+0x10]
6401648f:	mov    edx,ecx
64016491:	and    edx,0x7f
64016494:	mov    DWORD PTR [ebp-0xc],edx
64016497:	cmp    ecx,edx
64016499:	je     0x640164ad
6401649b:	sub    ecx,edx
6401649d:	push   ecx
6401649e:	push   eax
6401649f:	call   0x64016417
640164a4:	add    esp,0x8
640164a7:	mov    eax,DWORD PTR [ebp+0x8]
640164aa:	mov    edx,DWORD PTR [ebp-0xc]
640164ad:	test   edx,edx
640164af:	je     0x640164f6
640164b1:	add    eax,DWORD PTR [ebp+0x10]
640164b4:	sub    eax,edx
640164b6:	mov    DWORD PTR [ebp-0x8],eax
640164b9:	xor    eax,eax
640164bb:	mov    edi,DWORD PTR [ebp-0x8]
640164be:	mov    ecx,DWORD PTR [ebp-0xc]
640164c1:	rep stos BYTE PTR es:[edi],al
640164c3:	mov    eax,DWORD PTR [ebp+0x8]
640164c6:	jmp    0x640164f6
640164c8:	neg    edi
640164ca:	add    edi,0x10
640164cd:	mov    DWORD PTR [ebp-0x10],edi
640164d0:	xor    eax,eax
640164d2:	mov    edi,DWORD PTR [ebp+0x8]
640164d5:	mov    ecx,DWORD PTR [ebp-0x10]
640164d8:	rep stos BYTE PTR es:[edi],al
640164da:	mov    eax,DWORD PTR [ebp-0x10]
640164dd:	mov    ecx,DWORD PTR [ebp+0x8]
640164e0:	mov    edx,DWORD PTR [ebp+0x10]
640164e3:	add    ecx,eax
640164e5:	sub    edx,eax
640164e7:	push   edx
640164e8:	push   0x0
640164ea:	push   ecx
640164eb:	call   0x6401646e
640164f0:	add    esp,0xc
640164f3:	mov    eax,DWORD PTR [ebp+0x8]
640164f6:	mov    edi,DWORD PTR [ebp-0x4]
640164f9:	mov    esp,ebp
640164fb:	pop    ebp
640164fc:	ret    
640164fd:	and    DWORD PTR ds:0x6402e5a0,0x0
64016504:	call   0x6401b9e1
64016509:	mov    ds:0x6402e5a0,eax
6401650e:	xor    eax,eax
64016510:	ret    
64016511:	int3   
64016512:	int3   
64016513:	int3   
64016514:	int3   
64016515:	int3   
64016516:	int3   
64016517:	int3   
64016518:	int3   
64016519:	int3   
6401651a:	int3   
6401651b:	int3   
6401651c:	int3   
6401651d:	int3   
6401651e:	int3   
6401651f:	int3   
64016520:	push   ecx
64016521:	lea    ecx,[esp+0x4]
64016525:	sub    ecx,eax
64016527:	sbb    eax,eax
64016529:	not    eax
6401652b:	and    ecx,eax
6401652d:	mov    eax,esp
6401652f:	and    eax,0xfffff000
64016534:	cmp    ecx,eax
64016536:	jb     0x64016542
64016538:	mov    eax,ecx
6401653a:	pop    ecx
6401653b:	xchg   esp,eax
6401653c:	mov    eax,DWORD PTR [eax]
6401653e:	mov    DWORD PTR [esp],eax
64016541:	ret    
64016542:	sub    eax,0x1000
64016547:	test   DWORD PTR [eax],eax
64016549:	jmp    0x64016534
6401654b:	push   0x54
6401654d:	push   0x64026bc0
64016552:	call   0x64011fc8
64016557:	xor    edi,edi
64016559:	mov    DWORD PTR [ebp-0x4],edi
6401655c:	lea    eax,[ebp-0x64]
6401655f:	push   eax
64016560:	call   DWORD PTR ds:0x64022168
64016566:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401656d:	push   0x40
6401656f:	push   0x20
64016571:	pop    esi
64016572:	push   esi
64016573:	call   0x64013f40
64016578:	pop    ecx
64016579:	pop    ecx
6401657a:	cmp    eax,edi
6401657c:	je     0x64016796
64016582:	mov    ds:0x6402e4a0,eax
64016587:	mov    DWORD PTR ds:0x6402e480,esi
6401658d:	lea    ecx,[eax+0x800]
64016593:	jmp    0x640165c5
64016595:	mov    BYTE PTR [eax+0x4],0x0
64016599:	or     DWORD PTR [eax],0xffffffff
6401659c:	mov    BYTE PTR [eax+0x5],0xa
640165a0:	mov    DWORD PTR [eax+0x8],edi
640165a3:	mov    BYTE PTR [eax+0x24],0x0
640165a7:	mov    BYTE PTR [eax+0x25],0xa
640165ab:	mov    BYTE PTR [eax+0x26],0xa
640165af:	mov    DWORD PTR [eax+0x38],edi
640165b2:	mov    BYTE PTR [eax+0x34],0x0
640165b6:	add    eax,0x40
640165b9:	mov    ecx,DWORD PTR ds:0x6402e4a0
640165bf:	add    ecx,0x800
640165c5:	cmp    eax,ecx
640165c7:	jb     0x64016595
640165c9:	cmp    WORD PTR [ebp-0x32],di
640165cd:	je     0x640166dd
640165d3:	mov    eax,DWORD PTR [ebp-0x30]
640165d6:	cmp    eax,edi
640165d8:	je     0x640166dd
640165de:	mov    edi,DWORD PTR [eax]
640165e0:	lea    ebx,[eax+0x4]
640165e3:	lea    eax,[ebx+edi*1]
640165e6:	mov    DWORD PTR [ebp-0x1c],eax
640165e9:	mov    esi,0x800
640165ee:	cmp    edi,esi
640165f0:	jl     0x640165f4
640165f2:	mov    edi,esi
640165f4:	mov    DWORD PTR [ebp-0x20],0x1
640165fb:	jmp    0x64016658
640165fd:	push   0x40
640165ff:	push   0x20
64016601:	call   0x64013f40
64016606:	pop    ecx
64016607:	pop    ecx
64016608:	test   eax,eax
6401660a:	je     0x64016662
6401660c:	mov    ecx,DWORD PTR [ebp-0x20]
6401660f:	lea    ecx,[ecx*4+0x6402e4a0]
64016616:	mov    DWORD PTR [ecx],eax
64016618:	add    DWORD PTR ds:0x6402e480,0x20
6401661f:	lea    edx,[eax+0x800]
64016625:	jmp    0x64016651
64016627:	mov    BYTE PTR [eax+0x4],0x0
6401662b:	or     DWORD PTR [eax],0xffffffff
6401662e:	mov    BYTE PTR [eax+0x5],0xa
64016632:	and    DWORD PTR [eax+0x8],0x0
64016636:	and    BYTE PTR [eax+0x24],0x80
6401663a:	mov    BYTE PTR [eax+0x25],0xa
6401663e:	mov    BYTE PTR [eax+0x26],0xa
64016642:	and    DWORD PTR [eax+0x38],0x0
64016646:	mov    BYTE PTR [eax+0x34],0x0
6401664a:	add    eax,0x40
6401664d:	mov    edx,DWORD PTR [ecx]
6401664f:	add    edx,esi
64016651:	cmp    eax,edx
64016653:	jb     0x64016627
64016655:	inc    DWORD PTR [ebp-0x20]
64016658:	cmp    DWORD PTR ds:0x6402e480,edi
6401665e:	jl     0x640165fd
64016660:	jmp    0x64016668
64016662:	mov    edi,DWORD PTR ds:0x6402e480
64016668:	and    DWORD PTR [ebp-0x20],0x0
6401666c:	test   edi,edi
6401666e:	jle    0x640166dd
64016670:	mov    eax,DWORD PTR [ebp-0x1c]
64016673:	mov    ecx,DWORD PTR [eax]
64016675:	cmp    ecx,0xffffffff
64016678:	je     0x640166d0
6401667a:	cmp    ecx,0xfffffffe
6401667d:	je     0x640166d0
6401667f:	mov    al,BYTE PTR [ebx]
64016681:	test   al,0x1
64016683:	je     0x640166d0
64016685:	test   al,0x8
64016687:	jne    0x64016694
64016689:	push   ecx
6401668a:	call   DWORD PTR ds:0x64022164
64016690:	test   eax,eax
64016692:	je     0x640166d0
64016694:	mov    esi,DWORD PTR [ebp-0x20]
64016697:	mov    eax,esi
64016699:	sar    eax,0x5
6401669c:	and    esi,0x1f
6401669f:	shl    esi,0x6
640166a2:	add    esi,DWORD PTR [eax*4+0x6402e4a0]
640166a9:	mov    eax,DWORD PTR [ebp-0x1c]
640166ac:	mov    eax,DWORD PTR [eax]
640166ae:	mov    DWORD PTR [esi],eax
640166b0:	mov    al,BYTE PTR [ebx]
640166b2:	mov    BYTE PTR [esi+0x4],al
640166b5:	push   0xfa0
640166ba:	lea    eax,[esi+0xc]
640166bd:	push   eax
640166be:	call   0x640198f8
640166c3:	pop    ecx
640166c4:	pop    ecx
640166c5:	test   eax,eax
640166c7:	je     0x64016796
640166cd:	inc    DWORD PTR [esi+0x8]
640166d0:	inc    DWORD PTR [ebp-0x20]
640166d3:	inc    ebx
640166d4:	add    DWORD PTR [ebp-0x1c],0x4
640166d8:	cmp    DWORD PTR [ebp-0x20],edi
640166db:	jl     0x64016670
640166dd:	xor    ebx,ebx
640166df:	mov    esi,ebx
640166e1:	shl    esi,0x6
640166e4:	add    esi,DWORD PTR ds:0x6402e4a0
640166ea:	mov    eax,DWORD PTR [esi]
640166ec:	cmp    eax,0xffffffff
640166ef:	je     0x640166fc
640166f1:	cmp    eax,0xfffffffe
640166f4:	je     0x640166fc
640166f6:	or     BYTE PTR [esi+0x4],0x80
640166fa:	jmp    0x6401676e
640166fc:	mov    BYTE PTR [esi+0x4],0x81
64016700:	test   ebx,ebx
64016702:	jne    0x64016709
64016704:	push   0xfffffff6
64016706:	pop    eax
64016707:	jmp    0x64016713
64016709:	mov    eax,ebx
6401670b:	dec    eax
6401670c:	neg    eax
6401670e:	sbb    eax,eax
64016710:	add    eax,0xfffffff5
64016713:	push   eax
64016714:	call   DWORD PTR ds:0x64022160
6401671a:	mov    edi,eax
6401671c:	cmp    edi,0xffffffff
6401671f:	je     0x64016764
64016721:	test   edi,edi
64016723:	je     0x64016764
64016725:	push   edi
64016726:	call   DWORD PTR ds:0x64022164
6401672c:	test   eax,eax
6401672e:	je     0x64016764
64016730:	mov    DWORD PTR [esi],edi
64016732:	and    eax,0xff
64016737:	cmp    eax,0x2
6401673a:	jne    0x64016742
6401673c:	or     BYTE PTR [esi+0x4],0x40
64016740:	jmp    0x6401674b
64016742:	cmp    eax,0x3
64016745:	jne    0x6401674b
64016747:	or     BYTE PTR [esi+0x4],0x8
6401674b:	push   0xfa0
64016750:	lea    eax,[esi+0xc]
64016753:	push   eax
64016754:	call   0x640198f8
64016759:	pop    ecx
6401675a:	pop    ecx
6401675b:	test   eax,eax
6401675d:	je     0x64016796
6401675f:	inc    DWORD PTR [esi+0x8]
64016762:	jmp    0x6401676e
64016764:	or     BYTE PTR [esi+0x4],0x40
64016768:	mov    DWORD PTR [esi],0xfffffffe
6401676e:	inc    ebx
6401676f:	cmp    ebx,0x3
64016772:	jl     0x640166df
64016778:	push   DWORD PTR ds:0x6402e480
6401677e:	call   DWORD PTR ds:0x6402215c
64016784:	xor    eax,eax
64016786:	jmp    0x64016799
64016788:	xor    eax,eax
6401678a:	inc    eax
6401678b:	ret    
6401678c:	mov    esp,DWORD PTR [ebp-0x18]
6401678f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016796:	or     eax,0xffffffff
64016799:	call   0x6401200d
6401679e:	ret    
6401679f:	push   esi
640167a0:	push   edi
640167a1:	mov    esi,0x6402e4a0
640167a6:	mov    edi,DWORD PTR [esi]
640167a8:	test   edi,edi
640167aa:	je     0x640167dd
640167ac:	lea    eax,[edi+0x800]
640167b2:	jmp    0x640167ce
640167b4:	cmp    DWORD PTR [edi+0x8],0x0
640167b8:	je     0x640167c4
640167ba:	lea    eax,[edi+0xc]
640167bd:	push   eax
640167be:	call   DWORD PTR ds:0x640220a0
640167c4:	mov    eax,DWORD PTR [esi]
640167c6:	add    edi,0x40
640167c9:	add    eax,0x800
640167ce:	cmp    edi,eax
640167d0:	jb     0x640167b4
640167d2:	push   DWORD PTR [esi]
640167d4:	call   0x64011ab6
640167d9:	and    DWORD PTR [esi],0x0
640167dc:	pop    ecx
640167dd:	add    esi,0x4
640167e0:	cmp    esi,0x6402e5a0
640167e6:	jl     0x640167a6
640167e8:	pop    edi
640167e9:	pop    esi
640167ea:	ret    
640167eb:	push   ebx
640167ec:	xor    ebx,ebx
640167ee:	cmp    DWORD PTR ds:0x6402e5b4,ebx
640167f4:	push   esi
640167f5:	push   edi
640167f6:	jne    0x640167fd
640167f8:	call   0x64014a11
640167fd:	mov    esi,DWORD PTR ds:0x6402a514
64016803:	xor    edi,edi
64016805:	cmp    esi,ebx
64016807:	jne    0x64016821
64016809:	or     eax,0xffffffff
6401680c:	jmp    0x640168ac
64016811:	cmp    al,0x3d
64016813:	je     0x64016816
64016815:	inc    edi
64016816:	push   esi
64016817:	call   0x640123f0
6401681c:	pop    ecx
6401681d:	lea    esi,[esi+eax*1+0x1]
64016821:	mov    al,BYTE PTR [esi]
64016823:	cmp    al,bl
64016825:	jne    0x64016811
64016827:	push   0x4
64016829:	inc    edi
6401682a:	push   edi
6401682b:	call   0x64013f40
64016830:	mov    edi,eax
64016832:	cmp    edi,ebx
64016834:	pop    ecx
64016835:	pop    ecx
64016836:	mov    DWORD PTR ds:0x6402a894,edi
6401683c:	je     0x64016809
6401683e:	mov    esi,DWORD PTR ds:0x6402a514
64016844:	push   ebp
64016845:	jmp    0x64016887
64016847:	push   esi
64016848:	call   0x640123f0
6401684d:	mov    ebp,eax
6401684f:	inc    ebp
64016850:	cmp    BYTE PTR [esi],0x3d
64016853:	pop    ecx
64016854:	je     0x64016885
64016856:	push   0x1
64016858:	push   ebp
64016859:	call   0x64013f40
6401685e:	cmp    eax,ebx
64016860:	pop    ecx
64016861:	pop    ecx
64016862:	mov    DWORD PTR [edi],eax
64016864:	je     0x640168b0
64016866:	push   esi
64016867:	push   ebp
64016868:	push   eax
64016869:	call   0x640125e8
6401686e:	add    esp,0xc
64016871:	test   eax,eax
64016873:	je     0x64016882
64016875:	push   ebx
64016876:	push   ebx
64016877:	push   ebx
64016878:	push   ebx
64016879:	push   ebx
6401687a:	call   0x6401065a
6401687f:	add    esp,0x14
64016882:	add    edi,0x4
64016885:	add    esi,ebp
64016887:	cmp    BYTE PTR [esi],bl
64016889:	jne    0x64016847
6401688b:	push   DWORD PTR ds:0x6402a514
64016891:	call   0x64011ab6
64016896:	mov    DWORD PTR ds:0x6402a514,ebx
6401689c:	mov    DWORD PTR [edi],ebx
6401689e:	mov    DWORD PTR ds:0x6402e5a8,0x1
640168a8:	xor    eax,eax
640168aa:	pop    ecx
640168ab:	pop    ebp
640168ac:	pop    edi
640168ad:	pop    esi
640168ae:	pop    ebx
640168af:	ret    
640168b0:	push   DWORD PTR ds:0x6402a894
640168b6:	call   0x64011ab6
640168bb:	mov    DWORD PTR ds:0x6402a894,ebx
640168c1:	or     eax,0xffffffff
640168c4:	jmp    0x640168aa
640168c6:	push   ebp
640168c7:	mov    ebp,esp
640168c9:	push   ecx
640168ca:	mov    ecx,DWORD PTR [ebp+0x10]
640168cd:	push   ebx
640168ce:	xor    eax,eax
640168d0:	cmp    DWORD PTR [ebp+0x8],eax
640168d3:	push   esi
640168d4:	mov    DWORD PTR [edi],eax
640168d6:	mov    esi,edx
640168d8:	mov    edx,DWORD PTR [ebp+0xc]
640168db:	mov    DWORD PTR [ecx],0x1
640168e1:	je     0x640168ec
640168e3:	mov    ebx,DWORD PTR [ebp+0x8]
640168e6:	add    DWORD PTR [ebp+0x8],0x4
640168ea:	mov    DWORD PTR [ebx],edx
640168ec:	mov    DWORD PTR [ebp-0x4],eax
640168ef:	cmp    BYTE PTR [esi],0x22
640168f2:	jne    0x64016904
640168f4:	xor    eax,eax
640168f6:	cmp    DWORD PTR [ebp-0x4],eax
640168f9:	mov    bl,0x22
640168fb:	sete   al
640168fe:	inc    esi
640168ff:	mov    DWORD PTR [ebp-0x4],eax
64016902:	jmp    0x64016940
64016904:	inc    DWORD PTR [edi]
64016906:	test   edx,edx
64016908:	je     0x64016912
6401690a:	mov    al,BYTE PTR [esi]
6401690c:	mov    BYTE PTR [edx],al
6401690e:	inc    edx
6401690f:	mov    DWORD PTR [ebp+0xc],edx
64016912:	mov    bl,BYTE PTR [esi]
64016914:	movzx  eax,bl
64016917:	push   eax
64016918:	inc    esi
64016919:	call   0x6401ba9f
6401691e:	test   eax,eax
64016920:	pop    ecx
64016921:	je     0x64016936
64016923:	inc    DWORD PTR [edi]
64016925:	cmp    DWORD PTR [ebp+0xc],0x0
64016929:	je     0x64016935
6401692b:	mov    ecx,DWORD PTR [ebp+0xc]
6401692e:	mov    al,BYTE PTR [esi]
64016930:	inc    DWORD PTR [ebp+0xc]
64016933:	mov    BYTE PTR [ecx],al
64016935:	inc    esi
64016936:	test   bl,bl
64016938:	mov    edx,DWORD PTR [ebp+0xc]
6401693b:	mov    ecx,DWORD PTR [ebp+0x10]
6401693e:	je     0x64016972
64016940:	cmp    DWORD PTR [ebp-0x4],0x0
64016944:	jne    0x640168ef
64016946:	cmp    bl,0x20
64016949:	je     0x64016950
6401694b:	cmp    bl,0x9
6401694e:	jne    0x640168ef
64016950:	test   edx,edx
64016952:	je     0x64016958
64016954:	mov    BYTE PTR [edx-0x1],0x0
64016958:	and    DWORD PTR [ebp-0x4],0x0
6401695c:	cmp    BYTE PTR [esi],0x0
6401695f:	je     0x64016a4e
64016965:	mov    al,BYTE PTR [esi]
64016967:	cmp    al,0x20
64016969:	je     0x6401696f
6401696b:	cmp    al,0x9
6401696d:	jne    0x64016975
6401696f:	inc    esi
64016970:	jmp    0x64016965
64016972:	dec    esi
64016973:	jmp    0x64016958
64016975:	cmp    BYTE PTR [esi],0x0
64016978:	je     0x64016a4e
6401697e:	cmp    DWORD PTR [ebp+0x8],0x0
64016982:	je     0x6401698d
64016984:	mov    eax,DWORD PTR [ebp+0x8]
64016987:	add    DWORD PTR [ebp+0x8],0x4
6401698b:	mov    DWORD PTR [eax],edx
6401698d:	inc    DWORD PTR [ecx]
6401698f:	xor    ebx,ebx
64016991:	inc    ebx
64016992:	xor    ecx,ecx
64016994:	jmp    0x64016998
64016996:	inc    esi
64016997:	inc    ecx
64016998:	cmp    BYTE PTR [esi],0x5c
6401699b:	je     0x64016996
6401699d:	cmp    BYTE PTR [esi],0x22
640169a0:	jne    0x640169c8
640169a2:	test   cl,0x1
640169a5:	jne    0x640169c6
640169a7:	cmp    DWORD PTR [ebp-0x4],0x0
640169ab:	je     0x640169b9
640169ad:	lea    eax,[esi+0x1]
640169b0:	cmp    BYTE PTR [eax],0x22
640169b3:	jne    0x640169b9
640169b5:	mov    esi,eax
640169b7:	jmp    0x640169c6
640169b9:	xor    eax,eax
640169bb:	xor    ebx,ebx
640169bd:	cmp    DWORD PTR [ebp-0x4],eax
640169c0:	sete   al
640169c3:	mov    DWORD PTR [ebp-0x4],eax
640169c6:	shr    ecx,1
640169c8:	test   ecx,ecx
640169ca:	je     0x640169de
640169cc:	dec    ecx
640169cd:	test   edx,edx
640169cf:	je     0x640169d5
640169d1:	mov    BYTE PTR [edx],0x5c
640169d4:	inc    edx
640169d5:	inc    DWORD PTR [edi]
640169d7:	test   ecx,ecx
640169d9:	jne    0x640169cc
640169db:	mov    DWORD PTR [ebp+0xc],edx
640169de:	mov    al,BYTE PTR [esi]
640169e0:	test   al,al
640169e2:	je     0x64016a39
640169e4:	cmp    DWORD PTR [ebp-0x4],0x0
640169e8:	jne    0x640169f2
640169ea:	cmp    al,0x20
640169ec:	je     0x64016a39
640169ee:	cmp    al,0x9
640169f0:	je     0x64016a39
640169f2:	test   ebx,ebx
640169f4:	je     0x64016a33
640169f6:	test   edx,edx
640169f8:	movsx  eax,al
640169fb:	push   eax
640169fc:	je     0x64016a21
640169fe:	call   0x6401ba9f
64016a03:	test   eax,eax
64016a05:	pop    ecx
64016a06:	je     0x64016a15
64016a08:	mov    al,BYTE PTR [esi]
64016a0a:	mov    ecx,DWORD PTR [ebp+0xc]
64016a0d:	inc    DWORD PTR [ebp+0xc]
64016a10:	mov    BYTE PTR [ecx],al
64016a12:	inc    esi
64016a13:	inc    DWORD PTR [edi]
64016a15:	mov    ecx,DWORD PTR [ebp+0xc]
64016a18:	mov    al,BYTE PTR [esi]
64016a1a:	inc    DWORD PTR [ebp+0xc]
64016a1d:	mov    BYTE PTR [ecx],al
64016a1f:	jmp    0x64016a2e
64016a21:	call   0x6401ba9f
64016a26:	test   eax,eax
64016a28:	pop    ecx
64016a29:	je     0x64016a2e
64016a2b:	inc    esi
64016a2c:	inc    DWORD PTR [edi]
64016a2e:	inc    DWORD PTR [edi]
64016a30:	mov    edx,DWORD PTR [ebp+0xc]
64016a33:	inc    esi
64016a34:	jmp    0x6401698f
64016a39:	test   edx,edx
64016a3b:	je     0x64016a44
64016a3d:	mov    BYTE PTR [edx],0x0
64016a40:	inc    edx
64016a41:	mov    DWORD PTR [ebp+0xc],edx
64016a44:	inc    DWORD PTR [edi]
64016a46:	mov    ecx,DWORD PTR [ebp+0x10]
64016a49:	jmp    0x6401695c
64016a4e:	mov    eax,DWORD PTR [ebp+0x8]
64016a51:	test   eax,eax
64016a53:	pop    esi
64016a54:	pop    ebx
64016a55:	je     0x64016a5a
64016a57:	and    DWORD PTR [eax],0x0
64016a5a:	inc    DWORD PTR [ecx]
64016a5c:	leave  
64016a5d:	ret    
64016a5e:	push   ebp
64016a5f:	mov    ebp,esp
64016a61:	sub    esp,0xc
64016a64:	push   ebx
64016a65:	xor    ebx,ebx
64016a67:	cmp    DWORD PTR ds:0x6402e5b4,ebx
64016a6d:	push   esi
64016a6e:	push   edi
64016a6f:	jne    0x64016a76
64016a71:	call   0x64014a11
64016a76:	push   0x104
64016a7b:	mov    esi,0x6402a900
64016a80:	push   esi
64016a81:	push   ebx
64016a82:	mov    BYTE PTR ds:0x6402aa04,bl
64016a88:	call   DWORD PTR ds:0x6402216c
64016a8e:	mov    eax,ds:0x6402e5c0
64016a93:	cmp    eax,ebx
64016a95:	mov    DWORD PTR ds:0x6402a8a4,esi
64016a9b:	je     0x64016aa4
64016a9d:	cmp    BYTE PTR [eax],bl
64016a9f:	mov    DWORD PTR [ebp-0x4],eax
64016aa2:	jne    0x64016aa7
64016aa4:	mov    DWORD PTR [ebp-0x4],esi
64016aa7:	mov    edx,DWORD PTR [ebp-0x4]
64016aaa:	lea    eax,[ebp-0x8]
64016aad:	push   eax
64016aae:	push   ebx
64016aaf:	push   ebx
64016ab0:	lea    edi,[ebp-0xc]
64016ab3:	call   0x640168c6
64016ab8:	mov    eax,DWORD PTR [ebp-0x8]
64016abb:	add    esp,0xc
64016abe:	cmp    eax,0x3fffffff
64016ac3:	jae    0x64016b0f
64016ac5:	mov    ecx,DWORD PTR [ebp-0xc]
64016ac8:	cmp    ecx,0xffffffff
64016acb:	jae    0x64016b0f
64016acd:	mov    edi,eax
64016acf:	shl    edi,0x2
64016ad2:	lea    eax,[edi+ecx*1]
64016ad5:	cmp    eax,ecx
64016ad7:	jb     0x64016b0f
64016ad9:	push   eax
64016ada:	call   0x64013f00
64016adf:	mov    esi,eax
64016ae1:	cmp    esi,ebx
64016ae3:	pop    ecx
64016ae4:	je     0x64016b0f
64016ae6:	mov    edx,DWORD PTR [ebp-0x4]
64016ae9:	lea    eax,[ebp-0x8]
64016aec:	push   eax
64016aed:	add    edi,esi
64016aef:	push   edi
64016af0:	push   esi
64016af1:	lea    edi,[ebp-0xc]
64016af4:	call   0x640168c6
64016af9:	mov    eax,DWORD PTR [ebp-0x8]
64016afc:	add    esp,0xc
64016aff:	dec    eax
64016b00:	mov    ds:0x6402a888,eax
64016b05:	mov    DWORD PTR ds:0x6402a88c,esi
64016b0b:	xor    eax,eax
64016b0d:	jmp    0x64016b12
64016b0f:	or     eax,0xffffffff
64016b12:	pop    edi
64016b13:	pop    esi
64016b14:	pop    ebx
64016b15:	leave  
64016b16:	ret    
64016b17:	push   ecx
64016b18:	push   ecx
64016b19:	mov    eax,ds:0x6402aa08
64016b1e:	push   ebx
64016b1f:	push   ebp
64016b20:	push   esi
64016b21:	push   edi
64016b22:	mov    edi,DWORD PTR ds:0x64022080
64016b28:	xor    ebx,ebx
64016b2a:	xor    esi,esi
64016b2c:	cmp    eax,ebx
64016b2e:	push   0x2
64016b30:	pop    ebp
64016b31:	jne    0x64016b60
64016b33:	call   edi
64016b35:	mov    esi,eax
64016b37:	cmp    esi,ebx
64016b39:	je     0x64016b47
64016b3b:	mov    DWORD PTR ds:0x6402aa08,0x1
64016b45:	jmp    0x64016b69
64016b47:	call   DWORD PTR ds:0x64022044
64016b4d:	cmp    eax,0x78
64016b50:	jne    0x64016b5b
64016b52:	mov    eax,ebp
64016b54:	mov    ds:0x6402aa08,eax
64016b59:	jmp    0x64016b60
64016b5b:	mov    eax,ds:0x6402aa08
64016b60:	cmp    eax,0x1
64016b63:	jne    0x64016bed
64016b69:	cmp    esi,ebx
64016b6b:	jne    0x64016b7c
64016b6d:	call   edi
64016b6f:	mov    esi,eax
64016b71:	cmp    esi,ebx
64016b73:	jne    0x64016b7c
64016b75:	xor    eax,eax
64016b77:	jmp    0x64016c45
64016b7c:	cmp    WORD PTR [esi],bx
64016b7f:	mov    eax,esi
64016b81:	je     0x64016b91
64016b83:	add    eax,ebp
64016b85:	cmp    WORD PTR [eax],bx
64016b88:	jne    0x64016b83
64016b8a:	add    eax,ebp
64016b8c:	cmp    WORD PTR [eax],bx
64016b8f:	jne    0x64016b83
64016b91:	mov    edi,DWORD PTR ds:0x64022024
64016b97:	push   ebx
64016b98:	push   ebx
64016b99:	push   ebx
64016b9a:	sub    eax,esi
64016b9c:	push   ebx
64016b9d:	sar    eax,1
64016b9f:	inc    eax
64016ba0:	push   eax
64016ba1:	push   esi
64016ba2:	push   ebx
64016ba3:	push   ebx
64016ba4:	mov    DWORD PTR [esp+0x34],eax
64016ba8:	call   edi
64016baa:	mov    ebp,eax
64016bac:	cmp    ebp,ebx
64016bae:	je     0x64016be2
64016bb0:	push   ebp
64016bb1:	call   0x64013f00
64016bb6:	cmp    eax,ebx
64016bb8:	pop    ecx
64016bb9:	mov    DWORD PTR [esp+0x10],eax
64016bbd:	je     0x64016be2
64016bbf:	push   ebx
64016bc0:	push   ebx
64016bc1:	push   ebp
64016bc2:	push   eax
64016bc3:	push   DWORD PTR [esp+0x24]
64016bc7:	push   esi
64016bc8:	push   ebx
64016bc9:	push   ebx
64016bca:	call   edi
64016bcc:	test   eax,eax
64016bce:	jne    0x64016bde
64016bd0:	push   DWORD PTR [esp+0x10]
64016bd4:	call   0x64011ab6
64016bd9:	pop    ecx
64016bda:	mov    DWORD PTR [esp+0x10],ebx
64016bde:	mov    ebx,DWORD PTR [esp+0x10]
64016be2:	push   esi
64016be3:	call   DWORD PTR ds:0x64022178
64016be9:	mov    eax,ebx
64016beb:	jmp    0x64016c45
64016bed:	cmp    eax,ebp
64016bef:	je     0x64016bf5
64016bf1:	cmp    eax,ebx
64016bf3:	jne    0x64016b75
64016bf5:	call   DWORD PTR ds:0x64022174
64016bfb:	mov    esi,eax
64016bfd:	cmp    esi,ebx
64016bff:	je     0x64016b75
64016c05:	cmp    BYTE PTR [esi],bl
64016c07:	je     0x64016c13
64016c09:	inc    eax
64016c0a:	cmp    BYTE PTR [eax],bl
64016c0c:	jne    0x64016c09
64016c0e:	inc    eax
64016c0f:	cmp    BYTE PTR [eax],bl
64016c11:	jne    0x64016c09
64016c13:	sub    eax,esi
64016c15:	inc    eax
64016c16:	mov    ebp,eax
64016c18:	push   ebp
64016c19:	call   0x64013f00
64016c1e:	mov    edi,eax
64016c20:	cmp    edi,ebx
64016c22:	pop    ecx
64016c23:	jne    0x64016c31
64016c25:	push   esi
64016c26:	call   DWORD PTR ds:0x64022170
64016c2c:	jmp    0x64016b75
64016c31:	push   ebp
64016c32:	push   esi
64016c33:	push   edi
64016c34:	call   0x64012650
64016c39:	add    esp,0xc
64016c3c:	push   esi
64016c3d:	call   DWORD PTR ds:0x64022170
64016c43:	mov    eax,edi
64016c45:	pop    edi
64016c46:	pop    esi
64016c47:	pop    ebp
64016c48:	pop    ebx
64016c49:	pop    ecx
64016c4a:	pop    ecx
64016c4b:	ret    
64016c4c:	push   esi
64016c4d:	push   edi
64016c4e:	mov    eax,0x640264b8
64016c53:	mov    edi,0x640264b8
64016c58:	cmp    eax,edi
64016c5a:	mov    esi,eax
64016c5c:	jae    0x64016c6d
64016c5e:	mov    eax,DWORD PTR [esi]
64016c60:	test   eax,eax
64016c62:	je     0x64016c66
64016c64:	call   eax
64016c66:	add    esi,0x4
64016c69:	cmp    esi,edi
64016c6b:	jb     0x64016c5e
64016c6d:	pop    edi
64016c6e:	pop    esi
64016c6f:	ret    
64016c70:	push   esi
64016c71:	push   edi
64016c72:	mov    eax,0x640264c0
64016c77:	mov    edi,0x640264c0
64016c7c:	cmp    eax,edi
64016c7e:	mov    esi,eax
64016c80:	jae    0x64016c91
64016c82:	mov    eax,DWORD PTR [esi]
64016c84:	test   eax,eax
64016c86:	je     0x64016c8a
64016c88:	call   eax
64016c8a:	add    esi,0x4
64016c8d:	cmp    esi,edi
64016c8f:	jb     0x64016c82
64016c91:	pop    edi
64016c92:	pop    esi
64016c93:	ret    
64016c94:	push   ebp
64016c95:	mov    ebp,esp
64016c97:	push   ecx
64016c98:	push   ecx
64016c99:	push   esi
64016c9a:	lea    eax,[ebp-0x4]
64016c9d:	xor    esi,esi
64016c9f:	push   eax
64016ca0:	mov    DWORD PTR [ebp-0x4],esi
64016ca3:	mov    DWORD PTR [ebp-0x8],esi
64016ca6:	call   0x6401411f
64016cab:	test   eax,eax
64016cad:	pop    ecx
64016cae:	je     0x64016cbd
64016cb0:	push   esi
64016cb1:	push   esi
64016cb2:	push   esi
64016cb3:	push   esi
64016cb4:	push   esi
64016cb5:	call   0x6401065a
64016cba:	add    esp,0x14
64016cbd:	lea    eax,[ebp-0x8]
64016cc0:	push   eax
64016cc1:	call   0x64014156
64016cc6:	test   eax,eax
64016cc8:	pop    ecx
64016cc9:	je     0x64016cd8
64016ccb:	push   esi
64016ccc:	push   esi
64016ccd:	push   esi
64016cce:	push   esi
64016ccf:	push   esi
64016cd0:	call   0x6401065a
64016cd5:	add    esp,0x14
64016cd8:	cmp    DWORD PTR [ebp-0x4],0x2
64016cdc:	pop    esi
64016cdd:	jne    0x64016cea
64016cdf:	cmp    DWORD PTR [ebp-0x8],0x5
64016ce3:	jb     0x64016cea
64016ce5:	xor    eax,eax
64016ce7:	inc    eax
64016ce8:	leave  
64016ce9:	ret    
64016cea:	push   0x3
64016cec:	pop    eax
64016ced:	leave  
64016cee:	ret    
64016cef:	xor    eax,eax
64016cf1:	cmp    DWORD PTR [esp+0x4],eax
64016cf5:	push   0x0
64016cf7:	sete   al
64016cfa:	push   0x1000
64016cff:	push   eax
64016d00:	call   DWORD PTR ds:0x6402217c
64016d06:	test   eax,eax
64016d08:	mov    ds:0x6402aa0c,eax
64016d0d:	jne    0x64016d12
64016d0f:	xor    eax,eax
64016d11:	ret    
64016d12:	call   0x64016c94
64016d17:	cmp    eax,0x3
64016d1a:	mov    ds:0x6402e47c,eax
64016d1f:	jne    0x64016d45
64016d21:	push   0x3f8
64016d26:	call   0x64018270
64016d2b:	test   eax,eax
64016d2d:	pop    ecx
64016d2e:	jne    0x64016d45
64016d30:	push   DWORD PTR ds:0x6402aa0c
64016d36:	call   DWORD PTR ds:0x640220fc
64016d3c:	and    DWORD PTR ds:0x6402aa0c,0x0
64016d43:	jmp    0x64016d0f
64016d45:	xor    eax,eax
64016d47:	inc    eax
64016d48:	ret    
64016d49:	push   ebp
64016d4a:	xor    ebp,ebp
64016d4c:	cmp    DWORD PTR ds:0x6402e47c,0x3
64016d53:	jne    0x64016da9
64016d55:	push   ebx
64016d56:	mov    ebx,DWORD PTR ds:0x64022104
64016d5c:	push   edi
64016d5d:	xor    edi,edi
64016d5f:	cmp    DWORD PTR ds:0x6402e464,ebp
64016d65:	jle    0x64016d98
64016d67:	push   esi
64016d68:	mov    esi,DWORD PTR ds:0x6402e468
64016d6e:	add    esi,0x10
64016d71:	push   0x8000
64016d76:	push   ebp
64016d77:	push   DWORD PTR [esi-0x4]
64016d7a:	call   DWORD PTR ds:0x64022180
64016d80:	push   DWORD PTR [esi]
64016d82:	push   ebp
64016d83:	push   DWORD PTR ds:0x6402aa0c
64016d89:	call   ebx
64016d8b:	add    esi,0x14
64016d8e:	inc    edi
64016d8f:	cmp    edi,DWORD PTR ds:0x6402e464
64016d95:	jl     0x64016d71
64016d97:	pop    esi
64016d98:	push   DWORD PTR ds:0x6402e468
64016d9e:	push   ebp
64016d9f:	push   DWORD PTR ds:0x6402aa0c
64016da5:	call   ebx
64016da7:	pop    edi
64016da8:	pop    ebx
64016da9:	push   DWORD PTR ds:0x6402aa0c
64016daf:	call   DWORD PTR ds:0x640220fc
64016db5:	mov    DWORD PTR ds:0x6402aa0c,ebp
64016dbb:	pop    ebp
64016dbc:	ret    
64016dbd:	ret    
64016dbe:	push   ebp
64016dbf:	mov    ebp,esp
64016dc1:	push   ecx
64016dc2:	push   ecx
64016dc3:	push   esi
64016dc4:	call   0x64012cc4
64016dc9:	mov    esi,eax
64016dcb:	test   esi,esi
64016dcd:	je     0x64016f19
64016dd3:	mov    edx,DWORD PTR [esi+0x5c]
64016dd6:	mov    eax,ds:0x640298dc
64016ddb:	push   edi
64016ddc:	mov    edi,DWORD PTR [ebp+0x8]
64016ddf:	mov    ecx,edx
64016de1:	push   ebx
64016de2:	cmp    DWORD PTR [ecx],edi
64016de4:	je     0x64016df4
64016de6:	mov    ebx,eax
64016de8:	imul   ebx,ebx,0xc
64016deb:	add    ecx,0xc
64016dee:	add    ebx,edx
64016df0:	cmp    ecx,ebx
64016df2:	jb     0x64016de2
64016df4:	imul   eax,eax,0xc
64016df7:	add    eax,edx
64016df9:	cmp    ecx,eax
64016dfb:	jae    0x64016e05
64016dfd:	cmp    DWORD PTR [ecx],edi
64016dff:	jne    0x64016e05
64016e01:	mov    eax,ecx
64016e03:	jmp    0x64016e07
64016e05:	xor    eax,eax
64016e07:	test   eax,eax
64016e09:	je     0x64016e15
64016e0b:	mov    ebx,DWORD PTR [eax+0x8]
64016e0e:	test   ebx,ebx
64016e10:	mov    DWORD PTR [ebp-0x4],ebx
64016e13:	jne    0x64016e1c
64016e15:	xor    eax,eax
64016e17:	jmp    0x64016f17
64016e1c:	cmp    ebx,0x5
64016e1f:	jne    0x64016e2d
64016e21:	and    DWORD PTR [eax+0x8],0x0
64016e25:	xor    eax,eax
64016e27:	inc    eax
64016e28:	jmp    0x64016f17
64016e2d:	cmp    ebx,0x1
64016e30:	je     0x64016f14
64016e36:	mov    ecx,DWORD PTR [esi+0x60]
64016e39:	mov    DWORD PTR [ebp-0x8],ecx
64016e3c:	mov    ecx,DWORD PTR [ebp+0xc]
64016e3f:	mov    DWORD PTR [esi+0x60],ecx
64016e42:	mov    ecx,DWORD PTR [eax+0x4]
64016e45:	cmp    ecx,0x8
64016e48:	jne    0x64016f06
64016e4e:	mov    ecx,DWORD PTR ds:0x640298d0
64016e54:	mov    edi,DWORD PTR ds:0x640298d4
64016e5a:	mov    edx,ecx
64016e5c:	add    edi,ecx
64016e5e:	cmp    edx,edi
64016e60:	jge    0x64016e86
64016e62:	imul   ecx,ecx,0xc
64016e65:	mov    edi,DWORD PTR [esi+0x5c]
64016e68:	and    DWORD PTR [ecx+edi*1+0x8],0x0
64016e6d:	mov    edi,DWORD PTR ds:0x640298d0
64016e73:	mov    ebx,DWORD PTR ds:0x640298d4
64016e79:	inc    edx
64016e7a:	add    ebx,edi
64016e7c:	add    ecx,0xc
64016e7f:	cmp    edx,ebx
64016e81:	jl     0x64016e65
64016e83:	mov    ebx,DWORD PTR [ebp-0x4]
64016e86:	mov    eax,DWORD PTR [eax]
64016e88:	cmp    eax,0xc000008e
64016e8d:	mov    edi,DWORD PTR [esi+0x64]
64016e90:	jne    0x64016e9b
64016e92:	mov    DWORD PTR [esi+0x64],0x83
64016e99:	jmp    0x64016ef9
64016e9b:	cmp    eax,0xc0000090
64016ea0:	jne    0x64016eab
64016ea2:	mov    DWORD PTR [esi+0x64],0x81
64016ea9:	jmp    0x64016ef9
64016eab:	cmp    eax,0xc0000091
64016eb0:	jne    0x64016ebb
64016eb2:	mov    DWORD PTR [esi+0x64],0x84
64016eb9:	jmp    0x64016ef9
64016ebb:	cmp    eax,0xc0000093
64016ec0:	jne    0x64016ecb
64016ec2:	mov    DWORD PTR [esi+0x64],0x85
64016ec9:	jmp    0x64016ef9
64016ecb:	cmp    eax,0xc000008d
64016ed0:	jne    0x64016edb
64016ed2:	mov    DWORD PTR [esi+0x64],0x82
64016ed9:	jmp    0x64016ef9
64016edb:	cmp    eax,0xc000008f
64016ee0:	jne    0x64016eeb
64016ee2:	mov    DWORD PTR [esi+0x64],0x86
64016ee9:	jmp    0x64016ef9
64016eeb:	cmp    eax,0xc0000092
64016ef0:	jne    0x64016ef9
64016ef2:	mov    DWORD PTR [esi+0x64],0x8a
64016ef9:	push   DWORD PTR [esi+0x64]
64016efc:	push   0x8
64016efe:	call   ebx
64016f00:	pop    ecx
64016f01:	mov    DWORD PTR [esi+0x64],edi
64016f04:	jmp    0x64016f0d
64016f06:	and    DWORD PTR [eax+0x8],0x0
64016f0a:	push   ecx
64016f0b:	call   ebx
64016f0d:	mov    eax,DWORD PTR [ebp-0x8]
64016f10:	pop    ecx
64016f11:	mov    DWORD PTR [esi+0x60],eax
64016f14:	or     eax,0xffffffff
64016f17:	pop    ebx
64016f18:	pop    edi
64016f19:	pop    esi
64016f1a:	leave  
64016f1b:	ret    
64016f1c:	mov    eax,0xe06d7363
64016f21:	cmp    DWORD PTR [esp+0x4],eax
64016f25:	jne    0x64016f34
64016f27:	push   DWORD PTR [esp+0x8]
64016f2b:	push   eax
64016f2c:	call   0x64016dbe
64016f31:	pop    ecx
64016f32:	pop    ecx
64016f33:	ret    
64016f34:	xor    eax,eax
64016f36:	ret    
64016f37:	push   ebp
64016f38:	mov    ebp,esp
64016f3a:	sub    esp,0x10
64016f3d:	mov    eax,ds:0x64029038
64016f42:	and    DWORD PTR [ebp-0x8],0x0
64016f46:	and    DWORD PTR [ebp-0x4],0x0
64016f4a:	push   ebx
64016f4b:	push   edi
64016f4c:	mov    edi,0xbb40e64e
64016f51:	cmp    eax,edi
64016f53:	mov    ebx,0xffff0000
64016f58:	je     0x64016f67
64016f5a:	test   ebx,eax
64016f5c:	je     0x64016f67
64016f5e:	not    eax
64016f60:	mov    ds:0x6402903c,eax
64016f65:	jmp    0x64016fc7
64016f67:	push   esi
64016f68:	lea    eax,[ebp-0x8]
64016f6b:	push   eax
64016f6c:	call   DWORD PTR ds:0x640220cc
64016f72:	mov    esi,DWORD PTR [ebp-0x4]
64016f75:	xor    esi,DWORD PTR [ebp-0x8]
64016f78:	call   DWORD PTR ds:0x640220d0
64016f7e:	xor    esi,eax
64016f80:	call   DWORD PTR ds:0x64022128
64016f86:	xor    esi,eax
64016f88:	call   DWORD PTR ds:0x64022058
64016f8e:	xor    esi,eax
64016f90:	lea    eax,[ebp-0x10]
64016f93:	push   eax
64016f94:	call   DWORD PTR ds:0x640220d4
64016f9a:	mov    eax,DWORD PTR [ebp-0xc]
64016f9d:	xor    eax,DWORD PTR [ebp-0x10]
64016fa0:	xor    esi,eax
64016fa2:	cmp    esi,edi
64016fa4:	jne    0x64016fad
64016fa6:	mov    esi,0xbb40e64f
64016fab:	jmp    0x64016fb8
64016fad:	test   ebx,esi
64016faf:	jne    0x64016fb8
64016fb1:	mov    eax,esi
64016fb3:	shl    eax,0x10
64016fb6:	or     esi,eax
64016fb8:	mov    DWORD PTR ds:0x64029038,esi
64016fbe:	not    esi
64016fc0:	mov    DWORD PTR ds:0x6402903c,esi
64016fc6:	pop    esi
64016fc7:	pop    edi
64016fc8:	pop    ebx
64016fc9:	leave  
64016fca:	ret    
64016fcb:	int3   
64016fcc:	int3   
64016fcd:	int3   
64016fce:	int3   
64016fcf:	int3   
64016fd0:	push   esi
64016fd1:	mov    eax,DWORD PTR [esp+0x14]
64016fd5:	or     eax,eax
64016fd7:	jne    0x64017001
64016fd9:	mov    ecx,DWORD PTR [esp+0x10]
64016fdd:	mov    eax,DWORD PTR [esp+0xc]
64016fe1:	xor    edx,edx
64016fe3:	div    ecx
64016fe5:	mov    ebx,eax
64016fe7:	mov    eax,DWORD PTR [esp+0x8]
64016feb:	div    ecx
64016fed:	mov    esi,eax
64016fef:	mov    eax,ebx
64016ff1:	mul    DWORD PTR [esp+0x10]
64016ff5:	mov    ecx,eax
64016ff7:	mov    eax,esi
64016ff9:	mul    DWORD PTR [esp+0x10]
64016ffd:	add    edx,ecx
64016fff:	jmp    0x64017048
64017001:	mov    ecx,eax
64017003:	mov    ebx,DWORD PTR [esp+0x10]
64017007:	mov    edx,DWORD PTR [esp+0xc]
6401700b:	mov    eax,DWORD PTR [esp+0x8]
6401700f:	shr    ecx,1
64017011:	rcr    ebx,1
64017013:	shr    edx,1
64017015:	rcr    eax,1
64017017:	or     ecx,ecx
64017019:	jne    0x6401700f
6401701b:	div    ebx
6401701d:	mov    esi,eax
6401701f:	mul    DWORD PTR [esp+0x14]
64017023:	mov    ecx,eax
64017025:	mov    eax,DWORD PTR [esp+0x10]
64017029:	mul    esi
6401702b:	add    edx,ecx
6401702d:	jb     0x6401703d
6401702f:	cmp    edx,DWORD PTR [esp+0xc]
64017033:	ja     0x6401703d
64017035:	jb     0x64017046
64017037:	cmp    eax,DWORD PTR [esp+0x8]
6401703b:	jbe    0x64017046
6401703d:	dec    esi
6401703e:	sub    eax,DWORD PTR [esp+0x10]
64017042:	sbb    edx,DWORD PTR [esp+0x14]
64017046:	xor    ebx,ebx
64017048:	sub    eax,DWORD PTR [esp+0x8]
6401704c:	sbb    edx,DWORD PTR [esp+0xc]
64017050:	neg    edx
64017052:	neg    eax
64017054:	sbb    edx,0x0
64017057:	mov    ecx,edx
64017059:	mov    edx,ebx
6401705b:	mov    ebx,ecx
6401705d:	mov    ecx,eax
6401705f:	mov    eax,esi
64017061:	pop    esi
64017062:	ret    0x10
64017065:	test   BYTE PTR [ecx+0xc],0x40
64017069:	je     0x64017071
6401706b:	cmp    DWORD PTR [ecx+0x8],0x0
6401706f:	je     0x64017095
64017071:	dec    DWORD PTR [ecx+0x4]
64017074:	js     0x64017081
64017076:	mov    edx,DWORD PTR [ecx]
64017078:	mov    BYTE PTR [edx],al
6401707a:	inc    DWORD PTR [ecx]
6401707c:	movzx  eax,al
6401707f:	jmp    0x6401708d
64017081:	movsx  eax,al
64017084:	push   ecx
64017085:	push   eax
64017086:	call   0x64014d35
6401708b:	pop    ecx
6401708c:	pop    ecx
6401708d:	cmp    eax,0xffffffff
64017090:	jne    0x64017095
64017092:	or     DWORD PTR [esi],eax
64017094:	ret    
64017095:	inc    DWORD PTR [esi]
64017097:	ret    
64017098:	push   ebp
64017099:	mov    ebp,esp
6401709b:	push   esi
6401709c:	mov    esi,eax
6401709e:	jmp    0x640170b3
640170a0:	mov    ecx,DWORD PTR [ebp+0x10]
640170a3:	mov    al,BYTE PTR [ebp+0x8]
640170a6:	dec    DWORD PTR [ebp+0xc]
640170a9:	call   0x64017065
640170ae:	cmp    DWORD PTR [esi],0xffffffff
640170b1:	je     0x640170b9
640170b3:	cmp    DWORD PTR [ebp+0xc],0x0
640170b7:	jg     0x640170a0
640170b9:	pop    esi
640170ba:	pop    ebp
640170bb:	ret    
640170bc:	test   BYTE PTR [edi+0xc],0x40
640170c0:	push   ebx
640170c1:	push   esi
640170c2:	mov    esi,eax
640170c4:	mov    ebx,ecx
640170c6:	je     0x640170fc
640170c8:	cmp    DWORD PTR [edi+0x8],0x0
640170cc:	jne    0x640170fc
640170ce:	mov    eax,DWORD PTR [esp+0xc]
640170d2:	add    DWORD PTR [esi],eax
640170d4:	jmp    0x64017103
640170d6:	mov    al,BYTE PTR [ebx]
640170d8:	dec    DWORD PTR [esp+0xc]
640170dc:	mov    ecx,edi
640170de:	call   0x64017065
640170e3:	inc    ebx
640170e4:	cmp    DWORD PTR [esi],0xffffffff
640170e7:	jne    0x640170fc
640170e9:	call   0x640129f0
640170ee:	cmp    DWORD PTR [eax],0x2a
640170f1:	jne    0x64017103
640170f3:	mov    ecx,edi
640170f5:	mov    al,0x3f
640170f7:	call   0x64017065
640170fc:	cmp    DWORD PTR [esp+0xc],0x0
64017101:	jg     0x640170d6
64017103:	pop    esi
64017104:	pop    ebx
64017105:	ret    
64017106:	push   ebp
64017107:	lea    ebp,[esp-0x1f8]
6401710e:	sub    esp,0x278
64017114:	mov    eax,ds:0x64029038
64017119:	xor    eax,ebp
6401711b:	mov    DWORD PTR [ebp+0x1f4],eax
64017121:	mov    eax,DWORD PTR [ebp+0x200]
64017127:	push   ebx
64017128:	mov    ebx,DWORD PTR [ebp+0x204]
6401712e:	push   esi
6401712f:	xor    esi,esi
64017131:	push   edi
64017132:	mov    edi,DWORD PTR [ebp+0x20c]
64017138:	push   DWORD PTR [ebp+0x208]
6401713e:	lea    ecx,[ebp-0x64]
64017141:	mov    DWORD PTR [ebp-0x30],eax
64017144:	mov    DWORD PTR [ebp-0x2c],edi
64017147:	mov    DWORD PTR [ebp-0x4c],esi
6401714a:	mov    DWORD PTR [ebp-0x18],esi
6401714d:	mov    DWORD PTR [ebp-0x40],esi
64017150:	mov    DWORD PTR [ebp-0x20],esi
64017153:	mov    DWORD PTR [ebp-0x3c],esi
64017156:	mov    DWORD PTR [ebp-0x50],esi
64017159:	mov    DWORD PTR [ebp-0x44],esi
6401715c:	call   0x64010dc1
64017161:	cmp    DWORD PTR [ebp-0x30],esi
64017164:	jne    0x64017193
64017166:	call   0x640129f0
6401716b:	push   esi
6401716c:	push   esi
6401716d:	push   esi
6401716e:	push   esi
6401716f:	mov    DWORD PTR [eax],0x16
64017175:	push   esi
64017176:	call   0x64010756
6401717b:	add    esp,0x14
6401717e:	cmp    BYTE PTR [ebp-0x58],0x0
64017182:	je     0x6401718b
64017184:	mov    eax,DWORD PTR [ebp-0x5c]
64017187:	and    DWORD PTR [eax+0x70],0xfffffffd
6401718b:	or     eax,0xffffffff
6401718e:	jmp    0x64017a62
64017193:	mov    eax,DWORD PTR [ebp-0x30]
64017196:	test   BYTE PTR [eax+0xc],0x40
6401719a:	jne    0x64017244
640171a0:	push   eax
640171a1:	call   0x6401aa9d
640171a6:	cmp    eax,0xffffffff
640171a9:	pop    ecx
640171aa:	je     0x640171e2
640171ac:	push   DWORD PTR [ebp-0x30]
640171af:	call   0x6401aa9d
640171b4:	cmp    eax,0xfffffffe
640171b7:	pop    ecx
640171b8:	je     0x640171e2
640171ba:	push   DWORD PTR [ebp-0x30]
640171bd:	call   0x6401aa9d
640171c2:	push   DWORD PTR [ebp-0x30]
640171c5:	sar    eax,0x5
640171c8:	lea    esi,[eax*4+0x6402e4a0]
640171cf:	call   0x6401aa9d
640171d4:	and    eax,0x1f
640171d7:	shl    eax,0x6
640171da:	add    eax,DWORD PTR [esi]
640171dc:	pop    ecx
640171dd:	pop    ecx
640171de:	xor    esi,esi
640171e0:	jmp    0x640171e7
640171e2:	mov    eax,0x64029810
640171e7:	test   BYTE PTR [eax+0x24],0x7f
640171eb:	jne    0x64017166
640171f1:	push   DWORD PTR [ebp-0x30]
640171f4:	call   0x6401aa9d
640171f9:	cmp    eax,0xffffffff
640171fc:	pop    ecx
640171fd:	je     0x64017235
640171ff:	push   DWORD PTR [ebp-0x30]
64017202:	call   0x6401aa9d
64017207:	cmp    eax,0xfffffffe
6401720a:	pop    ecx
6401720b:	je     0x64017235
6401720d:	push   DWORD PTR [ebp-0x30]
64017210:	call   0x6401aa9d
64017215:	push   DWORD PTR [ebp-0x30]
64017218:	sar    eax,0x5
6401721b:	lea    esi,[eax*4+0x6402e4a0]
64017222:	call   0x6401aa9d
64017227:	and    eax,0x1f
6401722a:	shl    eax,0x6
6401722d:	add    eax,DWORD PTR [esi]
6401722f:	pop    ecx
64017230:	pop    ecx
64017231:	xor    esi,esi
64017233:	jmp    0x6401723a
64017235:	mov    eax,0x64029810
6401723a:	test   BYTE PTR [eax+0x24],0x80
6401723e:	jne    0x64017166
64017244:	cmp    ebx,esi
64017246:	je     0x64017166
6401724c:	mov    dl,BYTE PTR [ebx]
6401724e:	xor    ecx,ecx
64017250:	test   dl,dl
64017252:	mov    DWORD PTR [ebp-0x34],esi
64017255:	mov    DWORD PTR [ebp-0x28],esi
64017258:	mov    DWORD PTR [ebp-0x54],esi
6401725b:	mov    BYTE PTR [ebp-0x19],dl
6401725e:	je     0x64017a52
64017264:	inc    ebx
64017265:	cmp    DWORD PTR [ebp-0x34],0x0
64017269:	mov    DWORD PTR [ebp-0x48],ebx
6401726c:	jl     0x64017a52
64017272:	mov    al,dl
64017274:	sub    al,0x20
64017276:	cmp    al,0x58
64017278:	ja     0x6401728b
6401727a:	movsx  eax,dl
6401727d:	movzx  eax,BYTE PTR [eax+0x64022cc0]
64017284:	and    eax,0xf
64017287:	xor    esi,esi
64017289:	jmp    0x6401728f
6401728b:	xor    esi,esi
6401728d:	xor    eax,eax
6401728f:	movsx  eax,BYTE PTR [ecx+eax*8+0x64022ce0]
64017297:	push   0x7
64017299:	sar    eax,0x4
6401729c:	pop    ecx
6401729d:	cmp    eax,ecx
6401729f:	mov    DWORD PTR [ebp-0x74],eax
640172a2:	ja     0x64017a22
640172a8:	jmp    DWORD PTR [eax*4+0x64017a7a]
640172af:	or     DWORD PTR [ebp-0x20],0xffffffff
640172b3:	mov    DWORD PTR [ebp-0x78],esi
640172b6:	mov    DWORD PTR [ebp-0x50],esi
640172b9:	mov    DWORD PTR [ebp-0x40],esi
640172bc:	mov    DWORD PTR [ebp-0x3c],esi
640172bf:	mov    DWORD PTR [ebp-0x18],esi
640172c2:	mov    DWORD PTR [ebp-0x44],esi
640172c5:	jmp    0x64017a22
640172ca:	movsx  eax,dl
640172cd:	sub    eax,0x20
640172d0:	je     0x64017310
640172d2:	sub    eax,0x3
640172d5:	je     0x64017304
640172d7:	sub    eax,0x8
640172da:	je     0x640172fb
640172dc:	dec    eax
640172dd:	dec    eax
640172de:	je     0x640172f2
640172e0:	sub    eax,0x3
640172e3:	jne    0x64017a22
640172e9:	or     DWORD PTR [ebp-0x18],0x8
640172ed:	jmp    0x64017a22
640172f2:	or     DWORD PTR [ebp-0x18],0x4
640172f6:	jmp    0x64017a22
640172fb:	or     DWORD PTR [ebp-0x18],0x1
640172ff:	jmp    0x64017a22
64017304:	or     DWORD PTR [ebp-0x18],0x80
6401730b:	jmp    0x64017a22
64017310:	or     DWORD PTR [ebp-0x18],0x2
64017314:	jmp    0x64017a22
64017319:	cmp    dl,0x2a
6401731c:	jne    0x6401733e
6401731e:	add    edi,0x4
64017321:	mov    DWORD PTR [ebp-0x2c],edi
64017324:	mov    edi,DWORD PTR [edi-0x4]
64017327:	cmp    edi,esi
64017329:	mov    DWORD PTR [ebp-0x40],edi
6401732c:	jge    0x64017a22
64017332:	or     DWORD PTR [ebp-0x18],0x4
64017336:	neg    DWORD PTR [ebp-0x40]
64017339:	jmp    0x64017a22
6401733e:	mov    eax,DWORD PTR [ebp-0x40]
64017341:	imul   eax,eax,0xa
64017344:	movsx  ecx,dl
64017347:	lea    eax,[eax+ecx*1-0x30]
6401734b:	mov    DWORD PTR [ebp-0x40],eax
6401734e:	jmp    0x64017a22
64017353:	mov    DWORD PTR [ebp-0x20],esi
64017356:	jmp    0x64017a22
6401735b:	cmp    dl,0x2a
6401735e:	jne    0x6401737d
64017360:	add    edi,0x4
64017363:	mov    DWORD PTR [ebp-0x2c],edi
64017366:	mov    edi,DWORD PTR [edi-0x4]
64017369:	cmp    edi,esi
6401736b:	mov    DWORD PTR [ebp-0x20],edi
6401736e:	jge    0x64017a22
64017374:	or     DWORD PTR [ebp-0x20],0xffffffff
64017378:	jmp    0x64017a22
6401737d:	mov    eax,DWORD PTR [ebp-0x20]
64017380:	imul   eax,eax,0xa
64017383:	movsx  ecx,dl
64017386:	lea    eax,[eax+ecx*1-0x30]
6401738a:	mov    DWORD PTR [ebp-0x20],eax
6401738d:	jmp    0x64017a22
64017392:	cmp    dl,0x49
64017395:	je     0x640173dd
64017397:	cmp    dl,0x68
6401739a:	je     0x640173d4
6401739c:	cmp    dl,0x6c
6401739f:	je     0x640173b6
640173a1:	cmp    dl,0x77
640173a4:	jne    0x64017a22
640173aa:	or     DWORD PTR [ebp-0x18],0x800
640173b1:	jmp    0x64017a22
640173b6:	cmp    BYTE PTR [ebx],0x6c
640173b9:	jne    0x640173cb
640173bb:	inc    ebx
640173bc:	or     DWORD PTR [ebp-0x18],0x1000
640173c3:	mov    DWORD PTR [ebp-0x48],ebx
640173c6:	jmp    0x64017a22
640173cb:	or     DWORD PTR [ebp-0x18],0x10
640173cf:	jmp    0x64017a22
640173d4:	or     DWORD PTR [ebp-0x18],0x20
640173d8:	jmp    0x64017a22
640173dd:	mov    al,BYTE PTR [ebx]
640173df:	cmp    al,0x36
640173e1:	jne    0x640173fa
640173e3:	cmp    BYTE PTR [ebx+0x1],0x34
640173e7:	jne    0x640173fa
640173e9:	inc    ebx
640173ea:	inc    ebx
640173eb:	or     DWORD PTR [ebp-0x18],0x8000
640173f2:	mov    DWORD PTR [ebp-0x48],ebx
640173f5:	jmp    0x64017a22
640173fa:	cmp    al,0x33
640173fc:	jne    0x64017415
640173fe:	cmp    BYTE PTR [ebx+0x1],0x32
64017402:	jne    0x64017415
64017404:	inc    ebx
64017405:	inc    ebx
64017406:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401740d:	mov    DWORD PTR [ebp-0x48],ebx
64017410:	jmp    0x64017a22
64017415:	cmp    al,0x64
64017417:	je     0x64017a22
6401741d:	cmp    al,0x69
6401741f:	je     0x64017a22
64017425:	cmp    al,0x6f
64017427:	je     0x64017a22
6401742d:	cmp    al,0x75
6401742f:	je     0x64017a22
64017435:	cmp    al,0x78
64017437:	je     0x64017a22
6401743d:	cmp    al,0x58
6401743f:	je     0x64017a22
64017445:	mov    DWORD PTR [ebp-0x74],esi
64017448:	lea    eax,[ebp-0x64]
6401744b:	push   eax
6401744c:	movzx  eax,dl
6401744f:	push   eax
64017450:	mov    DWORD PTR [ebp-0x44],esi
64017453:	call   0x64018085
64017458:	pop    ecx
64017459:	test   eax,eax
6401745b:	mov    al,BYTE PTR [ebp-0x19]
6401745e:	pop    ecx
6401745f:	je     0x6401747a
64017461:	mov    ecx,DWORD PTR [ebp-0x30]
64017464:	lea    esi,[ebp-0x34]
64017467:	call   0x64017065
6401746c:	mov    al,BYTE PTR [ebx]
6401746e:	inc    ebx
6401746f:	test   al,al
64017471:	mov    DWORD PTR [ebp-0x48],ebx
64017474:	je     0x64017a3b
6401747a:	mov    ecx,DWORD PTR [ebp-0x30]
6401747d:	lea    esi,[ebp-0x34]
64017480:	call   0x64017065
64017485:	jmp    0x64017a22
6401748a:	movsx  eax,dl
6401748d:	cmp    eax,0x64
64017490:	jg     0x64017608
64017496:	je     0x64017687
6401749c:	cmp    eax,0x53
6401749f:	jg     0x64017550
640174a5:	je     0x64017501
640174a7:	sub    eax,0x41
640174aa:	je     0x640174bc
640174ac:	dec    eax
640174ad:	dec    eax
640174ae:	je     0x640174f0
640174b0:	dec    eax
640174b1:	dec    eax
640174b2:	je     0x640174bc
640174b4:	dec    eax
640174b5:	dec    eax
640174b6:	jne    0x6401790a
640174bc:	add    dl,0x20
640174bf:	mov    DWORD PTR [ebp-0x78],0x1
640174c6:	mov    BYTE PTR [ebp-0x19],dl
640174c9:	or     DWORD PTR [ebp-0x18],0x40
640174cd:	cmp    DWORD PTR [ebp-0x20],esi
640174d0:	lea    ebx,[ebp-0x14]
640174d3:	mov    eax,0x200
640174d8:	mov    DWORD PTR [ebp-0x24],ebx
640174db:	mov    DWORD PTR [ebp-0x68],eax
640174de:	jge    0x640176ab
640174e4:	mov    DWORD PTR [ebp-0x20],0x6
640174eb:	jmp    0x640176f9
640174f0:	test   WORD PTR [ebp-0x18],0x830
640174f6:	jne    0x6401756d
640174f8:	or     DWORD PTR [ebp-0x18],0x800
640174ff:	jmp    0x6401756d
64017501:	test   WORD PTR [ebp-0x18],0x830
64017507:	jne    0x64017510
64017509:	or     DWORD PTR [ebp-0x18],0x800
64017510:	mov    ecx,DWORD PTR [ebp-0x20]
64017513:	cmp    ecx,0xffffffff
64017516:	jne    0x6401751d
64017518:	mov    ecx,0x7fffffff
6401751d:	add    edi,0x4
64017520:	test   WORD PTR [ebp-0x18],0x810
64017526:	mov    DWORD PTR [ebp-0x2c],edi
64017529:	mov    edi,DWORD PTR [edi-0x4]
6401752c:	mov    DWORD PTR [ebp-0x24],edi
6401752f:	je     0x640178e8
64017535:	cmp    edi,esi
64017537:	jne    0x64017541
64017539:	mov    eax,ds:0x640298e4
6401753e:	mov    DWORD PTR [ebp-0x24],eax
64017541:	mov    eax,DWORD PTR [ebp-0x24]
64017544:	mov    DWORD PTR [ebp-0x44],0x1
6401754b:	jmp    0x640178dd
64017550:	sub    eax,0x58
64017553:	je     0x64017792
64017559:	dec    eax
6401755a:	dec    eax
6401755b:	je     0x640175ba
6401755d:	sub    eax,ecx
6401755f:	je     0x640174c9
64017565:	dec    eax
64017566:	dec    eax
64017567:	jne    0x6401790a
6401756d:	add    edi,0x4
64017570:	test   WORD PTR [ebp-0x18],0x810
64017576:	mov    DWORD PTR [ebp-0x2c],edi
64017579:	je     0x640175a2
6401757b:	movzx  eax,WORD PTR [edi-0x4]
6401757f:	push   eax
64017580:	push   0x200
64017585:	lea    eax,[ebp-0x14]
64017588:	push   eax
64017589:	lea    eax,[ebp-0x28]
6401758c:	push   eax
6401758d:	call   0x6401bc11
64017592:	add    esp,0x10
64017595:	test   eax,eax
64017597:	je     0x640175af
64017599:	mov    DWORD PTR [ebp-0x50],0x1
640175a0:	jmp    0x640175af
640175a2:	mov    al,BYTE PTR [edi-0x4]
640175a5:	mov    BYTE PTR [ebp-0x14],al
640175a8:	mov    DWORD PTR [ebp-0x28],0x1
640175af:	lea    eax,[ebp-0x14]
640175b2:	mov    DWORD PTR [ebp-0x24],eax
640175b5:	jmp    0x6401790a
640175ba:	mov    eax,DWORD PTR [edi]
640175bc:	add    edi,0x4
640175bf:	cmp    eax,esi
640175c1:	mov    DWORD PTR [ebp-0x2c],edi
640175c4:	je     0x640175f4
640175c6:	mov    ecx,DWORD PTR [eax+0x4]
640175c9:	cmp    ecx,esi
640175cb:	je     0x640175f4
640175cd:	test   WORD PTR [ebp-0x18],0x800
640175d3:	movsx  eax,WORD PTR [eax]
640175d6:	mov    DWORD PTR [ebp-0x24],ecx
640175d9:	je     0x640175ec
640175db:	cdq    
640175dc:	sub    eax,edx
640175de:	sar    eax,1
640175e0:	mov    DWORD PTR [ebp-0x44],0x1
640175e7:	jmp    0x64017907
640175ec:	mov    DWORD PTR [ebp-0x44],esi
640175ef:	jmp    0x64017907
640175f4:	mov    eax,ds:0x640298e0
640175f9:	mov    DWORD PTR [ebp-0x24],eax
640175fc:	push   eax
640175fd:	call   0x640123f0
64017602:	pop    ecx
64017603:	jmp    0x64017907
64017608:	cmp    eax,0x70
6401760b:	jg     0x64017797
64017611:	je     0x6401778b
64017617:	cmp    eax,0x65
6401761a:	jl     0x6401790a
64017620:	cmp    eax,0x67
64017623:	jle    0x640174c9
64017629:	cmp    eax,0x69
6401762c:	je     0x64017687
6401762e:	cmp    eax,0x6e
64017631:	je     0x64017652
64017633:	cmp    eax,0x6f
64017636:	jne    0x6401790a
6401763c:	test   BYTE PTR [ebp-0x18],0x80
64017640:	mov    DWORD PTR [ebp-0x28],0x8
64017647:	je     0x64017692
64017649:	or     DWORD PTR [ebp-0x18],0x200
64017650:	jmp    0x64017692
64017652:	mov    esi,DWORD PTR [edi]
64017654:	add    edi,0x4
64017657:	mov    DWORD PTR [ebp-0x2c],edi
6401765a:	call   0x6401aca8
6401765f:	test   eax,eax
64017661:	je     0x64017a3b
64017667:	test   BYTE PTR [ebp-0x18],0x20
6401766b:	je     0x64017676
6401766d:	mov    ax,WORD PTR [ebp-0x34]
64017671:	mov    WORD PTR [esi],ax
64017674:	jmp    0x6401767b
64017676:	mov    eax,DWORD PTR [ebp-0x34]
64017679:	mov    DWORD PTR [esi],eax
6401767b:	mov    DWORD PTR [ebp-0x50],0x1
64017682:	jmp    0x64017a0f
64017687:	or     DWORD PTR [ebp-0x18],0x40
6401768b:	mov    DWORD PTR [ebp-0x28],0xa
64017692:	mov    ecx,DWORD PTR [ebp-0x18]
64017695:	test   cx,cx
64017698:	jns    0x640177e1
6401769e:	mov    eax,DWORD PTR [edi]
640176a0:	mov    edx,DWORD PTR [edi+0x4]
640176a3:	add    edi,0x8
640176a6:	jmp    0x64017816
640176ab:	jne    0x640176bb
640176ad:	cmp    dl,0x67
640176b0:	jne    0x640176f9
640176b2:	mov    DWORD PTR [ebp-0x20],0x1
640176b9:	jmp    0x640176f9
640176bb:	cmp    DWORD PTR [ebp-0x20],eax
640176be:	jle    0x640176c3
640176c0:	mov    DWORD PTR [ebp-0x20],eax
640176c3:	cmp    DWORD PTR [ebp-0x20],0xa3
640176ca:	jle    0x640176f9
640176cc:	mov    esi,DWORD PTR [ebp-0x20]
640176cf:	add    esi,0x15d
640176d5:	push   esi
640176d6:	call   0x64013f00
640176db:	test   eax,eax
640176dd:	mov    dl,BYTE PTR [ebp-0x19]
640176e0:	pop    ecx
640176e1:	mov    DWORD PTR [ebp-0x54],eax
640176e4:	je     0x640176f0
640176e6:	mov    DWORD PTR [ebp-0x24],eax
640176e9:	mov    DWORD PTR [ebp-0x68],esi
640176ec:	mov    ebx,eax
640176ee:	jmp    0x640176f7
640176f0:	mov    DWORD PTR [ebp-0x20],0xa3
640176f7:	xor    esi,esi
640176f9:	mov    eax,DWORD PTR [edi]
640176fb:	add    edi,0x8
640176fe:	mov    DWORD PTR [ebp-0x80],eax
64017701:	mov    eax,DWORD PTR [edi-0x4]
64017704:	mov    DWORD PTR [ebp-0x7c],eax
64017707:	lea    eax,[ebp-0x64]
6401770a:	push   eax
6401770b:	push   DWORD PTR [ebp-0x78]
6401770e:	movsx  eax,dl
64017711:	push   DWORD PTR [ebp-0x20]
64017714:	mov    DWORD PTR [ebp-0x2c],edi
64017717:	push   eax
64017718:	push   DWORD PTR [ebp-0x68]
6401771b:	lea    eax,[ebp-0x80]
6401771e:	push   ebx
6401771f:	push   eax
64017720:	push   DWORD PTR ds:0x64029aec
64017726:	call   0x64012b1f
6401772b:	pop    ecx
6401772c:	call   eax
6401772e:	mov    edi,DWORD PTR [ebp-0x18]
64017731:	add    esp,0x1c
64017734:	and    edi,0x80
6401773a:	je     0x64017756
6401773c:	cmp    DWORD PTR [ebp-0x20],esi
6401773f:	jne    0x64017756
64017741:	lea    eax,[ebp-0x64]
64017744:	push   eax
64017745:	push   ebx
64017746:	push   DWORD PTR ds:0x64029af8
6401774c:	call   0x64012b1f
64017751:	pop    ecx
64017752:	call   eax
64017754:	pop    ecx
64017755:	pop    ecx
64017756:	cmp    BYTE PTR [ebp-0x19],0x67
6401775a:	jne    0x64017775
6401775c:	cmp    edi,esi
6401775e:	jne    0x64017775
64017760:	lea    eax,[ebp-0x64]
64017763:	push   eax
64017764:	push   ebx
64017765:	push   DWORD PTR ds:0x64029af4
6401776b:	call   0x64012b1f
64017770:	pop    ecx
64017771:	call   eax
64017773:	pop    ecx
64017774:	pop    ecx
64017775:	cmp    BYTE PTR [ebx],0x2d
64017778:	jne    0x64017785
6401777a:	or     DWORD PTR [ebp-0x18],0x100
64017781:	inc    ebx
64017782:	mov    DWORD PTR [ebp-0x24],ebx
64017785:	push   ebx
64017786:	jmp    0x640175fd
6401778b:	mov    DWORD PTR [ebp-0x20],0x8
64017792:	mov    DWORD PTR [ebp-0x4c],ecx
64017795:	jmp    0x640177b8
64017797:	sub    eax,0x73
6401779a:	je     0x64017510
640177a0:	dec    eax
640177a1:	dec    eax
640177a2:	je     0x6401768b
640177a8:	sub    eax,0x3
640177ab:	jne    0x6401790a
640177b1:	mov    DWORD PTR [ebp-0x4c],0x27
640177b8:	test   BYTE PTR [ebp-0x18],0x80
640177bc:	mov    DWORD PTR [ebp-0x28],0x10
640177c3:	je     0x64017692
640177c9:	mov    al,BYTE PTR [ebp-0x4c]
640177cc:	add    al,0x51
640177ce:	mov    BYTE PTR [ebp-0x38],0x30
640177d2:	mov    BYTE PTR [ebp-0x37],al
640177d5:	mov    DWORD PTR [ebp-0x3c],0x2
640177dc:	jmp    0x64017692
640177e1:	test   cx,0x1000
640177e6:	jne    0x6401769e
640177ec:	add    edi,0x4
640177ef:	test   cl,0x20
640177f2:	je     0x64017809
640177f4:	test   cl,0x40
640177f7:	mov    DWORD PTR [ebp-0x2c],edi
640177fa:	je     0x64017802
640177fc:	movsx  eax,WORD PTR [edi-0x4]
64017800:	jmp    0x64017806
64017802:	movzx  eax,WORD PTR [edi-0x4]
64017806:	cdq    
64017807:	jmp    0x64017819
64017809:	test   cl,0x40
6401780c:	mov    eax,DWORD PTR [edi-0x4]
6401780f:	je     0x64017814
64017811:	cdq    
64017812:	jmp    0x64017816
64017814:	xor    edx,edx
64017816:	mov    DWORD PTR [ebp-0x2c],edi
64017819:	test   cl,0x40
6401781c:	je     0x64017836
6401781e:	cmp    edx,esi
64017820:	jg     0x64017836
64017822:	jl     0x64017828
64017824:	cmp    eax,esi
64017826:	jae    0x64017836
64017828:	neg    eax
6401782a:	adc    edx,0x0
6401782d:	neg    edx
6401782f:	or     DWORD PTR [ebp-0x18],0x100
64017836:	test   WORD PTR [ebp-0x18],0x9000
6401783c:	mov    ebx,edx
6401783e:	mov    edi,eax
64017840:	jne    0x64017844
64017842:	xor    ebx,ebx
64017844:	cmp    DWORD PTR [ebp-0x20],0x0
64017848:	jge    0x64017853
6401784a:	mov    DWORD PTR [ebp-0x20],0x1
64017851:	jmp    0x64017864
64017853:	and    DWORD PTR [ebp-0x18],0xfffffff7
64017857:	mov    eax,0x200
6401785c:	cmp    DWORD PTR [ebp-0x20],eax
6401785f:	jle    0x64017864
64017861:	mov    DWORD PTR [ebp-0x20],eax
64017864:	mov    eax,edi
64017866:	or     eax,ebx
64017868:	jne    0x6401786d
6401786a:	and    DWORD PTR [ebp-0x3c],eax
6401786d:	lea    esi,[ebp+0x1eb]
64017873:	mov    eax,DWORD PTR [ebp-0x20]
64017876:	dec    DWORD PTR [ebp-0x20]
64017879:	test   eax,eax
6401787b:	jg     0x64017883
6401787d:	mov    eax,edi
6401787f:	or     eax,ebx
64017881:	je     0x640178a7
64017883:	mov    eax,DWORD PTR [ebp-0x28]
64017886:	cdq    
64017887:	push   edx
64017888:	push   eax
64017889:	push   ebx
6401788a:	push   edi
6401788b:	call   0x64016fd0
64017890:	add    ecx,0x30
64017893:	cmp    ecx,0x39
64017896:	mov    DWORD PTR [ebp-0x68],ebx
64017899:	mov    edi,eax
6401789b:	mov    ebx,edx
6401789d:	jle    0x640178a2
6401789f:	add    ecx,DWORD PTR [ebp-0x4c]
640178a2:	mov    BYTE PTR [esi],cl
640178a4:	dec    esi
640178a5:	jmp    0x64017873
640178a7:	lea    eax,[ebp+0x1eb]
640178ad:	sub    eax,esi
640178af:	inc    esi
640178b0:	test   WORD PTR [ebp-0x18],0x200
640178b6:	mov    DWORD PTR [ebp-0x28],eax
640178b9:	mov    DWORD PTR [ebp-0x24],esi
640178bc:	je     0x6401790a
640178be:	test   eax,eax
640178c0:	je     0x640178c9
640178c2:	mov    ecx,esi
640178c4:	cmp    BYTE PTR [ecx],0x30
640178c7:	je     0x6401790a
640178c9:	dec    DWORD PTR [ebp-0x24]
640178cc:	mov    ecx,DWORD PTR [ebp-0x24]
640178cf:	mov    BYTE PTR [ecx],0x30
640178d2:	inc    eax
640178d3:	jmp    0x64017907
640178d5:	dec    ecx
640178d6:	cmp    WORD PTR [eax],si
640178d9:	je     0x640178e1
640178db:	inc    eax
640178dc:	inc    eax
640178dd:	cmp    ecx,esi
640178df:	jne    0x640178d5
640178e1:	sub    eax,DWORD PTR [ebp-0x24]
640178e4:	sar    eax,1
640178e6:	jmp    0x64017907
640178e8:	cmp    edi,esi
640178ea:	jne    0x640178f4
640178ec:	mov    eax,ds:0x640298e0
640178f1:	mov    DWORD PTR [ebp-0x24],eax
640178f4:	mov    eax,DWORD PTR [ebp-0x24]
640178f7:	jmp    0x64017900
640178f9:	dec    ecx
640178fa:	cmp    BYTE PTR [eax],0x0
640178fd:	je     0x64017904
640178ff:	inc    eax
64017900:	cmp    ecx,esi
64017902:	jne    0x640178f9
64017904:	sub    eax,DWORD PTR [ebp-0x24]
64017907:	mov    DWORD PTR [ebp-0x28],eax
6401790a:	cmp    DWORD PTR [ebp-0x50],0x0
6401790e:	jne    0x64017a0f
64017914:	mov    eax,DWORD PTR [ebp-0x18]
64017917:	test   al,0x40
64017919:	je     0x64017940
6401791b:	test   ax,0x100
6401791f:	je     0x64017927
64017921:	mov    BYTE PTR [ebp-0x38],0x2d
64017925:	jmp    0x64017939
64017927:	test   al,0x1
64017929:	je     0x64017931
6401792b:	mov    BYTE PTR [ebp-0x38],0x2b
6401792f:	jmp    0x64017939
64017931:	test   al,0x2
64017933:	je     0x64017940
64017935:	mov    BYTE PTR [ebp-0x38],0x20
64017939:	mov    DWORD PTR [ebp-0x3c],0x1
64017940:	mov    ebx,DWORD PTR [ebp-0x40]
64017943:	sub    ebx,DWORD PTR [ebp-0x28]
64017946:	sub    ebx,DWORD PTR [ebp-0x3c]
64017949:	test   BYTE PTR [ebp-0x18],0xc
6401794d:	jne    0x64017960
6401794f:	push   DWORD PTR [ebp-0x30]
64017952:	lea    eax,[ebp-0x34]
64017955:	push   ebx
64017956:	push   0x20
64017958:	call   0x64017098
6401795d:	add    esp,0xc
64017960:	push   DWORD PTR [ebp-0x3c]
64017963:	mov    edi,DWORD PTR [ebp-0x30]
64017966:	lea    eax,[ebp-0x34]
64017969:	lea    ecx,[ebp-0x38]
6401796c:	call   0x640170bc
64017971:	test   BYTE PTR [ebp-0x18],0x8
64017975:	pop    ecx
64017976:	je     0x6401798d
64017978:	test   BYTE PTR [ebp-0x18],0x4
6401797c:	jne    0x6401798d
6401797e:	push   edi
6401797f:	push   ebx
64017980:	push   0x30
64017982:	lea    eax,[ebp-0x34]
64017985:	call   0x64017098
6401798a:	add    esp,0xc
6401798d:	cmp    DWORD PTR [ebp-0x44],0x0
64017991:	mov    eax,DWORD PTR [ebp-0x28]
64017994:	je     0x640179e7
64017996:	test   eax,eax
64017998:	jle    0x640179e7
6401799a:	mov    esi,DWORD PTR [ebp-0x24]
6401799d:	mov    DWORD PTR [ebp-0x68],eax
640179a0:	movzx  eax,WORD PTR [esi]
640179a3:	dec    DWORD PTR [ebp-0x68]
640179a6:	push   eax
640179a7:	push   0x6
640179a9:	lea    eax,[ebp+0x1ec]
640179af:	push   eax
640179b0:	lea    eax,[ebp-0x70]
640179b3:	inc    esi
640179b4:	push   eax
640179b5:	inc    esi
640179b6:	call   0x6401bc11
640179bb:	add    esp,0x10
640179be:	test   eax,eax
640179c0:	jne    0x640179e1
640179c2:	cmp    DWORD PTR [ebp-0x70],eax
640179c5:	je     0x640179e1
640179c7:	push   DWORD PTR [ebp-0x70]
640179ca:	lea    eax,[ebp-0x34]
640179cd:	lea    ecx,[ebp+0x1ec]
640179d3:	call   0x640170bc
640179d8:	cmp    DWORD PTR [ebp-0x68],0x0
640179dc:	pop    ecx
640179dd:	jne    0x640179a0
640179df:	jmp    0x640179f4
640179e1:	or     DWORD PTR [ebp-0x34],0xffffffff
640179e5:	jmp    0x640179f4
640179e7:	mov    ecx,DWORD PTR [ebp-0x24]
640179ea:	push   eax
640179eb:	lea    eax,[ebp-0x34]
640179ee:	call   0x640170bc
640179f3:	pop    ecx
640179f4:	cmp    DWORD PTR [ebp-0x34],0x0
640179f8:	jl     0x64017a0f
640179fa:	test   BYTE PTR [ebp-0x18],0x4
640179fe:	je     0x64017a0f
64017a00:	push   edi
64017a01:	push   ebx
64017a02:	push   0x20
64017a04:	lea    eax,[ebp-0x34]
64017a07:	call   0x64017098
64017a0c:	add    esp,0xc
64017a0f:	cmp    DWORD PTR [ebp-0x54],0x0
64017a13:	je     0x64017a22
64017a15:	push   DWORD PTR [ebp-0x54]
64017a18:	call   0x64011ab6
64017a1d:	and    DWORD PTR [ebp-0x54],0x0
64017a21:	pop    ecx
64017a22:	mov    ebx,DWORD PTR [ebp-0x48]
64017a25:	mov    al,BYTE PTR [ebx]
64017a27:	test   al,al
64017a29:	mov    BYTE PTR [ebp-0x19],al
64017a2c:	je     0x64017a52
64017a2e:	mov    ecx,DWORD PTR [ebp-0x74]
64017a31:	mov    edi,DWORD PTR [ebp-0x2c]
64017a34:	mov    dl,al
64017a36:	jmp    0x64017264
64017a3b:	call   0x640129f0
64017a40:	mov    DWORD PTR [eax],0x16
64017a46:	xor    eax,eax
64017a48:	push   eax
64017a49:	push   eax
64017a4a:	push   eax
64017a4b:	push   eax
64017a4c:	push   eax
64017a4d:	jmp    0x64017176
64017a52:	cmp    BYTE PTR [ebp-0x58],0x0
64017a56:	je     0x64017a5f
64017a58:	mov    eax,DWORD PTR [ebp-0x5c]
64017a5b:	and    DWORD PTR [eax+0x70],0xfffffffd
64017a5f:	mov    eax,DWORD PTR [ebp-0x34]
64017a62:	mov    ecx,DWORD PTR [ebp+0x1f4]
64017a68:	pop    edi
64017a69:	pop    esi
64017a6a:	xor    ecx,ebp
64017a6c:	pop    ebx
64017a6d:	call   0x64010c1e
64017a72:	add    ebp,0x1f8
64017a78:	leave  
64017a79:	ret    
64017a7a:	dec    eax
64017a7b:	je     0x64017a7e
64017a7d:	fs scas eax,DWORD PTR es:[edi]
64017a7f:	jb     0x64017a82
64017a81:	fs retf 0x172
64017a85:	sbb    DWORD PTR fs:[ebx+0x1],esi
64017a89:	fs push ebx
64017a8b:	jae    0x64017a8e
64017a8d:	fs pop ebx
64017a8f:	jae    0x64017a92
64017a91:	fs xchg edx,eax
64017a93:	jae    0x64017a96
64017a95:	mov    dh,BYTE PTR fs:[ecx+eax*1+0x64]
64017a9a:	push   ebp
64017a9b:	mov    ebp,esp
64017a9d:	sub    esp,0x20
64017aa0:	push   ebx
64017aa1:	xor    ebx,ebx
64017aa3:	cmp    DWORD PTR [ebp+0x14],ebx
64017aa6:	jne    0x64017ac8
64017aa8:	call   0x640129f0
64017aad:	push   ebx
64017aae:	push   ebx
64017aaf:	push   ebx
64017ab0:	push   ebx
64017ab1:	push   ebx
64017ab2:	mov    DWORD PTR [eax],0x16
64017ab8:	call   0x64010756
64017abd:	add    esp,0x14
64017ac0:	or     eax,0xffffffff
64017ac3:	jmp    0x64017b61
64017ac8:	push   esi
64017ac9:	mov    esi,DWORD PTR [ebp+0xc]
64017acc:	push   edi
64017acd:	mov    edi,DWORD PTR [ebp+0x10]
64017ad0:	cmp    edi,ebx
64017ad2:	je     0x64017af5
64017ad4:	cmp    esi,ebx
64017ad6:	jne    0x64017af5
64017ad8:	call   0x640129f0
64017add:	push   ebx
64017ade:	push   ebx
64017adf:	push   ebx
64017ae0:	push   ebx
64017ae1:	push   ebx
64017ae2:	mov    DWORD PTR [eax],0x16
64017ae8:	call   0x64010756
64017aed:	add    esp,0x14
64017af0:	or     eax,0xffffffff
64017af3:	jmp    0x64017b5f
64017af5:	mov    eax,0x7fffffff
64017afa:	cmp    edi,eax
64017afc:	mov    DWORD PTR [ebp-0x1c],eax
64017aff:	ja     0x64017b04
64017b01:	mov    DWORD PTR [ebp-0x1c],edi
64017b04:	push   DWORD PTR [ebp+0x1c]
64017b07:	lea    eax,[ebp-0x20]
64017b0a:	push   DWORD PTR [ebp+0x18]
64017b0d:	mov    DWORD PTR [ebp-0x14],0x42
64017b14:	push   DWORD PTR [ebp+0x14]
64017b17:	mov    DWORD PTR [ebp-0x18],esi
64017b1a:	push   eax
64017b1b:	mov    DWORD PTR [ebp-0x20],esi
64017b1e:	call   DWORD PTR [ebp+0x8]
64017b21:	add    esp,0x10
64017b24:	cmp    esi,ebx
64017b26:	mov    DWORD PTR [ebp+0x14],eax
64017b29:	je     0x64017b5f
64017b2b:	cmp    eax,ebx
64017b2d:	jl     0x64017b51
64017b2f:	dec    DWORD PTR [ebp-0x1c]
64017b32:	js     0x64017b3b
64017b34:	mov    eax,DWORD PTR [ebp-0x20]
64017b37:	mov    BYTE PTR [eax],bl
64017b39:	jmp    0x64017b4c
64017b3b:	lea    eax,[ebp-0x20]
64017b3e:	push   eax
64017b3f:	push   ebx
64017b40:	call   0x64014d35
64017b45:	cmp    eax,0xffffffff
64017b48:	pop    ecx
64017b49:	pop    ecx
64017b4a:	je     0x64017b51
64017b4c:	mov    eax,DWORD PTR [ebp+0x14]
64017b4f:	jmp    0x64017b5f
64017b51:	xor    eax,eax
64017b53:	cmp    DWORD PTR [ebp-0x1c],ebx
64017b56:	mov    BYTE PTR [esi+edi*1-0x1],bl
64017b5a:	setge  al
64017b5d:	dec    eax
64017b5e:	dec    eax
64017b5f:	pop    edi
64017b60:	pop    esi
64017b61:	pop    ebx
64017b62:	leave  
64017b63:	ret    
64017b64:	push   ebp
64017b65:	mov    ebp,esp
64017b67:	push   ebx
64017b68:	xor    ebx,ebx
64017b6a:	cmp    DWORD PTR [ebp+0x10],ebx
64017b6d:	jne    0x64017b8c
64017b6f:	call   0x640129f0
64017b74:	push   ebx
64017b75:	push   ebx
64017b76:	push   ebx
64017b77:	push   ebx
64017b78:	push   ebx
64017b79:	mov    DWORD PTR [eax],0x16
64017b7f:	call   0x64010756
64017b84:	add    esp,0x14
64017b87:	or     eax,0xffffffff
64017b8a:	jmp    0x64017be7
64017b8c:	push   esi
64017b8d:	mov    esi,DWORD PTR [ebp+0x8]
64017b90:	cmp    esi,ebx
64017b92:	je     0x64017b99
64017b94:	cmp    DWORD PTR [ebp+0xc],ebx
64017b97:	ja     0x64017ba6
64017b99:	call   0x640129f0
64017b9e:	mov    DWORD PTR [eax],0x16
64017ba4:	jmp    0x64017bd6
64017ba6:	push   DWORD PTR [ebp+0x18]
64017ba9:	push   DWORD PTR [ebp+0x14]
64017bac:	push   DWORD PTR [ebp+0x10]
64017baf:	push   DWORD PTR [ebp+0xc]
64017bb2:	push   esi
64017bb3:	push   0x6401ade8
64017bb8:	call   0x64017a9a
64017bbd:	add    esp,0x18
64017bc0:	cmp    eax,ebx
64017bc2:	jge    0x64017bc6
64017bc4:	mov    BYTE PTR [esi],bl
64017bc6:	cmp    eax,0xfffffffe
64017bc9:	jne    0x64017be6
64017bcb:	call   0x640129f0
64017bd0:	mov    DWORD PTR [eax],0x22
64017bd6:	push   ebx
64017bd7:	push   ebx
64017bd8:	push   ebx
64017bd9:	push   ebx
64017bda:	push   ebx
64017bdb:	call   0x64010756
64017be0:	add    esp,0x14
64017be3:	or     eax,0xffffffff
64017be6:	pop    esi
64017be7:	pop    ebx
64017be8:	pop    ebp
64017be9:	ret    
64017bea:	push   ebp
64017beb:	mov    ebp,esp
64017bed:	sub    esp,0x18
64017bf0:	push   ebx
64017bf1:	push   DWORD PTR [ebp+0x10]
64017bf4:	lea    ecx,[ebp-0x18]
64017bf7:	call   0x64010dc1
64017bfc:	mov    ebx,DWORD PTR [ebp+0x8]
64017bff:	lea    eax,[ebx+0x1]
64017c02:	cmp    eax,0x100
64017c07:	ja     0x64017c18
64017c09:	mov    eax,DWORD PTR [ebp-0x18]
64017c0c:	mov    eax,DWORD PTR [eax+0xc8]
64017c12:	movzx  eax,WORD PTR [eax+ebx*2]
64017c16:	jmp    0x64017c8d
64017c18:	mov    DWORD PTR [ebp+0x8],ebx
64017c1b:	sar    DWORD PTR [ebp+0x8],0x8
64017c1f:	lea    eax,[ebp-0x18]
64017c22:	push   eax
64017c23:	mov    eax,DWORD PTR [ebp+0x8]
64017c26:	and    eax,0xff
64017c2b:	push   eax
64017c2c:	call   0x64018085
64017c31:	test   eax,eax
64017c33:	pop    ecx
64017c34:	pop    ecx
64017c35:	je     0x64017c49
64017c37:	mov    al,BYTE PTR [ebp+0x8]
64017c3a:	push   0x2
64017c3c:	mov    BYTE PTR [ebp-0x8],al
64017c3f:	mov    BYTE PTR [ebp-0x7],bl
64017c42:	mov    BYTE PTR [ebp-0x6],0x0
64017c46:	pop    ecx
64017c47:	jmp    0x64017c53
64017c49:	xor    ecx,ecx
64017c4b:	mov    BYTE PTR [ebp-0x8],bl
64017c4e:	mov    BYTE PTR [ebp-0x7],0x0
64017c52:	inc    ecx
64017c53:	mov    eax,DWORD PTR [ebp-0x18]
64017c56:	push   0x1
64017c58:	push   DWORD PTR [eax+0x14]
64017c5b:	push   DWORD PTR [eax+0x4]
64017c5e:	lea    eax,[ebp-0x4]
64017c61:	push   eax
64017c62:	push   ecx
64017c63:	lea    eax,[ebp-0x8]
64017c66:	push   eax
64017c67:	lea    eax,[ebp-0x18]
64017c6a:	push   0x1
64017c6c:	push   eax
64017c6d:	call   0x64019b75
64017c72:	add    esp,0x20
64017c75:	test   eax,eax
64017c77:	jne    0x64017c89
64017c79:	cmp    BYTE PTR [ebp-0xc],al
64017c7c:	je     0x64017c85
64017c7e:	mov    eax,DWORD PTR [ebp-0x10]
64017c81:	and    DWORD PTR [eax+0x70],0xfffffffd
64017c85:	xor    eax,eax
64017c87:	jmp    0x64017c9d
64017c89:	movzx  eax,WORD PTR [ebp-0x4]
64017c8d:	and    eax,DWORD PTR [ebp+0xc]
64017c90:	cmp    BYTE PTR [ebp-0xc],0x0
64017c94:	je     0x64017c9d
64017c96:	mov    ecx,DWORD PTR [ebp-0x10]
64017c99:	and    DWORD PTR [ecx+0x70],0xfffffffd
64017c9d:	pop    ebx
64017c9e:	leave  
64017c9f:	ret    
64017ca0:	push   ebp
64017ca1:	mov    ebp,esp
64017ca3:	sub    esp,0x14
64017ca6:	mov    eax,ds:0x64029038
64017cab:	xor    eax,ebp
64017cad:	mov    DWORD PTR [ebp-0x4],eax
64017cb0:	push   ebx
64017cb1:	push   esi
64017cb2:	xor    ebx,ebx
64017cb4:	cmp    DWORD PTR ds:0x6402aa10,ebx
64017cba:	push   edi
64017cbb:	mov    esi,ecx
64017cbd:	jne    0x64017cf7
64017cbf:	push   ebx
64017cc0:	push   ebx
64017cc1:	xor    edi,edi
64017cc3:	inc    edi
64017cc4:	push   edi
64017cc5:	push   0x6402458c
64017cca:	push   0x100
64017ccf:	push   ebx
64017cd0:	call   DWORD PTR ds:0x64022158
64017cd6:	test   eax,eax
64017cd8:	je     0x64017ce2
64017cda:	mov    DWORD PTR ds:0x6402aa10,edi
64017ce0:	jmp    0x64017cf7
64017ce2:	call   DWORD PTR ds:0x64022044
64017ce8:	cmp    eax,0x78
64017ceb:	jne    0x64017cf7
64017ced:	mov    DWORD PTR ds:0x6402aa10,0x2
64017cf7:	cmp    DWORD PTR [ebp+0x14],ebx
64017cfa:	jle    0x64017d1e
64017cfc:	mov    ecx,DWORD PTR [ebp+0x14]
64017cff:	mov    eax,DWORD PTR [ebp+0x10]
64017d02:	dec    ecx
64017d03:	cmp    BYTE PTR [eax],bl
64017d05:	je     0x64017d0f
64017d07:	inc    eax
64017d08:	cmp    ecx,ebx
64017d0a:	jne    0x64017d02
64017d0c:	or     ecx,0xffffffff
64017d0f:	mov    eax,DWORD PTR [ebp+0x14]
64017d12:	sub    eax,ecx
64017d14:	dec    eax
64017d15:	cmp    eax,DWORD PTR [ebp+0x14]
64017d18:	jge    0x64017d1b
64017d1a:	inc    eax
64017d1b:	mov    DWORD PTR [ebp+0x14],eax
64017d1e:	mov    eax,ds:0x6402aa10
64017d23:	cmp    eax,0x2
64017d26:	je     0x64017ed7
64017d2c:	cmp    eax,ebx
64017d2e:	je     0x64017ed7
64017d34:	cmp    eax,0x1
64017d37:	jne    0x64017f08
64017d3d:	cmp    DWORD PTR [ebp+0x20],ebx
64017d40:	mov    DWORD PTR [ebp-0x8],ebx
64017d43:	jne    0x64017d4d
64017d45:	mov    eax,DWORD PTR [esi]
64017d47:	mov    eax,DWORD PTR [eax+0x4]
64017d4a:	mov    DWORD PTR [ebp+0x20],eax
64017d4d:	mov    esi,DWORD PTR ds:0x6402203c
64017d53:	xor    eax,eax
64017d55:	cmp    DWORD PTR [ebp+0x24],ebx
64017d58:	push   ebx
64017d59:	push   ebx
64017d5a:	push   DWORD PTR [ebp+0x14]
64017d5d:	setne  al
64017d60:	push   DWORD PTR [ebp+0x10]
64017d63:	lea    eax,[eax*8+0x1]
64017d6a:	push   eax
64017d6b:	push   DWORD PTR [ebp+0x20]
64017d6e:	call   esi
64017d70:	mov    edi,eax
64017d72:	cmp    edi,ebx
64017d74:	je     0x64017f08
64017d7a:	jle    0x64017dbf
64017d7c:	push   0xffffffe0
64017d7e:	xor    edx,edx
64017d80:	pop    eax
64017d81:	div    edi
64017d83:	cmp    eax,0x2
64017d86:	jb     0x64017dbf
64017d88:	lea    eax,[edi+edi*1+0x8]
64017d8c:	cmp    eax,0x400
64017d91:	ja     0x64017da6
64017d93:	call   0x640113a0
64017d98:	mov    eax,esp
64017d9a:	cmp    eax,ebx
64017d9c:	je     0x64017dba
64017d9e:	mov    DWORD PTR [eax],0xcccc
64017da4:	jmp    0x64017db7
64017da6:	push   eax
64017da7:	call   0x64011b93
64017dac:	cmp    eax,ebx
64017dae:	pop    ecx
64017daf:	je     0x64017dba
64017db1:	mov    DWORD PTR [eax],0xdddd
64017db7:	add    eax,0x8
64017dba:	mov    DWORD PTR [ebp-0xc],eax
64017dbd:	jmp    0x64017dc2
64017dbf:	mov    DWORD PTR [ebp-0xc],ebx
64017dc2:	cmp    DWORD PTR [ebp-0xc],ebx
64017dc5:	je     0x64017f08
64017dcb:	push   edi
64017dcc:	push   DWORD PTR [ebp-0xc]
64017dcf:	push   DWORD PTR [ebp+0x14]
64017dd2:	push   DWORD PTR [ebp+0x10]
64017dd5:	push   0x1
64017dd7:	push   DWORD PTR [ebp+0x20]
64017dda:	call   esi
64017ddc:	test   eax,eax
64017dde:	je     0x64017ec6
64017de4:	mov    esi,DWORD PTR ds:0x64022158
64017dea:	push   ebx
64017deb:	push   ebx
64017dec:	push   edi
64017ded:	push   DWORD PTR [ebp-0xc]
64017df0:	push   DWORD PTR [ebp+0xc]
64017df3:	push   DWORD PTR [ebp+0x8]
64017df6:	call   esi
64017df8:	mov    ecx,eax
64017dfa:	cmp    ecx,ebx
64017dfc:	mov    DWORD PTR [ebp-0x8],ecx
64017dff:	je     0x64017ec6
64017e05:	test   WORD PTR [ebp+0xc],0x400
64017e0b:	je     0x64017e36
64017e0d:	cmp    DWORD PTR [ebp+0x1c],ebx
64017e10:	je     0x64017ec6
64017e16:	cmp    ecx,DWORD PTR [ebp+0x1c]
64017e19:	jg     0x64017ec6
64017e1f:	push   DWORD PTR [ebp+0x1c]
64017e22:	push   DWORD PTR [ebp+0x18]
64017e25:	push   edi
64017e26:	push   DWORD PTR [ebp-0xc]
64017e29:	push   DWORD PTR [ebp+0xc]
64017e2c:	push   DWORD PTR [ebp+0x8]
64017e2f:	call   esi
64017e31:	jmp    0x64017ec6
64017e36:	cmp    ecx,ebx
64017e38:	jle    0x64017e7f
64017e3a:	push   0xffffffe0
64017e3c:	xor    edx,edx
64017e3e:	pop    eax
64017e3f:	div    ecx
64017e41:	cmp    eax,0x2
64017e44:	jb     0x64017e7f
64017e46:	lea    eax,[ecx+ecx*1+0x8]
64017e4a:	cmp    eax,0x400
64017e4f:	ja     0x64017e67
64017e51:	call   0x640113a0
64017e56:	mov    esi,esp
64017e58:	cmp    esi,ebx
64017e5a:	je     0x64017ec6
64017e5c:	mov    DWORD PTR [esi],0xcccc
64017e62:	add    esi,0x8
64017e65:	jmp    0x64017e81
64017e67:	push   eax
64017e68:	call   0x64011b93
64017e6d:	cmp    eax,ebx
64017e6f:	pop    ecx
64017e70:	je     0x64017e7b
64017e72:	mov    DWORD PTR [eax],0xdddd
64017e78:	add    eax,0x8
64017e7b:	mov    esi,eax
64017e7d:	jmp    0x64017e81
64017e7f:	xor    esi,esi
64017e81:	cmp    esi,ebx
64017e83:	je     0x64017ec6
64017e85:	push   DWORD PTR [ebp-0x8]
64017e88:	push   esi
64017e89:	push   edi
64017e8a:	push   DWORD PTR [ebp-0xc]
64017e8d:	push   DWORD PTR [ebp+0xc]
64017e90:	push   DWORD PTR [ebp+0x8]
64017e93:	call   DWORD PTR ds:0x64022158
64017e99:	test   eax,eax
64017e9b:	je     0x64017ebf
64017e9d:	cmp    DWORD PTR [ebp+0x1c],ebx
64017ea0:	push   ebx
64017ea1:	push   ebx
64017ea2:	jne    0x64017ea8
64017ea4:	push   ebx
64017ea5:	push   ebx
64017ea6:	jmp    0x64017eae
64017ea8:	push   DWORD PTR [ebp+0x1c]
64017eab:	push   DWORD PTR [ebp+0x18]
64017eae:	push   DWORD PTR [ebp-0x8]
64017eb1:	push   esi
64017eb2:	push   ebx
64017eb3:	push   DWORD PTR [ebp+0x20]
64017eb6:	call   DWORD PTR ds:0x64022024
64017ebc:	mov    DWORD PTR [ebp-0x8],eax
64017ebf:	push   esi
64017ec0:	call   0x6401112e
64017ec5:	pop    ecx
64017ec6:	push   DWORD PTR [ebp-0xc]
64017ec9:	call   0x6401112e
64017ece:	mov    eax,DWORD PTR [ebp-0x8]
64017ed1:	pop    ecx
64017ed2:	jmp    0x64018030
64017ed7:	cmp    DWORD PTR [ebp+0x8],ebx
64017eda:	mov    DWORD PTR [ebp-0xc],ebx
64017edd:	mov    DWORD PTR [ebp-0x10],ebx
64017ee0:	jne    0x64017eea
64017ee2:	mov    eax,DWORD PTR [esi]
64017ee4:	mov    eax,DWORD PTR [eax+0x14]
64017ee7:	mov    DWORD PTR [ebp+0x8],eax
64017eea:	cmp    DWORD PTR [ebp+0x20],ebx
64017eed:	jne    0x64017ef7
64017eef:	mov    eax,DWORD PTR [esi]
64017ef1:	mov    eax,DWORD PTR [eax+0x4]
64017ef4:	mov    DWORD PTR [ebp+0x20],eax
64017ef7:	push   DWORD PTR [ebp+0x8]
64017efa:	call   0x6401b798
64017eff:	cmp    eax,0xffffffff
64017f02:	pop    ecx
64017f03:	mov    DWORD PTR [ebp-0x14],eax
64017f06:	jne    0x64017f0f
64017f08:	xor    eax,eax
64017f0a:	jmp    0x64018030
64017f0f:	cmp    eax,DWORD PTR [ebp+0x20]
64017f12:	je     0x64017ff3
64017f18:	push   ebx
64017f19:	push   ebx
64017f1a:	lea    ecx,[ebp+0x14]
64017f1d:	push   ecx
64017f1e:	push   DWORD PTR [ebp+0x10]
64017f21:	push   eax
64017f22:	push   DWORD PTR [ebp+0x20]
64017f25:	call   0x6401b7df
64017f2a:	add    esp,0x18
64017f2d:	cmp    eax,ebx
64017f2f:	mov    DWORD PTR [ebp-0xc],eax
64017f32:	je     0x64017f08
64017f34:	mov    esi,DWORD PTR ds:0x64022154
64017f3a:	push   ebx
64017f3b:	push   ebx
64017f3c:	push   DWORD PTR [ebp+0x14]
64017f3f:	push   eax
64017f40:	push   DWORD PTR [ebp+0xc]
64017f43:	push   DWORD PTR [ebp+0x8]
64017f46:	call   esi
64017f48:	cmp    eax,ebx
64017f4a:	mov    DWORD PTR [ebp-0x8],eax
64017f4d:	jne    0x64017f56
64017f4f:	xor    esi,esi
64017f51:	jmp    0x6401800d
64017f56:	jle    0x64017f95
64017f58:	cmp    eax,0xffffffe0
64017f5b:	ja     0x64017f95
64017f5d:	add    eax,0x8
64017f60:	cmp    eax,0x400
64017f65:	ja     0x64017f7d
64017f67:	call   0x640113a0
64017f6c:	mov    edi,esp
64017f6e:	cmp    edi,ebx
64017f70:	je     0x64017f4f
64017f72:	mov    DWORD PTR [edi],0xcccc
64017f78:	add    edi,0x8
64017f7b:	jmp    0x64017f97
64017f7d:	push   eax
64017f7e:	call   0x64011b93
64017f83:	cmp    eax,ebx
64017f85:	pop    ecx
64017f86:	je     0x64017f91
64017f88:	mov    DWORD PTR [eax],0xdddd
64017f8e:	add    eax,0x8
64017f91:	mov    edi,eax
64017f93:	jmp    0x64017f97
64017f95:	xor    edi,edi
64017f97:	cmp    edi,ebx
64017f99:	je     0x64017f4f
64017f9b:	push   DWORD PTR [ebp-0x8]
64017f9e:	push   ebx
64017f9f:	push   edi
64017fa0:	call   0x64011320
64017fa5:	add    esp,0xc
64017fa8:	push   DWORD PTR [ebp-0x8]
64017fab:	push   edi
64017fac:	push   DWORD PTR [ebp+0x14]
64017faf:	push   DWORD PTR [ebp-0xc]
64017fb2:	push   DWORD PTR [ebp+0xc]
64017fb5:	push   DWORD PTR [ebp+0x8]
64017fb8:	call   esi
64017fba:	cmp    eax,ebx
64017fbc:	mov    DWORD PTR [ebp-0x8],eax
64017fbf:	jne    0x64017fc5
64017fc1:	xor    esi,esi
64017fc3:	jmp    0x64017fea
64017fc5:	push   DWORD PTR [ebp+0x1c]
64017fc8:	lea    eax,[ebp-0x8]
64017fcb:	push   DWORD PTR [ebp+0x18]
64017fce:	push   eax
64017fcf:	push   edi
64017fd0:	push   DWORD PTR [ebp+0x20]
64017fd3:	push   DWORD PTR [ebp-0x14]
64017fd6:	call   0x6401b7df
64017fdb:	mov    esi,eax
64017fdd:	mov    DWORD PTR [ebp-0x10],esi
64017fe0:	add    esp,0x18
64017fe3:	neg    esi
64017fe5:	sbb    esi,esi
64017fe7:	and    esi,DWORD PTR [ebp-0x8]
64017fea:	push   edi
64017feb:	call   0x6401112e
64017ff0:	pop    ecx
64017ff1:	jmp    0x6401800d
64017ff3:	push   DWORD PTR [ebp+0x1c]
64017ff6:	push   DWORD PTR [ebp+0x18]
64017ff9:	push   DWORD PTR [ebp+0x14]
64017ffc:	push   DWORD PTR [ebp+0x10]
64017fff:	push   DWORD PTR [ebp+0xc]
64018002:	push   DWORD PTR [ebp+0x8]
64018005:	call   DWORD PTR ds:0x64022154
6401800b:	mov    esi,eax
6401800d:	cmp    DWORD PTR [ebp-0xc],ebx
64018010:	je     0x6401801b
64018012:	push   DWORD PTR [ebp-0xc]
64018015:	call   0x64011ab6
6401801a:	pop    ecx
6401801b:	mov    eax,DWORD PTR [ebp-0x10]
6401801e:	cmp    eax,ebx
64018020:	je     0x6401802e
64018022:	cmp    DWORD PTR [ebp+0x18],eax
64018025:	je     0x6401802e
64018027:	push   eax
64018028:	call   0x64011ab6
6401802d:	pop    ecx
6401802e:	mov    eax,esi
64018030:	lea    esp,[ebp-0x20]
64018033:	pop    edi
64018034:	pop    esi
64018035:	pop    ebx
64018036:	mov    ecx,DWORD PTR [ebp-0x4]
64018039:	xor    ecx,ebp
6401803b:	call   0x64010c1e
64018040:	leave  
64018041:	ret    
64018042:	push   ebp
64018043:	mov    ebp,esp
64018045:	sub    esp,0x10
64018048:	push   DWORD PTR [ebp+0x8]
6401804b:	lea    ecx,[ebp-0x10]
6401804e:	call   0x64010dc1
64018053:	push   DWORD PTR [ebp+0x28]
64018056:	lea    ecx,[ebp-0x10]
64018059:	push   DWORD PTR [ebp+0x24]
6401805c:	push   DWORD PTR [ebp+0x20]
6401805f:	push   DWORD PTR [ebp+0x1c]
64018062:	push   DWORD PTR [ebp+0x18]
64018065:	push   DWORD PTR [ebp+0x14]
64018068:	push   DWORD PTR [ebp+0x10]
6401806b:	push   DWORD PTR [ebp+0xc]
6401806e:	call   0x64017ca0
64018073:	add    esp,0x20
64018076:	cmp    BYTE PTR [ebp-0x4],0x0
6401807a:	je     0x64018083
6401807c:	mov    ecx,DWORD PTR [ebp-0x8]
6401807f:	and    DWORD PTR [ecx+0x70],0xfffffffd
64018083:	leave  
64018084:	ret    
64018085:	push   ebp
64018086:	mov    ebp,esp
64018088:	sub    esp,0x10
6401808b:	push   DWORD PTR [ebp+0xc]
6401808e:	lea    ecx,[ebp-0x10]
64018091:	call   0x64010dc1
64018096:	movzx  eax,BYTE PTR [ebp+0x8]
6401809a:	mov    ecx,DWORD PTR [ebp-0x10]
6401809d:	mov    ecx,DWORD PTR [ecx+0xc8]
640180a3:	movzx  eax,WORD PTR [ecx+eax*2]
640180a7:	and    eax,0x8000
640180ac:	cmp    BYTE PTR [ebp-0x4],0x0
640180b0:	je     0x640180b9
640180b2:	mov    ecx,DWORD PTR [ebp-0x8]
640180b5:	and    DWORD PTR [ecx+0x70],0xfffffffd
640180b9:	leave  
640180ba:	ret    
640180bb:	push   0x0
640180bd:	push   DWORD PTR [esp+0x8]
640180c1:	call   0x64018085
640180c6:	pop    ecx
640180c7:	pop    ecx
640180c8:	ret    
640180c9:	push   esi
640180ca:	push   edi
640180cb:	xor    esi,esi
640180cd:	mov    edi,0x6402aa18
640180d2:	cmp    DWORD PTR [esi*8+0x640298ec],0x1
640180da:	jne    0x640180fa
640180dc:	lea    eax,[esi*8+0x640298e8]
640180e3:	mov    DWORD PTR [eax],edi
640180e5:	push   0xfa0
640180ea:	push   DWORD PTR [eax]
640180ec:	add    edi,0x18
640180ef:	call   0x640198f8
640180f4:	test   eax,eax
640180f6:	pop    ecx
640180f7:	pop    ecx
640180f8:	je     0x64018106
640180fa:	inc    esi
640180fb:	cmp    esi,0x24
640180fe:	jl     0x640180d2
64018100:	xor    eax,eax
64018102:	inc    eax
64018103:	pop    edi
64018104:	pop    esi
64018105:	ret    
64018106:	and    DWORD PTR [esi*8+0x640298e8],0x0
6401810e:	xor    eax,eax
64018110:	jmp    0x64018103
64018112:	push   ebx
64018113:	mov    ebx,DWORD PTR ds:0x640220a0
64018119:	push   esi
6401811a:	mov    esi,0x640298e8
6401811f:	push   edi
64018120:	mov    edi,DWORD PTR [esi]
64018122:	test   edi,edi
64018124:	je     0x64018139
64018126:	cmp    DWORD PTR [esi+0x4],0x1
6401812a:	je     0x64018139
6401812c:	push   edi
6401812d:	call   ebx
6401812f:	push   edi
64018130:	call   0x64011ab6
64018135:	and    DWORD PTR [esi],0x0
64018138:	pop    ecx
64018139:	add    esi,0x8
6401813c:	cmp    esi,0x64029a08
64018142:	jl     0x64018120
64018144:	mov    esi,0x640298e8
64018149:	pop    edi
6401814a:	mov    eax,DWORD PTR [esi]
6401814c:	test   eax,eax
6401814e:	je     0x64018159
64018150:	cmp    DWORD PTR [esi+0x4],0x1
64018154:	jne    0x64018159
64018156:	push   eax
64018157:	call   ebx
64018159:	add    esi,0x8
6401815c:	cmp    esi,0x64029a08
64018162:	jl     0x6401814a
64018164:	pop    esi
64018165:	pop    ebx
64018166:	ret    
64018167:	push   ebp
64018168:	mov    ebp,esp
6401816a:	mov    eax,DWORD PTR [ebp+0x8]
6401816d:	push   DWORD PTR [eax*8+0x640298e8]
64018174:	call   DWORD PTR ds:0x6402209c
6401817a:	pop    ebp
6401817b:	ret    
6401817c:	push   0xc
6401817e:	push   0x64026be0
64018183:	call   0x64011fc8
64018188:	xor    edi,edi
6401818a:	inc    edi
6401818b:	mov    DWORD PTR [ebp-0x1c],edi
6401818e:	xor    ebx,ebx
64018190:	cmp    DWORD PTR ds:0x6402aa0c,ebx
64018196:	jne    0x640181b0
64018198:	call   0x64018f0f
6401819d:	push   0x1e
6401819f:	call   0x64018d6f
640181a4:	push   0xff
640181a9:	call   0x640140c0
640181ae:	pop    ecx
640181af:	pop    ecx
640181b0:	mov    esi,DWORD PTR [ebp+0x8]
640181b3:	lea    esi,[esi*8+0x640298e8]
640181ba:	cmp    DWORD PTR [esi],ebx
640181bc:	je     0x640181c2
640181be:	mov    eax,edi
640181c0:	jmp    0x64018230
640181c2:	push   0x18
640181c4:	call   0x64013f00
640181c9:	pop    ecx
640181ca:	mov    edi,eax
640181cc:	cmp    edi,ebx
640181ce:	jne    0x640181df
640181d0:	call   0x640129f0
640181d5:	mov    DWORD PTR [eax],0xc
640181db:	xor    eax,eax
640181dd:	jmp    0x64018230
640181df:	push   0xa
640181e1:	call   0x6401823f
640181e6:	pop    ecx
640181e7:	mov    DWORD PTR [ebp-0x4],ebx
640181ea:	cmp    DWORD PTR [esi],ebx
640181ec:	jne    0x6401821a
640181ee:	push   0xfa0
640181f3:	push   edi
640181f4:	call   0x640198f8
640181f9:	pop    ecx
640181fa:	pop    ecx
640181fb:	test   eax,eax
640181fd:	jne    0x64018216
640181ff:	push   edi
64018200:	call   0x64011ab6
64018205:	pop    ecx
64018206:	call   0x640129f0
6401820b:	mov    DWORD PTR [eax],0xc
64018211:	mov    DWORD PTR [ebp-0x1c],ebx
64018214:	jmp    0x64018221
64018216:	mov    DWORD PTR [esi],edi
64018218:	jmp    0x64018221
6401821a:	push   edi
6401821b:	call   0x64011ab6
64018220:	pop    ecx
64018221:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64018228:	call   0x64018236
6401822d:	mov    eax,DWORD PTR [ebp-0x1c]
64018230:	call   0x6401200d
64018235:	ret    
64018236:	push   0xa
64018238:	call   0x64018167
6401823d:	pop    ecx
6401823e:	ret    
6401823f:	push   ebp
64018240:	mov    ebp,esp
64018242:	mov    eax,DWORD PTR [ebp+0x8]
64018245:	push   esi
64018246:	lea    esi,[eax*8+0x640298e8]
6401824d:	cmp    DWORD PTR [esi],0x0
64018250:	jne    0x64018265
64018252:	push   eax
64018253:	call   0x6401817c
64018258:	test   eax,eax
6401825a:	pop    ecx
6401825b:	jne    0x64018265
6401825d:	push   0x11
6401825f:	call   0x64014076
64018264:	pop    ecx
64018265:	push   DWORD PTR [esi]
64018267:	call   DWORD PTR ds:0x64022098
6401826d:	pop    esi
6401826e:	pop    ebp
6401826f:	ret    
64018270:	push   0x140
64018275:	push   0x0
64018277:	push   DWORD PTR ds:0x6402aa0c
6401827d:	call   DWORD PTR ds:0x64022100
64018283:	test   eax,eax
64018285:	mov    ds:0x6402e468,eax
6401828a:	jne    0x6401828d
6401828c:	ret    
6401828d:	mov    ecx,DWORD PTR [esp+0x4]
64018291:	and    DWORD PTR ds:0x6402ab68,0x0
64018298:	and    DWORD PTR ds:0x6402e464,0x0
6401829f:	mov    ds:0x6402e470,eax
640182a4:	xor    eax,eax
640182a6:	mov    DWORD PTR ds:0x6402e46c,ecx
640182ac:	mov    DWORD PTR ds:0x6402e474,0x10
640182b6:	inc    eax
640182b7:	ret    
640182b8:	mov    ecx,DWORD PTR ds:0x6402e464
640182be:	mov    eax,ds:0x6402e468
640182c3:	imul   ecx,ecx,0x14
640182c6:	add    ecx,eax
640182c8:	jmp    0x640182dc
640182ca:	mov    edx,DWORD PTR [esp+0x4]
640182ce:	sub    edx,DWORD PTR [eax+0xc]
640182d1:	cmp    edx,0x100000
640182d7:	jb     0x640182e2
640182d9:	add    eax,0x14
640182dc:	cmp    eax,ecx
640182de:	jb     0x640182ca
640182e0:	xor    eax,eax
640182e2:	ret    
640182e3:	push   ebp
640182e4:	mov    ebp,esp
640182e6:	sub    esp,0x10
640182e9:	mov    ecx,DWORD PTR [ebp+0x8]
640182ec:	mov    eax,DWORD PTR [ecx+0x10]
640182ef:	push   esi
640182f0:	mov    esi,DWORD PTR [ebp+0xc]
640182f3:	push   edi
640182f4:	mov    edi,esi
640182f6:	sub    edi,DWORD PTR [ecx+0xc]
640182f9:	add    esi,0xfffffffc
640182fc:	shr    edi,0xf
640182ff:	mov    ecx,edi
64018301:	imul   ecx,ecx,0x204
64018307:	lea    ecx,[ecx+eax*1+0x144]
6401830e:	mov    DWORD PTR [ebp-0x10],ecx
64018311:	mov    ecx,DWORD PTR [esi]
64018313:	dec    ecx
64018314:	test   cl,0x1
64018317:	mov    DWORD PTR [ebp-0x4],ecx
6401831a:	jne    0x640185f3
64018320:	push   ebx
64018321:	lea    ebx,[ecx+esi*1]
64018324:	mov    edx,DWORD PTR [ebx]
64018326:	mov    DWORD PTR [ebp-0xc],edx
64018329:	mov    edx,DWORD PTR [esi-0x4]
6401832c:	mov    DWORD PTR [ebp-0x8],edx
6401832f:	mov    edx,DWORD PTR [ebp-0xc]
64018332:	test   dl,0x1
64018335:	mov    DWORD PTR [ebp+0xc],ebx
64018338:	jne    0x640183ae
6401833a:	sar    edx,0x4
6401833d:	dec    edx
6401833e:	cmp    edx,0x3f
64018341:	jbe    0x64018346
64018343:	push   0x3f
64018345:	pop    edx
64018346:	mov    ecx,DWORD PTR [ebx+0x4]
64018349:	cmp    ecx,DWORD PTR [ebx+0x8]
6401834c:	jne    0x64018390
6401834e:	cmp    edx,0x20
64018351:	mov    ebx,0x80000000
64018356:	jae    0x64018371
64018358:	mov    ecx,edx
6401835a:	shr    ebx,cl
6401835c:	lea    ecx,[edx+eax*1+0x4]
64018360:	not    ebx
64018362:	and    DWORD PTR [eax+edi*4+0x44],ebx
64018366:	dec    BYTE PTR [ecx]
64018368:	jne    0x6401838d
6401836a:	mov    ecx,DWORD PTR [ebp+0x8]
6401836d:	and    DWORD PTR [ecx],ebx
6401836f:	jmp    0x6401838d
64018371:	lea    ecx,[edx-0x20]
64018374:	shr    ebx,cl
64018376:	lea    ecx,[edx+eax*1+0x4]
6401837a:	not    ebx
6401837c:	and    DWORD PTR [eax+edi*4+0xc4],ebx
64018383:	dec    BYTE PTR [ecx]
64018385:	jne    0x6401838d
64018387:	mov    ecx,DWORD PTR [ebp+0x8]
6401838a:	and    DWORD PTR [ecx+0x4],ebx
6401838d:	mov    ebx,DWORD PTR [ebp+0xc]
64018390:	mov    edx,DWORD PTR [ebx+0x8]
64018393:	mov    ebx,DWORD PTR [ebx+0x4]
64018396:	mov    ecx,DWORD PTR [ebp-0x4]
64018399:	add    ecx,DWORD PTR [ebp-0xc]
6401839c:	mov    DWORD PTR [edx+0x4],ebx
6401839f:	mov    edx,DWORD PTR [ebp+0xc]
640183a2:	mov    ebx,DWORD PTR [edx+0x4]
640183a5:	mov    edx,DWORD PTR [edx+0x8]
640183a8:	mov    DWORD PTR [ebx+0x8],edx
640183ab:	mov    DWORD PTR [ebp-0x4],ecx
640183ae:	mov    edx,ecx
640183b0:	sar    edx,0x4
640183b3:	dec    edx
640183b4:	cmp    edx,0x3f
640183b7:	jbe    0x640183bc
640183b9:	push   0x3f
640183bb:	pop    edx
640183bc:	mov    ebx,DWORD PTR [ebp-0x8]
640183bf:	and    ebx,0x1
640183c2:	mov    DWORD PTR [ebp-0xc],ebx
640183c5:	jne    0x6401845a
640183cb:	sub    esi,DWORD PTR [ebp-0x8]
640183ce:	mov    ebx,DWORD PTR [ebp-0x8]
640183d1:	sar    ebx,0x4
640183d4:	push   0x3f
640183d6:	mov    DWORD PTR [ebp+0xc],esi
640183d9:	dec    ebx
640183da:	pop    esi
640183db:	cmp    ebx,esi
640183dd:	jbe    0x640183e1
640183df:	mov    ebx,esi
640183e1:	add    ecx,DWORD PTR [ebp-0x8]
640183e4:	mov    edx,ecx
640183e6:	sar    edx,0x4
640183e9:	dec    edx
640183ea:	cmp    edx,esi
640183ec:	mov    DWORD PTR [ebp-0x4],ecx
640183ef:	jbe    0x640183f3
640183f1:	mov    edx,esi
640183f3:	cmp    ebx,edx
640183f5:	je     0x64018455
640183f7:	mov    ecx,DWORD PTR [ebp+0xc]
640183fa:	mov    esi,DWORD PTR [ecx+0x4]
640183fd:	cmp    esi,DWORD PTR [ecx+0x8]
64018400:	jne    0x6401843d
64018402:	cmp    ebx,0x20
64018405:	mov    esi,0x80000000
6401840a:	jae    0x64018423
6401840c:	mov    ecx,ebx
6401840e:	shr    esi,cl
64018410:	not    esi
64018412:	and    DWORD PTR [eax+edi*4+0x44],esi
64018416:	dec    BYTE PTR [ebx+eax*1+0x4]
6401841a:	jne    0x6401843d
6401841c:	mov    ecx,DWORD PTR [ebp+0x8]
6401841f:	and    DWORD PTR [ecx],esi
64018421:	jmp    0x6401843d
64018423:	lea    ecx,[ebx-0x20]
64018426:	shr    esi,cl
64018428:	not    esi
6401842a:	and    DWORD PTR [eax+edi*4+0xc4],esi
64018431:	dec    BYTE PTR [ebx+eax*1+0x4]
64018435:	jne    0x6401843d
64018437:	mov    ecx,DWORD PTR [ebp+0x8]
6401843a:	and    DWORD PTR [ecx+0x4],esi
6401843d:	mov    ecx,DWORD PTR [ebp+0xc]
64018440:	mov    esi,DWORD PTR [ecx+0x8]
64018443:	mov    ecx,DWORD PTR [ecx+0x4]
64018446:	mov    DWORD PTR [esi+0x4],ecx
64018449:	mov    ecx,DWORD PTR [ebp+0xc]
6401844c:	mov    esi,DWORD PTR [ecx+0x4]
6401844f:	mov    ecx,DWORD PTR [ecx+0x8]
64018452:	mov    DWORD PTR [esi+0x8],ecx
64018455:	mov    esi,DWORD PTR [ebp+0xc]
64018458:	jmp    0x6401845d
6401845a:	mov    ebx,DWORD PTR [ebp+0x8]
6401845d:	cmp    DWORD PTR [ebp-0xc],0x0
64018461:	jne    0x6401846b
64018463:	cmp    ebx,edx
64018465:	je     0x640184eb
6401846b:	mov    ecx,DWORD PTR [ebp-0x10]
6401846e:	lea    ecx,[ecx+edx*8]
64018471:	mov    ebx,DWORD PTR [ecx+0x4]
64018474:	mov    DWORD PTR [esi+0x8],ecx
64018477:	mov    DWORD PTR [esi+0x4],ebx
6401847a:	mov    DWORD PTR [ecx+0x4],esi
6401847d:	mov    ecx,DWORD PTR [esi+0x4]
64018480:	mov    DWORD PTR [ecx+0x8],esi
64018483:	mov    ecx,DWORD PTR [esi+0x4]
64018486:	cmp    ecx,DWORD PTR [esi+0x8]
64018489:	jne    0x640184eb
6401848b:	mov    cl,BYTE PTR [edx+eax*1+0x4]
6401848f:	mov    BYTE PTR [ebp+0xf],cl
64018492:	inc    cl
64018494:	cmp    edx,0x20
64018497:	mov    BYTE PTR [edx+eax*1+0x4],cl
6401849b:	jae    0x640184c2
6401849d:	cmp    BYTE PTR [ebp+0xf],0x0
640184a1:	jne    0x640184b1
640184a3:	mov    ecx,edx
640184a5:	mov    ebx,0x80000000
640184aa:	shr    ebx,cl
640184ac:	mov    ecx,DWORD PTR [ebp+0x8]
640184af:	or     DWORD PTR [ecx],ebx
640184b1:	mov    ebx,0x80000000
640184b6:	mov    ecx,edx
640184b8:	shr    ebx,cl
640184ba:	lea    eax,[eax+edi*4+0x44]
640184be:	or     DWORD PTR [eax],ebx
640184c0:	jmp    0x640184eb
640184c2:	cmp    BYTE PTR [ebp+0xf],0x0
640184c6:	jne    0x640184d8
640184c8:	lea    ecx,[edx-0x20]
640184cb:	mov    ebx,0x80000000
640184d0:	shr    ebx,cl
640184d2:	mov    ecx,DWORD PTR [ebp+0x8]
640184d5:	or     DWORD PTR [ecx+0x4],ebx
640184d8:	lea    ecx,[edx-0x20]
640184db:	mov    edx,0x80000000
640184e0:	shr    edx,cl
640184e2:	lea    eax,[eax+edi*4+0xc4]
640184e9:	or     DWORD PTR [eax],edx
640184eb:	mov    eax,DWORD PTR [ebp-0x4]
640184ee:	mov    DWORD PTR [esi],eax
640184f0:	mov    DWORD PTR [eax+esi*1-0x4],eax
640184f4:	mov    eax,DWORD PTR [ebp-0x10]
640184f7:	dec    DWORD PTR [eax]
640184f9:	jne    0x640185f2
640184ff:	mov    eax,ds:0x6402ab68
64018504:	test   eax,eax
64018506:	je     0x640185e4
6401850c:	mov    ecx,DWORD PTR ds:0x6402e478
64018512:	mov    esi,DWORD PTR ds:0x64022180
64018518:	push   0x4000
6401851d:	shl    ecx,0xf
64018520:	add    ecx,DWORD PTR [eax+0xc]
64018523:	mov    ebx,0x8000
64018528:	push   ebx
64018529:	push   ecx
6401852a:	call   esi
6401852c:	mov    ecx,DWORD PTR ds:0x6402e478
64018532:	mov    eax,ds:0x6402ab68
64018537:	mov    edx,0x80000000
6401853c:	shr    edx,cl
6401853e:	or     DWORD PTR [eax+0x8],edx
64018541:	mov    eax,ds:0x6402ab68
64018546:	mov    eax,DWORD PTR [eax+0x10]
64018549:	mov    ecx,DWORD PTR ds:0x6402e478
6401854f:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
64018557:	mov    eax,ds:0x6402ab68
6401855c:	mov    eax,DWORD PTR [eax+0x10]
6401855f:	dec    BYTE PTR [eax+0x43]
64018562:	mov    eax,ds:0x6402ab68
64018567:	mov    ecx,DWORD PTR [eax+0x10]
6401856a:	cmp    BYTE PTR [ecx+0x43],0x0
6401856e:	jne    0x64018579
64018570:	and    DWORD PTR [eax+0x4],0xfffffffe
64018574:	mov    eax,ds:0x6402ab68
64018579:	cmp    DWORD PTR [eax+0x8],0xffffffff
6401857d:	jne    0x640185e4
6401857f:	push   ebx
64018580:	push   0x0
64018582:	push   DWORD PTR [eax+0xc]
64018585:	call   esi
64018587:	mov    eax,ds:0x6402ab68
6401858c:	push   DWORD PTR [eax+0x10]
6401858f:	push   0x0
64018591:	push   DWORD PTR ds:0x6402aa0c
64018597:	call   DWORD PTR ds:0x64022104
6401859d:	mov    ecx,DWORD PTR ds:0x6402e464
640185a3:	mov    eax,ds:0x6402ab68
640185a8:	imul   ecx,ecx,0x14
640185ab:	mov    edx,DWORD PTR ds:0x6402e468
640185b1:	sub    ecx,eax
640185b3:	lea    ecx,[ecx+edx*1-0x14]
640185b7:	push   ecx
640185b8:	lea    ecx,[eax+0x14]
640185bb:	push   ecx
640185bc:	push   eax
640185bd:	call   0x64011c60
640185c2:	mov    eax,DWORD PTR [ebp+0x8]
640185c5:	add    esp,0xc
640185c8:	dec    DWORD PTR ds:0x6402e464
640185ce:	cmp    eax,DWORD PTR ds:0x6402ab68
640185d4:	jbe    0x640185da
640185d6:	sub    DWORD PTR [ebp+0x8],0x14
640185da:	mov    eax,ds:0x6402e468
640185df:	mov    ds:0x6402e470,eax
640185e4:	mov    eax,DWORD PTR [ebp+0x8]
640185e7:	mov    ds:0x6402ab68,eax
640185ec:	mov    DWORD PTR ds:0x6402e478,edi
640185f2:	pop    ebx
640185f3:	pop    edi
640185f4:	pop    esi
640185f5:	leave  
640185f6:	ret    
640185f7:	mov    eax,ds:0x6402e474
640185fc:	push   esi
640185fd:	mov    esi,DWORD PTR ds:0x6402e464
64018603:	push   edi
64018604:	xor    edi,edi
64018606:	cmp    esi,eax
64018608:	jne    0x6401863e
6401860a:	add    eax,0x10
6401860d:	imul   eax,eax,0x14
64018610:	push   eax
64018611:	push   DWORD PTR ds:0x6402e468
64018617:	push   edi
64018618:	push   DWORD PTR ds:0x6402aa0c
6401861e:	call   DWORD PTR ds:0x64022108
64018624:	cmp    eax,edi
64018626:	jne    0x6401862c
64018628:	xor    eax,eax
6401862a:	jmp    0x640186a4
6401862c:	add    DWORD PTR ds:0x6402e474,0x10
64018633:	mov    esi,DWORD PTR ds:0x6402e464
64018639:	mov    ds:0x6402e468,eax
6401863e:	imul   esi,esi,0x14
64018641:	add    esi,DWORD PTR ds:0x6402e468
64018647:	push   0x41c4
6401864c:	push   0x8
6401864e:	push   DWORD PTR ds:0x6402aa0c
64018654:	call   DWORD PTR ds:0x64022100
6401865a:	cmp    eax,edi
6401865c:	mov    DWORD PTR [esi+0x10],eax
6401865f:	je     0x64018628
64018661:	push   0x4
64018663:	push   0x2000
64018668:	push   0x100000
6401866d:	push   edi
6401866e:	call   DWORD PTR ds:0x640220c8
64018674:	cmp    eax,edi
64018676:	mov    DWORD PTR [esi+0xc],eax
64018679:	jne    0x6401868d
6401867b:	push   DWORD PTR [esi+0x10]
6401867e:	push   edi
6401867f:	push   DWORD PTR ds:0x6402aa0c
64018685:	call   DWORD PTR ds:0x64022104
6401868b:	jmp    0x64018628
6401868d:	or     DWORD PTR [esi+0x8],0xffffffff
64018691:	mov    DWORD PTR [esi],edi
64018693:	mov    DWORD PTR [esi+0x4],edi
64018696:	inc    DWORD PTR ds:0x6402e464
6401869c:	mov    eax,DWORD PTR [esi+0x10]
6401869f:	or     DWORD PTR [eax],0xffffffff
640186a2:	mov    eax,esi
640186a4:	pop    edi
640186a5:	pop    esi
640186a6:	ret    
640186a7:	push   ebp
640186a8:	mov    ebp,esp
640186aa:	push   ecx
640186ab:	push   ecx
640186ac:	mov    ecx,DWORD PTR [ebp+0x8]
640186af:	mov    eax,DWORD PTR [ecx+0x8]
640186b2:	push   ebx
640186b3:	push   esi
640186b4:	mov    esi,DWORD PTR [ecx+0x10]
640186b7:	push   edi
640186b8:	xor    ebx,ebx
640186ba:	jmp    0x640186bf
640186bc:	add    eax,eax
640186be:	inc    ebx
640186bf:	test   eax,eax
640186c1:	jge    0x640186bc
640186c3:	mov    eax,ebx
640186c5:	imul   eax,eax,0x204
640186cb:	lea    eax,[eax+esi*1+0x144]
640186d2:	push   0x3f
640186d4:	mov    DWORD PTR [ebp-0x8],eax
640186d7:	pop    edx
640186d8:	mov    DWORD PTR [eax+0x8],eax
640186db:	mov    DWORD PTR [eax+0x4],eax
640186de:	add    eax,0x8
640186e1:	dec    edx
640186e2:	jne    0x640186d8
640186e4:	push   0x4
640186e6:	mov    edi,ebx
640186e8:	push   0x1000
640186ed:	shl    edi,0xf
640186f0:	add    edi,DWORD PTR [ecx+0xc]
640186f3:	push   0x8000
640186f8:	push   edi
640186f9:	call   DWORD PTR ds:0x640220c8
640186ff:	test   eax,eax
64018701:	jne    0x6401870b
64018703:	or     eax,0xffffffff
64018706:	jmp    0x640187a8
6401870b:	lea    edx,[edi+0x7000]
64018711:	cmp    edi,edx
64018713:	mov    DWORD PTR [ebp-0x4],edx
64018716:	ja     0x6401875b
64018718:	mov    ecx,edx
6401871a:	sub    ecx,edi
6401871c:	shr    ecx,0xc
6401871f:	lea    eax,[edi+0x10]
64018722:	inc    ecx
64018723:	or     DWORD PTR [eax-0x8],0xffffffff
64018727:	or     DWORD PTR [eax+0xfec],0xffffffff
6401872e:	lea    edx,[eax+0xffc]
64018734:	mov    DWORD PTR [eax],edx
64018736:	lea    edx,[eax-0x1004]
6401873c:	mov    DWORD PTR [eax-0x4],0xff0
64018743:	mov    DWORD PTR [eax+0x4],edx
64018746:	mov    DWORD PTR [eax+0xfe8],0xff0
64018750:	add    eax,0x1000
64018755:	dec    ecx
64018756:	jne    0x64018723
64018758:	mov    edx,DWORD PTR [ebp-0x4]
6401875b:	mov    eax,DWORD PTR [ebp-0x8]
6401875e:	add    eax,0x1f8
64018763:	lea    ecx,[edi+0xc]
64018766:	mov    DWORD PTR [eax+0x4],ecx
64018769:	mov    DWORD PTR [ecx+0x8],eax
6401876c:	lea    ecx,[edx+0xc]
6401876f:	mov    DWORD PTR [eax+0x8],ecx
64018772:	mov    DWORD PTR [ecx+0x4],eax
64018775:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6401877a:	xor    edi,edi
6401877c:	inc    edi
6401877d:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
64018784:	mov    al,BYTE PTR [esi+0x43]
64018787:	mov    cl,al
64018789:	inc    cl
6401878b:	test   al,al
6401878d:	mov    eax,DWORD PTR [ebp+0x8]
64018790:	mov    BYTE PTR [esi+0x43],cl
64018793:	jne    0x64018798
64018795:	or     DWORD PTR [eax+0x4],edi
64018798:	mov    edx,0x80000000
6401879d:	mov    ecx,ebx
6401879f:	shr    edx,cl
640187a1:	not    edx
640187a3:	and    DWORD PTR [eax+0x8],edx
640187a6:	mov    eax,ebx
640187a8:	pop    edi
640187a9:	pop    esi
640187aa:	pop    ebx
640187ab:	leave  
640187ac:	ret    
640187ad:	push   ebp
640187ae:	mov    ebp,esp
640187b0:	sub    esp,0xc
640187b3:	mov    ecx,DWORD PTR [ebp+0x8]
640187b6:	mov    eax,DWORD PTR [ecx+0x10]
640187b9:	push   ebx
640187ba:	push   esi
640187bb:	mov    esi,DWORD PTR [ebp+0x10]
640187be:	push   edi
640187bf:	mov    edi,DWORD PTR [ebp+0xc]
640187c2:	mov    edx,edi
640187c4:	sub    edx,DWORD PTR [ecx+0xc]
640187c7:	add    esi,0x17
640187ca:	shr    edx,0xf
640187cd:	mov    ecx,edx
640187cf:	imul   ecx,ecx,0x204
640187d5:	lea    ecx,[ecx+eax*1+0x144]
640187dc:	mov    DWORD PTR [ebp-0xc],ecx
640187df:	mov    ecx,DWORD PTR [edi-0x4]
640187e2:	and    esi,0xfffffff0
640187e5:	dec    ecx
640187e6:	cmp    esi,ecx
640187e8:	lea    edi,[ecx+edi*1-0x4]
640187ec:	mov    ebx,DWORD PTR [edi]
640187ee:	mov    DWORD PTR [ebp+0x10],ecx
640187f1:	mov    DWORD PTR [ebp-0x4],ebx
640187f4:	jle    0x6401894f
640187fa:	test   bl,0x1
640187fd:	jne    0x64018948
64018803:	add    ebx,ecx
64018805:	cmp    esi,ebx
64018807:	jg     0x64018948
6401880d:	mov    ecx,DWORD PTR [ebp-0x4]
64018810:	sar    ecx,0x4
64018813:	dec    ecx
64018814:	cmp    ecx,0x3f
64018817:	mov    DWORD PTR [ebp-0x8],ecx
6401881a:	jbe    0x64018822
6401881c:	push   0x3f
6401881e:	pop    ecx
6401881f:	mov    DWORD PTR [ebp-0x8],ecx
64018822:	mov    ebx,DWORD PTR [edi+0x4]
64018825:	cmp    ebx,DWORD PTR [edi+0x8]
64018828:	jne    0x6401886d
6401882a:	cmp    ecx,0x20
6401882d:	mov    ebx,0x80000000
64018832:	jae    0x6401884e
64018834:	shr    ebx,cl
64018836:	mov    ecx,DWORD PTR [ebp-0x8]
64018839:	lea    ecx,[ecx+eax*1+0x4]
6401883d:	not    ebx
6401883f:	and    DWORD PTR [eax+edx*4+0x44],ebx
64018843:	dec    BYTE PTR [ecx]
64018845:	jne    0x6401886d
64018847:	mov    ecx,DWORD PTR [ebp+0x8]
6401884a:	and    DWORD PTR [ecx],ebx
6401884c:	jmp    0x6401886d
6401884e:	add    ecx,0xffffffe0
64018851:	shr    ebx,cl
64018853:	mov    ecx,DWORD PTR [ebp-0x8]
64018856:	lea    ecx,[ecx+eax*1+0x4]
6401885a:	not    ebx
6401885c:	and    DWORD PTR [eax+edx*4+0xc4],ebx
64018863:	dec    BYTE PTR [ecx]
64018865:	jne    0x6401886d
64018867:	mov    ecx,DWORD PTR [ebp+0x8]
6401886a:	and    DWORD PTR [ecx+0x4],ebx
6401886d:	mov    ecx,DWORD PTR [edi+0x8]
64018870:	mov    ebx,DWORD PTR [edi+0x4]
64018873:	mov    DWORD PTR [ecx+0x4],ebx
64018876:	mov    ecx,DWORD PTR [edi+0x4]
64018879:	mov    edi,DWORD PTR [edi+0x8]
6401887c:	mov    DWORD PTR [ecx+0x8],edi
6401887f:	mov    ecx,DWORD PTR [ebp+0x10]
64018882:	sub    ecx,esi
64018884:	add    DWORD PTR [ebp-0x4],ecx
64018887:	cmp    DWORD PTR [ebp-0x4],0x0
6401888b:	jle    0x64018936
64018891:	mov    edi,DWORD PTR [ebp-0x4]
64018894:	mov    ecx,DWORD PTR [ebp+0xc]
64018897:	sar    edi,0x4
6401889a:	dec    edi
6401889b:	cmp    edi,0x3f
6401889e:	lea    ecx,[ecx+esi*1-0x4]
640188a2:	jbe    0x640188a7
640188a4:	push   0x3f
640188a6:	pop    edi
640188a7:	mov    ebx,DWORD PTR [ebp-0xc]
640188aa:	lea    ebx,[ebx+edi*8]
640188ad:	mov    DWORD PTR [ebp+0x10],ebx
640188b0:	mov    ebx,DWORD PTR [ebx+0x4]
640188b3:	mov    DWORD PTR [ecx+0x4],ebx
640188b6:	mov    ebx,DWORD PTR [ebp+0x10]
640188b9:	mov    DWORD PTR [ecx+0x8],ebx
640188bc:	mov    DWORD PTR [ebx+0x4],ecx
640188bf:	mov    ebx,DWORD PTR [ecx+0x4]
640188c2:	mov    DWORD PTR [ebx+0x8],ecx
640188c5:	mov    ebx,DWORD PTR [ecx+0x4]
640188c8:	cmp    ebx,DWORD PTR [ecx+0x8]
640188cb:	jne    0x64018924
640188cd:	mov    cl,BYTE PTR [edi+eax*1+0x4]
640188d1:	mov    BYTE PTR [ebp+0x13],cl
640188d4:	inc    cl
640188d6:	cmp    edi,0x20
640188d9:	mov    BYTE PTR [edi+eax*1+0x4],cl
640188dd:	jae    0x640188fb
640188df:	cmp    BYTE PTR [ebp+0x13],0x0
640188e3:	jne    0x640188f3
640188e5:	mov    ecx,edi
640188e7:	mov    ebx,0x80000000
640188ec:	shr    ebx,cl
640188ee:	mov    ecx,DWORD PTR [ebp+0x8]
640188f1:	or     DWORD PTR [ecx],ebx
640188f3:	lea    eax,[eax+edx*4+0x44]
640188f7:	mov    ecx,edi
640188f9:	jmp    0x6401891b
640188fb:	cmp    BYTE PTR [ebp+0x13],0x0
640188ff:	jne    0x64018911
64018901:	lea    ecx,[edi-0x20]
64018904:	mov    ebx,0x80000000
64018909:	shr    ebx,cl
6401890b:	mov    ecx,DWORD PTR [ebp+0x8]
6401890e:	or     DWORD PTR [ecx+0x4],ebx
64018911:	lea    eax,[eax+edx*4+0xc4]
64018918:	lea    ecx,[edi-0x20]
6401891b:	mov    edx,0x80000000
64018920:	shr    edx,cl
64018922:	or     DWORD PTR [eax],edx
64018924:	mov    edx,DWORD PTR [ebp+0xc]
64018927:	mov    ecx,DWORD PTR [ebp-0x4]
6401892a:	lea    eax,[edx+esi*1-0x4]
6401892e:	mov    DWORD PTR [eax],ecx
64018930:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
64018934:	jmp    0x64018939
64018936:	mov    edx,DWORD PTR [ebp+0xc]
64018939:	lea    eax,[esi+0x1]
6401893c:	mov    DWORD PTR [edx-0x4],eax
6401893f:	mov    DWORD PTR [edx+esi*1-0x8],eax
64018943:	jmp    0x64018a84
64018948:	xor    eax,eax
6401894a:	jmp    0x64018a87
6401894f:	jge    0x64018a84
64018955:	mov    ebx,DWORD PTR [ebp+0xc]
64018958:	sub    DWORD PTR [ebp+0x10],esi
6401895b:	lea    ecx,[esi+0x1]
6401895e:	mov    DWORD PTR [ebx-0x4],ecx
64018961:	lea    ebx,[ebx+esi*1-0x4]
64018965:	mov    esi,DWORD PTR [ebp+0x10]
64018968:	sar    esi,0x4
6401896b:	dec    esi
6401896c:	cmp    esi,0x3f
6401896f:	mov    DWORD PTR [ebp+0xc],ebx
64018972:	mov    DWORD PTR [ebx-0x4],ecx
64018975:	jbe    0x6401897a
64018977:	push   0x3f
64018979:	pop    esi
6401897a:	test   BYTE PTR [ebp-0x4],0x1
6401897e:	jne    0x64018a04
64018984:	mov    esi,DWORD PTR [ebp-0x4]
64018987:	sar    esi,0x4
6401898a:	dec    esi
6401898b:	cmp    esi,0x3f
6401898e:	jbe    0x64018993
64018990:	push   0x3f
64018992:	pop    esi
64018993:	mov    ecx,DWORD PTR [edi+0x4]
64018996:	cmp    ecx,DWORD PTR [edi+0x8]
64018999:	jne    0x640189dd
6401899b:	cmp    esi,0x20
6401899e:	mov    ebx,0x80000000
640189a3:	jae    0x640189be
640189a5:	mov    ecx,esi
640189a7:	shr    ebx,cl
640189a9:	lea    esi,[esi+eax*1+0x4]
640189ad:	not    ebx
640189af:	and    DWORD PTR [eax+edx*4+0x44],ebx
640189b3:	dec    BYTE PTR [esi]
640189b5:	jne    0x640189da
640189b7:	mov    ecx,DWORD PTR [ebp+0x8]
640189ba:	and    DWORD PTR [ecx],ebx
640189bc:	jmp    0x640189da
640189be:	lea    ecx,[esi-0x20]
640189c1:	shr    ebx,cl
640189c3:	lea    ecx,[esi+eax*1+0x4]
640189c7:	not    ebx
640189c9:	and    DWORD PTR [eax+edx*4+0xc4],ebx
640189d0:	dec    BYTE PTR [ecx]
640189d2:	jne    0x640189da
640189d4:	mov    ecx,DWORD PTR [ebp+0x8]
640189d7:	and    DWORD PTR [ecx+0x4],ebx
640189da:	mov    ebx,DWORD PTR [ebp+0xc]
640189dd:	mov    ecx,DWORD PTR [edi+0x8]
640189e0:	mov    esi,DWORD PTR [edi+0x4]
640189e3:	mov    DWORD PTR [ecx+0x4],esi
640189e6:	mov    esi,DWORD PTR [edi+0x8]
640189e9:	mov    ecx,DWORD PTR [edi+0x4]
640189ec:	mov    DWORD PTR [ecx+0x8],esi
640189ef:	mov    esi,DWORD PTR [ebp+0x10]
640189f2:	add    esi,DWORD PTR [ebp-0x4]
640189f5:	mov    DWORD PTR [ebp+0x10],esi
640189f8:	sar    esi,0x4
640189fb:	dec    esi
640189fc:	cmp    esi,0x3f
640189ff:	jbe    0x64018a04
64018a01:	push   0x3f
64018a03:	pop    esi
64018a04:	mov    ecx,DWORD PTR [ebp-0xc]
64018a07:	lea    ecx,[ecx+esi*8]
64018a0a:	mov    edi,DWORD PTR [ecx+0x4]
64018a0d:	mov    DWORD PTR [ebx+0x8],ecx
64018a10:	mov    DWORD PTR [ebx+0x4],edi
64018a13:	mov    DWORD PTR [ecx+0x4],ebx
64018a16:	mov    ecx,DWORD PTR [ebx+0x4]
64018a19:	mov    DWORD PTR [ecx+0x8],ebx
64018a1c:	mov    ecx,DWORD PTR [ebx+0x4]
64018a1f:	cmp    ecx,DWORD PTR [ebx+0x8]
64018a22:	jne    0x64018a7b
64018a24:	mov    cl,BYTE PTR [esi+eax*1+0x4]
64018a28:	mov    BYTE PTR [ebp+0xf],cl
64018a2b:	inc    cl
64018a2d:	cmp    esi,0x20
64018a30:	mov    BYTE PTR [esi+eax*1+0x4],cl
64018a34:	jae    0x64018a52
64018a36:	cmp    BYTE PTR [ebp+0xf],0x0
64018a3a:	jne    0x64018a4a
64018a3c:	mov    ecx,esi
64018a3e:	mov    edi,0x80000000
64018a43:	shr    edi,cl
64018a45:	mov    ecx,DWORD PTR [ebp+0x8]
64018a48:	or     DWORD PTR [ecx],edi
64018a4a:	lea    eax,[eax+edx*4+0x44]
64018a4e:	mov    ecx,esi
64018a50:	jmp    0x64018a72
64018a52:	cmp    BYTE PTR [ebp+0xf],0x0
64018a56:	jne    0x64018a68
64018a58:	lea    ecx,[esi-0x20]
64018a5b:	mov    edi,0x80000000
64018a60:	shr    edi,cl
64018a62:	mov    ecx,DWORD PTR [ebp+0x8]
64018a65:	or     DWORD PTR [ecx+0x4],edi
64018a68:	lea    eax,[eax+edx*4+0xc4]
64018a6f:	lea    ecx,[esi-0x20]
64018a72:	mov    edx,0x80000000
64018a77:	shr    edx,cl
64018a79:	or     DWORD PTR [eax],edx
64018a7b:	mov    eax,DWORD PTR [ebp+0x10]
64018a7e:	mov    DWORD PTR [ebx],eax
64018a80:	mov    DWORD PTR [eax+ebx*1-0x4],eax
64018a84:	xor    eax,eax
64018a86:	inc    eax
64018a87:	pop    edi
64018a88:	pop    esi
64018a89:	pop    ebx
64018a8a:	leave  
64018a8b:	ret    
64018a8c:	push   ebp
64018a8d:	mov    ebp,esp
64018a8f:	sub    esp,0x14
64018a92:	mov    eax,ds:0x6402e464
64018a97:	mov    ecx,DWORD PTR [ebp+0x8]
64018a9a:	imul   eax,eax,0x14
64018a9d:	add    eax,DWORD PTR ds:0x6402e468
64018aa3:	add    ecx,0x17
64018aa6:	and    ecx,0xfffffff0
64018aa9:	mov    DWORD PTR [ebp-0x10],ecx
64018aac:	sar    ecx,0x4
64018aaf:	push   ebx
64018ab0:	dec    ecx
64018ab1:	cmp    ecx,0x20
64018ab4:	push   esi
64018ab5:	push   edi
64018ab6:	jge    0x64018ac3
64018ab8:	or     esi,0xffffffff
64018abb:	shr    esi,cl
64018abd:	or     DWORD PTR [ebp-0x8],0xffffffff
64018ac1:	jmp    0x64018ad0
64018ac3:	add    ecx,0xffffffe0
64018ac6:	or     edx,0xffffffff
64018ac9:	xor    esi,esi
64018acb:	shr    edx,cl
64018acd:	mov    DWORD PTR [ebp-0x8],edx
64018ad0:	mov    ecx,DWORD PTR ds:0x6402e470
64018ad6:	mov    ebx,ecx
64018ad8:	jmp    0x64018aeb
64018ada:	mov    edx,DWORD PTR [ebx+0x4]
64018add:	mov    edi,DWORD PTR [ebx]
64018adf:	and    edx,DWORD PTR [ebp-0x8]
64018ae2:	and    edi,esi
64018ae4:	or     edx,edi
64018ae6:	jne    0x64018af2
64018ae8:	add    ebx,0x14
64018aeb:	cmp    ebx,eax
64018aed:	mov    DWORD PTR [ebp+0x8],ebx
64018af0:	jb     0x64018ada
64018af2:	cmp    ebx,eax
64018af4:	jne    0x64018b75
64018af6:	mov    ebx,DWORD PTR ds:0x6402e468
64018afc:	jmp    0x64018b0f
64018afe:	mov    edx,DWORD PTR [ebx+0x4]
64018b01:	mov    edi,DWORD PTR [ebx]
64018b03:	and    edx,DWORD PTR [ebp-0x8]
64018b06:	and    edi,esi
64018b08:	or     edx,edi
64018b0a:	jne    0x64018b16
64018b0c:	add    ebx,0x14
64018b0f:	cmp    ebx,ecx
64018b11:	mov    DWORD PTR [ebp+0x8],ebx
64018b14:	jb     0x64018afe
64018b16:	cmp    ebx,ecx
64018b18:	jne    0x64018b75
64018b1a:	jmp    0x64018b28
64018b1c:	cmp    DWORD PTR [ebx+0x8],0x0
64018b20:	jne    0x64018b2c
64018b22:	add    ebx,0x14
64018b25:	mov    DWORD PTR [ebp+0x8],ebx
64018b28:	cmp    ebx,eax
64018b2a:	jb     0x64018b1c
64018b2c:	cmp    ebx,eax
64018b2e:	jne    0x64018b61
64018b30:	mov    ebx,DWORD PTR ds:0x6402e468
64018b36:	jmp    0x64018b41
64018b38:	cmp    DWORD PTR [ebx+0x8],0x0
64018b3c:	jne    0x64018b48
64018b3e:	add    ebx,0x14
64018b41:	cmp    ebx,ecx
64018b43:	mov    DWORD PTR [ebp+0x8],ebx
64018b46:	jb     0x64018b38
64018b48:	cmp    ebx,ecx
64018b4a:	jne    0x64018b61
64018b4c:	call   0x640185f7
64018b51:	mov    ebx,eax
64018b53:	test   ebx,ebx
64018b55:	mov    DWORD PTR [ebp+0x8],ebx
64018b58:	jne    0x64018b61
64018b5a:	xor    eax,eax
64018b5c:	jmp    0x64018d6a
64018b61:	push   ebx
64018b62:	call   0x640186a7
64018b67:	pop    ecx
64018b68:	mov    ecx,DWORD PTR [ebx+0x10]
64018b6b:	mov    DWORD PTR [ecx],eax
64018b6d:	mov    eax,DWORD PTR [ebx+0x10]
64018b70:	cmp    DWORD PTR [eax],0xffffffff
64018b73:	je     0x64018b5a
64018b75:	mov    DWORD PTR ds:0x6402e470,ebx
64018b7b:	mov    eax,DWORD PTR [ebx+0x10]
64018b7e:	mov    edx,DWORD PTR [eax]
64018b80:	cmp    edx,0xffffffff
64018b83:	mov    DWORD PTR [ebp-0x4],edx
64018b86:	je     0x64018b9c
64018b88:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
64018b8f:	mov    edi,DWORD PTR [eax+edx*4+0x44]
64018b93:	and    ecx,DWORD PTR [ebp-0x8]
64018b96:	and    edi,esi
64018b98:	or     ecx,edi
64018b9a:	jne    0x64018bc5
64018b9c:	and    DWORD PTR [ebp-0x4],0x0
64018ba0:	mov    edx,DWORD PTR [eax+0xc4]
64018ba6:	lea    ecx,[eax+0x44]
64018ba9:	mov    edi,DWORD PTR [ecx]
64018bab:	and    edx,DWORD PTR [ebp-0x8]
64018bae:	and    edi,esi
64018bb0:	or     edx,edi
64018bb2:	jne    0x64018bc2
64018bb4:	inc    DWORD PTR [ebp-0x4]
64018bb7:	mov    edx,DWORD PTR [ecx+0x84]
64018bbd:	add    ecx,0x4
64018bc0:	jmp    0x64018ba9
64018bc2:	mov    edx,DWORD PTR [ebp-0x4]
64018bc5:	mov    ecx,edx
64018bc7:	imul   ecx,ecx,0x204
64018bcd:	lea    ecx,[ecx+eax*1+0x144]
64018bd4:	mov    DWORD PTR [ebp-0xc],ecx
64018bd7:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
64018bdb:	xor    edi,edi
64018bdd:	and    ecx,esi
64018bdf:	jne    0x64018bf3
64018be1:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
64018be8:	and    ecx,DWORD PTR [ebp-0x8]
64018beb:	push   0x20
64018bed:	pop    edi
64018bee:	jmp    0x64018bf3
64018bf0:	add    ecx,ecx
64018bf2:	inc    edi
64018bf3:	test   ecx,ecx
64018bf5:	jge    0x64018bf0
64018bf7:	mov    ecx,DWORD PTR [ebp-0xc]
64018bfa:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
64018bfe:	mov    ecx,DWORD PTR [edx]
64018c00:	sub    ecx,DWORD PTR [ebp-0x10]
64018c03:	mov    esi,ecx
64018c05:	sar    esi,0x4
64018c08:	dec    esi
64018c09:	cmp    esi,0x3f
64018c0c:	mov    DWORD PTR [ebp-0x8],ecx
64018c0f:	jle    0x64018c14
64018c11:	push   0x3f
64018c13:	pop    esi
64018c14:	cmp    esi,edi
64018c16:	je     0x64018d1d
64018c1c:	mov    ecx,DWORD PTR [edx+0x4]
64018c1f:	cmp    ecx,DWORD PTR [edx+0x8]
64018c22:	jne    0x64018c80
64018c24:	cmp    edi,0x20
64018c27:	mov    ebx,0x80000000
64018c2c:	jge    0x64018c54
64018c2e:	mov    ecx,edi
64018c30:	shr    ebx,cl
64018c32:	mov    ecx,DWORD PTR [ebp-0x4]
64018c35:	lea    edi,[eax+edi*1+0x4]
64018c39:	not    ebx
64018c3b:	mov    DWORD PTR [ebp-0x14],ebx
64018c3e:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
64018c42:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
64018c46:	dec    BYTE PTR [edi]
64018c48:	jne    0x64018c7d
64018c4a:	mov    ecx,DWORD PTR [ebp-0x14]
64018c4d:	mov    ebx,DWORD PTR [ebp+0x8]
64018c50:	and    DWORD PTR [ebx],ecx
64018c52:	jmp    0x64018c80
64018c54:	lea    ecx,[edi-0x20]
64018c57:	shr    ebx,cl
64018c59:	mov    ecx,DWORD PTR [ebp-0x4]
64018c5c:	lea    ecx,[eax+ecx*4+0xc4]
64018c63:	lea    edi,[eax+edi*1+0x4]
64018c67:	not    ebx
64018c69:	and    DWORD PTR [ecx],ebx
64018c6b:	dec    BYTE PTR [edi]
64018c6d:	mov    DWORD PTR [ebp-0x14],ebx
64018c70:	jne    0x64018c7d
64018c72:	mov    ebx,DWORD PTR [ebp+0x8]
64018c75:	mov    ecx,DWORD PTR [ebp-0x14]
64018c78:	and    DWORD PTR [ebx+0x4],ecx
64018c7b:	jmp    0x64018c80
64018c7d:	mov    ebx,DWORD PTR [ebp+0x8]
64018c80:	cmp    DWORD PTR [ebp-0x8],0x0
64018c84:	mov    ecx,DWORD PTR [edx+0x8]
64018c87:	mov    edi,DWORD PTR [edx+0x4]
64018c8a:	mov    DWORD PTR [ecx+0x4],edi
64018c8d:	mov    ecx,DWORD PTR [edx+0x4]
64018c90:	mov    edi,DWORD PTR [edx+0x8]
64018c93:	mov    DWORD PTR [ecx+0x8],edi
64018c96:	je     0x64018d29
64018c9c:	mov    ecx,DWORD PTR [ebp-0xc]
64018c9f:	lea    ecx,[ecx+esi*8]
64018ca2:	mov    edi,DWORD PTR [ecx+0x4]
64018ca5:	mov    DWORD PTR [edx+0x8],ecx
64018ca8:	mov    DWORD PTR [edx+0x4],edi
64018cab:	mov    DWORD PTR [ecx+0x4],edx
64018cae:	mov    ecx,DWORD PTR [edx+0x4]
64018cb1:	mov    DWORD PTR [ecx+0x8],edx
64018cb4:	mov    ecx,DWORD PTR [edx+0x4]
64018cb7:	cmp    ecx,DWORD PTR [edx+0x8]
64018cba:	jne    0x64018d1a
64018cbc:	mov    cl,BYTE PTR [esi+eax*1+0x4]
64018cc0:	mov    BYTE PTR [ebp+0xb],cl
64018cc3:	inc    cl
64018cc5:	cmp    esi,0x20
64018cc8:	mov    BYTE PTR [esi+eax*1+0x4],cl
64018ccc:	jge    0x64018cf1
64018cce:	cmp    BYTE PTR [ebp+0xb],0x0
64018cd2:	jne    0x64018cdf
64018cd4:	mov    edi,0x80000000
64018cd9:	mov    ecx,esi
64018cdb:	shr    edi,cl
64018cdd:	or     DWORD PTR [ebx],edi
64018cdf:	mov    ecx,esi
64018ce1:	mov    edi,0x80000000
64018ce6:	shr    edi,cl
64018ce8:	mov    ecx,DWORD PTR [ebp-0x4]
64018ceb:	or     DWORD PTR [eax+ecx*4+0x44],edi
64018cef:	jmp    0x64018d1a
64018cf1:	cmp    BYTE PTR [ebp+0xb],0x0
64018cf5:	jne    0x64018d04
64018cf7:	lea    ecx,[esi-0x20]
64018cfa:	mov    edi,0x80000000
64018cff:	shr    edi,cl
64018d01:	or     DWORD PTR [ebx+0x4],edi
64018d04:	mov    ecx,DWORD PTR [ebp-0x4]
64018d07:	lea    edi,[eax+ecx*4+0xc4]
64018d0e:	lea    ecx,[esi-0x20]
64018d11:	mov    esi,0x80000000
64018d16:	shr    esi,cl
64018d18:	or     DWORD PTR [edi],esi
64018d1a:	mov    ecx,DWORD PTR [ebp-0x8]
64018d1d:	test   ecx,ecx
64018d1f:	je     0x64018d2c
64018d21:	mov    DWORD PTR [edx],ecx
64018d23:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
64018d27:	jmp    0x64018d2c
64018d29:	mov    ecx,DWORD PTR [ebp-0x8]
64018d2c:	mov    esi,DWORD PTR [ebp-0x10]
64018d2f:	add    edx,ecx
64018d31:	lea    ecx,[esi+0x1]
64018d34:	mov    DWORD PTR [edx],ecx
64018d36:	mov    DWORD PTR [edx+esi*1-0x4],ecx
64018d3a:	mov    esi,DWORD PTR [ebp-0xc]
64018d3d:	mov    ecx,DWORD PTR [esi]
64018d3f:	test   ecx,ecx
64018d41:	lea    edi,[ecx+0x1]
64018d44:	mov    DWORD PTR [esi],edi
64018d46:	jne    0x64018d62
64018d48:	cmp    ebx,DWORD PTR ds:0x6402ab68
64018d4e:	jne    0x64018d62
64018d50:	mov    ecx,DWORD PTR [ebp-0x4]
64018d53:	cmp    ecx,DWORD PTR ds:0x6402e478
64018d59:	jne    0x64018d62
64018d5b:	and    DWORD PTR ds:0x6402ab68,0x0
64018d62:	mov    ecx,DWORD PTR [ebp-0x4]
64018d65:	mov    DWORD PTR [eax],ecx
64018d67:	lea    eax,[edx+0x4]
64018d6a:	pop    edi
64018d6b:	pop    esi
64018d6c:	pop    ebx
64018d6d:	leave  
64018d6e:	ret    
64018d6f:	push   ecx
64018d70:	push   ebx
64018d71:	mov    ebx,DWORD PTR [esp+0xc]
64018d75:	push   esi
64018d76:	push   edi
64018d77:	xor    esi,esi
64018d79:	xor    edi,edi
64018d7b:	cmp    ebx,DWORD PTR [edi*8+0x64029a08]
64018d82:	je     0x64018d8a
64018d84:	inc    edi
64018d85:	cmp    edi,0x17
64018d88:	jb     0x64018d7b
64018d8a:	cmp    edi,0x17
64018d8d:	jae    0x64018f0a
64018d93:	push   ebp
64018d94:	push   0x3
64018d96:	call   0x6401bde9
64018d9b:	cmp    eax,0x1
64018d9e:	pop    ecx
64018d9f:	je     0x64018ed6
64018da5:	push   0x3
64018da7:	call   0x6401bde9
64018dac:	test   eax,eax
64018dae:	pop    ecx
64018daf:	jne    0x64018dbe
64018db1:	cmp    DWORD PTR ds:0x6402a520,0x1
64018db8:	je     0x64018ed6
64018dbe:	cmp    ebx,0xfc
64018dc4:	je     0x64018f09
64018dca:	push   0x640232e0
64018dcf:	mov    ebx,0x314
64018dd4:	push   ebx
64018dd5:	mov    ebp,0x6402ab70
64018dda:	push   ebp
64018ddb:	call   0x640125e8
64018de0:	add    esp,0xc
64018de3:	test   eax,eax
64018de5:	je     0x64018df4
64018de7:	push   esi
64018de8:	push   esi
64018de9:	push   esi
64018dea:	push   esi
64018deb:	push   esi
64018dec:	call   0x6401065a
64018df1:	add    esp,0x14
64018df4:	push   0x104
64018df9:	mov    esi,0x6402ab89
64018dfe:	push   esi
64018dff:	push   0x0
64018e01:	mov    BYTE PTR ds:0x6402ac8d,0x0
64018e08:	call   DWORD PTR ds:0x6402216c
64018e0e:	test   eax,eax
64018e10:	jne    0x64018e38
64018e12:	push   0x640232c8
64018e17:	push   0x2fb
64018e1c:	push   esi
64018e1d:	call   0x640125e8
64018e22:	add    esp,0xc
64018e25:	test   eax,eax
64018e27:	je     0x64018e38
64018e29:	xor    eax,eax
64018e2b:	push   eax
64018e2c:	push   eax
64018e2d:	push   eax
64018e2e:	push   eax
64018e2f:	push   eax
64018e30:	call   0x6401065a
64018e35:	add    esp,0x14
64018e38:	push   esi
64018e39:	call   0x640123f0
64018e3e:	inc    eax
64018e3f:	cmp    eax,0x3c
64018e42:	pop    ecx
64018e43:	jbe    0x64018e7d
64018e45:	push   esi
64018e46:	call   0x640123f0
64018e4b:	sub    esi,0x3b
64018e4e:	add    eax,esi
64018e50:	push   0x3
64018e52:	mov    ecx,0x6402ae84
64018e57:	push   0x640232c4
64018e5c:	sub    ecx,eax
64018e5e:	push   ecx
64018e5f:	push   eax
64018e60:	call   0x64019ec6
64018e65:	add    esp,0x14
64018e68:	test   eax,eax
64018e6a:	je     0x64018e7d
64018e6c:	xor    esi,esi
64018e6e:	push   esi
64018e6f:	push   esi
64018e70:	push   esi
64018e71:	push   esi
64018e72:	push   esi
64018e73:	call   0x6401065a
64018e78:	add    esp,0x14
64018e7b:	jmp    0x64018e7f
64018e7d:	xor    esi,esi
64018e7f:	push   0x640232c0
64018e84:	push   ebx
64018e85:	push   ebp
64018e86:	call   0x64019e0e
64018e8b:	add    esp,0xc
64018e8e:	test   eax,eax
64018e90:	je     0x64018e9f
64018e92:	push   esi
64018e93:	push   esi
64018e94:	push   esi
64018e95:	push   esi
64018e96:	push   esi
64018e97:	call   0x6401065a
64018e9c:	add    esp,0x14
64018e9f:	push   DWORD PTR [edi*8+0x64029a0c]
64018ea6:	push   ebx
64018ea7:	push   ebp
64018ea8:	call   0x64019e0e
64018ead:	add    esp,0xc
64018eb0:	test   eax,eax
64018eb2:	je     0x64018ec1
64018eb4:	push   esi
64018eb5:	push   esi
64018eb6:	push   esi
64018eb7:	push   esi
64018eb8:	push   esi
64018eb9:	call   0x6401065a
64018ebe:	add    esp,0x14
64018ec1:	push   0x12010
64018ec6:	push   0x64023298
64018ecb:	push   ebp
64018ecc:	call   0x6401bc2c
64018ed1:	add    esp,0xc
64018ed4:	jmp    0x64018f09
64018ed6:	push   0xfffffff4
64018ed8:	call   DWORD PTR ds:0x64022160
64018ede:	mov    ebp,eax
64018ee0:	cmp    ebp,esi
64018ee2:	je     0x64018f09
64018ee4:	cmp    ebp,0xffffffff
64018ee7:	je     0x64018f09
64018ee9:	push   0x0
64018eeb:	lea    eax,[esp+0x14]
64018eef:	push   eax
64018ef0:	lea    esi,[edi*8+0x64029a0c]
64018ef7:	push   DWORD PTR [esi]
64018ef9:	call   0x640123f0
64018efe:	pop    ecx
64018eff:	push   eax
64018f00:	push   DWORD PTR [esi]
64018f02:	push   ebp
64018f03:	call   DWORD PTR ds:0x64022084
64018f09:	pop    ebp
64018f0a:	pop    edi
64018f0b:	pop    esi
64018f0c:	pop    ebx
64018f0d:	pop    ecx
64018f0e:	ret    
64018f0f:	push   0x3
64018f11:	call   0x6401bde9
64018f16:	cmp    eax,0x1
64018f19:	pop    ecx
64018f1a:	je     0x64018f31
64018f1c:	push   0x3
64018f1e:	call   0x6401bde9
64018f23:	test   eax,eax
64018f25:	pop    ecx
64018f26:	jne    0x64018f47
64018f28:	cmp    DWORD PTR ds:0x6402a520,0x1
64018f2f:	jne    0x64018f47
64018f31:	push   0xfc
64018f36:	call   0x64018d6f
64018f3b:	push   0xff
64018f40:	call   0x64018d6f
64018f45:	pop    ecx
64018f46:	pop    ecx
64018f47:	ret    
64018f48:	push   ebp
64018f49:	mov    ebp,esp
64018f4b:	sub    esp,0x8
64018f4e:	mov    DWORD PTR [ebp-0x4],edi
64018f51:	mov    DWORD PTR [ebp-0x8],esi
64018f54:	mov    esi,DWORD PTR [ebp+0xc]
64018f57:	mov    edi,DWORD PTR [ebp+0x8]
64018f5a:	mov    ecx,DWORD PTR [ebp+0x10]
64018f5d:	shr    ecx,0x7
64018f60:	jmp    0x64018f68
64018f62:	lea    ebx,[ebx+0x0]
64018f68:	movdqa xmm0,XMMWORD PTR [esi]
64018f6c:	movdqa xmm1,XMMWORD PTR [esi+0x10]
64018f71:	movdqa xmm2,XMMWORD PTR [esi+0x20]
64018f76:	movdqa xmm3,XMMWORD PTR [esi+0x30]
64018f7b:	movdqa XMMWORD PTR [edi],xmm0
64018f7f:	movdqa XMMWORD PTR [edi+0x10],xmm1
64018f84:	movdqa XMMWORD PTR [edi+0x20],xmm2
64018f89:	movdqa XMMWORD PTR [edi+0x30],xmm3
64018f8e:	movdqa xmm4,XMMWORD PTR [esi+0x40]
64018f93:	movdqa xmm5,XMMWORD PTR [esi+0x50]
64018f98:	movdqa xmm6,XMMWORD PTR [esi+0x60]
64018f9d:	movdqa xmm7,XMMWORD PTR [esi+0x70]
64018fa2:	movdqa XMMWORD PTR [edi+0x40],xmm4
64018fa7:	movdqa XMMWORD PTR [edi+0x50],xmm5
64018fac:	movdqa XMMWORD PTR [edi+0x60],xmm6
64018fb1:	movdqa XMMWORD PTR [edi+0x70],xmm7
64018fb6:	lea    esi,[esi+0x80]
64018fbc:	lea    edi,[edi+0x80]
64018fc2:	dec    ecx
64018fc3:	jne    0x64018f68
64018fc5:	mov    esi,DWORD PTR [ebp-0x8]
64018fc8:	mov    edi,DWORD PTR [ebp-0x4]
64018fcb:	mov    esp,ebp
64018fcd:	pop    ebp
64018fce:	ret    
64018fcf:	push   ebp
64018fd0:	mov    ebp,esp
64018fd2:	sub    esp,0x1c
64018fd5:	mov    DWORD PTR [ebp-0xc],edi
64018fd8:	mov    DWORD PTR [ebp-0x8],esi
64018fdb:	mov    DWORD PTR [ebp-0x4],ebx
64018fde:	mov    ebx,DWORD PTR [ebp+0xc]
64018fe1:	mov    eax,ebx
64018fe3:	cdq    
64018fe4:	mov    ecx,eax
64018fe6:	mov    eax,DWORD PTR [ebp+0x8]
64018fe9:	xor    ecx,edx
64018feb:	sub    ecx,edx
64018fed:	and    ecx,0xf
64018ff0:	xor    ecx,edx
64018ff2:	sub    ecx,edx
64018ff4:	cdq    
64018ff5:	mov    edi,eax
64018ff7:	xor    edi,edx
64018ff9:	sub    edi,edx
64018ffb:	and    edi,0xf
64018ffe:	xor    edi,edx
64019000:	sub    edi,edx
64019002:	mov    edx,ecx
64019004:	or     edx,edi
64019006:	jne    0x64019052
64019008:	mov    esi,DWORD PTR [ebp+0x10]
6401900b:	mov    ecx,esi
6401900d:	and    ecx,0x7f
64019010:	mov    DWORD PTR [ebp-0x18],ecx
64019013:	cmp    esi,ecx
64019015:	je     0x6401902a
64019017:	sub    esi,ecx
64019019:	push   esi
6401901a:	push   ebx
6401901b:	push   eax
6401901c:	call   0x64018f48
64019021:	add    esp,0xc
64019024:	mov    eax,DWORD PTR [ebp+0x8]
64019027:	mov    ecx,DWORD PTR [ebp-0x18]
6401902a:	test   ecx,ecx
6401902c:	je     0x640190a5
6401902e:	mov    ebx,DWORD PTR [ebp+0x10]
64019031:	mov    edx,DWORD PTR [ebp+0xc]
64019034:	add    edx,ebx
64019036:	sub    edx,ecx
64019038:	mov    DWORD PTR [ebp-0x14],edx
6401903b:	add    ebx,eax
6401903d:	sub    ebx,ecx
6401903f:	mov    DWORD PTR [ebp-0x10],ebx
64019042:	mov    esi,DWORD PTR [ebp-0x14]
64019045:	mov    edi,DWORD PTR [ebp-0x10]
64019048:	mov    ecx,DWORD PTR [ebp-0x18]
6401904b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401904d:	mov    eax,DWORD PTR [ebp+0x8]
64019050:	jmp    0x640190a5
64019052:	cmp    ecx,edi
64019054:	jne    0x6401908b
64019056:	neg    ecx
64019058:	add    ecx,0x10
6401905b:	mov    DWORD PTR [ebp-0x1c],ecx
6401905e:	mov    esi,DWORD PTR [ebp+0xc]
64019061:	mov    edi,DWORD PTR [ebp+0x8]
64019064:	mov    ecx,DWORD PTR [ebp-0x1c]
64019067:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
64019069:	mov    ecx,DWORD PTR [ebp+0x8]
6401906c:	add    ecx,DWORD PTR [ebp-0x1c]
6401906f:	mov    edx,DWORD PTR [ebp+0xc]
64019072:	add    edx,DWORD PTR [ebp-0x1c]
64019075:	mov    eax,DWORD PTR [ebp+0x10]
64019078:	sub    eax,DWORD PTR [ebp-0x1c]
6401907b:	push   eax
6401907c:	push   edx
6401907d:	push   ecx
6401907e:	call   0x64018fcf
64019083:	add    esp,0xc
64019086:	mov    eax,DWORD PTR [ebp+0x8]
64019089:	jmp    0x640190a5
6401908b:	mov    esi,DWORD PTR [ebp+0xc]
6401908e:	mov    edi,DWORD PTR [ebp+0x8]
64019091:	mov    ecx,DWORD PTR [ebp+0x10]
64019094:	mov    edx,ecx
64019096:	shr    ecx,0x2
64019099:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401909b:	mov    ecx,edx
6401909d:	and    ecx,0x3
640190a0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
640190a2:	mov    eax,DWORD PTR [ebp+0x8]
640190a5:	mov    ebx,DWORD PTR [ebp-0x4]
640190a8:	mov    esi,DWORD PTR [ebp-0x8]
640190ab:	mov    edi,DWORD PTR [ebp-0xc]
640190ae:	mov    esp,ebp
640190b0:	pop    ebp
640190b1:	ret    
640190b2:	int3   
640190b3:	int3   
640190b4:	push   ebx
640190b5:	push   esi
640190b6:	push   edi
640190b7:	mov    edx,DWORD PTR [esp+0x10]
640190bb:	mov    eax,DWORD PTR [esp+0x14]
640190bf:	mov    ecx,DWORD PTR [esp+0x18]
640190c3:	push   ebp
640190c4:	push   edx
640190c5:	push   eax
640190c6:	push   ecx
640190c7:	push   ecx
640190c8:	push   0x64019144
640190cd:	push   DWORD PTR fs:0x0
640190d4:	mov    eax,ds:0x64029038
640190d9:	xor    eax,esp
640190db:	mov    DWORD PTR [esp+0x8],eax
640190df:	mov    DWORD PTR fs:0x0,esp
640190e6:	mov    eax,DWORD PTR [esp+0x30]
640190ea:	mov    ebx,DWORD PTR [eax+0x8]
640190ed:	mov    ecx,DWORD PTR [esp+0x2c]
640190f1:	xor    ebx,DWORD PTR [ecx]
640190f3:	mov    esi,DWORD PTR [eax+0xc]
640190f6:	cmp    esi,0xfffffffe
640190f9:	je     0x64019136
640190fb:	mov    edx,DWORD PTR [esp+0x34]
640190ff:	cmp    edx,0xfffffffe
64019102:	je     0x64019108
64019104:	cmp    esi,edx
64019106:	jbe    0x64019136
64019108:	lea    esi,[esi+esi*2]
6401910b:	lea    ebx,[ebx+esi*4+0x10]
6401910f:	mov    ecx,DWORD PTR [ebx]
64019111:	mov    DWORD PTR [eax+0xc],ecx
64019114:	cmp    DWORD PTR [ebx+0x4],0x0
64019118:	jne    0x640190e6
6401911a:	push   0x101
6401911f:	mov    eax,DWORD PTR [ebx+0x8]
64019122:	call   0x64019561
64019127:	mov    ecx,0x1
6401912c:	mov    eax,DWORD PTR [ebx+0x8]
6401912f:	call   0x64019580
64019134:	jmp    0x640190e6
64019136:	pop    DWORD PTR fs:0x0
6401913d:	add    esp,0x18
64019140:	pop    edi
64019141:	pop    esi
64019142:	pop    ebx
64019143:	ret    
64019144:	mov    ecx,DWORD PTR [esp+0x4]
64019148:	test   DWORD PTR [ecx+0x4],0x6
6401914f:	mov    eax,0x1
64019154:	je     0x64019189
64019156:	mov    eax,DWORD PTR [esp+0x8]
6401915a:	mov    ecx,DWORD PTR [eax+0x8]
6401915d:	xor    ecx,eax
6401915f:	call   0x64010c1e
64019164:	push   ebp
64019165:	mov    ebp,DWORD PTR [eax+0x18]
64019168:	push   DWORD PTR [eax+0xc]
6401916b:	push   DWORD PTR [eax+0x10]
6401916e:	push   DWORD PTR [eax+0x14]
64019171:	call   0x640190b4
64019176:	add    esp,0xc
64019179:	pop    ebp
6401917a:	mov    eax,DWORD PTR [esp+0x8]
6401917e:	mov    edx,DWORD PTR [esp+0x10]
64019182:	mov    DWORD PTR [edx],eax
64019184:	mov    eax,0x3
64019189:	ret    
6401918a:	push   ebp
6401918b:	mov    ecx,DWORD PTR [esp+0x8]
6401918f:	mov    ebp,DWORD PTR [ecx]
64019191:	push   DWORD PTR [ecx+0x1c]
64019194:	push   DWORD PTR [ecx+0x18]
64019197:	push   DWORD PTR [ecx+0x28]
6401919a:	call   0x640190b4
6401919f:	add    esp,0xc
640191a2:	pop    ebp
640191a3:	ret    0x4
640191a6:	push   ebp
640191a7:	push   esi
640191a8:	push   edi
640191a9:	push   ebx
640191aa:	mov    ebp,edx
640191ac:	xor    eax,eax
640191ae:	xor    ebx,ebx
640191b0:	xor    edx,edx
640191b2:	xor    esi,esi
640191b4:	xor    edi,edi
640191b6:	call   ecx
640191b8:	pop    ebx
640191b9:	pop    edi
640191ba:	pop    esi
640191bb:	pop    ebp
640191bc:	ret    
640191bd:	mov    ebp,edx
640191bf:	mov    esi,ecx
640191c1:	mov    eax,ecx
640191c3:	push   0x1
640191c5:	call   0x64019561
640191ca:	xor    eax,eax
640191cc:	xor    ebx,ebx
640191ce:	xor    ecx,ecx
640191d0:	xor    edx,edx
640191d2:	xor    edi,edi
640191d4:	jmp    esi
640191d6:	push   ebp
640191d7:	mov    ebp,esp
640191d9:	push   ebx
640191da:	push   esi
640191db:	push   edi
640191dc:	push   0x0
640191de:	push   0x0
640191e0:	push   0x640191eb
640191e5:	push   ecx
640191e6:	call   0x6401ce8c
640191eb:	pop    edi
640191ec:	pop    esi
640191ed:	pop    ebx
640191ee:	pop    ebp
640191ef:	ret    
640191f0:	push   ebp
640191f1:	mov    ebp,DWORD PTR [esp+0x8]
640191f5:	push   edx
640191f6:	push   ecx
640191f7:	push   DWORD PTR [esp+0x14]
640191fb:	call   0x640190b4
64019200:	add    esp,0xc
64019203:	pop    ebp
64019204:	ret    0x8
64019207:	int3   
64019208:	int3   
64019209:	int3   
6401920a:	int3   
6401920b:	int3   
6401920c:	int3   
6401920d:	int3   
6401920e:	int3   
6401920f:	int3   
64019210:	mov    ecx,DWORD PTR [esp+0x4]
64019214:	cmp    WORD PTR [ecx],0x5a4d
64019219:	je     0x6401921e
6401921b:	xor    eax,eax
6401921d:	ret    
6401921e:	mov    eax,DWORD PTR [ecx+0x3c]
64019221:	add    eax,ecx
64019223:	cmp    DWORD PTR [eax],0x4550
64019229:	jne    0x6401921b
6401922b:	xor    ecx,ecx
6401922d:	cmp    WORD PTR [eax+0x18],0x10b
64019233:	sete   cl
64019236:	mov    eax,ecx
64019238:	ret    
64019239:	int3   
6401923a:	int3   
6401923b:	int3   
6401923c:	int3   
6401923d:	int3   
6401923e:	int3   
6401923f:	int3   
64019240:	mov    eax,DWORD PTR [esp+0x4]
64019244:	mov    ecx,DWORD PTR [eax+0x3c]
64019247:	add    ecx,eax
64019249:	movzx  eax,WORD PTR [ecx+0x14]
6401924d:	push   ebx
6401924e:	push   esi
6401924f:	movzx  esi,WORD PTR [ecx+0x6]
64019253:	xor    edx,edx
64019255:	test   esi,esi
64019257:	push   edi
64019258:	lea    eax,[eax+ecx*1+0x18]
6401925c:	jbe    0x6401927c
6401925e:	mov    edi,DWORD PTR [esp+0x14]
64019262:	mov    ecx,DWORD PTR [eax+0xc]
64019265:	cmp    edi,ecx
64019267:	jb     0x64019272
64019269:	mov    ebx,DWORD PTR [eax+0x8]
6401926c:	add    ebx,ecx
6401926e:	cmp    edi,ebx
64019270:	jb     0x6401927e
64019272:	add    edx,0x1
64019275:	add    eax,0x28
64019278:	cmp    edx,esi
6401927a:	jb     0x64019262
6401927c:	xor    eax,eax
6401927e:	pop    edi
6401927f:	pop    esi
64019280:	pop    ebx
64019281:	ret    
64019282:	int3   
64019283:	int3   
64019284:	int3   
64019285:	int3   
64019286:	int3   
64019287:	int3   
64019288:	int3   
64019289:	int3   
6401928a:	int3   
6401928b:	int3   
6401928c:	int3   
6401928d:	int3   
6401928e:	int3   
6401928f:	int3   
64019290:	push   ebp
64019291:	mov    ebp,esp
64019293:	push   0xfffffffe
64019295:	push   0x64026c00
6401929a:	push   0x64012030
6401929f:	mov    eax,fs:0x0
640192a5:	push   eax
640192a6:	sub    esp,0x8
640192a9:	push   ebx
640192aa:	push   esi
640192ab:	push   edi
640192ac:	mov    eax,ds:0x64029038
640192b1:	xor    DWORD PTR [ebp-0x8],eax
640192b4:	xor    eax,ebp
640192b6:	push   eax
640192b7:	lea    eax,[ebp-0x10]
640192ba:	mov    fs:0x0,eax
640192c0:	mov    DWORD PTR [ebp-0x18],esp
640192c3:	mov    DWORD PTR [ebp-0x4],0x0
640192ca:	push   0x64000000
640192cf:	call   0x64019210
640192d4:	add    esp,0x4
640192d7:	test   eax,eax
640192d9:	je     0x64019330
640192db:	mov    eax,DWORD PTR [ebp+0x8]
640192de:	sub    eax,0x64000000
640192e3:	push   eax
640192e4:	push   0x64000000
640192e9:	call   0x64019240
640192ee:	add    esp,0x8
640192f1:	test   eax,eax
640192f3:	je     0x64019330
640192f5:	mov    eax,DWORD PTR [eax+0x24]
640192f8:	shr    eax,0x1f
640192fb:	not    eax
640192fd:	and    eax,0x1
64019300:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019307:	mov    ecx,DWORD PTR [ebp-0x10]
6401930a:	mov    DWORD PTR fs:0x0,ecx
64019311:	pop    ecx
64019312:	pop    edi
64019313:	pop    esi
64019314:	pop    ebx
64019315:	mov    esp,ebp
64019317:	pop    ebp
64019318:	ret    
64019319:	mov    eax,DWORD PTR [ebp-0x14]
6401931c:	mov    ecx,DWORD PTR [eax]
6401931e:	mov    eax,DWORD PTR [ecx]
64019320:	xor    edx,edx
64019322:	cmp    eax,0xc0000005
64019327:	sete   dl
6401932a:	mov    eax,edx
6401932c:	ret    
6401932d:	mov    esp,DWORD PTR [ebp-0x18]
64019330:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019337:	xor    eax,eax
64019339:	mov    ecx,DWORD PTR [ebp-0x10]
6401933c:	mov    DWORD PTR fs:0x0,ecx
64019343:	pop    ecx
64019344:	pop    edi
64019345:	pop    esi
64019346:	pop    ebx
64019347:	mov    esp,ebp
64019349:	pop    ebp
6401934a:	ret    
6401934b:	xor    eax,eax
6401934d:	inc    eax
6401934e:	cmp    DWORD PTR [esp+0x4],0x0
64019353:	jne    0x64019357
64019355:	xor    eax,eax
64019357:	ret    
64019358:	push   ebp
64019359:	lea    ebp,[esp-0x2a8]
64019360:	sub    esp,0x328
64019366:	mov    eax,ds:0x64029038
6401936b:	xor    eax,ebp
6401936d:	mov    DWORD PTR [ebp+0x2a4],eax
64019373:	test   BYTE PTR ds:0x64029ac0,0x1
6401937a:	push   esi
6401937b:	je     0x64019385
6401937d:	push   0xa
6401937f:	call   0x64018d6f
64019384:	pop    ecx
64019385:	call   0x6401970d
6401938a:	test   eax,eax
6401938c:	je     0x64019396
6401938e:	push   0x16
64019390:	call   0x6401971a
64019395:	pop    ecx
64019396:	test   BYTE PTR ds:0x64029ac0,0x2
6401939d:	je     0x64019443
640193a3:	mov    DWORD PTR [ebp+0x88],eax
640193a9:	mov    DWORD PTR [ebp+0x84],ecx
640193af:	mov    DWORD PTR [ebp+0x80],edx
640193b5:	mov    DWORD PTR [ebp+0x7c],ebx
640193b8:	mov    DWORD PTR [ebp+0x78],esi
640193bb:	mov    DWORD PTR [ebp+0x74],edi
640193be:	data16 mov WORD PTR [ebp+0xa0],ss
640193c5:	data16 mov WORD PTR [ebp+0x94],cs
640193cc:	data16 mov WORD PTR [ebp+0x70],ds
640193d0:	data16 mov WORD PTR [ebp+0x6c],es
640193d4:	data16 mov WORD PTR [ebp+0x68],fs
640193d8:	data16 mov WORD PTR [ebp+0x64],gs
640193dc:	pushf  
640193dd:	pop    DWORD PTR [ebp+0x98]
640193e3:	mov    esi,DWORD PTR [ebp+0x2ac]
640193e9:	lea    eax,[ebp+0x2ac]
640193ef:	mov    DWORD PTR [ebp+0x9c],eax
640193f5:	mov    DWORD PTR [ebp-0x28],0x10001
640193fc:	mov    DWORD PTR [ebp+0x90],esi
64019402:	mov    eax,DWORD PTR [eax-0x4]
64019405:	push   0x50
64019407:	mov    DWORD PTR [ebp+0x8c],eax
6401940d:	lea    eax,[ebp-0x80]
64019410:	push   0x0
64019412:	push   eax
64019413:	call   0x64011320
64019418:	lea    eax,[ebp-0x80]
6401941b:	add    esp,0xc
6401941e:	mov    DWORD PTR [ebp-0x30],eax
64019421:	lea    eax,[ebp-0x28]
64019424:	push   0x0
64019426:	mov    DWORD PTR [ebp-0x80],0x40000015
6401942d:	mov    DWORD PTR [ebp-0x74],esi
64019430:	mov    DWORD PTR [ebp-0x2c],eax
64019433:	call   DWORD PTR ds:0x6402211c
64019439:	lea    eax,[ebp-0x30]
6401943c:	push   eax
6401943d:	call   DWORD PTR ds:0x64022118
64019443:	push   0x3
64019445:	call   0x64014306
6401944a:	int3   
6401944b:	int3   
6401944c:	push   ebp
6401944d:	mov    ebp,esp
6401944f:	push   ebx
64019450:	push   esi
64019451:	push   edi
64019452:	push   ebp
64019453:	push   0x0
64019455:	push   0x0
64019457:	push   0x64019464
6401945c:	push   DWORD PTR [ebp+0x8]
6401945f:	call   0x6401ce8c
64019464:	pop    ebp
64019465:	pop    edi
64019466:	pop    esi
64019467:	pop    ebx
64019468:	mov    esp,ebp
6401946a:	pop    ebp
6401946b:	ret    
6401946c:	mov    ecx,DWORD PTR [esp+0x4]
64019470:	test   DWORD PTR [ecx+0x4],0x6
64019477:	mov    eax,0x1
6401947c:	je     0x640194b0
6401947e:	mov    eax,DWORD PTR [esp+0x14]
64019482:	mov    ecx,DWORD PTR [eax-0x4]
64019485:	xor    ecx,eax
64019487:	call   0x64010c1e
6401948c:	push   ebp
6401948d:	mov    ebp,DWORD PTR [eax+0x10]
64019490:	mov    edx,DWORD PTR [eax+0x28]
64019493:	push   edx
64019494:	mov    edx,DWORD PTR [eax+0x24]
64019497:	push   edx
64019498:	call   0x640194b1
6401949d:	add    esp,0x8
640194a0:	pop    ebp
640194a1:	mov    eax,DWORD PTR [esp+0x8]
640194a5:	mov    edx,DWORD PTR [esp+0x10]
640194a9:	mov    DWORD PTR [edx],eax
640194ab:	mov    eax,0x3
640194b0:	ret    
640194b1:	push   ebx
640194b2:	push   esi
640194b3:	push   edi
640194b4:	mov    eax,DWORD PTR [esp+0x10]
640194b8:	push   ebp
640194b9:	push   eax
640194ba:	push   0xfffffffe
640194bc:	push   0x6401946c
640194c1:	push   DWORD PTR fs:0x0
640194c8:	mov    eax,ds:0x64029038
640194cd:	xor    eax,esp
640194cf:	push   eax
640194d0:	lea    eax,[esp+0x4]
640194d4:	mov    fs:0x0,eax
640194da:	mov    eax,DWORD PTR [esp+0x28]
640194de:	mov    ebx,DWORD PTR [eax+0x8]
640194e1:	mov    esi,DWORD PTR [eax+0xc]
640194e4:	cmp    esi,0xffffffff
640194e7:	je     0x64019523
640194e9:	cmp    DWORD PTR [esp+0x2c],0xffffffff
640194ee:	je     0x640194f6
640194f0:	cmp    esi,DWORD PTR [esp+0x2c]
640194f4:	jbe    0x64019523
640194f6:	lea    esi,[esi+esi*2]
640194f9:	mov    ecx,DWORD PTR [ebx+esi*4]
640194fc:	mov    DWORD PTR [esp+0xc],ecx
64019500:	mov    DWORD PTR [eax+0xc],ecx
64019503:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
64019508:	jne    0x64019521
6401950a:	push   0x101
6401950f:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
64019513:	call   0x64019561
64019518:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401951c:	call   0x64019580
64019521:	jmp    0x640194da
64019523:	mov    ecx,DWORD PTR [esp+0x4]
64019527:	mov    DWORD PTR fs:0x0,ecx
6401952e:	add    esp,0x18
64019531:	pop    edi
64019532:	pop    esi
64019533:	pop    ebx
64019534:	ret    
64019535:	xor    eax,eax
64019537:	mov    ecx,DWORD PTR fs:0x0
6401953e:	cmp    DWORD PTR [ecx+0x4],0x6401946c
64019545:	jne    0x64019557
64019547:	mov    edx,DWORD PTR [ecx+0xc]
6401954a:	mov    edx,DWORD PTR [edx+0xc]
6401954d:	cmp    DWORD PTR [ecx+0x8],edx
64019550:	jne    0x64019557
64019552:	mov    eax,0x1
64019557:	ret    
64019558:	push   ebx
64019559:	push   ecx
6401955a:	mov    ebx,0x64029ac4
6401955f:	jmp    0x6401956c
64019561:	push   ebx
64019562:	push   ecx
64019563:	mov    ebx,0x64029ac4
64019568:	mov    ecx,DWORD PTR [esp+0xc]
6401956c:	mov    DWORD PTR [ebx+0x8],ecx
6401956f:	mov    DWORD PTR [ebx+0x4],eax
64019572:	mov    DWORD PTR [ebx+0xc],ebp
64019575:	push   ebp
64019576:	push   ecx
64019577:	push   eax
64019578:	pop    eax
64019579:	pop    ecx
6401957a:	pop    ebp
6401957b:	pop    ecx
6401957c:	pop    ebx
6401957d:	ret    0x4
64019580:	call   eax
64019582:	ret    
64019583:	push   0xc
64019585:	push   0x64026c20
6401958a:	call   0x64011fc8
6401958f:	mov    ecx,DWORD PTR [ebp+0x8]
64019592:	xor    edi,edi
64019594:	cmp    ecx,edi
64019596:	jbe    0x640195c6
64019598:	push   0xffffffe0
6401959a:	pop    eax
6401959b:	xor    edx,edx
6401959d:	div    ecx
6401959f:	cmp    eax,DWORD PTR [ebp+0xc]
640195a2:	sbb    eax,eax
640195a4:	inc    eax
640195a5:	jne    0x640195c6
640195a7:	call   0x640129f0
640195ac:	mov    DWORD PTR [eax],0xc
640195b2:	push   edi
640195b3:	push   edi
640195b4:	push   edi
640195b5:	push   edi
640195b6:	push   edi
640195b7:	call   0x64010756
640195bc:	add    esp,0x14
640195bf:	xor    eax,eax
640195c1:	jmp    0x6401969b
640195c6:	imul   ecx,DWORD PTR [ebp+0xc]
640195ca:	mov    esi,ecx
640195cc:	mov    DWORD PTR [ebp+0x8],esi
640195cf:	cmp    esi,edi
640195d1:	jne    0x640195d6
640195d3:	xor    esi,esi
640195d5:	inc    esi
640195d6:	xor    ebx,ebx
640195d8:	mov    DWORD PTR [ebp-0x1c],ebx
640195db:	cmp    esi,0xffffffe0
640195de:	ja     0x64019649
640195e0:	cmp    DWORD PTR ds:0x6402e47c,0x3
640195e7:	jne    0x64019634
640195e9:	add    esi,0xf
640195ec:	and    esi,0xfffffff0
640195ef:	mov    DWORD PTR [ebp+0xc],esi
640195f2:	mov    eax,DWORD PTR [ebp+0x8]
640195f5:	cmp    eax,DWORD PTR ds:0x6402e46c
640195fb:	ja     0x64019634
640195fd:	push   0x4
640195ff:	call   0x6401823f
64019604:	pop    ecx
64019605:	mov    DWORD PTR [ebp-0x4],edi
64019608:	push   DWORD PTR [ebp+0x8]
6401960b:	call   0x64018a8c
64019610:	pop    ecx
64019611:	mov    DWORD PTR [ebp-0x1c],eax
64019614:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401961b:	call   0x6401967f
64019620:	mov    ebx,DWORD PTR [ebp-0x1c]
64019623:	cmp    ebx,edi
64019625:	je     0x64019638
64019627:	push   DWORD PTR [ebp+0x8]
6401962a:	push   edi
6401962b:	push   ebx
6401962c:	call   0x64011320
64019631:	add    esp,0xc
64019634:	cmp    ebx,edi
64019636:	jne    0x64019699
64019638:	push   esi
64019639:	push   0x8
6401963b:	push   DWORD PTR ds:0x6402aa0c
64019641:	call   DWORD PTR ds:0x64022100
64019647:	mov    ebx,eax
64019649:	cmp    ebx,edi
6401964b:	jne    0x64019699
6401964d:	cmp    DWORD PTR ds:0x6402ae84,edi
64019653:	je     0x64019688
64019655:	push   esi
64019656:	call   0x6401306b
6401965b:	pop    ecx
6401965c:	test   eax,eax
6401965e:	jne    0x640195d6
64019664:	mov    eax,DWORD PTR [ebp+0x10]
64019667:	cmp    eax,edi
64019669:	je     0x640195bf
6401966f:	mov    DWORD PTR [eax],0xc
64019675:	jmp    0x640195bf
6401967a:	xor    edi,edi
6401967c:	mov    esi,DWORD PTR [ebp+0xc]
6401967f:	push   0x4
64019681:	call   0x64018167
64019686:	pop    ecx
64019687:	ret    
64019688:	cmp    ebx,edi
6401968a:	jne    0x64019699
6401968c:	mov    eax,DWORD PTR [ebp+0x10]
6401968f:	cmp    eax,edi
64019691:	je     0x64019699
64019693:	mov    DWORD PTR [eax],0xc
64019699:	mov    eax,ebx
6401969b:	call   0x6401200d
640196a0:	ret    
640196a1:	push   esi
640196a2:	push   edi
640196a3:	xor    edi,edi
640196a5:	lea    esi,[edi+0x64029ad4]
640196ab:	push   DWORD PTR [esi]
640196ad:	call   0x64012aa8
640196b2:	add    edi,0x4
640196b5:	cmp    edi,0x28
640196b8:	pop    ecx
640196b9:	mov    DWORD PTR [esi],eax
640196bb:	jb     0x640196a5
640196bd:	pop    edi
640196be:	pop    esi
640196bf:	ret    
640196c0:	mov    eax,DWORD PTR [esp+0x4]
640196c4:	mov    ds:0x6402aec4,eax
640196c9:	mov    ds:0x6402aec8,eax
640196ce:	mov    ds:0x6402aecc,eax
640196d3:	mov    ds:0x6402aed0,eax
640196d8:	ret    
640196d9:	mov    eax,DWORD PTR [esp+0x4]
640196dd:	mov    ecx,DWORD PTR ds:0x640298dc
640196e3:	push   esi
640196e4:	cmp    DWORD PTR [eax+0x4],edx
640196e7:	je     0x640196f9
640196e9:	mov    esi,ecx
640196eb:	imul   esi,esi,0xc
640196ee:	add    esi,DWORD PTR [esp+0x8]
640196f2:	add    eax,0xc
640196f5:	cmp    eax,esi
640196f7:	jb     0x640196e4
640196f9:	imul   ecx,ecx,0xc
640196fc:	add    ecx,DWORD PTR [esp+0x8]
64019700:	pop    esi
64019701:	cmp    eax,ecx
64019703:	jae    0x6401970a
64019705:	cmp    DWORD PTR [eax+0x4],edx
64019708:	je     0x6401970c
6401970a:	xor    eax,eax
6401970c:	ret    
6401970d:	push   DWORD PTR ds:0x6402aecc
64019713:	call   0x64012b1f
64019718:	pop    ecx
64019719:	ret    
6401971a:	push   0x20
6401971c:	push   0x64026c40
64019721:	call   0x64011fc8
64019726:	xor    edi,edi
64019728:	mov    DWORD PTR [ebp-0x1c],edi
6401972b:	mov    DWORD PTR [ebp-0x28],edi
6401972e:	mov    ebx,DWORD PTR [ebp+0x8]
64019731:	cmp    ebx,0xb
64019734:	jg     0x64019782
64019736:	je     0x6401974d
64019738:	mov    eax,ebx
6401973a:	push   0x2
6401973c:	pop    ecx
6401973d:	sub    eax,ecx
6401973f:	je     0x64019763
64019741:	sub    eax,ecx
64019743:	je     0x6401974d
64019745:	sub    eax,ecx
64019747:	je     0x640197ad
64019749:	sub    eax,ecx
6401974b:	jne    0x64019791
6401974d:	call   0x64012cc4
64019752:	mov    edi,eax
64019754:	mov    DWORD PTR [ebp-0x28],edi
64019757:	test   edi,edi
64019759:	jne    0x6401976f
6401975b:	or     eax,0xffffffff
6401975e:	jmp    0x640198c4
64019763:	mov    esi,0x6402aec4
64019768:	mov    eax,ds:0x6402aec4
6401976d:	jmp    0x640197cf
6401976f:	push   DWORD PTR [edi+0x5c]
64019772:	mov    edx,ebx
64019774:	call   0x640196d9
64019779:	mov    esi,eax
6401977b:	add    esi,0x8
6401977e:	mov    eax,DWORD PTR [esi]
64019780:	jmp    0x640197dc
64019782:	mov    eax,ebx
64019784:	sub    eax,0xf
64019787:	je     0x640197c5
64019789:	sub    eax,0x6
6401978c:	je     0x640197b9
6401978e:	dec    eax
6401978f:	je     0x640197ad
64019791:	call   0x640129f0
64019796:	mov    DWORD PTR [eax],0x16
6401979c:	xor    eax,eax
6401979e:	push   eax
6401979f:	push   eax
640197a0:	push   eax
640197a1:	push   eax
640197a2:	push   eax
640197a3:	call   0x64010756
640197a8:	add    esp,0x14
640197ab:	jmp    0x6401975b
640197ad:	mov    esi,0x6402aecc
640197b2:	mov    eax,ds:0x6402aecc
640197b7:	jmp    0x640197cf
640197b9:	mov    esi,0x6402aec8
640197be:	mov    eax,ds:0x6402aec8
640197c3:	jmp    0x640197cf
640197c5:	mov    esi,0x6402aed0
640197ca:	mov    eax,ds:0x6402aed0
640197cf:	mov    DWORD PTR [ebp-0x1c],0x1
640197d6:	push   eax
640197d7:	call   0x64012b1f
640197dc:	mov    DWORD PTR [ebp-0x20],eax
640197df:	pop    ecx
640197e0:	xor    eax,eax
640197e2:	cmp    DWORD PTR [ebp-0x20],0x1
640197e6:	je     0x640198c4
640197ec:	cmp    DWORD PTR [ebp-0x20],eax
640197ef:	jne    0x640197f8
640197f1:	push   0x3
640197f3:	call   0x64014306
640197f8:	cmp    DWORD PTR [ebp-0x1c],eax
640197fb:	je     0x64019804
640197fd:	push   eax
640197fe:	call   0x6401823f
64019803:	pop    ecx
64019804:	xor    eax,eax
64019806:	mov    DWORD PTR [ebp-0x4],eax
64019809:	cmp    ebx,0x8
6401980c:	je     0x64019818
6401980e:	cmp    ebx,0xb
64019811:	je     0x64019818
64019813:	cmp    ebx,0x4
64019816:	jne    0x64019833
64019818:	mov    ecx,DWORD PTR [edi+0x60]
6401981b:	mov    DWORD PTR [ebp-0x2c],ecx
6401981e:	mov    DWORD PTR [edi+0x60],eax
64019821:	cmp    ebx,0x8
64019824:	jne    0x64019866
64019826:	mov    ecx,DWORD PTR [edi+0x64]
64019829:	mov    DWORD PTR [ebp-0x30],ecx
6401982c:	mov    DWORD PTR [edi+0x64],0x8c
64019833:	cmp    ebx,0x8
64019836:	jne    0x64019866
64019838:	mov    ecx,DWORD PTR ds:0x640298d0
6401983e:	mov    DWORD PTR [ebp-0x24],ecx
64019841:	mov    ecx,DWORD PTR ds:0x640298d4
64019847:	mov    edx,DWORD PTR ds:0x640298d0
6401984d:	add    ecx,edx
6401984f:	cmp    DWORD PTR [ebp-0x24],ecx
64019852:	jge    0x6401986d
64019854:	mov    ecx,DWORD PTR [ebp-0x24]
64019857:	imul   ecx,ecx,0xc
6401985a:	mov    edx,DWORD PTR [edi+0x5c]
6401985d:	mov    DWORD PTR [ecx+edx*1+0x8],eax
64019861:	inc    DWORD PTR [ebp-0x24]
64019864:	jmp    0x64019841
64019866:	call   0x64012b16
6401986b:	mov    DWORD PTR [esi],eax
6401986d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019874:	call   0x6401988e
64019879:	cmp    ebx,0x8
6401987c:	jne    0x6401989d
6401987e:	push   DWORD PTR [edi+0x64]
64019881:	push   ebx
64019882:	call   DWORD PTR [ebp-0x20]
64019885:	pop    ecx
64019886:	jmp    0x640198a1
64019888:	mov    ebx,DWORD PTR [ebp+0x8]
6401988b:	mov    edi,DWORD PTR [ebp-0x28]
6401988e:	cmp    DWORD PTR [ebp-0x1c],0x0
64019892:	je     0x6401989c
64019894:	push   0x0
64019896:	call   0x64018167
6401989b:	pop    ecx
6401989c:	ret    
6401989d:	push   ebx
6401989e:	call   DWORD PTR [ebp-0x20]
640198a1:	pop    ecx
640198a2:	cmp    ebx,0x8
640198a5:	je     0x640198b1
640198a7:	cmp    ebx,0xb
640198aa:	je     0x640198b1
640198ac:	cmp    ebx,0x4
640198af:	jne    0x640198c2
640198b1:	mov    eax,DWORD PTR [ebp-0x2c]
640198b4:	mov    DWORD PTR [edi+0x60],eax
640198b7:	cmp    ebx,0x8
640198ba:	jne    0x640198c2
640198bc:	mov    eax,DWORD PTR [ebp-0x30]
640198bf:	mov    DWORD PTR [edi+0x64],eax
640198c2:	xor    eax,eax
640198c4:	call   0x6401200d
640198c9:	ret    
640198ca:	mov    eax,DWORD PTR [esp+0x4]
640198ce:	mov    ds:0x6402aed8,eax
640198d3:	ret    
640198d4:	mov    eax,DWORD PTR [esp+0x4]
640198d8:	mov    ds:0x6402aee4,eax
640198dd:	ret    
640198de:	mov    eax,DWORD PTR [esp+0x4]
640198e2:	mov    ds:0x6402aee8,eax
640198e7:	ret    
640198e8:	push   DWORD PTR [esp+0x4]
640198ec:	call   DWORD PTR ds:0x6402201c
640198f2:	xor    eax,eax
640198f4:	inc    eax
640198f5:	ret    0x8
640198f8:	push   0x14
640198fa:	push   0x64026c60
640198ff:	call   0x64011fc8
64019904:	xor    edi,edi
64019906:	mov    DWORD PTR [ebp-0x1c],edi
64019909:	push   DWORD PTR ds:0x6402aee8
6401990f:	call   0x64012b1f
64019914:	pop    ecx
64019915:	mov    esi,eax
64019917:	cmp    esi,edi
64019919:	jne    0x6401996e
6401991b:	lea    eax,[ebp-0x1c]
6401991e:	push   eax
6401991f:	call   0x6401411f
64019924:	pop    ecx
64019925:	cmp    eax,edi
64019927:	je     0x64019936
64019929:	push   edi
6401992a:	push   edi
6401992b:	push   edi
6401992c:	push   edi
6401992d:	push   edi
6401992e:	call   0x6401065a
64019933:	add    esp,0x14
64019936:	cmp    DWORD PTR [ebp-0x1c],0x1
6401993a:	je     0x6401995d
6401993c:	push   0x64023a40
64019941:	call   DWORD PTR ds:0x64022130
64019947:	cmp    eax,edi
64019949:	je     0x6401995d
6401994b:	push   0x64023a18
64019950:	push   eax
64019951:	call   DWORD PTR ds:0x64022014
64019957:	mov    esi,eax
64019959:	cmp    esi,edi
6401995b:	jne    0x64019962
6401995d:	mov    esi,0x640198e8
64019962:	push   esi
64019963:	call   0x64012aa8
64019968:	pop    ecx
64019969:	mov    ds:0x6402aee8,eax
6401996e:	mov    DWORD PTR [ebp-0x4],edi
64019971:	push   DWORD PTR [ebp+0xc]
64019974:	push   DWORD PTR [ebp+0x8]
64019977:	call   esi
64019979:	mov    DWORD PTR [ebp-0x20],eax
6401997c:	jmp    0x640199ad
6401997e:	mov    eax,DWORD PTR [ebp-0x14]
64019981:	mov    eax,DWORD PTR [eax]
64019983:	mov    eax,DWORD PTR [eax]
64019985:	mov    DWORD PTR [ebp-0x24],eax
64019988:	xor    ecx,ecx
6401998a:	cmp    eax,0xc0000017
6401998f:	sete   cl
64019992:	mov    eax,ecx
64019994:	ret    
64019995:	mov    esp,DWORD PTR [ebp-0x18]
64019998:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6401999f:	jne    0x640199a9
640199a1:	push   0x8
640199a3:	call   DWORD PTR ds:0x64022060
640199a9:	and    DWORD PTR [ebp-0x20],0x0
640199ad:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640199b4:	mov    eax,DWORD PTR [ebp-0x20]
640199b7:	call   0x6401200d
640199bc:	ret    
640199bd:	push   ebp
640199be:	mov    ebp,esp
640199c0:	push   ecx
640199c1:	push   ecx
640199c2:	mov    eax,ds:0x64029038
640199c7:	xor    eax,ebp
640199c9:	mov    DWORD PTR [ebp-0x4],eax
640199cc:	mov    eax,ds:0x6402aeec
640199d1:	push   ebx
640199d2:	push   esi
640199d3:	xor    ebx,ebx
640199d5:	cmp    eax,ebx
640199d7:	push   edi
640199d8:	mov    edi,ecx
640199da:	jne    0x64019a16
640199dc:	lea    eax,[ebp-0x8]
640199df:	push   eax
640199e0:	xor    esi,esi
640199e2:	inc    esi
640199e3:	push   esi
640199e4:	push   0x6402458c
640199e9:	push   esi
640199ea:	call   DWORD PTR ds:0x640220bc
640199f0:	test   eax,eax
640199f2:	je     0x640199fc
640199f4:	mov    DWORD PTR ds:0x6402aeec,esi
640199fa:	jmp    0x64019a30
640199fc:	call   DWORD PTR ds:0x64022044
64019a02:	cmp    eax,0x78
64019a05:	jne    0x64019a11
64019a07:	push   0x2
64019a09:	pop    eax
64019a0a:	mov    ds:0x6402aeec,eax
64019a0f:	jmp    0x64019a16
64019a11:	mov    eax,ds:0x6402aeec
64019a16:	cmp    eax,0x2
64019a19:	je     0x64019aee
64019a1f:	cmp    eax,ebx
64019a21:	je     0x64019aee
64019a27:	cmp    eax,0x1
64019a2a:	jne    0x64019b18
64019a30:	cmp    DWORD PTR [ebp+0x18],ebx
64019a33:	mov    DWORD PTR [ebp-0x8],ebx
64019a36:	jne    0x64019a40
64019a38:	mov    eax,DWORD PTR [edi]
64019a3a:	mov    eax,DWORD PTR [eax+0x4]
64019a3d:	mov    DWORD PTR [ebp+0x18],eax
64019a40:	mov    esi,DWORD PTR ds:0x6402203c
64019a46:	xor    eax,eax
64019a48:	cmp    DWORD PTR [ebp+0x20],ebx
64019a4b:	push   ebx
64019a4c:	push   ebx
64019a4d:	push   DWORD PTR [ebp+0x10]
64019a50:	setne  al
64019a53:	push   DWORD PTR [ebp+0xc]
64019a56:	lea    eax,[eax*8+0x1]
64019a5d:	push   eax
64019a5e:	push   DWORD PTR [ebp+0x18]
64019a61:	call   esi
64019a63:	mov    edi,eax
64019a65:	cmp    edi,ebx
64019a67:	je     0x64019b18
64019a6d:	jle    0x64019aab
64019a6f:	cmp    edi,0x7ffffff0
64019a75:	ja     0x64019aab
64019a77:	lea    eax,[edi+edi*1+0x8]
64019a7b:	cmp    eax,0x400
64019a80:	ja     0x64019a95
64019a82:	call   0x640113a0
64019a87:	mov    eax,esp
64019a89:	cmp    eax,ebx
64019a8b:	je     0x64019aa9
64019a8d:	mov    DWORD PTR [eax],0xcccc
64019a93:	jmp    0x64019aa6
64019a95:	push   eax
64019a96:	call   0x64011b93
64019a9b:	cmp    eax,ebx
64019a9d:	pop    ecx
64019a9e:	je     0x64019aa9
64019aa0:	mov    DWORD PTR [eax],0xdddd
64019aa6:	add    eax,0x8
64019aa9:	mov    ebx,eax
64019aab:	test   ebx,ebx
64019aad:	je     0x64019b18
64019aaf:	lea    eax,[edi+edi*1]
64019ab2:	push   eax
64019ab3:	push   0x0
64019ab5:	push   ebx
64019ab6:	call   0x64011320
64019abb:	add    esp,0xc
64019abe:	push   edi
64019abf:	push   ebx
64019ac0:	push   DWORD PTR [ebp+0x10]
64019ac3:	push   DWORD PTR [ebp+0xc]
64019ac6:	push   0x1
64019ac8:	push   DWORD PTR [ebp+0x18]
64019acb:	call   esi
64019acd:	test   eax,eax
64019acf:	je     0x64019ae2
64019ad1:	push   DWORD PTR [ebp+0x14]
64019ad4:	push   eax
64019ad5:	push   ebx
64019ad6:	push   DWORD PTR [ebp+0x8]
64019ad9:	call   DWORD PTR ds:0x640220bc
64019adf:	mov    DWORD PTR [ebp-0x8],eax
64019ae2:	push   ebx
64019ae3:	call   0x6401112e
64019ae8:	mov    eax,DWORD PTR [ebp-0x8]
64019aeb:	pop    ecx
64019aec:	jmp    0x64019b63
64019aee:	xor    esi,esi
64019af0:	cmp    DWORD PTR [ebp+0x1c],ebx
64019af3:	jne    0x64019afd
64019af5:	mov    eax,DWORD PTR [edi]
64019af7:	mov    eax,DWORD PTR [eax+0x14]
64019afa:	mov    DWORD PTR [ebp+0x1c],eax
64019afd:	cmp    DWORD PTR [ebp+0x18],ebx
64019b00:	jne    0x64019b0a
64019b02:	mov    eax,DWORD PTR [edi]
64019b04:	mov    eax,DWORD PTR [eax+0x4]
64019b07:	mov    DWORD PTR [ebp+0x18],eax
64019b0a:	push   DWORD PTR [ebp+0x1c]
64019b0d:	call   0x6401b798
64019b12:	cmp    eax,0xffffffff
64019b15:	pop    ecx
64019b16:	jne    0x64019b1c
64019b18:	xor    eax,eax
64019b1a:	jmp    0x64019b63
64019b1c:	cmp    eax,DWORD PTR [ebp+0x18]
64019b1f:	je     0x64019b3f
64019b21:	push   ebx
64019b22:	push   ebx
64019b23:	lea    ecx,[ebp+0x10]
64019b26:	push   ecx
64019b27:	push   DWORD PTR [ebp+0xc]
64019b2a:	push   eax
64019b2b:	push   DWORD PTR [ebp+0x18]
64019b2e:	call   0x6401b7df
64019b33:	mov    esi,eax
64019b35:	add    esp,0x18
64019b38:	cmp    esi,ebx
64019b3a:	je     0x64019b18
64019b3c:	mov    DWORD PTR [ebp+0xc],esi
64019b3f:	push   DWORD PTR [ebp+0x14]
64019b42:	push   DWORD PTR [ebp+0x10]
64019b45:	push   DWORD PTR [ebp+0xc]
64019b48:	push   DWORD PTR [ebp+0x8]
64019b4b:	push   DWORD PTR [ebp+0x1c]
64019b4e:	call   DWORD PTR ds:0x640220c0
64019b54:	cmp    esi,ebx
64019b56:	mov    edi,eax
64019b58:	je     0x64019b61
64019b5a:	push   esi
64019b5b:	call   0x64011ab6
64019b60:	pop    ecx
64019b61:	mov    eax,edi
64019b63:	lea    esp,[ebp-0x14]
64019b66:	pop    edi
64019b67:	pop    esi
64019b68:	pop    ebx
64019b69:	mov    ecx,DWORD PTR [ebp-0x4]
64019b6c:	xor    ecx,ebp
64019b6e:	call   0x64010c1e
64019b73:	leave  
64019b74:	ret    
64019b75:	push   ebp
64019b76:	mov    ebp,esp
64019b78:	sub    esp,0x10
64019b7b:	push   DWORD PTR [ebp+0x8]
64019b7e:	lea    ecx,[ebp-0x10]
64019b81:	call   0x64010dc1
64019b86:	push   DWORD PTR [ebp+0x24]
64019b89:	lea    ecx,[ebp-0x10]
64019b8c:	push   DWORD PTR [ebp+0x20]
64019b8f:	push   DWORD PTR [ebp+0x1c]
64019b92:	push   DWORD PTR [ebp+0x18]
64019b95:	push   DWORD PTR [ebp+0x14]
64019b98:	push   DWORD PTR [ebp+0x10]
64019b9b:	push   DWORD PTR [ebp+0xc]
64019b9e:	call   0x640199bd
64019ba3:	add    esp,0x1c
64019ba6:	cmp    BYTE PTR [ebp-0x4],0x0
64019baa:	je     0x64019bb3
64019bac:	mov    ecx,DWORD PTR [ebp-0x8]
64019baf:	and    DWORD PTR [ecx+0x70],0xfffffffd
64019bb3:	leave  
64019bb4:	ret    
64019bb5:	push   esi
64019bb6:	mov    esi,DWORD PTR [esp+0x8]
64019bba:	test   esi,esi
64019bbc:	je     0x64019d43
64019bc2:	push   DWORD PTR [esi+0x4]
64019bc5:	call   0x64011ab6
64019bca:	push   DWORD PTR [esi+0x8]
64019bcd:	call   0x64011ab6
64019bd2:	push   DWORD PTR [esi+0xc]
64019bd5:	call   0x64011ab6
64019bda:	push   DWORD PTR [esi+0x10]
64019bdd:	call   0x64011ab6
64019be2:	push   DWORD PTR [esi+0x14]
64019be5:	call   0x64011ab6
64019bea:	push   DWORD PTR [esi+0x18]
64019bed:	call   0x64011ab6
64019bf2:	push   DWORD PTR [esi]
64019bf4:	call   0x64011ab6
64019bf9:	push   DWORD PTR [esi+0x20]
64019bfc:	call   0x64011ab6
64019c01:	push   DWORD PTR [esi+0x24]
64019c04:	call   0x64011ab6
64019c09:	push   DWORD PTR [esi+0x28]
64019c0c:	call   0x64011ab6
64019c11:	push   DWORD PTR [esi+0x2c]
64019c14:	call   0x64011ab6
64019c19:	push   DWORD PTR [esi+0x30]
64019c1c:	call   0x64011ab6
64019c21:	push   DWORD PTR [esi+0x34]
64019c24:	call   0x64011ab6
64019c29:	push   DWORD PTR [esi+0x1c]
64019c2c:	call   0x64011ab6
64019c31:	push   DWORD PTR [esi+0x38]
64019c34:	call   0x64011ab6
64019c39:	push   DWORD PTR [esi+0x3c]
64019c3c:	call   0x64011ab6
64019c41:	add    esp,0x40
64019c44:	push   DWORD PTR [esi+0x40]
64019c47:	call   0x64011ab6
64019c4c:	push   DWORD PTR [esi+0x44]
64019c4f:	call   0x64011ab6
64019c54:	push   DWORD PTR [esi+0x48]
64019c57:	call   0x64011ab6
64019c5c:	push   DWORD PTR [esi+0x4c]
64019c5f:	call   0x64011ab6
64019c64:	push   DWORD PTR [esi+0x50]
64019c67:	call   0x64011ab6
64019c6c:	push   DWORD PTR [esi+0x54]
64019c6f:	call   0x64011ab6
64019c74:	push   DWORD PTR [esi+0x58]
64019c77:	call   0x64011ab6
64019c7c:	push   DWORD PTR [esi+0x5c]
64019c7f:	call   0x64011ab6
64019c84:	push   DWORD PTR [esi+0x60]
64019c87:	call   0x64011ab6
64019c8c:	push   DWORD PTR [esi+0x64]
64019c8f:	call   0x64011ab6
64019c94:	push   DWORD PTR [esi+0x68]
64019c97:	call   0x64011ab6
64019c9c:	push   DWORD PTR [esi+0x6c]
64019c9f:	call   0x64011ab6
64019ca4:	push   DWORD PTR [esi+0x70]
64019ca7:	call   0x64011ab6
64019cac:	push   DWORD PTR [esi+0x74]
64019caf:	call   0x64011ab6
64019cb4:	push   DWORD PTR [esi+0x78]
64019cb7:	call   0x64011ab6
64019cbc:	push   DWORD PTR [esi+0x7c]
64019cbf:	call   0x64011ab6
64019cc4:	add    esp,0x40
64019cc7:	push   DWORD PTR [esi+0x80]
64019ccd:	call   0x64011ab6
64019cd2:	push   DWORD PTR [esi+0x84]
64019cd8:	call   0x64011ab6
64019cdd:	push   DWORD PTR [esi+0x88]
64019ce3:	call   0x64011ab6
64019ce8:	push   DWORD PTR [esi+0x8c]
64019cee:	call   0x64011ab6
64019cf3:	push   DWORD PTR [esi+0x90]
64019cf9:	call   0x64011ab6
64019cfe:	push   DWORD PTR [esi+0x94]
64019d04:	call   0x64011ab6
64019d09:	push   DWORD PTR [esi+0x98]
64019d0f:	call   0x64011ab6
64019d14:	push   DWORD PTR [esi+0x9c]
64019d1a:	call   0x64011ab6
64019d1f:	push   DWORD PTR [esi+0xa0]
64019d25:	call   0x64011ab6
64019d2a:	push   DWORD PTR [esi+0xa4]
64019d30:	call   0x64011ab6
64019d35:	push   DWORD PTR [esi+0xa8]
64019d3b:	call   0x64011ab6
64019d40:	add    esp,0x2c
64019d43:	pop    esi
64019d44:	ret    
64019d45:	push   esi
64019d46:	mov    esi,DWORD PTR [esp+0x8]
64019d4a:	test   esi,esi
64019d4c:	je     0x64019d83
64019d4e:	mov    eax,DWORD PTR [esi]
64019d50:	cmp    eax,DWORD PTR ds:0x64029bc8
64019d56:	je     0x64019d5f
64019d58:	push   eax
64019d59:	call   0x64011ab6
64019d5e:	pop    ecx
64019d5f:	mov    eax,DWORD PTR [esi+0x4]
64019d62:	cmp    eax,DWORD PTR ds:0x64029bcc
64019d68:	je     0x64019d71
64019d6a:	push   eax
64019d6b:	call   0x64011ab6
64019d70:	pop    ecx
64019d71:	mov    esi,DWORD PTR [esi+0x8]
64019d74:	cmp    esi,DWORD PTR ds:0x64029bd0
64019d7a:	je     0x64019d83
64019d7c:	push   esi
64019d7d:	call   0x64011ab6
64019d82:	pop    ecx
64019d83:	pop    esi
64019d84:	ret    
64019d85:	push   esi
64019d86:	mov    esi,DWORD PTR [esp+0x8]
64019d8a:	test   esi,esi
64019d8c:	je     0x64019e0c
64019d8e:	mov    eax,DWORD PTR [esi+0xc]
64019d91:	cmp    eax,DWORD PTR ds:0x64029bd4
64019d97:	je     0x64019da0
64019d99:	push   eax
64019d9a:	call   0x64011ab6
64019d9f:	pop    ecx
64019da0:	mov    eax,DWORD PTR [esi+0x10]
64019da3:	cmp    eax,DWORD PTR ds:0x64029bd8
64019da9:	je     0x64019db2
64019dab:	push   eax
64019dac:	call   0x64011ab6
64019db1:	pop    ecx
64019db2:	mov    eax,DWORD PTR [esi+0x14]
64019db5:	cmp    eax,DWORD PTR ds:0x64029bdc
64019dbb:	je     0x64019dc4
64019dbd:	push   eax
64019dbe:	call   0x64011ab6
64019dc3:	pop    ecx
64019dc4:	mov    eax,DWORD PTR [esi+0x18]
64019dc7:	cmp    eax,DWORD PTR ds:0x64029be0
64019dcd:	je     0x64019dd6
64019dcf:	push   eax
64019dd0:	call   0x64011ab6
64019dd5:	pop    ecx
64019dd6:	mov    eax,DWORD PTR [esi+0x1c]
64019dd9:	cmp    eax,DWORD PTR ds:0x64029be4
64019ddf:	je     0x64019de8
64019de1:	push   eax
64019de2:	call   0x64011ab6
64019de7:	pop    ecx
64019de8:	mov    eax,DWORD PTR [esi+0x20]
64019deb:	cmp    eax,DWORD PTR ds:0x64029be8
64019df1:	je     0x64019dfa
64019df3:	push   eax
64019df4:	call   0x64011ab6
64019df9:	pop    ecx
64019dfa:	mov    esi,DWORD PTR [esi+0x24]
64019dfd:	cmp    esi,DWORD PTR ds:0x64029bec
64019e03:	je     0x64019e0c
64019e05:	push   esi
64019e06:	call   0x64011ab6
64019e0b:	pop    ecx
64019e0c:	pop    esi
64019e0d:	ret    
64019e0e:	mov    eax,DWORD PTR [esp+0x4]
64019e12:	push   ebx
64019e13:	xor    ebx,ebx
64019e15:	cmp    eax,ebx
64019e17:	push   esi
64019e18:	push   edi
64019e19:	je     0x64019e23
64019e1b:	mov    edi,DWORD PTR [esp+0x14]
64019e1f:	cmp    edi,ebx
64019e21:	ja     0x64019e3e
64019e23:	call   0x640129f0
64019e28:	push   0x16
64019e2a:	pop    esi
64019e2b:	mov    DWORD PTR [eax],esi
64019e2d:	push   ebx
64019e2e:	push   ebx
64019e2f:	push   ebx
64019e30:	push   ebx
64019e31:	push   ebx
64019e32:	call   0x64010756
64019e37:	add    esp,0x14
64019e3a:	mov    eax,esi
64019e3c:	jmp    0x64019e7b
64019e3e:	mov    esi,DWORD PTR [esp+0x18]
64019e42:	cmp    esi,ebx
64019e44:	jne    0x64019e4a
64019e46:	mov    BYTE PTR [eax],bl
64019e48:	jmp    0x64019e23
64019e4a:	mov    edx,eax
64019e4c:	cmp    BYTE PTR [edx],bl
64019e4e:	je     0x64019e54
64019e50:	inc    edx
64019e51:	dec    edi
64019e52:	jne    0x64019e4c
64019e54:	cmp    edi,ebx
64019e56:	je     0x64019e46
64019e58:	mov    cl,BYTE PTR [esi]
64019e5a:	mov    BYTE PTR [edx],cl
64019e5c:	inc    edx
64019e5d:	inc    esi
64019e5e:	cmp    cl,bl
64019e60:	je     0x64019e65
64019e62:	dec    edi
64019e63:	jne    0x64019e58
64019e65:	cmp    edi,ebx
64019e67:	jne    0x64019e79
64019e69:	mov    BYTE PTR [eax],bl
64019e6b:	call   0x640129f0
64019e70:	push   0x22
64019e72:	pop    ecx
64019e73:	mov    DWORD PTR [eax],ecx
64019e75:	mov    esi,ecx
64019e77:	jmp    0x64019e2d
64019e79:	xor    eax,eax
64019e7b:	pop    edi
64019e7c:	pop    esi
64019e7d:	pop    ebx
64019e7e:	ret    
64019e7f:	int3   
64019e80:	push   ebp
64019e81:	mov    ebp,esp
64019e83:	push   esi
64019e84:	xor    eax,eax
64019e86:	push   eax
64019e87:	push   eax
64019e88:	push   eax
64019e89:	push   eax
64019e8a:	push   eax
64019e8b:	push   eax
64019e8c:	push   eax
64019e8d:	push   eax
64019e8e:	mov    edx,DWORD PTR [ebp+0xc]
64019e91:	lea    ecx,[ecx+0x0]
64019e94:	mov    al,BYTE PTR [edx]
64019e96:	or     al,al
64019e98:	je     0x64019ea3
64019e9a:	add    edx,0x1
64019e9d:	bts    DWORD PTR [esp],eax
64019ea1:	jmp    0x64019e94
64019ea3:	mov    esi,DWORD PTR [ebp+0x8]
64019ea6:	or     ecx,0xffffffff
64019ea9:	lea    ecx,[ecx+0x0]
64019eac:	add    ecx,0x1
64019eaf:	mov    al,BYTE PTR [esi]
64019eb1:	or     al,al
64019eb3:	je     0x64019ebe
64019eb5:	add    esi,0x1
64019eb8:	bt     DWORD PTR [esp],eax
64019ebc:	jae    0x64019eac
64019ebe:	mov    eax,ecx
64019ec0:	add    esp,0x20
64019ec3:	pop    esi
64019ec4:	leave  
64019ec5:	ret    
64019ec6:	push   ebp
64019ec7:	mov    ebp,esp
64019ec9:	push   ebx
64019eca:	push   esi
64019ecb:	mov    esi,DWORD PTR [ebp+0x8]
64019ece:	xor    ebx,ebx
64019ed0:	cmp    DWORD PTR [ebp+0x14],ebx
64019ed3:	push   edi
64019ed4:	jne    0x64019ee6
64019ed6:	cmp    esi,ebx
64019ed8:	jne    0x64019eea
64019eda:	cmp    DWORD PTR [ebp+0xc],ebx
64019edd:	jne    0x64019ef1
64019edf:	xor    eax,eax
64019ee1:	pop    edi
64019ee2:	pop    esi
64019ee3:	pop    ebx
64019ee4:	pop    ebp
64019ee5:	ret    
64019ee6:	cmp    esi,ebx
64019ee8:	je     0x64019ef1
64019eea:	mov    edi,DWORD PTR [ebp+0xc]
64019eed:	cmp    edi,ebx
64019eef:	ja     0x64019f0c
64019ef1:	call   0x640129f0
64019ef6:	push   0x16
64019ef8:	pop    esi
64019ef9:	mov    DWORD PTR [eax],esi
64019efb:	push   ebx
64019efc:	push   ebx
64019efd:	push   ebx
64019efe:	push   ebx
64019eff:	push   ebx
64019f00:	call   0x64010756
64019f05:	add    esp,0x14
64019f08:	mov    eax,esi
64019f0a:	jmp    0x64019ee1
64019f0c:	cmp    DWORD PTR [ebp+0x14],ebx
64019f0f:	jne    0x64019f15
64019f11:	mov    BYTE PTR [esi],bl
64019f13:	jmp    0x64019edf
64019f15:	mov    edx,DWORD PTR [ebp+0x10]
64019f18:	cmp    edx,ebx
64019f1a:	jne    0x64019f20
64019f1c:	mov    BYTE PTR [esi],bl
64019f1e:	jmp    0x64019ef1
64019f20:	cmp    DWORD PTR [ebp+0x14],0xffffffff
64019f24:	mov    eax,esi
64019f26:	jne    0x64019f37
64019f28:	mov    cl,BYTE PTR [edx]
64019f2a:	mov    BYTE PTR [eax],cl
64019f2c:	inc    eax
64019f2d:	inc    edx
64019f2e:	cmp    cl,bl
64019f30:	je     0x64019f50
64019f32:	dec    edi
64019f33:	jne    0x64019f28
64019f35:	jmp    0x64019f50
64019f37:	mov    cl,BYTE PTR [edx]
64019f39:	mov    BYTE PTR [eax],cl
64019f3b:	inc    eax
64019f3c:	inc    edx
64019f3d:	cmp    cl,bl
64019f3f:	je     0x64019f49
64019f41:	dec    edi
64019f42:	je     0x64019f49
64019f44:	dec    DWORD PTR [ebp+0x14]
64019f47:	jne    0x64019f37
64019f49:	cmp    DWORD PTR [ebp+0x14],ebx
64019f4c:	jne    0x64019f50
64019f4e:	mov    BYTE PTR [eax],bl
64019f50:	cmp    edi,ebx
64019f52:	jne    0x64019edf
64019f54:	cmp    DWORD PTR [ebp+0x14],0xffffffff
64019f58:	jne    0x64019f69
64019f5a:	mov    eax,DWORD PTR [ebp+0xc]
64019f5d:	push   0x50
64019f5f:	mov    BYTE PTR [esi+eax*1-0x1],bl
64019f63:	pop    eax
64019f64:	jmp    0x64019ee1
64019f69:	mov    BYTE PTR [esi],bl
64019f6b:	call   0x640129f0
64019f70:	push   0x22
64019f72:	pop    ecx
64019f73:	mov    DWORD PTR [eax],ecx
64019f75:	mov    esi,ecx
64019f77:	jmp    0x64019efb
64019f79:	int3   
64019f7a:	int3   
64019f7b:	int3   
64019f7c:	int3   
64019f7d:	int3   
64019f7e:	int3   
64019f7f:	int3   
64019f80:	push   ebp
64019f81:	mov    ebp,esp
64019f83:	push   esi
64019f84:	xor    eax,eax
64019f86:	push   eax
64019f87:	push   eax
64019f88:	push   eax
64019f89:	push   eax
64019f8a:	push   eax
64019f8b:	push   eax
64019f8c:	push   eax
64019f8d:	push   eax
64019f8e:	mov    edx,DWORD PTR [ebp+0xc]
64019f91:	lea    ecx,[ecx+0x0]
64019f94:	mov    al,BYTE PTR [edx]
64019f96:	or     al,al
64019f98:	je     0x64019fa3
64019f9a:	add    edx,0x1
64019f9d:	bts    DWORD PTR [esp],eax
64019fa1:	jmp    0x64019f94
64019fa3:	mov    esi,DWORD PTR [ebp+0x8]
64019fa6:	mov    edi,edi
64019fa8:	mov    al,BYTE PTR [esi]
64019faa:	or     al,al
64019fac:	je     0x64019fba
64019fae:	add    esi,0x1
64019fb1:	bt     DWORD PTR [esp],eax
64019fb5:	jae    0x64019fa8
64019fb7:	lea    eax,[esi-0x1]
64019fba:	add    esp,0x20
64019fbd:	pop    esi
64019fbe:	leave  
64019fbf:	ret    
64019fc0:	push   ebp
64019fc1:	mov    ebp,esp
64019fc3:	push   ecx
64019fc4:	push   ecx
64019fc5:	mov    eax,DWORD PTR [ebp+0xc]
64019fc8:	push   esi
64019fc9:	mov    esi,DWORD PTR [ebp+0x8]
64019fcc:	mov    DWORD PTR [ebp-0x8],eax
64019fcf:	mov    eax,DWORD PTR [ebp+0x10]
64019fd2:	push   edi
64019fd3:	push   esi
64019fd4:	mov    DWORD PTR [ebp-0x4],eax
64019fd7:	call   0x6401beff
64019fdc:	or     edi,0xffffffff
64019fdf:	cmp    eax,edi
64019fe1:	pop    ecx
64019fe2:	jne    0x64019ff5
64019fe4:	call   0x640129f0
64019fe9:	mov    DWORD PTR [eax],0x9
64019fef:	mov    eax,edi
64019ff1:	mov    edx,edi
64019ff3:	jmp    0x6401a03f
64019ff5:	push   DWORD PTR [ebp+0x14]
64019ff8:	lea    ecx,[ebp-0x4]
64019ffb:	push   ecx
64019ffc:	push   DWORD PTR [ebp-0x8]
64019fff:	push   eax
6401a000:	call   DWORD PTR ds:0x640220e0
6401a006:	cmp    eax,edi
6401a008:	mov    DWORD PTR [ebp-0x8],eax
6401a00b:	jne    0x6401a020
6401a00d:	call   DWORD PTR ds:0x64022044
6401a013:	test   eax,eax
6401a015:	je     0x6401a020
6401a017:	push   eax
6401a018:	call   0x64012a16
6401a01d:	pop    ecx
6401a01e:	jmp    0x64019fef
6401a020:	mov    eax,esi
6401a022:	sar    eax,0x5
6401a025:	mov    eax,DWORD PTR [eax*4+0x6402e4a0]
6401a02c:	and    esi,0x1f
6401a02f:	shl    esi,0x6
6401a032:	lea    eax,[eax+esi*1+0x4]
6401a036:	and    BYTE PTR [eax],0xfd
6401a039:	mov    eax,DWORD PTR [ebp-0x8]
6401a03c:	mov    edx,DWORD PTR [ebp-0x4]
6401a03f:	pop    edi
6401a040:	pop    esi
6401a041:	leave  
6401a042:	ret    
6401a043:	push   0x14
6401a045:	push   0x64026c80
6401a04a:	call   0x64011fc8
6401a04f:	or     esi,0xffffffff
6401a052:	mov    DWORD PTR [ebp-0x24],esi
6401a055:	mov    DWORD PTR [ebp-0x20],esi
6401a058:	mov    eax,DWORD PTR [ebp+0x8]
6401a05b:	cmp    eax,0xfffffffe
6401a05e:	jne    0x6401a07c
6401a060:	call   0x64012a03
6401a065:	and    DWORD PTR [eax],0x0
6401a068:	call   0x640129f0
6401a06d:	mov    DWORD PTR [eax],0x9
6401a073:	mov    eax,esi
6401a075:	mov    edx,esi
6401a077:	jmp    0x6401a14c
6401a07c:	xor    edi,edi
6401a07e:	cmp    eax,edi
6401a080:	jl     0x6401a08a
6401a082:	cmp    eax,DWORD PTR ds:0x6402e480
6401a088:	jb     0x6401a0ab
6401a08a:	call   0x64012a03
6401a08f:	mov    DWORD PTR [eax],edi
6401a091:	call   0x640129f0
6401a096:	mov    DWORD PTR [eax],0x9
6401a09c:	push   edi
6401a09d:	push   edi
6401a09e:	push   edi
6401a09f:	push   edi
6401a0a0:	push   edi
6401a0a1:	call   0x64010756
6401a0a6:	add    esp,0x14
6401a0a9:	jmp    0x6401a073
6401a0ab:	mov    ecx,eax
6401a0ad:	sar    ecx,0x5
6401a0b0:	lea    ebx,[ecx*4+0x6402e4a0]
6401a0b7:	mov    esi,eax
6401a0b9:	and    esi,0x1f
6401a0bc:	shl    esi,0x6
6401a0bf:	mov    ecx,DWORD PTR [ebx]
6401a0c1:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401a0c6:	and    ecx,0x1
6401a0c9:	jne    0x6401a0f1
6401a0cb:	call   0x64012a03
6401a0d0:	mov    DWORD PTR [eax],edi
6401a0d2:	call   0x640129f0
6401a0d7:	mov    DWORD PTR [eax],0x9
6401a0dd:	push   edi
6401a0de:	push   edi
6401a0df:	push   edi
6401a0e0:	push   edi
6401a0e1:	push   edi
6401a0e2:	call   0x64010756
6401a0e7:	add    esp,0x14
6401a0ea:	or     edx,0xffffffff
6401a0ed:	mov    eax,edx
6401a0ef:	jmp    0x6401a14c
6401a0f1:	push   eax
6401a0f2:	call   0x6401bf70
6401a0f7:	pop    ecx
6401a0f8:	mov    DWORD PTR [ebp-0x4],edi
6401a0fb:	mov    eax,DWORD PTR [ebx]
6401a0fd:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401a102:	je     0x6401a120
6401a104:	push   DWORD PTR [ebp+0x14]
6401a107:	push   DWORD PTR [ebp+0x10]
6401a10a:	push   DWORD PTR [ebp+0xc]
6401a10d:	push   DWORD PTR [ebp+0x8]
6401a110:	call   0x64019fc0
6401a115:	add    esp,0x10
6401a118:	mov    DWORD PTR [ebp-0x24],eax
6401a11b:	mov    DWORD PTR [ebp-0x20],edx
6401a11e:	jmp    0x6401a13a
6401a120:	call   0x640129f0
6401a125:	mov    DWORD PTR [eax],0x9
6401a12b:	call   0x64012a03
6401a130:	mov    DWORD PTR [eax],edi
6401a132:	or     DWORD PTR [ebp-0x24],0xffffffff
6401a136:	or     DWORD PTR [ebp-0x20],0xffffffff
6401a13a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401a141:	call   0x6401a152
6401a146:	mov    eax,DWORD PTR [ebp-0x24]
6401a149:	mov    edx,DWORD PTR [ebp-0x20]
6401a14c:	call   0x6401200d
6401a151:	ret    
6401a152:	push   DWORD PTR [ebp+0x8]
6401a155:	call   0x6401c010
6401a15a:	pop    ecx
6401a15b:	ret    
6401a15c:	push   ebp
6401a15d:	lea    ebp,[esp-0x514]
6401a164:	sub    esp,0x590
6401a16a:	mov    eax,ds:0x64029038
6401a16f:	xor    eax,ebp
6401a171:	mov    DWORD PTR [ebp+0x510],eax
6401a177:	mov    eax,DWORD PTR [ebp+0x520]
6401a17d:	push   esi
6401a17e:	xor    esi,esi
6401a180:	cmp    DWORD PTR [ebp+0x524],esi
6401a186:	mov    DWORD PTR [ebp-0x64],eax
6401a189:	mov    DWORD PTR [ebp-0x60],esi
6401a18c:	mov    DWORD PTR [ebp-0x68],esi
6401a18f:	jne    0x6401a198
6401a191:	xor    eax,eax
6401a193:	jmp    0x6401a768
6401a198:	cmp    eax,esi
6401a19a:	jne    0x6401a1c3
6401a19c:	call   0x64012a03
6401a1a1:	mov    DWORD PTR [eax],esi
6401a1a3:	call   0x640129f0
6401a1a8:	push   esi
6401a1a9:	push   esi
6401a1aa:	push   esi
6401a1ab:	push   esi
6401a1ac:	push   esi
6401a1ad:	mov    DWORD PTR [eax],0x16
6401a1b3:	call   0x64010756
6401a1b8:	add    esp,0x14
6401a1bb:	or     eax,0xffffffff
6401a1be:	jmp    0x6401a768
6401a1c3:	push   ebx
6401a1c4:	push   edi
6401a1c5:	mov    edi,DWORD PTR [ebp+0x51c]
6401a1cb:	mov    eax,edi
6401a1cd:	sar    eax,0x5
6401a1d0:	lea    esi,[eax*4+0x6402e4a0]
6401a1d7:	mov    eax,DWORD PTR [esi]
6401a1d9:	and    edi,0x1f
6401a1dc:	shl    edi,0x6
6401a1df:	add    eax,edi
6401a1e1:	mov    bl,BYTE PTR [eax+0x24]
6401a1e4:	add    bl,bl
6401a1e6:	sar    bl,1
6401a1e8:	cmp    bl,0x2
6401a1eb:	mov    DWORD PTR [ebp-0x70],esi
6401a1ee:	mov    BYTE PTR [ebp-0x71],bl
6401a1f1:	je     0x6401a1f8
6401a1f3:	cmp    bl,0x1
6401a1f6:	jne    0x6401a22b
6401a1f8:	mov    ecx,DWORD PTR [ebp+0x524]
6401a1fe:	not    ecx
6401a200:	test   cl,0x1
6401a203:	jne    0x6401a22b
6401a205:	call   0x64012a03
6401a20a:	xor    esi,esi
6401a20c:	mov    DWORD PTR [eax],esi
6401a20e:	call   0x640129f0
6401a213:	push   esi
6401a214:	push   esi
6401a215:	push   esi
6401a216:	push   esi
6401a217:	push   esi
6401a218:	mov    DWORD PTR [eax],0x16
6401a21e:	call   0x64010756
6401a223:	add    esp,0x14
6401a226:	jmp    0x6401a75b
6401a22b:	test   BYTE PTR [eax+0x4],0x20
6401a22f:	je     0x6401a245
6401a231:	push   0x2
6401a233:	push   0x0
6401a235:	push   0x0
6401a237:	push   DWORD PTR [ebp+0x51c]
6401a23d:	call   0x64019fc0
6401a242:	add    esp,0x10
6401a245:	push   DWORD PTR [ebp+0x51c]
6401a24b:	call   0x6401a89e
6401a250:	test   eax,eax
6401a252:	pop    ecx
6401a253:	je     0x6401a492
6401a259:	mov    eax,DWORD PTR [esi]
6401a25b:	test   BYTE PTR [edi+eax*1+0x4],0x80
6401a260:	je     0x6401a492
6401a266:	call   0x64012d3b
6401a26b:	mov    eax,DWORD PTR [eax+0x6c]
6401a26e:	xor    ecx,ecx
6401a270:	cmp    DWORD PTR [eax+0x14],ecx
6401a273:	lea    eax,[ebp-0x7c]
6401a276:	sete   cl
6401a279:	push   eax
6401a27a:	mov    eax,DWORD PTR [esi]
6401a27c:	push   DWORD PTR [edi+eax*1]
6401a27f:	mov    DWORD PTR [ebp-0x78],ecx
6401a282:	call   DWORD PTR ds:0x640220d8
6401a288:	test   eax,eax
6401a28a:	je     0x6401a492
6401a290:	xor    ecx,ecx
6401a292:	cmp    DWORD PTR [ebp-0x78],ecx
6401a295:	je     0x6401a29f
6401a297:	test   bl,bl
6401a299:	je     0x6401a494
6401a29f:	call   DWORD PTR ds:0x640220dc
6401a2a5:	mov    ebx,DWORD PTR [ebp-0x64]
6401a2a8:	mov    DWORD PTR [ebp-0x7c],eax
6401a2ab:	xor    eax,eax
6401a2ad:	cmp    DWORD PTR [ebp+0x524],eax
6401a2b3:	mov    DWORD PTR [ebp-0x5c],eax
6401a2b6:	jbe    0x6401a703
6401a2bc:	mov    DWORD PTR [ebp-0x54],eax
6401a2bf:	mov    al,BYTE PTR [ebp-0x71]
6401a2c2:	test   al,al
6401a2c4:	jne    0x6401a407
6401a2ca:	mov    cl,BYTE PTR [ebx]
6401a2cc:	mov    esi,DWORD PTR [ebp-0x70]
6401a2cf:	xor    eax,eax
6401a2d1:	cmp    cl,0xa
6401a2d4:	sete   al
6401a2d7:	mov    DWORD PTR [ebp-0x78],eax
6401a2da:	mov    eax,DWORD PTR [esi]
6401a2dc:	add    eax,edi
6401a2de:	cmp    DWORD PTR [eax+0x38],0x0
6401a2e2:	je     0x6401a302
6401a2e4:	mov    dl,BYTE PTR [eax+0x34]
6401a2e7:	mov    BYTE PTR [ebp+0x508],dl
6401a2ed:	mov    BYTE PTR [ebp+0x509],cl
6401a2f3:	and    DWORD PTR [eax+0x38],0x0
6401a2f7:	push   0x2
6401a2f9:	lea    eax,[ebp+0x508]
6401a2ff:	push   eax
6401a300:	jmp    0x6401a347
6401a302:	movsx  eax,cl
6401a305:	push   eax
6401a306:	call   0x640180bb
6401a30b:	test   eax,eax
6401a30d:	pop    ecx
6401a30e:	je     0x6401a344
6401a310:	mov    ecx,DWORD PTR [ebp-0x64]
6401a313:	sub    ecx,ebx
6401a315:	add    ecx,DWORD PTR [ebp+0x524]
6401a31b:	xor    eax,eax
6401a31d:	inc    eax
6401a31e:	cmp    ecx,eax
6401a320:	jbe    0x6401a47c
6401a326:	push   0x2
6401a328:	lea    eax,[ebp-0x58]
6401a32b:	push   ebx
6401a32c:	push   eax
6401a32d:	call   0x6401add1
6401a332:	add    esp,0xc
6401a335:	cmp    eax,0xffffffff
6401a338:	je     0x6401a6fd
6401a33e:	inc    ebx
6401a33f:	inc    DWORD PTR [ebp-0x54]
6401a342:	jmp    0x6401a35c
6401a344:	push   0x1
6401a346:	push   ebx
6401a347:	lea    eax,[ebp-0x58]
6401a34a:	push   eax
6401a34b:	call   0x6401add1
6401a350:	add    esp,0xc
6401a353:	cmp    eax,0xffffffff
6401a356:	je     0x6401a6fd
6401a35c:	xor    eax,eax
6401a35e:	push   eax
6401a35f:	push   eax
6401a360:	push   0x5
6401a362:	lea    ecx,[ebp+0x508]
6401a368:	push   ecx
6401a369:	push   0x1
6401a36b:	lea    ecx,[ebp-0x58]
6401a36e:	push   ecx
6401a36f:	push   eax
6401a370:	push   DWORD PTR [ebp-0x7c]
6401a373:	inc    ebx
6401a374:	inc    DWORD PTR [ebp-0x54]
6401a377:	call   DWORD PTR ds:0x64022024
6401a37d:	mov    esi,eax
6401a37f:	test   esi,esi
6401a381:	je     0x6401a6fd
6401a387:	push   0x0
6401a389:	lea    eax,[ebp-0x5c]
6401a38c:	push   eax
6401a38d:	push   esi
6401a38e:	lea    eax,[ebp+0x508]
6401a394:	push   eax
6401a395:	mov    eax,DWORD PTR [ebp-0x70]
6401a398:	mov    eax,DWORD PTR [eax]
6401a39a:	push   DWORD PTR [edi+eax*1]
6401a39d:	call   DWORD PTR ds:0x64022084
6401a3a3:	test   eax,eax
6401a3a5:	je     0x6401a6f4
6401a3ab:	mov    eax,DWORD PTR [ebp-0x54]
6401a3ae:	mov    ecx,DWORD PTR [ebp-0x68]
6401a3b1:	add    eax,ecx
6401a3b3:	cmp    DWORD PTR [ebp-0x5c],esi
6401a3b6:	mov    DWORD PTR [ebp-0x60],eax
6401a3b9:	jl     0x6401a6fd
6401a3bf:	cmp    DWORD PTR [ebp-0x78],0x0
6401a3c3:	je     0x6401a468
6401a3c9:	push   0x0
6401a3cb:	lea    eax,[ebp-0x5c]
6401a3ce:	push   eax
6401a3cf:	push   0x1
6401a3d1:	lea    eax,[ebp+0x508]
6401a3d7:	push   eax
6401a3d8:	mov    eax,DWORD PTR [ebp-0x70]
6401a3db:	mov    eax,DWORD PTR [eax]
6401a3dd:	mov    BYTE PTR [ebp+0x508],0xd
6401a3e4:	push   DWORD PTR [edi+eax*1]
6401a3e7:	call   DWORD PTR ds:0x64022084
6401a3ed:	test   eax,eax
6401a3ef:	je     0x6401a6f4
6401a3f5:	cmp    DWORD PTR [ebp-0x5c],0x1
6401a3f9:	jl     0x6401a6fd
6401a3ff:	inc    DWORD PTR [ebp-0x68]
6401a402:	inc    DWORD PTR [ebp-0x60]
6401a405:	jmp    0x6401a468
6401a407:	cmp    al,0x1
6401a409:	je     0x6401a40f
6401a40b:	cmp    al,0x2
6401a40d:	jne    0x6401a427
6401a40f:	movzx  esi,WORD PTR [ebx]
6401a412:	xor    ecx,ecx
6401a414:	cmp    si,0xa
6401a418:	sete   cl
6401a41b:	inc    ebx
6401a41c:	inc    ebx
6401a41d:	add    DWORD PTR [ebp-0x54],0x2
6401a421:	mov    DWORD PTR [ebp-0x58],esi
6401a424:	mov    DWORD PTR [ebp-0x78],ecx
6401a427:	cmp    al,0x1
6401a429:	je     0x6401a42f
6401a42b:	cmp    al,0x2
6401a42d:	jne    0x6401a468
6401a42f:	push   DWORD PTR [ebp-0x58]
6401a432:	call   0x6401c032
6401a437:	cmp    ax,WORD PTR [ebp-0x58]
6401a43b:	pop    ecx
6401a43c:	jne    0x6401a6f4
6401a442:	inc    DWORD PTR [ebp-0x60]
6401a445:	cmp    DWORD PTR [ebp-0x78],0x0
6401a449:	je     0x6401a468
6401a44b:	push   0xd
6401a44d:	pop    eax
6401a44e:	push   eax
6401a44f:	mov    DWORD PTR [ebp-0x58],eax
6401a452:	call   0x6401c032
6401a457:	cmp    ax,WORD PTR [ebp-0x58]
6401a45b:	pop    ecx
6401a45c:	jne    0x6401a6f4
6401a462:	inc    DWORD PTR [ebp-0x60]
6401a465:	inc    DWORD PTR [ebp-0x68]
6401a468:	mov    eax,DWORD PTR [ebp+0x524]
6401a46e:	cmp    DWORD PTR [ebp-0x54],eax
6401a471:	jb     0x6401a2bf
6401a477:	jmp    0x6401a6fd
6401a47c:	mov    ecx,DWORD PTR [esi]
6401a47e:	mov    dl,BYTE PTR [ebx]
6401a480:	inc    DWORD PTR [ebp-0x60]
6401a483:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6401a487:	mov    ecx,DWORD PTR [esi]
6401a489:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6401a48d:	jmp    0x6401a6fd
6401a492:	xor    ecx,ecx
6401a494:	mov    eax,DWORD PTR [esi]
6401a496:	add    eax,edi
6401a498:	test   BYTE PTR [eax+0x4],0x80
6401a49c:	je     0x6401a6cd
6401a4a2:	test   bl,bl
6401a4a4:	mov    eax,DWORD PTR [ebp-0x64]
6401a4a7:	mov    DWORD PTR [ebp-0x58],ecx
6401a4aa:	jne    0x6401a546
6401a4b0:	cmp    DWORD PTR [ebp+0x524],ecx
6401a4b6:	mov    DWORD PTR [ebp-0x5c],eax
6401a4b9:	jbe    0x6401a733
6401a4bf:	jmp    0x6401a4c4
6401a4c1:	mov    esi,DWORD PTR [ebp-0x70]
6401a4c4:	mov    ecx,DWORD PTR [ebp-0x5c]
6401a4c7:	and    DWORD PTR [ebp-0x54],0x0
6401a4cb:	sub    ecx,DWORD PTR [ebp-0x64]
6401a4ce:	lea    eax,[ebp-0x50]
6401a4d1:	cmp    ecx,DWORD PTR [ebp+0x524]
6401a4d7:	jae    0x6401a500
6401a4d9:	mov    edx,DWORD PTR [ebp-0x5c]
6401a4dc:	inc    DWORD PTR [ebp-0x5c]
6401a4df:	mov    dl,BYTE PTR [edx]
6401a4e1:	inc    ecx
6401a4e2:	cmp    dl,0xa
6401a4e5:	jne    0x6401a4f1
6401a4e7:	inc    DWORD PTR [ebp-0x68]
6401a4ea:	mov    BYTE PTR [eax],0xd
6401a4ed:	inc    eax
6401a4ee:	inc    DWORD PTR [ebp-0x54]
6401a4f1:	mov    BYTE PTR [eax],dl
6401a4f3:	inc    eax
6401a4f4:	inc    DWORD PTR [ebp-0x54]
6401a4f7:	cmp    DWORD PTR [ebp-0x54],0x400
6401a4fe:	jb     0x6401a4d1
6401a500:	mov    ebx,eax
6401a502:	lea    eax,[ebp-0x50]
6401a505:	sub    ebx,eax
6401a507:	push   0x0
6401a509:	lea    eax,[ebp-0x6c]
6401a50c:	push   eax
6401a50d:	push   ebx
6401a50e:	lea    eax,[ebp-0x50]
6401a511:	push   eax
6401a512:	mov    eax,DWORD PTR [esi]
6401a514:	push   DWORD PTR [edi+eax*1]
6401a517:	call   DWORD PTR ds:0x64022084
6401a51d:	test   eax,eax
6401a51f:	je     0x6401a6f4
6401a525:	mov    eax,DWORD PTR [ebp-0x6c]
6401a528:	add    DWORD PTR [ebp-0x60],eax
6401a52b:	cmp    eax,ebx
6401a52d:	jl     0x6401a6fd
6401a533:	mov    eax,DWORD PTR [ebp-0x5c]
6401a536:	sub    eax,DWORD PTR [ebp-0x64]
6401a539:	cmp    eax,DWORD PTR [ebp+0x524]
6401a53f:	jb     0x6401a4c1
6401a541:	jmp    0x6401a6fd
6401a546:	cmp    bl,0x2
6401a549:	mov    DWORD PTR [ebp-0x54],eax
6401a54c:	jne    0x6401a5f5
6401a552:	cmp    DWORD PTR [ebp+0x524],ecx
6401a558:	jbe    0x6401a733
6401a55e:	jmp    0x6401a563
6401a560:	mov    esi,DWORD PTR [ebp-0x70]
6401a563:	mov    ecx,DWORD PTR [ebp-0x54]
6401a566:	and    DWORD PTR [ebp-0x5c],0x0
6401a56a:	sub    ecx,DWORD PTR [ebp-0x64]
6401a56d:	lea    eax,[ebp-0x50]
6401a570:	cmp    ecx,DWORD PTR [ebp+0x524]
6401a576:	jae    0x6401a5ab
6401a578:	mov    edx,DWORD PTR [ebp-0x54]
6401a57b:	add    DWORD PTR [ebp-0x54],0x2
6401a57f:	movzx  edx,WORD PTR [edx]
6401a582:	inc    ecx
6401a583:	inc    ecx
6401a584:	cmp    dx,0xa
6401a588:	jne    0x6401a599
6401a58a:	add    DWORD PTR [ebp-0x68],0x2
6401a58e:	mov    WORD PTR [eax],0xd
6401a593:	inc    eax
6401a594:	inc    eax
6401a595:	add    DWORD PTR [ebp-0x5c],0x2
6401a599:	add    DWORD PTR [ebp-0x5c],0x2
6401a59d:	mov    WORD PTR [eax],dx
6401a5a0:	inc    eax
6401a5a1:	inc    eax
6401a5a2:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6401a5a9:	jb     0x6401a570
6401a5ab:	mov    ebx,eax
6401a5ad:	lea    eax,[ebp-0x50]
6401a5b0:	sub    ebx,eax
6401a5b2:	push   0x0
6401a5b4:	lea    eax,[ebp-0x6c]
6401a5b7:	push   eax
6401a5b8:	push   ebx
6401a5b9:	lea    eax,[ebp-0x50]
6401a5bc:	push   eax
6401a5bd:	mov    eax,DWORD PTR [esi]
6401a5bf:	push   DWORD PTR [edi+eax*1]
6401a5c2:	call   DWORD PTR ds:0x64022084
6401a5c8:	test   eax,eax
6401a5ca:	je     0x6401a6f4
6401a5d0:	mov    eax,DWORD PTR [ebp-0x6c]
6401a5d3:	add    DWORD PTR [ebp-0x60],eax
6401a5d6:	cmp    eax,ebx
6401a5d8:	jl     0x6401a6fd
6401a5de:	mov    eax,DWORD PTR [ebp-0x54]
6401a5e1:	sub    eax,DWORD PTR [ebp-0x64]
6401a5e4:	cmp    eax,DWORD PTR [ebp+0x524]
6401a5ea:	jb     0x6401a560
6401a5f0:	jmp    0x6401a6fd
6401a5f5:	cmp    DWORD PTR [ebp+0x524],ecx
6401a5fb:	jbe    0x6401a733
6401a601:	mov    ecx,DWORD PTR [ebp-0x54]
6401a604:	and    DWORD PTR [ebp-0x5c],0x0
6401a608:	sub    ecx,DWORD PTR [ebp-0x64]
6401a60b:	push   0x2
6401a60d:	lea    eax,[ebp+0x3b4]
6401a613:	pop    esi
6401a614:	cmp    ecx,DWORD PTR [ebp+0x524]
6401a61a:	jae    0x6401a648
6401a61c:	mov    edx,DWORD PTR [ebp-0x54]
6401a61f:	movzx  edx,WORD PTR [edx]
6401a622:	add    DWORD PTR [ebp-0x54],esi
6401a625:	add    ecx,esi
6401a627:	cmp    dx,0xa
6401a62b:	jne    0x6401a637
6401a62d:	mov    WORD PTR [eax],0xd
6401a632:	add    eax,esi
6401a634:	add    DWORD PTR [ebp-0x5c],esi
6401a637:	add    DWORD PTR [ebp-0x5c],esi
6401a63a:	mov    WORD PTR [eax],dx
6401a63d:	add    eax,esi
6401a63f:	cmp    DWORD PTR [ebp-0x5c],0x152
6401a646:	jb     0x6401a614
6401a648:	xor    esi,esi
6401a64a:	push   esi
6401a64b:	push   esi
6401a64c:	push   0x2ab
6401a651:	lea    ecx,[ebp+0x104]
6401a657:	push   ecx
6401a658:	lea    ecx,[ebp+0x3b4]
6401a65e:	sub    eax,ecx
6401a660:	cdq    
6401a661:	sub    eax,edx
6401a663:	sar    eax,1
6401a665:	push   eax
6401a666:	mov    eax,ecx
6401a668:	push   eax
6401a669:	push   esi
6401a66a:	push   0xfde9
6401a66f:	call   DWORD PTR ds:0x64022024
6401a675:	mov    ebx,eax
6401a677:	cmp    ebx,esi
6401a679:	je     0x6401a6f4
6401a67b:	push   0x0
6401a67d:	lea    eax,[ebp-0x6c]
6401a680:	push   eax
6401a681:	mov    eax,ebx
6401a683:	sub    eax,esi
6401a685:	push   eax
6401a686:	lea    eax,[ebp+esi*1+0x104]
6401a68d:	push   eax
6401a68e:	mov    eax,DWORD PTR [ebp-0x70]
6401a691:	mov    eax,DWORD PTR [eax]
6401a693:	push   DWORD PTR [edi+eax*1]
6401a696:	call   DWORD PTR ds:0x64022084
6401a69c:	test   eax,eax
6401a69e:	je     0x6401a6a9
6401a6a0:	add    esi,DWORD PTR [ebp-0x6c]
6401a6a3:	cmp    ebx,esi
6401a6a5:	jg     0x6401a67b
6401a6a7:	jmp    0x6401a6b2
6401a6a9:	call   DWORD PTR ds:0x64022044
6401a6af:	mov    DWORD PTR [ebp-0x58],eax
6401a6b2:	cmp    ebx,esi
6401a6b4:	jg     0x6401a6fd
6401a6b6:	mov    eax,DWORD PTR [ebp-0x54]
6401a6b9:	sub    eax,DWORD PTR [ebp-0x64]
6401a6bc:	cmp    eax,DWORD PTR [ebp+0x524]
6401a6c2:	mov    DWORD PTR [ebp-0x60],eax
6401a6c5:	jb     0x6401a601
6401a6cb:	jmp    0x6401a6fd
6401a6cd:	push   0x0
6401a6cf:	lea    ecx,[ebp-0x6c]
6401a6d2:	push   ecx
6401a6d3:	push   DWORD PTR [ebp+0x524]
6401a6d9:	push   DWORD PTR [ebp-0x64]
6401a6dc:	push   DWORD PTR [eax]
6401a6de:	call   DWORD PTR ds:0x64022084
6401a6e4:	test   eax,eax
6401a6e6:	je     0x6401a6f4
6401a6e8:	mov    eax,DWORD PTR [ebp-0x6c]
6401a6eb:	and    DWORD PTR [ebp-0x58],0x0
6401a6ef:	mov    DWORD PTR [ebp-0x60],eax
6401a6f2:	jmp    0x6401a6fd
6401a6f4:	call   DWORD PTR ds:0x64022044
6401a6fa:	mov    DWORD PTR [ebp-0x58],eax
6401a6fd:	cmp    DWORD PTR [ebp-0x60],0x0
6401a701:	jne    0x6401a760
6401a703:	cmp    DWORD PTR [ebp-0x58],0x0
6401a707:	je     0x6401a730
6401a709:	push   0x5
6401a70b:	pop    esi
6401a70c:	cmp    DWORD PTR [ebp-0x58],esi
6401a70f:	jne    0x6401a725
6401a711:	call   0x640129f0
6401a716:	mov    DWORD PTR [eax],0x9
6401a71c:	call   0x64012a03
6401a721:	mov    DWORD PTR [eax],esi
6401a723:	jmp    0x6401a75b
6401a725:	push   DWORD PTR [ebp-0x58]
6401a728:	call   0x64012a16
6401a72d:	pop    ecx
6401a72e:	jmp    0x6401a75b
6401a730:	mov    esi,DWORD PTR [ebp-0x70]
6401a733:	mov    eax,DWORD PTR [esi]
6401a735:	test   BYTE PTR [edi+eax*1+0x4],0x40
6401a73a:	je     0x6401a748
6401a73c:	mov    eax,DWORD PTR [ebp-0x64]
6401a73f:	cmp    BYTE PTR [eax],0x1a
6401a742:	jne    0x6401a748
6401a744:	xor    eax,eax
6401a746:	jmp    0x6401a766
6401a748:	call   0x640129f0
6401a74d:	mov    DWORD PTR [eax],0x1c
6401a753:	call   0x64012a03
6401a758:	and    DWORD PTR [eax],0x0
6401a75b:	or     eax,0xffffffff
6401a75e:	jmp    0x6401a766
6401a760:	mov    eax,DWORD PTR [ebp-0x60]
6401a763:	sub    eax,DWORD PTR [ebp-0x68]
6401a766:	pop    edi
6401a767:	pop    ebx
6401a768:	mov    ecx,DWORD PTR [ebp+0x510]
6401a76e:	xor    ecx,ebp
6401a770:	pop    esi
6401a771:	call   0x64010c1e
6401a776:	add    ebp,0x514
6401a77c:	leave  
6401a77d:	ret    
6401a77e:	push   0x10
6401a780:	push   0x64026ca0
6401a785:	call   0x64011fc8
6401a78a:	mov    eax,DWORD PTR [ebp+0x8]
6401a78d:	cmp    eax,0xfffffffe
6401a790:	jne    0x6401a7ad
6401a792:	call   0x64012a03
6401a797:	and    DWORD PTR [eax],0x0
6401a79a:	call   0x640129f0
6401a79f:	mov    DWORD PTR [eax],0x9
6401a7a5:	or     eax,0xffffffff
6401a7a8:	jmp    0x6401a84a
6401a7ad:	xor    edi,edi
6401a7af:	cmp    eax,edi
6401a7b1:	jl     0x6401a7bb
6401a7b3:	cmp    eax,DWORD PTR ds:0x6402e480
6401a7b9:	jb     0x6401a7dc
6401a7bb:	call   0x64012a03
6401a7c0:	mov    DWORD PTR [eax],edi
6401a7c2:	call   0x640129f0
6401a7c7:	mov    DWORD PTR [eax],0x9
6401a7cd:	push   edi
6401a7ce:	push   edi
6401a7cf:	push   edi
6401a7d0:	push   edi
6401a7d1:	push   edi
6401a7d2:	call   0x64010756
6401a7d7:	add    esp,0x14
6401a7da:	jmp    0x6401a7a5
6401a7dc:	mov    ecx,eax
6401a7de:	sar    ecx,0x5
6401a7e1:	lea    ebx,[ecx*4+0x6402e4a0]
6401a7e8:	mov    esi,eax
6401a7ea:	and    esi,0x1f
6401a7ed:	shl    esi,0x6
6401a7f0:	mov    ecx,DWORD PTR [ebx]
6401a7f2:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401a7f7:	and    ecx,0x1
6401a7fa:	je     0x6401a7bb
6401a7fc:	push   eax
6401a7fd:	call   0x6401bf70
6401a802:	pop    ecx
6401a803:	mov    DWORD PTR [ebp-0x4],edi
6401a806:	mov    eax,DWORD PTR [ebx]
6401a808:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401a80d:	je     0x6401a825
6401a80f:	push   DWORD PTR [ebp+0x10]
6401a812:	push   DWORD PTR [ebp+0xc]
6401a815:	push   DWORD PTR [ebp+0x8]
6401a818:	call   0x6401a15c
6401a81d:	add    esp,0xc
6401a820:	mov    DWORD PTR [ebp-0x1c],eax
6401a823:	jmp    0x6401a83b
6401a825:	call   0x640129f0
6401a82a:	mov    DWORD PTR [eax],0x9
6401a830:	call   0x64012a03
6401a835:	mov    DWORD PTR [eax],edi
6401a837:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401a83b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401a842:	call   0x6401a850
6401a847:	mov    eax,DWORD PTR [ebp-0x1c]
6401a84a:	call   0x6401200d
6401a84f:	ret    
6401a850:	push   DWORD PTR [ebp+0x8]
6401a853:	call   0x6401c010
6401a858:	pop    ecx
6401a859:	ret    
6401a85a:	inc    DWORD PTR ds:0x6402aef4
6401a860:	push   0x1000
6401a865:	call   0x64013f00
6401a86a:	test   eax,eax
6401a86c:	pop    ecx
6401a86d:	mov    ecx,DWORD PTR [esp+0x4]
6401a871:	mov    DWORD PTR [ecx+0x8],eax
6401a874:	je     0x6401a883
6401a876:	or     DWORD PTR [ecx+0xc],0x8
6401a87a:	mov    DWORD PTR [ecx+0x18],0x1000
6401a881:	jmp    0x6401a894
6401a883:	or     DWORD PTR [ecx+0xc],0x4
6401a887:	lea    eax,[ecx+0x14]
6401a88a:	mov    DWORD PTR [ecx+0x8],eax
6401a88d:	mov    DWORD PTR [ecx+0x18],0x2
6401a894:	mov    eax,DWORD PTR [ecx+0x8]
6401a897:	and    DWORD PTR [ecx+0x4],0x0
6401a89b:	mov    DWORD PTR [ecx],eax
6401a89d:	ret    
6401a89e:	mov    eax,DWORD PTR [esp+0x4]
6401a8a2:	cmp    eax,0xfffffffe
6401a8a5:	jne    0x6401a8b5
6401a8a7:	call   0x640129f0
6401a8ac:	mov    DWORD PTR [eax],0x9
6401a8b2:	xor    eax,eax
6401a8b4:	ret    
6401a8b5:	push   esi
6401a8b6:	xor    esi,esi
6401a8b8:	cmp    eax,esi
6401a8ba:	jl     0x6401a8c4
6401a8bc:	cmp    eax,DWORD PTR ds:0x6402e480
6401a8c2:	jb     0x6401a8e0
6401a8c4:	call   0x640129f0
6401a8c9:	push   esi
6401a8ca:	push   esi
6401a8cb:	push   esi
6401a8cc:	push   esi
6401a8cd:	push   esi
6401a8ce:	mov    DWORD PTR [eax],0x9
6401a8d4:	call   0x64010756
6401a8d9:	add    esp,0x14
6401a8dc:	xor    eax,eax
6401a8de:	pop    esi
6401a8df:	ret    
6401a8e0:	mov    ecx,eax
6401a8e2:	and    eax,0x1f
6401a8e5:	sar    ecx,0x5
6401a8e8:	mov    ecx,DWORD PTR [ecx*4+0x6402e4a0]
6401a8ef:	shl    eax,0x6
6401a8f2:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6401a8f7:	and    eax,0x40
6401a8fa:	pop    esi
6401a8fb:	ret    
6401a8fc:	mov    eax,0x64029c10
6401a901:	ret    
6401a902:	mov    eax,ds:0x6402e460
6401a907:	test   eax,eax
6401a909:	push   esi
6401a90a:	push   0x14
6401a90c:	pop    esi
6401a90d:	jne    0x6401a916
6401a90f:	mov    eax,0x200
6401a914:	jmp    0x6401a91c
6401a916:	cmp    eax,esi
6401a918:	jge    0x6401a921
6401a91a:	mov    eax,esi
6401a91c:	mov    ds:0x6402e460,eax
6401a921:	push   0x4
6401a923:	push   eax
6401a924:	call   0x64013f40
6401a929:	test   eax,eax
6401a92b:	pop    ecx
6401a92c:	pop    ecx
6401a92d:	mov    ds:0x6402d444,eax
6401a932:	jne    0x6401a952
6401a934:	push   0x4
6401a936:	push   esi
6401a937:	mov    DWORD PTR ds:0x6402e460,esi
6401a93d:	call   0x64013f40
6401a942:	test   eax,eax
6401a944:	pop    ecx
6401a945:	pop    ecx
6401a946:	mov    ds:0x6402d444,eax
6401a94b:	jne    0x6401a952
6401a94d:	push   0x1a
6401a94f:	pop    eax
6401a950:	pop    esi
6401a951:	ret    
6401a952:	xor    edx,edx
6401a954:	mov    ecx,0x64029c10
6401a959:	jmp    0x6401a960
6401a95b:	mov    eax,ds:0x6402d444
6401a960:	mov    DWORD PTR [edx+eax*1],ecx
6401a963:	add    ecx,0x20
6401a966:	add    edx,0x4
6401a969:	cmp    ecx,0x64029e90
6401a96f:	jl     0x6401a95b
6401a971:	push   0xfffffffe
6401a973:	pop    esi
6401a974:	xor    edx,edx
6401a976:	mov    ecx,0x64029c20
6401a97b:	push   edi
6401a97c:	mov    eax,edx
6401a97e:	sar    eax,0x5
6401a981:	mov    eax,DWORD PTR [eax*4+0x6402e4a0]
6401a988:	mov    edi,edx
6401a98a:	and    edi,0x1f
6401a98d:	shl    edi,0x6
6401a990:	mov    eax,DWORD PTR [edi+eax*1]
6401a993:	cmp    eax,0xffffffff
6401a996:	je     0x6401a9a0
6401a998:	cmp    eax,esi
6401a99a:	je     0x6401a9a0
6401a99c:	test   eax,eax
6401a99e:	jne    0x6401a9a2
6401a9a0:	mov    DWORD PTR [ecx],esi
6401a9a2:	add    ecx,0x20
6401a9a5:	inc    edx
6401a9a6:	cmp    ecx,0x64029c80
6401a9ac:	jl     0x6401a97c
6401a9ae:	pop    edi
6401a9af:	xor    eax,eax
6401a9b1:	pop    esi
6401a9b2:	ret    
6401a9b3:	call   0x6401c311
6401a9b8:	cmp    BYTE PTR ds:0x6402a8ac,0x0
6401a9bf:	je     0x6401a9c6
6401a9c1:	call   0x6401c0f4
6401a9c6:	push   DWORD PTR ds:0x6402d444
6401a9cc:	call   0x64011ab6
6401a9d1:	pop    ecx
6401a9d2:	ret    
6401a9d3:	push   esi
6401a9d4:	mov    esi,DWORD PTR [esp+0x8]
6401a9d8:	mov    eax,0x64029c10
6401a9dd:	cmp    esi,eax
6401a9df:	jb     0x6401aa03
6401a9e1:	cmp    esi,0x64029e70
6401a9e7:	ja     0x6401aa03
6401a9e9:	mov    ecx,esi
6401a9eb:	sub    ecx,eax
6401a9ed:	sar    ecx,0x5
6401a9f0:	add    ecx,0x10
6401a9f3:	push   ecx
6401a9f4:	call   0x6401823f
6401a9f9:	or     DWORD PTR [esi+0xc],0x8000
6401aa00:	pop    ecx
6401aa01:	pop    esi
6401aa02:	ret    
6401aa03:	add    esi,0x20
6401aa06:	push   esi
6401aa07:	call   DWORD PTR ds:0x64022098
6401aa0d:	pop    esi
6401aa0e:	ret    
6401aa0f:	mov    eax,DWORD PTR [esp+0x4]
6401aa13:	cmp    eax,0x14
6401aa16:	jge    0x6401aa2e
6401aa18:	add    eax,0x10
6401aa1b:	push   eax
6401aa1c:	call   0x6401823f
6401aa21:	mov    eax,DWORD PTR [esp+0xc]
6401aa25:	or     DWORD PTR [eax+0xc],0x8000
6401aa2c:	pop    ecx
6401aa2d:	ret    
6401aa2e:	mov    eax,DWORD PTR [esp+0x8]
6401aa32:	add    eax,0x20
6401aa35:	push   eax
6401aa36:	call   DWORD PTR ds:0x64022098
6401aa3c:	ret    
6401aa3d:	mov    eax,DWORD PTR [esp+0x4]
6401aa41:	mov    ecx,0x64029c10
6401aa46:	cmp    eax,ecx
6401aa48:	jb     0x6401aa68
6401aa4a:	cmp    eax,0x64029e70
6401aa4f:	ja     0x6401aa68
6401aa51:	and    DWORD PTR [eax+0xc],0xffff7fff
6401aa58:	sub    eax,ecx
6401aa5a:	sar    eax,0x5
6401aa5d:	add    eax,0x10
6401aa60:	push   eax
6401aa61:	call   0x64018167
6401aa66:	pop    ecx
6401aa67:	ret    
6401aa68:	add    eax,0x20
6401aa6b:	push   eax
6401aa6c:	call   DWORD PTR ds:0x6402209c
6401aa72:	ret    
6401aa73:	mov    ecx,DWORD PTR [esp+0x4]
6401aa77:	cmp    ecx,0x14
6401aa7a:	mov    eax,DWORD PTR [esp+0x8]
6401aa7e:	jge    0x6401aa92
6401aa80:	and    DWORD PTR [eax+0xc],0xffff7fff
6401aa87:	add    ecx,0x10
6401aa8a:	push   ecx
6401aa8b:	call   0x64018167
6401aa90:	pop    ecx
6401aa91:	ret    
6401aa92:	add    eax,0x20
6401aa95:	push   eax
6401aa96:	call   DWORD PTR ds:0x6402209c
6401aa9c:	ret    
6401aa9d:	mov    eax,DWORD PTR [esp+0x4]
6401aaa1:	push   esi
6401aaa2:	xor    esi,esi
6401aaa4:	cmp    eax,esi
6401aaa6:	jne    0x6401aac5
6401aaa8:	call   0x640129f0
6401aaad:	push   esi
6401aaae:	push   esi
6401aaaf:	push   esi
6401aab0:	push   esi
6401aab1:	push   esi
6401aab2:	mov    DWORD PTR [eax],0x16
6401aab8:	call   0x64010756
6401aabd:	add    esp,0x14
6401aac0:	or     eax,0xffffffff
6401aac3:	pop    esi
6401aac4:	ret    
6401aac5:	mov    eax,DWORD PTR [eax+0x10]
6401aac8:	pop    esi
6401aac9:	ret    
6401aaca:	push   ebp
6401aacb:	mov    ebp,esp
6401aacd:	sub    esp,0x10
6401aad0:	mov    eax,ds:0x64029038
6401aad5:	xor    eax,ebp
6401aad7:	mov    DWORD PTR [ebp-0x4],eax
6401aada:	push   ebx
6401aadb:	push   esi
6401aadc:	mov    esi,DWORD PTR [ebp+0xc]
6401aadf:	test   BYTE PTR [esi+0xc],0x40
6401aae3:	push   edi
6401aae4:	jne    0x6401ac79
6401aaea:	push   esi
6401aaeb:	call   0x6401aa9d
6401aaf0:	cmp    eax,0xffffffff
6401aaf3:	pop    ecx
6401aaf4:	mov    edi,0x64029810
6401aaf9:	je     0x6401ab29
6401aafb:	push   esi
6401aafc:	call   0x6401aa9d
6401ab01:	cmp    eax,0xfffffffe
6401ab04:	pop    ecx
6401ab05:	je     0x6401ab29
6401ab07:	push   esi
6401ab08:	call   0x6401aa9d
6401ab0d:	sar    eax,0x5
6401ab10:	push   esi
6401ab11:	lea    ebx,[eax*4+0x6402e4a0]
6401ab18:	call   0x6401aa9d
6401ab1d:	and    eax,0x1f
6401ab20:	pop    ecx
6401ab21:	shl    eax,0x6
6401ab24:	add    eax,DWORD PTR [ebx]
6401ab26:	pop    ecx
6401ab27:	jmp    0x6401ab2b
6401ab29:	mov    eax,edi
6401ab2b:	mov    al,BYTE PTR [eax+0x24]
6401ab2e:	and    al,0x7f
6401ab30:	cmp    al,0x2
6401ab32:	je     0x6401ac79
6401ab38:	push   esi
6401ab39:	call   0x6401aa9d
6401ab3e:	cmp    eax,0xffffffff
6401ab41:	pop    ecx
6401ab42:	je     0x6401ab72
6401ab44:	push   esi
6401ab45:	call   0x6401aa9d
6401ab4a:	cmp    eax,0xfffffffe
6401ab4d:	pop    ecx
6401ab4e:	je     0x6401ab72
6401ab50:	push   esi
6401ab51:	call   0x6401aa9d
6401ab56:	sar    eax,0x5
6401ab59:	push   esi
6401ab5a:	lea    ebx,[eax*4+0x6402e4a0]
6401ab61:	call   0x6401aa9d
6401ab66:	and    eax,0x1f
6401ab69:	pop    ecx
6401ab6a:	shl    eax,0x6
6401ab6d:	add    eax,DWORD PTR [ebx]
6401ab6f:	pop    ecx
6401ab70:	jmp    0x6401ab74
6401ab72:	mov    eax,edi
6401ab74:	mov    al,BYTE PTR [eax+0x24]
6401ab77:	and    al,0x7f
6401ab79:	cmp    al,0x1
6401ab7b:	jne    0x6401abd9
6401ab7d:	dec    DWORD PTR [esi+0x4]
6401ab80:	mov    ebx,DWORD PTR [ebp+0x8]
6401ab83:	js     0x6401ab93
6401ab85:	mov    eax,DWORD PTR [esi]
6401ab87:	mov    BYTE PTR [eax],bl
6401ab89:	mov    ecx,DWORD PTR [esi]
6401ab8b:	movzx  eax,BYTE PTR [ecx]
6401ab8e:	inc    ecx
6401ab8f:	mov    DWORD PTR [esi],ecx
6401ab91:	jmp    0x6401ab9f
6401ab93:	movsx  eax,bl
6401ab96:	push   esi
6401ab97:	push   eax
6401ab98:	call   0x64014d35
6401ab9d:	pop    ecx
6401ab9e:	pop    ecx
6401ab9f:	cmp    eax,0xffffffff
6401aba2:	jne    0x6401abad
6401aba4:	or     ax,0xffff
6401aba8:	jmp    0x6401ac99
6401abad:	dec    DWORD PTR [esi+0x4]
6401abb0:	js     0x6401abc0
6401abb2:	mov    eax,DWORD PTR [esi]
6401abb4:	mov    BYTE PTR [eax],bh
6401abb6:	mov    ecx,DWORD PTR [esi]
6401abb8:	movzx  eax,BYTE PTR [ecx]
6401abbb:	inc    ecx
6401abbc:	mov    DWORD PTR [esi],ecx
6401abbe:	jmp    0x6401abcc
6401abc0:	movsx  eax,bh
6401abc3:	push   esi
6401abc4:	push   eax
6401abc5:	call   0x64014d35
6401abca:	pop    ecx
6401abcb:	pop    ecx
6401abcc:	cmp    eax,0xffffffff
6401abcf:	je     0x6401aba4
6401abd1:	mov    ax,bx
6401abd4:	jmp    0x6401ac99
6401abd9:	push   esi
6401abda:	call   0x6401aa9d
6401abdf:	cmp    eax,0xffffffff
6401abe2:	pop    ecx
6401abe3:	je     0x6401ac13
6401abe5:	push   esi
6401abe6:	call   0x6401aa9d
6401abeb:	cmp    eax,0xfffffffe
6401abee:	pop    ecx
6401abef:	je     0x6401ac13
6401abf1:	push   esi
6401abf2:	call   0x6401aa9d
6401abf7:	sar    eax,0x5
6401abfa:	push   esi
6401abfb:	lea    ebx,[eax*4+0x6402e4a0]
6401ac02:	call   0x6401aa9d
6401ac07:	and    eax,0x1f
6401ac0a:	pop    ecx
6401ac0b:	shl    eax,0x6
6401ac0e:	add    eax,DWORD PTR [ebx]
6401ac10:	pop    ecx
6401ac11:	jmp    0x6401ac15
6401ac13:	mov    eax,edi
6401ac15:	test   BYTE PTR [eax+0x4],0x80
6401ac19:	je     0x6401ac79
6401ac1b:	push   DWORD PTR [ebp+0x8]
6401ac1e:	lea    eax,[ebp-0xc]
6401ac21:	push   0x5
6401ac23:	push   eax
6401ac24:	lea    eax,[ebp-0x10]
6401ac27:	push   eax
6401ac28:	call   0x6401bc11
6401ac2d:	add    esp,0x10
6401ac30:	test   eax,eax
6401ac32:	jne    0x6401aba4
6401ac38:	xor    ebx,ebx
6401ac3a:	cmp    DWORD PTR [ebp-0x10],ebx
6401ac3d:	jle    0x6401ac73
6401ac3f:	dec    DWORD PTR [esi+0x4]
6401ac42:	js     0x6401ac56
6401ac44:	mov    eax,DWORD PTR [esi]
6401ac46:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
6401ac4a:	mov    BYTE PTR [eax],cl
6401ac4c:	mov    ecx,DWORD PTR [esi]
6401ac4e:	movzx  eax,BYTE PTR [ecx]
6401ac51:	inc    ecx
6401ac52:	mov    DWORD PTR [esi],ecx
6401ac54:	jmp    0x6401ac64
6401ac56:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
6401ac5b:	push   esi
6401ac5c:	push   eax
6401ac5d:	call   0x64014d35
6401ac62:	pop    ecx
6401ac63:	pop    ecx
6401ac64:	cmp    eax,0xffffffff
6401ac67:	je     0x6401aba4
6401ac6d:	inc    ebx
6401ac6e:	cmp    ebx,DWORD PTR [ebp-0x10]
6401ac71:	jl     0x6401ac3f
6401ac73:	mov    ax,WORD PTR [ebp+0x8]
6401ac77:	jmp    0x6401ac99
6401ac79:	add    DWORD PTR [esi+0x4],0xfffffffe
6401ac7d:	js     0x6401ac8c
6401ac7f:	mov    ecx,DWORD PTR [esi]
6401ac81:	mov    eax,DWORD PTR [ebp+0x8]
6401ac84:	mov    WORD PTR [ecx],ax
6401ac87:	add    DWORD PTR [esi],0x2
6401ac8a:	jmp    0x6401ac99
6401ac8c:	movzx  eax,WORD PTR [ebp+0x8]
6401ac90:	push   esi
6401ac91:	push   eax
6401ac92:	call   0x6401c31a
6401ac97:	pop    ecx
6401ac98:	pop    ecx
6401ac99:	mov    ecx,DWORD PTR [ebp-0x4]
6401ac9c:	pop    edi
6401ac9d:	pop    esi
6401ac9e:	xor    ecx,ebp
6401aca0:	pop    ebx
6401aca1:	call   0x64010c1e
6401aca6:	leave  
6401aca7:	ret    
6401aca8:	mov    eax,ds:0x64029038
6401acad:	or     eax,0x1
6401acb0:	xor    ecx,ecx
6401acb2:	cmp    DWORD PTR ds:0x6402aef8,eax
6401acb8:	sete   cl
6401acbb:	mov    eax,ecx
6401acbd:	ret    
6401acbe:	push   ebp
6401acbf:	mov    ebp,esp
6401acc1:	sub    esp,0x10
6401acc4:	push   ebx
6401acc5:	push   esi
6401acc6:	mov    esi,DWORD PTR [ebp+0xc]
6401acc9:	xor    ebx,ebx
6401accb:	cmp    esi,ebx
6401accd:	je     0x6401ace2
6401accf:	cmp    DWORD PTR [ebp+0x10],ebx
6401acd2:	je     0x6401ace2
6401acd4:	cmp    BYTE PTR [esi],bl
6401acd6:	jne    0x6401ace8
6401acd8:	mov    eax,DWORD PTR [ebp+0x8]
6401acdb:	cmp    eax,ebx
6401acdd:	je     0x6401ace2
6401acdf:	mov    WORD PTR [eax],bx
6401ace2:	xor    eax,eax
6401ace4:	pop    esi
6401ace5:	pop    ebx
6401ace6:	leave  
6401ace7:	ret    
6401ace8:	push   DWORD PTR [ebp+0x14]
6401aceb:	lea    ecx,[ebp-0x10]
6401acee:	call   0x64010dc1
6401acf3:	mov    eax,DWORD PTR [ebp-0x10]
6401acf6:	cmp    DWORD PTR [eax+0x14],ebx
6401acf9:	jne    0x6401ad1a
6401acfb:	mov    eax,DWORD PTR [ebp+0x8]
6401acfe:	cmp    eax,ebx
6401ad00:	je     0x6401ad09
6401ad02:	movzx  cx,BYTE PTR [esi]
6401ad06:	mov    WORD PTR [eax],cx
6401ad09:	cmp    BYTE PTR [ebp-0x4],bl
6401ad0c:	je     0x6401ad15
6401ad0e:	mov    eax,DWORD PTR [ebp-0x8]
6401ad11:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ad15:	xor    eax,eax
6401ad17:	inc    eax
6401ad18:	jmp    0x6401ace4
6401ad1a:	lea    eax,[ebp-0x10]
6401ad1d:	push   eax
6401ad1e:	movzx  eax,BYTE PTR [esi]
6401ad21:	push   eax
6401ad22:	call   0x64018085
6401ad27:	test   eax,eax
6401ad29:	pop    ecx
6401ad2a:	pop    ecx
6401ad2b:	je     0x6401adaa
6401ad2d:	mov    eax,DWORD PTR [ebp-0x10]
6401ad30:	mov    ecx,DWORD PTR [eax+0xac]
6401ad36:	cmp    ecx,0x1
6401ad39:	jle    0x6401ad60
6401ad3b:	cmp    DWORD PTR [ebp+0x10],ecx
6401ad3e:	jl     0x6401ad60
6401ad40:	xor    edx,edx
6401ad42:	cmp    DWORD PTR [ebp+0x8],ebx
6401ad45:	setne  dl
6401ad48:	push   edx
6401ad49:	push   DWORD PTR [ebp+0x8]
6401ad4c:	push   ecx
6401ad4d:	push   esi
6401ad4e:	push   0x9
6401ad50:	push   DWORD PTR [eax+0x4]
6401ad53:	call   DWORD PTR ds:0x6402203c
6401ad59:	test   eax,eax
6401ad5b:	mov    eax,DWORD PTR [ebp-0x10]
6401ad5e:	jne    0x6401ad70
6401ad60:	mov    ecx,DWORD PTR [ebp+0x10]
6401ad63:	cmp    ecx,DWORD PTR [eax+0xac]
6401ad69:	jb     0x6401ad8b
6401ad6b:	cmp    BYTE PTR [esi+0x1],bl
6401ad6e:	je     0x6401ad8b
6401ad70:	cmp    BYTE PTR [ebp-0x4],bl
6401ad73:	mov    eax,DWORD PTR [eax+0xac]
6401ad79:	je     0x6401ace4
6401ad7f:	mov    ecx,DWORD PTR [ebp-0x8]
6401ad82:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ad86:	jmp    0x6401ace4
6401ad8b:	call   0x640129f0
6401ad90:	mov    DWORD PTR [eax],0x2a
6401ad96:	cmp    BYTE PTR [ebp-0x4],bl
6401ad99:	je     0x6401ada2
6401ad9b:	mov    eax,DWORD PTR [ebp-0x8]
6401ad9e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ada2:	or     eax,0xffffffff
6401ada5:	jmp    0x6401ace4
6401adaa:	xor    eax,eax
6401adac:	cmp    DWORD PTR [ebp+0x8],ebx
6401adaf:	setne  al
6401adb2:	push   eax
6401adb3:	push   DWORD PTR [ebp+0x8]
6401adb6:	mov    eax,DWORD PTR [ebp-0x10]
6401adb9:	push   0x1
6401adbb:	push   esi
6401adbc:	push   0x9
6401adbe:	push   DWORD PTR [eax+0x4]
6401adc1:	call   DWORD PTR ds:0x6402203c
6401adc7:	test   eax,eax
6401adc9:	jne    0x6401ad09
6401adcf:	jmp    0x6401ad8b
6401add1:	push   0x0
6401add3:	push   DWORD PTR [esp+0x10]
6401add7:	push   DWORD PTR [esp+0x10]
6401addb:	push   DWORD PTR [esp+0x10]
6401addf:	call   0x6401acbe
6401ade4:	add    esp,0x10
6401ade7:	ret    
6401ade8:	push   ebp
6401ade9:	lea    ebp,[esp-0x1f8]
6401adf0:	sub    esp,0x278
6401adf6:	mov    eax,ds:0x64029038
6401adfb:	xor    eax,ebp
6401adfd:	mov    DWORD PTR [ebp+0x1f4],eax
6401ae03:	mov    eax,DWORD PTR [ebp+0x200]
6401ae09:	push   ebx
6401ae0a:	mov    ebx,DWORD PTR [ebp+0x204]
6401ae10:	push   esi
6401ae11:	xor    esi,esi
6401ae13:	push   edi
6401ae14:	mov    edi,DWORD PTR [ebp+0x20c]
6401ae1a:	push   DWORD PTR [ebp+0x208]
6401ae20:	lea    ecx,[ebp-0x5c]
6401ae23:	mov    DWORD PTR [ebp-0x30],eax
6401ae26:	mov    DWORD PTR [ebp-0x2c],edi
6401ae29:	mov    DWORD PTR [ebp-0x64],esi
6401ae2c:	mov    DWORD PTR [ebp-0x18],esi
6401ae2f:	mov    DWORD PTR [ebp-0x40],esi
6401ae32:	mov    DWORD PTR [ebp-0x20],esi
6401ae35:	mov    DWORD PTR [ebp-0x3c],esi
6401ae38:	mov    DWORD PTR [ebp-0x68],esi
6401ae3b:	mov    DWORD PTR [ebp-0x44],esi
6401ae3e:	call   0x64010dc1
6401ae43:	cmp    DWORD PTR [ebp-0x30],esi
6401ae46:	jne    0x6401ae75
6401ae48:	call   0x640129f0
6401ae4d:	push   esi
6401ae4e:	push   esi
6401ae4f:	push   esi
6401ae50:	push   esi
6401ae51:	mov    DWORD PTR [eax],0x16
6401ae57:	push   esi
6401ae58:	call   0x64010756
6401ae5d:	add    esp,0x14
6401ae60:	cmp    BYTE PTR [ebp-0x50],0x0
6401ae64:	je     0x6401ae6d
6401ae66:	mov    eax,DWORD PTR [ebp-0x54]
6401ae69:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ae6d:	or     eax,0xffffffff
6401ae70:	jmp    0x6401b75f
6401ae75:	mov    eax,DWORD PTR [ebp-0x30]
6401ae78:	test   BYTE PTR [eax+0xc],0x40
6401ae7c:	jne    0x6401af26
6401ae82:	push   eax
6401ae83:	call   0x6401aa9d
6401ae88:	cmp    eax,0xffffffff
6401ae8b:	pop    ecx
6401ae8c:	je     0x6401aec4
6401ae8e:	push   DWORD PTR [ebp-0x30]
6401ae91:	call   0x6401aa9d
6401ae96:	cmp    eax,0xfffffffe
6401ae99:	pop    ecx
6401ae9a:	je     0x6401aec4
6401ae9c:	push   DWORD PTR [ebp-0x30]
6401ae9f:	call   0x6401aa9d
6401aea4:	push   DWORD PTR [ebp-0x30]
6401aea7:	sar    eax,0x5
6401aeaa:	lea    esi,[eax*4+0x6402e4a0]
6401aeb1:	call   0x6401aa9d
6401aeb6:	and    eax,0x1f
6401aeb9:	shl    eax,0x6
6401aebc:	add    eax,DWORD PTR [esi]
6401aebe:	pop    ecx
6401aebf:	pop    ecx
6401aec0:	xor    esi,esi
6401aec2:	jmp    0x6401aec9
6401aec4:	mov    eax,0x64029810
6401aec9:	test   BYTE PTR [eax+0x24],0x7f
6401aecd:	jne    0x6401ae48
6401aed3:	push   DWORD PTR [ebp-0x30]
6401aed6:	call   0x6401aa9d
6401aedb:	cmp    eax,0xffffffff
6401aede:	pop    ecx
6401aedf:	je     0x6401af17
6401aee1:	push   DWORD PTR [ebp-0x30]
6401aee4:	call   0x6401aa9d
6401aee9:	cmp    eax,0xfffffffe
6401aeec:	pop    ecx
6401aeed:	je     0x6401af17
6401aeef:	push   DWORD PTR [ebp-0x30]
6401aef2:	call   0x6401aa9d
6401aef7:	push   DWORD PTR [ebp-0x30]
6401aefa:	sar    eax,0x5
6401aefd:	lea    esi,[eax*4+0x6402e4a0]
6401af04:	call   0x6401aa9d
6401af09:	and    eax,0x1f
6401af0c:	shl    eax,0x6
6401af0f:	add    eax,DWORD PTR [esi]
6401af11:	pop    ecx
6401af12:	pop    ecx
6401af13:	xor    esi,esi
6401af15:	jmp    0x6401af1c
6401af17:	mov    eax,0x64029810
6401af1c:	test   BYTE PTR [eax+0x24],0x80
6401af20:	jne    0x6401ae48
6401af26:	cmp    ebx,esi
6401af28:	je     0x6401ae48
6401af2e:	mov    dl,BYTE PTR [ebx]
6401af30:	test   dl,dl
6401af32:	mov    DWORD PTR [ebp-0x34],esi
6401af35:	mov    DWORD PTR [ebp-0x28],esi
6401af38:	mov    DWORD PTR [ebp-0x48],esi
6401af3b:	mov    DWORD PTR [ebp-0x60],esi
6401af3e:	mov    BYTE PTR [ebp-0x19],dl
6401af41:	je     0x6401b74f
6401af47:	inc    ebx
6401af48:	xor    eax,eax
6401af4a:	cmp    DWORD PTR [ebp-0x34],eax
6401af4d:	mov    DWORD PTR [ebp-0x4c],ebx
6401af50:	jl     0x6401b73e
6401af56:	mov    cl,dl
6401af58:	sub    cl,0x20
6401af5b:	cmp    cl,0x58
6401af5e:	ja     0x6401af6d
6401af60:	movsx  eax,dl
6401af63:	movzx  eax,BYTE PTR [eax+0x64024368]
6401af6a:	and    eax,0xf
6401af6d:	mov    ecx,DWORD PTR [ebp-0x48]
6401af70:	imul   eax,eax,0x9
6401af73:	movzx  eax,BYTE PTR [eax+ecx*1+0x64024388]
6401af7b:	push   0x8
6401af7d:	shr    eax,0x4
6401af80:	pop    esi
6401af81:	cmp    eax,esi
6401af83:	mov    DWORD PTR [ebp-0x48],eax
6401af86:	je     0x6401b727
6401af8c:	push   0x7
6401af8e:	pop    ecx
6401af8f:	cmp    eax,ecx
6401af91:	ja     0x6401b711
6401af97:	jmp    DWORD PTR [eax*4+0x6401b778]
6401af9e:	xor    eax,eax
6401afa0:	or     DWORD PTR [ebp-0x20],0xffffffff
6401afa4:	mov    DWORD PTR [ebp-0x74],eax
6401afa7:	mov    DWORD PTR [ebp-0x68],eax
6401afaa:	mov    DWORD PTR [ebp-0x40],eax
6401afad:	mov    DWORD PTR [ebp-0x3c],eax
6401afb0:	mov    DWORD PTR [ebp-0x18],eax
6401afb3:	mov    DWORD PTR [ebp-0x44],eax
6401afb6:	jmp    0x6401b711
6401afbb:	movsx  eax,dl
6401afbe:	sub    eax,0x20
6401afc1:	je     0x6401afff
6401afc3:	sub    eax,0x3
6401afc6:	je     0x6401aff3
6401afc8:	sub    eax,esi
6401afca:	je     0x6401afea
6401afcc:	dec    eax
6401afcd:	dec    eax
6401afce:	je     0x6401afe1
6401afd0:	sub    eax,0x3
6401afd3:	jne    0x6401b711
6401afd9:	or     DWORD PTR [ebp-0x18],esi
6401afdc:	jmp    0x6401b711
6401afe1:	or     DWORD PTR [ebp-0x18],0x4
6401afe5:	jmp    0x6401b711
6401afea:	or     DWORD PTR [ebp-0x18],0x1
6401afee:	jmp    0x6401b711
6401aff3:	or     DWORD PTR [ebp-0x18],0x80
6401affa:	jmp    0x6401b711
6401afff:	or     DWORD PTR [ebp-0x18],0x2
6401b003:	jmp    0x6401b711
6401b008:	cmp    dl,0x2a
6401b00b:	jne    0x6401b02d
6401b00d:	add    edi,0x4
6401b010:	mov    DWORD PTR [ebp-0x2c],edi
6401b013:	mov    edi,DWORD PTR [edi-0x4]
6401b016:	test   edi,edi
6401b018:	mov    DWORD PTR [ebp-0x40],edi
6401b01b:	jge    0x6401b711
6401b021:	or     DWORD PTR [ebp-0x18],0x4
6401b025:	neg    DWORD PTR [ebp-0x40]
6401b028:	jmp    0x6401b711
6401b02d:	mov    eax,DWORD PTR [ebp-0x40]
6401b030:	imul   eax,eax,0xa
6401b033:	movsx  ecx,dl
6401b036:	lea    eax,[eax+ecx*1-0x30]
6401b03a:	mov    DWORD PTR [ebp-0x40],eax
6401b03d:	jmp    0x6401b711
6401b042:	and    DWORD PTR [ebp-0x20],0x0
6401b046:	jmp    0x6401b711
6401b04b:	cmp    dl,0x2a
6401b04e:	jne    0x6401b06d
6401b050:	add    edi,0x4
6401b053:	mov    DWORD PTR [ebp-0x2c],edi
6401b056:	mov    edi,DWORD PTR [edi-0x4]
6401b059:	test   edi,edi
6401b05b:	mov    DWORD PTR [ebp-0x20],edi
6401b05e:	jge    0x6401b711
6401b064:	or     DWORD PTR [ebp-0x20],0xffffffff
6401b068:	jmp    0x6401b711
6401b06d:	mov    eax,DWORD PTR [ebp-0x20]
6401b070:	imul   eax,eax,0xa
6401b073:	movsx  ecx,dl
6401b076:	lea    eax,[eax+ecx*1-0x30]
6401b07a:	mov    DWORD PTR [ebp-0x20],eax
6401b07d:	jmp    0x6401b711
6401b082:	cmp    dl,0x49
6401b085:	je     0x6401b0cd
6401b087:	cmp    dl,0x68
6401b08a:	je     0x6401b0c4
6401b08c:	cmp    dl,0x6c
6401b08f:	je     0x6401b0a6
6401b091:	cmp    dl,0x77
6401b094:	jne    0x6401b711
6401b09a:	or     DWORD PTR [ebp-0x18],0x800
6401b0a1:	jmp    0x6401b711
6401b0a6:	cmp    BYTE PTR [ebx],0x6c
6401b0a9:	jne    0x6401b0bb
6401b0ab:	inc    ebx
6401b0ac:	or     DWORD PTR [ebp-0x18],0x1000
6401b0b3:	mov    DWORD PTR [ebp-0x4c],ebx
6401b0b6:	jmp    0x6401b711
6401b0bb:	or     DWORD PTR [ebp-0x18],0x10
6401b0bf:	jmp    0x6401b711
6401b0c4:	or     DWORD PTR [ebp-0x18],0x20
6401b0c8:	jmp    0x6401b711
6401b0cd:	mov    al,BYTE PTR [ebx]
6401b0cf:	cmp    al,0x36
6401b0d1:	jne    0x6401b0ea
6401b0d3:	cmp    BYTE PTR [ebx+0x1],0x34
6401b0d7:	jne    0x6401b0ea
6401b0d9:	inc    ebx
6401b0da:	inc    ebx
6401b0db:	or     DWORD PTR [ebp-0x18],0x8000
6401b0e2:	mov    DWORD PTR [ebp-0x4c],ebx
6401b0e5:	jmp    0x6401b711
6401b0ea:	cmp    al,0x33
6401b0ec:	jne    0x6401b105
6401b0ee:	cmp    BYTE PTR [ebx+0x1],0x32
6401b0f2:	jne    0x6401b105
6401b0f4:	inc    ebx
6401b0f5:	inc    ebx
6401b0f6:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401b0fd:	mov    DWORD PTR [ebp-0x4c],ebx
6401b100:	jmp    0x6401b711
6401b105:	cmp    al,0x64
6401b107:	je     0x6401b711
6401b10d:	cmp    al,0x69
6401b10f:	je     0x6401b711
6401b115:	cmp    al,0x6f
6401b117:	je     0x6401b711
6401b11d:	cmp    al,0x75
6401b11f:	je     0x6401b711
6401b125:	cmp    al,0x78
6401b127:	je     0x6401b711
6401b12d:	cmp    al,0x58
6401b12f:	je     0x6401b711
6401b135:	and    DWORD PTR [ebp-0x48],0x0
6401b139:	and    DWORD PTR [ebp-0x44],0x0
6401b13d:	lea    eax,[ebp-0x5c]
6401b140:	push   eax
6401b141:	movzx  eax,dl
6401b144:	push   eax
6401b145:	call   0x64018085
6401b14a:	pop    ecx
6401b14b:	test   eax,eax
6401b14d:	mov    al,BYTE PTR [ebp-0x19]
6401b150:	pop    ecx
6401b151:	je     0x6401b16c
6401b153:	mov    ecx,DWORD PTR [ebp-0x30]
6401b156:	lea    esi,[ebp-0x34]
6401b159:	call   0x64017065
6401b15e:	mov    al,BYTE PTR [ebx]
6401b160:	inc    ebx
6401b161:	test   al,al
6401b163:	mov    DWORD PTR [ebp-0x4c],ebx
6401b166:	je     0x6401b727
6401b16c:	mov    ecx,DWORD PTR [ebp-0x30]
6401b16f:	lea    esi,[ebp-0x34]
6401b172:	call   0x64017065
6401b177:	jmp    0x6401b711
6401b17c:	movsx  eax,dl
6401b17f:	cmp    eax,0x64
6401b182:	jg     0x6401b2fc
6401b188:	je     0x6401b377
6401b18e:	cmp    eax,0x53
6401b191:	jg     0x6401b243
6401b197:	je     0x6401b1f4
6401b199:	sub    eax,0x41
6401b19c:	je     0x6401b1ae
6401b19e:	dec    eax
6401b19f:	dec    eax
6401b1a0:	je     0x6401b1e3
6401b1a2:	dec    eax
6401b1a3:	dec    eax
6401b1a4:	je     0x6401b1ae
6401b1a6:	dec    eax
6401b1a7:	dec    eax
6401b1a8:	jne    0x6401b5f9
6401b1ae:	add    dl,0x20
6401b1b1:	mov    DWORD PTR [ebp-0x74],0x1
6401b1b8:	mov    BYTE PTR [ebp-0x19],dl
6401b1bb:	or     DWORD PTR [ebp-0x18],0x40
6401b1bf:	cmp    DWORD PTR [ebp-0x20],0x0
6401b1c3:	lea    ebx,[ebp-0x14]
6401b1c6:	mov    eax,0x200
6401b1cb:	mov    DWORD PTR [ebp-0x24],ebx
6401b1ce:	mov    DWORD PTR [ebp-0x6c],eax
6401b1d1:	jge    0x6401b39b
6401b1d7:	mov    DWORD PTR [ebp-0x20],0x6
6401b1de:	jmp    0x6401b3ea
6401b1e3:	test   WORD PTR [ebp-0x18],0x830
6401b1e9:	jne    0x6401b260
6401b1eb:	or     DWORD PTR [ebp-0x18],0x800
6401b1f2:	jmp    0x6401b260
6401b1f4:	test   WORD PTR [ebp-0x18],0x830
6401b1fa:	jne    0x6401b203
6401b1fc:	or     DWORD PTR [ebp-0x18],0x800
6401b203:	mov    ecx,DWORD PTR [ebp-0x20]
6401b206:	cmp    ecx,0xffffffff
6401b209:	jne    0x6401b210
6401b20b:	mov    ecx,0x7fffffff
6401b210:	add    edi,0x4
6401b213:	test   WORD PTR [ebp-0x18],0x810
6401b219:	mov    DWORD PTR [ebp-0x2c],edi
6401b21c:	mov    edi,DWORD PTR [edi-0x4]
6401b21f:	mov    DWORD PTR [ebp-0x24],edi
6401b222:	je     0x6401b5d7
6401b228:	test   edi,edi
6401b22a:	jne    0x6401b234
6401b22c:	mov    eax,ds:0x640298e4
6401b231:	mov    DWORD PTR [ebp-0x24],eax
6401b234:	mov    eax,DWORD PTR [ebp-0x24]
6401b237:	mov    DWORD PTR [ebp-0x44],0x1
6401b23e:	jmp    0x6401b5cc
6401b243:	sub    eax,0x58
6401b246:	je     0x6401b480
6401b24c:	dec    eax
6401b24d:	dec    eax
6401b24e:	je     0x6401b2ad
6401b250:	sub    eax,ecx
6401b252:	je     0x6401b1bb
6401b258:	dec    eax
6401b259:	dec    eax
6401b25a:	jne    0x6401b5f9
6401b260:	add    edi,0x4
6401b263:	test   WORD PTR [ebp-0x18],0x810
6401b269:	mov    DWORD PTR [ebp-0x2c],edi
6401b26c:	je     0x6401b295
6401b26e:	movzx  eax,WORD PTR [edi-0x4]
6401b272:	push   eax
6401b273:	push   0x200
6401b278:	lea    eax,[ebp-0x14]
6401b27b:	push   eax
6401b27c:	lea    eax,[ebp-0x28]
6401b27f:	push   eax
6401b280:	call   0x6401bc11
6401b285:	add    esp,0x10
6401b288:	test   eax,eax
6401b28a:	je     0x6401b2a2
6401b28c:	mov    DWORD PTR [ebp-0x68],0x1
6401b293:	jmp    0x6401b2a2
6401b295:	mov    al,BYTE PTR [edi-0x4]
6401b298:	mov    BYTE PTR [ebp-0x14],al
6401b29b:	mov    DWORD PTR [ebp-0x28],0x1
6401b2a2:	lea    eax,[ebp-0x14]
6401b2a5:	mov    DWORD PTR [ebp-0x24],eax
6401b2a8:	jmp    0x6401b5f9
6401b2ad:	mov    eax,DWORD PTR [edi]
6401b2af:	add    edi,0x4
6401b2b2:	test   eax,eax
6401b2b4:	mov    DWORD PTR [ebp-0x2c],edi
6401b2b7:	je     0x6401b2e8
6401b2b9:	mov    ecx,DWORD PTR [eax+0x4]
6401b2bc:	test   ecx,ecx
6401b2be:	je     0x6401b2e8
6401b2c0:	test   WORD PTR [ebp-0x18],0x800
6401b2c6:	movsx  eax,WORD PTR [eax]
6401b2c9:	mov    DWORD PTR [ebp-0x24],ecx
6401b2cc:	je     0x6401b2df
6401b2ce:	cdq    
6401b2cf:	sub    eax,edx
6401b2d1:	sar    eax,1
6401b2d3:	mov    DWORD PTR [ebp-0x44],0x1
6401b2da:	jmp    0x6401b5f6
6401b2df:	and    DWORD PTR [ebp-0x44],0x0
6401b2e3:	jmp    0x6401b5f6
6401b2e8:	mov    eax,ds:0x640298e0
6401b2ed:	mov    DWORD PTR [ebp-0x24],eax
6401b2f0:	push   eax
6401b2f1:	call   0x640123f0
6401b2f6:	pop    ecx
6401b2f7:	jmp    0x6401b5f6
6401b2fc:	cmp    eax,0x70
6401b2ff:	jg     0x6401b485
6401b305:	je     0x6401b47d
6401b30b:	cmp    eax,0x65
6401b30e:	jl     0x6401b5f9
6401b314:	cmp    eax,0x67
6401b317:	jle    0x6401b1bb
6401b31d:	cmp    eax,0x69
6401b320:	je     0x6401b377
6401b322:	cmp    eax,0x6e
6401b325:	je     0x6401b342
6401b327:	cmp    eax,0x6f
6401b32a:	jne    0x6401b5f9
6401b330:	test   BYTE PTR [ebp-0x18],0x80
6401b334:	mov    DWORD PTR [ebp-0x28],esi
6401b337:	je     0x6401b382
6401b339:	or     DWORD PTR [ebp-0x18],0x200
6401b340:	jmp    0x6401b382
6401b342:	mov    esi,DWORD PTR [edi]
6401b344:	add    edi,0x4
6401b347:	mov    DWORD PTR [ebp-0x2c],edi
6401b34a:	call   0x6401aca8
6401b34f:	test   eax,eax
6401b351:	je     0x6401b727
6401b357:	test   BYTE PTR [ebp-0x18],0x20
6401b35b:	je     0x6401b366
6401b35d:	mov    ax,WORD PTR [ebp-0x34]
6401b361:	mov    WORD PTR [esi],ax
6401b364:	jmp    0x6401b36b
6401b366:	mov    eax,DWORD PTR [ebp-0x34]
6401b369:	mov    DWORD PTR [esi],eax
6401b36b:	mov    DWORD PTR [ebp-0x68],0x1
6401b372:	jmp    0x6401b6fe
6401b377:	or     DWORD PTR [ebp-0x18],0x40
6401b37b:	mov    DWORD PTR [ebp-0x28],0xa
6401b382:	mov    ecx,DWORD PTR [ebp-0x18]
6401b385:	test   cx,cx
6401b388:	jns    0x6401b4cf
6401b38e:	add    edi,esi
6401b390:	mov    eax,DWORD PTR [edi-0x8]
6401b393:	mov    edx,DWORD PTR [edi-0x4]
6401b396:	jmp    0x6401b504
6401b39b:	jne    0x6401b3ab
6401b39d:	cmp    dl,0x67
6401b3a0:	jne    0x6401b3ea
6401b3a2:	mov    DWORD PTR [ebp-0x20],0x1
6401b3a9:	jmp    0x6401b3ea
6401b3ab:	cmp    DWORD PTR [ebp-0x20],eax
6401b3ae:	jle    0x6401b3b3
6401b3b0:	mov    DWORD PTR [ebp-0x20],eax
6401b3b3:	cmp    DWORD PTR [ebp-0x20],0xa3
6401b3ba:	jle    0x6401b3ea
6401b3bc:	mov    esi,DWORD PTR [ebp-0x20]
6401b3bf:	add    esi,0x15d
6401b3c5:	push   esi
6401b3c6:	call   0x64013f00
6401b3cb:	test   eax,eax
6401b3cd:	mov    dl,BYTE PTR [ebp-0x19]
6401b3d0:	pop    ecx
6401b3d1:	mov    DWORD PTR [ebp-0x60],eax
6401b3d4:	push   0x8
6401b3d6:	je     0x6401b3e2
6401b3d8:	mov    DWORD PTR [ebp-0x24],eax
6401b3db:	mov    DWORD PTR [ebp-0x6c],esi
6401b3de:	mov    ebx,eax
6401b3e0:	jmp    0x6401b3e9
6401b3e2:	mov    DWORD PTR [ebp-0x20],0xa3
6401b3e9:	pop    esi
6401b3ea:	add    edi,esi
6401b3ec:	mov    eax,DWORD PTR [edi-0x8]
6401b3ef:	mov    DWORD PTR [ebp-0x80],eax
6401b3f2:	mov    eax,DWORD PTR [edi-0x4]
6401b3f5:	mov    DWORD PTR [ebp-0x7c],eax
6401b3f8:	lea    eax,[ebp-0x5c]
6401b3fb:	push   eax
6401b3fc:	push   DWORD PTR [ebp-0x74]
6401b3ff:	movsx  eax,dl
6401b402:	push   DWORD PTR [ebp-0x20]
6401b405:	mov    DWORD PTR [ebp-0x2c],edi
6401b408:	push   eax
6401b409:	push   DWORD PTR [ebp-0x6c]
6401b40c:	lea    eax,[ebp-0x80]
6401b40f:	push   ebx
6401b410:	push   eax
6401b411:	push   DWORD PTR ds:0x64029aec
6401b417:	call   0x64012b1f
6401b41c:	pop    ecx
6401b41d:	call   eax
6401b41f:	mov    edi,DWORD PTR [ebp-0x18]
6401b422:	add    esp,0x1c
6401b425:	and    edi,0x80
6401b42b:	je     0x6401b448
6401b42d:	cmp    DWORD PTR [ebp-0x20],0x0
6401b431:	jne    0x6401b448
6401b433:	lea    eax,[ebp-0x5c]
6401b436:	push   eax
6401b437:	push   ebx
6401b438:	push   DWORD PTR ds:0x64029af8
6401b43e:	call   0x64012b1f
6401b443:	pop    ecx
6401b444:	call   eax
6401b446:	pop    ecx
6401b447:	pop    ecx
6401b448:	cmp    BYTE PTR [ebp-0x19],0x67
6401b44c:	jne    0x6401b467
6401b44e:	test   edi,edi
6401b450:	jne    0x6401b467
6401b452:	lea    eax,[ebp-0x5c]
6401b455:	push   eax
6401b456:	push   ebx
6401b457:	push   DWORD PTR ds:0x64029af4
6401b45d:	call   0x64012b1f
6401b462:	pop    ecx
6401b463:	call   eax
6401b465:	pop    ecx
6401b466:	pop    ecx
6401b467:	cmp    BYTE PTR [ebx],0x2d
6401b46a:	jne    0x6401b477
6401b46c:	or     DWORD PTR [ebp-0x18],0x100
6401b473:	inc    ebx
6401b474:	mov    DWORD PTR [ebp-0x24],ebx
6401b477:	push   ebx
6401b478:	jmp    0x6401b2f1
6401b47d:	mov    DWORD PTR [ebp-0x20],esi
6401b480:	mov    DWORD PTR [ebp-0x64],ecx
6401b483:	jmp    0x6401b4a6
6401b485:	sub    eax,0x73
6401b488:	je     0x6401b203
6401b48e:	dec    eax
6401b48f:	dec    eax
6401b490:	je     0x6401b37b
6401b496:	sub    eax,0x3
6401b499:	jne    0x6401b5f9
6401b49f:	mov    DWORD PTR [ebp-0x64],0x27
6401b4a6:	test   BYTE PTR [ebp-0x18],0x80
6401b4aa:	mov    DWORD PTR [ebp-0x28],0x10
6401b4b1:	je     0x6401b382
6401b4b7:	mov    al,BYTE PTR [ebp-0x64]
6401b4ba:	add    al,0x51
6401b4bc:	mov    BYTE PTR [ebp-0x38],0x30
6401b4c0:	mov    BYTE PTR [ebp-0x37],al
6401b4c3:	mov    DWORD PTR [ebp-0x3c],0x2
6401b4ca:	jmp    0x6401b382
6401b4cf:	test   cx,0x1000
6401b4d4:	jne    0x6401b38e
6401b4da:	add    edi,0x4
6401b4dd:	test   cl,0x20
6401b4e0:	je     0x6401b4f7
6401b4e2:	test   cl,0x40
6401b4e5:	mov    DWORD PTR [ebp-0x2c],edi
6401b4e8:	je     0x6401b4f0
6401b4ea:	movsx  eax,WORD PTR [edi-0x4]
6401b4ee:	jmp    0x6401b4f4
6401b4f0:	movzx  eax,WORD PTR [edi-0x4]
6401b4f4:	cdq    
6401b4f5:	jmp    0x6401b507
6401b4f7:	test   cl,0x40
6401b4fa:	mov    eax,DWORD PTR [edi-0x4]
6401b4fd:	je     0x6401b502
6401b4ff:	cdq    
6401b500:	jmp    0x6401b504
6401b502:	xor    edx,edx
6401b504:	mov    DWORD PTR [ebp-0x2c],edi
6401b507:	test   cl,0x40
6401b50a:	je     0x6401b524
6401b50c:	test   edx,edx
6401b50e:	jg     0x6401b524
6401b510:	jl     0x6401b516
6401b512:	test   eax,eax
6401b514:	jae    0x6401b524
6401b516:	neg    eax
6401b518:	adc    edx,0x0
6401b51b:	neg    edx
6401b51d:	or     DWORD PTR [ebp-0x18],0x100
6401b524:	test   WORD PTR [ebp-0x18],0x9000
6401b52a:	mov    ebx,edx
6401b52c:	mov    edi,eax
6401b52e:	jne    0x6401b532
6401b530:	xor    ebx,ebx
6401b532:	cmp    DWORD PTR [ebp-0x20],0x0
6401b536:	jge    0x6401b541
6401b538:	mov    DWORD PTR [ebp-0x20],0x1
6401b53f:	jmp    0x6401b552
6401b541:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401b545:	mov    eax,0x200
6401b54a:	cmp    DWORD PTR [ebp-0x20],eax
6401b54d:	jle    0x6401b552
6401b54f:	mov    DWORD PTR [ebp-0x20],eax
6401b552:	mov    eax,edi
6401b554:	or     eax,ebx
6401b556:	jne    0x6401b55b
6401b558:	and    DWORD PTR [ebp-0x3c],eax
6401b55b:	lea    esi,[ebp+0x1eb]
6401b561:	mov    eax,DWORD PTR [ebp-0x20]
6401b564:	dec    DWORD PTR [ebp-0x20]
6401b567:	test   eax,eax
6401b569:	jg     0x6401b571
6401b56b:	mov    eax,edi
6401b56d:	or     eax,ebx
6401b56f:	je     0x6401b595
6401b571:	mov    eax,DWORD PTR [ebp-0x28]
6401b574:	cdq    
6401b575:	push   edx
6401b576:	push   eax
6401b577:	push   ebx
6401b578:	push   edi
6401b579:	call   0x64016fd0
6401b57e:	add    ecx,0x30
6401b581:	cmp    ecx,0x39
6401b584:	mov    DWORD PTR [ebp-0x6c],ebx
6401b587:	mov    edi,eax
6401b589:	mov    ebx,edx
6401b58b:	jle    0x6401b590
6401b58d:	add    ecx,DWORD PTR [ebp-0x64]
6401b590:	mov    BYTE PTR [esi],cl
6401b592:	dec    esi
6401b593:	jmp    0x6401b561
6401b595:	lea    eax,[ebp+0x1eb]
6401b59b:	sub    eax,esi
6401b59d:	inc    esi
6401b59e:	test   WORD PTR [ebp-0x18],0x200
6401b5a4:	mov    DWORD PTR [ebp-0x28],eax
6401b5a7:	mov    DWORD PTR [ebp-0x24],esi
6401b5aa:	je     0x6401b5f9
6401b5ac:	test   eax,eax
6401b5ae:	je     0x6401b5b7
6401b5b0:	mov    ecx,esi
6401b5b2:	cmp    BYTE PTR [ecx],0x30
6401b5b5:	je     0x6401b5f9
6401b5b7:	dec    DWORD PTR [ebp-0x24]
6401b5ba:	mov    ecx,DWORD PTR [ebp-0x24]
6401b5bd:	mov    BYTE PTR [ecx],0x30
6401b5c0:	inc    eax
6401b5c1:	jmp    0x6401b5f6
6401b5c3:	dec    ecx
6401b5c4:	cmp    WORD PTR [eax],0x0
6401b5c8:	je     0x6401b5d0
6401b5ca:	inc    eax
6401b5cb:	inc    eax
6401b5cc:	test   ecx,ecx
6401b5ce:	jne    0x6401b5c3
6401b5d0:	sub    eax,DWORD PTR [ebp-0x24]
6401b5d3:	sar    eax,1
6401b5d5:	jmp    0x6401b5f6
6401b5d7:	test   edi,edi
6401b5d9:	jne    0x6401b5e3
6401b5db:	mov    eax,ds:0x640298e0
6401b5e0:	mov    DWORD PTR [ebp-0x24],eax
6401b5e3:	mov    eax,DWORD PTR [ebp-0x24]
6401b5e6:	jmp    0x6401b5ef
6401b5e8:	dec    ecx
6401b5e9:	cmp    BYTE PTR [eax],0x0
6401b5ec:	je     0x6401b5f3
6401b5ee:	inc    eax
6401b5ef:	test   ecx,ecx
6401b5f1:	jne    0x6401b5e8
6401b5f3:	sub    eax,DWORD PTR [ebp-0x24]
6401b5f6:	mov    DWORD PTR [ebp-0x28],eax
6401b5f9:	cmp    DWORD PTR [ebp-0x68],0x0
6401b5fd:	jne    0x6401b6fe
6401b603:	mov    eax,DWORD PTR [ebp-0x18]
6401b606:	test   al,0x40
6401b608:	je     0x6401b62f
6401b60a:	test   ax,0x100
6401b60e:	je     0x6401b616
6401b610:	mov    BYTE PTR [ebp-0x38],0x2d
6401b614:	jmp    0x6401b628
6401b616:	test   al,0x1
6401b618:	je     0x6401b620
6401b61a:	mov    BYTE PTR [ebp-0x38],0x2b
6401b61e:	jmp    0x6401b628
6401b620:	test   al,0x2
6401b622:	je     0x6401b62f
6401b624:	mov    BYTE PTR [ebp-0x38],0x20
6401b628:	mov    DWORD PTR [ebp-0x3c],0x1
6401b62f:	mov    ebx,DWORD PTR [ebp-0x40]
6401b632:	sub    ebx,DWORD PTR [ebp-0x28]
6401b635:	sub    ebx,DWORD PTR [ebp-0x3c]
6401b638:	test   BYTE PTR [ebp-0x18],0xc
6401b63c:	jne    0x6401b64f
6401b63e:	push   DWORD PTR [ebp-0x30]
6401b641:	lea    eax,[ebp-0x34]
6401b644:	push   ebx
6401b645:	push   0x20
6401b647:	call   0x64017098
6401b64c:	add    esp,0xc
6401b64f:	push   DWORD PTR [ebp-0x3c]
6401b652:	mov    edi,DWORD PTR [ebp-0x30]
6401b655:	lea    eax,[ebp-0x34]
6401b658:	lea    ecx,[ebp-0x38]
6401b65b:	call   0x640170bc
6401b660:	test   BYTE PTR [ebp-0x18],0x8
6401b664:	pop    ecx
6401b665:	je     0x6401b67c
6401b667:	test   BYTE PTR [ebp-0x18],0x4
6401b66b:	jne    0x6401b67c
6401b66d:	push   edi
6401b66e:	push   ebx
6401b66f:	push   0x30
6401b671:	lea    eax,[ebp-0x34]
6401b674:	call   0x64017098
6401b679:	add    esp,0xc
6401b67c:	cmp    DWORD PTR [ebp-0x44],0x0
6401b680:	mov    eax,DWORD PTR [ebp-0x28]
6401b683:	je     0x6401b6d6
6401b685:	test   eax,eax
6401b687:	jle    0x6401b6d6
6401b689:	mov    esi,DWORD PTR [ebp-0x24]
6401b68c:	mov    DWORD PTR [ebp-0x6c],eax
6401b68f:	movzx  eax,WORD PTR [esi]
6401b692:	dec    DWORD PTR [ebp-0x6c]
6401b695:	push   eax
6401b696:	push   0x6
6401b698:	lea    eax,[ebp+0x1ec]
6401b69e:	push   eax
6401b69f:	lea    eax,[ebp-0x78]
6401b6a2:	inc    esi
6401b6a3:	push   eax
6401b6a4:	inc    esi
6401b6a5:	call   0x6401bc11
6401b6aa:	add    esp,0x10
6401b6ad:	test   eax,eax
6401b6af:	jne    0x6401b6d0
6401b6b1:	cmp    DWORD PTR [ebp-0x78],eax
6401b6b4:	je     0x6401b6d0
6401b6b6:	push   DWORD PTR [ebp-0x78]
6401b6b9:	lea    eax,[ebp-0x34]
6401b6bc:	lea    ecx,[ebp+0x1ec]
6401b6c2:	call   0x640170bc
6401b6c7:	cmp    DWORD PTR [ebp-0x6c],0x0
6401b6cb:	pop    ecx
6401b6cc:	jne    0x6401b68f
6401b6ce:	jmp    0x6401b6e3
6401b6d0:	or     DWORD PTR [ebp-0x34],0xffffffff
6401b6d4:	jmp    0x6401b6e3
6401b6d6:	mov    ecx,DWORD PTR [ebp-0x24]
6401b6d9:	push   eax
6401b6da:	lea    eax,[ebp-0x34]
6401b6dd:	call   0x640170bc
6401b6e2:	pop    ecx
6401b6e3:	cmp    DWORD PTR [ebp-0x34],0x0
6401b6e7:	jl     0x6401b6fe
6401b6e9:	test   BYTE PTR [ebp-0x18],0x4
6401b6ed:	je     0x6401b6fe
6401b6ef:	push   edi
6401b6f0:	push   ebx
6401b6f1:	push   0x20
6401b6f3:	lea    eax,[ebp-0x34]
6401b6f6:	call   0x64017098
6401b6fb:	add    esp,0xc
6401b6fe:	cmp    DWORD PTR [ebp-0x60],0x0
6401b702:	je     0x6401b711
6401b704:	push   DWORD PTR [ebp-0x60]
6401b707:	call   0x64011ab6
6401b70c:	and    DWORD PTR [ebp-0x60],0x0
6401b710:	pop    ecx
6401b711:	mov    ebx,DWORD PTR [ebp-0x4c]
6401b714:	mov    al,BYTE PTR [ebx]
6401b716:	test   al,al
6401b718:	mov    BYTE PTR [ebp-0x19],al
6401b71b:	je     0x6401b73e
6401b71d:	mov    edi,DWORD PTR [ebp-0x2c]
6401b720:	mov    dl,al
6401b722:	jmp    0x6401af47
6401b727:	call   0x640129f0
6401b72c:	mov    DWORD PTR [eax],0x16
6401b732:	xor    eax,eax
6401b734:	push   eax
6401b735:	push   eax
6401b736:	push   eax
6401b737:	push   eax
6401b738:	push   eax
6401b739:	jmp    0x6401ae58
6401b73e:	xor    esi,esi
6401b740:	cmp    DWORD PTR [ebp-0x48],esi
6401b743:	je     0x6401b74f
6401b745:	cmp    DWORD PTR [ebp-0x48],0x7
6401b749:	jne    0x6401ae48
6401b74f:	cmp    BYTE PTR [ebp-0x50],0x0
6401b753:	je     0x6401b75c
6401b755:	mov    eax,DWORD PTR [ebp-0x54]
6401b758:	and    DWORD PTR [eax+0x70],0xfffffffd
6401b75c:	mov    eax,DWORD PTR [ebp-0x34]
6401b75f:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401b765:	pop    edi
6401b766:	pop    esi
6401b767:	xor    ecx,ebp
6401b769:	pop    ebx
6401b76a:	call   0x64010c1e
6401b76f:	add    ebp,0x1f8
6401b775:	leave  
6401b776:	ret    
6401b777:	nop
6401b778:	cmp    DWORD PTR [ecx-0x50619bff],esi
6401b77e:	add    DWORD PTR [ebx+edi*4-0x51],esp
6401b782:	add    DWORD PTR [eax+ecx*1-0x50],esp
6401b786:	add    DWORD PTR [edx+eax*2-0x50],esp
6401b78a:	add    DWORD PTR [ebx+ecx*2-0x50],esp
6401b78e:	add    DWORD PTR [edx+eax*4-0x50],esp
6401b792:	add    DWORD PTR [esp+edi*2-0x4f],esp
6401b796:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401b79a:	in     al,dx
6401b79b:	sub    esp,0xc
6401b79e:	mov    eax,ds:0x64029038
6401b7a3:	xor    eax,ebp
6401b7a5:	mov    DWORD PTR [ebp-0x4],eax
6401b7a8:	push   0x6
6401b7aa:	lea    eax,[ebp-0xc]
6401b7ad:	push   eax
6401b7ae:	push   0x1004
6401b7b3:	push   DWORD PTR [ebp+0x8]
6401b7b6:	mov    BYTE PTR [ebp-0x6],0x0
6401b7ba:	call   DWORD PTR ds:0x640220ec
6401b7c0:	test   eax,eax
6401b7c2:	jne    0x6401b7c9
6401b7c4:	or     eax,0xffffffff
6401b7c7:	jmp    0x6401b7d3
6401b7c9:	lea    eax,[ebp-0xc]
6401b7cc:	push   eax
6401b7cd:	call   0x6401be64
6401b7d2:	pop    ecx
6401b7d3:	mov    ecx,DWORD PTR [ebp-0x4]
6401b7d6:	xor    ecx,ebp
6401b7d8:	call   0x64010c1e
6401b7dd:	leave  
6401b7de:	ret    
6401b7df:	push   ebp
6401b7e0:	mov    ebp,esp
6401b7e2:	sub    esp,0x34
6401b7e5:	mov    eax,ds:0x64029038
6401b7ea:	xor    eax,ebp
6401b7ec:	mov    DWORD PTR [ebp-0x4],eax
6401b7ef:	mov    eax,DWORD PTR [ebp+0x10]
6401b7f2:	mov    ecx,DWORD PTR [ebp+0x18]
6401b7f5:	mov    DWORD PTR [ebp-0x28],eax
6401b7f8:	mov    eax,DWORD PTR [ebp+0x14]
6401b7fb:	push   ebx
6401b7fc:	mov    DWORD PTR [ebp-0x30],eax
6401b7ff:	mov    eax,DWORD PTR [eax]
6401b801:	push   esi
6401b802:	mov    DWORD PTR [ebp-0x24],eax
6401b805:	mov    eax,DWORD PTR [ebp+0x8]
6401b808:	push   edi
6401b809:	xor    edi,edi
6401b80b:	cmp    eax,DWORD PTR [ebp+0xc]
6401b80e:	mov    DWORD PTR [ebp-0x34],ecx
6401b811:	mov    DWORD PTR [ebp-0x20],edi
6401b814:	mov    DWORD PTR [ebp-0x2c],edi
6401b817:	je     0x6401b97c
6401b81d:	mov    esi,DWORD PTR ds:0x64022148
6401b823:	lea    ecx,[ebp-0x18]
6401b826:	push   ecx
6401b827:	push   eax
6401b828:	call   esi
6401b82a:	test   eax,eax
6401b82c:	mov    ebx,DWORD PTR ds:0x6402203c
6401b832:	je     0x6401b892
6401b834:	cmp    DWORD PTR [ebp-0x18],0x1
6401b838:	jne    0x6401b892
6401b83a:	lea    eax,[ebp-0x18]
6401b83d:	push   eax
6401b83e:	push   DWORD PTR [ebp+0xc]
6401b841:	call   esi
6401b843:	test   eax,eax
6401b845:	je     0x6401b892
6401b847:	cmp    DWORD PTR [ebp-0x18],0x1
6401b84b:	jne    0x6401b892
6401b84d:	mov    esi,DWORD PTR [ebp-0x24]
6401b850:	cmp    esi,0xffffffff
6401b853:	mov    DWORD PTR [ebp-0x2c],0x1
6401b85a:	jne    0x6401b868
6401b85c:	push   DWORD PTR [ebp-0x28]
6401b85f:	call   0x640123f0
6401b864:	mov    esi,eax
6401b866:	pop    ecx
6401b867:	inc    esi
6401b868:	cmp    esi,edi
6401b86a:	jle    0x6401b8c7
6401b86c:	cmp    esi,0x7ffffff0
6401b872:	ja     0x6401b8c7
6401b874:	lea    eax,[esi+esi*1+0x8]
6401b878:	cmp    eax,0x400
6401b87d:	ja     0x6401b8ae
6401b87f:	call   0x640113a0
6401b884:	mov    eax,esp
6401b886:	cmp    eax,edi
6401b888:	je     0x6401b8c2
6401b88a:	mov    DWORD PTR [eax],0xcccc
6401b890:	jmp    0x6401b8bf
6401b892:	push   edi
6401b893:	push   edi
6401b894:	push   DWORD PTR [ebp-0x24]
6401b897:	push   DWORD PTR [ebp-0x28]
6401b89a:	push   0x1
6401b89c:	push   DWORD PTR [ebp+0x8]
6401b89f:	call   ebx
6401b8a1:	mov    esi,eax
6401b8a3:	cmp    esi,edi
6401b8a5:	jne    0x6401b86a
6401b8a7:	xor    eax,eax
6401b8a9:	jmp    0x6401b97f
6401b8ae:	push   eax
6401b8af:	call   0x64011b93
6401b8b4:	cmp    eax,edi
6401b8b6:	pop    ecx
6401b8b7:	je     0x6401b8c2
6401b8b9:	mov    DWORD PTR [eax],0xdddd
6401b8bf:	add    eax,0x8
6401b8c2:	mov    DWORD PTR [ebp-0x1c],eax
6401b8c5:	jmp    0x6401b8ca
6401b8c7:	mov    DWORD PTR [ebp-0x1c],edi
6401b8ca:	cmp    DWORD PTR [ebp-0x1c],edi
6401b8cd:	je     0x6401b8a7
6401b8cf:	lea    eax,[esi+esi*1]
6401b8d2:	push   eax
6401b8d3:	push   edi
6401b8d4:	push   DWORD PTR [ebp-0x1c]
6401b8d7:	call   0x64011320
6401b8dc:	add    esp,0xc
6401b8df:	push   esi
6401b8e0:	push   DWORD PTR [ebp-0x1c]
6401b8e3:	push   DWORD PTR [ebp-0x24]
6401b8e6:	push   DWORD PTR [ebp-0x28]
6401b8e9:	push   0x1
6401b8eb:	push   DWORD PTR [ebp+0x8]
6401b8ee:	call   ebx
6401b8f0:	test   eax,eax
6401b8f2:	je     0x6401b973
6401b8f4:	mov    ebx,DWORD PTR [ebp-0x34]
6401b8f7:	cmp    ebx,edi
6401b8f9:	je     0x6401b918
6401b8fb:	push   edi
6401b8fc:	push   edi
6401b8fd:	push   DWORD PTR [ebp+0x1c]
6401b900:	push   ebx
6401b901:	push   esi
6401b902:	push   DWORD PTR [ebp-0x1c]
6401b905:	push   edi
6401b906:	push   DWORD PTR [ebp+0xc]
6401b909:	call   DWORD PTR ds:0x64022024
6401b90f:	test   eax,eax
6401b911:	je     0x6401b973
6401b913:	mov    DWORD PTR [ebp-0x20],ebx
6401b916:	jmp    0x6401b973
6401b918:	cmp    DWORD PTR [ebp-0x2c],edi
6401b91b:	mov    ebx,DWORD PTR ds:0x64022024
6401b921:	jne    0x6401b937
6401b923:	push   edi
6401b924:	push   edi
6401b925:	push   edi
6401b926:	push   edi
6401b927:	push   esi
6401b928:	push   DWORD PTR [ebp-0x1c]
6401b92b:	push   edi
6401b92c:	push   DWORD PTR [ebp+0xc]
6401b92f:	call   ebx
6401b931:	mov    esi,eax
6401b933:	cmp    esi,edi
6401b935:	je     0x6401b973
6401b937:	push   esi
6401b938:	push   0x1
6401b93a:	call   0x64013f40
6401b93f:	cmp    eax,edi
6401b941:	pop    ecx
6401b942:	pop    ecx
6401b943:	mov    DWORD PTR [ebp-0x20],eax
6401b946:	je     0x6401b973
6401b948:	push   edi
6401b949:	push   edi
6401b94a:	push   esi
6401b94b:	push   eax
6401b94c:	push   esi
6401b94d:	push   DWORD PTR [ebp-0x1c]
6401b950:	push   edi
6401b951:	push   DWORD PTR [ebp+0xc]
6401b954:	call   ebx
6401b956:	cmp    eax,edi
6401b958:	jne    0x6401b968
6401b95a:	push   DWORD PTR [ebp-0x20]
6401b95d:	call   0x64011ab6
6401b962:	pop    ecx
6401b963:	mov    DWORD PTR [ebp-0x20],edi
6401b966:	jmp    0x6401b973
6401b968:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6401b96c:	je     0x6401b973
6401b96e:	mov    ecx,DWORD PTR [ebp-0x30]
6401b971:	mov    DWORD PTR [ecx],eax
6401b973:	push   DWORD PTR [ebp-0x1c]
6401b976:	call   0x6401112e
6401b97b:	pop    ecx
6401b97c:	mov    eax,DWORD PTR [ebp-0x20]
6401b97f:	lea    esp,[ebp-0x40]
6401b982:	pop    edi
6401b983:	pop    esi
6401b984:	pop    ebx
6401b985:	mov    ecx,DWORD PTR [ebp-0x4]
6401b988:	xor    ecx,ebp
6401b98a:	call   0x64010c1e
6401b98f:	leave  
6401b990:	ret    
6401b991:	push   0xc
6401b993:	push   0x64026cc0
6401b998:	call   0x64011fc8
6401b99d:	and    DWORD PTR [ebp-0x4],0x0
6401b9a1:	movapd xmm0,xmm1
6401b9a5:	mov    DWORD PTR [ebp-0x1c],0x1
6401b9ac:	jmp    0x6401b9d1
6401b9ae:	mov    eax,DWORD PTR [ebp-0x14]
6401b9b1:	mov    eax,DWORD PTR [eax]
6401b9b3:	mov    eax,DWORD PTR [eax]
6401b9b5:	cmp    eax,0xc0000005
6401b9ba:	je     0x6401b9c6
6401b9bc:	cmp    eax,0xc000001d
6401b9c1:	je     0x6401b9c6
6401b9c3:	xor    eax,eax
6401b9c5:	ret    
6401b9c6:	xor    eax,eax
6401b9c8:	inc    eax
6401b9c9:	ret    
6401b9ca:	mov    esp,DWORD PTR [ebp-0x18]
6401b9cd:	and    DWORD PTR [ebp-0x1c],0x0
6401b9d1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b9d8:	mov    eax,DWORD PTR [ebp-0x1c]
6401b9db:	call   0x6401200d
6401b9e0:	ret    
6401b9e1:	push   ebp
6401b9e2:	mov    ebp,esp
6401b9e4:	sub    esp,0x18
6401b9e7:	xor    eax,eax
6401b9e9:	push   ebx
6401b9ea:	mov    DWORD PTR [ebp-0x4],eax
6401b9ed:	mov    DWORD PTR [ebp-0xc],eax
6401b9f0:	mov    DWORD PTR [ebp-0x8],eax
6401b9f3:	push   ebx
6401b9f4:	pushf  
6401b9f5:	pop    eax
6401b9f6:	mov    ecx,eax
6401b9f8:	xor    eax,0x200000
6401b9fd:	push   eax
6401b9fe:	popf   
6401b9ff:	pushf  
6401ba00:	pop    edx
6401ba01:	sub    edx,ecx
6401ba03:	je     0x6401ba24
6401ba05:	push   ecx
6401ba06:	popf   
6401ba07:	xor    eax,eax
6401ba09:	cpuid  
6401ba0b:	mov    DWORD PTR [ebp-0xc],eax
6401ba0e:	mov    DWORD PTR [ebp-0x18],ebx
6401ba11:	mov    DWORD PTR [ebp-0x14],edx
6401ba14:	mov    DWORD PTR [ebp-0x10],ecx
6401ba17:	mov    eax,0x1
6401ba1c:	cpuid  
6401ba1e:	mov    DWORD PTR [ebp-0x4],edx
6401ba21:	mov    DWORD PTR [ebp-0x8],eax
6401ba24:	pop    ebx
6401ba25:	test   DWORD PTR [ebp-0x4],0x4000000
6401ba2c:	je     0x6401ba3c
6401ba2e:	call   0x6401b991
6401ba33:	test   eax,eax
6401ba35:	je     0x6401ba3c
6401ba37:	xor    eax,eax
6401ba39:	inc    eax
6401ba3a:	jmp    0x6401ba3e
6401ba3c:	xor    eax,eax
6401ba3e:	pop    ebx
6401ba3f:	leave  
6401ba40:	ret    
6401ba41:	call   0x6401b9e1
6401ba46:	mov    ds:0x6402e5a4,eax
6401ba4b:	xor    eax,eax
6401ba4d:	ret    
6401ba4e:	push   ebp
6401ba4f:	mov    ebp,esp
6401ba51:	sub    esp,0x10
6401ba54:	push   DWORD PTR [ebp+0x8]
6401ba57:	lea    ecx,[ebp-0x10]
6401ba5a:	call   0x64010dc1
6401ba5f:	movzx  eax,BYTE PTR [ebp+0xc]
6401ba63:	mov    ecx,DWORD PTR [ebp-0xc]
6401ba66:	mov    dl,BYTE PTR [ebp+0x14]
6401ba69:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6401ba6d:	jne    0x6401ba8d
6401ba6f:	cmp    DWORD PTR [ebp+0x10],0x0
6401ba73:	je     0x6401ba87
6401ba75:	mov    ecx,DWORD PTR [ebp-0x10]
6401ba78:	mov    ecx,DWORD PTR [ecx+0xc8]
6401ba7e:	movzx  eax,WORD PTR [ecx+eax*2]
6401ba82:	and    eax,DWORD PTR [ebp+0x10]
6401ba85:	jmp    0x6401ba89
6401ba87:	xor    eax,eax
6401ba89:	test   eax,eax
6401ba8b:	je     0x6401ba90
6401ba8d:	xor    eax,eax
6401ba8f:	inc    eax
6401ba90:	cmp    BYTE PTR [ebp-0x4],0x0
6401ba94:	je     0x6401ba9d
6401ba96:	mov    ecx,DWORD PTR [ebp-0x8]
6401ba99:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ba9d:	leave  
6401ba9e:	ret    
6401ba9f:	push   0x4
6401baa1:	push   0x0
6401baa3:	push   DWORD PTR [esp+0xc]
6401baa7:	push   0x0
6401baa9:	call   0x6401ba4e
6401baae:	add    esp,0x10
6401bab1:	ret    
6401bab2:	push   ebp
6401bab3:	mov    ebp,esp
6401bab5:	sub    esp,0x10
6401bab8:	push   ebx
6401bab9:	push   esi
6401baba:	mov    esi,DWORD PTR [ebp+0xc]
6401babd:	xor    ebx,ebx
6401babf:	cmp    esi,ebx
6401bac1:	push   edi
6401bac2:	mov    edi,DWORD PTR [ebp+0x10]
6401bac5:	jne    0x6401bad8
6401bac7:	cmp    edi,ebx
6401bac9:	jbe    0x6401bad8
6401bacb:	mov    eax,DWORD PTR [ebp+0x8]
6401bace:	cmp    eax,ebx
6401bad0:	je     0x6401bad4
6401bad2:	mov    DWORD PTR [eax],ebx
6401bad4:	xor    eax,eax
6401bad6:	jmp    0x6401bb57
6401bad8:	mov    eax,DWORD PTR [ebp+0x8]
6401badb:	cmp    eax,ebx
6401badd:	je     0x6401bae2
6401badf:	or     DWORD PTR [eax],0xffffffff
6401bae2:	cmp    edi,0x7fffffff
6401bae8:	jbe    0x6401bb05
6401baea:	call   0x640129f0
6401baef:	push   0x16
6401baf1:	pop    esi
6401baf2:	push   ebx
6401baf3:	push   ebx
6401baf4:	push   ebx
6401baf5:	push   ebx
6401baf6:	push   ebx
6401baf7:	mov    DWORD PTR [eax],esi
6401baf9:	call   0x64010756
6401bafe:	add    esp,0x14
6401bb01:	mov    eax,esi
6401bb03:	jmp    0x6401bb57
6401bb05:	push   DWORD PTR [ebp+0x18]
6401bb08:	lea    ecx,[ebp-0x10]
6401bb0b:	call   0x64010dc1
6401bb10:	mov    eax,DWORD PTR [ebp-0x10]
6401bb13:	cmp    DWORD PTR [eax+0x14],ebx
6401bb16:	jne    0x6401bbb0
6401bb1c:	mov    ax,WORD PTR [ebp+0x14]
6401bb20:	cmp    ax,0xff
6401bb24:	jbe    0x6401bb5c
6401bb26:	cmp    esi,ebx
6401bb28:	je     0x6401bb39
6401bb2a:	cmp    edi,ebx
6401bb2c:	jbe    0x6401bb39
6401bb2e:	push   edi
6401bb2f:	push   ebx
6401bb30:	push   esi
6401bb31:	call   0x64011320
6401bb36:	add    esp,0xc
6401bb39:	call   0x640129f0
6401bb3e:	mov    DWORD PTR [eax],0x2a
6401bb44:	call   0x640129f0
6401bb49:	cmp    BYTE PTR [ebp-0x4],bl
6401bb4c:	mov    eax,DWORD PTR [eax]
6401bb4e:	je     0x6401bb57
6401bb50:	mov    ecx,DWORD PTR [ebp-0x8]
6401bb53:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401bb57:	pop    edi
6401bb58:	pop    esi
6401bb59:	pop    ebx
6401bb5a:	leave  
6401bb5b:	ret    
6401bb5c:	cmp    esi,ebx
6401bb5e:	je     0x6401bb8e
6401bb60:	cmp    edi,ebx
6401bb62:	ja     0x6401bb8c
6401bb64:	call   0x640129f0
6401bb69:	push   0x22
6401bb6b:	pop    esi
6401bb6c:	push   ebx
6401bb6d:	push   ebx
6401bb6e:	push   ebx
6401bb6f:	push   ebx
6401bb70:	push   ebx
6401bb71:	mov    DWORD PTR [eax],esi
6401bb73:	call   0x64010756
6401bb78:	add    esp,0x14
6401bb7b:	cmp    BYTE PTR [ebp-0x4],bl
6401bb7e:	je     0x6401bb01
6401bb80:	mov    eax,DWORD PTR [ebp-0x8]
6401bb83:	and    DWORD PTR [eax+0x70],0xfffffffd
6401bb87:	jmp    0x6401bb01
6401bb8c:	mov    BYTE PTR [esi],al
6401bb8e:	mov    eax,DWORD PTR [ebp+0x8]
6401bb91:	cmp    eax,ebx
6401bb93:	je     0x6401bb9b
6401bb95:	mov    DWORD PTR [eax],0x1
6401bb9b:	cmp    BYTE PTR [ebp-0x4],bl
6401bb9e:	je     0x6401bad4
6401bba4:	mov    eax,DWORD PTR [ebp-0x8]
6401bba7:	and    DWORD PTR [eax+0x70],0xfffffffd
6401bbab:	jmp    0x6401bad4
6401bbb0:	lea    ecx,[ebp+0xc]
6401bbb3:	push   ecx
6401bbb4:	push   ebx
6401bbb5:	push   edi
6401bbb6:	push   esi
6401bbb7:	push   0x1
6401bbb9:	lea    ecx,[ebp+0x14]
6401bbbc:	push   ecx
6401bbbd:	push   ebx
6401bbbe:	mov    DWORD PTR [ebp+0xc],ebx
6401bbc1:	push   DWORD PTR [eax+0x4]
6401bbc4:	call   DWORD PTR ds:0x64022024
6401bbca:	cmp    eax,ebx
6401bbcc:	je     0x6401bbe2
6401bbce:	cmp    DWORD PTR [ebp+0xc],ebx
6401bbd1:	jne    0x6401bb39
6401bbd7:	mov    ecx,DWORD PTR [ebp+0x8]
6401bbda:	cmp    ecx,ebx
6401bbdc:	je     0x6401bb9b
6401bbde:	mov    DWORD PTR [ecx],eax
6401bbe0:	jmp    0x6401bb9b
6401bbe2:	call   DWORD PTR ds:0x64022044
6401bbe8:	cmp    eax,0x7a
6401bbeb:	jne    0x6401bb39
6401bbf1:	cmp    esi,ebx
6401bbf3:	je     0x6401bb64
6401bbf9:	cmp    edi,ebx
6401bbfb:	jbe    0x6401bb64
6401bc01:	push   edi
6401bc02:	push   ebx
6401bc03:	push   esi
6401bc04:	call   0x64011320
6401bc09:	add    esp,0xc
6401bc0c:	jmp    0x6401bb64
6401bc11:	push   0x0
6401bc13:	push   DWORD PTR [esp+0x14]
6401bc17:	push   DWORD PTR [esp+0x14]
6401bc1b:	push   DWORD PTR [esp+0x14]
6401bc1f:	push   DWORD PTR [esp+0x14]
6401bc23:	call   0x6401bab2
6401bc28:	add    esp,0x14
6401bc2b:	ret    
6401bc2c:	push   ebp
6401bc2d:	mov    ebp,esp
6401bc2f:	sub    esp,0x20
6401bc32:	push   ebx
6401bc33:	push   esi
6401bc34:	push   edi
6401bc35:	call   0x64012b16
6401bc3a:	xor    ebx,ebx
6401bc3c:	cmp    DWORD PTR ds:0x6402aefc,ebx
6401bc42:	mov    DWORD PTR [ebp-0x8],eax
6401bc45:	mov    DWORD PTR [ebp-0x4],ebx
6401bc48:	mov    DWORD PTR [ebp-0xc],ebx
6401bc4b:	mov    DWORD PTR [ebp-0x10],ebx
6401bc4e:	jne    0x6401bd02
6401bc54:	push   0x64024448
6401bc59:	call   DWORD PTR ds:0x640220c4
6401bc5f:	mov    edi,eax
6401bc61:	cmp    edi,ebx
6401bc63:	je     0x6401bde2
6401bc69:	mov    esi,DWORD PTR ds:0x64022014
6401bc6f:	push   0x6402443c
6401bc74:	push   edi
6401bc75:	call   esi
6401bc77:	cmp    eax,ebx
6401bc79:	je     0x6401bde2
6401bc7f:	push   eax
6401bc80:	call   0x64012aa8
6401bc85:	mov    DWORD PTR [esp],0x6402442c
6401bc8c:	push   edi
6401bc8d:	mov    ds:0x6402aefc,eax
6401bc92:	call   esi
6401bc94:	push   eax
6401bc95:	call   0x64012aa8
6401bc9a:	mov    DWORD PTR [esp],0x64024418
6401bca1:	push   edi
6401bca2:	mov    ds:0x6402af00,eax
6401bca7:	call   esi
6401bca9:	push   eax
6401bcaa:	call   0x64012aa8
6401bcaf:	mov    ds:0x6402af04,eax
6401bcb4:	lea    eax,[ebp-0xc]
6401bcb7:	push   eax
6401bcb8:	call   0x6401411f
6401bcbd:	test   eax,eax
6401bcbf:	pop    ecx
6401bcc0:	pop    ecx
6401bcc1:	je     0x6401bcd0
6401bcc3:	push   ebx
6401bcc4:	push   ebx
6401bcc5:	push   ebx
6401bcc6:	push   ebx
6401bcc7:	push   ebx
6401bcc8:	call   0x6401065a
6401bccd:	add    esp,0x14
6401bcd0:	cmp    DWORD PTR [ebp-0xc],0x2
6401bcd4:	jne    0x6401bd02
6401bcd6:	push   0x640243fc
6401bcdb:	push   edi
6401bcdc:	call   esi
6401bcde:	push   eax
6401bcdf:	call   0x64012aa8
6401bce4:	cmp    eax,ebx
6401bce6:	pop    ecx
6401bce7:	mov    ds:0x6402af0c,eax
6401bcec:	je     0x6401bd02
6401bcee:	push   0x640243e4
6401bcf3:	push   edi
6401bcf4:	call   esi
6401bcf6:	push   eax
6401bcf7:	call   0x64012aa8
6401bcfc:	pop    ecx
6401bcfd:	mov    ds:0x6402af08,eax
6401bd02:	mov    eax,ds:0x6402af08
6401bd07:	mov    ecx,DWORD PTR [ebp-0x8]
6401bd0a:	cmp    eax,ecx
6401bd0c:	je     0x6401bd87
6401bd0e:	cmp    DWORD PTR ds:0x6402af0c,ecx
6401bd14:	je     0x6401bd87
6401bd16:	push   eax
6401bd17:	call   0x64012b1f
6401bd1c:	push   DWORD PTR ds:0x6402af0c
6401bd22:	mov    esi,eax
6401bd24:	call   0x64012b1f
6401bd29:	cmp    esi,ebx
6401bd2b:	pop    ecx
6401bd2c:	pop    ecx
6401bd2d:	mov    edi,eax
6401bd2f:	je     0x6401bd87
6401bd31:	cmp    edi,ebx
6401bd33:	je     0x6401bd87
6401bd35:	call   esi
6401bd37:	cmp    eax,ebx
6401bd39:	je     0x6401bd54
6401bd3b:	lea    ecx,[ebp-0x14]
6401bd3e:	push   ecx
6401bd3f:	push   0xc
6401bd41:	lea    ecx,[ebp-0x20]
6401bd44:	push   ecx
6401bd45:	push   0x1
6401bd47:	push   eax
6401bd48:	call   edi
6401bd4a:	test   eax,eax
6401bd4c:	je     0x6401bd54
6401bd4e:	test   BYTE PTR [ebp-0x18],0x1
6401bd52:	jne    0x6401bd87
6401bd54:	lea    eax,[ebp-0x10]
6401bd57:	push   eax
6401bd58:	call   0x64014156
6401bd5d:	test   eax,eax
6401bd5f:	pop    ecx
6401bd60:	je     0x6401bd6f
6401bd62:	push   ebx
6401bd63:	push   ebx
6401bd64:	push   ebx
6401bd65:	push   ebx
6401bd66:	push   ebx
6401bd67:	call   0x6401065a
6401bd6c:	add    esp,0x14
6401bd6f:	cmp    DWORD PTR [ebp-0x10],0x4
6401bd73:	jb     0x6401bd7e
6401bd75:	or     DWORD PTR [ebp+0x10],0x200000
6401bd7c:	jmp    0x6401bdc2
6401bd7e:	or     DWORD PTR [ebp+0x10],0x40000
6401bd85:	jmp    0x6401bdc2
6401bd87:	mov    eax,ds:0x6402af00
6401bd8c:	cmp    eax,DWORD PTR [ebp-0x8]
6401bd8f:	je     0x6401bdc2
6401bd91:	push   eax
6401bd92:	call   0x64012b1f
6401bd97:	cmp    eax,ebx
6401bd99:	pop    ecx
6401bd9a:	je     0x6401bdc2
6401bd9c:	call   eax
6401bd9e:	cmp    eax,ebx
6401bda0:	mov    DWORD PTR [ebp-0x4],eax
6401bda3:	je     0x6401bdc2
6401bda5:	mov    eax,ds:0x6402af04
6401bdaa:	cmp    eax,DWORD PTR [ebp-0x8]
6401bdad:	je     0x6401bdc2
6401bdaf:	push   eax
6401bdb0:	call   0x64012b1f
6401bdb5:	cmp    eax,ebx
6401bdb7:	pop    ecx
6401bdb8:	je     0x6401bdc2
6401bdba:	push   DWORD PTR [ebp-0x4]
6401bdbd:	call   eax
6401bdbf:	mov    DWORD PTR [ebp-0x4],eax
6401bdc2:	push   DWORD PTR ds:0x6402aefc
6401bdc8:	call   0x64012b1f
6401bdcd:	cmp    eax,ebx
6401bdcf:	pop    ecx
6401bdd0:	je     0x6401bde2
6401bdd2:	push   DWORD PTR [ebp+0x10]
6401bdd5:	push   DWORD PTR [ebp+0xc]
6401bdd8:	push   DWORD PTR [ebp+0x8]
6401bddb:	push   DWORD PTR [ebp-0x4]
6401bdde:	call   eax
6401bde0:	jmp    0x6401bde4
6401bde2:	xor    eax,eax
6401bde4:	pop    edi
6401bde5:	pop    esi
6401bde6:	pop    ebx
6401bde7:	leave  
6401bde8:	ret    
6401bde9:	mov    ecx,DWORD PTR [esp+0x4]
6401bded:	push   esi
6401bdee:	xor    esi,esi
6401bdf0:	cmp    ecx,esi
6401bdf2:	jl     0x6401be12
6401bdf4:	cmp    ecx,0x2
6401bdf7:	jle    0x6401be05
6401bdf9:	cmp    ecx,0x3
6401bdfc:	jne    0x6401be12
6401bdfe:	mov    eax,ds:0x6402a51c
6401be03:	pop    esi
6401be04:	ret    
6401be05:	mov    eax,ds:0x6402a51c
6401be0a:	mov    DWORD PTR ds:0x6402a51c,ecx
6401be10:	pop    esi
6401be11:	ret    
6401be12:	call   0x640129f0
6401be17:	push   esi
6401be18:	push   esi
6401be19:	push   esi
6401be1a:	push   esi
6401be1b:	push   esi
6401be1c:	mov    DWORD PTR [eax],0x16
6401be22:	call   0x64010756
6401be27:	add    esp,0x14
6401be2a:	or     eax,0xffffffff
6401be2d:	pop    esi
6401be2e:	ret    
6401be2f:	int3   
6401be30:	mov    eax,DWORD PTR [esp+0x8]
6401be34:	mov    ecx,DWORD PTR [esp+0x10]
6401be38:	or     ecx,eax
6401be3a:	mov    ecx,DWORD PTR [esp+0xc]
6401be3e:	jne    0x6401be49
6401be40:	mov    eax,DWORD PTR [esp+0x4]
6401be44:	mul    ecx
6401be46:	ret    0x10
6401be49:	push   ebx
6401be4a:	mul    ecx
6401be4c:	mov    ebx,eax
6401be4e:	mov    eax,DWORD PTR [esp+0x8]
6401be52:	mul    DWORD PTR [esp+0x14]
6401be56:	add    ebx,eax
6401be58:	mov    eax,DWORD PTR [esp+0x8]
6401be5c:	mul    ecx
6401be5e:	add    edx,ebx
6401be60:	pop    ebx
6401be61:	ret    0x10
6401be64:	push   0xa
6401be66:	push   0x0
6401be68:	push   DWORD PTR [esp+0xc]
6401be6c:	call   0x6401c6b5
6401be71:	add    esp,0xc
6401be74:	ret    
6401be75:	push   0x2
6401be77:	call   0x64014076
6401be7c:	pop    ecx
6401be7d:	ret    
6401be7e:	mov    ecx,DWORD PTR [esp+0x4]
6401be82:	push   ebx
6401be83:	xor    ebx,ebx
6401be85:	cmp    ecx,ebx
6401be87:	push   esi
6401be88:	push   edi
6401be89:	jl     0x6401bee6
6401be8b:	cmp    ecx,DWORD PTR ds:0x6402e480
6401be91:	jae    0x6401bee6
6401be93:	mov    eax,ecx
6401be95:	sar    eax,0x5
6401be98:	mov    esi,ecx
6401be9a:	lea    edi,[eax*4+0x6402e4a0]
6401bea1:	mov    eax,DWORD PTR [edi]
6401bea3:	and    esi,0x1f
6401bea6:	shl    esi,0x6
6401bea9:	add    eax,esi
6401beab:	test   BYTE PTR [eax+0x4],0x1
6401beaf:	je     0x6401bee6
6401beb1:	cmp    DWORD PTR [eax],0xffffffff
6401beb4:	je     0x6401bee6
6401beb6:	cmp    DWORD PTR ds:0x6402a520,0x1
6401bebd:	jne    0x6401bedc
6401bebf:	sub    ecx,ebx
6401bec1:	je     0x6401bed3
6401bec3:	dec    ecx
6401bec4:	je     0x6401bece
6401bec6:	dec    ecx
6401bec7:	jne    0x6401bedc
6401bec9:	push   ebx
6401beca:	push   0xfffffff4
6401becc:	jmp    0x6401bed6
6401bece:	push   ebx
6401becf:	push   0xfffffff5
6401bed1:	jmp    0x6401bed6
6401bed3:	push   ebx
6401bed4:	push   0xfffffff6
6401bed6:	call   DWORD PTR ds:0x64022090
6401bedc:	mov    eax,DWORD PTR [edi]
6401bede:	or     DWORD PTR [esi+eax*1],0xffffffff
6401bee2:	xor    eax,eax
6401bee4:	jmp    0x6401befb
6401bee6:	call   0x640129f0
6401beeb:	mov    DWORD PTR [eax],0x9
6401bef1:	call   0x64012a03
6401bef6:	mov    DWORD PTR [eax],ebx
6401bef8:	or     eax,0xffffffff
6401befb:	pop    edi
6401befc:	pop    esi
6401befd:	pop    ebx
6401befe:	ret    
6401beff:	mov    eax,DWORD PTR [esp+0x4]
6401bf03:	cmp    eax,0xfffffffe
6401bf06:	jne    0x6401bf1f
6401bf08:	call   0x64012a03
6401bf0d:	and    DWORD PTR [eax],0x0
6401bf10:	call   0x640129f0
6401bf15:	mov    DWORD PTR [eax],0x9
6401bf1b:	or     eax,0xffffffff
6401bf1e:	ret    
6401bf1f:	push   esi
6401bf20:	xor    esi,esi
6401bf22:	cmp    eax,esi
6401bf24:	jl     0x6401bf48
6401bf26:	cmp    eax,DWORD PTR ds:0x6402e480
6401bf2c:	jae    0x6401bf48
6401bf2e:	mov    ecx,eax
6401bf30:	and    eax,0x1f
6401bf33:	sar    ecx,0x5
6401bf36:	mov    ecx,DWORD PTR [ecx*4+0x6402e4a0]
6401bf3d:	shl    eax,0x6
6401bf40:	add    eax,ecx
6401bf42:	test   BYTE PTR [eax+0x4],0x1
6401bf46:	jne    0x6401bf6c
6401bf48:	call   0x64012a03
6401bf4d:	mov    DWORD PTR [eax],esi
6401bf4f:	call   0x640129f0
6401bf54:	push   esi
6401bf55:	push   esi
6401bf56:	push   esi
6401bf57:	push   esi
6401bf58:	push   esi
6401bf59:	mov    DWORD PTR [eax],0x9
6401bf5f:	call   0x64010756
6401bf64:	add    esp,0x14
6401bf67:	or     eax,0xffffffff
6401bf6a:	pop    esi
6401bf6b:	ret    
6401bf6c:	mov    eax,DWORD PTR [eax]
6401bf6e:	pop    esi
6401bf6f:	ret    
6401bf70:	push   0xc
6401bf72:	push   0x64026ce0
6401bf77:	call   0x64011fc8
6401bf7c:	mov    edi,DWORD PTR [ebp+0x8]
6401bf7f:	mov    eax,edi
6401bf81:	sar    eax,0x5
6401bf84:	mov    esi,edi
6401bf86:	and    esi,0x1f
6401bf89:	shl    esi,0x6
6401bf8c:	add    esi,DWORD PTR [eax*4+0x6402e4a0]
6401bf93:	mov    DWORD PTR [ebp-0x1c],0x1
6401bf9a:	xor    ebx,ebx
6401bf9c:	cmp    DWORD PTR [esi+0x8],ebx
6401bf9f:	jne    0x6401bfd7
6401bfa1:	push   0xa
6401bfa3:	call   0x6401823f
6401bfa8:	pop    ecx
6401bfa9:	mov    DWORD PTR [ebp-0x4],ebx
6401bfac:	cmp    DWORD PTR [esi+0x8],ebx
6401bfaf:	jne    0x6401bfcb
6401bfb1:	push   0xfa0
6401bfb6:	lea    eax,[esi+0xc]
6401bfb9:	push   eax
6401bfba:	call   0x640198f8
6401bfbf:	pop    ecx
6401bfc0:	pop    ecx
6401bfc1:	test   eax,eax
6401bfc3:	jne    0x6401bfc8
6401bfc5:	mov    DWORD PTR [ebp-0x1c],ebx
6401bfc8:	inc    DWORD PTR [esi+0x8]
6401bfcb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401bfd2:	call   0x6401c007
6401bfd7:	cmp    DWORD PTR [ebp-0x1c],ebx
6401bfda:	je     0x6401bff9
6401bfdc:	mov    eax,edi
6401bfde:	sar    eax,0x5
6401bfe1:	and    edi,0x1f
6401bfe4:	shl    edi,0x6
6401bfe7:	mov    eax,DWORD PTR [eax*4+0x6402e4a0]
6401bfee:	lea    eax,[eax+edi*1+0xc]
6401bff2:	push   eax
6401bff3:	call   DWORD PTR ds:0x64022098
6401bff9:	mov    eax,DWORD PTR [ebp-0x1c]
6401bffc:	call   0x6401200d
6401c001:	ret    
6401c002:	xor    ebx,ebx
6401c004:	mov    edi,DWORD PTR [ebp+0x8]
6401c007:	push   0xa
6401c009:	call   0x64018167
6401c00e:	pop    ecx
6401c00f:	ret    
6401c010:	mov    eax,DWORD PTR [esp+0x4]
6401c014:	mov    ecx,eax
6401c016:	and    eax,0x1f
6401c019:	sar    ecx,0x5
6401c01c:	mov    ecx,DWORD PTR [ecx*4+0x6402e4a0]
6401c023:	shl    eax,0x6
6401c026:	lea    eax,[ecx+eax*1+0xc]
6401c02a:	push   eax
6401c02b:	call   DWORD PTR ds:0x6402209c
6401c031:	ret    
6401c032:	push   ebp
6401c033:	mov    ebp,esp
6401c035:	sub    esp,0x10
6401c038:	mov    eax,ds:0x64029038
6401c03d:	xor    eax,ebp
6401c03f:	mov    DWORD PTR [ebp-0x4],eax
6401c042:	push   esi
6401c043:	xor    esi,esi
6401c045:	cmp    DWORD PTR ds:0x64029f40,esi
6401c04b:	je     0x6401c09b
6401c04d:	cmp    DWORD PTR ds:0x64029fb4,0xfffffffe
6401c054:	jne    0x6401c05b
6401c056:	call   0x6401c741
6401c05b:	mov    eax,ds:0x64029fb4
6401c060:	cmp    eax,0xffffffff
6401c063:	jne    0x6401c06b
6401c065:	or     ax,0xffff
6401c069:	jmp    0x6401c0db
6401c06b:	push   esi
6401c06c:	lea    ecx,[ebp-0x10]
6401c06f:	push   ecx
6401c070:	push   0x1
6401c072:	lea    ecx,[ebp+0x8]
6401c075:	push   ecx
6401c076:	push   eax
6401c077:	call   DWORD PTR ds:0x640220ac
6401c07d:	test   eax,eax
6401c07f:	jne    0x6401c0e8
6401c081:	cmp    DWORD PTR ds:0x64029f40,0x2
6401c088:	jne    0x6401c065
6401c08a:	call   DWORD PTR ds:0x64022044
6401c090:	cmp    eax,0x78
6401c093:	jne    0x6401c065
6401c095:	mov    DWORD PTR ds:0x64029f40,esi
6401c09b:	push   esi
6401c09c:	push   esi
6401c09d:	push   0x5
6401c09f:	lea    eax,[ebp-0xc]
6401c0a2:	push   eax
6401c0a3:	push   0x1
6401c0a5:	lea    eax,[ebp+0x8]
6401c0a8:	push   eax
6401c0a9:	push   esi
6401c0aa:	call   DWORD PTR ds:0x640220a8
6401c0b0:	push   eax
6401c0b1:	call   DWORD PTR ds:0x64022024
6401c0b7:	mov    ecx,DWORD PTR ds:0x64029fb4
6401c0bd:	cmp    ecx,0xffffffff
6401c0c0:	je     0x6401c065
6401c0c2:	push   esi
6401c0c3:	lea    edx,[ebp-0x10]
6401c0c6:	push   edx
6401c0c7:	push   eax
6401c0c8:	lea    eax,[ebp-0xc]
6401c0cb:	push   eax
6401c0cc:	push   ecx
6401c0cd:	call   DWORD PTR ds:0x640220a4
6401c0d3:	test   eax,eax
6401c0d5:	je     0x6401c065
6401c0d7:	mov    ax,WORD PTR [ebp+0x8]
6401c0db:	mov    ecx,DWORD PTR [ebp-0x4]
6401c0de:	xor    ecx,ebp
6401c0e0:	pop    esi
6401c0e1:	call   0x64010c1e
6401c0e6:	leave  
6401c0e7:	ret    
6401c0e8:	mov    DWORD PTR ds:0x64029f40,0x1
6401c0f2:	jmp    0x6401c0d7
6401c0f4:	push   0x10
6401c0f6:	push   0x64026d00
6401c0fb:	call   0x64011fc8
6401c100:	xor    ebx,ebx
6401c102:	mov    DWORD PTR [ebp-0x1c],ebx
6401c105:	push   0x1
6401c107:	call   0x6401823f
6401c10c:	pop    ecx
6401c10d:	mov    DWORD PTR [ebp-0x4],ebx
6401c110:	push   0x3
6401c112:	pop    edi
6401c113:	mov    DWORD PTR [ebp-0x20],edi
6401c116:	cmp    edi,DWORD PTR ds:0x6402e460
6401c11c:	jge    0x6401c175
6401c11e:	mov    esi,edi
6401c120:	shl    esi,0x2
6401c123:	mov    eax,ds:0x6402d444
6401c128:	add    eax,esi
6401c12a:	cmp    DWORD PTR [eax],ebx
6401c12c:	je     0x6401c172
6401c12e:	mov    eax,DWORD PTR [eax]
6401c130:	test   BYTE PTR [eax+0xc],0x83
6401c134:	je     0x6401c145
6401c136:	push   eax
6401c137:	call   0x6401c7ff
6401c13c:	pop    ecx
6401c13d:	cmp    eax,0xffffffff
6401c140:	je     0x6401c145
6401c142:	inc    DWORD PTR [ebp-0x1c]
6401c145:	cmp    edi,0x14
6401c148:	jl     0x6401c172
6401c14a:	mov    eax,ds:0x6402d444
6401c14f:	mov    eax,DWORD PTR [esi+eax*1]
6401c152:	add    eax,0x20
6401c155:	push   eax
6401c156:	call   DWORD PTR ds:0x640220a0
6401c15c:	mov    eax,ds:0x6402d444
6401c161:	push   DWORD PTR [esi+eax*1]
6401c164:	call   0x64011ab6
6401c169:	pop    ecx
6401c16a:	mov    eax,ds:0x6402d444
6401c16f:	mov    DWORD PTR [esi+eax*1],ebx
6401c172:	inc    edi
6401c173:	jmp    0x6401c113
6401c175:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c17c:	call   0x6401c18a
6401c181:	mov    eax,DWORD PTR [ebp-0x1c]
6401c184:	call   0x6401200d
6401c189:	ret    
6401c18a:	push   0x1
6401c18c:	call   0x64018167
6401c191:	pop    ecx
6401c192:	ret    
6401c193:	push   ebx
6401c194:	push   esi
6401c195:	mov    esi,DWORD PTR [esp+0xc]
6401c199:	mov    eax,DWORD PTR [esi+0xc]
6401c19c:	mov    ecx,eax
6401c19e:	and    cl,0x3
6401c1a1:	xor    ebx,ebx
6401c1a3:	cmp    cl,0x2
6401c1a6:	jne    0x6401c1e7
6401c1a8:	test   ax,0x108
6401c1ac:	je     0x6401c1e7
6401c1ae:	mov    eax,DWORD PTR [esi+0x8]
6401c1b1:	push   edi
6401c1b2:	mov    edi,DWORD PTR [esi]
6401c1b4:	sub    edi,eax
6401c1b6:	test   edi,edi
6401c1b8:	jle    0x6401c1e6
6401c1ba:	push   edi
6401c1bb:	push   eax
6401c1bc:	push   esi
6401c1bd:	call   0x6401aa9d
6401c1c2:	pop    ecx
6401c1c3:	push   eax
6401c1c4:	call   0x6401a77e
6401c1c9:	add    esp,0xc
6401c1cc:	cmp    eax,edi
6401c1ce:	jne    0x6401c1df
6401c1d0:	mov    eax,DWORD PTR [esi+0xc]
6401c1d3:	test   al,al
6401c1d5:	jns    0x6401c1e6
6401c1d7:	and    eax,0xfffffffd
6401c1da:	mov    DWORD PTR [esi+0xc],eax
6401c1dd:	jmp    0x6401c1e6
6401c1df:	or     DWORD PTR [esi+0xc],0x20
6401c1e3:	or     ebx,0xffffffff
6401c1e6:	pop    edi
6401c1e7:	mov    eax,DWORD PTR [esi+0x8]
6401c1ea:	and    DWORD PTR [esi+0x4],0x0
6401c1ee:	mov    DWORD PTR [esi],eax
6401c1f0:	pop    esi
6401c1f1:	mov    eax,ebx
6401c1f3:	pop    ebx
6401c1f4:	ret    
6401c1f5:	push   esi
6401c1f6:	mov    esi,DWORD PTR [esp+0x8]
6401c1fa:	test   esi,esi
6401c1fc:	jne    0x6401c207
6401c1fe:	push   esi
6401c1ff:	call   0x6401c237
6401c204:	pop    ecx
6401c205:	pop    esi
6401c206:	ret    
6401c207:	push   esi
6401c208:	call   0x6401c193
6401c20d:	test   eax,eax
6401c20f:	pop    ecx
6401c210:	je     0x6401c217
6401c212:	or     eax,0xffffffff
6401c215:	pop    esi
6401c216:	ret    
6401c217:	test   WORD PTR [esi+0xc],0x4000
6401c21d:	je     0x6401c233
6401c21f:	push   esi
6401c220:	call   0x6401aa9d
6401c225:	push   eax
6401c226:	call   0x6401c87b
6401c22b:	pop    ecx
6401c22c:	pop    ecx
6401c22d:	neg    eax
6401c22f:	sbb    eax,eax
6401c231:	pop    esi
6401c232:	ret    
6401c233:	xor    eax,eax
6401c235:	pop    esi
6401c236:	ret    
6401c237:	push   0x14
6401c239:	push   0x64026d20
6401c23e:	call   0x64011fc8
6401c243:	xor    edi,edi
6401c245:	mov    DWORD PTR [ebp-0x1c],edi
6401c248:	mov    DWORD PTR [ebp-0x24],edi
6401c24b:	push   0x1
6401c24d:	call   0x6401823f
6401c252:	pop    ecx
6401c253:	mov    DWORD PTR [ebp-0x4],edi
6401c256:	xor    esi,esi
6401c258:	mov    DWORD PTR [ebp-0x20],esi
6401c25b:	cmp    esi,DWORD PTR ds:0x6402e460
6401c261:	jge    0x6401c2ea
6401c267:	mov    eax,ds:0x6402d444
6401c26c:	lea    eax,[eax+esi*4]
6401c26f:	cmp    DWORD PTR [eax],edi
6401c271:	je     0x6401c2d1
6401c273:	mov    eax,DWORD PTR [eax]
6401c275:	test   BYTE PTR [eax+0xc],0x83
6401c279:	je     0x6401c2d1
6401c27b:	push   eax
6401c27c:	push   esi
6401c27d:	call   0x6401aa0f
6401c282:	pop    ecx
6401c283:	pop    ecx
6401c284:	xor    edx,edx
6401c286:	inc    edx
6401c287:	mov    DWORD PTR [ebp-0x4],edx
6401c28a:	mov    eax,ds:0x6402d444
6401c28f:	mov    eax,DWORD PTR [eax+esi*4]
6401c292:	mov    ecx,DWORD PTR [eax+0xc]
6401c295:	test   cl,0x83
6401c298:	je     0x6401c2c9
6401c29a:	cmp    DWORD PTR [ebp+0x8],edx
6401c29d:	jne    0x6401c2b0
6401c29f:	push   eax
6401c2a0:	call   0x6401c1f5
6401c2a5:	pop    ecx
6401c2a6:	cmp    eax,0xffffffff
6401c2a9:	je     0x6401c2c9
6401c2ab:	inc    DWORD PTR [ebp-0x1c]
6401c2ae:	jmp    0x6401c2c9
6401c2b0:	cmp    DWORD PTR [ebp+0x8],edi
6401c2b3:	jne    0x6401c2c9
6401c2b5:	test   cl,0x2
6401c2b8:	je     0x6401c2c9
6401c2ba:	push   eax
6401c2bb:	call   0x6401c1f5
6401c2c0:	pop    ecx
6401c2c1:	cmp    eax,0xffffffff
6401c2c4:	jne    0x6401c2c9
6401c2c6:	or     DWORD PTR [ebp-0x24],eax
6401c2c9:	mov    DWORD PTR [ebp-0x4],edi
6401c2cc:	call   0x6401c2d9
6401c2d1:	inc    esi
6401c2d2:	jmp    0x6401c258
6401c2d4:	xor    edi,edi
6401c2d6:	mov    esi,DWORD PTR [ebp-0x20]
6401c2d9:	mov    eax,ds:0x6402d444
6401c2de:	push   DWORD PTR [eax+esi*4]
6401c2e1:	push   esi
6401c2e2:	call   0x6401aa73
6401c2e7:	pop    ecx
6401c2e8:	pop    ecx
6401c2e9:	ret    
6401c2ea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c2f1:	call   0x6401c308
6401c2f6:	cmp    DWORD PTR [ebp+0x8],0x1
6401c2fa:	mov    eax,DWORD PTR [ebp-0x1c]
6401c2fd:	je     0x6401c302
6401c2ff:	mov    eax,DWORD PTR [ebp-0x24]
6401c302:	call   0x6401200d
6401c307:	ret    
6401c308:	push   0x1
6401c30a:	call   0x64018167
6401c30f:	pop    ecx
6401c310:	ret    
6401c311:	push   0x1
6401c313:	call   0x6401c237
6401c318:	pop    ecx
6401c319:	ret    
6401c31a:	push   ebp
6401c31b:	mov    ebp,esp
6401c31d:	push   ecx
6401c31e:	push   esi
6401c31f:	mov    esi,DWORD PTR [ebp+0xc]
6401c322:	push   esi
6401c323:	call   0x6401aa9d
6401c328:	mov    DWORD PTR [ebp+0xc],eax
6401c32b:	mov    eax,DWORD PTR [esi+0xc]
6401c32e:	test   al,0x82
6401c330:	pop    ecx
6401c331:	jne    0x6401c34c
6401c333:	call   0x640129f0
6401c338:	mov    DWORD PTR [eax],0x9
6401c33e:	or     DWORD PTR [esi+0xc],0x20
6401c342:	mov    eax,0xffff
6401c347:	jmp    0x6401c487
6401c34c:	test   al,0x40
6401c34e:	je     0x6401c35d
6401c350:	call   0x640129f0
6401c355:	mov    DWORD PTR [eax],0x22
6401c35b:	jmp    0x6401c33e
6401c35d:	test   al,0x1
6401c35f:	je     0x6401c378
6401c361:	and    DWORD PTR [esi+0x4],0x0
6401c365:	test   al,0x10
6401c367:	je     0x6401c3f8
6401c36d:	mov    ecx,DWORD PTR [esi+0x8]
6401c370:	and    eax,0xfffffffe
6401c373:	mov    DWORD PTR [esi],ecx
6401c375:	mov    DWORD PTR [esi+0xc],eax
6401c378:	mov    eax,DWORD PTR [esi+0xc]
6401c37b:	and    DWORD PTR [esi+0x4],0x0
6401c37f:	and    DWORD PTR [ebp-0x4],0x0
6401c383:	push   ebx
6401c384:	push   0x2
6401c386:	and    eax,0xffffffef
6401c389:	pop    ebx
6401c38a:	or     eax,ebx
6401c38c:	test   ax,0x10c
6401c390:	mov    DWORD PTR [esi+0xc],eax
6401c393:	jne    0x6401c3c1
6401c395:	call   0x6401a8fc
6401c39a:	add    eax,0x20
6401c39d:	cmp    esi,eax
6401c39f:	je     0x6401c3ad
6401c3a1:	call   0x6401a8fc
6401c3a6:	add    eax,0x40
6401c3a9:	cmp    esi,eax
6401c3ab:	jne    0x6401c3ba
6401c3ad:	push   DWORD PTR [ebp+0xc]
6401c3b0:	call   0x6401a89e
6401c3b5:	test   eax,eax
6401c3b7:	pop    ecx
6401c3b8:	jne    0x6401c3c1
6401c3ba:	push   esi
6401c3bb:	call   0x6401a85a
6401c3c0:	pop    ecx
6401c3c1:	test   WORD PTR [esi+0xc],0x108
6401c3c7:	push   edi
6401c3c8:	je     0x6401c451
6401c3ce:	mov    eax,DWORD PTR [esi+0x8]
6401c3d1:	mov    edi,DWORD PTR [esi]
6401c3d3:	lea    ecx,[eax+0x2]
6401c3d6:	mov    DWORD PTR [esi],ecx
6401c3d8:	mov    ecx,DWORD PTR [esi+0x18]
6401c3db:	sub    edi,eax
6401c3dd:	sub    ecx,ebx
6401c3df:	test   edi,edi
6401c3e1:	mov    DWORD PTR [esi+0x4],ecx
6401c3e4:	jle    0x6401c403
6401c3e6:	push   edi
6401c3e7:	push   eax
6401c3e8:	push   DWORD PTR [ebp+0xc]
6401c3eb:	call   0x6401a77e
6401c3f0:	add    esp,0xc
6401c3f3:	mov    DWORD PTR [ebp-0x4],eax
6401c3f6:	jmp    0x6401c446
6401c3f8:	or     eax,0x20
6401c3fb:	mov    DWORD PTR [esi+0xc],eax
6401c3fe:	jmp    0x6401c342
6401c403:	mov    ecx,DWORD PTR [ebp+0xc]
6401c406:	cmp    ecx,0xffffffff
6401c409:	je     0x6401c426
6401c40b:	cmp    ecx,0xfffffffe
6401c40e:	je     0x6401c426
6401c410:	mov    eax,ecx
6401c412:	and    eax,0x1f
6401c415:	mov    edx,ecx
6401c417:	sar    edx,0x5
6401c41a:	shl    eax,0x6
6401c41d:	add    eax,DWORD PTR [edx*4+0x6402e4a0]
6401c424:	jmp    0x6401c42b
6401c426:	mov    eax,0x64029810
6401c42b:	test   BYTE PTR [eax+0x4],0x20
6401c42f:	je     0x6401c446
6401c431:	push   ebx
6401c432:	push   0x0
6401c434:	push   0x0
6401c436:	push   ecx
6401c437:	call   0x6401a043
6401c43c:	and    eax,edx
6401c43e:	add    esp,0x10
6401c441:	cmp    eax,0xffffffff
6401c444:	je     0x6401c473
6401c446:	mov    eax,DWORD PTR [esi+0x8]
6401c449:	mov    ebx,DWORD PTR [ebp+0x8]
6401c44c:	mov    WORD PTR [eax],bx
6401c44f:	jmp    0x6401c46e
6401c451:	push   0x2
6401c453:	lea    eax,[ebp-0x4]
6401c456:	push   eax
6401c457:	push   DWORD PTR [ebp+0xc]
6401c45a:	mov    edi,ebx
6401c45c:	mov    ebx,DWORD PTR [ebp+0x8]
6401c45f:	mov    WORD PTR [ebp-0x4],bx
6401c463:	call   0x6401a77e
6401c468:	add    esp,0xc
6401c46b:	mov    DWORD PTR [ebp-0x4],eax
6401c46e:	cmp    DWORD PTR [ebp-0x4],edi
6401c471:	je     0x6401c47e
6401c473:	or     DWORD PTR [esi+0xc],0x20
6401c477:	mov    eax,0xffff
6401c47c:	jmp    0x6401c485
6401c47e:	mov    eax,ebx
6401c480:	and    eax,0xffff
6401c485:	pop    edi
6401c486:	pop    ebx
6401c487:	pop    esi
6401c488:	leave  
6401c489:	ret    
6401c48a:	push   ebp
6401c48b:	mov    ebp,esp
6401c48d:	sub    esp,0x14
6401c490:	push   esi
6401c491:	push   edi
6401c492:	push   DWORD PTR [ebp+0x8]
6401c495:	lea    ecx,[ebp-0x14]
6401c498:	call   0x64010dc1
6401c49d:	mov    eax,DWORD PTR [ebp+0x10]
6401c4a0:	mov    esi,DWORD PTR [ebp+0xc]
6401c4a3:	xor    edi,edi
6401c4a5:	cmp    eax,edi
6401c4a7:	je     0x6401c4ab
6401c4a9:	mov    DWORD PTR [eax],esi
6401c4ab:	cmp    esi,edi
6401c4ad:	jne    0x6401c4db
6401c4af:	call   0x640129f0
6401c4b4:	push   edi
6401c4b5:	push   edi
6401c4b6:	push   edi
6401c4b7:	push   edi
6401c4b8:	push   edi
6401c4b9:	mov    DWORD PTR [eax],0x16
6401c4bf:	call   0x64010756
6401c4c4:	add    esp,0x14
6401c4c7:	cmp    BYTE PTR [ebp-0x8],0x0
6401c4cb:	je     0x6401c4d4
6401c4cd:	mov    eax,DWORD PTR [ebp-0xc]
6401c4d0:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c4d4:	xor    eax,eax
6401c4d6:	jmp    0x6401c6b1
6401c4db:	cmp    DWORD PTR [ebp+0x14],edi
6401c4de:	je     0x6401c4ec
6401c4e0:	cmp    DWORD PTR [ebp+0x14],0x2
6401c4e4:	jl     0x6401c4af
6401c4e6:	cmp    DWORD PTR [ebp+0x14],0x24
6401c4ea:	jg     0x6401c4af
6401c4ec:	mov    ecx,DWORD PTR [ebp-0x14]
6401c4ef:	push   ebx
6401c4f0:	mov    bl,BYTE PTR [esi]
6401c4f2:	mov    DWORD PTR [ebp-0x4],edi
6401c4f5:	lea    edi,[esi+0x1]
6401c4f8:	cmp    DWORD PTR [ecx+0xac],0x1
6401c4ff:	jle    0x6401c518
6401c501:	lea    eax,[ebp-0x14]
6401c504:	push   eax
6401c505:	movzx  eax,bl
6401c508:	push   0x8
6401c50a:	push   eax
6401c50b:	call   0x64017bea
6401c510:	mov    ecx,DWORD PTR [ebp-0x14]
6401c513:	add    esp,0xc
6401c516:	jmp    0x6401c528
6401c518:	mov    edx,DWORD PTR [ecx+0xc8]
6401c51e:	movzx  eax,bl
6401c521:	movzx  eax,BYTE PTR [edx+eax*2]
6401c525:	and    eax,0x8
6401c528:	test   eax,eax
6401c52a:	je     0x6401c531
6401c52c:	mov    bl,BYTE PTR [edi]
6401c52e:	inc    edi
6401c52f:	jmp    0x6401c4f8
6401c531:	cmp    bl,0x2d
6401c534:	jne    0x6401c53c
6401c536:	or     DWORD PTR [ebp+0x18],0x2
6401c53a:	jmp    0x6401c541
6401c53c:	cmp    bl,0x2b
6401c53f:	jne    0x6401c544
6401c541:	mov    bl,BYTE PTR [edi]
6401c543:	inc    edi
6401c544:	mov    eax,DWORD PTR [ebp+0x14]
6401c547:	test   eax,eax
6401c549:	jl     0x6401c698
6401c54f:	cmp    eax,0x1
6401c552:	je     0x6401c698
6401c558:	cmp    eax,0x24
6401c55b:	jg     0x6401c698
6401c561:	test   eax,eax
6401c563:	jne    0x6401c58f
6401c565:	cmp    bl,0x30
6401c568:	je     0x6401c573
6401c56a:	mov    DWORD PTR [ebp+0x14],0xa
6401c571:	jmp    0x6401c5a7
6401c573:	mov    al,BYTE PTR [edi]
6401c575:	cmp    al,0x78
6401c577:	je     0x6401c586
6401c579:	cmp    al,0x58
6401c57b:	je     0x6401c586
6401c57d:	mov    DWORD PTR [ebp+0x14],0x8
6401c584:	jmp    0x6401c5a7
6401c586:	mov    DWORD PTR [ebp+0x14],0x10
6401c58d:	jmp    0x6401c599
6401c58f:	cmp    eax,0x10
6401c592:	jne    0x6401c5a7
6401c594:	cmp    bl,0x30
6401c597:	jne    0x6401c5a7
6401c599:	mov    al,BYTE PTR [edi]
6401c59b:	cmp    al,0x78
6401c59d:	je     0x6401c5a3
6401c59f:	cmp    al,0x58
6401c5a1:	jne    0x6401c5a7
6401c5a3:	inc    edi
6401c5a4:	mov    bl,BYTE PTR [edi]
6401c5a6:	inc    edi
6401c5a7:	mov    esi,DWORD PTR [ecx+0xc8]
6401c5ad:	or     eax,0xffffffff
6401c5b0:	xor    edx,edx
6401c5b2:	div    DWORD PTR [ebp+0x14]
6401c5b5:	movzx  ecx,bl
6401c5b8:	movzx  ecx,WORD PTR [esi+ecx*2]
6401c5bc:	test   cl,0x4
6401c5bf:	je     0x6401c5c9
6401c5c1:	movsx  ecx,bl
6401c5c4:	sub    ecx,0x30
6401c5c7:	jmp    0x6401c5e3
6401c5c9:	test   cx,0x103
6401c5ce:	je     0x6401c601
6401c5d0:	mov    cl,bl
6401c5d2:	sub    cl,0x61
6401c5d5:	cmp    cl,0x19
6401c5d8:	movsx  ecx,bl
6401c5db:	ja     0x6401c5e0
6401c5dd:	sub    ecx,0x20
6401c5e0:	add    ecx,0xffffffc9
6401c5e3:	cmp    ecx,DWORD PTR [ebp+0x14]
6401c5e6:	jae    0x6401c601
6401c5e8:	or     DWORD PTR [ebp+0x18],0x8
6401c5ec:	cmp    DWORD PTR [ebp-0x4],eax
6401c5ef:	jb     0x6401c618
6401c5f1:	jne    0x6401c5f7
6401c5f3:	cmp    ecx,edx
6401c5f5:	jbe    0x6401c618
6401c5f7:	or     DWORD PTR [ebp+0x18],0x4
6401c5fb:	cmp    DWORD PTR [ebp+0x10],0x0
6401c5ff:	jne    0x6401c624
6401c601:	mov    eax,DWORD PTR [ebp+0x18]
6401c604:	dec    edi
6401c605:	test   al,0x8
6401c607:	jne    0x6401c629
6401c609:	cmp    DWORD PTR [ebp+0x10],0x0
6401c60d:	je     0x6401c612
6401c60f:	mov    edi,DWORD PTR [ebp+0xc]
6401c612:	and    DWORD PTR [ebp-0x4],0x0
6401c616:	jmp    0x6401c674
6401c618:	mov    ebx,DWORD PTR [ebp-0x4]
6401c61b:	imul   ebx,DWORD PTR [ebp+0x14]
6401c61f:	add    ebx,ecx
6401c621:	mov    DWORD PTR [ebp-0x4],ebx
6401c624:	mov    bl,BYTE PTR [edi]
6401c626:	inc    edi
6401c627:	jmp    0x6401c5b5
6401c629:	test   al,0x4
6401c62b:	mov    esi,0x7fffffff
6401c630:	jne    0x6401c64d
6401c632:	test   al,0x1
6401c634:	jne    0x6401c674
6401c636:	and    eax,0x2
6401c639:	je     0x6401c644
6401c63b:	cmp    DWORD PTR [ebp-0x4],0x80000000
6401c642:	ja     0x6401c64d
6401c644:	test   eax,eax
6401c646:	jne    0x6401c674
6401c648:	cmp    DWORD PTR [ebp-0x4],esi
6401c64b:	jbe    0x6401c674
6401c64d:	call   0x640129f0
6401c652:	test   BYTE PTR [ebp+0x18],0x1
6401c656:	mov    DWORD PTR [eax],0x22
6401c65c:	je     0x6401c664
6401c65e:	or     DWORD PTR [ebp-0x4],0xffffffff
6401c662:	jmp    0x6401c674
6401c664:	mov    al,BYTE PTR [ebp+0x18]
6401c667:	and    al,0x2
6401c669:	neg    al
6401c66b:	sbb    eax,eax
6401c66d:	neg    eax
6401c66f:	add    eax,esi
6401c671:	mov    DWORD PTR [ebp-0x4],eax
6401c674:	mov    eax,DWORD PTR [ebp+0x10]
6401c677:	test   eax,eax
6401c679:	je     0x6401c67d
6401c67b:	mov    DWORD PTR [eax],edi
6401c67d:	test   BYTE PTR [ebp+0x18],0x2
6401c681:	je     0x6401c686
6401c683:	neg    DWORD PTR [ebp-0x4]
6401c686:	cmp    BYTE PTR [ebp-0x8],0x0
6401c68a:	je     0x6401c693
6401c68c:	mov    eax,DWORD PTR [ebp-0xc]
6401c68f:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c693:	mov    eax,DWORD PTR [ebp-0x4]
6401c696:	jmp    0x6401c6b0
6401c698:	mov    eax,DWORD PTR [ebp+0x10]
6401c69b:	test   eax,eax
6401c69d:	je     0x6401c6a1
6401c69f:	mov    DWORD PTR [eax],esi
6401c6a1:	cmp    BYTE PTR [ebp-0x8],0x0
6401c6a5:	je     0x6401c6ae
6401c6a7:	mov    eax,DWORD PTR [ebp-0xc]
6401c6aa:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c6ae:	xor    eax,eax
6401c6b0:	pop    ebx
6401c6b1:	pop    edi
6401c6b2:	pop    esi
6401c6b3:	leave  
6401c6b4:	ret    
6401c6b5:	push   ebp
6401c6b6:	mov    ebp,esp
6401c6b8:	xor    eax,eax
6401c6ba:	cmp    DWORD PTR ds:0x6402a8d4,eax
6401c6c0:	push   eax
6401c6c1:	push   DWORD PTR [ebp+0x10]
6401c6c4:	push   DWORD PTR [ebp+0xc]
6401c6c7:	push   DWORD PTR [ebp+0x8]
6401c6ca:	jne    0x6401c6d3
6401c6cc:	push   0x64029808
6401c6d1:	jmp    0x6401c6d4
6401c6d3:	push   eax
6401c6d4:	call   0x6401c48a
6401c6d9:	add    esp,0x14
6401c6dc:	pop    ebp
6401c6dd:	ret    
6401c6de:	int3   
6401c6df:	int3   
6401c6e0:	push   ebp
6401c6e1:	mov    ebp,esp
6401c6e3:	push   edi
6401c6e4:	push   esi
6401c6e5:	push   ebx
6401c6e6:	mov    ecx,DWORD PTR [ebp+0x10]
6401c6e9:	or     ecx,ecx
6401c6eb:	je     0x6401c73a
6401c6ed:	mov    esi,DWORD PTR [ebp+0x8]
6401c6f0:	mov    edi,DWORD PTR [ebp+0xc]
6401c6f3:	mov    bh,0x41
6401c6f5:	mov    bl,0x5a
6401c6f7:	mov    dh,0x20
6401c6f9:	lea    ecx,[ecx+0x0]
6401c6fc:	mov    ah,BYTE PTR [esi]
6401c6fe:	or     ah,ah
6401c700:	mov    al,BYTE PTR [edi]
6401c702:	je     0x6401c72b
6401c704:	or     al,al
6401c706:	je     0x6401c72b
6401c708:	add    esi,0x1
6401c70b:	add    edi,0x1
6401c70e:	cmp    ah,bh
6401c710:	jb     0x6401c718
6401c712:	cmp    ah,bl
6401c714:	ja     0x6401c718
6401c716:	add    ah,dh
6401c718:	cmp    al,bh
6401c71a:	jb     0x6401c722
6401c71c:	cmp    al,bl
6401c71e:	ja     0x6401c722
6401c720:	add    al,dh
6401c722:	cmp    ah,al
6401c724:	jne    0x6401c731
6401c726:	sub    ecx,0x1
6401c729:	jne    0x6401c6fc
6401c72b:	xor    ecx,ecx
6401c72d:	cmp    ah,al
6401c72f:	je     0x6401c73a
6401c731:	mov    ecx,0xffffffff
6401c736:	jb     0x6401c73a
6401c738:	neg    ecx
6401c73a:	mov    eax,ecx
6401c73c:	pop    ebx
6401c73d:	pop    esi
6401c73e:	pop    edi
6401c73f:	leave  
6401c740:	ret    
6401c741:	xor    eax,eax
6401c743:	push   eax
6401c744:	push   eax
6401c745:	push   0x3
6401c747:	push   eax
6401c748:	push   0x3
6401c74a:	push   0x40000000
6401c74f:	push   0x64024494
6401c754:	call   DWORD PTR ds:0x640220b4
6401c75a:	mov    ds:0x64029fb4,eax
6401c75f:	ret    
6401c760:	mov    eax,ds:0x64029fb4
6401c765:	cmp    eax,0xffffffff
6401c768:	push   esi
6401c769:	mov    esi,DWORD PTR ds:0x64022040
6401c76f:	je     0x6401c779
6401c771:	cmp    eax,0xfffffffe
6401c774:	je     0x6401c779
6401c776:	push   eax
6401c777:	call   esi
6401c779:	mov    eax,ds:0x64029fb0
6401c77e:	cmp    eax,0xffffffff
6401c781:	je     0x6401c78b
6401c783:	cmp    eax,0xfffffffe
6401c786:	je     0x6401c78b
6401c788:	push   eax
6401c789:	call   esi
6401c78b:	pop    esi
6401c78c:	ret    
6401c78d:	push   ebx
6401c78e:	push   esi
6401c78f:	mov    esi,DWORD PTR [esp+0xc]
6401c793:	push   edi
6401c794:	xor    edi,edi
6401c796:	or     ebx,0xffffffff
6401c799:	cmp    esi,edi
6401c79b:	jne    0x6401c7b9
6401c79d:	call   0x640129f0
6401c7a2:	push   edi
6401c7a3:	push   edi
6401c7a4:	push   edi
6401c7a5:	push   edi
6401c7a6:	push   edi
6401c7a7:	mov    DWORD PTR [eax],0x16
6401c7ad:	call   0x64010756
6401c7b2:	add    esp,0x14
6401c7b5:	or     eax,ebx
6401c7b7:	jmp    0x6401c7fb
6401c7b9:	test   BYTE PTR [esi+0xc],0x83
6401c7bd:	je     0x6401c7f6
6401c7bf:	push   esi
6401c7c0:	call   0x6401c193
6401c7c5:	push   esi
6401c7c6:	mov    ebx,eax
6401c7c8:	call   0x6401cada
6401c7cd:	push   esi
6401c7ce:	call   0x6401aa9d
6401c7d3:	push   eax
6401c7d4:	call   0x6401ca0d
6401c7d9:	add    esp,0x10
6401c7dc:	test   eax,eax
6401c7de:	jge    0x6401c7e5
6401c7e0:	or     ebx,0xffffffff
6401c7e3:	jmp    0x6401c7f6
6401c7e5:	mov    eax,DWORD PTR [esi+0x1c]
6401c7e8:	cmp    eax,edi
6401c7ea:	je     0x6401c7f6
6401c7ec:	push   eax
6401c7ed:	call   0x64011ab6
6401c7f2:	pop    ecx
6401c7f3:	mov    DWORD PTR [esi+0x1c],edi
6401c7f6:	mov    DWORD PTR [esi+0xc],edi
6401c7f9:	mov    eax,ebx
6401c7fb:	pop    edi
6401c7fc:	pop    esi
6401c7fd:	pop    ebx
6401c7fe:	ret    
6401c7ff:	push   0xc
6401c801:	push   0x64026d48
6401c806:	call   0x64011fc8
6401c80b:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401c80f:	xor    eax,eax
6401c811:	mov    esi,DWORD PTR [ebp+0x8]
6401c814:	xor    edi,edi
6401c816:	cmp    esi,edi
6401c818:	setne  al
6401c81b:	cmp    eax,edi
6401c81d:	jne    0x6401c83c
6401c81f:	call   0x640129f0
6401c824:	mov    DWORD PTR [eax],0x16
6401c82a:	push   edi
6401c82b:	push   edi
6401c82c:	push   edi
6401c82d:	push   edi
6401c82e:	push   edi
6401c82f:	call   0x64010756
6401c834:	add    esp,0x14
6401c837:	or     eax,0xffffffff
6401c83a:	jmp    0x6401c848
6401c83c:	test   BYTE PTR [esi+0xc],0x40
6401c840:	je     0x6401c84e
6401c842:	mov    DWORD PTR [esi+0xc],edi
6401c845:	mov    eax,DWORD PTR [ebp-0x1c]
6401c848:	call   0x6401200d
6401c84d:	ret    
6401c84e:	push   esi
6401c84f:	call   0x6401a9d3
6401c854:	pop    ecx
6401c855:	mov    DWORD PTR [ebp-0x4],edi
6401c858:	push   esi
6401c859:	call   0x6401c78d
6401c85e:	pop    ecx
6401c85f:	mov    DWORD PTR [ebp-0x1c],eax
6401c862:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c869:	call   0x6401c873
6401c86e:	jmp    0x6401c845
6401c870:	mov    esi,DWORD PTR [ebp+0x8]
6401c873:	push   esi
6401c874:	call   0x6401aa3d
6401c879:	pop    ecx
6401c87a:	ret    
6401c87b:	push   0x10
6401c87d:	push   0x64026d68
6401c882:	call   0x64011fc8
6401c887:	mov    eax,DWORD PTR [ebp+0x8]
6401c88a:	cmp    eax,0xfffffffe
6401c88d:	jne    0x6401c8a2
6401c88f:	call   0x640129f0
6401c894:	mov    DWORD PTR [eax],0x9
6401c89a:	or     eax,0xffffffff
6401c89d:	jmp    0x6401c94c
6401c8a2:	xor    ebx,ebx
6401c8a4:	cmp    eax,ebx
6401c8a6:	jl     0x6401c8b0
6401c8a8:	cmp    eax,DWORD PTR ds:0x6402e480
6401c8ae:	jb     0x6401c8ca
6401c8b0:	call   0x640129f0
6401c8b5:	mov    DWORD PTR [eax],0x9
6401c8bb:	push   ebx
6401c8bc:	push   ebx
6401c8bd:	push   ebx
6401c8be:	push   ebx
6401c8bf:	push   ebx
6401c8c0:	call   0x64010756
6401c8c5:	add    esp,0x14
6401c8c8:	jmp    0x6401c89a
6401c8ca:	mov    ecx,eax
6401c8cc:	sar    ecx,0x5
6401c8cf:	lea    edi,[ecx*4+0x6402e4a0]
6401c8d6:	mov    esi,eax
6401c8d8:	and    esi,0x1f
6401c8db:	shl    esi,0x6
6401c8de:	mov    ecx,DWORD PTR [edi]
6401c8e0:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6401c8e5:	and    ecx,0x1
6401c8e8:	je     0x6401c8b0
6401c8ea:	push   eax
6401c8eb:	call   0x6401bf70
6401c8f0:	pop    ecx
6401c8f1:	mov    DWORD PTR [ebp-0x4],ebx
6401c8f4:	mov    eax,DWORD PTR [edi]
6401c8f6:	test   BYTE PTR [esi+eax*1+0x4],0x1
6401c8fb:	je     0x6401c92e
6401c8fd:	push   DWORD PTR [ebp+0x8]
6401c900:	call   0x6401beff
6401c905:	pop    ecx
6401c906:	push   eax
6401c907:	call   DWORD PTR ds:0x640220b8
6401c90d:	test   eax,eax
6401c90f:	jne    0x6401c91c
6401c911:	call   DWORD PTR ds:0x64022044
6401c917:	mov    DWORD PTR [ebp-0x1c],eax
6401c91a:	jmp    0x6401c91f
6401c91c:	mov    DWORD PTR [ebp-0x1c],ebx
6401c91f:	cmp    DWORD PTR [ebp-0x1c],ebx
6401c922:	je     0x6401c93d
6401c924:	call   0x64012a03
6401c929:	mov    ecx,DWORD PTR [ebp-0x1c]
6401c92c:	mov    DWORD PTR [eax],ecx
6401c92e:	call   0x640129f0
6401c933:	mov    DWORD PTR [eax],0x9
6401c939:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401c93d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c944:	call   0x6401c952
6401c949:	mov    eax,DWORD PTR [ebp-0x1c]
6401c94c:	call   0x6401200d
6401c951:	ret    
6401c952:	push   DWORD PTR [ebp+0x8]
6401c955:	call   0x6401c010
6401c95a:	pop    ecx
6401c95b:	ret    
6401c95c:	xor    eax,eax
6401c95e:	cmp    DWORD PTR [esp+0x8],eax
6401c962:	jbe    0x6401c975
6401c964:	mov    ecx,DWORD PTR [esp+0x4]
6401c968:	cmp    BYTE PTR [ecx],0x0
6401c96b:	je     0x6401c975
6401c96d:	inc    eax
6401c96e:	inc    ecx
6401c96f:	cmp    eax,DWORD PTR [esp+0x8]
6401c973:	jb     0x6401c968
6401c975:	ret    
6401c976:	push   esi
6401c977:	mov    esi,DWORD PTR [esp+0x8]
6401c97b:	push   edi
6401c97c:	push   esi
6401c97d:	call   0x6401beff
6401c982:	cmp    eax,0xffffffff
6401c985:	pop    ecx
6401c986:	je     0x6401c9d8
6401c988:	cmp    esi,0x1
6401c98b:	mov    eax,ds:0x6402e4a0
6401c990:	jne    0x6401c99b
6401c992:	test   BYTE PTR [eax+0x84],0x1
6401c999:	jne    0x6401c9a6
6401c99b:	cmp    esi,0x2
6401c99e:	jne    0x6401c9bc
6401c9a0:	test   BYTE PTR [eax+0x44],0x1
6401c9a4:	je     0x6401c9bc
6401c9a6:	push   0x2
6401c9a8:	call   0x6401beff
6401c9ad:	push   0x1
6401c9af:	mov    edi,eax
6401c9b1:	call   0x6401beff
6401c9b6:	cmp    eax,edi
6401c9b8:	pop    ecx
6401c9b9:	pop    ecx
6401c9ba:	je     0x6401c9d8
6401c9bc:	push   esi
6401c9bd:	call   0x6401beff
6401c9c2:	pop    ecx
6401c9c3:	push   eax
6401c9c4:	call   DWORD PTR ds:0x64022040
6401c9ca:	test   eax,eax
6401c9cc:	jne    0x6401c9d8
6401c9ce:	call   DWORD PTR ds:0x64022044
6401c9d4:	mov    edi,eax
6401c9d6:	jmp    0x6401c9da
6401c9d8:	xor    edi,edi
6401c9da:	push   esi
6401c9db:	call   0x6401be7e
6401c9e0:	mov    eax,esi
6401c9e2:	sar    eax,0x5
6401c9e5:	mov    eax,DWORD PTR [eax*4+0x6402e4a0]
6401c9ec:	and    esi,0x1f
6401c9ef:	shl    esi,0x6
6401c9f2:	test   edi,edi
6401c9f4:	pop    ecx
6401c9f5:	mov    BYTE PTR [eax+esi*1+0x4],0x0
6401c9fa:	je     0x6401ca08
6401c9fc:	push   edi
6401c9fd:	call   0x64012a16
6401ca02:	pop    ecx
6401ca03:	or     eax,0xffffffff
6401ca06:	jmp    0x6401ca0a
6401ca08:	xor    eax,eax
6401ca0a:	pop    edi
6401ca0b:	pop    esi
6401ca0c:	ret    
6401ca0d:	push   0x10
6401ca0f:	push   0x64026d88
6401ca14:	call   0x64011fc8
6401ca19:	mov    eax,DWORD PTR [ebp+0x8]
6401ca1c:	cmp    eax,0xfffffffe
6401ca1f:	jne    0x6401ca3c
6401ca21:	call   0x64012a03
6401ca26:	and    DWORD PTR [eax],0x0
6401ca29:	call   0x640129f0
6401ca2e:	mov    DWORD PTR [eax],0x9
6401ca34:	or     eax,0xffffffff
6401ca37:	jmp    0x6401caca
6401ca3c:	xor    edi,edi
6401ca3e:	cmp    eax,edi
6401ca40:	jl     0x6401ca4a
6401ca42:	cmp    eax,DWORD PTR ds:0x6402e480
6401ca48:	jb     0x6401ca6b
6401ca4a:	call   0x64012a03
6401ca4f:	mov    DWORD PTR [eax],edi
6401ca51:	call   0x640129f0
6401ca56:	mov    DWORD PTR [eax],0x9
6401ca5c:	push   edi
6401ca5d:	push   edi
6401ca5e:	push   edi
6401ca5f:	push   edi
6401ca60:	push   edi
6401ca61:	call   0x64010756
6401ca66:	add    esp,0x14
6401ca69:	jmp    0x6401ca34
6401ca6b:	mov    ecx,eax
6401ca6d:	sar    ecx,0x5
6401ca70:	lea    ebx,[ecx*4+0x6402e4a0]
6401ca77:	mov    esi,eax
6401ca79:	and    esi,0x1f
6401ca7c:	shl    esi,0x6
6401ca7f:	mov    ecx,DWORD PTR [ebx]
6401ca81:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401ca86:	and    ecx,0x1
6401ca89:	je     0x6401ca4a
6401ca8b:	push   eax
6401ca8c:	call   0x6401bf70
6401ca91:	pop    ecx
6401ca92:	mov    DWORD PTR [ebp-0x4],edi
6401ca95:	mov    eax,DWORD PTR [ebx]
6401ca97:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401ca9c:	je     0x6401caac
6401ca9e:	push   DWORD PTR [ebp+0x8]
6401caa1:	call   0x6401c976
6401caa6:	pop    ecx
6401caa7:	mov    DWORD PTR [ebp-0x1c],eax
6401caaa:	jmp    0x6401cabb
6401caac:	call   0x640129f0
6401cab1:	mov    DWORD PTR [eax],0x9
6401cab7:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401cabb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401cac2:	call   0x6401cad0
6401cac7:	mov    eax,DWORD PTR [ebp-0x1c]
6401caca:	call   0x6401200d
6401cacf:	ret    
6401cad0:	push   DWORD PTR [ebp+0x8]
6401cad3:	call   0x6401c010
6401cad8:	pop    ecx
6401cad9:	ret    
6401cada:	push   esi
6401cadb:	mov    esi,DWORD PTR [esp+0x8]
6401cadf:	mov    eax,DWORD PTR [esi+0xc]
6401cae2:	test   al,0x83
6401cae4:	je     0x6401cb04
6401cae6:	test   al,0x8
6401cae8:	je     0x6401cb04
6401caea:	push   DWORD PTR [esi+0x8]
6401caed:	call   0x64011ab6
6401caf2:	and    DWORD PTR [esi+0xc],0xfffffbf7
6401caf9:	xor    eax,eax
6401cafb:	pop    ecx
6401cafc:	mov    DWORD PTR [esi],eax
6401cafe:	mov    DWORD PTR [esi+0x8],eax
6401cb01:	mov    DWORD PTR [esi+0x4],eax
6401cb04:	pop    esi
6401cb05:	ret    
6401cb06:	int3   
6401cb07:	int3   
6401cb08:	int3   
6401cb09:	int3   
6401cb0a:	int3   
6401cb0b:	int3   
6401cb0c:	int3   
6401cb0d:	int3   
6401cb0e:	int3   
6401cb0f:	int3   
6401cb10:	lea    eax,[edx-0x1]
6401cb13:	pop    ebx
6401cb14:	ret    
6401cb15:	lea    esp,[esp+0x0]
6401cb1c:	lea    esp,[esp+0x0]
6401cb20:	xor    eax,eax
6401cb22:	mov    al,BYTE PTR [esp+0x8]
6401cb26:	push   ebx
6401cb27:	mov    ebx,eax
6401cb29:	shl    eax,0x8
6401cb2c:	mov    edx,DWORD PTR [esp+0x8]
6401cb30:	test   edx,0x3
6401cb36:	je     0x6401cb4d
6401cb38:	mov    cl,BYTE PTR [edx]
6401cb3a:	add    edx,0x1
6401cb3d:	cmp    cl,bl
6401cb3f:	je     0x6401cb10
6401cb41:	test   cl,cl
6401cb43:	je     0x6401cb96
6401cb45:	test   edx,0x3
6401cb4b:	jne    0x6401cb38
6401cb4d:	or     ebx,eax
6401cb4f:	push   edi
6401cb50:	mov    eax,ebx
6401cb52:	shl    ebx,0x10
6401cb55:	push   esi
6401cb56:	or     ebx,eax
6401cb58:	mov    ecx,DWORD PTR [edx]
6401cb5a:	mov    edi,0x7efefeff
6401cb5f:	mov    eax,ecx
6401cb61:	mov    esi,edi
6401cb63:	xor    ecx,ebx
6401cb65:	add    esi,eax
6401cb67:	add    edi,ecx
6401cb69:	xor    ecx,0xffffffff
6401cb6c:	xor    eax,0xffffffff
6401cb6f:	xor    ecx,edi
6401cb71:	xor    eax,esi
6401cb73:	add    edx,0x4
6401cb76:	and    ecx,0x81010100
6401cb7c:	jne    0x6401cb9a
6401cb7e:	and    eax,0x81010100
6401cb83:	je     0x6401cb58
6401cb85:	and    eax,0x1010100
6401cb8a:	jne    0x6401cb94
6401cb8c:	and    esi,0x80000000
6401cb92:	jne    0x6401cb58
6401cb94:	pop    esi
6401cb95:	pop    edi
6401cb96:	pop    ebx
6401cb97:	xor    eax,eax
6401cb99:	ret    
6401cb9a:	mov    eax,DWORD PTR [edx-0x4]
6401cb9d:	cmp    al,bl
6401cb9f:	je     0x6401cbd7
6401cba1:	test   al,al
6401cba3:	je     0x6401cb94
6401cba5:	cmp    ah,bl
6401cba7:	je     0x6401cbd0
6401cba9:	test   ah,ah
6401cbab:	je     0x6401cb94
6401cbad:	shr    eax,0x10
6401cbb0:	cmp    al,bl
6401cbb2:	je     0x6401cbc9
6401cbb4:	test   al,al
6401cbb6:	je     0x6401cb94
6401cbb8:	cmp    ah,bl
6401cbba:	je     0x6401cbc2
6401cbbc:	test   ah,ah
6401cbbe:	je     0x6401cb94
6401cbc0:	jmp    0x6401cb58
6401cbc2:	pop    esi
6401cbc3:	pop    edi
6401cbc4:	lea    eax,[edx-0x1]
6401cbc7:	pop    ebx
6401cbc8:	ret    
6401cbc9:	lea    eax,[edx-0x2]
6401cbcc:	pop    esi
6401cbcd:	pop    edi
6401cbce:	pop    ebx
6401cbcf:	ret    
6401cbd0:	lea    eax,[edx-0x3]
6401cbd3:	pop    esi
6401cbd4:	pop    edi
6401cbd5:	pop    ebx
6401cbd6:	ret    
6401cbd7:	lea    eax,[edx-0x4]
6401cbda:	pop    esi
6401cbdb:	pop    edi
6401cbdc:	pop    ebx
6401cbdd:	ret    
6401cbde:	int3   
6401cbdf:	int3   
6401cbe0:	mov    eax,DWORD PTR [esp+0x4]
6401cbe4:	push   0x0
6401cbe6:	push   eax
6401cbe7:	call   DWORD PTR ds:0x64029fc0
6401cbed:	ret    0x4
6401cbf0:	push   ebp
6401cbf1:	mov    ebp,esp
6401cbf3:	push   0xfffffffe
6401cbf5:	push   0x64026da8
6401cbfa:	push   0x64012030
6401cbff:	mov    eax,fs:0x0
6401cc05:	push   eax
6401cc06:	sub    esp,0x18
6401cc09:	mov    eax,ds:0x64029038
6401cc0e:	xor    DWORD PTR [ebp-0x8],eax
6401cc11:	xor    eax,ebp
6401cc13:	mov    DWORD PTR [ebp-0x1c],eax
6401cc16:	push   ebx
6401cc17:	push   esi
6401cc18:	push   edi
6401cc19:	push   eax
6401cc1a:	lea    eax,[ebp-0x10]
6401cc1d:	mov    fs:0x0,eax
6401cc23:	mov    DWORD PTR [ebp-0x18],esp
6401cc26:	mov    esi,DWORD PTR [ebp+0x8]
6401cc29:	test   esi,esi
6401cc2b:	je     0x6401cc82
6401cc2d:	push   esi
6401cc2e:	call   DWORD PTR ds:0x6402208c
6401cc34:	mov    edi,eax
6401cc36:	add    edi,0x1
6401cc39:	mov    DWORD PTR [ebp-0x20],edi
6401cc3c:	push   0x0
6401cc3e:	push   0x0
6401cc40:	push   edi
6401cc41:	push   esi
6401cc42:	push   0x0
6401cc44:	push   0x0
6401cc46:	call   DWORD PTR ds:0x6402203c
6401cc4c:	mov    esi,eax
6401cc4e:	mov    DWORD PTR [ebp-0x28],esi
6401cc51:	test   esi,esi
6401cc53:	jne    0x6401cc89
6401cc55:	mov    esi,DWORD PTR ds:0x64022044
6401cc5b:	call   esi
6401cc5d:	test   eax,eax
6401cc5f:	jg     0x6401cc70
6401cc61:	call   esi
6401cc63:	push   eax
6401cc64:	call   0x6401cbe0
6401cc69:	xor    eax,eax
6401cc6b:	jmp    0x6401cd50
6401cc70:	call   esi
6401cc72:	and    eax,0xffff
6401cc77:	or     eax,0x80070000
6401cc7c:	push   eax
6401cc7d:	call   0x6401cbe0
6401cc82:	xor    eax,eax
6401cc84:	jmp    0x6401cd50
6401cc89:	mov    DWORD PTR [ebp-0x4],0x0
6401cc90:	lea    eax,[esi+esi*1]
6401cc93:	cmp    esi,0x1000
6401cc99:	jge    0x6401ccb3
6401cc9b:	call   0x640113a0
6401cca0:	mov    DWORD PTR [ebp-0x18],esp
6401cca3:	mov    eax,esp
6401cca5:	mov    ebx,eax
6401cca7:	mov    DWORD PTR [ebp-0x24],ebx
6401ccaa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ccb1:	jmp    0x6401cce5
6401ccb3:	push   eax
6401ccb4:	call   0x64011b93
6401ccb9:	add    esp,0x4
6401ccbc:	mov    ebx,eax
6401ccbe:	mov    DWORD PTR [ebp-0x24],ebx
6401ccc1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ccc8:	jmp    0x6401cce5
6401ccca:	mov    eax,0x1
6401cccf:	ret    
6401ccd0:	mov    esp,DWORD PTR [ebp-0x18]
6401ccd3:	xor    ebx,ebx
6401ccd5:	mov    DWORD PTR [ebp-0x24],ebx
6401ccd8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ccdf:	mov    edi,DWORD PTR [ebp-0x20]
6401cce2:	mov    esi,DWORD PTR [ebp-0x28]
6401cce5:	test   ebx,ebx
6401cce7:	jne    0x6401ccf7
6401cce9:	push   0x8007000e
6401ccee:	call   0x6401cbe0
6401ccf3:	xor    eax,eax
6401ccf5:	jmp    0x6401cd50
6401ccf7:	push   esi
6401ccf8:	push   ebx
6401ccf9:	push   edi
6401ccfa:	mov    ecx,DWORD PTR [ebp+0x8]
6401ccfd:	push   ecx
6401ccfe:	push   0x0
6401cd00:	push   0x0
6401cd02:	call   DWORD PTR ds:0x6402203c
6401cd08:	test   eax,eax
6401cd0a:	jne    0x6401cd26
6401cd0c:	cmp    esi,0x1000
6401cd12:	jl     0x6401cc55
6401cd18:	push   ebx
6401cd19:	call   0x64011ab6
6401cd1e:	add    esp,0x4
6401cd21:	jmp    0x6401cc55
6401cd26:	push   ebx
6401cd27:	call   DWORD PTR ds:0x64022198
6401cd2d:	mov    edi,eax
6401cd2f:	cmp    esi,0x1000
6401cd35:	jl     0x6401cd40
6401cd37:	push   ebx
6401cd38:	call   0x64011ab6
6401cd3d:	add    esp,0x4
6401cd40:	test   edi,edi
6401cd42:	jne    0x6401cd4e
6401cd44:	push   0x8007000e
6401cd49:	call   0x6401cbe0
6401cd4e:	mov    eax,edi
6401cd50:	lea    esp,[ebp-0x38]
6401cd53:	mov    ecx,DWORD PTR [ebp-0x10]
6401cd56:	mov    DWORD PTR fs:0x0,ecx
6401cd5d:	pop    ecx
6401cd5e:	pop    edi
6401cd5f:	pop    esi
6401cd60:	pop    ebx
6401cd61:	mov    ecx,DWORD PTR [ebp-0x1c]
6401cd64:	xor    ecx,ebp
6401cd66:	call   0x64010c1e
6401cd6b:	mov    esp,ebp
6401cd6d:	pop    ebp
6401cd6e:	ret    0x4
6401cd71:	int3   
6401cd72:	int3   
6401cd73:	int3   
6401cd74:	int3   
6401cd75:	int3   
6401cd76:	int3   
6401cd77:	int3   
6401cd78:	int3   
6401cd79:	int3   
6401cd7a:	int3   
6401cd7b:	int3   
6401cd7c:	int3   
6401cd7d:	int3   
6401cd7e:	int3   
6401cd7f:	int3   
6401cd80:	push   esi
6401cd81:	mov    esi,ecx
6401cd83:	mov    eax,DWORD PTR [esi+0x8]
6401cd86:	test   eax,eax
6401cd88:	mov    DWORD PTR [esi],0x640244a0
6401cd8e:	je     0x6401cd98
6401cd90:	mov    ecx,DWORD PTR [eax]
6401cd92:	mov    edx,DWORD PTR [ecx+0x8]
6401cd95:	push   eax
6401cd96:	call   edx
6401cd98:	cmp    DWORD PTR [esi+0xc],0x0
6401cd9c:	je     0x6401cdb5
6401cd9e:	call   DWORD PTR ds:0x64022110
6401cda4:	test   eax,eax
6401cda6:	je     0x6401cdb5
6401cda8:	mov    ecx,DWORD PTR [esi+0xc]
6401cdab:	push   ecx
6401cdac:	push   0x0
6401cdae:	push   eax
6401cdaf:	call   DWORD PTR ds:0x64022104
6401cdb5:	pop    esi
6401cdb6:	ret    
6401cdb7:	int3   
6401cdb8:	int3   
6401cdb9:	int3   
6401cdba:	int3   
6401cdbb:	int3   
6401cdbc:	int3   
6401cdbd:	int3   
6401cdbe:	int3   
6401cdbf:	int3   
6401cdc0:	sub    esp,0x10
6401cdc3:	mov    eax,DWORD PTR [esp+0x14]
6401cdc7:	mov    ecx,DWORD PTR [esp+0x18]
6401cdcb:	push   0x64026dc4
6401cdd0:	lea    edx,[esp+0x4]
6401cdd4:	push   edx
6401cdd5:	mov    DWORD PTR [esp+0x8],0x640244a0
6401cddd:	mov    DWORD PTR [esp+0xc],eax
6401cde1:	mov    DWORD PTR [esp+0x10],ecx
6401cde5:	mov    DWORD PTR [esp+0x14],0x0
6401cded:	call   0x6401080d
6401cdf2:	int3   
6401cdf3:	int3   
6401cdf4:	int3   
6401cdf5:	int3   
6401cdf6:	int3   
6401cdf7:	int3   
6401cdf8:	int3   
6401cdf9:	int3   
6401cdfa:	int3   
6401cdfb:	int3   
6401cdfc:	int3   
6401cdfd:	int3   
6401cdfe:	int3   
6401cdff:	int3   
6401ce00:	mov    eax,DWORD PTR [esp+0x4]
6401ce04:	push   esi
6401ce05:	mov    esi,ecx
6401ce07:	mov    DWORD PTR [esi],0x640244a0
6401ce0d:	mov    ecx,DWORD PTR [eax+0x4]
6401ce10:	mov    DWORD PTR [esi+0x4],ecx
6401ce13:	mov    edx,DWORD PTR [eax+0x8]
6401ce16:	mov    eax,edx
6401ce18:	test   eax,eax
6401ce1a:	mov    DWORD PTR [esi+0x8],edx
6401ce1d:	mov    DWORD PTR [esi+0xc],0x0
6401ce24:	je     0x6401ce2e
6401ce26:	mov    ecx,DWORD PTR [eax]
6401ce28:	mov    edx,DWORD PTR [ecx+0x4]
6401ce2b:	push   eax
6401ce2c:	call   edx
6401ce2e:	mov    eax,esi
6401ce30:	pop    esi
6401ce31:	ret    0x4
6401ce34:	int3   
6401ce35:	int3   
6401ce36:	int3   
6401ce37:	int3   
6401ce38:	int3   
6401ce39:	int3   
6401ce3a:	int3   
6401ce3b:	int3   
6401ce3c:	int3   
6401ce3d:	int3   
6401ce3e:	int3   
6401ce3f:	int3   
6401ce40:	push   esi
6401ce41:	mov    esi,ecx
6401ce43:	mov    eax,DWORD PTR [esi+0x8]
6401ce46:	test   eax,eax
6401ce48:	mov    DWORD PTR [esi],0x640244a0
6401ce4e:	je     0x6401ce58
6401ce50:	mov    ecx,DWORD PTR [eax]
6401ce52:	mov    edx,DWORD PTR [ecx+0x8]
6401ce55:	push   eax
6401ce56:	call   edx
6401ce58:	cmp    DWORD PTR [esi+0xc],0x0
6401ce5c:	je     0x6401ce75
6401ce5e:	call   DWORD PTR ds:0x64022110
6401ce64:	test   eax,eax
6401ce66:	je     0x6401ce75
6401ce68:	mov    ecx,DWORD PTR [esi+0xc]
6401ce6b:	push   ecx
6401ce6c:	push   0x0
6401ce6e:	push   eax
6401ce6f:	call   DWORD PTR ds:0x64022104
6401ce75:	test   BYTE PTR [esp+0x8],0x1
6401ce7a:	je     0x6401ce85
6401ce7c:	push   esi
6401ce7d:	call   0x64010422
6401ce82:	add    esp,0x4
6401ce85:	mov    eax,esi
6401ce87:	pop    esi
6401ce88:	ret    0x4
6401ce8b:	int3   
6401ce8c:	jmp    DWORD PTR ds:0x64022124
6401ce92:	push   ebp
6401ce93:	mov    ebp,esp
6401ce95:	sub    esp,0xc
6401ce98:	mov    eax,ds:0x64029038
6401ce9d:	xor    eax,ebp
6401ce9f:	mov    DWORD PTR [ebp-0x4],eax
6401cea2:	push   ebx
6401cea3:	push   esi
6401cea4:	push   edi
6401cea5:	mov    edi,DWORD PTR [ebp+0x8]
6401cea8:	xor    ebx,ebx
6401ceaa:	cmp    edi,ebx
6401ceac:	jne    0x6401ceca
6401ceae:	call   0x640129f0
6401ceb3:	push   0x16
6401ceb5:	pop    esi
6401ceb6:	push   ebx
6401ceb7:	push   ebx
6401ceb8:	push   ebx
6401ceb9:	push   ebx
6401ceba:	push   ebx
6401cebb:	mov    DWORD PTR [eax],esi
6401cebd:	call   0x64010756
6401cec2:	add    esp,0x14
6401cec5:	jmp    0x6401cfff
6401ceca:	push   DWORD PTR [ebp+0xc]
6401cecd:	push   edi
6401cece:	call   0x6401c95c
6401ced3:	cmp    eax,DWORD PTR [ebp+0xc]
6401ced6:	pop    ecx
6401ced7:	pop    ecx
6401ced8:	jb     0x6401cede
6401ceda:	mov    BYTE PTR [edi],bl
6401cedc:	jmp    0x6401ceae
6401cede:	mov    edx,DWORD PTR [ebp+0x10]
6401cee1:	mov    eax,DWORD PTR [edx]
6401cee3:	mov    ecx,DWORD PTR [eax+0x14]
6401cee6:	cmp    ecx,ebx
6401cee8:	jne    0x6401cf0a
6401ceea:	cmp    BYTE PTR [edi],bl
6401ceec:	mov    ecx,edi
6401ceee:	je     0x6401cf03
6401cef0:	mov    al,BYTE PTR [ecx]
6401cef2:	cmp    al,0x41
6401cef4:	jl     0x6401cefe
6401cef6:	cmp    al,0x5a
6401cef8:	jg     0x6401cefe
6401cefa:	add    al,0x20
6401cefc:	mov    BYTE PTR [ecx],al
6401cefe:	inc    ecx
6401ceff:	cmp    BYTE PTR [ecx],bl
6401cf01:	jne    0x6401cef0
6401cf03:	xor    eax,eax
6401cf05:	jmp    0x6401d001
6401cf0a:	push   0x1
6401cf0c:	push   DWORD PTR [eax+0x4]
6401cf0f:	mov    esi,0x100
6401cf14:	push   ebx
6401cf15:	push   ebx
6401cf16:	push   0xffffffff
6401cf18:	push   edi
6401cf19:	push   esi
6401cf1a:	push   ecx
6401cf1b:	push   edx
6401cf1c:	call   0x64018042
6401cf21:	mov    ecx,eax
6401cf23:	add    esp,0x24
6401cf26:	cmp    ecx,ebx
6401cf28:	mov    DWORD PTR [ebp-0xc],ecx
6401cf2b:	jne    0x6401cf44
6401cf2d:	call   0x640129f0
6401cf32:	mov    DWORD PTR [eax],0x2a
6401cf38:	call   0x640129f0
6401cf3d:	mov    eax,DWORD PTR [eax]
6401cf3f:	jmp    0x6401d001
6401cf44:	cmp    DWORD PTR [ebp+0xc],ecx
6401cf47:	jae    0x6401cf57
6401cf49:	mov    BYTE PTR [edi],bl
6401cf4b:	call   0x640129f0
6401cf50:	push   0x22
6401cf52:	jmp    0x6401ceb5
6401cf57:	cmp    ecx,ebx
6401cf59:	jle    0x6401cfa0
6401cf5b:	push   0xffffffe0
6401cf5d:	xor    edx,edx
6401cf5f:	pop    eax
6401cf60:	div    ecx
6401cf62:	cmp    eax,0x1
6401cf65:	jb     0x6401cfa0
6401cf67:	lea    eax,[ecx+0x8]
6401cf6a:	cmp    eax,0x400
6401cf6f:	ja     0x6401cf84
6401cf71:	call   0x640113a0
6401cf76:	mov    eax,esp
6401cf78:	cmp    eax,ebx
6401cf7a:	je     0x6401cf98
6401cf7c:	mov    DWORD PTR [eax],0xcccc
6401cf82:	jmp    0x6401cf95
6401cf84:	push   eax
6401cf85:	call   0x64011b93
6401cf8a:	cmp    eax,ebx
6401cf8c:	pop    ecx
6401cf8d:	je     0x6401cf98
6401cf8f:	mov    DWORD PTR [eax],0xdddd
6401cf95:	add    eax,0x8
6401cf98:	mov    ecx,DWORD PTR [ebp-0xc]
6401cf9b:	mov    DWORD PTR [ebp-0x8],eax
6401cf9e:	jmp    0x6401cfa3
6401cfa0:	mov    DWORD PTR [ebp-0x8],ebx
6401cfa3:	cmp    DWORD PTR [ebp-0x8],ebx
6401cfa6:	jne    0x6401cfb5
6401cfa8:	call   0x640129f0
6401cfad:	mov    DWORD PTR [eax],0xc
6401cfb3:	jmp    0x6401cf38
6401cfb5:	mov    edx,DWORD PTR [ebp+0x10]
6401cfb8:	mov    eax,DWORD PTR [edx]
6401cfba:	push   0x1
6401cfbc:	push   DWORD PTR [eax+0x4]
6401cfbf:	push   ecx
6401cfc0:	push   DWORD PTR [ebp-0x8]
6401cfc3:	push   0xffffffff
6401cfc5:	push   edi
6401cfc6:	push   esi
6401cfc7:	push   DWORD PTR [eax+0x14]
6401cfca:	push   edx
6401cfcb:	call   0x64018042
6401cfd0:	add    esp,0x24
6401cfd3:	test   eax,eax
6401cfd5:	je     0x6401cfea
6401cfd7:	push   DWORD PTR [ebp-0x8]
6401cfda:	push   DWORD PTR [ebp+0xc]
6401cfdd:	push   edi
6401cfde:	call   0x640125e8
6401cfe3:	add    esp,0xc
6401cfe6:	mov    esi,eax
6401cfe8:	jmp    0x6401cff6
6401cfea:	call   0x640129f0
6401cfef:	push   0x2a
6401cff1:	pop    ecx
6401cff2:	mov    DWORD PTR [eax],ecx
6401cff4:	mov    esi,ecx
6401cff6:	push   DWORD PTR [ebp-0x8]
6401cff9:	call   0x6401112e
6401cffe:	pop    ecx
6401cfff:	mov    eax,esi
6401d001:	lea    esp,[ebp-0x18]
6401d004:	pop    edi
6401d005:	pop    esi
6401d006:	pop    ebx
6401d007:	mov    ecx,DWORD PTR [ebp-0x4]
6401d00a:	xor    ecx,ebp
6401d00c:	call   0x64010c1e
6401d011:	leave  
6401d012:	ret    
6401d013:	push   ebp
6401d014:	mov    ebp,esp
6401d016:	sub    esp,0x10
6401d019:	push   DWORD PTR [ebp+0x10]
6401d01c:	lea    ecx,[ebp-0x10]
6401d01f:	call   0x64010dc1
6401d024:	lea    eax,[ebp-0x10]
6401d027:	push   eax
6401d028:	push   DWORD PTR [ebp+0xc]
6401d02b:	push   DWORD PTR [ebp+0x8]
6401d02e:	call   0x6401ce92
6401d033:	add    esp,0xc
6401d036:	cmp    BYTE PTR [ebp-0x4],0x0
6401d03a:	je     0x6401d043
6401d03c:	mov    ecx,DWORD PTR [ebp-0x8]
6401d03f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401d043:	leave  
6401d044:	ret    
6401d045:	push   ebx
6401d046:	xor    ebx,ebx
6401d048:	cmp    DWORD PTR ds:0x6402a8d4,ebx
6401d04e:	jne    0x6401d092
6401d050:	mov    eax,DWORD PTR [esp+0x8]
6401d054:	cmp    eax,ebx
6401d056:	jne    0x6401d074
6401d058:	call   0x640129f0
6401d05d:	push   ebx
6401d05e:	push   ebx
6401d05f:	push   ebx
6401d060:	push   ebx
6401d061:	push   ebx
6401d062:	mov    DWORD PTR [eax],0x16
6401d068:	call   0x64010756
6401d06d:	add    esp,0x14
6401d070:	xor    eax,eax
6401d072:	pop    ebx
6401d073:	ret    
6401d074:	cmp    BYTE PTR [eax],bl
6401d076:	mov    edx,eax
6401d078:	je     0x6401d0a5
6401d07a:	mov    cl,BYTE PTR [edx]
6401d07c:	cmp    cl,0x41
6401d07f:	jl     0x6401d08b
6401d081:	cmp    cl,0x5a
6401d084:	jg     0x6401d08b
6401d086:	add    cl,0x20
6401d089:	mov    BYTE PTR [edx],cl
6401d08b:	inc    edx
6401d08c:	cmp    BYTE PTR [edx],bl
6401d08e:	jne    0x6401d07a
6401d090:	pop    ebx
6401d091:	ret    
6401d092:	push   ebx
6401d093:	push   0xffffffff
6401d095:	push   DWORD PTR [esp+0x10]
6401d099:	call   0x6401d013
6401d09e:	mov    eax,DWORD PTR [esp+0x14]
6401d0a2:	add    esp,0xc
6401d0a5:	pop    ebx
6401d0a6:	ret    
6401d0a7:	mov    eax,0x6401dbb2
6401d0ac:	mov    ds:0x64029ad4,eax
6401d0b1:	mov    DWORD PTR ds:0x64029ad8,0x6401d2ae
6401d0bb:	mov    DWORD PTR ds:0x64029adc,0x6401d26c
6401d0c5:	mov    DWORD PTR ds:0x64029ae0,0x6401d2a0
6401d0cf:	mov    DWORD PTR ds:0x64029ae4,0x6401d216
6401d0d9:	mov    ds:0x64029ae8,eax
6401d0de:	mov    DWORD PTR ds:0x64029aec,0x6401db2c
6401d0e8:	mov    DWORD PTR ds:0x64029af0,0x6401d22c
6401d0f2:	mov    DWORD PTR ds:0x64029af4,0x6401d196
6401d0fc:	mov    DWORD PTR ds:0x64029af8,0x6401d125
6401d106:	ret    
6401d107:	call   0x6401d0a7
6401d10c:	call   0x6401dc38
6401d111:	cmp    DWORD PTR [esp+0x4],0x0
6401d116:	mov    ds:0x6402afd4,eax
6401d11b:	je     0x6401d122
6401d11d:	call   0x6401dbd3
6401d122:	fnclex 
6401d124:	ret    
6401d125:	push   ebp
6401d126:	mov    ebp,esp
6401d128:	sub    esp,0x10
6401d12b:	push   esi
6401d12c:	push   DWORD PTR [ebp+0xc]
6401d12f:	lea    ecx,[ebp-0x10]
6401d132:	call   0x64010dc1
6401d137:	mov    esi,DWORD PTR [ebp+0x8]
6401d13a:	movsx  eax,BYTE PTR [esi]
6401d13d:	push   eax
6401d13e:	call   0x64011a8f
6401d143:	cmp    eax,0x65
6401d146:	jmp    0x6401d154
6401d148:	inc    esi
6401d149:	movzx  eax,BYTE PTR [esi]
6401d14c:	push   eax
6401d14d:	call   0x64011858
6401d152:	test   eax,eax
6401d154:	pop    ecx
6401d155:	jne    0x6401d148
6401d157:	movsx  eax,BYTE PTR [esi]
6401d15a:	push   eax
6401d15b:	call   0x64011a8f
6401d160:	cmp    eax,0x78
6401d163:	pop    ecx
6401d164:	jne    0x6401d168
6401d166:	inc    esi
6401d167:	inc    esi
6401d168:	mov    ecx,DWORD PTR [ebp-0x10]
6401d16b:	mov    ecx,DWORD PTR [ecx+0xbc]
6401d171:	mov    ecx,DWORD PTR [ecx]
6401d173:	mov    al,BYTE PTR [esi]
6401d175:	mov    cl,BYTE PTR [ecx]
6401d177:	mov    BYTE PTR [esi],cl
6401d179:	inc    esi
6401d17a:	mov    cl,BYTE PTR [esi]
6401d17c:	mov    BYTE PTR [esi],al
6401d17e:	mov    al,cl
6401d180:	mov    cl,BYTE PTR [esi]
6401d182:	inc    esi
6401d183:	test   cl,cl
6401d185:	jne    0x6401d17a
6401d187:	cmp    BYTE PTR [ebp-0x4],cl
6401d18a:	pop    esi
6401d18b:	je     0x6401d194
6401d18d:	mov    eax,DWORD PTR [ebp-0x8]
6401d190:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d194:	leave  
6401d195:	ret    
6401d196:	push   ebp
6401d197:	mov    ebp,esp
6401d199:	sub    esp,0x10
6401d19c:	push   esi
6401d19d:	push   DWORD PTR [ebp+0xc]
6401d1a0:	lea    ecx,[ebp-0x10]
6401d1a3:	call   0x64010dc1
6401d1a8:	mov    eax,DWORD PTR [ebp+0x8]
6401d1ab:	mov    cl,BYTE PTR [eax]
6401d1ad:	test   cl,cl
6401d1af:	mov    esi,DWORD PTR [ebp-0x10]
6401d1b2:	je     0x6401d1c9
6401d1b4:	mov    edx,DWORD PTR [esi+0xbc]
6401d1ba:	mov    edx,DWORD PTR [edx]
6401d1bc:	mov    dl,BYTE PTR [edx]
6401d1be:	cmp    cl,dl
6401d1c0:	je     0x6401d1c9
6401d1c2:	inc    eax
6401d1c3:	mov    cl,BYTE PTR [eax]
6401d1c5:	test   cl,cl
6401d1c7:	jne    0x6401d1be
6401d1c9:	mov    cl,BYTE PTR [eax]
6401d1cb:	inc    eax
6401d1cc:	test   cl,cl
6401d1ce:	je     0x6401d206
6401d1d0:	jmp    0x6401d1dd
6401d1d2:	cmp    cl,0x65
6401d1d5:	je     0x6401d1e3
6401d1d7:	cmp    cl,0x45
6401d1da:	je     0x6401d1e3
6401d1dc:	inc    eax
6401d1dd:	mov    cl,BYTE PTR [eax]
6401d1df:	test   cl,cl
6401d1e1:	jne    0x6401d1d2
6401d1e3:	mov    edx,eax
6401d1e5:	dec    eax
6401d1e6:	cmp    BYTE PTR [eax],0x30
6401d1e9:	je     0x6401d1e5
6401d1eb:	mov    ecx,DWORD PTR [esi+0xbc]
6401d1f1:	mov    ecx,DWORD PTR [ecx]
6401d1f3:	push   ebx
6401d1f4:	mov    bl,BYTE PTR [eax]
6401d1f6:	cmp    bl,BYTE PTR [ecx]
6401d1f8:	pop    ebx
6401d1f9:	jne    0x6401d1fc
6401d1fb:	dec    eax
6401d1fc:	mov    cl,BYTE PTR [edx]
6401d1fe:	inc    eax
6401d1ff:	inc    edx
6401d200:	test   cl,cl
6401d202:	mov    BYTE PTR [eax],cl
6401d204:	jne    0x6401d1fc
6401d206:	cmp    BYTE PTR [ebp-0x4],0x0
6401d20a:	pop    esi
6401d20b:	je     0x6401d214
6401d20d:	mov    eax,DWORD PTR [ebp-0x8]
6401d210:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d214:	leave  
6401d215:	ret    
6401d216:	fldz   
6401d218:	mov    eax,DWORD PTR [esp+0x4]
6401d21c:	fcomp  QWORD PTR [eax]
6401d21e:	fnstsw ax
6401d220:	test   ah,0x41
6401d223:	jp     0x6401d229
6401d225:	xor    eax,eax
6401d227:	inc    eax
6401d228:	ret    
6401d229:	xor    eax,eax
6401d22b:	ret    
6401d22c:	push   ebp
6401d22d:	mov    ebp,esp
6401d22f:	push   ecx
6401d230:	push   ecx
6401d231:	cmp    DWORD PTR [ebp+0x8],0x0
6401d235:	push   DWORD PTR [ebp+0x14]
6401d238:	push   DWORD PTR [ebp+0x10]
6401d23b:	je     0x6401d256
6401d23d:	lea    eax,[ebp-0x8]
6401d240:	push   eax
6401d241:	call   0x6401dc9d
6401d246:	mov    ecx,DWORD PTR [ebp-0x8]
6401d249:	mov    eax,DWORD PTR [ebp+0xc]
6401d24c:	mov    DWORD PTR [eax],ecx
6401d24e:	mov    ecx,DWORD PTR [ebp-0x4]
6401d251:	mov    DWORD PTR [eax+0x4],ecx
6401d254:	jmp    0x6401d267
6401d256:	lea    eax,[ebp+0x8]
6401d259:	push   eax
6401d25a:	call   0x6401dd43
6401d25f:	mov    eax,DWORD PTR [ebp+0xc]
6401d262:	mov    ecx,DWORD PTR [ebp+0x8]
6401d265:	mov    DWORD PTR [eax],ecx
6401d267:	add    esp,0xc
6401d26a:	leave  
6401d26b:	ret    
6401d26c:	push   0x0
6401d26e:	push   DWORD PTR [esp+0x10]
6401d272:	push   DWORD PTR [esp+0x10]
6401d276:	push   DWORD PTR [esp+0x10]
6401d27a:	call   0x6401d22c
6401d27f:	add    esp,0x10
6401d282:	ret    
6401d283:	test   edi,edi
6401d285:	push   esi
6401d286:	mov    esi,eax
6401d288:	je     0x6401d29e
6401d28a:	push   esi
6401d28b:	call   0x640123f0
6401d290:	inc    eax
6401d291:	push   eax
6401d292:	push   esi
6401d293:	add    esi,edi
6401d295:	push   esi
6401d296:	call   0x64011c60
6401d29b:	add    esp,0x10
6401d29e:	pop    esi
6401d29f:	ret    
6401d2a0:	push   0x0
6401d2a2:	push   DWORD PTR [esp+0x8]
6401d2a6:	call   0x6401d125
6401d2ab:	pop    ecx
6401d2ac:	pop    ecx
6401d2ad:	ret    
6401d2ae:	push   0x0
6401d2b0:	push   DWORD PTR [esp+0x8]
6401d2b4:	call   0x6401d196
6401d2b9:	pop    ecx
6401d2ba:	pop    ecx
6401d2bb:	ret    
6401d2bc:	push   ebp
6401d2bd:	mov    ebp,esp
6401d2bf:	sub    esp,0x10
6401d2c2:	push   ebx
6401d2c3:	push   esi
6401d2c4:	push   edi
6401d2c5:	push   DWORD PTR [ebp+0x1c]
6401d2c8:	lea    ecx,[ebp-0x10]
6401d2cb:	mov    ebx,eax
6401d2cd:	call   0x64010dc1
6401d2d2:	xor    esi,esi
6401d2d4:	cmp    ebx,esi
6401d2d6:	jne    0x6401d303
6401d2d8:	call   0x640129f0
6401d2dd:	push   0x16
6401d2df:	pop    edi
6401d2e0:	push   esi
6401d2e1:	push   esi
6401d2e2:	push   esi
6401d2e3:	push   esi
6401d2e4:	push   esi
6401d2e5:	mov    DWORD PTR [eax],edi
6401d2e7:	call   0x64010756
6401d2ec:	add    esp,0x14
6401d2ef:	cmp    BYTE PTR [ebp-0x4],0x0
6401d2f3:	je     0x6401d2fc
6401d2f5:	mov    eax,DWORD PTR [ebp-0x8]
6401d2f8:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d2fc:	mov    eax,edi
6401d2fe:	jmp    0x6401d424
6401d303:	cmp    DWORD PTR [ebp+0x8],esi
6401d306:	jbe    0x6401d2d8
6401d308:	cmp    DWORD PTR [ebp+0xc],esi
6401d30b:	jle    0x6401d312
6401d30d:	mov    eax,DWORD PTR [ebp+0xc]
6401d310:	jmp    0x6401d314
6401d312:	xor    eax,eax
6401d314:	add    eax,0x9
6401d317:	cmp    DWORD PTR [ebp+0x8],eax
6401d31a:	ja     0x6401d325
6401d31c:	call   0x640129f0
6401d321:	push   0x22
6401d323:	jmp    0x6401d2df
6401d325:	cmp    BYTE PTR [ebp+0x18],0x0
6401d329:	je     0x6401d349
6401d32b:	mov    edx,DWORD PTR [ebp+0x14]
6401d32e:	xor    eax,eax
6401d330:	cmp    DWORD PTR [ebp+0xc],esi
6401d333:	setg   al
6401d336:	xor    ecx,ecx
6401d338:	cmp    DWORD PTR [edx],0x2d
6401d33b:	sete   cl
6401d33e:	mov    edi,eax
6401d340:	add    ecx,ebx
6401d342:	mov    eax,ecx
6401d344:	call   0x6401d283
6401d349:	mov    edi,DWORD PTR [ebp+0x14]
6401d34c:	cmp    DWORD PTR [edi],0x2d
6401d34f:	mov    esi,ebx
6401d351:	jne    0x6401d359
6401d353:	mov    BYTE PTR [ebx],0x2d
6401d356:	lea    esi,[ebx+0x1]
6401d359:	cmp    DWORD PTR [ebp+0xc],0x0
6401d35d:	jle    0x6401d377
6401d35f:	lea    eax,[esi+0x1]
6401d362:	mov    cl,BYTE PTR [eax]
6401d364:	mov    BYTE PTR [esi],cl
6401d366:	mov    esi,eax
6401d368:	mov    eax,DWORD PTR [ebp-0x10]
6401d36b:	mov    eax,DWORD PTR [eax+0xbc]
6401d371:	mov    eax,DWORD PTR [eax]
6401d373:	mov    al,BYTE PTR [eax]
6401d375:	mov    BYTE PTR [esi],al
6401d377:	xor    eax,eax
6401d379:	cmp    BYTE PTR [ebp+0x18],al
6401d37c:	sete   al
6401d37f:	add    eax,DWORD PTR [ebp+0xc]
6401d382:	add    esi,eax
6401d384:	cmp    DWORD PTR [ebp+0x8],0xffffffff
6401d388:	jne    0x6401d38f
6401d38a:	or     ebx,0xffffffff
6401d38d:	jmp    0x6401d394
6401d38f:	sub    ebx,esi
6401d391:	add    ebx,DWORD PTR [ebp+0x8]
6401d394:	push   0x640244b0
6401d399:	push   ebx
6401d39a:	push   esi
6401d39b:	call   0x640125e8
6401d3a0:	add    esp,0xc
6401d3a3:	xor    ebx,ebx
6401d3a5:	test   eax,eax
6401d3a7:	je     0x6401d3b6
6401d3a9:	push   ebx
6401d3aa:	push   ebx
6401d3ab:	push   ebx
6401d3ac:	push   ebx
6401d3ad:	push   ebx
6401d3ae:	call   0x6401065a
6401d3b3:	add    esp,0x14
6401d3b6:	cmp    DWORD PTR [ebp+0x10],ebx
6401d3b9:	lea    ecx,[esi+0x2]
6401d3bc:	je     0x6401d3c1
6401d3be:	mov    BYTE PTR [esi],0x45
6401d3c1:	mov    eax,DWORD PTR [edi+0xc]
6401d3c4:	inc    esi
6401d3c5:	cmp    BYTE PTR [eax],0x30
6401d3c8:	je     0x6401d3f8
6401d3ca:	mov    eax,DWORD PTR [edi+0x4]
6401d3cd:	dec    eax
6401d3ce:	jns    0x6401d3d5
6401d3d0:	neg    eax
6401d3d2:	mov    BYTE PTR [esi],0x2d
6401d3d5:	inc    esi
6401d3d6:	cmp    eax,0x64
6401d3d9:	jl     0x6401d3e5
6401d3db:	cdq    
6401d3dc:	push   0x64
6401d3de:	pop    edi
6401d3df:	idiv   edi
6401d3e1:	add    BYTE PTR [esi],al
6401d3e3:	mov    eax,edx
6401d3e5:	inc    esi
6401d3e6:	cmp    eax,0xa
6401d3e9:	jl     0x6401d3f5
6401d3eb:	cdq    
6401d3ec:	push   0xa
6401d3ee:	pop    edi
6401d3ef:	idiv   edi
6401d3f1:	add    BYTE PTR [esi],al
6401d3f3:	mov    eax,edx
6401d3f5:	add    BYTE PTR [esi+0x1],al
6401d3f8:	test   BYTE PTR ds:0x6402afd8,0x1
6401d3ff:	je     0x6401d415
6401d401:	cmp    BYTE PTR [ecx],0x30
6401d404:	jne    0x6401d415
6401d406:	push   0x3
6401d408:	lea    eax,[ecx+0x1]
6401d40b:	push   eax
6401d40c:	push   ecx
6401d40d:	call   0x64011c60
6401d412:	add    esp,0xc
6401d415:	cmp    BYTE PTR [ebp-0x4],0x0
6401d419:	je     0x6401d422
6401d41b:	mov    eax,DWORD PTR [ebp-0x8]
6401d41e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d422:	xor    eax,eax
6401d424:	pop    edi
6401d425:	pop    esi
6401d426:	pop    ebx
6401d427:	leave  
6401d428:	ret    
6401d429:	push   ebp
6401d42a:	mov    ebp,esp
6401d42c:	sub    esp,0x2c
6401d42f:	mov    eax,ds:0x64029038
6401d434:	xor    eax,ebp
6401d436:	mov    DWORD PTR [ebp-0x4],eax
6401d439:	mov    eax,DWORD PTR [ebp+0x8]
6401d43c:	push   ebx
6401d43d:	push   esi
6401d43e:	push   edi
6401d43f:	mov    edi,DWORD PTR [ebp+0xc]
6401d442:	push   0x16
6401d444:	pop    esi
6401d445:	push   esi
6401d446:	lea    ecx,[ebp-0x1c]
6401d449:	push   ecx
6401d44a:	lea    ecx,[ebp-0x2c]
6401d44d:	push   ecx
6401d44e:	push   DWORD PTR [eax+0x4]
6401d451:	push   DWORD PTR [eax]
6401d453:	call   0x6401df61
6401d458:	xor    ebx,ebx
6401d45a:	add    esp,0x14
6401d45d:	cmp    edi,ebx
6401d45f:	jne    0x6401d479
6401d461:	call   0x640129f0
6401d466:	push   ebx
6401d467:	push   ebx
6401d468:	push   ebx
6401d469:	push   ebx
6401d46a:	push   ebx
6401d46b:	mov    DWORD PTR [eax],esi
6401d46d:	call   0x64010756
6401d472:	add    esp,0x14
6401d475:	mov    eax,esi
6401d477:	jmp    0x6401d4e8
6401d479:	mov    eax,DWORD PTR [ebp+0x10]
6401d47c:	cmp    eax,ebx
6401d47e:	jbe    0x6401d461
6401d480:	cmp    eax,0xffffffff
6401d483:	mov    esi,DWORD PTR [ebp+0x14]
6401d486:	jne    0x6401d48d
6401d488:	or     eax,0xffffffff
6401d48b:	jmp    0x6401d4a1
6401d48d:	xor    ecx,ecx
6401d48f:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401d493:	sete   cl
6401d496:	sub    eax,ecx
6401d498:	xor    ecx,ecx
6401d49a:	cmp    esi,ebx
6401d49c:	setg   cl
6401d49f:	sub    eax,ecx
6401d4a1:	lea    ecx,[ebp-0x2c]
6401d4a4:	push   ecx
6401d4a5:	lea    ecx,[esi+0x1]
6401d4a8:	push   ecx
6401d4a9:	push   eax
6401d4aa:	xor    eax,eax
6401d4ac:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401d4b0:	sete   al
6401d4b3:	xor    ecx,ecx
6401d4b5:	cmp    esi,ebx
6401d4b7:	setg   cl
6401d4ba:	add    eax,edi
6401d4bc:	add    ecx,eax
6401d4be:	push   ecx
6401d4bf:	call   0x6401dde9
6401d4c4:	add    esp,0x10
6401d4c7:	cmp    eax,ebx
6401d4c9:	je     0x6401d4cf
6401d4cb:	mov    BYTE PTR [edi],bl
6401d4cd:	jmp    0x6401d4e8
6401d4cf:	push   DWORD PTR [ebp+0x1c]
6401d4d2:	lea    eax,[ebp-0x2c]
6401d4d5:	push   ebx
6401d4d6:	push   eax
6401d4d7:	push   DWORD PTR [ebp+0x18]
6401d4da:	mov    eax,edi
6401d4dc:	push   esi
6401d4dd:	push   DWORD PTR [ebp+0x10]
6401d4e0:	call   0x6401d2bc
6401d4e5:	add    esp,0x18
6401d4e8:	mov    ecx,DWORD PTR [ebp-0x4]
6401d4eb:	pop    edi
6401d4ec:	pop    esi
6401d4ed:	xor    ecx,ebp
6401d4ef:	pop    ebx
6401d4f0:	call   0x64010c1e
6401d4f5:	leave  
6401d4f6:	ret    
6401d4f7:	push   ebp
6401d4f8:	mov    ebp,esp
6401d4fa:	push   0x0
6401d4fc:	push   DWORD PTR [ebp+0x18]
6401d4ff:	push   DWORD PTR [ebp+0x14]
6401d502:	push   DWORD PTR [ebp+0x10]
6401d505:	push   DWORD PTR [ebp+0xc]
6401d508:	push   DWORD PTR [ebp+0x8]
6401d50b:	call   0x6401d429
6401d510:	add    esp,0x18
6401d513:	pop    ebp
6401d514:	ret    
6401d515:	push   ebp
6401d516:	mov    ebp,esp
6401d518:	sub    esp,0x24
6401d51b:	push   esi
6401d51c:	push   edi
6401d51d:	push   DWORD PTR [ebp+0x1c]
6401d520:	lea    ecx,[ebp-0x24]
6401d523:	mov    DWORD PTR [ebp-0x14],0x3ff
6401d52a:	xor    edi,edi
6401d52c:	mov    DWORD PTR [ebp-0x4],0x30
6401d533:	call   0x64010dc1
6401d538:	cmp    DWORD PTR [ebp+0x14],edi
6401d53b:	jge    0x6401d540
6401d53d:	mov    DWORD PTR [ebp+0x14],edi
6401d540:	mov    esi,DWORD PTR [ebp+0xc]
6401d543:	cmp    esi,edi
6401d545:	jne    0x6401d572
6401d547:	call   0x640129f0
6401d54c:	push   0x16
6401d54e:	pop    esi
6401d54f:	push   edi
6401d550:	push   edi
6401d551:	push   edi
6401d552:	push   edi
6401d553:	push   edi
6401d554:	mov    DWORD PTR [eax],esi
6401d556:	call   0x64010756
6401d55b:	add    esp,0x14
6401d55e:	cmp    BYTE PTR [ebp-0x18],0x0
6401d562:	je     0x6401d56b
6401d564:	mov    eax,DWORD PTR [ebp-0x1c]
6401d567:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d56b:	mov    eax,esi
6401d56d:	jmp    0x6401d882
6401d572:	cmp    DWORD PTR [ebp+0x10],edi
6401d575:	jbe    0x6401d547
6401d577:	mov    eax,DWORD PTR [ebp+0x14]
6401d57a:	add    eax,0xb
6401d57d:	cmp    DWORD PTR [ebp+0x10],eax
6401d580:	mov    BYTE PTR [esi],0x0
6401d583:	ja     0x6401d58e
6401d585:	call   0x640129f0
6401d58a:	push   0x22
6401d58c:	jmp    0x6401d54e
6401d58e:	mov    edi,DWORD PTR [ebp+0x8]
6401d591:	mov    eax,DWORD PTR [edi]
6401d593:	mov    DWORD PTR [ebp-0xc],eax
6401d596:	mov    eax,DWORD PTR [edi+0x4]
6401d599:	mov    ecx,eax
6401d59b:	shr    ecx,0x14
6401d59e:	mov    edx,0x7ff
6401d5a3:	push   ebx
6401d5a4:	and    ecx,edx
6401d5a6:	xor    ebx,ebx
6401d5a8:	cmp    ecx,edx
6401d5aa:	jne    0x6401d640
6401d5b0:	test   ebx,ebx
6401d5b2:	jne    0x6401d640
6401d5b8:	mov    eax,DWORD PTR [ebp+0x10]
6401d5bb:	cmp    eax,0xffffffff
6401d5be:	jne    0x6401d5c4
6401d5c0:	or     eax,eax
6401d5c2:	jmp    0x6401d5c7
6401d5c4:	add    eax,0xfffffffe
6401d5c7:	push   0x0
6401d5c9:	push   DWORD PTR [ebp+0x14]
6401d5cc:	lea    ebx,[esi+0x2]
6401d5cf:	push   eax
6401d5d0:	push   ebx
6401d5d1:	push   edi
6401d5d2:	call   0x6401d4f7
6401d5d7:	add    esp,0x14
6401d5da:	test   eax,eax
6401d5dc:	je     0x6401d5f7
6401d5de:	cmp    BYTE PTR [ebp-0x18],0x0
6401d5e2:	mov    BYTE PTR [esi],0x0
6401d5e5:	je     0x6401d881
6401d5eb:	mov    ecx,DWORD PTR [ebp-0x1c]
6401d5ee:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401d5f2:	jmp    0x6401d881
6401d5f7:	cmp    BYTE PTR [ebx],0x2d
6401d5fa:	jne    0x6401d600
6401d5fc:	mov    BYTE PTR [esi],0x2d
6401d5ff:	inc    esi
6401d600:	mov    BYTE PTR [esi],0x30
6401d603:	inc    esi
6401d604:	cmp    DWORD PTR [ebp+0x18],0x0
6401d608:	push   0x65
6401d60a:	sete   al
6401d60d:	dec    al
6401d60f:	and    al,0xe0
6401d611:	add    al,0x78
6401d613:	mov    BYTE PTR [esi],al
6401d615:	inc    esi
6401d616:	push   esi
6401d617:	call   0x6401dc70
6401d61c:	test   eax,eax
6401d61e:	pop    ecx
6401d61f:	pop    ecx
6401d620:	je     0x6401d872
6401d626:	cmp    DWORD PTR [ebp+0x18],0x0
6401d62a:	sete   cl
6401d62d:	dec    cl
6401d62f:	and    cl,0xe0
6401d632:	add    cl,0x70
6401d635:	mov    BYTE PTR [eax],cl
6401d637:	mov    BYTE PTR [eax+0x3],0x0
6401d63b:	jmp    0x6401d872
6401d640:	and    eax,0x80000000
6401d645:	xor    ecx,ecx
6401d647:	or     ecx,eax
6401d649:	je     0x6401d64f
6401d64b:	mov    BYTE PTR [esi],0x2d
6401d64e:	inc    esi
6401d64f:	mov    ebx,DWORD PTR [ebp+0x18]
6401d652:	mov    BYTE PTR [esi],0x30
6401d655:	inc    esi
6401d656:	test   ebx,ebx
6401d658:	sete   al
6401d65b:	dec    al
6401d65d:	and    al,0xe0
6401d65f:	add    al,0x78
6401d661:	mov    BYTE PTR [esi],al
6401d663:	mov    ecx,DWORD PTR [edi+0x4]
6401d666:	inc    esi
6401d667:	neg    ebx
6401d669:	sbb    ebx,ebx
6401d66b:	and    ebx,0xffffffe0
6401d66e:	and    ecx,0x7ff00000
6401d674:	xor    eax,eax
6401d676:	add    ebx,0x27
6401d679:	xor    edx,edx
6401d67b:	or     eax,ecx
6401d67d:	jne    0x6401d6a0
6401d67f:	mov    BYTE PTR [esi],0x30
6401d682:	mov    ecx,DWORD PTR [edi+0x4]
6401d685:	mov    eax,DWORD PTR [edi]
6401d687:	and    ecx,0xfffff
6401d68d:	inc    esi
6401d68e:	or     eax,ecx
6401d690:	jne    0x6401d697
6401d692:	mov    DWORD PTR [ebp-0x14],edx
6401d695:	jmp    0x6401d6a4
6401d697:	mov    DWORD PTR [ebp-0x14],0x3fe
6401d69e:	jmp    0x6401d6a4
6401d6a0:	mov    BYTE PTR [esi],0x31
6401d6a3:	inc    esi
6401d6a4:	mov    eax,esi
6401d6a6:	inc    esi
6401d6a7:	cmp    DWORD PTR [ebp+0x14],edx
6401d6aa:	mov    DWORD PTR [ebp+0xc],eax
6401d6ad:	jne    0x6401d6b3
6401d6af:	mov    BYTE PTR [eax],dl
6401d6b1:	jmp    0x6401d6c2
6401d6b3:	mov    ecx,DWORD PTR [ebp-0x24]
6401d6b6:	mov    ecx,DWORD PTR [ecx+0xbc]
6401d6bc:	mov    ecx,DWORD PTR [ecx]
6401d6be:	mov    cl,BYTE PTR [ecx]
6401d6c0:	mov    BYTE PTR [eax],cl
6401d6c2:	mov    ecx,DWORD PTR [edi+0x4]
6401d6c5:	mov    eax,DWORD PTR [edi]
6401d6c7:	and    ecx,0xfffff
6401d6cd:	mov    DWORD PTR [ebp-0x8],ecx
6401d6d0:	ja     0x6401d6da
6401d6d2:	cmp    eax,edx
6401d6d4:	jbe    0x6401d78f
6401d6da:	mov    DWORD PTR [ebp-0xc],edx
6401d6dd:	mov    DWORD PTR [ebp-0x8],0xf0000
6401d6e4:	cmp    DWORD PTR [ebp+0x14],0x0
6401d6e8:	jle    0x6401d737
6401d6ea:	mov    edx,DWORD PTR [edi+0x4]
6401d6ed:	and    edx,DWORD PTR [ebp-0x8]
6401d6f0:	mov    eax,DWORD PTR [edi]
6401d6f2:	movsx  ecx,WORD PTR [ebp-0x4]
6401d6f6:	and    eax,DWORD PTR [ebp-0xc]
6401d6f9:	and    edx,0xfffff
6401d6ff:	call   0x6401e0d0
6401d704:	add    ax,0x30
6401d708:	movzx  eax,ax
6401d70b:	cmp    ax,0x39
6401d70f:	jbe    0x6401d713
6401d711:	add    eax,ebx
6401d713:	mov    ecx,DWORD PTR [ebp-0x8]
6401d716:	sub    DWORD PTR [ebp-0x4],0x4
6401d71a:	mov    BYTE PTR [esi],al
6401d71c:	mov    eax,DWORD PTR [ebp-0xc]
6401d71f:	shrd   eax,ecx,0x4
6401d723:	shr    ecx,0x4
6401d726:	inc    esi
6401d727:	dec    DWORD PTR [ebp+0x14]
6401d72a:	cmp    WORD PTR [ebp-0x4],0x0
6401d72f:	mov    DWORD PTR [ebp-0xc],eax
6401d732:	mov    DWORD PTR [ebp-0x8],ecx
6401d735:	jge    0x6401d6e4
6401d737:	cmp    WORD PTR [ebp-0x4],0x0
6401d73c:	jl     0x6401d78f
6401d73e:	mov    edx,DWORD PTR [edi+0x4]
6401d741:	and    edx,DWORD PTR [ebp-0x8]
6401d744:	mov    eax,DWORD PTR [edi]
6401d746:	movsx  ecx,WORD PTR [ebp-0x4]
6401d74a:	and    eax,DWORD PTR [ebp-0xc]
6401d74d:	and    edx,0xfffff
6401d753:	call   0x6401e0d0
6401d758:	cmp    ax,0x8
6401d75c:	jbe    0x6401d78f
6401d75e:	lea    eax,[esi-0x1]
6401d761:	mov    cl,BYTE PTR [eax]
6401d763:	cmp    cl,0x66
6401d766:	je     0x6401d76d
6401d768:	cmp    cl,0x46
6401d76b:	jne    0x6401d773
6401d76d:	mov    BYTE PTR [eax],0x30
6401d770:	dec    eax
6401d771:	jmp    0x6401d761
6401d773:	cmp    eax,DWORD PTR [ebp+0xc]
6401d776:	je     0x6401d78c
6401d778:	mov    cl,BYTE PTR [eax]
6401d77a:	cmp    cl,0x39
6401d77d:	jne    0x6401d786
6401d77f:	add    bl,0x3a
6401d782:	mov    BYTE PTR [eax],bl
6401d784:	jmp    0x6401d78f
6401d786:	inc    cl
6401d788:	mov    BYTE PTR [eax],cl
6401d78a:	jmp    0x6401d78f
6401d78c:	inc    BYTE PTR [eax-0x1]
6401d78f:	cmp    DWORD PTR [ebp+0x14],0x0
6401d793:	jle    0x6401d7a6
6401d795:	push   DWORD PTR [ebp+0x14]
6401d798:	push   0x30
6401d79a:	push   esi
6401d79b:	call   0x64011320
6401d7a0:	add    esp,0xc
6401d7a3:	add    esi,DWORD PTR [ebp+0x14]
6401d7a6:	mov    eax,DWORD PTR [ebp+0xc]
6401d7a9:	cmp    BYTE PTR [eax],0x0
6401d7ac:	jne    0x6401d7b0
6401d7ae:	mov    esi,eax
6401d7b0:	cmp    DWORD PTR [ebp+0x18],0x0
6401d7b4:	mov    cl,0x34
6401d7b6:	sete   al
6401d7b9:	dec    al
6401d7bb:	and    al,0xe0
6401d7bd:	add    al,0x70
6401d7bf:	mov    BYTE PTR [esi],al
6401d7c1:	mov    eax,DWORD PTR [edi]
6401d7c3:	mov    edx,DWORD PTR [edi+0x4]
6401d7c6:	inc    esi
6401d7c7:	call   0x6401e0d0
6401d7cc:	xor    ebx,ebx
6401d7ce:	and    eax,0x7ff
6401d7d3:	and    edx,ebx
6401d7d5:	sub    eax,DWORD PTR [ebp-0x14]
6401d7d8:	push   ebx
6401d7d9:	pop    ecx
6401d7da:	sbb    edx,ecx
6401d7dc:	js     0x6401d7ea
6401d7de:	jg     0x6401d7e4
6401d7e0:	cmp    eax,ebx
6401d7e2:	jb     0x6401d7ea
6401d7e4:	mov    BYTE PTR [esi],0x2b
6401d7e7:	inc    esi
6401d7e8:	jmp    0x6401d7f4
6401d7ea:	mov    BYTE PTR [esi],0x2d
6401d7ed:	inc    esi
6401d7ee:	neg    eax
6401d7f0:	adc    edx,ebx
6401d7f2:	neg    edx
6401d7f4:	cmp    edx,ebx
6401d7f6:	mov    edi,esi
6401d7f8:	mov    BYTE PTR [esi],0x30
6401d7fb:	jl     0x6401d821
6401d7fd:	mov    ecx,0x3e8
6401d802:	jg     0x6401d808
6401d804:	cmp    eax,ecx
6401d806:	jb     0x6401d821
6401d808:	push   ebx
6401d809:	push   ecx
6401d80a:	push   edx
6401d80b:	push   eax
6401d80c:	call   0x6401dff0
6401d811:	add    al,0x30
6401d813:	mov    BYTE PTR [esi],al
6401d815:	inc    esi
6401d816:	cmp    esi,edi
6401d818:	mov    DWORD PTR [ebp-0x10],edx
6401d81b:	mov    eax,ecx
6401d81d:	mov    edx,ebx
6401d81f:	jne    0x6401d82c
6401d821:	test   edx,edx
6401d823:	jl     0x6401d843
6401d825:	jg     0x6401d82c
6401d827:	cmp    eax,0x64
6401d82a:	jb     0x6401d843
6401d82c:	push   0x0
6401d82e:	push   0x64
6401d830:	push   edx
6401d831:	push   eax
6401d832:	call   0x6401dff0
6401d837:	add    al,0x30
6401d839:	mov    BYTE PTR [esi],al
6401d83b:	mov    DWORD PTR [ebp-0x10],edx
6401d83e:	inc    esi
6401d83f:	mov    eax,ecx
6401d841:	mov    edx,ebx
6401d843:	cmp    esi,edi
6401d845:	jne    0x6401d852
6401d847:	test   edx,edx
6401d849:	jl     0x6401d86a
6401d84b:	jg     0x6401d852
6401d84d:	cmp    eax,0xa
6401d850:	jb     0x6401d86a
6401d852:	push   0x0
6401d854:	push   0xa
6401d856:	push   edx
6401d857:	push   eax
6401d858:	call   0x6401dff0
6401d85d:	add    al,0x30
6401d85f:	mov    BYTE PTR [esi],al
6401d861:	mov    DWORD PTR [ebp-0x10],edx
6401d864:	inc    esi
6401d865:	mov    eax,ecx
6401d867:	mov    DWORD PTR [ebp-0x10],ebx
6401d86a:	add    al,0x30
6401d86c:	mov    BYTE PTR [esi],al
6401d86e:	mov    BYTE PTR [esi+0x1],0x0
6401d872:	cmp    BYTE PTR [ebp-0x18],0x0
6401d876:	je     0x6401d87f
6401d878:	mov    eax,DWORD PTR [ebp-0x1c]
6401d87b:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d87f:	xor    eax,eax
6401d881:	pop    ebx
6401d882:	pop    edi
6401d883:	pop    esi
6401d884:	leave  
6401d885:	ret    
6401d886:	push   ebp
6401d887:	mov    ebp,esp
6401d889:	sub    esp,0x10
6401d88c:	push   ebx
6401d88d:	push   esi
6401d88e:	push   edi
6401d88f:	push   DWORD PTR [ebp+0x14]
6401d892:	mov    ebx,eax
6401d894:	mov    esi,DWORD PTR [ebx+0x4]
6401d897:	mov    edi,ecx
6401d899:	lea    ecx,[ebp-0x10]
6401d89c:	dec    esi
6401d89d:	call   0x64010dc1
6401d8a2:	test   edi,edi
6401d8a4:	jne    0x6401d8d3
6401d8a6:	call   0x640129f0
6401d8ab:	push   0x16
6401d8ad:	pop    esi
6401d8ae:	mov    DWORD PTR [eax],esi
6401d8b0:	xor    eax,eax
6401d8b2:	push   eax
6401d8b3:	push   eax
6401d8b4:	push   eax
6401d8b5:	push   eax
6401d8b6:	push   eax
6401d8b7:	call   0x64010756
6401d8bc:	add    esp,0x14
6401d8bf:	cmp    BYTE PTR [ebp-0x4],0x0
6401d8c3:	je     0x6401d8cc
6401d8c5:	mov    eax,DWORD PTR [ebp-0x8]
6401d8c8:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d8cc:	mov    eax,esi
6401d8ce:	jmp    0x6401d976
6401d8d3:	cmp    DWORD PTR [ebp+0x8],0x0
6401d8d7:	jbe    0x6401d8a6
6401d8d9:	cmp    BYTE PTR [ebp+0x10],0x0
6401d8dd:	je     0x6401d8f7
6401d8df:	cmp    esi,DWORD PTR [ebp+0xc]
6401d8e2:	jne    0x6401d8f7
6401d8e4:	xor    eax,eax
6401d8e6:	cmp    DWORD PTR [ebx],0x2d
6401d8e9:	sete   al
6401d8ec:	add    eax,esi
6401d8ee:	add    eax,edi
6401d8f0:	mov    BYTE PTR [eax],0x30
6401d8f3:	mov    BYTE PTR [eax+0x1],0x0
6401d8f7:	cmp    DWORD PTR [ebx],0x2d
6401d8fa:	mov    esi,edi
6401d8fc:	jne    0x6401d904
6401d8fe:	mov    BYTE PTR [edi],0x2d
6401d901:	lea    esi,[edi+0x1]
6401d904:	mov    eax,DWORD PTR [ebx+0x4]
6401d907:	xor    edi,edi
6401d909:	inc    edi
6401d90a:	test   eax,eax
6401d90c:	jg     0x6401d91b
6401d90e:	mov    eax,esi
6401d910:	call   0x6401d283
6401d915:	mov    BYTE PTR [esi],0x30
6401d918:	inc    esi
6401d919:	jmp    0x6401d91d
6401d91b:	add    esi,eax
6401d91d:	cmp    DWORD PTR [ebp+0xc],0x0
6401d921:	jle    0x6401d967
6401d923:	mov    eax,esi
6401d925:	call   0x6401d283
6401d92a:	mov    eax,DWORD PTR [ebp-0x10]
6401d92d:	mov    eax,DWORD PTR [eax+0xbc]
6401d933:	mov    eax,DWORD PTR [eax]
6401d935:	mov    al,BYTE PTR [eax]
6401d937:	mov    BYTE PTR [esi],al
6401d939:	mov    ebx,DWORD PTR [ebx+0x4]
6401d93c:	inc    esi
6401d93d:	test   ebx,ebx
6401d93f:	jge    0x6401d967
6401d941:	neg    ebx
6401d943:	cmp    BYTE PTR [ebp+0x10],0x0
6401d947:	jne    0x6401d94e
6401d949:	cmp    DWORD PTR [ebp+0xc],ebx
6401d94c:	jl     0x6401d951
6401d94e:	mov    DWORD PTR [ebp+0xc],ebx
6401d951:	mov    edi,DWORD PTR [ebp+0xc]
6401d954:	mov    eax,esi
6401d956:	call   0x6401d283
6401d95b:	push   edi
6401d95c:	push   0x30
6401d95e:	push   esi
6401d95f:	call   0x64011320
6401d964:	add    esp,0xc
6401d967:	cmp    BYTE PTR [ebp-0x4],0x0
6401d96b:	je     0x6401d974
6401d96d:	mov    eax,DWORD PTR [ebp-0x8]
6401d970:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d974:	xor    eax,eax
6401d976:	pop    edi
6401d977:	pop    esi
6401d978:	pop    ebx
6401d979:	leave  
6401d97a:	ret    
6401d97b:	push   ebp
6401d97c:	mov    ebp,esp
6401d97e:	sub    esp,0x2c
6401d981:	mov    eax,ds:0x64029038
6401d986:	xor    eax,ebp
6401d988:	mov    DWORD PTR [ebp-0x4],eax
6401d98b:	mov    eax,DWORD PTR [ebp+0x8]
6401d98e:	push   ebx
6401d98f:	push   esi
6401d990:	push   edi
6401d991:	mov    edi,DWORD PTR [ebp+0xc]
6401d994:	push   0x16
6401d996:	pop    esi
6401d997:	push   esi
6401d998:	lea    ecx,[ebp-0x1c]
6401d99b:	push   ecx
6401d99c:	lea    ecx,[ebp-0x2c]
6401d99f:	push   ecx
6401d9a0:	push   DWORD PTR [eax+0x4]
6401d9a3:	push   DWORD PTR [eax]
6401d9a5:	call   0x6401df61
6401d9aa:	xor    ebx,ebx
6401d9ac:	add    esp,0x14
6401d9af:	cmp    edi,ebx
6401d9b1:	jne    0x6401d9cb
6401d9b3:	call   0x640129f0
6401d9b8:	push   ebx
6401d9b9:	push   ebx
6401d9ba:	push   ebx
6401d9bb:	push   ebx
6401d9bc:	push   ebx
6401d9bd:	mov    DWORD PTR [eax],esi
6401d9bf:	call   0x64010756
6401d9c4:	add    esp,0x14
6401d9c7:	mov    eax,esi
6401d9c9:	jmp    0x6401da25
6401d9cb:	mov    eax,DWORD PTR [ebp+0x10]
6401d9ce:	cmp    eax,ebx
6401d9d0:	jbe    0x6401d9b3
6401d9d2:	cmp    eax,0xffffffff
6401d9d5:	jne    0x6401d9db
6401d9d7:	or     eax,eax
6401d9d9:	jmp    0x6401d9e6
6401d9db:	xor    ecx,ecx
6401d9dd:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401d9e1:	sete   cl
6401d9e4:	sub    eax,ecx
6401d9e6:	mov    esi,DWORD PTR [ebp+0x14]
6401d9e9:	lea    ecx,[ebp-0x2c]
6401d9ec:	push   ecx
6401d9ed:	mov    ecx,DWORD PTR [ebp-0x28]
6401d9f0:	add    ecx,esi
6401d9f2:	push   ecx
6401d9f3:	push   eax
6401d9f4:	xor    eax,eax
6401d9f6:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401d9fa:	sete   al
6401d9fd:	add    eax,edi
6401d9ff:	push   eax
6401da00:	call   0x6401dde9
6401da05:	add    esp,0x10
6401da08:	cmp    eax,ebx
6401da0a:	je     0x6401da10
6401da0c:	mov    BYTE PTR [edi],bl
6401da0e:	jmp    0x6401da25
6401da10:	push   DWORD PTR [ebp+0x18]
6401da13:	lea    eax,[ebp-0x2c]
6401da16:	push   ebx
6401da17:	push   esi
6401da18:	push   DWORD PTR [ebp+0x10]
6401da1b:	mov    ecx,edi
6401da1d:	call   0x6401d886
6401da22:	add    esp,0x10
6401da25:	mov    ecx,DWORD PTR [ebp-0x4]
6401da28:	pop    edi
6401da29:	pop    esi
6401da2a:	xor    ecx,ebp
6401da2c:	pop    ebx
6401da2d:	call   0x64010c1e
6401da32:	leave  
6401da33:	ret    
6401da34:	push   ebp
6401da35:	mov    ebp,esp
6401da37:	sub    esp,0x30
6401da3a:	mov    eax,ds:0x64029038
6401da3f:	xor    eax,ebp
6401da41:	mov    DWORD PTR [ebp-0x4],eax
6401da44:	mov    eax,DWORD PTR [ebp+0x8]
6401da47:	push   ebx
6401da48:	push   esi
6401da49:	mov    esi,DWORD PTR [ebp+0xc]
6401da4c:	push   edi
6401da4d:	push   0x16
6401da4f:	pop    edi
6401da50:	push   edi
6401da51:	lea    ecx,[ebp-0x1c]
6401da54:	push   ecx
6401da55:	lea    ecx,[ebp-0x30]
6401da58:	push   ecx
6401da59:	push   DWORD PTR [eax+0x4]
6401da5c:	push   DWORD PTR [eax]
6401da5e:	call   0x6401df61
6401da63:	xor    ebx,ebx
6401da65:	add    esp,0x14
6401da68:	cmp    esi,ebx
6401da6a:	jne    0x6401da87
6401da6c:	call   0x640129f0
6401da71:	push   ebx
6401da72:	push   ebx
6401da73:	push   ebx
6401da74:	push   ebx
6401da75:	push   ebx
6401da76:	mov    DWORD PTR [eax],edi
6401da78:	call   0x64010756
6401da7d:	add    esp,0x14
6401da80:	mov    eax,edi
6401da82:	jmp    0x6401db1d
6401da87:	mov    ecx,DWORD PTR [ebp+0x10]
6401da8a:	cmp    ecx,ebx
6401da8c:	jbe    0x6401da6c
6401da8e:	mov    eax,DWORD PTR [ebp-0x2c]
6401da91:	dec    eax
6401da92:	mov    DWORD PTR [ebp-0x20],eax
6401da95:	xor    eax,eax
6401da97:	cmp    DWORD PTR [ebp-0x30],0x2d
6401da9b:	sete   al
6401da9e:	cmp    ecx,0xffffffff
6401daa1:	lea    edi,[eax+esi*1]
6401daa4:	jne    0x6401daaa
6401daa6:	or     ecx,ecx
6401daa8:	jmp    0x6401daac
6401daaa:	sub    ecx,eax
6401daac:	lea    eax,[ebp-0x30]
6401daaf:	push   eax
6401dab0:	push   DWORD PTR [ebp+0x14]
6401dab3:	push   ecx
6401dab4:	push   edi
6401dab5:	call   0x6401dde9
6401daba:	add    esp,0x10
6401dabd:	cmp    eax,ebx
6401dabf:	je     0x6401dac5
6401dac1:	mov    BYTE PTR [esi],bl
6401dac3:	jmp    0x6401db1d
6401dac5:	mov    eax,DWORD PTR [ebp-0x2c]
6401dac8:	dec    eax
6401dac9:	cmp    DWORD PTR [ebp-0x20],eax
6401dacc:	setl   cl
6401dacf:	cmp    eax,0xfffffffc
6401dad2:	jl     0x6401db01
6401dad4:	cmp    eax,DWORD PTR [ebp+0x14]
6401dad7:	jge    0x6401db01
6401dad9:	cmp    cl,bl
6401dadb:	je     0x6401dae7
6401dadd:	mov    al,BYTE PTR [edi]
6401dadf:	inc    edi
6401dae0:	test   al,al
6401dae2:	jne    0x6401dadd
6401dae4:	mov    BYTE PTR [edi-0x2],bl
6401dae7:	push   DWORD PTR [ebp+0x1c]
6401daea:	lea    eax,[ebp-0x30]
6401daed:	push   0x1
6401daef:	push   DWORD PTR [ebp+0x14]
6401daf2:	mov    ecx,esi
6401daf4:	push   DWORD PTR [ebp+0x10]
6401daf7:	call   0x6401d886
6401dafc:	add    esp,0x10
6401daff:	jmp    0x6401db1d
6401db01:	push   DWORD PTR [ebp+0x1c]
6401db04:	lea    eax,[ebp-0x30]
6401db07:	push   0x1
6401db09:	push   eax
6401db0a:	push   DWORD PTR [ebp+0x18]
6401db0d:	mov    eax,esi
6401db0f:	push   DWORD PTR [ebp+0x14]
6401db12:	push   DWORD PTR [ebp+0x10]
6401db15:	call   0x6401d2bc
6401db1a:	add    esp,0x18
6401db1d:	mov    ecx,DWORD PTR [ebp-0x4]
6401db20:	pop    edi
6401db21:	pop    esi
6401db22:	xor    ecx,ebp
6401db24:	pop    ebx
6401db25:	call   0x64010c1e
6401db2a:	leave  
6401db2b:	ret    
6401db2c:	push   ebp
6401db2d:	mov    ebp,esp
6401db2f:	mov    eax,DWORD PTR [ebp+0x14]
6401db32:	cmp    eax,0x65
6401db35:	je     0x6401db96
6401db37:	cmp    eax,0x45
6401db3a:	je     0x6401db96
6401db3c:	cmp    eax,0x66
6401db3f:	jne    0x6401db5a
6401db41:	push   DWORD PTR [ebp+0x20]
6401db44:	push   DWORD PTR [ebp+0x18]
6401db47:	push   DWORD PTR [ebp+0x10]
6401db4a:	push   DWORD PTR [ebp+0xc]
6401db4d:	push   DWORD PTR [ebp+0x8]
6401db50:	call   0x6401d97b
6401db55:	add    esp,0x14
6401db58:	pop    ebp
6401db59:	ret    
6401db5a:	cmp    eax,0x61
6401db5d:	je     0x6401db7d
6401db5f:	cmp    eax,0x41
6401db62:	je     0x6401db7d
6401db64:	push   DWORD PTR [ebp+0x20]
6401db67:	push   DWORD PTR [ebp+0x1c]
6401db6a:	push   DWORD PTR [ebp+0x18]
6401db6d:	push   DWORD PTR [ebp+0x10]
6401db70:	push   DWORD PTR [ebp+0xc]
6401db73:	push   DWORD PTR [ebp+0x8]
6401db76:	call   0x6401da34
6401db7b:	jmp    0x6401dbad
6401db7d:	push   DWORD PTR [ebp+0x20]
6401db80:	push   DWORD PTR [ebp+0x1c]
6401db83:	push   DWORD PTR [ebp+0x18]
6401db86:	push   DWORD PTR [ebp+0x10]
6401db89:	push   DWORD PTR [ebp+0xc]
6401db8c:	push   DWORD PTR [ebp+0x8]
6401db8f:	call   0x6401d515
6401db94:	jmp    0x6401dbad
6401db96:	push   DWORD PTR [ebp+0x20]
6401db99:	push   DWORD PTR [ebp+0x1c]
6401db9c:	push   DWORD PTR [ebp+0x18]
6401db9f:	push   DWORD PTR [ebp+0x10]
6401dba2:	push   DWORD PTR [ebp+0xc]
6401dba5:	push   DWORD PTR [ebp+0x8]
6401dba8:	call   0x6401d429
6401dbad:	add    esp,0x18
6401dbb0:	pop    ebp
6401dbb1:	ret    
6401dbb2:	push   ebp
6401dbb3:	mov    ebp,esp
6401dbb5:	push   0x0
6401dbb7:	push   DWORD PTR [ebp+0x1c]
6401dbba:	push   DWORD PTR [ebp+0x18]
6401dbbd:	push   DWORD PTR [ebp+0x14]
6401dbc0:	push   DWORD PTR [ebp+0x10]
6401dbc3:	push   DWORD PTR [ebp+0xc]
6401dbc6:	push   DWORD PTR [ebp+0x8]
6401dbc9:	call   0x6401db2c
6401dbce:	add    esp,0x1c
6401dbd1:	pop    ebp
6401dbd2:	ret    
6401dbd3:	push   esi
6401dbd4:	push   0x30000
6401dbd9:	push   0x10000
6401dbde:	xor    esi,esi
6401dbe0:	push   esi
6401dbe1:	call   0x6401e0ef
6401dbe6:	add    esp,0xc
6401dbe9:	test   eax,eax
6401dbeb:	je     0x6401dbfa
6401dbed:	push   esi
6401dbee:	push   esi
6401dbef:	push   esi
6401dbf0:	push   esi
6401dbf1:	push   esi
6401dbf2:	call   0x6401065a
6401dbf7:	add    esp,0x14
6401dbfa:	pop    esi
6401dbfb:	ret    
6401dbfc:	push   ebp
6401dbfd:	mov    ebp,esp
6401dbff:	sub    esp,0x18
6401dc02:	fld    QWORD PTR ds:0x640244c0
6401dc08:	fstp   QWORD PTR [ebp-0x10]
6401dc0b:	fld    QWORD PTR ds:0x640244b8
6401dc11:	fstp   QWORD PTR [ebp-0x18]
6401dc14:	fld    QWORD PTR [ebp-0x18]
6401dc17:	fdiv   QWORD PTR [ebp-0x10]
6401dc1a:	fmul   QWORD PTR [ebp-0x10]
6401dc1d:	fsubr  QWORD PTR [ebp-0x18]
6401dc20:	fstp   QWORD PTR [ebp-0x8]
6401dc23:	fld1   
6401dc25:	fcomp  QWORD PTR [ebp-0x8]
6401dc28:	fnstsw ax
6401dc2a:	test   ah,0x5
6401dc2d:	jp     0x6401dc34
6401dc2f:	xor    eax,eax
6401dc31:	inc    eax
6401dc32:	leave  
6401dc33:	ret    
6401dc34:	xor    eax,eax
6401dc36:	leave  
6401dc37:	ret    
6401dc38:	push   0x640244e4
6401dc3d:	call   DWORD PTR ds:0x64022130
6401dc43:	test   eax,eax
6401dc45:	je     0x6401dc5c
6401dc47:	push   0x640244c8
6401dc4c:	push   eax
6401dc4d:	call   DWORD PTR ds:0x64022014
6401dc53:	test   eax,eax
6401dc55:	je     0x6401dc5c
6401dc57:	push   0x0
6401dc59:	call   eax
6401dc5b:	ret    
6401dc5c:	jmp    0x6401dbfc
6401dc61:	int3   
6401dc62:	int3   
6401dc63:	int3   
6401dc64:	int3   
6401dc65:	int3   
6401dc66:	int3   
6401dc67:	int3   
6401dc68:	int3   
6401dc69:	int3   
6401dc6a:	int3   
6401dc6b:	int3   
6401dc6c:	int3   
6401dc6d:	int3   
6401dc6e:	int3   
6401dc6f:	int3   
6401dc70:	push   ebp
6401dc71:	mov    ebp,esp
6401dc73:	push   edi
6401dc74:	mov    edi,DWORD PTR [ebp+0x8]
6401dc77:	xor    eax,eax
6401dc79:	or     ecx,0xffffffff
6401dc7c:	repnz scas al,BYTE PTR es:[edi]
6401dc7e:	add    ecx,0x1
6401dc81:	neg    ecx
6401dc83:	sub    edi,0x1
6401dc86:	mov    al,BYTE PTR [ebp+0xc]
6401dc89:	std    
6401dc8a:	repnz scas al,BYTE PTR es:[edi]
6401dc8c:	add    edi,0x1
6401dc8f:	cmp    BYTE PTR [edi],al
6401dc91:	je     0x6401dc97
6401dc93:	xor    eax,eax
6401dc95:	jmp    0x6401dc99
6401dc97:	mov    eax,edi
6401dc99:	cld    
6401dc9a:	pop    edi
6401dc9b:	leave  
6401dc9c:	ret    
6401dc9d:	push   ebp
6401dc9e:	mov    ebp,esp
6401dca0:	sub    esp,0x28
6401dca3:	mov    eax,ds:0x64029038
6401dca8:	xor    eax,ebp
6401dcaa:	mov    DWORD PTR [ebp-0x4],eax
6401dcad:	push   ebx
6401dcae:	push   esi
6401dcaf:	mov    esi,DWORD PTR [ebp+0x8]
6401dcb2:	push   edi
6401dcb3:	push   DWORD PTR [ebp+0x10]
6401dcb6:	mov    edi,DWORD PTR [ebp+0xc]
6401dcb9:	lea    ecx,[ebp-0x24]
6401dcbc:	call   0x64010dc1
6401dcc1:	lea    eax,[ebp-0x24]
6401dcc4:	push   eax
6401dcc5:	xor    ebx,ebx
6401dcc7:	push   ebx
6401dcc8:	push   ebx
6401dcc9:	push   ebx
6401dcca:	push   ebx
6401dccb:	push   edi
6401dccc:	lea    eax,[ebp-0x28]
6401dccf:	push   eax
6401dcd0:	lea    eax,[ebp-0x10]
6401dcd3:	push   eax
6401dcd4:	call   0x6401ebdd
6401dcd9:	mov    DWORD PTR [ebp-0x14],eax
6401dcdc:	lea    eax,[ebp-0x10]
6401dcdf:	push   esi
6401dce0:	push   eax
6401dce1:	call   0x6401e159
6401dce6:	add    esp,0x28
6401dce9:	test   BYTE PTR [ebp-0x14],0x3
6401dced:	jne    0x6401dd1a
6401dcef:	cmp    eax,0x1
6401dcf2:	jne    0x6401dd05
6401dcf4:	cmp    BYTE PTR [ebp-0x18],bl
6401dcf7:	je     0x6401dd00
6401dcf9:	mov    eax,DWORD PTR [ebp-0x1c]
6401dcfc:	and    DWORD PTR [eax+0x70],0xfffffffd
6401dd00:	push   0x3
6401dd02:	pop    eax
6401dd03:	jmp    0x6401dd34
6401dd05:	cmp    eax,0x2
6401dd08:	jne    0x6401dd26
6401dd0a:	cmp    BYTE PTR [ebp-0x18],bl
6401dd0d:	je     0x6401dd16
6401dd0f:	mov    eax,DWORD PTR [ebp-0x1c]
6401dd12:	and    DWORD PTR [eax+0x70],0xfffffffd
6401dd16:	push   0x4
6401dd18:	jmp    0x6401dd02
6401dd1a:	test   BYTE PTR [ebp-0x14],0x1
6401dd1e:	jne    0x6401dd0a
6401dd20:	test   BYTE PTR [ebp-0x14],0x2
6401dd24:	jne    0x6401dcf4
6401dd26:	cmp    BYTE PTR [ebp-0x18],bl
6401dd29:	je     0x6401dd32
6401dd2b:	mov    eax,DWORD PTR [ebp-0x1c]
6401dd2e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401dd32:	xor    eax,eax
6401dd34:	mov    ecx,DWORD PTR [ebp-0x4]
6401dd37:	pop    edi
6401dd38:	pop    esi
6401dd39:	xor    ecx,ebp
6401dd3b:	pop    ebx
6401dd3c:	call   0x64010c1e
6401dd41:	leave  
6401dd42:	ret    
6401dd43:	push   ebp
6401dd44:	mov    ebp,esp
6401dd46:	sub    esp,0x28
6401dd49:	mov    eax,ds:0x64029038
6401dd4e:	xor    eax,ebp
6401dd50:	mov    DWORD PTR [ebp-0x4],eax
6401dd53:	push   ebx
6401dd54:	push   esi
6401dd55:	mov    esi,DWORD PTR [ebp+0x8]
6401dd58:	push   edi
6401dd59:	push   DWORD PTR [ebp+0x10]
6401dd5c:	mov    edi,DWORD PTR [ebp+0xc]
6401dd5f:	lea    ecx,[ebp-0x24]
6401dd62:	call   0x64010dc1
6401dd67:	lea    eax,[ebp-0x24]
6401dd6a:	push   eax
6401dd6b:	xor    ebx,ebx
6401dd6d:	push   ebx
6401dd6e:	push   ebx
6401dd6f:	push   ebx
6401dd70:	push   ebx
6401dd71:	push   edi
6401dd72:	lea    eax,[ebp-0x28]
6401dd75:	push   eax
6401dd76:	lea    eax,[ebp-0x10]
6401dd79:	push   eax
6401dd7a:	call   0x6401ebdd
6401dd7f:	mov    DWORD PTR [ebp-0x14],eax
6401dd82:	lea    eax,[ebp-0x10]
6401dd85:	push   esi
6401dd86:	push   eax
6401dd87:	call   0x6401e69b
6401dd8c:	add    esp,0x28
6401dd8f:	test   BYTE PTR [ebp-0x14],0x3
6401dd93:	jne    0x6401ddc0
6401dd95:	cmp    eax,0x1
6401dd98:	jne    0x6401ddab
6401dd9a:	cmp    BYTE PTR [ebp-0x18],bl
6401dd9d:	je     0x6401dda6
6401dd9f:	mov    eax,DWORD PTR [ebp-0x1c]
6401dda2:	and    DWORD PTR [eax+0x70],0xfffffffd
6401dda6:	push   0x3
6401dda8:	pop    eax
6401dda9:	jmp    0x6401ddda
6401ddab:	cmp    eax,0x2
6401ddae:	jne    0x6401ddcc
6401ddb0:	cmp    BYTE PTR [ebp-0x18],bl
6401ddb3:	je     0x6401ddbc
6401ddb5:	mov    eax,DWORD PTR [ebp-0x1c]
6401ddb8:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ddbc:	push   0x4
6401ddbe:	jmp    0x6401dda8
6401ddc0:	test   BYTE PTR [ebp-0x14],0x1
6401ddc4:	jne    0x6401ddb0
6401ddc6:	test   BYTE PTR [ebp-0x14],0x2
6401ddca:	jne    0x6401dd9a
6401ddcc:	cmp    BYTE PTR [ebp-0x18],bl
6401ddcf:	je     0x6401ddd8
6401ddd1:	mov    eax,DWORD PTR [ebp-0x1c]
6401ddd4:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ddd8:	xor    eax,eax
6401ddda:	mov    ecx,DWORD PTR [ebp-0x4]
6401dddd:	pop    edi
6401ddde:	pop    esi
6401dddf:	xor    ecx,ebp
6401dde1:	pop    ebx
6401dde2:	call   0x64010c1e
6401dde7:	leave  
6401dde8:	ret    
6401dde9:	push   ebp
6401ddea:	mov    ebp,esp
6401ddec:	mov    ecx,DWORD PTR [ebp+0x14]
6401ddef:	push   ebx
6401ddf0:	push   esi
6401ddf1:	mov    esi,DWORD PTR [ebp+0x8]
6401ddf4:	xor    ebx,ebx
6401ddf6:	cmp    esi,ebx
6401ddf8:	push   edi
6401ddf9:	mov    edi,DWORD PTR [ecx+0xc]
6401ddfc:	jne    0x6401de1c
6401ddfe:	call   0x640129f0
6401de03:	push   0x16
6401de05:	pop    esi
6401de06:	mov    DWORD PTR [eax],esi
6401de08:	push   ebx
6401de09:	push   ebx
6401de0a:	push   ebx
6401de0b:	push   ebx
6401de0c:	push   ebx
6401de0d:	call   0x64010756
6401de12:	add    esp,0x14
6401de15:	mov    eax,esi
6401de17:	jmp    0x6401dea1
6401de1c:	cmp    DWORD PTR [ebp+0xc],ebx
6401de1f:	jbe    0x6401ddfe
6401de21:	mov    edx,DWORD PTR [ebp+0x10]
6401de24:	cmp    edx,ebx
6401de26:	mov    BYTE PTR [esi],bl
6401de28:	jle    0x6401de2e
6401de2a:	mov    eax,edx
6401de2c:	jmp    0x6401de30
6401de2e:	xor    eax,eax
6401de30:	inc    eax
6401de31:	cmp    DWORD PTR [ebp+0xc],eax
6401de34:	ja     0x6401de44
6401de36:	call   0x640129f0
6401de3b:	push   0x22
6401de3d:	pop    ecx
6401de3e:	mov    DWORD PTR [eax],ecx
6401de40:	mov    esi,ecx
6401de42:	jmp    0x6401de08
6401de44:	cmp    edx,ebx
6401de46:	mov    BYTE PTR [esi],0x30
6401de49:	lea    eax,[esi+0x1]
6401de4c:	jle    0x6401de68
6401de4e:	mov    cl,BYTE PTR [edi]
6401de50:	cmp    cl,bl
6401de52:	je     0x6401de5a
6401de54:	movsx  ecx,cl
6401de57:	inc    edi
6401de58:	jmp    0x6401de5d
6401de5a:	push   0x30
6401de5c:	pop    ecx
6401de5d:	mov    BYTE PTR [eax],cl
6401de5f:	inc    eax
6401de60:	dec    edx
6401de61:	cmp    edx,ebx
6401de63:	jg     0x6401de4e
6401de65:	mov    ecx,DWORD PTR [ebp+0x14]
6401de68:	cmp    edx,ebx
6401de6a:	mov    BYTE PTR [eax],bl
6401de6c:	jl     0x6401de80
6401de6e:	cmp    BYTE PTR [edi],0x35
6401de71:	jl     0x6401de80
6401de73:	jmp    0x6401de78
6401de75:	mov    BYTE PTR [eax],0x30
6401de78:	dec    eax
6401de79:	cmp    BYTE PTR [eax],0x39
6401de7c:	je     0x6401de75
6401de7e:	inc    BYTE PTR [eax]
6401de80:	cmp    BYTE PTR [esi],0x31
6401de83:	jne    0x6401de8a
6401de85:	inc    DWORD PTR [ecx+0x4]
6401de88:	jmp    0x6401de9f
6401de8a:	lea    edi,[esi+0x1]
6401de8d:	push   edi
6401de8e:	call   0x640123f0
6401de93:	inc    eax
6401de94:	push   eax
6401de95:	push   edi
6401de96:	push   esi
6401de97:	call   0x64011c60
6401de9c:	add    esp,0x10
6401de9f:	xor    eax,eax
6401dea1:	pop    edi
6401dea2:	pop    esi
6401dea3:	pop    ebx
6401dea4:	pop    ebp
6401dea5:	ret    
6401dea6:	push   ebp
6401dea7:	mov    ebp,esp
6401dea9:	push   ecx
6401deaa:	mov    edx,DWORD PTR [ebp+0xc]
6401dead:	movzx  eax,WORD PTR [edx+0x6]
6401deb1:	push   ebx
6401deb2:	mov    ecx,eax
6401deb4:	push   esi
6401deb5:	push   edi
6401deb6:	shr    ecx,0x4
6401deb9:	and    eax,0x8000
6401debe:	mov    edi,0x7ff
6401dec3:	and    ecx,edi
6401dec5:	mov    DWORD PTR [ebp+0xc],eax
6401dec8:	mov    eax,DWORD PTR [edx+0x4]
6401decb:	mov    edx,DWORD PTR [edx]
6401decd:	movzx  ebx,cx
6401ded0:	mov    esi,0x80000000
6401ded5:	and    eax,0xfffff
6401deda:	test   ebx,ebx
6401dedc:	mov    DWORD PTR [ebp-0x4],esi
6401dedf:	je     0x6401def4
6401dee1:	cmp    ebx,edi
6401dee3:	je     0x6401deed
6401dee5:	add    ecx,0x3c00
6401deeb:	jmp    0x6401df15
6401deed:	mov    edi,0x7fff
6401def2:	jmp    0x6401df18
6401def4:	xor    ebx,ebx
6401def6:	cmp    eax,ebx
6401def8:	jne    0x6401df0c
6401defa:	cmp    edx,ebx
6401defc:	jne    0x6401df0c
6401defe:	mov    eax,DWORD PTR [ebp+0x8]
6401df01:	mov    cx,WORD PTR [ebp+0xc]
6401df05:	mov    DWORD PTR [eax+0x4],ebx
6401df08:	mov    DWORD PTR [eax],ebx
6401df0a:	jmp    0x6401df58
6401df0c:	add    ecx,0x3c01
6401df12:	mov    DWORD PTR [ebp-0x4],ebx
6401df15:	movzx  edi,cx
6401df18:	mov    ecx,edx
6401df1a:	shr    ecx,0x15
6401df1d:	shl    eax,0xb
6401df20:	or     ecx,eax
6401df22:	or     ecx,DWORD PTR [ebp-0x4]
6401df25:	mov    eax,DWORD PTR [ebp+0x8]
6401df28:	shl    edx,0xb
6401df2b:	test   esi,ecx
6401df2d:	mov    DWORD PTR [eax+0x4],ecx
6401df30:	mov    DWORD PTR [eax],edx
6401df32:	jne    0x6401df53
6401df34:	mov    ecx,DWORD PTR [eax]
6401df36:	mov    edx,DWORD PTR [eax+0x4]
6401df39:	mov    ebx,ecx
6401df3b:	add    edx,edx
6401df3d:	shr    ebx,0x1f
6401df40:	or     edx,ebx
6401df42:	add    ecx,ecx
6401df44:	add    edi,0xffff
6401df4a:	test   esi,edx
6401df4c:	mov    DWORD PTR [eax+0x4],edx
6401df4f:	mov    DWORD PTR [eax],ecx
6401df51:	je     0x6401df34
6401df53:	mov    ecx,DWORD PTR [ebp+0xc]
6401df56:	or     ecx,edi
6401df58:	pop    edi
6401df59:	pop    esi
6401df5a:	mov    WORD PTR [eax+0x8],cx
6401df5e:	pop    ebx
6401df5f:	leave  
6401df60:	ret    
6401df61:	push   ebp
6401df62:	mov    ebp,esp
6401df64:	sub    esp,0x30
6401df67:	mov    eax,ds:0x64029038
6401df6c:	xor    eax,ebp
6401df6e:	mov    DWORD PTR [ebp-0x4],eax
6401df71:	mov    eax,DWORD PTR [ebp+0x14]
6401df74:	push   ebx
6401df75:	mov    ebx,DWORD PTR [ebp+0x10]
6401df78:	push   esi
6401df79:	mov    DWORD PTR [ebp-0x30],eax
6401df7c:	push   edi
6401df7d:	lea    eax,[ebp+0x8]
6401df80:	push   eax
6401df81:	lea    eax,[ebp-0x10]
6401df84:	push   eax
6401df85:	call   0x6401dea6
6401df8a:	pop    ecx
6401df8b:	pop    ecx
6401df8c:	lea    eax,[ebp-0x2c]
6401df8f:	push   eax
6401df90:	push   0x0
6401df92:	push   0x11
6401df94:	sub    esp,0xc
6401df97:	lea    esi,[ebp-0x10]
6401df9a:	mov    edi,esp
6401df9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401df9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401df9e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6401dfa0:	call   0x6401f29d
6401dfa5:	mov    esi,DWORD PTR [ebp-0x30]
6401dfa8:	mov    DWORD PTR [ebx+0x8],eax
6401dfab:	movsx  eax,BYTE PTR [ebp-0x2a]
6401dfaf:	mov    DWORD PTR [ebx],eax
6401dfb1:	movsx  eax,WORD PTR [ebp-0x2c]
6401dfb5:	mov    DWORD PTR [ebx+0x4],eax
6401dfb8:	lea    eax,[ebp-0x28]
6401dfbb:	push   eax
6401dfbc:	push   DWORD PTR [ebp+0x18]
6401dfbf:	push   esi
6401dfc0:	call   0x640125e8
6401dfc5:	add    esp,0x24
6401dfc8:	test   eax,eax
6401dfca:	je     0x6401dfdb
6401dfcc:	xor    eax,eax
6401dfce:	push   eax
6401dfcf:	push   eax
6401dfd0:	push   eax
6401dfd1:	push   eax
6401dfd2:	push   eax
6401dfd3:	call   0x6401065a
6401dfd8:	add    esp,0x14
6401dfdb:	mov    ecx,DWORD PTR [ebp-0x4]
6401dfde:	pop    edi
6401dfdf:	mov    DWORD PTR [ebx+0xc],esi
6401dfe2:	pop    esi
6401dfe3:	mov    eax,ebx
6401dfe5:	xor    ecx,ebp
6401dfe7:	pop    ebx
6401dfe8:	call   0x64010c1e
6401dfed:	leave  
6401dfee:	ret    
6401dfef:	int3   
6401dff0:	push   edi
6401dff1:	push   esi
6401dff2:	push   ebp
6401dff3:	xor    edi,edi
6401dff5:	xor    ebp,ebp
6401dff7:	mov    eax,DWORD PTR [esp+0x14]
6401dffb:	or     eax,eax
6401dffd:	jge    0x6401e014
6401dfff:	inc    edi
6401e000:	inc    ebp
6401e001:	mov    edx,DWORD PTR [esp+0x10]
6401e005:	neg    eax
6401e007:	neg    edx
6401e009:	sbb    eax,0x0
6401e00c:	mov    DWORD PTR [esp+0x14],eax
6401e010:	mov    DWORD PTR [esp+0x10],edx
6401e014:	mov    eax,DWORD PTR [esp+0x1c]
6401e018:	or     eax,eax
6401e01a:	jge    0x6401e030
6401e01c:	inc    edi
6401e01d:	mov    edx,DWORD PTR [esp+0x18]
6401e021:	neg    eax
6401e023:	neg    edx
6401e025:	sbb    eax,0x0
6401e028:	mov    DWORD PTR [esp+0x1c],eax
6401e02c:	mov    DWORD PTR [esp+0x18],edx
6401e030:	or     eax,eax
6401e032:	jne    0x6401e05c
6401e034:	mov    ecx,DWORD PTR [esp+0x18]
6401e038:	mov    eax,DWORD PTR [esp+0x14]
6401e03c:	xor    edx,edx
6401e03e:	div    ecx
6401e040:	mov    ebx,eax
6401e042:	mov    eax,DWORD PTR [esp+0x10]
6401e046:	div    ecx
6401e048:	mov    esi,eax
6401e04a:	mov    eax,ebx
6401e04c:	mul    DWORD PTR [esp+0x18]
6401e050:	mov    ecx,eax
6401e052:	mov    eax,esi
6401e054:	mul    DWORD PTR [esp+0x18]
6401e058:	add    edx,ecx
6401e05a:	jmp    0x6401e0a3
6401e05c:	mov    ebx,eax
6401e05e:	mov    ecx,DWORD PTR [esp+0x18]
6401e062:	mov    edx,DWORD PTR [esp+0x14]
6401e066:	mov    eax,DWORD PTR [esp+0x10]
6401e06a:	shr    ebx,1
6401e06c:	rcr    ecx,1
6401e06e:	shr    edx,1
6401e070:	rcr    eax,1
6401e072:	or     ebx,ebx
6401e074:	jne    0x6401e06a
6401e076:	div    ecx
6401e078:	mov    esi,eax
6401e07a:	mul    DWORD PTR [esp+0x1c]
6401e07e:	mov    ecx,eax
6401e080:	mov    eax,DWORD PTR [esp+0x18]
6401e084:	mul    esi
6401e086:	add    edx,ecx
6401e088:	jb     0x6401e098
6401e08a:	cmp    edx,DWORD PTR [esp+0x14]
6401e08e:	ja     0x6401e098
6401e090:	jb     0x6401e0a1
6401e092:	cmp    eax,DWORD PTR [esp+0x10]
6401e096:	jbe    0x6401e0a1
6401e098:	dec    esi
6401e099:	sub    eax,DWORD PTR [esp+0x18]
6401e09d:	sbb    edx,DWORD PTR [esp+0x1c]
6401e0a1:	xor    ebx,ebx
6401e0a3:	sub    eax,DWORD PTR [esp+0x10]
6401e0a7:	sbb    edx,DWORD PTR [esp+0x14]
6401e0ab:	dec    ebp
6401e0ac:	jns    0x6401e0b5
6401e0ae:	neg    edx
6401e0b0:	neg    eax
6401e0b2:	sbb    edx,0x0
6401e0b5:	mov    ecx,edx
6401e0b7:	mov    edx,ebx
6401e0b9:	mov    ebx,ecx
6401e0bb:	mov    ecx,eax
6401e0bd:	mov    eax,esi
6401e0bf:	dec    edi
6401e0c0:	jne    0x6401e0c9
6401e0c2:	neg    edx
6401e0c4:	neg    eax
6401e0c6:	sbb    edx,0x0
6401e0c9:	pop    ebp
6401e0ca:	pop    esi
6401e0cb:	pop    edi
6401e0cc:	ret    0x10
6401e0cf:	int3   
6401e0d0:	cmp    cl,0x40
6401e0d3:	jae    0x6401e0ea
6401e0d5:	cmp    cl,0x20
6401e0d8:	jae    0x6401e0e0
6401e0da:	shrd   eax,edx,cl
6401e0dd:	shr    edx,cl
6401e0df:	ret    
6401e0e0:	mov    eax,edx
6401e0e2:	xor    edx,edx
6401e0e4:	and    cl,0x1f
6401e0e7:	shr    eax,cl
6401e0e9:	ret    
6401e0ea:	xor    eax,eax
6401e0ec:	xor    edx,edx
6401e0ee:	ret    
6401e0ef:	push   ebp
6401e0f0:	mov    ebp,esp
6401e0f2:	mov    eax,DWORD PTR [ebp+0x10]
6401e0f5:	mov    ecx,DWORD PTR [ebp+0xc]
6401e0f8:	and    eax,0xfff7ffff
6401e0fd:	and    ecx,eax
6401e0ff:	test   ecx,0xfcf0fce0
6401e105:	push   esi
6401e106:	je     0x6401e139
6401e108:	push   edi
6401e109:	mov    edi,DWORD PTR [ebp+0x8]
6401e10c:	xor    esi,esi
6401e10e:	cmp    edi,esi
6401e110:	je     0x6401e11d
6401e112:	push   esi
6401e113:	push   esi
6401e114:	call   0x6401fc91
6401e119:	pop    ecx
6401e11a:	pop    ecx
6401e11b:	mov    DWORD PTR [edi],eax
6401e11d:	call   0x640129f0
6401e122:	push   0x16
6401e124:	pop    edi
6401e125:	push   esi
6401e126:	push   esi
6401e127:	push   esi
6401e128:	push   esi
6401e129:	push   esi
6401e12a:	mov    DWORD PTR [eax],edi
6401e12c:	call   0x64010756
6401e131:	add    esp,0x14
6401e134:	mov    eax,edi
6401e136:	pop    edi
6401e137:	jmp    0x6401e156
6401e139:	mov    esi,DWORD PTR [ebp+0x8]
6401e13c:	test   esi,esi
6401e13e:	push   eax
6401e13f:	push   DWORD PTR [ebp+0xc]
6401e142:	je     0x6401e14d
6401e144:	call   0x6401fc91
6401e149:	mov    DWORD PTR [esi],eax
6401e14b:	jmp    0x6401e152
6401e14d:	call   0x6401fc91
6401e152:	pop    ecx
6401e153:	pop    ecx
6401e154:	xor    eax,eax
6401e156:	pop    esi
6401e157:	pop    ebp
6401e158:	ret    
6401e159:	push   ebp
6401e15a:	mov    ebp,esp
6401e15c:	sub    esp,0x2c
6401e15f:	mov    eax,DWORD PTR [ebp+0x8]
6401e162:	movzx  ecx,WORD PTR [eax+0xa]
6401e166:	push   ebx
6401e167:	mov    ebx,ecx
6401e169:	and    ecx,0x8000
6401e16f:	mov    DWORD PTR [ebp-0x14],ecx
6401e172:	mov    ecx,DWORD PTR [eax+0x6]
6401e175:	mov    DWORD PTR [ebp-0x20],ecx
6401e178:	mov    ecx,DWORD PTR [eax+0x2]
6401e17b:	movzx  eax,WORD PTR [eax]
6401e17e:	and    ebx,0x7fff
6401e184:	sub    ebx,0x3fff
6401e18a:	shl    eax,0x10
6401e18d:	cmp    ebx,0xffffc001
6401e193:	push   edi
6401e194:	mov    DWORD PTR [ebp-0x1c],ecx
6401e197:	mov    DWORD PTR [ebp-0x18],eax
6401e19a:	jne    0x6401e1c3
6401e19c:	xor    ebx,ebx
6401e19e:	xor    eax,eax
6401e1a0:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401e1a4:	jne    0x6401e1b3
6401e1a6:	inc    eax
6401e1a7:	cmp    eax,0x3
6401e1aa:	jl     0x6401e1a0
6401e1ac:	xor    eax,eax
6401e1ae:	jmp    0x6401e658
6401e1b3:	xor    eax,eax
6401e1b5:	lea    edi,[ebp-0x20]
6401e1b8:	stos   DWORD PTR es:[edi],eax
6401e1b9:	stos   DWORD PTR es:[edi],eax
6401e1ba:	push   0x2
6401e1bc:	stos   DWORD PTR es:[edi],eax
6401e1bd:	pop    eax
6401e1be:	jmp    0x6401e658
6401e1c3:	and    DWORD PTR [ebp+0x8],0x0
6401e1c7:	push   esi
6401e1c8:	lea    esi,[ebp-0x20]
6401e1cb:	lea    edi,[ebp-0x2c]
6401e1ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e1cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e1d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e1d1:	mov    esi,DWORD PTR ds:0x6402a008
6401e1d7:	dec    esi
6401e1d8:	lea    ecx,[esi+0x1]
6401e1db:	mov    eax,ecx
6401e1dd:	cdq    
6401e1de:	and    edx,0x1f
6401e1e1:	add    eax,edx
6401e1e3:	sar    eax,0x5
6401e1e6:	mov    edx,ecx
6401e1e8:	and    edx,0x8000001f
6401e1ee:	mov    DWORD PTR [ebp-0x10],ebx
6401e1f1:	mov    DWORD PTR [ebp-0xc],eax
6401e1f4:	jns    0x6401e1fb
6401e1f6:	dec    edx
6401e1f7:	or     edx,0xffffffe0
6401e1fa:	inc    edx
6401e1fb:	lea    edi,[ebp+eax*4-0x20]
6401e1ff:	push   0x1f
6401e201:	xor    eax,eax
6401e203:	pop    ecx
6401e204:	sub    ecx,edx
6401e206:	inc    eax
6401e207:	shl    eax,cl
6401e209:	mov    DWORD PTR [ebp-0x8],ecx
6401e20c:	test   DWORD PTR [edi],eax
6401e20e:	je     0x6401e2a1
6401e214:	mov    eax,DWORD PTR [ebp-0xc]
6401e217:	or     edx,0xffffffff
6401e21a:	shl    edx,cl
6401e21c:	not    edx
6401e21e:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401e222:	jmp    0x6401e229
6401e224:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401e229:	jne    0x6401e233
6401e22b:	inc    eax
6401e22c:	cmp    eax,0x3
6401e22f:	jl     0x6401e224
6401e231:	jmp    0x6401e2a1
6401e233:	mov    eax,esi
6401e235:	cdq    
6401e236:	push   0x1f
6401e238:	pop    ecx
6401e239:	and    edx,ecx
6401e23b:	add    eax,edx
6401e23d:	sar    eax,0x5
6401e240:	and    esi,0x8000001f
6401e246:	jns    0x6401e24d
6401e248:	dec    esi
6401e249:	or     esi,0xffffffe0
6401e24c:	inc    esi
6401e24d:	and    DWORD PTR [ebp-0x4],0x0
6401e251:	sub    ecx,esi
6401e253:	xor    edx,edx
6401e255:	inc    edx
6401e256:	shl    edx,cl
6401e258:	lea    ecx,[ebp+eax*4-0x20]
6401e25c:	mov    esi,DWORD PTR [ecx]
6401e25e:	add    esi,edx
6401e260:	mov    DWORD PTR [ebp+0x8],esi
6401e263:	mov    esi,DWORD PTR [ecx]
6401e265:	cmp    DWORD PTR [ebp+0x8],esi
6401e268:	jb     0x6401e28c
6401e26a:	cmp    DWORD PTR [ebp+0x8],edx
6401e26d:	jmp    0x6401e28a
6401e26f:	test   ecx,ecx
6401e271:	je     0x6401e29e
6401e273:	and    DWORD PTR [ebp-0x4],0x0
6401e277:	lea    ecx,[ebp+eax*4-0x20]
6401e27b:	mov    edx,DWORD PTR [ecx]
6401e27d:	lea    esi,[edx+0x1]
6401e280:	cmp    esi,edx
6401e282:	mov    DWORD PTR [ebp+0x8],esi
6401e285:	jb     0x6401e28c
6401e287:	cmp    esi,0x1
6401e28a:	jae    0x6401e293
6401e28c:	mov    DWORD PTR [ebp-0x4],0x1
6401e293:	dec    eax
6401e294:	mov    edx,DWORD PTR [ebp+0x8]
6401e297:	mov    DWORD PTR [ecx],edx
6401e299:	mov    ecx,DWORD PTR [ebp-0x4]
6401e29c:	jns    0x6401e26f
6401e29e:	mov    DWORD PTR [ebp+0x8],ecx
6401e2a1:	mov    ecx,DWORD PTR [ebp-0x8]
6401e2a4:	or     eax,0xffffffff
6401e2a7:	shl    eax,cl
6401e2a9:	and    DWORD PTR [edi],eax
6401e2ab:	mov    eax,DWORD PTR [ebp-0xc]
6401e2ae:	inc    eax
6401e2af:	cmp    eax,0x3
6401e2b2:	jge    0x6401e2c1
6401e2b4:	push   0x3
6401e2b6:	pop    ecx
6401e2b7:	lea    edi,[ebp+eax*4-0x20]
6401e2bb:	sub    ecx,eax
6401e2bd:	xor    eax,eax
6401e2bf:	rep stos DWORD PTR es:[edi],eax
6401e2c1:	cmp    DWORD PTR [ebp+0x8],0x0
6401e2c5:	je     0x6401e2c8
6401e2c7:	inc    ebx
6401e2c8:	mov    eax,ds:0x6402a004
6401e2cd:	mov    ecx,eax
6401e2cf:	sub    ecx,DWORD PTR ds:0x6402a008
6401e2d5:	cmp    ebx,ecx
6401e2d7:	jge    0x6401e2e6
6401e2d9:	xor    eax,eax
6401e2db:	lea    edi,[ebp-0x20]
6401e2de:	stos   DWORD PTR es:[edi],eax
6401e2df:	stos   DWORD PTR es:[edi],eax
6401e2e0:	stos   DWORD PTR es:[edi],eax
6401e2e1:	jmp    0x6401e4f3
6401e2e6:	cmp    ebx,eax
6401e2e8:	jg     0x6401e4fd
6401e2ee:	sub    eax,DWORD PTR [ebp-0x10]
6401e2f1:	lea    esi,[ebp-0x2c]
6401e2f4:	mov    ecx,eax
6401e2f6:	lea    edi,[ebp-0x20]
6401e2f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e2fa:	cdq    
6401e2fb:	and    edx,0x1f
6401e2fe:	add    eax,edx
6401e300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e301:	mov    edx,ecx
6401e303:	sar    eax,0x5
6401e306:	and    edx,0x8000001f
6401e30c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e30d:	jns    0x6401e314
6401e30f:	dec    edx
6401e310:	or     edx,0xffffffe0
6401e313:	inc    edx
6401e314:	and    DWORD PTR [ebp-0xc],0x0
6401e318:	and    DWORD PTR [ebp+0x8],0x0
6401e31c:	or     edi,0xffffffff
6401e31f:	mov    ecx,edx
6401e321:	shl    edi,cl
6401e323:	mov    DWORD PTR [ebp-0x4],0x20
6401e32a:	sub    DWORD PTR [ebp-0x4],edx
6401e32d:	not    edi
6401e32f:	mov    ebx,DWORD PTR [ebp+0x8]
6401e332:	lea    ebx,[ebp+ebx*4-0x20]
6401e336:	mov    esi,DWORD PTR [ebx]
6401e338:	mov    ecx,esi
6401e33a:	and    ecx,edi
6401e33c:	mov    DWORD PTR [ebp-0x10],ecx
6401e33f:	mov    ecx,edx
6401e341:	shr    esi,cl
6401e343:	mov    ecx,DWORD PTR [ebp-0x4]
6401e346:	or     esi,DWORD PTR [ebp-0xc]
6401e349:	mov    DWORD PTR [ebx],esi
6401e34b:	mov    esi,DWORD PTR [ebp-0x10]
6401e34e:	shl    esi,cl
6401e350:	inc    DWORD PTR [ebp+0x8]
6401e353:	cmp    DWORD PTR [ebp+0x8],0x3
6401e357:	mov    DWORD PTR [ebp-0xc],esi
6401e35a:	jl     0x6401e32f
6401e35c:	mov    esi,eax
6401e35e:	push   0x2
6401e360:	shl    esi,0x2
6401e363:	lea    ecx,[ebp-0x18]
6401e366:	pop    edx
6401e367:	sub    ecx,esi
6401e369:	cmp    edx,eax
6401e36b:	jl     0x6401e375
6401e36d:	mov    esi,DWORD PTR [ecx]
6401e36f:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401e373:	jmp    0x6401e37a
6401e375:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401e37a:	dec    edx
6401e37b:	sub    ecx,0x4
6401e37e:	test   edx,edx
6401e380:	jge    0x6401e369
6401e382:	mov    esi,DWORD PTR ds:0x6402a008
6401e388:	dec    esi
6401e389:	lea    ecx,[esi+0x1]
6401e38c:	mov    eax,ecx
6401e38e:	cdq    
6401e38f:	and    edx,0x1f
6401e392:	add    eax,edx
6401e394:	sar    eax,0x5
6401e397:	mov    edx,ecx
6401e399:	and    edx,0x8000001f
6401e39f:	mov    DWORD PTR [ebp-0xc],eax
6401e3a2:	jns    0x6401e3a9
6401e3a4:	dec    edx
6401e3a5:	or     edx,0xffffffe0
6401e3a8:	inc    edx
6401e3a9:	push   0x1f
6401e3ab:	pop    ecx
6401e3ac:	sub    ecx,edx
6401e3ae:	xor    edx,edx
6401e3b0:	inc    edx
6401e3b1:	shl    edx,cl
6401e3b3:	lea    ebx,[ebp+eax*4-0x20]
6401e3b7:	mov    DWORD PTR [ebp-0x10],ecx
6401e3ba:	test   DWORD PTR [ebx],edx
6401e3bc:	je     0x6401e444
6401e3c2:	or     edx,0xffffffff
6401e3c5:	shl    edx,cl
6401e3c7:	not    edx
6401e3c9:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401e3cd:	jmp    0x6401e3d4
6401e3cf:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401e3d4:	jne    0x6401e3de
6401e3d6:	inc    eax
6401e3d7:	cmp    eax,0x3
6401e3da:	jl     0x6401e3cf
6401e3dc:	jmp    0x6401e444
6401e3de:	mov    eax,esi
6401e3e0:	cdq    
6401e3e1:	push   0x1f
6401e3e3:	pop    ecx
6401e3e4:	and    edx,ecx
6401e3e6:	add    eax,edx
6401e3e8:	sar    eax,0x5
6401e3eb:	and    esi,0x8000001f
6401e3f1:	jns    0x6401e3f8
6401e3f3:	dec    esi
6401e3f4:	or     esi,0xffffffe0
6401e3f7:	inc    esi
6401e3f8:	and    DWORD PTR [ebp+0x8],0x0
6401e3fc:	xor    edx,edx
6401e3fe:	sub    ecx,esi
6401e400:	inc    edx
6401e401:	shl    edx,cl
6401e403:	lea    ecx,[ebp+eax*4-0x20]
6401e407:	mov    esi,DWORD PTR [ecx]
6401e409:	lea    edi,[esi+edx*1]
6401e40c:	cmp    edi,esi
6401e40e:	jb     0x6401e414
6401e410:	cmp    edi,edx
6401e412:	jae    0x6401e41b
6401e414:	mov    DWORD PTR [ebp+0x8],0x1
6401e41b:	mov    DWORD PTR [ecx],edi
6401e41d:	mov    ecx,DWORD PTR [ebp+0x8]
6401e420:	jmp    0x6401e441
6401e422:	test   ecx,ecx
6401e424:	je     0x6401e444
6401e426:	lea    ecx,[ebp+eax*4-0x20]
6401e42a:	mov    edx,DWORD PTR [ecx]
6401e42c:	lea    esi,[edx+0x1]
6401e42f:	xor    edi,edi
6401e431:	cmp    esi,edx
6401e433:	jb     0x6401e43a
6401e435:	cmp    esi,0x1
6401e438:	jae    0x6401e43d
6401e43a:	xor    edi,edi
6401e43c:	inc    edi
6401e43d:	mov    DWORD PTR [ecx],esi
6401e43f:	mov    ecx,edi
6401e441:	dec    eax
6401e442:	jns    0x6401e422
6401e444:	mov    ecx,DWORD PTR [ebp-0x10]
6401e447:	or     eax,0xffffffff
6401e44a:	shl    eax,cl
6401e44c:	and    DWORD PTR [ebx],eax
6401e44e:	mov    eax,DWORD PTR [ebp-0xc]
6401e451:	inc    eax
6401e452:	cmp    eax,0x3
6401e455:	jge    0x6401e464
6401e457:	push   0x3
6401e459:	pop    ecx
6401e45a:	lea    edi,[ebp+eax*4-0x20]
6401e45e:	sub    ecx,eax
6401e460:	xor    eax,eax
6401e462:	rep stos DWORD PTR es:[edi],eax
6401e464:	mov    ecx,DWORD PTR ds:0x6402a00c
6401e46a:	inc    ecx
6401e46b:	mov    eax,ecx
6401e46d:	cdq    
6401e46e:	and    edx,0x1f
6401e471:	add    eax,edx
6401e473:	mov    edx,ecx
6401e475:	sar    eax,0x5
6401e478:	and    edx,0x8000001f
6401e47e:	jns    0x6401e485
6401e480:	dec    edx
6401e481:	or     edx,0xffffffe0
6401e484:	inc    edx
6401e485:	and    DWORD PTR [ebp-0xc],0x0
6401e489:	and    DWORD PTR [ebp+0x8],0x0
6401e48d:	or     edi,0xffffffff
6401e490:	mov    ecx,edx
6401e492:	shl    edi,cl
6401e494:	mov    DWORD PTR [ebp-0x4],0x20
6401e49b:	sub    DWORD PTR [ebp-0x4],edx
6401e49e:	not    edi
6401e4a0:	mov    ebx,DWORD PTR [ebp+0x8]
6401e4a3:	lea    ebx,[ebp+ebx*4-0x20]
6401e4a7:	mov    esi,DWORD PTR [ebx]
6401e4a9:	mov    ecx,esi
6401e4ab:	and    ecx,edi
6401e4ad:	mov    DWORD PTR [ebp-0x10],ecx
6401e4b0:	mov    ecx,edx
6401e4b2:	shr    esi,cl
6401e4b4:	mov    ecx,DWORD PTR [ebp-0x4]
6401e4b7:	or     esi,DWORD PTR [ebp-0xc]
6401e4ba:	mov    DWORD PTR [ebx],esi
6401e4bc:	mov    esi,DWORD PTR [ebp-0x10]
6401e4bf:	shl    esi,cl
6401e4c1:	inc    DWORD PTR [ebp+0x8]
6401e4c4:	cmp    DWORD PTR [ebp+0x8],0x3
6401e4c8:	mov    DWORD PTR [ebp-0xc],esi
6401e4cb:	jl     0x6401e4a0
6401e4cd:	mov    esi,eax
6401e4cf:	push   0x2
6401e4d1:	shl    esi,0x2
6401e4d4:	lea    ecx,[ebp-0x18]
6401e4d7:	pop    edx
6401e4d8:	sub    ecx,esi
6401e4da:	cmp    edx,eax
6401e4dc:	jl     0x6401e4e6
6401e4de:	mov    esi,DWORD PTR [ecx]
6401e4e0:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401e4e4:	jmp    0x6401e4eb
6401e4e6:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401e4eb:	dec    edx
6401e4ec:	sub    ecx,0x4
6401e4ef:	test   edx,edx
6401e4f1:	jge    0x6401e4da
6401e4f3:	push   0x2
6401e4f5:	xor    ebx,ebx
6401e4f7:	pop    eax
6401e4f8:	jmp    0x6401e657
6401e4fd:	cmp    ebx,DWORD PTR ds:0x6402a000
6401e503:	mov    ecx,DWORD PTR ds:0x6402a00c
6401e509:	jl     0x6401e5bc
6401e50f:	xor    eax,eax
6401e511:	lea    edi,[ebp-0x20]
6401e514:	stos   DWORD PTR es:[edi],eax
6401e515:	stos   DWORD PTR es:[edi],eax
6401e516:	stos   DWORD PTR es:[edi],eax
6401e517:	or     DWORD PTR [ebp-0x20],0x80000000
6401e51e:	mov    eax,ecx
6401e520:	cdq    
6401e521:	and    edx,0x1f
6401e524:	add    eax,edx
6401e526:	mov    edx,ecx
6401e528:	sar    eax,0x5
6401e52b:	and    edx,0x8000001f
6401e531:	jns    0x6401e538
6401e533:	dec    edx
6401e534:	or     edx,0xffffffe0
6401e537:	inc    edx
6401e538:	and    DWORD PTR [ebp-0xc],0x0
6401e53c:	and    DWORD PTR [ebp+0x8],0x0
6401e540:	or     edi,0xffffffff
6401e543:	mov    ecx,edx
6401e545:	shl    edi,cl
6401e547:	mov    DWORD PTR [ebp-0x4],0x20
6401e54e:	sub    DWORD PTR [ebp-0x4],edx
6401e551:	not    edi
6401e553:	mov    ebx,DWORD PTR [ebp+0x8]
6401e556:	lea    ebx,[ebp+ebx*4-0x20]
6401e55a:	mov    esi,DWORD PTR [ebx]
6401e55c:	mov    ecx,esi
6401e55e:	and    ecx,edi
6401e560:	mov    DWORD PTR [ebp-0x10],ecx
6401e563:	mov    ecx,edx
6401e565:	shr    esi,cl
6401e567:	mov    ecx,DWORD PTR [ebp-0x4]
6401e56a:	or     esi,DWORD PTR [ebp-0xc]
6401e56d:	mov    DWORD PTR [ebx],esi
6401e56f:	mov    esi,DWORD PTR [ebp-0x10]
6401e572:	shl    esi,cl
6401e574:	inc    DWORD PTR [ebp+0x8]
6401e577:	cmp    DWORD PTR [ebp+0x8],0x3
6401e57b:	mov    DWORD PTR [ebp-0xc],esi
6401e57e:	jl     0x6401e553
6401e580:	mov    esi,eax
6401e582:	push   0x2
6401e584:	shl    esi,0x2
6401e587:	lea    ecx,[ebp-0x18]
6401e58a:	pop    edx
6401e58b:	sub    ecx,esi
6401e58d:	cmp    edx,eax
6401e58f:	jl     0x6401e599
6401e591:	mov    esi,DWORD PTR [ecx]
6401e593:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401e597:	jmp    0x6401e59e
6401e599:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401e59e:	dec    edx
6401e59f:	sub    ecx,0x4
6401e5a2:	test   edx,edx
6401e5a4:	jge    0x6401e58d
6401e5a6:	mov    eax,ds:0x6402a000
6401e5ab:	mov    ecx,DWORD PTR ds:0x6402a014
6401e5b1:	lea    ebx,[ecx+eax*1]
6401e5b4:	xor    eax,eax
6401e5b6:	inc    eax
6401e5b7:	jmp    0x6401e657
6401e5bc:	mov    eax,ds:0x6402a014
6401e5c1:	and    DWORD PTR [ebp-0x20],0x7fffffff
6401e5c8:	add    ebx,eax
6401e5ca:	mov    eax,ecx
6401e5cc:	cdq    
6401e5cd:	and    edx,0x1f
6401e5d0:	add    eax,edx
6401e5d2:	mov    edx,ecx
6401e5d4:	sar    eax,0x5
6401e5d7:	and    edx,0x8000001f
6401e5dd:	jns    0x6401e5e4
6401e5df:	dec    edx
6401e5e0:	or     edx,0xffffffe0
6401e5e3:	inc    edx
6401e5e4:	and    DWORD PTR [ebp-0xc],0x0
6401e5e8:	and    DWORD PTR [ebp+0x8],0x0
6401e5ec:	or     esi,0xffffffff
6401e5ef:	mov    ecx,edx
6401e5f1:	shl    esi,cl
6401e5f3:	mov    DWORD PTR [ebp-0x4],0x20
6401e5fa:	sub    DWORD PTR [ebp-0x4],edx
6401e5fd:	not    esi
6401e5ff:	mov    ecx,DWORD PTR [ebp+0x8]
6401e602:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
6401e606:	mov    ecx,edi
6401e608:	and    ecx,esi
6401e60a:	mov    DWORD PTR [ebp-0x10],ecx
6401e60d:	mov    ecx,edx
6401e60f:	shr    edi,cl
6401e611:	mov    ecx,DWORD PTR [ebp+0x8]
6401e614:	or     edi,DWORD PTR [ebp-0xc]
6401e617:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6401e61b:	mov    edi,DWORD PTR [ebp-0x10]
6401e61e:	mov    ecx,DWORD PTR [ebp-0x4]
6401e621:	shl    edi,cl
6401e623:	inc    DWORD PTR [ebp+0x8]
6401e626:	cmp    DWORD PTR [ebp+0x8],0x3
6401e62a:	mov    DWORD PTR [ebp-0xc],edi
6401e62d:	jl     0x6401e5ff
6401e62f:	mov    esi,eax
6401e631:	push   0x2
6401e633:	shl    esi,0x2
6401e636:	lea    ecx,[ebp-0x18]
6401e639:	pop    edx
6401e63a:	sub    ecx,esi
6401e63c:	cmp    edx,eax
6401e63e:	jl     0x6401e648
6401e640:	mov    esi,DWORD PTR [ecx]
6401e642:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401e646:	jmp    0x6401e64d
6401e648:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401e64d:	dec    edx
6401e64e:	sub    ecx,0x4
6401e651:	test   edx,edx
6401e653:	jge    0x6401e63c
6401e655:	xor    eax,eax
6401e657:	pop    esi
6401e658:	push   0x1f
6401e65a:	pop    ecx
6401e65b:	sub    ecx,DWORD PTR ds:0x6402a00c
6401e661:	shl    ebx,cl
6401e663:	mov    ecx,DWORD PTR [ebp-0x14]
6401e666:	neg    ecx
6401e668:	sbb    ecx,ecx
6401e66a:	and    ecx,0x80000000
6401e670:	or     ebx,ecx
6401e672:	mov    ecx,DWORD PTR ds:0x6402a010
6401e678:	or     ebx,DWORD PTR [ebp-0x20]
6401e67b:	cmp    ecx,0x40
6401e67e:	jne    0x6401e68d
6401e680:	mov    ecx,DWORD PTR [ebp+0xc]
6401e683:	mov    edx,DWORD PTR [ebp-0x1c]
6401e686:	mov    DWORD PTR [ecx+0x4],ebx
6401e689:	mov    DWORD PTR [ecx],edx
6401e68b:	jmp    0x6401e697
6401e68d:	cmp    ecx,0x20
6401e690:	jne    0x6401e697
6401e692:	mov    ecx,DWORD PTR [ebp+0xc]
6401e695:	mov    DWORD PTR [ecx],ebx
6401e697:	pop    edi
6401e698:	pop    ebx
6401e699:	leave  
6401e69a:	ret    
6401e69b:	push   ebp
6401e69c:	mov    ebp,esp
6401e69e:	sub    esp,0x2c
6401e6a1:	mov    eax,DWORD PTR [ebp+0x8]
6401e6a4:	movzx  ecx,WORD PTR [eax+0xa]
6401e6a8:	push   ebx
6401e6a9:	mov    ebx,ecx
6401e6ab:	and    ecx,0x8000
6401e6b1:	mov    DWORD PTR [ebp-0x14],ecx
6401e6b4:	mov    ecx,DWORD PTR [eax+0x6]
6401e6b7:	mov    DWORD PTR [ebp-0x20],ecx
6401e6ba:	mov    ecx,DWORD PTR [eax+0x2]
6401e6bd:	movzx  eax,WORD PTR [eax]
6401e6c0:	and    ebx,0x7fff
6401e6c6:	sub    ebx,0x3fff
6401e6cc:	shl    eax,0x10
6401e6cf:	cmp    ebx,0xffffc001
6401e6d5:	push   edi
6401e6d6:	mov    DWORD PTR [ebp-0x1c],ecx
6401e6d9:	mov    DWORD PTR [ebp-0x18],eax
6401e6dc:	jne    0x6401e705
6401e6de:	xor    ebx,ebx
6401e6e0:	xor    eax,eax
6401e6e2:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401e6e6:	jne    0x6401e6f5
6401e6e8:	inc    eax
6401e6e9:	cmp    eax,0x3
6401e6ec:	jl     0x6401e6e2
6401e6ee:	xor    eax,eax
6401e6f0:	jmp    0x6401eb9a
6401e6f5:	xor    eax,eax
6401e6f7:	lea    edi,[ebp-0x20]
6401e6fa:	stos   DWORD PTR es:[edi],eax
6401e6fb:	stos   DWORD PTR es:[edi],eax
6401e6fc:	push   0x2
6401e6fe:	stos   DWORD PTR es:[edi],eax
6401e6ff:	pop    eax
6401e700:	jmp    0x6401eb9a
6401e705:	and    DWORD PTR [ebp+0x8],0x0
6401e709:	push   esi
6401e70a:	lea    esi,[ebp-0x20]
6401e70d:	lea    edi,[ebp-0x2c]
6401e710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e713:	mov    esi,DWORD PTR ds:0x6402a020
6401e719:	dec    esi
6401e71a:	lea    ecx,[esi+0x1]
6401e71d:	mov    eax,ecx
6401e71f:	cdq    
6401e720:	and    edx,0x1f
6401e723:	add    eax,edx
6401e725:	sar    eax,0x5
6401e728:	mov    edx,ecx
6401e72a:	and    edx,0x8000001f
6401e730:	mov    DWORD PTR [ebp-0x10],ebx
6401e733:	mov    DWORD PTR [ebp-0xc],eax
6401e736:	jns    0x6401e73d
6401e738:	dec    edx
6401e739:	or     edx,0xffffffe0
6401e73c:	inc    edx
6401e73d:	lea    edi,[ebp+eax*4-0x20]
6401e741:	push   0x1f
6401e743:	xor    eax,eax
6401e745:	pop    ecx
6401e746:	sub    ecx,edx
6401e748:	inc    eax
6401e749:	shl    eax,cl
6401e74b:	mov    DWORD PTR [ebp-0x8],ecx
6401e74e:	test   DWORD PTR [edi],eax
6401e750:	je     0x6401e7e3
6401e756:	mov    eax,DWORD PTR [ebp-0xc]
6401e759:	or     edx,0xffffffff
6401e75c:	shl    edx,cl
6401e75e:	not    edx
6401e760:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401e764:	jmp    0x6401e76b
6401e766:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401e76b:	jne    0x6401e775
6401e76d:	inc    eax
6401e76e:	cmp    eax,0x3
6401e771:	jl     0x6401e766
6401e773:	jmp    0x6401e7e3
6401e775:	mov    eax,esi
6401e777:	cdq    
6401e778:	push   0x1f
6401e77a:	pop    ecx
6401e77b:	and    edx,ecx
6401e77d:	add    eax,edx
6401e77f:	sar    eax,0x5
6401e782:	and    esi,0x8000001f
6401e788:	jns    0x6401e78f
6401e78a:	dec    esi
6401e78b:	or     esi,0xffffffe0
6401e78e:	inc    esi
6401e78f:	and    DWORD PTR [ebp-0x4],0x0
6401e793:	sub    ecx,esi
6401e795:	xor    edx,edx
6401e797:	inc    edx
6401e798:	shl    edx,cl
6401e79a:	lea    ecx,[ebp+eax*4-0x20]
6401e79e:	mov    esi,DWORD PTR [ecx]
6401e7a0:	add    esi,edx
6401e7a2:	mov    DWORD PTR [ebp+0x8],esi
6401e7a5:	mov    esi,DWORD PTR [ecx]
6401e7a7:	cmp    DWORD PTR [ebp+0x8],esi
6401e7aa:	jb     0x6401e7ce
6401e7ac:	cmp    DWORD PTR [ebp+0x8],edx
6401e7af:	jmp    0x6401e7cc
6401e7b1:	test   ecx,ecx
6401e7b3:	je     0x6401e7e0
6401e7b5:	and    DWORD PTR [ebp-0x4],0x0
6401e7b9:	lea    ecx,[ebp+eax*4-0x20]
6401e7bd:	mov    edx,DWORD PTR [ecx]
6401e7bf:	lea    esi,[edx+0x1]
6401e7c2:	cmp    esi,edx
6401e7c4:	mov    DWORD PTR [ebp+0x8],esi
6401e7c7:	jb     0x6401e7ce
6401e7c9:	cmp    esi,0x1
6401e7cc:	jae    0x6401e7d5
6401e7ce:	mov    DWORD PTR [ebp-0x4],0x1
6401e7d5:	dec    eax
6401e7d6:	mov    edx,DWORD PTR [ebp+0x8]
6401e7d9:	mov    DWORD PTR [ecx],edx
6401e7db:	mov    ecx,DWORD PTR [ebp-0x4]
6401e7de:	jns    0x6401e7b1
6401e7e0:	mov    DWORD PTR [ebp+0x8],ecx
6401e7e3:	mov    ecx,DWORD PTR [ebp-0x8]
6401e7e6:	or     eax,0xffffffff
6401e7e9:	shl    eax,cl
6401e7eb:	and    DWORD PTR [edi],eax
6401e7ed:	mov    eax,DWORD PTR [ebp-0xc]
6401e7f0:	inc    eax
6401e7f1:	cmp    eax,0x3
6401e7f4:	jge    0x6401e803
6401e7f6:	push   0x3
6401e7f8:	pop    ecx
6401e7f9:	lea    edi,[ebp+eax*4-0x20]
6401e7fd:	sub    ecx,eax
6401e7ff:	xor    eax,eax
6401e801:	rep stos DWORD PTR es:[edi],eax
6401e803:	cmp    DWORD PTR [ebp+0x8],0x0
6401e807:	je     0x6401e80a
6401e809:	inc    ebx
6401e80a:	mov    eax,ds:0x6402a01c
6401e80f:	mov    ecx,eax
6401e811:	sub    ecx,DWORD PTR ds:0x6402a020
6401e817:	cmp    ebx,ecx
6401e819:	jge    0x6401e828
6401e81b:	xor    eax,eax
6401e81d:	lea    edi,[ebp-0x20]
6401e820:	stos   DWORD PTR es:[edi],eax
6401e821:	stos   DWORD PTR es:[edi],eax
6401e822:	stos   DWORD PTR es:[edi],eax
6401e823:	jmp    0x6401ea35
6401e828:	cmp    ebx,eax
6401e82a:	jg     0x6401ea3f
6401e830:	sub    eax,DWORD PTR [ebp-0x10]
6401e833:	lea    esi,[ebp-0x2c]
6401e836:	mov    ecx,eax
6401e838:	lea    edi,[ebp-0x20]
6401e83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e83c:	cdq    
6401e83d:	and    edx,0x1f
6401e840:	add    eax,edx
6401e842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e843:	mov    edx,ecx
6401e845:	sar    eax,0x5
6401e848:	and    edx,0x8000001f
6401e84e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e84f:	jns    0x6401e856
6401e851:	dec    edx
6401e852:	or     edx,0xffffffe0
6401e855:	inc    edx
6401e856:	and    DWORD PTR [ebp-0xc],0x0
6401e85a:	and    DWORD PTR [ebp+0x8],0x0
6401e85e:	or     edi,0xffffffff
6401e861:	mov    ecx,edx
6401e863:	shl    edi,cl
6401e865:	mov    DWORD PTR [ebp-0x4],0x20
6401e86c:	sub    DWORD PTR [ebp-0x4],edx
6401e86f:	not    edi
6401e871:	mov    ebx,DWORD PTR [ebp+0x8]
6401e874:	lea    ebx,[ebp+ebx*4-0x20]
6401e878:	mov    esi,DWORD PTR [ebx]
6401e87a:	mov    ecx,esi
6401e87c:	and    ecx,edi
6401e87e:	mov    DWORD PTR [ebp-0x10],ecx
6401e881:	mov    ecx,edx
6401e883:	shr    esi,cl
6401e885:	mov    ecx,DWORD PTR [ebp-0x4]
6401e888:	or     esi,DWORD PTR [ebp-0xc]
6401e88b:	mov    DWORD PTR [ebx],esi
6401e88d:	mov    esi,DWORD PTR [ebp-0x10]
6401e890:	shl    esi,cl
6401e892:	inc    DWORD PTR [ebp+0x8]
6401e895:	cmp    DWORD PTR [ebp+0x8],0x3
6401e899:	mov    DWORD PTR [ebp-0xc],esi
6401e89c:	jl     0x6401e871
6401e89e:	mov    esi,eax
6401e8a0:	push   0x2
6401e8a2:	shl    esi,0x2
6401e8a5:	lea    ecx,[ebp-0x18]
6401e8a8:	pop    edx
6401e8a9:	sub    ecx,esi
6401e8ab:	cmp    edx,eax
6401e8ad:	jl     0x6401e8b7
6401e8af:	mov    esi,DWORD PTR [ecx]
6401e8b1:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401e8b5:	jmp    0x6401e8bc
6401e8b7:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401e8bc:	dec    edx
6401e8bd:	sub    ecx,0x4
6401e8c0:	test   edx,edx
6401e8c2:	jge    0x6401e8ab
6401e8c4:	mov    esi,DWORD PTR ds:0x6402a020
6401e8ca:	dec    esi
6401e8cb:	lea    ecx,[esi+0x1]
6401e8ce:	mov    eax,ecx
6401e8d0:	cdq    
6401e8d1:	and    edx,0x1f
6401e8d4:	add    eax,edx
6401e8d6:	sar    eax,0x5
6401e8d9:	mov    edx,ecx
6401e8db:	and    edx,0x8000001f
6401e8e1:	mov    DWORD PTR [ebp-0xc],eax
6401e8e4:	jns    0x6401e8eb
6401e8e6:	dec    edx
6401e8e7:	or     edx,0xffffffe0
6401e8ea:	inc    edx
6401e8eb:	push   0x1f
6401e8ed:	pop    ecx
6401e8ee:	sub    ecx,edx
6401e8f0:	xor    edx,edx
6401e8f2:	inc    edx
6401e8f3:	shl    edx,cl
6401e8f5:	lea    ebx,[ebp+eax*4-0x20]
6401e8f9:	mov    DWORD PTR [ebp-0x10],ecx
6401e8fc:	test   DWORD PTR [ebx],edx
6401e8fe:	je     0x6401e986
6401e904:	or     edx,0xffffffff
6401e907:	shl    edx,cl
6401e909:	not    edx
6401e90b:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401e90f:	jmp    0x6401e916
6401e911:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401e916:	jne    0x6401e920
6401e918:	inc    eax
6401e919:	cmp    eax,0x3
6401e91c:	jl     0x6401e911
6401e91e:	jmp    0x6401e986
6401e920:	mov    eax,esi
6401e922:	cdq    
6401e923:	push   0x1f
6401e925:	pop    ecx
6401e926:	and    edx,ecx
6401e928:	add    eax,edx
6401e92a:	sar    eax,0x5
6401e92d:	and    esi,0x8000001f
6401e933:	jns    0x6401e93a
6401e935:	dec    esi
6401e936:	or     esi,0xffffffe0
6401e939:	inc    esi
6401e93a:	and    DWORD PTR [ebp+0x8],0x0
6401e93e:	xor    edx,edx
6401e940:	sub    ecx,esi
6401e942:	inc    edx
6401e943:	shl    edx,cl
6401e945:	lea    ecx,[ebp+eax*4-0x20]
6401e949:	mov    esi,DWORD PTR [ecx]
6401e94b:	lea    edi,[esi+edx*1]
6401e94e:	cmp    edi,esi
6401e950:	jb     0x6401e956
6401e952:	cmp    edi,edx
6401e954:	jae    0x6401e95d
6401e956:	mov    DWORD PTR [ebp+0x8],0x1
6401e95d:	mov    DWORD PTR [ecx],edi
6401e95f:	mov    ecx,DWORD PTR [ebp+0x8]
6401e962:	jmp    0x6401e983
6401e964:	test   ecx,ecx
6401e966:	je     0x6401e986
6401e968:	lea    ecx,[ebp+eax*4-0x20]
6401e96c:	mov    edx,DWORD PTR [ecx]
6401e96e:	lea    esi,[edx+0x1]
6401e971:	xor    edi,edi
6401e973:	cmp    esi,edx
6401e975:	jb     0x6401e97c
6401e977:	cmp    esi,0x1
6401e97a:	jae    0x6401e97f
6401e97c:	xor    edi,edi
6401e97e:	inc    edi
6401e97f:	mov    DWORD PTR [ecx],esi
6401e981:	mov    ecx,edi
6401e983:	dec    eax
6401e984:	jns    0x6401e964
6401e986:	mov    ecx,DWORD PTR [ebp-0x10]
6401e989:	or     eax,0xffffffff
6401e98c:	shl    eax,cl
6401e98e:	and    DWORD PTR [ebx],eax
6401e990:	mov    eax,DWORD PTR [ebp-0xc]
6401e993:	inc    eax
6401e994:	cmp    eax,0x3
6401e997:	jge    0x6401e9a6
6401e999:	push   0x3
6401e99b:	pop    ecx
6401e99c:	lea    edi,[ebp+eax*4-0x20]
6401e9a0:	sub    ecx,eax
6401e9a2:	xor    eax,eax
6401e9a4:	rep stos DWORD PTR es:[edi],eax
6401e9a6:	mov    ecx,DWORD PTR ds:0x6402a024
6401e9ac:	inc    ecx
6401e9ad:	mov    eax,ecx
6401e9af:	cdq    
6401e9b0:	and    edx,0x1f
6401e9b3:	add    eax,edx
6401e9b5:	mov    edx,ecx
6401e9b7:	sar    eax,0x5
6401e9ba:	and    edx,0x8000001f
6401e9c0:	jns    0x6401e9c7
6401e9c2:	dec    edx
6401e9c3:	or     edx,0xffffffe0
6401e9c6:	inc    edx
6401e9c7:	and    DWORD PTR [ebp-0xc],0x0
6401e9cb:	and    DWORD PTR [ebp+0x8],0x0
6401e9cf:	or     edi,0xffffffff
6401e9d2:	mov    ecx,edx
6401e9d4:	shl    edi,cl
6401e9d6:	mov    DWORD PTR [ebp-0x4],0x20
6401e9dd:	sub    DWORD PTR [ebp-0x4],edx
6401e9e0:	not    edi
6401e9e2:	mov    ebx,DWORD PTR [ebp+0x8]
6401e9e5:	lea    ebx,[ebp+ebx*4-0x20]
6401e9e9:	mov    esi,DWORD PTR [ebx]
6401e9eb:	mov    ecx,esi
6401e9ed:	and    ecx,edi
6401e9ef:	mov    DWORD PTR [ebp-0x10],ecx
6401e9f2:	mov    ecx,edx
6401e9f4:	shr    esi,cl
6401e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
6401e9f9:	or     esi,DWORD PTR [ebp-0xc]
6401e9fc:	mov    DWORD PTR [ebx],esi
6401e9fe:	mov    esi,DWORD PTR [ebp-0x10]
6401ea01:	shl    esi,cl
6401ea03:	inc    DWORD PTR [ebp+0x8]
6401ea06:	cmp    DWORD PTR [ebp+0x8],0x3
6401ea0a:	mov    DWORD PTR [ebp-0xc],esi
6401ea0d:	jl     0x6401e9e2
6401ea0f:	mov    esi,eax
6401ea11:	push   0x2
6401ea13:	shl    esi,0x2
6401ea16:	lea    ecx,[ebp-0x18]
6401ea19:	pop    edx
6401ea1a:	sub    ecx,esi
6401ea1c:	cmp    edx,eax
6401ea1e:	jl     0x6401ea28
6401ea20:	mov    esi,DWORD PTR [ecx]
6401ea22:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401ea26:	jmp    0x6401ea2d
6401ea28:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401ea2d:	dec    edx
6401ea2e:	sub    ecx,0x4
6401ea31:	test   edx,edx
6401ea33:	jge    0x6401ea1c
6401ea35:	push   0x2
6401ea37:	xor    ebx,ebx
6401ea39:	pop    eax
6401ea3a:	jmp    0x6401eb99
6401ea3f:	cmp    ebx,DWORD PTR ds:0x6402a018
6401ea45:	mov    ecx,DWORD PTR ds:0x6402a024
6401ea4b:	jl     0x6401eafe
6401ea51:	xor    eax,eax
6401ea53:	lea    edi,[ebp-0x20]
6401ea56:	stos   DWORD PTR es:[edi],eax
6401ea57:	stos   DWORD PTR es:[edi],eax
6401ea58:	stos   DWORD PTR es:[edi],eax
6401ea59:	or     DWORD PTR [ebp-0x20],0x80000000
6401ea60:	mov    eax,ecx
6401ea62:	cdq    
6401ea63:	and    edx,0x1f
6401ea66:	add    eax,edx
6401ea68:	mov    edx,ecx
6401ea6a:	sar    eax,0x5
6401ea6d:	and    edx,0x8000001f
6401ea73:	jns    0x6401ea7a
6401ea75:	dec    edx
6401ea76:	or     edx,0xffffffe0
6401ea79:	inc    edx
6401ea7a:	and    DWORD PTR [ebp-0xc],0x0
6401ea7e:	and    DWORD PTR [ebp+0x8],0x0
6401ea82:	or     edi,0xffffffff
6401ea85:	mov    ecx,edx
6401ea87:	shl    edi,cl
6401ea89:	mov    DWORD PTR [ebp-0x4],0x20
6401ea90:	sub    DWORD PTR [ebp-0x4],edx
6401ea93:	not    edi
6401ea95:	mov    ebx,DWORD PTR [ebp+0x8]
6401ea98:	lea    ebx,[ebp+ebx*4-0x20]
6401ea9c:	mov    esi,DWORD PTR [ebx]
6401ea9e:	mov    ecx,esi
6401eaa0:	and    ecx,edi
6401eaa2:	mov    DWORD PTR [ebp-0x10],ecx
6401eaa5:	mov    ecx,edx
6401eaa7:	shr    esi,cl
6401eaa9:	mov    ecx,DWORD PTR [ebp-0x4]
6401eaac:	or     esi,DWORD PTR [ebp-0xc]
6401eaaf:	mov    DWORD PTR [ebx],esi
6401eab1:	mov    esi,DWORD PTR [ebp-0x10]
6401eab4:	shl    esi,cl
6401eab6:	inc    DWORD PTR [ebp+0x8]
6401eab9:	cmp    DWORD PTR [ebp+0x8],0x3
6401eabd:	mov    DWORD PTR [ebp-0xc],esi
6401eac0:	jl     0x6401ea95
6401eac2:	mov    esi,eax
6401eac4:	push   0x2
6401eac6:	shl    esi,0x2
6401eac9:	lea    ecx,[ebp-0x18]
6401eacc:	pop    edx
6401eacd:	sub    ecx,esi
6401eacf:	cmp    edx,eax
6401ead1:	jl     0x6401eadb
6401ead3:	mov    esi,DWORD PTR [ecx]
6401ead5:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401ead9:	jmp    0x6401eae0
6401eadb:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401eae0:	dec    edx
6401eae1:	sub    ecx,0x4
6401eae4:	test   edx,edx
6401eae6:	jge    0x6401eacf
6401eae8:	mov    eax,ds:0x6402a018
6401eaed:	mov    ecx,DWORD PTR ds:0x6402a02c
6401eaf3:	lea    ebx,[ecx+eax*1]
6401eaf6:	xor    eax,eax
6401eaf8:	inc    eax
6401eaf9:	jmp    0x6401eb99
6401eafe:	mov    eax,ds:0x6402a02c
6401eb03:	and    DWORD PTR [ebp-0x20],0x7fffffff
6401eb0a:	add    ebx,eax
6401eb0c:	mov    eax,ecx
6401eb0e:	cdq    
6401eb0f:	and    edx,0x1f
6401eb12:	add    eax,edx
6401eb14:	mov    edx,ecx
6401eb16:	sar    eax,0x5
6401eb19:	and    edx,0x8000001f
6401eb1f:	jns    0x6401eb26
6401eb21:	dec    edx
6401eb22:	or     edx,0xffffffe0
6401eb25:	inc    edx
6401eb26:	and    DWORD PTR [ebp-0xc],0x0
6401eb2a:	and    DWORD PTR [ebp+0x8],0x0
6401eb2e:	or     esi,0xffffffff
6401eb31:	mov    ecx,edx
6401eb33:	shl    esi,cl
6401eb35:	mov    DWORD PTR [ebp-0x4],0x20
6401eb3c:	sub    DWORD PTR [ebp-0x4],edx
6401eb3f:	not    esi
6401eb41:	mov    ecx,DWORD PTR [ebp+0x8]
6401eb44:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
6401eb48:	mov    ecx,edi
6401eb4a:	and    ecx,esi
6401eb4c:	mov    DWORD PTR [ebp-0x10],ecx
6401eb4f:	mov    ecx,edx
6401eb51:	shr    edi,cl
6401eb53:	mov    ecx,DWORD PTR [ebp+0x8]
6401eb56:	or     edi,DWORD PTR [ebp-0xc]
6401eb59:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6401eb5d:	mov    edi,DWORD PTR [ebp-0x10]
6401eb60:	mov    ecx,DWORD PTR [ebp-0x4]
6401eb63:	shl    edi,cl
6401eb65:	inc    DWORD PTR [ebp+0x8]
6401eb68:	cmp    DWORD PTR [ebp+0x8],0x3
6401eb6c:	mov    DWORD PTR [ebp-0xc],edi
6401eb6f:	jl     0x6401eb41
6401eb71:	mov    esi,eax
6401eb73:	push   0x2
6401eb75:	shl    esi,0x2
6401eb78:	lea    ecx,[ebp-0x18]
6401eb7b:	pop    edx
6401eb7c:	sub    ecx,esi
6401eb7e:	cmp    edx,eax
6401eb80:	jl     0x6401eb8a
6401eb82:	mov    esi,DWORD PTR [ecx]
6401eb84:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401eb88:	jmp    0x6401eb8f
6401eb8a:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401eb8f:	dec    edx
6401eb90:	sub    ecx,0x4
6401eb93:	test   edx,edx
6401eb95:	jge    0x6401eb7e
6401eb97:	xor    eax,eax
6401eb99:	pop    esi
6401eb9a:	push   0x1f
6401eb9c:	pop    ecx
6401eb9d:	sub    ecx,DWORD PTR ds:0x6402a024
6401eba3:	shl    ebx,cl
6401eba5:	mov    ecx,DWORD PTR [ebp-0x14]
6401eba8:	neg    ecx
6401ebaa:	sbb    ecx,ecx
6401ebac:	and    ecx,0x80000000
6401ebb2:	or     ebx,ecx
6401ebb4:	mov    ecx,DWORD PTR ds:0x6402a028
6401ebba:	or     ebx,DWORD PTR [ebp-0x20]
6401ebbd:	cmp    ecx,0x40
6401ebc0:	jne    0x6401ebcf
6401ebc2:	mov    ecx,DWORD PTR [ebp+0xc]
6401ebc5:	mov    edx,DWORD PTR [ebp-0x1c]
6401ebc8:	mov    DWORD PTR [ecx+0x4],ebx
6401ebcb:	mov    DWORD PTR [ecx],edx
6401ebcd:	jmp    0x6401ebd9
6401ebcf:	cmp    ecx,0x20
6401ebd2:	jne    0x6401ebd9
6401ebd4:	mov    ecx,DWORD PTR [ebp+0xc]
6401ebd7:	mov    DWORD PTR [ecx],ebx
6401ebd9:	pop    edi
6401ebda:	pop    ebx
6401ebdb:	leave  
6401ebdc:	ret    
6401ebdd:	push   ebp
6401ebde:	mov    ebp,esp
6401ebe0:	sub    esp,0x7c
6401ebe3:	mov    eax,ds:0x64029038
6401ebe8:	xor    eax,ebp
6401ebea:	mov    DWORD PTR [ebp-0x4],eax
6401ebed:	mov    eax,DWORD PTR [ebp+0x8]
6401ebf0:	push   ebx
6401ebf1:	xor    ebx,ebx
6401ebf3:	push   esi
6401ebf4:	xor    esi,esi
6401ebf6:	mov    DWORD PTR [ebp-0x7c],eax
6401ebf9:	mov    eax,DWORD PTR [ebp+0xc]
6401ebfc:	inc    esi
6401ebfd:	xor    ecx,ecx
6401ebff:	cmp    DWORD PTR [ebp+0x24],ebx
6401ec02:	push   edi
6401ec03:	mov    DWORD PTR [ebp-0x70],eax
6401ec06:	lea    edi,[ebp-0x20]
6401ec09:	mov    DWORD PTR [ebp-0x74],ebx
6401ec0c:	mov    DWORD PTR [ebp-0x68],esi
6401ec0f:	mov    DWORD PTR [ebp-0x4c],ebx
6401ec12:	mov    DWORD PTR [ebp-0x58],ebx
6401ec15:	mov    DWORD PTR [ebp-0x5c],ebx
6401ec18:	mov    DWORD PTR [ebp-0x60],ebx
6401ec1b:	mov    DWORD PTR [ebp-0x64],ebx
6401ec1e:	mov    DWORD PTR [ebp-0x50],ebx
6401ec21:	mov    DWORD PTR [ebp-0x6c],ebx
6401ec24:	jne    0x6401ec45
6401ec26:	call   0x640129f0
6401ec2b:	push   ebx
6401ec2c:	push   ebx
6401ec2d:	push   ebx
6401ec2e:	push   ebx
6401ec2f:	push   ebx
6401ec30:	mov    DWORD PTR [eax],0x16
6401ec36:	call   0x64010756
6401ec3b:	add    esp,0x14
6401ec3e:	xor    eax,eax
6401ec40:	jmp    0x6401f25e
6401ec45:	mov    edx,DWORD PTR [ebp+0x10]
6401ec48:	mov    DWORD PTR [ebp-0x54],edx
6401ec4b:	mov    al,BYTE PTR [edx]
6401ec4d:	cmp    al,0x20
6401ec4f:	je     0x6401ec5d
6401ec51:	cmp    al,0x9
6401ec53:	je     0x6401ec5d
6401ec55:	cmp    al,0xa
6401ec57:	je     0x6401ec5d
6401ec59:	cmp    al,0xd
6401ec5b:	jne    0x6401ec60
6401ec5d:	inc    edx
6401ec5e:	jmp    0x6401ec4b
6401ec60:	mov    bl,0x30
6401ec62:	mov    al,BYTE PTR [edx]
6401ec64:	inc    edx
6401ec65:	cmp    ecx,0xb
6401ec68:	ja     0x6401ee9d
6401ec6e:	jmp    DWORD PTR [ecx*4+0x6401f26d]
6401ec75:	mov    cl,al
6401ec77:	sub    cl,0x31
6401ec7a:	cmp    cl,0x8
6401ec7d:	ja     0x6401ec85
6401ec7f:	push   0x3
6401ec81:	pop    ecx
6401ec82:	dec    edx
6401ec83:	jmp    0x6401ec62
6401ec85:	mov    ecx,DWORD PTR [ebp+0x24]
6401ec88:	mov    ecx,DWORD PTR [ecx]
6401ec8a:	mov    ecx,DWORD PTR [ecx+0xbc]
6401ec90:	mov    ecx,DWORD PTR [ecx]
6401ec92:	cmp    al,BYTE PTR [ecx]
6401ec94:	jne    0x6401ec9b
6401ec96:	push   0x5
6401ec98:	pop    ecx
6401ec99:	jmp    0x6401ec62
6401ec9b:	movsx  eax,al
6401ec9e:	sub    eax,0x2b
6401eca1:	je     0x6401ecc0
6401eca3:	dec    eax
6401eca4:	dec    eax
6401eca5:	je     0x6401ecb4
6401eca7:	sub    eax,0x3
6401ecaa:	jne    0x6401ee3b
6401ecb0:	mov    ecx,esi
6401ecb2:	jmp    0x6401ec62
6401ecb4:	push   0x2
6401ecb6:	pop    ecx
6401ecb7:	mov    DWORD PTR [ebp-0x74],0x8000
6401ecbe:	jmp    0x6401ec62
6401ecc0:	and    DWORD PTR [ebp-0x74],0x0
6401ecc4:	push   0x2
6401ecc6:	pop    ecx
6401ecc7:	jmp    0x6401ec62
6401ecc9:	mov    cl,al
6401eccb:	sub    cl,0x31
6401ecce:	cmp    cl,0x8
6401ecd1:	mov    DWORD PTR [ebp-0x58],esi
6401ecd4:	jbe    0x6401ec7f
6401ecd6:	mov    ecx,DWORD PTR [ebp+0x24]
6401ecd9:	mov    ecx,DWORD PTR [ecx]
6401ecdb:	mov    ecx,DWORD PTR [ecx+0xbc]
6401ece1:	mov    ecx,DWORD PTR [ecx]
6401ece3:	cmp    al,BYTE PTR [ecx]
6401ece5:	jne    0x6401eceb
6401ece7:	push   0x4
6401ece9:	jmp    0x6401ec98
6401eceb:	cmp    al,0x2b
6401eced:	je     0x6401ed17
6401ecef:	cmp    al,0x2d
6401ecf1:	je     0x6401ed17
6401ecf3:	cmp    al,bl
6401ecf5:	je     0x6401ecb0
6401ecf7:	cmp    al,0x43
6401ecf9:	jle    0x6401ee3b
6401ecff:	cmp    al,0x45
6401ed01:	jle    0x6401ed13
6401ed03:	cmp    al,0x63
6401ed05:	jle    0x6401ee3b
6401ed0b:	cmp    al,0x65
6401ed0d:	jg     0x6401ee3b
6401ed13:	push   0x6
6401ed15:	jmp    0x6401ec98
6401ed17:	dec    edx
6401ed18:	push   0xb
6401ed1a:	jmp    0x6401ec98
6401ed1f:	mov    cl,al
6401ed21:	sub    cl,0x31
6401ed24:	cmp    cl,0x8
6401ed27:	jbe    0x6401ec7f
6401ed2d:	mov    ecx,DWORD PTR [ebp+0x24]
6401ed30:	mov    ecx,DWORD PTR [ecx]
6401ed32:	mov    ecx,DWORD PTR [ecx+0xbc]
6401ed38:	mov    ecx,DWORD PTR [ecx]
6401ed3a:	cmp    al,BYTE PTR [ecx]
6401ed3c:	je     0x6401ec96
6401ed42:	cmp    al,bl
6401ed44:	je     0x6401ecb0
6401ed4a:	mov    edx,DWORD PTR [ebp-0x54]
6401ed4d:	jmp    0x6401ee66
6401ed52:	mov    DWORD PTR [ebp-0x58],esi
6401ed55:	jmp    0x6401ed71
6401ed57:	cmp    al,0x39
6401ed59:	jg     0x6401ed75
6401ed5b:	cmp    DWORD PTR [ebp-0x4c],0x19
6401ed5f:	jae    0x6401ed6b
6401ed61:	inc    DWORD PTR [ebp-0x4c]
6401ed64:	sub    al,bl
6401ed66:	mov    BYTE PTR [edi],al
6401ed68:	inc    edi
6401ed69:	jmp    0x6401ed6e
6401ed6b:	inc    DWORD PTR [ebp-0x50]
6401ed6e:	mov    al,BYTE PTR [edx]
6401ed70:	inc    edx
6401ed71:	cmp    al,bl
6401ed73:	jge    0x6401ed57
6401ed75:	mov    ecx,DWORD PTR [ebp+0x24]
6401ed78:	mov    ecx,DWORD PTR [ecx]
6401ed7a:	mov    ecx,DWORD PTR [ecx+0xbc]
6401ed80:	mov    ecx,DWORD PTR [ecx]
6401ed82:	cmp    al,BYTE PTR [ecx]
6401ed84:	je     0x6401ece7
6401ed8a:	cmp    al,0x2b
6401ed8c:	je     0x6401ed17
6401ed8e:	cmp    al,0x2d
6401ed90:	je     0x6401ed17
6401ed92:	jmp    0x6401ecf7
6401ed97:	cmp    DWORD PTR [ebp-0x4c],0x0
6401ed9b:	mov    DWORD PTR [ebp-0x58],esi
6401ed9e:	mov    DWORD PTR [ebp-0x5c],esi
6401eda1:	jne    0x6401edc9
6401eda3:	jmp    0x6401edab
6401eda5:	dec    DWORD PTR [ebp-0x50]
6401eda8:	mov    al,BYTE PTR [edx]
6401edaa:	inc    edx
6401edab:	cmp    al,bl
6401edad:	je     0x6401eda5
6401edaf:	jmp    0x6401edc9
6401edb1:	cmp    al,0x39
6401edb3:	jg     0x6401ed8a
6401edb5:	cmp    DWORD PTR [ebp-0x4c],0x19
6401edb9:	jae    0x6401edc6
6401edbb:	inc    DWORD PTR [ebp-0x4c]
6401edbe:	sub    al,bl
6401edc0:	mov    BYTE PTR [edi],al
6401edc2:	inc    edi
6401edc3:	dec    DWORD PTR [ebp-0x50]
6401edc6:	mov    al,BYTE PTR [edx]
6401edc8:	inc    edx
6401edc9:	cmp    al,bl
6401edcb:	jge    0x6401edb1
6401edcd:	jmp    0x6401ed8a
6401edcf:	sub    al,bl
6401edd1:	cmp    al,0x9
6401edd3:	mov    DWORD PTR [ebp-0x5c],esi
6401edd6:	ja     0x6401ed4a
6401eddc:	push   0x4
6401edde:	jmp    0x6401ec81
6401ede3:	lea    ecx,[edx-0x2]
6401ede6:	mov    DWORD PTR [ebp-0x54],ecx
6401ede9:	mov    cl,al
6401edeb:	sub    cl,0x31
6401edee:	cmp    cl,0x8
6401edf1:	ja     0x6401edfa
6401edf3:	push   0x9
6401edf5:	jmp    0x6401ec81
6401edfa:	movsx  eax,al
6401edfd:	sub    eax,0x2b
6401ee00:	je     0x6401ee22
6401ee02:	dec    eax
6401ee03:	dec    eax
6401ee04:	je     0x6401ee16
6401ee06:	sub    eax,0x3
6401ee09:	jne    0x6401ed4a
6401ee0f:	push   0x8
6401ee11:	jmp    0x6401ec98
6401ee16:	or     DWORD PTR [ebp-0x68],0xffffffff
6401ee1a:	push   0x7
6401ee1c:	pop    ecx
6401ee1d:	jmp    0x6401ec62
6401ee22:	push   0x7
6401ee24:	jmp    0x6401ec98
6401ee29:	mov    DWORD PTR [ebp-0x60],esi
6401ee2c:	jmp    0x6401ee31
6401ee2e:	mov    al,BYTE PTR [edx]
6401ee30:	inc    edx
6401ee31:	cmp    al,bl
6401ee33:	je     0x6401ee2e
6401ee35:	sub    al,0x31
6401ee37:	cmp    al,0x8
6401ee39:	jbe    0x6401edf3
6401ee3b:	dec    edx
6401ee3c:	jmp    0x6401ee66
6401ee3e:	mov    cl,al
6401ee40:	sub    cl,0x31
6401ee43:	cmp    cl,0x8
6401ee46:	jbe    0x6401edf3
6401ee48:	cmp    al,bl
6401ee4a:	jmp    0x6401ee09
6401ee4c:	cmp    DWORD PTR [ebp+0x20],0x0
6401ee50:	je     0x6401ee99
6401ee52:	movsx  eax,al
6401ee55:	sub    eax,0x2b
6401ee58:	lea    ecx,[edx-0x1]
6401ee5b:	mov    DWORD PTR [ebp-0x54],ecx
6401ee5e:	je     0x6401ee22
6401ee60:	dec    eax
6401ee61:	dec    eax
6401ee62:	je     0x6401ee16
6401ee64:	mov    edx,ecx
6401ee66:	cmp    DWORD PTR [ebp-0x58],0x0
6401ee6a:	mov    eax,DWORD PTR [ebp-0x70]
6401ee6d:	mov    DWORD PTR [eax],edx
6401ee6f:	je     0x6401f219
6401ee75:	push   0x18
6401ee77:	pop    eax
6401ee78:	cmp    DWORD PTR [ebp-0x4c],eax
6401ee7b:	jbe    0x6401ee8d
6401ee7d:	cmp    BYTE PTR [ebp-0x9],0x5
6401ee81:	jl     0x6401ee86
6401ee83:	inc    BYTE PTR [ebp-0x9]
6401ee86:	dec    edi
6401ee87:	inc    DWORD PTR [ebp-0x50]
6401ee8a:	mov    DWORD PTR [ebp-0x4c],eax
6401ee8d:	cmp    DWORD PTR [ebp-0x4c],0x0
6401ee91:	jbe    0x6401f240
6401ee97:	jmp    0x6401eef2
6401ee99:	push   0xa
6401ee9b:	pop    ecx
6401ee9c:	dec    edx
6401ee9d:	cmp    ecx,0xa
6401eea0:	jne    0x6401ec62
6401eea6:	jmp    0x6401ee66
6401eea8:	mov    DWORD PTR [ebp-0x60],esi
6401eeab:	xor    ecx,ecx
6401eead:	jmp    0x6401eec8
6401eeaf:	cmp    al,0x39
6401eeb1:	jg     0x6401eed3
6401eeb3:	imul   ecx,ecx,0xa
6401eeb6:	movsx  esi,al
6401eeb9:	lea    ecx,[ecx+esi*1-0x30]
6401eebd:	cmp    ecx,0x1450
6401eec3:	jg     0x6401eece
6401eec5:	mov    al,BYTE PTR [edx]
6401eec7:	inc    edx
6401eec8:	cmp    al,bl
6401eeca:	jge    0x6401eeaf
6401eecc:	jmp    0x6401eed3
6401eece:	mov    ecx,0x1451
6401eed3:	mov    DWORD PTR [ebp-0x64],ecx
6401eed6:	jmp    0x6401eee3
6401eed8:	cmp    al,0x39
6401eeda:	jg     0x6401ee3b
6401eee0:	mov    al,BYTE PTR [edx]
6401eee2:	inc    edx
6401eee3:	cmp    al,bl
6401eee5:	jge    0x6401eed8
6401eee7:	jmp    0x6401ee3b
6401eeec:	dec    DWORD PTR [ebp-0x4c]
6401eeef:	inc    DWORD PTR [ebp-0x50]
6401eef2:	dec    edi
6401eef3:	cmp    BYTE PTR [edi],0x0
6401eef6:	je     0x6401eeec
6401eef8:	lea    eax,[ebp-0x3c]
6401eefb:	push   eax
6401eefc:	push   DWORD PTR [ebp-0x4c]
6401eeff:	lea    eax,[ebp-0x20]
6401ef02:	push   eax
6401ef03:	call   0x6401ff94
6401ef08:	mov    eax,DWORD PTR [ebp-0x64]
6401ef0b:	xor    ecx,ecx
6401ef0d:	add    esp,0xc
6401ef10:	cmp    DWORD PTR [ebp-0x68],ecx
6401ef13:	jge    0x6401ef17
6401ef15:	neg    eax
6401ef17:	add    eax,DWORD PTR [ebp-0x50]
6401ef1a:	cmp    DWORD PTR [ebp-0x60],ecx
6401ef1d:	jne    0x6401ef22
6401ef1f:	add    eax,DWORD PTR [ebp+0x18]
6401ef22:	cmp    DWORD PTR [ebp-0x5c],ecx
6401ef25:	jne    0x6401ef2a
6401ef27:	sub    eax,DWORD PTR [ebp+0x1c]
6401ef2a:	cmp    eax,0x1450
6401ef2f:	jg     0x6401f222
6401ef35:	cmp    eax,0xffffebb0
6401ef3a:	jl     0x6401f239
6401ef40:	mov    esi,0x6402a030
6401ef45:	sub    esi,0x60
6401ef48:	cmp    eax,ecx
6401ef4a:	mov    DWORD PTR [ebp-0x54],eax
6401ef4d:	je     0x6401f207
6401ef53:	jge    0x6401ef62
6401ef55:	neg    eax
6401ef57:	mov    esi,0x6402a190
6401ef5c:	mov    DWORD PTR [ebp-0x54],eax
6401ef5f:	sub    esi,0x60
6401ef62:	cmp    DWORD PTR [ebp+0x14],ecx
6401ef65:	jne    0x6401ef6b
6401ef67:	mov    WORD PTR [ebp-0x3c],cx
6401ef6b:	cmp    DWORD PTR [ebp-0x54],ecx
6401ef6e:	je     0x6401f207
6401ef74:	mov    eax,DWORD PTR [ebp-0x54]
6401ef77:	sar    DWORD PTR [ebp-0x54],0x3
6401ef7b:	add    esi,0x54
6401ef7e:	and    eax,0x7
6401ef81:	test   eax,eax
6401ef83:	mov    DWORD PTR [ebp-0x4c],esi
6401ef86:	je     0x6401f1fd
6401ef8c:	imul   eax,eax,0xc
6401ef8f:	add    eax,esi
6401ef91:	mov    ebx,eax
6401ef93:	cmp    WORD PTR [ebx],0x8000
6401ef98:	mov    DWORD PTR [ebp-0x70],ebx
6401ef9b:	jb     0x6401efb1
6401ef9d:	mov    esi,ebx
6401ef9f:	lea    edi,[ebp-0x48]
6401efa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401efa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401efa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401efa5:	dec    DWORD PTR [ebp-0x46]
6401efa8:	mov    esi,DWORD PTR [ebp-0x4c]
6401efab:	lea    ebx,[ebp-0x48]
6401efae:	mov    DWORD PTR [ebp-0x70],ebx
6401efb1:	movzx  edx,WORD PTR [ebx+0xa]
6401efb5:	mov    ecx,DWORD PTR [ebp-0x32]
6401efb8:	xor    eax,eax
6401efba:	mov    DWORD PTR [ebp-0x50],eax
6401efbd:	mov    DWORD PTR [ebp-0x2c],eax
6401efc0:	mov    DWORD PTR [ebp-0x28],eax
6401efc3:	mov    DWORD PTR [ebp-0x24],eax
6401efc6:	mov    eax,edx
6401efc8:	mov    edi,0x7fff
6401efcd:	xor    eax,ecx
6401efcf:	and    ecx,edi
6401efd1:	and    edx,edi
6401efd3:	and    eax,0x8000
6401efd8:	cmp    cx,0x7fff
6401efdd:	lea    edi,[edx+ecx*1]
6401efe0:	movzx  edi,di
6401efe3:	jae    0x6401f1e3
6401efe9:	cmp    dx,0x7fff
6401efee:	jae    0x6401f1e3
6401eff4:	cmp    di,0xbffd
6401eff9:	ja     0x6401f1e3
6401efff:	cmp    di,0x3fbf
6401f004:	ja     0x6401f013
6401f006:	xor    eax,eax
6401f008:	mov    DWORD PTR [ebp-0x38],eax
6401f00b:	mov    DWORD PTR [ebp-0x3c],eax
6401f00e:	jmp    0x6401f1fa
6401f013:	test   cx,cx
6401f016:	jne    0x6401f037
6401f018:	inc    edi
6401f019:	test   DWORD PTR [ebp-0x34],0x7fffffff
6401f020:	jne    0x6401f037
6401f022:	cmp    DWORD PTR [ebp-0x38],0x0
6401f026:	jne    0x6401f037
6401f028:	cmp    DWORD PTR [ebp-0x3c],0x0
6401f02c:	jne    0x6401f037
6401f02e:	and    WORD PTR [ebp-0x32],cx
6401f032:	jmp    0x6401f1fd
6401f037:	xor    ecx,ecx
6401f039:	cmp    dx,cx
6401f03c:	jne    0x6401f05f
6401f03e:	inc    edi
6401f03f:	test   DWORD PTR [ebx+0x8],0x7fffffff
6401f046:	jne    0x6401f05f
6401f048:	cmp    DWORD PTR [ebx+0x4],ecx
6401f04b:	jne    0x6401f05f
6401f04d:	cmp    DWORD PTR [ebx],ecx
6401f04f:	jne    0x6401f05f
6401f051:	mov    DWORD PTR [ebp-0x34],ecx
6401f054:	mov    DWORD PTR [ebp-0x38],ecx
6401f057:	mov    DWORD PTR [ebp-0x3c],ecx
6401f05a:	jmp    0x6401f1fd
6401f05f:	and    DWORD PTR [ebp-0x68],ecx
6401f062:	lea    esi,[ebp-0x28]
6401f065:	mov    DWORD PTR [ebp-0x58],0x5
6401f06c:	mov    ecx,DWORD PTR [ebp-0x68]
6401f06f:	mov    edx,DWORD PTR [ebp-0x58]
6401f072:	add    ecx,ecx
6401f074:	test   edx,edx
6401f076:	mov    DWORD PTR [ebp-0x64],edx
6401f079:	jle    0x6401f0d0
6401f07b:	lea    ecx,[ebp+ecx*1-0x3c]
6401f07f:	add    ebx,0x8
6401f082:	mov    DWORD PTR [ebp-0x5c],ecx
6401f085:	mov    DWORD PTR [ebp-0x60],ebx
6401f088:	mov    ecx,DWORD PTR [ebp-0x60]
6401f08b:	mov    edx,DWORD PTR [ebp-0x5c]
6401f08e:	movzx  edx,WORD PTR [edx]
6401f091:	movzx  ecx,WORD PTR [ecx]
6401f094:	and    DWORD PTR [ebp-0x78],0x0
6401f098:	imul   ecx,edx
6401f09b:	mov    edx,DWORD PTR [esi-0x4]
6401f09e:	lea    ebx,[edx+ecx*1]
6401f0a1:	cmp    ebx,edx
6401f0a3:	jb     0x6401f0a9
6401f0a5:	cmp    ebx,ecx
6401f0a7:	jae    0x6401f0b0
6401f0a9:	mov    DWORD PTR [ebp-0x78],0x1
6401f0b0:	cmp    DWORD PTR [ebp-0x78],0x0
6401f0b4:	mov    DWORD PTR [esi-0x4],ebx
6401f0b7:	je     0x6401f0bc
6401f0b9:	inc    WORD PTR [esi]
6401f0bc:	add    DWORD PTR [ebp-0x5c],0x2
6401f0c0:	sub    DWORD PTR [ebp-0x60],0x2
6401f0c4:	dec    DWORD PTR [ebp-0x64]
6401f0c7:	cmp    DWORD PTR [ebp-0x64],0x0
6401f0cb:	jg     0x6401f088
6401f0cd:	mov    ebx,DWORD PTR [ebp-0x70]
6401f0d0:	inc    esi
6401f0d1:	inc    esi
6401f0d2:	inc    DWORD PTR [ebp-0x68]
6401f0d5:	dec    DWORD PTR [ebp-0x58]
6401f0d8:	cmp    DWORD PTR [ebp-0x58],0x0
6401f0dc:	jg     0x6401f06c
6401f0de:	add    edi,0xc002
6401f0e4:	test   di,di
6401f0e7:	jle    0x6401f124
6401f0e9:	test   DWORD PTR [ebp-0x24],0x80000000
6401f0f0:	jne    0x6401f11f
6401f0f2:	mov    esi,DWORD PTR [ebp-0x28]
6401f0f5:	mov    ecx,DWORD PTR [ebp-0x2c]
6401f0f8:	shl    DWORD PTR [ebp-0x2c],1
6401f0fb:	shr    ecx,0x1f
6401f0fe:	mov    edx,esi
6401f100:	add    esi,esi
6401f102:	or     esi,ecx
6401f104:	mov    ecx,DWORD PTR [ebp-0x24]
6401f107:	shr    edx,0x1f
6401f10a:	add    ecx,ecx
6401f10c:	or     ecx,edx
6401f10e:	add    edi,0xffff
6401f114:	test   di,di
6401f117:	mov    DWORD PTR [ebp-0x28],esi
6401f11a:	mov    DWORD PTR [ebp-0x24],ecx
6401f11d:	jg     0x6401f0e9
6401f11f:	test   di,di
6401f122:	jg     0x6401f171
6401f124:	add    edi,0xffff
6401f12a:	test   di,di
6401f12d:	jge    0x6401f171
6401f12f:	mov    ecx,edi
6401f131:	neg    ecx
6401f133:	movzx  esi,cx
6401f136:	add    edi,esi
6401f138:	test   BYTE PTR [ebp-0x2c],0x1
6401f13c:	je     0x6401f141
6401f13e:	inc    DWORD PTR [ebp-0x50]
6401f141:	mov    ecx,DWORD PTR [ebp-0x24]
6401f144:	mov    ebx,DWORD PTR [ebp-0x28]
6401f147:	mov    edx,DWORD PTR [ebp-0x28]
6401f14a:	shr    DWORD PTR [ebp-0x24],1
6401f14d:	shl    ecx,0x1f
6401f150:	shr    ebx,1
6401f152:	or     ebx,ecx
6401f154:	mov    ecx,DWORD PTR [ebp-0x2c]
6401f157:	shl    edx,0x1f
6401f15a:	shr    ecx,1
6401f15c:	or     ecx,edx
6401f15e:	dec    esi
6401f15f:	mov    DWORD PTR [ebp-0x28],ebx
6401f162:	mov    DWORD PTR [ebp-0x2c],ecx
6401f165:	jne    0x6401f138
6401f167:	cmp    DWORD PTR [ebp-0x50],esi
6401f16a:	je     0x6401f171
6401f16c:	or     WORD PTR [ebp-0x2c],0x1
6401f171:	cmp    WORD PTR [ebp-0x2c],0x8000
6401f177:	ja     0x6401f18a
6401f179:	mov    ecx,DWORD PTR [ebp-0x2c]
6401f17c:	and    ecx,0x1ffff
6401f182:	cmp    ecx,0x18000
6401f188:	jne    0x6401f1bd
6401f18a:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
6401f18e:	jne    0x6401f1ba
6401f190:	and    DWORD PTR [ebp-0x2a],0x0
6401f194:	cmp    DWORD PTR [ebp-0x26],0xffffffff
6401f198:	jne    0x6401f1b5
6401f19a:	and    DWORD PTR [ebp-0x26],0x0
6401f19e:	cmp    WORD PTR [ebp-0x22],0xffff
6401f1a4:	jne    0x6401f1af
6401f1a6:	mov    WORD PTR [ebp-0x22],0x8000
6401f1ac:	inc    edi
6401f1ad:	jmp    0x6401f1bd
6401f1af:	inc    WORD PTR [ebp-0x22]
6401f1b3:	jmp    0x6401f1bd
6401f1b5:	inc    DWORD PTR [ebp-0x26]
6401f1b8:	jmp    0x6401f1bd
6401f1ba:	inc    DWORD PTR [ebp-0x2a]
6401f1bd:	cmp    di,0x7fff
6401f1c2:	mov    esi,DWORD PTR [ebp-0x4c]
6401f1c5:	jae    0x6401f1e3
6401f1c7:	mov    cx,WORD PTR [ebp-0x2a]
6401f1cb:	mov    WORD PTR [ebp-0x3c],cx
6401f1cf:	mov    ecx,DWORD PTR [ebp-0x28]
6401f1d2:	mov    DWORD PTR [ebp-0x3a],ecx
6401f1d5:	mov    ecx,DWORD PTR [ebp-0x24]
6401f1d8:	or     edi,eax
6401f1da:	mov    DWORD PTR [ebp-0x36],ecx
6401f1dd:	mov    WORD PTR [ebp-0x32],di
6401f1e1:	jmp    0x6401f1fd
6401f1e3:	neg    ax
6401f1e6:	sbb    eax,eax
6401f1e8:	and    DWORD PTR [ebp-0x38],0x0
6401f1ec:	and    eax,0x80000000
6401f1f1:	add    eax,0x7fff8000
6401f1f6:	and    DWORD PTR [ebp-0x3c],0x0
6401f1fa:	mov    DWORD PTR [ebp-0x34],eax
6401f1fd:	cmp    DWORD PTR [ebp-0x54],0x0
6401f201:	jne    0x6401ef74
6401f207:	mov    eax,DWORD PTR [ebp-0x34]
6401f20a:	movzx  ecx,WORD PTR [ebp-0x3c]
6401f20e:	mov    esi,DWORD PTR [ebp-0x3a]
6401f211:	mov    edx,DWORD PTR [ebp-0x36]
6401f214:	shr    eax,0x10
6401f217:	jmp    0x6401f248
6401f219:	mov    DWORD PTR [ebp-0x6c],0x4
6401f220:	jmp    0x6401f240
6401f222:	xor    esi,esi
6401f224:	mov    eax,0x7fff
6401f229:	mov    edx,0x80000000
6401f22e:	xor    ecx,ecx
6401f230:	mov    DWORD PTR [ebp-0x6c],0x2
6401f237:	jmp    0x6401f248
6401f239:	mov    DWORD PTR [ebp-0x6c],0x1
6401f240:	xor    ecx,ecx
6401f242:	xor    eax,eax
6401f244:	xor    edx,edx
6401f246:	xor    esi,esi
6401f248:	mov    edi,DWORD PTR [ebp-0x7c]
6401f24b:	or     eax,DWORD PTR [ebp-0x74]
6401f24e:	mov    WORD PTR [edi],cx
6401f251:	mov    WORD PTR [edi+0xa],ax
6401f255:	mov    eax,DWORD PTR [ebp-0x6c]
6401f258:	mov    DWORD PTR [edi+0x2],esi
6401f25b:	mov    DWORD PTR [edi+0x6],edx
6401f25e:	mov    ecx,DWORD PTR [ebp-0x4]
6401f261:	pop    edi
6401f262:	pop    esi
6401f263:	xor    ecx,ebp
6401f265:	pop    ebx
6401f266:	call   0x64010c1e
6401f26b:	leave  
6401f26c:	ret    
6401f26d:	jne    0x6401f25b
6401f26f:	add    DWORD PTR [ecx+ecx*8-0x14],esp
6401f273:	add    DWORD PTR [edi+ebx*1-0x13],esp
6401f277:	add    DWORD PTR [edx+edx*2-0x13],esp
6401f27b:	add    DWORD PTR [edi+edx*4-0x13],esp
6401f27f:	add    DWORD PTR [edi+ecx*8-0x13],esp
6401f283:	add    DWORD PTR [ebx+eiz*8-0x13],esp
6401f287:	add    DWORD PTR [esi+edi*1-0x12],esp
6401f28b:	add    DWORD PTR [ecx+ebp*1-0x12],esp
6401f28f:	add    DWORD PTR [eax+ebp*4-0x12],esp
6401f293:	add    DWORD PTR [ebp+ebx*4-0x12],esp
6401f297:	add    DWORD PTR [esp+ecx*2-0x12],esp
6401f29b:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401f29f:	in     al,dx
6401f2a0:	sub    esp,0x74
6401f2a3:	mov    eax,ds:0x64029038
6401f2a8:	xor    eax,ebp
6401f2aa:	mov    DWORD PTR [ebp-0x4],eax
6401f2ad:	push   ebx
6401f2ae:	mov    ebx,DWORD PTR [ebp+0x1c]
6401f2b1:	push   esi
6401f2b2:	push   edi
6401f2b3:	lea    esi,[ebp+0x8]
6401f2b6:	lea    edi,[ebp-0x10]
6401f2b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f2ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f2bb:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6401f2bd:	mov    edx,DWORD PTR [ebp-0x8]
6401f2c0:	mov    ecx,edx
6401f2c2:	mov    eax,0x8000
6401f2c7:	and    ecx,eax
6401f2c9:	and    edx,0x7fff
6401f2cf:	test   cx,cx
6401f2d2:	mov    DWORD PTR [ebp-0x60],ebx
6401f2d5:	mov    BYTE PTR [ebp-0x30],0xcc
6401f2d9:	mov    BYTE PTR [ebp-0x2f],0xcc
6401f2dd:	mov    BYTE PTR [ebp-0x2e],0xcc
6401f2e1:	mov    BYTE PTR [ebp-0x2d],0xcc
6401f2e5:	mov    BYTE PTR [ebp-0x2c],0xcc
6401f2e9:	mov    BYTE PTR [ebp-0x2b],0xcc
6401f2ed:	mov    BYTE PTR [ebp-0x2a],0xcc
6401f2f1:	mov    BYTE PTR [ebp-0x29],0xcc
6401f2f5:	mov    BYTE PTR [ebp-0x28],0xcc
6401f2f9:	mov    BYTE PTR [ebp-0x27],0xcc
6401f2fd:	mov    BYTE PTR [ebp-0x26],0xfb
6401f301:	mov    BYTE PTR [ebp-0x25],0x3f
6401f305:	mov    DWORD PTR [ebp-0x74],0x1
6401f30c:	mov    DWORD PTR [ebp-0x6c],ecx
6401f30f:	je     0x6401f317
6401f311:	mov    BYTE PTR [ebx+0x2],0x2d
6401f315:	jmp    0x6401f31b
6401f317:	mov    BYTE PTR [ebx+0x2],0x20
6401f31b:	test   dx,dx
6401f31e:	mov    esi,DWORD PTR [ebp-0xc]
6401f321:	mov    edi,DWORD PTR [ebp-0x10]
6401f324:	jne    0x6401f354
6401f326:	test   esi,esi
6401f328:	jne    0x6401f354
6401f32a:	test   edi,edi
6401f32c:	jne    0x6401f354
6401f32e:	and    WORD PTR [ebx],di
6401f331:	cmp    cx,ax
6401f334:	setne  al
6401f337:	dec    al
6401f339:	and    al,0xd
6401f33b:	add    al,0x20
6401f33d:	mov    BYTE PTR [ebx+0x2],al
6401f340:	mov    BYTE PTR [ebx+0x3],0x1
6401f344:	mov    BYTE PTR [ebx+0x4],0x30
6401f348:	mov    BYTE PTR [ebx+0x5],0x0
6401f34c:	xor    eax,eax
6401f34e:	inc    eax
6401f34f:	jmp    0x6401fb1b
6401f354:	cmp    dx,0x7fff
6401f359:	jne    0x6401f3fd
6401f35f:	mov    eax,0x80000000
6401f364:	cmp    esi,eax
6401f366:	mov    WORD PTR [ebx],0x1
6401f36b:	jne    0x6401f371
6401f36d:	test   edi,edi
6401f36f:	je     0x6401f380
6401f371:	test   esi,0x40000000
6401f377:	jne    0x6401f380
6401f379:	push   0x64024508
6401f37e:	jmp    0x6401f3d1
6401f380:	test   cx,cx
6401f383:	je     0x6401f398
6401f385:	cmp    esi,0xc0000000
6401f38b:	jne    0x6401f398
6401f38d:	test   edi,edi
6401f38f:	jne    0x6401f3cc
6401f391:	push   0x64024500
6401f396:	jmp    0x6401f3a5
6401f398:	cmp    esi,eax
6401f39a:	jne    0x6401f3cc
6401f39c:	test   edi,edi
6401f39e:	jne    0x6401f3cc
6401f3a0:	push   0x640244f8
6401f3a5:	lea    eax,[ebx+0x4]
6401f3a8:	push   0x16
6401f3aa:	push   eax
6401f3ab:	call   0x640125e8
6401f3b0:	add    esp,0xc
6401f3b3:	xor    esi,esi
6401f3b5:	test   eax,eax
6401f3b7:	je     0x6401f3c6
6401f3b9:	push   esi
6401f3ba:	push   esi
6401f3bb:	push   esi
6401f3bc:	push   esi
6401f3bd:	push   esi
6401f3be:	call   0x6401065a
6401f3c3:	add    esp,0x14
6401f3c6:	mov    BYTE PTR [ebx+0x3],0x5
6401f3ca:	jmp    0x6401f3f6
6401f3cc:	push   0x640244f0
6401f3d1:	lea    eax,[ebx+0x4]
6401f3d4:	push   0x16
6401f3d6:	push   eax
6401f3d7:	call   0x640125e8
6401f3dc:	add    esp,0xc
6401f3df:	xor    esi,esi
6401f3e1:	test   eax,eax
6401f3e3:	je     0x6401f3f2
6401f3e5:	push   esi
6401f3e6:	push   esi
6401f3e7:	push   esi
6401f3e8:	push   esi
6401f3e9:	push   esi
6401f3ea:	call   0x6401065a
6401f3ef:	add    esp,0x14
6401f3f2:	mov    BYTE PTR [ebx+0x3],0x6
6401f3f6:	xor    eax,eax
6401f3f8:	jmp    0x6401fb1b
6401f3fd:	movzx  ecx,dx
6401f400:	mov    ebx,ecx
6401f402:	imul   ecx,ecx,0x4d10
6401f408:	shr    ebx,0x8
6401f40b:	mov    eax,esi
6401f40d:	shr    eax,0x18
6401f410:	lea    eax,[ebx+eax*2]
6401f413:	imul   eax,eax,0x4d
6401f416:	lea    eax,[eax+ecx*1-0x134312f4]
6401f41d:	sar    eax,0x10
6401f420:	movzx  ecx,ax
6401f423:	movsx  ebx,cx
6401f426:	mov    DWORD PTR [ebp-0x4c],ecx
6401f429:	xor    eax,eax
6401f42b:	mov    ecx,0x6402a030
6401f430:	neg    ebx
6401f432:	sub    ecx,0x60
6401f435:	cmp    ebx,eax
6401f437:	mov    WORD PTR [ebp-0x16],dx
6401f43b:	mov    DWORD PTR [ebp-0x1a],esi
6401f43e:	mov    DWORD PTR [ebp-0x1e],edi
6401f441:	mov    WORD PTR [ebp-0x20],ax
6401f445:	mov    DWORD PTR [ebp-0x68],ecx
6401f448:	je     0x6401f6fc
6401f44e:	jge    0x6401f45d
6401f450:	mov    ecx,0x6402a190
6401f455:	neg    ebx
6401f457:	sub    ecx,0x60
6401f45a:	mov    DWORD PTR [ebp-0x68],ecx
6401f45d:	cmp    ebx,eax
6401f45f:	je     0x6401f6fc
6401f465:	add    DWORD PTR [ebp-0x68],0x54
6401f469:	mov    ecx,ebx
6401f46b:	and    ecx,0x7
6401f46e:	sar    ebx,0x3
6401f471:	test   ecx,ecx
6401f473:	je     0x6401f6f2
6401f479:	imul   ecx,ecx,0xc
6401f47c:	add    ecx,DWORD PTR [ebp-0x68]
6401f47f:	cmp    WORD PTR [ecx],0x8000
6401f484:	mov    DWORD PTR [ebp-0x64],ecx
6401f487:	jb     0x6401f49c
6401f489:	mov    esi,ecx
6401f48b:	lea    edi,[ebp-0x3c]
6401f48e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f48f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f490:	lea    eax,[ebp-0x3c]
6401f493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f494:	dec    DWORD PTR [ebp-0x3a]
6401f497:	mov    DWORD PTR [ebp-0x64],eax
6401f49a:	mov    ecx,eax
6401f49c:	movzx  edi,WORD PTR [ecx+0xa]
6401f4a0:	mov    edx,DWORD PTR [ebp-0x16]
6401f4a3:	xor    eax,eax
6401f4a5:	mov    ecx,edi
6401f4a7:	mov    esi,0x7fff
6401f4ac:	xor    ecx,edx
6401f4ae:	and    edx,esi
6401f4b0:	and    edi,esi
6401f4b2:	mov    DWORD PTR [ebp-0x48],eax
6401f4b5:	mov    DWORD PTR [ebp-0x10],eax
6401f4b8:	mov    DWORD PTR [ebp-0xc],eax
6401f4bb:	mov    DWORD PTR [ebp-0x8],eax
6401f4be:	and    ecx,0x8000
6401f4c4:	cmp    dx,si
6401f4c7:	lea    eax,[edi+edx*1]
6401f4ca:	movzx  eax,ax
6401f4cd:	jae    0x6401f6d6
6401f4d3:	cmp    di,si
6401f4d6:	jae    0x6401f6d6
6401f4dc:	cmp    ax,0xbffd
6401f4e0:	ja     0x6401f6d6
6401f4e6:	cmp    ax,0x3fbf
6401f4ea:	ja     0x6401f4fc
6401f4ec:	xor    eax,eax
6401f4ee:	mov    DWORD PTR [ebp-0x18],eax
6401f4f1:	mov    DWORD PTR [ebp-0x1c],eax
6401f4f4:	mov    DWORD PTR [ebp-0x20],eax
6401f4f7:	jmp    0x6401f6f2
6401f4fc:	xor    esi,esi
6401f4fe:	cmp    dx,si
6401f501:	jne    0x6401f520
6401f503:	inc    eax
6401f504:	test   DWORD PTR [ebp-0x18],0x7fffffff
6401f50b:	jne    0x6401f520
6401f50d:	cmp    DWORD PTR [ebp-0x1c],esi
6401f510:	jne    0x6401f520
6401f512:	cmp    DWORD PTR [ebp-0x20],esi
6401f515:	jne    0x6401f520
6401f517:	mov    WORD PTR [ebp-0x16],si
6401f51b:	jmp    0x6401f6f2
6401f520:	cmp    di,si
6401f523:	jne    0x6401f549
6401f525:	mov    edx,DWORD PTR [ebp-0x64]
6401f528:	inc    eax
6401f529:	test   DWORD PTR [edx+0x8],0x7fffffff
6401f530:	jne    0x6401f549
6401f532:	cmp    DWORD PTR [edx+0x4],esi
6401f535:	jne    0x6401f549
6401f537:	cmp    DWORD PTR [edx],esi
6401f539:	jne    0x6401f549
6401f53b:	mov    DWORD PTR [ebp-0x18],esi
6401f53e:	mov    DWORD PTR [ebp-0x1c],esi
6401f541:	mov    DWORD PTR [ebp-0x20],esi
6401f544:	jmp    0x6401f6f2
6401f549:	lea    edi,[ebp-0xc]
6401f54c:	mov    DWORD PTR [ebp-0x5c],esi
6401f54f:	mov    DWORD PTR [ebp-0x44],edi
6401f552:	mov    DWORD PTR [ebp-0x40],0x5
6401f559:	mov    edx,DWORD PTR [ebp-0x5c]
6401f55c:	mov    esi,DWORD PTR [ebp-0x40]
6401f55f:	add    edx,edx
6401f561:	test   esi,esi
6401f563:	mov    DWORD PTR [ebp-0x50],esi
6401f566:	jle    0x6401f5c0
6401f568:	lea    edx,[ebp+edx*1-0x20]
6401f56c:	mov    DWORD PTR [ebp-0x58],edx
6401f56f:	mov    edx,DWORD PTR [ebp-0x64]
6401f572:	add    edx,0x8
6401f575:	mov    DWORD PTR [ebp-0x54],edx
6401f578:	mov    edx,DWORD PTR [ebp-0x58]
6401f57b:	mov    esi,DWORD PTR [ebp-0x54]
6401f57e:	movzx  esi,WORD PTR [esi]
6401f581:	movzx  edx,WORD PTR [edx]
6401f584:	mov    edi,DWORD PTR [edi-0x4]
6401f587:	imul   edx,esi
6401f58a:	and    DWORD PTR [ebp-0x70],0x0
6401f58e:	lea    esi,[edi+edx*1]
6401f591:	cmp    esi,edi
6401f593:	jb     0x6401f599
6401f595:	cmp    esi,edx
6401f597:	jae    0x6401f5a0
6401f599:	mov    DWORD PTR [ebp-0x70],0x1
6401f5a0:	cmp    DWORD PTR [ebp-0x70],0x0
6401f5a4:	mov    edi,DWORD PTR [ebp-0x44]
6401f5a7:	mov    DWORD PTR [edi-0x4],esi
6401f5aa:	je     0x6401f5af
6401f5ac:	inc    WORD PTR [edi]
6401f5af:	add    DWORD PTR [ebp-0x58],0x2
6401f5b3:	sub    DWORD PTR [ebp-0x54],0x2
6401f5b7:	dec    DWORD PTR [ebp-0x50]
6401f5ba:	cmp    DWORD PTR [ebp-0x50],0x0
6401f5be:	jg     0x6401f578
6401f5c0:	inc    edi
6401f5c1:	inc    edi
6401f5c2:	inc    DWORD PTR [ebp-0x5c]
6401f5c5:	dec    DWORD PTR [ebp-0x40]
6401f5c8:	cmp    DWORD PTR [ebp-0x40],0x0
6401f5cc:	mov    DWORD PTR [ebp-0x44],edi
6401f5cf:	jg     0x6401f559
6401f5d1:	add    eax,0xc002
6401f5d6:	test   ax,ax
6401f5d9:	jle    0x6401f616
6401f5db:	test   DWORD PTR [ebp-0x8],0x80000000
6401f5e2:	jne    0x6401f611
6401f5e4:	mov    edx,DWORD PTR [ebp-0x10]
6401f5e7:	mov    edi,DWORD PTR [ebp-0xc]
6401f5ea:	mov    esi,DWORD PTR [ebp-0xc]
6401f5ed:	shl    DWORD PTR [ebp-0x10],1
6401f5f0:	shr    edx,0x1f
6401f5f3:	add    edi,edi
6401f5f5:	or     edi,edx
6401f5f7:	mov    edx,DWORD PTR [ebp-0x8]
6401f5fa:	shr    esi,0x1f
6401f5fd:	add    edx,edx
6401f5ff:	or     edx,esi
6401f601:	add    eax,0xffff
6401f606:	test   ax,ax
6401f609:	mov    DWORD PTR [ebp-0xc],edi
6401f60c:	mov    DWORD PTR [ebp-0x8],edx
6401f60f:	jg     0x6401f5db
6401f611:	test   ax,ax
6401f614:	jg     0x6401f668
6401f616:	add    eax,0xffff
6401f61b:	test   ax,ax
6401f61e:	jge    0x6401f668
6401f620:	mov    edx,eax
6401f622:	neg    edx
6401f624:	movzx  edx,dx
6401f627:	mov    DWORD PTR [ebp-0x44],edx
6401f62a:	add    eax,edx
6401f62c:	test   BYTE PTR [ebp-0x10],0x1
6401f630:	je     0x6401f635
6401f632:	inc    DWORD PTR [ebp-0x48]
6401f635:	mov    edx,DWORD PTR [ebp-0x8]
6401f638:	mov    edi,DWORD PTR [ebp-0xc]
6401f63b:	mov    esi,DWORD PTR [ebp-0xc]
6401f63e:	shr    DWORD PTR [ebp-0x8],1
6401f641:	shl    edx,0x1f
6401f644:	shr    edi,1
6401f646:	or     edi,edx
6401f648:	mov    edx,DWORD PTR [ebp-0x10]
6401f64b:	shl    esi,0x1f
6401f64e:	shr    edx,1
6401f650:	or     edx,esi
6401f652:	dec    DWORD PTR [ebp-0x44]
6401f655:	mov    DWORD PTR [ebp-0xc],edi
6401f658:	mov    DWORD PTR [ebp-0x10],edx
6401f65b:	jne    0x6401f62c
6401f65d:	cmp    DWORD PTR [ebp-0x48],0x0
6401f661:	je     0x6401f668
6401f663:	or     WORD PTR [ebp-0x10],0x1
6401f668:	cmp    WORD PTR [ebp-0x10],0x8000
6401f66e:	ja     0x6401f681
6401f670:	mov    edx,DWORD PTR [ebp-0x10]
6401f673:	and    edx,0x1ffff
6401f679:	cmp    edx,0x18000
6401f67f:	jne    0x6401f6b4
6401f681:	cmp    DWORD PTR [ebp-0xe],0xffffffff
6401f685:	jne    0x6401f6b1
6401f687:	and    DWORD PTR [ebp-0xe],0x0
6401f68b:	cmp    DWORD PTR [ebp-0xa],0xffffffff
6401f68f:	jne    0x6401f6ac
6401f691:	and    DWORD PTR [ebp-0xa],0x0
6401f695:	cmp    WORD PTR [ebp-0x6],0xffff
6401f69b:	jne    0x6401f6a6
6401f69d:	mov    WORD PTR [ebp-0x6],0x8000
6401f6a3:	inc    eax
6401f6a4:	jmp    0x6401f6b4
6401f6a6:	inc    WORD PTR [ebp-0x6]
6401f6aa:	jmp    0x6401f6b4
6401f6ac:	inc    DWORD PTR [ebp-0xa]
6401f6af:	jmp    0x6401f6b4
6401f6b1:	inc    DWORD PTR [ebp-0xe]
6401f6b4:	cmp    ax,0x7fff
6401f6b8:	jae    0x6401f6d6
6401f6ba:	mov    dx,WORD PTR [ebp-0xe]
6401f6be:	mov    WORD PTR [ebp-0x20],dx
6401f6c2:	mov    edx,DWORD PTR [ebp-0xc]
6401f6c5:	mov    DWORD PTR [ebp-0x1e],edx
6401f6c8:	mov    edx,DWORD PTR [ebp-0x8]
6401f6cb:	or     eax,ecx
6401f6cd:	mov    DWORD PTR [ebp-0x1a],edx
6401f6d0:	mov    WORD PTR [ebp-0x16],ax
6401f6d4:	jmp    0x6401f6f2
6401f6d6:	neg    cx
6401f6d9:	sbb    ecx,ecx
6401f6db:	and    DWORD PTR [ebp-0x1c],0x0
6401f6df:	and    ecx,0x80000000
6401f6e5:	add    ecx,0x7fff8000
6401f6eb:	and    DWORD PTR [ebp-0x20],0x0
6401f6ef:	mov    DWORD PTR [ebp-0x18],ecx
6401f6f2:	test   ebx,ebx
6401f6f4:	jne    0x6401f465
6401f6fa:	xor    eax,eax
6401f6fc:	mov    ecx,DWORD PTR [ebp-0x18]
6401f6ff:	shr    ecx,0x10
6401f702:	cmp    cx,0x3fff
6401f707:	mov    ebx,0x7fff
6401f70c:	jb     0x6401f95a
6401f712:	mov    esi,DWORD PTR [ebp-0x26]
6401f715:	inc    DWORD PTR [ebp-0x4c]
6401f718:	movzx  edx,cx
6401f71b:	mov    ecx,esi
6401f71d:	xor    ecx,edx
6401f71f:	and    edx,ebx
6401f721:	and    esi,ebx
6401f723:	and    ecx,0x8000
6401f729:	cmp    dx,bx
6401f72c:	lea    edi,[esi+edx*1]
6401f72f:	mov    DWORD PTR [ebp-0x58],eax
6401f732:	mov    DWORD PTR [ebp-0x10],eax
6401f735:	mov    DWORD PTR [ebp-0xc],eax
6401f738:	mov    DWORD PTR [ebp-0x8],eax
6401f73b:	movzx  edi,di
6401f73e:	jae    0x6401f940
6401f744:	cmp    si,bx
6401f747:	jae    0x6401f940
6401f74d:	cmp    di,0xbffd
6401f752:	ja     0x6401f940
6401f758:	cmp    di,0x3fbf
6401f75d:	ja     0x6401f767
6401f75f:	mov    DWORD PTR [ebp-0x18],eax
6401f762:	jmp    0x6401f954
6401f767:	cmp    dx,ax
6401f76a:	jne    0x6401f789
6401f76c:	inc    edi
6401f76d:	test   DWORD PTR [ebp-0x18],0x7fffffff
6401f774:	jne    0x6401f789
6401f776:	cmp    DWORD PTR [ebp-0x1c],eax
6401f779:	jne    0x6401f789
6401f77b:	cmp    DWORD PTR [ebp-0x20],eax
6401f77e:	jne    0x6401f789
6401f780:	mov    WORD PTR [ebp-0x16],ax
6401f784:	jmp    0x6401f95a
6401f789:	cmp    si,ax
6401f78c:	jne    0x6401f7a2
6401f78e:	inc    edi
6401f78f:	test   DWORD PTR [ebp-0x28],0x7fffffff
6401f796:	jne    0x6401f7a2
6401f798:	cmp    DWORD PTR [ebp-0x2c],eax
6401f79b:	jne    0x6401f7a2
6401f79d:	cmp    DWORD PTR [ebp-0x30],eax
6401f7a0:	je     0x6401f75f
6401f7a2:	and    DWORD PTR [ebp-0x54],0x0
6401f7a6:	lea    eax,[ebp-0xc]
6401f7a9:	mov    DWORD PTR [ebp-0x40],0x5
6401f7b0:	mov    edx,DWORD PTR [ebp-0x54]
6401f7b3:	mov    esi,DWORD PTR [ebp-0x40]
6401f7b6:	add    edx,edx
6401f7b8:	test   esi,esi
6401f7ba:	mov    DWORD PTR [ebp-0x50],esi
6401f7bd:	jle    0x6401f811
6401f7bf:	lea    esi,[ebp-0x28]
6401f7c2:	lea    edx,[ebp+edx*1-0x20]
6401f7c6:	mov    DWORD PTR [ebp-0x5c],esi
6401f7c9:	mov    DWORD PTR [ebp-0x48],edx
6401f7cc:	mov    edx,DWORD PTR [ebp-0x5c]
6401f7cf:	mov    esi,DWORD PTR [ebp-0x48]
6401f7d2:	movzx  esi,WORD PTR [esi]
6401f7d5:	movzx  edx,WORD PTR [edx]
6401f7d8:	and    DWORD PTR [ebp-0x44],0x0
6401f7dc:	imul   edx,esi
6401f7df:	mov    esi,DWORD PTR [eax-0x4]
6401f7e2:	lea    ebx,[esi+edx*1]
6401f7e5:	cmp    ebx,esi
6401f7e7:	jb     0x6401f7ed
6401f7e9:	cmp    ebx,edx
6401f7eb:	jae    0x6401f7f4
6401f7ed:	mov    DWORD PTR [ebp-0x44],0x1
6401f7f4:	cmp    DWORD PTR [ebp-0x44],0x0
6401f7f8:	mov    DWORD PTR [eax-0x4],ebx
6401f7fb:	je     0x6401f800
6401f7fd:	inc    WORD PTR [eax]
6401f800:	add    DWORD PTR [ebp-0x48],0x2
6401f804:	sub    DWORD PTR [ebp-0x5c],0x2
6401f808:	dec    DWORD PTR [ebp-0x50]
6401f80b:	cmp    DWORD PTR [ebp-0x50],0x0
6401f80f:	jg     0x6401f7cc
6401f811:	inc    eax
6401f812:	inc    eax
6401f813:	inc    DWORD PTR [ebp-0x54]
6401f816:	dec    DWORD PTR [ebp-0x40]
6401f819:	cmp    DWORD PTR [ebp-0x40],0x0
6401f81d:	jg     0x6401f7b0
6401f81f:	add    edi,0xc002
6401f825:	xor    eax,eax
6401f827:	cmp    di,ax
6401f82a:	jle    0x6401f868
6401f82c:	test   DWORD PTR [ebp-0x8],0x80000000
6401f833:	jne    0x6401f863
6401f835:	mov    edx,DWORD PTR [ebp-0x10]
6401f838:	mov    ebx,DWORD PTR [ebp-0xc]
6401f83b:	mov    esi,DWORD PTR [ebp-0xc]
6401f83e:	shl    DWORD PTR [ebp-0x10],1
6401f841:	shr    edx,0x1f
6401f844:	add    ebx,ebx
6401f846:	or     ebx,edx
6401f848:	mov    edx,DWORD PTR [ebp-0x8]
6401f84b:	shr    esi,0x1f
6401f84e:	add    edx,edx
6401f850:	or     edx,esi
6401f852:	add    edi,0xffff
6401f858:	cmp    di,ax
6401f85b:	mov    DWORD PTR [ebp-0xc],ebx
6401f85e:	mov    DWORD PTR [ebp-0x8],edx
6401f861:	jg     0x6401f82c
6401f863:	cmp    di,ax
6401f866:	jg     0x6401f8b5
6401f868:	add    edi,0xffff
6401f86e:	cmp    di,ax
6401f871:	jge    0x6401f8b5
6401f873:	mov    eax,edi
6401f875:	neg    eax
6401f877:	movzx  eax,ax
6401f87a:	add    edi,eax
6401f87c:	test   BYTE PTR [ebp-0x10],0x1
6401f880:	je     0x6401f885
6401f882:	inc    DWORD PTR [ebp-0x58]
6401f885:	mov    edx,DWORD PTR [ebp-0x8]
6401f888:	mov    ebx,DWORD PTR [ebp-0xc]
6401f88b:	mov    esi,DWORD PTR [ebp-0xc]
6401f88e:	shr    DWORD PTR [ebp-0x8],1
6401f891:	shl    edx,0x1f
6401f894:	shr    ebx,1
6401f896:	or     ebx,edx
6401f898:	mov    edx,DWORD PTR [ebp-0x10]
6401f89b:	shl    esi,0x1f
6401f89e:	shr    edx,1
6401f8a0:	or     edx,esi
6401f8a2:	dec    eax
6401f8a3:	mov    DWORD PTR [ebp-0xc],ebx
6401f8a6:	mov    DWORD PTR [ebp-0x10],edx
6401f8a9:	jne    0x6401f87c
6401f8ab:	cmp    DWORD PTR [ebp-0x58],eax
6401f8ae:	je     0x6401f8b5
6401f8b0:	or     WORD PTR [ebp-0x10],0x1
6401f8b5:	cmp    WORD PTR [ebp-0x10],0x8000
6401f8bb:	ja     0x6401f8ce
6401f8bd:	mov    edx,DWORD PTR [ebp-0x10]
6401f8c0:	and    edx,0x1ffff
6401f8c6:	cmp    edx,0x18000
6401f8cc:	jne    0x6401f8ff
6401f8ce:	cmp    DWORD PTR [ebp-0xe],0xffffffff
6401f8d2:	jne    0x6401f8fc
6401f8d4:	cmp    DWORD PTR [ebp-0xa],0xffffffff
6401f8d8:	mov    DWORD PTR [ebp-0xe],eax
6401f8db:	jne    0x6401f8f7
6401f8dd:	cmp    WORD PTR [ebp-0x6],0xffff
6401f8e3:	mov    DWORD PTR [ebp-0xa],eax
6401f8e6:	jne    0x6401f8f1
6401f8e8:	mov    WORD PTR [ebp-0x6],0x8000
6401f8ee:	inc    edi
6401f8ef:	jmp    0x6401f8ff
6401f8f1:	inc    WORD PTR [ebp-0x6]
6401f8f5:	jmp    0x6401f8ff
6401f8f7:	inc    DWORD PTR [ebp-0xa]
6401f8fa:	jmp    0x6401f8ff
6401f8fc:	inc    DWORD PTR [ebp-0xe]
6401f8ff:	cmp    di,0x7fff
6401f904:	jb     0x6401f924
6401f906:	neg    cx
6401f909:	mov    DWORD PTR [ebp-0x1c],eax
6401f90c:	mov    DWORD PTR [ebp-0x20],eax
6401f90f:	sbb    ecx,ecx
6401f911:	and    ecx,0x80000000
6401f917:	add    ecx,0x7fff8000
6401f91d:	mov    DWORD PTR [ebp-0x18],ecx
6401f920:	xor    eax,eax
6401f922:	jmp    0x6401f95a
6401f924:	mov    ax,WORD PTR [ebp-0xe]
6401f928:	mov    WORD PTR [ebp-0x20],ax
6401f92c:	mov    eax,DWORD PTR [ebp-0xc]
6401f92f:	mov    DWORD PTR [ebp-0x1e],eax
6401f932:	mov    eax,DWORD PTR [ebp-0x8]
6401f935:	or     edi,ecx
6401f937:	mov    DWORD PTR [ebp-0x1a],eax
6401f93a:	mov    WORD PTR [ebp-0x16],di
6401f93e:	jmp    0x6401f920
6401f940:	neg    cx
6401f943:	sbb    ecx,ecx
6401f945:	and    ecx,0x80000000
6401f94b:	add    ecx,0x7fff8000
6401f951:	mov    DWORD PTR [ebp-0x18],ecx
6401f954:	mov    DWORD PTR [ebp-0x1c],eax
6401f957:	mov    DWORD PTR [ebp-0x20],eax
6401f95a:	test   BYTE PTR [ebp+0x18],0x1
6401f95e:	mov    edx,DWORD PTR [ebp-0x60]
6401f961:	mov    ecx,DWORD PTR [ebp-0x4c]
6401f964:	mov    WORD PTR [edx],cx
6401f967:	je     0x6401f99b
6401f969:	movsx  ecx,cx
6401f96c:	add    DWORD PTR [ebp+0x14],ecx
6401f96f:	cmp    DWORD PTR [ebp+0x14],eax
6401f972:	jg     0x6401f99b
6401f974:	and    WORD PTR [edx],0x0
6401f978:	cmp    WORD PTR [ebp-0x6c],0x8000
6401f97e:	mov    BYTE PTR [edx+0x3],0x1
6401f982:	setne  al
6401f985:	dec    al
6401f987:	and    al,0xd
6401f989:	add    al,0x20
6401f98b:	mov    BYTE PTR [edx+0x2],al
6401f98e:	mov    BYTE PTR [edx+0x4],0x30
6401f992:	mov    BYTE PTR [edx+0x5],0x0
6401f996:	jmp    0x6401f34c
6401f99b:	push   0x15
6401f99d:	pop    ecx
6401f99e:	cmp    DWORD PTR [ebp+0x14],ecx
6401f9a1:	jle    0x6401f9a6
6401f9a3:	mov    DWORD PTR [ebp+0x14],ecx
6401f9a6:	mov    esi,DWORD PTR [ebp-0x18]
6401f9a9:	shr    esi,0x10
6401f9ac:	push   0x8
6401f9ae:	sub    esi,0x3ffe
6401f9b4:	mov    WORD PTR [ebp-0x16],ax
6401f9b8:	pop    ebx
6401f9b9:	mov    eax,DWORD PTR [ebp-0x20]
6401f9bc:	mov    edi,DWORD PTR [ebp-0x1c]
6401f9bf:	mov    ecx,DWORD PTR [ebp-0x1c]
6401f9c2:	shl    DWORD PTR [ebp-0x20],1
6401f9c5:	shr    eax,0x1f
6401f9c8:	add    edi,edi
6401f9ca:	or     edi,eax
6401f9cc:	mov    eax,DWORD PTR [ebp-0x18]
6401f9cf:	shr    ecx,0x1f
6401f9d2:	add    eax,eax
6401f9d4:	or     eax,ecx
6401f9d6:	dec    ebx
6401f9d7:	mov    DWORD PTR [ebp-0x1c],edi
6401f9da:	mov    DWORD PTR [ebp-0x18],eax
6401f9dd:	jne    0x6401f9b9
6401f9df:	test   esi,esi
6401f9e1:	jge    0x6401fa15
6401f9e3:	neg    esi
6401f9e5:	and    esi,0xff
6401f9eb:	jle    0x6401fa15
6401f9ed:	mov    eax,DWORD PTR [ebp-0x18]
6401f9f0:	mov    edi,DWORD PTR [ebp-0x1c]
6401f9f3:	mov    ecx,DWORD PTR [ebp-0x1c]
6401f9f6:	shr    DWORD PTR [ebp-0x18],1
6401f9f9:	shl    eax,0x1f
6401f9fc:	shr    edi,1
6401f9fe:	or     edi,eax
6401fa00:	mov    eax,DWORD PTR [ebp-0x20]
6401fa03:	shl    ecx,0x1f
6401fa06:	shr    eax,1
6401fa08:	or     eax,ecx
6401fa0a:	dec    esi
6401fa0b:	test   esi,esi
6401fa0d:	mov    DWORD PTR [ebp-0x1c],edi
6401fa10:	mov    DWORD PTR [ebp-0x20],eax
6401fa13:	jg     0x6401f9ed
6401fa15:	mov    eax,DWORD PTR [ebp+0x14]
6401fa18:	inc    eax
6401fa19:	test   eax,eax
6401fa1b:	lea    ebx,[edx+0x4]
6401fa1e:	mov    DWORD PTR [ebp-0x40],ebx
6401fa21:	mov    DWORD PTR [ebp-0x4c],eax
6401fa24:	jle    0x6401fadf
6401fa2a:	mov    edx,DWORD PTR [ebp-0x20]
6401fa2d:	mov    eax,DWORD PTR [ebp-0x1c]
6401fa30:	lea    esi,[ebp-0x20]
6401fa33:	lea    edi,[ebp-0x3c]
6401fa36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401fa37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401fa38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401fa39:	shl    DWORD PTR [ebp-0x20],1
6401fa3c:	mov    edi,DWORD PTR [ebp-0x20]
6401fa3f:	shl    DWORD PTR [ebp-0x20],1
6401fa42:	shr    edx,0x1f
6401fa45:	lea    ecx,[eax+eax*1]
6401fa48:	or     ecx,edx
6401fa4a:	mov    edx,DWORD PTR [ebp-0x18]
6401fa4d:	mov    esi,eax
6401fa4f:	shr    esi,0x1f
6401fa52:	add    edx,edx
6401fa54:	or     edx,esi
6401fa56:	mov    eax,ecx
6401fa58:	lea    esi,[ecx+ecx*1]
6401fa5b:	shr    eax,0x1f
6401fa5e:	lea    ecx,[edx+edx*1]
6401fa61:	mov    edx,DWORD PTR [ebp-0x3c]
6401fa64:	shr    edi,0x1f
6401fa67:	or     ecx,eax
6401fa69:	mov    eax,DWORD PTR [ebp-0x20]
6401fa6c:	or     esi,edi
6401fa6e:	lea    edi,[edx+eax*1]
6401fa71:	cmp    edi,eax
6401fa73:	jb     0x6401fa79
6401fa75:	cmp    edi,edx
6401fa77:	jae    0x6401fa91
6401fa79:	lea    eax,[esi+0x1]
6401fa7c:	xor    edx,edx
6401fa7e:	cmp    eax,esi
6401fa80:	jb     0x6401fa87
6401fa82:	cmp    eax,0x1
6401fa85:	jae    0x6401fa8a
6401fa87:	xor    edx,edx
6401fa89:	inc    edx
6401fa8a:	test   edx,edx
6401fa8c:	mov    esi,eax
6401fa8e:	je     0x6401fa91
6401fa90:	inc    ecx
6401fa91:	mov    eax,DWORD PTR [ebp-0x38]
6401fa94:	lea    edx,[eax+esi*1]
6401fa97:	cmp    edx,esi
6401fa99:	mov    DWORD PTR [ebp-0x44],edx
6401fa9c:	jb     0x6401faa2
6401fa9e:	cmp    edx,eax
6401faa0:	jae    0x6401faa3
6401faa2:	inc    ecx
6401faa3:	add    ecx,DWORD PTR [ebp-0x34]
6401faa6:	shr    edx,0x1f
6401faa9:	add    ecx,ecx
6401faab:	or     ecx,edx
6401faad:	lea    esi,[edi+edi*1]
6401fab0:	mov    DWORD PTR [ebp-0x20],esi
6401fab3:	mov    esi,DWORD PTR [ebp-0x44]
6401fab6:	mov    DWORD PTR [ebp-0x18],ecx
6401fab9:	shr    ecx,0x18
6401fabc:	add    esi,esi
6401fabe:	add    cl,0x30
6401fac1:	mov    eax,edi
6401fac3:	shr    eax,0x1f
6401fac6:	or     esi,eax
6401fac8:	mov    BYTE PTR [ebx],cl
6401faca:	inc    ebx
6401facb:	dec    DWORD PTR [ebp-0x4c]
6401face:	cmp    DWORD PTR [ebp-0x4c],0x0
6401fad2:	mov    DWORD PTR [ebp-0x1c],esi
6401fad5:	mov    BYTE PTR [ebp-0x15],0x0
6401fad9:	jg     0x6401fa2a
6401fadf:	dec    ebx
6401fae0:	mov    al,BYTE PTR [ebx]
6401fae2:	dec    ebx
6401fae3:	cmp    al,0x35
6401fae5:	jge    0x6401faf5
6401fae7:	mov    ecx,DWORD PTR [ebp-0x40]
6401faea:	jmp    0x6401fb30
6401faec:	cmp    BYTE PTR [ebx],0x39
6401faef:	jne    0x6401fafa
6401faf1:	mov    BYTE PTR [ebx],0x30
6401faf4:	dec    ebx
6401faf5:	cmp    ebx,DWORD PTR [ebp-0x40]
6401faf8:	jae    0x6401faec
6401fafa:	cmp    ebx,DWORD PTR [ebp-0x40]
6401fafd:	mov    eax,DWORD PTR [ebp-0x60]
6401fb00:	jae    0x6401fb06
6401fb02:	inc    ebx
6401fb03:	inc    WORD PTR [eax]
6401fb06:	inc    BYTE PTR [ebx]
6401fb08:	sub    bl,al
6401fb0a:	sub    bl,0x3
6401fb0d:	movsx  ecx,bl
6401fb10:	mov    BYTE PTR [eax+0x3],bl
6401fb13:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
6401fb18:	mov    eax,DWORD PTR [ebp-0x74]
6401fb1b:	mov    ecx,DWORD PTR [ebp-0x4]
6401fb1e:	pop    edi
6401fb1f:	pop    esi
6401fb20:	xor    ecx,ebp
6401fb22:	pop    ebx
6401fb23:	call   0x64010c1e
6401fb28:	leave  
6401fb29:	ret    
6401fb2a:	cmp    BYTE PTR [ebx],0x30
6401fb2d:	jne    0x6401fb34
6401fb2f:	dec    ebx
6401fb30:	cmp    ebx,ecx
6401fb32:	jae    0x6401fb2a
6401fb34:	cmp    ebx,ecx
6401fb36:	mov    eax,DWORD PTR [ebp-0x60]
6401fb39:	jae    0x6401fb08
6401fb3b:	and    WORD PTR [eax],0x0
6401fb3f:	cmp    WORD PTR [ebp-0x6c],0x8000
6401fb45:	mov    BYTE PTR [eax+0x3],0x1
6401fb49:	setne  dl
6401fb4c:	dec    dl
6401fb4e:	and    dl,0xd
6401fb51:	add    dl,0x20
6401fb54:	mov    BYTE PTR [eax+0x2],dl
6401fb57:	mov    BYTE PTR [ecx],0x30
6401fb5a:	mov    BYTE PTR [eax+0x5],0x0
6401fb5e:	jmp    0x6401f34c
6401fb63:	xor    eax,eax
6401fb65:	test   bl,0x10
6401fb68:	je     0x6401fb6b
6401fb6a:	inc    eax
6401fb6b:	test   bl,0x8
6401fb6e:	je     0x6401fb73
6401fb70:	or     eax,0x4
6401fb73:	test   bl,0x4
6401fb76:	je     0x6401fb7b
6401fb78:	or     eax,0x8
6401fb7b:	test   bl,0x2
6401fb7e:	je     0x6401fb83
6401fb80:	or     eax,0x10
6401fb83:	test   bl,0x1
6401fb86:	je     0x6401fb8b
6401fb88:	or     eax,0x20
6401fb8b:	test   ebx,0x80000
6401fb91:	je     0x6401fb96
6401fb93:	or     eax,0x2
6401fb96:	mov    ecx,ebx
6401fb98:	mov    edx,0x300
6401fb9d:	and    ecx,edx
6401fb9f:	push   esi
6401fba0:	mov    esi,0x200
6401fba5:	je     0x6401fbca
6401fba7:	cmp    ecx,0x100
6401fbad:	je     0x6401fbc5
6401fbaf:	cmp    ecx,esi
6401fbb1:	je     0x6401fbbe
6401fbb3:	cmp    ecx,edx
6401fbb5:	jne    0x6401fbca
6401fbb7:	or     eax,0xc00
6401fbbc:	jmp    0x6401fbca
6401fbbe:	or     eax,0x800
6401fbc3:	jmp    0x6401fbca
6401fbc5:	or     eax,0x400
6401fbca:	mov    ecx,ebx
6401fbcc:	and    ecx,0x30000
6401fbd2:	je     0x6401fbe0
6401fbd4:	cmp    ecx,0x10000
6401fbda:	jne    0x6401fbe2
6401fbdc:	or     eax,esi
6401fbde:	jmp    0x6401fbe2
6401fbe0:	or     eax,edx
6401fbe2:	test   ebx,0x40000
6401fbe8:	pop    esi
6401fbe9:	je     0x6401fbf0
6401fbeb:	or     eax,0x1000
6401fbf0:	ret    
6401fbf1:	xor    eax,eax
6401fbf3:	test   dl,0x10
6401fbf6:	je     0x6401fbfd
6401fbf8:	mov    eax,0x80
6401fbfd:	test   dl,0x8
6401fc00:	push   ebx
6401fc01:	push   esi
6401fc02:	push   edi
6401fc03:	mov    ebx,0x200
6401fc08:	je     0x6401fc0c
6401fc0a:	or     eax,ebx
6401fc0c:	test   dl,0x4
6401fc0f:	je     0x6401fc16
6401fc11:	or     eax,0x400
6401fc16:	test   dl,0x2
6401fc19:	je     0x6401fc20
6401fc1b:	or     eax,0x800
6401fc20:	test   dl,0x1
6401fc23:	je     0x6401fc2a
6401fc25:	or     eax,0x1000
6401fc2a:	test   edx,0x80000
6401fc30:	mov    edi,0x100
6401fc35:	je     0x6401fc39
6401fc37:	or     eax,edi
6401fc39:	mov    ecx,edx
6401fc3b:	mov    esi,0x300
6401fc40:	and    ecx,esi
6401fc42:	je     0x6401fc63
6401fc44:	cmp    ecx,edi
6401fc46:	je     0x6401fc5e
6401fc48:	cmp    ecx,ebx
6401fc4a:	je     0x6401fc57
6401fc4c:	cmp    ecx,esi
6401fc4e:	jne    0x6401fc63
6401fc50:	or     eax,0x6000
6401fc55:	jmp    0x6401fc63
6401fc57:	or     eax,0x4000
6401fc5c:	jmp    0x6401fc63
6401fc5e:	or     eax,0x2000
6401fc63:	mov    ecx,0x3000000
6401fc68:	pop    edi
6401fc69:	and    edx,ecx
6401fc6b:	cmp    edx,0x1000000
6401fc71:	pop    esi
6401fc72:	pop    ebx
6401fc73:	je     0x6401fc8b
6401fc75:	cmp    edx,0x2000000
6401fc7b:	je     0x6401fc87
6401fc7d:	cmp    edx,ecx
6401fc7f:	jne    0x6401fc90
6401fc81:	or     eax,0x8000
6401fc86:	ret    
6401fc87:	or     eax,0x40
6401fc8a:	ret    
6401fc8b:	or     eax,0x8040
6401fc90:	ret    
6401fc91:	sub    esp,0x10
6401fc94:	push   ebx
6401fc95:	push   ebp
6401fc96:	push   esi
6401fc97:	push   edi
6401fc98:	fstcw  WORD PTR [esp+0x14]
6401fc9d:	mov    ebx,DWORD PTR [esp+0x14]
6401fca1:	xor    edx,edx
6401fca3:	test   bl,0x1
6401fca6:	je     0x6401fcab
6401fca8:	push   0x10
6401fcaa:	pop    edx
6401fcab:	test   bl,0x4
6401fcae:	je     0x6401fcb3
6401fcb0:	or     edx,0x8
6401fcb3:	test   bl,0x8
6401fcb6:	je     0x6401fcbb
6401fcb8:	or     edx,0x4
6401fcbb:	test   bl,0x10
6401fcbe:	je     0x6401fcc3
6401fcc0:	or     edx,0x2
6401fcc3:	test   bl,0x20
6401fcc6:	je     0x6401fccb
6401fcc8:	or     edx,0x1
6401fccb:	test   bl,0x2
6401fcce:	je     0x6401fcd6
6401fcd0:	or     edx,0x80000
6401fcd6:	movzx  ecx,bx
6401fcd9:	mov    eax,ecx
6401fcdb:	mov    edi,0xc00
6401fce0:	and    eax,edi
6401fce2:	mov    ebp,0x300
6401fce7:	mov    esi,0x200
6401fcec:	je     0x6401fd0e
6401fcee:	cmp    eax,0x400
6401fcf3:	je     0x6401fd08
6401fcf5:	cmp    eax,0x800
6401fcfa:	je     0x6401fd04
6401fcfc:	cmp    eax,edi
6401fcfe:	jne    0x6401fd0e
6401fd00:	or     edx,ebp
6401fd02:	jmp    0x6401fd0e
6401fd04:	or     edx,esi
6401fd06:	jmp    0x6401fd0e
6401fd08:	or     edx,0x100
6401fd0e:	and    ecx,ebp
6401fd10:	je     0x6401fd1e
6401fd12:	cmp    ecx,esi
6401fd14:	jne    0x6401fd24
6401fd16:	or     edx,0x10000
6401fd1c:	jmp    0x6401fd24
6401fd1e:	or     edx,0x20000
6401fd24:	test   bx,0x1000
6401fd29:	je     0x6401fd31
6401fd2b:	or     edx,0x40000
6401fd31:	mov    esi,DWORD PTR [esp+0x28]
6401fd35:	mov    ecx,DWORD PTR [esp+0x24]
6401fd39:	mov    eax,esi
6401fd3b:	not    eax
6401fd3d:	and    eax,edx
6401fd3f:	and    ecx,esi
6401fd41:	or     eax,ecx
6401fd43:	cmp    eax,edx
6401fd45:	mov    DWORD PTR [esp+0x1c],eax
6401fd49:	je     0x6401fdf9
6401fd4f:	mov    ebx,eax
6401fd51:	call   0x6401fb63
6401fd56:	movzx  eax,ax
6401fd59:	mov    DWORD PTR [esp+0x10],eax
6401fd5d:	fldcw  WORD PTR [esp+0x10]
6401fd61:	fstcw  WORD PTR [esp+0x10]
6401fd66:	mov    ebx,DWORD PTR [esp+0x10]
6401fd6a:	xor    edx,edx
6401fd6c:	test   bl,0x1
6401fd6f:	je     0x6401fd74
6401fd71:	push   0x10
6401fd73:	pop    edx
6401fd74:	test   bl,0x4
6401fd77:	je     0x6401fd7c
6401fd79:	or     edx,0x8
6401fd7c:	test   bl,0x8
6401fd7f:	je     0x6401fd84
6401fd81:	or     edx,0x4
6401fd84:	test   bl,0x10
6401fd87:	je     0x6401fd8c
6401fd89:	or     edx,0x2
6401fd8c:	test   bl,0x20
6401fd8f:	je     0x6401fd94
6401fd91:	or     edx,0x1
6401fd94:	test   bl,0x2
6401fd97:	je     0x6401fd9f
6401fd99:	or     edx,0x80000
6401fd9f:	movzx  ecx,bx
6401fda2:	mov    eax,ecx
6401fda4:	and    eax,edi
6401fda6:	je     0x6401fdcc
6401fda8:	cmp    eax,0x400
6401fdad:	je     0x6401fdc6
6401fdaf:	cmp    eax,0x800
6401fdb4:	je     0x6401fdbe
6401fdb6:	cmp    eax,edi
6401fdb8:	jne    0x6401fdcc
6401fdba:	or     edx,ebp
6401fdbc:	jmp    0x6401fdcc
6401fdbe:	or     edx,0x200
6401fdc4:	jmp    0x6401fdcc
6401fdc6:	or     edx,0x100
6401fdcc:	and    ecx,ebp
6401fdce:	je     0x6401fde0
6401fdd0:	cmp    ecx,0x200
6401fdd6:	jne    0x6401fde6
6401fdd8:	or     edx,0x10000
6401fdde:	jmp    0x6401fde6
6401fde0:	or     edx,0x20000
6401fde6:	test   bx,0x1000
6401fdeb:	je     0x6401fdf3
6401fded:	or     edx,0x40000
6401fdf3:	mov    eax,edx
6401fdf5:	mov    DWORD PTR [esp+0x1c],edx
6401fdf9:	cmp    DWORD PTR ds:0x6402e5a4,0x0
6401fe00:	je     0x6401ff8c
6401fe06:	and    esi,0x308031f
6401fe0c:	mov    edi,esi
6401fe0e:	stmxcsr DWORD PTR [esp+0x18]
6401fe13:	mov    eax,DWORD PTR [esp+0x18]
6401fe17:	xor    esi,esi
6401fe19:	test   al,al
6401fe1b:	jns    0x6401fe20
6401fe1d:	push   0x10
6401fe1f:	pop    esi
6401fe20:	test   ax,0x200
6401fe24:	je     0x6401fe29
6401fe26:	or     esi,0x8
6401fe29:	test   ax,0x400
6401fe2d:	je     0x6401fe32
6401fe2f:	or     esi,0x4
6401fe32:	test   ax,0x800
6401fe36:	je     0x6401fe3b
6401fe38:	or     esi,0x2
6401fe3b:	test   ax,0x1000
6401fe3f:	je     0x6401fe44
6401fe41:	or     esi,0x1
6401fe44:	test   ax,0x100
6401fe48:	je     0x6401fe50
6401fe4a:	or     esi,0x80000
6401fe50:	mov    ecx,eax
6401fe52:	mov    ebp,0x6000
6401fe57:	and    ecx,ebp
6401fe59:	je     0x6401fe85
6401fe5b:	cmp    ecx,0x2000
6401fe61:	je     0x6401fe7f
6401fe63:	cmp    ecx,0x4000
6401fe69:	je     0x6401fe77
6401fe6b:	cmp    ecx,ebp
6401fe6d:	jne    0x6401fe85
6401fe6f:	or     esi,0x300
6401fe75:	jmp    0x6401fe85
6401fe77:	or     esi,0x200
6401fe7d:	jmp    0x6401fe85
6401fe7f:	or     esi,0x100
6401fe85:	mov    ebx,0x8040
6401fe8a:	and    eax,ebx
6401fe8c:	sub    eax,0x40
6401fe8f:	je     0x6401fead
6401fe91:	sub    eax,0x7fc0
6401fe96:	je     0x6401fea5
6401fe98:	sub    eax,0x40
6401fe9b:	jne    0x6401feb3
6401fe9d:	or     esi,0x1000000
6401fea3:	jmp    0x6401feb3
6401fea5:	or     esi,0x3000000
6401feab:	jmp    0x6401feb3
6401fead:	or     esi,0x2000000
6401feb3:	mov    edx,edi
6401feb5:	and    edi,DWORD PTR [esp+0x24]
6401feb9:	not    edx
6401febb:	and    edx,esi
6401febd:	or     edx,edi
6401febf:	cmp    edx,esi
6401fec1:	jne    0x6401feca
6401fec3:	mov    eax,esi
6401fec5:	jmp    0x6401ff75
6401feca:	call   0x6401fbf1
6401fecf:	push   eax
6401fed0:	mov    DWORD PTR [esp+0x2c],eax
6401fed4:	call   0x64020160
6401fed9:	pop    ecx
6401feda:	stmxcsr DWORD PTR [esp+0x28]
6401fedf:	mov    eax,DWORD PTR [esp+0x28]
6401fee3:	xor    edx,edx
6401fee5:	test   al,al
6401fee7:	jns    0x6401feec
6401fee9:	push   0x10
6401feeb:	pop    edx
6401feec:	mov    edi,0x200
6401fef1:	test   edi,eax
6401fef3:	je     0x6401fef8
6401fef5:	or     edx,0x8
6401fef8:	test   ax,0x400
6401fefc:	je     0x6401ff01
6401fefe:	or     edx,0x4
6401ff01:	test   ax,0x800
6401ff05:	je     0x6401ff0a
6401ff07:	or     edx,0x2
6401ff0a:	test   ax,0x1000
6401ff0e:	je     0x6401ff13
6401ff10:	or     edx,0x1
6401ff13:	mov    esi,0x100
6401ff18:	test   esi,eax
6401ff1a:	je     0x6401ff22
6401ff1c:	or     edx,0x80000
6401ff22:	mov    ecx,eax
6401ff24:	and    ecx,ebp
6401ff26:	je     0x6401ff4a
6401ff28:	cmp    ecx,0x2000
6401ff2e:	je     0x6401ff48
6401ff30:	cmp    ecx,0x4000
6401ff36:	je     0x6401ff44
6401ff38:	cmp    ecx,ebp
6401ff3a:	jne    0x6401ff4a
6401ff3c:	or     edx,0x300
6401ff42:	jmp    0x6401ff4a
6401ff44:	or     edx,edi
6401ff46:	jmp    0x6401ff4a
6401ff48:	or     edx,esi
6401ff4a:	and    eax,ebx
6401ff4c:	sub    eax,0x40
6401ff4f:	je     0x6401ff6d
6401ff51:	sub    eax,0x7fc0
6401ff56:	je     0x6401ff65
6401ff58:	sub    eax,0x40
6401ff5b:	jne    0x6401ff73
6401ff5d:	or     edx,0x1000000
6401ff63:	jmp    0x6401ff73
6401ff65:	or     edx,0x3000000
6401ff6b:	jmp    0x6401ff73
6401ff6d:	or     edx,0x2000000
6401ff73:	mov    eax,edx
6401ff75:	mov    ecx,DWORD PTR [esp+0x1c]
6401ff79:	mov    edx,eax
6401ff7b:	xor    edx,ecx
6401ff7d:	or     eax,ecx
6401ff7f:	test   edx,0x8031f
6401ff85:	je     0x6401ff8c
6401ff87:	or     eax,0x80000000
6401ff8c:	pop    edi
6401ff8d:	pop    esi
6401ff8e:	pop    ebp
6401ff8f:	pop    ebx
6401ff90:	add    esp,0x10
6401ff93:	ret    
6401ff94:	push   ebp
6401ff95:	mov    ebp,esp
6401ff97:	sub    esp,0x18
6401ff9a:	mov    eax,ds:0x64029038
6401ff9f:	xor    eax,ebp
6401ffa1:	mov    DWORD PTR [ebp-0x4],eax
6401ffa4:	mov    eax,DWORD PTR [ebp+0x10]
6401ffa7:	push   ebx
6401ffa8:	push   esi
6401ffa9:	xor    esi,esi
6401ffab:	cmp    DWORD PTR [ebp+0xc],esi
6401ffae:	push   edi
6401ffaf:	mov    DWORD PTR [ebp-0x18],0x404e
6401ffb6:	mov    DWORD PTR [eax],esi
6401ffb8:	mov    DWORD PTR [eax+0x4],esi
6401ffbb:	mov    DWORD PTR [eax+0x8],esi
6401ffbe:	jbe    0x6402010a
6401ffc4:	mov    edx,DWORD PTR [eax]
6401ffc6:	mov    ebx,DWORD PTR [eax+0x4]
6401ffc9:	mov    esi,eax
6401ffcb:	lea    edi,[ebp-0x10]
6401ffce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401ffcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401ffd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401ffd1:	mov    ecx,edx
6401ffd3:	shr    ecx,0x1f
6401ffd6:	lea    edi,[edx+edx*1]
6401ffd9:	lea    edx,[ebx+ebx*1]
6401ffdc:	or     edx,ecx
6401ffde:	mov    ecx,DWORD PTR [eax+0x8]
6401ffe1:	mov    esi,ebx
6401ffe3:	shr    esi,0x1f
6401ffe6:	add    ecx,ecx
6401ffe8:	or     ecx,esi
6401ffea:	mov    DWORD PTR [ebp-0x14],edi
6401ffed:	mov    esi,edi
6401ffef:	and    DWORD PTR [ebp-0x14],0x0
6401fff3:	mov    ebx,edx
6401fff5:	shr    ebx,0x1f
6401fff8:	add    ecx,ecx
6401fffa:	shr    edi,0x1f
6401fffd:	or     ecx,ebx
6401ffff:	mov    ebx,DWORD PTR [ebp-0x10]
64020002:	add    esi,esi
64020004:	add    edx,edx
64020006:	or     edx,edi
64020008:	lea    edi,[esi+ebx*1]
6402000b:	cmp    edi,esi
6402000d:	mov    DWORD PTR [eax],esi
6402000f:	mov    DWORD PTR [eax+0x4],edx
64020012:	mov    DWORD PTR [eax+0x8],ecx
64020015:	jb     0x6402001b
64020017:	cmp    edi,ebx
64020019:	jae    0x64020022
6402001b:	mov    DWORD PTR [ebp-0x14],0x1
64020022:	xor    ebx,ebx
64020024:	cmp    DWORD PTR [ebp-0x14],ebx
64020027:	mov    DWORD PTR [eax],edi
64020029:	je     0x64020045
6402002b:	lea    esi,[edx+0x1]
6402002e:	cmp    esi,edx
64020030:	jb     0x64020037
64020032:	cmp    esi,0x1
64020035:	jae    0x6402003a
64020037:	xor    ebx,ebx
64020039:	inc    ebx
6402003a:	test   ebx,ebx
6402003c:	mov    DWORD PTR [eax+0x4],esi
6402003f:	je     0x64020045
64020041:	inc    ecx
64020042:	mov    DWORD PTR [eax+0x8],ecx
64020045:	mov    ecx,DWORD PTR [eax+0x4]
64020048:	mov    edx,DWORD PTR [ebp-0xc]
6402004b:	lea    ebx,[ecx+edx*1]
6402004e:	xor    esi,esi
64020050:	cmp    ebx,ecx
64020052:	jb     0x64020058
64020054:	cmp    ebx,edx
64020056:	jae    0x6402005b
64020058:	xor    esi,esi
6402005a:	inc    esi
6402005b:	test   esi,esi
6402005d:	mov    DWORD PTR [eax+0x4],ebx
64020060:	je     0x64020065
64020062:	inc    DWORD PTR [eax+0x8]
64020065:	mov    ecx,DWORD PTR [ebp-0x8]
64020068:	add    DWORD PTR [eax+0x8],ecx
6402006b:	and    DWORD PTR [ebp-0x14],0x0
6402006f:	lea    ecx,[edi+edi*1]
64020072:	mov    edx,edi
64020074:	shr    edx,0x1f
64020077:	lea    edi,[ebx+ebx*1]
6402007a:	or     edi,edx
6402007c:	mov    edx,DWORD PTR [eax+0x8]
6402007f:	mov    esi,ebx
64020081:	shr    esi,0x1f
64020084:	lea    ebx,[edx+edx*1]
64020087:	mov    edx,DWORD PTR [ebp+0x8]
6402008a:	or     ebx,esi
6402008c:	mov    DWORD PTR [eax],ecx
6402008e:	mov    DWORD PTR [eax+0x4],edi
64020091:	mov    DWORD PTR [eax+0x8],ebx
64020094:	movsx  edx,BYTE PTR [edx]
64020097:	lea    esi,[ecx+edx*1]
6402009a:	cmp    esi,ecx
6402009c:	mov    DWORD PTR [ebp-0x10],edx
6402009f:	jb     0x640200a5
640200a1:	cmp    esi,edx
640200a3:	jae    0x640200ac
640200a5:	mov    DWORD PTR [ebp-0x14],0x1
640200ac:	cmp    DWORD PTR [ebp-0x14],0x0
640200b0:	mov    DWORD PTR [eax],esi
640200b2:	je     0x640200d0
640200b4:	lea    ecx,[edi+0x1]
640200b7:	xor    edx,edx
640200b9:	cmp    ecx,edi
640200bb:	jb     0x640200c2
640200bd:	cmp    ecx,0x1
640200c0:	jae    0x640200c5
640200c2:	xor    edx,edx
640200c4:	inc    edx
640200c5:	test   edx,edx
640200c7:	mov    DWORD PTR [eax+0x4],ecx
640200ca:	je     0x640200d0
640200cc:	inc    ebx
640200cd:	mov    DWORD PTR [eax+0x8],ebx
640200d0:	dec    DWORD PTR [ebp+0xc]
640200d3:	inc    DWORD PTR [ebp+0x8]
640200d6:	cmp    DWORD PTR [ebp+0xc],0x0
640200da:	ja     0x6401ffc4
640200e0:	xor    esi,esi
640200e2:	jmp    0x6402010a
640200e4:	mov    ecx,DWORD PTR [eax+0x4]
640200e7:	mov    edx,ecx
640200e9:	shr    edx,0x10
640200ec:	mov    DWORD PTR [eax+0x8],edx
640200ef:	mov    edx,DWORD PTR [eax]
640200f1:	mov    edi,edx
640200f3:	shl    ecx,0x10
640200f6:	shr    edi,0x10
640200f9:	or     ecx,edi
640200fb:	shl    edx,0x10
640200fe:	add    DWORD PTR [ebp-0x18],0xfff0
64020105:	mov    DWORD PTR [eax+0x4],ecx
64020108:	mov    DWORD PTR [eax],edx
6402010a:	cmp    DWORD PTR [eax+0x8],esi
6402010d:	je     0x640200e4
6402010f:	mov    ebx,0x8000
64020114:	test   DWORD PTR [eax+0x8],ebx
64020117:	jne    0x64020149
64020119:	mov    esi,DWORD PTR [eax]
6402011b:	mov    edi,DWORD PTR [eax+0x4]
6402011e:	add    DWORD PTR [ebp-0x18],0xffff
64020125:	mov    ecx,esi
64020127:	add    esi,esi
64020129:	shr    ecx,0x1f
6402012c:	mov    DWORD PTR [eax],esi
6402012e:	lea    esi,[edi+edi*1]
64020131:	or     esi,ecx
64020133:	mov    ecx,DWORD PTR [eax+0x8]
64020136:	mov    edx,edi
64020138:	shr    edx,0x1f
6402013b:	add    ecx,ecx
6402013d:	or     ecx,edx
6402013f:	test   ebx,ecx
64020141:	mov    DWORD PTR [eax+0x4],esi
64020144:	mov    DWORD PTR [eax+0x8],ecx
64020147:	je     0x64020119
64020149:	mov    cx,WORD PTR [ebp-0x18]
6402014d:	mov    WORD PTR [eax+0xa],cx
64020151:	mov    ecx,DWORD PTR [ebp-0x4]
64020154:	pop    edi
64020155:	pop    esi
64020156:	xor    ecx,ebp
64020158:	pop    ebx
64020159:	call   0x64010c1e
6402015e:	leave  
6402015f:	ret    
64020160:	push   0x8
64020162:	push   0x64026df8
64020167:	call   0x64011fc8
6402016c:	xor    eax,eax
6402016e:	cmp    DWORD PTR ds:0x6402e5a4,eax
64020174:	je     0x640201cc
64020176:	test   BYTE PTR [ebp+0x8],0x40
6402017a:	je     0x640201c4
6402017c:	cmp    DWORD PTR ds:0x6402a304,eax
64020182:	je     0x640201c4
64020184:	mov    DWORD PTR [ebp-0x4],eax
64020187:	ldmxcsr DWORD PTR [ebp+0x8]
6402018b:	jmp    0x640201bb
6402018d:	mov    eax,DWORD PTR [ebp-0x14]
64020190:	mov    eax,DWORD PTR [eax]
64020192:	mov    eax,DWORD PTR [eax]
64020194:	cmp    eax,0xc0000005
64020199:	je     0x640201a5
6402019b:	cmp    eax,0xc000001d
640201a0:	je     0x640201a5
640201a2:	xor    eax,eax
640201a4:	ret    
640201a5:	xor    eax,eax
640201a7:	inc    eax
640201a8:	ret    
640201a9:	mov    esp,DWORD PTR [ebp-0x18]
640201ac:	and    DWORD PTR ds:0x6402a304,0x0
640201b3:	and    DWORD PTR [ebp+0x8],0xffffffbf
640201b7:	ldmxcsr DWORD PTR [ebp+0x8]
640201bb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640201c2:	jmp    0x640201cc
640201c4:	and    DWORD PTR [ebp+0x8],0xffffffbf
640201c8:	ldmxcsr DWORD PTR [ebp+0x8]
640201cc:	call   0x6401200d
640201d1:	ret    
640201d2:	int3   
640201d3:	int3   
640201d4:	int3   
640201d5:	int3   
640201d6:	int3   
640201d7:	int3   
640201d8:	int3   
640201d9:	int3   
640201da:	int3   
640201db:	int3   
640201dc:	int3   
640201dd:	int3   
640201de:	int3   
640201df:	int3   
640201e0:	mov    eax,DWORD PTR [ebp-0x10]
640201e3:	and    eax,0x1
640201e6:	je     0x640201f8
640201ec:	and    DWORD PTR [ebp-0x10],0xfffffffe
640201f0:	mov    ecx,DWORD PTR [ebp+0x4]
640201f3:	jmp    0x64001680
640201f8:	ret    
640201f9:	mov    edx,DWORD PTR [esp+0x8]
640201fd:	lea    eax,[edx-0xc]
64020200:	mov    ecx,DWORD PTR [edx-0x10]
64020203:	xor    ecx,eax
64020205:	call   0x64010c1e
6402020a:	mov    eax,0x640264d0
6402020f:	jmp    0x640108e0
64020214:	int3   
64020215:	int3   
64020216:	int3   
64020217:	int3   
64020218:	int3   
64020219:	int3   
6402021a:	int3   
6402021b:	int3   
6402021c:	int3   
6402021d:	int3   
6402021e:	int3   
6402021f:	int3   
64020220:	mov    eax,DWORD PTR [ebp-0x10]
64020223:	and    eax,0x1
64020226:	je     0x64020238
6402022c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64020230:	mov    ecx,DWORD PTR [ebp+0x4]
64020233:	jmp    0x64001680
64020238:	ret    
64020239:	mov    edx,DWORD PTR [esp+0x8]
6402023d:	lea    eax,[edx-0x10]
64020240:	mov    ecx,DWORD PTR [edx-0x14]
64020243:	xor    ecx,eax
64020245:	call   0x64010c1e
6402024a:	mov    eax,0x640264fc
6402024f:	jmp    0x640108e0
64020254:	int3   
64020255:	int3   
64020256:	int3   
64020257:	int3   
64020258:	int3   
64020259:	int3   
6402025a:	int3   
6402025b:	int3   
6402025c:	int3   
6402025d:	int3   
6402025e:	int3   
6402025f:	int3   
64020260:	lea    ecx,[ebp-0x50]
64020263:	jmp    0x64001650
64020268:	mov    edx,DWORD PTR [esp+0x8]
6402026c:	lea    eax,[edx-0x44]
6402026f:	mov    ecx,DWORD PTR [edx-0x48]
64020272:	xor    ecx,eax
64020274:	call   0x64010c1e
64020279:	mov    eax,0x64026528
6402027e:	jmp    0x640108e0
64020283:	int3   
64020284:	int3   
64020285:	int3   
64020286:	int3   
64020287:	int3   
64020288:	int3   
64020289:	int3   
6402028a:	int3   
6402028b:	int3   
6402028c:	int3   
6402028d:	int3   
6402028e:	int3   
6402028f:	int3   
64020290:	lea    ecx,[ebp+0x20]
64020293:	jmp    0x64001680
64020298:	lea    ecx,[ebp+0x24]
6402029b:	jmp    0x64001680
640202a0:	lea    ecx,[ebp+0x28]
640202a3:	jmp    0x64001680
640202a8:	lea    ecx,[ebp+0x1c]
640202ab:	jmp    0x64001680
640202b0:	lea    ecx,[ebp+0x18]
640202b3:	jmp    0x64001680
640202b8:	lea    ecx,[ebp+0x14]
640202bb:	jmp    0x64001680
640202c0:	lea    ecx,[ebp+0x2c]
640202c3:	jmp    0x64001650
640202c8:	mov    edx,DWORD PTR [esp+0x8]
640202cc:	lea    eax,[edx+0xc]
640202cf:	mov    ecx,DWORD PTR [edx-0x58]
640202d2:	xor    ecx,eax
640202d4:	call   0x64010c1e
640202d9:	mov    ecx,DWORD PTR [edx+0x54]
640202dc:	xor    ecx,eax
640202de:	call   0x64010c1e
640202e3:	mov    eax,0x64026570
640202e8:	jmp    0x640108e0
640202ed:	int3   
640202ee:	int3   
640202ef:	int3   
640202f0:	mov    eax,ds:0x6402a468
640202f5:	and    eax,0xfffffffe
640202f8:	mov    ds:0x6402a468,eax
640202fd:	ret    
640202fe:	mov    edx,DWORD PTR [esp+0x8]
64020302:	lea    eax,[edx-0x10]
64020305:	mov    ecx,DWORD PTR [edx-0x14]
64020308:	xor    ecx,eax
6402030a:	call   0x64010c1e
6402030f:	mov    eax,0x640265ec
64020314:	jmp    0x640108e0
64020319:	int3   
6402031a:	int3   
6402031b:	int3   
6402031c:	int3   
6402031d:	int3   
6402031e:	int3   
6402031f:	int3   
64020320:	lea    ecx,[ebp-0x14]
64020323:	jmp    0x64008330
64020328:	mov    edx,DWORD PTR [esp+0x8]
6402032c:	lea    eax,[edx+0xc]
6402032f:	mov    ecx,DWORD PTR [edx-0x18]
64020332:	xor    ecx,eax
64020334:	call   0x64010c1e
64020339:	mov    eax,0x6402664c
6402033e:	jmp    0x640108e0
64020343:	int3   
64020344:	int3   
64020345:	int3   
64020346:	int3   
64020347:	int3   
64020348:	int3   
64020349:	int3   
6402034a:	int3   
6402034b:	int3   
6402034c:	int3   
6402034d:	int3   
6402034e:	int3   
6402034f:	int3   
64020350:	lea    ecx,[ebp-0x10]
64020353:	jmp    0x64001680
64020358:	mov    edx,DWORD PTR [esp+0x8]
6402035c:	lea    eax,[edx-0x8]
6402035f:	mov    ecx,DWORD PTR [edx-0xc]
64020362:	xor    ecx,eax
64020364:	call   0x64010c1e
64020369:	mov    eax,0x64026678
6402036e:	jmp    0x640108e0
64020373:	int3   
64020374:	int3   
64020375:	int3   
64020376:	int3   
64020377:	int3   
64020378:	int3   
64020379:	int3   
6402037a:	int3   
6402037b:	int3   
6402037c:	int3   
6402037d:	int3   
6402037e:	int3   
6402037f:	int3   
64020380:	lea    ecx,[ebp-0x10]
64020383:	jmp    0x640016a0
64020388:	lea    ecx,[ebp-0x14]
6402038b:	jmp    0x64001680
64020390:	mov    edx,DWORD PTR [esp+0x8]
64020394:	lea    eax,[edx-0x14]
64020397:	mov    ecx,DWORD PTR [edx-0x18]
6402039a:	xor    ecx,eax
6402039c:	call   0x64010c1e
640203a1:	mov    eax,0x640266ac
640203a6:	jmp    0x640108e0
640203ab:	int3   
640203ac:	int3   
640203ad:	int3   
640203ae:	int3   
640203af:	int3   
640203b0:	mov    eax,DWORD PTR [ebp-0x50]
640203b3:	and    eax,0x1
640203b6:	je     0x640203c8
640203bc:	and    DWORD PTR [ebp-0x50],0xfffffffe
640203c0:	mov    ecx,DWORD PTR [ebp-0x58]
640203c3:	jmp    0x64001680
640203c8:	ret    
640203c9:	lea    ecx,[ebp-0x4c]
640203cc:	jmp    0x64001680
640203d1:	lea    ecx,[ebp-0x54]
640203d4:	jmp    0x64001680
640203d9:	lea    ecx,[ebp-0x10]
640203dc:	jmp    0x64001680
640203e1:	lea    ecx,[ebp-0x10]
640203e4:	jmp    0x64001680
640203e9:	lea    ecx,[ebp-0x28]
640203ec:	jmp    0x64001680
640203f1:	lea    ecx,[ebp-0x48]
640203f4:	jmp    0x64001680
640203f9:	lea    ecx,[ebp-0x24]
640203fc:	jmp    0x64001680
64020401:	lea    ecx,[ebp-0x14]
64020404:	jmp    0x64001680
64020409:	lea    ecx,[ebp-0x18]
6402040c:	jmp    0x64001680
64020411:	lea    ecx,[ebp-0x10]
64020414:	jmp    0x64001680
64020419:	lea    ecx,[ebp-0x10]
6402041c:	jmp    0x64001680
64020421:	lea    ecx,[ebp-0x18]
64020424:	jmp    0x64001680
64020429:	lea    ecx,[ebp-0x14]
6402042c:	jmp    0x64001680
64020431:	lea    ecx,[ebp-0x10]
64020434:	jmp    0x64001680
64020439:	lea    ecx,[ebp-0x3c]
6402043c:	jmp    0x6400eb00
64020441:	lea    ecx,[ebp-0x14]
64020444:	jmp    0x64001680
64020449:	lea    ecx,[ebp-0x10]
6402044c:	jmp    0x64001680
64020451:	lea    ecx,[ebp-0x20]
64020454:	jmp    0x64001680
64020459:	lea    ecx,[ebp-0x10]
6402045c:	jmp    0x64001680
64020461:	lea    ecx,[ebp-0x18]
64020464:	jmp    0x64001680
64020469:	lea    ecx,[ebp-0x14]
6402046c:	jmp    0x64001680
64020471:	lea    ecx,[ebp-0x10]
64020474:	jmp    0x64001680
64020479:	lea    ecx,[ebp-0x1c]
6402047c:	jmp    0x64001680
64020481:	lea    ecx,[ebp-0x2c]
64020484:	jmp    0x64001680
64020489:	lea    ecx,[ebp-0x18]
6402048c:	jmp    0x64001680
64020491:	lea    ecx,[ebp-0x10]
64020494:	jmp    0x64001680
64020499:	lea    ecx,[ebp-0x2c]
6402049c:	jmp    0x64001680
640204a1:	lea    ecx,[ebp-0x1c]
640204a4:	jmp    0x64001680
640204a9:	lea    ecx,[ebp-0x1c]
640204ac:	jmp    0x64001680
640204b1:	mov    edx,DWORD PTR [esp+0x8]
640204b5:	lea    eax,[edx+0xc]
640204b8:	mov    ecx,DWORD PTR [edx-0xa0]
640204be:	xor    ecx,eax
640204c0:	call   0x64010c1e
640204c5:	mov    ecx,DWORD PTR [edx+0x130]
640204cb:	xor    ecx,eax
640204cd:	call   0x64010c1e
640204d2:	mov    eax,0x640266d0
640204d7:	jmp    0x640108e0
640204dc:	int3   
640204dd:	int3   
640204de:	int3   
640204df:	int3   
640204e0:	lea    ecx,[ebp-0x30]
640204e3:	jmp    0x64001680
640204e8:	lea    ecx,[ebp-0x2c]
640204eb:	jmp    0x64001650
640204f0:	lea    ecx,[ebp-0x5c]
640204f3:	jmp    0x64001650
640204f8:	mov    edx,DWORD PTR [esp+0x8]
640204fc:	lea    eax,[edx+0xc]
640204ff:	mov    ecx,DWORD PTR [edx-0x60]
64020502:	xor    ecx,eax
64020504:	call   0x64010c1e
64020509:	mov    ecx,DWORD PTR [edx-0x4]
6402050c:	xor    ecx,eax
6402050e:	call   0x64010c1e
64020513:	mov    eax,0x640267fc
64020518:	jmp    0x640108e0
6402051d:	lea    ecx,[ebp-0x28]
64020520:	jmp    0x64001650
64020525:	mov    edx,DWORD PTR [esp+0x8]
64020529:	lea    eax,[edx+0xc]
6402052c:	mov    ecx,DWORD PTR [edx-0x54]
6402052f:	xor    ecx,eax
64020531:	call   0x64010c1e
64020536:	mov    eax,0x64026844
6402053b:	jmp    0x640108e0
64020540:	lea    ecx,[ebp-0x28]
64020543:	jmp    0x64001650
64020548:	mov    edx,DWORD PTR [esp+0x8]
6402054c:	lea    eax,[edx+0xc]
6402054f:	mov    ecx,DWORD PTR [edx-0x54]
64020552:	xor    ecx,eax
64020554:	call   0x64010c1e
64020559:	mov    eax,0x64026870
6402055e:	jmp    0x640108e0
64020563:	mov    edx,DWORD PTR [esp+0x8]
64020567:	lea    eax,[edx+0xc]
6402056a:	mov    ecx,DWORD PTR [edx-0x14]
6402056d:	xor    ecx,eax
6402056f:	call   0x64010c1e
64020574:	mov    eax,0x64026a18
64020579:	jmp    0x640108e0
6402057e:	int3   
6402057f:	int3   
64020580:	mov    eax,DWORD PTR [ebp+0x4]
64020583:	push   eax
64020584:	call   0x64010422
64020589:	pop    ecx
6402058a:	ret    
6402058b:	mov    edx,DWORD PTR [esp+0x8]
6402058f:	lea    eax,[edx-0x8]
64020592:	mov    ecx,DWORD PTR [edx-0xc]
64020595:	xor    ecx,eax
64020597:	call   0x64010c1e
6402059c:	mov    eax,0x64026f70
640205a1:	jmp    0x640108e0
640205a6:	int3   
640205a7:	int3   
640205a8:	int3   
640205a9:	int3   
640205aa:	int3   
640205ab:	int3   
640205ac:	int3   
640205ad:	int3   
640205ae:	int3   
640205af:	int3   
640205b0:	mov    eax,DWORD PTR [ebp+0x4]
640205b3:	push   eax
640205b4:	call   0x64010422
640205b9:	pop    ecx
640205ba:	ret    
640205bb:	mov    edx,DWORD PTR [esp+0x8]
640205bf:	lea    eax,[edx-0x8]
640205c2:	mov    ecx,DWORD PTR [edx-0xc]
640205c5:	xor    ecx,eax
640205c7:	call   0x64010c1e
640205cc:	mov    eax,0x64026f9c
640205d1:	jmp    0x640108e0
640205d6:	int3   
640205d7:	int3   
640205d8:	int3   
640205d9:	int3   
640205da:	int3   
640205db:	int3   
640205dc:	int3   
640205dd:	int3   
640205de:	int3   
640205df:	int3   
640205e0:	mov    eax,DWORD PTR [ebp-0x10]
640205e3:	push   eax
640205e4:	call   0x64010422
640205e9:	pop    ecx
640205ea:	ret    
640205eb:	mov    edx,DWORD PTR [esp+0x8]
640205ef:	lea    eax,[edx-0x8]
640205f2:	mov    ecx,DWORD PTR [edx-0xc]
640205f5:	xor    ecx,eax
640205f7:	call   0x64010c1e
640205fc:	mov    eax,0x64026fc8
64020601:	jmp    0x640108e0
64020606:	int3   
64020607:	int3   
64020608:	int3   
64020609:	int3   
6402060a:	int3   
6402060b:	int3   
6402060c:	int3   
6402060d:	int3   
6402060e:	int3   
6402060f:	int3   
64020610:	mov    eax,DWORD PTR [ebp-0x10]
64020613:	push   eax
64020614:	call   0x64010422
64020619:	pop    ecx
6402061a:	ret    
6402061b:	mov    edx,DWORD PTR [esp+0x8]
6402061f:	lea    eax,[edx-0xc]
64020622:	mov    ecx,DWORD PTR [edx-0x10]
64020625:	xor    ecx,eax
64020627:	call   0x64010c1e
6402062c:	mov    eax,0x64026ff4
64020631:	jmp    0x640108e0
64020636:	int3   
64020637:	int3   
64020638:	int3   
64020639:	int3   
6402063a:	int3   
6402063b:	int3   
6402063c:	int3   
6402063d:	int3   
6402063e:	int3   
6402063f:	int3   
64020640:	lea    ecx,[ebp-0x144]
64020646:	jmp    0x64002750
6402064b:	mov    edx,DWORD PTR [esp+0x8]
6402064f:	lea    eax,[edx-0x144]
64020655:	mov    ecx,DWORD PTR [edx-0x148]
6402065b:	xor    ecx,eax
6402065d:	call   0x64010c1e
64020662:	add    eax,0xc
64020665:	mov    ecx,DWORD PTR [edx-0x4]
64020668:	xor    ecx,eax
6402066a:	call   0x64010c1e
6402066f:	mov    eax,0x64027020
64020674:	jmp    0x640108e0
64020679:	int3   
6402067a:	int3   
6402067b:	int3   
6402067c:	int3   
6402067d:	int3   
6402067e:	int3   
6402067f:	int3   
64020680:	lea    ecx,[ebp-0x20]
64020683:	jmp    0x64008f10
64020688:	mov    edx,DWORD PTR [esp+0x8]
6402068c:	lea    eax,[edx-0x1c]
6402068f:	mov    ecx,DWORD PTR [edx-0x20]
64020692:	xor    ecx,eax
64020694:	call   0x64010c1e
64020699:	mov    eax,0x6402704c
6402069e:	jmp    0x640108e0
640206a3:	int3   
640206a4:	int3   
640206a5:	int3   
640206a6:	int3   
640206a7:	int3   
640206a8:	int3   
640206a9:	int3   
640206aa:	int3   
640206ab:	int3   
640206ac:	int3   
640206ad:	int3   
640206ae:	int3   
640206af:	int3   
640206b0:	mov    eax,DWORD PTR [ebp-0x10]
640206b3:	and    eax,0x1
640206b6:	je     0x640206c8
640206bc:	and    DWORD PTR [ebp-0x10],0xfffffffe
640206c0:	mov    edi,DWORD PTR [ebp+0x8]
640206c3:	jmp    0x64008ba0
640206c8:	ret    
640206c9:	mov    edx,DWORD PTR [esp+0x8]
640206cd:	lea    eax,[edx-0x8]
640206d0:	mov    ecx,DWORD PTR [edx-0xc]
640206d3:	xor    ecx,eax
640206d5:	call   0x64010c1e
640206da:	mov    eax,0x64027078
640206df:	jmp    0x640108e0
640206e4:	int3   
640206e5:	int3   
640206e6:	int3   
640206e7:	int3   
640206e8:	int3   
640206e9:	int3   
640206ea:	int3   
640206eb:	int3   
640206ec:	int3   
640206ed:	int3   
640206ee:	int3   
640206ef:	int3   
640206f0:	mov    edx,DWORD PTR [esp+0x8]
640206f4:	lea    eax,[edx+0xc]
640206f7:	mov    ecx,DWORD PTR [edx-0x2c]
640206fa:	xor    ecx,eax
640206fc:	call   0x64010c1e
64020701:	mov    eax,0x64027104
64020706:	jmp    0x640108e0
6402070b:	int3   
6402070c:	int3   
6402070d:	int3   
6402070e:	int3   
6402070f:	int3   
64020710:	mov    eax,DWORD PTR [ebp-0x18]
64020713:	push   eax
64020714:	mov    ecx,DWORD PTR [ebp-0x1c]
64020717:	push   ecx
64020718:	call   0x64002c60
6402071d:	add    esp,0x8
64020720:	ret    
64020721:	mov    edx,DWORD PTR [esp+0x8]
64020725:	lea    eax,[edx+0xc]
64020728:	mov    ecx,DWORD PTR [edx-0x20]
6402072b:	xor    ecx,eax
6402072d:	call   0x64010c1e
64020732:	mov    eax,0x64027164
64020737:	jmp    0x640108e0
6402073c:	int3   
6402073d:	int3   
6402073e:	int3   
6402073f:	int3   
64020740:	lea    ecx,[ebp-0x28]
64020743:	jmp    0x64001650
64020748:	mov    edx,DWORD PTR [esp+0x8]
6402074c:	lea    eax,[edx-0x28]
6402074f:	mov    ecx,DWORD PTR [edx-0x2c]
64020752:	xor    ecx,eax
64020754:	call   0x64010c1e
64020759:	mov    eax,0x64027190
6402075e:	jmp    0x640108e0
64020763:	int3   
64020764:	int3   
64020765:	int3   
64020766:	int3   
64020767:	int3   
64020768:	int3   
64020769:	int3   
6402076a:	int3   
6402076b:	int3   
6402076c:	int3   
6402076d:	int3   
6402076e:	int3   
6402076f:	int3   
64020770:	mov    ecx,DWORD PTR [ebp-0x10]
64020773:	jmp    0x64001650
64020778:	mov    edx,DWORD PTR [esp+0x8]
6402077c:	lea    eax,[edx-0x10]
6402077f:	mov    ecx,DWORD PTR [edx-0x14]
64020782:	xor    ecx,eax
64020784:	call   0x64010c1e
64020789:	mov    eax,0x640271bc
6402078e:	jmp    0x640108e0
64020793:	int3   
64020794:	int3   
64020795:	int3   
64020796:	int3   
64020797:	int3   
64020798:	int3   
64020799:	int3   
6402079a:	int3   
6402079b:	int3   
6402079c:	int3   
6402079d:	int3   
6402079e:	int3   
6402079f:	int3   
640207a0:	mov    edx,DWORD PTR [esp+0x8]
640207a4:	lea    eax,[edx+0xc]
640207a7:	mov    ecx,DWORD PTR [edx-0x1c]
640207aa:	xor    ecx,eax
640207ac:	call   0x64010c1e
640207b1:	mov    eax,0x64027248
640207b6:	jmp    0x640108e0
640207bb:	int3   
640207bc:	int3   
640207bd:	int3   
640207be:	int3   
640207bf:	int3   
640207c0:	mov    eax,DWORD PTR [ebp-0x14]
640207c3:	push   eax
640207c4:	mov    ecx,DWORD PTR [ebp-0x18]
640207c7:	push   ecx
640207c8:	call   0x64002c60
640207cd:	add    esp,0x8
640207d0:	ret    
640207d1:	mov    edx,DWORD PTR [esp+0x8]
640207d5:	lea    eax,[edx+0xc]
640207d8:	mov    ecx,DWORD PTR [edx-0x1c]
640207db:	xor    ecx,eax
640207dd:	call   0x64010c1e
640207e2:	mov    eax,0x640272a8
640207e7:	jmp    0x640108e0
640207ec:	int3   
640207ed:	int3   
640207ee:	int3   
640207ef:	int3   
640207f0:	mov    ecx,DWORD PTR [ebp-0x10]
640207f3:	jmp    0x64001650
640207f8:	mov    edx,DWORD PTR [esp+0x8]
640207fc:	lea    eax,[edx-0xc]
640207ff:	mov    ecx,DWORD PTR [edx-0x10]
64020802:	xor    ecx,eax
64020804:	call   0x64010c1e
64020809:	mov    eax,0x640272d4
6402080e:	jmp    0x640108e0
64020813:	int3   
64020814:	int3   
64020815:	int3   
64020816:	int3   
64020817:	int3   
64020818:	int3   
64020819:	int3   
6402081a:	int3   
6402081b:	int3   
6402081c:	int3   
6402081d:	int3   
6402081e:	int3   
6402081f:	int3   
64020820:	mov    eax,DWORD PTR [ebp-0x14]
64020823:	push   eax
64020824:	mov    ecx,DWORD PTR [ebp-0x18]
64020827:	push   ecx
64020828:	call   0x64002c60
6402082d:	add    esp,0x8
64020830:	ret    
64020831:	mov    edx,DWORD PTR [esp+0x8]
64020835:	lea    eax,[edx+0xc]
64020838:	mov    ecx,DWORD PTR [edx-0x1c]
6402083b:	xor    ecx,eax
6402083d:	call   0x64010c1e
64020842:	mov    eax,0x64027334
64020847:	jmp    0x640108e0
6402084c:	int3   
6402084d:	int3   
6402084e:	int3   
6402084f:	int3   
64020850:	lea    ecx,[ebp+0x8]
64020853:	jmp    0x64005630
64020858:	mov    edx,DWORD PTR [esp+0x8]
6402085c:	lea    eax,[edx-0x14]
6402085f:	mov    ecx,DWORD PTR [edx-0x18]
64020862:	xor    ecx,eax
64020864:	call   0x64010c1e
64020869:	mov    eax,0x64027360
6402086e:	jmp    0x640108e0
64020873:	int3   
64020874:	int3   
64020875:	int3   
64020876:	int3   
64020877:	int3   
64020878:	int3   
64020879:	int3   
6402087a:	int3   
6402087b:	int3   
6402087c:	int3   
6402087d:	int3   
6402087e:	int3   
6402087f:	int3   
64020880:	lea    ecx,[ebp+0x8]
64020883:	jmp    0x64001650
64020888:	mov    edx,DWORD PTR [esp+0x8]
6402088c:	lea    eax,[edx-0x14]
6402088f:	mov    ecx,DWORD PTR [edx-0x18]
64020892:	xor    ecx,eax
64020894:	call   0x64010c1e
64020899:	mov    eax,0x6402738c
6402089e:	jmp    0x640108e0
640208a3:	int3   
640208a4:	int3   
640208a5:	int3   
640208a6:	int3   
640208a7:	int3   
640208a8:	int3   
640208a9:	int3   
640208aa:	int3   
640208ab:	int3   
640208ac:	int3   
640208ad:	int3   
640208ae:	int3   
640208af:	int3   
640208b0:	mov    ecx,DWORD PTR [ebp-0x10]
640208b3:	jmp    0x6401053b
640208b8:	mov    edx,DWORD PTR [esp+0x8]
640208bc:	lea    eax,[edx-0xc]
640208bf:	mov    ecx,DWORD PTR [edx-0x10]
640208c2:	xor    ecx,eax
640208c4:	call   0x64010c1e
640208c9:	mov    eax,0x640273b8
640208ce:	jmp    0x640108e0
640208d3:	int3   
640208d4:	int3   
640208d5:	int3   
640208d6:	int3   
640208d7:	int3   
640208d8:	int3   
640208d9:	int3   
640208da:	int3   
640208db:	int3   
640208dc:	int3   
640208dd:	int3   
640208de:	int3   
640208df:	int3   
640208e0:	mov    ecx,DWORD PTR [ebp-0x10]
640208e3:	jmp    0x6401053b
640208e8:	mov    edx,DWORD PTR [esp+0x8]
640208ec:	lea    eax,[edx-0x8]
640208ef:	mov    ecx,DWORD PTR [edx-0xc]
640208f2:	xor    ecx,eax
640208f4:	call   0x64010c1e
640208f9:	mov    eax,0x640273e4
640208fe:	jmp    0x640108e0
64020903:	int3   
64020904:	int3   
64020905:	int3   
64020906:	int3   
64020907:	int3   
64020908:	int3   
64020909:	int3   
6402090a:	int3   
6402090b:	int3   
6402090c:	int3   
6402090d:	int3   
6402090e:	int3   
6402090f:	int3   
64020910:	mov    ecx,DWORD PTR [ebp-0x10]
64020913:	jmp    0x6401053b
64020918:	mov    edx,DWORD PTR [esp+0x8]
6402091c:	lea    eax,[edx-0xc]
6402091f:	mov    ecx,DWORD PTR [edx-0x10]
64020922:	xor    ecx,eax
64020924:	call   0x64010c1e
64020929:	mov    eax,0x64027410
6402092e:	jmp    0x640108e0
64020933:	int3   
64020934:	int3   
64020935:	int3   
64020936:	int3   
64020937:	int3   
64020938:	int3   
64020939:	int3   
6402093a:	int3   
6402093b:	int3   
6402093c:	int3   
6402093d:	int3   
6402093e:	int3   
6402093f:	int3   
64020940:	mov    ecx,DWORD PTR [ebp+0x4]
64020943:	jmp    0x6401053b
64020948:	mov    edx,DWORD PTR [esp+0x8]
6402094c:	lea    eax,[edx-0x4]
6402094f:	mov    ecx,DWORD PTR [edx-0x8]
64020952:	xor    ecx,eax
64020954:	call   0x64010c1e
64020959:	mov    eax,0x6402743c
6402095e:	jmp    0x640108e0
64020963:	int3   
64020964:	int3   
64020965:	int3   
64020966:	int3   
64020967:	int3   
64020968:	int3   
64020969:	int3   
6402096a:	int3   
6402096b:	int3   
6402096c:	int3   
6402096d:	int3   
6402096e:	int3   
6402096f:	int3   
64020970:	mov    eax,DWORD PTR [ebp-0x34]
64020973:	and    eax,0x1
64020976:	je     0x64020988
6402097c:	and    DWORD PTR [ebp-0x34],0xfffffffe
64020980:	mov    ecx,DWORD PTR [ebp-0x30]
64020983:	jmp    0x64001650
64020988:	ret    
64020989:	lea    ecx,[ebp-0x2c]
6402098c:	jmp    0x64001650
64020991:	lea    ecx,[ebp-0x3c]
64020994:	jmp    0x64001680
64020999:	lea    ecx,[ebp-0x2c]
6402099c:	jmp    0x64001650
640209a1:	lea    ecx,[ebp-0x3c]
640209a4:	jmp    0x64001680
640209a9:	lea    ecx,[ebp-0x2c]
640209ac:	jmp    0x64001650
640209b1:	lea    ecx,[ebp-0x2c]
640209b4:	jmp    0x64001650
640209b9:	mov    edx,DWORD PTR [esp+0x8]
640209bd:	lea    eax,[edx-0x40]
640209c0:	mov    ecx,DWORD PTR [edx-0x44]
640209c3:	xor    ecx,eax
640209c5:	call   0x64010c1e
640209ca:	add    eax,0x10
640209cd:	mov    ecx,DWORD PTR [edx-0x4]
640209d0:	xor    ecx,eax
640209d2:	call   0x64010c1e
640209d7:	mov    eax,0x64027498
640209dc:	jmp    0x640108e0
640209e1:	int3   
640209e2:	int3   
640209e3:	int3   
640209e4:	int3   
640209e5:	int3   
640209e6:	int3   
640209e7:	int3   
640209e8:	int3   
640209e9:	int3   
640209ea:	int3   
640209eb:	int3   
640209ec:	int3   
640209ed:	int3   
640209ee:	int3   
640209ef:	int3   
640209f0:	lea    ecx,[ebp-0x30]
640209f3:	jmp    0x64001650
640209f8:	mov    eax,DWORD PTR [ebp-0x4c]
640209fb:	push   eax
640209fc:	mov    ecx,DWORD PTR [ebp-0x50]
640209ff:	push   ecx
64020a00:	call   0x64002c60
64020a05:	add    esp,0x8
64020a08:	ret    
64020a09:	mov    edx,DWORD PTR [esp+0x8]
64020a0d:	lea    eax,[edx+0xc]
64020a10:	mov    ecx,DWORD PTR [edx-0x54]
64020a13:	xor    ecx,eax
64020a15:	call   0x64010c1e
64020a1a:	mov    ecx,DWORD PTR [edx-0x8]
64020a1d:	xor    ecx,eax
64020a1f:	call   0x64010c1e
64020a24:	mov    eax,0x64027508
64020a29:	jmp    0x640108e0
64020a2e:	int3   
64020a2f:	int3   
64020a30:	mov    ecx,DWORD PTR [ebp-0x10]
64020a33:	jmp    0x64005630
64020a38:	mov    edx,DWORD PTR [esp+0x8]
64020a3c:	lea    eax,[edx-0x10]
64020a3f:	mov    ecx,DWORD PTR [edx-0x14]
64020a42:	xor    ecx,eax
64020a44:	call   0x64010c1e
64020a49:	mov    eax,0x64027534
64020a4e:	jmp    0x640108e0
64020a53:	int3   
64020a54:	int3   
64020a55:	int3   
64020a56:	int3   
64020a57:	int3   
64020a58:	int3   
64020a59:	int3   
64020a5a:	int3   
64020a5b:	int3   
64020a5c:	int3   
64020a5d:	int3   
64020a5e:	int3   
64020a5f:	int3   
64020a60:	mov    eax,DWORD PTR [ebp-0x14]
64020a63:	push   eax
64020a64:	mov    ecx,DWORD PTR [ebp-0x18]
64020a67:	push   ecx
64020a68:	call   0x64002c60
64020a6d:	add    esp,0x8
64020a70:	ret    
64020a71:	mov    edx,DWORD PTR [esp+0x8]
64020a75:	lea    eax,[edx+0xc]
64020a78:	mov    ecx,DWORD PTR [edx-0x1c]
64020a7b:	xor    ecx,eax
64020a7d:	call   0x64010c1e
64020a82:	mov    eax,0x64027594
64020a87:	jmp    0x640108e0
64020a8c:	int3   
64020a8d:	int3   
64020a8e:	int3   
64020a8f:	int3   
64020a90:	mov    ecx,DWORD PTR [ebp-0x10]
64020a93:	jmp    0x64005630
64020a98:	mov    edx,DWORD PTR [esp+0x8]
64020a9c:	lea    eax,[edx-0xc]
64020a9f:	mov    ecx,DWORD PTR [edx-0x10]
64020aa2:	xor    ecx,eax
64020aa4:	call   0x64010c1e
64020aa9:	mov    eax,0x640275c0
64020aae:	jmp    0x640108e0
64020ab3:	int3   
64020ab4:	int3   
64020ab5:	int3   
64020ab6:	int3   
64020ab7:	int3   
64020ab8:	int3   
64020ab9:	int3   
64020aba:	int3   
64020abb:	int3   
64020abc:	int3   
64020abd:	int3   
64020abe:	int3   
64020abf:	int3   
64020ac0:	lea    eax,[ebp-0x10]
64020ac3:	jmp    0x640016d0
64020ac8:	mov    edx,DWORD PTR [esp+0x8]
64020acc:	lea    eax,[edx-0x34]
64020acf:	mov    ecx,DWORD PTR [edx-0x38]
64020ad2:	xor    ecx,eax
64020ad4:	call   0x64010c1e
64020ad9:	mov    eax,0x640275ec
64020ade:	jmp    0x640108e0
64020ae3:	int3   
64020ae4:	int3   
64020ae5:	int3   
64020ae6:	int3   
64020ae7:	int3   
64020ae8:	int3   
64020ae9:	int3   
64020aea:	int3   
64020aeb:	int3   
64020aec:	int3   
64020aed:	int3   
64020aee:	int3   
64020aef:	int3   
64020af0:	lea    ecx,[ebp-0x54]
64020af3:	jmp    0x64001650
64020af8:	mov    edx,DWORD PTR [esp+0x8]
64020afc:	lea    eax,[edx-0x4c]
64020aff:	mov    ecx,DWORD PTR [edx-0x50]
64020b02:	xor    ecx,eax
64020b04:	call   0x64010c1e
64020b09:	mov    eax,0x64027618
64020b0e:	jmp    0x640108e0
64020b13:	int3   
64020b14:	int3   
64020b15:	int3   
64020b16:	int3   
64020b17:	int3   
64020b18:	int3   
64020b19:	int3   
64020b1a:	int3   
64020b1b:	int3   
64020b1c:	int3   
64020b1d:	int3   
64020b1e:	int3   
64020b1f:	int3   
64020b20:	lea    ecx,[ebp-0x30]
64020b23:	jmp    0x64001650
64020b28:	mov    edx,DWORD PTR [esp+0x8]
64020b2c:	lea    eax,[edx+0xc]
64020b2f:	mov    ecx,DWORD PTR [edx-0x44]
64020b32:	xor    ecx,eax
64020b34:	call   0x64010c1e
64020b39:	mov    ecx,DWORD PTR [edx-0x8]
64020b3c:	xor    ecx,eax
64020b3e:	call   0x64010c1e
64020b43:	mov    eax,0x640276ac
64020b48:	jmp    0x640108e0
64020b4d:	int3   
64020b4e:	int3   
64020b4f:	int3   
64020b50:	lea    ecx,[ebp-0x54]
64020b53:	jmp    0x64001650
64020b58:	mov    edx,DWORD PTR [esp+0x8]
64020b5c:	lea    eax,[edx-0x5c]
64020b5f:	mov    ecx,DWORD PTR [edx-0x60]
64020b62:	xor    ecx,eax
64020b64:	call   0x64010c1e
64020b69:	mov    eax,0x640276d8
64020b6e:	jmp    0x640108e0
64020b73:	int3   
64020b74:	int3   
64020b75:	int3   
64020b76:	int3   
64020b77:	int3   
64020b78:	int3   
64020b79:	int3   
64020b7a:	int3   
64020b7b:	int3   
64020b7c:	int3   
64020b7d:	int3   
64020b7e:	int3   
64020b7f:	int3   
64020b80:	lea    ecx,[ebp-0x54]
64020b83:	jmp    0x64001650
64020b88:	mov    edx,DWORD PTR [esp+0x8]
64020b8c:	lea    eax,[edx-0x5c]
64020b8f:	mov    ecx,DWORD PTR [edx-0x60]
64020b92:	xor    ecx,eax
64020b94:	call   0x64010c1e
64020b99:	mov    eax,0x64027704
64020b9e:	jmp    0x640108e0
64020ba3:	int3   
64020ba4:	int3   
64020ba5:	int3   
64020ba6:	int3   
64020ba7:	int3   
64020ba8:	int3   
64020ba9:	int3   
64020baa:	int3   
64020bab:	int3   
64020bac:	int3   
64020bad:	int3   
64020bae:	int3   
64020baf:	int3   
64020bb0:	lea    ecx,[ebp-0x54]
64020bb3:	jmp    0x64001650
64020bb8:	mov    edx,DWORD PTR [esp+0x8]
64020bbc:	lea    eax,[edx-0x5c]
64020bbf:	mov    ecx,DWORD PTR [edx-0x60]
64020bc2:	xor    ecx,eax
64020bc4:	call   0x64010c1e
64020bc9:	mov    eax,0x64027730
64020bce:	jmp    0x640108e0
64020bd3:	int3   
64020bd4:	int3   
64020bd5:	int3   
64020bd6:	int3   
64020bd7:	int3   
64020bd8:	int3   
64020bd9:	int3   
64020bda:	int3   
64020bdb:	int3   
64020bdc:	int3   
64020bdd:	int3   
64020bde:	int3   
64020bdf:	int3   
64020be0:	lea    ecx,[ebp-0x54]
64020be3:	jmp    0x64001650
64020be8:	mov    edx,DWORD PTR [esp+0x8]
64020bec:	lea    eax,[edx-0x5c]
64020bef:	mov    ecx,DWORD PTR [edx-0x60]
64020bf2:	xor    ecx,eax
64020bf4:	call   0x64010c1e
64020bf9:	mov    eax,0x6402775c
64020bfe:	jmp    0x640108e0
64020c03:	int3   
64020c04:	int3   
64020c05:	int3   
64020c06:	int3   
64020c07:	int3   
64020c08:	int3   
64020c09:	int3   
64020c0a:	int3   
64020c0b:	int3   
64020c0c:	int3   
64020c0d:	int3   
64020c0e:	int3   
64020c0f:	int3   
64020c10:	lea    ecx,[ebp-0x50]
64020c13:	jmp    0x64001650
64020c18:	mov    edx,DWORD PTR [esp+0x8]
64020c1c:	lea    eax,[edx-0x54]
64020c1f:	mov    ecx,DWORD PTR [edx-0x58]
64020c22:	xor    ecx,eax
64020c24:	call   0x64010c1e
64020c29:	mov    eax,0x64027788
64020c2e:	jmp    0x640108e0
64020c33:	int3   
64020c34:	int3   
64020c35:	int3   
64020c36:	int3   
64020c37:	int3   
64020c38:	int3   
64020c39:	int3   
64020c3a:	int3   
64020c3b:	int3   
64020c3c:	int3   
64020c3d:	int3   
64020c3e:	int3   
64020c3f:	int3   
64020c40:	lea    ecx,[ebp-0x64]
64020c43:	jmp    0x64005630
64020c48:	lea    ecx,[ebp-0x48]
64020c4b:	jmp    0x640058b0
64020c50:	mov    edx,DWORD PTR [esp+0x8]
64020c54:	lea    eax,[edx-0x6c]
64020c57:	mov    ecx,DWORD PTR [edx-0x70]
64020c5a:	xor    ecx,eax
64020c5c:	call   0x64010c1e
64020c61:	mov    eax,0x640277bc
64020c66:	jmp    0x640108e0
64020c6b:	int3   
64020c6c:	int3   
64020c6d:	int3   
64020c6e:	int3   
64020c6f:	int3   
64020c70:	lea    ecx,[ebp-0x64]
64020c73:	jmp    0x64001650
64020c78:	lea    ecx,[ebp-0x48]
64020c7b:	jmp    0x64005860
64020c80:	mov    edx,DWORD PTR [esp+0x8]
64020c84:	lea    eax,[edx-0x6c]
64020c87:	mov    ecx,DWORD PTR [edx-0x70]
64020c8a:	xor    ecx,eax
64020c8c:	call   0x64010c1e
64020c91:	mov    eax,0x640277f0
64020c96:	jmp    0x640108e0
64020c9b:	int3   
64020c9c:	int3   
64020c9d:	int3   
64020c9e:	int3   
64020c9f:	int3   
64020ca0:	lea    ecx,[ebp-0x50]
64020ca3:	jmp    0x64001650
64020ca8:	mov    edx,DWORD PTR [esp+0x8]
64020cac:	lea    eax,[edx-0x54]
64020caf:	mov    ecx,DWORD PTR [edx-0x58]
64020cb2:	xor    ecx,eax
64020cb4:	call   0x64010c1e
64020cb9:	mov    eax,0x6402781c
64020cbe:	jmp    0x640108e0
64020cc3:	int3   
64020cc4:	int3   
64020cc5:	int3   
64020cc6:	int3   
64020cc7:	int3   
64020cc8:	int3   
64020cc9:	int3   
64020cca:	int3   
64020ccb:	int3   
64020ccc:	int3   
64020ccd:	int3   
64020cce:	int3   
64020ccf:	int3   
64020cd0:	mov    eax,ds:0x6402d2d8
64020cd5:	and    eax,0xfffffffe
64020cd8:	mov    ds:0x6402d2d8,eax
64020cdd:	ret    
64020cde:	mov    edx,DWORD PTR [esp+0x8]
64020ce2:	lea    eax,[edx]
64020ce4:	mov    ecx,DWORD PTR [edx-0x4]
64020ce7:	xor    ecx,eax
64020ce9:	call   0x64010c1e
64020cee:	mov    eax,0x64027848
64020cf3:	jmp    0x640108e0
64020cf8:	int3   
64020cf9:	int3   
64020cfa:	int3   
64020cfb:	int3   
64020cfc:	int3   
64020cfd:	int3   
64020cfe:	int3   
64020cff:	int3   
64020d00:	mov    eax,ds:0x6402d2dc
64020d05:	and    eax,0xfffffffe
64020d08:	mov    ds:0x6402d2dc,eax
64020d0d:	ret    
64020d0e:	mov    edx,DWORD PTR [esp+0x8]
64020d12:	lea    eax,[edx]
64020d14:	mov    ecx,DWORD PTR [edx-0x4]
64020d17:	xor    ecx,eax
64020d19:	call   0x64010c1e
64020d1e:	mov    eax,0x64027874
64020d23:	jmp    0x640108e0
64020d28:	int3   
64020d29:	int3   
64020d2a:	int3   
64020d2b:	int3   
64020d2c:	int3   
64020d2d:	int3   
64020d2e:	int3   
64020d2f:	int3   
64020d30:	lea    ecx,[ebp-0x4c]
64020d33:	jmp    0x64005630
64020d38:	lea    ecx,[ebp-0x30]
64020d3b:	jmp    0x64005630
64020d40:	mov    edx,DWORD PTR [esp+0x8]
64020d44:	lea    eax,[edx-0x5c]
64020d47:	mov    ecx,DWORD PTR [edx-0x60]
64020d4a:	xor    ecx,eax
64020d4c:	call   0x64010c1e
64020d51:	add    eax,0xc
64020d54:	mov    ecx,DWORD PTR [edx-0x8]
64020d57:	xor    ecx,eax
64020d59:	call   0x64010c1e
64020d5e:	mov    eax,0x640278a8
64020d63:	jmp    0x640108e0
64020d68:	int3   
64020d69:	int3   
64020d6a:	int3   
64020d6b:	int3   
64020d6c:	int3   
64020d6d:	int3   
64020d6e:	int3   
64020d6f:	int3   
64020d70:	lea    ecx,[ebp-0x4c]
64020d73:	jmp    0x64001650
64020d78:	lea    ecx,[ebp-0x30]
64020d7b:	jmp    0x64001650
64020d80:	mov    edx,DWORD PTR [esp+0x8]
64020d84:	lea    eax,[edx-0x5c]
64020d87:	mov    ecx,DWORD PTR [edx-0x60]
64020d8a:	xor    ecx,eax
64020d8c:	call   0x64010c1e
64020d91:	add    eax,0xc
64020d94:	mov    ecx,DWORD PTR [edx-0x8]
64020d97:	xor    ecx,eax
64020d99:	call   0x64010c1e
64020d9e:	mov    eax,0x640278dc
64020da3:	jmp    0x640108e0
64020da8:	int3   
64020da9:	int3   
64020daa:	int3   
64020dab:	int3   
64020dac:	int3   
64020dad:	int3   
64020dae:	int3   
64020daf:	int3   
64020db0:	lea    ecx,[ebp+0x828]
64020db6:	jmp    0x64001680
64020dbb:	mov    eax,ds:0x6402d2f8
64020dc0:	and    eax,0xfffffffe
64020dc3:	mov    ds:0x6402d2f8,eax
64020dc8:	ret    
64020dc9:	lea    eax,[ebp-0x1c]
64020dcc:	jmp    0x64003fa0
64020dd1:	lea    ecx,[ebp-0x44]
64020dd4:	jmp    0x64001650
64020dd9:	lea    ecx,[ebp+0x0]
64020ddc:	jmp    0x64001650
64020de1:	lea    ecx,[ebp-0x44]
64020de4:	jmp    0x64001650
64020de9:	lea    ecx,[ebp-0x44]
64020dec:	jmp    0x64001650
64020df1:	mov    edx,DWORD PTR [esp+0x8]
64020df5:	lea    eax,[edx+0xc]
64020df8:	mov    ecx,DWORD PTR [edx-0x54]
64020dfb:	xor    ecx,eax
64020dfd:	call   0x64010c1e
64020e02:	mov    ecx,DWORD PTR [edx+0x828]
64020e08:	xor    ecx,eax
64020e0a:	call   0x64010c1e
64020e0f:	mov    eax,0x64027938
64020e14:	jmp    0x640108e0
64020e19:	int3   
64020e1a:	int3   
64020e1b:	int3   
64020e1c:	int3   
64020e1d:	int3   
64020e1e:	int3   
64020e1f:	int3   
64020e20:	lea    ecx,[ebp+0x4]
64020e23:	jmp    0x64001680
64020e28:	mov    edx,DWORD PTR [esp+0x8]
64020e2c:	lea    eax,[edx-0x30]
64020e2f:	mov    ecx,DWORD PTR [edx-0x34]
64020e32:	xor    ecx,eax
64020e34:	call   0x64010c1e
64020e39:	add    eax,0xc
64020e3c:	mov    ecx,DWORD PTR [edx-0x4]
64020e3f:	xor    ecx,eax
64020e41:	call   0x64010c1e
64020e46:	mov    eax,0x64027964
64020e4b:	jmp    0x640108e0
64020e50:	mov    ecx,DWORD PTR [ebp-0x10]
64020e53:	jmp    0x64001680
64020e58:	mov    edx,DWORD PTR [esp+0x8]
64020e5c:	lea    eax,[edx-0xc]
64020e5f:	mov    ecx,DWORD PTR [edx-0x10]
64020e62:	xor    ecx,eax
64020e64:	call   0x64010c1e
64020e69:	mov    eax,0x64027990
64020e6e:	jmp    0x640108e0
64020e73:	int3   
64020e74:	int3   
64020e75:	int3   
64020e76:	int3   
64020e77:	int3   
64020e78:	int3   
64020e79:	int3   
64020e7a:	int3   
64020e7b:	int3   
64020e7c:	int3   
64020e7d:	int3   
64020e7e:	int3   
64020e7f:	int3   
64020e80:	lea    ecx,[ebp-0x10]
64020e83:	jmp    0x64001680
64020e88:	mov    edx,DWORD PTR [esp+0x8]
64020e8c:	lea    eax,[edx-0x8]
64020e8f:	mov    ecx,DWORD PTR [edx-0xc]
64020e92:	xor    ecx,eax
64020e94:	call   0x64010c1e
64020e99:	mov    eax,0x640279bc
64020e9e:	jmp    0x640108e0
64020ea3:	int3   
64020ea4:	int3   
64020ea5:	int3   
64020ea6:	int3   
64020ea7:	int3   
64020ea8:	int3   
64020ea9:	int3   
64020eaa:	int3   
64020eab:	int3   
64020eac:	int3   
64020ead:	int3   
64020eae:	int3   
64020eaf:	int3   
64020eb0:	mov    ecx,DWORD PTR [ebp-0x10]
64020eb3:	jmp    0x64001680
64020eb8:	mov    edx,DWORD PTR [esp+0x8]
64020ebc:	lea    eax,[edx-0xc]
64020ebf:	mov    ecx,DWORD PTR [edx-0x10]
64020ec2:	xor    ecx,eax
64020ec4:	call   0x64010c1e
64020ec9:	mov    eax,0x640279e8
64020ece:	jmp    0x640108e0
64020ed3:	int3   
64020ed4:	int3   
64020ed5:	int3   
64020ed6:	int3   
64020ed7:	int3   
64020ed8:	int3   
64020ed9:	int3   
64020eda:	int3   
64020edb:	int3   
64020edc:	int3   
64020edd:	int3   
64020ede:	int3   
64020edf:	int3   
64020ee0:	mov    eax,ds:0x6402d300
64020ee5:	and    eax,0xfffffffe
64020ee8:	mov    ds:0x6402d300,eax
64020eed:	ret    
64020eee:	mov    edx,DWORD PTR [esp+0x8]
64020ef2:	lea    eax,[edx-0xc]
64020ef5:	mov    ecx,DWORD PTR [edx-0x10]
64020ef8:	xor    ecx,eax
64020efa:	call   0x64010c1e
64020eff:	mov    eax,0x64027a14
64020f04:	jmp    0x640108e0
64020f09:	int3   
64020f0a:	int3   
64020f0b:	int3   
64020f0c:	int3   
64020f0d:	int3   
64020f0e:	int3   
64020f0f:	int3   
64020f10:	mov    eax,ds:0x6402d308
64020f15:	and    eax,0xfffffffe
64020f18:	mov    ds:0x6402d308,eax
64020f1d:	ret    
64020f1e:	mov    edx,DWORD PTR [esp+0x8]
64020f22:	lea    eax,[edx-0xc]
64020f25:	mov    ecx,DWORD PTR [edx-0x10]
64020f28:	xor    ecx,eax
64020f2a:	call   0x64010c1e
64020f2f:	mov    eax,0x64027a40
64020f34:	jmp    0x640108e0
64020f39:	int3   
64020f3a:	int3   
64020f3b:	int3   
64020f3c:	int3   
64020f3d:	int3   
64020f3e:	int3   
64020f3f:	int3   
64020f40:	mov    eax,ds:0x6402d310
64020f45:	and    eax,0xfffffffe
64020f48:	mov    ds:0x6402d310,eax
64020f4d:	ret    
64020f4e:	mov    edx,DWORD PTR [esp+0x8]
64020f52:	lea    eax,[edx-0xc]
64020f55:	mov    ecx,DWORD PTR [edx-0x10]
64020f58:	xor    ecx,eax
64020f5a:	call   0x64010c1e
64020f5f:	mov    eax,0x64027a6c
64020f64:	jmp    0x640108e0
64020f69:	int3   
64020f6a:	int3   
64020f6b:	int3   
64020f6c:	int3   
64020f6d:	int3   
64020f6e:	int3   
64020f6f:	int3   
64020f70:	mov    eax,ds:0x6402d318
64020f75:	and    eax,0xfffffffe
64020f78:	mov    ds:0x6402d318,eax
64020f7d:	ret    
64020f7e:	mov    edx,DWORD PTR [esp+0x8]
64020f82:	lea    eax,[edx-0xc]
64020f85:	mov    ecx,DWORD PTR [edx-0x10]
64020f88:	xor    ecx,eax
64020f8a:	call   0x64010c1e
64020f8f:	mov    eax,0x64027a98
64020f94:	jmp    0x640108e0
64020f99:	int3   
64020f9a:	int3   
64020f9b:	int3   
64020f9c:	int3   
64020f9d:	int3   
64020f9e:	int3   
64020f9f:	int3   
64020fa0:	mov    eax,ds:0x6402d320
64020fa5:	and    eax,0xfffffffe
64020fa8:	mov    ds:0x6402d320,eax
64020fad:	ret    
64020fae:	mov    edx,DWORD PTR [esp+0x8]
64020fb2:	lea    eax,[edx-0xc]
64020fb5:	mov    ecx,DWORD PTR [edx-0x10]
64020fb8:	xor    ecx,eax
64020fba:	call   0x64010c1e
64020fbf:	mov    eax,0x64027ac4
64020fc4:	jmp    0x640108e0
64020fc9:	int3   
64020fca:	int3   
64020fcb:	int3   
64020fcc:	int3   
64020fcd:	int3   
64020fce:	int3   
64020fcf:	int3   
64020fd0:	mov    eax,ds:0x6402d328
64020fd5:	and    eax,0xfffffffe
64020fd8:	mov    ds:0x6402d328,eax
64020fdd:	ret    
64020fde:	mov    edx,DWORD PTR [esp+0x8]
64020fe2:	lea    eax,[edx-0xc]
64020fe5:	mov    ecx,DWORD PTR [edx-0x10]
64020fe8:	xor    ecx,eax
64020fea:	call   0x64010c1e
64020fef:	mov    eax,0x64027af0
64020ff4:	jmp    0x640108e0
64020ff9:	int3   
64020ffa:	int3   
64020ffb:	int3   
64020ffc:	int3   
64020ffd:	int3   
64020ffe:	int3   
64020fff:	int3   
64021000:	mov    eax,ds:0x6402d330
64021005:	and    eax,0xfffffffe
64021008:	mov    ds:0x6402d330,eax
6402100d:	ret    
6402100e:	mov    edx,DWORD PTR [esp+0x8]
64021012:	lea    eax,[edx-0xc]
64021015:	mov    ecx,DWORD PTR [edx-0x10]
64021018:	xor    ecx,eax
6402101a:	call   0x64010c1e
6402101f:	mov    eax,0x64027b1c
64021024:	jmp    0x640108e0
64021029:	int3   
6402102a:	int3   
6402102b:	int3   
6402102c:	int3   
6402102d:	int3   
6402102e:	int3   
6402102f:	int3   
64021030:	mov    eax,ds:0x6402d338
64021035:	and    eax,0xfffffffe
64021038:	mov    ds:0x6402d338,eax
6402103d:	ret    
6402103e:	mov    edx,DWORD PTR [esp+0x8]
64021042:	lea    eax,[edx-0xc]
64021045:	mov    ecx,DWORD PTR [edx-0x10]
64021048:	xor    ecx,eax
6402104a:	call   0x64010c1e
6402104f:	mov    eax,0x64027b48
64021054:	jmp    0x640108e0
64021059:	int3   
6402105a:	int3   
6402105b:	int3   
6402105c:	int3   
6402105d:	int3   
6402105e:	int3   
6402105f:	int3   
64021060:	mov    eax,ds:0x6402d340
64021065:	and    eax,0xfffffffe
64021068:	mov    ds:0x6402d340,eax
6402106d:	ret    
6402106e:	mov    edx,DWORD PTR [esp+0x8]
64021072:	lea    eax,[edx-0xc]
64021075:	mov    ecx,DWORD PTR [edx-0x10]
64021078:	xor    ecx,eax
6402107a:	call   0x64010c1e
6402107f:	mov    eax,0x64027b74
64021084:	jmp    0x640108e0
64021089:	int3   
6402108a:	int3   
6402108b:	int3   
6402108c:	int3   
6402108d:	int3   
6402108e:	int3   
6402108f:	int3   
64021090:	mov    eax,ds:0x6402d348
64021095:	and    eax,0xfffffffe
64021098:	mov    ds:0x6402d348,eax
6402109d:	ret    
6402109e:	mov    edx,DWORD PTR [esp+0x8]
640210a2:	lea    eax,[edx-0xc]
640210a5:	mov    ecx,DWORD PTR [edx-0x10]
640210a8:	xor    ecx,eax
640210aa:	call   0x64010c1e
640210af:	mov    eax,0x64027ba0
640210b4:	jmp    0x640108e0
640210b9:	int3   
640210ba:	int3   
640210bb:	int3   
640210bc:	int3   
640210bd:	int3   
640210be:	int3   
640210bf:	int3   
640210c0:	mov    eax,ds:0x6402d350
640210c5:	and    eax,0xfffffffe
640210c8:	mov    ds:0x6402d350,eax
640210cd:	ret    
640210ce:	mov    edx,DWORD PTR [esp+0x8]
640210d2:	lea    eax,[edx-0xc]
640210d5:	mov    ecx,DWORD PTR [edx-0x10]
640210d8:	xor    ecx,eax
640210da:	call   0x64010c1e
640210df:	mov    eax,0x64027bcc
640210e4:	jmp    0x640108e0
640210e9:	int3   
640210ea:	int3   
640210eb:	int3   
640210ec:	int3   
640210ed:	int3   
640210ee:	int3   
640210ef:	int3   
640210f0:	mov    eax,ds:0x6402d358
640210f5:	and    eax,0xfffffffe
640210f8:	mov    ds:0x6402d358,eax
640210fd:	ret    
640210fe:	mov    edx,DWORD PTR [esp+0x8]
64021102:	lea    eax,[edx-0xc]
64021105:	mov    ecx,DWORD PTR [edx-0x10]
64021108:	xor    ecx,eax
6402110a:	call   0x64010c1e
6402110f:	mov    eax,0x64027bf8
64021114:	jmp    0x640108e0
64021119:	int3   
6402111a:	int3   
6402111b:	int3   
6402111c:	int3   
6402111d:	int3   
6402111e:	int3   
6402111f:	int3   
64021120:	mov    eax,ds:0x6402d360
64021125:	and    eax,0xfffffffe
64021128:	mov    ds:0x6402d360,eax
6402112d:	ret    
6402112e:	mov    edx,DWORD PTR [esp+0x8]
64021132:	lea    eax,[edx-0xc]
64021135:	mov    ecx,DWORD PTR [edx-0x10]
64021138:	xor    ecx,eax
6402113a:	call   0x64010c1e
6402113f:	mov    eax,0x64027c24
64021144:	jmp    0x640108e0
64021149:	int3   
6402114a:	int3   
6402114b:	int3   
6402114c:	int3   
6402114d:	int3   
6402114e:	int3   
6402114f:	int3   
64021150:	mov    eax,ds:0x6402d368
64021155:	and    eax,0xfffffffe
64021158:	mov    ds:0x6402d368,eax
6402115d:	ret    
6402115e:	mov    edx,DWORD PTR [esp+0x8]
64021162:	lea    eax,[edx-0xc]
64021165:	mov    ecx,DWORD PTR [edx-0x10]
64021168:	xor    ecx,eax
6402116a:	call   0x64010c1e
6402116f:	mov    eax,0x64027c50
64021174:	jmp    0x640108e0
64021179:	int3   
6402117a:	int3   
6402117b:	int3   
6402117c:	int3   
6402117d:	int3   
6402117e:	int3   
6402117f:	int3   
64021180:	mov    eax,ds:0x6402d370
64021185:	and    eax,0xfffffffe
64021188:	mov    ds:0x6402d370,eax
6402118d:	ret    
6402118e:	mov    edx,DWORD PTR [esp+0x8]
64021192:	lea    eax,[edx-0xc]
64021195:	mov    ecx,DWORD PTR [edx-0x10]
64021198:	xor    ecx,eax
6402119a:	call   0x64010c1e
6402119f:	mov    eax,0x64027c7c
640211a4:	jmp    0x640108e0
640211a9:	int3   
640211aa:	int3   
640211ab:	int3   
640211ac:	int3   
640211ad:	int3   
640211ae:	int3   
640211af:	int3   
640211b0:	mov    eax,ds:0x6402d378
640211b5:	and    eax,0xfffffffe
640211b8:	mov    ds:0x6402d378,eax
640211bd:	ret    
640211be:	mov    edx,DWORD PTR [esp+0x8]
640211c2:	lea    eax,[edx-0xc]
640211c5:	mov    ecx,DWORD PTR [edx-0x10]
640211c8:	xor    ecx,eax
640211ca:	call   0x64010c1e
640211cf:	mov    eax,0x64027ca8
640211d4:	jmp    0x640108e0
640211d9:	int3   
640211da:	int3   
640211db:	int3   
640211dc:	int3   
640211dd:	int3   
640211de:	int3   
640211df:	int3   
640211e0:	mov    eax,ds:0x6402d380
640211e5:	and    eax,0xfffffffe
640211e8:	mov    ds:0x6402d380,eax
640211ed:	ret    
640211ee:	mov    edx,DWORD PTR [esp+0x8]
640211f2:	lea    eax,[edx-0xc]
640211f5:	mov    ecx,DWORD PTR [edx-0x10]
640211f8:	xor    ecx,eax
640211fa:	call   0x64010c1e
640211ff:	mov    eax,0x64027cd4
64021204:	jmp    0x640108e0
64021209:	int3   
6402120a:	int3   
6402120b:	int3   
6402120c:	int3   
6402120d:	int3   
6402120e:	int3   
6402120f:	int3   
64021210:	mov    eax,ds:0x6402d388
64021215:	and    eax,0xfffffffe
64021218:	mov    ds:0x6402d388,eax
6402121d:	ret    
6402121e:	mov    edx,DWORD PTR [esp+0x8]
64021222:	lea    eax,[edx-0xc]
64021225:	mov    ecx,DWORD PTR [edx-0x10]
64021228:	xor    ecx,eax
6402122a:	call   0x64010c1e
6402122f:	mov    eax,0x64027d00
64021234:	jmp    0x640108e0
64021239:	int3   
6402123a:	int3   
6402123b:	int3   
6402123c:	int3   
6402123d:	int3   
6402123e:	int3   
6402123f:	int3   
64021240:	mov    eax,ds:0x6402d390
64021245:	and    eax,0xfffffffe
64021248:	mov    ds:0x6402d390,eax
6402124d:	ret    
6402124e:	mov    edx,DWORD PTR [esp+0x8]
64021252:	lea    eax,[edx-0xc]
64021255:	mov    ecx,DWORD PTR [edx-0x10]
64021258:	xor    ecx,eax
6402125a:	call   0x64010c1e
6402125f:	mov    eax,0x64027d2c
64021264:	jmp    0x640108e0
64021269:	int3   
6402126a:	int3   
6402126b:	int3   
6402126c:	int3   
6402126d:	int3   
6402126e:	int3   
6402126f:	int3   
64021270:	mov    eax,ds:0x6402d398
64021275:	and    eax,0xfffffffe
64021278:	mov    ds:0x6402d398,eax
6402127d:	ret    
6402127e:	mov    edx,DWORD PTR [esp+0x8]
64021282:	lea    eax,[edx-0xc]
64021285:	mov    ecx,DWORD PTR [edx-0x10]
64021288:	xor    ecx,eax
6402128a:	call   0x64010c1e
6402128f:	mov    eax,0x64027d58
64021294:	jmp    0x640108e0
64021299:	int3   
6402129a:	int3   
6402129b:	int3   
6402129c:	int3   
6402129d:	int3   
6402129e:	int3   
6402129f:	int3   
640212a0:	mov    eax,ds:0x6402d3a0
640212a5:	and    eax,0xfffffffe
640212a8:	mov    ds:0x6402d3a0,eax
640212ad:	ret    
640212ae:	mov    edx,DWORD PTR [esp+0x8]
640212b2:	lea    eax,[edx-0xc]
640212b5:	mov    ecx,DWORD PTR [edx-0x10]
640212b8:	xor    ecx,eax
640212ba:	call   0x64010c1e
640212bf:	mov    eax,0x64027d84
640212c4:	jmp    0x640108e0
640212c9:	int3   
640212ca:	int3   
640212cb:	int3   
640212cc:	int3   
640212cd:	int3   
640212ce:	int3   
640212cf:	int3   
640212d0:	mov    eax,ds:0x6402d3a8
640212d5:	and    eax,0xfffffffe
640212d8:	mov    ds:0x6402d3a8,eax
640212dd:	ret    
640212de:	mov    edx,DWORD PTR [esp+0x8]
640212e2:	lea    eax,[edx-0xc]
640212e5:	mov    ecx,DWORD PTR [edx-0x10]
640212e8:	xor    ecx,eax
640212ea:	call   0x64010c1e
640212ef:	mov    eax,0x64027db0
640212f4:	jmp    0x640108e0
640212f9:	int3   
640212fa:	int3   
640212fb:	int3   
640212fc:	int3   
640212fd:	int3   
640212fe:	int3   
640212ff:	int3   
64021300:	mov    eax,ds:0x6402d3b0
64021305:	and    eax,0xfffffffe
64021308:	mov    ds:0x6402d3b0,eax
6402130d:	ret    
6402130e:	mov    edx,DWORD PTR [esp+0x8]
64021312:	lea    eax,[edx-0xc]
64021315:	mov    ecx,DWORD PTR [edx-0x10]
64021318:	xor    ecx,eax
6402131a:	call   0x64010c1e
6402131f:	mov    eax,0x64027ddc
64021324:	jmp    0x640108e0
64021329:	int3   
6402132a:	int3   
6402132b:	int3   
6402132c:	int3   
6402132d:	int3   
6402132e:	int3   
6402132f:	int3   
64021330:	mov    eax,ds:0x6402d3b8
64021335:	and    eax,0xfffffffe
64021338:	mov    ds:0x6402d3b8,eax
6402133d:	ret    
6402133e:	mov    edx,DWORD PTR [esp+0x8]
64021342:	lea    eax,[edx-0xc]
64021345:	mov    ecx,DWORD PTR [edx-0x10]
64021348:	xor    ecx,eax
6402134a:	call   0x64010c1e
6402134f:	mov    eax,0x64027e08
64021354:	jmp    0x640108e0
64021359:	int3   
6402135a:	int3   
6402135b:	int3   
6402135c:	int3   
6402135d:	int3   
6402135e:	int3   
6402135f:	int3   
64021360:	mov    eax,ds:0x6402d3c0
64021365:	and    eax,0xfffffffe
64021368:	mov    ds:0x6402d3c0,eax
6402136d:	ret    
6402136e:	mov    edx,DWORD PTR [esp+0x8]
64021372:	lea    eax,[edx-0xc]
64021375:	mov    ecx,DWORD PTR [edx-0x10]
64021378:	xor    ecx,eax
6402137a:	call   0x64010c1e
6402137f:	mov    eax,0x64027e34
64021384:	jmp    0x640108e0
64021389:	int3   
6402138a:	int3   
6402138b:	int3   
6402138c:	int3   
6402138d:	int3   
6402138e:	int3   
6402138f:	int3   
64021390:	mov    eax,ds:0x6402d3c8
64021395:	and    eax,0xfffffffe
64021398:	mov    ds:0x6402d3c8,eax
6402139d:	ret    
6402139e:	mov    edx,DWORD PTR [esp+0x8]
640213a2:	lea    eax,[edx-0xc]
640213a5:	mov    ecx,DWORD PTR [edx-0x10]
640213a8:	xor    ecx,eax
640213aa:	call   0x64010c1e
640213af:	mov    eax,0x64027e60
640213b4:	jmp    0x640108e0
640213b9:	int3   
640213ba:	int3   
640213bb:	int3   
640213bc:	int3   
640213bd:	int3   
640213be:	int3   
640213bf:	int3   
640213c0:	mov    eax,ds:0x6402d3d0
640213c5:	and    eax,0xfffffffe
640213c8:	mov    ds:0x6402d3d0,eax
640213cd:	ret    
640213ce:	mov    edx,DWORD PTR [esp+0x8]
640213d2:	lea    eax,[edx-0xc]
640213d5:	mov    ecx,DWORD PTR [edx-0x10]
640213d8:	xor    ecx,eax
640213da:	call   0x64010c1e
640213df:	mov    eax,0x64027e8c
640213e4:	jmp    0x640108e0
640213e9:	int3   
640213ea:	int3   
640213eb:	int3   
640213ec:	int3   
640213ed:	int3   
640213ee:	int3   
640213ef:	int3   
640213f0:	mov    eax,ds:0x6402d3d8
640213f5:	and    eax,0xfffffffe
640213f8:	mov    ds:0x6402d3d8,eax
640213fd:	ret    
640213fe:	mov    edx,DWORD PTR [esp+0x8]
64021402:	lea    eax,[edx-0xc]
64021405:	mov    ecx,DWORD PTR [edx-0x10]
64021408:	xor    ecx,eax
6402140a:	call   0x64010c1e
6402140f:	mov    eax,0x64027eb8
64021414:	jmp    0x640108e0
64021419:	int3   
6402141a:	int3   
6402141b:	int3   
6402141c:	int3   
6402141d:	int3   
6402141e:	int3   
6402141f:	int3   
64021420:	mov    eax,ds:0x6402d3e0
64021425:	and    eax,0xfffffffe
64021428:	mov    ds:0x6402d3e0,eax
6402142d:	ret    
6402142e:	mov    edx,DWORD PTR [esp+0x8]
64021432:	lea    eax,[edx-0xc]
64021435:	mov    ecx,DWORD PTR [edx-0x10]
64021438:	xor    ecx,eax
6402143a:	call   0x64010c1e
6402143f:	mov    eax,0x64027ee4
64021444:	jmp    0x640108e0
64021449:	int3   
6402144a:	int3   
6402144b:	int3   
6402144c:	int3   
6402144d:	int3   
6402144e:	int3   
6402144f:	int3   
64021450:	mov    eax,ds:0x6402d3e8
64021455:	and    eax,0xfffffffe
64021458:	mov    ds:0x6402d3e8,eax
6402145d:	ret    
6402145e:	mov    edx,DWORD PTR [esp+0x8]
64021462:	lea    eax,[edx-0xc]
64021465:	mov    ecx,DWORD PTR [edx-0x10]
64021468:	xor    ecx,eax
6402146a:	call   0x64010c1e
6402146f:	mov    eax,0x64027f10
64021474:	jmp    0x640108e0
64021479:	int3   
6402147a:	int3   
6402147b:	int3   
6402147c:	int3   
6402147d:	int3   
6402147e:	int3   
6402147f:	int3   
64021480:	mov    eax,ds:0x6402d3f0
64021485:	and    eax,0xfffffffe
64021488:	mov    ds:0x6402d3f0,eax
6402148d:	ret    
6402148e:	mov    edx,DWORD PTR [esp+0x8]
64021492:	lea    eax,[edx-0xc]
64021495:	mov    ecx,DWORD PTR [edx-0x10]
64021498:	xor    ecx,eax
6402149a:	call   0x64010c1e
6402149f:	mov    eax,0x64027f3c
640214a4:	jmp    0x640108e0
640214a9:	int3   
640214aa:	int3   
640214ab:	int3   
640214ac:	int3   
640214ad:	int3   
640214ae:	int3   
640214af:	int3   
640214b0:	mov    eax,ds:0x6402d3f8
640214b5:	and    eax,0xfffffffe
640214b8:	mov    ds:0x6402d3f8,eax
640214bd:	ret    
640214be:	mov    edx,DWORD PTR [esp+0x8]
640214c2:	lea    eax,[edx-0xc]
640214c5:	mov    ecx,DWORD PTR [edx-0x10]
640214c8:	xor    ecx,eax
640214ca:	call   0x64010c1e
640214cf:	mov    eax,0x64027f68
640214d4:	jmp    0x640108e0
640214d9:	int3   
640214da:	int3   
640214db:	int3   
640214dc:	int3   
640214dd:	int3   
640214de:	int3   
640214df:	int3   
640214e0:	mov    eax,ds:0x6402d400
640214e5:	and    eax,0xfffffffe
640214e8:	mov    ds:0x6402d400,eax
640214ed:	ret    
640214ee:	mov    edx,DWORD PTR [esp+0x8]
640214f2:	lea    eax,[edx-0xc]
640214f5:	mov    ecx,DWORD PTR [edx-0x10]
640214f8:	xor    ecx,eax
640214fa:	call   0x64010c1e
640214ff:	mov    eax,0x64027f94
64021504:	jmp    0x640108e0
64021509:	int3   
6402150a:	int3   
6402150b:	int3   
6402150c:	int3   
6402150d:	int3   
6402150e:	int3   
6402150f:	int3   
64021510:	mov    eax,ds:0x6402d408
64021515:	and    eax,0xfffffffe
64021518:	mov    ds:0x6402d408,eax
6402151d:	ret    
6402151e:	mov    edx,DWORD PTR [esp+0x8]
64021522:	lea    eax,[edx-0xc]
64021525:	mov    ecx,DWORD PTR [edx-0x10]
64021528:	xor    ecx,eax
6402152a:	call   0x64010c1e
6402152f:	mov    eax,0x64027fc0
64021534:	jmp    0x640108e0
64021539:	int3   
6402153a:	int3   
6402153b:	int3   
6402153c:	int3   
6402153d:	int3   
6402153e:	int3   
6402153f:	int3   
64021540:	mov    eax,ds:0x6402d410
64021545:	and    eax,0xfffffffe
64021548:	mov    ds:0x6402d410,eax
6402154d:	ret    
6402154e:	mov    edx,DWORD PTR [esp+0x8]
64021552:	lea    eax,[edx-0xc]
64021555:	mov    ecx,DWORD PTR [edx-0x10]
64021558:	xor    ecx,eax
6402155a:	call   0x64010c1e
6402155f:	mov    eax,0x64027fec
64021564:	jmp    0x640108e0
64021569:	int3   
6402156a:	int3   
6402156b:	int3   
6402156c:	int3   
6402156d:	int3   
6402156e:	int3   
6402156f:	int3   
64021570:	mov    eax,ds:0x6402d418
64021575:	and    eax,0xfffffffe
64021578:	mov    ds:0x6402d418,eax
6402157d:	ret    
6402157e:	mov    edx,DWORD PTR [esp+0x8]
64021582:	lea    eax,[edx-0xc]
64021585:	mov    ecx,DWORD PTR [edx-0x10]
64021588:	xor    ecx,eax
6402158a:	call   0x64010c1e
6402158f:	mov    eax,0x64028018
64021594:	jmp    0x640108e0
64021599:	int3   
6402159a:	int3   
6402159b:	int3   
6402159c:	int3   
6402159d:	int3   
6402159e:	int3   
6402159f:	int3   
640215a0:	mov    eax,ds:0x6402d420
640215a5:	and    eax,0xfffffffe
640215a8:	mov    ds:0x6402d420,eax
640215ad:	ret    
640215ae:	mov    edx,DWORD PTR [esp+0x8]
640215b2:	lea    eax,[edx-0xc]
640215b5:	mov    ecx,DWORD PTR [edx-0x10]
640215b8:	xor    ecx,eax
640215ba:	call   0x64010c1e
640215bf:	mov    eax,0x64028044
640215c4:	jmp    0x640108e0
640215c9:	int3   
640215ca:	int3   
640215cb:	int3   
640215cc:	int3   
640215cd:	int3   
640215ce:	int3   
640215cf:	int3   
640215d0:	mov    eax,ds:0x6402d428
640215d5:	and    eax,0xfffffffe
640215d8:	mov    ds:0x6402d428,eax
640215dd:	ret    
640215de:	mov    edx,DWORD PTR [esp+0x8]
640215e2:	lea    eax,[edx-0xc]
640215e5:	mov    ecx,DWORD PTR [edx-0x10]
640215e8:	xor    ecx,eax
640215ea:	call   0x64010c1e
640215ef:	mov    eax,0x64028070
640215f4:	jmp    0x640108e0
640215f9:	int3   
640215fa:	int3   
640215fb:	int3   
640215fc:	int3   
640215fd:	int3   
640215fe:	int3   
640215ff:	int3   
64021600:	mov    eax,ds:0x6402d430
64021605:	and    eax,0xfffffffe
64021608:	mov    ds:0x6402d430,eax
6402160d:	ret    
6402160e:	mov    edx,DWORD PTR [esp+0x8]
64021612:	lea    eax,[edx-0xc]
64021615:	mov    ecx,DWORD PTR [edx-0x10]
64021618:	xor    ecx,eax
6402161a:	call   0x64010c1e
6402161f:	mov    eax,0x6402809c
64021624:	jmp    0x640108e0
64021629:	int3   
6402162a:	int3   
6402162b:	int3   
6402162c:	int3   
6402162d:	int3   
6402162e:	int3   
6402162f:	int3   
64021630:	mov    eax,ds:0x6402d438
64021635:	and    eax,0xfffffffe
64021638:	mov    ds:0x6402d438,eax
6402163d:	ret    
6402163e:	mov    edx,DWORD PTR [esp+0x8]
64021642:	lea    eax,[edx-0xc]
64021645:	mov    ecx,DWORD PTR [edx-0x10]
64021648:	xor    ecx,eax
6402164a:	call   0x64010c1e
6402164f:	mov    eax,0x640280c8
64021654:	jmp    0x640108e0
64021659:	int3   
6402165a:	int3   
6402165b:	int3   
6402165c:	int3   
6402165d:	int3   
6402165e:	int3   
6402165f:	int3   
64021660:	mov    eax,ds:0x6402d440
64021665:	and    eax,0xfffffffe
64021668:	mov    ds:0x6402d440,eax
6402166d:	ret    
6402166e:	mov    edx,DWORD PTR [esp+0x8]
64021672:	lea    eax,[edx-0xc]
64021675:	mov    ecx,DWORD PTR [edx-0x10]
64021678:	xor    ecx,eax
6402167a:	call   0x64010c1e
6402167f:	mov    eax,0x640280f4
64021684:	jmp    0x640108e0
64021689:	int3   
6402168a:	int3   
6402168b:	int3   
6402168c:	int3   
6402168d:	int3   
6402168e:	int3   
6402168f:	int3   
64021690:	lea    edi,[ebp-0x58]
64021693:	jmp    0x64008ba0
64021698:	lea    edi,[ebp-0x40]
6402169b:	jmp    0x64008ba0
640216a0:	lea    edi,[ebp-0x38]
640216a3:	jmp    0x64008ba0
640216a8:	lea    edi,[ebp-0x3c]
640216ab:	jmp    0x64008ba0
640216b0:	lea    edi,[ebp-0x40]
640216b3:	jmp    0x64008ba0
640216b8:	lea    ecx,[ebp-0x24]
640216bb:	jmp    0x64008f10
640216c0:	mov    edx,DWORD PTR [esp+0x8]
640216c4:	lea    eax,[edx-0x60]
640216c7:	mov    ecx,DWORD PTR [edx-0x64]
640216ca:	xor    ecx,eax
640216cc:	call   0x64010c1e
640216d1:	mov    eax,0x64028148
640216d6:	jmp    0x640108e0
640216db:	int3   
640216dc:	int3   
640216dd:	int3   
640216de:	int3   
640216df:	int3   
640216e0:	lea    eax,[ebp-0x24]
640216e3:	jmp    0x64009a30
640216e8:	lea    ecx,[ebp-0x10]
640216eb:	jmp    0x64001680
640216f0:	lea    ecx,[ebp-0x18]
640216f3:	jmp    0x64001680
640216f8:	lea    ecx,[ebp-0x40]
640216fb:	jmp    0x64001650
64021700:	mov    edx,DWORD PTR [esp+0x8]
64021704:	lea    eax,[edx+0xc]
64021707:	mov    ecx,DWORD PTR [edx-0x44]
6402170a:	xor    ecx,eax
6402170c:	call   0x64010c1e
64021711:	mov    ecx,DWORD PTR [edx+0x294]
64021717:	xor    ecx,eax
64021719:	call   0x64010c1e
6402171e:	mov    eax,0x6402818c
64021723:	jmp    0x640108e0
64021728:	int3   
64021729:	int3   
6402172a:	int3   
6402172b:	int3   
6402172c:	int3   
6402172d:	int3   
6402172e:	int3   
6402172f:	int3   
64021730:	lea    ecx,[ebp-0x1005c]
64021736:	jmp    0x64001650
6402173b:	lea    ecx,[ebp-0x10074]
64021741:	jmp    0x64002750
64021746:	lea    ecx,[ebp-0x10074]
6402174c:	jmp    0x64002750
64021751:	lea    ecx,[ebp-0x1005c]
64021757:	jmp    0x64001650
6402175c:	mov    edx,DWORD PTR [esp+0x8]
64021760:	lea    eax,[edx-0x10084]
64021766:	mov    ecx,DWORD PTR [edx-0x10088]
6402176c:	xor    ecx,eax
6402176e:	call   0x64010c1e
64021773:	add    eax,0x10
64021776:	mov    ecx,DWORD PTR [edx-0x4]
64021779:	xor    ecx,eax
6402177b:	call   0x64010c1e
64021780:	mov    eax,0x640281d0
64021785:	jmp    0x640108e0
6402178a:	int3   
6402178b:	int3   
6402178c:	int3   
6402178d:	int3   
6402178e:	int3   
6402178f:	int3   
64021790:	lea    ecx,[ebp-0x30]
64021793:	jmp    0x64001650
64021798:	lea    ecx,[ebp-0x5c]
6402179b:	jmp    0x64001650
640217a0:	mov    edx,DWORD PTR [esp+0x8]
640217a4:	lea    eax,[edx-0x74]
640217a7:	mov    ecx,DWORD PTR [edx-0x78]
640217aa:	xor    ecx,eax
640217ac:	call   0x64010c1e
640217b1:	add    eax,0xc
640217b4:	mov    ecx,DWORD PTR [edx-0x8]
640217b7:	xor    ecx,eax
640217b9:	call   0x64010c1e
640217be:	mov    eax,0x64028204
640217c3:	jmp    0x640108e0
640217c8:	int3   
640217c9:	int3   
640217ca:	int3   
640217cb:	int3   
640217cc:	int3   
640217cd:	int3   
640217ce:	int3   
640217cf:	int3   
640217d0:	mov    ecx,DWORD PTR [ebp-0x10]
640217d3:	jmp    0x64001680
640217d8:	mov    edx,DWORD PTR [esp+0x8]
640217dc:	lea    eax,[edx-0xc]
640217df:	mov    ecx,DWORD PTR [edx-0x10]
640217e2:	xor    ecx,eax
640217e4:	call   0x64010c1e
640217e9:	mov    eax,0x64028230
640217ee:	jmp    0x640108e0
640217f3:	int3   
640217f4:	int3   
640217f5:	int3   
640217f6:	int3   
640217f7:	int3   
640217f8:	int3   
640217f9:	int3   
640217fa:	int3   
640217fb:	int3   
640217fc:	int3   
640217fd:	int3   
640217fe:	int3   
640217ff:	int3   
64021800:	lea    ecx,[ebp-0x1c]
64021803:	jmp    0x64001680
64021808:	mov    edx,DWORD PTR [esp+0x8]
6402180c:	lea    eax,[edx-0x1c]
6402180f:	mov    ecx,DWORD PTR [edx-0x20]
64021812:	xor    ecx,eax
64021814:	call   0x64010c1e
64021819:	mov    eax,0x6402825c
6402181e:	jmp    0x640108e0
64021823:	int3   
64021824:	int3   
64021825:	int3   
64021826:	int3   
64021827:	int3   
64021828:	int3   
64021829:	int3   
6402182a:	int3   
6402182b:	int3   
6402182c:	int3   
6402182d:	int3   
6402182e:	int3   
6402182f:	int3   
64021830:	mov    edx,DWORD PTR [esp+0x8]
64021834:	lea    eax,[edx+0xc]
64021837:	mov    ecx,DWORD PTR [edx-0x16c]
6402183d:	xor    ecx,eax
6402183f:	call   0x64010c1e
64021844:	mov    ecx,DWORD PTR [edx-0x8]
64021847:	xor    ecx,eax
64021849:	call   0x64010c1e
6402184e:	mov    eax,0x640282b4
64021853:	jmp    0x640108e0
64021858:	int3   
64021859:	int3   
6402185a:	int3   
6402185b:	int3   
6402185c:	int3   
6402185d:	int3   
6402185e:	int3   
6402185f:	int3   
64021860:	lea    esi,[ebp-0x840]
64021866:	jmp    0x64002bc0
6402186b:	lea    ecx,[ebp-0x848]
64021871:	jmp    0x64001680
64021876:	mov    edx,DWORD PTR [esp+0x8]
6402187a:	lea    eax,[edx-0x84c]
64021880:	mov    ecx,DWORD PTR [edx-0x850]
64021886:	xor    ecx,eax
64021888:	call   0x64010c1e
6402188d:	add    eax,0xc
64021890:	mov    ecx,DWORD PTR [edx-0x8]
64021893:	xor    ecx,eax
64021895:	call   0x64010c1e
6402189a:	mov    eax,0x640282e8
6402189f:	jmp    0x640108e0
640218a4:	int3   
640218a5:	int3   
640218a6:	int3   
640218a7:	int3   
640218a8:	int3   
640218a9:	int3   
640218aa:	int3   
640218ab:	int3   
640218ac:	int3   
640218ad:	int3   
640218ae:	int3   
640218af:	int3   
640218b0:	mov    eax,DWORD PTR [ebp-0x54]
640218b3:	and    eax,0x1
640218b6:	je     0x640218c8
640218bc:	and    DWORD PTR [ebp-0x54],0xfffffffe
640218c0:	mov    ecx,DWORD PTR [ebp+0x4]
640218c3:	jmp    0x64001680
640218c8:	ret    
640218c9:	lea    ecx,[ebp-0x50]
640218cc:	jmp    0x64001650
640218d1:	lea    ecx,[ebp-0x50]
640218d4:	jmp    0x64001650
640218d9:	mov    edx,DWORD PTR [esp+0x8]
640218dd:	lea    eax,[edx-0x54]
640218e0:	mov    ecx,DWORD PTR [edx-0x58]
640218e3:	xor    ecx,eax
640218e5:	call   0x64010c1e
640218ea:	mov    eax,0x64028324
640218ef:	jmp    0x640108e0
640218f4:	int3   
640218f5:	int3   
640218f6:	int3   
640218f7:	int3   
640218f8:	int3   
640218f9:	int3   
640218fa:	int3   
640218fb:	int3   
640218fc:	int3   
640218fd:	int3   
640218fe:	int3   
640218ff:	int3   
64021900:	lea    ecx,[ebp+0x4]
64021903:	jmp    0x64001680
64021908:	lea    ecx,[ebp-0x58]
6402190b:	jmp    0x640016a0
64021910:	lea    ecx,[ebp-0x50]
64021913:	jmp    0x64001650
64021918:	lea    ecx,[ebp-0x50]
6402191b:	jmp    0x64001650
64021920:	mov    edx,DWORD PTR [esp+0x8]
64021924:	lea    eax,[edx-0x58]
64021927:	mov    ecx,DWORD PTR [edx-0x5c]
6402192a:	xor    ecx,eax
6402192c:	call   0x64010c1e
64021931:	mov    eax,0x64028368
64021936:	jmp    0x640108e0
6402193b:	int3   
6402193c:	int3   
6402193d:	int3   
6402193e:	int3   
6402193f:	int3   
64021940:	lea    ecx,[ebp-0x428]
64021946:	jmp    0x64001680
6402194b:	mov    edx,DWORD PTR [esp+0x8]
6402194f:	lea    eax,[edx-0x42c]
64021955:	mov    ecx,DWORD PTR [edx-0x430]
6402195b:	xor    ecx,eax
6402195d:	call   0x64010c1e
64021962:	add    eax,0x10
64021965:	mov    ecx,DWORD PTR [edx-0x4]
64021968:	xor    ecx,eax
6402196a:	call   0x64010c1e
6402196f:	mov    eax,0x64028394
64021974:	jmp    0x640108e0
64021979:	int3   
6402197a:	int3   
6402197b:	int3   
6402197c:	int3   
6402197d:	int3   
6402197e:	int3   
6402197f:	int3   
64021980:	lea    edi,[ebp-0x18]
64021983:	jmp    0x64008ba0
64021988:	lea    edi,[ebp-0x1c]
6402198b:	jmp    0x64008ba0
64021990:	lea    edi,[ebp-0x14]
64021993:	jmp    0x64008ba0
64021998:	mov    edx,DWORD PTR [esp+0x8]
6402199c:	lea    eax,[edx-0x1c]
6402199f:	mov    ecx,DWORD PTR [edx-0x20]
640219a2:	xor    ecx,eax
640219a4:	call   0x64010c1e
640219a9:	mov    eax,0x640283e0
640219ae:	jmp    0x640108e0
640219b3:	int3   
640219b4:	int3   
640219b5:	int3   
640219b6:	int3   
640219b7:	int3   
640219b8:	int3   
640219b9:	int3   
640219ba:	int3   
640219bb:	int3   
640219bc:	int3   
640219bd:	int3   
640219be:	int3   
640219bf:	int3   
640219c0:	mov    eax,DWORD PTR [ebp-0x54]
640219c3:	and    eax,0x1
640219c6:	je     0x640219d8
640219cc:	and    DWORD PTR [ebp-0x54],0xfffffffe
640219d0:	mov    ecx,DWORD PTR [ebp+0x4]
640219d3:	jmp    0x64001680
640219d8:	ret    
640219d9:	lea    ecx,[ebp-0x50]
640219dc:	jmp    0x64001650
640219e1:	mov    edx,DWORD PTR [esp+0x8]
640219e5:	lea    eax,[edx-0x58]
640219e8:	mov    ecx,DWORD PTR [edx-0x5c]
640219eb:	xor    ecx,eax
640219ed:	call   0x64010c1e
640219f2:	mov    eax,0x64028414
640219f7:	jmp    0x640108e0
640219fc:	int3   
640219fd:	int3   
640219fe:	int3   
640219ff:	int3   
64021a00:	mov    eax,DWORD PTR [ebp-0x28]
64021a03:	and    eax,0x1
64021a06:	je     0x64021a18
64021a0c:	and    DWORD PTR [ebp-0x28],0xfffffffe
64021a10:	mov    ecx,DWORD PTR [ebp+0x4]
64021a13:	jmp    0x64001680
64021a18:	ret    
64021a19:	lea    ecx,[ebp-0x24]
64021a1c:	jmp    0x64001680
64021a21:	lea    ecx,[ebp-0x20]
64021a24:	jmp    0x64001680
64021a29:	lea    ecx,[ebp-0x1c]
64021a2c:	jmp    0x64001680
64021a31:	lea    ecx,[ebp-0x18]
64021a34:	jmp    0x64001680
64021a39:	lea    ecx,[ebp-0x14]
64021a3c:	jmp    0x64001680
64021a41:	lea    ecx,[ebp-0x10]
64021a44:	jmp    0x64001680
64021a49:	mov    edx,DWORD PTR [esp+0x8]
64021a4d:	lea    eax,[edx-0x30]
64021a50:	mov    ecx,DWORD PTR [edx-0x34]
64021a53:	xor    ecx,eax
64021a55:	call   0x64010c1e
64021a5a:	mov    eax,0x64028470
64021a5f:	jmp    0x640108e0
64021a64:	int3   
64021a65:	int3   
64021a66:	int3   
64021a67:	int3   
64021a68:	int3   
64021a69:	int3   
64021a6a:	int3   
64021a6b:	int3   
64021a6c:	int3   
64021a6d:	int3   
64021a6e:	int3   
64021a6f:	int3   
64021a70:	mov    eax,DWORD PTR [ebp-0x3c]
64021a73:	and    eax,0x1
64021a76:	je     0x64021a88
64021a7c:	and    DWORD PTR [ebp-0x3c],0xfffffffe
64021a80:	mov    ecx,DWORD PTR [ebp+0x4]
64021a83:	jmp    0x64001680
64021a88:	ret    
64021a89:	lea    ecx,[ebp-0x54]
64021a8c:	jmp    0x64001680
64021a91:	lea    ecx,[ebp-0x38]
64021a94:	jmp    0x64001680
64021a99:	mov    edx,DWORD PTR [esp+0x8]
64021a9d:	lea    eax,[edx-0x58]
64021aa0:	mov    ecx,DWORD PTR [edx-0x5c]
64021aa3:	xor    ecx,eax
64021aa5:	call   0x64010c1e
64021aaa:	mov    eax,0x640284ac
64021aaf:	jmp    0x640108e0
64021ab4:	int3   
64021ab5:	int3   
64021ab6:	int3   
64021ab7:	int3   
64021ab8:	int3   
64021ab9:	int3   
64021aba:	int3   
64021abb:	int3   
64021abc:	int3   
64021abd:	int3   
64021abe:	int3   
64021abf:	int3   
64021ac0:	lea    ecx,[ebp+0xc]
64021ac3:	jmp    0x64001680
64021ac8:	lea    ecx,[ebp-0x28]
64021acb:	jmp    0x64001650
64021ad0:	lea    ecx,[ebp-0x6c]
64021ad3:	jmp    0x64001650
64021ad8:	lea    ecx,[ebp-0x88]
64021ade:	jmp    0x64001650
64021ae3:	lea    ecx,[ebp-0xc0]
64021ae9:	jmp    0x64001650
64021aee:	lea    ecx,[ebp-0xa4]
64021af4:	jmp    0x64001650
64021af9:	mov    edx,DWORD PTR [esp+0x8]
64021afd:	lea    eax,[edx+0xc]
64021b00:	mov    ecx,DWORD PTR [edx-0xc4]
64021b06:	xor    ecx,eax
64021b08:	call   0x64010c1e
64021b0d:	mov    ecx,DWORD PTR [edx+0x80]
64021b13:	xor    ecx,eax
64021b15:	call   0x64010c1e
64021b1a:	mov    eax,0x64028500
64021b1f:	jmp    0x640108e0
64021b24:	int3   
64021b25:	int3   
64021b26:	int3   
64021b27:	int3   
64021b28:	int3   
64021b29:	int3   
64021b2a:	int3   
64021b2b:	int3   
64021b2c:	int3   
64021b2d:	int3   
64021b2e:	int3   
64021b2f:	int3   
64021b30:	call   0x6400bb30
64021b35:	mov    ds:0x6402d234,eax
64021b3a:	ret    
64021b3b:	int3   
64021b3c:	int3   
64021b3d:	int3   
64021b3e:	int3   
64021b3f:	int3   
64021b40:	call   0x6400bc10
64021b45:	mov    ds:0x6402d28c,eax
64021b4a:	ret    
64021b4b:	int3   
64021b4c:	int3   
64021b4d:	int3   
64021b4e:	int3   
64021b4f:	int3   
64021b50:	call   0x6400bcf0
64021b55:	mov    ds:0x6402d2a0,eax
64021b5a:	ret    
64021b5b:	int3   
64021b5c:	int3   
64021b5d:	int3   
64021b5e:	int3   
64021b5f:	int3   
64021b60:	call   0x6400bdd0
64021b65:	mov    ds:0x6402d224,eax
64021b6a:	ret    
64021b6b:	int3   
64021b6c:	int3   
64021b6d:	int3   
64021b6e:	int3   
64021b6f:	int3   
64021b70:	call   0x6400beb0
64021b75:	mov    ds:0x6402d2a4,eax
64021b7a:	ret    
64021b7b:	int3   
64021b7c:	int3   
64021b7d:	int3   
64021b7e:	int3   
64021b7f:	int3   
64021b80:	call   0x6400bf90
64021b85:	mov    ds:0x6402d220,eax
64021b8a:	ret    
64021b8b:	int3   
64021b8c:	int3   
64021b8d:	int3   
64021b8e:	int3   
64021b8f:	int3   
64021b90:	call   0x6400c070
64021b95:	mov    ds:0x6402d250,eax
64021b9a:	ret    
64021b9b:	int3   
64021b9c:	int3   
64021b9d:	int3   
64021b9e:	int3   
64021b9f:	int3   
64021ba0:	call   0x6400c150
64021ba5:	mov    ds:0x6402d280,eax
64021baa:	ret    
64021bab:	int3   
64021bac:	int3   
64021bad:	int3   
64021bae:	int3   
64021baf:	int3   
64021bb0:	call   0x6400c230
64021bb5:	mov    ds:0x6402d2a8,eax
64021bba:	ret    
64021bbb:	int3   
64021bbc:	int3   
64021bbd:	int3   
64021bbe:	int3   
64021bbf:	int3   
64021bc0:	call   0x6400c310
64021bc5:	mov    ds:0x6402d288,eax
64021bca:	ret    
64021bcb:	int3   
64021bcc:	int3   
64021bcd:	int3   
64021bce:	int3   
64021bcf:	int3   
64021bd0:	call   0x6400c3f0
64021bd5:	mov    ds:0x6402d25c,eax
64021bda:	ret    
64021bdb:	int3   
64021bdc:	int3   
64021bdd:	int3   
64021bde:	int3   
64021bdf:	int3   
64021be0:	call   0x6400c4d0
64021be5:	mov    ds:0x6402d23c,eax
64021bea:	ret    
64021beb:	int3   
64021bec:	int3   
64021bed:	int3   
64021bee:	int3   
64021bef:	int3   
64021bf0:	call   0x6400c5b0
64021bf5:	mov    ds:0x6402d274,eax
64021bfa:	ret    
64021bfb:	int3   
64021bfc:	int3   
64021bfd:	int3   
64021bfe:	int3   
64021bff:	int3   
64021c00:	call   0x6400c690
64021c05:	mov    ds:0x6402d22c,eax
64021c0a:	ret    
64021c0b:	int3   
64021c0c:	int3   
64021c0d:	int3   
64021c0e:	int3   
64021c0f:	int3   
64021c10:	call   0x6400c770
64021c15:	mov    ds:0x6402d21c,eax
64021c1a:	ret    
64021c1b:	int3   
64021c1c:	int3   
64021c1d:	int3   
64021c1e:	int3   
64021c1f:	int3   
64021c20:	call   0x6400c850
64021c25:	mov    ds:0x6402d294,eax
64021c2a:	ret    
64021c2b:	int3   
64021c2c:	int3   
64021c2d:	int3   
64021c2e:	int3   
64021c2f:	int3   
64021c30:	call   0x6400c930
64021c35:	mov    ds:0x6402d258,eax
64021c3a:	ret    
64021c3b:	int3   
64021c3c:	int3   
64021c3d:	int3   
64021c3e:	int3   
64021c3f:	int3   
64021c40:	call   0x6400ca10
64021c45:	mov    ds:0x6402d27c,eax
64021c4a:	ret    
64021c4b:	int3   
64021c4c:	int3   
64021c4d:	int3   
64021c4e:	int3   
64021c4f:	int3   
64021c50:	call   0x6400caf0
64021c55:	mov    ds:0x6402d218,eax
64021c5a:	ret    
64021c5b:	int3   
64021c5c:	int3   
64021c5d:	int3   
64021c5e:	int3   
64021c5f:	int3   
64021c60:	call   0x6400cbd0
64021c65:	mov    ds:0x6402d290,eax
64021c6a:	ret    
64021c6b:	int3   
64021c6c:	int3   
64021c6d:	int3   
64021c6e:	int3   
64021c6f:	int3   
64021c70:	call   0x6400ccb0
64021c75:	mov    ds:0x6402d24c,eax
64021c7a:	ret    
64021c7b:	int3   
64021c7c:	int3   
64021c7d:	int3   
64021c7e:	int3   
64021c7f:	int3   
64021c80:	call   0x6400cd90
64021c85:	mov    ds:0x6402d230,eax
64021c8a:	ret    
64021c8b:	int3   
64021c8c:	int3   
64021c8d:	int3   
64021c8e:	int3   
64021c8f:	int3   
64021c90:	call   0x6400ce70
64021c95:	mov    ds:0x6402d238,eax
64021c9a:	ret    
64021c9b:	int3   
64021c9c:	int3   
64021c9d:	int3   
64021c9e:	int3   
64021c9f:	int3   
64021ca0:	call   0x6400cf50
64021ca5:	mov    ds:0x6402d2b4,eax
64021caa:	ret    
64021cab:	int3   
64021cac:	int3   
64021cad:	int3   
64021cae:	int3   
64021caf:	int3   
64021cb0:	call   0x6400d030
64021cb5:	mov    ds:0x6402d244,eax
64021cba:	ret    
64021cbb:	int3   
64021cbc:	int3   
64021cbd:	int3   
64021cbe:	int3   
64021cbf:	int3   
64021cc0:	call   0x6400d110
64021cc5:	mov    ds:0x6402d278,eax
64021cca:	ret    
64021ccb:	int3   
64021ccc:	int3   
64021ccd:	int3   
64021cce:	int3   
64021ccf:	int3   
64021cd0:	call   0x6400d1f0
64021cd5:	mov    ds:0x6402d228,eax
64021cda:	ret    
64021cdb:	int3   
64021cdc:	int3   
64021cdd:	int3   
64021cde:	int3   
64021cdf:	int3   
64021ce0:	call   0x6400d2d0
64021ce5:	mov    ds:0x6402d284,eax
64021cea:	ret    
64021ceb:	int3   
64021cec:	int3   
64021ced:	int3   
64021cee:	int3   
64021cef:	int3   
64021cf0:	call   0x6400d3b0
64021cf5:	mov    ds:0x6402d268,eax
64021cfa:	ret    
64021cfb:	int3   
64021cfc:	int3   
64021cfd:	int3   
64021cfe:	int3   
64021cff:	int3   
64021d00:	call   0x6400d490
64021d05:	mov    ds:0x6402d254,eax
64021d0a:	ret    
64021d0b:	int3   
64021d0c:	int3   
64021d0d:	int3   
64021d0e:	int3   
64021d0f:	int3   
64021d10:	call   0x6400d570
64021d15:	mov    ds:0x6402d270,eax
64021d1a:	ret    
64021d1b:	int3   
64021d1c:	int3   
64021d1d:	int3   
64021d1e:	int3   
64021d1f:	int3   
64021d20:	call   0x6400d650
64021d25:	mov    ds:0x6402d26c,eax
64021d2a:	ret    
64021d2b:	int3   
64021d2c:	int3   
64021d2d:	int3   
64021d2e:	int3   
64021d2f:	int3   
64021d30:	call   0x6400d730
64021d35:	mov    ds:0x6402d260,eax
64021d3a:	ret    
64021d3b:	int3   
64021d3c:	int3   
64021d3d:	int3   
64021d3e:	int3   
64021d3f:	int3   
64021d40:	call   0x6400d810
64021d45:	mov    ds:0x6402d2ac,eax
64021d4a:	ret    
64021d4b:	int3   
64021d4c:	int3   
64021d4d:	int3   
64021d4e:	int3   
64021d4f:	int3   
64021d50:	call   0x6400d8f0
64021d55:	mov    ds:0x6402d2b8,eax
64021d5a:	ret    
64021d5b:	int3   
64021d5c:	int3   
64021d5d:	int3   
64021d5e:	int3   
64021d5f:	int3   
64021d60:	call   0x6400d9d0
64021d65:	mov    ds:0x6402d240,eax
64021d6a:	ret    
64021d6b:	int3   
64021d6c:	int3   
64021d6d:	int3   
64021d6e:	int3   
64021d6f:	int3   
64021d70:	call   0x6400dab0
64021d75:	mov    ds:0x6402d248,eax
64021d7a:	ret    
64021d7b:	int3   
64021d7c:	int3   
64021d7d:	int3   
64021d7e:	int3   
64021d7f:	int3   
64021d80:	call   0x6400db90
64021d85:	mov    ds:0x6402d29c,eax
64021d8a:	ret    
64021d8b:	int3   
64021d8c:	int3   
64021d8d:	int3   
64021d8e:	int3   
64021d8f:	int3   
64021d90:	call   0x6400dc70
64021d95:	mov    ds:0x6402d2b0,eax
64021d9a:	ret    
64021d9b:	int3   
64021d9c:	int3   
64021d9d:	int3   
64021d9e:	int3   
64021d9f:	int3   
64021da0:	call   0x6400dd50
64021da5:	mov    ds:0x6402d264,eax
64021daa:	ret    
64021dab:	int3   
64021dac:	int3   
64021dad:	int3   
64021dae:	int3   
64021daf:	int3   
64021db0:	call   0x6400de30
64021db5:	mov    ds:0x6402d298,eax
64021dba:	ret    
64021dbb:	mov    ecx,0x6402a46c
64021dc0:	call   0x640100cd
64021dc5:	push   0x64021f21
64021dca:	call   0x64010d51
64021dcf:	pop    ecx
64021dd0:	ret    
64021dd1:	mov    ecx,0x6402a4a8
64021dd6:	call   0x640100a7
64021ddb:	push   0x64021f2b
64021de0:	call   0x64010d51
64021de5:	pop    ecx
64021de6:	ret    
64021de7:	call   DWORD PTR ds:0x64022110
64021ded:	push   0x64021f35
64021df2:	mov    DWORD PTR ds:0x6402a4d4,0x64022af4
64021dfc:	mov    ds:0x6402a4d8,eax
64021e01:	mov    BYTE PTR ds:0x6402a4dc,0x0
64021e08:	call   0x64010d51
64021e0d:	pop    ecx
64021e0e:	ret    
64021e0f:	push   0x6402a4d4
64021e14:	mov    ecx,0x6402a4e0
64021e19:	call   0x64010240
64021e1e:	push   0x64021f3f
64021e23:	call   0x64010d51
64021e28:	pop    ecx
64021e29:	ret    
64021e2a:	int3   
64021e2b:	int3   
64021e2c:	int3   
64021e2d:	int3   
64021e2e:	int3   
64021e2f:	int3   
64021e30:	push   0x64021f60
64021e35:	call   0x64010d51
64021e3a:	pop    ecx
64021e3b:	ret    
64021e3c:	int3   
64021e3d:	int3   
64021e3e:	int3   
64021e3f:	int3   
64021e40:	mov    eax,0x6402d2ec
64021e45:	jmp    0x64005330
64021e4a:	int3   
64021e4b:	int3   
64021e4c:	int3   
64021e4d:	int3   
64021e4e:	int3   
64021e4f:	int3   
64021e50:	push   ebp
64021e51:	mov    ebp,esp
64021e53:	and    esp,0xfffffff8
64021e56:	mov    eax,ds:0x6402d2d0
64021e5b:	mov    edx,DWORD PTR [eax]
64021e5d:	sub    esp,0xc
64021e60:	push   esi
64021e61:	push   eax
64021e62:	mov    ecx,0x6402d2cc
64021e67:	push   ecx
64021e68:	push   edx
64021e69:	mov    esi,ecx
64021e6b:	push   esi
64021e6c:	lea    eax,[esp+0x18]
64021e70:	push   eax
64021e71:	call   0x640074a0
64021e76:	mov    ecx,DWORD PTR ds:0x6402d2d0
64021e7c:	push   ecx
64021e7d:	call   0x64010422
64021e82:	add    esp,0x4
64021e85:	xor    eax,eax
64021e87:	mov    ds:0x6402d2d0,eax
64021e8c:	mov    ds:0x6402d2d4,eax
64021e91:	pop    esi
64021e92:	mov    esp,ebp
64021e94:	pop    ebp
64021e95:	ret    
64021e96:	int3   
64021e97:	int3   
64021e98:	int3   
64021e99:	int3   
64021e9a:	int3   
64021e9b:	int3   
64021e9c:	int3   
64021e9d:	int3   
64021e9e:	int3   
64021e9f:	int3   
64021ea0:	push   ebp
64021ea1:	mov    ebp,esp
64021ea3:	and    esp,0xfffffff8
64021ea6:	mov    eax,ds:0x6402d2c4
64021eab:	mov    edx,DWORD PTR [eax]
64021ead:	sub    esp,0xc
64021eb0:	push   esi
64021eb1:	push   eax
64021eb2:	mov    ecx,0x6402d2c0
64021eb7:	push   ecx
64021eb8:	push   edx
64021eb9:	mov    esi,ecx
64021ebb:	push   esi
64021ebc:	lea    eax,[esp+0x18]
64021ec0:	push   eax
64021ec1:	call   0x640070f0
64021ec6:	mov    ecx,DWORD PTR ds:0x6402d2c4
64021ecc:	push   ecx
64021ecd:	call   0x64010422
64021ed2:	add    esp,0x4
64021ed5:	xor    eax,eax
64021ed7:	mov    ds:0x6402d2c4,eax
64021edc:	mov    ds:0x6402d2c8,eax
64021ee1:	pop    esi
64021ee2:	mov    esp,ebp
64021ee4:	pop    ebp
64021ee5:	ret    
64021ee6:	int3   
64021ee7:	int3   
64021ee8:	int3   
64021ee9:	int3   
64021eea:	int3   
64021eeb:	int3   
64021eec:	int3   
64021eed:	int3   
64021eee:	int3   
64021eef:	int3   
64021ef0:	mov    eax,ds:0x6402a45c
64021ef5:	test   eax,eax
64021ef7:	je     0x64021f02
64021ef9:	push   eax
64021efa:	call   0x64010422
64021eff:	add    esp,0x4
64021f02:	mov    DWORD PTR ds:0x6402a45c,0x0
64021f0c:	mov    DWORD PTR ds:0x6402a460,0x0
64021f16:	mov    DWORD PTR ds:0x6402a464,0x0
64021f20:	ret    
64021f21:	mov    ecx,0x6402a46c
64021f26:	jmp    0x6401003b
64021f2b:	mov    ecx,0x6402a4a8
64021f30:	jmp    0x6401017c
64021f35:	mov    ecx,0x6402a4d4
64021f3a:	jmp    0x64010194
64021f3f:	mov    DWORD PTR ds:0x6402a4e0,0x64022b08
64021f49:	ret    
64021f4a:	mov    DWORD PTR ds:0x6402a500,0x64022304
64021f54:	mov    ecx,0x6402a500
64021f59:	jmp    0x6401053b
64021f5e:	int3   
64021f5f:	int3   
64021f60:	push   0x64029fc8
64021f65:	call   DWORD PTR ds:0x64022190
64021f6b:	ret    
