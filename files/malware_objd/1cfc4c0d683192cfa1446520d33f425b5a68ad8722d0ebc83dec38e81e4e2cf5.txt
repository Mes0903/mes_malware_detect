
1cfc4c0d683192cfa1446520d33f425b5a68ad8722d0ebc83dec38e81e4e2cf5.exe:     file format pei-i386


Disassembly of section :

00417000 <>:
	...
  41700c:	add    BYTE PTR [eax],al
  41700e:	add    DWORD PTR [eax],eax
  417010:	or     al,BYTE PTR [eax]
  417012:	add    BYTE PTR [eax],al
  417014:	sbb    BYTE PTR [eax],al
  417016:	add    BYTE PTR [eax+0x0],al
	...
  417024:	add    BYTE PTR [eax],al
  417026:	add    al,0x0
  417028:	add    BYTE PTR gs:[eax],al
  41702b:	add    BYTE PTR [eax+0x0],cl
  41702e:	add    BYTE PTR [eax+0x66],al
  417034:	pusha  
  417035:	add    BYTE PTR [eax],al
  417037:	and    BYTE PTR [edi+0x0],0x0
  41703b:	add    BYTE PTR [eax+0x0],bh
  41703e:	add    BYTE PTR [eax+0x68],al
  417044:	nop
  417045:	add    BYTE PTR [eax],al
  417047:	add    BYTE PTR [eax],0x0
	...
  417056:	add    DWORD PTR [eax],eax
  417058:	sbb    DWORD PTR [eax+eax*1],eax
  41705b:	add    BYTE PTR [eax+0x0],ch
	...
  41706d:	add    BYTE PTR [ecx],al
  41706f:	add    BYTE PTR [ecx],bl
  417071:	add    al,0x0
  417073:	add    BYTE PTR [eax+0x0],bh
	...
  417085:	add    BYTE PTR [ecx],al
  417087:	add    BYTE PTR [ecx],bl
  417089:	add    al,0x0
  41708b:	add    al,cl
	...
  41709d:	add    BYTE PTR [ecx],al
  41709f:	add    BYTE PTR [ecx],bl
  4170a1:	add    al,0x0
  4170a3:	add    al,bl
  4170a5:	add    BYTE PTR [eax],al
  4170a7:	add    BYTE PTR [eax],al
  4170a9:	push   eax
  4170aa:	add    BYTE PTR [eax],al
  4170ac:	add    BYTE PTR [esi+0x0],al
  4170b2:	add    BYTE PTR [eax],al
  4170b4:	add    BYTE PTR [eax],al
  4170b6:	add    BYTE PTR [eax],al
  4170b8:	add    dh,dl
  4170ba:	add    BYTE PTR [eax],al
  4170bc:	add    BYTE PTR [ebx],dh
	...
  4170c6:	add    BYTE PTR [eax],al
  4170c8:	add    BYTE PTR [ecx],cl
  4170ca:	add    DWORD PTR [eax],eax
  4170cc:	add    BYTE PTR [esi],dh
	...
  4170d6:	add    BYTE PTR [eax],al
  4170d8:	add    BYTE PTR [edi],bh
  4170da:	add    DWORD PTR [eax],eax
  4170dc:	add    BYTE PTR [eax],bl
	...
  4170ee:	add    BYTE PTR [eax],al
  4170f0:	push   ecx
  4170f1:	add    BYTE PTR [ebp+0x2b04244c],cl
  4170f7:	enter  0xc01b,0x1d
  4170fb:	not    eax
  4170fd:	and    eax,DWORD PTR [edi+0x325c48b]
  417103:	lock dec DWORD PTR [ebx+0xa72f93b]
  41710a:	in     al,dx
  41710b:	rcr    DWORD PTR [ecx+0x7f],0x94
  41710f:	loopne 0x41709a
  417111:	push   cs
  417112:	add    al,0x24
  417114:	ret    
  417115:	sub    eax,0x1c1c100e
  41711a:	test   DWORD PTR [edi],ecx
  41711c:	jmp    0x417107
  41711e:	in     eax,dx
  41711f:	inc    esp
  417120:	push   esp
  417121:	loopne 0x4170e3
  417123:	push   esi
  417124:	cmp    al,0x74
  417126:	inc    edi
  417127:	mov    esp,0xbc0cbc54
  41712c:	sar    BYTE PTR [edi+edi*1],cl
  41712f:	jnp    0x417121
  417131:	adc    al,dh
  417133:	div    al
  417135:	aaa    
  417136:	icebp  
  417137:	xchg   DWORD PTR [esi+0x6f98114],eax
  41713d:	add    al,0x4e
  41713f:	or     al,0x57
  417141:	mov    edi,0x720c03ff
  417146:	sbb    BYTE PTR [edx],al
  417148:	and    ecx,edi
  41714a:	inc    eax
  41714b:	jbe    0x417167
  41714d:	fsubr  QWORD PTR [esi-0x72ac0f7f]
  417153:	sbb    al,0x1
  417155:	clc    
  417156:	fisttp WORD PTR [edx+0x40719b70]
  41715c:	loopne 0x417190
  41715e:	sbb    BYTE PTR ds:[eax+0x4a0006bc],cl
  417165:	jne    0x417153
  417167:	pop    ebx
  417168:	pop    edi
  417169:	mov    al,0x1
  41716b:	aas    
  41716c:	pop    esi
  41716d:	ret    
  41716e:	mov    ah,0xc0
  417170:	or     BYTE PTR [eax],al
  417172:	push   esp
  417173:	lea    ecx,[eax-0x41]
  417176:	cmp    ecx,0x3c
  417179:	sbb    DWORD PTR [edi+0x75],esi
  41717c:	js     0x41713e
  41717e:	fs ret 
  417180:	sbb    BYTE PTR [edi-0x2fdb468e],bl
  417186:	or     BYTE PTR [ecx],cl
  417188:	dec    edi
  417189:	(bad)  
  41718a:	cmp    al,0x8f
  41718c:	clc    
  41718d:	sub    esi,DWORD PTR [ebp+0x23]
  417190:	push   0x3e
  417192:	pop    eax
  417193:	leave  
  417194:	xor    ecx,ecx
  417196:	adc    DWORD PTR [esi],0xc1950f2f
  41719c:	dec    ecx
  41719d:	fsubr  st(1),st
  41719f:	inc    eax
  4171a0:	jmp    0x560516e6
  4171a5:	shr    ah,1
  4171a7:	push   ecx
  4171a8:	loop   0x417200
  4171aa:	bnd jne 0x41720d
  4171ad:	or     BYTE PTR [edx],dh
  4171af:	cmp    esi,ecx
  4171b1:	je     0x43e4025
  4171b7:	cmp    DWORD PTR [ebp+0x14],ecx
  4171ba:	and    dl,BYTE PTR [edx]
  4171bc:	lds    eax,FWORD PTR [ecx]
  4171be:	mov    eax,DWORD PTR [ebp+0xc]
  4171c1:	xor    edx,edx
  4171c3:	add    eax,esi
  4171c5:	(bad)  
  4171c6:	and    BYTE PTR [eax],dl
  4171c8:	mov    DWORD PTR [eax-0x8],eax
  4171cb:	sete   dl
  4171ce:	cmp    edi,DWORD PTR [eax-0x10]
  4171d1:	test   BYTE PTR [eax],0xf6
  4171d4:	push   ebp
  4171d5:	jnp    0x4171d3
  4171d7:	xor    BYTE PTR [ebx+0x57533d96],al
  4171dd:	xor    BYTE PTR [eax+0x3e],0xc8
  4171e1:	push   edx
  4171e2:	mov    DWORD PTR [esi-0xb324cd],ecx
  4171e8:	push   esp
  4171e9:	cmp    eax,DWORD PTR [eax]
  4171eb:	jne    0x4171e5
  4171ed:	jae    0x417210
  4171ef:	movsx  eax,BYTE PTR [esi]
  4171f2:	push   eax
  4171f3:	aas    
  4171f4:	call   0x4643d85f
  4171f9:	shr    ah,1
  4171fb:	pop    ecx
  4171fc:	add    BYTE PTR [ebp+0x3],dh
  4171ff:	dec    edx
  417200:	jmp    0x41720a
  417202:	shl    ebx,0x6
  417205:	aas    
  417206:	or     ebx,eax
  417208:	cmp    al,bh
  41720a:	mov    edx,0x4fa0742
  41720f:	jl     0x4171eb
  417211:	xchg   ebx,eax
  417212:	jge    0x417210
  417214:	xor    BYTE PTR [ebp+0x1c],0x8b
  417218:	fmul   st(0),st
  41721a:	iret   
  41721b:	(bad)  
  41721c:	cdq    
  41721d:	and    dl,0x7
  417220:	add    eax,edx
  417222:	shl    DWORD PTR [eax+edi*8-0x16],0x45
  417227:	invd   
  417229:	cmp    eax,DWORD PTR [ecx]
  41722b:	jle    0x4171bb
  41722d:	(bad)  
  41722e:	out    dx,al
  41722f:	cld    
  417230:	aam    0x77
  417232:	arpl   WORD PTR [edx],si
  417234:	push   0x18
  417236:	xor    DWORD PTR [edi],esi
  417238:	pop    ecx
  417239:	cmp    BYTE PTR [ebx],ch
  41723b:	iret   
  41723c:	mov    DWORD PTR ds:0x3604e3d3,edi
  417242:	jle    0x4171ca
  417244:	push   es
  417245:	dec    eax
  417246:	mov    BYTE PTR [ebx],bh
  417248:	or     eax,0x1055398b
  41724d:	mov    cs,ebx
  41724f:	shr    ecx,0xa7
  417252:	inc    DWORD PTR [ebp-0x7d]
  417255:	mov    BYTE PTR [edx],cl
  417257:	push   es
  417258:	mov    eax,0xe7754808
  41725d:	cmc    
  41725e:	sbb    BYTE PTR [edi],cl
  417260:	sub    BYTE PTR [esi-0x15],0x5f
  417264:	pop    ebx
  417265:	mov    eax,ds:0xb9a008b4
  41726a:	sub    ch,BYTE PTR [eax]
  41726c:	mov    DWORD PTR [ecx],eax
  41726e:	mov    bl,0x12
  417270:	shr    bl,0x2
  417273:	dec    edx
  417274:	es leave 
  417276:	out    0x6c,al
  417278:	sub    BYTE PTR [eax],cl
  41727a:	mov    al,ds:0x285756b4
  41727f:	je     0x4172de
  417281:	in     eax,dx
  417282:	dec    ecx
  417283:	or     al,0x76
  417285:	inc    eax
  417286:	hlt    
  417287:	jge    0x417219
  417289:	jge    0x417309
  41728b:	(bad)  
  41728c:	js     0x4172dd
  41728e:	jg     0x417219
  417290:	or     al,0xfc
  417292:	call   0xd9307a02
  417297:	push   eax
  417298:	lea    eax,[eax-0xbb36b0]
  41729e:	add    DWORD PTR [eax+ebp*8],ecx
  4172a1:	out    0xfe,al
  4172a3:	sbb    BYTE PTR [eax-0x7beb3b7d],0xc0
  4172aa:	je     0x417313
  4172ac:	sub    BYTE PTR [esp+edi*8-0x51],bl
  4172b0:	rol    DWORD PTR [ecx],0x7c
  4172b3:	and    BYTE PTR [edx+0x20],ch
  4172b6:	popf   
  4172b7:	push   esi
  4172b8:	adc    eax,0x1938e853
  4172bd:	and    BYTE PTR [eax],dl
  4172bf:	div    BYTE PTR [ebp+edi*2+0xf]
  4172c3:	popa   
  4172c4:	dec    ecx
  4172c5:	ins    DWORD PTR es:[edi],dx
  4172c6:	pop    ecx
  4172c7:	mov    BYTE PTR [ecx+eiz*1],0x6
  4172cb:	inc    ecx
  4172cc:	mov    gs,ebx
  4172ce:	or     DWORD PTR [eax+edi*1-0x219ef0c6],edx
  4172d5:	pop    edi
  4172d6:	pop    esi
  4172d7:	pop    ebx
  4172d8:	and    edx,0x247c8b57
  4172de:	or     BYTE PTR [eax+0x336f74be],ch
  4172e4:	and    BYTE PTR [edx+0x46e82a02],dh
  4172ea:	push   es
  4172eb:	and    BYTE PTR [ecx-0x7b],0xdb
  4172ef:	inc    eax
  4172f0:	adc    al,BYTE PTR [edi]
  4172f2:	mov    eax,0x70314039
  4172f7:	add    ebx,ebp
  4172f9:	jnp    0x417351
  4172fb:	xor    esi,esi
  4172fd:	cmp    DWORD PTR ds:0x16814cc1,esi
  417303:	jbe    0x417330
  417305:	mov    eax,DWORD PTR [esi*8+0x12a044c1]
  41730c:	out    0xf,al
  41730e:	je     0x417327
  417310:	cmp    DWORD PTR [edi+edi*2],0x77
  417314:	pop    ss
  417315:	cmove  ecx,DWORD PTR ds:0xad478157
  41731c:	add    eax,0x592b38c3
  417321:	std    
  417322:	adc    eax,0x2b3b462e
  417327:	add    esi,DWORD PTR [edx-0x2b]
  41732a:	lea    eax,[ebx+0x1]
  41732d:	sub    BYTE PTR [eax],dh
  41732f:	mov    ebp,0x56f0314d
  417334:	scas   eax,DWORD PTR es:[edi]
  417335:	and    al,0xff
  417337:	pop    esp
  417338:	(bad)  
  417339:	jne    0x4173ba
  41733b:	adc    al,0xfa
  41733d:	mov    edx,0xe08d0645
  417342:	jmp    0x417363
  417344:	mov    al,ds:0x16924517
  417349:	mov    eax,ds:0xe0c13580
  41734e:	add    ecx,DWORD PTR [ecx-0x269f47af]
  417354:	mov    al,0x41
  417356:	push   ss
  417357:	mov    eax,esi
  417359:	inc    edx
  41735a:	mov    al,ds:0x7211445f
  41735f:	cmp    DWORD PTR [eax],0x12480de8
  417365:	test   BYTE PTR [eax+0x4],ch
  417368:	nop
  417369:	jbe    0x4172f8
  41736b:	test   DWORD PTR [eax+0x67],eax
  41736e:	cld    
  41736f:	cwde   
  417370:	push   eax
  417371:	xor    DWORD PTR ds:0xb3e6305c,edx
  417377:	or     eax,0xfedc0e11
  41737c:	adc    eax,0x4288d4e8
  417381:	or     al,0x15
  417383:	push   0x2266bcfc
  417388:	and    ebp,edx
  41738a:	imul   ah
  41738c:	ficom  WORD PTR [edi]
  41738e:	mov    dl,BYTE PTR [edi+edi*8]
  417391:	sub    BYTE PTR [ecx+0xa],bl
  417394:	dec    eax
  417395:	cwde   
  417396:	cmp    eax,0x94835868
  41739b:	adc    al,0x1c
  41739d:	fistp  QWORD PTR [eax]
  41739f:	push   esi
  4173a0:	cdq    
  4173a1:	push   0x3
  4173a3:	or     BYTE PTR [ebx+0x5380d224],bh
  4173a9:	push   ebx
  4173aa:	and    esi,DWORD PTR [ebx+0x13]
  4173ad:	xlat   BYTE PTR ds:[ebx]
  4173ae:	cmp    eax,esi
  4173b0:	inc    esi
  4173b1:	dec    esp
  4173b2:	je     0x4173c6
  4173b4:	xor    cl,dl
  4173b6:	in     al,dx
  4173b7:	pushf  
  4173b8:	fs loope 0x41740f
  4173bb:	push   eax
  4173bc:	in     eax,0x12
  4173be:	jne    0x4173d9
  4173c0:	or     eax,0xce1de07d
  4173c5:	sub    BYTE PTR [edx],bl
  4173c7:	mov    eax,ds:0x39c43c0f
  4173cc:	addr16 jne 0x41742f
  4173cf:	or     DWORD PTR [ebp+0x481c940a],edi
  4173d5:	fwait
  4173d6:	mov    eax,0x86428539
  4173db:	add    eax,0x7921d824
  4173e0:	dec    BYTE PTR [edi]
  4173e2:	xor    al,0x6f
  4173e4:	das    
  4173e5:	push   eax
  4173e6:	xchg   ebp,eax
  4173e7:	xchg   DWORD PTR [ebx+0x7643bd15],esp
  4173ed:	mov    esi,DWORD PTR ds:0x74111544
  4173f3:	adc    al,0x17
  4173f5:	mov    dl,dh
  4173f7:	mov    DWORD PTR [edx-0x16bdfaf9],edx
  4173fd:	cmp    eax,0xf00e8595
  417402:	push   ebx
  417403:	ins    DWORD PTR es:[edi],dx
  417404:	add    cl,BYTE PTR [edx]
  417406:	fadd   QWORD PTR [ecx]
  417408:	push   0x4b40c1a9
  41740d:	rcl    BYTE PTR [edx-0x3b],0x14
  417411:	mov    DWORD PTR [ebp-0x6e],ebx
  417414:	adc    al,0xd9
  417416:	mov    edi,0x2578ca6
  41741b:	push   ebx
  41741c:	ficomp WORD PTR [edx+0x48949829]
  417422:	and    DWORD PTR [edx],ebp
  417424:	mov    DWORD PTR [edi],0x2e67946c
  41742a:	cmp    al,0x88
  41742c:	cmp    DWORD PTR [ebp-0x5efda7bc],0xfffffff1
  417433:	push   ebx
  417434:	dec    edx
  417435:	mov    edi,0xeb1e6a43
  41743a:	cwde   
  41743b:	(bad)  
  41743c:	sbb    BYTE PTR [eax],bl
  41743e:	not    BYTE PTR [esi]
  417440:	call   0xe14ce4fa
  417445:	sbb    al,0xee
  417447:	jo     0x41744f
  417449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41744a:	loopne 0x417454
  41744c:	inc    esp
  41744d:	std    
  41744e:	inc    edx
  41744f:	pop    ecx
  417450:	add    al,0x13
  417452:	out    0xc8,eax
  417454:	pop    eax
  417455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417456:	add    al,0x89
  417458:	les    ecx,FWORD PTR [eax]
  41745a:	cdq    
  41745b:	push   edx
  41745c:	std    
  41745d:	sub    al,cl
  41745f:	(bad)  
  417460:	lahf   
  417461:	mov    ebx,DWORD PTR [ecx]
  417463:	push   esp
  417464:	mov    ecx,0x4c0ffd25
  417469:	jmp    0x4174a8
  41746b:	es xchg ebx,eax
  41746d:	or     BYTE PTR [edi-0x63],al
  417470:	sub    cl,ch
  417472:	sub    BYTE PTR [edx],cl
  417474:	push   cs
  417475:	or     bh,BYTE PTR [edi-0x3f]
  417478:	sub    BYTE PTR [eax+0x6c],ch
  41747b:	add    dh,BYTE PTR [ebp+0x70]
  41747e:	or     al,0x40
  417480:	push   0x2
  417482:	addr16 jmp 0x417494
  417485:	push   0x11960119
  41748a:	or     ah,BYTE PTR [esi-0x18]
  41748d:	cmc    
  41748e:	or     DWORD PTR [eax+0x1c],ecx
  417491:	adc    dh,cl
  417493:	gs cld 
  417495:	adc    al,0x8e
  417497:	mov    dl,0x12
  417499:	(bad)  
  41749a:	in     al,dx
  41749b:	dec    ebp
  41749c:	inc    ebx
  41749d:	xchg   esp,eax
  41749e:	add    eax,0xb8680e74
  4174a3:	push   esp
  4174a4:	test   DWORD PTR [edx],ecx
  4174a6:	dec    esp
  4174a7:	cmp    al,0x10
  4174a9:	adc    eax,0x22592911
  4174ae:	mov    dh,0xb2
  4174b0:	pop    esi
  4174b1:	inc    eax
  4174b2:	lock inc ebp
  4174b4:	jmp    0xf25a0e0a
  4174b9:	or     cl,dh
  4174bb:	mov    DWORD PTR [ebx+0x4d],edx
  4174be:	or     eax,0x23f25047
  4174c3:	adc    BYTE PTR [ebp+edx*2+0x3ebd314],al
  4174ca:	dec    esp
  4174cb:	jns    0x417474
  4174cd:	or     BYTE PTR [ebx-0x7bbbc7e3],0x48
  4174d4:	adc    eax,0xd3ff1b69
  4174d9:	inc    esp
  4174da:	stos   DWORD PTR es:[edi],eax
  4174db:	call   0x264da79c
  4174e0:	add    ah,BYTE PTR [edx]
  4174e2:	retf   0xf49c
  4174e5:	out    dx,al
  4174e6:	sbb    al,0x1f
  4174e8:	sub    BYTE PTR [edx-0xc5b8716],ch
  4174ee:	and    BYTE PTR [esi+0x50593efc],ah
  4174f4:	push   esp
  4174f5:	mov    ecx,0x4d8d1f80
  4174fa:	hlt    
  4174fb:	retf   
  4174fc:	jnp    0x41750a
  4174fe:	adc    BYTE PTR [eax],ah
  417500:	jne    0x417527
  417502:	shr    BYTE PTR [ecx+eiz*2-0x30],1
  417506:	aam    0x40
  417508:	add    BYTE PTR es:[esi+0x140e2181],0x9
  417510:	or     bh,ch
  417512:	sub    BYTE PTR [esp+ebp*2+0xd],ah
  417516:	je     0x417530
  417518:	push   esi
  417519:	or     BYTE PTR [esp+ebx*2],ah
  41751c:	xchg   ah,bh
  41751e:	add    al,0xf2
  417520:	xchg   edx,eax
  417521:	push   ebp
  417522:	movq   mm1,QWORD PTR [ebx+0x77]
  417526:	adc    BYTE PTR [ebx+edi*8],bh
  417529:	test   dl,ah
  41752b:	add    ah,BYTE PTR [edi]
  41752d:	iret   
  41752e:	nop
  41752f:	mov    cl,0x2f
  417531:	add    edx,DWORD PTR [edx]
  417533:	pop    eax
  417534:	adc    DWORD PTR [edx],esp
  417536:	dec    esi
  417537:	sub    BYTE PTR [eax],ch
  417539:	sbb    BYTE PTR [edi],dl
  41753b:	dec    ecx
  41753c:	mov    al,0x38
  41753e:	xchg   ecx,eax
  41753f:	adc    dl,BYTE PTR [esi]
  417541:	push   0x65
  417543:	or     bl,BYTE PTR [esi+0x2c165208]
  417549:	dec    ecx
  41754a:	xchg   esp,eax
  41754b:	aaa    
  41754c:	stos   BYTE PTR es:[edi],al
  41754d:	mov    dh,0x78
  41754f:	cli    
  417550:	sbb    DWORD PTR [esi+0x1857310f],eax
  417556:	in     al,dx
  417557:	adc    eax,0xffac7da6
  41755c:	and    BYTE PTR [edi+eax*1],bl
  41755f:	and    al,0xe9
  417561:	jle    0x4175aa
  417563:	mov    eax,ds:0xfa38628d
  417568:	adc    DWORD PTR [ebp+0xd],edx
  41756b:	repz in al,0x2c
  41756e:	mov    ds:0x84440244,al
  417573:	sub    DWORD PTR [ebp-0x749bd705],edx
  417579:	inc    esp
  41757a:	push   0x13d6994c
  41757f:	adc    ch,BYTE PTR [edx-0xf]
  417582:	call   0x21cec0b7
  417587:	sbb    eax,0xe9b43072
  41758c:	gs mov dl,0xc4
  41758f:	xchg   BYTE PTR [edx],dh
  417591:	mov    cs,WORD PTR [edx-0x6bfc85da]
  417597:	pop    ecx
  417598:	xor    dh,BYTE PTR ds:0x11b51e3f
  41759e:	pusha  
  41759f:	push   cs
  4175a0:	mov    eax,ds:0x2a040667
  4175a5:	pop    edx
  4175a6:	pop    esp
  4175a7:	add    al,0x96
  4175a9:	push   edx
  4175aa:	add    BYTE PTR fs:[edx+0x48],0x74
  4175af:	push   ds
  4175b0:	dec    ebx
  4175b1:	sub    eax,0x2f75d540
  4175b6:	mov    edx,0x3e70393c
  4175bb:	hlt    
  4175bc:	push   ebp
  4175bd:	imul   edx,DWORD PTR [eax],0x6
  4175c0:	push   es
  4175c1:	rcr    BYTE PTR ss:[ebp+0x67f41530],cl
  4175c8:	jmp    0x4175e2
  4175ca:	push   0xb8face2a
  4175cf:	xor    al,0xad
  4175d1:	fimul  WORD PTR [ebx]
  4175d3:	mov    ch,0x3
  4175d5:	nop
  4175d6:	call   0xe888:0x98f02208
  4175dd:	pop    ebp
  4175de:	dec    esp
  4175df:	ret    0x670d
  4175e2:	lea    eax,[ebx-0x593cd7db]
  4175e8:	push   0xffffffa5
  4175ea:	les    edx,FWORD PTR [edx-0x7d]
  4175ed:	pop    ecx
  4175ee:	fmul   st,st(5)
  4175f0:	or     eax,ebp
  4175f2:	cmp    eax,0x1b3822b3
  4175f7:	mov    edi,0x94103224
  4175fc:	mov    DWORD PTR [edi-0x23f038c2],ebx
  417602:	sbb    edx,DWORD PTR [edi]
  417604:	jnp    0x4175ad
  417606:	aam    0x4a
  417608:	push   esi
  417609:	add    esp,eax
  41760b:	push   0xff576aa4
  417610:	xchg   ecx,eax
  417611:	sub    al,0xf8
  417613:	and    eax,0x7079b5f
  417618:	cwde   
  417619:	sbb    al,0x57
  41761b:	xor    edi,edi
  41761d:	cmp    al,0x9e
  41761f:	add    ecx,ecx
  417621:	push   es
  417622:	add    DWORD PTR [edx+0x2232100e],esp
  417628:	dec    esi
  417629:	cli    
  41762a:	adc    esp,DWORD PTR [edx]
  41762c:	push   eax
  41762d:	pop    eax
  41762e:	xchg   esp,eax
  41762f:	mov    bh,0x1d
  417631:	je     0x4175f7
  417633:	push   esi
  417634:	call   0x87570bbe
  417639:	pop    ds
  41763a:	js     0x4175cc
  41763c:	jmp    0x417657
  41763e:	inc    ebp
  41763f:	in     al,0x3b
  417641:	in     al,dx
  417642:	adc    al,0x27
  417644:	or     al,BYTE PTR ds:0x15fa8d31
  41764a:	or     eax,0xdf7f3390
  41764f:	pop    esi
  417650:	xchg   esp,eax
  417651:	out    0x15,al
  417653:	leave  
  417654:	lods   al,BYTE PTR ds:[esi]
  417655:	dec    ebx
  417656:	add    bl,cl
  417658:	add    al,0x8a
  41765a:	add    cl,BYTE PTR [ebx-0x4b027054]
  417660:	scas   al,BYTE PTR es:[edi]
  417661:	add    edi,DWORD PTR [edx]
  417663:	pop    es
  417664:	jne    0x417682
  417666:	push   ebx
  417667:	fcomp  st(2)
  417669:	mov    cl,al
  41766b:	inc    bh
  41766d:	or     ebp,DWORD PTR [ebx]
  41766f:	fild   WORD PTR [ecx+ecx*8+0x38803303]
  417676:	xchg   DWORD PTR [eax+0x9],edx
  417679:	inc    esi
  41767a:	inc    eax
  41767b:	mov    cl,BYTE PTR [edi]
  41767d:	or     al,0x3
  41767f:	cmp    cl,BYTE PTR [eax]
  417681:	shr    dh,0x5b
  417684:	lea    eax,[esi+edx*1]
  417687:	(bad)  
  417688:	and    eax,0x3e0cfa47
  41768d:	xchg   BYTE PTR [ecx],bh
  41768f:	adc    BYTE PTR [ebx],al
  417691:	adc    DWORD PTR [edx+0x413aff40],ecx
  417697:	and    eax,0x6f8905fa
  41769c:	dec    eax
  41769d:	cmp    bl,ch
  41769f:	add    edx,DWORD PTR [edx-0x3c497efe]
  4176a5:	mov    ah,BYTE PTR [esp]
  4176a8:	or     BYTE PTR [edx+ecx*4],al
  4176ab:	adc    eax,0xcfbf8260
  4176b0:	sbb    BYTE PTR ds:0x1f01383b,ch
  4176b6:	je     0x4176bf
  4176b8:	inc    ecx
  4176b9:	test   al,0x37
  4176bb:	push   edx
  4176bc:	stc    
  4176bd:	(bad)  
  4176be:	push   ds
  4176bf:	xor    edx,edx
  4176c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176c2:	pop    eax
  4176c3:	and    eax,0x2276c6a3
  4176c8:	or     edx,edi
  4176ca:	jge    0x4176d8
  4176cc:	sub    ecx,DWORD PTR [edi]
  4176ce:	xchg   BYTE PTR [ebp+0x4a],bh
  4176d1:	call   0x3bc33aa8
  4176d6:	rcr    BYTE PTR [ecx+0x73],1
  4176d9:	push   cs
  4176da:	cwde   
  4176db:	shl    BYTE PTR [edx],cl
  4176dd:	call   0x813ab8e9
  4176e2:	inc    esi
  4176e3:	mov    BYTE PTR [eax],cl
  4176e5:	jb     0x4176cc
  4176e7:	pop    edi
  4176e8:	(bad)  
  4176e9:	rcr    BYTE PTR [esi],cl
  4176eb:	xchg   edx,eax
  4176ec:	push   es
  4176ed:	pop    ebp
  4176ee:	mov    ds:0x32ace85a,eax
  4176f3:	dec    ebp
  4176f4:	push   eax
  4176f5:	adc    eax,0xc9048f10
  4176fa:	mov    al,0x66
  4176fc:	push   ecx
  4176fd:	ins    DWORD PTR es:[edi],dx
  4176fe:	ret    
  4176ff:	cwde   
  417700:	cmp    DWORD PTR [ecx+0x3b],eax
  417703:	call   0xbb632b96
  417708:	add    al,bl
  41770a:	sbb    BYTE PTR [ecx-0x75],bl
  41770d:	clc    
  41770e:	jbe    0x417760
  417710:	and    edi,ecx
  417712:	pop    esp
  417713:	hlt    
  417714:	adc    al,0xea
  417716:	call   0x339bef6e
  41771b:	adc    BYTE PTR [esi+0x3aba361a],ch
  417721:	mov    ah,0x41
  417723:	jnp    0x4176ad
  417725:	popa   
  417726:	xor    BYTE PTR [eax+0x59d7035b],bh
  41772c:	pop    edi
  41772d:	or     BYTE PTR [esi+0x4e],bl
  417730:	lea    edx,[ecx+0x41bd9a6]
  417736:	xor    al,BYTE PTR [ecx]
  417738:	and    ch,BYTE PTR [eax-0x57]
  41773b:	push   eax
  41773c:	fs dec eax
  41773e:	fadd   DWORD PTR [ebx+0x1f427c41]
  417744:	adc    esi,DWORD PTR [esi+0x526c421b]
  41774a:	push   edi
  41774b:	sbb    eax,0xf28e5256
  417750:	call   0xc244f86d
  417755:	and    al,0xeb
  417757:	pop    ss
  417758:	add    edi,DWORD PTR fs:[ecx+eax*2]
  41775c:	jl     0x417766
  41775e:	mov    al,ds:0xe2047f5a
  417763:	and    BYTE PTR [eax-0x78],cl
  417766:	jo     0x41776e
  417768:	inc    edx
  417769:	call   0x54757655
  41776e:	(bad)  
  41776f:	xchg   ebx,eax
  417770:	jbe    0x4177d6
  417772:	in     al,0xf2
  417774:	push   ebx
  417775:	adc    DWORD PTR [ecx],0x71a8702d
  41777b:	mov    BYTE PTR [eax+0x3b2f9ac],dh
  417781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417782:	sub    BYTE PTR [esp+eax*1-0x74f62aeb],cl
  417789:	lock lea eax,[esi-0x3f]
  41778d:	inc    edx
  41778e:	jnp    0x41772a
  417790:	xchg   ebx,eax
  417791:	pop    ecx
  417792:	and    BYTE PTR [edx],al
  417794:	out    0xf8,al
  417796:	push   edi
  417797:	pushf  
  417798:	push   ds
  417799:	adc    cl,BYTE PTR [eax-0x53ebc8e4]
  41779f:	jae    0x4177bc
  4177a1:	pop    ebp
  4177a2:	pop    ebx
  4177a3:	mov    DWORD PTR [ebx],ebx
  4177a5:	cmp    BYTE PTR ds:0x883d8b74,dh
  4177ab:	in     eax,dx
  4177ac:	cld    
  4177ad:	retf   0x2041
  4177b0:	add    al,0x33
  4177b2:	adc    eax,0x8d6606d6
  4177b7:	inc    esp
  4177b8:	aas    
  4177b9:	add    al,BYTE PTR [esi+0x6d503842]
  4177bf:	fcom   DWORD PTR [ebx+0x53]
  4177c2:	sbb    eax,0xc38b7998
  4177c7:	dec    ecx
  4177c8:	pop    ebx
  4177c9:	ds xchg edx,eax
  4177cb:	leave  
  4177cc:	push   edi
  4177cd:	jmp    0x4b08:0x1578cc91
  4177d4:	ss mov dl,0xc
  4177d7:	cmp    eax,0x1259aaa7
  4177dc:	jmp    0x4177e7
  4177de:	inc    eax
  4177df:	cmp    dh,BYTE PTR [eax]
  4177e1:	dec    eax
  4177e2:	add    al,0x80
  4177e4:	stc    
  4177e5:	pop    esp
  4177e6:	je     0x4177ee
  4177e8:	rol    BYTE PTR [eax+0x7d],0xf3
  4177ec:	pop    esi
  4177ed:	xchg   ecx,eax
  4177ee:	(bad)  
  4177ef:	sbb    BYTE PTR [eax+esi*4],cl
  4177f2:	xor    BYTE PTR [edx],al
  4177f4:	pop    edx
  4177f5:	mov    DWORD PTR [ecx],ebx
  4177f7:	fsubr  DWORD PTR [eax-0x1]
  4177fa:	mov    edi,0xf18b86a1
  4177ff:	call   0x1b13df7a
  417804:	or     ecx,esp
  417806:	inc    esi
  417807:	add    al,0x49
  417809:	daa    
  41780a:	cdq    
  41780b:	cmp    eax,DWORD PTR [edi-0x3da1fbea]
  417811:	add    cl,BYTE PTR ds:[ebp-0xeade37f]
  417818:	call   DWORD PTR [ebx+0x69]
  41781b:	mov    DWORD PTR [ebx+0x78fff291],esp
  417821:	test   BYTE PTR [edx-0x7d0bd6e7],al
  417827:	int3   
  417828:	jno    0x41783e
  41782a:	pop    DWORD PTR [eax+0x1]
  41782d:	ss call 0xe24675f4
  417833:	inc    ecx
  417834:	or     DWORD PTR [eax],edx
  417836:	inc    edi
  417837:	or     DWORD PTR [esi],0xffffff97
  41783a:	jg     0x417880
  41783c:	add    dh,BYTE PTR [edx-0x1a]
  41783f:	cmc    
  417840:	mov    al,ds:0xeb5c51b1
  417845:	mul    DWORD PTR [eax+0x20]
  417848:	sbb    al,0x99
  41784a:	std    
  41784b:	push   ds
  41784c:	push   ecx
  41784d:	pusha  
  41784e:	or     edi,eax
  417850:	add    al,0x24
  417852:	sub    al,0x62
  417854:	iret   
  417855:	arpl   WORD PTR [ecx+edx*2-0x24],sp
  417859:	and    al,BYTE PTR [edx]
  41785b:	mov    cl,0x10
  41785d:	and    ebp,DWORD PTR [eax+0x24]
  417860:	inc    esi
  417861:	and    bh,BYTE PTR [edi-0x733cebde]
  417867:	pop    esi
  417868:	jne    0x417877
  41786a:	fidiv  DWORD PTR ds:0xebb02589
  417870:	ret    
  417871:	mov    eax,ds:0x18a320a0
  417876:	fimul  WORD PTR [ebx]
  417878:	xchg   ecx,eax
  417879:	sub    BYTE PTR [ecx+ecx*2+0x40],cl
  41787d:	nop    DWORD PTR [eax-0x3e75eb48]
  417884:	sub    DWORD PTR [eax],edx
  417886:	mov    eax,0x14315206
  41788b:	mov    DWORD PTR ds:0xda594f12,0x2122014
  417895:	sub    al,0x8a
  417897:	sbb    BYTE PTR [esp+ebx*4+0x5844287],al
  41789e:	sbb    ch,BYTE PTR [ebx-0x6a]
  4178a1:	icebp  
  4178a2:	fldcw  WORD PTR [edx+0x20]
  4178a5:	add    bl,BYTE PTR [ebp+0x58]
  4178a8:	call   0x6b79ebe8
  4178ad:	or     al,0x58
  4178af:	mov    bl,BYTE PTR [edi-0x3503bab6]
  4178b5:	sub    al,0x6a
  4178b7:	or     BYTE PTR [esi+edi*8+0x13],bh
  4178bb:	push   ecx
  4178bc:	test   BYTE PTR [esp+ecx*1+0x8],bl
  4178c0:	sub    BYTE PTR [ebx+0x34464ae8],dl
  4178c6:	cli    
  4178c7:	xchg   DWORD PTR [esi+0x35],edx
  4178ca:	cld    
  4178cb:	fs (bad) 
  4178cd:	div    BYTE PTR [edi+0x14]
  4178d0:	push   0x7f84d234
  4178d5:	test   BYTE PTR [ecx+ebx*2],0x76
  4178d9:	clc    
  4178da:	out    0xbb,al
  4178dc:	dec    esi
  4178dd:	sbb    al,0x22
  4178df:	aas    
  4178e0:	mov    al,ds:0xa5b095e6
  4178e5:	adc    ch,al
  4178e7:	mov    cl,0xfc
  4178e9:	adc    BYTE PTR [bp+di-0x74f5],dh
  4178ee:	mov    ebx,0x892b0284
  4178f3:	inc    ebx
  4178f4:	adc    bl,ch
  4178f6:	xor    al,0x98
  4178f8:	and    BYTE PTR [ebx-0x4017cb35],cl
  4178fe:	adc    eax,esi
  417900:	repz and dh,dh
  417903:	lea    esp,[edx+0x3b65601d]
  417909:	test   DWORD PTR [esi+esi*2],0xec8c390e
  417910:	cli    
  417911:	xor    BYTE PTR [ebp+ecx*1+0x7e],0x40
  417916:	shufps xmm6,XMMWORD PTR [edx-0xe],0x89
  41791b:	retf   0xeb5
  41791e:	sbb    eax,DWORD PTR [esi+0x68]
  417921:	mov    ebp,0x71fc5422
  417926:	shl    BYTE PTR [edx],0x8b
  417929:	inc    esp
  41792a:	cdq    
  41792b:	mov    esi,edi
  41792d:	in     al,dx
  41792e:	lods   al,BYTE PTR ds:[esi]
  41792f:	mov    fs,WORD PTR [eax-0x75]
  417932:	mov    al,0x3b
  417934:	(bad)  
  417935:	je     0x64c4e0b9
  41793b:	mov    BYTE PTR [eax],dl
  41793d:	pop    edi
  41793e:	push   eax
  41793f:	(bad)  
  417940:	pop    edx
  417941:	sbb    al,0x5f
  417943:	fst    DWORD PTR [eax+0x8]
  417946:	rcl    cl,0x68
  417949:	cld    
  41794a:	nop    DWORD PTR [esi+0x1ac746e0]
  417951:	dec    ecx
  417952:	sbb    BYTE PTR [eax+ebx*2],cl
  417955:	shl    BYTE PTR [edx],0xc4
  417958:	push   es
  417959:	int3   
  41795a:	add    al,0xc8
  41795c:	or     al,dl
  41795e:	adc    ah,dl
  417960:	xor    esp,ebx
  417962:	mov    WORD PTR [eax],cs
  417964:	xor    DWORD PTR [edx],esp
  417966:	je     0x4179a1
  417968:	pminub mm0,QWORD PTR [edx-0x1f]
  41796c:	push   0x4
  41796e:	push   0x64c543fa
  417973:	hlt    
  417974:	push   eax
  417975:	shl    DWORD PTR [eax+esi*8-0x42],1
  417979:	lods   al,BYTE PTR ds:[esi]
  41797a:	push   ss
  41797b:	cmc    
  41797c:	inc    edi
  41797d:	jne    0x41796c
  41797f:	push   edx
  417980:	repnz add eax,0x1828987c
  417986:	shl    DWORD PTR [eax+0x21],1
  417989:	pop    edx
  41798a:	or     DWORD PTR [esi+0x207b0cf0],edi
  417990:	sbb    al,0x89
  417992:	mov    ecx,DWORD PTR [eax+ebx*2-0x7b5c7c7]
  417999:	adc    eax,0x6695860f
  41799e:	push   cs
  41799f:	cld    
  4179a0:	mov    ecx,DWORD PTR [ebp+0x67]
  4179a3:	add    eax,ecx
  4179a5:	push   eax
  4179a6:	dec    eax
  4179a7:	add    al,0x3b
  4179a9:	dec    ebx
  4179aa:	add    DWORD PTR [eax],edx
  4179ac:	jne    0x417a1e
  4179ae:	cmp    BYTE PTR [eax+0x8],0x6
  4179b2:	fldcw  WORD PTR [edx+0x21]
  4179b5:	jo     0x417a1b
  4179b7:	enter  0x374d,0xe4
  4179bb:	push   ecx
  4179bc:	cmp    al,0x40
  4179be:	movzx  eax,WORD PTR [eax+0xa]
  4179c2:	dec    DWORD PTR [eax-0x2c]
  4179c5:	loopne 0x417991
  4179c7:	jle    0x4179e9
  4179c9:	jg     0x417988
  4179cb:	sub    BYTE PTR [ebx+0x53],cl
  4179ce:	xor    ebp,DWORD PTR [edx+0x1c]
  4179d1:	or     al,0xa4
  4179d3:	fs hlt 
  4179d5:	xor    ah,ah
  4179d7:	or     BYTE PTR [eax*8+0x39598033],ah
  4179de:	jge    0x4179cc
  4179e0:	add    al,0x76
  4179e2:	sub    DWORD PTR [ebx+0xf899db4],ecx
  4179e8:	lock jne 0x417997
  4179eb:	in     al,0x17
  4179ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179ee:	and    DWORD PTR [esi+0x28],eax
  4179f1:	xor    DWORD PTR [ecx],ecx
  4179f3:	(bad)  
  4179f4:	call   0x7f461e4f
  4179f9:	add    BYTE PTR [ebx+0x3b],0x5d
  4179fd:	in     al,dx
  4179fe:	jb     0x4179d7
  417a00:	call   edi
  417a02:	(bad)  
  417a03:	mov    ecx,0xb7919008
  417a08:	xor    BYTE PTR [ebx+eax*4-0x7b],ah
  417a0c:	aam    0xb
  417a0e:	push   ds
  417a0f:	or     dh,al
  417a11:	mov    al,0x89
  417a13:	ins    DWORD PTR es:[edi],dx
  417a14:	sub    al,0x14
  417a16:	or     dl,ah
  417a18:	or     cl,0xca
  417a1b:	cmp    al,0xf
  417a1d:	lea    edx,[ecx+ebx*8]
  417a20:	mov    bh,0x68
  417a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a23:	lods   eax,DWORD PTR ds:[esi]
  417a24:	or     ecx,ebp
  417a26:	push   ds
  417a27:	sub    ebp,DWORD PTR [edi-0x70]
  417a2a:	mov    esi,0x269a5358
  417a2f:	push   0x33
  417a31:	out    0xdb,al
  417a33:	push   0x5b
  417a35:	push   cs
  417a36:	dec    edx
  417a37:	add    DWORD PTR [edx],edx
  417a39:	sub    BYTE PTR [esi+0x3f],ch
  417a3c:	aam    0x17
  417a3e:	data16 and ah,bl
  417a41:	out    0x12,eax
  417a43:	les    edx,FWORD PTR [eax*2-0x4ecd091c]
  417a4a:	pusha  
  417a4b:	int3   
  417a4c:	and    esp,DWORD PTR [ebx+0x32]
  417a4f:	fadd   DWORD PTR [esi]
  417a51:	loopne 0x417a9a
  417a53:	data16 es stos BYTE PTR es:[edi],al
  417a56:	retf   0x5167
  417a59:	cld    
  417a5a:	or     al,bh
  417a5c:	test   DWORD PTR [edi],edi
  417a5e:	inc    ecx
  417a5f:	repnz ds inc edx
  417a62:	cld    
  417a63:	and    eax,edi
  417a65:	iret   
  417a66:	jo     0x4179f0
  417a68:	call   0xed0a0c7d
  417a6d:	cmp    edx,eax
  417a6f:	enter  0x646d,0x67
  417a73:	(bad)  
  417a74:	hlt    
  417a75:	cs nop
  417a77:	mov    dl,0xe4
  417a79:	push   ss
  417a7a:	push   0x48
  417a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a7d:	addr16 fs test al,0x22
  417a81:	hlt    
  417a82:	push   ss
  417a83:	push   esi
  417a84:	xor    dh,ah
  417a86:	push   esp
  417a87:	call   0x8d669902
  417a8c:	jae    0x417a7f
  417a8e:	shl    BYTE PTR [eax+0xa98943b],cl
  417a94:	and    ecx,DWORD PTR [eax+0x50c9bc0c]
  417a9a:	imul   eax,DWORD PTR [esi],0x4a3bdaa7
  417aa0:	sub    BYTE PTR [edx+esi*2],cl
  417aa3:	fisub  WORD PTR [edx]
  417aa5:	call   0x7c67732b
  417aaa:	inc    edx
  417aab:	fs in  al,dx
  417aad:	sbb    DWORD PTR [ecx+0xc],esi
  417ab0:	in     al,0x8d
  417ab2:	xchg   ecx,eax
  417ab3:	cld    
  417ab4:	and    bh,al
  417ab6:	icebp  
  417ab7:	pop    ds
  417ab8:	and    eax,0x5f2c485e
  417abd:	pop    ebx
  417abe:	pushf  
  417abf:	rcl    BYTE PTR es:[eax],0x53
  417ac3:	push   0xa
  417ac5:	leave  
  417ac6:	je     0x417ad0
  417ac8:	inc    ebx
  417ac9:	inc    edx
  417aca:	xor    DWORD PTR [eax-0x5c],eax
  417acd:	dec    edi
  417ace:	cmp    eax,ebx
  417ad0:	fs push ecx
  417ad2:	jne    0x417b36
  417ad4:	pop    es
  417ad5:	inc    esp
  417ad6:	jmp    0x646ebedc
  417adb:	push   eax
  417adc:	das    
  417add:	mov    al,ds:0x3b2e0456
  417ae2:	repz xchg ebx,eax
  417ae4:	and    al,0x74
  417ae6:	jmp    0xf427:0x309c0556
  417aed:	jne    0x417afd
  417aef:	retf   
  417af0:	sbb    eax,0xe9961898
  417af5:	shl    BYTE PTR [ecx+0xc750bed],cl
  417afb:	into   
  417afc:	jb     0x417b28
  417afe:	je     0x417b09
  417b00:	or     eax,0x67574444
  417b05:	push   ebx
  417b06:	mov    BYTE PTR [edx],0x4b
  417b09:	int3   
  417b0a:	pusha  
  417b0b:	mov    DWORD PTR [esi],edx
  417b0d:	pop    eax
  417b0e:	adc    BYTE PTR [ebx-0x4b7c408],cl
  417b14:	int3   
  417b15:	xor    eax,0xaf87298c
  417b1a:	sbb    eax,0x3fa6d612
  417b1f:	clc    
  417b20:	fld    QWORD PTR [esp+edx*4+0x50]
  417b24:	stos   BYTE PTR es:[edi],al
  417b25:	test   BYTE PTR [ecx-0x5a],ah
  417b28:	stc    
  417b29:	dec    eax
  417b2a:	aam    0x14
  417b2c:	aam    0xf4
  417b2e:	test   DWORD PTR [ebp-0x5b17e1f4],edx
  417b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b35:	dec    esp
  417b36:	lods   eax,DWORD PTR ds:[esi]
  417b37:	(bad)  
  417b38:	sbb    DWORD PTR [eax+0x3db56574],ebx
  417b3e:	pop    ecx
  417b3f:	aam    0x17
  417b41:	bound  eax,QWORD PTR [ecx+0x1390cc57]
  417b47:	jmp    0x417b95
  417b49:	push   ebx
  417b4a:	es pop eax
  417b4c:	popa   
  417b4d:	gs push esi
  417b4f:	and    eax,0xa08a3790
  417b54:	je     0x417b29
  417b56:	call   0x526f1fe3
  417b5b:	adc    BYTE PTR [ebx],al
  417b5d:	das    
  417b5e:	push   edi
  417b5f:	sbb    cl,dl
  417b61:	cmp    al,0x3d
  417b63:	mov    eax,0x140f642b
  417b68:	mov    WORD PTR [eax-0x2a],ss
  417b6b:	mov    ch,0x8d
  417b6d:	ins    BYTE PTR es:[edi],dx
  417b6e:	clc    
  417b6f:	push   0xb86dba84
  417b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b75:	and    BYTE PTR [eax],dl
  417b77:	repnz cmp eax,DWORD PTR [ebx-0x76da8f9a]
  417b7e:	push   es
  417b7f:	push   es
  417b80:	inc    edi
  417b81:	js     0x417bac
  417b83:	push   ss
  417b84:	call   0xf1886d87
  417b89:	inc    esi
  417b8a:	adc    al,0x1f
  417b8c:	inc    edx
  417b8d:	fs and ch,bh
  417b90:	and    al,0x83
  417b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b93:	mov    ds:0x8b59034e,eax
  417b98:	into   
  417b99:	or     esi,DWORD PTR [edx]
  417b9b:	sbb    al,ch
  417b9d:	or     DWORD PTR [ecx-0x33],0xd31c4250
  417ba4:	sub    eax,DWORD PTR [ecx-0x2d]
  417ba7:	inc    esp
  417ba8:	inc    edx
  417ba9:	or     al,0xc7
  417bab:	sbb    esp,DWORD PTR [edx+ecx*8]
  417bae:	lods   al,BYTE PTR ds:[esi]
  417baf:	xchg   edi,eax
  417bb0:	(bad)  
  417bb1:	test   al,0xf
  417bb3:	les    ebx,FWORD PTR [edx+0xc]
  417bb6:	pop    esi
  417bb7:	lods   al,BYTE PTR ds:[esi]
  417bb8:	mov    esi,0xda5356a3
  417bbd:	xor    BYTE PTR [eax],0x99
  417bc0:	xchg   ebx,eax
  417bc1:	push   DWORD PTR [esi+0x4]
  417bc4:	xchg   ecx,eax
  417bc5:	push   esp
  417bc6:	inc    edx
  417bc7:	jne    0x417be4
  417bc9:	fld    DWORD PTR [ebx+0x4f37932f]
  417bcf:	das    
  417bd0:	or     esi,esi
  417bd2:	cmp    bl,BYTE PTR [ebx-0x5a]
  417bd5:	mov    esi,DWORD PTR [ecx+edx*8+0xd]
  417bd9:	das    
  417bda:	cmp    BYTE PTR es:[ebx],bh
  417bdd:	jp     0x417b85
  417bdf:	fptan  
  417be1:	lea    esi,[eax+0x7c]
  417be4:	mov    esi,0x6c1b26d4
  417be9:	sub    BYTE PTR [eax+ecx*4-0x7cd12775],bh
  417bf0:	sti    
  417bf1:	fst    QWORD PTR [ebx]
  417bf3:	sub    al,0x27
  417bf5:	cld    
  417bf6:	call   0xa579d315
  417bfb:	push   0xffffffb8
  417bfd:	push   esp
  417bfe:	push   esi
  417bff:	imul   esp,DWORD PTR ds:0xc1194208,0x32
  417c06:	push   ecx
  417c07:	inc    ebp
  417c08:	inc    ecx
  417c09:	and    ch,bh
  417c0b:	mov    ah,0x91
  417c0d:	ins    DWORD PTR es:[edi],dx
  417c0e:	add    al,0x40
  417c10:	sub    ebx,0xc6b83319
  417c16:	jecxz  0x417bcb
  417c18:	lahf   
  417c19:	xor    al,0xc
  417c1b:	lds    ecx,FWORD PTR [ebx]
  417c1d:	sbb    esi,DWORD PTR [eax+0xf263846]
  417c23:	xchg   ebp,eax
  417c24:	inc    eax
  417c25:	mov    DWORD PTR [esi-0x37],ebx
  417c28:	bound  ebx,QWORD PTR [edi-0x1c]
  417c2b:	fsub   DWORD PTR [ebx]
  417c2d:	sub    BYTE PTR [ecx],al
  417c2f:	adc    bl,bl
  417c31:	push   ebp
  417c32:	call   0x69d9a15e
  417c37:	push   ds
  417c38:	clc    
  417c39:	and    eax,0x70c405d6
  417c3e:	inc    edx
  417c3f:	lea    eax,[ebp-0x72b96b28]
  417c45:	push   edi
  417c46:	(bad)  
  417c47:	adc    BYTE PTR [edi-0x27],dh
  417c4a:	adc    BYTE PTR [ebp+0x6],ch
  417c4d:	leave  
  417c4e:	or     edi,DWORD PTR [eax]
  417c50:	jl     0x417bdc
  417c52:	ret    
  417c53:	xor    ch,bl
  417c55:	aad    0x4c
  417c57:	cld    
  417c58:	adc    dl,BYTE PTR [eax-0x31]
  417c5b:	and    esi,edx
  417c5d:	mul    BYTE PTR ds:0xe0b58a03
  417c63:	push   eax
  417c64:	sub    DWORD PTR [eax+ebp*8+0x68],ecx
  417c68:	loope  0x417c79
  417c6a:	inc    edi
  417c6b:	iret   
  417c6c:	stos   BYTE PTR es:[edi],al
  417c6d:	sub    bh,BYTE PTR ds:0x41b3ce42
  417c73:	mov    dl,0xbf
  417c75:	and    eax,0x470ec92c
  417c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c7b:	lock leave 
  417c7d:	je     0x417c89
  417c7f:	push   ecx
  417c80:	mov    dl,0x2e
  417c82:	test   BYTE PTR [ecx+0x4b912670],ah
  417c88:	mov    bh,0x35
  417c8a:	mov    bh,0x3e
  417c8c:	or     DWORD PTR [eax-0x78],esi
  417c8f:	cmp    dl,dh
  417c91:	add    eax,DWORD PTR [eax+0x35]
  417c94:	nop
  417c95:	pop    ecx
  417c96:	pusha  
  417c97:	or     al,0x1a
  417c99:	add    eax,0xf6580d6a
  417c9e:	sub    al,cl
  417ca0:	push   ss
  417ca1:	adc    BYTE PTR [ecx],al
  417ca3:	je     0x417cab
  417ca5:	test   BYTE PTR ds:0xccef7502,cl
  417cab:	xchg   ecx,eax
  417cac:	les    ecx,FWORD PTR [ebx+0xb895092]
  417cb2:	add    eax,0x9ab26a1e
  417cb7:	cs ss xor eax,0x5d5e2bb0
  417cbe:	ret    0x6cd5
  417cc1:	xchg   edi,eax
  417cc2:	mov    ah,0x22
  417cc4:	dec    esi
  417cc5:	sub    eax,0xa8492e54
  417cca:	arpl   WORD PTR [ecx],si
  417ccc:	ins    DWORD PTR es:[edi],dx
  417ccd:	jae    0x417d21
  417ccf:	jge    0x417cd5
  417cd1:	dec    esp
  417cd2:	cmp    dl,BYTE PTR [ebp+0x10]
  417cd5:	mov    al,0x6d
  417cd7:	ins    BYTE PTR es:[edi],dx
  417cd8:	fs pop ss
  417cda:	add    eax,0x49898ba0
  417cdf:	push   cs
  417ce0:	sub    ebp,DWORD PTR [ecx-0x74]
  417ce3:	jp     0x417ca7
  417ce5:	mov    al,0x2d
  417ce7:	cmp    edi,DWORD PTR [ecx*4+0x4c0e01b2]
  417cee:	jo     0x417cbd
  417cf0:	out    dx,eax
  417cf1:	or     BYTE PTR ds:0x14c0830c,0xa1
  417cf8:	or     DWORD PTR [eax],edx
  417cfa:	add    eax,0x7b5472e0
  417cff:	mov    cl,0x94
  417d01:	dec    ecx
  417d02:	jmp    0x256bd4ea
  417d07:	pop    edi
  417d08:	leave  
  417d09:	sub    esi,DWORD PTR [ecx]
  417d0b:	(bad)  
  417d0c:	and    cl,dh
  417d0e:	mov    esp,0x8e8ba5cb
  417d13:	push   edi
  417d14:	xchg   WORD PTR [eax-0x370a55ab],cx
  417d1b:	rol    BYTE PTR [eax+eax*4-0x73be828],1
  417d22:	xor    edi,DWORD PTR ds:0x518e42d2
  417d28:	adc    dh,BYTE PTR [ebp+0x2a]
  417d2b:	(bad)  
  417d2c:	inc    DWORD PTR [ecx+ecx*4]
  417d2f:	push   ebp
  417d30:	hlt    
  417d31:	or     BYTE PTR ds:0x49bc939,0xd6
  417d38:	and    ebx,0x3a518d64
  417d3e:	dec    esi
  417d3f:	(bad)  
  417d40:	mov    ebx,edi
  417d42:	ins    BYTE PTR es:[edi],dx
  417d43:	lods   eax,DWORD PTR ds:[esi]
  417d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d45:	push   ebx
  417d46:	mov    edi,0xd19842b9
  417d4b:	call   0x5cb66d60
  417d50:	ds ds cs cld 
  417d54:	mov    al,ds:0x66871524
  417d59:	and    ebx,0xfb0af90f
  417d5f:	xor    DWORD PTR ds:0x222a5d21,edx
  417d65:	push   ecx
  417d66:	add    eax,DWORD PTR [edi+0x2bc31c8e]
  417d6c:	pop    edi
  417d6d:	mov    al,ds:0x350c5d3b
  417d72:	jne    0x417d7d
  417d74:	xor    al,BYTE PTR [eax+0x5c7fe39]
  417d7a:	and    eax,0xd4121374
  417d7f:	call   0xc07c8055
  417d84:	jl     0x417df8
  417d86:	ret    0xca03
  417d89:	jmp    0x417ddb
  417d8b:	call   0x472b:0x40b30cf
  417d92:	sbb    al,0x8d
  417d94:	dec    esp
  417d95:	fidivr WORD PTR [ecx+0x5]
  417d98:	sar    BYTE PTR [ecx+0x4d02182d],1
  417d9e:	sbb    al,0x31
  417da0:	sub    bl,BYTE PTR [ebx]
  417da2:	mov    bh,0xd0
  417da4:	cmp    bh,BYTE PTR [ecx+0x19720d49]
  417daa:	fdiv   DWORD PTR [ebx]
  417dac:	push   eax
  417dae:	or     edx,DWORD PTR [eax+eiz*2+0x303d9339]
  417db5:	and    edi,DWORD PTR [esi+edx*8+0x92395bd]
  417dbc:	sbb    eax,0x6a8eba2e
  417dc1:	scas   eax,DWORD PTR es:[edi]
  417dc2:	dec    ecx
  417dc3:	pop    es
  417dc4:	aam    0x11
  417dc6:	cmp    eax,edi
  417dc8:	mov    edi,0x860d2c6d
  417dcd:	int3   
  417dce:	mov    dl,0xe9
  417dd0:	push   esp
  417dd1:	mov    ecx,0x3fd957e0
  417dd6:	mov    WORD PTR [ebx],cs
  417dd8:	mov    bh,0x6a
  417dda:	cmp    dl,BYTE PTR [ebp+0x44b854ec]
  417de0:	add    eax,0xf04d890c
  417de5:	sbb    eax,0xb11ed2be
  417dea:	cmovno ecx,DWORD PTR [ebp+0x20]
  417dee:	push   edi
  417def:	fs inc edx
  417df1:	sar    BYTE PTR [ebx+0x74f705a2],1
  417df7:	retf   
  417df8:	int3   
  417df9:	cld    
  417dfa:	push   edi
  417dfb:	mov    cl,0xdb
  417dfd:	xchg   ecx,eax
  417dfe:	int3   
  417dff:	jg     0x417e59
  417e01:	cwde   
  417e02:	jo     0x417d88
  417e04:	push   edi
  417e05:	out    dx,al
  417e06:	and    dl,BYTE PTR [esi-0x34]
  417e09:	push   0xffffffc1
  417e0b:	mov    ?,WORD PTR [ebp+eiz*4+0x2b]
  417e0f:	(bad)  
  417e10:	and    al,0x51
  417e12:	xchg   ecx,eax
  417e13:	inc    esp
  417e14:	(bad)  
  417e15:	sar    dh,1
  417e17:	xlat   BYTE PTR ds:[ebx]
  417e18:	mov    ah,0x37
  417e1a:	adc    al,0x94
  417e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e1d:	and    al,0xec
  417e1f:	imul   esp,esp,0xffffffe8
  417e22:	dec    edx
  417e23:	push   ecx
  417e24:	sbb    bl,BYTE PTR [edi]
  417e26:	dec    ebp
  417e27:	mov    es,WORD PTR [ebx]
  417e29:	(bad)  
  417e2a:	mov    eax,ds:0x1c412b02
  417e2f:	and    al,0x6c
  417e31:	cmp    ebp,esp
  417e33:	cmp    BYTE PTR [edx],dl
  417e35:	jae    0x417e5d
  417e37:	push   ebx
  417e38:	push   cs
  417e39:	jle    0x417e2b
  417e3b:	push   0x1d
  417e3d:	rol    DWORD PTR [ebx+0x3],0xc7
  417e41:	push   eax
  417e42:	push   ss
  417e43:	pop    ecx
  417e44:	add    al,0x2c
  417e46:	lahf   
  417e47:	add    DWORD PTR [edx],0xa
  417e4a:	inc    DWORD PTR ds:0xc3282211
  417e50:	dec    ebx
  417e51:	jb     0x417e2f
  417e53:	pop    ebx
  417e54:	das    
  417e55:	int    0xc8
  417e57:	call   0x2720:0x2689f3d5
  417e5e:	lods   al,BYTE PTR ds:[esi]
  417e5f:	or     DWORD PTR [eax+ebp*1],ebp
  417e62:	mov    cl,BYTE PTR [edx-0x7bd439d]
  417e68:	add    eax,0x4184ca63
  417e6d:	jb     0x417e76
  417e6f:	push   0xeb9f53c8
  417e74:	push   DWORD PTR [edi-0x44]
  417e77:	jnp    0x417e12
  417e79:	or     DWORD PTR [edi+eiz*2],ebp
  417e7c:	mov    ebp,0x21bf1e45
  417e81:	aad    0x49
  417e83:	popa   
  417e84:	xor    eax,0x786ae748
  417e89:	add    esi,ebx
  417e8b:	sub    DWORD PTR [edx+0x7f],eax
  417e8e:	scas   al,BYTE PTR es:[edi]
  417e8f:	push   ds
  417e90:	pop    ecx
  417e91:	xor    al,0x8d
  417e93:	test   BYTE PTR [ebp+0xa],dh
  417e96:	mov    ch,BYTE PTR [edi]
  417e98:	push   0x1c28b5de
  417e9d:	push   0x6279f701
  417ea2:	push   esp
  417ea3:	or     BYTE PTR [ecx+0x8],bl
  417ea6:	mov    WORD PTR [eax-0x20],gs
  417ea9:	shr    eax,0x2c
  417eac:	jo     0x417ead
  417eae:	push   esi
  417eaf:	in     eax,0x2
  417eb1:	rcl    esp,cl
  417eb3:	push   0x50
  417eb5:	xor    edx,DWORD PTR [edi-0x48]
  417eb8:	imul   ecx,DWORD PTR [ebp+eax*2+0x50],0xf7ac200d
  417ec0:	jle    0x417f13
  417ec2:	fwait
  417ec3:	(bad)  
  417ec4:	test   eax,0x8d24123c
  417ec9:	and    BYTE PTR [esp+edx*2-0x1a],al
  417ecd:	call   0x490e44fb
  417ed2:	mov    ecx,DWORD PTR [ecx+0x10]
  417ed5:	popf   
  417ed6:	mov    al,BYTE PTR [esi]
  417ed8:	pop    esp
  417ed9:	mov    BYTE PTR [eax],bh
  417edb:	inc    ebx
  417edc:	cdq    
  417edd:	outs   dx,BYTE PTR ds:[esi]
  417ede:	nop
  417edf:	rcr    BYTE PTR [edi+0x37],cl
  417ee2:	cmp    bh,BYTE PTR [esi+eax*8]
  417ee5:	sbb    DWORD PTR [ecx],ecx
  417ee7:	cmp    cl,BYTE PTR [eax]
  417ee9:	or     dl,BYTE PTR [edx-0x16]
  417eec:	and    BYTE PTR [ecx+0x2],bl
  417eef:	(bad)  
  417ef0:	push   ds
  417ef1:	and    ebp,0x2
  417ef4:	push   esi
  417ef5:	push   es
  417ef6:	push   ds
  417ef7:	push   0x1c94fef4
  417efc:	gs in  al,0x35
  417eff:	test   al,0x5d
  417f01:	push   ecx
  417f02:	out    0x38,al
  417f04:	dec    eax
  417f05:	push   esp
  417f06:	ret    0x950
  417f09:	add    eax,0x48a2468
  417f0e:	(bad)  [eax+0x99b10f6]
  417f14:	push   eax
  417f15:	call   0x8a74a05c
  417f1a:	inc    ebp
  417f1b:	adc    BYTE PTR [esi+0x79410c54],dl
  417f21:	add    DWORD PTR [eax-0xcab057b],ecx
  417f27:	lock int 0x45
  417f2a:	mov    ds:0xd0f8dadf,eax
  417f2f:	fdiv   QWORD PTR [edx]
  417f31:	jmp    0x417f76
  417f33:	das    
  417f34:	add    ch,BYTE PTR [ecx+0x1fa50088]
  417f3a:	cmp    BYTE PTR [esi+0x1],0x78
  417f3e:	cmp    bl,BYTE PTR [ebp+0x19]
  417f41:	cmp    eax,0x748c84d3
  417f46:	out    0xc1,al
  417f48:	loopne 0x417ed7
  417f4a:	mov    ch,0x43
  417f4c:	adc    ebp,DWORD PTR [eax-0x5c]
  417f4f:	in     al,dx
  417f50:	cmc    
  417f51:	sahf   
  417f52:	loope  0x417f73
  417f54:	push   0xffffffea
  417f56:	clc    
  417f57:	mov    ah,0xea
  417f59:	xchg   ecx,eax
  417f5a:	je     0x417f8d
  417f5c:	pop    esi
  417f5d:	pushf  
  417f5e:	or     BYTE PTR [eax-0x1b],cl
  417f61:	sub    BYTE PTR [eax+0x14201e06],dl
  417f67:	jl     0x417f73
  417f69:	add    dh,BYTE PTR [ebp+0x23]
  417f6c:	mov    eax,0x4122c018
  417f71:	(bad)  
  417f72:	pop    ds
  417f73:	(bad)  
  417f75:	pop    ds
  417f76:	pop    es
  417f77:	aas    
  417f78:	and    DWORD PTR [eax],edx
  417f7a:	pop    ds
  417f7b:	adc    DWORD PTR [eax-0x37f570f4],edx
  417f81:	or     BYTE PTR [esi+0x3],al
  417f84:	imul   esp,DWORD PTR [eax-0x7b094fd1],0xffffffb0
  417f8b:	jmp    0xc58a6346
  417f90:	loop   0x417fde
  417f92:	or     BYTE PTR [esi],dl
  417f94:	and    esi,DWORD PTR [edi+esi*8+0x28f57d1a]
  417f9b:	ret    0xee82
  417f9e:	sbb    eax,0x8762aae1
  417fa3:	test   BYTE PTR [ecx],ah
  417fa5:	sub    al,0x28
  417fa7:	and    DWORD PTR [eax-0x58b61788],eax
  417fad:	dec    edi
  417fae:	sbb    BYTE PTR [ecx+ebp*2],dl
  417fb1:	push   esi
  417fb2:	push   edi
  417fb3:	sbb    DWORD PTR [esi-0x42b4cc5c],edi
  417fb9:	sti    
  417fba:	cmp    eax,0x68a6a535
  417fbf:	cmp    eax,0x85f6604b
  417fc4:	icebp  
  417fc5:	leave  
  417fc6:	pop    ds
  417fc7:	push   edi
  417fc8:	loopne 0x417fb9
  417fca:	clc    
  417fcb:	add    DWORD PTR [eax+0xcd217e8],ecx
  417fd1:	bound  esi,QWORD PTR ds:0x6ef913ec
  417fd7:	repnz cmp BYTE PTR ds:0x51dcf794,ah
  417fde:	xor    edx,DWORD PTR [ebx]
  417fe0:	pop    edx
  417fe1:	jmp    0x417f85
  417fe3:	dec    esp
  417fe4:	fwait
  417fe5:	jmp    0x2eac:0x76a2d885
  417fec:	and    BYTE PTR [edi-0x4e4c670f],dl
  417ff2:	jmp    0x4c15:0x53ff591c
  417ff9:	push   edi
  417ffa:	add    al,0x57
  417ffc:	push   0x20e3335c
  418001:	ds (bad) 
  418003:	lods   al,BYTE PTR ds:[esi]
  418004:	add    al,0xc5
  418006:	int3   
  418007:	es push esp
  418009:	test   DWORD PTR ds:0x469cd0b,esi
  41800f:	int    0x84
  418011:	xchg   ecx,eax
  418012:	add    al,0x62
  418014:	clc    
  418015:	jmp    0xc082:0xf5b17627
  41801c:	jns    0x417ff7
  41801e:	xor    al,BYTE PTR [eax+0x14]
  418021:	jmp    0xf710:0x100a1106
  418028:	fcomp  DWORD PTR [ebx]
  41802a:	jbe    0x417fec
  41802c:	mov    ebx,0xe92f292b
  418031:	cli    
  418032:	or     DWORD PTR [ecx+0xf],0x8b592af
  418039:	mov    ah,0x34
  41803b:	and    esp,ebx
  41803d:	xor    edx,DWORD PTR [edi+0x49]
  418040:	into   
  418041:	xor    al,0x14
  418043:	push   cs
  418044:	and    bh,BYTE PTR [eax+0x789418c9]
  41804a:	retf   0xfeb1
  41804d:	test   DWORD PTR [ebp+ecx*8-0x5f],esi
  418051:	mov    DWORD PTR [ebx+0x25],edi
  418054:	adc    DWORD PTR [eax+0x7e],ebp
  418057:	push   edx
  418058:	dec    ecx
  418059:	mov    BYTE PTR [esi+ecx*2],al
  41805c:	or     ch,bh
  41805e:	(bad)  
  41805f:	int3   
  418060:	jae    0x418087
  418062:	xor    al,0x62
  418064:	sti    
  418065:	or     al,0x80
  418067:	xor    BYTE PTR [ecx],dl
  418069:	test   BYTE PTR [eax+ecx*4],cl
  41806c:	mov    dl,BYTE PTR ds:0x1c5c5f01
  418072:	lea    edi,[edx]
  418074:	inc    eax
  418075:	sbb    DWORD PTR [ebp+0x9],edi
  418078:	imul   edx,DWORD PTR [edx],0x5d
  41807b:	and    al,0x49
  41807d:	dec    eax
  41807e:	xor    DWORD PTR [ecx+0x7dd14b19],edx
  418084:	cmp    DWORD PTR gs:[ecx+0x45095310],ebx
  41808b:	pop    ss
  41808c:	mov    eax,0x1f222d91
  418091:	and    BYTE PTR [ebp+0x36],dh
  418094:	inc    esp
  418095:	mov    ebx,DWORD PTR [ebx-0x48ed5677]
  41809b:	and    al,0xc5
  41809d:	dec    eax
  41809e:	fst    QWORD PTR [ecx+0x36fb22ed]
  4180a4:	or     DWORD PTR [edi],esi
  4180a6:	pop    ecx
  4180a7:	or     DWORD PTR [ebp+0x2b],eax
  4180aa:	out    dx,al
  4180ab:	and    al,0x49
  4180ad:	dec    eax
  4180ae:	push   ebp
  4180af:	xchg   ecx,eax
  4180b0:	imul   esp,DWORD PTR [edx],0xffffff81
  4180b3:	inc    esp
  4180b4:	xchg   edi,eax
  4180b5:	stos   DWORD PTR es:[edi],eax
  4180b6:	mov    DWORD PTR [ebx-0x16db32ee],edi
  4180bc:	dec    eax
  4180bd:	stc    
  4180be:	mov    BYTE PTR ds:0x22171138,al
  4180c4:	daa    
  4180c5:	call   DWORD PTR [edx]
  4180c7:	inc    edi
  4180c8:	and    al,0x57
  4180ca:	dec    eax
  4180cb:	imul   edx,DWORD PTR [ecx+0x4493227d],0xc989bba9
  4180d5:	adc    dl,ch
  4180d7:	and    al,0xe1
  4180d9:	dec    eax
  4180da:	out    dx,eax
  4180db:	xchg   ecx,eax
  4180dc:	std    
  4180dd:	adc    al,0xf
  4180df:	cmp    DWORD PTR [edx+eax*8-0x6ec9a881],edi
  4180e6:	or     BYTE PTR [ecx],al
  4180e8:	push   ebx
  4180e9:	int3   
  4180ea:	repz xor ch,BYTE PTR [ecx]
  4180ed:	fisttp WORD PTR [ecx]
  4180ef:	test   DWORD PTR [edx*4-0x466e58b8],esp
  4180f6:	sub    ebx,ecx
  4180f8:	sub    al,0x91
  4180fa:	add    esi,DWORD PTR [edx]
  4180fc:	adc    ecx,DWORD PTR [ecx]
  4180fe:	and    eax,0xe94e3524
  418103:	mov    al,0x22
  418105:	int    0x44
  418107:	mov    ecx,0x128b899d
  41810c:	and    DWORD PTR [ebx+ebp*2],0x34a06148
  418113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418114:	inc    esp
  418115:	add    BYTE PTR [esi+0x30],al
  418118:	push   ebp
  418119:	push   0x4a074556
  41811e:	gs jno 0x418197
  418121:	inc    edx
  418122:	mov    ds:0x6caa6769,eax
  418127:	mov    al,ds:0x6e414514
  41812c:	pop    eax
  41812d:	jbe    0x418184
  41812f:	or     BYTE PTR [edx+0x39],cl
  418132:	jno    0x4181ac
  418134:	pop    eax
  418135:	dec    esi
  418136:	inc    ebp
  418137:	jp     0x418186
  418139:	cmp    DWORD PTR [esi+0x47],edx
  41813c:	pop    es
  41813d:	arpl   WORD PTR [ecx+0x65],si
  418140:	xor    al,0xf
  418142:	dec    edi
  418143:	xor    al,BYTE PTR [ecx+0x7048624a]
  418149:	in     al,0x6c
  41814b:	cmp    DWORD PTR [eax],eax
  41814d:	jae    0x418196
  41814f:	outs   dx,DWORD PTR ds:[esi]
  418150:	ja     0x418189
  418152:	jno    0x4181a0
  418154:	push   ecx
  418155:	in     al,dx
  418156:	data16 cmp BYTE PTR [esi+0x56],dh
  41815a:	add    BYTE PTR [ebx+0x30],0x59
  41815e:	arpl   WORD PTR [esi+0x46],bp
  418161:	ins    DWORD PTR es:[edi],dx
  418162:	andnps xmm7,XMMWORD PTR [edx+0x33]
  418166:	jb     0x418148
  418168:	fs push 0x73
  41816b:	ins    BYTE PTR es:[edi],dx
  41816c:	inc    esp
  41816d:	add    DWORD PTR [esi+0x70],ecx
  418170:	imul   edx,DWORD PTR [ecx+0x49],0x31
  418174:	push   ebp
  418175:	aam    0x46
  418177:	push   esp
  418178:	add    BYTE PTR [ecx+0x63],bh
  41817b:	dec    eax
  41817c:	push   edx
  41817d:	aaa    
  41817e:	je     0x4181e7
  418180:	pop    edx
  418181:	sub    BYTE PTR [ecx],bh
  418183:	das    
  418184:	dec    esp
  418185:	(bad)  
  418186:	outs   dx,DWORD PTR ds:[esi]
  418187:	loop   0x4181f5
  418189:	cmp    DWORD PTR [eax+0x65],ecx
  41818c:	mov    WORD PTR [eax+0x33],?
  41818f:	xor    bl,BYTE PTR [eax]
  418191:	inc    ecx
  418192:	cmp    esi,DWORD PTR [ecx]
  418194:	xor    al,0x1f
  418196:	push   ebx
  418197:	inc    esi
  418198:	shl    BYTE PTR [esp+esi*2+0x2b],0x68
  41819d:	xor    BYTE PTR [esi-0x36],ch
  4181a0:	dec    eax
  4181a1:	adc    BYTE PTR ss:[esi+0x7a],0x68
  4181a6:	test   eax,0x51e94534
  4181ab:	cli    
  4181ac:	mov    gs,WORD PTR [eax+0x37394bc0]
  4181b2:	inc    ecx
  4181b3:	sub    esi,DWORD PTR [ecx+0x67]
  4181b6:	jo     0x41822b
  4181b8:	inc    esp
  4181b9:	pop    esp
  4181ba:	dec    ebp
  4181bb:	add    BYTE PTR [ecx+0x57],bl
  4181be:	dec    esi
  4181bf:	inc    esp
  4181c0:	inc    ebx
  4181c1:	dec    esp
  4181c2:	push   ebx
  4181c3:	xor    dl,ah
  4181c5:	aaa    
  4181c6:	out    0x40,eax
  4181c8:	and    al,0x41
  4181ca:	js     0x418225
  4181cc:	sbb    al,0x54
  4181ce:	push   esi
  4181cf:	ins    BYTE PTR es:[edi],dx
  4181d0:	jns    0x41815e
  4181d2:	outs   dx,DWORD PTR ds:[esi]
  4181d3:	gs ja  0x41820e
  4181d6:	xor    BYTE PTR [ebx],dh
  4181d8:	imul   ecx,DWORD PTR [eax+ecx*4+0x39],0xffffffbf
  4181dd:	ret    
  4181de:	jae    0x418214
  4181e0:	clc    
  4181e1:	push   0x67794878
  4181e6:	push   cs
  4181e7:	ja     0x41822a
  4181e9:	dec    esp
  4181ea:	je     0x418180
  4181ec:	jo     0x4181fa
  4181ee:	cmp    BYTE PTR [ecx],bh
  4181f0:	push   ebx
  4181f1:	call   0x4fb0974e
  4181f6:	pop    ecx
  4181f7:	pop    eax
  4181f8:	xor    DWORD PTR [ebx+0x50],ecx
  4181fb:	cmp    DWORD PTR [esi-0x32],edx
  4181fe:	inc    ebx
  4181ff:	add    esp,DWORD PTR [ebp-0x28]
  418202:	cmp    cl,BYTE PTR [eax+eax*1-0x1c]
  418206:	jne    0x418260
  418208:	inc    edi
  418209:	inc    esi
  41820a:	push   ecx
  41820b:	sub    BYTE PTR [eax+0x2b],dh
  41820e:	aad    0x39
  418210:	outs   dx,BYTE PTR ds:[esi]
  418211:	inc    edx
  418212:	test   al,0x65
  418214:	and    BYTE PTR [ebx],al
  418216:	inc    esp
  418217:	imul   ecx,DWORD PTR [ebp+0x72],0x43
  41821b:	js     0x41822f
  41821d:	data16 je 0x41824f
  418220:	pop    esi
  418221:	and    BYTE PTR [edx],bh
  418223:	mov    eax,ds:0xc4411b73
  418228:	repz inc esi
  41822a:	cmp    ebp,DWORD PTR [eax+0x42]
  41822d:	jns    0x4181c2
  41822f:	inc    eax
  418230:	call   0x63eaee55
  418235:	arpl   WORD PTR [eax-0x5c],bx
  418238:	push   eax
  418239:	jb     0x4181d2
  41823b:	nop
  41823c:	das    
  41823d:	jno    0x4182a6
  41823f:	dec    esp
  418240:	jns    0x418278
  418242:	jg     0x418286
  418244:	pop    es
  418245:	inc    esi
  418246:	outs   dx,DWORD PTR ds:[esi]
  418247:	imul   esp,DWORD PTR [edx+ebx*2-0x30],0x34
  41824c:	push   ecx
  41824d:	jbe    0x418296
  41824f:	adc    al,0x6d
  418251:	xor    BYTE PTR ds:0x55c3324,dh
  418257:	cs inc ebx
  418259:	or     DWORD PTR [esi+ecx*4],ecx
  41825c:	inc    edi
  41825d:	adc    cl,BYTE PTR [esi]
  41825f:	imul   ebp,DWORD PTR [edi+0x9],0x62
  418263:	or     eax,0x1a1310a4
  418268:	inc    ebx
  418269:	xor    DWORD PTR [edx-0x7d],0x79
  41826d:	xor    DWORD PTR [eax-0x7e],0x74
  418271:	mov    WORD PTR [esi+0x2ca87615],es
  418277:	and    eax,0xbc04d473
  41827c:	mov    al,ds:0x2344850
  418281:	jno    0x4182db
  418283:	xor    BYTE PTR [edx+0x4b],dl
  418286:	jae    0x418212
  418288:	lock outs dx,DWORD PTR ds:[esi]
  41828a:	add    DWORD PTR [ecx+0x72],ebp
  41828d:	outs   dx,DWORD PTR ds:[esi]
  41828e:	push   eax
  41828f:	inc    ecx
  418290:	hlt    
  418291:	inc    esi
  418292:	jbe    0x418278
  418294:	pop    edx
  418295:	xor    al,0x71
  418297:	xor    ebx,ebx
  418299:	add    ah,cl
  41829b:	push   ecx
  41829c:	push   edx
  41829d:	cmp    DWORD PTR [ecx+0x66],ebx
  4182a0:	add    BYTE PTR [eax],dh
  4182a2:	jbe    0x4182dc
  4182a4:	xor    eax,0x676f4b55
  4182a9:	test   BYTE PTR [edi+0x7b],0x47
  4182ad:	add    BYTE PTR [ecx],dh
  4182af:	inc    esi
  4182b0:	push   ebx
  4182b1:	inc    ebx
  4182b2:	pop    edx
  4182b3:	dec    ecx
  4182b4:	push   edx
  4182b5:	pop    eax
  4182b6:	out    dx,al
  4182b7:	push   0x28
  4182b9:	aaa    
  4182ba:	ins    BYTE PTR es:[edi],dx
  4182bb:	test   DWORD PTR [edx+0x71],edi
  4182be:	jl     0x418317
  4182c0:	pop    es
  4182c1:	jbe    0x418317
  4182c3:	inc    ebx
  4182c4:	xor    DWORD PTR [edx+0x50],edx
  4182c7:	dec    esi
  4182c8:	xor    cl,BYTE PTR [edx+0x48]
  4182cb:	push   eax
  4182cc:	bound  edi,QWORD PTR [ebp-0x42092ed5]
  4182d2:	push   eax
  4182d3:	stos   DWORD PTR es:[edi],eax
  4182d4:	jo     0x41827c
  4182d6:	clc    
  4182d7:	cmovns ebp,DWORD PTR [ebp+0x61]
  4182db:	addr16 cs push eax
  4182de:	mov    DWORD PTR [edx+ebx*2-0x20],esi
  4182e2:	add    cl,BYTE PTR [ebp+0x33]
  4182e5:	push   ebp
  4182e6:	arpl   WORD PTR [edx+0x47],sp
  4182e9:	inc    eax
  4182ea:	mov    al,ds:0x9ed4646d
  4182ef:	sbb    BYTE PTR [ebx],al
  4182f1:	pop    eax
  4182f2:	jae    0x418341
  4182f4:	push   edx
  4182f5:	inc    ebp
  4182f6:	les    eax,FWORD PTR [eax+0x2f4331f0]
  4182fc:	cwde   
  4182fd:	loope  0x418311
  4182ff:	imul   ecx,DWORD PTR [ebx+0x32],0x5a39fd01
  418306:	imul   ax,WORD PTR [ebx+0x4a5970d0],0x35
  41830e:	mov    eax,0x132434e
  418313:	inc    ecx
  418314:	jp     0x41835e
  418316:	push   0x2b
  418318:	inc    edx
  418319:	inc    esi
  41831a:	inc    edi
  41831b:	clc    
  41831c:	jp     0x4182fa
  41831e:	addr16 aas 
  418320:	sbb    ah,ch
  418322:	imul   edi,edx,0x9c4c4def
  418328:	dec    esi
  418329:	shl    DWORD PTR [edi],cl
  41832b:	push   0x20201122
  418330:	jbe    0x41836b
  418332:	inc    esp
  418333:	in     al,0xc
  418335:	inc    ecx
  418336:	cmp    al,dl
  418338:	and    al,0x9c
  41833a:	inc    ebp
  41833b:	inc    esp
  41833c:	xor    al,0x8b
  41833e:	call   0x2a768bc8
  418343:	adc    al,0x12
  418345:	and    al,0x34
  418347:	(bad)  
  418348:	bound  ebp,QWORD PTR [ebx+0x29656dc7]
  41834e:	test   DWORD PTR [ebp+0x74],ebx
  418351:	int    0x0
  418353:	fadd   DWORD PTR [esi+0x72]
  418356:	sti    
  418357:	stc    
  418358:	push   esi
  418359:	xor    DWORD PTR [esi-0x8],esp
  41835c:	jne    0x4183bf
  41835e:	xor    ebp,DWORD PTR [ebp+ecx*2+0x2e]
  418362:	outs   dx,DWORD PTR ds:[esi]
  418363:	bnd jns 0x41830d
  418366:	push   ss
  418367:	inc    ebx
  418368:	fisttp WORD PTR [edi+0x73]
  41836b:	aad    0xa
  41836d:	push   ds
  41836e:	push   ebx
  41836f:	jne    0x4183d7
  418371:	cmp    eax,DWORD PTR [ebx]
  418373:	outs   dx,BYTE PTR ds:[esi]
  418374:	fs push esp
  418376:	push   0x5461503b
  41837b:	adc    dl,BYTE PTR [ecx+0x7a]
  41837e:	jne    0x418343
  418380:	dec    esp
  418381:	dec    ecx
  418382:	outs   dx,BYTE PTR ds:[esi]
  418383:	dec    ax
  418385:	pop    eax
  418386:	dec    ebp
  418387:	jge    0x4183ff
  418389:	imul   esi,ebx,0x39801b5d
  41838f:	inc    esp
  418390:	jne    0x418402
  418392:	ins    BYTE PTR es:[edi],dx
  418393:	imul   esp,DWORD PTR [ebx-0x3f],0x624f652e
  41839a:	push   0xffffffd3
  41839c:	(bad)  
  41839d:	cli    
  41839e:	xor    BYTE PTR [ecx+0x53],dl
  4183a1:	leave  
  4183a2:	jae    0x418338
  4183a4:	sub    ch,BYTE PTR [ebp+0x36]
  4183a7:	mov    ah,0x21
  4183a9:	xor    BYTE PTR [ecx+0x6c],al
  4183ac:	mov    ah,0xd2
  4183ae:	pop    edi
  4183af:	das    
  4183b0:	xor    BYTE PTR [edi+ecx*2],0xed
  4183b4:	(bad)  
  4183b5:	imul   edi,DWORD PTR [edx],0xffffffec
  4183b8:	jae    0x41839d
  4183ba:	push   ebx
  4183bb:	adc    BYTE PTR [edx+0x28],dl
  4183be:	adc    dh,BYTE PTR [ebp-0x48]
  4183c1:	xchg   DWORD PTR [esp+ecx*1+0x4c],ebp
  4183c5:	outs   dx,DWORD PTR ds:[esi]
  4183c6:	adc    al,0x44
  4183c8:	(bad)  
  4183c9:	imul   ebp,DWORD PTR [eax+0x76],0x520610bc
  4183d0:	je     0x41843e
  4183d2:	mov    esp,0x8255d5fb
  4183d7:	or     BYTE PTR [ebx+0x6f],ah
  4183da:	fs gs ret 
  4183dd:	fnstcw WORD PTR [esi+0x32]
  4183e0:	outs   dx,DWORD PTR ds:[esi]
  4183e1:	addr16 sub al,0xde
  4183e4:	les    bp,DWORD PTR ds:[esi]
  4183e8:	or     edx,edx
  4183ea:	inc    ebp
  4183eb:	and    edi,esi
  4183ed:	inc    esi
  4183ee:	imul   edi,esp,0x78754565
  4183f4:	mov    ds:0xe580958c,eax
  4183f9:	push   ebx
  4183fa:	dec    eax
  4183fb:	dec    esp
  4183fc:	jbe    0x418455
  4183fe:	sub    DWORD PTR [eax+0x49],edx
  418401:	push   ds
  418402:	xchg   edx,eax
  418403:	inc    edi
  418404:	add    edx,DWORD PTR [ecx]
  418406:	inc    ebx
  418407:	jne    0x41847b
  418409:	push   0x627664bc
  41840e:	dec    ecx
  41840f:	fs xchg ecx,eax
  418411:	push   ss
  418412:	push   esi
  418413:	mov    esi,0x99b0d5c0
  418418:	ins    BYTE PTR es:[edi],dx
  418419:	inc    ecx
  41841a:	and    DWORD PTR [ebx+0x4],edx
  41841d:	push   cs
  41841e:	inc    ebx
  41841f:	push   esp
  418420:	mov    DWORD PTR [ebp+0x11],ebp
  418423:	push   ds
  418424:	inc    esp
  418425:	sti    
  418426:	inc    ecx
  418427:	push   ss
  418428:	mov    esp,0x1c141104
  41842d:	xor    al,0xc3
  41842f:	dec    eax
  418430:	popa   
  418431:	outs   dx,BYTE PTR ds:[esi]
  418432:	inc    ecx
  418433:	mov    al,ds:0x7f1191c
  418438:	sub    DWORD PTR [ebp+0x6f],eax
  41843b:	sub    eax,0x29520433
  418440:	sbb    ecx,DWORD PTR [ecx]
  418442:	adc    BYTE PTR [ebx],cl
  418444:	pop    ds
  418445:	sub    al,BYTE PTR [ebx-0x21]
  418448:	test   DWORD PTR [edx+0x23],edx
  41844b:	sub    al,0x8d
  41844d:	inc    esp
  41844e:	imul   esi,DWORD PTR [eax],0x1b504e45
  418454:	push   ss
  418455:	aaa    
  418456:	ins    BYTE PTR es:[edi],dx
  418457:	and    al,0xef
  418459:	mov    ds:0x8669706d,al
  41845e:	or     al,0x48
  418460:	pop    esi
  418461:	repz and eax,DWORD PTR [edx+eax*2+0x2e]
  418466:	inc    edi
  418467:	mov    ebx,0x9ac21641
  41846c:	push   ds
  41846d:	test   al,0xe0
  41846f:	js     0x4183fa
  418471:	push   edi
  418472:	imul   eax,DWORD PTR [ecx],0x61684316
  418478:	cli    
  418479:	or     DWORD PTR [esi+0x206c754d],0x79744281
  418483:	mov    ds:0x460c3b17,al
  418488:	and    DWORD PTR cs:[edx+0x4a],eax
  41848c:	and    al,0x4d
  41848e:	inc    ebp
  41848f:	xor    al,0x36
  418491:	xor    DWORD PTR [ecx-0x65b99eb2],ecx
  418497:	(bad)  
  418498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418499:	and    cl,BYTE PTR [ebp+0x29]
  41849c:	or     al,0xa
  41849e:	xor    edi,DWORD PTR [ebx]
  4184a0:	xor    cl,BYTE PTR [esi+0x14]
  4184a3:	js     0x418519
  4184a5:	adc    dh,ah
  4184a7:	je     0x41849e
  4184a9:	fild   WORD PTR [edx+0x22]
  4184ac:	rcl    dl,cl
  4184ae:	xchg   edx,eax
  4184af:	sbb    al,0x68
  4184b1:	sbb    BYTE PTR [ebx+0x6e],dl
  4184b4:	mov    eax,ds:0xfaef7394
  4184b9:	je     0x418454
  4184bb:	push   edx
  4184bc:	dec    esp
  4184bd:	sti    
  4184be:	xor    al,0x4e
  4184c0:	inc    ebp
  4184c1:	stos   BYTE PTR es:[edi],al
  4184c2:	adc    bl,bl
  4184c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184c5:	aam    0xb5
  4184c7:	inc    esi
  4184c8:	std    
  4184c9:	sbb    DWORD PTR [bp+di-0x49],edx
  4184cd:	jp     0x418481
  4184cf:	outs   dx,DWORD PTR ds:[esi]
  4184d0:	dec    bx
  4184d2:	imul   BYTE PTR [esi-0x3d9cac18]
  4184d8:	inc    edx
  4184d9:	retf   0x1043
  4184dc:	mov    WORD PTR [esi+edx*8+0x6b],cs
  4184e0:	lods   eax,DWORD PTR ds:[esi]
  4184e1:	adc    BYTE PTR [eax+edx*1],ah
  4184e4:	and    DWORD PTR [eax],esi
  4184e6:	jmp    0xe45186f3
  4184eb:	inc    ecx
  4184ec:	mov    fs,WORD PTR [eax]
  4184ee:	jnp    0x418561
  4184f0:	rcl    DWORD PTR fs:[edx-0x6a17b943],1
  4184f7:	mov    dh,0x8a
  4184f9:	inc    ecx
  4184fa:	mov    al,0x73
  4184fc:	dec    eax
  4184fd:	jo     0x418488
  4184ff:	jbe    0x41849a
  418501:	outs   dx,BYTE PTR ds:[esi]
  418502:	call   0xea1eeda1
  418507:	push   ss
  418508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418509:	loope  0x418542
  41850b:	mov    dh,0x53
  41850d:	or     DWORD PTR [eax+0x20],0xb6271241
  418514:	xchg   esp,eax
  418515:	stos   BYTE PTR es:[edi],al
  418516:	cwde   
  418517:	scas   al,BYTE PTR es:[edi]
  418518:	outs   dx,BYTE PTR ds:[esi]
  418519:	push   edi
  41851a:	mov    dh,BYTE PTR [ecx]
  41851c:	or     al,0x41
  41851e:	dec    edx
  41851f:	retf   0x4c0e
  418522:	imul   esp,DWORD PTR [edx-0x31],0x46790a61
  418529:	push   edx
  41852a:	mov    edx,0x1ac612a9
  41852f:	sbb    al,0x4a
  418531:	jae    0x41856f
  418533:	data16 loope 0x41856c
  418536:	and    al,0xc9
  418538:	push   edi
  418539:	xchg   esp,eax
  41853a:	push   cs
  41853b:	shl    DWORD PTR [eax],1
  41853d:	fisttp WORD PTR fs:0x26187970
  418544:	mov    edx,0xf9f089d2
  418549:	jbe    0x4185ac
  41854b:	sbb    ch,bh
  41854d:	dec    ecx
  41854e:	cmc    
  41854f:	inc    ebx
  418550:	mov    bh,0x1e
  418552:	inc    esi
  418553:	imul   edx,DWORD PTR [edx+0x4c9666f0],0x1a42b244
  41855d:	pusha  
  41855e:	ror    BYTE PTR [ebx+0x45],cl
  418561:	push   edx
  418562:	dec    esi
  418563:	out    0x4c,al
  418565:	nop
  418566:	mov    al,ds:0xeaa40f9b
  41856b:	test   al,0x13
  41856d:	push   esp
  41856e:	dec    ebp
  41856f:	(bad)  
  418570:	popa   
  418571:	dec    ecx
  418572:	sbb    BYTE PTR [di+0x5650],cl
  418577:	xor    eax,0x340644ca
  41857c:	adc    al,0x2c
  41857e:	mov    BYTE PTR [edi-0x6e],dl
  418581:	sub    bp,WORD PTR [edi+0x77]
  418585:	stos   DWORD PTR es:[edi],eax
  418586:	sub    BYTE PTR [esi],dh
  418588:	pop    ecx
  418589:	addr16 pop ebx
  41858b:	imul   esi,DWORD PTR [eax+0x4a610a86],0x98443689
  418595:	and    BYTE PTR [eax+0x4a],dh
  418598:	arpl   WORD PTR [eax-0x59],bp
  41859b:	dec    edx
  41859c:	adc    al,0x54
  41859e:	fdivr  QWORD PTR [edi]
  4185a0:	outs   dx,BYTE PTR ds:[esi]
  4185a1:	xor    al,0x6c
  4185a3:	ja     0x4185ce
  4185a5:	dec    ebx
  4185a6:	or     DWORD PTR [esi+0x7734230b],ebp
  4185ac:	push   0xffffffd1
  4185ae:	mov    edi,0x188a6674
  4185b3:	push   ebp
  4185b4:	push   ebx
  4185b5:	xchg   edi,eax
  4185b6:	and    DWORD PTR [edx+ecx*8+0x756a0dbb],edx
  4185bd:	shl    BYTE PTR [eax],0x4c
  4185c0:	imul   edx,DWORD PTR [ecx+0x2af92665],0x2
  4185c7:	leave  
  4185c8:	pusha  
  4185c9:	jae    0x4185e6
  4185cb:	xor    al,0x58
  4185cd:	es jns 0x418617
  4185d0:	adc    esp,DWORD PTR [esi+edx*2]
  4185d3:	sub    eax,0x4149773f
  4185d8:	mov    fs,esp
  4185da:	pop    esp
  4185db:	xor    eax,0xa926a42b
  4185e0:	addr16 dec ebx
  4185e2:	cmc    
  4185e3:	jns    0x418609
  4185e5:	push   cs
  4185e6:	aam    0xd3
  4185e8:	push   ebp
  4185e9:	xor    DWORD PTR [esi-0x26],ebp
  4185ec:	and    eax,0xb3f370d
  4185f1:	aam    0x46
  4185f3:	jmp    0xc861ab65
  4185f8:	inc    esp
  4185f9:	push   esi
  4185fa:	mov    edx,0x21928733
  4185ff:	add    ebp,ebx
  418601:	xlat   BYTE PTR ds:[ebx]
  418602:	add    BYTE PTR [eax+0x2c],ah
  418605:	dec    edi
  418606:	cmp    BYTE PTR ds:0x9ec50039,ch
  41860c:	pop    edx
  41860d:	out    dx,al
  41860e:	mov    DWORD PTR [bx+0x65],ebx
  418612:	add    BYTE PTR [edx+edx*8+0x33],ch
  418616:	ss (bad) 
  418618:	ror    BYTE PTR [esi+0x78],1
  41861b:	add    BYTE PTR [ecx],al
  41861d:	pop    esp
  41861e:	test   eax,0xbccd81c4
  418623:	xor    DWORD PTR [eax],eax
  418625:	inc    esp
  418626:	cld    
  418627:	jle    0x418680
  418629:	add    eax,DWORD PTR [ecx+0x67]
  41862c:	dec    edi
  41862d:	add    ch,dh
  41862f:	jb     0x4186a1
  418631:	mov    cl,0xd3
  418633:	jmp    0xbc7f:0xd43e9411
  41863a:	xchg   ecx,eax
  41863b:	or     BYTE PTR [ecx-0x1e5e4088],0xaf
  418642:	mov    dh,0x39
  418644:	pop    ebp
  418645:	fiadd  WORD PTR [eax]
  418647:	(bad)  
  418648:	sbb    al,0x59
  41864a:	jnp    0x41862e
  41864c:	xchg   edi,eax
  41864d:	test   eax,0x5c68100
  418652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418653:	data16 aam 0x1f
  418656:	stos   DWORD PTR es:[edi],eax
  418657:	add    DWORD PTR [edx+0x2e8b1c23],esp
  41865d:	dec    ebx
  41865e:	mov    ch,0xdc
  418660:	and    BYTE PTR [ebp+0x0],0x21
  418664:	(bad)  
  418665:	xchg   ebp,eax
  418666:	or     DWORD PTR [ecx],ebx
  418668:	dec    edi
  418669:	fisttp WORD PTR [esi+0x0]
  41866c:	aam    0x16
  41866e:	pop    ecx
  41866f:	int    0xa
  418671:	jb     0x4186ee
  418673:	popf   
  418674:	cmp    ch,dh
  418676:	cmp    al,0x80
  418678:	push   esi
  418679:	dec    edx
  41867a:	retf   
  41867b:	adc    al,0x12
  41867d:	inc    esp
  41867e:	clc    
  41867f:	pop    es
  418680:	cld    
  418681:	cbw    
  418683:	sbb    ch,BYTE PTR [eax+edx*1-0x7f]
  418687:	or     bl,BYTE PTR [ebx-0x44]
  41868a:	lfs    esp,FWORD PTR [eax]
  41868d:	inc    ecx
  41868e:	ins    DWORD PTR es:[edi],dx
  41868f:	inc    edi
  418690:	xor    edx,DWORD PTR [edi]
  418692:	adc    BYTE PTR [esi-0x65],bl
  418695:	push   esp
  418696:	aam    0x0
  418698:	les    esi,FWORD PTR [ecx]
  41869a:	icebp  
  41869b:	cmp    DWORD PTR [esi+0x4c],edx
  41869e:	pushaw 
  4186a0:	add    BYTE PTR [ebx-0x3b],cl
  4186a3:	stos   BYTE PTR es:[edi],al
  4186a4:	loope  0x418702
  4186a6:	repz xor eax,0xafc038d3
  4186ac:	add    edi,ecx
  4186ae:	xor    BYTE PTR [eax-0x7d],dl
  4186b1:	in     al,dx
  4186b2:	jecxz  0x418694
  4186b4:	mov    ch,0xc2
  4186b6:	add    BYTE PTR [edx+0x746a0e24],dl
  4186bc:	test   DWORD PTR [edi+0x2d42007c],eax
  4186c2:	cwde   
  4186c3:	rdpmc  
  4186c5:	repnz cmp BYTE PTR [eax+eiz*8-0x6520ffd4],bh
  4186cd:	loopne 0x418683
  4186cf:	xchg   BYTE PTR [ecx-0x74],al
  4186d2:	loope  0x4186f1
  4186d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186d5:	retf   0x403b
  4186d8:	xor    cl,ch
  4186da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186db:	or     al,0xa8
  4186dd:	popa   
  4186de:	add    BYTE PTR [edx+edi*1],al
  4186e1:	std    
  4186e2:	pop    ds
  4186e3:	push   cs
  4186e4:	outs   dx,BYTE PTR ds:[esi]
  4186e5:	test   eax,0x7efb001e
  4186ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186eb:	test   BYTE PTR [ebp+eax*8-0x1fff3f97],0x19
  4186f3:	in     al,dx
  4186f4:	adc    al,0xc8
  4186f6:	shl    BYTE PTR [esi-0x368cfff7],cl
  4186fc:	nop
  4186fd:	cmp    BYTE PTR [ecx+0xb82255],bl
  418703:	je     0x418754
  418705:	push   ebx
  418706:	and    DWORD PTR [ecx+0x8d9b0e],edi
  41870c:	mov    ds:0xe791f36b,eax
  418711:	mov    ebp,0xc01d47d3
  418716:	fnsave [edx]
  418718:	add    bl,ah
  41871a:	and    ecx,DWORD PTR [eax+0x668ba8]
  418720:	into   
  418721:	add    ch,BYTE PTR [ebp-0x2]
  418724:	jnp    0x418795
  418726:	ret    
  418727:	(bad)  
  418728:	clc    
  418729:	test   BYTE PTR ds:0x5b000f45,bh
  41872f:	sub    bh,BYTE PTR [eax+0x162b8c21]
  418735:	add    BYTE PTR [esi+ebp*1],bl
  418738:	jg     0x41873c
  41873a:	push   edi
  41873b:	fcmovu st,st(7)
  41873d:	rol    DWORD PTR [eax],cl
  41873f:	dec    edx
  418740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418741:	and    BYTE PTR [edx-0x14],0x2d
  418745:	and    DWORD PTR [edi],eax
  418747:	add    BYTE PTR [ebp-0x61670c7b],dh
  41874d:	inc    edi
  41874e:	mov    cl,0x70
  418750:	add    BYTE PTR [edi],bl
  418752:	mov    dl,BYTE PTR [edx+0x4fe72f65]
  418758:	iret   
  418759:	cmp    eax,0x87007546
  41875e:	pop    ebp
  41875f:	int3   
  418760:	mov    ebx,0x5ebe4
  418765:	pop    edx
  418766:	mov    edi,0x6fb5b8e9
  41876b:	iret   
  41876c:	cld    
  41876d:	add    BYTE PTR [ebx],al
  41876f:	int    0x94
  418771:	push   0xfffffffd
  418773:	xor    DWORD PTR [eax+0x71da0019],esi
  418779:	sbb    al,0xa1
  41877b:	push   ebx
  41877c:	call   0x9f41a2d1
  418781:	ins    BYTE PTR es:[edi],dx
  418782:	inc    ebx
  418783:	pop    ds
  418784:	ja     0x4187db
  418786:	ins    DWORD PTR es:[edi],dx
  418787:	les    eax,FWORD PTR [eax]
  418789:	adc    bh,BYTE PTR [edi+eax*8-0x5d]
  41878d:	sub    BYTE PTR [eax],bh
  41878f:	leave  
  418790:	ror    DWORD PTR [edi],cl
  418792:	repz bound ebp,QWORD PTR [edx-0x14]
  418796:	add    BYTE PTR [ecx+0x22],dl
  418799:	or     BYTE PTR [edx],al
  41879b:	fiadd  WORD PTR [edi]
  41879d:	jmp    0xff90:0x3a6036bc
  4187a4:	mov    al,0x9
  4187a6:	rol    BYTE PTR [eax],cl
  4187a8:	adc    ah,BYTE PTR [esi]
  4187aa:	iret   
  4187ab:	jecxz  0x418757
  4187ad:	cdq    
  4187ae:	test   ebp,ebp
  4187b0:	add    DWORD PTR [ecx+eiz*2-0x5e],edi
  4187b4:	or     al,dl
  4187b6:	push   edi
  4187b7:	pop    ds
  4187b8:	hlt    
  4187b9:	xor    al,0xd2
  4187bb:	add    BYTE PTR [esi+edx*2+0x9],dh
  4187bf:	stos   DWORD PTR es:[edi],eax
  4187c0:	cwde   
  4187c1:	aaa    
  4187c2:	cli    
  4187c3:	cmp    DWORD PTR [ecx],eax
  4187c5:	add    ecx,DWORD PTR [ecx-0x1a51aac2]
  4187cb:	mov    ?,eax
  4187cd:	adc    DWORD PTR [edx+0x0],esp
  4187d0:	and    DWORD PTR ds:0xeab09823,edx
  4187d6:	pop    esp
  4187d7:	mov    al,ds:0xb5ab7200
  4187dc:	adc    ah,BYTE PTR [eax]
  4187de:	mov    bl,0xa6
  4187e0:	add    eax,0x26d8f11e
  4187e5:	pop    ds
  4187e6:	sahf   
  4187e7:	inc    eax
  4187e8:	lods   eax,DWORD PTR ds:[esi]
  4187e9:	push   eax
  4187ea:	pop    esi
  4187eb:	pop    edx
  4187ec:	xor    al,0x57
  4187ee:	add    dl,ch
  4187f0:	out    0x32,eax
  4187f2:	inc    eax
  4187f3:	jns    0x4187e7
  4187f5:	mov    al,ds:0xd2c400a3
  4187fa:	not    BYTE PTR [edi-0x4ad49ffe]
  418800:	add    ah,ch
  418802:	hlt    
  418803:	mov    bh,0x14
  418805:	mov    ecx,0x4c9364
  41880a:	and    cl,BYTE PTR [ebx]
  41880c:	aaa    
  41880d:	jbe    0x41886d
  41880f:	mov    edi,0x26002a9a
  418814:	fdiv   DWORD PTR [edi+edi*2]
  418817:	mov    cl,0x2f
  418819:	dec    BYTE PTR [esi]
  41881b:	add    DWORD PTR [edi+0x72ee701b],esi
  418821:	jne    0x4187a4
  418823:	fcom   QWORD PTR [edi-0x7c56ff6c]
  418829:	popa   
  41882a:	push   ecx
  41882b:	loope  0x418814
  41882d:	test   DWORD PTR [ebx],eax
  41882f:	push   ds
  418830:	mov    eax,ds:0xe0803efd
  418835:	pop    ebp
  418836:	inc    ecx
  418837:	sub    DWORD PTR [esi],edx
  418839:	push   ds
  41883a:	add    ecx,ecx
  41883c:	int3   
  41883d:	cmp    al,0xd8
  41883f:	mov    eax,esp
  418841:	mov    al,0xa5
  418843:	shr    edx,0x0
  418846:	mov    dh,0x1a
  418848:	and    edx,DWORD PTR [ebp-0x6117ae85]
  41884e:	aas    
  41884f:	psrad  mm7,QWORD PTR [esi]
  418852:	pop    esp
  418853:	and    ah,0xfd
  418856:	test   al,0x5
  418858:	lock cmp eax,0x1dd800d9
  41885e:	ror    al,0x5a
  418861:	add    edi,DWORD PTR [edi]
  418863:	int    0xe6
  418865:	mov    ebx,0xccbef100
  41886a:	fisttp QWORD PTR [edi+0x802df6]
  418870:	push   eax
  418871:	dec    ebx
  418872:	sbb    eax,0x1415ed3d
  418877:	sub    edi,DWORD PTR [ebx-0x63]
  41887a:	add    BYTE PTR [ebx],cl
  41887c:	loop   0x418897
  41887e:	jmp    0x5700:0x25987b79
  418885:	mov    ss,ebx
  418887:	xor    eax,0xf301321d
  41888c:	jo     0x418850
  41888e:	pop    es
  41888f:	(bad)  [edi-0xf67f042]
  418895:	or     dh,bh
  418897:	icebp  
  418898:	cs push cs
  41889a:	push   ds
  41889b:	rcr    DWORD PTR ds:0xd535c012,1
  4188a1:	pop    ebx
  4188a2:	sti    
  4188a3:	cmp    bh,BYTE PTR [ebx]
  4188a5:	push   eax
  4188a6:	loop   0x41882b
  4188a8:	jns    0x4188f0
  4188aa:	(bad)  
  4188ab:	pop    ss
  4188ac:	or     eax,esi
  4188ae:	mov    BYTE PTR [eax-0x28f9e17e],bl
  4188b4:	xor    BYTE PTR [eax+0x12d8c4c0],al
  4188ba:	aam    0xa6
  4188bc:	jne    0x4188c6
  4188be:	add    BYTE PTR [ebp+0x56],bh
  4188c1:	mov    bh,0xe8
  4188c3:	jo     0x4188f1
  4188c5:	pop    ebp
  4188c6:	pop    ecx
  4188c7:	jmp    0x279a:0xc3f300ff
  4188ce:	lock inc eax
  4188d0:	sar    BYTE PTR [ebp+0x0],0x4d
  4188d4:	adc    bl,BYTE PTR gs:[eax-0x7e]
  4188d8:	dec    esp
  4188d9:	(bad)  
  4188da:	xchg   ecx,eax
  4188db:	add    BYTE PTR [esi-0x2e806773],al
  4188e1:	aas    
  4188e2:	mov    esp,0x735c72fb
  4188e7:	in     al,dx
  4188e8:	add    BYTE PTR [edi-0x6e84a028],bl
  4188ee:	outs   dx,BYTE PTR ds:[esi]
  4188ef:	into   
  4188f0:	mov    al,0x0
  4188f2:	stos   BYTE PTR es:[edi],al
  4188f3:	(bad)  
  4188f4:	jo     0x4188c7
  4188f6:	jecxz  0x4188a0
  4188f8:	(bad)  
  4188f9:	cmp    DWORD PTR [eax],eax
  4188fb:	mov    ah,0xfb
  4188fd:	scas   eax,DWORD PTR es:[edi]
  4188fe:	mov    esi,0xb83c6814
  418903:	sbb    al,0x7b
  418905:	push   es
  418906:	fadd   QWORD PTR [eax]
  418908:	loop   0x418977
  41890a:	dec    eax
  41890b:	in     eax,dx
  41890c:	shl    BYTE PTR [esi+0xe58b70f],0x79
  418913:	inc    ebx
  418914:	cwde   
  418915:	inc    esp
  418916:	int    0x80
  418918:	xchg   BYTE PTR [ecx+0x4b],bl
  41891b:	add    dl,cl
  41891d:	jp     0x4188e4
  41891f:	or     dh,BYTE PTR [edi+0x4a]
  418922:	and    DWORD PTR [edx+0x551c000],0x4865dc2c
  41892c:	inc    eax
  41892d:	add    BYTE PTR [esi+ebx*8-0x6a100a3e],al
  418934:	ins    BYTE PTR es:[edi],dx
  418935:	in     al,0x0
  418937:	aad    0xe1
  418939:	mov    esi,0xaf9b7024
  41893e:	dec    ebp
  41893f:	add    BYTE PTR [ebp+0x1a],dh
  418942:	mov    bh,0x79
  418944:	pop    ds
  418945:	aaa    
  418946:	iret   
  418947:	cmp    eax,0x6f492300
  41894c:	mov    bl,0xbc
  41894e:	sub    DWORD PTR [esi+0x2f9f0073],ecx
  418954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418955:	xchg   esp,eax
  418956:	pop    es
  418957:	xor    ch,BYTE PTR [edx-0x7556ff52]
  41895d:	pop    ss
  41895e:	fstp   TBYTE PTR [edi+0xb0e410]
  418964:	add    DWORD PTR [ebx],ebx
  418966:	mov    DWORD PTR [edi-0x5a],eax
  418969:	test   ch,bh
  41896b:	cmp    BYTE PTR [eax],al
  41896d:	addr16 mov ds:0x9ab8,al
  418971:	jnp    0x4189c1
  418973:	mov    bl,0x6
  418975:	add    BYTE PTR [ebx-0x16c9921],bl
  41897b:	cs enter 0x76d9,0x5d
  418980:	add    BYTE PTR [ecx-0xf],dl
  418983:	out    dx,eax
  418984:	in     al,0xfa
  418986:	jae    0x4189f5
  418988:	jl     0x418991
  41898a:	cmp    esi,DWORD PTR [esi+0xe]
  41898d:	xor    DWORD PTR [ebx],ecx
  41898f:	loopne 0x41891c
  418991:	pop    ebx
  418992:	loop   0x418975
  418994:	add    BYTE PTR [ebx],bl
  418996:	sar    DWORD PTR [ecx+0x7f077f8],cl
  41899c:	icebp  
  41899d:	jge    0x418975
  41899f:	cmp    al,ch
  4189a1:	fs cmp ebx,0x6b
  4189a5:	push   0x96e819ff
  4189aa:	mov    ecx,0x5cc1d3d
  4189af:	push   esi
  4189b0:	add    al,bh
  4189b2:	dec    ebp
  4189b3:	(bad)  
  4189b4:	je     0x4189a2
  4189b6:	xchg   DWORD PTR [eax],eax
  4189b8:	fwait
  4189b9:	mov    eax,0x61334b9f
  4189be:	mov    DWORD PTR [eax-0x5cb77200],esi
  4189c4:	dec    edi
  4189c5:	les    esp,FWORD PTR fs:[ebp+0x3f]
  4189c9:	add    bh,ch
  4189cb:	scas   al,BYTE PTR es:[edi]
  4189cc:	(bad)  
  4189cd:	sbb    ah,ah
  4189cf:	pop    ebp
  4189d0:	ds hlt 
  4189d2:	cmp    al,0x7e
  4189d4:	stos   BYTE PTR es:[edi],al
  4189d5:	add    BYTE PTR [eax+0x72],ch
  4189d8:	in     al,dx
  4189d9:	(bad)  
  4189da:	mov    ?,ebx
  4189dc:	cld    
  4189dd:	add    DWORD PTR [ebp-0x2],esp
  4189e0:	into   
  4189e1:	xor    ch,bl
  4189e3:	iret   
  4189e4:	fsub   QWORD PTR es:[ecx-0x67]
  4189e8:	add    BYTE PTR [eax-0x4189c113],bh
  4189ee:	mov    ds:0xf000fb7b,eax
  4189f3:	ficom  WORD PTR [eax+0x74778542]
  4189f9:	jecxz  0x4189fb
  4189fb:	lds    ebx,FWORD PTR ss:[edi+0xaa13af5]
  418a02:	adc    DWORD PTR [eax],eax
  418a04:	dec    edx
  418a05:	bound  ebp,QWORD PTR ds:0xffe19d4e
  418a0b:	inc    esp
  418a0c:	add    ebp,esp
  418a0e:	jbe    0x418a08
  418a10:	or     al,0x6e
  418a12:	idiv   eax
  418a14:	fdivr  QWORD PTR ds:[edi+0x6df1c200]
  418a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a1c:	add    bh,BYTE PTR [esi+0x4903feda]
  418a22:	mov    esp,0x8390a65a
  418a27:	cwde   
  418a28:	repz dec esi
  418a2a:	sub    al,0x7e
  418a2c:	cmc    
  418a2d:	cmp    BYTE PTR [edi+ecx*2+0x0],bh
  418a31:	pop    esi
  418a32:	xchg   edx,eax
  418a33:	add    edi,esi
  418a35:	lods   al,BYTE PTR ds:[esi]
  418a36:	xchg   ecx,esp
  418a38:	jo     0x4189e2
  418a3a:	jo     0x418a0f
  418a3c:	sysexit 
  418a3e:	xor    BYTE PTR [edi-0x8],ch
  418a41:	out    dx,eax
  418a42:	xchg   edi,eax
  418a43:	add    dl,ah
  418a45:	pop    edx
  418a46:	or     esi,esi
  418a48:	push   esi
  418a49:	jmp    0xfb2d:0x6b5000e4
  418a50:	fidivr DWORD PTR [edx+0xc7fa7f3]
  418a56:	add    BYTE PTR [esi-0x3f],ch
  418a59:	fucom  st(3)
  418a5b:	push   ebx
  418a5c:	mov    al,ds:0x1dec6fc5
  418a61:	cmp    eax,0x8f8093bd
  418a66:	cmp    eax,0x3ccf3a69
  418a6b:	mov    DWORD PTR [ebx],eax
  418a6d:	std    
  418a6e:	xor    eax,0x98450a32
  418a73:	test   BYTE PTR [edi],bh
  418a75:	(bad)  
  418a76:	cld    
  418a77:	imul   ecx,DWORD PTR [ecx],0x48
  418a7a:	push   cs
  418a7b:	jb     0x418a2b
  418a7d:	pop    eax
  418a7e:	push   eax
  418a7f:	inc    esp
  418a80:	xor    ch,cl
  418a82:	inc    eax
  418a83:	mov    edi,0x6b428e18
  418a88:	mov    esp,0xf8ef8849
  418a8d:	push   ds
  418a8e:	aas    
  418a8f:	or     eax,0x4e3740a1
  418a94:	shl    ebp,0x40
  418a97:	gs jnp 0x418a75
  418a9a:	push   cs
  418a9b:	popf   
  418a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a9d:	push   ebp
  418a9e:	stos   DWORD PTR es:[edi],eax
  418a9f:	and    BYTE PTR [ebx+edi*4+0x98a6ca],dh
  418aa6:	xlat   BYTE PTR ds:[ebx]
  418aa7:	ja     0x418aac
  418aa9:	neg    BYTE PTR [edx]
  418aab:	aas    
  418aac:	xchg   cl,dh
  418aae:	(bad)  
  418ab0:	ret    0x39ab
  418ab3:	loopne 0x418a4b
  418ab5:	mov    dh,al
  418ab7:	and    eax,0xf9530099
  418abc:	pushf  
  418abd:	push   edx
  418abe:	xchg   ebx,eax
  418abf:	call   0x5b44f6fb
  418ac4:	test   al,0x2d
  418ac6:	mov    dh,0xfc
  418ac8:	mov    ah,0xcc
  418aca:	jo     0x418a51
  418acc:	shr    BYTE PTR [ebx-0x5a37f600],cl
  418ad2:	mov    ch,0x61
  418ad4:	xlat   BYTE PTR ds:[ebx]
  418ad5:	ins    BYTE PTR es:[edi],dx
  418ad6:	xor    DWORD PTR [edi-0x5a],esi
  418ad9:	add    ch,dh
  418adb:	mov    al,0x69
  418add:	lods   al,BYTE PTR ds:[esi]
  418ade:	mov    BYTE PTR [esi-0x43ff3087],0x29
  418ae5:	mov    edi,0xfb9d4839
  418aea:	jnp    0x418afb
  418aec:	xor    DWORD PTR [eax-0x4bbf0ee5],0x355f8462
  418af6:	cmp    ebx,DWORD PTR [esi-0x12]
  418af9:	(bad)  
  418afa:	mov    al,ds:0x78602d17
  418aff:	scas   al,BYTE PTR es:[edi]
  418b00:	jmp    0xb241fafc
  418b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b06:	xchg   ecx,ebx
  418b08:	les    ebx,FWORD PTR ds:0x9b003d2f
  418b0e:	out    dx,eax
  418b0f:	jo     0x418af9
  418b11:	mov    BYTE PTR [ebx],ah
  418b13:	pop    edx
  418b14:	mov    es,WORD PTR [eax]
  418b16:	jmp    0xa04c:0x1a5556db
  418b1d:	and    BYTE PTR [eax],al
  418b1f:	pusha  
  418b20:	adc    bh,0xc0
  418b23:	mov    bl,0xa1
  418b25:	stos   BYTE PTR es:[edi],al
  418b26:	stc    
  418b27:	add    al,0x4f
  418b29:	sub    al,0xce
  418b2b:	call   0x4117b361
  418b30:	enter  0x19d,0x3e
  418b34:	mov    edi,0xf3fcd1fb
  418b39:	sbb    ecx,DWORD PTR [edx]
  418b3b:	add    BYTE PTR [edx-0x2a],cl
  418b3e:	jb     0x418b30
  418b40:	call   0xf4c581ee
  418b45:	dec    eax
  418b46:	js     0x418b05
  418b48:	shl    BYTE PTR [edx+0x22],0x10
  418b4c:	dec    ecx
  418b4d:	jecxz  0x418b50
  418b4f:	stc    
  418b50:	jecxz  0x418b5a
  418b52:	xchg   esi,eax
  418b53:	and    bl,BYTE PTR [ecx+0x5b]
  418b56:	inc    eax
  418b57:	or     BYTE PTR [ebp-0x7bb3bd72],al
  418b5d:	je     0x418b33
  418b5f:	or     BYTE PTR [esp+eax*8],dh
  418b62:	mov    ch,0x32
  418b64:	xor    eax,DWORD PTR [ebx+eiz*4]
  418b67:	and    cl,BYTE PTR [edi+0x68678404]
  418b6d:	sar    BYTE PTR [eax-0x647b369a],1
  418b73:	pop    ebx
  418b74:	push   eax
  418b75:	pop    eax
  418b76:	retf   
  418b77:	adc    bh,BYTE PTR [esi]
  418b79:	mov    bl,BYTE PTR [ebx+0x42]
  418b7c:	mov    esp,0x32ca08e7
  418b81:	popa   
  418b82:	shl    DWORD PTR [edi-0x7e],0x2e
  418b86:	stos   DWORD PTR es:[edi],eax
  418b87:	test   al,0xee
  418b89:	sbb    DWORD PTR [ebx],edx
  418b8b:	adc    ah,ch
  418b8d:	cmp    ebx,DWORD PTR [eax+edi*2+0x57f08342]
  418b94:	out    dx,al
  418b95:	add    BYTE PTR [ebx-0x31],0x21
  418b99:	add    edx,DWORD PTR [eax]
  418b9b:	hlt    
  418b9c:	jle    0x418b27
  418b9e:	pop    es
  418b9f:	push   ds
  418ba0:	and    BYTE PTR [ebx+0x6a3eb04],dl
  418ba6:	mov    edx,0x2eaa32d6
  418bab:	test   al,0x6f
  418bad:	adc    ecx,esp
  418baf:	and    ebp,ebx
  418bb1:	les    esi,FWORD PTR [edx+0x9]
  418bb4:	pop    eax
  418bb5:	fist   DWORD PTR [eax+0x57]
  418bb8:	jo     0x418b9a
  418bba:	pop    edx
  418bbb:	pop    es
  418bbc:	cmp    bp,WORD PTR [ebx+0x18e067cd]
  418bc3:	push   cs
  418bc4:	cmp    BYTE PTR [esi+esi*2],0x5c
  418bc8:	add    BYTE PTR [edx],bh
  418bca:	lods   al,BYTE PTR ds:[esi]
  418bcb:	stos   BYTE PTR es:[edi],al
  418bcc:	jmp    0x418b81
  418bce:	inc    ecx
  418bcf:	mov    edx,0xb1c404de
  418bd4:	jmp    0xe721:0x5247dd27
  418bdb:	add    BYTE PTR [edx],0xf1
  418bde:	cmp    eax,0x8d6cf660
  418be3:	add    al,0xf8
  418be5:	(bad)  [edx+0x4180d8d9]
  418beb:	mov    al,0x56
  418bed:	loope  0x418beb
  418bef:	repnz add BYTE PTR [ebx],ch
  418bf2:	jecxz  0x418bbc
  418bf4:	pop    ecx
  418bf5:	xchg   BYTE PTR [ebx+0x230166af],cl
  418bfb:	mov    DWORD PTR ss:[ebx],ecx
  418bfe:	fsubr  st,st(3)
  418c00:	push   cs
  418c01:	inc    eax
  418c02:	test   al,0xb4
  418c04:	test   eax,0xfdf24c
  418c09:	sbb    al,BYTE PTR [edi-0x321ed61e]
  418c0f:	adc    al,0xf4
  418c11:	jmp    0xb51aa296
  418c16:	in     al,dx
  418c17:	repz xchg esi,eax
  418c19:	push   0x38
  418c1b:	stos   BYTE PTR es:[edi],al
  418c1c:	jg     0x418c1e
  418c1e:	push   0x95d62094
  418c23:	daa    
  418c24:	scas   eax,DWORD PTR es:[edi]
  418c25:	dec    BYTE PTR [esi]
  418c27:	add    BYTE PTR ds:0x803e0585,cl
  418c2d:	das    
  418c2e:	xlat   BYTE PTR ds:[ebx]
  418c2f:	pop    eax
  418c30:	sbb    eax,0x4f6acdad
  418c35:	cdq    
  418c36:	les    eax,FWORD PTR [eax]
  418c38:	xor    eax,0x3f533632
  418c3d:	add    BYTE PTR [ecx],dh
  418c3f:	ja     0x418c19
  418c41:	and    al,0xa6
  418c43:	test   al,0x10
  418c45:	stc    
  418c46:	pop    es
  418c47:	mov    ebp,0xdd2297f7
  418c4c:	ja     0x418c83
  418c4e:	loopne 0x418be9
  418c50:	inc    ebx
  418c51:	test   BYTE PTR ds:0x6a6fc500,ah
  418c57:	aas    
  418c58:	aaa    
  418c59:	scas   al,BYTE PTR es:[edi]
  418c5a:	cld    
  418c5b:	jp     0x418c5d
  418c5d:	xor    DWORD PTR [eax+0xa3d0df6],ecx
  418c63:	fxch   st(5)
  418c65:	push   cs
  418c66:	mov    ah,0x16
  418c68:	enter  0xe048,0x6f
  418c6c:	add    BYTE PTR [esi],0x1c
  418c6f:	add    eax,0x9b92df00
  418c74:	aam    0x5b
  418c76:	hlt    
  418c77:	pop    ebp
  418c78:	jo     0x418c7a
  418c7a:	repnz popf 
  418c7c:	jle    0x418cca
  418c7e:	cwde   
  418c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c80:	xor    DWORD PTR [esi],ebp
  418c82:	lock jmp 0x5b00:0x1cbcfd1c
  418c8a:	gs loopne 0x418c0d
  418c8d:	fimul  DWORD PTR [esi]
  418c8f:	cs jg  0x418d0c
  418c92:	jp     0x418c94
  418c94:	stos   DWORD PTR es:[edi],eax
  418c95:	inc    edx
  418c96:	dec    esp
  418c97:	cmp    dh,dh
  418c99:	jo     0x418c8b
  418c9b:	out    0x0,al
  418c9d:	lds    ecx,FWORD PTR [ebx+0x4779c31d]
  418ca3:	fcomip st,st(7)
  418ca5:	add    BYTE PTR [ebp-0x65e883e],ah
  418cab:	push   cs
  418cac:	pop    esi
  418cad:	ins    DWORD PTR es:[edi],dx
  418cae:	pop    es
  418caf:	push   es
  418cb0:	jle    0x418d27
  418cb2:	or     dl,BYTE PTR [edi-0x547e3851]
  418cb8:	jo     0x418cf6
  418cba:	mov    edi,0xf3008f86
  418cbf:	mov    al,ds:0xeaffedb1
  418cc4:	dec    edi
  418cc5:	pop    ebp
  418cc6:	pop    es
  418cc7:	in     al,0x22
  418cc9:	enter  0x549,0x20
  418ccd:	(bad)  
  418ccf:	rol    ecx,1
  418cd1:	add    BYTE PTR [eax+0x1],al
  418cd4:	rcl    BYTE PTR [edx+0xa6feb27],cl
  418cda:	adc    ecx,DWORD PTR [eax-0x6fffd9cd]
  418ce0:	in     al,dx
  418ce1:	inc    ecx
  418ce2:	(bad)  
  418ce3:	push   ecx
  418ce4:	pop    esp
  418ce5:	add    BYTE PTR [edx],ah
  418ce7:	into   
  418ce8:	in     eax,0xc5
  418cea:	cmp    DWORD PTR [esi+0x3707b008],ebx
  418cf0:	sbb    eax,0x503d01cb
  418cf5:	add    eax,DWORD PTR [ebx+0x207e7cc]
  418cfb:	sub    al,0xa1
  418cfd:	lock push ebp
  418cff:	jo     0x418d5a
  418d01:	imul   esp,DWORD PTR [esi],0x9e4e0144
  418d07:	inc    ebp
  418d08:	das    
  418d09:	xor    al,0xf1
  418d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d0c:	std    
  418d0d:	sar    esp,cl
  418d0f:	inc    esi
  418d10:	push   0xe
  418d12:	xchg   edi,eax
  418d13:	pop    es
  418d14:	sbb    eax,0x37396343
  418d19:	popa   
  418d1a:	clc    
  418d1b:	cld    
  418d1c:	jne    0x418cbb
  418d1e:	jno    0x418d7c
  418d20:	add    BYTE PTR [ecx+eax*4+0x2a4f44e9],dl
  418d27:	mov    gs,WORD PTR [edx+0x15e4f700]
  418d2d:	loope  0x418d66
  418d2f:	dec    eax
  418d30:	sbb    al,0x45
  418d32:	add    al,0x79
  418d34:	jge    0x418d10
  418d36:	inc    eax
  418d37:	enter  0xa887,0xc0
  418d3b:	(bad)  
  418d3c:	fstp   TBYTE PTR [esi+0x3dc900ba]
  418d42:	les    esp,FWORD PTR [edx-0x797ab034]
  418d48:	cld    
  418d49:	fnstsw WORD PTR [eax+0x59]
  418d4c:	add    BYTE PTR [edi],bl
  418d4e:	add    al,0xbb
  418d50:	xchg   edx,eax
  418d51:	inc    ebp
  418d52:	add    BYTE PTR [ecx],0xc8
  418d55:	add    cl,dl
  418d57:	cmp    ebp,edx
  418d59:	sbb    bl,BYTE PTR [ebp-0x7b]
  418d5c:	nop
  418d5d:	hlt    
  418d5e:	add    esp,DWORD PTR [ecx+ebp*4]
  418d61:	or     eax,0xd060b3fc
  418d66:	mov    BYTE PTR [esi-0x54d7f8b6],ch
  418d6c:	jmp    0x40b9:0x5592f15c
  418d73:	mov    esp,0x993975d2
  418d78:	arpl   WORD PTR [eax+0x3ef6566a],ax
  418d7e:	fs jbe 0x418de1
  418d81:	add    bh,BYTE PTR [ebp-0x1b]
  418d84:	das    
  418d85:	mov    al,0x3
  418d87:	mov    fs,WORD PTR [ebx-0x54]
  418d8a:	shl    DWORD PTR [ecx-0x2f],1
  418d8d:	sar    BYTE PTR [ebp+0x696e0bbb],0x1c
  418d94:	fld    QWORD PTR [eax-0x41888351]
  418d9a:	arpl   WORD PTR [edi],ax
  418d9c:	jecxz  0x418d9d
  418d9e:	int3   
  418d9f:	stos   BYTE PTR es:[edi],al
  418da0:	sbb    eax,0xfe722ef0
  418da5:	test   eax,0xcea73200
  418daa:	dec    ebx
  418dab:	xchg   BYTE PTR fs:[ebp+0x593300c5],dl
  418db2:	inc    edi
  418db3:	aas    
  418db4:	inc    ecx
  418db5:	leave  
  418db6:	lock fiadd WORD PTR [eax]
  418db9:	inc    eax
  418dba:	adc    dl,BYTE PTR [eax-0x1811d57f]
  418dc0:	mov    eax,0xcbc83500
  418dc5:	pusha  
  418dc6:	dec    ecx
  418dc7:	ins    DWORD PTR es:[edi],dx
  418dc8:	out    0xde,al
  418dca:	add    ch,bh
  418dcc:	ret    
  418dcd:	fmul   DWORD PTR [ebp-0x3628dfe9]
  418dd3:	add    BYTE PTR [esp+ecx*4],bh
  418dd6:	stc    
  418dd7:	int    0x74
  418dd9:	pusha  
  418dda:	add    al,0x1a
  418ddc:	add    BYTE PTR [edi-0x16],dh
  418ddf:	imul   esi,DWORD PTR ds:0xdb263dab,0x9870c100
  418de9:	out    dx,eax
  418dea:	push   cs
  418deb:	sbb    DWORD PTR [edi],eax
  418ded:	jno    0x418def
  418def:	adc    DWORD PTR [edx],esp
  418df1:	push   0x37be9ae6
  418df6:	int3   
  418df7:	jae    0x418e5a
  418df9:	repnz xchg ecx,eax
  418dfb:	and    al,0xf
  418dfd:	xor    eax,0x9bb93a31
  418e02:	adc    DWORD PTR [esi+edi*8-0x5b],0xfffffff3
  418e07:	inc    edi
  418e08:	loop   0x418e34
  418e0a:	pusha  
  418e0b:	pop    edi
  418e0c:	mov    dh,0x19
  418e0e:	push   ds
  418e0f:	dec    esi
  418e10:	(bad)  
  418e11:	bound  eax,QWORD PTR [eax-0x46bf24bf]
  418e17:	xchg   esp,eax
  418e18:	dec    edi
  418e19:	add    al,dh
  418e1b:	(bad)  
  418e1c:	(bad)  
  418e1d:	stos   BYTE PTR es:[edi],al
  418e1e:	jl     0x418e39
  418e20:	push   esp
  418e21:	sahf   
  418e22:	add    BYTE PTR [ecx],bh
  418e24:	jno    0x418e5c
  418e26:	rcr    DWORD PTR [edx+0x760150c5],cl
  418e2c:	xchg   esi,eax
  418e2d:	add    BYTE PTR [ecx+ecx*2],al
  418e30:	mov    dh,0x32
  418e32:	adc    ebp,DWORD PTR [esi]
  418e34:	or     BYTE PTR [ebp+0x0],bl
  418e37:	rcr    BYTE PTR [ebx],0xe3
  418e3a:	idiv   BYTE PTR [eax+0x135bc8e]
  418e40:	mov    edx,0x265ce872
  418e45:	ja     0x418e3e
  418e47:	and    BYTE PTR [ecx+0xb],al
  418e4a:	add    BYTE PTR [edx+0x50],cl
  418e4d:	fimul  WORD PTR [eax-0x16]
  418e50:	jmp    0x418eab
  418e52:	push   edx
  418e53:	add    BYTE PTR [edi-0xc],bl
  418e56:	jbe    0x418de2
  418e58:	fwait
  418e59:	clc    
  418e5a:	popf   
  418e5b:	mov    eax,0x91e9d700
  418e60:	pop    ds
  418e61:	mov    cl,0xc7
  418e63:	out    dx,al
  418e64:	xor    al,BYTE PTR [ebx]
  418e66:	fnstsw WORD PTR [ecx-0x1cbf5b3b]
  418e6c:	lock dec esi
  418e6e:	dec    ebx
  418e6f:	sub    DWORD PTR ds:0xc0df2ecf,ebx
  418e75:	lods   eax,DWORD PTR ds:[esi]
  418e76:	data16 jle 0x418e9d
  418e79:	test   BYTE PTR [ebx+0x43b83800],ah
  418e7f:	test   DWORD PTR [ecx+0x7f887919],ecx
  418e85:	sbb    bh,al
  418e87:	mov    edx,0x53004bb0
  418e8c:	repz adc DWORD PTR [ecx],ecx
  418e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e90:	cld    
  418e91:	aaa    
  418e92:	imul   eax,DWORD PTR [eax],0x57
  418e95:	pop    esp
  418e96:	add    ebp,DWORD PTR [ecx]
  418e98:	stos   BYTE PTR es:[edi],al
  418e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e9a:	out    0x52,eax
  418e9c:	sbb    eax,0x8013acea
  418ea1:	add    al,0x8b
  418ea4:	jge    0x418e59
  418ea6:	adc    DWORD PTR [eax],eax
  418ea8:	loopne 0x418ea0
  418eaa:	sub    ebx,DWORD PTR [edi-0x38b6a22a]
  418eb0:	ds scas eax,DWORD PTR es:[edi]
  418eb2:	fs pushf 
  418eb4:	jae    0x418f07
  418eb6:	add    BYTE PTR [edx],ch
  418eb8:	mov    ch,0xa4
  418eba:	pop    esi
  418ebb:	jne    0x418eda
  418ebd:	add    BYTE PTR [ebx-0x5e],bl
  418ec0:	adc    BYTE PTR [edx],cl
  418ec2:	aam    0xd0
  418ec4:	inc    edi
  418ec5:	inc    edx
  418ec6:	add    BYTE PTR [esi],ah
  418ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ec9:	leave  
  418eca:	sub    al,0x7e
  418ecc:	xchg   ecx,eax
  418ecd:	push   es
  418ece:	popf   
  418ecf:	add    bl,bl
  418ed1:	fcmovb st,st(3)
  418ed3:	mov    al,ds:0xb9975132
  418ed8:	add    bh,ah
  418eda:	jbe    0x418efa
  418edc:	retf   0x2c9f
  418edf:	aad    0xb5
  418ee1:	add    BYTE PTR [ebp-0x13],cl
  418ee4:	fdivrp st(7),st
  418ee6:	in     eax,0x5a
  418ee8:	ja     0x418f40
  418eea:	add    BYTE PTR [ebx-0x58],ch
  418eed:	xchg   esp,eax
  418eee:	cmp    ah,BYTE PTR ds:0x3dad8ae6
  418ef4:	mov    ebx,0x46ab80dc
  418ef9:	sbb    eax,0xd78f8d01
  418efe:	add    BYTE PTR [ecx+0x783b13ff],ch
  418f04:	pop    esi
  418f05:	inc    edx
  418f06:	add    ecx,DWORD PTR cs:[edx-0x42c606f1]
  418f0d:	test   bh,bh
  418f0f:	inc    eax
  418f10:	hlt    
  418f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f12:	mov    ds:0x2e6bb898,eax
  418f17:	and    al,BYTE PTR [edi]
  418f19:	or     eax,DWORD PTR [eax]
  418f1b:	das    
  418f1c:	into   
  418f1d:	xor    ah,dh
  418f1f:	cmp    DWORD PTR [ecx+0x0],0xffffffd1
  418f23:	iret   
  418f24:	cdq    
  418f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f26:	adc    bh,BYTE PTR fs:[edx+0x63]
  418f2a:	add    ah,bl
  418f2c:	shl    esi,cl
  418f2e:	xor    ebx,DWORD PTR [ebx+0x58d77b57]
  418f34:	xchg   BYTE PTR [edx],dh
  418f36:	add    BYTE PTR [ebp-0x42],bl
  418f39:	cdq    
  418f3a:	jmp    0xe6:0xe672fe64
  418f41:	int    0xd4
  418f43:	mov    ch,dl
  418f45:	repnz adc BYTE PTR [ecx+ecx*8],dh
  418f49:	add    BYTE PTR [eax],bh
  418f4b:	inc    esi
  418f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f4d:	mov    eax,0xf566b7ec
  418f52:	add    BYTE PTR [edx-0xc5e3975],bl
  418f58:	cld    
  418f59:	popa   
  418f5a:	jmp    0x1b8ecb7e
  418f5f:	cmp    ebx,0xf
  418f62:	xor    DWORD PTR [eax+0x65750588],0x17
  418f69:	jo     0x418fae
  418f6b:	imul   ebx,DWORD PTR [esi],0x42
  418f6e:	add    eax,esi
  418f70:	ins    BYTE PTR es:[edi],dx
  418f71:	add    DWORD PTR [esi-0x70],ecx
  418f74:	idiv   DWORD PTR [eax+0x23af00cf]
  418f7a:	push   ds
  418f7b:	fcomp  DWORD PTR ds:0xf38cbc14
  418f81:	cld    
  418f82:	scas   al,BYTE PTR es:[edi]
  418f83:	mov    ecx,0xcedf3000
  418f88:	in     al,0x82
  418f8a:	pop    edi
  418f8b:	jnp    0x418f11
  418f8d:	add    al,dl
  418f8f:	push   ebx
  418f90:	pop    ebx
  418f91:	cmp    ebx,DWORD PTR [eax]
  418f93:	mov    dl,0xb
  418f95:	ins    DWORD PTR es:[edi],dx
  418f96:	add    edx,esi
  418f98:	inc    ebp
  418f99:	pop    es
  418f9a:	cmp    eax,0x70d82f1a
  418f9f:	clc    
  418fa0:	fisubr WORD PTR [esi]
  418fa2:	into   
  418fa3:	sti    
  418fa4:	add    BYTE PTR gs:[edi+0x59],ah
  418fa8:	jmp    0x418f42
  418faa:	xor    eax,0x22810f2e
  418faf:	(bad)  [eax+eiz*1]
  418fb2:	jle    0x418ff9
  418fb4:	aad    0xc6
  418fb6:	fs (bad) 
  418fb8:	inc    DWORD PTR [eax]
  418fba:	jg     0x419032
  418fbc:	cld    
  418fbd:	push   ebx
  418fbe:	fbstp  TBYTE PTR [eax]
  418fc0:	or     eax,0xd6a20094
  418fc5:	xor    BYTE PTR [edx-0x4e82d171],0x1e
  418fcc:	xor    dl,ch
  418fce:	dec    edx
  418fcf:	add    ah,ah
  418fd1:	(bad)  
  418fd2:	gs or  edx,edx
  418fd5:	sub    BYTE PTR [eax],al
  418fd7:	test   BYTE PTR [ebx+ecx*4-0x3c639058],dh
  418fde:	adc    eax,DWORD PTR [ecx]
  418fe0:	pop    esi
  418fe1:	(bad)  
  418fe2:	retf   
  418fe3:	dec    esp
  418fe4:	dec    edx
  418fe5:	je     0x418f9d
  418fe7:	enter  0xe07d,0x0
  418feb:	jo     0x419006
  418fed:	rcr    DWORD PTR [ecx+0x89f9d28],1
  418ff3:	add    BYTE PTR [eax],ah
  418ff5:	inc    ebp
  418ff6:	add    eax,0x93958c0b
  418ffb:	mov    eax,ds:0xe3b3551f
  419000:	add    BYTE PTR [ecx],ah
  419002:	cli    
  419003:	pop    eax
  419004:	mov    edi,DWORD PTR [eax-0x620aff77]
  41900a:	mov    ecx,0x515e5f6
  41900f:	jae    0x419011
  419011:	mov    esp,0xf9e94513
  419016:	inc    edi
  419017:	and    eax,0x437800fb
  41901c:	adc    al,0x3
  41901e:	fisubr WORD PTR ds:0x5c00afeb
  419024:	dec    ecx
  419025:	mov    ds:0xdd02dc80,eax
  41902a:	xor    BYTE PTR [esi],ch
  41902c:	jg     0x419008
  41902e:	int3   
  41902f:	add    dh,ch
  419031:	bound  edx,QWORD PTR [ecx]
  419033:	adc    eax,0x4a00769a
  419038:	(bad)  
  419039:	lahf   
  41903a:	inc    edx
  41903b:	adc    dl,ch
  41903d:	aam    0x22
  41903f:	add    cl,al
  419041:	mov    bh,0x4d
  419043:	xchg   esp,eax
  419044:	fist   DWORD PTR [edi+0x1f7aff93]
  41904a:	push   cs
  41904b:	adc    eax,DWORD PTR [ecx-0x7f]
  41904e:	scas   eax,DWORD PTR es:[edi]
  41904f:	add    BYTE PTR [esi+eiz*1+0x52],ch
  419053:	and    BYTE PTR [eax+0x3],dl
  419056:	ret    
  419057:	aas    
  419058:	call   0xf8e2e6db
  41905d:	sbb    BYTE PTR [edi],0x39
  419060:	mov    cr6,ebp
  419063:	cmp    dh,bh
  419065:	and    BYTE PTR [ecx+0x60],ah
  419068:	nop
  419069:	add    eax,0x2bf702a9
  41906e:	push   esp
  41906f:	push   ebp
  419070:	push   es
  419071:	fiadd  WORD PTR [ebx-0x78]
  419074:	enter  0xe92a,0x70
  419078:	add    BYTE PTR [esi-0x1b38f6a2],cl
  41907e:	dec    ebx
  41907f:	or     eax,0x3a2b02b4
  419084:	gs mov al,0x26
  419087:	cdq    
  419088:	loop   0x4190eb
  41908a:	sub    DWORD PTR [edx-0xc77dafa],0xfffffff2
  419091:	adc    DWORD PTR [eax],eax
  419093:	xor    esi,DWORD PTR [edx+0x37ddf016]
  419099:	jne    0x41910d
  41909b:	add    BYTE PTR [edx],dh
  41909d:	sbb    DWORD PTR [ecx+edi*8],edi
  4190a0:	(bad)  
  4190a1:	adc    al,0x47
  4190a3:	push   eax
  4190a4:	add    BYTE PTR [edi+0x27],dh
  4190a7:	dec    ecx
  4190a8:	cmc    
  4190a9:	in     eax,0xaa
  4190ab:	sub    ah,BYTE PTR [esp+ebx*1]
  4190ae:	mov    esp,0x92806857
  4190b3:	data16 clc 
  4190b5:	add    eax,0xe007355
  4190ba:	jl     0x41906c
  4190bc:	adc    DWORD PTR [ebp+0x1e21cf8b],ecx
  4190c2:	or     cl,BYTE PTR [ebx-0x3e]
  4190c5:	add    BYTE PTR [eax],bl
  4190c7:	add    DWORD PTR [edi-0x30f8df9],0x5f
  4190ce:	add    dl,dl
  4190d0:	and    edi,DWORD PTR ds:0x46e080b1
  4190d6:	pop    esp
  4190d7:	out    dx,al
  4190d8:	dec    ecx
  4190d9:	add    BYTE PTR ds:0x93995b6f,dl
  4190df:	mov    al,ds:0x320e2243
  4190e4:	retf   0xc8ba
  4190e7:	inc    eax
  4190e8:	cmp    ebp,DWORD PTR [ebx+eax*8-0x3b]
  4190ec:	test   al,0x3a
  4190ee:	jge    0x419126
  4190f0:	add    BYTE PTR [esi+edx*2-0x64],bl
  4190f4:	pop    ss
  4190f5:	aam    0xe
  4190f7:	push   ebx
  4190f8:	nop
  4190f9:	add    BYTE PTR [eax],0xc
  4190fc:	xchg   ecx,eax
  4190fd:	(bad)  
  4190fe:	push   0xffffff96
  419100:	ja     0x419154
  419102:	in     eax,dx
  419103:	pop    es
  419104:	ins    DWORD PTR es:[edi],dx
  419105:	or     DWORD PTR [ebx],0x3c
  419108:	aas    
  419109:	shl    BYTE PTR [esi+0xd88c66],1
  41910f:	ret    0x5b2b
  419112:	jne    0x4190c9
  419114:	cwde   
  419115:	fwait
  419116:	push   esp
  419117:	add    BYTE PTR [ecx+0x7bae10f7],al
  41911d:	lds    ebp,FWORD PTR [esi]
  41911f:	sub    al,0x78
  419121:	pop    ecx
  419122:	jbe    0x419179
  419124:	add    edx,DWORD PTR [esi]
  419126:	out    0xec,al
  419128:	and    al,0x7d
  41912a:	or     edx,ecx
  41912c:	mov    edi,0x18d3dca9
  419131:	sbb    al,0xe7
  419133:	seto   BYTE PTR [edi+0x526a418d]
  41913a:	dec    esi
  41913b:	mov    al,ds:0xadfe3240
  419140:	add    BYTE PTR [edx-0xe],dh
  419143:	je     0x4190d3
  419145:	push   0xb3824b
  41914a:	retf   
  41914b:	inc    eax
  41914c:	push   eax
  41914d:	test   DWORD PTR [ecx+0x7f],ebp
  419150:	mov    ds:0x20e49e,al
  419155:	push   ecx
  419156:	mov    ecx,0x82a4b666
  41915b:	ds (bad) 
  41915d:	add    BYTE PTR [ecx-0x7a0c0548],dh
  419163:	xor    dl,BYTE PTR [eax-0x34]
  419166:	cmp    DWORD PTR [edx],ebx
  419168:	cdq    
  419169:	add    BYTE PTR [ebp+eax*8+0x534454a2],cl
  419170:	jmp    0x24af:0x51035eea
  419177:	stos   BYTE PTR es:[edi],al
  419178:	daa    
  419179:	sbb    eax,0xb28248d8
  41917e:	add    BYTE PTR [ebx+0x29],ah
  419181:	jle    0x419155
  419183:	add    al,0x7f
  419185:	xor    cl,BYTE PTR ds:[esi]
  419188:	cmp    cl,BYTE PTR [eax+0x4a403d34]
  41918e:	mov    esi,0x219906
  419193:	sti    
  419194:	sub    edx,edi
  419196:	les    ebx,FWORD PTR [esi]
  419198:	adc    al,0xe0
  41919a:	test   DWORD PTR [eax],eax
  41919c:	(bad)  
  41919d:	xchg   edx,eax
  41919e:	stc    
  41919f:	xchg   esi,eax
  4191a0:	ins    DWORD PTR es:[edi],dx
  4191a1:	mov    eax,0x6e12218a
  4191a6:	loop   0x4191e1
  4191a8:	add    BYTE PTR [eax-0x7bd34e19],ch
  4191ae:	leave  
  4191af:	add    al,dl
  4191b1:	jmp    0x96b3702e
  4191b6:	xor    BYTE PTR [ebp-0x418cad00],bl
  4191bc:	pop    ds
  4191bd:	out    dx,al
  4191be:	pop    ss
  4191bf:	xchg   ecx,eax
  4191c0:	dec    ecx
  4191c1:	add    bl,al
  4191c3:	jbe    0x41920b
  4191c5:	rcr    BYTE PTR [ebx],cl
  4191c7:	adc    edx,eax
  4191c9:	pop    esp
  4191ca:	add    BYTE PTR [edi-0x47],bh
  4191cd:	inc    ecx
  4191ce:	(bad)
  4191d1:	jecxz  0x419162
  4191d3:	add    BYTE PTR [ebx+0x6baa5e53],dl
  4191d9:	jo     0x4191b8
  4191db:	dec    eax
  4191dc:	add    ebx,eax
  4191de:	nop
  4191df:	xor    eax,0x270252ce
  4191e4:	int3   
  4191e5:	cmp    ebx,esp
  4191e7:	add    BYTE PTR [eax],ch
  4191e9:	mov    ecx,0x4a63a9c8
  4191ee:	cld    
  4191ef:	test   DWORD PTR [eax],eax
  4191f1:	aam    0x56
  4191f3:	jecxz  0x4191fb
  4191f5:	test   ecx,0xcc0794d8
  4191fb:	retf   
  4191fc:	stc    
  4191fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191fe:	and    BYTE PTR [ecx-0x7ff1a0cc],0xec
  419205:	lds    esp,FWORD PTR [eax]
  419207:	jns    0x4191be
  419209:	jp     0x4191ec
  41920b:	ja     0x419202
  41920d:	je     0x4191bb
  41920f:	hlt    
  419210:	stc    
  419211:	loopne 0x41919e
  419213:	push   ds
  419214:	outs   dx,BYTE PTR ds:[esi]
  419215:	test   al,0x3d
  419217:	inc    eax
  419218:	in     al,dx
  419219:	xchg   ah,cl
  41921b:	pop    eax
  41921c:	xchg   edx,eax
  41921d:	lock sbb eax,0x8ebfa7e8
  419223:	sti    
  419224:	or     bh,cl
  419226:	mov    WORD PTR [eax],fs
  419228:	scas   al,BYTE PTR es:[edi]
  419229:	mov    dh,0xf7
  41922b:	out    0x71,eax
  41922d:	push   cs
  41922e:	and    al,0x73
  419230:	push   esp
  419231:	sbb    DWORD PTR [esi],ebx
  419233:	push   esi
  419234:	xlat   BYTE PTR ds:[ebx]
  419235:	add    ch,bl
  419237:	mov    WORD PTR [ebp+0xfc302a9],?
  41923d:	fstp   st(0)
  41923f:	sub    edx,ebp
  419241:	pusha  
  419242:	(bad)  
  419243:	xor    eax,0xe08bef0
  419248:	jmp    0xc3fb:0x812c8f85
  41924f:	dec    ebx
  419250:	bound  esp,QWORD PTR [eax]
  419252:	sar    BYTE PTR [edi+0x0],1
  419255:	lea    esp,[edi]
  419257:	shl    BYTE PTR [ebp+0x5b],1
  41925a:	sub    ebp,esi
  41925c:	aad    0x78
  41925e:	rol    DWORD PTR [ecx],cl
  419260:	cmp    edx,eax
  419262:	loop   0x4192ce
  419264:	pop    ds
  419265:	mov    ch,BYTE PTR [esi-0x28]
  419268:	lds    ebx,FWORD PTR [edx-0x139ccfd]
  41926e:	idiv   BYTE PTR [edx-0x5c3277d0]
  419274:	clc    
  419275:	add    ah,dh
  419277:	fmul   QWORD PTR [esi-0x5a]
  41927a:	aam    0x29
  41927c:	dec    edi
  41927d:	push   esi
  41927e:	add    BYTE PTR [ebx-0x19],ah
  419281:	add    bh,BYTE PTR [eax+0x50]
  419284:	das    
  419285:	dec    esp
  419286:	adc    al,0x3e
  419288:	xchg   esi,eax
  419289:	mov    bh,0x0
  41928b:	imul   eax,DWORD PTR [esi-0x1f],0xffffff9c
  41928f:	sbb    BYTE PTR [edi+eiz*4-0x26710200],dl
  419296:	sub    cl,BYTE PTR [edx]
  419298:	(bad)  
  419299:	xchg   ebp,eax
  41929a:	cwde   
  41929b:	add    ah,al
  41929d:	test   BYTE PTR [esi-0x7a],dl
  4192a0:	jecxz  0x4192f7
  4192a2:	out    0x17,eax
  4192a4:	add    BYTE PTR [ebp+0x6a],al
  4192a7:	enter  0x9969,0x61
  4192ab:	fst    QWORD PTR [eax+eax*1]
  4192ae:	mov    eax,0x1eb6d8c2
  4192b3:	jmp    0x4192a5
  4192b5:	daa    
  4192b6:	pop    ds
  4192b7:	pop    ebp
  4192b8:	or     eax,0x89b5c06e
  4192bd:	xor    DWORD PTR [di+0x52],edx
  4192c1:	add    BYTE PTR [eax+0x43],cl
  4192c4:	xor    BYTE PTR [ebx],ch
  4192c6:	xchg   BYTE PTR [edi+0x4d],dl
  4192c9:	pop    esp
  4192ca:	clc    
  4192cb:	add    bh,ah
  4192cd:	xlat   BYTE PTR ds:[ebx]
  4192ce:	add    DWORD PTR [eax+esi*8-0x3e],edi
  4192d2:	add    eax,0xec431c71
  4192d7:	jp     0x41930d
  4192d9:	add    cl,al
  4192db:	and    DWORD PTR [ecx+0x4c80e079],ebx
  4192e1:	mov    bl,0x0
  4192e3:	ins    DWORD PTR es:[edi],dx
  4192e4:	(bad)  [edx+esi*2-0x4e726c3c]
  4192eb:	add    BYTE PTR [eax+esi*2-0xaf27ca6],dl
  4192f2:	stc    
  4192f3:	push   ds
  4192f4:	add    BYTE PTR [edi+ecx*4+0x64],al
  4192f8:	inc    edx
  4192f9:	mov    ch,0xa8
  4192fb:	cld    
  4192fc:	push   esi
  4192fd:	push   ds
  4192fe:	mov    ebp,0x35a63c26
  419303:	add    bl,dl
  419305:	imul   edx,eax,0x57
  419308:	dec    edx
  419309:	pop    ecx
  41930a:	add    BYTE PTR [ecx+0x1a],al
  41930d:	jo     0x419357
  41930f:	sub    BYTE PTR [edi-0x7a07e17c],0x1e
  419316:	sub    esp,DWORD PTR [ecx]
  419318:	sbb    eax,eax
  41931a:	into   
  41931b:	scas   al,BYTE PTR es:[edi]
  41931c:	mov    WORD PTR [eax-0x2d],gs
  41931f:	mov    esp,0x494e6900
  419324:	loope  0x41930b
  419326:	sub    cl,BYTE PTR [edi]
  419328:	fld    DWORD PTR [eax]
  41932a:	jnp    0x4192d6
  41932c:	enter  0x629c,0x10
  419330:	ins    DWORD PTR es:[edi],dx
  419331:	js     0x41934f
  419333:	or     al,0x4
  419335:	jle    0x41934a
  419337:	xchg   DWORD PTR [eax],eax
  419339:	push   cs
  41933a:	dec    ebp
  41933b:	xor    DWORD PTR [ebx],0x75036099
  419341:	fld    DWORD PTR [ecx+0x21]
  419344:	add    cl,BYTE PTR [eax-0x60]
  419347:	jae    0x4192ed
  419349:	dec    ebx
  41934a:	pop    es
  41934b:	mov    ch,0x32
  41934d:	hlt    
  41934e:	inc    edx
  41934f:	adc    eax,0x993c2580
  419354:	mov    ah,0xe2
  419356:	outs   dx,DWORD PTR ds:[esi]
  419357:	add    bl,cl
  419359:	push   esi
  41935a:	and    ebx,DWORD PTR [edi]
  41935c:	cli    
  41935d:	adc    BYTE PTR [edx],bl
  41935f:	scas   eax,DWORD PTR es:[edi]
  419360:	add    DWORD PTR [eax-0x2f],ebp
  419363:	pushf  
  419364:	dec    ebx
  419365:	lock repz test edi,0xfee6a2d8
  41936d:	mov    eax,ds:0x1ac0de8a
  419372:	fild   WORD PTR [eax]
  419374:	test   DWORD PTR [ebx+0x1f],esi
  419377:	mov    ebx,0x4b208716
  41937c:	push   ds
  41937d:	call   0x22d56989
  419382:	add    BYTE PTR [eax+0x1e92cfbd],ah
  419388:	sub    BYTE PTR [eax],al
  41938a:	enter  0x6264,0xe9
  41938e:	jne    0x41936c
  419390:	scas   al,BYTE PTR es:[edi]
  419391:	cmp    eax,DWORD PTR [eax]
  419393:	int    0x5f
  419395:	pusha  
  419396:	(bad)  
  419397:	sbb    al,0x88
  419399:	test   BYTE PTR [ebp-0x6a758f00],bl
  41939f:	mov    eax,0xad5c57d
  4193a4:	add    bh,bh
  4193a6:	lahf   
  4193a7:	test   al,0xac
  4193a9:	xor    DWORD PTR ds:0x2f002b87,ebx
  4193af:	icebp  
  4193b0:	hlt    
  4193b1:	into   
  4193b2:	cmp    ebx,esi
  4193b4:	pop    esp
  4193b5:	fmul   QWORD PTR [esi]
  4193b7:	and    eax,0x1a8aeaa
  4193bc:	mov    eax,0xdc22ab6a
  4193c1:	lock popa 
  4193c3:	add    al,bh
  4193c5:	inc    edx
  4193c6:	xchg   esp,eax
  4193c7:	les    esp,FWORD PTR [eax]
  4193c9:	pop    edi
  4193ca:	rol    BYTE PTR cs:[eax],cl
  4193cd:	xchg   DWORD PTR [eax-0x3c210d80],esi
  4193d3:	je     0x4193ab
  4193d5:	dec    esp
  4193d6:	jl     0x4193ad
  4193d8:	add    BYTE PTR [edi-0x3a000cb3],bh
  4193de:	aas    
  4193df:	call   0x872:0x1db7253e
  4193e6:	add    BYTE PTR ds:0xc4de8baa,al
  4193ec:	xor    DWORD PTR [eax],eax
  4193ee:	aad    0x91
  4193f0:	xor    BYTE PTR [ebx+esi*4+0x6c],bl
  4193f4:	outs   dx,BYTE PTR ds:[esi]
  4193f5:	dec    edx
  4193f6:	add    bl,bh
  4193f8:	inc    esp
  4193f9:	icebp  
  4193fa:	or     DWORD PTR [edi-0x50],0x622ca378
  419401:	cmp    esi,DWORD PTR [edi]
  419403:	sub    cl,bh
  419405:	push   cs
  419406:	sub    al,0x74
  419408:	push   esp
  419409:	rol    BYTE PTR [eax+0x10],cl
  41940c:	dec    ecx
  41940d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41940e:	data16 jge 0x419489
  419411:	push   cs
  419412:	add    BYTE PTR [ebx-0x30],bl
  419415:	pop    esp
  419416:	movd   DWORD PTR [edx+0x1500cb1e],mm1
  41941d:	fwait
  41941e:	test   DWORD PTR [ebx-0x40],ecx
  419421:	lea    ebp,[esi-0x12]
  419424:	add    DWORD PTR [eax],edx
  419426:	adc    DWORD PTR [esi-0x17b16b5f],edx
  41942c:	jmp    0xd200:0x13b7c5c0
  419433:	add    edx,DWORD PTR [ebp+0x33]
  419436:	cmp    al,0xd5
  419438:	fidiv  DWORD PTR [eax+0x68f3a900]
  41943e:	push   esp
  41943f:	int    0x9d
  419441:	add    al,0x57
  419443:	add    cl,ch
  419445:	cmp    BYTE PTR [edi-0x2ebf086],ah
  41944b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41944c:	add    BYTE PTR [edx+ebp*1+0x67],bh
  419450:	sub    al,0x78
  419452:	xchg   BYTE PTR [esi+edi*1+0x16],ah
  419456:	loopne 0x419412
  419458:	test   eax,0x2155be00
  41945d:	enter  0xaf91,0x0
  419461:	test   al,0x5b
  419463:	jp     0x419452
  419465:	add    ecx,DWORD PTR [ebp-0x6b]
  419468:	test   DWORD PTR [eax],eax
  41946a:	jge    0x41949a
  41946c:	jae    0x4194ad
  41946e:	aam    0x63
  419470:	cmp    eax,esp
  419472:	cmp    eax,0xac85b2fa
  419477:	sub    ah,BYTE PTR [eax+esi*2-0x80]
  41947b:	aaa    
  41947c:	inc    esi
  41947d:	mov    esi,0x3bb500de
  419482:	sub    DWORD PTR [ebx-0x33],edi
  419485:	loope  0x4194a7
  419487:	les    eax,FWORD PTR [eax]
  419489:	sti    
  41948a:	lods   al,BYTE PTR ds:[esi]
  41948b:	jl     0x419424
  41948d:	call   0x1416735
  419492:	or     ch,BYTE PTR [esi]
  419494:	frndint 
  419496:	rol    edx,1
  419498:	shl    DWORD PTR [edi+ebx*1],0x4f
  41949c:	mov    esp,0x35b3c00b
  4194a1:	mov    al,BYTE PTR [ebx-0x688c8f1]
  4194a7:	cmp    eax,0x5d00bd31
  4194ac:	push   ebp
  4194ad:	pop    edi
  4194ae:	pop    ecx
  4194af:	sbb    BYTE PTR [esi+edx*1-0x570040fb],al
  4194b6:	add    dh,BYTE PTR [esi]
  4194b8:	sbb    BYTE PTR [edi+0x15],0x32
  4194bc:	rol    BYTE PTR [eax],1
  4194be:	sbb    DWORD PTR [ecx+0x26d2069a],0x30013f16
  4194c8:	mov    bh,0x82
  4194ca:	cwde   
  4194cb:	sbb    BYTE PTR [eax*1+0x244e3cc0],cl
  4194d2:	mov    edi,0xa81d272d
  4194d7:	xchg   edi,eax
  4194d8:	pop    edi
  4194d9:	add    BYTE PTR [esi],bl
  4194db:	jmp    0x41945f
  4194dd:	sub    dh,BYTE PTR [eax-0x2ccbff84]
  4194e3:	(bad)  
  4194e4:	aas    
  4194e5:	cli    
  4194e6:	sub    al,0xcc
  4194e8:	imul   eax,DWORD PTR [eax],0x32
  4194eb:	ror    BYTE PTR [ecx+ecx*1],0x52
  4194ef:	or     edx,DWORD PTR [edi-0x2334c722]
  4194f5:	sbb    al,0xca
  4194f8:	mov    esp,0x131b19e2
  4194fd:	pop    ds
  4194fe:	mov    al,ds:0x20477ec6
  419503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419504:	inc    ecx
  419505:	and    BYTE PTR [esi],cl
  419507:	cmp    DWORD PTR [eax],edi
  419509:	mov    ch,0x0
  41950b:	mov    bh,0x29
  41950d:	fist   WORD PTR [ebx-0x2e4ee34e]
  419513:	pop    es
  419514:	inc    edi
  419515:	sbb    ah,BYTE PTR [esi]
  419517:	xchg   esp,eax
  419518:	inc    edx
  419519:	and    ah,0x96
  41951c:	dec    eax
  41951d:	pushf  
  41951e:	push   ds
  41951f:	call   0x96e:0xfec06787
  419526:	clc    
  419527:	push   eax
  419528:	(bad)  
  419529:	pop    es
  41952a:	dec    esp
  41952b:	(bad)  
  41952d:	cmp    bl,dl
  41952f:	sub    al,0xc6
  419532:	pusha  
  419533:	nop
  419534:	mov    edi,0x124f00b1
  419539:	jecxz  0x4194dc
  41953b:	lods   eax,DWORD PTR ds:[esi]
  41953c:	mov    esi,0x61006e50
  419541:	dec    esi
  419542:	push   0xccf0d672
  419547:	adc    DWORD PTR [eax],eax
  419549:	test   al,0x91
  41954b:	inc    ebx
  41954c:	in     eax,0xc7
  41954e:	mov    al,ds:0xc02d8c3
  419553:	sbb    al,BYTE PTR [ebx-0x70376176]
  419559:	cdq    
  41955a:	sbb    dl,0x64
  41955d:	pop    esp
  41955e:	lea    eax,[ebx]
  419560:	add    BYTE PTR [edi],al
  419562:	outs   dx,DWORD PTR ds:[esi]
  419563:	rol    DWORD PTR ds:0xf7f597d1,0x4c
  41956a:	int    0x1b
  41956c:	add    BYTE PTR [edx],ah
  41956e:	cmovge ebp,DWORD PTR [ebx+eiz*1-0x6]
  419573:	leave  
  419574:	(bad)  
  419575:	adc    eax,DWORD PTR [eax]
  419577:	js     0x41951f
  419579:	bound  esp,QWORD PTR [edi]
  41957b:	lods   eax,DWORD PTR ds:[esi]
  41957c:	push   edx
  41957d:	ret    0xe6
  419580:	or     eax,0x8a3ca4f8
  419585:	repz cwde 
  419587:	pop    eax
  419588:	add    BYTE PTR [ecx-0x25],ch
  41958b:	and    ecx,ebp
  41958d:	mov    edi,0x9d4b7d
  419592:	jae    0x4195f9
  419594:	mov    dh,0x89
  419596:	or     edi,ecx
  419598:	clc    
  419599:	lahf   
  41959a:	add    BYTE PTR [ecx+0x756bbd8],dl
  4195a0:	jnp    0x4195ae
  4195a2:	out    0x1,al
  4195a4:	jmp    0x419602
  4195a6:	(bad)  
  4195a7:	in     eax,dx
  4195a8:	inc    esp
  4195a9:	xchg   esi,eax
  4195aa:	xchg   ah,ch
  4195ac:	xchg   edx,eax
  4195ad:	fadd   DWORD PTR [eax]
  4195af:	jo     0x41959f
  4195b1:	and    eax,0x89fc3c2e
  4195b6:	mov    dl,0x0
  4195b8:	pop    esi
  4195b9:	push   cs
  4195ba:	dec    eax
  4195bb:	daa    
  4195bc:	stos   BYTE PTR es:[edi],al
  4195bd:	outs   dx,DWORD PTR ds:[esi]
  4195be:	mov    al,0xb7
  4195c0:	jle    0x41956b
  4195c2:	add    BYTE PTR [ecx-0x37],ah
  4195c5:	aad    0x44
  4195c7:	nop
  4195c8:	in     al,0xde
  4195ca:	jecxz  0x419628
  4195cc:	mov    ch,0x2c
  4195ce:	add    BYTE PTR [ebx-0xd],al
  4195d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195d2:	test   al,0xe5
  4195d4:	pop    esp
  4195d5:	sbb    al,0xf6
  4195d7:	pop    ebx
  4195d8:	add    BYTE PTR [edi-0x45736923],dl
  4195de:	jb     0x419565
  4195e0:	mov    dl,0x0
  4195e2:	and    esi,DWORD PTR [ecx+0x54]
  4195e5:	inc    ebp
  4195e6:	or     dh,BYTE PTR ds:0x120010d8
  4195ec:	and    ebp,ecx
  4195ee:	add    eax,0x970df890
  4195f3:	adc    edx,esi
  4195f5:	or     edi,DWORD PTR [eax+eax*1+0x66c33ebf]
  4195fc:	fild   WORD PTR [eax+eax*1]
  4195ff:	aam    0xcc
  419601:	add    al,BYTE PTR [ecx-0x51]
  419604:	xor    bl,BYTE PTR [eax+0x7e7a0d]
  41960a:	fnsave cs:[edi+0x46]
  41960e:	retf   0x3665
  419611:	inc    eax
  419612:	add    bh,ch
  419614:	xor    edi,DWORD PTR [ebx+0x1bb0180c]
  41961a:	sahf   
  41961b:	add    eax,0x59ad5fb5
  419620:	outs   dx,DWORD PTR ds:[esi]
  419621:	xchg   DWORD PTR [ebp+0x10],ebp
  419624:	lds    ebx,FWORD PTR [ecx]
  419626:	pop    ebp
  419627:	lock and al,0x28
  41962a:	push   0xecde0067
  41962f:	dec    esp
  419630:	cmp    eax,0xbb002205
  419635:	xchg   DWORD PTR [ebx],eax
  419637:	push   edx
  419638:	dec    ebx
  419639:	sub    al,0xcf
  41963b:	cdq    
  41963c:	add    BYTE PTR [edi-0x12526c3f],ah
  419642:	imul   BYTE PTR [ebp+0x3f]
  419645:	add    dh,bh
  419647:	push   edi
  419648:	dec    esp
  419649:	jb     0x419600
  41964b:	popf   
  41964c:	or     ah,bh
  41964e:	add    BYTE PTR [esi],al
  419650:	sti    
  419651:	fild   WORD PTR [eax+0x25]
  419654:	lds    edi,FWORD PTR [esi]
  419656:	stc    
  419657:	pusha  
  419658:	loopne 0x4195f8
  41965a:	addr16 mov al,ds:0xe6b2
  41965e:	add    bl,cl
  419660:	cld    
  419661:	sbb    eax,0xc52cdd10
  419666:	push   ds
  419667:	cmp    BYTE PTR [ecx+0x14],bh
  41966a:	add    dl,dl
  41966c:	xchg   ecx,eax
  41966d:	jno    0x419658
  41966f:	repz faddp st(1),st
  419672:	add    esp,DWORD PTR [eax+eiz*4-0x10]
  419676:	es int 0x6e
  419679:	enter  0x22db,0xd5
  41967d:	add    dl,ah
  41967f:	test   BYTE PTR [edx-0x28],al
  419682:	inc    eax
  419683:	hlt    
  419684:	xchg   DWORD PTR [edx+0xbbe5400],ecx
  41968a:	add    al,0x3f
  41968c:	sbb    BYTE PTR [eax-0x3beae02f],0xa2
  419693:	push   ss
  419694:	fadd   DWORD PTR [eax]
  419696:	leave  
  419697:	xchg   DWORD PTR [ebx-0x61],esi
  41969a:	jmp    0x50459e2f
  41969f:	mov    eax,ds:0x4d607afb
  4196a4:	js     0x419713
  4196a6:	pop    edi
  4196a7:	cmp    esp,DWORD PTR [ecx]
  4196a9:	pop    es
  4196aa:	add    BYTE PTR [edi],dh
  4196ac:	dec    ecx
  4196ad:	push   ebx
  4196ae:	jl     0x4196e3
  4196b0:	mov    esp,0x9d38006b
  4196b5:	inc    edi
  4196b6:	aam    0x83
  4196b8:	push   ebp
  4196b9:	ret    
  4196ba:	arpl   WORD PTR [esi],cx
  4196bc:	scas   al,BYTE PTR es:[edi]
  4196bd:	or     eax,0x8de0dba7
  4196c2:	fcomp  st(1)
  4196c4:	push   esp
  4196c5:	in     eax,dx
  4196c6:	add    BYTE PTR [eax-0x7f],dl
  4196c9:	and    al,BYTE PTR [ecx-0x1]
  4196cc:	ins    BYTE PTR es:[edi],dx
  4196cd:	aad    0x85
  4196cf:	jl     0x41967c
  4196d1:	pop    eax
  4196d2:	xor    DWORD PTR [ebp+0x3],ebp
  4196d5:	cld    
  4196d6:	ret    0x1336
  4196d9:	test   BYTE PTR [eax+0x123d7c1f],al
  4196df:	sar    BYTE PTR [edx-0x66397f12],0xd
  4196e6:	rol    DWORD PTR [ebx],1
  4196e8:	ins    BYTE PTR es:[edi],dx
  4196e9:	add    dl,BYTE PTR [edx-0x371624dd]
  4196ef:	jecxz  0x4196d6
  4196f1:	test   BYTE PTR [eax],al
  4196f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196f4:	mov    cl,0x89
  4196f6:	mov    bl,BYTE PTR [eax]
  4196f8:	push   ebp
  4196f9:	or     edi,ebx
  4196fb:	sbb    eax,0x80768e2d
  419700:	push   ecx
  419701:	inc    ecx
  419702:	mov    ch,0x9c
  419704:	pop    ss
  419705:	rol    BYTE PTR [eax],1
  419707:	and    eax,0x62c5218b
  41970c:	repz dec ebx
  41970e:	inc    ebp
  41970f:	add    BYTE PTR [edi-0x3c8260f],ah
  419715:	jp     0x41971f
  419717:	sti    
  419718:	add    eax,DWORD PTR [edx+0x20]
  41971b:	div    edx
  41971d:	mov    WORD PTR [edx+0x28f93400],ss
  419723:	mov    bl,0x50
  419725:	pop    esp
  419726:	mov    ah,0x9a
  419728:	add    BYTE PTR [esi+0x36],dl
  41972b:	rcr    BYTE PTR [edi+0x7d],cl
  41972e:	test   BYTE PTR [ebx-0x65],dh
  419731:	add    BYTE PTR [ecx+0x8874639],bl
  419737:	bound  eax,QWORD PTR [esi]
  419739:	loop   0x41973c
  41973b:	mov    esi,0x8eae3036
  419740:	shl    DWORD PTR [esi+0x60],0x3b
  419744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419745:	add    eax,DWORD PTR [ecx-0x6f53978d]
  41974b:	xor    al,BYTE PTR [eax+0xb870ef]
  419751:	mov    WORD PTR [esi+0x6d],gs
  419754:	add    DWORD PTR [ebx+edi*2],edx
  419757:	jecxz  0x419763
  419759:	add    BYTE PTR [ebx+eax*2-0x64188228],bh
  419760:	and    DWORD PTR [edx],edi
  419762:	or     DWORD PTR [eax+0x2fc05f],ecx
  419768:	push   ecx
  419769:	inc    edx
  41976a:	hlt    
  41976b:	popa   
  41976c:	jb     0x41976e
  41976e:	mov    ah,0xea
  419770:	clc    
  419771:	xchg   edi,eax
  419772:	(bad)  
  419774:	and    DWORD PTR [edx-0x2108600],eax
  41977a:	xchg   BYTE PTR [ebp+0x5de23e],cl
  419780:	mov    edx,0x175c565f
  419785:	sbb    eax,0x67ecc375
  41978a:	add    BYTE PTR [eax+0x23944620],dl
  419790:	ss jb  0x4197e7
  419793:	cmp    BYTE PTR [esi+0xf108078],cl
  419799:	jbe    0x41975b
  41979b:	mov    dh,0x81
  41979d:	test   DWORD PTR [eax],eax
  41979f:	aam    0xb8
  4197a1:	pushf  
  4197a2:	sbb    DWORD PTR [esp+ebp*4],ecx
  4197a5:	iret   
  4197a6:	out    dx,eax
  4197a7:	add    BYTE PTR [edx+0x39],bl
  4197aa:	fwait
  4197ab:	sahf   
  4197ac:	ret    0xf216
  4197af:	mov    BYTE PTR [eax],0x9
  4197b2:	popa   
  4197b3:	fbstp  TBYTE PTR [ecx-0x328eb9da]
  4197b9:	add    DWORD PTR [esi+ecx*4-0x12980e61],ebx
  4197c0:	sbb    eax,0x8f87d8
  4197c5:	add    eax,0xd2741720
  4197ca:	inc    ebx
  4197cb:	sbb    BYTE PTR [ecx],dl
  4197cd:	jp     0x4197fe
  4197cf:	or     al,0x1e
  4197d1:	adc    BYTE PTR [eax],0x62
  4197d4:	in     al,0x8c
  4197d6:	add    BYTE PTR [eax+0x4d],al
  4197d9:	jge    0x419766
  4197db:	jg     0x419821
  4197dd:	and    al,0xa3
  4197df:	add    BYTE PTR [ebp-0x1f],bl
  4197e2:	fiadd  DWORD PTR [ebp-0x50c6adff]
  4197e8:	add    bh,dh
  4197ea:	sbb    eax,0x9104258f
  4197ef:	cmp    edi,edi
  4197f1:	cmp    esi,DWORD PTR [ecx+0x443080cd]
  4197f7:	or     al,0x4e
  4197f9:	(bad)  
  4197fa:	cmc    
  4197fb:	jb     0x4197fd
  4197fd:	inc    edi
  4197fe:	push   esi
  4197ff:	outs   dx,DWORD PTR ds:[esi]
  419800:	stos   BYTE PTR es:[edi],al
  419801:	inc    ebp
  419802:	test   al,0x4f
  419804:	mov    ah,0x0
  419806:	nop    DWORD PTR ds:0x81b70bba
  41980d:	leave  
  41980e:	es fsubr st,st(4)
  419811:	fld    QWORD PTR [eax]
  419813:	xchg   BYTE PTR ds:0x4db6b2f0,al
  419819:	sbb    eax,0xce3f8b79
  41981e:	adc    ebx,0x4e21d640
  419824:	cmp    eax,0x1f07f63a
  419829:	dec    esp
  41982a:	push   0x7d
  41982c:	sar    al,0xb0
  41982f:	jecxz  0x4197d0
  419831:	mov    ?,WORD PTR [edi-0x3f7f5800]
  419837:	pop    ss
  419838:	inc    eax
  419839:	packuswb mm2,QWORD PTR [ebx+0x0]
  41983d:	test   eax,0x6a5b70f6
  419842:	aas    
  419843:	int3   
  419844:	sahf   
  419845:	pop    ds
  419846:	cwde   
  419847:	mov    ecx,0x99e0808c
  41984c:	outs   dx,DWORD PTR ds:[esi]
  41984d:	mov    esp,0x300465f
  419852:	sbb    bh,BYTE PTR [ecx+0x60]
  419855:	lahf   
  419856:	ins    BYTE PTR es:[edi],dx
  419857:	fninit 
  419859:	pop    es
  41985a:	jae    0x419814
  41985c:	cmc    
  41985d:	sar    DWORD PTR [edx],0x40
  419860:	xchg   ebp,eax
  419861:	fnstenv [esi]
  419863:	xchg   edx,eax
  419864:	add    esp,edi
  419866:	jne    0x4198ab
  419868:	xor    al,0xa6
  41986a:	fisub  WORD PTR [ebx+0x35f1adc]
  419870:	sub    eax,0x9d37c77b
  419875:	push   esp
  419876:	mov    eax,0x1e4d8e3
  41987b:	or     eax,0xdaddcfe1
  419880:	cld    
  419881:	xor    ecx,esp
  419883:	adc    BYTE PTR [ebx+0x0],dl
  419886:	mov    eax,ds:0x8941f687
  41988b:	push   ss
  41988c:	leave  
  41988d:	add    DWORD PTR [eax],0x24
  419890:	adc    dl,ah
  419892:	or     BYTE PTR [esi-0x13],0x6e
  419896:	mov    dh,0x1
  419898:	mov    esp,0x6bffaaa5
  41989d:	popa   
  41989e:	wrmsr  
  4198a0:	mov    cl,0xac
  4198a2:	out    dx,al
  4198a3:	mov    DWORD PTR [eax],eax
  4198a5:	xchg   edi,eax
  4198a6:	addr16 mov edx,0xd79925e4
  4198ac:	sbb    ah,bh
  4198ae:	mov    al,BYTE PTR [eax]
  4198b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198b1:	ins    DWORD PTR es:[edi],dx
  4198b2:	add    ebp,DWORD PTR [esi+0x4]
  4198b5:	lds    edi,FWORD PTR [ebx]
  4198b7:	lock add BYTE PTR [edi-0x3e],cl
  4198bb:	push   esi
  4198bc:	mov    esp,DWORD PTR [edi]
  4198be:	imul   ecx,esi,0x74
  4198c1:	cmp    DWORD PTR [ecx-0x4c577f48],edi
  4198c7:	cmp    bl,BYTE PTR [eax+0x1c]
  4198ca:	push   es
  4198cb:	mov    al,0xf
  4198cd:	in     al,dx
  4198ce:	scas   al,BYTE PTR es:[edi]
  4198cf:	pop    ds
  4198d0:	lock mov al,ds:0xce6cc69d
  4198d6:	push   0x1
  4198d8:	jae    0x4198a3
  4198da:	fiadd  DWORD PTR [ebx-0x16]
  4198dd:	xchg   BYTE PTR [ecx+0x5c4a60],dh
  4198e3:	ret    0x2377
  4198e6:	pop    ebx
  4198e7:	dec    esi
  4198e8:	or     DWORD PTR [eax-0x5b],esp
  4198eb:	add    BYTE PTR [eax-0x64fbadb4],dl
  4198f1:	fsincos 
  4198f3:	pop    ds
  4198f4:	add    ah,al
  4198f6:	fild   DWORD PTR [eax-0x291c1649]
  4198fc:	rcr    DWORD PTR [edi],cl
  4198fe:	push   cs
  4198ff:	push   edi
  419900:	mov    edi,0xde9e90c0
  419905:	lahf   
  419906:	fst    QWORD PTR [esi+0xf]
  419909:	mov    WORD PTR [ecx-0x54],?
  41990c:	pop    es
  41990d:	outs   dx,DWORD PTR ds:[esi]
  41990e:	mov    al,0xae
  419910:	cmc    
  419911:	loopne 0x4198b9
  419913:	aad    0xad
  419915:	jle    0x419927
  419917:	add    DWORD PTR [esp+ecx*2],esi
  41991a:	addr16 mov dl,0x9f
  41991d:	(bad)  
  41991e:	out    dx,al
  41991f:	stc    
  419920:	xchg   ah,cl
  419922:	stc    
  419923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419924:	add    BYTE PTR [edx+0x50],dh
  419927:	pushf  
  419928:	pop    esi
  419929:	fcom   DWORD PTR [ebp+0x4f]
  41992c:	cmp    al,0x0
  41992e:	int    0xfb
  419930:	sub    dh,BYTE PTR [ebx-0x34]
  419933:	push   0x2e
  419935:	pop    esp
  419936:	add    ah,dh
  419938:	out    0x75,ax
  41993b:	cmp    eax,0x18c977
  419940:	inc    esi
  419941:	imul   ebx,DWORD PTR [ebx-0x7c],0x25
  419945:	push   0x6c
  419947:	inc    esp
  419948:	add    BYTE PTR [eax],cl
  41994a:	inc    ebp
  41994b:	xchg   ecx,eax
  41994c:	jmp    0x7ffe:0x6e06ceaf
  419953:	add    BYTE PTR [edi],bl
  419955:	pop    ebp
  419956:	frstor [ebx]
  419958:	test   al,0xac
  41995a:	and    DWORD PTR ds:0xfa05ba1c,esp
  419960:	shl    BYTE PTR [ebp+0x6971748c],0xe5
  419967:	add    BYTE PTR [ecx],dl
  419969:	sbb    DWORD PTR [ebx-0x6d],edi
  41996c:	cmc    
  41996d:	xor    ebx,DWORD PTR [eax+0x46]
  419970:	add    cl,al
  419972:	jns    0x4198f7
  419974:	dec    ecx
  419975:	test   eax,0x3ee04f0
  41997a:	mov    edi,0xfd5552a2
  41997f:	outs   dx,BYTE PTR ds:[esi]
  419980:	mov    BYTE PTR [edi-0x3bc53caa],cl
  419986:	cmp    al,0x83
  419988:	or     ch,BYTE PTR [ecx-0x5726bb8e]
  41998e:	jecxz  0x419928
  419990:	mov    BYTE PTR [eax],al
  419992:	mov    ah,0x45
  419994:	sub    BYTE PTR [eax-0x5d],0x91
  419998:	mov    ds:0x5af600b5,al
  41999d:	mov    dh,0x90
  41999f:	(bad)  
  4199a1:	ret    
  4199a2:	bound  ebx,QWORD PTR [edx+ebp*4]
  4199a5:	data16 and al,BYTE PTR [eax-0x2e]
  4199a9:	and    BYTE PTR [eax+ebp*1],0x1e
  4199ad:	jmp    0xc647:0x3c8d9800
  4199b4:	aam    0xd6
  4199b6:	sbb    DWORD PTR [ecx],ecx
  4199b8:	outs   dx,DWORD PTR ds:[esi]
  4199b9:	out    0x87,al
  4199bb:	arpl   WORD PTR [ecx+0x5dc78366],ax
  4199c1:	and    DWORD PTR [ebx-0x3c],ebp
  4199c4:	fmul   st(2),st
  4199c6:	call   0xd792a3
  4199cb:	(bad)  
  4199cc:	retf   
  4199cd:	popf   
  4199ce:	xchg   esp,eax
  4199cf:	mov    DWORD PTR [ebx+ebp*1],ebp
  4199d2:	inc    BYTE PTR [ebx]
  4199d4:	jo     0x41999a
  4199d6:	mov    ebx,0xb8c1df7f
  4199db:	mov    eax,ds:0xd60047d7
  4199e0:	sbb    DWORD PTR ss:[ebp+0x1593426],esp
  4199e7:	add    BYTE PTR [ecx],ch
  4199e9:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4199eb:	dec    esp
  4199ec:	outs   dx,DWORD PTR ds:[esi]
  4199ed:	pop    es
  4199ee:	pop    ebp
  4199ef:	add    bl,BYTE PTR ds:0x21c9121
  4199f5:	mov    eax,0x60716a67
  4199fa:	or     eax,0x781eafc4
  4199ff:	cmp    ebp,DWORD PTR ds:0x7cf5da40
  419a05:	adc    esp,DWORD PTR [eax-0x1d]
  419a08:	jo     0x4199fb
  419a0a:	push   ds
  419a0b:	dec    esp
  419a0c:	or     eax,DWORD PTR [esi-0x2c77e400]
  419a12:	fwait
  419a13:	not    DWORD PTR [eax+eax*1]
  419a16:	fs in  eax,dx
  419a18:	xchg   ebx,eax
  419a19:	rcl    bh,cl
  419a1b:	pop    eax
  419a1c:	mov    bh,0x2d
  419a1e:	or     edx,DWORD PTR [edi-0x4a]
  419a21:	xor    al,0xe1
  419a23:	add    BYTE PTR [edx+edx*4-0x78],ah
  419a27:	push   esi
  419a28:	in     eax,0xe0
  419a2a:	mov    edx,0xbd58fc00
  419a2f:	dec    edi
  419a30:	push   ss
  419a31:	pop    edx
  419a32:	adc    ch,dh
  419a34:	sub    al,0xe2
  419a36:	mov    ds,WORD PTR [edx+0x3b2cff00]
  419a3c:	fsub   DWORD PTR [ebp+ecx*1+0x2a3c6300]
  419a43:	push   esi
  419a44:	mov    ebx,0x1e8cb498
  419a49:	hlt    
  419a4a:	mov    bl,0x58
  419a4c:	inc    eax
  419a4d:	(bad)  
  419a4e:	cmp    eax,0x332bb0e8
  419a53:	jns    0x419a20
  419a55:	add    BYTE PTR [edi-0x5a],al
  419a58:	mov    cl,0x2c
  419a5a:	cld    
  419a5b:	retf   0x25c9
  419a5e:	pop    es
  419a5f:	lods   eax,DWORD PTR ds:[esi]
  419a60:	out    0x13,al
  419a62:	xchg   esp,eax
  419a63:	and    BYTE PTR [eax],dh
  419a65:	ins    BYTE PTR es:[edi],dx
  419a66:	push   cs
  419a67:	(bad)  
  419a68:	xchg   edx,eax
  419a69:	add    BYTE PTR [edi-0x2076c93b],dh
  419a6f:	mov    WORD PTR es:[eax],cs
  419a72:	add    BYTE PTR [esi+0x1d7fdcf0],dh
  419a78:	mov    ebx,0x900098fe
  419a7d:	pop    edx
  419a7e:	sub    DWORD PTR ds:0xde29c1e1,0xef824a00
  419a88:	mov    eax,0x27d52342
  419a8d:	add    BYTE PTR [edi+ebx*4],dh
  419a90:	test   eax,0x8fbd0933
  419a95:	adc    BYTE PTR [edi],bl
  419a97:	fist   DWORD PTR [ebx]
  419a99:	push   esi
  419a9a:	cmp    eax,DWORD PTR [eax]
  419a9c:	push   eax
  419a9d:	cmc    
  419a9e:	push   ebx
  419a9f:	dec    esp
  419aa0:	pop    ebx
  419aa1:	xor    BYTE PTR [eax+eax*1+0x1a68c6ad],bh
  419aa8:	pop    ecx
  419aa9:	mov    ebp,0x8b03e00e
  419aae:	fwait
  419aaf:	daa    
  419ab0:	and    BYTE PTR [edx],dl
  419ab2:	(bad)  
  419ab3:	lock cdq 
  419ab5:	jnp    0x419ada
  419ab7:	add    BYTE PTR [ebx-0x37],cl
  419aba:	lods   al,BYTE PTR ds:[esi]
  419abb:	addr16 out dx,al
  419abd:	in     eax,dx
  419abe:	mov    edx,0x25ec00f3
  419ac3:	shl    cl,1
  419ac5:	push   ss
  419ac6:	push   ecx
  419ac7:	shl    edi,cl
  419ac9:	add    BYTE PTR [ebx],al
  419acb:	add    ch,0x33
  419ace:	pop    ebp
  419acf:	push   ds
  419ad0:	or     al,0x8f
  419ad2:	pop    ds
  419ad3:	(bad)  
  419ad4:	out    dx,al
  419ad5:	outs   dx,BYTE PTR ds:[esi]
  419ad6:	inc    eax
  419ad7:	popf   
  419ad8:	or     DWORD PTR [edi+0x61],0x6
  419adc:	mov    DWORD PTR [eax],0xc902f8d7
  419ae2:	push   ebx
  419ae3:	scas   al,BYTE PTR es:[edi]
  419ae4:	mov    edx,0x65110256
  419ae9:	shl    ecx,0x8c
  419aec:	add    al,0xc0
  419aee:	les    edi,FWORD PTR [ebx+0x3b]
  419af1:	add    BYTE PTR [esi-0x6f],bh
  419af4:	pusha  
  419af5:	scas   eax,DWORD PTR es:[edi]
  419af6:	sub    BYTE PTR [edx+0x51],bl
  419af9:	loop   0x419afb
  419afb:	mov    dl,0x61
  419afd:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  419aff:	jns    0x419ac8
  419b01:	fwait
  419b02:	push   es
  419b03:	add    BYTE PTR [edx-0x25],dl
  419b06:	int    0xbe
  419b08:	jg     0x419aa3
  419b0a:	xor    DWORD PTR [edx+0x0],esi
  419b0d:	pop    edi
  419b0e:	mov    ebx,0xba58a04d
  419b13:	jnp    0x419b37
  419b15:	add    DWORD PTR [edx+0x71],ebx
  419b18:	cli    
  419b19:	mov    eax,ds:0x71797e53
  419b1e:	push   ebx
  419b1f:	and    bl,dh
  419b21:	sbb    eax,DWORD PTR [eax]
  419b23:	loop   0x419b28
  419b25:	mov    gs,ebx
  419b27:	retf   0x2baf
  419b2a:	stos   DWORD PTR es:[edi],eax
  419b2b:	je     0x419b52
  419b2d:	add    BYTE PTR [eax+0x26],cl
  419b30:	fisttp WORD PTR [edi+0x7c]
  419b33:	iret   
  419b34:	xchg   DWORD PTR [esi-0x51b86f00],ebx
  419b3a:	sbb    BYTE PTR [ecx+edi*4+0x7300a443],dh
  419b41:	loop   0x419ad7
  419b43:	call   0xaa00:0x519d6ff5
  419b4a:	adc    DWORD PTR [ebp-0x1972f51b],eax
  419b50:	fild   WORD PTR [eax]
  419b52:	jmp    0x785121f9
  419b57:	adc    ch,ah
  419b59:	push   ds
  419b5a:	aas    
  419b5b:	and    al,0xb5
  419b5d:	sbb    al,0xd3
  419b5f:	xor    BYTE PTR [eax-0xb250730],al
  419b65:	mov    ah,0x4e
  419b67:	pop    ss
  419b68:	push   DWORD PTR [ebx]
  419b6a:	fld    QWORD PTR [eax]
  419b6c:	pop    ebx
  419b6d:	ins    DWORD PTR es:[edi],dx
  419b6e:	xchg   esp,eax
  419b6f:	test   ebp,ecx
  419b71:	mov    dh,0x50
  419b73:	cdq    
  419b74:	mov    ecx,0x5bc1634
  419b79:	xchg   ecx,eax
  419b7a:	add    ch,bl
  419b7c:	jbe    0x419b6d
  419b7e:	imul   ebx,DWORD PTR [esi],0x71e102ad
  419b84:	popa   
  419b85:	fldcw  WORD PTR [eax+0x734e01d]
  419b8b:	mov    edx,0x4efa807c
  419b90:	add    DWORD PTR [esi],esp
  419b92:	(bad)  
  419b93:	rcr    BYTE PTR [ebp-0x6b],1
  419b96:	out    dx,al
  419b97:	pop    eax
  419b98:	hlt    
  419b99:	push   ebx
  419b9a:	and    DWORD PTR [edi+ecx*8],ebx
  419b9d:	cli    
  419b9e:	in     eax,dx
  419b9f:	fsubrp st(6),st
  419ba1:	add    al,bh
  419ba3:	aad    0xda
  419ba5:	xchg   esp,ebp
  419ba7:	jns    0x419ba9
  419ba9:	cmp    DWORD PTR [ecx+ecx*2],esp
  419bac:	mov    ?,WORD PTR [esi]
  419bae:	adc    edx,DWORD PTR [ecx-0x2c]
  419bb1:	add    BYTE PTR [edi+0x10],dh
  419bb4:	int3   
  419bb5:	mov    bl,0x93
  419bb7:	jno    0x419bd0
  419bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bba:	add    dh,dh
  419bbc:	imul   edx,ebp,0x728484d
  419bc2:	iret   
  419bc3:	sub    cl,ah
  419bc5:	and    ebp,ebp
  419bc7:	je     0x419c09
  419bc9:	add    ebp,DWORD PTR [ebx+eax*8+0x3b]
  419bcd:	pop    ecx
  419bce:	inc    ebp
  419bcf:	clc    
  419bd0:	fdivr  DWORD PTR ds:0x7400ff03
  419bd6:	jg     0x419b7b
  419bd8:	int    0x7d
  419bda:	popa   
  419bdb:	add    dh,bh
  419bdd:	add    BYTE PTR [edx-0x4fe80c77],bl
  419be3:	cs jns 0x419bc4
  419be6:	push   es
  419be7:	mov    edi,0x50e6c2a1
  419bec:	jbe    0x419bee
  419bee:	cmp    cl,BYTE PTR [edx+0x14]
  419bf1:	dec    ebx
  419bf2:	jno    0x419c60
  419bf4:	mov    dl,0x63
  419bf6:	add    DWORD PTR [ebx],edx
  419bf8:	addr16 loopne 0x419c22
  419bfb:	mov    edx,0x83c2ccb1
  419c00:	stos   BYTE PTR es:[edi],al
  419c01:	cld    
  419c02:	adc    cl,al
  419c04:	push   fs
  419c06:	mov    esi,0x2a052803
  419c0b:	sbb    eax,0xb7c9e19a
  419c10:	loopne 0x419c73
  419c12:	pop    ebp
  419c13:	shr    BYTE PTR [ebx-0x58],0x0
  419c17:	fld    QWORD PTR [edi+0x7561de20]
  419c1d:	sub    BYTE PTR [edi+0x0],bl
  419c20:	jg     0x419c7b
  419c22:	popf   
  419c23:	push   ebp
  419c24:	loopne 0x419bb7
  419c26:	and    eax,DWORD PTR [esi+ebp*1]
  419c29:	cdq    
  419c2a:	mov    bh,0x7e
  419c2c:	add    BYTE PTR [ebx+ecx*1+0x8],dh
  419c30:	addr16 std 
  419c32:	enter  0x280c,0x7d
  419c36:	aaa    
  419c37:	adc    eax,DWORD PTR ds:0xba9900d6
  419c3d:	xchg   esi,eax
  419c3e:	fst    QWORD PTR [edi]
  419c40:	stos   DWORD PTR es:[edi],eax
  419c41:	mov    al,0x69
  419c43:	cmp    cl,BYTE PTR [edx+0x213d005d]
  419c49:	loop   0x419c47
  419c4b:	test   eax,0xfe00e02c
  419c50:	sbb    dl,BYTE PTR [ebp-0x75d7faf9]
  419c56:	or     DWORD PTR [eax],eax
  419c58:	push   0xb3170c8
  419c5d:	out    0xa5,al
  419c5f:	rol    DWORD PTR [eax],1
  419c61:	scas   al,BYTE PTR es:[edi]
  419c62:	jb     0x419cd8
  419c64:	mov    edi,0x126d048e
  419c69:	pop    es
  419c6a:	add    esi,DWORD PTR [eax]
  419c6c:	enter  0x67df,0x23
  419c70:	add    DWORD PTR [ebx-0x6f7a4410],ebp
  419c76:	add    BYTE PTR [eax-0x7],dl
  419c79:	clc    
  419c7a:	sub    esi,eax
  419c7c:	add    eax,0xca0a0b0c
  419c81:	mov    bh,0x40
  419c83:	dec    esp
  419c84:	mov    ds:0xe0bdb000,eax
  419c89:	xor    al,0x2f
  419c8b:	aas    
  419c8c:	add    BYTE PTR [ebx],bl
  419c8e:	jbe    0x419c92
  419c90:	clc    
  419c91:	sbb    al,0xa4
  419c93:	adc    al,0x2c
  419c95:	add    edx,DWORD PTR [edi-0x28]
  419c98:	sbb    BYTE PTR [esi],ch
  419c9a:	push   ebp
  419c9b:	mov    BYTE PTR [eax+0x899590],dl
  419ca1:	jmp    0x419d0c
  419ca3:	sti    
  419ca4:	and    esi,edx
  419ca6:	push   esp
  419ca7:	scas   eax,DWORD PTR es:[edi]
  419ca8:	cmc    
  419ca9:	add    ch,ch
  419cab:	or     DWORD PTR [esi+0x48],0xffffffff
  419caf:	adc    DWORD PTR [edi+eiz*1+0xf8253f],ebx
  419cb6:	outs   dx,DWORD PTR ds:[esi]
  419cb7:	test   eax,0x8b4b30dd
  419cbc:	mov    ecx,0x51067000
  419cc1:	mul    BYTE PTR [bp+si]
  419cc4:	add    ecx,edi
  419cc6:	psubsb mm4,QWORD PTR [eax-0x19b8c02c]
  419ccd:	int3   
  419cce:	arpl   WORD PTR [edx],si
  419cd0:	js     0x419c92
  419cd2:	mov    bh,0x1f
  419cd4:	daa    
  419cd5:	jbe    0x419c6f
  419cd7:	cmp    BYTE PTR [ecx+eiz*8+0x4b11be04],dl
  419cde:	jne    0x419c60
  419ce0:	xchg   BYTE PTR [edx+0x1b],al
  419ce3:	inc    esi
  419ce4:	jne    0x419d13
  419ce6:	add    BYTE PTR [ebx+0x31],dl
  419ce9:	shl    DWORD PTR [edx-0x28],cl
  419cec:	or     BYTE PTR [eax-0x6053db82],0xb1
  419cf3:	add    al,bh
  419cf5:	add    ebx,DWORD PTR [eax+eiz*8-0x1bff3f73]
  419cfc:	xchg   edi,eax
  419cfe:	nop
  419cff:	ret    0xccae
  419d02:	dec    esp
  419d03:	add    BYTE PTR [ecx+0x79],dh
  419d06:	test   al,0xef
  419d08:	and    eax,0x16b9b60
  419d0d:	fld    DWORD PTR [eax-0x24]
  419d10:	ror    BYTE PTR [ecx+0x29c861d3],cl
  419d16:	adc    al,0x0
  419d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d19:	div    esp
  419d1b:	xlat   BYTE PTR ds:[ebx]
  419d1c:	adc    eax,0x1ea208d6
  419d21:	test   eax,0xb4c02fbb
  419d26:	inc    esp
  419d27:	dec    esp
  419d28:	pusha  
  419d29:	daa    
  419d2a:	jo     0x419d2c
  419d2c:	xchg   esp,eax
  419d2d:	ds retf 0xd5df
  419d31:	or     bl,BYTE PTR [ecx]
  419d33:	sahf   
  419d34:	pop    es
  419d35:	mov    cs,WORD PTR [eax-0x7f674c9d]
  419d3b:	fisttp DWORD PTR [ebp-0x719e941]
  419d41:	sbb    al,0x8b
  419d43:	jno    0x419d52
  419d45:	add    BYTE PTR [esi],dh
  419d47:	adc    eax,0xfba41d83
  419d4c:	jp     0x419db4
  419d4e:	add    BYTE PTR [edx+0x39],al
  419d51:	arpl   WORD PTR [esi+0x30bf0e16],di
  419d57:	add    cl,cl
  419d59:	xor    dl,BYTE PTR [eax+ebx*8+0x24]
  419d5d:	rol    BYTE PTR [ecx+0x2410135],0x2c
  419d64:	(bad)  
  419d66:	call   0x40e2:0xe809f04c
  419d6d:	add    dl,bh
  419d6f:	push   cs
  419d70:	jle    0x419d84
  419d72:	imul   esi,esp,0xffffffea
  419d75:	and    eax,0xa3106e00
  419d7a:	test   eax,0x64b6dcf3
  419d7f:	aas    
  419d80:	or     BYTE PTR [edx+0x0],bh
  419d83:	bound  esi,QWORD PTR [edx]
  419d85:	test   BYTE PTR [edi+0xddd128],al
  419d8b:	aam    0x55
  419d8d:	cmp    eax,0xe7709965
  419d92:	test   eax,0x15670a00
  419d97:	adc    ecx,DWORD PTR ds:0xd3e132
  419d9d:	loop   0x419d39
  419d9f:	nop
  419da0:	std    
  419da1:	xchg   edi,eax
  419da2:	sbb    cl,BYTE PTR [edx+0x619b00ee]
  419da8:	data16 jb 0x419dd5
  419dab:	dec    ebx
  419dac:	pop    ds
  419dad:	cmp    BYTE PTR [ebx],cl
  419daf:	cmp    al,0x58
  419db1:	dec    edi
  419db2:	and    al,0x0
  419db4:	fcom   QWORD PTR [ecx+0x5edc28]
  419dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dbb:	in     eax,dx
  419dbc:	mov    WORD PTR [edx-0x27b21f33],gs
  419dc2:	add    BYTE PTR [edi-0x5241fc8e],cl
  419dc8:	iret   
  419dc9:	pop    ecx
  419dca:	inc    esp
  419dcb:	add    dh,ch
  419dcd:	enter  0x1692,0xe5
  419dd1:	jg     0x419ddd
  419dd3:	fld    QWORD PTR [eax]
  419dd5:	clc    
  419dd6:	cmp    cl,BYTE PTR [esi-0x75d48262]
  419ddc:	loopne 0x419e1a
  419dde:	dec    esp
  419ddf:	or     DWORD PTR [eax],eax
  419de1:	xlat   BYTE PTR ds:[ebx]
  419de2:	xor    ebx,DWORD PTR [edi+0x731f8b97]
  419de8:	out    0xed,al
  419dea:	add    BYTE PTR [esi-0x76750af2],ah
  419df0:	adc    DWORD PTR [ebp+0x7ea03e1e],esi
  419df6:	xor    BYTE PTR [ecx+0x7c251839],0xf7
  419dfd:	ret    0xd401
  419e00:	mov    bl,0xdd
  419e02:	retf   0x524e
  419e05:	shl    DWORD PTR [eax],cl
  419e07:	lea    esp,[edx+0x0]
  419e0a:	shl    ch,0x92
  419e0d:	xchg   ebx,eax
  419e0e:	and    al,0xa2
  419e10:	or     BYTE PTR [edi],ch
  419e12:	push   cs
  419e13:	ja     0x419d9d
  419e15:	push   ebx
  419e16:	mov    esp,0x96489dc0
  419e1b:	daa    
  419e1c:	lahf   
  419e1d:	jle    0x419e61
  419e1f:	add    esi,ebp
  419e21:	(bad)  
  419e22:	mov    dh,0x7f
  419e24:	sbb    ebx,DWORD PTR [ebp+0x65]
  419e27:	call   0x1548d69d
  419e2c:	je     0x419e27
  419e2e:	jecxz  0x419db1
  419e30:	loopne 0x419e22
  419e32:	and    al,0xc2
  419e34:	dec    esi
  419e35:	or     ebx,DWORD PTR [ecx+0x7a]
  419e38:	jmp    0xa806:0xccdb03c5
  419e3f:	xchg   esp,eax
  419e40:	and    ebx,edx
  419e42:	add    BYTE PTR [esi],dh
  419e44:	ins    BYTE PTR es:[edi],dx
  419e45:	push   ebx
  419e46:	clc    
  419e47:	or     cl,BYTE PTR [edx-0x29]
  419e4a:	stos   BYTE PTR es:[edi],al
  419e4b:	pop    ds
  419e4c:	inc    ebp
  419e4d:	xchg   esi,eax
  419e4e:	jnp    0x419e4c
  419e50:	add    BYTE PTR [edi+ebx*4-0x54],al
  419e54:	test   al,0xb3
  419e56:	inc    esi
  419e57:	mov    ah,0xb0
  419e59:	mov    dh,0xb0
  419e5b:	mov    BYTE PTR [eax],0x93
  419e5e:	jb     0x419de4
  419e60:	shr    cl,0x8d
  419e63:	fs sti 
  419e65:	add    BYTE PTR [esi-0x774f8325],ah
  419e6b:	cmp    eax,0x21c83ce
  419e70:	xlat   BYTE PTR ds:[ebx]
  419e71:	dec    edi
  419e72:	add    BYTE PTR [esi],ah
  419e74:	push   esp
  419e75:	push   esi
  419e76:	mov    bl,0xe8
  419e78:	push   ebp
  419e79:	add    DWORD PTR [edi+0xaa8e5ab],ebx
  419e7f:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  419e81:	in     al,dx
  419e82:	cdq    
  419e83:	push   edi
  419e84:	add    ah,ch
  419e86:	lods   al,BYTE PTR ds:[esi]
  419e87:	inc    eax
  419e88:	or     al,0xf6
  419e8a:	iret   
  419e8b:	pop    edx
  419e8c:	xor    al,BYTE PTR [eax]
  419e8e:	mov    ebx,DWORD PTR [eax]
  419e90:	arpl   WORD PTR [eax-0x897b801],bx
  419e96:	push   es
  419e97:	int3   
  419e98:	sbb    dl,dh
  419e9a:	lods   eax,DWORD PTR ds:[esi]
  419e9b:	xchg   BYTE PTR [edx+eax*1],dh
  419e9e:	outs   dx,BYTE PTR ds:[esi]
  419e9f:	in     eax,dx
  419ea0:	(bad)  [ebx+0x12]
  419ea3:	aaa    
  419ea4:	shl    BYTE PTR [esp+ecx*2],0x74
  419ea8:	add    BYTE PTR [ebp+0x5e],ch
  419eab:	cmp    BYTE PTR [ebx-0x57d495ca],ch
  419eb1:	clc    
  419eb2:	js     0x419ed2
  419eb4:	push   edi
  419eb5:	cs out 0xb9,al
  419eb8:	cmp    ch,0x9d
  419ebb:	hlt    
  419ebc:	sub    BYTE PTR [edi-0x4b],0x70
  419ec0:	add    dl,dh
  419ec2:	es xchg ebp,eax
  419ec4:	lea    ebp,[ebx+0xf]
  419ec7:	inc    esi
  419ec8:	or     al,BYTE PTR [eax]
  419eca:	stos   DWORD PTR es:[edi],eax
  419ecb:	scas   eax,DWORD PTR es:[edi]
  419ecc:	out    0x65,al
  419ece:	fstp   TBYTE PTR ds:0xe21d0880
  419ed4:	and    ch,ah
  419ed6:	inc    eax
  419ed7:	imul   ebx,DWORD PTR [ebx-0xa9bde72],0x783c1602
  419ee1:	xor    BYTE PTR [eax+0x5d],ah
  419ee4:	jecxz  0x419e6f
  419ee6:	enter  0xc6e3,0x24
  419eea:	out    0xfb,al
  419eec:	add    BYTE PTR [eax],bh
  419eee:	ins    BYTE PTR es:[edi],dx
  419eef:	std    
  419ef0:	pop    edx
  419ef1:	xor    DWORD PTR [ebp+0x4f0339de],eax
  419ef7:	mov    ?,WORD PTR [ebp+0x35]
  419efa:	add    ax,0x4ba8
  419efe:	cmp    ch,ch
  419f00:	add    bh,dl
  419f02:	push   eax
  419f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f04:	mov    edi,0x8f022201
  419f09:	add    BYTE PTR [edx-0x62],cl
  419f0c:	nop
  419f0d:	mov    DWORD PTR [esi+0x27e2158],edx
  419f13:	push   0xac16cd5f
  419f18:	mov    eax,ds:0x71742be0
  419f1d:	sbb    al,0x18
  419f1f:	cdq    
  419f20:	or     al,0xc0
  419f22:	xor    BYTE PTR [ecx+0x444d41eb],0x3
  419f29:	addr16 cs push 0xf04e050a
  419f30:	pop    edx
  419f31:	std    
  419f32:	pop    esi
  419f33:	add    ch,BYTE PTR [eax]
  419f35:	add    DWORD PTR [ebx-0x58],eax
  419f38:	sbb    bh,BYTE PTR [esi+0xec93540]
  419f3e:	add    BYTE PTR [edx-0x4dca6a38],dl
  419f44:	jp     0x419fa6
  419f46:	icebp  
  419f47:	add    BYTE PTR [ebp+0x7b675f18],cl
  419f4d:	or     cl,al
  419f4f:	sub    eax,0xbcc33e
  419f54:	dec    esp
  419f55:	cdq    
  419f56:	fdiv   DWORD PTR [eax+0x7c]
  419f59:	adc    DWORD PTR [ecx+eax*1-0x39],eax
  419f5d:	adc    eax,DWORD PTR [ebx-0x5a]
  419f60:	test   al,0x5d
  419f62:	stos   DWORD PTR es:[edi],eax
  419f63:	in     al,dx
  419f64:	bound  ebx,QWORD PTR [ebp+0x2d4fb400]
  419f6a:	xor    edi,DWORD PTR [ebx+0x11757]
  419f70:	jns    0x419fc7
  419f72:	outs   dx,BYTE PTR ds:[esi]
  419f73:	mov    ds:0xec0f2f37,eax
  419f78:	add    DWORD PTR [eax+0x290bca66],ebp
  419f7e:	pop    esp
  419f7f:	(bad)  
  419f82:	inc    BYTE PTR [eax]
  419f84:	cli    
  419f85:	lock fisub WORD PTR [edx-0x1ffd429b]
  419f8c:	add    BYTE PTR [edx+0x6d1bfc20],al
  419f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f93:	xor    cl,ah
  419f95:	add    dl,bh
  419f97:	lods   eax,DWORD PTR ds:[esi]
  419f98:	mov    al,ds:0xd279f362
  419f9d:	adc    al,BYTE PTR [eax]
  419f9f:	(bad)  
  419fa0:	or     eax,0xbbd4cdc1
  419fa5:	mov    edx,0xfa0401c5
  419faa:	pop    ebp
  419fab:	mov    dl,0x74
  419fad:	xor    eax,0xfffffff8
  419fb0:	dec    ecx
  419fb1:	pop    esi
  419fb2:	add    BYTE PTR [edx+0x1f],dl
  419fb5:	test   BYTE PTR [ebp-0x32],ch
  419fb8:	out    0x12,eax
  419fba:	leave  
  419fbb:	add    BYTE PTR [ecx+edi*4+0x3d7ee94a],cl
  419fc2:	fimul  DWORD PTR [ebx]
  419fc4:	dec    eax
  419fc5:	mov    edx,0x2d9b0057
  419fca:	fsubrp st(4),st
  419fcc:	lds    ecx,FWORD PTR [ebp+0x797313f6]
  419fd2:	iret   
  419fd3:	add    DWORD PTR [esi-0x5c5feb9d],edx
  419fd9:	shr    ah,1
  419fdb:	pop    ebx
  419fdc:	add    BYTE PTR [edi-0x1723bcfc],ch
  419fe2:	mov    ecx,0x5f00f8be
  419fe7:	(bad)  
  419fe8:	retf   0xc882
  419feb:	out    dx,eax
  419fec:	aam    0x86
  419fee:	pop    es
  419fef:	(bad)  
  419ff0:	popf   
  419ff1:	loopne 0x41a041
  419ff3:	frstor [eax+0x7672d903]
  419ff9:	push   cs
  419ffa:	in     eax,dx
  419ffb:	(bad)  
  419ffc:	in     al,dx
  419ffd:	(bad)  
  419ffe:	(bad)  
  419fff:	add    DWORD PTR [edi+esi*1+0x65],esi
  41a003:	jge    0x419fa7
  41a005:	in     al,dx
  41a006:	inc    esi
  41a007:	mov    WORD PTR [eax],es
  41a009:	xor    edi,DWORD PTR [eax+0x51]
  41a00c:	shr    BYTE PTR [ebx-0x5c],cl
  41a00f:	test   al,0x29
  41a011:	add    bh,bh
  41a013:	mov    bh,al
  41a015:	mov    ss,WORD PTR [edi]
  41a017:	pop    edx
  41a018:	cmp    al,0x7b
  41a01a:	add    BYTE PTR ds:0x760c03cd,ah
  41a020:	rcl    BYTE PTR ds:0x4f5b003d,cl
  41a026:	test   al,0xf
  41a028:	pop    eax
  41a029:	mov    bh,0xfe
  41a02b:	mov    ebx,0x3e30c33a
  41a030:	inc    ecx
  41a031:	add    BYTE PTR [ecx],dl
  41a033:	xor    DWORD PTR [eax+0x203337f6],edx
  41a039:	add    BYTE PTR [eax+0x16],dh
  41a03c:	or     al,0x9e
  41a03e:	imul   esp,DWORD PTR [edi+esi*2],0xffffffad
  41a042:	add    DWORD PTR [edi+eiz*8],ebx
  41a045:	xchg   BYTE PTR [ecx-0x49],ch
  41a048:	das    
  41a049:	aam    0xe0
  41a04b:	push   esp
  41a04c:	push   ecx
  41a04d:	add    al,ah
  41a04f:	and    BYTE PTR [ebx],0x15
  41a052:	outs   dx,BYTE PTR ds:[esi]
  41a053:	adc    edi,DWORD PTR [edx]
  41a055:	xor    BYTE PTR [esi+0x1],bh
  41a058:	push   cs
  41a059:	or     dh,BYTE PTR [ebx]
  41a05b:	daa    
  41a05c:	pop    ds
  41a05d:	ret    0x2c81
  41a060:	fldenv [eax-0x6]
  41a063:	sbb    bh,BYTE PTR [edi+0x1b107300]
  41a069:	push   ds
  41a06a:	inc    ebx
  41a06b:	and    BYTE PTR [edi-0x19],al
  41a06e:	add    BYTE PTR ds:0xe52cba96,bl
  41a074:	hlt    
  41a075:	mov    ds:0x9df200fd,al
  41a07a:	sar    BYTE PTR [edx],1
  41a07c:	add    edx,DWORD PTR [eax]
  41a07e:	fadd   QWORD PTR ds:0xf143fa1e
  41a084:	mov    esi,0xb59fe200
  41a089:	mov    eax,0x726e698
  41a08e:	xchg   edx,eax
  41a08f:	push   ds
  41a090:	iret   
  41a091:	repz ja 0x41a055
  41a094:	pop    esi
  41a095:	adc    al,0x7d
  41a097:	aam    0xed
  41a099:	int3   
  41a09a:	add    BYTE PTR [eax+ebp*4-0x152ecdf8],dh
  41a0a1:	lahf   
  41a0a2:	popf   
  41a0a3:	pop    ds
  41a0a4:	pushf  
  41a0a5:	add    al,0x74
  41a0a7:	rcr    bh,0x6a
  41a0aa:	out    dx,al
  41a0ab:	loope  0x41a0b4
  41a0ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0ae:	add    dl,dh
  41a0b0:	cmp    edx,edx
  41a0b2:	sahf   
  41a0b3:	push   ebp
  41a0b4:	or     ah,BYTE PTR [ebp+0x3bbb4864]
  41a0ba:	add    al,al
  41a0bc:	mov    dl,0x2b
  41a0be:	dec    esp
  41a0bf:	das    
  41a0c0:	lock mov al,ds:0xff684b00
  41a0c6:	mov    gs,WORD PTR [esi+edi*1]
  41a0c9:	pop    ss
  41a0ca:	pop    ecx
  41a0cb:	adc    dh,BYTE PTR [ecx+0x1700017d]
  41a0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0d2:	push   edx
  41a0d3:	sub    DWORD PTR [ecx+esi*8-0x1e5149e3],ecx
  41a0da:	sar    BYTE PTR [edx+ebp*2+0x25],0xee
  41a0df:	mov    eax,ds:0x21360042
  41a0e4:	sbb    edi,DWORD PTR [ebp+0x678b7a6d]
  41a0ea:	jns    0x41a113
  41a0ec:	add    cl,ah
  41a0ee:	dec    ebp
  41a0ef:	push   ds
  41a0f0:	sbb    edx,eax
  41a0f2:	(bad)  
  41a0f3:	in     al,dx
  41a0f4:	fadd   DWORD PTR [eax]
  41a0f6:	mov    dl,BYTE PTR [eax+0x4b73538d]
  41a0fc:	rol    DWORD PTR fs:[eax],0x7b
  41a100:	(bad)  
  41a102:	sub    dh,BYTE PTR [edx+0x957624]
  41a108:	or     al,0x55
  41a10a:	and    ebp,DWORD PTR [ebx-0x1e]
  41a10d:	lds    ecx,FWORD PTR [edi-0x294eff2d]
  41a113:	jecxz  0x41a0cd
  41a115:	das    
  41a116:	inc    eax
  41a117:	(bad)  
  41a118:	jmp    0x41a11a
  41a11a:	push   edi
  41a11b:	xchg   esp,eax
  41a11c:	rcr    BYTE PTR [eax-0x11],1
  41a11f:	pop    ss
  41a120:	push   edx
  41a121:	cmp    bl,BYTE PTR [edi+eax*8]
  41a124:	in     eax,0xdc
  41a126:	add    BYTE PTR [eax+0x1ce3316c],bh
  41a12c:	xchg   esp,eax
  41a12d:	add    BYTE PTR [eax-0x5506f90d],cl
  41a133:	cmc    
  41a134:	rcr    DWORD PTR [esi+0x74831d00],cl
  41a13a:	(bad)  
  41a13b:	fldcw  WORD PTR [eax+0x5b001f24]
  41a141:	xchg   ebx,eax
  41a142:	pop    esp
  41a143:	int3   
  41a144:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41a146:	daa    
  41a147:	test   BYTE PTR [eax],0x3e
  41a14a:	cmp    BYTE PTR [edi-0x340663de],dh
  41a150:	and    esp,DWORD PTR [eax+0x50cf1d8b]
  41a156:	mov    eax,ds:0x1e0355e2
  41a15b:	adc    al,0x60
  41a15d:	jb     0x41a1af
  41a15f:	push   cs
  41a160:	mov    BYTE PTR [eax+0x1600d9d3],ch
  41a166:	mov    ebx,0xaac23934
  41a16b:	xchg   edx,eax
  41a16c:	test   BYTE PTR [esi],0xa0
  41a16f:	mov    cl,0x5b
  41a171:	mov    edx,0xee5c69a0
  41a176:	imul   ebp,esp,0x0
  41a179:	inc    esi
  41a17a:	sbb    eax,0x7d299310
  41a17f:	sub    BYTE PTR [edx],bl
  41a181:	add    cl,dl
  41a183:	int    0x25
  41a185:	jmp    0xc139b436
  41a18a:	dec    eax
  41a18b:	fwait
  41a18c:	mov    ds:0xf0944900,eax
  41a191:	xlat   BYTE PTR ds:[ebx]
  41a192:	push   ebp
  41a193:	stc    
  41a194:	inc    DWORD PTR [ebx]
  41a196:	cli    
  41a197:	jne    0x41a11a
  41a199:	imul   edx,DWORD PTR [eax+0x30],0xffffff98
  41a19d:	sbb    dh,BYTE PTR [esi-0x2]
  41a1a0:	add    al,cl
  41a1a2:	call   0x36e06a79
  41a1a7:	or     BYTE PTR [edi-0x390e7c65],0xf8
  41a1ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1af:	add    dl,al
  41a1b1:	test   eax,0xfbdcaab
  41a1b6:	sub    al,0xf9
  41a1b8:	add    BYTE PTR [ebx+0xd],bh
  41a1bb:	inc    esi
  41a1bc:	cld    
  41a1bd:	repnz xor al,0xe1
  41a1c0:	js     0x41a1fb
  41a1c2:	ss jno 0x41a14c
  41a1c5:	rcr    cl,cl
  41a1c7:	(bad)  
  41a1c8:	fsubrp st(0),st
  41a1ca:	cdq    
  41a1cb:	(bad)  
  41a1cc:	cmc    
  41a1cd:	lea    esi,[edi+ebx*2+0x0]
  41a1d1:	cli    
  41a1d2:	clc    
  41a1d3:	xor    DWORD PTR [ecx+0x431f7e27],eax
  41a1d9:	add    BYTE PTR [ecx-0x8a62399],ah
  41a1df:	jmp    0x41a166
  41a1e1:	sbb    BYTE PTR [eax-0x29],cl
  41a1e4:	add    bh,BYTE PTR [ecx]
  41a1e6:	push   ecx
  41a1e7:	add    BYTE PTR [eax],dh
  41a1e9:	stos   BYTE PTR es:[edi],al
  41a1ea:	(bad)  
  41a1eb:	push   edx
  41a1ec:	test   BYTE PTR [edi+ecx*8+0xf],ch
  41a1f0:	or     BYTE PTR ds:0x2d60431,0xf2
  41a1f7:	dec    eax
  41a1f8:	or     al,0x29
  41a1fa:	arpl   WORD PTR [esi-0x68],sp
  41a1fd:	(bad)  
  41a1fe:	mov    dh,0xee
  41a200:	cmp    eax,0x7b00a056
  41a205:	daa    
  41a206:	push   ss
  41a207:	lahf   
  41a208:	cld    
  41a209:	cmp    ebp,edi
  41a20b:	add    BYTE PTR [ebp+eiz*8-0xf01b649],dh
  41a212:	mov    ecx,0x48987006
  41a217:	dec    DWORD PTR [eax+0x0]
  41a21a:	repz popa 
  41a21c:	sub    eax,0x1b1e091a
  41a221:	add    dh,ch
  41a223:	push   0x744bd834
  41a228:	mul    BYTE PTR [edx+0x3aff9600]
  41a22e:	loop   0x41a256
  41a230:	jmp    0x71ba:0xe903cc65
  41a237:	pop    eax
  41a238:	pop    ds
  41a239:	arpl   WORD PTR [eax+0x14b175b5],di
  41a23f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a240:	test   BYTE PTR [esp+esi*4],ah
  41a243:	add    BYTE PTR [esi],bl
  41a245:	(bad)  
  41a247:	(bad)  
  41a249:	push   ebx
  41a24a:	stc    
  41a24b:	add    BYTE PTR [edi-0x6b],ch
  41a24e:	(bad)  
  41a251:	es data16 xor al,0x3
  41a255:	int    0xd6
  41a257:	pop    ebx
  41a258:	inc    edx
  41a259:	aad    0x65
  41a25b:	clc    
  41a25c:	adc    ecx,DWORD PTR [ecx+0x4e]
  41a25f:	or     esp,DWORD PTR ds:0x80f62a6c
  41a265:	stos   DWORD PTR es:[edi],eax
  41a266:	test   DWORD PTR [edi+0x5c095907],edi
  41a26c:	sbb    DWORD PTR [ebx+0x24],eax
  41a26f:	xor    bl,0xe3
  41a272:	fwait
  41a273:	xor    edi,DWORD PTR [edx]
  41a275:	add    BYTE PTR [edi-0xe],bl
  41a278:	addr16 mov bl,0xe
  41a27b:	adc    eax,0xab0771f4
  41a280:	ret    0x395e
  41a283:	push   esp
  41a284:	lock push edx
  41a286:	push   ds
  41a287:	mov    eax,ds:0x85dba061
  41a28c:	(bad)  
  41a28d:	adc    al,0x1
  41a28f:	sub    edi,DWORD PTR [edx-0x3a]
  41a292:	add    BYTE PTR [ebx-0x32],al
  41a295:	pop    ds
  41a296:	sbb    al,0xb7
  41a298:	shl    DWORD PTR [edx+0x793d3a],cl
  41a29e:	or     BYTE PTR [edi+0x2e],bl
  41a2a1:	and    BYTE PTR [ebx+0x600975d],0x78
  41a2a8:	in     eax,dx
  41a2a9:	jecxz  0x41a290
  41a2ab:	xor    al,0xae
  41a2ad:	ret    
  41a2ae:	add    BYTE PTR [ebp+0xd1e6b51],dh
  41a2b4:	mov    DWORD PTR [ebx-0x34],ecx
  41a2b7:	add    esp,edx
  41a2b9:	cmp    DWORD PTR [edi+ecx*8],edx
  41a2bc:	mov    edi,edi
  41a2be:	mov    edi,0xae36e8ef
  41a2c3:	cmp    BYTE PTR [ebp+0x76],bh
  41a2c6:	push   cs
  41a2c7:	mov    eax,0x2039d695
  41a2cc:	sar    DWORD PTR [esi+eiz*4+0x260f2022],0xa5
  41a2d4:	lahf   
  41a2d5:	stos   BYTE PTR es:[edi],al
  41a2d6:	loopne 0x41a306
  41a2d8:	cmp    bl,bl
  41a2da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2db:	arpl   WORD PTR [eax],ax
  41a2dd:	not    DWORD PTR [esi-0x15104f52]
  41a2e3:	mov    al,BYTE PTR [eax+0x74625500]
  41a2e9:	mov    ebx,ebp
  41a2eb:	dec    ebx
  41a2ec:	sbb    BYTE PTR [esi+0x5cee2d0e],bl
  41a2f2:	dec    ecx
  41a2f3:	loopne 0x41a2ae
  41a2f5:	loop   0x41a2dc
  41a2f7:	pinsrw mm0,WORD PTR [eax],0xb7
  41a2fb:	pop    ebx
  41a2fc:	add    DWORD PTR [ebp-0x9],esp
  41a2ff:	push   esp
  41a300:	pop    edx
  41a301:	repnz add BYTE PTR [eax+0x1a9da860],cl
  41a308:	adc    DWORD PTR [edx],eax
  41a30a:	add    DWORD PTR [ebx],0xffffff8b
  41a30d:	mov    ds:0x14ecf5cc,al
  41a312:	test   al,0x6d
  41a314:	fisttp QWORD PTR [esi+eiz*8-0x4c]
  41a318:	add    al,BYTE PTR [eax-0x28]
  41a31b:	repz arpl WORD PTR [ebx+0x767e8f],di
  41a322:	(bad)  
  41a323:	out    dx,al
  41a324:	adc    BYTE PTR [ecx],0x9d
  41a327:	add    BYTE PTR [bp+di+0x7eba],ah
  41a32c:	dec    eax
  41a32d:	mov    DWORD PTR [edi-0x55],ecx
  41a330:	rol    BYTE PTR [eax],1
  41a332:	and    al,0x1e
  41a334:	stc    
  41a335:	or     eax,0xc1aff7f8
  41a33a:	add    ecx,DWORD PTR [ebp+0x2e]
  41a33d:	mov    cl,0x6b
  41a33f:	dec    ebx
  41a340:	mov    al,es:0x841a77
  41a346:	test   al,0xae
  41a348:	add    DWORD PTR [edi],ecx
  41a34a:	sub    eax,0x2ef643
  41a34f:	inc    eax
  41a350:	scas   eax,DWORD PTR es:[edi]
  41a351:	dec    ebx
  41a352:	add    ebx,esp
  41a354:	xchg   esp,eax
  41a355:	jbe    0x41a35e
  41a357:	add    edx,DWORD PTR ds:0x9ba5b03a
  41a35d:	popa   
  41a35e:	mov    eax,0x8c3dd1
  41a363:	enter  0xc537,0x23
  41a367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a368:	cmp    edx,ecx
  41a36a:	das    
  41a36b:	add    al,0x4f
  41a36d:	push   esp
  41a36e:	and    BYTE PTR [ecx+0x41e4c006],ch
  41a374:	jnp    0x41a314
  41a376:	or     esi,DWORD PTR [ebx+ecx*8-0x617f90a3]
  41a37d:	(bad)  
  41a37e:	mov    eax,0x4e1c8679
  41a383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a384:	jecxz  0x41a30d
  41a386:	test   ch,al
  41a388:	das    
  41a389:	ror    ah,1
  41a38b:	pusha  
  41a38c:	ret    
  41a38d:	loop   0x41a38f
  41a38f:	xchg   edi,eax
  41a390:	push   esp
  41a391:	les    edi,FWORD PTR [eax]
  41a393:	dec    cx
  41a395:	sub    al,0x31
  41a397:	add    BYTE PTR [ebx-0x1b],bh
  41a39a:	in     al,0xa0
  41a39c:	(bad)  
  41a39d:	int3   
  41a39e:	push   ebp
  41a39f:	add    DWORD PTR [eax],eax
  41a3a1:	lock aam 0x71
  41a3a4:	loopne 0x41a3c3
  41a3a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3a7:	jmp    DWORD PTR [esi+0x0]
  41a3aa:	push   cs
  41a3ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3ac:	shr    DWORD PTR [ecx-0x552cb6bd],0x1f
  41a3b3:	jg     0x41a379
  41a3b5:	outs   dx,DWORD PTR ds:[esi]
  41a3b6:	inc    edi
  41a3b7:	inc    edx
  41a3b8:	and    BYTE PTR [eax-0x4fd6176d],dl
  41a3be:	hlt    
  41a3bf:	push   ebx
  41a3c0:	mov    ah,0x0
  41a3c2:	jl     0x41a3a7
  41a3c4:	sub    eax,0x2e14819e
  41a3c9:	(bad)  
  41a3ca:	jle    0x41a3b9
  41a3cc:	add    BYTE PTR [esi-0x45c28f3a],al
  41a3d2:	xor    BYTE PTR [ebx-0x2519e160],dl
  41a3d8:	std    
  41a3d9:	push   ds
  41a3da:	and    BYTE PTR [edi],al
  41a3dc:	outs   dx,DWORD PTR ds:[esi]
  41a3dd:	cmp    al,ch
  41a3df:	loopne 0x41a382
  41a3e1:	retf   0xcef5
  41a3e4:	add    BYTE PTR [eax+0x40],ch
  41a3e7:	bound  ebx,QWORD PTR [edi+0x1733d367]
  41a3ed:	push   cs
  41a3ee:	inc    edx
  41a3ef:	int3   
  41a3f0:	ret    
  41a3f1:	(bad)  
  41a3f2:	and    bl,bh
  41a3f4:	mov    esp,es
  41a3f6:	cmp    bh,BYTE PTR [eax]
  41a3f8:	add    eax,ebp
  41a3fa:	fisub  WORD PTR [ebx+0x15]
  41a3fd:	in     al,dx
  41a3fe:	sub    al,0x86
  41a401:	(bad)  
  41a402:	daa    
  41a403:	add    BYTE PTR [eax],ch
  41a405:	dec    eax
  41a406:	mov    al,ds:0x8a493287
  41a40b:	mov    ebp,0x81b2f500
  41a410:	(bad)  
  41a412:	pop    eax
  41a413:	push   edx
  41a414:	xor    DWORD PTR [eax],eax
  41a416:	out    dx,al
  41a417:	test   al,0xab
  41a419:	xor    eax,0x4f112996
  41a41e:	cli    
  41a41f:	fstp   TBYTE PTR ds:0xf7000674
  41a425:	std    
  41a426:	pop    ebp
  41a427:	mov    ds:0xed49e32,al
  41a42c:	dec    esp
  41a42d:	and    BYTE PTR [esp+eax*2-0x665fb240],dh
  41a434:	(bad)  
  41a436:	add    BYTE PTR [eax+0x18c921df],ch
  41a43c:	dec    ecx
  41a43d:	jo     0x41a481
  41a43f:	cli    
  41a440:	call   0x200:0x5a701a98
  41a447:	xor    dl,0xf5
  41a44a:	inc    ebx
  41a44b:	arpl   WORD PTR [ebx-0x77],cx
  41a44e:	cmp    al,0xce
  41a450:	addr16 add al,cl
  41a453:	dec    esp
  41a454:	call   0x74e1ef2e
  41a459:	push   cs
  41a45a:	jg     0x41a451
  41a45c:	or     BYTE PTR [ebx-0x60],bl
  41a45f:	fmul   st,st(4)
  41a461:	sbb    al,0xec
  41a463:	in     eax,dx
  41a464:	add    ebp,DWORD PTR [ecx+0x6b]
  41a467:	xor    bh,BYTE PTR [eax-0x27]
  41a46a:	in     eax,0x98
  41a46c:	cmp    eax,0xd20191c7
  41a471:	pop    esi
  41a472:	test   DWORD PTR [edi-0x26],edi
  41a475:	loope  0x41a49b
  41a477:	call   0x5d42a104
  41a47c:	stos   BYTE PTR es:[edi],al
  41a47d:	sbb    al,0xf0
  41a47f:	int3   
  41a480:	inc    esp
  41a481:	mov    ebx,ebp
  41a483:	add    ch,bh
  41a485:	jo     0x41a4d2
  41a487:	dec    esi
  41a488:	rcr    DWORD PTR [esi+0x1a],1
  41a48b:	nop
  41a48c:	add    BYTE PTR [eax-0x64],cl
  41a48f:	inc    edx
  41a490:	in     eax,dx
  41a491:	test   dh,ch
  41a493:	mov    ebp,0x18d400ca
  41a498:	jbe    0x41a4ff
  41a49a:	hlt    
  41a49b:	sub    ah,BYTE PTR [ebp-0x4510ffd0]
  41a4a1:	mov    DWORD PTR [edi+0x75a65afe],0x199c5600
  41a4ab:	dec    eax
  41a4ac:	gs add al,0xe4
  41a4af:	pop    ds
  41a4b0:	add    BYTE PTR [ecx-0x68369c2f],bl
  41a4b6:	lds    edi,FWORD PTR [esi-0x747ffbb]
  41a4bc:	mov    ebx,0x35cbd925
  41a4c1:	fadd   DWORD PTR [eax]
  41a4c3:	mov    ds,WORD PTR [edx-0x7d]
  41a4c6:	pop    ds
  41a4c7:	jmp    0x41a543
  41a4c9:	pop    ebx
  41a4ca:	xchg   DWORD PTR [eax],eax
  41a4cc:	loope  0x41a46b
  41a4ce:	nop
  41a4cf:	push   esi
  41a4d0:	(bad)  
  41a4d1:	pop    ecx
  41a4d2:	daa    
  41a4d3:	hlt    
  41a4d4:	pop    ss
  41a4d5:	mov    edi,0x2600fbd3
  41a4da:	mov    esi,0x123be61e
  41a4df:	add    BYTE PTR [edx],ch
  41a4e1:	outs   dx,DWORD PTR ds:[esi]
  41a4e2:	jle    0x41a479
  41a4e4:	lea    esi,[esi-0x7fb300b1]
  41a4ea:	add    ebx,DWORD PTR [esi]
  41a4ec:	pop    edx
  41a4ed:	hlt    
  41a4ee:	shl    BYTE PTR ds:0xfc2645fb,0xf6
  41a4f5:	add    al,0x4
  41a4f7:	mov    ebp,0x805870a2
  41a4fc:	inc    ebx
  41a4fd:	ins    DWORD PTR es:[edi],dx
  41a4fe:	push   0xffffffbc
  41a500:	aas    
  41a501:	and    BYTE PTR [ebx-0x2f4ce300],0xfa
  41a508:	adc    al,0x2
  41a50a:	pop    esp
  41a50b:	add    BYTE PTR ds:0x39113048,al
  41a511:	jbe    0x41a4c2
  41a513:	pop    eax
  41a514:	add    edi,DWORD PTR [ebp+0x2a]
  41a517:	dec    esp
  41a518:	stos   BYTE PTR es:[edi],al
  41a519:	or     BYTE PTR fs:[eax+0x78ae09],ch
  41a520:	lahf   
  41a521:	fsubr  DWORD PTR [eax-0x2ab6d9c6]
  41a527:	popa   
  41a528:	or     DWORD PTR [ebp-0x7f63ea21],ebp
  41a52e:	imul   ecx,DWORD PTR [esi+0x7a5f8b],0x73c989e3
  41a538:	out    dx,eax
  41a539:	and    dl,0x2b
  41a53c:	add    bh,bl
  41a53e:	add    al,0x6e
  41a540:	or     eax,eax
  41a542:	push   edi
  41a543:	pushf  
  41a544:	and    BYTE PTR [eax],al
  41a546:	mov    bh,0x56
  41a548:	or     al,0x1b
  41a54a:	je     0x41a4da
  41a54c:	jge    0x41a5aa
  41a54e:	add    esp,esi
  41a550:	stc    
  41a551:	mov    ebx,0xdfffd81f
  41a556:	and    DWORD PTR [eax],esi
  41a558:	clc    
  41a559:	add    cl,ah
  41a55b:	add    dl,dh
  41a55d:	dec    edi
  41a55e:	mov    ch,0xaa
  41a560:	mov    WORD PTR [edi-0x2dffef7d],ss
  41a566:	call   0xbd3136ab
  41a56b:	jecxz  0x41a5db
  41a56d:	add    BYTE PTR [edx+0x52ac25c0],dh
  41a573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a574:	dec    ecx
  41a575:	jg     0x41a578
  41a577:	sbb    al,0x37
  41a579:	sbb    bh,BYTE PTR [ecx+0x55]
  41a57c:	mov    al,0xe2
  41a57e:	cld    
  41a57f:	sub    BYTE PTR [ebx+0x7b402a00],bh
  41a585:	adc    eax,0x938d641e
  41a58a:	add    BYTE PTR [edx-0x42ee1c0f],cl
  41a590:	jne    0x41a51e
  41a592:	inc    edx
  41a593:	add    al,dh
  41a595:	xor    eax,DWORD PTR [esi]
  41a597:	sti    
  41a598:	push   ss
  41a599:	js     0x41a591
  41a59b:	int    0x28
  41a59d:	aam    0xaf
  41a59f:	retf   
  41a5a0:	push   ds
  41a5a1:	imul   ebp,edx,0xffffffab
  41a5a4:	add    BYTE PTR [ebp+0x1b1a34a6],bh
  41a5aa:	repnz (bad) 
  41a5ac:	mov    eax,0xcc87fb00
  41a5b1:	adc    ebp,DWORD PTR [edx]
  41a5b3:	sbb    esi,esi
  41a5b5:	cmp    BYTE PTR [eax],al
  41a5b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b8:	sub    DWORD PTR [ecx-0x43e212f6],ebx
  41a5be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5bf:	pop    eax
  41a5c0:	inc    edi
  41a5c1:	inc    ebp
  41a5c2:	add    BYTE PTR [ebp+0x1a],bl
  41a5c5:	popf   
  41a5c6:	adc    eax,0xabf463
  41a5cb:	push   ebp
  41a5cc:	pop    eax
  41a5cd:	mov    bl,0x6d
  41a5cf:	and    dl,BYTE PTR [ecx]
  41a5d1:	jns    0x41a63a
  41a5d3:	add    ebp,DWORD PTR [ecx+0x75eb1e65]
  41a5d9:	mov    ebx,0x2b55a7c8
  41a5de:	add    ah,ah
  41a5e0:	inc    ebx
  41a5e1:	inc    ecx
  41a5e2:	xchg   esp,eax
  41a5e3:	mov    bh,0x91
  41a5e5:	adc    dh,al
  41a5e7:	add    BYTE PTR [edi],ah
  41a5e9:	jp     0x41a59d
  41a5eb:	inc    edi
  41a5ec:	xchg   esi,eax
  41a5ed:	loope  0x41a5b1
  41a5ef:	fadd   QWORD PTR [eax]
  41a5f1:	and    al,0x14
  41a5f3:	ret    
  41a5f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5f5:	jle    0x41a665
  41a5f7:	jo     0x41a66c
  41a5f9:	add    BYTE PTR [edi+0x39644066],bh
  41a5ff:	dec    edi
  41a600:	(bad)  
  41a601:	push   edi
  41a602:	add    BYTE PTR [esi],dl
  41a604:	pop    edi
  41a605:	enter  0x831e,0xd7
  41a609:	ja     0x41a5b7
  41a60b:	add    edx,ecx
  41a60d:	and    eax,0x950ce338
  41a612:	cwde   
  41a613:	aam    0xe9
  41a615:	mov    BYTE PTR [eax],0x71
  41a618:	and    BYTE PTR [esi-0xa],0x43
  41a61c:	sahf   
  41a61d:	aaa    
  41a61e:	rcl    DWORD PTR [edi],cl
  41a620:	and    al,ah
  41a622:	mov    ebx,0x15c0b700
  41a627:	push   es
  41a628:	outs   dx,BYTE PTR ds:[esi]
  41a629:	fadd   QWORD PTR [eax]
  41a62b:	mov    ebp,0x9e6a03ad
  41a630:	fld    QWORD PTR [edi+0x244603f6]
  41a636:	aas    
  41a637:	inc    ebx
  41a638:	retf   
  41a639:	hlt    
  41a63a:	fdiv   DWORD PTR [edi]
  41a63c:	mov    ebp,ebp
  41a63e:	or     esi,DWORD PTR [esi]
  41a640:	mov    eax,0x9e7075d5
  41a645:	hlt    
  41a646:	pop    es
  41a647:	add    BYTE PTR [ecx-0x24],dh
  41a64a:	or     eax,0x1a09a95c
  41a64f:	fldenv [esi]
  41a651:	mov    esp,DWORD PTR [edx]
  41a653:	mov    edx,0x42980c00
  41a658:	add    al,0x51
  41a65a:	dec    eax
  41a65b:	ds xchg edi,eax
  41a65d:	or     al,BYTE PTR [edx-0x6550f917]
  41a663:	inc    ebx
  41a664:	pusha  
  41a665:	pushf  
  41a666:	pop    ebp
  41a667:	sbb    DWORD PTR [eax],eax
  41a669:	mov    dh,0xba
  41a66b:	sbb    esp,DWORD PTR [edi+eax*2]
  41a66e:	or     BYTE PTR [esi+ebp*8+0x7e],dl
  41a672:	xchg   DWORD PTR [edi],ebx
  41a674:	cmp    DWORD PTR [eax+0x55],edx
  41a677:	inc    eax
  41a678:	shr    DWORD PTR [edx-0x78],1
  41a67b:	add    ecx,DWORD PTR [edx-0x7dd3f0b]
  41a681:	pop    esp
  41a683:	cli    
  41a684:	mov    al,ds:0x133e0a24
  41a689:	sub    al,0xb8
  41a68b:	add    DWORD PTR [edx-0x7a],ecx
  41a68e:	lods   al,BYTE PTR ds:[esi]
  41a68f:	cmp    eax,0x9ed701a
  41a694:	add    BYTE PTR [edi-0x58a7af4d],cl
  41a69a:	adc    BYTE PTR [esi],ah
  41a69c:	sbb    al,0x0
  41a69e:	idiv   DWORD PTR [ebx+0x5]
  41a6a1:	les    eax,FWORD PTR [ebp+0x713034]
  41a6a7:	mov    dl,0x35
  41a6a9:	inc    ebp
  41a6aa:	sbb    DWORD PTR [ebp+0x5a],edi
  41a6ad:	jo     0x41a68e
  41a6af:	out    dx,al
  41a6b0:	push   edx
  41a6b1:	add    BYTE PTR [ebx+0x15],cl
  41a6b4:	out    0x42,al
  41a6b6:	mov    al,ds:0x468f18
  41a6bb:	(bad)  
  41a6bd:	xchg   edi,eax
  41a6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6bf:	jmp    0x41a6bd
  41a6c1:	dec    edi
  41a6c2:	jbe    0x41a6c4
  41a6c4:	popf   
  41a6c5:	ds cli 
  41a6c7:	enter  0xf948,0xe7
  41a6cb:	jne    0x41a6cd
  41a6cd:	fcom   st(6)
  41a6cf:	sbb    al,0x70
  41a6d1:	out    dx,eax
  41a6d2:	inc    eax
  41a6d3:	sbb    BYTE PTR [ecx],0x2c
  41a6d6:	retf   0xcd6a
  41a6d9:	add    BYTE PTR [ebp+0x42ec142],bl
  41a6df:	add    eax,0x4ea82900
  41a6e4:	into   
  41a6e5:	sub    eax,0x5cf3fbaa
  41a6ea:	xlat   BYTE PTR ds:[ebx]
  41a6eb:	(bad)  
  41a6ed:	xor    DWORD PTR [edi+ebx*4],edi
  41a6f0:	cs or  al,0xd5
  41a6f3:	jo     0x41a6f5
  41a6f5:	aas    
  41a6f6:	imul   edx,DWORD PTR [esi+0xd71ee2f],0x6bae00a9
  41a700:	jge    0x41a758
  41a702:	add    al,0x91
  41a704:	xor    esp,DWORD PTR [eax+0x530bb571]
  41a70a:	into   
  41a70b:	jnp    0x41a68e
  41a70d:	add    BYTE PTR [edx+edx*4],dl
  41a710:	aad    0x27
  41a712:	and    al,BYTE PTR [eax]
  41a714:	(bad)  
  41a715:	push   0xffffffdd
  41a717:	pop    ebx
  41a718:	sub    DWORD PTR [ecx+0x73],esi
  41a71b:	in     eax,dx
  41a71c:	add    BYTE PTR ds:0x399f48cb,dh
  41a722:	pop    ecx
  41a723:	imul   eax,esp,0x468c5000
  41a729:	mov    ch,0x7b
  41a72b:	pushf  
  41a72c:	jg     0x41a725
  41a72e:	add    BYTE PTR [ebp+0x5e],cl
  41a731:	shr    DWORD PTR [edx],cl
  41a733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a734:	in     eax,0x79
  41a736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a737:	add    BYTE PTR [ebp-0x5d],bl
  41a73a:	daa    
  41a73b:	stos   BYTE PTR es:[edi],al
  41a73c:	xchg   ecx,eax
  41a73d:	cdq    
  41a73e:	xchg   ebp,eax
  41a73f:	icebp  
  41a740:	pop    es
  41a741:	les    ebx,FWORD PTR [esi-0x61]
  41a744:	jmp    0x41a75c
  41a746:	pusha  
  41a747:	or     cl,0x2b
  41a74a:	stc    
  41a74b:	add    BYTE PTR [ebx-0x28],ch
  41a74e:	aad    0x38
  41a750:	(bad)  
  41a751:	(bad)  
  41a752:	fld    TBYTE PTR [eax+eax*1+0x49]
  41a756:	xor    eax,ebp
  41a758:	int    0x78
  41a75a:	adc    bh,BYTE PTR [ecx+eiz*4]
  41a75d:	call   0xe449c640
  41a762:	dec    edx
  41a763:	test   DWORD PTR [eax],edx
  41a765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a766:	nop
  41a767:	xor    dl,0x7e
  41a76a:	fcmovne st,st(6)
  41a76c:	add    BYTE PTR [edx-0x56],ch
  41a76f:	mov    bl,0x79
  41a771:	push   edx
  41a772:	mov    esi,0xc200c517
  41a777:	ins    BYTE PTR es:[edi],dx
  41a778:	add    eax,0x8d14f3f1
  41a77d:	in     al,dx
  41a77e:	jle    0x41a77d
  41a780:	lock cli 
  41a782:	jno    0x41a787
  41a784:	cmp    al,0x83
  41a786:	ds (bad) 
  41a788:	ja     0x41a7d7
  41a78a:	mov    dl,0x20
  41a78c:	jl     0x41a71e
  41a78e:	rcr    DWORD PTR [ebx],1
  41a790:	xchg   DWORD PTR [edi],eax
  41a792:	enter  0x7908,0xa
  41a796:	test   DWORD PTR [eax+0x708371f6],0x50fb3e00
  41a7a0:	mov    ah,0xdc
  41a7a2:	dec    eax
  41a7a3:	aam    0x8d
  41a7a5:	pop    es
  41a7a6:	invd   
  41a7a8:	enter  0xa349,0x20
  41a7ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ad:	adc    eax,DWORD PTR [ebx+0x3f]
  41a7b0:	sbb    eax,0x3bde455f
  41a7b5:	sub    ch,0xae
  41a7b8:	outs   dx,DWORD PTR ds:[esi]
  41a7b9:	mov    ecx,0xf81d71c
  41a7be:	jne    0x41a821
  41a7c0:	and    DWORD PTR [edi+0x2c0539a0],ebx
  41a7c6:	sub    BYTE PTR [eax-0x29b1e300],dl
  41a7cc:	jb     0x41a836
  41a7ce:	mov    eax,ds:0x900b942
  41a7d3:	mov    dh,0xd4
  41a7d5:	fidivr DWORD PTR [edi]
  41a7d7:	inc    esi
  41a7d8:	push   cs
  41a7d9:	out    dx,eax
  41a7da:	add    DWORD PTR [ecx-0x21],edi
  41a7dd:	xor    eax,ecx
  41a7df:	push   ds
  41a7e0:	(bad)  
  41a7e1:	jmp    0x26aa:0xa12920
  41a7e8:	xchg   ecx,eax
  41a7e9:	jmp    0x41a7b8
  41a7eb:	mov    ch,0x59
  41a7ed:	adc    dl,BYTE PTR [eax+0x46c700cc]
  41a7f3:	mov    ebx,0x4da025ee
  41a7f8:	test   BYTE PTR [esi],ah
  41a7fa:	fisubr WORD PTR [ecx-0x651cffc0]
  41a800:	jmp    0x41a842
  41a802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a803:	push   edx
  41a804:	add    BYTE PTR [edx],cl
  41a806:	xor    eax,0x2cf88cd
  41a80b:	jnp    0x41a823
  41a80d:	add    dl,bl
  41a80f:	frstor [edi-0x5121a62]
  41a815:	or     al,0x0
  41a817:	je     0x41a83a
  41a819:	sti    
  41a81a:	xlat   BYTE PTR ds:[ebx]
  41a81b:	test   eax,0x7f3d2de7
  41a820:	jg     0x41a822
  41a822:	xchg   edx,eax
  41a823:	dec    ecx
  41a824:	imul   edi,edi,0x3f030b5b
  41a82a:	add    BYTE PTR [edi-0x63],al
  41a82d:	pop    ebp
  41a82e:	int3   
  41a82f:	ss jl  0x41a82c
  41a832:	sbb    eax,DWORD PTR [eax]
  41a834:	jmp    0xdc52:0x26607a07
  41a83b:	js     0x41a840
  41a83d:	and    BYTE PTR [ecx-0xb252cc0],0xe0
  41a844:	(bad)  
  41a845:	enter  0x5e,0x35
  41a849:	in     eax,0x86
  41a84b:	mov    edi,0xaf52a0f
  41a850:	add    BYTE PTR [ebx],dh
  41a852:	and    ah,al
  41a854:	frstor [eax]
  41a856:	xchg   ecx,eax
  41a857:	xchg   edi,eax
  41a858:	fild   DWORD PTR [eax]
  41a85a:	pop    ebx
  41a85b:	mov    ds:0x87d4de64,eax
  41a860:	imul   ebp,eax,0x0
  41a863:	adc    edi,DWORD PTR [edi+0x6fb172ea]
  41a869:	jae    0x41a8c8
  41a86b:	jno    0x41a8db
  41a86d:	add    dl,cl
  41a86f:	(bad)  
  41a870:	pop    eax
  41a871:	add    eax,DWORD PTR [esi+0x4a]
  41a874:	xor    al,0x3d
  41a876:	push   ds
  41a877:	xchg   ebp,eax
  41a878:	rcr    DWORD PTR [eax],0xc0
  41a87b:	scas   eax,DWORD PTR es:[edi]
  41a87c:	add    al,BYTE PTR [esi+ebx*1]
  41a87f:	ret    0xe680
  41a882:	gs cmp edx,edi
  41a885:	mov    eax,ds:0x86554580
  41a88a:	push   cs
  41a88b:	outs   dx,BYTE PTR ds:[esi]
  41a88c:	jmp    0x41a820
  41a88e:	aas    
  41a88f:	pop    ebx
  41a890:	cmp    BYTE PTR [eax],al
  41a892:	les    ebp,FWORD PTR [edi+0x3f58a381]
  41a898:	inc    BYTE PTR [eax]
  41a89a:	fwait
  41a89b:	test   DWORD PTR [edi-0xf],ecx
  41a89e:	idiv   BYTE PTR [edx]
  41a8a0:	loop   0x41a87b
  41a8a2:	dec    esp
  41a8a3:	ss test al,0x0
  41a8a6:	sub    eax,ebp
  41a8a8:	sub    BYTE PTR [ecx],bh
  41a8aa:	push   edi
  41a8ab:	scas   al,BYTE PTR es:[edi]
  41a8ac:	jl     0x41a8ec
  41a8ae:	rcr    BYTE PTR [esi+0x4ff59680],0xef
  41a8b5:	adc    ebp,DWORD PTR [esi+eax*1+0xf]
  41a8b9:	mov    esp,DWORD PTR [edx+ecx*1-0x1d]
  41a8bd:	loopne 0x41a8b5
  41a8bf:	sbb    dl,BYTE PTR [ecx-0x30]
  41a8c2:	loop   0x41a8a4
  41a8c4:	retf   
  41a8c5:	call   0xc213a913
  41a8ca:	mov    ds:0xaa79eca,eax
  41a8cf:	sti    
  41a8d0:	push   ds
  41a8d1:	test   DWORD PTR [ebx-0x65997fb3],eax
  41a8d7:	mov    dl,0x99
  41a8d9:	sbb    esp,DWORD PTR [eax-0x4]
  41a8dc:	add    BYTE PTR [eax],0x89
  41a8df:	or     esi,edx
  41a8e1:	(bad)  
  41a8e3:	pushf  
  41a8e4:	jnp    0x41a891
  41a8e6:	cmp    al,0x39
  41a8e8:	aas    
  41a8e9:	pop    es
  41a8ea:	ja     0x41a8da
  41a8ec:	pop    ecx
  41a8ed:	cwde   
  41a8ee:	loopne 0x41a8c3
  41a8f0:	sahf   
  41a8f1:	sub    al,0xa5
  41a8f3:	add    BYTE PTR [edi+esi*4],bh
  41a8f6:	je     0x41a884
  41a8f8:	jne    0x41a8d1
  41a8fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8fb:	lahf   
  41a8fc:	pop    es
  41a8fd:	mov    ebp,DWORD PTR [ecx]
  41a8ff:	inc    esp
  41a900:	adc    eax,0x77ac70dd
  41a905:	cmp    eax,0x1f6b00f1
  41a90a:	rcr    BYTE PTR [edx-0x48],1
  41a90d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a90e:	sbb    BYTE PTR [eax+0x417cad00],ch
  41a914:	arpl   WORD PTR [ebx+0x6a],di
  41a917:	fsubr  DWORD PTR [eax+0x0]
  41a91a:	es ja  0x41a8b2
  41a91d:	scas   eax,DWORD PTR es:[edi]
  41a91e:	(bad)  
  41a91f:	dec    ebp
  41a920:	mov    es,WORD PTR ds:0x390102fe
  41a926:	xchg   esi,eax
  41a927:	icebp  
  41a928:	das    
  41a929:	int    0x12
  41a92b:	mov    al,0xe4
  41a92d:	fldcw  WORD PTR [esi]
  41a92f:	add    al,dh
  41a931:	test   eax,0xe24a25d8
  41a936:	(bad)  
  41a937:	sub    BYTE PTR [eax],al
  41a939:	fcomp  QWORD PTR [ebp+0x7d]
  41a93c:	push   es
  41a93d:	push   edi
  41a93e:	adc    ecx,DWORD PTR [ecx+0x42]
  41a941:	add    BYTE PTR [eax-0x6cf06b2e],bh
  41a947:	dec    edx
  41a948:	sub    BYTE PTR [ebx],0x0
  41a94b:	dec    ebp
  41a94c:	mov    ds:0xdde11e55,eax
  41a951:	ror    DWORD PTR [edx],0x1
  41a954:	push   ecx
  41a955:	sub    DWORD PTR [ebx+0x54],edx
  41a958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a959:	out    0xde,al
  41a95b:	(bad)  
  41a95c:	lock dec edi
  41a95e:	ret    0xf0f4
  41a961:	fsubr  DWORD PTR [esi]
  41a963:	sub    eax,0xbe018916
  41a968:	and    DWORD PTR [esi+0x1b],0x47
  41a96c:	les    ecx,FWORD PTR [ecx]
  41a96e:	mov    al,ds:0xae765600
  41a973:	mov    esp,DWORD PTR [edx-0x9]
  41a976:	dec    esp
  41a977:	add    eax,0x3e54e50f
  41a97c:	mov    dh,0x64
  41a97e:	aas    
  41a97f:	pop    ecx
  41a980:	and    BYTE PTR [ebp+0x19e1477],0x1d
  41a987:	push   ds
  41a988:	scas   al,BYTE PTR es:[edi]
  41a989:	mov    dl,0xb0
  41a98b:	push   ebx
  41a98c:	xor    DWORD PTR [eax-0x65],esp
  41a98f:	jge    0x41a9a0
  41a991:	mov    ebx,0xcf41900b
  41a996:	ins    DWORD PTR es:[edi],dx
  41a997:	ret    0x5214
  41a99a:	mov    ds:0xecc8f9c3,eax
  41a99f:	test   al,0x42
  41a9a1:	add    BYTE PTR [eax],dh
  41a9a3:	pop    esi
  41a9a4:	jb     0x41aa1e
  41a9a6:	push   ebp
  41a9a7:	sahf   
  41a9a8:	je     0x41a9b8
  41a9aa:	add    DWORD PTR [ebx+0x332f73d8],eax
  41a9b0:	les    edi,FWORD PTR [esi+0xaef7e0]
  41a9b6:	push   esp
  41a9b7:	sar    BYTE PTR [eax-0x3e688f3d],0x27
  41a9be:	add    eax,0xf0e53e17
  41a9c3:	in     eax,dx
  41a9c4:	xor    DWORD PTR [esp+edi*2-0x2f],0xc9c419f1
  41a9cc:	jb     0x41a9ce
  41a9ce:	mov    edx,0xa3d96f91
  41a9d3:	pop    ss
  41a9d4:	cmc    
  41a9d5:	dec    esp
  41a9d6:	add    bl,bl
  41a9d8:	push   es
  41a9d9:	shr    BYTE PTR [ecx],0x7f
  41a9dc:	out    dx,eax
  41a9dd:	in     al,0xa4
  41a9df:	add    BYTE PTR ds:0xc15bf1fe,ch
  41a9e5:	shr    BYTE PTR [ebx],1
  41a9e7:	inc    esp
  41a9e8:	dec    eax
  41a9e9:	sub    al,0x79
  41a9eb:	add    BYTE PTR [ecx+0x1c],dh
  41a9ee:	jmp    0x89227fac
  41a9f3:	setbe  BYTE PTR [edx+0x27c0776c]
  41a9fa:	mov    ebx,0x323d7dc
  41a9ff:	(bad)
  41aa02:	pop    edi
  41aa03:	add    edi,DWORD PTR [ecx-0x47]
  41aa06:	push   ecx
  41aa07:	leave  
  41aa08:	hlt    
  41aa09:	xchg   esi,eax
  41aa0a:	call   0x44ae:0xefce7200
  41aa11:	lahf   
  41aa12:	or     BYTE PTR [eax+eax*1+0x29b8e9a8],al
  41aa19:	mov    cs,WORD PTR [ecx+0x30]
  41aa1c:	and    eax,DWORD PTR [eax]
  41aa1e:	xchg   ebp,eax
  41aa1f:	(bad)  
  41aa20:	cs dec eax
  41aa22:	adc    eax,0x9b52fe7
  41aa27:	pop    ebx
  41aa28:	mov    edi,0x13002bcc
  41aa2d:	mov    WORD PTR [edi-0x4e],fs
  41aa30:	or     BYTE PTR [esi],bl
  41aa32:	or     esi,DWORD PTR [edi+0x24]
  41aa35:	sub    eax,DWORD PTR cs:[ecx]
  41aa38:	fwait
  41aa39:	push   edx
  41aa3a:	add    al,bl
  41aa3c:	sub    eax,esp
  41aa3e:	lds    eax,FWORD PTR [eax+0x50443400]
  41aa44:	in     al,dx
  41aa45:	xchg   ebx,eax
  41aa46:	cli    
  41aa47:	push   ebp
  41aa48:	lea    eax,[eax]
  41aa4a:	ins    BYTE PTR es:[edi],dx
  41aa4b:	in     al,0x83
  41aa4d:	(bad)  
  41aa4e:	mov    ch,0xd9
  41aa50:	mov    edx,0x66f400ae
  41aa55:	je     0x41aa8d
  41aa57:	imul   esi,DWORD PTR [ebx],0xd13b4a64
  41aa5d:	loope  0x41a9e6
  41aa5f:	cld    
  41aa60:	clc    
  41aa61:	dec    ecx
  41aa62:	add    DWORD PTR [eax],eax
  41aa64:	pusha  
  41aa65:	mov    ebp,DWORD PTR [ebx+0x50]
  41aa68:	add    DWORD PTR [ecx-0x3e],edi
  41aa6b:	cmp    BYTE PTR [edx],al
  41aa6d:	cmc    
  41aa6e:	test   BYTE PTR ds:[edi-0x55e56b26],0xdc
  41aa76:	mov    dl,0xfb
  41aa78:	add    DWORD PTR [ecx+0x36],ebp
  41aa7b:	aas    
  41aa7c:	jns    0x41aab1
  41aa7e:	adc    DWORD PTR [esi+0x766c96c4],ebx
  41aa84:	aam    0x0
  41aa86:	scas   al,BYTE PTR es:[edi]
  41aa87:	adc    BYTE PTR [ebx-0x22],bh
  41aa8a:	pushf  
  41aa8b:	mov    al,ds:0x2d004d3b
  41aa90:	sti    
  41aa91:	pop    esp
  41aa92:	jg     0x41aa70
  41aa94:	sbb    ecx,edx
  41aa96:	fs ja  0x41aa79
  41aa99:	add    BYTE PTR [edx-0x35],ch
  41aa9c:	and    BYTE PTR [edi-0x297bfbad],0x0
  41aaa3:	mov    ebx,0x8f9cd96d
  41aaa8:	data16 and ch,BYTE PTR [edx]
  41aaab:	jno    0x41aa48
  41aaad:	hlt    
  41aaae:	je     0x41aab0
  41aab0:	test   esp,ebx
  41aab2:	fst    QWORD PTR [edi+0x59]
  41aab5:	dec    edx
  41aab6:	jecxz  0x41aaf3
  41aab8:	add    BYTE PTR [ebp+0x26],al
  41aabb:	scas   al,BYTE PTR es:[edi]
  41aabc:	lock ret 0x6c3f
  41aac0:	scas   eax,DWORD PTR es:[edi]
  41aac1:	ror    ah,0xc3
  41aac4:	inc    eax
  41aac5:	jns    0x41aab0
  41aac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aac8:	add    BYTE PTR [edx+0xc324e09],cl
  41aace:	fstp   QWORD PTR [esi+0x6159002e]
  41aad4:	mov    eax,0x1ac137b5
  41aad9:	das    
  41aada:	add    BYTE PTR ds:0x685ba19b,cl
  41aae0:	mov    DWORD PTR [esi+0x44],ebp
  41aae3:	mov    al,ds:0x1b418ea
  41aae8:	dec    esp
  41aae9:	imul   esp,edx,0x56461e71
  41aaef:	jo     0x41aa8b
  41aaf1:	test   BYTE PTR [ecx],al
  41aaf3:	push   eax
  41aaf4:	inc    esp
  41aaf5:	popa   
  41aaf6:	jb     0x41aaeb
  41aaf8:	loope  0x41aa9a
  41aafa:	fdiv   QWORD PTR [edx]
  41aafc:	xchg   edx,eax
  41aafd:	add    BYTE PTR [esi+0x9],cl
  41ab00:	das    
  41ab01:	scas   al,BYTE PTR es:[edi]
  41ab02:	mov    eax,0xf80877e9
  41ab07:	ins    DWORD PTR es:[edi],dx
  41ab08:	jle    0x41ab80
  41ab0a:	add    ch,bl
  41ab0c:	lahf   
  41ab0d:	cmc    
  41ab0e:	rcl    DWORD PTR [ebp+0x3b07af6],0x96
  41ab15:	xor    ecx,eax
  41ab17:	add    eax,0x47d87778
  41ab1c:	std    
  41ab1d:	fs sbb eax,0xc0cdc29a
  41ab23:	jmp    0x3f0fcd5a
  41ab28:	pop    esp
  41ab29:	jb     0x41ab4b
  41ab2b:	jns    0x41ab56
  41ab2d:	add    DWORD PTR [eax],ecx
  41ab2f:	dec    esp
  41ab30:	xchg   esp,eax
  41ab31:	mov    ecx,0xf0dc443d
  41ab36:	sbb    eax,0x163c07b7
  41ab3b:	gs mov ebx,0x98f48092
  41ab41:	adc    BYTE PTR [eax+eax*1-0x51b79fcc],cl
  41ab48:	add    al,0xb7
  41ab4a:	mov    eax,0x8eeace
  41ab4f:	fs js  0x41ab78
  41ab52:	in     al,dx
  41ab53:	inc    edx
  41ab54:	pop    ebx
  41ab55:	push   ds
  41ab56:	add    eax,0x17df7e00
  41ab5b:	fisttp DWORD PTR [ebp+0x961fa4]
  41ab61:	fst    QWORD PTR [eax]
  41ab63:	inc    ecx
  41ab64:	inc    edi
  41ab65:	in     al,dx
  41ab66:	inc    esp
  41ab67:	das    
  41ab68:	call   0x3c67:0xa7b05d00
  41ab6f:	adc    esi,edx
  41ab71:	fild   DWORD PTR [eax]
  41ab73:	loopne 0x41ab48
  41ab75:	push   edx
  41ab76:	ins    DWORD PTR es:[edi],dx
  41ab77:	pop    si
  41ab79:	mov    eax,0x25f93f11
  41ab7e:	and    BYTE PTR [edx-0x4b],0x94
  41ab82:	jne    0x41ab37
  41ab84:	adc    eax,0x70dd00ad
  41ab89:	lods   al,BYTE PTR ds:[esi]
  41ab8a:	ret    0xfa3c
  41ab8d:	jp     0x41ac08
  41ab8f:	sbb    al,0x8d
  41ab91:	or     dl,BYTE PTR [eax-0x13c5bc80]
  41ab97:	and    BYTE PTR [ebp-0x2e3bffdd],bh
  41ab9d:	mov    ds:0x8dad379c,eax
  41aba2:	scas   al,BYTE PTR es:[edi]
  41aba3:	add    ch,ah
  41aba5:	push   esi
  41aba6:	stos   BYTE PTR es:[edi],al
  41aba7:	adc    al,0x35
  41aba9:	jns    0x41ab84
  41abab:	sub    eax,0xcc91a100
  41abb0:	sbb    ebx,DWORD PTR [ebp+0xb77b5a]
  41abb6:	jmp    0x41ab5a
  41abb8:	in     eax,dx
  41abb9:	pop    eax
  41abba:	test   eax,0x268d2c
  41abbf:	cmp    al,al
  41abc1:	test   al,0x5d
  41abc3:	adc    BYTE PTR [edi-0x10],ah
  41abc6:	cdq    
  41abc7:	jne    0x41ac48
  41abc9:	mov    al,0x7c
  41abcb:	add    bh,al
  41abcd:	imul   ecx,DWORD PTR [edi-0x2be8b09f],0xffffffa3
  41abd4:	add    BYTE PTR [edi-0x48d6e708],bh
  41abda:	xchg   esp,eax
  41abdb:	ins    BYTE PTR es:[edi],dx
  41abdc:	mov    ecx,0x14169100
  41abe1:	adc    BYTE PTR [edx],dl
  41abe3:	xor    eax,0x3afceb1e
  41abe8:	add    BYTE PTR [edx-0x71],ah
  41abeb:	mov    WORD PTR [edx+edi*2],cs
  41abee:	cmc    
  41abef:	std    
  41abf0:	sbb    al,BYTE PTR [eax]
  41abf2:	push   es
  41abf3:	mul    BYTE PTR [ebx+0x7ffca259]
  41abf9:	inc    edx
  41abfa:	add    BYTE PTR [edx+0x24],dl
  41abfd:	xor    esp,esp
  41abff:	mov    es,WORD PTR [eax+0x4803f14a]
  41ac05:	pop    es
  41ac06:	test   BYTE PTR [ebx-0x63],cl
  41ac09:	xchg   edx,eax
  41ac0a:	clc    
  41ac0b:	pushf  
  41ac0c:	lods   eax,DWORD PTR ds:[esi]
  41ac0d:	sub    eax,DWORD PTR [eax]
  41ac0f:	idiv   BYTE PTR [eax-0x55]
  41ac12:	xchg   esp,eax
  41ac13:	mov    eax,edx
  41ac15:	outs   dx,BYTE PTR ds:[esi]
  41ac16:	adc    al,BYTE PTR [eax]
  41ac18:	aaa    
  41ac19:	xchg   ebp,eax
  41ac1a:	push   es
  41ac1b:	xor    BYTE PTR ds:0x1c3b47e9,dh
  41ac21:	sub    al,0x43
  41ac23:	into   
  41ac24:	pop    es
  41ac25:	js     0x41ac70
  41ac27:	push   ss
  41ac28:	adc    BYTE PTR [ecx],bh
  41ac2a:	mov    ah,0x91
  41ac2c:	mov    ds:0xe0973700,al
  41ac31:	(bad)  
  41ac32:	(bad)  
  41ac33:	mov    ds:0xab2e8a2c,eax
  41ac38:	fidivr DWORD PTR [eax+0x0]
  41ac3b:	and    dl,BYTE PTR [eax]
  41ac3d:	in     eax,dx
  41ac3e:	data16 cmp cl,BYTE PTR [ecx+0x0]
  41ac42:	pop    ebx
  41ac43:	pop    ss
  41ac44:	imul   eax,DWORD PTR [eax+0x47817128],0x6a00a972
  41ac4e:	(bad)  
  41ac4f:	fsub   DWORD PTR [ebx+0x6c0cd43a]
  41ac55:	jl     0x41ac0e
  41ac57:	sbb    eax,0x83aa0ffb
  41ac5c:	jg     0x41acbb
  41ac5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac5f:	daa    
  41ac60:	adc    dl,0x1
  41ac63:	jge    0x41ac65
  41ac65:	push   edi
  41ac66:	bound  esp,QWORD PTR [ebx-0x7e76ca57]
  41ac6c:	mov    ebp,0x9956b40e
  41ac71:	psadbw mm1,QWORD PTR [ecx]
  41ac74:	sbb    ebp,esp
  41ac76:	xor    ch,0x95
  41ac79:	repz jbe 0x41ac99
  41ac7c:	add    BYTE PTR [ebx+esi*1-0x64],cl
  41ac80:	repnz pop edx
  41ac82:	ret    0x2bd2
  41ac85:	add    bl,cl
  41ac87:	mov    al,0xb5
  41ac89:	in     al,0x3f
  41ac8b:	fs repz leave 
  41ac8e:	cmp    eax,0xd780afd8
  41ac93:	fiadd  DWORD PTR [ebx+0x2d034e8c]
  41ac99:	pop    es
  41ac9a:	cs and al,0xdc
  41ac9d:	and    BYTE PTR [ebx-0x2ea6b9f0],cl
  41aca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aca4:	nop
  41aca5:	push   ecx
  41aca6:	add    BYTE PTR [ebx-0x7f],bl
  41aca9:	mov    ch,0xe0
  41acac:	sub    ebp,eax
  41acae:	pop    ebp
  41acaf:	pop    es
  41acb0:	in     al,dx
  41acb1:	adc    al,0xe5
  41acb3:	pop    edi
  41acb4:	inc    eax
  41acb5:	mov    al,ds:0xf57d45ee
  41acba:	sub    al,0x26
  41acbc:	cmp    DWORD PTR [eax],0x6e979000
  41acc2:	inc    edi
  41acc3:	(bad)  
  41acc5:	loope  0x41acc3
  41acc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acc8:	fwait
  41acc9:	out    dx,eax
  41acca:	in     al,dx
  41accb:	in     al,dx
  41accc:	pop    edi
  41accd:	add    edx,DWORD PTR [esi+edi*2-0x10]
  41acd1:	push   ds
  41acd2:	shl    BYTE PTR [ecx],cl
  41acd4:	mov    bl,0xf4
  41acd6:	fcom   DWORD PTR [eax]
  41acd8:	mov    esi,0xb1f8f3
  41acdd:	sbb    edi,DWORD PTR [esp+eax*2+0x6720693d]
  41ace4:	dec    ebx
  41ace5:	pop    es
  41ace6:	or     ch,ah
  41ace8:	xchg   esp,eax
  41ace9:	fidivr DWORD PTR [edx]
  41aceb:	xor    cl,dh
  41aced:	cmc    
  41acee:	pop    ecx
  41acef:	int3   
  41acf0:	add    BYTE PTR [ebx+0x44],bh
  41acf3:	ins    DWORD PTR es:[edi],dx
  41acf4:	xor    BYTE PTR [edx*8-0x3fff4430],bl
  41acfb:	fbstp  TBYTE PTR [eax-0x6850af42]
  41ad01:	jle    0x41ad03
  41ad03:	(bad)  
  41ad04:	sti    
  41ad05:	pop    ecx
  41ad06:	push   ecx
  41ad07:	and    al,0x38
  41ad09:	lock cmp bl,BYTE PTR ds:0xc6cb2c
  41ad10:	or     ah,BYTE PTR [ecx+eax*8-0x3c]
  41ad14:	inc    ebx
  41ad15:	cwde   
  41ad16:	push   ds
  41ad17:	hlt    
  41ad18:	sub    ebx,DWORD PTR [ebx]
  41ad1a:	pop    ebp
  41ad1b:	(bad)  
  41ad1c:	movaps xmm4,XMMWORD PTR [eax+0x7e]
  41ad20:	inc    eax
  41ad21:	cdq    
  41ad22:	(bad)  
  41ad23:	imul   edx,DWORD PTR [edi],0xffffffd0
  41ad26:	and    DWORD PTR [edi],eax
  41ad28:	arpl   WORD PTR [esi],si
  41ad2a:	scas   eax,DWORD PTR es:[edi]
  41ad2b:	mov    edx,0xd440807e
  41ad30:	in     eax,dx
  41ad31:	mov    ds,WORD PTR [esi]
  41ad33:	push   0x5cc0ff51
  41ad38:	sbb    al,0xde
  41ad3a:	dec    ebp
  41ad3b:	imul   edx,DWORD PTR [ebx-0x14ff0220],0xffffffe2
  41ad42:	pop    ds
  41ad43:	cs inc ebx
  41ad45:	pop    ss
  41ad46:	dec    eax
  41ad47:	mov    DWORD PTR [eax],0x5e32822d
  41ad4d:	fs cdq 
  41ad4f:	and    BYTE PTR [esi+0x6ce83707],0x60
  41ad56:	jne    0x41ad2b
  41ad58:	and    eax,0x5501a05c
  41ad5d:	in     eax,0x0
  41ad5f:	sbb    DWORD PTR [ecx+ecx*2+0x6bc1ff8d],eax
  41ad66:	into   
  41ad67:	jmp    0x74e0:0x1607dad
  41ad6e:	xlat   BYTE PTR ds:[ebx]
  41ad6f:	cmp    eax,0x20f74cc4
  41ad74:	sub    esp,DWORD PTR [ecx-0x410bd800]
  41ad7a:	pushf  
  41ad7b:	cmp    BYTE PTR [ebp+0x7a],0xd
  41ad7f:	pop    es
  41ad80:	gs add al,0x4d
  41ad83:	sub    edi,edx
  41ad85:	sar    ch,1
  41ad87:	shr    eax,cl
  41ad89:	dec    edx
  41ad8a:	pop    ds
  41ad8b:	lahf   
  41ad8c:	pop    esp
  41ad8d:	push   eax
  41ad8e:	sar    BYTE PTR [edx+esi*2-0x71],0x89
  41ad93:	mov    eax,ds:0xb00b00e1
  41ad98:	(bad)  
  41ad9a:	xor    BYTE PTR [ebp+0x71],ch
  41ad9d:	mov    ah,0x0
  41ad9f:	pop    ss
  41ada0:	mov    ecx,0xe6b3d1bd
  41ada5:	(bad)  
  41ada6:	scas   eax,DWORD PTR es:[edi]
  41ada7:	add    BYTE PTR [eax-0x56],al
  41adaa:	ret    0xccdb
  41adad:	xchg   esi,ebx
  41adaf:	and    dh,dh
  41adb1:	or     eax,0xf531a800
  41adb6:	nop
  41adb7:	aad    0xb7
  41adb9:	imul   ecx,DWORD PTR [edi],0x79
  41adbc:	inc    eax
  41adbd:	add    ah,dl
  41adbf:	add    bh,BYTE PTR [ecx+0xef9ddf2]
  41adc5:	sbb    BYTE PTR [edi],bl
  41adc7:	and    al,0x62
  41adc9:	add    al,0xc0
  41adcb:	push   edx
  41adcc:	test   ah,0xd7
  41adcf:	test   dh,bl
  41add1:	pop    ds
  41add2:	xrelease xchg BYTE PTR [eax+eax*2+0x17],ah
  41add7:	inc    ecx
  41add8:	adc    BYTE PTR ds:0x3c004a4e,0xbf
  41addf:	mul    DWORD PTR [edx-0x1]
  41ade2:	ds icebp 
  41ade4:	jns    0x41ade6
  41ade6:	mov    dl,0xa2
  41ade8:	fst    DWORD PTR [ecx-0x10]
  41adeb:	add    eax,0xde000d2d
  41adf0:	mov    esp,0x42c6a0e8
  41adf5:	popf   
  41adf6:	ins    BYTE PTR es:[edi],dx
  41adf7:	add    cl,cl
  41adf9:	in     al,0x66
  41adfb:	repz fnsave [ebx]
  41adfe:	mov    edi,ds
  41ae00:	cwde   
  41ae01:	sub    eax,0xed520074
  41ae07:	(bad)  
  41ae08:	pop    ds
  41ae09:	mov    bl,al
  41ae0b:	push   ds
  41ae0c:	and    BYTE PTR [eax+ebx*1+0x0],dh
  41ae10:	cmp    BYTE PTR [edx],0xa2
  41ae13:	pop    ebx
  41ae14:	cmp    DWORD PTR [ebx+0x2c],esi
  41ae17:	jno    0x41ae19
  41ae19:	(bad)  
  41ae1a:	std    
  41ae1b:	adc    ebx,0xb2610332
  41ae21:	push   cs
  41ae22:	pop    edx
  41ae23:	outs   dx,DWORD PTR ds:[esi]
  41ae24:	loop   0x41adff
  41ae26:	add    ch,ah
  41ae28:	sub    al,0x7
  41ae2a:	mov    gs,WORD PTR [eax-0x58f11f00]
  41ae30:	jle    0x41ae5b
  41ae32:	jae    0x41adc5
  41ae34:	adc    eax,0x2e01d0ee
  41ae39:	retf   
  41ae3a:	mov    edi,ecx
  41ae3c:	dec    esi
  41ae3d:	mov    ds:0x8e61d014,eax
  41ae42:	add    BYTE PTR [edx-0x2e],ch
  41ae45:	iret   
  41ae46:	push   eax
  41ae47:	gs xchg esp,eax
  41ae49:	inc    ebp
  41ae4a:	xor    bh,BYTE PTR [esi]
  41ae4c:	rcl    DWORD PTR [esi],cl
  41ae4e:	add    BYTE PTR [esi-0x52],cl
  41ae51:	fidivr WORD PTR [esp+eiz*4-0x4b]
  41ae55:	cmp    DWORD PTR [esi+0x7d],esi
  41ae58:	jne    0x41ade7
  41ae5a:	jl     0x41aeb6
  41ae5c:	pop    ss
  41ae5d:	call   0x32619f0b
  41ae62:	inc    eax
  41ae63:	lds    ecx,FWORD PTR [ebp-0x65]
  41ae66:	fcmovne st,st(7)
  41ae68:	hlt    
  41ae69:	add    ah,dl
  41ae6b:	fs mov bl,0xd6
  41ae6e:	xchg   ebx,eax
  41ae6f:	adc    al,0x1c
  41ae71:	push   0x0
  41ae73:	pop    eax
  41ae74:	push   eax
  41ae75:	mov    al,ds:0x99e0cac1
  41ae7a:	test   BYTE PTR [eax],al
  41ae7c:	mov    ecx,0xab40188c
  41ae81:	mov    BYTE PTR [edx+0x3a7e7b],cl
  41ae87:	mov    edi,0xf049321
  41ae8c:	mov    ch,0x98
  41ae8e:	aam    0x1d
  41ae90:	pop    esi
  41ae91:	popa   
  41ae92:	rol    DWORD PTR [eax],1
  41ae94:	sbb    eax,0x5f9a4154
  41ae99:	add    BYTE PTR ss:[edi-0x5fb8716f],bh
  41aea0:	add    dl,bh
  41aea2:	jmp    0x5ce7:0x1b01b9f8
  41aea9:	push   es
  41aeaa:	(bad)
  41aeae:	jbe    0x41af08
  41aeb0:	add    BYTE PTR [ebx],cl
  41aeb2:	sbb    al,0xd0
  41aeb4:	cmp    al,0x93
  41aeb6:	add    cl,BYTE PTR [edi-0x1c]
  41aeb9:	add    ch,bh
  41aebb:	popa   
  41aebc:	out    dx,al
  41aebd:	sti    
  41aebe:	aad    0xa5
  41aec0:	mov    WORD PTR [esi],cs
  41aec2:	hlt    
  41aec3:	mov    BYTE PTR [edi],cl
  41aec5:	loopne 0x41aedc
  41aec7:	nop
  41aec8:	add    ebx,esp
  41aeca:	mov    cl,0x5b
  41aecc:	cmp    BYTE PTR [ecx+0x44ecc162],bl
  41aed2:	sbb    BYTE PTR [eax],al
  41aed4:	int3   
  41aed5:	push   edi
  41aed6:	or     esi,esp
  41aed8:	ds es jbe 0x41af06
  41aedc:	and    al,0xb9
  41aede:	cld    
  41aedf:	out    dx,al
  41aee0:	add    DWORD PTR [edi-0x28],ebx
  41aee3:	and    eax,edi
  41aee5:	dec    edx
  41aee6:	hlt    
  41aee7:	mov    al,0x43
  41aee9:	add    BYTE PTR [esi],dh
  41aeeb:	add    ch,BYTE PTR [esi-0xdb8e8e1]
  41aef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef2:	pop    es
  41aef3:	arpl   WORD PTR [ebp-0x2cb131ee],sp
  41aef9:	jecxz  0x41aec8
  41aefb:	mov    al,ds:0x33b8d50
  41af00:	sub    BYTE PTR [ecx+0x45],ch
  41af03:	inc    edx
  41af04:	out    dx,eax
  41af05:	pop    esi
  41af06:	cmp    BYTE PTR [edx+0x5401b85f],0xc3
  41af0d:	push   es
  41af0e:	sbb    edx,ebx
  41af10:	cld    
  41af11:	test   al,0xe1
  41af13:	sbb    al,bl
  41af15:	pop    ss
  41af16:	rol    DWORD PTR [ecx],1
  41af18:	lods   eax,DWORD PTR ds:[esi]
  41af19:	mov    esp,esp
  41af1b:	sbb    bl,BYTE PTR [ebx]
  41af1d:	cmc    
  41af1e:	(bad)  
  41af1f:	fdivr  QWORD PTR ds:0xefc500a1
  41af25:	pop    edi
  41af26:	xlat   BYTE PTR ds:[ebx]
  41af27:	sub    BYTE PTR [edx-0x60fcced4],dh
  41af2d:	in     eax,0x25
  41af2f:	(bad)  
  41af30:	cmc    
  41af31:	jns    0x41af0c
  41af33:	adc    eax,0x4c2630b8
  41af38:	push   ds
  41af39:	cs cmp eax,0xa6dac034
  41af3f:	mov    edx,0x1e93c3e
  41af44:	stos   BYTE PTR es:[edi],al
  41af45:	pop    ebp
  41af46:	pop    ds
  41af47:	xor    eax,0x6086ab73
  41af4c:	sar    BYTE PTR [ecx],cl
  41af4e:	add    bl,ch
  41af50:	fs mov al,0x50
  41af53:	xor    al,0x84
  41af55:	add    ecx,DWORD PTR [eax+0x0]
  41af58:	repnz sub BYTE PTR [ebx-0xc6c9d1d],al
  41af5f:	or     eax,0x2e7caf00
  41af64:	(bad)  
  41af65:	xchg   ebp,eax
  41af66:	int    0xbb
  41af68:	xchg   esp,eax
  41af69:	add    BYTE PTR [eax+eiz*1],cl
  41af6c:	mov    cl,0x8c
  41af6e:	jnp    0x41af48
  41af70:	popf   
  41af71:	test   BYTE PTR [eax+0x5c7f91],dh
  41af77:	nop
  41af78:	mov    ecx,0x31e8462c
  41af7d:	aad    0x8a
  41af7f:	add    BYTE PTR ds:0x6ea3c59c,al
  41af85:	enter  0x6c63,0x0
  41af89:	repnz adc ecx,DWORD PTR [eax-0x65]
  41af8d:	mov    al,0x33
  41af8f:	mov    ebp,0x5696009a
  41af94:	xchg   esp,eax
  41af95:	fsubr  DWORD PTR [esi+0x17]
  41af98:	cmp    al,0x1c
  41af9a:	add    dl,bl
  41af9c:	and    DWORD PTR [ebx+0x7ccdd4ed],eax
  41afa2:	pop    ds
  41afa3:	add    BYTE PTR [esi-0x7599614],dh
  41afa9:	adc    bl,ch
  41afab:	pop    ecx
  41afac:	add    DWORD PTR [esi-0xe],edi
  41afaf:	(bad)  [esi]
  41afb1:	jge    0x41af57
  41afb3:	test   al,dh
  41afb5:	sbb    eax,0xc32700c5
  41afba:	add    al,0x88
  41afbc:	cmp    DWORD PTR [ebx+ebx*8+0x2e2a0081],edx
  41afc3:	gs leave 
  41afc5:	push   eax
  41afc6:	dec    eax
  41afc7:	cmp    BYTE PTR [edi+0x0],0x56
  41afcb:	(bad)  [esi-0x43]
  41afce:	or     ecx,esi
  41afd0:	pop    edi
  41afd1:	and    eax,DWORD PTR [eax]
  41afd3:	inc    esp
  41afd4:	ror    DWORD PTR [esi+0x212ae283],1
  41afda:	mov    dl,0x0
  41afdc:	sbb    DWORD PTR [edx],0xb3d4e8d
  41afe2:	popf   
  41afe3:	scas   eax,DWORD PTR es:[edi]
  41afe4:	add    BYTE PTR [edi],ah
  41afe6:	das    
  41afe7:	mov    ss,eax
  41afe9:	adc    cl,bl
  41afeb:	add    DWORD PTR [ecx+0xeaaf400],ecx
  41aff1:	xor    WORD PTR [ecx-0x54ff9020],sp
  41aff8:	pop    ecx
  41aff9:	xor    eax,0xb2fdbf06
  41affe:	mov    BYTE PTR [eax],al
  41b000:	mov    ecx,0x38db80fb
  41b005:	xchg   edx,eax
  41b006:	mov    ds:0xe8770076,eax
  41b00b:	xchg   edi,eax
  41b00c:	int    0x4a
  41b00e:	enter  0x5a22,0x0
  41b012:	idiv   DWORD PTR [eax+0x33]
  41b015:	mov    dl,0x7c
  41b017:	dec    ecx
  41b018:	adc    cl,ah
  41b01a:	add    BYTE PTR [edx],cl
  41b01c:	inc    ebp
  41b01d:	scas   eax,DWORD PTR es:[edi]
  41b01e:	retf   
  41b01f:	clc    
  41b020:	or     BYTE PTR [edi+0x773f002d],al
  41b026:	daa    
  41b027:	push   ebx
  41b028:	mov    WORD PTR [ebx+eiz*4-0x1f89f076],ss
  41b02f:	sbb    edx,DWORD PTR [edx]
  41b031:	add    DWORD PTR [edi],ebp
  41b033:	cmp    eax,0x3e
  41b036:	in     al,0x98
  41b038:	add    BYTE PTR fs:[edi-0x142d8b46],al
  41b03f:	add    ecx,ecx
  41b041:	or     BYTE PTR [ebp+eiz*4+0x21],0x24
  41b046:	sub    ebp,eax
  41b048:	add    BYTE PTR [ebx-0x24724ead],al
  41b04e:	rol    BYTE PTR [eax],1
  41b050:	ret    0x5ec0
  41b053:	mov    bl,0x7c
  41b055:	ins    DWORD PTR es:[edi],dx
  41b056:	retf   0xce
  41b059:	in     al,dx
  41b05a:	sub    al,0xd6
  41b05c:	jmp    0x33b8:0x52a161bc
  41b063:	mul    al
  41b065:	add    al,al
  41b067:	and    ebp,DWORD PTR [ebp-0x3c]
  41b06a:	xor    DWORD PTR [eax-0x3f],0x1f85703f
  41b071:	lds    ecx,FWORD PTR [edi*1+0x17e74880]
  41b078:	jnp    0x41b048
  41b07a:	inc    esp
  41b07b:	jae    0x41b09a
  41b07d:	and    al,0x92
  41b07f:	stos   DWORD PTR es:[edi],eax
  41b080:	cmp    eax,DWORD PTR [eax]
  41b082:	pop    edi
  41b083:	adc    DWORD PTR [eax],esp
  41b085:	in     al,dx
  41b086:	out    dx,al
  41b087:	mov    ebx,DWORD PTR ds:0xfe40fe39
  41b08d:	cmp    BYTE PTR [ebp+0x59829a12],0xd7
  41b094:	mov    dl,0x3e
  41b096:	test   eax,0xe76d0302
  41b09b:	aas    
  41b09c:	cmp    eax,0x17ad32c
  41b0a1:	dec    eax
  41b0a2:	in     al,dx
  41b0a3:	out    0x38,al
  41b0a5:	imul   edx,DWORD PTR [edi-0x69b71baa],0x0
  41b0ac:	jmp    0x41b063
  41b0ae:	sbb    al,ah
  41b0b0:	mov    ?,ebx
  41b0b2:	test   al,0xaa
  41b0b4:	es aad 0x20
  41b0b7:	sbb    eax,DWORD PTR [edi]
  41b0b9:	xor    eax,0xa00e16e
  41b0be:	sbb    esi,0x2a
  41b0c1:	cld    
  41b0c2:	mov    dl,0x0
  41b0c4:	xchg   edi,eax
  41b0c5:	enter  0x7017,0x16
  41b0c9:	shl    edx,0x44
  41b0cc:	add    eax,DWORD PTR [ebx]
  41b0ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0cf:	je     0x41b0b9
  41b0d1:	and    esp,edi
  41b0d3:	rol    ch,1
  41b0d5:	adc    ebp,edi
  41b0d7:	js     0x41b157
  41b0d9:	add    BYTE PTR [ebx],ch
  41b0db:	leave  
  41b0dc:	test   al,0xab
  41b0de:	push   eax
  41b0df:	xchg   ecx,eax
  41b0e0:	ins    BYTE PTR es:[edi],dx
  41b0e1:	cmp    al,BYTE PTR [eax]
  41b0e3:	push   edx
  41b0e4:	mov    eax,ds:0xf0fc64d8
  41b0e9:	dec    edi
  41b0ea:	adc    BYTE PTR [esi],0x73
  41b0ed:	(bad)  [ebp-0x3f6ece00]
  41b0f3:	(bad)  
  41b0f4:	push   ss
  41b0f5:	clc    
  41b0f6:	add    BYTE PTR [esi],cl
  41b0f8:	sub    BYTE PTR [edx+edi*2-0x1ebabd3d],bl
  41b0ff:	add    BYTE PTR [eax],dh
  41b101:	(bad)  
  41b102:	fisubr DWORD PTR [ecx+0xa06eda7]
  41b108:	cmp    ecx,DWORD PTR [ebx-0x4e7bfc98]
  41b10e:	xchg   esi,eax
  41b10f:	jo     0x41b104
  41b111:	clc    
  41b112:	cmp    esi,DWORD PTR [ebp+esi*1+0x0]
  41b116:	inc    esi
  41b117:	xlat   BYTE PTR ds:[ebx]
  41b118:	(bad)  
  41b119:	lds    ecx,FWORD PTR [edx+0x26]
  41b11c:	dec    esp
  41b11d:	dec    ebp
  41b11e:	add    ah,dh
  41b120:	shr    DWORD PTR [ebx-0x42ddc165],0x29
  41b127:	add    BYTE PTR [edi+eax*8],bl
  41b12a:	(bad)  
  41b12b:	jbe    0x41b133
  41b12d:	pop    eax
  41b12e:	dec    eax
  41b12f:	xchg   edi,eax
  41b130:	add    BYTE PTR [eax+eax*2],dl
  41b133:	mov    esi,0xf5e6a09d
  41b138:	pop    ebp
  41b139:	add    BYTE PTR [eax-0x3c10262],dl
  41b13f:	rcr    BYTE PTR [ebx+0x4da53a72],0x80
  41b146:	(bad)  
  41b147:	jmp    0x164:0xf50bc905
  41b14e:	frstor [eax]
  41b150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b151:	gs pop esi
  41b153:	jns    0x41b178
  41b155:	ffree  st(2)
  41b157:	iret   
  41b158:	lock mov ecx,0xfe02aa86
  41b15e:	aas    
  41b15f:	(bad)  
  41b160:	jnp    0x41b14d
  41b162:	add    al,0x60
  41b164:	fsubrp st(4),st
  41b166:	popf   
  41b167:	add    BYTE PTR [ebp+ecx*1+0x47dd5acc],ch
  41b16e:	lock jle 0x41b171
  41b171:	adc    cl,BYTE PTR [ebx]
  41b173:	xchg   esi,eax
  41b174:	cs sahf 
  41b176:	dec    esp
  41b177:	cmp    edi,eax
  41b179:	add    ebp,DWORD PTR [edx+0x5ec8874e]
  41b17f:	and    BYTE PTR [eax+0x2e1754ea],dl
  41b185:	popa   
  41b186:	sti    
  41b187:	out    0x3,eax
  41b189:	ud1    esi,DWORD PTR [ebx+0x2a]
  41b18d:	sub    BYTE PTR [ebp+edi*1-0x53],0xb
  41b192:	sub    eax,0x924cbd
  41b197:	mov    ?,eax
  41b199:	pushw  0x72
  41b19c:	add    DWORD PTR [eax-0x65],esp
  41b19f:	idiv   BYTE PTR [ebx-0x1ba81946]
  41b1a5:	fiadd  DWORD PTR fs:[eax]
  41b1a8:	xchg   edx,eax
  41b1a9:	xchg   ebp,eax
  41b1aa:	lock dec esp
  41b1ac:	outs   dx,BYTE PTR ds:[esi]
  41b1ad:	push   ecx
  41b1ae:	pop    ebx
  41b1af:	lahf   
  41b1b0:	add    eax,ebx
  41b1b2:	stos   DWORD PTR es:[edi],eax
  41b1b3:	repz mov dh,0x1f
  41b1b6:	sub    dh,al
  41b1b8:	sub    al,0xa2
  41b1ba:	and    eax,DWORD PTR [eax]
  41b1bc:	mov    bl,ah
  41b1be:	gs xor ch,ch
  41b1c1:	int3   
  41b1c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1c3:	and    al,BYTE PTR [eax]
  41b1c5:	mov    cl,0x2b
  41b1c7:	in     eax,0x3a
  41b1c9:	inc    eax
  41b1ca:	add    ebx,DWORD PTR [ebx+0x5f0b008a]
  41b1d0:	retf   
  41b1d1:	jge    0x41b155
  41b1d3:	jae    0x41b24a
  41b1d5:	sub    dh,BYTE PTR [ebx+0x6a]
  41b1d8:	add    BYTE PTR [ebx+eiz*4+0x5d],ch
  41b1dc:	popf   
  41b1dd:	aam    0x8e
  41b1df:	inc    ebx
  41b1e0:	push   ds
  41b1e1:	hlt    
  41b1e2:	inc    edi
  41b1e3:	add    BYTE PTR [ebx-0x4a8cd2eb],cl
  41b1e9:	xor    eax,0x27037eea
  41b1ee:	test   BYTE PTR [esi],cl
  41b1f0:	bound  ecx,QWORD PTR [ebp+0x7a]
  41b1f3:	shr    BYTE PTR [esi-0x72ff389d],0x45
  41b1fa:	push   es
  41b1fb:	xchg   esp,eax
  41b1fc:	in     eax,dx
  41b1fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1fe:	cmp    al,al
  41b200:	add    BYTE PTR [ecx-0x61bb9923],bh
  41b206:	daa    
  41b207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b208:	or     eax,0x59fdca00
  41b20d:	stc    
  41b20e:	sbb    eax,0x2e0a93
  41b213:	into   
  41b214:	repz clc 
  41b216:	int3   
  41b217:	xchg   ecx,eax
  41b218:	or     DWORD PTR [edx],ebx
  41b21a:	sahf   
  41b21b:	add    ecx,DWORD PTR [ebx+0x50]
  41b21e:	xchg   ebp,eax
  41b21f:	fisub  DWORD PTR [ebx]
  41b221:	jge    0x41b1f7
  41b223:	ret    
  41b224:	call   0x8d9e9a71
  41b229:	les    ecx,FWORD PTR [esi]
  41b22b:	lods   al,BYTE PTR ds:[esi]
  41b22c:	xor    al,0x94
  41b22e:	fild   WORD PTR [eax]
  41b230:	mov    al,ds:0xc22cda9d
  41b235:	push   cs
  41b236:	inc    edx
  41b237:	es and eax,0x7ab8063
  41b23d:	jne    0x41b2a1
  41b23f:	adc    al,BYTE PTR [eax]
  41b241:	ins    BYTE PTR es:[edi],dx
  41b242:	dec    ebx
  41b243:	sub    BYTE PTR [edi+0x470fb602],ah
  41b249:	add    BYTE PTR ds:0x3d4c5e7d,dl
  41b24f:	ss pushf 
  41b251:	push   edx
  41b252:	add    DWORD PTR [ecx],edx
  41b254:	je     0x41b298
  41b256:	fs push eax
  41b258:	inc    ecx
  41b259:	mov    ah,bh
  41b25b:	xchg   ebx,eax
  41b25c:	and    BYTE PTR [eax],al
  41b25e:	lahf   
  41b25f:	ror    cl,1
  41b261:	shl    DWORD PTR [ecx],0x8a
  41b264:	jmp    0x729b31d
  41b269:	cmp    ecx,DWORD PTR [esi+0x27]
  41b26c:	jae    0x41b2a1
  41b26e:	out    dx,eax
  41b26f:	add    BYTE PTR [ecx+0x1b],ah
  41b272:	hlt    
  41b273:	ret    
  41b274:	shl    esi,cl
  41b276:	pop    ecx
  41b277:	mov    esi,0x91325c1f
  41b27c:	add    BYTE PTR [ebp*1-0x23823ef9],dh
  41b283:	add    bh,ah
  41b285:	push   ss
  41b286:	les    ecx,FWORD PTR [edx+edi*1]
  41b289:	cld    
  41b28a:	adc    edi,DWORD PTR [esi+0x50d76b00]
  41b290:	pop    edx
  41b291:	add    ch,cl
  41b293:	sub    ebx,DWORD PTR [edi]
  41b295:	jbe    0x41b2e0
  41b297:	add    edx,edx
  41b299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b29a:	push   cs
  41b29b:	neg    DWORD PTR [ebx+0x3df8a341]
  41b2a1:	sub    DWORD PTR [eax],eax
  41b2a3:	outs   dx,BYTE PTR ds:[esi]
  41b2a4:	and    eax,DWORD PTR [ebx+ebx*2-0x7e017470]
  41b2ab:	add    dl,dl
  41b2ad:	addr16 jnp 0x41b291
  41b2b0:	mov    ah,0x9d
  41b2b2:	xchg   ah,dh
  41b2b4:	pop    es
  41b2b5:	xchg   ebx,eax
  41b2b6:	std    
  41b2b7:	add    esp,DWORD PTR [edx]
  41b2b9:	in     al,dx
  41b2ba:	loopne 0x41b2c1
  41b2bc:	test   DWORD PTR [eax+esi*1+0x0],0x273c749e
  41b2c4:	add    edi,ecx
  41b2c6:	mov    ebx,0x6d7f0be1
  41b2cb:	sbb    bh,0x0
  41b2ce:	hlt    
  41b2cf:	pop    ebx
  41b2d0:	sub    edx,DWORD PTR [ecx]
  41b2d2:	fwait
  41b2d3:	pop    es
  41b2d4:	shr    BYTE PTR [edx-0x54],1
  41b2d7:	ret    
  41b2d8:	popf   
  41b2d9:	and    BYTE PTR [eax],ah
  41b2db:	data16 xlat BYTE PTR ds:[ebx]
  41b2dd:	fdivrp st(0),st
  41b2df:	adc    BYTE PTR [eax],al
  41b2e1:	cmc    
  41b2e2:	mov    ecx,0x387d1d05
  41b2e7:	jae    0x41b2b2
  41b2e9:	add    BYTE PTR [esi-0x56ddb1a5],bh
  41b2ef:	jo     0x41b2f8
  41b2f1:	inc    ecx
  41b2f2:	sbb    eax,0xc058a529
  41b2f7:	push   0x9be3ea06
  41b2fc:	sub    eax,0x16fd3b
  41b301:	pop    edx
  41b302:	cmp    dl,dl
  41b304:	mov    dh,BYTE PTR [edi+0x50327dc]
  41b30a:	push   0x2a
  41b30c:	xchg   ebx,eax
  41b30d:	and    DWORD PTR [edx+0x1f61c588],eax
  41b313:	add    eax,eax
  41b315:	jge    0x41b392
  41b317:	std    
  41b318:	push   0x40caf35b
  41b31d:	cwde   
  41b31e:	xchg   ecx,eax
  41b31f:	and    eax,0x420096f2
  41b324:	ins    BYTE PTR es:[edi],dx
  41b325:	iret   
  41b326:	and    DWORD PTR [ebx+0x383f543],0x8973acb1
  41b330:	xor    al,0x5b
  41b332:	rcr    BYTE PTR [esi+esi*2],1
  41b335:	outs   dx,BYTE PTR ds:[esi]
  41b336:	mov    eax,ds:0x1dd059ee
  41b33b:	call   0x1b901b40
  41b340:	jne    0x41b3ac
  41b342:	xchg   DWORD PTR [ecx+ecx*2+0x3805000],ebx
  41b349:	or     eax,0xeed6317b
  41b34e:	add    BYTE PTR [ecx],cl
  41b350:	mov    edi,DWORD PTR [esi+0x48dfad6c]
  41b356:	jo     0x41b375
  41b358:	lea    esp,[edx]
  41b35a:	push   edi
  41b35b:	rcr    BYTE PTR ds:0x508e415d,0x63
  41b362:	add    BYTE PTR [esi+0x19],dh
  41b365:	retf   0xf2d0
  41b368:	pop    es
  41b369:	aas    
  41b36a:	out    dx,eax
  41b36b:	push   ds
  41b36c:	xlat   BYTE PTR ds:[ebx]
  41b36d:	loopne 0x41b2f5
  41b36f:	data16 jnp 0x41b372
  41b372:	jne    0x41b390
  41b374:	mov    edx,0x246914
  41b379:	dec    ebx
  41b37a:	or     DWORD PTR [ebx+0x8],ebp
  41b37d:	ja     0x41b375
  41b37f:	data16 aam 0x3
  41b382:	shl    DWORD PTR [edi+ebx*2],1
  41b385:	cmp    dh,BYTE PTR [ebx+ecx*4-0x594fae45]
  41b38c:	jae    0x41b400
  41b38e:	add    BYTE PTR [ebp+0x9c287cd],dh
  41b394:	dec    ebx
  41b395:	cmp    esp,DWORD PTR [eax+eax*1]
  41b398:	cmp    bh,BYTE PTR [eax+0x67]
  41b39b:	lock pop es
  41b39d:	scas   al,BYTE PTR es:[edi]
  41b39e:	ins    BYTE PTR es:[edi],dx
  41b39f:	enter  0x7300,0x1a
  41b3a3:	add    esi,DWORD PTR [ecx-0x69]
  41b3a6:	jo     0x41b35c
  41b3a8:	out    0x3b,al
  41b3aa:	out    dx,eax
  41b3ab:	jg     0x41b3c3
  41b3ad:	imul   bl
  41b3af:	add    bl,bh
  41b3b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3b2:	push   ecx
  41b3b3:	sbb    bl,bl
  41b3b5:	imul   esi,DWORD PTR [esp+ebx*8+0x0],0xffffff80
  41b3ba:	sub    al,0x1
  41b3bc:	je     0x41b3ba
  41b3be:	xor    dh,BYTE PTR [edi+ebp*8]
  41b3c1:	push   ds
  41b3c2:	jo     0x41b3ec
  41b3c4:	push   esi
  41b3c5:	add    edi,DWORD PTR [eax-0x5c]
  41b3c8:	jbe    0x41b3ad
  41b3ca:	fcomp  st(2)
  41b3cc:	mov    al,ds:0x5fd502fe
  41b3d1:	ds mov dl,0x5d
  41b3d4:	add    eax,0x89880be3
  41b3d9:	data16 jb 0x41b415
  41b3dc:	add    ecx,edi
  41b3de:	sbb    ch,0xfb
  41b3e1:	xor    ecx,DWORD PTR [ecx]
  41b3e3:	addr16 fsqrt 
  41b3e6:	add    eax,0xb5603224
  41b3eb:	xchg   DWORD PTR es:[ebp+0x30],edx
  41b3ef:	sbb    BYTE PTR [eax-0x13ffeaed],dh
  41b3f5:	xchg   ecx,eax
  41b3f6:	inc    eax
  41b3f7:	jge    0x41b428
  41b3f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3fa:	mov    cl,0xb6
  41b3fc:	add    BYTE PTR [ecx+0x7e0e8e7],bh
  41b402:	ret    0x7a48
  41b405:	add    BYTE PTR [ebx-0x4201099d],cl
  41b40b:	add    ebx,DWORD PTR [edx-0x2c]
  41b40e:	invd   
  41b410:	in     eax,0xf9
  41b412:	mov    edi,0x5bb54900
  41b417:	fdivr  DWORD PTR [eax-0x5a67800]
  41b41d:	fbld   TBYTE PTR [edx+eiz*2-0x6ae2071d]
  41b424:	or     eax,0x91dec01f
  41b429:	pushf  
  41b42a:	cld    
  41b42b:	sub    edx,eax
  41b42d:	or     DWORD PTR [edi-0x7f86abe4],ebx
  41b433:	(bad)  
  41b434:	out    dx,al
  41b435:	adc    DWORD PTR [ebx-0x3a],0x1b895f00
  41b43c:	mov    ebp,0x2d65df93
  41b441:	add    BYTE PTR [ecx],dl
  41b443:	add    al,0xb2
  41b445:	jg     0x41b439
  41b447:	clc    
  41b448:	sbb    eax,0x35c007fa
  41b44d:	jp     0x41b49c
  41b44f:	jmp    0xe39e:0xefeb9e
  41b456:	or     bl,BYTE PTR [esi+0x2e]
  41b459:	add    BYTE PTR [ebp+0x520cd0d7],dh
  41b45f:	scas   al,BYTE PTR es:[edi]
  41b460:	pop    es
  41b461:	imul   edi,DWORD PTR [edi],0x703cba81
  41b467:	xchg   DWORD PTR [ebx+0x30b0ce99],ebp
  41b46d:	shl    BYTE PTR [bp-0x951],cl
  41b472:	hlt    
  41b473:	add    cl,cl
  41b475:	mov    al,ds:0x69c60a8e
  41b47a:	pop    esp
  41b47b:	sbb    al,BYTE PTR [eax]
  41b47d:	retf   
  41b47e:	enter  0xae34,0xaa
  41b482:	pop    ds
  41b483:	cmp    DWORD PTR [ebx],esi
  41b485:	add    cl,ah
  41b487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b488:	add    eax,0x66c65448
  41b48d:	cmc    
  41b48e:	sub    al,0x75
  41b490:	push   es
  41b491:	add    DWORD PTR [edi],0x7a
  41b494:	jo     0x41b4d6
  41b496:	jo     0x41b418
  41b498:	and    BYTE PTR [edi-0x29],dh
  41b49b:	add    ebx,eax
  41b49d:	adc    al,0x73
  41b49f:	mov    cl,0x46
  41b4a1:	(bad)  
  41b4a2:	shl    al,cl
  41b4a4:	das    
  41b4a5:	rcr    BYTE PTR [edi],1
  41b4a7:	push   ds
  41b4a8:	stc    
  41b4a9:	aaa    
  41b4aa:	inc    edi
  41b4ab:	jbe    0x41b4a8
  41b4ad:	fwait
  41b4ae:	add    BYTE PTR [ecx+0x20],ah
  41b4b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4b2:	test   BYTE PTR [eax],0x67
  41b4b5:	mov    esp,0x24297b4a
  41b4ba:	adc    eax,0xb28b2604
  41b4bf:	xchg   edi,eax
  41b4c0:	add    DWORD PTR [esi],ecx
  41b4c2:	bnd je 0x41b456
  41b4c5:	aaa    
  41b4c6:	in     al,0x93
  41b4c8:	xor    al,BYTE PTR [eax]
  41b4ca:	lods   al,BYTE PTR ds:[esi]
  41b4cb:	cmc    
  41b4cc:	dec    ebp
  41b4cd:	out    0x60,eax
  41b4cf:	mov    eax,0x5f00193f
  41b4d4:	inc    ebp
  41b4d5:	dec    ebx
  41b4d6:	ss mov ecx,0x4600e202
  41b4dd:	in     eax,0xc6
  41b4df:	and    al,0x62
  41b4e1:	adc    eax,0x7d00c8a9
  41b4e6:	push   esp
  41b4e7:	fisttp DWORD PTR [ebx+0x16]
  41b4ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4eb:	aad    0x52
  41b4ed:	add    dh,BYTE PTR [ecx+0x26f97144]
  41b4f3:	cmp    esp,eax
  41b4f5:	cdq    
  41b4f6:	in     eax,0x34
  41b4f8:	sub    BYTE PTR [ebp+0x75],bh
  41b4fb:	fadd   DWORD PTR [eax]
  41b4fd:	dec    ebp
  41b4fe:	jecxz  0x41b50f
  41b500:	retf   0xc701
  41b503:	jp     0x41b4a2
  41b505:	push   ds
  41b506:	stos   BYTE PTR es:[edi],al
  41b507:	cld    
  41b508:	xchg   esp,eax
  41b509:	or     edi,DWORD PTR [ebx]
  41b50b:	or     al,BYTE PTR [eax+0x55cf5cff]
  41b511:	cli    
  41b512:	add    DWORD PTR [ebx],ebp
  41b514:	std    
  41b515:	ror    BYTE PTR [ebx-0x8],cl
  41b518:	and    BYTE PTR [ecx+0x7fbcd940],al
  41b51e:	loope  0x41b514
  41b520:	retf   0xf400
  41b523:	mov    ebx,0x3d9c217e
  41b528:	out    dx,al
  41b529:	add    eax,DWORD PTR [eax]
  41b52b:	xor    dh,BYTE PTR [ebx]
  41b52d:	cmc    
  41b52e:	bound  edx,QWORD PTR [ebx+0x1a]
  41b531:	cs jp  0x41b543
  41b534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b535:	inc    ebp
  41b536:	push   ebp
  41b537:	enter  0x36a3,0x95
  41b53b:	mov    eax,DWORD PTR [eax+0xf5e77f]
  41b541:	loopne 0x41b4de
  41b543:	dec    eax
  41b544:	xchg   ecx,eax
  41b545:	inc    bl
  41b547:	cs das 
  41b549:	add    bl,dh
  41b54b:	outs   dx,DWORD PTR ds:[esi]
  41b54c:	dec    ebp
  41b54d:	mov    fs,WORD PTR [ebx+0x3c]
  41b550:	dec    esp
  41b551:	or     eax,DWORD PTR [eax]
  41b553:	mov    dh,0x41
  41b555:	mov    bh,0x6e
  41b557:	aaa    
  41b558:	add    eax,0x1f0035d9
  41b55d:	cwde   
  41b55e:	xchg   ecx,eax
  41b55f:	jae    0x41b532
  41b561:	jge    0x41b5bd
  41b563:	sub    al,0x3b
  41b565:	in     eax,dx
  41b566:	dec    ecx
  41b567:	cmp    ebx,DWORD PTR [esi+0x57299c04]
  41b56d:	test   al,0xc0
  41b56f:	mov    ds:0x1bc9b7f,al
  41b574:	aam    0xfc
  41b576:	mov    DWORD PTR [esp+ebx*2],eax
  41b579:	sbb    edi,DWORD PTR [eax-0x138f4807]
  41b57f:	inc    esi
  41b580:	push   cs
  41b581:	sbb    al,0x13
  41b583:	scas   al,BYTE PTR es:[edi]
  41b584:	cmp    eax,DWORD PTR [eax-0x4d87cd14]
  41b58a:	cmp    BYTE PTR [eax],al
  41b58c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b58d:	(bad)  
  41b58e:	jl     0x41b5a8
  41b590:	in     al,0x88
  41b592:	xor    eax,0xbe930036
  41b597:	dec    cl
  41b599:	pop    eax
  41b59a:	sti    
  41b59b:	test   BYTE PTR [edx+0x11ec7003],ah
  41b5a1:	loope  0x41b604
  41b5a3:	mov    dl,0xc8
  41b5a5:	rol    BYTE PTR [ecx-0x13f3e9d],cl
  41b5ab:	mov    ah,0xce
  41b5ad:	or     eax,ebp
  41b5af:	clc    
  41b5b0:	retf   
  41b5b1:	jns    0x41b5cd
  41b5b3:	add    BYTE PTR [ebx-0x79d24987],ch
  41b5b9:	sub    DWORD PTR [esi+0x22],esi
  41b5bc:	add    BYTE PTR [ecx-0x3e],ch
  41b5bf:	adc    DWORD PTR [ebp+0x73],ebp
  41b5c2:	or     al,0xa0
  41b5c4:	add    ch,BYTE PTR es:[eax+eax*4+0x669d7be2]
  41b5cc:	pusha  
  41b5cd:	mov    ebx,0xe1077da6
  41b5d2:	sub    BYTE PTR [esi+0x3d30b6d6],cl
  41b5d8:	add    eax,0x1c005f43
  41b5dd:	sti    
  41b5de:	and    ecx,DWORD PTR [edi+0x3270ebce]
  41b5e4:	popa   
  41b5e5:	lods   eax,DWORD PTR ds:[esi]
  41b5e6:	(bad)  
  41b5e7:	not    DWORD PTR [ecx+0x243ccca0]
  41b5ed:	cmp    BYTE PTR [esi+0x2208891b],cl
  41b5f3:	add    BYTE PTR [eax],0xfb
  41b5f6:	pusha  
  41b5f7:	push   ecx
  41b5f8:	lahf   
  41b5f9:	fisttp DWORD PTR [eax+0x6f]
  41b5fc:	add    eax,0x73c76700
  41b601:	cmp    ecx,ebp
  41b603:	retf   
  41b604:	sub    BYTE PTR [esi+ebp*2+0x2a],bl
  41b608:	add    BYTE PTR [edi-0x7c],bl
  41b60b:	das    
  41b60c:	jns    0x41b5ff
  41b60e:	jno    0x41b660
  41b610:	add    BYTE PTR [edi-0x15],dl
  41b613:	sbb    al,0x5
  41b615:	dec    esp
  41b616:	(bad)  
  41b617:	ds sahf 
  41b619:	lock or DWORD PTR [eax],eax
  41b61c:	inc    ebx
  41b61d:	in     eax,dx
  41b61e:	dec    edx
  41b61f:	sbb    esp,ebp
  41b621:	pop    ds
  41b622:	pop    ebp
  41b623:	and    eax,0x29d2e907
  41b628:	mov    bx,0xc8d0
  41b62c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b62d:	aam    0xdd
  41b62f:	or     esi,edx
  41b631:	in     al,0xfd
  41b633:	cmp    DWORD PTR [edi-0x75fe5d9],eax
  41b639:	nop
  41b63a:	sbb    esp,DWORD PTR [edx+0x37003cfe]
  41b640:	sar    DWORD PTR [eax-0x1],cl
  41b643:	pop    eax
  41b644:	lods   al,BYTE PTR ds:[esi]
  41b645:	int3   
  41b646:	lea    eax,[eax]
  41b648:	pop    esp
  41b649:	sub    eax,0x6aecd5a0
  41b64e:	dec    edi
  41b64f:	pop    ds
  41b650:	add    al,dl
  41b652:	neg    dh
  41b654:	fs push edx
  41b656:	push   esp
  41b657:	cdq    
  41b658:	dec    DWORD PTR [edi]
  41b65a:	fsub   DWORD PTR [ebx]
  41b65c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b65d:	push   ss
  41b65e:	(bad)  
  41b65f:	mov    edi,0x86773012
  41b664:	lea    edx,[ebx+0x489dd307]
  41b66a:	mov    ds:0x2b692020,eax
  41b66f:	imul   ecx,DWORD PTR [ecx+0x75],0x1c
  41b673:	add    BYTE PTR [edi+0x18],dl
  41b676:	call   0x38a:0x665495fb
  41b67d:	test   eax,0xe3784385
  41b682:	das    
  41b683:	cwde   
  41b684:	xchg   DWORD PTR [eax+0x551500ee],edx
  41b68a:	aad    0xa7
  41b68c:	sar    BYTE PTR ds:0x3600d694,0xa8
  41b693:	xchg   esi,eax
  41b694:	enter  0x9b7c,0x1c
  41b698:	ds pop es
  41b69a:	sbb    DWORD PTR [ebp+0x39],edi
  41b69d:	mov    al,0xda
  41b69f:	shl    ch,1
  41b6a1:	mov    eax,DWORD PTR [edx+0x496c01c9]
  41b6a7:	dec    BYTE PTR ds:0x80e0cc86
  41b6ad:	or     bh,dl
  41b6af:	sbb    BYTE PTR [esp+ecx*4],bl
  41b6b2:	icebp  
  41b6b3:	je     0x41b66d
  41b6b5:	ins    DWORD PTR es:[edi],dx
  41b6b6:	add    dh,ch
  41b6b8:	call   0x28dd:0x14e823ea
  41b6bf:	call   0x84d3b6e4
  41b6c4:	stos   BYTE PTR es:[edi],al
  41b6c5:	mov    al,0x79
  41b6c7:	neg    DWORD PTR [eax+0x27e90f13]
  41b6cd:	in     eax,dx
  41b6ce:	push   fs
  41b6d0:	pushf  
  41b6d1:	xor    bh,ch
  41b6d3:	add    dh,BYTE PTR [eax+esi*2+0x35fa6b]
  41b6da:	pop    eax
  41b6db:	xor    BYTE PTR [esi-0x47],0xfa
  41b6df:	aas    
  41b6e0:	leave  
  41b6e1:	jns    0x41b6e3
  41b6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6e4:	in     eax,dx
  41b6e5:	push   ebx
  41b6e6:	daa    
  41b6e7:	fmul   QWORD PTR [ebp-0x5c]
  41b6ea:	or     eax,0x10a713e
  41b6ef:	stos   DWORD PTR es:[edi],eax
  41b6f0:	and    BYTE PTR [ebx],ah
  41b6f2:	in     al,dx
  41b6f3:	dec    ebx
  41b6f4:	pop    DWORD PTR [eax-0x19]
  41b6f7:	adc    DWORD PTR [edx+0x50],esp
  41b6fa:	add    BYTE PTR [edi],ch
  41b6fc:	mov    esp,0x4485d51d
  41b701:	mov    cl,0xea
  41b703:	pop    eax
  41b704:	xor    BYTE PTR [eax+eax*1],ah
  41b707:	xor    al,0xf1
  41b709:	jnp    0x41b68c
  41b70b:	(bad)  
  41b70c:	xchg   esp,eax
  41b70d:	sbb    al,BYTE PTR [eax]
  41b70f:	add    DWORD PTR [esi+0x456cf5a8],esp
  41b715:	aam    0x88
  41b717:	cmp    BYTE PTR [ebx],ah
  41b719:	fadd   QWORD PTR [eax]
  41b71b:	jmp    0xa7b3:0x8de6499a
  41b722:	add    BYTE PTR [eax],cl
  41b724:	les    ebp,FWORD PTR [edx-0xc]
  41b727:	and    al,0xca
  41b729:	pop    es
  41b72a:	jns    0x41b728
  41b72c:	sub    eax,0xffaeb800
  41b731:	or     edx,DWORD PTR [edi+0x83a1f9]
  41b737:	lock lods al,BYTE PTR fs:[esi]
  41b73a:	lods   eax,DWORD PTR ds:[esi]
  41b73b:	mov    edi,0xfe89b33
  41b740:	cmp    dl,ch
  41b742:	int    0x1a
  41b744:	mov    al,ds:0xf37a6f82
  41b749:	jecxz  0x41b75a
  41b74b:	scas   al,BYTE PTR es:[edi]
  41b74c:	idiv   DWORD PTR [eax]
  41b74e:	test   al,0xa0
  41b750:	scas   eax,DWORD PTR es:[edi]
  41b751:	ficomp DWORD PTR [esi-0x62]
  41b754:	mov    edx,0x8eff4c00
  41b759:	and    BYTE PTR [eax+0xb5c1ee],0x50
  41b760:	push   ss
  41b761:	fstp   QWORD PTR [ebp-0x45]
  41b764:	stos   BYTE PTR es:[edi],al
  41b765:	ja     0x41b719
  41b767:	add    DWORD PTR [edi-0x1c],ebp
  41b76a:	fiadd  WORD PTR [edx-0xbcbe240]
  41b770:	add    dl,BYTE PTR [edi-0xe]
  41b773:	aam    0x90
  41b775:	enter  0xf700,0xbc
  41b779:	sub    eax,0xfe7fe34f
  41b77e:	mov    cl,0x0
  41b780:	jp     0x41b760
  41b782:	retf   
  41b783:	test   eax,0xd9333073
  41b788:	add    BYTE PTR [edx+0x23b54a3e],bh
  41b78e:	mov    esp,DWORD PTR [edi]
  41b790:	aaa    
  41b791:	add    bh,ch
  41b793:	xchg   DWORD PTR [ebx-0x4d1c30a8],esp
  41b799:	out    dx,al
  41b79a:	nop
  41b79b:	mov    bh,0x0
  41b79d:	in     al,0x22
  41b79f:	ins    DWORD PTR es:[edi],dx
  41b7a0:	ja     0x41b741
  41b7a2:	ret    
  41b7a3:	fwait
  41b7a4:	imul   eax,DWORD PTR [ecx],0xd87b8a4b
  41b7aa:	jge    0x41b7fd
  41b7ac:	push   es
  41b7ad:	rol    BYTE PTR [ecx+0x206e00e5],0xd5
  41b7b4:	repz jle 0x41b7fd
  41b7b7:	out    0x60,al
  41b7b9:	push   ss
  41b7ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7bb:	fisttp QWORD PTR [edx]
  41b7bd:	add    BYTE PTR [edx+ebp*8+0x66],bh
  41b7c1:	xor    BYTE PTR [edx+0x1e0206ec],bh
  41b7c7:	mov    edi,0xd885f4
  41b7cc:	stos   BYTE PTR es:[edi],al
  41b7cd:	xchg   DWORD PTR [edi+0x6109cdfa],ebp
  41b7d3:	lock jbe 0x41b7c3
  41b7d6:	add    BYTE PTR [esi-0x5e],dl
  41b7d9:	xor    edx,DWORD PTR [ebx+0x1c5eb843]
  41b7df:	add    BYTE PTR [edx],bh
  41b7e1:	jns    0x41b7c2
  41b7e3:	adc    al,0xbb
  41b7e5:	jbe    0x41b79c
  41b7e7:	jnp    0x41b7fb
  41b7e9:	cmc    
  41b7ea:	mov    esi,0x2fd00d1
  41b7ef:	ficomp DWORD PTR [ecx-0x7efc4e12]
  41b7f5:	scas   eax,DWORD PTR es:[edi]
  41b7f6:	adc    al,0x3c
  41b7f8:	les    bx,DWORD PTR [eax+0x390fd2]
  41b7ff:	sahf   
  41b800:	lods   al,BYTE PTR ds:[esi]
  41b801:	aas    
  41b802:	push   cs
  41b803:	test   eax,0xf0aa6c41
  41b808:	adc    bl,BYTE PTR [eax-0x2]
  41b80b:	mov    eax,0xb8fc7d
  41b810:	(bad)  [esi+0x6b]
  41b813:	cli    
  41b814:	mov    WORD PTR [ecx+0x2f2c2c26],gs
  41b81a:	dec    eax
  41b81b:	ins    BYTE PTR es:[edi],dx
  41b81c:	add    BYTE PTR [ebx-0x1e],cl
  41b81f:	test   BYTE PTR [edi+0x78006039],ah
  41b825:	pop    edi
  41b826:	clc    
  41b827:	dec    ecx
  41b828:	nop
  41b829:	jmp    0x8acf:0x8700aec2
  41b830:	pop    esi
  41b831:	inc    esi
  41b832:	sahf   
  41b833:	xor    edi,DWORD PTR [edi]
  41b835:	push   cs
  41b836:	shr    DWORD PTR ds:0xeaa0bd77,0x17
  41b83d:	scas   al,BYTE PTR es:[edi]
  41b83e:	add    ch,BYTE PTR [ecx+0xe]
  41b841:	imul   BYTE PTR [esi+0x55]
  41b844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b845:	loopne 0x41b7d5
  41b847:	lea    esi,[eax+0x61004dab]
  41b84d:	aad    0xfe
  41b84f:	pushf  
  41b850:	sbb    bh,BYTE PTR [eax-0x3cfffd3b]
  41b856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b857:	inc    esp
  41b858:	pop    eax
  41b859:	xor    BYTE PTR [edi],cl
  41b85b:	push   esi
  41b85c:	test   edx,edi
  41b85e:	push   0xdd92c100
  41b863:	sar    ch,1
  41b865:	popf   
  41b866:	mov    dl,dl
  41b868:	add    BYTE PTR [ebx],al
  41b86a:	cmp    cl,BYTE PTR [edx+eiz*2+0x7bee8439]
  41b871:	jle    0x41b86e
  41b873:	pop    es
  41b874:	inc    ebp
  41b875:	repz pushf 
  41b877:	sub    DWORD PTR [eax],0xc024e920
  41b87d:	rol    DWORD PTR [ecx],0x95
  41b880:	dec    esp
  41b881:	pop    eax
  41b882:	into   
  41b883:	sbb    ah,BYTE PTR [esi]
  41b885:	aam    0xcc
  41b887:	and    ebp,DWORD PTR [ebp+0x0]
  41b88a:	push   ds
  41b88b:	push   0x34ef96c4
  41b890:	sub    ah,bh
  41b892:	add    bl,bh
  41b894:	test   eax,0xd0cf424
  41b899:	xchg   ebx,eax
  41b89a:	and    DWORD PTR ds:0xb70cfed,edi
  41b8a0:	repz pusha 
  41b8a2:	mov    bl,0x54
  41b8a4:	cmp    dl,0x97
  41b8a7:	retf   0x42c
  41b8aa:	push   es
  41b8ab:	jmp    0x1cf2:0xf22613dd
  41b8b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8b3:	out    0x74,eax
  41b8b5:	sar    BYTE PTR [edi+0x2c171503],0xe3
  41b8bc:	add    ch,ah
  41b8be:	out    dx,al
  41b8bf:	icebp  
  41b8c0:	iret   
  41b8c1:	sar    DWORD PTR [edi],1
  41b8c3:	lahf   
  41b8c4:	pop    esi
  41b8c5:	add    BYTE PTR [edx+ebp*8],dh
  41b8c8:	cmp    DWORD PTR [ecx+0x52],ebp
  41b8cb:	call   0xeb90:0x95266d73
  41b8d2:	pop    es
  41b8d3:	and    bl,BYTE PTR [edi]
  41b8d5:	push   edi
  41b8d6:	mov    eax,ds:0xdcf4eca4
  41b8db:	push   ecx
  41b8dc:	xchg   edx,eax
  41b8dd:	add    al,al
  41b8df:	adc    BYTE PTR [ebp+0x30d48f9e],dh
  41b8e5:	push   0x20919507
  41b8ea:	aaa    
  41b8eb:	mov    ebx,0x3873ca90
  41b8f0:	mov    BYTE PTR [eax],al
  41b8f2:	or     BYTE PTR [ebp+0x3c723915],dh
  41b8f8:	adc    eax,DWORD PTR [ebx-0x11a6f100]
  41b8fe:	loope  0x41b8e8
  41b900:	jmp    0xcd64:0x821f43a5
  41b907:	add    BYTE PTR [eax-0x24bae027],dl
  41b90d:	inc    BYTE PTR [eax]
  41b90f:	sbb    DWORD PTR [esp+edi*1-0x57],ebx
  41b913:	push   ebx
  41b914:	pop    ebx
  41b915:	cld    
  41b916:	inc    ecx
  41b917:	dec    eax
  41b918:	jbe    0x41b921
  41b91a:	add    BYTE PTR [esi+0x229c1c7b],ah
  41b920:	xchg   ecx,eax
  41b921:	enter  0xa176,0x0
  41b925:	(bad)  
  41b926:	scas   al,BYTE PTR es:[edi]
  41b927:	push   ecx
  41b928:	lods   al,BYTE PTR ds:[esi]
  41b929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b92a:	sub    ecx,DWORD PTR [esi]
  41b92c:	rol    DWORD PTR [edx],cl
  41b92e:	inc    ebp
  41b92f:	push   es
  41b930:	add    esp,eax
  41b932:	mov    dl,0x3f
  41b934:	loopne 0x41b8ce
  41b936:	add    cl,BYTE PTR ds:0x954ec41e
  41b93c:	pop    edi
  41b93d:	inc    esi
  41b93e:	add    BYTE PTR [ebx+0x599efada],0x3f
  41b945:	add    BYTE PTR [ebx+eiz*2],bl
  41b948:	aaa    
  41b949:	push   ds
  41b94a:	cs loopne 0x41b8f5
  41b94d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b94e:	add    BYTE PTR [edx+esi*1+0x26],ch
  41b952:	(bad)  
  41b953:	frstor [edi+0x2d79109c]
  41b959:	or     DWORD PTR [edx-0x14],eax
  41b95c:	mov    eax,0x8e3c8453
  41b961:	xor    DWORD PTR [esi+0x75],0xffffffa0
  41b965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b966:	pop    esi
  41b967:	bnd jnp 0x41b99d
  41b96a:	add    BYTE PTR [ebx-0x55],bh
  41b96d:	mov    al,ds:0xee21fb8
  41b972:	sldt   WORD PTR [eax-0x76eed444]
  41b979:	lea    esi,[esi]
  41b97b:	mov    edx,0x7bf9a48
  41b980:	sub    al,0xa4
  41b982:	jecxz  0x41b9ac
  41b984:	shr    BYTE PTR [edx+0x3868003],1
  41b98a:	ins    BYTE PTR es:[edi],dx
  41b98b:	test   eax,0x9f43ead6
  41b990:	fcomp  DWORD PTR [edx]
  41b992:	and    dl,BYTE PTR [edi+0x3e4e0a00]
  41b998:	iret   
  41b999:	sahf   
  41b99a:	dec    edx
  41b99b:	pop    ecx
  41b99c:	dec    eax
  41b99d:	add    ah,cl
  41b99f:	add    bh,BYTE PTR [ecx]
  41b9a1:	popf   
  41b9a2:	lahf   
  41b9a3:	nop
  41b9a4:	imul   esp,edx,0x1
  41b9a7:	cld    
  41b9a8:	in     eax,dx
  41b9a9:	inc    ebx
  41b9aa:	or     cl,BYTE PTR [esi+0x1af89ab5]
  41b9b0:	retf   0x6a00
  41b9b3:	ins    DWORD PTR es:[edi],dx
  41b9b4:	mov    eax,DWORD PTR [edi+0x28]
  41b9b7:	imul   esp,esi,0x249f7861
  41b9bd:	jbe    0x41b9ee
  41b9bf:	add    bl,BYTE PTR [edi]
  41b9c1:	pusha  
  41b9c2:	ret    
  41b9c3:	ret    
  41b9c4:	les    ecx,FWORD PTR [edi-0x53]
  41b9c7:	call   0xede1d3
  41b9cc:	je     0x41b987
  41b9ce:	xchg   esi,eax
  41b9cf:	stc    
  41b9d0:	imul   ebx,esp,0x2438e51e
  41b9d6:	dec    ebx
  41b9d7:	sub    DWORD PTR [esi+ecx*1-0x26],0xd851f0a2
  41b9df:	outs   dx,BYTE PTR ds:[esi]
  41b9e0:	lods   al,BYTE PTR ds:[esi]
  41b9e1:	add    BYTE PTR [ecx-0x30],al
  41b9e4:	cmc    
  41b9e5:	push   ebp
  41b9e6:	(bad)  
  41b9e7:	rcr    DWORD PTR [edi],cl
  41b9e9:	sti    
  41b9ea:	add    BYTE PTR [esi],bh
  41b9ec:	xchg   edx,eax
  41b9ed:	cli    
  41b9ee:	sbb    eax,esp
  41b9f0:	cmp    DWORD PTR [edi],0xffffffa9
  41b9f3:	add    BYTE PTR ds:0xd9140767,dl
  41b9f9:	cmp    BYTE PTR [eax],ah
  41b9fb:	test   DWORD PTR [eax],0x347963d1
  41ba01:	test   BYTE PTR [esi+0x3e],bh
  41ba04:	imul   edi,ebp,0x85a260
  41ba0a:	sub    al,BYTE PTR [edx+0x4fbfeca]
  41ba10:	inc    edi
  41ba11:	les    ecx,FWORD PTR [edi]
  41ba13:	mov    dl,0xc2
  41ba15:	dec    di
  41ba17:	arpl   WORD PTR [eax],di
  41ba19:	sub    eax,0x3a16881e
  41ba1e:	push   ecx
  41ba1f:	add    ch,ch
  41ba21:	ror    BYTE PTR [edx-0x42],cl
  41ba24:	call   0xaf12:0xea59dec
  41ba2b:	out    dx,eax
  41ba2c:	std    
  41ba2d:	scas   eax,DWORD PTR es:[edi]
  41ba2e:	sub    al,al
  41ba30:	int3   
  41ba31:	(bad)  
  41ba32:	loopne 0x41ba06
  41ba34:	inc    DWORD PTR [eax]
  41ba36:	mov    dh,0xe2
  41ba38:	dec    esi
  41ba39:	loope  0x41ba78
  41ba3b:	xor    eax,0xe2a06346
  41ba40:	in     eax,0x5d
  41ba42:	add    BYTE PTR [esi-0x3b],bh
  41ba45:	mov    eax,0x81d403ca
  41ba4a:	scas   al,BYTE PTR es:[edi]
  41ba4b:	repnz mov ecx,0xe65fc300
  41ba51:	adc    DWORD PTR [ebp+0x4f],edi
  41ba54:	jns    0x41ba26
  41ba56:	add    edi,DWORD PTR [ecx]
  41ba58:	jg     0x41b9de
  41ba5a:	mov    ch,0x31
  41ba5c:	out    dx,al
  41ba5d:	loopne 0x41babc
  41ba5f:	or     al,0xe4
  41ba61:	push   cs
  41ba62:	push   esi
  41ba63:	cmp    eax,0xb03052e
  41ba68:	inc    eax
  41ba69:	scas   al,BYTE PTR es:[edi]
  41ba6a:	xchg   ebx,eax
  41ba6b:	pop    eax
  41ba6c:	lock xor dl,dl
  41ba6f:	mov    cl,0x0
  41ba71:	xchg   ebx,eax
  41ba72:	push   cs
  41ba73:	mov    eax,ds:0xe5d16a10
  41ba78:	pop    esp
  41ba79:	add    al,dh
  41ba7b:	iret   
  41ba7c:	stos   BYTE PTR es:[edi],al
  41ba7d:	xchg   edx,eax
  41ba7e:	bound  ebp,QWORD PTR [ecx-0x1e]
  41ba81:	sbb    DWORD PTR [eax],eax
  41ba83:	mov    DWORD PTR ds:0xfdbe9f5,0xfa73ad7a
  41ba8d:	add    dl,dh
  41ba8f:	jle    0x41baa6
  41ba91:	fsub   DWORD PTR [eax+ebx*2+0x51]
  41ba95:	mov    edx,0x3ae24300
  41ba9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba9b:	nop
  41ba9c:	fwait
  41ba9d:	popa   
  41ba9e:	mov    ch,0x0
  41baa0:	pop    ecx
  41baa1:	adc    BYTE PTR [edi],ch
  41baa3:	fldlg2 
  41baa5:	and    eax,0xcf00dacd
  41baaa:	mov    bl,0x84
  41baac:	mov    al,0x5f
  41baae:	and    bl,BYTE PTR [edi+0x443c00c7]
  41bab4:	jne    0x41baa3
  41bab6:	xchg   ebp,eax
  41bab7:	jp     0x41bac9
  41bab9:	mov    dh,0xf0
  41babb:	mov    ah,0x0
  41babd:	pop    es
  41babe:	js     0x41bb34
  41bac0:	(bad)  
  41bac1:	xlat   BYTE PTR ds:[ebx]
  41bac2:	lahf   
  41bac3:	adc    al,0xdf
  41bac5:	or     dl,BYTE PTR [ecx-0x396b82c7]
  41bacb:	push   cs
  41bacc:	cmp    BYTE PTR [esi-0x40],bh
  41bacf:	push   ss
  41bad0:	sbb    al,0xa0
  41bad2:	fld    DWORD PTR ds:0x4f802400
  41bad8:	pop    ebp
  41bad9:	inc    edx
  41bada:	lock dec ecx
  41badc:	pop    edx
  41badd:	pop    es
  41bade:	in     al,dx
  41badf:	test   eax,0xf712af0b
  41bae4:	sbb    esp,DWORD PTR [ecx+0x2e]
  41bae7:	add    ebx,DWORD PTR [ebp+eax*8-0x5a]
  41baeb:	les    ebp,FWORD PTR [eax+0x7f]
  41baee:	add    BYTE PTR [ecx],bl
  41baf0:	fs addr16 pusha 
  41baf3:	xchg   edi,eax
  41baf4:	dec    edi
  41baf5:	pop    edi
  41baf6:	inc    edx
  41baf7:	add    bh,ch
  41baf9:	dec    ebp
  41bafa:	bswap  ebp
  41bafc:	test   DWORD PTR [ebx+0x6b005663],ebx
  41bb02:	mov    al,dh
  41bb04:	sbb    al,0x2a
  41bb06:	push   eax
  41bb07:	or     ah,al
  41bb09:	sbb    al,0xec
  41bb0b:	or     BYTE PTR [edi],ah
  41bb0d:	(bad)  
  41bb0f:	pop    esi
  41bb10:	inc    eax
  41bb11:	rol    dl,0x4f
  41bb14:	loop   0x41bb27
  41bb16:	stos   DWORD PTR es:[edi],eax
  41bb17:	inc    ebx
  41bb18:	add    BYTE PTR [ecx+0x4682d79],dl
  41bb1e:	push   edi
  41bb1f:	adc    ch,BYTE PTR [eax+eax*1-0x2690a4d7]
  41bb26:	xchg   DWORD PTR [ebx+esi*8-0x36],eax
  41bb2a:	add    BYTE PTR [ebp+0x66e933b5],dl
  41bb30:	scas   eax,DWORD PTR es:[edi]
  41bb31:	mov    ebx,0xdd7e000c
  41bb36:	out    0x6b,al
  41bb38:	jecxz  0x41bacb
  41bb3a:	push   ebp
  41bb3b:	and    DWORD PTR [eax],eax
  41bb3d:	aas    
  41bb3e:	aad    0x94
  41bb40:	pop    eax
  41bb41:	mov    ebx,?
  41bb43:	or     al,BYTE PTR [ebp+0x0]
  41bb46:	mov    ah,0x70
  41bb48:	test   al,0xc0
  41bb4a:	and    ebp,esi
  41bb4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb4d:	add    DWORD PTR [eax],0xa33ac90b
  41bb53:	xchg   ebp,eax
  41bb54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb55:	push   ebx
  41bb56:	jmp    0x60da:0xb112890f
  41bb5d:	cmp    al,0x93
  41bb5f:	(bad)  [ebp-0x6f50ff6c]
  41bb65:	pusha  
  41bb66:	je     0x41bb59
  41bb68:	call   0x7649a36b
  41bb6d:	jmp    0xb25d:0xb0835242
  41bb74:	sub    DWORD PTR [ebx+0x7b],edi
  41bb77:	and    BYTE PTR [eax],al
  41bb79:	mov    eax,ds:0xc7cd94f3
  41bb7e:	inc    ecx
  41bb7f:	pop    es
  41bb80:	xchg   edx,eax
  41bb81:	add    cl,cl
  41bb83:	addr16 ftst 
  41bb86:	cmp    DWORD PTR [eax-0x6d],0xffffffa3
  41bb8a:	add    DWORD PTR [eax],edx
  41bb8c:	cdq    
  41bb8d:	ret    0xeda5
  41bb90:	mov    eax,0x4aecf881
  41bb95:	add    BYTE PTR [ebx+eiz*1-0x4471ac61],ch
  41bb9c:	xor    dh,BYTE PTR [ebx+0x0]
  41bb9f:	out    dx,eax
  41bba0:	mov    esi,0x831bfe02
  41bba5:	lds    ebp,FWORD PTR ds:0x9daae20e
  41bbab:	mov    ecx,0xf8470e0
  41bbb0:	push   0x52f200ee
  41bbb5:	mov    BYTE PTR [ecx],dl
  41bbb7:	mov    esi,0x67ea01
  41bbbc:	outs   dx,DWORD PTR ds:[esi]
  41bbbd:	sub    BYTE PTR [edi-0x28650135],al
  41bbc3:	xchg   esi,eax
  41bbc4:	add    ebx,esp
  41bbc6:	dec    ecx
  41bbc7:	and    cl,BYTE PTR [edi-0x2f362f06]
  41bbcd:	(bad)  
  41bbce:	dec    edx
  41bbcf:	add    BYTE PTR [eax],ch
  41bbd1:	ins    BYTE PTR es:[edi],dx
  41bbd2:	and    eax,0xd1584673
  41bbd7:	cmp    DWORD PTR [eax],eax
  41bbd9:	cmp    dh,dh
  41bbdb:	sub    DWORD PTR [ebp+ecx*4+0x3856753],ebx
  41bbe2:	hlt    
  41bbe3:	dec    edi
  41bbe4:	es out 0x8b,eax
  41bbe7:	jecxz  0x41bb89
  41bbe9:	pop    es
  41bbea:	bound  edx,QWORD PTR [esi+0x204ec61e]
  41bbf0:	push   cs
  41bbf1:	mov    cl,0x72
  41bbf3:	inc    eax
  41bbf4:	retf   0xc98c
  41bbf7:	mov    ds:0x4ba900da,eax
  41bbfc:	cmp    al,0xed
  41bbfe:	pushf  
  41bbff:	or     BYTE PTR [ebx],al
  41bc01:	add    BYTE PTR es:[eax+0x37],bh
  41bc05:	add    eax,0x46df7e9
  41bc0a:	cmp    BYTE PTR ds:0x40742855,bl
  41bc10:	pop    esp
  41bc11:	lods   eax,DWORD PTR ds:[esi]
  41bc12:	lock sub edx,DWORD PTR [edx]
  41bc15:	adc    eax,0x1b5f900
  41bc1a:	xchg   esi,eax
  41bc1b:	adc    DWORD PTR ds:0x7d01dcde,eax
  41bc21:	pushf  
  41bc22:	aad    0xc7
  41bc24:	aam    0x8f
  41bc26:	fucomp st(0)
  41bc28:	or     edi,ecx
  41bc2a:	adc    ch,dh
  41bc2c:	sub    dl,0x0
  41bc2f:	sar    DWORD PTR [eax],0xc6
  41bc32:	int    0x19
  41bc34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc35:	add    BYTE PTR [ecx+eiz*8-0x53],ah
  41bc39:	push   edx
  41bc3a:	shr    DWORD PTR [ecx-0x68ff8520],1
  41bc40:	or     ecx,DWORD PTR [ecx+0x7f]
  41bc43:	fwait
  41bc44:	scas   eax,DWORD PTR es:[edi]
  41bc45:	sbb    esi,edi
  41bc47:	add    dl,cl
  41bc49:	ret    0x3e39
  41bc4c:	sbb    eax,0x68eaff
  41bc51:	and    eax,0x6f93e881
  41bc56:	add    eax,0x27002cee
  41bc5b:	sbb    al,0x47
  41bc5d:	popf   
  41bc5e:	adc    al,0x15
  41bc60:	pop    ebp
  41bc61:	add    eax,DWORD PTR [eax]
  41bc63:	fstp   TBYTE PTR [eax+edx*2-0x5b]
  41bc67:	cmp    edi,esp
  41bc69:	cld    
  41bc6a:	repz add BYTE PTR [ecx-0x32],bh
  41bc6e:	or     bh,BYTE PTR [eax+0x1e]
  41bc71:	pop    ss
  41bc72:	push   edx
  41bc73:	add    eax,0x9a24c90f
  41bc78:	in     al,0x82
  41bc7a:	mov    DWORD PTR [esp+edx*8-0x41084da0],ecx
  41bc81:	add    BYTE PTR [ebx-0x24],bl
  41bc84:	scas   eax,DWORD PTR es:[edi]
  41bc85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc86:	das    
  41bc87:	(bad)  
  41bc88:	test   eax,0xec92f086
  41bc8d:	dec    edi
  41bc8e:	sub    al,0x5c
  41bc90:	inc    esp
  41bc91:	in     al,dx
  41bc92:	add    BYTE PTR [esi],ch
  41bc94:	xor    ebx,DWORD PTR [eax+0x7b197b68]
  41bc9a:	fadd   DWORD PTR [ecx]
  41bc9c:	dec    ecx
  41bc9d:	and    esi,eax
  41bc9f:	es jge 0x41bc8d
  41bca2:	pop    esi
  41bca3:	fdivr  DWORD PTR [edx]
  41bca5:	(bad)  
  41bca6:	add    BYTE PTR [esi-0x12],cl
  41bca9:	in     eax,dx
  41bcaa:	retf   0x1cfb
  41bcad:	push   esi
  41bcae:	imul   eax,DWORD PTR [eax],0x8cd0530b
  41bcb4:	daa    
  41bcb5:	pop    esi
  41bcb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcb7:	pop    ebp
  41bcb8:	add    al,bl
  41bcba:	repnz inc eax
  41bcbc:	xchg   DWORD PTR [esi+ebx*1-0x67],esp
  41bcc0:	mov    ecx,0x9ff38e28
  41bcc5:	add    dh,ah
  41bcc7:	sub    BYTE PTR [ebp-0x1e],0x9d
  41bccb:	cli    
  41bccc:	xor    edx,ecx
  41bcce:	sbb    eax,0xfa28c8be
  41bcd3:	add    BYTE PTR [ecx-0x5d],cl
  41bcd6:	mov    eax,0xe50c2cf8
  41bcdb:	add    BYTE PTR [edx+0x2],al
  41bcde:	out    dx,eax
  41bcdf:	(bad)  
  41bce0:	sti    
  41bce1:	cs fs jmp 0x7444:0xd75d3f00
  41bcea:	sahf   
  41bceb:	rcr    dh,cl
  41bced:	add    ch,al
  41bcef:	and    al,0xe3
  41bcf1:	inc    ah
  41bcf3:	push   edi
  41bcf4:	ja     0x41bc90
  41bcf6:	add    BYTE PTR [esi-0x3],al
  41bcf9:	fsub   DWORD PTR [esi-0x6f8045c2]
  41bcff:	jg     0x41bcf7
  41bd01:	add    BYTE PTR [edi+eax*2-0x24b6c5ee],cl
  41bd08:	popa   
  41bd09:	push   ebx
  41bd0a:	add    DWORD PTR [edi],edi
  41bd0c:	and    eax,0x6af9f3c3
  41bd11:	pop    ds
  41bd12:	and    BYTE PTR [edx-0x20f3ffbf],dh
  41bd18:	mov    al,ds:0x1c7fa7c2
  41bd1d:	mov    WORD PTR [eax],es
  41bd1f:	xlat   BYTE PTR ds:[ebx]
  41bd20:	test   BYTE PTR [ecx+0x34c9a22a],dl
  41bd26:	lds    eax,FWORD PTR [eax]
  41bd28:	add    ebp,DWORD PTR ds:0x5f561b96
  41bd2e:	xchg   ebp,eax
  41bd2f:	mov    WORD PTR [eax],es
  41bd31:	jns    0x41bcba
  41bd33:	add    eax,0xae1cbe4e
  41bd38:	loope  0x41bd3a
  41bd3a:	int    0x1a
  41bd3c:	or     ebx,DWORD PTR [eax+0x14a7629b]
  41bd42:	add    al,bh
  41bd44:	jne    0x41bcf2
  41bd46:	xchg   esi,eax
  41bd47:	pop    edx
  41bd48:	jl     0x41bccb
  41bd4a:	mov    eax,ds:0xf620e307
  41bd4f:	add    ah,cl
  41bd51:	sar    ecx,cl
  41bd53:	rcr    al,cl
  41bd55:	or     eax,0x4b00a69a
  41bd5a:	stos   DWORD PTR es:[edi],eax
  41bd5b:	add    esi,edi
  41bd5d:	mov    eax,ds:0x2738c0
  41bd62:	dec    esp
  41bd63:	test   DWORD PTR [edi],edx
  41bd65:	test   BYTE PTR [edi-0x7f],cl
  41bd68:	or     bl,BYTE PTR [eax+eax*1+0xf]
  41bd6c:	cwde   
  41bd6d:	inc    eax
  41bd6e:	test   ah,0xeb
  41bd71:	xor    eax,0x728c07ce
  41bd76:	rcl    DWORD PTR [eax-0x5bcc0fdf],1
  41bd7c:	mul    edx
  41bd7e:	add    esi,edx
  41bd80:	dec    eax
  41bd81:	lods   al,BYTE PTR ds:[esi]
  41bd82:	fistp  DWORD PTR [ecx+esi*8-0x2b9b36d5]
  41bd89:	ins    DWORD PTR es:[edi],dx
  41bd8a:	out    dx,eax
  41bd8b:	add    BYTE PTR [edx+0x11a8317a],ch
  41bd91:	aam    0x18
  41bd93:	jmp    0x41bd95
  41bd95:	gs mov esp,0x4db8e27e
  41bd9b:	xchg   esi,eax
  41bd9c:	push   edx
  41bd9d:	add    BYTE PTR [eax-0x77351a4],dh
  41bda3:	ins    DWORD PTR es:[edi],dx
  41bda4:	lods   al,BYTE PTR ds:[esi]
  41bda5:	xchg   BYTE PTR [eax],al
  41bda7:	pop    es
  41bda8:	dec    eax
  41bda9:	mov    edx,0xbfe4367e
  41bdae:	int    0x14
  41bdb0:	push   esp
  41bdb1:	jp     0x41bd33
  41bdb3:	call   0x5ac7:0x4f914d00
  41bdba:	xchg   edx,eax
  41bdbb:	sahf   
  41bdbc:	add    dl,ah
  41bdbe:	push   es
  41bdbf:	retf   
  41bdc0:	push   cs
  41bdc1:	das    
  41bdc2:	pushf  
  41bdc3:	mov    al,0x6f
  41bdc5:	add    cl,dl
  41bdc7:	and    BYTE PTR [esi],dh
  41bdc9:	and    eax,0x92a5223c
  41bdce:	sbb    al,0x7d
  41bdd0:	mov    edx,DWORD PTR [edi-0x40]
  41bdd3:	mov    eax,ds:0xb731fc8
  41bdd8:	mov    al,BYTE PTR [eax]
  41bdda:	inc    dx
  41bddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bddd:	push   ss
  41bdde:	loop   0x41bd75
  41bde0:	(bad)  
  41bde1:	lahf   
  41bde2:	add    ebp,DWORD PTR [eax+0x7c]
  41bde5:	fnstsw ax
  41bde7:	ffree  st(2)
  41bde9:	mov    al,0x36
  41bdeb:	sbb    eax,0xa83c0013
  41bdf0:	int3   
  41bdf1:	and    BYTE PTR [ecx],cl
  41bdf3:	cmp    BYTE PTR [edx-0x1d],ah
  41bdf6:	add    BYTE PTR [edi],dl
  41bdf8:	repz xchg ebp,eax
  41bdfa:	arpl   WORD PTR [esi+eiz*2-0x3d],di
  41bdfe:	pop    edx
  41bdff:	add    BYTE PTR [edi+0x2d],ch
  41be02:	iret   
  41be03:	popa   
  41be04:	fadd   st,st(2)
  41be06:	or     BYTE PTR ds:0xb1c0dc00,bl
  41be0c:	ror    DWORD PTR [ebx+eiz*8],1
  41be0f:	cld    
  41be10:	jmp    0x85085a27
  41be15:	add    BYTE PTR [edx+0x4f6d4739],dl
  41be1b:	bnd jne 0x41be76
  41be1e:	add    ah,cl
  41be20:	das    
  41be21:	adc    al,0xef
  41be23:	cwde   
  41be24:	outs   dx,BYTE PTR ds:[esi]
  41be25:	scas   eax,DWORD PTR es:[edi]
  41be26:	idiv   BYTE PTR ds:0x7bb837
  41be2c:	(bad)  
  41be2d:	jo     0x41be7d
  41be2f:	pop    ecx
  41be30:	sub    DWORD PTR [eax],edi
  41be32:	das    
  41be33:	ds in  al,dx
  41be35:	inc    eax
  41be36:	add    al,ah
  41be38:	mov    BYTE PTR [ebp-0xf],ch
  41be3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be3c:	dec    ecx
  41be3d:	test   BYTE PTR [edi+0x1d],0x54
  41be41:	mov    ebp,0x8f7280ff
  41be46:	hlt    
  41be47:	ffree  st(4)
  41be49:	test   DWORD PTR [ebx],edi
  41be4b:	and    bh,BYTE PTR [esi]
  41be4d:	mov    edx,0xa5c3805b
  41be52:	cmp    BYTE PTR [ecx],bh
  41be54:	pop    si
  41be56:	arpl   WORD PTR [esp+ebp*8-0x53],bx
  41be5a:	add    BYTE PTR [edx-0x16c4b5d0],ah
  41be60:	xor    eax,0xafce004b
  41be65:	jge    0x41be56
  41be67:	(bad)  
  41be68:	mov    es,WORD PTR [edi]
  41be6a:	cwde   
  41be6b:	add    BYTE PTR [esi-0x56],bl
  41be6e:	shl    ebx,1
  41be70:	out    0xbd,eax
  41be72:	int    0x3b
  41be74:	add    dl,bl
  41be76:	and    bl,BYTE PTR [ebx]
  41be78:	xchg   ebp,eax
  41be79:	pushf  
  41be7a:	mov    ds:0x6600d670,eax
  41be7f:	mov    dl,0x81
  41be81:	or     eax,0x8d8442c6
  41be86:	jo     0x41beb0
  41be88:	add    cl,dh
  41be8a:	cdq    
  41be8b:	cmp    bh,dl
  41be8d:	dec    esi
  41be8e:	dec    ebx
  41be8f:	add    esp,edx
  41be91:	add    BYTE PTR [ecx],ah
  41be93:	sbb    DWORD PTR [edi+0x58],eax
  41be96:	vdivss xmm7,xmm7,DWORD PTR [ecx+0x0]
  41be9b:	push   0x32e5c1ac
  41bea0:	repz cmc 
  41bea2:	or     BYTE PTR [edx-0x68],bh
  41bea5:	add    BYTE PTR [ecx+0x37],al
  41bea8:	add    al,0x8c
  41beaa:	cmp    edx,ebx
  41beac:	scas   al,BYTE PTR es:[edi]
  41bead:	fnstcw WORD PTR [ecx]
  41beaf:	push   esi
  41beb0:	and    al,BYTE PTR [eax-0x62760f0f]
  41beb6:	mov    bl,0x6d
  41beb8:	pop    esp
  41beb9:	cmp    eax,DWORD PTR [ebx+0x67]
  41bebc:	and    DWORD PTR [ecx],0x14
  41bebf:	inc    esp
  41bec0:	cli    
  41bec1:	add    al,0xf8
  41bec3:	fild   QWORD PTR [ecx]
  41bec5:	xchg   ebp,eax
  41bec6:	pusha  
  41bec7:	mov    ds:0x5f8b1e08,eax
  41becc:	jl     0x41bed1
  41bece:	mov    eax,ds:0x42c3874a
  41bed3:	pop    esi
  41bed4:	mov    al,ds:0x1919658
  41bed9:	inc    ebp
  41beda:	xor    al,0x3c
  41bedc:	cmp    ebp,DWORD PTR [edi+0x49f0ab9b]
  41bee2:	rcr    DWORD PTR [esi],1
  41bee4:	xchg   edi,eax
  41bee5:	or     DWORD PTR [esi+0x49],eax
  41bee8:	sbb    eax,0xe4a901ed
  41beed:	sbb    esp,DWORD PTR [edx+0xff998d7]
  41bef3:	mov    WORD PTR [eax],es
  41bef5:	data16 (bad) 
  41bef7:	xchg   esi,eax
  41bef8:	dec    edi
  41bef9:	xchg   BYTE PTR [edx],al
  41befb:	ret    0x240
  41befe:	sti    
  41beff:	sub    eax,0x33bf71ec
  41bf04:	adc    al,0x4d
  41bf07:	fdivrp st(4),st
  41bf09:	cs jae 0x41beee
  41bf0c:	add    BYTE PTR [edi],bh
  41bf0e:	sub    BYTE PTR ds:0xa42608d0,dl
  41bf14:	dec    esi
  41bf15:	add    BYTE PTR [eax],bl
  41bf17:	fwait
  41bf18:	adc    DWORD PTR [ecx],ecx
  41bf1a:	int    0x39
  41bf1c:	sahf   
  41bf1d:	xor    al,BYTE PTR [eax]
  41bf1f:	jb     0x41bed8
  41bf21:	cmc    
  41bf22:	push   ds
  41bf23:	inc    ecx
  41bf24:	mov    esi,0xc80068a2
  41bf29:	pusha  
  41bf2a:	jae    0x41bfab
  41bf2c:	(bad)  [ebx+0x14]
  41bf2f:	xor    eax,0x3601af0e
  41bf34:	in     al,dx
  41bf35:	inc    eax
  41bf36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf37:	in     al,0xf6
  41bf39:	ret    
  41bf3a:	or     al,0x0
  41bf3c:	dec    ebp
  41bf3d:	dec    edx
  41bf3e:	sub    DWORD PTR [esi+ebx*8+0x380a26d6],ecx
  41bf45:	lods   al,BYTE PTR ds:[esi]
  41bf46:	js     0x41bf48
  41bf48:	loopne 0x41bf86
  41bf4a:	ins    DWORD PTR es:[edi],dx
  41bf4b:	inc    esp
  41bf4c:	inc    ecx
  41bf4d:	or     BYTE PTR [ebx],dl
  41bf4f:	add    BYTE PTR [ebx+ecx*1],ah
  41bf52:	xor    BYTE PTR [ebx],bl
  41bf54:	add    eax,0x3115146
  41bf59:	shl    BYTE PTR [ebp+0x3955f64b],1
  41bf5f:	mov    eax,0x7e28ba
  41bf64:	jecxz  0x41bf31
  41bf66:	out    0x67,eax
  41bf68:	dec    edx
  41bf69:	jo     0x41bf2c
  41bf6b:	jns    0x41bf6d
  41bf6d:	adc    BYTE PTR [ebp+ebx*4-0x73053b7b],0x90
  41bf75:	add    BYTE PTR [ecx],bh
  41bf77:	jp     0x41bff6
  41bf79:	js     0x41bf24
  41bf7b:	dec    eax
  41bf7c:	mov    al,ds:0x880e0008
  41bf81:	xor    dl,BYTE PTR [eax]
  41bf83:	sub    al,0x4e
  41bf85:	pop    ss
  41bf86:	rcr    BYTE PTR ds:0x402e5f3a,cl
  41bf8c:	mov    edx,0x45792df1
  41bf91:	ins    BYTE PTR es:[edi],dx
  41bf92:	add    cl,dl
  41bf94:	pushf  
  41bf95:	shl    BYTE PTR [ebp+ebp*8+0x51],1
  41bf99:	inc    ch
  41bf9b:	push   cs
  41bf9c:	out    dx,al
  41bf9d:	rcl    BYTE PTR [bp+di],cl
  41bfa0:	iret   
  41bfa1:	ret    0x33e0
  41bfa4:	inc    ecx
  41bfa5:	shl    DWORD PTR [ebp-0x3f],cl
  41bfa8:	pop    esp
  41bfa9:	mov    eax,ds:0x7fe80035
  41bfae:	call   0xb50d:0xb2d11e15
  41bfb5:	repz and DWORD PTR [eax+0x16],edi
  41bfb9:	pusha  
  41bfba:	mov    bl,0x4
  41bfbc:	sbb    al,0x12
  41bfbe:	leave  
  41bfbf:	jmp    0x41c001
  41bfc1:	inc    ebp
  41bfc2:	xchg   BYTE PTR [esp+edx*8-0x30],bl
  41bfc6:	push   esp
  41bfc7:	add    BYTE PTR [ebx],al
  41bfc9:	and    al,0xfd
  41bfcb:	sub    bl,bh
  41bfcd:	dec    esp
  41bfce:	mov    bh,0x94
  41bfd0:	add    esp,ecx
  41bfd2:	out    dx,al
  41bfd3:	cwde   
  41bfd4:	pop    ebp
  41bfd5:	into   
  41bfd6:	leave  
  41bfd7:	fsubr  st,st(5)
  41bfd9:	idiv   BYTE PTR [ebx+0x25421400]
  41bfdf:	loopne 0x41bfb9
  41bfe1:	mov    ds:0xbf00dea4,eax
  41bfe6:	std    
  41bfe7:	out    dx,al
  41bfe8:	push   es
  41bfe9:	mov    dl,dl
  41bfeb:	xor    dl,cl
  41bfed:	call   0x8fdfe9c
  41bff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bff3:	mov    ch,0x24
  41bff5:	add    cl,ah
  41bff7:	inc    esi
  41bff8:	fnstsw WORD PTR ds:0x3900bef1
  41bffe:	dec    edi
  41bfff:	test   dl,dl
  41c001:	mov    ebx,0x14deb3
  41c006:	jnp    0x41bf8f
  41c008:	xlat   BYTE PTR ds:[ebx]
  41c009:	sbb    BYTE PTR [esi-0x46],ch
  41c00c:	lea    esp,[ebx-0x61ffbb0a]
  41c012:	adc    eax,DWORD PTR [ecx+0x4f]
  41c015:	cli    
  41c016:	sub    DWORD PTR [ebx-0x651fe00f],edx
  41c01c:	ins    BYTE PTR es:[edi],dx
  41c01d:	inc    eax
  41c01e:	sub    eax,0xda6fb98c
  41c023:	sbb    BYTE PTR [eax],al
  41c025:	leave  
  41c026:	push   edi
  41c027:	cmp    al,0x59
  41c029:	sbb    eax,0xf2add531
  41c02e:	xchg   ebp,eax
  41c02f:	pop    es
  41c030:	(bad)  
  41c031:	xchg   esi,eax
  41c032:	and    DWORD PTR [edx-0x39f8efb6],0xc83c103f
  41c03c:	fild   WORD PTR [eax]
  41c03e:	jp     0x41c0b0
  41c040:	cmp    esi,DWORD PTR [ecx+0x5d]
  41c043:	in     eax,0x6
  41c045:	push   ds
  41c046:	(bad)  
  41c047:	out    dx,eax
  41c048:	push   0x1e800e
  41c04d:	call   0xde00:0xf0cb129c
  41c054:	cld    
  41c055:	pop    esp
  41c056:	iret   
  41c057:	and    ch,BYTE PTR [esi-0x11]
  41c05a:	fadd   QWORD PTR [eax]
  41c05c:	ret    
  41c05d:	push   esp
  41c05e:	ss xchg esp,eax
  41c060:	jns    0x41c041
  41c062:	inc    ebx
  41c063:	xchg   BYTE PTR [ecx],al
  41c065:	sbb    ch,BYTE PTR [eax+0x4b90a089]
  41c06b:	mov    ebx,0x71d4c4
  41c070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c071:	pop    esi
  41c072:	push   ebx
  41c073:	invd   
  41c075:	mov    BYTE PTR [edi+0x59],dh
  41c078:	setae  BYTE PTR [esi]
  41c07b:	push   ecx
  41c07c:	out    0x60,eax
  41c07e:	clc    
  41c07f:	(bad)  
  41c080:	shl    DWORD PTR [ebx],cl
  41c082:	adc    eax,0xbc01a7e6
  41c087:	mov    eax,0x21c6dc39
  41c08c:	fnstenv [eax-0x19]
  41c08f:	push   0x0
  41c091:	pop    edi
  41c092:	leave  
  41c093:	jns    0x41c0a0
  41c095:	aad    0x9d
  41c097:	in     al,dx
  41c098:	neg    DWORD PTR [edi]
  41c09a:	aaa    
  41c09b:	cmp    bh,cl
  41c09d:	xor    BYTE PTR [esi+0x75],0x3b
  41c0a1:	or     bl,cl
  41c0a3:	pusha  
  41c0a4:	add    DWORD PTR [edi+0x5be8429e],esp
  41c0aa:	sub    ah,BYTE PTR [ecx+0x7fc959fc]
  41c0b0:	test   BYTE PTR [eax],al
  41c0b2:	rol    edi,0x90
  41c0b5:	daa    
  41c0b6:	push   esp
  41c0b7:	pop    ebp
  41c0b8:	neg    ch
  41c0ba:	aas    
  41c0bb:	hlt    
  41c0bc:	mov    ah,0x80
  41c0be:	and    DWORD PTR [ebp*8-0x450a67ba],eax
  41c0c5:	add    ebx,ebx
  41c0c7:	pop    edx
  41c0c8:	shr    dl,0x64
  41c0cb:	xchg   edx,eax
  41c0cc:	dec    edx
  41c0cd:	cld    
  41c0ce:	lods   al,BYTE PTR ds:[esi]
  41c0cf:	sbb    BYTE PTR [edi],cl
  41c0d1:	into   
  41c0d2:	xor    BYTE PTR [esi-0x77],dl
  41c0d5:	rol    BYTE PTR [edi+0xf],0xa5
  41c0d9:	mov    ah,0x66
  41c0db:	add    DWORD PTR [eax],esp
  41c0dd:	and    ah,cl
  41c0df:	pop    esp
  41c0e0:	push   ss
  41c0e1:	jp     0x41c087
  41c0e3:	lock mov cs,WORD PTR [ebx-0x31]
  41c0e7:	mov    dh,0xd8
  41c0e9:	xlat   BYTE PTR ds:[ebx]
  41c0ea:	add    ch,ch
  41c0ec:	popa   
  41c0ed:	pop    ss
  41c0ee:	and    eax,0xa80f95aa
  41c0f3:	and    BYTE PTR [edi-0x15381f17],bl
  41c0f9:	add    edi,DWORD PTR [ebx+0x76a500ac]
  41c0ff:	adc    DWORD PTR [esp],eax
  41c102:	inc    edi
  41c103:	mul    DWORD PTR [edi]
  41c105:	push   ds
  41c106:	jp     0x41c0db
  41c108:	repnz add BYTE PTR [edx],al
  41c10b:	fwait
  41c10c:	and    DWORD PTR [ebx],0xff022177
  41c112:	stc    
  41c113:	test   BYTE PTR [edx],dl
  41c115:	mov    bl,0x6a
  41c117:	inc    eax
  41c118:	and    ah,BYTE PTR [ebx+0x1a]
  41c11b:	add    BYTE PTR [edx],cl
  41c11d:	sbb    eax,0x2b20f0d2
  41c122:	pop    esp
  41c123:	test   DWORD PTR [eax],eax
  41c125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c126:	mov    ds:0x2c98d67,eax
  41c12b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c12c:	test   BYTE PTR [edi+0x1f],dh
  41c12f:	add    BYTE PTR [ebp+0x5e],ch
  41c132:	inc    edx
  41c133:	hlt    
  41c134:	iret   
  41c135:	(bad)  
  41c136:	adc    DWORD PTR [ebp+0xd9593b],eax
  41c13c:	int3   
  41c13d:	mov    dl,0xc8
  41c13f:	sti    
  41c140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c141:	fld    QWORD PTR es:[eax]
  41c144:	cmp    DWORD PTR [esi],edx
  41c146:	test   BYTE PTR [ebp+0x6b53a912],bh
  41c14c:	add    BYTE PTR [ebx],bl
  41c14e:	jnp    0x41c1a8
  41c150:	pop    ss
  41c151:	(bad)  
  41c152:	out    0xf5,al
  41c154:	pop    DWORD PTR [eax]
  41c156:	inc    ebx
  41c157:	popf   
  41c158:	mov    eax,0x924bdfcd
  41c15e:	sub    eax,0xb4de5ea8
  41c163:	add    BYTE PTR [edx],ah
  41c165:	sub    DWORD PTR [edx+0x32787f],ebp
  41c16b:	dec    esi
  41c16c:	fs (bad) 
  41c16e:	sub    BYTE PTR [ebp+0x7d12895f],cl
  41c174:	jmp    FWORD PTR [esi]
  41c176:	mov    eax,ds:0x13ffef6
  41c17b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c17c:	push   0x90429780
  41c181:	pusha  
  41c182:	add    esi,DWORD PTR [esi+ecx*1+0x1dfd2046]
  41c189:	add    bl,dh
  41c18b:	sbb    DWORD PTR [esi+0x7e007f7d],ebx
  41c191:	adc    DWORD PTR ds:0x68b067dd,0x261600cd
  41c19b:	(bad)  
  41c19c:	jbe    0x41c1a5
  41c19e:	imul   esi,eax,0x3c54001e
  41c1a4:	sbb    ch,0xd3
  41c1a7:	fmul   QWORD PTR [edx-0xb9fead]
  41c1ad:	sbb    al,0x66
  41c1af:	(bad)  
  41c1b0:	sub    al,0x86
  41c1b2:	int3   
  41c1b3:	arpl   si,si
  41c1b5:	or     DWORD PTR [ebx+0x5d14a29],ebx
  41c1bb:	int3   
  41c1bc:	das    
  41c1bd:	sub    BYTE PTR [esi+0xf9d848],0x5a
  41c1c4:	out    0x8f,eax
  41c1c6:	jo     0x41c205
  41c1c8:	inc    ebp
  41c1c9:	loop   0x41c154
  41c1cb:	add    BYTE PTR [ebp-0x74],cl
  41c1ce:	sbb    esi,esp
  41c1d0:	jmp    0x3ae1bd2d
  41c1d5:	xchg   esi,eax
  41c1d6:	out    dx,al
  41c1d7:	xchg   DWORD PTR [ebx-0x7ffa9f8e],edx
  41c1dd:	sahf   
  41c1de:	retf   
  41c1df:	jmp    0x41c259
  41c1e1:	add    al,cl
  41c1e3:	pop    ebp
  41c1e4:	sbb    esi,DWORD PTR [edi-0xc]
  41c1e7:	mov    ch,BYTE PTR [edx+0xfb27d54]
  41c1ed:	pusha  
  41c1ee:	popf   
  41c1ef:	sbb    eax,0x553cc2ee
  41c1f4:	jmp    eax
  41c1f6:	rol    DWORD PTR [edi],cl
  41c1f8:	cmp    BYTE PTR [eax],al
  41c1fa:	dec    eax
  41c1fb:	scas   al,BYTE PTR es:[edi]
  41c1fc:	shr    BYTE PTR cs:[edx+0x46],0xaa
  41c201:	hlt    
  41c202:	cs inc ebp
  41c204:	in     eax,0x24
  41c206:	sbb    eax,0x2f43003c
  41c20b:	(bad)  
  41c20c:	cmp    DWORD PTR [ebp+0xc090e8f],ecx
  41c212:	pushf  
  41c213:	and    eax,0x76fd8420
  41c218:	aas    
  41c219:	ret    
  41c21a:	add    BYTE PTR ds:0xd2dc5999,bh
  41c220:	popa   
  41c221:	cmp    edx,esi
  41c223:	add    bl,ch
  41c225:	sti    
  41c226:	mov    eax,ds:0xe12c5d12
  41c22b:	mov    dl,0x3d
  41c22d:	mov    ?,WORD PTR [eax+eax*4+0x59c205f1]
  41c234:	sub    ebx,DWORD PTR [edx*1-0xcf0ea00]
  41c23b:	clc    
  41c23c:	aas    
  41c23d:	xchg   esp,eax
  41c23e:	shr    BYTE PTR ds:0xd6ad9800,0xff
  41c245:	hlt    
  41c246:	jns    0x41c269
  41c248:	jle    0x41c258
  41c24a:	pop    ss
  41c24b:	test   DWORD PTR [ecx+esi*4+0x1f035e81],0xb510203f
  41c256:	pop    es
  41c257:	fcmovb st,st(0)
  41c259:	mov    eax,0x419051b7
  41c25e:	inc    edi
  41c25f:	je     0x41c244
  41c261:	add    BYTE PTR [edi+0x34],bh
  41c264:	adc    ebp,edx
  41c266:	xchg   ebp,eax
  41c267:	scas   al,BYTE PTR es:[edi]
  41c268:	pop    edx
  41c269:	adc    al,0x7d
  41c26b:	xchg   ebx,eax
  41c26c:	add    BYTE PTR [eax+0x6609f09b],al
  41c272:	mov    edx,0x200bfb2
  41c277:	sahf   
  41c278:	pop    ebp
  41c279:	mov    edx,gs
  41c27b:	retf   
  41c27c:	or     DWORD PTR [ebx-0x26ffe682],0x36
  41c283:	fisubr WORD PTR [edx-0x33]
  41c286:	mov    BYTE PTR [edx+0xe5e618],dl
  41c28c:	mov    dh,0x99
  41c28e:	(bad)  
  41c28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c290:	adc    BYTE PTR [eax-0x49],0x42
  41c294:	push   cs
  41c295:	test   al,0xdd
  41c297:	push   0xffffffe6
  41c299:	and    BYTE PTR [edx+0x1f1e7aa],ah
  41c29f:	add    ch,BYTE PTR [esi-0x46fb2137]
  41c2a5:	xor    dl,al
  41c2a7:	mov    WORD PTR [eax],es
  41c2a9:	xchg   esi,eax
  41c2aa:	neg    DWORD PTR [edi-0x5363411a]
  41c2b0:	sahf   
  41c2b1:	add    BYTE PTR [esi+0x57],cl
  41c2b4:	jmp    0x41c282
  41c2b6:	jae    0x41c2da
  41c2b8:	daa    
  41c2b9:	fld    DWORD PTR [eax]
  41c2bb:	pop    ecx
  41c2bc:	outs   dx,BYTE PTR ds:[esi]
  41c2bd:	idiv   DWORD PTR [edi+0x527d4bd0]
  41c2c3:	add    DWORD PTR [edi-0x6b],ebx
  41c2c6:	lds    ebp,FWORD PTR [ebx-0x1f4db9a0]
  41c2cc:	xor    al,0x44
  41c2ce:	add    BYTE PTR [edi],ch
  41c2d0:	inc    ebx
  41c2d1:	add    cl,BYTE PTR [ecx]
  41c2d3:	neg    BYTE PTR [ebx]
  41c2d5:	push   es
  41c2d6:	outs   dx,DWORD PTR ds:[esi]
  41c2d7:	add    BYTE PTR [ebx-0x1e01762],dl
  41c2dd:	xor    eax,0x9c77a7ef
  41c2e2:	out    0x79,al
  41c2e4:	dec    eax
  41c2e5:	dec    esp
  41c2e6:	sub    al,0x71
  41c2e8:	cmp    esi,DWORD PTR [esi]
  41c2ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2eb:	adc    BYTE PTR [ecx-0x4f72838c],0xc3
  41c2f2:	test   al,0x1d
  41c2f4:	call   0x26829770
  41c2f9:	dec    ebx
  41c2fa:	jmp    0xfc9c:0x3ea2c014
  41c301:	add    cl,bl
  41c303:	popa   
  41c304:	rol    BYTE PTR [eax+0x31d42e3],1
  41c30a:	jbe    0x41c2a7
  41c30c:	clc    
  41c30d:	push   edi
  41c30e:	adc    eax,0x6b368865
  41c313:	int3   
  41c314:	add    BYTE PTR [edi],ah
  41c316:	je     0x41c2d7
  41c318:	shr    DWORD PTR [eax],1
  41c31a:	inc    ebx
  41c31b:	jnp    0x9c6e3292
  41c321:	out    dx,al
  41c322:	das    
  41c323:	add    BYTE PTR [ebx],bh
  41c325:	dec    edx
  41c326:	loopne 0x41c2e2
  41c328:	adc    esp,DWORD PTR [edi]
  41c32a:	pop    es
  41c32b:	and    bh,0xb5
  41c32e:	jbe    0x41c348
  41c330:	and    BYTE PTR [ecx+ebx*2+0x64],dl
  41c334:	dec    edi
  41c335:	add    BYTE PTR [edx+edx*8],cl
  41c338:	or     esi,eax
  41c33a:	fst    QWORD PTR [edx]
  41c33c:	sub    bh,dl
  41c33e:	add    BYTE PTR [edx+0x79],dl
  41c341:	mov    ?,WORD PTR [eax+0x1]
  41c344:	or     eax,0xa60005a5
  41c349:	xchg   ebx,eax
  41c34a:	and    eax,0x31863864
  41c34f:	mov    ds:0x80bbcb01,al
  41c354:	mov    cl,BYTE PTR [edi]
  41c356:	and    BYTE PTR [ecx+0x60],bl
  41c359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35a:	rol    DWORD PTR [eax],0xdf
  41c35d:	aaa    
  41c35e:	sar    DWORD PTR [ecx+0x3ba09aca],1
  41c364:	add    BYTE PTR [ebp+0x45],dh
  41c367:	mov    bl,0x18
  41c369:	out    0xb,al
  41c36b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c36c:	dec    ecx
  41c36d:	add    BYTE PTR ds:0x96bdb027,bh
  41c373:	jle    0x41c363
  41c375:	fs push cs
  41c377:	lods   al,BYTE PTR ds:[esi]
  41c378:	push   ebp
  41c379:	call   0x5387:0x104d6002
  41c380:	mov    es,WORD PTR [eax]
  41c382:	push   eax
  41c383:	cmp    ch,BYTE PTR [eax+ebp*1+0x5]
  41c387:	stos   DWORD PTR es:[edi],eax
  41c388:	idiv   BYTE PTR [ebp+0xf]
  41c38b:	inc    ebx
  41c38c:	xchg   edi,eax
  41c38d:	(bad)  
  41c38e:	(bad)  
  41c38f:	pusha  
  41c390:	mov    BYTE PTR [edi],ah
  41c392:	xor    eax,0x8f00bc81
  41c397:	mov    ch,0x61
  41c399:	ffreep st(7)
  41c39b:	out    dx,eax
  41c39c:	outs   dx,DWORD PTR ds:[esi]
  41c39d:	add    BYTE PTR [eax],0x8d
  41c3a0:	dec    ebx
  41c3a1:	test   eax,0x327cd13c
  41c3a6:	push   edi
  41c3a7:	pop    es
  41c3a8:	and    al,0x2e
  41c3aa:	push   ss
  41c3ab:	mov    al,ds:0xe4b42077
  41c3b0:	and    eax,0xd5b879
  41c3b5:	pop    edi
  41c3b6:	pop    es
  41c3b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3b8:	stos   BYTE PTR es:[edi],al
  41c3b9:	cmc    
  41c3ba:	loop   0x41c412
  41c3bc:	(bad)  
  41c3bd:	cmp    dh,ah
  41c3bf:	das    
  41c3c0:	test   DWORD PTR [ecx-0x53851f5],ebp
  41c3c6:	(bad)  
  41c3c7:	adc    ah,BYTE PTR [eax-0x7b4abbdc]
  41c3cd:	add    BYTE PTR [ecx-0x2c690634],cl
  41c3d3:	loopne 0x41c389
  41c3d5:	dec    esi
  41c3d6:	add    eax,0xfdfb336a
  41c3db:	rol    DWORD PTR [eax+0x9cb4707],1
  41c3e1:	add    BYTE PTR [edi+edi*4-0x5bf72a42],dl
  41c3e8:	jmp    0x7606:0x51783fcc
  41c3ef:	std    
  41c3f0:	das    
  41c3f1:	call   0x65510078
  41c3f6:	add    esi,edi
  41c3f8:	xlat   BYTE PTR ds:[ebx]
  41c3f9:	and    dh,dh
  41c3fb:	stos   DWORD PTR es:[edi],eax
  41c3fc:	rol    BYTE PTR [esi],0x6e
  41c3ff:	pop    ss
  41c400:	mov    al,0x7c
  41c402:	add    BYTE PTR [ebp+0x3b4f363c],dh
  41c408:	fidiv  WORD PTR [eax-0x620fe72a]
  41c40e:	shl    BYTE PTR [edx+0x751dc01b],cl
  41c414:	test   al,0x2b
  41c416:	(bad)  
  41c417:	xchg   esi,eax
  41c418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c419:	and    bh,dl
  41c41b:	xchg   ebx,eax
  41c41c:	sbb    BYTE PTR [edi+0x5a22008a],al
  41c422:	ins    DWORD PTR es:[edi],dx
  41c423:	jle    0x41c40d
  41c425:	in     al,dx
  41c426:	pusha  
  41c427:	scas   eax,DWORD PTR es:[edi]
  41c428:	add    ch,dl
  41c42a:	in     eax,dx
  41c42b:	push   ebx
  41c42c:	dec    edx
  41c42d:	and    eax,0xc45b6a
  41c432:	popa   
  41c433:	leave  
  41c434:	or     bl,BYTE PTR [esi-0x5a]
  41c437:	jmp    0x41c3ec
  41c439:	aas    
  41c43a:	add    BYTE PTR [esp+edi*4+0x64a28bba],cl
  41c441:	or     BYTE PTR [esi+0x17],ch
  41c444:	test   eax,0x33006b41
  41c449:	mov    ds:0xe14882df,eax
  41c44e:	add    BYTE PTR [eax+esi*4+0x18],ch
  41c452:	test   al,0x9d
  41c454:	inc    edi
  41c455:	sahf   
  41c456:	pop    esp
  41c457:	or     ecx,DWORD PTR [edi+edx*2]
  41c45a:	dec    ebx
  41c45b:	xchg   edi,eax
  41c45c:	xor    BYTE PTR ds:0x6ca35a0f,0x0
  41c463:	push   0xffffffe2
  41c465:	aam    0x8d
  41c467:	or     BYTE PTR [esi],0x66
  41c46a:	popa   
  41c46b:	add    BYTE PTR [edi-0x2a766f72],bh
  41c471:	ins    DWORD PTR es:[edi],dx
  41c472:	jae    0x41c428
  41c474:	add    eax,DWORD PTR [edi]
  41c476:	push   eax
  41c477:	cwde   
  41c478:	dec    ebx
  41c479:	inc    eax
  41c47a:	ss nop
  41c47c:	sub    DWORD PTR [edx-0x1ff2825e],0xfda30041
  41c486:	stos   DWORD PTR es:[edi],eax
  41c487:	or     BYTE PTR [ebx],ah
  41c489:	fisttp DWORD PTR [eax+0x7]
  41c48c:	jl     0x41c44e
  41c48e:	add    BYTE PTR [ebp-0x206352ec],bl
  41c494:	inc    edx
  41c495:	fucom  st(0)
  41c497:	add    BYTE PTR [eax],ch
  41c499:	jne    0x41c4f3
  41c49b:	repnz cmp al,0x6b
  41c49e:	push   0xcf44008d
  41c4a3:	cmp    ah,BYTE PTR [ebp+0x1365561c]
  41c4a9:	add    BYTE PTR [esi+0x4c],ch
  41c4ac:	ror    BYTE PTR [eax+0xadb6c43],0x76
  41c4b3:	mov    eax,0x9a801b00
  41c4b8:	cdq    
  41c4b9:	jecxz  0x41c4f0
  41c4bb:	ficomp DWORD PTR [edx+0xf]
  41c4be:	xor    bh,BYTE PTR [edx+0x59]
  41c4c1:	mov    al,ds:0x42ca47
  41c4c6:	xchg   ebp,eax
  41c4c7:	ds mov dh,0x25
  41c4ca:	add    BYTE PTR [edx],dl
  41c4cc:	mov    ebx,0xf5a8e3ba
  41c4d1:	adc    al,0xef
  41c4d3:	add    al,dl
  41c4d5:	push   0xe1aaab65
  41c4da:	mov    eax,ds:0xe9840060
  41c4df:	xor    BYTE PTR [edi-0x4c],ch
  41c4e2:	inc    ebx
  41c4e3:	fidivr DWORD PTR [esi+0x0]
  41c4e6:	std    
  41c4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4e8:	dec    ecx
  41c4e9:	adc    eax,0xfa65cc9d
  41c4ee:	add    dh,dh
  41c4f0:	cs scas eax,DWORD PTR es:[edi]
  41c4f2:	mov    esi,0xe68c50d3
  41c4f7:	add    cl,dl
  41c4f9:	fist   WORD PTR [esi+0x45852897]
  41c4ff:	shl    BYTE PTR [ebx+eiz*4],cl
  41c502:	mov    ah,0xf1
  41c504:	movlps xmm4,QWORD PTR [edi]
  41c507:	and    bl,ch
  41c509:	dec    ecx
  41c50a:	(bad)  
  41c50b:	ins    BYTE PTR es:[edi],dx
  41c50c:	fiadd  WORD PTR [eax]
  41c50e:	mov    ebp,0x6daf5501
  41c513:	mov    ah,0x25
  41c515:	pop    ebx
  41c516:	add    BYTE PTR [edx+eiz*2-0x7b],cl
  41c51a:	mov    bl,0x9e
  41c51c:	xor    DWORD PTR [edi-0x4e],eax
  41c51f:	add    BYTE PTR [eax],cl
  41c521:	call   0x5fe1bda8
  41c526:	mov    ebp,0xaac900b9
  41c52b:	push   edx
  41c52c:	add    DWORD PTR ds:0xb961af7,esi
  41c532:	shl    ebx,1
  41c534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c535:	aas    
  41c536:	add    esp,DWORD PTR [ebp+esi*8+0x17]
  41c53a:	mov    BYTE PTR [edi-0x7f],dl
  41c53d:	fiadd  WORD PTR [eax]
  41c53f:	lods   eax,DWORD PTR ds:[esi]
  41c540:	pusha  
  41c541:	leave  
  41c542:	rcr    BYTE PTR [ecx],1
  41c544:	cmp    esp,ecx
  41c546:	lods   al,BYTE PTR ds:[esi]
  41c547:	pop    es
  41c548:	daa    
  41c549:	push   ebp
  41c54a:	and    al,0x86
  41c54c:	xor    BYTE PTR [eax+0x50],0xd7
  41c550:	sbb    eax,0xe1600056
  41c555:	or     BYTE PTR [ebx-0x1b8de7f4],al
  41c55b:	cmp    al,0x93
  41c55d:	push   ecx
  41c55e:	add    DWORD PTR [ebx],0xffffffcd
  41c561:	pop    ss
  41c562:	ror    DWORD PTR [esi-0x463b0d68],cl
  41c568:	add    BYTE PTR [esi+0x6287ff9f],al
  41c56e:	pop    esi
  41c56f:	fdiv   QWORD PTR [esi]
  41c571:	add    BYTE PTR [esi+0x34],ch
  41c574:	jb     0x41c5e5
  41c576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c577:	out    0x5,al
  41c579:	js     0x41c57b
  41c57b:	inc    esp
  41c57c:	imul   DWORD PTR [eax]
  41c57e:	jp     0x41c518
  41c580:	mov    edi,0x4900c325
  41c585:	mov    dh,0xd8
  41c587:	xchg   DWORD PTR [esp+eiz*8],ebp
  41c58a:	push   ebx
  41c58b:	repz sbb eax,0xb4072b
  41c591:	adc    eax,0x33e82ded
  41c596:	rol    BYTE PTR [ecx],1
  41c598:	loopne 0x41c53d
  41c59a:	(bad)  
  41c59c:	ret    
  41c59d:	sbb    bh,BYTE PTR [ecx+0xedc87fc]
  41c5a3:	mov    BYTE PTR [ecx],dh
  41c5a5:	icebp  
  41c5a6:	mov    ebx,0x144956e0
  41c5ab:	fistp  WORD PTR [ebx]
  41c5ad:	add    BYTE PTR [esi+0x1217541d],bh
  41c5b3:	call   0x735408f8
  41c5b8:	jecxz  0x41c5c2
  41c5ba:	add    DWORD PTR [ebp+ecx*2+0x3c],ecx
  41c5be:	lds    eax,FWORD PTR [ecx-0x11660f11]
  41c5c4:	daa    
  41c5c5:	loopne 0x41c5b0
  41c5c7:	add    BYTE PTR [edi],al
  41c5c9:	fwait
  41c5ca:	sti    
  41c5cb:	mov    ebp,0xcd5ed209
  41c5d0:	add    cl,cl
  41c5d2:	mov    edi,0x614e5b1d
  41c5d7:	sbb    BYTE PTR [ebx-0x6ab9efff],ch
  41c5dd:	jnp    0x41c659
  41c5df:	mov    cl,BYTE PTR [ecx+esi*1-0x19]
  41c5e3:	aam    0xa0
  41c5e5:	add    al,0x7f
  41c5e7:	mov    DWORD PTR [eax],eax
  41c5e9:	jae    0x41c586
  41c5eb:	outs   dx,BYTE PTR ds:[esi]
  41c5ec:	mov    cl,0x14
  41c5ee:	test   DWORD PTR [ebx+0x13],0x11fda00
  41c5f5:	mov    dh,dl
  41c5f7:	xlat   BYTE PTR ds:[ebx]
  41c5f8:	or     bh,ah
  41c5fa:	push   cs
  41c5fb:	aam    0xd2
  41c5fd:	lods   eax,DWORD PTR ds:[esi]
  41c5fe:	repz inc eax
  41c600:	add    edx,DWORD PTR [ecx]
  41c602:	and    esp,DWORD PTR [edx+0x1d]
  41c605:	push   cs
  41c606:	jmp    0xee561dca
  41c60b:	leave  
  41c60c:	cmp    dh,0x1f
  41c60f:	cmp    ebx,esi
  41c611:	retf   0x1100
  41c614:	mov    ah,0xb3
  41c616:	mov    al,0x67
  41c618:	add    DWORD PTR [edx-0x26],ecx
  41c61b:	add    bh,dl
  41c61d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c61e:	pop    ss
  41c61f:	test   BYTE PTR [esi-0x2f],0xec
  41c623:	repnz out dx,eax
  41c625:	jo     0x41c612
  41c627:	imul   edi,DWORD PTR [ebx+0x49],0xc38f2305
  41c62e:	loopne 0x41c6a7
  41c630:	xor    ch,0x44
  41c633:	dec    edi
  41c634:	cmc    
  41c635:	jnp    0x41c683
  41c637:	add    BYTE PTR [esi-0x4cc3227d],dl
  41c63d:	mov    ds:0x244ca03b,eax
  41c642:	into   
  41c643:	add    al,bl
  41c645:	adc    eax,0xe0f7a77b
  41c64a:	push   cs
  41c64b:	xchg   esi,eax
  41c64c:	lods   eax,DWORD PTR ds:[esi]
  41c64d:	add    eax,eax
  41c64f:	jl     0x41c6a5
  41c651:	addr16 adc cl,bh
  41c654:	scas   al,BYTE PTR es:[edi]
  41c655:	int3   
  41c656:	xor    ch,BYTE PTR [esi]
  41c658:	add    BYTE PTR [edi+edx*1],ch
  41c65b:	push   ebx
  41c65c:	ins    BYTE PTR es:[edi],dx
  41c65d:	outs   dx,DWORD PTR ds:[esi]
  41c65e:	xor    DWORD PTR [esi-0x78],eax
  41c661:	pop    es
  41c662:	sub    BYTE PTR [edi+0x26],dh
  41c665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c666:	cmp    al,dh
  41c668:	sub    ah,BYTE PTR [ebp-0x44edf91c]
  41c66e:	mov    ds:0x883f002b,eax
  41c673:	pop    ss
  41c674:	fst    DWORD PTR [esi+edi*4+0xb]
  41c678:	fwait
  41c679:	lds    esp,FWORD PTR [eax+0x315380c3]
  41c67f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c680:	push   ds
  41c681:	push   ebp
  41c682:	add    BYTE PTR [edx-0x3db6b787],cl
  41c688:	pop    ss
  41c689:	inc    esp
  41c68a:	push   cs
  41c68b:	add    BYTE PTR [eax-0x5d124eef],al
  41c691:	sub    BYTE PTR [ebx],al
  41c693:	hlt    
  41c694:	add    BYTE PTR [edx-0x27c0f576],bl
  41c69a:	inc    ebx
  41c69b:	jp     0x41c69b
  41c69d:	add    BYTE PTR [ecx],ah
  41c69f:	sbb    edx,DWORD PTR [edi+0x2d4715f]
  41c6a5:	iret   
  41c6a6:	add    BYTE PTR [edi],bl
  41c6a8:	inc    edx
  41c6aa:	stc    
  41c6ab:	or     BYTE PTR [edi-0x35ff7155],cl
  41c6b1:	sub    al,bh
  41c6b3:	mov    al,0x4e
  41c6b5:	(bad)  
  41c6b6:	adc    DWORD PTR [esi-0xd572b17],eax
  41c6bc:	add    eax,0x2b173ceb
  41c6c1:	(bad)  
  41c6c2:	rcl    BYTE PTR [edi],0xc5
  41c6c5:	lock rol BYTE PTR [eax],1
  41c6c8:	(bad)
  41c6cc:	retf   
  41c6cd:	call   0x3000:0x4398952c
  41c6d4:	cmp    dh,ah
  41c6d6:	nop
  41c6d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6d8:	mov    dl,0xd4
  41c6da:	mov    dh,0x0
  41c6dc:	and    BYTE PTR [esi],al
  41c6de:	(bad)  
  41c6df:	addr16 popf 
  41c6e1:	lea    esi,[edx+0x15]
  41c6e4:	cmp    eax,0xc100cde2
  41c6e9:	pop    ebx
  41c6ea:	pmulhw mm5,QWORD PTR [edx+0x6c1fd833]
  41c6f1:	sbb    eax,0xc32b4046
  41c6f6:	sbb    bl,cl
  41c6f8:	mov    ds:0xd73100ac,eax
  41c6fd:	call   0xa198c1cc
  41c702:	mov    BYTE PTR [eax],0x9a
  41c705:	cld    
  41c706:	imul   ebx,DWORD PTR [ecx-0x31],0x9
  41c70a:	in     al,0x9c
  41c70c:	jb     0x41c6f1
  41c70e:	add    BYTE PTR [ebp+0x6a],dh
  41c711:	lahf   
  41c712:	pop    ss
  41c713:	pop    ebp
  41c714:	mov    si,0xfd0
  41c718:	dec    esp
  41c719:	push   ecx
  41c71a:	fs je  0x41c71d
  41c71d:	push   esi
  41c71e:	adc    al,0xc1
  41c720:	sbb    eax,0x91b600c8
  41c725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c726:	jg     0x41c783
  41c728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c729:	xchg   edx,eax
  41c72a:	add    DWORD PTR [bx+di+0x4efd],edi
  41c72f:	add    ah,cl
  41c731:	add    DWORD PTR [edx],edx
  41c733:	xor    BYTE PTR [eax+0x77],ah
  41c736:	add    BYTE PTR [eax+0x4a],al
  41c739:	mov    ds:0xc38450d8,eax
  41c73e:	in     al,0x0
  41c740:	mov    esi,0x7e87dd8b
  41c745:	addr16 and eax,0x651700c4
  41c74b:	ret    0x2185
  41c74e:	cld    
  41c74f:	mov    bl,0x96
  41c751:	pop    es
  41c752:	test   BYTE PTR [ebx-0x6d],0x7
  41c756:	stc    
  41c757:	adc    BYTE PTR [ebx],dh
  41c759:	in     al,dx
  41c75a:	push   0x3a
  41c75c:	add    BYTE PTR [ebx],cl
  41c75e:	out    dx,al
  41c75f:	mov    al,ds:0xfedf7086
  41c764:	inc    ebx
  41c765:	add    BYTE PTR [ecx],bh
  41c767:	and    ch,dh
  41c769:	mov    cs,WORD PTR [ebx-0x6]
  41c76c:	arpl   WORD PTR [ebp+0x19740b01],ax
  41c772:	add    ebp,DWORD PTR [ecx+eax*8+0x41]
  41c776:	cld    
  41c777:	pop    es
  41c778:	sub    DWORD PTR [eax],eax
  41c77a:	inc    esp
  41c77b:	sub    al,0xf2
  41c77d:	push   edi
  41c77e:	mov    eax,0xfde497
  41c783:	mov    bh,0xd
  41c785:	retf   
  41c786:	dec    BYTE PTR [eax-0x2c]
  41c789:	lock mov bl,0x0
  41c78c:	in     eax,0x38
  41c78e:	call   0x46:0xa64cf6c3
  41c795:	adc    al,0xbd
  41c797:	dec    edi
  41c798:	std    
  41c799:	(bad)  
  41c79a:	cmp    esi,ebp
  41c79c:	test   al,0x0
  41c79e:	or     eax,0x3c50308a
  41c7a3:	lods   eax,DWORD PTR ds:[esi]
  41c7a4:	xor    DWORD PTR [esi+0x7c],edx
  41c7a7:	iret   
  41c7a8:	add    BYTE PTR [edi+0x285bf4eb],al
  41c7ae:	sub    dl,BYTE PTR [edx+0x36]
  41c7b1:	call   0x5a4ec7ba
  41c7b6:	cmp    esp,eax
  41c7b8:	in     eax,dx
  41c7b9:	pavgw  mm3,QWORD PTR [ebp+0x16]
  41c7bd:	fmul   DWORD PTR [eax]
  41c7bf:	jno    0x41c7c1
  41c7c1:	push   ebx
  41c7c2:	add    dl,BYTE PTR [eax]
  41c7c4:	shl    BYTE PTR [edi+0x4a4200eb],cl
  41c7ca:	sahf   
  41c7cb:	jle    0x41c75a
  41c7cd:	int3   
  41c7ce:	sbb    al,0x7f
  41c7d0:	pop    es
  41c7d1:	push   ss
  41c7d2:	xor    BYTE PTR [ebx-0x6f],dh
  41c7d5:	shl    BYTE PTR [eax+0x43],0xb2
  41c7d9:	pop    ebx
  41c7da:	mov    eax,DWORD PTR [eax]
  41c7dc:	or     ebx,DWORD PTR [edx-0x36]
  41c7df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7e0:	in     al,0x89
  41c7e2:	aas    
  41c7e3:	add    BYTE PTR fs:0x2d7769c8,cl
  41c7ea:	sar    DWORD PTR [ecx-0x2d],1
  41c7ed:	aas    
  41c7ee:	mov    esi,DWORD PTR [eax-0x80]
  41c7f1:	jae    0x41c836
  41c7f3:	sub    BYTE PTR [ecx+0x3745b8],bl
  41c7f9:	mov    dh,0x84
  41c7fb:	push   ds
  41c7fc:	dec    eax
  41c7fd:	in     eax,dx
  41c7fe:	sti    
  41c7ff:	or     eax,0xb4de00b0
  41c804:	and    esp,DWORD PTR [eax+0x2b]
  41c807:	stos   BYTE PTR es:[edi],al
  41c808:	inc    ecx
  41c809:	ret    0xdd00
  41c80c:	add    esi,DWORD PTR [ebp-0x55]
  41c80f:	pop    ecx
  41c810:	mov    dl,0x93
  41c812:	mov    al,ds:0x9a1f957a
  41c817:	(bad)  [edx]
  41c819:	rcl    ah,0x4
  41c81c:	aas    
  41c81d:	jae    0x41c7cb
  41c81f:	idiv   DWORD PTR [ebx+edi*8]
  41c822:	mov    ch,0x7
  41c824:	mov    al,0x21
  41c826:	sbb    BYTE PTR [esi+0x5d8013c7],0x2d
  41c82d:	scas   eax,DWORD PTR es:[edi]
  41c82e:	arpl   WORD PTR [esi],di
  41c830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c831:	pop    ss
  41c832:	add    ecx,0xc555e0f7
  41c838:	ret    
  41c839:	lock or eax,0x8868032c
  41c83f:	iret   
  41c840:	mov    WORD PTR [ecx],es
  41c842:	mul    BYTE PTR [eax+0x7ee8416d]
  41c848:	jne    0x41c844
  41c84a:	ret    0x160e
  41c84d:	push   ds
  41c84e:	ins    BYTE PTR es:[edi],dx
  41c84f:	cdq    
  41c850:	mov    ds:0xe0d38197,eax
  41c855:	rol    DWORD PTR [edx],0xb1
  41c858:	out    0x32,al
  41c85a:	sub    al,0x27
  41c85c:	inc    edi
  41c85d:	jmp    0x76f0162
  41c862:	sbb    esi,DWORD PTR [ecx+0x50]
  41c865:	add    ah,al
  41c867:	cld    
  41c868:	mov    ecx,0x3273c8a1
  41c86d:	cwde   
  41c86e:	add    DWORD PTR [eax+eiz*4-0x31],esp
  41c872:	push   es
  41c873:	ret    
  41c874:	aam    0x72
  41c876:	xor    BYTE PTR [edi],dl
  41c878:	cmc    
  41c879:	add    BYTE PTR [ecx-0x1d],dh
  41c87c:	(bad)  
  41c87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c87e:	pop    ecx
  41c87f:	aad    0x8c
  41c881:	jmp    0x41c8a2
  41c883:	mov    ecx,0x80fbaa1a
  41c888:	jge    0x41c820
  41c88a:	push   eax
  41c88b:	call   0x970600
  41c890:	fst    DWORD PTR [ecx]
  41c892:	(bad)  
  41c893:	push   cs
  41c894:	xor    BYTE PTR [ecx-0x5],cl
  41c897:	cmp    edx,0x8d6a00d4
  41c89d:	lahf   
  41c89e:	fidivr WORD PTR [edx+0x6]
  41c8a1:	hlt    
  41c8a2:	adc    DWORD PTR [eax],eax
  41c8a4:	int    0x85
  41c8a6:	jecxz  0x41c8f6
  41c8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8a9:	sub    esp,DWORD PTR [ebp-0x5]
  41c8ac:	pop    es
  41c8ad:	pop    edi
  41c8ae:	add    ch,BYTE PTR [ebx+0x1b]
  41c8b1:	inc    ecx
  41c8b2:	add    BYTE PTR [esi],ch
  41c8b4:	add    eax,0x2a003463
  41c8b9:	add    edx,eax
  41c8bb:	lea    esp,[edi+0x1c3d1a8]
  41c8c1:	(bad)  
  41c8c2:	out    0x6a,al
  41c8c4:	adc    al,0xaa
  41c8c6:	dec    dx
  41c8c8:	ror    ah,0x30
  41c8cb:	jno    0x41c920
  41c8cd:	in     al,dx
  41c8ce:	cmp    ecx,DWORD PTR [ecx]
  41c8d0:	rcl    DWORD PTR [ecx-0x28],0xfc
  41c8d4:	xchg   DWORD PTR [ebx],ecx
  41c8d6:	xchg   ebx,eax
  41c8d7:	ror    BYTE PTR [ebp+0x1e79f338],0xe2
  41c8de:	sub    dl,BYTE PTR [eax]
  41c8e0:	add    BYTE PTR [ebx-0x55dc9f2d],ah
  41c8e6:	pop    ecx
  41c8e7:	add    BYTE PTR [ebx+0x33cacbe9],dh
  41c8ed:	maxps  xmm1,xmm7
  41c8f0:	add    edi,DWORD PTR [ebx+0x50]
  41c8f3:	cdq    
  41c8f4:	jge    0x41c931
  41c8f6:	adc    al,bl
  41c8f8:	in     eax,0x8c
  41c8fa:	imul   esi,DWORD PTR [ebp-0x2e],0xffffffec
  41c8fe:	fiadd  DWORD PTR [eax]
  41c900:	pop    edi
  41c901:	lods   eax,DWORD PTR ds:[esi]
  41c902:	out    dx,al
  41c903:	dec    ebp
  41c904:	aaa    
  41c905:	xchg   ebp,eax
  41c906:	cmp    DWORD PTR ds:0x54f65e03,esp
  41c90c:	shl    DWORD PTR [edx],1
  41c90e:	sbb    DWORD PTR [eax+0x1e8fb1f2],ebp
  41c914:	(bad)  
  41c915:	xchg   edi,eax
  41c916:	add    DWORD PTR [edi],ebx
  41c918:	push   ebp
  41c919:	add    DWORD PTR [eax-0x63f639e8],esp
  41c91f:	int3   
  41c920:	jb     0x41c927
  41c922:	pop    esp
  41c923:	jl     0x41c8d8
  41c925:	add    BYTE PTR [ecx+0x514e1e7e],bl
  41c92b:	cld    
  41c92c:	xchg   edi,eax
  41c92d:	add    ebp,DWORD PTR [ebx]
  41c92f:	or     ah,BYTE PTR [ecx-0xf7adf1b]
  41c935:	push   esp
  41c936:	stos   BYTE PTR es:[edi],al
  41c937:	pushf  
  41c938:	adc    esp,DWORD PTR [ecx+0x2]
  41c93b:	jg     0x41c93d
  41c93d:	mov    ds:0xe1b9c698,al
  41c942:	and    eax,0xf684f700
  41c947:	adc    edx,0x6d
  41c94a:	jl     0x41c8e0
  41c94c:	add    BYTE PTR [edx+0x1c776045],cl
  41c952:	inc    esp
  41c953:	jge    0x41c8ec
  41c955:	rcl    BYTE PTR [eax],0x6a
  41c958:	cmc    
  41c959:	jmp    0xddd8:0x111cebfe
  41c960:	rcl    al,0x80
  41c963:	loop   0x41c959
  41c965:	fadd   QWORD PTR [ebp+0x5ce3b600]
  41c96b:	inc    ecx
  41c96c:	(bad)  
  41c96d:	or     ebp,ebx
  41c96f:	ins    BYTE PTR es:[edi],dx
  41c970:	add    BYTE PTR [esi-0x7a],bh
  41c973:	je     0x41c93f
  41c975:	push   DWORD PTR [edx+0x6d3bda7d]
  41c97b:	pusha  
  41c97c:	scas   al,BYTE PTR es:[edi]
  41c97d:	(bad)  
  41c97e:	sbb    al,BYTE PTR [eax]
  41c980:	dec    edi
  41c981:	out    0x20,eax
  41c983:	test   eax,0x7b003d8c
  41c988:	aaa    
  41c989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c98a:	ror    DWORD PTR [ecx+0xa371f7],0xfc
  41c991:	mov    bh,dl
  41c993:	push   0x95973649
  41c998:	add    BYTE PTR ds:0x370b5efd,ch
  41c99e:	loopne 0x41c9b1
  41c9a0:	sbb    BYTE PTR [eax],al
  41c9a2:	pop    eax
  41c9a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9a4:	pop    ds
  41c9a5:	scas   eax,DWORD PTR es:[edi]
  41c9a6:	sub    ebp,DWORD PTR [edx]
  41c9a8:	call   0x7a79ca90
  41c9ad:	jns    0x41c940
  41c9af:	dec    edx
  41c9b0:	retf   0x6236
  41c9b3:	in     al,dx
  41c9b4:	retf   
  41c9b5:	add    BYTE PTR [ebx-0x5e],ah
  41c9b8:	test   eax,0xdaf159ae
  41c9bd:	mov    al,BYTE PTR [ebx]
  41c9bf:	imul   edi
  41c9c1:	les    esp,FWORD PTR [edi-0x4a149236]
  41c9c7:	jecxz  0x41c9a4
  41c9c9:	loopne 0x41c9c5
  41c9cb:	sub    al,0x23
  41c9cd:	add    BYTE PTR [ebx+eax*4-0xe60a169],dh
  41c9d4:	pusha  
  41c9d5:	push   ds
  41c9d6:	add    BYTE PTR [edi+edx*8-0x4d],al
  41c9da:	and    BYTE PTR [ecx-0x60],al
  41c9dd:	inc    eax
  41c9de:	dec    ebx
  41c9df:	add    bl,ah
  41c9e1:	sahf   
  41c9e2:	or     eax,esp
  41c9e4:	ret    
  41c9e5:	cmp    bh,dh
  41c9e7:	std    
  41c9e8:	add    bh,dh
  41c9ea:	mov    esp,cs
  41c9ec:	or     eax,0xb3bc19ca
  41c9f1:	add    cl,cl
  41c9f3:	retf   
  41c9f4:	dec    ecx
  41c9f5:	dec    bx
  41c9f7:	xchg   edi,eax
  41c9f8:	rol    BYTE PTR [ebp+0x1d8dde00],cl
  41c9fe:	pushf  
  41c9ff:	loopne 0x41ca7d
  41ca01:	cmp    BYTE PTR [edi],0x3c
  41ca04:	retf   0x3f7a
  41ca07:	popa   
  41ca08:	neg    BYTE PTR [edi+ebx*1]
  41ca0b:	inc    eax
  41ca0c:	cmp    al,BYTE PTR [eax]
  41ca0e:	mov    ebp,0x9c4f9823
  41ca13:	xchg   ecx,eax
  41ca14:	add    BYTE PTR [ebx],ch
  41ca16:	rol    BYTE PTR [esi+0x54],1
  41ca19:	ret    0x59e1
  41ca1c:	dec    ecx
  41ca1d:	add    DWORD PTR [esi-0x264bc7b6],eax
  41ca23:	ins    DWORD PTR es:[edi],dx
  41ca24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca25:	call   0x46bf7741
  41ca2a:	cmp    DWORD PTR [ebx-0x3],edx
  41ca2d:	sbb    dh,0x3d
  41ca30:	add    bl,BYTE PTR [esi+0x7d]
  41ca33:	mov    ch,0x8
  41ca35:	add    BYTE PTR [edi+0x7bb2f349],al
  41ca3b:	scas   eax,DWORD PTR es:[edi]
  41ca3c:	sahf   
  41ca3d:	ins    DWORD PTR es:[edi],dx
  41ca3e:	add    ah,al
  41ca40:	jne    0x41c9e5
  41ca42:	jb     0x41ca9a
  41ca44:	xchg   edx,eax
  41ca45:	and    eax,0xcbf0ba0
  41ca4a:	push   0x536b8432
  41ca4f:	rcl    BYTE PTR [ebx],0x3d
  41ca52:	xchg   BYTE PTR [edx+0x6e023b],bh
  41ca58:	mov    ah,0x5c
  41ca5a:	xchg   esi,eax
  41ca5b:	and    bh,BYTE PTR [edi]
  41ca5d:	out    0xb2,al
  41ca5f:	dec    eax
  41ca60:	sub    edx,DWORD PTR [edi]
  41ca62:	cmp    al,0x59
  41ca64:	add    BYTE PTR [eax+ebp*2+0x5546c47e],al
  41ca6b:	dec    ecx
  41ca6c:	add    BYTE PTR [esi-0x5a],dl
  41ca6f:	ss sbb ebx,ecx
  41ca72:	xlat   BYTE PTR ds:[ebx]
  41ca73:	jmp    0x337acac3
  41ca78:	repz add DWORD PTR [edx-0x67],esi
  41ca7c:	pop    ecx
  41ca7d:	pusha  
  41ca7e:	add    BYTE PTR [ebx-0x34482298],bl
  41ca84:	ds scas al,BYTE PTR es:[edi]
  41ca86:	sbb    BYTE PTR [eax],al
  41ca88:	jbe    0x41cafb
  41ca8a:	add    al,0xc5
  41ca8c:	outs   dx,BYTE PTR ds:[esi]
  41ca8d:	xchg   esp,eax
  41ca8e:	mov    ds:0x1c61032c,eax
  41ca93:	das    
  41ca94:	shl    BYTE PTR [edx+0x8],1
  41ca97:	cwde   
  41ca98:	out    dx,al
  41ca99:	pushf  
  41ca9a:	retf   
  41ca9b:	add    ch,dh
  41ca9d:	mov    esp,0x28b81071
  41caa2:	(bad)  
  41caa3:	in     eax,dx
  41caa4:	add    bl,bl
  41caa6:	mov    ch,0xef
  41caa9:	pop    ebx
  41caaa:	ins    BYTE PTR es:[edi],dx
  41caab:	add    al,0x5a
  41caad:	add    DWORD PTR [eax],ecx
  41caaf:	push   edx
  41cab0:	push   edi
  41cab1:	fisub  WORD PTR [edi+0x38]
  41cab4:	pop    eax
  41cab5:	cld    
  41cab6:	lahf   
  41cab7:	fisttp WORD PTR [edi]
  41cab9:	fucom  st(7)
  41cabb:	add    eax,0xbd474026
  41cac0:	mov    al,ds:0x56002f8f
  41cac5:	stc    
  41cac6:	ins    DWORD PTR es:[edi],dx
  41cac7:	push   edx
  41cac8:	push   esp
  41cac9:	fld    TBYTE PTR [edx+0x5abe00f6]
  41cacf:	jl     0x41caef
  41cad1:	cmp    BYTE PTR [ebx+0x6],0xfc
  41cad5:	add    DWORD PTR [eax-0x74],esi
  41cad8:	shl    BYTE PTR [eax-0x137a913d],cl
  41cade:	or     BYTE PTR [ecx+0x7],bl
  41cae1:	stos   DWORD PTR es:[edi],eax
  41cae2:	sbb    al,0x5e
  41cae4:	sub    dh,bl
  41cae6:	add    BYTE PTR [eax],dh
  41cae8:	daa    
  41cae9:	jb     0x41caad
  41caeb:	bsf    ecx,DWORD PTR [edi+eax*4+0xc]
  41caf0:	or     BYTE PTR [ecx+ecx*4+0xf2f4620],0xa8
  41caf8:	fild   QWORD PTR [edx+0x6dc0bf7b]
  41cafe:	pop    ds
  41caff:	inc    edi
  41cb00:	ret    0x228f
  41cb03:	add    dh,ah
  41cb05:	fucomp st(6)
  41cb07:	and    eax,0xcee8320c
  41cb0c:	pop    esp
  41cb0d:	in     al,dx
  41cb0e:	pop    edi
  41cb0f:	shl    DWORD PTR ds:[eax+0x0],1
  41cb13:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41cb15:	repnz and al,0xeb
  41cb18:	clc    
  41cb19:	push   ecx
  41cb1a:	inc    ecx
  41cb1b:	add    bh,dl
  41cb1d:	outs   dx,DWORD PTR ds:[esi]
  41cb1e:	inc    ebx
  41cb1f:	adc    bh,BYTE PTR [ebx-0x2a]
  41cb22:	je     0x41cb0e
  41cb24:	add    DWORD PTR [ebp-0x3f],ecx
  41cb27:	lods   eax,DWORD PTR ds:[esi]
  41cb28:	mov    ds:0xf4889eaa,al
  41cb2d:	fs mov edx,0x76453d00
  41cb33:	xchg   edi,eax
  41cb34:	or     esp,DWORD PTR [eax]
  41cb36:	nop
  41cb37:	xlat   BYTE PTR ds:[ebx]
  41cb38:	add    dh,dl
  41cb3a:	sar    DWORD PTR [edx+esi*8+0x17],1
  41cb3e:	daa    
  41cb3f:	enter  0x9f,0x5
  41cb43:	xchg   ebx,ecx
  41cb45:	adc    al,BYTE PTR [ebp+0xa3d015]
  41cb4b:	and    eax,0xd4fb01ec
  41cb50:	cdq    
  41cb51:	in     eax,0x86
  41cb53:	jle    0x41cb8c
  41cb55:	add    BYTE PTR [eax],dh
  41cb57:	imul   esp,DWORD PTR [edx-0x78],0xffffff80
  41cb5b:	mov    DWORD PTR [eax+0x1d],ebp
  41cb5e:	add    BYTE PTR [ecx-0x69],ch
  41cb61:	sub    al,0x9b
  41cb63:	scas   eax,DWORD PTR es:[edi]
  41cb64:	xor    esp,eax
  41cb66:	loope  0x41cb52
  41cb68:	jge    0x41cb6a
  41cb6a:	lods   al,BYTE PTR ds:[esi]
  41cb6b:	mov    bl,0xd
  41cb6d:	fst    QWORD PTR [edx+0x5b]
  41cb70:	cmp    bh,dl
  41cb72:	pop    es
  41cb73:	mov    edx,0x652fa278
  41cb78:	xchg   ecx,eax
  41cb79:	sti    
  41cb7a:	inc    esp
  41cb7b:	sub    eax,0xfc9d04e8
  41cb80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb81:	add    BYTE PTR [ecx],bh
  41cb83:	add    DWORD PTR [ebx+0x5a38e74],edx
  41cb89:	adc    dh,BYTE PTR [ebp+0x9]
  41cb8c:	add    BYTE PTR [eax],ch
  41cb8e:	mov    ds:0xea0e6b5c,al
  41cb93:	sar    bl,0x0
  41cb96:	jne    0x41cb2a
  41cb98:	fistp  DWORD PTR [ebp+0x268cb463]
  41cb9e:	pop    ds
  41cb9f:	out    0x76,eax
  41cba1:	lahf   
  41cba2:	test   DWORD PTR [ebx-0x1c],edi
  41cba5:	xchg   esp,eax
  41cba6:	(bad)  
  41cba7:	mov    fs,WORD PTR [eax]
  41cba9:	test   al,0x49
  41cbab:	(bad)  
  41cbac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbad:	push   cs
  41cbae:	ds pop ecx
  41cbb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbb1:	cmp    BYTE PTR [ebx],ah
  41cbb3:	mov    eax,ds:0xb5a85704
  41cbb8:	mov    esi,0x5feaa9
  41cbbd:	sbb    al,0xb8
  41cbbf:	shr    bl,cl
  41cbc1:	jo     0x41cbba
  41cbc3:	repz out dx,eax
  41cbc5:	cli    
  41cbc6:	or     al,0x0
  41cbc8:	mov    ss,WORD PTR [edi-0xd8e86ed]
  41cbce:	ja     0x41cb73
  41cbd0:	loop   0x41cb80
  41cbd2:	sbb    al,0x35
  41cbd4:	xchg   ecx,eax
  41cbd5:	pop    ds
  41cbd6:	inc    eax
  41cbd7:	xchg   BYTE PTR [ecx+0x3f3c889a],dh
  41cbdd:	in     al,0xab
  41cbdf:	jbe    0x41cb6e
  41cbe1:	pop    es
  41cbe2:	lahf   
  41cbe3:	test   eax,0xc7156553
  41cbe8:	fnstenv [eax+0x20]
  41cbeb:	adc    eax,DWORD PTR [ebx+0x49]
  41cbee:	add    DWORD PTR [eax],ecx
  41cbf0:	mov    bl,0x76
  41cbf2:	cmc    
  41cbf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbf4:	icebp  
  41cbf5:	(bad)  
  41cbf6:	call   0x935093f9
  41cbfb:	dec    ebx
  41cbfc:	add    bl,0x0
  41cbff:	fsubp  st(4),st
  41cc01:	mov    ah,BYTE PTR [ebx+ebp*2+0x0]
  41cc05:	loope  0x41cc2b
  41cc07:	mov    bl,0x8f
  41cc09:	pop    esi
  41cc0a:	out    dx,eax
  41cc0b:	sub    BYTE PTR [esi+ebx*1+0x823893],bl
  41cc12:	repz test DWORD PTR [ecx+0xc3a3ce2],ebx
  41cc19:	sti    
  41cc1a:	hlt    
  41cc1b:	enter  0xfead,0xcb
  41cc1f:	add    BYTE PTR [ecx-0x36],ch
  41cc22:	fbstp  TBYTE PTR [ecx]
  41cc24:	ficomp DWORD PTR [ebx+0x73]
  41cc27:	xchg   DWORD PTR [eax],eax
  41cc29:	xor    eax,0x21496bbe
  41cc2e:	mov    ebx,0x5afabc46
  41cc33:	sbb    al,0x26
  41cc35:	adc    esp,ecx
  41cc37:	inc    eax
  41cc38:	pop    ebx
  41cc39:	lahf   
  41cc3a:	mov    WORD PTR [ebp+0x1c],es
  41cc3d:	jae    0x41cc5d
  41cc3f:	imul   ebp,DWORD PTR [ecx-0x3e15bff4],0x63
  41cc46:	mov    edi,0x6c1cfeba
  41cc4b:	jns    0x41cc23
  41cc4d:	rcr    BYTE PTR [ebx+0x3c323404],0x21
  41cc54:	add    BYTE PTR [ebp+0x12035fb9],al
  41cc5a:	push   edx
  41cc5b:	mov    ds:0x60f000f5,eax
  41cc60:	xor    edi,esp
  41cc62:	add    al,0xa2
  41cc64:	sub    al,0x4d
  41cc66:	add    BYTE PTR [ebx+0x6f8fe9ae],ch
  41cc6c:	jns    0x41cc11
  41cc6e:	sbb    eax,0x1b9f5700
  41cc73:	cmp    BYTE PTR [ebp+0x78cd86],dl
  41cc79:	jl     0x41cc2b
  41cc7b:	and    dl,BYTE PTR [esi+0xe7606dd]
  41cc81:	pop    ds
  41cc82:	mov    ds:0xeec009da,al
  41cc87:	das    
  41cc88:	xor    DWORD PTR ds:0x80017f03,edx
  41cc8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc8f:	push   edi
  41cc90:	lds    ecx,FWORD PTR [edi]
  41cc92:	inc    edi
  41cc93:	dec    eax
  41cc94:	fdiv   st,st(5)
  41cc96:	cwde   
  41cc97:	add    BYTE PTR [edx],bl
  41cc99:	dec    ebx
  41cc9a:	gs inc eax
  41cc9c:	ftst   
  41cc9e:	(bad)  
  41cca0:	ja     0x41cc75
  41cca2:	add    BYTE PTR [edi],bl
  41cca4:	aad    0xd4
  41cca6:	jno    0x41cc2e
  41cca8:	rol    DWORD PTR [ecx+0x391e0076],1
  41ccae:	adc    ecx,DWORD PTR [edx-0xd]
  41ccb1:	and    eax,0xc000eb6f
  41ccb6:	mov    ds:0xdc78cf41,eax
  41ccbb:	mov    esi,0x1f7d64
  41ccc0:	imul   ebp,ebp,0xba9fde23
  41ccc6:	mov    eax,0x6b7001e6
  41cccb:	neg    DWORD PTR [ecx+0x6c]
  41ccce:	or     dl,BYTE PTR [edx]
  41ccd0:	fdiv   st(1),st
  41ccd2:	repnz cmp eax,DWORD PTR [ebx-0x23e27cc8]
  41ccd9:	dec    ebp
  41ccda:	lea    edx,[ecx-0x55a7b58]
  41cce0:	add    BYTE PTR [ebx],dh
  41cce2:	xchg   esp,eax
  41cce3:	add    DWORD PTR [edi-0x70a31370],edi
  41cce9:	add    BYTE PTR [ebx+0x3c9ada6c],dl
  41ccef:	ret    0x714e
  41ccf2:	dec    esp
  41ccf3:	stos   BYTE PTR es:[edi],al
  41ccf4:	sbb    ecx,DWORD PTR [ebx]
  41ccf6:	test   BYTE PTR [edi-0x7a],cl
  41ccf9:	add    BYTE PTR [eax],bh
  41ccfb:	sti    
  41ccfc:	bound  edx,QWORD PTR [eax+0x777f73]
  41cd02:	pusha  
  41cd03:	push   edi
  41cd04:	int3   
  41cd05:	ret    
  41cd06:	hlt    
  41cd07:	push   edx
  41cd08:	mov    cl,0x9b
  41cd0a:	add    BYTE PTR [ebx],dl
  41cd0c:	pop    ebx
  41cd0d:	into   
  41cd0e:	lock push eax
  41cd10:	dec    esp
  41cd11:	aam    0x6b
  41cd13:	add    BYTE PTR [eax],dh
  41cd15:	xchg   DWORD PTR [ecx+0x2b],esi
  41cd18:	adc    BYTE PTR [edx],dh
  41cd1a:	scas   al,BYTE PTR es:[edi]
  41cd1b:	mov    BYTE PTR [eax+0x7a],bl
  41cd1e:	mov    ds:0xe100fa38,al
  41cd23:	iret   
  41cd24:	pop    ebp
  41cd25:	imul   edx,edi,0xb13f1a2c
  41cd2b:	mov    DWORD PTR [eax+0x3315cc09],0x9a8542
  41cd35:	js     0x41cd67
  41cd37:	xchg   edi,eax
  41cd38:	xchg   ebx,eax
  41cd39:	mov    ds:0xd21150,al
  41cd3e:	and    BYTE PTR [eax-0x45],0x1a
  41cd42:	push   edi
  41cd43:	jp     0x41cd03
  41cd45:	push   cs
  41cd46:	add    BYTE PTR [esi+0xd],bl
  41cd49:	lods   al,BYTE PTR ds:[esi]
  41cd4a:	aad    0x8a
  41cd4c:	popf   
  41cd4d:	cmp    ch,BYTE PTR [ebp-0x40]
  41cd50:	(bad)  
  41cd51:	fld    QWORD PTR [edi+0x3c1884b0]
  41cd57:	in     eax,0xdb
  41cd59:	add    ah,ah
  41cd5b:	add    eax,0x53d828e9
  41cd60:	or     dh,BYTE PTR [eax]
  41cd62:	icebp  
  41cd63:	repnz pushf 
  41cd65:	int3   
  41cd66:	out    dx,al
  41cd67:	push   edi
  41cd68:	xchg   ebp,eax
  41cd69:	ror    BYTE PTR [edx],0xf9
  41cd6c:	cmp    eax,0xeb6d7e01
  41cd71:	and    esi,esi
  41cd73:	cmc    
  41cd74:	(bad)  
  41cd75:	cld    
  41cd76:	fimul  DWORD PTR [ecx+0x7d]
  41cd79:	lldt   WORD PTR [edx]
  41cd7c:	cmp    bh,0x9e
  41cd7f:	(bad)  
  41cd80:	xor    eax,0x4f38066f
  41cd85:	cld    
  41cd86:	xor    DWORD PTR [ecx-0x735c647f],0xc6903091
  41cd90:	add    bh,dh
  41cd92:	push   ds
  41cd93:	inc    eax
  41cd94:	mov    bh,0xe4
  41cd96:	fnstenv [ebx]
  41cd98:	mov    eax,DWORD PTR [eax]
  41cd9a:	push   es
  41cd9b:	outs   dx,BYTE PTR ds:[esi]
  41cd9c:	mov    dl,0xd8
  41cd9e:	and    DWORD PTR [ebx-0x34],ecx
  41cda1:	mov    ecx,0x80eb7200
  41cda6:	and    edi,DWORD PTR [ebx+0x65]
  41cda9:	ret    0x2f
  41cdac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdad:	lods   eax,DWORD PTR ds:[esi]
  41cdae:	cmp    eax,0xb0c90ff3
  41cdb3:	xor    eax,DWORD PTR [eax]
  41cdb5:	sub    al,BYTE PTR [ecx]
  41cdb7:	push   es
  41cdb8:	mov    al,ds:0x9644fd3a
  41cdbd:	add    ah,ah
  41cdbf:	xchg   edi,eax
  41cdc0:	aad    0x45
  41cdc2:	sbb    ah,dl
  41cdc4:	and    BYTE PTR [esi+0x0],dl
  41cdc7:	mov    DWORD PTR [edi],edi
  41cdc9:	test   ah,al
  41cdcb:	popa   
  41cdcc:	cmp    al,0xb7
  41cdce:	sar    DWORD PTR [eax],cl
  41cdd0:	push   es
  41cdd1:	add    BYTE PTR fs:[edx],al
  41cdd4:	sub    al,0x4a
  41cdd6:	inc    eax
  41cdd7:	mov    ebx,0x5e00e2a4
  41cddc:	and    ebx,DWORD PTR [ecx+0xf1b6056]
  41cde2:	mov    edx,0x5cfae000
  41cde7:	lea    edx,[ebp-0x30]
  41cdea:	jle    0x41ce30
  41cdec:	in     al,0x73
  41cdee:	add    ch,dh
  41cdf0:	call   0x5e5978c4
  41cdf5:	enter  0x12e,0xe0
  41cdf9:	js     0x41cdb0
  41cdfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdfc:	push   ecx
  41cdfd:	add    al,0xb1
  41cdff:	pusha  
  41ce00:	jmp    0x41ce24
  41ce02:	pop    es
  41ce03:	dec    edx
  41ce05:	inc    edi
  41ce06:	add    bh,dh
  41ce08:	jo     0x41ce24
  41ce0a:	imul   bl
  41ce0c:	test   al,0x0
  41ce0e:	loop   0x41ce46
  41ce10:	mov    esi,0x662fd95
  41ce15:	or     esi,DWORD PTR [ebx+0x7]
  41ce18:	out    dx,al
  41ce19:	mov    al,0x0
  41ce1b:	je     0x41cde1
  41ce1d:	dec    ecx
  41ce1e:	sub    bl,BYTE PTR [edx-0x76]
  41ce21:	out    0x3b,eax
  41ce23:	jne    0x41cdd6
  41ce25:	add    BYTE PTR ds:0x6f7065f2,bh
  41ce2b:	mov    edi,0x353ff967
  41ce30:	mov    DWORD PTR [esi+eax*4-0x13d50380],edi
  41ce37:	mov    ch,0xe0
  41ce39:	lds    edi,FWORD PTR [ebx+0x0]
  41ce3c:	inc    ebp
  41ce3d:	shr    DWORD PTR [esi+0x3c],cl
  41ce40:	sub    al,0xa6
  41ce42:	nop
  41ce43:	mov    ah,0x7
  41ce45:	shl    DWORD PTR [ecx-0x36],0xb6
  41ce49:	and    al,BYTE PTR [eax+0x68]
  41ce4c:	jge    0x41cddc
  41ce4e:	mov    eax,ds:0x198ba500
  41ce53:	loopne 0x41ce83
  41ce55:	cmp    DWORD PTR [edi],ebx
  41ce57:	mov    al,ds:0x53a86300
  41ce5c:	fcomp  QWORD PTR ds:0xb0136897
  41ce62:	add    BYTE PTR [eax],al
  41ce64:	in     al,0xcb
  41ce66:	jae    0x41cdfd
  41ce68:	xchg   ebx,eax
  41ce69:	jmp    0xf8c:0x7600d489
  41ce70:	rcr    esi,0x11
  41ce73:	fnstcw WORD PTR [edx-0x34ff4888]
  41ce79:	(bad)  
  41ce7b:	fist   DWORD PTR [eax+0x27f1d5]
  41ce81:	mov    ebp,0x69f932c9
  41ce86:	mov    edi,DWORD PTR [eax]
  41ce88:	dec    ecx
  41ce89:	pop    eax
  41ce8a:	out    0x5b,eax
  41ce8c:	add    ch,bh
  41ce8e:	in     al,dx
  41ce8f:	or     al,0x20
  41ce91:	(bad)  
  41ce92:	sahf   
  41ce93:	cwde   
  41ce94:	jnp    0x41ce19
  41ce96:	cmp    BYTE PTR [edi+eiz*4-0x4b13800],dl
  41ce9d:	scas   al,BYTE PTR es:[edi]
  41ce9e:	jae    0x41cecb
  41cea0:	inc    esi
  41cea1:	add    edx,DWORD PTR [eax+0xb]
  41cea4:	xchg   ebp,eax
  41cea5:	jb     0x41ceff
  41cea7:	xor    bh,al
  41cea9:	popf   
  41ceaa:	stos   DWORD PTR es:[edi],eax
  41ceab:	xchg   ecx,eax
  41ceac:	push   ss
  41cead:	out    0x6c,eax
  41ceaf:	or     DWORD PTR [eax],eax
  41ceb1:	xlat   BYTE PTR ds:[ebx]
  41ceb2:	xchg   DWORD PTR [edi-0x60],esi
  41ceb5:	test   eax,0x2a38c200
  41cebb:	push   ecx
  41cebc:	add    eax,DWORD PTR [edi+0x68]
  41cebf:	ins    DWORD PTR es:[edi],dx
  41cec0:	xor    DWORD PTR es:[ebp+edx*4+0x0],eax
  41cec5:	(bad)  
  41cec7:	(bad)
  41ceca:	cmc    
  41cecb:	add    BYTE PTR [ebx],dh
  41cecd:	xchg   esi,eax
  41cece:	js     0x41cf44
  41ced0:	mov    dh,0x75
  41ced2:	fs mov cl,0x0
  41ced5:	adc    BYTE PTR [ebx+edx*2+0x3f7af4a6],bl
  41cedc:	sbb    eax,DWORD PTR [eax]
  41cede:	jle    0x41ced3
  41cee0:	mov    eax,ds:0x4e6004cf
  41cee5:	das    
  41cee6:	add    BYTE PTR [ecx],al
  41cee8:	sub    eax,0xcc971812
  41ceed:	xchg   esp,eax
  41ceee:	nop
  41ceef:	add    ebp,ebx
  41cef1:	jo     0x41cef9
  41cef3:	fcomi  st,st(6)
  41cef5:	addps  xmm0,xmm0
  41cef8:	push   cs
  41cef9:	sbb    DWORD PTR [edi],0x40e4f3d0
  41ceff:	cmp    BYTE PTR cs:[edi],ah
  41cf02:	pop    ecx
  41cf03:	scas   al,BYTE PTR es:[edi]
  41cf04:	je     0x41cf10
  41cf06:	shl    DWORD PTR [ecx],0x6e
  41cf09:	inc    eax
  41cf0a:	ret    0x1700
  41cf0d:	sahf   
  41cf0e:	dec    edx
  41cf0f:	hlt    
  41cf10:	push   cs
  41cf11:	jae    0x41cf16
  41cf13:	mov    al,ds:0xdebe5ded
  41cf18:	sbb    eax,0x90cebf88
  41cf1d:	add    BYTE PTR [ecx],bl
  41cf1f:	cmp    al,0xc
  41cf21:	lahf   
  41cf22:	call   0xa9fe:0x2c3753
  41cf29:	fs test al,0x4
  41cf2c:	jge    0x41ceff
  41cf2e:	push   0xa26b2500
  41cf33:	mov    al,0x13
  41cf35:	jg     0x41cf58
  41cf37:	mov    esp,0xfa906526
  41cf3c:	add    DWORD PTR [esi-0x42146322],ecx
  41cf42:	shl    ecx,0xdc
  41cf45:	mov    ecx,0x575cc
  41cf4a:	cdq    
  41cf4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf4c:	lds    ebp,FWORD PTR [ebp+0x64dc2997]
  41cf52:	push   cs
  41cf53:	and    eax,0x40c1c79b
  41cf58:	xor    ecx,DWORD PTR [ebp+0x7561536]
  41cf5e:	ror    DWORD PTR [edx+0xe87f01],cl
  41cf64:	lods   eax,DWORD PTR ds:[esi]
  41cf65:	or     edi,0xffffffb5
  41cf68:	cmp    eax,0xcc3dc4ea
  41cf6d:	add    ah,bh
  41cf6f:	stos   DWORD PTR es:[edi],eax
  41cf70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf71:	xor    BYTE PTR [ebx-0x3d0d1462],0xe2
  41cf78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf79:	add    BYTE PTR [eax+0x11],cl
  41cf7c:	outs   dx,BYTE PTR ds:[esi]
  41cf7d:	jge    0x41cfa5
  41cf7f:	jecxz  0x41cfeb
  41cf81:	repnz add ch,dh
  41cf84:	rcl    BYTE PTR [edx+edi*8],0xb3
  41cf88:	xchg   edi,eax
  41cf89:	inc    eax
  41cf8a:	fcmovnu st,st(6)
  41cf8c:	add    DWORD PTR [eax],eax
  41cf8e:	pop    edi
  41cf8f:	pop    esi
  41cf90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf91:	fsub   QWORD PTR [eax+0x7c]
  41cf94:	aad    0xad
  41cf96:	add    BYTE PTR [ecx+0x51],al
  41cf99:	enter  0x7383,0x98
  41cf9d:	sub    eax,0xfc550fd0
  41cfa2:	sahf   
  41cfa3:	(bad)
  41cfa6:	xor    al,0xe9
  41cfa8:	add    BYTE PTR [eax+edi*8],ah
  41cfab:	rol    BYTE PTR [esi],0x1a
  41cfae:	sbb    BYTE PTR [ecx],ah
  41cfb0:	add    eax,0x36541600
  41cfb5:	xchg   edi,eax
  41cfb6:	jecxz  0x41cfad
  41cfb8:	popf   
  41cfb9:	xchg   esp,eax
  41cfba:	add    BYTE PTR [ecx],bl
  41cfbc:	xor    ecx,ebx
  41cfbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfbf:	out    dx,eax
  41cfc0:	loopne 0x41cfdf
  41cfc2:	and    eax,DWORD PTR [eax]
  41cfc4:	dec    dl
  41cfc6:	les    eax,FWORD PTR [ebp-0x4a]
  41cfc9:	cmc    
  41cfca:	ret    
  41cfcb:	sti    
  41cfcc:	add    BYTE PTR [edx],ah
  41cfce:	cli    
  41cfcf:	adc    edx,DWORD PTR [ebx+0x49]
  41cfd2:	in     al,0xb9
  41cfd4:	clc    
  41cfd5:	add    BYTE PTR [ebx],al
  41cfd7:	push   ss
  41cfd8:	loope  0x41d036
  41cfda:	or     DWORD PTR [edi+0x5b],eax
  41cfdd:	loop   0x41cfdf
  41cfdf:	xor    esi,0xffffff9e
  41cfe2:	sub    al,BYTE PTR [ecx+0x43]
  41cfe5:	inc    esi
  41cfe6:	sub    eax,DWORD PTR [eax]
  41cfe8:	ret    
  41cfe9:	cmp    DWORD PTR [edx+esi*4+0x7936cc4e],esp
  41cff0:	es push esi
  41cff2:	mov    edi,0x1305033d
  41cff7:	in     al,dx
  41cff8:	push   ebx
  41cff9:	cwde   
  41cffa:	mov    ah,0xe4
  41cffc:	dec    edi
  41cffd:	add    BYTE PTR [esi],dl
  41cfff:	mov    dh,0xd8
  41d001:	dec    esp
  41d002:	xchg   ecx,eax
  41d003:	or     al,0x4d
  41d005:	push   ds
  41d006:	pop    es
  41d007:	xor    ecx,DWORD PTR [esi]
  41d009:	ins    DWORD PTR es:[edi],dx
  41d00a:	into   
  41d00b:	inc    ecx
  41d00c:	add    BYTE PTR [esi-0x1],al
  41d00f:	adc    al,0xdb
  41d011:	mov    al,0xd
  41d013:	add    BYTE PTR [edi],bl
  41d015:	int    0x72
  41d017:	sar    BYTE PTR [ebx+0x1e0235a2],1
  41d01d:	pop    ebp
  41d01e:	xor    BYTE PTR [esi],cl
  41d020:	xchg   DWORD PTR [eax],ebp
  41d022:	pop    ebx
  41d023:	and    BYTE PTR [eax-0xb6b98a2],dh
  41d029:	pop    ds
  41d02a:	ret    
  41d02b:	lds    ebx,FWORD PTR [ebp+0xba12c80]
  41d031:	cmp    eax,0xd6008517
  41d036:	shl    bh,1
  41d038:	push   0x3f15c453
  41d03d:	add    BYTE PTR [ebx+0x7e],bh
  41d040:	cmp    al,0x36
  41d042:	adc    al,0x4e
  41d044:	mov    al,ds:0xde4b01f9
  41d049:	in     al,0x18
  41d04b:	scas   al,BYTE PTR es:[edi]
  41d04c:	jge    0x41d0bd
  41d04e:	call   0xe5425a56
  41d053:	mov    ebp,0x4301b683
  41d058:	xlat   BYTE PTR ds:[ebx]
  41d059:	adc    DWORD PTR [ebx+esi*1-0x2a],ebx
  41d05d:	syscall 
  41d05f:	sbb    al,0xc0
  41d062:	vandnps ymm5,ymm5,YMMWORD PTR [eax]
  41d066:	sbb    edx,ebp
  41d068:	push   cs
  41d069:	add    DWORD PTR [edx+0x47],edx
  41d06c:	adc    DWORD PTR [ebx-0x3ee0d5c0],0xdc3ee130
  41d076:	sbb    dh,cl
  41d078:	cmp    BYTE PTR [eax-0x51],cl
  41d07b:	add    BYTE PTR [eax+ebx*1-0x5f275c23],dh
  41d082:	cmp    eax,0xd9079500
  41d087:	jnp    0x41d0fb
  41d089:	lahf   
  41d08a:	pop    esp
  41d08b:	pop    ds
  41d08c:	add    BYTE PTR [ebx],bl
  41d08e:	xor    DWORD PTR [edi-0x5],esp
  41d091:	sub    edi,DWORD PTR [eax-0x49ff9c32]
  41d097:	sbb    al,0xd0
  41d099:	mov    ah,0x55
  41d09b:	ret    0x4408
  41d09e:	add    eax,DWORD PTR [edx+edi*8+0x10f45a06]
  41d0a5:	test   al,0x5
  41d0a7:	repnz (bad) 
  41d0aa:	daa    
  41d0ab:	repnz jecxz 0x41d0ae
  41d0ae:	call   0xb5dd:0x5cefc06f
  41d0b5:	push   ecx
  41d0b6:	add    BYTE PTR [eax],cl
  41d0b8:	cmc    
  41d0b9:	je     0x41d06a
  41d0bb:	push   0x54
  41d0bd:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41d0bf:	add    al,0xb9
  41d0c1:	add    al,0x8c
  41d0c3:	xlat   BYTE PTR ds:[ebx]
  41d0c4:	xchg   edx,eax
  41d0c5:	ror    ah,0xc4
  41d0c8:	stos   BYTE PTR es:[edi],al
  41d0c9:	mov    esp,0x12e1ce00
  41d0ce:	push   esp
  41d0cf:	fcmovu st,st(4)
  41d0d1:	out    dx,eax
  41d0d2:	dec    esp
  41d0d3:	add    BYTE PTR [eax*2-0x502d8c6e],dh
  41d0da:	sub    al,BYTE PTR [edx+0xe]
  41d0dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0de:	cdq    
  41d0df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0e0:	dec    ebx
  41d0e1:	xor    eax,0xe0a954ce
  41d0e7:	dec    ecx
  41d0e8:	or     al,0x0
  41d0ea:	mov    esi,DWORD PTR [ebp+edx*8+0x296e8aa0]
  41d0f1:	jmp    0x2425:0xbcf2ab00
  41d0f8:	popa   
  41d0f9:	or     BYTE PTR [ecx+0x3c],bl
  41d0fc:	xor    al,0x69
  41d0fe:	xor    BYTE PTR [ebx],0x70
  41d101:	out    0x5,al
  41d103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d104:	mov    ebx,0x19c93b60
  41d109:	add    BYTE PTR [edi],al
  41d10b:	jge    0x41d123
  41d10d:	jne    0x41d0db
  41d10f:	aas    
  41d110:	dec    edi
  41d111:	add    bl,dl
  41d113:	std    
  41d114:	jns    0x41d159
  41d116:	push   ecx
  41d117:	cdq    
  41d118:	jnp    0x41d14d
  41d11a:	pmaddwd mm7,QWORD PTR ds:0x6fa06b9f
  41d121:	dec    ebp
  41d122:	fadd   DWORD PTR [esi+ebx*4+0x0]
  41d126:	pop    esi
  41d127:	xlat   BYTE PTR ds:[ebx]
  41d128:	repz sbb esi,DWORD PTR [edx+esi*2+0xc019243]
  41d130:	out    0x5f,eax
  41d132:	push   0x39
  41d134:	sbb    al,0x7c
  41d136:	xor    al,ch
  41d138:	xchg   ebp,eax
  41d139:	loopne 0x41d186
  41d13b:	pop    ds
  41d13c:	jne    0x41d188
  41d13e:	push   es
  41d13f:	dec    ebx
  41d140:	pop    es
  41d141:	test   al,0xf7
  41d143:	adc    BYTE PTR [edi+0x5adb3f56],0x3
  41d14a:	jg     0x41d17f
  41d14c:	popa   
  41d14d:	jnp    0x41d129
  41d14f:	adc    al,0xb8
  41d151:	fmul   st,st(3)
  41d153:	in     al,dx
  41d154:	add    BYTE PTR [eax+0x56f6cf72],dh
  41d15a:	lods   eax,DWORD PTR ds:[esi]
  41d15b:	es pushf 
  41d15d:	add    al,ah
  41d15f:	pop    eax
  41d160:	push   ebx
  41d161:	and    al,0x81
  41d163:	sbb    al,0xdf
  41d165:	adc    BYTE PTR [esi],bl
  41d167:	pop    edx
  41d168:	pop    ebp
  41d169:	inc    BYTE PTR [eax-0xb05bafc]
  41d16f:	and    al,ch
  41d171:	add    eax,esi
  41d173:	mov    bl,0xa9
  41d175:	retf   0x9aaa
  41d178:	loop   0x41d15b
  41d17a:	stos   DWORD PTR es:[edi],eax
  41d17b:	ror    BYTE PTR [ebp-0x79],0x0
  41d17f:	ficomp DWORD PTR [esi+0x2464dbd2]
  41d185:	sbb    BYTE PTR [eax],dl
  41d187:	add    BYTE PTR [eax],ah
  41d189:	out    0xe4,eax
  41d18b:	test   BYTE PTR [ebp*1-0x42f07a23],bl
  41d192:	cmp    al,0x15
  41d194:	inc    edi
  41d195:	(bad)  
  41d196:	out    dx,al
  41d197:	std    
  41d198:	and    ah,cl
  41d19a:	adc    ebp,DWORD PTR [ecx]
  41d19c:	lods   eax,DWORD PTR ds:[esi]
  41d19d:	pop    esp
  41d19e:	gs add al,0x0
  41d1a1:	xor    BYTE PTR [eax+edx*8-0x2e928437],bh
  41d1a8:	add    BYTE PTR [esi+0x2ccda03d],ah
  41d1ae:	cwde   
  41d1af:	test   edi,eax
  41d1b1:	add    BYTE PTR [esi],bl
  41d1b3:	mov    bh,0xb0
  41d1b5:	icebp  
  41d1b6:	jne    0x41d206
  41d1b8:	pop    esi
  41d1b9:	cmp    BYTE PTR [ebx],al
  41d1bb:	cmc    
  41d1bc:	xor    DWORD PTR [ebx+0x1],edx
  41d1bf:	lahf   
  41d1c0:	dec    ebp
  41d1c1:	mov    al,ds:0xa61095
  41d1c6:	mov    esp,0xff7f5ff3
  41d1cb:	cmp    al,0xb3
  41d1cd:	aam    0x0
  41d1cf:	pushf  
  41d1d0:	iret   
  41d1d1:	xor    DWORD PTR ds:0xcac55e73,edi
  41d1d7:	add    ch,ch
  41d1d9:	sar    bl,1
  41d1db:	pop    edx
  41d1dc:	fs xchg esp,eax
  41d1de:	pop    eax
  41d1df:	push   ds
  41d1e0:	add    ebx,DWORD PTR [ecx+0x37]
  41d1e3:	fdivr  QWORD PTR [esi]
  41d1e5:	fwait
  41d1e6:	xchg   al,dl
  41d1e8:	mov    ebp,0x1738473f
  41d1ed:	int    0x80
  41d1ef:	xchg   DWORD PTR [esi+ebp*4-0x1740d9af],eax
  41d1f6:	push   ss
  41d1f7:	mov    ecx,edx
  41d1f9:	fild   DWORD PTR [eax]
  41d1fb:	add    BYTE PTR [esi],0x2f
  41d1fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1ff:	xchg   esi,eax
  41d200:	and    eax,DWORD PTR [eax]
  41d202:	mov    eax,0xefad2782
  41d207:	aaa    
  41d208:	fnstenv [ecx-0x7ff24ac6]
  41d20e:	pop    ss
  41d20f:	ja     0x41d24b
  41d211:	push   esp
  41d212:	out    0x5a,eax
  41d214:	dec    si
  41d216:	jle    0x41d200
  41d218:	pop    eax
  41d219:	add    esi,DWORD PTR [ebx]
  41d21b:	shl    edx,0x61
  41d21e:	aas    
  41d21f:	jecxz  0x41d1a1
  41d221:	mov    eax,0xf55385b
  41d226:	dec    esp
  41d227:	xlat   BYTE PTR ds:[ebx]
  41d228:	pop    es
  41d229:	std    
  41d22a:	and    ah,bl
  41d22c:	jmp    0x41d253
  41d22e:	into   
  41d22f:	test   al,0x3
  41d231:	int3   
  41d232:	adc    BYTE PTR [ebp+eiz*8-0x1c],ah
  41d236:	pop    esi
  41d237:	mov    eax,0x786fbdf
  41d23c:	sub    al,BYTE PTR [ecx-0xf1e54ac]
  41d242:	jmp    0x10a:0x26c1c8
  41d249:	in     al,0xc
  41d24b:	(bad)  
  41d24c:	imul   ebp,DWORD PTR [esi-0x21dcffc9],0x2109fae5
  41d256:	scas   eax,DWORD PTR es:[edi]
  41d257:	outs   dx,BYTE PTR ds:[esi]
  41d258:	idiv   BYTE PTR [eax-0x27a36d50]
  41d25e:	mov    dl,0x0
  41d260:	xor    dl,cl
  41d262:	mov    edx,0x97455eb6
  41d267:	pop    ds
  41d268:	fnstsw WORD PTR [edi-0x7f5963d6]
  41d26e:	fwait
  41d26f:	pop    eax
  41d270:	adc    ch,BYTE PTR [eax-0x69c2b57e]
  41d276:	das    
  41d277:	cmp    dl,0x21
  41d27a:	mov    ecx,0x45c1aff9
  41d27f:	add    BYTE PTR [eax+esi*2-0x8],bh
  41d283:	mov    al,0x44
  41d285:	mov    edx,0x3e033337
  41d28a:	test   eax,0x7fb1d572
  41d28f:	xchg   DWORD PTR [ebx],esi
  41d291:	and    eax,0x66058091
  41d296:	cld    
  41d297:	and    al,0xf0
  41d299:	add    bh,BYTE PTR [ebp+0x0]
  41d29c:	xchg   edx,eax
  41d29d:	(bad)  
  41d29e:	std    
  41d29f:	xor    eax,0xf5075e8e
  41d2a4:	lods   eax,DWORD PTR ds:[esi]
  41d2a5:	cmp    al,0x22
  41d2a7:	popa   
  41d2a8:	setge  BYTE PTR [eax-0x9]
  41d2ac:	ss aaa 
  41d2ae:	ins    DWORD PTR es:[edi],dx
  41d2af:	out    dx,al
  41d2b0:	jmp    0xbedc00b6
  41d2b5:	push   ebx
  41d2b6:	mov    eax,ds:0x13c881b9
  41d2bb:	or     BYTE PTR [edi*4+0x7bc014cb],bl
  41d2c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2c4:	and    al,0x8a
  41d2c6:	js     0x41d33f
  41d2c8:	mov    al,ds:0xe5dc9d03
  41d2cd:	repz mov WORD PTR [ebx],gs
  41d2d0:	enter  0xf79c,0x40
  41d2d4:	add    BYTE PTR [esi],dh
  41d2d6:	sub    DWORD PTR [ecx+0x19],ecx
  41d2d9:	add    al,bl
  41d2db:	adc    DWORD PTR [edi],esi
  41d2dd:	add    BYTE PTR [esi+eax*8],dh
  41d2e0:	mov    cl,0xdd
  41d2e2:	xor    eax,0xb93c2e
  41d2e7:	addr16 mov edx,0x58410d30
  41d2ed:	iret   
  41d2ee:	sbb    ecx,DWORD PTR [ebx+ebp*2-0x27]
  41d2f2:	add    dh,bh
  41d2f4:	jmp    0x72:0x28f89b0a
  41d2fb:	outs   dx,BYTE PTR ds:[esi]
  41d2fc:	lock les edi,FWORD PTR [ebx]
  41d2ff:	ja     0x41d363
  41d301:	rcl    DWORD PTR [edx+0x0],1
  41d304:	push   ds
  41d305:	(bad)  
  41d307:	jl     0x41d30e
  41d309:	nop
  41d30a:	das    
  41d30b:	sti    
  41d30c:	add    BYTE PTR [ecx-0x49],cl
  41d30f:	sub    BYTE PTR [esi],bh
  41d311:	fisttp DWORD PTR es:[ebx-0x6d]
  41d315:	add    BYTE PTR [ecx],dl
  41d317:	(bad)  
  41d318:	sbb    eax,0x4bc1e7f
  41d31d:	xor    al,0x1
  41d31f:	test   DWORD PTR [eax],edi
  41d321:	int    0x7e
  41d323:	icebp  
  41d324:	into   
  41d325:	js     0x41d357
  41d327:	addr16 jmp 0xab67002d
  41d32d:	std    
  41d32e:	sbb    al,0x7
  41d330:	pop    edx
  41d331:	retf   0x6270
  41d334:	add    DWORD PTR [eax-0xd0ac5a1],ebx
  41d33a:	imul   edi,DWORD PTR [eax-0x3f],0xa
  41d33e:	aam    0xef
  41d340:	adc    al,BYTE PTR [ecx]
  41d342:	cmp    DWORD PTR [ebx+0x5b503009],edi
  41d348:	xor    esp,DWORD PTR [eax]
  41d34a:	jae    0x41d38a
  41d34c:	jmp    0x926479d1
  41d351:	xchg   BYTE PTR [ebx-0x31],dl
  41d354:	inc    eax
  41d355:	add    BYTE PTR [edx-0x75],ah
  41d358:	pop    ds
  41d359:	jge    0x41d34d
  41d35b:	sub    esp,DWORD PTR [edx+esi*1]
  41d35e:	add    bh,ah
  41d360:	pop    es
  41d361:	gs pop edx
  41d363:	shl    DWORD PTR [ebp+0x363e297b],cl
  41d369:	fadd   DWORD PTR [eax]
  41d36b:	mov    eax,ds:0x986e94f7
  41d370:	push   ebx
  41d371:	jo     0x41d3ef
  41d373:	fwait
  41d374:	add    DWORD PTR [esi+0x75dcf53f],ebx
  41d37a:	out    dx,eax
  41d37b:	in     al,0xd0
  41d37d:	and    BYTE PTR [eax],0x2
  41d380:	push   0x51fb45bd
  41d385:	dec    edi
  41d386:	shr    ch,0xea
  41d389:	stos   BYTE PTR es:[edi],al
  41d38a:	mov    cr0,esi
  41d38d:	out    0xc7,al
  41d38f:	rcr    DWORD PTR [ebp+ebx*1-0x76],0x62
  41d394:	and    al,bl
  41d396:	jo     0x41d398
  41d398:	dec    edi
  41d399:	jnp    0x41d31f
  41d39b:	sti    
  41d39c:	ret    
  41d39d:	lock scas eax,DWORD PTR es:[edi]
  41d39f:	aam    0x0
  41d3a1:	pop    ebx
  41d3a2:	mov    esp,DWORD PTR [ecx-0x1f]
  41d3a5:	inc    edx
  41d3a6:	pushf  
  41d3a7:	or     eax,0xb6400326
  41d3ac:	jmp    0x88cb4934
  41d3b1:	bound  ebp,QWORD PTR [ecx+0x2e]
  41d3b4:	xor    BYTE PTR [edi],ah
  41d3b6:	xlat   BYTE PTR ds:[ebx]
  41d3b7:	dec    esp
  41d3b8:	xchg   esp,eax
  41d3b9:	fld    TBYTE PTR [edx+0x0]
  41d3bc:	pop    ss
  41d3bd:	enter  0x715,0x3b
  41d3c1:	mov    ch,bh
  41d3c3:	push   ebp
  41d3c4:	pop    es
  41d3c5:	add    al,0xdf
  41d3c7:	test   al,0x92
  41d3c9:	or     BYTE PTR [eax-0x41817bb1],dh
  41d3cf:	dec    eax
  41d3d0:	dec    ecx
  41d3d1:	fild   WORD PTR [eax]
  41d3d3:	iret   
  41d3d4:	ror    BYTE PTR [eax+eax*2+0x47],1
  41d3d8:	xchg   esp,eax
  41d3d9:	mov    bl,0x0
  41d3db:	mov    ebp,0x1e3e9864
  41d3e0:	into   
  41d3e1:	ja     0x41d369
  41d3e3:	add    dh,BYTE PTR [ebp+0x31]
  41d3e6:	inc    edx
  41d3e7:	inc    ebx
  41d3e8:	jae    0x41d3fc
  41d3ea:	pusha  
  41d3eb:	sbb    al,0x44
  41d3ed:	pop    edi
  41d3ee:	cli    
  41d3ef:	aam    0x7c
  41d3f1:	mov    cl,0x0
  41d3f3:	or     BYTE PTR [esi-0x755eb3a6],ah
  41d3f9:	nop
  41d3fa:	in     eax,0x3e
  41d3fc:	jmp    0x41d3f8
  41d3fe:	adc    BYTE PTR [eax+esi*8+0x9],0x49
  41d403:	or     eax,0x5c48e348
  41d408:	icebp  
  41d409:	add    BYTE PTR [eax],ch
  41d40b:	sub    al,0xd7
  41d40d:	jno    0x41d468
  41d40f:	sbb    BYTE PTR [edx+0x0],bl
  41d412:	mov    edi,0xcfe0a1e7
  41d417:	jnp    0x41d3bb
  41d419:	cmp    eax,0x1dcd239
  41d41e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d41f:	in     al,0x39
  41d421:	outs   dx,BYTE PTR ds:[esi]
  41d422:	nop
  41d423:	jl     0x41d41d
  41d425:	popa   
  41d426:	les    eax,FWORD PTR [eax]
  41d428:	(bad)  
  41d429:	in     eax,0xe1
  41d42b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d42c:	pop    ss
  41d42d:	push   ebx
  41d42e:	push   es
  41d42f:	add    eax,0x9abcb200
  41d434:	test   al,0xef
  41d436:	cmp    DWORD PTR ds:0xe6d317a0,ebp
  41d43c:	cs add ecx,edi
  41d43f:	adc    dh,BYTE PTR [edi+eax*1]
  41d442:	lock sub edi,ebx
  41d445:	push   ss
  41d446:	add    BYTE PTR [ebx],dh
  41d448:	xchg   ah,dh
  41d44a:	dec    eax
  41d44b:	adc    al,0x3f
  41d44d:	jmp    0x41d3f4
  41d44f:	add    BYTE PTR [ebx-0x5f8e91ee],al
  41d455:	xchg   esp,eax
  41d456:	push   ds
  41d457:	cmp    eax,DWORD PTR [ebx]
  41d459:	aad    0x85
  41d45b:	imul   esp,DWORD PTR [esi],0xc180cfbe
  41d461:	push   ebx
  41d462:	fiadd  WORD PTR [eax]
  41d464:	lods   al,BYTE PTR gs:[esi]
  41d466:	data16 mov bh,0x34
  41d469:	mov    ch,0xc6
  41d46b:	inc    ebx
  41d46c:	add    BYTE PTR [ebx],dh
  41d46e:	jecxz  0x41d479
  41d470:	ror    DWORD PTR [ebp+0x39],1
  41d473:	div    dl
  41d475:	add    BYTE PTR [edx+0x45],bl
  41d478:	enter  0x52ce,0xab
  41d47c:	push   0x72e60257
  41d481:	test   al,0x70
  41d483:	dec    esp
  41d484:	adc    DWORD PTR [eax-0x22],esp
  41d487:	jmp    0x41d4e1
  41d489:	packuswb mm6,QWORD PTR [esi-0x80]
  41d48d:	mov    ds:0xf70e9260,eax
  41d492:	xchg   edi,eax
  41d493:	adc    al,0x1
  41d495:	(bad)  
  41d496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d497:	outs   dx,BYTE PTR ds:[esi]
  41d498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d499:	adc    bl,BYTE PTR [ebp+eiz*4-0x1127d81f]
  41d4a0:	xchg   edx,eax
  41d4a1:	add    BYTE PTR [eax-0x66],cl
  41d4a4:	fucomp st(7)
  41d4a6:	adc    esi,DWORD PTR [ebp-0x47ffd6b7]
  41d4ac:	xchg   esi,eax
  41d4ad:	jge    0x41d4f9
  41d4af:	push   ds
  41d4b0:	mov    ds:0x597452fa,eax
  41d4b5:	add    ah,dl
  41d4b7:	loopne 0x41d442
  41d4b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4ba:	jp     0x41d48a
  41d4bc:	mov    dh,0xaa
  41d4be:	jb     0x41d529
  41d4c0:	add    BYTE PTR [ebx-0x51],bl
  41d4c3:	or     BYTE PTR [ecx-0x6d],bh
  41d4c6:	in     eax,dx
  41d4c7:	push   es
  41d4c8:	push   eax
  41d4c9:	add    dl,dh
  41d4cb:	pop    esi
  41d4cc:	adc    ah,al
  41d4ce:	xchg   ebp,eax
  41d4cf:	sub    cl,BYTE PTR [ebp-0x6a]
  41d4d2:	add    BYTE PTR [ecx-0x2d51f841],bh
  41d4d8:	xchg   DWORD PTR [eax],edi
  41d4da:	sar    esi,0xd0
  41d4dd:	aas    
  41d4de:	fimul  WORD PTR [ebx-0x30396b80]
  41d4e4:	(bad)  
  41d4e5:	sbb    ch,BYTE PTR [ecx-0x6c19ff42]
  41d4eb:	or     eax,edx
  41d4ed:	or     dl,0xde
  41d4f0:	mov    bh,0xbd
  41d4f2:	pop    es
  41d4f3:	call   0xda06e5ce
  41d4f8:	adc    BYTE PTR [edi],bh
  41d4fa:	add    bh,al
  41d4fc:	out    dx,al
  41d4fd:	push   0xffffffcf
  41d4ff:	push   ss
  41d500:	mov    ch,0x82
  41d502:	jo     0x41d504
  41d504:	mov    dh,0xd5
  41d506:	loop   0x41d4e8
  41d508:	jb     0x41d4f5
  41d50a:	adc    eax,0x26311da8
  41d50f:	stos   DWORD PTR es:[edi],eax
  41d510:	shl    BYTE PTR [ebx],0x3e
  41d513:	xor    BYTE PTR [eax],bl
  41d515:	imul   edi,ebp,0x0
  41d518:	adc    BYTE PTR [eax+ecx*1],0xf7
  41d51c:	mov    BYTE PTR [ebp-0x7f],ah
  41d51f:	push   ebx
  41d520:	add    DWORD PTR [esi+0x32],ebx
  41d523:	ret    0x3698
  41d526:	jb     0x41d526
  41d528:	sar    BYTE PTR [eax],0xd2
  41d52b:	add    BYTE PTR [esi],dl
  41d52d:	add    BYTE PTR [edx],0xb
  41d530:	shl    DWORD PTR [ecx+edi*4+0x3fbf004f],0x46
  41d538:	jecxz  0x41d584
  41d53a:	push   esp
  41d53b:	mov    eax,0x6dfc0078
  41d540:	cmp    bl,BYTE PTR [eax+ecx*8-0x5b]
  41d544:	sub    eax,DWORD PTR [edi+ecx*1+0x6b]
  41d548:	inc    eax
  41d549:	sbb    DWORD PTR [eax+0x62ac3600],esp
  41d54f:	jg     0x41d558
  41d551:	pop    es
  41d552:	lods   eax,DWORD PTR ds:[esi]
  41d553:	int    0x11
  41d555:	cmp    DWORD PTR [edx+eax*1+0x5c],esi
  41d559:	jecxz  0x41d5bb
  41d55b:	jge    0x41d527
  41d55d:	in     al,dx
  41d55e:	add    DWORD PTR [esi-0x5d66a8f4],eax
  41d564:	mov    ch,0x6a
  41d566:	xor    cl,bh
  41d568:	mov    al,ds:0x161e0e00
  41d56d:	or     bl,BYTE PTR [esi+eax*1-0x4bff3162]
  41d574:	dec    edx
  41d575:	arpl   WORD PTR [ecx+0x6ad6dacb],dx
  41d57b:	add    BYTE PTR [edx+0x2b],bh
  41d57e:	cmp    DWORD PTR [eax+0x3519f137],eax
  41d584:	add    eax,0x4159b9fa
  41d589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d58a:	shl    dh,0x85
  41d58d:	shl    DWORD PTR [ecx+0x0],cl
  41d590:	cmp    edx,DWORD PTR [ebx]
  41d592:	adc    eax,0x983a4da
  41d597:	repnz add bl,cl
  41d59a:	fisttp DWORD PTR [ebx]
  41d59c:	sub    ebp,esi
  41d59e:	jp     0x41d55a
  41d5a0:	push   edi
  41d5a1:	add    cl,dh
  41d5a3:	push   ebx
  41d5a4:	sub    DWORD PTR [edx-0x74],0xc43a85
  41d5ab:	imul   esi,DWORD PTR [edx+0xf],0xffffffec
  41d5af:	arpl   WORD PTR [eax],cx
  41d5b1:	test   al,0x3d
  41d5b3:	jge    0x41d600
  41d5b5:	add    dl,al
  41d5b7:	jmp    DWORD PTR [edx-0x4a]
  41d5ba:	mov    ds:0xf405765,eax
  41d5bf:	adc    eax,0x60873a3e
  41d5c4:	fadd   DWORD PTR [edx+0x7e489db3]
  41d5ca:	mov    edx,0xc01bf70f
  41d5cf:	fcmovnb st,st(7)
  41d5d1:	jg     0x41d5fc
  41d5d3:	out    dx,al
  41d5d4:	(bad)  
  41d5d5:	sub    eax,0x88325740
  41d5da:	stos   DWORD PTR es:[edi],eax
  41d5db:	pop    ss
  41d5dc:	add    BYTE PTR [eax+0x4161f1e2],bh
  41d5e2:	jp     0x41d571
  41d5e4:	jg     0x41d605
  41d5e6:	lods   al,BYTE PTR ds:[esi]
  41d5e7:	xor    ebp,DWORD PTR [edi+0x40]
  41d5ea:	xchg   esp,eax
  41d5eb:	sub    DWORD PTR [eax+0xd91e2b],0xffffffb4
  41d5f2:	add    al,0x44
  41d5f4:	clc    
  41d5f5:	lds    edi,FWORD PTR [ebx+0x32]
  41d5f8:	(bad)  
  41d5f9:	ds mov ebp,0x1f86004b
  41d5ff:	enter  0xea55,0x9
  41d603:	fadd   DWORD PTR [ebx]
  41d605:	pop    eax
  41d606:	sub    cl,BYTE PTR [eax+eiz*1]
  41d609:	and    al,BYTE PTR [ecx+0x37219ba8]
  41d60f:	add    BYTE PTR [eax+0x1aeb300f],bl
  41d615:	cld    
  41d616:	xchg   BYTE PTR [edi],dl
  41d618:	add    cl,BYTE PTR [ebx+0x57fb8084]
  41d61e:	arpl   ax,ax
  41d620:	mov    ah,0xd8
  41d622:	fwait
  41d623:	je     0x41d686
  41d625:	cld    
  41d626:	or     BYTE PTR ds:0x402e056e,bl
  41d62c:	push   ecx
  41d62d:	dec    esi
  41d62e:	popf   
  41d62f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d630:	xlat   BYTE PTR ds:[ebx]
  41d631:	sub    DWORD PTR [eax],eax
  41d633:	mov    al,0x91
  41d635:	stos   DWORD PTR es:[edi],eax
  41d636:	or     BYTE PTR [edi],0x10
  41d639:	(bad)  
  41d63a:	fisttp DWORD PTR [esi]
  41d63c:	push   ebp
  41d63d:	aas    
  41d63e:	mov    ebx,0xcc1e606a
  41d643:	cld    
  41d644:	je     0x41d6a5
  41d646:	loopne 0x41d696
  41d648:	add    BYTE PTR [edi-0x7d],dh
  41d64b:	fisttp QWORD PTR [ecx-0x33]
  41d64e:	sub    ecx,DWORD PTR [edx]
  41d650:	cmp    eax,0x81cad00
  41d655:	sub    eax,0x31031b53
  41d65a:	cli    
  41d65b:	mov    eax,ds:0xaaf55003
  41d660:	sbb    dh,BYTE PTR [ebp-0x3c]
  41d663:	mov    al,ds:0x58cd64
  41d668:	aas    
  41d669:	loop   0x41d631
  41d66b:	add    cx,cx
  41d66e:	and    eax,eax
  41d670:	repnz add eax,0xd6654d0e
  41d676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d677:	loopne 0x41d6cc
  41d679:	repnz retf 0x4b4e
  41d67d:	je     0x41d6f1
  41d67f:	add    ebx,DWORD PTR [esi]
  41d681:	xchg   edi,eax
  41d682:	sbb    ah,BYTE PTR [edx]
  41d684:	add    DWORD PTR ss:[eax+0xdbff2c],ebx
  41d68b:	ins    BYTE PTR es:[edi],dx
  41d68c:	inc    edx
  41d68d:	dec    BYTE PTR [edx-0x6d]
  41d690:	pop    ds
  41d691:	sub    esp,DWORD PTR [eax+0x0]
  41d694:	out    0x9b,al
  41d696:	out    0x79,eax
  41d698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d699:	xor    esp,DWORD PTR [edx-0xe]
  41d69c:	add    dl,al
  41d69e:	or     bh,BYTE PTR [edx]
  41d6a0:	push   ds
  41d6a1:	fidiv  DWORD PTR [ebx+ecx*2-0x353ff08c]
  41d6a8:	mov    ebx,0x3f0012eb
  41d6ad:	mov    esp,DWORD PTR [eax]
  41d6af:	repnz outs dx,BYTE PTR ds:[esi]
  41d6b1:	test   al,0x3
  41d6b3:	mul    BYTE PTR [esi-0x35221dac]
  41d6b9:	add    eax,0x8856db0e
  41d6be:	fild   WORD PTR [eax+0x5d19d98d]
  41d6c4:	aas    
  41d6c5:	xor    edx,ebp
  41d6c7:	mov    ecx,0xe8fd807a
  41d6cc:	xchg   esi,eax
  41d6cd:	nop
  41d6ce:	jno    0x41d732
  41d6d0:	dec    edi
  41d6d1:	add    BYTE PTR [eax-0x4c],bh
  41d6d4:	lds    edi,FWORD PTR [edx-0x3b8d7194]
  41d6da:	add    BYTE PTR [eax-0x232ff0ad],ch
  41d6e0:	arpl   WORD PTR [edx-0x5c],dx
  41d6e3:	cmp    eax,0xb980400b
  41d6e8:	dec    eax
  41d6e9:	std    
  41d6ea:	lods   al,BYTE PTR ds:[esi]
  41d6eb:	ds cld 
  41d6ed:	and    eax,0x3c7ee100
  41d6f2:	pop    es
  41d6f3:	add    DWORD PTR [ebp-0x1d],ebx
  41d6f6:	adc    al,BYTE PTR [eax]
  41d6f8:	inc    esp
  41d6f9:	nop
  41d6fa:	fwait
  41d6fb:	popf   
  41d6fc:	das    
  41d6fd:	test   BYTE PTR [ecx+0x2d02007f],ah
  41d703:	call   edi
  41d705:	outs   dx,BYTE PTR ds:[esi]
  41d706:	xor    DWORD PTR [ebp-0x21fafe74],0x53bfebe3
  41d710:	(bad)
  41d713:	pop    ecx
  41d714:	add    BYTE PTR [edi-0x44],dh
  41d717:	mov    cs,WORD PTR [esi]
  41d719:	test   al,0xff
  41d71b:	jmp    0x1d36:0xcd8b0028
  41d722:	mov    al,0xaf
  41d724:	sub    al,0xd5
  41d726:	add    BYTE PTR [edx+0x32b77881],bl
  41d72c:	jno    0x41d6cb
  41d72e:	push   edx
  41d72f:	add    BYTE PTR [eax+0x7a],ch
  41d732:	xchg   ecx,eax
  41d733:	xchg   ebx,ebx
  41d735:	add    bh,dl
  41d737:	push   0x38
  41d739:	enter  0xf3,0xb8
  41d73d:	mov    ebp,0x6c4e1e7d
  41d742:	stc    
  41d743:	add    BYTE PTR [edi+0x13],al
  41d746:	ret    
  41d747:	jecxz  0x41d76b
  41d749:	dec    ebp
  41d74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d74b:	xor    al,0x77
  41d74d:	rcr    DWORD PTR [esi],1
  41d74f:	retf   
  41d750:	ret    0x4f04
  41d753:	sbb    ecx,eax
  41d755:	cs adc al,0xc0
  41d758:	jae    0x41d7ba
  41d75a:	mov    bh,0x9f
  41d75c:	fistp  QWORD PTR [eax]
  41d75e:	mov    edx,DWORD PTR [eax+eax*1-0x3f27c6bd]
  41d765:	lods   al,BYTE PTR ds:[esi]
  41d766:	retf   0x3f
  41d769:	push   0xffffffa4
  41d76b:	ja     0x41d6f2
  41d76d:	or     eax,ebx
  41d76f:	adc    eax,0x752e0047
  41d774:	nop
  41d775:	cld    
  41d776:	(bad)  
  41d777:	xchg   ebx,eax
  41d778:	xor    DWORD PTR [ebx+0x0],ebp
  41d77b:	xchg   esp,eax
  41d77c:	jo     0x41d798
  41d77e:	das    
  41d77f:	test   eax,0xa0df3e
  41d784:	fmul   DWORD PTR [ebp+0x71]
  41d787:	jae    0x41d722
  41d789:	js     0x41d7b4
  41d78b:	jbe    0x41d78d
  41d78d:	mov    eax,0xf194afda
  41d792:	and    ebp,ecx
  41d794:	add    BYTE PTR ds:[edi-0x5c],bl
  41d798:	inc    edi
  41d799:	(bad)  
  41d79a:	mov    al,0x46
  41d79c:	out    dx,al
  41d79d:	pop    edx
  41d79e:	sysenter 
  41d7a0:	pop    esi
  41d7a1:	ja     0x41d7a1
  41d7a3:	sbb    BYTE PTR [edx+eiz*2],0x73
  41d7a7:	jb     0x41d77a
  41d7a9:	add    BYTE PTR [esi],bl
  41d7ab:	idiv   DWORD PTR ds:0xda6c2624
  41d7b1:	stc    
  41d7b2:	pop    es
  41d7b3:	lea    esi,[esi+edi*1+0x46]
  41d7b7:	loope  0x41d789
  41d7b9:	xchg   esi,eax
  41d7ba:	ja     0x41d785
  41d7bc:	pop    es
  41d7bd:	clc    
  41d7be:	sar    BYTE PTR [ebx+0x55],0x0
  41d7c2:	lock stc 
  41d7c4:	sub    BYTE PTR [ebx+0x20],dh
  41d7c7:	les    esp,FWORD PTR [ecx-0x70]
  41d7ca:	add    BYTE PTR [eax],dh
  41d7cc:	mov    ecx,0x526b3e0
  41d7d1:	sbb    dh,al
  41d7d3:	add    al,al
  41d7d5:	in     eax,0xa8
  41d7d7:	ret    0x3b76
  41d7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7db:	(bad)  
  41d7dc:	punpckldq mm3,DWORD PTR [eax+0x1a805204]
  41d7e3:	mov    ebx,0x31bcee
  41d7e8:	outs   dx,DWORD PTR ds:[esi]
  41d7e9:	arpl   WORD PTR [edi-0x4ccc5d82],cx
  41d7ef:	jge    0x41d7f1
  41d7f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7f2:	ret    
  41d7f3:	ins    BYTE PTR es:[edi],dx
  41d7f4:	and    DWORD PTR [ecx+0x5c],esi
  41d7f7:	nop
  41d7f8:	icebp  
  41d7f9:	add    DWORD PTR [ecx-0x209b2a65],eax
  41d7ff:	cmp    edx,edi
  41d801:	int3   
  41d802:	addr16 popa 
  41d804:	sbb    eax,0xd7db8bd9
  41d809:	cmc    
  41d80a:	push   cs
  41d80b:	(bad)  
  41d80c:	sbb    DWORD PTR [ebx-0x17bf1635],eax
  41d812:	sub    eax,0xc3007386
  41d817:	mov    al,ds:0xd387b324
  41d81c:	out    dx,al
  41d81d:	hlt    
  41d81e:	add    BYTE PTR [ebx+0x43],dl
  41d821:	add    dh,BYTE PTR [eax-0x20d6f029]
  41d827:	add    BYTE PTR [ecx],ah
  41d829:	push   eax
  41d82a:	dec    edi
  41d82b:	dec    esp
  41d82c:	jbe    0x41d899
  41d82e:	test   eax,0xbffe0296
  41d833:	mov    esi,0x6067b237
  41d838:	and    al,0x86
  41d83a:	add    BYTE PTR ds:[eax+0x75],cl
  41d83e:	repz leave 
  41d840:	mov    al,fs:0x13ecfcee
  41d846:	push   eax
  41d847:	call   0x4f21:0x32004cff
  41d84e:	pmaddwd mm1,QWORD PTR [edx]
  41d851:	mov    DWORD PTR [ebx+0x0],edi
  41d854:	nop
  41d855:	cmp    al,0xbe
  41d857:	shr    eax,0x29
  41d85a:	xchg   edx,eax
  41d85b:	je     0x41d85f
  41d85d:	dec    DWORD PTR [eax]
  41d85f:	dec    ecx
  41d860:	sahf   
  41d861:	jmp    0x41d88b
  41d863:	ror    BYTE PTR [ecx+ebp*8-0x8],0x3b
  41d868:	(bad)  
  41d869:	out    0x81,eax
  41d86b:	xlat   BYTE PTR ds:[ebx]
  41d86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d86d:	loopne 0x41d850
  41d86f:	cmp    ecx,DWORD PTR [ecx+0x17dcec]
  41d875:	cmp    cl,BYTE PTR [edi+0xab8c923]
  41d87b:	or     al,0x43
  41d87d:	lock inc ecx
  41d87f:	add    BYTE PTR [edx+ecx*8+0x749aec99],al
  41d886:	scas   al,BYTE PTR es:[edi]
  41d887:	push   edx
  41d888:	add    BYTE PTR [edx+edx*8+0x37],ch
  41d88c:	js     0x41d86d
  41d88e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d88f:	mov    edx,0x9271e33
  41d894:	enter  0x7500,0xc6
  41d898:	(bad)  
  41d89a:	xor    BYTE PTR [eax+eax*1+0x7d],cl
  41d89e:	lahf   
  41d89f:	push   0xffffffc4
  41d8a1:	mov    edx,0xfaaa73e5
  41d8a6:	xchg   DWORD PTR [eax],eax
  41d8a8:	and    al,dl
  41d8aa:	mov    esi,0x1596a15f
  41d8af:	xchg   edi,eax
  41d8b0:	push   cs
  41d8b1:	inc    esp
  41d8b2:	dec    edx
  41d8b3:	enter  0x88,0xc3
  41d8b7:	sub    al,0x72
  41d8b9:	add    BYTE PTR ds:[bx],al
  41d8bd:	inc    ebp
  41d8be:	xchg   DWORD PTR [eiz*4+0x34e62f2],esi
  41d8c5:	retf   
  41d8c6:	sbb    DWORD PTR [edx-0x57007ece],edi
  41d8cc:	inc    ecx
  41d8cd:	and    esp,DWORD PTR [eax+eax*1-0x2be1db9c]
  41d8d4:	or     ecx,DWORD PTR [esi]
  41d8d6:	sbb    al,0xf9
  41d8d8:	jns    0x41d930
  41d8da:	in     al,dx
  41d8db:	pop    ebp
  41d8dc:	add    BYTE PTR [ecx+0x33],cl
  41d8df:	(bad)  
  41d8e0:	jmp    0x664e77b6
  41d8e5:	pop    es
  41d8e6:	sti    
  41d8e7:	mov    bl,0x53
  41d8e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8ea:	rcl    DWORD PTR [eax-0x2a],cl
  41d8ed:	(bad)  
  41d8ef:	pop    ebp
  41d8f0:	adc    al,0x2c
  41d8f2:	jns    0x41d8b4
  41d8f4:	fiadd  DWORD PTR [eax]
  41d8f6:	fild   WORD PTR [ecx-0x57]
  41d8f9:	nop
  41d8fa:	daa    
  41d8fb:	cdq    
  41d8fc:	push   ebp
  41d8fd:	add    cl,bh
  41d8ff:	sub    bl,BYTE PTR [esi+0x75]
  41d902:	cld    
  41d903:	cmp    edi,0x0
  41d906:	(bad)  
  41d907:	into   
  41d908:	pop    ebp
  41d909:	stos   BYTE PTR es:[edi],al
  41d90a:	push   esi
  41d90b:	add    dh,bl
  41d90d:	or     BYTE PTR [esi],bl
  41d90f:	jp     0x41d97f
  41d911:	mov    DWORD PTR [ebp-0x1316ff9b],eax
  41d917:	inc    edi
  41d918:	cmp    BYTE PTR [eax],bl
  41d91a:	sub    BYTE PTR [esi+0x10],cl
  41d91d:	add    BYTE PTR [ecx+0x4f],al
  41d920:	mov    dh,0x63
  41d922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d923:	out    0x5f,al
  41d925:	icebp  
  41d926:	sbb    ebx,DWORD PTR es:[ecx-0x68]
  41d92a:	add    bh,BYTE PTR [ecx+0x6099447c]
  41d930:	loopne 0x41d8e4
  41d932:	mov    dh,dh
  41d934:	loopne 0x41d936
  41d936:	add    esp,DWORD PTR [ecx]
  41d938:	mov    ah,0x85
  41d93a:	mov    ds:0x96618d,al
  41d93f:	popf   
  41d940:	outs   dx,BYTE PTR ds:[esi]
  41d941:	daa    
  41d942:	mov    WORD PTR [edi-0x3e],fs
  41d945:	(bad)  
  41d946:	pop    ebp
  41d947:	add    BYTE PTR ds:0x6fcdfe06,cl
  41d94d:	repz and edx,ebx
  41d950:	add    edx,DWORD PTR [ebp-0x62]
  41d953:	add    eax,0xf0835449
  41d958:	inc    esi
  41d959:	dec    edi
  41d95a:	sub    DWORD PTR [eax],eax
  41d95c:	popa   
  41d95d:	lds    ecx,FWORD PTR [ebp-0x6]
  41d960:	pop    edi
  41d961:	outs   dx,DWORD PTR ds:[esi]
  41d962:	ror    BYTE PTR [edi-0x7d04c5c1],cl
  41d968:	sbb    BYTE PTR [ebx-0x1f8dce62],ch
  41d96e:	mov    ds:0x6e0005c6,al
  41d973:	xor    dh,bl
  41d975:	xor    BYTE PTR [edi+0xc709fd],ah
  41d97b:	dec    edx
  41d97c:	pop    esi
  41d97d:	jl     0x41d92d
  41d97f:	push   ecx
  41d980:	pop    edi
  41d981:	xlat   BYTE PTR ds:[ebx]
  41d982:	add    eax,DWORD PTR [eax]
  41d984:	sub    eax,0x8816c4d3
  41d989:	cmp    al,0x85
  41d98b:	sbb    al,BYTE PTR [ebx]
  41d98d:	jae    0x41d9cf
  41d98f:	xchg   edx,eax
  41d990:	fcomp  st(6)
  41d992:	push   esi
  41d993:	lock inc ecx
  41d995:	sbb    ebx,DWORD PTR [eax]
  41d997:	add    BYTE PTR [ecx+0x5f],ah
  41d99a:	mov    ecx,0x29f0478c
  41d99f:	pop    eax
  41d9a0:	add    DWORD PTR [eax+ecx*8-0x60],esi
  41d9a4:	push   ebx
  41d9a5:	pop    ecx
  41d9a6:	cmp    DWORD PTR [edx],edx
  41d9a8:	les    edx,FWORD PTR [esi]
  41d9aa:	cdq    
  41d9ab:	add    BYTE PTR [ecx+0x7a1f224],dh
  41d9b1:	xchg   ecx,eax
  41d9b2:	lds    edi,FWORD PTR [ebp-0x190f75b6]
  41d9b8:	inc    eax
  41d9b9:	add    BYTE PTR [esi+0x57],dl
  41d9bc:	mov    esp,0x56c4662
  41d9c1:	adc    BYTE PTR [ebx],0xa4
  41d9c4:	inc    esp
  41d9c5:	push   0xeb80ae1e
  41d9ca:	cdq    
  41d9cb:	push   ss
  41d9cc:	sub    edi,DWORD PTR es:[edi]
  41d9cf:	add    BYTE PTR [edi],ch
  41d9d1:	mov    ebx,0x85f0c749
  41d9d6:	scas   al,BYTE PTR es:[edi]
  41d9d7:	outs   dx,BYTE PTR ds:[esi]
  41d9d8:	add    BYTE PTR [edx+0x149e0382],bh
  41d9de:	xchg   ebp,eax
  41d9df:	popa   
  41d9e0:	loope  0x41d9e3
  41d9e2:	cdq    
  41d9e3:	call   0xcc33:0x3dd0a5e9
  41d9ea:	adc    BYTE PTR [esi],0x0
  41d9ed:	pop    edi
  41d9ee:	out    dx,al
  41d9ef:	aas    
  41d9f0:	into   
  41d9f1:	cmp    al,0x8a
  41d9f3:	pop    ss
  41d9f4:	mov    ebx,0x54ef7e0b
  41d9f9:	xchg   DWORD PTR [eax+0x62767d87],eax
  41d9ff:	loopne 0x41da59
  41da01:	inc    ecx
  41da02:	xchg   ebx,eax
  41da03:	paddq  mm6,mm4
  41da06:	sub    BYTE PTR [esi],ah
  41da08:	cmp    DWORD PTR [esi-0x3c49ff88],ecx
  41da0e:	mov    ecx,0xbbc5a170
  41da13:	rol    BYTE PTR [ebx],1
  41da15:	rcr    esp,0xf7
  41da18:	mov    eax,0x4fcb0f6a
  41da1d:	ret    
  41da1e:	jne    0x41d9cf
  41da20:	add    bh,dl
  41da22:	cs and eax,0x38
  41da26:	iret   
  41da27:	sbb    BYTE PTR [ebp-0x200c235f],al
  41da2d:	shr    BYTE PTR [esi],0x9c
  41da30:	xchg   edi,eax
  41da31:	and    al,0x3
  41da33:	jnp    0x41da13
  41da35:	mov    ebp,0xe878a332
  41da3a:	ins    DWORD PTR es:[edi],dx
  41da3b:	sbb    esi,DWORD PTR [eax]
  41da3d:	push   ss
  41da3e:	cmp    ah,ah
  41da40:	call   0x96d0da45
  41da45:	popa   
  41da46:	dec    esi
  41da47:	cwde   
  41da48:	psubw  mm4,QWORD PTR [ecx]
  41da4b:	mov    ebx,0x8549801e
  41da50:	mov    dh,0xd9
  41da52:	add    DWORD PTR [ecx],0xf0b0dae6
  41da58:	pop    ebx
  41da59:	in     eax,dx
  41da5a:	dec    edi
  41da5b:	in     al,dx
  41da5c:	das    
  41da5d:	mov    ecx,0xf6f7d300
  41da62:	pop    edx
  41da63:	jnp    0x41da50
  41da65:	or     eax,0x1591a097
  41da6a:	or     DWORD PTR [edx-0x18],esi
  41da6d:	add    BYTE PTR ds:0xa0bc82a9,bh
  41da73:	pop    ecx
  41da74:	cmp    al,0x32
  41da76:	jo     0x41daa8
  41da78:	pop    es
  41da79:	(bad)  
  41da7a:	adc    al,0xc3
  41da7c:	push   edx
  41da7d:	sar    BYTE PTR gs:[esi+0x46],1
  41da81:	push   ecx
  41da82:	popa   
  41da83:	add    BYTE PTR [ebp-0x4a5e276d],cl
  41da89:	das    
  41da8a:	hlt    
  41da8b:	adc    esi,DWORD PTR [edi-0x3b]
  41da8e:	add    BYTE PTR [ebp+0x36],al
  41da91:	xchg   esp,eax
  41da92:	or     esi,DWORD PTR [edx+edi*4-0x57c62213]
  41da99:	out    0x0,al
  41da9b:	int3   
  41da9c:	mov    ch,0x6e
  41da9e:	out    dx,eax
  41da9f:	xor    ecx,DWORD PTR [edi]
  41daa1:	dec    ebp
  41daa2:	add    bh,cl
  41daa4:	scas   eax,DWORD PTR es:[edi]
  41daa5:	inc    esi
  41daa6:	cmp    al,0xcd
  41daa8:	push   ebp
  41daa9:	pusha  
  41daaa:	ins    BYTE PTR es:[edi],dx
  41daab:	jns    0x41da99
  41daad:	cld    
  41daae:	test   DWORD PTR ds:0xe0d81d06,eax
  41dab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dab5:	rol    BYTE PTR [eax],0xbd
  41dab8:	mov    eax,ds:0xc2c71ca7
  41dabd:	mov    cl,0x1
  41dabf:	jae    0x41da79
  41dac1:	(bad)  
  41dac2:	fmul   QWORD PTR [eax+0x70]
  41dac5:	rol    cl,1
  41dac7:	sbb    al,0xf9
  41dac9:	dec    edi
  41daca:	call   0x8895:0x5103a00
  41dad1:	push   ebx
  41dad2:	add    BYTE PTR [ebp-0x3a97c4a7],al
  41dad8:	mov    bh,0xbd
  41dada:	push   ds
  41dadb:	add    BYTE PTR [ecx-0x20],al
  41dade:	int    0x96
  41dae0:	out    dx,eax
  41dae1:	out    dx,al
  41dae2:	and    DWORD PTR [eax+0x73695e00],esp
  41dae8:	push   ss
  41dae9:	sub    eax,0x3a533d
  41daee:	push   0xf4c11980
  41daf3:	push   esi
  41daf4:	and    cl,dh
  41daf6:	add    bh,dl
  41daf8:	jge    0x41db40
  41dafa:	jae    0x41db37
  41dafc:	out    0x97,al
  41dafe:	mov    ah,0x0
  41db00:	daa    
  41db01:	ret    
  41db02:	dec    edi
  41db03:	sub    esi,DWORD PTR [ebp-0x52]
  41db06:	or     DWORD PTR [esi+0x0],esp
  41db09:	(bad)  
  41db0a:	sahf   
  41db0b:	gs jb  0x41db4e
  41db0e:	ja     0x41db1d
  41db10:	push   eax
  41db11:	push   cs
  41db12:	(bad)  
  41db13:	cmc    
  41db14:	das    
  41db15:	fld    QWORD PTR [eax+0x61744e1c]
  41db1b:	jl     0x41db24
  41db1d:	(bad)
  41db21:	pop    ss
  41db22:	add    dl,dh
  41db24:	push   eax
  41db25:	adc    BYTE PTR [edx+esi*2],dl
  41db28:	out    dx,al
  41db29:	add    BYTE PTR [edi+0x3a],bh
  41db2c:	inc    esi
  41db2d:	fidivr WORD PTR [ebx+0x2e]
  41db30:	dec    esp
  41db31:	sbb    DWORD PTR [eax],eax
  41db33:	test   eax,0x7c7d2264
  41db38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db39:	add    bl,ch
  41db3b:	aas    
  41db3c:	(bad)  
  41db3d:	cmp    al,0x80
  41db3f:	jo     0x41dae3
  41db41:	jbe    0x41dba6
  41db43:	sub    dh,BYTE PTR [ebx+eax*1+0x7f563d00]
  41db4a:	lock sti 
  41db4c:	mov    bl,BYTE PTR [ebx+0xed301a8]
  41db52:	inc    edx
  41db53:	inc    ebp
  41db54:	fdivr  DWORD PTR [ebx-0x3d562b8c]
  41db5a:	add    BYTE PTR [edx],dh
  41db5c:	and    cl,al
  41db5e:	mov    BYTE PTR [edi+0x4f4a31],ah
  41db64:	pushf  
  41db65:	cmp    DWORD PTR [ecx],ecx
  41db67:	lds    edx,FWORD PTR [esi+0x1c0f8658]
  41db6d:	push   ds
  41db6e:	fild   QWORD PTR [ecx]
  41db70:	inc    eax
  41db71:	sar    eax,0x41
  41db74:	mov    edi,0xee000784
  41db79:	cmp    bl,BYTE PTR [edi+0x59]
  41db7c:	jae    0x41dba5
  41db7e:	loope  0x41db8f
  41db80:	aas    
  41db81:	(bad)  
  41db83:	add    BYTE PTR [ecx+edi*4-0x5b],al
  41db87:	outs   dx,DWORD PTR ds:[esi]
  41db88:	mov    DWORD PTR [eax+0x1ccc00a2],eax
  41db8e:	data16 aad 0x40
  41db91:	mov    esp,0xe600781f
  41db96:	repnz pop ebx
  41db98:	(bad)  
  41db99:	shl    ebx,cl
  41db9b:	mov    esi,0x757700ef
  41dba0:	cli    
  41dba1:	inc    ebx
  41dba2:	rcr    BYTE PTR [esp+ebp*2],cl
  41dba5:	inc    DWORD PTR [ecx]
  41dba7:	outs   dx,DWORD PTR ds:[esi]
  41dba8:	push   ebp
  41dba9:	cs mov ebx,0xf825cca0
  41dbaf:	clc    
  41dbb0:	call   0x9327bcbc
  41dbb5:	pop    esp
  41dbb6:	jno    0x41db58
  41dbb8:	mov    BYTE PTR [edi+0x6df0beef],cl
  41dbbe:	add    bl,ah
  41dbc0:	jbe    0x41db50
  41dbc2:	cwde   
  41dbc3:	inc    BYTE PTR [ebp+0x110041f6]
  41dbc9:	in     eax,0x1a
  41dbcb:	cmp    al,0xed
  41dbcd:	(bad)  
  41dbce:	sti    
  41dbcf:	dec    esi
  41dbd0:	sbb    al,0xfc
  41dbd2:	push   eax
  41dbd3:	int    0x39
  41dbd5:	add    BYTE PTR [ebp+0xc],bl
  41dbd8:	aas    
  41dbd9:	mov    eax,ds:0xf8c7e8c9
  41dbde:	mov    al,ds:0xd88a48
  41dbe3:	and    al,0x99
  41dbe5:	pop    ebx
  41dbe6:	push   ss
  41dbe7:	pop    ecx
  41dbe8:	call   0x94d0:0xc7300ef
  41dbef:	xor    eax,0x3dcbe0
  41dbf4:	cli    
  41dbf5:	das    
  41dbf6:	pop    esi
  41dbf7:	xor    al,0xe1
  41dbf9:	pop    ds
  41dbfa:	pop    ecx
  41dbfb:	mov    al,0x0
  41dbfd:	cmp    ah,BYTE PTR [edi+0x344c2d8]
  41dc03:	pop    ebx
  41dc04:	shr    dl,1
  41dc06:	mov    bh,0xfa
  41dc08:	or     al,0x74
  41dc0a:	fiadd  WORD PTR [eax]
  41dc0c:	mov    bl,0xc1
  41dc0e:	shl    BYTE PTR [esi-0x6f],cl
  41dc11:	push   es
  41dc12:	xbegin 0xa857a618
  41dc18:	std    
  41dc19:	and    eax,0xeed0e7bf
  41dc1e:	rol    DWORD PTR [eax],cl
  41dc20:	pop    esi
  41dc21:	inc    esp
  41dc22:	cmp    eax,0x915d8386
  41dc27:	sub    al,0xc0
  41dc29:	js     0x41dbe9
  41dc2b:	(bad)  
  41dc2c:	and    eax,0xc0e211d7
  41dc31:	add    bh,ah
  41dc33:	add    dh,BYTE PTR ds:0x2355e05a
  41dc39:	jge    0x41dc3b
  41dc3b:	mov    ds:0x9fcdf78f,al
  41dc40:	inc    eax
  41dc41:	inc    edx
  41dc42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc43:	add    BYTE PTR [ebx+0x43759049],ch
  41dc49:	cmp    eax,0x4d004402
  41dc4e:	jb     0x41dc7b
  41dc50:	push   0x5
  41dc52:	sub    DWORD PTR [eax],edx
  41dc54:	adc    eax,DWORD PTR [ecx]
  41dc56:	shr    DWORD PTR [edx],1
  41dc58:	inc    edx
  41dc59:	mov    bl,0x1f
  41dc5b:	icebp  
  41dc5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc5d:	popa   
  41dc5e:	push   0x1c9644c0
  41dc63:	adc    DWORD PTR [edi],edx
  41dc65:	lea    eax,[eax+0x2f74b63c]
  41dc6b:	repnz sub ecx,DWORD PTR [esi]
  41dc6e:	xchg   BYTE PTR [ecx+0x6f],ah
  41dc71:	pop    DWORD PTR [eax+0x363b710e]
  41dc77:	enter  0x7700,0x5c
  41dc7b:	into   
  41dc7c:	inc    esi
  41dc7d:	mov    al,ds:0xe4fe4d
  41dc82:	shl    bh,1
  41dc84:	push   ebx
  41dc85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc86:	pop    esi
  41dc87:	sbb    DWORD PTR [edx+edx*4+0x240781e0],ebp
  41dc8e:	lods   eax,DWORD PTR ds:[esi]
  41dc8f:	xchg   ecx,eax
  41dc90:	push   cs
  41dc91:	push   ebp
  41dc92:	sub    BYTE PTR [edx+0xa66636],0xd0
  41dc99:	das    
  41dc9a:	mov    BYTE PTR [ebp+0x14],al
  41dc9d:	(bad)  
  41dc9e:	lock add al,BYTE PTR [eax]
  41dca1:	push   0xffffff96
  41dca3:	mov    ch,bh
  41dca5:	sbb    bh,0x94
  41dca8:	mov    esi,0x216e1b00
  41dcad:	mov    bl,0xc8
  41dcaf:	pusha  
  41dcb0:	sbb    eax,0x56bb0093
  41dcb5:	dec    edx
  41dcb6:	cmp    ecx,DWORD PTR [ecx]
  41dcb8:	mov    ds:0x2a6c00e8,al
  41dcbe:	stos   BYTE PTR es:[edi],al
  41dcbf:	je     0x41dc8e
  41dcc1:	pop    ecx
  41dcc2:	mov    al,ds:0x5b630019
  41dcc7:	xchg   DWORD PTR [ecx+edx*1+0x1c23cb4],eax
  41dcce:	fistp  WORD PTR [ebx+0x61aaa7ff]
  41dcd4:	jg     0x41dc96
  41dcd6:	pop    DWORD PTR [ebx-0x217daf00]
  41dcdc:	add    eax,edi
  41dcde:	in     al,dx
  41dcdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dce0:	mov    bh,0x28
  41dce2:	inc    edi
  41dce3:	and    DWORD PTR [ebp-0x34ff871a],0xc5eae485
  41dced:	jmp    0x52424afa
  41dcf2:	(bad)  
  41dcf3:	jbe    0x41dcb1
  41dcf5:	cmp    DWORD PTR ds:0xf20232ae,esi
  41dcfb:	and    dl,BYTE PTR [eax-0x1fbc1ea7]
  41dd01:	gs jg  0x41dd58
  41dd04:	in     al,dx
  41dd05:	pop    edi
  41dd06:	cmp    ecx,DWORD PTR [edx+0x79007f0e]
  41dd0c:	inc    esi
  41dd0d:	hlt    
  41dd0e:	loopne 0x41dd4b
  41dd10:	call   0xc742fda3
  41dd15:	das    
  41dd16:	mov    cl,0xe9
  41dd18:	and    al,0xb5
  41dd1a:	adc    bh,al
  41dd1c:	mov    bh,0x21
  41dd1e:	mov    eax,0x865700c6
  41dd23:	sbb    BYTE PTR [ecx+esi*2+0x73],bh
  41dd27:	arpl   WORD PTR [ebx-0x20587b00],cx
  41dd2d:	xchg   ebx,eax
  41dd2e:	test   DWORD PTR [edi],0x100efd7
  41dd34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd35:	sub    al,0x3a
  41dd38:	jl     0x41dce0
  41dd3a:	rol    BYTE PTR [eax],cl
  41dd3c:	enter  0xcdee,0xa2
  41dd40:	mov    eax,ds:0x5bf920
  41dd45:	mov    bl,0x1c
  41dd47:	repz retf 
  41dd49:	lds    ebp,FWORD PTR [eax-0x6cff79cf]
  41dd4f:	dec    esp
  41dd50:	mov    dh,BYTE PTR [edx-0x6f]
  41dd53:	cmp    eax,0x2800f2a7
  41dd58:	dec    ebx
  41dd59:	push   ss
  41dd5a:	cwde   
  41dd5b:	loop   0x41dd2c
  41dd5d:	aam    0xb2
  41dd5f:	add    ah,ch
  41dd61:	sub    al,0x37
  41dd63:	jecxz  0x41ddd8
  41dd65:	stc    
  41dd66:	hlt    
  41dd67:	icebp  
  41dd68:	cmp    BYTE PTR [edi],al
  41dd6a:	fadd   DWORD PTR [eax]
  41dd6c:	jne    0x41dd87
  41dd6e:	pop    ss
  41dd6f:	mov    ah,0x1f
  41dd71:	push   eax
  41dd72:	in     eax,0x38
  41dd74:	fld    QWORD PTR [edx]
  41dd76:	and    DWORD PTR [edi+0x14],0x1b
  41dd7a:	and    DWORD PTR [esi],esp
  41dd7c:	out    dx,eax
  41dd7d:	inc    eax
  41dd7e:	scas   eax,DWORD PTR es:[edi]
  41dd7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd80:	iret   
  41dd81:	repnz in al,0x8a
  41dd84:	pop    es
  41dd85:	mov    dl,0x7a
  41dd87:	xchg   BYTE PTR [edx-0x15785faf],ah
  41dd8d:	inc    ebx
  41dd8e:	pop    esi
  41dd8f:	add    BYTE PTR [ecx-0x4c606637],cl
  41dd95:	mov    edx,0x930ff201
  41dd9a:	push   0x4f
  41dd9c:	mov    ah,0xa0
  41dd9e:	ins    DWORD PTR es:[edi],dx
  41dd9f:	jbe    0x41de09
  41dda1:	pop    edx
  41dda2:	xor    eax,0x11e9a300
  41dda7:	mov    edx,DWORD PTR [edx]
  41dda9:	aam    0xa
  41ddab:	jno    0x41ddad
  41ddad:	mov    esi,0x9bba51de
  41ddb2:	adc    eax,0xb100ff7f
  41ddb7:	cld    
  41ddb8:	xchg   ebx,eax
  41ddb9:	push   ds
  41ddba:	stos   BYTE PTR es:[edi],al
  41ddbb:	in     al,0x85
  41ddbd:	sar    DWORD PTR [eax],0x1a
  41ddc0:	jmp    0xb6d2:0x13ad4a01
  41ddc7:	idiv   BYTE PTR [esi-0x50]
  41ddca:	mov    WORD PTR [esi+0x2807c713],gs
  41ddd0:	sbb    eax,0xe9acbe
  41ddd5:	fnstcw WORD PTR [eax-0x1f3f9b95]
  41dddb:	add    BYTE PTR [ecx],ah
  41dddd:	shl    BYTE PTR [esi-0x29],cl
  41dde0:	cmp    eax,DWORD PTR [ebx+esi*2-0x5f]
  41dde4:	add    BYTE PTR [edx],al
  41dde6:	rcr    ecx,cl
  41dde8:	add    al,0xb2
  41ddea:	scas   al,BYTE PTR es:[edi]
  41ddeb:	jb     0x41ddfe
  41dded:	add    DWORD PTR [edi],ecx
  41ddef:	xchg   esp,eax
  41ddf0:	mov    ecx,0x2c4a70e6
  41ddf5:	hlt    
  41ddf6:	ja     0x41ddd9
  41ddf8:	in     al,0x1f
  41ddfa:	pop    ds
  41ddfb:	(bad)  
  41ddfc:	jnp    0x41de77
  41ddfe:	add    BYTE PTR [ecx+0x4c5644a7],cl
  41de04:	iret   
  41de05:	add    BYTE PTR [esi-0x7bb2cd37],cl
  41de0b:	jp     0x41de44
  41de0d:	xchg   ebx,eax
  41de0e:	add    BYTE PTR [ebx+0x28d49d90],ch
  41de14:	jb     0x41ddc6
  41de16:	jle    0x41de18
  41de18:	mov    ?,ebx
  41de1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de1b:	(bad)  [edi+0x54]
  41de1e:	pop    ebp
  41de1f:	js     0x41de30
  41de21:	dec    edx
  41de22:	gs sub eax,0xcb180044
  41de28:	push   ebx
  41de29:	or     DWORD PTR [esi+0x0],esi
  41de2c:	(bad)  
  41de2e:	dec    esi
  41de2f:	mov    edx,0x7c1f5d08
  41de34:	add    BYTE PTR [ecx+0x10],bh
  41de37:	adc    ch,BYTE PTR [ecx]
  41de39:	sub    BYTE PTR [ebp+ecx*2+0x276a0052],bl
  41de40:	jp     0x41dde5
  41de42:	aaa    
  41de43:	mov    WORD PTR [edx],?
  41de45:	popf   
  41de46:	cs je  0x41de82
  41de49:	push   es
  41de4a:	add    al,bl
  41de4c:	or     DWORD PTR [eax-0x30],esi
  41de4f:	rol    BYTE PTR [ecx-0x69a7e900],0xca
  41de56:	xor    eax,0x98b00b66
  41de5b:	push   0x9dc57e01
  41de60:	cmc    
  41de61:	gs std 
  41de63:	ret    
  41de64:	rcl    BYTE PTR [eax],1
  41de66:	pop    ecx
  41de67:	add    ebx,esp
  41de69:	push   0x19f30225
  41de6e:	mov    eax,ecx
  41de70:	and    DWORD PTR es:[eax],eax
  41de73:	mov    WORD PTR [edx],ds
  41de75:	xor    eax,0xc4ab4e5e
  41de7a:	(bad)  
  41de7b:	push   cs
  41de7c:	aas    
  41de7d:	lods   eax,DWORD PTR ds:[esi]
  41de7e:	mov    eax,ds:0xcf152066
  41de83:	lahf   
  41de84:	jp     0x41deae
  41de86:	sbb    eax,0xc017763d
  41de8b:	xchg   esp,eax
  41de8c:	push   ecx
  41de8d:	rcl    BYTE PTR [eax-0x77],cl
  41de90:	pop    ds
  41de91:	add    BYTE PTR [ecx+esi*8-0x50],cl
  41de95:	lahf   
  41de96:	xor    edx,eax
  41de98:	inc    esi
  41de99:	out    dx,eax
  41de9a:	add    DWORD PTR ds:0x27066b02,ebx
  41dea0:	std    
  41dea1:	jmp    0x9a:0x2539c0c7
  41dea8:	jo     0x41dee4
  41deaa:	mov    esi,DWORD PTR [esi]
  41deac:	sub    al,0x2b
  41deae:	loop   0x41de8e
  41deb0:	pop    es
  41deb1:	mov    eax,ds:0x37ee969d
  41deb6:	mov    al,ds:0x324e016f
  41debb:	loop   0x41df19
  41debd:	add    al,0xb2
  41debf:	icebp  
  41dec0:	inc    esi
  41dec1:	imul   ebx,DWORD PTR [esi-0x1f81c780],0x4d294831
  41decb:	add    DWORD PTR [ecx],edx
  41decd:	and    DWORD PTR [ebx],edx
  41decf:	daa    
  41ded0:	xchg   edx,eax
  41ded1:	popf   
  41ded2:	les    ecx,FWORD PTR [eax+0x1b]
  41ded5:	add    BYTE PTR [edx-0x4808b070],ah
  41dedb:	int    0x62
  41dedd:	pop    esi
  41dede:	add    cl,al
  41dee0:	xchg   ebp,eax
  41dee1:	pop    es
  41dee2:	rcl    BYTE PTR [ebx+edi*2],cl
  41dee5:	and    dl,BYTE PTR [ecx]
  41dee7:	add    BYTE PTR [esi],dl
  41dee9:	lds    ebp,FWORD PTR [edx-0x20]
  41deec:	push   edi
  41deed:	int3   
  41deee:	mov    dh,BYTE PTR [eax+0x34651200]
  41def4:	mov    es,WORD PTR [edx-0x2c]
  41def7:	pop    ebx
  41def8:	shl    eax,cl
  41defa:	fstp   QWORD PTR [edi]
  41defc:	xchg   ecx,eax
  41defd:	mov    ecx,0x9a1b8020
  41df02:	(bad)  
  41df03:	out    dx,al
  41df04:	sbb    DWORD PTR [ebx+0x0],eax
  41df07:	enter  0x325f,0xfb
  41df0b:	mov    ecx,DWORD PTR [eax+esi*1]
  41df0e:	push   ebx
  41df0f:	add    ah,dl
  41df11:	cmp    ch,BYTE PTR [ebx]
  41df13:	bound  ebx,QWORD PTR [ebx+0x31]
  41df16:	adc    bh,0xf
  41df19:	and    BYTE PTR [esi],ch
  41df1b:	outs   dx,DWORD PTR ds:[esi]
  41df1c:	test   al,0x80
  41df1e:	or     eax,0xb60aace5
  41df23:	jl     0x41dfa1
  41df25:	add    BYTE PTR [ebp+0x56],dl
  41df28:	cwde   
  41df29:	ins    BYTE PTR es:[edi],dx
  41df2a:	stos   DWORD PTR es:[edi],eax
  41df2b:	cmp    al,0xc7
  41df2d:	jecxz  0x41df2f
  41df2f:	mov    WORD PTR [esi-0x52],fs
  41df32:	mov    ebx,0xb30aa7f9
  41df37:	add    BYTE PTR [ebp-0x3f0b91f4],cl
  41df3d:	retf   
  41df3e:	adc    DWORD PTR [edx],0x1b06e800
  41df44:	jl     0x41df13
  41df46:	mov    dl,0x4b
  41df48:	jnp    0x41df44
  41df4a:	fisttp WORD PTR [eax-0x1c]
  41df4d:	iret   
  41df4e:	pcmpgtd mm7,QWORD PTR ds:0x804c0bcc
  41df55:	div    BYTE PTR ds:0x1de59ffe
  41df5b:	dec    eax
  41df5c:	(bad)  
  41df5e:	add    ebx,ebp
  41df60:	(bad)  
  41df61:	int    0xc1
  41df63:	call   0x191:0x4b6fe0cf
  41df6a:	fild   WORD PTR [esi]
  41df6c:	push   ds
  41df6d:	xchg   BYTE PTR [ebx-0x3c2f8bcc],bh
  41df73:	lds    eax,FWORD PTR [ecx]
  41df75:	icebp  
  41df76:	push   esi
  41df77:	adc    ah,dh
  41df79:	and    eax,0x4ff86724
  41df7e:	and    DWORD PTR [edi],ecx
  41df80:	pop    esp
  41df81:	cmp    BYTE PTR [esp+esi*2],ch
  41df84:	and    BYTE PTR [ebx+0x1bba71a1],dl
  41df8a:	add    BYTE PTR [eax+eiz*4-0x6c],cl
  41df8e:	ret    0xf189
  41df91:	jmp    0xa945:0xaa1600ca
  41df98:	ficomp WORD PTR [eax+ebx*2]
  41df9b:	xor    DWORD PTR [edi],eax
  41df9d:	aam    0xa2
  41df9f:	and    al,0x19
  41dfa1:	fild   DWORD PTR [eax]
  41dfa3:	ret    
  41dfa4:	or     esi,DWORD PTR [edx+0x790f00cf]
  41dfaa:	rcl    bh,cl
  41dfac:	scas   eax,DWORD PTR es:[edi]
  41dfad:	or     BYTE PTR [ecx],cl
  41dfaf:	pop    edx
  41dfb0:	nop
  41dfb1:	adc    al,0xb0
  41dfb3:	xchg   BYTE PTR [esi],bl
  41dfb5:	xchg   esp,eax
  41dfb6:	gs mov esp,0xcc8c003e
  41dfbc:	push   ecx
  41dfbd:	and    edx,esi
  41dfbf:	mov    ch,0xa9
  41dfc1:	pop    es
  41dfc2:	retf   
  41dfc3:	dec    esi
  41dfc4:	aaa    
  41dfc5:	xchg   esi,eax
  41dfc6:	fs add ebx,esp
  41dfc9:	xchg   esp,eax
  41dfca:	sahf   
  41dfcb:	clc    
  41dfcc:	ret    
  41dfcd:	sub    BYTE PTR [eax],al
  41dfcf:	xchg   edx,eax
  41dfd0:	js     0x41df80
  41dfd2:	sub    bh,BYTE PTR [ecx]
  41dfd4:	das    
  41dfd5:	mov    esp,0x1c4faf1
  41dfda:	test   DWORD PTR ds:0x599c1ae1,ecx
  41dfe0:	(bad)  
  41dfe1:	aam    0x17
  41dfe3:	push   cs
  41dfe4:	jb     0x41dfb0
  41dfe6:	add    BYTE PTR [edi+eiz*4+0x5f],al
  41dfea:	std    
  41dfeb:	repz (bad) 
  41dfee:	pop    ebp
  41dfef:	add    BYTE PTR [ecx+0x5b317ebe],bh
  41dff5:	aad    0x8f
  41dff7:	sub    ebx,DWORD PTR [esi]
  41dff9:	retf   0xc981
  41dffc:	ret    
  41dffd:	and    BYTE PTR [ebx],0xa7
  41e000:	hlt    
  41e001:	fwait
  41e002:	(bad)  
  41e003:	rcr    BYTE PTR [edi+edx*1-0x4d83ff99],1
  41e00a:	mov    edi,0xb3c04a62
  41e00f:	inc    edx
  41e010:	add    BYTE PTR [edx],al
  41e012:	aad    0x8e
  41e014:	xchg   esp,eax
  41e015:	fimul  WORD PTR [ebx+0x8004513]
  41e01b:	repz sbb ch,BYTE PTR [edi]
  41e01e:	js     0x41dfa6
  41e020:	xor    eax,0x604e0010
  41e025:	mov    ecx,0x489cf866
  41e02a:	mov    ebp,0x8fcb6a00
  41e02f:	sub    al,0x1c
  41e031:	ret    0x9f8b
  41e034:	pmaxsw mm7,QWORD PTR [esi+0x6b]
  41e038:	or     eax,DWORD PTR [eax]
  41e03a:	inc    eax
  41e03b:	add    cl,BYTE PTR [ecx+esi*8+0x5c201eb2]
  41e042:	jbe    0x41e044
  41e044:	inc    esi
  41e045:	push   ds
  41e046:	jecxz  0x41e01a
  41e048:	pop    ss
  41e049:	sbb    eax,0x2f1d4e7e
  41e04e:	hlt    
  41e04f:	cmc    
  41e050:	sbb    BYTE PTR [edi],0x69
  41e053:	or     bh,dl
  41e055:	outs   dx,BYTE PTR ds:[esi]
  41e056:	outs   dx,DWORD PTR ds:[esi]
  41e057:	add    BYTE PTR [ebx],ah
  41e059:	popf   
  41e05a:	cmp    BYTE PTR [eax],bl
  41e05c:	xlat   BYTE PTR ds:[ebx]
  41e05d:	imul   ebx,DWORD PTR [edx],0x40
  41e060:	add    BYTE PTR [edx+0x2],cl
  41e063:	xchg   esi,eax
  41e064:	xor    ecx,DWORD PTR ds:0x1d2c2eda
  41e06a:	ret    0xf614
  41e06d:	add    cl,dl
  41e06f:	fnstsw WORD PTR [ecx]
  41e071:	cmp    esp,DWORD PTR [edi+ecx*8]
  41e074:	jo     0x41e0bc
  41e076:	cli    
  41e077:	push   eax
  41e078:	add    BYTE PTR [ecx+0x1b],cl
  41e07b:	pop    ebp
  41e07c:	cmp    DWORD PTR ds:0x169e6ce0,0xfffffff0
  41e083:	xchg   esp,eax
  41e084:	das    
  41e085:	or     DWORD PTR [edx],ebp
  41e087:	xor    al,0x0
  41e089:	stos   DWORD PTR es:[edi],eax
  41e08a:	(bad)  
  41e08b:	call   0x4441f50d
  41e090:	push   edx
  41e091:	neg    ebp
  41e093:	or     edx,DWORD PTR [ebx+esi*8+0x22cb074b]
  41e09a:	in     eax,dx
  41e09b:	mov    ebx,0x5cb9e088
  41e0a0:	cdq    
  41e0a1:	cmp    eax,DWORD PTR [eax]
  41e0a3:	idiv   ebx
  41e0a5:	push   eax
  41e0a6:	sbb    DWORD PTR [edx-0x5b],edi
  41e0a9:	(bad)  
  41e0aa:	mov    cl,0x0
  41e0ac:	dec    edi
  41e0ad:	fs test al,0x3f
  41e0b0:	xor    eax,0x37b5ae9
  41e0b5:	sub    eax,0xfa9e5d0f
  41e0ba:	popf   
  41e0bb:	loopne 0x41e0de
  41e0bd:	sbb    DWORD PTR [edx],0x0
  41e0c0:	out    dx,al
  41e0c1:	add    edx,esp
  41e0c3:	jno    0x41e06f
  41e0c5:	or     al,0x2
  41e0c7:	call   0xb1ba97eb
  41e0cc:	shl    BYTE PTR [edi],0x4c
  41e0cf:	add    al,0x99
  41e0d1:	cld    
  41e0d2:	in     eax,dx
  41e0d3:	add    BYTE PTR [esi+0x4e151f53],dh
  41e0d9:	repz in eax,0x79
  41e0dc:	add    BYTE PTR [ebx+0x3734d4fb],ah
  41e0e2:	(bad)  
  41e0e4:	cmp    al,0x7e
  41e0e6:	or     DWORD PTR [ecx],0x18
  41e0e9:	mov    edi,0x29803eb1
  41e0ee:	dec    edi
  41e0ef:	dec    ebx
  41e0f0:	push   edx
  41e0f1:	and    eax,0x4138800
  41e0f6:	inc    ebx
  41e0f7:	int    0x8f
  41e0f9:	jmp    0x41e175
  41e0fb:	pop    es
  41e0fc:	xor    eax,0xd3bcbdc5
  41e101:	or     DWORD PTR [eax+0x5],0x59fd20e8
  41e108:	sub    BYTE PTR [edi+0x1a008d23],ch
  41e10e:	mov    esi,0xc93a24a3
  41e113:	inc    esi
  41e114:	adc    BYTE PTR ds:0x40d476dc,bl
  41e11a:	ret    0x7e01
  41e11d:	inc    ebx
  41e11e:	outs   dx,BYTE PTR ds:[esi]
  41e11f:	sub    DWORD PTR [eax],eax
  41e121:	xchg   edx,eax
  41e122:	loop   0x41e19e
  41e124:	lea    edi,[ebx-0x60]
  41e127:	pop    edi
  41e128:	pop    edx
  41e129:	(bad)  
  41e12a:	sbb    al,BYTE PTR [eax]
  41e12c:	adc    BYTE PTR [eax-0x25],0xaf
  41e130:	js     0x41e1a6
  41e132:	add    ebx,DWORD PTR [edi+0x165e1900]
  41e138:	mov    BYTE PTR fs:0x75073a86,ah
  41e13f:	mov    ebp,DWORD PTR [edx]
  41e141:	push   ebx
  41e142:	fisttp DWORD PTR [esi-0x3aff0377]
  41e148:	scas   al,BYTE PTR es:[edi]
  41e149:	fsub   QWORD PTR [ebx-0xf]
  41e14c:	jno    0x41e0dd
  41e14e:	add    dl,al
  41e150:	pop    ecx
  41e151:	mov    dh,0xd4
  41e153:	adc    cl,ah
  41e155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e157:	add    dh,bh
  41e159:	cdq    
  41e15a:	ja     0x41e0de
  41e15c:	mov    ds:0x691e22,eax
  41e161:	data16 xor al,0xaa
  41e164:	dec    ecx
  41e165:	pop    esi
  41e166:	dec    ebp
  41e167:	cmc    
  41e168:	push   0x0
  41e16a:	jae    0x41e172
  41e16c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e16d:	jns    0x41e170
  41e16f:	mov    eax,0x7600bc5d
  41e174:	adc    BYTE PTR [esi-0x5b94a66],ch
  41e17a:	shl    ah,cl
  41e17c:	icebp  
  41e17d:	add    esi,ebx
  41e17f:	test   BYTE PTR [ebx-0x897de22],0x64
  41e186:	and    al,al
  41e188:	cld    
  41e189:	mov    al,0x41
  41e18b:	add    BYTE PTR fs:[ebx],ch
  41e18e:	call   0xad7b7f8e
  41e193:	jns    0x41e207
  41e195:	add    BYTE PTR [esi+0x3b23126b],cl
  41e19b:	push   cs
  41e19c:	rol    esp,cl
  41e19e:	cmp    DWORD PTR [esi+0x78aa0030],esp
  41e1a4:	mov    ds:0x66453c04,al
  41e1a9:	add    ebx,ebx
  41e1ab:	int    0x91
  41e1ad:	out    dx,al
  41e1ae:	scas   eax,DWORD PTR es:[edi]
  41e1af:	das    
  41e1b0:	and    eax,edi
  41e1b2:	aaa    
  41e1b3:	sbb    BYTE PTR [ebx],al
  41e1b5:	popa   
  41e1b6:	pop    es
  41e1b7:	sbb    al,0xd5
  41e1b9:	pop    edi
  41e1ba:	cs call 0x7c0c17
  41e1c0:	scas   al,BYTE PTR es:[edi]
  41e1c1:	adc    esp,DWORD PTR [edx-0x1f13d7db]
  41e1c7:	mov    bh,0x0
  41e1c9:	ror    DWORD PTR [ebx+0x6c],cl
  41e1cc:	test   DWORD PTR [esi+0xb34911a],edi
  41e1d2:	mov    esp,0x80ce2ca3
  41e1d7:	hlt    
  41e1d8:	jecxz  0x41e1e4
  41e1da:	sub    ebp,ebp
  41e1dc:	add    dh,al
  41e1de:	repz fs cmp al,0x9c
  41e1e2:	or     BYTE PTR [esi-0x31],ah
  41e1e5:	add    BYTE PTR [esi+0x45e995c4],bl
  41e1eb:	mov    ah,0x82
  41e1ed:	sbb    al,0x0
  41e1ef:	push   cs
  41e1f0:	call   0xeaff:0xe7985ce4
  41e1f7:	cwde   
  41e1f8:	aas    
  41e1f9:	add    BYTE PTR [edi+esi*2],dh
  41e1fc:	cld    
  41e1fd:	jb     0x41e1bc
  41e1ff:	sar    BYTE PTR [edx+ebp*4+0x0],0x2a
  41e204:	jns    0x41e19b
  41e206:	mov    ebx,0xf19817c1
  41e20b:	add    dl,dl
  41e20d:	sbb    al,0x2f
  41e20f:	lods   al,BYTE PTR ds:[esi]
  41e210:	sahf   
  41e211:	outs   dx,DWORD PTR ds:[esi]
  41e212:	(bad)  
  41e213:	push   ds
  41e214:	jo     0x41e1b9
  41e216:	je     0x41e296
  41e218:	cmp    BYTE PTR [edi-0x46d6ff79],dl
  41e21e:	popa   
  41e21f:	(bad)  
  41e220:	rcr    BYTE PTR [bx+si+0x0],0x1f
  41e225:	adc    ebx,ecx
  41e227:	(bad)  
  41e229:	pushf  
  41e22a:	and    BYTE PTR [ebx],0x0
  41e22d:	push   0xffffff9b
  41e22f:	sub    ebx,edx
  41e231:	mov    al,ds:0xe70bd
  41e236:	lahf   
  41e237:	(bad)  
  41e238:	push   ds
  41e239:	push   ebx
  41e23a:	add    ebp,esi
  41e23c:	es xchg ebp,eax
  41e23e:	add    BYTE PTR [ebx+eax*8-0x5139490e],al
  41e245:	sub    al,0x9d
  41e247:	add    ebp,DWORD PTR [eax]
  41e249:	adc    DWORD PTR [edx],ebx
  41e24b:	pop    es
  41e24c:	dec    edi
  41e24d:	div    BYTE PTR [eax+0x11302bd]
  41e253:	push   0xffcc868f
  41e258:	and    bh,BYTE PTR [edx+0x1e0d6ec8]
  41e25e:	mov    eax,0x940034d6
  41e263:	inc    edi
  41e264:	pop    ebp
  41e265:	adc    eax,0x9af4e20f
  41e26a:	add    BYTE PTR [edi],ah
  41e26c:	jne    0x41e2bf
  41e26e:	sbb    BYTE PTR [esi-0x80],bh
  41e271:	xor    eax,0x2f46008e
  41e276:	sar    bh,1
  41e278:	mov    esp,0x505c04
  41e27d:	or     ebx,DWORD PTR [edx]
  41e27f:	out    dx,ax
  41e281:	mov    bh,0x62
  41e283:	mov    cl,0x4c
  41e285:	add    BYTE PTR [edi-0x5c],dl
  41e288:	pop    edi
  41e289:	inc    ecx
  41e28a:	not    BYTE PTR [eax-0x1df85030]
  41e290:	cld    
  41e291:	jns    0x41e220
  41e293:	xor    eax,0x4a8a6e0
  41e298:	shl    DWORD PTR [esi-0x4c],cl
  41e29b:	add    al,ah
  41e29d:	outs   dx,DWORD PTR ds:[esi]
  41e29e:	fild   QWORD PTR [edi-0x64001a54]
  41e2a4:	cwde   
  41e2a5:	fiadd  WORD PTR [eax]
  41e2a7:	out    dx,al
  41e2a8:	scas   al,BYTE PTR es:[edi]
  41e2a9:	cmp    BYTE PTR [eax+0x6d410a9f],cl
  41e2af:	add    bh,dl
  41e2b1:	popf   
  41e2b2:	push   edi
  41e2b3:	aaa    
  41e2b4:	mov    al,0x61
  41e2b6:	cwde   
  41e2b7:	inc    edi
  41e2b8:	push   eax
  41e2b9:	out    dx,al
  41e2ba:	test   eax,0x38f6e219
  41e2bf:	mov    dh,0xfb
  41e2c1:	sub    BYTE PTR [ebx],0x4
  41e2c4:	sbb    esp,DWORD PTR [esi]
  41e2c6:	jbe    0x41e269
  41e2c8:	loope  0x41e2cd
  41e2ca:	cmp    eax,0xeac42152
  41e2cf:	jg     0x41e2a1
  41e2d1:	and    al,0x31
  41e2d3:	mov    esi,?
  41e2d5:	call   0xa3529ada
  41e2da:	adc    eax,0x63a98b40
  41e2df:	add    BYTE PTR [ecx+eax*1],dh
  41e2e2:	push   esp
  41e2e3:	cs aam 0x60
  41e2e6:	mov    al,0xa0
  41e2e8:	lock (bad) 
  41e2ea:	nop    DWORD PTR [esi+0x6e]
  41e2ee:	mov    esp,0x24b443e0
  41e2f3:	push   eax
  41e2f4:	xlat   BYTE PTR ds:[ebx]
  41e2f5:	call   0x21dbe38e
  41e2fa:	cmp    DWORD PTR [ecx],ecx
  41e2fc:	fisubr WORD PTR [esi]
  41e2fe:	fsubr  st,st(2)
  41e300:	sbb    eax,0x806a6649
  41e305:	shl    bh,cl
  41e307:	inc    ebp
  41e308:	pop    eax
  41e309:	add    BYTE PTR [edi+0x72acdc00],0x35
  41e310:	cmp    esp,edx
  41e312:	ss push cs
  41e314:	sub    eax,0xafe3a7fe
  41e319:	rcr    BYTE PTR [edx],1
  41e31b:	fld    st(6)
  41e31d:	add    BYTE PTR [ebx+0x17977c51],bh
  41e323:	sar    BYTE PTR [edx-0x17],cl
  41e326:	add    al,dh
  41e328:	jle    0x41e355
  41e32a:	std    
  41e32b:	(bad)  [eax]
  41e32d:	xor    al,0xef
  41e32f:	add    BYTE PTR [edx],bl
  41e331:	cmp    ecx,ecx
  41e333:	push   eax
  41e334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e335:	xor    DWORD PTR [ebx+0x6b],esp
  41e338:	pop    es
  41e339:	sub    eax,0x9e660d1
  41e33e:	xor    dh,al
  41e340:	push   ss
  41e341:	jecxz  0x41e340
  41e343:	add    al,bl
  41e345:	iret   
  41e346:	ds cs fwait
  41e349:	mov    DWORD PTR [eax+0x142a00b9],ebp
  41e34f:	gs pop ebp
  41e351:	add    bl,BYTE PTR [ebx]
  41e353:	les    esi,FWORD PTR [ecx-0xfb48700]
  41e359:	xchg   BYTE PTR [ebp+0x26],dl
  41e35c:	repz add al,0x0
  41e35f:	cmc    
  41e360:	add    esp,DWORD PTR [edi]
  41e362:	cmp    ah,BYTE PTR [ecx+0x1d2ea3a5]
  41e368:	jo     0x41e34a
  41e36a:	jecxz  0x41e3ac
  41e36c:	sub    esi,DWORD PTR [ecx-0x2]
  41e36f:	mov    ch,0x4c
  41e371:	je     0x41e389
  41e373:	jbe    0x41e312
  41e375:	repnz add BYTE PTR [edx],bh
  41e378:	jg     0x41e355
  41e37a:	cld    
  41e37b:	(bad)  
  41e37c:	mov    BYTE PTR [eax],0xb4
  41e37f:	retf   
  41e380:	test   eax,0x18357dc5
  41e385:	adc    DWORD PTR [eax],eax
  41e387:	pop    edi
  41e388:	xchg   edx,eax
  41e389:	sar    DWORD PTR [ebx],1
  41e38b:	std    
  41e38c:	(bad)  
  41e38d:	lock ret 0xb61f
  41e391:	arpl   WORD PTR [edx-0x5f5b4eb1],bp
  41e397:	adc    BYTE PTR [ebx-0x37],0x29
  41e39b:	inc    BYTE PTR [eax]
  41e39d:	dec    ebp
  41e39e:	cmp    ah,cl
  41e3a0:	mov    ch,0x4b
  41e3a2:	out    dx,al
  41e3a3:	ja     0x41e40a
  41e3a5:	add    DWORD PTR [edi],ebx
  41e3a7:	loop   0x41e34b
  41e3a9:	inc    ebp
  41e3aa:	push   eax
  41e3ab:	add    al,0x7
  41e3ad:	pusha  
  41e3ae:	inc    ebp
  41e3af:	stos   BYTE PTR es:[edi],al
  41e3b0:	add    dh,dl
  41e3b2:	xchg   DWORD PTR [ebp-0x59],ecx
  41e3b5:	adc    DWORD PTR [ecx-0x40ff434d],esi
  41e3bb:	mov    DWORD PTR [ebx+0x5e],ecx
  41e3be:	xchg   edx,eax
  41e3bf:	adc    BYTE PTR [esi-0x1],bh
  41e3c2:	add    BYTE PTR [esi+0x20d1f95b],dh
  41e3c8:	bnd jae 0x41e3a3
  41e3cb:	add    BYTE PTR [eax-0x5c9b2073],cl
  41e3d1:	push   ebx
  41e3d2:	arpl   dx,sp
  41e3d4:	add    bh,BYTE PTR [ecx+0x57ea8546]
  41e3da:	mov    ah,0x40
  41e3dc:	add    eax,edi
  41e3de:	and    al,0x0
  41e3e0:	ret    
  41e3e1:	pop    eax
  41e3e2:	fild   WORD PTR [eax+0x42761729]
  41e3e8:	clc    
  41e3e9:	out    dx,al
  41e3ea:	add    BYTE PTR [esi-0x46],bl
  41e3ed:	sub    ch,bl
  41e3ef:	ret    0xe930
  41e3f2:	test   BYTE PTR [ecx],al
  41e3f4:	popf   
  41e3f5:	jp     0x41e3fb
  41e3f7:	outs   dx,DWORD PTR ds:[esi]
  41e3f8:	stos   BYTE PTR es:[edi],al
  41e3f9:	mov    ecx,0xe406c939
  41e3fe:	push   esi
  41e3ff:	ja     0x41e402
  41e401:	pop    edx
  41e402:	mov    eax,ds:0xc34f4cee
  41e407:	add    eax,eax
  41e409:	sub    bh,BYTE PTR [esi]
  41e40b:	add    DWORD PTR [edx-0x22],edx
  41e40e:	call   0xccc:0x6f994aa7
  41e415:	rol    DWORD PTR [eax],1
  41e417:	sub    DWORD PTR [ecx+eiz*2-0x43],edi
  41e41b:	dec    esi
  41e41c:	pop    ecx
  41e41d:	mov    ds:0xf0570031,al
  41e422:	sbb    edi,DWORD PTR [eax+0x40848cf1]
  41e428:	add    ah,al
  41e42a:	fwait
  41e42b:	mov    al,ds:0x4b4c6527
  41e430:	or     eax,DWORD PTR [eax]
  41e432:	jo     0x41e467
  41e434:	test   BYTE PTR [esi-0x27],0x4f
  41e438:	shr    DWORD PTR [ecx+eax*1+0x15],cl
  41e43c:	xlat   BYTE PTR ds:[ebx]
  41e43d:	sahf   
  41e43e:	xchg   ecx,eax
  41e43f:	call   DWORD PTR [esi]
  41e441:	jne    0x41e403
  41e443:	mov    dl,0x83
  41e445:	cmp    eax,0x5f9c3c80
  41e44a:	dec    esi
  41e44b:	lods   al,BYTE PTR ds:[esi]
  41e44c:	inc    eax
  41e44d:	add    BYTE PTR [ebp+edx*8+0x486b39ef],cl
  41e454:	jle    0x41e3e6
  41e456:	add    bl,al
  41e458:	pop    ecx
  41e459:	adc    ecx,DWORD PTR [ebp-0x6b]
  41e45c:	icebp  
  41e45d:	out    dx,al
  41e45e:	and    al,BYTE PTR [eax]
  41e460:	push   esi
  41e461:	retf   
  41e462:	xchg   esp,eax
  41e463:	pusha  
  41e464:	retf   0x514
  41e467:	jns    0x41e4b1
  41e469:	lods   al,BYTE PTR ds:[esi]
  41e46a:	das    
  41e46b:	add    al,bh
  41e46d:	sub    al,0xfc
  41e46f:	mov    cl,0x33
  41e471:	xchg   edi,eax
  41e472:	mov    ds:0x4913297f,al
  41e477:	ret    
  41e478:	rol    BYTE PTR [eax],1
  41e47a:	pop    DWORD PTR [ebp+0x40]
  41e47d:	push   esi
  41e47e:	mov    ds:0x41f8e1b2,eax
  41e483:	xchg   esp,eax
  41e484:	add    BYTE PTR [ecx],ah
  41e486:	mov    DWORD PTR [edx+0x1d],0x7b19e32
  41e48d:	add    BYTE PTR [ebp+0x459f8ea6],bh
  41e493:	mov    bh,0xbe
  41e495:	and    BYTE PTR [eax],al
  41e497:	(bad)  
  41e498:	aas    
  41e499:	clc    
  41e49a:	mov    BYTE PTR [eax+eax*8],dh
  41e49d:	and    dl,BYTE PTR [ecx]
  41e49f:	add    DWORD PTR [edx-0x20],esi
  41e4a2:	cli    
  41e4a3:	dec    eax
  41e4a4:	hlt    
  41e4a5:	sbb    edi,ebp
  41e4a7:	xor    BYTE PTR [ebx+0xe80f04d],cl
  41e4ad:	mov    ebx,0x40c2b5fc
  41e4b2:	sub    BYTE PTR [edx],bl
  41e4b4:	sti    
  41e4b5:	xor    edx,ebp
  41e4b7:	add    BYTE PTR [eax],bl
  41e4b9:	jl     0x41e533
  41e4bb:	xchg   esp,eax
  41e4bc:	aam    0x1f
  41e4be:	sbb    al,0x20
  41e4c0:	add    BYTE PTR [eax+0x6cde6b0b],bl
  41e4c6:	mov    ds:0x5c7263b3,eax
  41e4cb:	es mov cl,0xd9
  41e4ce:	ror    BYTE PTR [esi],cl
  41e4d0:	push   ss
  41e4d1:	lods   eax,DWORD PTR ds:[esi]
  41e4d2:	inc    eax
  41e4d3:	loop   0x41e506
  41e4d5:	nop
  41e4d6:	leave  
  41e4d7:	call   0xaa2a:0xa90080e6
  41e4de:	push   edx
  41e4df:	inc    edx
  41e4e0:	push   eax
  41e4e1:	stos   DWORD PTR es:[edi],eax
  41e4e2:	ds push eax
  41e4e4:	dec    ebx
  41e4e5:	out    0x17,al
  41e4e7:	add    DWORD PTR [eax+edx*8],edi
  41e4ea:	or     esp,DWORD PTR [edx+0x44]
  41e4ed:	or     BYTE PTR [ecx-0x40],dh
  41e4f0:	push   edx
  41e4f1:	pop    edx
  41e4f2:	add    dh,dh
  41e4f4:	mov    ch,0x32
  41e4f6:	stos   BYTE PTR es:[edi],al
  41e4f7:	lahf   
  41e4f8:	pop    ebx
  41e4f9:	push   ds
  41e4fa:	push   ss
  41e4fb:	add    BYTE PTR [ebp-0x6a],bh
  41e4fe:	ror    bh,cl
  41e500:	lods   al,BYTE PTR gs:[esi]
  41e502:	nop
  41e503:	das    
  41e504:	pop    es
  41e505:	dec    edx
  41e506:	mov    dl,0xf2
  41e508:	xor    DWORD PTR [edi+0x5e],esp
  41e50b:	pusha  
  41e50c:	lods   eax,DWORD PTR ds:[esi]
  41e50d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e50e:	ja     0x41e544
  41e510:	push   eax
  41e511:	add    BYTE PTR [ebp+0x3d],dl
  41e514:	popa   
  41e515:	fidiv  DWORD PTR [edx-0xd]
  41e518:	adc    DWORD PTR [edi+0x1c],edi
  41e51b:	sub    eax,0x5400cbca
  41e520:	push   esi
  41e521:	movaps xmm1,XMMWORD PTR [esi-0x554cff94]
  41e528:	xor    ecx,esp
  41e52a:	inc    ebx
  41e52b:	mov    ch,0x92
  41e52d:	sti    
  41e52e:	add    al,BYTE PTR [esi-0xd]
  41e531:	inc    eax
  41e532:	or     edx,edi
  41e534:	xor    al,0xe0
  41e536:	sti    
  41e537:	push   ds
  41e538:	test   BYTE PTR [eax],0xa5
  41e53b:	sbb    BYTE PTR [edi+0x3869f903],dh
  41e541:	adc    BYTE PTR [edx],al
  41e543:	retf   0xd83e
  41e546:	(bad)  
  41e547:	mov    al,0x37
  41e549:	sub    BYTE PTR [ebp-0x53d31899],0x4
  41e550:	fisubr WORD PTR [edi-0x7f11f49b]
  41e556:	ret    0xb897
  41e559:	cmp    BYTE PTR [eax],al
  41e55b:	inc    eax
  41e55c:	call   0xcf29dbcb
  41e561:	idiv   DWORD PTR [ecx]
  41e563:	add    BYTE PTR [ecx+0x71],bl
  41e566:	sti    
  41e567:	cdq    
  41e568:	and    esp,ebp
  41e56a:	pusha  
  41e56b:	or     al,0x0
  41e56d:	data16 repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e570:	jo     0x41e5a2
  41e572:	fldcw  WORD PTR [eax+0x302de883]
  41e578:	aam    0x88
  41e57a:	ins    BYTE PTR es:[edi],dx
  41e57b:	scas   al,BYTE PTR es:[edi]
  41e57c:	lock push edi
  41e57e:	pop    es
  41e57f:	add    DWORD PTR [esp+edi*8],0xe08fe360
  41e586:	mov    dh,0xeb
  41e588:	push   eax
  41e589:	adc    esp,DWORD PTR [esi+0x249da200]
  41e58f:	cmp    al,0xf1
  41e591:	inc    esi
  41e592:	aas    
  41e593:	fwait
  41e594:	add    BYTE PTR [edx+0x5b],cl
  41e597:	push   0xe
  41e599:	xchg   esp,eax
  41e59a:	in     eax,0x49
  41e59c:	shl    esp,cl
  41e59e:	lea    eax,[eax]
  41e5a0:	imul   esi,DWORD PTR [esi+0x2e],0xffffffa8
  41e5a4:	mov    dh,0x81
  41e5a6:	mov    ds:0x67b1c4d,al
  41e5ab:	xor    al,BYTE PTR [eax-0x6d0e52bf]
  41e5b1:	iret   
  41e5b2:	xor    BYTE PTR [eax],al
  41e5b4:	test   DWORD PTR [esi],ebx
  41e5b6:	(bad)  
  41e5b8:	pop    ebp
  41e5b9:	imul   ebx,DWORD PTR [edi-0x13ee0325],0xfd350096
  41e5c3:	ror    BYTE PTR ds:0x37182476,1
  41e5c9:	add    BYTE PTR [edx-0x28d9130d],dl
  41e5cf:	sub    BYTE PTR [ebp+0xb0601eb],dl
  41e5d5:	and    cl,BYTE PTR [eax]
  41e5d7:	adc    eax,0x62084c8
  41e5dc:	inc    edx
  41e5dd:	add    BYTE PTR [edx+0x526390b9],bl
  41e5e3:	sub    dh,cl
  41e5e5:	push   ebp
  41e5e6:	add    BYTE PTR [eax+0x680ede74],ah
  41e5ec:	mov    ds:0xa9000572,eax
  41e5f1:	(bad)  
  41e5f2:	imul   eax,DWORD PTR [ecx+0x5f],0x5d348a
  41e5f9:	mov    ?,WORD PTR [esi-0x38b88b8b]
  41e5ff:	ja     0x41e647
  41e601:	add    BYTE PTR [edi+0x19],bh
  41e604:	mov    edi,0x489e78bd
  41e609:	xchg   ecx,eax
  41e60a:	add    BYTE PTR [ebx],bl
  41e60c:	enter  0x6a81,0xe8
  41e610:	sub    BYTE PTR [ecx+0x719f0026],dh
  41e616:	imul   esi,DWORD PTR [ebx-0x74],0x40
  41e61a:	cld    
  41e61b:	retf   
  41e61c:	add    BYTE PTR [esi+0x65],bl
  41e61f:	popa   
  41e620:	push   cs
  41e621:	nop
  41e622:	dec    ecx
  41e623:	retf   0x6e31
  41e626:	(bad)  
  41e628:	sbb    BYTE PTR [edi],0xce
  41e62b:	mov    dh,ch
  41e62d:	outs   dx,DWORD PTR ds:[esi]
  41e62e:	add    BYTE PTR [esi*8-0x66c6510],ch
  41e635:	jmp    0x246e:0x8594003a
  41e63c:	cld    
  41e63d:	mov    ss,WORD PTR [ecx-0x20]
  41e640:	add    BYTE PTR [esp+edi*2-0x2290c0f2],ah
  41e647:	loop   0x41e628
  41e649:	pop    es
  41e64a:	mov    esp,0x66751c5c
  41e64f:	add    BYTE PTR [ebp+0x73a919],dl
  41e655:	push   eax
  41e656:	xchg   esp,eax
  41e657:	cmp    ecx,DWORD PTR [esi-0x1f9eab31]
  41e65d:	cmp    esi,DWORD PTR [ecx+0x6b87b14]
  41e663:	add    BYTE PTR [ecx],bh
  41e665:	add    eax,0x8b8a3a06
  41e66a:	inc    esi
  41e66b:	or     al,BYTE PTR [eax]
  41e66d:	fmulp  st(3),st
  41e66f:	jo     0x41e615
  41e671:	ret    
  41e672:	jmp    0x7351ab09
  41e677:	rcr    bh,cl
  41e679:	push   0x2f
  41e67b:	mov    dl,0x40
  41e67d:	dec    esp
  41e67e:	push   esp
  41e67f:	xchg   ecx,eax
  41e680:	out    0x38,eax
  41e682:	lods   eax,DWORD PTR ds:[esi]
  41e684:	loopne 0x41e606
  41e686:	enter  0x3d14,0xf9
  41e68a:	inc    edx
  41e68b:	pop    edx
  41e68c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e68d:	add    ch,dl
  41e68f:	xchg   ebx,eax
  41e690:	mov    dl,0xe5
  41e692:	nop
  41e693:	inc    ebx
  41e694:	int3   
  41e695:	ins    BYTE PTR es:[edi],dx
  41e696:	add    BYTE PTR [ebx+0x7a],ah
  41e699:	js     0x41e659
  41e69b:	ja     0x41e6e1
  41e69d:	cmp    DWORD PTR ds:0x1c5ef800,esi
  41e6a3:	enter  0x705c,0xed
  41e6a7:	lds    edi,FWORD PTR [esi]
  41e6a9:	test   eax,0x87cb0bc6
  41e6ae:	fwait
  41e6af:	cld    
  41e6b0:	ret    0x2500
  41e6b3:	or     DWORD PTR [esi+0x188623d],0x31145f1d
  41e6bd:	cmp    BYTE PTR [eax+0x48],0x21
  41e6c1:	xchg   edx,eax
  41e6c2:	outs   dx,BYTE PTR ds:[esi]
  41e6c3:	add    BYTE PTR [ecx],ah
  41e6c5:	xor    BYTE PTR [ecx+0x5b],al
  41e6c8:	inc    ebx
  41e6c9:	fld    QWORD PTR [eax]
  41e6cb:	out    0x7c,eax
  41e6cd:	lds    esp,FWORD PTR ss:[edx+0x7e5c0b9c]
  41e6d4:	leave  
  41e6d5:	add    BYTE PTR [eax+0x2520abb8],ah
  41e6db:	mov    DWORD PTR [esi],eax
  41e6dd:	repnz add BYTE PTR [ecx-0x5b],bh
  41e6e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6e2:	out    dx,eax
  41e6e3:	call   0x90:0xea77b759
  41e6ea:	xor    al,BYTE PTR [ebx+ebp*1]
  41e6ed:	and    dh,BYTE PTR [ecx+ebx*8]
  41e6f0:	stos   DWORD PTR es:[edi],eax
  41e6f1:	or     eax,DWORD PTR [eax]
  41e6f3:	scas   eax,DWORD PTR es:[edi]
  41e6f4:	sbb    edi,DWORD PTR [edi+0x6a797201]
  41e6fa:	stc    
  41e6fb:	add    BYTE PTR [esi+edi*1],bl
  41e6fe:	iret   
  41e6ff:	xchg   edx,eax
  41e700:	jmp    0x9cb3dad
  41e705:	rcl    DWORD PTR [esi+ebp*4],0xf4
  41e709:	hlt    
  41e70a:	enter  0xeb00,0x76
  41e70e:	fstp   QWORD PTR [ecx+ebx*1-0x1211c211]
  41e715:	sub    DWORD PTR [ebx+0x44],0xe38edf17
  41e71c:	sub    BYTE PTR [eax+0x74cc2772],0xe0
  41e723:	cmp    DWORD PTR [edi],edi
  41e725:	fadd   QWORD PTR [eax]
  41e727:	sub    ecx,DWORD PTR [ebp+ebx*4+0x26f11a12]
  41e72e:	ss add ch,ch
  41e731:	fs pop esi
  41e733:	push   0x61
  41e735:	sbb    eax,0x2f3f94d8
  41e73a:	fwait
  41e73b:	lahf   
  41e73c:	adc    ah,ah
  41e73e:	add    cl,al
  41e740:	dec    eax
  41e741:	shl    DWORD PTR [edx+0x4f00395f],cl
  41e747:	and    ebp,DWORD PTR gs:[esi-0x14]
  41e74b:	mov    eax,ds:0xab00da45
  41e750:	cdq    
  41e751:	repz (bad) 
  41e754:	cmp    ecx,ebx
  41e756:	out    dx,eax
  41e757:	add    ch,ch
  41e759:	mov    edi,0xd2d1851b
  41e75e:	ins    DWORD PTR es:[edi],dx
  41e75f:	out    0x0,al
  41e761:	gs pop ebx
  41e763:	pushf  
  41e764:	test   eax,0x8af2afff
  41e769:	add    BYTE PTR ds:0x803a92b4,cl
  41e76f:	mov    gs,WORD PTR [edx]
  41e771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e772:	pop    es
  41e773:	aam    0xdd
  41e775:	jp     0x41e6fd
  41e777:	adc    DWORD PTR [edi],eax
  41e779:	and    DWORD PTR [eax-0x66],esi
  41e77c:	jno    0x41e7bd
  41e77e:	test   BYTE PTR [eax],0x29
  41e781:	inc    edi
  41e782:	push   edi
  41e783:	or     DWORD PTR [ecx],ebx
  41e785:	and    eax,0x82d80078
  41e78b:	mov    ah,BYTE PTR [ebp-0x5b]
  41e78e:	cmp    ah,BYTE PTR [edi-0x61]
  41e791:	push   cs
  41e792:	ds mov al,0xb6
  41e795:	sub    BYTE PTR [eax-0x3d9b2dbf],al
  41e79b:	mov    eax,ds:0xeb0c5600
  41e7a0:	dec    edx
  41e7a1:	xlat   BYTE PTR ds:[ebx]
  41e7a2:	and    edi,edx
  41e7a4:	sub    edx,edi
  41e7a6:	rol    DWORD PTR [eax],cl
  41e7a8:	pop    ebp
  41e7a9:	call   0x9b33b371
  41e7ae:	mov    al,ds:0x5c2500f6
  41e7b3:	gs mov ebx,0xde971cb1
  41e7b9:	add    BYTE PTR [ecx-0x7f],dh
  41e7bc:	dec    esp
  41e7bd:	jge    0x41e742
  41e7bf:	in     eax,dx
  41e7c0:	(bad)  
  41e7c1:	lods   eax,DWORD PTR ds:[esi]
  41e7c2:	pop    ds
  41e7c3:	out    dx,eax
  41e7c4:	dec    edx
  41e7c5:	rol    BYTE PTR [eax+0x70],1
  41e7c8:	jg     0x41e7b8
  41e7ca:	xor    al,0xa6
  41e7cc:	mov    ds:0x2d55c400,eax
  41e7d1:	sbb    esp,DWORD PTR [ebp+0x3e82519]
  41e7d7:	fwait
  41e7d8:	xor    eax,0xbe39b7c6
  41e7dd:	nop
  41e7de:	shl    BYTE PTR [ebx],cl
  41e7e0:	or     eax,0x360005fe
  41e7e5:	and    ch,ch
  41e7e7:	ficomp WORD PTR [edx]
  41e7e9:	sub    eax,0x6a011c4b
  41e7ee:	push   edx
  41e7ef:	mov    ah,0x2c
  41e7f1:	xchg   ebp,eax
  41e7f2:	inc    esp
  41e7f3:	or     al,0xec
  41e7f5:	in     al,0xfb
  41e7f7:	call   0x6413e859
  41e7fc:	mov    edx,0xbd6d2b86
  41e801:	out    0x0,eax
  41e803:	loop   0x41e7c3
  41e805:	dec    ebp
  41e806:	not    dh
  41e808:	iret   
  41e809:	popf   
  41e80a:	and    DWORD PTR [ebp+esi*2+0x0],esi
  41e80e:	and    eax,0x44ed1659
  41e813:	mov    edi,0x4f074b3f
  41e818:	push   es
  41e819:	sbb    edx,DWORD PTR [ecx-0x615f21d3]
  41e81f:	xchg   esp,eax
  41e820:	rcr    bh,0xa
  41e823:	in     al,0x61
  41e825:	add    BYTE PTR [edx-0x75d5927c],ch
  41e82b:	sub    BYTE PTR [ecx+0x2b],dh
  41e82e:	add    BYTE PTR [edx+0x1c],dl
  41e831:	or     BYTE PTR [esi+0x2],bh
  41e834:	push   ebp
  41e835:	rcr    BYTE PTR [esi+0x71],cl
  41e838:	out    dx,eax
  41e839:	add    DWORD PTR [ebx+0x756df617],ebp
  41e83f:	(bad)  
  41e840:	inc    edx
  41e841:	and    BYTE PTR [eax+eax*4-0x1c86f5c8],0x4a
  41e849:	jle    0x41e827
  41e84b:	add    BYTE PTR [edx-0x509504a9],ch
  41e851:	(bad)  
  41e853:	mov    ebx,0x236c3e00
  41e858:	inc    esi
  41e859:	outs   dx,DWORD PTR ds:[esi]
  41e85a:	icebp  
  41e85b:	sbb    esi,eax
  41e85d:	add    BYTE PTR [edx],cl
  41e85f:	mov    dh,0xe
  41e861:	in     eax,0x91
  41e863:	scas   eax,DWORD PTR es:[edi]
  41e864:	mov    ecx,ebp
  41e866:	add    DWORD PTR [ebx+0x45],edi
  41e869:	jecxz  0x41e877
  41e86b:	(bad)  [ebx]
  41e86d:	aaa    
  41e86e:	aam    0x4
  41e870:	aam    0x0
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	xor    bl,BYTE PTR [ecx-0x39f07b61]
  41e879:	aas    
  41e87a:	add    dl,bl
  41e87c:	(bad)  
  41e87d:	cmp    al,0xa8
  41e87f:	out    dx,al
  41e880:	test   esi,0x6080012
  41e886:	mov    cl,0xd4
  41e888:	and    al,0xd0
  41e88a:	cld    
  41e88b:	mov    edx,0x3300fe98
  41e890:	lods   eax,DWORD PTR ds:[esi]
  41e891:	loope  0x41e8dd
  41e893:	mov    ds:0x74436ef,al
  41e898:	test   ecx,0xd1f67646
  41e89e:	stos   DWORD PTR es:[edi],eax
  41e89f:	dec    ecx
  41e8a0:	cmp    bl,BYTE PTR [edi+0x7bc02316]
  41e8a6:	push   esi
  41e8a7:	rol    BYTE PTR [ecx],1
  41e8a9:	mov    ss,WORD PTR [esi]
  41e8ab:	lock mov dh,0xe
  41e8ae:	sbb    edx,DWORD PTR [ebx+0x2123e404]
  41e8b4:	cmp    eax,0x83929060
  41e8b9:	in     eax,0x1c
  41e8bb:	hlt    
  41e8bc:	pop    es
  41e8bd:	aam    0x80
  41e8bf:	pushf  
  41e8c0:	imul   eax,DWORD PTR [edx+eax*8],0x1f
  41e8c4:	ds pop ds
  41e8c6:	and    DWORD PTR [esi],ebx
  41e8c8:	add    DWORD PTR [ebx-0x29],0xfca0034d
  41e8cf:	cmp    BYTE PTR [esi+0x47e1da],0xfe
  41e8d6:	xchg   DWORD PTR [esi+0x6c],edx
  41e8d9:	mov    ah,0xdc
  41e8db:	dec    edx
  41e8dc:	mov    ecx,0xe3e97400
  41e8e1:	xchg   esp,eax
  41e8e2:	daa    
  41e8e3:	xlat   BYTE PTR ds:[ebx]
  41e8e4:	and    al,0x8e
  41e8e6:	out    dx,al
  41e8e7:	fwait
  41e8e8:	add    ecx,DWORD PTR [eax+0x21910150]
  41e8ee:	les    eax,FWORD PTR ds:0xeaf5ae74
  41e8f4:	(bad)  
  41e8f7:	int3   
  41e8f8:	jle    0x41e8cc
  41e8fa:	mov    ds:0xfca12019,eax
  41e8ff:	pop    ss
  41e900:	stos   BYTE PTR es:[edi],al
  41e901:	xlat   BYTE PTR ds:[ebx]
  41e902:	bound  eax,QWORD PTR [eax]
  41e904:	(bad)  
  41e906:	fsubr  st(1),st
  41e908:	and    BYTE PTR [ebp+0x11317c00],al
  41e90e:	in     al,0x3d
  41e910:	add    ah,0x38
  41e913:	add    dl,cl
  41e915:	imul   ecx
  41e917:	inc    edi
  41e918:	jnp    0x41e966
  41e91a:	cmp    al,0xcf
  41e91c:	add    BYTE PTR [ecx],cl
  41e91e:	inc    ebp
  41e91f:	sbb    DWORD PTR [ebx+0x1da94b62],esp
  41e925:	add    dl,dh
  41e927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e928:	adc    eax,0xda97299e
  41e92d:	sbb    eax,DWORD PTR [edi]
  41e92f:	in     al,0x77
  41e931:	sbb    bh,BYTE PTR [ebx-0x79717f86]
  41e937:	gs and dh,al
  41e93a:	mov    cl,0x3
  41e93c:	jbe    0x41e92a
  41e93e:	mov    ecx,0xb05817ac
  41e943:	cwde   
  41e944:	adc    eax,0x9d45011d
  41e949:	xchg   edx,eax
  41e94a:	aaa    
  41e94b:	lea    ebp,[ebp+0x3f]
  41e94e:	cld    
  41e94f:	add    DWORD PTR [ebp-0x7e0e7ec6],ebp
  41e955:	(bad)  [ecx+ebx*4-0x60]
  41e959:	dec    eax
  41e95a:	jg     0x41e94c
  41e95c:	cmp    dh,BYTE PTR [eax]
  41e95e:	push   ds
  41e95f:	stc    
  41e960:	push   es
  41e961:	dec    edx
  41e962:	(bad)  
  41e964:	rcr    BYTE PTR [edx+esi*1-0x3c],0xab
  41e969:	inc    edi
  41e96a:	daa    
  41e96b:	pop    es
  41e96c:	leave  
  41e96d:	or     DWORD PTR [eax+0x3770fe3c],ecx
  41e973:	mov    edi,0xc81c7acd
  41e978:	sub    DWORD PTR [eax+eax*4+0x17],eax
  41e97c:	jecxz  0x41e977
  41e97e:	fcmovnbe st,st(5)
  41e980:	loop   0x41e982
  41e982:	sub    al,0x55
  41e984:	adc    edx,DWORD PTR [ecx+esi*2+0x3]
  41e988:	add    dl,BYTE PTR [edx-0x78b30e00]
  41e98e:	pop    esp
  41e98f:	cmp    esi,esp
  41e991:	jnp    0x41e95e
  41e993:	add    BYTE PTR [edx+0x77],cl
  41e996:	add    al,0xfb
  41e998:	xlat   BYTE PTR ds:[ebx]
  41e999:	ss xor ebp,0x0
  41e99d:	dec    eax
  41e99e:	mov    ah,0xaa
  41e9a0:	jno    0x41e98f
  41e9a2:	push   cs
  41e9a3:	mov    cl,0x69
  41e9a5:	add    BYTE PTR [ebp-0x24b25bfb],dl
  41e9ab:	xchg   ebx,eax
  41e9ac:	and    DWORD PTR [ebx],edi
  41e9ae:	add    BYTE PTR [eax-0x17],dh
  41e9b1:	pop    ecx
  41e9b2:	xchg   esp,eax
  41e9b3:	pop    esp
  41e9b4:	loopne 0x41e987
  41e9b6:	inc    ebp
  41e9b7:	sbb    eax,0x83176ff1
  41e9bc:	leave  
  41e9bd:	cs data16 fdivr st,st(0)
  41e9c1:	jns    0x41e961
  41e9c3:	jnp    0x41e9c6
  41e9c5:	fst    DWORD PTR [ebp+0x7e]
  41e9c8:	xor    DWORD PTR [eax+0x25],0xe2056084
  41e9cf:	add    BYTE PTR [esi+0x3d],ch
  41e9d2:	sub    ch,BYTE PTR [esi]
  41e9d4:	mov    esp,DWORD PTR [ecx]
  41e9d6:	ret    0xe3a
  41e9d9:	and    al,0xe7
  41e9db:	and    ebx,ecx
  41e9dd:	jg     0x41e99f
  41e9df:	mov    ecx,0xf452e4f1
  41e9e4:	add    DWORD PTR [eax],0x3f
  41e9e7:	pop    esp
  41e9e8:	imul   ebp,DWORD PTR [ebx-0x72ce05cd],0x4622e500
  41e9f2:	adc    DWORD PTR [edi+0x3e],ebx
  41e9f5:	dec    esp
  41e9f6:	aaa    
  41e9f7:	add    ah,bl
  41e9f9:	sti    
  41e9fa:	push   ecx
  41e9fb:	data16 adc bh,ah
  41e9fe:	pop    ebx
  41e9ff:	mov    dh,0xe
  41ea01:	mov    esi,0x5e959ad6
  41ea06:	add    BYTE PTR [ecx],ah
  41ea08:	mov    edi,DWORD PTR [eax]
  41ea0a:	test   al,0x3c
  41ea0c:	loopne 0x41ea0e
  41ea0e:	sub    ch,BYTE PTR [ecx+0x23170cf9]
  41ea14:	dec    edx
  41ea15:	jmp    0x69cdfa1a
  41ea1a:	cwde   
  41ea1b:	in     eax,dx
  41ea1c:	in     eax,0x6a
  41ea1e:	ja     0x41ea20
  41ea20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea21:	xor    al,0x9a
  41ea23:	dec    ebp
  41ea24:	dec    esi
  41ea25:	jbe    0x41ea6a
  41ea27:	add    DWORD PTR [eax],0xffffffee
  41ea2a:	cld    
  41ea2b:	stc    
  41ea2c:	das    
  41ea2d:	je     0x41ea47
  41ea2f:	into   
  41ea30:	fld    QWORD PTR [edi]
  41ea32:	push   edx
  41ea33:	inc    ecx
  41ea34:	neg    BYTE PTR [esi+0x611dc0f7]
  41ea3a:	icebp  
  41ea3b:	aas    
  41ea3c:	add    BYTE PTR [ebx+0x1580ea27],dh
  41ea42:	sub    esp,DWORD PTR [esi+0x5e8a0034]
  41ea48:	js     0x41eaa3
  41ea4a:	jne    0x41ea41
  41ea4c:	(bad)  
  41ea4d:	jns    0x41ea4f
  41ea4f:	int    0x57
  41ea51:	je     0x41e9fa
  41ea53:	sbb    eax,DWORD PTR [esi+0x7c035dcf]
  41ea59:	and    edx,DWORD PTR [ecx]
  41ea5b:	mov    eax,ds:0xbbd8849e
  41ea60:	push   ss
  41ea61:	jle    0x41eadd
  41ea63:	test   eax,0xd2255617
  41ea68:	add    BYTE PTR [eax+0x57ebd15f],cl
  41ea6e:	push   0x3570e300
  41ea73:	xchg   DWORD PTR [edi+0x96c3bc],ecx
  41ea79:	inc    ecx
  41ea7a:	and    BYTE PTR [edx],bh
  41ea7c:	xchg   ebp,eax
  41ea7d:	sbb    edx,esp
  41ea7f:	xor    DWORD PTR [esi],edi
  41ea81:	mov    eax,0xc19022
  41ea86:	sub    DWORD PTR [edi-0x4743b2d0],ebp
  41ea8c:	adc    BYTE PTR [ebx],ah
  41ea8e:	add    BYTE PTR [ebp-0x73],dl
  41ea91:	jecxz  0x41ea2c
  41ea93:	inc    eax
  41ea94:	xchg   DWORD PTR [esi+0x63b000d0],esp
  41ea9a:	and    DWORD PTR [ebx+edx*2+0x2a],esp
  41ea9e:	and    eax,0x5a4d0eb6
  41eaa3:	add    ebp,eax
  41eaa5:	mov    ds:0xa8126e8d,eax
  41eaaa:	mov    DWORD PTR [ebp-0x7b],esi
  41eaad:	add    BYTE PTR [esi-0x75b0e1d1],cl
  41eab3:	push   edi
  41eab4:	or     eax,0x317600f6
  41eab9:	sbb    esi,edx
  41eabb:	mov    edx,0x258819
  41eac0:	inc    ebp
  41eac1:	in     al,0x86
  41eac3:	outs   dx,DWORD PTR ds:[esi]
  41eac4:	sbb    al,BYTE PTR [edx]
  41eac6:	or     ebp,DWORD PTR [esi]
  41eac8:	add    dh,ah
  41eaca:	shl    BYTE PTR [esi-0x768e4faa],0x5a
  41ead1:	add    ah,ch
  41ead3:	dec    esi
  41ead4:	and    al,0x4a
  41ead6:	div    ebx
  41ead8:	dec    edi
  41ead9:	mov    ch,0x0
  41eadb:	adc    eax,0x19e5f81c
  41eae0:	cmp    ch,dh
  41eae2:	mov    WORD PTR [edi],es
  41eae4:	jle    0x41eaab
  41eae6:	push   es
  41eae7:	pop    esp
  41eae8:	and    al,0x27
  41eaea:	mov    DWORD PTR [eax-0x54],esp
  41eaed:	fiadd  WORD PTR [eax+0x41]
  41eaf0:	lock je 0x41eaf3
  41eaf3:	or     ch,BYTE PTR [esi+0x66]
  41eaf6:	sub    DWORD PTR [ebx],0x77bb6d9
  41eafc:	xor    ecx,DWORD PTR [esi]
  41eafe:	xchg   ebx,eax
  41eaff:	push   es
  41eb00:	cmp    DWORD PTR [eax-0x5e2d76ad],esi
  41eb06:	add    ch,dh
  41eb08:	pushf  
  41eb09:	and    DWORD PTR [ebp+eiz*8-0x14],0xffffffc0
  41eb0e:	ja     0x41eb10
  41eb10:	adc    eax,0x19467328
  41eb15:	ror    BYTE PTR [edi+0x24400096],1
  41eb1b:	retf   0xcf8b
  41eb1e:	pop    ebx
  41eb1f:	inc    ecx
  41eb20:	icebp  
  41eb21:	add    BYTE PTR [esi+0x694acc50],ah
  41eb27:	in     eax,dx
  41eb28:	push   0xffffffb0
  41eb2a:	repnz push esi
  41eb2c:	add    esi,DWORD PTR [ebp-0x29bc42ec]
  41eb32:	push   esp
  41eb33:	mov    al,ds:0x7bc3e3b
  41eb38:	cwde   
  41eb39:	pop    edi
  41eb3a:	add    DWORD PTR [ebp+edx*8+0x69],edi
  41eb3e:	sbb    BYTE PTR [edx+0x42],0xa9
  41eb42:	jo     0x41eadd
  41eb44:	push   cs
  41eb45:	clc    
  41eb46:	mov    eax,0x38002417
  41eb4b:	imul   edi,DWORD PTR [ecx],0x6a135aed
  41eb51:	push   ds
  41eb52:	add    BYTE PTR [bx+0x5c],bh
  41eb56:	int    0x31
  41eb58:	lock mov al,0x58
  41eb5b:	rcr    DWORD PTR [eax+eax*1],cl
  41eb5e:	and    al,0x20
  41eb60:	sbb    al,cl
  41eb62:	sbb    DWORD PTR ds:0x65ff00bc,0xffffffc6
  41eb69:	loop   0x41eb81
  41eb6b:	jb     0x41eb59
  41eb6d:	push   edi
  41eb6e:	add    BYTE PTR [edx-0x6c8823c7],ah
  41eb74:	or     dh,BYTE PTR [ebx+0x157a4d]
  41eb7a:	nop
  41eb7b:	sub    al,0x5f
  41eb7d:	mov    ah,ah
  41eb7f:	sub    esi,DWORD PTR [esi]
  41eb81:	mov    ah,0x0
  41eb83:	loop   0x41eb90
  41eb85:	add    al,0x45
  41eb87:	ins    DWORD PTR es:[edi],dx
  41eb88:	xchg   esp,eax
  41eb89:	call   0xd5ed:0x906f03fe
  41eb90:	fstp   QWORD PTR [eax-0x60]
  41eb93:	fwait
  41eb94:	xchg   ebp,eax
  41eb95:	jmp    0x1d34f79a
  41eb9a:	sbb    BYTE PTR [edx-0x69],al
  41eb9d:	div    eax
  41eb9f:	add    BYTE PTR [eax+0x6772d854],al
  41eba5:	(bad)  [eax-0x74]
  41eba8:	add    eax,DWORD PTR [esi+0xd]
  41ebab:	xlat   BYTE PTR ds:[ebx]
  41ebac:	adc    cl,bh
  41ebae:	in     al,dx
  41ebaf:	mov    al,ds:0x261e32b6
  41ebb4:	add    al,0x72
  41ebb6:	sbb    DWORD PTR [eax],eax
  41ebb8:	mov    DWORD PTR [edi-0x3d2fcf45],ecx
  41ebbe:	add    ch,cl
  41ebc0:	outs   dx,DWORD PTR ds:[esi]
  41ebc1:	push   0x6d
  41ebc3:	out    dx,al
  41ebc4:	sub    eax,DWORD PTR [ecx-0x69]
  41ebc7:	add    DWORD PTR [esi-0x2e],esp
  41ebca:	pop    es
  41ebcb:	arpl   cx,bp
  41ebcd:	or     dl,BYTE PTR [edx+0x3d0fa4d0]
  41ebd3:	mov    dl,0x15
  41ebd5:	add    ch,ch
  41ebd7:	sbb    al,0x83
  41ebd9:	outs   dx,BYTE PTR ds:[esi]
  41ebda:	add    eax,DWORD PTR [ecx+esi*8]
  41ebdd:	out    dx,al
  41ebde:	mov    esp,0x1eff7400
  41ebe3:	imul   ebp,DWORD PTR [eax-0x31],0x9f74f22f
  41ebea:	pfmin  mm4,mm4
  41ebee:	push   0x64
  41ebf0:	fwait
  41ebf1:	rol    BYTE PTR [eax+0x6451c748],0x0
  41ebf8:	in     al,dx
  41ebf9:	mov    ds:0x29c57f57,eax
  41ebfe:	stos   DWORD PTR es:[edi],eax
  41ebff:	dec    esp
  41ec00:	cmp    DWORD PTR [ecx+0x77],ebx
  41ec03:	xchg   edi,eax
  41ec04:	es iret 
  41ec06:	add    BYTE PTR [esi-0x35],ah
  41ec09:	and    eax,0x183b85
  41ec0e:	pop    es
  41ec0f:	inc    ebx
  41ec10:	or     al,0x49
  41ec12:	or     ebx,ecx
  41ec14:	adc    dl,bh
  41ec16:	add    esp,eax
  41ec18:	mov    esp,0x489319a
  41ec1d:	add    BYTE PTR [edx+0x3e],al
  41ec20:	and    al,0xe3
  41ec22:	leave  
  41ec23:	mov    ds:0x6000e752,al
  41ec28:	gs stos BYTE PTR es:[edi],al
  41ec2a:	inc    BYTE PTR [ebp+0x4826e2a5]
  41ec30:	xor    ecx,ebp
  41ec32:	cmp    al,0x24
  41ec34:	jb     0x41ec36
  41ec36:	add    bh,bh
  41ec38:	test   eax,0x7eef99a
  41ec3d:	sbb    eax,0x25656b00
  41ec42:	add    al,0xe5
  41ec44:	(bad)  
  41ec45:	pop    eax
  41ec46:	mov    ds:0xb9178b0b,al
  41ec4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec4c:	add    dl,bl
  41ec4e:	xor    al,0x83
  41ec50:	pop    esp
  41ec51:	icebp  
  41ec52:	add    BYTE PTR [ebx-0x49],dl
  41ec55:	adc    DWORD PTR [esi+0xa46e2bc],esi
  41ec5b:	add    BYTE PTR [edx+edx*4-0x5aaf4af4],dl
  41ec62:	jb     0x41ec87
  41ec64:	push   cs
  41ec65:	jmp    0xf732:0x20918d25
  41ec6c:	xor    eax,edi
  41ec6e:	push   es
  41ec6f:	add    BYTE PTR [edi+0x4711b27b],bh
  41ec75:	mov    DWORD PTR [eax-0x30],esi
  41ec78:	cmp    esi,DWORD PTR [ebp+edx*8+0x1]
  41ec7c:	scas   al,BYTE PTR es:[edi]
  41ec7d:	mov    fs,WORD PTR [ecx]
  41ec7f:	and    al,0xfe
  41ec81:	lock (bad) 
  41ec83:	sti    
  41ec84:	and    eax,0xe44c3b71
  41ec89:	sbb    al,BYTE PTR [eax]
  41ec8b:	lods   al,BYTE PTR ds:[esi]
  41ec8c:	mov    ebx,0x3c82d788
  41ec91:	mov    eax,DWORD PTR [eax]
  41ec93:	cs dec esp
  41ec95:	repz add DWORD PTR [edx+0x590667],ecx
  41ec9c:	adc    eax,0x681f761e
  41eca1:	call   0x8d0d:0x4a0061ea
  41eca8:	mov    bl,0x2a
  41ecaa:	cwde   
  41ecab:	rcr    BYTE PTR [edi+0x0],cl
  41ecae:	and    BYTE PTR [ecx],ah
  41ecb0:	sub    BYTE PTR [ebp-0x17],dh
  41ecb3:	mov    edi,0x3d00ebad
  41ecb8:	xchg   esi,eax
  41ecb9:	mov    eax,ebp
  41ecbb:	mov    eax,0x431238
  41ecc0:	push   ds
  41ecc1:	aam    0xd6
  41ecc3:	nop
  41ecc4:	shl    DWORD PTR ds:0x1f610284,0x3a
  41eccb:	aas    
  41eccc:	pop    esi
  41eccd:	call   0x13c5302
  41ecd2:	stos   BYTE PTR es:[edi],al
  41ecd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecd4:	loope  0x41ecbd
  41ecd6:	dec    ebx
  41ecd7:	pop    edi
  41ecd8:	shl    BYTE PTR [ecx-0x105fb000],1
  41ecde:	pop    ecx
  41ecdf:	mov    BYTE PTR [ebx-0x25],al
  41ece2:	push   es
  41ece3:	add    esp,ecx
  41ece5:	imul   ebx,DWORD PTR [edx+0x12516ae2],0xe74dfc
  41ecef:	inc    ecx
  41ecf0:	pop    ds
  41ecf1:	aas    
  41ecf2:	push   esi
  41ecf3:	cmp    ebp,DWORD PTR [ebp+0x183814a8]
  41ecf9:	add    eax,DWORD PTR [eax+0x298d589a]
  41ecff:	inc    ebx
  41ed00:	lahf   
  41ed01:	js     0x41ed0a
  41ed03:	mov    edx,0x74d39c28
  41ed08:	loopne 0x41ed57
  41ed0a:	fst    QWORD PTR [esi+0xd]
  41ed0d:	loop   0x41ed6c
  41ed0f:	add    DWORD PTR [ecx],esp
  41ed11:	pop    es
  41ed12:	xor    ch,ah
  41ed14:	sahf   
  41ed15:	add    DWORD PTR [ebx-0x30],0xf30073f6
  41ed1c:	cmp    esp,ecx
  41ed1e:	movaps xmm2,xmm0
  41ed21:	aam    0x2e
  41ed23:	add    bh,BYTE PTR [edx+0x5d7c642f]
  41ed29:	jne    0x41eceb
  41ed2b:	leave  
  41ed2c:	mov    esp,0xa75a000b
  41ed31:	jmp    0x41ed01
  41ed33:	pop    esi
  41ed34:	mov    ebp,0xe91c0ce8
  41ed39:	(bad)
  41ed3c:	mov    cl,0xf2
  41ed3e:	dec    edx
  41ed3f:	jmp    DWORD PTR [ecx-0x66e6ffda]
  41ed45:	ins    DWORD PTR es:[edi],dx
  41ed46:	dec    edi
  41ed47:	icebp  
  41ed48:	jle    0x41eda0
  41ed4a:	std    
  41ed4b:	adc    al,0x3a
  41ed4d:	xchg   ebx,eax
  41ed4e:	loope  0x41ed3d
  41ed50:	pop    ss
  41ed51:	sub    BYTE PTR [esi+0x262bd900],ch
  41ed57:	xor    al,BYTE PTR [eax-0x6a]
  41ed5a:	sbb    eax,0xc0990b4f
  41ed5f:	inc    edi
  41ed60:	retf   0x687f
  41ed63:	xchg   ebp,eax
  41ed64:	inc    ecx
  41ed65:	add    ch,bl
  41ed67:	int    0x3d
  41ed69:	sub    eax,0xce8bf755
  41ed6e:	add    BYTE PTR [ebx],cl
  41ed70:	retf   
  41ed71:	jmp    0x1f488ba7
  41ed76:	adc    al,BYTE PTR [eax]
  41ed78:	adc    BYTE PTR [edi],0x2a
  41ed7b:	jge    0x41ed5f
  41ed7d:	in     al,0x5d
  41ed7f:	dec    ecx
  41ed80:	cmp    ah,BYTE PTR [ecx+0x103769b]
  41ed86:	in     al,dx
  41ed87:	or     dh,BYTE PTR [ecx-0x3b778a24]
  41ed8d:	test   BYTE PTR [ebp+0x3e1eab03],ch
  41ed93:	and    eax,0xf1e0910d
  41ed98:	sahf   
  41ed99:	jle    0x41ede7
  41ed9b:	cmp    bl,BYTE PTR [eax+0x0]
  41ed9e:	hlt    
  41ed9f:	iret   
  41eda0:	or     BYTE PTR [edx],ah
  41eda2:	outs   dx,DWORD PTR ds:[esi]
  41eda3:	push   ds
  41eda4:	rcl    BYTE PTR [esi],0x95
  41eda7:	push   ss
  41eda8:	inc    esp
  41eda9:	or     esi,DWORD PTR [esi-0x50927f3f]
  41edaf:	popf   
  41edb0:	xchg   esi,eax
  41edb1:	lahf   
  41edb2:	pop    es
  41edb3:	cli    
  41edb4:	mov    bl,0x1a
  41edb6:	jl     0x41ed51
  41edb8:	jg     0x41edba
  41edba:	sbb    al,0x17
  41edbc:	repz (bad) 
  41edbe:	fstp   QWORD PTR [esi]
  41edc0:	add    DWORD PTR [edi+0x749e73],esp
  41edc6:	mov    esi,0x7ac8321b
  41edcb:	fisubr DWORD PTR [ebx+ebp*8]
  41edce:	push   ecx
  41edcf:	sbb    al,BYTE PTR [eax]
  41edd1:	(bad)  
  41edd2:	mov    bl,0x39
  41edd4:	ret    0x2b72
  41edd7:	cmp    BYTE PTR [esi+0x1d],bh
  41edda:	je     0x41eddc
  41eddc:	pop    ebx
  41eddd:	mov    ebx,0x53fb615
  41ede2:	das    
  41ede3:	and    al,0x0
  41ede5:	shr    esi,1
  41ede7:	fs lock dec ebx
  41edea:	popf   
  41edeb:	push   0x23
  41eded:	add    BYTE PTR [ebp+ecx*4-0x3],dh
  41edf1:	xor    eax,0xda387a15
  41edf6:	push   es
  41edf7:	add    DWORD PTR [eiz*4-0x745f987],edx
  41edfe:	mov    dh,0x0
  41ee00:	clc    
  41ee01:	je     0x41edbb
  41ee03:	adc    eax,DWORD PTR [eax+esi*4]
  41ee06:	jae    0x41edf4
  41ee08:	add    BYTE PTR [edx],dl
  41ee0a:	test   al,0xa5
  41ee0c:	sahf   
  41ee0d:	ds inc esp
  41ee0f:	pop    esi
  41ee10:	add    BYTE PTR cs:[ebp+0x67bae8b],dl
  41ee17:	lds    ecx,FWORD PTR [eax+0x77]
  41ee1a:	mov    eax,0xb0343abf
  41ee1f:	mov    esi,0x240587e3
  41ee24:	ins    BYTE PTR es:[edi],dx
  41ee25:	cdq    
  41ee26:	adc    BYTE PTR [ebx],cl
  41ee28:	dec    esp
  41ee29:	test   eax,0xe4b4010c
  41ee2e:	(bad)  
  41ee2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee30:	sbb    bl,bh
  41ee32:	imul   eax
  41ee34:	mov    ebp,0xdbcc0083
  41ee39:	imul   esi,DWORD PTR [ecx+0x38],0x2b
  41ee3d:	push   esi
  41ee3e:	repnz add cl,ah
  41ee41:	mov    bl,0x63
  41ee43:	inc    eax
  41ee44:	or     ebp,DWORD PTR [esi-0x2f80e48b]
  41ee4a:	sbb    al,0x9
  41ee4c:	stos   BYTE PTR es:[edi],al
  41ee4d:	repz sar BYTE PTR [eax],0x11
  41ee51:	stos   DWORD PTR es:[edi],eax
  41ee52:	push   edx
  41ee53:	inc    edx
  41ee54:	in     eax,dx
  41ee55:	add    DWORD PTR [edx+0x53788d29],ebx
  41ee5b:	cmp    dl,cl
  41ee5d:	and    BYTE PTR [eiz*4+0x38190e00],dl
  41ee64:	in     al,0x4a
  41ee66:	jmp    0x7d93:0x2f00f89f
  41ee6d:	xchg   edi,eax
  41ee6e:	jnp    0x41ee46
  41ee70:	(bad)  
  41ee71:	aaa    
  41ee72:	nop
  41ee73:	lea    eax,[eax]
  41ee75:	cmp    bh,BYTE PTR [ebx-0x2f03d3e1]
  41ee7b:	jmp    0x41ee90
  41ee7d:	add    BYTE PTR [eax+edx*1+0x7b7186c],bl
  41ee84:	cmp    BYTE PTR [ebx+0x0],bl
  41ee87:	push   eax
  41ee88:	push   edi
  41ee89:	ss dec esp
  41ee8b:	mov    ecx,0xf4f94c0
  41ee90:	add    DWORD PTR [ecx-0x6e],esi
  41ee93:	push   ds
  41ee94:	ror    BYTE PTR [eax],0xdd
  41ee97:	test   DWORD PTR [esi],esp
  41ee99:	lock cmp eax,0xbe80a506
  41ee9f:	in     eax,dx
  41eea0:	ins    BYTE PTR es:[edi],dx
  41eea1:	push   0x54
  41eea3:	dec    ecx
  41eea4:	add    al,0x0
  41eea6:	pop    esi
  41eea7:	cmp    eax,0x902682cc
  41eeac:	cmp    DWORD PTR ds:0xc3e48300,esi
  41eeb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeb3:	out    dx,eax
  41eeb4:	(bad)  
  41eeb5:	sub    al,0x73
  41eeb7:	push   cs
  41eeb8:	popf   
  41eeb9:	push   edi
  41eeba:	cmp    eax,0xd672031
  41eebf:	cmc    
  41eec0:	outs   dx,DWORD PTR ds:[esi]
  41eec1:	imul   esi,DWORD PTR [ebp-0xd],0x0
  41eec5:	in     al,dx
  41eec6:	or     al,0x1f
  41eec8:	pushf  
  41eec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeca:	and    DWORD PTR [ecx-0x5a],esp
  41eecd:	pop    es
  41eece:	in     al,0x51
  41eed0:	xchg   edi,eax
  41eed1:	sbb    eax,0xa0f28076
  41eed6:	mov    ebx,DWORD PTR [edi+0x0]
  41eed9:	and    esi,DWORD PTR [ecx+0x2f]
  41eedc:	fst    DWORD PTR [esi+ebp*8]
  41eedf:	scas   eax,DWORD PTR es:[edi]
  41eee0:	inc    ebx
  41eee1:	add    BYTE PTR [esp+ecx*8+0x61],ch
  41eee5:	test   DWORD PTR [ecx],eax
  41eee7:	sahf   
  41eee8:	push   esp
  41eee9:	sbb    al,0x2
  41eeeb:	(bad)  
  41eeec:	pop    eax
  41eeed:	outs   dx,BYTE PTR ds:[esi]
  41eeee:	mul    DWORD PTR [esi]
  41eef0:	add    al,0x60
  41eef2:	lea    ebx,[ebx]
  41eef4:	test   BYTE PTR [edi-0x56],bh
  41eef7:	add    BYTE PTR [ecx+ecx*2+0x73],cl
  41eefb:	cmp    al,0xa2
  41eefd:	cmp    esp,DWORD PTR [eax-0x40]
  41ef00:	cmp    al,0xa1
  41ef02:	stc    
  41ef03:	adc    ebx,DWORD PTR [ebx+0x78]
  41ef06:	add    BYTE PTR [eax-0x407b15ef],bl
  41ef0c:	mov    eax,0x2a8b4900
  41ef11:	out    0x1,al
  41ef13:	popf   
  41ef14:	push   ebp
  41ef15:	out    dx,eax
  41ef16:	add    DWORD PTR [edi+0x79],edx
  41ef19:	ret    0x750a
  41ef1c:	nop
  41ef1d:	outs   dx,DWORD PTR ds:[esi]
  41ef1e:	in     al,0x21
  41ef20:	push   eax
  41ef21:	add    BYTE PTR [ebx],ch
  41ef23:	push   es
  41ef24:	repz mov ?,WORD PTR [esi]
  41ef27:	int3   
  41ef28:	adc    BYTE PTR ds:0x460fc5b8,bl
  41ef2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef2f:	adc    bl,BYTE PTR [edx]
  41ef31:	pusha  
  41ef32:	arpl   WORD PTR [edx+0x9ce4e8f],cx
  41ef38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef39:	inc    edi
  41ef3a:	pop    ecx
  41ef3b:	cmp    al,BYTE PTR [eax]
  41ef3d:	lods   al,BYTE PTR ds:[esi]
  41ef3e:	mov    ds:0x7b2b7ab0,al
  41ef43:	xor    eax,0x91d24900
  41ef48:	push   es
  41ef49:	inc    ebp
  41ef4a:	mov    dh,0x27
  41ef4c:	cli    
  41ef4d:	add    DWORD PTR [ebp-0x5c178cad],esp
  41ef53:	in     eax,0xcc
  41ef55:	int3   
  41ef56:	sti    
  41ef57:	das    
  41ef58:	add    BYTE PTR [ecx],ah
  41ef5a:	add    eax,0x3aa1c9ea
  41ef5f:	scas   eax,DWORD PTR es:[edi]
  41ef60:	mov    BYTE PTR [eax],0x76
  41ef63:	jno    0x41ef44
  41ef65:	js     0x41eef4
  41ef67:	loop   0x41efbf
  41ef69:	push   eax
  41ef6a:	jne    0x41efc5
  41ef6c:	nop
  41ef6d:	shl    dl,cl
  41ef6f:	stos   DWORD PTR es:[edi],eax
  41ef70:	add    BYTE PTR [edi+0x7ea3f54e],bh
  41ef76:	cld    
  41ef77:	pop    edi
  41ef78:	xchg   edx,eax
  41ef79:	sbb    al,0xb9
  41ef7b:	fadd   QWORD PTR [esp+edx*8-0x67ff637b]
  41ef82:	jns    0x41ef5e
  41ef84:	push   cs
  41ef85:	(bad)  
  41ef86:	and    eax,0xbf96005c
  41ef8b:	add    bh,BYTE PTR [ebp+0x27d152f3]
  41ef91:	add    BYTE PTR [ebx],al
  41ef93:	mov    dl,0x19
  41ef95:	loope  0x41ef38
  41ef97:	adc    eax,0x710e5955
  41ef9c:	aas    
  41ef9d:	mov    al,0xe4
  41ef9f:	out    dx,al
  41efa0:	(bad)  
  41efa1:	add    BYTE PTR [ebx+0x3b],0x81
  41efa5:	aaa    
  41efa6:	sub    al,BYTE PTR [eax]
  41efa8:	xlat   BYTE PTR ds:[ebx]
  41efa9:	or     eax,0x20cc1ca1
  41efae:	bound  eax,QWORD PTR [eax+eax*1+0x41]
  41efb2:	fadd   DWORD PTR es:[esi]
  41efb5:	mov    eax,0xa417ca
  41efba:	(bad)  
  41efbb:	jp     0x41efec
  41efbd:	pop    ecx
  41efbe:	jns    0x41ef84
  41efc0:	push   ebp
  41efc1:	cwde   
  41efc2:	add    BYTE PTR [esi-0x42052bc4],ah
  41efc8:	fsubr  QWORD PTR [ecx]
  41efca:	fdivr  DWORD PTR [esi]
  41efcc:	int3   
  41efcd:	dec    ecx
  41efce:	push   cs
  41efcf:	out    0x5,al
  41efd1:	xchg   DWORD PTR [eax],eax
  41efd3:	(bad)  
  41efd4:	jp     0x41ef7c
  41efd6:	stos   DWORD PTR es:[edi],eax
  41efd7:	push   cs
  41efd8:	add    BYTE PTR [edi+0x466b10ad],cl
  41efde:	ins    DWORD PTR es:[edi],dx
  41efdf:	mov    edi,DWORD PTR [eax+eax*1]
  41efe2:	dec    eax
  41efe3:	jnp    0x41ef87
  41efe5:	sub    DWORD PTR [ecx],0xffffffb7
  41efe8:	enter  0x73e7,0xed
  41efec:	push   eax
  41efed:	inc    ebx
  41efee:	lods   eax,DWORD PTR ds:[esi]
  41efef:	dec    esi
  41eff0:	add    BYTE PTR ds:0x8a044266,dl
  41eff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eff7:	mov    ebp,ss
  41eff9:	add    BYTE PTR [esi],dh
  41effb:	or     al,0xce
  41effd:	jp     0x41f06e
  41efff:	std    
  41f000:	lds    ebp,FWORD PTR ds:0x922f510e
  41f006:	cmc    
  41f007:	imul   esi,eax,0xffffff80
  41f00a:	fcomp  QWORD PTR [edx-0x22]
  41f00d:	mov    dl,BYTE PTR [eax+0x61067f03]
  41f013:	popf   
  41f014:	ftst   
  41f016:	lock mov edx,DWORD PTR gs:[eax+eax*1+0x17ed76aa]
  41f01f:	or     ch,0x8d
  41f022:	mov    al,BYTE PTR [edx]
  41f024:	pop    esi
  41f025:	cmp    eax,edx
  41f027:	lock pop ebp
  41f029:	mov    ah,0x80
  41f02b:	pushf  
  41f02c:	add    bl,BYTE PTR [eax+0x7a0f3aeb]
  41f032:	ss inc ebp
  41f034:	mov    ecx,0x489e44ab
  41f03a:	xor    BYTE PTR [esi-0x41],dl
  41f03d:	add    bl,al
  41f03f:	and    ah,BYTE PTR [esi-0x725fcd6e]
  41f045:	mov    DWORD PTR [eax],0xf8c4c66d
  41f04b:	jp     0x41eff0
  41f04d:	dec    esi
  41f04e:	xor    eax,0x11a90103
  41f053:	dec    esp
  41f054:	push   es
  41f055:	cmp    BYTE PTR [eax+0xedf9b1],ch
  41f05b:	test   DWORD PTR es:[edi-0x34c105d6],ebp
  41f062:	and    al,BYTE PTR [eax]
  41f064:	push   0xf757468f
  41f069:	sub    DWORD PTR [eax],ecx
  41f06b:	inc    BYTE PTR [eax]
  41f06d:	xchg   edx,eax
  41f06e:	sbb    eax,DWORD PTR [ebp+0x33]
  41f071:	sub    bl,BYTE PTR [edi+0x3a]
  41f074:	gs cmp al,0x6c
  41f077:	std    
  41f078:	aas    
  41f079:	adc    eax,0x3780e6be
  41f07e:	inc    esi
  41f07f:	push   0x7daed5dd
  41f084:	add    BYTE PTR [edx-0x6ecb0b17],bh
  41f08a:	pop    es
  41f08b:	xor    BYTE PTR [eax+0x0],dh
  41f08e:	jno    0x41f0e3
  41f090:	jbe    0x41f025
  41f092:	lock push 0xffffffed
  41f095:	popf   
  41f096:	pop    eax
  41f097:	mov    edx,0x353d0096
  41f09c:	sahf   
  41f09d:	cmp    esp,DWORD PTR [edx-0x19]
  41f0a0:	pop    ds
  41f0a1:	add    BYTE PTR [esi],bh
  41f0a3:	sub    eax,0xdb49dfe5
  41f0a8:	mov    edi,0xc6ca2e84
  41f0ad:	xor    al,BYTE PTR [eax]
  41f0af:	xchg   esp,eax
  41f0b0:	outs   dx,BYTE PTR ds:[esi]
  41f0b1:	or     DWORD PTR [ecx-0x6afd33fd],edi
  41f0b7:	popf   
  41f0b8:	addr16 inc ebp
  41f0ba:	cwde   
  41f0bb:	xchg   ecx,eax
  41f0bc:	add    esp,0xd
  41f0bf:	clc    
  41f0c0:	mov    eax,0x444b49
  41f0c5:	shr    DWORD PTR [edx+edx*1+0x3],1
  41f0c9:	lock mov ecx,0x340e6a9a
  41f0cf:	sahf   
  41f0d0:	and    BYTE PTR [ebx-0x415ff8a0],al
  41f0d6:	mov    bl,BYTE PTR [ebx+0x0]
  41f0d9:	jo     0x41f096
  41f0db:	add    dh,BYTE PTR [ecx]
  41f0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0de:	lods   ax,WORD PTR ds:[esi]
  41f0e0:	cmp    eax,0xd19a3900
  41f0e5:	or     bh,bh
  41f0e7:	test   DWORD PTR [ecx-0xfb4fff3],ecx
  41f0ed:	das    
  41f0ee:	cmp    esp,DWORD PTR [edi-0x71]
  41f0f1:	pop    ebp
  41f0f2:	jbe    0x41f0f4
  41f0f4:	push   edi
  41f0f5:	push   eax
  41f0f6:	and    eax,0x245c1bac
  41f0fb:	push   ds
  41f0fc:	or     DWORD PTR [ebx-0x7fa0324e],esp
  41f102:	inc    ebp
  41f103:	mov    bl,bl
  41f105:	or     ecx,DWORD PTR [eax+0x0]
  41f108:	mov    dh,0x8e
  41f10a:	aam    0xae
  41f10c:	adc    bh,BYTE PTR ds:0x280347b1
  41f112:	xchg   ebx,eax
  41f113:	cwde   
  41f114:	add    al,0x25
  41f116:	jb     0x41f0c8
  41f118:	pop    es
  41f119:	call   0x696d0e15
  41f11e:	shl    BYTE PTR cs:[edx],0x3b
  41f122:	rcl    BYTE PTR [ecx-0x5],cl
  41f125:	mov    al,ds:0xf0397a00
  41f12a:	mov    ah,BYTE PTR [ecx-0x5d]
  41f12d:	add    DWORD PTR [eax+eax*1-0x1ddb9ba6],ebp
  41f134:	mov    ds,ebp
  41f136:	into   
  41f137:	mov    dh,0x0
  41f139:	inc    edx
  41f13a:	cdq    
  41f13b:	inc    esp
  41f13c:	dec    esp
  41f13d:	cmc    
  41f13e:	or     BYTE PTR [edx],al
  41f140:	jbe    0x41f15e
  41f142:	enter  0xe841,0x40
  41f146:	sti    
  41f147:	mov    ch,0x7d
  41f149:	xchg   DWORD PTR [esi-0x509ff6b],eax
  41f14f:	push   0x21
  41f151:	fmul   DWORD PTR [edi-0x51e0d20e]
  41f157:	test   dh,dl
  41f159:	outs   dx,BYTE PTR ds:[esi]
  41f15a:	nop
  41f15b:	sbb    al,0xd2
  41f15d:	ret    0xc766
  41f160:	cld    
  41f161:	aam    0xe0
  41f163:	and    eax,DWORD PTR [ebx+0x2dc458dc]
  41f169:	sbb    al,0xd9
  41f16b:	nop
  41f16c:	xor    BYTE PTR [eax+0x19],0xd0
  41f170:	(bad)  
  41f172:	icebp  
  41f173:	add    ebp,ecx
  41f175:	or     ebp,DWORD PTR [edi]
  41f177:	sub    ah,BYTE PTR [esi]
  41f179:	out    dx,eax
  41f17a:	mov    al,ds:0x865328
  41f17f:	mov    bl,0x49
  41f181:	call   0x7e:0x1f9bfef3
  41f188:	dec    ebx
  41f189:	jmp    DWORD PTR [eax-0x67]
  41f18c:	fcom   DWORD PTR [ecx+ebx*2+0x1c8008f]
  41f193:	mul    ch
  41f195:	push   edi
  41f196:	repz es xchg ebx,eax
  41f199:	add    BYTE PTR [ebx],al
  41f19b:	or     DWORD PTR [eax-0x3],ebp
  41f19e:	mov    ebx,0x798d0b
  41f1a3:	(bad)
  41f1a6:	xor    ebp,DWORD PTR [edx-0x17fecf9c]
  41f1ac:	mov    edx,0xdc024200
  41f1b1:	mov    eax,ds:0x3df77531
  41f1b6:	add    BYTE PTR [ebp-0x7a],ah
  41f1b9:	xor    ebx,DWORD PTR [esp+ebp*1+0x3978b17c]
  41f1c0:	popa   
  41f1c1:	ror    DWORD PTR [esi+0x2048a40e],0x6e
  41f1c8:	pop    ebx
  41f1c9:	dec    ebp
  41f1ca:	dec    esi
  41f1cb:	inc    ecx
  41f1cc:	add    BYTE PTR [edi-0x3e],dh
  41f1cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1d0:	test   eax,0x9162f076
  41f1d5:	add    BYTE PTR [ebx+0x1da2395e],ch
  41f1db:	and    DWORD PTR [eax+0x487b00e6],esp
  41f1e1:	or     al,0x22
  41f1e3:	inc    eax
  41f1e4:	pop    DWORD PTR [edi-0x5ec2ff3a]
  41f1ea:	mov    ecx,0x98cdd404
  41f1ef:	sub    al,BYTE PTR [ebx]
  41f1f1:	xchg   edi,eax
  41f1f2:	mov    cl,0xa3
  41f1f4:	fisttp DWORD PTR [eax+edi*4-0x69d97b10]
  41f1fb:	add    BYTE PTR [eax-0x72],bh
  41f1fe:	mov    ebx,0xe21b4a35
  41f203:	sub    al,BYTE PTR ds:0x950bad08
  41f209:	add    BYTE PTR cs:[ebp-0x730ec408],dh
  41f210:	pop    edx
  41f211:	add    BYTE PTR [ebx+0x72],bh
  41f214:	add    eax,0xbb76929d
  41f219:	fadd   DWORD PTR [eax]
  41f21b:	mov    BYTE PTR [esi+esi*8-0x691085d7],dh
  41f222:	cmp    eax,0x62be6100
  41f227:	mov    cs,WORD PTR gs:[edx-0x5b]
  41f22b:	(bad)  
  41f22c:	loopne 0x41f2a7
  41f22e:	add    esp,DWORD PTR [edi+eiz*8-0x488e0b4d]
  41f235:	lock stos BYTE PTR es:[edi],al
  41f237:	jp     0x41f234
  41f239:	add    BYTE PTR [ebx],ch
  41f23b:	push   cs
  41f23c:	mov    ebx,0x4634494d
  41f241:	fdivr  DWORD PTR [ebx+0x2c]
  41f244:	push   es
  41f245:	ret    
  41f246:	jbe    0x41f270
  41f248:	mov    esi,0x19007802
  41f24d:	jmp    0xc1e87f44
  41f252:	int3   
  41f253:	cmp    DWORD PTR ds:0xf68050e8,edi
  41f259:	fld    DWORD PTR ds:0x5737bc0e
  41f25f:	add    BYTE PTR [edx-0x68734957],ah
  41f265:	and    BYTE PTR [edi],ch
  41f267:	xchg   ebp,eax
  41f268:	add    bh,bl
  41f26a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f26b:	lock neg BYTE PTR [ebx-0x30]
  41f26f:	add    ebx,ebx
  41f271:	pop    ds
  41f272:	jmp    0x5579:0x3180c751
  41f279:	aas    
  41f27a:	les    edi,FWORD PTR [ecx+0x5081fd00]
  41f280:	add    eax,DWORD PTR [ecx]
  41f282:	xlat   BYTE PTR ds:[ebx]
  41f283:	pop    ecx
  41f284:	sbb    al,0xe
  41f286:	cmp    ah,BYTE PTR [edi+esi*4]
  41f289:	cld    
  41f28a:	inc    eax
  41f28b:	sub    al,0xc
  41f28d:	jle    0x41f21d
  41f28f:	stos   DWORD PTR es:[edi],eax
  41f290:	add    BYTE PTR [edi+0x6a],cl
  41f293:	outs   dx,BYTE PTR ds:[esi]
  41f294:	fwait
  41f295:	(bad)  
  41f296:	adc    DWORD PTR [edi],edi
  41f298:	fld    DWORD PTR [eax]
  41f29a:	adc    DWORD PTR [edx],0x4774b784
  41f2a0:	adc    eax,0x2c5f002b
  41f2a5:	aaa    
  41f2a6:	es mov ah,ch
  41f2a9:	mov    esp,0x5cb20040
  41f2ae:	push   ecx
  41f2af:	fs jns 0x41f2a0
  41f2b2:	jg     0x41f29b
  41f2b4:	add    DWORD PTR [edx+0x5d69753d],ebp
  41f2ba:	add    esp,ebp
  41f2bc:	pusha  
  41f2bd:	mov    ebx,0xa20a501a
  41f2c2:	mov    bh,0x0
  41f2c4:	shr    BYTE PTR [ebx-0x2a],0xa7
  41f2c8:	dec    esi
  41f2c9:	gs daa 
  41f2cb:	loop   0x41f2ce
  41f2cd:	popf   
  41f2ce:	(bad)  
  41f2cf:	push   0x45
  41f2d1:	pop    es
  41f2d2:	in     eax,dx
  41f2d3:	(bad)  
  41f2d4:	int    0xe1
  41f2d6:	ror    DWORD PTR [eax-0xc],1
  41f2d9:	or     al,0xf7
  41f2db:	add    BYTE PTR [esi-0x74],ah
  41f2de:	mov    al,ds:0x233b04ac
  41f2e3:	fadd   QWORD PTR [eax]
  41f2e5:	xchg   ecx,eax
  41f2e6:	das    
  41f2e7:	inc    ebx
  41f2e8:	cmp    bl,BYTE PTR [ebx+0x1e55b34b]
  41f2ee:	nop
  41f2ef:	imul   eax,DWORD PTR [edx],0xda34803b
  41f2f5:	xchg   ebx,eax
  41f2f6:	aaa    
  41f2f7:	repnz push 0x5
  41f2fa:	add    ah,ah
  41f2fc:	imul   BYTE PTR [eax+0x256c7cca]
  41f302:	rol    BYTE PTR [eax],1
  41f304:	jg     0x41f333
  41f306:	dec    ebx
  41f307:	mov    dl,0x97
  41f309:	sub    BYTE PTR [ecx],ah
  41f30b:	int3   
  41f30c:	adc    ch,ch
  41f30e:	cli    
  41f30f:	xor    al,0x0
  41f311:	(bad)  
  41f312:	call   DWORD PTR [ecx-0x47]
  41f315:	ins    BYTE PTR es:[edi],dx
  41f316:	repz add cl,al
  41f319:	aas    
  41f31a:	das    
  41f31b:	call   0xc989eb8a
  41f320:	es cld 
  41f322:	push   ebx
  41f323:	jo     0x41f325
  41f325:	loopne 0x41f2dd
  41f327:	sub    dh,ch
  41f329:	jge    0x41f39f
  41f32b:	add    BYTE PTR [esi-0x7e],dl
  41f32e:	add    al,BYTE PTR [esi-0x56]
  41f331:	push   ecx
  41f332:	lds    esi,FWORD PTR [ecx]
  41f334:	pop    es
  41f335:	mul    DWORD PTR [eax]
  41f337:	in     eax,dx
  41f338:	ret    0x1078
  41f33b:	into   
  41f33c:	dec    ebp
  41f33d:	cmc    
  41f33e:	adc    BYTE PTR [ebp-0x54],bh
  41f341:	nop
  41f342:	lock add ah,ah
  41f345:	add    ebx,esp
  41f347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f348:	sub    al,0x18
  41f34a:	pop    edx
  41f34b:	xchg   ebx,eax
  41f34c:	repnz mov eax,ds:0x10e5110c
  41f352:	bound  edi,QWORD PTR [edi+esi*4-0x23569200]
  41f359:	pop    eax
  41f35a:	mov    al,0xd2
  41f35c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f35d:	lahf   
  41f35e:	mov    eax,0x5cc200bc
  41f363:	(bad)  
  41f364:	(bad)  
  41f365:	sbb    DWORD PTR [edi],esi
  41f367:	retf   
  41f368:	push   ss
  41f369:	add    BYTE PTR [esi+ebx*1-0x32486a89],dl
  41f370:	out    dx,al
  41f371:	mov    esi,0x3068b403
  41f376:	frstor [ecx]
  41f378:	ins    BYTE PTR es:[edi],dx
  41f379:	call   0x103de56e
  41f37e:	sub    DWORD PTR [ecx+0x75],ecx
  41f381:	popf   
  41f382:	inc    eax
  41f383:	mov    ecx,0x3462a573
  41f388:	stc    
  41f389:	xor    BYTE PTR [eax],dl
  41f38b:	push   0x56eb7600
  41f390:	ret    0xb3c8
  41f393:	sub    al,BYTE PTR ss:[eax]
  41f396:	daa    
  41f397:	jnp    0x41f398
  41f399:	xchg   ebx,eax
  41f39a:	or     DWORD PTR [eax+ebx*8],edi
  41f39d:	std    
  41f39e:	push   es
  41f39f:	cmp    eax,0x13b2b8c6
  41f3a4:	out    0xc0,al
  41f3a6:	loop   0x41f3a3
  41f3a8:	mov    cl,0x61
  41f3aa:	adc    BYTE PTR [eax+0x0],bh
  41f3ad:	mov    eax,DWORD PTR [esi+0x624caf48]
  41f3b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3b4:	add    al,0x0
  41f3b6:	stc    
  41f3b7:	pop    esp
  41f3b8:	jns    0x41f3c0
  41f3ba:	hlt    
  41f3bb:	xchg   edx,esi
  41f3bd:	loop   0x41f3bf
  41f3bf:	mov    esp,0x4102a801
  41f3c4:	and    al,0x51
  41f3c6:	mov    cl,0x0
  41f3c8:	lds    edx,FWORD PTR [ebx]
  41f3ca:	xchg   ebx,eax
  41f3cb:	jmp    0xc600:0x49c4e033
  41f3d2:	jmp    0x41f3b3
  41f3d4:	pop    esp
  41f3d5:	jnp    0x41f3a8
  41f3d7:	repnz mov al,BYTE PTR [ecx]
  41f3da:	xchg   ebp,eax
  41f3db:	push   ecx
  41f3dc:	ror    DWORD PTR [esi],cl
  41f3de:	cmc    
  41f3df:	in     al,0xd7
  41f3e1:	int3   
  41f3e2:	sub    al,BYTE PTR [bx+si]
  41f3e5:	ret    0xa553
  41f3e8:	imul   esi,DWORD PTR [eax+0x9d99af],0xfce75480
  41f3f2:	xor    al,0xa8
  41f3f4:	cmc    
  41f3f5:	and    eax,0x553c3800
  41f3fa:	in     eax,dx
  41f3fb:	jae    0x41f386
  41f3fd:	test   DWORD PTR [eax+0x0],esp
  41f400:	out    dx,al
  41f401:	pop    ss
  41f402:	xor    DWORD PTR [ebx+0x49628c5e],edi
  41f408:	add    BYTE PTR [edx-0x7d4fd425],ch
  41f40e:	mov    eax,0x8b3f2f13
  41f413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f414:	sbb    DWORD PTR [ecx+esi*2+0x72],0x4a
  41f419:	xor    ebp,eax
  41f41b:	jg     0x41f3cf
  41f41d:	cmp    eax,0xe1237a00
  41f422:	push   esi
  41f423:	push   ecx
  41f424:	cmc    
  41f425:	aam    0xcc
  41f427:	add    BYTE PTR [ebx+0x7740e3f8],bh
  41f42d:	arpl   WORD PTR ds:0x14ea7c,dx
  41f433:	fdivr  QWORD PTR [esi-0x59]
  41f436:	inc    esi
  41f437:	sub    ebp,DWORD PTR [edx]
  41f439:	das    
  41f43a:	pop    edi
  41f43b:	add    BYTE PTR [esi+ebx*2],bh
  41f43e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f43f:	xchg   esi,eax
  41f440:	or     ch,BYTE PTR [esi]
  41f442:	js     0x41f43e
  41f444:	add    BYTE PTR [edi+0x5731ab5d],dh
  41f44a:	mov    ds:0x6c50c079,eax
  41f44f:	pushf  
  41f450:	addr16 add bl,ch
  41f453:	sub    dx,0x49
  41f457:	shl    BYTE PTR [ebp+0xc1a002a],1
  41f45d:	jecxz  0x41f487
  41f45f:	pop    ss
  41f460:	dec    ebx
  41f461:	push   edx
  41f462:	int3   
  41f463:	add    eax,0xee1b450f
  41f468:	mov    dh,0x80
  41f46a:	inc    esp
  41f46b:	adc    al,0xf4
  41f46d:	xor    DWORD PTR [ebx],edi
  41f46f:	(bad)  
  41f470:	inc    BYTE PTR [edi-0x1400e886]
  41f476:	repnz out 0x50,eax
  41f479:	and    bh,0x30
  41f47c:	mov    bl,0x8e
  41f47e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f47f:	and    al,0x6
  41f481:	test   al,0x11
  41f483:	add    bh,BYTE PTR [ebp-0x3f7a8566]
  41f489:	retf   0x33d2
  41f48c:	add    DWORD PTR [eax+0x6a],edx
  41f48f:	cmp    eax,DWORD PTR [edx-0x7c]
  41f492:	and    bh,dh
  41f494:	in     al,0x58
  41f496:	jo     0x41f4ff
  41f498:	dec    ecx
  41f499:	mov    eax,0xb44ea0f9
  41f49e:	stos   DWORD PTR es:[edi],eax
  41f49f:	mov    esi,0x2d09d800
  41f4a4:	sbb    al,0x69
  41f4a6:	xor    bl,BYTE PTR [esi+ebp*2+0x12]
  41f4aa:	pop    edi
  41f4ab:	sar    BYTE PTR [esi],0x0
  41f4ae:	dec    ecx
  41f4af:	xchg   ebx,eax
  41f4b0:	pushf  
  41f4b1:	and    al,0x84
  41f4b3:	sbb    eax,DWORD PTR [eax]
  41f4b5:	pop    esi
  41f4b6:	sbb    DWORD PTR [ebp-0x7],eax
  41f4b9:	aaa    
  41f4ba:	xchg   ebp,edx
  41f4bc:	(bad)
  41f4c0:	cmp    eax,0xceb1807f
  41f4c5:	mov    ds:0x9f077a43,al
  41f4ca:	jmp    0xc06f8a73
  41f4cf:	not    DWORD PTR [ebp+ebx*8+0x34b7d90]
  41f4d6:	cmp    DWORD PTR [edx],ecx
  41f4d8:	test   al,0x86
  41f4da:	jmp    0xe44e:0xee45e879
  41f4e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4e2:	add    eax,DWORD PTR [edi+0x29c3a1ab]
  41f4e8:	xor    eax,0xd71f9dd0
  41f4ed:	add    BYTE PTR [edi+0x3cd2c059],ch
  41f4f3:	leave  
  41f4f4:	in     eax,dx
  41f4f5:	add    DWORD PTR [ebx],0xffffffd0
  41f4f8:	(bad)  
  41f4f9:	or     ah,BYTE PTR [esi]
  41f4fb:	ret    0x984c
  41f4fe:	jo     0x41f4df
  41f500:	scas   al,BYTE PTR es:[edi]
  41f501:	ja     0x41f4af
  41f503:	rdpmc  
  41f505:	dec    ebp
  41f506:	sbb    al,bh
  41f508:	add    BYTE PTR [edi],cl
  41f50a:	inc    esp
  41f50b:	push   edx
  41f50c:	(bad)  
  41f50d:	xchg   edi,eax
  41f50e:	(bad)  
  41f50f:	mov    ds:0x2b80b800,al
  41f514:	daa    
  41f515:	pop    esi
  41f516:	xchg   ebp,eax
  41f517:	jne    0x41f4dd
  41f519:	add    DWORD PTR [eax-0x21c47a8c],esi
  41f51f:	repz das 
  41f521:	int3   
  41f522:	jge    0x41f544
  41f524:	add    BYTE PTR [esp+eax*2-0x8],bl
  41f528:	or     al,0xe9
  41f52a:	mov    edx,0xfb006de4
  41f52f:	je     0x41f50d
  41f531:	in     eax,0x34
  41f533:	cmp    BYTE PTR [ecx-0x647eff48],ah
  41f539:	das    
  41f53a:	and    eax,esi
  41f53c:	clc    
  41f53d:	jb     0x41f530
  41f53f:	pop    ds
  41f540:	jle    0x41f4e6
  41f542:	add    BYTE PTR [edi],0xb3
  41f545:	fnstenv [eax+0x52942a90]
  41f54b:	pop    ebp
  41f54c:	add    BYTE PTR [edi+ebp*4],dl
  41f54f:	xchg   dh,cl
  41f551:	fwait
  41f552:	push   edi
  41f553:	cmp    BYTE PTR [edx],al
  41f555:	sbb    eax,0x5fc8eb1b
  41f55a:	sbb    al,0x81
  41f55c:	retf   0x22b7
  41f55f:	push   cs
  41f560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f561:	in     al,0x6f
  41f563:	add    BYTE PTR fs:[edi-0x4019ce87],ch
  41f56a:	sar    DWORD PTR [esi-0x79],1
  41f56d:	add    BYTE PTR [ecx],ah
  41f56f:	hlt    
  41f570:	xor    bl,BYTE PTR [esi]
  41f572:	push   edi
  41f573:	es pusha 
  41f575:	in     al,dx
  41f576:	add    BYTE PTR [edi+ebp*4+0x57d4227],dl
  41f57d:	in     eax,0xc0
  41f57f:	add    BYTE PTR [ecx],dh
  41f581:	jmp    0x41f552
  41f583:	lods   eax,DWORD PTR ds:[esi]
  41f584:	les    esi,FWORD PTR [esi-0x48c6684d]
  41f58a:	and    DWORD PTR [edi+0x35d30b25],eax
  41f590:	iret   
  41f591:	add    BYTE PTR [edx-0x73],ch
  41f594:	loope  0x41f573
  41f596:	je     0x41f598
  41f598:	xchg   esi,eax
  41f599:	sub    al,BYTE PTR [ebx]
  41f59b:	sti    
  41f59c:	not    DWORD PTR [edx+esi*1]
  41f59f:	inc    eax
  41f5a0:	cmp    DWORD PTR [eax+0x5d],ecx
  41f5a3:	mov    DWORD PTR [ecx],ecx
  41f5a5:	xchg   ebp,eax
  41f5a6:	push   ebp
  41f5a7:	add    BYTE PTR ds:0x411df2b9,al
  41f5ad:	add    bh,dh
  41f5af:	pusha  
  41f5b0:	ja     0x41f5ff
  41f5b2:	pop    esp
  41f5b3:	jle    0x41f5cf
  41f5b5:	mov    BYTE PTR [edi],al
  41f5b7:	aaa    
  41f5b8:	cmp    BYTE PTR [esi+0x4610fbc9],ch
  41f5be:	stc    
  41f5bf:	adc    al,0x7c
  41f5c1:	add    BYTE PTR [ecx+0x57],cl
  41f5c4:	sbb    al,0x6d
  41f5c6:	mov    bl,0xa8
  41f5c8:	loope  0x41f635
  41f5ca:	add    BYTE PTR [ebp+0x29],bh
  41f5cd:	mov    al,0xa7
  41f5cf:	push   es
  41f5d0:	adc    ebp,DWORD PTR [eax-0x51]
  41f5d3:	add    BYTE PTR ds:0x71fc2ffd,cl
  41f5d9:	sbb    eax,0x90001aa3
  41f5de:	mov    WORD PTR [eax-0x469e0fcc],es
  41f5e4:	jmp    0x41f657
  41f5e6:	daa    
  41f5e7:	add    BYTE PTR [eax+0x11],bl
  41f5ea:	and    edx,DWORD PTR [edx+0x2e4fbdc3]
  41f5f0:	add    BYTE PTR [edx+0x5bbe85fd],cl
  41f5f6:	lahf   
  41f5f7:	aad    0x18
  41f5f9:	add    ch,bl
  41f5fb:	stc    
  41f5fc:	dec    edx
  41f5fd:	xlat   BYTE PTR ds:[ebx]
  41f5fe:	loopne 0x41f614
  41f600:	shl    bh,0x15
  41f603:	leave  
  41f604:	add    BYTE PTR [esi-0x3a],bl
  41f607:	lods   al,BYTE PTR ds:[esi]
  41f608:	ds inc edx
  41f60a:	sbb    BYTE PTR [ebp+edi*2+0x8b33c00],ah
  41f611:	mov    esp,DWORD PTR [ebx-0x63]
  41f614:	sbb    eax,0x99c2011b
  41f619:	jo     0x41f693
  41f61b:	pusha  
  41f61c:	xor    ah,bh
  41f61e:	fdiv   st(5),st
  41f620:	in     eax,0xb
  41f622:	enter  0xc430,0xa2
  41f626:	add    esi,ecx
  41f628:	test   eax,0x2bf05eec
  41f62d:	xlat   BYTE PTR ds:[ebx]
  41f62e:	cs pushf 
  41f630:	mov    eax,ds:0xbd4e00ea
  41f635:	mov    edx,0xb37790
  41f63a:	mov    ah,0xfc
  41f63c:	rol    DWORD PTR [edi],cl
  41f63e:	repz cmc 
  41f640:	ret    
  41f641:	out    0x90,eax
  41f643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f644:	sbb    al,0x29
  41f646:	pop    ebx
  41f647:	mov    WORD PTR [ebp+0xea58444],ds
  41f64d:	and    DWORD PTR [eax+0x27f085cc],eax
  41f653:	add    BYTE PTR [esi+0x3],ch
  41f656:	icebp  
  41f657:	mov    esp,0x91bfc5b5
  41f65c:	in     al,dx
  41f65d:	cwde   
  41f65e:	add    BYTE PTR [ebp+0x2d],al
  41f661:	imul   edi,DWORD PTR [edi+0xc],0x35756d
  41f668:	mov    WORD PTR [eax],cs
  41f66a:	sub    edi,DWORD PTR [ecx-0x1c02b00a]
  41f670:	nop
  41f671:	push   cs
  41f672:	add    BYTE PTR [ebx-0x58a1af43],dh
  41f678:	and    al,0xd4
  41f67a:	inc    BYTE PTR [eax]
  41f67c:	add    DWORD PTR [esi-0x21ac9006],0xc008cd1
  41f686:	xchg   ecx,eax
  41f687:	mov    ds:0x84aa4e8b,eax
  41f68c:	int    0x0
  41f68e:	mov    al,BYTE PTR [edi]
  41f690:	sub    eax,0x342a777c
  41f695:	std    
  41f696:	add    BYTE PTR [ebp+edi*2+0x71],dh
  41f69a:	mov    eax,0x17d7ed5e
  41f69f:	add    BYTE PTR [edx],bh
  41f6a1:	xor    DWORD PTR [ebx+0x5d9c5f86],esp
  41f6a7:	arpl   WORD PTR [esi],bp
  41f6a9:	les    eax,FWORD PTR [ecx]
  41f6ab:	cmc    
  41f6ac:	add    BYTE PTR [ebp+0x1d679159],dh
  41f6b2:	push   ds
  41f6b3:	cmp    al,0x43
  41f6b5:	cmp    eax,0x9258bb80
  41f6ba:	fstp   st(7)
  41f6bc:	jp     0x41f6a6
  41f6be:	add    BYTE PTR [edi],cl
  41f6c0:	adc    BYTE PTR [esi+0x4c],dh
  41f6c3:	cmp    bl,BYTE PTR [eax]
  41f6c5:	sub    cl,BYTE PTR [ebp-0x58ec27f2]
  41f6cb:	je     0x41f66e
  41f6cd:	and    al,0x81
  41f6cf:	rol    BYTE PTR [ebp+0x6e75e0],1
  41f6d5:	rol    BYTE PTR [edx+0x5],0x22
  41f6d9:	fistp  DWORD PTR [ebx]
  41f6db:	outs   dx,DWORD PTR ds:[esi]
  41f6dc:	push   esp
  41f6dd:	pop    esp
  41f6de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6df:	push   ecx
  41f6e0:	add    ebx,ebp
  41f6e2:	pop    edi
  41f6e3:	mov    cl,0x41
  41f6e5:	push   ebp
  41f6e6:	mov    BYTE PTR [ebx-0x64ffd31e],ch
  41f6ec:	cmp    BYTE PTR [esi+0x5f91670],cl
  41f6f2:	xchg   ebp,eax
  41f6f3:	pop    es
  41f6f4:	mov    DWORD PTR [eax-0x7feb0547],eax
  41f6fa:	push   es
  41f6fb:	add    bh,BYTE PTR [esi-0x4bf5fead]
  41f701:	not    DWORD PTR gs:[eax-0x71]
  41f705:	lahf   
  41f706:	pusha  
  41f707:	pushf  
  41f708:	add    BYTE PTR [eax],0x4d
  41f70b:	pop    ebp
  41f70c:	sar    DWORD PTR [edx-0x1b],cl
  41f70f:	cmp    DWORD PTR [eax],0xafdb0039
  41f715:	enter  0xc4b7,0xf6
  41f719:	(bad)  
  41f71a:	jmp    0xf165:0x661c5e72
  41f721:	add    BYTE PTR [edx-0x50],bl
  41f724:	adc    ah,dh
  41f726:	xchg   DWORD PTR [ecx+0x0],edi
  41f729:	cmp    DWORD PTR [eax],0x47
  41f72c:	xlat   BYTE PTR ds:[ebx]
  41f72d:	clc    
  41f72e:	jbe    0x41f77f
  41f730:	inc    esp
  41f731:	add    bl,bl
  41f733:	pop    eax
  41f734:	test   eax,0x988ce0f5
  41f739:	into   
  41f73a:	add    BYTE PTR [ebp+0x25],bl
  41f73d:	mov    ah,0x93
  41f73f:	sub    eax,DWORD PTR [ecx+0x12008e0a]
  41f745:	call   FWORD PTR [edi+0x7b]
  41f748:	stos   DWORD PTR es:[edi],eax
  41f749:	in     al,0x30
  41f74b:	jg     0x41f782
  41f74d:	inc    edx
  41f74e:	mov    DWORD PTR [eax-0x5cfaf5ff],esp
  41f754:	cmc    
  41f755:	add    al,0x4
  41f758:	adc    al,0x0
  41f75a:	test   eax,0xbfbbeb96
  41f75f:	iret   
  41f760:	gs cmp al,0x50
  41f763:	or     BYTE PTR [ebp-0x3c6aff71],cl
  41f769:	jp     0x41f6f2
  41f76b:	mov    ecx,0x7eed035
  41f770:	inc    ebp
  41f771:	pop    esi
  41f772:	je     0x41f761
  41f774:	test   DWORD PTR [eax-0x1e],0x5a2c33
  41f77b:	mov    ds:0x1321b4fa,al
  41f780:	jle    0x41f7a0
  41f782:	jmp    0xed80:0xc3f9731e
  41f789:	(bad)  [edi+0x38]
  41f78c:	dec    edi
  41f78d:	ret    0x1000
  41f790:	pop    edx
  41f791:	sbb    al,0xde
  41f793:	sub    cl,BYTE PTR [edx]
  41f795:	ja     0x41f78b
  41f797:	add    bl,dh
  41f799:	sub    edi,DWORD PTR [ecx]
  41f79b:	mov    gs,WORD PTR [ebp+0x3ccfd42d]
  41f7a1:	scas   al,BYTE PTR es:[edi]
  41f7a2:	mov    cl,0x9e
  41f7a4:	push   ecx
  41f7a5:	dec    ebx
  41f7a6:	rcl    BYTE PTR [ebp+0x3e202680],0x56
  41f7ad:	add    BYTE PTR [ebp+0x2e],al
  41f7b0:	cld    
  41f7b1:	mov    ds:0x4f69a7d3,eax
  41f7b6:	pop    ds
  41f7b7:	into   
  41f7b8:	(bad)  
  41f7b9:	and    eax,0x74399d40
  41f7be:	clc    
  41f7bf:	xchg   esi,eax
  41f7c0:	xchg   BYTE PTR [esi*1-0x5ff08282],bl
  41f7c7:	(bad)  
  41f7c8:	loopne 0x41f806
  41f7ca:	cld    
  41f7cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7cc:	out    dx,al
  41f7cd:	icebp  
  41f7ce:	(bad)  
  41f7cf:	and    eax,0x84cd1500
  41f7d4:	jp     0x41f83b
  41f7d6:	or     dl,BYTE PTR [ebx]
  41f7d8:	fdiv   QWORD PTR [edi-0x40]
  41f7db:	sbb    al,0x4a
  41f7dd:	es int3 
  41f7df:	inc    eax
  41f7e0:	sbb    BYTE PTR [esi+0x2f86ad83],bl
  41f7e6:	sbb    eax,0x406514f6
  41f7eb:	jmp    0x5f4ce828
  41f7f0:	(bad)  
  41f7f1:	xchg   edi,eax
  41f7f2:	loopne 0x41f79d
  41f7f4:	bound  ebp,QWORD PTR [eax+0x1]
  41f7f7:	and    BYTE PTR [esi-0x7ceb657b],dl
  41f7fd:	pop    ds
  41f7fe:	fdivr  DWORD PTR [eax+0xb]
  41f801:	lock push ebx
  41f803:	add    BYTE PTR [ebp-0x67],dh
  41f806:	in     eax,dx
  41f807:	mov    WORD PTR [esp+ebp*1+0x407e7f26],?
  41f80e:	adc    al,0xcd
  41f810:	jnp    0x41f7a4
  41f812:	test   BYTE PTR [eax],al
  41f814:	fadd   st(7),st
  41f816:	ret    
  41f817:	in     al,dx
  41f818:	push   edi
  41f819:	xlat   BYTE PTR ds:[ebx]
  41f81a:	retf   0x4900
  41f81d:	cmp    ah,BYTE PTR [ebx]
  41f81f:	jae    0x41f839
  41f821:	test   eax,0xc91cad04
  41f826:	repz mov bh,0xc0
  41f829:	ins    BYTE PTR es:[edi],dx
  41f82a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f82b:	or     esi,DWORD PTR [edx-0x15]
  41f82e:	rol    BYTE PTR [edx],0x4d
  41f831:	pop    edi
  41f832:	(bad)  
  41f833:	test   DWORD PTR [edx+0x62f78061],ecx
  41f839:	mov    ebx,DWORD PTR [ebx+0x5]
  41f83c:	jle    0x41f844
  41f83e:	add    BYTE PTR [esi-0x21346541],dl
  41f844:	jle    0x41f837
  41f846:	cmp    bl,BYTE PTR [ecx*4+0x6b01b092]
  41f84d:	sbb    ebp,DWORD PTR [esi]
  41f84f:	mov    edx,0xe85add10
  41f854:	(bad)  
  41f855:	jae    0x41f847
  41f857:	xor    al,0x0
  41f859:	xor    BYTE PTR [ecx],dl
  41f85b:	loop   0x41f7e7
  41f85d:	pop    esi
  41f85e:	jge    0x41f8a7
  41f860:	add    al,0xea
  41f862:	jno    0x41f880
  41f864:	sub    al,0x1d
  41f866:	push   cs
  41f867:	or     BYTE PTR [edx],0xf1
  41f86a:	loope  0x41f7ed
  41f86c:	adc    BYTE PTR [eax],cl
  41f86e:	add    DWORD PTR [ebp-0x4cb3f4e2],eax
  41f874:	inc    ebx
  41f875:	inc    esi
  41f876:	in     al,dx
  41f877:	mov    ecx,0x5019002d
  41f87c:	xor    esp,DWORD PTR [edx-0x63411f54]
  41f882:	push   cs
  41f883:	pop    esp
  41f884:	and    eax,0x6840110a
  41f889:	(bad)  
  41f88a:	jae    0x41f8e4
  41f88c:	add    DWORD PTR [eax],0xa7c11deb
  41f892:	retf   0xfb65
  41f895:	hlt    
  41f896:	add    BYTE PTR [eax],cl
  41f898:	ja     0x41f917
  41f89a:	pop    es
  41f89b:	cmp    al,0x6b
  41f89d:	mov    eax,0xecf70ec9
  41f8a2:	xchg   esi,eax
  41f8a3:	outs   dx,DWORD PTR es:[esi]
  41f8a5:	mov    ds:0x19a7cb00,eax
  41f8aa:	nop
  41f8ab:	test   BYTE PTR [eax],0xdb
  41f8ae:	clc    
  41f8af:	out    0xba,al
  41f8b1:	push   esp
  41f8b2:	fidiv  WORD PTR [edi+0x3ec7796b]
  41f8b8:	or     eax,0x2e420016
  41f8bd:	pop    ecx
  41f8be:	aaa    
  41f8bf:	xor    eax,0xdd0f61b3
  41f8c4:	test   BYTE PTR [edi+0x6d],ah
  41f8c7:	dec    ecx
  41f8c8:	out    dx,al
  41f8c9:	pop    es
  41f8ca:	inc    esi
  41f8cb:	mov    ebx,0x292dc380
  41f8d0:	or     BYTE PTR [eax],al
  41f8d2:	call   0x71670bd2
  41f8d7:	mov    eax,ds:0x697bb557
  41f8dc:	or     ebx,eax
  41f8de:	call   0xec66:0x3c83f5da
  41f8e5:	enter  0x2be9,0xb7
  41f8e9:	add    BYTE PTR [ebx],bh
  41f8eb:	outs   dx,DWORD PTR ds:[esi]
  41f8ec:	repnz pop edi
  41f8ee:	push   ds
  41f8ef:	aaa    
  41f8f0:	push   esi
  41f8f1:	fadd   DWORD PTR [eax]
  41f8f3:	shl    BYTE PTR [ebx-0x55bbd59e],0x74
  41f8fa:	mov    ah,al
  41f8fc:	push   es
  41f8fd:	add    dl,al
  41f8ff:	sub    eax,0x323ec708
  41f904:	pop    esi
  41f905:	inc    eax
  41f906:	add    esi,DWORD PTR [ecx-0x288c0557]
  41f90c:	pop    ebp
  41f90d:	enter  0xcc03,0x87
  41f911:	add    bl,dl
  41f913:	(bad)  
  41f914:	sbb    DWORD PTR [ebp+0x51],esp
  41f917:	popa   
  41f918:	inc    eax
  41f919:	jbe    0x41f8c0
  41f91b:	jmp    0xab762f20
  41f920:	cld    
  41f921:	push   esp
  41f922:	pop    edx
  41f923:	(bad)  
  41f924:	pop    ecx
  41f925:	add    BYTE PTR [ebx-0xa],ah
  41f928:	mov    ds:0xbe9a18b3,al
  41f92d:	rcl    BYTE PTR [edx],cl
  41f92f:	outs   dx,BYTE PTR ds:[esi]
  41f930:	lahf   
  41f931:	test   DWORD PTR [edi-0x76c61af9],edi
  41f937:	aas    
  41f938:	add    BYTE PTR [edx+ecx*8],ch
  41f93b:	adc    al,0x63
  41f93d:	xor    eax,0x6166dd00
  41f942:	push   esp
  41f943:	add    ch,BYTE PTR [ecx+0x5300c740]
  41f949:	fsub   DWORD PTR [esp+ecx*4+0x6a7fea1b]
  41f950:	add    BYTE PTR [eax-0x4485c01],bl
  41f956:	(bad)  
  41f957:	les    esp,FWORD PTR [eax+eax*1-0x53]
  41f95b:	div    BYTE PTR [edi+edx*4]
  41f95e:	dec    esi
  41f95f:	test   eax,0xe0f291b
  41f964:	jne    0x41f948
  41f966:	idiv   DWORD PTR [eax+eax*8]
  41f969:	iret   
  41f96a:	pop    es
  41f96b:	fiadd  DWORD PTR [edx]
  41f96d:	retf   0x18
  41f970:	mov    edx,0x5a821a51
  41f975:	mov    eax,0xa70e0bc4
  41f97a:	retf   
  41f97b:	out    0x14,eax
  41f97d:	inc    eax
  41f97e:	pushf  
  41f97f:	inc    ebp
  41f980:	popf   
  41f981:	fidiv  DWORD PTR [edx]
  41f983:	jb     0x41f93a
  41f985:	add    ecx,eax
  41f987:	and    esp,DWORD PTR [ebx+ebx*4]
  41f98a:	add    ecx,DWORD PTR [edx]
  41f98c:	outs   dx,BYTE PTR ds:[esi]
  41f98d:	xor    BYTE PTR [esi+0xc71006b],cl
  41f993:	loopne 0x41f9c1
  41f995:	arpl   WORD PTR [esi+0x1e],ax
  41f998:	xchg   edi,eax
  41f999:	jno    0x41f959
  41f99b:	add    BYTE PTR [ecx+0x170b31db],dh
  41f9a1:	ficom  DWORD PTR [ebx]
  41f9a3:	imul   esp,esi,0x9c9600e3
  41f9a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9aa:	imul   ebx,DWORD PTR [ebp+0x3e2811c],0xffffffa7
  41f9b1:	adc    eax,0xef618262
  41f9b6:	mov    al,ds:0x10f7871
  41f9bb:	sub    edi,esp
  41f9bd:	xchg   esp,eax
  41f9be:	pusha  
  41f9bf:	and    al,BYTE PTR [edi+0x28]
  41f9c2:	xor    BYTE PTR [edi-0x23],al
  41f9c5:	add    BYTE PTR [ecx],cl
  41f9c7:	xor    al,0xbc
  41f9c9:	adc    esi,ebx
  41f9cb:	lahf   
  41f9cc:	rol    BYTE PTR ds:0x77f148,0x4a
  41f9d3:	hlt    
  41f9d4:	xchg   esi,eax
  41f9d5:	lods   al,BYTE PTR ds:[esi]
  41f9d6:	mov    ah,0x5b
  41f9d8:	out    0x0,eax
  41f9da:	retf   
  41f9db:	sub    edx,DWORD PTR [ecx+0x3e649a1a]
  41f9e1:	retf   0xd39
  41f9e4:	mov    al,ds:0xceff4e00
  41f9e9:	dec    ecx
  41f9ea:	(bad)  
  41f9eb:	mov    edi,0x927029
  41f9f0:	int3   
  41f9f1:	outs   dx,BYTE PTR ds:[esi]
  41f9f2:	test   eax,0x693ffb52
  41f9f7:	xchg   ecx,eax
  41f9f8:	add    BYTE PTR [edi-0x65],al
  41f9fb:	add    DWORD PTR [ebx-0x759afb3],eax
  41fa01:	add    BYTE PTR [ecx-0x5e],ah
  41fa04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa05:	adc    ecx,edi
  41fa07:	sub    al,0xea
  41fa09:	imul   eax,DWORD PTR [eax],0xffffff91
  41fa0c:	sahf   
  41fa0d:	or     BYTE PTR ds:0x3f897a97,al
  41fa13:	pop    es
  41fa14:	add    al,0x74
  41fa16:	inc    ecx
  41fa17:	das    
  41fa18:	add    ch,BYTE PTR [edi+0x7]
  41fa1b:	fidivr WORD PTR [ecx-0x39341130]
  41fa21:	xchg   DWORD PTR [ecx],eax
  41fa23:	idiv   DWORD PTR [ebp-0xf]
  41fa26:	rcl    DWORD PTR [ebp+edi*1+0x5c],1
  41fa2a:	hlt    
  41fa2b:	jle    0x41fa6c
  41fa2d:	add    BYTE PTR [esi+0x75],al
  41fa30:	lahf   
  41fa31:	mov    dl,0x5a
  41fa33:	jl     0x41f9b9
  41fa35:	imul   eax,DWORD PTR [eax],0xecc2e4fb
  41fa3b:	xchg   edi,eax
  41fa3c:	cmp    al,0x6
  41fa3e:	mov    bh,0x0
  41fa40:	push   esi
  41fa41:	sub    eax,0xd4c36845
  41fa46:	mov    ch,0x35
  41fa48:	add    BYTE PTR [ebx],bh
  41fa4a:	rcr    DWORD PTR [ecx+0x14701984],1
  41fa50:	popa   
  41fa51:	add    BYTE PTR [ecx-0x3e5d7d65],ah
  41fa57:	jmp    0x41fa5a
  41fa59:	mov    DWORD PTR [esi-0x35],edi
  41fa5c:	or     ebp,esi
  41fa5e:	imul   edx,DWORD PTR [ebx+eiz*1-0x23ffda04],0x1e427d4f
  41fa69:	loope  0x41fa6c
  41fa6b:	sahf   
  41fa6c:	push   ss
  41fa6d:	xchg   ch,ah
  41fa6f:	push   ecx
  41fa70:	xor    DWORD PTR [esp+ebx*8],edx
  41fa73:	cmp    BYTE PTR [edi+0x2],bl
  41fa76:	aad    0xb1
  41fa78:	inc    eax
  41fa79:	inc    esp
  41fa7a:	mov    al,ch
  41fa7c:	loopne 0x41fa32
  41fa7e:	mov    edx,0x1f220065
  41fa83:	adc    dl,BYTE PTR [ebp-0x5b]
  41fa86:	ret    
  41fa87:	xchg   esi,eax
  41fa88:	loope  0x41fa8a
  41fa8a:	jo     0x41fb02
  41fa8c:	retfw  0x8872
  41fa90:	je     0x41faa5
  41fa92:	add    ecx,ebp
  41fa94:	fiadd  WORD PTR [ebx-0x76443429]
  41fa9a:	out    0xad,al
  41fa9c:	hlt    
  41fa9d:	shr    DWORD PTR [esi],1
  41fa9f:	add    BYTE PTR [edi+esi*1],al
  41faa2:	out    dx,al
  41faa3:	add    BYTE PTR [ecx+0x67],0xd9
  41faa7:	test   al,0xe
  41faa9:	jmp    0xc1260b1c
  41faae:	push   es
  41faaf:	out    0x3e,al
  41fab1:	cwde   
  41fab2:	cmp    al,0x4
  41fab4:	loopne 0x41faa8
  41fab6:	ins    BYTE PTR es:[edi],dx
  41fab7:	push   cs
  41fab8:	adc    DWORD PTR [ecx+0x6066c835],eax
  41fabe:	inc    ebp
  41fabf:	clc    
  41fac0:	add    ch,dl
  41fac2:	push   esp
  41fac3:	cs hlt 
  41fac5:	dec    eax
  41fac6:	call   0xf342004e
  41facb:	pop    es
  41facc:	xor    esi,edi
  41face:	inc    edi
  41facf:	retf   
  41fad0:	daa    
  41fad1:	jb     0x41fad3
  41fad3:	out    dx,eax
  41fad4:	jmp    0xe8bb7676
  41fad9:	pusha  
  41fada:	add    BYTE PTR fs:[eax],cl
  41fadd:	mov    ds:0xa58eeef3,al
  41fae2:	outs   dx,BYTE PTR ds:[esi]
  41fae3:	jne    0x41fb03
  41fae5:	pop    edi
  41fae6:	dec    esp
  41fae7:	inc    edx
  41fae8:	(bad)  
  41fae9:	lods   eax,DWORD PTR ds:[esi]
  41faea:	mov    ebp,0x4566e8a0
  41faef:	cmp    ah,bl
  41faf1:	add    bl,dl
  41faf3:	int    0x6d
  41faf5:	xor    eax,0x1d5e1afa
  41fafa:	push   cs
  41fafb:	adc    bh,BYTE PTR [eax+eax*4-0x30a5bfdb]
  41fb02:	sbb    edi,DWORD PTR [ecx+0x46]
  41fb05:	adc    al,dl
  41fb07:	addr16 daa 
  41fb09:	add    BYTE PTR [eax-0xb],al
  41fb0c:	push   ebp
  41fb0d:	sahf   
  41fb0e:	lods   al,BYTE PTR ds:[esi]
  41fb0f:	jmp    0x41fb11
  41fb11:	(bad)  
  41fb12:	loopne 0x41faf7
  41fb14:	mov    bl,0x42
  41fb16:	mov    ds:0xb70036c8,eax
  41fb1b:	dec    edi
  41fb1c:	mov    dh,0x6e
  41fb1e:	push   ds
  41fb1f:	inc    eax
  41fb20:	imul   eax,ebx,0xafc57800
  41fb26:	aad    0xf9
  41fb28:	mov    edx,0x938cba0
  41fb2d:	into   
  41fb2e:	add    BYTE PTR [ecx+0x26],al
  41fb31:	pusha  
  41fb32:	push   ecx
  41fb33:	cmc    
  41fb34:	div    ebx
  41fb36:	pop    es
  41fb37:	xlat   BYTE PTR ds:[ebx]
  41fb38:	xchg   DWORD PTR [edi+0x1a],esp
  41fb3b:	ds xchg esp,eax
  41fb3d:	ins    BYTE PTR es:[edi],dx
  41fb3e:	sub    BYTE PTR [esi],0x43
  41fb41:	std    
  41fb42:	inc    edx
  41fb43:	add    BYTE PTR ds:0x793de4d0,bl
  41fb49:	xchg   edx,eax
  41fb4a:	push   0x31
  41fb4c:	pop    es
  41fb4d:	dec    edi
  41fb4e:	push   ebp
  41fb4f:	sub    DWORD PTR [ebp-0x29],esi
  41fb52:	mov    al,0xa0
  41fb54:	div    DWORD PTR [ebx]
  41fb56:	mov    edi,0xb000a2e6
  41fb5b:	sbb    edi,DWORD PTR [eax+0x2d]
  41fb5e:	stos   BYTE PTR es:[edi],al
  41fb5f:	push   0x160fc912
  41fb64:	cmc    
  41fb65:	jne    0x41fbb8
  41fb67:	iret   
  41fb68:	fistp  DWORD PTR [esi-0x40]
  41fb6b:	inc    esi
  41fb6c:	adc    DWORD PTR [ecx-0x3d],ebx
  41fb6f:	mov    edx,0x5fe92667
  41fb74:	add    BYTE PTR [eax],0xb4
  41fb77:	out    dx,eax
  41fb78:	pop    esp
  41fb79:	loop   0x41fb9d
  41fb7b:	pop    esi
  41fb7c:	add    BYTE PTR [eax-0x56],ah
  41fb7f:	mov    gs,ebp
  41fb81:	jg     0x41fbad
  41fb83:	sub    al,0xee
  41fb85:	add    BYTE PTR [ebx-0x194c8983],ch
  41fb8b:	aaa    
  41fb8c:	or     dl,BYTE PTR [eax]
  41fb8e:	pop    ds
  41fb8f:	push   0x55
  41fb91:	fiadd  WORD PTR [ecx]
  41fb93:	fld    QWORD PTR [ebx-0x2724b0e6]
  41fb99:	(bad)  
  41fb9b:	add    BYTE PTR [esi-0xe],bl
  41fb9e:	aas    
  41fb9f:	pop    eax
  41fba0:	jg     0x41fb28
  41fba2:	ja     0x41fc0c
  41fba4:	mov    eax,0xf3fd005c
  41fba9:	jns    0x41fb8a
  41fbab:	and    esp,ecx
  41fbad:	jnp    0x41fc11
  41fbaf:	mov    eax,0x6f3000b7
  41fbb4:	div    al
  41fbb6:	ror    BYTE PTR [edi+eax*4+0xd],1
  41fbba:	je     0x41fc2c
  41fbbc:	add    BYTE PTR [eax-0x9],al
  41fbbf:	adc    BYTE PTR [edx+0x24],dl
  41fbc2:	pop    ebp
  41fbc3:	loop   0x41fb8a
  41fbc5:	jl     0x41fc18
  41fbc7:	cmp    eax,0xc080d4c9
  41fbcc:	ds ret 0x9d74
  41fbd0:	rcr    DWORD PTR [eax+0x5b032c00],1
  41fbd6:	mov    esi,0x2bea25ae
  41fbdb:	and    al,0x8a
  41fbdd:	xchg   ebx,eax
  41fbde:	ins    DWORD PTR es:[edi],dx
  41fbdf:	sub    al,0xfa
  41fbe1:	add    BYTE PTR [esp+ebp*8],al
  41fbe4:	std    
  41fbe5:	jle    0x41fc29
  41fbe7:	push   es
  41fbe8:	pop    eax
  41fbe9:	(bad)  
  41fbea:	fidivr WORD PTR [ecx]
  41fbec:	mov    cl,0xdc
  41fbee:	pushw  ss
  41fbf0:	sub    BYTE PTR cs:[ebx],al
  41fbf3:	sbb    edx,DWORD PTR [edx+0x1e]
  41fbf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbf7:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbf9:	push   cs
  41fbfa:	dec    ebx
  41fbfb:	add    BYTE PTR [edx-0xdedd652],dh
  41fc01:	inc    esi
  41fc02:	in     eax,0xa
  41fc04:	add    BYTE PTR [esi],ah
  41fc06:	and    BYTE PTR [eax+edx*1+0x7c],0x9b
  41fc0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc0c:	fild   WORD PTR [eax]
  41fc0e:	daa    
  41fc0f:	fcomp  QWORD PTR [esi+ebx*2]
  41fc12:	mov    dl,0x66
  41fc14:	pop    eax
  41fc15:	cmp    al,0xf0
  41fc17:	sbb    eax,0xe6730805
  41fc1c:	les    ebx,FWORD PTR [esi]
  41fc1e:	(bad)  
  41fc1f:	pop    ebx
  41fc20:	add    BYTE PTR [ebp-0x80],bh
  41fc23:	(bad)  
  41fc24:	test   DWORD PTR [eax],0x1049b74d
  41fc2a:	pop    esi
  41fc2b:	adc    ah,bl
  41fc2d:	xlat   BYTE PTR ds:[ebx]
  41fc2e:	add    BYTE PTR [ecx+0x52],ch
  41fc31:	in     al,dx
  41fc32:	dec    edi
  41fc33:	jmp    0x57fe:0x45d4b1
  41fc3a:	jp     0x41fc31
  41fc3c:	xchg   DWORD PTR [esi],esp
  41fc3e:	jne    0x41fc25
  41fc40:	add    ch,bh
  41fc42:	clc    
  41fc43:	retf   
  41fc44:	pop    edx
  41fc45:	data16 aas 
  41fc47:	mov    ds:0x94f03b,al
  41fc4c:	(bad)  
  41fc4d:	add    al,0x59
  41fc50:	adc    edi,DWORD PTR [edi+eax*4+0x34]
  41fc54:	sbb    eax,0xbd20d5
  41fc59:	test   eax,0x7322103a
  41fc5e:	cmc    
  41fc5f:	add    edi,esp
  41fc61:	ds loopne 0x41fc62
  41fc64:	inc    esp
  41fc65:	jl     0x41fc58
  41fc67:	fiadd  WORD PTR [eax+0x3cf0a647]
  41fc6d:	jno    0x41fc7c
  41fc6f:	mov    ds:0x7b56d000,eax
  41fc74:	addr16 pop eax
  41fc76:	shr    DWORD PTR [ebx-0x4a],0x39
  41fc7a:	mov    ebp,0x7db004e
  41fc7f:	jmp    0x41fcbc
  41fc81:	pop    edx
  41fc82:	sub    eax,0xb79107f5
  41fc87:	or     DWORD PTR [eax+0x7d],esp
  41fc8a:	adc    ah,dh
  41fc8c:	add    DWORD PTR [ebx-0x467ac716],esi
  41fc92:	pusha  
  41fc93:	xor    BYTE PTR [edx+esi*4-0x24ff8314],0x11
  41fc9b:	push   esp
  41fc9c:	push   0xffffffa5
  41fc9e:	hlt    
  41fc9f:	or     DWORD PTR [ecx+0x6e6b3d],ebp
  41fca5:	out    0xa0,eax
  41fca7:	jne    0x41fcfe
  41fca9:	sub    ah,BYTE PTR [edx+0x35]
  41fcac:	add    BYTE PTR [edi+0x4a57fbce],bl
  41fcb2:	jnp    0x41fc7e
  41fcb4:	cmp    al,BYTE PTR [eax]
  41fcb6:	pop    esi
  41fcb7:	repz inc eax
  41fcb9:	and    DWORD PTR [edx],0x33
  41fcbc:	pusha  
  41fcbd:	sub    eax,0x9fcd9e02
  41fcc2:	imul   ebx,DWORD PTR [ebx-0x47f63cdf],0x32ecf5
  41fccc:	retf   
  41fccd:	and    dl,0x96
  41fcd0:	or     BYTE PTR [ecx-0x16ffd38c],0x5a
  41fcd7:	sar    BYTE PTR [edi],cl
  41fcd9:	call   0xaad2bb
  41fcde:	mov    BYTE PTR [edx-0x470e91d0],cl
  41fce4:	rcr    BYTE PTR [esi+0x44006a70],0xb
  41fceb:	jnp    0x41fce6
  41fced:	mov    ebx,0xa88103
  41fcf2:	retf   0xac8b
  41fcf5:	cmp    DWORD PTR [eax],0xffffffbc
  41fcf8:	mov    edi,0x27561
  41fcfd:	ret    0x140
  41fd00:	test   eax,0x53684996
  41fd05:	add    BYTE PTR [ebx+0x703f7c63],ah
  41fd0b:	push   esi
  41fd0c:	mov    esp,0x6bbe003c
  41fd11:	stc    
  41fd12:	mov    edi,0x579b0a9c
  41fd17:	add    BYTE PTR [esi+0x39],bh
  41fd1a:	in     al,dx
  41fd1b:	dec    ebp
  41fd1c:	lea    edi,[eax]
  41fd1e:	repnz inc ebp
  41fd20:	jmp    0xbfdd:0x79ed00d3
  41fd27:	inc    eax
  41fd28:	push   esp
  41fd29:	jne    0x41fcc8
  41fd2b:	add    al,bl
  41fd2d:	cmp    al,0x6e
  41fd2f:	cmc    
  41fd30:	in     al,0xb1
  41fd32:	and    BYTE PTR [esi],dh
  41fd34:	add    BYTE PTR [ebx+edx*4+0x34526718],dh
  41fd3b:	out    dx,al
  41fd3c:	mov    eax,0xc3443500
  41fd41:	jae    0x41fd1e
  41fd43:	popa   
  41fd44:	add    al,0x6d
  41fd46:	or     DWORD PTR [eax+edi*8+0x47806c3e],edi
  41fd4d:	adc    esp,DWORD PTR [eax]
  41fd4f:	shl    edx,1
  41fd51:	add    BYTE PTR [eax-0xc],cl
  41fd54:	cld    
  41fd55:	sbb    ch,BYTE PTR [eax+eax*2]
  41fd58:	and    DWORD PTR [ecx-0x78514800],ecx
  41fd5e:	fwait
  41fd5f:	xor    al,bh
  41fd61:	in     al,0x7c
  41fd63:	add    cl,dl
  41fd65:	xor    DWORD PTR [edi],ebp
  41fd67:	dec    esp
  41fd68:	imul   WORD PTR [eax-0x4f]
  41fd6c:	cmp    DWORD PTR [ebx-0x16],esi
  41fd6f:	cmp    al,0xdc
  41fd71:	sbb    BYTE PTR [eax-0x70],0xe2
  41fd75:	inc    ecx
  41fd76:	and    BYTE PTR [ebx],0x44
  41fd79:	or     DWORD PTR [ebx-0x18],esp
  41fd7c:	test   al,0x50
  41fd7e:	adc    BYTE PTR [edx],0xf2
  41fd81:	mov    dh,0x39
  41fd83:	popa   
  41fd84:	add    BYTE PTR [edx],bh
  41fd86:	jmp    0x521f:0x6b2733f1
  41fd8d:	mov    eax,0xcc5d006b
  41fd92:	je     0x41fdcc
  41fd94:	sahf   
  41fd95:	mov    dh,0xcb
  41fd97:	popa   
  41fd98:	pop    es
  41fd99:	(bad)  
  41fd9a:	loop   0x41fdcd
  41fd9c:	test   esi,ebp
  41fd9e:	daa    
  41fd9f:	js     0x41fd91
  41fda1:	mov    bh,0x53
  41fda3:	jnp    0x41fdb0
  41fda5:	add    al,dh
  41fda7:	add    al,0x45
  41fda9:	cmc    
  41fdaa:	xchg   esp,eax
  41fdab:	jae    0x41fd90
  41fdad:	iret   
  41fdae:	test   al,0xf6
  41fdb0:	cld    
  41fdb1:	cdq    
  41fdb2:	clc    
  41fdb3:	sahf   
  41fdb4:	(bad)  
  41fdb5:	mov    al,ds:0x5386d400
  41fdba:	scas   eax,DWORD PTR es:[edi]
  41fdbb:	push   ds
  41fdbc:	popa   
  41fdbd:	ret    
  41fdbe:	icebp  
  41fdbf:	add    BYTE PTR [edx+0x3],dl
  41fdc2:	test   BYTE PTR [edi],dl
  41fdc4:	jmp    0x41fd9d
  41fdc6:	dec    BYTE PTR [edx]
  41fdc8:	jne    0x41fe3f
  41fdca:	add    BYTE PTR [edi],bh
  41fdcc:	or     BYTE PTR [eax],dl
  41fdce:	int3   
  41fdcf:	add    al,0xf9
  41fdd1:	and    DWORD PTR [edx-0x7fd725c5],edi
  41fdd7:	stos   BYTE PTR es:[edi],al
  41fdd8:	aam    0x9e
  41fdda:	bound  esi,QWORD PTR [ecx+0x5376501c]
  41fde0:	mov    al,0x8b
  41fde2:	add    BYTE PTR [eax+0x6d6fd5e7],dl
  41fde8:	ret    
  41fde9:	fld    TBYTE PTR [eax+eax*1-0x284f82fa]
  41fdf0:	(bad)  
  41fdf2:	xchg   ebp,eax
  41fdf3:	(bad)  
  41fdf4:	repnz add DWORD PTR [eax],eax
  41fdf7:	push   esi
  41fdf8:	mov    ah,0x75
  41fdfa:	stc    
  41fdfb:	and    bl,BYTE PTR [ebx+0x67]
  41fdfe:	inc    eax
  41fdff:	add    BYTE PTR [ecx],cl
  41fe01:	scas   al,BYTE PTR es:[edi]
  41fe02:	sbb    eax,0x4da68cca
  41fe07:	in     al,0x0
  41fe09:	mov    ecx,0xd6900355
  41fe0e:	fstp   DWORD PTR [edx-0x782ff65e]
  41fe14:	fadd   QWORD PTR [eax-0x29]
  41fe17:	and    BYTE PTR [ecx-0x7],0x9c
  41fe1b:	jo     0x41fe50
  41fe1d:	pop    es
  41fe1e:	les    esp,FWORD PTR [ebp-0x2]
  41fe21:	jg     0x41fdb5
  41fe23:	mov    al,ds:0x364aee0c
  41fe28:	stc    
  41fe29:	hlt    
  41fe2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe2b:	lods   eax,DWORD PTR ds:[esi]
  41fe2c:	add    BYTE PTR [ebx],ah
  41fe2e:	call   0xc642:0x78df1c76
  41fe35:	add    BYTE PTR [ecx],al
  41fe37:	xchg   esp,eax
  41fe38:	xchg   ebp,eax
  41fe39:	neg    BYTE PTR [esp+eax*8+0x33]
  41fe3d:	cmc    
  41fe3e:	add    BYTE PTR [ebx-0x75],bl
  41fe41:	xchg   edx,eax
  41fe42:	mov    edx,0xef7d618d
  41fe47:	aas    
  41fe48:	cmp    ch,BYTE PTR [ebx]
  41fe4a:	add    BYTE PTR [ebx],al
  41fe4c:	bound  esp,QWORD PTR [esi]
  41fe4e:	jns    0x41fe16
  41fe50:	adc    DWORD PTR [ebx+0x4900977e],0xffffffab
  41fe57:	loope  0x41fe17
  41fe59:	or     bl,BYTE PTR [ebp-0x28]
  41fe5c:	cmp    al,BYTE PTR [eax]
  41fe5e:	or     BYTE PTR [ebp+0x5c],dl
  41fe61:	fisttp QWORD PTR [ebx+0xbb41f1]
  41fe67:	sahf   
  41fe68:	jae    0x41feb5
  41fe6a:	xchg   edi,eax
  41fe6b:	shr    DWORD PTR [ebp-0x1f],0x67
  41fe6f:	repnz test DWORD PTR [eax],eax
  41fe72:	aad    0xfd
  41fe74:	lods   eax,DWORD PTR ds:[esi]
  41fe75:	mov    DWORD PTR [edi+0x36f35b0],0x2daa19fc
  41fe7f:	mov    ds:0x981ceb62,eax
  41fe84:	ds shr ecx,1
  41fe87:	sbb    al,0x74
  41fe89:	pop    DWORD PTR [esi+ecx*1]
  41fe8c:	loopne 0x41fefe
  41fe8e:	loopne 0x41ff0a
  41fe90:	sbb    dh,BYTE PTR [ecx+0x10]
  41fe93:	push   ebp
  41fe94:	sbb    al,0x2b
  41fe96:	jne    0x41ff13
  41fe98:	inc    eax
  41fe99:	fst    st(3)
  41fe9b:	stos   DWORD PTR es:[edi],eax
  41fe9c:	sub    eax,0xef0008da
  41fea1:	in     al,dx
  41fea2:	push   esp
  41fea3:	push   ebx
  41fea4:	cli    
  41fea5:	xchg   esp,eax
  41fea6:	mov    bl,0x93
  41fea8:	add    al,ah
  41feaa:	inc    edx
  41feab:	in     al,0xf1
  41fead:	in     eax,dx
  41feae:	xchg   edx,eax
  41feaf:	punpckldq mm0,DWORD PTR [eax]
  41feb2:	gs dec esp
  41feb4:	cmp    ch,BYTE PTR [edi+0x2e13a3d6]
  41feba:	add    BYTE PTR [eax+esi*8-0x37e4118],bl
  41fec1:	sub    ebx,edx
  41fec3:	sbb    al,0xf
  41fec5:	aam    0xf1
  41fec7:	xchg   edi,eax
  41fec8:	les    eax,FWORD PTR [eax]
  41feca:	(bad)  
  41fecb:	imul   BYTE PTR [eax]
  41fecd:	hlt    
  41fece:	das    
  41fecf:	ins    BYTE PTR es:[edi],dx
  41fed0:	add    BYTE PTR [ebx+0x1],bh
  41fed3:	sbb    eax,0x4bd2fa75
  41fed8:	jle    0x41feda
  41feda:	daa    
  41fedb:	retf   
  41fedc:	repnz outs dx,DWORD PTR ds:[esi]
  41fede:	jge    0x41fe96
  41fee0:	inc    ebp
  41fee1:	into   
  41fee2:	pop    es
  41fee3:	cs inc eax
  41fee5:	test   eax,0x80bb1728
  41feea:	mov    ebp,0x15c8c4c3
  41feef:	sbb    eax,0x80d19406
  41fef4:	dec    ecx
  41fef5:	adc    al,0x2
  41fef7:	loope  0x41ff2e
  41fef9:	mov    edx,0xae23db00
  41fefe:	inc    edx
  41feff:	pop    ecx
  41ff00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff01:	hlt    
  41ff02:	jnp    0x41ff07
  41ff04:	mov    al,ds:0x90a3f2c2
  41ff09:	and    eax,0xffffffc3
  41ff0c:	sub    ah,BYTE PTR [esi-0x2e3237ec]
  41ff12:	rol    DWORD PTR [eax],1
  41ff14:	pop    eax
  41ff15:	fwait
  41ff16:	test   BYTE PTR [ebx],dl
  41ff18:	icebp  
  41ff19:	fnstcw WORD PTR [edi-0x7c901a00]
  41ff1f:	pop    esp
  41ff20:	lahf   
  41ff21:	sub    al,0x50
  41ff23:	iret   
  41ff24:	add    BYTE PTR [eax],cl
  41ff26:	inc    esi
  41ff27:	(bad)  
  41ff28:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41ff2a:	dec    eax
  41ff2b:	fidivr WORD PTR [edi-0x69ef29f9]
  41ff31:	out    0xbb,al
  41ff33:	rcr    BYTE PTR [eax+0x28],1
  41ff36:	stos   BYTE PTR es:[edi],al
  41ff37:	ins    BYTE PTR es:[edi],dx
  41ff38:	add    eax,0x7a9ca056
  41ff3d:	arpl   cx,ax
  41ff3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff40:	bound  eax,QWORD PTR [esp+ebx*8]
  41ff43:	in     eax,dx
  41ff44:	aad    0xf2
  41ff46:	iret   
  41ff47:	add    BYTE PTR [edx+0x14],ch
  41ff4a:	int3   
  41ff4b:	stos   DWORD PTR es:[edi],eax
  41ff4c:	sub    ah,BYTE PTR es:[ecx+eiz*2]
  41ff50:	add    BYTE PTR [esp+eiz*4],cl
  41ff53:	jbe    0x41ff09
  41ff55:	test   ebp,esi
  41ff57:	(bad)  
  41ff58:	jmp    0x60de:0x42910600
  41ff5f:	scas   al,BYTE PTR es:[edi]
  41ff60:	push   esp
  41ff61:	mov    eax,0x5e04d090
  41ff66:	xchg   edi,eax
  41ff67:	jg     0x41fef9
  41ff69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff6a:	shl    BYTE PTR [eax],0x67
  41ff6d:	rol    bl,1
  41ff6f:	push   cs
  41ff70:	loope  0x41ffca
  41ff72:	pop    esp
  41ff73:	rol    DWORD PTR [eax-0x67b5d137],0x8e
  41ff7a:	inc    bh
  41ff7c:	add    BYTE PTR [eax+0x6f],al
  41ff7f:	bound  edx,QWORD PTR [ebp+0x3e8f4df2]
  41ff85:	hlt    
  41ff86:	int    0x0
  41ff88:	xchg   edx,eax
  41ff89:	add    edi,DWORD PTR [ebp+esi*1+0x15]
  41ff8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff8e:	pushf  
  41ff8f:	in     eax,0x0
  41ff91:	lods   eax,DWORD PTR ds:[esi]
  41ff92:	sub    eax,0xb57799ec
  41ff97:	dec    edx
  41ff98:	push   esi
  41ff99:	add    BYTE PTR [eiz*2+0x3e18ca94],dh
  41ffa0:	fmul   QWORD PTR [ecx-0x4338aac1]
  41ffa6:	push   ss
  41ffa7:	add    ch,dl
  41ffa9:	scas   al,BYTE PTR es:[edi]
  41ffaa:	es scas eax,DWORD PTR es:[edi]
  41ffac:	mov    ecx,DWORD PTR [edi]
  41ffae:	enter  0x6dfa,0x0
  41ffb2:	imul   esp,DWORD PTR [ebx+0x65],0x87cde105
  41ffb9:	fild   DWORD PTR [eax]
  41ffbb:	xchg   ebx,eax
  41ffbc:	mov    dh,0xca
  41ffbe:	mov    ch,0x39
  41ffc0:	pop    ecx
  41ffc1:	mov    eax,ds:0x45a90052
  41ffc6:	adc    bl,BYTE PTR [ebx-0x21]
  41ffc9:	sbb    DWORD PTR [ebx-0x53],esi
  41ffcc:	add    BYTE PTR [ebp-0x4d],dh
  41ffcf:	cmp    DWORD PTR [ebx],0xffffffbc
  41ffd2:	cmp    DWORD PTR [ebp-0x2e4bff48],0x27db845a
  41ffdc:	test   DWORD PTR [eax+eax*1-0x34],eax
  41ffe0:	cmp    eax,0x941bb122
  41ffe5:	fldenv [esi]
  41ffe7:	add    ch,al
  41ffe9:	xchg   ebp,eax
  41ffea:	pop    ecx
  41ffeb:	inc    ebp
  41ffec:	adc    eax,0x8d6736
  41fff1:	or     BYTE PTR [esi+0x37],bh
  41fff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fff5:	test   ebx,esi
  41fff7:	mov    eax,ds:0x737000b6
  41fffc:	aam    0x22
  41fffe:	mov    dl,0xd2
  420000:	or     edx,DWORD PTR [ebx]
  420002:	hlt    
  420003:	or     BYTE PTR [eax-0x32d4f8f4],bh
  420009:	adc    dl,BYTE PTR [edi+0x43]
  42000c:	shl    dh,0x95
  42000f:	les    ecx,FWORD PTR ds:0xec88c700
  420015:	out    dx,eax
  420016:	and    bl,al
  420018:	add    al,0x97
  42001a:	jno    0x41fff4
  42001c:	add    BYTE PTR [eax-0x7a],bl
  42001f:	adc    esp,DWORD PTR [ecx]
  420021:	repz jne 0x41ffb9
  420024:	int    0x0
  420026:	inc    esi
  420027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420028:	mov    dh,0x4c
  42002a:	sub    BYTE PTR [edx-0x21f86ed3],bh
  420030:	es loop 0x420037
  420033:	in     al,0xb0
  420035:	std    
  420036:	sbb    cl,ch
  420038:	pushf  
  420039:	add    BYTE PTR [ebp-0x15],ch
  42003c:	mov    ebx,0x35ce4c97
  420041:	pop    ss
  420042:	outs   dx,BYTE PTR ds:[esi]
  420043:	mov    esp,0x85c102c6
  420048:	stos   BYTE PTR es:[edi],al
  420049:	pusha  
  42004a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42004b:	cmp    bl,al
  42004d:	add    BYTE PTR [esi+0x518e8b0b],al
  420053:	fcmovu st,st(6)
  420055:	jl     0x42005e
  420057:	mov    bl,0xb7
  420059:	jo     0x420087
  42005b:	mov    BYTE PTR [edi+0x106e7013],ah
  420061:	popa   
  420062:	jne    0x420052
  420064:	ja     0x42005a
  420066:	into   
  420067:	push   ds
  420068:	sub    ch,BYTE PTR [ecx]
  42006a:	test   al,0x43
  42006c:	test   eax,0xe016fbc0
  420071:	xor    BYTE PTR [edx],bl
  420073:	pop    edx
  420074:	add    BYTE PTR [eax+0x35],bh
  420077:	jo     0x420004
  420079:	sub    eax,0x4
  42007c:	cli    
  42007d:	add    ecx,ebx
  42007f:	and    eax,0xcae43274
  420084:	xlat   BYTE PTR ds:[ebx]
  420085:	and    BYTE PTR [eax],dl
  420087:	sub    DWORD PTR [eax],eax
  420089:	add    bh,BYTE PTR [esi+esi*1+0x4bda007]
  420090:	add    DWORD PTR [eax],0x24
  420093:	dec    edi
  420094:	imul   eax,esp,0x8cf0196d
  42009a:	ds or  eax,0xacea80ec
  4200a0:	xchg   edi,eax
  4200a1:	xor    eax,0x7af8f
  4200a6:	dec    edi
  4200a7:	pavgw  mm1,QWORD PTR [ebx]
  4200aa:	in     al,0xfa
  4200ac:	cmp    BYTE PTR [edx-0x4ab69600],ch
  4200b2:	clc    
  4200b3:	pop    edx
  4200b4:	dec    edx
  4200b5:	mov    dl,0xa0
  4200b7:	add    BYTE PTR [eax-0x16dc437],cl
  4200bd:	int3   
  4200be:	sbb    eax,0xdad600ea
  4200c3:	pmullw mm0,QWORD PTR [ebp+0x61]
  4200c7:	das    
  4200c8:	mov    al,ds:0x9cae9800
  4200cd:	xchg   edx,eax
  4200ce:	mov    BYTE PTR [edx+eiz*8-0x74f1fb53],dh
  4200d5:	rol    DWORD PTR [edx+ecx*1-0x4e2f5b40],cl
  4200dc:	xchg   esp,eax
  4200dd:	pop    es
  4200de:	(bad)  
  4200df:	retf   0xdb11
  4200e2:	lea    esp,[eax-0x1c]
  4200e5:	cdq    
  4200e6:	jle    0x42008b
  4200e8:	mov    al,0x2a
  4200ea:	(bad)  
  4200eb:	jno    0x4200f0
  4200ed:	mov    eax,ds:0x8caf5ee
  4200f2:	aas    
  4200f3:	mov    BYTE PTR [esi+eiz*2],cl
  4200f6:	adc    BYTE PTR [eax],al
  4200f8:	enter  0x511c,0xb9
  4200fc:	mov    DWORD PTR [edx],esi
  4200fe:	sar    BYTE PTR [ebx],0xf
  420101:	pop    esi
  420102:	hlt    
  420103:	jns    0x4200e9
  420105:	loopne 0x4200af
  420107:	xchg   ebp,eax
  420108:	cmp    DWORD PTR [ecx-0x25],ecx
  42010b:	add    ah,bh
  42010d:	loop   0x4200f0
  42010f:	mov    ch,0x75
  420111:	jp     0x42017c
  420113:	or     DWORD PTR [eax],eax
  420115:	gs xchg esi,eax
  420117:	sti    
  420118:	pop    ebp
  420119:	imul   ebp,DWORD PTR [eax],0xf
  42011c:	mov    ds:0xf1b8b671,al
  420121:	je     0x4fc2a9
  420127:	mov    ah,0xe6
  420129:	lahf   
  42012a:	ins    DWORD PTR es:[edi],dx
  42012b:	es sbb eax,0x74f94e1
  420131:	push   ss
  420132:	push   ds
  420133:	mov    ecx,0x34b54780
  420138:	push   ebp
  420139:	add    bl,cl
  42013b:	add    cl,BYTE PTR [ebp-0x3e]
  42013e:	inc    ebp
  42013f:	fwait
  420140:	je     0x420103
  420142:	add    BYTE PTR [edi],bl
  420144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420145:	sub    BYTE PTR [ebp+0x41],ah
  420148:	aad    0x59
  42014a:	xor    eax,DWORD PTR [edi]
  42014c:	mov    bh,0x84
  42014e:	arpl   WORD PTR [esi+0x71],bx
  420151:	rcr    BYTE PTR [esi],1
  420153:	push   es
  420154:	or     cl,cl
  420156:	add    BYTE PTR [esi*1+0x674ac23b],bl
  42015d:	mov    al,ds:0x147c01b0
  420162:	xor    BYTE PTR [eax],0x48
  420165:	lock xor DWORD PTR [eax-0x52],0x5cab02da
  42016d:	lods   al,BYTE PTR ds:[esi]
  42016e:	adc    eax,0x360b20e
  420173:	test   BYTE PTR [ebp+0x6d0093fc],al
  420179:	call   0x31712db7
  42017e:	mov    ch,BYTE PTR [ecx-0x35aa4800]
  420184:	cmc    
  420185:	je     0x420167
  420187:	push   edi
  420188:	lods   eax,DWORD PTR ds:[esi]
  420189:	add    dh,al
  42018b:	fst    st(4)
  42018d:	or     bh,bl
  42018f:	mov    esp,0x9e00287f
  420194:	xchg   esp,eax
  420195:	jp     0x420131
  420197:	sub    bh,BYTE PTR [ecx+0x17]
  42019a:	inc    ebx
  42019b:	add    BYTE PTR [ecx+0x77],ah
  42019e:	mov    ebp,0x69729b26
  4201a3:	scas   al,BYTE PTR es:[edi]
  4201a4:	add    BYTE PTR [edi+0x5d],ah
  4201a7:	ss (bad) 
  4201a9:	mov    dh,0x9
  4201ab:	imul   edi,DWORD PTR [eax+eax*1],0x1
  4201af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201b0:	dec    ebp
  4201b1:	cld    
  4201b2:	stos   BYTE PTR es:[edi],al
  4201b3:	rcr    BYTE PTR ds:0x55d500f5,1
  4201b9:	sub    DWORD PTR [eax],ebp
  4201bb:	loop   0x420216
  4201bd:	or     ebp,eax
  4201bf:	add    esp,ebp
  4201c1:	lds    esp,FWORD PTR [edx+0x41dbd802]
  4201c7:	and    cl,dl
  4201c9:	scas   al,BYTE PTR es:[edi]
  4201ca:	sbb    BYTE PTR [edx],ah
  4201cc:	cwde   
  4201cd:	popf   
  4201ce:	mov    ?,WORD PTR [ebx-0x1b]
  4201d1:	add    esi,DWORD PTR [eax-0x72e0d164]
  4201d7:	stc    
  4201d8:	enter  0xd5bb,0x4c
  4201dc:	add    BYTE PTR [ebx-0x342f2104],ch
  4201e2:	sub    DWORD PTR [edx-0x6866e30d],0xaf3c008f
  4201ec:	in     ax,dx
  4201ee:	add    eax,0xd1b20008
  4201f3:	fist   WORD PTR [ebx]
  4201f5:	ror    BYTE PTR gs:[eax+0x50],0x0
  4201fa:	mov    al,0x53
  4201fc:	mov    bl,0xcb
  4201fe:	rcr    dl,cl
  420200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420202:	add    esp,eax
  420204:	loop   0x42021f
  420206:	and    DWORD PTR [eax-0x30976f40],0x4a
  42020d:	add    BYTE PTR [ecx+edi*8+0x6780d9b8],bl
  420214:	and    ebp,ecx
  420216:	add    BYTE PTR [edi+0x4c],dl
  420219:	ss pop ebx
  42021b:	jb     0x4201ba
  42021d:	mov    esp,eax
  42021f:	sbb    al,0xc5
  420221:	aam    0x12
  420223:	xchg   DWORD PTR [ebx-0x4b],eax
  420226:	push   esi
  420227:	mov    ds:0xd0d3f60b,eax
  42022c:	call   0x1329b70
  420231:	pop    eax
  420232:	push   es
  420233:	sbb    al,BYTE PTR [ebx+ebp*8]
  420236:	cmp    edx,DWORD PTR [ebx-0x1f]
  420239:	cmp    eax,0xdc8e022a
  42023e:	loop   0x4201ec
  420240:	ret    
  420241:	nop
  420242:	(bad)  
  420243:	mov    cl,ch
  420245:	xchg   ebx,eax
  420246:	aaa    
  420247:	cld    
  420248:	xchg   edx,eax
  420249:	jge    0x4202a3
  42024b:	inc    eax
  42024c:	out    dx,eax
  42024d:	add    BYTE PTR [eax+0x1e],cl
  420250:	popf   
  420251:	mov    esp,0x772c5da7
  420256:	rol    DWORD PTR [eax],1
  420258:	pop    ss
  420259:	dec    esi
  42025a:	xor    bh,BYTE PTR [edi+0x7b]
  42025d:	or     bh,BYTE PTR [ecx]
  42025f:	add    al,0x0
  420261:	outs   dx,BYTE PTR ds:[esi]
  420262:	ins    BYTE PTR es:[edi],dx
  420263:	ret    0xba43
  420266:	dec    eax
  420267:	jp     0x4202e1
  420269:	pop    es
  42026a:	imul   esi,DWORD PTR [esi+esi*2-0x46df4796],0xffffffe6
  420272:	inc    edi
  420273:	pushf  
  420274:	add    BYTE PTR [esi],cl
  420276:	cmc    
  420277:	or     esp,DWORD PTR [eax+esi*4]
  42027a:	dec    ebx
  42027b:	cmp    bh,0xe
  42027e:	into   
  42027f:	cld    
  420280:	mov    ch,0xd8
  420282:	add    BYTE PTR [ecx-0x63],bl
  420285:	out    0xed,eax
  420287:	cdq    
  420288:	add    DWORD PTR [edx-0x29],esi
  42028b:	inc    edi
  42028c:	aaa    
  42028d:	sbb    DWORD PTR ds:0xd0dae47c,edx
  420293:	add    al,dh
  420295:	cwde   
  420296:	sbb    bl,BYTE PTR [ebx]
  420298:	mov    ah,0xd9
  42029a:	xchg   esi,eax
  42029b:	test   DWORD PTR ds:0x5f008b6f,edi
  4202a1:	mov    gs,WORD PTR [ecx-0x609902ae]
  4202a7:	add    bl,bl
  4202a9:	mov    eax,ds:0x6be0ddd
  4202ae:	mov    ebx,0xc8e014
  4202b3:	push   0x2b90438e
  4202b8:	jle    0x420265
  4202ba:	addr16 pop es
  4202bc:	psllq  mm3,QWORD PTR [edx+0x6a605f28]
  4202c3:	dec    esp
  4202c4:	(bad)  
  4202c5:	cmp    DWORD PTR [ecx],ecx
  4202c7:	mov    esp,0x804734f7
  4202cc:	jg     0x42028b
  4202ce:	mov    DWORD PTR [eax-0x5a8cffe9],esp
  4202d4:	(bad)  
  4202d6:	push   0x1bbf48
  4202db:	sub    eax,0xc6f3a29f
  4202e0:	int3   
  4202e1:	mov    ds:0xf02e002b,eax
  4202e6:	mov    esp,0x1c14b699
  4202eb:	imul   edi,DWORD PTR [ecx],0xffffff9d
  4202ee:	xor    al,BYTE PTR [eax+0x7abe6d5d]
  4202f4:	push   0xf903a156
  4202f9:	xor    eax,0x3395b99b
  4202fe:	lock aaa 
  420300:	ins    BYTE PTR es:[edi],dx
  420301:	rol    BYTE PTR [eax],0x4d
  420304:	test   eax,0xcd72487
  420309:	rol    ch,cl
  42030b:	sbb    eax,0x407eaace
  420310:	cld    
  420311:	es push esi
  420313:	xchg   ebp,eax
  420314:	mov    ecx,0xef5f0041
  420319:	pop    ss
  42031a:	xlat   BYTE PTR ds:[ebx]
  42031b:	arpl   WORD PTR [eax],sp
  42031d:	sti    
  42031e:	shl    eax,0xa5
  420321:	add    edx,esi
  420323:	mov    eax,ds:0x92aa3dfa
  420328:	mov    BYTE PTR [ebp-0x40ff5831],bl
  42032e:	mov    bh,0xc7
  420330:	cmp    al,0xf2
  420332:	jp     0x4202b8
  420334:	mov    eax,DWORD PTR [eax]
  420336:	inc    edi
  420337:	call   0x139c:0xad9ee402
  42033e:	add    BYTE PTR [ecx+0x4b019f49],cl
  420344:	or     DWORD PTR [edi-0x65abffab],edx
  42034a:	ins    DWORD PTR es:[edi],dx
  42034b:	xchg   esp,eax
  42034c:	cmp    DWORD PTR [esi-0x62],ebx
  42034f:	sub    BYTE PTR [ecx],cl
  420351:	push   cs
  420352:	dec    esp
  420353:	aaa    
  420354:	xchg   esi,eax
  420355:	sbb    BYTE PTR ds:0x10e586a8,0x7f
  42035c:	or     DWORD PTR [edi+ebp*2-0x68],ebx
  420360:	add    BYTE PTR [ebp-0x76],dl
  420363:	push   esp
  420364:	repz aas 
  420366:	aad    0x8c
  420368:	add    al,bl
  42036a:	jl     0x420349
  42036c:	iret   
  42036d:	mov    edi,0xea9e5b5
  420372:	imul   bl
  420374:	dec    ebx
  420375:	into   
  420376:	(bad)  
  420377:	int    0xa
  420379:	add    esi,eax
  42037b:	push   esi
  42037c:	mov    eax,0xe62c9ed2
  420381:	leave  
  420382:	ds push ecx
  420384:	sub    BYTE PTR [eax],al
  420386:	and    eax,0x1deb43ee
  42038b:	icebp  
  42038c:	mov    DWORD PTR [edx],0x7a90fe7f
  420392:	jmp    0x11e8:0xec3d6134
  420399:	xchg   DWORD PTR [edi],ebx
  42039b:	mov    dh,0x76
  42039d:	mov    al,BYTE PTR [eax-0x29]
  4203a0:	mov    ebx,0xe2b9ed27
  4203a5:	add    BYTE PTR [esi+0x40],cl
  4203a8:	(bad)  
  4203a9:	(bad)  
  4203aa:	fwait
  4203ab:	pop    esp
  4203ac:	xchg   edi,eax
  4203ad:	adc    eax,0x8073cb02
  4203b2:	cs dec eax
  4203b4:	rol    BYTE PTR [eax-0x72],0xc9
  4203b8:	dec    ecx
  4203b9:	add    ebx,DWORD PTR [ebp+0x40]
  4203bc:	fwait
  4203bd:	lock jo 0x4203a8
  4203c0:	iret   
  4203c1:	rcl    ch,1
  4203c3:	jne    0x4203c9
  4203c5:	add    BYTE PTR fs:[edi-0x7e],ah
  4203c9:	inc    esi
  4203ca:	jmp    0x420396
  4203cc:	cmp    eax,DWORD PTR [ecx]
  4203ce:	aaa    
  4203cf:	cmp    dh,BYTE PTR [ebp-0x3f6fff94]
  4203d5:	pop    edi
  4203d6:	lods   al,BYTE PTR ds:[esi]
  4203d7:	inc    ebx
  4203d8:	jns    0x42040e
  4203da:	add    BYTE PTR [edx-0x20c5f856],bl
  4203e0:	cwde   
  4203e1:	mov    al,BYTE PTR ds:0xa9671f01
  4203e7:	sub    DWORD PTR [eax-0x132312d6],0x69
  4203ee:	add    ebp,edx
  4203f0:	adc    ebp,DWORD PTR [edi-0x2a]
  4203f3:	(bad)  
  4203f4:	adc    eax,0xaf206bf8
  4203f9:	push   es
  4203fa:	xchg   edx,eax
  4203fb:	xchg   ebp,eax
  4203fc:	hlt    
  4203fd:	inc    ebp
  4203fe:	icebp  
  4203ff:	bound  eax,QWORD PTR [eax]
  420401:	rcr    BYTE PTR [esi],0x2b
  420404:	not    BYTE PTR [ebx]
  420406:	(bad)  
  420407:	cmc    
  420408:	and    al,0xf6
  42040a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42040b:	ds ss mov edx,0x10fe4580
  420412:	mov    bh,0x16
  420414:	jb     0x4203ac
  420416:	add    DWORD PTR [eax+0x4f399d7],eax
  42041c:	push   ebp
  42041d:	mov    ch,0x30
  42041f:	and    DWORD PTR [ebx],esi
  420421:	pop    es
  420422:	pop    esp
  420423:	mov    al,ds:0x90c89d50
  420428:	xchg   esp,eax
  420429:	dec    eax
  42042a:	int    0xf2
  42042c:	push   ds
  42042d:	jne    0x4203b2
  42042f:	push   cs
  420430:	sbb    al,0x7d
  420432:	add    BYTE PTR [ebx+0x6c],bh
  420435:	test   eax,0xfed14bc4
  42043a:	out    dx,eax
  42043b:	cmp    ch,BYTE PTR [edi]
  42043d:	in     eax,dx
  42043e:	popf   
  42043f:	shl    ebp,cl
  420441:	lahf   
  420442:	fld    QWORD PTR [eax]
  420444:	dec    esp
  420445:	mov    edx,0x3f315d57
  42044a:	add    BYTE PTR [edi-0xb9e1cea],ah
  420450:	adc    al,BYTE PTR [edi+0x4e9b00f1]
  420456:	(bad)  
  420457:	out    dx,al
  420458:	xchg   ebx,eax
  420459:	outs   dx,BYTE PTR ds:[esi]
  42045a:	push   esp
  42045b:	and    eax,DWORD PTR [edi]
  42045d:	mov    ecx,0x8382b131
  420462:	loopne 0x4204ab
  420464:	xchg   esp,eax
  420465:	cs push ds
  420467:	add    cl,al
  420469:	dec    esi
  42046a:	shl    DWORD PTR [edx+0x3346f23f],1
  420470:	pop    es
  420471:	add    DWORD PTR [edx],0x607d26cd
  420477:	and    ecx,DWORD PTR [ecx-0x7dffd4e0]
  42047d:	dec    ecx
  42047e:	(bad)  
  420480:	add    eax,0x1b53637
  420485:	sub    DWORD PTR [esi+0x1f],0x3d5ec480
  42048c:	call   0xe47e5c4d
  420491:	dec    edx
  420492:	sub    ah,0xe8
  420495:	add    DWORD PTR [esi-0x5fb03f0e],edi
  42049b:	mov    ch,0x0
  42049d:	dec    ebx
  42049e:	call   0xa688:0xa3394370
  4204a5:	cwde   
  4204a6:	push   esp
  4204a7:	pop    ds
  4204a8:	mov    edx,0x291f318a
  4204ad:	and    DWORD PTR [edi],0xdf97cac2
  4204b3:	shl    BYTE PTR ds:0x91dd58b7,0x3
  4204ba:	shl    DWORD PTR [edx],0x4e
  4204bd:	fistp  DWORD PTR [eax-0x60]
  4204c0:	fwait
  4204c1:	push   edi
  4204c2:	fiadd  DWORD PTR ds:0x52e0d8e3
  4204c8:	mov    edi,0xd903bb16
  4204cd:	pop    edi
  4204ce:	outs   dx,BYTE PTR ds:[esi]
  4204cf:	cld    
  4204d0:	shl    BYTE PTR [edi+0x4b],0x94
  4204d4:	aas    
  4204d5:	xor    DWORD PTR [eax+eax*4+0x571a963e],ebx
  4204dc:	enter  0x4e6a,0x3
  4204e0:	mul    ch
  4204e2:	repz fdiv st(0),st
  4204e5:	pusha  
  4204e6:	enter  0xb393,0xfc
  4204ea:	add    ah,dl
  4204ec:	mov    al,ds:0x10e45485
  4204f1:	mov    ecx,0xaf5c00cd
  4204f6:	test   BYTE PTR [edx],ah
  4204f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204f9:	xchg   edi,esp
  4204fb:	inc    BYTE PTR [eax]
  4204fd:	cmp    BYTE PTR [eax+eiz*1+0x4a1861ce],0x9e
  420505:	pop    ds
  420506:	sub    bl,BYTE PTR [ebx-0x721f7b77]
  42050c:	rol    BYTE PTR ss:[eax],0xc3
  420510:	subps  xmm0,XMMWORD PTR [eax]
  420513:	sar    DWORD PTR [edi-0x34],1
  420516:	sar    DWORD PTR [ecx+ebp*1+0x7e],cl
  42051a:	dec    ebp
  42051b:	add    edi,edi
  42051d:	out    0x28,eax
  42051f:	test   al,0xa0
  420521:	pop    ebp
  420522:	dec    ecx
  420523:	rcl    BYTE PTR [edx-0x20],0x0
  420527:	imul   esp,DWORD PTR [ecx+0x3e0747b0],0x70
  42052e:	call   0x5413:0x651f551c
  420535:	add    ah,dh
  420537:	mov    BYTE PTR [ebp+0x27],ch
  42053a:	sti    
  42053b:	jne    0x42053d
  42053d:	dec    DWORD PTR [edx-0x63]
  420540:	rol    ebx,cl
  420542:	xor    DWORD PTR [edx-0x76],esi
  420545:	paddb  mm7,QWORD PTR [eax]
  420548:	nop
  420549:	outs   dx,BYTE PTR ds:[esi]
  42054a:	pusha  
  42054b:	jmp    0x42052c
  42054d:	adc    eax,0xc000ee05
  420552:	je     0x420500
  420554:	pop    ebp
  420555:	ins    BYTE PTR es:[edi],dx
  420556:	das    
  420557:	retf   
  420558:	call   0xdf4e:0x14565e00
  42055f:	add    dl,dl
  420561:	push   cs
  420562:	in     al,dx
  420563:	push   eax
  420564:	add    BYTE PTR [ecx+0x2ce073eb],ch
  42056a:	(bad)  
  42056b:	sub    ebx,DWORD PTR [ecx+0x58]
  42056e:	mov    eax,ds:0xf3580035
  420573:	out    dx,eax
  420574:	jbe    0x4205d2
  420576:	loop   0x42056c
  420578:	mov    al,ds:0x26f0ed9b
  42057d:	cli    
  42057e:	cmp    DWORD PTR [ecx+0x2],eax
  420581:	adc    DWORD PTR [ecx+0x6a],edx
  420584:	push   edi
  420585:	pusha  
  420586:	jae    0x4205a3
  420588:	xchg   ebx,eax
  420589:	es dec eax
  42058b:	addr16 clc 
  42058d:	add    BYTE PTR [ebp-0x52500c70],bl
  420593:	clc    
  420594:	add    BYTE PTR ds:0x6fbb3fef,cl
  42059a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42059b:	xor    DWORD PTR [ecx],ecx
  42059d:	add    BYTE PTR [esi],bh
  42059f:	jl     0x4205f4
  4205a1:	popa   
  4205a2:	dec    eax
  4205a3:	inc    eax
  4205a4:	xchg   DWORD PTR [ebx],edi
  4205a6:	add    BYTE PTR [edx],al
  4205a8:	not    BYTE PTR [edx-0x17]
  4205ab:	hlt    
  4205ac:	into   
  4205ad:	rcr    DWORD PTR [ecx+0x0],0x50
  4205b1:	(bad)  [ebx]
  4205b3:	cmp    al,0x4b
  4205b5:	test   al,0x5e
  4205b7:	inc    esp
  4205b8:	add    BYTE PTR [eax-0x48],bh
  4205bb:	pusha  
  4205bc:	mov    BYTE PTR [eax+0x1f4aed1],dl
  4205c2:	mov    esp,0x924fb2ef
  4205c7:	data16 sub al,ch
  4205ca:	popa   
  4205cb:	imul   eax,DWORD PTR [edx],0x1c
  4205ce:	stos   DWORD PTR es:[edi],eax
  4205cf:	out    0xf1,eax
  4205d1:	sub    eax,0x85d1c0ed
  4205d6:	ins    DWORD PTR es:[edi],dx
  4205d7:	add    BYTE PTR [ebp-0x41f499a3],ch
  4205dd:	mov    cl,0x8f
  4205df:	push   edx
  4205e0:	add    ah,cl
  4205e2:	cdq    
  4205e3:	ret    
  4205e4:	xchg   edi,eax
  4205e5:	cmp    eax,0xb0c05b9a
  4205ea:	iret   
  4205eb:	add    cl,bh
  4205ed:	dec    ecx
  4205ee:	cmp    esi,ebx
  4205f0:	nop
  4205f1:	mov    eax,0xfe67a466
  4205f6:	xor    BYTE PTR [edi-0x40],0x7b
  4205fa:	dec    edx
  4205fb:	imul   esp,DWORD PTR [edx-0x5f995e9],0x0
  420602:	cdq    
  420603:	sbb    BYTE PTR [esi-0x17],bl
  420606:	dec    esp
  420607:	fild   WORD PTR [eax]
  420609:	add    DWORD PTR [esi+0x7b],eax
  42060c:	and    cl,BYTE PTR [ecx-0x38]
  42060f:	mov    dl,0xba
  420611:	add    DWORD PTR [edi],edi
  420613:	je     0x42059a
  420615:	push   esi
  420616:	lahf   
  420617:	adc    eax,0x8812f804
  42061c:	add    ebp,DWORD PTR [edx-0x52]
  42061f:	sbb    DWORD PTR [ebx+0x68],ebp
  420622:	inc    bh
  420624:	loopne 0x420694
  420626:	sar    BYTE PTR [eax+0x7e7dd2],0x3a
  42062d:	sbb    esi,DWORD PTR [edi-0x23]
  420630:	xchg   edi,eax
  420631:	xchg   bl,dl
  420633:	int3   
  420634:	add    BYTE PTR [eax],bh
  420636:	sti    
  420637:	and    ch,BYTE PTR [ebp+0x40a86d92]
  42063d:	call   0x542806d3
  420642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420643:	je     0x4206ae
  420645:	add    DWORD PTR [ecx+0x21dc3c10],ebp
  42064b:	cld    
  42064c:	add    DWORD PTR [ebx+eax*4],esp
  42064f:	sub    al,0xc9
  420651:	aad    0xb3
  420653:	adc    eax,edi
  420655:	sub    edx,DWORD PTR [ebx*1-0x7fb175fa]
  42065c:	jge    0x420609
  42065e:	pop    ebp
  42065f:	and    al,0x71
  420661:	xor    eax,0x7f72d8f2
  420666:	add    ch,cl
  420668:	mov    edi,0x5f2dfded
  42066d:	aad    0x79
  42066f:	rsm    
  420671:	sub    al,0xe1
  420673:	cdq    
  420674:	inc    ecx
  420675:	(bad)  
  420676:	adc    BYTE PTR [ebx],ch
  420678:	sbb    al,0xc8
  42067a:	jb     0x42060b
  42067c:	add    al,bl
  42067e:	and    esi,ebp
  420680:	sbb    bl,BYTE PTR [edi+0x7d4cf6]
  420686:	xchg   esi,eax
  420687:	add    DWORD PTR [edi+0x76],0x43
  42068b:	fs adc eax,0x4b200e3e
  420691:	pop    ebp
  420692:	aaa    
  420693:	sub    ch,0x68
  420696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420697:	lock stc 
  420699:	add    dh,dl
  42069b:	xchg   bh,dl
  42069d:	sar    eax,cl
  42069f:	int3   
  4206a0:	rcr    BYTE PTR [ecx+0x43968d0e],0xbc
  4206a7:	cs jmp 0x420658
  4206aa:	aam    0xa0
  4206ac:	and    eax,0x8bd1a4f3
  4206b1:	pop    es
  4206b2:	std    
  4206b3:	loopne 0x420639
  4206b5:	adc    BYTE PTR [ecx-0x70],0xaa
  4206b9:	fidiv  DWORD PTR [ecx]
  4206bb:	add    BYTE PTR cs:[edx],cl
  4206be:	cmp    edi,DWORD PTR [ebx+ebx*1-0x7b]
  4206c2:	call   0xa4424b52
  4206c7:	xchg   esi,eax
  4206c8:	push   eax
  4206c9:	sahf   
  4206ca:	pop    ebx
  4206cb:	mov    bl,0xac
  4206cd:	loope  0x4206cf
  4206cf:	adc    al,0xd2
  4206d1:	mov    dh,0x26
  4206d3:	sbb    cl,BYTE PTR [ecx-0x79ff7ccf]
  4206d9:	cli    
  4206da:	cwde   
  4206db:	retf   0xeb4d
  4206de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206df:	jecxz  0x42071c
  4206e1:	popf   
  4206e2:	pop    ss
  4206e3:	cmp    eax,0x1dc1df3
  4206e8:	and    al,0xf
  4206eb:	mov    dh,BYTE PTR [edx-0x38fed99c]
  4206f1:	(bad)  
  4206f2:	iret   
  4206f3:	push   eax
  4206f4:	inc    ebp
  4206f5:	push   esp
  4206f6:	out    0xe0,al
  4206f8:	ror    DWORD PTR [esi],cl
  4206fa:	push   ss
  4206fb:	push   ebp
  4206fc:	jmp    0x4206b5
  4206fe:	add    BYTE PTR [ebx],cl
  420700:	imul   esi,DWORD PTR [eax+eiz*8],0xf673ccfa
  420707:	mov    al,0x91
  420709:	shl    BYTE PTR [eax],0x30
  42070c:	mov    dl,0x1d
  42070e:	rcl    ch,cl
  420710:	add    BYTE PTR [edi],bl
  420712:	mov    ah,0x33
  420714:	push   0x29
  420716:	cdq    
  420717:	mov    esi,0x78d0009f
  42071c:	jo     0x420711
  42071e:	mov    dl,0xc3
  420720:	mov    bl,0xd9
  420722:	add    eax,DWORD PTR [esi+0x3c]
  420725:	enter  0x8bc4,0xab
  420729:	cwde   
  42072a:	nop
  42072b:	sub    dl,BYTE PTR [edx+0xdf9a800]
  420731:	leave  
  420732:	mov    eax,ds:0x704904
  420737:	push   esi
  420738:	jecxz  0x4206e0
  42073a:	pop    ds
  42073b:	jle    0x42078b
  42073d:	push   cs
  42073e:	xchg   edx,eax
  42073f:	add    BYTE PTR [edi-0x75c1cff7],ah
  420745:	fcmovb st,st(4)
  420747:	pop    ebx
  420748:	cmp    BYTE PTR [ebx],ah
  42074a:	scas   al,BYTE PTR es:[edi]
  42074b:	add    dh,ch
  42074d:	pusha  
  42074e:	dec    ebp
  42074f:	pop    ds
  420750:	sub    dl,BYTE PTR [esi-0x6630f1c6]
  420756:	pop    esi
  420757:	arpl   WORD PTR [eax-0x2677b94],sp
  42075d:	fmul   DWORD PTR [edi]
  42075f:	cmp    edx,DWORD PTR [esi+0x74]
  420762:	mov    ebx,0xd5f5f960
  420767:	sti    
  420768:	dec    edx
  420769:	add    BYTE PTR [edx+eax*2-0x26],bh
  42076d:	xor    BYTE PTR [esi+0x73],ch
  420770:	stos   BYTE PTR es:[edi],al
  420771:	jne    0x420733
  420773:	ficomp DWORD PTR [ecx]
  420775:	icebp  
  420776:	xor    eax,0xe90038c5
  42077b:	pop    eax
  42077c:	adc    ebp,ebx
  42077e:	mov    esi,0x7e6a83cf
  420783:	xchg   edi,eax
  420784:	jl     0x4207da
  420786:	add    esp,DWORD PTR [edi-0x40b287f2]
  42078c:	jae    0x42075e
  42078e:	mov    edx,esp
  420790:	(bad)  
  420792:	and    dh,ah
  420794:	cmp    edi,DWORD PTR [esi]
  420796:	das    
  420797:	dec    edx
  420798:	add    BYTE PTR [ebx+0x639c6810],0xa8
  42079f:	ret    0x620e
  4207a2:	lods   eax,DWORD PTR ds:[esi]
  4207a3:	shl    BYTE PTR [edi],1
  4207a5:	loopne 0x4207e9
  4207a7:	(bad)  
  4207a8:	not    BYTE PTR [edx+edx*4]
  4207ab:	add    BYTE PTR [esi-0x35c976d5],dl
  4207b1:	ja     0x4207e7
  4207b3:	int3   
  4207b4:	add    BYTE PTR [esi-0x1e],dl
  4207b7:	shr    eax,cl
  4207b9:	sub    eax,0x93823
  4207be:	sbb    esi,ecx
  4207c0:	test   DWORD PTR [eax-0x5d741483],0xef0346e8
  4207ca:	test   bh,al
  4207cc:	out    0x40,eax
  4207ce:	mov    WORD PTR [ebx-0x1f87477b],?
  4207d4:	scas   eax,DWORD PTR es:[edi]
  4207d5:	sbb    eax,0xa9c657
  4207da:	repnz mov edi,0x1b6f381e
  4207e0:	xor    BYTE PTR [edi+0x6a],bh
  4207e3:	mov    ah,0x55
  4207e5:	aad    0x48
  4207e7:	add    al,ah
  4207e9:	mov    eax,0x7305d7fe
  4207ee:	repnz (bad) 
  4207f0:	jmp    0x6874:0x8fab0056
  4207f7:	ror    DWORD PTR [esi+edi*2-0x45],cl
  4207fb:	jb     0x4207ce
  4207fd:	add    BYTE PTR [edi-0x3c],bl
  420800:	xor    BYTE PTR [esi+0x5d],0xa3
  420804:	fmul   QWORD PTR [ebp+0x1dc85500]
  42080a:	in     al,0xb3
  42080c:	jnp    0x420866
  42080e:	pop    ecx
  42080f:	in     al,dx
  420810:	mov    DWORD PTR [eax],0x3f464ac2
  420816:	adc    ebx,0xfffffffd
  420819:	gs pop es
  42081b:	ins    BYTE PTR es:[edi],dx
  42081c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42081d:	push   ds
  42081e:	loop   0x420822
  420820:	and    cl,cl
  420822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420823:	xor    ch,BYTE PTR ds:0xa3119d00
  420829:	push   esp
  42082a:	push   eax
  42082b:	(bad)  
  42082c:	cmp    cl,BYTE PTR [eax-0x75b48900]
  420832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420833:	and    eax,0xb5ac4c6
  420838:	retf   
  420839:	cmp    BYTE PTR [esi+0x39],0x80
  42083d:	or     DWORD PTR [ebx],ebp
  42083f:	jmp    DWORD PTR [ebx+esi*1]
  420842:	add    BYTE PTR [ecx+edx*8],al
  420845:	icebp  
  420846:	sbb    BYTE PTR [eax+0x46847be],ah
  42084c:	je     0x420865
  42084e:	sub    dh,BYTE PTR [ecx-0xda7fe2]
  420854:	push   edx
  420855:	push   ebp
  420856:	push   cs
  420857:	cli    
  420858:	sbb    ecx,DWORD PTR [edi-0x6c7f3877]
  42085e:	push   eax
  42085f:	(bad)  
  420860:	ins    DWORD PTR es:[edi],dx
  420861:	mov    ch,0x3b
  420863:	add    ah,dh
  420865:	adc    eax,0xe1add31
  42086a:	leave  
  42086b:	mov    al,BYTE PTR [eax]
  42086d:	jge    0x420822
  42086f:	cmp    BYTE PTR [esi+0x79],ch
  420872:	gs inc eax
  420874:	pop    es
  420875:	add    BYTE PTR [edx+edi*8],al
  420878:	shl    DWORD PTR [ecx+0x2308816c],0x3c
  42087f:	jbe    0x4208a7
  420881:	sub    BYTE PTR [ebx-0x3be6583a],0xf9
  420888:	add    al,BYTE PTR [eax]
  42088a:	arpl   bp,si
  42088c:	xlat   BYTE PTR ds:[ebx]
  42088d:	aas    
  42088e:	mov    gs,WORD PTR [esi]
  420890:	repnz add ch,BYTE PTR [bx+di]
  420894:	mov    eax,0x47c397eb
  420899:	inc    eax
  42089a:	mov    edi,0xcb0028b2
  42089f:	ss mov bl,bl
  4208a2:	rcr    DWORD PTR [edx],1
  4208a4:	and    al,0x3f
  4208a6:	add    BYTE PTR [eax],bl
  4208a8:	cmc    
  4208a9:	(bad)  
  4208aa:	in     al,dx
  4208ab:	aam    0xbe
  4208ad:	sahf   
  4208ae:	adc    cl,BYTE PTR [esi]
  4208b0:	add    DWORD PTR [ecx],edx
  4208b2:	dec    edi
  4208b3:	cli    
  4208b4:	add    BYTE PTR [edx+0x24312539],dh
  4208ba:	cmp    al,0x51
  4208bc:	dec    ebx
  4208bd:	adc    bl,0x23
  4208c0:	call   0x1c7c:0x66e17c38
  4208c7:	add    ecx,DWORD PTR [edi+edx*4-0x3188a6c2]
  4208ce:	rcr    ch,0xca
  4208d1:	arpl   WORD PTR [eax],ax
  4208d3:	xchg   BYTE PTR [eax-0x46f5714f],dh
  4208d9:	inc    edi
  4208da:	mov    eax,DWORD PTR [ecx]
  4208dc:	jns    0x420865
  4208de:	scas   al,BYTE PTR es:[edi]
  4208df:	out    dx,al
  4208e0:	adc    BYTE PTR [edi+0x40],0x30
  4208e4:	dec    ecx
  4208e5:	mov    WORD PTR [eax],es
  4208e7:	pusha  
  4208e8:	rcr    BYTE PTR ds:0x591abb22,1
  4208ee:	mov    DWORD PTR [eax],eax
  4208f0:	int3   
  4208f1:	daa    
  4208f2:	in     eax,0x74
  4208f4:	scas   al,BYTE PTR es:[edi]
  4208f5:	(bad)  
  4208f6:	imul   esi,edi,0x13
  4208f9:	push   esp
  4208fa:	inc    eax
  4208fb:	test   al,0x0
  4208fd:	xor    al,dh
  4208ff:	jl     0x42093f
  420901:	in     al,dx
  420902:	jne    0x420905
  420904:	mov    edi,0x39f15706
  420909:	and    al,0x5d
  42090b:	jmp    0xd20579a9
  420910:	rsm    
  420912:	(bad)  
  420913:	cs in  al,0x80
  420916:	lods   eax,DWORD PTR ds:[esi]
  420917:	daa    
  420918:	fisttp QWORD PTR [ecx]
  42091a:	repnz add DWORD PTR [edx+0x5e03e722],esi
  420921:	scas   al,BYTE PTR es:[edi]
  420922:	jno    0x420994
  420924:	pop    eax
  420925:	push   0x5ca441c
  42092a:	add    BYTE PTR [esi],cl
  42092c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42092d:	pop    esp
  42092e:	inc    esi
  42092f:	xor    DWORD PTR [ecx+0x3a1e270f],0x44e9b
  420939:	and    DWORD PTR [esi-0x42],esi
  42093c:	int3   
  42093d:	in     al,0x38
  42093f:	xor    bl,BYTE PTR [eax-0x4a7c980]
  420945:	jno    0x420915
  420947:	and    al,0xb7
  420949:	add    edi,ebx
  42094b:	pop    ebp
  42094c:	loop   0x4209b9
  42094e:	mov    ah,0x7a
  420950:	and    ebp,eax
  420952:	inc    ecx
  420953:	dec    edi
  420954:	add    BYTE PTR [edi],al
  420956:	mov    BYTE PTR [eax+0x72],0x18
  42095a:	in     eax,dx
  42095b:	call   0x7b15:0x7e5000c0
  420962:	je     0x420990
  420964:	push   esi
  420965:	pop    edx
  420966:	add    BYTE PTR [edi+0x7cf502bf],cl
  42096c:	jns    0x420914
  42096e:	jmp    0x420970
  420970:	cmp    al,0xb0
  420972:	and    ecx,0xacfc229d
  420978:	add    BYTE PTR [ebp+0x5c],cl
  42097b:	sahf   
  42097c:	inc    di
  42097e:	adc    bh,BYTE PTR [edi+0x3f8003e]
  420984:	pusha  
  420985:	pushf  
  420986:	ins    BYTE PTR es:[edi],dx
  420987:	inc    edx
  420988:	int    0x95
  42098a:	add    BYTE PTR [edx],ah
  42098c:	jno    0x4209d8
  42098e:	shr    DWORD PTR [edx],cl
  420990:	lock test eax,0xa30c0079
  420996:	xor    al,0x91
  420998:	loopne 0x420940
  42099a:	jecxz  0x420a04
  42099c:	add    BYTE PTR [esi],ch
  42099e:	mov    ch,0x22
  4209a0:	push   edx
  4209a1:	jmp    0x1c08:0xfaf3077c
  4209a8:	repnz pop ecx
  4209aa:	add    al,BYTE PTR [eax+0x1b]
  4209ad:	inc    eax
  4209ae:	popf   
  4209af:	popa   
  4209b0:	xor    al,0xb0
  4209b2:	add    BYTE PTR [ebp+eax*1+0x1072afba],ch
  4209b9:	sbb    BYTE PTR [ecx+0xe],bl
  4209bc:	fwait
  4209bd:	cmp    al,0xa2
  4209bf:	xlat   BYTE PTR ds:[ebx]
  4209c0:	and    BYTE PTR [ebx],0xeb
  4209c3:	ret    0xa7f2
  4209c6:	cli    
  4209c7:	sub    al,BYTE PTR [eax]
  4209c9:	jl     0x420961
  4209cb:	js     0x4209eb
  4209cd:	push   edi
  4209ce:	push   esi
  4209d0:	out    0x0,al
  4209d2:	pusha  
  4209d3:	or     DWORD PTR [eax],ebx
  4209d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209d6:	jp     0x4209b1
  4209d8:	and    eax,DWORD PTR [esi+0x1c]
  4209db:	jl     0x420a21
  4209dd:	jg     0x420a1e
  4209df:	add    BYTE PTR [ebx-0x16],dh
  4209e2:	loop   0x4209ec
  4209e4:	pop    es
  4209e5:	mov    al,ds:0x71e1006c
  4209ea:	dec    ebp
  4209eb:	push   cs
  4209ec:	jl     0x420a2d
  4209ee:	aad    0x78
  4209f0:	add    BYTE PTR [ebp+0x22903a6b],cl
  4209f6:	loop   0x4209f3
  4209f8:	push   edi
  4209f9:	add    BYTE PTR [ecx+ebx*4-0x37],ch
  4209fd:	push   cs
  4209fe:	add    bh,cl
  420a00:	mov    dh,0x12
  420a02:	add    BYTE PTR [ebx+0x31],cl
  420a05:	int    0xf3
  420a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a08:	inc    eax
  420a09:	stos   DWORD PTR es:[edi],eax
  420a0a:	mov    ah,0x0
  420a0c:	mov    ds:0x5329cab0,al
  420a11:	icebp  
  420a12:	xchg   ecx,eax
  420a13:	xchg   esp,eax
  420a14:	add    BYTE PTR [ebp-0x16],dh
  420a17:	xor    DWORD PTR [ebx],ecx
  420a19:	jbe    0x420a89
  420a1b:	int3   
  420a1c:	leave  
  420a1d:	add    BYTE PTR [edx+0x2f],dh
  420a20:	push   es
  420a21:	jnp    0x420a07
  420a23:	psubq  mm2,QWORD PTR [esi]
  420a26:	add    BYTE PTR [edx+0x62c3b8b2],ch
  420a2c:	in     eax,0x2b
  420a2e:	lods   al,BYTE PTR ds:[esi]
  420a2f:	add    BYTE PTR [eax+0x6048da39],cl
  420a35:	pop    es
  420a36:	inc    ebp
  420a37:	sbb    al,BYTE PTR [eax]
  420a39:	sub    cl,BYTE PTR [ebp+0x58269524]
  420a3f:	cmc    
  420a40:	xor    BYTE PTR [ecx-0x7c],dh
  420a43:	add    BYTE PTR [edi-0x7ae1a1c0],al
  420a49:	adc    al,0xa0
  420a4b:	cs add ch,cl
  420a4e:	adc    esp,ebx
  420a50:	jno    0x420a78
  420a52:	dec    ebx
  420a53:	loop   0x420a7c
  420a55:	add    BYTE PTR [ebx],cl
  420a57:	cwde   
  420a58:	adc    bl,dh
  420a5a:	jmp    0x1fab0d60
  420a5f:	rol    DWORD PTR [ebp-0x5caf7fdf],0x4
  420a66:	out    dx,al
  420a67:	pop    ebx
  420a68:	push   ecx
  420a69:	adc    al,0x10
  420a6b:	jnp    0x420ad7
  420a6d:	lea    eax,[ecx]
  420a6f:	mov    al,0x33
  420a71:	out    dx,eax
  420a72:	and    dl,bh
  420a74:	mul    DWORD PTR [eax]
  420a76:	jne    0x420abb
  420a78:	add    ah,ch
  420a7a:	and    dl,BYTE PTR [eax+0x5e]
  420a7d:	pushf  
  420a7e:	ja     0x420a49
  420a80:	adc    DWORD PTR [eax],eax
  420a82:	push   ebp
  420a83:	push   ss
  420a84:	rcl    BYTE PTR [edi+0x63f9678d],0x0
  420a8b:	les    eax,FWORD PTR [ebx-0x30]
  420a8e:	fild   DWORD PTR [edx+ebx*4-0x41f11147]
  420a95:	xchg   edx,eax
  420a96:	xchg   ebx,eax
  420a97:	int3   
  420a98:	out    dx,al
  420a99:	call   0x8741dd3f
  420a9e:	and    DWORD PTR [eax-0x6],0xf
  420aa2:	add    bl,ah
  420aa4:	fcomi  st,st(0)
  420aa6:	and    al,0x84
  420aa8:	pop    esi
  420aa9:	js     0x420b1d
  420aab:	cs nop
  420aad:	mov    BYTE PTR [eax],ah
  420aaf:	add    BYTE PTR [ebp-0x1ee54dc3],ah
  420ab5:	out    0x1f,al
  420ab7:	inc    esi
  420ab8:	xchg   ebp,eax
  420ab9:	sub    bl,BYTE PTR [esi+0x4a]
  420abc:	sub    BYTE PTR [ebp-0x25],0x1
  420ac0:	aam    0xf0
  420ac2:	add    DWORD PTR [eax],0xe
  420ac5:	inc    ecx
  420ac6:	clc    
  420ac7:	dec    edi
  420ac8:	xor    eax,DWORD PTR [edx]
  420aca:	xchg   esi,eax
  420acb:	fiadd  WORD PTR [eax]
  420acd:	push   esp
  420ace:	jp     0x420aca
  420ad0:	xchg   edi,eax
  420ad1:	fwait
  420ad2:	sbb    BYTE PTR [esp+ebx*2],dl
  420ad5:	jbe    0x420a81
  420ad7:	add    ah,al
  420ad9:	jmp    0x420b13
  420adb:	push   ss
  420adc:	or     dh,BYTE PTR [esi-0x47]
  420adf:	loope  0x420ae2
  420ae1:	ret    0x571c
  420ae4:	sahf   
  420ae5:	sti    
  420ae6:	lds    ecx,FWORD PTR [esp+ebx*8-0x11e3b2ee]
  420aed:	cdq    
  420aee:	cmc    
  420aef:	inc    eax
  420af0:	and    DWORD PTR [edx+0x6948e4f0],esi
  420af6:	add    dh,ah
  420af8:	and    eax,0x6733c47a
  420afd:	jl     0x420b57
  420aff:	add    BYTE PTR [edi+0x2a],bh
  420b02:	cmc    
  420b03:	jnp    0x420aee
  420b05:	retf   0x8712
  420b08:	add    dl,BYTE PTR [edi+ecx*1-0xeb92153]
  420b0f:	loopne 0x420ad9
  420b11:	xor    ah,dh
  420b13:	add    BYTE PTR [esi],dl
  420b15:	mov    ds:0x9deda9a5,eax
  420b1a:	in     al,0xa8
  420b1c:	add    BYTE PTR [ebp+0x403e11ab],al
  420b22:	xlat   BYTE PTR ds:[ebx]
  420b23:	push   0x2ea60084
  420b28:	fucom  st(2)
  420b2a:	je     0x420b91
  420b2c:	push   ebx
  420b2d:	pusha  
  420b2e:	cli    
  420b2f:	xor    eax,0x2f0791f
  420b34:	inc    ecx
  420b35:	popf   
  420b36:	call   FWORD PTR [ebx]
  420b38:	addr16 push edi
  420b3a:	cld    
  420b3b:	and    DWORD PTR [eax+0x1f],edi
  420b3e:	sbb    edx,0x66
  420b41:	xchg   ebx,eax
  420b42:	repnz inc DWORD PTR [ecx]
  420b45:	arpl   WORD PTR [ebx-0x14],bx
  420b48:	inc    edi
  420b49:	inc    ebx
  420b4a:	fsub   DWORD PTR [ecx+0x4a]
  420b4d:	(bad)  
  420b4f:	or     al,0x67
  420b51:	stos   BYTE PTR es:[edi],al
  420b52:	loopne 0x420b7c
  420b54:	inc    eax
  420b55:	pop    DWORD PTR [ebx+0x57e1008e]
  420b5b:	and    eax,0xcc65b699
  420b60:	fisttp WORD PTR [esi]
  420b62:	das    
  420b63:	adc    al,0x89
  420b65:	jmp    0xd97cdb2a
  420b6a:	add    BYTE PTR cs:[ebx],0x46
  420b6e:	jle    0x420b02
  420b70:	pushf  
  420b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b72:	and    al,ah
  420b74:	imul   edx,DWORD PTR [ebp+0x27ce0302],0xffffffb4
  420b7b:	fld    st(6)
  420b7d:	ins    BYTE PTR es:[edi],dx
  420b7e:	mov    BYTE PTR [ecx],dh
  420b80:	pop    edi
  420b81:	ret    
  420b82:	jp     0x420b8c
  420b84:	pcmpeqb mm7,QWORD PTR [eax+0x49]
  420b88:	mov    eax,esp
  420b8a:	jo     0x420bb6
  420b8c:	mov    ecx,0x1700b4a3
  420b91:	nop
  420b92:	int3   
  420b93:	cmp    al,0x2c
  420b95:	outs   dx,BYTE PTR ds:[esi]
  420b96:	test   eax,0x794400b0
  420b9b:	lods   eax,DWORD PTR ds:[esi]
  420b9c:	(bad)  
  420b9e:	std    
  420b9f:	and    DWORD PTR [ecx],esi
  420ba1:	or     edi,DWORD PTR [edx-0x7fea0186]
  420ba7:	sbb    eax,0x681186fa
  420bac:	idiv   eax
  420bae:	mov    cl,0xb6
  420bb0:	add    BYTE PTR [esp+edx*2],al
  420bb3:	sbb    bl,BYTE PTR [ecx+0xc820194]
  420bb9:	add    al,ah
  420bbb:	jle    0x420b6c
  420bbd:	jnp    0x420be7
  420bbf:	add    edx,DWORD PTR ss:[esi+0x7]
  420bc3:	cld    
  420bc4:	cmp    al,cl
  420bc6:	add    eax,0x48215fc6
  420bcb:	mov    al,0x61
  420bcd:	xchg   edx,eax
  420bce:	hlt    
  420bcf:	push   0x7a
  420bd1:	add    BYTE PTR [esi+0x3729603a],dh
  420bd7:	test   eax,0xff0039c2
  420bdc:	(bad)  
  420bdd:	mov    DWORD PTR [esi],0xb69e4af
  420be3:	add    dl,bh
  420be5:	push   cs
  420be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420be7:	or     eax,0xe11314d6
  420bec:	add    DWORD PTR [ecx+0x5d],eax
  420bef:	xor    BYTE PTR [esp+ebx*8-0x3023445b],0x5e
  420bf7:	add    DWORD PTR [edi-0x41f968c3],esi
  420bfd:	add    DWORD PTR [eax+eiz*1+0x4a00d4a2],eax
  420c04:	adc    ecx,DWORD PTR [ebx]
  420c06:	dec    esi
  420c07:	push   edi
  420c08:	sbb    dh,BYTE PTR [esi]
  420c0a:	or     DWORD PTR ds:0x6500fa10,edi
  420c10:	push   cs
  420c11:	in     al,dx
  420c12:	jno    0x420b94
  420c14:	push   es
  420c15:	rol    BYTE PTR [eax],0x88
  420c18:	pop    esi
  420c19:	in     eax,dx
  420c1a:	push   ds
  420c1b:	pop    edi
  420c1d:	dec    esp
  420c1e:	jne    0x420c95
  420c20:	or     eax,0xfc28bd00
  420c25:	xor    al,0xea
  420c27:	mov    ebx,0x7c0056c5
  420c2c:	sahf   
  420c2d:	scas   al,BYTE PTR es:[edi]
  420c2e:	xor    ebx,DWORD PTR [ebp+0x1dee44f7]
  420c34:	ret    0x41da
  420c37:	inc    eax
  420c38:	fwait
  420c39:	clc    
  420c3a:	mov    dl,0xde
  420c3c:	mov    ecx,0xfe50063
  420c41:	and    DWORD PTR [ebp-0x7f],esp
  420c44:	pop    ss
  420c45:	lock inc DWORD PTR [eax]
  420c48:	lods   al,BYTE PTR ds:[esi]
  420c49:	test   eax,0x592890f2
  420c4f:	mov    BYTE PTR [ebx+0x44],bh
  420c52:	add    BYTE PTR ds:0xf466a336,bl
  420c58:	fbstp  TBYTE PTR [ebx]
  420c5a:	loopne 0x420c5f
  420c5c:	jb     0x420c4b
  420c5e:	jp     0x420c6e
  420c60:	push   0x810c8061
  420c65:	jno    0x420c67
  420c67:	scas   eax,DWORD PTR es:[edi]
  420c68:	fidivr WORD PTR [ebx-0x1]
  420c6b:	hlt    
  420c6c:	test   al,0x1a
  420c6e:	adc    eax,0x304f2100
  420c73:	jns    0x420c1e
  420c75:	int    0x2e
  420c77:	cdq    
  420c78:	add    bh,dl
  420c7a:	jmp    0x420c50
  420c7c:	(bad)
  420c81:	add    DWORD PTR [edx-0x3efba1de],edi
  420c87:	mov    al,0xa
  420c89:	fsub   QWORD PTR [ecx-0x22]
  420c8c:	add    BYTE PTR [esi-0x195af72d],cl
  420c92:	aad    0x18
  420c94:	je     0x420ca4
  420c96:	xchg   ebp,eax
  420c97:	dec    esi
  420c98:	lahf   
  420c99:	outs   dx,BYTE PTR ds:[esi]
  420c9a:	rcl    BYTE PTR [eax+0x7aaf3031],0x0
  420ca1:	sbb    DWORD PTR [esi],ecx
  420ca3:	retf   0xa42a
  420ca6:	pop    ebx
  420ca7:	fs jb  0x420cf2
  420caa:	xchg   edx,edx
  420cac:	add    DWORD PTR ds:[eax-0x361f0532],eax
  420cb3:	mov    ebp,edx
  420cb5:	xor    eax,DWORD PTR [eax]
  420cb7:	and    al,0xe1
  420cb9:	xchg   ebx,eax
  420cba:	cs mov bh,0xc8
  420cbd:	fbld   TBYTE PTR ds:0x564ebf00
  420cc3:	add    al,0xea
  420cc5:	(bad)  [eax-0x5d67f1b5]
  420ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ccc:	pop    ss
  420ccd:	add    BYTE PTR [edx],cl
  420ccf:	(bad)  
  420cd0:	jmp    0x420ccf
  420cd2:	push   ss
  420cd3:	add    ecx,edx
  420cd5:	adc    edi,eax
  420cd7:	out    0xa4,al
  420cd9:	mov    dl,al
  420cdb:	mov    ebp,0xdd00be1e
  420ce0:	pushf  
  420ce1:	fnstenv ds:0x515fe4e7
  420ce7:	push   ds
  420ce8:	xor    dl,BYTE PTR [esi+esi*2-0x45]
  420cec:	adc    BYTE PTR ds:0x6ec6b0ab,0x2c
  420cf3:	push   ds
  420cf4:	add    BYTE PTR [edi-0x67],cl
  420cf7:	std    
  420cf8:	sar    DWORD PTR [edi+0x1f],1
  420cfb:	in     eax,0xc1
  420cfd:	add    bh,bl
  420cff:	jmp    0x8955110f
  420d04:	ins    DWORD PTR es:[edi],dx
  420d05:	js     0x420d23
  420d07:	and    esi,DWORD PTR [esi]
  420d09:	sbb    eax,eax
  420d0b:	call   FWORD PTR ds:0x9bf7392
  420d11:	push   cs
  420d12:	ins    BYTE PTR es:[edi],dx
  420d13:	push   ds
  420d14:	mov    bl,0x46
  420d16:	and    BYTE PTR [ebp+0x66],0xc7
  420d1a:	call   0x66806c
  420d1f:	test   al,0x38
  420d21:	or     cl,BYTE PTR [esi-0x53]
  420d24:	cdq    
  420d25:	xor    eax,0xfae500c9
  420d2a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  420d2c:	xor    dl,BYTE PTR [edx+0x42008524]
  420d32:	jnp    0x420d55
  420d34:	(bad)  [ecx]
  420d36:	into   
  420d37:	xor    cl,ch
  420d39:	add    DWORD PTR [edi+0x41b94bfe],ebp
  420d3f:	cdq    
  420d40:	ins    DWORD PTR es:[edi],dx
  420d41:	int3   
  420d42:	or     cl,BYTE PTR [ebx+ecx*1]
  420d45:	mov    ebx,0x80edb1cf
  420d4a:	push   esi
  420d4b:	pop    ebp
  420d4c:	dec    ebp
  420d4d:	cmp    ebx,ebx
  420d4f:	hlt    
  420d50:	stc    
  420d51:	add    BYTE PTR [eax],ch
  420d53:	mov    DWORD PTR [edi-0x53cd54e3],0xa8ba0091
  420d5d:	outs   dx,BYTE PTR ds:[esi]
  420d5e:	leave  
  420d5f:	mov    al,0x12
  420d61:	mov    edi,DWORD PTR [esi]
  420d63:	push   cs
  420d64:	adc    al,0x2
  420d66:	cmp    al,BYTE PTR [ebx]
  420d68:	add    BYTE PTR [edx-0x369b97d],cl
  420d6e:	add    esi,ebx
  420d70:	jae    0x420dd4
  420d72:	mov    ecx,0x65f028ba
  420d77:	push   esi
  420d78:	jle    0x420d7a
  420d7a:	cmc    
  420d7b:	rcr    BYTE PTR [esi-0x7374de41],1
  420d81:	pop    ecx
  420d82:	add    BYTE PTR [ecx],bh
  420d84:	jno    0x420d25
  420d86:	in     eax,dx
  420d87:	xor    DWORD PTR [ebp+0x48],ecx
  420d8a:	popa   
  420d8b:	sbb    al,0x2f
  420d8d:	inc    edx
  420d8e:	add    eax,0xfa5f5c40
  420d93:	out    0x6a,al
  420d95:	bound  eax,QWORD PTR [eax]
  420d97:	mov    edx,0xf1ab6ef7
  420d9c:	inc    ebp
  420d9d:	clc    
  420d9e:	add    BYTE PTR fs:[edx-0x102dc7f4],bl
  420da5:	fcomip st,st(6)
  420da7:	dec    ebp
  420da8:	add    BYTE PTR [esi+edx*4],ch
  420dab:	and    eax,DWORD PTR [edx+0x4e]
  420dae:	pop    ss
  420daf:	aas    
  420db0:	fwait
  420db1:	je     0x420e2f
  420db3:	add    BYTE PTR [ecx],ch
  420db5:	xlat   BYTE PTR ds:[ebx]
  420db6:	xchg   BYTE PTR [ebp-0x4a77c6ce],cl
  420dbc:	cmp    al,0x9e
  420dbe:	iret   
  420dbf:	add    BYTE PTR [ebp+0x7a],dl
  420dc2:	out    0x1d,eax
  420dc4:	mov    eax,0x9900a423
  420dc9:	or     esi,edx
  420dcb:	xor    ch,BYTE PTR [edx+0x1d79a67]
  420dd1:	call   0x9bb57058
  420dd6:	sbb    bl,bh
  420dd8:	in     al,dx
  420dd9:	sub    eax,0x16a91feb
  420dde:	xchg   ebp,eax
  420ddf:	shl    DWORD PTR [edi],0x49
  420de2:	jle    0x420d9c
  420de4:	mov    esp,eax
  420de6:	cmc    
  420de7:	add    DWORD PTR [bx+di],eax
  420dea:	add    eax,0x729ecbcd
  420def:	sbb    DWORD PTR [ebx-0x15],eax
  420df2:	push   es
  420df3:	rcl    BYTE PTR [ecx-0x61],0x9
  420df7:	cld    
  420df8:	lock (bad) 
  420dfa:	ins    DWORD PTR es:[edi],dx
  420dfb:	add    BYTE PTR [ebp+0x4f47e512],cl
  420e01:	adc    al,0x81
  420e03:	inc    ebx
  420e04:	add    BYTE PTR [esi+0x2],ah
  420e07:	pop    ds
  420e08:	pop    ebp
  420e09:	xchg   esi,eax
  420e0a:	xor    DWORD PTR [edx+eax*8+0x1c],edi
  420e0e:	call   0xb54c:0x788030e6
  420e15:	retf   0xf348
  420e18:	mov    eax,0x998002e
  420e1d:	enter  0xfb6a,0xd0
  420e21:	mov    esp,0x9ae80992
  420e26:	jmp    0x420dc4
  420e28:	add    BYTE PTR [edi],cl
  420e2a:	outs   dx,BYTE PTR ds:[esi]
  420e2b:	jo     0x420df0
  420e2d:	fiadd  DWORD PTR [eax]
  420e2f:	fidivr WORD PTR [edi]
  420e31:	sbb    BYTE PTR [ecx-0x6c9d231a],ch
  420e37:	add    BYTE PTR [edi],al
  420e39:	push   ecx
  420e3a:	retf   
  420e3b:	dec    eax
  420e3c:	neg    BYTE PTR [ebp+esi*2+0x6d400541]
  420e43:	mov    esp,0x2a804c3b
  420e48:	das    
  420e49:	rcr    BYTE PTR [ecx-0x596e1700],1
  420e4f:	lds    edi,FWORD PTR [ecx]
  420e51:	fldcw  WORD PTR [ebx-0x5048fa35]
  420e57:	mov    al,0xa7
  420e59:	fiadd  DWORD PTR [eax]
  420e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e5c:	mov    bl,0x97
  420e5e:	xchg   esi,eax
  420e5f:	pop    esp
  420e60:	xchg   DWORD PTR [eax],eax
  420e62:	fisttp WORD PTR [edx]
  420e64:	adc    bh,BYTE PTR ds:0x58dde321
  420e6a:	add    BYTE PTR [edx],bl
  420e6c:	dec    edi
  420e6d:	mov    ds:0xa6901ce9,al
  420e72:	jle    0x420e74
  420e74:	rdpmc  
  420e76:	imul   esp,DWORD PTR ds:0x2e0ad779,0x7
  420e7d:	mov    bl,0xd0
  420e7f:	repnz cmp eax,0xe47c0e1
  420e85:	mov    al,ds:0x775c0102
  420e8a:	mov    dl,0xda
  420e8c:	rol    DWORD PTR [ebp-0x2],1
  420e8f:	enter  0x4f56,0x0
  420e93:	fmul   QWORD PTR [ebx+0x7c859955]
  420e99:	xchg   BYTE PTR [eax+0x72064900],ch
  420e9f:	push   0x6c
  420ea1:	mov    esp,0x6800c61d
  420ea6:	mov    ch,0x40
  420ea8:	aaa    
  420ea9:	test   BYTE PTR [eax-0x1affe8c7],bh
  420eaf:	push   edi
  420eb0:	mov    esi,0xb78971a3
  420eb5:	out    0x0,eax
  420eb7:	lds    eax,FWORD PTR [ecx]
  420eb9:	retf   
  420eba:	sub    eax,0x227519f6
  420ebf:	add    BYTE PTR [ebx],al
  420ec1:	fucomi st,st(2)
  420ec3:	int3   
  420ec4:	(bad)  
  420ec6:	stos   BYTE PTR es:[edi],al
  420ec7:	and    eax,0x6a3bfc00
  420ecc:	mov    ecx,0x77b42909
  420ed1:	call   0xc5040fa3
  420ed6:	and    BYTE PTR [ecx+0x54],bl
  420ed9:	jno    0x420f3d
  420edb:	adc    al,0x0
  420edd:	xor    BYTE PTR [eax-0x21],bl
  420ee0:	(bad)  
  420ee1:	jns    0x420f17
  420ee3:	mov    al,ds:0x333e09e4
  420ee8:	sub    eax,0xb6e400fd
  420eed:	push   ds
  420eee:	ret    
  420eef:	xchg   DWORD PTR [edx+0xa],edi
  420ef2:	add    bl,dl
  420ef4:	(bad)  [edi+0x4024f8a]
  420efa:	mov    eax,ds:0x691ae400
  420eff:	outs   dx,BYTE PTR ds:[esi]
  420f00:	inc    esp
  420f01:	push   ss
  420f02:	jge    0x420f00
  420f04:	jge    0x420ed8
  420f06:	add    BYTE PTR [esi+0x6f],dh
  420f09:	xchg   edi,eax
  420f0a:	dec    ebp
  420f0b:	(bad)  
  420f0c:	fsub   st,st(0)
  420f0e:	inc    eax
  420f0f:	dec    esp
  420f10:	mov    ah,0xb1
  420f12:	sbb    eax,0x958007fa
  420f17:	cwde   
  420f18:	test   BYTE PTR [eax+edi*4],ch
  420f1b:	mov    ebp,0xf7153301
  420f20:	jnp    0x420f1e
  420f22:	out    dx,al
  420f23:	inc    edx
  420f24:	or     BYTE PTR [edi+ebp*8-0x7b],0x60
  420f29:	dec    esi
  420f2a:	adc    ebx,DWORD PTR [eax+0x3d]
  420f2d:	sbb    BYTE PTR [ecx],bh
  420f2f:	mov    ds,WORD PTR [esi+0x51]
  420f32:	mov    BYTE PTR [eax+0x38],0x87
  420f36:	fs pop ebx
  420f38:	clc    
  420f39:	in     al,0xf3
  420f3b:	add    al,0x6d
  420f3d:	sub    eax,0xc0c39294
  420f42:	and    al,0x62
  420f44:	popf   
  420f45:	mov    al,BYTE PTR [eax]
  420f47:	leave  
  420f48:	add    edi,DWORD PTR [edi-0x17]
  420f4b:	test   eax,0xf658c5a
  420f50:	fisub  WORD PTR [ecx]
  420f52:	sahf   
  420f53:	fadd   st(2),st
  420f55:	imul   ebp,DWORD PTR [edx+0x7c],0xffffffe0
  420f59:	inc    eax
  420f5a:	std    
  420f5b:	or     eax,0x598893e
  420f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f61:	push   edx
  420f62:	mov    al,0x83
  420f64:	shl    BYTE PTR [edx-0x42],0x2a
  420f68:	imul   eax,DWORD PTR [eax],0x906d7dbc
  420f6e:	xchg   ebp,eax
  420f6f:	inc    esp
  420f70:	mov    dl,0xcc
  420f72:	popf   
  420f73:	clc    
  420f74:	adc    BYTE PTR [eax],bh
  420f76:	add    ch,BYTE PTR [ebx+0x3f]
  420f79:	and    al,0x76
  420f7b:	mov    eax,0xf297574
  420f80:	and    eax,ecx
  420f82:	jmp    0x727f:0x7e766084
  420f89:	cwde   
  420f8a:	add    eax,0x87d1e732
  420f8f:	cmp    ebx,ebp
  420f91:	rcl    BYTE PTR [edi+ecx*8],0xa2
  420f95:	aas    
  420f96:	add    BYTE PTR [esi-0x6c],al
  420f99:	mov    ds:0x6e674f18,eax
  420f9e:	out    dx,al
  420f9f:	add    BYTE PTR [ecx],dh
  420fa1:	pop    eax
  420fa2:	jns    0x420faf
  420fa4:	xchg   DWORD PTR [eax],esp
  420fa6:	adc    bh,BYTE PTR [edx]
  420fa8:	add    BYTE PTR [esi],bh
  420faa:	jno    0x420fe9
  420fac:	imul   ebp,ecx,0x25
  420faf:	add    al,0xe4
  420fb1:	pop    es
  420fb2:	sar    BYTE PTR [ecx+0x2a6ce6],cl
  420fb8:	mov    al,0x21
  420fba:	xchg   ebx,eax
  420fbb:	ja     0x420fbd
  420fbd:	rol    DWORD PTR [edx],1
  420fbf:	cld    
  420fc0:	jns    0x421006
  420fc2:	xor    cl,BYTE PTR [ebx-0x33d1ff35]
  420fc8:	gs ret 
  420fca:	adc    eax,0x1acc469
  420fcf:	lahf   
  420fd0:	(bad)  
  420fd1:	cmp    DWORD PTR [ecx-0x36],edx
  420fd4:	std    
  420fd5:	or     al,ah
  420fd7:	je     0x420fb7
  420fd9:	add    BYTE PTR [edi+ebp*2-0x1c],ah
  420fdd:	fwait
  420fde:	xchg   DWORD PTR ds:0x4501b6ef,edx
  420fe4:	jp     0x420fbb
  420fe6:	pusha  
  420fe7:	pop    esi
  420fe8:	jg     0x420f6c
  420fea:	clc    
  420feb:	or     esi,ebx
  420fed:	add    BYTE PTR [ecx],dh
  420fef:	inc    ebx
  420ff0:	mov    ?,WORD PTR [edx-0x6713deb4]
  420ff6:	add    DWORD PTR [eax+0x193a230d],ebp
  420ffc:	ret    
  420ffd:	jmp    0x100b5ee
  421002:	xor    BYTE PTR [esi+0x5c],0xb4
  421006:	pop    edi
  421007:	push   edi
  421008:	xchg   ecx,eax
  421009:	mov    eax,0x71006f7e
  42100e:	push   0x254ed17a
  421013:	out    0xb7,eax
  421015:	add    BYTE PTR [ebp+edx*8+0x29],dh
  421019:	jmp    0x421054
  42101b:	mov    ?,ebp
  42101d:	fild   DWORD PTR [eax]
  42101f:	jmp    0x965925ad
  421024:	loop   0x420fe0
  421026:	scas   eax,DWORD PTR es:[edi]
  421027:	add    BYTE PTR [eax-0x59],ch
  42102a:	pop    ecx
  42102b:	nop
  42102c:	imul   eax,ebp,0x2a
  42102f:	mov    ds:0x373e0afe,eax
  421034:	(bad)  
  421035:	lahf   
  421036:	pop    eax
  421037:	push   ss
  421038:	cmp    dh,0xb5
  42103b:	fwait
  42103c:	int3   
  42103d:	repnz rcr BYTE PTR [esi],cl
  421040:	add    eax,0x99c02e7d
  421045:	pop    edx
  421046:	xor    ah,BYTE PTR [ebx+0x3d]
  421049:	sbb    BYTE PTR [ecx],al
  42104b:	lods   al,BYTE PTR ds:[esi]
  42104c:	in     al,dx
  42104d:	js     0x421013
  42104f:	aad    0x75
  421051:	(bad)  
  421052:	fadd   QWORD PTR [eax+0x1]
  421055:	jne    0x421008
  421057:	add    BYTE PTR [edx+0x2f],dl
  42105a:	pop    edi
  42105b:	jmp    0xc816559b
  421060:	add    BYTE PTR [esi],ch
  421062:	jne    0x4210a3
  421064:	xchg   esp,eax
  421065:	xchg   DWORD PTR [ebp-0x42fa1e27],edx
  42106b:	stos   DWORD PTR es:[edi],eax
  42106c:	cmp    al,0x77
  42106e:	and    al,0x80
  421070:	ret    0xbbf1
  421073:	jmp    0x4210b1
  421075:	inc    esi
  421076:	or     al,BYTE PTR [eax+0x3d043b49]
  42107c:	jne    0x4210c5
  42107e:	lods   eax,DWORD PTR ds:[esi]
  42107f:	add    DWORD PTR [eax+0x26],eax
  421082:	xor    eax,0x986e2ef6
  421087:	hlt    
  421088:	icebp  
  421089:	push   ds
  42108a:	add    BYTE PTR [edi+ecx*2-0x75721fae],bh
  421091:	jle    0x4210db
  421093:	add    BYTE PTR [eax],bl
  421095:	mov    DWORD PTR [edi+edx*4-0x1d02e987],ebx
  42109c:	clc    
  42109d:	aas    
  42109e:	add    BYTE PTR [ebp+eiz*8+0x23df8e70],cl
  4210a5:	dec    ebp
  4210a6:	xor    eax,DWORD PTR [ecx]
  4210a8:	daa    
  4210a9:	add    al,0xc2
  4210ab:	repnz das 
  4210ad:	iret   
  4210ae:	in     al,dx
  4210af:	les    edi,FWORD PTR [ecx]
  4210b1:	pop    esp
  4210b2:	add    cl,al
  4210b4:	mov    bh,0x46
  4210b6:	js     0x421102
  4210b8:	imul   eax,DWORD PTR [esi+ebp*4+0x1f6ee900],0xffffffe3
  4210c0:	rcl    BYTE PTR [edx-0x1f],0xdf
  4210c4:	add    dl,bh
  4210c6:	mov    eax,ds:0x297bfe03
  4210cb:	ficomp WORD PTR [eax+eax*1]
  4210ce:	loopne 0x42109e
  4210d0:	pop    edi
  4210d1:	add    al,0x35
  4210d3:	retf   0xb30c
  4210d6:	add    BYTE PTR [edx],ch
  4210d8:	mov    eax,ds:0xe383dc5e
  4210dd:	add    eax,0x6d1702f4
  4210e2:	sbb    dh,BYTE PTR [edi-0x23]
  4210e5:	jmp    0xc00:0x96b7d60
  4210ec:	rcl    BYTE PTR [esp+edx*8],0x7b
  4210f0:	pop    esi
  4210f1:	xchg   edi,eax
  4210f2:	push   cs
  4210f3:	add    BYTE PTR [esi-0x5c],bh
  4210f6:	in     al,0x3c
  4210f8:	push   es
  4210f9:	cmp    esp,DWORD PTR [edi]
  4210fb:	cli    
  4210fc:	pop    es
  4210fd:	ror    DWORD PTR [ecx],1
  4210ff:	sar    BYTE PTR [ebp-0x5761be66],cl
  421105:	popf   
  421106:	loopne 0x421116
  421108:	and    al,BYTE PTR [eax]
  42110a:	pop    ss
  42110b:	aam    0x18
  42110d:	sbb    al,0xe3
  42110f:	sub    cl,cl
  421111:	push   edi
  421112:	ja     0x4210fa
  421114:	dec    esp
  421115:	inc    ecx
  421116:	daa    
  421117:	cmp    al,0x6
  421119:	mov    eax,ebx
  42111b:	adc    BYTE PTR ds:0xb4682300,bl
  421121:	pop    es
  421122:	fadd   DWORD PTR [edi]
  421124:	and    DWORD PTR [ecx],eax
  421126:	mov    edi,0xea40273f
  42112b:	lods   eax,DWORD PTR ds:[esi]
  42112c:	jns    0x42110b
  42112e:	add    BYTE PTR [edi+0x1a],bl
  421131:	mov    dl,0xb0
  421133:	sub    WORD PTR [edx],di
  421136:	jle    0x421138
  421138:	call   0x96f8081e
  42113d:	fldenv gs:[ebx+0x0]
  421141:	repz push ecx
  421143:	push   edx
  421144:	dec    esi
  421145:	sbb    BYTE PTR [esp+eax*4-0x5],ah
  421149:	add    BYTE PTR [eax-0x545ba2da],ch
  42114f:	jle    0x421142
  421151:	inc    edi
  421152:	add    BYTE PTR [edi-0x390a829],cl
  421158:	dec    esi
  421159:	test   eax,eax
  42115b:	add    BYTE PTR [edi+0x66],bl
  42115e:	adc    BYTE PTR [ebp-0x3baab0dd],0x0
  421165:	inc    ebx
  421166:	(bad)  
  421167:	lock mov eax,0xe89f32cd
  42116d:	push   cs
  42116e:	xchg   BYTE PTR [esi-0x53dfd3ef],dh
  421174:	ins    BYTE PTR es:[edi],dx
  421175:	adc    bl,cl
  421177:	sbb    eax,0x63795007
  42117c:	(bad)  
  42117d:	loopne 0x421170
  42117f:	mov    cl,0x37
  421181:	rcl    eax,1
  421183:	popf   
  421184:	leave  
  421185:	add    BYTE PTR [edi+edx*8+0x5],bl
  421189:	enter  0x715f,0xd3
  42118d:	dec    eax
  42118e:	sbb    eax,0x80726bd0
  421193:	xchg   edx,eax
  421194:	stc    
  421195:	lds    edx,FWORD PTR [eax-0x7a]
  421198:	je     0x421132
  42119a:	aaa    
  42119b:	sbb    al,0x21
  42119d:	aaa    
  42119e:	imul   ebx,ebp,0x16ae0075
  4211a4:	dec    ebp
  4211a5:	ins    BYTE PTR es:[edi],dx
  4211a6:	push   esi
  4211a7:	jno    0x4211e8
  4211a9:	mov    ch,0x1c
  4211ab:	sub    DWORD PTR [ebx+eiz*4-0x6fda80ba],0x79
  4211b3:	sbb    DWORD PTR [eax+eax*1],edi
  4211b6:	enter  0xce50,0x9f
  4211ba:	fidiv  DWORD PTR [esi-0x77fad4e0]
  4211c0:	stos   DWORD PTR es:[edi],eax
  4211c1:	mov    eax,0xb1008538
  4211c6:	inc    esp
  4211c7:	sar    ebp,0x1f
  4211ca:	sub    eax,0xadd91d1c
  4211cf:	inc    eax
  4211d0:	les    esi,FWORD PTR [edi-0x5c9e1b0]
  4211d6:	add    ebx,DWORD PTR [ebx-0x45]
  4211d9:	stos   DWORD PTR es:[edi],eax
  4211da:	or     dh,BYTE PTR [ebp-0x58]
  4211dd:	mov    al,ds:0xc04164d9
  4211e2:	cs test dl,ah
  4211e5:	je     0x42119f
  4211e7:	out    dx,eax
  4211e8:	shl    BYTE PTR [esi],0xd5
  4211eb:	jg     0x42118c
  4211ed:	pop    ebx
  4211ee:	push   cs
  4211ef:	add    BYTE PTR [eax],ah
  4211f1:	call   0x6dac:0x6a757b05
  4211f8:	add    BYTE PTR [eax],cl
  4211fa:	pop    ss
  4211fb:	add    esi,DWORD PTR [ecx-0xd1bad58]
  421201:	cmp    eax,DWORD PTR [esi+ebx*8]
  421204:	xor    bl,0x3b
  421207:	out    dx,al
  421208:	push   esp
  421209:	out    0xa5,al
  42120b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42120c:	add    BYTE PTR [ebp+0xb],bh
  42120f:	push   cs
  421210:	call   0x7b22527a
  421215:	add    ch,ah
  421217:	mov    dl,0x99
  421219:	pop    ss
  42121a:	fstp   QWORD PTR [eax]
  42121c:	pop    esi
  42121d:	and    cl,BYTE PTR [edx]
  42121f:	lahf   
  421220:	div    BYTE PTR [edi-0x7ff1181]
  421226:	fld    TBYTE PTR [eax]
  421228:	pop    ebx
  421229:	or     DWORD PTR [edi+0x1e],esp
  42122c:	stos   DWORD PTR es:[edi],eax
  42122d:	in     al,0xb5
  42122f:	and    ch,0x59
  421232:	outs   dx,BYTE PTR ds:[esi]
  421233:	scas   eax,DWORD PTR es:[edi]
  421234:	push   0xffffff89
  421236:	add    eax,0x10cddef6
  42123b:	out    0xc1,eax
  42123d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42123e:	jmp    0x421252
  421240:	mov    al,ds:0xb67f8dbc
  421246:	add    BYTE PTR [eax-0x13861926],dl
  42124c:	shl    DWORD PTR [esp+edi*8],0x2c
  421250:	(bad)  
  421251:	int    0xb0
  421253:	add    BYTE PTR [edi+ebp*4+0x417e11be],cl
  42125a:	cmp    DWORD PTR [esi],esp
  42125c:	adc    al,0x3f
  42125e:	data16 sbb BYTE PTR [eax+0x5678822a],0xc6
  421266:	xor    BYTE PTR [eax],al
  421268:	jne    0x4212d9
  42126a:	mov    ?,WORD PTR [ebx]
  42126c:	ja     0x42129a
  42126e:	aaa    
  42126f:	pop    esp
  421270:	add    BYTE PTR [eax-0x3d],bl
  421273:	icebp  
  421274:	pusha  
  421275:	or     al,0xc2
  421277:	dec    edi
  421278:	stc    
  421279:	add    BYTE PTR [ebp-0x3],bl
  42127c:	add    DWORD PTR [eax-0x4],esi
  42127f:	cmp    DWORD PTR [eax],ecx
  421281:	fiadd  WORD PTR [eax]
  421283:	xchg   edi,eax
  421284:	shl    esi,cl
  421286:	inc    ebp
  421287:	(bad)  
  421288:	repnz ins BYTE PTR es:[edi],dx
  42128a:	xlat   BYTE PTR ds:[ebx]
  42128b:	add    BYTE PTR [edi],bl
  42128d:	ss push edi
  42128f:	in     al,dx
  421290:	lods   eax,DWORD PTR ds:[esi]
  421291:	aam    0x95
  421293:	mov    dh,0x3
  421295:	in     eax,dx
  421296:	pop    esp
  421297:	rcr    cl,0x6d
  42129a:	dec    eax
  42129b:	loope  0x4212a9
  42129d:	pop    eax
  42129e:	lock add eax,0xfb300049
  4212a4:	push   ds
  4212a5:	mov    bl,0x31
  4212a7:	iret   
  4212a8:	sbb    BYTE PTR [esi+0x7b],ah
  4212ab:	sbb    eax,0x905efe00
  4212b0:	fucomi st,st(6)
  4212b2:	(bad)  
  4212b3:	std    
  4212b4:	sbb    edi,DWORD PTR [ebx]
  4212b6:	mov    edx,DWORD PTR [esi+eiz*1-0x14ff6fa7]
  4212bd:	icebp  
  4212be:	lods   al,BYTE PTR ds:[esi]
  4212bf:	hlt    
  4212c0:	mov    cl,0x19
  4212c2:	add    BYTE PTR [esi],al
  4212c4:	imul   ebx,esi,0xd744dba5
  4212ca:	push   ds
  4212cb:	add    BYTE PTR ds:0x98a91526,ch
  4212d1:	les    esi,FWORD PTR [ebx-0x2b]
  4212d4:	cmp    DWORD PTR [ebx-0x63],esp
  4212d7:	sbb    BYTE PTR [edx],0x84
  4212da:	aam    0x30
  4212dc:	push   edx
  4212dd:	push   ebp
  4212de:	cs add bh,dh
  4212e1:	outs   dx,DWORD PTR ds:[esi]
  4212e2:	xor    cl,dl
  4212e4:	xor    eax,0xe61257
  4212e9:	mov    edx,0xffb9bf5d
  4212ee:	test   BYTE PTR [edi+0x7c],bh
  4212f1:	add    al,bl
  4212f3:	inc    ebx
  4212f4:	cmp    al,BYTE PTR [ebx+0xb7548d2]
  4212fa:	add    BYTE PTR [edx],dh
  4212fc:	jbe    0x4212b0
  4212fe:	ds repz mov cl,0x10
  421302:	dec    esi
  421303:	add    bh,ah
  421305:	push   ecx
  421306:	inc    ebp
  421307:	and    BYTE PTR [edi+0x8],al
  42130a:	imul   ebx,DWORD PTR [ecx-0x5e28512],0xffffff94
  421311:	stc    
  421312:	nop    DWORD PTR [edx]
  421315:	cs pop ebp
  421317:	and    BYTE PTR [ebp+0x2cde7f87],ah
  42131d:	add    BYTE PTR [ebp+0x5062dae],bl
  421323:	(bad)  
  421324:	imul   edx,DWORD PTR [eax+eax*1],0x931e0f50
  42132b:	scas   eax,DWORD PTR es:[edi]
  42132c:	(bad)  
  42132d:	rcr    cl,1
  42132f:	pop    es
  421330:	jge    0x4212bd
  421332:	mov    edi,0x6690aa44
  421337:	or     al,0x96
  421339:	sbb    BYTE PTR [edx+esi*4],ah
  42133c:	cli    
  42133d:	adc    al,0x0
  42133f:	repnz dec esp
  421341:	lods   eax,DWORD PTR ds:[esi]
  421342:	push   eax
  421343:	pop    ss
  421344:	sub    al,BYTE PTR [eax]
  421346:	dec    ebp
  421347:	jmp    0x5f79d3a2
  42134c:	out    0x5a,al
  42134e:	add    BYTE PTR [edx+0x41],bh
  421351:	xchg   edi,eax
  421352:	ffree  st(1)
  421354:	inc    ebx
  421355:	xor    eax,0x55d200b1
  42135a:	and    dl,BYTE PTR [esi-0x56]
  42135d:	es js  0x4213a2
  421360:	js     0x421377
  421362:	add    BYTE PTR [esp+ecx*8+0x1],ah
  421366:	push   ebx
  421367:	scas   al,BYTE PTR es:[edi]
  421368:	mov    edi,0x6c00edd0
  42136d:	jg     0x4213cb
  42136f:	cmp    edi,DWORD PTR [edx-0xd]
  421372:	retf   
  421373:	push   ds
  421374:	cld    
  421375:	xlat   BYTE PTR ds:[ebx]
  421376:	push   cs
  421377:	xor    ch,bh
  421379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42137a:	popa   
  42137b:	loop   0x4213f1
  42137d:	in     eax,0x26
  42137f:	sar    BYTE PTR [ecx-0x30],0x4b
  421383:	add    BYTE PTR [edx],bh
  421385:	sub    dl,dh
  421387:	dec    edx
  421388:	test   al,0x12
  42138a:	fdiv   DWORD PTR [edx-0x1aa5bff9]
  421390:	sub    eax,0xfa94a050
  421395:	(bad)  
  421396:	imul   eax,DWORD PTR [eax],0x61
  421399:	imul   ecx,DWORD PTR [eax+0x344441c4],0x17eb09e
  4213a3:	mov    ds:0x3619b4dc,eax
  4213a8:	lea    esp,[eax+esi*1]
  4213ab:	push   ecx
  4213ac:	jno    0x4213b0
  4213ae:	pop    esp
  4213af:	scas   eax,DWORD PTR es:[edi]
  4213b0:	in     al,dx
  4213b1:	test   al,0x1c
  4213b3:	pop    ds
  4213b4:	pusha  
  4213b5:	push   eax
  4213b6:	clc    
  4213b7:	mov    esi,0x438c0707
  4213bc:	or     eax,0xa337707a
  4213c1:	add    edi,DWORD PTR [esi]
  4213c3:	add    DWORD PTR [eax],ecx
  4213c5:	mov    eax,ds:0xa7d3e16d
  4213ca:	jmp    0x4213c8
  4213cc:	outs   dx,DWORD PTR ds:[esi]
  4213cd:	in     eax,0x0
  4213cf:	push   cs
  4213d0:	imul   esp,DWORD PTR ss:[ebx+0x571a79d8],0x0
  4213d8:	pop    edx
  4213d9:	mov    al,0x34
  4213db:	(bad)  
  4213dc:	enter  0x6a28,0x61
  4213e0:	add    DWORD PTR [edi+0x48],esp
  4213e3:	cmp    eax,0xac1ecc46
  4213e8:	fcomp  QWORD PTR ds:0xf2991fe7
  4213ee:	in     al,dx
  4213ef:	add    BYTE PTR [ecx-0x62],cl
  4213f2:	jmp    0x3408:0x426c39
  4213f9:	jns    0x421433
  4213fb:	loopne 0x421386
  4213fd:	pop    es
  4213fe:	sub    dl,ch
  421400:	jp     0x4213e2
  421402:	retf   0xbb1e
  421405:	dec    ecx
  421406:	je     0x421445
  421408:	or     BYTE PTR [edx+0x50],0x27
  42140c:	test   al,0x13
  42140e:	call   0x8029:0x12d1e37
  421415:	(bad)  
  421416:	jno    0x4213a9
  421418:	aam    0x2c
  42141a:	mov    ch,0x0
  42141c:	in     eax,dx
  42141d:	(bad)  
  42141e:	and    al,0xa8
  421420:	dec    ecx
  421421:	ss push ss
  421423:	mov    DWORD PTR [eax],eax
  421425:	cli    
  421426:	leave  
  421427:	(bad)  
  421428:	outs   dx,BYTE PTR ds:[esi]
  421429:	and    BYTE PTR [eax-0x6305da9f],dh
  42142f:	push   ds
  421430:	inc    edi
  421431:	imul   esi,DWORD PTR ds:0x7dbd8d00,0xa
  421438:	mov    WORD PTR [esi],ss
  42143a:	add    ah,al
  42143c:	or     ecx,DWORD PTR [ecx]
  42143e:	leave  
  42143f:	xor    al,BYTE PTR [eax-0x31]
  421442:	hlt    
  421443:	add    al,dh
  421445:	xlat   BYTE PTR ds:[ebx]
  421446:	jo     0x421402
  421448:	inc    esp
  421449:	repz (bad) 
  42144b:	jns    0x42144d
  42144d:	xchg   edi,ebp
  42144f:	sub    bh,BYTE PTR [esi]
  421451:	push   cs
  421452:	ret    
  421453:	ins    DWORD PTR es:[edi],dx
  421454:	pop    eax
  421455:	pop    ds
  421456:	xor    DWORD PTR [edi+ecx*8+0x1],ebx
  42145a:	or     cl,BYTE PTR [ebx+0x201a08e9]
  421460:	push   0x52fc0060
  421465:	cmp    eax,0xb6adb5c5
  42146a:	sar    BYTE PTR [edi+0x64],cl
  42146d:	add    BYTE PTR [esi+0x63],dh
  421470:	loope  0x42141b
  421472:	inc    edx
  421473:	sub    eax,ecx
  421475:	or     eax,DWORD PTR [ecx]
  421477:	cld    
  421478:	cmp    al,0xf6
  42147a:	nop
  42147b:	out    0x31,al
  42147d:	fs push 0x0
  421480:	sbb    eax,0xdd905a5
  421485:	mov    WORD PTR [eax],es
  421487:	push   ds
  421488:	test   bh,bl
  42148a:	cld    
  42148b:	pop    ds
  42148c:	xchg   ecx,eax
  42148d:	cmp    cl,BYTE PTR [ecx]
  42148f:	add    bl,dh
  421491:	jno    0x4214b8
  421493:	mov    al,ah
  421495:	add    DWORD PTR [ebp+0x5d],esi
  421498:	add    ah,dh
  42149a:	je     0x421502
  42149c:	pop    eax
  42149d:	call   0x6d1f:0x83482b
  4214a4:	mov    al,ds:0x5743d2a1
  4214a9:	and    dh,bh
  4214ab:	add    BYTE PTR es:[ebx],bl
  4214ae:	repz mov dh,0xbb
  4214b1:	pop    edx
  4214b2:	test   BYTE PTR [ecx-0x61],dl
  4214b5:	add    BYTE PTR [ebx-0x52f32f52],al
  4214bb:	inc    edx
  4214bc:	add    DWORD PTR [eax],ebp
  4214be:	add    BYTE PTR [esi],ah
  4214c0:	push   ds
  4214c1:	outs   dx,BYTE PTR ds:[esi]
  4214c2:	jle    0x421470
  4214c4:	push   0x64b84940
  4214c9:	add    DWORD PTR [edi-0x16],edi
  4214cc:	adc    eax,0x96e5823f
  4214d1:	(bad)  
  4214d2:	retf   
  4214d3:	stos   DWORD PTR es:[edi],eax
  4214d4:	adc    edx,esp
  4214d6:	fstp   QWORD PTR [ebx]
  4214d8:	mov    esi,0xa5ed2a00
  4214dd:	xchg   ecx,eax
  4214de:	sub    al,0xfa
  4214e0:	add    BYTE PTR [edx-0x5c],ah
  4214e3:	inc    edx
  4214e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214e5:	adc    al,0xcc
  4214e7:	sar    DWORD PTR [ebp+0x3],0x4d
  4214eb:	push   0xffffffee
  4214ed:	daa    
  4214ee:	retf   0xf026
  4214f1:	mov    ds:0xfd000e2f,eax
  4214f6:	mov    bh,0x11
  4214f8:	push   0x57d31df8
  4214fd:	loopne 0x42149e
  4214ff:	clts   
  421501:	cdq    
  421502:	sbb    dl,BYTE PTR [eax+eax*8]
  421505:	mov    edi,0x36337ce5
  42150a:	add    BYTE PTR [edx+0x3],dl
  42150d:	js     0x42149e
  42150f:	mov    eax,ds:0x7c75762
  421514:	lods   eax,DWORD PTR ds:[esi]
  421515:	cld    
  421516:	aad    0x7b
  421518:	frstor [eax-0x207c1f40]
  42151e:	add    ch,ch
  421520:	mov    dl,0x1a
  421522:	imul   edx,DWORD PTR [ebx+0xbf2368],0xc2840b46
  42152c:	outs   dx,BYTE PTR ds:[esi]
  42152d:	cld    
  42152e:	(bad)
  421531:	call   0x783b:0xa6e6985d
  421538:	int3   
  421539:	or     DWORD PTR [eax+0x65f369],esi
  42153f:	cmp    BYTE PTR [ecx+0x111b1c8],dl
  421545:	test   DWORD PTR [edi+0x5a],ebp
  421548:	ss jg  0x4215a8
  42154b:	ret    
  42154c:	call   0xf58327d
  421551:	adc    eax,0xa090098
  421556:	xor    eax,0x22f0b3
  42155b:	and    BYTE PTR [ebx],0x34
  42155e:	jae    0x42150e
  421560:	xlat   BYTE PTR ds:[ebx]
  421561:	lds    ebx,FWORD PTR [ecx-0x30fad6e3]
  421567:	js     0x4215e1
  421569:	add    DWORD PTR [edx-0x4ede1c3f],edi
  42156f:	or     al,0xf4
  421571:	mov    BYTE PTR [eax-0x1de6325d],0xe9
  421578:	add    BYTE PTR ds:0x1d326211,ah
  42157e:	shr    dl,0xc5
  421581:	paddsw mm0,QWORD PTR [edx+edi*8+0x7f]
  421586:	in     al,0x17
  421588:	out    0xc0,al
  42158a:	add    BYTE PTR [edx],ah
  42158c:	fstp   TBYTE PTR [edx]
  42158e:	add    dh,dh
  421590:	repz call 0xaf170470
  421596:	or     BYTE PTR [ebx],al
  421598:	int3   
  421599:	and    BYTE PTR [eax-0x4e],ah
  42159c:	clc    
  42159d:	pop    ebx
  42159e:	test   eax,0x95dcc231
  4215a3:	push   es
  4215a4:	add    BYTE PTR ds:0xcdf726d6,bh
  4215aa:	add    DWORD PTR [edx],eax
  4215ac:	add    eax,0x1f180800
  4215b1:	in     eax,0xac
  4215b3:	(bad)  
  4215b4:	xchg   ebx,eax
  4215b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215b6:	add    BYTE PTR [esi+0x5ba37799],al
  4215bc:	adc    eax,0xb50b2e33
  4215c1:	jl     0x4215f3
  4215c3:	cli    
  4215c4:	add    BYTE PTR [ebx+0x1e7e5a5c],ah
  4215ca:	and    al,0xa0
  4215cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215cd:	or     eax,DWORD PTR [eax]
  4215cf:	imul   edi,DWORD PTR [edx],0xffffffaf
  4215d2:	dec    ebp
  4215d3:	ds aam 0x1
  4215d6:	cli    
  4215d7:	mov    BYTE PTR [esi+edx*1-0xf3cee7e],dl
  4215de:	add    al,0xdb
  4215e0:	pop    es
  4215e1:	push   es
  4215e2:	std    
  4215e3:	dec    ecx
  4215e4:	and    DWORD PTR [esi],0x64
  4215e7:	inc    edx
  4215e8:	sar    bl,0x4e
  4215eb:	js     0x4215cf
  4215ed:	jl     0x421608
  4215ef:	add    BYTE PTR [edx+0x43529ec9],bl
  4215f5:	daa    
  4215f6:	push   eax
  4215f7:	aad    0x3
  4215f9:	or     ch,BYTE PTR [ecx]
  4215fb:	sub    edi,DWORD PTR [edx]
  4215fd:	add    eax,0x22ac044
  421602:	test   al,0x1c
  421604:	cmc    
  421605:	inc    ebp
  421606:	ss push cs
  421608:	dec    BYTE PTR ds:0xf4557fa0
  42160e:	clc    
  42160f:	rol    DWORD PTR [eax],0x8d
  421612:	add    al,0xe9
  421614:	push   eax
  421615:	mov    ch,0xdd
  421617:	dec    ecx
  421618:	aaa    
  421619:	add    esp,ebp
  42161b:	mov    cl,0x92
  42161d:	loopne 0x42163e
  42161f:	xor    al,0xd
  421621:	pusha  
  421622:	xchg   BYTE PTR [ebx],bl
  421624:	add    BYTE PTR ds:0x5d8cc261,ch
  42162a:	mov    ecx,0xa707d813
  42162f:	push   es
  421630:	jmp    0x1b30:0xdb803f10
  421637:	lock add BYTE PTR [ebp-0x2a],dh
  42163b:	push   0x2c6582b2
  421640:	pop    edx
  421641:	adc    al,ah
  421643:	ficomp DWORD PTR [eax]
  421645:	lods   al,BYTE PTR ds:[esi]
  421646:	neg    BYTE PTR [edi]
  421648:	leave  
  421649:	cmp    eax,eax
  42164b:	mov    al,ds:0x33b56902
  421650:	mov    BYTE PTR ds:0xa1c82efe,al
  421656:	or     eax,eax
  421658:	xor    esi,ecx
  42165a:	out    dx,eax
  42165b:	rcl    BYTE PTR [edx],0xfa
  42165e:	jae    0x4215f2
  421660:	stos   DWORD PTR es:[edi],eax
  421661:	rol    DWORD PTR [eax],cl
  421663:	mov    ebx,eax
  421665:	scas   eax,DWORD PTR es:[edi]
  421666:	push   ebx
  421667:	jecxz  0x421671
  421669:	out    dx,al
  42166a:	sahf   
  42166b:	push   0xffffffb8
  42166d:	or     BYTE PTR [eax-0x2a75ff47],dl
  421673:	jmp    0x70be11c7
  421678:	xchg   edi,eax
  421679:	cmovle esi,DWORD PTR [ebx+0x5b]
  42167d:	inc    esi
  42167e:	mov    al,ds:0xadc695c1
  421683:	jb     0x421685
  421685:	dec    ebx
  421686:	leave  
  421687:	cld    
  421688:	jmp    0x42164a
  42168a:	call   0x7fb8:0x4c07ea63
  421691:	or     bl,BYTE PTR [esi-0x20]
  421694:	pop    ecx
  421695:	js     0x4216d4
  421697:	mov    DWORD PTR [edx],esp
  421699:	jl     0x4216ff
  42169b:	add    bh,al
  42169d:	ret    
  42169e:	xchg   ecx,eax
  42169f:	pop    edx
  4216a0:	mov    ch,0xea
  4216a2:	std    
  4216a3:	inc    esp
  4216a4:	sbb    eax,0x47a9793a
  4216a9:	push   ss
  4216aa:	(bad)  
  4216ab:	and    BYTE PTR [eax],ah
  4216ad:	mov    cl,BYTE PTR [ebx-0xaff4639]
  4216b3:	dec    esp
  4216b4:	enter  0x7099,0x42
  4216b8:	retf   
  4216b9:	or     DWORD PTR [edx],eax
  4216bb:	movsx  edi,WORD PTR ds:0xe389784b
  4216c2:	jb     0x4216a7
  4216c4:	dec    edx
  4216c5:	shl    BYTE PTR [ecx+0x32],1
  4216c8:	pusha  
  4216c9:	add    dh,al
  4216cb:	cmp    ch,bl
  4216cd:	xor    DWORD PTR [ebx+0x17ca0b64],0xa6653f
  4216d7:	xchg   ebx,eax
  4216d8:	lsl    edx,WORD PTR [ebp+0x37]
  4216dc:	addr16 pop es
  4216de:	xor    DWORD PTR ds:0x311682b5,ecx
  4216e4:	ret    0x2c3c
  4216e7:	loopne 0x421765
  4216e9:	jg     0x4216eb
  4216eb:	adc    esi,DWORD PTR [edi-0x51]
  4216ee:	fimul  WORD PTR [eax]
  4216f0:	mov    ebp,0x9775d381
  4216f5:	add    BYTE PTR [eax-0x1b2f5f90],bh
  4216fb:	gs ins DWORD PTR es:[edi],dx
  4216fd:	xchg   BYTE PTR [eax],al
  4216ff:	add    DWORD PTR [ebp-0x5a74131f],eax
  421705:	or     al,0xff
  421707:	push   cs
  421708:	sub    ebp,esi
  42170a:	das    
  42170b:	adc    DWORD PTR [edi+0x43],ebp
  42170e:	inc    eax
  42170f:	jnp    0x4216b0
  421711:	xchg   ebp,eax
  421712:	push   edx
  421713:	pop    ds
  421714:	add    BYTE PTR [edx-0x8],bl
  421717:	or     DWORD PTR [ecx-0x19aeca9f],ebp
  42171d:	add    BYTE PTR [ecx],bh
  42171f:	aam    0x59
  421721:	inc    edi
  421722:	psrlw  mm0,QWORD PTR [ebx]
  421725:	rol    BYTE PTR [eax],1
  421727:	ins    BYTE PTR es:[edi],dx
  421728:	adc    DWORD PTR [ebp-0x1c],0x14
  42172c:	jmp    0x3460afe1
  421731:	jle    0x421775
  421733:	sar    BYTE PTR [esi],0x1f
  421736:	mov    dh,0x6b
  421738:	mov    ecx,0x7738700d
  42173d:	cli    
  42173e:	add    ch,dh
  421740:	push   cs
  421741:	(bad)  
  421742:	jno    0x4217a8
  421744:	pop    ebx
  421745:	mov    esi,0xd0e20339
  42174a:	mov    DWORD PTR [ecx-0x5b],esp
  42174d:	adc    DWORD PTR [edi-0xd2357fd],edi
  421753:	xlat   BYTE PTR ds:[ebx]
  421754:	popa   
  421755:	sbb    eax,0x5409d007
  42175a:	ds jmp 0x76f517c0
  421760:	dec    ebp
  421761:	xor    DWORD PTR [ecx+esi*1],0xe
  421765:	add    esi,ebp
  421767:	push   eax
  421768:	mov    DWORD PTR [esi],ebx
  42176a:	arpl   WORD PTR [ecx],bp
  42176c:	enter  0x789a,0x70
  421770:	pop    ds
  421771:	adc    edi,edx
  421773:	xchg   edi,eax
  421774:	add    ch,bh
  421776:	xchg   ecx,eax
  421778:	jp     0x4217d3
  42177a:	mov    dl,ah
  42177c:	add    BYTE PTR ss:[esi-0x2a4c979e],ah
  421783:	push   es
  421784:	mov    edi,0xe7910056
  421789:	jnp    0x42173d
  42178b:	xchg   esi,eax
  42178c:	test   eax,0xc00c10a
  421791:	addr16 adc ch,al
  421794:	xchg   esp,eax
  421795:	hlt    
  421796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421797:	scas   al,BYTE PTR es:[edi]
  421798:	add    BYTE PTR [eax-0x4bc4d145],bl
  42179e:	mov    ds:0x71009683,al
  4217a3:	inc    ebp
  4217a4:	push   edx
  4217a5:	add    esi,esp
  4217a7:	fst    DWORD PTR [ebx+0x3e]
  4217aa:	add    ch,dl
  4217ac:	push   ss
  4217ad:	int3   
  4217ae:	inc    edi
  4217af:	or     eax,0x5d7335
  4217b4:	and    eax,0x831dafb5
  4217ba:	out    0xbc,al
  4217bc:	add    BYTE PTR [ecx],dl
  4217be:	pop    es
  4217bf:	push   0xfffffff6
  4217c1:	call   0xa783e1
  4217c6:	inc    ecx
  4217c7:	jle    0x421825
  4217c9:	xor    eax,0x6982a3b7
  4217ce:	add    al,BYTE PTR [edi-0x61d9892e]
  4217d4:	pop    ecx
  4217d5:	inc    eax
  4217d6:	mov    BYTE PTR [edi-0xa],0x0
  4217da:	cmc    
  4217db:	mov    ah,0x8
  4217dd:	mov    al,0x57
  4217df:	mov    al,ds:0xed00c2c1
  4217e4:	call   0xef599f85
  4217e9:	das    
  4217ea:	fadd   DWORD PTR [eax]
  4217ec:	adc    esi,ecx
  4217ee:	repz fild DWORD PTR [eax+0x6e276a]
  4217f5:	jne    0x4217c9
  4217f7:	adc    al,0xe0
  4217f9:	setp   ch
  4217fc:	xchg   BYTE PTR [eax],al
  4217fe:	ins    BYTE PTR es:[edi],dx
  4217ff:	sahf   
  421800:	data16 and bl,BYTE PTR [ecx-0x11]
  421804:	and    edx,DWORD PTR [eax+eax*1-0x147c444d]
  42180b:	fnsave [ecx+0x2]
  42180e:	aas    
  42180f:	add    BYTE PTR [eax],ch
  421811:	aad    0xfc
  421813:	loopne 0x4217b9
  421815:	inc    edi
  421816:	test   DWORD PTR [eax+eax*1-0x48a6cd3e],ecx
  42181d:	test   al,0x71
  42181f:	add    al,0x3a
  421821:	add    ebp,DWORD PTR [ebp-0x5959bb5]
  421827:	dec    ecx
  421828:	shr    DWORD PTR [ebx-0x3b840fd8],0x1
  42182f:	imul   eax,eax,0x94933960
  421835:	test   al,0xfc
  421837:	fst    DWORD PTR [ecx+0x3d]
  42183a:	and    ebx,DWORD PTR [ebp-0x55319480]
  421840:	mul    eax
  421842:	adc    eax,0x51700c2
  421847:	cmp    DWORD PTR [ebx+ebx*4-0x4c],esp
  42184b:	addr16 push ds
  42184d:	pop    es
  42184e:	or     DWORD PTR [edx],edx
  421850:	or     edi,DWORD PTR ds:0x2326a13a
  421856:	int    0x2e
  421858:	in     eax,dx
  421859:	push   eax
  42185a:	stos   BYTE PTR es:[edi],al
  42185b:	mov    al,0xf6
  42185d:	sar    BYTE PTR [eax+0x8],0xf2
  421861:	sub    al,0x23
  421863:	(bad)
  421866:	int3   
  421867:	add    al,0x23
  421869:	or     ebp,DWORD PTR [ebx-0x5193a00a]
  42186f:	add    ch,BYTE PTR [esi+0x73]
  421872:	jne    0x421899
  421874:	aaa    
  421875:	xchg   esi,eax
  421876:	add    DWORD PTR ss:[eax],ecx
  421879:	fld    QWORD PTR [eax+0x29]
  42187c:	mov    edx,0x1bc89e
  421881:	mov    ecx,edx
  421883:	jmp    0xc8a4d426
  421888:	lea    eax,[eax-0x32c17c5c]
  42188e:	mov    edi,0xc00efb3b
  421893:	jno    0x42188f
  421895:	cdq    
  421896:	and    eax,0xd20f0741
  42189b:	xor    eax,0x6108b33b
  4218a0:	mov    BYTE PTR [esi+0x215a0c99],cl
  4218a6:	push   eax
  4218a7:	sbb    al,0x84
  4218a9:	mov    bh,0xbb
  4218ab:	push   ecx
  4218ac:	xor    BYTE PTR [ebp-0x78],cl
  4218af:	lock xchg BYTE PTR [eax],dl
  4218b2:	pop    esp
  4218b3:	jg     0x421876
  4218b5:	rol    BYTE PTR [ebx-0x63],0x2f
  4218b9:	sbb    dl,dh
  4218bb:	jbe    0x421861
  4218bd:	sbb    eax,0x401d731e
  4218c2:	mov    bl,0xf3
  4218c4:	sbb    dh,0x71
  4218c7:	mov    cl,0x0
  4218c9:	adc    BYTE PTR [ecx+0x764b7f4e],cl
  4218cf:	xor    al,0xee
  4218d1:	add    BYTE PTR [ecx+ebp*4-0x1b],cl
  4218d5:	loop   0x4218b8
  4218d7:	hlt    
  4218d8:	push   ecx
  4218d9:	mov    ch,0x0
  4218db:	push   ebx
  4218dc:	sar    bl,1
  4218de:	xor    edx,DWORD PTR [edi+0xad6f89]
  4218e4:	idiv   BYTE PTR [ebx]
  4218e6:	pop    ss
  4218e7:	std    
  4218e8:	outs   dx,BYTE PTR ds:[esi]
  4218e9:	popf   
  4218ea:	clc    
  4218eb:	out    0x39,al
  4218ed:	xor    DWORD PTR [ecx],0x9a86aa00
  4218f3:	push   ebp
  4218f4:	fdivr  st,st(3)
  4218f6:	cli    
  4218f7:	pop    es
  4218f8:	in     eax,dx
  4218f9:	push   ecx
  4218fa:	cmp    cl,BYTE PTR [edi]
  4218fc:	mov    dl,BYTE PTR [ecx+0x6cb062]
  421902:	add    al,0x82
  421904:	mov    eax,ds:0x31fbd21e
  421909:	inc    ecx
  42190a:	or     eax,DWORD PTR [ebx+0x8c3dea]
  421910:	push   ds
  421911:	cs mov esi,0x65b72a0f
  421917:	adc    al,0xc0
  421919:	in     eax,0xc6
  42191b:	mov    dl,0x34
  42191d:	jbe    0x42195f
  42191f:	pop    edi
  421920:	push   ds
  421921:	add    DWORD PTR [ecx],ebp
  421923:	imul   BYTE PTR [edx-0x3a7c6b49]
  421929:	loopne 0x4218b6
  42192b:	mov    eax,ds:0x50dd8410
  421930:	add    ch,bh
  421932:	sub    BYTE PTR [edx],dl
  421934:	pop    ecx
  421935:	fist   DWORD PTR [esi]
  421937:	ins    BYTE PTR es:[edi],dx
  421938:	jge    0x42198c
  42193a:	and    bl,BYTE PTR [eax+0x5a]
  42193d:	push   ss
  42193e:	ror    DWORD PTR [ebx+eiz*8+0x0],1
  421942:	add    BYTE PTR [ebx-0x5c],bl
  421945:	xchg   esp,eax
  421946:	inc    esp
  421947:	pop    ebp
  421948:	lock shl dl,0xfe
  42194c:	add    BYTE PTR [esi-0x46],bh
  42194f:	sar    DWORD PTR [ecx-0x62],cl
  421952:	aad    0x1
  421954:	sbb    ecx,DWORD PTR [edx]
  421956:	fldenv [esi]
  421958:	shr    ah,cl
  42195a:	mov    bl,0x0
  42195c:	or     eax,edi
  42195e:	std    
  42195f:	loop   0x421973
  421961:	cmp    eax,0x19875ea
  421966:	add    DWORD PTR [esi-0x6d],esp
  421969:	mov    DWORD PTR [ebp-0x48],ebx
  42196c:	stos   DWORD PTR es:[edi],eax
  42196d:	xor    al,0xfc
  42196f:	and    eax,0xe4ae1297
  421974:	mov    dl,0xee
  421976:	ficom  WORD PTR [eax-0x10]
  421979:	out    dx,al
  42197a:	mov    esi,0xe4f50896
  42197f:	dec    ebp
  421980:	cmp    eax,0xec731840
  421985:	fimul  DWORD PTR [eax+0x4f88c3e8]
  42198b:	daa    
  42198c:	mov    al,0xc0
  42198e:	add    DWORD PTR [ecx+0x478aedb8],ebx
  421994:	push   es
  421995:	xchg   edx,eax
  421996:	cs in  al,dx
  421998:	push   eax
  421999:	mov    esi,0x43859707
  42199e:	dec    edx
  42199f:	pop    ecx
  4219a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219a1:	xchg   edi,eax
  4219a2:	sub    DWORD PTR [edx+edi*2+0xc],eax
  4219a6:	or     bh,bh
  4219a8:	in     al,0xa7
  4219aa:	sub    eax,esp
  4219ac:	jnp    0x42194b
  4219ae:	add    BYTE PTR [ecx],dl
  4219b0:	push   0xc463ef
  4219b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219b6:	jne    0x4219c2
  4219b8:	adc    BYTE PTR [eax+0x1d1e8539],0xd2
  4219bf:	add    al,BYTE PTR ss:[eax+0x5b]
  4219c3:	jno    0x421a17
  4219c5:	jp     0x421a34
  4219c7:	mov    ecx,0xdd983c
  4219cc:	inc    eax
  4219cd:	pop    ecx
  4219ce:	inc    ebx
  4219cf:	xchg   ecx,eax
  4219d0:	fisub  WORD PTR [esi-0x5a]
  4219d3:	add    BYTE PTR [edx],dh
  4219d5:	inc    esp
  4219d6:	stos   BYTE PTR es:[edi],al
  4219d7:	ret    
  4219d8:	fsubr  st,st(4)
  4219da:	jmp    0x4219a9
  4219dc:	add    BYTE PTR ds:0x8d4e820f,dl
  4219e2:	add    al,0x3f
  4219e4:	mov    ds:0x11b65b0e,al
  4219e9:	js     0x4219cd
  4219eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219ec:	xchg   edx,eax
  4219ed:	adc    ebx,DWORD PTR [ebp-0x5]
  4219f0:	out    0x55,eax
  4219f2:	fcomp  DWORD PTR [ebx+0x17]
  4219f5:	pop    es
  4219f6:	test   edi,esp
  4219f8:	mov    dl,BYTE PTR [ebx]
  4219fa:	sbb    dl,BYTE PTR [eax]
  4219fc:	shl    BYTE PTR [eax-0x17ff7c59],0x2
  421a03:	shr    BYTE PTR [eax],1
  421a05:	test   eax,0x3e9478f
  421a0a:	outs   dx,BYTE PTR ds:[esi]
  421a0b:	jecxz  0x421a12
  421a0d:	(bad)  [edx-0x29cf4f9a]
  421a13:	test   BYTE PTR [eax],0xe7
  421a16:	imul   edi,DWORD PTR [eax-0x122a2847],0x3b
  421a1d:	pop    es
  421a1e:	mov    edi,0x9014f317
  421a23:	mov    al,ds:0x222d1270
  421a28:	add    BYTE PTR [ebx+ebx*2+0x56],cl
  421a2c:	push   ds
  421a2d:	sbb    BYTE PTR [ebx-0x68ffd5f7],bh
  421a33:	ins    DWORD PTR es:[edi],dx
  421a34:	sbb    bh,BYTE PTR [esi]
  421a36:	lahf   
  421a37:	jbe    0x4219c5
  421a39:	dec    ebp
  421a3a:	add    BYTE PTR [ecx],bl
  421a3c:	pop    edx
  421a3d:	add    ah,cl
  421a3f:	test   eax,0x8d717c63
  421a44:	inc    edx
  421a45:	scas   al,BYTE PTR es:[edi]
  421a46:	mov    eax,DWORD PTR [eax]
  421a48:	and    DWORD PTR [edi],0x60
  421a4b:	popa   
  421a4c:	or     dl,cl
  421a4e:	xchg   edi,eax
  421a4f:	pop    ss
  421a50:	js     0x421aa2
  421a52:	mov    ds:0x75790385,al
  421a57:	call   0xaad7dc93
  421a5c:	adc    esp,DWORD PTR [edi+ecx*2]
  421a5f:	popa   
  421a60:	rol    eax,0x1
  421a63:	mov    WORD PTR [edx+0x1],gs
  421a66:	mov    esi,0x22a508f5
  421a6b:	add    bh,BYTE PTR [esi]
  421a6d:	inc    esp
  421a6e:	cmp    al,0x86
  421a70:	mov    DWORD PTR [ecx],ebp
  421a72:	adc    cl,BYTE PTR [edx+0x14]
  421a75:	inc    eax
  421a76:	fwait
  421a77:	add    BYTE PTR [eax+0x31],0x83
  421a7b:	inc    eax
  421a7c:	mov    bl,0xe3
  421a7e:	xchg   BYTE PTR [eax-0x20],al
  421a81:	cmp    eax,0x7eb74084
  421a86:	mov    WORD PTR [ebx+0x7f],es
  421a89:	les    esi,FWORD PTR [ecx]
  421a8b:	ror    DWORD PTR [eax],1
  421a8d:	ss and eax,0x10973575
  421a93:	mov    al,0x10
  421a95:	lods   eax,DWORD PTR ds:[esi]
  421a96:	inc    ebp
  421a97:	adc    BYTE PTR [edi],dl
  421a99:	sub    DWORD PTR [ebx],esp
  421a9b:	push   ebx
  421a9c:	js     0x421ac0
  421a9e:	mov    ebp,0x100f8681
  421aa3:	retf   
  421aa4:	pushf  
  421aa5:	and    esp,DWORD PTR [ebp+0x78ec4878]
  421aab:	jg     0x421af1
  421aad:	sbb    BYTE PTR [eax+0x40],ch
  421ab0:	nop
  421ab1:	in     eax,dx
  421ab2:	jmp    0x421ac6
  421ab4:	jnp    0x421ac4
  421ab6:	sub    al,al
  421ab8:	repz xchg esp,eax
  421aba:	punpckhbw mm0,QWORD PTR [edx+eax*2]
  421abe:	xor    al,0x83
  421ac0:	fiadd  DWORD PTR [edx-0x6cd94a40]
  421ac6:	add    BYTE PTR [esi+ecx*1],ah
  421ac9:	jmp    0x7f40:0x7c87855d
  421ad0:	sub    eax,0x751a8f25
  421ad5:	mov    ah,0x97
  421ad7:	inc    eax
  421ad8:	mov    bh,BYTE PTR [edx+0x13]
  421adb:	jecxz  0x421a9f
  421add:	ins    DWORD PTR es:[edi],dx
  421ade:	add    BYTE PTR [esi],cl
  421ae0:	add    al,0x3a
  421ae2:	std    
  421ae3:	xchg   DWORD PTR [esi],ecx
  421ae5:	add    BYTE PTR [esi-0x57],ch
  421ae8:	sahf   
  421ae9:	sar    BYTE PTR [esi-0x5b],1
  421aec:	test   BYTE PTR [ebp+0x4069c509],0xcb
  421af3:	pop    ebp
  421af4:	ins    DWORD PTR es:[edi],dx
  421af5:	xchg   edi,eax
  421af6:	adc    al,bh
  421af8:	add    bl,BYTE PTR [ebx-0x30b80898]
  421afe:	adc    ch,ch
  421b00:	jecxz  0x421a82
  421b02:	(bad)  
  421b03:	in     al,dx
  421b04:	and    DWORD PTR [edx-0x58d7fd19],0x3c
  421b0b:	repz pop es
  421b0d:	mov    al,ds:0x707359a2
  421b12:	and    BYTE PTR [ecx+0x1c],al
  421b15:	and    ah,BYTE PTR [esi+ebx*8]
  421b18:	inc    esp
  421b19:	mov    bl,0x23
  421b1b:	mov    edx,eax
  421b1d:	push   ds
  421b1e:	and    BYTE PTR ds:0xae972df9,dh
  421b24:	rcr    DWORD PTR [esi+0x613bcddc],0x39
  421b2b:	lock jp 0x421abe
  421b2e:	aas    
  421b2f:	lock push ds
  421b31:	xor    BYTE PTR [eax-0x7a02bfd3],0xe4
  421b38:	sbb    al,BYTE PTR [eax]
  421b3a:	sahf   
  421b3b:	mov    esi,0x96929c61
  421b40:	clc    
  421b41:	aam    0xb
  421b43:	xlat   BYTE PTR ds:[ebx]
  421b44:	jmp    0x421b64
  421b46:	inc    ecx
  421b47:	mov    es,WORD PTR [eax]
  421b49:	loope  0x421af8
  421b4b:	gs (bad) 
  421b4e:	clc    
  421b4f:	add    ch,ch
  421b51:	add    edi,DWORD PTR [edi-0x6f]
  421b54:	call   0xe918b492
  421b59:	sub    ecx,DWORD PTR fs:[ebp-0x78]
  421b5d:	mov    ah,0x4a
  421b5f:	add    BYTE PTR [edi+0x14eae656],bh
  421b65:	clc    
  421b66:	adc    eax,0x9e4701b9
  421b6b:	and    al,0xb6
  421b6d:	sbb    ebx,DWORD PTR [eax-0x7bff052a]
  421b73:	dec    esp
  421b74:	xlat   BYTE PTR ds:[ebx]
  421b75:	sub    al,BYTE PTR [eax]
  421b77:	out    0x9d,al
  421b79:	push   ecx
  421b7a:	mov    dl,0x18
  421b7c:	lock divps xmm0,XMMWORD PTR [eax]
  421b80:	mov    BYTE PTR [esi],dh
  421b82:	jl     0x421b79
  421b84:	imul   ebp,DWORD PTR gs:[eax],0x16
  421b88:	jmp    0x4898:0xfcff00c0
  421b8f:	dec    edi
  421b90:	lods   al,BYTE PTR ds:[esi]
  421b91:	dec    ebp
  421b92:	repz add DWORD PTR [ecx],esi
  421b95:	xor    eax,0xf16adf57
  421b9a:	xchg   edx,eax
  421b9b:	rcl    bh,0x2b
  421b9e:	sbb    DWORD PTR [esi+0x64fde4cd],0xb3f93cd9
  421ba8:	fdiv   QWORD PTR [ebp-0x50]
  421bab:	cld    
  421bac:	pop    ebx
  421bad:	or     BYTE PTR [ebx],al
  421baf:	xlat   BYTE PTR ds:[ebx]
  421bb0:	aaa    
  421bb1:	and    BYTE PTR [eax],al
  421bb3:	lea    ecx,[esp+edx*2]
  421bb6:	retf   0xa422
  421bb9:	add    ch,al
  421bbb:	add    al,0x40
  421bbe:	xor    eax,0x221bcdd6
  421bc3:	scas   eax,DWORD PTR es:[edi]
  421bc4:	push   eax
  421bc5:	jbe    0x421b57
  421bc7:	add    BYTE PTR [ebp+0x6f5d5f6],al
  421bcd:	fidivr WORD PTR [ecx-0x25b1f7cc]
  421bd3:	enter  0x17d0,0x52
  421bd7:	loopne 0x421bf2
  421bd9:	dec    eax
  421bda:	add    BYTE PTR [ecx+ebx*8+0x7e],bh
  421bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bdf:	out    0x95,al
  421be1:	test   eax,0xa110001
  421be6:	mov    esp,0x72709ba8
  421beb:	je     0x421bed
  421bed:	loope  0x421bed
  421bef:	lock or eax,DWORD PTR [edx-0x64]
  421bf3:	jns    0x421bc6
  421bf5:	cmp    ecx,DWORD PTR [ebx+0x7773ac6b]
  421bfb:	add    BYTE PTR [ebx+0x4f53c420],bl
  421c01:	xor    al,0x2
  421c03:	popf   
  421c04:	push   eax
  421c05:	shl    BYTE PTR [edx-0x2b],0x2d
  421c09:	call   0x1286e0e
  421c0e:	hlt    
  421c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c10:	jp     0x421bb0
  421c12:	cs sbb al,0xa8
  421c15:	push   esp
  421c16:	add    BYTE PTR [ebx-0x728639fa],dh
  421c1c:	rcr    edi,1
  421c1e:	add    BYTE PTR [eax],0xfc
  421c21:	dec    ebx
  421c22:	hlt    
  421c23:	xchg   DWORD PTR [ebx],edx
  421c25:	and    al,BYTE PTR [ecx]
  421c27:	cmp    al,0x7
  421c29:	outs   dx,DWORD PTR ds:[esi]
  421c2a:	ret    0x3709
  421c2d:	sahf   
  421c2e:	add    BYTE PTR [ecx*4-0x3bff0dad],dl
  421c35:	mov    dl,0x45
  421c37:	in     eax,0x4a
  421c39:	pop    ebp
  421c3a:	fs inc edi
  421c3c:	add    al,ah
  421c3e:	std    
  421c3f:	div    BYTE PTR [eax-0x53dadc1f]
  421c45:	add    BYTE PTR [ebp+edi*1-0x25d9cc25],bl
  421c4c:	out    0x13,al
  421c4e:	add    BYTE PTR [edi-0x4bc033bb],dl
  421c54:	xchg   esi,eax
  421c55:	cmp    al,0xd
  421c57:	(bad)  
  421c59:	repz mov al,0x99
  421c5c:	inc    ecx
  421c5d:	cwde   
  421c5e:	out    0xbc,al
  421c60:	or     al,BYTE PTR [eax-0xd]
  421c63:	ins    BYTE PTR es:[edi],dx
  421c64:	dec    esi
  421c65:	pop    edi
  421c66:	add    BYTE PTR [edi-0x6ad43cf8],ch
  421c6c:	mov    DWORD PTR [esi+0x67e069],eax
  421c72:	enter  0x623d,0xde
  421c76:	mov    bh,0x25
  421c78:	fadd   QWORD PTR [edi-0x50]
  421c7b:	sbb    BYTE PTR ds:0xfe8033ce,bh
  421c81:	(bad)  
  421c82:	push   ds
  421c83:	jge    0x421cbd
  421c85:	js     0x421c18
  421c87:	add    dl,dh
  421c89:	mov    ch,0x94
  421c8b:	jp     0x421c54
  421c8d:	ds loop 0x421c50
  421c90:	add    BYTE PTR [edx],ch
  421c92:	addr16 push edi
  421c94:	aaa    
  421c95:	jno    0x421ccd
  421c97:	jg     0x421c3d
  421c99:	add    dh,cl
  421c9b:	pop    esp
  421c9c:	out    dx,al
  421c9d:	pop    edi
  421c9e:	push   ebp
  421c9f:	push   ecx
  421ca0:	inc    eax
  421ca1:	jne    0x421cfd
  421ca3:	daa    
  421ca4:	add    BYTE PTR [eax+0x23],al
  421ca7:	and    al,0x5b
  421ca9:	adc    ebp,DWORD PTR [eax]
  421cab:	dec    ecx
  421cac:	pop    es
  421cad:	pop    esp
  421cae:	gs ret 0xd000
  421cb2:	in     al,0xc7
  421cb4:	ins    BYTE PTR es:[edi],dx
  421cb5:	call   0x10f9:0x4f1d03f8
  421cbc:	xor    BYTE PTR [edx-0x37f23b85],0xd9
  421cc3:	pop    ss
  421cc4:	lahf   
  421cc5:	fwait
  421cc6:	push   ecx
  421cc7:	add    al,0x34
  421cc9:	sub    BYTE PTR [esi],dh
  421ccb:	ret    
  421ccc:	hlt    
  421ccd:	div    edi
  421ccf:	jo     0x421c56
  421cd1:	fstp   QWORD PTR [edx+0x10]
  421cd4:	add    dh,ch
  421cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cd7:	loop   0x421c8b
  421cd9:	dec    ebp
  421cda:	test   BYTE PTR [edi],al
  421cdc:	clc    
  421cdd:	mov    ch,0xf8
  421cdf:	es sub al,0x99
  421ce2:	xchg   edx,eax
  421ce3:	fstp   DWORD PTR [edi]
  421ce5:	inc    esp
  421ce6:	rcl    BYTE PTR [ecx-0x72156895],0xd9
  421ced:	call   0x34f81dab
  421cf2:	sub    BYTE PTR [ecx-0x353f28b7],0x1
  421cf9:	mov    BYTE PTR [ecx+edx*8+0x43ea47cc],bh
  421d00:	shl    BYTE PTR [ecx+ebx*1+0x0],1
  421d04:	cdq    
  421d05:	vpmacsdql xmm12,xmm2,xmm5,xmm3
  421d0b:	popa   
  421d0c:	mov    eax,0xb36e1c00
  421d11:	adc    DWORD PTR [eax+0x57782ba2],eax
  421d17:	stos   DWORD PTR es:[edi],eax
  421d18:	mov    BYTE PTR [ecx],0x6b
  421d1b:	test   BYTE PTR [ecx+0xd],ch
  421d1e:	sti    
  421d1f:	cmp    eax,0x90a1f477
  421d24:	lock and dh,bl
  421d27:	enter  0x5265,0x0
  421d2b:	pop    ecx
  421d2c:	push   ebx
  421d2d:	sbb    dl,dh
  421d2f:	mov    edx,0xb76f72
  421d34:	jo     0x421d45
  421d36:	mov    ebx,DWORD PTR [ebx]
  421d38:	scas   al,BYTE PTR es:[edi]
  421d39:	aam    0x24
  421d3b:	and    al,BYTE PTR [ecx]
  421d3d:	shr    ch,1
  421d3f:	scas   eax,DWORD PTR es:[edi]
  421d40:	xchg   esp,eax
  421d41:	jl     0x421daa
  421d43:	pop    ebp
  421d44:	jle    0x421ce6
  421d46:	retf   0x9d
  421d49:	rol    ch,cl
  421d4b:	ins    DWORD PTR es:[edi],dx
  421d4c:	fimul  DWORD PTR [ecx+esi*1]
  421d4f:	call   0xe77a1e99
  421d54:	pop    eax
  421d55:	into   
  421d56:	cmovs  esi,esp
  421d59:	in     al,0x4f
  421d5b:	pop    DWORD PTR [eax]
  421d5d:	popa   
  421d5e:	pop    ebx
  421d5f:	ja     0x421d17
  421d61:	push   edi
  421d62:	mov    ecx,0xa501ec5d
  421d67:	mov    bl,0x8
  421d69:	stos   BYTE PTR es:[edi],al
  421d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d6b:	repz retf 
  421d6d:	loopne 0x421d1b
  421d6f:	out    0xf0,eax
  421d71:	dec    edx
  421d72:	add    BYTE PTR [ebx+0x2461b59],cl
  421d78:	out    dx,eax
  421d79:	push   es
  421d7a:	es sbb al,0xb4
  421d7d:	add    ebx,edx
  421d7f:	add    ecx,DWORD PTR [esi]
  421d81:	cs sbb eax,0x2cc1b825
  421d87:	idiv   DWORD PTR [ecx]
  421d89:	(bad)  
  421d8a:	and    al,BYTE PTR [eax-0x535e96aa]
  421d90:	xor    eax,0x18003276
  421d95:	mov    esi,0x96c06bf3
  421d9a:	mov    ds:0x68113f0d,al
  421d9f:	push   ss
  421da0:	cmc    
  421da1:	dec    esi
  421da2:	inc    BYTE PTR [eax]
  421da4:	xor    eax,0xd9cdce36
  421da9:	mov    dh,0x1
  421dab:	sbb    al,0x2a
  421dad:	inc    esp
  421dae:	xor    bl,dh
  421db0:	jle    0x421e02
  421db2:	in     eax,dx
  421db3:	or     dh,ah
  421db5:	dec    ecx
  421db6:	mov    eax,ds:0xb4dc500
  421dbb:	in     eax,dx
  421dbc:	mov    dl,0x3e
  421dbe:	ins    DWORD PTR es:[edi],dx
  421dbf:	icebp  
  421dc0:	aas    
  421dc1:	lods   eax,DWORD PTR gs:[esi]
  421dc3:	pop    es
  421dc4:	mov    esi,0x789f66
  421dc9:	leave  
  421dca:	ficomp DWORD PTR [ebp+0xb]
  421dcd:	cmp    DWORD PTR [eax+0x51],ebp
  421dd0:	cmp    esi,0xb4b87e93
  421dd6:	into   
  421dd7:	loopne 0x421e2d
  421dd9:	push   edi
  421dda:	add    BYTE PTR [esi+0x3],dl
  421ddd:	les    esp,FWORD PTR [edi-0x4fbf0ece]
  421de3:	pop    ds
  421de4:	pop    edx
  421de5:	xchg   ebp,eax
  421de6:	addr16 inc ebx
  421de8:	push   0xd047f484
  421ded:	pop    ecx
  421dee:	fldcw  WORD PTR [ebx]
  421df0:	cld    
  421df1:	aam    0x0
  421df3:	icebp  
  421df4:	push   eax
  421df5:	mov    ds:0x8f5cf7f9,eax
  421dfa:	xchg   edi,eax
  421dfb:	aas    
  421dfc:	sbb    bh,BYTE PTR [edi+0x7a]
  421dff:	add    ch,bl
  421e01:	mov    al,ds:0xc6b2fa96
  421e06:	std    
  421e07:	push   ds
  421e08:	pop    ds
  421e09:	stos   DWORD PTR es:[edi],eax
  421e0a:	sti    
  421e0b:	scas   al,BYTE PTR es:[edi]
  421e0c:	add    BYTE PTR [ebx+0x29bbc22c],cl
  421e12:	icebp  
  421e13:	add    BYTE PTR [ecx-0x56],ah
  421e16:	pop    es
  421e17:	push   esp
  421e18:	loopne 0x421e35
  421e1a:	les    esp,FWORD PTR [ebx+eax*1]
  421e1d:	mov    ebp,0x4e919d71
  421e22:	jmp    0x421dcc
  421e24:	mov    BYTE PTR [ecx],bh
  421e26:	jle    0x421e1a
  421e28:	sub    al,0x0
  421e2a:	test   eax,0x133d575f
  421e2f:	inc    esp
  421e30:	dec    eax
  421e31:	std    
  421e32:	clc    
  421e33:	mov    BYTE PTR [eax],0x41
  421e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e37:	scas   al,BYTE PTR es:[edi]
  421e38:	lea    ecx,[edx]
  421e3a:	xchg   edi,eax
  421e3b:	jo     0x421eb5
  421e3d:	jbe    0x421e2b
  421e3f:	add    dh,ah
  421e41:	xchg   ebx,eax
  421e42:	pushfw 
  421e44:	sti    
  421e45:	aad    0xde
  421e47:	pop    eax
  421e48:	pop    es
  421e49:	pop    edi
  421e4a:	mov    DWORD PTR [ecx],edi
  421e4c:	(bad)  
  421e4e:	and    DWORD PTR [ebp-0x277f169d],0xaeb5e16c
  421e58:	neg    ebx
  421e5a:	jnp    0x421e1c
  421e5c:	jnp    0x421e2a
  421e5e:	add    ah,bh
  421e60:	pushf  
  421e61:	dec    edi
  421e62:	addr16 sbb al,0xfa
  421e65:	ds cs add bl,al
  421e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e6a:	imul   edx,DWORD PTR [esi-0x82e298c],0x0
  421e71:	aaa    
  421e72:	and    eax,0x4b6d4ab
  421e77:	dec    ebp
  421e78:	mov    ebx,0x36ec330b
  421e7d:	sbb    eax,0xc9cc00a3
  421e82:	mov    al,0xf4
  421e84:	pushf  
  421e85:	rol    DWORD PTR [eax],cl
  421e87:	loop   0x421eac
  421e89:	int    0xa6
  421e8b:	pmaddwd mm3,QWORD PTR [ebp+0x14f3e07]
  421e92:	jbe    0x421ed0
  421e94:	imul   ebx,ebx,0xffffff89
  421e97:	lods   al,BYTE PTR ds:[esi]
  421e98:	push   ss
  421e99:	loope  0x421e9c
  421e9b:	xchg   ebx,eax
  421e9c:	in     eax,0xe4
  421e9e:	mov    bl,0xcc
  421ea0:	dec    edi
  421ea1:	xchg   BYTE PTR [eax],al
  421ea3:	adc    al,0x37
  421ea5:	(bad)  
  421ea6:	xor    ah,BYTE PTR [eax]
  421ea8:	jb     0x421e73
  421eaa:	sbb    eax,DWORD PTR [eax]
  421eac:	call   0x5225b9c3
  421eb1:	jbe    0x421eaa
  421eb3:	ret    
  421eb4:	add    al,0xb1
  421eb6:	sub    DWORD PTR [esi+0x7ac07710],ebx
  421ebc:	js     0x421f1d
  421ebe:	ins    BYTE PTR es:[edi],dx
  421ebf:	add    cl,al
  421ec1:	fcmovnb st,st(4)
  421ec3:	and    esi,ebx
  421ec5:	shl    eax,0x7c
  421ec8:	call   0x4aab1fd0
  421ecd:	(bad)  
  421ece:	int3   
  421ecf:	mov    DWORD PTR [edi+0xbe4f40d],edx
  421ed5:	jnp    0x421f1e
  421ed7:	add    BYTE PTR [edi+0x26e6abb6],al
  421edd:	and    dh,BYTE PTR [ebx]
  421edf:	jmp    0x2cf5:0xd7da0701
  421ee6:	(bad)  
  421ee7:	xchg   edx,eax
  421ee8:	enter  0x4f4a,0x3c
  421eec:	and    cl,ah
  421eee:	add    BYTE PTR [ecx+ebp*8-0x67],cl
  421ef2:	and    eax,0x7b6e6a2
  421ef7:	jbe    0x421f52
  421ef9:	adc    eax,0xfde75d9a
  421efe:	pusha  
  421eff:	pop    edx
  421f01:	lea    esp,[esi+0x0]
  421f04:	sbb    BYTE PTR [eax+0x6a8a1030],dh
  421f0a:	mov    esi,DWORD PTR [ebp+0x1b448c00]
  421f10:	adc    al,0x8e
  421f12:	cwde   
  421f13:	loopne 0x421ecc
  421f15:	add    bl,ah
  421f17:	jl     0x421ec6
  421f19:	(bad)  
  421f1a:	cld    
  421f1b:	iret   
  421f1c:	add    DWORD PTR [eax+0x0],ebx
  421f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f20:	xor    DWORD PTR [edx-0x62aeb3b1],edi
  421f26:	dec    ebp
  421f27:	add    dl,dh
  421f29:	add    eax,0xb6bb6563
  421f2e:	ins    DWORD PTR es:[edi],dx
  421f2f:	inc    ebx
  421f30:	push   ds
  421f31:	dec    eax
  421f32:	mov    BYTE PTR [eax],ah
  421f34:	add    BYTE PTR [ebx],bh
  421f36:	(bad)  
  421f37:	neg    DWORD PTR [edx-0x4cff8451]
  421f3d:	xor    DWORD PTR [eiz*1+0x28e00fe1],ebp
  421f44:	jp     0x421f4e
  421f46:	add    BYTE PTR [ebx+0x54bd8fca],al
  421f4c:	pop    ds
  421f4d:	pushf  
  421f4e:	lds    eax,FWORD PTR [eax]
  421f50:	fnstsw WORD PTR [edx+0x70]
  421f53:	adc    BYTE PTR [edi+0xf250ee],0x68
  421f5a:	out    dx,eax
  421f5b:	xchg   ecx,eax
  421f5c:	or     cl,dh
  421f5e:	aaa    
  421f5f:	in     al,dx
  421f60:	xchg   esi,eax
  421f61:	add    BYTE PTR [edx+0x49],dh
  421f64:	push   0xffffffb3
  421f66:	out    0x35,al
  421f68:	rol    BYTE PTR [edi-0xe],cl
  421f6b:	outs   dx,DWORD PTR ds:[esi]
  421f6c:	add    BYTE PTR [eax],ah
  421f6e:	sahf   
  421f6f:	addr16 add eax,0x584030ee
  421f75:	add    esi,ebx
  421f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f78:	add    DWORD PTR [edi],0x13
  421f7b:	sbb    esi,DWORD PTR [ebx]
  421f7d:	fadd   st(2),st
  421f7f:	jp     0x421f81
  421f81:	rcl    esi,0x61
  421f84:	adc    DWORD PTR [edx+0x77d9014],ebp
  421f8a:	cmp    DWORD PTR [si-0x1d],ecx
  421f8e:	or     eax,esp
  421f90:	popf   
  421f91:	sub    bl,BYTE PTR [eax+edx*8-0xe]
  421f95:	out    0x5,al
  421f97:	imul   ebx,DWORD PTR [ebx],0xffffffa6
  421f9a:	inc    esi
  421f9b:	fwait
  421f9c:	shl    BYTE PTR [edi],0x3e
  421f9f:	pop    ds
  421fa0:	daa    
  421fa1:	cmp    ebp,DWORD PTR [ecx+0x27cca669]
  421fa7:	add    BYTE PTR [edi-0x17],dl
  421faa:	xchg   ebp,eax
  421fab:	out    0x79,eax
  421fad:	and    BYTE PTR [eax],al
  421faf:	cmp    BYTE PTR [ebx+0x7e],bh
  421fb2:	mov    ch,0xc
  421fb4:	adc    esp,DWORD PTR [esi+0x23]
  421fb7:	push   ds
  421fb8:	or     ebx,edi
  421fba:	ds inc edi
  421fbc:	mov    edi,0x7ca3a19a
  421fc1:	pop    ds
  421fc2:	mov    eax,0x8ba6b1
  421fc7:	jmp    0x2621:0xbd23c084
  421fce:	jmp    0x97fe76ff
  421fd3:	add    BYTE PTR [esp+esi*2-0x1b],bh
  421fd7:	enter  0x85e6,0x0
  421fdb:	cmp    BYTE PTR [edx-0x80],ah
  421fde:	cmp    dh,BYTE PTR [eax+0xcb620]
  421fe4:	mov    al,ds:0xb142e24b
  421fe9:	xor    bl,ah
  421feb:	js     0x421fe5
  421fed:	cli    
  421fee:	cmp    eax,0x8f00842e
  421ff3:	sbb    al,0x56
  421ff5:	mov    ah,0x33
  421ff7:	and    eax,0x7bd600f1
  421ffc:	in     al,0x81
  421ffe:	sub    cl,ch
  422000:	lods   al,BYTE PTR ds:[esi]
  422001:	mov    BYTE PTR [esi],bl
  422003:	mov    ebp,0xd19d7d52
  422008:	sahf   
  422009:	cmc    
  42200a:	xor    BYTE PTR [edi],0xa5
  42200d:	cld    
  42200e:	mov    edx,0xac1e760d
  422013:	sbb    bh,BYTE PTR [ebx-0x7d745c40]
  422019:	cmp    eax,0xd7b8e60b
  42201e:	jmp    0x76cf:0x619c02ed
  422025:	in     al,0x38
  422027:	adc    BYTE PTR [ebx-0x2a076261],0x9
  42202e:	fldcw  WORD PTR [eax+0xe1dc66]
  422034:	mov    dl,al
  422036:	sub    cl,BYTE PTR [edi]
  422038:	inc    eax
  422039:	sti    
  42203a:	int    0x0
  42203c:	nop
  42203d:	push   edi
  42203e:	cmp    DWORD PTR [edx+edi*2],ebp
  422041:	pop    ebx
  422042:	cli    
  422043:	add    BYTE PTR [eax],0x75
  422046:	repnz fidiv DWORD PTR [edx*8+0xe8aeea4]
  42204e:	jns    0x422033
  422050:	xor    eax,0xdb32a0ba
  422055:	lds    edi,FWORD PTR ds:0xea8800e2
  42205b:	xchg   esi,eax
  42205c:	std    
  42205d:	xor    esi,edi
  42205f:	sub    BYTE PTR [edx+0x40],ch
  422062:	(bad)  
  422063:	xchg   ebp,eax
  422064:	add    bl,dl
  422066:	push   eax
  422067:	and    BYTE PTR [ecx+0x7f23bbe4],dh
  42206d:	add    BYTE PTR ds:0xf3fec3b9,dh
  422073:	cmp    al,0x8f
  422075:	xchg   ebx,eax
  422076:	add    cl,bl
  422078:	inc    ecx
  422079:	rol    BYTE PTR [esi-0x72],0x18
  42207d:	push   ss
  42207e:	push   0x1d
  422080:	inc    edx
  422081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422082:	mov    ecx,0x6771db81
  422087:	or     bl,ch
  422089:	cld    
  42208a:	leave  
  42208b:	repz add BYTE PTR [ebx+ecx*8+0x5160a313],dh
  422093:	sbb    bl,BYTE PTR [ebx-0x45525600]
  422099:	in     eax,dx
  42209a:	and    DWORD PTR [esi+0x7c],ebx
  42209d:	rol    DWORD PTR [eax-0x3fe80d3b],cl
  4220a3:	mul    DWORD PTR [ebx+eax*1]
  4220a6:	sub    eax,0xc8b83c6a
  4220ab:	xchg   edi,eax
  4220ac:	aam    0x2
  4220ae:	add    dl,ah
  4220b0:	ins    DWORD PTR es:[edi],dx
  4220b1:	lds    esp,FWORD PTR [ebp-0x38]
  4220b4:	mov    ah,0xb7
  4220b6:	pop    eax
  4220b7:	add    BYTE PTR [ebp+0x304bd968],al
  4220bd:	ror    DWORD PTR [ebx+0x49550036],0xca
  4220c4:	jp     0x422112
  4220c6:	mov    eax,0x8100487b
  4220cb:	mov    ds:0x7a154f9,al
  4220d0:	frstor [ebp+0x7a]
  4220d3:	cmp    eax,0x4bd70f0e
  4220d8:	clc    
  4220d9:	inc    ecx
  4220da:	mov    esi,0xc9ece46d
  4220df:	push   ss
  4220e0:	in     al,dx
  4220e1:	jno    0x42207e
  4220e3:	add    dl,bl
  4220e5:	inc    ecx
  4220e6:	(bad)  
  4220e7:	xchg   edx,eax
  4220e8:	mov    ebx,0xb371f7b
  4220ed:	inc    esi
  4220ee:	xor    BYTE PTR [ebx-0x1372ff9e],cl
  4220f4:	(bad)  
  4220f5:	fwait
  4220f6:	inc    DWORD PTR [eax]
  4220f8:	mov    dh,0x2e
  4220fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220fb:	push   edx
  4220fc:	inc    edx
  4220fd:	aad    0xab
  4220ff:	sub    eax,0xe876e404
  422104:	xor    esi,DWORD PTR [edx+0x48b00f0]
  42210a:	pop    esi
  42210b:	outs   dx,BYTE PTR ds:[esi]
  42210c:	scas   eax,DWORD PTR es:[edi]
  42210d:	in     al,dx
  42210e:	fwait
  42210f:	add    BYTE PTR [ebp-0x5f564756],ah
  422115:	add    BYTE PTR ds:0xdeb0e6db,bl
  42211b:	data16 ins BYTE PTR es:[edi],dx
  42211d:	jmp    0x422121
  42211f:	sahf   
  422120:	loope  0x4220fa
  422122:	pop    ebp
  422123:	push   eax
  422124:	popf   
  422125:	in     al,0x0
  422127:	add    BYTE PTR [ecx],bl
  422129:	jge    0x42213f
  42212b:	fwait
  42212c:	pop    esp
  42212d:	rdtsc  
  42212f:	jecxz  0x422131
  422131:	jg     0x4220c8
  422133:	pop    ebx
  422134:	loop   0x42215d
  422136:	pop    esi
  422137:	xor    al,0xb9
  422139:	add    ecx,ebx
  42213b:	mov    BYTE PTR [edi-0x77e59b0],ah
  422141:	and    eax,0xfb14f04f
  422146:	xchg   esp,eax
  422147:	jge    0x4220cc
  422149:	add    cl,dh
  42214b:	xchg   esi,eax
  42214c:	cmp    dl,0xb1
  42214f:	add    ah,BYTE PTR [esi+edx*1-0x3]
  422153:	adc    edi,esi
  422155:	rcl    BYTE PTR [edi+0x44e60e],0x14
  42215c:	push   ss
  42215d:	aas    
  42215e:	xor    dh,BYTE PTR [esi-0x3b]
  422161:	xchg   BYTE PTR [eax-0x644e3600],ah
  422167:	cmp    ebp,esp
  422169:	jp     0x42217a
  42216b:	xchg   ebp,eax
  42216c:	add    al,0x1
  42216e:	pop    ss
  42216f:	popa   
  422170:	leave  
  422171:	ds add dl,al
  422174:	or     BYTE PTR [ecx+ebx*1],0xcc
  422178:	add    BYTE PTR [esi+0x65fcf99e],bh
  42217e:	test   eax,0x7f202731
  422183:	out    0x3c,al
  422185:	jmp    0x814d:0xde980b69
  42218c:	aaa    
  42218d:	add    DWORD PTR [edx+0x74],eax
  422190:	ins    BYTE PTR es:[edi],dx
  422191:	xchg   edi,eax
  422192:	add    BYTE PTR [esi-0x3ae20049],dh
  422198:	outs   dx,BYTE PTR ds:[esi]
  422199:	adc    al,0x0
  42219b:	mov    BYTE PTR [edx],dh
  42219d:	sub    cl,ch
  42219f:	pop    ecx
  4221a0:	ds push esp
  4221a2:	add    BYTE PTR gs:[edx],bh
  4221a5:	xchg   edx,eax
  4221a6:	test   eax,0x2a4488b
  4221ab:	icebp  
  4221ac:	add    BYTE PTR [edx-0x6f],bl
  4221af:	loop   0x42214e
  4221b1:	pop    ss
  4221b2:	fnstsw WORD PTR [edi+0x7d05f629]
  4221b8:	pop    ebx
  4221b9:	add    BYTE PTR [esi-0x56495226],bh
  4221bf:	cli    
  4221c0:	(bad)  
  4221c1:	xchg   ecx,eax
  4221c2:	add    DWORD PTR [ebx-0xd595c01],eax
  4221c8:	or     al,0x41
  4221ca:	fcomp  QWORD PTR [edi]
  4221cc:	push   ebx
  4221cd:	push   cs
  4221ce:	rcl    esp,cl
  4221d0:	or     ebp,DWORD PTR [esi-0x7ea66d5e]
  4221d6:	jecxz  0x4221d8
  4221d8:	call   0x1cc65ece
  4221dd:	sti    
  4221de:	xlat   BYTE PTR ds:[ebx]
  4221df:	leave  
  4221e0:	sub    BYTE PTR [ebx+0x64],0xaa
  4221e4:	pop    esi
  4221e5:	jge    0x4221ca
  4221e7:	push   eax
  4221e8:	in     al,0xdd
  4221ea:	pop    ecx
  4221eb:	add    al,ch
  4221ed:	push   ebx
  4221ee:	or     bh,bl
  4221f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221f1:	or     al,0x5a
  4221f3:	iret   
  4221f4:	push   ds
  4221f5:	imul   esi,esi,0x432980e2
  4221fb:	arpl   di,bx
  4221fd:	sbb    eax,0xc77800bd
  422202:	push   es
  422203:	or     ch,cl
  422205:	adc    esi,ecx
  422207:	cmp    al,0xe0
  422209:	enter  0x9d00,0x19
  42220d:	or     eax,DWORD PTR [ebp+0x5e]
  422210:	and    eax,0xbb024ecb
  422215:	pusha  
  422216:	lds    edi,FWORD PTR [edx]
  422218:	jbe    0x42226b
  42221a:	js     0x42221c
  42221c:	push   ds
  42221d:	aad    0x20
  42221f:	mov    ecx,DWORD PTR [eax+0x7b]
  422222:	sub    BYTE PTR [eax],al
  422224:	mov    WORD PTR [eax+0x1],?
  422227:	ss test eax,0xe66100ac
  42222d:	mov    ebp,0xcee9bb31
  422232:	jle    0x422234
  422234:	add    al,BYTE PTR [ecx-0x5c]
  422237:	cmp    DWORD PTR [ecx],0xffffffbe
  42223a:	mov    esp,0x611f007d
  42223f:	out    dx,al
  422240:	rcr    DWORD PTR [edi-0x6d],0x12
  422244:	mov    ds:0x25b06a01,al
  422249:	mov    bh,0xf7
  42224b:	mov    dh,0xdb
  42224d:	hlt    
  42224e:	fs ret 
  422250:	add    cl,dh
  422252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422253:	sbb    eax,0xaeb20f59
  422258:	mov    ah,0x0
  42225a:	xor    ebp,ebp
  42225c:	add    al,0xa7
  42225e:	adc    bl,BYTE PTR [eax+eiz*8+0xa1e00be]
  422265:	sbb    eax,0x195ea58b
  42226a:	mov    DWORD PTR [eax],eax
  42226c:	and    DWORD PTR [ebp-0x56],0xfffffffa
  422270:	xchg   edi,eax
  422271:	xor    BYTE PTR [edi+eax*2+0x3a],ah
  422275:	push   esp
  422276:	inc    ebx
  422277:	add    BYTE PTR ds:0x8581cd58,bh
  42227d:	jp     0x810998bf
  422283:	sub    cl,BYTE PTR [esi-0x10]
  422286:	jmp    0x2ef8:0x73736766
  42228d:	mov    bl,0xdb
  42228f:	iret   
  422290:	add    BYTE PTR [ebx-0x43369db7],al
  422296:	push   ebp
  422297:	add    BYTE PTR [eax+0x5fb8ad6e],ch
  42229d:	adc    edx,ebp
  42229f:	mov    eax,DWORD PTR [ecx]
  4222a1:	ffree  st(5)
  4222a3:	dec    edi
  4222a4:	cmp    DWORD PTR [edx+0x79],edi
  4222a7:	push   edx
  4222a8:	fsub   DWORD PTR [edi]
  4222aa:	fs add bl,bh
  4222ad:	les    eax,FWORD PTR [ecx-0x1d]
  4222b0:	outs   dx,BYTE PTR ds:[esi]
  4222b1:	xor    ebp,DWORD PTR [edx-0x73]
  4222b4:	add    eax,0xcbc2f29b
  4222b9:	xor    al,al
  4222bb:	add    BYTE PTR [eax],ah
  4222bd:	das    
  4222be:	arpl   WORD PTR [eax],ax
  4222c0:	jns    0x42230b
  4222c2:	ins    DWORD PTR es:[edi],dx
  4222c3:	jno    0x42224a
  4222c5:	xchg   BYTE PTR ds:0x5c88007f,ah
  4222cb:	and    BYTE PTR [ebp+ebx*8+0xd16f3],0xc7
  4222d3:	inc    edx
  4222d4:	jmp    DWORD PTR [ebx]
  4222d6:	std    
  4222d7:	pop    edx
  4222d8:	shl    DWORD PTR [esi+0x2c],cl
  4222db:	mov    edi,0x840a4214
  4222e0:	imul   ebx,esp,0x0
  4222e3:	xor    ecx,ebp
  4222e5:	sub    eax,0x6d250c
  4222ea:	xchg   esp,eax
  4222eb:	mov    cl,0xb8
  4222ed:	pop    ss
  4222ee:	test   DWORD PTR [edx+0x39],ebp
  4222f1:	daa    
  4222f2:	pop    es
  4222f3:	cli    
  4222f4:	or     ah,BYTE PTR [ebx+0x6bc04473]
  4222fa:	dec    ecx
  4222fb:	loope  0x422358
  4222fd:	add    bh,dl
  4222ff:	inc    ecx
  422300:	les    esp,FWORD PTR [eax+0x35368246]
  422306:	add    BYTE PTR [edi-0x1451a6e6],bl
  42230c:	jp     0x42238a
  42230e:	dec    edi
  42230f:	lock in eax,dx
  422311:	add    BYTE PTR [ebp-0x3e],dh
  422314:	push   edi
  422315:	push   es
  422316:	pop    esp
  422317:	ds js  0x422397
  42231a:	or     esp,DWORD PTR [ecx+edx*2-0x31]
  42231e:	adc    DWORD PTR [eax],eax
  422320:	jge    0x4222e6
  422322:	sub    eax,0xfd00aaf3
  422327:	push   esp
  422328:	aam    0xeb
  42232a:	mov    dh,BYTE PTR [edi]
  42232c:	popf   
  42232d:	scas   al,BYTE PTR es:[edi]
  42232e:	sbb    al,0x2c
  422330:	nop
  422331:	(bad)  
  422332:	pop    es
  422333:	mov    eax,ds:0xadb04585
  422338:	daa    
  422339:	sub    eax,0xb95d0031
  42233e:	iret   
  42233f:	xchg   ebp,eax
  422340:	fisubr DWORD PTR [edx]
  422342:	cld    
  422343:	lds    eax,FWORD PTR [eax]
  422345:	push   ebx
  422346:	pop    ecx
  422347:	and    edi,ebx
  422349:	ss inc esi
  42234b:	or     DWORD PTR [edi],ebp
  42234d:	add    BYTE PTR [eax],bl
  42234f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422350:	push   esp
  422351:	idiv   DWORD PTR [esi]
  422353:	ror    BYTE PTR [ebx],1
  422355:	repnz pop ds
  422357:	mov    esi,0x9201406c
  42235c:	retf   
  42235d:	mov    dl,0x4e
  42235f:	(bad)  
  422360:	loopne 0x4223a5
  422362:	leave  
  422363:	add    BYTE PTR [ebp+0x38],bh
  422366:	sti    
  422367:	repnz push edx
  422369:	inc    edi
  42236a:	mov    bl,0xdf
  42236c:	add    al,0xa6
  42236e:	in     eax,dx
  42236f:	das    
  422370:	mov    bh,0x62
  422372:	rol    DWORD PTR [esp+edx*2-0x22a68f7e],0x0
  42237a:	pop    ss
  42237b:	lods   eax,DWORD PTR ds:[esi]
  42237c:	stc    
  42237d:	mov    dl,0x70
  42237f:	sbb    eax,0x1c008e5b
  422384:	mov    ds:0xc02ce853,eax
  422389:	je     0x4223fa
  42238b:	add    dl,cl
  42238d:	bound  ecx,QWORD PTR [ebx-0x66cbdf22]
  422393:	dec    ecx
  422394:	add    BYTE PTR [ebx-0x76],bl
  422397:	sub    DWORD PTR [eax],edi
  422399:	ss add eax,0x9e002f78
  42239f:	adc    edi,esi
  4223a1:	fisubr DWORD PTR [edi-0x10]
  4223a4:	std    
  4223a5:	or     BYTE PTR [eax],al
  4223a7:	popa   
  4223a8:	stc    
  4223a9:	retf   0x643f
  4223ac:	jmp    0x4223ea
  4223ae:	jl     0x4223b0
  4223b0:	lds    ebx,FWORD PTR [esi]
  4223b2:	fsubp  st(2),st
  4223b4:	add    ebp,DWORD PTR [eax+0x55]
  4223b7:	int3   
  4223b8:	push   ds
  4223b9:	push   cs
  4223ba:	add    DWORD PTR [edx],ebp
  4223bc:	pop    ds
  4223bd:	xlat   BYTE PTR ds:[ebx]
  4223be:	add    DWORD PTR [eax+0x7b27495f],ebp
  4223c4:	in     al,0x8b
  4223c6:	test   eax,0xec6b8d00
  4223cb:	adc    DWORD PTR ds:0x88690f,eax
  4223d1:	(bad)  
  4223d2:	addr16 push edx
  4223d4:	sbb    dh,BYTE PTR [ecx-0x2d]
  4223d7:	rcl    DWORD PTR [esi],1
  4223d9:	add    DWORD PTR [esi],esp
  4223db:	lods   eax,DWORD PTR ds:[esi]
  4223dc:	add    DWORD PTR [eax-0x3b48d550],ebx
  4223e2:	and    al,0x54
  4223e4:	or     eax,eax
  4223e6:	add    bl,bh
  4223e8:	mov    BYTE PTR [eax],0x56
  4223eb:	test   al,dl
  4223ed:	fld    DWORD PTR [edi]
  4223ef:	add    BYTE PTR [edx-0x4aaf53a2],cl
  4223f5:	pop    edi
  4223f6:	mov    WORD PTR [edx+0x0],ds
  4223f9:	jmp    0xb030:0x241ef2e7
  422400:	mov    ds:0x3a000876,eax
  422405:	pop    ebx
  422406:	into   
  422407:	jmp    0x4223dd
  422409:	loopne 0x422472
  42240b:	sbb    BYTE PTR [esi],cl
  42240d:	xor    al,0xf8
  42240f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422410:	xor    ch,BYTE PTR [ebx-0x37dd7fc7]
  422416:	add    ecx,DWORD PTR [edx+0x40]
  422419:	add    edi,ebp
  42241b:	cmp    bl,cl
  42241d:	lods   eax,DWORD PTR ds:[esi]
  42241e:	cmp    BYTE PTR [ecx],ch
  422420:	dec    esi
  422421:	fdiv   st,st(6)
  422423:	and    al,BYTE PTR [eax]
  422425:	mov    dh,0x1b
  422427:	sti    
  422428:	push   ss
  422429:	test   DWORD PTR [edx-0x631b0a03],0x7500567d
  422433:	mov    ecx,0xfc7a1008
  422438:	and    eax,0xb74a003d
  42243d:	mov    bl,BYTE PTR [ecx+0x17]
  422440:	ror    ebx,0xe9
  422443:	add    BYTE PTR [esi],dh
  422445:	xor    edi,DWORD PTR [eax-0x5c1300e8]
  42244b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42244c:	add    BYTE PTR [ebx-0x38a0c40a],ch
  422452:	lds    edx,FWORD PTR [ecx]
  422454:	push   ecx
  422455:	pop    es
  422456:	pop    ss
  422457:	test   al,0xe7
  422459:	inc    esi
  42245a:	ds lock adc eax,0xb0d43d61
  422461:	xor    al,0x0
  422463:	dec    eax
  422464:	xor    eax,0x62281cb2
  422469:	mov    eax,ds:0xc079fc
  42246e:	ret    
  42246f:	add    edx,ebx
  422471:	mov    esi,0xf4fa1dcc
  422476:	add    DWORD PTR [esi-0x2beaf0b9],esp
  42247c:	(bad)  
  42247d:	std    
  42247e:	rcr    al,1
  422480:	out    0x2,eax
  422482:	push   ecx
  422483:	loope  0x42244c
  422485:	imul   esp,esi,0x1988c0bf
  42248b:	leave  
  42248c:	add    DWORD PTR [ebx-0x76],eax
  42248f:	shl    DWORD PTR ds:0x202ab2bc,cl
  422495:	mov    al,0x53
  422497:	add    BYTE PTR [eax-0x16],dl
  42249a:	stos   BYTE PTR es:[edi],al
  42249b:	pop    ecx
  42249c:	adc    esp,DWORD PTR [edx]
  42249e:	add    bh,BYTE PTR [esi+0x0]
  4224a1:	mov    ah,0xd2
  4224a3:	xchg   ebp,eax
  4224a4:	xchg   esp,eax
  4224a5:	add    eax,0x78487a45
  4224aa:	lds    ebx,FWORD PTR [eax+0x1dab07ee]
  4224b0:	retf   0x3f2
  4224b3:	cmp    BYTE PTR [ebp+0xd],0xa7
  4224b7:	add    edx,esi
  4224b9:	jbe    0x4224bb
  4224bb:	std    
  4224bc:	sub    bh,cl
  4224be:	cmp    DWORD PTR [ebp+0x34],eax
  4224c1:	and    ebp,ebp
  4224c3:	add    BYTE PTR [ebx],ch
  4224c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224c6:	or     al,0xd8
  4224c8:	jge    0x422488
  4224ca:	(bad)  
  4224cb:	pop    ds
  4224cc:	add    BYTE PTR [edi+0x1799d9d3],cl
  4224d2:	mov    al,bl
  4224d4:	cmp    al,0x78
  4224d6:	das    
  4224d7:	add    BYTE PTR [ebx],cl
  4224d9:	mov    edi,0x4d38823f
  4224de:	in     eax,dx
  4224df:	sub    eax,0xb2b3a600
  4224e4:	mov    cl,0x79
  4224e6:	clc    
  4224e7:	test   BYTE PTR [eax+0x47c76401],al
  4224ed:	add    al,0xa3
  4224ef:	test   al,0xbb
  4224f1:	int3   
  4224f2:	jmp    0xb2dc:0xf093dd4
  4224f9:	add    eax,0x8b3a2f39
  4224fe:	cmp    al,0x57
  422501:	jmp    0x42252c
  422503:	add    BYTE PTR [eax-0x13ca5006],bl
  422509:	in     eax,dx
  42250a:	ret    
  42250b:	les    edi,FWORD PTR [edi+0x31]
  42250e:	add    BYTE PTR [ecx-0x10],bl
  422511:	sbb    DWORD PTR [edx+0x334dbdb7],edx
  422517:	add    BYTE PTR [ebx-0x5d],cl
  42251a:	icebp  
  42251b:	xchg   BYTE PTR [edx+0x257267],dh
  422521:	pop    ds
  422522:	jg     0x4224ca
  422524:	mov    ah,0x4e
  422526:	mov    edx,0xfa003bb1
  42252b:	iret   
  42252c:	jge    0x422587
  42252e:	aas    
  42252f:	scas   al,BYTE PTR es:[edi]
  422530:	push   ebp
  422531:	inc    esi
  422532:	pop    ds
  422533:	fimul  WORD PTR [ebp+0x217b80b9]
  422539:	inc    edi
  42253a:	xor    eax,0x93028a9b
  42253f:	shr    BYTE PTR [edx],cl
  422541:	hlt    
  422542:	jbe    0x422551
  422544:	loopne 0x422546
  422546:	and    al,0xc8
  422548:	add    BYTE PTR [ecx-0x6979b71f],bl
  42254e:	xor    DWORD PTR [edi+0x1f],esi
  422551:	add    al,0x23
  422553:	dec    ecx
  422554:	scas   eax,DWORD PTR es:[edi]
  422555:	pop    eax
  422556:	mov    dh,0x4
  422558:	arpl   WORD PTR [ebx-0x4600fde1],si
  42255e:	ins    DWORD PTR es:[edi],dx
  42255f:	and    eax,0xa0854803
  422564:	clc    
  422565:	add    ebp,DWORD PTR [edx+0x401b011e]
  42256b:	add    BYTE PTR [edx-0x540bce7c],cl
  422571:	outs   dx,BYTE PTR ds:[esi]
  422572:	cmp    esi,DWORD PTR [ecx+edx*1-0x4]
  422576:	adc    edi,DWORD PTR [eax]
  422578:	jmp    0x2efe:0x9788001a
  42257f:	imul   ebx,DWORD PTR [ecx+0x3],0xa2519276
  422586:	fs mov ecx,0x9e625f8
  42258c:	add    BYTE PTR [ebx],dh
  42258e:	and    DWORD PTR [ebp-0x7006e0b4],eax
  422594:	or     eax,0xe7a46b00
  422599:	pop    edx
  42259a:	add    al,0xc
  42259c:	mov    WORD PTR [edi],cs
  42259e:	add    al,bh
  4225a0:	ss push ebx
  4225a2:	jae    0x4225e2
  4225a4:	fwait
  4225a5:	push   cs
  4225a6:	sti    
  4225a7:	add    BYTE PTR [edi+0x68],ch
  4225aa:	push   ecx
  4225ac:	popa   
  4225ad:	pusha  
  4225ae:	inc    esi
  4225af:	ret    0xf3a1
  4225b2:	test   eax,0x6b2e4cc
  4225b7:	cli    
  4225b8:	ins    BYTE PTR es:[edi],dx
  4225b9:	cwde   
  4225ba:	shl    BYTE PTR [eax+ecx*2+0x0],cl
  4225be:	mov    al,0xcc
  4225c0:	sahf   
  4225c1:	add    cl,BYTE PTR [esi+0xd6b7dd]
  4225c7:	inc    ebx
  4225c8:	xor    bh,BYTE PTR [ebx]
  4225ca:	jo     0x42260b
  4225cc:	ret    
  4225cd:	scas   eax,DWORD PTR es:[edi]
  4225ce:	mov    BYTE PTR [ecx],0x93
  4225d1:	cmp    al,0xd8
  4225d3:	in     eax,0x88
  4225d5:	xor    al,0x27
  4225d7:	cld    
  4225d8:	nop
  4225d9:	mov    DWORD PTR [eax],eax
  4225db:	adc    ebp,DWORD PTR [ecx]
  4225dd:	fidiv  WORD PTR [esi+0x79]
  4225e0:	cdq    
  4225e1:	add    eax,0xbbcd0031
  4225e6:	xor    BYTE PTR [eax],dl
  4225e8:	lea    eax,[ecx+eiz*2]
  4225eb:	inc    edi
  4225ec:	add    DWORD PTR [edx],edx
  4225ee:	mov    edx,0xf692cab6
  4225f3:	jle    0x422625
  4225f5:	(bad)  
  4225f6:	outs   dx,DWORD PTR ds:[esi]
  4225f7:	and    al,0xbd
  4225f9:	aad    0x27
  4225fb:	add    BYTE PTR [ebx],cl
  4225fd:	add    DWORD PTR [edi],edi
  4225ff:	pusha  
  422600:	or     bh,BYTE PTR [edi+0xe00617f]
  422606:	mov    ch,0x54
  422608:	rcr    BYTE PTR [ebx+0x55],cl
  42260b:	enter  0x5ffe,0x44
  42260f:	add    bl,cl
  422611:	outs   dx,BYTE PTR cs:[esi]
  422613:	not    ecx
  422615:	aad    0x0
  422617:	int3   
  422618:	call   0xa85a34ae
  42261d:	push   esp
  42261e:	inc    ecx
  42261f:	add    bh,cl
  422621:	(bad)  
  422622:	gs mov ebp,0x8482d5a
  422628:	in     al,dx
  422629:	js     0x42262e
  42262b:	add    edx,eax
  42262d:	stos   BYTE PTR es:[edi],al
  42262e:	loopne 0x422657
  422630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422631:	fld    DWORD PTR [edx+edx*4-0x1c]
  422635:	aaa    
  422636:	outs   dx,BYTE PTR ds:[esi]
  422637:	pop    es
  422638:	lahf   
  422639:	loope  0x42269f
  42263b:	pop    esp
  42263c:	rol    DWORD PTR [eax],cl
  42263e:	xor    eax,0xfc34a3fc
  422643:	pop    ebx
  422644:	sub    al,0x1f
  422646:	imul   eax,DWORD PTR [esi+0x63ba7d01],0x2dcc4008
  422650:	sti    
  422651:	pop    es
  422652:	mov    DWORD PTR [ecx],esi
  422654:	scas   al,BYTE PTR es:[edi]
  422655:	mov    ebx,0xeaee605a
  42265a:	fsubr  st(3),st
  42265c:	add    al,bl
  42265e:	cmc    
  42265f:	sar    DWORD PTR [eax],1
  422661:	and    ch,BYTE PTR [eax-0x73]
  422664:	sbb    BYTE PTR [eax],al
  422666:	mov    esp,0x2a24b697
  42266b:	inc    esp
  42266c:	dec    ecx
  42266d:	add    DWORD PTR [eax],0xfdcaa874
  422673:	mov    edx,0x71eb67
  422678:	arpl   WORD PTR [ebx-0x2e],bp
  42267b:	dec    esp
  42267c:	in     eax,dx
  42267d:	pop    ss
  42267e:	pop    ds
  42267f:	adc    cl,BYTE PTR [edx]
  422681:	cwde   
  422682:	cld    
  422683:	jnp    0x422673
  422685:	call   0x80cb:0xad43cc07
  42268c:	fcomi  st,st(6)
  42268e:	mov    ds:0x8500c456,eax
  422693:	int    0xbc
  422695:	into   
  422696:	icebp  
  422697:	add    al,0x89
  422699:	test   al,0x0
  42269b:	cld    
  42269c:	push   ss
  42269d:	xor    eax,0x8f24a51e
  4226a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a3:	pop    es
  4226a4:	imul   eax,ecx,0x10
  4226a7:	xchg   esp,eax
  4226a8:	out    0x61,eax
  4226aa:	jp     0x4226fe
  4226ac:	cmp    BYTE PTR [eax-0x6],al
  4226af:	dec    eax
  4226b0:	pop    esi
  4226b1:	push   ds
  4226b2:	add    BYTE PTR [eax+0x5ddf4c3a],ah
  4226b8:	(bad)  
  4226b9:	lahf   
  4226ba:	and    al,0x0
  4226bc:	pop    edi
  4226bd:	loope  0x422657
  4226bf:	sub    al,0x86
  4226c1:	mov    DWORD PTR ds:0x51eb00a7,0xdc5d5cef
  4226cb:	dec    esp
  4226cc:	push   es
  4226cd:	sbb    eax,0xc042b7ab
  4226d2:	jge    0x422709
  4226d4:	ja     0x422704
  4226d6:	sbb    dh,bh
  4226d8:	sub    al,0xe6
  4226da:	mov    al,0xe
  4226dc:	add    eax,0xf0b292db
  4226e1:	add    al,dh
  4226e3:	add    BYTE PTR [eax],ch
  4226e5:	or     eax,0x71a9c3cb
  4226ea:	cmp    BYTE PTR [ebx],bl
  4226ec:	and    BYTE PTR [esi-0x5499fd67],dl
  4226f2:	fcmovbe st,st(5)
  4226f4:	ins    BYTE PTR es:[edi],dx
  4226f5:	add    BYTE PTR [eax],0x31
  4226f8:	or     esp,ebx
  4226fa:	mov    edx,0xc0939200
  4226ff:	mov    esp,0xa367db9a
  422704:	movntps XMMWORD PTR [ebx],xmm7
  422707:	popa   
  422708:	jl     0x42272a
  42270a:	stos   BYTE PTR es:[edi],al
  42270b:	mov    bh,0x99
  42270d:	lahf   
  42270e:	sbb    eax,DWORD PTR [edi]
  422710:	cmp    bh,BYTE PTR [edi+0x30f27535]
  422716:	pop    eax
  422717:	std    
  422718:	movaps XMMWORD PTR [eax],xmm0
  42271b:	into   
  42271c:	xor    ch,bl
  42271e:	push   es
  42271f:	adc    BYTE PTR [eax+edx*2],dl
  422722:	dec    edx
  422723:	add    BYTE PTR [edx-0x51720c93],dl
  422729:	js     0x42270e
  42272b:	add    al,0x16
  42272d:	rol    BYTE PTR [edi],0xd7
  422730:	cmovo  ecx,esp
  422733:	inc    edi
  422734:	dec    esp
  422735:	test   al,0xe0
  422737:	test   eax,0x1f6123
  42273c:	dec    ebx
  42273d:	out    dx,al
  42273e:	repz and al,0xa4
  422742:	call   0xa7e4:0xe29900c4
  422749:	or     al,0xf1
  42274b:	cmp    BYTE PTR [ecx+0x7601bf3c],cl
  422751:	push   ss
  422752:	xchg   ecx,eax
  422753:	stc    
  422754:	loope  0x422740
  422756:	or     ecx,esp
  422758:	or     eax,esp
  42275a:	add    bl,ch
  42275c:	sub    BYTE PTR [ecx],bh
  42275e:	xchg   edx,eax
  42275f:	stos   BYTE PTR es:[edi],al
  422760:	sbb    DWORD PTR [ecx-0x64a6b1fd],0x664c3075
  42276a:	add    BYTE PTR ds:0x1f2afeaf,al
  422770:	fisub  WORD PTR [ebp+eax*2+0x7200f57c]
  422777:	repz xchg esp,eax
  422779:	out    0x5d,al
  42277b:	into   
  42277c:	mov    esp,0x4c400d3
  422781:	sar    DWORD PTR [edi+0x77d81fc2],1
  422787:	or     DWORD PTR [edi-0x25],edx
  42278a:	or     al,0xcc
  42278c:	xor    BYTE PTR [esi+0x46908406],0x0
  422793:	add    al,0x3
  422795:	xor    BYTE PTR [ecx],0x39
  422798:	call   0xb042861d
  42279d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42279e:	dec    esp
  42279f:	pop    edi
  4227a0:	cs sbb eax,0x1a39942d
  4227a6:	rol    BYTE PTR [eax],cl
  4227a8:	stos   DWORD PTR es:[edi],eax
  4227a9:	fld    st(1)
  4227ab:	sub    bh,BYTE PTR [edx-0x6b]
  4227ae:	adc    esi,edx
  4227b0:	and    BYTE PTR ds:0x348f5e06,al
  4227b6:	sbb    eax,0xb04ef6c3
  4227bb:	adc    BYTE PTR [edx-0x5b5aff6e],cl
  4227c1:	loope  0x42278d
  4227c3:	rdpmc  
  4227c5:	addr16 sub al,0x1
  4227c8:	jno    0x4227a2
  4227ca:	cmp    dh,BYTE PTR [ecx+eiz*2+0x40fcfad9]
  4227d1:	add    ch,BYTE PTR ds:0x4bdc30b5
  4227d7:	add    BYTE PTR [eax+0x169a9713],cl
  4227dd:	fld    QWORD PTR [eax]
  4227df:	xor    edi,DWORD PTR [edx]
  4227e1:	(bad)  
  4227e3:	push   ecx
  4227e4:	pop    ebp
  4227e5:	fsubr  DWORD PTR [ebp+0x0]
  4227e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227e9:	in     al,dx
  4227ea:	pusha  
  4227eb:	xchg   ebx,eax
  4227ec:	sbb    al,0x41
  4227ee:	sub    al,0xbd
  4227f0:	add    dh,bh
  4227f2:	fcom   QWORD PTR [edx]
  4227f4:	jl     0x422804
  4227f6:	popa   
  4227f7:	add    al,0x38
  4227f9:	es add eax,0xa607941f
  4227ff:	xlat   BYTE PTR ds:[bx]
  422801:	nop
  422802:	test   eax,0x3283e4
  422807:	loop   0x4227c1
  422809:	ss pusha 
  42280b:	fwait
  42280c:	mov    ds:0x900b1d4,al
  422811:	sbb    DWORD PTR [ecx+0x21b5df7b],0xba8d00ec
  42281b:	push   ss
  42281c:	gs hlt 
  42281e:	add    DWORD PTR [edi+0x4ad80bab],0xffffffcc
  422825:	sub    DWORD PTR [eax-0x6750f700],eax
  42282b:	aaa    
  42282c:	add    BYTE PTR [edx],dl
  42282e:	jg     0x422827
  422830:	jbe    0x4227f3
  422832:	shr    DWORD PTR [esi-0x4a],1
  422835:	add    BYTE PTR [ecx+0x23],dh
  422838:	sbb    eax,0xa85f5534
  42283d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42283e:	add    BYTE PTR [edi-0x1],cl
  422841:	pushf  
  422842:	mov    esi,DWORD PTR [ebx-0x55]
  422845:	ds retf 0xa500
  422849:	push   0x5d7c41da
  42284e:	fsubp  st(1),st
  422850:	add    BYTE PTR [ecx-0x73],ah
  422853:	std    
  422854:	fstp   st(3)
  422856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422857:	iret   
  422858:	test   al,0x0
  42285a:	adc    eax,0x9176cdb7
  42285f:	aam    0x56
  422861:	pop    esp
  422862:	jae    0x42289f
  422864:	add    BYTE PTR [esi],dh
  422866:	jecxz  0x422891
  422868:	in     eax,dx
  422869:	scas   al,BYTE PTR es:[edi]
  42286a:	dec    ecx
  42286b:	pop    ss
  42286c:	or     eax,DWORD PTR [eax]
  42286e:	dec    eax
  42286f:	inc    esp
  422870:	shl    DWORD PTR [edi+0x7b],cl
  422873:	mov    ah,0xd5
  422875:	hlt    
  422876:	pop    es
  422877:	enter  0x9ef3,0xcb
  42287b:	xor    DWORD PTR [eax+0x10],0x27
  42287f:	and    DWORD PTR [edi-0x1d16800],esi
  422885:	xchg   DWORD PTR [ecx+0xee52a3],ecx
  42288b:	jb     0x422842
  42288d:	push   0xffffffbd
  42288f:	push   0x3ca86981
  422894:	pusha  
  422895:	push   ecx
  422896:	add    BYTE PTR [edi],bh
  422898:	push   cs
  422899:	shr    BYTE PTR [edx],0xb0
  42289c:	ret    0xdc
  42289f:	mov    esi,0x1dda906
  4228a4:	push   ds
  4228a5:	leave  
  4228a6:	add    eax,0x8bd4fe09
  4228ab:	cwde   
  4228ac:	js     0x4228ae
  4228ae:	add    DWORD PTR [esi],esp
  4228b0:	jp     0x422888
  4228b2:	out    dx,eax
  4228b3:	pop    ecx
  4228b4:	mov    bh,0xda
  4228b6:	and    bl,bh
  4228b8:	test   BYTE PTR [eax],al
  4228ba:	push   cs
  4228bb:	dec    eax
  4228bc:	mov    al,0xfe
  4228be:	in     al,dx
  4228bf:	std    
  4228c0:	test   al,0xa4
  4228c2:	sbb    al,0x70
  4228c4:	push   ss
  4228c5:	fadd   DWORD PTR [eax+0x4e]
  4228c8:	dec    ebx
  4228c9:	xchg   ebp,eax
  4228ca:	push   edx
  4228cb:	push   ebp
  4228cc:	mov    ah,0x0
  4228ce:	mov    eax,0xc37aec17
  4228d3:	rcl    BYTE PTR [edx+ecx*8+0x0],0xa
  4228d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228d9:	lds    ecx,FWORD PTR [ebx+ebx*1-0x1e]
  4228dd:	dec    eax
  4228de:	cmc    
  4228df:	add    bl,BYTE PTR [ecx+edx*4-0xb2d9539]
  4228e6:	ja     0x42286d
  4228e8:	fild   QWORD PTR [ecx-0x41]
  4228eb:	rcl    BYTE PTR ds:0x2c71a0,0x35
  4228f2:	sbb    DWORD PTR [edx],esi
  4228f4:	add    DWORD PTR [ecx+edx*4-0x4cec3101],esp
  4228fb:	xchg   edx,eax
  4228fc:	push   cs
  4228fd:	add    dl,bh
  4228ff:	retf   0x747e
  422902:	fucompp 
  422904:	add    al,0x2e
  422906:	loop   0x422925
  422908:	jge    0x4228f7
  42290a:	mov    esp,0x87b33a00
  42290f:	sbb    al,dl
  422911:	xchg   BYTE PTR [ecx-0xee69550],bh
  422917:	xchg   DWORD PTR [edx],esp
  422919:	sbb    eax,0xf8cd704a
  42291e:	fadd   DWORD PTR [eax+0x13]
  422921:	test   DWORD PTR ds:0x48a18165,eax
  422927:	pop    ss
  422928:	add    ch,dh
  42292a:	rcr    ah,1
  42292c:	sbb    BYTE PTR [eax],cl
  42292e:	or     al,0x0
  422930:	cmp    al,0xca
  422932:	stos   BYTE PTR es:[edi],al
  422933:	jne    0x4228f1
  422935:	aaa    
  422936:	xor    BYTE PTR [edx-0x4fbecb00],0xdb
  42293d:	mov    ecx,0x9026e38
  422942:	dec    ebp
  422943:	xchg   edi,eax
  422944:	sti    
  422945:	dec    esp
  422946:	js     0x422948
  422948:	add    ecx,edx
  42294a:	jle    0x42295c
  42294c:	stos   DWORD PTR es:[edi],eax
  42294d:	pusha  
  42294e:	daa    
  42294f:	comiss xmm0,DWORD PTR [eax+0x554f355c]
  422956:	add    DWORD PTR [esi-0x7ec83b71],eax
  42295c:	(bad)  
  42295d:	cmp    esp,eax
  42295f:	jle    0x4229b4
  422961:	add    BYTE PTR [ebp-0x15],al
  422964:	xchg   edi,eax
  422965:	push   esp
  422966:	push   edx
  422967:	imul   eax,DWORD PTR [edi],0xffffffdc
  42296a:	add    BYTE PTR [eax+0x1d],dl
  42296d:	js     0x422907
  42296f:	(bad)
  422973:	push   ds
  422974:	(bad)  
  422976:	add    BYTE PTR [eax+0x15321467],0x26
  42297d:	jo     0x42299e
  42297f:	dec    edx
  422980:	retf   0x8ec3
  422983:	or     esi,DWORD PTR [edi-0x3f]
  422986:	stos   BYTE PTR es:[edi],al
  422987:	push   0x4b
  422989:	pop    ss
  42298a:	and    BYTE PTR [esi+0x18],al
  42298d:	add    esi,DWORD PTR [ecx+0x19]
  422990:	xchg   ecx,eax
  422991:	ins    BYTE PTR es:[edi],dx
  422992:	mov    gs,WORD PTR [edx]
  422994:	fadd   QWORD PTR [eax+0x58b493b7]
  42299a:	add    BYTE PTR [edi+0x1efd74ae],ah
  4229a0:	push   ebx
  4229a1:	mov    dh,0x8a
  4229a3:	add    ch,ah
  4229a5:	out    0x86,eax
  4229a7:	or     bh,bl
  4229a9:	out    0x3c,al
  4229ab:	and    eax,DWORD PTR [eax]
  4229ad:	retf   0xbfab
  4229b0:	xor    DWORD PTR [edx+esi*2-0x2fff9f78],ebp
  4229b7:	hlt    
  4229b8:	inc    BYTE PTR [edx+ebx*8]
  4229bb:	arpl   WORD PTR [eax+0x56],bx
  4229be:	pop    es
  4229bf:	jne    0x422953
  4229c1:	sbb    ecx,ebx
  4229c3:	cmp    eax,0xeced0530
  4229c8:	jbe    0x4229e7
  4229ca:	mov    eax,0xcfc00159
  4229cf:	cwde   
  4229d0:	pop    ebp
  4229d1:	inc    edi
  4229d2:	out    dx,eax
  4229d3:	arpl   WORD PTR [ebx],ax
  4229d5:	sbb    cl,bl
  4229d7:	push   es
  4229d8:	fs push 0xffffff9e
  4229db:	lahf   
  4229dc:	lock rcr DWORD PTR [ebx-0x68ffb7da],1
  4229e3:	jge    0x4229d5
  4229e5:	out    dx,eax
  4229e6:	popa   
  4229e7:	cmp    bh,dl
  4229e9:	call   0x8a0eb1ee
  4229ee:	icebp  
  4229ef:	xchg   BYTE PTR ds:[ebp-0x535b9f8c],bh
  4229f6:	push   esi
  4229f7:	das    
  4229f8:	xor    bh,BYTE PTR [ebp+0x0]
  4229fb:	add    DWORD PTR [edi],0xfffffff8
  4229fe:	push   cs
  4229ff:	mov    ebp,edx
  422a01:	sahf   
  422a02:	mov    WORD PTR [eax],es
  422a04:	pop    esp
  422a05:	in     eax,dx
  422a06:	imul   ebp,DWORD PTR [eax+0x36],0xffffffdb
  422a0a:	call   0x61b751a5
  422a0f:	pusha  
  422a10:	xchg   edi,eax
  422a11:	icebp  
  422a12:	xor    al,0x0
  422a14:	add    DWORD PTR [ebx-0x48],0xed640c20
  422a1b:	adc    al,0xf
  422a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a1e:	mov    dl,0x8d
  422a20:	cdq    
  422a21:	push   eax
  422a22:	add    ebp,DWORD PTR [eax]
  422a24:	add    bh,BYTE PTR [eax+0x65]
  422a27:	in     eax,0xe8
  422a29:	out    dx,al
  422a2a:	scas   al,BYTE PTR es:[edi]
  422a2b:	nop
  422a2c:	add    BYTE PTR [ebx+0x79b74991],dl
  422a32:	mov    ds,WORD PTR [ebp+0x39]
  422a35:	seta   bh
  422a38:	popa   
  422a39:	adc    eax,DWORD PTR cs:[eax]
  422a3c:	outs   dx,DWORD PTR ds:[esi]
  422a3d:	xor    al,0x73
  422a3f:	inc    ebx
  422a40:	into   
  422a41:	sbb    al,0x0
  422a43:	xor    cl,bl
  422a45:	in     al,dx
  422a46:	and    al,0x65
  422a48:	xor    ebp,DWORD PTR [eax-0x11d8ffca]
  422a4e:	sub    bh,dh
  422a50:	sysret 
  422a52:	and    DWORD PTR [edi+0x4b],ebp
  422a55:	test   eax,edi
  422a57:	push   ds
  422a58:	add    BYTE PTR [ecx+ecx*8],bl
  422a5b:	lds    ebx,FWORD PTR [ebx+0x493af5]
  422a61:	inc    edi
  422a62:	in     eax,0xb5
  422a64:	popf   
  422a65:	test   eax,0xe165928e
  422a6a:	cmp    ecx,DWORD PTR [edi]
  422a6c:	xchg   edi,eax
  422a6d:	jnp    0x422a9d
  422a6f:	xchg   esi,eax
  422a70:	add    ebp,esi
  422a72:	rcr    esp,0xcb
  422a75:	dec    ecx
  422a76:	fsub   DWORD PTR [ecx-0x418cfc73]
  422a7c:	add    BYTE PTR [ecx],al
  422a7e:	cld    
  422a7f:	dec    esp
  422a80:	lods   eax,DWORD PTR ds:[esi]
  422a81:	pop    ecx
  422a82:	outs   dx,DWORD PTR ds:[esi]
  422a83:	jl     0x422a58
  422a85:	cmp    ebx,ebp
  422a87:	sbb    BYTE PTR [eax-0x57c5180],al
  422a8d:	clc    
  422a8e:	test   eax,0x1fc006d
  422a93:	sbb    DWORD PTR [ebx+0x16],esi
  422a96:	push   edi
  422a97:	jmp    FWORD PTR [edi+ecx*1]
  422a9a:	adc    eax,0xef6e1b81
  422a9f:	fld    TBYTE PTR [esi]
  422aa1:	fsubr  QWORD PTR [ecx+0x40078e8]
  422aa7:	shl    DWORD PTR [ecx+ebp*8],1
  422aaa:	imul   ebp,DWORD PTR [eax+eax*1],0x37
  422aae:	dec    esi
  422aaf:	pop    ebx
  422ab0:	mul    DWORD PTR [ebp+0x76329103]
  422ab6:	outs   dx,BYTE PTR ds:[esi]
  422ab7:	(bad)  
  422ab8:	pop    esp
  422ab9:	test   al,0x90
  422abb:	and    cl,BYTE PTR [ebp+0x1]
  422abe:	xor    BYTE PTR [esi],dl
  422ac0:	cmp    eax,0x6a96c274
  422ac5:	fsubr  QWORD PTR [ecx]
  422ac7:	pop    ebp
  422ac8:	add    ah,dl
  422aca:	xor    al,0x32
  422acc:	xchg   eax,eax
  422ace:	fs fwait
  422ad0:	rol    DWORD PTR [eax],cl
  422ad2:	mov    al,0x50
  422ad4:	pop    ds
  422ad5:	sub    eax,esp
  422ad7:	sahf   
  422ad8:	or     dl,BYTE PTR [ecx]
  422ada:	pop    esp
  422adb:	jb     0x422ac7
  422add:	jle    0x422adf
  422adf:	ins    BYTE PTR es:[edi],dx
  422ae0:	push   ecx
  422ae1:	mul    DWORD PTR [esi]
  422ae3:	push   cs
  422ae4:	lods   eax,DWORD PTR ds:[esi]
  422ae5:	pop    esi
  422ae6:	js     0x422aea
  422ae8:	je     0x422b65
  422aea:	and    al,0x41
  422aec:	jge    0x422b24
  422aee:	and    BYTE PTR [edx-0x894fcec],0x0
  422af5:	sub    al,BYTE PTR [eax+0x67]
  422af8:	push   ss
  422af9:	dec    esp
  422afa:	lea    esi,[ecx-0x4f]
  422afd:	add    ebx,edx
  422aff:	rcr    ecx,0x1f
  422b02:	xchg   edx,eax
  422b03:	ja     0x422b15
  422b05:	jl     0x422b07
  422b07:	cmp    al,0x90
  422b09:	pushf  
  422b0a:	push   eax
  422b0b:	push   ds
  422b0c:	and    dh,0xd0
  422b0f:	cwde   
  422b10:	push   ecx
  422b11:	fs aaa 
  422b13:	add    dl,bl
  422b15:	push   es
  422b16:	repnz xchg esi,eax
  422b18:	fadd   st(6),st
  422b1a:	dec    ebx
  422b1b:	add    BYTE PTR [eax],0x5b
  422b1e:	popf   
  422b1f:	sub    esp,eax
  422b21:	sti    
  422b22:	pop    ebp
  422b23:	ss mov esp,0x2fa23e
  422b29:	in     al,dx
  422b2a:	sbb    edi,DWORD PTR [ebp+0x64]
  422b2d:	and    esi,eax
  422b2f:	mov    esi,0x992c104
  422b34:	iret   
  422b35:	pop    ds
  422b36:	(bad)  
  422b37:	pop    edi
  422b38:	push   eax
  422b39:	and    eax,0x848333
  422b3e:	bound  esp,QWORD PTR [ebp+0x1a427ab1]
  422b44:	inc    esi
  422b45:	xchg   ecx,eax
  422b46:	add    dh,ch
  422b48:	mov    edi,0x67360307
  422b4d:	leave  
  422b4e:	out    dx,eax
  422b4f:	mov    al,0xc4
  422b51:	add    BYTE PTR [edi-0x20b0bf22],al
  422b57:	mov    esi,0x3707063d
  422b5c:	call   FWORD PTR [edi-0x55]
  422b5f:	and    BYTE PTR fs:[ecx+0x4],dl
  422b63:	inc    ebp
  422b64:	repnz add dh,al
  422b67:	adc    eax,DWORD PTR [eax-0x67]
  422b6a:	in     eax,0xb3
  422b6c:	xor    dl,BYTE PTR [ebp+0x0]
  422b6f:	push   ds
  422b70:	xlat   BYTE PTR ds:[ebx]
  422b71:	jbe    0x422b40
  422b73:	and    al,0x3f
  422b75:	push   eax
  422b76:	cmp    ebx,DWORD PTR [ecx]
  422b78:	mov    bh,BYTE PTR [edi+ebx*2]
  422b7b:	jl     0x422b99
  422b7d:	jo     0x422b7f
  422b7f:	popf   
  422b80:	add    ecx,ecx
  422b82:	fstp   TBYTE PTR [ebx+0x787a839a]
  422b88:	int3   
  422b89:	aaa    
  422b8a:	xor    eax,0x46f0ce07
  422b8f:	loop   0x422b58
  422b91:	lock or al,0xd3
  422b94:	push   0x6e
  422b96:	add    BYTE PTR [edi],dl
  422b98:	dec    ebx
  422b99:	jns    0x422b59
  422b9b:	cdq    
  422b9c:	push   ebp
  422b9d:	(bad)  
  422b9e:	retf   
  422b9f:	add    eax,0x317f073b
  422ba4:	clc    
  422ba5:	adc    BYTE PTR [esi+0x74],0x4
  422ba9:	cmp    al,BYTE PTR [eax]
  422bab:	xor    al,0xdd
  422bad:	push   ss
  422bae:	outs   dx,BYTE PTR ds:[esi]
  422baf:	gs inc edx
  422bb1:	sti    
  422bb2:	jle    0x422c2e
  422bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bb5:	cmp    cl,BYTE PTR [eax+0x9]
  422bb8:	add    BYTE PTR [esp+ebp*1],cl
  422bbb:	xchg   edx,eax
  422bbc:	adc    eax,DWORD PTR [ecx+0x43]
  422bbf:	add    esp,DWORD PTR ds:[edi]
  422bc2:	in     eax,0x7b
  422bc4:	int    0x90
  422bc6:	cmp    BYTE PTR [eax+0xb909d5],cl
  422bcc:	je     0x422bea
  422bce:	fdivr  DWORD PTR [ecx+eiz*4+0x58]
  422bd2:	adc    al,bh
  422bd4:	add    BYTE PTR [edi-0x101387c4],ch
  422bda:	xor    al,0x96
  422bdc:	mov    ebx,0xca004d7c
  422be1:	mov    esp,0x25d8dc1c
  422be6:	push   cs
  422be7:	call   0x2cae:0x92fd3500
  422bee:	test   al,0x46
  422bf0:	cmp    al,0x0
  422bf2:	jae    0x422c6f
  422bf4:	mov    edx,0x2a5b690f
  422bf9:	push   eax
  422bfa:	add    esp,esi
  422bfc:	jle    0x422bd2
  422bfe:	jmp    0xd84e1a9b
  422c03:	cmp    eax,0x3b8900d2
  422c08:	not    DWORD PTR [edi+0x7d]
  422c0b:	popf   
  422c0c:	push   0x775500ed
  422c11:	mov    edx,0x61c8f532
  422c16:	xor    DWORD PTR [eax],eax
  422c18:	mov    ch,0x98
  422c1a:	mov    dl,0x7a
  422c1c:	ins    DWORD PTR es:[edi],dx
  422c1d:	call   0xcbaf:0x3b0027ab
  422c24:	lock jecxz 0x422ca3
  422c27:	mov    ds:0x50d30033,al
  422c2c:	clc    
  422c2d:	add    al,0x5a
  422c2f:	out    dx,eax
  422c30:	push   ss
  422c31:	lods   eax,DWORD PTR ds:[esi]
  422c32:	or     DWORD PTR [ebp+0x46],esp
  422c35:	into   
  422c36:	cld    
  422c37:	add    eax,ebp
  422c39:	push   0xe0dc0291
  422c3e:	out    0x0,al
  422c40:	iret   
  422c41:	shl    DWORD PTR ds:0xaf5153a0,1
  422c47:	sbb    al,BYTE PTR [eax]
  422c49:	lahf   
  422c4a:	ins    BYTE PTR es:[edi],dx
  422c4b:	push   0x6be278d7
  422c50:	inc    edi
  422c51:	pop    es
  422c52:	(bad)  
  422c53:	jo     0x422beb
  422c55:	repz rol BYTE PTR [eax],0x39
  422c59:	sub    al,0xc
  422c5b:	xor    bh,BYTE PTR [edx]
  422c5d:	xchg   ebp,eax
  422c5e:	call   0x21f9:0xf4a7dc80
  422c65:	adc    eax,0x75c900ec
  422c6a:	test   BYTE PTR [ebx],0xfe
  422c6d:	mov    al,0x8a
  422c6f:	push   ss
  422c70:	add    BYTE PTR [esi],bl
  422c72:	stos   DWORD PTR es:[edi],eax
  422c73:	dec    edx
  422c74:	pop    ds
  422c75:	push   ecx
  422c76:	data16 jp 0x422c36
  422c79:	mov    eax,0x1f4ef000
  422c7e:	ss test al,0xe0
  422c81:	inc    eax
  422c82:	hlt    
  422c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c84:	jae    0x422c74
  422c86:	sub    ebp,DWORD PTR [ebx+0x11f7981d]
  422c8c:	pop    esp
  422c8d:	cld    
  422c8e:	inc    eax
  422c8f:	and    al,BYTE PTR [esi]
  422c91:	push   ecx
  422c92:	nop
  422c93:	call   0x4277:0xb0b8a9
  422c9a:	fmul   QWORD PTR [ebp-0x5fa23ef4]
  422ca0:	add    ecx,edi
  422ca2:	out    0x49,al
  422ca4:	dec    ebp
  422ca5:	jle    0x422c8f
  422ca7:	dec    esi
  422ca8:	xor    BYTE PTR ds:0xdb2604d8,dl
  422cae:	pop    esp
  422caf:	push   0xffffffad
  422cb1:	mov    ebp,0x994800
  422cb6:	ins    BYTE PTR es:[edi],dx
  422cb7:	int    0x15
  422cb9:	repnz push ds
  422cbb:	icebp  
  422cbc:	pop    ecx
  422cbd:	jne    0x422c8a
  422cbf:	jbe    0x422cf7
  422cc1:	lahf   
  422cc2:	rol    BYTE PTR [eax+0x4a],0x13
  422cc6:	add    BYTE PTR [edx],cl
  422cc8:	dec    eax
  422cc9:	sbb    ebx,DWORD PTR [ebx-0x1dbee75c]
  422ccf:	add    BYTE PTR [edx],ah
  422cd1:	ss jbe 0x422cd3
  422cd4:	inc    edi
  422cd5:	mov    bl,0x2b
  422cd7:	es push cs
  422cd9:	push   ebx
  422cda:	je     0x422d5a
  422cdc:	cmp    ah,BYTE PTR [eax+0x1aba2e96]
  422ce2:	jo     0x422ce4
  422ce4:	adc    DWORD PTR [esi-0xc],eax
  422ce7:	imul   eax,DWORD PTR [edi],0x17566b65
  422ced:	or     BYTE PTR [ecx+edx*4-0x40],ch
  422cf1:	add    BYTE PTR [eax+0x3f00d1b1],ah
  422cf7:	add    DWORD PTR [ecx-0x57],0x68
  422cfb:	sub    BYTE PTR [esi],dl
  422cfd:	xchg   ebp,eax
  422cfe:	pop    ds
  422cff:	mov    ebp,ecx
  422d01:	mov    bh,0x0
  422d03:	jecxz  0x422d3d
  422d05:	les    esp,FWORD PTR [ecx+eax*8-0x647df0eb]
  422d0c:	retf   
  422d0d:	sbb    eax,edi
  422d0f:	scas   al,BYTE PTR es:[edi]
  422d10:	pop    ss
  422d11:	add    BYTE PTR [edx],0x22
  422d14:	loopne 0x422d73
  422d16:	add    dl,ch
  422d18:	inc    edi
  422d19:	std    
  422d1a:	test   BYTE PTR [eax+esi*8],al
  422d1d:	pushf  
  422d1e:	sub    DWORD PTR [eax],eax
  422d20:	icebp  
  422d21:	sbb    al,0xc0
  422d23:	inc    ebx
  422d24:	sbb    al,BYTE PTR [edx]
  422d26:	mov    ah,0xc4
  422d28:	mov    al,0x70
  422d2a:	add    bh,bh
  422d2c:	mov    edi,0x77bb22cc
  422d31:	(bad)
  422d34:	mov    ds:0xe0b6e200,al
  422d39:	aad    0x3d
  422d3b:	sub    bl,BYTE PTR [ebp-0x364cff72]
  422d41:	sbb    dl,ch
  422d43:	fcom   DWORD PTR [edi+0x571224b1]
  422d49:	add    eax,0x3b500793
  422d4e:	imul   esp,DWORD PTR [eax+0x48db01ce],0x708e8a00
  422d58:	sbb    eax,0xa50e08f8
  422d5d:	sbb    al,0x13
  422d5f:	adc    DWORD PTR [eax+eax*8],esi
  422d62:	icebp  
  422d63:	xchg   esi,eax
  422d64:	shl    DWORD PTR [edi-0x6],0x3a
  422d68:	in     al,dx
  422d69:	or     al,BYTE PTR [eax]
  422d6b:	sbb    al,0x78
  422d6d:	inc    esi
  422d6e:	jne    0x422dc7
  422d70:	or     BYTE PTR [edx-0x7f],bh
  422d73:	cmp    eax,0xd6832cf0
  422d78:	xor    BYTE PTR [ecx],al
  422d7a:	hlt    
  422d7b:	inc    ebp
  422d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d7d:	add    dl,BYTE PTR [ebx+0x4053f759]
  422d83:	pop    ss
  422d84:	sahf   
  422d85:	jmp    0x557cbd72
  422d8a:	jne    0x422d0c
  422d8c:	call   DWORD PTR [edx+0x27]
  422d8f:	mov    bl,0x26
  422d91:	lock retf 
  422d93:	add    BYTE PTR [eax+0x7a6cc67c],al
  422d99:	or     BYTE PTR [edx+0x6ec7014d],dl
  422d9f:	mov    dl,0xc
  422da1:	jo     0x422e1c
  422da3:	and    edi,DWORD PTR [edx+0x3b5181ee]
  422da9:	lds    ebx,FWORD PTR [ebp-0x61]
  422dac:	jnp    0x422d76
  422dae:	push   eax
  422daf:	nop
  422db0:	cmp    ch,BYTE PTR [esi+0x6f]
  422db3:	pop    ds
  422db4:	adc    edi,0xffffffc0
  422db7:	pop    edx
  422db8:	mov    ds:0xdc3075a9,eax
  422dbd:	cmp    BYTE PTR [edi],cl
  422dbf:	mov    edi,0x8971480
  422dc4:	cmp    DWORD PTR [ebx-0xf1d21e],edx
  422dca:	sbb    eax,0xe9a745e6
  422dcf:	mov    bh,0x10
  422dd1:	sti    
  422dd2:	or     dl,BYTE PTR [ebp-0x1d]
  422dd5:	add    BYTE PTR [eax-0x78d5061b],bl
  422ddb:	pop    ecx
  422ddc:	ror    BYTE PTR [edx+0x34e7b01],0x1f
  422de3:	jbe    0x422d78
  422de5:	mov    ds:0x731aee4,eax
  422dea:	lods   eax,DWORD PTR ds:[esi]
  422deb:	xor    al,0xa7
  422ded:	mov    ecx,0xcf55f0bf
  422df2:	xor    eax,0x6c9407c6
  422df7:	inc    edi
  422df8:	popa   
  422df9:	retf   0x24b0
  422dfc:	rol    DWORD PTR [ebx-0x7a],1
  422dff:	pop    es
  422e00:	dec    esp
  422e01:	jne    0x422d94
  422e03:	idiv   DWORD PTR [eax-0x10]
  422e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e08:	xor    DWORD PTR [eax],0x3e
  422e0b:	dec    eax
  422e0c:	outs   dx,DWORD PTR ds:[esi]
  422e0d:	add    BYTE PTR [eax+0x6ed366a8],cl
  422e13:	rcr    BYTE PTR [ebx+0x0],1
  422e16:	aaa    
  422e17:	mov    ebx,0x22aeab19
  422e1c:	iret   
  422e1d:	jmp    0x422e5d
  422e1f:	aam    0x9d
  422e21:	add    BYTE PTR [edi],bl
  422e23:	jns    0x422de7
  422e25:	inc    edi
  422e26:	mov    DWORD PTR [ebx],eax
  422e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e29:	psadbw mm7,mm5
  422e2c:	push   ecx
  422e2d:	sar    BYTE PTR [bx+si+0x7bff],0x3c
  422e33:	mov    bl,0x0
  422e35:	push   es
  422e36:	fwait
  422e37:	adc    ebp,DWORD PTR [edx+0x4e2325f]
  422e3d:	add    BYTE PTR [edx-0x5e],dl
  422e40:	(bad)  
  422e41:	ficomp DWORD PTR ds:0x28d7be
  422e47:	and    al,0xe6
  422e49:	add    DWORD PTR [edi],esi
  422e4b:	std    
  422e4c:	dec    ecx
  422e4d:	push   ecx
  422e4e:	or     BYTE PTR [edi],0xc4
  422e51:	xchg   ebx,eax
  422e52:	shl    BYTE PTR [ebp-0x48146500],cl
  422e58:	jno    0x422e7c
  422e5a:	or     ecx,DWORD PTR [eax+ecx*1]
  422e5d:	je     0x422e9a
  422e5f:	pop    eax
  422e60:	xchg   edi,eax
  422e61:	add    BYTE PTR [edx-0x45],bh
  422e64:	addr16 inc ebp
  422e66:	sti    
  422e67:	(bad)  
  422e69:	xchg   esi,eax
  422e6a:	cmp    al,0xef
  422e6c:	mov    dh,0x9f
  422e6e:	or     DWORD PTR [ecx-0x78fe1bbc],edx
  422e74:	add    cl,BYTE PTR [eax+0xb201e1f]
  422e7a:	(bad)  
  422e7b:	jmp    0xd7cb3425
  422e80:	es dec edi
  422e82:	add    eax,0x6fc45b80
  422e87:	mov    dl,0xf0
  422e89:	iret   
  422e8a:	cmp    ebx,DWORD PTR [edx+ecx*2+0x6b559e]
  422e91:	jns    0x422e8e
  422e93:	cli    
  422e94:	adc    ebx,ecx
  422e96:	pop    es
  422e97:	add    ah,ch
  422e99:	dec    BYTE PTR gs:[esi]
  422e9c:	mov    ebx,0x2ecfd3bc
  422ea1:	into   
  422ea2:	popa   
  422ea3:	and    eax,0x3a9d601c
  422ea8:	or     DWORD PTR [ebx+0x2cfa017b],esp
  422eae:	test   DWORD PTR [ebx-0x38],eax
  422eb1:	lahf   
  422eb2:	pop    ds
  422eb3:	psllq  mm6,QWORD PTR [esi]
  422eb6:	lds    edx,FWORD PTR [eax+0xc28fa00]
  422ebc:	clc    
  422ebd:	ficomp DWORD PTR [edi+0x67100080]
  422ec3:	mov    bl,0x42
  422ec5:	mov    eax,0x5da80000
  422eca:	test   ebx,esp
  422ecc:	pushf  
  422ecd:	mov    eax,0xc212b990
  422ed2:	icebp  
  422ed3:	cmp    eax,0xd3556700
  422ed8:	jae    0x422ea9
  422eda:	lock aas 
  422edc:	pop    esp
  422edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ede:	ja     0x422f5e
  422ee0:	int3   
  422ee1:	add    BYTE PTR [esi-0x46],dh
  422ee4:	mov    edi,0x744f7cb6
  422ee9:	push   0xd637a00
  422eee:	push   ebx
  422eef:	js     0x422efb
  422ef1:	popa   
  422ef2:	cmp    BYTE PTR [eax],al
  422ef4:	inc    ebp
  422ef5:	dec    edx
  422ef6:	cmp    eax,0x418c6f30
  422efb:	les    ecx,FWORD PTR [ebx]
  422efd:	pop    esi
  422efe:	jl     0x422f12
  422f00:	or     eax,0xd71d0080
  422f05:	mov    eax,0x4d90321
  422f0a:	and    eax,0xe8cdc045
  422f0f:	mov    dl,0x51
  422f11:	xor    al,BYTE PTR [eax]
  422f13:	and    bl,BYTE PTR [esp+ebx*2]
  422f16:	push   ss
  422f17:	add    eax,0x46dbe6
  422f1c:	push   esi
  422f1d:	scas   eax,DWORD PTR es:[edi]
  422f1e:	cmp    DWORD PTR ds:[ebp+0x6f],esi
  422f22:	cmp    cl,bh
  422f24:	lock mov BYTE PTR [eax],al
  422f27:	adc    eax,0xbaf5c05d
  422f2c:	jae    0x422f21
  422f2e:	adc    al,0x0
  422f30:	pop    edx
  422f31:	cwde   
  422f32:	push   es
  422f33:	cmp    ch,al
  422f35:	jmp    0x422fb0
  422f37:	adc    DWORD PTR [eax],eax
  422f39:	ror    ebp,1
  422f3b:	pop    ecx
  422f3c:	gs ins BYTE PTR es:[edi],dx
  422f3e:	adc    eax,0x819f3735
  422f43:	add    bl,bh
  422f45:	(bad)  
  422f46:	pop    eax
  422f47:	jo     0x422f96
  422f49:	add    bl,BYTE PTR [ecx+edi*1+0x0]
  422f4d:	add    BYTE PTR [esp+eiz*2-0x7803577d],ch
  422f54:	bound  eax,QWORD PTR [eax]
  422f56:	out    dx,eax
  422f57:	fidiv  WORD PTR [ebx+0x70]
  422f5a:	mov    al,0x38
  422f5c:	call   0x8ac42ff9
  422f61:	dec    ebp
  422f62:	xchg   ebx,eax
  422f63:	sbb    bh,BYTE PTR [esi+0x76]
  422f66:	ins    DWORD PTR es:[edi],dx
  422f67:	add    BYTE PTR [ebx-0x78],al
  422f6a:	loopne 0x422f1b
  422f6c:	cmp    eax,0xd42218
  422f71:	enter  0x604,0xb2
  422f75:	and    BYTE PTR [edi-0x7affb257],bl
  422f7b:	add    eax,0x1fad66d5
  422f80:	(bad)  [edx-0x30e3a8ff]
  422f86:	cmp    DWORD PTR cs:[ebp-0x6812d02c],esi
  422f8d:	add    edx,DWORD PTR [ebp+0x19]
  422f90:	or     ebx,edi
  422f92:	sub    ebx,eax
  422f94:	pusha  
  422f95:	pop    ecx
  422f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f97:	mov    eax,0xf87b1e5a
  422f9c:	cmc    
  422f9d:	sub    al,0x61
  422f9f:	or     DWORD PTR [edx-0x48],ecx
  422fa2:	stc    
  422fa3:	add    BYTE PTR [esi],al
  422fa5:	and    eax,0xcc6898
  422faa:	cmp    DWORD PTR [edx+0x5b],0x4164b4c8
  422fb1:	pop    ds
  422fb2:	hlt    
  422fb3:	inc    ebp
  422fb4:	xchg   edi,eax
  422fb5:	not    BYTE PTR [edi+0x75c48881]
  422fbb:	icebp  
  422fbc:	push   esi
  422fbd:	les    edi,FWORD PTR [edi]
  422fbf:	data16 add ah,BYTE PTR [ebx+ecx*2]
  422fc3:	mov    al,ds:0xc05c97aa
  422fc8:	xchg   esp,eax
  422fc9:	mov    al,0xc0
  422fcb:	jo     0x422f97
  422fcd:	add    DWORD PTR [eax+esi*1-0x1c367cf4],edi
  422fd4:	fsubr  QWORD PTR [edi]
  422fd6:	in     eax,dx
  422fd7:	xchg   edi,eax
  422fd8:	jb     0x422fba
  422fda:	aam    0x0
  422fdc:	repnz sbb DWORD PTR [eax],esi
  422fdf:	push   esp
  422fe0:	shl    DWORD PTR [ecx+0x55],1
  422fe3:	popf   
  422fe4:	pusha  
  422fe5:	dec    edx
  422fe6:	or     bl,BYTE PTR [eax-0x4a]
  422fe9:	cmc    
  422fea:	mov    es,WORD PTR [esi]
  422fec:	loopne 0x422fdc
  422fee:	xor    ebp,ecx
  422ff0:	or     BYTE PTR [eax+eax*1+0x3b],0x8c
  422ff5:	xor    ah,BYTE PTR [ebx+0xdc468d2]
  422ffb:	add    DWORD PTR [edx],ebp
  422ffd:	pop    esi
  422ffe:	xchg   ecx,eax
  422fff:	jae    0x42300f
  423001:	mov    ds:0xb237ec65,al
  423006:	add    BYTE PTR [ecx+0x7d],ch
  423009:	jnp    0x422f9b
  42300b:	loop   0x423039
  42300d:	popa   
  42300e:	cmc    
  42300f:	pop    ds
  423010:	hlt    
  423011:	sbb    al,0xc8
  423013:	xchg   DWORD PTR [edi],eax
  423015:	mov    DWORD PTR [eax+0x5f],ebx
  423018:	mov    al,ds:0x57decf6b
  42301d:	mov    al,0x0
  42301f:	std    
  423020:	or     ch,BYTE PTR [edi-0x33fd0356]
  423026:	jb     0x42302b
  423028:	shr    DWORD PTR [edi+0x1b],cl
  42302b:	maskmovq mm7,(bad)
  42302c:	idiv   DWORD PTR [ebp-0x3a026f49]
  423032:	sbb    BYTE PTR [esi+0x0],al
  423035:	jecxz  0x423082
  423037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423038:	mov    edi,0x8743668a
  42303d:	pop    es
  42303e:	xchg   ecx,eax
  42303f:	or     DWORD PTR [eax+edx*4-0x7a60cf55],eax
  423046:	inc    ebp
  423047:	pop    edi
  423048:	add    BYTE PTR [edx+0x35a5a18c],dl
  42304e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42304f:	sub    dl,BYTE PTR [esi]
  423051:	clc    
  423052:	jmp    0x2826:0xd28f7300
  423059:	sub    al,0xb5
  42305b:	test   DWORD PTR [eax],0xda1ce70f
  423061:	fdivp  st(0),st
  423063:	in     eax,0x7a
  423065:	add    DWORD PTR [eax],esp
  423067:	lock (bad) 
  423069:	push   eax
  42306a:	mov    al,0x70
  42306c:	xchg   edx,eax
  42306d:	cld    
  42306e:	outs   dx,BYTE PTR ds:[esi]
  42306f:	sahf   
  423070:	add    al,dl
  423072:	sbb    BYTE PTR [edi],ah
  423074:	mov    ds:0xd71f7451,eax
  423079:	add    BYTE PTR [edx-0x18dfc7e5],ah
  42307f:	mov    bh,bl
  423081:	inc    ebx
  423082:	add    BYTE PTR [edx],dl
  423084:	inc    edi
  423085:	dec    edx
  423086:	aas    
  423087:	inc    edx
  423088:	jns    0x423075
  42308a:	cmp    al,BYTE PTR [eax]
  42308c:	imul   edx,DWORD PTR [ebp-0x6b9c3153],0x5f
  423093:	mov    esp,esi
  423095:	pop    esi
  423096:	cmp    al,0xac
  423098:	mov    eax,0x19e424
  42309d:	inc    ebx
  42309e:	push   ds
  42309f:	ja     0x4230f6
  4230a1:	pop    es
  4230a2:	out    0x0,al
  4230a4:	lahf   
  4230a5:	stc    
  4230a6:	aaa    
  4230a7:	push   esp
  4230a8:	xlat   BYTE PTR ds:[ebx]
  4230a9:	(bad)  
  4230aa:	cdq    
  4230ab:	test   BYTE PTR [eax],bl
  4230ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230ae:	popf   
  4230af:	jg     0x4230af
  4230b1:	push   eax
  4230b2:	and    al,BYTE PTR [ebx+esi*1]
  4230b5:	vpcmpgtd xmm3,xmm5,XMMWORD PTR [ebx]
  4230b9:	cld    
  4230ba:	add    BYTE PTR [ecx],al
  4230bc:	call   0xe09b:0xd208a6f7
  4230c3:	mov    edi,0xd9ec006a
  4230c8:	or     al,0xab
  4230ca:	inc    esp
  4230cb:	jmp    0x0:0x355cf227
  4230d2:	dec    esp
  4230d3:	jl     0x4230a3
  4230d5:	jo     0x4230b2
  4230d7:	mov    WORD PTR [ebx+0x0],ds
  4230da:	outs   dx,DWORD PTR ds:[esi]
  4230db:	enter  0x6905,0x8e
  4230df:	or     al,0xd6
  4230e1:	mov    ds:0xde1a5100,al
  4230e6:	test   eax,0x140b6e04
  4230eb:	add    BYTE PTR [ebx],ah
  4230ed:	adc    ebp,DWORD PTR [eax-0x2f]
  4230f0:	sbb    ebp,0x79
  4230f3:	push   esp
  4230f4:	add    bl,al
  4230f6:	push   ss
  4230f7:	fbld   TBYTE PTR [esi-0x270fd052]
  4230fd:	add    ch,cl
  4230ff:	jp     0x4230ca
  423101:	sbb    cl,BYTE PTR [ebp+0x7b]
  423104:	pop    edi
  423105:	pop    edx
  423106:	push   ds
  423107:	retf   
  423108:	inc    edx
  423109:	out    dx,al
  42310a:	shl    BYTE PTR [ebx],0x40
  42310d:	adc    DWORD PTR [esi-0x49],edi
  423110:	mov    ds:0x5ebac400,al
  423115:	add    BYTE PTR [ebx],0x60
  423118:	ret    
  423119:	or     DWORD PTR [edi+0x1],ecx
  42311c:	add    BYTE PTR [eax],al
  42311e:	push   ecx
  42311f:	sub    al,0x7f
  423121:	mov    bl,0xdd
  423123:	add    DWORD PTR [eax],esi
  423125:	lock aad 0x52
  423128:	xchg   ebx,eax
  423129:	fwait
  42312a:	sub    dl,al
  42312c:	sar    BYTE PTR [edi-0x734fc0f5],1
  423132:	repnz loopne 0x423135
  423135:	cwde   
  423136:	jmp    0x3b14:0x7e8a8107
  42313d:	lock test al,0x83
  423140:	rcl    BYTE PTR [ecx+0x5c],0xcb
  423144:	add    BYTE PTR [eax],al
  423146:	or     al,0x16
  423148:	std    
  423149:	add    edx,DWORD PTR [eax]
  42314b:	call   0x83a3ad
  423150:	add    eax,0x3cc6e123
  423155:	fdivr  st,st(6)
  423157:	rol    BYTE PTR [ecx],cl
  423159:	push   cs
  42315a:	mov    al,ds:0x1ab7c171
  42315f:	stos   DWORD PTR es:[edi],eax
  423160:	outs   dx,DWORD PTR ds:[esi]
  423161:	add    BYTE PTR [eax],al
  423163:	add    edx,DWORD PTR [eax+ecx*8+0x770879e7]
  42316a:	jmp    0x423150
  42316c:	pop    ebp
  42316d:	xor    BYTE PTR [esi+0x3c50531a],0x97
  423174:	add    al,0x4
  423176:	pop    eax
  423177:	xlat   BYTE PTR ds:[ebx]
  423178:	add    DWORD PTR [eax+eax*1],ecx
  42317b:	ja     0x42318b
  42317d:	aad    0x8f
  42317f:	cmp    al,BYTE PTR [eax]
  423181:	loope  0x4231cf
  423183:	pushf  
  423184:	xchg   ecx,edx
  423186:	mov    dh,0x12
  423188:	inc    eax
  423189:	add    bl,BYTE PTR [edi+0x7c11cc7]
  42318f:	jmp    0x3916:0x903ef200
  423196:	test   ebp,ebx
  423198:	add    BYTE PTR [esi],al
  42319a:	aam    0x73
  42319c:	push   esi
  42319d:	dec    esp
  42319e:	ret    0x8010
  4231a1:	aaa    
  4231a2:	dec    edx
  4231a3:	or     BYTE PTR [edi+ebp*8+0xa],ch
  4231a7:	inc    DWORD PTR ds:0xafe58497
  4231ad:	sbb    eax,0x4a4c0e7
  4231b2:	mov    bl,0xd5
  4231b4:	sbb    cl,dh
  4231b6:	add    eax,DWORD PTR [esi-0xa6d8847]
  4231bc:	or     ah,BYTE PTR [ecx-0x399ff499]
  4231c2:	int3   
  4231c3:	add    al,BYTE PTR [ecx]
  4231c5:	aas    
  4231c6:	dec    ebp
  4231c7:	gs push ss
  4231c9:	sub    al,ah
  4231cb:	add    BYTE PTR [ecx-0x40],dl
  4231ce:	add    BYTE PTR [esi+0x4b],bl
  4231d1:	pop    ss
  4231d2:	(bad)  
  4231d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231d4:	enter  0x1455,0xe0
  4231d8:	or     al,0x1d
  4231da:	dec    edx
  4231db:	getsec 
  4231dd:	sub    BYTE PTR [ecx+0x7100f47c],ch
  4231e3:	out    dx,al
  4231e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231e5:	jge    0x4231ac
  4231e7:	inc    edx
  4231e8:	mov    DWORD PTR [edx+0x0],edi
  4231eb:	jb     0x423254
  4231ed:	not    BYTE PTR [ebx+eiz*1+0x40]
  4231f1:	add    al,0xa3
  4231f3:	lock imul eax,DWORD PTR [eax],0xa027637c
  4231fa:	repnz sub al,0x4a
  4231fd:	xor    al,BYTE PTR [eax]
  4231ff:	dec    edi
  423200:	push   ebp
  423201:	pop    edi
  423202:	int    0xf9
  423204:	pop    ds
  423205:	push   edi
  423206:	add    DWORD PTR [eax],eax
  423208:	mov    al,0x21
  42320a:	xlat   BYTE PTR ds:[ebx]
  42320b:	push   ebx
  42320c:	inc    ecx
  42320d:	jmp    0x4231be
  42320f:	mov    ecx,0x3887883f
  423214:	and    eax,DWORD PTR [eax]
  423216:	mov    ds:0x4564486d,al
  42321b:	or     BYTE PTR [ebx+0x0],0xa7
  42321f:	icebp  
  423220:	lock addr16 mov al,ds:0x32b8
  423225:	inc    DWORD PTR [eax]
  423227:	paddusb mm6,QWORD PTR [edi+0x36]
  42322b:	test   DWORD PTR [edx],edi
  42322d:	xor    edx,0x0
  423230:	or     bh,BYTE PTR [ebp+0x5d]
  423233:	aas    
  423234:	fdivr  DWORD PTR [eax-0x65fcdf98]
  42323a:	mov    bh,0xc9
  42323c:	cmp    DWORD PTR [esi+0x1c10f03e],edx
  423242:	stc    
  423243:	add    BYTE PTR [eax-0x52bee1d7],ch
  423249:	in     eax,0xcb
  42324b:	push   ebx
  42324c:	add    BYTE PTR [edx+0x2d32938a],dh
  423252:	jecxz  0x42321c
  423254:	xor    BYTE PTR [esi],bl
  423256:	mov    ah,0xa6
  423258:	adc    DWORD PTR [eax+0x4c],eax
  42325b:	inc    ebx
  42325c:	mov    al,ds:0xb8632f0b
  423261:	add    BYTE PTR [edi],al
  423263:	sbb    eax,0x51565282
  423268:	and    BYTE PTR [ebx],al
  42326a:	stos   BYTE PTR es:[edi],al
  42326b:	mov    edi,0x1bef0043
  423270:	cmp    DWORD PTR [ebx+esi*2+0x59b875],edi
  423277:	or     eax,0x5d9b5468
  42327c:	inc    edi
  42327d:	adc    ebp,esi
  42327f:	add    BYTE PTR [esi],bh
  423281:	dec    edi
  423282:	stc    
  423283:	fs push esi
  423285:	jecxz  0x42326e
  423287:	add    al,BYTE PTR [eax]
  423289:	shl    DWORD PTR [edi],1
  42328b:	push   eax
  42328c:	fsubr  st,st(3)
  42328e:	lods   eax,DWORD PTR ds:[esi]
  42328f:	push   cs
  423290:	adc    BYTE PTR [eax],al
  423292:	ins    DWORD PTR es:[edi],dx
  423293:	jg     0x4232a4
  423295:	xchg   ecx,eax
  423296:	add    esp,0xffffffff
  423299:	mov    eax,DWORD PTR [eax]
  42329b:	mov    cl,0xf7
  42329d:	ins    BYTE PTR es:[edi],dx
  42329e:	je     0x423272
  4232a0:	pop    edi
  4232a1:	gs out 0x0,eax
  4232a4:	sub    al,0x46
  4232a6:	jno    0x423272
  4232a8:	js     0x4232a5
  4232aa:	push   cs
  4232ab:	sub    DWORD PTR [eax],eax
  4232ad:	add    cl,BYTE PTR [eax-0x18]
  4232b0:	or     eax,0x6ae19404
  4232b5:	add    BYTE PTR [ecx-0x4bb996f4],cl
  4232bb:	dec    ecx
  4232bc:	xchg   ecx,eax
  4232bd:	stos   BYTE PTR es:[edi],al
  4232be:	add    dl,al
  4232c0:	pop    es
  4232c1:	les    ecx,FWORD PTR [edx]
  4232c3:	in     al,dx
  4232c4:	adc    BYTE PTR [eax+0x64],bh
  4232c7:	add    BYTE PTR [ecx],dh
  4232c9:	sbb    dl,bh
  4232cb:	iret   
  4232cc:	sahf   
  4232cd:	jbe    0x423308
  4232cf:	or     eax,DWORD PTR [edx]
  4232d1:	call   0x4ddde335
  4232d6:	fsub   st,st(1)
  4232d8:	dec    ebx
  4232d9:	push   ecx
  4232da:	in     al,dx
  4232db:	xchg   ecx,eax
  4232dc:	pop    ecx
  4232dd:	aas    
  4232de:	cmc    
  4232df:	ret    0x8183
  4232e2:	and    ecx,DWORD PTR [ebx-0x3c]
  4232e5:	mov    gs,eax
  4232e7:	sub    DWORD PTR [edi],eax
  4232e9:	outs   dx,BYTE PTR ds:[esi]
  4232ea:	pop    es
  4232eb:	dec    esp
  4232ec:	cdq    
  4232ed:	add    DWORD PTR [ecx],esi
  4232ef:	mov    ebx,0x9ada7b60
  4232f4:	sahf   
  4232f5:	add    BYTE PTR [eax],dl
  4232f7:	cmp    eax,0x4189c255
  4232fc:	sub    bh,dh
  4232fe:	pop    es
  4232ff:	inc    edi
  423300:	or     al,0x21
  423302:	outs   dx,DWORD PTR ds:[esi]
  423303:	retf   
  423304:	add    BYTE PTR [edi+0xc91c88],dh
  42330a:	dec    esp
  42330b:	and    dh,BYTE PTR [ecx]
  42330d:	(bad)  
  42330e:	pop    esi
  42330f:	cmc    
  423310:	cwde   
  423311:	test   DWORD PTR [eax],0x62b1d1aa
  423317:	push   0x108872
  42331c:	mov    DWORD PTR [edi],eax
  42331e:	test   ebx,edi
  423320:	daa    
  423321:	in     eax,dx
  423322:	shl    DWORD PTR [ebx],0x0
  423325:	ss inc edi
  423327:	and    eax,0x37fd5b91
  42332c:	pop    edi
  42332d:	add    ah,BYTE PTR [esi]
  42332f:	mov    ch,0x43
  423331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423332:	das    
  423333:	adc    eax,0xb10c0360
  423338:	out    dx,al
  423339:	jo     0x4232cb
  42333b:	sti    
  42333c:	pop    ds
  42333d:	mov    al,0xff
  42333f:	xlat   BYTE PTR ds:[ebx]
  423340:	push   0x1e00b0a8
  423345:	push   0x833de815
  42334a:	retf   0xe2b9
  42334d:	adc    al,0xa2
  42334f:	shr    BYTE PTR [eax+eiz*2],cl
  423352:	hlt    
  423353:	sti    
  423354:	or     al,BYTE PTR [edx]
  423356:	test   eax,0x9fc56d1d
  42335b:	shl    eax,1
  42335d:	add    BYTE PTR [ebx],dh
  42335f:	popw   es
  423361:	pop    edi
  423362:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423364:	xchg   ecx,eax
  423365:	dec    eax
  423366:	adc    ebx,DWORD PTR [edi]
  423368:	scas   eax,DWORD PTR es:[edi]
  423369:	sar    DWORD PTR [edx],0xe6
  42336c:	fcomp  QWORD PTR ds:0x3e6c0040
  423372:	push   es
  423373:	test   al,0x6d
  423375:	(bad)  
  423376:	xor    bl,al
  423378:	loopne 0x4233e2
  42337a:	and    BYTE PTR ds:0xc2f260cf,bh
  423380:	hlt    
  423381:	sub    BYTE PTR ds:0xc57539,ah
  423387:	dec    edx
  423388:	addr16 jmp 0x715b:0x939aa20d
  423390:	mov    esi,0xb12f7000
  423395:	and    DWORD PTR [eax+0x39a5c9],ecx
  42339b:	jle    0x4233cf
  42339d:	xor    eax,0x810154a4
  4233a2:	test   al,0x48
  4233a4:	mov    bl,bh
  4233a6:	add    BYTE PTR [edx+0x24f98d0a],dh
  4233ac:	retf   
  4233ad:	pop    ss
  4233ae:	push   cs
  4233af:	out    dx,al
  4233b0:	imul   ebx,DWORD PTR [ebp-0x16],0x40
  4233b4:	ins    BYTE PTR es:[edi],dx
  4233b5:	dec    esi
  4233b6:	jbe    0x4233a9
  4233b8:	sub    al,BYTE PTR [eax]
  4233ba:	sbb    DWORD PTR [eax+edx*2],0x794bd449
  4233c1:	jb     0x4233c3
  4233c3:	jecxz  0x42336b
  4233c5:	bnd ja 0x423387
  4233c8:	push   esp
  4233c9:	jle    0x423404
  4233cb:	mov    al,0x87
  4233cd:	push   ds
  4233ce:	dec    edx
  4233cf:	sub    eax,esp
  4233d1:	add    BYTE PTR [ebx],ch
  4233d3:	mov    dh,0x2c
  4233d5:	jbe    0x4233a8
  4233d7:	mov    ah,0x3b
  4233d9:	cmp    al,0x37
  4233db:	sbb    DWORD PTR [eax-0x63e3c622],0xb11b7021
  4233e5:	add    BYTE PTR [ebp-0x7d],bl
  4233e8:	gs xor ch,dh
  4233eb:	(bad)  
  4233ec:	repnz or BYTE PTR [esi],cl
  4233ef:	mov    ch,0xc1
  4233f1:	ret    
  4233f2:	test   eax,0xef505e40
  4233f7:	mov    ebx,0xf3750707
  4233fc:	shl    bh,1
  4233fe:	xchg   ebx,eax
  4233ff:	adc    BYTE PTR [eax],cl
  423401:	lahf   
  423402:	pop    ss
  423403:	inc    ecx
  423404:	add    DWORD PTR [ebx-0x21],ecx
  423407:	enter  0x3cf8,0xce
  42340b:	call   0xe0510bd4
  423410:	sub    DWORD PTR [eax+0x3b],edi
  423413:	cmp    edi,DWORD PTR [eax-0x54]
  423416:	xor    BYTE PTR [ecx+0x50c29f99],0xf6
  42341d:	sbb    al,0x0
  42341f:	mov    ds:0xa046bc0c,eax
  423424:	push   edx
  423425:	push   DWORD PTR [eax]
  423427:	or     al,0xb9
  423429:	vmovsd xmm6,xmm3,xmm1
  42342d:	cmp    al,0x0
  42342f:	push   edi
  423430:	cli    
  423431:	fyl2x  
  423433:	xchg   ebp,eax
  423434:	std    
  423435:	adc    bl,ch
  423437:	pop    ds
  423438:	cmp    DWORD PTR [ebp+0x439ac3d2],0x8998c70f
  423442:	mov    ecx,0x1f671eab
  423447:	dec    ebx
  423448:	push   esi
  423449:	aam    0x0
  42344b:	loop   0x4234a8
  42344d:	xor    eax,0x4e09b2
  423452:	xor    BYTE PTR [ecx-0xd],bl
  423455:	and    esp,esp
  423457:	test   bh,al
  423459:	add    al,BYTE PTR [eax]
  42345b:	loopne 0x423426
  42345d:	jmp    0x423484
  42345f:	jecxz  0x423465
  423461:	and    DWORD PTR [esi-0x3afc0984],0xe47045ae
  42346b:	adc    esi,edx
  42346d:	int    0xde
  42346f:	add    BYTE PTR [edi],al
  423471:	cli    
  423472:	jl     0x423478
  423474:	loopne 0x4234dc
  423476:	stos   BYTE PTR es:[edi],al
  423477:	in     eax,0x3d
  423479:	add    ah,ch
  42347b:	mov    dl,0xac
  42347d:	fidiv  WORD PTR [ecx+0x8d9b06]
  423483:	sub    ah,dh
  423485:	outs   dx,DWORD PTR ds:[esi]
  423486:	ins    BYTE PTR es:[edi],dx
  423487:	sbb    BYTE PTR [edx+0x5a],al
  42348a:	fiadd  DWORD PTR ds:0xb8cd2060
  423490:	push   0x0
  423492:	scas   al,BYTE PTR es:[edi]
  423493:	push   ebp
  423494:	je     0x42342f
  423496:	inc    edi
  423497:	xchg   edi,eax
  423498:	lds    eax,FWORD PTR cs:[ebx]
  42349b:	add    BYTE PTR [eax],al
  42349d:	dec    edx
  42349e:	push   ecx
  42349f:	and    al,0x79
  4234a1:	mov    edx,0xcee40bf0
  4234a6:	call   0xc1fa:0xa2ea8445
  4234ad:	add    eax,0x3570fd80
  4234b2:	add    DWORD PTR ds:0x58b5,ebp
  4234b7:	or     ebp,edi
  4234b9:	push   eax
  4234ba:	shl    BYTE PTR [eax+0x0],1
  4234bd:	cmp    al,0x0
  4234bf:	or     BYTE PTR [ebx],dh
  4234c1:	gs popa 
  4234c3:	mov    eax,0xdbfd38
  4234c8:	ja     0x423537
  4234ca:	call   0xb9:0x32876aa6
  4234d1:	mov    dl,BYTE PTR [esi+0x4431910a]
  4234d7:	sbb    esp,DWORD PTR [edx+0x79]
  4234da:	mov    BYTE PTR [edi],al
  4234dc:	inc    edx
  4234dd:	push   ss
  4234de:	inc    edi
  4234df:	cmp    al,0xe2
  4234e1:	nop
  4234e2:	add    esp,edi
  4234e4:	xor    bl,BYTE PTR ds:0xcc25e703
  4234ea:	dec    edi
  4234eb:	out    0x53,al
  4234ed:	enter  0x5cc0,0xac
  4234f1:	add    BYTE PTR [edi],dl
  4234f3:	fst    DWORD PTR [esi-0x1f436e81]
  4234f9:	inc    BYTE PTR [eax]
  4234fb:	fmul   DWORD PTR [ecx+0x4e83ed39]
  423501:	rol    BYTE PTR cs:[eax],0xc5
  423505:	ss sub al,0x7a
  423508:	out    dx,eax
  423509:	xchg   BYTE PTR [ecx],dl
  42350b:	xlat   BYTE PTR ds:[ebx]
  42350c:	add    BYTE PTR [esi+0x23f285ab],ch
  423512:	adc    eax,0xfd1cbf43
  423517:	into   
  423518:	fistp  WORD PTR ds:0xea57004f
  42351e:	(bad)  [eax]
  423520:	sbb    al,0xa2
  423522:	add    BYTE PTR [ecx-0x30a127b],dl
  423528:	pop    esi
  423529:	idiv   DWORD PTR ds:0x5296a800
  42352f:	xor    al,0x2c
  423531:	mov    ebp,DWORD PTR [ecx-0x63d1ff80]
  423537:	leave  
  423538:	add    eax,0x360c8ac6
  42353d:	inc    eax
  42353e:	stos   DWORD PTR es:[edi],eax
  42353f:	pop    es
  423540:	rcr    DWORD PTR ds:0xaaeade8e,cl
  423547:	mov    al,ds:0x5fa314a0
  42354c:	sti    
  42354d:	add    BYTE PTR [esi],ch
  42354f:	mov    eax,ds:0x2f4cdfec
  423554:	sub    cl,0x1
  423557:	es fldln2 
  42355a:	pop    ss
  42355b:	div    DWORD PTR [ecx+0x40a871ae]
  423561:	push   cs
  423562:	retf   0xcd19
  423565:	add    BYTE PTR [edi+0x5d8477f0],bh
  42356b:	cmp    ebp,DWORD PTR ds:0x2a12007f
  423571:	sahf   
  423572:	aam    0x4a
  423574:	gs jno 0x423512
  423577:	cmp    edx,ebp
  423579:	inc    esi
  42357a:	lahf   
  42357b:	sbb    cl,cl
  42357d:	inc    eax
  42357e:	cmc    
  42357f:	enter  0xd789,0x2a
  423583:	scas   al,BYTE PTR es:[edi]
  423584:	pop    es
  423585:	aam    0xd9
  423587:	daa    
  423588:	mov    ebp,0x1d190ea
  42358d:	icebp  
  42358e:	add    BYTE PTR ds:[esi-0x7572efb4],cl
  423595:	or     BYTE PTR [edx],ah
  423597:	xlat   BYTE PTR ds:[ebx]
  423598:	add    BYTE PTR [edx+0x56],ch
  42359b:	jl     0x423585
  42359d:	les    esp,FWORD PTR [ebp-0x3ff85e7]
  4235a3:	sub    BYTE PTR [eax+0x76],ch
  4235a6:	jge    0x4235c7
  4235a8:	mov    ds:0x5abc00c8,al
  4235ad:	loopne 0x4235e5
  4235af:	xor    esi,DWORD PTR [ebp+0x3a76db4d]
  4235b5:	repnz dec eax
  4235b7:	add    BYTE PTR [edi-0x1e],bh
  4235ba:	in     al,0xdc
  4235bc:	push   0xfffffff2
  4235be:	les    esi,FWORD PTR [eax+0x1df06005]
  4235c4:	push   cs
  4235c5:	fld    DWORD PTR [eax+0xd5702fa]
  4235cb:	cli    
  4235cc:	cmp    eax,0x880751f0
  4235d1:	mov    al,ds:0xe0fca536
  4235d6:	pop    eax
  4235d7:	addr16 inc ebp
  4235d9:	push   cs
  4235da:	jae    0x42361d
  4235dc:	cs dec eax
  4235de:	out    0xb3,eax
  4235e0:	add    BYTE PTR [edi-0x27],bh
  4235e3:	fidiv  WORD PTR [ecx-0x3d]
  4235e6:	adc    al,BYTE PTR [ecx]
  4235e8:	jmp    0x1df4:0xd3edbe9d
  4235ef:	in     al,dx
  4235f0:	outs   dx,DWORD PTR ds:[esi]
  4235f1:	or     eax,0xda67850b
  4235f6:	xlat   BYTE PTR ds:[ebx]
  4235f7:	clc    
  4235f8:	add    dl,ch
  4235fa:	mov    bh,0x7b
  4235fc:	jns    0x42360f
  4235fe:	cmp    eax,0x5f005bff
  423603:	shl    BYTE PTR [esi+0x9],cl
  423606:	push   cs
  423607:	rcr    DWORD PTR [esi+0x24b03688],1
  42360d:	push   ebp
  42360e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42360f:	jl     0x423628
  423611:	shl    al,1
  423613:	add    bh,cl
  423615:	add    BYTE PTR [ebx-0x6d],ch
  423618:	test   DWORD PTR [esi],0x8e171177
  42361e:	jp     0x423649
  423620:	add    BYTE PTR [ecx],al
  423622:	dec    ecx
  423623:	push   ecx
  423624:	push   esp
  423625:	in     al,dx
  423626:	sub    ebx,DWORD PTR [ecx-0x7f]
  423629:	add    BYTE PTR [ebp-0x13],cl
  42362c:	test   al,0x48
  42362e:	pop    ss
  42362f:	stc    
  423630:	mov    eax,ds:0xe0a775c9
  423635:	jp     0x423637
  423637:	jbe    0x42363b
  423639:	(bad)  [edi]
  42363b:	mov    edi,0x3fd1e849
  423640:	fwait
  423641:	in     eax,dx
  423642:	cmp    eax,0x6f67130b
  423647:	add    BYTE PTR [ecx+edx*1-0x16],dl
  42364b:	jne    0x42360e
  42364d:	inc    ebx
  42364e:	add    BYTE PTR [edx*8+0x60a2446e],al
  423655:	daa    
  423656:	(bad)  
  423657:	add    ebp,esi
  423659:	cmp    eax,0x234f3190
  42365e:	clc    
  42365f:	shr    BYTE PTR [edi],0x1c
  423662:	sbb    al,0x57
  423664:	ja     0x42361a
  423666:	add    BYTE PTR ds:0xe59d4150,al
  42366c:	test   BYTE PTR [edx+0x46],dh
  42366f:	add    cl,bh
  423671:	push   ebp
  423672:	lea    ebx,[esi-0x6d]
  423675:	mov    bh,0x12
  423677:	dec    ecx
  423678:	add    BYTE PTR [ebx],bh
  42367a:	ja     0x423622
  42367c:	icebp  
  42367d:	xchg   BYTE PTR [ebx+0x15],ch
  423680:	add    BYTE PTR [eax],0x33
  423683:	(bad)  
  423684:	jns    0x423656
  423686:	mov    BYTE PTR [edx],0x84
  423689:	cmp    al,BYTE PTR [eax]
  42368b:	cmc    
  42368c:	inc    bh
  42368e:	dec    ebp
  42368f:	pop    esp
  423690:	aas    
  423691:	scas   al,BYTE PTR es:[edi]
  423692:	mov    WORD PTR [eax],es
  423694:	mov    eax,ds:0xbfb79b0c
  423699:	or     eax,0xb07166b
  42369e:	adc    BYTE PTR [edx-0x1b],ch
  4236a1:	push   ecx
  4236a2:	sbb    BYTE PTR [edi],0x41
  4236a5:	(bad)  
  4236a7:	ucomiss xmm6,DWORD PTR [ebx-0x4d]
  4236ab:	mov    ah,BYTE PTR [eax+0x3e]
  4236ae:	int3   
  4236af:	dec    ecx
  4236b1:	xor    BYTE PTR [eax],al
  4236b3:	ret    0xfcaa
  4236b6:	mov    ecx,DWORD PTR [ebp+0x43]
  4236b9:	(bad)  
  4236ba:	pop    es
  4236bb:	add    dh,al
  4236bd:	ja     0x423690
  4236bf:	pop    ebx
  4236c0:	imul   ecx,DWORD PTR [esi+0x50004687],0x56
  4236c7:	jne    0x423667
  4236c9:	outs   dx,BYTE PTR ds:[esi]
  4236ca:	dec    edi
  4236cb:	out    dx,al
  4236cc:	sbb    esp,esi
  4236ce:	mov    BYTE PTR [eax],al
  4236d0:	xchg   BYTE PTR [ebp-0x47],bh
  4236d3:	pop    ecx
  4236d4:	jnp    0x42374a
  4236d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236d7:	lahf   
  4236d8:	pop    es
  4236d9:	pop    esp
  4236da:	inc    edi
  4236db:	gs mov esp,0x64f8f0cb
  4236e1:	and    BYTE PTR [esi+0x4],al
  4236e4:	xchg   ebx,eax
  4236e5:	(bad)  
  4236e6:	cs inc ecx
  4236e8:	dec    esp
  4236e9:	ret    0xaef2
  4236ec:	(bad)  
  4236ee:	aad    0xd0
  4236f0:	mov    WORD PTR [edx-0xc4df87d],ss
  4236f6:	push   es
  4236f7:	into   
  4236f8:	hlt    
  4236f9:	loopne 0x423747
  4236fb:	fsubp  st(6),st
  4236fd:	push   ds
  4236fe:	adc    ah,ah
  423700:	sub    al,0xb1
  423702:	sbb    al,0x7b
  423704:	xchg   eax,eax
  423706:	je     0x4236ce
  423708:	and    BYTE PTR [edx],bh
  42370a:	fwait
  42370b:	stc    
  42370c:	repz add eax,0x9c38686b
  423712:	in     al,0xc1
  423714:	add    dl,al
  423716:	cld    
  423717:	sub    al,al
  423719:	xchg   edi,eax
  42371a:	jno    0x4236f4
  42371c:	xchg   edi,eax
  42371d:	jnp    0x9eaf36
  423723:	xor    DWORD PTR [esp+ecx*8+0x2a88a99e],0xffffffda
  42372b:	pop    es
  42372c:	inc    esp
  42372d:	cmp    ebx,DWORD PTR [edx-0x1dbf9940]
  423733:	out    0x1b,eax
  423735:	mov    ds:0x5671f901,al
  42373a:	push   ebp
  42373b:	cmp    DWORD PTR [edi+0x167f22],edx
  423741:	or     ebx,ebp
  423743:	dec    ecx
  423744:	add    BYTE PTR [eax],0xcd
  423747:	bound  ebx,QWORD PTR [edx+0x16]
  42374a:	and    DWORD PTR [esi-0x20],0x5c800a68
  423751:	repnz and BYTE PTR [esi-0x38],bh
  423755:	cmp    edi,DWORD PTR [ebp+0x848a00c]
  42375b:	cmp    dl,BYTE PTR [esi]
  42375d:	jo     0x4237d9
  42375f:	add    ch,dh
  423761:	ret    
  423762:	imul   DWORD PTR [ecx+0x5]
  423765:	push   ds
  423766:	adc    BYTE PTR [ecx-0x5c],0xe0
  42376a:	add    bl,dh
  42376c:	out    0xf2,eax
  42376e:	pop    ebp
  42376f:	add    BYTE PTR [eax+0x4b],0x20
  423773:	fs cmp eax,0x7b534108
  423779:	sbb    eax,0x6195902
  42377e:	inc    BYTE PTR [eax]
  423780:	sar    DWORD PTR [ebx+edi*1+0x20],cl
  423784:	and    BYTE PTR [ecx-0x6179dfe5],0x8
  42378b:	push   ds
  42378c:	and    DWORD PTR [ebp-0x1930fd49],eax
  423792:	jge    0x4237ca
  423794:	add    BYTE PTR ds:0x809a8ed3,bl
  42379a:	sbb    ebx,ecx
  42379c:	and    dh,ch
  42379e:	pop    ebp
  42379f:	or     BYTE PTR [ebp+0x7a],al
  4237a2:	sub    bh,BYTE PTR [eax+0x2]
  4237a5:	ds push esp
  4237a7:	outs   dx,BYTE PTR ds:[esi]
  4237a8:	sub    eax,DWORD PTR [edi]
  4237aa:	nop
  4237ab:	outs   dx,BYTE PTR ds:[esi]
  4237ac:	dec    eax
  4237ad:	rol    DWORD PTR [edx],0x70
  4237b0:	mov    ah,0x24
  4237b2:	mov    edx,0x740dbfe0
  4237b7:	jbe    0x423831
  4237b9:	add    BYTE PTR [ebx+0x61e91408],al
  4237bf:	fbstp  TBYTE PTR [ecx-0x966ffa0]
  4237c5:	push   edi
  4237c6:	sbb    esp,DWORD PTR [edi+0x2a]
  4237c9:	cmp    eax,0xd0280fd6
  4237ce:	pop    ebx
  4237cf:	jle    0x42383f
  4237d1:	xor    al,0xa0
  4237d3:	outs   dx,BYTE PTR ds:[esi]
  4237d4:	js     0x4237d7
  4237d6:	aad    0xe4
  4237d8:	jno    0x4237e2
  4237da:	add    BYTE PTR [eax+0x38db26c],al
  4237e0:	mul    DWORD PTR [edx]
  4237e2:	xchg   edi,eax
  4237e3:	add    al,cl
  4237e5:	adc    dl,bh
  4237e7:	xor    dh,BYTE PTR [edi]
  4237e9:	in     al,dx
  4237ea:	mov    ecx,0x11ea07d1
  4237ef:	sbb    eax,0xc4d3db81
  4237f4:	sbb    DWORD PTR [eax+0x28132d],eax
  4237fa:	mov    ah,0x1f
  4237fc:	aas    
  4237fd:	or     BYTE PTR [esi-0x2c],ah
  423800:	fcmovu st,st(0)
  423802:	add    al,dl
  423804:	sub    bl,BYTE PTR cs:[esi]
  423807:	cld    
  423808:	push   ebp
  423809:	dec    edi
  42380a:	push   eax
  42380b:	add    edi,DWORD PTR [edi-0x11]
  42380e:	add    ebx,0x9598f722
  423814:	fmulp  st(2),st
  423816:	or     eax,edx
  423818:	loopne 0x423864
  42381a:	or     eax,DWORD PTR [eax]
  42381c:	pop    esi
  42381d:	dec    edi
  42381e:	sar    cl,1
  423820:	nop
  423821:	imul   BYTE PTR [ebx]
  423823:	jb     0x4237de
  423825:	js     0x423810
  423827:	add    ecx,DWORD PTR [eax-0xe]
  42382a:	test   DWORD PTR [edx+eiz*2-0x5e3f2f84],eax
  423831:	mov    ch,0xe
  423833:	xor    al,0x9d
  423835:	xchg   edi,eax
  423836:	inc    esp
  423837:	add    eax,DWORD PTR [ebx]
  423839:	cdq    
  42383a:	adc    DWORD PTR [eax+0x7e9468],esi
  423840:	cmc    
  423841:	shl    BYTE PTR [ecx],cl
  423843:	mov    esp,0xe592bed8
  423848:	add    BYTE PTR [esi+0x64a1ef1b],ah
  42384e:	fstp   QWORD PTR [ecx-0x2c]
  423851:	add    cl,cl
  423853:	push   cs
  423854:	(bad)  
  423855:	(bad)  
  423857:	jb     0x4237f1
  423859:	mov    ah,0x0
  42385b:	cmp    ah,BYTE PTR [ebx]
  42385d:	je     0x4238a3
  42385f:	or     ecx,edx
  423861:	sub    al,0x49
  423863:	lock sbb al,0x0
  423866:	aaa    
  423867:	iret   
  423868:	scas   eax,DWORD PTR es:[edi]
  423869:	or     bh,BYTE PTR [ecx-0x3d]
  42386c:	push   edi
  42386d:	dec    edx
  42386e:	add    BYTE PTR ds:0x922aa91b,bh
  423874:	mov    edi,DWORD PTR [edx+0xe]
  423877:	add    cl,dh
  423879:	push   0xffffffd5
  42387b:	addr16 lock mov edx,0x4400147f
  423882:	call   ebx
  423884:	push   esi
  423885:	pop    ss
  423886:	ror    BYTE PTR [ecx+edi*2+0x0],1
  42388a:	mov    esi,0x32906c05
  42388f:	les    esi,FWORD PTR [ebx-0x45]
  423892:	push   cs
  423893:	inc    eax
  423894:	sahf   
  423895:	hlt    
  423896:	push   edi
  423897:	pusha  
  423898:	lea    esi,[edi+0x1ff1e7c1]
  42389e:	xchg   ecx,eax
  42389f:	and    BYTE PTR [ebx+0x95a8680],dl
  4238a5:	or     eax,0x38002d48
  4238aa:	pop    ds
  4238ab:	out    0x65,al
  4238ad:	cdq    
  4238ae:	sub    BYTE PTR [edx],0x59
  4238b1:	or     esi,esi
  4238b3:	cli    
  4238b4:	inc    esp
  4238b5:	fadd   QWORD PTR [eax]
  4238b7:	jl     0x423863
  4238b9:	stos   DWORD PTR es:[edi],eax
  4238ba:	xor    eax,0xb75c24
  4238bf:	add    BYTE PTR [eax],dh
  4238c1:	or     edi,0x75
  4238c4:	pop    esp
  4238c5:	xchg   esp,eax
  4238c6:	jp     0x4238c8
  4238c8:	sbb    al,0xbf
  4238ca:	inc    ebp
  4238cb:	sub    al,0xb8
  4238cd:	dec    ecx
  4238ce:	push   eax
  4238cf:	outs   dx,BYTE PTR ds:[esi]
  4238d0:	out    dx,eax
  4238d1:	in     al,0xdc
  4238d3:	add    DWORD PTR [eax],eax
  4238d5:	and    eax,0xfd319eeb
  4238da:	in     al,0x73
  4238dc:	pop    ds
  4238dd:	pop    ds
  4238de:	xchg   edi,eax
  4238df:	cmp    al,0x3b
  4238e1:	add    BYTE PTR [ecx],cl
  4238e3:	sub    eax,0xa3a492f7
  4238e8:	add    esi,DWORD PTR ds:0xe9d4744d
  4238ee:	xchg   ebp,eax
  4238ef:	mov    eax,0xa8fa0f
  4238f4:	and    eax,0x5f3e5e56
  4238f9:	jge    0x423898
  4238fb:	gs pop es
  4238fd:	mov    al,ds:0x7a4aff59
  423902:	adc    BYTE PTR ds:0x4ebfe2,dl
  423908:	(bad)  
  423909:	xchg   esi,eax
  42390a:	pop    es
  42390b:	adc    bl,BYTE PTR [ebp+0xc618d0]
  423911:	inc    edx
  423912:	ret    0xe08d
  423915:	js     0x4238eb
  423917:	inc    ecx
  423918:	xor    eax,DWORD PTR [eax]
  42391a:	sbb    al,0x14
  42391c:	cli    
  42391d:	shl    DWORD PTR [edx],cl
  42391f:	gs inc eax
  423921:	dec    edx
  423922:	dec    eax
  423923:	nop
  423924:	dec    ebp
  423925:	add    BYTE PTR [ebx+0x74956b35],dl
  42392b:	mov    esp,0x25e11d24
  423930:	mov    es,eax
  423932:	sub    al,0xcb
  423934:	adc    BYTE PTR [edi-0x200be91c],ch
  42393a:	sbb    eax,0xc1aa88e7
  42393f:	dec    ecx
  423940:	mov    dl,0x84
  423942:	cmp    BYTE PTR [eax+eax*2-0x7],bl
  423946:	ins    DWORD PTR es:[edi],dx
  423947:	sub    ecx,DWORD PTR [eax+eax*1]
  42394a:	popf   
  42394b:	jecxz  0x4239ae
  42394d:	sub    BYTE PTR [ecx+0x8bf7dd],0x53
  423954:	inc    esi
  423955:	inc    esp
  423956:	leave  
  423957:	lahf   
  423958:	mov    bl,0xaf
  42395a:	dec    edi
  42395b:	add    BYTE PTR [eax-0xa],cl
  42395e:	sub    eax,0x1b7bab9b
  423963:	push   ebp
  423964:	add    BYTE PTR [esi+0xc],ah
  423967:	pusha  
  423968:	les    ebx,FWORD PTR [ecx+0x54bf55d]
  42396e:	fisub  DWORD PTR [ebx-0x3fd234c9]
  423974:	popa   
  423975:	leave  
  423976:	push   ebx
  423977:	addr16 add al,cl
  42397a:	jae    0x423930
  42397c:	(bad)  
  42397d:	jno    0x423940
  42397f:	stos   BYTE PTR es:[edi],al
  423980:	daa    
  423981:	add    BYTE PTR [eax+0x46],ch
  423984:	scas   al,BYTE PTR es:[edi]
  423985:	out    dx,al
  423986:	popf   
  423987:	test   al,0x98
  423989:	out    dx,eax
  42398a:	add    BYTE PTR [eax+0x4f],ah
  42398d:	adc    eax,0x53a22dd5
  423992:	dec    edx
  423993:	add    ch,ch
  423995:	test   eax,0xefd723e
  42399a:	daa    
  42399b:	scas   eax,DWORD PTR es:[edi]
  42399c:	push   cs
  42399d:	lahf   
  42399e:	inc    esi
  42399f:	mov    dl,BYTE PTR [edx-0x52]
  4239a2:	xlat   BYTE PTR ds:[ebx]
  4239a3:	das    
  4239a4:	call   0xbb5a4ec9
  4239a9:	int    0x99
  4239ab:	push   cs
  4239ac:	or     bl,BYTE PTR [edi+0x5c]
  4239af:	dec    ebp
  4239b0:	pusha  
  4239b1:	adc    ch,BYTE PTR [edi-0x3]
  4239b4:	lahf   
  4239b5:	mov    ds:0xc043800,al
  4239ba:	dec    eax
  4239bb:	jmp    0x4239ed
  4239bd:	jmp    0xddf63c41
  4239c2:	hlt    
  4239c3:	mov    esi,0xc360aefb
  4239c8:	aad    0xaf
  4239ca:	add    BYTE PTR [ebp-0x40],dl
  4239cd:	xchg   DWORD PTR [esi-0x30],ecx
  4239d0:	ja     0x423955
  4239d2:	dec    edi
  4239d3:	add    esp,ebx
  4239d5:	(bad)  
  4239d6:	adc    ebx,edi
  4239d8:	clc    
  4239d9:	jge    0x423993
  4239db:	push   0xe01206b
  4239e0:	popa   
  4239e1:	test   al,0x1e
  4239e3:	sbb    BYTE PTR [esi+ecx*4],cl
  4239e6:	pusha  
  4239e7:	cdq    
  4239e8:	ror    DWORD PTR [esi],0x7c
  4239eb:	imul   edx,eax,0xe1e94049
  4239f1:	inc    eax
  4239f2:	inc    ecx
  4239f3:	xor    BYTE PTR ds:0x873b7421,bl
  4239f9:	sub    cl,dl
  4239fb:	adc    esp,eax
  4239fd:	in     eax,0xaa
  4239ff:	sbb    BYTE PTR [edi+0xe],ch
  423a02:	test   al,0x17
  423a04:	popa   
  423a05:	xchg   BYTE PTR [edi+0x1b15a500],bh
  423a0b:	je     0x423a32
  423a0d:	sbb    DWORD PTR [ecx],eax
  423a0f:	or     edx,eax
  423a11:	es push ecx
  423a13:	nop
  423a14:	loopne 0x423a47
  423a16:	je     0x423a18
  423a18:	inc    eax
  423a19:	and    ah,BYTE PTR [edi]
  423a1b:	inc    edx
  423a1c:	adc    DWORD PTR [eax-0x59],edx
  423a1f:	invd   
  423a21:	(bad)  
  423a22:	xor    esp,eax
  423a24:	test   BYTE PTR [esi-0x6ffe2b53],ah
  423a2a:	addr16 dec ebp
  423a2c:	add    BYTE PTR [eax],0xde
  423a2f:	add    ebp,ebx
  423a31:	add    ah,cl
  423a33:	loop   0x423a02
  423a35:	mov    BYTE PTR [esi-0x2],bh
  423a38:	stc    
  423a39:	and    al,0x0
  423a3b:	dec    eax
  423a3c:	aaa    
  423a3d:	sbb    al,0xae
  423a40:	cmc    
  423a41:	or     BYTE PTR [eax+0x7],bh
  423a44:	mov    ds:0xede2285a,eax
  423a49:	popa   
  423a4a:	mov    eax,0xd902a29d
  423a4f:	rcl    al,0x80
  423a52:	mov    ecx,0x849e0100
  423a57:	mov    eax,ds:0x8f7d6771
  423a5c:	add    BYTE PTR [edx+0x64],bl
  423a5f:	pop    es
  423a60:	aas    
  423a61:	cmp    edx,DWORD PTR [ecx-0x61]
  423a64:	mov    WORD PTR [eax],es
  423a66:	pop    edi
  423a67:	mul    DWORD PTR [edi]
  423a69:	hlt    
  423a6a:	fucomi st,st(3)
  423a6c:	adc    DWORD PTR [edi-0x7f2b2cc8],ecx
  423a72:	mov    BYTE PTR [esi],al
  423a74:	or     al,0x3c
  423a76:	adc    ebp,DWORD PTR [edx+0x3fb90094]
  423a7c:	add    ah,0xe8
  423a7f:	jp     0x423a22
  423a81:	jge    0x423a83
  423a83:	mov    bl,0x4e
  423a85:	sbb    al,0xea
  423a87:	je     0x423af0
  423a89:	sbb    BYTE PTR [eax+0x0],0xb2
  423a8d:	int3   
  423a8e:	add    ah,BYTE PTR [ebx-0x142e9afc]
  423a94:	add    DWORD PTR [ecx],esp
  423a96:	mov    al,ds:0xb6e31884
  423a9b:	dec    ecx
  423a9c:	outs   dx,DWORD PTR ds:[esi]
  423a9d:	sar    cl,0x5c
  423aa0:	lahf   
  423aa1:	push   ecx
  423aa2:	add    BYTE PTR [ecx],al
  423aa4:	(bad)  
  423aa5:	cmp    eax,0xeb472f76
  423aaa:	xchg   edi,eax
  423aab:	sbb    al,0xb5
  423aad:	xor    eax,0xc0235cff
  423ab2:	imul   esp,eax,0xffffffc0
  423ab5:	adc    al,0x3f
  423ab7:	dec    ecx
  423ab8:	add    BYTE PTR [esi],bh
  423aba:	aad    0x82
  423abc:	sbb    BYTE PTR ds:0x4f40cd67,0x90
  423ac3:	rol    BYTE PTR [eax],0x43
  423ac6:	not    DWORD PTR [ecx+0x1]
  423ac9:	xrelease mov BYTE PTR [ebp-0x57a7d0f8],dh
  423ad0:	and    BYTE PTR [edi-0x2b17ffab],dl
  423ad6:	mov    ecx,0x784b217b
  423adb:	dec    edi
  423adc:	push   cs
  423add:	ins    BYTE PTR es:[edi],dx
  423ade:	xchg   ebx,eax
  423adf:	sbb    ebx,DWORD PTR [eax+eax*4+0x1a]
  423ae3:	fisttp QWORD PTR [edi-0x3f8ad99c]
  423ae9:	dec    edi
  423aea:	jecxz  0x423aac
  423aec:	add    BYTE PTR [edx-0x23ff3b9d],bh
  423af2:	mov    dh,0xe6
  423af4:	ds or  al,0xd0
  423af7:	jno    0x423a85
  423af9:	add    DWORD PTR [esi],edx
  423afb:	mov    ds:0xcdf86d10,al
  423b00:	and    eax,esp
  423b02:	adc    DWORD PTR [ebx+0x0],esi
  423b05:	call   0x58df712e
  423b0a:	dec    ecx
  423b0b:	(bad)  
  423b0c:	in     al,0xe0
  423b0e:	retf   0x6600
  423b11:	jge    0x423b15
  423b13:	(bad)  
  423b14:	out    dx,al
  423b15:	das    
  423b16:	jl     0x423b7b
  423b18:	adc    al,BYTE PTR [ecx+esi*4+0x26ab013a]
  423b1f:	cdq    
  423b20:	ins    BYTE PTR es:[edi],dx
  423b21:	ja     0x423b64
  423b23:	xchg   DWORD PTR [eax],esp
  423b25:	mov    ds:0x7cd8d8,al
  423b2a:	aas    
  423b2b:	sbb    eax,0xf1e48c05
  423b30:	out    dx,eax
  423b31:	(bad)  
  423b32:	out    0xce,al
  423b34:	jb     0xbde48e58
  423b3a:	add    BYTE PTR [edx-0x77fe9aa2],dl
  423b40:	ud2    
  423b42:	mov    ?,WORD PTR [esi+esi*1+0x72]
  423b46:	add    BYTE PTR [eax],0x78
  423b49:	jbe    0x423ada
  423b4b:	xchg   ecx,eax
  423b4c:	loopne 0x423b34
  423b4e:	add    BYTE PTR [ecx+0x1b],bh
  423b51:	push   ecx
  423b52:	les    esi,FWORD PTR [ebx]
  423b54:	cli    
  423b55:	fbstp  TBYTE PTR [eax+0x70b41400]
  423b5b:	mov    esp,DWORD PTR [ebp+0xa]
  423b5e:	imul   eax,DWORD PTR [ecx+0x78],0x60
  423b62:	add    BYTE PTR [edx+0x71497dd4],bh
  423b68:	mov    bh,0x2a
  423b6a:	cli    
  423b6b:	and    bl,BYTE PTR [ebp+edi*1-0x1ec5e4f0]
  423b72:	jge    0x423b84
  423b74:	inc    ecx
  423b75:	jle    0x423bc7
  423b77:	add    bl,bh
  423b79:	pop    ecx
  423b7a:	shl    BYTE PTR [esp+eax*1+0x3],cl
  423b7e:	in     al,dx
  423b7f:	add    BYTE PTR [ebx-0x3a],cl
  423b82:	enter  0x3014,0xaf
  423b86:	shr    BYTE PTR [ebp+0x0],1
  423b89:	arpl   WORD PTR [edi+0x12],ax
  423b8c:	mov    bh,0xc3
  423b8e:	scas   al,BYTE PTR es:[edi]
  423b8f:	pop    ecx
  423b90:	test   BYTE PTR ds:0x6b7904,bl
  423b96:	mov    eax,0x56fd887a
  423b9b:	cs lahf 
  423b9d:	add    BYTE PTR [eax],0xb3
  423ba0:	adc    al,0x16
  423ba2:	jmp    0x423ba7
  423ba4:	mov    ch,0x9d
  423ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ba7:	sti    
  423ba8:	mov    ebp,0x65bb801b
  423bad:	ret    
  423bae:	add    ah,bl
  423bb0:	not    BYTE PTR [ecx-0xb7467f8]
  423bb6:	inc    ebp
  423bb7:	add    BYTE PTR ds:0x2e11e40e,bh
  423bbd:	inc    esp
  423bbe:	and    eax,0x9c00001
  423bc3:	push   0x5c
  423bc5:	outs   dx,DWORD PTR ds:[esi]
  423bc6:	jl     0x423bf7
  423bc8:	jbe    0x423bca
  423bca:	jp     0x423ba2
  423bcc:	or     al,BYTE PTR [ecx-0xb]
  423bcf:	retf   0xa438
  423bd2:	add    BYTE PTR [ebp-0x4],ch
  423bd5:	ja     0x423c00
  423bd7:	mov    ebx,0x1fff571b
  423bdc:	pop    edx
  423bdd:	test   DWORD PTR [ebp-0x80],esi
  423be0:	nop
  423be1:	pop    es
  423be2:	xlat   BYTE PTR ds:[ebx]
  423be3:	adc    dl,BYTE PTR [edi-0xb5affe8]
  423be9:	jg     0x423bbe
  423beb:	stos   BYTE PTR es:[edi],al
  423bec:	push   ds
  423bed:	scas   eax,DWORD PTR es:[edi]
  423bee:	xchg   esp,eax
  423bef:	add    BYTE PTR [esi+edi*2+0x580c4096],ah
  423bf6:	test   edi,ebx
  423bf8:	add    BYTE PTR [esi],bh
  423bfa:	cmp    esp,DWORD PTR [edx]
  423bfc:	sbb    al,0xda
  423bfe:	and    eax,0xe2ec9591
  423c03:	add    BYTE PTR [esi+edx*1],dh
  423c06:	cdq    
  423c07:	jne    0x423bcb
  423c09:	xchg   esi,eax
  423c0a:	mov    bl,0x4a
  423c0c:	add    BYTE PTR [eax+0x73],ah
  423c0f:	add    cl,dl
  423c11:	mov    ebx,0x62258f
  423c16:	lahf   
  423c17:	rol    esi,cl
  423c19:	mov    ebp,0x613ac349
  423c1e:	out    dx,al
  423c1f:	imul   eax,DWORD PTR [eax],0xf
  423c22:	jae    0x423bc4
  423c24:	call   0x7200:0xcc5f57e5
  423c2b:	das    
  423c2c:	(bad)  
  423c2d:	std    
  423c2e:	jno    0x423bd6
  423c30:	push   esi
  423c31:	cmp    eax,DWORD PTR ds:0xcbc85808
  423c37:	mov    ebx,0x7bc200c1
  423c3c:	aam    0x98
  423c3e:	mov    al,0x3
  423c40:	jl     0x423c29
  423c42:	or     al,0x4b
  423c44:	sub    al,0x15
  423c46:	rcl    BYTE PTR [ecx],0x54
  423c49:	test   DWORD PTR [eax],eax
  423c4b:	mov    esi,0xfc14386e
  423c50:	inc    ebp
  423c51:	pop    esi
  423c52:	push   ds
  423c53:	add    BYTE PTR [esi],ah
  423c55:	xor    edx,ebp
  423c57:	and    al,0xa2
  423c59:	jo     0x423bf0
  423c5b:	aam    0x3
  423c5d:	neg    DWORD PTR [eax]
  423c5f:	push   0xc04b0856
  423c64:	pop    ebp
  423c65:	cdq    
  423c66:	sub    eax,DWORD PTR [eax]
  423c68:	xchg   esi,eax
  423c69:	ds ss (bad) 
  423c6d:	je     0x423c16
  423c6f:	fiadd  WORD PTR [eax]
  423c71:	sub    eax,0xa89a7d58
  423c76:	push   ebx
  423c77:	or     ebx,esi
  423c79:	(bad)  
  423c7b:	mov    al,0x56
  423c7d:	retf   
  423c7e:	loopne 0x423c6c
  423c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c81:	xor    al,BYTE PTR [ebx+0x67df00ef]
  423c87:	or     al,bl
  423c89:	mov    ch,0xd3
  423c8b:	loop   0x423cbe
  423c8d:	add    ebp,ebx
  423c8f:	in     eax,dx
  423c90:	int    0x75
  423c92:	push   eax
  423c93:	pushf  
  423c94:	jmp    0x423c7b
  423c96:	mov    ebp,ecx
  423c98:	fdiv   st,st(0)
  423c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c9b:	inc    ebx
  423c9c:	add    BYTE PTR ds:0x9397f5a5,bh
  423ca2:	int3   
  423ca3:	sahf   
  423ca4:	xchg   edx,eax
  423ca5:	add    esp,esi
  423ca7:	popa   
  423ca8:	stos   DWORD PTR es:[edi],eax
  423ca9:	sub    ecx,DWORD PTR [ebp-0x4c]
  423cac:	nop
  423cad:	ret    
  423cae:	test   eax,0xe5ef00b3
  423cb3:	mov    edi,DWORD PTR [edi]
  423cb5:	push   ebp
  423cb6:	push   ds
  423cb7:	aad    0x76
  423cb9:	cmp    esi,ecx
  423cbb:	sub    DWORD PTR [eax-0x7b576b0],eax
  423cc1:	stos   BYTE PTR es:[edi],al
  423cc2:	jl     0x423cd7
  423cc4:	add    BYTE PTR [edx+0x2a],ch
  423cc7:	jns    0x423d01
  423cc9:	ins    DWORD PTR es:[edi],dx
  423cca:	fild   DWORD PTR [edi+0x7fa400ef]
  423cd0:	js     0x423c55
  423cd2:	retf   
  423cd3:	mov    al,ds:0xcc00f54c
  423cd8:	or     eax,0xd6d831b1
  423cdd:	and    BYTE PTR [ebp+0x0],ah
  423ce0:	imul   ebp,DWORD PTR [ecx],0x1e73bb5a
  423ce6:	sub    eax,0x76db004f
  423ceb:	int    0x32
  423ced:	das    
  423cee:	mov    DWORD PTR [ebx+ebx*4+0x0],ecx
  423cf2:	sti    
  423cf3:	lds    esi,FWORD PTR [edx+ebx*4-0x1a]
  423cf7:	xchg   esp,eax
  423cf8:	push   esi
  423cf9:	loope  0x423d74
  423cfb:	jb     0x423cfd
  423cfd:	dec    ecx
  423cfe:	or     al,0x7b
  423d00:	cmp    ah,al
  423d02:	inc    ebp
  423d03:	adc    bl,ah
  423d05:	add    BYTE PTR [ebx],dl
  423d07:	jmp    0x423d4a
  423d09:	push   edi
  423d0a:	push   edx
  423d0b:	repz mov WORD PTR [esi],?
  423d0e:	add    BYTE PTR [ecx],bl
  423d10:	mov    ebp,0x47ddaf61
  423d15:	std    
  423d16:	ret    0xdbea
  423d19:	sbb    al,0x46
  423d1b:	icebp  
  423d1c:	adc    al,BYTE PTR [ebx]
  423d1e:	mov    ds:0x886e0c90,eax
  423d23:	xor    bh,dl
  423d25:	mov    esp,0xbb223f04
  423d2a:	retf   0xfceb
  423d2d:	add    BYTE PTR [edx],bh
  423d2f:	add    al,BYTE PTR [eax+0x192f9c2]
  423d35:	repnz loop 0x423d0b
  423d38:	jl     0x423d79
  423d3a:	add    BYTE PTR [ebx-0x34],bh
  423d3d:	call   0xa8:0x47d5a079
  423d44:	sbb    DWORD PTR [ebx],esi
  423d46:	in     eax,dx
  423d47:	jecxz  0x423d1a
  423d49:	not    BYTE PTR [edi+0x2021014b]
  423d4f:	sub    al,0xc3
  423d51:	xor    ah,BYTE PTR [edx-0x6d57ff67]
  423d57:	xchg   ecx,eax
  423d58:	movd   DWORD PTR [edi+eiz*2],mm1
  423d5c:	pop    ss
  423d5d:	push   ds
  423d5e:	ror    BYTE PTR [ebx-0xfe48a20],0x3
  423d65:	nop    DWORD PTR [eax+0x2f29cf30]
  423d6c:	js     0x423d6e
  423d6e:	add    BYTE PTR [edx],dh
  423d70:	imul   ebx,edi,0x6040a5fe
  423d76:	xor    eax,0x30948d07
  423d7b:	add    ecx,DWORD PTR [edx+0x394fa884]
  423d81:	dec    edi
  423d82:	call   0x1465:0xda5ee320
  423d89:	add    eax,esp
  423d8b:	pusha  
  423d8c:	xchg   ebx,eax
  423d8d:	retf   0x3f92
  423d90:	scas   al,BYTE PTR es:[edi]
  423d91:	int3   
  423d92:	cmp    ebx,DWORD PTR [ebx+0x588bf100]
  423d98:	xlat   BYTE PTR ds:[ebx]
  423d99:	mov    DWORD PTR [eax+0x5e],0x959900a3
  423da0:	adc    esp,DWORD PTR [ecx-0x20c8924]
  423da6:	add    DWORD PTR [ecx],esp
  423da8:	arpl   WORD PTR [ecx],si
  423daa:	outs   dx,BYTE PTR ds:[esi]
  423dab:	fwait
  423dac:	vpsubsw ymm7,ymm4,YMMWORD PTR ds:0x3dedd430
  423db4:	fld    DWORD PTR [esi-0x80]
  423db7:	retf   0x7a62
  423dba:	adc    dh,ch
  423dbc:	in     al,dx
  423dbd:	(bad)  
  423dbe:	dec    edi
  423dbf:	icebp  
  423dc0:	add    al,BYTE PTR [eax]
  423dc2:	inc    edx
  423dc3:	pop    esp
  423dc4:	sub    DWORD PTR [ecx],esp
  423dc6:	es hlt 
  423dc8:	int3   
  423dc9:	adc    BYTE PTR [esi+ecx*2],al
  423dcc:	scas   al,BYTE PTR es:[edi]
  423dcd:	mov    ebx,ebx
  423dcf:	jno    0x423d95
  423dd1:	cmp    BYTE PTR [eax],al
  423dd3:	or     BYTE PTR ds:0x268411c8,dl
  423dd9:	leave  
  423dda:	jmp    0x23b3c621
  423ddf:	and    edi,edi
  423de1:	sub    DWORD PTR [ebx+0x1c62da10],ebp
  423de7:	mov    BYTE PTR [edi+0x2c],bh
  423dea:	inc    esp
  423deb:	pop    eax
  423dec:	sbb    ah,BYTE PTR [edx]
  423dee:	xchg   edx,eax
  423def:	fwait
  423df0:	adc    DWORD PTR [ecx+0x23],edi
  423df3:	out    dx,eax
  423df4:	or     cl,al
  423df6:	mov    edx,0x63284f0
  423dfb:	rol    DWORD PTR [edx-0xe],1
  423dfe:	adc    esp,edx
  423e00:	daa    
  423e01:	xchg   esi,eax
  423e02:	push   esp
  423e03:	adc    eax,0x6f3f3a42
  423e08:	and    esp,ebx
  423e0a:	dec    ebp
  423e0b:	sbb    al,0x10
  423e0d:	jo     0x423d9d
  423e0f:	js     0x423d9a
  423e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e12:	int    0xe5
  423e14:	adc    edx,DWORD PTR [ebp-0x66]
  423e17:	aas    
  423e18:	sub    ah,BYTE PTR [edx+0xc7e113]
  423e1e:	xor    ch,BYTE PTR [eax]
  423e20:	add    BYTE PTR gs:[eax-0x2f],al
  423e24:	cs pop ds
  423e26:	or     BYTE PTR [ebp+edi*2+0x2722f500],0xe2
  423e2e:	dec    ecx
  423e2f:	inc    ebp
  423e30:	xchg   esi,eax
  423e31:	clc    
  423e32:	pop    es
  423e33:	shl    BYTE PTR [edx],0x8a
  423e36:	and    DWORD PTR ss:[edi+0x7b06e133],eax
  423e3d:	stc    
  423e3e:	enter  0xb4af,0x0
  423e42:	xchg   esp,eax
  423e43:	mov    al,0x35
  423e45:	out    dx,al
  423e46:	jmp    0x423e1c
  423e48:	adc    al,0xa0
  423e4a:	add    bh,dl
  423e4c:	sbb    esi,esp
  423e4e:	adc    eax,0xde78f6f0
  423e53:	add    DWORD PTR [eax-0x647a58f],ebp
  423e59:	leave  
  423e5a:	(bad)  
  423e5b:	xor    BYTE PTR [edi],bl
  423e5d:	lea    eax,[ecx]
  423e5f:	xor    ecx,DWORD PTR [ecx+eax*2-0x10]
  423e63:	adc    edx,ebx
  423e65:	out    0xe8,al
  423e67:	push   cs
  423e68:	ror    DWORD PTR [esi],1
  423e6a:	xchg   edi,eax
  423e6b:	pop    esp
  423e6c:	in     eax,dx
  423e6d:	jmp    0x2ea10932
  423e72:	cmpxchg BYTE PTR [ecx],al
  423e75:	dec    esi
  423e76:	imul   eax,DWORD PTR [eax-0x7f],0xd0e3bbb9
  423e7d:	lods   al,BYTE PTR ds:[esi]
  423e7e:	ja     0x423e83
  423e80:	xchg   edi,eax
  423e81:	xor    al,0xdd
  423e83:	fadd   QWORD PTR [ebx+eiz*2-0x12d8c058]
  423e8a:	add    BYTE PTR [ebp-0x2d],bl
  423e8d:	lock das 
  423e8f:	mov    ebx,0xe89756
  423e94:	jo     0x423e3d
  423e96:	sub    BYTE PTR [ebp-0x22861a64],ch
  423e9c:	add    DWORD PTR [edx],ebx
  423e9e:	(bad)  
  423e9f:	enter  0x1bb6,0x66
  423ea3:	xchg   esi,eax
  423ea4:	pusha  
  423ea5:	pop    edi
  423ea6:	pop    eax
  423ea7:	add    BYTE PTR [edx-0x4d],dh
  423eaa:	cmp    BYTE PTR [eax],dl
  423eac:	inc    ebp
  423ead:	lea    eax,[eax-0x492eff81]
  423eb3:	loope  0x423eb8
  423eb5:	mov    bh,0xf8
  423eb7:	addr16 add esp,esp
  423eba:	add    BYTE PTR cs:[eax+0x4478e53b],bl
  423ec1:	scas   al,BYTE PTR es:[edi]
  423ec2:	and    cl,BYTE PTR [ebx+0x55de8f00]
  423ec8:	jae    0x423f3f
  423eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ecb:	sub    DWORD PTR [edi],ecx
  423ecd:	add    ebx,DWORD PTR [eax+0x41]
  423ed0:	jmp    0x423f00
  423ed2:	mov    ch,0xcd
  423ed4:	div    eax
  423ed6:	cmp    eax,0xb00320db
  423edc:	cdq    
  423edd:	sar    BYTE PTR ds:0xbac8a0ea,1
  423ee3:	jecxz  0x423ed1
  423ee5:	cmp    dl,BYTE PTR [esi+0x4e]
  423ee8:	ds js  0x423eee
  423eeb:	push   ss
  423eec:	xor    dl,BYTE PTR [ecx+0x46a08148]
  423ef2:	or     BYTE PTR [edx-0x1e68d68a],ch
  423ef8:	add    al,ah
  423efa:	and    al,0x8a
  423efd:	sub    BYTE PTR [edi+0xe1ee0a],al
  423f03:	imul   esp,DWORD PTR [edi+0x1e],0xf32755e9
  423f0a:	push   eax
  423f0b:	add    eax,0xa5adc8bf
  423f10:	mov    bh,0xfc
  423f12:	add    BYTE PTR [ebx],al
  423f14:	mov    ebx,0xe54fa962
  423f19:	ret    
  423f1a:	cmp    al,0xf1
  423f1c:	dec    esi
  423f1d:	xor    eax,0x2428e8
  423f22:	ins    DWORD PTR es:[edi],dx
  423f23:	mov    DWORD PTR [esi-0x6],0x638e6a58
  423f2a:	add    ch,al
  423f2c:	test   edx,ebx
  423f2e:	xchg   ecx,eax
  423f2f:	mov    dh,0x3d
  423f31:	sbb    eax,0xad0400fc
  423f36:	pop    ebx
  423f37:	jge    0x423efa
  423f39:	daa    
  423f3a:	xlat   BYTE PTR ds:[ebx]
  423f3b:	mov    esi,0xb2b91b50
  423f40:	add    BYTE PTR [esi],al
  423f42:	fwait
  423f43:	pop    edi
  423f44:	lahf   
  423f45:	adc    ecx,DWORD PTR [ebx-0x490f3ce1]
  423f4b:	(bad)  
  423f4c:	rol    DWORD PTR [eax],1
  423f4e:	or     BYTE PTR [edi-0x590d036f],ch
  423f54:	jl     0x423f90
  423f56:	sbb    eax,0xc0b10e76
  423f5b:	adc    edi,esi
  423f5d:	pop    ebp
  423f5e:	arpl   WORD PTR [edx],bp
  423f60:	sbb    eax,DWORD PTR [ebx]
  423f62:	xlat   BYTE PTR ds:[ebx]
  423f63:	mov    ecx,0x72f44bf8
  423f68:	nop
  423f69:	pop    esp
  423f6a:	(bad)  
  423f6b:	loope  0x423f67
  423f6d:	mov    bh,0x0
  423f6f:	(bad)  
  423f70:	outs   dx,BYTE PTR ds:[esi]
  423f71:	sbb    eax,0xe33a23f5
  423f76:	mov    edi,0x507bc00
  423f7b:	push   edx
  423f7c:	cmp    eax,0x7b54c9f8
  423f81:	or     eax,0x58713e
  423f86:	jmp    0x423fd7
  423f88:	cmp    BYTE PTR [esi+0xfb662],bh
  423f8e:	and    DWORD PTR [ebx-0x6c3b9bb5],0xfffffffc
  423f95:	out    0x0,eax
  423f97:	fcmove st,st(3)
  423f99:	out    dx,al
  423f9a:	daa    
  423f9b:	pop    edi
  423f9c:	dec    edx
  423f9d:	icebp  
  423f9e:	std    
  423f9f:	add    BYTE PTR [ecx-0x1a],ah
  423fa2:	xor    DWORD PTR [ecx+0x6f],0x1d
  423fa6:	into   
  423fa7:	or     eax,0x8a643b00
  423fac:	iret   
  423fad:	je     0x42401d
  423faf:	adc    BYTE PTR [edx+0x0],dl
  423fb2:	addr16 daa 
  423fb4:	fisttp WORD PTR [esi+0x2a]
  423fb7:	cmp    al,BYTE PTR [edx]
  423fb9:	mov    ebp,0xff002072
  423fbe:	push   es
  423fbf:	sbb    eax,0x31843680
  423fc4:	xor    ah,0x16
  423fc7:	add    BYTE PTR [ecx+0x577cb39d],dh
  423fcd:	leave  
  423fce:	push   ecx
  423fcf:	add    BYTE PTR ds:[ecx-0x52],ah
  423fd3:	mov    BYTE PTR [ecx+0x674c8aca],bl
  423fd9:	add    BYTE PTR [ebx],dh
  423fdb:	hlt    
  423fdc:	test   DWORD PTR [esi-0x58],ebx
  423fdf:	dec    edi
  423fe0:	gs adc eax,0xf1007d7d
  423fe6:	mov    eax,ds:0x1672ce68
  423feb:	xchg   esp,eax
  423fec:	inc    ecx
  423fed:	add    edx,esp
  423fef:	jmp    0x4c98:0x4e83918c
  423ff6:	sub    al,0xf5
  423ff8:	sbb    al,0x3d
  423ffa:	sbb    DWORD PTR [ebx+0x13d7d502],esi
  424000:	das    
  424001:	aad    0x83
  424003:	je     0x423fe2
  424005:	or     al,0xfb
  424007:	jne    0x424001
  424009:	iret   
  42400a:	jp     0x423ff0
  42400c:	add    BYTE PTR [esi+edx*4-0x2d],dh
  424010:	popa   
  424011:	sahf   
  424012:	pop    es
  424013:	add    DWORD PTR [esi-0x51db07f2],ecx
  424019:	stos   DWORD PTR es:[edi],eax
  42401a:	inc    eax
  42401b:	mov    dh,0x26
  42401d:	inc    ebp
  42401e:	sbb    BYTE PTR [edx+0x2e9a3f00],ch
  424024:	add    dl,BYTE PTR [esi-0x7a]
  424027:	mov    ebx,0x93880023
  42402c:	and    ch,BYTE PTR [edi]
  42402e:	jge    0x4240ab
  424030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424031:	lea    eax,[eax]
  424033:	cmp    eax,0x3cc3f869
  424038:	inc    ebp
  424039:	xor    ecx,edi
  42403b:	add    dh,bh
  42403d:	(bad)  
  42403e:	mov    DWORD PTR [ebx],edx
  424040:	lahf   
  424041:	jns    0x424007
  424043:	aam    0x0
  424045:	scas   al,BYTE PTR es:[edi]
  424046:	aad    0xf5
  424048:	int    0xa5
  42404a:	fwait
  42404b:	outs   dx,DWORD PTR ds:[esi]
  42404c:	mov    edx,0x29e88400
  424051:	cmp    ah,BYTE PTR [ebx-0x41]
  424054:	shl    BYTE PTR [eax],1
  424056:	add    bh,al
  424058:	and    eax,0x3bf4d4f5
  42405d:	jle    0x424037
  42405f:	add    BYTE PTR [eax-0xc03bae5],ch
  424065:	adc    ch,bl
  424067:	enter  0x2203,0x97
  42406b:	js     0x4240a4
  42406d:	and    cl,0x92
  424070:	sbb    BYTE PTR [edi-0x79],0x0
  424074:	push   eax
  424076:	ret    0x4e2
  424079:	cmp    eax,0x26f16f02
  42407e:	jmp    0xafc0:0x95274566
  424085:	and    eax,0xc12075d2
  42408a:	(bad)  
  42408b:	push   cs
  42408c:	out    dx,eax
  42408d:	mov    edi,edi
  42408f:	and    al,BYTE PTR [eax-0x39]
  424092:	jecxz  0x424032
  424094:	push   cs
  424095:	popa   
  424096:	add    eax,0xa507a2b4
  42409b:	les    esp,FWORD PTR cs:[eax-0x42]
  42409f:	add    DWORD PTR [eax],eax
  4240a1:	mov    ebx,es
  4240a3:	xchg   ecx,eax
  4240a4:	loop   0x424082
  4240a6:	sahf   
  4240a7:	pop    ecx
  4240a8:	and    DWORD PTR [bx+si-0x5ffb],esi
  4240ad:	sub    esi,edi
  4240af:	arpl   dx,cx
  4240b1:	cmp    eax,0xf7009714
  4240b6:	jo     0x424072
  4240b8:	cwde   
  4240b9:	sbb    ch,BYTE PTR [ebp+ebx*8+0x0]
  4240bd:	xor    ch,0x4e
  4240c0:	cmp    BYTE PTR [ebp+0x33b4121],bl
  4240c6:	in     al,0x76
  4240c8:	sbb    al,0x9e
  4240ca:	add    esp,DWORD PTR [ebx-0x70]
  4240cd:	in     al,dx
  4240ce:	cdq    
  4240cf:	into   
  4240d0:	adc    bh,dh
  4240d2:	mov    esp,0xfcee
  4240d7:	rol    BYTE PTR [eax+0xb116a5e],0xbe
  4240de:	movntq QWORD PTR [eax-0x6c],mm1
  4240e2:	repz pusha 
  4240e4:	mov    ah,0xd2
  4240e6:	sub    esp,0xffffffe3
  4240e9:	js     0x42410f
  4240eb:	add    dh,al
  4240ed:	sbb    BYTE PTR [edx+edi*8-0x17],ch
  4240f1:	pushf  
  4240f2:	popf   
  4240f3:	mov    ebp,0x4836b707
  4240f8:	xchg   edi,eax
  4240f9:	mov    ecx,0xc8f9d9a0
  4240fe:	pop    esi
  4240ff:	js     0x4240a8
  424101:	add    BYTE PTR [esi+0x4e8ef46b],bl
  424107:	cmp    ebp,DWORD PTR [eax]
  424109:	cmc    
  42410a:	jne    0x424141
  42410c:	add    DWORD PTR [eax-0xdb4da9e],eax
  424112:	push   edi
  424113:	sahf   
  424114:	fdiv   st(2),st
  424116:	mov    DWORD PTR [eax+0x512300e6],edi
  42411c:	xchg   ebp,eax
  42411d:	mov    esi,0x8617648a
  424122:	dec    eax
  424123:	dec    eax
  424124:	les    eax,FWORD PTR [eax]
  424126:	imul   ebx,DWORD PTR [ebx],0x67
  424129:	adc    al,0x41
  42412b:	shr    BYTE PTR ds:0x42875c00,1
  424131:	pushf  
  424132:	sub    DWORD PTR [edx+0x1],esi
  424135:	test   eax,0xc570ff02
  42413a:	sbb    edx,ebp
  42413c:	cmp    al,BYTE PTR [eax+0x7b]
  42413f:	mov    bh,0x68
  424141:	add    BYTE PTR [edi],bl
  424143:	in     eax,dx
  424144:	sahf   
  424145:	push   ecx
  424146:	je     0x424140
  424148:	xchg   BYTE PTR [eax+eax*1-0x18f04636],dh
  42414f:	test   al,0xc8
  424151:	mov    al,ds:0x7d10084
  424156:	push   ebx
  424157:	xchg   edx,eax
  424158:	mov    esi,DWORD PTR [edi+0x3f]
  42415b:	sub    ecx,DWORD PTR [edi]
  42415d:	ins    BYTE PTR es:[edi],dx
  42415e:	jbe    0x4241db
  424160:	mov    edx,0x202ead00
  424165:	xor    edx,DWORD PTR [edi]
  424167:	add    BYTE PTR [edi],al
  424169:	adc    eax,0xb25be72d
  42416e:	jmp    0xd89341d2
  424173:	pop    edx
  424174:	dec    esp
  424175:	popa   
  424176:	(bad)  
  424177:	popf   
  424178:	in     eax,dx
  424179:	add    dl,dl
  42417b:	push   DWORD PTR fs:[esi]
  42417e:	clc    
  42417f:	or     edi,DWORD PTR [ebp-0x193ae86f]
  424185:	pop    DWORD PTR [eax]
  424187:	add    BYTE PTR [ecx+0x73],bh
  42418a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42418b:	test   esi,0xc6de5c
  424191:	xchg   esp,eax
  424192:	dec    ebp
  424193:	bswap  si
  424196:	adc    al,dl
  424198:	out    0x2e,al
  42419a:	add    BYTE PTR [ebp+0x2a73a160],bh
  4241a0:	xor    ch,bh
  4241a2:	mov    DWORD PTR [eax],eax
  4241a4:	sbb    BYTE PTR [edi-0x664e176b],0x18
  4241ab:	fidivr DWORD PTR [edi]
  4241ad:	cs inc edx
  4241af:	add    BYTE PTR [esi],bl
  4241b1:	sbb    al,0x6b
  4241b3:	shr    bl,1
  4241b5:	push   0xffffffbc
  4241b7:	je     0x4241c3
  4241b9:	add    BYTE PTR [esp+ebp*2-0x3c],bh
  4241bd:	sub    esp,DWORD PTR [ecx]
  4241bf:	aaa    
  4241c0:	clc    
  4241c1:	pop    esp
  4241c2:	add    BYTE PTR [ecx],dh
  4241c4:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4241c6:	add    ebx,DWORD PTR [ebp+0x1247f]
  4241cc:	push   eax
  4241cd:	and    al,BYTE PTR [edx+0x7e232147]
  4241d3:	cmp    ah,BYTE PTR ds:[eax-0xa]
  4241d7:	dec    ebx
  4241d8:	lock add BYTE PTR [esi+0x3aabf88],cl
  4241df:	fld    QWORD PTR [ebp-0x5df78361]
  4241e5:	cwde   
  4241e6:	ret    0x1f32
  4241e9:	inc    esp
  4241ea:	mov    ebp,0x67c5009a
  4241ef:	push   esp
  4241f0:	sti    
  4241f1:	ss mov dl,0xfc
  4241f4:	fmul   QWORD PTR [ebp+esi*4+0x5f]
  4241f8:	add    BYTE PTR [esi-0x45],ch
  4241fb:	jb     0x424238
  4241fd:	arpl   WORD PTR [ecx],sp
  4241ff:	inc    edx
  424200:	add    BYTE PTR [ebx-0x3c],cl
  424203:	cwde   
  424204:	jmp    0x424262
  424206:	pop    edi
  424207:	pop    es
  424208:	mov    ds:0xa51e4a78,eax
  42420d:	jae    0x42420e
  42420f:	inc    eax
  424210:	test   ebx,ecx
  424212:	stos   DWORD PTR es:[edi],eax
  424213:	push   0xffffff9c
  424215:	sbb    al,BYTE PTR [eax]
  424217:	int    0x78
  424219:	pop    edi
  42421a:	pop    edx
  42421b:	arpl   WORD PTR [eax-0xdff9dc4],bp
  424221:	sbb    DWORD PTR [eax],esp
  424223:	xchg   DWORD PTR [edi+0x48],ecx
  424226:	(bad)  
  424227:	pop    ecx
  424228:	jnp    0x144a97cd
  42422e:	stos   BYTE PTR es:[edi],al
  42422f:	add    ah,dh
  424231:	pop    edi
  424232:	cmp    al,BYTE PTR [edi-0x65]
  424235:	ins    BYTE PTR es:[edi],dx
  424236:	adc    eax,DWORD PTR [edx]
  424238:	jl     0x424290
  42423a:	cmc    
  42423b:	jb     0x42429b
  42423d:	jae    0x42429e
  42423f:	mov    al,ds:0xe1bf0700
  424244:	jg     0x4242c1
  424246:	scas   al,BYTE PTR es:[edi]
  424247:	daa    
  424248:	fucomip st,st(4)
  42424a:	js     0x42424c
  42424c:	add    al,0x8a
  42424e:	xchg   esp,eax
  42424f:	fwait
  424250:	mov    ebp,0xadfac095
  424255:	popf   
  424256:	sub    eax,0x38492b00
  42425b:	lods   al,BYTE PTR ds:[esi]
  42425c:	jge    0x424273
  42425e:	and    al,0x5
  424261:	sub    BYTE PTR [eax-0x16],al
  424264:	inc    ebp
  424266:	rol    BYTE PTR [eax],0xc3
  424269:	adc    al,0x47
  42426b:	add    BYTE PTR [eax],cl
  42426d:	add    eax,0x93150d69
  424272:	sub    cl,BYTE PTR [ecx]
  424274:	add    DWORD PTR [ebx+edi*2-0x3caddb63],edx
  42427b:	cs clc 
  42427d:	mov    ds:0xd4381dcf,eax
  424282:	test   eax,0x15f13c80
  424287:	adc    al,0xd1
  424289:	or     al,0x1d
  42428b:	add    al,0x96
  42428d:	imul   eax,DWORD PTR [ecx-0x1b],0x2
  424291:	mov    ebx,0xd03b1f95
  424296:	add    BYTE PTR [ebp+0xb],bh
  424299:	adc    al,0x0
  42429b:	outs   dx,DWORD PTR ds:[esi]
  42429c:	or     eax,0x43181b4
  4242a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242a2:	icebp  
  4242a3:	add    BYTE PTR [ecx],cl
  4242a5:	sbb    ecx,ecx
  4242a7:	stc    
  4242a8:	mov    ecx,0x3132c2f
  4242ad:	pusha  
  4242ae:	scas   eax,DWORD PTR es:[edi]
  4242af:	pop    es
  4242b0:	mov    dh,0xdd
  4242b2:	dec    ebp
  4242b3:	rol    BYTE PTR [edi+ecx*1+0x5],1
  4242b7:	pop    ss
  4242b8:	inc    ebp
  4242b9:	daa    
  4242ba:	dec    eax
  4242bb:	add    eax,DWORD PTR [eax]
  4242bd:	fimul  WORD PTR [bx-0x30]
  4242c1:	jl     0x42432e
  4242c3:	out    dx,al
  4242c4:	daa    
  4242c5:	mov    ch,0xbe
  4242c7:	jp     0x4242c9
  4242c9:	add    DWORD PTR [eax-0x795f8890],ebx
  4242cf:	mov    esp,0xfa80874
  4242d4:	xlat   BYTE PTR ds:[ebx]
  4242d5:	(bad)  
  4242d6:	fxch   st(7)
  4242d8:	mov    bl,dh
  4242da:	jge    0x4242e4
  4242dc:	and    ebx,esp
  4242de:	or     BYTE PTR [esi],bh
  4242e0:	outs   dx,DWORD PTR ds:[esi]
  4242e1:	ret    0x5d2e
  4242e4:	add    ch,BYTE PTR [esi-0x7e26fd30]
  4242ea:	add    dl,BYTE PTR [edx+0x12]
  4242ed:	add    al,BYTE PTR [edx-0xe]
  4242f0:	add    dh,BYTE PTR [ecx]
  4242f2:	data16 add dl,al
  4242f5:	cdq    
  4242f6:	add    al,BYTE PTR [ebx]
  4242f8:	int3   
  4242f9:	add    bl,BYTE PTR [ebx+0x2e]
  4242fc:	add    ch,cl
  4242fe:	in     al,0x7
  424300:	mov    esi,0xee6e0868
  424305:	or     dl,bh
  424307:	repnz or BYTE PTR [edx+ebp*4+0x3ac0fd08],ch
  42430f:	std    
  424310:	adc    BYTE PTR [edi+ebx*2],0x80
  424314:	ja     0x424370
  424316:	cmp    BYTE PTR ds:0xc738030,0x80
  42431d:	imul   edx,DWORD PTR [ecx-0x7f4ff880],0x12
  424324:	sub    BYTE PTR [eax+0x7980863c],al
  42432a:	nop
  42432b:	add    BYTE PTR [edx],0x2e
  42432e:	or     DWORD PTR [ebp+0x48e002ca],0x547202
  424338:	clc    
  424339:	mov    ah,0xdf
  42433b:	dec    ax
  42433d:	popf   
  42433e:	loope  0x424341
  424340:	enter  0x6dfb,0x93
  424344:	push   ecx
  424345:	(bad)
  424348:	cli    
  424349:	adc    edi,DWORD PTR [edi]
  42434b:	pop    ebp
  42434c:	jl     0x42434e
  42434e:	jb     0x42438e
  424350:	xor    DWORD PTR [ebx],ecx
  424352:	in     eax,0xbb
  424354:	add    BYTE PTR [ebx-0x1e],bl
  424357:	arpl   WORD PTR [ebx],bp
  424359:	sar    DWORD PTR [ecx-0xfb3b88c],cl
  42435f:	cmp    al,0x0
  424361:	out    0x8b,al
  424363:	(bad)
  424366:	sti    
  424367:	imul   ebx,DWORD PTR [edi],0xffffffd2
  42436a:	iret   
  42436b:	sbb    DWORD PTR [eax+0x52],eax
  42436e:	xchg   esp,eax
  42436f:	cmp    eax,0xb8795bcc
  424374:	add    BYTE PTR [edi],ah
  424376:	stc    
  424377:	mov    ds:0xe36097d9,al
  42437c:	mov    eax,ds:0x4e84e5b2
  424381:	cmp    eax,0x885100f0
  424386:	cld    
  424387:	push   ebp
  424388:	and    BYTE PTR [eax+0x59],0x8c
  42438c:	mov    esp,0x29140000
  424391:	and    ah,BYTE PTR [ecx+eiz*2+0x73]
  424395:	daa    
  424396:	mov    esp,0xe7a0ffec
  42439b:	add    al,0xf
  42439d:	and    DWORD PTR [edi+0x3d],ebp
  4243a0:	mov    al,0x80
  4243a2:	add    al,0x74
  4243a4:	adc    eax,0x435c433
  4243a9:	inc    ebp
  4243aa:	popf   
  4243ab:	shr    bh,cl
  4243ad:	inc    edx
  4243ae:	add    BYTE PTR [ebx-0x1b],dh
  4243b1:	ja     0x424430
  4243b3:	xchg   edx,eax
  4243b4:	xchg   edi,eax
  4243b5:	lock add BYTE PTR [edi+0x3d],cl
  4243b9:	inc    DWORD PTR [edx]
  4243bb:	out    0x42,eax
  4243bd:	sar    edi,cl
  4243bf:	sbb    BYTE PTR [ecx+ebx*2+0x21],bh
  4243c3:	or     al,0xb1
  4243c5:	cmp    dl,BYTE PTR [eax-0x1728a0f6]
  4243cb:	xchg   edi,eax
  4243cc:	jg     0x4243cf
  4243ce:	retf   
  4243cf:	adc    esi,DWORD PTR [ecx]
  4243d1:	outs   dx,DWORD PTR ds:[esi]
  4243d2:	aaa    
  4243d3:	js     0x42436b
  4243d5:	aas    
  4243d6:	std    
  4243d7:	out    0x21,eax
  4243d9:	push   ds
  4243da:	jl     0x424379
  4243dc:	mov    DWORD PTR [eax],0x5d2af840
  4243e2:	test   eax,0xccaaa402
  4243e7:	mov    esp,0x5034430
  4243ec:	push   eax
  4243ed:	nop
  4243ee:	xor    al,0x54
  4243f0:	out    dx,al
  4243f1:	pop    esp
  4243f2:	out    0x77,eax
  4243f4:	add    BYTE PTR [ecx-0x4efea5bd],ah
  4243fa:	jo     0x424425
  4243fc:	add    al,0xeb
  4243fe:	push   ds
  4243ff:	xchg   BYTE PTR [esi+0x12ef99],dh
  424405:	add    BYTE PTR [ebx+0x73fd2d82],ch
  42440b:	xor    edi,esp
  42440d:	add    DWORD PTR [eax],0xa3dddae3
  424413:	(bad)  
  424414:	int3   
  424415:	push   fs
  424417:	add    BYTE PTR [eax-0x31],al
  42441a:	ror    BYTE PTR [edx+0x6a],1
  42441d:	out    dx,al
  42441e:	pop    esp
  42441f:	pop    ss
  424420:	sbb    al,0xd6
  424422:	int    0xf0
  424424:	push   cs
  424425:	jge    0x4243db
  424427:	and    BYTE PTR [ebp+0x7c],0x2e
  42442b:	lods   al,BYTE PTR ds:[esi]
  42442c:	sub    edi,DWORD PTR [ecx]
  42442e:	mov    BYTE PTR [edx-0x44],dh
  424431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424432:	dec    eax
  424433:	inc    DWORD PTR [ebx+esi*4]
  424436:	test   DWORD PTR [eax+0x5e],ebx
  424439:	cli    
  42443a:	mov    bh,0x97
  42443c:	test   BYTE PTR [edx-0x64],dl
  42443f:	jle    0x424446
  424441:	adc    esi,0xf7aa3810
  424447:	out    0xff,eax
  424449:	rol    BYTE PTR [eax-0x4f66f76b],0x0
  424450:	outs   dx,DWORD PTR ds:[esi]
  424451:	pushf  
  424452:	sbb    DWORD PTR [ecx*2+0x54a9f5],edi
  424459:	mov    bh,0x9d
  42445b:	les    eax,FWORD PTR [ecx+eax*8+0x7b43a87]
  424462:	jae    0x424411
  424464:	fistp  DWORD PTR [esi+0x6f]
  424467:	pusha  
  424468:	jl     0x424455
  42446a:	out    0x91,eax
  42446c:	add    al,al
  42446e:	push   edx
  42446f:	repz mov al,ds:0xfb5bc2d6
  424475:	add    BYTE PTR [edi],dl
  424477:	sub    DWORD PTR [ecx+0x2b],esp
  42447a:	pop    esp
  42447b:	out    dx,eax
  42447c:	pop    ds
  42447d:	dec    eax
  42447e:	add    ch,bl
  424480:	jne    0x42442a
  424482:	pop    edi
  424483:	dec    esp
  424484:	nop    DWORD PTR [eax]
  424487:	mov    ch,0x81
  424489:	and    BYTE PTR [edx+0x5e1a219e],al
  42448f:	ret    0xb513
  424492:	add    bh,BYTE PTR [ebp+0x17]
  424495:	pop    ds
  424496:	pop    ds
  424497:	mov    DWORD PTR [eax+0x23],esp
  42449a:	add    al,0xf9
  42449c:	or     BYTE PTR [eax],cl
  42449e:	adc    BYTE PTR [eax],cl
  4244a0:	sbb    ebp,esi
  4244a2:	or     BYTE PTR [ecx],ah
  4244a4:	adc    DWORD PTR [eax],ecx
  4244a6:	sbb    edi,0xf600f428
  4244ac:	sub    eax,0x1d4b7edc
  4244b1:	pop    ebx
  4244b2:	ret    
  4244b3:	mov    eax,0xb3513d18
  4244b8:	or     BYTE PTR [ebx],0x74
  4244bb:	aaa    
  4244bc:	jmp    0x5725:0x24b6d979
  4244c3:	jp     0x4244c5
  4244c5:	xor    eax,0xf32ffe1d
  4244ca:	ret    0xd603
  4244cd:	cmc    
  4244ce:	mov    bh,0xbe
  4244d0:	jecxz  0x424488
  4244d2:	clc    
  4244d3:	or     bh,bh
  4244d5:	fimul  WORD PTR [ebx]
  4244d7:	cs push ds
  4244d9:	div    DWORD PTR [edx]
  4244db:	mov    DWORD PTR [eax],eax
  4244dd:	mov    BYTE PTR [ebp+0x7f093898],al
  4244e3:	loop   0x42451a
  4244e5:	mov    ebp,DWORD PTR [ebp+0x0]
  4244e8:	add    BYTE PTR [edi-0x22],al
  4244eb:	mov    BYTE PTR [eax-0x28d4a5fe],bl
  4244f1:	xor    BYTE PTR [edx-0x46bfd11],cl
  4244f7:	add    cl,BYTE PTR [edx+0x52]
  4244fa:	push   cs
  4244fb:	mov    BYTE PTR [edi+0x8],bl
  4244fe:	jmp    0x4244c7
  424500:	or     BYTE PTR [ecx],cl
  424502:	mov    ch,0x8
  424504:	cwde   
  424505:	out    dx,eax
  424506:	or     BYTE PTR [ebp-0x174df7c3],cl
  42450c:	or     BYTE PTR [ebx-0x73e2f758],al
  424512:	adc    edi,ecx
  424514:	and    dl,BYTE PTR [eax+eiz*1+0x5c90fe30]
  42451b:	mov    al,0x0
  42451d:	and    BYTE PTR [edx],ch
  42451f:	into   
  424520:	and    BYTE PTR [edi-0x61],dh
  424523:	and    dl,cl
  424525:	or     al,0x20
  424527:	stos   BYTE PTR es:[edi],al
  424528:	in     al,dx
  424529:	and    bh,dl
  42452b:	js     0x42454d
  42452d:	jb     0x4244c9
  42452f:	and    BYTE PTR [edi],ah
  424531:	int    0x27
  424533:	jns    0x424562
  424535:	stc    
  424536:	add    BYTE PTR [ebx-0xce58a1f],al
  42453c:	clc    
  42453d:	mov    ds:0xaee24334,al
  424542:	dec    eax
  424543:	aaa    
  424544:	mov    bh,0x2e
  424546:	loopne 0x424548
  424548:	add    BYTE PTR [ebp-0x15],dl
  42454b:	retf   0x9c09
  42454e:	mov    dh,0x14
  424550:	test   dh,cl
  424552:	push   eax
  424553:	mov    al,ds:0x11230274
  424558:	jbe    0x42452c
  42455a:	or     ebp,DWORD PTR [eax+eiz*8]
  42455d:	add    BYTE PTR [edi+0x1b7120],bh
  424563:	fcomip st,st(5)
  424565:	inc    esp
  424566:	out    dx,eax
  424567:	adc    al,0xfa
  424569:	imul   ecx,ebp,0x0
  42456c:	out    0x62,al
  42456e:	push   ecx
  42456f:	faddp  st(1),st
  424571:	fcomi  st,st(3)
  424573:	push   edx
  424574:	cmp    al,0xb5
  424576:	retf   
  424577:	sbb    BYTE PTR [ebp-0x17a0911c],0x33
  42457e:	mov    DWORD PTR [eax-0x18ff9881],0x2b09dcc0
  424588:	(bad)  
  424589:	push   esi
  42458a:	hlt    
  42458b:	add    BYTE PTR [eax+0x59fe930a],dh
  424591:	int3   
  424592:	sub    DWORD PTR [edx],0xe
  424595:	ret    0x9424
  424598:	popf   
  424599:	das    
  42459a:	test   eax,0x5e081ea0
  42459f:	sbb    eax,DWORD PTR [edi+0x0]
  4245a2:	pop    edi
  4245a3:	ins    DWORD PTR es:[edi],dx
  4245a4:	cld    
  4245a5:	stc    
  4245a6:	adc    DWORD PTR ss:[ebp-0x2843ff8e],0xfffffff8
  4245ae:	ja     0x42457a
  4245b0:	pop    es
  4245b1:	mov    ah,0xae
  4245b3:	call   0x9e4a4661
  4245b8:	cwde   
  4245b9:	or     bl,BYTE PTR [edx+ebx*4]
  4245bc:	dec    ecx
  4245bd:	lahf   
  4245be:	add    cl,bh
  4245c0:	aad    0x6a
  4245c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245c3:	jno    0x424603
  4245c5:	imul   ebx,DWORD PTR [ecx-0x5970d600],0xcaeff4e8
  4245cf:	in     al,dx
  4245d0:	and    BYTE PTR [edi],bh
  4245d2:	inc    ecx
  4245d3:	cld    
  4245d4:	mov    WORD PTR [ecx],es
  4245d6:	pop    es
  4245d7:	shr    DWORD PTR [ecx],0x20
  4245da:	mov    eax,ds:0xcbe85a17
  4245df:	mov    ah,0x0
  4245e1:	jge    0x42456d
  4245e3:	ds pop ebx
  4245e5:	mov    ebx,0x20a3c01c
  4245ea:	or     eax,DWORD PTR [esi]
  4245ec:	sbb    eax,0x808bff50
  4245f1:	lea    esp,[edx+0x26cf8557]
  4245f7:	ds mov bh,0x63
  4245fa:	sbb    edx,0xffffffbc
  4245fd:	dec    ebx
  4245fe:	adc    ecx,esp
  424600:	test   al,0x35
  424602:	call   0xf736:0xc3bb019d
  424609:	push   ds
  42460a:	sbb    al,BYTE PTR [ebp+edx*8+0x58bae811]
  424611:	add    bl,dh
  424613:	outs   dx,DWORD PTR ds:[esi]
  424614:	ja     0x424645
  424616:	adc    BYTE PTR [eax+0x20],cl
  424619:	(bad)  
  42461a:	cld    
  42461b:	mov    al,0x0
  42461d:	xchg   BYTE PTR es:[ebx],dl
  424620:	fwait
  424621:	js     0x42464f
  424623:	mov    ds,WORD PTR [ecx+0x0]
  424626:	pop    edi
  424627:	mov    dl,0xdb
  424629:	scas   al,BYTE PTR es:[edi]
  42462a:	xchg   esp,eax
  42462b:	ins    DWORD PTR es:[edi],dx
  42462c:	jb     0x424634
  42462e:	add    dl,cl
  424630:	mov    ch,0x89
  424632:	and    eax,0xe2c32dd3
  424637:	add    BYTE PTR [ebx+0x674f0ea6],al
  42463d:	nop
  42463e:	in     al,dx
  42463f:	sbb    DWORD PTR [eax],eax
  424641:	and    esp,DWORD PTR [ebp+0x3f]
  424644:	loope  0x4246ac
  424646:	mov    bl,0xd9
  424648:	repz cmp BYTE PTR [eax+edx*8+0x3728d301],al
  424650:	jnp    0x42465c
  424652:	scas   eax,DWORD PTR es:[edi]
  424653:	cld    
  424654:	(bad)  
  424655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424656:	push   cs
  424657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424658:	xor    eax,0x8ce0a579
  42465d:	cmp    DWORD PTR [esi+ecx*1],0x62
  424661:	cwde   
  424662:	ds add bh,bl
  424665:	nop
  424666:	ror    DWORD PTR [ebx+edi*4],cl
  424669:	push   0xffffffb6
  42466b:	mov    esi,0xc3003dee
  424670:	mov    ch,0x16
  424672:	fst    QWORD PTR [esp+edi*4-0x26]
  424676:	scas   al,BYTE PTR es:[edi]
  424677:	add    al,cl
  424679:	pop    eax
  42467a:	sbb    eax,0xfb4eba79
  42467f:	cwde   
  424680:	add    BYTE PTR [ebx+0x46],bl
  424683:	pop    edx
  424684:	aaa    
  424685:	test   DWORD PTR [ebx],0x4b003c49
  42468b:	sub    eax,0x3fd5c732
  424690:	mov    ebp,0x29fb0002
  424695:	or     al,0xf
  424697:	mov    bh,0x77
  424699:	push   ebx
  42469a:	inc    BYTE PTR [eax]
  42469c:	mov    bl,0x3c
  42469e:	adc    DWORD PTR [ecx+0x28],esi
  4246a1:	(bad)  
  4246a2:	mov    dh,0xd5
  4246a4:	or     ebp,DWORD PTR [esi+ebx*8+0x83215d]
  4246ab:	stos   BYTE PTR es:[edi],al
  4246ac:	add    eax,esi
  4246ae:	adc    al,0x3
  4246b0:	call   0xbaa3:0xc41b1d00
  4246b7:	arpl   bx,di
  4246b9:	mov    bh,0x0
  4246bb:	sbb    dh,BYTE PTR [edx]
  4246bd:	loop   0x4246b2
  4246bf:	lock sub ch,cl
  4246c2:	into   
  4246c3:	add    BYTE PTR [edx-0x68d13a36],al
  4246c9:	cmp    DWORD PTR [edi+0x7f67001c],ecx
  4246cf:	mov    eax,0xa9edeae0
  4246d4:	jbe    0x4246d6
  4246d6:	ret    0xb66
  4246d9:	sbb    ebx,esp
  4246db:	rcl    DWORD PTR [eax+0x72],0x0
  4246df:	call   0x7bf78633
  4246e4:	xchg   BYTE PTR [edx],dl
  4246e6:	inc    edx
  4246e7:	jmp    0xdf80:0x6d683df6
  4246ee:	xchg   edx,eax
  4246ef:	shl    BYTE PTR [ecx+0x3a],1
  4246f2:	mov    esi,0x27169
  4246f7:	popf   
  4246f8:	cmc    
  4246f9:	mov    al,0x38
  4246fb:	or     al,0x3d
  4246fd:	cwde   
  4246fe:	jno    0x424700
  424700:	data16 adc bl,BYTE PTR [ecx+0x51fd1390]
  424707:	or     DWORD PTR [edx],eax
  424709:	adc    eax,0xe65f5a81
  42470e:	ret    
  42470f:	ror    BYTE PTR [eax+ebx*1+0x1],0x75
  424714:	push   esi
  424715:	add    BYTE PTR [esi+0x2a],dh
  424718:	inc    BYTE PTR [edx]
  42471a:	mov    ch,0xa8
  42471c:	inc    esp
  42471d:	xchg   esp,eax
  42471e:	add    BYTE PTR [edx+0x33],dh
  424721:	xor    eax,0x9f4f2f66
  424726:	fld    QWORD PTR [eax]
  424728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424729:	xor    al,BYTE PTR [esi-0x314d49a8]
  42472f:	je     0x42473c
  424731:	stos   BYTE PTR es:[edi],al
  424732:	jnp    0x424769
  424734:	cli    
  424735:	add    BYTE PTR [eax],0xf0
  424738:	mov    cl,0x98
  42473a:	in     eax,0x0
  42473c:	imul   edi,DWORD PTR [esi+0xf],0x1a
  424740:	into   
  424741:	loop   0x424748
  424743:	inc    edx
  424744:	add    BYTE PTR [ecx-0x64],cl
  424747:	push   ebp
  424748:	inc    esp
  424749:	mov    ebp,0x26ed948
  42474e:	js     0x424707
  424750:	call   0x1251cda
  424755:	and    DWORD PTR [eax-0x3cffb370],0x5cc8a842
  42475f:	fimul  DWORD PTR [esi]
  424761:	addr16 sbb eax,0x406c8e5f
  424767:	add    eax,0x2f8c44ad
  42476c:	rol    BYTE PTR [eax],1
  42476e:	xchg   ebx,eax
  42476f:	idiv   BYTE PTR [ebp+ebp*1-0x70836d57]
  424776:	add    BYTE PTR [eax-0x59],ah
  424779:	mov    al,ds:0xa51a4fdf
  42477e:	cmc    
  42477f:	or     BYTE PTR [ebx],0x26
  424782:	cmp    dl,ah
  424784:	add    eax,DWORD PTR [eax]
  424786:	and    eax,DWORD PTR [edi+edx*8+0x48]
  42478a:	repnz loope 0x424753
  42478d:	adc    dl,0xe3
  424790:	add    bh,ah
  424792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424793:	add    al,0xb2
  424795:	mov    eax,0x7f863353
  42479a:	gs and ah,al
  42479d:	out    dx,al
  42479e:	add    BYTE PTR [ecx+0x914b76c],ch
  4247a4:	sub    BYTE PTR [ebx+0x29f400e5],0x6a
  4247ab:	sbb    DWORD PTR [esi],edi
  4247ad:	js     0x42478c
  4247af:	push   eax
  4247b0:	or     cl,bh
  4247b2:	dec    esi
  4247b3:	gs push 0x4055940e
  4247b9:	stos   DWORD PTR es:[edi],eax
  4247ba:	xchg   ecx,eax
  4247bb:	aas    
  4247bc:	into   
  4247bd:	out    dx,al
  4247be:	add    BYTE PTR [esi],al
  4247c0:	mov    ds:0xd0654c58,al
  4247c5:	div    ebx
  4247c7:	add    BYTE PTR [ebx-0x61],al
  4247ca:	or     al,0xd4
  4247cc:	cmp    DWORD PTR [ecx-0x1d],esi
  4247cf:	out    0xec,al
  4247d1:	dec    esi
  4247d2:	add    DWORD PTR [ebx+0x3823b526],ecx
  4247d8:	push   0xfffffff3
  4247da:	int3   
  4247db:	mov    ah,0xbb
  4247dd:	add    dh,dl
  4247df:	jmp    0xd0d4:0x8cfb354c
  4247e6:	bndstx [edx-0x25d9948],(bad)
  4247ed:	or     DWORD PTR [eax+0x38db3700],ebx
  4247f3:	jae    0x424813
  4247f5:	loop   0x424818
  4247f7:	lea    eax,[eax+0x6f]
  4247fa:	cli    
  4247fb:	aas    
  4247fc:	cmp    dh,BYTE PTR [edx+0x15]
  4247ff:	out    0x1,al
  424801:	add    ch,BYTE PTR [ebp-0x3251cf8f]
  424807:	inc    ebx
  424808:	add    ah,dh
  42480a:	repnz sub eax,DWORD PTR ds:0x985aaf26
  424811:	add    BYTE PTR [edi+eiz*2-0x66],bh
  424815:	(bad)
  424819:	add    edi,DWORD PTR [eax+0xa370000]
  42481f:	and    BYTE PTR [esi+0x4a],0x86
  424823:	(bad)  
  424824:	ret    
  424825:	add    ch,ch
  424827:	rol    BYTE PTR [ebx+0x6ecd0215],1
  42482d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42482e:	add    al,BYTE PTR [ebx+ebp*2]
  424831:	mov    ebp,0x13bc5d
  424836:	js     0x4247d4
  424838:	inc    esp
  424839:	lea    eax,[edx]
  42483b:	dec    ecx
  42483c:	jno    0x42481e
  42483e:	push   eax
  42483f:	and    eax,ecx
  424841:	add    esi,DWORD PTR [esi+0x66428815]
  424847:	dec    ebp
  424848:	pop    es
  424849:	sti    
  42484a:	fstp   QWORD PTR [edx-0x1bef8fa4]
  424850:	xlat   BYTE PTR ds:[ebx]
  424851:	pop    ebp
  424852:	push   eax
  424853:	add    dh,dl
  424855:	enter  0x934a,0xb2
  424859:	inc    ebx
  42485a:	jno    0x424846
  42485c:	add    DWORD PTR [eax],esi
  42485e:	aam    0x1e
  424860:	aas    
  424861:	aaa    
  424862:	push   ecx
  424863:	push   edi
  424864:	loopne 0x424869
  424866:	ss in  al,dx
  424868:	sbb    al,BYTE PTR [ebx]
  42486a:	adc    ebx,0xf6d2b6d7
  424870:	lahf   
  424871:	add    BYTE PTR [ebx],ch
  424873:	dec    esi
  424874:	loope  0x4247fb
  424876:	add    BYTE PTR [edi+0x11d657dc],dl
  42487c:	std    
  42487d:	cmp    BYTE PTR [edx],ah
  42487f:	push   cs
  424880:	mov    cl,0x36
  424882:	cmp    eax,0x4defe03b
  424887:	gs mov al,0x51
  42488a:	add    BYTE PTR [edx+ebx*8],bl
  42488d:	push   0xffffff86
  42488f:	push   cs
  424890:	mov    bh,0x75
  424892:	add    al,0x0
  424894:	add    DWORD PTR [ecx],0xfbd9f31e
  42489a:	mov    edx,0xfeae7cc
  42489f:	loope  0x424826
  4248a1:	dec    eax
  4248a2:	(bad)  
  4248a3:	mov    cl,0xdd
  4248a5:	hlt    
  4248a6:	fsubr  DWORD PTR [edi]
  4248a8:	or     BYTE PTR [eax],al
  4248aa:	pop    ebx
  4248ab:	addr16 jb 0x424877
  4248ae:	popf   
  4248af:	cmp    al,0x93
  4248b1:	in     eax,dx
  4248b2:	add    BYTE PTR [esi-0x704d3358],dl
  4248b8:	jmp    FWORD PTR [eax+0x52]
  4248bb:	add    cl,bh
  4248bd:	jnp    0x4248d8
  4248bf:	test   eax,0xa58621d2
  4248c4:	pop    edx
  4248c5:	xor    dl,dh
  4248c7:	add    BYTE PTR [eax+0xba18085],cl
  4248cd:	addr16 aaa 
  4248cf:	jl     0x424896
  4248d1:	ds pop esi
  4248d3:	clc    
  4248d4:	scas   al,BYTE PTR es:[edi]
  4248d5:	mov    edx,0x66c3000f
  4248da:	pop    ds
  4248db:	sub    esp,DWORD PTR [edx+0x22a800db]
  4248e1:	sub    eax,0xcd3c0caa
  4248e6:	cmp    DWORD PTR cs:[eax+0x19af004e],edi
  4248ed:	outs   dx,DWORD PTR ds:[esi]
  4248ee:	loope  0x4248db
  4248f0:	and    BYTE PTR ds:0x2339f000,0xfa
  4248f7:	(bad)  
  4248f8:	jecxz  0x424883
  4248fa:	xchg   DWORD PTR [eax],eax
  4248fc:	dec    ebx
  4248fd:	mov    eax,ds:0xc8933306
  424902:	inc    esp
  424903:	daa    
  424904:	sbb    eax,0x80d7246a
  424909:	(bad)  
  42490a:	in     al,dx
  42490b:	add    dl,0xda
  42490e:	imul   eax,DWORD PTR [eax],0x7c7f0fe2
  424914:	in     eax,dx
  424915:	sub    eax,0xa500cb2e
  42491a:	mov    ds:0xa583ce1,al
  42491f:	arpl   dx,di
  424921:	add    BYTE PTR [edx+eiz*8-0x53],dh
  424925:	out    dx,al
  424926:	push   0x470432
  42492b:	mov    ah,0x8d
  42492d:	jmp    0x7aa8747d
  424932:	rol    DWORD PTR [eax],cl
  424934:	aam    0xc8
  424936:	lock mov eax,ds:0xfb05cb1e
  42493c:	add    eax,ebx
  42493e:	jbe    0x4248cb
  424940:	sub    DWORD PTR [edi],ebx
  424942:	mov    esi,0xba56e0d5
  424947:	(bad)  
  424948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424949:	add    ch,ch
  42494b:	in     al,dx
  42494c:	hlt    
  42494d:	sbb    DWORD PTR [ebx],0x10a94161
  424953:	in     eax,dx
  424954:	pop    ebp
  424955:	fsub   st,st(1)
  424957:	scas   eax,DWORD PTR es:[edi]
  424958:	popa   
  424959:	mov    ds:0x4fae9542,eax
  42495e:	(bad)  
  424960:	or     BYTE PTR ds:0x238b9ec1,al
  424966:	nop
  424967:	scas   eax,DWORD PTR es:[edi]
  424968:	or     BYTE PTR [eax],al
  42496a:	sub    al,0x3b
  42496c:	inc    esp
  42496d:	xor    DWORD PTR [eax],eax
  42496f:	js     0x4249d7
  424971:	lock jb 0x4248fb
  424974:	mov    edi,DWORD PTR [esi]
  424976:	jns    0x424987
  424978:	shr    DWORD PTR [edx+0x1ca04275],cl
  42497e:	push   0xd4fbea
  424983:	hlt    
  424984:	fadd   QWORD PTR [esi+0x40]
  424987:	mov    bl,0xe9
  424989:	repnz les eax,FWORD PTR [eax]
  42498c:	aaa    
  42498d:	cdq    
  42498e:	out    dx,al
  42498f:	test   DWORD PTR [edx-0x55],edi
  424992:	mov    dh,0x2c
  424994:	add    al,dh
  424996:	std    
  424997:	fsub   QWORD PTR [eax+0x2be6465f]
  42499d:	add    DWORD PTR [ebp-0x644dbbfa],ecx
  4249a3:	jnp    0x4249e6
  4249a5:	les    eax,FWORD PTR [ebx+0x758ef6f0]
  4249ab:	sti    
  4249ac:	add    BYTE PTR [edi],dl
  4249ae:	sbb    DWORD PTR [ebx+0x65],0x93baf288
  4249b5:	add    BYTE PTR [ebx+0x336c90c5],ch
  4249bb:	iret   
  4249bc:	sahf   
  4249bd:	lods   al,BYTE PTR ds:[esi]
  4249be:	add    BYTE PTR [esi+eax*4+0xf8ac122],bl
  4249c5:	rcl    DWORD PTR [eax+eax*1+0x7bbc3534],1
  4249cc:	xchg   ebx,eax
  4249cd:	(bad)
  4249d0:	add    eax,0xc48df252
  4249d5:	dec    esi
  4249d6:	rcl    BYTE PTR [ecx+0x6e],0xae
  4249da:	lods   eax,DWORD PTR ds:[esi]
  4249db:	pop    es
  4249dc:	push   ebx
  4249dd:	adc    ecx,ebx
  4249df:	stos   DWORD PTR es:[edi],eax
  4249e0:	std    
  4249e1:	push   ecx
  4249e2:	push   0xdae46407
  4249e7:	inc    ebx
  4249e8:	add    bh,cl
  4249ea:	fistp  WORD PTR [eax-0x36]
  4249ed:	push   cs
  4249ee:	mov    dl,0x3b
  4249f0:	clc    
  4249f1:	add    BYTE PTR [esi],bh
  4249f3:	pop    ebp
  4249f4:	mov    esi,0x2e04d783
  4249f9:	mov    eax,ds:0x41128f00
  4249fe:	cld    
  4249ff:	xor    ch,ch
  424a01:	loope  0x424a52
  424a03:	rcl    BYTE PTR [edx-0x79a3e73a],0xc8
  424a0a:	add    dh,ch
  424a0c:	(bad)  
  424a0d:	cdq    
  424a0e:	and    DWORD PTR [edi],0x6e55f4
  424a14:	pusha  
  424a15:	ror    cl,0xb7
  424a18:	out    0xd4,eax
  424a1a:	sbb    al,0xa3
  424a1c:	add    BYTE PTR [ecx],bl
  424a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a1f:	in     eax,dx
  424a20:	or     ecx,edx
  424a22:	mov    cl,0xd
  424a24:	mov    dh,0x0
  424a26:	(bad)  
  424a27:	fwait
  424a28:	sahf   
  424a29:	pop    esp
  424a2a:	adc    bl,BYTE PTR [ebp-0x2e]
  424a2d:	xlat   BYTE PTR ds:[ebx]
  424a2e:	push   cs
  424a2f:	push   edi
  424a30:	(bad)  
  424a31:	sbb    ah,al
  424a33:	in     eax,0x3e
  424a35:	mov    eax,0x16af
  424a3a:	jnp    0x424a90
  424a3c:	loopne 0x4249cb
  424a3e:	int3   
  424a3f:	retf   
  424a40:	sbb    al,0x52
  424a42:	scas   al,BYTE PTR es:[edi]
  424a43:	stc    
  424a44:	rcr    ah,0xfd
  424a47:	push   ds
  424a48:	and    al,0x59
  424a4a:	leave  
  424a4b:	add    BYTE PTR [eax-0x7901f991],al
  424a51:	cmp    BYTE PTR [ebx+0x54],al
  424a54:	add    al,cl
  424a56:	push   cs
  424a57:	test   al,0x9e
  424a59:	mov    ebp,0xee1f4c87
  424a5e:	int3   
  424a5f:	cmp    BYTE PTR [esi+0x30c90091],ah
  424a65:	gs jo  0x424a82
  424a68:	pop    ss
  424a69:	(bad)  
  424a6a:	pop    ss
  424a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a6c:	jns    0x424a33
  424a6e:	push   cs
  424a6f:	cs ret 0xb420
  424a73:	push   esp
  424a74:	or     ebp,DWORD PTR [ebx]
  424a76:	ds add esp,edi
  424a79:	cmp    esi,edi
  424a7b:	imul   edx,DWORD PTR [ecx+0x3b],0x52e61ab8
  424a82:	pop    edx
  424a83:	jne    0x424a44
  424a85:	cs out 0xb5,eax
  424a88:	scas   al,BYTE PTR es:[edi]
  424a89:	push   0x0
  424a8b:	add    bh,BYTE PTR [ebp-0x5c]
  424a8e:	push   eax
  424a8f:	(bad)  
  424a90:	fcmovnbe st,st(0)
  424a92:	lods   eax,DWORD PTR ds:[esi]
  424a93:	inc    esp
  424a94:	or     al,0x48
  424a96:	inc    eax
  424a97:	pop    ss
  424a98:	in     eax,0x8e
  424a9a:	pop    ebx
  424a9b:	mov    al,0xa2
  424a9d:	lods   eax,DWORD PTR ds:[esi]
  424a9e:	mov    eax,0xba00ebb3
  424aa3:	in     al,0x15
  424aa5:	clc    
  424aa6:	adc    al,0x0
  424aa8:	fdiv   QWORD PTR ds:0xddbe5a75
  424aae:	dec    esp
  424aaf:	das    
  424ab0:	in     al,0x1c
  424ab2:	add    DWORD PTR [ebp+0x2897c5a9],eax
  424ab8:	jl     0x424ad0
  424aba:	fsub   st(2),st
  424abc:	and    eax,0xe520a00e
  424ac1:	cmp    BYTE PTR [ecx+0x2ab115a4],ah
  424ac7:	int3   
  424ac8:	das    
  424ac9:	mov    eax,ds:0x3fb5d01e
  424ace:	into   
  424acf:	inc    ebp
  424ad0:	mov    dl,0x57
  424ad2:	add    BYTE PTR [eax-0x29],bh
  424ad5:	(bad)  
  424ad6:	scas   eax,DWORD PTR es:[edi]
  424ad7:	call   0xd8e9:0x42f0078b
  424ade:	jmp    0x424b5b
  424ae0:	pop    ebp
  424ae1:	gs xchg esp,eax
  424ae3:	jge    0x424b4e
  424ae5:	std    
  424ae6:	int    0x44
  424ae8:	fsub   st(6),st
  424aea:	add    DWORD PTR cs:[ebp+0x1f3b3187],ebp
  424af1:	mov    eax,ss:0x52606d4
  424af7:	xchg   esi,eax
  424af8:	loope  0x424b2d
  424afa:	or     al,0x8c
  424afc:	(bad)  
  424afd:	pop    ss
  424afe:	shl    ch,1
  424b00:	dec    edx
  424b01:	fnstenv [edi+0x1e865a00]
  424b07:	sbb    eax,0x60d16439
  424b0c:	mov    al,0xc6
  424b0e:	add    bl,al
  424b10:	jmp    0xe01e077b
  424b15:	cmp    eax,DWORD PTR [ecx-0x347ce800]
  424b1b:	xchg   edx,eax
  424b1c:	mov    bh,0x7c
  424b1e:	lea    edi,[esi+0x79003e78]
  424b24:	lahf   
  424b25:	adc    eax,0x17035c08
  424b2a:	in     eax,dx
  424b2b:	or     ecx,DWORD PTR [edx+0x21]
  424b2e:	lds    eax,FWORD PTR [ecx]
  424b30:	dec    edi
  424b31:	lods   eax,DWORD PTR ds:[esi]
  424b32:	mov    ah,dh
  424b34:	pop    DWORD PTR [eax]
  424b36:	jle    0x424b04
  424b38:	mov    ds:0x214f140c,eax
  424b3d:	(bad)  
  424b3e:	jl     0x424b80
  424b40:	inc    ebp
  424b41:	test   BYTE PTR [edx-0x3e9dfd3c],0xe7
  424b48:	adc    ebp,esp
  424b4a:	cmp    BYTE PTR [edx],al
  424b4c:	es or  al,0x30
  424b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b50:	xchg   esi,eax
  424b51:	adc    bl,0x25
  424b54:	sbb    BYTE PTR [ebx],0xa6
  424b57:	test   BYTE PTR [ecx],dl
  424b59:	out    0xbd,al
  424b5b:	push   ebx
  424b5c:	and    dh,BYTE PTR [edx-0x75577300]
  424b62:	retfw  
  424b64:	add    ch,BYTE PTR [esi+edi*8+0x11]
  424b68:	jle    0x424bd9
  424b6a:	ret    0x609c
  424b6d:	jns    0x424b10
  424b6f:	xor    BYTE PTR [ecx+0x12],0x81
  424b73:	push   esi
  424b74:	or     al,0x86
  424b76:	cmp    DWORD PTR ds:0x5781e308,0x88873f18
  424b80:	daa    
  424b81:	sub    edx,DWORD PTR [ecx]
  424b83:	aad    0xbc
  424b85:	in     eax,dx
  424b86:	inc    eax
  424b87:	idiv   DWORD PTR [edi+0x40]
  424b8a:	mov    ds:0x76ff4099,al
  424b8f:	(bad)  
  424b90:	out    0x72,eax
  424b92:	test   al,0x10
  424b94:	pop    edi
  424b95:	icebp  
  424b96:	and    DWORD PTR [edx+0x37f56a02],0xffffffad
  424b9d:	add    DWORD PTR [ebx+0x40223b24],eax
  424ba3:	adc    DWORD PTR [edx-0x58dffe9a],ebx
  424ba9:	adc    dh,BYTE PTR [eax+0x3cb1ab02]
  424baf:	inc    eax
  424bb0:	mov    edx,0xd1a02b0
  424bb5:	aad    0x4e
  424bb7:	mov    ch,BYTE PTR [edi+0x2]
  424bba:	test   bh,ch
  424bbc:	add    al,BYTE PTR [ecx]
  424bbe:	pushf  
  424bbf:	and    al,0x81
  424bc1:	sbb    al,0x91
  424bc3:	int3   
  424bc4:	loop   0x424c42
  424bc6:	add    BYTE PTR [edi+eiz*8-0x61dd5f3f],cl
  424bcd:	xlat   BYTE PTR ds:[ebx]
  424bce:	inc    esp
  424bcf:	jecxz  0x424b60
  424bd1:	inc    esp
  424bd2:	iret   
  424bd3:	in     eax,0x80
  424bd5:	test   ebp,ebx
  424bd7:	(bad)  
  424bd8:	adc    BYTE PTR [edx+eax*1+0x19ce643e],cl
  424bdf:	pop    ds
  424be0:	adc    BYTE PTR [edx-0x33747fd1],bh
  424be6:	mov    DWORD PTR [esi+0x1],edi
  424be9:	xlat   BYTE PTR ds:[ebx]
  424bea:	mov    al,ds:0x12a201e
  424bef:	int3   
  424bf0:	xor    BYTE PTR [ebx+0x569e7e78],ah
  424bf6:	add    ebx,esp
  424bf8:	cmp    BYTE PTR [ecx],al
  424bfa:	mov    ch,0x4a
  424bfc:	add    DWORD PTR [edi-0x4ee7fef5],edx
  424c02:	push   ds
  424c03:	and    bh,dh
  424c05:	inc    edi
  424c06:	outs   dx,BYTE PTR ds:[esi]
  424c07:	mov    esi,0x6374a002
  424c0c:	popf   
  424c0d:	mov    ebp,0x98910703
  424c12:	test   al,0xba
  424c14:	push   es
  424c15:	rdmsr  
  424c17:	daa    
  424c18:	cli    
  424c19:	lea    esp,[eax-0x26]
  424c1c:	cmc    
  424c1d:	jge    0x424c23
  424c1f:	in     al,0x70
  424c21:	or     BYTE PTR [eax-0x2b06f9c],cl
  424c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c28:	lods   eax,DWORD PTR ds:[esi]
  424c29:	inc    eax
  424c2a:	jp     0x424c72
  424c2c:	(bad)  [esi+0x2]
  424c2f:	mov    bh,0xde
  424c31:	data16 jnp 0x424c24
  424c34:	or     bl,ah
  424c36:	add    al,bh
  424c38:	dec    eax
  424c39:	adc    dh,BYTE PTR [edx+0x0]
  424c3c:	mov    bl,BYTE PTR [eax]
  424c3e:	cli    
  424c3f:	and    BYTE PTR [edx+0x893709],dl
  424c45:	jnp    0x424c80
  424c47:	hlt    
  424c48:	xchg   BYTE PTR [edi+0xfe1e377],dh
  424c4e:	lock fimul DWORD PTR [edx-0x73cc3fc8]
  424c55:	xchg   esp,eax
  424c56:	ds mov ecx,0xbce71e0e
  424c5c:	pop    es
  424c5d:	in     eax,0xe2
  424c5f:	cmp    al,0xc2
  424c61:	and    dh,BYTE PTR [eax+0xd0e00e0]
  424c67:	popf   
  424c68:	inc    esi
  424c69:	lods   eax,DWORD PTR ds:[esi]
  424c6a:	add    BYTE PTR [esi-0x4cc70c45],al
  424c70:	dec    edx
  424c71:	xor    ecx,DWORD PTR [ecx+0x955920]
  424c77:	nop
  424c78:	(bad)  
  424c79:	in     eax,dx
  424c7a:	xor    DWORD PTR [ecx+0x7eaab6],0x66ec454d
  424c84:	out    0xfb,al
  424c86:	cli    
  424c87:	addr16 mov edx,0x93653900
  424c8d:	xor    BYTE PTR [esi-0x4f],0xb5
  424c91:	scas   eax,DWORD PTR es:[edi]
  424c92:	sahf   
  424c93:	pop    eax
  424c94:	jmp    0x47:0x6ece9c08
  424c9b:	fs jnp 0x424c50
  424c9e:	xor    eax,0x28005073
  424ca3:	jns    0x424c30
  424ca5:	pop    eax
  424ca6:	leave  
  424ca7:	std    
  424ca8:	imul   esi,DWORD PTR [edi+0x0],0x18
  424cac:	mov    edi,0x727e5fb8
  424cb1:	test   DWORD PTR [ecx],ecx
  424cb3:	add    dl,bl
  424cb5:	ret    
  424cb6:	das    
  424cb7:	xchg   ecx,eax
  424cb8:	(bad)
  424cbb:	cld    
  424cbc:	add    BYTE PTR [edi-0x70bffc9b],dh
  424cc2:	or     edx,DWORD PTR [edi]
  424cc4:	adc    DWORD PTR [ecx],eax
  424cc6:	mov    ch,0x81
  424cc8:	pop    edi
  424cc9:	stc    
  424cca:	test   eax,0x24d9ab75
  424ccf:	adc    BYTE PTR [ebx-0x36f0451b],dh
  424cd5:	or     bh,bl
  424cd7:	inc    edi
  424cd8:	shl    BYTE PTR [ecx+eiz*8-0x33],0x7
  424cdd:	les    eax,FWORD PTR [edx]
  424cdf:	sbb    al,0xc1
  424ce1:	sbb    ebx,DWORD PTR [esi+0x32]
  424ce4:	xchg   edi,eax
  424ce5:	loopne 0x424c8d
  424ce7:	mov    ds:0xd08e008b,al
  424cec:	ss jecxz 0x424d45
  424cef:	lods   eax,DWORD PTR ds:[esi]
  424cf0:	xchg   edx,eax
  424cf1:	in     eax,0x0
  424cf3:	(bad)
  424cf7:	jg     0x424cfc
  424cf9:	outs   dx,DWORD PTR ds:[esi]
  424cfb:	add    eax,DWORD PTR ds:0x4cefa68b
  424d01:	mov    ecx,0xfc85afa1
  424d06:	mov    dh,0x4b
  424d08:	add    al,0xcf
  424d0a:	imul   eax,DWORD PTR [esi],0x47
  424d0d:	dec    esi
  424d0e:	sub    BYTE PTR [eax+0xe6ae27],0xe9
  424d15:	or     ebp,edi
  424d17:	sbb    eax,0x5169441a
  424d1c:	add    BYTE PTR [edi+0x67],dh
  424d1f:	xor    eax,DWORD PTR [edx+0x7f5a7e10]
  424d25:	add    BYTE PTR [esi+0x4d],cl
  424d28:	cmp    esi,DWORD PTR [edx-0x53e7b970]
  424d2e:	add    eax,0xe687dcee
  424d33:	sub    eax,eax
  424d35:	loope  0x424ced
  424d37:	lock add BYTE PTR ss:[esi+0xd],cl
  424d3c:	shr    DWORD PTR [edi+0x7b],1
  424d3f:	das    
  424d40:	test   dh,dl
  424d42:	add    BYTE PTR [esi-0x4e],ch
  424d45:	sahf   
  424d46:	add    edi,ebx
  424d48:	test   DWORD PTR [esi+0x4c],esi
  424d4b:	add    ah,ch
  424d4d:	or     bh,BYTE PTR [ecx]
  424d4f:	stc    
  424d50:	cmp    eax,0x382bd0b9
  424d55:	cwde   
  424d56:	rol    DWORD PTR [eax],1
  424d58:	xchg   esp,eax
  424d59:	pop    edi
  424d5a:	outs   dx,BYTE PTR ds:[esi]
  424d5b:	hlt    
  424d5c:	imul   esi,ebx,0x908e6ea
  424d62:	ret    0xa249
  424d65:	and    DWORD PTR [eax],eax
  424d67:	popa   
  424d68:	loopne 0x424d10
  424d6a:	dec    eax
  424d6b:	and    al,BYTE PTR [eax]
  424d6d:	jl     0x424d2a
  424d6f:	mov    dl,0x6
  424d71:	inc    ebp
  424d72:	fs in  eax,dx
  424d74:	mov    cl,0x1c
  424d76:	imul   DWORD PTR [eax]
  424d78:	mov    eax,0xb763081c
  424d7e:	dec    edx
  424d7f:	sub    ecx,esi
  424d81:	lock leave 
  424d83:	(bad)  
  424d84:	cwde   
  424d85:	loope  0x424d87
  424d87:	sbb    DWORD PTR [ebp-0x25e7b129],ecx
  424d8d:	xchg   ebp,eax
  424d8e:	add    DWORD PTR [eax],eax
  424d90:	(bad)  
  424d91:	mov    esi,0xb7a062f0
  424d96:	rol    BYTE PTR [edi],1
  424d98:	pop    es
  424d99:	leave  
  424d9a:	scas   al,BYTE PTR es:[edi]
  424d9b:	call   0xab8264b2
  424da0:	fcomp  DWORD PTR [eax+0x6c710a]
  424da6:	jmp    0x95198cf9
  424dab:	jbe    0x424dd8
  424dad:	ins    DWORD PTR es:[edi],dx
  424dae:	add    BYTE PTR [ebx+0x5f3c8326],dl
  424db4:	fild   QWORD PTR [eax+eax*1]
  424db8:	inc    ecx
  424db9:	into   
  424dba:	test   DWORD PTR [eax],ecx
  424dbc:	fisttp DWORD PTR [ecx]
  424dbe:	call   0x9455:0x921d0030
  424dc5:	push   esp
  424dc6:	or     al,0x20
  424dc8:	inc    ebx
  424dc9:	cmp    bl,ch
  424dcb:	scas   al,BYTE PTR es:[edi]
  424dcc:	pop    es
  424dcd:	inc    esp
  424dce:	call   0xe372c6a4
  424dd3:	scas   eax,DWORD PTR es:[edi]
  424dd4:	jne    0x424d8d
  424dd6:	add    BYTE PTR [ecx-0x74c2f1b2],bl
  424ddc:	nop
  424ddd:	or     edx,DWORD PTR [edi+0x0]
  424de0:	inc    ebx
  424de1:	sub    eax,0x29b6f99b
  424de6:	dec    ebp
  424de7:	js     0x424de1
  424de9:	jmp    0x424deb
  424deb:	add    ah,0xbb
  424dee:	jge    0x424e34
  424df0:	inc    ebp
  424df1:	mov    edx,ss
  424df3:	add    BYTE PTR [ecx+eiz*1-0x32],ah
  424df7:	inc    eax
  424df8:	inc    BYTE PTR [ecx]
  424dfa:	push   0xffffffc0
  424dfc:	add    BYTE PTR [ebx],ah
  424dfe:	sahf   
  424dff:	push   ecx
  424e00:	mov    cl,0x11
  424e02:	dec    esi
  424e03:	pop    ebp
  424e04:	cmp    BYTE PTR [eax],al
  424e06:	call   0x78ab:0x2c7591c5
  424e0d:	sub    eax,0x1f3fe500
  424e12:	out    0x67,al
  424e14:	in     al,0xf3
  424e16:	and    DWORD PTR [edi],eax
  424e18:	ror    DWORD PTR ds:0x7b0940,cl
  424e1e:	mov    al,ds:0x1c90544b
  424e23:	and    eax,edx
  424e25:	sub    eax,0x93dc465e
  424e2a:	add    ah,ah
  424e2c:	jg     0x424dd1
  424e2e:	outs   dx,BYTE PTR ds:[esi]
  424e2f:	repnz and eax,0xc03bf87b
  424e35:	pop    eax
  424e36:	add    BYTE PTR [esi],bl
  424e38:	mov    edx,0x8c238d57
  424e3d:	out    dx,eax
  424e3e:	add    cl,BYTE PTR [ebx-0x4380d102]
  424e44:	jae    0x424e2e
  424e46:	add    BYTE PTR [edi-0x4f82fca5],bh
  424e4c:	add    al,0x40
  424e4e:	mov    eax,0x9a3ee077
  424e53:	aaa    
  424e54:	push   ss
  424e55:	das    
  424e56:	jg     0x424de1
  424e58:	add    DWORD PTR [esi+0x65838881],ebx
  424e5e:	jo     0x424e60
  424e60:	and    BYTE PTR [ecx],al
  424e62:	loope  0x424e51
  424e64:	retf   
  424e65:	jns    0x424eb0
  424e67:	js     0x424ed0
  424e69:	aam    0xcc
  424e6b:	pop    ebp
  424e6c:	pop    es
  424e6d:	and    DWORD PTR [ecx+eax*1-0x31],ecx
  424e71:	imul   eax,eax,0xcddf3a6c
  424e77:	add    DWORD PTR [ebx+0x48],edi
  424e7a:	add    al,0x38
  424e7c:	xor    BYTE PTR [ebx-0x4c3b1791],bh
  424e82:	add    BYTE PTR [ebp-0x6bc18726],bh
  424e88:	cmp    al,0x57
  424e8a:	mov    BYTE PTR [eax],dh
  424e8c:	pop    es
  424e8d:	pop    ss
  424e8e:	xchg   edx,eax
  424e8f:	ret    0x2a1a
  424e92:	or     DWORD PTR ds:0x8fe49126,esp
  424e98:	add    BYTE PTR [eax+0x3693c84c],ah
  424e9e:	pop    ss
  424e9f:	add    BYTE PTR [eax+0x13efc540],cl
  424ea5:	jl     0x424ee9
  424ea7:	arpl   WORD PTR ds:0xc0fb3c55,bx
  424ead:	sbb    BYTE PTR [edi+eiz*8],ah
  424eb0:	test   eax,0xee601d4
  424eb5:	add    bl,dl
  424eb7:	ss mov edx,0x2a15c9ef
  424ebd:	fstp   QWORD PTR [esi]
  424ebf:	jmp    0x2ad:0x12cb2214
  424ec6:	jns    0x424e59
  424ec8:	pop    esi
  424ec9:	shr    BYTE PTR [esi],0x2c
  424ecc:	sahf   
  424ecd:	add    DWORD PTR [edi+0x1f56e9aa],esi
  424ed3:	xchg   esi,eax
  424ed4:	mov    ecx,0x5474e0
  424ed9:	and    BYTE PTR [ebp-0x4d01bbed],0xc2
  424ee0:	dec    eax
  424ee1:	add    bh,dl
  424ee3:	push   edi
  424ee4:	and    eax,0x9af37d1e
  424ee9:	stos   BYTE PTR es:[edi],al
  424eea:	add    BYTE PTR [edx+0x146b20f4],ah
  424ef0:	popa   
  424ef1:	adc    DWORD PTR [eax+0x29be8d00],esi
  424ef7:	cmp    DWORD PTR [ecx],esp
  424ef9:	mov    bl,0x16
  424efb:	add    al,0x2
  424efd:	scas   al,BYTE PTR es:[edi]
  424efe:	xchg   BYTE PTR [ebp-0x25],bh
  424f01:	pop    esp
  424f02:	jle    0x424f79
  424f04:	sbb    BYTE PTR [ebp-0x6a5fe79f],ch
  424f0a:	xchg   ebp,eax
  424f0b:	jns    0x424f0d
  424f0d:	in     eax,0xaf
  424f0f:	dec    edi
  424f10:	lahf   
  424f11:	(bad)  
  424f12:	mov    esp,0xc21de3ca
  424f17:	mov    al,0x65
  424f19:	xor    BYTE PTR [esi-0x3172462e],0x8e
  424f20:	add    al,0x2a
  424f22:	or     edi,ebx
  424f24:	mov    edx,0xade892
  424f29:	lods   eax,DWORD PTR ds:[esi]
  424f2a:	daa    
  424f2b:	popa   
  424f2c:	hlt    
  424f2d:	pop    ebp
  424f2e:	jle    0x424fad
  424f30:	add    ebp,DWORD PTR [ebx+0x4b]
  424f33:	sbb    esp,DWORD PTR [ebx]
  424f35:	mov    eax,0x848980f9
  424f3a:	dec    esp
  424f3b:	or     edx,DWORD PTR [ecx]
  424f3d:	pop    edi
  424f3e:	mul    BYTE PTR [esi-0x7e]
  424f41:	push   edx
  424f42:	push   cs
  424f43:	add    ch,al
  424f45:	add    BYTE PTR [ebx+0xd1c07c6],dh
  424f4b:	pop    ss
  424f4c:	shr    DWORD PTR [eax],0x48
  424f4f:	add    BYTE PTR [edi],bh
  424f51:	test   DWORD PTR [edi-0x39],esi
  424f54:	mov    esp,0x11420059
  424f59:	mov    bl,0x68
  424f5b:	enter  0x13c2,0x15
  424f5f:	pop    es
  424f60:	mov    ebp,?
  424f62:	das    
  424f63:	outs   dx,DWORD PTR ds:[esi]
  424f64:	mov    edx,0xfd8ebce0
  424f69:	push   edi
  424f6a:	daa    
  424f6b:	adc    BYTE PTR [eax+edx*8-0x53],ah
  424f6f:	jbe    0x424f07
  424f71:	add    BYTE PTR [ebx-0x6c],al
  424f74:	ret    0xcfd6
  424f77:	mov    ebx,0x2e00612b
  424f7c:	pop    esp
  424f7d:	push   esi
  424f7e:	jne    0x424f85
  424f80:	xchg   BYTE PTR [ebx],cl
  424f82:	sahf   
  424f83:	adc    eax,eax
  424f85:	push   0x17010135
  424f8a:	fdiv   DWORD PTR [edi]
  424f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f8d:	in     eax,0x69
  424f8f:	aam    0x2b
  424f91:	nop
  424f92:	push   cs
  424f93:	jns    0x424fa8
  424f95:	fbld   TBYTE PTR [eax+eax*8-0x2c6102a8]
  424f9c:	add    ah,al
  424f9e:	cbw    
  424fa0:	ins    BYTE PTR es:[edi],dx
  424fa1:	push   cs
  424fa2:	mov    edi,0xa013c435
  424fa7:	retf   
  424fa8:	push   ds
  424fa9:	repz xchg esi,eax
  424fab:	mov    es,WORD PTR [eax]
  424fad:	inc    ecx
  424fae:	lea    eax,[edx-0x6aa161fe]
  424fb4:	jo     0x424fb6
  424fb6:	dec    edi
  424fb7:	pop    eax
  424fb8:	popa   
  424fb9:	aam    0x7a
  424fbb:	mov    ch,0x54
  424fbd:	call   0xc415:0xd8eb0d01
  424fc4:	add    eax,DWORD PTR [edi+0x3fb7d4]
  424fca:	cmp    esp,DWORD PTR [edi]
  424fcc:	inc    esp
  424fcd:	sub    edx,ebx
  424fcf:	add    al,0x30
  424fd1:	cmp    eax,0x1748a900
  424fd6:	sti    
  424fd7:	out    dx,al
  424fd8:	add    al,BYTE PTR [edi]
  424fda:	mov    bl,0x0
  424fdc:	ss xor ebx,ecx
  424fdf:	call   0xb13b:0xc8c3ceb
  424fe6:	mov    BYTE PTR [eax+0x1d6ed347],0x96
  424fed:	ret    0xd0
  424ff0:	push   es
  424ff1:	lods   eax,DWORD PTR ds:[esi]
  424ff2:	(bad)  
  424ff4:	ds mov esp,0x8600d7ac
  424ffa:	in     al,0xb
  424ffc:	pusha  
  424ffd:	push   cs
  424ffe:	aam    0x26
  425000:	popf   
  425001:	add    DWORD PTR ds:0x2956f547,edi
  425007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425008:	push   edx
  425009:	cld    
  42500a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42500b:	inc    BYTE PTR [eax]
  42500d:	mov    al,0xf1
  42500f:	add    esp,DWORD PTR [edx]
  425011:	mov    ds:0x7679e357,al
  425016:	inc    esp
  425017:	add    BYTE PTR [edi+0x51],bl
  42501a:	cmp    al,0xa5
  42501c:	out    0xd,al
  42501e:	adc    ebx,edi
  425020:	sbb    eax,0x802a4ff3
  425025:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425027:	pusha  
  425028:	jge    0x424fb2
  42502a:	or     al,0x0
  42502c:	cmc    
  42502d:	imul   eax,eax,0xffffffff
  425030:	(bad)  
  425031:	out    dx,al
  425032:	or     esi,DWORD PTR [edi+0x0]
  425035:	jns    0x425078
  425037:	les    ecx,FWORD PTR [ebx+0x56]
  42503a:	push   ebp
  42503b:	ror    DWORD PTR [edx],cl
  42503d:	call   0xf6850c3
  425042:	aad    0xa4
  425044:	jl     0x424ff0
  425046:	lahf   
  425047:	cmp    eax,0xb8031b00
  42504c:	out    0x42,eax
  42504e:	sti    
  42504f:	(bad)  
  425050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425051:	add    BYTE PTR [ebx],ch
  425053:	dec    esi
  425054:	rol    dl,cl
  425056:	jo     0x425038
  425058:	jb     0x42501d
  42505a:	in     al,0x6c
  42505c:	pop    es
  42505d:	add    ah,BYTE PTR [eax+ebx*2]
  425060:	jle    0x42507c
  425062:	loopne 0x424ffc
  425064:	pushf  
  425065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425066:	loope  0x425051
  425068:	out    0xe8,eax
  42506a:	icebp  
  42506b:	imul   edi,DWORD PTR [bx+si],0xffffff82
  42506f:	pop    ss
  425070:	xchg   DWORD PTR [ebx-0x24],esi
  425073:	sub    BYTE PTR [esi+ecx*4-0x20],bh
  425077:	loope  0x425050
  425079:	mov    al,BYTE PTR [ebp+0x7dd001fd]
  42507f:	cmp    BYTE PTR [eax-0xa840f66],0x2b
  425086:	aam    0xdf
  425088:	out    dx,eax
  425089:	add    dh,ah
  42508b:	sbb    bl,BYTE PTR ds:0xc00e8a13
  425091:	add    al,BYTE PTR [eax]
  425093:	cdq    
  425094:	bswap  ecx
  425096:	sti    
  425097:	jae    0x42502b
  425099:	imul   ecx,DWORD PTR [edi+0x31005d78],0x5ff65030
  4250a3:	shl    DWORD PTR [ecx],1
  4250a5:	lock js 0x425046
  4250a8:	add    BYTE PTR [ebp-0x2858475],ah
  4250ae:	in     eax,dx
  4250af:	js     0x425062
  4250b1:	jbe    0x42510a
  4250b3:	add    BYTE PTR [esi+0x6cf95163],bh
  4250b9:	rcr    esi,1
  4250bb:	int    0x0
  4250bd:	and    al,0x84
  4250bf:	jno    0x425111
  4250c1:	jne    0x42504f
  4250c3:	dec    esi
  4250c4:	(bad)  
  4250c5:	jle    0x4250c8
  4250c7:	rcl    BYTE PTR cs:[esi],1
  4250ca:	hlt    
  4250cb:	add    BYTE PTR [ebx],bl
  4250cd:	fisttp DWORD PTR [eax+0x76]
  4250d0:	dec    edi
  4250d1:	jno    0x4250d3
  4250d3:	int    0x63
  4250d5:	cmp    dh,BYTE PTR [ebx+0x2f]
  4250d8:	pusha  
  4250d9:	push   es
  4250da:	xchg   ecx,eax
  4250db:	add    BYTE PTR [edx-0x1490f74e],ch
  4250e1:	idiv   BYTE PTR ss:[esi-0x10]
  4250e5:	dec    edi
  4250e6:	mov    al,ds:0x1f07e4
  4250eb:	mov    ebp,0x1a10750d
  4250f0:	dec    ebp
  4250f1:	jg     0x42510a
  4250f3:	adc    esi,DWORD PTR [eax]
  4250f5:	into   
  4250f6:	push   0xffffffc0
  4250f8:	add    BYTE PTR [esi-0x8],ah
  4250fb:	sahf   
  4250fc:	and    BYTE PTR [edi-0x7e],bl
  4250ff:	add    BYTE PTR [edx],dh
  425101:	(bad)  
  425102:	nop
  425103:	jno    0x425163
  425105:	cld    
  425106:	add    DWORD PTR [edi],eax
  425108:	add    BYTE PTR [ebp-0x53],ah
  42510b:	jg     0x4250e5
  42510d:	cmp    esp,DWORD PTR [ecx-0x5fffb0b]
  425113:	dec    ecx
  425114:	sub    al,0x4e
  425116:	pop    esi
  425117:	sub    eax,0x20488833
  42511c:	into   
  42511d:	add    DWORD PTR [esi+eax*1],ebx
  425120:	push   edi
  425121:	cmp    eax,0x42d0dc3f
  425126:	rol    BYTE PTR [eax],1
  425128:	ins    DWORD PTR es:[edi],dx
  425129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42512a:	xor    DWORD PTR [ebp+0x52],esp
  42512d:	mov    ds:0x900efae,eax
  425132:	cmc    
  425133:	ret    
  425134:	jmp    0x42517c
  425136:	fimul  WORD PTR [edi+0x2c]
  425139:	add    BYTE PTR [edx],cl
  42513b:	stos   DWORD PTR es:[edi],eax
  42513c:	enter  0x164,0x5e
  425140:	test   eax,0xa88300c0
  425145:	mov    ch,0x21
  425147:	inc    ebx
  425148:	jg     0x4251a4
  42514a:	pop    ebp
  42514b:	add    cl,cl
  42514d:	iret   
  42514e:	sbb    dh,ah
  425150:	mov    eax,ds:0x4f0adbe2
  425155:	push   0xffffffbd
  425157:	inc    esp
  425158:	jns    0x42515a
  42515a:	mov    al,0x50
  42515c:	out    dx,al
  42515d:	pop    DWORD PTR [ecx+esi*1+0xe00ab7b]
  425164:	pop    edx
  425165:	outs   dx,BYTE PTR ds:[esi]
  425166:	cli    
  425167:	push   ss
  425168:	xchg   edi,eax
  425169:	pop    edi
  42516a:	sub    ebp,DWORD PTR ds:0xadd06755
  425170:	add    BYTE PTR [edx],bl
  425172:	push   eax
  425173:	xchg   DWORD PTR [edi],edi
  425175:	imul   edi,DWORD PTR [edx],0x810eb442
  42517b:	push   DWORD PTR ds:0xa3548032
  425181:	mov    bl,0x58
  425183:	inc    ebx
  425184:	out    0x9d,al
  425186:	hlt    
  425187:	mov    DWORD PTR [eax],0xd5675a9e
  42518d:	test   DWORD PTR [ebp+0x65],ebx
  425190:	ins    BYTE PTR es:[edi],dx
  425191:	mov    al,ds:0x5ca092a4
  425196:	rol    DWORD PTR [eax],1
  425198:	sbb    eax,0x4d80d709
  42519d:	mov    WORD PTR [ecx-0x6f],gs
  4251a0:	xor    BYTE PTR [eax+eax*1-0x3b],al
  4251a4:	jnp    0x4251a5
  4251a6:	cs inc eax
  4251a8:	addr16 cmp bh,cl
  4251ab:	loop   0x4251a5
  4251ad:	dec    edx
  4251ae:	mov    ebp,0xd9ada4
  4251b3:	xlat   BYTE PTR ds:[ebx]
  4251b4:	ins    BYTE PTR es:[edi],dx
  4251b5:	nop
  4251b6:	mov    cl,0xda
  4251b8:	sub    BYTE PTR [eax-0x4c],al
  4251bb:	pop    es
  4251bc:	ins    DWORD PTR es:[edi],dx
  4251bd:	test   BYTE PTR [edi+0x6813185d],dh
  4251c3:	sbb    eax,0xd41e36e1
  4251c8:	inc    ecx
  4251c9:	mov    WORD PTR [esi-0x6e140000],ds
  4251cf:	clc    
  4251d0:	inc    ebx
  4251d1:	mov    ecx,0x67c78302
  4251d6:	mov    ch,0xa0
  4251d8:	pop    ecx
  4251d9:	ss dec ecx
  4251db:	add    BYTE PTR es:[eax-0x354fe6f8],bh
  4251e2:	(bad)  
  4251e3:	call   DWORD PTR [edi]
  4251e5:	clc    
  4251e6:	push   cs
  4251e7:	mov    eax,0x51b70000
  4251ec:	cmp    eax,esi
  4251ee:	push   esi
  4251ef:	inc    esi
  4251f0:	and    bh,BYTE PTR [ebx+0x4c]
  4251f3:	cmp    ch,bl
  4251f5:	push   ds
  4251f6:	adc    BYTE PTR [eax+0x0],al
  4251f9:	cwde   
  4251fa:	sbb    ch,BYTE PTR [edx+0xa6629]
  425200:	push   0x1677e343
  425205:	cmp    al,BYTE PTR [ebx+edx*8]
  425208:	out    0xd4,eax
  42520a:	pop    esi
  42520b:	add    BYTE PTR fs:[ecx+0x60],al
  42520f:	out    dx,eax
  425210:	xor    cl,dh
  425212:	add    dl,BYTE PTR [ecx+0x52610431]
  425218:	mov    ebp,DWORD PTR [ebx+eiz*2]
  42521b:	call   0xaefe53cd
  425220:	cmp    al,0x24
  425222:	pop    ebp
  425223:	ret    
  425224:	call   0x3db48d8
  425229:	pop    es
  42522a:	enter  0x3d4b,0x6d
  42522e:	lods   eax,DWORD PTR ds:[esi]
  42522f:	inc    eax
  425230:	mov    cl,BYTE PTR [edi+0x42]
  425233:	mov    BYTE PTR [edi],ah
  425235:	stc    
  425236:	loope  0x425278
  425238:	lods   eax,DWORD PTR ds:[esi]
  425239:	pop    ebx
  42523a:	mov    dh,0x7
  42523c:	pop    esp
  42523d:	xlat   BYTE PTR ds:[ebx]
  42523e:	and    BYTE PTR [edi+ecx*8-0x68],al
  425242:	add    dl,cl
  425244:	mov    esi,0x277d7599
  425249:	lods   eax,DWORD PTR ds:[esi]
  42524a:	ret    0xd3e0
  42524d:	in     al,dx
  42524e:	xchg   ebx,eax
  42524f:	xchg   esi,eax
  425250:	jle    0x42525d
  425252:	dec    edi
  425253:	js     0x425259
  425255:	add    BYTE PTR [eax],dl
  425257:	call   0x974e:0x44c5a500
  42525e:	add    BYTE PTR [ebx],dh
  425260:	dec    ebx
  425261:	xchg   edx,eax
  425262:	test   eax,0xe6a6801c
  425267:	add    BYTE PTR [ecx+0x7],al
  42526a:	in     eax,dx
  42526b:	fmul   DWORD PTR [eax+edi*4+0x1d]
  42526f:	push   esi
  425270:	hlt    
  425271:	push   ds
  425272:	add    BYTE PTR [edi+0x5],cl
  425275:	fisubr WORD PTR [edx+eax*4+0x7a38cb0]
  42527c:	adc    BYTE PTR [ebx+0x50ed261a],0xca
  425283:	xchg   ch,dl
  425285:	bound  ebx,QWORD PTR [edi]
  425287:	mov    eax,0xa9819bf6
  42528c:	mov    esp,ebp
  42528e:	or     cl,BYTE PTR [esi]
  425290:	lock loop 0x4252bb
  425293:	pop    ds
  425294:	in     al,0xfe
  425296:	add    BYTE PTR fs:[ebp+0x2baf045],al
  42529d:	xchg   ebx,eax
  42529e:	dec    esi
  42529f:	inc    edi
  4252a0:	sub    BYTE PTR [ebp+0x5ddd2d],0xa5
  4252a7:	push   ecx
  4252a8:	test   al,0xd
  4252aa:	xchg   BYTE PTR [eax],bh
  4252ac:	pushf  
  4252ad:	cs add ah,bl
  4252b0:	addr16 pushw 0x8e29
  4252b5:	mov    bl,0x24
  4252b7:	add    BYTE PTR [ebx-0x4b],bl
  4252ba:	lahf   
  4252bb:	inc    edi
  4252bc:	xor    al,0xb0
  4252be:	imul   ebx,DWORD PTR [ecx+0x27d51b08],0xffffffe5
  4252c5:	add    bh,ah
  4252c7:	fnsave [edx]
  4252c9:	xchg   BYTE PTR [ebp+0x45],bl
  4252cc:	adc    BYTE PTR ds:0x5400e9e8,bh
  4252d2:	out    dx,eax
  4252d3:	xor    DWORD PTR [eax+0x13fde2cb],eax
  4252d9:	add    eax,DWORD PTR [ecx+eiz*4+0x0]
  4252dd:	mov    edx,0x9fdfb030
  4252e2:	xchg   esi,eax
  4252e3:	add    DWORD PTR ds:0xaf141e22,ebx
  4252e9:	repz xchg esp,eax
  4252eb:	cmp    al,0x0
  4252ed:	add    ch,bh
  4252ef:	adc    BYTE PTR [edx-0x38a3e4d4],cl
  4252f5:	add    DWORD PTR [ebx-0x4636cf16],esp
  4252fb:	repz or dh,al
  4252fe:	shr    DWORD PTR [ecx],0x1
  425301:	push   ecx
  425302:	fstp   QWORD PTR ds:0xbcebf5b2
  425308:	int3   
  425309:	lods   al,BYTE PTR ds:[esi]
  42530a:	test   BYTE PTR [eax],0xee
  42530d:	xor    edi,DWORD PTR [edx+eax*4+0x2d]
  425311:	inc    edi
  425312:	lods   eax,DWORD PTR ds:[esi]
  425313:	and    ebx,DWORD PTR [edi]
  425315:	mov    al,0x99
  425317:	inc    edx
  425318:	cli    
  425319:	add    BYTE PTR [edi+esi*1-0xb],dh
  42531d:	jle    0x4252b9
  42531f:	outs   dx,BYTE PTR ds:[esi]
  425320:	add    bl,BYTE PTR [esi]
  425322:	arpl   WORD PTR [ecx],bx
  425324:	rol    DWORD PTR [eax-0x7a6da6de],cl
  42532a:	xchg   edi,edx
  42532c:	add    edi,DWORD PTR [eax]
  42532e:	add    edi,ebp
  425330:	jbe    0x4252dc
  425332:	mov    ebx,0x1157a5d8
  425337:	add    cl,ch
  425339:	xor    al,0xb9
  42533b:	push   cs
  42533c:	cdq    
  42533d:	mov    al,0x61
  42533f:	pusha  
  425340:	cpuid  
  425342:	dec    ebx
  425343:	(bad)  
  425344:	mov    ebp,0x8b032d00
  425349:	add    al,0xf1
  42534b:	push   cs
  42534c:	push   ebx
  42534d:	shl    DWORD PTR [esi-0x77],1
  425350:	mov    al,ds:0x5e225156
  425355:	verw   WORD PTR [ecx+0x44b9c49e]
  42535c:	js     0x425337
  42535e:	popa   
  42535f:	add    BYTE PTR [eax],ch
  425361:	lock shl BYTE PTR [ebp+0x5e6877ae],1
  425368:	push   cs
  425369:	pop    esp
  42536a:	out    dx,eax
  42536b:	xor    eax,0xa0bd8e3c
  425370:	add    ebp,0x33
  425373:	cmp    BYTE PTR [edi],0x2
  425376:	std    
  425377:	push   ds
  425378:	mov    ebx,0xc0226b13
  42537d:	stos   DWORD PTR es:[edi],eax
  42537e:	xchg   esp,eax
  42537f:	mov    bl,0x0
  425381:	sbb    eax,0x40e9513e
  425386:	sub    eax,0x7500762c
  42538b:	dec    ebp
  42538c:	jnp    0x4253e9
  42538e:	pop    eax
  42538f:	gs dec edi
  425391:	jmp    0x5269:0x6cb4ae07
  425398:	stos   DWORD PTR es:[edi],eax
  425399:	xchg   ebp,edi
  42539b:	inc    ebx
  42539c:	pusha  
  42539d:	sbb    BYTE PTR [ebp-0x1ee316f4],bh
  4253a3:	aaa    
  4253a4:	xor    eax,DWORD PTR [eax-0x6]
  4253a7:	dec    ebx
  4253a8:	neg    DWORD PTR [ebx]
  4253aa:	pushf  
  4253ab:	xchg   esp,eax
  4253ac:	add    esp,esi
  4253ae:	sar    BYTE PTR [edx],0x82
  4253b1:	push   ebp
  4253b2:	push   eax
  4253b3:	mov    al,ch
  4253b5:	adc    eax,0xc56f090f
  4253ba:	int3   
  4253bb:	popa   
  4253bc:	cmp    BYTE PTR [esi+0x23],0x1
  4253c0:	pusha  
  4253c1:	add    al,0x3
  4253c3:	fsubr  DWORD PTR [ebx+ebx*1-0x37d1f7bb]
  4253ca:	mov    dh,0xcc
  4253cc:	inc    ecx
  4253cd:	add    BYTE PTR [eax+0x3dbeb2a4],al
  4253d3:	add    al,0xb3
  4253d5:	rol    DWORD PTR [eax],1
  4253d7:	(bad)  
  4253d8:	jb     0x425365
  4253da:	out    0xf4,al
  4253dc:	das    
  4253dd:	sbb    eax,0xad48b714
  4253e2:	cs xchg edx,eax
  4253e4:	add    dl,BYTE PTR ds:0xa674f02c
  4253ea:	mov    ebx,0xb062b287
  4253ef:	les    ebp,FWORD PTR [ebx-0x1d]
  4253f2:	dec    ebx
  4253f3:	adc    dh,BYTE PTR [ebp+0x27]
  4253f6:	call   0xa7efcafb
  4253fb:	pop    edx
  4253fc:	mov    al,ds:0xda3b000e
  425401:	cli    
  425402:	sbb    al,0x12
  425404:	je     0x4253fb
  425406:	test   eax,0x46725c00
  42540b:	gs push es
  42540d:	mov    dh,0xbf
  42540f:	inc    edx
  425410:	push   ds
  425411:	jge    0x4253e3
  425413:	or     eax,0xfe947681
  425418:	out    0x5c,eax
  42541a:	in     al,0xa
  42541c:	dec    ebx
  42541d:	add    BYTE PTR [ecx+0x5e819928],dh
  425423:	(bad)  
  425424:	clc    
  425425:	push   esi
  425426:	add    BYTE PTR [edi+0xc3165e8],ah
  42542c:	jbe    0x4253b6
  42542e:	arpl   WORD PTR [esi],di
  425430:	repz cmc 
  425432:	push   es
  425433:	xlat   BYTE PTR ds:[ebx]
  425434:	ret    
  425435:	test   DWORD PTR [edi+0x7c],ecx
  425438:	clc    
  425439:	sub    BYTE PTR [eax],al
  42543b:	cli    
  42543c:	sub    eax,0x93cbc78a
  425441:	mov    ebp,0xb7409c0
  425446:	sar    DWORD PTR [eax+eax*4-0x17c4208a],0xdd
  42544e:	push   ds
  42544f:	pusha  
  425450:	fcomp  DWORD PTR [ebp+0x40]
  425453:	xchg   ecx,eax
  425454:	adc    dl,BYTE PTR ds:0x5fa95b
  42545a:	or     eax,0xee5682d
  42545f:	mov    dl,0x81
  425461:	addr16 dec edi
  425463:	test   BYTE PTR [eax+0x3300eaad],ah
  425469:	ss repnz and edx,esi
  42546d:	imul   esp,DWORD PTR [eax],0x16121eb0
  425473:	cmp    eax,0x2751a440
  425478:	sub    ebx,DWORD PTR [ebx-0x78]
  42547b:	add    BYTE PTR [ecx],al
  42547d:	int3   
  42547e:	dec    edx
  42547f:	xchg   ebp,eax
  425480:	xchg   DWORD PTR [ecx-0x7b],eax
  425483:	nop
  425484:	add    BYTE PTR [ecx-0x28f5e365],al
  42548a:	aam    0x3b
  42548c:	or     eax,0x5e347a08
  425491:	mov    al,0x1
  425493:	pop    edx
  425494:	add    al,BYTE PTR [ecx-0x712b9537]
  42549a:	aam    0x0
  42549c:	or     DWORD PTR [eax+ebx*8-0x72d59b71],ebx
  4254a3:	add    DWORD PTR [ebp+ebx*1+0x3f],ecx
  4254a7:	sbb    eax,0xd60e371f
  4254ac:	xor    al,0xa3
  4254ae:	nop
  4254af:	(bad)  
  4254b0:	lods   al,BYTE PTR ds:[esi]
  4254b1:	mov    al,0xfb
  4254b3:	jg     0x425515
  4254b5:	jbe    0x425511
  4254b7:	add    DWORD PTR [ebx+0x12],ebp
  4254ba:	test   BYTE PTR es:[edi+0x63d961a9],ch
  4254c1:	jp     0x425443
  4254c3:	lods   eax,DWORD PTR ds:[esi]
  4254c4:	jo     0x425525
  4254c6:	inc    esi
  4254c7:	or     ecx,DWORD PTR [ebx+0x57]
  4254ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254cb:	dec    eax
  4254cc:	je     0x42547b
  4254ce:	xor    DWORD PTR [ebx],0x65
  4254d1:	(bad)
  4254d5:	ja     0x42549a
  4254d7:	pop    es
  4254d8:	xor    BYTE PTR [eax],bl
  4254da:	mov    esp,DWORD PTR [esi]
  4254dc:	lahf   
  4254dd:	and    BYTE PTR [eax],ch
  4254df:	xchg   DWORD PTR [esi+0x1bff0084],ebp
  4254e5:	(bad)  
  4254e6:	jg     0x425523
  4254e8:	sub    DWORD PTR [esi],0x7e
  4254eb:	add    BYTE PTR [eax],ah
  4254ed:	xor    BYTE PTR [ebx],cl
  4254ef:	sbb    BYTE PTR [ebx-0x22],dh
  4254f2:	sbb    eax,0xb959009d
  4254f7:	mov    cl,0x7
  4254f9:	add    ah,ah
  4254fb:	out    dx,eax
  4254fc:	and    al,0x1
  4254fe:	and    DWORD PTR [edx+edi*1-0x20],esi
  425502:	xor    DWORD PTR [edi+0x4ffbec5f],ecx
  425508:	jne    0x425522
  42550a:	add    BYTE PTR [esi-0x3e],cl
  42550d:	xor    eax,DWORD PTR [ecx+0x27d04996]
  425513:	(bad)  
  425514:	push   ds
  425515:	add    esi,eax
  425517:	or     bl,dh
  425519:	pop    esp
  42551a:	iret   
  42551b:	and    eax,esi
  42551d:	sahf   
  42551e:	mov    edi,0xc8cff758
  425523:	mov    al,0xe1
  425525:	add    al,0x0
  425527:	sbb    DWORD PTR [eax+edx*1],ebp
  42552a:	fld    TBYTE PTR [edx]
  42552c:	jb     0x425513
  42552e:	mov    ch,0x0
  425530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425531:	jno    0xcaea988c
  425537:	into   
  425538:	add    dh,dl
  42553a:	mov    ?,WORD PTR [ebx]
  42553c:	mov    DWORD PTR [edi+0x75],esp
  42553f:	or     DWORD PTR [ebp+0x1d],ebp
  425542:	mov    ch,0x6
  425544:	in     al,0x80
  425546:	popa   
  425547:	push   ebp
  425548:	je     0x42556b
  42554a:	repnz mov edx,0x2e5c3501
  425550:	jo     0x42556e
  425552:	pop    edi
  425553:	jl     0x4255c5
  425555:	mov    dh,0x77
  425557:	cld    
  425558:	inc    edx
  425559:	add    BYTE PTR [edx+0x69f59ee8],dh
  42555f:	sub    dl,BYTE PTR [edi+0x5]
  425562:	add    BYTE PTR [ecx+ebp*8],bl
  425565:	pop    eax
  425566:	inc    esi
  425567:	adc    al,0xa4
  425569:	add    ecx,edi
  42556b:	add    BYTE PTR [ecx+0x1387af6e],ch
  425571:	out    0x98,eax
  425573:	mov    ebx,0x3d442400
  425578:	push   cs
  425579:	out    0xe1,al
  42557b:	cs aam 0x0
  42557e:	fisubr WORD PTR [eax+0x5dae39c0]
  425584:	outs   dx,DWORD PTR ds:[esi]
  425585:	jl     0x42558a
  425587:	popa   
  425588:	jbe    0x425548
  42558a:	xlat   BYTE PTR ds:[ebx]
  42558b:	or     al,BYTE PTR [ecx-0x45]
  42558e:	dec    ebx
  42558f:	sbb    BYTE PTR [esi+0x7a],0x4e
  425593:	add    BYTE PTR [ecx],cl
  425595:	push   ebx
  425596:	js     0x4255fd
  425598:	push   0x730a6ff
  42559d:	retf   0x9b85
  4255a0:	add    esp,DWORD PTR [ecx+0x72972c90]
  4255a6:	hlt    
  4255a7:	jae    0x42552c
  4255a9:	add    BYTE PTR ds:0x58947091,bl
  4255af:	out    0x25,eax
  4255b1:	addps  xmm1,XMMWORD PTR [ebx]
  4255b4:	push   ecx
  4255b5:	pop    es
  4255b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255b7:	cmp    eax,0x5f202296
  4255bc:	div    BYTE PTR [ecx+0x1b560539]
  4255c2:	xor    al,0x16
  4255c4:	sub    eax,0xc5ad00aa
  4255c9:	fisubr DWORD PTR [edi+eiz*4]
  4255cc:	cld    
  4255cd:	add    DWORD PTR ds:0x67c0f2b9,esi
  4255d3:	sbb    al,0x66
  4255d5:	clc    
  4255d6:	mov    ebp,0x3ae6dd
  4255db:	popa   
  4255dc:	or     ah,BYTE PTR [ebx-0x1e]
  4255df:	jne    0x425585
  4255e1:	call   0x6500:0xcc823893
  4255e8:	fbstp  TBYTE PTR [edi+0x69d8fe87]
  4255ee:	jno    0x4255a0
  4255f0:	add    DWORD PTR [eax+0x39],eax
  4255f3:	int    0xbf
  4255f5:	add    eax,DWORD PTR [ecx-0x70bc17f9]
  4255fb:	sbb    eax,0x8d0fae
  425600:	xor    al,0x13
  425602:	sahf   
  425603:	push   cs
  425604:	imul   esp,edx,0x3
  425607:	adc    BYTE PTR [ecx+ebx*2-0x66],0x88
  42560c:	js     0x4255ef
  42560e:	and    al,0xd
  425610:	loopne 0x42565b
  425612:	mov    ds:0x375b5709,al
  425617:	ds push ebp
  425619:	add    BYTE PTR [ebp-0x2c815c84],ch
  42561f:	push   eax
  425620:	adc    eax,0x9400d4d0
  425625:	push   ebx
  425626:	sub    esp,esp
  425628:	xchg   edi,eax
  425629:	(bad)  
  42562a:	rcl    BYTE PTR [edi+eax*1],cl
  42562d:	jmp    0x425628
  42562f:	push   0xffffffde
  425631:	cmp    eax,0xdbc09580
  425636:	arpl   WORD PTR [edi],sp
  425638:	fild   WORD PTR [edx-0x727eff60]
  42563e:	cs push ss
  425640:	add    BYTE PTR [ecx],bl
  425642:	mov    ebp,0xcb4e5ad0
  425647:	adc    al,0xb3
  425649:	push   cs
  42564a:	rcl    ch,0xfd
  42564d:	data16 test BYTE PTR [eax],0xe9
  425651:	jl     0x42562a
  425653:	sub    DWORD PTR [esi],0xabe300b4
  425659:	cmp    al,0x79
  42565b:	push   es
  42565c:	aaa    
  42565d:	inc    ecx
  42565e:	sahf   
  42565f:	or     bl,BYTE PTR [ebx]
  425661:	(bad)  [bx+di-0x47]
  425665:	sub    al,0x27
  425667:	setno  cl
  42566a:	pusha  
  42566b:	fwait
  42566c:	mov    ah,0x3a
  42566e:	stos   BYTE PTR es:[edi],al
  42566f:	in     eax,0xa0
  425671:	scas   eax,DWORD PTR es:[edi]
  425672:	(bad)  [esi-0xafc9fb]
  425678:	dec    ebx
  425679:	lock mov DWORD PTR [eax],0xeb1c35
  425680:	call   0x38f:0x9ebbdbc7
  425687:	jp     0x425701
  425689:	idiv   DWORD PTR [esi+edi*2+0x67]
  42568d:	mov    cl,0x3f
  42568f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425690:	stc    
  425691:	test   eax,0xede02c0
  425696:	call   0xabf0:0x80036c6b
  42569d:	sub    DWORD PTR [edi-0x3d],ecx
  4256a0:	add    BYTE PTR [edi-0x33],dh
  4256a3:	xor    dh,dh
  4256a5:	sub    DWORD PTR ds:0xc53eff9d,0x58f10502
  4256af:	inc    ecx
  4256b0:	dec    ebx
  4256b1:	add    DWORD PTR [edi-0x4ebb8da6],ebp
  4256b7:	in     al,0x4d
  4256b9:	gs or  ah,ch
  4256bc:	pop    ss
  4256bd:	jmp    0x4256f6
  4256bf:	int3   
  4256c0:	add    BYTE PTR [ebx],cl
  4256c2:	fwait
  4256c3:	out    dx,al
  4256c4:	push   0xffffffc7
  4256c6:	data16 cmp al,0xd0
  4256c9:	loop   0x425656
  4256cb:	imul   esi,DWORD PTR [eax-0x39ff7b9b],0x5e
  4256d2:	ror    ch,0x29
  4256d5:	lds    edi,FWORD PTR [ebp+0x2b7787d3]
  4256db:	add    BYTE PTR [ebp+0x14],ah
  4256de:	sbb    al,0x56
  4256e0:	test   dh,bh
  4256e2:	je     0x425757
  4256e4:	sbb    eax,0x816c2cce
  4256e9:	lock mov bh,0x48
  4256ec:	pop    es
  4256ed:	add    esp,DWORD PTR [eax-0x5b]
  4256f0:	push   eax
  4256f1:	jo     0x425726
  4256f3:	jne    0x4256b7
  4256f5:	pop    esp
  4256f6:	cmp    eax,0xdedf0100
  4256fb:	ss jg  0x4256cc
  4256fe:	or     edi,DWORD PTR [eax+eax*1+0x0]
  425702:	xchg   BYTE PTR [ebx+0x4e],ch
  425705:	scas   al,BYTE PTR es:[edi]
  425706:	and    cl,ah
  425708:	stos   BYTE PTR es:[edi],al
  425709:	add    al,bh
  42570b:	loopne 0x42571b
  42570d:	pop    ds
  42570e:	sbb    DWORD PTR [edx+0x57],esi
  425711:	mov    ecx,0x38dcd981
  425716:	xor    eax,DWORD PTR [edi]
  425718:	mov    cl,0xee
  42571a:	dec    ebx
  42571b:	imul   esi,DWORD PTR [eax+eiz*4+0xc],0x8
  425720:	fsubr  st,st(4)
  425722:	add    BYTE PTR [ebx],bl
  425724:	sahf   
  425725:	xor    eax,0x33f1c2d1
  42572a:	clc    
  42572b:	push   cs
  42572c:	jg     0x425772
  42572e:	mov    DWORD PTR [ebx],ecx
  425730:	outs   dx,DWORD PTR ds:[esi]
  425731:	or     DWORD PTR [eax-0x6db031f6],esp
  425737:	xchg   DWORD PTR [ebp+ebx*2+0xe],esi
  42573b:	pop    esi
  42573c:	es rcr cl,0x80
  425740:	arpl   WORD PTR [ebx+0x3afc3b36],dx
  425746:	adc    BYTE PTR [ecx+0x1c],ah
  425749:	addr16 pop esp
  42574b:	aas    
  42574c:	lahf   
  42574d:	ror    bh,1
  42574f:	add    BYTE PTR [ebx+esi*8],ch
  425752:	pushw  0xffec
  425755:	xlat   BYTE PTR ds:[ebx]
  425756:	add    ah,ah
  425758:	(bad)  
  425759:	(bad)  
  42575a:	std    
  42575b:	and    DWORD PTR [ebp+0x300067ee],edi
  425761:	ins    BYTE PTR es:[edi],dx
  425762:	fucomp st(2)
  425764:	or     BYTE PTR [ebx+edx*8],ah
  425767:	adc    al,BYTE PTR [ebx]
  425769:	mov    ds:0x692f6a0f,eax
  42576e:	jb     0x425728
  425770:	sub    DWORD PTR [esi+0x2e],0x0
  425774:	cmp    bl,al
  425776:	push   edi
  425777:	pop    ds
  425778:	dec    esp
  425779:	dec    ecx
  42577a:	div    BYTE PTR [edi+0x3e]
  42577d:	pop    ecx
  42577e:	mov    WORD PTR [eax-0x794bff67],fs
  425784:	jno    0x42574f
  425786:	stos   BYTE PTR es:[edi],al
  425787:	push   ecx
  425788:	mov    ch,0x3
  42578a:	add    eax,0xde95edd3
  42578f:	jmp    0x5fab:0xc058a10e
  425796:	lea    ebp,[edi]
  425798:	jne    0x42579f
  42579a:	sbb    eax,0x5a7bfa4
  42579f:	rol    BYTE PTR [eax],0x93
  4257a2:	out    0x69,al
  4257a4:	cli    
  4257a5:	push   edx
  4257a6:	add    bl,dl
  4257a8:	sti    
  4257a9:	mov    ds:0xe715a8c3,al
  4257ae:	mov    bh,0x38
  4257b0:	mov    dh,0x76
  4257b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257b3:	push   edi
  4257b4:	je     0x425763
  4257b6:	or     edi,DWORD PTR [ebp-0x76]
  4257b9:	and    BYTE PTR [ecx],0x2a
  4257bc:	mov    ch,0xdf
  4257be:	xor    al,0x0
  4257c0:	push   cs
  4257c1:	adc    al,0xb8
  4257c3:	fs xchg ebx,eax
  4257c5:	rcr    DWORD PTR [edi-0x7633ff09],0xa1
  4257cc:	dec    esp
  4257cd:	xor    DWORD PTR [edi-0x3cffdb5d],esp
  4257d3:	or     BYTE PTR [esi+0x7f],0x73
  4257d7:	mov    ecx,DWORD PTR [ebx-0x20]
  4257da:	add    cl,BYTE PTR [edi-0x6b75ddef]
  4257e0:	arpl   bp,di
  4257e2:	add    BYTE PTR [ebp+0x16ade40e],ch
  4257e8:	add    BYTE PTR [eax],bl
  4257ea:	jp     0x42583f
  4257ec:	pop    esi
  4257ed:	cs mov ebp,0x3b1eec47
  4257f3:	ret    0x6795
  4257f6:	push   esp
  4257f7:	fist   WORD PTR [ebx]
  4257f9:	ret    
  4257fa:	add    ah,bl
  4257fc:	rol    BYTE PTR [eax+eiz*1+0x3d],1
  425800:	adc    DWORD PTR ds:0x394be549,eax
  425806:	jne    0x4257c8
  425808:	add    dh,cl
  42580a:	lock test DWORD PTR [edi+0x19],0x38a4ada0
  425812:	icebp  
  425813:	mov    es,WORD PTR [eax-0x1ea2abff]
  425819:	cmp    esi,DWORD PTR [edi]
  42581b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42581c:	add    BYTE PTR [ebx-0x12],dl
  42581f:	and    bh,ah
  425821:	push   0x3307a8
  425826:	fmul   QWORD PTR [edi+0x6b4806f6]
  42582c:	mov    dl,0x6e
  42582e:	add    DWORD PTR [ecx],edi
  425830:	data16 (bad) 
  425833:	cmp    dl,BYTE PTR [eax]
  425835:	test   al,0x80
  425837:	dec    esi
  425838:	out    0x15,al
  42583a:	sub    DWORD PTR [ebx+ecx*2+0x71ee077c],eax
  425841:	shl    BYTE PTR ds:0xa2c9c01d,cl
  425847:	dec    edi
  425848:	inc    esi
  425849:	add    BYTE PTR [ebp+0x648a33e7],al
  42584f:	lods   al,BYTE PTR ds:[esi]
  425850:	cmc    
  425851:	or     BYTE PTR [eax],al
  425853:	mov    eax,ds:0x361d0bd1
  425858:	adc    esi,ecx
  42585a:	mov    dh,0xf
  42585c:	adc    DWORD PTR [edi+0x76],edx
  42585f:	mov    edi,0x86ca19e0
  425864:	push   ss
  425865:	xchg   esp,eax
  425866:	add    BYTE PTR ds:0x677051e1,dl
  42586c:	jge    0x4257f1
  42586e:	pop    ss
  42586f:	add    DWORD PTR [ebx+0x53feb4f8],edi
  425875:	lahf   
  425876:	sub    al,0xf4
  425878:	mul    DWORD PTR [edi]
  42587a:	repz fadd st,st(3)
  42587d:	loopne 0x42587f
  42587f:	cmc    
  425880:	in     al,dx
  425881:	sub    DWORD PTR [ebx-0x17],esp
  425884:	(bad)  
  425885:	sbb    ch,dl
  425887:	or     DWORD PTR [edi],ebx
  425889:	out    0x84,eax
  42588b:	dec    eax
  42588c:	add    ch,ch
  42588e:	mov    ecx,0x38a7ed92
  425893:	imul   edi,DWORD PTR [eax+eax*1+0x677a7614],0xf23fde80
  42589e:	cmp    edi,DWORD PTR [edi]
  4258a0:	xlat   BYTE PTR ds:[ebx]
  4258a1:	std    
  4258a2:	add    BYTE PTR [edx+ebp*8+0x148d6cce],bl
  4258a9:	cwde   
  4258aa:	add    cl,al
  4258ac:	xor    eax,0x2e8f2988
  4258b1:	or     BYTE PTR [ecx-0x3f0684f9],bh
  4258b7:	or     esp,DWORD PTR [esi]
  4258b9:	es in  al,dx
  4258bb:	je     0x4258bd
  4258bd:	inc    edi
  4258be:	js     0x4258b6
  4258c0:	aaa    
  4258c1:	call   0x8aa527
  4258c6:	lea    cx,[edx+0x3c]
  4258ca:	(bad)  
  4258cc:	mov    ds,WORD PTR ds:0x931b6700
  4258d2:	pop    ebx
  4258d3:	outs   dx,BYTE PTR ds:[esi]
  4258d4:	adc    DWORD PTR [ecx-0x36],edx
  4258d7:	push   ds
  4258d8:	jp     0x4258e6
  4258da:	enter  0x4a0f,0x4d
  4258de:	pop    ebp
  4258df:	sbb    BYTE PTR [ebp-0x65a81f37],0x1d
  4258e6:	add    bl,cl
  4258e8:	push   0xebfd2e5f
  4258ed:	xchg   ebp,eax
  4258ee:	ins    BYTE PTR es:[edi],dx
  4258ef:	add    BYTE PTR [ebp+0x51],al
  4258f2:	int3   
  4258f3:	mov    edi,0xf2102324
  4258f8:	je     0x425957
  4258fa:	push   cs
  4258fb:	xchg   ecx,eax
  4258fc:	ret    0x4871
  4258ff:	ror    bl,0x6b
  425902:	stos   BYTE PTR es:[edi],al
  425903:	or     al,0x93
  425905:	add    BYTE PTR [ecx+edi*1-0x2f],dh
  425909:	jne    0x425897
  42590b:	pusha  
  42590c:	das    
  42590d:	mov    al,ds:0xda079403
  425912:	mov    eax,0x93d8565a
  425917:	sbb    ebp,esp
  425919:	add    bh,ch
  42591b:	xchg   ecx,eax
  42591c:	mov    esp,0xccc36f57
  425921:	cwde   
  425922:	add    DWORD PTR [ebx-0x18],edi
  425925:	clc    
  425926:	dec    edx
  425927:	mov    ds:0xcf11b8,eax
  42592c:	jl     0x4259a8
  42592e:	fist   WORD PTR [edx-0x1d]
  425931:	imul   eax,DWORD PTR ds:0x893700d1,0xffffffd0
  425938:	push   ss
  425939:	lods   eax,DWORD PTR ds:[esi]
  42593a:	or     dl,BYTE PTR [eax]
  42593c:	sbb    eax,DWORD PTR [eax]
  42593e:	stos   BYTE PTR es:[edi],al
  42593f:	mov    WORD PTR [ebx-0x6c],ds
  425942:	int    0x83
  425944:	icebp  
  425945:	into   
  425946:	add    BYTE PTR [edi+0x6f70ff53],cl
  42594c:	fs out 0x28,eax
  42594f:	or     eax,DWORD PTR [esi+0x7]
  425952:	daa    
  425953:	call   0x9b3a:0x7c1ed900
  42595a:	push   cs
  42595b:	je     0x425998
  42595d:	pop    ds
  42595e:	jno    0x425963
  425960:	das    
  425961:	jae    0x60f700f
  425967:	add    bl,bh
  425969:	add    eax,DWORD PTR [eax+0x6f]
  42596c:	(bad)  
  42596d:	je     0x4259cf
  42596f:	push   ebx
  425970:	xchg   ecx,eax
  425971:	inc    edi
  425972:	add    BYTE PTR [edx-0x769fe175],cl
  425978:	cmp    edx,DWORD PTR [esi-0x3d]
  42597b:	jmp    0x5e:0x38292cc4
  425982:	mov    ah,0x46
  425984:	outs   dx,BYTE PTR ds:[esi]
  425985:	add    esp,esp
  425987:	pop    ebp
  425988:	add    al,0xf7
  42598a:	ss jb  0x425937
  42598d:	call   0x3742:0x1a0000bc
  425994:	xor    BYTE PTR [ecx-0x32ffbace],ch
  42599a:	mov    esi,0x8de4ca44
  42599f:	xor    DWORD PTR [eax+0xf3fd80],0xdd7fdabf
  4259a9:	fist   WORD PTR [eax+0x2010e14]
  4259af:	pusha  
  4259b0:	mov    ah,0xbd
  4259b2:	mov    eax,0xe03fa493
  4259b7:	or     DWORD PTR [eax-0x5961f0fd],ebx
  4259bd:	or     edx,DWORD PTR [ebp-0x3ce7f49]
  4259c3:	push   DWORD PTR [ebx+0x7d]
  4259c6:	add    BYTE PTR [ecx-0x739611f8],bl
  4259cc:	ss dec edi
  4259ce:	sbb    DWORD PTR [eax],eax
  4259d0:	call   0xbe12:0x5f79fd5b
  4259d7:	inc    ebx
  4259d8:	push   cs
  4259d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259db:	xchg   esp,eax
  4259dc:	sub    DWORD PTR [edi+0xc],0xffffffa0
  4259e0:	sub    bl,bl
  4259e2:	mov    edi,0xc00bca7c
  4259e7:	xlat   BYTE PTR ds:[ebx]
  4259e8:	pop    ss
  4259e9:	mul    DWORD PTR [ecx-0xbdb1200]
  4259ef:	das    
  4259f0:	add    BYTE PTR [eax],al
  4259f2:	arpl   sp,sp
  4259f4:	in     eax,0xfe
  4259f6:	mov    esp,0x3e2d23d
  4259fb:	mov    dh,0xe
  4259fd:	mov    eax,ds:0x16b01b1d
  425a02:	cmp    eax,0x3fd511fb
  425a07:	das    
  425a08:	add    bl,BYTE PTR [ebp+0x1]
  425a0b:	fs jecxz 0x425a60
  425a0e:	add    dl,ah
  425a10:	pusha  
  425a11:	loope  0x425a5d
  425a13:	add    BYTE PTR [esi+edi*1+0x7c],ch
  425a17:	xchg   esi,eax
  425a18:	in     al,0xbf
  425a1a:	and    ecx,ebx
  425a1c:	sbb    eax,0x80650276
  425a21:	(bad)  
  425a22:	mov    ecx,0x1fd39f6f
  425a27:	add    bh,al
  425a29:	cwde   
  425a2a:	leave  
  425a2b:	xor    ah,BYTE PTR [ecx-0x5b]
  425a2e:	push   es
  425a2f:	jg     0x425a31
  425a31:	jl     0x4259d3
  425a33:	call   0x8821:0xb23c12e8
  425a3a:	mov    ecx,ds
  425a3c:	add    DWORD PTR [ebp+0x33],edx
  425a3f:	jle    0x425a73
  425a41:	in     al,dx
  425a42:	mov    esp,0xa885c0c1
  425a47:	add    ah,bh
  425a49:	adc    DWORD PTR [eax+0x7159215a],ebx
  425a4f:	mov    cl,0x1c
  425a51:	pop    esi
  425a52:	outs   dx,DWORD PTR ds:[esi]
  425a53:	in     eax,dx
  425a54:	sub    DWORD PTR [ebx],0xa0952980
  425a5a:	jo     0x425a5c
  425a5c:	out    dx,eax
  425a5d:	clc    
  425a5e:	hlt    
  425a5f:	add    BYTE PTR [edi-0x63],bh
  425a62:	pop    esp
  425a63:	(bad)  
  425a65:	icebp  
  425a66:	adc    ah,dl
  425a68:	add    edi,esi
  425a6a:	push   ds
  425a6b:	ins    BYTE PTR es:[edi],dx
  425a6c:	push   esi
  425a6d:	jle    0x425a05
  425a6f:	mov    eax,0x79948
  425a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a75:	push   esp
  425a76:	mov    ds:0xe6a01c23,eax
  425a7b:	enter  0x7100,0xb6
  425a7f:	mov    ecx,0x18d7539c
  425a84:	mov    WORD PTR [eax],es
  425a86:	in     eax,0xb4
  425a88:	and    BYTE PTR [ecx+0x728ae984],dh
  425a8e:	add    ch,dh
  425a90:	jae    0x425b0d
  425a92:	popf   
  425a93:	lods   al,BYTE PTR ds:[esi]
  425a94:	pop    ss
  425a95:	les    eax,FWORD PTR [ecx]
  425a97:	add    eax,edi
  425a99:	lea    eax,[edx+eax*2]
  425a9c:	leave  
  425a9d:	jge    0x425a26
  425a9f:	shl    BYTE PTR [edi-0x1b],0x3c
  425aa3:	xchg   ebx,eax
  425aa4:	add    BYTE PTR [esi+eax*8-0x5c4b4290],dl
  425aab:	test   DWORD PTR [ecx+0x0],esp
  425aae:	loope  0x425a66
  425ab0:	jmp    0x425a9e
  425ab2:	mov    eax,ds:0x17be0464
  425ab7:	(bad)  
  425ab8:	(bad)  [edi-0x1c4c1800]
  425abe:	mov    al,ds:0x551ff73f
  425ac3:	push   esp
  425ac4:	mov    ah,0xcf
  425ac6:	retf   0x2c
  425ac9:	sub    bh,al
  425acb:	cmp    bh,cl
  425acd:	scas   eax,DWORD PTR es:[edi]
  425ace:	add    BYTE PTR [ecx+ebx*4-0x5],bh
  425ad2:	stc    
  425ad3:	ffreep st(2)
  425ad5:	ins    DWORD PTR es:[edi],dx
  425ad6:	xchg   ecx,eax
  425ad7:	pop    ss
  425ad8:	neg    BYTE PTR [ebp-0x36ffff75]
  425ade:	mov    dl,0xda
  425ae0:	addr16 lock add esp,ecx
  425ae4:	out    0x3c,eax
  425ae6:	xchg   edx,eax
  425ae7:	add    DWORD PTR [edx+ebx*2],ebp
  425aea:	les    ebp,FWORD PTR [ecx+0x31]
  425aed:	add    DWORD PTR [edx-0x4a],esi
  425af0:	jae    0x425b10
  425af2:	stos   DWORD PTR es:[edi],eax
  425af3:	inc    edi
  425af4:	and    esi,edx
  425af6:	add    ch,bh
  425af8:	xchg   ebp,esp
  425afa:	popf   
  425afb:	push   es
  425afc:	(bad)  
  425afd:	mov    edi,0x50f1e809
  425b02:	push   cs
  425b03:	inc    eax
  425b04:	adc    edi,DWORD PTR [edi]
  425b06:	mov    ebp,0xab0c84a0
  425b0b:	fsub   st,st(0)
  425b0d:	das    
  425b0e:	aad    0xb0
  425b10:	inc    eax
  425b11:	lods   eax,DWORD PTR ds:[esi]
  425b12:	push   0xffffffc5
  425b14:	add    BYTE PTR [edi+0x12f45c05],bh
  425b1a:	stos   BYTE PTR es:[edi],al
  425b1b:	ja     0x425b50
  425b1d:	cmp    eax,0x3110ce98
  425b22:	mov    cl,0x1e
  425b24:	push   es
  425b25:	out    dx,al
  425b26:	rcl    BYTE PTR [edx+0x15],0xca
  425b2a:	mov    esp,0x4b0711d3
  425b2f:	test   al,0x26
  425b31:	into   
  425b32:	outs   dx,BYTE PTR ds:[esi]
  425b33:	jo     0x425bb4
  425b35:	push   edi
  425b36:	je     0x425b23
  425b38:	add    BYTE PTR [ebx-0x6],al
  425b3b:	call   0xb849:0x4e3e8401
  425b42:	or     bl,BYTE PTR [ebp-0x29e15220]
  425b48:	xor    esp,DWORD PTR ds:[esi+edx*4+0x7a]
  425b4d:	inc    esi
  425b4e:	add    BYTE PTR [ecx-0x75],dh
  425b51:	cmc    
  425b52:	test   al,0x25
  425b54:	sbb    BYTE PTR [esi+edx*2],al
  425b57:	mov    dl,0x50
  425b59:	jge    0x425af8
  425b5b:	mov    edx,0x785dad91
  425b60:	shl    BYTE PTR [edi+0x61],0x2
  425b64:	ret    
  425b65:	jno    0x425be6
  425b67:	fwait
  425b68:	xchg   esp,eax
  425b69:	xchg   ebx,eax
  425b6a:	add    BYTE PTR [edx+ebp*8+0x37],ah
  425b6e:	mov    cl,0x0
  425b70:	mov    ah,al
  425b72:	xchg   DWORD PTR [esi],ecx
  425b74:	inc    edi
  425b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b76:	inc    esp
  425b77:	rol    BYTE PTR [eax],0x4
  425b7a:	pop    edx
  425b7b:	call   0x98876896
  425b80:	xor    BYTE PTR [ecx],al
  425b82:	add    edi,esp
  425b84:	mov    eax,0x44023c8c
  425b89:	inc    edx
  425b8a:	std    
  425b8b:	outs   dx,DWORD PTR ds:[esi]
  425b8c:	aad    0x20
  425b8e:	lods   eax,DWORD PTR ds:[esi]
  425b8f:	pop    ss
  425b90:	in     eax,0xef
  425b92:	push   0xe0bc9300
  425b97:	(bad)  
  425b99:	inc    eax
  425b9a:	lds    edx,FWORD PTR [edx]
  425b9c:	aas    
  425b9d:	stc    
  425b9e:	pop    es
  425b9f:	xchg   edi,eax
  425ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ba1:	jmp    0x8940946
  425ba6:	stos   BYTE PTR es:[edi],al
  425ba7:	push   ebp
  425ba8:	sub    BYTE PTR [eax+0x3],dl
  425bab:	(bad)  
  425bac:	arpl   WORD PTR [esi],dx
  425bae:	inc    edi
  425baf:	repz lahf 
  425bb1:	nop
  425bb2:	mov    DWORD PTR [edx+0x35],esi
  425bb5:	pmaddwd mm4,QWORD PTR ds:0x6e21d9ed
  425bbc:	das    
  425bbd:	gs jle 0x425c30
  425bc0:	add    BYTE PTR [ecx],dh
  425bc2:	add    BYTE PTR [ebp+0x1f],bl
  425bc5:	push   ss
  425bc6:	jl     0x425be6
  425bc8:	iret   
  425bc9:	mov    ecx,0xad880057
  425bce:	not    BYTE PTR [eax+esi*8+0x5b]
  425bd2:	call   0xd945600f
  425bd7:	rol    DWORD PTR [eax+0x7e],0xc0
  425bdb:	push   0x56
  425bdd:	xchg   edx,eax
  425bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425bdf:	add    BYTE PTR [ecx],dh
  425be1:	xchg   esi,eax
  425be2:	pop    esi
  425be3:	mov    BYTE PTR [eax+0x2b689f],dh
  425be9:	or     al,0xa3
  425beb:	cmp    BYTE PTR [edi-0x5a6b724],dl
  425bf1:	pop    es
  425bf2:	mov    eax,ds:0x4dedc909
  425bf7:	loopne 0x425c0d
  425bf9:	scas   eax,DWORD PTR es:[edi]
  425bfa:	pop    edi
  425bfb:	pop    edx
  425bfc:	add    BYTE PTR [esp+edi*2],dh
  425bff:	and    bl,ah
  425c01:	retf   
  425c02:	xor    edi,DWORD PTR [ebp+0x79]
  425c05:	pop    ds
  425c06:	outs   dx,DWORD PTR ds:[esi]
  425c07:	dec    eax
  425c08:	aad    0x40
  425c0a:	jae    0x425c77
  425c0c:	stc    
  425c0d:	lahf   
  425c0e:	aam    0xe5
  425c10:	add    BYTE PTR [ebx],dl
  425c12:	daa    
  425c13:	out    dx,al
  425c14:	lods   eax,DWORD PTR ds:[esi]
  425c15:	inc    esi
  425c16:	gs xchg ebx,eax
  425c18:	dec    esp
  425c19:	add    BYTE PTR [ecx],cl
  425c1b:	ret    
  425c1c:	mov    edx,0xa2545230
  425c21:	test   eax,0x35c85b00
  425c26:	or     ch,al
  425c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c29:	sbb    BYTE PTR [esi],0x12
  425c2c:	cmp    bl,BYTE PTR [esi+0xade88c]
  425c32:	shl    DWORD PTR [esi+0x78],1
  425c35:	imul   edi,DWORD PTR [edx-0x26],0xffffffd8
  425c39:	add    BYTE PTR [esi+0x2885e7e0],ch
  425c3f:	imul   eax,esi,0xd6eca0c7
  425c45:	mov    ?,WORD PTR [ebx]
  425c47:	ret    0x5a07
  425c4a:	xor    al,dl
  425c4c:	daa    
  425c4d:	je     0x425be3
  425c4f:	add    BYTE PTR [esi],dh
  425c51:	jbe    0x425beb
  425c53:	push   ebx
  425c54:	dec    ecx
  425c55:	sbb    esp,DWORD PTR [ebx]
  425c57:	xchg   ebp,eax
  425c58:	push   cs
  425c59:	push   eax
  425c5a:	cdq    
  425c5b:	gs fsubr st,st(6)
  425c5e:	mov    bl,0xa0
  425c60:	shr    DWORD PTR [edi+0x18],1
  425c63:	push   es
  425c64:	push   edi
  425c65:	add    dl,bh
  425c67:	mov    al,ds:0x3614ccc2
  425c6c:	ror    eax,0x0
  425c6f:	fld    st(7)
  425c71:	xor    eax,DWORD PTR [eax-0x7a]
  425c74:	inc    edi
  425c75:	or     al,BYTE PTR [ecx-0x14]
  425c78:	lea    eax,[eax]
  425c7a:	in     eax,0xf2
  425c7c:	lds    ebx,FWORD PTR [ecx-0x5c]
  425c7f:	mov    ah,0xe2
  425c81:	mov    eax,0x17612d00
  425c86:	aam    0xd8
  425c88:	and    esp,esi
  425c8a:	addr16 add cl,ah
  425c8d:	sbb    eax,0xa0138486
  425c92:	scas   eax,DWORD PTR es:[edi]
  425c93:	jns    0x425c95
  425c95:	sub    al,0xca
  425c97:	es ja  0x425ca7
  425c9a:	cld    
  425c9b:	inc    esp
  425c9c:	repz or esp,DWORD PTR ds:0x80504148
  425ca3:	xchg   esi,eax
  425ca4:	mov    edi,0xd10607
  425ca9:	loope  0x425cd9
  425cab:	push   0xa0caa70a
  425cb0:	dec    ebx
  425cb1:	add    BYTE PTR [edi+ecx*2],al
  425cb4:	pop    esp
  425cb5:	sbb    eax,0x1b18d80
  425cba:	add    eax,ebp
  425cbc:	mul    ah
  425cbe:	cmp    al,0xb5
  425cc0:	add    DWORD PTR [esi],0xfffffff4
  425cc3:	jge    0x425cc7
  425cc5:	add    BYTE PTR [esi-0x2bfb87d4],bl
  425ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ccc:	rcr    DWORD PTR [edx],0x12
  425ccf:	gs push esi
  425cd1:	jmp    0x425c7b
  425cd3:	lods   eax,DWORD PTR ds:[esi]
  425cd4:	add    BYTE PTR [ecx+0x3f332495],dl
  425cda:	movups XMMWORD PTR [esi],xmm3
  425cdd:	fsub   DWORD PTR [ebp-0x5e033d35]
  425ce3:	jne    0x425cfb
  425ce5:	add    bh,al
  425ce7:	mov    cl,BYTE PTR [ecx-0x4af6ffd9]
  425ced:	jle    0x425cc0
  425cef:	imul   esi,DWORD PTR [edi],0x720f508e
  425cf5:	popa   
  425cf6:	test   al,0x64
  425cf8:	mov    eax,ds:0x961cf6a0
  425cfd:	jp     0x425c7f
  425cff:	lods   eax,DWORD PTR ds:[esi]
  425d00:	xchg   ebp,edi
  425d02:	pop    esp
  425d03:	daa    
  425d04:	pop    ds
  425d05:	push   ebx
  425d06:	push   eax
  425d07:	lods   eax,DWORD PTR ds:[esi]
  425d08:	jne    0x425cc8
  425d0a:	cli    
  425d0b:	push   ecx
  425d0c:	add    BYTE PTR [eax+0x6d],ah
  425d0f:	call   0xfb6ee106
  425d14:	sbb    eax,0x688f9200
  425d19:	cmp    BYTE PTR [ebp+0x48],cl
  425d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d1d:	push   cs
  425d1e:	add    BYTE PTR [ebp-0x1e],bh
  425d21:	cwde   
  425d22:	lods   al,BYTE PTR ds:[esi]
  425d23:	nop
  425d24:	bnd jns 0x425ccd
  425d27:	add    al,0xcf
  425d29:	or     dh,BYTE PTR [ebp+0x41]
  425d2c:	xchg   esp,eax
  425d2d:	mov    esp,0x80c83800
  425d32:	pop    es
  425d33:	in     eax,dx
  425d34:	adc    DWORD PTR [edx+ebx*4],ebp
  425d37:	mov    bh,0xc4
  425d39:	or     BYTE PTR [ecx+edx*8+0x46],al
  425d3d:	jnp    0x425cbf
  425d3f:	jmp    0x425da3
  425d41:	out    0xee,eax
  425d43:	fild   DWORD PTR [esi]
  425d45:	add    BYTE PTR [edi-0x1a7a9bb9],bl
  425d4b:	dec    eax
  425d4c:	std    
  425d4d:	fild   WORD PTR [ebx]
  425d4f:	inc    ebx
  425d50:	mov    cl,0x6a
  425d52:	scas   al,BYTE PTR es:[edi]
  425d53:	int3   
  425d54:	xchg   ebx,eax
  425d55:	iret   
  425d56:	jo     0x425d2e
  425d58:	out    0x7f,al
  425d5a:	mov    eax,DWORD PTR [edx]
  425d5c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  425d5e:	(bad)  
  425d5f:	clc    
  425d60:	daa    
  425d61:	jp     0x425dc3
  425d63:	loope  0x425cef
  425d65:	sbb    BYTE PTR [eax],al
  425d67:	ins    BYTE PTR es:[edi],dx
  425d68:	mov    ecx,0x2a10d99b
  425d6d:	sbb    cl,BYTE PTR [ecx+0x7c23ce0b]
  425d73:	push   es
  425d74:	add    BYTE PTR [esi],cl
  425d76:	das    
  425d77:	cmp    eax,0xb1018066
  425d7c:	dec    esp
  425d7d:	push   esi
  425d7e:	fs or  ch,ch
  425d81:	push   ds
  425d82:	clc    
  425d83:	aad    0x37
  425d85:	adc    ah,BYTE PTR [esi]
  425d87:	out    0x6c,eax
  425d89:	dec    DWORD PTR [ecx]
  425d8b:	inc    esp
  425d8c:	iret   
  425d8d:	test   DWORD PTR [edi],0xbc0170da
  425d93:	jl     0x425db5
  425d95:	jo     0x425d66
  425d97:	ja     0x425d99
  425d99:	mov    al,ds:0x2c4b1e1d
  425d9e:	outs   dx,BYTE PTR ds:[esi]
  425d9f:	mov    eax,ds:0x60f0fce
  425da4:	icebp  
  425da5:	(bad)  
  425da6:	or     BYTE PTR ds:0x6f8d0e35,0x39
  425dad:	in     eax,0x7a
  425daf:	add    BYTE PTR [ebx],cl
  425db1:	imul   eax,DWORD PTR [esi+0x6d],0x9a1033
  425db8:	push   ss
  425db9:	stc    
  425dba:	dec    ebp
  425dbb:	or     al,0xb0
  425dbd:	loopne 0x425dc9
  425dbf:	push   ds
  425dc0:	add    eax,DWORD PTR [esp+eiz*2-0x4c]
  425dc4:	int3   
  425dc5:	xor    ebx,esp
  425dc7:	mov    al,ds:0xfc50ef66
  425dcc:	fwait
  425dcd:	sbb    eax,0x560a541
  425dd2:	test   eax,0xc03a7e
  425dd7:	(bad)  
  425dd8:	pop    ds
  425dd9:	bound  eax,QWORD PTR [eax]
  425ddb:	push   ebp
  425ddc:	mov    bl,0x74
  425dde:	lea    ebx,[ecx+0x22]
  425de1:	jne    0x425de7
  425de3:	add    BYTE PTR [ebx],al
  425de5:	call   0x70df:0x9ecdda8b
  425dec:	out    dx,al
  425ded:	aam    0x0
  425def:	imul   eax,DWORD PTR [ebx+0x12],0x1fab89c1
  425df6:	push   esi
  425df7:	add    dl,bh
  425df9:	lock push ebp
  425dfb:	fnstsw WORD PTR [esi+0x1ff49fdb]
  425e01:	div    BYTE PTR [esi]
  425e03:	lds    eax,FWORD PTR [edi]
  425e05:	aaa    
  425e06:	and    ah,BYTE PTR [ecx+0x1700f849]
  425e0c:	loope  0x425d90
  425e0e:	push   ecx
  425e0f:	rol    BYTE PTR [eax],0x67
  425e12:	mov    DWORD PTR [ebp+0x76008779],ebp
  425e18:	std    
  425e19:	xor    bl,al
  425e1b:	mov    edi,0xf9e950c2
  425e20:	jp     0x425da2
  425e22:	lods   eax,DWORD PTR ds:[esi]
  425e23:	jne    0x425e59
  425e25:	mov    al,0x0
  425e27:	xlat   BYTE PTR ds:[ebx]
  425e28:	sub    ebp,DWORD PTR [eax+0x78]
  425e2b:	pop    ecx
  425e2c:	or     al,0x1f
  425e2e:	mov    eax,ds:0x875a42ea
  425e33:	mov    eax,ds:0x7598fbad
  425e38:	jmp    0x13b4ecc
  425e3d:	mov    DWORD PTR [esi-0xc],edx
  425e40:	into   
  425e41:	iret   
  425e42:	nop
  425e43:	aas    
  425e44:	fild   DWORD PTR [ebx]
  425e46:	outs   dx,DWORD PTR ds:[esi]
  425e47:	sub    BYTE PTR ds:0xe8f20ba5,bl
  425e4d:	loop   0x425e5b
  425e4f:	push   ss
  425e50:	add    BYTE PTR [edx+0x7a5e04d2],bl
  425e56:	cld    
  425e57:	and    edx,DWORD PTR [edx-0x48ff7c61]
  425e5d:	jmp    0x425e37
  425e5f:	dec    eax
  425e60:	jecxz  0x425de2
  425e62:	add    DWORD PTR [edx],esp
  425e64:	loop   0x425e9f
  425e66:	push   ebx
  425e67:	into   
  425e68:	or     esi,DWORD PTR [ebx-0x5c1ccf0]
  425e6e:	add    BYTE PTR [ebp-0x33],ah
  425e71:	jge    0x425eb4
  425e73:	jo     0x425ee7
  425e75:	ret    
  425e76:	mov    al,0x2
  425e78:	(bad)  
  425e79:	test   eax,0xce0b1f9
  425e7e:	jns    0x425e80
  425e80:	cmp    BYTE PTR [edx-0x2f73dce1],0x1e
  425e87:	cmp    al,BYTE PTR [edi-0x3a7d7fec]
  425e8d:	add    edx,0xcf360b
  425e93:	leave  
  425e94:	fidivr WORD PTR [edx+eax*1+0x41]
  425e98:	out    dx,al
  425e99:	retf   0x170d
  425e9c:	mov    DWORD PTR [edi+0x1100604e],ecx
  425ea2:	outs   dx,BYTE PTR ds:[esi]
  425ea3:	add    BYTE PTR [bp+si],al
  425ea6:	cmc    
  425ea7:	inc    edi
  425ea8:	pop    edx
  425ea9:	push   ds
  425eaa:	push   eax
  425eab:	or     al,0xa2
  425ead:	mov    edi,0x8937ad40
  425eb2:	add    al,bh
  425eb4:	es fwait
  425eb6:	xchg   edx,eax
  425eb7:	dec    ebx
  425eb8:	mov    ah,0x14
  425eba:	sub    al,BYTE PTR [ebx]
  425ebc:	jecxz  0x425ee6
  425ebe:	in     al,0x54
  425ec0:	pop    ebp
  425ec1:	jae    0x425e7a
  425ec3:	xor    BYTE PTR [edi-0xe],dh
  425ec6:	dec    edx
  425ec7:	mov    ds:0xa658200,eax
  425ecc:	push   cs
  425ecd:	(bad)  
  425ece:	imul   BYTE PTR [esi+0x4b]
  425ed1:	add    BYTE PTR [edx-0x35],dl
  425ed4:	sub    ch,ch
  425ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ed7:	xor    bl,BYTE PTR [edx-0x73]
  425eda:	hlt    
  425edb:	push   ecx
  425edc:	add    dh,bl
  425ede:	cmp    eax,0xc78ed53c
  425ee3:	cdq    
  425ee4:	xchg   edi,eax
  425ee5:	cmp    BYTE PTR [eax-0x37ff0afd],bh
  425eeb:	jo     0x425f55
  425eed:	test   BYTE PTR [ecx],dl
  425eef:	clc    
  425ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ef1:	inc    ebx
  425ef2:	add    BYTE PTR [ecx],dh
  425ef4:	loopne 0x425f15
  425ef6:	sbb    DWORD PTR [ebx-0x75],ebp
  425ef9:	xor    eax,0x5b5e0017
  425efe:	mov    edi,0x44ce93d9
  425f03:	int    0x20
  425f05:	lods   eax,DWORD PTR ds:[esi]
  425f06:	mov    bl,0xf8
  425f08:	add    DWORD PTR [esi],ecx
  425f0a:	xchg   eax,esp
  425f0c:	pop    esp
  425f0d:	js     0x425f38
  425f0f:	das    
  425f10:	push   cs
  425f11:	scas   eax,DWORD PTR es:[edi]
  425f12:	mov    al,ds:0x4a5030db
  425f17:	cs dec esp
  425f19:	jmp    0x425f7a
  425f1b:	add    BYTE PTR [esi],cl
  425f1d:	pop    esi
  425f1e:	call   0x7b4205e5
  425f23:	pop    es
  425f24:	shl    bh,cl
  425f26:	scas   al,BYTE PTR es:[edi]
  425f27:	jl     0x425f8b
  425f29:	add    BYTE PTR [ebx],dl
  425f2b:	xor    dh,BYTE PTR [ecx+0x9fc09f9]
  425f31:	and    BYTE PTR [ebp+0x0],ah
  425f34:	or     DWORD PTR [ecx+0x6a4c63],0x8d100aa9
  425f3e:	xor    ch,BYTE PTR [edx+ebx*2+0x27]
  425f42:	lock popa 
  425f44:	push   eax
  425f45:	(bad)  
  425f46:	out    0x94,al
  425f48:	cwde   
  425f49:	jns    0x425f5a
  425f4b:	mov    bl,0x13
  425f4d:	cli    
  425f4e:	jle    0x425f10
  425f50:	ret    0x2d05
  425f53:	imul   esi,DWORD PTR [ecx],0xffffff97
  425f56:	add    BYTE PTR [eax],0x19
  425f59:	or     cl,bh
  425f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f5c:	add    BYTE PTR [ecx],cl
  425f5e:	rcr    cl,1
  425f60:	mov    esi,0xdaf49939
  425f65:	add    BYTE PTR [ebx+0x61d84f75],dl
  425f6b:	mov    eax,0xe5009285
  425f70:	push   ebp
  425f71:	repnz xchg cx,ax
  425f74:	sbb    BYTE PTR [ecx+0x20af0f52],cl
  425f7a:	sub    eax,0x2e68e0cd
  425f7f:	dec    eax
  425f80:	or     DWORD PTR [edx+0x26d6600],0x43
  425f87:	(bad)  
  425f88:	jnp    0x425f58
  425f8a:	aaa    
  425f8b:	sbb    eax,0x438489ef
  425f90:	dec    edi
  425f91:	ins    BYTE PTR es:[edi],dx
  425f92:	shl    BYTE PTR [ebx],1
  425f94:	nop
  425f95:	xchg   edi,eax
  425f96:	sub    BYTE PTR [edx],0x3
  425f99:	push   ss
  425f9a:	jecxz  0x425fb6
  425f9c:	(bad)  
  425f9d:	jmp    0xc1:0x2c20b8e9
  425fa4:	stos   BYTE PTR es:[edi],al
  425fa5:	inc    edx
  425fa6:	dec    ecx
  425fa7:	in     eax,dx
  425fa8:	sub    eax,0x98bf82
  425fad:	test   bl,dh
  425faf:	cmp    DWORD PTR [esi+0x6c],ebp
  425fb2:	mov    al,0x70
  425fb4:	xchg   esp,eax
  425fb5:	add    dl,cl
  425fb7:	xchg   ebx,eax
  425fb8:	out    dx,al
  425fb9:	es (bad) 
  425fbb:	adc    ebx,eax
  425fbd:	inc    edi
  425fbe:	add    DWORD PTR [ebp-0x20],esi
  425fc1:	mov    bl,0xdc
  425fc3:	and    al,0x27
  425fc5:	adc    al,0xc4
  425fc7:	cli    
  425fc8:	rol    DWORD PTR [eax],1
  425fca:	mov    dl,0x29
  425fcc:	xchg   ebx,eax
  425fcd:	mov    ah,0x6f
  425fcf:	ins    BYTE PTR es:[edi],dx
  425fd0:	call   0x950e6002
  425fd5:	retf   
  425fd6:	adc    DWORD PTR [edx],ebx
  425fd8:	mov    cl,0x19
  425fda:	push   ecx
  425fdb:	add    BYTE PTR [ecx],dh
  425fdd:	sbb    eax,0xf8805a2a
  425fe2:	pop    ss
  425fe3:	sahf   
  425fe4:	pop    es
  425fe5:	ins    BYTE PTR es:[edi],dx
  425fe6:	mov    esp,0x70bdf62b
  425feb:	xor    al,0xed
  425fed:	or     DWORD PTR [eax+eax*1-0x52],0xffffffe8
  425ff2:	adc    ecx,eax
  425ff4:	rcl    DWORD PTR [eax+0x6a],cl
  425ff7:	inc    esp
  425ff8:	imul   BYTE PTR [eax]
  425ffa:	add    al,dh
  425ffc:	retf   0x323
  425fff:	fisub  WORD PTR [ecx-0x4]
  426002:	aaa    
  426003:	add    bl,ch
  426005:	xor    ecx,DWORD PTR [edx-0x6b]
  426008:	mov    al,ds:0x24edd208
  42600d:	adc    cl,BYTE PTR [esi-0x5a]
  426010:	push   cs
  426011:	imul   edi,DWORD PTR [edx-0x40],0x21626cf7
  426018:	ret    
  426019:	pop    ss
  42601a:	push   edi
  42601b:	mov    esp,0xb000c70f
  426020:	in     eax,dx
  426021:	sbb    BYTE PTR [ecx+0x79711c37],0x2
  426028:	jp     0x425fb5
  42602a:	cmp    eax,0x87f4a0
  42602f:	out    dx,al
  426030:	cs sar ebp,0x15
  426034:	push   0xadd7cc4f
  426039:	pop    ss
  42603a:	mov    dl,0x80
  42603c:	mov    ah,0x0
  42603e:	sub    BYTE PTR [edi+0x79f10488],dh
  426044:	add    BYTE PTR [esi],bl
  426046:	ds lahf 
  426048:	jb     0x426070
  42604a:	adc    BYTE PTR [edi-0x2f],bl
  42604d:	or     edi,DWORD PTR ds:0x20f59c3f
  426053:	call   0x2200:0xd04b21c6
  42605a:	or     DWORD PTR [eax-0x77],ebp
  42605d:	ins    DWORD PTR es:[edi],dx
  42605e:	jmp    0x425ffe
  426060:	in     eax,dx
  426061:	or     esi,esp
  426063:	adc    al,0xa0
  426065:	xchg   esp,eax
  426066:	mov    es,WORD PTR [eax]
  426068:	in     eax,0xfe
  42606a:	and    BYTE PTR [eax-0x64002a30],al
  426070:	pop    es
  426071:	mov    eax,ds:0x6b22b02f
  426076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426078:	add    DWORD PTR [edx],edi
  42607a:	jecxz  0x42606f
  42607c:	sub    BYTE PTR [ebp-0x45f5ff40],0x57
  426083:	mov    bh,0x40
  426085:	lods   eax,DWORD PTR ds:[esi]
  426086:	ret    0x40ed
  426089:	int3   
  42608a:	mov    ds:0x3fd6791e,al
  42608f:	xchg   DWORD PTR [ebx+0x1d],ebp
  426092:	inc    eax
  426093:	sbb    BYTE PTR [edi],0x76
  426096:	(bad)  
  426097:	fld    DWORD PTR [eax]
  426099:	cmp    eax,0x48f074d8
  42609e:	dec    ebp
  42609f:	adc    DWORD PTR ds:0x80e54905,eax
  4260a5:	push   ecx
  4260a6:	push   esi
  4260a7:	lock add BYTE PTR [edx+0x0],cl
  4260ab:	push   ds
  4260ac:	(bad)  
  4260ad:	jle    0x4260d9
  4260af:	pop    ds
  4260b0:	xor    al,0x6b
  4260b2:	pop    ecx
  4260b3:	add    al,dh
  4260b5:	jns    0x426090
  4260b7:	stos   BYTE PTR es:[edi],al
  4260b8:	sbb    eax,0x92cc8a9
  4260bd:	add    ebx,DWORD PTR [edx-0x33]
  4260c0:	jno    0x4260ba
  4260c2:	add    al,ah
  4260c4:	adc    DWORD PTR [ebx+0x43],ebx
  4260c7:	mov    al,ds:0xb400dbad
  4260cc:	dec    eax
  4260cd:	mov    dh,0x1
  4260cf:	inc    esp
  4260d0:	daa    
  4260d1:	stc    
  4260d2:	retf   0xa600
  4260d5:	jbe    0x4260c5
  4260d7:	xchg   edx,eax
  4260d8:	lods   eax,DWORD PTR ds:[esi]
  4260d9:	sbb    edx,esi
  4260db:	iret   
  4260dc:	sbb    eax,0xd9de3d
  4260e1:	mov    ch,0x25
  4260e3:	cmp    al,0x88
  4260e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260e6:	adc    ecx,DWORD PTR ds:[edi]
  4260e9:	pop    esi
  4260ea:	pop    edx
  4260eb:	lock add ah,bl
  4260ee:	cmp    DWORD PTR [edx-0x5],ecx
  4260f1:	sub    BYTE PTR [edx],0xde
  4260f4:	repz sbb eax,0x427a44
  4260fa:	fstp   DWORD PTR [esp+edi*4+0x35ea1c26]
  426101:	jns    0x42617e
  426103:	dec    ecx
  426104:	and    BYTE PTR [ecx-0x790df1f7],dh
  42610a:	pop    edi
  42610b:	cld    
  42610c:	ror    BYTE PTR [edx+0x6619efa9],0x0
  426113:	cdq    
  426114:	(bad)  
  426115:	leave  
  426116:	lods   al,BYTE PTR ds:[esi]
  426117:	inc    ebx
  426118:	jge    0x426190
  42611a:	pushf  
  42611b:	cmp    DWORD PTR [eax+0x7],eax
  42611e:	popf   
  42611f:	sub    eax,0x4e5c1f9
  426124:	(bad)  
  426126:	loopne 0x426128
  426128:	mov    ebp,0xe1132c4
  42612d:	mov    cl,0x29
  42612f:	cmp    BYTE PTR [ebx],cl
  426131:	nop
  426132:	aam    0x79
  426134:	push   cs
  426135:	in     al,dx
  426136:	xchg   ebx,eax
  426137:	lock pusha 
  426139:	in     eax,dx
  42613a:	pop    esp
  42613b:	ja     0x4260f0
  42613d:	dec    edi
  42613e:	and    BYTE PTR [ecx+0x78],0x48
  426142:	jo     0x4260da
  426144:	adc    ebx,DWORD PTR [ecx-0x4bff0fbf]
  42614a:	adc    BYTE PTR [edx],dh
  42614c:	mov    bh,0xa9
  42614e:	add    BYTE PTR [eax],bh
  426150:	ins    DWORD PTR es:[edi],dx
  426151:	push   ebx
  426152:	outs   dx,DWORD PTR ds:[esi]
  426153:	mov    ebx,DWORD PTR [edx+0x4c]
  426156:	inc    eax
  426157:	in     al,0xbd
  426159:	add    BYTE PTR [edx-0x7caea34b],ch
  42615f:	jmp    FWORD PTR [esi-0x13af7f62]
  426165:	ds pop ebx
  426167:	jae    0x4261a4
  426169:	xor    al,al
  42616b:	add    BYTE PTR ds:[edi-0x55fadb6],dh
  426172:	shl    DWORD PTR [edi],cl
  426174:	lods   al,BYTE PTR ds:[esi]
  426175:	sbb    al,0x70
  426177:	(bad)  
  426178:	into   
  426179:	mov    al,ds:0x3f8a9b01
  42617e:	imul   ecx,DWORD PTR [ebx-0x57],0x9c6400b8
  426185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426186:	add    edi,edi
  426188:	call   0x522e7d5
  42618d:	mov    eax,0xe38cb3c
  426192:	sahf   
  426193:	dec    esp
  426194:	inc    ebx
  426195:	mov    al,es:0xff2916b3
  42619b:	jg     0x42619d
  42619d:	cmp    ecx,ebp
  42619f:	sbb    al,0xe6
  4261a1:	scas   eax,DWORD PTR es:[edi]
  4261a2:	mov    dl,BYTE PTR [edi]
  4261a4:	mov    cl,0x0
  4261a6:	mov    esi,0xfe407cf8
  4261ab:	in     al,0x62
  4261ad:	aam    0x0
  4261af:	sahf   
  4261b0:	xchg   ecx,eax
  4261b1:	pop    ebp
  4261b2:	adc    eax,0xb9cda266
  4261b7:	sbb    al,0x84
  4261b9:	clc    
  4261ba:	test   DWORD PTR [eax],0x95a1df9b
  4261c0:	jmp    FWORD PTR [esi]
  4261c2:	sbb    dh,0x55
  4261c5:	loop   0x42616e
  4261c7:	add    BYTE PTR [edi],al
  4261c9:	daa    
  4261ca:	or     BYTE PTR [edx+edx*4+0x28b4d94],cl
  4261d1:	icebp  
  4261d2:	into   
  4261d3:	int    0x96
  4261d5:	sub    esi,DWORD PTR [esi+0x0]
  4261d8:	sbb    bh,BYTE PTR [eax]
  4261da:	mov    ebx,0xae610171
  4261df:	xor    eax,0x3a445d23
  4261e4:	loopne 0x4261d7
  4261e6:	xlat   BYTE PTR ds:[ebx]
  4261e7:	or     ebp,DWORD PTR [edx+0x68]
  4261ea:	je     0x426248
  4261ec:	add    DWORD PTR [ebp+0x309325fe],ecx
  4261f2:	push   es
  4261f3:	xor    eax,0xfd81f83a
  4261f8:	add    BYTE PTR [esi-0x10471d79],bl
  4261fe:	dec    ebx
  4261ff:	inc    edi
  426200:	popa   
  426201:	add    eax,0x48fcb0cd
  426206:	aad    0xbc
  426208:	add    BYTE PTR [eax+0x1882aeb3],al
  42620e:	cmp    DWORD PTR [ebp+0x5d],0xaa17f407
  426215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426216:	push   0x8e8aec40
  42621b:	fisub  WORD PTR [ecx]
  42621d:	cld    
  42621e:	push   ss
  42621f:	pushf  
  426220:	gs inc eax
  426222:	adc    ebx,DWORD PTR [ecx+0x764eedc1]
  426228:	add    edx,ecx
  42622a:	mov    ds:0xde82fb3f,eax
  42622f:	out    0xc,al
  426231:	push   0x0
  426233:	(bad)
  426236:	push   ebp
  426237:	mov    eax,ds:0xe1179
  42623c:	bound  ecx,QWORD PTR [eax+0x4e]
  42623f:	jmp    0x426222
  426241:	xchg   esi,eax
  426242:	inc    esp
  426243:	pop    DWORD PTR [eax]
  426245:	jbe    0x4261e4
  426247:	or     al,0x1d
  426249:	test   DWORD PTR [ebp+0x3e],0xb1bf21f9
  426250:	xchg   edi,eax
  426251:	xchg   esp,eax
  426252:	add    BYTE PTR [eax-0x162bc037],dh
  426258:	retf   0xc800
  42625b:	xchg   ebp,eax
  42625c:	and    DWORD PTR [esi-0x68],ebx
  42625f:	fisttp WORD PTR [eax]
  426261:	add    ch,BYTE PTR es:[edi+0x30]
  426265:	(bad)  
  426266:	imul   ecx,DWORD PTR [ecx+ecx*8+0xdcd742],0xffffff80
  42626e:	pop    ebx
  42626f:	inc    esp
  426270:	or     edx,DWORD PTR [edx+esi*1-0x7148e247]
  426277:	sar    BYTE PTR ss:[edx],0x9a
  42627b:	sub    BYTE PTR cs:[edi+eiz*4-0x70fb59ea],bl
  426283:	add    BYTE PTR [esi+eiz*1],cl
  426286:	loopne 0x4262ca
  426288:	shl    WORD PTR [ebp+ebx*8+0x0],0xd7
  42628e:	(bad)  
  42628f:	les    ebp,FWORD PTR [edi-0x72]
  426292:	dec    ebx
  426293:	ss out 0x0,al
  426296:	leave  
  426297:	push   es
  426298:	js     0x42622f
  42629a:	mov    cl,0x8a
  42629c:	xor    dh,bl
  42629e:	add    al,BYTE PTR ds:[ebp+0x0]
  4262a2:	loop   0x42627f
  4262a4:	mov    BYTE PTR [eax+0x2c],ah
  4262a7:	les    eax,FWORD PTR ds:0x715313a
  4262ad:	sahf   
  4262ae:	xor    cl,BYTE PTR [eax]
  4262b0:	jg     0x426272
  4262b2:	pop    edi
  4262b3:	call   0xca3e91a1
  4262b8:	push   cs
  4262b9:	jb     0x426273
  4262bb:	mov    ah,0x60
  4262bd:	add    BYTE PTR [ecx+edi*8+0x3b],bl
  4262c1:	push   esi
  4262c2:	inc    esi
  4262c3:	add    BYTE PTR [ecx+0x7efd6829],ah
  4262c9:	aam    0xc7
  4262cb:	dec    ebp
  4262cc:	or     ebp,edx
  4262ce:	retf   0x8509
  4262d1:	add    BYTE PTR [eax],0x83
  4262d4:	addr16 xchg esp,eax
  4262d6:	fs mov db0,eax
  4262da:	mov    esi,0x105a20c1
  4262df:	lods   eax,DWORD PTR ds:[esi]
  4262e0:	mov    eax,0x3baf00e0
  4262e5:	fsub   DWORD PTR [edx]
  4262e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262e8:	jo     0x4262cd
  4262ea:	xor    DWORD PTR [eax],eax
  4262ec:	pop    ebp
  4262ed:	sti    
  4262ee:	xchg   esi,eax
  4262ef:	test   eax,0x24d239d1
  4262f4:	jg     0x426298
  4262f6:	sbb    eax,0x5e2e92
  4262fb:	jecxz  0x426371
  4262fd:	jle    0x4262c5
  4262ff:	xor    BYTE PTR [edx+0x2],cl
  426302:	jne    0x42629e
  426304:	ficom  WORD PTR [esi+0x2ec1da6a]
  42630a:	daa    
  42630b:	push   0xffffff80
  42630d:	lods   eax,DWORD PTR ds:[esi]
  42630e:	or     esi,edi
  426310:	cmc    
  426311:	push   es
  426312:	and    eax,0x3cf49d13
  426317:	add    al,BYTE PTR [ecx]
  426319:	push   0xb3e29146
  42631e:	pop    es
  42631f:	add    esi,DWORD PTR [eax+0x54]
  426322:	dec    esp
  426323:	add    BYTE PTR [ebx+0x5a269579],dl
  426329:	mov    esp,0x4e12e78f
  42632e:	loope  0x4262fb
  426330:	call   0x5a2863e2
  426335:	inc    ebx
  426336:	aad    0xc4
  426338:	mov    eax,0xdf4900b7
  42633d:	or     ah,BYTE PTR [esi]
  42633f:	jmp    0x27646051
  426344:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  426346:	add    BYTE PTR [eax],0x43
  426349:	out    0x1c,eax
  42634b:	retf   
  42634c:	push   cs
  42634d:	mov    ebp,0xc01b73d5
  426352:	push   eax
  426353:	in     eax,0x4f
  426355:	pop    ss
  426356:	int3   
  426357:	pop    ds
  426358:	stc    
  426359:	xchg   ebp,eax
  42635a:	mov    eax,DWORD PTR [eax]
  42635c:	js     0x4263c7
  42635e:	push   edx
  42635f:	add    DWORD PTR [ecx+0x2ab8000f],ebx
  426365:	add    esp,DWORD PTR [ebx+0x7d]
  426368:	daa    
  426369:	and    ah,ch
  42636b:	add    ah,ah
  42636d:	dec    ebx
  42636e:	xchg   ebx,eax
  42636f:	dec    ebp
  426370:	mov    al,ds:0x21a4e0
  426375:	push   ebx
  426376:	fistp  DWORD PTR [edx+0x2d]
  426379:	mov    ecx,DWORD PTR ds:0x11009ea8
  42637f:	xor    dl,cl
  426381:	push   ds
  426382:	push   cs
  426383:	push   es
  426384:	out    dx,eax
  426385:	pop    es
  426386:	mov    eax,0x94cd0000
  42638b:	popf   
  42638c:	les    ebp,FWORD PTR [ecx+0x28]
  42638f:	or     dh,dl
  426391:	add    BYTE PTR [ebx],dl
  426393:	jmp    0x42632d
  426395:	cmp    dl,dl
  426397:	jecxz  0x426325
  426399:	cmp    ebp,DWORD PTR ss:[ebx+0xc5980ff]
  4263a0:	mov    ecx,0xaa5b3b74
  4263a5:	add    cl,bh
  4263a7:	(bad)  
  4263aa:	lea    ebp,[edx-0xd]
  4263ad:	jns    0x4263af
  4263af:	mov    ds:0x63b82c4c,eax
  4263b4:	jno    0x4263d5
  4263b6:	inc    esi
  4263b7:	or     bl,ah
  4263b9:	or     BYTE PTR [esp+eax*4+0x6db5c100],0xc3
  4263c1:	call   0xf074a2d
  4263c6:	cld    
  4263c7:	xchg   edi,eax
  4263c8:	js     0x4263f1
  4263ca:	loopne 0x426427
  4263cc:	sub    cl,ch
  4263ce:	aaa    
  4263cf:	dec    ebx
  4263d0:	add    ch,BYTE PTR [esi]
  4263d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263d3:	xor    DWORD PTR [edi],ebp
  4263d5:	jg     0x426361
  4263d7:	pop    ebp
  4263d8:	add    BYTE PTR [ebp-0x789fbfc8],ch
  4263de:	add    al,0xd2
  4263e0:	shr    DWORD PTR [ecx+eiz*1],0xa7
  4263e4:	inc    eax
  4263e5:	adc    ebx,DWORD PTR [ebp-0x34]
  4263e8:	cld    
  4263e9:	mov    WORD PTR [edx],es
  4263eb:	inc    eax
  4263ec:	aam    0xc9
  4263ee:	(bad)  
  4263ef:	iret   
  4263f0:	call   0x17f9f2f5
  4263f5:	xchg   DWORD PTR [eax-0x6f],esi
  4263f8:	pop    ds
  4263f9:	ja     0x426423
  4263fb:	daa    
  4263fc:	rcl    cl,0x40
  4263ff:	mov    esp,0x10ee5933
  426404:	and    esi,eax
  426406:	or     eax,DWORD PTR [eax]
  426408:	loope  0x4263c2
  42640a:	cmp    DWORD PTR [ebx+0x12789cb],eax
  426410:	das    
  426411:	push   0x1befbf12
  426416:	pop    DWORD PTR [eax]
  426418:	xchg   esi,eax
  426419:	xor    ah,BYTE PTR [ecx+0x7c1ad7a0]
  42641f:	add    edi,eax
  426421:	sub    bh,BYTE PTR [ebp-0x40]
  426424:	inc    eax
  426425:	push   esi
  426426:	pop    es
  426427:	ds xchg ecx,eax
  426429:	lods   eax,DWORD PTR ds:[esi]
  42642a:	aam    0xda
  42642c:	or     BYTE PTR [ecx],bh
  42642e:	inc    edx
  42642f:	retf   0x3508
  426432:	or     DWORD PTR [esi],ebp
  426434:	test   BYTE PTR [esi-0x52],bl
  426437:	gs inc edx
  426439:	fsubr  QWORD PTR [edx+0x385a21f6]
  42643f:	adc    BYTE PTR cs:[esi],bh
  426442:	mov    bl,cl
  426444:	mov    BYTE PTR [edx+ebp*1],cl
  426447:	cmc    
  426448:	adc    bl,dl
  42644a:	or     DWORD PTR [esi+0x44ac1d88],ebx
  426450:	push   ss
  426451:	and    dl,BYTE PTR cs:[ebp-0x2a47ee12]
  426458:	and    al,0x8
  42645a:	iret   
  42645b:	test   DWORD PTR [esp+eax*4+0x11bc6c2],ebp
  426462:	mov    esi,0x5f9077
  426467:	not    bh
  426469:	add    al,BYTE PTR ds:0xd830a260
  42646f:	or     BYTE PTR [edx-0x541e52fe],ch
  426475:	mov    al,0x21
  426477:	repz bound eax,QWORD PTR [ebx+0x10]
  42647b:	pop    ebp
  42647c:	je     0x426401
  42647e:	mov    DWORD PTR [ebx-0x37ef180b],esi
  426484:	leave  
  426485:	dec    ebx
  426486:	mov    BYTE PTR [esi],dl
  426488:	sub    eax,0x2296ad44
  42648d:	icebp  
  42648e:	add    DWORD PTR [ecx],edx
  426490:	fcom   DWORD PTR ds:0x644908d5
  426496:	and    al,0x84
  426498:	and    BYTE PTR [ebp+0x1b104216],bl
  42649e:	lods   eax,DWORD PTR ds:[esi]
  42649f:	daa    
  4264a0:	pop    edi
  4264a1:	push   esp
  4264a2:	mov    al,ds:0xc6dc85c
  4264a7:	test   BYTE PTR [eax+0x584234ac],cl
  4264ad:	jae    0x4264f6
  4264af:	cs (bad) 
  4264b1:	sti    
  4264b2:	or     al,BYTE PTR [edx-0x32]
  4264b5:	shl    DWORD PTR gs:[ecx],0xae
  4264b9:	loope  0x42648c
  4264bb:	adc    BYTE PTR [edi-0x7],ch
  4264be:	xchg   DWORD PTR [eax-0x36bba8cd],ecx
  4264c4:	dec    esi
  4264c5:	and    DWORD PTR [edx-0x4],ecx
  4264c8:	or     BYTE PTR [ebx+ebp*4],dl
  4264cb:	test   BYTE PTR [ebx-0x4fbdd272],bh
  4264d1:	inc    ecx
  4264d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264d3:	and    DWORD PTR [edi-0x53],esp
  4264d6:	test   DWORD PTR [eax],edx
  4264d8:	mov    WORD PTR [ebp+0x74],gs
  4264db:	mov    BYTE PTR [edx-0x70],dl
  4264de:	inc    esp
  4264df:	add    ch,BYTE PTR [edi+0x105a7022]
  4264e5:	jmp    0x426506
  4264e7:	adc    al,0x84
  4264e9:	inc    esp
  4264ea:	add    ecx,DWORD PTR [ecx-0x4e]
  4264ed:	or     DWORD PTR [ebp-0x2],eax
  4264f0:	lods   eax,DWORD PTR ds:[esi]
  4264f1:	add    al,0xe0
  4264f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264f5:	inc    edx
  4264f6:	adc    al,0x3e
  4264f8:	jno    0x426521
  4264fa:	mov    edx,0xd9420704
  4264ff:	pop    edi
  426500:	and    al,0x21
  426502:	ror    DWORD PTR [edx],cl
  426504:	dec    esp
  426505:	adc    BYTE PTR [ebx+ebp*1+0x54],ch
  426509:	test   BYTE PTR [edx],ah
  42650b:	arpl   WORD PTR [edx+0x11],ax
  42650e:	sub    eax,0xe808faab
  426513:	pushf  
  426514:	adc    DWORD PTR [ebp+ebx*8+0x484285d6],eax
  42651b:	fdivr  QWORD PTR [edx+0x21]
  42651e:	jmp    DWORD PTR ds:0x241f10f6
  426524:	lods   eax,DWORD PTR ds:[esi]
  426525:	mov    al,bl
  426527:	mov    al,ds:0x311bc42
  42652c:	imul   ebx,DWORD PTR [edi],0xe8a24e74
  426532:	add    DWORD PTR [esi+eiz*8-0x5e],0xfac13722
  42653a:	inc    eax
  42653b:	inc    esp
  42653c:	aad    0xba
  42653e:	and    ah,BYTE PTR [ecx+ebp*2+0x77ad3b11]
  426545:	or     BYTE PTR [ebp-0x1cffb214],al
  42654b:	dec    edi
  42654c:	clc    
  42654d:	aas    
  42654e:	in     eax,dx
  42654f:	xor    BYTE PTR [eax],al
  426551:	addr16 mov ds:0x8ad2,al
  426555:	bnd ret 
  426557:	aaa    
  426558:	sti    
  426559:	add    eax,0x1eef2064
  42655e:	jbe    0x426520
  426560:	dec    edx
  426561:	es add al,0x1a
  426564:	add    ah,al
  426566:	std    
  426567:	adc    bl,BYTE PTR [ebx]
  426569:	add    eax,0xb6cf8fa
  42656e:	(bad)  
  42656f:	mov    ecx,esi
  426571:	mov    eax,0xa476dc00
  426576:	sbb    eax,0xcb8e0068
  42657b:	inc    esp
  42657c:	pop    es
  42657d:	mov    BYTE PTR [ecx-0x6e],bh
  426580:	in     eax,dx
  426581:	sbb    eax,0x33a742b
  426586:	fist   DWORD PTR fs:[esi+0x65908097]
  42658d:	mov    dl,0x1
  42658f:	inc    esp
  426590:	ret    0x8c33
  426593:	ret    
  426594:	adc    eax,0xfd70e005
  426599:	pop    es
  42659a:	jns    0x426547
  42659c:	inc    di
  42659e:	pusha  
  42659f:	loopne 0x426547
  4265a1:	push   ecx
  4265a2:	je     0x4265f3
  4265a4:	add    BYTE PTR [ecx-0x3f],dh
  4265a7:	ss jnp 0x426543
  4265aa:	cmp    ebx,DWORD PTR [edx-0x6985c54a]
  4265b0:	and    bh,0x1b
  4265b3:	aam    0xab
  4265b5:	enter  0x5583,0x3c
  4265b9:	cmp    ecx,esp
  4265bb:	sub    BYTE PTR [ebx+ebp*1-0xf8afb8f],0xba
  4265c3:	add    DWORD PTR [ebx],esi
  4265c5:	int    0x14
  4265c7:	inc    esi
  4265c8:	mov    bl,0x2d
  4265ca:	pushf  
  4265cb:	adc    BYTE PTR [esi+0x64],0xab
  4265cf:	cmp    al,BYTE PTR [ebx+0x5c]
  4265d2:	test   BYTE PTR [eax],al
  4265d4:	jb     0x42663b
  4265d6:	mov    gs,WORD PTR [ebp-0x43]
  4265d9:	jp     0x4265d9
  4265db:	loope  0x42661c
  4265dd:	mov    bh,0xcb
  4265df:	add    BYTE PTR [eax+0x7c],ah
  4265e2:	scas   eax,DWORD PTR es:[edi]
  4265e3:	stc    
  4265e4:	imul   esi
  4265e6:	mov    ch,0x1e
  4265e8:	jmp    0x4265a2
  4265ea:	adc    bl,BYTE PTR [esi+ebx*1+0x1679cd00]
  4265f1:	add    eax,0x7e0091f3
  4265f6:	test   BYTE PTR [edx+0x21],bl
  4265f9:	inc    eax
  4265fa:	cmp    eax,0xcc00f878
  4265ff:	inc    DWORD PTR [ecx+0x25]
  426602:	ja     0x4265e0
  426604:	shl    BYTE PTR [edi+0xa6f5902],1
  42660a:	xor    eax,DWORD PTR [ebx+0x371c40b3]
  426610:	jmp    0xa23fa115
  426615:	ins    DWORD PTR es:[edi],dx
  426616:	mov    ch,BYTE PTR [ebx-0x2c]
  426619:	jp     0x42661b
  42661b:	push   ds
  42661c:	push   edi
  42661d:	mov    DWORD PTR [esi+0x7c],edx
  426620:	enter  0x90cf,0x0
  426624:	jno    0x426601
  426626:	pop    ss
  426627:	cs sbb eax,0x573cca5
  42662d:	ficomp DWORD PTR [edi]
  42662f:	sbb    ebp,DWORD PTR [edi+0x700fc68]
  426635:	jge    0x4266ad
  426637:	aaa    
  426638:	icebp  
  426639:	repnz xchg ecx,eax
  42663b:	les    esp,FWORD PTR [ebx]
  42663d:	sub    DWORD PTR [eax-0x10],esi
  426640:	and    dl,ah
  426642:	inc    edx
  426643:	add    BYTE PTR [esp+eax*2+0x17],dl
  426647:	rcl    BYTE PTR [esi-0x7fcb383b],0xbc
  42664e:	mov    edi,0x6700b8f0
  426653:	lahf   
  426654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426655:	rcr    BYTE PTR [eax-0x67c53930],cl
  42665b:	push   ebp
  42665c:	add    BYTE PTR [edx-0x66],cl
  42665f:	jbe    0x426601
  426661:	in     al,dx
  426662:	stc    
  426663:	jp     0x426633
  426665:	mov    eax,0xdb590000
  42666a:	aam    0xfc
  42666c:	mov    ds:0x3e144d56,eax
  426671:	jge    0x4266b4
  426673:	cmp    BYTE PTR [ebx-0x11c0c8b],0xbe
  42667a:	cwde   
  42667b:	add    dh,al
  42667d:	js     0x426649
  42667f:	lea    ecx,[esi+0x2c]
  426682:	arpl   WORD PTR [eax+eiz*1+0x18002928],bx
  426689:	cmp    al,0x49
  42668b:	test   DWORD PTR [eax+0x5e],eax
  42668e:	push   0xa0720322
  426693:	and    DWORD PTR [edx-0x79756efa],esp
  426699:	inc    eax
  42669a:	or     eax,0xa000c20
  42669f:	clc    
  4266a0:	pop    eax
  4266a1:	cdq    
  4266a2:	pop    ebp
  4266a3:	xchg   edx,eax
  4266a4:	jnp    0x426705
  4266a6:	add    ebx,esp
  4266a8:	jecxz  0x4266ac
  4266aa:	mov    ds:0x7dd0489f,eax
  4266af:	in     al,dx
  4266b0:	lods   al,BYTE PTR ds:[esi]
  4266b1:	add    BYTE PTR [esi],bl
  4266b3:	push   0x52c6e6f6
  4266b8:	xchg   edx,eax
  4266b9:	sub    DWORD PTR [esi],ecx
  4266bb:	jmp    0xc0c9ab66
  4266c0:	xchg   BYTE PTR [edx+0xa],ah
  4266c3:	mov    ch,0xb1
  4266c5:	add    DWORD PTR [edx-0x6414cb49],esi
  4266cb:	leave  
  4266cc:	adc    BYTE PTR [eax-0x3b],ah
  4266cf:	add    BYTE PTR [bp+di-0x7f1f],dl
  4266d4:	jl     0x4266cb
  4266d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266d7:	xor    eax,0xd50b539
  4266dc:	idiv   BYTE PTR [edx-0x5c1c75ee]
  4266e2:	add    BYTE PTR [eax],al
  4266e4:	adc    eax,DWORD PTR [ecx-0x37]
  4266e7:	or     al,0xc6
  4266e9:	add    BYTE PTR [ecx+0x4b606e44],ch
  4266ef:	dec    esp
  4266f0:	aaa    
  4266f1:	sbb    eax,0xca00a17b
  4266f6:	pop    edx
  4266f7:	pop    ebp
  4266f8:	scas   eax,DWORD PTR es:[edi]
  4266f9:	(bad)  
  4266fa:	xor    bh,cl
  4266fc:	fnstcw WORD PTR [esi]
  4266fe:	push   es
  4266ff:	call   0x4b8cb785
  426704:	pop    ss
  426705:	sub    al,0xf0
  426707:	jo     0x426709
  426709:	or     al,0x0
  42670b:	add    dh,BYTE PTR [eax-0x44]
  42670e:	shl    BYTE PTR [edi-0x7a],cl
  426711:	mov    dh,0xe2
  426713:	dec    eax
  426714:	(bad)  
  426715:	out    0x0,eax
  426717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426718:	pop    edx
  426719:	mov    ds,WORD PTR [esi]
  42671b:	dec    ebx
  42671c:	jns    0x4266e6
  42671e:	cmp    al,0x9
  426720:	stc    
  426721:	cs xor eax,0xd1b700bc
  426727:	pop    eax
  426728:	repz push edi
  42672a:	call   0x35ce82f
  42672f:	loopne 0x426722
  426731:	out    0x2c,eax
  426733:	cmp    bh,bh
  426735:	in     al,0x5a
  426737:	jg     0x426739
  426739:	add    ebp,ebp
  42673b:	xchg   edi,eax
  42673c:	aas    
  42673d:	pop    ds
  42673e:	nop
  42673f:	imul   edi,DWORD PTR [eax],0x592d3600
  426745:	xor    dh,0xf9
  426748:	outs   dx,BYTE PTR ds:[esi]
  426749:	mov    DWORD PTR [eax],0x8cb7dc66
  42674f:	mov    dh,BYTE PTR [eax+0x2c03a8ac]
  426755:	ss gs jb 0x4267b5
  426759:	loop   0x42674b
  42675b:	lods   eax,DWORD PTR ds:[esi]
  42675c:	sbb    DWORD PTR [edx-0xc],eax
  42675f:	into   
  426760:	add    eax,0xb8cc9d55
  426765:	sbb    al,0x80
  426767:	pop    ebx
  426768:	in     al,dx
  426769:	jne    0x426704
  42676b:	add    BYTE PTR [ecx],dh
  42676d:	mov    edi,eax
  42676f:	mov    dh,0x85
  426771:	nop
  426772:	cmp    al,0x4d
  426774:	clc    
  426775:	enter  0xbb00,0xf0
  426779:	xchg   edx,eax
  42677a:	sar    BYTE PTR [edi+0x73dfe8],cl
  426780:	aam    0x9f
  426782:	mov    DWORD PTR [edx-0x7f],edi
  426785:	std    
  426786:	test   al,0x53
  426788:	add    BYTE PTR [edx-0x75],cl
  42678b:	mov    ah,0x58
  42678d:	jge    0x426734
  42678f:	imul   esi,DWORD PTR [ecx+0x3d],0x8d00f8df
  426796:	icebp  
  426797:	cwde   
  426798:	sahf   
  426799:	into   
  42679a:	and    al,0x10
  42679c:	add    cl,ah
  42679e:	jne    0x42680d
  4267a0:	in     al,dx
  4267a1:	mov    edx,0x130b183
  4267a6:	mov    ecx,0xa3ef8afc
  4267ab:	xor    eax,DWORD PTR [esp+esi*8+0x7e]
  4267af:	imul   eax,DWORD PTR [ebx],0x311640a4
  4267b5:	and    BYTE PTR [edi],bl
  4267b7:	cwde   
  4267b8:	add    edi,esp
  4267ba:	or     bh,BYTE PTR [edx]
  4267bc:	adc    DWORD PTR [esi],ebx
  4267be:	mov    ecx,esi
  4267c0:	dec    edi
  4267c1:	cdq    
  4267c2:	clc    
  4267c3:	add    BYTE PTR [ecx],al
  4267c5:	data16 (bad) 
  4267c7:	nop
  4267c8:	scas   al,BYTE PTR es:[edi]
  4267c9:	in     al,0x60
  4267cb:	in     al,dx
  4267cc:	adc    BYTE PTR [edx-0x7c114718],dl
  4267d2:	and    BYTE PTR [eax],bh
  4267d4:	and    eax,DWORD PTR [eax]
  4267d6:	leave  
  4267d7:	adc    al,0x76
  4267d9:	loop   0x42676f
  4267db:	adc    edx,edi
  4267dd:	ror    DWORD PTR [eax-0x370380a9],1
  4267e3:	push   cs
  4267e4:	lahf   
  4267e5:	lds    ebp,FWORD PTR [ebx+0x2df7c06a]
  4267eb:	in     eax,dx
  4267ec:	scas   eax,DWORD PTR es:[edi]
  4267ed:	pop    edx
  4267ee:	add    BYTE PTR [edi+0x54],ch
  4267f1:	data16 jp 0x426858
  4267f4:	jmp    0xf544c4ea
  4267f9:	cmp    eax,0xca5b92de
  4267fe:	loope  0x4267ca
  426800:	fbstp  TBYTE PTR [eax+0x4e]
  426803:	data16 add al,cl
  426806:	add    eax,0xc01596b0
  42680b:	stos   BYTE PTR es:[edi],al
  42680c:	push   ecx
  42680d:	add    BYTE PTR [ebx+ebx*1-0xa],ch
  426811:	out    dx,eax
  426812:	popf   
  426813:	ficomp WORD PTR [esi+esi*4+0x4e3c3f]
  42681a:	mov    ds:0x4b03e729,eax
  42681f:	in     eax,dx
  426820:	fild   WORD PTR [eax]
  426822:	cmp    dh,BYTE PTR [ebx]
  426824:	test   eax,0x9bd9270f
  426829:	or     eax,DWORD PTR [eax]
  42682b:	ret    0xaf53
  42682e:	mov    eax,ds:0x14e3b9d3
  426833:	add    DWORD PTR [eax],ebx
  426835:	int    0xc9
  426837:	hlt    
  426838:	dec    edx
  426839:	pop    esi
  42683a:	pop    esp
  42683b:	jo     0x426818
  42683d:	jnp    0x42683f
  42683f:	sub    edi,esp
  426841:	lahf   
  426842:	aam    0x3c
  426844:	popa   
  426845:	xor    al,0x49
  426847:	add    bl,ch
  426849:	inc    esi
  42684a:	in     eax,dx
  42684b:	push   ds
  42684c:	mov    ah,bl
  42684e:	hlt    
  42684f:	enter  0xff00,0xd3
  426853:	ja     0x4268b9
  426855:	aad    0xd9
  426857:	push   ecx
  426858:	mov    ecx,0xd04fb300
  42685d:	add    DWORD PTR [edi+0x8ecb3a],eax
  426863:	adc    DWORD PTR [ebp+0x696334fc],ecx
  426869:	imul   edx,DWORD PTR [esi+0x0],0xa
  42686d:	aam    0x89
  42686f:	pop    ds
  426870:	sbb    BYTE PTR [edx-0x76],bh
  426873:	adc    al,0x1e
  426875:	and    eax,eax
  426877:	jl     0x4268b6
  426879:	xor    ah,0xc9
  42687c:	call   0x89879f62
  426881:	sbb    eax,0x803b753c
  426886:	sub    al,0x74
  426888:	add    cl,BYTE PTR [eax-0x1b]
  42688b:	fadd   QWORD PTR [eax]
  42688d:	sbb    al,0xce
  42688f:	mov    ebp,0x6bf06116
  426894:	jl     0x4268b5
  426896:	lods   al,BYTE PTR ds:[esi]
  426897:	adc    al,0x1b
  426899:	shl    BYTE PTR [ecx],0x98
  42689c:	add    al,0xc3
  42689e:	es daa 
  4268a0:	add    BYTE PTR [ebp+ebx*2-0x3f035bd0],dl
  4268a7:	or     al,BYTE PTR [esi+0x410f4704]
  4268ad:	xor    edi,ebp
  4268af:	out    dx,al
  4268b0:	sub    BYTE PTR [ebp+0x4bc509],0xe2
  4268b7:	ret    0x9c12
  4268ba:	xchg   ecx,eax
  4268bb:	das    
  4268bc:	(bad)  
  4268be:	cmp    esi,esp
  4268c0:	imul   edi,ebx,0x1f
  4268c3:	xchg   BYTE PTR [edi+eiz*2+0x2c828ffc],al
  4268ca:	retf   0x3a24
  4268cd:	or     DWORD PTR [edx],eax
  4268cf:	(bad)  
  4268d0:	pop    esi
  4268d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268d2:	jge    0x4268d4
  4268d4:	lods   eax,DWORD PTR ds:[esi]
  4268d5:	pop    edi
  4268d6:	add    dh,bh
  4268d8:	icebp  
  4268d9:	pop    esp
  4268da:	jmp    0x1242c1c0
  4268df:	push   cs
  4268e0:	add    eax,0x48ad5eba
  4268e5:	cli    
  4268e6:	retf   0x3907
  4268e9:	xchg   edx,eax
  4268ea:	adc    eax,0x568577e5
  4268ef:	clc    
  4268f0:	add    BYTE PTR [esi+0x16],dh
  4268f3:	push   ebp
  4268f4:	in     al,0x27
  4268f6:	add    BYTE PTR [edi+ebp*1],dh
  4268f9:	popf   
  4268fa:	cld    
  4268fb:	sub    BYTE PTR [ecx-0xad2b78a],0x4
  426902:	pop    esi
  426903:	inc    esp
  426904:	pop    ss
  426905:	scas   eax,DWORD PTR es:[edi]
  426906:	lock add BYTE PTR [esi+0x6c652e],ch
  42690d:	add    dh,BYTE PTR [edx+0x6887ec]
  426913:	cmp    BYTE PTR [eax],bl
  426915:	add    edi,DWORD PTR [ecx+0x20b62e80]
  42691b:	cmp    ebx,eax
  42691d:	or     BYTE PTR [ebx],dl
  42691f:	aad    0x1a
  426921:	in     al,0x2
  426923:	outs   dx,BYTE PTR ds:[esi]
  426924:	out    0x4b,eax
  426926:	lock add BYTE PTR [edi-0x7c1389a8],cl
  42692d:	shl    BYTE PTR [edx+0x3a],1
  426930:	test   BYTE PTR [eax-0x11dfce3d],0x4a
  426937:	or     BYTE PTR ds:0x2bddde4,bl
  42693d:	dec    eax
  42693e:	ror    DWORD PTR [ebx+0x44bb002d],1
  426944:	test   esi,ebx
  426946:	xor    BYTE PTR ds:0x564020f3,0x8
  42694d:	jle    0x42697a
  42694f:	inc    ebp
  426950:	xor    DWORD PTR [edx],eax
  426952:	and    ebp,esp
  426954:	int    0x24
  426956:	add    BYTE PTR ds:0x80fd6a7c,bh
  42695c:	sub    ch,BYTE PTR [eax+0x20]
  42695f:	cmp    ecx,DWORD PTR [eax+0x1f]
  426962:	push   eax
  426963:	(bad)  
  426964:	lock pusha 
  426966:	or     al,ah
  426968:	mov    esi,0x90024942
  42696d:	cmp    dh,BYTE PTR [ecx]
  42696f:	push   ecx
  426970:	add    BYTE PTR [eax-0x5a],ah
  426973:	sub    eax,ebp
  426975:	adc    BYTE PTR [ebp+0x27],0x16
  426979:	in     al,0xa
  42697b:	sahf   
  42697c:	add    BYTE PTR [esi-0x77c75667],bl
  426982:	push   esi
  426983:	add    BYTE PTR ds:0x7414ebce,al
  426989:	jne    0x426952
  42698b:	xchg   ecx,eax
  42698c:	mov    al,0x43
  42698e:	add    dl,dh
  426990:	add    eax,DWORD PTR [edi]
  426992:	(bad)  
  426993:	(bad)  
  426994:	arpl   di,bp
  426996:	fiadd  WORD PTR [eax]
  426998:	ds xchg edi,eax
  42699a:	enter  0x5df9,0x93
  42699e:	fdivr  DWORD PTR [ebx+ecx*1-0x5c4892dd]
  4269a5:	add    BYTE PTR [ecx-0x5a84003c],dl
  4269ab:	add    eax,DWORD PTR [edx-0x5863ec1a]
  4269b1:	jge    0x426953
  4269b3:	sar    DWORD PTR [ecx+0xfe7cf8],1
  4269b9:	mov    ds:0x4c238378,eax
  4269be:	xor    DWORD PTR [ebp+0x72],ebx
  4269c1:	sbb    eax,0xcb76d83e
  4269c6:	dec    eax
  4269c7:	pop    ds
  4269c8:	add    BYTE PTR ds:0xb49e5045,bh
  4269ce:	add    BYTE PTR [ebp+0x34210699],ch
  4269d4:	push   cs
  4269d5:	into   
  4269d6:	add    BYTE PTR fs:[esi],dl
  4269d9:	push   ds
  4269da:	shr    eax,cl
  4269dc:	fcom   QWORD PTR [edi+eax*1+0x1d]
  4269e0:	aas    
  4269e1:	dec    ebx
  4269e2:	mov    BYTE PTR [ecx+0x1f7aec28],0x27
  4269e9:	inc    ebx
  4269ea:	aam    0x13
  4269ec:	mov    ds:0xfb7dc100,al
  4269f1:	push   edx
  4269f2:	xor    DWORD PTR [edi+0x5300658d],edx
  4269f8:	jb     0x426a06
  4269fa:	add    ebx,DWORD PTR [edx+0x4a324b77]
  426a00:	adc    ebp,eax
  426a02:	lods   eax,DWORD PTR ds:[esi]
  426a03:	jno    0x426a05
  426a05:	popf   
  426a06:	inc    eax
  426a07:	adc    al,cl
  426a09:	push   DWORD PTR [ebx]
  426a0b:	stos   DWORD PTR es:[edi],eax
  426a0c:	add    DWORD PTR [eax],0x4
  426a0f:	xorps  xmm0,XMMWORD PTR ds:0x8b887d4e
  426a16:	add    BYTE PTR [edx-0x45],ch
  426a19:	aad    0x67
  426a1b:	or     al,ch
  426a1d:	sub    BYTE PTR [edi-0x62fcb648],bl
  426a23:	rol    bh,cl
  426a25:	or     cl,bh
  426a27:	pop    es
  426a28:	clc    
  426a29:	adc    edi,edi
  426a2b:	ins    DWORD PTR es:[edi],dx
  426a2c:	cmp    al,0x10
  426a2e:	xchg   esi,eax
  426a2f:	sub    dh,0xb7
  426a32:	dec    ecx
  426a33:	lahf   
  426a34:	cmp    cl,BYTE PTR [esi]
  426a36:	xchg   edx,eax
  426a37:	add    BYTE PTR ds:0x1229a8f,ch
  426a3d:	mov    dh,0x35
  426a3f:	xlat   BYTE PTR ds:[ebx]
  426a40:	add    ecx,DWORD PTR [esi+0x7a597c68]
  426a46:	ret    
  426a47:	or     BYTE PTR ds:0xc6008341,0x8d
  426a4e:	outs   dx,BYTE PTR ds:[esi]
  426a4f:	push   0xfffffffc
  426a51:	add    DWORD PTR ds:0x50d5000a,esp
  426a57:	jmp    FWORD PTR [ecx+ecx*4]
  426a5a:	mov    eax,0x7009708
  426a5f:	mov    eax,ds:0xa2de5e1e
  426a64:	hlt    
  426a65:	or     DWORD PTR [eax],eax
  426a67:	fild   QWORD PTR [edi-0x5c]
  426a6a:	test   al,0x94
  426a6c:	shl    BYTE PTR [edx+0x57],cl
  426a6f:	sub    al,0xfe
  426a71:	or     esp,DWORD PTR [ecx]
  426a73:	add    bl,dl
  426a75:	jecxz  0x426a00
  426a77:	and    eax,0x291dac1c
  426a7c:	dec    eax
  426a7d:	and    ebp,DWORD PTR [esi+0x4c1a0200]
  426a83:	ffreep st(5)
  426a85:	add    BYTE PTR [esi-0x4f],al
  426a88:	fld    QWORD PTR ds:0x83cdca00
  426a8e:	enter  0x98c0,0xd3
  426a92:	mov    al,0xf6
  426a94:	mov    al,ds:0x613d6500
  426a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a9a:	addr16 jmp 0x52ad:0x48bfa7e9
  426aa2:	jne    0x426a24
  426aa4:	icebp  
  426aa5:	mov    WORD PTR ds:0x7e3b5134,es
  426aab:	inc    esp
  426aac:	add    bl,bl
  426aae:	mov    esp,0x8ede8103
  426ab3:	out    dx,al
  426ab4:	lahf   
  426ab5:	add    BYTE PTR [eax-0x3a0204f6],dh
  426abb:	sub    edx,DWORD PTR ds:0x591d03ee
  426ac1:	pop    es
  426ac2:	mov    ecx,0xf5814e6e
  426ac7:	ret    
  426ac8:	loopne 0x426ae8
  426aca:	push   eax
  426acb:	add    edi,DWORD PTR [edi]
  426acd:	rcr    BYTE PTR [esi-0x5b],1
  426ad0:	jo     0x426ab5
  426ad2:	test   al,0xf6
  426ad4:	outs   dx,WORD PTR ds:[esi]
  426ad6:	add    BYTE PTR [esi+0x7e],dl
  426ad9:	dec    edi
  426ada:	mov    BYTE PTR [edi],ch
  426adc:	sahf   
  426add:	sub    esp,eax
  426adf:	jne    0x426b03
  426ae1:	add    BYTE PTR [edi-0x3d2e8b1c],ch
  426ae7:	cmp    BYTE PTR [edx],dh
  426ae9:	jp     0x426aeb
  426aeb:	call   0xb0e1:0x9d184fde
  426af2:	and    BYTE PTR [edi],cl
  426af4:	(bad)  
  426af5:	pop    ecx
  426af6:	mov    fs,WORD PTR [ecx-0x9040a40]
  426afc:	add    DWORD PTR ds:0xdf7dc371,ecx
  426b02:	pop    es
  426b03:	imul   ebp,esp,0xffffffed
  426b06:	mov    ebx,0x60c21071
  426b0b:	in     eax,0x93
  426b0d:	in     al,0xc
  426b0f:	add    BYTE PTR [edx-0x56b4bc5d],ah
  426b15:	int3   
  426b16:	rcl    DWORD PTR [esi+eiz*8-0x2c61f118],0x2b
  426b1e:	lods   al,BYTE PTR ds:[esi]
  426b1f:	inc    eax
  426b20:	cmp    edi,DWORD PTR [eax+0xae8d7c]
  426b26:	mov    bl,0x99
  426b28:	jmp    0x1e94e8f3
  426b2d:	mov    ds:0x6f287a7d,eax
  426b32:	cmp    ch,cl
  426b34:	add    DWORD PTR [esi-0x43],eax
  426b37:	nop
  426b38:	jnp    0x426b4d
  426b3a:	sbb    al,0x26
  426b3c:	call   0xdb42d547
  426b41:	icebp  
  426b42:	jecxz  0x426b3d
  426b44:	dec    ebp
  426b45:	jg     0x426aca
  426b47:	mov    ebp,0xc315a401
  426b4c:	retf   
  426b4d:	or     eax,0xcc3035c7
  426b52:	daa    
  426b53:	add    BYTE PTR [ebp+0x1f],ah
  426b56:	cmp    eax,0x1e74950b
  426b5b:	pop    ebx
  426b5c:	add    BYTE PTR [ebx-0x4a],al
  426b5f:	push   esp
  426b60:	retf   0x5932
  426b63:	test   DWORD PTR ds:0xc5fcbd00,esp
  426b69:	add    dl,BYTE PTR [esi+0x1518e83]
  426b6f:	loope  0x426b75
  426b71:	imul   DWORD PTR [eax]
  426b73:	adc    bh,BYTE PTR [edx+edi*1-0x14]
  426b77:	dec    ecx
  426b78:	ins    DWORD PTR es:[edi],dx
  426b79:	add    cl,dh
  426b7b:	adc    al,0xeb
  426b7d:	aaa    
  426b7e:	pop    ebx
  426b7f:	sub    esp,ebp
  426b81:	mov    ebx,DWORD PTR [esi]
  426b83:	outs   dx,DWORD PTR ss:[esi]
  426b85:	mov    cl,0x87
  426b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b88:	fiadd  DWORD PTR [edi-0x80]
  426b8b:	(bad)  
  426b8c:	(bad)  
  426b8e:	inc    ecx
  426b8f:	add    cl,dh
  426b91:	fs add al,0x2e
  426b94:	xchg   ebx,eax
  426b95:	or     ebp,DWORD PTR [esi+0x18]
  426b98:	add    DWORD PTR [esi+ebx*2],esi
  426b9b:	mov    ebx,0xcecd2238
  426ba0:	in     al,0x23
  426ba2:	jno    0x426ba4
  426ba4:	push   edi
  426ba5:	je     0x426b96
  426ba7:	inc    ebx
  426ba8:	push   es
  426ba9:	xchg   esp,eax
  426baa:	add    DWORD PTR [edi+ebx*1+0x9cc4ee6],eax
  426bb1:	jnp    0x426b6d
  426bb3:	sbb    BYTE PTR [esi],0x57
  426bb6:	rol    DWORD PTR [edi-0x22],cl
  426bb9:	add    BYTE PTR ds:0xd1e506a6,al
  426bbf:	or     BYTE PTR [ebx+0x26ce00da],0x2c
  426bc6:	mov    ch,0x2e
  426bc8:	(bad)  
  426bca:	adc    eax,0x1d248
  426bcf:	cmp    BYTE PTR [ecx-0x319e98f6],bl
  426bd5:	cmp    al,0x2e
  426bd7:	push   eax
  426bd8:	out    0x0,al
  426bda:	test   BYTE PTR [edx-0x6dbd493d],ah
  426be0:	scas   eax,DWORD PTR es:[edi]
  426be1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426be2:	and    DWORD PTR [esi+0x29],esp
  426be5:	mov    ds:0x365f3810,eax
  426bea:	sub    eax,0x19
  426bed:	pop    esi
  426bee:	add    al,0x80
  426bf0:	nop
  426bf1:	push   edi
  426bf2:	cmp    al,0x49
  426bf4:	in     eax,0x0
  426bf6:	lods   al,BYTE PTR ds:[esi]
  426bf7:	popa   
  426bf8:	frstor [edi]
  426bfa:	xchg   bx,ax
  426bfc:	mov    esp,0x15fa9600
  426c01:	xchg   esp,eax
  426c02:	cmp    ebp,ebp
  426c04:	cmc    
  426c05:	dec    edx
  426c06:	add    bh,ah
  426c08:	rol    edi,1
  426c0a:	ss pop edx
  426c0c:	jle    0x426c38
  426c0e:	xchg   ebx,eax
  426c0f:	sbb    al,0xaf
  426c12:	add    BYTE PTR [ebx+edi*8+0x21],al
  426c16:	adc    eax,0xc330bb35
  426c1b:	jo     0x426bfa
  426c1d:	pop    es
  426c1e:	cmp    DWORD PTR [esi+eax*4+0x6a90d9eb],eax
  426c25:	daa    
  426c26:	sar    DWORD PTR [eax+eax*1+0x12],0x83
  426c2b:	call   0xa87dc25f
  426c30:	loopne 0x426c32
  426c32:	inc    esi
  426c33:	mov    ecx,0xf6a98db2
  426c38:	and    dl,BYTE PTR ds:0xc603530e
  426c3e:	cld    
  426c3f:	add    DWORD PTR [ebx+0x701a573d],esi
  426c45:	jns    0x426be3
  426c47:	pop    es
  426c48:	push   cs
  426c49:	fsubr  st,st(2)
  426c4b:	fcom   QWORD PTR [ecx]
  426c4d:	mov    al,0x9a
  426c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c50:	pop    edi
  426c51:	lea    eax,[eax]
  426c53:	and    bh,BYTE PTR [eax]
  426c55:	data16 (bad) [ecx+ebx*2-0x74]
  426c5a:	jl     0x426c5c
  426c5c:	mov    al,ds:0xfb61eddf
  426c61:	and    BYTE PTR [edi+eiz*4],ch
  426c64:	push   cs
  426c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c66:	retf   
  426c67:	fisub  WORD PTR [edi+0x3d]
  426c6a:	add    BYTE PTR [edi+0x272d7b86],bh
  426c70:	cmp    eax,0x1e0097b0
  426c75:	(bad)
  426c79:	adc    edi,DWORD PTR [ebp+0x3a]
  426c7c:	add    ebx,DWORD PTR [eax-0x3a9364c0]
  426c82:	scas   eax,DWORD PTR es:[edi]
  426c83:	mov    al,ds:0xa189ce
  426c88:	ss pop ss
  426c8a:	mov    esi,0xf6cb27df
  426c8f:	cmp    al,0x0
  426c91:	mov    bh,0x7
  426c93:	icebp  
  426c94:	dec    eax
  426c95:	xchg   edx,eax
  426c96:	std    
  426c97:	jb     0x426c24
  426c99:	add    BYTE PTR [edx+0x341a3e7e],cl
  426c9f:	push   eax
  426ca0:	jl     0x426c40
  426ca2:	sbb    eax,0x40436cd8
  426ca7:	cld    
  426ca8:	pop    esi
  426ca9:	je     0x426c5e
  426cab:	sub    ebx,DWORD PTR [ecx]
  426cad:	add    BYTE PTR [edx-0x4d645f42],ah
  426cb3:	xor    BYTE PTR [ebx],dh
  426cb5:	ret    
  426cb6:	aas    
  426cb7:	push   ecx
  426cb8:	push   es
  426cb9:	jbe    0x426cbb
  426cbb:	pop    edx
  426cbc:	arpl   WORD PTR ds:[ebx],di
  426cbf:	scas   al,BYTE PTR es:[edi]
  426cc0:	fisubr DWORD PTR [edx-0x7c]
  426cc3:	add    bl,al
  426cc5:	gs neg BYTE PTR es:0x58806036
  426ccd:	add    al,0x0
  426ccf:	push   edi
  426cd0:	cli    
  426cd1:	jns    0x426c83
  426cd3:	sbb    DWORD PTR [ecx],esp
  426cd5:	loop   0x426d16
  426cd7:	add    eax,DWORD PTR [ecx-0x29]
  426cda:	mov    esi,0x7c90fc32
  426ce0:	jbe    0x426d17
  426ce2:	add    BYTE PTR [edx],ah
  426ce4:	jo     0x426d65
  426ce6:	mov    al,ds:0xe2b4a94c
  426ceb:	in     al,0x60
  426ced:	add    ch,al
  426cef:	in     eax,dx
  426cf0:	aam    0x62
  426cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cf3:	xchg   BYTE PTR [esi],dh
  426cf5:	loopne 0x426d6b
  426cf7:	adc    eax,0xfd00f273
  426cfc:	scas   al,BYTE PTR es:[edi]
  426cfd:	jno    0x426d2b
  426cff:	mov    esp,0x2f8ee90
  426d04:	or     al,0x3d
  426d06:	mov    DWORD PTR [esi+0x57],edx
  426d09:	inc    edi
  426d0a:	aad    0x0
  426d0c:	lods   eax,DWORD PTR ds:[esi]
  426d0d:	xchg   DWORD PTR [ebx],edx
  426d0f:	or     cl,dl
  426d11:	push   cs
  426d12:	loope  0x426d6c
  426d14:	nop
  426d15:	cli    
  426d16:	ror    dl,0x2a
  426d19:	shl    BYTE PTR [esi-0x2a],cl
  426d1c:	cmp    ebp,DWORD PTR [ecx-0x340f7ce3]
  426d22:	push   cs
  426d23:	out    dx,al
  426d24:	neg    BYTE PTR [ecx-0xbd2ff]
  426d2a:	sub    BYTE PTR ds:0x3c7577cf,al
  426d30:	and    eax,edx
  426d32:	add    BYTE PTR [ebp+0x61808424],bh
  426d38:	lds    esp,FWORD PTR [edx+0x7600c0c6]
  426d3e:	inc    esi
  426d3f:	add    eax,edi
  426d41:	pusha  
  426d42:	fmul   DWORD PTR [edi]
  426d44:	leave  
  426d45:	jne    0x426ccf
  426d47:	mov    bh,0x9a
  426d49:	in     eax,dx
  426d4a:	add    cl,dl
  426d4c:	aaa    
  426d4d:	inc    eax
  426d4e:	cmp    eax,0x2d04796e
  426d53:	add    BYTE PTR [edi+0x2b],ch
  426d56:	rol    BYTE PTR [ebx+0x72],0xe9
  426d5a:	out    dx,eax
  426d5b:	push   ss
  426d5c:	popf   
  426d5d:	push   eax
  426d5e:	lods   eax,DWORD PTR ds:[esi]
  426d5f:	add    dl,ch
  426d61:	arpl   WORD PTR [ebx-0x6f],bp
  426d64:	xor    DWORD PTR [ecx],edi
  426d66:	pop    ds
  426d67:	retf   0x8a00
  426d6a:	cs sbb al,0x21
  426d6d:	dec    ebx
  426d6e:	sbb    DWORD PTR [esi+0x4],ecx
  426d71:	add    BYTE PTR [eax+0x37],dl
  426d74:	mov    eax,ds:0x8447c64c
  426d79:	pop    DWORD PTR [eax]
  426d7b:	imul   ebp,DWORD PTR [eax],0x64b79218
  426d81:	jne    0x426d1d
  426d83:	dec    edx
  426d84:	dec    ebp
  426d85:	test   al,0xad
  426d87:	or     BYTE PTR [edi-0x58],dl
  426d8a:	mov    esi,0x10307f42
  426d8f:	jb     0x426e0c
  426d91:	mov    BYTE PTR [eax+0x1264410],al
  426d97:	and    bl,BYTE PTR [esi-0x5f16eec8]
  426d9d:	das    
  426d9e:	or     ch,dh
  426da0:	rcl    DWORD PTR [ebp+0x42],cl
  426da3:	xor    eax,0x951910e5
  426da8:	test   BYTE PTR [eax-0x521740bb],dl
  426dae:	push   0x50
  426db0:	mov    BYTE PTR [edx-0x7bbabb79],dl
  426db6:	and    bh,BYTE PTR [ebx+0x73]
  426db9:	adc    DWORD PTR [eax+0x5c],edi
  426dbc:	popf   
  426dbd:	or     dh,bh
  426dbf:	es dec ecx
  426dc1:	inc    edx
  426dc2:	inc    DWORD PTR [ebx+edx*1]
  426dc5:	mov    edx,0x76f21ab
  426dca:	xchg   edi,eax
  426dcb:	adc    BYTE PTR [ebx+0x7789f149],bl
  426dd1:	xor    esp,ebx
  426dd3:	jg     0x426d95
  426dd5:	lods   eax,DWORD PTR ds:[esi]
  426dd6:	bnd jo 0x426dd6
  426dd9:	mov    BYTE PTR [eax-0x20],bl
  426ddc:	inc    esp
  426ddd:	or     edi,DWORD PTR [edx+0x22]
  426de0:	xchg   ecx,eax
  426de1:	or     dl,BYTE PTR [ecx]
  426de3:	inc    ecx
  426de4:	mov    DWORD PTR [eax+ecx*1-0x7be91bfe],ebp
  426deb:	or     bl,bh
  426ded:	leave  
  426dee:	inc    edx
  426def:	sbb    edx,eax
  426df1:	pop    ecx
  426df2:	and    eax,esi
  426df4:	mov    ds:0xfd611015,eax
  426df9:	les    ecx,FWORD PTR [eax-0x77bb33a5]
  426dff:	jle    0x426e23
  426e01:	push   esp
  426e02:	lahf   
  426e03:	adc    BYTE PTR [esi+0x63],ah
  426e06:	fadd   QWORD PTR [ebp+ebx*2+0xa4f21c4]
  426e0d:	or     bh,cl
  426e0f:	inc    esp
  426e10:	mov    ds,WORD PTR [edx]
  426e12:	and    cl,BYTE PTR [ecx-0x40]
  426e15:	mul    BYTE PTR [edx+0x227ad744]
  426e1b:	adc    BYTE PTR [esi],0x39
  426e1e:	jmp    0x426e5f
  426e20:	inc    edx
  426e21:	adc    BYTE PTR ds:0xb32e8497,bh
  426e27:	inc    edx
  426e28:	sbb    eax,0x78215c57
  426e2d:	data16 xchg BYTE PTR [eax],dl
  426e30:	pandn  mm0,QWORD PTR [eax+ecx*4]
  426e34:	sub    eax,0xea2944e0
  426e39:	and    bl,BYTE PTR [esp+eiz*4]
  426e3c:	adc    edi,ebx
  426e3e:	jecxz  0x426e4c
  426e40:	or     ch,dl
  426e42:	xchg   edi,edx
  426e44:	test   BYTE PTR [esi+0x57],dh
  426e47:	test   BYTE PTR [edx+0x58],0x17
  426e4b:	test   eax,0x47e5c42e
  426e50:	inc    edx
  426e51:	mov    al,0x95
  426e53:	shl    BYTE PTR [ecx],0x70
  426e56:	xor    eax,0xed1100c9
  426e5b:	sub    BYTE PTR [ecx],al
  426e5d:	mov    ah,0xc7
  426e5f:	shl    BYTE PTR [eax-0x165e69b8],cl
  426e65:	cwde   
  426e66:	ret    
  426e67:	shr    BYTE PTR [ecx-0x69],0x2d
  426e6b:	cmp    ah,cl
  426e6d:	mov    edi,0x87b5c000
  426e72:	(bad)  
  426e73:	aad    0x3c
  426e75:	rol    BYTE PTR [edx],1
  426e77:	jp     0x426eab
  426e79:	inc    ebx
  426e7a:	mov    eax,0x7ee4d1
  426e7f:	add    al,cl
  426e81:	repnz push ebx
  426e83:	push   cs
  426e84:	lea    ecx,[edi-0x35b9c800]
  426e8a:	jmp    0xb501:0xd4f62b6b
  426e91:	dec    edx
  426e92:	jbe    0x426e1b
  426e94:	ss xor al,0xc9
  426e97:	outs   dx,DWORD PTR ds:[esi]
  426e98:	inc    eax
  426e99:	add    al,cl
  426e9b:	mov    ds:0x84a6e7,eax
  426ea0:	imul   eax,DWORD PTR [edx],0xffffff99
  426ea3:	jp     0x426ede
  426ea5:	cli    
  426ea6:	cs jmp 0x426ef4
  426ea9:	loopne 0x426e6b
  426eab:	add    BYTE PTR [edx-0x2aff4c6f],ch
  426eb1:	mov    ah,0x4a
  426eb3:	sub    ecx,DWORD PTR [edi]
  426eb5:	pop    ecx
  426eb6:	fidivr DWORD PTR [ecx]
  426eb8:	sbb    eax,0xcf94806a
  426ebd:	and    al,0xb1
  426ebf:	pusha  
  426ec0:	lahf   
  426ec1:	aam    0x89
  426ec3:	icebp  
  426ec4:	lea    eax,[eax]
  426ec6:	test   BYTE PTR [eax+edi*2],dl
  426ec9:	je     0x426e92
  426ecb:	test   eax,0x992542b5
  426ed0:	pop    esi
  426ed1:	aam    0xad
  426ed3:	add    bh,ch
  426ed5:	adc    eax,0x7e93974a
  426eda:	adc    DWORD PTR [ebx-0x1be8172a],eax
  426ee0:	loope  0x426f00
  426ee2:	adc    al,0x0
  426ee4:	mov    eax,ds:0x3f88d912
  426ee9:	into   
  426eea:	add    BYTE PTR [esi],cl
  426eec:	mov    al,0xdb
  426eee:	sub    al,0x9d
  426ef0:	lahf   
  426ef1:	mov    ah,0x4c
  426ef3:	adc    esp,DWORD PTR [edi]
  426ef5:	test   DWORD PTR [edi-0x38b2ff40],esp
  426efb:	sti    
  426efc:	mov    BYTE PTR [esi],cl
  426efe:	add    BYTE PTR [eax+ebx*1+0x1f],0x22
  426f03:	push   esp
  426f04:	cmc    
  426f05:	adc    DWORD PTR [edx],ecx
  426f07:	or     BYTE PTR [ecx-0x3c7541f8],bh
  426f0d:	test   BYTE PTR [edx-0x1a],dl
  426f10:	sbb    eax,DWORD PTR [edx+0x1]
  426f13:	popa   
  426f14:	pop    edi
  426f15:	and    DWORD PTR [edi-0x76efa2b7],edi
  426f1b:	mov    dl,0x6
  426f1d:	mov    BYTE PTR [edx+edx*4],ah
  426f20:	loope  0x426f33
  426f22:	or     DWORD PTR [ebp-0x22],edx
  426f25:	and    DWORD PTR [ecx-0x80],esp
  426f28:	xor    edx,DWORD PTR [eax]
  426f2a:	(bad)  
  426f2b:	push   ecx
  426f2c:	imul   ecx,DWORD PTR [eax-0x70bbdb51],0x34
  426f33:	and    ch,BYTE PTR [esi+0x357e1160]
  426f39:	sbb    al,0x8
  426f3b:	dec    ebp
  426f3c:	jne    0x426f07
  426f3e:	test   BYTE PTR ds:0xe0427004,al
  426f44:	dec    esi
  426f45:	sub    BYTE PTR [edi],0x84
  426f48:	xor    BYTE PTR [esi-0x25f758b2],bh
  426f4e:	sahf   
  426f4f:	xchg   ecx,eax
  426f50:	push   ecx
  426f51:	test   BYTE PTR [eax],cl
  426f53:	push   edx
  426f54:	adc    esi,DWORD PTR [ecx-0x169e14fe]
  426f5a:	fiadd  DWORD PTR [eax]
  426f5c:	or     al,0x7e
  426f5e:	push   eax
  426f5f:	add    BYTE PTR gs:[eax+0x4692f94e],bh
  426f66:	imul   ebx,DWORD PTR [edx-0x3d91fe30],0xe08abd1f
  426f70:	push   cs
  426f71:	loopne 0x426f8b
  426f73:	inc    eax
  426f74:	add    al,0x1b
  426f76:	adc    al,0x8c
  426f78:	xlat   BYTE PTR ds:[ebx]
  426f79:	scas   al,BYTE PTR es:[di]
  426f7b:	sub    BYTE PTR [ebp+0x12042e6],0xf8
  426f82:	xor    ch,BYTE PTR [ebx-0x1d]
  426f85:	jo     0x426f58
  426f87:	dec    ebx
  426f88:	jmp    0x45d453b2
  426f8d:	add    BYTE PTR [eax+0x1292af17],ch
  426f93:	test   BYTE PTR [eax-0x2377c620],bh
  426f99:	sub    BYTE PTR [eax],0xe9
  426f9c:	cmp    DWORD PTR [eax],0x2a
  426f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fa0:	enter  0x321e,0x2c
  426fa4:	or     al,0x40
  426fa6:	pop    ds
  426fa7:	sbb    BYTE PTR [edx+0x7da94f],ah
  426fad:	cli    
  426fae:	and    DWORD PTR [edi-0x3ac241b8],ebp
  426fb4:	sub    eax,0x364948
  426fb9:	data16 (bad) 
  426fbb:	shl    BYTE PTR [esp+ebx*1],cl
  426fbe:	push   ebp
  426fbf:	adc    BYTE PTR [eax],al
  426fc1:	lock adc eax,0x2aa2a78b
  426fc7:	ret    0x57
  426fca:	xchg   esp,eax
  426fcb:	mov    edx,0xdc6ea6c0
  426fd0:	pop    ss
  426fd1:	sub    eax,DWORD PTR [eax]
  426fd3:	jnp    0x426fe4
  426fd5:	or     al,0xe2
  426fd7:	sbb    BYTE PTR [edx-0x41],dl
  426fda:	mov    dh,0x0
  426fdc:	scas   al,BYTE PTR es:[edi]
  426fdd:	adc    eax,0xa190a971
  426fe2:	and    DWORD PTR ds:0x39982303,ecx
  426fe8:	mov    bh,0xa4
  426fea:	dec    ebx
  426feb:	loopne 0x42700d
  426fed:	call   0x75188ddc
  426ff2:	out    0xc0,al
  426ff4:	out    0x52,eax
  426ff6:	cmp    BYTE PTR [edx-0x5d86723d],bl
  426ffc:	add    BYTE PTR [ebp+0x1ecaa8d1],al
  427002:	adc    ch,cl
  427004:	mov    edi,0xd57b3f00
  427009:	push   edi
  42700a:	dec    ebp
  42700b:	(bad)  
  42700c:	push   cs
  42700d:	scas   al,BYTE PTR es:[edi]
  42700e:	add    ecx,DWORD PTR [edi-0x68]
  427011:	pop    edi
  427012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427013:	addr16 test eax,0x657ae2b0
  427019:	add    bh,ah
  42701b:	pop    esi
  42701c:	mov    eax,ds:0x3ffc9e8
  427021:	inc    edi
  427022:	add    BYTE PTR [ecx-0x59],dh
  427025:	lods   eax,DWORD PTR ds:[esi]
  427026:	popf   
  427027:	cmp    dh,dh
  427029:	mov    ecx,0xe82e4fc6
  42702e:	lods   eax,DWORD PTR ds:[esi]
  42702f:	add    ch,dh
  427031:	xor    DWORD PTR [esi],eax
  427033:	jnp    0x4270ac
  427035:	repnz push 0x86dd9501
  42703b:	loop   0x426fd7
  42703d:	jmp    0x6ac3444e
  427042:	add    ch,ch
  427044:	mov    ebx,0x435d5f5b
  427049:	mov    esi,db2
  42704c:	inc    esi
  42704d:	cmp    dl,BYTE PTR [edx-0x20]
  427050:	inc    esp
  427051:	sub    BYTE PTR [eax],al
  427053:	gs xchg esi,ecx
  427056:	mov    cl,0x9a
  427058:	ficom  DWORD PTR [ebp+0xf]
  42705b:	add    BYTE PTR [ecx],al
  42705d:	push   ds
  42705e:	pop    ebp
  42705f:	or     edx,DWORD PTR [esi+0x2066d7]
  427065:	xchg   ecx,eax
  427066:	sti    
  427067:	xchg   esp,eax
  427068:	add    eax,DWORD PTR [ebp+0x107d27e]
  42706e:	popf   
  42706f:	cmp    DWORD PTR [eax+0x6be052f],ecx
  427075:	icebp  
  427076:	mov    edx,0xf244c00
  42707b:	add    BYTE PTR [ebx-0x5f7074e4],al
  427081:	xor    BYTE PTR [ebp+0x61551e14],bh
  427087:	sub    eax,0xe30be684
  42708c:	add    al,0xf9
  42708e:	add    BYTE PTR [ecx-0x2df0ae60],0x5f
  427095:	dec    eax
  427096:	lods   eax,DWORD PTR ds:[esi]
  427097:	iret   
  427098:	(bad)  
  427099:	or     DWORD PTR [ebp-0x22],esi
  42709c:	cmp    eax,0x11ef00b8
  4270a1:	repnz test BYTE PTR ss:[ecx+0x24],dh
  4270a6:	or     DWORD PTR [ebx],ebx
  4270a8:	push   0x43807014
  4270ad:	pop    edi
  4270ae:	sti    
  4270af:	cmp    dl,ah
  4270b1:	add    eax,0xb0764c39
  4270b6:	cmp    eax,0x83f59ac0
  4270bb:	inc    edi
  4270bc:	jo     0x427127
  4270be:	push   cs
  4270bf:	push   esi
  4270c0:	sti    
  4270c1:	inc    ah
  4270c3:	and    al,bl
  4270c5:	in     al,0x17
  4270c7:	scas   al,BYTE PTR es:[edi]
  4270c8:	jl     0x4270ca
  4270ca:	aad    0x8b
  4270cc:	xchg   ebp,eax
  4270cd:	mov    ch,0x9c
  4270cf:	jne    0x427080
  4270d1:	xchg   esi,eax
  4270d2:	add    bh,BYTE PTR [ecx+0x3]
  4270d5:	cld    
  4270d6:	jo     0x4270e0
  4270d8:	fcmovb st,st(0)
  4270da:	fs inc ecx
  4270dc:	mov    ah,0x0
  4270de:	jl     0x4270eb
  4270e0:	loopne 0x4270af
  4270e2:	sub    al,0x80
  4270e4:	or     al,BYTE PTR [ecx+0x3e446758]
  4270ea:	in     al,dx
  4270eb:	add    BYTE PTR [edx-0x7],dl
  4270ee:	mov    eax,0x98eb9f0d
  4270f3:	add    BYTE PTR [ebp-0x27],bl
  4270f6:	cs pushf 
  4270f8:	pop    ebx
  4270f9:	in     eax,0x6c
  4270fb:	mov    BYTE PTR [eax],al
  4270fd:	neg    BYTE PTR [ebp+edx*1+0x30]
  427101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427102:	loopne 0x42712f
  427104:	cmp    BYTE PTR [eax],al
  427106:	cmp    eax,0x35a78e9f
  42710b:	push   ecx
  42710c:	fs mov ch,0x0
  42710f:	mov    BYTE PTR [eax+ebx*2],ah
  427112:	xchg   ecx,ecx
  427114:	and    BYTE PTR [ebp+0x48],ah
  427117:	pop    es
  427118:	and    DWORD PTR [edx+edi*2],ecx
  42711b:	jnp    0x4270b1
  42711d:	repz jno 0x4270aa
  427120:	icebp  
  427121:	push   0x3d6ec0cc
  427126:	popf   
  427127:	shr    BYTE PTR [ebp-0x7490ba00],1
  42712d:	dec    edx
  42712e:	or     ah,bh
  427130:	rol    BYTE PTR [eax+0x237ced00],1
  427136:	adc    BYTE PTR [edi+edi*4-0xf],al
  42713a:	(bad)  
  42713b:	or     BYTE PTR ds:0xb9cfe0,bh
  427141:	push   esi
  427142:	and    eax,0x81a8d3b2
  427147:	add    BYTE PTR [edi-0x4d],ch
  42714a:	mov    ch,0x99
  42714c:	cli    
  42714d:	test   eax,esp
  42714f:	fadd   QWORD PTR [eax]
  427151:	ret    0xe30e
  427154:	or     DWORD PTR [eax+edi*1+0xd5cc1d9],ebp
  42715b:	repz add al,dl
  42715e:	xchg   esi,eax
  42715f:	push   esp
  427160:	out    dx,eax
  427161:	pop    edx
  427162:	test   al,0xae
  427164:	mov    eax,0xdb1b258b
  427169:	jp     0x42716b
  42716b:	add    ch,cl
  42716d:	xlat   BYTE PTR ds:[ebx]
  42716e:	add    bh,BYTE PTR [eax-0x44eef00d]
  427174:	add    BYTE PTR [ebx+0xe65eb92],cl
  42717a:	inc    esi
  42717b:	sbb    ch,0x0
  42717e:	push   ss
  42717f:	call   0x5038:0x7377c38e
  427186:	loopne 0x4271ef
  427188:	add    cl,bl
  42718a:	lods   al,BYTE PTR ds:[esi]
  42718b:	adc    BYTE PTR [ebx],bl
  42718d:	out    dx,eax
  42718e:	imul   eax,DWORD PTR [ecx+0x7d],0x1e
  427192:	cmp    edi,ebx
  427194:	dec    ebx
  427195:	mov    DWORD PTR [edx-0x58dcac2a],0xd180c111
  42719f:	cmp    eax,eax
  4271a1:	add    BYTE PTR [edi-0x27ae7a5e],al
  4271a7:	xchg   ah,al
  4271a9:	stos   DWORD PTR es:[edi],eax
  4271aa:	lods   al,BYTE PTR ds:[esi]
  4271ab:	adc    ebp,DWORD PTR ds:0xbc012f
  4271b1:	push   cs
  4271b2:	mov    ah,0x91
  4271b4:	rol    DWORD PTR [edx+0x78],1
  4271b7:	and    al,0xd
  4271b9:	and    BYTE PTR [esi],cl
  4271bb:	(bad)  
  4271bc:	pop    eax
  4271bd:	push   ss
  4271be:	loop   0x427197
  4271c0:	add    BYTE PTR [esi+0x49a2949c],bl
  4271c6:	mov    ds:0xcb3aa4ca,eax
  4271cb:	jmp    0x6972bd14
  4271d0:	sbb    BYTE PTR [esi],dl
  4271d2:	sub    eax,0x970095f9
  4271d7:	pop    es
  4271d8:	sbb    al,0x29
  4271da:	fwait
  4271db:	push   ebx
  4271dc:	xlat   BYTE PTR ds:[ebx]
  4271dd:	fs add bh,dh
  4271e0:	dec    ebx
  4271e1:	repnz in al,0x43
  4271e4:	cli    
  4271e5:	ja     0x427167
  4271e7:	add    BYTE PTR [ecx],cl
  4271e9:	in     al,dx
  4271ea:	shl    DWORD PTR [ebx+0x0],0x3a
  4271ee:	mov    BYTE PTR [edx-0x5],bh
  4271f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271f2:	push   esi
  4271f3:	aad    0x49
  4271f5:	add    BYTE PTR [edx+ebp*1],cl
  4271f8:	mov    WORD PTR [esi+ecx*1+0x22fa6098],?
  4271ff:	mov    edi,0x68e90019
  427204:	mov    edx,0xcf07ac16
  427209:	fadd   DWORD PTR [edx]
  42720b:	inc    bl
  42720d:	jmp    DWORD PTR [ecx+0x73]
  427210:	xchg   ebx,eax
  427211:	and    BYTE PTR [ecx-0x49],cl
  427214:	imul   ebp,DWORD PTR [esi],0x59004a71
  42721a:	push   ss
  42721b:	push   ecx
  42721c:	xchg   BYTE PTR [ecx+0x8cf5d2],dl
  427222:	adc    BYTE PTR [edx],bh
  427224:	gs in  eax,dx
  427226:	and    eax,0x43e07f7
  42722c:	aad    0x80
  42722e:	or     esi,ecx
  427230:	sbb    ecx,DWORD PTR [esi-0x50]
  427233:	push   edi
  427234:	jne    0x427252
  427236:	fist   WORD PTR [eax-0x23]
  427239:	inc    ebx
  42723a:	xchg   ecx,eax
  42723b:	pop    es
  42723c:	mov    eax,ds:0x1d968813
  427241:	sbb    BYTE PTR [esi],0xbb
  427244:	scas   al,BYTE PTR es:[edi]
  427245:	imul   ebp,DWORD PTR [ebp-0x30],0x57f93c70
  42724c:	add    dl,dh
  42724e:	sub    al,0xe
  427250:	shr    DWORD PTR [esi+0x48],1
  427253:	fild   WORD PTR [eax]
  427255:	push   0x634e5406
  42725a:	int3   
  42725b:	imul   cl
  42725d:	add    BYTE PTR [eax],bl
  42725f:	xchg   BYTE PTR [ebx+0x4cce21b7],cl
  427265:	aam    0x0
  427267:	xchg   ecx,eax
  427268:	(bad)  
  427269:	inc    BYTE PTR [esi+0x14]
  42726c:	dec    edx
  42726d:	cs test eax,0x8e073e
  427273:	cmp    dh,BYTE PTR [edx-0x512e6573]
  427279:	outs   dx,DWORD PTR ds:[esi]
  42727a:	add    al,0x86
  42727c:	call   0xc06fb02d
  427281:	adc    ebp,ebx
  427283:	cmp    dh,ah
  427285:	hlt    
  427286:	(bad)  
  427287:	jns    0x42722c
  427289:	or     al,0x4
  42728b:	hlt    
  42728c:	(bad)  
  42728d:	aaa    
  42728e:	cli    
  42728f:	ret    0x450e
  427292:	lods   al,BYTE PTR ds:[esi]
  427293:	jbe    0x427221
  427295:	and    BYTE PTR [edi+0x7e],al
  427298:	jne    0x427293
  42729a:	mov    bh,0x0
  42729c:	adc    eax,0x2b95eeaf
  4272a1:	cmp    bh,BYTE PTR [ecx+0x71cc0112]
  4272a7:	pop    ebp
  4272a8:	mov    al,0x23
  4272aa:	mov    dh,0x50
  4272ac:	jo     0x4272ae
  4272ae:	xor    eax,0xc044b05
  4272b3:	shr    BYTE PTR [edx-0x3d],1
  4272b6:	xor    al,0x22
  4272b8:	sar    ch,0xc6
  4272bb:	rol    BYTE PTR ds:0xdfd4ef92,cl
  4272c1:	mov    al,ds:0x6b4d5280
  4272c6:	mov    ah,0xe2
  4272c8:	sub    BYTE PTR [eax],al
  4272ca:	iret   
  4272cb:	outs   dx,BYTE PTR ds:[esi]
  4272cc:	(bad)  
  4272ce:	adc    eax,0x4f1822
  4272d3:	adc    BYTE PTR [eax],0x5f
  4272d6:	pop    ebx
  4272d7:	lods   eax,DWORD PTR ds:[esi]
  4272d8:	test   cl,0x6
  4272db:	add    BYTE PTR [ebp+0x62],bh
  4272de:	loopne 0x427280
  4272e0:	pop    ss
  4272e1:	push   edi
  4272e2:	dec    edx
  4272e3:	repnz add BYTE PTR [ecx-0x1e],cl
  4272e7:	pop    ds
  4272e8:	mov    ebp,?
  4272ea:	cdq    
  4272eb:	in     eax,dx
  4272ec:	jmp    0x5a21:0x79933d
  4272f3:	mov    esp,0xa4be653e
  4272f8:	add    eax,0xdb173bae
  4272fd:	add    bh,BYTE PTR [edx-0x7c6752f8]
  427303:	or     cl,BYTE PTR [edx+eiz*1+0x60]
  427307:	test   al,0xc5
  427309:	ret    
  42730a:	loope  0x427310
  42730c:	sub    dh,bl
  42730e:	push   eax
  42730f:	shl    DWORD PTR [edx-0x110330fc],cl
  427315:	mov    BYTE PTR [ebp-0x38c2c1c2],ch
  42731b:	pop    es
  42731c:	loop   0x42735a
  42731e:	push   DWORD PTR [eax+0x2d435050]
  427324:	iret   
  427325:	pop    es
  427326:	addr16 and eax,0xc0bc39d8
  42732c:	pop    ecx
  42732d:	xlat   BYTE PTR ds:[ebx]
  42732e:	gs add BYTE PTR ss:[ecx],dh
  427332:	inc    esi
  427333:	sbb    ch,dl
  427335:	xchg   ebp,eax
  427336:	mov    bh,0x47
  427338:	inc    ebx
  427339:	mov    ds,WORD PTR ds:[edx-0x71]
  42733d:	mov    WORD PTR ds:0xecfbe0a8,cs
  427343:	js     0x427324
  427345:	push   edi
  427346:	add    BYTE PTR [edi],dh
  427348:	fdivr  st(1),st
  42734a:	adc    BYTE PTR [ebp+0x2e],bh
  42734d:	mov    ecx,DWORD PTR [eax+eax*1-0x3521fe6e]
  427354:	sbb    ah,ch
  427356:	cld    
  427357:	out    0x1c,al
  427359:	sub    al,0x59
  42735b:	test   al,0x97
  42735e:	int    0xfa
  427360:	popf   
  427361:	push   ebp
  427362:	out    dx,al
  427363:	add    BYTE PTR [eax+edi*4-0x7d],dh
  427367:	lahf   
  427368:	stos   BYTE PTR es:[edi],al
  427369:	inc    esi
  42736a:	pop    ebx
  42736b:	adc    BYTE PTR [eax],al
  42736d:	popa   
  42736e:	repnz loop 0x42732f
  427371:	ins    DWORD PTR es:[edi],dx
  427372:	lea    edi,[ebp+0x4072002c]
  427378:	lock xor eax,DWORD PTR [edi+0x1c]
  42737c:	push   ss
  42737d:	or     al,0x0
  42737f:	test   DWORD PTR [edx-0x6e88ce9a],ecx
  427385:	xchg   esi,eax
  427386:	mov    WORD PTR [edi+0xe00ad43],?
  42738c:	jne    0x4273b1
  42738e:	ins    BYTE PTR es:[edi],dx
  42738f:	pop    ebx
  427390:	out    0x74,al
  427392:	in     eax,dx
  427393:	cmovo  esp,edi
  427396:	fisub  DWORD PTR [edi]
  427398:	inc    ebx
  427399:	sti    
  42739a:	das    
  42739b:	push   esi
  42739c:	mov    bl,0xaa
  42739e:	sar    BYTE PTR [ebp+0x62008266],0x13
  4273a5:	rcl    BYTE PTR [esi+eax*1+0x76],cl
  4273a9:	ins    BYTE PTR es:[edi],dx
  4273aa:	dec    esp
  4273ab:	add    BYTE PTR [edi+0x61],ah
  4273ae:	mov    eax,0x46d3bc7d
  4273b3:	pop    esi
  4273b4:	pop    es
  4273b5:	test   eax,0xce64f147
  4273ba:	jb     0x4273cd
  4273bc:	mov    esi,0xb400a077
  4273c1:	pusha  
  4273c2:	inc    ecx
  4273c3:	jle    0x427439
  4273c5:	scas   eax,DWORD PTR es:[edi]
  4273c6:	nop
  4273c7:	dec    ecx
  4273c8:	add    BYTE PTR [edi+0x42],bh
  4273cb:	nop
  4273cc:	daa    
  4273cd:	fnstsw WORD PTR [edi+0x6700ae8a]
  4273d3:	out    0x92,eax
  4273d5:	lahf   
  4273d6:	mov    DWORD PTR [ebp-0x47ff443c],edx
  4273dc:	fistp  DWORD PTR [esi+0x63]
  4273df:	stos   DWORD PTR es:[edi],eax
  4273e0:	push   es
  4273e1:	jecxz  0x42736b
  4273e3:	pop    edi
  4273e4:	stos   BYTE PTR es:[edi],al
  4273e5:	mov    al,ds:0x3f0239ad
  4273ea:	cs ins DWORD PTR es:[edi],dx
  4273ec:	enter  0x70ad,0xdd
  4273f0:	and    BYTE PTR [ebp-0x7902515],ch
  4273f6:	adc    BYTE PTR [esi+0x57],ah
  4273f9:	out    0x80,eax
  4273fb:	jnp    0x42739d
  4273fd:	out    dx,al
  4273fe:	push   edx
  4273ff:	sbb    eax,DWORD PTR [edx]
  427401:	inc    ebx
  427402:	in     eax,0x3
  427404:	das    
  427405:	push   bp
  427407:	inc    eax
  427408:	or     al,BYTE PTR [ebx+0x26960744]
  42740e:	ret    
  42740f:	push   edi
  427410:	rcl    eax,cl
  427412:	clc    
  427413:	push   ds
  427414:	mov    eax,0x8ef6059a
  427419:	js     0x427437
  42741b:	sti    
  42741c:	stos   BYTE PTR es:[edi],al
  42741d:	(bad)  
  42741e:	lods   eax,DWORD PTR ds:[esi]
  42741f:	test   al,0xa3
  427421:	inc    eax
  427422:	mov    al,0xf9
  427424:	inc    esi
  427425:	aam    0x10
  427427:	lock ins DWORD PTR es:[edi],dx
  427429:	adc    BYTE PTR [edx],dh
  42742b:	adc    BYTE PTR cs:[eax+ebp*8+0x10],bh
  427430:	xchg   ecx,eax
  427431:	xchg   ebp,eax
  427432:	adc    ah,dl
  427434:	sub    dl,BYTE PTR [eax]
  427436:	add    DWORD PTR [ecx+0x7e],esp
  427439:	inc    eax
  42743a:	shl    BYTE PTR [edx-0x5],cl
  42743d:	add    DWORD PTR [ecx+0x2d1801c0],esi
  427443:	add    DWORD PTR [eax-0x7416fecd],ecx
  427449:	add    DWORD PTR [eax],edi
  42744b:	in     eax,dx
  42744c:	add    DWORD PTR [edi],esp
  42744e:	mov    cl,0x1
  427450:	cmp    ecx,DWORD PTR [edi+eax*1]
  427453:	sbb    al,BYTE PTR fs:[eax*2+0x4a2104d3]
  42745b:	add    al,0x35
  42745d:	mov    edi,0x4037104
  427462:	inc    edx
  427463:	xor    DWORD PTR [esi+ecx*2],eax
  427466:	and    BYTE PTR [esp+ebp*4],al
  427469:	mov    BYTE PTR [esi+eiz*4],0xe0
  42746d:	add    al,0x35
  42746f:	add    al,0x4
  427471:	das    
  427472:	or     eax,DWORD PTR [ecx+edx*8]
  427475:	dec    eax
  427476:	add    al,0xeb
  427478:	cmp    BYTE PTR [edx+edx*4],al
  42747b:	mov    al,0x4
  42747d:	sub    cl,ah
  42747f:	add    al,0xe8
  427481:	and    BYTE PTR [eax+ecx*2],al
  427484:	jmp    0x6b3b:0x4dae304
  42748b:	add    al,0x8d
  42748d:	icebp  
  42748e:	add    al,0x60
  427490:	jb     0x427496
  427492:	in     eax,0x57
  427494:	add    al,0x36
  427496:	jle    0x42749c
  427498:	cmp    BYTE PTR [edi+0x40d0504],bh
  42749e:	or     cl,0x4
  4274a1:	jae    0x42748d
  4274a3:	add    al,0x4d
  4274a5:	inc    ecx
  4274a6:	add    al,0x3a
  4274a8:	out    0x4,eax
  4274aa:	das    
  4274ab:	xchg   DWORD PTR [esi],edi
  4274ad:	add    al,0xb2
  4274af:	push   edi
  4274b0:	sbb    dh,bl
  4274b2:	and    bl,BYTE PTR [ebx+0x24]
  4274b5:	mov    WORD PTR [ecx+ebx*4-0x71],es
  4274b9:	add    al,0x1d
  4274bb:	add    DWORD PTR [edx+0x3d],esp
  4274be:	jmp    eax
  4274c0:	inc    esp
  4274c1:	mov    al,ds:0xe1d404e0
  4274c6:	outs   dx,BYTE PTR ds:[esi]
  4274c7:	and    BYTE PTR [ecx-0x11],dh
  4274ca:	and    eax,0xc800e000
  4274cf:	add    DWORD PTR [edi],edx
  4274d1:	cmp    BYTE PTR [edx],ah
  4274d3:	dec    ecx
  4274d4:	mov    bl,0xb6
  4274d6:	mov    ebp,0x5b00c83f
  4274db:	adc    BYTE PTR [ebx-0x8],ch
  4274de:	int    0x82
  4274e0:	sar    BYTE PTR ss:[esi-0x521ea0e6],cl
  4274e7:	jnp    0x427528
  4274e9:	rol    BYTE PTR [eax],1
  4274eb:	pop    edi
  4274ec:	xchg   ebx,eax
  4274ed:	jp     0x427475
  4274ef:	mov    ebp,0xc89f4472
  4274f4:	add    BYTE PTR [eax+0xee43fb],ch
  4274fa:	les    ecx,FWORD PTR [ecx-0x4471310f]
  427500:	mov    al,ah
  427502:	outs   dx,BYTE PTR ds:[esi]
  427503:	leave  
  427504:	sbb    bh,bh
  427506:	and    al,BYTE PTR [eax]
  427508:	dec    edi
  427509:	cmp    eax,0xcfd3e1e0
  42750e:	xor    al,BYTE PTR [ebx+ebx*4]
  427511:	loop   0x42753a
  427513:	gs pusha 
  427515:	inc    ecx
  427516:	ins    BYTE PTR es:[edi],dx
  427517:	and    eax,0xe0e1f0fa
  42751c:	in     al,dx
  42751d:	fdiv   QWORD PTR [edi]
  42751f:	add    BYTE PTR [eax],dh
  427521:	sub    al,0x3c
  427523:	loope  0x4274ab
  427525:	cmp    DWORD PTR [ebp+0x355a08e5],ebp
  42752b:	outs   dx,DWORD PTR ds:[esi]
  42752c:	das    
  42752d:	sbb    BYTE PTR [esi+0x74],0xc1
  427531:	xchg   ecx,eax
  427532:	lea    ebp,[ebx]
  427534:	mov    bh,0x48
  427536:	lods   eax,DWORD PTR ds:[esi]
  427537:	sbb    eax,0x759f6ab
  42753c:	mov    bh,0xd6
  42753e:	mov    dh,0xae
  427540:	or     DWORD PTR [eax+0x6b],eax
  427543:	enter  0x8cbf,0x7
  427547:	adc    eax,0xf5d435df
  42754c:	dec    esi
  42754d:	push   0xffffff96
  42754f:	retf   0x9400
  427552:	int    0x19
  427554:	adc    esp,DWORD PTR [esp+ebp*1+0x0]
  427558:	sti    
  427559:	jne    0x4274f6
  42755b:	fisubr WORD PTR [ecx-0x609d336f]
  427561:	out    dx,eax
  427562:	add    BYTE PTR [eax+0x7af04046],cl
  427568:	sub    ecx,DWORD PTR [eax]
  42756a:	and    ah,dl
  42756c:	std    
  42756d:	sub    ch,bh
  42756f:	retf   
  427570:	xlat   BYTE PTR ds:[ebx]
  427571:	lds    eax,FWORD PTR [edi+edx*2-0x80]
  427575:	sbb    bl,BYTE PTR [eax]
  427577:	call   0x4fa420d4
  42757c:	pop    ecx
  42757d:	les    eax,FWORD PTR [eax]
  42757f:	or     BYTE PTR [eax+0xddcb11],0xce
  427586:	add    bl,BYTE PTR [ecx]
  427588:	cli    
  427589:	inc    eax
  42758a:	scas   al,BYTE PTR es:[edi]
  42758b:	mov    dh,0xe7
  42758d:	pop    ss
  42758e:	add    edx,DWORD PTR [ecx-0x6dffbd97]
  427594:	cmp    al,0xc
  427596:	inc    eax
  427597:	jno    0x427570
  427599:	hlt    
  42759a:	cmp    BYTE PTR [esi],ah
  42759c:	dec    esp
  42759d:	add    BYTE PTR [edx+0x25],dh
  4275a0:	and    bl,dl
  4275a2:	dec    edx
  4275a3:	add    al,0x6
  4275a5:	push   cs
  4275a6:	dec    edi
  4275a7:	in     eax,dx
  4275a8:	sub    eax,0x443e0054
  4275ad:	push   eax
  4275ae:	sbb    al,0xb3
  4275b0:	add    BYTE PTR [esi-0x4f],al
  4275b3:	xchg   edi,ecx
  4275b5:	sub    DWORD PTR [edx],edx
  4275b7:	dec    eax
  4275b8:	cs je  0x4275a2
  4275bb:	sbb    al,0x26
  4275bd:	loopne 0x42755e
  4275bf:	test   DWORD PTR [eax+0x49],edi
  4275c2:	jecxz  0x4275ae
  4275c4:	sub    al,0xad
  4275c6:	xor    eax,DWORD PTR [eax-0x32]
  4275c9:	sbb    BYTE PTR [ecx+0x41],al
  4275cc:	in     eax,dx
  4275cd:	ss push cs
  4275cf:	adc    BYTE PTR [ebp+0x2c],ah
  4275d2:	adc    ch,ch
  4275d4:	out    dx,eax
  4275d5:	clc    
  4275d6:	xor    BYTE PTR [ecx+0x11],al
  4275d9:	int    0xe1
  4275db:	sbb    BYTE PTR [ebp+0x4086dd40],dl
  4275e1:	cmp    bl,BYTE PTR [edi+0x40]
  4275e4:	jmp    FWORD PTR [eax+eax*2]
  4275e7:	data16 cli 
  4275e9:	inc    eax
  4275ea:	pop    es
  4275eb:	jns    0x42762d
  4275ed:	mov    ecx,0x89d5402a
  4275f2:	pop    esp
  4275f3:	push   edx
  4275f4:	add    BYTE PTR [eax],dl
  4275f6:	xchg   edi,eax
  4275f7:	test   al,0x10
  4275f9:	pushf  
  4275fa:	nop
  4275fb:	adc    BYTE PTR [edi+0x22],ah
  4275fe:	adc    BYTE PTR [ebp+esi*1+0x3c],cl
  427602:	rol    BYTE PTR [eax-0x59],cl
  427605:	inc    eax
  427606:	popa   
  427607:	adc    al,BYTE PTR [eax+0x66]
  42760a:	jbe    0x42764c
  42760c:	jno    0x4275fc
  42760e:	inc    eax
  42760f:	xchg   edx,eax
  427610:	scas   al,BYTE PTR es:[edi]
  427611:	inc    eax
  427612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427613:	dec    ecx
  427614:	inc    eax
  427615:	test   bl,bl
  427617:	inc    eax
  427618:	and    eax,0xc77d4013
  42761d:	inc    eax
  42761e:	pop    ecx
  42761f:	cmp    al,0x40
  427621:	sbb    ecx,DWORD PTR [eax+eax*2+0x3f403a4e]
  427628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427629:	inc    eax
  42762a:	fbld   TBYTE PTR [ebp+0x40]
  42762d:	xchg   BYTE PTR [ebp+0x40],dl
  427630:	mov    dl,0xeb
  427632:	inc    eax
  427633:	aad    0xbb
  427635:	inc    eax
  427636:	iret   
  427637:	rol    BYTE PTR [eax+0x6f],1
  42763a:	push   esi
  42763b:	inc    eax
  42763c:	sub    al,0x68
  42763e:	inc    eax
  42763f:	jmp    0x2840:0xc89740af
  427646:	jmp    0x427688
  427648:	arpl   WORD PTR [edi+0x405ed040],sp
  42764e:	(bad)  
  42764f:	mov    ebx,0x400cc240
  427654:	das    
  427655:	test   BYTE PTR [eax+0x31],al
  427658:	out    dx,eax
  427659:	inc    eax
  42765a:	mov    DWORD PTR [eax],edx
  42765c:	inc    eax
  42765d:	repnz mov ebp,0xb512d188
  427663:	shr    DWORD PTR [ebp+0x49e180bc],1
  427669:	cwde   
  42766a:	push   ss
  42766b:	sbb    ebp,edi
  42766d:	arpl   WORD PTR [edx],ax
  42766f:	cmp    ah,bh
  427671:	adc    DWORD PTR [eax+0x7c],0x5430056
  427678:	test   dl,dl
  42767a:	add    dh,al
  42767c:	ins    BYTE PTR es:[edi],dx
  42767d:	std    
  42767e:	daa    
  42767f:	jle    0x427629
  427681:	cdq    
  427682:	dec    edi
  427683:	add    dh,BYTE PTR [eax-0x4b]
  427686:	jno    0x4276ff
  427688:	add    DWORD PTR [esi],0x0
  42768b:	out    dx,eax
  42768c:	add    dl,BYTE PTR ds:[esi+0x2b305900]
  427693:	lahf   
  427694:	jo     0x427702
  427696:	mov    ch,0xe1
  427698:	mov    al,ds:0xa365ae
  42769d:	pop    edi
  42769e:	mov    WORD PTR [ecx-0x5999497f],?
  4276a4:	fild   WORD PTR [edx]
  4276a6:	pop    esp
  4276a7:	mov    bh,0x39
  4276a9:	aaa    
  4276aa:	ret    
  4276ab:	mov    eax,esp
  4276ad:	add    BYTE PTR [ebx],dl
  4276af:	pop    ecx
  4276b0:	add    BYTE PTR [ebp-0x4e4a79],ch
  4276b6:	inc    edx
  4276b7:	mov    al,ds:0x11af002f
  4276bc:	sbb    cl,BYTE PTR [esi+eiz*2]
  4276bf:	xor    dh,dl
  4276c1:	sub    eax,0xca0091f4
  4276c6:	mov    dl,al
  4276c8:	or     BYTE PTR [eax+0x189d94a],al
  4276ce:	and    eax,0xeb2f95a8
  4276d3:	mov    ebp,0xf8ffc532
  4276d8:	mov    eax,ds:0xb7c702c2
  4276dd:	add    al,0xb8
  4276df:	mov    esi,es
  4276e1:	add    ebp,esi
  4276e3:	sti    
  4276e4:	jmp    0xd7:0x50ec55d9
  4276eb:	sbb    BYTE PTR [edi-0x58],ah
  4276ee:	gs mov dl,0x2
  4276f1:	daa    
  4276f2:	add    DWORD PTR [edi],0x30c3df97
  4276f8:	pop    edx
  4276f9:	rol    BYTE PTR [ebp+0x1c8f098],1
  4276ff:	jae    0x4276f3
  427701:	sub    edi,DWORD PTR [eax]
  427703:	mov    esi,0x5630c508
  427708:	dec    ecx
  427709:	add    dh,cl
  42770b:	shl    BYTE PTR [esi-0x46a19feb],0x3
  427712:	add    BYTE PTR ds:0xa1b0e132,ch
  427718:	nop
  427719:	mov    al,ds:0xe40660f7
  42771e:	xchg   ebp,eax
  42771f:	mov    esi,0x9e1eb224
  427724:	fsubr  DWORD PTR [esi]
  427726:	xor    BYTE PTR [esi-0x2e],0x17
  42772a:	pop    ds
  42772b:	aaa    
  42772c:	in     eax,dx
  42772d:	sbb    al,0x3e
  42772f:	ins    BYTE PTR es:[edi],dx
  427730:	sub    eax,eax
  427732:	(bad)  
  427733:	fstp   DWORD PTR [ebx-0x9]
  427736:	cmp    eax,0xc14200fe
  42773b:	(bad)  
  42773c:	jae    0x42777e
  42773e:	ret    
  42773f:	ror    dh,0x0
  427742:	mov    dh,BYTE PTR [ebx]
  427744:	fdiv   st,st(0)
  427746:	jb     0x4276fe
  427748:	aad    0x67
  42774a:	add    BYTE PTR [esi-0x5],bh
  42774d:	and    cl,al
  42774f:	out    0x98,eax
  427751:	ja     0x427758
  427753:	jmp    0xca0c:0xff904dd
  42775a:	dec    esi
  42775b:	inc    BYTE PTR [eax+0x2e9bff7c]
  427761:	add    BYTE PTR [eax-0x24],dh
  427764:	sub    esp,edi
  427766:	es popf 
  427768:	adc    BYTE PTR [ebx+0x19f2e],0x0
  42776f:	add    al,0x74
  427771:	inc    ebp
  427772:	push   esp
  427773:	pop    ecx
  427774:	test   BYTE PTR [eax-0x19],0x3d
  427778:	add    BYTE PTR [edx-0x73336182],dl
  42777e:	adc    cl,BYTE PTR [eax-0x430ef900]
  427784:	mov    DWORD PTR [esi+0x9aa601],ecx
  42778a:	add    bl,BYTE PTR [ecx+edi*4]
  42778d:	jbe    0x427711
  42778f:	(bad)
  427792:	or     ebp,DWORD PTR [ebx-0x7f8dcc97]
  427798:	into   
  427799:	jmp    0xbd5e:0x3879817
  4277a0:	call   0xd051b7cd
  4277a5:	shl    bh,0x48
  4277a8:	mov    bh,0x40
  4277aa:	clc    
  4277ab:	stos   DWORD PTR es:[edi],eax
  4277ac:	and    al,BYTE PTR [eax]
  4277ae:	pop    edx
  4277af:	fwait
  4277b0:	in     eax,dx
  4277b1:	mov    bl,0x6a
  4277b3:	xchg   esi,eax
  4277b4:	cmp    BYTE PTR [eax+0x0],dl
  4277b7:	sub    BYTE PTR [esi],0xd8
  4277ba:	test   eax,0xa59f170b
  4277bf:	push   ds
  4277c0:	mov    ?,WORD PTR [esi+edi*8+0x579d9b80]
  4277c7:	cdq    
  4277c8:	mov    ecx,0x4061c4f
  4277cd:	fisttp QWORD PTR [esi-0x62]
  4277d0:	pop    ebp
  4277d1:	mov    al,ds:0x940fd3d7
  4277d6:	add    BYTE PTR [eax],0x8a
  4277d9:	icebp  
  4277da:	and    cl,ch
  4277dc:	adc    dh,BYTE PTR [ebx+eiz*8+0x4f]
  4277e0:	add    dh,al
  4277e2:	iret   
  4277e3:	xchg   BYTE PTR [esi-0x32],dh
  4277e6:	gs jp  0x427828
  4277e9:	clc    
  4277ea:	jge    0x4277ec
  4277ec:	cmp    al,0xf2
  4277ee:	sbb    BYTE PTR [edx-0x7ecb60c9],0x0
  4277f5:	pop    esp
  4277f6:	sbb    al,0x98
  4277f8:	jb     0x427855
  4277fa:	scas   eax,DWORD PTR es:[edi]
  4277fb:	int3   
  4277fc:	mov    eax,DWORD PTR [eax]
  4277fe:	xchg   ebp,eax
  4277ff:	ins    DWORD PTR es:[edi],dx
  427800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427801:	add    eax,0xa8980bb
  427806:	add    al,dl
  427808:	xor    eax,0x6583f5d5
  42780d:	idiv   BYTE PTR [ecx]
  42780f:	cmp    eax,0x1f00864f
  427814:	cs je  0x427875
  427817:	das    
  427818:	push   es
  427819:	mov    DWORD PTR [edi],ecx
  42781b:	iret   
  42781c:	hlt    
  42781d:	or     cl,0x37
  427820:	add    BYTE PTR [eax],al
  427822:	cmc    
  427823:	xor    eax,0xf62d9b18
  427828:	mov    ds:0xefc004e9,eax
  42782d:	mov    eax,0xe001493
  427832:	inc    ecx
  427833:	sahf   
  427834:	scas   al,BYTE PTR es:[edi]
  427835:	fbld   TBYTE PTR [ebp+0x2f7f60c6]
  42783b:	jle    0x4277c7
  42783d:	pop    esp
  42783e:	call   0x87:0x6a397100
  427845:	out    dx,al
  427846:	div    BYTE PTR [ebp+0x4f055cd9]
  42784c:	add    BYTE PTR [edx+0x3584ec77],ch
  427852:	nop    DWORD PTR cs:[eax]
  427856:	out    dx,eax
  427857:	and    eax,0x48553a42
  42785c:	dec    ebx
  42785d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42785e:	add    ebp,edx
  427860:	aas    
  427861:	mov    eax,0x802ae506
  427866:	daa    
  427867:	mov    bh,0x4a
  427869:	add    BYTE PTR [esi],dh
  42786b:	xchg   esi,eax
  42786c:	aad    0x14
  42786e:	cmove  esi,DWORD PTR [edx]
  427871:	fadd   QWORD PTR [edx]
  427873:	test   eax,0x45ddbfe4
  427878:	and    DWORD PTR [ecx+0x3d],esp
  42787b:	cs jo  0x42787e
  42787e:	dec    edx
  42787f:	loop   0x427830
  427881:	add    BYTE PTR ds:0x84b6c13f,al
  427887:	pop    edx
  427888:	icebp  
  427889:	lods   eax,DWORD PTR ds:[esi]
  42788a:	add    BYTE PTR [edi+0x72],bh
  42788d:	xchg   esp,eax
  42788e:	jmp    0x42788e
  427890:	aaa    
  427891:	iret   
  427892:	les    eax,FWORD PTR [ebx]
  427894:	(bad)  
  427895:	sti    
  427896:	fisubr WORD PTR [edi]
  427898:	mov    ebx,0x5503dc3c
  42789d:	out    0xcd,eax
  42789f:	ror    dh,1
  4278a1:	mov    dh,0x60
  4278a3:	add    cl,cl
  4278a5:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4278a7:	jo     0x427871
  4278a9:	(bad)  
  4278aa:	push   eax
  4278ab:	outs   dx,DWORD PTR ds:[esi]
  4278ac:	add    BYTE PTR [ebx-0x2a10b1ed],cl
  4278b2:	rcl    DWORD PTR [eax],cl
  4278b4:	inc    esp
  4278b5:	add    dh,BYTE PTR [esp+ebp*8-0x45c28fb3]
  4278bc:	inc    eax
  4278bd:	sar    BYTE PTR [ecx+0x2b],1
  4278c0:	hlt    
  4278c1:	dec    esp
  4278c2:	pop    ss
  4278c3:	sbb    edx,DWORD PTR [edi]
  4278c5:	clc    
  4278c6:	sbb    eax,0x10530000
  4278cb:	mov    esp,0x421625b
  4278d0:	xchg   esi,eax
  4278d1:	mov    edx,0xe7ff40f
  4278d6:	(bad)  
  4278d7:	rol    BYTE PTR [ecx],0xcb
  4278da:	not    DWORD PTR [edx+0x24]
  4278dd:	add    DWORD PTR [eax+ebx*1],ecx
  4278e0:	push   esi
  4278e1:	push   ecx
  4278e2:	jle    0x427916
  4278e4:	inc    BYTE PTR [edi]
  4278e6:	mov    ds:0x30d7b830,eax
  4278eb:	wbinvd 
  4278ed:	or     eax,0xcfa9003b
  4278f2:	xchg   ebp,eax
  4278f3:	cmp    DWORD PTR [ecx+0x10b5a250],esp
  4278f9:	retf   0xbb73
  4278fc:	add    BYTE PTR [esi-0x12],bl
  4278ff:	lods   eax,DWORD PTR ds:[esi]
  427900:	fcomi  st,st(7)
  427902:	mov    bh,0xfb
  427904:	add    BYTE PTR [eax+0x6a],cl
  427907:	and    al,0x1
  427909:	call   0x7292f3
  42790e:	sub    eax,0x97780d80
  427913:	jno    0x4278e7
  427915:	imul   eax,DWORD PTR [eax],0x8cfbb658
  42791b:	(bad)  
  42791d:	and    al,0xc1
  42791f:	sete   al
  427922:	scas   eax,DWORD PTR es:[edi]
  427923:	inc    ebx
  427924:	and    BYTE PTR [esp+ecx*8-0x11],bh
  427928:	arpl   sp,bp
  42792a:	add    BYTE PTR [eax+ebp*2],al
  42792d:	pop    edi
  42792e:	mov    DWORD PTR [edx+0x4a],edi
  427931:	or     ebx,edi
  427933:	adc    BYTE PTR [edi-0x68],dh
  427936:	sbb    ebx,DWORD PTR [esi-0x48]
  427939:	ret    
  42793a:	sub    al,0xaf
  42793c:	call   0xbcb80241
  427941:	mov    bh,0xf5
  427943:	jo     0x427946
  427945:	push   ds
  427946:	stos   DWORD PTR es:[edi],eax
  427947:	call   DWORD PTR [eax+esi*8+0x36]
  42794b:	outs   dx,BYTE PTR ds:[esi]
  42794c:	jle    0x4278ff
  42794e:	ins    DWORD PTR es:[edi],dx
  42794f:	pusha  
  427950:	add    BYTE PTR [edi+edx*1+0xfe2d20f],al
  427957:	sbb    BYTE PTR [esi-0x68276c20],dl
  42795d:	and    dh,BYTE PTR [esi+0x8db458]
  427963:	jecxz  0x427988
  427965:	xchg   ecx,eax
  427966:	lods   al,BYTE PTR ds:[esi]
  427967:	fst    DWORD PTR [edx]
  427969:	mov    ds:0x8e034b3f,al
  42796e:	(bad)  
  427971:	cs jmp 0x427994
  427974:	and    DWORD PTR [edx+0x3e],ebp
  427977:	das    
  427978:	pop    eax
  427979:	cmp    al,0xd1
  42797b:	dec    edi
  42797c:	mov    gs,WORD PTR [ebx]
  42797e:	push   ss
  42797f:	test   eax,0x27750c60
  427984:	test   al,0xb6
  427986:	add    edi,DWORD PTR [ebp+0x6282c13e]
  42798c:	sub    BYTE PTR [eax+0xc66456],cl
  427992:	jmp    0x427924
  427994:	cmc    
  427995:	out    dx,al
  427996:	inc    edi
  427997:	xchg   ecx,eax
  427998:	jae    0x4279ea
  42799a:	pop    es
  42799b:	call   0x898c8f7d
  4279a0:	add    BYTE PTR [ebp+0x17c102c],ch
  4279a6:	repz pop ds
  4279a8:	mov    ch,0xf5
  4279aa:	test   DWORD PTR [esi+0x21007060],eax
  4279b0:	add    edi,DWORD PTR [ebp-0x7043f33e]
  4279b6:	ja     0x427978
  4279b8:	xchg   esp,eax
  4279b9:	push   0xffffff9e
  4279bb:	add    BYTE PTR [ebx],dh
  4279bd:	sti    
  4279be:	jl     0x42794e
  4279c0:	sbb    BYTE PTR [edi-0x36],bh
  4279c3:	adc    BYTE PTR [eax],al
  4279c5:	xchg   DWORD PTR ds:0xb06ceb75,esp
  4279cb:	push   ds
  4279cc:	cmp    al,0x1e
  4279ce:	xor    BYTE PTR [edi],ch
  4279d0:	mov    cl,0x40
  4279d2:	aas    
  4279d3:	scas   eax,DWORD PTR es:[edi]
  4279d4:	(bad)  
  4279d5:	dec    ebx
  4279d6:	push   ebx
  4279d7:	mov    WORD PTR [eax-0x55],es
  4279da:	add    al,0x0
  4279dc:	cwde   
  4279dd:	inc    edi
  4279de:	and    cl,BYTE PTR [ecx+0x7a]
  4279e1:	ins    BYTE PTR es:[edi],dx
  4279e2:	mov    dl,0xc4
  4279e4:	psubusw mm1,QWORD PTR [esi+0x5]
  4279e8:	cmp    bl,BYTE PTR [ebp-0x3d]
  4279eb:	mov    al,0x42
  4279ed:	mov    ah,0x5e
  4279ef:	clc    
  4279f0:	mov    eax,0xd000d886
  4279f5:	neg    DWORD PTR [eax+edx*1-0x76f5139f]
  4279fc:	add    BYTE PTR [ecx],dh
  4279fe:	dec    ebp
  4279ff:	scas   al,BYTE PTR es:[edi]
  427a00:	pop    ebp
  427a01:	mov    eax,ds:0x7b1f11
  427a06:	(bad)  
  427a08:	aaa    
  427a09:	mov    dl,0x78
  427a0b:	dec    edi
  427a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a0d:	pop    edx
  427a0e:	sub    eax,0xadd4c239
  427a13:	ja     0x4279d9
  427a15:	jns    0x427a5a
  427a17:	sub    ecx,ecx
  427a19:	scas   al,BYTE PTR es:[edi]
  427a1a:	lock dec ebp
  427a1c:	imul   eax,DWORD PTR [edi+0x2afd1d01],0xee15fadd
  427a26:	in     al,dx
  427a27:	repnz dec esi
  427a29:	add    BYTE PTR [ebx+0x2c46dc66],dl
  427a2f:	sub    BYTE PTR [edx+0x75d4ee62],ah
  427a35:	test   eax,0x64eed50f
  427a3a:	mov    ch,0xc7
  427a3c:	pop    esp
  427a3d:	nop
  427a3e:	nop
  427a3f:	enter  0xe187,0x18
  427a43:	add    BYTE PTR ds:0x3a74f1e8,ah
  427a49:	add    al,0xf4
  427a4b:	dec    ebp
  427a4c:	and    BYTE PTR ds:[ebp+0x20e46980],0xcf
  427a54:	cwde   
  427a55:	mov    ecx,0xd6723f93
  427a5a:	add    BYTE PTR [esi],0x2c
  427a5d:	in     eax,0x12
  427a5f:	bound  edx,QWORD PTR [eax+ebx*1]
  427a62:	jo     0x427a3c
  427a64:	pop    es
  427a65:	shl    BYTE PTR [esi],1
  427a67:	inc    ecx
  427a68:	out    0x1f,eax
  427a6a:	jo     0x427a20
  427a6c:	dec    eax
  427a6d:	xstore-rng (bad)
  427a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a6f:	add    BYTE PTR [eax],cl
  427a71:	enter  0x15c9,0x3a
  427a75:	push   es
  427a76:	lea    eax,[edx+0x3]
  427a79:	xor    eax,0xcc176c9a
  427a7e:	aam    0xd8
  427a80:	xor    ebp,edx
  427a82:	add    BYTE PTR cs:[ecx],ch
  427a85:	into   
  427a86:	push   cs
  427a87:	dec    edx
  427a88:	pusha  
  427a89:	adc    eax,DWORD PTR [ecx]
  427a8b:	adc    DWORD PTR [eax],eax
  427a8d:	fisub  WORD PTR [esi+0x31c28745]
  427a93:	xor    al,0x7d
  427a95:	add    BYTE PTR [ebp-0x152340a3],dh
  427a9b:	xor    al,al
  427a9d:	xchg   BYTE PTR [eax],al
  427a9f:	cli    
  427aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427aa1:	sub    al,0x40
  427aa3:	cwde   
  427aa4:	iret   
  427aa5:	out    0x76,al
  427aa7:	add    BYTE PTR [ecx-0x13],ch
  427aaa:	xlat   BYTE PTR ds:[ebx]
  427aab:	or     eax,0x4e66c213
  427ab0:	adc    eax,eax
  427ab2:	sbb    bh,ah
  427ab4:	and    BYTE PTR [eax+0x44],dl
  427ab7:	xor    esp,0xa1627c1d
  427abd:	inc    eax
  427abe:	mov    ebp,0xecc4f75
  427ac3:	in     eax,dx
  427ac4:	cmp    edx,ecx
  427ac6:	cmp    al,BYTE PTR [eax]
  427ac8:	push   esi
  427ac9:	ins    DWORD PTR es:[edi],dx
  427aca:	pop    edx
  427acb:	jmp    0x9dcc563
  427ad0:	pop    esp
  427ad1:	mov    al,BYTE PTR [edx-0x1c747cd1]
  427ad7:	or     al,0xcf
  427ad9:	push   eax
  427ada:	or     dl,BYTE PTR [ecx-0x72ff7c38]
  427ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ae1:	pop    ebx
  427ae2:	(bad)  
  427ae3:	mov    ebx,DWORD PTR [esi+0x32]
  427ae6:	push   ecx
  427ae7:	add    BYTE PTR [esi+esi*2],dh
  427aea:	pop    ecx
  427aeb:	aad    0xd9
  427aed:	and    al,BYTE PTR [edx+0x4c6d38ac]
  427af3:	add    BYTE PTR [esi-0x53],0xef
  427af7:	clc    
  427af8:	mov    ah,0xb3
  427afa:	mov    al,ds:0x83e97e3d
  427aff:	xchg   esp,eax
  427b00:	cmp    al,0x21
  427b02:	jl     0x427ae5
  427b04:	test   al,0xae
  427b06:	addr16 jbe 0x427b17
  427b09:	sbb    ah,BYTE PTR [ebx+edx*2-0x17eb5f36]
  427b10:	push   edi
  427b11:	ret    
  427b12:	jne    0x427b33
  427b14:	mov    ds:0xd7c0d2c8,eax
  427b19:	or     DWORD PTR [edx],edx
  427b1b:	int3   
  427b1c:	lods   eax,DWORD PTR ds:[esi]
  427b1d:	imul   eax,DWORD PTR [eax],0x6e2ca17b
  427b23:	dec    edi
  427b24:	rol    DWORD PTR [ecx],0x27
  427b27:	add    BYTE PTR [ebx],cl
  427b29:	aad    0x7f
  427b2b:	xchg   esp,eax
  427b2c:	test   DWORD PTR [esi+ebx*1-0x78bbff7c],edi
  427b33:	sbb    BYTE PTR [ecx-0x79fada5d],bh
  427b39:	add    BYTE PTR [ecx-0x13d7426d],bl
  427b3f:	sti    
  427b40:	daa    
  427b41:	stos   BYTE PTR es:[edi],al
  427b42:	(bad)  
  427b43:	pop    ebp
  427b44:	add    al,0x2c
  427b46:	call   0xc0f63bbb
  427b4b:	call   0xf3ad:0x33b9519
  427b52:	jns    0x427b75
  427b54:	xor    DWORD PTR [eax+edi*8],eax
  427b57:	dec    edx
  427b58:	stos   DWORD PTR es:[edi],eax
  427b59:	pop    edx
  427b5a:	push   cs
  427b5b:	push   ss
  427b5c:	push   cs
  427b5d:	loope  0x427aea
  427b5f:	shr    BYTE PTR [edi],0xc8
  427b62:	ja     0x427b41
  427b64:	addr16 cli 
  427b66:	lds    eax,FWORD PTR [eax]
  427b68:	inc    ebp
  427b69:	mov    cl,BYTE PTR [edi-0x39]
  427b6c:	or     bh,bl
  427b6e:	stos   BYTE PTR es:[edi],al
  427b6f:	add    DWORD PTR [eax],0x25dbf561
  427b75:	jmp    0x653e6e
  427b7a:	retf   0xcb5c
  427b7d:	mov    dh,0xb1
  427b7f:	mov    al,ds:0xc100865e
  427b84:	jmp    0x1eac:0x60237452
  427b8b:	adc    eax,DWORD PTR [edi]
  427b8d:	jg     0x427bce
  427b8f:	ret    0x6d00
  427b92:	add    al,0xb8
  427b94:	push   esi
  427b95:	add    BYTE PTR [ebx-0x77cba6bf],dl
  427b9b:	jg     0x427b9d
  427b9d:	jo     0x427b48
  427b9f:	jbe    0x427c1f
  427ba1:	std    
  427ba2:	mov    DWORD PTR [esi],eax
  427ba4:	adc    al,0x0
  427ba6:	xchg   edi,eax
  427ba7:	int3   
  427ba8:	and    bl,al
  427baa:	addr16 jl 0x427b7b
  427bad:	sub    eax,DWORD PTR [eax]
  427baf:	nop
  427bb0:	scas   eax,DWORD PTR es:[edi]
  427bb1:	push   edx
  427bb2:	clc    
  427bb3:	(bad)  
  427bb4:	inc    esi
  427bb5:	mov    ah,0x65
  427bb7:	mov    al,0xe4
  427bb9:	add    ah,al
  427bbb:	or     ecx,DWORD PTR [eax]
  427bbd:	repz hlt 
  427bbf:	add    bl,BYTE PTR [esi+0x15]
  427bc2:	or     esp,DWORD PTR [ebp+0xbad1c0]
  427bc8:	jne    0x427b69
  427bca:	jecxz  0x427b93
  427bcc:	pop    eax
  427bcd:	add    dl,ah
  427bcf:	sub    BYTE PTR [esi+0x41],bh
  427bd2:	dec    ebx
  427bd3:	mov    esp,0xf8003adf
  427bd8:	vpmacsdqh xmm2,xmm1,xmm7,XMMWORD PTR [edi+ebp*1+0x3f5c75e9]
  427be3:	es push ss
  427be5:	cmp    eax,0xae00fd7a
  427bea:	mov    al,0xf3
  427bec:	push   ebp
  427bed:	or     BYTE PTR ds:0xcddc0957,ch
  427bf3:	adc    DWORD PTR [edx],ebx
  427bf5:	adc    BYTE PTR [esi],cl
  427bf7:	retf   0x4323
  427bfa:	nop
  427bfb:	push   edi
  427bfc:	scas   eax,DWORD PTR es:[edi]
  427bfd:	and    al,BYTE PTR [ebp-0x7fac73c5]
  427c03:	lahf   
  427c04:	xchg   BYTE PTR [ecx],bh
  427c06:	xchg   ecx,eax
  427c07:	mov    dl,0xf0
  427c09:	xchg   DWORD PTR [ebx],edi
  427c0b:	mov    ebp,0xb8da01b7
  427c10:	xor    al,0xf6
  427c12:	stos   DWORD PTR es:[edi],eax
  427c13:	jg     0x427c85
  427c15:	call   0xc2eb7c1b
  427c1a:	retf   
  427c1b:	mov    ebx,0xc682b250
  427c20:	pop    es
  427c21:	nop
  427c22:	push   esi
  427c23:	rcr    bl,0xcd
  427c26:	and    BYTE PTR [edx+ebx*1],dh
  427c29:	dec    ecx
  427c2a:	(bad)  
  427c2b:	aas    
  427c2c:	pop    ebx
  427c2d:	outs   dx,DWORD PTR ds:[esi]
  427c2e:	xchg   DWORD PTR [eax],esp
  427c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c31:	and    bl,BYTE PTR [ebx]
  427c33:	shr    BYTE PTR [ebp-0xdc22c27],1
  427c39:	je     0x427c51
  427c3b:	out    dx,eax
  427c3c:	xchg   edx,eax
  427c3d:	pusha  
  427c3e:	in     eax,dx
  427c3f:	and    BYTE PTR [edi+0x48e740ce],al
  427c45:	inc    ebx
  427c46:	mov    ecx,edi
  427c48:	or     BYTE PTR [edx+0x7],0xe5
  427c4c:	jae    0x427c82
  427c4e:	add    BYTE PTR [ebx-0x43],ch
  427c51:	(bad)  
  427c52:	dec    esi
  427c53:	ror    DWORD PTR [ebx-0x30ffd53c],1
  427c59:	in     al,dx
  427c5a:	mov    al,0xf1
  427c5c:	cmovs  ecx,edx
  427c5f:	std    
  427c60:	pop    es
  427c61:	dec    sp
  427c63:	dec    ebx
  427c64:	fist   WORD PTR [esi+ecx*4+0x1a1685c0]
  427c6b:	sbb    BYTE PTR [edi],al
  427c6d:	jle    0x427ccd
  427c6f:	add    edi,DWORD PTR [eax-0x40]
  427c72:	pop    eax
  427c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c74:	jle    0x427c6c
  427c76:	mov    eax,0x17e55a64
  427c7b:	test   DWORD PTR [eax-0xedf5225],edx
  427c81:	call   0x8417d65
  427c86:	cwde   
  427c87:	mov    al,ds:0x5ee19fdf
  427c8c:	imul   esi,DWORD PTR [edi+0x731a0f20],0x7730226f
  427c96:	push   es
  427c97:	add    al,0xb3
  427c99:	dec    eax
  427c9a:	icebp  
  427c9b:	nop
  427c9c:	cwde   
  427c9d:	adc    edi,esp
  427c9f:	mov    fs,WORD PTR [edx]
  427ca1:	adc    al,0x43
  427ca3:	clc    
  427ca4:	or     BYTE PTR ds:0x4f9015cc,ch
  427caa:	and    ebp,eax
  427cac:	nop
  427cad:	lea    esp,[edi-0x60f76e28]
  427cb3:	pusha  
  427cb4:	inc    eax
  427cb5:	call   0x930fea5
  427cba:	or     DWORD PTR ss:[ecx+0x108d6b18],0x7ae22365
  427cc5:	inc    edx
  427cc6:	jmp    0xfcbd:0xe9c2041
  427ccd:	xor    eax,0x22e24334
  427cd2:	sbb    BYTE PTR [edi-0x2c],al
  427cd5:	and    edx,DWORD PTR [ebx-0x3c]
  427cd8:	rol    DWORD PTR [eax],0x69
  427cdb:	sub    eax,0x86d0f9ef
  427ce0:	jmp    0x427cf4
  427ce2:	xchg   edx,eax
  427ce3:	and    al,0xd4
  427ce5:	dec    eax
  427ce6:	shl    cl,1
  427ce8:	aad    0x0
  427cea:	scas   eax,DWORD PTR es:[edi]
  427ceb:	mov    bl,BYTE PTR [esi]
  427ced:	and    DWORD PTR [esp-0x39df726f],ecx
  427cf4:	sub    eax,0x20841014
  427cf9:	jo     0x427d73
  427cfb:	push   edi
  427cfc:	sbb    esp,0xffffffaa
  427cff:	mov    ebp,0x8cacbab4
  427d04:	add    dl,ah
  427d06:	in     eax,dx
  427d07:	mov    ebp,0x8d078f6
  427d0c:	push   0x0
  427d0e:	adc    BYTE PTR [edi+ebp*8],dh
  427d11:	sbb    al,0x17
  427d13:	push   edi
  427d14:	fistp  QWORD PTR [edi+0x2]
  427d17:	cmp    DWORD PTR [edi+0x28aa3247],ebp
  427d1d:	add    al,BYTE PTR [ebp+0x82e2481]
  427d23:	in     al,0x17
  427d25:	cld    
  427d26:	mov    al,0x20
  427d28:	test   al,0xfe
  427d2a:	mov    bl,0x0
  427d2c:	aad    0x2a
  427d2e:	fwait
  427d2f:	adc    DWORD PTR [ebx+0x66],ecx
  427d32:	mov    dh,0xbe
  427d34:	hlt    
  427d35:	jg     0x427d37
  427d37:	idiv   DWORD PTR [edi-0xdf5697e]
  427d3d:	xor    bl,dl
  427d3f:	cmp    DWORD PTR [edi],eax
  427d41:	mov    WORD PTR [ecx],es
  427d43:	cld    
  427d44:	scas   eax,DWORD PTR es:[edi]
  427d45:	or     DWORD PTR [edx-0xd],ecx
  427d48:	and    al,0x81
  427d4a:	ins    BYTE PTR es:[edi],dx
  427d4b:	les    esp,FWORD PTR [edi]
  427d4d:	jge    0x427d5a
  427d4f:	pop    eax
  427d50:	jle    0x427d12
  427d52:	and    BYTE PTR [ecx],al
  427d54:	or     BYTE PTR [edi],dl
  427d56:	add    BYTE PTR [ebx+0x29],dh
  427d59:	das    
  427d5a:	pop    ebx
  427d5b:	retf   
  427d5c:	xor    ah,ch
  427d5e:	mov    ch,0x7f
  427d60:	cmp    BYTE PTR [ebx],0x38
  427d63:	imul   eax,DWORD PTR [esi+ebp*1-0x7cec8640],0xffffff87
  427d6b:	mov    bl,0xd0
  427d6d:	jl     0x427dc8
  427d6f:	pop    es
  427d70:	add    BYTE PTR [ebx],al
  427d72:	push   0xfffffff1
  427d74:	aas    
  427d75:	mov    fs,ebx
  427d77:	aam    0xe7
  427d79:	add    dl,ch
  427d7b:	sbb    al,0xd5
  427d7d:	lods   eax,DWORD PTR ds:[esi]
  427d7e:	mov    bl,0x20
  427d80:	into   
  427d81:	ficom  WORD PTR [esi]
  427d83:	iret   
  427d84:	out    dx,al
  427d85:	imul   eax,DWORD PTR [eax],0x1ea2d29d
  427d8b:	add    DWORD PTR [esi+0x39],eax
  427d8e:	out    0x76,eax
  427d90:	jne    0x427d92
  427d92:	xchg   edi,eax
  427d93:	xchg   ecx,eax
  427d94:	and    eax,0x1c857fcf
  427d99:	mov    edi,0xd7662100
  427d9e:	adc    edi,DWORD PTR [edi]
  427da0:	out    dx,eax
  427da1:	sub    eax,0x70de00e1
  427da6:	out    0x5b,al
  427da8:	(bad)  
  427da9:	xor    eax,0x5d00f32b
  427dae:	and    esp,esi
  427db0:	and    al,BYTE PTR [esi]
  427db2:	cmp    DWORD PTR [esi+0x487e79fd],edi
  427db8:	pop    ds
  427db9:	mov    BYTE PTR [eax],0x23
  427dbc:	dec    ecx
  427dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427dbe:	add    ebx,eax
  427dc0:	gs sahf 
  427dc2:	jge    0x427d4f
  427dc4:	push   cs
  427dc5:	cs push esi
  427dc7:	cmp    DWORD PTR [edi+0x40],ebp
  427dca:	mov    al,0xef
  427dcc:	jb     0x427dc9
  427dce:	out    dx,al
  427dcf:	add    BYTE PTR [edi+0x4aeb4e55],ah
  427dd5:	mov    ah,0xe9
  427dd7:	fiadd  DWORD PTR [eax]
  427dd9:	sar    BYTE PTR [ecx-0x7590d113],0xf1
  427de0:	cmp    eax,0x14b68600
  427de5:	push   0xffffffa8
  427de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427de8:	aad    0x31
  427dea:	(bad)  
  427dec:	adc    BYTE PTR [edx+0x75],dl
  427def:	add    ah,dl
  427df1:	scas   eax,DWORD PTR es:[edi]
  427df2:	cdq    
  427df3:	mov    eax,ds:0x8f0e0048
  427df8:	dec    ebx
  427df9:	jl     0x427e51
  427dfb:	or     eax,0xee0030b0
  427e00:	test   DWORD PTR [ebp+edx*4-0x8],0x155aed8
  427e08:	int3   
  427e09:	pop    edi
  427e0a:	pop    eax
  427e0b:	xchg   ebx,eax
  427e0c:	add    eax,0x90c37591
  427e11:	sbb    ah,BYTE PTR [edx+0x2a]
  427e14:	pop    eax
  427e15:	fdivr  st(1),st
  427e17:	push   cs
  427e18:	dec    eax
  427e19:	sbb    BYTE PTR [eax+eiz*2+0xd8f0157],al
  427e20:	ret    
  427e21:	add    BYTE PTR [ebx+0x49],ah
  427e24:	sbb    eax,0xe965e41e
  427e29:	mov    esi,0x5e0f1000
  427e2e:	test   ch,dl
  427e30:	shr    DWORD PTR [esi],0x6c
  427e33:	add    BYTE PTR [eax],dh
  427e35:	sbb    BYTE PTR [ebp+0x63],ch
  427e38:	daa    
  427e39:	call   0x36be:0xfb019037
  427e40:	add    DWORD PTR [edx],ebp
  427e42:	out    0x7b,eax
  427e44:	cld    
  427e45:	jo     0x427dd2
  427e47:	add    edx,DWORD PTR [ebx-0x15479884]
  427e4d:	push   edi
  427e4e:	fwait
  427e4f:	add    cl,BYTE PTR [eax+0x3ecb1777]
  427e55:	inc    ecx
  427e56:	dec    eax
  427e57:	add    BYTE PTR [esi],al
  427e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e5a:	(bad)  
  427e5b:	in     al,dx
  427e5c:	lods   eax,DWORD PTR ds:[esi]
  427e5d:	adc    DWORD PTR [eax],0x0
  427e60:	fistp  WORD PTR [eax+eax*2-0xd]
  427e64:	mov    ecx,0x693aef
  427e69:	leave  
  427e6a:	mov    bh,0xa1
  427e6c:	cmc    
  427e6d:	(bad)  
  427e6e:	in     al,0xf
  427e70:	out    0x1d,al
  427e72:	aam    0x6b
  427e74:	lock sub cl,0x78
  427e78:	mov    dl,0x7a
  427e7a:	xchg   DWORD PTR [ebx],edi
  427e7c:	add    BYTE PTR [edi*2-0x27812275],dh
  427e83:	retf   0xd3
  427e86:	sbb    edx,DWORD PTR [edi]
  427e88:	xchg   ebp,eax
  427e89:	cld    
  427e8a:	cdq    
  427e8b:	cmp    DWORD PTR ds:[edx],0x9d34543d
  427e92:	mov    cl,0xf5
  427e94:	inc    eax
  427e95:	pop    edx
  427e96:	jmp    0x8a3a:0xa9951527
  427e9d:	mov    ds:0x627a7900,eax
  427ea2:	xchg   ecx,eax
  427ea3:	mul    ecx
  427ea5:	enter  0xaf00,0x64
  427ea9:	popf   
  427eaa:	stos   BYTE PTR es:[edi],al
  427eab:	fisubr WORD PTR [ecx+ebx*2-0xacff69]
  427eb2:	sti    
  427eb3:	jl     0x427e66
  427eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427eb6:	dec    ebx
  427eb7:	xor    al,0x0
  427eb9:	mov    esp,DWORD PTR ds:0xad10e56b
  427ebf:	je     0x427ebd
  427ec1:	cwde   
  427ec2:	xor    eax,0x125ee600
  427ec7:	mov    al,ds:0xc70be69
  427ecc:	mov    eax,0x4c480012
  427ed1:	nop
  427ed2:	mov    WORD PTR [ecx],ss
  427ed4:	rcr    DWORD PTR [edx-0x69],0xf4
  427ed8:	mov    ebx,0x8fe65900
  427edd:	push   ebx
  427ede:	push   esi
  427edf:	dec    ecx
  427ee0:	cmc    
  427ee1:	jbe    0x427ee3
  427ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ee4:	jmp    0x31d1:0x9a0758d2
  427eeb:	add    BYTE PTR [edx+0x123c21c],dh
  427ef1:	jnp    0x427f4c
  427ef3:	fld    QWORD PTR [eax]
  427ef5:	leave  
  427ef6:	mov    ebx,0x97be73ec
  427efb:	cmp    esi,DWORD PTR [ebx+0x6139e3fe]
  427f01:	arpl   WORD PTR [eax],ax
  427f03:	loop   0x427f82
  427f05:	xchg   ax,ax
  427f07:	ret    
  427f08:	sub    dl,BYTE PTR [ebx+0x0]
  427f0b:	dec    ecx
  427f0c:	and    ebp,edx
  427f0e:	int    0x2e
  427f10:	loope  0x427f64
  427f12:	loopne 0x427f15
  427f14:	push   es
  427f15:	mov    ds:0x4d052468,eax
  427f1a:	sub    al,0xf4
  427f1c:	ret    
  427f1d:	xchg   ebx,eax
  427f1e:	sbb    ecx,DWORD PTR [eax]
  427f20:	xcrypt-ctr 
  427f23:	mov    cl,0xe7
  427f25:	inc    ecx
  427f26:	pusha  
  427f27:	out    dx,al
  427f28:	fcomip st,st(0)
  427f2a:	push   esp
  427f2b:	add    dl,cl
  427f2d:	sbb    ebp,DWORD PTR [ebx-0x3]
  427f30:	sub    al,0x3
  427f32:	sbb    ah,0x0
  427f35:	sub    DWORD PTR [eax],edi
  427f37:	dec    ebx
  427f38:	cli    
  427f39:	and    esi,DWORD PTR [edi]
  427f3b:	icebp  
  427f3c:	mov    ah,0x7e
  427f3e:	mov    ds:0xe6b06400,al
  427f43:	pop    ss
  427f44:	mov    ebp,0x7db6a64d
  427f49:	hlt    
  427f4a:	jo     0x427f7b
  427f4c:	add    BYTE PTR [ecx],bl
  427f4e:	rcr    DWORD PTR [edx-0x52cf0089],0x4a
  427f55:	es aam 0x69
  427f58:	mov    al,ds:0xaf14d600
  427f5d:	cs scas al,BYTE PTR es:[edi]
  427f5f:	inc    ebx
  427f60:	loop   0x427f71
  427f62:	add    BYTE PTR [edx+0x3516d155],dl
  427f68:	adc    eax,DWORD PTR [esi-0x55]
  427f6b:	test   BYTE PTR [ebx+0xa5d5002],0x1e
  427f72:	or     DWORD PTR [ebp-0x3b9a701f],ecx
  427f78:	and    ah,BYTE PTR [esi+ebp*8+0x2f]
  427f7c:	xchg   ebp,eax
  427f7d:	inc    eax
  427f7e:	mov    ah,0x71
  427f80:	and    eax,0xc14a9900
  427f85:	pushf  
  427f86:	xlat   BYTE PTR ds:[ebx]
  427f87:	pop    esp
  427f88:	xchg   BYTE PTR [edx+0x403d3b02],bl
  427f8e:	sbb    ah,dl
  427f90:	inc    esi
  427f91:	loopne 0x427ff1
  427f93:	xor    DWORD PTR [eax+0x0],esi
  427f96:	dec    ebx
  427f97:	or     esp,DWORD PTR [ebx]
  427f99:	mov    gs,WORD PTR [esi+0x76]
  427f9c:	push   edx
  427f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f9e:	repnz rol DWORD PTR [edi],0x14
  427fa2:	add    al,0x4a
  427fa4:	loop   0x427f7b
  427fa6:	repz mov esp,0xf24a163
  427fac:	in     al,0x23
  427fae:	out    0x3d,al
  427fb0:	inc    ebp
  427fb1:	jae    0x427fd0
  427fb3:	mov    edi,0x518680d0
  427fb8:	pop    ds
  427fb9:	mov    al,0xd9
  427fbb:	jle    0x427fd9
  427fbd:	mov    WORD PTR [esi+eiz*1],gs
  427fc0:	shr    BYTE PTR [eax+0x600dbafd],0x37
  427fc7:	add    BYTE PTR [ebx],al
  427fc9:	add    cl,BYTE PTR [eax-0x3b]
  427fcc:	and    DWORD PTR [ebp+0x7],eax
  427fcf:	lods   eax,DWORD PTR ds:[esi]
  427fd0:	(bad)  
  427fd1:	jecxz  0x427fd3
  427fd3:	sub    ebx,DWORD PTR ds:0xc9ba8e5f
  427fd9:	popf   
  427fda:	jp     0x427fdc
  427fdc:	push   edi
  427fdd:	xlat   BYTE PTR ds:[ebx]
  427fde:	mov    cl,0xfd
  427fe0:	inc    esi
  427fe1:	inc    edx
  427fe2:	out    0x63,eax
  427fe4:	jb     0x427f90
  427fe6:	add    BYTE PTR [eax+0x3e],dh
  427fe9:	test   eax,0x9961fc76
  427fee:	inc    eax
  427fef:	add    BYTE PTR [ebx-0x64faed0e],bh
  427ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ff6:	mov    ds:0xc5030384,eax
  427ffb:	jnp    0x428022
  427ffd:	xchg   ebp,eax
  427ffe:	push   esp
  427fff:	xor    BYTE PTR [edx-0x36674ea0],0x58
  428006:	dec    esi
  428007:	sbb    al,0x0
  428009:	data16 lods al,BYTE PTR ds:[esi]
  42800b:	addr16 icebp 
  42800d:	sahf   
  42800e:	bound  edi,QWORD PTR [ebx]
  428010:	add    BYTE PTR [esi+0x22b7dc57],al
  428016:	sbb    BYTE PTR [eax-0x3],ch
  428019:	jl     0x42801e
  42801b:	add    BYTE PTR [eax+0x17dea209],al
  428021:	aad    0xbc
  428023:	jecxz  0x428025
  428025:	out    0xad,eax
  428027:	out    dx,al
  428028:	jae    0x42806f
  42802a:	dec    eax
  42802b:	sbb    ebp,DWORD PTR [eax+eax*1-0x2c]
  42802f:	iret   
  428030:	scas   eax,DWORD PTR es:[edi]
  428031:	mov    ebx,0x16175d8
  428036:	add    esi,esp
  428038:	push   edx
  428039:	push   ebx
  42803a:	aad    0x68
  42803c:	mov    DWORD PTR [eax+0x239dc1],0xb0d65a9e
  428046:	push   cs
  428047:	mov    esi,esi
  428049:	ret    0xe900
  42804c:	dec    edi
  42804d:	mov    esi,0xb2489ca2
  428052:	mov    es,WORD PTR [eax]
  428054:	sub    al,0xe0
  428056:	(bad)  
  428057:	pop    ebx
  428058:	dec    ebx
  428059:	pop    eax
  42805a:	mov    al,ds:0x97a30790
  42805f:	inc    esp
  428060:	in     eax,dx
  428061:	sti    
  428062:	xor    BYTE PTR [ebx+0x72d255],cl
  428068:	leave  
  428069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42806a:	call   0x3a:0x86488ef0
  428071:	cmp    eax,edi
  428073:	js     0x428014
  428075:	imul   esi,ebp,0x6
  428078:	mov    eax,ds:0xbfed7a0e
  42807d:	adc    al,0x21
  42807f:	sub    ah,BYTE PTR [edx-0x712f7384]
  428085:	retf   0x9b01
  428088:	jg     0x42804b
  42808a:	sub    BYTE PTR [esi+0x3c],ah
  42808d:	inc    eax
  42808e:	fdivr  st(7),st
  428090:	pop    ebx
  428091:	add    BYTE PTR [ecx+ebx*4-0x51],dh
  428095:	in     eax,0x62
  428097:	push   cs
  428098:	xor    al,BYTE PTR [edx+0x3a]
  42809b:	or     esp,esi
  42809d:	cmp    edx,DWORD PTR [esi+0x48857300]
  4280a3:	(bad)  
  4280a4:	pop    edi
  4280a5:	sar    DWORD PTR fs:[esi-0x33],cl
  4280a9:	pop    es
  4280aa:	mov    edi,0xbad6b115
  4280af:	dec    edi
  4280b0:	shr    BYTE PTR [edi+0x7f44fa4d],0x1d
  4280b7:	or     eax,ebx
  4280b9:	adc    BYTE PTR [eax+0x1cf2ae1b],al
  4280bf:	and    DWORD PTR [edx+eiz*8+0x5d3c0004],esi
  4280c6:	jns    0x4280b7
  4280c8:	jbe    0x4280d0
  4280ca:	ja     0x4280a6
  4280cc:	pop    es
  4280cd:	dec    eax
  4280ce:	outs   dx,DWORD PTR ds:[esi]
  4280cf:	push   ecx
  4280d0:	fs xchg ecx,eax
  4280d2:	inc    eax
  4280d3:	dec    ecx
  4280d4:	ret    0x7062
  4280d7:	add    bh,dh
  4280d9:	clc    
  4280da:	dec    ebp
  4280db:	and    al,BYTE PTR [edi+0xe91afe]
  4280e1:	jne    0x428138
  4280e3:	pushf  
  4280e4:	leave  
  4280e5:	mov    bl,0x97
  4280e7:	test   al,0x6c
  4280e9:	mov    al,0x9c
  4280eb:	add    BYTE PTR [edi-0x7d3eab31],ch
  4280f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280f2:	(bad)  
  4280f3:	cmp    al,0x0
  4280f5:	push   ebp
  4280f6:	or     eax,0x3059caab
  4280fb:	jge    0x4280af
  4280fd:	add    ah,ah
  4280ff:	mov    ds:0xc2bbd1dd,al
  428104:	fcomp  st(2)
  428106:	add    BYTE PTR [ecx-0x43],ch
  428109:	push   ss
  42810a:	jnp    0x42816b
  42810c:	lods   al,BYTE PTR ds:[esi]
  42810d:	cwde   
  42810e:	retf   
  42810f:	mov    eax,0x7a8f099f
  428114:	jg     0x428187
  428116:	sub    ecx,0x9
  428119:	pop    ss
  42811a:	test   al,0x90
  42811c:	enter  0xb8,0xec
  428120:	fsin   
  428122:	sbb    BYTE PTR [edx+0x16505580],cl
  428128:	mov    DWORD PTR [edx+0x4c6300f9],ebx
  42812e:	add    DWORD PTR [eax+ecx*1-0x4ceefefc],edx
  428135:	add    bl,BYTE PTR [ecx-0x1372ad45]
  42813b:	data16 rol BYTE PTR [eax],cl
  42813e:	clc    
  42813f:	mov    cl,0xc5
  428141:	(bad)  
  428142:	mov    esi,0x763337
  428147:	jl     0x4281ad
  428149:	pop    ds
  42814a:	jmp    0x6355d25
  42814f:	jmp    0x700d:0x8c880027
  428156:	ret    0xf0ec
  428159:	mov    BYTE PTR [ecx],0x75
  42815c:	adc    edx,ebp
  42815e:	jp     0x42818b
  428160:	xchg   esp,eax
  428161:	mov    cl,0x30
  428163:	mov    dl,0xe9
  428165:	cmp    al,0xe3
  428167:	xlat   BYTE PTR ds:[ebx]
  428168:	inc    DWORD PTR [eax]
  42816a:	fwait
  42816b:	imul   ecx,DWORD PTR [edi-0x69d2a9ed],0x48
  428172:	add    dh,dl
  428174:	daa    
  428175:	popf   
  428176:	in     al,dx
  428177:	punpckhbw mm2,mm3
  42817a:	push   ds
  42817b:	add    DWORD PTR [edx],esi
  42817d:	adc    al,0x17
  42817f:	rol    BYTE PTR [eax+edi*2-0x17],0xdc
  428184:	int    0x61
  428186:	pop    es
  428187:	mov    ch,BYTE PTR [ecx]
  428189:	dec    eax
  42818a:	enter  0x2024,0x5d
  42818e:	mov    al,0x21
  428190:	jl     0x428192
  428192:	aad    0x73
  428194:	cmp    BYTE PTR [edx+0x10],bl
  428197:	push   ecx
  428198:	and    eax,0xf87809
  42819d:	xchg   ebp,eax
  42819e:	shl    edi,1
  4281a0:	cmp    DWORD PTR [edx-0x16],ebp
  4281a3:	inc    ecx
  4281a4:	xchg   edi,eax
  4281a5:	jp     0x4281c4
  4281a7:	add    BYTE PTR [ebx],dl
  4281a9:	pop    ds
  4281aa:	sub    esi,DWORD PTR [esi+0x6e]
  4281ad:	cmc    
  4281ae:	pop    ss
  4281af:	mov    ds:0xcc1e297a,al
  4281b4:	cli    
  4281b5:	pop    eax
  4281b6:	ret    
  4281b7:	shl    DWORD PTR [edi+0x6c909882],cl
  4281bd:	idiv   BYTE PTR [eax+eax*1+0x75]
  4281c1:	out    dx,eax
  4281c2:	mov    edx,esp
  4281c4:	mov    BYTE PTR [eax-0x33f13f3a],ch
  4281ca:	js     0x42820b
  4281cc:	mov    edi,0xc6d60acb
  4281d1:	add    BYTE PTR [ebx-0x18],bl
  4281d4:	push   esp
  4281d5:	add    al,0x84
  4281d7:	call   0x52fb:0xb99b501
  4281de:	add    DWORD PTR [esp+esi*8],edx
  4281e1:	mov    edx,0x666a00ac
  4281e6:	sub    BYTE PTR [edx],bh
  4281e8:	inc    edx
  4281e9:	outs   dx,DWORD PTR ds:[esi]
  4281ea:	dec    edx
  4281eb:	or     DWORD PTR [eax],eax
  4281ed:	sbb    eax,0xf3067857
  4281f2:	lahf   
  4281f3:	push   esp
  4281f4:	aad    0x0
  4281f6:	(bad)  
  4281f7:	mov    eax,0xcfc5d0a7
  4281fc:	push   ss
  4281fd:	pop    es
  4281fe:	push   cs
  4281ff:	push   0x9ed27522
  428204:	sbb    BYTE PTR [esi],0x4f
  428207:	scas   eax,DWORD PTR es:[edi]
  428208:	sti    
  428209:	xchg   esp,eax
  42820a:	aas    
  42820b:	add    BYTE PTR [eax+0x7c],dl
  42820e:	pushf  
  42820f:	mov    ebp,0x75465f5e
  428214:	mov    al,0x6f
  428216:	push   ds
  428217:	dec    ebx
  428218:	and    al,0x27
  42821a:	fsubr  QWORD PTR [edi]
  42821c:	rol    BYTE PTR [ebx-0x4b],0x63
  428220:	mov    ebp,0xd1f015fe
  428225:	js     0x42827f
  428227:	add    BYTE PTR [edi+ebx*2],bh
  42822a:	add    DWORD PTR [esi+0x30883659],ebx
  428230:	add    BYTE PTR [ebx],dh
  428232:	int    0xb8
  428234:	xor    eax,0x61ba06dc
  428239:	add    BYTE PTR [ecx],dl
  42823b:	scas   al,BYTE PTR es:[edi]
  42823c:	sub    al,0x6e
  42823e:	jnp    0x4281cc
  428240:	fs xchg esi,eax
  428242:	add    BYTE PTR ds:0x89335375,ch
  428248:	mov    cl,0x52
  42824a:	xor    eax,0x30c61800
  42824f:	sub    al,0x98
  428251:	aaa    
  428252:	imul   esi,ecx,0xd47ead13
  428258:	add    bl,ah
  42825a:	mov    WORD PTR [ecx+edi*4+0x48002a21],ss
  428261:	daa    
  428262:	dec    esp
  428263:	pop    ss
  428264:	adc    ah,BYTE PTR [esi+0x58]
  428267:	retf   
  428268:	add    BYTE PTR [esi+0x797a0eb1],ah
  42826e:	sub    DWORD PTR [ecx+edx*4-0x1ff6ec00],ebx
  428275:	jno    0x42823c
  428277:	cmc    
  428278:	add    DWORD PTR [esi],ebp
  42827a:	add    BYTE PTR [edx],dl
  42827c:	xchg   ebx,eax
  42827e:	ror    al,cl
  428280:	xchg   esp,eax
  428281:	push   ecx
  428282:	mov    ah,0x0
  428284:	test   BYTE PTR ds:0x468ecfc6,0x6f
  42828b:	inc    DWORD PTR [eax]
  42828d:	jns    0x4282f7
  42828f:	cmc    
  428290:	adc    eax,0xf2ec9c57
  428295:	add    dl,cl
  428297:	adc    ebx,DWORD PTR [edx]
  428299:	(bad)  
  42829a:	cld    
  42829b:	ror    BYTE PTR [edi+esi*8+0x0],cl
  42829f:	mov    edx,0x5e161e7f
  4282a4:	cli    
  4282a5:	ins    DWORD PTR es:[edi],dx
  4282a6:	retf   
  4282a7:	add    bl,ah
  4282a9:	jmp    DWORD PTR [eax-0x1a]
  4282ac:	fsub   QWORD PTR [esi]
  4282ae:	js     0x428313
  4282b0:	add    BYTE PTR [edi+0x2b],dh
  4282b3:	ins    BYTE PTR es:[edi],dx
  4282b4:	outs   dx,DWORD PTR ds:[esi]
  4282b5:	retf   0x4b30
  4282b8:	in     al,0xf2
  4282ba:	scas   al,BYTE PTR es:[edi]
  4282bb:	add    edi,DWORD PTR [eax+edi*4]
  4282be:	push   0xa8945357
  4282c3:	and    bh,ah
  4282c5:	lock loop 0x4282e7
  4282c8:	add    cl,BYTE PTR [ebx]
  4282ca:	(bad)  
  4282cb:	jns    0x4282ca
  4282cd:	dec    eax
  4282ce:	sub    BYTE PTR [eax-0x3a],al
  4282d1:	call   0x7a80:0x69103dfa
  4282d8:	lahf   
  4282d9:	mov    gs,ecx
  4282db:	pop    es
  4282dc:	push   cs
  4282dd:	stos   BYTE PTR es:[edi],al
  4282de:	add    esi,DWORD PTR [ebx-0x19c4a6d2]
  4282e4:	mov    esp,0xd3fe1ed0
  4282e9:	ja     0x428363
  4282eb:	add    dh,dl
  4282ed:	and    eax,0x7d84889c
  4282f2:	add    DWORD PTR [eax+0x653d3a],edx
  4282f8:	rcl    DWORD PTR [edx],0x54
  4282fb:	sbb    ah,BYTE PTR [edi]
  4282fd:	bound  eax,QWORD PTR es:[eax]
  428300:	xor    al,0xb0
  428302:	xchg   ebp,eax
  428303:	into   
  428304:	loope  0x4282b3
  428306:	ins    BYTE PTR es:[edi],dx
  428307:	out    dx,eax
  428308:	jno    0x4282a2
  42830a:	add    cl,dl
  42830c:	test   dh,bh
  42830e:	les    edi,FWORD PTR [ebx+0x52f951]
  428314:	test   al,0x3e
  428316:	dec    esp
  428317:	aaa    
  428318:	mov    dl,al
  42831a:	es mov cl,0x0
  42831d:	jmp    0x428366
  42831f:	or     esp,DWORD PTR [edi-0x2a7fe26e]
  428325:	add    eax,0x27e35d97
  42832a:	or     al,0x80
  42832c:	sahf   
  42832d:	(bad)  
  42832e:	loop   0x428343
  428330:	pop    ss
  428331:	stc    
  428332:	sar    dh,cl
  428334:	add    BYTE PTR [edx],al
  428336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428337:	scas   eax,DWORD PTR es:[edi]
  428338:	adc    eax,0x91b86633
  42833d:	add    BYTE PTR [edx],bl
  42833f:	xchg   edi,eax
  428340:	fstp   QWORD PTR [eax+0x49]
  428343:	cwde   
  428344:	popa   
  428345:	push   edx
  428346:	add    bh,ch
  428348:	xor    BYTE PTR [ebx+0x31e1e77e],0x30
  42834f:	jne    0x4282eb
  428351:	cmovs  ecx,DWORD PTR [ecx]
  428354:	int3   
  428355:	push   ecx
  428356:	rcl    BYTE PTR [ebx],0x90
  428359:	in     al,0x6b
  42835b:	fcomp  QWORD PTR [edi]
  42835d:	mov    bh,BYTE PTR [ecx+0x6e2240c9]
  428363:	mov    ebp,0xe71de6fc
  428368:	pusha  
  428369:	cli    
  42836a:	xchg   DWORD PTR [ecx],edi
  42836c:	rol    DWORD PTR fs:[eax+0x2075107c],0x38
  428374:	scas   al,BYTE PTR es:[edi]
  428375:	inc    esp
  428376:	add    BYTE PTR [ecx+0x5c],ah
  428379:	lea    esi,[eax-0x30]
  42837c:	and    ebp,edi
  42837e:	push   0xa7dcc00
  428383:	shl    DWORD PTR [eax+ecx*2-0x1bffca77],1
  42838a:	fdivr  QWORD PTR [eax+0x3b5739fc]
  428390:	pop    ss
  428391:	add    al,ah
  428393:	adc    DWORD PTR [ecx+0x1],ecx
  428396:	pop    edx
  428397:	mov    edx,0x4200a592
  42839c:	dec    edi
  42839d:	dec    edx
  42839e:	mov    esp,0xe2906067
  4283a3:	mov    eax,0x41a7003c
  4283a8:	xor    bh,0x4b
  4283ab:	push   ebp
  4283ac:	std    
  4283ad:	into   
  4283ae:	add    BYTE PTR [esi+0xc875d1a],ah
  4283b4:	jecxz  0x428412
  4283b6:	or     DWORD PTR [eax],eax
  4283b8:	add    al,0x5f
  4283ba:	jp     0x428342
  4283bc:	clc    
  4283bd:	leave  
  4283be:	bound  eax,QWORD PTR gs:[eax]
  4283c1:	or     ch,al
  4283c3:	std    
  4283c4:	cli    
  4283c5:	stos   DWORD PTR es:[edi],eax
  4283c6:	pop    edx
  4283c7:	jecxz  0x4283ba
  4283c9:	sbb    al,0xbf
  4283cb:	jb     0x428373
  4283cd:	inc    eax
  4283ce:	inc    ecx
  4283cf:	sbb    eax,0xe663bdac
  4283d4:	add    BYTE PTR [eax],ch
  4283d6:	mov    WORD PTR [esi-0x44],cs
  4283d9:	xor    al,0x51
  4283db:	push   edx
  4283dc:	push   esp
  4283dd:	add    DWORD PTR [esi+0x2d],eax
  4283e0:	cmc    
  4283e1:	adc    DWORD PTR [edx-0x1d],esp
  4283e4:	xor    eax,0x5bb2f640
  4283e9:	js     0x4283eb
  4283eb:	call   0x57c2984
  4283f0:	iret   
  4283f1:	neg    BYTE PTR [esi+0x0]
  4283f4:	std    
  4283f5:	cs mov eax,0x4379299c
  4283fb:	dec    esp
  4283fc:	adc    bh,BYTE PTR ds:0x6c00af3b
  428402:	imul   ecx,DWORD PTR [edi],0xf2e11772
  428408:	push   esi
  428409:	add    BYTE PTR [ecx+eiz*4+0x65],bh
  42840d:	pop    edx
  42840e:	add    al,0x32
  428410:	fsubr  DWORD PTR [edx]
  428412:	add    dh,ch
  428414:	cmp    al,0xe3
  428416:	ret    0x8eb
  428419:	loopne 0x4283df
  42841b:	inc    esi
  42841c:	adc    DWORD PTR [ecx],eax
  42841e:	sub    dl,ch
  428420:	pop    esi
  428421:	xor    eax,0xffffffec
  428424:	mov    eax,eax
  428426:	lods   al,BYTE PTR ds:[esi]
  428427:	bound  edx,QWORD PTR [ebx]
  428429:	(bad)  
  42842a:	lahf   
  42842b:	data16 add BYTE PTR [esi+0x77],ch
  42842f:	jbe    0x4283b7
  428431:	les    esi,FWORD PTR [ebp+0x300ed000]
  428437:	xchg   edi,eax
  428438:	inc    edi
  428439:	ins    DWORD PTR es:[edi],dx
  42843a:	enter  0xa9,0x6f
  42843e:	adc    ah,cl
  428440:	adc    al,0x98
  428442:	push   ebx
  428443:	mov    ecx,0xe2f0012d
  428448:	push   ebp
  428449:	sub    ebx,DWORD PTR [edx-0x3a2f06ce]
  42844f:	out    0x0,al
  428451:	inc    edx
  428452:	jno    0x4284b9
  428454:	retf   
  428455:	inc    ecx
  428456:	mov    esi,0x6c00f5a5
  42845b:	cmp    BYTE PTR [esi],al
  42845d:	ficomp DWORD PTR [ecx+0x69]
  428460:	mov    bh,0xdc
  428462:	add    ebx,DWORD PTR [edi-0x68]
  428465:	fisubr WORD PTR [edx-0x26373482]
  42846b:	add    eax,0x64840034
  428470:	sub    eax,0x7dff914a
  428475:	lods   al,BYTE PTR ds:[esi]
  428476:	add    ebp,esp
  428478:	repz cmp edi,DWORD PTR [ebp-0x1b582578]
  42847f:	add    eax,0xabf0f19
  428484:	js     0x4284a2
  428486:	xor    BYTE PTR [ecx],0x2e
  428489:	and    BYTE PTR [ebx-0x3e],0x3
  42848d:	sbb    BYTE PTR [edi-0x3bd9dcb9],al
  428493:	mov    al,0x9e
  428495:	popf   
  428496:	dec    ebp
  428497:	add    BYTE PTR [edx],cl
  428499:	sbb    DWORD PTR [edi],ecx
  42849b:	stc    
  42849c:	(bad)  
  42849d:	sub    eax,DWORD PTR [ecx]
  42849f:	out    dx,al
  4284a0:	add    BYTE PTR [ebp-0x40],ah
  4284a3:	pop    edx
  4284a4:	push   esi
  4284a5:	mov    DWORD PTR [edi-0x11],eax
  4284a8:	mov    cl,0x48
  4284aa:	add    ecx,DWORD PTR [eax+0x3]
  4284ad:	mov    ss,WORD PTR [esi]
  4284af:	out    0xa6,eax
  4284b1:	aas    
  4284b2:	fbld   TBYTE PTR [eax+0x1b0f1cd2]
  4284b8:	imul   al
  4284ba:	add    edx,eax
  4284bc:	fiadd  WORD PTR [edi-0xfa01160]
  4284c2:	jmp    0x428463
  4284c4:	imul   eax,DWORD PTR [edi],0xcff2c3b
  4284ca:	enter  0x5e87,0xe0
  4284ce:	retf   0x5bf6
  4284d1:	mov    bl,0xf3
  4284d3:	fadd   QWORD PTR [ebp-0x3f]
  4284d6:	jmp    0xb86:0xa2fd00fb
  4284dd:	fld    QWORD PTR [ecx+0x56]
  4284e0:	xor    DWORD PTR [edi],eax
  4284e2:	jge    0x428520
  4284e4:	sub    ah,BYTE PTR ds:0xf338a2c4
  4284ea:	inc    eax
  4284eb:	cld    
  4284ec:	push   0xffffff87
  4284ee:	add    BYTE PTR [ebx-0x8],bh
  4284f1:	aad    0x5
  4284f3:	lea    edx,[eax+0x2a]
  4284f6:	and    al,0x16
  4284f8:	dec    esi
  4284f9:	dec    ebp
  4284fa:	rol    DWORD PTR [eax],1
  4284fc:	(bad)  
  4284fe:	adc    BYTE PTR [esi],ah
  428500:	pop    ecx
  428501:	add    al,BYTE PTR [eax]
  428503:	das    
  428504:	add    DWORD PTR [edx+0x6],0xccbae2b0
  42850b:	add    edx,ebp
  42850d:	mov    al,ss:0x263451c9
  428513:	in     al,dx
  428514:	sub    eax,0x4db900be
  428519:	out    dx,al
  42851a:	ret    
  42851b:	fwait
  42851c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42851d:	mov    bl,0x86
  42851f:	add    bl,bh
  428521:	call   0x3df6:0x24ab377c
  428528:	push   cs
  428529:	lods   eax,DWORD PTR ds:[esi]
  42852a:	aam    0xca
  42852c:	dec    esp
  42852d:	pusha  
  42852e:	fcom   DWORD PTR [edi+0x8e6706]
  428534:	jne    0x4285af
  428536:	pop    ebx
  428537:	inc    ecx
  428538:	push   0x58e4c23d
  42853d:	(bad)  
  42853e:	fld    QWORD PTR [eax]
  428540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428541:	stos   BYTE PTR es:[edi],al
  428542:	push   0xffffff93
  428544:	jecxz  0x42854e
  428546:	lahf   
  428547:	mov    al,0x75
  428549:	add    BYTE PTR [esp+ebp*2-0x6ffc927b],dh
  428550:	lea    ebx,[ebx+0x46bb201]
  428556:	push   cs
  428557:	or     eax,0x17d8e163
  42855c:	pop    ebp
  42855d:	add    al,dh
  42855f:	xor    DWORD PTR [ecx+0x66dabe82],edi
  428565:	push   ecx
  428566:	add    BYTE PTR [ecx],al
  428568:	shl    BYTE PTR [ebx+0x24062637],0xb2
  42856f:	add    dh,bh
  428571:	mov    cl,bh
  428573:	inc    ebx
  428574:	cmp    bh,0x7b
  428577:	fadd   QWORD PTR [eax]
  428579:	cli    
  42857a:	adc    edi,DWORD PTR [eax+0x75]
  42857d:	sub    al,0xd5
  42857f:	or     al,0xd2
  428581:	add    BYTE PTR [eax+0x1c70592a],dh
  428587:	pop    eax
  428588:	fist   WORD PTR [ebp+0x0]
  42858b:	loope  0x42852d
  42858d:	dec    edx
  42858e:	lock lods al,BYTE PTR ds:[esi]
  428590:	adc    DWORD PTR [ebx+edx*2+0x1eba8a3a],ecx
  428597:	xadd   al,al
  42859a:	sub    al,0xc1
  42859c:	ss cmp al,0x2b
  42859f:	idiv   DWORD PTR [ecx+0x44]
  4285a2:	push   cs
  4285a3:	aas    
  4285a4:	call   0x296f:0xb20feba4
  4285ab:	xor    al,0x1
  4285ae:	or     bh,al
  4285b0:	scas   al,BYTE PTR es:[edi]
  4285b1:	add    BYTE PTR [ebx+ebx*2],bl
  4285b4:	jo     0x4285d3
  4285b6:	xchg   edi,eax
  4285b7:	das    
  4285b8:	cmp    bh,BYTE PTR [edx+0x549b9000]
  4285be:	out    dx,eax
  4285bf:	and    ecx,ebx
  4285c1:	push   ds
  4285c2:	push   esi
  4285c3:	add    BYTE PTR [edi-0x565079de],cl
  4285c9:	aam    0xae
  4285cb:	mov    ah,0x7
  4285cd:	fucomi st,st(0)
  4285cf:	cdq    
  4285d0:	jp     0x428556
  4285d2:	mov    al,ds:0xe34ea3ed
  4285d7:	pmaxub mm0,QWORD PTR [eax+0x1c]
  4285db:	xlat   BYTE PTR ds:[ebx]
  4285dc:	shl    BYTE PTR ds:0x7157c4dd,0x70
  4285e3:	test   al,0x0
  4285e5:	daa    
  4285e6:	xchg   edx,eax
  4285e7:	mov    eax,0xffeda9d4
  4285ec:	jne    0x4285da
  4285ee:	mov    al,BYTE PTR [eax]
  4285f0:	xchg   BYTE PTR [edi+ebp*4],bl
  4285f3:	xchg   edi,eax
  4285f4:	inc    eax
  4285f5:	lahf   
  4285f6:	sub    dl,cl
  4285f8:	add    dh,ch
  4285fa:	arpl   WORD PTR ds:0x4751e0f0,cx
  428600:	rcr    BYTE PTR [eax-0x4bd3e219],0x72
  428607:	pop    edi
  428608:	pop    edi
  428609:	push   edx
  42860a:	lods   eax,DWORD PTR ds:[esi]
  42860b:	add    ecx,DWORD PTR [esi-0x2fbc6296]
  428611:	xchg   edx,eax
  428612:	retf   0xe207
  428615:	fld    QWORD PTR [eax]
  428617:	dec    edx
  428618:	scas   eax,DWORD PTR es:[edi]
  428619:	push   esi
  42861a:	or     al,0xf7
  42861c:	dec    ebp
  42861d:	fst    DWORD PTR [edi+eax*1]
  428620:	mov    eax,0xc4c2d3c3
  428625:	pusha  
  428626:	(bad)  
  428627:	lds    ecx,FWORD PTR [edx-0x2d58fd28]
  42862d:	mov    ecx,0x77042c6d
  428632:	loopne 0x428653
  428634:	xchg   edx,eax
  428635:	adc    DWORD PTR [ecx+edi*2],ebx
  428638:	and    BYTE PTR [edi+0x32e54dc0],al
  42863e:	pop    esp
  42863f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428640:	idiv   BYTE PTR [edi-0x8]
  428643:	jnp    0x42863e
  428645:	add    BYTE PTR [ebx-0xcd3a6e9],cl
  42864b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42864c:	mov    bh,0x10
  42864e:	add    BYTE PTR [eax],ah
  428650:	mov    ds:0x2a0fd0ba,eax
  428655:	icebp  
  428656:	sub    DWORD PTR [eax],eax
  428658:	or     BYTE PTR [ebp-0x2e8f7102],dh
  42865e:	sbb    al,0x57
  428660:	jp     0x428663
  428662:	add    ch,dh
  428664:	xor    esi,0xffffffea
  428667:	inc    edx
  428668:	add    al,0x50
  42866a:	out    dx,al
  42866b:	sbb    al,0x14
  42866d:	arpl   WORD PTR [ebx+0x235daf00],bp
  428673:	mov    eax,ds:0x8e07e398
  428678:	adc    eax,0xe0d60a61
  42867d:	repz push ss
  42867f:	(bad)  
  428680:	jmp    0x8275b785
  428685:	sbb    eax,0x6367d88
  42868a:	add    ch,dh
  42868c:	mov    ah,0xc0
  42868e:	sbb    dl,BYTE PTR [edx]
  428690:	adc    eax,0x20000e8a
  428695:	push   ss
  428696:	mov    ebp,0x1074ceaf
  42869b:	sbb    al,bh
  42869d:	test   al,0x0
  42869f:	nop
  4286a0:	lods   al,BYTE PTR ds:[esi]
  4286a1:	retf   
  4286a2:	jl     0x4286bf
  4286a4:	retf   0x66df
  4286a7:	add    eax,DWORD PTR [edx]
  4286a9:	sub    eax,0x52283bd9
  4286ae:	mov    al,ds:0xb4fe82
  4286b3:	nop
  4286b4:	not    edi
  4286b6:	inc    edx
  4286b7:	mov    ecx,0x157af24
  4286bc:	out    dx,al
  4286bd:	out    0x61,eax
  4286bf:	ja     0x428686
  4286c1:	pushf  
  4286c2:	ror    esp,1
  4286c4:	jo     0x42868e
  4286c6:	cs std 
  4286c8:	jnp    0x428655
  4286ca:	add    BYTE PTR [ebp-0x51],dl
  4286cd:	dec    esi
  4286ce:	mov    ecx,0xc400c159
  4286d3:	je     0x4286eb
  4286d5:	xlat   BYTE PTR ds:[ebx]
  4286d6:	shr    edx,cl
  4286d8:	adc    dh,BYTE PTR [esi]
  4286da:	add    esp,esp
  4286dc:	push   0xd956b7d4
  4286e1:	aad    0x21
  4286e3:	(bad)  
  4286e4:	repnz inc eax
  4286e6:	cs cmp al,0xe
  4286e9:	push   cs
  4286ea:	hlt    
  4286eb:	xor    al,0x8b
  4286ed:	inc    esp
  4286ee:	loopne 0x428743
  4286f0:	push   edi
  4286f1:	adc    DWORD PTR [edi+0x31],eax
  4286f4:	cld    
  4286f5:	jmp    0x74b9:0x8924fe01
  4286fc:	pushf  
  4286fd:	loopne 0x4286eb
  4286ff:	lods   al,BYTE PTR ds:[esi]
  428700:	sysret 
  428702:	mov    eax,0x90c8c9de
  428707:	popa   
  428708:	ret    0x2ea8
  42870b:	(bad)  
  42870c:	cwde   
  42870d:	ins    DWORD PTR es:[edi],dx
  42870e:	(bad)  
  428710:	add    BYTE PTR [ecx+0x4576e30a],cl
  428716:	jnp    0x4286d5
  428718:	xor    eax,0x37c25100
  42871d:	(bad)  
  42871e:	cmc    
  42871f:	das    
  428720:	fld    DWORD PTR [ecx]
  428722:	add    DWORD PTR [ecx+ebx*1-0x66],ecx
  428726:	xlat   BYTE PTR ds:[ebx]
  428727:	clc    
  428728:	and    al,0xff
  42872a:	fldlg2 
  42872c:	les    esi,FWORD PTR [ebp-0x50]
  42872f:	pop    ds
  428730:	cmp    DWORD PTR [ecx-0x3f],edx
  428733:	shl    cl,0x3d
  428736:	adc    bh,BYTE PTR [ebx-0xc078ba]
  42873c:	lods   eax,DWORD PTR ds:[esi]
  42873d:	xor    BYTE PTR [esi+0x3047129],0x8b
  428744:	cdq    
  428745:	cwde   
  428746:	lds    eax,FWORD PTR [ecx]
  428748:	mov    fs,WORD PTR [ebx+0x145756f4]
  42874e:	push   0x7746d8
  428753:	loop   0x42875f
  428755:	mov    edi,0xa1623d7a
  42875a:	push   es
  42875b:	vmwrite ecx,DWORD PTR [ecx]
  42875e:	and    esp,eax
  428760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428761:	mov    ds:0xd14801d0,al
  428766:	cmc    
  428767:	das    
  428768:	loopne 0x428737
  42876a:	pushf  
  42876b:	in     eax,0xf0
  42876d:	lock imul ebp,DWORD PTR [esi],0xffffff90
  428771:	xchg   ebx,eax
  428772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428773:	add    BYTE PTR [ebp-0x60517019],bh
  428779:	cmp    eax,0xac741000
  42877e:	mov    bl,0xf9
  428780:	lea    esp,[edx-0x547aff7d]
  428786:	sub    esi,ebx
  428788:	daa    
  428789:	push   esi
  42878a:	xchg   BYTE PTR [ecx],al
  42878c:	add    DWORD PTR [ebp+0x410ad3b1],edx
  428792:	test   al,0x50
  428794:	stc    
  428795:	cld    
  428796:	loopne 0x4287b7
  428798:	jne    0x4287b9
  42879a:	or     ah,0x54
  42879d:	cmp    al,BYTE PTR [eax]
  42879f:	mov    dh,0x21
  4287a1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287a3:	data16 loope 0x4287b7
  4287a6:	add    BYTE PTR [eax-0x63],cl
  4287a9:	ss dec esp
  4287ab:	push   edx
  4287ac:	cmp    ebx,DWORD PTR [eax+edx*4+0x1f]
  4287b0:	lahf   
  4287b1:	int    0x9e
  4287b3:	add    bh,al
  4287b5:	and    eax,0x5a580c45
  4287ba:	add    BYTE PTR [eax],dl
  4287bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287bd:	aad    0xcf
  4287bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287c0:	stos   DWORD PTR es:[edi],eax
  4287c1:	pop    esp
  4287c2:	mov    ds:0x7100f77f,eax
  4287c7:	rcl    DWORD PTR [edx],1
  4287c9:	retf   
  4287ca:	aam    0x81
  4287cc:	fstp   QWORD PTR [edx]
  4287ce:	add    BYTE PTR [esi+0x22cee551],cl
  4287d4:	and    eax,0xcc00de54
  4287d9:	mov    ah,0xe8
  4287db:	jle    0x4287a6
  4287dd:	rol    dh,cl
  4287df:	cmp    al,BYTE PTR [eax]
  4287e1:	popa   
  4287e2:	arpl   WORD PTR [eax+0x2e3fef2b],di
  4287e8:	test   eax,0x6a0f787c
  4287ed:	jle    0x4287d4
  4287ef:	popf   
  4287f0:	sub    BYTE PTR [esi-0x2e0b99a4],0x3e
  4287f7:	dec    esi
  4287f8:	push   eax
  4287f9:	sub    bl,0x49
  4287fc:	mov    esp,0xd4f27c5
  428801:	(bad)  
  428803:	jo     0x4287fa
  428805:	pop    eax
  428807:	sub    al,0x15
  428809:	ins    DWORD PTR es:[edi],dx
  42880a:	(bad)  
  42880b:	stc    
  42880c:	ja     0x4287f5
  42880e:	add    BYTE PTR [edx-0x403b4ebd],ah
  428814:	lea    edi,[esi]
  428816:	xor    eax,0x58e95603
  42881b:	sbb    al,0x3
  42881d:	std    
  42881e:	(bad)  
  42881f:	rcr    cl,1
  428821:	sbb    ebx,DWORD PTR [ebx+0x960004c]
  428827:	sysret 
  428829:	shl    BYTE PTR ds:0xdc005d56,1
  42882f:	jecxz  0x4288a5
  428831:	xor    DWORD PTR [ebp-0x25],eax
  428834:	or     ebx,DWORD PTR [esp+ebx*1+0x5f635f9e]
  42883b:	lea    eax,[eax+0x26]
  42883e:	pop    ds
  42883f:	scas   al,BYTE PTR es:[edi]
  428840:	int    0xfa
  428842:	dec    ebp
  428843:	add    BYTE PTR ds:0xee72d4d8,al
  428849:	cmp    al,0xac
  42884b:	add    al,0x7e
  42884d:	iret   
  42884e:	jne    0x428839
  428850:	add    BYTE PTR [esi+0xb],ah
  428853:	stos   DWORD PTR es:[edi],eax
  428854:	add    ebx,DWORD PTR [ecx+0xf4de567]
  42885a:	aad    0x8f
  42885c:	xchg   ecx,eax
  42885d:	(bad)  
  42885e:	loopne 0x42883f
  428860:	rcl    eax,cl
  428862:	mov    dl,cl
  428864:	add    al,ah
  428866:	push   eax
  428867:	xlat   BYTE PTR ds:[ebx]
  428868:	sub    DWORD PTR [ecx-0x6f18c8ed],0x7a
  42886f:	add    BYTE PTR [edx+0xd648230],dh
  428875:	mov    ch,0xbe
  428877:	lds    edx,FWORD PTR [esi]
  428879:	and    bl,BYTE PTR [eax+0xe20ec7b]
  42887f:	push   eax
  428880:	test   BYTE PTR [edx-0x3927c280],cl
  428886:	pop    ebx
  428887:	mov    ?,WORD PTR ds:0x3800e939
  42888d:	and    BYTE PTR ds:0xa35dd276,dl
  428893:	add    edx,DWORD PTR [ecx+0x518d3f67]
  428899:	push   ds
  42889a:	fcomp  DWORD PTR [ebp+0x5a029907]
  4288a0:	imul   edi,DWORD PTR [eax+0x2a],0xe300be79
  4288a7:	jnp    0x4288f4
  4288a9:	xchg   ebx,eax
  4288aa:	add    bh,BYTE PTR [eax+0x4f23c35f]
  4288b0:	cs inc ecx
  4288b2:	loop   0x42883c
  4288b4:	ror    BYTE PTR [ecx-0x5a9afdcd],0x1f
  4288bb:	xchg   ebp,eax
  4288bc:	mov    al,ds:0xd19dc0ac
  4288c1:	jne    0x4288c3
  4288c3:	(bad)  
  4288c4:	(bad)  
  4288c5:	adc    BYTE PTR [edi],dl
  4288c7:	add    eax,0xf65946
  4288cc:	mov    WORD PTR [esi],?
  4288ce:	cli    
  4288cf:	lds    ebp,FWORD PTR [eax-0x79dc41b]
  4288d5:	push   ebx
  4288d6:	add    dl,dh
  4288d8:	jb     0x42892b
  4288da:	pop    esi
  4288db:	adc    BYTE PTR [edx],0xcf
  4288de:	sub    BYTE PTR [eax],al
  4288e0:	in     al,dx
  4288e1:	out    0xb2,al
  4288e3:	rcl    BYTE PTR [edi],1
  4288e5:	push   ebp
  4288e6:	mov    esp,0x6f91071a
  4288eb:	fucomi st,st(2)
  4288ed:	pop    ebx
  4288ee:	adc    cl,ch
  4288f0:	or     al,0x31
  4288f2:	std    
  4288f3:	cs xchg edx,eax
  4288f5:	add    DWORD PTR [eax+0x3a],edx
  4288f8:	add    dh,ah
  4288fa:	add    BYTE PTR [esi+0x6dd1e59b],0xf
  428901:	dec    edx
  428902:	add    BYTE PTR [ebx],0x73
  428905:	add    BYTE PTR [edi],bl
  428907:	into   
  428908:	cmp    al,0x59
  42890a:	int    0x0
  42890c:	mov    ah,0x70
  42890e:	inc    esi
  42890f:	push   esi
  428910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428911:	fninit 
  428913:	ror    BYTE PTR [ecx],0xe6
  428916:	out    dx,eax
  428917:	jbe    0x428931
  428919:	pop    ebp
  42891a:	pusha  
  42891b:	fs push ecx
  42891d:	jae    0x428922
  42891f:	arpl   WORD PTR [ecx+ecx*2],ax
  428922:	cmp    DWORD PTR [ecx],0xfffffffd
  428925:	call   0x10eff47
  42892a:	iret   
  42892b:	dec    ebx
  42892c:	dec    edx
  42892d:	sub    DWORD PTR [eax+0xf5ed42],edi
  428933:	mov    DWORD PTR [edi+ecx*2],esp
  428936:	pushf  
  428937:	jno    0x428941
  428939:	pop    edi
  42893a:	xor    ecx,DWORD PTR [eax]
  42893c:	outs   dx,DWORD PTR ds:[esi]
  42893d:	mov    gs,WORD PTR [eax+0x39a24078]
  428943:	imul   edx,edi,0x8b50191e
  428949:	add    BYTE PTR [edx-0x7b],al
  42894c:	in     eax,dx
  42894d:	rcl    DWORD PTR [ebx],0x41
  428950:	add    BYTE PTR ds:0xf52e3a61,ch
  428956:	dec    esi
  428957:	xchg   edx,ebx
  428959:	loop   0x4288f3
  42895b:	add    BYTE PTR [edx+0x17],ch
  42895e:	and    DWORD PTR [ebp+edi*8-0x7b85b712],edx
  428965:	add    ebx,DWORD PTR [edi+0x50]
  428968:	ret    0x2ed7
  42896b:	fwait
  42896c:	mov    BYTE PTR [ebx],ah
  42896e:	inc    ebp
  42896f:	lock add BYTE PTR [ecx],bl
  428972:	adc    DWORD PTR [ecx-0x50fcea43],edi
  428978:	retf   
  428979:	add    esp,DWORD PTR [ebp+edx*2-0x56124423]
  428980:	call   0x4e4b8fd
  428985:	call   0xb440:0x672a7c24
  42898c:	push   ds
  42898d:	stos   BYTE PTR es:[edi],al
  42898e:	cld    
  42898f:	sub    eax,0xb7df8403
  428994:	mul    bh
  428996:	and    bl,al
  428998:	fisub  WORD PTR [esi+0x10a0033]
  42899e:	loope  0x4289fb
  4289a0:	mov    ebp,0xecdbab
  4289a5:	(bad)  
  4289a6:	jle    0x428936
  4289a8:	xor    eax,0x74d38311
  4289ad:	add    eax,esp
  4289af:	push   edx
  4289b0:	scas   eax,DWORD PTR es:[edi]
  4289b1:	mov    eax,ds:0x7fb82ea5
  4289b6:	pushf  
  4289b7:	arpl   WORD PTR [eax],ax
  4289b9:	test   al,0xe7
  4289bb:	std    
  4289bc:	inc    edx
  4289bd:	push   0xffffff98
  4289bf:	cmp    BYTE PTR [edx],dl
  4289c1:	call   0xdba79170
  4289c6:	mov    BYTE PTR ds:0x71d4602c,dh
  4289cc:	ds nop
  4289ce:	add    esi,DWORD PTR [ebx-0x11]
  4289d1:	or     BYTE PTR [edi+eax*4-0x2a9a4f20],cl
  4289d8:	fld    DWORD PTR [eax]
  4289da:	daa    
  4289db:	jmp    0x7e44d1d0
  4289e0:	pop    esi
  4289e1:	cld    
  4289e2:	add    BYTE PTR [esi],al
  4289e4:	dec    ebp
  4289e5:	add    esp,DWORD PTR [edi+0x61]
  4289e8:	stos   BYTE PTR es:[edi],al
  4289e9:	sub    bh,BYTE PTR [edx-0x65b460f9]
  4289ef:	mov    ebp,DWORD PTR [eax]
  4289f1:	xor    BYTE PTR [edi-0x60],bh
  4289f4:	push   esp
  4289f5:	das    
  4289f6:	add    BYTE PTR [esi],ch
  4289f8:	or     ebx,DWORD PTR [esi-0x144da32e]
  4289fe:	jmp    0x33796b0a
  428a03:	cmp    al,0x3
  428a05:	and    BYTE PTR [edx-0x3a],bh
  428a08:	cmp    eax,0x41e03f96
  428a0d:	add    BYTE PTR ds:0xfa4caa8b,cl
  428a13:	outs   dx,DWORD PTR ds:[esi]
  428a14:	cmp    al,BYTE PTR [eax]
  428a16:	aaa    
  428a17:	xchg   edx,eax
  428a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a19:	shl    BYTE PTR [edi+ebx*1-0x49ff8363],1
  428a20:	ret    
  428a21:	into   
  428a22:	shr    esp,1
  428a24:	dec    eax
  428a25:	push   eax
  428a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a27:	add    esp,edi
  428a29:	shl    BYTE PTR [edx],0x81
  428a2c:	mov    ebp,0x1dd48e26
  428a31:	dec    ebx
  428a32:	add    BYTE PTR [esi],ch
  428a34:	aas    
  428a35:	push   esp
  428a36:	test   BYTE PTR [ebx-0x3b],0x40
  428a3a:	mov    ebx,0x5bfca200
  428a3f:	mov    cl,0x70
  428a41:	push   edx
  428a42:	or     ah,dh
  428a44:	add    BYTE PTR [ecx],bl
  428a46:	mov    edx,0x17d5bfe1
  428a4b:	dec    esi
  428a4c:	scas   al,BYTE PTR es:[edi]
  428a4d:	add    BYTE PTR [eax-0x1e],bh
  428a50:	int    0xfe
  428a52:	or     al,0xa7
  428a54:	adc    al,BYTE PTR [ebx-0x370dcafe]
  428a5a:	or     ecx,edx
  428a5c:	xchg   DWORD PTR [eax+0xd],eax
  428a5f:	jmp    DWORD PTR [ecx]
  428a61:	add    BYTE PTR [ebp-0x1a],ch
  428a64:	dec    esi
  428a65:	or     bl,cl
  428a67:	mov    esp,eax
  428a69:	and    ecx,DWORD PTR [edx]
  428a6b:	sub    esi,DWORD PTR gs:[ebx+0x5b]
  428a6f:	(bad)  
  428a70:	or     edx,DWORD PTR [ecx+eax*8+0x0]
  428a74:	loope  0x428ae1
  428a76:	addr16 jge 0x428a72
  428a79:	cmp    BYTE PTR [eax],ch
  428a7b:	cwde   
  428a7c:	je     0x428a7e
  428a7e:	jo     0x428aa3
  428a80:	mov    ebp,0xe460b26a
  428a85:	lds    ebx,FWORD PTR [esi]
  428a87:	sub    eax,0xcec034b1
  428a8c:	xor    BYTE PTR [ecx],dl
  428a8e:	add    eax,0x7400453f
  428a93:	ret    0x8929
  428a96:	mov    ds:0x12803958,al
  428a9b:	gs xchg esp,eax
  428a9d:	add    DWORD PTR [esi+0x47cd64c0],edi
  428aa3:	loop   0x428aa5
  428aa5:	mov    edx,0x7af648db
  428aaa:	(bad)  
  428aab:	cmp    edi,DWORD PTR [ebp+0x400597f]
  428ab1:	cmp    dh,BYTE PTR [ebx]
  428ab3:	shr    edx,1
  428ab5:	adc    BYTE PTR [edx+0x5f],dh
  428ab8:	ds cmp ebp,esp
  428abb:	add    BYTE PTR [edi],0x7d
  428abe:	pop    ds
  428abf:	xchg   DWORD PTR [eax+0x1142348b],edx
  428ac5:	add    BYTE PTR [esi],dh
  428ac7:	jae    0x428a8f
  428ac9:	mov    bh,0x9b
  428acb:	jb     0x428b4c
  428acd:	add    BYTE PTR [edx],ah
  428acf:	std    
  428ad0:	xchg   ebp,eax
  428ad1:	(bad)  
  428ad2:	aaa    
  428ad3:	mov    ebp,0x1675cbc5
  428ad8:	ds push edx
  428ada:	das    
  428adb:	add    ch,cl
  428add:	dec    esp
  428ade:	clc    
  428adf:	shr    BYTE PTR [ebx-0x5d],1
  428ae2:	std    
  428ae3:	sbb    eax,0xd01d5a5d
  428ae8:	mov    ch,0x9f
  428aea:	add    BYTE PTR [ecx-0x61],0x57
  428aee:	test   DWORD PTR [ebx+0x6b],edx
  428af1:	add    BYTE PTR [eax+0x54],ch
  428af4:	xor    DWORD PTR [edi+0x59],0x24
  428af8:	pop    edi
  428af9:	ds pop es
  428afb:	sub    BYTE PTR [ecx-0x7f83552a],ch
  428b01:	xchg   DWORD PTR [ecx],esi
  428b03:	call   DWORD PTR [esi]
  428b05:	add    DWORD PTR [eax-0x50],esp
  428b08:	sbb    BYTE PTR [esi+0x8d3585c],bl
  428b0e:	xlat   BYTE PTR ds:[ebx]
  428b0f:	add    cl,bh
  428b11:	jnp    0x428b1c
  428b13:	fsub   QWORD PTR [eax+0x848198]
  428b19:	push   eax
  428b1a:	in     al,0xf2
  428b1c:	add    eax,0x71a2d2ab
  428b21:	add    BYTE PTR [eax],dh
  428b23:	push   esi
  428b24:	or     DWORD PTR [esi+ebp*8],0xffffffec
  428b28:	fadd   QWORD PTR [bx+di]
  428b2b:	imul   eax,DWORD PTR [eax-0x7d0624db],0x2f
  428b32:	or     BYTE PTR [esi+0x71],bl
  428b35:	pusha  
  428b36:	cs pop edi
  428b38:	push   esp
  428b39:	lods   al,BYTE PTR ds:[esi]
  428b3a:	add    BYTE PTR [edi+esi*4],bl
  428b3d:	cld    
  428b3e:	sbb    DWORD PTR [eax-0x4912fc44],edx
  428b44:	scas   al,BYTE PTR es:[edi]
  428b45:	inc    eax
  428b46:	mov    al,ds:0x6f52e8ea
  428b4b:	push   ebx
  428b4c:	add    BYTE PTR [eax-0xa],dh
  428b4f:	pushf  
  428b50:	mov    bl,0x95
  428b52:	cmp    BYTE PTR [esi],bl
  428b54:	js     0x428ba0
  428b56:	dec    ebp
  428b57:	sti    
  428b58:	add    DWORD PTR [ebx+esi*2-0x74],esp
  428b5c:	mov    ds:0x13e8d427,al
  428b61:	add    ebx,edi
  428b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b64:	ja     0x428b20
  428b66:	jmp    0x428bde
  428b68:	mov    dh,0xf8
  428b6a:	adc    DWORD PTR [edx],edx
  428b6c:	add    ecx,DWORD PTR [ecx-0x57]
  428b6f:	push   ebx
  428b70:	push   eax
  428b71:	ins    DWORD PTR es:[edi],dx
  428b72:	push   esi
  428b73:	adc    BYTE PTR [eax],0x8
  428b76:	arpl   si,di
  428b78:	aad    0x10
  428b7a:	icebp  
  428b7b:	(bad)  
  428b7c:	mov    edi,0x3d51007a
  428b81:	call   0x71bf58c0
  428b86:	or     DWORD PTR [eax],eax
  428b88:	fisub  WORD PTR ds:0x2373b75e
  428b8e:	mov    ah,0x5a
  428b90:	cmp    dh,dh
  428b92:	je     0x428b94
  428b94:	lods   al,BYTE PTR ds:[esi]
  428b95:	pop    ds
  428b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b97:	push   edx
  428b98:	(bad)  
  428b99:	call   0x3215:0xce750425
  428ba0:	sbb    dh,bh
  428ba2:	test   dh,dh
  428ba4:	jmp    0x73a:0x9eaecdc0
  428bab:	mov    ch,0x85
  428bad:	mov    ss,WORD PTR [edx-0x3bd06f39]
  428bb3:	call   0xec8d9a6e
  428bb8:	repnz scas al,BYTE PTR es:[edi]
  428bba:	shr    DWORD PTR [esi-0x51],0xd3
  428bbe:	mov    cl,0x20
  428bc0:	push   0xffffffb7
  428bc2:	add    BYTE PTR [eax+esi*1],cl
  428bc5:	gs adc al,al
  428bc8:	jo     0x428c02
  428bca:	cmp    eax,0x5b920e00
  428bcf:	jecxz  0x428be7
  428bd1:	fisubr DWORD PTR ds:0x6a890049
  428bd7:	leave  
  428bd8:	push   0xac2031dd
  428bdd:	add    BYTE PTR [esi-0x2],dh
  428be0:	dec    eax
  428be1:	sub    ch,BYTE PTR [ebp+0x3df90ee4]
  428be7:	cs add eax,0xf005d5c
  428bed:	or     al,0x89
  428bef:	outs   dx,BYTE PTR ds:[esi]
  428bf0:	hlt    
  428bf1:	in     eax,dx
  428bf2:	or     eax,DWORD PTR [eax]
  428bf4:	pop    es
  428bf5:	mov    eax,ds:0xfab13068
  428bfa:	into   
  428bfb:	cdq    
  428bfc:	add    BYTE PTR [ebx-0x553ca601],cl
  428c02:	mov    ds:0x8000b3c6,al
  428c07:	cmp    al,0x9b
  428c09:	test   DWORD PTR [edi+0xd7f35b],esp
  428c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c10:	retf   
  428c11:	mov    al,ds:0x5f9d45c5
  428c16:	mov    esp,0xa40c201
  428c1b:	xchg   edi,eax
  428c1c:	push   0xffffffc1
  428c1e:	nop
  428c1f:	aam    0xda
  428c21:	lea    eax,[eax]
  428c23:	and    eax,0xea060b22
  428c28:	add    eax,0x5d003b4d
  428c2d:	jns    0x428c80
  428c2f:	ret    
  428c30:	arpl   bp,bp
  428c32:	ror    ebx,1
  428c34:	out    0x52,al
  428c36:	jle    0x428c5b
  428c38:	add    BYTE PTR [esi-0x437e88aa],bh
  428c3e:	cmp    eax,0x3f2e730c
  428c43:	les    ebx,FWORD PTR [ecx]
  428c45:	add    BYTE PTR [eax+0x41],dh
  428c48:	ret    
  428c49:	fwait
  428c4a:	div    BYTE PTR [esi]
  428c4c:	add    BYTE PTR [edx],dh
  428c4e:	bound  esi,QWORD PTR [ecx]
  428c50:	and    ebx,DWORD PTR es:[ecx-0x490bece3]
  428c57:	or     DWORD PTR [esi+0x7fdce641],ebx
  428c5d:	add    ch,cl
  428c5f:	dec    esi
  428c60:	ds xchg ebp,eax
  428c62:	push   ebx
  428c63:	add    dh,BYTE PTR [ebp+0x3880e9fb]
  428c69:	xlat   BYTE PTR ds:[ebx]
  428c6a:	pusha  
  428c6b:	add    edi,DWORD PTR [eax+0x3c]
  428c6e:	in     al,dx
  428c6f:	mov    cl,BYTE PTR [esi]
  428c71:	neg    bl
  428c73:	aad    0xa9
  428c75:	and    BYTE PTR [edx-0x21add4eb],al
  428c7b:	push   cs
  428c7c:	into   
  428c7d:	push   edi
  428c7e:	jne    0x428c49
  428c80:	pusha  
  428c81:	aas    
  428c82:	mov    eax,ds:0x3a7a97a8
  428c87:	pop    edx
  428c88:	push   0xfffffff8
  428c8a:	call   0x2af28c91
  428c8f:	int    0x7f
  428c91:	pop    ss
  428c92:	lods   al,BYTE PTR ds:[esi]
  428c93:	addr16 pop ds
  428c95:	add    ah,ah
  428c97:	pop    eax
  428c98:	retf   
  428c99:	in     eax,0x2f
  428c9b:	push   ds
  428c9c:	sub    esp,DWORD PTR [ebp-0x37929000]
  428ca2:	stos   BYTE PTR es:[edi],al
  428ca3:	cdq    
  428ca4:	or     ebp,DWORD PTR [edi-0x2168e1be]
  428caa:	out    dx,al
  428cab:	add    BYTE PTR [esi+ecx*8],cl
  428cae:	(bad)  [esi+edi*1]
  428cb1:	and    BYTE PTR [edi],al
  428cb3:	jne    0x428d11
  428cb5:	shr    cl,1
  428cb7:	xor    esp,DWORD PTR [eax]
  428cb9:	sub    eax,0x1d5892c7
  428cbe:	or     DWORD PTR [ebp+0x23],0xffffffc0
  428cc2:	or     bh,bh
  428cc4:	push   cs
  428cc5:	mov    ebp,0x2c00aea5
  428cca:	xchg   esi,eax
  428ccb:	push   ecx
  428ccc:	fs cdq 
  428cce:	pop    ds
  428ccf:	outs   dx,BYTE PTR ds:[esi]
  428cd0:	in     eax,dx
  428cd1:	and    eax,0xc7781df4
  428cd6:	add    BYTE PTR [ebx-0x46],al
  428cd9:	aam    0x69
  428cdb:	gs push 0xe
  428cde:	push   es
  428cdf:	add    BYTE PTR [ebp+eiz*4-0x29c8fb1],bl
  428ce6:	ja     0x428d2f
  428ce8:	add    ah,bh
  428cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ceb:	cmp    BYTE PTR [esi-0x2c17b3d7],dh
  428cf1:	add    DWORD PTR [ecx+ebp*8-0x35761fd2],ebp
  428cf8:	pop    ss
  428cf9:	shl    BYTE PTR [ecx+0x57],1
  428cfc:	add    BYTE PTR [ecx+0xffb1ad6],ah
  428d02:	jecxz  0x428d4d
  428d04:	xchg   ebp,eax
  428d05:	jge    0x428d77
  428d07:	add    BYTE PTR ds:0x908b7be6,bh
  428d0d:	enter  0xc39d,0xb
  428d11:	xchg   esi,eax
  428d12:	adc    cl,ch
  428d14:	or     BYTE PTR fs:[ebx+0x2ca6ab71],0x0
  428d1c:	shr    BYTE PTR [eax+0x12792295],cl
  428d22:	sbb    DWORD PTR [edx],edi
  428d24:	aas    
  428d25:	(bad)  [ecx]
  428d27:	and    BYTE PTR [eax],0x57
  428d2a:	and    ecx,DWORD PTR [ebx+0xd75cfb]
  428d30:	push   ss
  428d31:	repz xor BYTE PTR [eax-0x5fbaf71a],cl
  428d38:	add    BYTE PTR [esi+0x44af5639],dh
  428d3e:	jecxz  0x428d1d
  428d40:	sti    
  428d41:	push   es
  428d42:	jnp    0x428dbc
  428d44:	sbb    DWORD PTR [ebx],eax
  428d46:	in     eax,dx
  428d47:	inc    esp
  428d48:	cmp    dl,dl
  428d4a:	mov    ds:0x7a0700f3,eax
  428d4f:	outs   dx,DWORD PTR ds:[esi]
  428d50:	ss cwde 
  428d52:	loopne 0x428cee
  428d54:	and    BYTE PTR [eax],al
  428d56:	inc    ecx
  428d57:	arpl   WORD PTR [esi+0xd],di
  428d5a:	fs jno 0x428d7c
  428d5d:	add    DWORD PTR [eax],eax
  428d5f:	mov    esi,0xf22dd0a8
  428d64:	xor    cl,BYTE PTR [esi+0x45]
  428d67:	add    BYTE PTR [edx-0xf],ah
  428d6a:	fdivr  QWORD PTR [edx-0x74]
  428d6d:	xor    al,0xf3
  428d6f:	popa   
  428d70:	nop
  428d71:	cmp    DWORD PTR [esi],edi
  428d73:	pop    ds
  428d74:	retf   
  428d75:	add    BYTE PTR [esi-0x3bb913d2],ch
  428d7b:	push   ecx
  428d7c:	pop    ebx
  428d7d:	cmp    DWORD PTR [eax],ebx
  428d7f:	mov    ds,WORD PTR [edi+0x14c1a83c]
  428d85:	cli    
  428d86:	xor    eax,0x3dfd1b5
  428d8b:	sub    al,ch
  428d8d:	stc    
  428d8e:	push   es
  428d8f:	rol    BYTE PTR [ebp-0x783e6950],cl
  428d95:	add    BYTE PTR [eax],bl
  428d97:	frstor [ebp+0x1b]
  428d9a:	cdq    
  428d9b:	push   ss
  428d9c:	test   eax,0x9317012e
  428da1:	imul   esp,DWORD PTR [ecx+0x40],0xc2e8aa89
  428da8:	adc    al,0x1f
  428daa:	jns    0x428d73
  428dac:	scas   eax,DWORD PTR es:[edi]
  428dad:	xor    BYTE PTR [edx],0xc3
  428db0:	enter  0x76fc,0x72
  428db4:	cmp    edi,ebx
  428db6:	xor    esi,edx
  428db8:	add    DWORD PTR [edi],eax
  428dba:	sbb    dl,dl
  428dbc:	out    0xbb,eax
  428dbe:	leave  
  428dbf:	inc    ebp
  428dc0:	pusha  
  428dc1:	fld    TBYTE PTR [eax-0xe]
  428dc4:	pop    ss
  428dc5:	add    ebx,ecx
  428dc7:	push   ecx
  428dc8:	xor    eax,0xe8aae5f0
  428dcd:	ror    bl,0x30
  428dd0:	pop    ss
  428dd1:	pusha  
  428dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428dd3:	or     bl,BYTE PTR [ebx+ecx*4]
  428dd6:	add    BYTE PTR [eax+0x778bbee2],cl
  428ddc:	jmp    0x16dd38e1
  428de1:	icebp  
  428de2:	cmp    BYTE PTR [ebx],cl
  428de4:	test   DWORD PTR [edx],esi
  428de6:	add    ecx,DWORD PTR [edi-0x43]
  428de9:	dec    ecx
  428dea:	lahf   
  428deb:	addr16 push 0xffffffb9
  428dee:	xor    eax,0x7d7ef4c9
  428df3:	add    BYTE PTR [eax+0x71],ch
  428df6:	jg     0x428e71
  428df8:	test   eax,0x2721b1
  428dfd:	test   DWORD PTR [ebp+0x46d4235e],ebx
  428e03:	or     al,0x8e
  428e05:	pop    eax
  428e06:	inc    ebp
  428e07:	call   0x7fc5b30c
  428e0c:	push   ecx
  428e0d:	jmp    0x3b78:0x1b0013df
  428e14:	shl    BYTE PTR [ebx],cl
  428e16:	jnp    0x428d9a
  428e18:	outs   dx,BYTE PTR ds:[esi]
  428e19:	add    ah,ch
  428e1b:	push   ds
  428e1c:	test   al,0x91
  428e1e:	adc    dl,BYTE PTR [edx+ebp*8-0x509fff67]
  428e25:	fs xor al,0xa0
  428e28:	sub    DWORD PTR [ebp-0x6d],edi
  428e2b:	in     al,0xce
  428e2d:	add    BYTE PTR [esi+ebx*4+0x68],dl
  428e31:	inc    esi
  428e32:	neg    al
  428e34:	inc    esp
  428e35:	push   0x39
  428e37:	in     eax,dx
  428e38:	mov    WORD PTR [ecx+0x6b7a33],cs
  428e3e:	sub    esi,DWORD PTR [ebx+0x41]
  428e41:	dec    esp
  428e42:	leave  
  428e43:	add    BYTE PTR [edi+0x2c],al
  428e46:	and    DWORD PTR [ecx],0x94ecc77f
  428e4c:	xor    BYTE PTR [eax+0x17],cl
  428e4f:	and    BYTE PTR [edi],0xd0
  428e52:	dec    ebx
  428e53:	add    BYTE PTR [esi-0x17],ah
  428e56:	pop    ecx
  428e57:	jnp    0x428eac
  428e59:	mov    eax,ds:0x4c03e18e
  428e5e:	pop    ds
  428e5f:	cmp    eax,0xd8f0c382
  428e64:	jg     0x428eb5
  428e66:	fild   WORD PTR [edx]
  428e68:	cmp    DWORD PTR [edx-0x36],ecx
  428e6b:	inc    edx
  428e6c:	pop    esi
  428e6d:	enter  0x5e,0x8
  428e71:	add    al,0xaf
  428e73:	nop
  428e74:	lods   eax,DWORD PTR ds:[esi]
  428e75:	das    
  428e76:	loop   0x428e74
  428e78:	int    0xd8
  428e7a:	lods   eax,DWORD PTR ds:[esi]
  428e7b:	cld    
  428e7c:	add    DWORD PTR [ebx+eax*2+0x1c],esi
  428e80:	xor    ch,BYTE PTR [eax-0x54]
  428e83:	adc    eax,0xe2b54d00
  428e88:	cmp    DWORD PTR [ecx-0x16],ebp
  428e8b:	add    dh,dh
  428e8d:	es and eax,0x622c71f7
  428e93:	add    BYTE PTR [esi-0x30e70101],bl
  428e99:	nop
  428e9a:	dec    ebx
  428e9b:	daa    
  428e9c:	dec    esp
  428e9d:	xor    al,0xdf
  428e9f:	add    bh,bl
  428ea1:	or     eax,0x6bf5f0b0
  428ea6:	(bad)  
  428ea7:	add    BYTE PTR [esi+0x29db720c],dl
  428ead:	dec    edx
  428eae:	and    BYTE PTR [eax+0x13],cl
  428eb1:	mov    ebp,0xf0345a
  428eb6:	push   ss
  428eb7:	add    dl,dl
  428eb9:	test   BYTE PTR [edi+0x39859c13],cl
  428ebf:	int3   
  428ec0:	pxor   mm3,QWORD PTR [ebx]
  428ec3:	aad    0x18
  428ec5:	cs jo  0xddb73cb3
  428ecc:	test   eax,0xd09e6b00
  428ed1:	dec    esp
  428ed2:	sbb    BYTE PTR [ebx+0xa05c21b],0x19
  428ed9:	iret   
  428eda:	repz xor bh,dh
  428edd:	sar    BYTE PTR [eax],0x6d
  428ee0:	cwde   
  428ee1:	pop    esi
  428ee2:	jp     0x428ea8
  428ee4:	add    BYTE PTR [edi],dh
  428ee6:	outs   dx,BYTE PTR ds:[esi]
  428ee7:	repnz stc 
  428ee9:	adc    DWORD PTR [edx-0x36fe1b30],edi
  428eef:	cld    
  428ef0:	xlat   BYTE PTR ds:[ebx]
  428ef1:	in     eax,0x6f
  428ef3:	mov    dl,0x63
  428ef5:	fadd   QWORD PTR [edx+ebp*2+0x15005877]
  428efc:	lds    ebp,FWORD PTR [ebp+0xd526e5d]
  428f02:	push   esp
  428f03:	add    bh,ch
  428f05:	loop   0x428eac
  428f07:	xor    bl,dl
  428f09:	sahf   
  428f0a:	push   ebp
  428f0b:	imul   ebx,DWORD PTR [eax-0x19],0xc28d1648
  428f12:	adc    ch,BYTE PTR [eax-0x2e79fc52]
  428f18:	jg     0x428ed0
  428f1a:	sar    BYTE PTR [ebp-0x6a],0x97
  428f1e:	hlt    
  428f1f:	iret   
  428f20:	jg     0x428ef5
  428f22:	add    BYTE PTR [eax-0x5b],ch
  428f25:	pop    edx
  428f26:	adc    DWORD PTR [ecx],ecx
  428f28:	and    DWORD PTR [ecx+0x174870b6],ecx
  428f2e:	pop    edi
  428f2f:	shl    BYTE PTR [edx-0x4bbfffe3],0x49
  428f36:	int    0x90
  428f38:	icebp  
  428f39:	inc    ecx
  428f3a:	add    BYTE PTR [eax],cl
  428f3c:	adc    esp,ebx
  428f3e:	arpl   WORD PTR [esi-0x29],bp
  428f41:	mov    ds:0x37230136,eax
  428f46:	rcr    dl,cl
  428f48:	mov    edx,0xc02a799c
  428f4d:	and    BYTE PTR [edi-0x5fffc0bc],ah
  428f53:	mov    ebp,DWORD PTR [ebx+0x3a]
  428f56:	mov    ebx,0x3d7749aa
  428f5b:	sbb    al,0xc6
  428f5d:	add    bl,ah
  428f5f:	div    BYTE PTR [ebx]
  428f61:	gs inc edi
  428f63:	in     eax,0x75
  428f65:	add    ebp,eax
  428f67:	and    al,0xe1
  428f69:	cdq    
  428f6a:	adc    ecx,DWORD PTR [ecx]
  428f6c:	int3   
  428f6d:	cld    
  428f6e:	add    BYTE PTR [eax],al
  428f70:	sub    al,0x83
  428f72:	mov    edx,0xb99e8f14
  428f77:	nop
  428f78:	ss jb  0x428f49
  428f7b:	sbb    eax,0xc02dee06
  428f80:	xchg   esp,eax
  428f81:	je     0x428ff4
  428f83:	int3   
  428f84:	mov    edi,0x597b009c
  428f89:	xor    BYTE PTR [edi],ch
  428f8b:	hlt    
  428f8c:	jl     0x428f45
  428f8e:	inc    esp
  428f8f:	je     0x41292d50
  428f95:	sti    
  428f96:	sbb    cl,BYTE PTR [eax+ebx*8-0x6c1bfedb]
  428f9d:	or     ebx,DWORD PTR [ebx+0x21]
  428fa0:	cli    
  428fa1:	dec    esi
  428fa2:	pusha  
  428fa3:	imul   edx,esi,0x75
  428fa6:	mov    eax,DWORD PTR [eax]
  428fa8:	arpl   ax,di
  428faa:	cmp    ebx,DWORD PTR [edi]
  428fac:	push   esp
  428fad:	je     0x428ff5
  428faf:	hlt    
  428fb0:	add    ebx,DWORD PTR [ebx]
  428fb2:	cmp    eax,0x5685cc0d
  428fb7:	test   al,0xf9
  428fb9:	mov    esi,0x2bf700df
  428fbe:	(bad)  
  428fbf:	fs cs iret 
  428fc2:	retf   
  428fc3:	xor    eax,DWORD PTR [ebx]
  428fc5:	popa   
  428fc6:	sbb    al,0x3a
  428fc8:	mov    DWORD PTR [edi],ecx
  428fca:	stos   DWORD PTR es:[edi],eax
  428fcb:	loopne 0x428fdd
  428fcd:	sbb    ah,ch
  428fcf:	add    dh,al
  428fd1:	mov    eax,0xb1b634e6
  428fd6:	mov    ds:0xfea01ea8,al
  428fdb:	stos   BYTE PTR es:[edi],al
  428fdc:	shl    BYTE PTR [ecx-0x4e],0x98
  428fe0:	rol    DWORD PTR [edi],1
  428fe2:	clc    
  428fe3:	add    edi,DWORD PTR [edi-0x5a]
  428fe6:	cli    
  428fe7:	and    eax,0xe6f88ad3
  428fec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fed:	ins    DWORD PTR es:[edi],dx
  428fee:	add    BYTE PTR [ecx-0x4c5d5c5],bl
  428ff4:	loopne 0x429055
  428ff6:	dec    edx
  428ff7:	out    dx,al
  428ff8:	jp     0x428ffb
  428ffa:	(bad)  
  428ffc:	dec    ebx
  428ffd:	inc    ebp
  428ffe:	add    edx,DWORD PTR [esi-0x21]
  429001:	fdiv   QWORD PTR [edx-0x60bf872]
  429007:	sub    cl,BYTE PTR [ecx]
  429009:	xchg   edi,eax
  42900a:	imul   eax,DWORD PTR [eax+0x251b5e94],0x65b402fe
  429014:	jne    0x429029
  429016:	out    dx,al
  429017:	dec    edx
  429018:	loopne 0x428ff7
  42901a:	fmulp  st(4),st
  42901c:	push   ds
  42901d:	(bad)  [ecx-0xa]
  429020:	pop    esp
  429021:	arpl   WORD PTR [eax],ax
  429023:	push   ebp
  429024:	cmp    BYTE PTR [ebp-0x19],dh
  429027:	in     al,0xda
  429029:	add    BYTE PTR [esi-0xce7f170],ah
  42902f:	mov    esi,0x51c0ad3
  429034:	jl     0x429095
  429036:	adc    bl,BYTE PTR [esi-0x4]
  429039:	pop    esi
  42903a:	push   cs
  42903b:	test   al,0xd4
  42903d:	mov    dh,0xaf
  42903f:	aad    0x20
  429041:	xchg   edx,edx
  429043:	xor    DWORD PTR [edi-0x8],ebp
  429046:	add    dh,bl
  429048:	mov    bh,0xac
  42904a:	bound  edi,QWORD PTR [edx]
  42904c:	and    ecx,DWORD PTR [ecx-0x4f4dc7f2]
  429052:	pop    ss
  429053:	cmp    BYTE PTR [edx+0x0],bh
  429056:	push   esi
  429057:	loop   0x428feb
  429059:	sub    cl,BYTE PTR [eax+0x7e]
  42905c:	add    dh,ch
  42905e:	stos   DWORD PTR es:[edi],eax
  42905f:	fstp   st(2)
  429061:	xchg   edi,eax
  429062:	aad    0x3f
  429064:	in     al,dx
  429065:	or     esi,DWORD PTR [ecx]
  429067:	popf   
  429068:	push   esp
  429069:	xor    al,0x85
  42906b:	mov    esp,0xab20adc2
  429070:	test   ch,ah
  429072:	cdq    
  429073:	add    al,0x8f
  429075:	fidivr WORD PTR [eax+0x69]
  429078:	add    al,0x82
  42907a:	inc    esp
  42907b:	clc    
  42907c:	pushf  
  42907d:	idiv   ch
  42907f:	add    BYTE PTR [eax+0x105e879d],dh
  429085:	fwait
  429086:	cmp    al,0x44
  429088:	clc    
  429089:	adc    eax,0x40117c40
  42908e:	push   edx
  42908f:	mov    edx,0x5c11fa46
  429094:	lahf   
  429095:	test   BYTE PTR [ecx],cl
  429097:	or     ah,BYTE PTR [eax-0x11]
  42909a:	(bad)
  42909e:	scas   eax,DWORD PTR es:[edi]
  42909f:	pop    ds
  4290a0:	xchg   ebp,eax
  4290a1:	add    BYTE PTR ds:0x5efd7648,ah
  4290a8:	dec    edx
  4290a9:	add    BYTE PTR [eax],bh
  4290ab:	call   0x979042fe
  4290b0:	fsub   st,st(0)
  4290b2:	add    BYTE PTR [ecx+0x51b3c005],ch
  4290b8:	mov    al,ds:0x82028943
  4290bd:	out    dx,eax
  4290be:	daa    
  4290bf:	pop    ss
  4290c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290c1:	cld    
  4290c2:	jle    0x4290c4
  4290c4:	and    al,0x3
  4290c6:	and    al,0xb2
  4290c8:	add    BYTE PTR [edi],bl
  4290ca:	dec    eax
  4290cb:	fstp   TBYTE PTR [edx+edi*8-0x1]
  4290cf:	add    dl,bl
  4290d1:	sub    dh,bl
  4290d3:	xchg   ecx,eax
  4290d4:	mov    al,ds:0x7117a7d8
  4290d9:	mov    dl,0x0
  4290db:	push   ecx
  4290dc:	push   es
  4290dd:	xchg   DWORD PTR [edi-0x6],eax
  4290e0:	int    0xf8
  4290e2:	adc    eax,0x3b02ce00
  4290e7:	xchg   edi,eax
  4290e8:	or     DWORD PTR [ebx],ebx
  4290ea:	mov    dh,0xa5
  4290ec:	add    ah,ah
  4290ee:	aam    0x37
  4290f0:	pusha  
  4290f1:	sbb    DWORD PTR [esi],edi
  4290f3:	dec    ecx
  4290f4:	int3   
  4290f5:	add    BYTE PTR [ecx],ah
  4290f7:	mov    WORD PTR [esi+eiz*2+0x79],fs
  4290fb:	inc    eax
  4290fc:	das    
  4290fd:	jo     0x4290ff
  4290ff:	cmp    BYTE PTR [ecx-0xcc65f46],bh
  429105:	in     eax,dx
  429106:	or     DWORD PTR [eax],eax
  429108:	mov    DWORD PTR [ebx+0x21],eax
  42910b:	pop    es
  42910c:	in     eax,0xe4
  42910e:	xchg   eax,esi
  429110:	add    al,bl
  429112:	fst    QWORD PTR cs:0x16fbf25a
  429119:	add    BYTE PTR [ebx-0x6c],bl
  42911c:	push   cs
  42911d:	iret   
  42911e:	inc    esi
  42911f:	add    eax,0x514f871f
  429124:	rol    DWORD PTR [eax],0x6
  429127:	cmp    ch,BYTE PTR [ebx]
  429129:	mov    edi,0x70fab42a
  42912e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42912f:	add    DWORD PTR [edi-0x3],edi
  429132:	mov    al,0x0
  429134:	mov    WORD PTR [ecx+0x2],ss
  42913a:	add    BYTE PTR [eax],al
  42913c:	add    BYTE PTR [eax],al
  42913e:	add    BYTE PTR [eax],al
  429140:	repnz add DWORD PTR [eax],eax
  429143:	add    BYTE PTR [ecx+edx*4+0x2],cl
	...
  42915a:	add    BYTE PTR [eax],al
  42915c:	add    BYTE PTR [eax],dl
  42915e:	inc    eax
  42915f:	add    al,dh
  429161:	jo     0x4291a4
  429163:	add    BYTE PTR [ebx+esi*1+0x40],ch
  42916a:	add    BYTE PTR [eax],al
  42916c:	jl     0x4290ff
  42916e:	inc    edx
  42916f:	add    BYTE PTR [eax+0x0],al
  429175:	jge    0x429177
  429177:	add    BYTE PTR [ecx+edx*4+0x42],bl
  42917b:	add    al,ch
  42917d:	add    DWORD PTR [eax+0x0],eax
  429180:	fadd   QWORD PTR [ecx]
  429182:	inc    eax
  429183:	add    dh,bl
  429185:	add    DWORD PTR [eax+0x0],eax
  429188:	lods   eax,DWORD PTR ds:[esi]
  429189:	pop    ss
  42918a:	inc    eax
  42918b:	add    BYTE PTR [esi-0x5bfffd6f],dl
  429191:	xchg   ecx,eax
  429192:	add    al,BYTE PTR [eax]
  429194:	add    BYTE PTR [eax],al
  429196:	add    BYTE PTR [eax],al
  429198:	dec    esp
  429199:	outs   dx,DWORD PTR ds:[esi]
  42919a:	popa   
  42919b:	fs dec esp
  42919d:	imul   esp,DWORD PTR [edx+0x72],0x41797261
  4291a4:	add    BYTE PTR [eax],al
  4291a6:	inc    edi
  4291a7:	gs je  0x4291fa
  4291aa:	jb     0x42921b
  4291ac:	arpl   WORD PTR [ecx+0x64],ax
  4291af:	fs jb  0x429217
  4291b2:	jae    0x429227
	...
